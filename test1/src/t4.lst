Sjasm Z80 Assembler v0.42c - www.xl2s.tk             [2021.09.03 - 14:23:32]

t4.asm
Errors: 0

       1   00:0000                      	OUTPUT	"t4.bin"
       2   00:8000                      	
       3   00:8000                      ;;=====================================================
       4   00:8000                      ;;DEFINICIÓN DE CONSTANTES
       5   00:8000                      ;;=====================================================	
       6   00:8000                      	include "constantes.asm"
       1.  00:8000                      ;;=====================================================
       2.  00:8000                      ;; FICHERO constantes.asm
       3.  00:8000                      ;;=====================================================
       4.  00:8000                      
       5.  00:8000                      ;;ETIQUETAS/CONSTANTES BIOS TECLADO
       6.  00:8000  (00:00D8)           GTTRIG		equ		#00D8	;Returns current trigger status
       7.  00:8000  (00:00D5)           GTSTCK		equ		#00D5	;Returns the joystick/cursors status
       8.  00:8000  (00:F3DB)           CLIKSW		equ		#F3DB	;deshabilita el sonido de clic cuando se pulsa una tecla
       9.  00:8000                      
      10.  00:8000                      ;;ETIQUETAS/CONSTANTES BIOS VDP
      11.  00:8000  (00:013E)           RDVDP		equ		#013E	;lee registro status VDP
      12.  00:8000  (00:0047)           WRTVDP		equ		#0047	;escribe registros del VDP
      13.  00:8000  (00:005C)           LDIRVM		equ		#005C	;RAM/ROM -> VRAM
      14.  00:8000  (00:0059)           LDIRMV		equ		#0059	;VRAM -> RAM
      15.  00:8000  (00:005F)           CHGMOD		equ		#005F	;cambia modo pantalla (screen mode)
      16.  00:8000  (00:0041)           DISSCR  	equ		#0041	;desactiva pantanlla
      17.  00:8000  (00:0044)           ENASCR  	equ		#0044	;activa pantalla
      18.  00:8000  (00:0062)           CHGCLR  	equ		#0062	;cambia color de pantalla (toca A y direcciones)
      19.  00:8000  (00:F3E9)           FORCLR		equ		#F3E9	;zona memoria color foreground
      20.  00:8000  (00:F3EA)           BAKCLR  	equ		#F3EA	;zona memoria color background
      21.  00:8000  (00:F3EB)           BDRCLR 		equ		#F3EB	;zona memoria bordercolor
      22.  00:8000  (00:00C3)           CLS			equ		#00C3	;limpia pantalla (necesita A=0)
      23.  00:8000                      
      24.  00:8000                      ;;ETIQUETAS/CONSTANTES REGISTROS VDP
      25.  00:8000  (00:F3DF)           RG0SAV		equ		#F3DF	;Mirror of VDP register 0 (Basic: VDP(0))
      26.  00:8000  (00:F3E0)           RG1SAV		equ		#F3E0	;Mirror of VDP register 1 (Basic: VDP(1))
      27.  00:8000  (00:F3E1)           RG2SAV		equ		#F3E1	;Mirror of VDP register 2 (Basic: VDP(2))
      28.  00:8000  (00:F3E2)           RG3SAV		equ		#F3E2	;Mirror of VDP register 3 (Basic: VDP(3))
      29.  00:8000  (00:F3E3)           RG4SAV		equ		#F3E3	;Mirror of VDP register 4 (Basic: VDP(4))
      30.  00:8000  (00:F3E4)           RG5SAV		equ		#F3E4	;Mirror of VDP register 5 (Basic: VDP(5))
      31.  00:8000  (00:F3E5)           RG6SAV		equ		#F3E5	;Mirror of VDP register 6 (Basic: VDP(6))
      32.  00:8000  (00:F3E6)           RG7SAV		equ		#F3E6	;Mirror of VDP register 7 (Basic: VDP(7))
      33.  00:8000  (00:F3E7)           STATFL		equ		#F3E7	;Mirror of VDP(8) status register (S#0)
      34.  00:8000                      
      35.  00:8000  (00:0099)           REGEST		equ		#0099	;registro de estado para escribir directamente en VRAM
      36.  00:8000  (00:0098)           REGESCVDP	equ		#0098	;registro donde escribir valor para VRAM
      37.  00:8000                      
      38.  00:8000                      ;;ETIQUETAS/CONSTANTES REGISTROS PSG (PARA JOYSTICK)
      39.  00:8000  (00:00A0)           PSG_A  equ  0a0h  ;reg address
      40.  00:8000  (00:00A1)           PSG_W  equ  0a1h  ;reg data WR
      41.  00:8000  (00:00A2)           PSG_R  equ  0a2h  ;reg data
      42.  00:8000                      
      43.  00:8000                      
      44.  00:8000                      ;;ETIQUETAS DE ZONAS DE MEMORIA DE LA VPD (MSX1)
      45.  00:8000  (00:0000)           CHRTBL		equ		#0000
      46.  00:8000  (00:1800)           TILMAP		equ		#1800
      47.  00:8000  (00:1B00)           SPRART		equ		#1B00
      48.  00:8000  (00:2000)           CLRTBL		equ		#2000
      49.  00:8000  (00:3800)           SPRTBL		equ		#3800
      50.  00:8000                      
      51.  00:8000                      
      52.  00:8000                      ;;ETIQUETAS ESTANDAR PARA DAR MÁS CLARIDAD AL CODIGO
      53.  00:8000  (00:0001)           SI			equ		1
      54.  00:8000  (00:0000)           NO			equ		0
      55.  00:8000  (00:0004)           LIMCADENCIA equ		4	;nº de veces que se ejecutará el disparo antes de ejecutar un disparo real (porque cuando se pulsa la tecl dispara 3 ó 4 veces de rápido que va)
      56.  00:8000                      ;hay que estudiar si 3 es un nº mejor
      57.  00:8000                      
      58.  00:8000                      
      59.  00:8000                      
      60.  00:8000                      ;;PALETA DE COLORES DEL MSX
      61.  00:8000  (00:0000)           COLTRASP	equ		0
      62.  00:8000  (00:0001)           COLNEGRO	equ		1
      63.  00:8000  (00:0002)           COLVERDE	equ		2
      64.  00:8000  (00:0003)           COLVERCLA	equ		3
      65.  00:8000  (00:0004)           COLAZULOSC	equ		4
      66.  00:8000  (00:0005)           COLAZULLA	equ		5
      67.  00:8000  (00:0006)           COLROJOOSC	equ		6
      68.  00:8000  (00:0007)           COLCYAN		equ		7
      69.  00:8000  (00:0008)           COLROJO		equ		8
      70.  00:8000  (00:0009)           COLROJOCLA	equ		9
      71.  00:8000  (00:000A)           COLAMAROSC	equ		10
      72.  00:8000  (00:000B)           COLAMARCLA	equ		11
      73.  00:8000  (00:000C)           COLVERDOSC	equ		12
      74.  00:8000  (00:000D)           COLMAGENTA	equ		13
      75.  00:8000  (00:000E)           COLGRIS		equ		14
      76.  00:8000  (00:000F)           COLBLANCO	equ		15
      77.  00:8000                      
      78.  00:8000                      
      79.  00:8000                      
      80.  00:8000                      ;;ETIQUETAS ESPECIFICAS PARA DAR MÁS CLARIDAD AL CODIGO (relacionadas con posiciones en mapa vdp)
      81.  00:8000  (00:02F8)           POSMAPLIN1  equ		#02F8
      82.  00:8000  (00:02D8)           POSMAPLIN2  equ		#02D8
      83.  00:8000  (00:02B8)           POSMAPLIN3  equ		#02B8
      84.  00:8000  (00:0298)           POSMAPLIN4  equ		#0298
      85.  00:8000  (00:0278)           POSMAPLIN5  equ		#0278
      86.  00:8000  (00:0258)           POSMAPLIN6  equ		#0258
      87.  00:8000  (00:0238)           POSMAPLIN7  equ		#0238
      88.  00:8000                      
      89.  00:8000  (00:000D)           POSCARAMAP	equ		#000D
      90.  00:8000  (00:0248)           POSVIDAS	equ		#0248
      91.  00:8000  (00:0011)           POSRELIMAP	equ		#0011
      92.  00:8000  (00:02C8)           POSRELIQ	equ		#02C8
      93.  00:8000  (00:0288)           POSENERG	equ		#0288
      94.  00:8000  (00:02B4)           POSNIVEL	equ		#02B4
      95.  00:8000  (00:0238)           POSMAPA		equ 	#0238
      96.  00:8000                      
      97.  00:8000  (00:01EE)           POSPUERABAJ equ		#01EE
      98.  00:8000  (00:008E)           POSPUERARRI equ		#008E
      99.  00:8000  (00:00FC)           POSPUERDERE equ		#00FC
     100.  00:8000  (00:00E1)           POSPUERIZQU equ		#00E1
     101.  00:8000                      
     102.  00:8000                      ;TILESAYUDAS
     103.  00:8000  (00:00C8)           ORACIONON	equ		200
     104.  00:8000  (00:00CC)           ORACIONOFF  equ		204
     105.  00:8000  (00:00D0)           CRUZON		equ		208
     106.  00:8000  (00:00D4)           CRUZOFF		equ		212
     107.  00:8000  (00:00D8)           AGUAON		equ		216
     108.  00:8000  (00:00DC)           AGUAOFF		equ		220
     109.  00:8000  (00:00E0)           ARMADON		equ		224
     110.  00:8000  (00:00E4)           ARMADOFF	equ		228
     111.  00:8000  (00:00E8)           PLANTAON	equ		232
     112.  00:8000  (00:00EC)           PLANTAOFF	equ		236
     113.  00:8000  (00:00F0)           VIDAEXTON	equ		240
     114.  00:8000  (00:00F4)           VIDAEXTOFF	equ		244
     115.  00:8000  (00:00F8)           BALLESON	equ		248
     116.  00:8000  (00:00FC)           BALLESOFF	equ		252
     117.  00:8000                      
     118.  00:8000                      
     119.  00:8000                      ;;ETIQUETAS ESPECIFICAS PARA DAR MÁS CLARIDAD AL CODIGO (relacionadas con posiciones en en el banco de memoria)
     120.  00:8000  (00:0013)           TILEPROTAM  equ		19		;tile del prota para pintar en mapa
     121.  00:8000  (00:0009)           TILEGRISM	equ		9		;tile gris que representa vacio (por donde el prota va pasando)
     122.  00:8000  (00:0010)           TILEMAPROJO equ		16
     123.  00:8000  (00:000F)           TILEMAPAMAR equ		15
     124.  00:8000  (00:000E)           TILEMAPVERD equ		14
     125.  00:8000                      
     126.  00:8000                      
     127.  00:8000                      ;;ETIQUETAS ESPECIFICAS PARA DAR MÁS CLARIDAD AL CODIGO (generales)
     128.  00:8000  (00:0008)           NMAXVIDREL	equ		8		;el número máximo de vidas y de reliquias es de 8
     129.  00:8000  (00:0007)           NHABNIVEL	equ		7
     130.  00:8000  (00:00F8)           MAXENERGIA  equ		248
     131.  00:8000  (00:00D9)           TILEENERG8  equ		217
     132.  00:8000  (00:00BA)           TILEENERG7  equ		186
     133.  00:8000  (00:009B)           TILEENERG6  equ		155
     134.  00:8000  (00:007C)           TILEENERG5  equ		124
     135.  00:8000  (00:005D)           TILEENERG4  equ		93
     136.  00:8000  (00:003E)           TILEENERG3  equ		62
     137.  00:8000  (00:001F)           TILEENERG2  equ		31
     138.  00:8000  (00:0000)           TILENEGRO	equ		0
     139.  00:8000                      
     140.  00:8000                      ;limites
     141.  00:8000  (00:0000)           LIMPANTIZQ  equ		0
     142.  00:8000  (00:00FF)           LIMPANTDER  equ		255
     143.  00:8000  (00:0000)           LIMPANTARR  equ		0
     144.  00:8000  (00:0080)           LIMPANTABA  equ		128
     145.  00:8000                      
     146.  00:8000                      
     147.  00:8000                      ;matriz de 7x7 empieza en 0, y fila y x col, cuento desde esquina sup izq
     148.  00:8000  (00:0006)           BASEMAPY	equ		6
     149.  00:8000  (00:0003)           BASEMAPX	equ		3
     150.  00:8000                      
     151.  00:8000                      
     152.  00:8000                      
     153.  00:8000                      ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
     154.  00:8000                      ;; CONSTANTES PARA INTERRUPCIONES
     155.  00:8000                      ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
     156.  00:8000  (00:FD9A)           H.KEYI		equ     	#FD9A
     157.  00:8000  (00:FD9F)           H.TIMI	 	equ     	#FD9F
     158.  00:8000                      
     159.  00:8000                      
     160.  00:8000                      ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
     161.  00:8000                      ;; CONSTANTES PARA SONIDO 
     162.  00:8000                      ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
     163.  00:8000                      
     164.  00:8000  (F000)              	map		#f000
     165.  00:8000                      
     166.  00:8000                      ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;PT3 REPLAYER
     167.  00:8000  (00:F000)           PT3_SETUP:		#1	;set bit0 to 1, if you want to play without looping
     168.  00:8000                      					;bit7 is set each time, when loop point is passed
     169.  00:8000  (00:F001)           PT3_MODADDR:	#2
     170.  00:8000  (00:F003)           PT3_CrPsPtr:	#2
     171.  00:8000  (00:F005)           PT3_SAMPTRS:	#2
     172.  00:8000  (00:F007)           PT3_OrnPtrs:	#2
     173.  00:8000  (00:F009)           PT3_PDSP:		#2
     174.  00:8000  (00:F00B)           PT3_CSP:		#2
     175.  00:8000  (00:F00D)           PT3_PSP:		#2
     176.  00:8000  (00:F00F)           PT3_PrNote:		#1
     177.  00:8000  (00:F010)           PT3_PrSlide:	#2
     178.  00:8000  (00:F012)           PT3_AdInPtA:	#2
     179.  00:8000  (00:F014)           PT3_AdInPtB:	#2
     180.  00:8000  (00:F016)           PT3_AdInPtC:	#2
     181.  00:8000  (00:F018)           PT3_LPosPtr:	#2
     182.  00:8000  (00:F01A)           PT3_PatsPtr:	#2
     183.  00:8000  (00:F01C)           PT3_Delay:		#1
     184.  00:8000  (00:F01D)           PT3_AddToEn:	#1
     185.  00:8000  (00:F01E)           PT3_Env_Del:	#1
     186.  00:8000  (00:F01F)           PT3_ESldAdd:	#2
     187.  00:8000  (00:F021)           PT3_NTL3:		#2	; AND A / NOP (note table creator)
     188.  00:8000                      
     189.  00:8000  (00:F023)           VARS:			#0
     190.  00:8000                      
     191.  00:8000  (00:F023)           ChanA:			#29			;CHNPRM_Size
     192.  00:8000  (00:F040)           ChanB:			#29			;CHNPRM_Size
     193.  00:8000  (00:F05D)           ChanC:			#29			;CHNPRM_Size
     194.  00:8000                      
     195.  00:8000                      ;GlobalVars
     196.  00:8000  (00:F07A)           DelyCnt:		#1
     197.  00:8000  (00:F07B)           CurESld:		#2
     198.  00:8000  (00:F07D)           CurEDel:		#1
     199.  00:8000  (00:F07E)           Ns_Base_AddToNs:	#0
     200.  00:8000  (00:F07E)           Ns_Base:		#1
     201.  00:8000  (00:F07F)           AddToNs:		#1
     202.  00:8000                      
     203.  00:8000  (00:F080)           NT_:			#192	; Puntero a/tabla de frecuencias
     204.  00:8000                      
     205.  00:8000  (00:F140)           AYREGS:			#0
     206.  00:8000  (00:F140)           VT_:			#14
     207.  00:8000  (00:F14E)           EnvBase:		#2
     208.  00:8000  (00:F150)           VAR0END:		#0
     209.  00:8000                      
     210.  00:8000  (00:F150)           T1_:			#0		
     211.  00:8000  (00:F150)           T_NEW_1:		#0
     212.  00:8000  (00:F150)           T_OLD_1:		#24
     213.  00:8000  (00:F168)           T_OLD_2:		#24
     214.  00:8000  (00:F180)           T_NEW_3:		#0
     215.  00:8000  (00:F180)           T_OLD_3:		#2
     216.  00:8000  (00:F182)           T_OLD_0:		#0
     217.  00:8000  (00:F182)           T_NEW_0:		#24
     218.  00:8000  (00:F19A)           T_NEW_2:		#166
     219.  00:8000                      ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;PT3 REPLAYER END
     220.  00:8000                      
     221.  00:8000                      ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ayFX REPLAYER 
     222.  00:8000  (00:F240)           ayFX_MODE:		#1			; ayFX mode
     223.  00:8000  (00:F241)           ayFX_BANK:		#2			; Current ayFX Bank
     224.  00:8000  (00:F243)           ayFX_PRIORITY:	#1			; Current ayFX stream priotity
     225.  00:8000  (00:F244)           ayFX_POINTER:	#2			; Pointer to the current ayFX stream
     226.  00:8000  (00:F246)           ayFX_TONE:		#2			; Current tone of the ayFX stream
     227.  00:8000  (00:F248)           ayFX_NOISE:		#1			; Current noise of the ayFX stream
     228.  00:8000  (00:F249)           ayFX_VOLUME:	#1			; Current volume of the ayFX stream
     229.  00:8000  (00:F24A)           ayFX_CHANNEL:	#1			; PSG channel to play the ayFX stream
     230.  00:8000                      
     231.  00:8000                      	;IF (AYFXRELATIVE == 1 ) 
     232.  00:8000                      ;ayFX_VT:	ds	2			; ayFX relative volume table pointer
     233.  00:8000                      	;ENDIF
     234.  00:8000                      ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ayFX REPLAYER END
     235.  00:8000                      
     236.  00:8000                      
     237.  00:8000                      
       7   00:8000                      
       8   00:8000                      ;;=====================================================
       9   00:8000                      ;;DEFINICIÓN DE CABECERA DE ARCHIVO BIN
      10   00:8000                      ;;=====================================================		
      11   00:8000                      	include "cabecerabin.asm"
       1.  00:8000                      ;;=====================================================
       2.  00:8000                      ;; FICHERO cabecera.asm
       3.  00:8000                      ;;=====================================================
       4.  00:8000                      
       5.  00:8000                      ;;CABECERA FICHERO BIN
       6.  00:8000  FE                  	DB	#FE
       7.  00:8001  00 80               	DW	START
       8.  00:8003  EC B6               	DW	END
       9.  00:8005  00 80               	DW	START
      10.  00:8007                      
      11.  00:8007                      ;;INICIO CÓDIGO PROGRAMA	
      12.  00:8007                      	ORG	#8000
      13.  00:8000                      	
      12   00:8000                      	
      13   00:8000                      START:	
      14   00:8000                      	;inicializa pantalla y entonrno
      15   00:8000  CD E7 80            	CALL	sub_preparapantalla			;screen 2,2 sin click al pulsar tecla y color 16,1,1
      16   00:8003                      	
      17   00:8003                      	;inicializa variables para parametrizar funciones y que lo que se muestre sea variable (nº vidas, mapa, puertas, pantalla, etc...)
      18   00:8003  CD 36 80            	CALL	inicializa_variables_pruebas
      19   00:8006                      	
      20   00:8006                      	;inicializa los niveles por partida
      21   00:8006  CD 59 80            	CALL	inicializa_niveles			;no es necesario parametrizarlo según el nivel del usuario ya que se cargan todos
      22   00:8009                      	
      23   00:8009                      	;pinta la pantalla (la primera o algunas especiales se pintan completamente)
      24   00:8009  CD 08 81            	CALL	pinta_pantalla_completa 
      25   00:800C                      	
      26   00:800C                      	;carga sprites en memoria (SE HA RETRASADO HASTA PARAMETRIZAR LA CARGA DE PANTALLAS)
      27   00:800C  CD 81 84            	CALL 	carga_patrones_sprites_nivel
      28   00:800F                      	
      29   00:800F                      	;funciones que modificarian el marcador si se produce un evento cuando toque y cuando se pinta la pantalla ya se mira
      30   00:800F                      	;una variable para ver si el array hay que actualizarlo en pantalla o no
      31   00:800F  CD 48 82            	CALL	pinta_vidas
      32   00:8012  CD 57 82            	CALL 	pinta_reliquias
      33   00:8015  CD 66 82            	CALL	pinta_nivel
      34   00:8018  CD E6 82            	CALL	borra_mapa
      35   00:801B  CD 74 83            	CALL	pinta_puertas
      36   00:801E                      
      37   00:801E  3E 13               	LD		 A, TILEPROTAM
      38   00:8020  32 51 A4            	LD		(elemento_pintar_mapa), A
      39   00:8023  CD E6 83            	CALL	posiciona_en_mapa		;se le pasa elemento_pintar_mapa (tile del prota) está el prota y prota.poxx y posy
      40   00:8026                      	
      41   00:8026                      	;incializacion de replayer con interrupciones
      42   00:8026                      ;	CALL	inicializa_replayer_efectos_interrupciones
      43   00:8026                      	
      44   00:8026                      	
      45   00:8026  CD 72 84            	CALL	pinta_obj_ayuda
      46   00:8029                      	
      47   00:8029                      loop_principal:
      48   00:8029  76                  	HALT							;espera VBLANK y sincroniza
      49   00:802A                      	
      50   00:802A  CD 99 84            	CALL	render_sprites			;actualiza array de sprites y los pinta en pantalla
      51   00:802D                      	
      52   00:802D  CD D7 82            	CALL	pinta_energia			;pinta la energia en pantalla
      53   00:8030                      
      54   00:8030  CD DC 84            	CALL	check_player			;MIRA EL CONTROL Y APLICA LA LOGICA DE MOVIMIENTO DEL PROTAGONISTA
      55   00:8033                      	
      56   00:8033  C3 29 80            	JP		loop_principal
      57   00:8036                      fin_programa_principal:
      58   00:8036                      	;RET
      59   00:8036                      
      60   00:8036                      
      61   00:8036                      
      62   00:8036                      
      63   00:8036                      
      64   00:8036                      ;;*******************************************************************
      65   00:8036                      ; sólo para hacer pruebas y pintar la parte de las vidas y demás
      66   00:8036                      inicializa_variables_pruebas:
      67   00:8036  3E 04               	LD		 A, 4
      68   00:8038  32 2D A4            	LD		(prota_vidas),A
      69   00:803B                      
      70   00:803B  3E 04               	LD		 A, 4
      71   00:803D  32 2E A4            	LD		(prota_reliquias), A
      72   00:8040                      
      73   00:8040  3E 64               	LD		 A, 100
      74   00:8042  32 31 A4            	LD		(prota_energia), A
      75   00:8045                      
      76   00:8045                      	;ubico al prota dentro del nivel para obtener luego las habitaciones y enemigos que aparecerán
      77   00:8045                      	;será igual la posición inicial en todos los niveles
      78   00:8045                      	
      79   00:8045  3E 04               	LD		 A, 4				;los niveles (matrices) son 7 del 0 al 6
      80   00:8047  32 2C A4            	LD		(prota_nivel), A	;nivel empieza en 0 para usar las posiciones ascii
      81   00:804A                      
      82   00:804A  3E 06               	LD		 A, 6				;los subniveles (filas) son 7 del 0 al 6
      83   00:804C  32 30 A4            	LD		(prota_pos_mapy), A	;pos Y dentro del nivel (se empieza en 0)
      84   00:804F                      
      85   00:804F  3E 02               	LD		 A, 2				;columnas 7: del 0 al 6
      86   00:8051  32 2F A4            	LD		(prota_pos_mapx), A	;pos X dentro del nivel (se empieza en 0)
      87   00:8054                      	
      88   00:8054  AF                  	XOR		 A
      89   00:8055  32 21 A4            	LD		(prota.cadencia), A
      90   00:8058                      fin_inicializa_variables_pruebas:
      91   00:8058  C9                  	RET
      92   00:8059                      ;;************************************************************************
      93   00:8059                      
      94   00:8059                      
      95   00:8059                      
      96   00:8059                      
      97   00:8059                      
      98   00:8059                      
      99   00:8059                      
     100   00:8059                      
     101   00:8059                      
     102   00:8059                      ;;=====================================================
     103   00:8059                      ;;DEFINICIÓN DE SUBRUTINAS
     104   00:8059                      ;;=====================================================
     105   00:8059                      	include "subrutinas.asm"
       1.  00:8059                      ;;=====================================================
       2.  00:8059                      ;;DEFINICIÓN DE SUBRUTINAS
       3.  00:8059                      ;;=====================================================	
       4.  00:8059                      
       5.  00:8059                      
       6.  00:8059                      ;;=====================================================
       7.  00:8059                      ;;INICIALIZA_NIVELES
       8.  00:8059                      ;;=====================================================	
       9.  00:8059                      ; función: 	copia la plantilla de niveles (habitaciones_plantilla) en los niveles de trabajo para el juego (habitaciones_juego)
      10.  00:8059                      ; entrada: 	habitaciones_plantilla
      11.  00:8059                      ; salida: 	habitaciones_juego
      12.  00:8059                      ; toca: 	A
      13.  00:8059                      inicializa_niveles:
      14.  00:8059  D9                  	EXX
      15.  00:805A                      	
      16.  00:805A  AF                  	XOR		 A
      17.  00:805B  06 31               	LD		 B, 49				;7 filas por 7 niveles menos el primero que lo hago diera del buble porque se suma 14 y no 16
      18.  00:805D  21 03 A1            	LD		HL, habitaciones_juego;tambíen puntero al primer nivel
      19.  00:8060  11 0E 00            	LD		DE,14
      20.  00:8063  19                  	ADD		HL,DE
      21.  00:8064  77                  	LD		(HL),A
      22.  00:8065  11 10 00            	LD		DE,16				;desde las col 15 de una fila a la siguiente
      23.  00:8068                      .bucle_borra_hab:
      24.  00:8068  19                  	ADD		HL,DE
      25.  00:8069  77                  	LD		(HL),A
      26.  00:806A  10 FC               	DJNZ	.bucle_borra_hab
      27.  00:806C                      	
      28.  00:806C  D9                  	EXX
      29.  00:806D                      fin_iniciliza_niveles:
      30.  00:806D  C9                  	RET
      31.  00:806E                      
      32.  00:806E                      
      33.  00:806E                      ;;=====================================================
      34.  00:806E                      ;;ACTUALIZA_MARCADOR_VIDAS
      35.  00:806E                      ;;=====================================================	
      36.  00:806E                      ; función:  actualiza el buffer de vidas
      37.  00:806E                      ; entrada: 	prota_vidas
      38.  00:806E                      ; salida: 	array_aux_vidas
      39.  00:806E                      ; toca:		A,B,HL
      40.  00:806E                      actualiza_marcador_vidas:
      41.  00:806E                      	;para no andar restando pongo todos los huecos a negro y luego en otro bucle las caras
      42.  00:806E                      	;1-pinto todo en blanco
      43.  00:806E  21 32 A4            	LD		HL,array_aux_vidas
      44.  00:8071  06 08               	LD		 B,NMAXVIDREL
      45.  00:8073                      loop_marcador_caras_negro:	;asignar espacios en negro
      46.  00:8073  36 00               	LD		(HL),0			;0 posición mapa tiles para nada (es transparente pero el fondo es negro)
      47.  00:8075  23                  	INC		HL
      48.  00:8076  10 FB               	DJNZ	loop_marcador_caras_negro
      49.  00:8078                      fin_loop_marcador_caras_negro:
      50.  00:8078                      	;2-pinto las caras según el n de vidas
      51.  00:8078  3A 2D A4            	LD		 A, (prota_vidas)
      52.  00:807B  B7                  	OR		 A
      53.  00:807C  C8                  	RET 	 Z
      54.  00:807D  47                  	LD		 B, A
      55.  00:807E  21 32 A4            	LD		HL, array_aux_vidas
      56.  00:8081                      loop_marcador_caras: ;asignar caras
      57.  00:8081  36 0D               	LD		(HL), POSCARAMAP	;13 posición mapa tiles para cara
      58.  00:8083  23                  	INC		HL
      59.  00:8084  10 FB               	DJNZ	loop_marcador_caras
      60.  00:8086                      fin_loop_marcador_caras:
      61.  00:8086                      
      62.  00:8086                      fin_actualiza_marcador_vidas:
      63.  00:8086  C9                  	RET
      64.  00:8087                      
      65.  00:8087                      
      66.  00:8087                      ;;=====================================================
      67.  00:8087                      ;;ACTUALIZA_BUFFER_RELIQUIAS
      68.  00:8087                      ;;=====================================================	
      69.  00:8087                      ; función: 	actualiza buffer de reliquias
      70.  00:8087                      ; entrada: 	prota_reliquias
      71.  00:8087                      ; salida: 	array_aux_reliquias
      72.  00:8087                      ; toca:		A,B,HL
      73.  00:8087                      actualiza_buffer_reliquias:	
      74.  00:8087                      	;para no andar restando pongo todos los huecos a negro y luego en otro bucle las reliquias
      75.  00:8087                      	;1-pinto todo en blanco
      76.  00:8087  21 3A A4            	LD		HL, array_aux_reliquias
      77.  00:808A  06 08               	LD		 B, NMAXVIDREL
      78.  00:808C  AF                  	XOR		 A
      79.  00:808D                      loop_buffer_reliquias_negro:	;asignar espacios en negro
      80.  00:808D  77                  	LD		(HL), A			;0 posición mapa tiles para nada (es transparente pero el fondo es negro)
      81.  00:808E  23                  	INC		HL
      82.  00:808F  10 FC               	DJNZ	loop_buffer_reliquias_negro
      83.  00:8091                      
      84.  00:8091                      	;2-pinto las cruces según el n de reliquias
      85.  00:8091  21 3A A4            	LD		HL, array_aux_reliquias
      86.  00:8094  3A 2E A4            	LD		 A, (prota_reliquias)
      87.  00:8097  B7                  	OR		 A
      88.  00:8098  C8                  	RET		 Z
      89.  00:8099  47                  	LD		 B, A
      90.  00:809A                      loop_buffer_reliquias: ;asignar reliquias
      91.  00:809A  36 11               	LD		(HL), POSRELIMAP	;17 posición mapa tiles para reliquia
      92.  00:809C  23                  	INC		HL
      93.  00:809D  10 FB               	DJNZ	loop_buffer_reliquias
      94.  00:809F                      fin_actualiza_buffer_reliquias:
      95.  00:809F  C9                  	RET
      96.  00:80A0                      
      97.  00:80A0                      
      98.  00:80A0                      
      99.  00:80A0                      ;;=====================================================
     100.  00:80A0                      ;;LOCALIZA_INFO_HABITACION
     101.  00:80A0                      ;;=====================================================	
     102.  00:80A0                      ; función: 	busca las puertas que hay que pintar egún la posición del usuario y las pone en habitacion_actual
     103.  00:80A0                      ; entrada: 	prota.pos_mapy, prota.pos_mapx, prota_nivel habitaciones_juego
     104.  00:80A0                      ; salida: 	habitacion_actual
     105.  00:80A0                      ; toca:		todo
     106.  00:80A0                      ;ejemplo: nivel 4, posy 5 y posx 3
     107.  00:80A0                      ;3 + 5 x 8 + 4 x 49
     108.  00:80A0                      localiza_info_habitacion:
     109.  00:80A0                      ;primera posición: me coloco en la columna correcta
     110.  00:80A0  21 03 A1            	LD		HL, habitaciones_juego
     111.  00:80A3                      .situo_columna:	
     112.  00:80A3  3A 2F A4            	LD		 A, (prota_pos_mapx)
     113.  00:80A6  CB 27               	SLA		 A				;multiplico por dos ya que cada habitación va de dos en dos bytes
     114.  00:80A8  06 00               	LD		 B, 0
     115.  00:80AA  4F                  	LD		 C, A
     116.  00:80AB                      
     117.  00:80AB  09                  	ADD 	HL, BC			;sumo a la posición 0 la columnax2 en la que situarme
     118.  00:80AC                      	
     119.  00:80AC                      .situo_fila:
     120.  00:80AC  3A 30 A4            	LD		A, (prota_pos_mapy)
     121.  00:80AF  B7                  	OR	 	A
     122.  00:80B0  CA BD 80            	JP		Z, .situo_nivel	;si la fila es 0 no es necesario seguir operando en fila
     123.  00:80B3                      	
     124.  00:80B3  47                  	LD		B, A
     125.  00:80B4  AF                  	XOR		A
     126.  00:80B5                      .loop_suma_fila:
     127.  00:80B5  C6 10               	ADD		16				;cada fila tiene 16 bytes
     128.  00:80B7  10 FC               	DJNZ	.loop_suma_fila
     129.  00:80B9                      	
     130.  00:80B9  06 00               	LD		 B, 0
     131.  00:80BB  4F                  	LD		 C, A
     132.  00:80BC                      
     133.  00:80BC  09                  	ADD 	HL, BC			;sumo a la columna 16 x filas para situarme en la fila correcta
     134.  00:80BD                      
     135.  00:80BD                      .situo_nivel:
     136.  00:80BD  3A 2C A4            	LD		 A, (prota_nivel)
     137.  00:80C0  B7                  	OR	 	 A
     138.  00:80C1  CA D1 80            	JP		 Z, .actualiza_valiable_habitacion	;si el nivel es 0 al pasar por las anterirores ya estoy situado actualizo la variable y termino
     139.  00:80C4                      	
     140.  00:80C4  E5                  	PUSH	HL				;guardo el resultado intermedio
     141.  00:80C5                      	
     142.  00:80C5  47                  	LD		 B, A			;preparo la varible del bucle
     143.  00:80C6  11 70 00            	LD		DE, 112			;112 = 16x42 son los bytes de cada matriz-nivel
     144.  00:80C9  21 00 00            	LD		HL, 0
     145.  00:80CC                      .loop_suma_nivel:
     146.  00:80CC  19                  	ADD		HL,DE
     147.  00:80CD  10 FD               	DJNZ	.loop_suma_nivel
     148.  00:80CF                      	
     149.  00:80CF  D1                  	POP		DE				;devuelvo el resultado intermedio en DE que ya no lo necesito
     150.  00:80D0                      	
     151.  00:80D0  19                  	ADD		HL,DE			;sumo el resultdo del nivel al resultado intermedio anterior
     152.  00:80D1                      
     153.  00:80D1                      .actualiza_valiable_habitacion
     154.  00:80D1  7E                  	LD		 A, (HL)
     155.  00:80D2  32 01 A1            	LD		(habitacion_actual), A
     156.  00:80D5                      fin_localiza_info_habitacion:
     157.  00:80D5  C9                  	RET
     158.  00:80D6                      
     159.  00:80D6                      
     160.  00:80D6                      
     161.  00:80D6                      
     106   00:80D6                      	
     107   00:80D6                      	include "subr_pintapantalla.asm"
       1.  00:80D6                      ;;=====================================================
       2.  00:80D6                      ;;DEFINICIÓN DE SUBRUTINAS
       3.  00:80D6                      ;;=====================================================	
       4.  00:80D6                      ;relacionadas con pintado en pantalla (y no sprites)
       5.  00:80D6                      
       6.  00:80D6                      
       7.  00:80D6                      ;;=====================================================
       8.  00:80D6                      ;;COLOR_PANTALLA
       9.  00:80D6                      ;;=====================================================	
      10.  00:80D6                      ; función: 	el equivalente en basic a color 15,1,1
      11.  00:80D6                      ; entrada: 	HL	que apunta a un array de bytes con 3 bytes FORCLR, BAKCLR y BDRCLR
      12.  00:80D6                      ; salida: 	-
      13.  00:80D6                      ; toca: 	todo
      14.  00:80D6                      color_pantalla:
      15.  00:80D6  7E                  	LD		 A, (HL)			;FORCLR 
      16.  00:80D7  32 E9 F3            	LD 		(FORCLR),A
      17.  00:80DA  23                  	INC		HL
      18.  00:80DB                      	
      19.  00:80DB  7E                  	LD		 A, (HL)			;BAKCLR
      20.  00:80DC  32 EA F3            	LD 		(BAKCLR),A
      21.  00:80DF  23                  	INC		HL
      22.  00:80E0                      	
      23.  00:80E0  7E                  	LD		 A, (HL)
      24.  00:80E1  32 EB F3            	LD 		(BDRCLR),A			;BDRCLR
      25.  00:80E4  C3 62 00            	JP		CHGCLR 
      26.  00:80E7                      fin_color_pantalla:
      27.  00:80E7                      
      28.  00:80E7                      
      29.  00:80E7                      ;;=====================================================
      30.  00:80E7                      ;;PREPARAPANTALLA
      31.  00:80E7                      ;;=====================================================	
      32.  00:80E7                      ; función: elimina clic cuando se pulsa tecla, cls, screen 2,2
      33.  00:80E7                      ; entrada: -
      34.  00:80E7                      ; salida: -
      35.  00:80E7                      ; toca: si no son todos los regristros, casi todos
      36.  00:80E7                      sub_preparapantalla:
      37.  00:80E7                      	;toca A y Z
      38.  00:80E7                      elimina_clic;
      39.  00:80E7  AF                  	XOR		 A
      40.  00:80E8  32 DB F3            	LD		(CLIKSW),A
      41.  00:80EB                      fin_elimina_clic:
      42.  00:80EB                      
      43.  00:80EB                      	;toca A
      44.  00:80EB                      limpia_pantalla:
      45.  00:80EB  AF                  	XOR		 A
      46.  00:80EC  CD C3 00            	CALL 	CLS
      47.  00:80EF                      fin_limpia_pantalla:
      48.  00:80EF                      
      49.  00:80EF                      	;toca A y direcciones #F3E9/#F3EA/#F3EB, poner en HL array con 3 valores
      50.  00:80EF  21 13 A4            	LD		HL, color_base
      51.  00:80F2  CD D6 80            	CALL	color_pantalla
      52.  00:80F5                      	
      53.  00:80F5                      	;cambiamos a SCREEN 2,2 del BASIC
      54.  00:80F5                      	;toca A
      55.  00:80F5                      screen2:
      56.  00:80F5  3E 02               	LD		 A, 2
      57.  00:80F7  CD 5F 00            	CALL	CHGMOD			;selecciona screen 2
      58.  00:80FA                      sprites_16_16:
      59.  00:80FA  3A E0 F3            	LD		 A, (RG1SAV)
      60.  00:80FD  F6 02               	OR		00000010b		;fuerza sprites de 16x16
      61.  00:80FF  32 E0 F3            	LD		(RG1SAV), A		;no lo guardamos en la copia de variables del sistema
      62.  00:8102  47                  	LD		 B, A
      63.  00:8103  0E 01               	LD		 C, 1
      64.  00:8105  C3 47 00            	JP		WRTVDP			;opción alternativa de escribir las tres lineas siguientes
      65.  00:8108                      fin_sub_preparapantalla:
      66.  00:8108                      	
      67.  00:8108                      
      68.  00:8108                      ;;=====================================================
      69.  00:8108                      ;;PINTA_PANTALLA_COMPLETA
      70.  00:8108                      ;;=====================================================	
      71.  00:8108                      ; función: pinta el escenario, las 3 partes
      72.  00:8108                      ; entrada: -
      73.  00:8108                      ; salida: -
      74.  00:8108                      ; toca: si no son todos los regristros, casi todos
      75.  00:8108                      pinta_pantalla_completa:
      76.  00:8108  CD 0F 81            	CALL 	pinta_parte_superior_pantalla
      77.  00:810B                      	
      78.  00:810B  CD 2D 82            	CALL 	pinta_parte_inferior_pantalla	
      79.  00:810E                      fin_pinta_pantalla_completa:
      80.  00:810E  C9                  	RET
      81.  00:810F                      
      82.  00:810F                      
      83.  00:810F                      ;;=====================================================
      84.  00:810F                      ;;PINTA_PARTE_SUPERIOR_PANTALLA
      85.  00:810F                      ;;=====================================================	
      86.  00:810F                      ; función: pinta el escenario, los dos bancos superiores
      87.  00:810F                      ; entrada: -
      88.  00:810F                      ; salida: -
      89.  00:810F                      ; toca: si no son todos los regristros, casi todos
      90.  00:810F                      pinta_parte_superior_pantalla:
      91.  00:810F  3A 2C A4            	LD		 A, (prota_nivel)
      92.  00:8112  CA 40 81            	JP		 Z, .carga_nivel_0
      93.  00:8115  3D                  	DEC		 A
      94.  00:8116  3A 2C A4            	LD		 A, (prota_nivel)
      95.  00:8119  CA 5B 81            	JP		 Z, .carga_nivel_1
      96.  00:811C  3D                  	DEC		 A
      97.  00:811D  3A 2C A4            	LD		 A, (prota_nivel)
      98.  00:8120  CA 76 81            	JP		 Z, .carga_nivel_2
      99.  00:8123  3D                  	DEC		 A
     100.  00:8124  3A 2C A4            	LD		 A, (prota_nivel)
     101.  00:8127  CA 91 81            	JP		 Z, .carga_nivel_3
     102.  00:812A  3D                  	DEC		 A
     103.  00:812B  3A 2C A4            	LD		 A, (prota_nivel)
     104.  00:812E  CA AC 81            	JP		 Z, .carga_nivel_4
     105.  00:8131  3D                  	DEC		 A
     106.  00:8132  3A 2C A4            	LD		 A, (prota_nivel)
     107.  00:8135  CA C7 81            	JP		 Z, .carga_nivel_5
     108.  00:8138  3D                  	DEC		 A
     109.  00:8139  3A 2C A4            	LD		 A, (prota_nivel)
     110.  00:813C  CA E2 81            	JP		 Z, .carga_nivel_6
     111.  00:813F  3D                  	DEC		 A
     112.  00:8140                      	
     113.  00:8140                      .carga_nivel_0:
     114.  00:8140  21 B2 A5            	LD		HL, tiles_patrones_nivel0
     115.  00:8143  22 27 82            	LD		(tiles_patrones), HL
     116.  00:8146  21 67 A7            	LD		HL, tiles_color_nivel0
     117.  00:8149  22 29 82            	LD		(tiles_colores), HL
     118.  00:814C  21 B2 A5            	LD		HL, tiles_patrones_nivel0
     119.  00:814F  22 27 82            	LD		(tiles_patrones), HL
     120.  00:8152  21 AE A7            	LD		HL, tiles_mapa_nivel0
     121.  00:8155  22 2B 82            	LD		(tiles_mapa), HL
     122.  00:8158  C3 FA 81            	JP		.fin_carga_niveles
     123.  00:815B                      
     124.  00:815B                      .carga_nivel_1:
     125.  00:815B  21 B2 A5            	LD		HL, tiles_patrones_nivel0
     126.  00:815E  22 27 82            	LD		(tiles_patrones), HL
     127.  00:8161  21 67 A7            	LD		HL, tiles_color_nivel0
     128.  00:8164  22 29 82            	LD		(tiles_colores), HL
     129.  00:8167  21 B2 A5            	LD		HL, tiles_patrones_nivel0
     130.  00:816A  22 27 82            	LD		(tiles_patrones), HL
     131.  00:816D  21 AE A7            	LD		HL, tiles_mapa_nivel0
     132.  00:8170  22 2B 82            	LD		(tiles_mapa), HL
     133.  00:8173  C3 FA 81            	JP		.fin_carga_niveles
     134.  00:8176                      	
     135.  00:8176                      .carga_nivel_2:
     136.  00:8176  21 B2 A5            	LD		HL, tiles_patrones_nivel0
     137.  00:8179  22 27 82            	LD		(tiles_patrones), HL
     138.  00:817C  21 67 A7            	LD		HL, tiles_color_nivel0
     139.  00:817F  22 29 82            	LD		(tiles_colores), HL
     140.  00:8182  21 B2 A5            	LD		HL, tiles_patrones_nivel0
     141.  00:8185  22 27 82            	LD		(tiles_patrones), HL
     142.  00:8188  21 AE A7            	LD		HL, tiles_mapa_nivel0
     143.  00:818B  22 2B 82            	LD		(tiles_mapa), HL
     144.  00:818E  C3 FA 81            	JP		.fin_carga_niveles
     145.  00:8191                      	
     146.  00:8191                      .carga_nivel_3:
     147.  00:8191  21 B2 A5            	LD		HL, tiles_patrones_nivel0
     148.  00:8194  22 27 82            	LD		(tiles_patrones), HL
     149.  00:8197  21 67 A7            	LD		HL, tiles_color_nivel0
     150.  00:819A  22 29 82            	LD		(tiles_colores), HL
     151.  00:819D  21 B2 A5            	LD		HL, tiles_patrones_nivel0
     152.  00:81A0  22 27 82            	LD		(tiles_patrones), HL
     153.  00:81A3  21 AE A7            	LD		HL, tiles_mapa_nivel0
     154.  00:81A6  22 2B 82            	LD		(tiles_mapa), HL
     155.  00:81A9  C3 FA 81            	JP		.fin_carga_niveles
     156.  00:81AC                      	
     157.  00:81AC                      .carga_nivel_4:
     158.  00:81AC  21 B2 A5            	LD		HL, tiles_patrones_nivel0
     159.  00:81AF  22 27 82            	LD		(tiles_patrones), HL
     160.  00:81B2  21 67 A7            	LD		HL, tiles_color_nivel0
     161.  00:81B5  22 29 82            	LD		(tiles_colores), HL
     162.  00:81B8  21 B2 A5            	LD		HL, tiles_patrones_nivel0
     163.  00:81BB  22 27 82            	LD		(tiles_patrones), HL
     164.  00:81BE  21 AE A7            	LD		HL, tiles_mapa_nivel0
     165.  00:81C1  22 2B 82            	LD		(tiles_mapa), HL
     166.  00:81C4  C3 FA 81            	JP		.fin_carga_niveles
     167.  00:81C7                      	
     168.  00:81C7                      .carga_nivel_5:
     169.  00:81C7  21 B2 A5            	LD		HL, tiles_patrones_nivel0
     170.  00:81CA  22 27 82            	LD		(tiles_patrones), HL
     171.  00:81CD  21 67 A7            	LD		HL, tiles_color_nivel0
     172.  00:81D0  22 29 82            	LD		(tiles_colores), HL
     173.  00:81D3  21 B2 A5            	LD		HL, tiles_patrones_nivel0
     174.  00:81D6  22 27 82            	LD		(tiles_patrones), HL
     175.  00:81D9  21 AE A7            	LD		HL, tiles_mapa_nivel0
     176.  00:81DC  22 2B 82            	LD		(tiles_mapa), HL
     177.  00:81DF  C3 FA 81            	JP		.fin_carga_niveles
     178.  00:81E2                      	
     179.  00:81E2                      .carga_nivel_6:
     180.  00:81E2  21 B2 A5            	LD		HL, tiles_patrones_nivel0
     181.  00:81E5  22 27 82            	LD		(tiles_patrones), HL
     182.  00:81E8  21 67 A7            	LD		HL, tiles_color_nivel0
     183.  00:81EB  22 29 82            	LD		(tiles_colores), HL
     184.  00:81EE  21 B2 A5            	LD		HL, tiles_patrones_nivel0
     185.  00:81F1  22 27 82            	LD		(tiles_patrones), HL
     186.  00:81F4  21 AE A7            	LD		HL, tiles_mapa_nivel0
     187.  00:81F7  22 2B 82            	LD		(tiles_mapa), HL
     188.  00:81FA                      ;	JP		.fin_carga niveles			;no necesario
     189.  00:81FA                      .fin_carga_niveles:
     190.  00:81FA                      
     191.  00:81FA                      	;cargando banco 1
     192.  00:81FA                      	;cargamos los patrones
     193.  00:81FA  2A 27 82            	LD		HL, (tiles_patrones)
     194.  00:81FD  11 00 00            	LD		DE, CHRTBL
     195.  00:8200  CD A1 96            	CALL	depack_VRAM
     196.  00:8203                      	;cargamos los colores de los patrones
     197.  00:8203  2A 29 82            	LD		HL, (tiles_colores)
     198.  00:8206  11 00 20            	LD		DE, CLRTBL
     199.  00:8209  CD A1 96            	CALL	depack_VRAM
     200.  00:820C                      	
     201.  00:820C                      	;cargando banco 2
     202.  00:820C                      	;cargamos los patrones
     203.  00:820C  2A 27 82            	LD		HL, (tiles_patrones)
     204.  00:820F  11 00 08            	LD		DE, CHRTBL + #0800
     205.  00:8212  CD A1 96            	CALL	depack_VRAM	
     206.  00:8215                      	;cargamos los colores de los patrones
     207.  00:8215  2A 29 82            	LD		HL, (tiles_colores)
     208.  00:8218  11 00 28            	LD		DE, CLRTBL + #0800
     209.  00:821B  CD A1 96            	CALL	depack_VRAM
     210.  00:821E                      	
     211.  00:821E                      	;cargamos mapa de pantalla banco 1 y 2
     212.  00:821E  2A 2B 82            	LD		HL, (tiles_mapa)
     213.  00:8221  11 00 18            	LD		DE, TILMAP
     214.  00:8224  C3 A1 96            	JP		depack_VRAM
     215.  00:8227                      fin_pinta_parte_superior_pantalla:
     216.  00:8227  00 00               tiles_patrones:		DW	0
     217.  00:8229  00 00               tiles_colores:		DW	0
     218.  00:822B  00 00               tiles_mapa:			DW	0
     219.  00:822D                      
     220.  00:822D                      
     221.  00:822D                      ;;=====================================================
     222.  00:822D                      ;;PINTA_PARTE_INFERIOR_PANTALLA
     223.  00:822D                      ;;=====================================================	
     224.  00:822D                      ; función: pinta la parte inferior del escenario que es común
     225.  00:822D                      ; entrada: -
     226.  00:822D                      ; salida: -
     227.  00:822D                      ; toca: si no son todos los regristros, casi todos
     228.  00:822D                      pinta_parte_inferior_pantalla:
     229.  00:822D                      	;cangando banco 3
     230.  00:822D                      	;cargamos los patrones
     231.  00:822D  21 09 B5            	LD		HL,tiles_patrones_marcador
     232.  00:8230  11 00 10            	LD		DE,CHRTBL + #1000
     233.  00:8233  CD A1 96            	CALL	depack_VRAM	
     234.  00:8236                      	;cargamos mapa de pantalla
     235.  00:8236  21 8A B6            	LD		HL,tiles_mapa_marcador
     236.  00:8239  11 00 1A            	LD		DE,TILMAP + #0200
     237.  00:823C  CD A1 96            	CALL	depack_VRAM
     238.  00:823F                      	;cargamos los colores de los patrones
     239.  00:823F  21 55 B6            	LD		HL,tiles_color_marcador
     240.  00:8242  11 00 30            	LD		DE,CLRTBL + #1000
     241.  00:8245  C3 A1 96            	JP		depack_VRAM
     242.  00:8248                      fin_pinta_parte_inferior_pantalla:
     243.  00:8248                      
     244.  00:8248                      
     245.  00:8248                      
     246.  00:8248                      ;;=====================================================
     247.  00:8248                      ;;PINTA_VIDAS
     248.  00:8248                      ;;=====================================================	
     249.  00:8248                      ; función: 	actualiza el mapa de tiles para que en el próximo refresco se pinten y actualiza_vidas
     250.  00:8248                      ; entrada: 	array_aux_vidas
     251.  00:8248                      ; salida: 	actualiza_vidas_sn
     252.  00:8248                      ; toca:		todo
     253.  00:8248                      pinta_vidas:
     254.  00:8248  CD 6E 80            	CALL	actualiza_marcador_vidas
     255.  00:824B                      	
     256.  00:824B  21 32 A4            	LD		HL, array_aux_vidas
     257.  00:824E  11 48 1A            	LD		DE, TILMAP + POSVIDAS 	;inicio posición en el mapa de tiles de las vidas
     258.  00:8251  01 08 00            	LD		BC, NMAXVIDREL			;hay 8 posiciones para vidas/reliquias o espacios en negro si no tiene 8 vidas/reliquias
     259.  00:8254  C3 5C 00            	JP		LDIRVM
     260.  00:8257                      fin_pinta_vidas:
     261.  00:8257                      	
     262.  00:8257                      	
     263.  00:8257                      
     264.  00:8257                      ;;=====================================================
     265.  00:8257                      ;;PINTA_RELIQUIAS
     266.  00:8257                      ;;=====================================================	
     267.  00:8257                      ; función: 	actualiza el mapa de tiles para que en el próximo refresco se pinten y actualiza_reliquias
     268.  00:8257                      ; entrada: 	array_aux_reliquias
     269.  00:8257                      ; salida: 	-
     270.  00:8257                      ; toca:		todo
     271.  00:8257                      pinta_reliquias:
     272.  00:8257  CD 87 80            	CALL	actualiza_buffer_reliquias
     273.  00:825A                      	
     274.  00:825A  21 3A A4            	LD		HL, array_aux_reliquias
     275.  00:825D  11 C8 1A            	LD		DE, TILMAP + POSRELIQ 	;inicio posición en el mapa de tiles de las vidas
     276.  00:8260  01 08 00            	LD		BC, NMAXVIDREL			;hay 8 posiciones para vidas/reliquias o espacios en negro si no tiene 8 vidas/reliquias
     277.  00:8263  C3 5C 00            	JP		LDIRVM
     278.  00:8266                      fin_pinta_reliquias:
     279.  00:8266                      	
     280.  00:8266                      
     281.  00:8266                      
     282.  00:8266                      	
     283.  00:8266                      ;;=====================================================
     284.  00:8266                      ;;PINTA_NIVEL
     285.  00:8266                      ;;=====================================================	
     286.  00:8266                      ; función: 	actualiza el nivel en la parte de puntuación
     287.  00:8266                      ; entrada: 	prota_nivel
     288.  00:8266                      ; salida: 	-
     289.  00:8266                      ; toca:		HL,DE,BC
     290.  00:8266                      pinta_nivel:	
     291.  00:8266                      	;forma más avanzada sin llamada a la bios
     292.  00:8266  01 B4 1A            	LD		BC,TILMAP + POSNIVEL ;posición en el mapa de tiles del tile de nivel
     293.  00:8269  3A 2C A4            	LD		 A, (prota_nivel)	;seleccionando la pos del banco de tiles a poner en el mapa
     294.  00:826C  C6 30               	ADD		'0'	
     295.  00:826E  57                  	LD		 D, A
     296.  00:826F                      	
     297.  00:826F  C3 72 82            	JP		pinta_tile_suelto
     298.  00:8272                      fin_pinta_nivel:
     299.  00:8272                      
     300.  00:8272                      
     301.  00:8272                      
     302.  00:8272                      ;;=====================================================
     303.  00:8272                      ;;PINTA_TILE_SUELTO
     304.  00:8272                      ;;=====================================================	
     305.  00:8272                      ; función: 	pinta al tile que digamos en D, en la posición BC
     306.  00:8272                      ; entrada: 	BC (posición a pintar en el mapa),D (qué se va a pintar el esa posición)
     307.  00:8272                      ; salida: 	-
     308.  00:8272                      ; toca:		-
     309.  00:8272                      pinta_tile_suelto:
     310.  00:8272  DB 99               	IN		 A,(REGEST)		;leer registro de estado (recomendado)
     311.  00:8274  79                  	LD		 A,C			;primero byte bajo	
     312.  00:8275  D3 99               	OUT		(REGEST),A
     313.  00:8277  78                  	LD		 A,B			;después byte alto  ********************** preguntar a Fernando cómo que byte bajo es B
     314.  00:8278  F6 40               	OR		1000000b		;+64
     315.  00:827A  D3 99               	OUT		(REGEST),A
     316.  00:827C                      	
     317.  00:827C  7A                  	LD		A,D
     318.  00:827D  D3 98               	OUT		(REGESCVDP),A	;escribe A en VRAM en la posición indicada por los dos OUT anteriores
     319.  00:827F                      fin_pinta_tile_suelto:
     320.  00:827F  C9                  	RET
     321.  00:8280                      
     322.  00:8280                      
     323.  00:8280                      
     324.  00:8280                      
     325.  00:8280                      
     326.  00:8280                      ;;=====================================================
     327.  00:8280                      ;;MIRA_PINTA ENERGIA
     328.  00:8280                      ;;=====================================================	
     329.  00:8280                      ; función: 	actualiza el nivel de energia en la parte de puntuación
     330.  00:8280                      ; nota:		el cuadrado más bajo de ejergía siempre estará pintado... se obviará
     331.  00:8280                      ; entrada: 	prota.energia, array_aux_energia
     332.  00:8280                      ; salida: 	-
     333.  00:8280                      ; toca:		ninguno porque usa EXX
     334.  00:8280                      
     335.  00:8280                      ; nota importante... lo mismo interesa hacer esto con un array para comparar y un bucle
     336.  00:8280                      
     337.  00:8280                      mira_pinta_energia:
     338.  00:8280  D9                  	EXX							;por si acaso guardo el contenido de HL (si veo que no es necesario guardarlo lo quito) uso esto en vez de push por el nº ciclos
     339.  00:8281                      	
     340.  00:8281  3A 31 A4            	LD		 A,(prota_energia) 	;para las comparaciones A variable (actual) y B fijo (limites)
     341.  00:8284                      
     342.  00:8284  0E 00               	LD		 C,TILENEGRO		;para agilizar asignaciones en vez de un valor cte uso otro registro
     343.  00:8286                      pinta_ener:
     344.  00:8286                      pinta_ener_tile_8:
     345.  00:8286  21 49 A4            	LD		HL,ultimo_pos_array_aux_energia	;coloco puntero en array e iré decrementando
     346.  00:8289  06 D9               	LD		 B,TILEENERG8
     347.  00:828B  B8                  	CP		 B
     348.  00:828C  38 04               	JR		C,pinta_ener_tile_8_negro
     349.  00:828E  36 0E               	LD		(HL),TILEMAPVERD
     350.  00:8290  18 01               	JR		pinta_ener_tile_7
     351.  00:8292                      pinta_ener_tile_8_negro:
     352.  00:8292  71                  	LD		(HL),C
     353.  00:8293                      
     354.  00:8293                      pinta_ener_tile_7:
     355.  00:8293  2B                  	DEC		HL
     356.  00:8294  06 BA               	LD		 B,TILEENERG7
     357.  00:8296  B8                  	CP		 B
     358.  00:8297  38 04               	JR		C,pinta_ener_tile_7_negro
     359.  00:8299  36 0E               	LD		(HL),TILEMAPVERD
     360.  00:829B  18 01               	JR		pinta_ener_tile_6
     361.  00:829D                      pinta_ener_tile_7_negro:
     362.  00:829D  71                  	LD		(HL),C
     363.  00:829E                      
     364.  00:829E                      pinta_ener_tile_6:
     365.  00:829E  2B                  	DEC		HL
     366.  00:829F  06 9B               	LD		 B,TILEENERG6
     367.  00:82A1  B8                  	CP		 B
     368.  00:82A2  38 04               	JR		C,pinta_ener_tile_6_negro
     369.  00:82A4  36 0E               	LD		(HL),14
     370.  00:82A6  18 01               	JR		pinta_ener_tile_5
     371.  00:82A8                      pinta_ener_tile_6_negro:
     372.  00:82A8  71                  	LD		(HL),C
     373.  00:82A9                      
     374.  00:82A9                      pinta_ener_tile_5:
     375.  00:82A9  2B                  	DEC		HL
     376.  00:82AA  06 7C               	LD		 B,TILEENERG5
     377.  00:82AC  B8                  	CP		 B
     378.  00:82AD  38 04               	JR		C,pinta_ener_tile_5_negro
     379.  00:82AF  36 0E               	LD		(HL),TILEMAPVERD
     380.  00:82B1  18 01               	JR		pinta_ener_tile_4
     381.  00:82B3                      pinta_ener_tile_5_negro:
     382.  00:82B3  71                  	LD		(HL),C
     383.  00:82B4                      
     384.  00:82B4                      pinta_ener_tile_4:
     385.  00:82B4  2B                  	DEC		HL
     386.  00:82B5  06 5D               	LD		 B,TILEENERG4
     387.  00:82B7  B8                  	CP		 B
     388.  00:82B8  38 04               	JR		C,pinta_ener_tile_4_negro
     389.  00:82BA  36 0F               	LD		(HL),TILEMAPAMAR
     390.  00:82BC  18 01               	JR		pinta_ener_tile_3
     391.  00:82BE                      pinta_ener_tile_4_negro:
     392.  00:82BE  71                  	LD		(HL),C
     393.  00:82BF                      	
     394.  00:82BF                      pinta_ener_tile_3:
     395.  00:82BF  2B                  	DEC		HL
     396.  00:82C0  06 3E               	LD		 B,TILEENERG3
     397.  00:82C2  B8                  	CP		 B
     398.  00:82C3  38 04               	JR		C,pinta_ener_tile_3_negro
     399.  00:82C5  36 0F               	LD		(HL),TILEMAPAMAR
     400.  00:82C7  18 01               	JR		pinta_ener_tile_2
     401.  00:82C9                      pinta_ener_tile_3_negro:
     402.  00:82C9  71                  	LD		(HL),C
     403.  00:82CA                      
     404.  00:82CA                      pinta_ener_tile_2:
     405.  00:82CA  2B                  	DEC		HL
     406.  00:82CB  06 1F               	LD		 B,TILEENERG2
     407.  00:82CD  B8                  	CP		 B
     408.  00:82CE  38 04               	JR		C,pinta_ener_tile_2_negro
     409.  00:82D0  36 10               	LD		(HL),TILEMAPROJO
     410.  00:82D2  18 01               	JR		fin_mira_pinta_energia		;siempre estará pintado el cuadro mínimo
     411.  00:82D4                      pinta_ener_tile_2_negro:
     412.  00:82D4  71                  	LD		(HL),C
     413.  00:82D5                      
     414.  00:82D5                      fin_mira_pinta_energia:
     415.  00:82D5  D9                  	EXX
     416.  00:82D6  C9                  	RET
     417.  00:82D7                      
     418.  00:82D7                      
     419.  00:82D7                      ;;=====================================================
     420.  00:82D7                      ;;PINTA_ENERGIA
     421.  00:82D7                      ;;=====================================================	
     422.  00:82D7                      ; función: 	actualiza el mapa de tiles para que en el próximo refresco se pinte la barra de energia actual
     423.  00:82D7                      ; entrada: 	array_aux_energia
     424.  00:82D7                      ; toca:		todo
     425.  00:82D7                      pinta_energia:
     426.  00:82D7  CD 80 82            	CALL	mira_pinta_energia
     427.  00:82DA                      	
     428.  00:82DA  21 42 A4            	LD		HL, array_aux_energia
     429.  00:82DD  11 88 1A            	LD		DE, TILMAP + POSENERG 	;inicio posición en el mapa de tiles de las vidas
     430.  00:82E0  01 08 00            	LD		BC, NMAXVIDREL			;hay 8 posiciones para vidas/reliquias o espacios en negro si no tiene 8 vidas/reliquias
     431.  00:82E3  C3 5C 00            	JP		LDIRVM
     432.  00:82E6                      fin_pinta_energia:
     433.  00:82E6                      
     434.  00:82E6                      
     435.  00:82E6                      
     436.  00:82E6                      ;;=====================================================
     437.  00:82E6                      ;;BORRA_MAPA
     438.  00:82E6                      ;;=====================================================	
     439.  00:82E6                      ; función: 	pone todas las habitaciones del mapa a negro (los tiles del mapa los rellena con un array a 0 - caracter en negro)
     440.  00:82E6                      ; entrada: 	array_aux_mapa_limpiar
     441.  00:82E6                      ; salida: 	-
     442.  00:82E6                      ; toca:		AF
     443.  00:82E6                      borra_mapa:
     444.  00:82E6  D9                  	EXX
     445.  00:82E7                      	
     446.  00:82E7  21 4A A4            	LD		HL,array_aux_mapa_limpiar
     447.  00:82EA  11 F8 1A            	LD		DE,TILMAP + POSMAPLIN1 	;inicio posición en el mapa de tiles de la primera fila del mapa
     448.  00:82ED  01 07 00            	LD		BC,NHABNIVEL			;cada nivel son 7 filas con 7 habitaciones "posibles"
     449.  00:82F0  CD 5C 00            	CALL	LDIRVM
     450.  00:82F3                      	
     451.  00:82F3  21 4A A4            	LD		HL,array_aux_mapa_limpiar
     452.  00:82F6  11 D8 1A            	LD		DE,TILMAP + POSMAPLIN2
     453.  00:82F9  01 07 00            	LD		BC,NHABNIVEL
     454.  00:82FC  CD 5C 00            	CALL	LDIRVM
     455.  00:82FF                      
     456.  00:82FF  21 4A A4            	LD		HL,array_aux_mapa_limpiar
     457.  00:8302  11 B8 1A            	LD		DE,TILMAP + POSMAPLIN3
     458.  00:8305  01 07 00            	LD		BC,NHABNIVEL
     459.  00:8308  CD 5C 00            	CALL	LDIRVM
     460.  00:830B                      
     461.  00:830B  21 4A A4            	LD		HL,array_aux_mapa_limpiar	
     462.  00:830E  11 98 1A            	LD		DE,TILMAP + POSMAPLIN4
     463.  00:8311  01 07 00            	LD		BC,NHABNIVEL
     464.  00:8314  CD 5C 00            	CALL	LDIRVM
     465.  00:8317                      
     466.  00:8317  21 4A A4            	LD		HL,array_aux_mapa_limpiar	
     467.  00:831A  11 78 1A            	LD		DE,TILMAP + POSMAPLIN5
     468.  00:831D  01 07 00            	LD		BC,NHABNIVEL
     469.  00:8320  CD 5C 00            	CALL	LDIRVM
     470.  00:8323                      
     471.  00:8323  21 4A A4            	LD		HL,array_aux_mapa_limpiar	
     472.  00:8326  11 58 1A            	LD		DE,TILMAP + POSMAPLIN6
     473.  00:8329  01 07 00            	LD		BC,NHABNIVEL
     474.  00:832C  CD 5C 00            	CALL	LDIRVM
     475.  00:832F                      
     476.  00:832F  21 4A A4            	LD		HL,array_aux_mapa_limpiar	
     477.  00:8332  11 38 1A            	LD		DE,TILMAP + POSMAPLIN7
     478.  00:8335  01 07 00            	LD		BC,NHABNIVEL
     479.  00:8338  CD 5C 00            	CALL	LDIRVM
     480.  00:833B                      	
     481.  00:833B  D9                  	EXX
     482.  00:833C                      fin_borra_mapa:
     483.  00:833C  C9                  	RET
     484.  00:833D                      
     485.  00:833D                      
     486.  00:833D                      
     487.  00:833D                      
     488.  00:833D                      
     489.  00:833D                      ;=====================================================
     490.  00:833D                      ;;PINTA_ARRAY
     491.  00:833D                      ;;=====================================================	
     492.  00:833D                      ;;funcion:  (pinta el mismo tile) se le pasa un array con posiciones de tiles y coordenadas x e y y los pinta en screen 2
     493.  00:833D                      ;;entrada:	wordaux1 (pos inicio sc2 donde pintar) y wordaux2 (puntero al array a pintar), BC (posición en tilemap) , D filas y E columnas
     494.  00:833D                      ;;salida:	-
     495.  00:833D                      ;;importante: necesita de una variable wordaux1 tipo WD (wordaux1: 	DW	0)
     496.  00:833D                      ;; ejemplo llamada:
     497.  00:833D                      	;~ LD		HL,array_tiles					;guardo puntero al array a pintar (como psar por referencia)
     498.  00:833D                      	;~ LD		(wordaux2),HL					;en la variable wordaux2
     499.  00:833D                      	;~ LD		HL,SC2MAP + 256 + 32			;calcula posición en tilemap
     500.  00:833D                      	;~ LD		(wordaux1),HL					;guarda valor pos tilemap en wordaux1
     501.  00:833D                      	;~ LD		B,H								;coloca posición tilemap BC
     502.  00:833D                      	;~ LD		C,L
     503.  00:833D                      	;~ LD		D,2								;nº de filas
     504.  00:833D                      	;~ LD		E,3								;nº de columnas
     505.  00:833D                      	;~ CALL	pinta_array
     506.  00:833D                      
     507.  00:833D                      pinta_array:
     508.  00:833D  F5                  	PUSH	AF
     509.  00:833E                      	
     510.  00:833E                      	;contamos con que la posición "global" en el tilemap está ya en BC
     511.  00:833E                      	;y el puntero al array a pintar en wordaux2 y la posición en tilemap sc2 en wordaux1
     512.  00:833E                      	;inicializa
     513.  00:833E  DB 99               	IN		 A,(REGEST)		;leer registro de estado (recomendado)
     514.  00:8340                      	
     515.  00:8340                      	;coloca puntero para pintar tile según BC
     516.  00:8340  79                  	LD		 A,C			;primero byte bajo	
     517.  00:8341  D3 99               	OUT		(REGEST),A
     518.  00:8343  78                  	LD		 A,B			;después byte alto  ********************** preguntar a Fernando cómo que byte bajo es B
     519.  00:8344  F6 40               	OR		1000000b		;+64
     520.  00:8346  D3 99               	OUT		(REGEST),A
     521.  00:8348                      
     522.  00:8348                      	
     523.  00:8348  2A 72 83            	LD		HL,(wordaux2)	;HL es lo que se pintará y le he pasado el puntero del array tilemap a pintar
     524.  00:834B                      .pa_pinta_fila:
     525.  00:834B  43                  	LD		 B,E
     526.  00:834C                      .pa_pinta_columnas: 		;finta la fila (pintando las columnas)
     527.  00:834C  7E                  	LD		 A,(HL)
     528.  00:834D  D3 98               	OUT		(REGESCVDP),A	;escribe A en VRAM en la posición indicada por los dos OUT anteriores
     529.  00:834F  23                  	INC		HL
     530.  00:8350  10 FA               	DJNZ	.pa_pinta_columnas
     531.  00:8352                      	
     532.  00:8352                      	;no es una solución elegante lo de repetir código pero queda claro
     533.  00:8352                      	;por si hay otra fila
     534.  00:8352  E5                  	PUSH	HL
     535.  00:8353  2A 70 83            	LD		HL,(wordaux1)
     536.  00:8356  01 20 00            	LD		BC,32
     537.  00:8359  09                  	ADD		HL,BC
     538.  00:835A  22 70 83            	LD		(wordaux1),HL
     539.  00:835D  44                  	LD		B,H
     540.  00:835E  4D                  	LD		C,L
     541.  00:835F  E1                  	POP		HL
     542.  00:8360                      	
     543.  00:8360  79                  	LD		 A,C			;primero byte bajo	
     544.  00:8361  D3 99               	OUT		(REGEST),A
     545.  00:8363  78                  	LD		 A,B			;después byte alto 
     546.  00:8364  F6 40               	OR		1000000b		;+64
     547.  00:8366  D3 99               	OUT		(REGEST),A
     548.  00:8368                      	
     549.  00:8368                      	;si hay otra fila repite
     550.  00:8368  15                  	DEC		 D
     551.  00:8369  7A                  	LD		 A,D		;¿hay otra fila?
     552.  00:836A  B7                  	OR		 A
     553.  00:836B  C2 4B 83            	JP		NZ,.pa_pinta_fila
     554.  00:836E                      	
     555.  00:836E  F1                  	POP		AF
     556.  00:836F                      	
     557.  00:836F                      fin_pinta_array:
     558.  00:836F  C9                  	RET
     559.  00:8370                      ;;variables asocidas a la función (no sé si dejarlo aquí y encapsularlo todo o hacerla reutilizable)
     560.  00:8370                      ;; por de pronto la dejo aquí
     561.  00:8370  00 00               wordaux1:		DW	0	;almacena la posición en el tilemap 0 al 675
     562.  00:8372  00 00               wordaux2:		DW	0	;almacena puntero a array de tiles (posiciones en realidad) a pintar (posiciones repetidas en los 3 bancos)
     563.  00:8374                      
     564.  00:8374                      
     565.  00:8374                      
     566.  00:8374                      
     567.  00:8374                      
     568.  00:8374                      ;;=====================================================
     569.  00:8374                      ;;PINTA_PUERTAS
     570.  00:8374                      ;;=====================================================	
     571.  00:8374                      ; función: 	examina A y mira si tiene que pintar puertas de los lados, arriba o abrajo o las escaleras (o no)
     572.  00:8374                      ; entrada: 	habitacion_actual 1 escalera 1 puerta arriba 1 pu der 1 pu aba 1 pu izq (si es 0 pinta pared)
     573.  00:8374                      ; salida: 	-
     574.  00:8374                      ; toca:		todo
     575.  00:8374                      pinta_puertas:
     576.  00:8374  CD 0F 81            	CALL	pinta_parte_superior_pantalla	;pinta pasillo y paredes
     577.  00:8377                      
     578.  00:8377  CD A0 80            	CALL	localiza_info_habitacion	;busca qué puertas debe pintar y lo mete en habitación_actual
     579.  00:837A                      	
     580.  00:837A  3A 01 A1            	LD		 A, (habitacion_actual)		;se mete en A porque la función pide A y para no buscar el valor 4 veces
     581.  00:837D                      
     582.  00:837D                      ;	BIT		 4, A
     583.  00:837D                      ;	CALL	nz, pinta_escalera
     584.  00:837D                      
     585.  00:837D  CB 5F               	BIT		 3, A
     586.  00:837F  C4 A7 83            	CALL	nz, pinta_puerta_arr
     587.  00:8382                      
     588.  00:8382  CB 57               	BIT		 2, A
     589.  00:8384  C4 BC 83            	CALL	nz, pinta_puerta_der
     590.  00:8387                      
     591.  00:8387  CB 4F               	BIT		 1, A
     592.  00:8389  C4 92 83            	CALL	nz, pinta_puerta_aba
     593.  00:838C                      	
     594.  00:838C  CB 47               	BIT		 0, A
     595.  00:838E  C4 D1 83            	CALL	nz, pinta_puerta_izq
     596.  00:8391                      fin_pinta_puertas:
     597.  00:8391  C9                  	RET
     598.  00:8392                      
     599.  00:8392                      
     600.  00:8392                      
     601.  00:8392                      
     602.  00:8392                      ;;=====================================================
     603.  00:8392                      ;;PINTA_PUERTA_ABA
     604.  00:8392                      ;;=====================================================	
     605.  00:8392                      ; función: 	pinta la puerta de abajo
     606.  00:8392                      ; entrada: 	array_puerta_abajo, wordaux2, wordaux1
     607.  00:8392                      ; salida: 	-
     608.  00:8392                      ; toca:		HL,BC, DE
     609.  00:8392                      pinta_puerta_aba:
     610.  00:8392  21 7B A4            	LD		HL,array_puerta_abajo			;guardo puntero al array a pintar (como psar por referencia)
     611.  00:8395  22 72 83            	LD		(wordaux2),HL					;en la variable wordaux2
     612.  00:8398  21 EE 19            	LD		HL,TILMAP + POSPUERABAJ			;calcula posición en tilemap
     613.  00:839B  22 70 83            	LD		(wordaux1),HL					;guarda valor pos tilemap en wordaux1
     614.  00:839E  44                  	LD		B,H								;coloca posición tilemap BC
     615.  00:839F  4D                  	LD		C,L
     616.  00:83A0  16 01               	LD		D,1								;nº de filas
     617.  00:83A2  1E 04               	LD		E,4								;nº de columnas
     618.  00:83A4  C3 3D 83            	JP		pinta_array
     619.  00:83A7                      fin_pinta_puerta_aba:
     620.  00:83A7                      
     621.  00:83A7                      ;;=====================================================
     622.  00:83A7                      ;;PINTA_PUERTA_ARR
     623.  00:83A7                      ;;=====================================================	
     624.  00:83A7                      ; función: 	pinta la puerta de arriba
     625.  00:83A7                      ; entrada: 	array_puerta_arriba, wordaux2, wordaux1
     626.  00:83A7                      ; salida: 	-
     627.  00:83A7                      ; toca:		HL,BC, DE
     628.  00:83A7                      pinta_puerta_arr:
     629.  00:83A7  21 52 A4            	LD		HL,array_puerta_arriba			;guardo puntero al array a pintar (como psar por referencia)
     630.  00:83AA  22 72 83            	LD		(wordaux2),HL					;en la variable wordaux2
     631.  00:83AD  21 8E 18            	LD		HL,TILMAP + POSPUERARRI			;calcula posición en tilemap
     632.  00:83B0  22 70 83            	LD		(wordaux1),HL					;guarda valor pos tilemap en wordaux1
     633.  00:83B3  44                  	LD		B,H								;coloca posición tilemap BC
     634.  00:83B4  4D                  	LD		C,L
     635.  00:83B5  16 05               	LD		D,5								;nº de filas
     636.  00:83B7  1E 04               	LD		E,4								;nº de columnas
     637.  00:83B9  C3 3D 83            	JP		pinta_array
     638.  00:83BC                      fin_pinta_puerta_arr:
     639.  00:83BC                      
     640.  00:83BC                      
     641.  00:83BC                      ;;=====================================================
     642.  00:83BC                      ;;PINTA_PUERTA_DER
     643.  00:83BC                      ;;=====================================================	
     644.  00:83BC                      ; función: 	pinta la puerta de la derecha
     645.  00:83BC                      ; entrada: 	array_puerta_derecha, wordaux2, wordaux1
     646.  00:83BC                      ; salida: 	-
     647.  00:83BC                      ; toca:		HL,BC, DE
     648.  00:83BC                      pinta_puerta_der:
     649.  00:83BC  21 66 A4            	LD		HL,array_puerta_derecha			;guardo puntero al array a pintar (como psar por referencia)
     650.  00:83BF  22 72 83            	LD		(wordaux2),HL					;en la variable wordaux2
     651.  00:83C2  21 FC 18            	LD		HL,TILMAP + POSPUERDERE			;calcula posición en tilemap
     652.  00:83C5  22 70 83            	LD		(wordaux1),HL					;guarda valor pos tilemap en wordaux1
     653.  00:83C8  44                  	LD		B,H								;coloca posición tilemap BC
     654.  00:83C9  4D                  	LD		C,L
     655.  00:83CA  16 07               	LD		D,7								;nº de filas
     656.  00:83CC  1E 03               	LD		E,3								;nº de columnas
     657.  00:83CE  C3 3D 83            	JP		pinta_array
     658.  00:83D1                      fin_pinta_puerta_der:
     659.  00:83D1                      	
     660.  00:83D1                      ;;=====================================================
     661.  00:83D1                      ;;PINTA_PUERTA_IZQ
     662.  00:83D1                      ;;=====================================================	
     663.  00:83D1                      ; función: 	pinta la puerta de la izquierda
     664.  00:83D1                      ; entrada: 	array_puerta_izquierda, wordaux2, wordaux1
     665.  00:83D1                      ; salida: 	-
     666.  00:83D1                      ; toca:		HL,BC, DE
     667.  00:83D1                      pinta_puerta_izq:
     668.  00:83D1  21 7F A4            	LD		HL,array_puerta_izquierda		;guardo puntero al array a pintar (como pasar por referencia)
     669.  00:83D4  22 72 83            	LD		(wordaux2),HL					;en la variable wordaux2
     670.  00:83D7  21 E1 18            	LD		HL,TILMAP + POSPUERIZQU			;calcula posición en tilemap
     671.  00:83DA  22 70 83            	LD		(wordaux1),HL					;guarda valor pos tilemap en wordaux1
     672.  00:83DD  44                  	LD		B,H								;coloca posición tilemap BC
     673.  00:83DE  4D                  	LD		C,L
     674.  00:83DF  16 07               	LD		D,7								;nº de filas
     675.  00:83E1  1E 03               	LD		E,3								;nº de columnas
     676.  00:83E3  C3 3D 83            	JP		pinta_array
     677.  00:83E6                      fin_pinta_puerta_izq:
     678.  00:83E6                      
     679.  00:83E6                      
     680.  00:83E6                      
     681.  00:83E6                      
     682.  00:83E6                      ;;=====================================================
     683.  00:83E6                      ;;POSICIONA_EN_MAPA
     684.  00:83E6                      ;;=====================================================	
     685.  00:83E6                      ; función: 	en el mapa de marcadores de la derecha/abajo marca un cuadro en gris o con un muñeco
     686.  00:83E6                      ;			según el valor de prota.posición pinta entrá un muñeco y por donde vaya pasando el prota
     687.  00:83E6                      ;			quedará en gris
     688.  00:83E6                      ; entrada: 	elemento_pintar_mapa, prota_pos_mapy, prota_pos_mapx
     689.  00:83E6                      ; salida: 	-
     690.  00:83E6                      ; toca:		todos
     691.  00:83E6                      posiciona_en_mapa:
     692.  00:83E6                      	;#0238 es la posición en mapa de tiles de la esquina superior izquierda del mapa (569 en decimal)
     693.  00:83E6  21 38 1A            	LD		HL, TILMAP + POSMAPA;pos inicial
     694.  00:83E9                      	
     695.  00:83E9                      	;ahora se le calcula la fila a pintar ya que va de abajo a arriba y no como en el mapa + columna
     696.  00:83E9                      .sumar_fila:
     697.  00:83E9  3A 30 A4            	LD		 A,(prota_pos_mapy)
     698.  00:83EC  FE 01               	CP		 1
     699.  00:83EE  28 2A               	JR		 Z, .fila_1
     700.  00:83F0  3A 30 A4            	LD		 A,(prota_pos_mapy)
     701.  00:83F3  FE 02               	CP		 2
     702.  00:83F5  28 2A               	JR		 Z, .fila_2
     703.  00:83F7  3A 30 A4            	LD		 A,(prota_pos_mapy)
     704.  00:83FA  FE 03               	CP		 3
     705.  00:83FC  28 2A               	JR		 Z, .fila_3
     706.  00:83FE  3A 30 A4            	LD		 A,(prota_pos_mapy)
     707.  00:8401  FE 04               	CP		 4
     708.  00:8403  28 2A               	JR		 Z, .fila_4
     709.  00:8405  3A 30 A4            	LD		 A,(prota_pos_mapy)
     710.  00:8408  FE 05               	CP		 5
     711.  00:840A  28 2A               	JR		 Z, .fila_5
     712.  00:840C  3A 30 A4            	LD		 A,(prota_pos_mapy)
     713.  00:840F  FE 06               	CP		 6
     714.  00:8411  28 2A               	JR		 Z, .sumar_columna
     715.  00:8413                      	;no consulto la 0 porque si no es ninguna de las anteriores es 0 y por tanto sería un jr fila_0
     716.  00:8413                      	
     717.  00:8413                      .fila_0:
     718.  00:8413  11 C0 00            	LD		DE, 192
     719.  00:8416  19                  	ADD		HL, DE			;nota: se que repito el ADD pero la otra opción es inicializar DE y ya tarda mucho la funicón (es por velicidad)
     720.  00:8417  C3 3D 84            	JP		.sumar_columna
     721.  00:841A                      .fila_1:
     722.  00:841A  11 A0 00            	LD		DE, 160
     723.  00:841D  19                  	ADD		HL, DE
     724.  00:841E  C3 3D 84            	JP		.sumar_columna
     725.  00:8421                      .fila_2:
     726.  00:8421  11 80 00            	LD		DE, 128
     727.  00:8424  19                  	ADD		HL, DE
     728.  00:8425  C3 3D 84            	JP		.sumar_columna
     729.  00:8428                      .fila_3:
     730.  00:8428  11 60 00            	LD		DE, 96
     731.  00:842B  19                  	ADD		HL, DE
     732.  00:842C  C3 3D 84            	JP		.sumar_columna
     733.  00:842F                      .fila_4:
     734.  00:842F  11 40 00            	LD		DE, 64
     735.  00:8432  19                  	ADD		HL, DE
     736.  00:8433  C3 3D 84            	JP		.sumar_columna
     737.  00:8436                      .fila_5:
     738.  00:8436  11 20 00            	LD		DE, 32
     739.  00:8439  19                  	ADD		HL, DE
     740.  00:843A  C3 3D 84            	JP		.sumar_columna
     741.  00:843D                      .fila_6:
     742.  00:843D                      	;pongo fila_6 por poner ya que si es la fila 6 equiv. a primera fila del mapa y por tanto no suma fila
     743.  00:843D                      	
     744.  00:843D                      	
     745.  00:843D                      .sumar_columna:
     746.  00:843D  3A 2F A4            	LD 		 A, (prota_pos_mapx) ;POS X
     747.  00:8440  16 00               	LD		 D, 0
     748.  00:8442  5F                  	LD		 E, A
     749.  00:8443  19                  	ADD		HL, DE
     750.  00:8444                      	
     751.  00:8444                      	;resultado en BC para usar en la función pinta_tile_suelto
     752.  00:8444  44                  	LD		 B, H
     753.  00:8445  4D                  	LD		 C, L
     754.  00:8446                      	
     755.  00:8446                      	;terminado de fijar la coordenada recuperamos a para ver el tipo
     756.  00:8446  3A 51 A4            	LD		 A, (elemento_pintar_mapa)
     757.  00:8449  FE 09               	CP		 TILEGRISM
     758.  00:844B  CA 53 84            	JP		 Z, pinta_pos_mapa_vacio
     759.  00:844E  16 13               	LD		 D, TILEPROTAM
     760.  00:8450  C3 55 84            	JP		fin_pinta_pos_mapa
     761.  00:8453                      pinta_pos_mapa_vacio:
     762.  00:8453  16 09               	LD		 D, TILEGRISM	
     763.  00:8455                      
     764.  00:8455                      fin_pinta_pos_mapa:
     765.  00:8455  C3 72 82            	JP		pinta_tile_suelto
     766.  00:8458                      fin_posiciona_en_mapa:
     767.  00:8458                      
     768.  00:8458                      
     769.  00:8458                      
     770.  00:8458                      
     771.  00:8458                      ;;=====================================================
     772.  00:8458                      ;;EFECTO_IMAGEN_TIRA_RELIQUIA
     773.  00:8458                      ;;=====================================================	
     774.  00:8458                      ; función: 	hace que el fondo de la pantalla parpadee N veces
     775.  00:8458                      ; entrada: 	actualiza_reliquias_sn
     776.  00:8458                      ; salida: 	-
     777.  00:8458                      ; toca: 	todo
     778.  00:8458                      efecto_imagen_tira_reliquia:
     779.  00:8458  3E 14               	LD		 A, 20;RETARDOREL
     780.  00:845A  47                  	LD		 B, A
     781.  00:845B                      
     782.  00:845B                      .parpadea_fondo:
     783.  00:845B  C5                  	PUSH	BC
     784.  00:845C  21 16 A4            	LD		HL, color_bomba1
     785.  00:845F  CD D6 80            	CALL	color_pantalla
     786.  00:8462                      	
     787.  00:8462                      	;~ PUSH	BC
     788.  00:8462                      	;~ LD		 A, 255
     789.  00:8462                      	;~ LD		 B, A
     790.  00:8462                      ;~ .bucle_de_espera:
     791.  00:8462                      	;~ NOP
     792.  00:8462                      	;~ DJNZ	 .bucle_de_espera
     793.  00:8462                      	;~ POP		BC
     794.  00:8462  76                  	HALT
     795.  00:8463                      
     796.  00:8463                      	
     797.  00:8463  21 19 A4            	LD		HL, color_bomba2
     798.  00:8466  CD D6 80            	CALL	color_pantalla
     799.  00:8469  C1                  	POP		BC
     800.  00:846A  10 EF               	DJNZ	.parpadea_fondo
     801.  00:846C                      	
     802.  00:846C  21 13 A4            	LD		HL, color_base
     803.  00:846F  C3 D6 80            	JP		color_pantalla
     804.  00:8472                      fin_efecto_imagen_tira_reliquia:
     805.  00:8472                      
     806.  00:8472                      
     807.  00:8472                      
     808.  00:8472                      
     809.  00:8472                      ;;=====================================================
     810.  00:8472                      ;;PINTA_OBJ_AYUDA
     811.  00:8472                      ;;=====================================================	
     812.  00:8472                      ; función: 	pinta objetos en pantalla de 2x2 según están en map (ojo están en el orden de los sprites de 2x2)
     813.  00:8472                      ; entrada: 	
     814.  00:8472                      ; salida: 	-
     815.  00:8472                      ; toca:		
     816.  00:8472                      pinta_obj_ayuda:
     817.  00:8472                      	;pinta_tile_suelto: 	BC (posición a pintar en el mapa),D (qué se va a pintar el esa posición)
     818.  00:8472  01 00 19            	LD		BC, TILMAP + 256
     819.  00:8475  3E 98               	LD		 A, 152
     820.  00:8477                      	
     821.  00:8477                      	;suma 16 bits
     822.  00:8477  81                  	ADD		 C
     823.  00:8478  4F                  	LD		 C, A
     824.  00:8479  88                  	ADC		 B
     825.  00:847A  91                  	SUB		 C
     826.  00:847B  47                  	LD		 B, A
     827.  00:847C                      	
     828.  00:847C                      	
     829.  00:847C                      
     830.  00:847C                      	
     831.  00:847C  16 C8               	LD		 D, ORACIONON
     832.  00:847E  CD 72 82            	CALL	pinta_tile_suelto
     833.  00:8481                      fin_pinta_obj_ayuda:
     834.  00:8481                      
     108   00:8481                      	
     109   00:8481                      	include "subr_sprites.asm"
       1.  00:8481                      
       2.  00:8481                      ;;=====================================================
       3.  00:8481                      ;;SUBRUTINAS ENCARGADAS DE MANEJAR LOS SPRITES
       4.  00:8481                      ;;=====================================================	
       5.  00:8481                      
       6.  00:8481                      
       7.  00:8481                      ;; PREGUNTAR SI A FERNANDO SI ES MEJOR USAR LISTAS O ALGO PARA AHORRAR CÓDIGO
       8.  00:8481                      
       9.  00:8481                      
      10.  00:8481                      
      11.  00:8481                      
      12.  00:8481                      ;;=====================================================
      13.  00:8481                      ;;CARGA_PATRONES_SPRITES_NIVEL
      14.  00:8481                      ;;=====================================================	
      15.  00:8481                      ; función: 	examina el nivel y carga los patrones específicos necesarios
      16.  00:8481                      ; entrada: 	-
      17.  00:8481                      ; salida: 	-
      18.  00:8481                      ; toca: 	-
      19.  00:8481                      carga_patrones_sprites_nivel:
      20.  00:8481                      	
      21.  00:8481  CD 8C 84            	CALL 	carga_patrones_nivel_comunes
      22.  00:8484                      	
      23.  00:8484                      	;carga atrones no comunes
      24.  00:8484  3A 2C A4            	LD		 A, (prota_nivel)
      25.  00:8487  B7                  	OR		 A
      26.  00:8488  CA 98 84            	JP		 Z, carga_patrones_sprites_nivel1
      27.  00:848B                      	
      28.  00:848B                      	
      29.  00:848B                      fin_carga_patrones_sprites_nivel:
      30.  00:848B  C9                  	RET		;dejo este ret de momento pero cuando la subrutina esté terminada sobrará
      31.  00:848C                      
      32.  00:848C                      	;RET comparo numeros con jp para incluir el RET con lo que el último ret me sobra
      33.  00:848C                      
      34.  00:848C                      ;;=====================================================
      35.  00:848C                      ;;CARGA_PATRONES_SPRITES_NIVEL_COMUNES
      36.  00:848C                      ;;=====================================================	
      37.  00:848C                      ; función: 	carga los patrones comunes en todos los niveles
      38.  00:848C                      ; entrada: 	-
      39.  00:848C                      ; salida: 	-
      40.  00:848C                      ; toca: 	-
      41.  00:848C                      carga_patrones_nivel_comunes:	
      42.  00:848C  21 81 97            	LD		HL, sprites_comunes
      43.  00:848F  11 00 38            	LD		DE, SPRTBL
      44.  00:8492  01 C0 00            	LD		BC, fin_sprites_comunes-sprites_comunes
      45.  00:8495  C3 5C 00            	JP		LDIRVM
      46.  00:8498                      fin_carga_patrones_nivel_comunes:
      47.  00:8498                      
      48.  00:8498                      
      49.  00:8498                      ;;=====================================================
      50.  00:8498                      ;;CARGA_PATRONES_SPRITES_NIVEL1
      51.  00:8498                      ;;=====================================================	
      52.  00:8498                      ; función: 	copia los patrones de los sprites que e van a usar en el nivel 1 en vram
      53.  00:8498                      ; entrada: 	-
      54.  00:8498                      ; salida: 	-
      55.  00:8498                      ; toca: 	-
      56.  00:8498                      carga_patrones_sprites_nivel1:
      57.  00:8498                      
      58.  00:8498                      
      59.  00:8498                      	;~ ;sprite sprite_reliquia
      60.  00:8498                      	;~ LD		HL,sprite_reliquia
      61.  00:8498                      	;~ LD		DE,#3880
      62.  00:8498                      	;~ LD		BC,32				;32 bytes (sprites de 2 x 2)
      63.  00:8498                      	;~ CALL	LDIRVM
      64.  00:8498                      
      65.  00:8498                      fin_carga_patrones_sprites:
      66.  00:8498  C9                  	RET
      67.  00:8499                      
      68.  00:8499                      
      69.  00:8499                      ;;=====================================================
      70.  00:8499                      ;;ACTUALIZA_ARRAY_SPRITES_VRAM
      71.  00:8499                      ;;=====================================================	
      72.  00:8499                      ; función: 	copia el array con los valores de los sprites (pos, color, plano) en VRAM
      73.  00:8499                      ; entrada: 	-
      74.  00:8499                      ; salida: 	-
      75.  00:8499                      ; toca: 	todos los registros. Como me interesa la velocidad, si necesito copiar de algo lo hago fuera
      76.  00:8499                      render_sprites:
      77.  00:8499                      	;volcando el array con toda la info de los sprites a la zona de atributos de sprites
      78.  00:8499  21 A4 A4            	LD		HL,array_sprites
      79.  00:849C  11 00 1B            	LD		DE,SPRART
      80.  00:849F  01 80 00            	LD		BC,4 * 32				;32 sprites x 4 bytes controlando el sprite (Y, X, plano, color)
      81.  00:84A2  C3 5C 00            	JP		LDIRVM
      82.  00:84A5                      fin_actualiza_array_sprites_vram:
      83.  00:84A5                      
      84.  00:84A5                      
      85.  00:84A5                      ;;=====================================================
      86.  00:84A5                      ;;VUELCA_RESULTADO_PUNTOMIRA_ARRAY
      87.  00:84A5                      ;;=====================================================	
      88.  00:84A5                      ; función: 	coloca los valores del punto de mira en la variable array_sprites para ser volcados en VRAM
      89.  00:84A5                      ; entrada: 	array_sprites_pm, prota.XXXXX
      90.  00:84A5                      ; salida: 	-
      91.  00:84A5                      ; toca: 	-
      92.  00:84A5                      vuelca_resultado_puntomira_array:
      93.  00:84A5  DD 21 A4 A4         	LD		IX, array_sprites_pm
      94.  00:84A9                      	;posición y de los dos sprites que conforman el punto de mira
      95.  00:84A9  3A 1D A4            	LD		 A, (prota.posy)
      96.  00:84AC  DD 77 00            	LD		(IX  ), A
      97.  00:84AF  DD 77 04            	LD		(IX+4), A
      98.  00:84B2                      	;posición x de los dos sprites que conforman el punto de mira
      99.  00:84B2  3A 1C A4            	LD		 A, (prota.posx)
     100.  00:84B5  DD 77 01            	LD		(IX+1), A
     101.  00:84B8  DD 77 05            	LD		(IX+5), A
     102.  00:84BB                      	;plano
     103.  00:84BB  DD 36 02 00         	LD		(IX+2), 0
     104.  00:84BF  DD 36 06 04         	LD		(IX+6), 4	;al ser sprites de 16x16 hay que ir de 4 en 4
     105.  00:84C3                      	;color
     106.  00:84C3  3A 1E A4            	LD		 A, (prota.escena)
     107.  00:84C6  B7                  	OR		 A
     108.  00:84C7  C2 D3 84            	JP		NZ,.codigo_color_2
     109.  00:84CA                      .codigo_color_1:
     110.  00:84CA  DD 36 03 0F         	LD		(IX+3), COLBLANCO
     111.  00:84CE  DD 36 07 08         	LD		(IX+7), COLROJO
     112.  00:84D2  C9                  	RET
     113.  00:84D3                      .codigo_color_2:
     114.  00:84D3  DD 36 03 08         	LD		(IX+3), COLROJO
     115.  00:84D7  DD 36 07 0F         	LD		(IX+7), COLBLANCO
     116.  00:84DB  C9                  	RET
     117.  00:84DC                      fin_vuelca_resultado_puntomira_array:
     118.  00:84DC                      
     119.  00:84DC                      
     120.  00:84DC                      ;;=====================================================
     121.  00:84DC                      ;;CHECK_PLAYER
     122.  00:84DC                      ;;=====================================================	
     123.  00:84DC                      ; función: 	MIRA EL CONTROL Y APLICA LA LOGICA DE MOVIMIENTO DEL PROTAGONISTA
     124.  00:84DC                      ; entrada: 	-
     125.  00:84DC                      ; salida: 	-
     126.  00:84DC                      ; toca: 	A
     127.  00:84DC                      check_player:
     128.  00:84DC  CD 7B 85            	CALL	update_controllers_status
     129.  00:84DF  B7                  	OR		 A
     130.  00:84E0  C8                  	RET		 Z						;si no se ha pulsado nada no se necesita mirar nada
     131.  00:84E1                      
     132.  00:84E1  CB 1F               	RR		 A
     133.  00:84E3  DC FC 84            	CALL	 C, mueve_arriba
     134.  00:84E6  CB 1F               	RR		 A
     135.  00:84E8  DC 18 85            	CALL	 C, mueve_abajo
     136.  00:84EB  CB 1F               	RR		 A
     137.  00:84ED  DC 27 85            	CALL	 C, mueve_izquierda
     138.  00:84F0  CB 1F               	RR		 A
     139.  00:84F2  DC 09 85            	CALL	 C, mueve_derecha
     140.  00:84F5                      	
     141.  00:84F5                      	;zona para mirar disparo Recibe A que tendrá 0000 0 0 X-letra M X-espacio 
     142.  00:84F5  CD 34 85            	CALL	mira_disparo
     143.  00:84F8                      	
     144.  00:84F8  C3 A5 84            	JP		vuelca_resultado_puntomira_array
     145.  00:84FB                      f;in_check_player:
     146.  00:84FB  C9                  	RET
     147.  00:84FC                      
     110   00:84FC                      	
     111   00:84FC                      	include "subr_teclado_joy.asm"
       1.  00:84FC                      ;;=====================================================
       2.  00:84FC                      ;;SUBRUTINAS QUE CAPTURN EL JOYSTICK Y TECLADO Y MUEVEN PUNTO DE MIRA
       3.  00:84FC                      ;;=====================================================
       4.  00:84FC                      
       5.  00:84FC                      ;;=====================================================
       6.  00:84FC                      ;;MUEVE_ARRIBA
       7.  00:84FC                      ;;=====================================================	
       8.  00:84FC                      ; función: 	decrementa y si se no sale de los límites el valor del punto de mira a la derecha
       9.  00:84FC                      ; entrada: 	-
      10.  00:84FC                      ; salida: 	-
      11.  00:84FC                      ; toca: 	-
      12.  00:84FC                      mueve_arriba:
      13.  00:84FC  F5                  	PUSH		AF
      14.  00:84FD                      	
      15.  00:84FD  3A 1D A4            	LD		 	 A, (prota.posy)
      16.  00:8500  3D                  	DEC			 A
      17.  00:8501  CA 07 85            	JP			 Z,.no_decrementa_y
      18.  00:8504  32 1D A4            	LD			(prota.posy), A
      19.  00:8507                      	
      20.  00:8507                      .no_decrementa_y:
      21.  00:8507  F1                  	POP			AF
      22.  00:8508                      fin_mueve_arriba:
      23.  00:8508  C9                  	RET
      24.  00:8509                      
      25.  00:8509                      
      26.  00:8509                      ;;=====================================================
      27.  00:8509                      ;;MUEVE_DERECHA
      28.  00:8509                      ;;=====================================================	
      29.  00:8509                      ; función: 	incrementa si se no sale de los límites el valor del punto de mira a la derecha
      30.  00:8509                      ; entrada: 	-
      31.  00:8509                      ; salida: 	-
      32.  00:8509                      ; toca: 	-
      33.  00:8509                      mueve_derecha:
      34.  00:8509  F5                  	PUSH		AF
      35.  00:850A                      	
      36.  00:850A  3A 1C A4            	LD		 	 A, (prota.posx)
      37.  00:850D  3C                  	INC			 A
      38.  00:850E  FE EF               	CP			 A, LIMPANTDER - 16
      39.  00:8510  CA 16 85            	JP			 Z, .no_incrementa_x
      40.  00:8513  32 1C A4            	LD			(prota.posx), A
      41.  00:8516                      	
      42.  00:8516                      .no_incrementa_x:
      43.  00:8516  F1                  	POP			AF
      44.  00:8517                      fin_mueve_derecha:
      45.  00:8517  C9                  	RET
      46.  00:8518                      
      47.  00:8518                      
      48.  00:8518                      ;;=====================================================
      49.  00:8518                      ;;MUEVE_ABAJO
      50.  00:8518                      ;;=====================================================	
      51.  00:8518                      ; función: 	incrementa y si se no sale de los límites el valor del punto de mira abajo
      52.  00:8518                      ; entrada: 	-
      53.  00:8518                      ; salida: 	-
      54.  00:8518                      ; toca: 	-
      55.  00:8518                      mueve_abajo:
      56.  00:8518  F5                  	PUSH		AF
      57.  00:8519                      	
      58.  00:8519  3A 1D A4            	LD		 	 A, (prota.posy)
      59.  00:851C  3C                  	INC			 A
      60.  00:851D  FE 70               	CP			 A, LIMPANTABA - 16
      61.  00:851F  CA 25 85            	JP			 Z,.no_incrementa_y
      62.  00:8522  32 1D A4            	LD			(prota.posy), A
      63.  00:8525                      	
      64.  00:8525                      .no_incrementa_y:
      65.  00:8525  F1                  	POP			AF
      66.  00:8526                      fin_mueve_abajo:
      67.  00:8526  C9                  	RET
      68.  00:8527                      	
      69.  00:8527                      	
      70.  00:8527                      ;;=====================================================
      71.  00:8527                      ;;MUEVE_IZQUIERDA
      72.  00:8527                      ;;=====================================================	
      73.  00:8527                      ; función: 	decrementa x si se no sale de los límites el valor del punto de mira a la izquierda
      74.  00:8527                      ; entrada: 	-
      75.  00:8527                      ; salida: 	-
      76.  00:8527                      ; toca: 	-
      77.  00:8527                      mueve_izquierda:
      78.  00:8527  F5                  	PUSH		AF
      79.  00:8528                      	
      80.  00:8528  3A 1C A4            	LD		 	 A, (prota.posx)
      81.  00:852B  3D                  	DEC			 A
      82.  00:852C                      ;	CP			 A, LIMPANTIZQ
      83.  00:852C  CA 32 85            	JP			 Z,.no_decrementa_x
      84.  00:852F  32 1C A4            	LD			(prota.posx), A
      85.  00:8532                      	
      86.  00:8532                      .no_decrementa_x:
      87.  00:8532  F1                  	POP			AF
      88.  00:8533                      fin_mueve_izquierda:
      89.  00:8533  C9                  	RET
      90.  00:8534                      
      91.  00:8534                      
      92.  00:8534                      
      93.  00:8534                      ;;=====================================================
      94.  00:8534                      ;;MIRA_DISPARO
      95.  00:8534                      ;;=====================================================	
      96.  00:8534                      ; función: 	Mira si se ha pulsado alguno de los dos disparos
      97.  00:8534                      ; entrada: 	A que tendrá 0000 0 0 X-letra M X-espacio 
      98.  00:8534                      ; salida: 	-
      99.  00:8534                      ; toca: 	A, B
     100.  00:8534                      mira_disparo:
     101.  00:8534                      .mira_boton_pulsado1:
     102.  00:8534  CB 1F               	RR		 A						;preparo en el carry si se ha pulsado botón 1
     103.  00:8536  D2 5F 85            	JP		 NC, .mira_boton_pulsado2					
     104.  00:8539  F5                  	PUSH	AF						;copia A para usarlo después
     105.  00:853A                      	;se ha pulsado barra o boton 1
     106.  00:853A  3A 21 A4            	LD		 A, (prota.cadencia)
     107.  00:853D  B7                  	OR		 A
     108.  00:853E  CA 4C 85            	JP		 Z, .efectua_disparo	;toca efectuar disparo realmente porque se ha pulsado lo suficiente el disparo
     109.  00:8541                      .no_efectua_disparo: ;IF
     110.  00:8541  3D                  		DEC		 A
     111.  00:8542  32 21 A4            		LD		(prota.cadencia), A	;resto cadencia hasta próximo disparo "real" (no automático por haber pulsado una tecla e ir demasiado rápido)
     112.  00:8545  AF                  		XOR		 A 
     113.  00:8546  32 1E A4            		LD		(prota.escena), A
     114.  00:8549  C3 5E 85            		JP		.fin_mira_disparo1
     115.  00:854C                      .efectua_disparo:	;ELSE
     116.  00:854C                      		;cambio colores del sprite
     117.  00:854C  3A 1E A4            		LD		 A, (prota.escena)
     118.  00:854F  2F                  		CPL		 
     119.  00:8550  32 1E A4            		LD		(prota.escena), A
     120.  00:8553                      		;reseteo cadencia para el próximo disparo
     121.  00:8553  3E 04               		LD		 A, LIMCADENCIA						;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
     122.  00:8555  32 21 A4            		LD		 (prota.cadencia), A				;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
     123.  00:8558                      		;ejecuto sonido								;; ajustar cadencia y que cuando el disparo sea efectivo se reseteen los colores
     124.  00:8558  AF                  		XOR		 A
     125.  00:8559  0E 01               		LD		 C, 1
     126.  00:855B  CD 23 8C            		CALL	ayFX_INIT	
     127.  00:855E                      .fin_mira_disparo1
     128.  00:855E                      
     129.  00:855E  F1                  	POP		AF
     130.  00:855F                      .mira_boton_pulsado2:
     131.  00:855F  CB 1F               	RR		 A
     132.  00:8561  D0                  	RET		 NC
     133.  00:8562                      	;se ha pulsado shift o boton 2
     134.  00:8562                      	
     135.  00:8562  3A 2E A4            	LD		 A, (prota_reliquias)	;miro si le quedan reliquias
     136.  00:8565  B7                  	OR		 A
     137.  00:8566  C8                  	RET		 Z						;si no le quedan salgo ya
     138.  00:8567                      	
     139.  00:8567                      	;actuaciones si se usa la reliquia botón 2 o M y quedn reliquias.. (antes ya se puso el valor en A)
     140.  00:8567  3A 2E A4            	LD		A, (prota_reliquias)
     141.  00:856A  3D                  	DEC		 A
     142.  00:856B  32 2E A4            	LD		(prota_reliquias), A
     143.  00:856E                      	
     144.  00:856E  3E 01               	LD		 A, 1
     145.  00:8570  0E 01               	LD		 C, 1
     146.  00:8572  CD 23 8C            	CALL	ayFX_INIT
     147.  00:8575                      	
     148.  00:8575  CD 58 84            	CALL 	efecto_imagen_tira_reliquia
     149.  00:8578                      	
     150.  00:8578  C3 57 82            	JP		pinta_reliquias
     151.  00:857B                      fin_mira_disparo:
     152.  00:857B                      ;	RET		
     153.  00:857B                      
     154.  00:857B                      
     155.  00:857B                      ;;============================================================
     156.  00:857B                      ;;Código de D. Fernando García (BitVision) (al que siempre le estaré agradecido)
     157.  00:857B                      ;check_8th_keyboard_row
     158.  00:857B                      ;read_joy_0
     159.  00:857B                      ;check_8th_keyboard_row
     160.  00:857B                      ;check_4th_keyboard_row
     161.  00:857B                      ;;============================================================
     162.  00:857B                      ;;  usa constantes:
     163.  00:857B                      ;PSG_A  equ  0a0h  ;reg address
     164.  00:857B                      ;PSG_W  equ  0a1h  ;reg data WR
     165.  00:857B                      ;PSG_R  equ  0a2h  ;reg data
     166.  00:857B                      
     167.  00:857B                      ;;=====================================================
     168.  00:857B                      ;;update_controllers_status
     169.  00:857B                      ;;=====================================================	
     170.  00:857B                      ;depends on the next rountine
     171.  00:857B                      ;  returns
     172.  00:857B                      ;  a - 0P2TRLDU
     173.  00:857B                      
     174.  00:857B                      update_controllers_status:
     175.  00:857B  CD C6 85                 call  check_8th_keyboard_row
     176.  00:857E                      [4]  rrc    a
     176.  00:857E  CB 0F CB 0F CB 0F CB 0F 
     177.  00:8586  47                       ld    b,a    		;save for later  xxxTRDUL
     178.  00:8587                      
     179.  00:8587  E6 01                    and    #01    		;save L
     180.  00:8589  CB 27                    sla    a
     181.  00:858B  CB 27                    sla    a    		;now 00000L00
     182.  00:858D  4F                       ld    c,a    		;save for later
     183.  00:858E                      
     184.  00:858E  78                       ld    a,b    		;again we've got xxxTRDUL. I am interested on leaving 000000DU on a
     185.  00:858F  CB 3F                    srl    a
     186.  00:8591  E6 03                    and    00000011b
     187.  00:8593                      						;we've got 000000DU on a
     188.  00:8593  B1                       or    c    		;now we've got 00000LDU
     189.  00:8594  4F                       ld    c,a    		;save for later
     190.  00:8595                      
     191.  00:8595  78                       ld    a,b
     192.  00:8596  E6 18                    and    00011000b 	;we've got 000TR000
     193.  00:8598  B1                       or    c
     194.  00:8599                           ;finally    000TRLDU
     195.  00:8599                      
     196.  00:8599                           ;and    00000100   ;preserve just
     197.  00:8599  47                       ld    b,a    		;save for later
     198.  00:859A  CD D4 85                 call  check_4th_keyboard_row      ;check M & P
     199.  00:859D  F5                       push  af
     200.  00:859E  E6 04                    and    00000100b	;filter just M
     201.  00:85A0  87                       add    a
     202.  00:85A1  87                       add    a
     203.  00:85A2  87                       add    a           ;shift 3th to 6th bit
     204.  00:85A3  B0                       or    b           	;merge with previous
     205.  00:85A4  47                       ld    b,a
     206.  00:85A5                      
     207.  00:85A5  CD B2 85                 call  read_joy_0
     208.  00:85A8  E6 3F                    and    00111111b  	;we want just 002TRLDU  from joystick    (2 is second trigger)
     209.  00:85AA  B0                       or    b      		;added 000TRLDU from keyboard
     210.  00:85AB  47                       ld    b,a      	;save for later
     211.  00:85AC  F1                       pop    af      	; let's check on P
     212.  00:85AD                      
     213.  00:85AD  E6 20                    and    00100000b
     214.  00:85AF  87                       add    a      		;P status on 6th bit  ... so 0P2TRLDU
     215.  00:85B0  B0                       or    b
     216.  00:85B1                      
     217.  00:85B1  C9                       ret
     218.  00:85B2                      
     219.  00:85B2                      
     220.  00:85B2                      ;ret
     221.  00:85B2                      ;  a -            xx2TRLDU
     222.  00:85B2                      read_joy_0:
     223.  00:85B2  F3                         di
     224.  00:85B3  3E 0F                      ld    a,15
     225.  00:85B5  D3 A0                      out    [PSG_A],a
     226.  00:85B7  DB A2                      in    a,[PSG_R]
     227.  00:85B9  E6 BF                      and    10111111b        ;joy0
     228.  00:85BB                      
     229.  00:85BB  D3 A1                      out    [PSG_W],a        ;set joy0
     230.  00:85BD                      
     231.  00:85BD  3E 0E                      ld    a,14
     232.  00:85BF  D3 A0                      out    [PSG_A],a
     233.  00:85C1  DB A2                      in    a,[PSG_R]
     234.  00:85C3                      
     235.  00:85C3  FB                         ei
     236.  00:85C4  2F                         cpl
     237.  00:85C5                      
     238.  00:85C5  C9                         ret
     239.  00:85C6                      
     240.  00:85C6                      
     241.  00:85C6                      ;ret
     242.  00:85C6                      ;  a -      RDULxxxT
     243.  00:85C6                      check_8th_keyboard_row:
     244.  00:85C6  F3                       di
     245.  00:85C7  DB AA                    in    a,(#aa)
     246.  00:85C9  E6 F0                    and    #f0
     247.  00:85CB  F6 08                    or    8
     248.  00:85CD  D3 AA                    out    (#aa),a
     249.  00:85CF  DB A9                    in    a,(#a9)
     250.  00:85D1  FB                       ei
     251.  00:85D2  2F                       cpl
     252.  00:85D3                      
     253.  00:85D3  C9                       ret
     254.  00:85D4                      
     255.  00:85D4                      
     256.  00:85D4                      ;ret
     257.  00:85D4                      ;  a -      xxxxxMxx
     258.  00:85D4                      check_4th_keyboard_row:
     259.  00:85D4  F3                       di
     260.  00:85D5  DB AA                    in    a,(#aa)
     261.  00:85D7  E6 F0                    and    #f0
     262.  00:85D9  F6 04                    or    4
     263.  00:85DB  D3 AA                    out    (#aa),a
     264.  00:85DD  DB A9                    in    a,(#a9)
     265.  00:85DF  FB                       ei
     266.  00:85E0  2F                       cpl
     267.  00:85E1                      
     268.  00:85E1  C9                       ret
     269.  00:85E2                      
     270.  00:85E2                      ;--------------------------------------------
     271.  00:85E2                      
     272.  00:85E2                      
     273.  00:85E2                      
     274.  00:85E2                      
     275.  00:85E2                      
     276.  00:85E2                      
     277.  00:85E2                      
     278.  00:85E2                      
     112   00:85E2                      	
     113   00:85E2                      	include "subr_sonido.asm"
       1.  00:85E2                      
       2.  00:85E2                      ;;=====================================================
       3.  00:85E2                      ;;SUBRUTINAS PARA SONIDOS
       4.  00:85E2                      ;;=====================================================	
       5.  00:85E2                      
       6.  00:85E2                      ;;=====================================================
       7.  00:85E2                      ;;INICIALIZA_REPLAYER_EFECTOS_INTERRUPCIONES
       8.  00:85E2                      ;;=====================================================	
       9.  00:85E2                      ; función: 	inicializa: replayer de música, player de efectos e interrupciones
      10.  00:85E2                      ; entrada: 	-
      11.  00:85E2                      ; salida: 	-
      12.  00:85E2                      ; toca: 	HL, A
      13.  00:85E2                      inicializa_replayer_efectos_interrupciones:
      14.  00:85E2  F3                  	DI
      15.  00:85E3                      
      16.  00:85E3                      	;inicializacion de replayer musical
      17.  00:85E3  21 8B 8C            	LD		HL, song-99			; hl <- initial address of module - 99
      18.  00:85E6  CD 22 86            	CALL	PT3_INIT			; Inits PT3 player
      19.  00:85E9                      		
      20.  00:85E9                      	;inicializacion del reproductor de efectos sonoros
      21.  00:85E9  21 56 96            	LD		HL, sfx_bank
      22.  00:85EC  CD 11 8C            	CALL	ayFX_SETUP
      23.  00:85EF                      	
      24.  00:85EF                      	;Engancha nuestra rutina de servicio al gancha que deja preparado la BIOS cuando se termina de pintar la pantalla (50 o 60 veces por segundo)
      25.  00:85EF  3E C3               	LD		A, #C3
      26.  00:85F1  32 9F FD            	LD		[H.TIMI], A
      27.  00:85F4  21 FC 85            	LD		HL, subrutina_isr
      28.  00:85F7  22 A0 FD            	LD		[H.TIMI+1], HL
      29.  00:85FA                      	
      30.  00:85FA  FB                  	EI		;optimizacion:
      31.  00:85FB                      			;piensa que las dos ultimas lineas podrian haber sido: 
      32.  00:85FB                      			;ei						;primero ei
      33.  00:85FB                      			;ld		[H.TIMI+1],hl	;luego este ld
      34.  00:85FB                      									;PENSAR (y consultar ) PORQUE!!!!
      35.  00:85FB                      fin_inicializa_replayer_efectos_interrupciones:
      36.  00:85FB  C9                  	RET
      37.  00:85FC                      
      38.  00:85FC                      
      39.  00:85FC                      
      40.  00:85FC                      ;;=====================================================
      41.  00:85FC                      ;;NUESTRA_ISR
      42.  00:85FC                      ;;=====================================================	
      43.  00:85FC                      ; función: 	envía datos al PSG + toca un trozo de música + toca trozo de 
      44.  00:85FC                      ; entrada: 	-
      45.  00:85FC                      ; salida: 	-
      46.  00:85FC                      ; toca: 	HL, A
      47.  00:85FC                      subrutina_isr:
      48.  00:85FC  CD 67 8B            	CALL	PT3_ROUT			;envia los datos a los registros del PSG
      49.  00:85FF  CD 6F 8A            	CALL	PT3_PLAY			;calcula el siguiente 'trocito' de musica que sera enviado al proxima vez
      50.  00:8602  C3 59 8C            	JP		ayFX_PLAY			;calcula el siguiente 'trocito' de efecto especial de sonido que sera enviado la proxima vez
      51.  00:8605                      fin_subrutina_isr:
      52.  00:8605                      	;RET
      53.  00:8605                      
      54.  00:8605                      
      55.  00:8605                      
      56.  00:8605                      ;;=====================================================
      57.  00:8605                      ;;DEFINICIÓN DE SUBRUTINAS DE FERNANDO PARA COMPRESIÓN Y SONIDO
      58.  00:8605                      ;;=====================================================
      59.  00:8605                      subrutinas_sonido:
      60.  00:8605                      	include	"PT3-ROM_sjasm.asm"
       1:  00:8605                      		; --- PT3 REPLAYER WORKING ON ROM ---
       2:  00:8605                      		; --- Can be assembled with asMSX ---
       3:  00:8605                      		; --- ROM version: MSX-KUN        ---
       4:  00:8605                      		; --- asMSX version 2: SapphiRe   ---
       5:  00:8605                      
       6:  00:8605                      ; Based on MSX full version of PT3 by Dioniso
       7:  00:8605                      ;
       8:  00:8605                      ; This version of the replayer can be used with any note table
       9:  00:8605                      ; This version also allows the use of PT3 commands
      10:  00:8605                      ; First 99 bytes of each PT3 module should be stripped off
      11:  00:8605                      ;
      12:  00:8605                      ; PLAY and PSG WRITE routines seperated to allow independent calls
      13:  00:8605                      ;
      14:  00:8605                      ; ROM LENGTH: 1549 bytes
      15:  00:8605                      ; RAM LENGTH:  576 bytes
      16:  00:8605                      
      17:  00:8605                      
      18:  00:8605                      
      19:  00:8605                      ;SJASM version by BTV 2016
      20:  00:8605                      
      21:  00:8605                      
      22:  00:8605                      		; --- CONSTANT VALUES DEFINITION ---
      23:  00:8605                      
      24:  00:8605                      ;ChannelsVars
      25:  00:8605                      ;struc	CHNPRM
      26:  00:8605                      ;reset group
      27:  00:8605  (00:0000)           CHNPRM_PsInOr	equ 0	;RESB 1
      28:  00:8605  (00:0001)           CHNPRM_PsInSm	equ 1	;RESB 1
      29:  00:8605  (00:0002)           CHNPRM_CrAmSl	equ 2	;RESB 1
      30:  00:8605  (00:0003)           CHNPRM_CrNsSl	equ 3	;RESB 1
      31:  00:8605  (00:0004)           CHNPRM_CrEnSl	equ 4	;RESB 1
      32:  00:8605  (00:0005)           CHNPRM_TSlCnt	equ 5	;RESB 1
      33:  00:8605  (00:0006)           CHNPRM_CrTnSl	equ 6	;RESW 1
      34:  00:8605  (00:0008)           CHNPRM_TnAcc	equ 8	;RESW 1
      35:  00:8605  (00:000A)           CHNPRM_COnOff	equ 10	;RESB 1
      36:  00:8605                      ;reset group
      37:  00:8605                      
      38:  00:8605  (00:000B)           CHNPRM_OnOffD	equ 11	;RESB 1
      39:  00:8605                      
      40:  00:8605                      ;IX for PTDECOD here [+12]
      41:  00:8605  (00:000C)           CHNPRM_OffOnD	equ 12	;RESB 1
      42:  00:8605  (00:000D)           CHNPRM_OrnPtr	equ 13	;RESW 1
      43:  00:8605  (00:000F)           CHNPRM_SamPtr	equ 15	;RESW 1
      44:  00:8605  (00:0011)           CHNPRM_NNtSkp	equ 17	;RESB 1
      45:  00:8605  (00:0012)           CHNPRM_Note	equ 18	;RESB 1
      46:  00:8605  (00:0013)           CHNPRM_SlToNt	equ 19	;RESB 1
      47:  00:8605  (00:0014)           CHNPRM_Env_En	equ 20	;RESB 1
      48:  00:8605  (00:0015)           CHNPRM_Flags	equ 21	;RESB 1
      49:  00:8605                       ;Enabled - 0,SimpleGliss - 2
      50:  00:8605  (00:0016)           CHNPRM_TnSlDl	equ 22	;RESB 1
      51:  00:8605  (00:0017)           CHNPRM_TSlStp	equ 23	;RESW 1
      52:  00:8605  (00:0019)           CHNPRM_TnDelt	equ 25	;RESW 1
      53:  00:8605  (00:001B)           CHNPRM_NtSkCn	equ 27	;RESB 1
      54:  00:8605  (00:001C)           CHNPRM_Volume	equ 28	;RESB 1
      55:  00:8605  (00:001D)           CHNPRM_Size	equ 29	;RESB 1
      56:  00:8605                      ;endstruc
      57:  00:8605                      
      58:  00:8605                      ;struc	AR
      59:  00:8605  (00:0000)           AR_TonA		equ 0	;RESW 1
      60:  00:8605  (00:0002)           AR_TonB		equ 2	;RESW 1
      61:  00:8605  (00:0004)           AR_TonC		equ 4	;RESW 1
      62:  00:8605  (00:0006)           AR_Noise	equ 6	;RESB 1
      63:  00:8605  (00:0007)           AR_Mixer	equ 7	;RESB 1
      64:  00:8605  (00:0008)           AR_AmplA	equ 8	;RESB 1
      65:  00:8605  (00:0009)           AR_AmplB	equ 9	;RESB 1
      66:  00:8605  (00:000A)           AR_AmplC	equ 10	;RESB 1
      67:  00:8605  (00:000B)           AR_Env		equ 11	;RESW 1
      68:  00:8605  (00:000D)           AR_EnvTp	equ 13	;RESB 1
      69:  00:8605                      ;endstruc
      70:  00:8605                      
      71:  00:8605                      		; --- CODE STARTS HERE ---
      72:  00:8605                      
      73:  00:8605  21 00 F0            CHECKLP:	LD	HL,PT3_SETUP
      74:  00:8608  CB FE               		SET	7,[HL]
      75:  00:860A  CB 46               		BIT	0,[HL]
      76:  00:860C  C8                  		RET	Z
      77:  00:860D  E1                  		POP	HL
      78:  00:860E  21 7A F0            		LD	HL,DelyCnt
      79:  00:8611  34                  		INC	[HL]
      80:  00:8612  21 3E F0            		LD	HL,ChanA+CHNPRM_NtSkCn
      81:  00:8615  34                  		INC	[HL]
      82:  00:8616  AF                  PT3_MUTE:	XOR	A
      83:  00:8617  67                  		LD	H,A
      84:  00:8618  6F                  		LD	L,A
      85:  00:8619  32 48 F1            		LD	[AYREGS+AR_AmplA],A
      86:  00:861C  22 49 F1            		LD	[AYREGS+AR_AmplB],HL
      87:  00:861F  C3 68 8B            		JP	ROUT_A0
      88:  00:8622                      
      89:  00:8622                      PT3_INIT:	;HL - AddressOfModule - 100
      90:  00:8622  22 01 F0            		LD [PT3_MODADDR],HL
      91:  00:8625  E5                  		PUSH HL
      92:  00:8626  11 64 00            		LD DE,100
      93:  00:8629  19                  		ADD HL,DE
      94:  00:862A  7E                  		LD A,[HL]
      95:  00:862B  32 1C F0            		LD [PT3_Delay],A
      96:  00:862E  E5                  		PUSH HL
      97:  00:862F  DD E1               		POP IX
      98:  00:8631  19                  		ADD HL,DE
      99:  00:8632  22 03 F0            		LD [PT3_CrPsPtr],HL
     100:  00:8635  DD 5E 02            		LD E,[IX+102-100]
     101:  00:8638  19                  		ADD HL,DE
     102:  00:8639  23                  		INC HL
     103:  00:863A  22 18 F0            		LD [PT3_LPosPtr],HL
     104:  00:863D  D1                  		POP DE
     105:  00:863E  DD 6E 03            		LD L,[IX+103-100]
     106:  00:8641  DD 66 04            		LD H,[IX+104-100]
     107:  00:8644  19                  		ADD HL,DE
     108:  00:8645  22 1A F0            		LD [PT3_PatsPtr],HL
     109:  00:8648  21 A9 00            		LD HL,169
     110:  00:864B  19                  		ADD HL,DE
     111:  00:864C  22 07 F0            		LD [PT3_OrnPtrs],HL
     112:  00:864F  21 69 00            		LD HL,105
     113:  00:8652  19                  		ADD HL,DE
     114:  00:8653  22 05 F0            		LD [PT3_SAMPTRS],HL
     115:  00:8656  21 00 F0            		LD HL,PT3_SETUP
     116:  00:8659  CB BE               		RES 7,[HL]
     117:  00:865B                      
     118:  00:865B                      		; --- note table data depacker ---
     119:  00:865B                      		; Depacks first 12 tones of each tone table
     120:  00:865B                      
     121:  00:865B  11 DC 8B            		LD DE,T_PACK
     122:  00:865E  01 B1 F1            		LD BC,T1_+(2*49)-1
     123:  00:8661  1A                  .TP_0:		LD A,[DE]
     124:  00:8662  13                  		INC DE
     125:  00:8663  FE 1E               		CP 15*2
     126:  00:8665  30 06               		JR NC,.TP_1
     127:  00:8667  67                  		LD H,A
     128:  00:8668  1A                  		LD A,[DE]
     129:  00:8669  6F                  		LD L,A
     130:  00:866A  13                  		INC DE
     131:  00:866B  18 07               		JR .TP_2
     132:  00:866D  D5                  .TP_1:		PUSH DE
     133:  00:866E  16 00               		LD D,0
     134:  00:8670  5F                  		LD E,A
     135:  00:8671  19                  		ADD HL,DE
     136:  00:8672  19                  		ADD HL,DE
     137:  00:8673  D1                  		POP DE
     138:  00:8674  7C                  .TP_2:		LD A,H
     139:  00:8675  02                  		LD [BC],A
     140:  00:8676  0B                  		DEC BC
     141:  00:8677  7D                  		LD A,L
     142:  00:8678  02                  		LD [BC],A
     143:  00:8679  0B                  		DEC BC
     144:  00:867A  D6 F0               		SUB $F0
     145:  00:867C  20 E3               		JR NZ,.TP_0
     146:  00:867E                      
     147:  00:867E                      		; --- INITIALIZE PT3 VARIABLES ---
     148:  00:867E  21 23 F0            		LD HL,VARS
     149:  00:8681  77                  		LD [HL],A
     150:  00:8682  11 24 F0            		LD DE,VARS+1
     151:  00:8685  01 2C 01            		LD BC,VAR0END-VARS-1
     152:  00:8688  ED B0               		LDIR
     153:  00:868A                      
     154:  00:868A  3C                  		INC A
     155:  00:868B  32 7A F0            		LD [DelyCnt],A
     156:  00:868E  21 01 F0            		LD HL,$F001 ;H - CHNPRM_Volume, L - CHNPRM_NtSkCn
     157:  00:8691  22 3E F0            		LD [ChanA+CHNPRM_NtSkCn],HL
     158:  00:8694  22 5B F0            		LD [ChanB+CHNPRM_NtSkCn],HL
     159:  00:8697  22 78 F0            		LD [ChanC+CHNPRM_NtSkCn],HL
     160:  00:869A                      
     161:  00:869A  21 D8 8B            		LD HL,EMPTYSAMORN
     162:  00:869D  22 12 F0            		LD [PT3_AdInPtA],HL ;ptr to zero
     163:  00:86A0  22 30 F0            		LD [ChanA+CHNPRM_OrnPtr],HL ;ornament 0 is "0,1,0"
     164:  00:86A3  22 4D F0            		LD [ChanB+CHNPRM_OrnPtr],HL ;in all versions from
     165:  00:86A6  22 6A F0            		LD [ChanC+CHNPRM_OrnPtr],HL ;3.xx to 3.6x and VTII
     166:  00:86A9                      
     167:  00:86A9  22 32 F0            		LD [ChanA+CHNPRM_SamPtr],HL ;S1 There is no default
     168:  00:86AC  22 4F F0            		LD [ChanB+CHNPRM_SamPtr],HL ;S2 sample in PT3, so, you
     169:  00:86AF  22 6C F0            		LD [ChanC+CHNPRM_SamPtr],HL ;S3 can comment S1,2,3; see
     170:  00:86B2                      					    ;also EMPTYSAMORN comment
     171:  00:86B2                      
     172:  00:86B2                      		; --- NOTE TABLE CREATOR (c) Ivan Roshin, adapted by SapphiRe ---
     173:  00:86B2  DD 7E FF            		LD A,[IX+99-100] ;TONE TABLE NUMBER
     174:  00:86B5  17                  		RLA
     175:  00:86B6  E6 07               		AND 7
     176:  00:86B8  21 88 8B            		LD HL,NT_DATA
     177:  00:86BB  D5                  		PUSH DE
     178:  00:86BC  50                  		LD D,B		; ld d,0 (bc is 0000 after LDIR)
     179:  00:86BD  87                  		ADD A,A
     180:  00:86BE  5F                  		LD E,A
     181:  00:86BF  19                  		ADD HL,DE	; hl -> init of correct note table data
     182:  00:86C0  5E                  		LD E,[HL]
     183:  00:86C1  23                  		INC HL
     184:  00:86C2  CB 3B               		SRL E
     185:  00:86C4  9F                  		SBC A,A
     186:  00:86C5  E6 A7               		AND $A7			;$00 (NOP) or $A7 (AND A)
     187:  00:86C7  32 21 F0            		LD [PT3_NTL3],A		; CORRECT INSTRUCTION, DEPENDS OF SELECTED TABLE
     188:  00:86CA  3E C9               		LD A,$C9		; RET CODE
     189:  00:86CC  32 22 F0            		LD [PT3_NTL3+1],A	; RET PLACED
     190:  00:86CF  EB                  		EX DE,HL
     191:  00:86D0  C1                  		POP BC ;BC=T1_
     192:  00:86D1  09                  		ADD HL,BC
     193:  00:86D2                      
     194:  00:86D2  1A                  		LD A,[DE]                           
     195:  00:86D3                      
     196:  00:86D3  01 98 8B            		LD BC,T_
     197:  00:86D6  81                  		ADD A,C
     198:  00:86D7  4F                  		LD C,A
     199:  00:86D8  88                  		ADC A,B
     200:  00:86D9                      
     201:  00:86D9  91                  		SUB C
     202:  00:86DA  47                  		LD B,A
     203:  00:86DB  C5                  		PUSH BC
     204:  00:86DC  11 80 F0            		LD DE,NT_
     205:  00:86DF  D5                  		PUSH DE
     206:  00:86E0                      
     207:  00:86E0  06 0C               		LD B,12
     208:  00:86E2  C5                  .L1:		PUSH BC
     209:  00:86E3  4E                  		LD C,[HL]
     210:  00:86E4  23                  		INC HL
     211:  00:86E5  E5                  		PUSH HL
     212:  00:86E6  46                  		LD B,[HL]
     213:  00:86E7                      
     214:  00:86E7  D5                  		PUSH DE
     215:  00:86E8  EB                  		EX DE,HL
     216:  00:86E9  11 17 00            		LD DE,23
     217:  00:86EC  DD 26 08            		db $DD,$26,$08	;LD XH,8
     218:  00:86EF                      
     219:  00:86EF  CB 38               .L2:		SRL B
     220:  00:86F1  CB 19               		RR C
     221:  00:86F3  CD 21 F0            .L3:		CALL PT3_NTL3	;AND A or NOP
     222:  00:86F6  79                  		LD A,C
     223:  00:86F7  8A                  		ADC A,D	;=ADC 0
     224:  00:86F8  77                  		LD [HL],A
     225:  00:86F9  23                  		INC HL
     226:  00:86FA  78                  		LD A,B
     227:  00:86FB  8A                  		ADC A,D
     228:  00:86FC  77                  		LD [HL],A
     229:  00:86FD  19                  		ADD HL,DE
     230:  00:86FE  DD 25               		db $DD,$25	;DEC XH
     231:  00:8700  20 ED               		JR NZ,.L2
     232:  00:8702                      
     233:  00:8702  D1                  		POP DE
     234:  00:8703  13                  		INC DE
     235:  00:8704  13                  		INC DE
     236:  00:8705  E1                  		POP HL
     237:  00:8706  23                  		INC HL
     238:  00:8707  C1                  		POP BC
     239:  00:8708  10 D8               		DJNZ .L1
     240:  00:870A                      
     241:  00:870A  E1                  		POP HL
     242:  00:870B  D1                  		POP DE
     243:  00:870C                      
     244:  00:870C  7B                  		LD A,E
     245:  00:870D  D5                  		PUSH DE
     246:  00:870E  11 A4 8B            		LD DE,TCOLD_1
     247:  00:8711  BB                  		CP E
     248:  00:8712  D1                  		POP DE
     249:  00:8713  20 05               		JR NZ,.CORR_1
     250:  00:8715  3E FD               		LD A,$FD
     251:  00:8717  32 AE F0            		LD [NT_+$2E],A
     252:  00:871A                      
     253:  00:871A  1A                  .CORR_1:	LD A,[DE]
     254:  00:871B  A7                  		AND A
     255:  00:871C  28 11               		JR Z,.TC_EXIT
     256:  00:871E  1F                  		RRA
     257:  00:871F  F5                  		PUSH AF
     258:  00:8720  87                  		ADD A,A
     259:  00:8721  4F                  		LD C,A
     260:  00:8722  09                  		ADD HL,BC
     261:  00:8723  F1                  		POP AF
     262:  00:8724  30 02               		JR NC,.CORR_2
     263:  00:8726  35                  		DEC [HL]
     264:  00:8727  35                  		DEC [HL]
     265:  00:8728  34                  .CORR_2:	INC [HL]
     266:  00:8729  A7                  		AND A
     267:  00:872A  ED 42               		SBC HL,BC
     268:  00:872C  13                  		INC DE
     269:  00:872D  18 EB               		JR .CORR_1
     270:  00:872F                      
     271:  00:872F                      .TC_EXIT:	;POP AF
     272:  00:872F                      
     273:  00:872F                      		; --- CREATE PT3 VOLUME TABLE (c) Ivan Roshin, adapted by SapphiRe ---
     274:  00:872F  21 11 00            		ld	hl,$11
     275:  00:8732  54                  		ld	d,h
     276:  00:8733  5C                  		ld	e,h
     277:  00:8734  DD 21 50 F1         		ld	IX,VT_+16
     278:  00:8738  06 0F               		ld	b,15
     279:  00:873A  E5                  .INITV1:	push	hl
     280:  00:873B  19                  		add	hl,de
     281:  00:873C  EB                  		ex	de,hl
     282:  00:873D  ED 62               		sbc	hl,hl
     283:  00:873F  48                  		ld	c,b
     284:  00:8740  06 10               		ld	b,16
     285:  00:8742  7D                  .INITV2:	ld	a,l
     286:  00:8743  17                  		rla
     287:  00:8744  7C                  		ld	a,h
     288:  00:8745  CE 00               		adc	a,0
     289:  00:8747  DD 77 00            		ld	[ix],a
     290:  00:874A  DD 23               		inc	ix
     291:  00:874C  19                  		add	hl,de
     292:  00:874D  10 F3               		djnz	.INITV2
     293:  00:874F  E1                  		pop	hl
     294:  00:8750  7B                  		ld	a,e
     295:  00:8751  FE 77               		cp	$77
     296:  00:8753  20 01               		jr	nz,.INITV3
     297:  00:8755  1C                  		inc	e
     298:  00:8756  41                  .INITV3:	ld	b,c
     299:  00:8757  10 E1               		djnz	.INITV1
     300:  00:8759                      
     301:  00:8759  C9                  		RET
     302:  00:875A                      
     303:  00:875A                      		;pattern decoder
     304:  00:875A  DD 36 08 00         PD_OrSm:	LD [IX+(CHNPRM_Env_En-12)],0
     305:  00:875E  CD E4 88            		CALL SETORN
     306:  00:8761  0A                  		LD A,[BC]
     307:  00:8762  03                  		INC BC
     308:  00:8763  0F                  		RRCA
     309:  00:8764                      
     310:  00:8764  87                  PD_SAM:		ADD A,A
     311:  00:8765  5F                  PD_SAM_:	LD E,A
     312:  00:8766  16 00               		LD D,0
     313:  00:8768  2A 05 F0            		LD HL,[PT3_SAMPTRS]
     314:  00:876B  19                  		ADD HL,DE
     315:  00:876C  5E                  		LD E,[HL]
     316:  00:876D  23                  		INC HL
     317:  00:876E  56                  		LD D,[HL]
     318:  00:876F  2A 01 F0            		LD HL,[PT3_MODADDR]
     319:  00:8772  19                  		ADD HL,DE
     320:  00:8773  DD 75 03            		LD [IX+(CHNPRM_SamPtr-12)],L
     321:  00:8776  DD 74 04            		LD [IX+(CHNPRM_SamPtr+1-12)],H
     322:  00:8779  18 41               		JR PD_LOOP
     323:  00:877B                      
     324:  00:877B  07                  PD_VOL:		RLCA
     325:  00:877C  07                  		RLCA
     326:  00:877D  07                  		RLCA
     327:  00:877E  07                  		RLCA
     328:  00:877F  DD 77 10            		LD [IX+(CHNPRM_Volume-12)],A
     329:  00:8782  18 3B               		JR PD_LP2
     330:  00:8784                      	
     331:  00:8784  DD 77 08            PD_EOff:	LD [IX+(CHNPRM_Env_En-12)],A
     332:  00:8787  DD 77 F4            		LD [IX+(CHNPRM_PsInOr-12)],A
     333:  00:878A  18 33               		JR PD_LP2
     334:  00:878C                      
     335:  00:878C  3D                  PD_SorE:	DEC A
     336:  00:878D  20 07               		JR NZ,PD_ENV
     337:  00:878F  0A                  		LD A,[BC]
     338:  00:8790  03                  		INC BC
     339:  00:8791  DD 77 05            		LD [IX+(CHNPRM_NNtSkp-12)],A
     340:  00:8794  18 29               		JR PD_LP2
     341:  00:8796                      
     342:  00:8796  CD C8 88            PD_ENV:		CALL SETENV
     343:  00:8799  18 24               		JR PD_LP2
     344:  00:879B                      
     345:  00:879B  CD E4 88            PD_ORN:		CALL SETORN
     346:  00:879E  18 1C               		JR PD_LOOP
     347:  00:87A0                             
     348:  00:87A0  DD 77 08            PD_ESAM:	LD [IX+(CHNPRM_Env_En-12)],A
     349:  00:87A3  DD 77 F4            		LD [IX+(CHNPRM_PsInOr-12)],A
     350:  00:87A6  C4 C8 88            		CALL NZ,SETENV
     351:  00:87A9  0A                  		LD A,[BC]
     352:  00:87AA  03                  		INC BC
     353:  00:87AB  18 B8               		JR PD_SAM_
     354:  00:87AD                      
     355:  00:87AD  DD 7E 06            PTDECOD:	LD A,[IX+(CHNPRM_Note-12)]
     356:  00:87B0  32 0F F0            		LD [PT3_PrNote],A
     357:  00:87B3  DD 6E FA            		LD L,[IX+(CHNPRM_CrTnSl-12)]
     358:  00:87B6  DD 66 FB            		LD H,[IX+(CHNPRM_CrTnSl+1-12)]
     359:  00:87B9  22 10 F0            		LD [PT3_PrSlide],HL
     360:  00:87BC                      
     361:  00:87BC  11 10 20            PD_LOOP:	LD DE,$2010
     362:  00:87BF  0A                  PD_LP2:		LD A,[BC]
     363:  00:87C0  03                  		INC BC
     364:  00:87C1  83                  		ADD A,E
     365:  00:87C2  38 96               		JR C,PD_OrSm
     366:  00:87C4  82                  		ADD A,D
     367:  00:87C5  28 4A               		JR Z,PD_FIN
     368:  00:87C7  38 9B               		JR C,PD_SAM
     369:  00:87C9  83                  		ADD A,E
     370:  00:87CA  28 25               		JR Z,PD_REL
     371:  00:87CC  38 AD               		JR C,PD_VOL
     372:  00:87CE  83                  		ADD A,E
     373:  00:87CF  28 B3               		JR Z,PD_EOff
     374:  00:87D1  38 B9               		JR C,PD_SorE
     375:  00:87D3  C6 60               		ADD A,96
     376:  00:87D5  38 20               		JR C,PD_NOTE
     377:  00:87D7  83                  		ADD A,E
     378:  00:87D8  38 C1               		JR C,PD_ORN
     379:  00:87DA  82                  		ADD A,D
     380:  00:87DB  38 0F               		JR C,PD_NOIS
     381:  00:87DD  83                  		ADD A,E
     382:  00:87DE  38 C0               		JR C,PD_ESAM
     383:  00:87E0  87                  		ADD A,A
     384:  00:87E1  5F                  		LD E,A
     385:  00:87E2  21 1D 68            		LD HL,(SPCCOMS+$DF20) % 65536	; Adapted from original Speccy version (saves 6 bytes)
     386:  00:87E5  19                  		ADD HL,DE
     387:  00:87E6  5E                  		LD E,[HL]
     388:  00:87E7  23                  		INC HL
     389:  00:87E8  56                  		LD D,[HL]
     390:  00:87E9  D5                  		PUSH DE
     391:  00:87EA  18 D0               		JR PD_LOOP
     392:  00:87EC                      
     393:  00:87EC  32 7E F0            PD_NOIS:	LD [Ns_Base],A
     394:  00:87EF  18 CE               		JR PD_LP2
     395:  00:87F1                      
     396:  00:87F1  DD CB 09 86         PD_REL:		RES 0,[IX+(CHNPRM_Flags-12)]
     397:  00:87F5  18 08               		JR PD_RES
     398:  00:87F7                      	
     399:  00:87F7  DD 77 06            PD_NOTE:	LD [IX+(CHNPRM_Note-12)],A
     400:  00:87FA  DD CB 09 C6         		SET 0,[IX+(CHNPRM_Flags-12)]
     401:  00:87FE  AF                  		XOR A
     402:  00:87FF                      
     403:  00:87FF  ED 73 09 F0         PD_RES:		LD [PT3_PDSP],SP
     404:  00:8803  DD F9               		LD SP,IX
     405:  00:8805  67                  		LD H,A
     406:  00:8806  6F                  		LD L,A
     407:  00:8807  E5                  		PUSH HL
     408:  00:8808  E5                  		PUSH HL
     409:  00:8809  E5                  		PUSH HL
     410:  00:880A  E5                  		PUSH HL
     411:  00:880B  E5                  		PUSH HL
     412:  00:880C  E5                  		PUSH HL
     413:  00:880D  ED 7B 09 F0         		LD SP,[PT3_PDSP]
     414:  00:8811                      
     415:  00:8811  DD 7E 05            PD_FIN:		LD A,[IX+(CHNPRM_NNtSkp-12)]
     416:  00:8814  DD 77 0F            		LD [IX+(CHNPRM_NtSkCn-12)],A
     417:  00:8817  C9                  		RET
     418:  00:8818                      
     419:  00:8818  DD CB 09 96         C_PORTM:	RES 2,[IX+(CHNPRM_Flags-12)]
     420:  00:881C  0A                  		LD A,[BC]
     421:  00:881D  03                  		INC BC
     422:  00:881E                      		;SKIP PRECALCULATED TONE DELTA [BECAUSE
     423:  00:881E                      		;CANNOT BE RIGHT AFTER PT3 COMPILATION]
     424:  00:881E  03                  		INC BC
     425:  00:881F  03                  		INC BC
     426:  00:8820  DD 77 0A            		LD [IX+(CHNPRM_TnSlDl-12)],A
     427:  00:8823  DD 77 F9            		LD [IX+(CHNPRM_TSlCnt-12)],A
     428:  00:8826  11 80 F0            		LD DE,NT_
     429:  00:8829  DD 7E 06            		LD A,[IX+(CHNPRM_Note-12)]
     430:  00:882C  DD 77 07            		LD [IX+(CHNPRM_SlToNt-12)],A
     431:  00:882F  87                  		ADD A,A
     432:  00:8830  6F                  		LD L,A
     433:  00:8831  26 00               		LD H,0
     434:  00:8833  19                  		ADD HL,DE
     435:  00:8834  7E                  		LD A,[HL]
     436:  00:8835  23                  		INC HL
     437:  00:8836  66                  		LD H,[HL]
     438:  00:8837  6F                  		LD L,A
     439:  00:8838  E5                  		PUSH HL
     440:  00:8839  3A 0F F0            		LD A,[PT3_PrNote]
     441:  00:883C  DD 77 06            		LD [IX+(CHNPRM_Note-12)],A
     442:  00:883F  87                  		ADD A,A
     443:  00:8840  6F                  		LD L,A
     444:  00:8841  26 00               		LD H,0
     445:  00:8843  19                  		ADD HL,DE
     446:  00:8844  5E                  		LD E,[HL]
     447:  00:8845  23                  		INC HL
     448:  00:8846  56                  		LD D,[HL]
     449:  00:8847  E1                  		POP HL
     450:  00:8848  ED 52               		SBC HL,DE
     451:  00:884A  DD 75 0D            		LD [IX+(CHNPRM_TnDelt-12)],L
     452:  00:884D  DD 74 0E            		LD [IX+(CHNPRM_TnDelt+1-12)],H
     453:  00:8850  ED 5B 10 F0         		LD DE,[PT3_PrSlide]
     454:  00:8854  DD 73 FA            		LD [IX+(CHNPRM_CrTnSl-12)],E
     455:  00:8857  DD 72 FB            		LD [IX+(CHNPRM_CrTnSl+1-12)],D
     456:  00:885A  0A                  		LD A,[BC] ;SIGNED TONE STEP
     457:  00:885B  03                  		INC BC
     458:  00:885C  08                  		EX AF,AF'
     459:  00:885D  0A                  		LD A,[BC]
     460:  00:885E  03                  		INC BC
     461:  00:885F  A7                  		AND A
     462:  00:8860  28 01               		JR Z,.NOSIG
     463:  00:8862  EB                  		EX DE,HL
     464:  00:8863  ED 52               .NOSIG:	SBC HL,DE
     465:  00:8865  F2 6D 88            		JP P,SET_STP
     466:  00:8868  2F                  		CPL
     467:  00:8869  08                  		EX AF,AF'
     468:  00:886A  ED 44               		NEG
     469:  00:886C  08                  		EX AF,AF'
     470:  00:886D  DD 77 0C            SET_STP:	LD [IX+(CHNPRM_TSlStp+1-12)],A
     471:  00:8870  08                  		EX AF,AF'
     472:  00:8871  DD 77 0B            		LD [IX+(CHNPRM_TSlStp-12)],A
     473:  00:8874  DD 36 FE 00         		LD [IX+(CHNPRM_COnOff-12)],0
     474:  00:8878  C9                  		RET
     475:  00:8879                      
     476:  00:8879  DD CB 09 D6         C_GLISS:	SET 2,[IX+(CHNPRM_Flags-12)]
     477:  00:887D  0A                  		LD A,[BC]
     478:  00:887E  03                  		INC BC
     479:  00:887F  DD 77 0A            		LD [IX+(CHNPRM_TnSlDl-12)],A
     480:  00:8882  DD 77 F9            		LD [IX+(CHNPRM_TSlCnt-12)],A
     481:  00:8885  0A                  		LD A,[BC]
     482:  00:8886  03                  		INC BC
     483:  00:8887  08                  		EX AF,AF'
     484:  00:8888  0A                  		LD A,[BC]
     485:  00:8889  03                  		INC BC
     486:  00:888A  18 E1               		JR SET_STP
     487:  00:888C                      
     488:  00:888C  0A                  C_SMPOS:	LD A,[BC]
     489:  00:888D  03                  		INC BC
     490:  00:888E  DD 77 F5            		LD [IX+(CHNPRM_PsInSm-12)],A
     491:  00:8891  C9                  		RET
     492:  00:8892                      
     493:  00:8892  0A                  C_ORPOS:	LD A,[BC]
     494:  00:8893  03                  		INC BC
     495:  00:8894  DD 77 F4            		LD [IX+(CHNPRM_PsInOr-12)],A
     496:  00:8897  C9                  		RET
     497:  00:8898                      
     498:  00:8898  0A                  C_VIBRT:	LD A,[BC]
     499:  00:8899  03                  		INC BC
     500:  00:889A  DD 77 FF            		LD [IX+(CHNPRM_OnOffD-12)],A
     501:  00:889D  DD 77 FE            		LD [IX+(CHNPRM_COnOff-12)],A
     502:  00:88A0  0A                  		LD A,[BC]
     503:  00:88A1  03                  		INC BC
     504:  00:88A2  DD 77 00            		LD [IX+(CHNPRM_OffOnD-12)],A
     505:  00:88A5  AF                  		XOR A
     506:  00:88A6  DD 77 F9            		LD [IX+(CHNPRM_TSlCnt-12)],A
     507:  00:88A9  DD 77 FA            		LD [IX+(CHNPRM_CrTnSl-12)],A
     508:  00:88AC  DD 77 FB            		LD [IX+(CHNPRM_CrTnSl+1-12)],A
     509:  00:88AF  C9                  		RET
     510:  00:88B0                      
     511:  00:88B0  0A                  C_ENGLS:	LD A,[BC]
     512:  00:88B1  03                  		INC BC
     513:  00:88B2  32 1E F0            		LD [PT3_Env_Del],A
     514:  00:88B5  32 7D F0            		LD [CurEDel],A
     515:  00:88B8  0A                  		LD A,[BC]
     516:  00:88B9  03                  		INC BC
     517:  00:88BA  6F                  		LD L,A
     518:  00:88BB  0A                  		LD A,[BC]
     519:  00:88BC  03                  		INC BC
     520:  00:88BD  67                  		LD H,A
     521:  00:88BE  22 1F F0            		LD [PT3_ESldAdd],HL
     522:  00:88C1  C9                  		RET
     523:  00:88C2                      
     524:  00:88C2  0A                  C_DELAY:	LD A,[BC]
     525:  00:88C3  03                  		INC BC
     526:  00:88C4  32 1C F0            		LD [PT3_Delay],A
     527:  00:88C7  C9                  		RET
     528:  00:88C8                      	
     529:  00:88C8  DD 73 08            SETENV:		LD [IX+(CHNPRM_Env_En-12)],E
     530:  00:88CB  32 4D F1            		LD [AYREGS+AR_EnvTp],A
     531:  00:88CE  0A                  		LD A,[BC]
     532:  00:88CF  03                  		INC BC
     533:  00:88D0  67                  		LD H,A
     534:  00:88D1  0A                  		LD A,[BC]
     535:  00:88D2  03                  		INC BC
     536:  00:88D3  6F                  		LD L,A
     537:  00:88D4  22 4E F1            		LD [EnvBase],HL
     538:  00:88D7  AF                  		XOR A
     539:  00:88D8  DD 77 F4            		LD [IX+(CHNPRM_PsInOr-12)],A
     540:  00:88DB  32 7D F0            		LD [CurEDel],A
     541:  00:88DE  67                  		LD H,A
     542:  00:88DF  6F                  		LD L,A
     543:  00:88E0  22 7B F0            		LD [CurESld],HL
     544:  00:88E3  C9                  C_NOP:		RET
     545:  00:88E4                      
     546:  00:88E4  87                  SETORN:		ADD A,A
     547:  00:88E5  5F                  		LD E,A
     548:  00:88E6  16 00               		LD D,0
     549:  00:88E8  DD 72 F4            		LD [IX+(CHNPRM_PsInOr-12)],D
     550:  00:88EB  2A 07 F0            		LD HL,[PT3_OrnPtrs]
     551:  00:88EE  19                  		ADD HL,DE
     552:  00:88EF  5E                  		LD E,[HL]
     553:  00:88F0  23                  		INC HL
     554:  00:88F1  56                  		LD D,[HL]
     555:  00:88F2  2A 01 F0            		LD HL,[PT3_MODADDR]
     556:  00:88F5  19                  		ADD HL,DE
     557:  00:88F6  DD 75 01            		LD [IX+(CHNPRM_OrnPtr-12)],L
     558:  00:88F9  DD 74 02            		LD [IX+(CHNPRM_OrnPtr+1-12)],H
     559:  00:88FC  C9                  		RET
     560:  00:88FD                      
     561:  00:88FD                      		;ALL 16 ADDRESSES TO PROTECT FROM BROKEN PT3 MODULES
     562:  00:88FD  E3 88               SPCCOMS:	dw C_NOP
     563:  00:88FF  79 88               		dw C_GLISS
     564:  00:8901  18 88               		dw C_PORTM
     565:  00:8903  8C 88               		dw C_SMPOS
     566:  00:8905  92 88               		dw C_ORPOS
     567:  00:8907  98 88               		dw C_VIBRT
     568:  00:8909  E3 88               		dw C_NOP
     569:  00:890B  E3 88               		dw C_NOP
     570:  00:890D  B0 88               		dw C_ENGLS
     571:  00:890F  C2 88               		dw C_DELAY
     572:  00:8911  E3 88               		dw C_NOP
     573:  00:8913  E3 88               		dw C_NOP
     574:  00:8915  E3 88               		dw C_NOP
     575:  00:8917  E3 88               		dw C_NOP
     576:  00:8919  E3 88               		dw C_NOP
     577:  00:891B  E3 88               		dw C_NOP
     578:  00:891D                      
     579:  00:891D  AF                  CHREGS:		XOR A
     580:  00:891E  32 4A F1            		LD [AYREGS+AR_AmplC],A
     581:  00:8921  DD CB 15 46         		BIT 0,[IX+CHNPRM_Flags]
     582:  00:8925  E5                  		PUSH HL
     583:  00:8926  CA 4C 8A            		JP Z,.CH_EXIT
     584:  00:8929  ED 73 0B F0         		LD [PT3_CSP],SP
     585:  00:892D  DD 6E 0D            		LD L,[IX+CHNPRM_OrnPtr]
     586:  00:8930  DD 66 0E            		LD H,[IX+CHNPRM_OrnPtr+1]
     587:  00:8933  F9                  		LD SP,HL
     588:  00:8934  D1                  		POP DE
     589:  00:8935  67                  		LD H,A
     590:  00:8936  DD 7E 00            		LD A,[IX+CHNPRM_PsInOr]
     591:  00:8939  6F                  		LD L,A
     592:  00:893A  39                  		ADD HL,SP
     593:  00:893B  3C                  		INC A
     594:  00:893C  BA                  		CP D
     595:  00:893D  38 01               		JR C,.CH_ORPS
     596:  00:893F  7B                  		LD A,E
     597:  00:8940  DD 77 00            .CH_ORPS:	LD [IX+CHNPRM_PsInOr],A
     598:  00:8943  DD 7E 12            		LD A,[IX+CHNPRM_Note]
     599:  00:8946  86                  		ADD A,[HL]
     600:  00:8947  F2 4B 89            		JP P,.CH_NTP
     601:  00:894A  AF                  		XOR A
     602:  00:894B  FE 60               .CH_NTP:	CP 96
     603:  00:894D  38 02               		JR C,.CH_NOK
     604:  00:894F  3E 5F               		LD A,95
     605:  00:8951  87                  .CH_NOK:	ADD A,A
     606:  00:8952  08                  		EX AF,AF'
     607:  00:8953  DD 6E 0F            		LD L,[IX+CHNPRM_SamPtr]
     608:  00:8956  DD 66 10            		LD H,[IX+CHNPRM_SamPtr+1]
     609:  00:8959  F9                  		LD SP,HL
     610:  00:895A  D1                  		POP DE
     611:  00:895B  26 00               		LD H,0
     612:  00:895D  DD 7E 01            		LD A,[IX+CHNPRM_PsInSm]
     613:  00:8960  47                  		LD B,A
     614:  00:8961  87                  		ADD A,A
     615:  00:8962  87                  		ADD A,A
     616:  00:8963  6F                  		LD L,A
     617:  00:8964  39                  		ADD HL,SP
     618:  00:8965  F9                  		LD SP,HL
     619:  00:8966  78                  		LD A,B
     620:  00:8967  3C                  		INC A
     621:  00:8968  BA                  		CP D
     622:  00:8969  38 01               		JR C,.CH_SMPS
     623:  00:896B  7B                  		LD A,E
     624:  00:896C  DD 77 01            .CH_SMPS:	LD [IX+CHNPRM_PsInSm],A
     625:  00:896F  C1                  		POP BC
     626:  00:8970  E1                  		POP HL
     627:  00:8971  DD 5E 08            		LD E,[IX+CHNPRM_TnAcc]
     628:  00:8974  DD 56 09            		LD D,[IX+CHNPRM_TnAcc+1]
     629:  00:8977  19                  		ADD HL,DE
     630:  00:8978  CB 70               		BIT 6,B
     631:  00:897A  28 06               		JR Z,.CH_NOAC
     632:  00:897C  DD 75 08            		LD [IX+CHNPRM_TnAcc],L
     633:  00:897F  DD 74 09            		LD [IX+CHNPRM_TnAcc+1],H
     634:  00:8982  EB                  .CH_NOAC:	EX DE,HL
     635:  00:8983  08                  		EX AF,AF'
     636:  00:8984  6F                  		LD L,A
     637:  00:8985  26 00               		LD H,0
     638:  00:8987  31 80 F0            		LD SP,NT_
     639:  00:898A  39                  		ADD HL,SP
     640:  00:898B  F9                  		LD SP,HL
     641:  00:898C  E1                  		POP HL
     642:  00:898D  19                  		ADD HL,DE
     643:  00:898E  DD 5E 06            		LD E,[IX+CHNPRM_CrTnSl]
     644:  00:8991  DD 56 07            		LD D,[IX+CHNPRM_CrTnSl+1]
     645:  00:8994  19                  		ADD HL,DE
     646:  00:8995  ED 7B 0B F0         		LD SP,[PT3_CSP]
     647:  00:8999  E3                  		EX [SP],HL
     648:  00:899A  AF                  		XOR A
     649:  00:899B  DD B6 05            		OR [IX+CHNPRM_TSlCnt]
     650:  00:899E  28 3E               		JR Z,.CH_AMP
     651:  00:89A0  DD 35 05            		DEC [IX+CHNPRM_TSlCnt]
     652:  00:89A3  20 39               		JR NZ,.CH_AMP
     653:  00:89A5  DD 7E 16            		LD A,[IX+CHNPRM_TnSlDl]
     654:  00:89A8  DD 77 05            		LD [IX+CHNPRM_TSlCnt],A
     655:  00:89AB  DD 6E 17            		LD L,[IX+CHNPRM_TSlStp]
     656:  00:89AE  DD 66 18            		LD H,[IX+CHNPRM_TSlStp+1]
     657:  00:89B1  7C                  		LD A,H
     658:  00:89B2  19                  		ADD HL,DE
     659:  00:89B3  DD 75 06            		LD [IX+CHNPRM_CrTnSl],L
     660:  00:89B6  DD 74 07            		LD [IX+CHNPRM_CrTnSl+1],H
     661:  00:89B9  DD CB 15 56         		BIT 2,[IX+CHNPRM_Flags]
     662:  00:89BD  20 1F               		JR NZ,.CH_AMP
     663:  00:89BF  DD 5E 19            		LD E,[IX+CHNPRM_TnDelt]
     664:  00:89C2  DD 56 1A            		LD D,[IX+CHNPRM_TnDelt+1]
     665:  00:89C5  A7                  		AND A
     666:  00:89C6  28 01               		JR Z,.CH_STPP
     667:  00:89C8  EB                  		EX DE,HL
     668:  00:89C9  ED 52               .CH_STPP:	SBC HL,DE
     669:  00:89CB  FA DE 89            		JP M,.CH_AMP
     670:  00:89CE  DD 7E 13            		LD A,[IX+CHNPRM_SlToNt]
     671:  00:89D1  DD 77 12            		LD [IX+CHNPRM_Note],A
     672:  00:89D4  AF                  		XOR A
     673:  00:89D5  DD 77 05            		LD [IX+CHNPRM_TSlCnt],A
     674:  00:89D8  DD 77 06            		LD [IX+CHNPRM_CrTnSl],A
     675:  00:89DB  DD 77 07            		LD [IX+CHNPRM_CrTnSl+1],A
     676:  00:89DE  DD 7E 02            .CH_AMP:	LD A,[IX+CHNPRM_CrAmSl]
     677:  00:89E1  CB 79               		BIT 7,C
     678:  00:89E3  28 13               		JR Z,.CH_NOAM
     679:  00:89E5  CB 71               		BIT 6,C
     680:  00:89E7  28 07               		JR Z,.CH_AMIN
     681:  00:89E9  FE 0F               		CP 15
     682:  00:89EB  28 0B               		JR Z,.CH_NOAM
     683:  00:89ED  3C                  		INC A
     684:  00:89EE  18 05               		JR .CH_SVAM
     685:  00:89F0  FE F1               .CH_AMIN:	CP -15
     686:  00:89F2  28 04               		JR Z,.CH_NOAM
     687:  00:89F4  3D                  		DEC A
     688:  00:89F5  DD 77 02            .CH_SVAM:	LD [IX+CHNPRM_CrAmSl],A
     689:  00:89F8  6F                  .CH_NOAM:	LD L,A
     690:  00:89F9  78                  		LD A,B
     691:  00:89FA  E6 0F               		AND 15
     692:  00:89FC  85                  		ADD A,L
     693:  00:89FD  F2 01 8A            		JP P,.CH_APOS
     694:  00:8A00  AF                  		XOR A
     695:  00:8A01  FE 10               .CH_APOS:	CP 16
     696:  00:8A03  38 02               		JR C,.CH_VOL
     697:  00:8A05  3E 0F               		LD A,15
     698:  00:8A07  DD B6 1C            .CH_VOL:	OR [IX+CHNPRM_Volume]
     699:  00:8A0A  6F                  		LD L,A
     700:  00:8A0B  26 00               		LD H,0
     701:  00:8A0D  11 40 F1            		LD DE,VT_
     702:  00:8A10  19                  		ADD HL,DE
     703:  00:8A11  7E                  		LD A,[HL]
     704:  00:8A12  CB 41               .CH_ENV:	BIT 0,C
     705:  00:8A14  20 03               		JR NZ,.CH_NOEN
     706:  00:8A16  DD B6 14            		OR [IX+CHNPRM_Env_En]
     707:  00:8A19  32 4A F1            .CH_NOEN:	LD [AYREGS+AR_AmplC],A
     708:  00:8A1C  CB 78               		BIT 7,B
     709:  00:8A1E  79                  		LD A,C
     710:  00:8A1F  28 19               		JR Z,.NO_ENSL
     711:  00:8A21  17                  		RLA
     712:  00:8A22  17                  		RLA
     713:  00:8A23  CB 2F               		SRA A
     714:  00:8A25  CB 2F               		SRA A
     715:  00:8A27  CB 2F               		SRA A
     716:  00:8A29  DD 86 04            		ADD A,[IX+CHNPRM_CrEnSl] ;SEE COMMENT BELOW
     717:  00:8A2C  CB 68               		BIT 5,B
     718:  00:8A2E  28 03               		JR Z,.NO_ENAC
     719:  00:8A30  DD 77 04            		LD [IX+CHNPRM_CrEnSl],A
     720:  00:8A33  21 1D F0            .NO_ENAC:	LD HL,PT3_AddToEn
     721:  00:8A36  86                  		ADD A,[HL] ;BUG IN PT3 - NEED WORD HERE.
     722:  00:8A37                      			   ;FIX IT IN NEXT VERSION?
     723:  00:8A37  77                  		LD [HL],A
     724:  00:8A38  18 0E               		JR .CH_MIX
     725:  00:8A3A  1F                  .NO_ENSL:	RRA
     726:  00:8A3B  DD 86 03            		ADD A,[IX+CHNPRM_CrNsSl]
     727:  00:8A3E  32 7F F0            		LD [AddToNs],A
     728:  00:8A41  CB 68               		BIT 5,B
     729:  00:8A43  28 03               		JR Z,.CH_MIX
     730:  00:8A45  DD 77 03            		LD [IX+CHNPRM_CrNsSl],A
     731:  00:8A48  78                  .CH_MIX:	LD A,B
     732:  00:8A49  1F                  		RRA
     733:  00:8A4A  E6 48               		AND $48
     734:  00:8A4C  21 47 F1            .CH_EXIT:	LD HL,AYREGS+AR_Mixer
     735:  00:8A4F  B6                  		OR [HL]
     736:  00:8A50  0F                  		RRCA
     737:  00:8A51  77                  		LD [HL],A
     738:  00:8A52  E1                  		POP HL
     739:  00:8A53  AF                  		XOR A
     740:  00:8A54  DD B6 0A            		OR [IX+CHNPRM_COnOff]
     741:  00:8A57  C8                  		RET Z
     742:  00:8A58  DD 35 0A            		DEC [IX+CHNPRM_COnOff]
     743:  00:8A5B  C0                  		RET NZ
     744:  00:8A5C  DD AE 15            		XOR [IX+CHNPRM_Flags]
     745:  00:8A5F  DD 77 15            		LD [IX+CHNPRM_Flags],A
     746:  00:8A62  1F                  		RRA
     747:  00:8A63  DD 7E 0B            		LD A,[IX+CHNPRM_OnOffD]
     748:  00:8A66  38 03               		JR C,.CH_ONDL
     749:  00:8A68  DD 7E 0C            		LD A,[IX+CHNPRM_OffOnD]
     750:  00:8A6B  DD 77 0A            .CH_ONDL:	LD [IX+CHNPRM_COnOff],A
     751:  00:8A6E  C9                  		RET
     752:  00:8A6F                      
     753:  00:8A6F  AF                  PT3_PLAY:	XOR A
     754:  00:8A70  32 1D F0            		LD [PT3_AddToEn],A
     755:  00:8A73  32 47 F1            		LD [AYREGS+AR_Mixer],A
     756:  00:8A76  3D                  		DEC A
     757:  00:8A77  32 4D F1            		LD [AYREGS+AR_EnvTp],A
     758:  00:8A7A  21 7A F0            		LD HL,DelyCnt
     759:  00:8A7D  35                  		DEC [HL]
     760:  00:8A7E  C2 05 8B            		JP NZ,.PL2
     761:  00:8A81  21 3E F0            		LD HL,ChanA+CHNPRM_NtSkCn
     762:  00:8A84  35                  		DEC [HL]
     763:  00:8A85  20 4E               		JR NZ,.PL1B
     764:  00:8A87  ED 4B 12 F0         		LD BC,[PT3_AdInPtA]
     765:  00:8A8B  0A                  		LD A,[BC]
     766:  00:8A8C  A7                  		AND A
     767:  00:8A8D  20 3B               		JR NZ,.PL1A
     768:  00:8A8F  57                  		LD D,A
     769:  00:8A90  32 7E F0            		LD [Ns_Base],A
     770:  00:8A93  2A 03 F0            		LD HL,[PT3_CrPsPtr]
     771:  00:8A96  23                  		INC HL
     772:  00:8A97  7E                  		LD A,[HL]
     773:  00:8A98  3C                  		INC A
     774:  00:8A99  20 08               		JR NZ,.PLNLP
     775:  00:8A9B  CD 05 86            		CALL CHECKLP
     776:  00:8A9E  2A 18 F0            		LD HL,[PT3_LPosPtr]
     777:  00:8AA1  7E                  		LD A,[HL]
     778:  00:8AA2  3C                  		INC A
     779:  00:8AA3  22 03 F0            .PLNLP:	LD [PT3_CrPsPtr],HL
     780:  00:8AA6  3D                  		DEC A
     781:  00:8AA7  87                  		ADD A,A
     782:  00:8AA8  5F                  		LD E,A
     783:  00:8AA9  CB 12               		RL D
     784:  00:8AAB  2A 1A F0            		LD HL,[PT3_PatsPtr]
     785:  00:8AAE  19                  		ADD HL,DE
     786:  00:8AAF  ED 5B 01 F0         		LD DE,[PT3_MODADDR]
     787:  00:8AB3  ED 73 0D F0         		LD [PT3_PSP],SP
     788:  00:8AB7  F9                  		LD SP,HL
     789:  00:8AB8  E1                  		POP HL
     790:  00:8AB9  19                  		ADD HL,DE
     791:  00:8ABA  44                  		LD B,H
     792:  00:8ABB  4D                  		LD C,L
     793:  00:8ABC  E1                  		POP HL
     794:  00:8ABD  19                  		ADD HL,DE
     795:  00:8ABE  22 14 F0            		LD [PT3_AdInPtB],HL
     796:  00:8AC1  E1                  		POP HL
     797:  00:8AC2  19                  		ADD HL,DE
     798:  00:8AC3  22 16 F0            		LD [PT3_AdInPtC],HL
     799:  00:8AC6  ED 7B 0D F0         		LD SP,[PT3_PSP]
     800:  00:8ACA                      
     801:  00:8ACA  DD 21 2F F0         .PL1A:		LD IX,ChanA+12
     802:  00:8ACE  CD AD 87            		CALL PTDECOD
     803:  00:8AD1  ED 43 12 F0         		LD [PT3_AdInPtA],BC
     804:  00:8AD5                      
     805:  00:8AD5  21 5B F0            .PL1B:		LD HL,ChanB+CHNPRM_NtSkCn
     806:  00:8AD8  35                  		DEC [HL]
     807:  00:8AD9  20 0F               		JR NZ,.PL1C
     808:  00:8ADB  DD 21 4C F0         		LD IX,ChanB+12
     809:  00:8ADF  ED 4B 14 F0         		LD BC,[PT3_AdInPtB]
     810:  00:8AE3  CD AD 87            		CALL PTDECOD
     811:  00:8AE6  ED 43 14 F0         		LD [PT3_AdInPtB],BC
     812:  00:8AEA                      
     813:  00:8AEA  21 78 F0            .PL1C:		LD HL,ChanC+CHNPRM_NtSkCn
     814:  00:8AED  35                  		DEC [HL]
     815:  00:8AEE  20 0F               		JR NZ,.PL1D
     816:  00:8AF0  DD 21 69 F0         		LD IX,ChanC+12
     817:  00:8AF4  ED 4B 16 F0         		LD BC,[PT3_AdInPtC]
     818:  00:8AF8  CD AD 87            		CALL PTDECOD
     819:  00:8AFB  ED 43 16 F0         		LD [PT3_AdInPtC],BC
     820:  00:8AFF                      
     821:  00:8AFF  3A 1C F0            .PL1D:		LD A,[PT3_Delay]
     822:  00:8B02  32 7A F0            		LD [DelyCnt],A
     823:  00:8B05                      
     824:  00:8B05  DD 21 23 F0         .PL2:		LD IX,ChanA
     825:  00:8B09  2A 40 F1            		LD HL,[AYREGS+AR_TonA]
     826:  00:8B0C  CD 1D 89            		CALL CHREGS
     827:  00:8B0F  22 40 F1            		LD [AYREGS+AR_TonA],HL
     828:  00:8B12  3A 4A F1            		LD A,[AYREGS+AR_AmplC]
     829:  00:8B15  32 48 F1            		LD [AYREGS+AR_AmplA],A
     830:  00:8B18  DD 21 40 F0         		LD IX,ChanB
     831:  00:8B1C  2A 42 F1            		LD HL,[AYREGS+AR_TonB]
     832:  00:8B1F  CD 1D 89            		CALL CHREGS
     833:  00:8B22  22 42 F1            		LD [AYREGS+AR_TonB],HL
     834:  00:8B25  3A 4A F1            		LD A,[AYREGS+AR_AmplC]
     835:  00:8B28  32 49 F1            		LD [AYREGS+AR_AmplB],A
     836:  00:8B2B  DD 21 5D F0         		LD IX,ChanC
     837:  00:8B2F  2A 44 F1            		LD HL,[AYREGS+AR_TonC]
     838:  00:8B32  CD 1D 89            		CALL CHREGS
     839:  00:8B35  22 44 F1            		LD [AYREGS+AR_TonC],HL
     840:  00:8B38                      
     841:  00:8B38  2A 7E F0            		LD HL,[Ns_Base_AddToNs]
     842:  00:8B3B  7C                  		LD A,H
     843:  00:8B3C  85                  		ADD A,L
     844:  00:8B3D  32 46 F1            		LD [AYREGS+AR_Noise],A
     845:  00:8B40                      
     846:  00:8B40  3A 1D F0            		LD A,[PT3_AddToEn]
     847:  00:8B43  5F                  		LD E,A
     848:  00:8B44  87                  		ADD A,A
     849:  00:8B45  9F                  		SBC A,A
     850:  00:8B46  57                  		LD D,A
     851:  00:8B47  2A 4E F1            		LD HL,[EnvBase]
     852:  00:8B4A  19                  		ADD HL,DE
     853:  00:8B4B  ED 5B 7B F0         		LD DE,[CurESld]
     854:  00:8B4F  19                  		ADD HL,DE
     855:  00:8B50  22 4B F1            		LD [AYREGS+AR_Env],HL
     856:  00:8B53                      
     857:  00:8B53  AF                  		XOR A
     858:  00:8B54  21 7D F0            		LD HL,CurEDel
     859:  00:8B57  B6                  		OR [HL]
     860:  00:8B58  C8                  		RET Z
     861:  00:8B59  35                  		DEC [HL]
     862:  00:8B5A  C0                  		RET NZ
     863:  00:8B5B  3A 1E F0            		LD A,[PT3_Env_Del]
     864:  00:8B5E  77                  		LD [HL],A
     865:  00:8B5F  2A 1F F0            		LD HL,[PT3_ESldAdd]
     866:  00:8B62  19                  		ADD HL,DE
     867:  00:8B63  22 7B F0            		LD [CurESld],HL
     868:  00:8B66  C9                  		RET
     869:  00:8B67                      
     870:  00:8B67  AF                  PT3_ROUT:	XOR A
     871:  00:8B68                      	
     872:  00:8B68                      ROUT_A0:	; --- FIXES BITS 6 AND 7 OF MIXER ---
     873:  00:8B68  21 47 F1            		LD	HL,AYREGS+AR_Mixer
     874:  00:8B6B  CB FE               		set	7,[hl]
     875:  00:8B6D  CB B6               		res	6,[hl]
     876:  00:8B6F                      
     877:  00:8B6F  0E A0               		LD C,$A0
     878:  00:8B71  21 40 F1            		LD HL,AYREGS
     879:  00:8B74  ED 79               .LOUT:		OUT [C],A
     880:  00:8B76  0C                  		INC C
     881:  00:8B77  ED A3               		OUTI 
     882:  00:8B79  0D                  		DEC C
     883:  00:8B7A  3C                  		INC A
     884:  00:8B7B  FE 0D               		CP 13
     885:  00:8B7D  20 F5               		JR NZ,.LOUT
     886:  00:8B7F  ED 79               		OUT [C],A
     887:  00:8B81  7E                  		LD A,[HL]
     888:  00:8B82  A7                  		AND A
     889:  00:8B83  F8                  		RET M
     890:  00:8B84  0C                  		INC C
     891:  00:8B85  ED 79               		OUT [C],A
     892:  00:8B87  C9                  		RET
     893:  00:8B88                      
     894:  00:8B88  64                  NT_DATA:	db (T_NEW_0-T1_)*2
     895:  00:8B89  2A                  		db TCNEW_0-T_
     896:  00:8B8A  65                  		db (T_OLD_0-T1_)*2+1
     897:  00:8B8B  00                  		db TCOLD_0-T_
     898:  00:8B8C  01                  		db (T_NEW_1-T1_)*2+1
     899:  00:8B8D  0C                  		db TCNEW_1-T_
     900:  00:8B8E  01                  		db (T_OLD_1-T1_)*2+1
     901:  00:8B8F  0C                  		db TCOLD_1-T_
     902:  00:8B90  94                  		db (T_NEW_2-T1_)*2
     903:  00:8B91  35                  		db TCNEW_2-T_
     904:  00:8B92  30                  		db (T_OLD_2-T1_)*2
     905:  00:8B93  0E                  		db TCOLD_2-T_
     906:  00:8B94  60                  		db (T_NEW_3-T1_)*2
     907:  00:8B95  20                  		db TCNEW_3-T_
     908:  00:8B96  60                  		db (T_OLD_3-T1_)*2
     909:  00:8B97  21                  		db TCOLD_3-T_
     910:  00:8B98                      
     911:  00:8B98                      T_:
     912:  00:8B98                      
     913:  00:8B98                      TCOLD_0:	db $00+1,$04+1,$08+1,$0A+1,$0C+1,$0E+1,$12+1,$14+1
     913:  00:8B98  01 05 09 0B 0D 0F 13 15 
     914:  00:8BA0  19 25 3D 00         		db $18+1,$24+1,$3C+1,0
     915:  00:8BA4                      TCNEW_1:	
     916:  00:8BA4  5D 00               TCOLD_1:	db $5C+1,0
     917:  00:8BA6                      TCOLD_2:	db $30+1,$36+1,$4C+1,$52+1,$5E+1,$70+1,$82,$8C,$9C
     917:  00:8BA6  31 37 4D 53 5F 71 82 8C 9C 
     918:  00:8BAF                      		db $9E,$A0,$A6,$A8,$AA,$AC,$AE,$AE,0
     918:  00:8BAF  9E A0 A6 A8 AA AC AE AE 00 
     919:  00:8BB8  57                  TCNEW_3:	db $56+1
     920:  00:8BB9                      TCOLD_3:	db $1E+1,$22+1,$24+1,$28+1,$2C+1,$2E+1,$32+1,$BE+1,0
     920:  00:8BB9  1F 23 25 29 2D 2F 33 BF 00 
     921:  00:8BC2                      TCNEW_0:	db $1C+1,$20+1,$22+1,$26+1,$2A+1,$2C+1,$30+1,$54+1
     921:  00:8BC2  1D 21 23 27 2B 2D 31 55 
     922:  00:8BCA  BD BF 00            		db $BC+1,$BE+1,0
     923:  00:8BCD                      TCNEW_2:	db $1A+1,$20+1,$24+1,$28+1,$2A+1,$3A+1,$4C+1,$5E+1
     923:  00:8BCD  1B 21 25 29 2B 3B 4D 5F 
     924:  00:8BD5  BB BD BF            		db $BA+1,$BC+1,$BE+1
     925:  00:8BD8                      
     926:  00:8BD8  00 01 00 90         EMPTYSAMORN: 	db 0,1,0,$90 ;delete $90 if you don't need default sample
     927:  00:8BDC                      
     928:  00:8BDC                      T_PACK:		; First 12 values of tone tables (packed)
     929:  00:8BDC  0D                  		db ($06EC*2)/256
     930:  00:8BDD  D8                  		db #d8
     931:  00:8BDE  69                  		db $0755-$06EC
     932:  00:8BDF  70                  		db $07C5-$0755
     933:  00:8BE0  76                  		db $083B-$07C5
     934:  00:8BE1  7D                  		db $08B8-$083B
     935:  00:8BE2  85                  		db $093D-$08B8
     936:  00:8BE3  8D                  		db $09CA-$093D
     937:  00:8BE4  95                  		db $0A5F-$09CA
     938:  00:8BE5  9D                  		db $0AFC-$0A5F
     939:  00:8BE6  A8                  		db $0BA4-$0AFC
     940:  00:8BE7  B1                  		db $0C55-$0BA4
     941:  00:8BE8  BB                  		db $0D10-$0C55
     942:  00:8BE9  0C                  		db ($066D*2)/256
     943:  00:8BEA  DA                  		db #da
     944:  00:8BEB  62                  		db $06CF-$066D
     945:  00:8BEC  68                  		db $0737-$06CF
     946:  00:8BED  6D                  		db $07A4-$0737
     947:  00:8BEE  75                  		db $0819-$07A4
     948:  00:8BEF  7B                  		db $0894-$0819
     949:  00:8BF0  83                  		db $0917-$0894
     950:  00:8BF1  8A                  		db $09A1-$0917
     951:  00:8BF2  92                  		db $0A33-$09A1
     952:  00:8BF3  9C                  		db $0ACF-$0A33
     953:  00:8BF4  A4                  		db $0B73-$0ACF
     954:  00:8BF5  AF                  		db $0C22-$0B73
     955:  00:8BF6  B8                  		db $0CDA-$0C22
     956:  00:8BF7  0E                  		db ($0704*2)/256
     957:  00:8BF8  08                  		db #08
     958:  00:8BF9  6A                  		db $076E-$0704
     959:  00:8BFA  72                  		db $07E0-$076E
     960:  00:8BFB  78                  		db $0858-$07E0
     961:  00:8BFC  7E                  		db $08D6-$0858
     962:  00:8BFD  86                  		db $095C-$08D6
     963:  00:8BFE  90                  		db $09EC-$095C
     964:  00:8BFF  96                  		db $0A82-$09EC
     965:  00:8C00  A0                  		db $0B22-$0A82
     966:  00:8C01  AA                  		db $0BCC-$0B22
     967:  00:8C02  B4                  		db $0C80-$0BCC
     968:  00:8C03  BE                  		db $0D3E-$0C80
     969:  00:8C04  0F                  		db ($07E0*2)/256
     970:  00:8C05  C0                  		db #c0
     971:  00:8C06  78                  		db $0858-$07E0
     972:  00:8C07  88                  		db $08E0-$0858
     973:  00:8C08  80                  		db $0960-$08E0
     974:  00:8C09  90                  		db $09F0-$0960
     975:  00:8C0A  98                  		db $0A88-$09F0
     976:  00:8C0B  A0                  		db $0B28-$0A88
     977:  00:8C0C  B0                  		db $0BD8-$0B28
     978:  00:8C0D  A8                  		db $0C80-$0BD8
     979:  00:8C0E  E0                  		db $0D60-$0C80
     980:  00:8C0F  B0                  		db $0E10-$0D60
     981:  00:8C10  E8                  		db $0EF8-$0E10
      61.  00:8C11                      	include "ayFX-ROM_sjasm.asm"
       1:  00:8C11                      		; --- ayFX REPLAYER v1.31 ---
       2:  00:8C11                      
       3:  00:8C11                      		; --- v1.31	Fixed bug on previous version, only PSG channel C worked
       4:  00:8C11                      		; --- v1.3	Fixed volume and Relative volume versions on the same file, conditional compilation
       5:  00:8C11                      		; ---		Support for dynamic or fixed channel allocation
       6:  00:8C11                      		; --- v1.2f/r	ayFX bank support
       7:  00:8C11                      		; --- v1.11f/r	If a frame volume is zero then no AYREGS update
       8:  00:8C11                      		; --- v1.1f/r	Fixed volume for all ayFX streams
       9:  00:8C11                      		; --- v1.1	Explicit priority (as suggested by AR)
      10:  00:8C11                      		; --- v1.0f	Bug fixed (error when using noise)
      11:  00:8C11                      		; --- v1.0	Initial release
      12:  00:8C11                      
      13:  00:8C11                      		; --- DEFINE AYFXRELATIVE AS 0 FOR FIXED VOLUME VERSION ---
      14:  00:8C11                      		; --- DEFINE AYFXRELATIVE AS 1 FOR RELATIVE VOLUME VERSION ---
      15:  00:8C11  (00:0000)           AYFXRELATIVE equ 0
      16:  00:8C11                      
      17:  00:8C11                      ayFX_SETUP:	; ---          ayFX replayer setup          ---
      18:  00:8C11                      		; --- INPUT: HL -> pointer to the ayFX bank ---
      19:  00:8C11  22 41 F2            		ld	[ayFX_BANK],hl			; Current ayFX bank
      20:  00:8C14  3E 01               		ld	a,1				; a:=0
      21:  00:8C16  32 40 F2            		ld	[ayFX_MODE],a			; Initial mode: fixed channel
      22:  00:8C19  3C                  		inc	a				; Starting channel (=1)
      23:  00:8C1A  32 4A F2            		ld	[ayFX_CHANNEL],a		; Updated
      24:  00:8C1D                      ayFX_END:	; --- End of an ayFX stream ---
      25:  00:8C1D  3E FF               		ld	a,255				; Lowest ayFX priority
      26:  00:8C1F  32 43 F2            		ld	[ayFX_PRIORITY],a		; Priority saved (not playing ayFX stream)
      27:  00:8C22  C9                  		ret					; Return
      28:  00:8C23                      
      29:  00:8C23                      ayFX_INIT:	; ---     INIT A NEW ayFX STREAM     ---
      30:  00:8C23                      		; --- INPUT: A -> sound to be played ---
      31:  00:8C23                      		; ---        C -> sound priority     ---
      32:  00:8C23  C5                  		push	bc				; Store bc in stack
      33:  00:8C24  D5                  		push	de				; Store de in stack
      34:  00:8C25  E5                  		push	hl				; Store hl in stack
      35:  00:8C26                      		; --- Check if the index is in the bank ---
      36:  00:8C26  47                  		ld	b,a				; b:=a (new ayFX stream index)
      37:  00:8C27  2A 41 F2            		ld	hl,[ayFX_BANK]			; Current ayFX BANK
      38:  00:8C2A  7E                  		ld	a,[hl]				; Number of samples in the bank
      39:  00:8C2B  B7                  		or	a				; If zero (means 256 samples)...
      40:  00:8C2C  28 06               		jr	z,.CHECK_PRI			; ...goto .CHECK_PRI
      41:  00:8C2E                      		; The bank has less than 256 samples
      42:  00:8C2E  78                  		ld	a,b				; a:=b (new ayFX stream index)
      43:  00:8C2F  BE                  		cp	[hl]				; If new index is not in the bank...
      44:  00:8C30  3E 02               		ld	a,2				; a:=2 (error 2: Sample not in the bank)
      45:  00:8C32  30 21               		jr	nc,.INIT_END			; ...we can't init it
      46:  00:8C34                      .CHECK_PRI:	; --- Check if the new priority is lower than the current one ---
      47:  00:8C34                      		; ---   Remember: 0 = highest priority, 15 = lowest priority  ---
      48:  00:8C34  78                  		ld	a,b				; a:=b (new ayFX stream index)
      49:  00:8C35  3A 43 F2            		ld	a,[ayFX_PRIORITY]		; a:=Current ayFX stream priority
      50:  00:8C38  B9                  		cp	c				; If new ayFX stream priority is lower than current one...
      51:  00:8C39  3E 01               		ld	a,1				; a:=1 (error 1: A sample with higher priority is being played)
      52:  00:8C3B  38 18               		jr	c,.INIT_END			; ...we don't start the new ayFX stream
      53:  00:8C3D                      		; --- Set new priority ---
      54:  00:8C3D  79                  		ld	a,c				; a:=New priority
      55:  00:8C3E  E6 0F               		and	$0F				; We mask the priority
      56:  00:8C40  32 43 F2            		ld	[ayFX_PRIORITY],a		; new ayFX stream priority saved in RAM
      57:  00:8C43                      
      58:  00:8C43                      		IF ( AYFXRELATIVE == 1 )
      59:  00:8C43                    ~ 			; --- Volume adjust using PT3 volume table ---
      60:  00:8C43                    ~ 			ld	c,a				; c:=New priority (fixed)
      61:  00:8C43                    ~ 			ld	a,15				; a:=15
      62:  00:8C43                    ~ 			sub	c				; a:=15-New priority = relative volume
      63:  00:8C43                    ~ 			jr	z,.INIT_NOSOUND		; If priority is 15 -> no sound output (volume is zero)
      64:  00:8C43                    ~ 			add	a,a				; a:=a*2
      65:  00:8C43                    ~ 			add	a,a				; a:=a*4
      66:  00:8C43                    ~ 			add	a,a				; a:=a*8
      67:  00:8C43                    ~ 			add	a,a				; a:=a*16
      68:  00:8C43                    ~ 			ld	e,a				; e:=a
      69:  00:8C43                    ~ 			ld	d,0				; de:=a
      70:  00:8C43                    ~ 			ld	hl,VT_				; hl:=PT3 volume table
      71:  00:8C43                    ~ 			add	hl,de				; hl is a pointer to the relative volume table
      72:  00:8C43                    ~ 			ld	[ayFX_VT],hl			; Save pointer
      73:  00:8C43                    ~ 		ENDIF
      74:  00:8C43                      
      75:  00:8C43                      		; --- Calculate the pointer to the new ayFX stream ---
      76:  00:8C43  ED 5B 41 F2         		ld	de,[ayFX_BANK]			; de:=Current ayFX bank
      77:  00:8C47  13                  		inc	de				; de points to the increments table of the bank
      78:  00:8C48  68                  		ld	l,b				; l:=b (new ayFX stream index)
      79:  00:8C49  26 00               		ld	h,0				; hl:=b (new ayFX stream index)
      80:  00:8C4B  29                  		add	hl,hl				; hl:=hl*2
      81:  00:8C4C  19                  		add	hl,de				; hl:=hl+de (hl points to the correct increment)
      82:  00:8C4D  5E                  		ld	e,[hl]				; e:=lower byte of the increment
      83:  00:8C4E  23                  		inc	hl				; hl points to the higher byte of the correct increment
      84:  00:8C4F  56                  		ld	d,[hl]				; de:=increment
      85:  00:8C50  19                  		add	hl,de				; hl:=hl+de (hl points to the new ayFX stream)
      86:  00:8C51  22 44 F2            		ld	[ayFX_POINTER],hl		; Pointer saved in RAM
      87:  00:8C54  AF                  		xor	a				; a:=0 (no errors)
      88:  00:8C55  E1                  .INIT_END:	pop	hl				; Retrieve hl from stack
      89:  00:8C56  D1                  		pop	de				; Retrieve de from stack
      90:  00:8C57  C1                  		pop	bc				; Retrieve bc from stack
      91:  00:8C58  C9                  		ret					; Return
      92:  00:8C59                      
      93:  00:8C59                      		IF ( AYFXRELATIVE == 1 )
      94:  00:8C59                    ~ .INIT_NOSOUND:	; --- Init a sample with relative volume zero -> no sound output ---
      95:  00:8C59                    ~ 			ld	a,255				; Lowest ayFX priority
      96:  00:8C59                    ~ 			ld	[ayFX_PRIORITY],a		; Priority saved (not playing ayFX stream)
      97:  00:8C59                    ~ 			jr	.INIT_END			; Jumps to .INIT_END
      98:  00:8C59                    ~ 		ENDIF
      99:  00:8C59                      
     100:  00:8C59                      ayFX_PLAY:	; --- PLAY A FRAME OF AN ayFX STREAM ---
     101:  00:8C59  3A 43 F2            		ld	a,[ayFX_PRIORITY]		; a:=Current ayFX stream priority
     102:  00:8C5C  B7                  		or	a				; If priority has bit 7 on...
     103:  00:8C5D  F8                  		ret	m				; ...return
     104:  00:8C5E                      		; --- Calculate next ayFX channel (if needed) ---
     105:  00:8C5E  3A 40 F2            		ld	a,[ayFX_MODE]			; ayFX mode
     106:  00:8C61  E6 01               		and	1				; If bit0=0 (fixed channel)...
     107:  00:8C63  28 08               		jr	z,.TAKECB			; ...skip channel changing
     108:  00:8C65  21 4A F2            		ld	hl,ayFX_CHANNEL			; Old ayFX playing channel
     109:  00:8C68  35                  		dec	[hl]				; New ayFX playing channel
     110:  00:8C69  20 02               		jr	nz,.TAKECB			; If not zero jump to .TAKECB
     111:  00:8C6B  36 03               		ld	[hl],3				; If zero -> set channel 3
     112:  00:8C6D                      .TAKECB:	; --- Extract control byte from stream ---
     113:  00:8C6D  2A 44 F2            		ld	hl,[ayFX_POINTER]		; Pointer to the current ayFX stream
     114:  00:8C70  4E                  		ld	c,[hl]				; c:=Control byte
     115:  00:8C71  23                  		inc	hl				; Increment pointer
     116:  00:8C72                      		; --- Check if there's new tone on stream ---
     117:  00:8C72  CB 69               		bit	5,c				; If bit 5 c is off...
     118:  00:8C74  28 08               		jr	z,.CHECK_NN			; ...jump to .CHECK_NN (no new tone)
     119:  00:8C76                      		; --- Extract new tone from stream ---
     120:  00:8C76  5E                  		ld	e,[hl]				; e:=lower byte of new tone
     121:  00:8C77  23                  		inc	hl				; Increment pointer
     122:  00:8C78  56                  		ld	d,[hl]				; d:=higher byte of new tone
     123:  00:8C79  23                  		inc	hl				; Increment pointer
     124:  00:8C7A  ED 53 46 F2         		ld	[ayFX_TONE],de			; ayFX tone updated
     125:  00:8C7E                      .CHECK_NN:	; --- Check if there's new noise on stream ---
     126:  00:8C7E  CB 71               		bit	6,c				; if bit 6 c is off...
     127:  00:8C80  28 09               		jr	z,.SETPOINTER			; ...jump to .SETPOINTER (no new noise)
     128:  00:8C82                      		; --- Extract new noise from stream ---
     129:  00:8C82  7E                  		ld	a,[hl]				; a:=New noise
     130:  00:8C83  23                  		inc	hl				; Increment pointer
     131:  00:8C84  FE 20               		cp	$20				; If it's an illegal value of noise (used to mark end of stream)...
     132:  00:8C86  28 95               		jr.	z,ayFX_END			; ...jump to ayFX_END
     133:  00:8C88  32 48 F2            		ld	[ayFX_NOISE],a			; ayFX noise updated
     134:  00:8C8B                      .SETPOINTER:	; --- Update ayFX pointer ---
     135:  00:8C8B  22 44 F2            		ld	[ayFX_POINTER],hl		; Update ayFX stream pointer
     136:  00:8C8E                      		; --- Extract volume ---
     137:  00:8C8E  79                  		ld	a,c				; a:=Control byte
     138:  00:8C8F  E6 0F               		and	$0F				; lower nibble
     139:  00:8C91                      
     140:  00:8C91                      		IF ( AYFXRELATIVE == 1 )
     141:  00:8C91                    ~ 			; --- Fix the volume using PT3 Volume Table ---
     142:  00:8C91                    ~ 			ld	hl,[ayFX_VT]			; hl:=Pointer to relative volume table
     143:  00:8C91                    ~ 			ld	e,a				; e:=a (ayFX volume)
     144:  00:8C91                    ~ 			ld	d,0				; d:=0
     145:  00:8C91                    ~ 			add	hl,de				; hl:=hl+de (hl points to the relative volume of this frame
     146:  00:8C91                    ~ 			ld	a,[hl]				; a:=ayFX relative volume
     147:  00:8C91                    ~ 			or	a				; If relative volume is zero...
     148:  00:8C91                    ~ 		ENDIF
     149:  00:8C91                      
     150:  00:8C91  32 49 F2            		ld	[ayFX_VOLUME],a			; ayFX volume updated
     151:  00:8C94  C8                  		ret	z				; ...return (don't copy ayFX values in to AYREGS)
     152:  00:8C95                      		; -------------------------------------
     153:  00:8C95                      		; --- COPY ayFX VALUES IN TO AYREGS ---
     154:  00:8C95                      		; -------------------------------------
     155:  00:8C95                      		; --- Set noise channel ---
     156:  00:8C95  CB 79               		bit	7,c				; If noise is off...
     157:  00:8C97  20 06               		jr	nz,.SETMASKS			; ...jump to .SETMASKS
     158:  00:8C99  3A 48 F2            		ld	a,[ayFX_NOISE]			; ayFX noise value
     159:  00:8C9C  32 46 F1            		ld	[AYREGS+6],a			; copied in to AYREGS (noise channel)
     160:  00:8C9F                      .SETMASKS:	; --- Set mixer masks ---
     161:  00:8C9F  79                  		ld	a,c				; a:=Control byte
     162:  00:8CA0  E6 90               		and	$90				; Only bits 7 and 4 (noise and tone mask for psg reg 7)
     163:  00:8CA2  FE 90               		cp	$90				; If no noise and no tone...
     164:  00:8CA4  C8                  		ret	z				; ...return (don't copy ayFX values in to AYREGS)
     165:  00:8CA5                      		; --- Copy ayFX values in to ARYREGS ---
     166:  00:8CA5  0F                  		rrca					; Rotate a to the right (1 TIME)
     167:  00:8CA6  0F                  		rrca					; Rotate a to the right (2 TIMES) (OR mask)
     168:  00:8CA7  16 DB               		ld	d,$DB				; d:=Mask for psg mixer (AND mask)
     169:  00:8CA9                      		; --- Dump to correct channel ---
     170:  00:8CA9  21 4A F2            		ld	hl,ayFX_CHANNEL			; Next ayFX playing channel
     171:  00:8CAC  46                  		ld	b,[hl]				; Channel counter
     172:  00:8CAD                      .CHK1:		; --- Check if playing channel was 1 ---
     173:  00:8CAD  10 0D               		djnz	.CHK2				; Decrement and jump if channel was not 1
     174:  00:8CAF                      .PLAY_C:	; --- Play ayFX stream on channel C ---
     175:  00:8CAF  CD DE 8C            		call	.SETMIXER			; Set PSG mixer value (returning a=ayFX volume and hl=ayFX tone)
     176:  00:8CB2  32 4A F1            		ld	[AYREGS+10],a			; Volume copied in to AYREGS (channel C volume)
     177:  00:8CB5  CB 51               		bit	2,c				; If tone is off...
     178:  00:8CB7  C0                  		ret	nz				; ...return
     179:  00:8CB8  22 44 F1            		ld	[AYREGS+4],hl			; copied in to AYREGS (channel C tone)
     180:  00:8CBB  C9                  		ret					; Return
     181:  00:8CBC                      .CHK2:		; --- Check if playing channel was 2 ---
     182:  00:8CBC  CB 0A               		rrc	d				; Rotate right AND mask
     183:  00:8CBE  0F                  		rrca					; Rotate right OR mask
     184:  00:8CBF  10 0D               		djnz	.CHK3				; Decrement and jump if channel was not 2
     185:  00:8CC1                      .PLAY_B:	; --- Play ayFX stream on channel B ---
     186:  00:8CC1  CD DE 8C            		call	.SETMIXER			; Set PSG mixer value (returning a=ayFX volume and hl=ayFX tone)
     187:  00:8CC4  32 49 F1            		ld	[AYREGS+9],a			; Volume copied in to AYREGS (channel B volume)
     188:  00:8CC7  CB 49               		bit	1,c				; If tone is off...
     189:  00:8CC9  C0                  		ret	nz				; ...return
     190:  00:8CCA  22 42 F1            		ld	[AYREGS+2],hl			; copied in to AYREGS (channel B tone)
     191:  00:8CCD  C9                  		ret					; Return
     192:  00:8CCE                      .CHK3:		; --- Check if playing channel was 3 ---
     193:  00:8CCE  CB 0A               		rrc	d				; Rotate right AND mask
     194:  00:8CD0  0F                  		rrca					; Rotate right OR mask
     195:  00:8CD1                      .PLAY_A:	; --- Play ayFX stream on channel A ---
     196:  00:8CD1  CD DE 8C            		call	.SETMIXER			; Set PSG mixer value (returning a=ayFX volume and hl=ayFX tone)
     197:  00:8CD4  32 48 F1            		ld	[AYREGS+8],a			; Volume copied in to AYREGS (channel A volume)
     198:  00:8CD7  CB 41               		bit	0,c				; If tone is off...
     199:  00:8CD9  C0                  		ret	nz				; ...return
     200:  00:8CDA  22 40 F1            		ld	[AYREGS+0],hl			; copied in to AYREGS (channel A tone)
     201:  00:8CDD  C9                  		ret					; Return
     202:  00:8CDE                      .SETMIXER:	; --- Set PSG mixer value ---
     203:  00:8CDE  4F                  		ld	c,a				; c:=OR mask
     204:  00:8CDF  3A 47 F1            		ld	a,[AYREGS+7]			; a:=PSG mixer value
     205:  00:8CE2  A2                  		and	d				; AND mask
     206:  00:8CE3  B1                  		or	c				; OR mask
     207:  00:8CE4  32 47 F1            		ld	[AYREGS+7],a			; PSG mixer value updated
     208:  00:8CE7  3A 49 F2            		ld	a,[ayFX_VOLUME]			; a:=ayFX volume value
     209:  00:8CEA  2A 46 F2            		ld	hl,[ayFX_TONE]			; ayFX tone value
     210:  00:8CED  C9                  		ret					; Return
     211:  00:8CEE                      
     212:  00:8CEE                      		IF ( AYFXRELATIVE == 1 )
     213:  00:8CEE                    ~ 			; --- UNCOMMENT THIS IF YOU DON'T USE THIS REPLAYER WITH PT3 REPLAYER ---
     214:  00:8CEE                    ~ 		;VT_:	.INCBIN	"VT.BIN"
     215:  00:8CEE                    ~ 			; --- UNCOMMENT THIS IF YOU DON'T USE THIS REPLAYER WITH PT3 REPLAYER ---
     216:  00:8CEE                    ~ 		ENDIF
      62.  00:8CEE                      	
      63.  00:8CEE                      	
      64.  00:8CEE                      
      65.  00:8CEE                      ;;=====================================================
      66.  00:8CEE                      ;;DEFINICIÓN DE CANTIONES Y EFECTOS DE SONIDO
      67.  00:8CEE                      ;;=====================================================		
      68.  00:8CEE                      song:
      69.  00:8CEE  (0968)              	incbin "bloodytears_castlevania.99"
      70.  00:9656                      	
      71.  00:9656                      sfx_bank:
      72.  00:9656  (004B)              	incbin "demo.afb"
      73.  00:96A1                      
     114   00:96A1                      	
     115   00:96A1                      
     116   00:96A1                      ;;=====================================================
     117   00:96A1                      ;;DEFINICIÓN DE SUBRUTINAS DE FERNANDO PARA COMPRESIÓN Y SONIDO
     118   00:96A1                      ;;=====================================================
     119   00:96A1                      ;Este include lleva la rutina de descompresión de ROM/RAM a VRAM de pletter
     120   00:96A1                      ;Está adaptada de la original a sjasm
     121   00:96A1                      ;	HL = RAM/ROM source	; DE = VRAM destination
     122   00:96A1                      depack_VRAM:
     123   00:96A1                      	include "PL_VRAM_Depack_SJASM.asm"
       1.  00:96A1                      ;-----------------------------------------------------------
       2.  00:96A1                      ; Pletter v0.5b VRAM Depacker v1.1 - 16Kb version
       3.  00:96A1                      ; HL = RAM/ROM source ; DE = VRAM destination
       4.  00:96A1                      ;-----------------------------------------------------------
       5.  00:96A1  F3                  	di
       6.  00:96A2                      
       7.  00:96A2                      ; VRAM address setup
       8.  00:96A2  7B                  	ld	a,e
       9.  00:96A3  D3 99               	out	[099h],a
      10.  00:96A5  7A                  	ld	a,d
      11.  00:96A6  F6 40               	or	040h
      12.  00:96A8  D3 99               	out	[099h],a
      13.  00:96AA                      
      14.  00:96AA                      ; Initialization
      15.  00:96AA  7E                  	ld	a,[hl]
      16.  00:96AB  23                  	inc	hl
      17.  00:96AC  D9                  	exx
      18.  00:96AD  11 00 00            	ld	de,0
      19.  00:96B0  87                  	add	a,a
      20.  00:96B1  3C                  	inc	a
      21.  00:96B2  CB 13               	rl	e
      22.  00:96B4  87                  	add	a,a
      23.  00:96B5  CB 13               	rl	e
      24.  00:96B7  87                  	add	a,a
      25.  00:96B8  CB 13               	rl	e
      26.  00:96BA  CB 13               	rl	e
      27.  00:96BC  21 73 97            	ld	hl,modes
      28.  00:96BF  19                  	add	hl,de
      29.  00:96C0  5E                  	ld	e,[hl]
      30.  00:96C1  DD 6B               	ld	ixl,e
      31.  00:96C3  23                  	inc	hl
      32.  00:96C4  5E                  	ld	e,[hl]
      33.  00:96C5  DD 63               	ld	ixh,e
      34.  00:96C7  1E 01               	ld	e,1
      35.  00:96C9  D9                  	exx
      36.  00:96CA  FD 21 D3 96         	ld	iy,loop
      37.  00:96CE                      
      38.  00:96CE                      ; Main depack loop
      39.  00:96CE  0E 98               literal:ld	c,098h
      40.  00:96D0  ED A3               	outi
      41.  00:96D2  13                  	inc	de
      42.  00:96D3  87                  loop:	add	a,a
      43.  00:96D4  CC 67 97              	call	z,getbit
      44.  00:96D7  30 F5               	jr	nc,literal
      45.  00:96D9                      
      46.  00:96D9                      ; Compressed data
      47.  00:96D9  D9                  	exx
      48.  00:96DA  62                  	ld	h,d
      49.  00:96DB  6B                  	ld	l,e
      50.  00:96DC  87                  getlen: add	a,a
      51.  00:96DD  CC 6B 97            	call	z,getbitexx
      52.  00:96E0  30 1D               	jr	nc,lenok
      53.  00:96E2  87                  lus:	add	a,a
      54.  00:96E3  CC 6B 97            	call	z,getbitexx
      55.  00:96E6  ED 6A               	adc	hl,hl
      56.  00:96E8  D8                  	ret	c
      57.  00:96E9  87                  	add	a,a
      58.  00:96EA  CC 6B 97            	call	z,getbitexx
      59.  00:96ED  30 10               	jr	nc,lenok
      60.  00:96EF  87                  	add	a,a
      61.  00:96F0  CC 6B 97            	call	z,getbitexx
      62.  00:96F3  ED 6A               	adc	hl,hl
      63.  00:96F5  DA 71 97            	jp	c,Depack_out
      64.  00:96F8  87                  	add	a,a
      65.  00:96F9  CC 6B 97            	call	z,getbitexx
      66.  00:96FC  DA E2 96            	jp	c,lus
      67.  00:96FF  23                  lenok:  inc	hl
      68.  00:9700  D9                  	exx
      69.  00:9701  4E                  	ld	c,[hl]
      70.  00:9702  23                  	inc	hl
      71.  00:9703  06 00               	ld	b,0
      72.  00:9705  CB 79               	bit	7,c
      73.  00:9707  CA 3A 97            	jp	z,offsok
      74.  00:970A  DD E9               	jp	ix
      75.  00:970C                      
      76.  00:970C  87                  mode7:  add	a,a
      77.  00:970D  CC 67 97              	call	z,getbit
      78.  00:9710  CB 10               	rl	b
      79.  00:9712  87                  mode6:	add	a,a
      80.  00:9713  CC 67 97              	call	z,getbit
      81.  00:9716  CB 10               	rl	b
      82.  00:9718  87                  mode5:  add	a,a
      83.  00:9719  CC 67 97              	call	z,getbit
      84.  00:971C  CB 10               	rl	b
      85.  00:971E  87                  mode4:  add	a,a
      86.  00:971F  CC 67 97              	call	z,getbit
      87.  00:9722  CB 10               	rl	b
      88.  00:9724  87                  mode3:  add	a,a
      89.  00:9725  CC 67 97              	call	z,getbit
      90.  00:9728  CB 10               	rl	b
      91.  00:972A  87                  mode2:	add	a,a
      92.  00:972B  CC 67 97              	call	z,getbit
      93.  00:972E  CB 10               	rl	b
      94.  00:9730  87                  	add	a,a
      95.  00:9731  CC 67 97              	call	z,getbit
      96.  00:9734  30 04               	jr	nc,offsok
      97.  00:9736  B7                  	or	a
      98.  00:9737  04                  	inc	b
      99.  00:9738  CB B9               	res	7,c
     100.  00:973A  03                  offsok: inc	bc
     101.  00:973B  E5                  	push	hl
     102.  00:973C  D9                  	exx
     103.  00:973D  E5                  	push	hl
     104.  00:973E  D9                  	exx
     105.  00:973F  6B                  	ld	l,e
     106.  00:9740  62                  	ld	h,d
     107.  00:9741  ED 42               	sbc	hl,bc
     108.  00:9743  C1                  	pop	bc
     109.  00:9744  F5                  	push	af
     110.  00:9745  7D                  .loop:	ld	a,l
     111.  00:9746  D3 99               	out	[099h],a
     112.  00:9748  7C                  	ld	a,h
     113.  00:9749  00                  	nop                     ; VDP timing
     114.  00:974A  D3 99               	out	[099h],a
     115.  00:974C  00                  	nop                     ; VDP timing
     116.  00:974D  DB 98               	in	a,[098h]
     117.  00:974F  08                  	ex	af,af'
     118.  00:9750  7B                  	ld	a,e
     119.  00:9751  00                  	nop			; VDP timing
     120.  00:9752  D3 99               	out	[099h],a
     121.  00:9754  7A                  	ld	a,d
     122.  00:9755  F6 40               	or	040h
     123.  00:9757  D3 99               	out	[099h],a
     124.  00:9759  08                  	ex	af,af'
     125.  00:975A  00                  	nop			; VDP timing
     126.  00:975B  D3 98               	out	[098h],a
     127.  00:975D  13                  	inc	de
     128.  00:975E  ED A1               	cpi
     129.  00:9760  EA 45 97            	jp	pe,.loop
     130.  00:9763  F1                  	pop	af
     131.  00:9764  E1                  	pop	hl
     132.  00:9765  FD E9               	jp	iy
     133.  00:9767                      
     134.  00:9767  7E                  getbit: ld	a,[hl]
     135.  00:9768  23                  	inc	hl
     136.  00:9769  17                  	rla
     137.  00:976A  C9                  	ret
     138.  00:976B                      
     139.  00:976B                      getbitexx:
     140.  00:976B  D9                  	exx
     141.  00:976C  7E                  	ld	a,[hl]
     142.  00:976D  23                  	inc	hl
     143.  00:976E  D9                  	exx
     144.  00:976F  17                  	rla
     145.  00:9770  C9                  	ret
     146.  00:9771                      
     147.  00:9771                      ; Depacker exit
     148.  00:9771                      Depack_out:
     149.  00:9771  FB                  	ei
     150.  00:9772  C9                  	ret
     151.  00:9773                      
     152.  00:9773                      modes:
     153.  00:9773  3A 97               	dw	offsok
     154.  00:9775  2A 97               	dw	mode2
     155.  00:9777  24 97               	dw	mode3
     156.  00:9779  1E 97               	dw	mode4
     157.  00:977B  18 97               	dw	mode5
     158.  00:977D  12 97               	dw	mode6
     159.  00:977F  0C 97               	dw	mode7
     124   00:9781                      
     125   00:9781                      
     126   00:9781                      	
     127   00:9781                      ;;=====================================================
     128   00:9781                      ;;DEFINICIÓN DE ESTRUCTURAS
     129   00:9781                      ;;=====================================================		
     130   00:9781                      	include "estructuras.asm"
       1.  00:9781                      ;;=====================================================
       2.  00:9781                      ;;DEFINICIÓN DE ESTRUCTURAS
       3.  00:9781                      ;;=====================================================
       4.  00:9781                      
       5.  00:9781                      ;crear estructura
       6.  00:9781                      
       7.  00:9781                      	STRUCT ESTRUCTURA_PUNTOMIRA
       8.  00:9781                    < posx			DB		100
       9.  00:9781                    < posy			DB		100
      10.  00:9781                    < escena			DB		0	;valores porsibles 0 (blanco+rojo en punto de mira) y NEG 0 (al revés)
      11.  00:9781                    < velocidad		DB		0
      12.  00:9781                    < boton2_pressed  DB		0
      13.  00:9781                    < cadencia		DB		5	;nº de veces que se ejecutará el disparo antes de ejecutar un disparo real (porque cuando se pulsa la tecl dispara 3 ó 4 veces de rápido que va)
      14.  00:9781                    < ; al final he decidido (ya que el punto de mira es el prota) que lo relacionado con el prota vaya en esta estructura
      15.  00:9781                    < pm_aux1			DB		0	;para llegar a los 16 campos
      16.  00:9781                    < pm_aux2			DB		0	;para llegar a los 16 campos
      17.  00:9781                    < pm_aux3			DB		0	;para llegar a los 16 campos
      18.  00:9781                    < pm_aux4			DB		0	;para llegar a los 16 campos
      19.  00:9781                    < pm_aux5			DB		0	;para llegar a los 16 campos
      20.  00:9781                    < pm_aux6			DB		0	;para llegar a los 16 campos
      21.  00:9781                    < pm_aux7			DB		0	;para llegar a los 16 campos
      22.  00:9781                    < pm_aux8			DB		0	;para llegar a los 16 campos
      23.  00:9781                    < pm_aux9			DB		0	;para llegar a los 16 campos
      24.  00:9781                    < pm_aux10		DB		0	;para llegar a los 16 campos
      25.  00:9781                    < 	ENDSTRUCT;ESTRUCTURA_PUNTOMIRA
      26.  00:9781                      
      27.  00:9781                      	
      28.  00:9781                      	STRUCT ESTRUCTURA_ENEMIGO
      29.  00:9781                    < tipo				DB		0	;(0 serpiente por ejemplo) #FF muerto o no existe
      30.  00:9781                    < posx				DB		5
      31.  00:9781                    < posy				DB		50
      32.  00:9781                    < color				DB		5
      33.  00:9781                    < escena				DB		0
      34.  00:9781                    < contador_siguiente_escena	DB	0
      35.  00:9781                    < reset_contador		DB		0
      36.  00:9781                    < dano				DB		0	;daño
      37.  00:9781                    < energia				DB		0	;energía del enemigo... si llega a 0 => existe <- 0
      38.  00:9781                    < ;indica el nº de sprite a mostrar y si está compuesto por uno o dos sprites y si están en horizontal o vertical
      39.  00:9781                    < ver_hor				DB		0
      40.  00:9781                    < manejador_dibujo 	DW		0
      41.  00:9781                    < en_aux3				DB		0
      42.  00:9781                    < en_aux4				DB		0
      43.  00:9781                    < 	ENDSTRUCT;ESTRUCTURA_ENEMIGO
      44.  00:9781                      	
      45.  00:9781                      	STRUCT ESTRUCTURA_EXTRA		;vidas extra, plantas de curación de energía, reliquias	
      46.  00:9781                    < tipo				DB		0	;#FF muerto/usado o no existe
      47.  00:9781                    < posx				DB		50
      48.  00:9781                    < posy				DB		50
      49.  00:9781                    < color				DB		5
      50.  00:9781                    < contador			DB		0	;por si doy dos reliquias en vez de una, por ejemplo
      51.  00:9781                    < en_aux1				DB		0	;para llegar a los 16 campos
      52.  00:9781                    < en_aux2				DB		0
      53.  00:9781                    < en_aux3				DB		0
      54.  00:9781                    < en_aux4				DB		0
      55.  00:9781                    < en_aux5				DB		0
      56.  00:9781                    < en_aux6				DB		0
      57.  00:9781                    < en_aux7				DB		0
      58.  00:9781                    < en_aux8				DB		0
      59.  00:9781                    < en_aux9				DB		0
      60.  00:9781                    < en_aux10			DB		0
      61.  00:9781                    < en_aux11			DB		0
      62.  00:9781                    < 	ENDSTRUCT;ESTRUCTURA_EXTRA
      63.  00:9781                      
      64.  00:9781                      
      65.  00:9781                      
      66.  00:9781                      
      67.  00:9781                      
      68.  00:9781                      
      69.  00:9781                      
     131   00:9781                      	
     132   00:9781                      ;;=====================================================
     133   00:9781                      ;;DEFINICIÓN DE VARIABLES
     134   00:9781                      ;;=====================================================		
     135   00:9781                      	include "sprites.asm"
       1.  00:9781                      ;;=====================================================
       2.  00:9781                      ;;DEFINICIÓN DE SPRITES
       3.  00:9781                      ;;=====================================================	
       4.  00:9781                      
       5.  00:9781                      
       6.  00:9781                      ;; NOTA:
       7.  00:9781                      ;~ sprite_reliquia_oracion: on/off
       8.  00:9781                      ;~ sprite_reliquia_cruz: on/off
       9.  00:9781                      ;~ sprite_reliquia_agua: on/off
      10.  00:9781                      ;~ sprite_peto: on/off
      11.  00:9781                      ;~ sprite_planta: on/off
      12.  00:9781                      ;~ sprite_vida_extra: on/off
      13.  00:9781                      ;~ sprite_ballesta_mejorada: on/off
      14.  00:9781                      
      15.  00:9781                      ;~ iban a ser sprites pero por falta de recursos serán tiles
      16.  00:9781                      
      17.  00:9781                      
      18.  00:9781                      sprites_pantantalla:
      19.  00:9781                      
      20.  00:9781                      ;; PARTE 1: SPRITES COMUNES
      21.  00:9781                      
      22.  00:9781                      sprites_comunes:
      23.  00:9781                      sprite_punto_mira_1:	;color 8
      24.  00:9781                      	db #FF,#FF,#C0,#C0,#C0,#C0,#C0,#C0
      24.  00:9781  FF FF C0 C0 C0 C0 C0 C0 
      25.  00:9789                      	db #C0,#C0,#C0,#C0,#C0,#C0,#FF,#FF
      25.  00:9789  C0 C0 C0 C0 C0 C0 FF FF 
      26.  00:9791                      	db #FF,#FF,#03,#03,#03,#03,#03,#03
      26.  00:9791  FF FF 03 03 03 03 03 03 
      27.  00:9799                      	db #03,#03,#03,#03,#03,#03,#FF,#FF
      27.  00:9799  03 03 03 03 03 03 FF FF 
      28.  00:97A1                      	
      29.  00:97A1                      sprite_punto_mira_2: 	;color 15
      30.  00:97A1                      	db #00,#00,#00,#00,#0F,#0F,#0C,#0C
      30.  00:97A1  00 00 00 00 0F 0F 0C 0C 
      31.  00:97A9                      	db #0C,#0C,#0F,#0F,#00,#00,#00,#00
      31.  00:97A9  0C 0C 0F 0F 00 00 00 00 
      32.  00:97B1                      	db #00,#00,#00,#00,#F0,#F0,#30,#30
      32.  00:97B1  00 00 00 00 F0 F0 30 30 
      33.  00:97B9                      	db #30,#30,#F0,#F0,#00,#00,#00,#00
      33.  00:97B9  30 30 F0 F0 00 00 00 00 
      34.  00:97C1                      	
      35.  00:97C1                      sprite_punto_mira_1_mejorado:
      36.  00:97C1                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      36.  00:97C1  FF FF FF FF FF FF FF FF 
      37.  00:97C9                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      37.  00:97C9  FF FF FF FF FF FF FF FF 
      38.  00:97D1                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      38.  00:97D1  FF FF FF FF FF FF FF FF 
      39.  00:97D9                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      39.  00:97D9  FF FF FF FF FF FF FF FF 
      40.  00:97E1                      
      41.  00:97E1                      sprite_punto_mira_2_mejorado:
      42.  00:97E1                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      42.  00:97E1  FF FF FF FF FF FF FF FF 
      43.  00:97E9                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      43.  00:97E9  FF FF FF FF FF FF FF FF 
      44.  00:97F1                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      44.  00:97F1  FF FF FF FF FF FF FF FF 
      45.  00:97F9                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      45.  00:97F9  FF FF FF FF FF FF FF FF 
      46.  00:9801                      	
      47.  00:9801                      sprite_explosion_1:
      48.  00:9801                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      48.  00:9801  FF FF FF FF FF FF FF FF 
      49.  00:9809                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      49.  00:9809  FF FF FF FF FF FF FF FF 
      50.  00:9811                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      50.  00:9811  FF FF FF FF FF FF FF FF 
      51.  00:9819                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF	
      51.  00:9819  FF FF FF FF FF FF FF FF 
      52.  00:9821                      
      53.  00:9821                      sprite_explosion_2:
      54.  00:9821                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      54.  00:9821  FF FF FF FF FF FF FF FF 
      55.  00:9829                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      55.  00:9829  FF FF FF FF FF FF FF FF 
      56.  00:9831                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      56.  00:9831  FF FF FF FF FF FF FF FF 
      57.  00:9839                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF	
      57.  00:9839  FF FF FF FF FF FF FF FF 
      58.  00:9841                      fin_sprites_comunes:
      59.  00:9841                      
      60.  00:9841                      ;; PARTE 2: SPRITES NO COMUNES
      61.  00:9841                      
      62.  00:9841                      ;; ARAÑA
      63.  00:9841                      	
      64.  00:9841                      sprite_arana1_1:
      65.  00:9841                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      65.  00:9841  FF FF FF FF FF FF FF FF 
      66.  00:9849                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      66.  00:9849  FF FF FF FF FF FF FF FF 
      67.  00:9851                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      67.  00:9851  FF FF FF FF FF FF FF FF 
      68.  00:9859                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      68.  00:9859  FF FF FF FF FF FF FF FF 
      69.  00:9861                      	
      70.  00:9861                      sprite_arana1_2:
      71.  00:9861                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      71.  00:9861  FF FF FF FF FF FF FF FF 
      72.  00:9869                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      72.  00:9869  FF FF FF FF FF FF FF FF 
      73.  00:9871                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      73.  00:9871  FF FF FF FF FF FF FF FF 
      74.  00:9879                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      74.  00:9879  FF FF FF FF FF FF FF FF 
      75.  00:9881                      
      76.  00:9881                      ;; MURCIELAGO
      77.  00:9881                      	
      78.  00:9881                      sprite_murcielago1_1:
      79.  00:9881                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      79.  00:9881  FF FF FF FF FF FF FF FF 
      80.  00:9889                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      80.  00:9889  FF FF FF FF FF FF FF FF 
      81.  00:9891                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      81.  00:9891  FF FF FF FF FF FF FF FF 
      82.  00:9899                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      82.  00:9899  FF FF FF FF FF FF FF FF 
      83.  00:98A1                      	
      84.  00:98A1                      sprite_murcielago1_2:
      85.  00:98A1                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      85.  00:98A1  FF FF FF FF FF FF FF FF 
      86.  00:98A9                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      86.  00:98A9  FF FF FF FF FF FF FF FF 
      87.  00:98B1                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      87.  00:98B1  FF FF FF FF FF FF FF FF 
      88.  00:98B9                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF	
      88.  00:98B9  FF FF FF FF FF FF FF FF 
      89.  00:98C1                      
      90.  00:98C1                      ;; SERPIENTE
      91.  00:98C1                      
      92.  00:98C1                      sprite_serpiente1_1:
      93.  00:98C1                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      93.  00:98C1  FF FF FF FF FF FF FF FF 
      94.  00:98C9                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      94.  00:98C9  FF FF FF FF FF FF FF FF 
      95.  00:98D1                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      95.  00:98D1  FF FF FF FF FF FF FF FF 
      96.  00:98D9                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      96.  00:98D9  FF FF FF FF FF FF FF FF 
      97.  00:98E1                      	
      98.  00:98E1                      sprite_serpiente1_2:
      99.  00:98E1                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      99.  00:98E1  FF FF FF FF FF FF FF FF 
     100.  00:98E9                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     100.  00:98E9  FF FF FF FF FF FF FF FF 
     101.  00:98F1                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     101.  00:98F1  FF FF FF FF FF FF FF FF 
     102.  00:98F9                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     102.  00:98F9  FF FF FF FF FF FF FF FF 
     103.  00:9901                      	
     104.  00:9901                      sprite_serpiente2_1:
     105.  00:9901                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     105.  00:9901  FF FF FF FF FF FF FF FF 
     106.  00:9909                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     106.  00:9909  FF FF FF FF FF FF FF FF 
     107.  00:9911                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     107.  00:9911  FF FF FF FF FF FF FF FF 
     108.  00:9919                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     108.  00:9919  FF FF FF FF FF FF FF FF 
     109.  00:9921                      	
     110.  00:9921                      sprite_serpiente2_2:
     111.  00:9921                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     111.  00:9921  FF FF FF FF FF FF FF FF 
     112.  00:9929                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     112.  00:9929  FF FF FF FF FF FF FF FF 
     113.  00:9931                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     113.  00:9931  FF FF FF FF FF FF FF FF 
     114.  00:9939                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     114.  00:9939  FF FF FF FF FF FF FF FF 
     115.  00:9941                      
     116.  00:9941                      ;; ZOMBI
     117.  00:9941                      
     118.  00:9941                      sprite_zombi1_1_1:
     119.  00:9941                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     119.  00:9941  FF FF FF FF FF FF FF FF 
     120.  00:9949                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     120.  00:9949  FF FF FF FF FF FF FF FF 
     121.  00:9951                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     121.  00:9951  FF FF FF FF FF FF FF FF 
     122.  00:9959                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     122.  00:9959  FF FF FF FF FF FF FF FF 
     123.  00:9961                      
     124.  00:9961                      sprite_zombi1_2_1:
     125.  00:9961                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     125.  00:9961  FF FF FF FF FF FF FF FF 
     126.  00:9969                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     126.  00:9969  FF FF FF FF FF FF FF FF 
     127.  00:9971                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     127.  00:9971  FF FF FF FF FF FF FF FF 
     128.  00:9979                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     128.  00:9979  FF FF FF FF FF FF FF FF 
     129.  00:9981                      	
     130.  00:9981                      sprite_zombi1_3_1:
     131.  00:9981                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     131.  00:9981  FF FF FF FF FF FF FF FF 
     132.  00:9989                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     132.  00:9989  FF FF FF FF FF FF FF FF 
     133.  00:9991                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     133.  00:9991  FF FF FF FF FF FF FF FF 
     134.  00:9999                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     134.  00:9999  FF FF FF FF FF FF FF FF 
     135.  00:99A1                      	
     136.  00:99A1                      sprite_zombi1_4_1:
     137.  00:99A1                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     137.  00:99A1  FF FF FF FF FF FF FF FF 
     138.  00:99A9                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     138.  00:99A9  FF FF FF FF FF FF FF FF 
     139.  00:99B1                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     139.  00:99B1  FF FF FF FF FF FF FF FF 
     140.  00:99B9                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     140.  00:99B9  FF FF FF FF FF FF FF FF 
     141.  00:99C1                      	
     142.  00:99C1                      sprite_zombi1_1_2:
     143.  00:99C1                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     143.  00:99C1  FF FF FF FF FF FF FF FF 
     144.  00:99C9                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     144.  00:99C9  FF FF FF FF FF FF FF FF 
     145.  00:99D1                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     145.  00:99D1  FF FF FF FF FF FF FF FF 
     146.  00:99D9                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     146.  00:99D9  FF FF FF FF FF FF FF FF 
     147.  00:99E1                      
     148.  00:99E1                      sprite_zombi1_2_2:
     149.  00:99E1                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     149.  00:99E1  FF FF FF FF FF FF FF FF 
     150.  00:99E9                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     150.  00:99E9  FF FF FF FF FF FF FF FF 
     151.  00:99F1                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     151.  00:99F1  FF FF FF FF FF FF FF FF 
     152.  00:99F9                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     152.  00:99F9  FF FF FF FF FF FF FF FF 
     153.  00:9A01                      	
     154.  00:9A01                      sprite_zombi1_3_2:
     155.  00:9A01                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     155.  00:9A01  FF FF FF FF FF FF FF FF 
     156.  00:9A09                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     156.  00:9A09  FF FF FF FF FF FF FF FF 
     157.  00:9A11                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     157.  00:9A11  FF FF FF FF FF FF FF FF 
     158.  00:9A19                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     158.  00:9A19  FF FF FF FF FF FF FF FF 
     159.  00:9A21                      	
     160.  00:9A21                      sprite_zombi1_4_2:
     161.  00:9A21                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     161.  00:9A21  FF FF FF FF FF FF FF FF 
     162.  00:9A29                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     162.  00:9A29  FF FF FF FF FF FF FF FF 
     163.  00:9A31                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     163.  00:9A31  FF FF FF FF FF FF FF FF 
     164.  00:9A39                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     164.  00:9A39  FF FF FF FF FF FF FF FF 
     165.  00:9A41                      	
     166.  00:9A41                      sprite_zombi2_1_1:
     167.  00:9A41                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     167.  00:9A41  FF FF FF FF FF FF FF FF 
     168.  00:9A49                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     168.  00:9A49  FF FF FF FF FF FF FF FF 
     169.  00:9A51                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     169.  00:9A51  FF FF FF FF FF FF FF FF 
     170.  00:9A59                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     170.  00:9A59  FF FF FF FF FF FF FF FF 
     171.  00:9A61                      
     172.  00:9A61                      sprite_zombi2_2_1:
     173.  00:9A61                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     173.  00:9A61  FF FF FF FF FF FF FF FF 
     174.  00:9A69                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     174.  00:9A69  FF FF FF FF FF FF FF FF 
     175.  00:9A71                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     175.  00:9A71  FF FF FF FF FF FF FF FF 
     176.  00:9A79                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     176.  00:9A79  FF FF FF FF FF FF FF FF 
     177.  00:9A81                      	
     178.  00:9A81                      sprite_zombi2_3_1:
     179.  00:9A81                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     179.  00:9A81  FF FF FF FF FF FF FF FF 
     180.  00:9A89                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     180.  00:9A89  FF FF FF FF FF FF FF FF 
     181.  00:9A91                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     181.  00:9A91  FF FF FF FF FF FF FF FF 
     182.  00:9A99                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     182.  00:9A99  FF FF FF FF FF FF FF FF 
     183.  00:9AA1                      	
     184.  00:9AA1                      sprite_zombi2_4_1:
     185.  00:9AA1                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     185.  00:9AA1  FF FF FF FF FF FF FF FF 
     186.  00:9AA9                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     186.  00:9AA9  FF FF FF FF FF FF FF FF 
     187.  00:9AB1                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     187.  00:9AB1  FF FF FF FF FF FF FF FF 
     188.  00:9AB9                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     188.  00:9AB9  FF FF FF FF FF FF FF FF 
     189.  00:9AC1                      	
     190.  00:9AC1                      sprite_zombi2_1_2:
     191.  00:9AC1                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     191.  00:9AC1  FF FF FF FF FF FF FF FF 
     192.  00:9AC9                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     192.  00:9AC9  FF FF FF FF FF FF FF FF 
     193.  00:9AD1                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     193.  00:9AD1  FF FF FF FF FF FF FF FF 
     194.  00:9AD9                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     194.  00:9AD9  FF FF FF FF FF FF FF FF 
     195.  00:9AE1                      
     196.  00:9AE1                      sprite_zombi2_2_2:
     197.  00:9AE1                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     197.  00:9AE1  FF FF FF FF FF FF FF FF 
     198.  00:9AE9                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     198.  00:9AE9  FF FF FF FF FF FF FF FF 
     199.  00:9AF1                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     199.  00:9AF1  FF FF FF FF FF FF FF FF 
     200.  00:9AF9                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     200.  00:9AF9  FF FF FF FF FF FF FF FF 
     201.  00:9B01                      	
     202.  00:9B01                      sprite_zombi2_3_2:
     203.  00:9B01                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     203.  00:9B01  FF FF FF FF FF FF FF FF 
     204.  00:9B09                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     204.  00:9B09  FF FF FF FF FF FF FF FF 
     205.  00:9B11                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     205.  00:9B11  FF FF FF FF FF FF FF FF 
     206.  00:9B19                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     206.  00:9B19  FF FF FF FF FF FF FF FF 
     207.  00:9B21                      	
     208.  00:9B21                      sprite_zombi2_4_2:
     209.  00:9B21                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     209.  00:9B21  FF FF FF FF FF FF FF FF 
     210.  00:9B29                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     210.  00:9B29  FF FF FF FF FF FF FF FF 
     211.  00:9B31                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     211.  00:9B31  FF FF FF FF FF FF FF FF 
     212.  00:9B39                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     212.  00:9B39  FF FF FF FF FF FF FF FF 
     213.  00:9B41                      	
     214.  00:9B41                      ;; CABALLERO
     215.  00:9B41                      
     216.  00:9B41                      sprite_caballero1_1_1:
     217.  00:9B41                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     217.  00:9B41  FF FF FF FF FF FF FF FF 
     218.  00:9B49                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     218.  00:9B49  FF FF FF FF FF FF FF FF 
     219.  00:9B51                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     219.  00:9B51  FF FF FF FF FF FF FF FF 
     220.  00:9B59                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     220.  00:9B59  FF FF FF FF FF FF FF FF 
     221.  00:9B61                      
     222.  00:9B61                      sprite_caballero1_2_1:
     223.  00:9B61                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     223.  00:9B61  FF FF FF FF FF FF FF FF 
     224.  00:9B69                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     224.  00:9B69  FF FF FF FF FF FF FF FF 
     225.  00:9B71                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     225.  00:9B71  FF FF FF FF FF FF FF FF 
     226.  00:9B79                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     226.  00:9B79  FF FF FF FF FF FF FF FF 
     227.  00:9B81                      	
     228.  00:9B81                      sprite_caballero1_3_1:
     229.  00:9B81                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     229.  00:9B81  FF FF FF FF FF FF FF FF 
     230.  00:9B89                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     230.  00:9B89  FF FF FF FF FF FF FF FF 
     231.  00:9B91                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     231.  00:9B91  FF FF FF FF FF FF FF FF 
     232.  00:9B99                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     232.  00:9B99  FF FF FF FF FF FF FF FF 
     233.  00:9BA1                      	
     234.  00:9BA1                      sprite_caballero1_4_1:
     235.  00:9BA1                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     235.  00:9BA1  FF FF FF FF FF FF FF FF 
     236.  00:9BA9                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     236.  00:9BA9  FF FF FF FF FF FF FF FF 
     237.  00:9BB1                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     237.  00:9BB1  FF FF FF FF FF FF FF FF 
     238.  00:9BB9                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     238.  00:9BB9  FF FF FF FF FF FF FF FF 
     239.  00:9BC1                      	
     240.  00:9BC1                      sprite_caballero1_1_2:
     241.  00:9BC1                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     241.  00:9BC1  FF FF FF FF FF FF FF FF 
     242.  00:9BC9                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     242.  00:9BC9  FF FF FF FF FF FF FF FF 
     243.  00:9BD1                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     243.  00:9BD1  FF FF FF FF FF FF FF FF 
     244.  00:9BD9                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     244.  00:9BD9  FF FF FF FF FF FF FF FF 
     245.  00:9BE1                      
     246.  00:9BE1                      sprite_caballero1_2_2:
     247.  00:9BE1                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     247.  00:9BE1  FF FF FF FF FF FF FF FF 
     248.  00:9BE9                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     248.  00:9BE9  FF FF FF FF FF FF FF FF 
     249.  00:9BF1                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     249.  00:9BF1  FF FF FF FF FF FF FF FF 
     250.  00:9BF9                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     250.  00:9BF9  FF FF FF FF FF FF FF FF 
     251.  00:9C01                      	
     252.  00:9C01                      sprite_caballero1_3_2:
     253.  00:9C01                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     253.  00:9C01  FF FF FF FF FF FF FF FF 
     254.  00:9C09                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     254.  00:9C09  FF FF FF FF FF FF FF FF 
     255.  00:9C11                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     255.  00:9C11  FF FF FF FF FF FF FF FF 
     256.  00:9C19                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     256.  00:9C19  FF FF FF FF FF FF FF FF 
     257.  00:9C21                      	
     258.  00:9C21                      sprite_caballero1_4_2:
     259.  00:9C21                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     259.  00:9C21  FF FF FF FF FF FF FF FF 
     260.  00:9C29                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     260.  00:9C29  FF FF FF FF FF FF FF FF 
     261.  00:9C31                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     261.  00:9C31  FF FF FF FF FF FF FF FF 
     262.  00:9C39                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     262.  00:9C39  FF FF FF FF FF FF FF FF 
     263.  00:9C41                      	
     264.  00:9C41                      sprite_caballero2_1_1:
     265.  00:9C41                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     265.  00:9C41  FF FF FF FF FF FF FF FF 
     266.  00:9C49                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     266.  00:9C49  FF FF FF FF FF FF FF FF 
     267.  00:9C51                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     267.  00:9C51  FF FF FF FF FF FF FF FF 
     268.  00:9C59                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     268.  00:9C59  FF FF FF FF FF FF FF FF 
     269.  00:9C61                      
     270.  00:9C61                      sprite_caballero2_2_1:
     271.  00:9C61                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     271.  00:9C61  FF FF FF FF FF FF FF FF 
     272.  00:9C69                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     272.  00:9C69  FF FF FF FF FF FF FF FF 
     273.  00:9C71                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     273.  00:9C71  FF FF FF FF FF FF FF FF 
     274.  00:9C79                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     274.  00:9C79  FF FF FF FF FF FF FF FF 
     275.  00:9C81                      	
     276.  00:9C81                      sprite_caballero2_3_1:
     277.  00:9C81                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     277.  00:9C81  FF FF FF FF FF FF FF FF 
     278.  00:9C89                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     278.  00:9C89  FF FF FF FF FF FF FF FF 
     279.  00:9C91                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     279.  00:9C91  FF FF FF FF FF FF FF FF 
     280.  00:9C99                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     280.  00:9C99  FF FF FF FF FF FF FF FF 
     281.  00:9CA1                      	
     282.  00:9CA1                      sprite_caballero2_4_1:
     283.  00:9CA1                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     283.  00:9CA1  FF FF FF FF FF FF FF FF 
     284.  00:9CA9                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     284.  00:9CA9  FF FF FF FF FF FF FF FF 
     285.  00:9CB1                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     285.  00:9CB1  FF FF FF FF FF FF FF FF 
     286.  00:9CB9                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     286.  00:9CB9  FF FF FF FF FF FF FF FF 
     287.  00:9CC1                      	
     288.  00:9CC1                      sprite_caballero2_1_2:
     289.  00:9CC1                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     289.  00:9CC1  FF FF FF FF FF FF FF FF 
     290.  00:9CC9                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     290.  00:9CC9  FF FF FF FF FF FF FF FF 
     291.  00:9CD1                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     291.  00:9CD1  FF FF FF FF FF FF FF FF 
     292.  00:9CD9                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     292.  00:9CD9  FF FF FF FF FF FF FF FF 
     293.  00:9CE1                      
     294.  00:9CE1                      sprite_caballero2_2_2:
     295.  00:9CE1                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     295.  00:9CE1  FF FF FF FF FF FF FF FF 
     296.  00:9CE9                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     296.  00:9CE9  FF FF FF FF FF FF FF FF 
     297.  00:9CF1                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     297.  00:9CF1  FF FF FF FF FF FF FF FF 
     298.  00:9CF9                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     298.  00:9CF9  FF FF FF FF FF FF FF FF 
     299.  00:9D01                      	
     300.  00:9D01                      sprite_caballero2_3_2:
     301.  00:9D01                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     301.  00:9D01  FF FF FF FF FF FF FF FF 
     302.  00:9D09                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     302.  00:9D09  FF FF FF FF FF FF FF FF 
     303.  00:9D11                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     303.  00:9D11  FF FF FF FF FF FF FF FF 
     304.  00:9D19                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     304.  00:9D19  FF FF FF FF FF FF FF FF 
     305.  00:9D21                      	
     306.  00:9D21                      sprite_caballero2_4_2:
     307.  00:9D21                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     307.  00:9D21  FF FF FF FF FF FF FF FF 
     308.  00:9D29                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     308.  00:9D29  FF FF FF FF FF FF FF FF 
     309.  00:9D31                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     309.  00:9D31  FF FF FF FF FF FF FF FF 
     310.  00:9D39                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     310.  00:9D39  FF FF FF FF FF FF FF FF 
     311.  00:9D41                      	
     312.  00:9D41                      ;; LLAMA
     313.  00:9D41                      
     314.  00:9D41                      sprite_llama1_1:	
     315.  00:9D41                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     315.  00:9D41  FF FF FF FF FF FF FF FF 
     316.  00:9D49                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     316.  00:9D49  FF FF FF FF FF FF FF FF 
     317.  00:9D51                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     317.  00:9D51  FF FF FF FF FF FF FF FF 
     318.  00:9D59                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     318.  00:9D59  FF FF FF FF FF FF FF FF 
     319.  00:9D61                      	
     320.  00:9D61                      sprite_llama2_1:	
     321.  00:9D61                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     321.  00:9D61  FF FF FF FF FF FF FF FF 
     322.  00:9D69                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     322.  00:9D69  FF FF FF FF FF FF FF FF 
     323.  00:9D71                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     323.  00:9D71  FF FF FF FF FF FF FF FF 
     324.  00:9D79                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF	
     324.  00:9D79  FF FF FF FF FF FF FF FF 
     325.  00:9D81                      	
     326.  00:9D81                      sprite_llama1_2:	
     327.  00:9D81                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     327.  00:9D81  FF FF FF FF FF FF FF FF 
     328.  00:9D89                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     328.  00:9D89  FF FF FF FF FF FF FF FF 
     329.  00:9D91                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     329.  00:9D91  FF FF FF FF FF FF FF FF 
     330.  00:9D99                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     330.  00:9D99  FF FF FF FF FF FF FF FF 
     331.  00:9DA1                      	
     332.  00:9DA1                      sprite_llama2_2:	
     333.  00:9DA1                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     333.  00:9DA1  FF FF FF FF FF FF FF FF 
     334.  00:9DA9                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     334.  00:9DA9  FF FF FF FF FF FF FF FF 
     335.  00:9DB1                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     335.  00:9DB1  FF FF FF FF FF FF FF FF 
     336.  00:9DB9                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF			
     336.  00:9DB9  FF FF FF FF FF FF FF FF 
     337.  00:9DC1                      	
     338.  00:9DC1                      ;; FANTASMA
     339.  00:9DC1                      
     340.  00:9DC1                      sprite_fantasma1_1:
     341.  00:9DC1                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     341.  00:9DC1  FF FF FF FF FF FF FF FF 
     342.  00:9DC9                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     342.  00:9DC9  FF FF FF FF FF FF FF FF 
     343.  00:9DD1                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     343.  00:9DD1  FF FF FF FF FF FF FF FF 
     344.  00:9DD9                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     344.  00:9DD9  FF FF FF FF FF FF FF FF 
     345.  00:9DE1                      
     346.  00:9DE1                      sprite_fantasma2_1:
     347.  00:9DE1                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     347.  00:9DE1  FF FF FF FF FF FF FF FF 
     348.  00:9DE9                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     348.  00:9DE9  FF FF FF FF FF FF FF FF 
     349.  00:9DF1                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     349.  00:9DF1  FF FF FF FF FF FF FF FF 
     350.  00:9DF9                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     350.  00:9DF9  FF FF FF FF FF FF FF FF 
     351.  00:9E01                      
     352.  00:9E01                      sprite_fantasma1_2:
     353.  00:9E01                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     353.  00:9E01  FF FF FF FF FF FF FF FF 
     354.  00:9E09                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     354.  00:9E09  FF FF FF FF FF FF FF FF 
     355.  00:9E11                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     355.  00:9E11  FF FF FF FF FF FF FF FF 
     356.  00:9E19                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     356.  00:9E19  FF FF FF FF FF FF FF FF 
     357.  00:9E21                      
     358.  00:9E21                      sprite_fantasma2_2:
     359.  00:9E21                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     359.  00:9E21  FF FF FF FF FF FF FF FF 
     360.  00:9E29                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     360.  00:9E29  FF FF FF FF FF FF FF FF 
     361.  00:9E31                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     361.  00:9E31  FF FF FF FF FF FF FF FF 
     362.  00:9E39                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF	
     362.  00:9E39  FF FF FF FF FF FF FF FF 
     363.  00:9E41                      	
     364.  00:9E41                      ;; MAGIA
     365.  00:9E41                      
     366.  00:9E41                      sprite_magia1_1:
     367.  00:9E41                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     367.  00:9E41  FF FF FF FF FF FF FF FF 
     368.  00:9E49                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     368.  00:9E49  FF FF FF FF FF FF FF FF 
     369.  00:9E51                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     369.  00:9E51  FF FF FF FF FF FF FF FF 
     370.  00:9E59                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     370.  00:9E59  FF FF FF FF FF FF FF FF 
     371.  00:9E61                      
     372.  00:9E61                      sprite_magia2_1:
     373.  00:9E61                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     373.  00:9E61  FF FF FF FF FF FF FF FF 
     374.  00:9E69                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     374.  00:9E69  FF FF FF FF FF FF FF FF 
     375.  00:9E71                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     375.  00:9E71  FF FF FF FF FF FF FF FF 
     376.  00:9E79                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     376.  00:9E79  FF FF FF FF FF FF FF FF 
     377.  00:9E81                      
     378.  00:9E81                      sprite_magia1_2:
     379.  00:9E81                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     379.  00:9E81  FF FF FF FF FF FF FF FF 
     380.  00:9E89                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     380.  00:9E89  FF FF FF FF FF FF FF FF 
     381.  00:9E91                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     381.  00:9E91  FF FF FF FF FF FF FF FF 
     382.  00:9E99                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     382.  00:9E99  FF FF FF FF FF FF FF FF 
     383.  00:9EA1                      
     384.  00:9EA1                      sprite_magia2_2:
     385.  00:9EA1                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     385.  00:9EA1  FF FF FF FF FF FF FF FF 
     386.  00:9EA9                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     386.  00:9EA9  FF FF FF FF FF FF FF FF 
     387.  00:9EB1                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     387.  00:9EB1  FF FF FF FF FF FF FF FF 
     388.  00:9EB9                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF	
     388.  00:9EB9  FF FF FF FF FF FF FF FF 
     389.  00:9EC1                      	
     390.  00:9EC1                      	
     391.  00:9EC1                      ;; BEHOLDER
     392.  00:9EC1                      
     393.  00:9EC1                      sprite_beholder1_1:
     394.  00:9EC1                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     394.  00:9EC1  FF FF FF FF FF FF FF FF 
     395.  00:9EC9                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     395.  00:9EC9  FF FF FF FF FF FF FF FF 
     396.  00:9ED1                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     396.  00:9ED1  FF FF FF FF FF FF FF FF 
     397.  00:9ED9                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     397.  00:9ED9  FF FF FF FF FF FF FF FF 
     398.  00:9EE1                      
     399.  00:9EE1                      sprite_beholder2_1:
     400.  00:9EE1                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     400.  00:9EE1  FF FF FF FF FF FF FF FF 
     401.  00:9EE9                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     401.  00:9EE9  FF FF FF FF FF FF FF FF 
     402.  00:9EF1                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     402.  00:9EF1  FF FF FF FF FF FF FF FF 
     403.  00:9EF9                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     403.  00:9EF9  FF FF FF FF FF FF FF FF 
     404.  00:9F01                      
     405.  00:9F01                      sprite_beholder3_1:
     406.  00:9F01                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     406.  00:9F01  FF FF FF FF FF FF FF FF 
     407.  00:9F09                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     407.  00:9F09  FF FF FF FF FF FF FF FF 
     408.  00:9F11                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     408.  00:9F11  FF FF FF FF FF FF FF FF 
     409.  00:9F19                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     409.  00:9F19  FF FF FF FF FF FF FF FF 
     410.  00:9F21                      
     411.  00:9F21                      sprite_beholder4_1:
     412.  00:9F21                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     412.  00:9F21  FF FF FF FF FF FF FF FF 
     413.  00:9F29                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     413.  00:9F29  FF FF FF FF FF FF FF FF 
     414.  00:9F31                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     414.  00:9F31  FF FF FF FF FF FF FF FF 
     415.  00:9F39                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF	
     415.  00:9F39  FF FF FF FF FF FF FF FF 
     416.  00:9F41                      	
     417.  00:9F41                      sprite_beholder1_2:
     418.  00:9F41                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     418.  00:9F41  FF FF FF FF FF FF FF FF 
     419.  00:9F49                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     419.  00:9F49  FF FF FF FF FF FF FF FF 
     420.  00:9F51                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     420.  00:9F51  FF FF FF FF FF FF FF FF 
     421.  00:9F59                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     421.  00:9F59  FF FF FF FF FF FF FF FF 
     422.  00:9F61                      
     423.  00:9F61                      sprite_beholder2_2:
     424.  00:9F61                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     424.  00:9F61  FF FF FF FF FF FF FF FF 
     425.  00:9F69                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     425.  00:9F69  FF FF FF FF FF FF FF FF 
     426.  00:9F71                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     426.  00:9F71  FF FF FF FF FF FF FF FF 
     427.  00:9F79                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     427.  00:9F79  FF FF FF FF FF FF FF FF 
     428.  00:9F81                      
     429.  00:9F81                      sprite_beholder3_2:
     430.  00:9F81                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     430.  00:9F81  FF FF FF FF FF FF FF FF 
     431.  00:9F89                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     431.  00:9F89  FF FF FF FF FF FF FF FF 
     432.  00:9F91                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     432.  00:9F91  FF FF FF FF FF FF FF FF 
     433.  00:9F99                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     433.  00:9F99  FF FF FF FF FF FF FF FF 
     434.  00:9FA1                      
     435.  00:9FA1                      sprite_beholder4_2:
     436.  00:9FA1                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     436.  00:9FA1  FF FF FF FF FF FF FF FF 
     437.  00:9FA9                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     437.  00:9FA9  FF FF FF FF FF FF FF FF 
     438.  00:9FB1                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     438.  00:9FB1  FF FF FF FF FF FF FF FF 
     439.  00:9FB9                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF		
     439.  00:9FB9  FF FF FF FF FF FF FF FF 
     440.  00:9FC1                      	
     441.  00:9FC1                      ;; VAMPIRO
     442.  00:9FC1                      
     443.  00:9FC1                      sprite_vampiro1_1:
     444.  00:9FC1                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     444.  00:9FC1  FF FF FF FF FF FF FF FF 
     445.  00:9FC9                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     445.  00:9FC9  FF FF FF FF FF FF FF FF 
     446.  00:9FD1                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     446.  00:9FD1  FF FF FF FF FF FF FF FF 
     447.  00:9FD9                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     447.  00:9FD9  FF FF FF FF FF FF FF FF 
     448.  00:9FE1                      
     449.  00:9FE1                      sprite_vampiro2_1:
     450.  00:9FE1                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     450.  00:9FE1  FF FF FF FF FF FF FF FF 
     451.  00:9FE9                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     451.  00:9FE9  FF FF FF FF FF FF FF FF 
     452.  00:9FF1                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     452.  00:9FF1  FF FF FF FF FF FF FF FF 
     453.  00:9FF9                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     453.  00:9FF9  FF FF FF FF FF FF FF FF 
     454.  00:A001                      
     455.  00:A001                      sprite_vampiro1_2:
     456.  00:A001                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     456.  00:A001  FF FF FF FF FF FF FF FF 
     457.  00:A009                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     457.  00:A009  FF FF FF FF FF FF FF FF 
     458.  00:A011                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     458.  00:A011  FF FF FF FF FF FF FF FF 
     459.  00:A019                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     459.  00:A019  FF FF FF FF FF FF FF FF 
     460.  00:A021                      
     461.  00:A021                      sprite_vampiro2_2:
     462.  00:A021                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     462.  00:A021  FF FF FF FF FF FF FF FF 
     463.  00:A029                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     463.  00:A029  FF FF FF FF FF FF FF FF 
     464.  00:A031                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     464.  00:A031  FF FF FF FF FF FF FF FF 
     465.  00:A039                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     465.  00:A039  FF FF FF FF FF FF FF FF 
     466.  00:A041                      	
     467.  00:A041                      ;; MANOIZQ
     468.  00:A041                      
     469.  00:A041                      sprite_manoizq1:
     470.  00:A041                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     470.  00:A041  FF FF FF FF FF FF FF FF 
     471.  00:A049                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     471.  00:A049  FF FF FF FF FF FF FF FF 
     472.  00:A051                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     472.  00:A051  FF FF FF FF FF FF FF FF 
     473.  00:A059                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     473.  00:A059  FF FF FF FF FF FF FF FF 
     474.  00:A061                      	
     475.  00:A061                      sprite_manoizq2:
     476.  00:A061                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     476.  00:A061  FF FF FF FF FF FF FF FF 
     477.  00:A069                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     477.  00:A069  FF FF FF FF FF FF FF FF 
     478.  00:A071                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     478.  00:A071  FF FF FF FF FF FF FF FF 
     479.  00:A079                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     479.  00:A079  FF FF FF FF FF FF FF FF 
     480.  00:A081                      	
     481.  00:A081                      sprite_manoizq3:
     482.  00:A081                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     482.  00:A081  FF FF FF FF FF FF FF FF 
     483.  00:A089                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     483.  00:A089  FF FF FF FF FF FF FF FF 
     484.  00:A091                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     484.  00:A091  FF FF FF FF FF FF FF FF 
     485.  00:A099                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF	
     485.  00:A099  FF FF FF FF FF FF FF FF 
     486.  00:A0A1                      	
     487.  00:A0A1                      ;; MANODER
     488.  00:A0A1                      
     489.  00:A0A1                      sprite_manoder1:
     490.  00:A0A1                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     490.  00:A0A1  FF FF FF FF FF FF FF FF 
     491.  00:A0A9                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     491.  00:A0A9  FF FF FF FF FF FF FF FF 
     492.  00:A0B1                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     492.  00:A0B1  FF FF FF FF FF FF FF FF 
     493.  00:A0B9                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     493.  00:A0B9  FF FF FF FF FF FF FF FF 
     494.  00:A0C1                      	
     495.  00:A0C1                      sprite_manoder2:
     496.  00:A0C1                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     496.  00:A0C1  FF FF FF FF FF FF FF FF 
     497.  00:A0C9                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     497.  00:A0C9  FF FF FF FF FF FF FF FF 
     498.  00:A0D1                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     498.  00:A0D1  FF FF FF FF FF FF FF FF 
     499.  00:A0D9                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     499.  00:A0D9  FF FF FF FF FF FF FF FF 
     500.  00:A0E1                      	
     501.  00:A0E1                      sprite_manoder3:
     502.  00:A0E1                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     502.  00:A0E1  FF FF FF FF FF FF FF FF 
     503.  00:A0E9                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     503.  00:A0E9  FF FF FF FF FF FF FF FF 
     504.  00:A0F1                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     504.  00:A0F1  FF FF FF FF FF FF FF FF 
     505.  00:A0F9                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF		
     505.  00:A0F9  FF FF FF FF FF FF FF FF 
     506.  00:A101                      	
     507.  00:A101                      	
     508.  00:A101                      	
     509.  00:A101                      	
     510.  00:A101                      	
     511.  00:A101                      	
     512.  00:A101                      	
     513.  00:A101                      	
     514.  00:A101                      	
     515.  00:A101                      	
     516.  00:A101                      	
     517.  00:A101                      	
     518.  00:A101                      	
     519.  00:A101                      	
     520.  00:A101                      	
     521.  00:A101                      	
     522.  00:A101                      	
     523.  00:A101                      	
     524.  00:A101                      	
     525.  00:A101                      	
     526.  00:A101                      	
     527.  00:A101                      	
     528.  00:A101                      	
     136   00:A101                      	
     137   00:A101                      	include "habitaciones.asm"
       1.  00:A101                      ;;=====================================================
       2.  00:A101                      ;;DEFINICIÓN DE HABITACIONES x NIVEL
       3.  00:A101                      ;;=====================================================	
       4.  00:A101                      
       5.  00:A101                      ; sólo voy a usar 7x7 pero como los arrays son lineales y voy a trabajar con matrices
       6.  00:A101                      ; me interesa que seande  8x8 aunque sólo trabaje con 7x7
       7.  00:A101                      
       8.  00:A101                      ; ojo... la primera linea corresponderá a la primera linea del castillo no a la última
       9.  00:A101                      
      10.  00:A101                      ;; definición de estructura de bits
      11.  00:A101                      ;16 bits por habitación
      12.  00:A101                      ;~ 0000 - nº puertas 1 arriba 1 derecha 1 abajo 1 izquierda
      13.  00:A101                      ;~ 1 - hay reliquia?
      14.  00:A101                      ;~ 1 - hay vida extra
      15.  00:A101                      ;~ 1 - hay arma extra (durará 6 pantallas - sonido distinto)
      16.  00:A101                      ;~ 1 - hay energía? (sobran bits ... se puede usar otro como carga energía +)
      17.  00:A101                      ;~ 1 - es pantalla de mostruo fin de fase?
      18.  00:A101                      ;~ 1 - es pantalla inicial (equivaldría a la puerta de un castillo)?
      19.  00:A101                      ;~ 1 - es pantalla final?
      20.  00:A101                      
      21.  00:A101                      
      22.  00:A101                      ;importante: el byte de la columna 15 indicará con 1 y 0 habitaciones por las que se haya pasado
      23.  00:A101                      ;cuando se inicie la partida todos se pondrán a 0
      24.  00:A101                      
      25.  00:A101                      habitacion_actual:
      26.  00:A101  00 00               	db  #00,#00		;habitación donde se encuentre el prota. Se mete en una varible par traer todos los datos de golpe y no buscrlos varias veces
      27.  00:A103                      
      28.  00:A103                      habitaciones_juego:
      29.  00:A103                      habitaciones_nivel0:
      30.  00:A103                      	db  00000000b,#00,00000001b,#01,00000010b,#02,00000011b,#03,00001000b,#04,00001001b,#05,00001100b,#06,#FF,#00 ;primera fila
      30.  00:A103  00 00 01 01 02 02 03 03 08 04 09 05 0C 06 FF 00 
      31.  00:A113                      	db  #17,#10,#11,#11,#12,#12,#13,#13,#14,#14,#15,#15,#16,#16,#FF,#00
      31.  00:A113  17 10 11 11 12 12 13 13 14 14 15 15 16 16 FF 00 
      32.  00:A123                      	db  #20,#20,#21,#21,#22,#22,#23,#23,#24,#24,#25,#25,#26,#26,#FF,#00
      32.  00:A123  20 20 21 21 22 22 23 23 24 24 25 25 26 26 FF 00 
      33.  00:A133                      	db  #30,#30,#31,#31,#32,#32,#33,#33,#34,#34,#35,#35,#36,#36,#FF,#00
      33.  00:A133  30 30 31 31 32 32 33 33 34 34 35 35 36 36 FF 00 
      34.  00:A143                      	db  00000000b,#00,00000001b,#01,00001111b,#02,00000011b,#03,00001000b,#04,00001001b,#05,00001100b,#06,#FF,#00
      34.  00:A143  00 00 01 01 0F 02 03 03 08 04 09 05 0C 06 FF 00 
      35.  00:A153                      	db  #50,#50,#51,#51,#52,#52,#53,#53,#54,#54,#55,#55,#56,#56,#FF,#00
      35.  00:A153  50 50 51 51 52 52 53 53 54 54 55 55 56 56 FF 00 
      36.  00:A163                      	db  00000000b,#00,00000001b,#01,00001111b,#02,00000011b,#03,00001000b,#04,00001001b,#05,00001100b,#06,#FF,#00	;ultima fila
      36.  00:A163  00 00 01 01 0F 02 03 03 08 04 09 05 0C 06 FF 00 
      37.  00:A173                      	
      38.  00:A173                      habitaciones_nivel1:
      39.  00:A173                      	db  00000000b,#00,00000001b,#01,00000010b,#02,00000011b,#03,00001000b,#04,00001001b,#05,00001100b,#06,#FF,#00 ;primera fila
      39.  00:A173  00 00 01 01 02 02 03 03 08 04 09 05 0C 06 FF 00 
      40.  00:A183                      	db  #17,#10,#11,#11,#12,#12,#13,#13,#14,#14,#15,#15,#16,#16,#FF,#00
      40.  00:A183  17 10 11 11 12 12 13 13 14 14 15 15 16 16 FF 00 
      41.  00:A193                      	db  #20,#20,#21,#21,#22,#22,#23,#23,#24,#24,#25,#25,#26,#26,#FF,#00
      41.  00:A193  20 20 21 21 22 22 23 23 24 24 25 25 26 26 FF 00 
      42.  00:A1A3                      	db  #30,#30,#31,#31,#32,#32,#33,#33,#34,#34,#35,#35,#36,#36,#FF,#00
      42.  00:A1A3  30 30 31 31 32 32 33 33 34 34 35 35 36 36 FF 00 
      43.  00:A1B3                      	db  00000000b,#00,00000001b,#01,00001111b,#02,00000011b,#03,00001000b,#04,00001001b,#05,00001100b,#06,#FF,#00
      43.  00:A1B3  00 00 01 01 0F 02 03 03 08 04 09 05 0C 06 FF 00 
      44.  00:A1C3                      	db  #50,#50,#51,#51,#52,#52,#53,#53,#54,#54,#55,#55,#56,#56,#FF,#00
      44.  00:A1C3  50 50 51 51 52 52 53 53 54 54 55 55 56 56 FF 00 
      45.  00:A1D3                      	db  00000000b,#00,00000001b,#01,00000010b,#02,00000011b,#03,00001000b,#04,00001001b,#05,00001100b,#06,#FF,#00	;ultima fila
      45.  00:A1D3  00 00 01 01 02 02 03 03 08 04 09 05 0C 06 FF 00 
      46.  00:A1E3                      	
      47.  00:A1E3                      habitaciones_nivel2:
      48.  00:A1E3                      	db  00000000b,#00,00000001b,#01,00000010b,#02,00000011b,#03,00001000b,#04,00001001b,#05,00001100b,#06,#FF,#00 ;primera fila
      48.  00:A1E3  00 00 01 01 02 02 03 03 08 04 09 05 0C 06 FF 00 
      49.  00:A1F3                      	db  #17,#10,#11,#11,#12,#12,#13,#13,#14,#14,#15,#15,#16,#16,#FF,#00
      49.  00:A1F3  17 10 11 11 12 12 13 13 14 14 15 15 16 16 FF 00 
      50.  00:A203                      	db  #20,#20,#21,#21,#22,#22,#23,#23,#24,#24,#25,#25,#26,#26,#FF,#00
      50.  00:A203  20 20 21 21 22 22 23 23 24 24 25 25 26 26 FF 00 
      51.  00:A213                      	db  #30,#30,#31,#31,#32,#32,#33,#33,#34,#34,#35,#35,#36,#36,#FF,#00
      51.  00:A213  30 30 31 31 32 32 33 33 34 34 35 35 36 36 FF 00 
      52.  00:A223                      	db  00000000b,#00,00000001b,#01,00001111b,#02,00000011b,#03,00001000b,#04,00001001b,#05,00001100b,#06,#FF,#00
      52.  00:A223  00 00 01 01 0F 02 03 03 08 04 09 05 0C 06 FF 00 
      53.  00:A233                      	db  #50,#50,#51,#51,#52,#52,#53,#53,#54,#54,#55,#55,#56,#56,#FF,#00
      53.  00:A233  50 50 51 51 52 52 53 53 54 54 55 55 56 56 FF 00 
      54.  00:A243                      	db  00000000b,#00,00000001b,#01,00000010b,#02,00000011b,#03,00001000b,#04,00001001b,#05,00001100b,#06,#FF,#00	;ultima fila
      54.  00:A243  00 00 01 01 02 02 03 03 08 04 09 05 0C 06 FF 00 
      55.  00:A253                      	
      56.  00:A253                      habitaciones_nivel3:
      57.  00:A253                      	db  00000000b,#00,00000001b,#01,00000010b,#02,00000011b,#03,00001000b,#04,00001001b,#05,00001100b,#06,#FF,#00 ;primera fila
      57.  00:A253  00 00 01 01 02 02 03 03 08 04 09 05 0C 06 FF 00 
      58.  00:A263                      	db  #17,#10,#11,#11,#12,#12,#13,#13,#14,#14,#15,#15,#16,#16,#FF,#00
      58.  00:A263  17 10 11 11 12 12 13 13 14 14 15 15 16 16 FF 00 
      59.  00:A273                      	db  #20,#20,#21,#21,#22,#22,#23,#23,#24,#24,#25,#25,#26,#26,#FF,#00
      59.  00:A273  20 20 21 21 22 22 23 23 24 24 25 25 26 26 FF 00 
      60.  00:A283                      	db  #30,#30,#31,#31,#32,#32,#33,#33,#34,#34,#35,#35,#36,#36,#FF,#00
      60.  00:A283  30 30 31 31 32 32 33 33 34 34 35 35 36 36 FF 00 
      61.  00:A293                      	db  00000000b,#00,00000001b,#01,00001111b,#02,00000011b,#03,00001000b,#04,00001001b,#05,00001100b,#06,#FF,#00
      61.  00:A293  00 00 01 01 0F 02 03 03 08 04 09 05 0C 06 FF 00 
      62.  00:A2A3                      	db  #50,#50,#51,#51,#52,#52,#53,#53,#54,#54,#55,#55,#56,#56,#FF,#00
      62.  00:A2A3  50 50 51 51 52 52 53 53 54 54 55 55 56 56 FF 00 
      63.  00:A2B3                      	db  00000000b,#00,00000001b,#01,00000010b,#02,00000011b,#03,00001000b,#04,00001001b,#05,00001100b,#06,#FF,#00	;ultima fila
      63.  00:A2B3  00 00 01 01 02 02 03 03 08 04 09 05 0C 06 FF 00 
      64.  00:A2C3                      	
      65.  00:A2C3                      habitaciones_nivel4:
      66.  00:A2C3                      	db  00000001b,#00,00000001b,#01,00000010b,#02,00000011b,#03,00001000b,#04,00001001b,#05,00001100b,#06,#FF,#00 ;primera fila
      66.  00:A2C3  01 00 01 01 02 02 03 03 08 04 09 05 0C 06 FF 00 
      67.  00:A2D3                      	db  #17,#10,#11,#11,#12,#12,#13,#13,#14,#14,#15,#15,#16,#16,#FF,#00
      67.  00:A2D3  17 10 11 11 12 12 13 13 14 14 15 15 16 16 FF 00 
      68.  00:A2E3                      	db  #20,#20,#21,#21,#22,#22,#23,#23,#24,#24,#25,#25,#26,#26,#FF,#00
      68.  00:A2E3  20 20 21 21 22 22 23 23 24 24 25 25 26 26 FF 00 
      69.  00:A2F3                      	db  #30,#30,#31,#31,#32,#32,#33,#33,#34,#34,#35,#35,#36,#36,#FF,#00
      69.  00:A2F3  30 30 31 31 32 32 33 33 34 34 35 35 36 36 FF 00 
      70.  00:A303                      	db  00000000b,#00,00000001b,#01,00001111b,#02,00000011b,#03,00001000b,#04,00001001b,#05,00001100b,#06,#FF,#00
      70.  00:A303  00 00 01 01 0F 02 03 03 08 04 09 05 0C 06 FF 00 
      71.  00:A313                      	db  #50,#50,#51,#51,#52,#52,#53,#53,#54,#54,#55,#55,#56,#56,#FF,#00
      71.  00:A313  50 50 51 51 52 52 53 53 54 54 55 55 56 56 FF 00 
      72.  00:A323                      	db  00000000b,#00,00000001b,#01,00001111b,#02,00000011b,#03,00001000b,#04,00001001b,#05,00001100b,#06,#FF,#00	;ultima fila
      72.  00:A323  00 00 01 01 0F 02 03 03 08 04 09 05 0C 06 FF 00 
      73.  00:A333                      	
      74.  00:A333                      habitaciones_nivel5:
      75.  00:A333                      	db  00000000b,#00,00000001b,#01,00000010b,#02,00000011b,#03,00001000b,#04,00001001b,#05,00001100b,#06,#FF,#00 ;primera fila
      75.  00:A333  00 00 01 01 02 02 03 03 08 04 09 05 0C 06 FF 00 
      76.  00:A343                      	db  #17,#10,#11,#11,#12,#12,#13,#13,#14,#14,#15,#15,#16,#16,#FF,#00
      76.  00:A343  17 10 11 11 12 12 13 13 14 14 15 15 16 16 FF 00 
      77.  00:A353                      	db  #20,#20,#21,#21,#22,#22,#23,#23,#24,#24,#25,#25,#26,#26,#FF,#00
      77.  00:A353  20 20 21 21 22 22 23 23 24 24 25 25 26 26 FF 00 
      78.  00:A363                      	db  #30,#30,#31,#31,#32,#32,#33,#33,#34,#34,#35,#35,#36,#36,#FF,#00
      78.  00:A363  30 30 31 31 32 32 33 33 34 34 35 35 36 36 FF 00 
      79.  00:A373                      	db  00000000b,#00,00000001b,#01,00001111b,#02,00000011b,#03,00001000b,#04,00001001b,#05,00001100b,#06,#FF,#00
      79.  00:A373  00 00 01 01 0F 02 03 03 08 04 09 05 0C 06 FF 00 
      80.  00:A383                      	db  #50,#50,#51,#51,#52,#52,#53,#53,#54,#54,#55,#55,#56,#56,#FF,#00
      80.  00:A383  50 50 51 51 52 52 53 53 54 54 55 55 56 56 FF 00 
      81.  00:A393                      	db  00000000b,#00,00000001b,#01,00001010b,#02,00000011b,#03,00001000b,#04,00001001b,#05,00001100b,#06,#FF,#00	;ultima fila
      81.  00:A393  00 00 01 01 0A 02 03 03 08 04 09 05 0C 06 FF 00 
      82.  00:A3A3                      	
      83.  00:A3A3                      habitaciones_nivel6:
      84.  00:A3A3                      	db  00000000b,#00,00000001b,#01,00000010b,#02,00000011b,#03,00001000b,#04,00001001b,#05,00001100b,#06,#FF,#00 ;primera fila
      84.  00:A3A3  00 00 01 01 02 02 03 03 08 04 09 05 0C 06 FF 00 
      85.  00:A3B3                      	db  #17,#10,#11,#11,#12,#12,#13,#13,#14,#14,#15,#15,#16,#16,#FF,#00
      85.  00:A3B3  17 10 11 11 12 12 13 13 14 14 15 15 16 16 FF 00 
      86.  00:A3C3                      	db  #20,#20,#21,#21,#22,#22,#23,#23,#24,#24,#25,#25,#26,#26,#FF,#00
      86.  00:A3C3  20 20 21 21 22 22 23 23 24 24 25 25 26 26 FF 00 
      87.  00:A3D3                      	db  #30,#30,#31,#31,#32,#32,#33,#33,#34,#34,#35,#35,#36,#36,#FF,#00
      87.  00:A3D3  30 30 31 31 32 32 33 33 34 34 35 35 36 36 FF 00 
      88.  00:A3E3                      	db  00000000b,#00,00000001b,#01,00001111b,#02,00000011b,#03,00001000b,#04,00001001b,#05,00001100b,#06,#FF,#00
      88.  00:A3E3  00 00 01 01 0F 02 03 03 08 04 09 05 0C 06 FF 00 
      89.  00:A3F3                      	db  #50,#50,#51,#51,#52,#52,#53,#53,#54,#54,#55,#55,#56,#56,#FF,#00
      89.  00:A3F3  50 50 51 51 52 52 53 53 54 54 55 55 56 56 FF 00 
      90.  00:A403                      	db  00000000b,#00,00000001b,#01,00000010b,#02,00000011b,#03,00001000b,#04,00001001b,#05,00001100b,#06,#FF,#00	;ultima fila
      90.  00:A403  00 00 01 01 02 02 03 03 08 04 09 05 0C 06 FF 00 
      91.  00:A413                      
      92.  00:A413                      
      93.  00:A413                      
     138   00:A413                      	
     139   00:A413                      	include "variables.asm"
       1.  00:A413                      ;;=====================================================
       2.  00:A413                      ;;DEFINICIÓN DE VARIABLES
       3.  00:A413                      ;;=====================================================
       4.  00:A413                      
       5.  00:A413                      ;Colores base de la pantalla
       6.  00:A413                      color_base:
       7.  00:A413  01 01 01            			DB		COLNEGRO,COLNEGRO,COLNEGRO	
       8.  00:A416                      ;colores de pantalla cuando se tira bomba
       9.  00:A416                      color_bomba1:
      10.  00:A416  08 08 08            			DB		COLROJO,COLROJO,COLROJO
      11.  00:A419                      color_bomba2:
      12.  00:A419  06 06 06            			DB		COLROJOOSC,COLROJOOSC,COLROJOOSC
      13.  00:A41C                      
      14.  00:A41C                      ;definicion de variable del prota usando la estructura del punto de mira
      15.  00:A41C                      prota:		ESTRUCTURA_PUNTOMIRA
      15.  00:A41C  64 64 00 00 00 05 00 00 00 00 00 00 00 00 00 00 
      16.  00:A42C                      ;variables globales del prota
      17.  00:A42C                      prota_nivel:			;nivel del castillo donde está 0-6
      18.  00:A42C  00                  			DB		0
      19.  00:A42D                      prota_vidas:
      20.  00:A42D  00                  			DB		0
      21.  00:A42E                      prota_reliquias:
      22.  00:A42E  03                  			DB		3
      23.  00:A42F                      prota_pos_mapx:
      24.  00:A42F  00                  			DB		0	;pos columna
      25.  00:A430                      prota_pos_mapy:
      26.  00:A430  00                  			DB		0	;pos fila
      27.  00:A431                      prota_energia:
      28.  00:A431  FA                  			DB		250
      29.  00:A432                      
      30.  00:A432                      ;array para pintar de golpe el marcador de vidas
      31.  00:A432                      array_aux_vidas: 		
      32.  00:A432                      			DB		0,0,0,0,0,0,0,0
      32.  00:A432  00 00 00 00 00 00 00 00 
      33.  00:A43A                      
      34.  00:A43A                      ;array para pintar de golpe el marcador de reliquias
      35.  00:A43A                      array_aux_reliquias:	
      36.  00:A43A                      			DB		0,0,0,0,0,0,0,0
      36.  00:A43A  00 00 00 00 00 00 00 00 
      37.  00:A442                      
      38.  00:A442                      array_aux_energia:					;array para pintar de golpe el marcador de energía
      39.  00:A442                      			DB		16,0,0,0,0,0,0 	;el 16 primero es porque siempre estará pintado el cuadro primero rojo
      39.  00:A442  10 00 00 00 00 00 00 
      40.  00:A449                      ultimo_pos_array_aux_energia:
      41.  00:A449  00                  			DB		0				;el array completo es de 8 pero para posicionar sin niecesidad de cálculos  etiqueto este aparte
      42.  00:A44A                      			
      43.  00:A44A                      array_aux_mapa_limpiar:	;es por facilitar el reseteo del mapa (pinto 7 lineas en negro con bios) la otra opción es más larga en código y complicada aunque más rápida
      44.  00:A44A                      			DB		0,0,0,0,0,0,0
      44.  00:A44A  00 00 00 00 00 00 00 
      45.  00:A451                      elemento_pintar_mapa:
      46.  00:A451  00                  			DB		0	;TILEPROTAM = 19, ;TILEGRISM = 9
      47.  00:A452                      			
      48.  00:A452                      ;; nota importante: cada vez que se cambie de nivel se actualizará el contenido
      49.  00:A452                      ;; arrays con mapa de tiles de las puertas
      50.  00:A452                      array_puerta_arriba:
      51.  00:A452  03 01 01 03         array_puerta_arriba1:		DB	3,1,1,3
      52.  00:A456  01 01 01 01         array_puerta_arriba2:		DB	1,1,1,1
      53.  00:A45A  01 01 01 01         array_puerta_arriba3:		DB	1,1,1,1
      54.  00:A45E  01 01 01 01         array_puerta_arriba4:		DB	1,1,1,1
      55.  00:A462  01 01 01 01         array_puerta_arriba5:		DB	1,1,1,1
      56.  00:A466                      
      57.  00:A466                      array_puerta_derecha:
      58.  00:A466  01 03 03            array_puerta_derecha1:		DB	1,3,3
      59.  00:A469  01 01 03            array_puerta_derecha2:		DB	1,1,3
      60.  00:A46C  01 01 01            array_puerta_derecha3:		DB	1,1,1
      61.  00:A46F  01 01 01            array_puerta_derecha4:		DB	1,1,1
      62.  00:A472  01 01 01            array_puerta_derecha5:		DB	1,1,1
      63.  00:A475  02 01 01            array_puerta_derecha6:		DB	2,1,1
      64.  00:A478  04 02 01            array_puerta_derecha7:		DB	4,2,1
      65.  00:A47B                      	
      66.  00:A47B  01 01 01 01         array_puerta_abajo:			DB	1,1,1,1
      67.  00:A47F                      
      68.  00:A47F                      array_puerta_izquierda:
      69.  00:A47F  03 03 01            array_puerta_izquierda1:	DB	3,3,1
      70.  00:A482  03 01 01            array_puerta_izquierda2:	DB	3,1,1
      71.  00:A485  01 01 01            array_puerta_izquierda3:	DB	1,1,1
      72.  00:A488  01 01 01            array_puerta_izquierda4:	DB	1,1,1
      73.  00:A48B  01 01 01            array_puerta_izquierda5:	DB	1,1,1
      74.  00:A48E  01 01 02            array_puerta_izquierda6:	DB	1,1,2
      75.  00:A491  01 02 04            array_puerta_izquierda7:	DB	1,2,4
      76.  00:A494                      
      77.  00:A494                      ;array con posiciones pseudoaleatorias de ayudas y extras (qué valor se escogerá con R 0-127 + and 00001111)
      78.  00:A494                      pos_ayudas:					DB	0,4,18,23,45,69,73,82,90,152,171,180,190,192,198,208
      78.  00:A494  00 04 12 17 2D 45 49 52 5A 98 AB B4 BE C0 C6 D0 
      79.  00:A4A4                      
      80.  00:A4A4                      
      81.  00:A4A4                      ;array de 4 bytes x 32 sprites posibles en pantalla que sobreescribirá la tabla de sprites actualizando VRAM
      82.  00:A4A4                      array_sprites:
      83.  00:A4A4  00 (8)              array_sprites_pm:				DS	2 * 4
      84.  00:A4AC  00 (120)            array_sprites_enem:				DS	30 * 4
      85.  00:A524  00 (140)            lista_enemigos:					DS	10 * ESTRUCTURA_ENEMIGO
      86.  00:A5B0                      ; puntero al array a pintar en VRAM
      87.  00:A5B0  00 00               puntero_array_atrib_array_VRAM: DW	0	;ARRAYSPTRIES + 8
      88.  00:A5B2                      
      89.  00:A5B2                      
     140   00:A5B2                      	
     141   00:A5B2                      ;;=====================================================
     142   00:A5B2                      ;;DEFINICIÓN DE PANTALLAS
     143   00:A5B2                      ;;=====================================================		
     144   00:A5B2                      	include "pantallas.asm"
       1.  00:A5B2                      ;;=====================================================
       2.  00:A5B2                      ;;DEFINICIÓN DE PANTALLAS
       3.  00:A5B2                      ;;=====================================================		
       4.  00:A5B2                      
       5.  00:A5B2                      ; bancos 1 y 2 y de pantalla 1 
       6.  00:A5B2                      ; se usa un banco común (en este caso el banco 1)
       7.  00:A5B2                      ; el mapa afecta al banco 1 y 2
       8.  00:A5B2  (01B5)              tiles_patrones_nivel0:	incbin "pantallas/nivel0.bank1.til.bin.chr.plet5"
       9.  00:A767  (0047)              tiles_color_nivel0:		incbin "pantallas/nivel0.bank1.til.bin.clr.plet5"
      10.  00:A7AE  (0035)              tiles_mapa_nivel0:		incbin "pantallas/nivel0.bank01.map.bin.plet5"
      11.  00:A7E3                      
      12.  00:A7E3  (01B5)              tiles_patrones_nivel1:	incbin "pantallas/nivel1.bank1.til.bin.chr.plet5"
      13.  00:A998  (0047)              tiles_color_nivel1:		incbin "pantallas/nivel1.bank1.til.bin.clr.plet5"
      14.  00:A9DF  (0035)              tiles_mapa_nivel1:		incbin "pantallas/nivel1.bank01.map.bin.plet5"
      15.  00:AA14                      
      16.  00:AA14  (01B5)              tiles_patrones_nivel2:	incbin "pantallas/nivel2.bank1.til.bin.chr.plet5"
      17.  00:ABC9  (0047)              tiles_color_nivel2:		incbin "pantallas/nivel2.bank1.til.bin.clr.plet5"
      18.  00:AC10  (0035)              tiles_mapa_nivel2:		incbin "pantallas/nivel2.bank01.map.bin.plet5"
      19.  00:AC45                      
      20.  00:AC45  (01B5)              tiles_patrones_nivel3:	incbin "pantallas/nivel3.bank1.til.bin.chr.plet5"
      21.  00:ADFA  (0047)              tiles_color_nivel3:		incbin "pantallas/nivel3.bank1.til.bin.clr.plet5"
      22.  00:AE41  (0035)              tiles_mapa_nivel3:		incbin "pantallas/nivel3.bank01.map.bin.plet5"
      23.  00:AE76                      
      24.  00:AE76  (01B5)              tiles_patrones_nivel4:	incbin "pantallas/nivel4.bank1.til.bin.chr.plet5"
      25.  00:B02B  (0047)              tiles_color_nivel4:		incbin "pantallas/nivel4.bank1.til.bin.clr.plet5"
      26.  00:B072  (0035)              tiles_mapa_nivel4:		incbin "pantallas/nivel4.bank01.map.bin.plet5"
      27.  00:B0A7                      
      28.  00:B0A7  (01B5)              tiles_patrones_nivel5:	incbin "pantallas/nivel5.bank1.til.bin.chr.plet5"
      29.  00:B25C  (0047)              tiles_color_nivel5:		incbin "pantallas/nivel5.bank1.til.bin.clr.plet5"
      30.  00:B2A3  (0035)              tiles_mapa_nivel5:		incbin "pantallas/nivel5.bank01.map.bin.plet5"
      31.  00:B2D8                      
      32.  00:B2D8  (01B5)              tiles_patrones_nivel6:	incbin "pantallas/nivel6.bank1.til.bin.chr.plet5"
      33.  00:B48D  (0047)              tiles_color_nivel6:		incbin "pantallas/nivel6.bank1.til.bin.clr.plet5"
      34.  00:B4D4  (0035)              tiles_mapa_nivel6:		incbin "pantallas/nivel6.bank01.map.bin.plet5"
      35.  00:B509                      
      36.  00:B509                      ; 3º banco que es la parte de puntos, vidas, mapas, etc... es común
      37.  00:B509  (014C)              tiles_patrones_marcador:	incbin "pantallas/marcador.til.bin.chr.plet5"
      38.  00:B655  (0035)              tiles_color_marcador:		incbin "pantallas/marcador.til.bin.clr.plet5"
      39.  00:B68A  (0062)              tiles_mapa_marcador:		incbin "pantallas/marcador.map.bin.plet5"
      40.  00:B6EC                      
      41.  00:B6EC                      ;NOTA: FALTARÍAN PANTALLAS ESPECIALES (POR DEFINIR)
     145   00:B6EC                      
     146   00:B6EC                      
     147   00:B6EC                      	
     148   00:B6EC                      END:

    LABELS
-------------------------------------------------
00:000000D8 X GTTRIG
00:000000D5 X GTSTCK
00:0000F3DB   CLIKSW
00:0000013E X RDVDP
00:00000047   WRTVDP
00:0000005C   LDIRVM
00:00000059 X LDIRMV
00:0000005F   CHGMOD
00:00000041 X DISSCR
00:00000044 X ENASCR
00:00000062   CHGCLR
00:0000F3E9   FORCLR
00:0000F3EA   BAKCLR
00:0000F3EB   BDRCLR
00:000000C3   CLS
00:0000F3DF X RG0SAV
00:0000F3E0   RG1SAV
00:0000F3E1 X RG2SAV
00:0000F3E2 X RG3SAV
00:0000F3E3 X RG4SAV
00:0000F3E4 X RG5SAV
00:0000F3E5 X RG6SAV
00:0000F3E6 X RG7SAV
00:0000F3E7 X STATFL
00:00000099   REGEST
00:00000098   REGESCVDP
00:000000A0   PSG_A
00:000000A1   PSG_W
00:000000A2   PSG_R
00:00000000   CHRTBL
00:00001800   TILMAP
00:00001B00   SPRART
00:00002000   CLRTBL
00:00003800   SPRTBL
00:00000001 X SI
00:00000000 X NO
00:00000004   LIMCADENCIA
00:00000000 X COLTRASP
00:00000001   COLNEGRO
00:00000002 X COLVERDE
00:00000003 X COLVERCLA
00:00000004 X COLAZULOSC
00:00000005 X COLAZULLA
00:00000006   COLROJOOSC
00:00000007 X COLCYAN
00:00000008   COLROJO
00:00000009 X COLROJOCLA
00:0000000A X COLAMAROSC
00:0000000B X COLAMARCLA
00:0000000C X COLVERDOSC
00:0000000D X COLMAGENTA
00:0000000E X COLGRIS
00:0000000F   COLBLANCO
00:000002F8   POSMAPLIN1
00:000002D8   POSMAPLIN2
00:000002B8   POSMAPLIN3
00:00000298   POSMAPLIN4
00:00000278   POSMAPLIN5
00:00000258   POSMAPLIN6
00:00000238   POSMAPLIN7
00:0000000D   POSCARAMAP
00:00000248   POSVIDAS
00:00000011   POSRELIMAP
00:000002C8   POSRELIQ
00:00000288   POSENERG
00:000002B4   POSNIVEL
00:00000238   POSMAPA
00:000001EE   POSPUERABAJ
00:0000008E   POSPUERARRI
00:000000FC   POSPUERDERE
00:000000E1   POSPUERIZQU
00:000000C8   ORACIONON
00:000000CC X ORACIONOFF
00:000000D0 X CRUZON
00:000000D4 X CRUZOFF
00:000000D8 X AGUAON
00:000000DC X AGUAOFF
00:000000E0 X ARMADON
00:000000E4 X ARMADOFF
00:000000E8 X PLANTAON
00:000000EC X PLANTAOFF
00:000000F0 X VIDAEXTON
00:000000F4 X VIDAEXTOFF
00:000000F8 X BALLESON
00:000000FC X BALLESOFF
00:00000013   TILEPROTAM
00:00000009   TILEGRISM
00:00000010   TILEMAPROJO
00:0000000F   TILEMAPAMAR
00:0000000E   TILEMAPVERD
00:00000008   NMAXVIDREL
00:00000007   NHABNIVEL
00:000000F8 X MAXENERGIA
00:000000D9   TILEENERG8
00:000000BA   TILEENERG7
00:0000009B   TILEENERG6
00:0000007C   TILEENERG5
00:0000005D   TILEENERG4
00:0000003E   TILEENERG3
00:0000001F   TILEENERG2
00:00000000   TILENEGRO
00:00000000 X LIMPANTIZQ
00:000000FF   LIMPANTDER
00:00000000 X LIMPANTARR
00:00000080   LIMPANTABA
00:00000006 X BASEMAPY
00:00000003 X BASEMAPX
00:0000FD9A X H.KEYI
00:0000FD9F   H.TIMI
00:0000F000   PT3_SETUP
00:0000F001   PT3_MODADDR
00:0000F003   PT3_CrPsPtr
00:0000F005   PT3_SAMPTRS
00:0000F007   PT3_OrnPtrs
00:0000F009   PT3_PDSP
00:0000F00B   PT3_CSP
00:0000F00D   PT3_PSP
00:0000F00F   PT3_PrNote
00:0000F010   PT3_PrSlide
00:0000F012   PT3_AdInPtA
00:0000F014   PT3_AdInPtB
00:0000F016   PT3_AdInPtC
00:0000F018   PT3_LPosPtr
00:0000F01A   PT3_PatsPtr
00:0000F01C   PT3_Delay
00:0000F01D   PT3_AddToEn
00:0000F01E   PT3_Env_Del
00:0000F01F   PT3_ESldAdd
00:0000F021   PT3_NTL3
00:0000F023   VARS
00:0000F023   ChanA
00:0000F040   ChanB
00:0000F05D   ChanC
00:0000F07A   DelyCnt
00:0000F07B   CurESld
00:0000F07D   CurEDel
00:0000F07E   Ns_Base_AddToNs
00:0000F07E   Ns_Base
00:0000F07F   AddToNs
00:0000F080   NT_
00:0000F140   AYREGS
00:0000F140   VT_
00:0000F14E   EnvBase
00:0000F150   VAR0END
00:0000F150   T1_
00:0000F150   T_NEW_1
00:0000F150   T_OLD_1
00:0000F168   T_OLD_2
00:0000F180   T_NEW_3
00:0000F180   T_OLD_3
00:0000F182   T_OLD_0
00:0000F182   T_NEW_0
00:0000F19A   T_NEW_2
00:0000F240   ayFX_MODE
00:0000F241   ayFX_BANK
00:0000F243   ayFX_PRIORITY
00:0000F244   ayFX_POINTER
00:0000F246   ayFX_TONE
00:0000F248   ayFX_NOISE
00:0000F249   ayFX_VOLUME
00:0000F24A   ayFX_CHANNEL
00:00008000   START
00:00008029   loop_principal
00:00008036 X fin_programa_principal
00:00008036   inicializa_variables_pruebas
00:00008058 X fin_inicializa_variables_pruebas
00:00008059   inicializa_niveles
00:00008068   inicializa_niveles.bucle_borra_hab
00:0000806D X fin_iniciliza_niveles
00:0000806E   actualiza_marcador_vidas
00:00008073   loop_marcador_caras_negro
00:00008078 X fin_loop_marcador_caras_negro
00:00008081   loop_marcador_caras
00:00008086 X fin_loop_marcador_caras
00:00008086 X fin_actualiza_marcador_vidas
00:00008087   actualiza_buffer_reliquias
00:0000808D   loop_buffer_reliquias_negro
00:0000809A   loop_buffer_reliquias
00:0000809F X fin_actualiza_buffer_reliquias
00:000080A0   localiza_info_habitacion
00:000080A3 X localiza_info_habitacion.situo_columna
00:000080AC X localiza_info_habitacion.situo_fila
00:000080B5   localiza_info_habitacion.loop_suma_fila
00:000080BD   localiza_info_habitacion.situo_nivel
00:000080CC   localiza_info_habitacion.loop_suma_nivel
00:000080D1   localiza_info_habitacion.actualiza_valiable_habitacion
00:000080D5 X fin_localiza_info_habitacion
00:000080D6   color_pantalla
00:000080E7 X fin_color_pantalla
00:000080E7   sub_preparapantalla
00:000080E7 X elimina_clic
00:000080EB X fin_elimina_clic
00:000080EB X limpia_pantalla
00:000080EF X fin_limpia_pantalla
00:000080F5 X screen2
00:000080FA X sprites_16_16
00:00008108 X fin_sub_preparapantalla
00:00008108   pinta_pantalla_completa
00:0000810E X fin_pinta_pantalla_completa
00:0000810F   pinta_parte_superior_pantalla
00:00008140   pinta_parte_superior_pantalla.carga_nivel_0
00:0000815B   pinta_parte_superior_pantalla.carga_nivel_1
00:00008176   pinta_parte_superior_pantalla.carga_nivel_2
00:00008191   pinta_parte_superior_pantalla.carga_nivel_3
00:000081AC   pinta_parte_superior_pantalla.carga_nivel_4
00:000081C7   pinta_parte_superior_pantalla.carga_nivel_5
00:000081E2   pinta_parte_superior_pantalla.carga_nivel_6
00:000081FA   pinta_parte_superior_pantalla.fin_carga_niveles
00:00008227 X fin_pinta_parte_superior_pantalla
00:00008227   tiles_patrones
00:00008229   tiles_colores
00:0000822B   tiles_mapa
00:0000822D   pinta_parte_inferior_pantalla
00:00008248 X fin_pinta_parte_inferior_pantalla
00:00008248   pinta_vidas
00:00008257 X fin_pinta_vidas
00:00008257   pinta_reliquias
00:00008266 X fin_pinta_reliquias
00:00008266   pinta_nivel
00:00008272 X fin_pinta_nivel
00:00008272   pinta_tile_suelto
00:0000827F X fin_pinta_tile_suelto
00:00008280   mira_pinta_energia
00:00008286 X pinta_ener
00:00008286 X pinta_ener_tile_8
00:00008292   pinta_ener_tile_8_negro
00:00008293   pinta_ener_tile_7
00:0000829D   pinta_ener_tile_7_negro
00:0000829E   pinta_ener_tile_6
00:000082A8   pinta_ener_tile_6_negro
00:000082A9   pinta_ener_tile_5
00:000082B3   pinta_ener_tile_5_negro
00:000082B4   pinta_ener_tile_4
00:000082BE   pinta_ener_tile_4_negro
00:000082BF   pinta_ener_tile_3
00:000082C9   pinta_ener_tile_3_negro
00:000082CA   pinta_ener_tile_2
00:000082D4   pinta_ener_tile_2_negro
00:000082D5   fin_mira_pinta_energia
00:000082D7   pinta_energia
00:000082E6 X fin_pinta_energia
00:000082E6   borra_mapa
00:0000833C X fin_borra_mapa
00:0000833D   pinta_array
00:0000834B   pinta_array.pa_pinta_fila
00:0000834C   pinta_array.pa_pinta_columnas
00:0000836F X fin_pinta_array
00:00008370   wordaux1
00:00008372   wordaux2
00:00008374   pinta_puertas
00:00008391 X fin_pinta_puertas
00:00008392   pinta_puerta_aba
00:000083A7 X fin_pinta_puerta_aba
00:000083A7   pinta_puerta_arr
00:000083BC X fin_pinta_puerta_arr
00:000083BC   pinta_puerta_der
00:000083D1 X fin_pinta_puerta_der
00:000083D1   pinta_puerta_izq
00:000083E6 X fin_pinta_puerta_izq
00:000083E6   posiciona_en_mapa
00:000083E9 X posiciona_en_mapa.sumar_fila
00:00008413 X posiciona_en_mapa.fila_0
00:0000841A   posiciona_en_mapa.fila_1
00:00008421   posiciona_en_mapa.fila_2
00:00008428   posiciona_en_mapa.fila_3
00:0000842F   posiciona_en_mapa.fila_4
00:00008436   posiciona_en_mapa.fila_5
00:0000843D X posiciona_en_mapa.fila_6
00:0000843D   posiciona_en_mapa.sumar_columna
00:00008453   pinta_pos_mapa_vacio
00:00008455   fin_pinta_pos_mapa
00:00008458 X fin_posiciona_en_mapa
00:00008458   efecto_imagen_tira_reliquia
00:0000845B   efecto_imagen_tira_reliquia.parpadea_fondo
00:00008472 X fin_efecto_imagen_tira_reliquia
00:00008472   pinta_obj_ayuda
00:00008481 X fin_pinta_obj_ayuda
00:00008481   carga_patrones_sprites_nivel
00:0000848B X fin_carga_patrones_sprites_nivel
00:0000848C   carga_patrones_nivel_comunes
00:00008498 X fin_carga_patrones_nivel_comunes
00:00008498   carga_patrones_sprites_nivel1
00:00008498 X fin_carga_patrones_sprites
00:00008499   render_sprites
00:000084A5 X fin_actualiza_array_sprites_vram
00:000084A5   vuelca_resultado_puntomira_array
00:000084CA X vuelca_resultado_puntomira_array.codigo_color_1
00:000084D3   vuelca_resultado_puntomira_array.codigo_color_2
00:000084DC X fin_vuelca_resultado_puntomira_array
00:000084DC   check_player
00:000084FB X f
00:000084FC   mueve_arriba
00:00008507   mueve_arriba.no_decrementa_y
00:00008508 X fin_mueve_arriba
00:00008509   mueve_derecha
00:00008516   mueve_derecha.no_incrementa_x
00:00008517 X fin_mueve_derecha
00:00008518   mueve_abajo
00:00008525   mueve_abajo.no_incrementa_y
00:00008526 X fin_mueve_abajo
00:00008527   mueve_izquierda
00:00008532   mueve_izquierda.no_decrementa_x
00:00008533 X fin_mueve_izquierda
00:00008534   mira_disparo
00:00008534 X mira_disparo.mira_boton_pulsado1
00:00008541 X mira_disparo.no_efectua_disparo
00:0000854C   mira_disparo.efectua_disparo
00:0000855E   mira_disparo.fin_mira_disparo1
00:0000855F   mira_disparo.mira_boton_pulsado2
00:0000857B X fin_mira_disparo
00:0000857B   update_controllers_status
00:000085B2   read_joy_0
00:000085C6   check_8th_keyboard_row
00:000085D4   check_4th_keyboard_row
00:000085E2 X inicializa_replayer_efectos_interrupciones
00:000085FB X fin_inicializa_replayer_efectos_interrupciones
00:000085FC   subrutina_isr
00:00008605 X fin_subrutina_isr
00:00008605 X subrutinas_sonido
00:00000000   CHNPRM_PsInOr
00:00000001   CHNPRM_PsInSm
00:00000002   CHNPRM_CrAmSl
00:00000003   CHNPRM_CrNsSl
00:00000004   CHNPRM_CrEnSl
00:00000005   CHNPRM_TSlCnt
00:00000006   CHNPRM_CrTnSl
00:00000008   CHNPRM_TnAcc
00:0000000A   CHNPRM_COnOff
00:0000000B   CHNPRM_OnOffD
00:0000000C   CHNPRM_OffOnD
00:0000000D   CHNPRM_OrnPtr
00:0000000F   CHNPRM_SamPtr
00:00000011   CHNPRM_NNtSkp
00:00000012   CHNPRM_Note
00:00000013   CHNPRM_SlToNt
00:00000014   CHNPRM_Env_En
00:00000015   CHNPRM_Flags
00:00000016   CHNPRM_TnSlDl
00:00000017   CHNPRM_TSlStp
00:00000019   CHNPRM_TnDelt
00:0000001B   CHNPRM_NtSkCn
00:0000001C   CHNPRM_Volume
00:0000001D X CHNPRM_Size
00:00000000   AR_TonA
00:00000002   AR_TonB
00:00000004   AR_TonC
00:00000006   AR_Noise
00:00000007   AR_Mixer
00:00000008   AR_AmplA
00:00000009   AR_AmplB
00:0000000A   AR_AmplC
00:0000000B   AR_Env
00:0000000D   AR_EnvTp
00:00008605   CHECKLP
00:00008616 X PT3_MUTE
00:00008622   PT3_INIT
00:00008661   PT3_INIT.TP_0
00:0000866D   PT3_INIT.TP_1
00:00008674   PT3_INIT.TP_2
00:000086E2   PT3_INIT.L1
00:000086EF   PT3_INIT.L2
00:000086F3 X PT3_INIT.L3
00:0000871A   PT3_INIT.CORR_1
00:00008728   PT3_INIT.CORR_2
00:0000872F   PT3_INIT.TC_EXIT
00:0000873A   PT3_INIT.INITV1
00:00008742   PT3_INIT.INITV2
00:00008756   PT3_INIT.INITV3
00:0000875A   PD_OrSm
00:00008764   PD_SAM
00:00008765   PD_SAM_
00:0000877B   PD_VOL
00:00008784   PD_EOff
00:0000878C   PD_SorE
00:00008796   PD_ENV
00:0000879B   PD_ORN
00:000087A0   PD_ESAM
00:000087AD   PTDECOD
00:000087BC   PD_LOOP
00:000087BF   PD_LP2
00:000087EC   PD_NOIS
00:000087F1   PD_REL
00:000087F7   PD_NOTE
00:000087FF   PD_RES
00:00008811   PD_FIN
00:00008818   C_PORTM
00:00008863   C_PORTM.NOSIG
00:0000886D   SET_STP
00:00008879   C_GLISS
00:0000888C   C_SMPOS
00:00008892   C_ORPOS
00:00008898   C_VIBRT
00:000088B0   C_ENGLS
00:000088C2   C_DELAY
00:000088C8   SETENV
00:000088E3   C_NOP
00:000088E4   SETORN
00:000088FD   SPCCOMS
00:0000891D   CHREGS
00:00008940   CHREGS.CH_ORPS
00:0000894B   CHREGS.CH_NTP
00:00008951   CHREGS.CH_NOK
00:0000896C   CHREGS.CH_SMPS
00:00008982   CHREGS.CH_NOAC
00:000089C9   CHREGS.CH_STPP
00:000089DE   CHREGS.CH_AMP
00:000089F0   CHREGS.CH_AMIN
00:000089F5   CHREGS.CH_SVAM
00:000089F8   CHREGS.CH_NOAM
00:00008A01   CHREGS.CH_APOS
00:00008A07   CHREGS.CH_VOL
00:00008A12 X CHREGS.CH_ENV
00:00008A19   CHREGS.CH_NOEN
00:00008A33   CHREGS.NO_ENAC
00:00008A3A   CHREGS.NO_ENSL
00:00008A48   CHREGS.CH_MIX
00:00008A4C   CHREGS.CH_EXIT
00:00008A6B   CHREGS.CH_ONDL
00:00008A6F   PT3_PLAY
00:00008AA3   PT3_PLAY.PLNLP
00:00008ACA   PT3_PLAY.PL1A
00:00008AD5   PT3_PLAY.PL1B
00:00008AEA   PT3_PLAY.PL1C
00:00008AFF   PT3_PLAY.PL1D
00:00008B05   PT3_PLAY.PL2
00:00008B67   PT3_ROUT
00:00008B68   ROUT_A0
00:00008B74   ROUT_A0.LOUT
00:00008B88   NT_DATA
00:00008B98   T_
00:00008B98   TCOLD_0
00:00008BA4   TCNEW_1
00:00008BA4   TCOLD_1
00:00008BA6   TCOLD_2
00:00008BB8   TCNEW_3
00:00008BB9   TCOLD_3
00:00008BC2   TCNEW_0
00:00008BCD   TCNEW_2
00:00008BD8   EMPTYSAMORN
00:00008BDC   T_PACK
00:00000000 X AYFXRELATIVE
00:00008C11   ayFX_SETUP
00:00008C1D   ayFX_END
00:00008C23   ayFX_INIT
00:00008C34   ayFX_INIT.CHECK_PRI
00:00008C55   ayFX_INIT.INIT_END
00:00008C59   ayFX_PLAY
00:00008C6D   ayFX_PLAY.TAKECB
00:00008C7E   ayFX_PLAY.CHECK_NN
00:00008C8B   ayFX_PLAY.SETPOINTER
00:00008C9F   ayFX_PLAY.SETMASKS
00:00008CAD X ayFX_PLAY.CHK1
00:00008CAF X ayFX_PLAY.PLAY_C
00:00008CBC   ayFX_PLAY.CHK2
00:00008CC1 X ayFX_PLAY.PLAY_B
00:00008CCE   ayFX_PLAY.CHK3
00:00008CD1 X ayFX_PLAY.PLAY_A
00:00008CDE   ayFX_PLAY.SETMIXER
00:00008CEE   song
00:00009656   sfx_bank
00:000096A1   depack_VRAM
00:000096CE   literal
00:000096D3   loop
00:000096DC X getlen
00:000096E2   lus
00:000096FF   lenok
00:0000970C   mode7
00:00009712   mode6
00:00009718   mode5
00:0000971E   mode4
00:00009724   mode3
00:0000972A   mode2
00:0000973A   offsok
00:00009745   offsok.loop
00:00009767   getbit
00:0000976B   getbitexx
00:00009771   Depack_out
00:00009773   modes
00:00000000 X ESTRUCTURA_PUNTOMIRA.posx
00:00000001 X ESTRUCTURA_PUNTOMIRA.posy
00:00000002 X ESTRUCTURA_PUNTOMIRA.escena
00:00000003 X ESTRUCTURA_PUNTOMIRA.velocidad
00:00000004 X ESTRUCTURA_PUNTOMIRA.boton2_pressed
00:00000005 X ESTRUCTURA_PUNTOMIRA.cadencia
00:00000006 X ESTRUCTURA_PUNTOMIRA.pm_aux1
00:00000007 X ESTRUCTURA_PUNTOMIRA.pm_aux2
00:00000008 X ESTRUCTURA_PUNTOMIRA.pm_aux3
00:00000009 X ESTRUCTURA_PUNTOMIRA.pm_aux4
00:0000000A X ESTRUCTURA_PUNTOMIRA.pm_aux5
00:0000000B X ESTRUCTURA_PUNTOMIRA.pm_aux6
00:0000000C X ESTRUCTURA_PUNTOMIRA.pm_aux7
00:0000000D X ESTRUCTURA_PUNTOMIRA.pm_aux8
00:0000000E X ESTRUCTURA_PUNTOMIRA.pm_aux9
00:0000000F X ESTRUCTURA_PUNTOMIRA.pm_aux10
00:00000010 X ESTRUCTURA_PUNTOMIRA
00:00000000 X ESTRUCTURA_ENEMIGO.tipo
00:00000001 X ESTRUCTURA_ENEMIGO.posx
00:00000002 X ESTRUCTURA_ENEMIGO.posy
00:00000003 X ESTRUCTURA_ENEMIGO.color
00:00000004 X ESTRUCTURA_ENEMIGO.escena
00:00000005 X ESTRUCTURA_ENEMIGO.contador_siguiente_escena
00:00000006 X ESTRUCTURA_ENEMIGO.reset_contador
00:00000007 X ESTRUCTURA_ENEMIGO.dano
00:00000008 X ESTRUCTURA_ENEMIGO.energia
00:00000009 X ESTRUCTURA_ENEMIGO.ver_hor
00:0000000A X ESTRUCTURA_ENEMIGO.manejador_dibujo
00:0000000C X ESTRUCTURA_ENEMIGO.en_aux3
00:0000000D X ESTRUCTURA_ENEMIGO.en_aux4
00:0000000E   ESTRUCTURA_ENEMIGO
00:00000000 X ESTRUCTURA_EXTRA.tipo
00:00000001 X ESTRUCTURA_EXTRA.posx
00:00000002 X ESTRUCTURA_EXTRA.posy
00:00000003 X ESTRUCTURA_EXTRA.color
00:00000004 X ESTRUCTURA_EXTRA.contador
00:00000005 X ESTRUCTURA_EXTRA.en_aux1
00:00000006 X ESTRUCTURA_EXTRA.en_aux2
00:00000007 X ESTRUCTURA_EXTRA.en_aux3
00:00000008 X ESTRUCTURA_EXTRA.en_aux4
00:00000009 X ESTRUCTURA_EXTRA.en_aux5
00:0000000A X ESTRUCTURA_EXTRA.en_aux6
00:0000000B X ESTRUCTURA_EXTRA.en_aux7
00:0000000C X ESTRUCTURA_EXTRA.en_aux8
00:0000000D X ESTRUCTURA_EXTRA.en_aux9
00:0000000E X ESTRUCTURA_EXTRA.en_aux10
00:0000000F X ESTRUCTURA_EXTRA.en_aux11
00:00000010 X ESTRUCTURA_EXTRA
00:00009781 X sprites_pantantalla
00:00009781   sprites_comunes
00:00009781 X sprite_punto_mira_1
00:000097A1 X sprite_punto_mira_2
00:000097C1 X sprite_punto_mira_1_mejorado
00:000097E1 X sprite_punto_mira_2_mejorado
00:00009801 X sprite_explosion_1
00:00009821 X sprite_explosion_2
00:00009841   fin_sprites_comunes
00:00009841 X sprite_arana1_1
00:00009861 X sprite_arana1_2
00:00009881 X sprite_murcielago1_1
00:000098A1 X sprite_murcielago1_2
00:000098C1 X sprite_serpiente1_1
00:000098E1 X sprite_serpiente1_2
00:00009901 X sprite_serpiente2_1
00:00009921 X sprite_serpiente2_2
00:00009941 X sprite_zombi1_1_1
00:00009961 X sprite_zombi1_2_1
00:00009981 X sprite_zombi1_3_1
00:000099A1 X sprite_zombi1_4_1
00:000099C1 X sprite_zombi1_1_2
00:000099E1 X sprite_zombi1_2_2
00:00009A01 X sprite_zombi1_3_2
00:00009A21 X sprite_zombi1_4_2
00:00009A41 X sprite_zombi2_1_1
00:00009A61 X sprite_zombi2_2_1
00:00009A81 X sprite_zombi2_3_1
00:00009AA1 X sprite_zombi2_4_1
00:00009AC1 X sprite_zombi2_1_2
00:00009AE1 X sprite_zombi2_2_2
00:00009B01 X sprite_zombi2_3_2
00:00009B21 X sprite_zombi2_4_2
00:00009B41 X sprite_caballero1_1_1
00:00009B61 X sprite_caballero1_2_1
00:00009B81 X sprite_caballero1_3_1
00:00009BA1 X sprite_caballero1_4_1
00:00009BC1 X sprite_caballero1_1_2
00:00009BE1 X sprite_caballero1_2_2
00:00009C01 X sprite_caballero1_3_2
00:00009C21 X sprite_caballero1_4_2
00:00009C41 X sprite_caballero2_1_1
00:00009C61 X sprite_caballero2_2_1
00:00009C81 X sprite_caballero2_3_1
00:00009CA1 X sprite_caballero2_4_1
00:00009CC1 X sprite_caballero2_1_2
00:00009CE1 X sprite_caballero2_2_2
00:00009D01 X sprite_caballero2_3_2
00:00009D21 X sprite_caballero2_4_2
00:00009D41 X sprite_llama1_1
00:00009D61 X sprite_llama2_1
00:00009D81 X sprite_llama1_2
00:00009DA1 X sprite_llama2_2
00:00009DC1 X sprite_fantasma1_1
00:00009DE1 X sprite_fantasma2_1
00:00009E01 X sprite_fantasma1_2
00:00009E21 X sprite_fantasma2_2
00:00009E41 X sprite_magia1_1
00:00009E61 X sprite_magia2_1
00:00009E81 X sprite_magia1_2
00:00009EA1 X sprite_magia2_2
00:00009EC1 X sprite_beholder1_1
00:00009EE1 X sprite_beholder2_1
00:00009F01 X sprite_beholder3_1
00:00009F21 X sprite_beholder4_1
00:00009F41 X sprite_beholder1_2
00:00009F61 X sprite_beholder2_2
00:00009F81 X sprite_beholder3_2
00:00009FA1 X sprite_beholder4_2
00:00009FC1 X sprite_vampiro1_1
00:00009FE1 X sprite_vampiro2_1
00:0000A001 X sprite_vampiro1_2
00:0000A021 X sprite_vampiro2_2
00:0000A041 X sprite_manoizq1
00:0000A061 X sprite_manoizq2
00:0000A081 X sprite_manoizq3
00:0000A0A1 X sprite_manoder1
00:0000A0C1 X sprite_manoder2
00:0000A0E1 X sprite_manoder3
00:0000A101   habitacion_actual
00:0000A103   habitaciones_juego
00:0000A103 X habitaciones_nivel0
00:0000A173 X habitaciones_nivel1
00:0000A1E3 X habitaciones_nivel2
00:0000A253 X habitaciones_nivel3
00:0000A2C3 X habitaciones_nivel4
00:0000A333 X habitaciones_nivel5
00:0000A3A3 X habitaciones_nivel6
00:0000A413   color_base
00:0000A416   color_bomba1
00:0000A419   color_bomba2
00:0000A41C X prota
00:0000A41C   prota.posx
00:0000A41D   prota.posy
00:0000A41E   prota.escena
00:0000A41F X prota.velocidad
00:0000A420 X prota.boton2_pressed
00:0000A421   prota.cadencia
00:0000A422 X prota.pm_aux1
00:0000A423 X prota.pm_aux2
00:0000A424 X prota.pm_aux3
00:0000A425 X prota.pm_aux4
00:0000A426 X prota.pm_aux5
00:0000A427 X prota.pm_aux6
00:0000A428 X prota.pm_aux7
00:0000A429 X prota.pm_aux8
00:0000A42A X prota.pm_aux9
00:0000A42B X prota.pm_aux10
00:0000A42C   prota_nivel
00:0000A42D   prota_vidas
00:0000A42E   prota_reliquias
00:0000A42F   prota_pos_mapx
00:0000A430   prota_pos_mapy
00:0000A431   prota_energia
00:0000A432   array_aux_vidas
00:0000A43A   array_aux_reliquias
00:0000A442   array_aux_energia
00:0000A449   ultimo_pos_array_aux_energia
00:0000A44A   array_aux_mapa_limpiar
00:0000A451   elemento_pintar_mapa
00:0000A452   array_puerta_arriba
00:0000A452 X array_puerta_arriba1
00:0000A456 X array_puerta_arriba2
00:0000A45A X array_puerta_arriba3
00:0000A45E X array_puerta_arriba4
00:0000A462 X array_puerta_arriba5
00:0000A466   array_puerta_derecha
00:0000A466 X array_puerta_derecha1
00:0000A469 X array_puerta_derecha2
00:0000A46C X array_puerta_derecha3
00:0000A46F X array_puerta_derecha4
00:0000A472 X array_puerta_derecha5
00:0000A475 X array_puerta_derecha6
00:0000A478 X array_puerta_derecha7
00:0000A47B   array_puerta_abajo
00:0000A47F   array_puerta_izquierda
00:0000A47F X array_puerta_izquierda1
00:0000A482 X array_puerta_izquierda2
00:0000A485 X array_puerta_izquierda3
00:0000A488 X array_puerta_izquierda4
00:0000A48B X array_puerta_izquierda5
00:0000A48E X array_puerta_izquierda6
00:0000A491 X array_puerta_izquierda7
00:0000A494 X pos_ayudas
00:0000A4A4   array_sprites
00:0000A4A4   array_sprites_pm
00:0000A4AC X array_sprites_enem
00:0000A524 X lista_enemigos
00:0000A5B0 X puntero_array_atrib_array_VRAM
00:0000A5B2   tiles_patrones_nivel0
00:0000A767   tiles_color_nivel0
00:0000A7AE   tiles_mapa_nivel0
00:0000A7E3 X tiles_patrones_nivel1
00:0000A998 X tiles_color_nivel1
00:0000A9DF X tiles_mapa_nivel1
00:0000AA14 X tiles_patrones_nivel2
00:0000ABC9 X tiles_color_nivel2
00:0000AC10 X tiles_mapa_nivel2
00:0000AC45 X tiles_patrones_nivel3
00:0000ADFA X tiles_color_nivel3
00:0000AE41 X tiles_mapa_nivel3
00:0000AE76 X tiles_patrones_nivel4
00:0000B02B X tiles_color_nivel4
00:0000B072 X tiles_mapa_nivel4
00:0000B0A7 X tiles_patrones_nivel5
00:0000B25C X tiles_color_nivel5
00:0000B2A3 X tiles_mapa_nivel5
00:0000B2D8 X tiles_patrones_nivel6
00:0000B48D X tiles_color_nivel6
00:0000B4D4 X tiles_mapa_nivel6
00:0000B509   tiles_patrones_marcador
00:0000B655   tiles_color_marcador
00:0000B68A   tiles_mapa_marcador
00:0000B6EC   END


 Output: t4.out
-------------------------------------------------

 Page: 00
  Org: 00008000  Size: *  Used: 00000000

    No output

 Output: t4.bin
-------------------------------------------------

 Page: 00
  Org: 00008000  Size: *  Used: 000036F3

   Address   Length Align   Label
   00008000   14067         START
