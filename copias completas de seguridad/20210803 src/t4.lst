Sjasm Z80 Assembler v0.42c - www.xl2s.tk             [2021.08.02 - 18:32:13]

t4.asm
Errors: 0

       1   00:0000                      	OUTPUT	"t4.bin"
       2   00:8000                      	
       3   00:8000                      ;;=====================================================
       4   00:8000                      ;;DEFINICIÓN DE CONSTANTES
       5   00:8000                      ;;=====================================================	
       6   00:8000                      	include "constantes.asm"
       1.  00:8000                      ;;=====================================================
       2.  00:8000                      ;; FICHERO constantes.asm
       3.  00:8000                      ;;=====================================================
       4.  00:8000                      
       5.  00:8000                      ;;ETIQUETAS/CONSTANTES BIOS TECLADO
       6.  00:8000  (00:00D8)           GTTRIG		equ		#00D8	;Returns current trigger status
       7.  00:8000  (00:00D5)           GTSTCK		equ		#00D5	;Returns the joystick/cursors status
       8.  00:8000  (00:F3DB)           CLIKSW		equ		#F3DB	;deshabilita el sonido de clic cuando se pulsa una tecla
       9.  00:8000                      
      10.  00:8000                      ;;ETIQUETAS/CONSTANTES BIOS VDP
      11.  00:8000  (00:013E)           RDVDP		equ		#013E	;lee registro status VDP
      12.  00:8000  (00:0047)           WRTVDP		equ		#0047	;escribe registros del VDP
      13.  00:8000  (00:005C)           LDIRVM		equ		#005C	;RAM/ROM -> VRAM
      14.  00:8000  (00:0059)           LDIRMV		equ		#0059	;VRAM -> RAM
      15.  00:8000  (00:005F)           CHGMOD		equ		#005F	;cambia modo pantalla (screen mode)
      16.  00:8000  (00:0041)           DISSCR  	equ		#0041	;desactiva pantanlla
      17.  00:8000  (00:0044)           ENASCR  	equ		#0044	;activa pantalla
      18.  00:8000  (00:0062)           CHGCLR  	equ		#0062	;cambia color de pantalla (toca A y direcciones)
      19.  00:8000  (00:F3E9)           FORCLR		equ		#F3E9	;zona memoria color foreground
      20.  00:8000  (00:F3EA)           BAKCLR  	equ		#F3EA	;zona memoria color background
      21.  00:8000  (00:F3EB)           BDRCLR 		equ		#F3EB	;zona memoria bordercolor
      22.  00:8000  (00:00C3)           CLS			equ		#00C3	;limpia pantalla (necesita A=0)
      23.  00:8000                      
      24.  00:8000                      ;;ETIQUETAS/CONSTANTES REGISTROS VDP
      25.  00:8000  (00:F3DF)           RG0SAV		equ		#F3DF	;Mirror of VDP register 0 (Basic: VDP(0))
      26.  00:8000  (00:F3E0)           RG1SAV		equ		#F3E0	;Mirror of VDP register 1 (Basic: VDP(1))
      27.  00:8000  (00:F3E1)           RG2SAV		equ		#F3E1	;Mirror of VDP register 2 (Basic: VDP(2))
      28.  00:8000  (00:F3E2)           RG3SAV		equ		#F3E2	;Mirror of VDP register 3 (Basic: VDP(3))
      29.  00:8000  (00:F3E3)           RG4SAV		equ		#F3E3	;Mirror of VDP register 4 (Basic: VDP(4))
      30.  00:8000  (00:F3E4)           RG5SAV		equ		#F3E4	;Mirror of VDP register 5 (Basic: VDP(5))
      31.  00:8000  (00:F3E5)           RG6SAV		equ		#F3E5	;Mirror of VDP register 6 (Basic: VDP(6))
      32.  00:8000  (00:F3E6)           RG7SAV		equ		#F3E6	;Mirror of VDP register 7 (Basic: VDP(7))
      33.  00:8000  (00:F3E7)           STATFL		equ		#F3E7	;Mirror of VDP(8) status register (S#0)
      34.  00:8000                      
      35.  00:8000  (00:0099)           REGEST		equ		#0099	;registro de estado para escribir directamente en VRAM
      36.  00:8000  (00:0098)           REGESCVDP	equ		#0098	;registro donde escribir valor para VRAM
      37.  00:8000                      
      38.  00:8000                      
      39.  00:8000                      ;;ETIQUETAS DE ZONAS DE MEMORIA DE LA VPD (MSX1)
      40.  00:8000  (00:0000)           CHRTBL		equ		#0000
      41.  00:8000  (00:1800)           TILMAP		equ		#1800
      42.  00:8000  (00:1B00)           SPRART		equ		#1B00
      43.  00:8000  (00:2000)           CLRTBL		equ		#2000
      44.  00:8000  (00:3800)           SPRTBL		equ		#3800
      45.  00:8000                      
      46.  00:8000                      
      47.  00:8000                      ;;ETIQUETAS ESTANDAR PARA DAR MÁS CLARIDAD AL CODIGO
      48.  00:8000  (00:0001)           SI			equ		1
      49.  00:8000  (00:0000)           NO			equ		0
      50.  00:8000                      
      51.  00:8000  (00:0000)           COLTRASP	equ		0
      52.  00:8000  (00:0001)           COLNEGRO	equ		1
      53.  00:8000  (00:0002)           COLVERDE	equ		2
      54.  00:8000  (00:0003)           COLVERCLA	equ		3
      55.  00:8000  (00:0004)           COLAZULOSC	equ		4
      56.  00:8000  (00:0005)           COLAZULLA	equ		5
      57.  00:8000  (00:0006)           COLROJOOSC	equ		6
      58.  00:8000  (00:0007)           COLCYAN		equ		7
      59.  00:8000  (00:0008)           COLROJO		equ		8
      60.  00:8000  (00:0009)           COLROJOCLA	equ		9
      61.  00:8000  (00:000A)           COLAMAROSC	equ		10
      62.  00:8000  (00:000B)           COLAMARCLA	equ		11
      63.  00:8000  (00:000C)           COLVERDOSC	equ		12
      64.  00:8000  (00:000D)           COLMAGENTA	equ		13
      65.  00:8000  (00:000E)           COLGRIS		equ		14
      66.  00:8000  (00:000F)           COLBLANCO	equ		15
      67.  00:8000                      
      68.  00:8000                      
      69.  00:8000                      
      70.  00:8000                      ;;ETIQUETAS ESPECIFICAS PARA DAR MÁS CLARIDAD AL CODIGO (relacionadas con posiciones en mapa vdp)
      71.  00:8000  (00:02F8)           POSMAPLIN1  equ		#02F8
      72.  00:8000  (00:02D8)           POSMAPLIN2  equ		#02D8
      73.  00:8000  (00:02B8)           POSMAPLIN3  equ		#02B8
      74.  00:8000  (00:0298)           POSMAPLIN4  equ		#0298
      75.  00:8000  (00:0278)           POSMAPLIN5  equ		#0278
      76.  00:8000  (00:0258)           POSMAPLIN6  equ		#0258
      77.  00:8000  (00:0238)           POSMAPLIN7  equ		#0238
      78.  00:8000                      
      79.  00:8000  (00:000D)           POSCARAMAP	equ		#000D
      80.  00:8000  (00:0248)           POSVIDAS	equ		#0248
      81.  00:8000  (00:0011)           POSRELIMAP	equ		#0011
      82.  00:8000  (00:02C8)           POSRELIQ	equ		#02C8
      83.  00:8000  (00:0288)           POSENERG	equ		#0288
      84.  00:8000  (00:02B4)           POSNIVEL	equ		#02B4
      85.  00:8000  (00:0238)           POSMAPA		equ 	#0238
      86.  00:8000                      
      87.  00:8000  (00:01EE)           POSPUERABAJ equ		#01EE
      88.  00:8000  (00:008E)           POSPUERARRI equ		#008E
      89.  00:8000  (00:00FC)           POSPUERDERE equ		#00FC
      90.  00:8000  (00:00E1)           POSPUERIZQU equ		#00E1
      91.  00:8000                      
      92.  00:8000                      
      93.  00:8000                      ;;ETIQUETAS ESPECIFICAS PARA DAR MÁS CLARIDAD AL CODIGO (relacionadas con posiciones en en el banco de memoria)
      94.  00:8000  (00:0013)           TILEMAPPROT equ		19
      95.  00:8000  (00:0009)           TILEMAPVACI	equ		9
      96.  00:8000  (00:0010)           TILEMAPROJO equ		16
      97.  00:8000  (00:000F)           TILEMAPAMAR equ		15
      98.  00:8000  (00:000E)           TILEMAPVERD equ		14
      99.  00:8000                      
     100.  00:8000                      
     101.  00:8000                      ;;ETIQUETAS ESPECIFICAS PARA DAR MÁS CLARIDAD AL CODIGO (generales)
     102.  00:8000  (00:0008)           NMAXVIDREL	equ		8		;el número máximo de vidas y de reliquias es de 8
     103.  00:8000  (00:0007)           NHABNIVEL	equ		7
     104.  00:8000  (00:00F8)           MAXENERGIA  equ		248
     105.  00:8000  (00:00D9)           TILEENERG8  equ		217
     106.  00:8000  (00:00BA)           TILEENERG7  equ		186
     107.  00:8000  (00:009B)           TILEENERG6  equ		155
     108.  00:8000  (00:007C)           TILEENERG5  equ		124
     109.  00:8000  (00:005D)           TILEENERG4  equ		93
     110.  00:8000  (00:003E)           TILEENERG3  equ		62
     111.  00:8000  (00:001F)           TILEENERG2  equ		31
     112.  00:8000  (00:0000)           TILENEGRO	equ		0
     113.  00:8000                      
     114.  00:8000                      ;limites
     115.  00:8000  (00:0000)           LIMPANTIZQ  equ		0
     116.  00:8000  (00:00FF)           LIMPANTDER  equ		255
     117.  00:8000  (00:0000)           LIMPANTARR  equ		0
     118.  00:8000  (00:0080)           LIMPANTABA  equ		128
     119.  00:8000                      
     120.  00:8000  (00:0001)           MUEARR  	equ		1
     121.  00:8000  (00:0002)           MUEARRDER	equ		2
     122.  00:8000  (00:0003)           MUEDER  	equ		3
     123.  00:8000  (00:0004)           MUEDERABA  	equ		4
     124.  00:8000  (00:0005)           MUEABA  	equ		5
     125.  00:8000  (00:0006)           MUEABAIZQ  	equ		6
     126.  00:8000  (00:0007)           MUEIZQ  	equ		7
     127.  00:8000  (00:0008)           MUEIZQARR  	equ		8
     128.  00:8000                      
     129.  00:8000                      
     130.  00:8000                      ;matriz de 7x7 empieza en 0, y fila y x col, cuento desde esquina sup izq
     131.  00:8000  (00:0006)           BASEMAPY	equ		6
     132.  00:8000  (00:0003)           BASEMAPX	equ		3
       7   00:8000                      
       8   00:8000                      ;;=====================================================
       9   00:8000                      ;;DEFINICIÓN DE CABECERA DE ARCHIVO BIN
      10   00:8000                      ;;=====================================================		
      11   00:8000                      	include "cabecerabin.asm"
       1.  00:8000                      ;;=====================================================
       2.  00:8000                      ;; FICHERO cabecera.asm
       3.  00:8000                      ;;=====================================================
       4.  00:8000                      
       5.  00:8000                      ;;CABECERA FICHERO BIN
       6.  00:8000  FE                  	DB	#FE
       7.  00:8001  00 80               	DW	START
       8.  00:8003  EF 8F               	DW	END
       9.  00:8005  00 80               	DW	START
      10.  00:8007                      
      11.  00:8007                      ;;INICIO CÓDIGO PROGRAMA	
      12.  00:8007                      	ORG	#8000
      13.  00:8000                      	
      12   00:8000                      	
      13   00:8000                      START:
      14   00:8000                      	
      15   00:8000                      	;inicializa pantalla y entonrno
      16   00:8000  CD 0F 81            	CALL	sub_preparapantalla			;screen 2,2 sin click al pulsar tecla y color 16,1,1
      17   00:8003                      	
      18   00:8003                      	;inicializa variables para parametrizar funciones y que lo que se muestre sea variable (nº vidas, mapa, puertas, pantalla, etc...)
      19   00:8003  CD 56 80            	CALL	inicializa_variables_pruebas
      20   00:8006                      	
      21   00:8006                      	;inicializa los niveles por partida
      22   00:8006  CD 84 80            	CALL	inicializa_niveles			;no es necesario parametrizarlo según el nivel del usuario ya que se cargan todos
      23   00:8009                      	
      24   00:8009                      	;pinta la pantalla (la primera o algunas especiales se pintan completamente)
      25   00:8009  CD 3C 81            	CALL	pinta_pantalla_completa 
      26   00:800C                      	
      27   00:800C                      	;carga sprites en memoria (SE HA RETRASADO HASTA PARAMETRIZAR LA CARGA DE PANTALLAS)
      28   00:800C  CD AC 83            	CALL 	carga_patrones_sprites_nivel1
      29   00:800F                      	
      30   00:800F                      	;funciones que modificarian el marcador si se produce un evento cuando toque y cuando se pinta la pantalla ya se mira
      31   00:800F                      	;una variable para ver si el array hay que actualizarlo en pantalla o no
      32   00:800F  CD 99 80            	CALL	actualiza_marcador_vidas
      33   00:8012  CD B2 80            	CALL	actualiza_marcador_reliquias
      34   00:8015  CD BB 81            	CALL	pinta_nivel
      35   00:8018  CD 3C 82            	CALL	borra_mapa
      36   00:801B                      
      37   00:801B  CD C9 80            	CALL	localiza_info_habitacion	;devuelve variable habitacion_actual 	
      38   00:801E                      
      39   00:801E  3E 01               	LD		 A,1
      40   00:8020  CD 3C 83            	CALL	posiciona_en_mapa		;se le pasa A 1 (tile del prota) está el prota y prota.poxx y posy
      41   00:8023                      
      42   00:8023                      	
      43   00:8023                      loop_principal:
      44   00:8023  76                  	HALT							;espera VBLANK y sincroniza
      45   00:8024                      	
      46   00:8024  CD 7D 84            	CALL	render_sprites			;actualiza array de sprites y los pinta en pantalla
      47   00:8027                      	
      48   00:8027  CD 2D 82            	CALL	pinta_energia			;pinta la energia en pantalla
      49   00:802A                      
      50   00:802A                      mira_pinta_puertas:
      51   00:802A  3A 23 8C            	LD		 A,(actualiza_puertas_sn)
      52   00:802D  B7                  	OR		 A
      53   00:802E  28 06               	JR		 Z,fin_mira_pinta_puertas
      54   00:8030                      	
      55   00:8030                      	;primero preparo la pantalla como si no hubiera puertas
      56   00:8030  CD 43 81            	CALL 	pinta_parte_superior_pantalla
      57   00:8033                      	
      58   00:8033  CD CA 82            	CALL	pinta_puertas
      59   00:8036                      fin_mira_pinta_puertas:
      60   00:8036                      	
      61   00:8036                      mira_pinta_vidas:
      62   00:8036  3A 0A 8C            	LD		 A, (actualiza_vidas_sn)
      63   00:8039  B7                  	OR		 A
      64   00:803A  28 03               	JR		 Z, fin_mira_pinta_vidas
      65   00:803C  CD 95 81            	CALL	pinta_vidas
      66   00:803F                      fin_mira_pinta_vidas:	
      67   00:803F                      
      68   00:803F                      mira_pinta_reliquias:
      69   00:803F  3A 13 8C            	LD		 A, (actualiza_reliquias_sn)
      70   00:8042  B7                  	OR		 A
      71   00:8043  28 07               	JR		 Z, fin_mira_pinta_reliquias
      72   00:8045                      	;1º reseteo actualiza_reliquias_sn para que se pueda pintar reliquias o no de nuevo
      73   00:8045  2F                  	CPL		 
      74   00:8046  32 13 8C            	LD		(actualiza_reliquias_sn), A
      75   00:8049                      	;2º pinto efecto en pantalla de tirar reliquias
      76   00:8049                      ;	CALL	efecto_imagen_tira_reliquia
      77   00:8049                      	;3º actualiza el marcador de reliquias
      78   00:8049  CD A8 81            	CALL	pinta_reliquias
      79   00:804C                      fin_mira_pinta_reliquias:
      80   00:804C                      
      81   00:804C  CD C0 84            	CALL	check_player			;MIRA EL CONTROL Y APLICA LA LOGICA DE MOVIMIENTO DEL PROTAGONISTA
      82   00:804F                      	
      83   00:804F  CD D6 81            	CALL	mira_pinta_energia		;actualiza el array de energia siempre pero no pinta eso lo hace pinta_energia
      84   00:8052                      	
      85   00:8052  C3 23 80            	JP		loop_principal
      86   00:8055                      fin_programa_principal:
      87   00:8055  C9                  	RET
      88   00:8056                      
      89   00:8056                      
      90   00:8056                      
      91   00:8056                      
      92   00:8056                      
      93   00:8056                      ;;*******************************************************************
      94   00:8056                      ; sólo para hacer pruebas y pintar la parte de las vidas y demás
      95   00:8056                      inicializa_variables_pruebas:
      96   00:8056  3E 04               	LD		 A, 4
      97   00:8058  32 BB 86            	LD		(prota_vidas),A
      98   00:805B                      
      99   00:805B  3E 01               	LD		 A, SI	
     100   00:805D  32 0A 8C            	LD		(actualiza_vidas_sn), A	;actualizo la variable para que pinte vidas 1 sí / 0 no
     101   00:8060                      
     102   00:8060  3E 05               	LD		 A, 5
     103   00:8062  32 BC 86            	LD		(prota_reliquias), A
     104   00:8065                      	
     105   00:8065  3E 01               	LD		 A, SI	
     106   00:8067  32 13 8C            	LD		(actualiza_reliquias_sn), A	;actualizo la variable para que pinte vidas 1 sí / 0 no
     107   00:806A                      
     108   00:806A  3E 64               	LD		 A, 100
     109   00:806C  32 BF 86            	LD		(prota_energia), A
     110   00:806F                      
     111   00:806F  3E 01               	LD		 A, 1
     112   00:8071  32 BA 86            	LD		(prota_nivel), A		;nivel empieza en 0 para usar las posiciones ascii
     113   00:8074                      	
     114   00:8074                      	;ubico al prota dentro del nivel para obtener luego las habitaciones y enemigos que aparecerán
     115   00:8074                      	;será igual la posición inicial en todos los niveles
     116   00:8074                      
     117   00:8074  3E 00               	LD		 A, 0				;los niveles son 7 del 0 al 6
     118   00:8076  32 BE 86            	LD		(prota_pos_mapy), A	;pos y dentro del nivel (se empieza en 0)
     119   00:8079                      
     120   00:8079  3E 03               	LD		 A, 3				;columnas 7 del 0 al 6
     121   00:807B  32 BD 86            	LD		(prota_pos_mapx), A	;pos y dentro del nivel (se empieza en 0)
     122   00:807E                      	
     123   00:807E                      	;************************************************
     124   00:807E                      	;importante : revisar pintado de mapa
     125   00:807E                      
     126   00:807E  3E 01               	LD			 A, 1 
     127   00:8080  32 23 8C            	LD			(actualiza_puertas_sn), A;(1 actualiza y 0 no actualiza puertas)
     128   00:8083                      fin_inicializa_variables_pruebas:
     129   00:8083  C9                  	RET
     130   00:8084                      ;;************************************************************************
     131   00:8084                      
     132   00:8084                      
     133   00:8084                      
     134   00:8084                      
     135   00:8084                      
     136   00:8084                      
     137   00:8084                      
     138   00:8084                      
     139   00:8084                      
     140   00:8084                      ;;=====================================================
     141   00:8084                      ;;DEFINICIÓN DE SUBRUTINAS
     142   00:8084                      ;;=====================================================
     143   00:8084                      	include "subrutinas.asm"
       1.  00:8084                      ;;=====================================================
       2.  00:8084                      ;;DEFINICIÓN DE SUBRUTINAS
       3.  00:8084                      ;;=====================================================	
       4.  00:8084                      
       5.  00:8084                      
       6.  00:8084                      ;;=====================================================
       7.  00:8084                      ;;INICIALIZA_NIVELES
       8.  00:8084                      ;;=====================================================	
       9.  00:8084                      ; función: 	copia la plantilla de niveles (habitaciones_plantilla) en los niveles de trabajo para el juego (habitaciones_juego)
      10.  00:8084                      ; entrada: 	habitaciones_plantilla
      11.  00:8084                      ; salida: 	habitaciones_juego
      12.  00:8084                      ; toca: 	A
      13.  00:8084                      inicializa_niveles:
      14.  00:8084  D9                  	EXX
      15.  00:8085                      	
      16.  00:8085  AF                  	XOR		 A
      17.  00:8086  06 31               	LD		 B, 49				;7 filas por 7 niveles menos el primero que lo hago diera del buble porque se suma 14 y no 16
      18.  00:8088  21 E2 88            	LD		HL, habitaciones_juego;tambíen puntero al primer nivel
      19.  00:808B  11 0E 00            	LD		DE,14
      20.  00:808E  19                  	ADD		HL,DE
      21.  00:808F  77                  	LD		(HL),A
      22.  00:8090  11 10 00            	LD		DE,16				;desde las col 15 de una fila a la siguiente
      23.  00:8093                      .bucle_borra_hab:
      24.  00:8093  19                  	ADD		HL,DE
      25.  00:8094  77                  	LD		(HL),A
      26.  00:8095  10 FC               	DJNZ	.bucle_borra_hab
      27.  00:8097                      	
      28.  00:8097  D9                  	EXX
      29.  00:8098                      fin_iniciliza_niveles:
      30.  00:8098  C9                  	RET
      31.  00:8099                      
      32.  00:8099                      
      33.  00:8099                      ;;=====================================================
      34.  00:8099                      ;;ACTUALIZA_MARCADOR_VIDAS
      35.  00:8099                      ;;=====================================================	
      36.  00:8099                      ; función:  actualiza el buffer de vidas
      37.  00:8099                      ; entrada: 	prota_vidas
      38.  00:8099                      ; salida: 	array_aux_vidas
      39.  00:8099                      ; toca:		A,B,HL
      40.  00:8099                      actualiza_marcador_vidas:
      41.  00:8099  D9                  	EXX
      42.  00:809A                      
      43.  00:809A                      	;para no andar restando pongo todos los huecos a negro y luego en otro bucle las caras
      44.  00:809A                      	;1-pinto todo en blanco
      45.  00:809A  21 02 8C            	LD		HL,array_aux_vidas
      46.  00:809D  06 08               	LD		 B,NMAXVIDREL
      47.  00:809F                      loop_marcador_caras_negro:	;asignar espacios en negro
      48.  00:809F  36 00               	LD		(HL),0			;0 posición mapa tiles para nada (es transparente pero el fondo es negro)
      49.  00:80A1  23                  	INC		HL
      50.  00:80A2  10 FB               	DJNZ	loop_marcador_caras_negro
      51.  00:80A4                      fin_loop_marcador_caras_negro:
      52.  00:80A4                      	;2-pinto las caras según el n de vidas
      53.  00:80A4  21 02 8C            	LD		HL,array_aux_vidas
      54.  00:80A7  3A BB 86            	LD		 A,(prota_vidas)
      55.  00:80AA  47                  	LD		 B,A
      56.  00:80AB                      loop_marcador_caras: ;asignar caras
      57.  00:80AB  36 0D               	LD		(HL),POSCARAMAP	;13 posición mapa tiles para cara
      58.  00:80AD  23                  	INC		HL
      59.  00:80AE  10 FB               	DJNZ	loop_marcador_caras
      60.  00:80B0                      fin_loop_marcador_caras:
      61.  00:80B0                      
      62.  00:80B0  D9                  	EXX
      63.  00:80B1                      fin_actualiza_marcador_vidas:
      64.  00:80B1  C9                  	RET
      65.  00:80B2                      
      66.  00:80B2                      
      67.  00:80B2                      ;;=====================================================
      68.  00:80B2                      ;;ACTUALIZA_MARCADOR_RELIQUIAS
      69.  00:80B2                      ;;=====================================================	
      70.  00:80B2                      ; función: 	actualiza buffer de reliquias
      71.  00:80B2                      ; entrada: 	prota_reliquias
      72.  00:80B2                      ; salida: 	array_aux_reliquias
      73.  00:80B2                      ; toca:		A,B,HL
      74.  00:80B2                      actualiza_marcador_reliquias:
      75.  00:80B2                      	;para no andar restando pongo todos los huecos a negro y luego en otro bucle las reliquias
      76.  00:80B2                      	;1-pinto todo en blanco
      77.  00:80B2  21 0B 8C            	LD		HL, array_aux_reliquias
      78.  00:80B5  06 08               	LD		 B, NMAXVIDREL
      79.  00:80B7                      loop_marcador_reliquias_negro:	;asignar espacios en negro
      80.  00:80B7  36 00               	LD		(HL), 0			;0 posición mapa tiles para nada (es transparente pero el fondo es negro)
      81.  00:80B9  23                  	INC		HL
      82.  00:80BA  10 FB               	DJNZ	loop_marcador_reliquias_negro
      83.  00:80BC                      fin_loop_marcador_reliquias_negro:
      84.  00:80BC                      	;2-pinto las cruces según el n de reliquias
      85.  00:80BC  21 0B 8C            	LD		HL, array_aux_reliquias
      86.  00:80BF  3A BC 86            	LD		 A, (prota_reliquias)
      87.  00:80C2  47                  	LD		 B, A
      88.  00:80C3                      loop_marcador_reliquias: ;asignar reliquias
      89.  00:80C3  36 11               	LD		(HL), POSRELIMAP	;17 posición mapa tiles para reliquia
      90.  00:80C5  23                  	INC		HL
      91.  00:80C6  10 FB               	DJNZ	loop_marcador_reliquias
      92.  00:80C8                      fin_loop_marcador_reliquias:
      93.  00:80C8                      fin_actualiza_marcador_reliquias:
      94.  00:80C8  C9                  	RET
      95.  00:80C9                      
      96.  00:80C9                      
      97.  00:80C9                      
      98.  00:80C9                      ;;=====================================================
      99.  00:80C9                      ;;LOCALIZA_INFO_HABITACION
     100.  00:80C9                      ;;=====================================================	
     101.  00:80C9                      ; función: 	busca las puertas que hay que pintar egún la posición del usuario y las pone en A
     102.  00:80C9                      ; entrada: 	prota.pos_mapy, prota.pos_mapx, prota_nivel habitaciones_juego
     103.  00:80C9                      ; salida: 	habitacion_actual
     104.  00:80C9                      ; toca:		A
     105.  00:80C9                      ;ejemplo: nivel 4, posx 5 y posy 3
     106.  00:80C9                      ;  (4 x 7) x 16 (se necesitan dos bytes y el prod de 16 es slr 4 veces)
     107.  00:80C9                      ; +(3 x 16) 	de la fila (se necesita 1 y byte el prod de 16 es slr 4 veces)
     108.  00:80C9                      ; +5        	de la columna 
     109.  00:80C9                      localiza_info_habitacion:
     110.  00:80C9  D9                  		EXX
     111.  00:80CA                      
     112.  00:80CA                      ;primer sumando	(en el ejemplo + (4x7)x16)
     113.  00:80CA  21 E2 88            		LD		HL, habitaciones_juego
     114.  00:80CD  3A BA 86            		LD		 A, (prota_nivel)	
     115.  00:80D0  B7                  		OR		 A
     116.  00:80D1  28 16               		JR		 Z, .no_suma_niveles_previos	;el primero nivel (0) no sumaría ni uno por lo que salto al segundo sumando
     117.  00:80D3                      	;sumo 7 veces el nº de nivel si no es cero
     118.  00:80D3  57                  		LD		 D, A
     119.  00:80D4  06 06               		LD		 B, 6
     120.  00:80D6                      .primer_producto
     121.  00:80D6  82                  		ADD		 A, D
     122.  00:80D7  10 FD               		DJNZ	 .primer_producto
     123.  00:80D9  47                  		LD		 B, A				;guardo el resultado en B
     124.  00:80DA                      
     125.  00:80DA                      ;el resultado previo está en B. Ahoro hay que multiplicar A x 16, lo guardo en DE y lo sumo en HL
     126.  00:80DA                      		;inicializo valores a 0
     127.  00:80DA  AF                  		XOR		 A
     128.  00:80DB  57                  		LD		 D, A
     129.  00:80DC  5F                  		LD		 E, A
     130.  00:80DD  67                  		LD		 H, A
     131.  00:80DE  6F                  		LD		 L, A
     132.  00:80DF                      
     133.  00:80DF  58                  		LD		 E, B				;pongo el (4x7) en HL (estaba en B)
     134.  00:80E0                      		
     135.  00:80E0  06 10               		LD		 B, 16
     136.  00:80E2                      .segundo_producto
     137.  00:80E2  19                  		ADD		HL, DE				;segundo producto x 16
     138.  00:80E3  10 FD               		DJNZ	.segundo_producto	
     139.  00:80E5                      		
     140.  00:80E5                      .fin_seg_prod:
     141.  00:80E5                      	;coloco puntero DE al inicio de las habitaciones y le sumo para poner el puntero en el nivel que me interesa
     142.  00:80E5  11 E2 88            		LD		DE, habitaciones_juego
     143.  00:80E8  19                  		ADD		HL, DE				;suma el nº de bytes de los niveles previos (4 x 7 x 16)
     144.  00:80E9                      .no_suma_niveles_previos:
     145.  00:80E9                      
     146.  00:80E9                      ;ya tengo el puntero HL al inicio del nivel que me interesa
     147.  00:80E9                      
     148.  00:80E9                      ;segundo sumando (en el ejemplo + 3x16)
     149.  00:80E9  3A BE 86            	LD		 A,(prota_pos_mapy)
     150.  00:80EC                      [4]	SLA		 A				;equivalente a 3 x 16			
     150.  00:80EC  CB 27 CB 27 CB 27 CB 27 
     151.  00:80F4                      
     152.  00:80F4  5F                  	LD		 E, A
     153.  00:80F5  AF                  	XOR		 A
     154.  00:80F6  57                  	LD		 D, A
     155.  00:80F7  19                  	ADD		HL, DE			;equivale a 4x7x16 (HL) + 3x16 (DE)
     156.  00:80F8                      
     157.  00:80F8                      ;tercer sumando (en el ejemplo + 5)
     158.  00:80F8  3A BD 86            	LD		 A, (prota_pos_mapx)
     159.  00:80FB  47                  	LD		 B, A
     160.  00:80FC                      .situa_columna:
     161.  00:80FC  23 23               [2]	INC		HL
     162.  00:80FE  10 FC               	DJNZ	.situa_columna
     163.  00:8100                      
     164.  00:8100                      ;ya tengo el puntero HL al inicio de la fila que me interesa
     165.  00:8100                      
     166.  00:8100                      ;colocamos resultado en habitación actual
     167.  00:8100  DD 21 E0 88         	LD		IX, habitacion_actual
     168.  00:8104  7E                  	LD		 A, (HL)
     169.  00:8105  DD 77 00            	LD		(IX), A
     170.  00:8108  23                  	INC		HL
     171.  00:8109  7E                  	LD		 A, (HL)
     172.  00:810A  DD 77 01            	LD		(IX+1), A
     173.  00:810D                      	
     174.  00:810D  D9                  	EXX
     175.  00:810E                      fin_localiza_info_habitacion:
     176.  00:810E  C9                  	RET
     177.  00:810F                      
     178.  00:810F                      
     179.  00:810F                      
     180.  00:810F                      
     144   00:810F                      	
     145   00:810F                      	include "subr_pintapantalla.asm"
       1.  00:810F                      ;;=====================================================
       2.  00:810F                      ;;DEFINICIÓN DE SUBRUTINAS
       3.  00:810F                      ;;=====================================================	
       4.  00:810F                      ;relacionadas con pintado en pantalla (y no sprites)
       5.  00:810F                      
       6.  00:810F                      
       7.  00:810F                      ;;=====================================================
       8.  00:810F                      ;;PREPARAPANTALLA
       9.  00:810F                      ;;=====================================================	
      10.  00:810F                      ; función: elimina clic cuando se pulsa tecla, cls, screen 2,2
      11.  00:810F                      ; entrada: -
      12.  00:810F                      ; salida: -
      13.  00:810F                      ; toca: si no son todos los regristros, casi todos
      14.  00:810F                      sub_preparapantalla:
      15.  00:810F                      	;toca A y Z
      16.  00:810F                      elimina_clic;
      17.  00:810F  AF                  	XOR		 A
      18.  00:8110  32 DB F3            	LD		(CLIKSW),A
      19.  00:8113                      fin_elimina_clic:
      20.  00:8113                      
      21.  00:8113                      	;toca A
      22.  00:8113                      limpia_pantalla:
      23.  00:8113  AF                  	XOR			A
      24.  00:8114  CD C3 00            	CALL 		CLS
      25.  00:8117                      fin_limpia_pantalla:
      26.  00:8117                      
      27.  00:8117                      	;toca A y direcciones #F3E9/#F3EA/#F3EB
      28.  00:8117                      set_color:
      29.  00:8117  3E 02               	LD		 A,2				;verde oscuro
      30.  00:8119  32 E9 F3            	LD 		(FORCLR),A
      31.  00:811C  3E 01               	LD		 A,1				;negro
      32.  00:811E  32 EA F3            	LD 		(BAKCLR),A
      33.  00:8121  3E 01               	LD		 A,1				;negro
      34.  00:8123  32 EB F3            	LD 		(BDRCLR),A
      35.  00:8126  CD 62 00            	CALL	CHGCLR  
      36.  00:8129                      fin_set_color:
      37.  00:8129                      	
      38.  00:8129                      	;cambiamos a SCREEN 2,2 del BASIC
      39.  00:8129                      	;toca A
      40.  00:8129                      screen2:
      41.  00:8129  3E 02               	LD		 A,2
      42.  00:812B  CD 5F 00            	CALL	CHGMOD			;selecciona screen 2
      43.  00:812E                      sprites_16_16:
      44.  00:812E  3A E0 F3            	LD		 A,(RG1SAV)
      45.  00:8131  F6 02               	OR		00000010b		;fuerza sprites de 16x16
      46.  00:8133  32 E0 F3            	LD		(RG1SAV),A		;no lo guardamos en la copia de variables del sistema
      47.  00:8136  47                  	LD		 B,A
      48.  00:8137  0E 01               	LD		 C,1
      49.  00:8139  C3 47 00            	JP		WRTVDP			;opción alternativa de escribir las tres lineas siguientes
      50.  00:813C                      	;~ CALL	WRTVDP			;lo escribe en el registro 1 del VDP
      51.  00:813C                      	;~ RET
      52.  00:813C                      fin_sub_preparapantalla:
      53.  00:813C                      	
      54.  00:813C                      
      55.  00:813C                      ;;=====================================================
      56.  00:813C                      ;;PINTA_PANTALLA_COMPLETA
      57.  00:813C                      ;;=====================================================	
      58.  00:813C                      ; función: pinta el escenario, las 3 partes
      59.  00:813C                      ; entrada: -
      60.  00:813C                      ; salida: -
      61.  00:813C                      ; toca: si no son todos los regristros, casi todos
      62.  00:813C                      pinta_pantalla_completa:
      63.  00:813C  CD 43 81            	CALL 	pinta_parte_superior_pantalla
      64.  00:813F                      	
      65.  00:813F  CD 7A 81            	CALL 	pinta_parte_inferior_pantalla	
      66.  00:8142                      fin_pinta_pantalla_completa:
      67.  00:8142  C9                  	RET
      68.  00:8143                      
      69.  00:8143                      
      70.  00:8143                      ;;=====================================================
      71.  00:8143                      ;;PINTA_PARTE_SUPERIOR_PANTALLA
      72.  00:8143                      ;;=====================================================	
      73.  00:8143                      ; función: pinta el escenario, las 2 partes superiores y actualiza puertas
      74.  00:8143                      ; entrada: -
      75.  00:8143                      ; salida: -
      76.  00:8143                      ; toca: si no son todos los regristros, casi todos
      77.  00:8143                      pinta_parte_superior_pantalla:
      78.  00:8143                      
      79.  00:8143                      ;************** preguntar cómo parametrizar esto **********************************************
      80.  00:8143                      
      81.  00:8143                      	;cangando banco 1
      82.  00:8143                      	;cargamos los patrones
      83.  00:8143  21 86 8D            	LD		HL, tiles_patrones_pantalla11
      84.  00:8146  11 00 00            	LD		DE, CHRTBL
      85.  00:8149  CD DA 85            	CALL	depack_VRAM
      86.  00:814C                      	;cargamos mapa de pantalla
      87.  00:814C  21 C1 8D            	LD		HL, tiles_mapa_pantalla11
      88.  00:814F  11 00 18            	LD		DE, TILMAP
      89.  00:8152  CD DA 85            	CALL	depack_VRAM
      90.  00:8155                      	;cargamos los colores de los patrones
      91.  00:8155  21 A9 8D            	LD		HL, tiles_color_pantalla11
      92.  00:8158  11 00 20            	LD		DE, CLRTBL
      93.  00:815B  CD DA 85            	CALL	depack_VRAM
      94.  00:815E                      	
      95.  00:815E                      	;cangando banco 2
      96.  00:815E                      	;cargamos los patrones
      97.  00:815E  21 86 8D            	LD		HL, tiles_patrones_pantalla12
      98.  00:8161  11 00 08            	LD		DE, CHRTBL + #0800
      99.  00:8164  CD DA 85            	CALL	depack_VRAM	
     100.  00:8167                      	;cargamos mapa de pantalla
     101.  00:8167  21 DB 8D            	LD		HL, tiles_mapa_pantalla12
     102.  00:816A  11 00 19            	LD		DE, TILMAP + #0100
     103.  00:816D  CD DA 85            	CALL	depack_VRAM
     104.  00:8170                      	;cargamos los colores de los patrones
     105.  00:8170  21 A9 8D            	LD		HL, tiles_color_pantalla12
     106.  00:8173  11 00 28            	LD		DE, CLRTBL + #0800
     107.  00:8176                      	;JP		depack_VRAM
     108.  00:8176  CD DA 85            	CALL	depack_VRAM
     109.  00:8179                      fin_pinta_parte_superior_pantalla:
     110.  00:8179  C9                  	RET
     111.  00:817A                      
     112.  00:817A                      
     113.  00:817A                      ;;=====================================================
     114.  00:817A                      ;;PINTA_PARTE_INFERIOR_PANTALLA
     115.  00:817A                      ;;=====================================================	
     116.  00:817A                      ; función: pinta la parte inferior del escenario que es común
     117.  00:817A                      ; entrada: -
     118.  00:817A                      ; salida: -
     119.  00:817A                      ; toca: si no son todos los regristros, casi todos
     120.  00:817A                      pinta_parte_inferior_pantalla:
     121.  00:817A                      	;cangando banco 3
     122.  00:817A                      	;cargamos los patrones
     123.  00:817A  21 05 8E            	LD		HL,tiles_patrones_pantalla3
     124.  00:817D  11 00 10            	LD		DE,CHRTBL + #1000
     125.  00:8180  CD DA 85            	CALL	depack_VRAM	
     126.  00:8183                      	;cargamos mapa de pantalla
     127.  00:8183  21 80 8F            	LD		HL,tiles_mapa_pantalla3
     128.  00:8186  11 00 1A            	LD		DE,TILMAP + #0200
     129.  00:8189  CD DA 85            	CALL	depack_VRAM
     130.  00:818C                      	;cargamos los colores de los patrones
     131.  00:818C  21 4B 8F            	LD		HL,tiles_color_pantalla3
     132.  00:818F  11 00 30            	LD		DE,CLRTBL + #1000
     133.  00:8192  C3 DA 85            	JP		depack_VRAM
     134.  00:8195                      	;~ CALL	depack_VRAM
     135.  00:8195                      fin_pinta_parte_inferior_pantalla:
     136.  00:8195                      	;~ RET
     137.  00:8195                      
     138.  00:8195                      
     139.  00:8195                      
     140.  00:8195                      ;;=====================================================
     141.  00:8195                      ;;PINTA_VIDAS
     142.  00:8195                      ;;=====================================================	
     143.  00:8195                      ; función: 	actualiza el mapa de tiles para que en el próximo refresco se pinten y actualiza_vidas
     144.  00:8195                      ; entrada: 	array_aux_vidas
     145.  00:8195                      ; salida: 	actualiza_vidas_sn
     146.  00:8195                      ; toca:		AF
     147.  00:8195                      pinta_vidas:
     148.  00:8195  D9                  	EXX
     149.  00:8196                      	
     150.  00:8196  21 02 8C            	LD		HL, array_aux_vidas
     151.  00:8199  11 48 1A            	LD		DE, TILMAP + POSVIDAS 	;inicio posición en el mapa de tiles de las vidas
     152.  00:819C  01 08 00            	LD		BC, NMAXVIDREL			;hay 8 posiciones para vidas/reliquias o espacios en negro si no tiene 8 vidas/reliquias
     153.  00:819F  CD 5C 00            	CALL	LDIRVM
     154.  00:81A2                      	
     155.  00:81A2                      	;una vez quer está pintada ya no se actualizará a menos que perdamos/ganemos una vida
     156.  00:81A2  AF                  	XOR		 A
     157.  00:81A3  32 0A 8C            	LD		(actualiza_vidas_sn),A
     158.  00:81A6                      
     159.  00:81A6  D9                  	EXX
     160.  00:81A7                      fin_pinta_vidas:
     161.  00:81A7  C9                  	RET
     162.  00:81A8                      	
     163.  00:81A8                      	
     164.  00:81A8                      
     165.  00:81A8                      ;;=====================================================
     166.  00:81A8                      ;;PINTA_RELIQUIAS
     167.  00:81A8                      ;;=====================================================	
     168.  00:81A8                      ; función: 	actualiza el mapa de tiles para que en el próximo refresco se pinten y actualiza_reliquias
     169.  00:81A8                      ; entrada: 	array_aux_reliquias
     170.  00:81A8                      ; salida: 	actualiza_reliquias_sn
     171.  00:81A8                      ; toca:		AF
     172.  00:81A8                      pinta_reliquias:
     173.  00:81A8  D9                  	EXX
     174.  00:81A9                      	
     175.  00:81A9  21 0B 8C            	LD		HL, array_aux_reliquias
     176.  00:81AC  11 C8 1A            	LD		DE, TILMAP + POSRELIQ 	;inicio posición en el mapa de tiles de las vidas
     177.  00:81AF  01 08 00            	LD		BC, NMAXVIDREL			;hay 8 posiciones para vidas/reliquias o espacios en negro si no tiene 8 vidas/reliquias
     178.  00:81B2  CD 5C 00            	CALL	LDIRVM
     179.  00:81B5                      	
     180.  00:81B5                      	;una vez quer está pintada ya no se actualizará a menos que ganemos/gastemos una reliquia
     181.  00:81B5  AF                  	XOR		 A
     182.  00:81B6  32 13 8C            	LD		(actualiza_reliquias_sn), A
     183.  00:81B9                      
     184.  00:81B9  D9                  	EXX
     185.  00:81BA                      fin_pinta_reliquias:
     186.  00:81BA  C9                  	RET
     187.  00:81BB                      	
     188.  00:81BB                      
     189.  00:81BB                      
     190.  00:81BB                      	
     191.  00:81BB                      ;;=====================================================
     192.  00:81BB                      ;;PINTA_NIVEL
     193.  00:81BB                      ;;=====================================================	
     194.  00:81BB                      ; función: 	actualiza el nivel en la parte de puntuación
     195.  00:81BB                      ; entrada: 	prota_nivel
     196.  00:81BB                      ; salida: 	-
     197.  00:81BB                      ; toca:		HL,DE,BC
     198.  00:81BB                      pinta_nivel:	
     199.  00:81BB                      	;forma más avanzada sin llamada a la bios
     200.  00:81BB  01 B4 1A            	LD		BC,TILMAP + POSNIVEL ;posición en el mapa de tiles del tile de nivel
     201.  00:81BE  3A BA 86            	LD		 A, (prota_nivel)	;seleccionando la pos del banco de tiles a poner en el mapa
     202.  00:81C1  C6 30               	ADD		'0'	
     203.  00:81C3  57                  	LD		 D, A
     204.  00:81C4                      	
     205.  00:81C4  CD C8 81            	CALL	pinta_tile_suelto	;nota ... un call+ret se debe poder sustiruir por un jp
     206.  00:81C7                      fin_pinta_nivel:
     207.  00:81C7  C9                  	RET
     208.  00:81C8                      
     209.  00:81C8                      
     210.  00:81C8                      
     211.  00:81C8                      ;;=====================================================
     212.  00:81C8                      ;;PINTA_TILE_SUELTO
     213.  00:81C8                      ;;=====================================================	
     214.  00:81C8                      ; función: 	pinta al tile que digamos en D, en la posición BC
     215.  00:81C8                      ; entrada: 	BC (posición a pintar en el mapa),D (qué se va a pintar el esa posición)
     216.  00:81C8                      ; salida: 	-
     217.  00:81C8                      ; toca:		-
     218.  00:81C8                      pinta_tile_suelto:
     219.  00:81C8  DB 99               	IN		 A,(REGEST)		;leer registro de estado (recomendado)
     220.  00:81CA  79                  	LD		 A,C			;primero byte bajo	
     221.  00:81CB  D3 99               	OUT		(REGEST),A
     222.  00:81CD  78                  	LD		 A,B			;después byte alto  ********************** preguntar a Fernando cómo que byte bajo es B
     223.  00:81CE  F6 40               	OR		1000000b		;+64
     224.  00:81D0  D3 99               	OUT		(REGEST),A
     225.  00:81D2                      	
     226.  00:81D2  7A                  	LD		A,D
     227.  00:81D3  D3 98               	OUT		(REGESCVDP),A	;escribe A en VRAM en la posición indicada por los dos OUT anteriores
     228.  00:81D5                      fin_pinta_tile_suelto:
     229.  00:81D5  C9                  	RET
     230.  00:81D6                      
     231.  00:81D6                      
     232.  00:81D6                      
     233.  00:81D6                      
     234.  00:81D6                      
     235.  00:81D6                      ;;=====================================================
     236.  00:81D6                      ;;MIRA_PINTA ENERGIA
     237.  00:81D6                      ;;=====================================================	
     238.  00:81D6                      ; función: 	actualiza el nivel de energia en la parte de puntuación
     239.  00:81D6                      ; nota:		el cuadrado más bajo de ejergía siempre estará pintado... se obviará
     240.  00:81D6                      ; entrada: 	prota.energia, array_aux_energia
     241.  00:81D6                      ; salida: 	-
     242.  00:81D6                      ; toca:		ninguno porque usa EXX
     243.  00:81D6                      
     244.  00:81D6                      ; nota importante... lo mismo interesa hacer esto con un array para comparar y un bucle
     245.  00:81D6                      
     246.  00:81D6                      
     247.  00:81D6                      mira_pinta_energia:
     248.  00:81D6  D9                  	EXX							;por si acaso guardo el contenido de HL (si veo que no es necesario guardarlo lo quito) uso esto en vez de push por el nº ciclos
     249.  00:81D7                      	
     250.  00:81D7  3A BF 86            	LD		 A,(prota_energia) 	;para las comparaciones A variable (actual) y B fijo (limites)
     251.  00:81DA                      
     252.  00:81DA  0E 00               	LD		 C,TILENEGRO		;para agilizar asignaciones en vez de un valor cte uso otro registro
     253.  00:81DC                      pinta_ener:
     254.  00:81DC                      pinta_ener_tile_8:
     255.  00:81DC  21 1B 8C            	LD		HL,ultimo_pos_array_aux_energia	;coloco puntero en array e iré decrementando
     256.  00:81DF  06 D9               	LD		 B,TILEENERG8
     257.  00:81E1  B8                  	CP		 B
     258.  00:81E2  38 04               	JR		C,pinta_ener_tile_8_negro
     259.  00:81E4  36 0E               	LD		(HL),TILEMAPVERD
     260.  00:81E6  18 01               	JR		pinta_ener_tile_7
     261.  00:81E8                      pinta_ener_tile_8_negro:
     262.  00:81E8  71                  	LD		(HL),C
     263.  00:81E9                      
     264.  00:81E9                      pinta_ener_tile_7:
     265.  00:81E9  2B                  	DEC		HL
     266.  00:81EA  06 BA               	LD		 B,TILEENERG7
     267.  00:81EC  B8                  	CP		 B
     268.  00:81ED  38 04               	JR		C,pinta_ener_tile_7_negro
     269.  00:81EF  36 0E               	LD		(HL),TILEMAPVERD
     270.  00:81F1  18 01               	JR		pinta_ener_tile_6
     271.  00:81F3                      pinta_ener_tile_7_negro:
     272.  00:81F3  71                  	LD		(HL),C
     273.  00:81F4                      
     274.  00:81F4                      pinta_ener_tile_6:
     275.  00:81F4  2B                  	DEC		HL
     276.  00:81F5  06 9B               	LD		 B,TILEENERG6
     277.  00:81F7  B8                  	CP		 B
     278.  00:81F8  38 04               	JR		C,pinta_ener_tile_6_negro
     279.  00:81FA  36 0E               	LD		(HL),14
     280.  00:81FC  18 01               	JR		pinta_ener_tile_5
     281.  00:81FE                      pinta_ener_tile_6_negro:
     282.  00:81FE  71                  	LD		(HL),C
     283.  00:81FF                      
     284.  00:81FF                      pinta_ener_tile_5:
     285.  00:81FF  2B                  	DEC		HL
     286.  00:8200  06 7C               	LD		 B,TILEENERG5
     287.  00:8202  B8                  	CP		 B
     288.  00:8203  38 04               	JR		C,pinta_ener_tile_5_negro
     289.  00:8205  36 0E               	LD		(HL),TILEMAPVERD
     290.  00:8207  18 01               	JR		pinta_ener_tile_4
     291.  00:8209                      pinta_ener_tile_5_negro:
     292.  00:8209  71                  	LD		(HL),C
     293.  00:820A                      
     294.  00:820A                      pinta_ener_tile_4:
     295.  00:820A  2B                  	DEC		HL
     296.  00:820B  06 5D               	LD		 B,TILEENERG4
     297.  00:820D  B8                  	CP		 B
     298.  00:820E  38 04               	JR		C,pinta_ener_tile_4_negro
     299.  00:8210  36 0F               	LD		(HL),TILEMAPAMAR
     300.  00:8212  18 01               	JR		pinta_ener_tile_3
     301.  00:8214                      pinta_ener_tile_4_negro:
     302.  00:8214  71                  	LD		(HL),C
     303.  00:8215                      	
     304.  00:8215                      pinta_ener_tile_3:
     305.  00:8215  2B                  	DEC		HL
     306.  00:8216  06 3E               	LD		 B,TILEENERG3
     307.  00:8218  B8                  	CP		 B
     308.  00:8219  38 04               	JR		C,pinta_ener_tile_3_negro
     309.  00:821B  36 0F               	LD		(HL),TILEMAPAMAR
     310.  00:821D  18 01               	JR		pinta_ener_tile_2
     311.  00:821F                      pinta_ener_tile_3_negro:
     312.  00:821F  71                  	LD		(HL),C
     313.  00:8220                      
     314.  00:8220                      pinta_ener_tile_2:
     315.  00:8220  2B                  	DEC		HL
     316.  00:8221  06 1F               	LD		 B,TILEENERG2
     317.  00:8223  B8                  	CP		 B
     318.  00:8224  38 04               	JR		C,pinta_ener_tile_2_negro
     319.  00:8226  36 10               	LD		(HL),TILEMAPROJO
     320.  00:8228  18 01               	JR		fin_mira_pinta_energia		;siempre estará pintado el cuadro mínimo
     321.  00:822A                      pinta_ener_tile_2_negro:
     322.  00:822A  71                  	LD		(HL),C
     323.  00:822B                      
     324.  00:822B                      fin_mira_pinta_energia:
     325.  00:822B  D9                  	EXX
     326.  00:822C  C9                  	RET
     327.  00:822D                      
     328.  00:822D                      
     329.  00:822D                      ;;=====================================================
     330.  00:822D                      ;;PINTA_ENERGIA
     331.  00:822D                      ;;=====================================================	
     332.  00:822D                      ; función: 	actualiza el mapa de tiles para que en el próximo refresco se pinte la barra de energia actual
     333.  00:822D                      ; entrada: 	array_aux_energia
     334.  00:822D                      ; toca:		AF
     335.  00:822D                      pinta_energia:
     336.  00:822D  D9                  	EXX
     337.  00:822E                      	
     338.  00:822E  21 14 8C            	LD		HL, array_aux_energia
     339.  00:8231  11 88 1A            	LD		DE, TILMAP + POSENERG 	;inicio posición en el mapa de tiles de las vidas
     340.  00:8234  01 08 00            	LD		BC, NMAXVIDREL			;hay 8 posiciones para vidas/reliquias o espacios en negro si no tiene 8 vidas/reliquias
     341.  00:8237  CD 5C 00            	CALL	LDIRVM
     342.  00:823A                      		
     343.  00:823A  D9                  	EXX
     344.  00:823B                      fin_pinta_energia:
     345.  00:823B  C9                  	RET
     346.  00:823C                      
     347.  00:823C                      
     348.  00:823C                      
     349.  00:823C                      ;;=====================================================
     350.  00:823C                      ;;BORRA_MAPA
     351.  00:823C                      ;;=====================================================	
     352.  00:823C                      ; función: 	pone todas las habitaciones del mapa a negro (los tiles del mapa los rellena con un array a 0 - caracter en negro)
     353.  00:823C                      ; entrada: 	array_aux_mapa_limpiar
     354.  00:823C                      ; salida: 	-
     355.  00:823C                      ; toca:		AF
     356.  00:823C                      borra_mapa:
     357.  00:823C  D9                  	EXX
     358.  00:823D                      	
     359.  00:823D  21 1C 8C            	LD		HL,array_aux_mapa_limpiar
     360.  00:8240  11 F8 1A            	LD		DE,TILMAP + POSMAPLIN1 	;inicio posición en el mapa de tiles de la primera fila del mapa
     361.  00:8243  01 07 00            	LD		BC,NHABNIVEL			;cada nivel son 7 filas con 7 habitaciones "posibles"
     362.  00:8246  CD 5C 00            	CALL	LDIRVM
     363.  00:8249                      	
     364.  00:8249  21 1C 8C            	LD		HL,array_aux_mapa_limpiar
     365.  00:824C  11 D8 1A            	LD		DE,TILMAP + POSMAPLIN2
     366.  00:824F  01 07 00            	LD		BC,NHABNIVEL
     367.  00:8252  CD 5C 00            	CALL	LDIRVM
     368.  00:8255                      
     369.  00:8255  21 1C 8C            	LD		HL,array_aux_mapa_limpiar
     370.  00:8258  11 B8 1A            	LD		DE,TILMAP + POSMAPLIN3
     371.  00:825B  01 07 00            	LD		BC,NHABNIVEL
     372.  00:825E  CD 5C 00            	CALL	LDIRVM
     373.  00:8261                      
     374.  00:8261  21 1C 8C            	LD		HL,array_aux_mapa_limpiar	
     375.  00:8264  11 98 1A            	LD		DE,TILMAP + POSMAPLIN4
     376.  00:8267  01 07 00            	LD		BC,NHABNIVEL
     377.  00:826A  CD 5C 00            	CALL	LDIRVM
     378.  00:826D                      
     379.  00:826D  21 1C 8C            	LD		HL,array_aux_mapa_limpiar	
     380.  00:8270  11 78 1A            	LD		DE,TILMAP + POSMAPLIN5
     381.  00:8273  01 07 00            	LD		BC,NHABNIVEL
     382.  00:8276  CD 5C 00            	CALL	LDIRVM
     383.  00:8279                      
     384.  00:8279  21 1C 8C            	LD		HL,array_aux_mapa_limpiar	
     385.  00:827C  11 58 1A            	LD		DE,TILMAP + POSMAPLIN6
     386.  00:827F  01 07 00            	LD		BC,NHABNIVEL
     387.  00:8282  CD 5C 00            	CALL	LDIRVM
     388.  00:8285                      
     389.  00:8285  21 1C 8C            	LD		HL,array_aux_mapa_limpiar	
     390.  00:8288  11 38 1A            	LD		DE,TILMAP + POSMAPLIN7
     391.  00:828B  01 07 00            	LD		BC,NHABNIVEL
     392.  00:828E  CD 5C 00            	CALL	LDIRVM
     393.  00:8291                      	
     394.  00:8291  D9                  	EXX
     395.  00:8292                      fin_borra_mapa:
     396.  00:8292  C9                  	RET
     397.  00:8293                      
     398.  00:8293                      
     399.  00:8293                      
     400.  00:8293                      
     401.  00:8293                      
     402.  00:8293                      
     403.  00:8293                      
     404.  00:8293                      
     405.  00:8293                      
     406.  00:8293                      ;=====================================================
     407.  00:8293                      ;;PINTA_ARRAY
     408.  00:8293                      ;;=====================================================	
     409.  00:8293                      ;;;funcion:  se le pasa un array con posiciones de tiles y coordenadas x e y y los pinta en screen 2
     410.  00:8293                      ;;entrada:	wordaux1 (pos inicio sc2 donde pintar) y wordaux2 (puntero al array a pintar), BC (posición en tilemap) , D filas y E columnas
     411.  00:8293                      ;;salida:	-
     412.  00:8293                      ;;importante: necesita de una variable wordaux1 tipo WD (wordaux1: 	DW	0)
     413.  00:8293                      ;; ejemplo llamada:
     414.  00:8293                      	;~ LD		HL,array_tiles					;guardo puntero al array a pintar (como psar por referencia)
     415.  00:8293                      	;~ LD		(wordaux2),HL					;en la variable wordaux2
     416.  00:8293                      	;~ LD		HL,SC2MAP + 256 + 32			;calcula posición en tilemap
     417.  00:8293                      	;~ LD		(wordaux1),HL					;guarda valor pos tilemap en wordaux1
     418.  00:8293                      	;~ LD		B,H								;coloca posición tilemap BC
     419.  00:8293                      	;~ LD		C,L
     420.  00:8293                      	;~ LD		D,2								;nº de filas
     421.  00:8293                      	;~ LD		E,3								;nº de columnas
     422.  00:8293                      	;~ CALL	pinta_array
     423.  00:8293                      
     424.  00:8293                      pinta_array:
     425.  00:8293  F5                  	PUSH	AF
     426.  00:8294                      	
     427.  00:8294                      	;contamos con que la posición "global" en el tilemap está ya en BC
     428.  00:8294                      	;y el puntero al array a pintar en wordaux2 y la posición en tilemap sc2 en wordaux1
     429.  00:8294                      	;inicializa
     430.  00:8294  DB 99               	IN		 A,(REGEST)		;leer registro de estado (recomendado)
     431.  00:8296                      	
     432.  00:8296                      	;coloca puntero para pintar tile según BC
     433.  00:8296  79                  	LD		 A,C			;primero byte bajo	
     434.  00:8297  D3 99               	OUT		(REGEST),A
     435.  00:8299  78                  	LD		 A,B			;después byte alto  ********************** preguntar a Fernando cómo que byte bajo es B
     436.  00:829A  F6 40               	OR		1000000b		;+64
     437.  00:829C  D3 99               	OUT		(REGEST),A
     438.  00:829E                      
     439.  00:829E                      	
     440.  00:829E  2A C8 82            	LD		HL,(wordaux2)	;HL es lo que se pintará y le he pasado el puntero del array tilemap a pintar
     441.  00:82A1                      .pa_pinta_fila:
     442.  00:82A1  43                  	LD		 B,E
     443.  00:82A2                      .pa_pinta_columnas: 		;finta la fila (pintando las columnas)
     444.  00:82A2  7E                  	LD		 A,(HL)
     445.  00:82A3  D3 98               	OUT		(REGESCVDP),A	;escribe A en VRAM en la posición indicada por los dos OUT anteriores
     446.  00:82A5  23                  	INC		HL
     447.  00:82A6  10 FA               	DJNZ	.pa_pinta_columnas
     448.  00:82A8                      	
     449.  00:82A8                      	;no es una solución elegante lo de repetir código pero queda claro
     450.  00:82A8                      	;por si hay otra fila
     451.  00:82A8  E5                  	PUSH	HL
     452.  00:82A9  2A C6 82            	LD		HL,(wordaux1)
     453.  00:82AC  01 20 00            	LD		BC,32
     454.  00:82AF  09                  	ADD		HL,BC
     455.  00:82B0  22 C6 82            	LD		(wordaux1),HL
     456.  00:82B3  44                  	LD		B,H
     457.  00:82B4  4D                  	LD		C,L
     458.  00:82B5  E1                  	POP		HL
     459.  00:82B6                      	
     460.  00:82B6  79                  	LD		 A,C			;primero byte bajo	
     461.  00:82B7  D3 99               	OUT		(REGEST),A
     462.  00:82B9  78                  	LD		 A,B			;después byte alto 
     463.  00:82BA  F6 40               	OR		1000000b		;+64
     464.  00:82BC  D3 99               	OUT		(REGEST),A
     465.  00:82BE                      	
     466.  00:82BE                      	;si hay otra fila repite
     467.  00:82BE  15                  	DEC		 D
     468.  00:82BF  7A                  	LD		 A,D		;¿hay otra fila?
     469.  00:82C0  B7                  	OR		 A
     470.  00:82C1  C2 A1 82            	JP		NZ,.pa_pinta_fila
     471.  00:82C4                      	
     472.  00:82C4  F1                  	POP		AF
     473.  00:82C5                      	
     474.  00:82C5                      fin_pinta_array:
     475.  00:82C5  C9                  	RET
     476.  00:82C6                      ;;variables asocidas a la función (no sé si dejarlo aquí y encapsularlo todo o hacerla reutilizable)
     477.  00:82C6                      ;; por de pronto la dejo aquí
     478.  00:82C6  00 00               wordaux1:		DW	0	;almacena la posición en el tilemap 0 al 675
     479.  00:82C8  00 00               wordaux2:		DW	0	;almacena puntero a array de tiles (posiciones en realidad) a pintar (posiciones repetidas en los 3 bancos)
     480.  00:82CA                      
     481.  00:82CA                      
     482.  00:82CA                      
     483.  00:82CA                      
     484.  00:82CA                      
     485.  00:82CA                      ;;=====================================================
     486.  00:82CA                      ;;PINTA_PUERTAS
     487.  00:82CA                      ;;=====================================================	
     488.  00:82CA                      ; función: 	examina A y mira si tiene que pintar puertas de los lados, arriba o abrajo o las escaleras (o no)
     489.  00:82CA                      ; entrada: 	habitacion_actual 1 escalera 1 puerta arriba 1 pu der 1 pu aba 1 pu izq (si es 0 pinta pared)
     490.  00:82CA                      ; salida: 	-
     491.  00:82CA                      ; toca:		- uso EXX
     492.  00:82CA                      pinta_puertas:
     493.  00:82CA  D9                  	EXX
     494.  00:82CB                      	
     495.  00:82CB  3A E0 88            	LD		 A, (habitacion_actual)		;se mete en A porque la función pide A y para no buscar el valor 4 veces
     496.  00:82CE                      
     497.  00:82CE                      ;	BIT		 4, A
     498.  00:82CE                      ;	CALL	nz, pinta_escalera
     499.  00:82CE                      
     500.  00:82CE  CB 5F               	BIT		 3, A
     501.  00:82D0  C4 FD 82            	CALL	nz, pinta_puerta_arr
     502.  00:82D3                      
     503.  00:82D3  CB 57               	BIT		 2, A
     504.  00:82D5  C4 12 83            	CALL	nz, pinta_puerta_der
     505.  00:82D8                      
     506.  00:82D8  CB 4F               	BIT		 1, A
     507.  00:82DA  C4 E8 82            	CALL	nz, pinta_puerta_aba
     508.  00:82DD                      	
     509.  00:82DD  CB 47               	BIT		 0, A
     510.  00:82DF  C4 27 83            	CALL	nz, pinta_puerta_izq
     511.  00:82E2                      	
     512.  00:82E2  AF                  	XOR		 A
     513.  00:82E3  32 23 8C            	LD		(actualiza_puertas_sn), A ;(1 actualiza y 0 no actualiza puertas) se pone a 0 para que no actualice todo el tiempo (ya se ha actualizado)... me hubiera gustado poner cte NO pero es más rápido así
     514.  00:82E6                      
     515.  00:82E6  D9                  	EXX
     516.  00:82E7                      fin_pinta_puertas:
     517.  00:82E7  C9                  	RET
     518.  00:82E8                      
     519.  00:82E8                      
     520.  00:82E8                      
     521.  00:82E8                      
     522.  00:82E8                      ;;=====================================================
     523.  00:82E8                      ;;PINTA_PUERTA_ABA
     524.  00:82E8                      ;;=====================================================	
     525.  00:82E8                      ; función: 	pinta la puerta de abajo
     526.  00:82E8                      ; entrada: 	array_puerta_abajo, wordaux2, wordaux1
     527.  00:82E8                      ; salida: 	-
     528.  00:82E8                      ; toca:		HL,BC, DE
     529.  00:82E8                      pinta_puerta_aba:
     530.  00:82E8  21 4D 8C            	LD		HL,array_puerta_abajo			;guardo puntero al array a pintar (como psar por referencia)
     531.  00:82EB  22 C8 82            	LD		(wordaux2),HL					;en la variable wordaux2
     532.  00:82EE  21 EE 19            	LD		HL,TILMAP + POSPUERABAJ			;calcula posición en tilemap
     533.  00:82F1  22 C6 82            	LD		(wordaux1),HL					;guarda valor pos tilemap en wordaux1
     534.  00:82F4  44                  	LD		B,H								;coloca posición tilemap BC
     535.  00:82F5  4D                  	LD		C,L
     536.  00:82F6  16 01               	LD		D,1								;nº de filas
     537.  00:82F8  1E 04               	LD		E,4								;nº de columnas
     538.  00:82FA  C3 93 82            	JP		pinta_array
     539.  00:82FD                      	;~ CALL	pinta_array
     540.  00:82FD                      fin_pinta_puerta_aba:
     541.  00:82FD                      	;~ RET
     542.  00:82FD                      
     543.  00:82FD                      ;;=====================================================
     544.  00:82FD                      ;;PINTA_PUERTA_ARR
     545.  00:82FD                      ;;=====================================================	
     546.  00:82FD                      ; función: 	pinta la puerta de arriba
     547.  00:82FD                      ; entrada: 	array_puerta_arriba, wordaux2, wordaux1
     548.  00:82FD                      ; salida: 	-
     549.  00:82FD                      ; toca:		HL,BC, DE
     550.  00:82FD                      pinta_puerta_arr:
     551.  00:82FD  21 24 8C            	LD		HL,array_puerta_arriba			;guardo puntero al array a pintar (como psar por referencia)
     552.  00:8300  22 C8 82            	LD		(wordaux2),HL					;en la variable wordaux2
     553.  00:8303  21 8E 18            	LD		HL,TILMAP + POSPUERARRI			;calcula posición en tilemap
     554.  00:8306  22 C6 82            	LD		(wordaux1),HL					;guarda valor pos tilemap en wordaux1
     555.  00:8309  44                  	LD		B,H								;coloca posición tilemap BC
     556.  00:830A  4D                  	LD		C,L
     557.  00:830B  16 05               	LD		D,5								;nº de filas
     558.  00:830D  1E 04               	LD		E,4								;nº de columnas
     559.  00:830F  C3 93 82            	JP		pinta_array
     560.  00:8312                      	;~ CALL	pinta_array
     561.  00:8312                      fin_pinta_puerta_arr:
     562.  00:8312                      	;~ RET
     563.  00:8312                      
     564.  00:8312                      ;;=====================================================
     565.  00:8312                      ;;PINTA_PUERTA_DER
     566.  00:8312                      ;;=====================================================	
     567.  00:8312                      ; función: 	pinta la puerta de la derecha
     568.  00:8312                      ; entrada: 	array_puerta_derecha, wordaux2, wordaux1
     569.  00:8312                      ; salida: 	-
     570.  00:8312                      ; toca:		HL,BC, DE
     571.  00:8312                      pinta_puerta_der:
     572.  00:8312  21 38 8C            	LD		HL,array_puerta_derecha			;guardo puntero al array a pintar (como psar por referencia)
     573.  00:8315  22 C8 82            	LD		(wordaux2),HL					;en la variable wordaux2
     574.  00:8318  21 FC 18            	LD		HL,TILMAP + POSPUERDERE			;calcula posición en tilemap
     575.  00:831B  22 C6 82            	LD		(wordaux1),HL					;guarda valor pos tilemap en wordaux1
     576.  00:831E  44                  	LD		B,H								;coloca posición tilemap BC
     577.  00:831F  4D                  	LD		C,L
     578.  00:8320  16 07               	LD		D,7								;nº de filas
     579.  00:8322  1E 03               	LD		E,3								;nº de columnas
     580.  00:8324  C3 93 82            	JP		pinta_array
     581.  00:8327                      	;~ CALL	pinta_array
     582.  00:8327                      fin_pinta_puerta_der:
     583.  00:8327                      	;~ RET
     584.  00:8327                      	
     585.  00:8327                      ;;=====================================================
     586.  00:8327                      ;;PINTA_PUERTA_IZQ
     587.  00:8327                      ;;=====================================================	
     588.  00:8327                      ; función: 	pinta la puerta de la izquierda
     589.  00:8327                      ; entrada: 	array_puerta_izquierda, wordaux2, wordaux1
     590.  00:8327                      ; salida: 	-
     591.  00:8327                      ; toca:		HL,BC, DE
     592.  00:8327                      pinta_puerta_izq:
     593.  00:8327  21 51 8C            	LD		HL,array_puerta_izquierda		;guardo puntero al array a pintar (como psar por referencia)
     594.  00:832A  22 C8 82            	LD		(wordaux2),HL					;en la variable wordaux2
     595.  00:832D  21 E1 18            	LD		HL,TILMAP + POSPUERIZQU			;calcula posición en tilemap
     596.  00:8330  22 C6 82            	LD		(wordaux1),HL					;guarda valor pos tilemap en wordaux1
     597.  00:8333  44                  	LD		B,H								;coloca posición tilemap BC
     598.  00:8334  4D                  	LD		C,L
     599.  00:8335  16 07               	LD		D,7								;nº de filas
     600.  00:8337  1E 03               	LD		E,3								;nº de columnas
     601.  00:8339  C3 93 82            	JP		pinta_array
     602.  00:833C                      	;~ CALL	pinta_array
     603.  00:833C                      fin_pinta_puerta_izq:
     604.  00:833C                      	;~ RET
     605.  00:833C                      
     606.  00:833C                      
     607.  00:833C                      
     608.  00:833C                      
     609.  00:833C                      
     610.  00:833C                      ;;=====================================================
     611.  00:833C                      ;;POSICIONA_EN_MAPA
     612.  00:833C                      ;;=====================================================	
     613.  00:833C                      ; función: 	en el mapa de marcadores de la derecha/abajo marca un cuadro en gris o con un muñeco
     614.  00:833C                      ;			según el valor de prota.posición pinta entrá un muñeco y por donde vaya pasando el prota
     615.  00:833C                      ;			quedará en gris
     616.  00:833C                      ; entrada: 	A=0 gris 1 - tile 0, A=1 muñeco - tile 19, prota.pos_mapy,prota.pos_mapx)
     617.  00:833C                      ; salida: 	-
     618.  00:833C                      ; toca:		todos
     619.  00:833C                      posiciona_en_mapa:
     620.  00:833C  F5                  	PUSH	AF		;almacenamos el tipo a pintar para cuando terminemos de calcular la coordenada
     621.  00:833D                      	
     622.  00:833D                      	;#0238 es la posición en mapa de tiles de la esquina superior izquierda del mapa (569 en decimal)
     623.  00:833D  21 38 1A            	LD		HL, TILMAP + POSMAPA;pos inicial
     624.  00:8340                      	
     625.  00:8340                      	;ahora se le calcula la fila a pintar ya que va de abajo a arriba y no como en el mapa + columna
     626.  00:8340                      .sumar_fila:
     627.  00:8340  3A BE 86            	LD		 A,(prota_pos_mapy)
     628.  00:8343  FE 01               	CP		 1
     629.  00:8345  28 2A               	JR		 Z, .fila_1
     630.  00:8347  3A BE 86            	LD		 A,(prota_pos_mapy)
     631.  00:834A  FE 02               	CP		 2
     632.  00:834C  28 2A               	JR		 Z, .fila_2
     633.  00:834E  3A BE 86            	LD		 A,(prota_pos_mapy)
     634.  00:8351  FE 03               	CP		 3
     635.  00:8353  28 2A               	JR		 Z, .fila_3
     636.  00:8355  3A BE 86            	LD		 A,(prota_pos_mapy)
     637.  00:8358  FE 04               	CP		 4
     638.  00:835A  28 2A               	JR		 Z, .fila_4
     639.  00:835C  3A BE 86            	LD		 A,(prota_pos_mapy)
     640.  00:835F  FE 05               	CP		 5
     641.  00:8361  28 2A               	JR		 Z, .fila_5
     642.  00:8363  3A BE 86            	LD		 A,(prota_pos_mapy)
     643.  00:8366  FE 06               	CP		 6
     644.  00:8368  28 2A               	JR		 Z, .sumar_columna
     645.  00:836A                      	;no consulto la 0 porque si no es ninguna de las anteriores es 0 y por tanto sería un jr fila_0
     646.  00:836A                      	
     647.  00:836A                      .fila_0:
     648.  00:836A  11 C0 00            	LD		DE, 192
     649.  00:836D  19                  	ADD		HL, DE			;nota: se que repito el ADD pero la otra opción es inicializar DE y ya tarda mucho la funicón (es por velicidad)
     650.  00:836E  C3 94 83            	JP		.sumar_columna
     651.  00:8371                      .fila_1:
     652.  00:8371  11 A0 00            	LD		DE, 160
     653.  00:8374  19                  	ADD		HL, DE
     654.  00:8375  C3 94 83            	JP		.sumar_columna
     655.  00:8378                      .fila_2:
     656.  00:8378  11 80 00            	LD		DE, 128
     657.  00:837B  19                  	ADD		HL, DE
     658.  00:837C  C3 94 83            	JP		.sumar_columna
     659.  00:837F                      .fila_3:
     660.  00:837F  11 60 00            	LD		DE, 96
     661.  00:8382  19                  	ADD		HL, DE
     662.  00:8383  C3 94 83            	JP		.sumar_columna
     663.  00:8386                      .fila_4:
     664.  00:8386  11 40 00            	LD		DE, 64
     665.  00:8389  19                  	ADD		HL, DE
     666.  00:838A  C3 94 83            	JP		.sumar_columna
     667.  00:838D                      .fila_5:
     668.  00:838D  11 20 00            	LD		DE, 32
     669.  00:8390  19                  	ADD		HL, DE
     670.  00:8391  C3 94 83            	JP		.sumar_columna
     671.  00:8394                      .fila_6:
     672.  00:8394                      	;pongo fila_6 por poner ya que si es la fila 6 equiv. a primera fila del mapa y por tanto no suma fila
     673.  00:8394                      	
     674.  00:8394                      	
     675.  00:8394                      .sumar_columna:
     676.  00:8394  3A BD 86            	LD 		 A, (prota_pos_mapx) ;POS X
     677.  00:8397  16 00               	LD		 D, 0
     678.  00:8399  5F                  	LD		 E, A
     679.  00:839A  19                  	ADD		HL, DE
     680.  00:839B                      	
     681.  00:839B                      	;resultado en BC para usar en la función pinta_tile_suelto
     682.  00:839B  44                  	LD		 B, H
     683.  00:839C  4D                  	LD		 C, L
     684.  00:839D                      	
     685.  00:839D                      	;terminado de fijar la coordenada recuperamos a para ver el tipo
     686.  00:839D  F1                  	POP		 AF
     687.  00:839E  B7                  	OR		 A
     688.  00:839F  CA A7 83            	JP		 Z, pinta_pos_mapa_vacio
     689.  00:83A2  16 13               	LD		 D, TILEMAPPROT
     690.  00:83A4  C3 A9 83            	JP		fin_pinta_pos_mapa
     691.  00:83A7                      pinta_pos_mapa_vacio:
     692.  00:83A7  16 09               	LD		 D, TILEMAPVACI				;********************* se puede hacer mejor o está bien usar push y pop ¿?¿?¿?
     693.  00:83A9                      
     694.  00:83A9                      fin_pinta_pos_mapa:
     695.  00:83A9  C3 C8 81            	JP		pinta_tile_suelto
     696.  00:83AC                      	;~ CALL	pinta_tile_suelto
     697.  00:83AC                      fin_posiciona_en_mapa:
     698.  00:83AC                      	;~ RET
     699.  00:83AC                      
     700.  00:83AC                      
     146   00:83AC                      	
     147   00:83AC                      	include "subr_sprites.asm"
       1.  00:83AC                      
       2.  00:83AC                      ;;=====================================================
       3.  00:83AC                      ;;SUBRUTINAS ENCARGADAS DE MANEJAR LOS SPRITES
       4.  00:83AC                      ;;=====================================================	
       5.  00:83AC                      
       6.  00:83AC                      
       7.  00:83AC                      ;; PREGUNTAR SI A FERNANDO SI ES MEJOR USAR LISTAS O ALGO PARA AHORRAR CÓDIGO
       8.  00:83AC                      
       9.  00:83AC                      
      10.  00:83AC                      ;;=====================================================
      11.  00:83AC                      ;;CARGA_PATRONES_SPRITES_NIVEL1
      12.  00:83AC                      ;;=====================================================	
      13.  00:83AC                      ; función: 	copia los patrones de los sprites que e van a usar en el nivel 1 en vram
      14.  00:83AC                      ; entrada: 	-
      15.  00:83AC                      ; salida: 	-
      16.  00:83AC                      ; toca: 	-
      17.  00:83AC                      carga_patrones_sprites_nivel1:
      18.  00:83AC  F5                  	PUSH	AF					;guardo copia de AF
      19.  00:83AD  D9                  	EXX							;guardo copia de BC,DE y HL
      20.  00:83AE                      	
      21.  00:83AE                      	;sprite punto de mira		(este no será necesario cargarlo en ningún otro nivel del juego, sólo el primero)
      22.  00:83AE  21 C0 86            	LD		HL,sprite_punto_mira_1
      23.  00:83B1  11 00 38            	LD		DE,#3800
      24.  00:83B4  01 20 00            	LD		BC,32				;32 bytes (sprites de 2 x 2)
      25.  00:83B7  CD 5C 00            	CALL	LDIRVM
      26.  00:83BA  21 E0 86            	LD		HL,sprite_punto_mira_2
      27.  00:83BD  11 20 38            	LD		DE,#3820
      28.  00:83C0  01 20 00            	LD		BC,32				;32 bytes (sprites de 2 x 2)
      29.  00:83C3  CD 5C 00            	CALL	LDIRVM
      30.  00:83C6                      	
      31.  00:83C6                      	;sprite sprite_punto_mira_1_mejorado
      32.  00:83C6  21 00 87            	LD		HL,sprite_punto_mira_1_mejorado
      33.  00:83C9  11 40 38            	LD		DE,#3840
      34.  00:83CC  01 20 00            	LD		BC,32				;32 bytes (sprites de 2 x 2)
      35.  00:83CF  CD 5C 00            	CALL	LDIRVM
      36.  00:83D2  21 20 87            	LD		HL,sprite_punto_mira_2_mejorado
      37.  00:83D5  11 60 38            	LD		DE,#3860
      38.  00:83D8  01 20 00            	LD		BC,32				;32 bytes (sprites de 2 x 2)
      39.  00:83DB  CD 5C 00            	CALL	LDIRVM
      40.  00:83DE                      
      41.  00:83DE                      	;sprite sprite_reliquia
      42.  00:83DE  21 40 87            	LD		HL,sprite_reliquia
      43.  00:83E1  11 80 38            	LD		DE,#3880
      44.  00:83E4  01 20 00            	LD		BC,32				;32 bytes (sprites de 2 x 2)
      45.  00:83E7  CD 5C 00            	CALL	LDIRVM
      46.  00:83EA                      
      47.  00:83EA                      	;sprite sprite_vida_extra
      48.  00:83EA  21 40 87            	LD		HL,sprite_reliquia
      49.  00:83ED  11 A0 38            	LD		DE,#38A0
      50.  00:83F0  01 20 00            	LD		BC,32				;32 bytes (sprites de 2 x 2)
      51.  00:83F3  CD 5C 00            	CALL	LDIRVM
      52.  00:83F6                      
      53.  00:83F6                      	;sprite sprite_planta
      54.  00:83F6  21 80 87            	LD		HL,sprite_planta
      55.  00:83F9  11 C0 38            	LD		DE,#38C0
      56.  00:83FC  01 20 00            	LD		BC,32				;32 bytes (sprites de 2 x 2)
      57.  00:83FF  CD 5C 00            	CALL	LDIRVM
      58.  00:8402                      	
      59.  00:8402                      	;sprite sprite_ballesta_mejorada
      60.  00:8402  21 A0 87            	LD		HL,sprite_ballesta_mejorada
      61.  00:8405  11 E0 38            	LD		DE,#38E0
      62.  00:8408  01 20 00            	LD		BC,32				;32 bytes (sprites de 2 x 2)
      63.  00:840B  CD 5C 00            	CALL	LDIRVM
      64.  00:840E                      
      65.  00:840E                      	;sprite sprite_ciempies
      66.  00:840E  21 C0 87            	LD		HL,sprite_ciempies1
      67.  00:8411  11 00 39            	LD		DE,#3900
      68.  00:8414  01 20 00            	LD		BC,32				;32 bytes (sprites de 2 x 2)
      69.  00:8417  CD 5C 00            	CALL	LDIRVM
      70.  00:841A  21 E0 87            	LD		HL,sprite_ciempies2
      71.  00:841D  11 20 39            	LD		DE,#3920
      72.  00:8420  01 20 00            	LD		BC,32				;32 bytes (sprites de 2 x 2)
      73.  00:8423  CD 5C 00            	CALL	LDIRVM		
      74.  00:8426                      
      75.  00:8426                      	;sprite sprite_arana
      76.  00:8426  21 00 88            	LD		HL,sprite_arana1
      77.  00:8429  11 40 39            	LD		DE,#3940
      78.  00:842C  01 20 00            	LD		BC,32				;32 bytes (sprites de 2 x 2)
      79.  00:842F  CD 5C 00            	CALL	LDIRVM
      80.  00:8432  21 20 88            	LD		HL,sprite_arana2
      81.  00:8435  11 60 39            	LD		DE,#3960
      82.  00:8438  01 20 00            	LD		BC,32				;32 bytes (sprites de 2 x 2)
      83.  00:843B  CD 5C 00            	CALL	LDIRVM	
      84.  00:843E                      
      85.  00:843E                      	;sprite sprite_serpiente
      86.  00:843E  21 40 88            	LD		HL,sprite_serpiente1
      87.  00:8441  11 80 39            	LD		DE,#3980
      88.  00:8444  01 20 00            	LD		BC,32				;32 bytes (sprites de 2 x 2)
      89.  00:8447  CD 5C 00            	CALL	LDIRVM
      90.  00:844A  21 60 88            	LD		HL,sprite_serpiente2
      91.  00:844D  11 A0 39            	LD		DE,#39A0
      92.  00:8450  01 20 00            	LD		BC,32				;32 bytes (sprites de 2 x 2)
      93.  00:8453  CD 5C 00            	CALL	LDIRVM	
      94.  00:8456                      
      95.  00:8456                      	;sprite sprite_murcielago
      96.  00:8456  21 80 88            	LD		HL,sprite_murcielago1
      97.  00:8459  11 C0 39            	LD		DE,#39C0
      98.  00:845C  01 20 00            	LD		BC,32				;32 bytes (sprites de 2 x 2)
      99.  00:845F  CD 5C 00            	CALL	LDIRVM
     100.  00:8462  21 A0 88            	LD		HL,sprite_murcielago2
     101.  00:8465  11 E0 39            	LD		DE,#39E0
     102.  00:8468  01 20 00            	LD		BC,32				;32 bytes (sprites de 2 x 2)
     103.  00:846B  CD 5C 00            	CALL	LDIRVM
     104.  00:846E                      	
     105.  00:846E                      	;sprite sprite_explosion
     106.  00:846E  21 C0 88            	LD		HL,sprite_explosion
     107.  00:8471  11 20 3A            	LD		DE,#3A20
     108.  00:8474  01 20 00            	LD		BC,32				;32 bytes (sprites de 2 x 2)
     109.  00:8477  CD 5C 00            	CALL	LDIRVM
     110.  00:847A                      	
     111.  00:847A  D9                  	EXX							;recupero copia de BC,DE y HL
     112.  00:847B  F1                  	POP		AF					;recupero copia de AF
     113.  00:847C                      fin_carga_patrones_sprites:
     114.  00:847C  C9                  	RET
     115.  00:847D                      
     116.  00:847D                      
     117.  00:847D                      ;;=====================================================
     118.  00:847D                      ;;ACTUALIZA_ARRAY_SPRITES_VRAM
     119.  00:847D                      ;;=====================================================	
     120.  00:847D                      ; función: 	copia el array con los valores de los sprites (pos, color, plano) en VRAM
     121.  00:847D                      ; entrada: 	-
     122.  00:847D                      ; salida: 	-
     123.  00:847D                      ; toca: 	todos los registros. Como me interesa la velocidad, si necesito copiar de algo lo hago fuera
     124.  00:847D                      render_sprites:
     125.  00:847D                      	;volcando el array con toda la info de los sprites a la zona de atributos de sprites
     126.  00:847D  21 78 8C            	LD		HL,array_sprites
     127.  00:8480  11 00 1B            	LD		DE,SPRART
     128.  00:8483  01 80 00            	LD		BC,4 * 32				;32 sprites x 4 bytes controlando el sprite (Y, X, plano, color)
     129.  00:8486  C3 5C 00            	JP		LDIRVM
     130.  00:8489                      	;~ CALL	LDIRVM
     131.  00:8489                      fin_actualiza_array_sprites_vram:
     132.  00:8489                      	;~ RET
     133.  00:8489                      
     134.  00:8489                      
     135.  00:8489                      
     136.  00:8489                      
     137.  00:8489                      ;;=====================================================
     138.  00:8489                      ;;VUELCA_RESULTADO_PUNTOMIRA_ARRAY
     139.  00:8489                      ;;=====================================================	
     140.  00:8489                      ; función: 	coloca los valores del punto de mira en la variable array_sprites para ser volcados en VRAM
     141.  00:8489                      ; entrada: 	array_sprites_pm, prota.XXXXX
     142.  00:8489                      ; salida: 	-
     143.  00:8489                      ; toca: 	-
     144.  00:8489                      vuelca_resultado_puntomira_array:
     145.  00:8489  DD 21 78 8C         	LD		IX, array_sprites_pm
     146.  00:848D                      	;posición y de los dos sprites que conforman el punto de mira
     147.  00:848D  3A F3 8B            	LD		 A, (prota.posy)
     148.  00:8490  DD 77 00            	LD		(IX  ), A
     149.  00:8493  DD 77 04            	LD		(IX+4), A
     150.  00:8496                      	;posición x de los dos sprites que conforman el punto de mira
     151.  00:8496  3A F2 8B            	LD		 A, (prota.posx)
     152.  00:8499  DD 77 01            	LD		(IX+1), A
     153.  00:849C  DD 77 05            	LD		(IX+5), A
     154.  00:849F                      	;plano
     155.  00:849F  DD 36 02 00         	LD		(IX+2), 0
     156.  00:84A3  DD 36 06 04         	LD		(IX+6), 4	;al ser sprites de 16x16 hay que ir de 4 en 4
     157.  00:84A7                      	;color
     158.  00:84A7  3A F4 8B            	LD		 A, (prota.escena)
     159.  00:84AA  B7                  	OR		 A
     160.  00:84AB  C2 B7 84            	JP		NZ,.codigo_color_2
     161.  00:84AE                      .codigo_color_1:
     162.  00:84AE  DD 36 03 0F         	LD		(IX+3), COLBLANCO
     163.  00:84B2  DD 36 07 08         	LD		(IX+7), COLROJO
     164.  00:84B6  C9                  	RET
     165.  00:84B7                      .codigo_color_2:
     166.  00:84B7  DD 36 03 08         	LD		(IX+3), COLROJO
     167.  00:84BB  DD 36 07 0F         	LD		(IX+7), COLBLANCO
     168.  00:84BF  C9                  	RET
     169.  00:84C0                      fin_vuelca_resultado_puntomira_array:
     170.  00:84C0                      
     171.  00:84C0                      
     172.  00:84C0                      
     173.  00:84C0                      
     174.  00:84C0                      ;;=====================================================
     175.  00:84C0                      ;;CHECK_PLAYER
     176.  00:84C0                      ;;=====================================================	
     177.  00:84C0                      ; función: 	MIRA EL CONTROL Y APLICA LA LOGICA DE MOVIMIENTO DEL PROTAGONISTA
     178.  00:84C0                      ; entrada: 	-
     179.  00:84C0                      ; salida: 	-
     180.  00:84C0                      ; toca: 	A
     181.  00:84C0                      check_player:
     182.  00:84C0  D9                  	EXX
     183.  00:84C1                      	
     184.  00:84C1  AF                  	XOR		 A
     185.  00:84C2                      	
     186.  00:84C2                      	;pone resultado en variable tecla_pulsada
     187.  00:84C2  CD 56 85            	CALL	obtiene_tecla_pulsada
     188.  00:84C5                      	;pone resultado en variable accion_joystic
     189.  00:84C5  CD 96 85            	CALL	obtiene_accion_joystick
     190.  00:84C8                      	
     191.  00:84C8                      	;mezcla resultados y ls pone en A
     192.  00:84C8  3A 66 8C            	LD		 A, (teclas_pulsadas)
     193.  00:84CB  47                  	LD		 B, A
     194.  00:84CC  3A 67 8C            	LD		 A, (accion_joystick)
     195.  00:84CF  B0                  	OR		 B
     196.  00:84D0                      	
     197.  00:84D0  C8                  	RET		 Z						;si no se ha pulsado nada no se necesita mirar nada
     198.  00:84D1                      	
     199.  00:84D1  32 66 8C            	LD		 (teclas_pulsadas), A	;guardo una copia par usar en la subrutina mira_disparo
     200.  00:84D4                      	
     201.  00:84D4  E6 0F               	AND		 A, 00001111b
     202.  00:84D6  FE 01               	CP		MUEARR
     203.  00:84D8  CC 06 85            	CALL	 Z,mueve_arriba
     204.  00:84DB  FE 02               	CP		MUEARRDER
     205.  00:84DD  CC 13 85            	CALL	 Z,mueve_arriba_derecha
     206.  00:84E0  FE 03               	CP		MUEDER
     207.  00:84E2  CC 19 85            	CALL	 Z,mueve_derecha
     208.  00:84E5  FE 04               	CP		MUEDERABA
     209.  00:84E7  CC 28 85            	CALL	 Z,mueve_derecha_abajo
     210.  00:84EA  FE 05               	CP		MUEABA
     211.  00:84EC  CC 2E 85            	CALL	 Z,mueve_abajo
     212.  00:84EF  FE 06               	CP		MUEABAIZQ
     213.  00:84F1  CC 3D 85            	CALL	 Z,mueve_abajo_izquierda
     214.  00:84F4  FE 07               	CP		MUEIZQ
     215.  00:84F6  CC 43 85            	CALL	 Z,mueve_izquierda
     216.  00:84F9  FE 08               	CP		MUEIZQARR
     217.  00:84FB  CC 50 85            	CALL	 Z,mueve_izquierda_arriba
     218.  00:84FE                      	
     219.  00:84FE                      	;zona para mirar disparo
     220.  00:84FE  CD BE 85            	CALL	mira_disparo
     221.  00:8501                      
     222.  00:8501  CD 89 84            	CALL	vuelca_resultado_puntomira_array
     223.  00:8504                      
     224.  00:8504  D9                  	EXX
     225.  00:8505                      fin_check_player:
     226.  00:8505  C9                  	RET
     227.  00:8506                      
     148   00:8506                      	
     149   00:8506                      	include "subr_teclado_joy.asm"
       1.  00:8506                      
       2.  00:8506                      
       3.  00:8506                      ;;=====================================================
       4.  00:8506                      ;;MUEVE_ARRIBA
       5.  00:8506                      ;;=====================================================	
       6.  00:8506                      ; función: 	decrementa y si se no sale de los límites el valor del punto de mira a la derecha
       7.  00:8506                      ; entrada: 	-
       8.  00:8506                      ; salida: 	-
       9.  00:8506                      ; toca: 	-
      10.  00:8506                      mueve_arriba:
      11.  00:8506  F5                  	PUSH		AF
      12.  00:8507                      	
      13.  00:8507  3A F3 8B            	LD		 	 A, (prota.posy)
      14.  00:850A  3D                  	DEC			 A
      15.  00:850B  CA 11 85            	JP			 Z,.no_decrementa_y
      16.  00:850E  32 F3 8B            	LD			(prota.posy), A
      17.  00:8511                      	
      18.  00:8511                      .no_decrementa_y:
      19.  00:8511  F1                  	POP			AF
      20.  00:8512                      fin_mueve_arriba:
      21.  00:8512  C9                  	RET
      22.  00:8513                      	
      23.  00:8513                      	
      24.  00:8513                      ;;=====================================================
      25.  00:8513                      ;;MUEVE_ARRIBA_DERECHA
      26.  00:8513                      ;;=====================================================	
      27.  00:8513                      ; función: 	mueve punto de mira en diagonal arriba a la derecha
      28.  00:8513                      ; entrada: 	-
      29.  00:8513                      ; salida: 	-
      30.  00:8513                      ; toca: 	-
      31.  00:8513                      mueve_arriba_derecha:
      32.  00:8513                      	
      33.  00:8513  CD 06 85            	CALL		mueve_arriba
      34.  00:8516  C3 19 85            	JP			mueve_derecha
      35.  00:8519                      	
      36.  00:8519                      fin_mueve_arriba_derecha:
      37.  00:8519                      	;RET
      38.  00:8519                      
      39.  00:8519                      
      40.  00:8519                      ;;=====================================================
      41.  00:8519                      ;;MUEVE_DERECHA
      42.  00:8519                      ;;=====================================================	
      43.  00:8519                      ; función: 	incrementa si se no sale de los límites el valor del punto de mira a la derecha
      44.  00:8519                      ; entrada: 	-
      45.  00:8519                      ; salida: 	-
      46.  00:8519                      ; toca: 	-
      47.  00:8519                      mueve_derecha:
      48.  00:8519  F5                  	PUSH		AF
      49.  00:851A                      	
      50.  00:851A  3A F2 8B            	LD		 	 A, (prota.posx)
      51.  00:851D  3C                  	INC			 A
      52.  00:851E  FE EF               	CP			 A, LIMPANTDER - 16
      53.  00:8520  CA 26 85            	JP			 Z, .no_incrementa_x
      54.  00:8523  32 F2 8B            	LD			(prota.posx), A
      55.  00:8526                      	
      56.  00:8526                      .no_incrementa_x:
      57.  00:8526  F1                  	POP			AF
      58.  00:8527                      fin_mueve_derecha:
      59.  00:8527  C9                  	RET
      60.  00:8528                      
      61.  00:8528                      ;;=====================================================
      62.  00:8528                      ;;MUEVE_DERECHA_ABAJO
      63.  00:8528                      ;;=====================================================	
      64.  00:8528                      ; función: 	mueve punto de mira en diagonal abajo a la derecha
      65.  00:8528                      ; entrada: 	-
      66.  00:8528                      ; salida: 	-
      67.  00:8528                      ; toca: 	-
      68.  00:8528                      mueve_derecha_abajo:
      69.  00:8528                      	
      70.  00:8528  CD 19 85            	CALL		mueve_derecha
      71.  00:852B  C3 2E 85            	JP			mueve_abajo
      72.  00:852E                      	
      73.  00:852E                      fin_mueve_derecha_abajo:
      74.  00:852E                      ;	RET
      75.  00:852E                      
      76.  00:852E                      ;;=====================================================
      77.  00:852E                      ;;MUEVE_ABAJO
      78.  00:852E                      ;;=====================================================	
      79.  00:852E                      ; función: 	incrementa y si se no sale de los límites el valor del punto de mira abajo
      80.  00:852E                      ; entrada: 	-
      81.  00:852E                      ; salida: 	-
      82.  00:852E                      ; toca: 	-
      83.  00:852E                      mueve_abajo:
      84.  00:852E  F5                  	PUSH		AF
      85.  00:852F                      	
      86.  00:852F  3A F3 8B            	LD		 	 A, (prota.posy)
      87.  00:8532  3C                  	INC			 A
      88.  00:8533  FE 70               	CP			 A, LIMPANTABA - 16
      89.  00:8535  CA 3B 85            	JP			 Z,.no_incrementa_y
      90.  00:8538  32 F3 8B            	LD			(prota.posy), A
      91.  00:853B                      	
      92.  00:853B                      .no_incrementa_y:
      93.  00:853B  F1                  	POP			AF
      94.  00:853C                      fin_mueve_abajo:
      95.  00:853C  C9                  	RET
      96.  00:853D                      	
      97.  00:853D                      
      98.  00:853D                      ;;=====================================================
      99.  00:853D                      ;;MUEVE_ABAJO_IZQUIERDA
     100.  00:853D                      ;;=====================================================	
     101.  00:853D                      ; función: 	mueve punto de mira en diagonal abajo a la izquierda
     102.  00:853D                      ; entrada: 	-
     103.  00:853D                      ; salida: 	-
     104.  00:853D                      ; toca: 	-
     105.  00:853D                      mueve_abajo_izquierda:
     106.  00:853D                      	
     107.  00:853D  CD 2E 85            	CALL		mueve_abajo
     108.  00:8540  C3 43 85            	JP			mueve_izquierda
     109.  00:8543                      
     110.  00:8543                      fin_mueve_abajo_izquierda:
     111.  00:8543                      	;RET
     112.  00:8543                      
     113.  00:8543                      	
     114.  00:8543                      ;;=====================================================
     115.  00:8543                      ;;MUEVE_IZQUIERDA
     116.  00:8543                      ;;=====================================================	
     117.  00:8543                      ; función: 	decrementa x si se no sale de los límites el valor del punto de mira a la izquierda
     118.  00:8543                      ; entrada: 	-
     119.  00:8543                      ; salida: 	-
     120.  00:8543                      ; toca: 	-
     121.  00:8543                      mueve_izquierda:
     122.  00:8543  F5                  	PUSH		AF
     123.  00:8544                      	
     124.  00:8544  3A F2 8B            	LD		 	 A, (prota.posx)
     125.  00:8547  3D                  	DEC			 A
     126.  00:8548                      ;	CP			 A, LIMPANTIZQ
     127.  00:8548  CA 4E 85            	JP			 Z,.no_decrementa_x
     128.  00:854B  32 F2 8B            	LD			(prota.posx), A
     129.  00:854E                      	
     130.  00:854E                      .no_decrementa_x:
     131.  00:854E  F1                  	POP			AF
     132.  00:854F                      fin_mueve_izquierda:
     133.  00:854F  C9                  	RET
     134.  00:8550                      
     135.  00:8550                      
     136.  00:8550                      ;;=====================================================
     137.  00:8550                      ;;MUEVE_IZQUIERDA_ARRIBA
     138.  00:8550                      ;;=====================================================	
     139.  00:8550                      ; función: 	mueve punto de mira en diagonal arriba a la izquierda
     140.  00:8550                      ; entrada: 	-
     141.  00:8550                      ; salida: 	-
     142.  00:8550                      ; toca: 	-
     143.  00:8550                      mueve_izquierda_arriba:
     144.  00:8550                      
     145.  00:8550  CD 43 85            	CALL		mueve_izquierda
     146.  00:8553  C3 06 85            	JP			mueve_arriba
     147.  00:8556                      
     148.  00:8556                      fin_mueve_izquierda_arriba:
     149.  00:8556                      	;RET
     150.  00:8556                      
     151.  00:8556                      
     152.  00:8556                      
     153.  00:8556                      
     154.  00:8556                      ;;=====================================================
     155.  00:8556                      ;;OBTIENE TECLA PULSADA
     156.  00:8556                      ;;=====================================================	
     157.  00:8556                      ; función: 	devuelve un valor entre 1 y 8 según la dirección de teclas pulsada
     158.  00:8556                      ; entrada: 	-
     159.  00:8556                      ; salida: 	teclas_pulsadas
     160.  00:8556                      ; toca: 	
     161.  00:8556                      obtiene_tecla_pulsada:
     162.  00:8556                      	;primero vacio la variable teclas_pulsadas
     163.  00:8556                      	;XXPS para disparo primario  y secundario
     164.  00:8556                      	;DDDD para movimientos 
     165.  00:8556  AF                  	XOR		 A
     166.  00:8557  57                  	LD		 D, A 					;inicializo D porque guardaré el resultado ahí y luego lo mando a teclas_pulsadas
     167.  00:8558                      
     168.  00:8558                      	;segundo examino la fila 6 y bit 0 para ver si se ha pulsado SHIFT en cuyo caso vale 0
     169.  00:8558  06 06               	LD		 B, 6
     170.  00:855A                      	
     171.  00:855A  DB AA               	IN		 A, (#AA)
     172.  00:855C  E6 F0                   AND		#F0
     173.  00:855E  B0                      OR		 B
     174.  00:855F  D3 AA                   OUT		(#AA), A
     175.  00:8561  DB A9                   IN		 A, (#A9)
     176.  00:8563                      	
     177.  00:8563  CB 47               	BIT		 0, A					;Se ha pulsado shift?
     178.  00:8565  C2 6B 85            	JP		 NZ, .finsi_pulsado_shift
     179.  00:8568  3E 10               	LD		 A, 00010000b
     180.  00:856A  57                  	LD		D, A					;pongo el bit 5 de la D a 1
     181.  00:856B                      .finsi_pulsado_shift:
     182.  00:856B                      
     183.  00:856B  06 08               	LD		 B, 8					;linea donde están los cursores y espacio
     184.  00:856D                      	
     185.  00:856D  DB AA               	IN		 A, (#AA)
     186.  00:856F  E6 F0                   AND		#F0
     187.  00:8571  B0                      OR		 B
     188.  00:8572  D3 AA                   OUT		(#AA), A
     189.  00:8574  DB A9                   IN		 A, (#A9)
     190.  00:8576                      	
     191.  00:8576  CB 47               	BIT		 0, A					;Se ha pulsado espacio?
     192.  00:8578  C2 81 85            	JP		 NZ, .finsi_pulsado_espacio
     193.  00:857B  08                  	EX		AF, AF'					;guardo el valor de A para para actualizar D
     194.  00:857C  3E 20               	LD		 A, 00100000b
     195.  00:857E  B2                  	OR		 D
     196.  00:857F  57                  	LD		 D, A
     197.  00:8580  08                  	EX		AF, AF'
     198.  00:8581                      .finsi_pulsado_espacio:
     199.  00:8581                      	
     200.  00:8581                      	;miramos las pulsaciones de cursores
     201.  00:8581                      [4] SRL		 A						;preparo A que tiene en los 4 primeros bits las pulsaciones de cursores
     201.  00:8581  CB 3F CB 3F CB 3F CB 3F 
     202.  00:8589                      
     203.  00:8589  21 68 8C            	LD		HL, array_movimientos_cursores
     204.  00:858C  06 00               	LD		 B, 0
     205.  00:858E  4F                  	LD		 C, A
     206.  00:858F  09                  	ADD		HL, BC
     207.  00:8590                      	
     208.  00:8590  7E                  	LD		 A, (HL)
     209.  00:8591  B2                  	OR		 D
     210.  00:8592                      	
     211.  00:8592  32 66 8C            	LD		(teclas_pulsadas), A
     212.  00:8595                      fin_obtiene_tecla_pulsada:
     213.  00:8595  C9                  	RET
     214.  00:8596                      
     215.  00:8596                      
     216.  00:8596                      
     217.  00:8596                      
     218.  00:8596                      ;;=====================================================
     219.  00:8596                      ;;OBTIENE_ACCION_JOYSTICK
     220.  00:8596                      ;;=====================================================	
     221.  00:8596                      ; función: 	Mira si se ha pulsado alguno de los dos disparos en el joystick y guarda resultados en accion_joystick
     222.  00:8596                      ; entrada: 	-
     223.  00:8596                      ; salida: 	-
     224.  00:8596                      ; toca: 	A
     225.  00:8596                      obtiene_accion_joystick:
     226.  00:8596                      	;miro movimiento y guardo en nible bajo
     227.  00:8596  3E 01               	LD		 A, 1
     228.  00:8598  CD D5 00            	CALL	GTSTCK
     229.  00:859B  32 67 8C            	LD		(accion_joystick), A	;guardado movimiento con joystick en nible bajo de accion_joystick
     230.  00:859E                      	
     231.  00:859E                      	;miro boton 1 joystick
     232.  00:859E                      .mira_boton_1:
     233.  00:859E  3E 01               	LD		 A, 1
     234.  00:85A0  CD D8 00            	CALL	GTTRIG
     235.  00:85A3  CA AB 85            	JP		 Z, .mira_boton_2
     236.  00:85A6  3E 20               	LD		 A, 00100000b		;botón 1 pulsado
     237.  00:85A8  C3 B5 85            	JP		.fin_mira_boton
     238.  00:85AB                      
     239.  00:85AB                      .mira_boton_2:	
     240.  00:85AB  3E 03               	LD		 A, 3
     241.  00:85AD  CD D8 00            	CALL	GTTRIG
     242.  00:85B0  CA B5 85            	JP		 Z, .fin_mira_boton
     243.  00:85B3  3E 10               	LD		 A, 00010000b		;botón 2 pulsado
     244.  00:85B5                      .fin_mira_boton:
     245.  00:85B5                      
     246.  00:85B5                      	
     247.  00:85B5                      	;guardo el resultado final en accion_joystick
     248.  00:85B5  47                  	LD		 B, A
     249.  00:85B6  3A 67 8C            	LD		 A, (accion_joystick)
     250.  00:85B9  B0                  	OR		 B
     251.  00:85BA  32 67 8C            	LD		(accion_joystick), A
     252.  00:85BD                      fin_obtiene_accion_joystick
     253.  00:85BD  C9                  	RET
     254.  00:85BE                      
     255.  00:85BE                      
     256.  00:85BE                      ;;=====================================================
     257.  00:85BE                      ;;MIRA_DISPARO
     258.  00:85BE                      ;;=====================================================	
     259.  00:85BE                      ; función: 	Mira si se ha pulsado alguno de los dos disparos
     260.  00:85BE                      ; entrada: 	teclas_pulsadas
     261.  00:85BE                      ; salida: 	-
     262.  00:85BE                      ; toca: 	A, C
     263.  00:85BE                      mira_disparo:
     264.  00:85BE  3A 66 8C            	LD		 A, (teclas_pulsadas)
     265.  00:85C1  4F                  	LD		 C, A					;ya que estoy hago una copia en C para ahorrar tiempo. no copio de una var sino de un registro y no tengo que consultar una variable sino un registro
     266.  00:85C2                      .mira_boton_pulsado1:
     267.  00:85C2                      
     268.  00:85C2  CB 6F               	BIT		 5, A
     269.  00:85C4  CA CE 85            	JP		 Z, .mira_boton_pulsado2
     270.  00:85C7                      	;se ha pulsado barra o boton 1
     271.  00:85C7  3A F4 8B            	LD		 A, (prota.escena)
     272.  00:85CA  2F                  	CPL		 
     273.  00:85CB  32 F4 8B            	LD		(prota.escena), A
     274.  00:85CE                      
     275.  00:85CE                      .mira_boton_pulsado2:	
     276.  00:85CE  CB 71               	BIT		 6, C
     277.  00:85D0  C8                  	RET		 Z
     278.  00:85D1                      	;se ha pulsado shift o boton 2
     279.  00:85D1                      	
     280.  00:85D1  3A BC 86            	LD		 A, (prota_reliquias)	;miro si le quedan reliquias
     281.  00:85D4  B7                  	OR		 A
     282.  00:85D5  C8                  	RET		 Z
     283.  00:85D6                      	
     284.  00:85D6  C3 D9 85            	JP		usa_reliquia			;actuaciones si se usa la reliquia
     285.  00:85D9                      fin_mira_disparo:
     286.  00:85D9                      
     287.  00:85D9                      
     288.  00:85D9                      
     289.  00:85D9                      ;;=====================================================
     290.  00:85D9                      ;;MIRA_DISPARO
     291.  00:85D9                      ;;=====================================================	
     292.  00:85D9                      ; función: 	Resta vida a enemigos, resta 1 a prota_reliquias, modifica actualiza_reliquias_sn a clp de 0
     293.  00:85D9                      ; entrada: 	prota_reliquias
     294.  00:85D9                      ; salida: 	-
     295.  00:85D9                      ; toca: 	-
     296.  00:85D9                      usa_reliquia:
     297.  00:85D9                      fin_usa_reliquia:
     298.  00:85D9  C9                  	RET
     299.  00:85DA                      
     300.  00:85DA                      
     301.  00:85DA                      
     150   00:85DA                      	
     151   00:85DA                      
     152   00:85DA                      ;Este include lleva la rutina de descompresión de ROM/RAM a VRAM de pletter
     153   00:85DA                      ;Está adaptada de la original a sjasm
     154   00:85DA                      ;	HL = RAM/ROM source	; DE = VRAM destination
     155   00:85DA                      depack_VRAM:
     156   00:85DA                      	include "PL_VRAM_Depack_SJASM.asm"
       1.  00:85DA                      ;-----------------------------------------------------------
       2.  00:85DA                      ; Pletter v0.5b VRAM Depacker v1.1 - 16Kb version
       3.  00:85DA                      ; HL = RAM/ROM source ; DE = VRAM destination
       4.  00:85DA                      ;-----------------------------------------------------------
       5.  00:85DA  F3                  	di
       6.  00:85DB                      
       7.  00:85DB                      ; VRAM address setup
       8.  00:85DB  7B                  	ld	a,e
       9.  00:85DC  D3 99               	out	[099h],a
      10.  00:85DE  7A                  	ld	a,d
      11.  00:85DF  F6 40               	or	040h
      12.  00:85E1  D3 99               	out	[099h],a
      13.  00:85E3                      
      14.  00:85E3                      ; Initialization
      15.  00:85E3  7E                  	ld	a,[hl]
      16.  00:85E4  23                  	inc	hl
      17.  00:85E5  D9                  	exx
      18.  00:85E6  11 00 00            	ld	de,0
      19.  00:85E9  87                  	add	a,a
      20.  00:85EA  3C                  	inc	a
      21.  00:85EB  CB 13               	rl	e
      22.  00:85ED  87                  	add	a,a
      23.  00:85EE  CB 13               	rl	e
      24.  00:85F0  87                  	add	a,a
      25.  00:85F1  CB 13               	rl	e
      26.  00:85F3  CB 13               	rl	e
      27.  00:85F5  21 AC 86            	ld	hl,modes
      28.  00:85F8  19                  	add	hl,de
      29.  00:85F9  5E                  	ld	e,[hl]
      30.  00:85FA  DD 6B               	ld	ixl,e
      31.  00:85FC  23                  	inc	hl
      32.  00:85FD  5E                  	ld	e,[hl]
      33.  00:85FE  DD 63               	ld	ixh,e
      34.  00:8600  1E 01               	ld	e,1
      35.  00:8602  D9                  	exx
      36.  00:8603  FD 21 0C 86         	ld	iy,loop
      37.  00:8607                      
      38.  00:8607                      ; Main depack loop
      39.  00:8607  0E 98               literal:ld	c,098h
      40.  00:8609  ED A3               	outi
      41.  00:860B  13                  	inc	de
      42.  00:860C  87                  loop:	add	a,a
      43.  00:860D  CC A0 86              	call	z,getbit
      44.  00:8610  30 F5               	jr	nc,literal
      45.  00:8612                      
      46.  00:8612                      ; Compressed data
      47.  00:8612  D9                  	exx
      48.  00:8613  62                  	ld	h,d
      49.  00:8614  6B                  	ld	l,e
      50.  00:8615  87                  getlen: add	a,a
      51.  00:8616  CC A4 86            	call	z,getbitexx
      52.  00:8619  30 1D               	jr	nc,lenok
      53.  00:861B  87                  lus:	add	a,a
      54.  00:861C  CC A4 86            	call	z,getbitexx
      55.  00:861F  ED 6A               	adc	hl,hl
      56.  00:8621  D8                  	ret	c
      57.  00:8622  87                  	add	a,a
      58.  00:8623  CC A4 86            	call	z,getbitexx
      59.  00:8626  30 10               	jr	nc,lenok
      60.  00:8628  87                  	add	a,a
      61.  00:8629  CC A4 86            	call	z,getbitexx
      62.  00:862C  ED 6A               	adc	hl,hl
      63.  00:862E  DA AA 86            	jp	c,Depack_out
      64.  00:8631  87                  	add	a,a
      65.  00:8632  CC A4 86            	call	z,getbitexx
      66.  00:8635  DA 1B 86            	jp	c,lus
      67.  00:8638  23                  lenok:  inc	hl
      68.  00:8639  D9                  	exx
      69.  00:863A  4E                  	ld	c,[hl]
      70.  00:863B  23                  	inc	hl
      71.  00:863C  06 00               	ld	b,0
      72.  00:863E  CB 79               	bit	7,c
      73.  00:8640  CA 73 86            	jp	z,offsok
      74.  00:8643  DD E9               	jp	ix
      75.  00:8645                      
      76.  00:8645  87                  mode7:  add	a,a
      77.  00:8646  CC A0 86              	call	z,getbit
      78.  00:8649  CB 10               	rl	b
      79.  00:864B  87                  mode6:	add	a,a
      80.  00:864C  CC A0 86              	call	z,getbit
      81.  00:864F  CB 10               	rl	b
      82.  00:8651  87                  mode5:  add	a,a
      83.  00:8652  CC A0 86              	call	z,getbit
      84.  00:8655  CB 10               	rl	b
      85.  00:8657  87                  mode4:  add	a,a
      86.  00:8658  CC A0 86              	call	z,getbit
      87.  00:865B  CB 10               	rl	b
      88.  00:865D  87                  mode3:  add	a,a
      89.  00:865E  CC A0 86              	call	z,getbit
      90.  00:8661  CB 10               	rl	b
      91.  00:8663  87                  mode2:	add	a,a
      92.  00:8664  CC A0 86              	call	z,getbit
      93.  00:8667  CB 10               	rl	b
      94.  00:8669  87                  	add	a,a
      95.  00:866A  CC A0 86              	call	z,getbit
      96.  00:866D  30 04               	jr	nc,offsok
      97.  00:866F  B7                  	or	a
      98.  00:8670  04                  	inc	b
      99.  00:8671  CB B9               	res	7,c
     100.  00:8673  03                  offsok: inc	bc
     101.  00:8674  E5                  	push	hl
     102.  00:8675  D9                  	exx
     103.  00:8676  E5                  	push	hl
     104.  00:8677  D9                  	exx
     105.  00:8678  6B                  	ld	l,e
     106.  00:8679  62                  	ld	h,d
     107.  00:867A  ED 42               	sbc	hl,bc
     108.  00:867C  C1                  	pop	bc
     109.  00:867D  F5                  	push	af
     110.  00:867E  7D                  .loop:	ld	a,l
     111.  00:867F  D3 99               	out	[099h],a
     112.  00:8681  7C                  	ld	a,h
     113.  00:8682  00                  	nop                     ; VDP timing
     114.  00:8683  D3 99               	out	[099h],a
     115.  00:8685  00                  	nop                     ; VDP timing
     116.  00:8686  DB 98               	in	a,[098h]
     117.  00:8688  08                  	ex	af,af'
     118.  00:8689  7B                  	ld	a,e
     119.  00:868A  00                  	nop			; VDP timing
     120.  00:868B  D3 99               	out	[099h],a
     121.  00:868D  7A                  	ld	a,d
     122.  00:868E  F6 40               	or	040h
     123.  00:8690  D3 99               	out	[099h],a
     124.  00:8692  08                  	ex	af,af'
     125.  00:8693  00                  	nop			; VDP timing
     126.  00:8694  D3 98               	out	[098h],a
     127.  00:8696  13                  	inc	de
     128.  00:8697  ED A1               	cpi
     129.  00:8699  EA 7E 86            	jp	pe,.loop
     130.  00:869C  F1                  	pop	af
     131.  00:869D  E1                  	pop	hl
     132.  00:869E  FD E9               	jp	iy
     133.  00:86A0                      
     134.  00:86A0  7E                  getbit: ld	a,[hl]
     135.  00:86A1  23                  	inc	hl
     136.  00:86A2  17                  	rla
     137.  00:86A3  C9                  	ret
     138.  00:86A4                      
     139.  00:86A4                      getbitexx:
     140.  00:86A4  D9                  	exx
     141.  00:86A5  7E                  	ld	a,[hl]
     142.  00:86A6  23                  	inc	hl
     143.  00:86A7  D9                  	exx
     144.  00:86A8  17                  	rla
     145.  00:86A9  C9                  	ret
     146.  00:86AA                      
     147.  00:86AA                      ; Depacker exit
     148.  00:86AA                      Depack_out:
     149.  00:86AA  FB                  	ei
     150.  00:86AB  C9                  	ret
     151.  00:86AC                      
     152.  00:86AC                      modes:
     153.  00:86AC  73 86               	dw	offsok
     154.  00:86AE  63 86               	dw	mode2
     155.  00:86B0  5D 86               	dw	mode3
     156.  00:86B2  57 86               	dw	mode4
     157.  00:86B4  51 86               	dw	mode5
     158.  00:86B6  4B 86               	dw	mode6
     159.  00:86B8  45 86               	dw	mode7
     157   00:86BA                      
     158   00:86BA                      
     159   00:86BA                      	
     160   00:86BA                      ;;=====================================================
     161   00:86BA                      ;;DEFINICIÓN DE ESTRUCTURAS
     162   00:86BA                      ;;=====================================================		
     163   00:86BA                      	include "estructuras.asm"
       1.  00:86BA                      ;;=====================================================
       2.  00:86BA                      ;;DEFINICIÓN DE ESTRUCTURAS
       3.  00:86BA                      ;;=====================================================
       4.  00:86BA                      
       5.  00:86BA                      ;crear estructura
       6.  00:86BA                      ;variables globales del prota
       7.  00:86BA                      prota_nivel:			;nivel del castillo donde está 0-6
       8.  00:86BA  00                  			DB		0
       9.  00:86BB                      prota_vidas:
      10.  00:86BB  00                  			DB		0
      11.  00:86BC                      prota_reliquias:
      12.  00:86BC  03                  			DB		3
      13.  00:86BD                      prota_pos_mapx:
      14.  00:86BD  00                  			DB		0	;pos columna
      15.  00:86BE                      prota_pos_mapy:
      16.  00:86BE  00                  			DB		0	;pos fila
      17.  00:86BF                      prota_energia:
      18.  00:86BF  FA                  			DB		250
      19.  00:86C0                      
      20.  00:86C0                      	STRUCT ESTRUCTURA_PUNTOMIRA
      21.  00:86C0                    < posx			DB		100
      22.  00:86C0                    < posy			DB		100
      23.  00:86C0                    < escena			DB		0	;valores porsibles 0 (blanco+rojo en punto de mira) y NEG 0 (al revés)
      24.  00:86C0                    < velocidad		DB		0
      25.  00:86C0                    < boton2_pressed  DB		0
      26.  00:86C0                    < ; al final he decidido (ya que el punto de mira es el prota) que lo relacionado con el prota vaya en esta estructura
      27.  00:86C0                    < pm_aux1			DB		0	;para llegar a los 16 campos
      28.  00:86C0                    < pm_aux2			DB		0	;para llegar a los 16 campos
      29.  00:86C0                    < pm_aux3			DB		0	;para llegar a los 16 campos
      30.  00:86C0                    < pm_aux4			DB		0	;para llegar a los 16 campos
      31.  00:86C0                    < pm_aux5			DB		0	;para llegar a los 16 campos
      32.  00:86C0                    < pm_aux6			DB		0	;para llegar a los 16 campos
      33.  00:86C0                    < pm_aux7			DB		0	;para llegar a los 16 campos
      34.  00:86C0                    < pm_aux8			DB		0	;para llegar a los 16 campos
      35.  00:86C0                    < pm_aux9			DB		0	;para llegar a los 16 campos
      36.  00:86C0                    < pm_aux10		DB		0	;para llegar a los 16 campos
      37.  00:86C0                    < pm_aux11		DB		0	;para llegar a los 16 campos
      38.  00:86C0                    < 	ENDSTRUCT;ESTRUCTURA_PUNTOMIRA
      39.  00:86C0                      
      40.  00:86C0                      	
      41.  00:86C0                      	STRUCT ESTRUCTURA_ENEMIGO
      42.  00:86C0                    < tipo				DB		0	;(0 serpiente por ejemplo) #FF muerto o no existe
      43.  00:86C0                    < posx				DB		5
      44.  00:86C0                    < posy				DB		50
      45.  00:86C0                    < color				DB		5
      46.  00:86C0                    < escena				DB		0
      47.  00:86C0                    < contador_siguiente_escena	DB	0
      48.  00:86C0                    < reset_contador		DB		0
      49.  00:86C0                    < dano				DB		0	;daño
      50.  00:86C0                    < energia				DB		0	;energía del enemigo... si llega a 0 => existe <- 0
      51.  00:86C0                    < ;indica el nº de sprite a mostrar y si está compuesto por uno o dos sprites y si están en horizontal o vertical
      52.  00:86C0                    < ver_hor				DB		0
      53.  00:86C0                    < manejador_dibujo 	DW		0
      54.  00:86C0                    < en_aux3				DB		0
      55.  00:86C0                    < en_aux4				DB		0
      56.  00:86C0                    < 	ENDSTRUCT;ESTRUCTURA_ENEMIGO
      57.  00:86C0                      	
      58.  00:86C0                      	STRUCT ESTRUCTURA_EXTRA		;vidas extra, plantas de curación de energía, reliquias	
      59.  00:86C0                    < tipo				DB		0	;#FF muerto/usado o no existe
      60.  00:86C0                    < posx				DB		50
      61.  00:86C0                    < posy				DB		50
      62.  00:86C0                    < color				DB		5
      63.  00:86C0                    < contador			DB		0	;por si doy dos reliquias en vez de una, por ejemplo
      64.  00:86C0                    < en_aux1				DB		0	;para llegar a los 16 campos
      65.  00:86C0                    < en_aux2				DB		0
      66.  00:86C0                    < en_aux3				DB		0
      67.  00:86C0                    < en_aux4				DB		0
      68.  00:86C0                    < en_aux5				DB		0
      69.  00:86C0                    < en_aux6				DB		0
      70.  00:86C0                    < en_aux7				DB		0
      71.  00:86C0                    < en_aux8				DB		0
      72.  00:86C0                    < en_aux9				DB		0
      73.  00:86C0                    < en_aux10			DB		0
      74.  00:86C0                    < en_aux11			DB		0
      75.  00:86C0                    < 	ENDSTRUCT;ESTRUCTURA_EXTRA
      76.  00:86C0                      
      77.  00:86C0                      
      78.  00:86C0                      
      79.  00:86C0                      
      80.  00:86C0                      
      81.  00:86C0                      
      82.  00:86C0                      
     164   00:86C0                      	
     165   00:86C0                      ;;=====================================================
     166   00:86C0                      ;;DEFINICIÓN DE VARIABLES
     167   00:86C0                      ;;=====================================================		
     168   00:86C0                      	include "sprites.asm"
       1.  00:86C0                      ;;=====================================================
       2.  00:86C0                      ;;DEFINICIÓN DE SPRITES
       3.  00:86C0                      ;;=====================================================	
       4.  00:86C0                      sprites_pantantalla:
       5.  00:86C0                      
       6.  00:86C0                      sprite_punto_mira_1:	;color 8
       7.  00:86C0                      	db #FF,#FF,#C0,#C0,#C0,#C0,#C0,#C0
       7.  00:86C0  FF FF C0 C0 C0 C0 C0 C0 
       8.  00:86C8                      	db #C0,#C0,#C0,#C0,#C0,#C0,#FF,#FF
       8.  00:86C8  C0 C0 C0 C0 C0 C0 FF FF 
       9.  00:86D0                      	db #FF,#FF,#03,#03,#03,#03,#03,#03
       9.  00:86D0  FF FF 03 03 03 03 03 03 
      10.  00:86D8                      	db #03,#03,#03,#03,#03,#03,#FF,#FF
      10.  00:86D8  03 03 03 03 03 03 FF FF 
      11.  00:86E0                      	
      12.  00:86E0                      sprite_punto_mira_2: 	;color 15
      13.  00:86E0                      	db #00,#00,#00,#00,#0F,#0F,#0C,#0C
      13.  00:86E0  00 00 00 00 0F 0F 0C 0C 
      14.  00:86E8                      	db #0C,#0C,#0F,#0F,#00,#00,#00,#00
      14.  00:86E8  0C 0C 0F 0F 00 00 00 00 
      15.  00:86F0                      	db #00,#00,#00,#00,#F0,#F0,#30,#30
      15.  00:86F0  00 00 00 00 F0 F0 30 30 
      16.  00:86F8                      	db #30,#30,#F0,#F0,#00,#00,#00,#00
      16.  00:86F8  30 30 F0 F0 00 00 00 00 
      17.  00:8700                      	
      18.  00:8700                      sprite_punto_mira_1_mejorado:
      19.  00:8700                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      19.  00:8700  FF FF FF FF FF FF FF FF 
      20.  00:8708                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      20.  00:8708  FF FF FF FF FF FF FF FF 
      21.  00:8710                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      21.  00:8710  FF FF FF FF FF FF FF FF 
      22.  00:8718                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      22.  00:8718  FF FF FF FF FF FF FF FF 
      23.  00:8720                      
      24.  00:8720                      sprite_punto_mira_2_mejorado:
      25.  00:8720                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      25.  00:8720  FF FF FF FF FF FF FF FF 
      26.  00:8728                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      26.  00:8728  FF FF FF FF FF FF FF FF 
      27.  00:8730                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      27.  00:8730  FF FF FF FF FF FF FF FF 
      28.  00:8738                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      28.  00:8738  FF FF FF FF FF FF FF FF 
      29.  00:8740                      	
      30.  00:8740                      sprite_reliquia:
      31.  00:8740                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      31.  00:8740  FF FF FF FF FF FF FF FF 
      32.  00:8748                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      32.  00:8748  FF FF FF FF FF FF FF FF 
      33.  00:8750                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      33.  00:8750  FF FF FF FF FF FF FF FF 
      34.  00:8758                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      34.  00:8758  FF FF FF FF FF FF FF FF 
      35.  00:8760                      	
      36.  00:8760                      sprite_vida_extra:
      37.  00:8760                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      37.  00:8760  FF FF FF FF FF FF FF FF 
      38.  00:8768                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      38.  00:8768  FF FF FF FF FF FF FF FF 
      39.  00:8770                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      39.  00:8770  FF FF FF FF FF FF FF FF 
      40.  00:8778                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      40.  00:8778  FF FF FF FF FF FF FF FF 
      41.  00:8780                      	
      42.  00:8780                      sprite_planta:
      43.  00:8780                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      43.  00:8780  FF FF FF FF FF FF FF FF 
      44.  00:8788                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      44.  00:8788  FF FF FF FF FF FF FF FF 
      45.  00:8790                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      45.  00:8790  FF FF FF FF FF FF FF FF 
      46.  00:8798                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      46.  00:8798  FF FF FF FF FF FF FF FF 
      47.  00:87A0                      	
      48.  00:87A0                      sprite_ballesta_mejorada:
      49.  00:87A0                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      49.  00:87A0  FF FF FF FF FF FF FF FF 
      50.  00:87A8                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      50.  00:87A8  FF FF FF FF FF FF FF FF 
      51.  00:87B0                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      51.  00:87B0  FF FF FF FF FF FF FF FF 
      52.  00:87B8                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF	
      52.  00:87B8  FF FF FF FF FF FF FF FF 
      53.  00:87C0                      	
      54.  00:87C0                      sprite_ciempies1:
      55.  00:87C0                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      55.  00:87C0  FF FF FF FF FF FF FF FF 
      56.  00:87C8                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      56.  00:87C8  FF FF FF FF FF FF FF FF 
      57.  00:87D0                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      57.  00:87D0  FF FF FF FF FF FF FF FF 
      58.  00:87D8                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      58.  00:87D8  FF FF FF FF FF FF FF FF 
      59.  00:87E0                      	
      60.  00:87E0                      sprite_ciempies2:
      61.  00:87E0                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      61.  00:87E0  FF FF FF FF FF FF FF FF 
      62.  00:87E8                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      62.  00:87E8  FF FF FF FF FF FF FF FF 
      63.  00:87F0                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      63.  00:87F0  FF FF FF FF FF FF FF FF 
      64.  00:87F8                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      64.  00:87F8  FF FF FF FF FF FF FF FF 
      65.  00:8800                      	
      66.  00:8800                      sprite_arana1:
      67.  00:8800                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      67.  00:8800  FF FF FF FF FF FF FF FF 
      68.  00:8808                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      68.  00:8808  FF FF FF FF FF FF FF FF 
      69.  00:8810                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      69.  00:8810  FF FF FF FF FF FF FF FF 
      70.  00:8818                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      70.  00:8818  FF FF FF FF FF FF FF FF 
      71.  00:8820                      	
      72.  00:8820                      sprite_arana2:
      73.  00:8820                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      73.  00:8820  FF FF FF FF FF FF FF FF 
      74.  00:8828                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      74.  00:8828  FF FF FF FF FF FF FF FF 
      75.  00:8830                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      75.  00:8830  FF FF FF FF FF FF FF FF 
      76.  00:8838                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      76.  00:8838  FF FF FF FF FF FF FF FF 
      77.  00:8840                      	
      78.  00:8840                      sprite_serpiente1:
      79.  00:8840                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      79.  00:8840  FF FF FF FF FF FF FF FF 
      80.  00:8848                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      80.  00:8848  FF FF FF FF FF FF FF FF 
      81.  00:8850                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      81.  00:8850  FF FF FF FF FF FF FF FF 
      82.  00:8858                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      82.  00:8858  FF FF FF FF FF FF FF FF 
      83.  00:8860                      	
      84.  00:8860                      sprite_serpiente2:
      85.  00:8860                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      85.  00:8860  FF FF FF FF FF FF FF FF 
      86.  00:8868                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      86.  00:8868  FF FF FF FF FF FF FF FF 
      87.  00:8870                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      87.  00:8870  FF FF FF FF FF FF FF FF 
      88.  00:8878                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      88.  00:8878  FF FF FF FF FF FF FF FF 
      89.  00:8880                      	
      90.  00:8880                      sprite_murcielago1:
      91.  00:8880                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      91.  00:8880  FF FF FF FF FF FF FF FF 
      92.  00:8888                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      92.  00:8888  FF FF FF FF FF FF FF FF 
      93.  00:8890                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      93.  00:8890  FF FF FF FF FF FF FF FF 
      94.  00:8898                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      94.  00:8898  FF FF FF FF FF FF FF FF 
      95.  00:88A0                      	
      96.  00:88A0                      sprite_murcielago2:
      97.  00:88A0                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      97.  00:88A0  FF FF FF FF FF FF FF FF 
      98.  00:88A8                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      98.  00:88A8  FF FF FF FF FF FF FF FF 
      99.  00:88B0                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      99.  00:88B0  FF FF FF FF FF FF FF FF 
     100.  00:88B8                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF	
     100.  00:88B8  FF FF FF FF FF FF FF FF 
     101.  00:88C0                      
     102.  00:88C0                      sprite_explosion:
     103.  00:88C0                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     103.  00:88C0  FF FF FF FF FF FF FF FF 
     104.  00:88C8                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     104.  00:88C8  FF FF FF FF FF FF FF FF 
     105.  00:88D0                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     105.  00:88D0  FF FF FF FF FF FF FF FF 
     106.  00:88D8                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     106.  00:88D8  FF FF FF FF FF FF FF FF 
     107.  00:88E0                      	
     108.  00:88E0                      	
     109.  00:88E0                      	
     169   00:88E0                      	
     170   00:88E0                      	include "habitaciones.asm"
       1.  00:88E0                      ;;=====================================================
       2.  00:88E0                      ;;DEFINICIÓN DE HABITACIONES x NIVEL
       3.  00:88E0                      ;;=====================================================	
       4.  00:88E0                      
       5.  00:88E0                      ; sólo voy a usar 7x7 pero como los arrays son lineales y voy a trabajar con matrices
       6.  00:88E0                      ; me interesa que seande  8x8 aunque sólo trabaje con 7x7
       7.  00:88E0                      
       8.  00:88E0                      ; ojo... la primera linea corresponderá a la primera linea del castillo no a la última
       9.  00:88E0                      
      10.  00:88E0                      ;; definición de estructura de bits
      11.  00:88E0                      ;Tipo DB pero serán 2 bytes por habitación byte primero (habitaciones etc) + byte 2º. Los bytes 15 y 16 se usan para información extra
      12.  00:88E0                      ;los 7 primeros bits del byte 15 indican si se ha pasado/limpiado una habitación o no
      13.  00:88E0                      ;~ 0 - lleno o vacío (si ya se ha pasado)
      14.  00:88E0                      ;~ 0000 - nº puertas 1 arriba 1 derecha 1 abajo 1 izquierda
      15.  00:88E0                      ;~ 1 - hay reliquia?
      16.  00:88E0                      ;~ 1 - hay vida extra
      17.  00:88E0                      ;~ 1 - hay arma extra (durará 6 pantallas - sonido distinto)
      18.  00:88E0                      ;~ 1 - hay energía? (sobran bits ... se puede usar otro como carga energía +)
      19.  00:88E0                      ;~ 1 - es pantalla de mostruo fin de fase?
      20.  00:88E0                      ;~ 1 - es pantalla inicial (equivaldría a la puerta de un castillo)?
      21.  00:88E0                      ;~ 1 - es pantalla final?
      22.  00:88E0                      
      23.  00:88E0                      
      24.  00:88E0                      ;importante: el byte de la columna 15 indicará con 1 y 0 habitaciones por las que se haya pasado
      25.  00:88E0                      ;cuando se inicie la partida todos se pondrán a 0
      26.  00:88E0                      
      27.  00:88E0                      habitacion_actual:
      28.  00:88E0  00 00               	db  #00,#00		;habitación donde se encuentre el prota. Se mete en una varible par traer todos los datos de golpe y no buscrlos varias veces
      29.  00:88E2                      
      30.  00:88E2                      habitaciones_juego:
      31.  00:88E2                      habitaciones_nivel0:
      32.  00:88E2                      ;---------------------------------* habitación inicial
      33.  00:88E2                      	db  #00,#00,#01,#01,#02,#02,#03,#03,#04,#04,#05,#05,#06,#06,#FF,#00 ;primera fila
      33.  00:88E2  00 00 01 01 02 02 03 03 04 04 05 05 06 06 FF 00 
      34.  00:88F2                      	db  #17,#10,#11,#11,#12,#12,#13,#13,#14,#14,#15,#15,#16,#16,#FF,#00
      34.  00:88F2  17 10 11 11 12 12 13 13 14 14 15 15 16 16 FF 00 
      35.  00:8902                      	db  #20,#20,#21,#21,#22,#22,#23,#23,#24,#24,#25,#25,#26,#26,#FF,#00
      35.  00:8902  20 20 21 21 22 22 23 23 24 24 25 25 26 26 FF 00 
      36.  00:8912                      	db  #30,#30,#31,#31,#32,#32,#33,#33,#34,#34,#35,#35,#36,#36,#FF,#00
      36.  00:8912  30 30 31 31 32 32 33 33 34 34 35 35 36 36 FF 00 
      37.  00:8922                      	db  #40,#40,#41,#41,#42,#42,#43,#43,#44,#44,#45,#45,#46,#46,#FF,#00
      37.  00:8922  40 40 41 41 42 42 43 43 44 44 45 45 46 46 FF 00 
      38.  00:8932                      	db  #50,#50,#51,#51,#52,#52,#53,#53,#54,#54,#55,#55,#56,#56,#FF,#00
      38.  00:8932  50 50 51 51 52 52 53 53 54 54 55 55 56 56 FF 00 
      39.  00:8942                      	db  #60,#60,#61,#61,#62,#62,00001111b,#63,#64,#64,#65,#65,#66,#66,#FF,#00	;ultima fila
      39.  00:8942  60 60 61 61 62 62 0F 63 64 64 65 65 66 66 FF 00 
      40.  00:8952                      	
      41.  00:8952                      habitaciones_nivel1:
      42.  00:8952                      	db  #00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00 ;primera fila
      42.  00:8952  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
      43.  00:8962                      	db  #00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00
      43.  00:8962  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
      44.  00:8972                      	db  #00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00
      44.  00:8972  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
      45.  00:8982                      	db  #00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00
      45.  00:8982  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
      46.  00:8992                      	db  #00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00
      46.  00:8992  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
      47.  00:89A2                      	db  #00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00
      47.  00:89A2  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
      48.  00:89B2                      	db  #00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00	;ultima fila
      48.  00:89B2  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
      49.  00:89C2                      	
      50.  00:89C2                      habitaciones_nivel2:
      51.  00:89C2                      	db  #00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00 ;primera fila
      51.  00:89C2  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
      52.  00:89D2                      	db  #00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00
      52.  00:89D2  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
      53.  00:89E2                      	db  #00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00
      53.  00:89E2  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
      54.  00:89F2                      	db  #00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00
      54.  00:89F2  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
      55.  00:8A02                      	db  #00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00
      55.  00:8A02  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
      56.  00:8A12                      	db  #00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00
      56.  00:8A12  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
      57.  00:8A22                      	db  #00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00	;ultima fila
      57.  00:8A22  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
      58.  00:8A32                      	
      59.  00:8A32                      habitaciones_nivel3:
      60.  00:8A32                      	db  #00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00 ;primera fila
      60.  00:8A32  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
      61.  00:8A42                      	db  #00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00
      61.  00:8A42  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
      62.  00:8A52                      	db  #00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00
      62.  00:8A52  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
      63.  00:8A62                      	db  #00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00
      63.  00:8A62  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
      64.  00:8A72                      	db  #00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00
      64.  00:8A72  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
      65.  00:8A82                      	db  #00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00
      65.  00:8A82  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
      66.  00:8A92                      	db  #00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00	;ultima fila
      66.  00:8A92  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
      67.  00:8AA2                      	
      68.  00:8AA2                      habitaciones_nivel4:
      69.  00:8AA2                      	db  #00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00 ;primera fila
      69.  00:8AA2  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
      70.  00:8AB2                      	db  #00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00
      70.  00:8AB2  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
      71.  00:8AC2                      	db  #00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00
      71.  00:8AC2  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
      72.  00:8AD2                      	db  #00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00
      72.  00:8AD2  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
      73.  00:8AE2                      	db  #00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00
      73.  00:8AE2  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
      74.  00:8AF2                      	db  #00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00
      74.  00:8AF2  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
      75.  00:8B02                      	db  #00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00	;ultima fila
      75.  00:8B02  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
      76.  00:8B12                      	
      77.  00:8B12                      habitaciones_nivel5:
      78.  00:8B12                      	db  #00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00 ;primera fila
      78.  00:8B12  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
      79.  00:8B22                      	db  #00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00
      79.  00:8B22  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
      80.  00:8B32                      	db  #00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00
      80.  00:8B32  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
      81.  00:8B42                      	db  #00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00
      81.  00:8B42  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
      82.  00:8B52                      	db  #00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00
      82.  00:8B52  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
      83.  00:8B62                      	db  #00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00
      83.  00:8B62  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
      84.  00:8B72                      	db  #00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00	;ultima fila
      84.  00:8B72  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
      85.  00:8B82                      	
      86.  00:8B82                      habitaciones_nivel6:
      87.  00:8B82                      	db  #6F,#6F,#01,#01,#02,#02,#03,#03,#04,#04,#05,#05,#06,#06,#FF,#00 ;primera fila
      87.  00:8B82  6F 6F 01 01 02 02 03 03 04 04 05 05 06 06 FF 00 
      88.  00:8B92                      	db  #17,#10,#11,#11,#12,#12,#13,#13,#14,#14,#15,#15,#16,#16,#FF,#00
      88.  00:8B92  17 10 11 11 12 12 13 13 14 14 15 15 16 16 FF 00 
      89.  00:8BA2                      	db  #20,#20,#21,#21,#22,#22,#23,#23,#24,#24,#25,#25,#26,#26,#FF,#00
      89.  00:8BA2  20 20 21 21 22 22 23 23 24 24 25 25 26 26 FF 00 
      90.  00:8BB2                      	db  #30,#30,#31,#31,#32,#32,#33,#33,#34,#34,#35,#35,#36,#36,#FF,#00
      90.  00:8BB2  30 30 31 31 32 32 33 33 34 34 35 35 36 36 FF 00 
      91.  00:8BC2                      	db  #40,#40,#41,#41,#42,#42,#43,#43,#44,#44,#45,#45,#46,#46,#FF,#00
      91.  00:8BC2  40 40 41 41 42 42 43 43 44 44 45 45 46 46 FF 00 
      92.  00:8BD2                      	db  #50,#50,#51,#51,#52,#52,#53,#53,#54,#54,#55,#55,#56,#56,#FF,#00
      92.  00:8BD2  50 50 51 51 52 52 53 53 54 54 55 55 56 56 FF 00 
      93.  00:8BE2                      	db  #60,#60,#61,#61,#62,#62,#63,#63,#64,#64,#65,#65,#66,#66,#FF,#00	;ultima fila
      93.  00:8BE2  60 60 61 61 62 62 63 63 64 64 65 65 66 66 FF 00 
      94.  00:8BF2                      
      95.  00:8BF2                      
     171   00:8BF2                      	
     172   00:8BF2                      	include "variables.asm"
       1.  00:8BF2                      ;;=====================================================
       2.  00:8BF2                      ;;DEFINICIÓN DE VARIABLES
       3.  00:8BF2                      ;;=====================================================	
       4.  00:8BF2                      ;definicion de variable del prota usando la estructura del punto de mira
       5.  00:8BF2                      prota:		ESTRUCTURA_PUNTOMIRA
       5.  00:8BF2  64 64 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
       6.  00:8C02                      
       7.  00:8C02                      array_aux_vidas: 		;array para pintar de golpe el marcador de vidas
       8.  00:8C02                      			DB		0,0,0,0,0,0,0,0
       8.  00:8C02  00 00 00 00 00 00 00 00 
       9.  00:8C0A                      actualiza_vidas_sn:
      10.  00:8C0A  00                  			DB		0 	;valor que indica si hay que actualizar el marcador de vidas 1 ó no 0
      11.  00:8C0B                      
      12.  00:8C0B                      array_aux_reliquias:	;array para pintar de golpe el marcador de reliquias
      13.  00:8C0B                      			DB		0,0,0,0,0,0,0,0
      13.  00:8C0B  00 00 00 00 00 00 00 00 
      14.  00:8C13                      actualiza_reliquias_sn:
      15.  00:8C13  00                  			DB		0 	;valor que indica si hay que actualizar el marcador de reliquias 1 ó no 0
      16.  00:8C14                      
      17.  00:8C14                      array_aux_energia:		;array para pintar de golpe el marcador de energía
      18.  00:8C14                      			DB		16,0,0,0,0,0,0 ;el 16 primero es porque siempre estará pintado el cuadro primero rojo
      18.  00:8C14  10 00 00 00 00 00 00 
      19.  00:8C1B                      ultimo_pos_array_aux_energia:
      20.  00:8C1B  00                  			DB		0			;el array completo es de 8 pero para posicionar sin niecesidad de cálculos  etiqueto este aparte
      21.  00:8C1C                      			
      22.  00:8C1C                      array_aux_mapa_limpiar:	;es por facilitar el reseteo del mapa (pinto 7 lineas en negro con bios) la otra opción es más larga en código y complicada aunque más rápida
      23.  00:8C1C                      			DB		0,0,0,0,0,0,0
      23.  00:8C1C  00 00 00 00 00 00 00 
      24.  00:8C23                      
      25.  00:8C23                      actualiza_puertas_sn:	;0 no 1 sí (se pone a 1 cuando se cambia de habitación y al terminar se vuelve a poner a 0)
      26.  00:8C23  00                  			DB		0 	;valor que indica si hay que actualizar las puertas de una pantalla (se crea porque sólo hay que actualizar si se cambia a de hab)
      27.  00:8C24                      			
      28.  00:8C24                      ;; nota importante: cada vez que se cambie de nivel se actualizará el contenido
      29.  00:8C24                      ;; arrays con mapa de tiles de las puertas
      30.  00:8C24                      array_puerta_arriba:
      31.  00:8C24  03 01 01 03         array_puerta_arriba1:		DB	3,1,1,3
      32.  00:8C28  01 01 01 01         array_puerta_arriba2:		DB	1,1,1,1
      33.  00:8C2C  01 01 01 01         array_puerta_arriba3:		DB	1,1,1,1
      34.  00:8C30  01 01 01 01         array_puerta_arriba4:		DB	1,1,1,1
      35.  00:8C34  01 01 01 01         array_puerta_arriba5:		DB	1,1,1,1
      36.  00:8C38                      
      37.  00:8C38                      array_puerta_derecha:
      38.  00:8C38  01 03 03            array_puerta_derecha1:		DB	1,3,3
      39.  00:8C3B  01 01 03            array_puerta_derecha2:		DB	1,1,3
      40.  00:8C3E  01 01 01            array_puerta_derecha3:		DB	1,1,1
      41.  00:8C41  01 01 01            array_puerta_derecha4:		DB	1,1,1
      42.  00:8C44  01 01 01            array_puerta_derecha5:		DB	1,1,1
      43.  00:8C47  02 01 01            array_puerta_derecha6:		DB	2,1,1
      44.  00:8C4A  04 02 01            array_puerta_derecha7:		DB	4,2,1
      45.  00:8C4D                      	
      46.  00:8C4D  01 01 01 01         array_puerta_abajo:			DB	1,1,1,1
      47.  00:8C51                      
      48.  00:8C51                      array_puerta_izquierda:
      49.  00:8C51  03 03 01            array_puerta_izquierda1:	DB	3,3,1
      50.  00:8C54  03 01 01            array_puerta_izquierda2:	DB	3,1,1
      51.  00:8C57  01 01 01            array_puerta_izquierda3:	DB	1,1,1
      52.  00:8C5A  01 01 01            array_puerta_izquierda4:	DB	1,1,1
      53.  00:8C5D  01 01 01            array_puerta_izquierda5:	DB	1,1,1
      54.  00:8C60  01 01 02            array_puerta_izquierda6:	DB	1,1,2
      55.  00:8C63  01 02 04            array_puerta_izquierda7:	DB	1,2,4
      56.  00:8C66                      
      57.  00:8C66                      
      58.  00:8C66                      ;;variables para teclas teclas y joystick (control del punto de mira)
      59.  00:8C66  00                  teclas_pulsadas:			DB	0	;4 bits altos (disparo normal espacio o alternativo shift) 4 bits siguientes movimiento
      60.  00:8C67  00                  accion_joystick:			DB	0	;4 bits altos (disparo normal A o alternativo B) 4 bits siguientes movimiento
      61.  00:8C68                      array_movimientos_cursores:			;posiciones que tras mirar teclado y 4srr devuelve y su traducción en movmiento a cursor
      62.  00:8C68                      							DB	9,9,9,4,9,2,9,3,9,9,6,5,8,1,7,0
      62.  00:8C68  09 09 09 04 09 02 09 03 09 09 06 05 08 01 07 00 
      63.  00:8C78                      
      64.  00:8C78                      
      65.  00:8C78                      ;array de 4 bytes x 32 sprites posibles en pantalla que sobreescribirá la tabla de sprites actualizando VRAM
      66.  00:8C78                      array_sprites:
      67.  00:8C78  00 (8)              array_sprites_pm:				DS	2 * 4
      68.  00:8C80  00 (120)            array_sprites_enem:				DS	30 * 4
      69.  00:8CF8  00 (140)            lista_enemigos:					DS	10 * ESTRUCTURA_ENEMIGO
      70.  00:8D84                      ; puntero al array a pintar en VRAM
      71.  00:8D84  00 00               puntero_array_atrib_array_VRAM: DW	0	;ARRAYSPTRIES + 8
      72.  00:8D86                      
      73.  00:8D86                      
     173   00:8D86                      
     174   00:8D86                      
     175   00:8D86                      	
     176   00:8D86                      ;;=====================================================
     177   00:8D86                      ;;DEFINICIÓN DE PANTALLAS
     178   00:8D86                      ;;=====================================================		
     179   00:8D86                      	include "pantallas.asm"
       1.  00:8D86                      ;;=====================================================
       2.  00:8D86                      ;;DEFINICIÓN DE PANTALLAS
       3.  00:8D86                      ;;=====================================================		
       4.  00:8D86                      
       5.  00:8D86                      ; bancos 1 y 2 y de pantalla 1 (en realidad es una pantalla de pruebas)
       6.  00:8D86                      tiles_patrones_pantalla11:	
       7.  00:8D86  (0023)              tiles_patrones_pantalla12:	incbin "pan1_23.bank1.bin.chr.pletter"
       8.  00:8DA9                      tiles_color_pantalla11:		
       9.  00:8DA9  (0018)              tiles_color_pantalla12:		incbin "pan1_23.bank1.bin.clr.pletter"
      10.  00:8DC1  (001A)              tiles_mapa_pantalla11:		incbin "pan1_23.bank0.bin.map.pletter"
      11.  00:8DDB  (002A)              tiles_mapa_pantalla12:		incbin "pan1_23.bank1.bin.map.pletter"
      12.  00:8E05                      
      13.  00:8E05                      
      14.  00:8E05                      
      15.  00:8E05                      
      16.  00:8E05                      
      17.  00:8E05                      
      18.  00:8E05                      ; 3º banco que es la parte de puntos, vidas, mapas, etc... es común
      19.  00:8E05  (0146)              tiles_patrones_pantalla3:	incbin "pan_33.bin.chr.pletter"
      20.  00:8F4B  (0035)              tiles_color_pantalla3:		incbin "pan_33.bin.clr.pletter"
      21.  00:8F80  (006F)              tiles_mapa_pantalla3:		incbin "pan_33.bin.map.pletter"
      22.  00:8FEF                      
      23.  00:8FEF                      ;NOTA: FALTARÍAN PANTALLAS ESPECIALES (POR DEFINIR)
     180   00:8FEF                      	
     181   00:8FEF                      END:

    LABELS
-------------------------------------------------
00:000000D8   GTTRIG
00:000000D5   GTSTCK
00:0000F3DB   CLIKSW
00:0000013E X RDVDP
00:00000047   WRTVDP
00:0000005C   LDIRVM
00:00000059 X LDIRMV
00:0000005F   CHGMOD
00:00000041 X DISSCR
00:00000044 X ENASCR
00:00000062   CHGCLR
00:0000F3E9   FORCLR
00:0000F3EA   BAKCLR
00:0000F3EB   BDRCLR
00:000000C3   CLS
00:0000F3DF X RG0SAV
00:0000F3E0   RG1SAV
00:0000F3E1 X RG2SAV
00:0000F3E2 X RG3SAV
00:0000F3E3 X RG4SAV
00:0000F3E4 X RG5SAV
00:0000F3E5 X RG6SAV
00:0000F3E6 X RG7SAV
00:0000F3E7 X STATFL
00:00000099   REGEST
00:00000098   REGESCVDP
00:00000000   CHRTBL
00:00001800   TILMAP
00:00001B00   SPRART
00:00002000   CLRTBL
00:00003800 X SPRTBL
00:00000001   SI
00:00000000 X NO
00:00000000 X COLTRASP
00:00000001 X COLNEGRO
00:00000002 X COLVERDE
00:00000003 X COLVERCLA
00:00000004 X COLAZULOSC
00:00000005 X COLAZULLA
00:00000006 X COLROJOOSC
00:00000007 X COLCYAN
00:00000008   COLROJO
00:00000009 X COLROJOCLA
00:0000000A X COLAMAROSC
00:0000000B X COLAMARCLA
00:0000000C X COLVERDOSC
00:0000000D X COLMAGENTA
00:0000000E X COLGRIS
00:0000000F   COLBLANCO
00:000002F8   POSMAPLIN1
00:000002D8   POSMAPLIN2
00:000002B8   POSMAPLIN3
00:00000298   POSMAPLIN4
00:00000278   POSMAPLIN5
00:00000258   POSMAPLIN6
00:00000238   POSMAPLIN7
00:0000000D   POSCARAMAP
00:00000248   POSVIDAS
00:00000011   POSRELIMAP
00:000002C8   POSRELIQ
00:00000288   POSENERG
00:000002B4   POSNIVEL
00:00000238   POSMAPA
00:000001EE   POSPUERABAJ
00:0000008E   POSPUERARRI
00:000000FC   POSPUERDERE
00:000000E1   POSPUERIZQU
00:00000013   TILEMAPPROT
00:00000009   TILEMAPVACI
00:00000010   TILEMAPROJO
00:0000000F   TILEMAPAMAR
00:0000000E   TILEMAPVERD
00:00000008   NMAXVIDREL
00:00000007   NHABNIVEL
00:000000F8 X MAXENERGIA
00:000000D9   TILEENERG8
00:000000BA   TILEENERG7
00:0000009B   TILEENERG6
00:0000007C   TILEENERG5
00:0000005D   TILEENERG4
00:0000003E   TILEENERG3
00:0000001F   TILEENERG2
00:00000000   TILENEGRO
00:00000000 X LIMPANTIZQ
00:000000FF   LIMPANTDER
00:00000000 X LIMPANTARR
00:00000080   LIMPANTABA
00:00000001   MUEARR
00:00000002   MUEARRDER
00:00000003   MUEDER
00:00000004   MUEDERABA
00:00000005   MUEABA
00:00000006   MUEABAIZQ
00:00000007   MUEIZQ
00:00000008   MUEIZQARR
00:00000006 X BASEMAPY
00:00000003 X BASEMAPX
00:00008000   START
00:00008023   loop_principal
00:0000802A X mira_pinta_puertas
00:00008036   fin_mira_pinta_puertas
00:00008036 X mira_pinta_vidas
00:0000803F   fin_mira_pinta_vidas
00:0000803F X mira_pinta_reliquias
00:0000804C   fin_mira_pinta_reliquias
00:00008055 X fin_programa_principal
00:00008056   inicializa_variables_pruebas
00:00008083 X fin_inicializa_variables_pruebas
00:00008084   inicializa_niveles
00:00008093   inicializa_niveles.bucle_borra_hab
00:00008098 X fin_iniciliza_niveles
00:00008099   actualiza_marcador_vidas
00:0000809F   loop_marcador_caras_negro
00:000080A4 X fin_loop_marcador_caras_negro
00:000080AB   loop_marcador_caras
00:000080B0 X fin_loop_marcador_caras
00:000080B1 X fin_actualiza_marcador_vidas
00:000080B2   actualiza_marcador_reliquias
00:000080B7   loop_marcador_reliquias_negro
00:000080BC X fin_loop_marcador_reliquias_negro
00:000080C3   loop_marcador_reliquias
00:000080C8 X fin_loop_marcador_reliquias
00:000080C8 X fin_actualiza_marcador_reliquias
00:000080C9   localiza_info_habitacion
00:000080D6   localiza_info_habitacion.primer_producto
00:000080E2   localiza_info_habitacion.segundo_producto
00:000080E5 X localiza_info_habitacion.fin_seg_prod
00:000080E9   localiza_info_habitacion.no_suma_niveles_previos
00:000080FC   localiza_info_habitacion.situa_columna
00:0000810E X fin_localiza_info_habitacion
00:0000810F   sub_preparapantalla
00:0000810F X elimina_clic
00:00008113 X fin_elimina_clic
00:00008113 X limpia_pantalla
00:00008117 X fin_limpia_pantalla
00:00008117 X set_color
00:00008129 X fin_set_color
00:00008129 X screen2
00:0000812E X sprites_16_16
00:0000813C X fin_sub_preparapantalla
00:0000813C   pinta_pantalla_completa
00:00008142 X fin_pinta_pantalla_completa
00:00008143   pinta_parte_superior_pantalla
00:00008179 X fin_pinta_parte_superior_pantalla
00:0000817A   pinta_parte_inferior_pantalla
00:00008195 X fin_pinta_parte_inferior_pantalla
00:00008195   pinta_vidas
00:000081A7 X fin_pinta_vidas
00:000081A8   pinta_reliquias
00:000081BA X fin_pinta_reliquias
00:000081BB   pinta_nivel
00:000081C7 X fin_pinta_nivel
00:000081C8   pinta_tile_suelto
00:000081D5 X fin_pinta_tile_suelto
00:000081D6   mira_pinta_energia
00:000081DC X pinta_ener
00:000081DC X pinta_ener_tile_8
00:000081E8   pinta_ener_tile_8_negro
00:000081E9   pinta_ener_tile_7
00:000081F3   pinta_ener_tile_7_negro
00:000081F4   pinta_ener_tile_6
00:000081FE   pinta_ener_tile_6_negro
00:000081FF   pinta_ener_tile_5
00:00008209   pinta_ener_tile_5_negro
00:0000820A   pinta_ener_tile_4
00:00008214   pinta_ener_tile_4_negro
00:00008215   pinta_ener_tile_3
00:0000821F   pinta_ener_tile_3_negro
00:00008220   pinta_ener_tile_2
00:0000822A   pinta_ener_tile_2_negro
00:0000822B   fin_mira_pinta_energia
00:0000822D   pinta_energia
00:0000823B X fin_pinta_energia
00:0000823C   borra_mapa
00:00008292 X fin_borra_mapa
00:00008293   pinta_array
00:000082A1   pinta_array.pa_pinta_fila
00:000082A2   pinta_array.pa_pinta_columnas
00:000082C5 X fin_pinta_array
00:000082C6   wordaux1
00:000082C8   wordaux2
00:000082CA   pinta_puertas
00:000082E7 X fin_pinta_puertas
00:000082E8   pinta_puerta_aba
00:000082FD X fin_pinta_puerta_aba
00:000082FD   pinta_puerta_arr
00:00008312 X fin_pinta_puerta_arr
00:00008312   pinta_puerta_der
00:00008327 X fin_pinta_puerta_der
00:00008327   pinta_puerta_izq
00:0000833C X fin_pinta_puerta_izq
00:0000833C   posiciona_en_mapa
00:00008340 X posiciona_en_mapa.sumar_fila
00:0000836A X posiciona_en_mapa.fila_0
00:00008371   posiciona_en_mapa.fila_1
00:00008378   posiciona_en_mapa.fila_2
00:0000837F   posiciona_en_mapa.fila_3
00:00008386   posiciona_en_mapa.fila_4
00:0000838D   posiciona_en_mapa.fila_5
00:00008394 X posiciona_en_mapa.fila_6
00:00008394   posiciona_en_mapa.sumar_columna
00:000083A7   pinta_pos_mapa_vacio
00:000083A9   fin_pinta_pos_mapa
00:000083AC X fin_posiciona_en_mapa
00:000083AC   carga_patrones_sprites_nivel1
00:0000847C X fin_carga_patrones_sprites
00:0000847D   render_sprites
00:00008489 X fin_actualiza_array_sprites_vram
00:00008489   vuelca_resultado_puntomira_array
00:000084AE X vuelca_resultado_puntomira_array.codigo_color_1
00:000084B7   vuelca_resultado_puntomira_array.codigo_color_2
00:000084C0 X fin_vuelca_resultado_puntomira_array
00:000084C0   check_player
00:00008505 X fin_check_player
00:00008506   mueve_arriba
00:00008511   mueve_arriba.no_decrementa_y
00:00008512 X fin_mueve_arriba
00:00008513   mueve_arriba_derecha
00:00008519 X fin_mueve_arriba_derecha
00:00008519   mueve_derecha
00:00008526   mueve_derecha.no_incrementa_x
00:00008527 X fin_mueve_derecha
00:00008528   mueve_derecha_abajo
00:0000852E X fin_mueve_derecha_abajo
00:0000852E   mueve_abajo
00:0000853B   mueve_abajo.no_incrementa_y
00:0000853C X fin_mueve_abajo
00:0000853D   mueve_abajo_izquierda
00:00008543 X fin_mueve_abajo_izquierda
00:00008543   mueve_izquierda
00:0000854E   mueve_izquierda.no_decrementa_x
00:0000854F X fin_mueve_izquierda
00:00008550   mueve_izquierda_arriba
00:00008556 X fin_mueve_izquierda_arriba
00:00008556   obtiene_tecla_pulsada
00:0000856B   obtiene_tecla_pulsada.finsi_pulsado_shift
00:00008581   obtiene_tecla_pulsada.finsi_pulsado_espacio
00:00008595 X fin_obtiene_tecla_pulsada
00:00008596   obtiene_accion_joystick
00:0000859E X obtiene_accion_joystick.mira_boton_1
00:000085AB   obtiene_accion_joystick.mira_boton_2
00:000085B5   obtiene_accion_joystick.fin_mira_boton
00:000085BD X fin_obtiene_accion_joystick
00:000085BE   mira_disparo
00:000085C2 X mira_disparo.mira_boton_pulsado1
00:000085CE   mira_disparo.mira_boton_pulsado2
00:000085D9 X fin_mira_disparo
00:000085D9   usa_reliquia
00:000085D9 X fin_usa_reliquia
00:000085DA   depack_VRAM
00:00008607   literal
00:0000860C   loop
00:00008615 X getlen
00:0000861B   lus
00:00008638   lenok
00:00008645   mode7
00:0000864B   mode6
00:00008651   mode5
00:00008657   mode4
00:0000865D   mode3
00:00008663   mode2
00:00008673   offsok
00:0000867E   offsok.loop
00:000086A0   getbit
00:000086A4   getbitexx
00:000086AA   Depack_out
00:000086AC   modes
00:000086BA   prota_nivel
00:000086BB   prota_vidas
00:000086BC   prota_reliquias
00:000086BD   prota_pos_mapx
00:000086BE   prota_pos_mapy
00:000086BF   prota_energia
00:00000000 X ESTRUCTURA_PUNTOMIRA.posx
00:00000001 X ESTRUCTURA_PUNTOMIRA.posy
00:00000002 X ESTRUCTURA_PUNTOMIRA.escena
00:00000003 X ESTRUCTURA_PUNTOMIRA.velocidad
00:00000004 X ESTRUCTURA_PUNTOMIRA.boton2_pressed
00:00000005 X ESTRUCTURA_PUNTOMIRA.pm_aux1
00:00000006 X ESTRUCTURA_PUNTOMIRA.pm_aux2
00:00000007 X ESTRUCTURA_PUNTOMIRA.pm_aux3
00:00000008 X ESTRUCTURA_PUNTOMIRA.pm_aux4
00:00000009 X ESTRUCTURA_PUNTOMIRA.pm_aux5
00:0000000A X ESTRUCTURA_PUNTOMIRA.pm_aux6
00:0000000B X ESTRUCTURA_PUNTOMIRA.pm_aux7
00:0000000C X ESTRUCTURA_PUNTOMIRA.pm_aux8
00:0000000D X ESTRUCTURA_PUNTOMIRA.pm_aux9
00:0000000E X ESTRUCTURA_PUNTOMIRA.pm_aux10
00:0000000F X ESTRUCTURA_PUNTOMIRA.pm_aux11
00:00000010 X ESTRUCTURA_PUNTOMIRA
00:00000000 X ESTRUCTURA_ENEMIGO.tipo
00:00000001 X ESTRUCTURA_ENEMIGO.posx
00:00000002 X ESTRUCTURA_ENEMIGO.posy
00:00000003 X ESTRUCTURA_ENEMIGO.color
00:00000004 X ESTRUCTURA_ENEMIGO.escena
00:00000005 X ESTRUCTURA_ENEMIGO.contador_siguiente_escena
00:00000006 X ESTRUCTURA_ENEMIGO.reset_contador
00:00000007 X ESTRUCTURA_ENEMIGO.dano
00:00000008 X ESTRUCTURA_ENEMIGO.energia
00:00000009 X ESTRUCTURA_ENEMIGO.ver_hor
00:0000000A X ESTRUCTURA_ENEMIGO.manejador_dibujo
00:0000000C X ESTRUCTURA_ENEMIGO.en_aux3
00:0000000D X ESTRUCTURA_ENEMIGO.en_aux4
00:0000000E   ESTRUCTURA_ENEMIGO
00:00000000 X ESTRUCTURA_EXTRA.tipo
00:00000001 X ESTRUCTURA_EXTRA.posx
00:00000002 X ESTRUCTURA_EXTRA.posy
00:00000003 X ESTRUCTURA_EXTRA.color
00:00000004 X ESTRUCTURA_EXTRA.contador
00:00000005 X ESTRUCTURA_EXTRA.en_aux1
00:00000006 X ESTRUCTURA_EXTRA.en_aux2
00:00000007 X ESTRUCTURA_EXTRA.en_aux3
00:00000008 X ESTRUCTURA_EXTRA.en_aux4
00:00000009 X ESTRUCTURA_EXTRA.en_aux5
00:0000000A X ESTRUCTURA_EXTRA.en_aux6
00:0000000B X ESTRUCTURA_EXTRA.en_aux7
00:0000000C X ESTRUCTURA_EXTRA.en_aux8
00:0000000D X ESTRUCTURA_EXTRA.en_aux9
00:0000000E X ESTRUCTURA_EXTRA.en_aux10
00:0000000F X ESTRUCTURA_EXTRA.en_aux11
00:00000010 X ESTRUCTURA_EXTRA
00:000086C0 X sprites_pantantalla
00:000086C0   sprite_punto_mira_1
00:000086E0   sprite_punto_mira_2
00:00008700   sprite_punto_mira_1_mejorado
00:00008720   sprite_punto_mira_2_mejorado
00:00008740   sprite_reliquia
00:00008760 X sprite_vida_extra
00:00008780   sprite_planta
00:000087A0   sprite_ballesta_mejorada
00:000087C0   sprite_ciempies1
00:000087E0   sprite_ciempies2
00:00008800   sprite_arana1
00:00008820   sprite_arana2
00:00008840   sprite_serpiente1
00:00008860   sprite_serpiente2
00:00008880   sprite_murcielago1
00:000088A0   sprite_murcielago2
00:000088C0   sprite_explosion
00:000088E0   habitacion_actual
00:000088E2   habitaciones_juego
00:000088E2 X habitaciones_nivel0
00:00008952 X habitaciones_nivel1
00:000089C2 X habitaciones_nivel2
00:00008A32 X habitaciones_nivel3
00:00008AA2 X habitaciones_nivel4
00:00008B12 X habitaciones_nivel5
00:00008B82 X habitaciones_nivel6
00:00008BF2 X prota
00:00008BF2   prota.posx
00:00008BF3   prota.posy
00:00008BF4   prota.escena
00:00008BF5 X prota.velocidad
00:00008BF6 X prota.boton2_pressed
00:00008BF7 X prota.pm_aux1
00:00008BF8 X prota.pm_aux2
00:00008BF9 X prota.pm_aux3
00:00008BFA X prota.pm_aux4
00:00008BFB X prota.pm_aux5
00:00008BFC X prota.pm_aux6
00:00008BFD X prota.pm_aux7
00:00008BFE X prota.pm_aux8
00:00008BFF X prota.pm_aux9
00:00008C00 X prota.pm_aux10
00:00008C01 X prota.pm_aux11
00:00008C02   array_aux_vidas
00:00008C0A   actualiza_vidas_sn
00:00008C0B   array_aux_reliquias
00:00008C13   actualiza_reliquias_sn
00:00008C14   array_aux_energia
00:00008C1B   ultimo_pos_array_aux_energia
00:00008C1C   array_aux_mapa_limpiar
00:00008C23   actualiza_puertas_sn
00:00008C24   array_puerta_arriba
00:00008C24 X array_puerta_arriba1
00:00008C28 X array_puerta_arriba2
00:00008C2C X array_puerta_arriba3
00:00008C30 X array_puerta_arriba4
00:00008C34 X array_puerta_arriba5
00:00008C38   array_puerta_derecha
00:00008C38 X array_puerta_derecha1
00:00008C3B X array_puerta_derecha2
00:00008C3E X array_puerta_derecha3
00:00008C41 X array_puerta_derecha4
00:00008C44 X array_puerta_derecha5
00:00008C47 X array_puerta_derecha6
00:00008C4A X array_puerta_derecha7
00:00008C4D   array_puerta_abajo
00:00008C51   array_puerta_izquierda
00:00008C51 X array_puerta_izquierda1
00:00008C54 X array_puerta_izquierda2
00:00008C57 X array_puerta_izquierda3
00:00008C5A X array_puerta_izquierda4
00:00008C5D X array_puerta_izquierda5
00:00008C60 X array_puerta_izquierda6
00:00008C63 X array_puerta_izquierda7
00:00008C66   teclas_pulsadas
00:00008C67   accion_joystick
00:00008C68   array_movimientos_cursores
00:00008C78   array_sprites
00:00008C78   array_sprites_pm
00:00008C80 X array_sprites_enem
00:00008CF8 X lista_enemigos
00:00008D84 X puntero_array_atrib_array_VRAM
00:00008D86   tiles_patrones_pantalla11
00:00008D86   tiles_patrones_pantalla12
00:00008DA9   tiles_color_pantalla11
00:00008DA9   tiles_color_pantalla12
00:00008DC1   tiles_mapa_pantalla11
00:00008DDB   tiles_mapa_pantalla12
00:00008E05   tiles_patrones_pantalla3
00:00008F4B   tiles_color_pantalla3
00:00008F80   tiles_mapa_pantalla3
00:00008FEF   END


 Output: t4.out
-------------------------------------------------

 Page: 00
  Org: 00008000  Size: *  Used: 00000000

    No output

 Output: t4.bin
-------------------------------------------------

 Page: 00
  Org: 00008000  Size: *  Used: 00000FF6

   Address   Length Align   Label
   00008000    4086         START
