Sjasm Z80 Assembler v0.42c - www.xl2s.tk             [2021.10.31 - 14:30:25]

t4.asm
Errors: 0

       1   00:0000                      	OUTPUT	"t4.bin"
       2   00:8000                      	
       3   00:8000                      ;;=====================================================
       4   00:8000                      ;;DEFINICIÓN DE CONSTANTES
       5   00:8000                      ;;=====================================================	
       6   00:8000                      	include "constantes.asm"
       1.  00:8000                      ;;=====================================================
       2.  00:8000                      ;; FICHERO constantes.asm
       3.  00:8000                      ;;=====================================================
       4.  00:8000                      
       5.  00:8000                      ;;ETIQUETAS/CONSTANTES BIOS TECLADO
       6.  00:8000  (00:00D8)           GTTRIG		equ		#00D8	;Returns current trigger status
       7.  00:8000  (00:00D5)           GTSTCK		equ		#00D5	;Returns the joystick/cursors status
       8.  00:8000  (00:F3DB)           CLIKSW		equ		#F3DB	;deshabilita el sonido de clic cuando se pulsa una tecla
       9.  00:8000                      
      10.  00:8000                      ;;ETIQUETAS/CONSTANTES BIOS VDP
      11.  00:8000  (00:013E)           RDVDP		equ		#013E	;lee registro status VDP
      12.  00:8000  (00:0047)           WRTVDP		equ		#0047	;escribe registros del VDP
      13.  00:8000  (00:005C)           LDIRVM		equ		#005C	;RAM/ROM -> VRAM
      14.  00:8000  (00:0059)           LDIRMV		equ		#0059	;VRAM -> RAM
      15.  00:8000  (00:005F)           CHGMOD		equ		#005F	;cambia modo pantalla (screen mode)
      16.  00:8000  (00:0041)           DISSCR  	equ		#0041	;desactiva pantanlla
      17.  00:8000  (00:0044)           ENASCR  	equ		#0044	;activa pantalla
      18.  00:8000  (00:0062)           CHGCLR  	equ		#0062	;cambia color de pantalla (toca A y direcciones)
      19.  00:8000  (00:F3E9)           FORCLR		equ		#F3E9	;zona memoria color foreground
      20.  00:8000  (00:F3EA)           BAKCLR  	equ		#F3EA	;zona memoria color background
      21.  00:8000  (00:F3EB)           BDRCLR 		equ		#F3EB	;zona memoria bordercolor
      22.  00:8000  (00:00C3)           CLS			equ		#00C3	;limpia pantalla (necesita A=0)
      23.  00:8000                      
      24.  00:8000                      ;;ETIQUETAS/CONSTANTES REGISTROS VDP
      25.  00:8000  (00:F3DF)           RG0SAV		equ		#F3DF	;Mirror of VDP register 0 (Basic: VDP(0))
      26.  00:8000  (00:F3E0)           RG1SAV		equ		#F3E0	;Mirror of VDP register 1 (Basic: VDP(1))
      27.  00:8000  (00:F3E1)           RG2SAV		equ		#F3E1	;Mirror of VDP register 2 (Basic: VDP(2))
      28.  00:8000  (00:F3E2)           RG3SAV		equ		#F3E2	;Mirror of VDP register 3 (Basic: VDP(3))
      29.  00:8000  (00:F3E3)           RG4SAV		equ		#F3E3	;Mirror of VDP register 4 (Basic: VDP(4))
      30.  00:8000  (00:F3E4)           RG5SAV		equ		#F3E4	;Mirror of VDP register 5 (Basic: VDP(5))
      31.  00:8000  (00:F3E5)           RG6SAV		equ		#F3E5	;Mirror of VDP register 6 (Basic: VDP(6))
      32.  00:8000  (00:F3E6)           RG7SAV		equ		#F3E6	;Mirror of VDP register 7 (Basic: VDP(7))
      33.  00:8000  (00:F3E7)           STATFL		equ		#F3E7	;Mirror of VDP(8) status register (S#0)
      34.  00:8000                      
      35.  00:8000  (00:0099)           REGEST		equ		#0099	;registro de estado para escribir directamente en VRAM
      36.  00:8000  (00:0098)           REGESCVDP	equ		#0098	;registro donde escribir valor para VRAM
      37.  00:8000                      
      38.  00:8000                      ;;ETIQUETAS/CONSTANTES REGISTROS PSG (PARA JOYSTICK)
      39.  00:8000  (00:00A0)           PSG_A  equ  0a0h  ;reg address
      40.  00:8000  (00:00A1)           PSG_W  equ  0a1h  ;reg data WR
      41.  00:8000  (00:00A2)           PSG_R  equ  0a2h  ;reg data
      42.  00:8000                      
      43.  00:8000                      
      44.  00:8000                      ;;ETIQUETAS DE ZONAS DE MEMORIA DE LA VPD (MSX1)
      45.  00:8000  (00:0000)           CHRTBL		equ		#0000
      46.  00:8000  (00:1800)           TILMAP		equ		#1800
      47.  00:8000  (00:1B00)           SPRART		equ		#1B00
      48.  00:8000  (00:2000)           CLRTBL		equ		#2000
      49.  00:8000  (00:3800)           SPRTBL		equ		#3800
      50.  00:8000                      
      51.  00:8000                      
      52.  00:8000                      ;;ETIQUETAS ESTANDAR PARA DAR MÁS CLARIDAD AL CODIGO
      53.  00:8000  (00:0001)           SI			equ		1
      54.  00:8000  (00:0000)           NO			equ		0
      55.  00:8000  (00:0001)           PUERTAACTIV equ		1
      56.  00:8000  (00:0004)           LIMCADENCIA equ		4	;nº de veces que se ejecutará el disparo antes de ejecutar un disparo real (porque cuando se pulsa la tecl dispara 3 ó 4 veces de rápido que va)
      57.  00:8000                      ;hay que estudiar si 3 es un nº mejor
      58.  00:8000                      
      59.  00:8000                      
      60.  00:8000                      ;;PALETA DE COLORES DEL MSX
      61.  00:8000  (00:0000)           COLTRASP	equ		0
      62.  00:8000  (00:0001)           COLNEGRO	equ		1
      63.  00:8000  (00:0002)           COLVERDE	equ		2
      64.  00:8000  (00:0003)           COLVERCLA	equ		3
      65.  00:8000  (00:0004)           COLAZULOSC	equ		4
      66.  00:8000  (00:0005)           COLAZULLA	equ		5
      67.  00:8000  (00:0006)           COLROJOOSC	equ		6
      68.  00:8000  (00:0007)           COLCYAN		equ		7
      69.  00:8000  (00:0008)           COLROJO		equ		8
      70.  00:8000  (00:0009)           COLROJOCLA	equ		9
      71.  00:8000  (00:000A)           COLAMAROSC	equ		10
      72.  00:8000  (00:000B)           COLAMARCLA	equ		11
      73.  00:8000  (00:000C)           COLVERDOSC	equ		12
      74.  00:8000  (00:000D)           COLMAGENTA	equ		13
      75.  00:8000  (00:000E)           COLGRIS		equ		14
      76.  00:8000  (00:000F)           COLBLANCO	equ		15
      77.  00:8000                      
      78.  00:8000                      
      79.  00:8000                      ;;ETIQUETAS ESPECIFICAS PARA DAR MÁS CLARIDAD AL CODIGO (relacionadas con posiciones en mapa vdp)
      80.  00:8000  (00:02F8)           POSMAPLIN1  equ		#02F8
      81.  00:8000  (00:02D8)           POSMAPLIN2  equ		#02D8
      82.  00:8000  (00:02B8)           POSMAPLIN3  equ		#02B8
      83.  00:8000  (00:0298)           POSMAPLIN4  equ		#0298
      84.  00:8000  (00:0278)           POSMAPLIN5  equ		#0278
      85.  00:8000  (00:0258)           POSMAPLIN6  equ		#0258
      86.  00:8000  (00:0238)           POSMAPLIN7  equ		#0238
      87.  00:8000                      
      88.  00:8000  (00:000D)           POSCARAMAP	equ		#000D
      89.  00:8000  (00:0248)           POSVIDAS	equ		#0248
      90.  00:8000  (00:0011)           POSRELIMAP	equ		#0011
      91.  00:8000  (00:02C8)           POSRELIQ	equ		#02C8
      92.  00:8000  (00:0288)           POSENERG	equ		#0288
      93.  00:8000  (00:02B4)           POSNIVEL	equ		#02B4
      94.  00:8000  (00:0238)           POSMAPA		equ 	#0238
      95.  00:8000                      
      96.  00:8000  (00:01EE)           POSPUERABAJ equ		#01EE
      97.  00:8000  (00:008E)           POSPUERARRI equ		#008E
      98.  00:8000  (00:00FC)           POSPUERDERE equ		#00FC
      99.  00:8000  (00:00E1)           POSPUERIZQU equ		#00E1
     100.  00:8000  (00:006C)           POSESCALERA equ		#006C	;32 x 3 + columna
     101.  00:8000                      
     102.  00:8000                      ;;POSICIONES DE LAS AYUDAS EN PANTALLA BANCO 1
     103.  00:8000  (00:00A3)           POSORACION	equ		163
     104.  00:8000  (00:00A7)           POSCRUZ		equ		167
     105.  00:8000  (00:00AB)           POSAGUA		equ		171
     106.  00:8000  (00:00AF)           POSARMAD	equ		175
     107.  00:8000  (00:00B3)           POSPLANTA	equ		179
     108.  00:8000  (00:00B7)           POSVIDAEXT	equ		183
     109.  00:8000  (00:00BB)           POSBALLESTA	equ		187
     110.  00:8000                      
     111.  00:8000                      ;;POSICIONES DE LAS AYUDAS EN PANTALLA PIXEL CENTRAL X
     112.  00:8000  (00:0020)           POSORACIONX	equ		32
     113.  00:8000  (00:0040)           POSCRUZX	equ		64
     114.  00:8000  (00:0060)           POSAGUAX	equ		96
     115.  00:8000  (00:0080)           POSARMADX	equ		128
     116.  00:8000  (00:00A0)           POSPLANTAX	equ		160
     117.  00:8000  (00:00C0)           POSVIDAEXTX	equ		192
     118.  00:8000  (00:00E0)           POSBALLESTAX equ	224
     119.  00:8000                      
     120.  00:8000                      ;;POSICIONES DE LAS AYUDAS EN PANTALLA PIXEL CENTRAL Y
     121.  00:8000  (00:0070)           POSAYUDASY	equ		112	;se pone por poner porque las estructuras de ayudas ya se inicializan con este valor
     122.  00:8000                      
     123.  00:8000                      ;;POSICIÓN INICIAL DEL SPRITE DEL PUNTO DE MIRA
     124.  00:8000  (00:0078)           POSXPM		equ		120
     125.  00:8000  (00:006C)           POSYPM		equ		108
     126.  00:8000                      
     127.  00:8000                      ;;ESTADO ESTRUCTURA
     128.  00:8000  (00:0000)           INACTIVA	equ		0
     129.  00:8000  (00:0001)           ACTIVA		equ		1
     130.  00:8000  (00:0001)           HABTERMIN	equ		1
     131.  00:8000                      
     132.  00:8000                      ;;POSICIONES DE LAS ANTORCHAS
     133.  00:8000  (00:0088)           POSANTOR1	equ		136
     134.  00:8000  (00:0097)           POSANTOR2	equ		151
     135.  00:8000  (00:00C4)           MAPLLAMA1	equ		196
     136.  00:8000  (00:00C5)           MAPLLAMA2	equ		197
     137.  00:8000  (00:00FF)           RESETLLAMA	equ		255
     138.  00:8000                      
     139.  00:8000                      ;;POSICIONES DE LOS ESQUELETOS
     140.  00:8000  (00:0088)           POSESQUEL1	equ		136
     141.  00:8000  (00:0095)           POSESQUEL2	equ		149
     142.  00:8000  (00:00A9)           POSCALAVE1	equ		169
     143.  00:8000  (00:00B6)           POSCALAVE2	equ		182
     144.  00:8000  (00:0019)           RESETESQUEL	equ		25
     145.  00:8000  (00:0004)           RESETESCENAESQUEL 	equ	4	;hay 4 caras con las que el esqueleto cambia (se ha metido el 0 para facilitar código)
     146.  00:8000                      
     147.  00:8000                      ;;ETIQUETAS ESPECIFICAS PARA DAR MÁS CLARIDAD AL CODIGO (relacionadas con posiciones en en el banco de memoria)
     148.  00:8000  (00:0013)           TILEPROTAM  equ		19		;tile del prota para pintar en mapa
     149.  00:8000  (00:0009)           TILEGRISM	equ		9		;tile gris que representa vacio (por donde el prota va pasando)
     150.  00:8000  (00:0010)           TILEMAPROJO equ		16
     151.  00:8000  (00:000F)           TILEMAPAMAR equ		15
     152.  00:8000  (00:000E)           TILEMAPVERD equ		14
     153.  00:8000                      
     154.  00:8000                      
     155.  00:8000                      ;;ETIQUETAS ESPECIFICAS PARA DAR MÁS CLARIDAD AL CODIGO (generales)
     156.  00:8000  (00:0008)           NMAXVIDREL	equ		8		;el número máximo de vidas y de reliquias es de 8
     157.  00:8000  (00:0007)           NHABNIVEL	equ		7
     158.  00:8000  (00:00F8)           MAXENERGIA  equ		248
     159.  00:8000  (00:00D9)           TILEENERG8  equ		217
     160.  00:8000  (00:00BA)           TILEENERG7  equ		186
     161.  00:8000  (00:009B)           TILEENERG6  equ		155
     162.  00:8000  (00:007C)           TILEENERG5  equ		124
     163.  00:8000  (00:005D)           TILEENERG4  equ		93
     164.  00:8000  (00:003E)           TILEENERG3  equ		62
     165.  00:8000  (00:001F)           TILEENERG2  equ		31
     166.  00:8000  (00:0000)           TILENEGRO	equ		0
     167.  00:8000                      
     168.  00:8000                      ;limites
     169.  00:8000  (00:0000)           LIMPANTIZQ  equ		0
     170.  00:8000  (00:00FF)           LIMPANTDER  equ		255
     171.  00:8000  (00:0000)           LIMPANTARR  equ		0
     172.  00:8000  (00:0080)           LIMPANTABA  equ		128
     173.  00:8000                      
     174.  00:8000                      
     175.  00:8000                      ;matriz de 7x7 empieza en 0, y fila y x col, cuento desde esquina sup izq
     176.  00:8000  (00:0006)           BASEMAPY	equ		6
     177.  00:8000  (00:0003)           BASEMAPX	equ		3
     178.  00:8000                      
     179.  00:8000                      
     180.  00:8000                      
     181.  00:8000                      ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
     182.  00:8000                      ;; CONSTANTES PARA INTERRUPCIONES
     183.  00:8000                      ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
     184.  00:8000  (00:FD9A)           H.KEYI		equ     	#FD9A
     185.  00:8000  (00:FD9F)           H.TIMI	 	equ     	#FD9F
     186.  00:8000                      
     187.  00:8000                      
     188.  00:8000                      ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
     189.  00:8000                      ;; CONSTANTES PARA SONIDO 
     190.  00:8000                      ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
     191.  00:8000                      
     192.  00:8000  (F000)              	map		#f000
     193.  00:8000                      
     194.  00:8000                      ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;PT3 REPLAYER
     195.  00:8000  (00:F000)           PT3_SETUP:		#1	;set bit0 to 1, if you want to play without looping
     196.  00:8000                      					;bit7 is set each time, when loop point is passed
     197.  00:8000  (00:F001)           PT3_MODADDR:	#2
     198.  00:8000  (00:F003)           PT3_CrPsPtr:	#2
     199.  00:8000  (00:F005)           PT3_SAMPTRS:	#2
     200.  00:8000  (00:F007)           PT3_OrnPtrs:	#2
     201.  00:8000  (00:F009)           PT3_PDSP:		#2
     202.  00:8000  (00:F00B)           PT3_CSP:		#2
     203.  00:8000  (00:F00D)           PT3_PSP:		#2
     204.  00:8000  (00:F00F)           PT3_PrNote:		#1
     205.  00:8000  (00:F010)           PT3_PrSlide:	#2
     206.  00:8000  (00:F012)           PT3_AdInPtA:	#2
     207.  00:8000  (00:F014)           PT3_AdInPtB:	#2
     208.  00:8000  (00:F016)           PT3_AdInPtC:	#2
     209.  00:8000  (00:F018)           PT3_LPosPtr:	#2
     210.  00:8000  (00:F01A)           PT3_PatsPtr:	#2
     211.  00:8000  (00:F01C)           PT3_Delay:		#1
     212.  00:8000  (00:F01D)           PT3_AddToEn:	#1
     213.  00:8000  (00:F01E)           PT3_Env_Del:	#1
     214.  00:8000  (00:F01F)           PT3_ESldAdd:	#2
     215.  00:8000  (00:F021)           PT3_NTL3:		#2	; AND A / NOP (note table creator)
     216.  00:8000                      
     217.  00:8000  (00:F023)           VARS:			#0
     218.  00:8000                      
     219.  00:8000  (00:F023)           ChanA:			#29			;CHNPRM_Size
     220.  00:8000  (00:F040)           ChanB:			#29			;CHNPRM_Size
     221.  00:8000  (00:F05D)           ChanC:			#29			;CHNPRM_Size
     222.  00:8000                      
     223.  00:8000                      ;GlobalVars
     224.  00:8000  (00:F07A)           DelyCnt:		#1
     225.  00:8000  (00:F07B)           CurESld:		#2
     226.  00:8000  (00:F07D)           CurEDel:		#1
     227.  00:8000  (00:F07E)           Ns_Base_AddToNs:	#0
     228.  00:8000  (00:F07E)           Ns_Base:		#1
     229.  00:8000  (00:F07F)           AddToNs:		#1
     230.  00:8000                      
     231.  00:8000  (00:F080)           NT_:			#192	; Puntero a/tabla de frecuencias
     232.  00:8000                      
     233.  00:8000  (00:F140)           AYREGS:			#0
     234.  00:8000  (00:F140)           VT_:			#14
     235.  00:8000  (00:F14E)           EnvBase:		#2
     236.  00:8000  (00:F150)           VAR0END:		#0
     237.  00:8000                      
     238.  00:8000  (00:F150)           T1_:			#0		
     239.  00:8000  (00:F150)           T_NEW_1:		#0
     240.  00:8000  (00:F150)           T_OLD_1:		#24
     241.  00:8000  (00:F168)           T_OLD_2:		#24
     242.  00:8000  (00:F180)           T_NEW_3:		#0
     243.  00:8000  (00:F180)           T_OLD_3:		#2
     244.  00:8000  (00:F182)           T_OLD_0:		#0
     245.  00:8000  (00:F182)           T_NEW_0:		#24
     246.  00:8000  (00:F19A)           T_NEW_2:		#166
     247.  00:8000                      ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;PT3 REPLAYER END
     248.  00:8000                      
     249.  00:8000                      ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ayFX REPLAYER 
     250.  00:8000  (00:F240)           ayFX_MODE:		#1			; ayFX mode
     251.  00:8000  (00:F241)           ayFX_BANK:		#2			; Current ayFX Bank
     252.  00:8000  (00:F243)           ayFX_PRIORITY:	#1			; Current ayFX stream priotity
     253.  00:8000  (00:F244)           ayFX_POINTER:	#2			; Pointer to the current ayFX stream
     254.  00:8000  (00:F246)           ayFX_TONE:		#2			; Current tone of the ayFX stream
     255.  00:8000  (00:F248)           ayFX_NOISE:		#1			; Current noise of the ayFX stream
     256.  00:8000  (00:F249)           ayFX_VOLUME:	#1			; Current volume of the ayFX stream
     257.  00:8000  (00:F24A)           ayFX_CHANNEL:	#1			; PSG channel to play the ayFX stream
     258.  00:8000                      
     259.  00:8000                      	;IF (AYFXRELATIVE == 1 ) 
     260.  00:8000                      ;ayFX_VT:	ds	2			; ayFX relative volume table pointer
     261.  00:8000                      	;ENDIF
     262.  00:8000                      ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ayFX REPLAYER END
     263.  00:8000                      
     264.  00:8000                      
     265.  00:8000                      
       7   00:8000                      
       8   00:8000                      ;;=====================================================
       9   00:8000                      ;;DEFINICIÓN DE CABECERA DE ARCHIVO BIN
      10   00:8000                      ;;=====================================================		
      11   00:8000                      	include "cabecerabin.asm"
       1.  00:8000                      ;;=====================================================
       2.  00:8000                      ;; FICHERO cabecera.asm
       3.  00:8000                      ;;=====================================================
       4.  00:8000                      
       5.  00:8000                      ;;CABECERA FICHERO BIN
       6.  00:8000  FE                  	DB	#FE
       7.  00:8001  00 80               	DW	START
       8.  00:8003  F2 BD               	DW	END
       9.  00:8005  00 80               	DW	START
      10.  00:8007                      
      11.  00:8007                      ;;INICIO CÓDIGO PROGRAMA	
      12.  00:8007                      	ORG	#8000
      13.  00:8000                      	
      12   00:8000                      	
      13   00:8000                      START:	
      14   00:8000                      	;inicializa pantalla y entonrno
      15   00:8000  CD 55 82            	CALL	sub_preparapantalla			;screen 2,2 sin click al pulsar tecla y color 16,1,1
      16   00:8003                      	
      17   00:8003                      	;inicializa variables para parametrizar funciones y que lo que se muestre sea variable (nº vidas, mapa, puertas, pantalla, etc...)
      18   00:8003  CD FD 80            	CALL	inicializa_variables_pruebas
      19   00:8006                      	
      20   00:8006                      ;***************************************************
      21   00:8006                      	;inicializa los niveles por partida
      22   00:8006                      ;	CALL	inicializa_niveles			;no es necesario parametrizarlo según el nivel del usuario ya que se cargan todos
      23   00:8006                      ;************** quitarlo cuando pueda navegar por habitaciones y esté más avanzado el proyecto
      24   00:8006                      
      25   00:8006                      	;inicializa los valores de cada puerta excepto si están activas o no (eso ocurre cuando se matan todos los enemigos de la hab. y sólo a las puertas que se muestren)
      26   00:8006  CD E0 87            	CALL	inicializa_puertas
      27   00:8009                      	
      28   00:8009                      	;inicializa las estructuras de forma particular según ayuda pero sin poner valores de posición
      29   00:8009  CD 10 9B            	CALL	inicializa_ayudas
      30   00:800C                      	
      31   00:800C                      	;inicializa las estructuras de las antorchas y esqueletos
      32   00:800C  CD 7D 85            	CALL	inicializa_antorchas
      33   00:800F  CD 9F 85            	CALL	inicializa_esqueletos
      34   00:8012                      	
      35   00:8012                      	;pinta la pantalla (la primera o algunas especiales se pintan completamente)
      36   00:8012  CD 76 82            	CALL	pinta_pantalla_completa
      37   00:8015                      	
      38   00:8015                      	;carga sprites en memoria (SE HA RETRASADO HASTA PARAMETRIZAR LA CARGA DE PANTALLAS)
      39   00:8015  CD F4 88            	CALL 	carga_patrones_sprites_nivel
      40   00:8018                      	
      41   00:8018                      	;funciones que modificarian el marcador si se produce un evento cuando toque y cuando se pinta la pantalla ya se mira
      42   00:8018                      	;una variable para ver si el array hay que actualizarlo en pantalla o no
      43   00:8018  CD B6 83            	CALL	pinta_vidas
      44   00:801B  CD C5 83            	CALL 	pinta_reliquias
      45   00:801E  CD D4 83            	CALL	pinta_nivel
      46   00:8021  CD 54 84            	CALL	borra_mapa
      47   00:8024  CD 49 88            	CALL	pinta_puertas
      48   00:8027                      
      49   00:8027  3E 13               	LD		 A, TILEPROTAM
      50   00:8029  32 DE A9            	LD		(elemento_pintar_mapa), A
      51   00:802C  CD AB 84            	CALL	posiciona_en_mapa		;se le pasa elemento_pintar_mapa (tile del prota) está el prota y prota.posx y posy
      52   00:802F                      		
      53   00:802F  CD AE 9B            	CALL	pinta_ayudas_habitacion
      54   00:8032                      	
      55   00:8032  CD C1 85            	CALL	pinta_extra_fondo
      56   00:8035                      	
      57   00:8035                      	;esta función no va aquí sino en check colisiones pero se pone aquí para realizar pruebas
      58   00:8035  CD 0C 82            	CALL	terminada_habitacion_recorrida ;para cuando se maten todos los enemigos de la habitación
      59   00:8038                      
      60   00:8038                      	;incializacion de replayer con interrupciones
      61   00:8038                      ;	CALL	inicializa_replayer_efectos_interrupciones
      62   00:8038                      
      63   00:8038                      loop_principal:
      64   00:8038  76                  	HALT							;espera VBLANK y sincroniza
      65   00:8039                      	
      66   00:8039  CD 05 89            	CALL	render_sprites			;actualiza array de sprites y los pinta en pantalla
      67   00:803C                      	
      68   00:803C  CD 45 84            	CALL	pinta_energia			;pinta la energia en pantalla
      69   00:803F                      	
      70   00:803F  CD 38 86            	CALL	actualiza_elementos_fondo
      71   00:8042                      
      72   00:8042  CD 48 89            	CALL	check_player			;MIRA EL CONTROL Y APLICA LA LOGICA DE MOVIMIENTO DEL PROTAGONISTA
      73   00:8045                      	
      74   00:8045  C3 38 80            	JP		loop_principal
      75   00:8048                      fin_programa_principal:
      76   00:8048                      	;no necesita RET
      77   00:8048                      
      78   00:8048                      ;;=====================================================
      79   00:8048                      ;;CHECK_COLISIONES_OBJETOS
      80   00:8048                      ;;=====================================================	
      81   00:8048                      ; función: 	revisa (con enemigos+ayudas o puertas según si la habitación ha sido recorrida o no) las variables para ver si se disparó sobre ellas
      82   00:8048                      ; entrada: 	is_habitacion_terminada
      83   00:8048                      ; salida: 	-
      84   00:8048                      ; toca:		HL,BC, DE
      85   00:8048                      check_colisiones_objetos:
      86   00:8048                      
      87   00:8048                      
      88   00:8048                      ;*************************************+ esto hay que depurarlo
      89   00:8048                      
      90   00:8048  F5                  	PUSH	AF
      91   00:8049                      	
      92   00:8049                      	;pantalla limpia?
      93   00:8049  3A 8F A6            	LD		 A, (is_habitacion_terminada)
      94   00:804C  F6 00               	OR		 0
      95   00:804E  CA 57 80            	JP		 Z, .habitacion_no_terminada
      96   00:8051                      	;SI 
      97   00:8051                      	;recorre puertas y sale
      98   00:8051  CD 59 80            		CALL	check_colisiones_puertas
      99   00:8054                      		
     100   00:8054                      
     101   00:8054                      		
     102   00:8054  C3 57 80            		JP		fin_check_colisiones_objetos	
     103   00:8057                      	;NO 
     104   00:8057                      .habitacion_no_terminada:
     105   00:8057                      	;recorre ayudas
     106   00:8057                      	;recorre enemigos
     107   00:8057                      
     108   00:8057                      
     109   00:8057                      fin_check_colisiones_objetos:	
     110   00:8057  F1                  	POP		AF
     111   00:8058  C9                  	RET
     112   00:8059                      
     113   00:8059                      
     114   00:8059                      ;;che
     115   00:8059                      check_colisiones_puertas:
     116   00:8059                      .examina_puerta_arriba:
     117   00:8059  DD 21 6B 87         	LD		IX, puerta_arriba
     118   00:805D  DD 7E 00            	LD		 A, (IX)
     119   00:8060  B7                  	OR		 A							;está activa esta puerta?
     120   00:8061  CA 7A 80            	JP		 Z, .examina_puerta_derecha
     121   00:8064                      	
     122   00:8064  CD B8 80            	CALL	check_colision_puerta		;aquí ya es cosa de ver colisiones prota/puerta_izquierda
     123   00:8067                      	;recibe valor A
     124   00:8067  F6 00               	OR		 0							;hubo colisión?
     125   00:8069  CA 7A 80            	JP		 Z, .examina_puerta_derecha	;no hubo colisión por lo que examina puerta siguiente
     126   00:806C                      	;hubo colisión
     127   00:806C                      	;EJECUTA ACCIÓN Y SALE DE LA RUTINA
     128   00:806C  21 B7 80            	LD		HL, fin_check_colisiones_puertas ;se guarda dónde volver
     129   00:806F  E5                  	PUSH	HL
     130   00:8070                      	
     131   00:8070  DD 6E 05            	LD		 L, (IX + ESTRUCTURA_PUERTA.accion)
     132   00:8073  DD 66 06            	LD		 H, (IX + ESTRUCTURA_PUERTA.accion + 1)
     133   00:8076  E9                  	JP		(HL)
     134   00:8077                      	
     135   00:8077  C3 B7 80            	JP		fin_check_colisiones_puertas
     136   00:807A                      .examina_puerta_derecha:
     137   00:807A  DD 21 78 87         	LD		IX, puerta_derecha
     138   00:807E  DD 7E 00            	LD		 A, (IX)
     139   00:8081  B7                  	OR		 A							;está activa esta puerta?
     140   00:8082  CA 90 80            	JP		 Z, .examina_puerta_abajo
     141   00:8085  CD B8 80            	CALL	check_colision_puerta		;aquí ya es cosa de ver colisiones prota/puerta_izquierda
     142   00:8088                      	
     143   00:8088  F6 00               	OR		 0							;hubo colisión?
     144   00:808A  CA 90 80            	JP		 Z, .examina_puerta_abajo	;no hubo colisión por lo que examina puerta siguiente
     145   00:808D                      	;hubo colisión
     146   00:808D                      	;EJECUTA ACCIÓN Y SALE DE LA RUTINA
     147   00:808D                      	
     148   00:808D  C3 B7 80            	JP		fin_check_colisiones_puertas
     149   00:8090                      .examina_puerta_abajo:
     150   00:8090  DD 21 85 87         	LD		IX, puerta_abajo
     151   00:8094  DD 7E 00            	LD		 A, (IX)
     152   00:8097  B7                  	OR		 A							;está activa esta puerta?
     153   00:8098  CA A6 80            	JP		 Z, .examina_puerta_izquierda
     154   00:809B  CD B8 80            	CALL	check_colision_puerta		;aquí ya es cosa de ver colisiones prota/puerta_izquierda
     155   00:809E                      	
     156   00:809E  F6 00               	OR		 0							;hubo colisión?
     157   00:80A0  CA A6 80            	JP		 Z, .examina_puerta_izquierda;no hubo colisión por lo que examina puerta siguiente
     158   00:80A3                      	;hubo colisión
     159   00:80A3                      	;EJECUTA ACCIÓN Y SALE DE LA RUTINA
     160   00:80A3                      	
     161   00:80A3  C3 B7 80            	JP		fin_check_colisiones_puertas
     162   00:80A6                      .examina_puerta_izquierda:
     163   00:80A6  DD 21 85 87         	LD		IX, puerta_abajo
     164   00:80AA  DD 7E 00            	LD		 A, (IX)
     165   00:80AD  B7                  	OR		 A							;está activa esta puerta?
     166   00:80AE  CA B7 80            	JP		 Z, fin_check_colisiones_puertas
     167   00:80B1  CD B8 80            	CALL	check_colision_puerta		;aquí ya es cosa de ver colisiones prota/puerta_izquierda
     168   00:80B4                      	
     169   00:80B4  F6 00               	OR		 0							;hubo colisión?
     170   00:80B6  C8                  	RET		 Z							;es la última puerta a mirar, si no hubo colisión salimos
     171   00:80B7                      	;hubo colisión
     172   00:80B7                      	;EJECUTA ACCIÓN Y SALE DE LA RUTINA
     173   00:80B7                      	
     174   00:80B7                      fin_check_colisiones_puertas:
     175   00:80B7  C9                  	RET
     176   00:80B8                      
     177   00:80B8                      
     178   00:80B8                      ;;=====================================================
     179   00:80B8                      ;;CHECK_COLISION_PUERTA
     180   00:80B8                      ;;=====================================================	
     181   00:80B8                      ; función: 	revisa (con enemigos+ayudas o puertas según si la habitación ha sido recorrida o no) las variables para ver si se disparó sobre ellas
     182   00:80B8                      ; entrada: 	IX con el puntero a la puerta que se examina
     183   00:80B8                      ; salida: 	A (0 no hay colisión con puerta / 1 sí la hay)
     184   00:80B8                      ; toca:		HL,BC, DE
     185   00:80B8                      check_colision_puerta:
     186   00:80B8                      .deteccioncolision_paso1:
     187   00:80B8  FD 21 A9 A9         	LD		IY, prota	;IY punto de mira / IX puerta
     188   00:80BC  FD 7E 00            	LD		 A, (IY + ESTRUCTURA_PUNTOMIRA.posx)
     189   00:80BF  C6 08               	ADD		 8			;8-es fijo, offset del punto de mira ya que se mueve según la esquina superior izquierda y el centro del punto de mira está en el centro del sprite
     190   00:80C1                      	
     191   00:80C1                      	;ya tengo en A la coordenada X del centro del punto de mira					
     192   00:80C1  DD 96 01            	SUB		(IX + ESTRUCTURA_PUERTA.posx)	;le resto el punto x en la puerta
     193   00:80C4                      	
     194   00:80C4  D2 C9 80            	JP		NC, .deteccioncolision_paso2	;si no es negativo comparo con el radio
     195   00:80C7                      
     196   00:80C7  ED 44               	NEG										;si es negativo lo niego (valor absoluto)
     197   00:80C9                      	
     198   00:80C9                      .deteccioncolision_paso2:
     199   00:80C9  DD BE 03            	CP		(IX + ESTRUCTURA_PUERTA.radiox)	;comparo con el radio X de la puerta
     200   00:80CC                      	
     201   00:80CC  DA D1 80            	JP		 C, .deteccioncolision_paso3	;SI NC la distancia es >= por lo que sale y no es necesario verificar nada más
     202   00:80CF                      	
     203   00:80CF  AF                  	XOR		 A								;el resultado es falso y se guarda en A y ya no hay que seguir coprobando
     204   00:80D0  C9                  	RET
     205   00:80D1                      	
     206   00:80D1                      .deteccioncolision_paso3:					;la distancia X es válida, comprobamos la distancia Y
     207   00:80D1  FD 7E 01            	LD		 A, (IY + ESTRUCTURA_PUNTOMIRA.posy)
     208   00:80D4  C6 08               	ADD		 8								;le sumo el offset del punto de mira (8 es fijo)
     209   00:80D6                      
     210   00:80D6                      	;ya tengo en A la coordenada Y del centro del punto de mira					
     211   00:80D6  DD 96 02            	SUB		(IX + ESTRUCTURA_PUERTA.posy)	;le resto el punto y en la puerta
     212   00:80D9                      	
     213   00:80D9  D2 DE 80            	JP		NC, .deteccioncolision_paso4	;si no es negativo comparo con el radio
     214   00:80DC                      
     215   00:80DC  ED 44               	NEG										;si es negativo lo niego (valor absoluto)
     216   00:80DE                      
     217   00:80DE                      .deteccioncolision_paso4:
     218   00:80DE  DD BE 04            	CP		(IX + ESTRUCTURA_PUERTA.radioy)	;comparo con el radio Y de la puerta
     219   00:80E1                      
     220   00:80E1  DA E6 80            	JP		 C, .deteccioncolision_paso5	;SI NC la distancia es >= por lo que sale y no es necesario verificar nada más
     221   00:80E4                      	
     222   00:80E4  AF                  	XOR		 A								;el resultado es falso y se guarda en A un 0 y al ser la 2º comprobación salimos
     223   00:80E5  C9                  	RET
     224   00:80E6                      
     225   00:80E6                      .deteccioncolision_paso5:
     226   00:80E6  3E 01               	LD		 A, SI
     227   00:80E8                      fin_check_colision_puerta:
     228   00:80E8  C9                  	RET
     229   00:80E9                      
     230   00:80E9                      
     231   00:80E9                      
     232   00:80E9                      ;; FLAG PARA PRUEBAS 
     233   00:80E9                      test_OK:
     234   00:80E9  F5                  	PUSH	AF
     235   00:80EA                      	
     236   00:80EA  3E 0F               	LD		 A, 15
     237   00:80EC                      	
     238   00:80EC  32 E9 F3            	LD 		(FORCLR), A
     239   00:80EF  23                  	INC		HL
     240   00:80F0                      	
     241   00:80F0  32 EA F3            	LD 		(BAKCLR), A
     242   00:80F3  23                  	INC		HL
     243   00:80F4                      	
     244   00:80F4  7E                  	LD		 A, (HL)
     245   00:80F5  32 EB F3            	LD 		(BDRCLR), A
     246   00:80F8                      	
     247   00:80F8  CD 62 00            	CALL	CHGCLR 
     248   00:80FB                      	
     249   00:80FB  F1                  	POP		AF
     250   00:80FC                      fin_test_OK:
     251   00:80FC  C9                  	RET
     252   00:80FD                      
     253   00:80FD                      
     254   00:80FD                      
     255   00:80FD                      ;;*******************************************************************
     256   00:80FD                      ; sólo para hacer pruebas y pintar la parte de las vidas y demás
     257   00:80FD                      inicializa_variables_pruebas:
     258   00:80FD  3E 04               	LD		 A, 4
     259   00:80FF  32 BA A9            	LD		(prota_vidas),A
     260   00:8102                      
     261   00:8102  3E 04               	LD		 A, 4
     262   00:8104  32 BB A9            	LD		(prota_reliquias), A
     263   00:8107                      
     264   00:8107  3E 64               	LD		 A, 100
     265   00:8109  32 BE A9            	LD		(prota_energia), A
     266   00:810C                      
     267   00:810C                      	;ubico al prota dentro del nivel para obtener luego las habitaciones y enemigos que aparecerán
     268   00:810C                      	;será igual la posición inicial en todos los niveles
     269   00:810C                      	
     270   00:810C  3E 00               	LD		 A, 0				;los niveles (matrices) son 7 del 0 al 6
     271   00:810E  32 B9 A9            	LD		(prota_nivel), A	;nivel empieza en 0 para usar las posiciones ascii
     272   00:8111                      
     273   00:8111  3E 01               	LD		 A, 1				;los subniveles (filas) son 7 del 0 al 6
     274   00:8113  32 BD A9            	LD		(prota_pos_mapy), A	;pos Y dentro del nivel (se empieza en 0)
     275   00:8116                      
     276   00:8116  3E 03               	LD		 A, 3				;columnas 7: del 0 al 6
     277   00:8118  32 BC A9            	LD		(prota_pos_mapx), A	;pos X dentro del nivel (se empieza en 0)
     278   00:811B                      	
     279   00:811B  AF                  	XOR		 A
     280   00:811C  32 AE A9            	LD		(prota.cadencia), A
     281   00:811F                      	
     282   00:811F  32 8F A6            	LD		(is_habitacion_terminada), A
     283   00:8122                      fin_inicializa_variables_pruebas:
     284   00:8122  C9                  	RET
     285   00:8123                      ;;************************************************************************
     286   00:8123                      
     287   00:8123                      
     288   00:8123                      
     289   00:8123                      
     290   00:8123                      
     291   00:8123                      
     292   00:8123                      
     293   00:8123                      
     294   00:8123                      
     295   00:8123                      ;;=====================================================
     296   00:8123                      ;;DEFINICIÓN DE SUBRUTINAS
     297   00:8123                      ;;=====================================================
     298   00:8123                      	include "subrutinas.asm"
       1.  00:8123                      ;;=====================================================
       2.  00:8123                      ;;DEFINICIÓN DE SUBRUTINAS
       3.  00:8123                      ;;=====================================================	
       4.  00:8123                      
       5.  00:8123                      
       6.  00:8123                      ;;=====================================================
       7.  00:8123                      ;;INICIALIZA_NIVELES
       8.  00:8123                      ;;=====================================================	
       9.  00:8123                      ; función: 	pone el bit 4 de todas las habitaciones (byte habitacion_actual 0,2,4....) a 0
      10.  00:8123                      ; entrada: 	habitaciones_plantilla
      11.  00:8123                      ; salida: 	habitaciones_plantilla con los el bit 4 de los bites bytes impares a 0
      12.  00:8123                      ; toca: 	habitaciones_plantilla, B
      13.  00:8123                      inicializa_niveles:
      14.  00:8123  F5                  		PUSH		AF
      15.  00:8124  C5                  		PUSH		BC
      16.  00:8125  E5                  		PUSH		HL
      17.  00:8126                      		
      18.  00:8126  06 38               		LD			 B, 56		;la mitad de bytes del array de un nivel
      19.  00:8128  21 90 A6            		LD 			HL, habitaciones_nivel0
      20.  00:812B                      .inicia_nivel_0
      21.  00:812B  7E                  		LD		 	 A, (HL)
      22.  00:812C  CB E7               		SET			 4, A 		;el 4 bit a 0 indica que por esa habitacion no se ha pasado/no se han atado todos los enemigos
      23.  00:812E  77                  		LD			(HL), A
      24.  00:812F  23 23               [2]		INC			HL
      25.  00:8131  10 F8               		DJNZ		.inicia_nivel_0
      26.  00:8133                      
      27.  00:8133  06 38               		LD			 B, 56		;la mitad de bytes del array de un nivel
      28.  00:8135  21 00 A7            		LD 			HL, habitaciones_nivel1
      29.  00:8138                      .inicia_nivel_1
      30.  00:8138  7E                  		LD		 	 A, (HL)
      31.  00:8139  CB E7               		SET			 4, A 		;el 4 bit a 0 indica que por esa habitacion no se ha pasado/no se han atado todos los enemigos
      32.  00:813B  77                  		LD			(HL), A
      33.  00:813C  23 23               [2]		INC			HL
      34.  00:813E  10 F8               		DJNZ		.inicia_nivel_1
      35.  00:8140                      
      36.  00:8140  06 38               		LD			 B, 56		;la mitad de bytes del array de un nivel
      37.  00:8142  21 70 A7            		LD 			HL, habitaciones_nivel2
      38.  00:8145                      .inicia_nivel_2
      39.  00:8145  7E                  		LD		 	 A, (HL)
      40.  00:8146  CB E7               		SET			 4, A 		;el 4 bit a 0 indica que por esa habitacion no se ha pasado/no se han atado todos los enemigos
      41.  00:8148  77                  		LD			(HL), A
      42.  00:8149  23 23               [2]		INC			HL
      43.  00:814B  10 F8               		DJNZ		.inicia_nivel_2
      44.  00:814D                      
      45.  00:814D  06 38               		LD			 B, 56		;la mitad de bytes del array de un nivel
      46.  00:814F  21 E0 A7            		LD 			HL, habitaciones_nivel3
      47.  00:8152                      .inicia_nivel_3
      48.  00:8152  7E                  		LD		 	 A, (HL)
      49.  00:8153  CB E7               		SET			 4, A 		;el 4 bit a 0 indica que por esa habitacion no se ha pasado/no se han atado todos los enemigos
      50.  00:8155  77                  		LD			(HL), A
      51.  00:8156  23 23               [2]		INC			HL
      52.  00:8158  10 F8               		DJNZ		.inicia_nivel_3
      53.  00:815A                      
      54.  00:815A  06 38               		LD			 B, 56		;la mitad de bytes del array de un nivel
      55.  00:815C  21 50 A8            		LD 			HL, habitaciones_nivel4
      56.  00:815F                      .inicia_nivel_4
      57.  00:815F  7E                  		LD		 	 A, (HL)
      58.  00:8160  CB E7               		SET			 4, A 		;el 4 bit a 0 indica que por esa habitacion no se ha pasado/no se han atado todos los enemigos
      59.  00:8162  77                  		LD			(HL), A
      60.  00:8163  23 23               [2]		INC			HL
      61.  00:8165  10 F8               		DJNZ		.inicia_nivel_4
      62.  00:8167                      
      63.  00:8167  06 38               		LD			 B, 56		;la mitad de bytes del array de un nivel
      64.  00:8169  21 C0 A8            		LD 			HL, habitaciones_nivel5
      65.  00:816C                      .inicia_nivel_5
      66.  00:816C  7E                  		LD		 	 A, (HL)
      67.  00:816D  CB E7               		SET			 4, A 		;el 4 bit a 0 indica que por esa habitacion no se ha pasado/no se han atado todos los enemigos
      68.  00:816F  77                  		LD			(HL), A
      69.  00:8170  23 23               [2]		INC			HL
      70.  00:8172  10 F8               		DJNZ		.inicia_nivel_5
      71.  00:8174                      
      72.  00:8174  06 38               		LD			 B, 56		;la mitad de bytes del array de un nivel
      73.  00:8176  21 30 A9            		LD 			HL, habitaciones_nivel6
      74.  00:8179                      .inicia_nivel_6
      75.  00:8179  7E                  		LD		 	 A, (HL)
      76.  00:817A  CB E7               		SET			 4, A 		;el 4 bit a 0 indica que por esa habitacion no se ha pasado/no se han atado todos los enemigos
      77.  00:817C  77                  		LD			(HL), A
      78.  00:817D  23 23               [2]		INC			HL
      79.  00:817F  10 F8               		DJNZ		.inicia_nivel_6
      80.  00:8181                      
      81.  00:8181  E1                  		POP			HL
      82.  00:8182  C1                  		POP			BC
      83.  00:8183  F1                  		POP			AF
      84.  00:8184                      fin_iniciliza_niveles:
      85.  00:8184  C9                  		RET
      86.  00:8185                      
      87.  00:8185                      
      88.  00:8185                      ;;=====================================================
      89.  00:8185                      ;;ACTUALIZA_MARCADOR_VIDAS
      90.  00:8185                      ;;=====================================================	
      91.  00:8185                      ; función:  actualiza el buffer de vidas
      92.  00:8185                      ; entrada: 	prota_vidas
      93.  00:8185                      ; salida: 	array_aux_vidas
      94.  00:8185                      ; toca:		A,B,HL
      95.  00:8185                      actualiza_marcador_vidas:
      96.  00:8185                      	;para no andar restando pongo todos los huecos a negro y luego en otro bucle las caras
      97.  00:8185                      	;1-pinto todo en blanco
      98.  00:8185  21 BF A9            	LD		HL,array_aux_vidas
      99.  00:8188  06 08               	LD		 B,NMAXVIDREL
     100.  00:818A                      loop_marcador_caras_negro:	;asignar espacios en negro
     101.  00:818A  36 00               	LD		(HL),0			;0 posición mapa tiles para nada (es transparente pero el fondo es negro)
     102.  00:818C  23                  	INC		HL
     103.  00:818D  10 FB               	DJNZ	loop_marcador_caras_negro
     104.  00:818F                      fin_loop_marcador_caras_negro:
     105.  00:818F                      	;2-pinto las caras según el n de vidas
     106.  00:818F  3A BA A9            	LD		 A, (prota_vidas)
     107.  00:8192  B7                  	OR		 A
     108.  00:8193  C8                  	RET 	 Z
     109.  00:8194  47                  	LD		 B, A
     110.  00:8195  21 BF A9            	LD		HL, array_aux_vidas
     111.  00:8198                      loop_marcador_caras: ;asignar caras
     112.  00:8198  36 0D               	LD		(HL), POSCARAMAP	;13 posición mapa tiles para cara
     113.  00:819A  23                  	INC		HL
     114.  00:819B  10 FB               	DJNZ	loop_marcador_caras
     115.  00:819D                      fin_loop_marcador_caras:
     116.  00:819D                      fin_actualiza_marcador_vidas:
     117.  00:819D  C9                  	RET
     118.  00:819E                      
     119.  00:819E                      
     120.  00:819E                      ;;=====================================================
     121.  00:819E                      ;;ACTUALIZA_BUFFER_RELIQUIAS
     122.  00:819E                      ;;=====================================================	
     123.  00:819E                      ; función: 	actualiza buffer de reliquias
     124.  00:819E                      ; entrada: 	prota_reliquias
     125.  00:819E                      ; salida: 	array_aux_reliquias
     126.  00:819E                      ; toca:		A,B,HL
     127.  00:819E                      actualiza_buffer_reliquias:	
     128.  00:819E                      	;para no andar restando pongo todos los huecos a negro y luego en otro bucle las reliquias
     129.  00:819E                      	;1-pinto todo en blanco
     130.  00:819E  21 C7 A9            	LD		HL, array_aux_reliquias
     131.  00:81A1  06 08               	LD		 B, NMAXVIDREL
     132.  00:81A3  AF                  	XOR		 A
     133.  00:81A4                      loop_buffer_reliquias_negro:	;asignar espacios en negro
     134.  00:81A4  77                  	LD		(HL), A			;0 posición mapa tiles para nada (es transparente pero el fondo es negro)
     135.  00:81A5  23                  	INC		HL
     136.  00:81A6  10 FC               	DJNZ	loop_buffer_reliquias_negro
     137.  00:81A8                      
     138.  00:81A8                      	;2-pinto las cruces según el n de reliquias
     139.  00:81A8  21 C7 A9            	LD		HL, array_aux_reliquias
     140.  00:81AB  3A BB A9            	LD		 A, (prota_reliquias)
     141.  00:81AE  B7                  	OR		 A
     142.  00:81AF  C8                  	RET		 Z
     143.  00:81B0  47                  	LD		 B, A
     144.  00:81B1                      loop_buffer_reliquias: ;asignar reliquias
     145.  00:81B1  36 11               	LD		(HL), POSRELIMAP	;17 posición mapa tiles para reliquia
     146.  00:81B3  23                  	INC		HL
     147.  00:81B4  10 FB               	DJNZ	loop_buffer_reliquias
     148.  00:81B6                      fin_actualiza_buffer_reliquias:
     149.  00:81B6  C9                  	RET
     150.  00:81B7                      
     151.  00:81B7                      
     152.  00:81B7                      
     153.  00:81B7                      ;;=====================================================
     154.  00:81B7                      ;;LOCALIZA_INFO_HABITACION
     155.  00:81B7                      ;;=====================================================	
     156.  00:81B7                      ; función: 	busca las puertas que hay que pintar egún la posición del usuario y las pone en habitacion_actual
     157.  00:81B7                      ; entrada: 	prota.pos_mapy, prota.pos_mapx, prota_nivel habitaciones_juego
     158.  00:81B7                      ; salida: 	habitacion_actual
     159.  00:81B7                      ; toca:		todo
     160.  00:81B7                      ;ejemplo: nivel 4, posy 5 y posx 3
     161.  00:81B7                      ;3 + 5 x 8 + 4 x 49
     162.  00:81B7                      localiza_info_habitacion:
     163.  00:81B7                      	;~ PUSH	AF
     164.  00:81B7                      	;~ PUSH	BC
     165.  00:81B7                      	;~ PUSH	DE
     166.  00:81B7                      	;~ PUSH	HL
     167.  00:81B7                      
     168.  00:81B7                      ;primera posición: me coloco en la columna correcta
     169.  00:81B7  21 90 A6            	LD		HL, habitaciones_juego
     170.  00:81BA                      .situo_columna:	
     171.  00:81BA  3A BC A9            	LD		 A, (prota_pos_mapx)
     172.  00:81BD  CB 27               	SLA		 A				;multiplico por dos ya que cada habitación va de dos en dos bytes
     173.  00:81BF  06 00               	LD		 B, 0
     174.  00:81C1  4F                  	LD		 C, A
     175.  00:81C2  09                  	ADD 	HL, BC			;sumo a la posición 0 la columnax2 en la que situarme
     176.  00:81C3                      	
     177.  00:81C3                      .situo_fila:
     178.  00:81C3  3A BD A9            	LD		A, (prota_pos_mapy)
     179.  00:81C6  B7                  	OR	 	A
     180.  00:81C7  CA D4 81            	JP		Z, .situo_nivel	;si la fila es 0 no es necesario seguir operando en fila
     181.  00:81CA                      	
     182.  00:81CA  47                  	LD		B, A
     183.  00:81CB  AF                  	XOR		A
     184.  00:81CC                      .loop_suma_fila:
     185.  00:81CC  C6 10               	ADD		16				;cada fila tiene 16 bytes
     186.  00:81CE  10 FC               	DJNZ	.loop_suma_fila
     187.  00:81D0                      	
     188.  00:81D0  06 00               	LD		 B, 0
     189.  00:81D2  4F                  	LD		 C, A
     190.  00:81D3                      
     191.  00:81D3  09                  	ADD 	HL, BC			;sumo a la columna 16 x filas para situarme en la fila correcta
     192.  00:81D4                      
     193.  00:81D4                      .situo_nivel:
     194.  00:81D4  3A B9 A9            	LD		 A, (prota_nivel)
     195.  00:81D7  B7                  	OR	 	 A
     196.  00:81D8  CA E8 81            	JP		 Z, .actualiza_variable_habitacion	;si el nivel es 0 al pasar por las anterirores ya estoy situado actualizo la variable y termino
     197.  00:81DB                      	
     198.  00:81DB  E5                  	PUSH	HL				;guardo el resultado intermedio
     199.  00:81DC                      	
     200.  00:81DC  47                  	LD		 B, A			;preparo la varible del bucle
     201.  00:81DD  11 70 00            	LD		DE, 112			;112 = 16x42 son los bytes de cada matriz-nivel
     202.  00:81E0  21 00 00            	LD		HL, 0
     203.  00:81E3                      .loop_suma_nivel:
     204.  00:81E3  19                  	ADD		HL, DE
     205.  00:81E4  10 FD               	DJNZ	.loop_suma_nivel
     206.  00:81E6                      	
     207.  00:81E6  D1                  	POP		DE				;devuelvo el resultado intermedio en DE que ya no lo necesito
     208.  00:81E7                      	
     209.  00:81E7  19                  	ADD		HL, DE			;sumo el resultado del nivel al resultado intermedio anterior
     210.  00:81E8                      	
     211.  00:81E8                      .actualiza_variable_habitacion
     212.  00:81E8  7E                  	LD		 A, (HL)
     213.  00:81E9  32 8B A6            	LD		(habitacion_actual), A
     214.  00:81EC                      	
     215.  00:81EC                      	;actualizo la variable habitacion_actual y su puntero para poder modificar por si se vuelve a pasar por ahí
     216.  00:81EC  DD 21 8D A6         	LD		IX, habitacion_actual_puntero
     217.  00:81F0  DD 74 00            	LD		(IX), H
     218.  00:81F3  DD 75 01            	LD		(IX + 1), L
     219.  00:81F6                      	
     220.  00:81F6                      	;actualizo la variable is_habitacion_terminada
     221.  00:81F6  3A 8B A6            	LD		 A, (habitacion_actual)
     222.  00:81F9  E6 10               	AND		00010000b					;me interresa sólo el bit 4 (si la habitación ha sido recorrida)
     223.  00:81FB                      [4]	SRA		 A
     223.  00:81FB  CB 2F CB 2F CB 2F CB 2F 
     224.  00:8203  32 8F A6            	LD		(is_habitacion_terminada), A
     225.  00:8206                      	
     226.  00:8206                      	;actualizo la variable habitacion_extras
     227.  00:8206  23                  	INC		HL				;el byte de los extras está antes de donde se especifican las puertas
     228.  00:8207  7E                  	LD		 A, (HL)
     229.  00:8208  32 8C A6            	LD		(habitacion_extras), A
     230.  00:820B                      
     231.  00:820B                      	;~ POP		HL	
     232.  00:820B                      	;~ POP		DE
     233.  00:820B                      	;~ POP		BC
     234.  00:820B                      	;~ POP		AF
     235.  00:820B                      fin_localiza_info_habitacion:
     236.  00:820B  C9                  	RET
     237.  00:820C                      	
     238.  00:820C                      
     239.  00:820C                      ;;=====================================================
     240.  00:820C                      ;;TERMINADA_HABIACION_RECORRIDA
     241.  00:820C                      ;;=====================================================	
     242.  00:820C                      ; función: 	usando la variable prota_pos_mapx pone un 1 a donde apunta habitacion_recorrida (el array... byte 14 de 
     243.  00:820C                      ;			habitaciones recorridas en esa fila) para ver si uestra enemigos o no y permita pasar por puertas
     244.  00:820C                      ; entrada: 	prota_pos_mapx, habitacion_recorrida
     245.  00:820C                      ; salida: 	habitacion_recorrida (byte 14 de la fila de habitaciones) actualizada con OR A (en A la habitacion)
     246.  00:820C                      ; toca:		IX, HL, AF
     247.  00:820C                      terminada_habitacion_recorrida:
     248.  00:820C  21 8D A6            		LD			HL, habitacion_actual_puntero
     249.  00:820F  7E                  		LD			 A, (HL)
     250.  00:8210  CB E7               		SET			 4, A
     251.  00:8212  77                  		LD			(HL), A
     252.  00:8213                      		
     253.  00:8213  3E 01               		LD			 A, HABTERMIN	;da igual qué bit mientras sea distinto de 0 pero se pone 1
     254.  00:8215  32 8F A6            		LD			(is_habitacion_terminada), A
     255.  00:8218                      		
     256.  00:8218                      		;este trozo no sirve de nada pero ya e quedo más tranquilo si lo pongo, por ser exacto y completo
     257.  00:8218                      		;no sirve porque se cambiará de habitación y se perderá/actualizará el dato
     258.  00:8218  3A 8B A6            		LD			 A, (habitacion_actual)
     259.  00:821B  CB E7               		SET			 4, A
     260.  00:821D  32 8B A6            		LD			(habitacion_actual), A
     261.  00:8220                      		
     262.  00:8220  3E 01               		LD			 A, 1					;1 es puerta activa y 0 no activa
     263.  00:8222  47                  		LD			 B, A
     264.  00:8223  C3 B7 88            		JP			activa_desactiva_puertas;se la pasa B que para activar necesita 1
     265.  00:8226                      fin_terminada_habitacion_recorrida:
     266.  00:8226                      
     267.  00:8226                      
     268.  00:8226                      
     269.  00:8226                      ;;=====================================================
     270.  00:8226                      ;;CAMBIO_HABITACION												*no terminada
     271.  00:8226                      ;;=====================================================	
     272.  00:8226                      ; función: 	actualiza elementos en pantalla cuando hay cambios en habitación
     273.  00:8226                      ;			fondo
     274.  00:8226                      ;			puertas
     275.  00:8226                      ;			ayudas
     276.  00:8226                      ;			imagenes
     277.  00:8226                      ;			mapa inferior
     278.  00:8226                      ;			enemigos
     279.  00:8226                      ; entrada: 	prota_pos_mapy, prota_pos_mapy, prota_nivel
     280.  00:8226                      ; salida: 	
     281.  00:8226                      cambio_habitacion:
     282.  00:8226                      		;CALL	pinta_pantalla_completa
     283.  00:8226  CD AE 9B            		CALL	pinta_ayudas_habitacion
     284.  00:8229  CD C1 85            		CALL	pinta_extra_fondo
     285.  00:822C  CD 49 88            		CALL	pinta_puertas
     286.  00:822F                      	
     287.  00:822F  3E 13               		LD		 A, TILEPROTAM
     288.  00:8231  32 DE A9            		LD		(elemento_pintar_mapa), A
     289.  00:8234  CD AB 84            		CALL	posiciona_en_mapa		;se le pasa elemento_pintar_mapa (tile del prota) está el prota y prota.posx y posy
     290.  00:8237                      fin_cambio_habitacion:
     291.  00:8237  C9                  		RET
     292.  00:8238                      	
     293.  00:8238                      	
     294.  00:8238                      	
     295.  00:8238                      	
     296.  00:8238                      	
     297.  00:8238                      	
     298.  00:8238                      	
     299.  00:8238                      	
     300.  00:8238                      	
     301.  00:8238                      	
     302.  00:8238                      	
     303.  00:8238                      	
     304.  00:8238                      	
     305.  00:8238                      	
     306.  00:8238                      	
     307.  00:8238                      	
     299   00:8238                      	
     300   00:8238                      	include "subr_general.asm"
       1.  00:8238                      ;;=====================================================
       2.  00:8238                      ;;DEFINICIÓN DE SUBRUTINAS GENERALES USABLES PARA CUALQUIER PROYECTO
       3.  00:8238                      ;;=====================================================	
       4.  00:8238                      
       5.  00:8238                      ;;=====================================================
       6.  00:8238                      ;;SUMA_A_BC
       7.  00:8238                      ;;=====================================================	
       8.  00:8238                      ; función: 	suma A a BC por si da más de 255
       9.  00:8238                      ; entrada: 	A, BC
      10.  00:8238                      ; salida: 	A + BC
      11.  00:8238                      ; toca:		A, BC
      12.  00:8238                      suma_A_BC:
      13.  00:8238  81                  	ADD		 C
      14.  00:8239  4F                  	LD		 C, A
      15.  00:823A  88                  	ADC		 B
      16.  00:823B  91                  	SUB		 C
      17.  00:823C  47                  	LD		 B, A
      18.  00:823D                      fin_suma_A_BC:
      19.  00:823D  C9                  	RET
      20.  00:823E                      	
      21.  00:823E                      ;;=====================================================
      22.  00:823E                      ;;SUMA_A_HL
      23.  00:823E                      ;;=====================================================	
      24.  00:823E                      ; función: 	suma A a BC por si da más de 255
      25.  00:823E                      ; entrada: 	A, HL
      26.  00:823E                      ; salida: 	A + HL
      27.  00:823E                      ; toca:		A, HL
      28.  00:823E                      suma_A_HL:
      29.  00:823E  85                  	ADD		 L
      30.  00:823F  6F                  	LD		 L, A
      31.  00:8240  8C                  	ADC		 H
      32.  00:8241  95                  	SUB		 L
      33.  00:8242  67                  	LD		 H, A
      34.  00:8243                      fin_suma_A_HL:
      35.  00:8243  C9                  	RET
     301   00:8244                      	
     302   00:8244                      	include "subr_pintapantalla.asm"
       1.  00:8244                      ;;=====================================================
       2.  00:8244                      ;;DEFINICIÓN DE SUBRUTINAS
       3.  00:8244                      ;;=====================================================	
       4.  00:8244                      ;relacionadas con pintado en pantalla (y no sprites)
       5.  00:8244                      
       6.  00:8244                      
       7.  00:8244                      ;;=====================================================
       8.  00:8244                      ;;COLOR_PANTALLA
       9.  00:8244                      ;;=====================================================	
      10.  00:8244                      ; función: 	el equivalente en basic a color 15,1,1
      11.  00:8244                      ; entrada: 	HL	que apunta a un array de bytes con 3 bytes FORCLR, BAKCLR y BDRCLR
      12.  00:8244                      ; salida: 	-
      13.  00:8244                      ; toca: 	todo
      14.  00:8244                      color_pantalla:
      15.  00:8244  7E                  	LD		 A, (HL)			;FORCLR 
      16.  00:8245  32 E9 F3            	LD 		(FORCLR),A
      17.  00:8248  23                  	INC		HL
      18.  00:8249                      	
      19.  00:8249  7E                  	LD		 A, (HL)			;BAKCLR
      20.  00:824A  32 EA F3            	LD 		(BAKCLR),A
      21.  00:824D  23                  	INC		HL
      22.  00:824E                      	
      23.  00:824E  7E                  	LD		 A, (HL)
      24.  00:824F  32 EB F3            	LD 		(BDRCLR),A			;BDRCLR
      25.  00:8252  C3 62 00            	JP		CHGCLR 
      26.  00:8255                      fin_color_pantalla:
      27.  00:8255                      
      28.  00:8255                      
      29.  00:8255                      ;;=====================================================
      30.  00:8255                      ;;PREPARAPANTALLA
      31.  00:8255                      ;;=====================================================	
      32.  00:8255                      ; función: elimina clic cuando se pulsa tecla, cls, screen 2,2
      33.  00:8255                      ; entrada: -
      34.  00:8255                      ; salida: -
      35.  00:8255                      ; toca: si no son todos los regristros, casi todos
      36.  00:8255                      sub_preparapantalla:
      37.  00:8255                      	;toca A y Z
      38.  00:8255                      elimina_clic;
      39.  00:8255  AF                  	XOR		 A
      40.  00:8256  32 DB F3            	LD		(CLIKSW),A
      41.  00:8259                      fin_elimina_clic:
      42.  00:8259                      
      43.  00:8259                      	;toca A
      44.  00:8259                      limpia_pantalla:
      45.  00:8259  AF                  	XOR		 A
      46.  00:825A  CD C3 00            	CALL 	CLS
      47.  00:825D                      fin_limpia_pantalla:
      48.  00:825D                      
      49.  00:825D                      	;toca A y direcciones #F3E9/#F3EA/#F3EB, poner en HL array con 3 valores
      50.  00:825D  21 A0 A9            	LD		HL, color_base
      51.  00:8260  CD 44 82            	CALL	color_pantalla
      52.  00:8263                      	
      53.  00:8263                      	;cambiamos a SCREEN 2,2 del BASIC
      54.  00:8263                      	;toca A
      55.  00:8263                      screen2:
      56.  00:8263  3E 02               	LD		 A, 2
      57.  00:8265  CD 5F 00            	CALL	CHGMOD			;selecciona screen 2
      58.  00:8268                      sprites_16_16:
      59.  00:8268  3A E0 F3            	LD		 A, (RG1SAV)
      60.  00:826B  F6 02               	OR		00000010b		;fuerza sprites de 16x16
      61.  00:826D  32 E0 F3            	LD		(RG1SAV), A		;no lo guardamos en la copia de variables del sistema
      62.  00:8270  47                  	LD		 B, A
      63.  00:8271  0E 01               	LD		 C, 1
      64.  00:8273  C3 47 00            	JP		WRTVDP			;opción alternativa de escribir las tres lineas siguientes
      65.  00:8276                      fin_sub_preparapantalla:
      66.  00:8276                      	
      67.  00:8276                      
      68.  00:8276                      ;;=====================================================
      69.  00:8276                      ;;PINTA_PANTALLA_COMPLETA
      70.  00:8276                      ;;=====================================================	
      71.  00:8276                      ; función: pinta el escenario, las 3 partes
      72.  00:8276                      ; entrada: -
      73.  00:8276                      ; salida: -
      74.  00:8276                      ; toca: si no son todos los regristros, casi todos
      75.  00:8276                      pinta_pantalla_completa:
      76.  00:8276  CD 7D 82            	CALL 	pinta_parte_superior_pantalla
      77.  00:8279                      	
      78.  00:8279  CD 9B 83            	CALL 	pinta_parte_inferior_pantalla	
      79.  00:827C                      fin_pinta_pantalla_completa:
      80.  00:827C  C9                  	RET
      81.  00:827D                      
      82.  00:827D                      
      83.  00:827D                      ;;=====================================================
      84.  00:827D                      ;;PINTA_PARTE_SUPERIOR_PANTALLA
      85.  00:827D                      ;;=====================================================	
      86.  00:827D                      ; función: pinta el escenario, los dos bancos superiores
      87.  00:827D                      ; entrada: -
      88.  00:827D                      ; salida: -
      89.  00:827D                      ; toca: si no son todos los regristros, casi todos
      90.  00:827D                      pinta_parte_superior_pantalla:
      91.  00:827D  3A B9 A9            	LD		 A, (prota_nivel)
      92.  00:8280  CA AE 82            	JP		 Z, .carga_nivel_0
      93.  00:8283  3D                  	DEC		 A
      94.  00:8284  3A B9 A9            	LD		 A, (prota_nivel)
      95.  00:8287  CA C9 82            	JP		 Z, .carga_nivel_1
      96.  00:828A  3D                  	DEC		 A
      97.  00:828B  3A B9 A9            	LD		 A, (prota_nivel)
      98.  00:828E  CA E4 82            	JP		 Z, .carga_nivel_2
      99.  00:8291  3D                  	DEC		 A
     100.  00:8292  3A B9 A9            	LD		 A, (prota_nivel)
     101.  00:8295  CA FF 82            	JP		 Z, .carga_nivel_3
     102.  00:8298  3D                  	DEC		 A
     103.  00:8299  3A B9 A9            	LD		 A, (prota_nivel)
     104.  00:829C  CA 1A 83            	JP		 Z, .carga_nivel_4
     105.  00:829F  3D                  	DEC		 A
     106.  00:82A0  3A B9 A9            	LD		 A, (prota_nivel)
     107.  00:82A3  CA 35 83            	JP		 Z, .carga_nivel_5
     108.  00:82A6  3D                  	DEC		 A
     109.  00:82A7  3A B9 A9            	LD		 A, (prota_nivel)
     110.  00:82AA  CA 50 83            	JP		 Z, .carga_nivel_6
     111.  00:82AD  3D                  	DEC		 A
     112.  00:82AE                      	
     113.  00:82AE                      .carga_nivel_0:
     114.  00:82AE  21 1F AC            	LD		HL, tiles_patrones_nivel0
     115.  00:82B1  22 95 83            	LD		(tiles_patrones), HL
     116.  00:82B4  21 49 AE            	LD		HL, tiles_color_nivel0
     117.  00:82B7  22 97 83            	LD		(tiles_colores), HL
     118.  00:82BA  21 1F AC            	LD		HL, tiles_patrones_nivel0
     119.  00:82BD  22 95 83            	LD		(tiles_patrones), HL
     120.  00:82C0  21 B4 AE            	LD		HL, tiles_mapa_nivel0
     121.  00:82C3  22 99 83            	LD		(tiles_mapa), HL
     122.  00:82C6  C3 68 83            	JP		.fin_carga_niveles
     123.  00:82C9                      
     124.  00:82C9                      .carga_nivel_1:
     125.  00:82C9  21 E9 AE            	LD		HL, tiles_patrones_nivel1
     126.  00:82CC  22 95 83            	LD		(tiles_patrones), HL
     127.  00:82CF  21 9E B0            	LD		HL, tiles_color_nivel1
     128.  00:82D2  22 97 83            	LD		(tiles_colores), HL
     129.  00:82D5  21 E9 AE            	LD		HL, tiles_patrones_nivel1
     130.  00:82D8  22 95 83            	LD		(tiles_patrones), HL
     131.  00:82DB  21 E5 B0            	LD		HL, tiles_mapa_nivel1
     132.  00:82DE  22 99 83            	LD		(tiles_mapa), HL
     133.  00:82E1  C3 68 83            	JP		.fin_carga_niveles
     134.  00:82E4                      	
     135.  00:82E4                      .carga_nivel_2:
     136.  00:82E4  21 1A B1            	LD		HL, tiles_patrones_nivel2
     137.  00:82E7  22 95 83            	LD		(tiles_patrones), HL
     138.  00:82EA  21 CF B2            	LD		HL, tiles_color_nivel2
     139.  00:82ED  22 97 83            	LD		(tiles_colores), HL
     140.  00:82F0  21 1A B1            	LD		HL, tiles_patrones_nivel2
     141.  00:82F3  22 95 83            	LD		(tiles_patrones), HL
     142.  00:82F6  21 16 B3            	LD		HL, tiles_mapa_nivel2
     143.  00:82F9  22 99 83            	LD		(tiles_mapa), HL
     144.  00:82FC  C3 68 83            	JP		.fin_carga_niveles
     145.  00:82FF                      	
     146.  00:82FF                      .carga_nivel_3:
     147.  00:82FF  21 4B B3            	LD		HL, tiles_patrones_nivel3
     148.  00:8302  22 95 83            	LD		(tiles_patrones), HL
     149.  00:8305  21 00 B5            	LD		HL, tiles_color_nivel3
     150.  00:8308  22 97 83            	LD		(tiles_colores), HL
     151.  00:830B  21 4B B3            	LD		HL, tiles_patrones_nivel3
     152.  00:830E  22 95 83            	LD		(tiles_patrones), HL
     153.  00:8311  21 47 B5            	LD		HL, tiles_mapa_nivel3
     154.  00:8314  22 99 83            	LD		(tiles_mapa), HL
     155.  00:8317  C3 68 83            	JP		.fin_carga_niveles
     156.  00:831A                      	
     157.  00:831A                      .carga_nivel_4:
     158.  00:831A  21 7C B5            	LD		HL, tiles_patrones_nivel4
     159.  00:831D  22 95 83            	LD		(tiles_patrones), HL
     160.  00:8320  21 31 B7            	LD		HL, tiles_color_nivel4
     161.  00:8323  22 97 83            	LD		(tiles_colores), HL
     162.  00:8326  21 7C B5            	LD		HL, tiles_patrones_nivel4
     163.  00:8329  22 95 83            	LD		(tiles_patrones), HL
     164.  00:832C  21 78 B7            	LD		HL, tiles_mapa_nivel4
     165.  00:832F  22 99 83            	LD		(tiles_mapa), HL
     166.  00:8332  C3 68 83            	JP		.fin_carga_niveles
     167.  00:8335                      	
     168.  00:8335                      .carga_nivel_5:
     169.  00:8335  21 AD B7            	LD		HL, tiles_patrones_nivel5
     170.  00:8338  22 95 83            	LD		(tiles_patrones), HL
     171.  00:833B  21 62 B9            	LD		HL, tiles_color_nivel5
     172.  00:833E  22 97 83            	LD		(tiles_colores), HL
     173.  00:8341  21 AD B7            	LD		HL, tiles_patrones_nivel5
     174.  00:8344  22 95 83            	LD		(tiles_patrones), HL
     175.  00:8347  21 A9 B9            	LD		HL, tiles_mapa_nivel5
     176.  00:834A  22 99 83            	LD		(tiles_mapa), HL
     177.  00:834D  C3 68 83            	JP		.fin_carga_niveles
     178.  00:8350                      	
     179.  00:8350                      .carga_nivel_6:
     180.  00:8350  21 DE B9            	LD		HL, tiles_patrones_nivel6
     181.  00:8353  22 95 83            	LD		(tiles_patrones), HL
     182.  00:8356  21 93 BB            	LD		HL, tiles_color_nivel6
     183.  00:8359  22 97 83            	LD		(tiles_colores), HL
     184.  00:835C  21 DE B9            	LD		HL, tiles_patrones_nivel6
     185.  00:835F  22 95 83            	LD		(tiles_patrones), HL
     186.  00:8362  21 DA BB            	LD		HL, tiles_mapa_nivel6
     187.  00:8365  22 99 83            	LD		(tiles_mapa), HL
     188.  00:8368                      ;	JP		.fin_carga niveles			;no necesario
     189.  00:8368                      .fin_carga_niveles:
     190.  00:8368                      
     191.  00:8368                      	;cargando banco 1
     192.  00:8368                      	;cargamos los patrones
     193.  00:8368  2A 95 83            	LD		HL, (tiles_patrones)
     194.  00:836B  11 00 00            	LD		DE, CHRTBL
     195.  00:836E  CD 2B 9C            	CALL	depack_VRAM
     196.  00:8371                      	;cargamos los colores de los patrones
     197.  00:8371  2A 97 83            	LD		HL, (tiles_colores)
     198.  00:8374  11 00 20            	LD		DE, CLRTBL
     199.  00:8377  CD 2B 9C            	CALL	depack_VRAM
     200.  00:837A                      	
     201.  00:837A                      	;cargando banco 2
     202.  00:837A                      	;cargamos los patrones
     203.  00:837A  2A 95 83            	LD		HL, (tiles_patrones)
     204.  00:837D  11 00 08            	LD		DE, CHRTBL + #0800
     205.  00:8380  CD 2B 9C            	CALL	depack_VRAM	
     206.  00:8383                      	;cargamos los colores de los patrones
     207.  00:8383  2A 97 83            	LD		HL, (tiles_colores)
     208.  00:8386  11 00 28            	LD		DE, CLRTBL + #0800
     209.  00:8389  CD 2B 9C            	CALL	depack_VRAM
     210.  00:838C                      	
     211.  00:838C                      	;cargamos mapa de pantalla banco 1 y 2
     212.  00:838C  2A 99 83            	LD		HL, (tiles_mapa)
     213.  00:838F  11 00 18            	LD		DE, TILMAP
     214.  00:8392  C3 2B 9C            	JP		depack_VRAM
     215.  00:8395                      fin_pinta_parte_superior_pantalla:
     216.  00:8395  00 00               tiles_patrones:		DW	0
     217.  00:8397  00 00               tiles_colores:		DW	0
     218.  00:8399  00 00               tiles_mapa:			DW	0
     219.  00:839B                      
     220.  00:839B                      
     221.  00:839B                      ;;=====================================================
     222.  00:839B                      ;;PINTA_PARTE_INFERIOR_PANTALLA
     223.  00:839B                      ;;=====================================================	
     224.  00:839B                      ; función: pinta la parte inferior del escenario que es común
     225.  00:839B                      ; entrada: -
     226.  00:839B                      ; salida: -
     227.  00:839B                      ; toca: si no son todos los regristros, casi todos
     228.  00:839B                      pinta_parte_inferior_pantalla:
     229.  00:839B                      	;cangando banco 3
     230.  00:839B                      	;cargamos los patrones
     231.  00:839B  21 0F BC            	LD		HL,tiles_patrones_marcador
     232.  00:839E  11 00 10            	LD		DE,CHRTBL + #1000
     233.  00:83A1  CD 2B 9C            	CALL	depack_VRAM	
     234.  00:83A4                      	;cargamos mapa de pantalla
     235.  00:83A4  21 90 BD            	LD		HL,tiles_mapa_marcador
     236.  00:83A7  11 00 1A            	LD		DE,TILMAP + #0200
     237.  00:83AA  CD 2B 9C            	CALL	depack_VRAM
     238.  00:83AD                      	;cargamos los colores de los patrones
     239.  00:83AD  21 5B BD            	LD		HL,tiles_color_marcador
     240.  00:83B0  11 00 30            	LD		DE,CLRTBL + #1000
     241.  00:83B3  C3 2B 9C            	JP		depack_VRAM
     242.  00:83B6                      fin_pinta_parte_inferior_pantalla:
     243.  00:83B6                      
     244.  00:83B6                      
     245.  00:83B6                      
     246.  00:83B6                      ;;=====================================================
     247.  00:83B6                      ;;PINTA_VIDAS
     248.  00:83B6                      ;;=====================================================	
     249.  00:83B6                      ; función: 	actualiza el mapa de tiles para que en el próximo refresco se pinten y actualiza_vidas
     250.  00:83B6                      ; entrada: 	array_aux_vidas
     251.  00:83B6                      ; salida: 	actualiza_vidas_sn
     252.  00:83B6                      ; toca:		todo
     253.  00:83B6                      pinta_vidas:
     254.  00:83B6  CD 85 81            	CALL	actualiza_marcador_vidas
     255.  00:83B9                      	
     256.  00:83B9  21 BF A9            	LD		HL, array_aux_vidas
     257.  00:83BC  11 48 1A            	LD		DE, TILMAP + POSVIDAS 	;inicio posición en el mapa de tiles de las vidas
     258.  00:83BF  01 08 00            	LD		BC, NMAXVIDREL			;hay 8 posiciones para vidas/reliquias o espacios en negro si no tiene 8 vidas/reliquias
     259.  00:83C2  C3 5C 00            	JP		LDIRVM
     260.  00:83C5                      fin_pinta_vidas:
     261.  00:83C5                      	
     262.  00:83C5                      	
     263.  00:83C5                      
     264.  00:83C5                      ;;=====================================================
     265.  00:83C5                      ;;PINTA_RELIQUIAS
     266.  00:83C5                      ;;=====================================================	
     267.  00:83C5                      ; función: 	actualiza el mapa de tiles para que en el próximo refresco se pinten y actualiza_reliquias
     268.  00:83C5                      ; entrada: 	array_aux_reliquias
     269.  00:83C5                      ; salida: 	-
     270.  00:83C5                      ; toca:		todo
     271.  00:83C5                      pinta_reliquias:
     272.  00:83C5  CD 9E 81            	CALL	actualiza_buffer_reliquias
     273.  00:83C8                      	
     274.  00:83C8  21 C7 A9            	LD		HL, array_aux_reliquias
     275.  00:83CB  11 C8 1A            	LD		DE, TILMAP + POSRELIQ 	;inicio posición en el mapa de tiles de las vidas
     276.  00:83CE  01 08 00            	LD		BC, NMAXVIDREL			;hay 8 posiciones para vidas/reliquias o espacios en negro si no tiene 8 vidas/reliquias
     277.  00:83D1  C3 5C 00            	JP		LDIRVM
     278.  00:83D4                      fin_pinta_reliquias:
     279.  00:83D4                      	
     280.  00:83D4                      
     281.  00:83D4                      
     282.  00:83D4                      	
     283.  00:83D4                      ;;=====================================================
     284.  00:83D4                      ;;PINTA_NIVEL
     285.  00:83D4                      ;;=====================================================	
     286.  00:83D4                      ; función: 	actualiza el nivel en la parte de puntuación
     287.  00:83D4                      ; entrada: 	prota_nivel
     288.  00:83D4                      ; salida: 	-
     289.  00:83D4                      ; toca:		HL,DE,BC
     290.  00:83D4                      pinta_nivel:	
     291.  00:83D4                      	;forma más avanzada sin llamada a la bios
     292.  00:83D4  01 B4 1A            	LD		BC,TILMAP + POSNIVEL ;posición en el mapa de tiles del tile de nivel
     293.  00:83D7  3A B9 A9            	LD		 A, (prota_nivel)	 ;seleccionando la pos del banco de tiles a poner en el mapa
     294.  00:83DA  C6 30               	ADD		'0'	
     295.  00:83DC  57                  	LD		 D, A
     296.  00:83DD                      	
     297.  00:83DD  C3 E0 83            	JP		pinta_tile_suelto
     298.  00:83E0                      fin_pinta_nivel:
     299.  00:83E0                      
     300.  00:83E0                      
     301.  00:83E0                      
     302.  00:83E0                      ;;=====================================================
     303.  00:83E0                      ;;PINTA_TILE_SUELTO
     304.  00:83E0                      ;;=====================================================	
     305.  00:83E0                      ; función: 	pinta al tile que digamos en D, en la posición BC
     306.  00:83E0                      ; entrada: 	BC (posición a pintar en el mapa),D (qué se va a pintar el esa posición)
     307.  00:83E0                      ; salida: 	-
     308.  00:83E0                      ; toca:		-
     309.  00:83E0                      pinta_tile_suelto:	
     310.  00:83E0  DB 99               	IN		 A,(REGEST)		;leer registro de estado (recomendado)
     311.  00:83E2  79                  	LD		 A,C			;primero byte bajo	
     312.  00:83E3  D3 99               	OUT		(REGEST),A
     313.  00:83E5  78                  	LD		 A,B			;después byte alto  ********************** preguntar a Fernando cómo que byte bajo es B
     314.  00:83E6  F6 40               	OR		1000000b		;+64
     315.  00:83E8  D3 99               	OUT		(REGEST),A
     316.  00:83EA                      	
     317.  00:83EA  7A                  	LD		A,D
     318.  00:83EB  D3 98               	OUT		(REGESCVDP),A	;escribe A en VRAM en la posición indicada por los dos OUT anteriores
     319.  00:83ED                      fin_pinta_tile_suelto:
     320.  00:83ED  C9                  	RET
     321.  00:83EE                      
     322.  00:83EE                      
     323.  00:83EE                      
     324.  00:83EE                      
     325.  00:83EE                      
     326.  00:83EE                      ;;=====================================================
     327.  00:83EE                      ;;MIRA_PINTA ENERGIA
     328.  00:83EE                      ;;=====================================================	
     329.  00:83EE                      ; función: 	actualiza el nivel de energia en la parte de puntuación
     330.  00:83EE                      ; nota:		el cuadrado más bajo de ejergía siempre estará pintado... se obviará
     331.  00:83EE                      ; entrada: 	prota.energia, array_aux_energia
     332.  00:83EE                      ; salida: 	-
     333.  00:83EE                      ; toca:		ninguno porque usa EXX
     334.  00:83EE                      
     335.  00:83EE                      ; nota importante... lo mismo interesa hacer esto con un array para comparar y un bucle
     336.  00:83EE                      
     337.  00:83EE                      mira_pinta_energia:
     338.  00:83EE  D9                  	EXX							;por si acaso guardo el contenido de HL (si veo que no es necesario guardarlo lo quito) uso esto en vez de push por el nº ciclos
     339.  00:83EF                      	
     340.  00:83EF  3A BE A9            	LD		 A,(prota_energia) 	;para las comparaciones A variable (actual) y B fijo (limites)
     341.  00:83F2                      
     342.  00:83F2  0E 00               	LD		 C,TILENEGRO		;para agilizar asignaciones en vez de un valor cte uso otro registro
     343.  00:83F4                      pinta_ener:
     344.  00:83F4                      pinta_ener_tile_8:
     345.  00:83F4  21 D6 A9            	LD		HL,ultimo_pos_array_aux_energia	;coloco puntero en array e iré decrementando
     346.  00:83F7  06 D9               	LD		 B,TILEENERG8
     347.  00:83F9  B8                  	CP		 B
     348.  00:83FA  38 04               	JR		C,pinta_ener_tile_8_negro
     349.  00:83FC  36 0E               	LD		(HL),TILEMAPVERD
     350.  00:83FE  18 01               	JR		pinta_ener_tile_7
     351.  00:8400                      pinta_ener_tile_8_negro:
     352.  00:8400  71                  	LD		(HL),C
     353.  00:8401                      
     354.  00:8401                      pinta_ener_tile_7:
     355.  00:8401  2B                  	DEC		HL
     356.  00:8402  06 BA               	LD		 B,TILEENERG7
     357.  00:8404  B8                  	CP		 B
     358.  00:8405  38 04               	JR		C,pinta_ener_tile_7_negro
     359.  00:8407  36 0E               	LD		(HL),TILEMAPVERD
     360.  00:8409  18 01               	JR		pinta_ener_tile_6
     361.  00:840B                      pinta_ener_tile_7_negro:
     362.  00:840B  71                  	LD		(HL),C
     363.  00:840C                      
     364.  00:840C                      pinta_ener_tile_6:
     365.  00:840C  2B                  	DEC		HL
     366.  00:840D  06 9B               	LD		 B,TILEENERG6
     367.  00:840F  B8                  	CP		 B
     368.  00:8410  38 04               	JR		C,pinta_ener_tile_6_negro
     369.  00:8412  36 0E               	LD		(HL),14
     370.  00:8414  18 01               	JR		pinta_ener_tile_5
     371.  00:8416                      pinta_ener_tile_6_negro:
     372.  00:8416  71                  	LD		(HL),C
     373.  00:8417                      
     374.  00:8417                      pinta_ener_tile_5:
     375.  00:8417  2B                  	DEC		HL
     376.  00:8418  06 7C               	LD		 B,TILEENERG5
     377.  00:841A  B8                  	CP		 B
     378.  00:841B  38 04               	JR		C,pinta_ener_tile_5_negro
     379.  00:841D  36 0E               	LD		(HL),TILEMAPVERD
     380.  00:841F  18 01               	JR		pinta_ener_tile_4
     381.  00:8421                      pinta_ener_tile_5_negro:
     382.  00:8421  71                  	LD		(HL),C
     383.  00:8422                      
     384.  00:8422                      pinta_ener_tile_4:
     385.  00:8422  2B                  	DEC		HL
     386.  00:8423  06 5D               	LD		 B,TILEENERG4
     387.  00:8425  B8                  	CP		 B
     388.  00:8426  38 04               	JR		C,pinta_ener_tile_4_negro
     389.  00:8428  36 0F               	LD		(HL),TILEMAPAMAR
     390.  00:842A  18 01               	JR		pinta_ener_tile_3
     391.  00:842C                      pinta_ener_tile_4_negro:
     392.  00:842C  71                  	LD		(HL),C
     393.  00:842D                      	
     394.  00:842D                      pinta_ener_tile_3:
     395.  00:842D  2B                  	DEC		HL
     396.  00:842E  06 3E               	LD		 B,TILEENERG3
     397.  00:8430  B8                  	CP		 B
     398.  00:8431  38 04               	JR		C,pinta_ener_tile_3_negro
     399.  00:8433  36 0F               	LD		(HL),TILEMAPAMAR
     400.  00:8435  18 01               	JR		pinta_ener_tile_2
     401.  00:8437                      pinta_ener_tile_3_negro:
     402.  00:8437  71                  	LD		(HL),C
     403.  00:8438                      
     404.  00:8438                      pinta_ener_tile_2:
     405.  00:8438  2B                  	DEC		HL
     406.  00:8439  06 1F               	LD		 B,TILEENERG2
     407.  00:843B  B8                  	CP		 B
     408.  00:843C  38 04               	JR		C,pinta_ener_tile_2_negro
     409.  00:843E  36 10               	LD		(HL),TILEMAPROJO
     410.  00:8440  18 01               	JR		fin_mira_pinta_energia		;siempre estará pintado el cuadro mínimo
     411.  00:8442                      pinta_ener_tile_2_negro:
     412.  00:8442  71                  	LD		(HL),C
     413.  00:8443                      
     414.  00:8443                      fin_mira_pinta_energia:
     415.  00:8443  D9                  	EXX
     416.  00:8444  C9                  	RET
     417.  00:8445                      
     418.  00:8445                      
     419.  00:8445                      ;;=====================================================
     420.  00:8445                      ;;PINTA_ENERGIA
     421.  00:8445                      ;;=====================================================	
     422.  00:8445                      ; función: 	actualiza el mapa de tiles para que en el próximo refresco se pinte la barra de energia actual
     423.  00:8445                      ; entrada: 	array_aux_energia
     424.  00:8445                      ; toca:		todo
     425.  00:8445                      pinta_energia:
     426.  00:8445  CD EE 83            	CALL	mira_pinta_energia
     427.  00:8448                      	
     428.  00:8448  21 CF A9            	LD		HL, array_aux_energia
     429.  00:844B  11 88 1A            	LD		DE, TILMAP + POSENERG 	;inicio posición en el mapa de tiles de las vidas
     430.  00:844E  01 08 00            	LD		BC, NMAXVIDREL			;hay 8 posiciones para vidas/reliquias o espacios en negro si no tiene 8 vidas/reliquias
     431.  00:8451  C3 5C 00            	JP		LDIRVM
     432.  00:8454                      fin_pinta_energia:
     433.  00:8454                      
     434.  00:8454                      
     435.  00:8454                      
     436.  00:8454                      ;;=====================================================
     437.  00:8454                      ;;BORRA_MAPA
     438.  00:8454                      ;;=====================================================	
     439.  00:8454                      ; función: 	pone todas las habitaciones del mapa a negro (los tiles del mapa los rellena con un array a 0 - caracter en negro)
     440.  00:8454                      ; entrada: 	array_aux_mapa_limpiar
     441.  00:8454                      ; salida: 	-
     442.  00:8454                      ; toca:		AF
     443.  00:8454                      borra_mapa:
     444.  00:8454  D9                  	EXX
     445.  00:8455                      	
     446.  00:8455  21 D7 A9            	LD		HL,array_aux_mapa_limpiar
     447.  00:8458  11 F8 1A            	LD		DE,TILMAP + POSMAPLIN1 	;inicio posición en el mapa de tiles de la primera fila del mapa
     448.  00:845B  01 07 00            	LD		BC,NHABNIVEL			;cada nivel son 7 filas con 7 habitaciones "posibles"
     449.  00:845E  CD 5C 00            	CALL	LDIRVM
     450.  00:8461                      	
     451.  00:8461  21 D7 A9            	LD		HL,array_aux_mapa_limpiar
     452.  00:8464  11 D8 1A            	LD		DE,TILMAP + POSMAPLIN2
     453.  00:8467  01 07 00            	LD		BC,NHABNIVEL
     454.  00:846A  CD 5C 00            	CALL	LDIRVM
     455.  00:846D                      
     456.  00:846D  21 D7 A9            	LD		HL,array_aux_mapa_limpiar
     457.  00:8470  11 B8 1A            	LD		DE,TILMAP + POSMAPLIN3
     458.  00:8473  01 07 00            	LD		BC,NHABNIVEL
     459.  00:8476  CD 5C 00            	CALL	LDIRVM
     460.  00:8479                      
     461.  00:8479  21 D7 A9            	LD		HL,array_aux_mapa_limpiar	
     462.  00:847C  11 98 1A            	LD		DE,TILMAP + POSMAPLIN4
     463.  00:847F  01 07 00            	LD		BC,NHABNIVEL
     464.  00:8482  CD 5C 00            	CALL	LDIRVM
     465.  00:8485                      
     466.  00:8485  21 D7 A9            	LD		HL,array_aux_mapa_limpiar	
     467.  00:8488  11 78 1A            	LD		DE,TILMAP + POSMAPLIN5
     468.  00:848B  01 07 00            	LD		BC,NHABNIVEL
     469.  00:848E  CD 5C 00            	CALL	LDIRVM
     470.  00:8491                      
     471.  00:8491  21 D7 A9            	LD		HL,array_aux_mapa_limpiar	
     472.  00:8494  11 58 1A            	LD		DE,TILMAP + POSMAPLIN6
     473.  00:8497  01 07 00            	LD		BC,NHABNIVEL
     474.  00:849A  CD 5C 00            	CALL	LDIRVM
     475.  00:849D                      
     476.  00:849D  21 D7 A9            	LD		HL,array_aux_mapa_limpiar	
     477.  00:84A0  11 38 1A            	LD		DE,TILMAP + POSMAPLIN7
     478.  00:84A3  01 07 00            	LD		BC,NHABNIVEL
     479.  00:84A6  CD 5C 00            	CALL	LDIRVM
     480.  00:84A9                      	
     481.  00:84A9  D9                  	EXX
     482.  00:84AA                      fin_borra_mapa:
     483.  00:84AA  C9                  	RET
     484.  00:84AB                      
     485.  00:84AB                      
     486.  00:84AB                      
     487.  00:84AB                      
     488.  00:84AB                      
     489.  00:84AB                      
     490.  00:84AB                      
     491.  00:84AB                      ;;=====================================================
     492.  00:84AB                      ;;POSICIONA_EN_MAPA
     493.  00:84AB                      ;;=====================================================	
     494.  00:84AB                      ; función: 	en el mapa de marcadores de la derecha/abajo marca un cuadro en gris o con un muñeco
     495.  00:84AB                      ;			según el valor de prota.posición pinta entrá un muñeco y por donde vaya pasando el prota
     496.  00:84AB                      ;			quedará en gris
     497.  00:84AB                      ; entrada: 	elemento_pintar_mapa, prota_pos_mapy, prota_pos_mapx
     498.  00:84AB                      ; salida: 	-
     499.  00:84AB                      ; toca:		todos
     500.  00:84AB                      posiciona_en_mapa:
     501.  00:84AB                      	;#0238 es la posición en mapa de tiles de la esquina superior izquierda del mapa (569 en decimal)
     502.  00:84AB  21 38 1A            	LD		HL, TILMAP + POSMAPA;pos inicial
     503.  00:84AE                      	
     504.  00:84AE                      	;ahora se le calcula la fila a pintar ya que va de abajo a arriba y no como en el mapa + columna
     505.  00:84AE                      .sumar_fila:
     506.  00:84AE  3A BD A9            	LD		 A, (prota_pos_mapy)
     507.  00:84B1  FE 01               	CP		 1
     508.  00:84B3  28 2A               	JR		 Z, .fila_1
     509.  00:84B5  3A BD A9            	LD		 A, (prota_pos_mapy)
     510.  00:84B8  FE 02               	CP		 2
     511.  00:84BA  28 2A               	JR		 Z, .fila_2
     512.  00:84BC  3A BD A9            	LD		 A, (prota_pos_mapy)
     513.  00:84BF  FE 03               	CP		 3
     514.  00:84C1  28 2A               	JR		 Z, .fila_3
     515.  00:84C3  3A BD A9            	LD		 A, (prota_pos_mapy)
     516.  00:84C6  FE 04               	CP		 4
     517.  00:84C8  28 2A               	JR		 Z, .fila_4
     518.  00:84CA  3A BD A9            	LD		 A, (prota_pos_mapy)
     519.  00:84CD  FE 05               	CP		 5
     520.  00:84CF  28 2A               	JR		 Z, .fila_5
     521.  00:84D1  3A BD A9            	LD		 A, (prota_pos_mapy)
     522.  00:84D4  FE 06               	CP		 6
     523.  00:84D6  28 2A               	JR		 Z, .sumar_columna
     524.  00:84D8                      	;no consulto la 0 porque si no es ninguna de las anteriores es 0 y por tanto sería un jr fila_0
     525.  00:84D8                      	
     526.  00:84D8                      .fila_0:
     527.  00:84D8  11 C0 00            	LD		DE, 192
     528.  00:84DB  19                  	ADD		HL, DE			;nota: se que repito el ADD pero la otra opción es inicializar DE y ya tarda mucho la funicón (es por velicidad)
     529.  00:84DC  C3 02 85            	JP		.sumar_columna
     530.  00:84DF                      .fila_1:
     531.  00:84DF  11 A0 00            	LD		DE, 160
     532.  00:84E2  19                  	ADD		HL, DE
     533.  00:84E3  C3 02 85            	JP		.sumar_columna
     534.  00:84E6                      .fila_2:
     535.  00:84E6  11 80 00            	LD		DE, 128
     536.  00:84E9  19                  	ADD		HL, DE
     537.  00:84EA  C3 02 85            	JP		.sumar_columna
     538.  00:84ED                      .fila_3:
     539.  00:84ED  11 60 00            	LD		DE, 96
     540.  00:84F0  19                  	ADD		HL, DE
     541.  00:84F1  C3 02 85            	JP		.sumar_columna
     542.  00:84F4                      .fila_4:
     543.  00:84F4  11 40 00            	LD		DE, 64
     544.  00:84F7  19                  	ADD		HL, DE
     545.  00:84F8  C3 02 85            	JP		.sumar_columna
     546.  00:84FB                      .fila_5:
     547.  00:84FB  11 20 00            	LD		DE, 32
     548.  00:84FE  19                  	ADD		HL, DE
     549.  00:84FF  C3 02 85            	JP		.sumar_columna
     550.  00:8502                      .fila_6:
     551.  00:8502                      	;pongo fila_6 por poner ya que si es la fila 6 equiv. a primera fila del mapa y por tanto no suma fila
     552.  00:8502                      	
     553.  00:8502                      	
     554.  00:8502                      .sumar_columna:
     555.  00:8502  3A BC A9            	LD 		 A, (prota_pos_mapx) ;POS X
     556.  00:8505  16 00               	LD		 D, 0
     557.  00:8507  5F                  	LD		 E, A
     558.  00:8508  19                  	ADD		HL, DE
     559.  00:8509                      	
     560.  00:8509                      	;resultado en BC para usar en la función pinta_tile_suelto
     561.  00:8509  44                  	LD		 B, H
     562.  00:850A  4D                  	LD		 C, L
     563.  00:850B                      	
     564.  00:850B                      	;terminado de fijar la coordenada recuperamos a para ver el tipo
     565.  00:850B  3A DE A9            	LD		 A, (elemento_pintar_mapa)
     566.  00:850E  FE 09               	CP		 TILEGRISM
     567.  00:8510  CA 18 85            	JP		 Z, pinta_pos_mapa_vacio
     568.  00:8513  16 13               	LD		 D, TILEPROTAM
     569.  00:8515  C3 1A 85            	JP		fin_pinta_pos_mapa
     570.  00:8518                      pinta_pos_mapa_vacio:
     571.  00:8518  16 09               	LD		 D, TILEGRISM	
     572.  00:851A                      
     573.  00:851A                      fin_pinta_pos_mapa:
     574.  00:851A  C3 E0 83            	JP		pinta_tile_suelto
     575.  00:851D                      fin_posiciona_en_mapa:
     576.  00:851D                      
     577.  00:851D                      
     578.  00:851D                      
     579.  00:851D                      
     580.  00:851D                      ;;=====================================================
     581.  00:851D                      ;;EFECTO_IMAGEN_TIRA_RELIQUIA
     582.  00:851D                      ;;=====================================================	
     583.  00:851D                      ; función: 	hace que el fondo de la pantalla parpadee N veces
     584.  00:851D                      ; entrada: 	actualiza_reliquias_sn
     585.  00:851D                      ; salida: 	-
     586.  00:851D                      ; toca: 	todo
     587.  00:851D                      efecto_imagen_tira_reliquia:
     588.  00:851D  3E 14               	LD		 A, 20;RETARDOREL
     589.  00:851F  47                  	LD		 B, A
     590.  00:8520                      
     591.  00:8520                      .parpadea_fondo:
     592.  00:8520  C5                  	PUSH	BC
     593.  00:8521  21 A3 A9            	LD		HL, color_bomba1
     594.  00:8524  CD 44 82            	CALL	color_pantalla
     595.  00:8527                      	
     596.  00:8527                      	;~ PUSH	BC
     597.  00:8527                      	;~ LD		 A, 255
     598.  00:8527                      	;~ LD		 B, A
     599.  00:8527                      ;~ .bucle_de_espera:
     600.  00:8527                      	;~ NOP
     601.  00:8527                      	;~ DJNZ	 .bucle_de_espera
     602.  00:8527                      	;~ POP		BC
     603.  00:8527  76                  	HALT
     604.  00:8528                      
     605.  00:8528                      	
     606.  00:8528  21 A6 A9            	LD		HL, color_bomba2
     607.  00:852B  CD 44 82            	CALL	color_pantalla
     608.  00:852E  C1                  	POP		BC
     609.  00:852F  10 EF               	DJNZ	.parpadea_fondo
     610.  00:8531                      	
     611.  00:8531  21 A0 A9            	LD		HL, color_base
     612.  00:8534  C3 44 82            	JP		color_pantalla
     613.  00:8537                      fin_efecto_imagen_tira_reliquia:
     614.  00:8537                      
     615.  00:8537                      
     616.  00:8537                      
     617.  00:8537                      
     618.  00:8537                      ;=====================================================
     619.  00:8537                      ;;PINTA_ARRAY
     620.  00:8537                      ;;=====================================================	
     621.  00:8537                      ;;funcion:  (pinta el mismo tile) se le pasa un array con posiciones de tiles y coordenadas x e y y los pinta en screen 2
     622.  00:8537                      ;;entrada:	wordaux1 (pos inicio sc2 donde pintar) y wordaux2 (puntero al array a pintar), BC (posición en tilemap) , D filas y E columnas
     623.  00:8537                      ;;salida:	-
     624.  00:8537                      ;;importante: necesita de una variable wordaux1 tipo WD (wordaux1: 	DW	0)
     625.  00:8537                      ;; ejemplo llamada:
     626.  00:8537                      	;~ LD		HL,array_tiles					;guardo puntero al array a pintar (como psar por referencia)
     627.  00:8537                      	;~ LD		(wordaux2),HL					;en la variable wordaux2
     628.  00:8537                      	;~ LD		HL,SC2MAP + 256 + 32			;calcula posición en tilemap
     629.  00:8537                      	;~ LD		(wordaux1),HL					;guarda valor pos tilemap en wordaux1
     630.  00:8537                      	;~ LD		B,H								;coloca posición tilemap BC
     631.  00:8537                      	;~ LD		C,L
     632.  00:8537                      	;~ LD		D,2								;nº de filas ahora byteaux1
     633.  00:8537                      	;~ LD		E,3								;nº de columnas ahora byteaux2
     634.  00:8537                      	;~ CALL	pinta_array
     635.  00:8537                      
     636.  00:8537                      pinta_array:
     637.  00:8537  08                  	EX		AF, AF'
     638.  00:8538                      	
     639.  00:8538  3A 7B 85            	LD		 A, (byteaux1)
     640.  00:853B  57                  	LD		 D, A
     641.  00:853C  3A 7C 85            	LD		 A, (byteaux2)
     642.  00:853F  5F                  	LD		 E, A
     643.  00:8540                      	
     644.  00:8540  2A 77 85            	LD		HL, (wordaux1)
     645.  00:8543  44                  	LD		 B, H							;coloca posición tilemap BC
     646.  00:8544  4D                  	LD		 C, L
     647.  00:8545                      	
     648.  00:8545                      	;contamos con que la posición "global" en el tilemap está ya en BC
     649.  00:8545                      	;y el puntero al array a pintar en wordaux2 y la posición en tilemap sc2 en wordaux1
     650.  00:8545                      	;inicializa
     651.  00:8545  DB 99               	IN		 A,(REGEST)		;leer registro de estado (recomendado)
     652.  00:8547                      	
     653.  00:8547                      	;coloca puntero para pintar tile según BC
     654.  00:8547  79                  	LD		 A,C			;primero byte bajo	
     655.  00:8548  D3 99               	OUT		(REGEST),A
     656.  00:854A  78                  	LD		 A,B			;después byte alto  ********************** preguntar a Fernando cómo que byte bajo es B
     657.  00:854B  F6 40               	OR		1000000b		;+64
     658.  00:854D  D3 99               	OUT		(REGEST),A
     659.  00:854F                      
     660.  00:854F                      	
     661.  00:854F  2A 79 85            	LD		HL,(wordaux2)	;HL es lo que se pintará y le he pasado el puntero del array tilemap a pintar
     662.  00:8552                      .pa_pinta_fila:
     663.  00:8552  43                  	LD		 B,E
     664.  00:8553                      .pa_pinta_columnas: 		;finta la fila (pintando las columnas)
     665.  00:8553  7E                  	LD		 A,(HL)
     666.  00:8554  D3 98               	OUT		(REGESCVDP),A	;escribe A en VRAM en la posición indicada por los dos OUT anteriores
     667.  00:8556  23                  	INC		HL
     668.  00:8557  10 FA               	DJNZ	.pa_pinta_columnas
     669.  00:8559                      	
     670.  00:8559                      	;no es una solución elegante lo de repetir código pero queda claro
     671.  00:8559                      	;por si hay otra fila
     672.  00:8559  E5                  	PUSH	HL
     673.  00:855A  2A 77 85            	LD		HL,(wordaux1)
     674.  00:855D  01 20 00            	LD		BC,32
     675.  00:8560  09                  	ADD		HL,BC
     676.  00:8561  22 77 85            	LD		(wordaux1),HL
     677.  00:8564  44                  	LD		B,H
     678.  00:8565  4D                  	LD		C,L
     679.  00:8566  E1                  	POP		HL
     680.  00:8567                      	
     681.  00:8567  79                  	LD		 A,C			;primero byte bajo	
     682.  00:8568  D3 99               	OUT		(REGEST),A
     683.  00:856A  78                  	LD		 A,B			;después byte alto 
     684.  00:856B  F6 40               	OR		1000000b		;+64
     685.  00:856D  D3 99               	OUT		(REGEST),A
     686.  00:856F                      	
     687.  00:856F                      	;si hay otra fila repite
     688.  00:856F  15                  	DEC		 D
     689.  00:8570  7A                  	LD		 A,D		;¿hay otra fila?
     690.  00:8571  B7                  	OR		 A
     691.  00:8572  C4 52 85            	CALL	NZ,.pa_pinta_fila
     692.  00:8575                      	
     693.  00:8575  08                  	EX		AF, AF'
     694.  00:8576                      fin_pinta_array:
     695.  00:8576  C9                  	RET
     696.  00:8577                      ;;variables asocidas a la función pinta_array
     697.  00:8577                      ;; por de pronto la dejo aquí
     698.  00:8577  00 00               wordaux1:		DW	0	;almacena la posición en el tilemap 0 al 675
     699.  00:8579  00 00               wordaux2:		DW	0	;almacena puntero a array de tiles (posiciones en realidad) a pintar (posiciones repetidas en los 2 primeros bancos)
     700.  00:857B  00                  byteaux1:		DB	0	;nº filas Registro D
     701.  00:857C  00                  byteaux2:		DB	0	;nº columnas Registro E
     702.  00:857D                      
     703.  00:857D                      
     704.  00:857D                      
     705.  00:857D                      
     706.  00:857D                      ;;=====================================================
     707.  00:857D                      ;;INICIALIZA_ANTORCHAS
     708.  00:857D                      ;;=====================================================	
     709.  00:857D                      ; función: 	inicializa las variables de estructuras de las antorchas
     710.  00:857D                      ; entrada: 	antorchas, array_antorcha
     711.  00:857D                      ; salida: 	
     712.  00:857D                      ; toca:		HL, IX
     713.  00:857D                      inicializa_antorchas:
     714.  00:857D  DD 21 F0 AA         	LD		IX, antorchas
     715.  00:8581  DD 36 00 00         	LD		(IX), INACTIVA
     716.  00:8585  21 F7 AA            	LD		HL, array_antorcha
     717.  00:8588  DD 74 01            	LD		(IX + 1), H
     718.  00:858B  DD 75 02            	LD		(IX + 2), L
     719.  00:858E  DD 36 03 88         	LD		(IX + 3), POSANTOR1
     720.  00:8592  DD 36 04 97         	LD		(IX + 4), POSANTOR2
     721.  00:8596  DD 36 05 00         	LD		(IX + 5), 0
     722.  00:859A  DD 36 06 FF         	LD		(IX + 6), RESETLLAMA
     723.  00:859E                      fin_inicializa_antorchas:
     724.  00:859E  C9                  	RET
     725.  00:859F                      
     726.  00:859F                      
     727.  00:859F                      ;;=====================================================
     728.  00:859F                      ;;INICIALIZA_esqueletos
     729.  00:859F                      ;;=====================================================	
     730.  00:859F                      ; función: 	inicializa las variables de estructuras de los esqueletos
     731.  00:859F                      ; entrada: 	esqueletos, array_esqueletos
     732.  00:859F                      ; salida: 	
     733.  00:859F                      ; toca:		HL, IX
     734.  00:859F                      inicializa_esqueletos:
     735.  00:859F  DD 21 FA AA         	LD		IX, esqueletos
     736.  00:85A3  DD 36 00 00         	LD		(IX), INACTIVA
     737.  00:85A7  21 01 AB            	LD		HL, array_esqueleto
     738.  00:85AA  DD 74 01            	LD		(IX + 1), H
     739.  00:85AD  DD 75 02            	LD		(IX + 2), L
     740.  00:85B0  DD 36 03 88         	LD		(IX + 3), POSESQUEL1
     741.  00:85B4  DD 36 04 95         	LD		(IX + 4), POSESQUEL2
     742.  00:85B8  DD 36 05 00         	LD		(IX + 5), 0
     743.  00:85BC  DD 36 06 19         	LD		(IX + 6), RESETESQUEL
     744.  00:85C0                      fin_inicializa_esqueletos:
     745.  00:85C0  C9                  	RET
     746.  00:85C1                      	
     747.  00:85C1                      
     748.  00:85C1                      ;;=====================================================
     749.  00:85C1                      ;;PINTA_ANTORCHAS
     750.  00:85C1                      ;;=====================================================	
     751.  00:85C1                      ; función: 	pinta las antorchas con valores base
     752.  00:85C1                      ; entrada: 	antorchas, array_antorcha
     753.  00:85C1                      ; salida: 	
     754.  00:85C1                      ; toca:		HL
     755.  00:85C1                      pinta_extra_fondo:
     756.  00:85C1  DD 21 F0 AA         	LD		IX, antorchas
     757.  00:85C5                      .examina_sihay_antorchas
     758.  00:85C5                      	;hay que pintarlas?
     759.  00:85C5  3A 8C A6            	LD		 A, (habitacion_extras)
     760.  00:85C8  CB 47               	BIT		 0, A
     761.  00:85CA  C2 D4 85            	JP		NZ, .hayantorchas			;si el bit 0 de extras es 0 no se pintan antorchas
     762.  00:85CD  DD 36 00 00         	LD		(IX), INACTIVA
     763.  00:85D1  C3 FD 85            	JP		.examina_sihay_esqueletos
     764.  00:85D4                      	
     765.  00:85D4                      .hayantorchas:
     766.  00:85D4  DD 36 00 01         	LD		(IX), ACTIVA
     767.  00:85D8                      	;pinta antorcha izquierdda
     768.  00:85D8  DD 66 01            	LD		 H, (IX + 1)
     769.  00:85DB  DD 6E 02            	LD		 L, (IX + 2)
     770.  00:85DE  22 79 85            	LD		(wordaux2), HL				;guarda pos array en wordaux2
     771.  00:85E1                      	
     772.  00:85E1  21 88 18            	LD		HL, TILMAP + POSANTOR1		;calcula posición en tilemap
     773.  00:85E4  22 77 85            	LD		(wordaux1), HL				;guarda valor pos tilemap en wordaux1
     774.  00:85E7                      
     775.  00:85E7  3E 03               	LD		 A, 3						;nº de filas	
     776.  00:85E9  32 7B 85            	LD		(byteaux1), A
     777.  00:85EC  3E 01               	LD		 A, 1						;nº de columnas
     778.  00:85EE  32 7C 85            	LD		(byteaux2), A				
     779.  00:85F1                      	
     780.  00:85F1  CD 37 85            	CALL	pinta_array
     781.  00:85F4                      	
     782.  00:85F4                      	;pinta antorcha derecha
     783.  00:85F4  21 97 18            	LD		HL, TILMAP + POSANTOR2		;calcula posición en tilemap
     784.  00:85F7  22 77 85            	LD		(wordaux1), HL				;guarda valor pos tilemap en wordaux1
     785.  00:85FA                      	
     786.  00:85FA  C3 37 85            	JP		pinta_array 				;no ecesita CALL ya que la subrutina termina aquí
     787.  00:85FD                      	
     788.  00:85FD                      .examina_sihay_esqueletos
     789.  00:85FD  DD 21 FA AA         	LD		IX, esqueletos
     790.  00:8601                      	;hay que pintarlos?
     791.  00:8601  3A 8B A6            	LD		 A, (habitacion_actual)
     792.  00:8604  CB 6F               	BIT		 5, A
     793.  00:8606  C2 0E 86            	JP		NZ, .hayesqueletos			;si el bit 0 de extras es 0 no se pintan antorchas
     794.  00:8609  DD 36 00 00         	LD		(IX), INACTIVA
     795.  00:860D  C9                  	RET									;no hay que pintarlo. no hay que continuar
     796.  00:860E                      
     797.  00:860E                      .hayesqueletos
     798.  00:860E  DD 36 00 01         	LD		(IX), ACTIVA
     799.  00:8612                      	;pinta antorcha izquierdda
     800.  00:8612  DD 66 01            	LD		 H, (IX + 1)
     801.  00:8615  DD 6E 02            	LD		 L, (IX + 2)
     802.  00:8618  22 79 85            	LD		(wordaux2), HL				;guarda pos array en wordaux2
     803.  00:861B                      	
     804.  00:861B  21 88 18            	LD		HL, TILMAP + POSESQUEL1		;calcula posición en tilemap
     805.  00:861E  22 77 85            	LD		(wordaux1), HL				;guarda valor pos tilemap en wordaux1
     806.  00:8621                      
     807.  00:8621  3E 04               	LD		 A, 4						;nº de filas	
     808.  00:8623  32 7B 85            	LD		(byteaux1), A
     809.  00:8626  3E 03               	LD		 A, 3						;nº de columnas
     810.  00:8628  32 7C 85            	LD		(byteaux2), A				
     811.  00:862B                      	
     812.  00:862B  CD 37 85            	CALL	pinta_array
     813.  00:862E                      	
     814.  00:862E                      	;pinta antorcha derecha
     815.  00:862E  21 95 18            	LD		HL, TILMAP + POSESQUEL2		;calcula posición en tilemap
     816.  00:8631  22 77 85            	LD		(wordaux1), HL				;guarda valor pos tilemap en wordaux1
     817.  00:8634                      	
     818.  00:8634  C3 37 85            	JP		pinta_array 				;no ecesita CALL ya que la subrutina termina aquí
     819.  00:8637                      fin_pinta_extra_fondo:
     820.  00:8637  C9                  	RET
     821.  00:8638                      
     822.  00:8638                      
     823.  00:8638                      
     824.  00:8638                      ;;=====================================================
     825.  00:8638                      ;;ACTUALIZA_ELEMENTOS_FONDO
     826.  00:8638                      ;;=====================================================	
     827.  00:8638                      ; función: 	de los elementos que pueda haber en el fondo de la pared (pantalla) actualiza si procede
     828.  00:8638                      ;			actualmente: antorchas y a futuro esqueletos
     829.  00:8638                      ; entrada: 	
     830.  00:8638                      ; salida: 	
     831.  00:8638                      ; toca:		A
     832.  00:8638                      actualiza_elementos_fondo:
     833.  00:8638                      .examina_antorchas:
     834.  00:8638  DD 21 F0 AA         	LD		IX, antorchas
     835.  00:863C  DD 7E 00            	LD		 A, (IX)
     836.  00:863F  B7                  	OR		 A
     837.  00:8640  CA 46 86            	JP 	 	 Z, .examina_esqueletos
     838.  00:8643                      	
     839.  00:8643  CD 52 86            	CALL	flip_llamas_antorchas
     840.  00:8646                      .examina_esqueletos:
     841.  00:8646  DD 21 FA AA         	LD		IX, esqueletos
     842.  00:864A  DD 7E 00            	LD		 A, (IX)
     843.  00:864D  B7                  	OR		 A
     844.  00:864E  C8                  	RET	 	 Z
     845.  00:864F                      	
     846.  00:864F  C3 AF 86            	JP		flip_calavera_esqueletos
     847.  00:8652                      fin_actualiza_elementos_fondo:
     848.  00:8652                      
     849.  00:8652                      
     850.  00:8652                      
     851.  00:8652                      
     852.  00:8652                      ;;=====================================================
     853.  00:8652                      ;;FLIP_LLAMAS_ANTORCHAS
     854.  00:8652                      ;;=====================================================	
     855.  00:8652                      ; función: 	modifica las llamas de las antorchas con los tipos que hay
     856.  00:8652                      ; entrada: 	
     857.  00:8652                      ; salida: 	
     858.  00:8652                      ; toca:		
     859.  00:8652                      flip_llamas_antorchas:
     860.  00:8652  DD 21 F0 AA         	LD		IX, antorchas
     861.  00:8656                      	;tiene que cambiar de llama?
     862.  00:8656  DD 7E 06            	LD		 A, (IX + 6)
     863.  00:8659  3D                  	DEC		 A
     864.  00:865A  DD 77 06            	LD		 (IX + 6), A
     865.  00:865D                      	;no
     866.  00:865D  C0                  	RET		NZ
     867.  00:865E                      	;si
     868.  00:865E  C5                  	PUSH	BC
     869.  00:865F  D5                  	PUSH	DE
     870.  00:8660                      	
     871.  00:8660  DD 36 06 FF         	LD		(IX + 6), RESETLLAMA	
     872.  00:8664                      	
     873.  00:8664                      	;qué llama toca?
     874.  00:8664  DD 7E 05            	LD		 A, (IX + 5)
     875.  00:8667  B7                  	OR		 A
     876.  00:8668  CA 8C 86            	JP		 Z, .llama_par
     877.  00:866B                      .llama_impar
     878.  00:866B                      	;cambio a llama par
     879.  00:866B  AF                   	XOR		 A
     880.  00:866C  DD 77 05            	LD		(IX + 5), A
     881.  00:866F                      	;pinto llamas
     882.  00:866F  01 00 18            	LD		BC, TILMAP
     883.  00:8672  3E 88               	LD		 A, POSANTOR1
     884.  00:8674  CD 38 82            	CALL	suma_A_BC
     885.  00:8677  16 C4               	LD		 D, MAPLLAMA1
     886.  00:8679  CD E0 83            	CALL	pinta_tile_suelto
     887.  00:867C                      	
     888.  00:867C  01 00 18            	LD		BC, TILMAP
     889.  00:867F  3E 97               	LD		 A, POSANTOR2
     890.  00:8681  CD 38 82            	CALL	suma_A_BC
     891.  00:8684  16 C5               	LD		 D, MAPLLAMA2
     892.  00:8686  CD E0 83            	CALL	pinta_tile_suelto	
     893.  00:8689  C3 AB 86            	JP		fin_flip_llamas_antorchas
     894.  00:868C                      	
     895.  00:868C                      .llama_par
     896.  00:868C                      	;cambio a llama par
     897.  00:868C  3E 01                	LD		 A, 1
     898.  00:868E  DD 77 05            	LD		(IX + 5), A
     899.  00:8691                      	;pinto llamas
     900.  00:8691  01 00 18            	LD		BC, TILMAP
     901.  00:8694  3E 88               	LD		 A, POSANTOR1
     902.  00:8696  CD 38 82            	CALL	suma_A_BC
     903.  00:8699  16 C5               	LD		 D, MAPLLAMA2
     904.  00:869B  CD E0 83            	CALL	pinta_tile_suelto
     905.  00:869E                      	
     906.  00:869E  01 00 18            	LD		BC, TILMAP
     907.  00:86A1  3E 97               	LD		 A, POSANTOR2
     908.  00:86A3  CD 38 82            	CALL	suma_A_BC
     909.  00:86A6  16 C4               	LD		 D, MAPLLAMA1
     910.  00:86A8  CD E0 83            	CALL	pinta_tile_suelto
     911.  00:86AB                      
     912.  00:86AB                      fin_flip_llamas_antorchas:
     913.  00:86AB                      	;restauro los balores de los registros tocados antes
     914.  00:86AB  D1                  	POP		DE
     915.  00:86AC  C1                  	POP		BC
     916.  00:86AD  F1                  	POP		AF
     917.  00:86AE                      
     918.  00:86AE  C9                  	RET
     919.  00:86AF                      
     920.  00:86AF                      
     921.  00:86AF                      ;;=====================================================
     922.  00:86AF                      ;;FLIP_CALAVERA_ESQUELETOS
     923.  00:86AF                      ;;=====================================================	
     924.  00:86AF                      ; función: 	modifica las calaveras de los esqueletos
     925.  00:86AF                      ; entrada: 	
     926.  00:86AF                      ; salida: 	
     927.  00:86AF                      ; toca:		TODOS.... muy importante DE
     928.  00:86AF                      flip_calavera_esqueletos:
     929.  00:86AF  DD 21 FA AA         	LD		IX, esqueletos
     930.  00:86B3                      	
     931.  00:86B3                      	;tiene que cambiar de calavera?
     932.  00:86B3  DD 7E 06            	LD		 A, (IX + ESTRUCTURA_ESQUELETO.cont_sig_escena)
     933.  00:86B6  3D                  	DEC		 A
     934.  00:86B7  DD 77 06            	LD		 (IX + ESTRUCTURA_ESQUELETO.cont_sig_escena), A
     935.  00:86BA                      	;no
     936.  00:86BA  C0                  	RET		NZ
     937.  00:86BB                      	;si
     938.  00:86BB  DD 36 06 19         	LD		(IX + ESTRUCTURA_ESQUELETO.cont_sig_escena), RESETESQUEL		;resetea contador de nueve escena
     939.  00:86BF                      	
     940.  00:86BF  CD DD 86            	CALL	actualiza_escena_calavera
     941.  00:86C2                      
     942.  00:86C2                      	;pinto calaveras
     943.  00:86C2  01 00 18            	LD		BC, TILMAP
     944.  00:86C5  3E A9               	LD		 A, POSCALAVE1
     945.  00:86C7  CD 38 82            	CALL	suma_A_BC
     946.  00:86CA  D5                  	PUSH	DE
     947.  00:86CB  56                  	LD		 D, (HL)
     948.  00:86CC  CD E0 83            	CALL	pinta_tile_suelto
     949.  00:86CF                      	
     950.  00:86CF  01 00 18            	LD		BC, TILMAP
     951.  00:86D2  3E B6               	LD		 A, POSCALAVE2
     952.  00:86D4  CD 38 82            	CALL	suma_A_BC
     953.  00:86D7  E1                  	POP		HL
     954.  00:86D8  56                  	LD		 D, (HL)
     955.  00:86D9  C3 E0 83            	JP		pinta_tile_suelto	
     956.  00:86DC                      fin_flip_calavera_esqueletos:
     957.  00:86DC  00                  var_aux_calavera	DB	0;
     958.  00:86DD                      
     959.  00:86DD                      
     960.  00:86DD                      ;;=====================================================
     961.  00:86DD                      ;;ACTUALIZA_ESCENA_CALAVERA
     962.  00:86DD                      ;;=====================================================	
     963.  00:86DD                      ; función: 	modifica las siguiente calavera a mostrar
     964.  00:86DD                      ; entrada: 	
     965.  00:86DD                      ; salida: 	DE (iportante porque se usa fuera) y ESTRUCTURA_ESQUELETO.escena
     966.  00:86DD                      ; toca:		TODOS.... muy importante DE
     967.  00:86DD                      actualiza_escena_calavera:
     968.  00:86DD                      	;consulta_escena
     969.  00:86DD  DD 7E 05            	LD		 A, (IX + ESTRUCTURA_ESQUELETO.escena)
     970.  00:86E0  32 DC 86            	LD		(var_aux_calavera), A
     971.  00:86E3  B7                  	OR		 A
     972.  00:86E4  C2 E9 86            	JP		 NZ, .decrementa_escenas
     973.  00:86E7  3E 04               	LD		 A, RESETESCENAESQUEL
     974.  00:86E9                      .decrementa_escenas
     975.  00:86E9  3D                  	DEC		 A
     976.  00:86EA                      .fin_consulta_escena
     977.  00:86EA  DD 77 05            	LD		 (IX + ESTRUCTURA_ESQUELETO.escena), A
     978.  00:86ED                      	
     979.  00:86ED  21 0D AB            	LD		HL, lista_escenas_calavera
     980.  00:86F0  3A DC 86            	LD		 A, (var_aux_calavera)
     981.  00:86F3  CD 3E 82            	CALL	suma_A_HL
     982.  00:86F6                      	
     983.  00:86F6  54                  	LD		 D, H
     984.  00:86F7  5D                  	LD		 E, L
     985.  00:86F8                      fin_actualiza_escena_calavera:
     986.  00:86F8  C9                  	RET
     987.  00:86F9                      
     303   00:86F9                      	
     304   00:86F9                      	include "subr_puertas.asm"
       1.  00:86F9                      ;;=====================================================
       2.  00:86F9                      ;;SUBRUTINAS RELACIONADAS CON LAS PUERTAS
       3.  00:86F9                      ;;=====================================================
       4.  00:86F9                      
       5.  00:86F9                      
       6.  00:86F9                      ;;=====================================================
       7.  00:86F9                      ;;VARIABLES
       8.  00:86F9                      ;;=====================================================
       9.  00:86F9                      
      10.  00:86F9                      ;; arrays con mapa de tiles de las puertas
      11.  00:86F9                      array_puerta_arriba:
      12.  00:86F9  03 01 01 03         	DB	3,1,1,3
      13.  00:86FD  01 01 01 01         	DB	1,1,1,1
      14.  00:8701  01 01 01 01         	DB	1,1,1,1
      15.  00:8705  01 01 01 01         	DB	1,1,1,1
      16.  00:8709  01 01 01 01         	DB	1,1,1,1
      17.  00:870D                      
      18.  00:870D                      array_puerta_derecha:
      19.  00:870D  01 03 03            	DB	1,3,3
      20.  00:8710  01 01 03            	DB	1,1,3
      21.  00:8713  01 01 01            	DB	1,1,1
      22.  00:8716  01 01 01            	DB	1,1,1
      23.  00:8719  01 01 01            	DB	1,1,1
      24.  00:871C  02 01 01            	DB	2,1,1
      25.  00:871F  04 02 01            	DB	4,2,1
      26.  00:8722                      	
      27.  00:8722                      array_puerta_abajo:			
      28.  00:8722  01 01 01 01         	DB	1,1,1,1
      29.  00:8726                      
      30.  00:8726                      array_puerta_izquierda:
      31.  00:8726  03 03 01            	DB	3,3,1
      32.  00:8729  03 01 01            	DB	3,1,1
      33.  00:872C  01 01 01            	DB	1,1,1
      34.  00:872F  01 01 01            	DB	1,1,1
      35.  00:8732  01 01 01            	DB	1,1,1
      36.  00:8735  01 01 02            	DB	1,1,2
      37.  00:8738  01 02 04            	DB	1,2,4
      38.  00:873B                      
      39.  00:873B                      array_escalera:
      40.  00:873B                      	DB	5,5,5,5,5,5,5,5
      40.  00:873B  05 05 05 05 05 05 05 05 
      41.  00:8743                      	DB	5,0,0,0,1,1,1,5
      41.  00:8743  05 00 00 00 01 01 01 05 
      42.  00:874B                      	DB	5,0,0,0,1,1,1,5
      42.  00:874B  05 00 00 00 01 01 01 05 
      43.  00:8753                      	DB	5,0,0,6,6,6,6,5
      43.  00:8753  05 00 00 06 06 06 06 05 
      44.  00:875B                      	DB	5,0,6,6,6,6,6,5
      44.  00:875B  05 00 06 06 06 06 06 05 
      45.  00:8763                      	DB	5,6,6,6,6,6,6,5
      45.  00:8763  05 06 06 06 06 06 06 05 
      46.  00:876B                      
      47.  00:876B                      
      48.  00:876B                      
      49.  00:876B                      lista_puertas:
      50.  00:876B  00 (13)             puerta_arriba:		DS		ESTRUCTURA_PUERTA
      51.  00:8778  00 (13)             puerta_derecha:		DS		ESTRUCTURA_PUERTA
      52.  00:8785  00 (13)             puerta_abajo:		DS		ESTRUCTURA_PUERTA
      53.  00:8792  00 (13)             puerta_izquierda:	DS		ESTRUCTURA_PUERTA
      54.  00:879F                      
      55.  00:879F                      datos_puertas:
      56.  00:879F                      datos_escalera:
      57.  00:879F  00                  					DB		#00;0		; 0 no activa <>0 activo
      58.  00:87A0  80                  					DB		#80;128		;punto x de la puerta para cuando se dispare encima
      59.  00:87A1  30                  					DB		#30;48		;punto y de la puerta para cuando se dispare encima
      60.  00:87A2  20                  					DB		#20;32		;radio x de la puerta para cuando se dispare encima
      61.  00:87A3  18                  					DB		#18;24		;radio y de la puerta para cuando se dispare encima
      62.  00:87A4  1F 88               					DW		accion_puerta_arriba;función para acción de cada tipo de puerta
      63.  00:87A6  3B 87               					DW		array_escalera		;puntero al array con los tiles de las puertas
      64.  00:87A8  6C 18               					DW		TILMAP + POSESCALERA
      65.  00:87AA  06                  					DB		6			;alto/filas
      66.  00:87AB  08                  					DB		8			;ancho/columnas
      67.  00:87AC                      
      68.  00:87AC                      datos_puerta_arriba:
      69.  00:87AC  00                  					DB		#00;0		;0 no activa <>0 activo
      70.  00:87AD  80                  					DB		#80;128		;punto x de la puerta para cuando se dispare encima
      71.  00:87AE  34                  					DB		#34;52		;punto y de la puerta para cuando se dispare encima
      72.  00:87AF  10                  					DB		#10;16		;radio x de la puerta para cuando se dispare encima
      73.  00:87B0  14                  					DB		#14;20		;radio y de la puerta para cuando se dispare encima
      74.  00:87B1  1F 88               					DW		accion_puerta_arriba	;función para acción de cada tipo de puerta
      75.  00:87B3  F9 86               					DW		array_puerta_arriba		;puntero al array con los tiles de las puertas
      76.  00:87B5  8E 18               					DW		TILMAP + POSPUERARRI
      77.  00:87B7  05                  					DB		5			;alto/filas
      78.  00:87B8  04                  					DB		4			;ancho/columnas
      79.  00:87B9                      
      80.  00:87B9                      datos_puerta_derecha:
      81.  00:87B9  00                  					DB		#00;0		;0 no activa <>0 activo
      82.  00:87BA  EC                  					DB		#EC;236		;punto x de la puerta para cuando se dispare encima
      83.  00:87BB  54                  					DB		#54;84		;punto y de la puerta para cuando se dispare encima
      84.  00:87BC  0C                  					DB		#0C;12		;radio x de la puerta para cuando se dispare encima
      85.  00:87BD  14                  					DB		#14;20		;radio y de la puerta para cuando se dispare encima
      86.  00:87BE  1F 88               					DW		accion_puerta_arriba	;función para acción de cada tipo de puerta
      87.  00:87C0  0D 87               					DW		array_puerta_derecha	;puntero al array con los tiles de las puertas
      88.  00:87C2  FC 18               					DW		TILMAP + POSPUERDERE
      89.  00:87C4  07                  					DB		7			;alto/filas
      90.  00:87C5  03                  					DB		3			;ancho/columnas
      91.  00:87C6                      					
      92.  00:87C6                      datos_puerta_abajo:
      93.  00:87C6  00                  					DB		#00;0		;0 no activa <>0 activo
      94.  00:87C7  80                  					DB		#80;128		;punto x de la puerta para cuando se dispare encima
      95.  00:87C8  7C                  					DB		#7C;124		;punto y de la puerta para cuando se dispare encima
      96.  00:87C9  05                  					DB		#05;5		;radio x de la puerta para cuando se dispare encima
      97.  00:87CA  10                  					DB		#10;16		;radio y de la puerta para cuando se dispare encima
      98.  00:87CB  1F 88               					DW		accion_puerta_arriba	;función para acción de cada tipo de puerta
      99.  00:87CD  22 87               					DW		array_puerta_abajo		;puntero al array con los tiles de las puertas
     100.  00:87CF  EE 19               					DW		TILMAP + POSPUERABAJ
     101.  00:87D1  01                  					DB		1			;alto/filas
     102.  00:87D2  04                  					DB		4			;ancho/columnas
     103.  00:87D3                      
     104.  00:87D3                      datos_puerta_izquierda:
     105.  00:87D3  00                  					DB		#00;0		;0 no activa <>0 activo
     106.  00:87D4  18                  					DB		#18;24		;punto x de la puerta para cuando se dispare encima
     107.  00:87D5  54                  					DB		#54;84		;punto y de la puerta para cuando se dispare encima
     108.  00:87D6  0C                  					DB		#0C;12		;radio x de la puerta para cuando se dispare encima
     109.  00:87D7  14                  					DB		#14;20		;radio y de la puerta para cuando se dispare encima
     110.  00:87D8  1F 88               					DW		accion_puerta_arriba	;función para acción de cada tipo de puerta
     111.  00:87DA  26 87               					DW		array_puerta_izquierda	;puntero al array con los tiles de las puertas
     112.  00:87DC  E1 18               					DW		TILMAP + POSPUERIZQU
     113.  00:87DE  07                  					DB		7			;alto/filas
     114.  00:87DF  03                  					DB		3			;ancho/columnas
     115.  00:87E0                      
     116.  00:87E0                      
     117.  00:87E0                      
     118.  00:87E0                      ;;=====================================================
     119.  00:87E0                      ;;SUBRUTINAS
     120.  00:87E0                      ;;=====================================================
     121.  00:87E0                      
     122.  00:87E0                      
     123.  00:87E0                      ;;=====================================================
     124.  00:87E0                      ;;INICIALIZA_PUERTAS
     125.  00:87E0                      ;;=====================================================	
     126.  00:87E0                      ; función: 	inicializa las variables de estructuras de ayuda del array lista_puertas
     127.  00:87E0                      ; entrada: 	*********************datos_delasdistintasayudas, variable estructura_ayuda_ayudaquesea
     128.  00:87E0                      ; salida: 	lista_ayudas
     129.  00:87E0                      ; toca:		-
     130.  00:87E0                      inicializa_puertas:
     131.  00:87E0  E5                  	PUSH	HL
     132.  00:87E1  C5                  	PUSH	BC
     133.  00:87E2  D5                  	PUSH	DE
     134.  00:87E3                      	
     135.  00:87E3                      	;inicializa puerta arriba
     136.  00:87E3  3A BD A9            	LD		 A, (prota_pos_mapy)
     137.  00:87E6  FE 06               	CP		 6
     138.  00:87E8  CA F1 87            	JP		 Z,.pinta_escalera			;de tener que pintar algo arriba, se pinta escalera (fila 6) o puerta (fila <> 6)
     139.  00:87EB  21 AC 87            		LD		HL, datos_puerta_arriba	;origen
     140.  00:87EE  C3 F4 87            		JP		.cotinuamos_pintando_escalera_arriba
     141.  00:87F1                      .pinta_escalera
     142.  00:87F1  21 9F 87            		LD		HL, datos_escalera		;origen
     143.  00:87F4                      .cotinuamos_pintando_escalera_arriba
     144.  00:87F4  11 6B 87            	LD		DE, puerta_arriba			;destino
     145.  00:87F7  CD 19 88            	CALL	carga_datos_puerta
     146.  00:87FA                      	
     147.  00:87FA                      	;inicializa puerta derecha
     148.  00:87FA  21 B9 87            	LD		HL, datos_puerta_derecha	;origen
     149.  00:87FD  11 78 87            	LD		DE, puerta_derecha			;destino
     150.  00:8800  CD 19 88            	CALL	carga_datos_puerta
     151.  00:8803                      	
     152.  00:8803                      	;inicializa puerta abajo
     153.  00:8803  21 C6 87            	LD		HL, datos_puerta_abajo		;origen
     154.  00:8806  11 85 87            	LD		DE, puerta_abajo			;destino
     155.  00:8809  CD 19 88            	CALL	carga_datos_puerta
     156.  00:880C                      	
     157.  00:880C                      	;inicializa puerta izquierda
     158.  00:880C  21 D3 87            	LD		HL, datos_puerta_izquierda	;origen
     159.  00:880F  11 92 87            	LD		DE, puerta_izquierda		;destino
     160.  00:8812  CD 19 88            	CALL	carga_datos_puerta
     161.  00:8815                      	
     162.  00:8815  D1                  	POP		DE
     163.  00:8816  C1                  	POP		BC
     164.  00:8817  E1                  	POP		HL
     165.  00:8818                      fin_inicializa_puertas:
     166.  00:8818  C9                  	RET
     167.  00:8819                      
     168.  00:8819                      
     169.  00:8819                      
     170.  00:8819                      ;;=====================================================
     171.  00:8819                      ;;CARGA_DATOS_PUERTA
     172.  00:8819                      ;;=====================================================	
     173.  00:8819                      ; función: 	carga los datos de la puerta de una variable con los datos de la puerta
     174.  00:8819                      ; entrada
     175.  00:8819                      ;  hl: origen de datos
     176.  00:8819                      ;  de: destino de datos
     177.  00:8819                      ; salida: 	-
     178.  00:8819                      ; toca:		HL, DE, BC
     179.  00:8819                      carga_datos_puerta:
     180.  00:8819  01 0D 00            	LD		BC, ESTRUCTURA_PUERTA ;bytes a mover (el nombre de la estructura equivale al tamaño de la estructura en bytes)
     181.  00:881C  ED B0               	LDIR
     182.  00:881E                      fin_carga_datos_puerta:
     183.  00:881E  C9                  	RET
     184.  00:881F                      
     185.  00:881F                      ;;=====================================================
     186.  00:881F                      ;;ACCION_PUERTA_ARRIBA
     187.  00:881F                      ;;=====================================================	
     188.  00:881F                      ; función: 	
     189.  00:881F                      ; entrada: 	
     190.  00:881F                      ; salida: 	
     191.  00:881F                      accion_puerta_arriba:
     192.  00:881F  21 BD A9            	LD		 HL, prota_pos_mapy
     193.  00:8822  34                  	INC		 (HL)
     194.  00:8823                      
     195.  00:8823  CD 26 82            	CALL	cambio_habitacion
     196.  00:8826                      fin_accion_puerta_arriba:
     197.  00:8826  C9                  	RET
     198.  00:8827                      
     199.  00:8827                      
     200.  00:8827                      ;;=====================================================
     201.  00:8827                      ;;ACCION_PUERTA_DERECHA
     202.  00:8827                      ;;=====================================================	
     203.  00:8827                      ; función: 	
     204.  00:8827                      ; entrada: 	
     205.  00:8827                      ; salida: 	
     206.  00:8827                      accion_puerta_derecha:
     207.  00:8827  21 BC A9            	LD		 HL, prota_pos_mapx
     208.  00:882A  34                  	INC		 (HL)
     209.  00:882B                      
     210.  00:882B  CD 26 82            	CALL	cambio_habitacion
     211.  00:882E                      fin_accion_puerta_derecha:
     212.  00:882E  C9                  	RET
     213.  00:882F                      	
     214.  00:882F                      
     215.  00:882F                      ;;=====================================================
     216.  00:882F                      ;;ACCION_PUERTA_ABAJO
     217.  00:882F                      ;;=====================================================	
     218.  00:882F                      ; función: 	
     219.  00:882F                      ; entrada: 	
     220.  00:882F                      ; salida: 	
     221.  00:882F                      accion_puerta_abajo:
     222.  00:882F                      
     223.  00:882F                      ;* examina si es la primera habitación para efecto de retirarse del juego
     224.  00:882F                      
     225.  00:882F  3A BD A9            	LD		 A, (prota_pos_mapy)
     226.  00:8832  B7                  	OR		 A
     227.  00:8833  20 04               	JR		NZ, .decrementa_solo_habitacion
     228.  00:8835                      .decrementa_nivel
     229.  00:8835  2A B9 A9            	LD		HL, (prota_nivel)
     230.  00:8838  2B                  	DEC		HL
     231.  00:8839                      .decrementa_solo_habitacion
     232.  00:8839  21 BD A9            	LD		HL, prota_pos_mapy
     233.  00:883C  35                  	DEC		(HL)
     234.  00:883D                      
     235.  00:883D  CD 26 82            	CALL	cambio_habitacion
     236.  00:8840                      fin_accion_puerta_abajo:
     237.  00:8840  C9                  	RET
     238.  00:8841                      	
     239.  00:8841                      	
     240.  00:8841                      ;;=====================================================
     241.  00:8841                      ;;ACCION_PUERTA_IZQUIERDA
     242.  00:8841                      ;;=====================================================	
     243.  00:8841                      ; función: 	
     244.  00:8841                      ; entrada: 	
     245.  00:8841                      ; salida: 	
     246.  00:8841                      accion_puerta_izquierda:
     247.  00:8841  21 BC A9            	LD		 HL, prota_pos_mapx
     248.  00:8844  35                  	DEC		 (HL)
     249.  00:8845                      
     250.  00:8845  CD 26 82            	CALL	cambio_habitacion
     251.  00:8848                      fin_accion_puerta_izquierda:
     252.  00:8848  C9                  	RET
     253.  00:8849                      	
     254.  00:8849                      
     255.  00:8849                      ;;=====================================================
     256.  00:8849                      ;;PINTA_PUERTAS
     257.  00:8849                      ;;=====================================================	
     258.  00:8849                      ; función: 	examina A y mira si tiene que pintar puertas de los lados, arriba o abrajo o las escaleras (o no)
     259.  00:8849                      ; entrada: 	habitacion_actual 1 escalera 1 puerta arriba 1 pu der 1 pu aba 1 pu izq (si es 0 pinta pared)
     260.  00:8849                      ; salida: 	-
     261.  00:8849                      ; toca:		todo
     262.  00:8849                      pinta_puertas:
     263.  00:8849  CD 7D 82            	CALL	pinta_parte_superior_pantalla	;pinta pasillo y paredes
     264.  00:884C                      
     265.  00:884C  CD B7 81            	CALL	localiza_info_habitacion	;busca qué puertas debe pintar y lo mete en habitación_actual
     266.  00:884F                      	
     267.  00:884F  3A 8B A6            	LD		 A, (habitacion_actual)
     268.  00:8852  CB 5F               	BIT		 3, A
     269.  00:8854  C4 7A 88            	CALL	nz, pinta_puerta_arr		;si es de la fila 7 los datos de la pueta de arriba serán los de una escalera
     270.  00:8857                      
     271.  00:8857  3A 8B A6            	LD		 A, (habitacion_actual)
     272.  00:885A  CB 57               	BIT		 2, A
     273.  00:885C  C4 84 88            	CALL	nz, pinta_puerta_der
     274.  00:885F                      
     275.  00:885F  3A 8B A6            	LD		 A, (habitacion_actual)
     276.  00:8862  CB 4F               	BIT		 1, A
     277.  00:8864  C4 70 88            	CALL	nz, pinta_puerta_aba
     278.  00:8867                      
     279.  00:8867  3A 8B A6            	LD		 A, (habitacion_actual)
     280.  00:886A  CB 47               	BIT		 0, A
     281.  00:886C  C4 8E 88            	CALL	nz, pinta_puerta_izq
     282.  00:886F                      fin_pinta_puertas:
     283.  00:886F  C9                  	RET
     284.  00:8870                      
     285.  00:8870                      
     286.  00:8870                      ;;=====================================================
     287.  00:8870                      ;;PINTA_PUERTA_ABA
     288.  00:8870                      ;;=====================================================	
     289.  00:8870                      ; función: 	pinta la puerta de abajo
     290.  00:8870                      ; entrada: 	puerta_abajo
     291.  00:8870                      ; salida: 	-
     292.  00:8870                      ; toca:		A, HL,BC, DE
     293.  00:8870                      pinta_puerta_aba:
     294.  00:8870  DD 21 85 87         	LD		IX, puerta_abajo
     295.  00:8874  CD 98 88            	CALL	actualiza_variables_pinta_array
     296.  00:8877                      		
     297.  00:8877  C3 37 85            	JP		pinta_array
     298.  00:887A                      fin_pinta_puerta_aba:
     299.  00:887A                      
     300.  00:887A                      
     301.  00:887A                      ;;=====================================================
     302.  00:887A                      ;;PINTA_PUERTA_ARR
     303.  00:887A                      ;;=====================================================	
     304.  00:887A                      ; función: 	pinta la puerta de arriba
     305.  00:887A                      ; entrada: 	puerta_arriba
     306.  00:887A                      ; salida: 	-
     307.  00:887A                      ; toca:		IX
     308.  00:887A                      pinta_puerta_arr:
     309.  00:887A  DD 21 6B 87         	LD		IX, puerta_arriba
     310.  00:887E  CD 98 88            	CALL	actualiza_variables_pinta_array
     311.  00:8881                      	
     312.  00:8881  C3 37 85            	JP		pinta_array
     313.  00:8884                      fin_pinta_puerta_arr:
     314.  00:8884                      
     315.  00:8884                      
     316.  00:8884                      ;;=====================================================
     317.  00:8884                      ;;PINTA_PUERTA_DER
     318.  00:8884                      ;;=====================================================	
     319.  00:8884                      ; función: 	pinta la puerta de la derecha
     320.  00:8884                      ; entrada: 	puerta_derecha
     321.  00:8884                      ; salida: 	-
     322.  00:8884                      ; toca:		HL,BC, DE
     323.  00:8884                      pinta_puerta_der:
     324.  00:8884  DD 21 78 87         	LD		IX, puerta_derecha
     325.  00:8888  CD 98 88            	CALL	actualiza_variables_pinta_array
     326.  00:888B                      	
     327.  00:888B  C3 37 85            	JP		pinta_array
     328.  00:888E                      fin_pinta_puerta_der:
     329.  00:888E                      
     330.  00:888E                      	
     331.  00:888E                      ;;=====================================================
     332.  00:888E                      ;;PINTA_PUERTA_IZQ
     333.  00:888E                      ;;=====================================================	
     334.  00:888E                      ; función: 	pinta la puerta de la izquierda
     335.  00:888E                      ; entrada: 	puerta_izquierda
     336.  00:888E                      ; salida: 	-
     337.  00:888E                      ; toca:		HL,BC, DE
     338.  00:888E                      pinta_puerta_izq:
     339.  00:888E  DD 21 92 87         	LD		IX, puerta_izquierda
     340.  00:8892  CD 98 88            	CALL	actualiza_variables_pinta_array
     341.  00:8895                      	
     342.  00:8895  C3 37 85            	JP		pinta_array
     343.  00:8898                      fin_pinta_puerta_izq:
     344.  00:8898                      
     345.  00:8898                      
     346.  00:8898                      ;;=====================================================
     347.  00:8898                      ;;FIN_ACTUALIZA_VARIABLES_PINTA_ARRAY
     348.  00:8898                      ;;=====================================================	
     349.  00:8898                      ; función: 	como el código es el mismo en esta subrutia se actualizan los valores de wordaux2, wordaux1, byteaux1, byteaux2
     350.  00:8898                      ; entrada: 	IX apuntando a la estructura de una puerta
     351.  00:8898                      ; salida: 	-
     352.  00:8898                      ; toca:		A,HL,BC, DE
     353.  00:8898                      actualiza_variables_pinta_array:
     354.  00:8898  DD 6E 07            	LD		 L, (IX + ESTRUCTURA_PUERTA.tiles_puerta)	;guardo puntero al array a pintar (como pasar por referencia)
     355.  00:889B  DD 66 08            	LD		 H, (IX + ESTRUCTURA_PUERTA.tiles_puerta + 1)
     356.  00:889E  22 79 85            	LD		(wordaux2), HL						;en la variable wordaux2
     357.  00:88A1                      	
     358.  00:88A1  DD 6E 09            	LD		 L, (IX + ESTRUCTURA_PUERTA.pos_en_tilemap)	;guardo puntero al array a pintar (como pasar por referencia)
     359.  00:88A4  DD 66 0A            	LD		 H, (IX + ESTRUCTURA_PUERTA.pos_en_tilemap + 1)
     360.  00:88A7  22 77 85            	LD		(wordaux1), HL						;guarda valor pos tilemap en wordaux1
     361.  00:88AA                      	
     362.  00:88AA  DD 7E 0B            	LD		 A, (IX + ESTRUCTURA_PUERTA.alto)	;nº de filas
     363.  00:88AD  32 7B 85            	LD		(byteaux1), A
     364.  00:88B0                      	
     365.  00:88B0  DD 7E 0C            	LD		 A, (IX + ESTRUCTURA_PUERTA.ancho)	;nº de columnas
     366.  00:88B3  32 7C 85            	LD		(byteaux2), A
     367.  00:88B6                      fin_actualiza_variables_pinta_array:
     368.  00:88B6  C9                  	RET
     369.  00:88B7                      
     370.  00:88B7                      
     371.  00:88B7                      ;;=====================================================
     372.  00:88B7                      ;;ACTIVA_DESACTIVA_PUERTAS
     373.  00:88B7                      ;;=====================================================	
     374.  00:88B7                      ; función: 	coloca todas las puertas que haya pintadas en la habitación como activas o inactivas según B
     375.  00:88B7                      ; entrada: 	IX apuntando a la estructura de una puerta, habitacion_actual, B con 0 para desactivar las puertas indicadas en habitación actual o 1 para activarlas
     376.  00:88B7                      ; salida: 	-
     377.  00:88B7                      ; toca:		A, IX, B
     378.  00:88B7                      activa_desactiva_puertas:
     379.  00:88B7                      .mira_puerta_arriba	
     380.  00:88B7  3A 8B A6            	LD		 A, (habitacion_actual)
     381.  00:88BA  CB 5F               	BIT		 3, A
     382.  00:88BC  CA C6 88            	JP		 Z, .mira_puerta_derecha
     383.  00:88BF  DD 21 6B 87         	LD		IX, puerta_arriba
     384.  00:88C3  DD 70 00            	LD		(IX + ESTRUCTURA_PUERTA.activa), B
     385.  00:88C6                      
     386.  00:88C6                      .mira_puerta_derecha
     387.  00:88C6  3A 8B A6            	LD		 A, (habitacion_actual)
     388.  00:88C9  CB 57               	BIT		 2, A
     389.  00:88CB  CA D5 88            	JP		 Z, .mira_puerta_abajo
     390.  00:88CE  DD 21 78 87         	LD		IX, puerta_derecha
     391.  00:88D2  DD 70 00            	LD		(IX + ESTRUCTURA_PUERTA.activa), B
     392.  00:88D5                      	
     393.  00:88D5                      .mira_puerta_abajo
     394.  00:88D5  3A 8B A6            	LD		 A, (habitacion_actual)
     395.  00:88D8  CB 4F               	BIT		 1, A
     396.  00:88DA  CA E4 88            	JP		 Z, .mira_puerta_izquierda
     397.  00:88DD  DD 21 85 87         	LD		IX, puerta_abajo
     398.  00:88E1  DD 70 00            	LD		(IX + ESTRUCTURA_PUERTA.activa), B
     399.  00:88E4                      
     400.  00:88E4                      .mira_puerta_izquierda
     401.  00:88E4  3A 8B A6            	LD		 A, (habitacion_actual)
     402.  00:88E7  CB 47               	BIT		 0, A
     403.  00:88E9  CA F3 88            	JP		 Z, fin_activa_desactiva_puertas
     404.  00:88EC  DD 21 92 87         	LD		IX, puerta_izquierda
     405.  00:88F0  DD 70 00            	LD		(IX + ESTRUCTURA_PUERTA.activa), B
     406.  00:88F3                      fin_activa_desactiva_puertas:
     407.  00:88F3  C9                  	RET
     408.  00:88F4                      
     409.  00:88F4                      
     410.  00:88F4                      
     411.  00:88F4                      
     412.  00:88F4                      
     305   00:88F4                      	
     306   00:88F4                      	include "subr_sprites.asm"
       1.  00:88F4                      
       2.  00:88F4                      ;;=====================================================
       3.  00:88F4                      ;;SUBRUTINAS ENCARGADAS DE MANEJAR LOS SPRITES
       4.  00:88F4                      ;;=====================================================	
       5.  00:88F4                      
       6.  00:88F4                      
       7.  00:88F4                      ;; PREGUNTAR SI A FERNANDO SI ES MEJOR USAR LISTAS O ALGO PARA AHORRAR CÓDIGO
       8.  00:88F4                      
       9.  00:88F4                      
      10.  00:88F4                      
      11.  00:88F4                      
      12.  00:88F4                      ;;=====================================================
      13.  00:88F4                      ;;CARGA_PATRONES_SPRITES_NIVEL
      14.  00:88F4                      ;;=====================================================	
      15.  00:88F4                      ; función: 	examina el nivel y carga los patrones específicos necesarios
      16.  00:88F4                      ; entrada: 	-
      17.  00:88F4                      ; salida: 	-
      18.  00:88F4                      ; toca: 	-
      19.  00:88F4                      carga_patrones_sprites_nivel:
      20.  00:88F4  CD F8 88            	CALL 	carga_patrones_nivel_comunes
      21.  00:88F7                      	
      22.  00:88F7  C9                  	RET		;*********************
      23.  00:88F8                      	
      24.  00:88F8                      	
      25.  00:88F8                      	;POR AHORA ES TODO COMÚN ... CUANDO EL JUGADOR SE MUEVA LOS PATRONES SERÁN DEPENDIENDO DEL NIVEL
      26.  00:88F8                      	; O NO Y LO QUE SE HACE ES PERSONALIZAR LA PANTALLA USANDO LOS MISMOS PATRONES PERO PINTANDO DISTINTOS
      27.  00:88F8                      	; EN DISTINTOS SITIOS SEGÚN NIVEL
      28.  00:88F8                      	
      29.  00:88F8                      	;~ ;carga patrones no comunes
      30.  00:88F8                      	;~ LD		 A, (prota_nivel)
      31.  00:88F8                      	;~ OR		 A
      32.  00:88F8                      	;~ JP		 Z, carga_patrones_sprites_nivel donde esté el prota
      33.  00:88F8                      fin_carga_patrones_sprites_nivel:
      34.  00:88F8                      
      35.  00:88F8                      
      36.  00:88F8                      ;;=====================================================
      37.  00:88F8                      ;;CARGA_PATRONES_SPRITES_NIVEL_COMUNES
      38.  00:88F8                      ;;=====================================================	
      39.  00:88F8                      ; función: 	carga los patrones comunes en todos los niveles
      40.  00:88F8                      ; entrada: 	-
      41.  00:88F8                      ; salida: 	-
      42.  00:88F8                      ; toca: 	-
      43.  00:88F8                      carga_patrones_nivel_comunes:	
      44.  00:88F8  21 0B 9D            	LD		HL, sprites_comunes
      45.  00:88FB  11 00 38            	LD		DE, SPRTBL
      46.  00:88FE  01 C0 00            	LD		BC, fin_sprites_comunes-sprites_comunes
      47.  00:8901  C3 5C 00            	JP		LDIRVM
      48.  00:8904                      fin_carga_patrones_nivel_comunes:
      49.  00:8904                      
      50.  00:8904                      
      51.  00:8904                      ;;=====================================================
      52.  00:8904                      ;;CARGA_PATRONES_SPRITES_NIVEL1
      53.  00:8904                      ;;=====================================================	
      54.  00:8904                      ; función: 	copia los patrones de los sprites que e van a usar en el nivel 1 en vram
      55.  00:8904                      ; entrada: 	-
      56.  00:8904                      ; salida: 	-
      57.  00:8904                      ; toca: 	-
      58.  00:8904                      carga_patrones_sprites_nivel1:
      59.  00:8904                      
      60.  00:8904                      	;~ ;sprite sprite_reliquia
      61.  00:8904                      	;~ LD		HL,sprite_reliquia
      62.  00:8904                      	;~ LD		DE,#3880
      63.  00:8904                      	;~ LD		BC,32				;32 bytes (sprites de 2 x 2)
      64.  00:8904                      	;~ CALL	LDIRVM
      65.  00:8904                      
      66.  00:8904                      fin_carga_patrones_sprites:
      67.  00:8904  C9                  	RET
      68.  00:8905                      
      69.  00:8905                      
      70.  00:8905                      ;;=====================================================
      71.  00:8905                      ;;ACTUALIZA_ARRAY_SPRITES_VRAM
      72.  00:8905                      ;;=====================================================	
      73.  00:8905                      ; función: 	copia el array con los valores de los sprites (pos, color, plano) en VRAM
      74.  00:8905                      ; entrada: 	-
      75.  00:8905                      ; salida: 	-
      76.  00:8905                      ; toca: 	todos los registros. Como me interesa la velocidad, si necesito copiar de algo lo hago fuera
      77.  00:8905                      render_sprites:
      78.  00:8905                      	;volcando el array con toda la info de los sprites a la zona de atributos de sprites
      79.  00:8905  21 11 AB            	LD		HL,array_sprites
      80.  00:8908  11 00 1B            	LD		DE,SPRART
      81.  00:890B  01 80 00            	LD		BC,4 * 32				;32 sprites x 4 bytes controlando el sprite (Y, X, plano, color)
      82.  00:890E  C3 5C 00            	JP		LDIRVM
      83.  00:8911                      fin_actualiza_array_sprites_vram:
      84.  00:8911                      
      85.  00:8911                      
      86.  00:8911                      ;;=====================================================
      87.  00:8911                      ;;VUELCA_RESULTADO_PUNTOMIRA_ARRAY
      88.  00:8911                      ;;=====================================================	
      89.  00:8911                      ; función: 	coloca los valores del punto de mira en la variable array_sprites para ser volcados en VRAM
      90.  00:8911                      ; entrada: 	array_sprites_pm, prota.XXXXX
      91.  00:8911                      ; salida: 	-
      92.  00:8911                      ; toca: 	-
      93.  00:8911                      vuelca_resultado_puntomira_array:
      94.  00:8911  DD 21 11 AB         	LD		IX, array_sprites_pm
      95.  00:8915                      	;posición y de los dos sprites que conforman el punto de mira
      96.  00:8915  3A AA A9            	LD		 A, (prota.posy)
      97.  00:8918  DD 77 00            	LD		(IX  ), A
      98.  00:891B  DD 77 04            	LD		(IX+4), A
      99.  00:891E                      	;posición x de los dos sprites que conforman el punto de mira
     100.  00:891E  3A A9 A9            	LD		 A, (prota.posx)
     101.  00:8921  DD 77 01            	LD		(IX+1), A
     102.  00:8924  DD 77 05            	LD		(IX+5), A
     103.  00:8927                      	;plano
     104.  00:8927  DD 36 02 00         	LD		(IX+2), 0
     105.  00:892B  DD 36 06 04         	LD		(IX+6), 4	;al ser sprites de 16x16 hay que ir de 4 en 4
     106.  00:892F                      	;color
     107.  00:892F  3A AB A9            	LD		 A, (prota.escena)
     108.  00:8932  B7                  	OR		 A
     109.  00:8933  C2 3F 89            	JP		NZ,.codigo_color_2
     110.  00:8936                      .codigo_color_1:
     111.  00:8936  DD 36 03 0F         	LD		(IX+3), COLBLANCO
     112.  00:893A  DD 36 07 08         	LD		(IX+7), COLROJO
     113.  00:893E  C9                  	RET
     114.  00:893F                      .codigo_color_2:
     115.  00:893F  DD 36 03 08         	LD		(IX+3), COLROJO
     116.  00:8943  DD 36 07 0F         	LD		(IX+7), COLBLANCO
     117.  00:8947  C9                  	RET
     118.  00:8948                      fin_vuelca_resultado_puntomira_array:
     119.  00:8948                      
     120.  00:8948                      
     121.  00:8948                      ;;=====================================================
     122.  00:8948                      ;;CHECK_PLAYER
     123.  00:8948                      ;;=====================================================	
     124.  00:8948                      ; función: 	MIRA EL CONTROL Y APLICA LA LOGICA DE MOVIMIENTO DEL PROTAGONISTA
     125.  00:8948                      ; entrada: 	-
     126.  00:8948                      ; salida: 	-
     127.  00:8948                      ; toca: 	A
     128.  00:8948                      check_player:
     129.  00:8948  CD EA 89            	CALL	update_controllers_status
     130.  00:894B  B7                  	OR		 A
     131.  00:894C  C8                  	RET		 Z						;si no se ha pulsado nada no se necesita mirar nada
     132.  00:894D                      
     133.  00:894D  CB 1F               	RR		 A
     134.  00:894F  DC 68 89            	CALL	 C, mueve_arriba
     135.  00:8952  CB 1F               	RR		 A
     136.  00:8954  DC 84 89            	CALL	 C, mueve_abajo
     137.  00:8957  CB 1F               	RR		 A
     138.  00:8959  DC 93 89            	CALL	 C, mueve_izquierda
     139.  00:895C  CB 1F               	RR		 A
     140.  00:895E  DC 75 89            	CALL	 C, mueve_derecha
     141.  00:8961                      	
     142.  00:8961                      	;zona para mirar disparo Recibe A que tendrá 0000 0 0 X-letra M X-espacio 
     143.  00:8961  CD A0 89            	CALL	mira_disparo
     144.  00:8964                      
     145.  00:8964  C3 11 89            	JP		vuelca_resultado_puntomira_array
     146.  00:8967                      f;in_check_player:
     147.  00:8967  C9                  	RET
     148.  00:8968                      
     307   00:8968                      	
     308   00:8968                      	include "subr_teclado_joy.asm"
       1.  00:8968                      ;;=====================================================
       2.  00:8968                      ;;SUBRUTINAS QUE CAPTURAN EL JOYSTICK Y TECLADO Y MUEVEN PUNTO DE MIRA
       3.  00:8968                      ;;=====================================================
       4.  00:8968                      
       5.  00:8968                      ;;=====================================================
       6.  00:8968                      ;;MUEVE_ARRIBA
       7.  00:8968                      ;;=====================================================	
       8.  00:8968                      ; función: 	decrementa y si se no sale de los límites el valor del punto de mira a la derecha
       9.  00:8968                      ; entrada: 	-
      10.  00:8968                      ; salida: 	-
      11.  00:8968                      ; toca: 	-
      12.  00:8968                      mueve_arriba:
      13.  00:8968  F5                  	PUSH		AF
      14.  00:8969                      	
      15.  00:8969  3A AA A9            	LD		 	 A, (prota.posy)
      16.  00:896C  3D                  	DEC			 A
      17.  00:896D  CA 73 89            	JP			 Z,.no_decrementa_y
      18.  00:8970  32 AA A9            	LD			(prota.posy), A
      19.  00:8973                      	
      20.  00:8973                      .no_decrementa_y:
      21.  00:8973  F1                  	POP			AF
      22.  00:8974                      fin_mueve_arriba:
      23.  00:8974  C9                  	RET
      24.  00:8975                      
      25.  00:8975                      
      26.  00:8975                      ;;=====================================================
      27.  00:8975                      ;;MUEVE_DERECHA
      28.  00:8975                      ;;=====================================================	
      29.  00:8975                      ; función: 	incrementa si se no sale de los límites el valor del punto de mira a la derecha
      30.  00:8975                      ; entrada: 	-
      31.  00:8975                      ; salida: 	-
      32.  00:8975                      ; toca: 	-
      33.  00:8975                      mueve_derecha:
      34.  00:8975  F5                  	PUSH		AF
      35.  00:8976                      	
      36.  00:8976  3A A9 A9            	LD		 	 A, (prota.posx)
      37.  00:8979  3C                  	INC			 A
      38.  00:897A  FE EF               	CP			 A, LIMPANTDER - 16
      39.  00:897C  CA 82 89            	JP			 Z, .no_incrementa_x
      40.  00:897F  32 A9 A9            	LD			(prota.posx), A
      41.  00:8982                      	
      42.  00:8982                      .no_incrementa_x:
      43.  00:8982  F1                  	POP			AF
      44.  00:8983                      fin_mueve_derecha:
      45.  00:8983  C9                  	RET
      46.  00:8984                      
      47.  00:8984                      
      48.  00:8984                      ;;=====================================================
      49.  00:8984                      ;;MUEVE_ABAJO
      50.  00:8984                      ;;=====================================================	
      51.  00:8984                      ; función: 	incrementa y si se no sale de los límites el valor del punto de mira abajo
      52.  00:8984                      ; entrada: 	-
      53.  00:8984                      ; salida: 	-
      54.  00:8984                      ; toca: 	-
      55.  00:8984                      mueve_abajo:
      56.  00:8984  F5                  	PUSH		AF
      57.  00:8985                      	
      58.  00:8985  3A AA A9            	LD		 	 A, (prota.posy)
      59.  00:8988  3C                  	INC			 A
      60.  00:8989  FE 70               	CP			 A, LIMPANTABA - 16
      61.  00:898B  CA 91 89            	JP			 Z,.no_incrementa_y
      62.  00:898E  32 AA A9            	LD			(prota.posy), A
      63.  00:8991                      	
      64.  00:8991                      .no_incrementa_y:
      65.  00:8991  F1                  	POP			AF
      66.  00:8992                      fin_mueve_abajo:
      67.  00:8992  C9                  	RET
      68.  00:8993                      	
      69.  00:8993                      	
      70.  00:8993                      ;;=====================================================
      71.  00:8993                      ;;MUEVE_IZQUIERDA
      72.  00:8993                      ;;=====================================================	
      73.  00:8993                      ; función: 	decrementa x si se no sale de los límites el valor del punto de mira a la izquierda
      74.  00:8993                      ; entrada: 	-
      75.  00:8993                      ; salida: 	-
      76.  00:8993                      ; toca: 	-
      77.  00:8993                      mueve_izquierda:
      78.  00:8993  F5                  	PUSH		AF
      79.  00:8994                      	
      80.  00:8994  3A A9 A9            	LD		 	 A, (prota.posx)
      81.  00:8997  3D                  	DEC			 A
      82.  00:8998                      ;	CP			 A, LIMPANTIZQ
      83.  00:8998  CA 9E 89            	JP			 Z,.no_decrementa_x
      84.  00:899B  32 A9 A9            	LD			(prota.posx), A
      85.  00:899E                      	
      86.  00:899E                      .no_decrementa_x:
      87.  00:899E  F1                  	POP			AF
      88.  00:899F                      fin_mueve_izquierda:
      89.  00:899F  C9                  	RET
      90.  00:89A0                      
      91.  00:89A0                      
      92.  00:89A0                      
      93.  00:89A0                      ;;=====================================================
      94.  00:89A0                      ;;MIRA_DISPARO
      95.  00:89A0                      ;;=====================================================	
      96.  00:89A0                      ; función: 	Mira si se ha pulsado alguno de los dos disparos
      97.  00:89A0                      ; entrada: 	A que tendrá 0000 0 0 X-letra M X-espacio 
      98.  00:89A0                      ; salida: 	-
      99.  00:89A0                      ; toca: 	A, B
     100.  00:89A0                      mira_disparo:
     101.  00:89A0                      .mira_boton_pulsado1:
     102.  00:89A0  CB 1F               	RR		 A						;preparo en el carry si se ha pulsado botón 1
     103.  00:89A2  D2 CE 89            	JP		 NC, .mira_boton_pulsado2					
     104.  00:89A5  F5                  	PUSH	AF						;copia A para usarlo después
     105.  00:89A6                      	;se ha pulsado barra o boton 1
     106.  00:89A6  3A AE A9            	LD		 A, (prota.cadencia)
     107.  00:89A9  B7                  	OR		 A
     108.  00:89AA  CA B8 89            	JP		 Z, .efectua_disparo	;toca efectuar disparo realmente porque se ha pulsado lo suficiente el disparo
     109.  00:89AD                      .no_efectua_disparo: ;IF
     110.  00:89AD  3D                  		DEC		 A
     111.  00:89AE  32 AE A9            		LD		(prota.cadencia), A	;resto cadencia hasta próximo disparo "real" (no automático por haber pulsado una tecla e ir demasiado rápido)
     112.  00:89B1  AF                  		XOR		 A 
     113.  00:89B2  32 AB A9            		LD		(prota.escena), A
     114.  00:89B5  C3 CD 89            		JP		.fin_mira_disparo1
     115.  00:89B8                      .efectua_disparo:	;ELSE
     116.  00:89B8                      		;cambio colores del sprite
     117.  00:89B8  3A AB A9            		LD		 A, (prota.escena)
     118.  00:89BB  2F                  		CPL		 
     119.  00:89BC  32 AB A9            		LD		(prota.escena), A
     120.  00:89BF                      		;reseteo cadencia para el próximo disparo
     121.  00:89BF  3E 04               		LD		 A, LIMCADENCIA				;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
     122.  00:89C1  32 AE A9            		LD		 (prota.cadencia), A		;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
     123.  00:89C4                      		
     124.  00:89C4                      		;ejecuto sonido						;; ajustar cadencia y que cuando el disparo sea efectivo se reseteen los colores
     125.  00:89C4  AF                  		XOR		 A
     126.  00:89C5  0E 01               		LD		 C, 1
     127.  00:89C7  CD 92 90            		CALL	ayFX_INIT
     128.  00:89CA                      		
     129.  00:89CA                      		;examino si el disparo le dió a algo activo
     130.  00:89CA  CD 48 80            		CALL	check_colisiones_objetos	;revisa las colisiones con puertas, ayudas y enemigos
     131.  00:89CD                      		
     132.  00:89CD                      .fin_mira_disparo1
     133.  00:89CD  F1                  	POP		AF
     134.  00:89CE                      
     135.  00:89CE                      .mira_boton_pulsado2:
     136.  00:89CE  CB 1F               	RR		 A
     137.  00:89D0  D0                  	RET		 NC
     138.  00:89D1                      	;se ha pulsado shift o boton 2
     139.  00:89D1                      	
     140.  00:89D1  3A BB A9            	LD		 A, (prota_reliquias)	;miro si le quedan reliquias
     141.  00:89D4  B7                  	OR		 A
     142.  00:89D5  C8                  	RET		 Z						;si no le quedan salgo ya
     143.  00:89D6                      	
     144.  00:89D6                      	;actuaciones si se usa la reliquia botón 2 o M y quedn reliquias.. (antes ya se puso el valor en A)
     145.  00:89D6  3A BB A9            	LD		A, (prota_reliquias)
     146.  00:89D9  3D                  	DEC		 A
     147.  00:89DA  32 BB A9            	LD		(prota_reliquias), A
     148.  00:89DD                      	
     149.  00:89DD  3E 01               	LD		 A, 1
     150.  00:89DF  0E 01               	LD		 C, 1
     151.  00:89E1  CD 92 90            	CALL	ayFX_INIT
     152.  00:89E4                      	
     153.  00:89E4  CD 1D 85            	CALL 	efecto_imagen_tira_reliquia
     154.  00:89E7                      	
     155.  00:89E7  C3 C5 83            	JP		pinta_reliquias
     156.  00:89EA                      fin_mira_disparo:
     157.  00:89EA                      ;	RET		
     158.  00:89EA                      
     159.  00:89EA                      
     160.  00:89EA                      ;;============================================================
     161.  00:89EA                      ;;Código de D. Fernando García (BitVision) (al que siempre le estaré agradecido)
     162.  00:89EA                      ;check_8th_keyboard_row
     163.  00:89EA                      ;read_joy_0
     164.  00:89EA                      ;check_8th_keyboard_row
     165.  00:89EA                      ;check_4th_keyboard_row
     166.  00:89EA                      ;;============================================================
     167.  00:89EA                      ;;  usa constantes:
     168.  00:89EA                      ;PSG_A  equ  0a0h  ;reg address
     169.  00:89EA                      ;PSG_W  equ  0a1h  ;reg data WR
     170.  00:89EA                      ;PSG_R  equ  0a2h  ;reg data
     171.  00:89EA                      
     172.  00:89EA                      ;;=====================================================
     173.  00:89EA                      ;;update_controllers_status
     174.  00:89EA                      ;;=====================================================	
     175.  00:89EA                      ;depends on the next rountine
     176.  00:89EA                      ;  returns
     177.  00:89EA                      ;  a - 0P2TRLDU
     178.  00:89EA                      
     179.  00:89EA                      update_controllers_status:
     180.  00:89EA  CD 35 8A                 call  check_8th_keyboard_row
     181.  00:89ED                      [4]  rrc    a
     181.  00:89ED  CB 0F CB 0F CB 0F CB 0F 
     182.  00:89F5  47                       ld    b,a    		;save for later  xxxTRDUL
     183.  00:89F6                      
     184.  00:89F6  E6 01                    and    #01    		;save L
     185.  00:89F8  CB 27                    sla    a
     186.  00:89FA  CB 27                    sla    a    		;now 00000L00
     187.  00:89FC  4F                       ld    c,a    		;save for later
     188.  00:89FD                      
     189.  00:89FD  78                       ld    a,b    		;again we've got xxxTRDUL. I am interested on leaving 000000DU on a
     190.  00:89FE  CB 3F                    srl    a
     191.  00:8A00  E6 03                    and    00000011b
     192.  00:8A02                      						;we've got 000000DU on a
     193.  00:8A02  B1                       or    c    		;now we've got 00000LDU
     194.  00:8A03  4F                       ld    c,a    		;save for later
     195.  00:8A04                      
     196.  00:8A04  78                       ld    a,b
     197.  00:8A05  E6 18                    and    00011000b 	;we've got 000TR000
     198.  00:8A07  B1                       or    c
     199.  00:8A08                           ;finally    000TRLDU
     200.  00:8A08                      
     201.  00:8A08                           ;and    00000100   ;preserve just
     202.  00:8A08  47                       ld    b,a    		;save for later
     203.  00:8A09  CD 43 8A                 call  check_4th_keyboard_row      ;check M & P
     204.  00:8A0C  F5                       push  af
     205.  00:8A0D  E6 04                    and    00000100b	;filter just M
     206.  00:8A0F  87                       add    a
     207.  00:8A10  87                       add    a
     208.  00:8A11  87                       add    a           ;shift 3th to 6th bit
     209.  00:8A12  B0                       or    b           	;merge with previous
     210.  00:8A13  47                       ld    b,a
     211.  00:8A14                      
     212.  00:8A14  CD 21 8A                 call  read_joy_0
     213.  00:8A17  E6 3F                    and    00111111b  	;we want just 002TRLDU  from joystick    (2 is second trigger)
     214.  00:8A19  B0                       or    b      		;added 000TRLDU from keyboard
     215.  00:8A1A  47                       ld    b,a      	;save for later
     216.  00:8A1B  F1                       pop    af      	; let's check on P
     217.  00:8A1C                      
     218.  00:8A1C  E6 20                    and    00100000b
     219.  00:8A1E  87                       add    a      		;P status on 6th bit  ... so 0P2TRLDU
     220.  00:8A1F  B0                       or    b
     221.  00:8A20                      
     222.  00:8A20  C9                       ret
     223.  00:8A21                      
     224.  00:8A21                      
     225.  00:8A21                      ;ret
     226.  00:8A21                      ;  a -            xx2TRLDU
     227.  00:8A21                      read_joy_0:
     228.  00:8A21  F3                         di
     229.  00:8A22  3E 0F                      ld    a,15
     230.  00:8A24  D3 A0                      out    [PSG_A],a
     231.  00:8A26  DB A2                      in    a,[PSG_R]
     232.  00:8A28  E6 BF                      and    10111111b        ;joy0
     233.  00:8A2A                      
     234.  00:8A2A  D3 A1                      out    [PSG_W],a        ;set joy0
     235.  00:8A2C                      
     236.  00:8A2C  3E 0E                      ld    a,14
     237.  00:8A2E  D3 A0                      out    [PSG_A],a
     238.  00:8A30  DB A2                      in    a,[PSG_R]
     239.  00:8A32                      
     240.  00:8A32  FB                         ei
     241.  00:8A33  2F                         cpl
     242.  00:8A34                      
     243.  00:8A34  C9                         ret
     244.  00:8A35                      
     245.  00:8A35                      
     246.  00:8A35                      ;ret
     247.  00:8A35                      ;  a -      RDULxxxT
     248.  00:8A35                      check_8th_keyboard_row:
     249.  00:8A35  F3                       di
     250.  00:8A36  DB AA                    in    a,(#aa)
     251.  00:8A38  E6 F0                    and    #f0
     252.  00:8A3A  F6 08                    or    8
     253.  00:8A3C  D3 AA                    out    (#aa),a
     254.  00:8A3E  DB A9                    in    a,(#a9)
     255.  00:8A40  FB                       ei
     256.  00:8A41  2F                       cpl
     257.  00:8A42                      
     258.  00:8A42  C9                       ret
     259.  00:8A43                      
     260.  00:8A43                      
     261.  00:8A43                      ;ret
     262.  00:8A43                      ;  a -      xxxxxMxx
     263.  00:8A43                      check_4th_keyboard_row:
     264.  00:8A43  F3                       di
     265.  00:8A44  DB AA                    in    a,(#aa)
     266.  00:8A46  E6 F0                    and    #f0
     267.  00:8A48  F6 04                    or    4
     268.  00:8A4A  D3 AA                    out    (#aa),a
     269.  00:8A4C  DB A9                    in    a,(#a9)
     270.  00:8A4E  FB                       ei
     271.  00:8A4F  2F                       cpl
     272.  00:8A50                      
     273.  00:8A50  C9                       ret
     274.  00:8A51                      
     275.  00:8A51                      ;--------------------------------------------
     276.  00:8A51                      
     277.  00:8A51                      
     278.  00:8A51                      
     279.  00:8A51                      
     280.  00:8A51                      
     281.  00:8A51                      
     282.  00:8A51                      
     283.  00:8A51                      
     309   00:8A51                      	
     310   00:8A51                      	include "subr_sonido.asm"
       1.  00:8A51                      
       2.  00:8A51                      ;;=====================================================
       3.  00:8A51                      ;;SUBRUTINAS PARA SONIDOS
       4.  00:8A51                      ;;=====================================================	
       5.  00:8A51                      
       6.  00:8A51                      ;;=====================================================
       7.  00:8A51                      ;;INICIALIZA_REPLAYER_EFECTOS_INTERRUPCIONES
       8.  00:8A51                      ;;=====================================================	
       9.  00:8A51                      ; función: 	inicializa: replayer de música, player de efectos e interrupciones
      10.  00:8A51                      ; entrada: 	-
      11.  00:8A51                      ; salida: 	-
      12.  00:8A51                      ; toca: 	HL, A
      13.  00:8A51                      inicializa_replayer_efectos_interrupciones:
      14.  00:8A51  F3                  	DI
      15.  00:8A52                      
      16.  00:8A52                      	;inicializacion de replayer musical
      17.  00:8A52  21 FA 90            	LD		HL, song-99			; hl <- initial address of module - 99
      18.  00:8A55  CD 91 8A            	CALL	PT3_INIT			; Inits PT3 player
      19.  00:8A58                      		
      20.  00:8A58                      	;inicializacion del reproductor de efectos sonoros
      21.  00:8A58  21 C5 9A            	LD		HL, sfx_bank
      22.  00:8A5B  CD 80 90            	CALL	ayFX_SETUP
      23.  00:8A5E                      	
      24.  00:8A5E                      	;Engancha nuestra rutina de servicio al gancha que deja preparado la BIOS cuando se termina de pintar la pantalla (50 o 60 veces por segundo)
      25.  00:8A5E  3E C3               	LD		A, #C3
      26.  00:8A60  32 9F FD            	LD		[H.TIMI], A
      27.  00:8A63  21 6B 8A            	LD		HL, subrutina_isr
      28.  00:8A66  22 A0 FD            	LD		[H.TIMI+1], HL
      29.  00:8A69                      	
      30.  00:8A69  FB                  	EI		;optimizacion:
      31.  00:8A6A                      			;piensa que las dos ultimas lineas podrian haber sido: 
      32.  00:8A6A                      			;ei						;primero ei
      33.  00:8A6A                      			;ld		[H.TIMI+1],hl	;luego este ld
      34.  00:8A6A                      									;PENSAR (y consultar ) PORQUE!!!!
      35.  00:8A6A                      fin_inicializa_replayer_efectos_interrupciones:
      36.  00:8A6A  C9                  	RET
      37.  00:8A6B                      
      38.  00:8A6B                      
      39.  00:8A6B                      
      40.  00:8A6B                      ;;=====================================================
      41.  00:8A6B                      ;;NUESTRA_ISR
      42.  00:8A6B                      ;;=====================================================	
      43.  00:8A6B                      ; función: 	envía datos al PSG + toca un trozo de música + toca trozo de 
      44.  00:8A6B                      ; entrada: 	-
      45.  00:8A6B                      ; salida: 	-
      46.  00:8A6B                      ; toca: 	HL, A
      47.  00:8A6B                      subrutina_isr:
      48.  00:8A6B  CD D6 8F            	CALL	PT3_ROUT			;envia los datos a los registros del PSG
      49.  00:8A6E  CD DE 8E            	CALL	PT3_PLAY			;calcula el siguiente 'trocito' de musica que sera enviado al proxima vez
      50.  00:8A71  C3 C8 90            	JP		ayFX_PLAY			;calcula el siguiente 'trocito' de efecto especial de sonido que sera enviado la proxima vez
      51.  00:8A74                      fin_subrutina_isr:
      52.  00:8A74                      	;RET
      53.  00:8A74                      
      54.  00:8A74                      
      55.  00:8A74                      
      56.  00:8A74                      ;;=====================================================
      57.  00:8A74                      ;;DEFINICIÓN DE SUBRUTINAS DE FERNANDO PARA COMPRESIÓN Y SONIDO
      58.  00:8A74                      ;;=====================================================
      59.  00:8A74                      subrutinas_sonido:
      60.  00:8A74                      	include	"PT3-ROM_sjasm.asm"
       1:  00:8A74                      		; --- PT3 REPLAYER WORKING ON ROM ---
       2:  00:8A74                      		; --- Can be assembled with asMSX ---
       3:  00:8A74                      		; --- ROM version: MSX-KUN        ---
       4:  00:8A74                      		; --- asMSX version 2: SapphiRe   ---
       5:  00:8A74                      
       6:  00:8A74                      ; Based on MSX full version of PT3 by Dioniso
       7:  00:8A74                      ;
       8:  00:8A74                      ; This version of the replayer can be used with any note table
       9:  00:8A74                      ; This version also allows the use of PT3 commands
      10:  00:8A74                      ; First 99 bytes of each PT3 module should be stripped off
      11:  00:8A74                      ;
      12:  00:8A74                      ; PLAY and PSG WRITE routines seperated to allow independent calls
      13:  00:8A74                      ;
      14:  00:8A74                      ; ROM LENGTH: 1549 bytes
      15:  00:8A74                      ; RAM LENGTH:  576 bytes
      16:  00:8A74                      
      17:  00:8A74                      
      18:  00:8A74                      
      19:  00:8A74                      ;SJASM version by BTV 2016
      20:  00:8A74                      
      21:  00:8A74                      
      22:  00:8A74                      		; --- CONSTANT VALUES DEFINITION ---
      23:  00:8A74                      
      24:  00:8A74                      ;ChannelsVars
      25:  00:8A74                      ;struc	CHNPRM
      26:  00:8A74                      ;reset group
      27:  00:8A74  (00:0000)           CHNPRM_PsInOr	equ 0	;RESB 1
      28:  00:8A74  (00:0001)           CHNPRM_PsInSm	equ 1	;RESB 1
      29:  00:8A74  (00:0002)           CHNPRM_CrAmSl	equ 2	;RESB 1
      30:  00:8A74  (00:0003)           CHNPRM_CrNsSl	equ 3	;RESB 1
      31:  00:8A74  (00:0004)           CHNPRM_CrEnSl	equ 4	;RESB 1
      32:  00:8A74  (00:0005)           CHNPRM_TSlCnt	equ 5	;RESB 1
      33:  00:8A74  (00:0006)           CHNPRM_CrTnSl	equ 6	;RESW 1
      34:  00:8A74  (00:0008)           CHNPRM_TnAcc	equ 8	;RESW 1
      35:  00:8A74  (00:000A)           CHNPRM_COnOff	equ 10	;RESB 1
      36:  00:8A74                      ;reset group
      37:  00:8A74                      
      38:  00:8A74  (00:000B)           CHNPRM_OnOffD	equ 11	;RESB 1
      39:  00:8A74                      
      40:  00:8A74                      ;IX for PTDECOD here [+12]
      41:  00:8A74  (00:000C)           CHNPRM_OffOnD	equ 12	;RESB 1
      42:  00:8A74  (00:000D)           CHNPRM_OrnPtr	equ 13	;RESW 1
      43:  00:8A74  (00:000F)           CHNPRM_SamPtr	equ 15	;RESW 1
      44:  00:8A74  (00:0011)           CHNPRM_NNtSkp	equ 17	;RESB 1
      45:  00:8A74  (00:0012)           CHNPRM_Note	equ 18	;RESB 1
      46:  00:8A74  (00:0013)           CHNPRM_SlToNt	equ 19	;RESB 1
      47:  00:8A74  (00:0014)           CHNPRM_Env_En	equ 20	;RESB 1
      48:  00:8A74  (00:0015)           CHNPRM_Flags	equ 21	;RESB 1
      49:  00:8A74                       ;Enabled - 0,SimpleGliss - 2
      50:  00:8A74  (00:0016)           CHNPRM_TnSlDl	equ 22	;RESB 1
      51:  00:8A74  (00:0017)           CHNPRM_TSlStp	equ 23	;RESW 1
      52:  00:8A74  (00:0019)           CHNPRM_TnDelt	equ 25	;RESW 1
      53:  00:8A74  (00:001B)           CHNPRM_NtSkCn	equ 27	;RESB 1
      54:  00:8A74  (00:001C)           CHNPRM_Volume	equ 28	;RESB 1
      55:  00:8A74  (00:001D)           CHNPRM_Size	equ 29	;RESB 1
      56:  00:8A74                      ;endstruc
      57:  00:8A74                      
      58:  00:8A74                      ;struc	AR
      59:  00:8A74  (00:0000)           AR_TonA		equ 0	;RESW 1
      60:  00:8A74  (00:0002)           AR_TonB		equ 2	;RESW 1
      61:  00:8A74  (00:0004)           AR_TonC		equ 4	;RESW 1
      62:  00:8A74  (00:0006)           AR_Noise	equ 6	;RESB 1
      63:  00:8A74  (00:0007)           AR_Mixer	equ 7	;RESB 1
      64:  00:8A74  (00:0008)           AR_AmplA	equ 8	;RESB 1
      65:  00:8A74  (00:0009)           AR_AmplB	equ 9	;RESB 1
      66:  00:8A74  (00:000A)           AR_AmplC	equ 10	;RESB 1
      67:  00:8A74  (00:000B)           AR_Env		equ 11	;RESW 1
      68:  00:8A74  (00:000D)           AR_EnvTp	equ 13	;RESB 1
      69:  00:8A74                      ;endstruc
      70:  00:8A74                      
      71:  00:8A74                      		; --- CODE STARTS HERE ---
      72:  00:8A74                      
      73:  00:8A74  21 00 F0            CHECKLP:	LD	HL,PT3_SETUP
      74:  00:8A77  CB FE               		SET	7,[HL]
      75:  00:8A79  CB 46               		BIT	0,[HL]
      76:  00:8A7B  C8                  		RET	Z
      77:  00:8A7C  E1                  		POP	HL
      78:  00:8A7D  21 7A F0            		LD	HL,DelyCnt
      79:  00:8A80  34                  		INC	[HL]
      80:  00:8A81  21 3E F0            		LD	HL,ChanA+CHNPRM_NtSkCn
      81:  00:8A84  34                  		INC	[HL]
      82:  00:8A85  AF                  PT3_MUTE:	XOR	A
      83:  00:8A86  67                  		LD	H,A
      84:  00:8A87  6F                  		LD	L,A
      85:  00:8A88  32 48 F1            		LD	[AYREGS+AR_AmplA],A
      86:  00:8A8B  22 49 F1            		LD	[AYREGS+AR_AmplB],HL
      87:  00:8A8E  C3 D7 8F            		JP	ROUT_A0
      88:  00:8A91                      
      89:  00:8A91                      PT3_INIT:	;HL - AddressOfModule - 100
      90:  00:8A91  22 01 F0            		LD [PT3_MODADDR],HL
      91:  00:8A94  E5                  		PUSH HL
      92:  00:8A95  11 64 00            		LD DE,100
      93:  00:8A98  19                  		ADD HL,DE
      94:  00:8A99  7E                  		LD A,[HL]
      95:  00:8A9A  32 1C F0            		LD [PT3_Delay],A
      96:  00:8A9D  E5                  		PUSH HL
      97:  00:8A9E  DD E1               		POP IX
      98:  00:8AA0  19                  		ADD HL,DE
      99:  00:8AA1  22 03 F0            		LD [PT3_CrPsPtr],HL
     100:  00:8AA4  DD 5E 02            		LD E,[IX+102-100]
     101:  00:8AA7  19                  		ADD HL,DE
     102:  00:8AA8  23                  		INC HL
     103:  00:8AA9  22 18 F0            		LD [PT3_LPosPtr],HL
     104:  00:8AAC  D1                  		POP DE
     105:  00:8AAD  DD 6E 03            		LD L,[IX+103-100]
     106:  00:8AB0  DD 66 04            		LD H,[IX+104-100]
     107:  00:8AB3  19                  		ADD HL,DE
     108:  00:8AB4  22 1A F0            		LD [PT3_PatsPtr],HL
     109:  00:8AB7  21 A9 00            		LD HL,169
     110:  00:8ABA  19                  		ADD HL,DE
     111:  00:8ABB  22 07 F0            		LD [PT3_OrnPtrs],HL
     112:  00:8ABE  21 69 00            		LD HL,105
     113:  00:8AC1  19                  		ADD HL,DE
     114:  00:8AC2  22 05 F0            		LD [PT3_SAMPTRS],HL
     115:  00:8AC5  21 00 F0            		LD HL,PT3_SETUP
     116:  00:8AC8  CB BE               		RES 7,[HL]
     117:  00:8ACA                      
     118:  00:8ACA                      		; --- note table data depacker ---
     119:  00:8ACA                      		; Depacks first 12 tones of each tone table
     120:  00:8ACA                      
     121:  00:8ACA  11 4B 90            		LD DE,T_PACK
     122:  00:8ACD  01 B1 F1            		LD BC,T1_+(2*49)-1
     123:  00:8AD0  1A                  .TP_0:		LD A,[DE]
     124:  00:8AD1  13                  		INC DE
     125:  00:8AD2  FE 1E               		CP 15*2
     126:  00:8AD4  30 06               		JR NC,.TP_1
     127:  00:8AD6  67                  		LD H,A
     128:  00:8AD7  1A                  		LD A,[DE]
     129:  00:8AD8  6F                  		LD L,A
     130:  00:8AD9  13                  		INC DE
     131:  00:8ADA  18 07               		JR .TP_2
     132:  00:8ADC  D5                  .TP_1:		PUSH DE
     133:  00:8ADD  16 00               		LD D,0
     134:  00:8ADF  5F                  		LD E,A
     135:  00:8AE0  19                  		ADD HL,DE
     136:  00:8AE1  19                  		ADD HL,DE
     137:  00:8AE2  D1                  		POP DE
     138:  00:8AE3  7C                  .TP_2:		LD A,H
     139:  00:8AE4  02                  		LD [BC],A
     140:  00:8AE5  0B                  		DEC BC
     141:  00:8AE6  7D                  		LD A,L
     142:  00:8AE7  02                  		LD [BC],A
     143:  00:8AE8  0B                  		DEC BC
     144:  00:8AE9  D6 F0               		SUB $F0
     145:  00:8AEB  20 E3               		JR NZ,.TP_0
     146:  00:8AED                      
     147:  00:8AED                      		; --- INITIALIZE PT3 VARIABLES ---
     148:  00:8AED  21 23 F0            		LD HL,VARS
     149:  00:8AF0  77                  		LD [HL],A
     150:  00:8AF1  11 24 F0            		LD DE,VARS+1
     151:  00:8AF4  01 2C 01            		LD BC,VAR0END-VARS-1
     152:  00:8AF7  ED B0               		LDIR
     153:  00:8AF9                      
     154:  00:8AF9  3C                  		INC A
     155:  00:8AFA  32 7A F0            		LD [DelyCnt],A
     156:  00:8AFD  21 01 F0            		LD HL,$F001 ;H - CHNPRM_Volume, L - CHNPRM_NtSkCn
     157:  00:8B00  22 3E F0            		LD [ChanA+CHNPRM_NtSkCn],HL
     158:  00:8B03  22 5B F0            		LD [ChanB+CHNPRM_NtSkCn],HL
     159:  00:8B06  22 78 F0            		LD [ChanC+CHNPRM_NtSkCn],HL
     160:  00:8B09                      
     161:  00:8B09  21 47 90            		LD HL,EMPTYSAMORN
     162:  00:8B0C  22 12 F0            		LD [PT3_AdInPtA],HL ;ptr to zero
     163:  00:8B0F  22 30 F0            		LD [ChanA+CHNPRM_OrnPtr],HL ;ornament 0 is "0,1,0"
     164:  00:8B12  22 4D F0            		LD [ChanB+CHNPRM_OrnPtr],HL ;in all versions from
     165:  00:8B15  22 6A F0            		LD [ChanC+CHNPRM_OrnPtr],HL ;3.xx to 3.6x and VTII
     166:  00:8B18                      
     167:  00:8B18  22 32 F0            		LD [ChanA+CHNPRM_SamPtr],HL ;S1 There is no default
     168:  00:8B1B  22 4F F0            		LD [ChanB+CHNPRM_SamPtr],HL ;S2 sample in PT3, so, you
     169:  00:8B1E  22 6C F0            		LD [ChanC+CHNPRM_SamPtr],HL ;S3 can comment S1,2,3; see
     170:  00:8B21                      					    ;also EMPTYSAMORN comment
     171:  00:8B21                      
     172:  00:8B21                      		; --- NOTE TABLE CREATOR (c) Ivan Roshin, adapted by SapphiRe ---
     173:  00:8B21  DD 7E FF            		LD A,[IX+99-100] ;TONE TABLE NUMBER
     174:  00:8B24  17                  		RLA
     175:  00:8B25  E6 07               		AND 7
     176:  00:8B27  21 F7 8F            		LD HL,NT_DATA
     177:  00:8B2A  D5                  		PUSH DE
     178:  00:8B2B  50                  		LD D,B		; ld d,0 (bc is 0000 after LDIR)
     179:  00:8B2C  87                  		ADD A,A
     180:  00:8B2D  5F                  		LD E,A
     181:  00:8B2E  19                  		ADD HL,DE	; hl -> init of correct note table data
     182:  00:8B2F  5E                  		LD E,[HL]
     183:  00:8B30  23                  		INC HL
     184:  00:8B31  CB 3B               		SRL E
     185:  00:8B33  9F                  		SBC A,A
     186:  00:8B34  E6 A7               		AND $A7			;$00 (NOP) or $A7 (AND A)
     187:  00:8B36  32 21 F0            		LD [PT3_NTL3],A		; CORRECT INSTRUCTION, DEPENDS OF SELECTED TABLE
     188:  00:8B39  3E C9               		LD A,$C9		; RET CODE
     189:  00:8B3B  32 22 F0            		LD [PT3_NTL3+1],A	; RET PLACED
     190:  00:8B3E  EB                  		EX DE,HL
     191:  00:8B3F  C1                  		POP BC ;BC=T1_
     192:  00:8B40  09                  		ADD HL,BC
     193:  00:8B41                      
     194:  00:8B41  1A                  		LD A,[DE]                           
     195:  00:8B42                      
     196:  00:8B42  01 07 90            		LD BC,T_
     197:  00:8B45  81                  		ADD A,C
     198:  00:8B46  4F                  		LD C,A
     199:  00:8B47  88                  		ADC A,B
     200:  00:8B48                      
     201:  00:8B48  91                  		SUB C
     202:  00:8B49  47                  		LD B,A
     203:  00:8B4A  C5                  		PUSH BC
     204:  00:8B4B  11 80 F0            		LD DE,NT_
     205:  00:8B4E  D5                  		PUSH DE
     206:  00:8B4F                      
     207:  00:8B4F  06 0C               		LD B,12
     208:  00:8B51  C5                  .L1:		PUSH BC
     209:  00:8B52  4E                  		LD C,[HL]
     210:  00:8B53  23                  		INC HL
     211:  00:8B54  E5                  		PUSH HL
     212:  00:8B55  46                  		LD B,[HL]
     213:  00:8B56                      
     214:  00:8B56  D5                  		PUSH DE
     215:  00:8B57  EB                  		EX DE,HL
     216:  00:8B58  11 17 00            		LD DE,23
     217:  00:8B5B  DD 26 08            		db $DD,$26,$08	;LD XH,8
     218:  00:8B5E                      
     219:  00:8B5E  CB 38               .L2:		SRL B
     220:  00:8B60  CB 19               		RR C
     221:  00:8B62  CD 21 F0            .L3:		CALL PT3_NTL3	;AND A or NOP
     222:  00:8B65  79                  		LD A,C
     223:  00:8B66  8A                  		ADC A,D	;=ADC 0
     224:  00:8B67  77                  		LD [HL],A
     225:  00:8B68  23                  		INC HL
     226:  00:8B69  78                  		LD A,B
     227:  00:8B6A  8A                  		ADC A,D
     228:  00:8B6B  77                  		LD [HL],A
     229:  00:8B6C  19                  		ADD HL,DE
     230:  00:8B6D  DD 25               		db $DD,$25	;DEC XH
     231:  00:8B6F  20 ED               		JR NZ,.L2
     232:  00:8B71                      
     233:  00:8B71  D1                  		POP DE
     234:  00:8B72  13                  		INC DE
     235:  00:8B73  13                  		INC DE
     236:  00:8B74  E1                  		POP HL
     237:  00:8B75  23                  		INC HL
     238:  00:8B76  C1                  		POP BC
     239:  00:8B77  10 D8               		DJNZ .L1
     240:  00:8B79                      
     241:  00:8B79  E1                  		POP HL
     242:  00:8B7A  D1                  		POP DE
     243:  00:8B7B                      
     244:  00:8B7B  7B                  		LD A,E
     245:  00:8B7C  D5                  		PUSH DE
     246:  00:8B7D  11 13 90            		LD DE,TCOLD_1
     247:  00:8B80  BB                  		CP E
     248:  00:8B81  D1                  		POP DE
     249:  00:8B82  20 05               		JR NZ,.CORR_1
     250:  00:8B84  3E FD               		LD A,$FD
     251:  00:8B86  32 AE F0            		LD [NT_+$2E],A
     252:  00:8B89                      
     253:  00:8B89  1A                  .CORR_1:	LD A,[DE]
     254:  00:8B8A  A7                  		AND A
     255:  00:8B8B  28 11               		JR Z,.TC_EXIT
     256:  00:8B8D  1F                  		RRA
     257:  00:8B8E  F5                  		PUSH AF
     258:  00:8B8F  87                  		ADD A,A
     259:  00:8B90  4F                  		LD C,A
     260:  00:8B91  09                  		ADD HL,BC
     261:  00:8B92  F1                  		POP AF
     262:  00:8B93  30 02               		JR NC,.CORR_2
     263:  00:8B95  35                  		DEC [HL]
     264:  00:8B96  35                  		DEC [HL]
     265:  00:8B97  34                  .CORR_2:	INC [HL]
     266:  00:8B98  A7                  		AND A
     267:  00:8B99  ED 42               		SBC HL,BC
     268:  00:8B9B  13                  		INC DE
     269:  00:8B9C  18 EB               		JR .CORR_1
     270:  00:8B9E                      
     271:  00:8B9E                      .TC_EXIT:	;POP AF
     272:  00:8B9E                      
     273:  00:8B9E                      		; --- CREATE PT3 VOLUME TABLE (c) Ivan Roshin, adapted by SapphiRe ---
     274:  00:8B9E  21 11 00            		ld	hl,$11
     275:  00:8BA1  54                  		ld	d,h
     276:  00:8BA2  5C                  		ld	e,h
     277:  00:8BA3  DD 21 50 F1         		ld	IX,VT_+16
     278:  00:8BA7  06 0F               		ld	b,15
     279:  00:8BA9  E5                  .INITV1:	push	hl
     280:  00:8BAA  19                  		add	hl,de
     281:  00:8BAB  EB                  		ex	de,hl
     282:  00:8BAC  ED 62               		sbc	hl,hl
     283:  00:8BAE  48                  		ld	c,b
     284:  00:8BAF  06 10               		ld	b,16
     285:  00:8BB1  7D                  .INITV2:	ld	a,l
     286:  00:8BB2  17                  		rla
     287:  00:8BB3  7C                  		ld	a,h
     288:  00:8BB4  CE 00               		adc	a,0
     289:  00:8BB6  DD 77 00            		ld	[ix],a
     290:  00:8BB9  DD 23               		inc	ix
     291:  00:8BBB  19                  		add	hl,de
     292:  00:8BBC  10 F3               		djnz	.INITV2
     293:  00:8BBE  E1                  		pop	hl
     294:  00:8BBF  7B                  		ld	a,e
     295:  00:8BC0  FE 77               		cp	$77
     296:  00:8BC2  20 01               		jr	nz,.INITV3
     297:  00:8BC4  1C                  		inc	e
     298:  00:8BC5  41                  .INITV3:	ld	b,c
     299:  00:8BC6  10 E1               		djnz	.INITV1
     300:  00:8BC8                      
     301:  00:8BC8  C9                  		RET
     302:  00:8BC9                      
     303:  00:8BC9                      		;pattern decoder
     304:  00:8BC9  DD 36 08 00         PD_OrSm:	LD [IX+(CHNPRM_Env_En-12)],0
     305:  00:8BCD  CD 53 8D            		CALL SETORN
     306:  00:8BD0  0A                  		LD A,[BC]
     307:  00:8BD1  03                  		INC BC
     308:  00:8BD2  0F                  		RRCA
     309:  00:8BD3                      
     310:  00:8BD3  87                  PD_SAM:		ADD A,A
     311:  00:8BD4  5F                  PD_SAM_:	LD E,A
     312:  00:8BD5  16 00               		LD D,0
     313:  00:8BD7  2A 05 F0            		LD HL,[PT3_SAMPTRS]
     314:  00:8BDA  19                  		ADD HL,DE
     315:  00:8BDB  5E                  		LD E,[HL]
     316:  00:8BDC  23                  		INC HL
     317:  00:8BDD  56                  		LD D,[HL]
     318:  00:8BDE  2A 01 F0            		LD HL,[PT3_MODADDR]
     319:  00:8BE1  19                  		ADD HL,DE
     320:  00:8BE2  DD 75 03            		LD [IX+(CHNPRM_SamPtr-12)],L
     321:  00:8BE5  DD 74 04            		LD [IX+(CHNPRM_SamPtr+1-12)],H
     322:  00:8BE8  18 41               		JR PD_LOOP
     323:  00:8BEA                      
     324:  00:8BEA  07                  PD_VOL:		RLCA
     325:  00:8BEB  07                  		RLCA
     326:  00:8BEC  07                  		RLCA
     327:  00:8BED  07                  		RLCA
     328:  00:8BEE  DD 77 10            		LD [IX+(CHNPRM_Volume-12)],A
     329:  00:8BF1  18 3B               		JR PD_LP2
     330:  00:8BF3                      	
     331:  00:8BF3  DD 77 08            PD_EOff:	LD [IX+(CHNPRM_Env_En-12)],A
     332:  00:8BF6  DD 77 F4            		LD [IX+(CHNPRM_PsInOr-12)],A
     333:  00:8BF9  18 33               		JR PD_LP2
     334:  00:8BFB                      
     335:  00:8BFB  3D                  PD_SorE:	DEC A
     336:  00:8BFC  20 07               		JR NZ,PD_ENV
     337:  00:8BFE  0A                  		LD A,[BC]
     338:  00:8BFF  03                  		INC BC
     339:  00:8C00  DD 77 05            		LD [IX+(CHNPRM_NNtSkp-12)],A
     340:  00:8C03  18 29               		JR PD_LP2
     341:  00:8C05                      
     342:  00:8C05  CD 37 8D            PD_ENV:		CALL SETENV
     343:  00:8C08  18 24               		JR PD_LP2
     344:  00:8C0A                      
     345:  00:8C0A  CD 53 8D            PD_ORN:		CALL SETORN
     346:  00:8C0D  18 1C               		JR PD_LOOP
     347:  00:8C0F                             
     348:  00:8C0F  DD 77 08            PD_ESAM:	LD [IX+(CHNPRM_Env_En-12)],A
     349:  00:8C12  DD 77 F4            		LD [IX+(CHNPRM_PsInOr-12)],A
     350:  00:8C15  C4 37 8D            		CALL NZ,SETENV
     351:  00:8C18  0A                  		LD A,[BC]
     352:  00:8C19  03                  		INC BC
     353:  00:8C1A  18 B8               		JR PD_SAM_
     354:  00:8C1C                      
     355:  00:8C1C  DD 7E 06            PTDECOD:	LD A,[IX+(CHNPRM_Note-12)]
     356:  00:8C1F  32 0F F0            		LD [PT3_PrNote],A
     357:  00:8C22  DD 6E FA            		LD L,[IX+(CHNPRM_CrTnSl-12)]
     358:  00:8C25  DD 66 FB            		LD H,[IX+(CHNPRM_CrTnSl+1-12)]
     359:  00:8C28  22 10 F0            		LD [PT3_PrSlide],HL
     360:  00:8C2B                      
     361:  00:8C2B  11 10 20            PD_LOOP:	LD DE,$2010
     362:  00:8C2E  0A                  PD_LP2:		LD A,[BC]
     363:  00:8C2F  03                  		INC BC
     364:  00:8C30  83                  		ADD A,E
     365:  00:8C31  38 96               		JR C,PD_OrSm
     366:  00:8C33  82                  		ADD A,D
     367:  00:8C34  28 4A               		JR Z,PD_FIN
     368:  00:8C36  38 9B               		JR C,PD_SAM
     369:  00:8C38  83                  		ADD A,E
     370:  00:8C39  28 25               		JR Z,PD_REL
     371:  00:8C3B  38 AD               		JR C,PD_VOL
     372:  00:8C3D  83                  		ADD A,E
     373:  00:8C3E  28 B3               		JR Z,PD_EOff
     374:  00:8C40  38 B9               		JR C,PD_SorE
     375:  00:8C42  C6 60               		ADD A,96
     376:  00:8C44  38 20               		JR C,PD_NOTE
     377:  00:8C46  83                  		ADD A,E
     378:  00:8C47  38 C1               		JR C,PD_ORN
     379:  00:8C49  82                  		ADD A,D
     380:  00:8C4A  38 0F               		JR C,PD_NOIS
     381:  00:8C4C  83                  		ADD A,E
     382:  00:8C4D  38 C0               		JR C,PD_ESAM
     383:  00:8C4F  87                  		ADD A,A
     384:  00:8C50  5F                  		LD E,A
     385:  00:8C51  21 8C 6C            		LD HL,(SPCCOMS+$DF20) % 65536	; Adapted from original Speccy version (saves 6 bytes)
     386:  00:8C54  19                  		ADD HL,DE
     387:  00:8C55  5E                  		LD E,[HL]
     388:  00:8C56  23                  		INC HL
     389:  00:8C57  56                  		LD D,[HL]
     390:  00:8C58  D5                  		PUSH DE
     391:  00:8C59  18 D0               		JR PD_LOOP
     392:  00:8C5B                      
     393:  00:8C5B  32 7E F0            PD_NOIS:	LD [Ns_Base],A
     394:  00:8C5E  18 CE               		JR PD_LP2
     395:  00:8C60                      
     396:  00:8C60  DD CB 09 86         PD_REL:		RES 0,[IX+(CHNPRM_Flags-12)]
     397:  00:8C64  18 08               		JR PD_RES
     398:  00:8C66                      	
     399:  00:8C66  DD 77 06            PD_NOTE:	LD [IX+(CHNPRM_Note-12)],A
     400:  00:8C69  DD CB 09 C6         		SET 0,[IX+(CHNPRM_Flags-12)]
     401:  00:8C6D  AF                  		XOR A
     402:  00:8C6E                      
     403:  00:8C6E  ED 73 09 F0         PD_RES:		LD [PT3_PDSP],SP
     404:  00:8C72  DD F9               		LD SP,IX
     405:  00:8C74  67                  		LD H,A
     406:  00:8C75  6F                  		LD L,A
     407:  00:8C76  E5                  		PUSH HL
     408:  00:8C77  E5                  		PUSH HL
     409:  00:8C78  E5                  		PUSH HL
     410:  00:8C79  E5                  		PUSH HL
     411:  00:8C7A  E5                  		PUSH HL
     412:  00:8C7B  E5                  		PUSH HL
     413:  00:8C7C  ED 7B 09 F0         		LD SP,[PT3_PDSP]
     414:  00:8C80                      
     415:  00:8C80  DD 7E 05            PD_FIN:		LD A,[IX+(CHNPRM_NNtSkp-12)]
     416:  00:8C83  DD 77 0F            		LD [IX+(CHNPRM_NtSkCn-12)],A
     417:  00:8C86  C9                  		RET
     418:  00:8C87                      
     419:  00:8C87  DD CB 09 96         C_PORTM:	RES 2,[IX+(CHNPRM_Flags-12)]
     420:  00:8C8B  0A                  		LD A,[BC]
     421:  00:8C8C  03                  		INC BC
     422:  00:8C8D                      		;SKIP PRECALCULATED TONE DELTA [BECAUSE
     423:  00:8C8D                      		;CANNOT BE RIGHT AFTER PT3 COMPILATION]
     424:  00:8C8D  03                  		INC BC
     425:  00:8C8E  03                  		INC BC
     426:  00:8C8F  DD 77 0A            		LD [IX+(CHNPRM_TnSlDl-12)],A
     427:  00:8C92  DD 77 F9            		LD [IX+(CHNPRM_TSlCnt-12)],A
     428:  00:8C95  11 80 F0            		LD DE,NT_
     429:  00:8C98  DD 7E 06            		LD A,[IX+(CHNPRM_Note-12)]
     430:  00:8C9B  DD 77 07            		LD [IX+(CHNPRM_SlToNt-12)],A
     431:  00:8C9E  87                  		ADD A,A
     432:  00:8C9F  6F                  		LD L,A
     433:  00:8CA0  26 00               		LD H,0
     434:  00:8CA2  19                  		ADD HL,DE
     435:  00:8CA3  7E                  		LD A,[HL]
     436:  00:8CA4  23                  		INC HL
     437:  00:8CA5  66                  		LD H,[HL]
     438:  00:8CA6  6F                  		LD L,A
     439:  00:8CA7  E5                  		PUSH HL
     440:  00:8CA8  3A 0F F0            		LD A,[PT3_PrNote]
     441:  00:8CAB  DD 77 06            		LD [IX+(CHNPRM_Note-12)],A
     442:  00:8CAE  87                  		ADD A,A
     443:  00:8CAF  6F                  		LD L,A
     444:  00:8CB0  26 00               		LD H,0
     445:  00:8CB2  19                  		ADD HL,DE
     446:  00:8CB3  5E                  		LD E,[HL]
     447:  00:8CB4  23                  		INC HL
     448:  00:8CB5  56                  		LD D,[HL]
     449:  00:8CB6  E1                  		POP HL
     450:  00:8CB7  ED 52               		SBC HL,DE
     451:  00:8CB9  DD 75 0D            		LD [IX+(CHNPRM_TnDelt-12)],L
     452:  00:8CBC  DD 74 0E            		LD [IX+(CHNPRM_TnDelt+1-12)],H
     453:  00:8CBF  ED 5B 10 F0         		LD DE,[PT3_PrSlide]
     454:  00:8CC3  DD 73 FA            		LD [IX+(CHNPRM_CrTnSl-12)],E
     455:  00:8CC6  DD 72 FB            		LD [IX+(CHNPRM_CrTnSl+1-12)],D
     456:  00:8CC9  0A                  		LD A,[BC] ;SIGNED TONE STEP
     457:  00:8CCA  03                  		INC BC
     458:  00:8CCB  08                  		EX AF,AF'
     459:  00:8CCC  0A                  		LD A,[BC]
     460:  00:8CCD  03                  		INC BC
     461:  00:8CCE  A7                  		AND A
     462:  00:8CCF  28 01               		JR Z,.NOSIG
     463:  00:8CD1  EB                  		EX DE,HL
     464:  00:8CD2  ED 52               .NOSIG:	SBC HL,DE
     465:  00:8CD4  F2 DC 8C            		JP P,SET_STP
     466:  00:8CD7  2F                  		CPL
     467:  00:8CD8  08                  		EX AF,AF'
     468:  00:8CD9  ED 44               		NEG
     469:  00:8CDB  08                  		EX AF,AF'
     470:  00:8CDC  DD 77 0C            SET_STP:	LD [IX+(CHNPRM_TSlStp+1-12)],A
     471:  00:8CDF  08                  		EX AF,AF'
     472:  00:8CE0  DD 77 0B            		LD [IX+(CHNPRM_TSlStp-12)],A
     473:  00:8CE3  DD 36 FE 00         		LD [IX+(CHNPRM_COnOff-12)],0
     474:  00:8CE7  C9                  		RET
     475:  00:8CE8                      
     476:  00:8CE8  DD CB 09 D6         C_GLISS:	SET 2,[IX+(CHNPRM_Flags-12)]
     477:  00:8CEC  0A                  		LD A,[BC]
     478:  00:8CED  03                  		INC BC
     479:  00:8CEE  DD 77 0A            		LD [IX+(CHNPRM_TnSlDl-12)],A
     480:  00:8CF1  DD 77 F9            		LD [IX+(CHNPRM_TSlCnt-12)],A
     481:  00:8CF4  0A                  		LD A,[BC]
     482:  00:8CF5  03                  		INC BC
     483:  00:8CF6  08                  		EX AF,AF'
     484:  00:8CF7  0A                  		LD A,[BC]
     485:  00:8CF8  03                  		INC BC
     486:  00:8CF9  18 E1               		JR SET_STP
     487:  00:8CFB                      
     488:  00:8CFB  0A                  C_SMPOS:	LD A,[BC]
     489:  00:8CFC  03                  		INC BC
     490:  00:8CFD  DD 77 F5            		LD [IX+(CHNPRM_PsInSm-12)],A
     491:  00:8D00  C9                  		RET
     492:  00:8D01                      
     493:  00:8D01  0A                  C_ORPOS:	LD A,[BC]
     494:  00:8D02  03                  		INC BC
     495:  00:8D03  DD 77 F4            		LD [IX+(CHNPRM_PsInOr-12)],A
     496:  00:8D06  C9                  		RET
     497:  00:8D07                      
     498:  00:8D07  0A                  C_VIBRT:	LD A,[BC]
     499:  00:8D08  03                  		INC BC
     500:  00:8D09  DD 77 FF            		LD [IX+(CHNPRM_OnOffD-12)],A
     501:  00:8D0C  DD 77 FE            		LD [IX+(CHNPRM_COnOff-12)],A
     502:  00:8D0F  0A                  		LD A,[BC]
     503:  00:8D10  03                  		INC BC
     504:  00:8D11  DD 77 00            		LD [IX+(CHNPRM_OffOnD-12)],A
     505:  00:8D14  AF                  		XOR A
     506:  00:8D15  DD 77 F9            		LD [IX+(CHNPRM_TSlCnt-12)],A
     507:  00:8D18  DD 77 FA            		LD [IX+(CHNPRM_CrTnSl-12)],A
     508:  00:8D1B  DD 77 FB            		LD [IX+(CHNPRM_CrTnSl+1-12)],A
     509:  00:8D1E  C9                  		RET
     510:  00:8D1F                      
     511:  00:8D1F  0A                  C_ENGLS:	LD A,[BC]
     512:  00:8D20  03                  		INC BC
     513:  00:8D21  32 1E F0            		LD [PT3_Env_Del],A
     514:  00:8D24  32 7D F0            		LD [CurEDel],A
     515:  00:8D27  0A                  		LD A,[BC]
     516:  00:8D28  03                  		INC BC
     517:  00:8D29  6F                  		LD L,A
     518:  00:8D2A  0A                  		LD A,[BC]
     519:  00:8D2B  03                  		INC BC
     520:  00:8D2C  67                  		LD H,A
     521:  00:8D2D  22 1F F0            		LD [PT3_ESldAdd],HL
     522:  00:8D30  C9                  		RET
     523:  00:8D31                      
     524:  00:8D31  0A                  C_DELAY:	LD A,[BC]
     525:  00:8D32  03                  		INC BC
     526:  00:8D33  32 1C F0            		LD [PT3_Delay],A
     527:  00:8D36  C9                  		RET
     528:  00:8D37                      	
     529:  00:8D37  DD 73 08            SETENV:		LD [IX+(CHNPRM_Env_En-12)],E
     530:  00:8D3A  32 4D F1            		LD [AYREGS+AR_EnvTp],A
     531:  00:8D3D  0A                  		LD A,[BC]
     532:  00:8D3E  03                  		INC BC
     533:  00:8D3F  67                  		LD H,A
     534:  00:8D40  0A                  		LD A,[BC]
     535:  00:8D41  03                  		INC BC
     536:  00:8D42  6F                  		LD L,A
     537:  00:8D43  22 4E F1            		LD [EnvBase],HL
     538:  00:8D46  AF                  		XOR A
     539:  00:8D47  DD 77 F4            		LD [IX+(CHNPRM_PsInOr-12)],A
     540:  00:8D4A  32 7D F0            		LD [CurEDel],A
     541:  00:8D4D  67                  		LD H,A
     542:  00:8D4E  6F                  		LD L,A
     543:  00:8D4F  22 7B F0            		LD [CurESld],HL
     544:  00:8D52  C9                  C_NOP:		RET
     545:  00:8D53                      
     546:  00:8D53  87                  SETORN:		ADD A,A
     547:  00:8D54  5F                  		LD E,A
     548:  00:8D55  16 00               		LD D,0
     549:  00:8D57  DD 72 F4            		LD [IX+(CHNPRM_PsInOr-12)],D
     550:  00:8D5A  2A 07 F0            		LD HL,[PT3_OrnPtrs]
     551:  00:8D5D  19                  		ADD HL,DE
     552:  00:8D5E  5E                  		LD E,[HL]
     553:  00:8D5F  23                  		INC HL
     554:  00:8D60  56                  		LD D,[HL]
     555:  00:8D61  2A 01 F0            		LD HL,[PT3_MODADDR]
     556:  00:8D64  19                  		ADD HL,DE
     557:  00:8D65  DD 75 01            		LD [IX+(CHNPRM_OrnPtr-12)],L
     558:  00:8D68  DD 74 02            		LD [IX+(CHNPRM_OrnPtr+1-12)],H
     559:  00:8D6B  C9                  		RET
     560:  00:8D6C                      
     561:  00:8D6C                      		;ALL 16 ADDRESSES TO PROTECT FROM BROKEN PT3 MODULES
     562:  00:8D6C  52 8D               SPCCOMS:	dw C_NOP
     563:  00:8D6E  E8 8C               		dw C_GLISS
     564:  00:8D70  87 8C               		dw C_PORTM
     565:  00:8D72  FB 8C               		dw C_SMPOS
     566:  00:8D74  01 8D               		dw C_ORPOS
     567:  00:8D76  07 8D               		dw C_VIBRT
     568:  00:8D78  52 8D               		dw C_NOP
     569:  00:8D7A  52 8D               		dw C_NOP
     570:  00:8D7C  1F 8D               		dw C_ENGLS
     571:  00:8D7E  31 8D               		dw C_DELAY
     572:  00:8D80  52 8D               		dw C_NOP
     573:  00:8D82  52 8D               		dw C_NOP
     574:  00:8D84  52 8D               		dw C_NOP
     575:  00:8D86  52 8D               		dw C_NOP
     576:  00:8D88  52 8D               		dw C_NOP
     577:  00:8D8A  52 8D               		dw C_NOP
     578:  00:8D8C                      
     579:  00:8D8C  AF                  CHREGS:		XOR A
     580:  00:8D8D  32 4A F1            		LD [AYREGS+AR_AmplC],A
     581:  00:8D90  DD CB 15 46         		BIT 0,[IX+CHNPRM_Flags]
     582:  00:8D94  E5                  		PUSH HL
     583:  00:8D95  CA BB 8E            		JP Z,.CH_EXIT
     584:  00:8D98  ED 73 0B F0         		LD [PT3_CSP],SP
     585:  00:8D9C  DD 6E 0D            		LD L,[IX+CHNPRM_OrnPtr]
     586:  00:8D9F  DD 66 0E            		LD H,[IX+CHNPRM_OrnPtr+1]
     587:  00:8DA2  F9                  		LD SP,HL
     588:  00:8DA3  D1                  		POP DE
     589:  00:8DA4  67                  		LD H,A
     590:  00:8DA5  DD 7E 00            		LD A,[IX+CHNPRM_PsInOr]
     591:  00:8DA8  6F                  		LD L,A
     592:  00:8DA9  39                  		ADD HL,SP
     593:  00:8DAA  3C                  		INC A
     594:  00:8DAB  BA                  		CP D
     595:  00:8DAC  38 01               		JR C,.CH_ORPS
     596:  00:8DAE  7B                  		LD A,E
     597:  00:8DAF  DD 77 00            .CH_ORPS:	LD [IX+CHNPRM_PsInOr],A
     598:  00:8DB2  DD 7E 12            		LD A,[IX+CHNPRM_Note]
     599:  00:8DB5  86                  		ADD A,[HL]
     600:  00:8DB6  F2 BA 8D            		JP P,.CH_NTP
     601:  00:8DB9  AF                  		XOR A
     602:  00:8DBA  FE 60               .CH_NTP:	CP 96
     603:  00:8DBC  38 02               		JR C,.CH_NOK
     604:  00:8DBE  3E 5F               		LD A,95
     605:  00:8DC0  87                  .CH_NOK:	ADD A,A
     606:  00:8DC1  08                  		EX AF,AF'
     607:  00:8DC2  DD 6E 0F            		LD L,[IX+CHNPRM_SamPtr]
     608:  00:8DC5  DD 66 10            		LD H,[IX+CHNPRM_SamPtr+1]
     609:  00:8DC8  F9                  		LD SP,HL
     610:  00:8DC9  D1                  		POP DE
     611:  00:8DCA  26 00               		LD H,0
     612:  00:8DCC  DD 7E 01            		LD A,[IX+CHNPRM_PsInSm]
     613:  00:8DCF  47                  		LD B,A
     614:  00:8DD0  87                  		ADD A,A
     615:  00:8DD1  87                  		ADD A,A
     616:  00:8DD2  6F                  		LD L,A
     617:  00:8DD3  39                  		ADD HL,SP
     618:  00:8DD4  F9                  		LD SP,HL
     619:  00:8DD5  78                  		LD A,B
     620:  00:8DD6  3C                  		INC A
     621:  00:8DD7  BA                  		CP D
     622:  00:8DD8  38 01               		JR C,.CH_SMPS
     623:  00:8DDA  7B                  		LD A,E
     624:  00:8DDB  DD 77 01            .CH_SMPS:	LD [IX+CHNPRM_PsInSm],A
     625:  00:8DDE  C1                  		POP BC
     626:  00:8DDF  E1                  		POP HL
     627:  00:8DE0  DD 5E 08            		LD E,[IX+CHNPRM_TnAcc]
     628:  00:8DE3  DD 56 09            		LD D,[IX+CHNPRM_TnAcc+1]
     629:  00:8DE6  19                  		ADD HL,DE
     630:  00:8DE7  CB 70               		BIT 6,B
     631:  00:8DE9  28 06               		JR Z,.CH_NOAC
     632:  00:8DEB  DD 75 08            		LD [IX+CHNPRM_TnAcc],L
     633:  00:8DEE  DD 74 09            		LD [IX+CHNPRM_TnAcc+1],H
     634:  00:8DF1  EB                  .CH_NOAC:	EX DE,HL
     635:  00:8DF2  08                  		EX AF,AF'
     636:  00:8DF3  6F                  		LD L,A
     637:  00:8DF4  26 00               		LD H,0
     638:  00:8DF6  31 80 F0            		LD SP,NT_
     639:  00:8DF9  39                  		ADD HL,SP
     640:  00:8DFA  F9                  		LD SP,HL
     641:  00:8DFB  E1                  		POP HL
     642:  00:8DFC  19                  		ADD HL,DE
     643:  00:8DFD  DD 5E 06            		LD E,[IX+CHNPRM_CrTnSl]
     644:  00:8E00  DD 56 07            		LD D,[IX+CHNPRM_CrTnSl+1]
     645:  00:8E03  19                  		ADD HL,DE
     646:  00:8E04  ED 7B 0B F0         		LD SP,[PT3_CSP]
     647:  00:8E08  E3                  		EX [SP],HL
     648:  00:8E09  AF                  		XOR A
     649:  00:8E0A  DD B6 05            		OR [IX+CHNPRM_TSlCnt]
     650:  00:8E0D  28 3E               		JR Z,.CH_AMP
     651:  00:8E0F  DD 35 05            		DEC [IX+CHNPRM_TSlCnt]
     652:  00:8E12  20 39               		JR NZ,.CH_AMP
     653:  00:8E14  DD 7E 16            		LD A,[IX+CHNPRM_TnSlDl]
     654:  00:8E17  DD 77 05            		LD [IX+CHNPRM_TSlCnt],A
     655:  00:8E1A  DD 6E 17            		LD L,[IX+CHNPRM_TSlStp]
     656:  00:8E1D  DD 66 18            		LD H,[IX+CHNPRM_TSlStp+1]
     657:  00:8E20  7C                  		LD A,H
     658:  00:8E21  19                  		ADD HL,DE
     659:  00:8E22  DD 75 06            		LD [IX+CHNPRM_CrTnSl],L
     660:  00:8E25  DD 74 07            		LD [IX+CHNPRM_CrTnSl+1],H
     661:  00:8E28  DD CB 15 56         		BIT 2,[IX+CHNPRM_Flags]
     662:  00:8E2C  20 1F               		JR NZ,.CH_AMP
     663:  00:8E2E  DD 5E 19            		LD E,[IX+CHNPRM_TnDelt]
     664:  00:8E31  DD 56 1A            		LD D,[IX+CHNPRM_TnDelt+1]
     665:  00:8E34  A7                  		AND A
     666:  00:8E35  28 01               		JR Z,.CH_STPP
     667:  00:8E37  EB                  		EX DE,HL
     668:  00:8E38  ED 52               .CH_STPP:	SBC HL,DE
     669:  00:8E3A  FA 4D 8E            		JP M,.CH_AMP
     670:  00:8E3D  DD 7E 13            		LD A,[IX+CHNPRM_SlToNt]
     671:  00:8E40  DD 77 12            		LD [IX+CHNPRM_Note],A
     672:  00:8E43  AF                  		XOR A
     673:  00:8E44  DD 77 05            		LD [IX+CHNPRM_TSlCnt],A
     674:  00:8E47  DD 77 06            		LD [IX+CHNPRM_CrTnSl],A
     675:  00:8E4A  DD 77 07            		LD [IX+CHNPRM_CrTnSl+1],A
     676:  00:8E4D  DD 7E 02            .CH_AMP:	LD A,[IX+CHNPRM_CrAmSl]
     677:  00:8E50  CB 79               		BIT 7,C
     678:  00:8E52  28 13               		JR Z,.CH_NOAM
     679:  00:8E54  CB 71               		BIT 6,C
     680:  00:8E56  28 07               		JR Z,.CH_AMIN
     681:  00:8E58  FE 0F               		CP 15
     682:  00:8E5A  28 0B               		JR Z,.CH_NOAM
     683:  00:8E5C  3C                  		INC A
     684:  00:8E5D  18 05               		JR .CH_SVAM
     685:  00:8E5F  FE F1               .CH_AMIN:	CP -15
     686:  00:8E61  28 04               		JR Z,.CH_NOAM
     687:  00:8E63  3D                  		DEC A
     688:  00:8E64  DD 77 02            .CH_SVAM:	LD [IX+CHNPRM_CrAmSl],A
     689:  00:8E67  6F                  .CH_NOAM:	LD L,A
     690:  00:8E68  78                  		LD A,B
     691:  00:8E69  E6 0F               		AND 15
     692:  00:8E6B  85                  		ADD A,L
     693:  00:8E6C  F2 70 8E            		JP P,.CH_APOS
     694:  00:8E6F  AF                  		XOR A
     695:  00:8E70  FE 10               .CH_APOS:	CP 16
     696:  00:8E72  38 02               		JR C,.CH_VOL
     697:  00:8E74  3E 0F               		LD A,15
     698:  00:8E76  DD B6 1C            .CH_VOL:	OR [IX+CHNPRM_Volume]
     699:  00:8E79  6F                  		LD L,A
     700:  00:8E7A  26 00               		LD H,0
     701:  00:8E7C  11 40 F1            		LD DE,VT_
     702:  00:8E7F  19                  		ADD HL,DE
     703:  00:8E80  7E                  		LD A,[HL]
     704:  00:8E81  CB 41               .CH_ENV:	BIT 0,C
     705:  00:8E83  20 03               		JR NZ,.CH_NOEN
     706:  00:8E85  DD B6 14            		OR [IX+CHNPRM_Env_En]
     707:  00:8E88  32 4A F1            .CH_NOEN:	LD [AYREGS+AR_AmplC],A
     708:  00:8E8B  CB 78               		BIT 7,B
     709:  00:8E8D  79                  		LD A,C
     710:  00:8E8E  28 19               		JR Z,.NO_ENSL
     711:  00:8E90  17                  		RLA
     712:  00:8E91  17                  		RLA
     713:  00:8E92  CB 2F               		SRA A
     714:  00:8E94  CB 2F               		SRA A
     715:  00:8E96  CB 2F               		SRA A
     716:  00:8E98  DD 86 04            		ADD A,[IX+CHNPRM_CrEnSl] ;SEE COMMENT BELOW
     717:  00:8E9B  CB 68               		BIT 5,B
     718:  00:8E9D  28 03               		JR Z,.NO_ENAC
     719:  00:8E9F  DD 77 04            		LD [IX+CHNPRM_CrEnSl],A
     720:  00:8EA2  21 1D F0            .NO_ENAC:	LD HL,PT3_AddToEn
     721:  00:8EA5  86                  		ADD A,[HL] ;BUG IN PT3 - NEED WORD HERE.
     722:  00:8EA6                      			   ;FIX IT IN NEXT VERSION?
     723:  00:8EA6  77                  		LD [HL],A
     724:  00:8EA7  18 0E               		JR .CH_MIX
     725:  00:8EA9  1F                  .NO_ENSL:	RRA
     726:  00:8EAA  DD 86 03            		ADD A,[IX+CHNPRM_CrNsSl]
     727:  00:8EAD  32 7F F0            		LD [AddToNs],A
     728:  00:8EB0  CB 68               		BIT 5,B
     729:  00:8EB2  28 03               		JR Z,.CH_MIX
     730:  00:8EB4  DD 77 03            		LD [IX+CHNPRM_CrNsSl],A
     731:  00:8EB7  78                  .CH_MIX:	LD A,B
     732:  00:8EB8  1F                  		RRA
     733:  00:8EB9  E6 48               		AND $48
     734:  00:8EBB  21 47 F1            .CH_EXIT:	LD HL,AYREGS+AR_Mixer
     735:  00:8EBE  B6                  		OR [HL]
     736:  00:8EBF  0F                  		RRCA
     737:  00:8EC0  77                  		LD [HL],A
     738:  00:8EC1  E1                  		POP HL
     739:  00:8EC2  AF                  		XOR A
     740:  00:8EC3  DD B6 0A            		OR [IX+CHNPRM_COnOff]
     741:  00:8EC6  C8                  		RET Z
     742:  00:8EC7  DD 35 0A            		DEC [IX+CHNPRM_COnOff]
     743:  00:8ECA  C0                  		RET NZ
     744:  00:8ECB  DD AE 15            		XOR [IX+CHNPRM_Flags]
     745:  00:8ECE  DD 77 15            		LD [IX+CHNPRM_Flags],A
     746:  00:8ED1  1F                  		RRA
     747:  00:8ED2  DD 7E 0B            		LD A,[IX+CHNPRM_OnOffD]
     748:  00:8ED5  38 03               		JR C,.CH_ONDL
     749:  00:8ED7  DD 7E 0C            		LD A,[IX+CHNPRM_OffOnD]
     750:  00:8EDA  DD 77 0A            .CH_ONDL:	LD [IX+CHNPRM_COnOff],A
     751:  00:8EDD  C9                  		RET
     752:  00:8EDE                      
     753:  00:8EDE  AF                  PT3_PLAY:	XOR A
     754:  00:8EDF  32 1D F0            		LD [PT3_AddToEn],A
     755:  00:8EE2  32 47 F1            		LD [AYREGS+AR_Mixer],A
     756:  00:8EE5  3D                  		DEC A
     757:  00:8EE6  32 4D F1            		LD [AYREGS+AR_EnvTp],A
     758:  00:8EE9  21 7A F0            		LD HL,DelyCnt
     759:  00:8EEC  35                  		DEC [HL]
     760:  00:8EED  C2 74 8F            		JP NZ,.PL2
     761:  00:8EF0  21 3E F0            		LD HL,ChanA+CHNPRM_NtSkCn
     762:  00:8EF3  35                  		DEC [HL]
     763:  00:8EF4  20 4E               		JR NZ,.PL1B
     764:  00:8EF6  ED 4B 12 F0         		LD BC,[PT3_AdInPtA]
     765:  00:8EFA  0A                  		LD A,[BC]
     766:  00:8EFB  A7                  		AND A
     767:  00:8EFC  20 3B               		JR NZ,.PL1A
     768:  00:8EFE  57                  		LD D,A
     769:  00:8EFF  32 7E F0            		LD [Ns_Base],A
     770:  00:8F02  2A 03 F0            		LD HL,[PT3_CrPsPtr]
     771:  00:8F05  23                  		INC HL
     772:  00:8F06  7E                  		LD A,[HL]
     773:  00:8F07  3C                  		INC A
     774:  00:8F08  20 08               		JR NZ,.PLNLP
     775:  00:8F0A  CD 74 8A            		CALL CHECKLP
     776:  00:8F0D  2A 18 F0            		LD HL,[PT3_LPosPtr]
     777:  00:8F10  7E                  		LD A,[HL]
     778:  00:8F11  3C                  		INC A
     779:  00:8F12  22 03 F0            .PLNLP:	LD [PT3_CrPsPtr],HL
     780:  00:8F15  3D                  		DEC A
     781:  00:8F16  87                  		ADD A,A
     782:  00:8F17  5F                  		LD E,A
     783:  00:8F18  CB 12               		RL D
     784:  00:8F1A  2A 1A F0            		LD HL,[PT3_PatsPtr]
     785:  00:8F1D  19                  		ADD HL,DE
     786:  00:8F1E  ED 5B 01 F0         		LD DE,[PT3_MODADDR]
     787:  00:8F22  ED 73 0D F0         		LD [PT3_PSP],SP
     788:  00:8F26  F9                  		LD SP,HL
     789:  00:8F27  E1                  		POP HL
     790:  00:8F28  19                  		ADD HL,DE
     791:  00:8F29  44                  		LD B,H
     792:  00:8F2A  4D                  		LD C,L
     793:  00:8F2B  E1                  		POP HL
     794:  00:8F2C  19                  		ADD HL,DE
     795:  00:8F2D  22 14 F0            		LD [PT3_AdInPtB],HL
     796:  00:8F30  E1                  		POP HL
     797:  00:8F31  19                  		ADD HL,DE
     798:  00:8F32  22 16 F0            		LD [PT3_AdInPtC],HL
     799:  00:8F35  ED 7B 0D F0         		LD SP,[PT3_PSP]
     800:  00:8F39                      
     801:  00:8F39  DD 21 2F F0         .PL1A:		LD IX,ChanA+12
     802:  00:8F3D  CD 1C 8C            		CALL PTDECOD
     803:  00:8F40  ED 43 12 F0         		LD [PT3_AdInPtA],BC
     804:  00:8F44                      
     805:  00:8F44  21 5B F0            .PL1B:		LD HL,ChanB+CHNPRM_NtSkCn
     806:  00:8F47  35                  		DEC [HL]
     807:  00:8F48  20 0F               		JR NZ,.PL1C
     808:  00:8F4A  DD 21 4C F0         		LD IX,ChanB+12
     809:  00:8F4E  ED 4B 14 F0         		LD BC,[PT3_AdInPtB]
     810:  00:8F52  CD 1C 8C            		CALL PTDECOD
     811:  00:8F55  ED 43 14 F0         		LD [PT3_AdInPtB],BC
     812:  00:8F59                      
     813:  00:8F59  21 78 F0            .PL1C:		LD HL,ChanC+CHNPRM_NtSkCn
     814:  00:8F5C  35                  		DEC [HL]
     815:  00:8F5D  20 0F               		JR NZ,.PL1D
     816:  00:8F5F  DD 21 69 F0         		LD IX,ChanC+12
     817:  00:8F63  ED 4B 16 F0         		LD BC,[PT3_AdInPtC]
     818:  00:8F67  CD 1C 8C            		CALL PTDECOD
     819:  00:8F6A  ED 43 16 F0         		LD [PT3_AdInPtC],BC
     820:  00:8F6E                      
     821:  00:8F6E  3A 1C F0            .PL1D:		LD A,[PT3_Delay]
     822:  00:8F71  32 7A F0            		LD [DelyCnt],A
     823:  00:8F74                      
     824:  00:8F74  DD 21 23 F0         .PL2:		LD IX,ChanA
     825:  00:8F78  2A 40 F1            		LD HL,[AYREGS+AR_TonA]
     826:  00:8F7B  CD 8C 8D            		CALL CHREGS
     827:  00:8F7E  22 40 F1            		LD [AYREGS+AR_TonA],HL
     828:  00:8F81  3A 4A F1            		LD A,[AYREGS+AR_AmplC]
     829:  00:8F84  32 48 F1            		LD [AYREGS+AR_AmplA],A
     830:  00:8F87  DD 21 40 F0         		LD IX,ChanB
     831:  00:8F8B  2A 42 F1            		LD HL,[AYREGS+AR_TonB]
     832:  00:8F8E  CD 8C 8D            		CALL CHREGS
     833:  00:8F91  22 42 F1            		LD [AYREGS+AR_TonB],HL
     834:  00:8F94  3A 4A F1            		LD A,[AYREGS+AR_AmplC]
     835:  00:8F97  32 49 F1            		LD [AYREGS+AR_AmplB],A
     836:  00:8F9A  DD 21 5D F0         		LD IX,ChanC
     837:  00:8F9E  2A 44 F1            		LD HL,[AYREGS+AR_TonC]
     838:  00:8FA1  CD 8C 8D            		CALL CHREGS
     839:  00:8FA4  22 44 F1            		LD [AYREGS+AR_TonC],HL
     840:  00:8FA7                      
     841:  00:8FA7  2A 7E F0            		LD HL,[Ns_Base_AddToNs]
     842:  00:8FAA  7C                  		LD A,H
     843:  00:8FAB  85                  		ADD A,L
     844:  00:8FAC  32 46 F1            		LD [AYREGS+AR_Noise],A
     845:  00:8FAF                      
     846:  00:8FAF  3A 1D F0            		LD A,[PT3_AddToEn]
     847:  00:8FB2  5F                  		LD E,A
     848:  00:8FB3  87                  		ADD A,A
     849:  00:8FB4  9F                  		SBC A,A
     850:  00:8FB5  57                  		LD D,A
     851:  00:8FB6  2A 4E F1            		LD HL,[EnvBase]
     852:  00:8FB9  19                  		ADD HL,DE
     853:  00:8FBA  ED 5B 7B F0         		LD DE,[CurESld]
     854:  00:8FBE  19                  		ADD HL,DE
     855:  00:8FBF  22 4B F1            		LD [AYREGS+AR_Env],HL
     856:  00:8FC2                      
     857:  00:8FC2  AF                  		XOR A
     858:  00:8FC3  21 7D F0            		LD HL,CurEDel
     859:  00:8FC6  B6                  		OR [HL]
     860:  00:8FC7  C8                  		RET Z
     861:  00:8FC8  35                  		DEC [HL]
     862:  00:8FC9  C0                  		RET NZ
     863:  00:8FCA  3A 1E F0            		LD A,[PT3_Env_Del]
     864:  00:8FCD  77                  		LD [HL],A
     865:  00:8FCE  2A 1F F0            		LD HL,[PT3_ESldAdd]
     866:  00:8FD1  19                  		ADD HL,DE
     867:  00:8FD2  22 7B F0            		LD [CurESld],HL
     868:  00:8FD5  C9                  		RET
     869:  00:8FD6                      
     870:  00:8FD6  AF                  PT3_ROUT:	XOR A
     871:  00:8FD7                      	
     872:  00:8FD7                      ROUT_A0:	; --- FIXES BITS 6 AND 7 OF MIXER ---
     873:  00:8FD7  21 47 F1            		LD	HL,AYREGS+AR_Mixer
     874:  00:8FDA  CB FE               		set	7,[hl]
     875:  00:8FDC  CB B6               		res	6,[hl]
     876:  00:8FDE                      
     877:  00:8FDE  0E A0               		LD C,$A0
     878:  00:8FE0  21 40 F1            		LD HL,AYREGS
     879:  00:8FE3  ED 79               .LOUT:		OUT [C],A
     880:  00:8FE5  0C                  		INC C
     881:  00:8FE6  ED A3               		OUTI 
     882:  00:8FE8  0D                  		DEC C
     883:  00:8FE9  3C                  		INC A
     884:  00:8FEA  FE 0D               		CP 13
     885:  00:8FEC  20 F5               		JR NZ,.LOUT
     886:  00:8FEE  ED 79               		OUT [C],A
     887:  00:8FF0  7E                  		LD A,[HL]
     888:  00:8FF1  A7                  		AND A
     889:  00:8FF2  F8                  		RET M
     890:  00:8FF3  0C                  		INC C
     891:  00:8FF4  ED 79               		OUT [C],A
     892:  00:8FF6  C9                  		RET
     893:  00:8FF7                      
     894:  00:8FF7  64                  NT_DATA:	db (T_NEW_0-T1_)*2
     895:  00:8FF8  2A                  		db TCNEW_0-T_
     896:  00:8FF9  65                  		db (T_OLD_0-T1_)*2+1
     897:  00:8FFA  00                  		db TCOLD_0-T_
     898:  00:8FFB  01                  		db (T_NEW_1-T1_)*2+1
     899:  00:8FFC  0C                  		db TCNEW_1-T_
     900:  00:8FFD  01                  		db (T_OLD_1-T1_)*2+1
     901:  00:8FFE  0C                  		db TCOLD_1-T_
     902:  00:8FFF  94                  		db (T_NEW_2-T1_)*2
     903:  00:9000  35                  		db TCNEW_2-T_
     904:  00:9001  30                  		db (T_OLD_2-T1_)*2
     905:  00:9002  0E                  		db TCOLD_2-T_
     906:  00:9003  60                  		db (T_NEW_3-T1_)*2
     907:  00:9004  20                  		db TCNEW_3-T_
     908:  00:9005  60                  		db (T_OLD_3-T1_)*2
     909:  00:9006  21                  		db TCOLD_3-T_
     910:  00:9007                      
     911:  00:9007                      T_:
     912:  00:9007                      
     913:  00:9007                      TCOLD_0:	db $00+1,$04+1,$08+1,$0A+1,$0C+1,$0E+1,$12+1,$14+1
     913:  00:9007  01 05 09 0B 0D 0F 13 15 
     914:  00:900F  19 25 3D 00         		db $18+1,$24+1,$3C+1,0
     915:  00:9013                      TCNEW_1:	
     916:  00:9013  5D 00               TCOLD_1:	db $5C+1,0
     917:  00:9015                      TCOLD_2:	db $30+1,$36+1,$4C+1,$52+1,$5E+1,$70+1,$82,$8C,$9C
     917:  00:9015  31 37 4D 53 5F 71 82 8C 9C 
     918:  00:901E                      		db $9E,$A0,$A6,$A8,$AA,$AC,$AE,$AE,0
     918:  00:901E  9E A0 A6 A8 AA AC AE AE 00 
     919:  00:9027  57                  TCNEW_3:	db $56+1
     920:  00:9028                      TCOLD_3:	db $1E+1,$22+1,$24+1,$28+1,$2C+1,$2E+1,$32+1,$BE+1,0
     920:  00:9028  1F 23 25 29 2D 2F 33 BF 00 
     921:  00:9031                      TCNEW_0:	db $1C+1,$20+1,$22+1,$26+1,$2A+1,$2C+1,$30+1,$54+1
     921:  00:9031  1D 21 23 27 2B 2D 31 55 
     922:  00:9039  BD BF 00            		db $BC+1,$BE+1,0
     923:  00:903C                      TCNEW_2:	db $1A+1,$20+1,$24+1,$28+1,$2A+1,$3A+1,$4C+1,$5E+1
     923:  00:903C  1B 21 25 29 2B 3B 4D 5F 
     924:  00:9044  BB BD BF            		db $BA+1,$BC+1,$BE+1
     925:  00:9047                      
     926:  00:9047  00 01 00 90         EMPTYSAMORN: 	db 0,1,0,$90 ;delete $90 if you don't need default sample
     927:  00:904B                      
     928:  00:904B                      T_PACK:		; First 12 values of tone tables (packed)
     929:  00:904B  0D                  		db ($06EC*2)/256
     930:  00:904C  D8                  		db #d8
     931:  00:904D  69                  		db $0755-$06EC
     932:  00:904E  70                  		db $07C5-$0755
     933:  00:904F  76                  		db $083B-$07C5
     934:  00:9050  7D                  		db $08B8-$083B
     935:  00:9051  85                  		db $093D-$08B8
     936:  00:9052  8D                  		db $09CA-$093D
     937:  00:9053  95                  		db $0A5F-$09CA
     938:  00:9054  9D                  		db $0AFC-$0A5F
     939:  00:9055  A8                  		db $0BA4-$0AFC
     940:  00:9056  B1                  		db $0C55-$0BA4
     941:  00:9057  BB                  		db $0D10-$0C55
     942:  00:9058  0C                  		db ($066D*2)/256
     943:  00:9059  DA                  		db #da
     944:  00:905A  62                  		db $06CF-$066D
     945:  00:905B  68                  		db $0737-$06CF
     946:  00:905C  6D                  		db $07A4-$0737
     947:  00:905D  75                  		db $0819-$07A4
     948:  00:905E  7B                  		db $0894-$0819
     949:  00:905F  83                  		db $0917-$0894
     950:  00:9060  8A                  		db $09A1-$0917
     951:  00:9061  92                  		db $0A33-$09A1
     952:  00:9062  9C                  		db $0ACF-$0A33
     953:  00:9063  A4                  		db $0B73-$0ACF
     954:  00:9064  AF                  		db $0C22-$0B73
     955:  00:9065  B8                  		db $0CDA-$0C22
     956:  00:9066  0E                  		db ($0704*2)/256
     957:  00:9067  08                  		db #08
     958:  00:9068  6A                  		db $076E-$0704
     959:  00:9069  72                  		db $07E0-$076E
     960:  00:906A  78                  		db $0858-$07E0
     961:  00:906B  7E                  		db $08D6-$0858
     962:  00:906C  86                  		db $095C-$08D6
     963:  00:906D  90                  		db $09EC-$095C
     964:  00:906E  96                  		db $0A82-$09EC
     965:  00:906F  A0                  		db $0B22-$0A82
     966:  00:9070  AA                  		db $0BCC-$0B22
     967:  00:9071  B4                  		db $0C80-$0BCC
     968:  00:9072  BE                  		db $0D3E-$0C80
     969:  00:9073  0F                  		db ($07E0*2)/256
     970:  00:9074  C0                  		db #c0
     971:  00:9075  78                  		db $0858-$07E0
     972:  00:9076  88                  		db $08E0-$0858
     973:  00:9077  80                  		db $0960-$08E0
     974:  00:9078  90                  		db $09F0-$0960
     975:  00:9079  98                  		db $0A88-$09F0
     976:  00:907A  A0                  		db $0B28-$0A88
     977:  00:907B  B0                  		db $0BD8-$0B28
     978:  00:907C  A8                  		db $0C80-$0BD8
     979:  00:907D  E0                  		db $0D60-$0C80
     980:  00:907E  B0                  		db $0E10-$0D60
     981:  00:907F  E8                  		db $0EF8-$0E10
      61.  00:9080                      	include "ayFX-ROM_sjasm.asm"
       1:  00:9080                      		; --- ayFX REPLAYER v1.31 ---
       2:  00:9080                      
       3:  00:9080                      		; --- v1.31	Fixed bug on previous version, only PSG channel C worked
       4:  00:9080                      		; --- v1.3	Fixed volume and Relative volume versions on the same file, conditional compilation
       5:  00:9080                      		; ---		Support for dynamic or fixed channel allocation
       6:  00:9080                      		; --- v1.2f/r	ayFX bank support
       7:  00:9080                      		; --- v1.11f/r	If a frame volume is zero then no AYREGS update
       8:  00:9080                      		; --- v1.1f/r	Fixed volume for all ayFX streams
       9:  00:9080                      		; --- v1.1	Explicit priority (as suggested by AR)
      10:  00:9080                      		; --- v1.0f	Bug fixed (error when using noise)
      11:  00:9080                      		; --- v1.0	Initial release
      12:  00:9080                      
      13:  00:9080                      		; --- DEFINE AYFXRELATIVE AS 0 FOR FIXED VOLUME VERSION ---
      14:  00:9080                      		; --- DEFINE AYFXRELATIVE AS 1 FOR RELATIVE VOLUME VERSION ---
      15:  00:9080  (00:0000)           AYFXRELATIVE equ 0
      16:  00:9080                      
      17:  00:9080                      ayFX_SETUP:	; ---          ayFX replayer setup          ---
      18:  00:9080                      		; --- INPUT: HL -> pointer to the ayFX bank ---
      19:  00:9080  22 41 F2            		ld	[ayFX_BANK],hl			; Current ayFX bank
      20:  00:9083  3E 01               		ld	a,1				; a:=0
      21:  00:9085  32 40 F2            		ld	[ayFX_MODE],a			; Initial mode: fixed channel
      22:  00:9088  3C                  		inc	a				; Starting channel (=1)
      23:  00:9089  32 4A F2            		ld	[ayFX_CHANNEL],a		; Updated
      24:  00:908C                      ayFX_END:	; --- End of an ayFX stream ---
      25:  00:908C  3E FF               		ld	a,255				; Lowest ayFX priority
      26:  00:908E  32 43 F2            		ld	[ayFX_PRIORITY],a		; Priority saved (not playing ayFX stream)
      27:  00:9091  C9                  		ret					; Return
      28:  00:9092                      
      29:  00:9092                      ayFX_INIT:	; ---     INIT A NEW ayFX STREAM     ---
      30:  00:9092                      		; --- INPUT: A -> sound to be played ---
      31:  00:9092                      		; ---        C -> sound priority     ---
      32:  00:9092  C5                  		push	bc				; Store bc in stack
      33:  00:9093  D5                  		push	de				; Store de in stack
      34:  00:9094  E5                  		push	hl				; Store hl in stack
      35:  00:9095                      		; --- Check if the index is in the bank ---
      36:  00:9095  47                  		ld	b,a				; b:=a (new ayFX stream index)
      37:  00:9096  2A 41 F2            		ld	hl,[ayFX_BANK]			; Current ayFX BANK
      38:  00:9099  7E                  		ld	a,[hl]				; Number of samples in the bank
      39:  00:909A  B7                  		or	a				; If zero (means 256 samples)...
      40:  00:909B  28 06               		jr	z,.CHECK_PRI			; ...goto .CHECK_PRI
      41:  00:909D                      		; The bank has less than 256 samples
      42:  00:909D  78                  		ld	a,b				; a:=b (new ayFX stream index)
      43:  00:909E  BE                  		cp	[hl]				; If new index is not in the bank...
      44:  00:909F  3E 02               		ld	a,2				; a:=2 (error 2: Sample not in the bank)
      45:  00:90A1  30 21               		jr	nc,.INIT_END			; ...we can't init it
      46:  00:90A3                      .CHECK_PRI:	; --- Check if the new priority is lower than the current one ---
      47:  00:90A3                      		; ---   Remember: 0 = highest priority, 15 = lowest priority  ---
      48:  00:90A3  78                  		ld	a,b				; a:=b (new ayFX stream index)
      49:  00:90A4  3A 43 F2            		ld	a,[ayFX_PRIORITY]		; a:=Current ayFX stream priority
      50:  00:90A7  B9                  		cp	c				; If new ayFX stream priority is lower than current one...
      51:  00:90A8  3E 01               		ld	a,1				; a:=1 (error 1: A sample with higher priority is being played)
      52:  00:90AA  38 18               		jr	c,.INIT_END			; ...we don't start the new ayFX stream
      53:  00:90AC                      		; --- Set new priority ---
      54:  00:90AC  79                  		ld	a,c				; a:=New priority
      55:  00:90AD  E6 0F               		and	$0F				; We mask the priority
      56:  00:90AF  32 43 F2            		ld	[ayFX_PRIORITY],a		; new ayFX stream priority saved in RAM
      57:  00:90B2                      
      58:  00:90B2                      		IF ( AYFXRELATIVE == 1 )
      59:  00:90B2                    ~ 			; --- Volume adjust using PT3 volume table ---
      60:  00:90B2                    ~ 			ld	c,a				; c:=New priority (fixed)
      61:  00:90B2                    ~ 			ld	a,15				; a:=15
      62:  00:90B2                    ~ 			sub	c				; a:=15-New priority = relative volume
      63:  00:90B2                    ~ 			jr	z,.INIT_NOSOUND		; If priority is 15 -> no sound output (volume is zero)
      64:  00:90B2                    ~ 			add	a,a				; a:=a*2
      65:  00:90B2                    ~ 			add	a,a				; a:=a*4
      66:  00:90B2                    ~ 			add	a,a				; a:=a*8
      67:  00:90B2                    ~ 			add	a,a				; a:=a*16
      68:  00:90B2                    ~ 			ld	e,a				; e:=a
      69:  00:90B2                    ~ 			ld	d,0				; de:=a
      70:  00:90B2                    ~ 			ld	hl,VT_				; hl:=PT3 volume table
      71:  00:90B2                    ~ 			add	hl,de				; hl is a pointer to the relative volume table
      72:  00:90B2                    ~ 			ld	[ayFX_VT],hl			; Save pointer
      73:  00:90B2                    ~ 		ENDIF
      74:  00:90B2                      
      75:  00:90B2                      		; --- Calculate the pointer to the new ayFX stream ---
      76:  00:90B2  ED 5B 41 F2         		ld	de,[ayFX_BANK]			; de:=Current ayFX bank
      77:  00:90B6  13                  		inc	de				; de points to the increments table of the bank
      78:  00:90B7  68                  		ld	l,b				; l:=b (new ayFX stream index)
      79:  00:90B8  26 00               		ld	h,0				; hl:=b (new ayFX stream index)
      80:  00:90BA  29                  		add	hl,hl				; hl:=hl*2
      81:  00:90BB  19                  		add	hl,de				; hl:=hl+de (hl points to the correct increment)
      82:  00:90BC  5E                  		ld	e,[hl]				; e:=lower byte of the increment
      83:  00:90BD  23                  		inc	hl				; hl points to the higher byte of the correct increment
      84:  00:90BE  56                  		ld	d,[hl]				; de:=increment
      85:  00:90BF  19                  		add	hl,de				; hl:=hl+de (hl points to the new ayFX stream)
      86:  00:90C0  22 44 F2            		ld	[ayFX_POINTER],hl		; Pointer saved in RAM
      87:  00:90C3  AF                  		xor	a				; a:=0 (no errors)
      88:  00:90C4  E1                  .INIT_END:	pop	hl				; Retrieve hl from stack
      89:  00:90C5  D1                  		pop	de				; Retrieve de from stack
      90:  00:90C6  C1                  		pop	bc				; Retrieve bc from stack
      91:  00:90C7  C9                  		ret					; Return
      92:  00:90C8                      
      93:  00:90C8                      		IF ( AYFXRELATIVE == 1 )
      94:  00:90C8                    ~ .INIT_NOSOUND:	; --- Init a sample with relative volume zero -> no sound output ---
      95:  00:90C8                    ~ 			ld	a,255				; Lowest ayFX priority
      96:  00:90C8                    ~ 			ld	[ayFX_PRIORITY],a		; Priority saved (not playing ayFX stream)
      97:  00:90C8                    ~ 			jr	.INIT_END			; Jumps to .INIT_END
      98:  00:90C8                    ~ 		ENDIF
      99:  00:90C8                      
     100:  00:90C8                      ayFX_PLAY:	; --- PLAY A FRAME OF AN ayFX STREAM ---
     101:  00:90C8  3A 43 F2            		ld	a,[ayFX_PRIORITY]		; a:=Current ayFX stream priority
     102:  00:90CB  B7                  		or	a				; If priority has bit 7 on...
     103:  00:90CC  F8                  		ret	m				; ...return
     104:  00:90CD                      		; --- Calculate next ayFX channel (if needed) ---
     105:  00:90CD  3A 40 F2            		ld	a,[ayFX_MODE]			; ayFX mode
     106:  00:90D0  E6 01               		and	1				; If bit0=0 (fixed channel)...
     107:  00:90D2  28 08               		jr	z,.TAKECB			; ...skip channel changing
     108:  00:90D4  21 4A F2            		ld	hl,ayFX_CHANNEL			; Old ayFX playing channel
     109:  00:90D7  35                  		dec	[hl]				; New ayFX playing channel
     110:  00:90D8  20 02               		jr	nz,.TAKECB			; If not zero jump to .TAKECB
     111:  00:90DA  36 03               		ld	[hl],3				; If zero -> set channel 3
     112:  00:90DC                      .TAKECB:	; --- Extract control byte from stream ---
     113:  00:90DC  2A 44 F2            		ld	hl,[ayFX_POINTER]		; Pointer to the current ayFX stream
     114:  00:90DF  4E                  		ld	c,[hl]				; c:=Control byte
     115:  00:90E0  23                  		inc	hl				; Increment pointer
     116:  00:90E1                      		; --- Check if there's new tone on stream ---
     117:  00:90E1  CB 69               		bit	5,c				; If bit 5 c is off...
     118:  00:90E3  28 08               		jr	z,.CHECK_NN			; ...jump to .CHECK_NN (no new tone)
     119:  00:90E5                      		; --- Extract new tone from stream ---
     120:  00:90E5  5E                  		ld	e,[hl]				; e:=lower byte of new tone
     121:  00:90E6  23                  		inc	hl				; Increment pointer
     122:  00:90E7  56                  		ld	d,[hl]				; d:=higher byte of new tone
     123:  00:90E8  23                  		inc	hl				; Increment pointer
     124:  00:90E9  ED 53 46 F2         		ld	[ayFX_TONE],de			; ayFX tone updated
     125:  00:90ED                      .CHECK_NN:	; --- Check if there's new noise on stream ---
     126:  00:90ED  CB 71               		bit	6,c				; if bit 6 c is off...
     127:  00:90EF  28 09               		jr	z,.SETPOINTER			; ...jump to .SETPOINTER (no new noise)
     128:  00:90F1                      		; --- Extract new noise from stream ---
     129:  00:90F1  7E                  		ld	a,[hl]				; a:=New noise
     130:  00:90F2  23                  		inc	hl				; Increment pointer
     131:  00:90F3  FE 20               		cp	$20				; If it's an illegal value of noise (used to mark end of stream)...
     132:  00:90F5  28 95               		jr.	z,ayFX_END			; ...jump to ayFX_END
     133:  00:90F7  32 48 F2            		ld	[ayFX_NOISE],a			; ayFX noise updated
     134:  00:90FA                      .SETPOINTER:	; --- Update ayFX pointer ---
     135:  00:90FA  22 44 F2            		ld	[ayFX_POINTER],hl		; Update ayFX stream pointer
     136:  00:90FD                      		; --- Extract volume ---
     137:  00:90FD  79                  		ld	a,c				; a:=Control byte
     138:  00:90FE  E6 0F               		and	$0F				; lower nibble
     139:  00:9100                      
     140:  00:9100                      		IF ( AYFXRELATIVE == 1 )
     141:  00:9100                    ~ 			; --- Fix the volume using PT3 Volume Table ---
     142:  00:9100                    ~ 			ld	hl,[ayFX_VT]			; hl:=Pointer to relative volume table
     143:  00:9100                    ~ 			ld	e,a				; e:=a (ayFX volume)
     144:  00:9100                    ~ 			ld	d,0				; d:=0
     145:  00:9100                    ~ 			add	hl,de				; hl:=hl+de (hl points to the relative volume of this frame
     146:  00:9100                    ~ 			ld	a,[hl]				; a:=ayFX relative volume
     147:  00:9100                    ~ 			or	a				; If relative volume is zero...
     148:  00:9100                    ~ 		ENDIF
     149:  00:9100                      
     150:  00:9100  32 49 F2            		ld	[ayFX_VOLUME],a			; ayFX volume updated
     151:  00:9103  C8                  		ret	z				; ...return (don't copy ayFX values in to AYREGS)
     152:  00:9104                      		; -------------------------------------
     153:  00:9104                      		; --- COPY ayFX VALUES IN TO AYREGS ---
     154:  00:9104                      		; -------------------------------------
     155:  00:9104                      		; --- Set noise channel ---
     156:  00:9104  CB 79               		bit	7,c				; If noise is off...
     157:  00:9106  20 06               		jr	nz,.SETMASKS			; ...jump to .SETMASKS
     158:  00:9108  3A 48 F2            		ld	a,[ayFX_NOISE]			; ayFX noise value
     159:  00:910B  32 46 F1            		ld	[AYREGS+6],a			; copied in to AYREGS (noise channel)
     160:  00:910E                      .SETMASKS:	; --- Set mixer masks ---
     161:  00:910E  79                  		ld	a,c				; a:=Control byte
     162:  00:910F  E6 90               		and	$90				; Only bits 7 and 4 (noise and tone mask for psg reg 7)
     163:  00:9111  FE 90               		cp	$90				; If no noise and no tone...
     164:  00:9113  C8                  		ret	z				; ...return (don't copy ayFX values in to AYREGS)
     165:  00:9114                      		; --- Copy ayFX values in to ARYREGS ---
     166:  00:9114  0F                  		rrca					; Rotate a to the right (1 TIME)
     167:  00:9115  0F                  		rrca					; Rotate a to the right (2 TIMES) (OR mask)
     168:  00:9116  16 DB               		ld	d,$DB				; d:=Mask for psg mixer (AND mask)
     169:  00:9118                      		; --- Dump to correct channel ---
     170:  00:9118  21 4A F2            		ld	hl,ayFX_CHANNEL			; Next ayFX playing channel
     171:  00:911B  46                  		ld	b,[hl]				; Channel counter
     172:  00:911C                      .CHK1:		; --- Check if playing channel was 1 ---
     173:  00:911C  10 0D               		djnz	.CHK2				; Decrement and jump if channel was not 1
     174:  00:911E                      .PLAY_C:	; --- Play ayFX stream on channel C ---
     175:  00:911E  CD 4D 91            		call	.SETMIXER			; Set PSG mixer value (returning a=ayFX volume and hl=ayFX tone)
     176:  00:9121  32 4A F1            		ld	[AYREGS+10],a			; Volume copied in to AYREGS (channel C volume)
     177:  00:9124  CB 51               		bit	2,c				; If tone is off...
     178:  00:9126  C0                  		ret	nz				; ...return
     179:  00:9127  22 44 F1            		ld	[AYREGS+4],hl			; copied in to AYREGS (channel C tone)
     180:  00:912A  C9                  		ret					; Return
     181:  00:912B                      .CHK2:		; --- Check if playing channel was 2 ---
     182:  00:912B  CB 0A               		rrc	d				; Rotate right AND mask
     183:  00:912D  0F                  		rrca					; Rotate right OR mask
     184:  00:912E  10 0D               		djnz	.CHK3				; Decrement and jump if channel was not 2
     185:  00:9130                      .PLAY_B:	; --- Play ayFX stream on channel B ---
     186:  00:9130  CD 4D 91            		call	.SETMIXER			; Set PSG mixer value (returning a=ayFX volume and hl=ayFX tone)
     187:  00:9133  32 49 F1            		ld	[AYREGS+9],a			; Volume copied in to AYREGS (channel B volume)
     188:  00:9136  CB 49               		bit	1,c				; If tone is off...
     189:  00:9138  C0                  		ret	nz				; ...return
     190:  00:9139  22 42 F1            		ld	[AYREGS+2],hl			; copied in to AYREGS (channel B tone)
     191:  00:913C  C9                  		ret					; Return
     192:  00:913D                      .CHK3:		; --- Check if playing channel was 3 ---
     193:  00:913D  CB 0A               		rrc	d				; Rotate right AND mask
     194:  00:913F  0F                  		rrca					; Rotate right OR mask
     195:  00:9140                      .PLAY_A:	; --- Play ayFX stream on channel A ---
     196:  00:9140  CD 4D 91            		call	.SETMIXER			; Set PSG mixer value (returning a=ayFX volume and hl=ayFX tone)
     197:  00:9143  32 48 F1            		ld	[AYREGS+8],a			; Volume copied in to AYREGS (channel A volume)
     198:  00:9146  CB 41               		bit	0,c				; If tone is off...
     199:  00:9148  C0                  		ret	nz				; ...return
     200:  00:9149  22 40 F1            		ld	[AYREGS+0],hl			; copied in to AYREGS (channel A tone)
     201:  00:914C  C9                  		ret					; Return
     202:  00:914D                      .SETMIXER:	; --- Set PSG mixer value ---
     203:  00:914D  4F                  		ld	c,a				; c:=OR mask
     204:  00:914E  3A 47 F1            		ld	a,[AYREGS+7]			; a:=PSG mixer value
     205:  00:9151  A2                  		and	d				; AND mask
     206:  00:9152  B1                  		or	c				; OR mask
     207:  00:9153  32 47 F1            		ld	[AYREGS+7],a			; PSG mixer value updated
     208:  00:9156  3A 49 F2            		ld	a,[ayFX_VOLUME]			; a:=ayFX volume value
     209:  00:9159  2A 46 F2            		ld	hl,[ayFX_TONE]			; ayFX tone value
     210:  00:915C  C9                  		ret					; Return
     211:  00:915D                      
     212:  00:915D                      		IF ( AYFXRELATIVE == 1 )
     213:  00:915D                    ~ 			; --- UNCOMMENT THIS IF YOU DON'T USE THIS REPLAYER WITH PT3 REPLAYER ---
     214:  00:915D                    ~ 		;VT_:	.INCBIN	"VT.BIN"
     215:  00:915D                    ~ 			; --- UNCOMMENT THIS IF YOU DON'T USE THIS REPLAYER WITH PT3 REPLAYER ---
     216:  00:915D                    ~ 		ENDIF
      62.  00:915D                      	
      63.  00:915D                      	
      64.  00:915D                      
      65.  00:915D                      ;;=====================================================
      66.  00:915D                      ;;DEFINICIÓN DE CANTIONES Y EFECTOS DE SONIDO
      67.  00:915D                      ;;=====================================================		
      68.  00:915D                      song:
      69.  00:915D  (0968)              	incbin "bloodytears_castlevania.99"
      70.  00:9AC5                      	
      71.  00:9AC5                      sfx_bank:
      72.  00:9AC5  (004B)              	incbin "demo.afb"
      73.  00:9B10                      
     311   00:9B10                      	
     312   00:9B10                      	include "subr_ayudas.asm"
       1.  00:9B10                      ;;=====================================================
       2.  00:9B10                      ;;SUBRUTINAS MANEJO DE OBJETOS AYUDA
       3.  00:9B10                      ;;=====================================================	
       4.  00:9B10                      
       5.  00:9B10                      ;;=====================================================
       6.  00:9B10                      ;;INICIALIZA_AYUDAS
       7.  00:9B10                      ;;=====================================================	
       8.  00:9B10                      ; función: 	inicializa las variables de estructuras de ayuda del array lista_ayudas
       9.  00:9B10                      ; entrada: 	datos_delasdistintasayudas, variable estructura_ayuda_ayudaquesea
      10.  00:9B10                      ; salida: 	lista_ayudas
      11.  00:9B10                      ; toca:		HL, DE, BC
      12.  00:9B10                      inicializa_ayudas:
      13.  00:9B10                      	;oración
      14.  00:9B10  DD 21 DF A9         	LD		IX, ayuda_oracion
      15.  00:9B14  DD 36 00 00         	LD		(IX + 0), INACTIVA			
      16.  00:9B18  21 B8 AA            	LD		HL, array_oracionon
      17.  00:9B1B  DD 74 01            	LD		(IX + 1), H
      18.  00:9B1E  DD 75 02            	LD		(IX + 2), L
      19.  00:9B21  21 BC AA            	LD		HL, array_oracionoff
      20.  00:9B24  DD 74 03            	LD		(IX + 3), H
      21.  00:9B27  DD 75 04            	LD		(IX + 4), L
      22.  00:9B2A  DD 36 05 A3         	LD		(IX + 5), POSORACION
      23.  00:9B2E  DD 36 06 20         	LD		(IX + 6), POSORACIONX
      24.  00:9B32  DD 36 07 70         	LD		(IX + 7), POSAYUDASY	
      25.  00:9B36  21 24 9C            	LD		HL, accion_oracion
      26.  00:9B39  DD 74 08            	LD		(IX + 8), H
      27.  00:9B3C  DD 75 09            	LD		(IX + 9), L
      28.  00:9B3F                      	
      29.  00:9B3F                      	;cruz
      30.  00:9B3F  21 59 AA            	LD		HL, datos_cruz
      31.  00:9B42  11 EF A9            	LD		DE, ayuda_cruz
      32.  00:9B45  01 10 00            	LD		BC, 16;#ESTRUCTURA_AYUDA ;equivale a 16.. el tamaño de la estructura en bytes
      33.  00:9B48  ED B0               	LDIR
      34.  00:9B4A                      	
      35.  00:9B4A                      	;agua bendita
      36.  00:9B4A  21 63 AA            	LD		HL, datos_aguabendita
      37.  00:9B4D  11 FF A9            	LD		DE, ayuda_aguabendita
      38.  00:9B50  CD 78 9B            	CALL	carga_datos_ayuda
      39.  00:9B53                      		
      40.  00:9B53                      	;armadura
      41.  00:9B53  21 74 AA            	LD		HL, datos_armadura
      42.  00:9B56  11 0F AA            	LD		DE, ayuda_armadura
      43.  00:9B59  CD 78 9B            	CALL	carga_datos_ayuda
      44.  00:9B5C                      		
      45.  00:9B5C                      	;planta
      46.  00:9B5C  21 85 AA            	LD		HL, datos_planta
      47.  00:9B5F  11 1F AA            	LD		DE, ayuda_planta
      48.  00:9B62  CD 78 9B            	CALL	carga_datos_ayuda
      49.  00:9B65                      		
      50.  00:9B65                      	;vida extra
      51.  00:9B65  21 96 AA            	LD		HL, datos_vidaextra
      52.  00:9B68  11 2F AA            	LD		DE, ayuda_vidaextra
      53.  00:9B6B  CD 78 9B            	CALL	carga_datos_ayuda
      54.  00:9B6E                      		
      55.  00:9B6E                      	;ballesta
      56.  00:9B6E  21 A7 AA            	LD		HL, datos_ballesta
      57.  00:9B71  11 3F AA            	LD		DE, ayuda_ballesta
      58.  00:9B74  CD 78 9B            	CALL	carga_datos_ayuda
      59.  00:9B77                      fin_resetea_ayudas:
      60.  00:9B77  C9                  	RET
      61.  00:9B78                      	
      62.  00:9B78                      
      63.  00:9B78                      ;;=====================================================
      64.  00:9B78                      ;;CARGA_DATOS_AYUDA
      65.  00:9B78                      ;;=====================================================	
      66.  00:9B78                      ; función: 	carga los datos de la ayuda de una variable dentro de la variable estructura (más carga y espacio que rellenar a pelo desde IX en adelante pero más simple)
      67.  00:9B78                      ;entrada
      68.  00:9B78                      ;  hl: origen de datos
      69.  00:9B78                      ;  de: destino de datos
      70.  00:9B78                      ; salida: 	-
      71.  00:9B78                      ; toca:		HL, DE, BC
      72.  00:9B78                      carga_datos_ayuda:
      73.  00:9B78  01 10 00            	LD		BC, 16;ESTRUCTURA_AYUDA ;equivale a 16.. el tamaño de la estructura en bytes
      74.  00:9B7B  ED B0               	LDIR
      75.  00:9B7D                      fin_carga_datos_ayuda:
      76.  00:9B7D  C9                  	RET
      77.  00:9B7E                      
      78.  00:9B7E                      
      79.  00:9B7E                      
      80.  00:9B7E                      ;;=====================================================
      81.  00:9B7E                      ;;PINTA_OBJ_AYUDA
      82.  00:9B7E                      ;;=====================================================	
      83.  00:9B7E                      ; función: 	pinta un objeto de tipo ayuda que se le pase por referencia IX y el tipo en A
      84.  00:9B7E                      ; entrada: 	IX - puntero a objeto a mostrar, A - si está on u off
      85.  00:9B7E                      ; salida: 	-
      86.  00:9B7E                      ; toca:		AF, HL, BC, DE
      87.  00:9B7E                      pinta_obj_ayuda:
      88.  00:9B7E                      	;se recibe objeto desde fuera, por ejmplo LD IX, ayuda_oracion
      89.  00:9B7E                      
      90.  00:9B7E  B7                  	OR		 A
      91.  00:9B7F  CA 8E 9B            	JP		 Z,.dibujooff
      92.  00:9B82                      .dibujoon:	
      93.  00:9B82  DD 66 01            	LD		 H, (IX + 1)
      94.  00:9B85  DD 6E 02            	LD		 L, (IX + 2)
      95.  00:9B88  22 79 85            	LD		(wordaux2), HL
      96.  00:9B8B  C3 97 9B            	JP		.param_wordaux2
      97.  00:9B8E                      .dibujooff:
      98.  00:9B8E  DD 66 03            	LD		 H, (IX + 3)
      99.  00:9B91  DD 6E 04            	LD		 L, (IX + 4)
     100.  00:9B94  22 79 85            	LD		(wordaux2), HL
     101.  00:9B97                      
     102.  00:9B97                      .param_wordaux2:	
     103.  00:9B97  21 00 19            	LD		HL, TILMAP + 256	;calcula posición en tilemap + 256 por colocarse siempre en bank1
     104.  00:9B9A  DD 7E 05            	LD		 A, (IX + 5)
     105.  00:9B9D  CD 3E 82            	CALL	suma_A_HL
     106.  00:9BA0  22 77 85            	LD		(wordaux1), HL		;pongo el valor en wordaux1
     107.  00:9BA3                      
     108.  00:9BA3                      .filasycols:
     109.  00:9BA3  3E 02               	LD		 A, 2				;equivale a LD	A,2 porque A ya valía 1
     110.  00:9BA5  32 7B 85            	LD		(byteaux1), A	;nº de filas
     111.  00:9BA8  32 7C 85            	LD		(byteaux2), A	;nº de columnas
     112.  00:9BAB                      	
     113.  00:9BAB  C3 37 85            	JP		pinta_array
     114.  00:9BAE                      fin_pinta_obj_ayuda:
     115.  00:9BAE                      
     116.  00:9BAE                      
     117.  00:9BAE                      ;;=====================================================
     118.  00:9BAE                      ;;PINTA_AYUDAS_HABITACIÓN
     119.  00:9BAE                      ;;=====================================================	
     120.  00:9BAE                      ; función: 	examina el byte con las ayudas y pinta las que estén seleccionadas según variable habitacion_extras
     121.  00:9BAE                      ; entrada: 	habitacion_extras
     122.  00:9BAE                      ; salida: 	-
     123.  00:9BAE                      pinta_ayudas_habitacion:
     124.  00:9BAE                      .examina_oracion:
     125.  00:9BAE  3A 8C A6            	LD		 A, (habitacion_extras)
     126.  00:9BB1  CB 7F               	BIT		 7,A
     127.  00:9BB3  CA BF 9B            	JP		 Z,.examina_cruz
     128.  00:9BB6  DD 21 DF A9         	LD		IX, ayuda_oracion
     129.  00:9BBA  3E 01               	LD		 A, ACTIVA
     130.  00:9BBC  CD 7E 9B            	CALL	pinta_obj_ayuda
     131.  00:9BBF                      .examina_cruz:
     132.  00:9BBF  3A 8C A6            	LD		 A, (habitacion_extras)
     133.  00:9BC2  CB 77               	BIT		 6,A
     134.  00:9BC4  CA D0 9B            	JP		 Z,.examina_aguabendita
     135.  00:9BC7  DD 21 EF A9         	LD		IX, ayuda_cruz
     136.  00:9BCB  3E 01               	LD		 A, ACTIVA
     137.  00:9BCD  CD 7E 9B            	CALL	pinta_obj_ayuda
     138.  00:9BD0                      .examina_aguabendita:
     139.  00:9BD0  3A 8C A6            	LD		 A, (habitacion_extras)
     140.  00:9BD3  CB 6F               	BIT		 5,A
     141.  00:9BD5  CA E1 9B            	JP		 Z,.examina_armadura
     142.  00:9BD8  DD 21 FF A9         	LD		IX, ayuda_aguabendita
     143.  00:9BDC  3E 01               	LD		 A, ACTIVA
     144.  00:9BDE  CD 7E 9B            	CALL	pinta_obj_ayuda
     145.  00:9BE1                      .examina_armadura:
     146.  00:9BE1  3A 8C A6            	LD		 A, (habitacion_extras)
     147.  00:9BE4  CB 67               	BIT		 4,A
     148.  00:9BE6  CA F2 9B            	JP		 Z,.examina_planta
     149.  00:9BE9  DD 21 0F AA         	LD		IX, ayuda_armadura
     150.  00:9BED  3E 01               	LD		 A, ACTIVA
     151.  00:9BEF  CD 7E 9B            	CALL	pinta_obj_ayuda
     152.  00:9BF2                      .examina_planta:
     153.  00:9BF2  3A 8C A6            	LD		 A, (habitacion_extras)
     154.  00:9BF5  CB 5F               	BIT		 3,A
     155.  00:9BF7  CA 03 9C            	JP		 Z,.examina_vidaextra
     156.  00:9BFA  DD 21 1F AA         	LD		IX, ayuda_planta
     157.  00:9BFE  3E 01               	LD		 A, ACTIVA
     158.  00:9C00  CD 7E 9B            	CALL	pinta_obj_ayuda
     159.  00:9C03                      .examina_vidaextra:
     160.  00:9C03  3A 8C A6            	LD		 A, (habitacion_extras)
     161.  00:9C06  CB 57               	BIT		 2,A
     162.  00:9C08  CA 14 9C            	JP		 Z,.examina_ballesta
     163.  00:9C0B  DD 21 2F AA         	LD		IX, ayuda_vidaextra
     164.  00:9C0F  3E 01               	LD		 A, ACTIVA
     165.  00:9C11  CD 7E 9B            	CALL	pinta_obj_ayuda
     166.  00:9C14                      .examina_ballesta:
     167.  00:9C14  3A 8C A6            	LD		 A, (habitacion_extras)
     168.  00:9C17  CB 4F               	BIT		 1,A
     169.  00:9C19  C8                  	RET		 Z
     170.  00:9C1A  DD 21 3F AA         	LD		IX, ayuda_ballesta
     171.  00:9C1E  3E 01               	LD		 A, ACTIVA
     172.  00:9C20  CD 7E 9B            	CALL	pinta_obj_ayuda
     173.  00:9C23                      fin_pinta_ayudas_habitacion:
     174.  00:9C23  C9                  	RET
     175.  00:9C24                      
     176.  00:9C24                      
     177.  00:9C24                      
     178.  00:9C24                      ;;=====================================================
     179.  00:9C24                      ;;ACCION_ORACION
     180.  00:9C24                      ;;=====================================================	
     181.  00:9C24                      ; función: 	
     182.  00:9C24                      ; entrada: 	
     183.  00:9C24                      ; salida: 	-
     184.  00:9C24                      accion_oracion:
     185.  00:9C24                      fin_accion_oracion:
     186.  00:9C24  C9                  	RET
     187.  00:9C25                      	
     188.  00:9C25                      
     189.  00:9C25                      ;;=====================================================
     190.  00:9C25                      ;;ACCION_CRUZ
     191.  00:9C25                      ;;=====================================================	
     192.  00:9C25                      ; función: 	
     193.  00:9C25                      ; entrada: 	
     194.  00:9C25                      ; salida: 	-
     195.  00:9C25                      accion_cruz:
     196.  00:9C25                      fin_accion_cruz:
     197.  00:9C25  C9                  	RET
     198.  00:9C26                      
     199.  00:9C26                      
     200.  00:9C26                      ;;=====================================================
     201.  00:9C26                      ;;ACCION_AGUA
     202.  00:9C26                      ;;=====================================================	
     203.  00:9C26                      ; función: 	
     204.  00:9C26                      ; entrada: 	
     205.  00:9C26                      ; salida: 	-
     206.  00:9C26                      accion_agua:
     207.  00:9C26                      fin_accion_agua:
     208.  00:9C26  C9                  	RET
     209.  00:9C27                      
     210.  00:9C27                      
     211.  00:9C27                      ;;=====================================================
     212.  00:9C27                      ;;ACCION_ARMADURA
     213.  00:9C27                      ;;=====================================================	
     214.  00:9C27                      ; función: 	
     215.  00:9C27                      ; entrada: 	
     216.  00:9C27                      ; salida: 	-
     217.  00:9C27                      accion_armadura:
     218.  00:9C27                      fin_accion_armadura:
     219.  00:9C27  C9                  	RET
     220.  00:9C28                      
     221.  00:9C28                      
     222.  00:9C28                      ;;=====================================================
     223.  00:9C28                      ;;ACCION_PLANTA
     224.  00:9C28                      ;;=====================================================	
     225.  00:9C28                      ; función: 	
     226.  00:9C28                      ; entrada: 	
     227.  00:9C28                      ; salida: 	-
     228.  00:9C28                      accion_planta:
     229.  00:9C28                      fin_accion_planta:
     230.  00:9C28  C9                  	RET
     231.  00:9C29                      
     232.  00:9C29                      
     233.  00:9C29                      ;;=====================================================
     234.  00:9C29                      ;;ACCION_VIDAEXTRA
     235.  00:9C29                      ;;=====================================================	
     236.  00:9C29                      ; función: 	
     237.  00:9C29                      ; entrada: 	
     238.  00:9C29                      ; salida: 	-
     239.  00:9C29                      accion_vidaextra:
     240.  00:9C29                      fin_accion_vidaextra:
     241.  00:9C29  C9                  	RET
     242.  00:9C2A                      
     243.  00:9C2A                      
     244.  00:9C2A                      ;;=====================================================
     245.  00:9C2A                      ;;ACCION_BALLESTA
     246.  00:9C2A                      ;;=====================================================	
     247.  00:9C2A                      ; función: 	
     248.  00:9C2A                      ; entrada: 	
     249.  00:9C2A                      ; salida: 	-
     250.  00:9C2A                      accion_ballesta:
     251.  00:9C2A                      fin_accion_ballesta:
     252.  00:9C2A  C9                  	RET
     253.  00:9C2B                      
     254.  00:9C2B                      
     313   00:9C2B                      	
     314   00:9C2B                      
     315   00:9C2B                      ;;=====================================================
     316   00:9C2B                      ;;DEFINICIÓN DE SUBRUTINAS DE FERNANDO PARA COMPRESIÓN Y SONIDO
     317   00:9C2B                      ;;=====================================================
     318   00:9C2B                      ;Este include lleva la rutina de descompresión de ROM/RAM a VRAM de pletter
     319   00:9C2B                      ;Está adaptada de la original a sjasm
     320   00:9C2B                      ;	HL = RAM/ROM source	; DE = VRAM destination
     321   00:9C2B                      depack_VRAM:
     322   00:9C2B                      	include "PL_VRAM_Depack_SJASM.asm"
       1.  00:9C2B                      ;-----------------------------------------------------------
       2.  00:9C2B                      ; Pletter v0.5b VRAM Depacker v1.1 - 16Kb version
       3.  00:9C2B                      ; HL = RAM/ROM source ; DE = VRAM destination
       4.  00:9C2B                      ;-----------------------------------------------------------
       5.  00:9C2B  F3                  	di
       6.  00:9C2C                      
       7.  00:9C2C                      ; VRAM address setup
       8.  00:9C2C  7B                  	ld	a,e
       9.  00:9C2D  D3 99               	out	[099h],a
      10.  00:9C2F  7A                  	ld	a,d
      11.  00:9C30  F6 40               	or	040h
      12.  00:9C32  D3 99               	out	[099h],a
      13.  00:9C34                      
      14.  00:9C34                      ; Initialization
      15.  00:9C34  7E                  	ld	a,[hl]
      16.  00:9C35  23                  	inc	hl
      17.  00:9C36  D9                  	exx
      18.  00:9C37  11 00 00            	ld	de,0
      19.  00:9C3A  87                  	add	a,a
      20.  00:9C3B  3C                  	inc	a
      21.  00:9C3C  CB 13               	rl	e
      22.  00:9C3E  87                  	add	a,a
      23.  00:9C3F  CB 13               	rl	e
      24.  00:9C41  87                  	add	a,a
      25.  00:9C42  CB 13               	rl	e
      26.  00:9C44  CB 13               	rl	e
      27.  00:9C46  21 FD 9C            	ld	hl,modes
      28.  00:9C49  19                  	add	hl,de
      29.  00:9C4A  5E                  	ld	e,[hl]
      30.  00:9C4B  DD 6B               	ld	ixl,e
      31.  00:9C4D  23                  	inc	hl
      32.  00:9C4E  5E                  	ld	e,[hl]
      33.  00:9C4F  DD 63               	ld	ixh,e
      34.  00:9C51  1E 01               	ld	e,1
      35.  00:9C53  D9                  	exx
      36.  00:9C54  FD 21 5D 9C         	ld	iy,loop
      37.  00:9C58                      
      38.  00:9C58                      ; Main depack loop
      39.  00:9C58  0E 98               literal:ld	c,098h
      40.  00:9C5A  ED A3               	outi
      41.  00:9C5C  13                  	inc	de
      42.  00:9C5D  87                  loop:	add	a,a
      43.  00:9C5E  CC F1 9C              	call	z,getbit
      44.  00:9C61  30 F5               	jr	nc,literal
      45.  00:9C63                      
      46.  00:9C63                      ; Compressed data
      47.  00:9C63  D9                  	exx
      48.  00:9C64  62                  	ld	h,d
      49.  00:9C65  6B                  	ld	l,e
      50.  00:9C66  87                  getlen: add	a,a
      51.  00:9C67  CC F5 9C            	call	z,getbitexx
      52.  00:9C6A  30 1D               	jr	nc,lenok
      53.  00:9C6C  87                  lus:	add	a,a
      54.  00:9C6D  CC F5 9C            	call	z,getbitexx
      55.  00:9C70  ED 6A               	adc	hl,hl
      56.  00:9C72  D8                  	ret	c
      57.  00:9C73  87                  	add	a,a
      58.  00:9C74  CC F5 9C            	call	z,getbitexx
      59.  00:9C77  30 10               	jr	nc,lenok
      60.  00:9C79  87                  	add	a,a
      61.  00:9C7A  CC F5 9C            	call	z,getbitexx
      62.  00:9C7D  ED 6A               	adc	hl,hl
      63.  00:9C7F  DA FB 9C            	jp	c,Depack_out
      64.  00:9C82  87                  	add	a,a
      65.  00:9C83  CC F5 9C            	call	z,getbitexx
      66.  00:9C86  DA 6C 9C            	jp	c,lus
      67.  00:9C89  23                  lenok:  inc	hl
      68.  00:9C8A  D9                  	exx
      69.  00:9C8B  4E                  	ld	c,[hl]
      70.  00:9C8C  23                  	inc	hl
      71.  00:9C8D  06 00               	ld	b,0
      72.  00:9C8F  CB 79               	bit	7,c
      73.  00:9C91  CA C4 9C            	jp	z,offsok
      74.  00:9C94  DD E9               	jp	ix
      75.  00:9C96                      
      76.  00:9C96  87                  mode7:  add	a,a
      77.  00:9C97  CC F1 9C              	call	z,getbit
      78.  00:9C9A  CB 10               	rl	b
      79.  00:9C9C  87                  mode6:	add	a,a
      80.  00:9C9D  CC F1 9C              	call	z,getbit
      81.  00:9CA0  CB 10               	rl	b
      82.  00:9CA2  87                  mode5:  add	a,a
      83.  00:9CA3  CC F1 9C              	call	z,getbit
      84.  00:9CA6  CB 10               	rl	b
      85.  00:9CA8  87                  mode4:  add	a,a
      86.  00:9CA9  CC F1 9C              	call	z,getbit
      87.  00:9CAC  CB 10               	rl	b
      88.  00:9CAE  87                  mode3:  add	a,a
      89.  00:9CAF  CC F1 9C              	call	z,getbit
      90.  00:9CB2  CB 10               	rl	b
      91.  00:9CB4  87                  mode2:	add	a,a
      92.  00:9CB5  CC F1 9C              	call	z,getbit
      93.  00:9CB8  CB 10               	rl	b
      94.  00:9CBA  87                  	add	a,a
      95.  00:9CBB  CC F1 9C              	call	z,getbit
      96.  00:9CBE  30 04               	jr	nc,offsok
      97.  00:9CC0  B7                  	or	a
      98.  00:9CC1  04                  	inc	b
      99.  00:9CC2  CB B9               	res	7,c
     100.  00:9CC4  03                  offsok: inc	bc
     101.  00:9CC5  E5                  	push	hl
     102.  00:9CC6  D9                  	exx
     103.  00:9CC7  E5                  	push	hl
     104.  00:9CC8  D9                  	exx
     105.  00:9CC9  6B                  	ld	l,e
     106.  00:9CCA  62                  	ld	h,d
     107.  00:9CCB  ED 42               	sbc	hl,bc
     108.  00:9CCD  C1                  	pop	bc
     109.  00:9CCE  F5                  	push	af
     110.  00:9CCF  7D                  .loop:	ld	a,l
     111.  00:9CD0  D3 99               	out	[099h],a
     112.  00:9CD2  7C                  	ld	a,h
     113.  00:9CD3  00                  	nop                     ; VDP timing
     114.  00:9CD4  D3 99               	out	[099h],a
     115.  00:9CD6  00                  	nop                     ; VDP timing
     116.  00:9CD7  DB 98               	in	a,[098h]
     117.  00:9CD9  08                  	ex	af,af'
     118.  00:9CDA  7B                  	ld	a,e
     119.  00:9CDB  00                  	nop			; VDP timing
     120.  00:9CDC  D3 99               	out	[099h],a
     121.  00:9CDE  7A                  	ld	a,d
     122.  00:9CDF  F6 40               	or	040h
     123.  00:9CE1  D3 99               	out	[099h],a
     124.  00:9CE3  08                  	ex	af,af'
     125.  00:9CE4  00                  	nop			; VDP timing
     126.  00:9CE5  D3 98               	out	[098h],a
     127.  00:9CE7  13                  	inc	de
     128.  00:9CE8  ED A1               	cpi
     129.  00:9CEA  EA CF 9C            	jp	pe,.loop
     130.  00:9CED  F1                  	pop	af
     131.  00:9CEE  E1                  	pop	hl
     132.  00:9CEF  FD E9               	jp	iy
     133.  00:9CF1                      
     134.  00:9CF1  7E                  getbit: ld	a,[hl]
     135.  00:9CF2  23                  	inc	hl
     136.  00:9CF3  17                  	rla
     137.  00:9CF4  C9                  	ret
     138.  00:9CF5                      
     139.  00:9CF5                      getbitexx:
     140.  00:9CF5  D9                  	exx
     141.  00:9CF6  7E                  	ld	a,[hl]
     142.  00:9CF7  23                  	inc	hl
     143.  00:9CF8  D9                  	exx
     144.  00:9CF9  17                  	rla
     145.  00:9CFA  C9                  	ret
     146.  00:9CFB                      
     147.  00:9CFB                      ; Depacker exit
     148.  00:9CFB                      Depack_out:
     149.  00:9CFB  FB                  	ei
     150.  00:9CFC  C9                  	ret
     151.  00:9CFD                      
     152.  00:9CFD                      modes:
     153.  00:9CFD  C4 9C               	dw	offsok
     154.  00:9CFF  B4 9C               	dw	mode2
     155.  00:9D01  AE 9C               	dw	mode3
     156.  00:9D03  A8 9C               	dw	mode4
     157.  00:9D05  A2 9C               	dw	mode5
     158.  00:9D07  9C 9C               	dw	mode6
     159.  00:9D09  96 9C               	dw	mode7
     323   00:9D0B                      
     324   00:9D0B                      
     325   00:9D0B                      	
     326   00:9D0B                      ;;=====================================================
     327   00:9D0B                      ;;DEFINICIÓN DE ESTRUCTURAS
     328   00:9D0B                      ;;=====================================================		
     329   00:9D0B                      	include "estructuras.asm"
       1.  00:9D0B                      ;;=====================================================
       2.  00:9D0B                      ;;DEFINICIÓN DE ESTRUCTURAS
       3.  00:9D0B                      ;;=====================================================
       4.  00:9D0B                      
       5.  00:9D0B                      ;crear estructura
       6.  00:9D0B                      
       7.  00:9D0B                      	STRUCT ESTRUCTURA_PUNTOMIRA
       8.  00:9D0B                    < posx			DB		POSXPM
       9.  00:9D0B                    < posy			DB		POSYPM
      10.  00:9D0B                    < escena			DB		0	;valores porsibles 0 (blanco+rojo en punto de mira) y NEG 0 (al revés)
      11.  00:9D0B                    < velocidad		DB		0
      12.  00:9D0B                    < boton2_pressed  DB		0
      13.  00:9D0B                    < cadencia		DB		5	;nº de veces que se ejecutará el disparo antes de ejecutar un disparo real (porque cuando se pulsa la tecl dispara 3 ó 4 veces de rápido que va)
      14.  00:9D0B                    < ; al final he decidido (ya que el punto de mira es el prota) que lo relacionado con el prota vaya en esta estructura
      15.  00:9D0B                    < pm_aux1			DB		0	;para llegar a los 16 campos
      16.  00:9D0B                    < pm_aux2			DB		0	;para llegar a los 16 campos
      17.  00:9D0B                    < pm_aux3			DB		0	;para llegar a los 16 campos
      18.  00:9D0B                    < pm_aux4			DB		0	;para llegar a los 16 campos
      19.  00:9D0B                    < pm_aux5			DB		0	;para llegar a los 16 campos
      20.  00:9D0B                    < pm_aux6			DB		0	;para llegar a los 16 campos
      21.  00:9D0B                    < pm_aux7			DB		0	;para llegar a los 16 campos
      22.  00:9D0B                    < pm_aux8			DB		0	;para llegar a los 16 campos
      23.  00:9D0B                    < pm_aux9			DB		0	;para llegar a los 16 campos
      24.  00:9D0B                    < pm_aux10		DB		0	;para llegar a los 16 campos
      25.  00:9D0B                    < 	ENDSTRUCT;ESTRUCTURA_PUNTOMIRA
      26.  00:9D0B                      
      27.  00:9D0B                      	
      28.  00:9D0B                      	STRUCT ESTRUCTURA_ENEMIGO
      29.  00:9D0B                    < tipo				DB		0	;(0 serpiente por ejemplo) #FF muerto o no existe
      30.  00:9D0B                    < posx				DB		5
      31.  00:9D0B                    < posy				DB		50
      32.  00:9D0B                    < color				DB		5
      33.  00:9D0B                    < escena				DB		0
      34.  00:9D0B                    < contador_siguiente_escena	DB	0
      35.  00:9D0B                    < reset_contador		DB		0
      36.  00:9D0B                    < dano				DB		0	;daño
      37.  00:9D0B                    < energia				DB		0	;energía del enemigo... si llega a 0 => existe <- 0
      38.  00:9D0B                    < ;indica el nº de sprite a mostrar y si está compuesto por uno o dos sprites y si están en horizontal o vertical
      39.  00:9D0B                    < ver_hor				DB		0
      40.  00:9D0B                    < manejador_dibujo 	DW		0
      41.  00:9D0B                    < en_aux3				DB		0
      42.  00:9D0B                    < en_aux4				DB		0
      43.  00:9D0B                    < 	ENDSTRUCT;ESTRUCTURA_ENEMIGO
      44.  00:9D0B                      	
      45.  00:9D0B                      	STRUCT ESTRUCTURA_AYUDA		;vidas extra, plantas de curación de energía, reliquias				
      46.  00:9D0B                    < activo				DB		0	;0 no activo <>0 activo 											0
      47.  00:9D0B                    < postilemem_nousado	DW		0	;pos en memoria ver array_ayudas de cómo se mostrarán (wordaux2)	1,2
      48.  00:9D0B                    < postilemem_usado	DW		0	;pos en memoria ver array_ayudas de cómo se mostrarán (wordaux2)	3,4
      49.  00:9D0B                    < pospantalla			DB		0	;pos en pantalla (memoria en el banco 1 se le suma 256 + TILEMAP) (wordaux1)	5
      50.  00:9D0B                    < posx				DB		0	;pos del pixel central (esquina superior + 8x)						6
      51.  00:9D0B                    < posy				DB		112	;pos del pixel central (esquina superior + 8y) (para toas igual)	7
      52.  00:9D0B                    < puntero_accion		DW		0	;subrutina que indica la acción si se dispara en el objeto			8,9
      53.  00:9D0B                    < ayu_aux1			DB		0	;relleno
      54.  00:9D0B                    < ayu_aux2			DB		0	;relleno
      55.  00:9D0B                    < ayu_aux3			DB		0	;relleno
      56.  00:9D0B                    < ayu_aux4			DB		0	;relleno
      57.  00:9D0B                    < ayu_aux5			DB		0	;relleno
      58.  00:9D0B                    < ayu_aux6			DB		0	;relleno
      59.  00:9D0B                    < 	ENDSTRUCT;ESTRUCTURA_AYUDA
      60.  00:9D0B                      
      61.  00:9D0B                      
      62.  00:9D0B                      	STRUCT ESTRUCTURA_ANTORCHA
      63.  00:9D0B                    < activo				DB		0	;0 no activa <>0 activo
      64.  00:9D0B                    < postilemem_antor1	DW		0	;pos en memoria ver array_antorcha de cómo se mostrará (wordaux2)	1,2
      65.  00:9D0B                    < pospantalla_antor1	DB		0	;pos en pantalla (memoria en el banco 1 se le suma 256 + TILEMAP) (wordaux1)	3
      66.  00:9D0B                    < pospantalla_antor2	DB		0	;pos en pantalla (memoria en el banco 1 se le suma 256 + TILEMAP) (wordaux1)	4
      67.  00:9D0B                    < escena				DB		0	;(va entre 0 y 1 - 0=>llama1 y llama2 o 1=>llama2 y llama1	7 - tiles 196 y 197)	5
      68.  00:9D0B                    < cont_sig_escena		DB		10	;	6
      69.  00:9D0B                    < 	ENDSTRUCT;ESTRUCTURA_ANTORCHA
      70.  00:9D0B                      
      71.  00:9D0B                      	STRUCT ESTRUCTURA_ESQUELETO
      72.  00:9D0B                    < activo				DB		0	;0 no activa <>0 activo
      73.  00:9D0B                    < postilemem_antor1	DW		0	;pos en memoria ver array_antorcha de cómo se mostrará (wordaux2)	1,2
      74.  00:9D0B                    < pospantalla_esquel1	DB		0	;pos en pantalla (memoria en el banco 1 se le suma 256 + TILEMAP) (wordaux1)	3
      75.  00:9D0B                    < pospantalla_esquel2	DB		0	;pos en pantalla (memoria en el banco 1 se le suma 256 + TILEMAP) (wordaux1)	4
      76.  00:9D0B                    < escena				DB		0	;(va entre 0 y 4 - tiles 164, 165, 164, 166)	5
      77.  00:9D0B                    < cont_sig_escena		DB		0	;	6
      78.  00:9D0B                    < 	ENDSTRUCT;ESTRUCTURA_ESQUELETO
      79.  00:9D0B                      	
      80.  00:9D0B                      	STRUCT ESTRUCTURA_PUERTA	;también servirá para la escalera
      81.  00:9D0B                    < activa				DB		0	;0 no activa <>0 activo
      82.  00:9D0B                    < posx				DB		0	;punto x de la puerta para cuando se dispare encima
      83.  00:9D0B                    < posy				DB		0	;punto y de la puerta para cuando se dispare encima
      84.  00:9D0B                    < radiox				DB		0	;radio x de la puerta para cuando se dispare encima
      85.  00:9D0B                    < radioy				DB		0	;radio y de la puerta para cuando se dispare encima
      86.  00:9D0B                    < accion				DW		0	;función para acción de cada tipo de puerta
      87.  00:9D0B                    < tiles_puerta		DW		0	;puntero al array con los tiles de las puertas para wordaux2
      88.  00:9D0B                    < pos_en_tilemap		DW		0	;calcula posición en tilemap para wordaux1
      89.  00:9D0B                    < alto				DB		0	;alto en tiles del dibujo de la puerta (filas)
      90.  00:9D0B                    < ancho				DB		0	;ancho en tiles del dibujo de la puerta (columnas)
      91.  00:9D0B                    < 	ENDSTRUCT;ESTRUCTURA_PUERTA
      92.  00:9D0B                      
      93.  00:9D0B                      
      94.  00:9D0B                      
      95.  00:9D0B                      
      96.  00:9D0B                      
      97.  00:9D0B                      
     330   00:9D0B                      	
     331   00:9D0B                      ;;=====================================================
     332   00:9D0B                      ;;DEFINICIÓN DE VARIABLES
     333   00:9D0B                      ;;=====================================================		
     334   00:9D0B                      	include "sprites.asm"
       1.  00:9D0B                      ;;=====================================================
       2.  00:9D0B                      ;;DEFINICIÓN DE SPRITES
       3.  00:9D0B                      ;;=====================================================	
       4.  00:9D0B                      
       5.  00:9D0B                      
       6.  00:9D0B                      ;; NOTA:
       7.  00:9D0B                      ;~ sprite_reliquia_oracion: on/off
       8.  00:9D0B                      ;~ sprite_reliquia_cruz: on/off
       9.  00:9D0B                      ;~ sprite_reliquia_agua: on/off
      10.  00:9D0B                      ;~ sprite_peto: on/off
      11.  00:9D0B                      ;~ sprite_planta: on/off
      12.  00:9D0B                      ;~ sprite_vida_extra: on/off
      13.  00:9D0B                      ;~ sprite_ballesta_mejorada: on/off
      14.  00:9D0B                      
      15.  00:9D0B                      ;~ iban a ser sprites pero por falta de recursos serán tiles
      16.  00:9D0B                      
      17.  00:9D0B                      
      18.  00:9D0B                      sprites_pantantalla:
      19.  00:9D0B                      
      20.  00:9D0B                      ;; PARTE 1: SPRITES COMUNES
      21.  00:9D0B                      
      22.  00:9D0B                      sprites_comunes:
      23.  00:9D0B                      sprite_punto_mira_1:	;color 8
      24.  00:9D0B                      	db #FF,#FF,#C0,#C0,#C0,#C0,#C0,#C0
      24.  00:9D0B  FF FF C0 C0 C0 C0 C0 C0 
      25.  00:9D13                      	db #C0,#C0,#C0,#C0,#C0,#C0,#FF,#FF
      25.  00:9D13  C0 C0 C0 C0 C0 C0 FF FF 
      26.  00:9D1B                      	db #FF,#FF,#03,#03,#03,#03,#03,#03
      26.  00:9D1B  FF FF 03 03 03 03 03 03 
      27.  00:9D23                      	db #03,#03,#03,#03,#03,#03,#FF,#FF
      27.  00:9D23  03 03 03 03 03 03 FF FF 
      28.  00:9D2B                      	
      29.  00:9D2B                      sprite_punto_mira_2: 	;color 15
      30.  00:9D2B                      	db #00,#00,#00,#00,#0F,#0F,#0C,#0C
      30.  00:9D2B  00 00 00 00 0F 0F 0C 0C 
      31.  00:9D33                      	db #0C,#0C,#0F,#0F,#00,#00,#00,#00
      31.  00:9D33  0C 0C 0F 0F 00 00 00 00 
      32.  00:9D3B                      	db #00,#00,#00,#00,#F0,#F0,#30,#30
      32.  00:9D3B  00 00 00 00 F0 F0 30 30 
      33.  00:9D43                      	db #30,#30,#F0,#F0,#00,#00,#00,#00
      33.  00:9D43  30 30 F0 F0 00 00 00 00 
      34.  00:9D4B                      	
      35.  00:9D4B                      sprite_punto_mira_1_mejorado:
      36.  00:9D4B                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      36.  00:9D4B  FF FF FF FF FF FF FF FF 
      37.  00:9D53                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      37.  00:9D53  FF FF FF FF FF FF FF FF 
      38.  00:9D5B                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      38.  00:9D5B  FF FF FF FF FF FF FF FF 
      39.  00:9D63                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      39.  00:9D63  FF FF FF FF FF FF FF FF 
      40.  00:9D6B                      
      41.  00:9D6B                      sprite_punto_mira_2_mejorado:
      42.  00:9D6B                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      42.  00:9D6B  FF FF FF FF FF FF FF FF 
      43.  00:9D73                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      43.  00:9D73  FF FF FF FF FF FF FF FF 
      44.  00:9D7B                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      44.  00:9D7B  FF FF FF FF FF FF FF FF 
      45.  00:9D83                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      45.  00:9D83  FF FF FF FF FF FF FF FF 
      46.  00:9D8B                      	
      47.  00:9D8B                      sprite_explosion_1:
      48.  00:9D8B                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      48.  00:9D8B  FF FF FF FF FF FF FF FF 
      49.  00:9D93                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      49.  00:9D93  FF FF FF FF FF FF FF FF 
      50.  00:9D9B                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      50.  00:9D9B  FF FF FF FF FF FF FF FF 
      51.  00:9DA3                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF	
      51.  00:9DA3  FF FF FF FF FF FF FF FF 
      52.  00:9DAB                      
      53.  00:9DAB                      sprite_explosion_2:
      54.  00:9DAB                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      54.  00:9DAB  FF FF FF FF FF FF FF FF 
      55.  00:9DB3                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      55.  00:9DB3  FF FF FF FF FF FF FF FF 
      56.  00:9DBB                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      56.  00:9DBB  FF FF FF FF FF FF FF FF 
      57.  00:9DC3                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF	
      57.  00:9DC3  FF FF FF FF FF FF FF FF 
      58.  00:9DCB                      fin_sprites_comunes:
      59.  00:9DCB                      
      60.  00:9DCB                      ;; PARTE 2: SPRITES NO COMUNES
      61.  00:9DCB                      
      62.  00:9DCB                      ;; ARAÑA
      63.  00:9DCB                      	
      64.  00:9DCB                      sprite_arana1_1:
      65.  00:9DCB                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      65.  00:9DCB  FF FF FF FF FF FF FF FF 
      66.  00:9DD3                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      66.  00:9DD3  FF FF FF FF FF FF FF FF 
      67.  00:9DDB                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      67.  00:9DDB  FF FF FF FF FF FF FF FF 
      68.  00:9DE3                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      68.  00:9DE3  FF FF FF FF FF FF FF FF 
      69.  00:9DEB                      	
      70.  00:9DEB                      sprite_arana1_2:
      71.  00:9DEB                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      71.  00:9DEB  FF FF FF FF FF FF FF FF 
      72.  00:9DF3                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      72.  00:9DF3  FF FF FF FF FF FF FF FF 
      73.  00:9DFB                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      73.  00:9DFB  FF FF FF FF FF FF FF FF 
      74.  00:9E03                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      74.  00:9E03  FF FF FF FF FF FF FF FF 
      75.  00:9E0B                      
      76.  00:9E0B                      ;; MURCIELAGO
      77.  00:9E0B                      	
      78.  00:9E0B                      sprite_murcielago1_1:
      79.  00:9E0B                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      79.  00:9E0B  FF FF FF FF FF FF FF FF 
      80.  00:9E13                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      80.  00:9E13  FF FF FF FF FF FF FF FF 
      81.  00:9E1B                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      81.  00:9E1B  FF FF FF FF FF FF FF FF 
      82.  00:9E23                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      82.  00:9E23  FF FF FF FF FF FF FF FF 
      83.  00:9E2B                      	
      84.  00:9E2B                      sprite_murcielago1_2:
      85.  00:9E2B                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      85.  00:9E2B  FF FF FF FF FF FF FF FF 
      86.  00:9E33                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      86.  00:9E33  FF FF FF FF FF FF FF FF 
      87.  00:9E3B                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      87.  00:9E3B  FF FF FF FF FF FF FF FF 
      88.  00:9E43                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF	
      88.  00:9E43  FF FF FF FF FF FF FF FF 
      89.  00:9E4B                      
      90.  00:9E4B                      ;; SERPIENTE
      91.  00:9E4B                      
      92.  00:9E4B                      sprite_serpiente1_1:
      93.  00:9E4B                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      93.  00:9E4B  FF FF FF FF FF FF FF FF 
      94.  00:9E53                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      94.  00:9E53  FF FF FF FF FF FF FF FF 
      95.  00:9E5B                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      95.  00:9E5B  FF FF FF FF FF FF FF FF 
      96.  00:9E63                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      96.  00:9E63  FF FF FF FF FF FF FF FF 
      97.  00:9E6B                      	
      98.  00:9E6B                      sprite_serpiente1_2:
      99.  00:9E6B                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      99.  00:9E6B  FF FF FF FF FF FF FF FF 
     100.  00:9E73                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     100.  00:9E73  FF FF FF FF FF FF FF FF 
     101.  00:9E7B                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     101.  00:9E7B  FF FF FF FF FF FF FF FF 
     102.  00:9E83                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     102.  00:9E83  FF FF FF FF FF FF FF FF 
     103.  00:9E8B                      	
     104.  00:9E8B                      sprite_serpiente2_1:
     105.  00:9E8B                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     105.  00:9E8B  FF FF FF FF FF FF FF FF 
     106.  00:9E93                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     106.  00:9E93  FF FF FF FF FF FF FF FF 
     107.  00:9E9B                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     107.  00:9E9B  FF FF FF FF FF FF FF FF 
     108.  00:9EA3                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     108.  00:9EA3  FF FF FF FF FF FF FF FF 
     109.  00:9EAB                      	
     110.  00:9EAB                      sprite_serpiente2_2:
     111.  00:9EAB                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     111.  00:9EAB  FF FF FF FF FF FF FF FF 
     112.  00:9EB3                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     112.  00:9EB3  FF FF FF FF FF FF FF FF 
     113.  00:9EBB                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     113.  00:9EBB  FF FF FF FF FF FF FF FF 
     114.  00:9EC3                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     114.  00:9EC3  FF FF FF FF FF FF FF FF 
     115.  00:9ECB                      
     116.  00:9ECB                      ;; ZOMBI
     117.  00:9ECB                      
     118.  00:9ECB                      sprite_zombi1_1_1:
     119.  00:9ECB                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     119.  00:9ECB  FF FF FF FF FF FF FF FF 
     120.  00:9ED3                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     120.  00:9ED3  FF FF FF FF FF FF FF FF 
     121.  00:9EDB                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     121.  00:9EDB  FF FF FF FF FF FF FF FF 
     122.  00:9EE3                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     122.  00:9EE3  FF FF FF FF FF FF FF FF 
     123.  00:9EEB                      
     124.  00:9EEB                      sprite_zombi1_2_1:
     125.  00:9EEB                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     125.  00:9EEB  FF FF FF FF FF FF FF FF 
     126.  00:9EF3                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     126.  00:9EF3  FF FF FF FF FF FF FF FF 
     127.  00:9EFB                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     127.  00:9EFB  FF FF FF FF FF FF FF FF 
     128.  00:9F03                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     128.  00:9F03  FF FF FF FF FF FF FF FF 
     129.  00:9F0B                      	
     130.  00:9F0B                      sprite_zombi1_3_1:
     131.  00:9F0B                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     131.  00:9F0B  FF FF FF FF FF FF FF FF 
     132.  00:9F13                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     132.  00:9F13  FF FF FF FF FF FF FF FF 
     133.  00:9F1B                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     133.  00:9F1B  FF FF FF FF FF FF FF FF 
     134.  00:9F23                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     134.  00:9F23  FF FF FF FF FF FF FF FF 
     135.  00:9F2B                      	
     136.  00:9F2B                      sprite_zombi1_4_1:
     137.  00:9F2B                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     137.  00:9F2B  FF FF FF FF FF FF FF FF 
     138.  00:9F33                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     138.  00:9F33  FF FF FF FF FF FF FF FF 
     139.  00:9F3B                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     139.  00:9F3B  FF FF FF FF FF FF FF FF 
     140.  00:9F43                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     140.  00:9F43  FF FF FF FF FF FF FF FF 
     141.  00:9F4B                      	
     142.  00:9F4B                      sprite_zombi1_1_2:
     143.  00:9F4B                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     143.  00:9F4B  FF FF FF FF FF FF FF FF 
     144.  00:9F53                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     144.  00:9F53  FF FF FF FF FF FF FF FF 
     145.  00:9F5B                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     145.  00:9F5B  FF FF FF FF FF FF FF FF 
     146.  00:9F63                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     146.  00:9F63  FF FF FF FF FF FF FF FF 
     147.  00:9F6B                      
     148.  00:9F6B                      sprite_zombi1_2_2:
     149.  00:9F6B                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     149.  00:9F6B  FF FF FF FF FF FF FF FF 
     150.  00:9F73                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     150.  00:9F73  FF FF FF FF FF FF FF FF 
     151.  00:9F7B                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     151.  00:9F7B  FF FF FF FF FF FF FF FF 
     152.  00:9F83                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     152.  00:9F83  FF FF FF FF FF FF FF FF 
     153.  00:9F8B                      	
     154.  00:9F8B                      sprite_zombi1_3_2:
     155.  00:9F8B                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     155.  00:9F8B  FF FF FF FF FF FF FF FF 
     156.  00:9F93                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     156.  00:9F93  FF FF FF FF FF FF FF FF 
     157.  00:9F9B                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     157.  00:9F9B  FF FF FF FF FF FF FF FF 
     158.  00:9FA3                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     158.  00:9FA3  FF FF FF FF FF FF FF FF 
     159.  00:9FAB                      	
     160.  00:9FAB                      sprite_zombi1_4_2:
     161.  00:9FAB                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     161.  00:9FAB  FF FF FF FF FF FF FF FF 
     162.  00:9FB3                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     162.  00:9FB3  FF FF FF FF FF FF FF FF 
     163.  00:9FBB                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     163.  00:9FBB  FF FF FF FF FF FF FF FF 
     164.  00:9FC3                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     164.  00:9FC3  FF FF FF FF FF FF FF FF 
     165.  00:9FCB                      	
     166.  00:9FCB                      sprite_zombi2_1_1:
     167.  00:9FCB                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     167.  00:9FCB  FF FF FF FF FF FF FF FF 
     168.  00:9FD3                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     168.  00:9FD3  FF FF FF FF FF FF FF FF 
     169.  00:9FDB                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     169.  00:9FDB  FF FF FF FF FF FF FF FF 
     170.  00:9FE3                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     170.  00:9FE3  FF FF FF FF FF FF FF FF 
     171.  00:9FEB                      
     172.  00:9FEB                      sprite_zombi2_2_1:
     173.  00:9FEB                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     173.  00:9FEB  FF FF FF FF FF FF FF FF 
     174.  00:9FF3                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     174.  00:9FF3  FF FF FF FF FF FF FF FF 
     175.  00:9FFB                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     175.  00:9FFB  FF FF FF FF FF FF FF FF 
     176.  00:A003                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     176.  00:A003  FF FF FF FF FF FF FF FF 
     177.  00:A00B                      	
     178.  00:A00B                      sprite_zombi2_3_1:
     179.  00:A00B                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     179.  00:A00B  FF FF FF FF FF FF FF FF 
     180.  00:A013                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     180.  00:A013  FF FF FF FF FF FF FF FF 
     181.  00:A01B                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     181.  00:A01B  FF FF FF FF FF FF FF FF 
     182.  00:A023                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     182.  00:A023  FF FF FF FF FF FF FF FF 
     183.  00:A02B                      	
     184.  00:A02B                      sprite_zombi2_4_1:
     185.  00:A02B                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     185.  00:A02B  FF FF FF FF FF FF FF FF 
     186.  00:A033                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     186.  00:A033  FF FF FF FF FF FF FF FF 
     187.  00:A03B                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     187.  00:A03B  FF FF FF FF FF FF FF FF 
     188.  00:A043                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     188.  00:A043  FF FF FF FF FF FF FF FF 
     189.  00:A04B                      	
     190.  00:A04B                      sprite_zombi2_1_2:
     191.  00:A04B                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     191.  00:A04B  FF FF FF FF FF FF FF FF 
     192.  00:A053                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     192.  00:A053  FF FF FF FF FF FF FF FF 
     193.  00:A05B                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     193.  00:A05B  FF FF FF FF FF FF FF FF 
     194.  00:A063                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     194.  00:A063  FF FF FF FF FF FF FF FF 
     195.  00:A06B                      
     196.  00:A06B                      sprite_zombi2_2_2:
     197.  00:A06B                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     197.  00:A06B  FF FF FF FF FF FF FF FF 
     198.  00:A073                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     198.  00:A073  FF FF FF FF FF FF FF FF 
     199.  00:A07B                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     199.  00:A07B  FF FF FF FF FF FF FF FF 
     200.  00:A083                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     200.  00:A083  FF FF FF FF FF FF FF FF 
     201.  00:A08B                      	
     202.  00:A08B                      sprite_zombi2_3_2:
     203.  00:A08B                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     203.  00:A08B  FF FF FF FF FF FF FF FF 
     204.  00:A093                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     204.  00:A093  FF FF FF FF FF FF FF FF 
     205.  00:A09B                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     205.  00:A09B  FF FF FF FF FF FF FF FF 
     206.  00:A0A3                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     206.  00:A0A3  FF FF FF FF FF FF FF FF 
     207.  00:A0AB                      	
     208.  00:A0AB                      sprite_zombi2_4_2:
     209.  00:A0AB                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     209.  00:A0AB  FF FF FF FF FF FF FF FF 
     210.  00:A0B3                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     210.  00:A0B3  FF FF FF FF FF FF FF FF 
     211.  00:A0BB                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     211.  00:A0BB  FF FF FF FF FF FF FF FF 
     212.  00:A0C3                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     212.  00:A0C3  FF FF FF FF FF FF FF FF 
     213.  00:A0CB                      	
     214.  00:A0CB                      ;; CABALLERO
     215.  00:A0CB                      
     216.  00:A0CB                      sprite_caballero1_1_1:
     217.  00:A0CB                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     217.  00:A0CB  FF FF FF FF FF FF FF FF 
     218.  00:A0D3                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     218.  00:A0D3  FF FF FF FF FF FF FF FF 
     219.  00:A0DB                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     219.  00:A0DB  FF FF FF FF FF FF FF FF 
     220.  00:A0E3                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     220.  00:A0E3  FF FF FF FF FF FF FF FF 
     221.  00:A0EB                      
     222.  00:A0EB                      sprite_caballero1_2_1:
     223.  00:A0EB                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     223.  00:A0EB  FF FF FF FF FF FF FF FF 
     224.  00:A0F3                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     224.  00:A0F3  FF FF FF FF FF FF FF FF 
     225.  00:A0FB                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     225.  00:A0FB  FF FF FF FF FF FF FF FF 
     226.  00:A103                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     226.  00:A103  FF FF FF FF FF FF FF FF 
     227.  00:A10B                      	
     228.  00:A10B                      sprite_caballero1_3_1:
     229.  00:A10B                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     229.  00:A10B  FF FF FF FF FF FF FF FF 
     230.  00:A113                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     230.  00:A113  FF FF FF FF FF FF FF FF 
     231.  00:A11B                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     231.  00:A11B  FF FF FF FF FF FF FF FF 
     232.  00:A123                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     232.  00:A123  FF FF FF FF FF FF FF FF 
     233.  00:A12B                      	
     234.  00:A12B                      sprite_caballero1_4_1:
     235.  00:A12B                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     235.  00:A12B  FF FF FF FF FF FF FF FF 
     236.  00:A133                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     236.  00:A133  FF FF FF FF FF FF FF FF 
     237.  00:A13B                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     237.  00:A13B  FF FF FF FF FF FF FF FF 
     238.  00:A143                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     238.  00:A143  FF FF FF FF FF FF FF FF 
     239.  00:A14B                      	
     240.  00:A14B                      sprite_caballero1_1_2:
     241.  00:A14B                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     241.  00:A14B  FF FF FF FF FF FF FF FF 
     242.  00:A153                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     242.  00:A153  FF FF FF FF FF FF FF FF 
     243.  00:A15B                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     243.  00:A15B  FF FF FF FF FF FF FF FF 
     244.  00:A163                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     244.  00:A163  FF FF FF FF FF FF FF FF 
     245.  00:A16B                      
     246.  00:A16B                      sprite_caballero1_2_2:
     247.  00:A16B                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     247.  00:A16B  FF FF FF FF FF FF FF FF 
     248.  00:A173                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     248.  00:A173  FF FF FF FF FF FF FF FF 
     249.  00:A17B                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     249.  00:A17B  FF FF FF FF FF FF FF FF 
     250.  00:A183                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     250.  00:A183  FF FF FF FF FF FF FF FF 
     251.  00:A18B                      	
     252.  00:A18B                      sprite_caballero1_3_2:
     253.  00:A18B                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     253.  00:A18B  FF FF FF FF FF FF FF FF 
     254.  00:A193                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     254.  00:A193  FF FF FF FF FF FF FF FF 
     255.  00:A19B                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     255.  00:A19B  FF FF FF FF FF FF FF FF 
     256.  00:A1A3                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     256.  00:A1A3  FF FF FF FF FF FF FF FF 
     257.  00:A1AB                      	
     258.  00:A1AB                      sprite_caballero1_4_2:
     259.  00:A1AB                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     259.  00:A1AB  FF FF FF FF FF FF FF FF 
     260.  00:A1B3                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     260.  00:A1B3  FF FF FF FF FF FF FF FF 
     261.  00:A1BB                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     261.  00:A1BB  FF FF FF FF FF FF FF FF 
     262.  00:A1C3                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     262.  00:A1C3  FF FF FF FF FF FF FF FF 
     263.  00:A1CB                      	
     264.  00:A1CB                      sprite_caballero2_1_1:
     265.  00:A1CB                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     265.  00:A1CB  FF FF FF FF FF FF FF FF 
     266.  00:A1D3                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     266.  00:A1D3  FF FF FF FF FF FF FF FF 
     267.  00:A1DB                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     267.  00:A1DB  FF FF FF FF FF FF FF FF 
     268.  00:A1E3                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     268.  00:A1E3  FF FF FF FF FF FF FF FF 
     269.  00:A1EB                      
     270.  00:A1EB                      sprite_caballero2_2_1:
     271.  00:A1EB                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     271.  00:A1EB  FF FF FF FF FF FF FF FF 
     272.  00:A1F3                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     272.  00:A1F3  FF FF FF FF FF FF FF FF 
     273.  00:A1FB                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     273.  00:A1FB  FF FF FF FF FF FF FF FF 
     274.  00:A203                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     274.  00:A203  FF FF FF FF FF FF FF FF 
     275.  00:A20B                      	
     276.  00:A20B                      sprite_caballero2_3_1:
     277.  00:A20B                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     277.  00:A20B  FF FF FF FF FF FF FF FF 
     278.  00:A213                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     278.  00:A213  FF FF FF FF FF FF FF FF 
     279.  00:A21B                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     279.  00:A21B  FF FF FF FF FF FF FF FF 
     280.  00:A223                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     280.  00:A223  FF FF FF FF FF FF FF FF 
     281.  00:A22B                      	
     282.  00:A22B                      sprite_caballero2_4_1:
     283.  00:A22B                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     283.  00:A22B  FF FF FF FF FF FF FF FF 
     284.  00:A233                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     284.  00:A233  FF FF FF FF FF FF FF FF 
     285.  00:A23B                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     285.  00:A23B  FF FF FF FF FF FF FF FF 
     286.  00:A243                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     286.  00:A243  FF FF FF FF FF FF FF FF 
     287.  00:A24B                      	
     288.  00:A24B                      sprite_caballero2_1_2:
     289.  00:A24B                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     289.  00:A24B  FF FF FF FF FF FF FF FF 
     290.  00:A253                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     290.  00:A253  FF FF FF FF FF FF FF FF 
     291.  00:A25B                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     291.  00:A25B  FF FF FF FF FF FF FF FF 
     292.  00:A263                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     292.  00:A263  FF FF FF FF FF FF FF FF 
     293.  00:A26B                      
     294.  00:A26B                      sprite_caballero2_2_2:
     295.  00:A26B                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     295.  00:A26B  FF FF FF FF FF FF FF FF 
     296.  00:A273                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     296.  00:A273  FF FF FF FF FF FF FF FF 
     297.  00:A27B                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     297.  00:A27B  FF FF FF FF FF FF FF FF 
     298.  00:A283                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     298.  00:A283  FF FF FF FF FF FF FF FF 
     299.  00:A28B                      	
     300.  00:A28B                      sprite_caballero2_3_2:
     301.  00:A28B                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     301.  00:A28B  FF FF FF FF FF FF FF FF 
     302.  00:A293                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     302.  00:A293  FF FF FF FF FF FF FF FF 
     303.  00:A29B                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     303.  00:A29B  FF FF FF FF FF FF FF FF 
     304.  00:A2A3                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     304.  00:A2A3  FF FF FF FF FF FF FF FF 
     305.  00:A2AB                      	
     306.  00:A2AB                      sprite_caballero2_4_2:
     307.  00:A2AB                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     307.  00:A2AB  FF FF FF FF FF FF FF FF 
     308.  00:A2B3                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     308.  00:A2B3  FF FF FF FF FF FF FF FF 
     309.  00:A2BB                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     309.  00:A2BB  FF FF FF FF FF FF FF FF 
     310.  00:A2C3                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     310.  00:A2C3  FF FF FF FF FF FF FF FF 
     311.  00:A2CB                      	
     312.  00:A2CB                      ;; LLAMA
     313.  00:A2CB                      
     314.  00:A2CB                      sprite_llama1_1:	
     315.  00:A2CB                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     315.  00:A2CB  FF FF FF FF FF FF FF FF 
     316.  00:A2D3                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     316.  00:A2D3  FF FF FF FF FF FF FF FF 
     317.  00:A2DB                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     317.  00:A2DB  FF FF FF FF FF FF FF FF 
     318.  00:A2E3                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     318.  00:A2E3  FF FF FF FF FF FF FF FF 
     319.  00:A2EB                      	
     320.  00:A2EB                      sprite_llama2_1:	
     321.  00:A2EB                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     321.  00:A2EB  FF FF FF FF FF FF FF FF 
     322.  00:A2F3                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     322.  00:A2F3  FF FF FF FF FF FF FF FF 
     323.  00:A2FB                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     323.  00:A2FB  FF FF FF FF FF FF FF FF 
     324.  00:A303                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF	
     324.  00:A303  FF FF FF FF FF FF FF FF 
     325.  00:A30B                      	
     326.  00:A30B                      sprite_llama1_2:	
     327.  00:A30B                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     327.  00:A30B  FF FF FF FF FF FF FF FF 
     328.  00:A313                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     328.  00:A313  FF FF FF FF FF FF FF FF 
     329.  00:A31B                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     329.  00:A31B  FF FF FF FF FF FF FF FF 
     330.  00:A323                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     330.  00:A323  FF FF FF FF FF FF FF FF 
     331.  00:A32B                      	
     332.  00:A32B                      sprite_llama2_2:	
     333.  00:A32B                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     333.  00:A32B  FF FF FF FF FF FF FF FF 
     334.  00:A333                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     334.  00:A333  FF FF FF FF FF FF FF FF 
     335.  00:A33B                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     335.  00:A33B  FF FF FF FF FF FF FF FF 
     336.  00:A343                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF			
     336.  00:A343  FF FF FF FF FF FF FF FF 
     337.  00:A34B                      	
     338.  00:A34B                      ;; FANTASMA
     339.  00:A34B                      
     340.  00:A34B                      sprite_fantasma1_1:
     341.  00:A34B                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     341.  00:A34B  FF FF FF FF FF FF FF FF 
     342.  00:A353                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     342.  00:A353  FF FF FF FF FF FF FF FF 
     343.  00:A35B                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     343.  00:A35B  FF FF FF FF FF FF FF FF 
     344.  00:A363                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     344.  00:A363  FF FF FF FF FF FF FF FF 
     345.  00:A36B                      
     346.  00:A36B                      sprite_fantasma2_1:
     347.  00:A36B                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     347.  00:A36B  FF FF FF FF FF FF FF FF 
     348.  00:A373                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     348.  00:A373  FF FF FF FF FF FF FF FF 
     349.  00:A37B                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     349.  00:A37B  FF FF FF FF FF FF FF FF 
     350.  00:A383                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     350.  00:A383  FF FF FF FF FF FF FF FF 
     351.  00:A38B                      
     352.  00:A38B                      sprite_fantasma1_2:
     353.  00:A38B                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     353.  00:A38B  FF FF FF FF FF FF FF FF 
     354.  00:A393                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     354.  00:A393  FF FF FF FF FF FF FF FF 
     355.  00:A39B                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     355.  00:A39B  FF FF FF FF FF FF FF FF 
     356.  00:A3A3                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     356.  00:A3A3  FF FF FF FF FF FF FF FF 
     357.  00:A3AB                      
     358.  00:A3AB                      sprite_fantasma2_2:
     359.  00:A3AB                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     359.  00:A3AB  FF FF FF FF FF FF FF FF 
     360.  00:A3B3                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     360.  00:A3B3  FF FF FF FF FF FF FF FF 
     361.  00:A3BB                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     361.  00:A3BB  FF FF FF FF FF FF FF FF 
     362.  00:A3C3                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF	
     362.  00:A3C3  FF FF FF FF FF FF FF FF 
     363.  00:A3CB                      	
     364.  00:A3CB                      ;; MAGIA
     365.  00:A3CB                      
     366.  00:A3CB                      sprite_magia1_1:
     367.  00:A3CB                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     367.  00:A3CB  FF FF FF FF FF FF FF FF 
     368.  00:A3D3                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     368.  00:A3D3  FF FF FF FF FF FF FF FF 
     369.  00:A3DB                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     369.  00:A3DB  FF FF FF FF FF FF FF FF 
     370.  00:A3E3                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     370.  00:A3E3  FF FF FF FF FF FF FF FF 
     371.  00:A3EB                      
     372.  00:A3EB                      sprite_magia2_1:
     373.  00:A3EB                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     373.  00:A3EB  FF FF FF FF FF FF FF FF 
     374.  00:A3F3                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     374.  00:A3F3  FF FF FF FF FF FF FF FF 
     375.  00:A3FB                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     375.  00:A3FB  FF FF FF FF FF FF FF FF 
     376.  00:A403                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     376.  00:A403  FF FF FF FF FF FF FF FF 
     377.  00:A40B                      
     378.  00:A40B                      sprite_magia1_2:
     379.  00:A40B                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     379.  00:A40B  FF FF FF FF FF FF FF FF 
     380.  00:A413                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     380.  00:A413  FF FF FF FF FF FF FF FF 
     381.  00:A41B                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     381.  00:A41B  FF FF FF FF FF FF FF FF 
     382.  00:A423                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     382.  00:A423  FF FF FF FF FF FF FF FF 
     383.  00:A42B                      
     384.  00:A42B                      sprite_magia2_2:
     385.  00:A42B                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     385.  00:A42B  FF FF FF FF FF FF FF FF 
     386.  00:A433                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     386.  00:A433  FF FF FF FF FF FF FF FF 
     387.  00:A43B                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     387.  00:A43B  FF FF FF FF FF FF FF FF 
     388.  00:A443                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF	
     388.  00:A443  FF FF FF FF FF FF FF FF 
     389.  00:A44B                      	
     390.  00:A44B                      	
     391.  00:A44B                      ;; BEHOLDER
     392.  00:A44B                      
     393.  00:A44B                      sprite_beholder1_1:
     394.  00:A44B                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     394.  00:A44B  FF FF FF FF FF FF FF FF 
     395.  00:A453                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     395.  00:A453  FF FF FF FF FF FF FF FF 
     396.  00:A45B                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     396.  00:A45B  FF FF FF FF FF FF FF FF 
     397.  00:A463                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     397.  00:A463  FF FF FF FF FF FF FF FF 
     398.  00:A46B                      
     399.  00:A46B                      sprite_beholder2_1:
     400.  00:A46B                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     400.  00:A46B  FF FF FF FF FF FF FF FF 
     401.  00:A473                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     401.  00:A473  FF FF FF FF FF FF FF FF 
     402.  00:A47B                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     402.  00:A47B  FF FF FF FF FF FF FF FF 
     403.  00:A483                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     403.  00:A483  FF FF FF FF FF FF FF FF 
     404.  00:A48B                      
     405.  00:A48B                      sprite_beholder3_1:
     406.  00:A48B                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     406.  00:A48B  FF FF FF FF FF FF FF FF 
     407.  00:A493                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     407.  00:A493  FF FF FF FF FF FF FF FF 
     408.  00:A49B                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     408.  00:A49B  FF FF FF FF FF FF FF FF 
     409.  00:A4A3                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     409.  00:A4A3  FF FF FF FF FF FF FF FF 
     410.  00:A4AB                      
     411.  00:A4AB                      sprite_beholder4_1:
     412.  00:A4AB                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     412.  00:A4AB  FF FF FF FF FF FF FF FF 
     413.  00:A4B3                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     413.  00:A4B3  FF FF FF FF FF FF FF FF 
     414.  00:A4BB                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     414.  00:A4BB  FF FF FF FF FF FF FF FF 
     415.  00:A4C3                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF	
     415.  00:A4C3  FF FF FF FF FF FF FF FF 
     416.  00:A4CB                      	
     417.  00:A4CB                      sprite_beholder1_2:
     418.  00:A4CB                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     418.  00:A4CB  FF FF FF FF FF FF FF FF 
     419.  00:A4D3                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     419.  00:A4D3  FF FF FF FF FF FF FF FF 
     420.  00:A4DB                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     420.  00:A4DB  FF FF FF FF FF FF FF FF 
     421.  00:A4E3                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     421.  00:A4E3  FF FF FF FF FF FF FF FF 
     422.  00:A4EB                      
     423.  00:A4EB                      sprite_beholder2_2:
     424.  00:A4EB                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     424.  00:A4EB  FF FF FF FF FF FF FF FF 
     425.  00:A4F3                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     425.  00:A4F3  FF FF FF FF FF FF FF FF 
     426.  00:A4FB                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     426.  00:A4FB  FF FF FF FF FF FF FF FF 
     427.  00:A503                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     427.  00:A503  FF FF FF FF FF FF FF FF 
     428.  00:A50B                      
     429.  00:A50B                      sprite_beholder3_2:
     430.  00:A50B                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     430.  00:A50B  FF FF FF FF FF FF FF FF 
     431.  00:A513                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     431.  00:A513  FF FF FF FF FF FF FF FF 
     432.  00:A51B                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     432.  00:A51B  FF FF FF FF FF FF FF FF 
     433.  00:A523                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     433.  00:A523  FF FF FF FF FF FF FF FF 
     434.  00:A52B                      
     435.  00:A52B                      sprite_beholder4_2:
     436.  00:A52B                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     436.  00:A52B  FF FF FF FF FF FF FF FF 
     437.  00:A533                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     437.  00:A533  FF FF FF FF FF FF FF FF 
     438.  00:A53B                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     438.  00:A53B  FF FF FF FF FF FF FF FF 
     439.  00:A543                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF		
     439.  00:A543  FF FF FF FF FF FF FF FF 
     440.  00:A54B                      	
     441.  00:A54B                      ;; VAMPIRO
     442.  00:A54B                      
     443.  00:A54B                      sprite_vampiro1_1:
     444.  00:A54B                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     444.  00:A54B  FF FF FF FF FF FF FF FF 
     445.  00:A553                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     445.  00:A553  FF FF FF FF FF FF FF FF 
     446.  00:A55B                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     446.  00:A55B  FF FF FF FF FF FF FF FF 
     447.  00:A563                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     447.  00:A563  FF FF FF FF FF FF FF FF 
     448.  00:A56B                      
     449.  00:A56B                      sprite_vampiro2_1:
     450.  00:A56B                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     450.  00:A56B  FF FF FF FF FF FF FF FF 
     451.  00:A573                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     451.  00:A573  FF FF FF FF FF FF FF FF 
     452.  00:A57B                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     452.  00:A57B  FF FF FF FF FF FF FF FF 
     453.  00:A583                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     453.  00:A583  FF FF FF FF FF FF FF FF 
     454.  00:A58B                      
     455.  00:A58B                      sprite_vampiro1_2:
     456.  00:A58B                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     456.  00:A58B  FF FF FF FF FF FF FF FF 
     457.  00:A593                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     457.  00:A593  FF FF FF FF FF FF FF FF 
     458.  00:A59B                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     458.  00:A59B  FF FF FF FF FF FF FF FF 
     459.  00:A5A3                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     459.  00:A5A3  FF FF FF FF FF FF FF FF 
     460.  00:A5AB                      
     461.  00:A5AB                      sprite_vampiro2_2:
     462.  00:A5AB                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     462.  00:A5AB  FF FF FF FF FF FF FF FF 
     463.  00:A5B3                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     463.  00:A5B3  FF FF FF FF FF FF FF FF 
     464.  00:A5BB                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     464.  00:A5BB  FF FF FF FF FF FF FF FF 
     465.  00:A5C3                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     465.  00:A5C3  FF FF FF FF FF FF FF FF 
     466.  00:A5CB                      	
     467.  00:A5CB                      ;; MANOIZQ
     468.  00:A5CB                      
     469.  00:A5CB                      sprite_manoizq1:
     470.  00:A5CB                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     470.  00:A5CB  FF FF FF FF FF FF FF FF 
     471.  00:A5D3                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     471.  00:A5D3  FF FF FF FF FF FF FF FF 
     472.  00:A5DB                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     472.  00:A5DB  FF FF FF FF FF FF FF FF 
     473.  00:A5E3                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     473.  00:A5E3  FF FF FF FF FF FF FF FF 
     474.  00:A5EB                      	
     475.  00:A5EB                      sprite_manoizq2:
     476.  00:A5EB                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     476.  00:A5EB  FF FF FF FF FF FF FF FF 
     477.  00:A5F3                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     477.  00:A5F3  FF FF FF FF FF FF FF FF 
     478.  00:A5FB                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     478.  00:A5FB  FF FF FF FF FF FF FF FF 
     479.  00:A603                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     479.  00:A603  FF FF FF FF FF FF FF FF 
     480.  00:A60B                      	
     481.  00:A60B                      sprite_manoizq3:
     482.  00:A60B                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     482.  00:A60B  FF FF FF FF FF FF FF FF 
     483.  00:A613                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     483.  00:A613  FF FF FF FF FF FF FF FF 
     484.  00:A61B                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     484.  00:A61B  FF FF FF FF FF FF FF FF 
     485.  00:A623                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF	
     485.  00:A623  FF FF FF FF FF FF FF FF 
     486.  00:A62B                      	
     487.  00:A62B                      ;; MANODER
     488.  00:A62B                      
     489.  00:A62B                      sprite_manoder1:
     490.  00:A62B                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     490.  00:A62B  FF FF FF FF FF FF FF FF 
     491.  00:A633                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     491.  00:A633  FF FF FF FF FF FF FF FF 
     492.  00:A63B                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     492.  00:A63B  FF FF FF FF FF FF FF FF 
     493.  00:A643                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     493.  00:A643  FF FF FF FF FF FF FF FF 
     494.  00:A64B                      	
     495.  00:A64B                      sprite_manoder2:
     496.  00:A64B                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     496.  00:A64B  FF FF FF FF FF FF FF FF 
     497.  00:A653                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     497.  00:A653  FF FF FF FF FF FF FF FF 
     498.  00:A65B                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     498.  00:A65B  FF FF FF FF FF FF FF FF 
     499.  00:A663                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     499.  00:A663  FF FF FF FF FF FF FF FF 
     500.  00:A66B                      	
     501.  00:A66B                      sprite_manoder3:
     502.  00:A66B                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     502.  00:A66B  FF FF FF FF FF FF FF FF 
     503.  00:A673                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     503.  00:A673  FF FF FF FF FF FF FF FF 
     504.  00:A67B                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     504.  00:A67B  FF FF FF FF FF FF FF FF 
     505.  00:A683                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF		
     505.  00:A683  FF FF FF FF FF FF FF FF 
     506.  00:A68B                      	
     507.  00:A68B                      	
     508.  00:A68B                      	
     509.  00:A68B                      	
     510.  00:A68B                      	
     511.  00:A68B                      	
     512.  00:A68B                      	
     513.  00:A68B                      	
     514.  00:A68B                      	
     515.  00:A68B                      	
     516.  00:A68B                      	
     517.  00:A68B                      	
     518.  00:A68B                      	
     519.  00:A68B                      	
     520.  00:A68B                      	
     521.  00:A68B                      	
     522.  00:A68B                      	
     523.  00:A68B                      	
     524.  00:A68B                      	
     525.  00:A68B                      	
     526.  00:A68B                      	
     527.  00:A68B                      	
     528.  00:A68B                      	
     335   00:A68B                      	
     336   00:A68B                      	include "habitaciones.asm"
       1.  00:A68B                      ;;=====================================================
       2.  00:A68B                      ;;DEFINICIÓN DE HABITACIONES x NIVEL
       3.  00:A68B                      ;;=====================================================	
       4.  00:A68B                      
       5.  00:A68B                      ; sólo voy a usar 7x7 pero como los arrays son lineales y voy a trabajar con matrices
       6.  00:A68B                      ; me interesa que seande  8x8 aunque sólo trabaje con 7x7
       7.  00:A68B                      
       8.  00:A68B                      ; ojo... la primera linea corresponderá a la primera linea del castillo no a la última
       9.  00:A68B                      
      10.  00:A68B                      ;; definición de estructura de bits
      11.  00:A68B                      ;16 bits por habitación
      12.  00:A68B                      
      13.  00:A68B                      ;NOTA: no es necesario asignar un bit para la puerta de arriba ya que en las habitaciones de la fila 7 sólo habrá una puerta que será una escalera
      14.  00:A68B                      
      15.  00:A68B                      ;~ 7 - sin asignar
      16.  00:A68B                      ;~ 6 - sin asignar
      17.  00:A68B                      ;~ 5 - esqueletos
      18.  00:A68B                      ;~ 4 - todos los enemigos muertos 0 no y 1 ó <>0 => toca la variable "is_habitacion_terminada"
      19.  00:A68B                      ;~ 0,1,2,3 - nº puertas 1 arriba 1 derecha 1 abajo 1 izquierda
      20.  00:A68B                      
      21.  00:A68B                      ;~ 7 - oracion
      22.  00:A68B                      ;~ 6 - cruz
      23.  00:A68B                      ;~ 5 - agua bendita
      24.  00:A68B                      ;~ 4 - armadura
      25.  00:A68B                      ;~ 3 - planta
      26.  00:A68B                      ;~ 2 - vida extra
      27.  00:A68B                      ;~ 1 - ballesta
      28.  00:A68B                      ;~ 0 - antorchas
      29.  00:A68B                      
      30.  00:A68B                      ;importante: el byte de la columna 15 indicará con 1 y 0 habitaciones por las que se haya pasado
      31.  00:A68B                      ;cuando se inicie la partida todos se pondrán a 0
      32.  00:A68B                      ;por ejemplo 01000000b se ha pasado por la hab. 2 de esa fila en el nivel que sea
      33.  00:A68B                      
      34.  00:A68B                      habitacion_actual:
      35.  00:A68B  00                  	db  0		;habitación donde se encuentre el prota. Se mete en una varible par traer todos los datos de golpe y no buscarlos varias veces
      36.  00:A68C                      habitacion_extras:
      37.  00:A68C  00                  	db	0		;donde van las ayudas de una habitación
      38.  00:A68D                      habitacion_actual_puntero;
      39.  00:A68D  00 00               	dw	0		;puntero para actualizar la habitación cuando se maten todos los enemigos
      40.  00:A68F                      is_habitacion_terminada:
      41.  00:A68F  00                  	db	0		;variable para consultar más rápido si se ha pasado (<>0 si se ha pasado y 0 no se ha pasado)
      42.  00:A690                      
      43.  00:A690                      
      44.  00:A690                      habitaciones_juego:
      45.  00:A690                      habitaciones_nivel0:
      46.  00:A690                      	db  00000000b,#C0,00000000b,#C0,00000000b,#C0,00001010b,#C0,00000000b,#C0,00000000b,#C0,00000000b,#C0,#00,#00 	;primera fila
      46.  00:A690  00 C0 00 C0 00 C0 0A C0 00 C0 00 C0 00 C0 00 00 
      47.  00:A6A0                      	db  00000000b,#C0,00001100b,#C0,00001101b,#C0,00001111b,#C0,00001101b,#C0,00001001b,#C0,00000000b,#C0,#00,#00
      47.  00:A6A0  00 C0 0C C0 0D C0 0F C0 0D C0 09 C0 00 C0 00 00 
      48.  00:A6B0                      	db  00000000b,#C0,00001110b,#C0,00001111b,#C0,00001111b,#C0,00001111b,#C0,00001011b,#C0,00000000b,#C0,#00,#00
      48.  00:A6B0  00 C0 0E C0 0F C0 0F C0 0F C0 0B C0 00 C0 00 00 
      49.  00:A6C0                      	db  00000000b,#C0,00001010b,#C0,00001010b,#C0,00000010b,#C0,00001010b,#C0,00001010b,#C0,00000000b,#C0,#00,#00
      49.  00:A6C0  00 C0 0A C0 0A C0 02 C0 0A C0 0A C0 00 C0 00 00 
      50.  00:A6D0                      	db  00000000b,#C0,00001010b,#C0,00001110b,#C0,00000101b,#C0,00001011b,#C0,00001010b,#C0,00000000b,#C0,#00,#00
      50.  00:A6D0  00 C0 0A C0 0E C0 05 C0 0B C0 0A C0 00 C0 00 00 
      51.  00:A6E0                      	db  00000000b,#C0,00000110b,#C0,00000111b,#C0,00001101b,#C0,00000111b,#C0,00000011b,#C0,00000000b,#C0,#00,#00
      51.  00:A6E0  00 C0 06 C0 07 C0 0D C0 07 C0 03 C0 00 C0 00 00 
      52.  00:A6F0                      	db  00000000b,#C0,00000000b,#C0,00000000b,#C0,00001010b,#C0,00001000b,#C0,00000000b,#C0,00000000b,#C0,#00,#00	;última fila
      52.  00:A6F0  00 C0 00 C0 00 C0 0A C0 08 C0 00 C0 00 C0 00 00 
      53.  00:A700                      	
      54.  00:A700                      habitaciones_nivel1:
      55.  00:A700                      	db  00000000b,#C0,00000000b,#C0,00000000b,#C0,00001000b,#C0,00001000b,#C0,00000000b,#C0,00000000b,#C0,#00,#00 	;primera fila
      55.  00:A700  00 C0 00 C0 00 C0 08 C0 08 C0 00 C0 00 C0 00 00 
      56.  00:A710                      	db  00000000b,#C0,00001100b,#C0,00001101b,#C0,00001111b,#C0,00001101b,#C0,00001001b,#C0,00000000b,#C0,#00,#00
      56.  00:A710  00 C0 0C C0 0D C0 0F C0 0D C0 09 C0 00 C0 00 00 
      57.  00:A720                      	db  00000000b,#C0,00001110b,#C0,00001111b,#C0,00001111b,#C0,00001111b,#C0,00001011b,#C0,00000000b,#C0,#00,#00
      57.  00:A720  00 C0 0E C0 0F C0 0F C0 0F C0 0B C0 00 C0 00 00 
      58.  00:A730                      	db  00000000b,#C0,00001010b,#C0,00001010b,#C0,00000010b,#C0,00001010b,#C0,00001010b,#C0,00000000b,#C0,#00,#00
      58.  00:A730  00 C0 0A C0 0A C0 02 C0 0A C0 0A C0 00 C0 00 00 
      59.  00:A740                      	db  00000000b,#C0,00001010b,#C0,00001110b,#C0,00000101b,#C0,00001011b,#C0,00001010b,#C0,00000000b,#C0,#00,#00
      59.  00:A740  00 C0 0A C0 0E C0 05 C0 0B C0 0A C0 00 C0 00 00 
      60.  00:A750                      	db  00000000b,#C0,00000110b,#C0,00000111b,#C0,00001101b,#C0,00000111b,#C0,00000011b,#C0,00000000b,#C0,#00,#00
      60.  00:A750  00 C0 06 C0 07 C0 0D C0 07 C0 03 C0 00 C0 00 00 
      61.  00:A760                      	db  00000000b,#C0,00000000b,#C0,00000000b,#C0,00001010b,#C0,00001000b,#C0,00000000b,#C0,00000000b,#C0,#00,#00	;última fila
      61.  00:A760  00 C0 00 C0 00 C0 0A C0 08 C0 00 C0 00 C0 00 00 
      62.  00:A770                      	
      63.  00:A770                      habitaciones_nivel2:
      64.  00:A770                      	db  00000000b,#00,00000001b,#01,00000010b,#02,00000011b,#03,00001000b,#04,00001001b,#05,00001100b,#06,#FF,#00 ;primera fila
      64.  00:A770  00 00 01 01 02 02 03 03 08 04 09 05 0C 06 FF 00 
      65.  00:A780                      	db  #17,#10,#11,#11,#12,#12,#13,#13,#14,#14,#15,#15,#16,#16,#FF,#00
      65.  00:A780  17 10 11 11 12 12 13 13 14 14 15 15 16 16 FF 00 
      66.  00:A790                      	db  #20,#20,#21,#21,#22,#22,#23,#23,#24,#24,#25,#25,#26,#26,#FF,#00
      66.  00:A790  20 20 21 21 22 22 23 23 24 24 25 25 26 26 FF 00 
      67.  00:A7A0                      	db  #30,#30,#31,#31,#32,#32,#33,#33,#34,#34,#35,#35,#36,#36,#FF,#00
      67.  00:A7A0  30 30 31 31 32 32 33 33 34 34 35 35 36 36 FF 00 
      68.  00:A7B0                      	db  00000000b,#00,00000001b,#01,00001111b,#02,00000011b,#03,00001000b,#04,00001001b,#05,00001100b,#06,#FF,#00
      68.  00:A7B0  00 00 01 01 0F 02 03 03 08 04 09 05 0C 06 FF 00 
      69.  00:A7C0                      	db  #50,#50,#51,#51,#52,#52,#53,#53,#54,#54,#55,#55,#56,#56,#FF,#00
      69.  00:A7C0  50 50 51 51 52 52 53 53 54 54 55 55 56 56 FF 00 
      70.  00:A7D0                      	db  00000000b,#00,00000001b,#01,00000010b,#02,00000011b,#03,00001000b,#04,00001001b,#05,00001100b,#06,#FF,#00	;ultima fila
      70.  00:A7D0  00 00 01 01 02 02 03 03 08 04 09 05 0C 06 FF 00 
      71.  00:A7E0                      	
      72.  00:A7E0                      habitaciones_nivel3:
      73.  00:A7E0                      	db  00000000b,#00,00000001b,#01,00000010b,#02,00000011b,#03,00001000b,#04,00001001b,#05,00001100b,#06,#FF,#00 ;primera fila
      73.  00:A7E0  00 00 01 01 02 02 03 03 08 04 09 05 0C 06 FF 00 
      74.  00:A7F0                      	db  #17,#10,#11,#11,#12,#12,#13,#13,#14,#14,#15,#15,#16,#16,#FF,#00
      74.  00:A7F0  17 10 11 11 12 12 13 13 14 14 15 15 16 16 FF 00 
      75.  00:A800                      	db  #20,#20,#21,#21,#22,#22,#23,#23,#24,#24,#25,#25,#26,#26,#FF,#00
      75.  00:A800  20 20 21 21 22 22 23 23 24 24 25 25 26 26 FF 00 
      76.  00:A810                      	db  #30,#30,#31,#31,#32,#32,#33,#33,#34,#34,#35,#35,#36,#36,#FF,#00
      76.  00:A810  30 30 31 31 32 32 33 33 34 34 35 35 36 36 FF 00 
      77.  00:A820                      	db  00000000b,#00,00000001b,#01,00001111b,#02,00000011b,#03,00001000b,#04,00001001b,#05,00001100b,#06,#FF,#00
      77.  00:A820  00 00 01 01 0F 02 03 03 08 04 09 05 0C 06 FF 00 
      78.  00:A830                      	db  #50,#50,#51,#51,#52,#52,#53,#53,#54,#54,#55,#55,#56,#56,#FF,#00
      78.  00:A830  50 50 51 51 52 52 53 53 54 54 55 55 56 56 FF 00 
      79.  00:A840                      	db  00000000b,#00,00000001b,#01,00000010b,#02,00000011b,#03,00001000b,#04,00001001b,#05,00001100b,#06,#FF,#00	;ultima fila
      79.  00:A840  00 00 01 01 02 02 03 03 08 04 09 05 0C 06 FF 00 
      80.  00:A850                      	
      81.  00:A850                      habitaciones_nivel4:
      82.  00:A850                      	db  00000001b,#00,00000001b,#01,00000010b,#02,00000011b,#03,00001000b,#04,00001001b,#05,00001100b,#06,#FF,#00 ;primera fila
      82.  00:A850  01 00 01 01 02 02 03 03 08 04 09 05 0C 06 FF 00 
      83.  00:A860                      	db  #17,#10,#11,#11,#12,#12,#13,#13,#14,#14,#15,#15,#16,#16,#FF,#00
      83.  00:A860  17 10 11 11 12 12 13 13 14 14 15 15 16 16 FF 00 
      84.  00:A870                      	db  #20,#20,#21,#21,#22,#22,#23,#23,#24,#24,#25,#25,#26,#26,#FF,#00
      84.  00:A870  20 20 21 21 22 22 23 23 24 24 25 25 26 26 FF 00 
      85.  00:A880                      	db  #30,#30,#31,#31,#32,#32,#33,#33,#34,#34,#35,#35,#36,#36,#FF,#00
      85.  00:A880  30 30 31 31 32 32 33 33 34 34 35 35 36 36 FF 00 
      86.  00:A890                      	db  00000000b,#00,00000001b,#01,00001111b,#02,00000011b,#03,00001000b,#04,00001001b,#05,00001100b,#06,#FF,#00
      86.  00:A890  00 00 01 01 0F 02 03 03 08 04 09 05 0C 06 FF 00 
      87.  00:A8A0                      	db  #50,#50,#51,#51,#52,#52,#53,#53,#54,#54,#55,#55,#56,#56,#FF,#00
      87.  00:A8A0  50 50 51 51 52 52 53 53 54 54 55 55 56 56 FF 00 
      88.  00:A8B0                      	db  00000000b,#00,00000001b,#01,00001111b,00001111b,00000011b,#03,00001000b,#04,00001001b,#05,00001100b,#06,#FF,#00	;ultima fila
      88.  00:A8B0  00 00 01 01 0F 0F 03 03 08 04 09 05 0C 06 FF 00 
      89.  00:A8C0                      	
      90.  00:A8C0                      habitaciones_nivel5:
      91.  00:A8C0                      	db  00000000b,#00,00000001b,#01,00000010b,#02,00000011b,#03,00001000b,#04,00001001b,#05,00001100b,#06,#FF,#00 ;primera fila
      91.  00:A8C0  00 00 01 01 02 02 03 03 08 04 09 05 0C 06 FF 00 
      92.  00:A8D0                      	db  #17,#10,#11,#11,#12,#12,#13,#13,#14,#14,#15,#15,#16,#16,#FF,#00
      92.  00:A8D0  17 10 11 11 12 12 13 13 14 14 15 15 16 16 FF 00 
      93.  00:A8E0                      	db  #20,#20,#21,#21,#22,#22,#23,#23,#24,#24,#25,#25,#26,#26,#FF,#00
      93.  00:A8E0  20 20 21 21 22 22 23 23 24 24 25 25 26 26 FF 00 
      94.  00:A8F0                      	db  #30,#30,#31,#31,#32,#32,#33,#33,#34,#34,#35,#35,#36,#36,#FF,#00
      94.  00:A8F0  30 30 31 31 32 32 33 33 34 34 35 35 36 36 FF 00 
      95.  00:A900                      	db  00000000b,#00,00000001b,#01,00001111b,#02,00000011b,#03,00001000b,#04,00001001b,#05,00001100b,#06,#FF,#00
      95.  00:A900  00 00 01 01 0F 02 03 03 08 04 09 05 0C 06 FF 00 
      96.  00:A910                      	db  #50,#50,#51,#51,#52,#52,#53,#53,#54,#54,#55,#55,#56,#56,#FF,#00
      96.  00:A910  50 50 51 51 52 52 53 53 54 54 55 55 56 56 FF 00 
      97.  00:A920                      	db  00000000b,#00,00000001b,#01,00001010b,00001010b,00000011b,#03,00001000b,#04,00001001b,#05,00001100b,#06,#FF,#00	;ultima fila
      97.  00:A920  00 00 01 01 0A 0A 03 03 08 04 09 05 0C 06 FF 00 
      98.  00:A930                      	
      99.  00:A930                      habitaciones_nivel6:
     100.  00:A930                      	db  00000000b,#00,00000001b,#01,00000010b,#02,00000011b,#03,00001000b,#04,00001001b,#05,00001100b,#06,#FF,#00 ;primera fila
     100.  00:A930  00 00 01 01 02 02 03 03 08 04 09 05 0C 06 FF 00 
     101.  00:A940                      	db  #17,#10,#11,#11,#12,#12,#13,#13,#14,#14,#15,#15,#16,#16,#FF,#00
     101.  00:A940  17 10 11 11 12 12 13 13 14 14 15 15 16 16 FF 00 
     102.  00:A950                      	db  #20,#20,#21,#21,#22,#22,#23,#23,#24,#24,#25,#25,#26,#26,#FF,#00
     102.  00:A950  20 20 21 21 22 22 23 23 24 24 25 25 26 26 FF 00 
     103.  00:A960                      	db  #30,#30,#31,#31,#32,#32,#33,#33,#34,#34,#35,#35,#36,#36,#FF,#00
     103.  00:A960  30 30 31 31 32 32 33 33 34 34 35 35 36 36 FF 00 
     104.  00:A970                      	db  00000000b,#00,00000001b,#01,00001111b,#02,00000011b,#03,00001000b,#04,00001001b,#05,00001100b,#06,#FF,#00
     104.  00:A970  00 00 01 01 0F 02 03 03 08 04 09 05 0C 06 FF 00 
     105.  00:A980                      	db  #50,#50,#51,#51,#52,#52,#53,#53,#54,#54,#55,#55,#56,#56,#FF,#00
     105.  00:A980  50 50 51 51 52 52 53 53 54 54 55 55 56 56 FF 00 
     106.  00:A990                      	db  00000000b,#00,00000001b,10000000b,00001111b,#02,00000011b,#03,00001000b,#04,00001001b,#05,00001100b,#06,#FF,#00	;ultima fila
     106.  00:A990  00 00 01 80 0F 02 03 03 08 04 09 05 0C 06 FF 00 
     107.  00:A9A0                      
     108.  00:A9A0                      
     337   00:A9A0                      	
     338   00:A9A0                      	include "variables.asm"
       1.  00:A9A0                      ;;=====================================================
       2.  00:A9A0                      ;;DEFINICIÓN DE VARIABLES
       3.  00:A9A0                      ;;=====================================================
       4.  00:A9A0                      
       5.  00:A9A0                      ;Colores base de la pantalla
       6.  00:A9A0                      color_base:
       7.  00:A9A0  01 01 01            			DB		COLNEGRO,COLNEGRO,COLNEGRO	
       8.  00:A9A3                      ;colores de pantalla cuando se tira bomba
       9.  00:A9A3                      color_bomba1:
      10.  00:A9A3  08 08 08            			DB		COLROJO,COLROJO,COLROJO
      11.  00:A9A6                      color_bomba2:
      12.  00:A9A6  06 06 06            			DB		COLROJOOSC,COLROJOOSC,COLROJOOSC
      13.  00:A9A9                      
      14.  00:A9A9                      ;definicion de variable del prota usando la estructura del punto de mira
      15.  00:A9A9                      prota:		ESTRUCTURA_PUNTOMIRA
      15.  00:A9A9  78 6C 00 00 00 05 00 00 00 00 00 00 00 00 00 00 
      16.  00:A9B9                      ;variables globales del prota
      17.  00:A9B9                      prota_nivel:			;nivel del castillo donde está 0-6
      18.  00:A9B9  00                  			DB		0
      19.  00:A9BA                      prota_vidas:
      20.  00:A9BA  00                  			DB		0
      21.  00:A9BB                      prota_reliquias:
      22.  00:A9BB  03                  			DB		3
      23.  00:A9BC                      prota_pos_mapx:
      24.  00:A9BC  00                  			DB		0	;pos columna
      25.  00:A9BD                      prota_pos_mapy:
      26.  00:A9BD  00                  			DB		0	;pos fila
      27.  00:A9BE                      prota_energia:
      28.  00:A9BE  FA                  			DB		250
      29.  00:A9BF                      
      30.  00:A9BF                      ;array para pintar de golpe el marcador de vidas
      31.  00:A9BF                      array_aux_vidas: 		
      32.  00:A9BF                      			DB		0,0,0,0,0,0,0,0
      32.  00:A9BF  00 00 00 00 00 00 00 00 
      33.  00:A9C7                      
      34.  00:A9C7                      ;array para pintar de golpe el marcador de reliquias
      35.  00:A9C7                      array_aux_reliquias:	
      36.  00:A9C7                      			DB		0,0,0,0,0,0,0,0
      36.  00:A9C7  00 00 00 00 00 00 00 00 
      37.  00:A9CF                      
      38.  00:A9CF                      array_aux_energia:					;array para pintar de golpe el marcador de energía
      39.  00:A9CF                      			DB		16,0,0,0,0,0,0 	;el 16 primero es porque siempre estará pintado el cuadro primero rojo
      39.  00:A9CF  10 00 00 00 00 00 00 
      40.  00:A9D6                      ultimo_pos_array_aux_energia:
      41.  00:A9D6  00                  			DB		0				;el array completo es de 8 pero para posicionar sin niecesidad de cálculos  etiqueto este aparte
      42.  00:A9D7                      			
      43.  00:A9D7                      array_aux_mapa_limpiar:	;es por facilitar el reseteo del mapa (pinto 7 lineas en negro con bios) la otra opción es más larga en código y complicada aunque más rápida
      44.  00:A9D7                      			DB		0,0,0,0,0,0,0
      44.  00:A9D7  00 00 00 00 00 00 00 
      45.  00:A9DE                      elemento_pintar_mapa:
      46.  00:A9DE  00                  			DB		0	;TILEPROTAM = 19, ;TILEGRISM = 9
      47.  00:A9DF                      			
      48.  00:A9DF                      ;; nota importante: cada vez que se cambie de nivel se actualizará el contenido
      49.  00:A9DF                      
      50.  00:A9DF                      
      51.  00:A9DF                      lista_ayudas:
      52.  00:A9DF  00 (16)             ayuda_oracion:		DS		ESTRUCTURA_AYUDA		
      53.  00:A9EF  00 (16)             ayuda_cruz:			DS		ESTRUCTURA_AYUDA
      54.  00:A9FF  00 (16)             ayuda_aguabendita:	DS		ESTRUCTURA_AYUDA
      55.  00:AA0F  00 (16)             ayuda_armadura:		DS		ESTRUCTURA_AYUDA
      56.  00:AA1F  00 (16)             ayuda_planta:		DS		ESTRUCTURA_AYUDA
      57.  00:AA2F  00 (16)             ayuda_vidaextra		DS		ESTRUCTURA_AYUDA
      58.  00:AA3F  00 (16)             ayuda_ballesta:		DS		ESTRUCTURA_AYUDA
      59.  00:AA4F                      
      60.  00:AA4F                      ;datos ayudas
      61.  00:AA4F                      datos_oracion:
      62.  00:AA4F  00                  				DB    	0				;0 no activo <>0 activo															0
      63.  00:AA50  B8 AA               				DW		array_oracionon	;pos en memoria ver array_ayudas de cómo se mostrarán (wordaux2)				1,2
      64.  00:AA52  BC AA               				DW		array_oracionoff;pos en memoria ver array_ayudas de cómo se mostrarán (wordaux2)				3,4
      65.  00:AA54  A3                  				DB		POSORACION		;pos en pantalla (memoria en el banco 1 se le suma 256 + TILEMAP) (wordaux1)	5
      66.  00:AA55  20                  				DB		POSORACIONX		;pos del pixel central (esquina superior + 8x)									6
      67.  00:AA56  70                  				DB		POSAYUDASY		;pos del pixel central (esquina superior + 8y) (para toas igual)				7
      68.  00:AA57  24 9C               				DW		accion_oracion	;subrutina que indica la acción si se dispara en el objeto						8,9
      69.  00:AA59                      datos_cruz:
      70.  00:AA59                      				;~ DB    	0				;0 no activo <>0 activo															0
      71.  00:AA59                      				;~ DW		array_cruzon	;pos en memoria ver array_ayudas de cómo se mostrarán (wordaux2)				1,2
      72.  00:AA59                      				;~ DW		array_cruzoff	;pos en memoria ver array_ayudas de cómo se mostrarán (wordaux2)				3,4
      73.  00:AA59                      				;~ DB		POSCRUZ			;pos en pantalla (memoria en el banco 1 se le suma 256 + TILEMAP) (wordaux1)	5
      74.  00:AA59                      				;~ DB		POSCRUZX		;pos del pixel central (esquina superior + 8x)									6
      75.  00:AA59                      				;~ DB		POSAYUDASY		;pos del pixel central (esquina superior + 8y) (para toas igual)				7
      76.  00:AA59                      				;~ DW		accion_cruz		;subrutina que indica la acción si se dispara en el objeto						8,9 
      77.  00:AA59                      				
      78.  00:AA59  00                  				DB    	0				;0 no activo <>0 activo															0
      79.  00:AA5A  C0 AA               				DW		array_cruzon	;pos en memoria ver array_ayudas de cómo se mostrarán (wordaux2)				1,2
      80.  00:AA5C  C4 AA               				DW		array_cruzoff	;pos en memoria ver array_ayudas de cómo se mostrarán (wordaux2)				3,4
      81.  00:AA5E  A7                  				DB		167			;pos en pantalla (memoria en el banco 1 se le suma 256 + TILEMAP) (wordaux1)	5
      82.  00:AA5F  40                  				DB		64		;pos del pixel central (esquina superior + 8x)									6
      83.  00:AA60  70                  				DB		112		;pos del pixel central (esquina superior + 8y) (para toas igual)				7
      84.  00:AA61  25 9C               				DW		accion_cruz		;subrutina que indica la acción si se dispara en el objeto						8,9 
      85.  00:AA63                      				
      86.  00:AA63                      datos_aguabendita:
      87.  00:AA63  00                  				DB    	0				;0 no activo <>0 activo															0
      88.  00:AA64  C8 AA               				DW		array_aguaon	;pos en memoria ver array_ayudas de cómo se mostrarán (wordaux2)				1,2
      89.  00:AA66  CC AA               				DW		array_aguaoff	;pos en memoria ver array_ayudas de cómo se mostrarán (wordaux2)				3,4
      90.  00:AA68  AB                  				DB		POSAGUA			;pos en pantalla (memoria en el banco 1 se le suma 256 + TILEMAP) (wordaux1)	5
      91.  00:AA69  60                  				DB		POSAGUAX		;pos del pixel central (esquina superior + 8x)									6
      92.  00:AA6A  70                  				DB		POSAYUDASY		;pos del pixel central (esquina superior + 8y) (para toas igual)				7
      93.  00:AA6B  26 9C               				DW		accion_agua		;subrutina que indica la acción si se dispara en el objeto						8,9
      94.  00:AA6D  00                  				DB		0	;relleno																		10-16    
      95.  00:AA6E  00                  				DB		0	;relleno																		10-16    
      96.  00:AA6F  00                  				DB		0	;relleno																		10-16    
      97.  00:AA70  00                  				DB		0	;relleno																		10-16    
      98.  00:AA71  00                  				DB		0	;relleno																		10-16    
      99.  00:AA72  00                  				DB		0	;relleno																		10-16   
     100.  00:AA73  00                  				DB		0	;relleno																		10-16    
     101.  00:AA74                      datos_armadura:
     102.  00:AA74  00                  				DB    	0				;0 no activo <>0 activo															0
     103.  00:AA75  D0 AA               				DW		array_armaduraon;pos en memoria ver array_ayudas de cómo se mostrarán (wordaux2)				1,2
     104.  00:AA77  D4 AA               				DW		array_armaduraoff;pos en memoria ver array_ayudas de cómo se mostrarán (wordaux2)				3,4
     105.  00:AA79  AF                  				DB		POSARMAD		;pos en pantalla (memoria en el banco 1 se le suma 256 + TILEMAP) (wordaux1)	5
     106.  00:AA7A  80                  				DB		POSARMADX		;pos del pixel central (esquina superior + 8x)									6
     107.  00:AA7B  70                  				DB		POSAYUDASY		;pos del pixel central (esquina superior + 8y) (para toas igual)				7
     108.  00:AA7C  27 9C               				DW		accion_armadura	;subrutina que indica la acción si se dispara en el objeto						8,9
     109.  00:AA7E  00                  				DB		0	;relleno																		10-16    
     110.  00:AA7F  00                  				DB		0	;relleno																		10-16    
     111.  00:AA80  00                  				DB		0	;relleno																		10-16    
     112.  00:AA81  00                  				DB		0	;relleno																		10-16    
     113.  00:AA82  00                  				DB		0	;relleno																		10-16    
     114.  00:AA83  00                  				DB		0	;relleno																		10-16   
     115.  00:AA84  00                  				DB		0	;relleno																		10-16    
     116.  00:AA85                      datos_planta:
     117.  00:AA85  00                  				DB    	0				;0 no activo <>0 activo															0
     118.  00:AA86  D8 AA               				DW		array_plantaon	;pos en memoria ver array_ayudas de cómo se mostrarán (wordaux2)				1,2
     119.  00:AA88  DC AA               				DW		array_plantaoff	;pos en memoria ver array_ayudas de cómo se mostrarán (wordaux2)				3,4
     120.  00:AA8A  B3                  				DB		POSPLANTA		;pos en pantalla (memoria en el banco 1 se le suma 256 + TILEMAP) (wordaux1)	5
     121.  00:AA8B  A0                  				DB		POSPLANTAX		;pos del pixel central (esquina superior + 8x)									6
     122.  00:AA8C  70                  				DB		POSAYUDASY		;pos del pixel central (esquina superior + 8y) (para toas igual)				7
     123.  00:AA8D  28 9C               				DW		accion_planta	;subrutina que indica la acción si se dispara en el objeto						8,9
     124.  00:AA8F  00                  				DB		0	;relleno																		10-16    
     125.  00:AA90  00                  				DB		0	;relleno																		10-16    
     126.  00:AA91  00                  				DB		0	;relleno																		10-16    
     127.  00:AA92  00                  				DB		0	;relleno																		10-16    
     128.  00:AA93  00                  				DB		0	;relleno																		10-16    
     129.  00:AA94  00                  				DB		0	;relleno																		10-16   
     130.  00:AA95  00                  				DB		0	;relleno																		10-16     
     131.  00:AA96                      datos_vidaextra:
     132.  00:AA96  00                  				DB    	0				;0 no activo <>0 activo															0
     133.  00:AA97  E0 AA               				DW		array_extraon	;pos en memoria ver array_ayudas de cómo se mostrarán (wordaux2)				1,2
     134.  00:AA99  E4 AA               				DW		array_extraoff	;pos en memoria ver array_ayudas de cómo se mostrarán (wordaux2)				3,4
     135.  00:AA9B  B7                  				DB		POSVIDAEXT		;pos en pantalla (memoria en el banco 1 se le suma 256 + TILEMAP) (wordaux1)	5
     136.  00:AA9C  C0                  				DB		POSVIDAEXTX		;pos del pixel central (esquina superior + 8x)									6
     137.  00:AA9D  70                  				DB		POSAYUDASY		;pos del pixel central (esquina superior + 8y) (para toas igual)				7
     138.  00:AA9E  29 9C               				DW		accion_vidaextra;subrutina que indica la acción si se dispara en el objeto						8,9
     139.  00:AAA0  00                  				DB		0	;relleno																		10-16    
     140.  00:AAA1  00                  				DB		0	;relleno																		10-16    
     141.  00:AAA2  00                  				DB		0	;relleno																		10-16    
     142.  00:AAA3  00                  				DB		0	;relleno																		10-16    
     143.  00:AAA4  00                  				DB		0	;relleno																		10-16    
     144.  00:AAA5  00                  				DB		0	;relleno																		10-16   
     145.  00:AAA6  00                  				DB		0	;relleno																		10-16     
     146.  00:AAA7                      datos_ballesta:
     147.  00:AAA7  00                  				DB    	0				;0 no activo <>0 activo															0
     148.  00:AAA8  E8 AA               				DW		array_ballestaon;pos en memoria ver array_ayudas de cómo se mostrarán (wordaux2)				1,2
     149.  00:AAAA  EC AA               				DW		array_ballestaoff;pos en memoria ver array_ayudas de cómo se mostrarán (wordaux2)				3,4
     150.  00:AAAC  BB                  				DB		POSBALLESTA		;pos en pantalla (memoria en el banco 1 se le suma 256 + TILEMAP) (wordaux1)	5
     151.  00:AAAD  E0                  				DB		POSBALLESTAX	;pos del pixel central (esquina superior + 8x)									6
     152.  00:AAAE  70                  				DB		POSAYUDASY		;pos del pixel central (esquina superior + 8y) (para toas igual)				7
     153.  00:AAAF  24 9C               				DW		accion_oracion	;subrutina que indica la acción si se dispara en el objeto						8,9
     154.  00:AAB1  00                  				DB		0	;relleno																		10-16    
     155.  00:AAB2  00                  				DB		0	;relleno																		10-16    
     156.  00:AAB3  00                  				DB		0	;relleno																		10-16    
     157.  00:AAB4  00                  				DB		0	;relleno																		10-16    
     158.  00:AAB5  00                  				DB		0	;relleno																		10-16    
     159.  00:AAB6  00                  				DB		0	;relleno																		10-16   
     160.  00:AAB7  00                  				DB		0	;relleno																		10-16      
     161.  00:AAB8                      
     162.  00:AAB8                      
     163.  00:AAB8                      
     164.  00:AAB8                      
     165.  00:AAB8                      
     166.  00:AAB8                      ;array de ayudas
     167.  00:AAB8                      ;posición dentro del bank1 (o 0 que son iguales) de los tiles de la ayuda (cómo en los sprites de 2x2)
     168.  00:AAB8                      array_ayudas:
     169.  00:AAB8  C8 CA               array_oracionon:			DB	200,202
     170.  00:AABA  C9 CB               array_oracionon1:			DB	201,203
     171.  00:AABC  CC CE               array_oracionoff:			DB	204,206
     172.  00:AABE  CD CF               array_oracionoff1:			DB	205,207
     173.  00:AAC0  D0 D2               array_cruzon:				DB	208,210
     174.  00:AAC2  D1 D3               array_cruzon1:				DB	209,211
     175.  00:AAC4  D4 D6               array_cruzoff:				DB	212,214
     176.  00:AAC6  D5 D7               array_cruzoff1:				DB	213,215
     177.  00:AAC8  D8 DA               array_aguaon:				DB	216,218
     178.  00:AACA  D9 DB               array_aguaon1:				DB	217,219
     179.  00:AACC  DC DE               array_aguaoff:				DB	220,222
     180.  00:AACE  DD DF               array_aguaoff1:				DB	221,223
     181.  00:AAD0  E0 E2               array_armaduraon:			DB	224,226
     182.  00:AAD2  E1 E3               array_armaduraon1:			DB	225,227
     183.  00:AAD4  E4 E6               array_armaduraoff:			DB	228,230
     184.  00:AAD6  E5 E7               array_armaduraoff1:			DB	229,231
     185.  00:AAD8  E8 EA               array_plantaon:				DB	232,234
     186.  00:AADA  E9 EB               array_plantaon1:			DB	233,235
     187.  00:AADC  EC EE               array_plantaoff:			DB	236,238
     188.  00:AADE  ED EF               array_plantaoff1:			DB	237,239
     189.  00:AAE0  F0 F2               array_extraon:				DB	240,242
     190.  00:AAE2  F1 F3               array_extraon1:				DB	241,243
     191.  00:AAE4  F4 F6               array_extraoff:				DB	244,246
     192.  00:AAE6  F5 F7               array_extraoff1:			DB	245,247
     193.  00:AAE8  F8 FA               array_ballestaon:			DB	248,250
     194.  00:AAEA  F9 FB               array_ballestaon1:			DB	249,251
     195.  00:AAEC  FC FE               array_ballestaoff:			DB	252,254
     196.  00:AAEE  FD FF               array_ballestaoff1:			DB	253,255
     197.  00:AAF0                      
     198.  00:AAF0  00 (7)              antorchas:			DS		ESTRUCTURA_ANTORCHA
     199.  00:AAF7  C5 C6 C7            array_antorcha:				DB	197,198,199	;fuego + madera1 + madera2
     200.  00:AAFA                      
     201.  00:AAFA  00 (7)              esqueletos:			DS		ESTRUCTURA_ESQUELETO
     202.  00:AB01                      array_esqueleto:			DB	194, 0, 195, 160, 164, 161, 0, 163, 0, 193, 162, 192
     202.  00:AB01  C2 00 C3 A0 A4 A1 00 A3 00 C1 A2 C0 
     203.  00:AB0D  A4 A5 A4 A6         lista_escenas_calavera:		DB	164, 165, 164, 166
     204.  00:AB11                      
     205.  00:AB11                      
     206.  00:AB11                      
     207.  00:AB11                      
     208.  00:AB11                      ;array de 4 bytes x 32 sprites posibles en pantalla que sobreescribirá la tabla de sprites actualizando VRAM
     209.  00:AB11                      array_sprites:
     210.  00:AB11  00 (8)              array_sprites_pm:				DS	2 * 4
     211.  00:AB19  00 (120)            array_sprites_enem:				DS	30 * 4
     212.  00:AB91  00 (140)            lista_enemigos:					DS	10 * ESTRUCTURA_ENEMIGO
     213.  00:AC1D                      ; puntero al array a pintar en VRAM
     214.  00:AC1D  00 00               puntero_array_atrib_array_VRAM: DW	0	;ARRAYSPTRIES + 8
     215.  00:AC1F                      
     216.  00:AC1F                      
     217.  00:AC1F                      
     218.  00:AC1F                      
     219.  00:AC1F                      
     339   00:AC1F                      	
     340   00:AC1F                      ;;=====================================================
     341   00:AC1F                      ;;DEFINICIÓN DE PANTALLAS
     342   00:AC1F                      ;;=====================================================		
     343   00:AC1F                      	include "pantallas.asm"
       1.  00:AC1F                      ;;=====================================================
       2.  00:AC1F                      ;;DEFINICIÓN DE PANTALLAS
       3.  00:AC1F                      ;;=====================================================		
       4.  00:AC1F                      
       5.  00:AC1F                      ; bancos 1 y 2 y de pantalla 1 
       6.  00:AC1F                      ; se usa un banco común (en este caso el banco 1)
       7.  00:AC1F                      ; el mapa afecta al banco 1 y 2
       8.  00:AC1F  (022A)              tiles_patrones_nivel0:	incbin "pantallas/nivel0.bank1.til.bin.chr.plet5"
       9.  00:AE49  (006B)              tiles_color_nivel0:		incbin "pantallas/nivel0.bank1.til.bin.clr.plet5"
      10.  00:AEB4  (0035)              tiles_mapa_nivel0:		incbin "pantallas/nivel0.bank01.map.bin.plet5"
      11.  00:AEE9                      
      12.  00:AEE9  (01B5)              tiles_patrones_nivel1:	incbin "pantallas/nivel1.bank1.til.bin.chr.plet5"
      13.  00:B09E  (0047)              tiles_color_nivel1:		incbin "pantallas/nivel1.bank1.til.bin.clr.plet5"
      14.  00:B0E5  (0035)              tiles_mapa_nivel1:		incbin "pantallas/nivel1.bank01.map.bin.plet5"
      15.  00:B11A                      
      16.  00:B11A  (01B5)              tiles_patrones_nivel2:	incbin "pantallas/nivel2.bank1.til.bin.chr.plet5"
      17.  00:B2CF  (0047)              tiles_color_nivel2:		incbin "pantallas/nivel2.bank1.til.bin.clr.plet5"
      18.  00:B316  (0035)              tiles_mapa_nivel2:		incbin "pantallas/nivel2.bank01.map.bin.plet5"
      19.  00:B34B                      
      20.  00:B34B  (01B5)              tiles_patrones_nivel3:	incbin "pantallas/nivel3.bank1.til.bin.chr.plet5"
      21.  00:B500  (0047)              tiles_color_nivel3:		incbin "pantallas/nivel3.bank1.til.bin.clr.plet5"
      22.  00:B547  (0035)              tiles_mapa_nivel3:		incbin "pantallas/nivel3.bank01.map.bin.plet5"
      23.  00:B57C                      
      24.  00:B57C  (01B5)              tiles_patrones_nivel4:	incbin "pantallas/nivel4.bank1.til.bin.chr.plet5"
      25.  00:B731  (0047)              tiles_color_nivel4:		incbin "pantallas/nivel4.bank1.til.bin.clr.plet5"
      26.  00:B778  (0035)              tiles_mapa_nivel4:		incbin "pantallas/nivel4.bank01.map.bin.plet5"
      27.  00:B7AD                      
      28.  00:B7AD  (01B5)              tiles_patrones_nivel5:	incbin "pantallas/nivel5.bank1.til.bin.chr.plet5"
      29.  00:B962  (0047)              tiles_color_nivel5:		incbin "pantallas/nivel5.bank1.til.bin.clr.plet5"
      30.  00:B9A9  (0035)              tiles_mapa_nivel5:		incbin "pantallas/nivel5.bank01.map.bin.plet5"
      31.  00:B9DE                      
      32.  00:B9DE  (01B5)              tiles_patrones_nivel6:	incbin "pantallas/nivel6.bank1.til.bin.chr.plet5"
      33.  00:BB93  (0047)              tiles_color_nivel6:		incbin "pantallas/nivel6.bank1.til.bin.clr.plet5"
      34.  00:BBDA  (0035)              tiles_mapa_nivel6:		incbin "pantallas/nivel6.bank01.map.bin.plet5"
      35.  00:BC0F                      
      36.  00:BC0F                      ; 3º banco que es la parte de puntos, vidas, mapas, etc... es común
      37.  00:BC0F  (014C)              tiles_patrones_marcador:	incbin "pantallas/marcador.til.bin.chr.plet5"
      38.  00:BD5B  (0035)              tiles_color_marcador:		incbin "pantallas/marcador.til.bin.clr.plet5"
      39.  00:BD90  (0062)              tiles_mapa_marcador:		incbin "pantallas/marcador.map.bin.plet5"
      40.  00:BDF2                      
      41.  00:BDF2                      ;NOTA: FALTARÍAN PANTALLAS ESPECIALES (POR DEFINIR)
      42.  00:BDF2                      ; INICIO
      43.  00:BDF2                      ; GAME OVER
      44.  00:BDF2                      ; HUIDA
      45.  00:BDF2                      ; 2 FINAL BUENO
      46.  00:BDF2                      ; 1 FINAL MALO
     344   00:BDF2                      
     345   00:BDF2                      END:

    LABELS
-------------------------------------------------
00:000000D8 X GTTRIG
00:000000D5 X GTSTCK
00:0000F3DB   CLIKSW
00:0000013E X RDVDP
00:00000047   WRTVDP
00:0000005C   LDIRVM
00:00000059 X LDIRMV
00:0000005F   CHGMOD
00:00000041 X DISSCR
00:00000044 X ENASCR
00:00000062   CHGCLR
00:0000F3E9   FORCLR
00:0000F3EA   BAKCLR
00:0000F3EB   BDRCLR
00:000000C3   CLS
00:0000F3DF X RG0SAV
00:0000F3E0   RG1SAV
00:0000F3E1 X RG2SAV
00:0000F3E2 X RG3SAV
00:0000F3E3 X RG4SAV
00:0000F3E4 X RG5SAV
00:0000F3E5 X RG6SAV
00:0000F3E6 X RG7SAV
00:0000F3E7 X STATFL
00:00000099   REGEST
00:00000098   REGESCVDP
00:000000A0   PSG_A
00:000000A1   PSG_W
00:000000A2   PSG_R
00:00000000   CHRTBL
00:00001800   TILMAP
00:00001B00   SPRART
00:00002000   CLRTBL
00:00003800   SPRTBL
00:00000001   SI
00:00000000 X NO
00:00000001 X PUERTAACTIV
00:00000004   LIMCADENCIA
00:00000000 X COLTRASP
00:00000001   COLNEGRO
00:00000002 X COLVERDE
00:00000003 X COLVERCLA
00:00000004 X COLAZULOSC
00:00000005 X COLAZULLA
00:00000006   COLROJOOSC
00:00000007 X COLCYAN
00:00000008   COLROJO
00:00000009 X COLROJOCLA
00:0000000A X COLAMAROSC
00:0000000B X COLAMARCLA
00:0000000C X COLVERDOSC
00:0000000D X COLMAGENTA
00:0000000E X COLGRIS
00:0000000F   COLBLANCO
00:000002F8   POSMAPLIN1
00:000002D8   POSMAPLIN2
00:000002B8   POSMAPLIN3
00:00000298   POSMAPLIN4
00:00000278   POSMAPLIN5
00:00000258   POSMAPLIN6
00:00000238   POSMAPLIN7
00:0000000D   POSCARAMAP
00:00000248   POSVIDAS
00:00000011   POSRELIMAP
00:000002C8   POSRELIQ
00:00000288   POSENERG
00:000002B4   POSNIVEL
00:00000238   POSMAPA
00:000001EE   POSPUERABAJ
00:0000008E   POSPUERARRI
00:000000FC   POSPUERDERE
00:000000E1   POSPUERIZQU
00:0000006C   POSESCALERA
00:000000A3   POSORACION
00:000000A7 X POSCRUZ
00:000000AB   POSAGUA
00:000000AF   POSARMAD
00:000000B3   POSPLANTA
00:000000B7   POSVIDAEXT
00:000000BB   POSBALLESTA
00:00000020   POSORACIONX
00:00000040 X POSCRUZX
00:00000060   POSAGUAX
00:00000080   POSARMADX
00:000000A0   POSPLANTAX
00:000000C0   POSVIDAEXTX
00:000000E0   POSBALLESTAX
00:00000070   POSAYUDASY
00:00000078 X POSXPM
00:0000006C X POSYPM
00:00000000   INACTIVA
00:00000001   ACTIVA
00:00000001   HABTERMIN
00:00000088   POSANTOR1
00:00000097   POSANTOR2
00:000000C4   MAPLLAMA1
00:000000C5   MAPLLAMA2
00:000000FF   RESETLLAMA
00:00000088   POSESQUEL1
00:00000095   POSESQUEL2
00:000000A9   POSCALAVE1
00:000000B6   POSCALAVE2
00:00000019   RESETESQUEL
00:00000004   RESETESCENAESQUEL
00:00000013   TILEPROTAM
00:00000009   TILEGRISM
00:00000010   TILEMAPROJO
00:0000000F   TILEMAPAMAR
00:0000000E   TILEMAPVERD
00:00000008   NMAXVIDREL
00:00000007   NHABNIVEL
00:000000F8 X MAXENERGIA
00:000000D9   TILEENERG8
00:000000BA   TILEENERG7
00:0000009B   TILEENERG6
00:0000007C   TILEENERG5
00:0000005D   TILEENERG4
00:0000003E   TILEENERG3
00:0000001F   TILEENERG2
00:00000000   TILENEGRO
00:00000000 X LIMPANTIZQ
00:000000FF   LIMPANTDER
00:00000000 X LIMPANTARR
00:00000080   LIMPANTABA
00:00000006 X BASEMAPY
00:00000003 X BASEMAPX
00:0000FD9A X H.KEYI
00:0000FD9F   H.TIMI
00:0000F000   PT3_SETUP
00:0000F001   PT3_MODADDR
00:0000F003   PT3_CrPsPtr
00:0000F005   PT3_SAMPTRS
00:0000F007   PT3_OrnPtrs
00:0000F009   PT3_PDSP
00:0000F00B   PT3_CSP
00:0000F00D   PT3_PSP
00:0000F00F   PT3_PrNote
00:0000F010   PT3_PrSlide
00:0000F012   PT3_AdInPtA
00:0000F014   PT3_AdInPtB
00:0000F016   PT3_AdInPtC
00:0000F018   PT3_LPosPtr
00:0000F01A   PT3_PatsPtr
00:0000F01C   PT3_Delay
00:0000F01D   PT3_AddToEn
00:0000F01E   PT3_Env_Del
00:0000F01F   PT3_ESldAdd
00:0000F021   PT3_NTL3
00:0000F023   VARS
00:0000F023   ChanA
00:0000F040   ChanB
00:0000F05D   ChanC
00:0000F07A   DelyCnt
00:0000F07B   CurESld
00:0000F07D   CurEDel
00:0000F07E   Ns_Base_AddToNs
00:0000F07E   Ns_Base
00:0000F07F   AddToNs
00:0000F080   NT_
00:0000F140   AYREGS
00:0000F140   VT_
00:0000F14E   EnvBase
00:0000F150   VAR0END
00:0000F150   T1_
00:0000F150   T_NEW_1
00:0000F150   T_OLD_1
00:0000F168   T_OLD_2
00:0000F180   T_NEW_3
00:0000F180   T_OLD_3
00:0000F182   T_OLD_0
00:0000F182   T_NEW_0
00:0000F19A   T_NEW_2
00:0000F240   ayFX_MODE
00:0000F241   ayFX_BANK
00:0000F243   ayFX_PRIORITY
00:0000F244   ayFX_POINTER
00:0000F246   ayFX_TONE
00:0000F248   ayFX_NOISE
00:0000F249   ayFX_VOLUME
00:0000F24A   ayFX_CHANNEL
00:00008000   START
00:00008038   loop_principal
00:00008048 X fin_programa_principal
00:00008048   check_colisiones_objetos
00:00008057   check_colisiones_objetos.habitacion_no_terminada
00:00008057   fin_check_colisiones_objetos
00:00008059   check_colisiones_puertas
00:00008059 X check_colisiones_puertas.examina_puerta_arriba
00:0000807A   check_colisiones_puertas.examina_puerta_derecha
00:00008090   check_colisiones_puertas.examina_puerta_abajo
00:000080A6   check_colisiones_puertas.examina_puerta_izquierda
00:000080B7   fin_check_colisiones_puertas
00:000080B8   check_colision_puerta
00:000080B8 X check_colision_puerta.deteccioncolision_paso1
00:000080C9   check_colision_puerta.deteccioncolision_paso2
00:000080D1   check_colision_puerta.deteccioncolision_paso3
00:000080DE   check_colision_puerta.deteccioncolision_paso4
00:000080E6   check_colision_puerta.deteccioncolision_paso5
00:000080E8 X fin_check_colision_puerta
00:000080E9 X test_OK
00:000080FC X fin_test_OK
00:000080FD   inicializa_variables_pruebas
00:00008122 X fin_inicializa_variables_pruebas
00:00008123 X inicializa_niveles
00:0000812B   inicializa_niveles.inicia_nivel_0
00:00008138   inicializa_niveles.inicia_nivel_1
00:00008145   inicializa_niveles.inicia_nivel_2
00:00008152   inicializa_niveles.inicia_nivel_3
00:0000815F   inicializa_niveles.inicia_nivel_4
00:0000816C   inicializa_niveles.inicia_nivel_5
00:00008179   inicializa_niveles.inicia_nivel_6
00:00008184 X fin_iniciliza_niveles
00:00008185   actualiza_marcador_vidas
00:0000818A   loop_marcador_caras_negro
00:0000818F X fin_loop_marcador_caras_negro
00:00008198   loop_marcador_caras
00:0000819D X fin_loop_marcador_caras
00:0000819D X fin_actualiza_marcador_vidas
00:0000819E   actualiza_buffer_reliquias
00:000081A4   loop_buffer_reliquias_negro
00:000081B1   loop_buffer_reliquias
00:000081B6 X fin_actualiza_buffer_reliquias
00:000081B7   localiza_info_habitacion
00:000081BA X localiza_info_habitacion.situo_columna
00:000081C3 X localiza_info_habitacion.situo_fila
00:000081CC   localiza_info_habitacion.loop_suma_fila
00:000081D4   localiza_info_habitacion.situo_nivel
00:000081E3   localiza_info_habitacion.loop_suma_nivel
00:000081E8   localiza_info_habitacion.actualiza_variable_habitacion
00:0000820B X fin_localiza_info_habitacion
00:0000820C   terminada_habitacion_recorrida
00:00008226 X fin_terminada_habitacion_recorrida
00:00008226   cambio_habitacion
00:00008237 X fin_cambio_habitacion
00:00008238   suma_A_BC
00:0000823D X fin_suma_A_BC
00:0000823E   suma_A_HL
00:00008243 X fin_suma_A_HL
00:00008244   color_pantalla
00:00008255 X fin_color_pantalla
00:00008255   sub_preparapantalla
00:00008255 X elimina_clic
00:00008259 X fin_elimina_clic
00:00008259 X limpia_pantalla
00:0000825D X fin_limpia_pantalla
00:00008263 X screen2
00:00008268 X sprites_16_16
00:00008276 X fin_sub_preparapantalla
00:00008276   pinta_pantalla_completa
00:0000827C X fin_pinta_pantalla_completa
00:0000827D   pinta_parte_superior_pantalla
00:000082AE   pinta_parte_superior_pantalla.carga_nivel_0
00:000082C9   pinta_parte_superior_pantalla.carga_nivel_1
00:000082E4   pinta_parte_superior_pantalla.carga_nivel_2
00:000082FF   pinta_parte_superior_pantalla.carga_nivel_3
00:0000831A   pinta_parte_superior_pantalla.carga_nivel_4
00:00008335   pinta_parte_superior_pantalla.carga_nivel_5
00:00008350   pinta_parte_superior_pantalla.carga_nivel_6
00:00008368   pinta_parte_superior_pantalla.fin_carga_niveles
00:00008395 X fin_pinta_parte_superior_pantalla
00:00008395   tiles_patrones
00:00008397   tiles_colores
00:00008399   tiles_mapa
00:0000839B   pinta_parte_inferior_pantalla
00:000083B6 X fin_pinta_parte_inferior_pantalla
00:000083B6   pinta_vidas
00:000083C5 X fin_pinta_vidas
00:000083C5   pinta_reliquias
00:000083D4 X fin_pinta_reliquias
00:000083D4   pinta_nivel
00:000083E0 X fin_pinta_nivel
00:000083E0   pinta_tile_suelto
00:000083ED X fin_pinta_tile_suelto
00:000083EE   mira_pinta_energia
00:000083F4 X pinta_ener
00:000083F4 X pinta_ener_tile_8
00:00008400   pinta_ener_tile_8_negro
00:00008401   pinta_ener_tile_7
00:0000840B   pinta_ener_tile_7_negro
00:0000840C   pinta_ener_tile_6
00:00008416   pinta_ener_tile_6_negro
00:00008417   pinta_ener_tile_5
00:00008421   pinta_ener_tile_5_negro
00:00008422   pinta_ener_tile_4
00:0000842C   pinta_ener_tile_4_negro
00:0000842D   pinta_ener_tile_3
00:00008437   pinta_ener_tile_3_negro
00:00008438   pinta_ener_tile_2
00:00008442   pinta_ener_tile_2_negro
00:00008443   fin_mira_pinta_energia
00:00008445   pinta_energia
00:00008454 X fin_pinta_energia
00:00008454   borra_mapa
00:000084AA X fin_borra_mapa
00:000084AB   posiciona_en_mapa
00:000084AE X posiciona_en_mapa.sumar_fila
00:000084D8 X posiciona_en_mapa.fila_0
00:000084DF   posiciona_en_mapa.fila_1
00:000084E6   posiciona_en_mapa.fila_2
00:000084ED   posiciona_en_mapa.fila_3
00:000084F4   posiciona_en_mapa.fila_4
00:000084FB   posiciona_en_mapa.fila_5
00:00008502 X posiciona_en_mapa.fila_6
00:00008502   posiciona_en_mapa.sumar_columna
00:00008518   pinta_pos_mapa_vacio
00:0000851A   fin_pinta_pos_mapa
00:0000851D X fin_posiciona_en_mapa
00:0000851D   efecto_imagen_tira_reliquia
00:00008520   efecto_imagen_tira_reliquia.parpadea_fondo
00:00008537 X fin_efecto_imagen_tira_reliquia
00:00008537   pinta_array
00:00008552   pinta_array.pa_pinta_fila
00:00008553   pinta_array.pa_pinta_columnas
00:00008576 X fin_pinta_array
00:00008577   wordaux1
00:00008579   wordaux2
00:0000857B   byteaux1
00:0000857C   byteaux2
00:0000857D   inicializa_antorchas
00:0000859E X fin_inicializa_antorchas
00:0000859F   inicializa_esqueletos
00:000085C0 X fin_inicializa_esqueletos
00:000085C1   pinta_extra_fondo
00:000085C5 X pinta_extra_fondo.examina_sihay_antorchas
00:000085D4   pinta_extra_fondo.hayantorchas
00:000085FD   pinta_extra_fondo.examina_sihay_esqueletos
00:0000860E   pinta_extra_fondo.hayesqueletos
00:00008637 X fin_pinta_extra_fondo
00:00008638   actualiza_elementos_fondo
00:00008638 X actualiza_elementos_fondo.examina_antorchas
00:00008646   actualiza_elementos_fondo.examina_esqueletos
00:00008652 X fin_actualiza_elementos_fondo
00:00008652   flip_llamas_antorchas
00:0000866B X flip_llamas_antorchas.llama_impar
00:0000868C   flip_llamas_antorchas.llama_par
00:000086AB   fin_flip_llamas_antorchas
00:000086AF   flip_calavera_esqueletos
00:000086DC X fin_flip_calavera_esqueletos
00:000086DC   var_aux_calavera
00:000086DD   actualiza_escena_calavera
00:000086E9   actualiza_escena_calavera.decrementa_escenas
00:000086EA X actualiza_escena_calavera.fin_consulta_escena
00:000086F8 X fin_actualiza_escena_calavera
00:000086F9   array_puerta_arriba
00:0000870D   array_puerta_derecha
00:00008722   array_puerta_abajo
00:00008726   array_puerta_izquierda
00:0000873B   array_escalera
00:0000876B X lista_puertas
00:0000876B   puerta_arriba
00:00008778   puerta_derecha
00:00008785   puerta_abajo
00:00008792   puerta_izquierda
00:0000879F X datos_puertas
00:0000879F   datos_escalera
00:000087AC   datos_puerta_arriba
00:000087B9   datos_puerta_derecha
00:000087C6   datos_puerta_abajo
00:000087D3   datos_puerta_izquierda
00:000087E0   inicializa_puertas
00:000087F1   inicializa_puertas.pinta_escalera
00:000087F4   inicializa_puertas.cotinuamos_pintando_escalera_arriba
00:00008818 X fin_inicializa_puertas
00:00008819   carga_datos_puerta
00:0000881E X fin_carga_datos_puerta
00:0000881F   accion_puerta_arriba
00:00008826 X fin_accion_puerta_arriba
00:00008827 X accion_puerta_derecha
00:0000882E X fin_accion_puerta_derecha
00:0000882F X accion_puerta_abajo
00:00008835 X accion_puerta_abajo.decrementa_nivel
00:00008839   accion_puerta_abajo.decrementa_solo_habitacion
00:00008840 X fin_accion_puerta_abajo
00:00008841 X accion_puerta_izquierda
00:00008848 X fin_accion_puerta_izquierda
00:00008849   pinta_puertas
00:0000886F X fin_pinta_puertas
00:00008870   pinta_puerta_aba
00:0000887A X fin_pinta_puerta_aba
00:0000887A   pinta_puerta_arr
00:00008884 X fin_pinta_puerta_arr
00:00008884   pinta_puerta_der
00:0000888E X fin_pinta_puerta_der
00:0000888E   pinta_puerta_izq
00:00008898 X fin_pinta_puerta_izq
00:00008898   actualiza_variables_pinta_array
00:000088B6 X fin_actualiza_variables_pinta_array
00:000088B7   activa_desactiva_puertas
00:000088B7 X activa_desactiva_puertas.mira_puerta_arriba
00:000088C6   activa_desactiva_puertas.mira_puerta_derecha
00:000088D5   activa_desactiva_puertas.mira_puerta_abajo
00:000088E4   activa_desactiva_puertas.mira_puerta_izquierda
00:000088F3   fin_activa_desactiva_puertas
00:000088F4   carga_patrones_sprites_nivel
00:000088F8 X fin_carga_patrones_sprites_nivel
00:000088F8   carga_patrones_nivel_comunes
00:00008904 X fin_carga_patrones_nivel_comunes
00:00008904 X carga_patrones_sprites_nivel1
00:00008904 X fin_carga_patrones_sprites
00:00008905   render_sprites
00:00008911 X fin_actualiza_array_sprites_vram
00:00008911   vuelca_resultado_puntomira_array
00:00008936 X vuelca_resultado_puntomira_array.codigo_color_1
00:0000893F   vuelca_resultado_puntomira_array.codigo_color_2
00:00008948 X fin_vuelca_resultado_puntomira_array
00:00008948   check_player
00:00008967 X f
00:00008968   mueve_arriba
00:00008973   mueve_arriba.no_decrementa_y
00:00008974 X fin_mueve_arriba
00:00008975   mueve_derecha
00:00008982   mueve_derecha.no_incrementa_x
00:00008983 X fin_mueve_derecha
00:00008984   mueve_abajo
00:00008991   mueve_abajo.no_incrementa_y
00:00008992 X fin_mueve_abajo
00:00008993   mueve_izquierda
00:0000899E   mueve_izquierda.no_decrementa_x
00:0000899F X fin_mueve_izquierda
00:000089A0   mira_disparo
00:000089A0 X mira_disparo.mira_boton_pulsado1
00:000089AD X mira_disparo.no_efectua_disparo
00:000089B8   mira_disparo.efectua_disparo
00:000089CD   mira_disparo.fin_mira_disparo1
00:000089CE   mira_disparo.mira_boton_pulsado2
00:000089EA X fin_mira_disparo
00:000089EA   update_controllers_status
00:00008A21   read_joy_0
00:00008A35   check_8th_keyboard_row
00:00008A43   check_4th_keyboard_row
00:00008A51 X inicializa_replayer_efectos_interrupciones
00:00008A6A X fin_inicializa_replayer_efectos_interrupciones
00:00008A6B   subrutina_isr
00:00008A74 X fin_subrutina_isr
00:00008A74 X subrutinas_sonido
00:00000000   CHNPRM_PsInOr
00:00000001   CHNPRM_PsInSm
00:00000002   CHNPRM_CrAmSl
00:00000003   CHNPRM_CrNsSl
00:00000004   CHNPRM_CrEnSl
00:00000005   CHNPRM_TSlCnt
00:00000006   CHNPRM_CrTnSl
00:00000008   CHNPRM_TnAcc
00:0000000A   CHNPRM_COnOff
00:0000000B   CHNPRM_OnOffD
00:0000000C   CHNPRM_OffOnD
00:0000000D   CHNPRM_OrnPtr
00:0000000F   CHNPRM_SamPtr
00:00000011   CHNPRM_NNtSkp
00:00000012   CHNPRM_Note
00:00000013   CHNPRM_SlToNt
00:00000014   CHNPRM_Env_En
00:00000015   CHNPRM_Flags
00:00000016   CHNPRM_TnSlDl
00:00000017   CHNPRM_TSlStp
00:00000019   CHNPRM_TnDelt
00:0000001B   CHNPRM_NtSkCn
00:0000001C   CHNPRM_Volume
00:0000001D X CHNPRM_Size
00:00000000   AR_TonA
00:00000002   AR_TonB
00:00000004   AR_TonC
00:00000006   AR_Noise
00:00000007   AR_Mixer
00:00000008   AR_AmplA
00:00000009   AR_AmplB
00:0000000A   AR_AmplC
00:0000000B   AR_Env
00:0000000D   AR_EnvTp
00:00008A74   CHECKLP
00:00008A85 X PT3_MUTE
00:00008A91   PT3_INIT
00:00008AD0   PT3_INIT.TP_0
00:00008ADC   PT3_INIT.TP_1
00:00008AE3   PT3_INIT.TP_2
00:00008B51   PT3_INIT.L1
00:00008B5E   PT3_INIT.L2
00:00008B62 X PT3_INIT.L3
00:00008B89   PT3_INIT.CORR_1
00:00008B97   PT3_INIT.CORR_2
00:00008B9E   PT3_INIT.TC_EXIT
00:00008BA9   PT3_INIT.INITV1
00:00008BB1   PT3_INIT.INITV2
00:00008BC5   PT3_INIT.INITV3
00:00008BC9   PD_OrSm
00:00008BD3   PD_SAM
00:00008BD4   PD_SAM_
00:00008BEA   PD_VOL
00:00008BF3   PD_EOff
00:00008BFB   PD_SorE
00:00008C05   PD_ENV
00:00008C0A   PD_ORN
00:00008C0F   PD_ESAM
00:00008C1C   PTDECOD
00:00008C2B   PD_LOOP
00:00008C2E   PD_LP2
00:00008C5B   PD_NOIS
00:00008C60   PD_REL
00:00008C66   PD_NOTE
00:00008C6E   PD_RES
00:00008C80   PD_FIN
00:00008C87   C_PORTM
00:00008CD2   C_PORTM.NOSIG
00:00008CDC   SET_STP
00:00008CE8   C_GLISS
00:00008CFB   C_SMPOS
00:00008D01   C_ORPOS
00:00008D07   C_VIBRT
00:00008D1F   C_ENGLS
00:00008D31   C_DELAY
00:00008D37   SETENV
00:00008D52   C_NOP
00:00008D53   SETORN
00:00008D6C   SPCCOMS
00:00008D8C   CHREGS
00:00008DAF   CHREGS.CH_ORPS
00:00008DBA   CHREGS.CH_NTP
00:00008DC0   CHREGS.CH_NOK
00:00008DDB   CHREGS.CH_SMPS
00:00008DF1   CHREGS.CH_NOAC
00:00008E38   CHREGS.CH_STPP
00:00008E4D   CHREGS.CH_AMP
00:00008E5F   CHREGS.CH_AMIN
00:00008E64   CHREGS.CH_SVAM
00:00008E67   CHREGS.CH_NOAM
00:00008E70   CHREGS.CH_APOS
00:00008E76   CHREGS.CH_VOL
00:00008E81 X CHREGS.CH_ENV
00:00008E88   CHREGS.CH_NOEN
00:00008EA2   CHREGS.NO_ENAC
00:00008EA9   CHREGS.NO_ENSL
00:00008EB7   CHREGS.CH_MIX
00:00008EBB   CHREGS.CH_EXIT
00:00008EDA   CHREGS.CH_ONDL
00:00008EDE   PT3_PLAY
00:00008F12   PT3_PLAY.PLNLP
00:00008F39   PT3_PLAY.PL1A
00:00008F44   PT3_PLAY.PL1B
00:00008F59   PT3_PLAY.PL1C
00:00008F6E   PT3_PLAY.PL1D
00:00008F74   PT3_PLAY.PL2
00:00008FD6   PT3_ROUT
00:00008FD7   ROUT_A0
00:00008FE3   ROUT_A0.LOUT
00:00008FF7   NT_DATA
00:00009007   T_
00:00009007   TCOLD_0
00:00009013   TCNEW_1
00:00009013   TCOLD_1
00:00009015   TCOLD_2
00:00009027   TCNEW_3
00:00009028   TCOLD_3
00:00009031   TCNEW_0
00:0000903C   TCNEW_2
00:00009047   EMPTYSAMORN
00:0000904B   T_PACK
00:00000000 X AYFXRELATIVE
00:00009080   ayFX_SETUP
00:0000908C   ayFX_END
00:00009092   ayFX_INIT
00:000090A3   ayFX_INIT.CHECK_PRI
00:000090C4   ayFX_INIT.INIT_END
00:000090C8   ayFX_PLAY
00:000090DC   ayFX_PLAY.TAKECB
00:000090ED   ayFX_PLAY.CHECK_NN
00:000090FA   ayFX_PLAY.SETPOINTER
00:0000910E   ayFX_PLAY.SETMASKS
00:0000911C X ayFX_PLAY.CHK1
00:0000911E X ayFX_PLAY.PLAY_C
00:0000912B   ayFX_PLAY.CHK2
00:00009130 X ayFX_PLAY.PLAY_B
00:0000913D   ayFX_PLAY.CHK3
00:00009140 X ayFX_PLAY.PLAY_A
00:0000914D   ayFX_PLAY.SETMIXER
00:0000915D   song
00:00009AC5   sfx_bank
00:00009B10   inicializa_ayudas
00:00009B77 X fin_resetea_ayudas
00:00009B78   carga_datos_ayuda
00:00009B7D X fin_carga_datos_ayuda
00:00009B7E   pinta_obj_ayuda
00:00009B82 X pinta_obj_ayuda.dibujoon
00:00009B8E   pinta_obj_ayuda.dibujooff
00:00009B97   pinta_obj_ayuda.param_wordaux2
00:00009BA3 X pinta_obj_ayuda.filasycols
00:00009BAE X fin_pinta_obj_ayuda
00:00009BAE   pinta_ayudas_habitacion
00:00009BAE X pinta_ayudas_habitacion.examina_oracion
00:00009BBF   pinta_ayudas_habitacion.examina_cruz
00:00009BD0   pinta_ayudas_habitacion.examina_aguabendita
00:00009BE1   pinta_ayudas_habitacion.examina_armadura
00:00009BF2   pinta_ayudas_habitacion.examina_planta
00:00009C03   pinta_ayudas_habitacion.examina_vidaextra
00:00009C14   pinta_ayudas_habitacion.examina_ballesta
00:00009C23 X fin_pinta_ayudas_habitacion
00:00009C24   accion_oracion
00:00009C24 X fin_accion_oracion
00:00009C25   accion_cruz
00:00009C25 X fin_accion_cruz
00:00009C26   accion_agua
00:00009C26 X fin_accion_agua
00:00009C27   accion_armadura
00:00009C27 X fin_accion_armadura
00:00009C28   accion_planta
00:00009C28 X fin_accion_planta
00:00009C29   accion_vidaextra
00:00009C29 X fin_accion_vidaextra
00:00009C2A X accion_ballesta
00:00009C2A X fin_accion_ballesta
00:00009C2B   depack_VRAM
00:00009C58   literal
00:00009C5D   loop
00:00009C66 X getlen
00:00009C6C   lus
00:00009C89   lenok
00:00009C96   mode7
00:00009C9C   mode6
00:00009CA2   mode5
00:00009CA8   mode4
00:00009CAE   mode3
00:00009CB4   mode2
00:00009CC4   offsok
00:00009CCF   offsok.loop
00:00009CF1   getbit
00:00009CF5   getbitexx
00:00009CFB   Depack_out
00:00009CFD   modes
00:00000000   ESTRUCTURA_PUNTOMIRA.posx
00:00000001   ESTRUCTURA_PUNTOMIRA.posy
00:00000002 X ESTRUCTURA_PUNTOMIRA.escena
00:00000003 X ESTRUCTURA_PUNTOMIRA.velocidad
00:00000004 X ESTRUCTURA_PUNTOMIRA.boton2_pressed
00:00000005 X ESTRUCTURA_PUNTOMIRA.cadencia
00:00000006 X ESTRUCTURA_PUNTOMIRA.pm_aux1
00:00000007 X ESTRUCTURA_PUNTOMIRA.pm_aux2
00:00000008 X ESTRUCTURA_PUNTOMIRA.pm_aux3
00:00000009 X ESTRUCTURA_PUNTOMIRA.pm_aux4
00:0000000A X ESTRUCTURA_PUNTOMIRA.pm_aux5
00:0000000B X ESTRUCTURA_PUNTOMIRA.pm_aux6
00:0000000C X ESTRUCTURA_PUNTOMIRA.pm_aux7
00:0000000D X ESTRUCTURA_PUNTOMIRA.pm_aux8
00:0000000E X ESTRUCTURA_PUNTOMIRA.pm_aux9
00:0000000F X ESTRUCTURA_PUNTOMIRA.pm_aux10
00:00000010 X ESTRUCTURA_PUNTOMIRA
00:00000000 X ESTRUCTURA_ENEMIGO.tipo
00:00000001 X ESTRUCTURA_ENEMIGO.posx
00:00000002 X ESTRUCTURA_ENEMIGO.posy
00:00000003 X ESTRUCTURA_ENEMIGO.color
00:00000004 X ESTRUCTURA_ENEMIGO.escena
00:00000005 X ESTRUCTURA_ENEMIGO.contador_siguiente_escena
00:00000006 X ESTRUCTURA_ENEMIGO.reset_contador
00:00000007 X ESTRUCTURA_ENEMIGO.dano
00:00000008 X ESTRUCTURA_ENEMIGO.energia
00:00000009 X ESTRUCTURA_ENEMIGO.ver_hor
00:0000000A X ESTRUCTURA_ENEMIGO.manejador_dibujo
00:0000000C X ESTRUCTURA_ENEMIGO.en_aux3
00:0000000D X ESTRUCTURA_ENEMIGO.en_aux4
00:0000000E   ESTRUCTURA_ENEMIGO
00:00000000 X ESTRUCTURA_AYUDA.activo
00:00000001 X ESTRUCTURA_AYUDA.postilemem_nousado
00:00000003 X ESTRUCTURA_AYUDA.postilemem_usado
00:00000005 X ESTRUCTURA_AYUDA.pospantalla
00:00000006 X ESTRUCTURA_AYUDA.posx
00:00000007 X ESTRUCTURA_AYUDA.posy
00:00000008 X ESTRUCTURA_AYUDA.puntero_accion
00:0000000A X ESTRUCTURA_AYUDA.ayu_aux1
00:0000000B X ESTRUCTURA_AYUDA.ayu_aux2
00:0000000C X ESTRUCTURA_AYUDA.ayu_aux3
00:0000000D X ESTRUCTURA_AYUDA.ayu_aux4
00:0000000E X ESTRUCTURA_AYUDA.ayu_aux5
00:0000000F X ESTRUCTURA_AYUDA.ayu_aux6
00:00000010   ESTRUCTURA_AYUDA
00:00000000 X ESTRUCTURA_ANTORCHA.activo
00:00000001 X ESTRUCTURA_ANTORCHA.postilemem_antor1
00:00000003 X ESTRUCTURA_ANTORCHA.pospantalla_antor1
00:00000004 X ESTRUCTURA_ANTORCHA.pospantalla_antor2
00:00000005 X ESTRUCTURA_ANTORCHA.escena
00:00000006 X ESTRUCTURA_ANTORCHA.cont_sig_escena
00:00000007   ESTRUCTURA_ANTORCHA
00:00000000 X ESTRUCTURA_ESQUELETO.activo
00:00000001 X ESTRUCTURA_ESQUELETO.postilemem_antor1
00:00000003 X ESTRUCTURA_ESQUELETO.pospantalla_esquel1
00:00000004 X ESTRUCTURA_ESQUELETO.pospantalla_esquel2
00:00000005   ESTRUCTURA_ESQUELETO.escena
00:00000006   ESTRUCTURA_ESQUELETO.cont_sig_escena
00:00000007   ESTRUCTURA_ESQUELETO
00:00000000   ESTRUCTURA_PUERTA.activa
00:00000001   ESTRUCTURA_PUERTA.posx
00:00000002   ESTRUCTURA_PUERTA.posy
00:00000003   ESTRUCTURA_PUERTA.radiox
00:00000004   ESTRUCTURA_PUERTA.radioy
00:00000005   ESTRUCTURA_PUERTA.accion
00:00000007   ESTRUCTURA_PUERTA.tiles_puerta
00:00000009   ESTRUCTURA_PUERTA.pos_en_tilemap
00:0000000B   ESTRUCTURA_PUERTA.alto
00:0000000C   ESTRUCTURA_PUERTA.ancho
00:0000000D   ESTRUCTURA_PUERTA
00:00009D0B X sprites_pantantalla
00:00009D0B   sprites_comunes
00:00009D0B X sprite_punto_mira_1
00:00009D2B X sprite_punto_mira_2
00:00009D4B X sprite_punto_mira_1_mejorado
00:00009D6B X sprite_punto_mira_2_mejorado
00:00009D8B X sprite_explosion_1
00:00009DAB X sprite_explosion_2
00:00009DCB   fin_sprites_comunes
00:00009DCB X sprite_arana1_1
00:00009DEB X sprite_arana1_2
00:00009E0B X sprite_murcielago1_1
00:00009E2B X sprite_murcielago1_2
00:00009E4B X sprite_serpiente1_1
00:00009E6B X sprite_serpiente1_2
00:00009E8B X sprite_serpiente2_1
00:00009EAB X sprite_serpiente2_2
00:00009ECB X sprite_zombi1_1_1
00:00009EEB X sprite_zombi1_2_1
00:00009F0B X sprite_zombi1_3_1
00:00009F2B X sprite_zombi1_4_1
00:00009F4B X sprite_zombi1_1_2
00:00009F6B X sprite_zombi1_2_2
00:00009F8B X sprite_zombi1_3_2
00:00009FAB X sprite_zombi1_4_2
00:00009FCB X sprite_zombi2_1_1
00:00009FEB X sprite_zombi2_2_1
00:0000A00B X sprite_zombi2_3_1
00:0000A02B X sprite_zombi2_4_1
00:0000A04B X sprite_zombi2_1_2
00:0000A06B X sprite_zombi2_2_2
00:0000A08B X sprite_zombi2_3_2
00:0000A0AB X sprite_zombi2_4_2
00:0000A0CB X sprite_caballero1_1_1
00:0000A0EB X sprite_caballero1_2_1
00:0000A10B X sprite_caballero1_3_1
00:0000A12B X sprite_caballero1_4_1
00:0000A14B X sprite_caballero1_1_2
00:0000A16B X sprite_caballero1_2_2
00:0000A18B X sprite_caballero1_3_2
00:0000A1AB X sprite_caballero1_4_2
00:0000A1CB X sprite_caballero2_1_1
00:0000A1EB X sprite_caballero2_2_1
00:0000A20B X sprite_caballero2_3_1
00:0000A22B X sprite_caballero2_4_1
00:0000A24B X sprite_caballero2_1_2
00:0000A26B X sprite_caballero2_2_2
00:0000A28B X sprite_caballero2_3_2
00:0000A2AB X sprite_caballero2_4_2
00:0000A2CB X sprite_llama1_1
00:0000A2EB X sprite_llama2_1
00:0000A30B X sprite_llama1_2
00:0000A32B X sprite_llama2_2
00:0000A34B X sprite_fantasma1_1
00:0000A36B X sprite_fantasma2_1
00:0000A38B X sprite_fantasma1_2
00:0000A3AB X sprite_fantasma2_2
00:0000A3CB X sprite_magia1_1
00:0000A3EB X sprite_magia2_1
00:0000A40B X sprite_magia1_2
00:0000A42B X sprite_magia2_2
00:0000A44B X sprite_beholder1_1
00:0000A46B X sprite_beholder2_1
00:0000A48B X sprite_beholder3_1
00:0000A4AB X sprite_beholder4_1
00:0000A4CB X sprite_beholder1_2
00:0000A4EB X sprite_beholder2_2
00:0000A50B X sprite_beholder3_2
00:0000A52B X sprite_beholder4_2
00:0000A54B X sprite_vampiro1_1
00:0000A56B X sprite_vampiro2_1
00:0000A58B X sprite_vampiro1_2
00:0000A5AB X sprite_vampiro2_2
00:0000A5CB X sprite_manoizq1
00:0000A5EB X sprite_manoizq2
00:0000A60B X sprite_manoizq3
00:0000A62B X sprite_manoder1
00:0000A64B X sprite_manoder2
00:0000A66B X sprite_manoder3
00:0000A68B   habitacion_actual
00:0000A68C   habitacion_extras
00:0000A68D   habitacion_actual_puntero
00:0000A68F   is_habitacion_terminada
00:0000A690   habitaciones_juego
00:0000A690   habitaciones_nivel0
00:0000A700   habitaciones_nivel1
00:0000A770   habitaciones_nivel2
00:0000A7E0   habitaciones_nivel3
00:0000A850   habitaciones_nivel4
00:0000A8C0   habitaciones_nivel5
00:0000A930   habitaciones_nivel6
00:0000A9A0   color_base
00:0000A9A3   color_bomba1
00:0000A9A6   color_bomba2
00:0000A9A9   prota
00:0000A9A9   prota.posx
00:0000A9AA   prota.posy
00:0000A9AB   prota.escena
00:0000A9AC X prota.velocidad
00:0000A9AD X prota.boton2_pressed
00:0000A9AE   prota.cadencia
00:0000A9AF X prota.pm_aux1
00:0000A9B0 X prota.pm_aux2
00:0000A9B1 X prota.pm_aux3
00:0000A9B2 X prota.pm_aux4
00:0000A9B3 X prota.pm_aux5
00:0000A9B4 X prota.pm_aux6
00:0000A9B5 X prota.pm_aux7
00:0000A9B6 X prota.pm_aux8
00:0000A9B7 X prota.pm_aux9
00:0000A9B8 X prota.pm_aux10
00:0000A9B9   prota_nivel
00:0000A9BA   prota_vidas
00:0000A9BB   prota_reliquias
00:0000A9BC   prota_pos_mapx
00:0000A9BD   prota_pos_mapy
00:0000A9BE   prota_energia
00:0000A9BF   array_aux_vidas
00:0000A9C7   array_aux_reliquias
00:0000A9CF   array_aux_energia
00:0000A9D6   ultimo_pos_array_aux_energia
00:0000A9D7   array_aux_mapa_limpiar
00:0000A9DE   elemento_pintar_mapa
00:0000A9DF X lista_ayudas
00:0000A9DF   ayuda_oracion
00:0000A9EF   ayuda_cruz
00:0000A9FF   ayuda_aguabendita
00:0000AA0F   ayuda_armadura
00:0000AA1F   ayuda_planta
00:0000AA2F   ayuda_vidaextra
00:0000AA3F   ayuda_ballesta
00:0000AA4F X datos_oracion
00:0000AA59   datos_cruz
00:0000AA63   datos_aguabendita
00:0000AA74   datos_armadura
00:0000AA85   datos_planta
00:0000AA96   datos_vidaextra
00:0000AAA7   datos_ballesta
00:0000AAB8 X array_ayudas
00:0000AAB8   array_oracionon
00:0000AABA X array_oracionon1
00:0000AABC   array_oracionoff
00:0000AABE X array_oracionoff1
00:0000AAC0   array_cruzon
00:0000AAC2 X array_cruzon1
00:0000AAC4   array_cruzoff
00:0000AAC6 X array_cruzoff1
00:0000AAC8   array_aguaon
00:0000AACA X array_aguaon1
00:0000AACC   array_aguaoff
00:0000AACE X array_aguaoff1
00:0000AAD0   array_armaduraon
00:0000AAD2 X array_armaduraon1
00:0000AAD4   array_armaduraoff
00:0000AAD6 X array_armaduraoff1
00:0000AAD8   array_plantaon
00:0000AADA X array_plantaon1
00:0000AADC   array_plantaoff
00:0000AADE X array_plantaoff1
00:0000AAE0   array_extraon
00:0000AAE2 X array_extraon1
00:0000AAE4   array_extraoff
00:0000AAE6 X array_extraoff1
00:0000AAE8   array_ballestaon
00:0000AAEA X array_ballestaon1
00:0000AAEC   array_ballestaoff
00:0000AAEE X array_ballestaoff1
00:0000AAF0   antorchas
00:0000AAF7   array_antorcha
00:0000AAFA   esqueletos
00:0000AB01   array_esqueleto
00:0000AB0D   lista_escenas_calavera
00:0000AB11   array_sprites
00:0000AB11   array_sprites_pm
00:0000AB19 X array_sprites_enem
00:0000AB91 X lista_enemigos
00:0000AC1D X puntero_array_atrib_array_VRAM
00:0000AC1F   tiles_patrones_nivel0
00:0000AE49   tiles_color_nivel0
00:0000AEB4   tiles_mapa_nivel0
00:0000AEE9   tiles_patrones_nivel1
00:0000B09E   tiles_color_nivel1
00:0000B0E5   tiles_mapa_nivel1
00:0000B11A   tiles_patrones_nivel2
00:0000B2CF   tiles_color_nivel2
00:0000B316   tiles_mapa_nivel2
00:0000B34B   tiles_patrones_nivel3
00:0000B500   tiles_color_nivel3
00:0000B547   tiles_mapa_nivel3
00:0000B57C   tiles_patrones_nivel4
00:0000B731   tiles_color_nivel4
00:0000B778   tiles_mapa_nivel4
00:0000B7AD   tiles_patrones_nivel5
00:0000B962   tiles_color_nivel5
00:0000B9A9   tiles_mapa_nivel5
00:0000B9DE   tiles_patrones_nivel6
00:0000BB93   tiles_color_nivel6
00:0000BBDA   tiles_mapa_nivel6
00:0000BC0F   tiles_patrones_marcador
00:0000BD5B   tiles_color_marcador
00:0000BD90   tiles_mapa_marcador
00:0000BDF2   END


 Output: t4.out
-------------------------------------------------

 Page: 00
  Org: 00008000  Size: *  Used: 00000000

    No output

 Output: t4.bin
-------------------------------------------------

 Page: 00
  Org: 00008000  Size: *  Used: 00003DF9

   Address   Length Align   Label
   00008000   15865         START
