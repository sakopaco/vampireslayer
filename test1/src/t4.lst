Sjasm Z80 Assembler v0.42c - www.xl2s.tk             [2021.08.30 - 09:59:36]

t4.asm
Errors: 0

       1   00:0000                      	OUTPUT	"t4.bin"
       2   00:8000                      	
       3   00:8000                      ;;=====================================================
       4   00:8000                      ;;DEFINICIÓN DE CONSTANTES
       5   00:8000                      ;;=====================================================	
       6   00:8000                      	include "constantes.asm"
       1.  00:8000                      ;;=====================================================
       2.  00:8000                      ;; FICHERO constantes.asm
       3.  00:8000                      ;;=====================================================
       4.  00:8000                      
       5.  00:8000                      ;;ETIQUETAS/CONSTANTES BIOS TECLADO
       6.  00:8000  (00:00D8)           GTTRIG		equ		#00D8	;Returns current trigger status
       7.  00:8000  (00:00D5)           GTSTCK		equ		#00D5	;Returns the joystick/cursors status
       8.  00:8000  (00:F3DB)           CLIKSW		equ		#F3DB	;deshabilita el sonido de clic cuando se pulsa una tecla
       9.  00:8000                      
      10.  00:8000                      ;;ETIQUETAS/CONSTANTES BIOS VDP
      11.  00:8000  (00:013E)           RDVDP		equ		#013E	;lee registro status VDP
      12.  00:8000  (00:0047)           WRTVDP		equ		#0047	;escribe registros del VDP
      13.  00:8000  (00:005C)           LDIRVM		equ		#005C	;RAM/ROM -> VRAM
      14.  00:8000  (00:0059)           LDIRMV		equ		#0059	;VRAM -> RAM
      15.  00:8000  (00:005F)           CHGMOD		equ		#005F	;cambia modo pantalla (screen mode)
      16.  00:8000  (00:0041)           DISSCR  	equ		#0041	;desactiva pantanlla
      17.  00:8000  (00:0044)           ENASCR  	equ		#0044	;activa pantalla
      18.  00:8000  (00:0062)           CHGCLR  	equ		#0062	;cambia color de pantalla (toca A y direcciones)
      19.  00:8000  (00:F3E9)           FORCLR		equ		#F3E9	;zona memoria color foreground
      20.  00:8000  (00:F3EA)           BAKCLR  	equ		#F3EA	;zona memoria color background
      21.  00:8000  (00:F3EB)           BDRCLR 		equ		#F3EB	;zona memoria bordercolor
      22.  00:8000  (00:00C3)           CLS			equ		#00C3	;limpia pantalla (necesita A=0)
      23.  00:8000                      
      24.  00:8000                      ;;ETIQUETAS/CONSTANTES REGISTROS VDP
      25.  00:8000  (00:F3DF)           RG0SAV		equ		#F3DF	;Mirror of VDP register 0 (Basic: VDP(0))
      26.  00:8000  (00:F3E0)           RG1SAV		equ		#F3E0	;Mirror of VDP register 1 (Basic: VDP(1))
      27.  00:8000  (00:F3E1)           RG2SAV		equ		#F3E1	;Mirror of VDP register 2 (Basic: VDP(2))
      28.  00:8000  (00:F3E2)           RG3SAV		equ		#F3E2	;Mirror of VDP register 3 (Basic: VDP(3))
      29.  00:8000  (00:F3E3)           RG4SAV		equ		#F3E3	;Mirror of VDP register 4 (Basic: VDP(4))
      30.  00:8000  (00:F3E4)           RG5SAV		equ		#F3E4	;Mirror of VDP register 5 (Basic: VDP(5))
      31.  00:8000  (00:F3E5)           RG6SAV		equ		#F3E5	;Mirror of VDP register 6 (Basic: VDP(6))
      32.  00:8000  (00:F3E6)           RG7SAV		equ		#F3E6	;Mirror of VDP register 7 (Basic: VDP(7))
      33.  00:8000  (00:F3E7)           STATFL		equ		#F3E7	;Mirror of VDP(8) status register (S#0)
      34.  00:8000                      
      35.  00:8000  (00:0099)           REGEST		equ		#0099	;registro de estado para escribir directamente en VRAM
      36.  00:8000  (00:0098)           REGESCVDP	equ		#0098	;registro donde escribir valor para VRAM
      37.  00:8000                      
      38.  00:8000                      ;;ETIQUETAS/CONSTANTES REGISTROS PSG (PARA JOYSTICK)
      39.  00:8000  (00:00A0)           PSG_A  equ  0a0h  ;reg address
      40.  00:8000  (00:00A1)           PSG_W  equ  0a1h  ;reg data WR
      41.  00:8000  (00:00A2)           PSG_R  equ  0a2h  ;reg data
      42.  00:8000                      
      43.  00:8000                      
      44.  00:8000                      ;;ETIQUETAS DE ZONAS DE MEMORIA DE LA VPD (MSX1)
      45.  00:8000  (00:0000)           CHRTBL		equ		#0000
      46.  00:8000  (00:1800)           TILMAP		equ		#1800
      47.  00:8000  (00:1B00)           SPRART		equ		#1B00
      48.  00:8000  (00:2000)           CLRTBL		equ		#2000
      49.  00:8000  (00:3800)           SPRTBL		equ		#3800
      50.  00:8000                      
      51.  00:8000                      
      52.  00:8000                      ;;ETIQUETAS ESTANDAR PARA DAR MÁS CLARIDAD AL CODIGO
      53.  00:8000  (00:0001)           SI			equ		1
      54.  00:8000  (00:0000)           NO			equ		0
      55.  00:8000  (00:0004)           LIMCADENCIA equ		4	;nº de veces que se ejecutará el disparo antes de ejecutar un disparo real (porque cuando se pulsa la tecl dispara 3 ó 4 veces de rápido que va)
      56.  00:8000                      ;hay que estudiar si 3 es un nº mejor
      57.  00:8000                      
      58.  00:8000                      
      59.  00:8000                      
      60.  00:8000                      ;;PALETA DE COLORES DEL MSX
      61.  00:8000  (00:0000)           COLTRASP	equ		0
      62.  00:8000  (00:0001)           COLNEGRO	equ		1
      63.  00:8000  (00:0002)           COLVERDE	equ		2
      64.  00:8000  (00:0003)           COLVERCLA	equ		3
      65.  00:8000  (00:0004)           COLAZULOSC	equ		4
      66.  00:8000  (00:0005)           COLAZULLA	equ		5
      67.  00:8000  (00:0006)           COLROJOOSC	equ		6
      68.  00:8000  (00:0007)           COLCYAN		equ		7
      69.  00:8000  (00:0008)           COLROJO		equ		8
      70.  00:8000  (00:0009)           COLROJOCLA	equ		9
      71.  00:8000  (00:000A)           COLAMAROSC	equ		10
      72.  00:8000  (00:000B)           COLAMARCLA	equ		11
      73.  00:8000  (00:000C)           COLVERDOSC	equ		12
      74.  00:8000  (00:000D)           COLMAGENTA	equ		13
      75.  00:8000  (00:000E)           COLGRIS		equ		14
      76.  00:8000  (00:000F)           COLBLANCO	equ		15
      77.  00:8000                      
      78.  00:8000                      
      79.  00:8000                      
      80.  00:8000                      ;;ETIQUETAS ESPECIFICAS PARA DAR MÁS CLARIDAD AL CODIGO (relacionadas con posiciones en mapa vdp)
      81.  00:8000  (00:02F8)           POSMAPLIN1  equ		#02F8
      82.  00:8000  (00:02D8)           POSMAPLIN2  equ		#02D8
      83.  00:8000  (00:02B8)           POSMAPLIN3  equ		#02B8
      84.  00:8000  (00:0298)           POSMAPLIN4  equ		#0298
      85.  00:8000  (00:0278)           POSMAPLIN5  equ		#0278
      86.  00:8000  (00:0258)           POSMAPLIN6  equ		#0258
      87.  00:8000  (00:0238)           POSMAPLIN7  equ		#0238
      88.  00:8000                      
      89.  00:8000  (00:000D)           POSCARAMAP	equ		#000D
      90.  00:8000  (00:0248)           POSVIDAS	equ		#0248
      91.  00:8000  (00:0011)           POSRELIMAP	equ		#0011
      92.  00:8000  (00:02C8)           POSRELIQ	equ		#02C8
      93.  00:8000  (00:0288)           POSENERG	equ		#0288
      94.  00:8000  (00:02B4)           POSNIVEL	equ		#02B4
      95.  00:8000  (00:0238)           POSMAPA		equ 	#0238
      96.  00:8000                      
      97.  00:8000  (00:01EE)           POSPUERABAJ equ		#01EE
      98.  00:8000  (00:008E)           POSPUERARRI equ		#008E
      99.  00:8000  (00:00FC)           POSPUERDERE equ		#00FC
     100.  00:8000  (00:00E1)           POSPUERIZQU equ		#00E1
     101.  00:8000                      
     102.  00:8000                      ;TILESAYUDAS
     103.  00:8000  (00:00C8)           ORACIONON	equ		200
     104.  00:8000  (00:00CC)           ORACIONOFF  equ		204
     105.  00:8000  (00:00D0)           CRUZON		equ		208
     106.  00:8000  (00:00D4)           CRUZOFF		equ		212
     107.  00:8000  (00:00D8)           AGUAON		equ		216
     108.  00:8000  (00:00DC)           AGUAOFF		equ		220
     109.  00:8000  (00:00E0)           ARMADON		equ		224
     110.  00:8000  (00:00E4)           ARMADOFF	equ		228
     111.  00:8000  (00:00E8)           PLANTAON	equ		232
     112.  00:8000  (00:00EC)           PLANTAOFF	equ		236
     113.  00:8000  (00:00F0)           VIDAEXTON	equ		240
     114.  00:8000  (00:00F4)           VIDAEXTOFF	equ		244
     115.  00:8000  (00:00F8)           BALLESON	equ		248
     116.  00:8000  (00:00FC)           BALLESOFF	equ		252
     117.  00:8000                      
     118.  00:8000                      
     119.  00:8000                      ;;ETIQUETAS ESPECIFICAS PARA DAR MÁS CLARIDAD AL CODIGO (relacionadas con posiciones en en el banco de memoria)
     120.  00:8000  (00:0013)           TILEPROTAM  equ		19		;tile del prota para pintar en mapa
     121.  00:8000  (00:0009)           TILEGRISM	equ		9		;tile gris que representa vacio (por donde el prota va pasando)
     122.  00:8000  (00:0010)           TILEMAPROJO equ		16
     123.  00:8000  (00:000F)           TILEMAPAMAR equ		15
     124.  00:8000  (00:000E)           TILEMAPVERD equ		14
     125.  00:8000                      
     126.  00:8000                      
     127.  00:8000                      ;;ETIQUETAS ESPECIFICAS PARA DAR MÁS CLARIDAD AL CODIGO (generales)
     128.  00:8000  (00:0008)           NMAXVIDREL	equ		8		;el número máximo de vidas y de reliquias es de 8
     129.  00:8000  (00:0007)           NHABNIVEL	equ		7
     130.  00:8000  (00:00F8)           MAXENERGIA  equ		248
     131.  00:8000  (00:00D9)           TILEENERG8  equ		217
     132.  00:8000  (00:00BA)           TILEENERG7  equ		186
     133.  00:8000  (00:009B)           TILEENERG6  equ		155
     134.  00:8000  (00:007C)           TILEENERG5  equ		124
     135.  00:8000  (00:005D)           TILEENERG4  equ		93
     136.  00:8000  (00:003E)           TILEENERG3  equ		62
     137.  00:8000  (00:001F)           TILEENERG2  equ		31
     138.  00:8000  (00:0000)           TILENEGRO	equ		0
     139.  00:8000                      
     140.  00:8000                      ;limites
     141.  00:8000  (00:0000)           LIMPANTIZQ  equ		0
     142.  00:8000  (00:00FF)           LIMPANTDER  equ		255
     143.  00:8000  (00:0000)           LIMPANTARR  equ		0
     144.  00:8000  (00:0080)           LIMPANTABA  equ		128
     145.  00:8000                      
     146.  00:8000                      
     147.  00:8000                      ;matriz de 7x7 empieza en 0, y fila y x col, cuento desde esquina sup izq
     148.  00:8000  (00:0006)           BASEMAPY	equ		6
     149.  00:8000  (00:0003)           BASEMAPX	equ		3
     150.  00:8000                      
     151.  00:8000                      
     152.  00:8000                      
     153.  00:8000                      ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
     154.  00:8000                      ;; CONSTANTES PARA INTERRUPCIONES
     155.  00:8000                      ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
     156.  00:8000  (00:FD9A)           H.KEYI		equ     	#FD9A
     157.  00:8000  (00:FD9F)           H.TIMI	 	equ     	#FD9F
     158.  00:8000                      
     159.  00:8000                      
     160.  00:8000                      ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
     161.  00:8000                      ;; CONSTANTES PARA SONIDO 
     162.  00:8000                      ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
     163.  00:8000                      
     164.  00:8000  (F000)              	map		#f000
     165.  00:8000                      
     166.  00:8000                      ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;PT3 REPLAYER
     167.  00:8000  (00:F000)           PT3_SETUP:		#1	;set bit0 to 1, if you want to play without looping
     168.  00:8000                      					;bit7 is set each time, when loop point is passed
     169.  00:8000  (00:F001)           PT3_MODADDR:	#2
     170.  00:8000  (00:F003)           PT3_CrPsPtr:	#2
     171.  00:8000  (00:F005)           PT3_SAMPTRS:	#2
     172.  00:8000  (00:F007)           PT3_OrnPtrs:	#2
     173.  00:8000  (00:F009)           PT3_PDSP:		#2
     174.  00:8000  (00:F00B)           PT3_CSP:		#2
     175.  00:8000  (00:F00D)           PT3_PSP:		#2
     176.  00:8000  (00:F00F)           PT3_PrNote:		#1
     177.  00:8000  (00:F010)           PT3_PrSlide:	#2
     178.  00:8000  (00:F012)           PT3_AdInPtA:	#2
     179.  00:8000  (00:F014)           PT3_AdInPtB:	#2
     180.  00:8000  (00:F016)           PT3_AdInPtC:	#2
     181.  00:8000  (00:F018)           PT3_LPosPtr:	#2
     182.  00:8000  (00:F01A)           PT3_PatsPtr:	#2
     183.  00:8000  (00:F01C)           PT3_Delay:		#1
     184.  00:8000  (00:F01D)           PT3_AddToEn:	#1
     185.  00:8000  (00:F01E)           PT3_Env_Del:	#1
     186.  00:8000  (00:F01F)           PT3_ESldAdd:	#2
     187.  00:8000  (00:F021)           PT3_NTL3:		#2	; AND A / NOP (note table creator)
     188.  00:8000                      
     189.  00:8000  (00:F023)           VARS:			#0
     190.  00:8000                      
     191.  00:8000  (00:F023)           ChanA:			#29			;CHNPRM_Size
     192.  00:8000  (00:F040)           ChanB:			#29			;CHNPRM_Size
     193.  00:8000  (00:F05D)           ChanC:			#29			;CHNPRM_Size
     194.  00:8000                      
     195.  00:8000                      ;GlobalVars
     196.  00:8000  (00:F07A)           DelyCnt:		#1
     197.  00:8000  (00:F07B)           CurESld:		#2
     198.  00:8000  (00:F07D)           CurEDel:		#1
     199.  00:8000  (00:F07E)           Ns_Base_AddToNs:	#0
     200.  00:8000  (00:F07E)           Ns_Base:		#1
     201.  00:8000  (00:F07F)           AddToNs:		#1
     202.  00:8000                      
     203.  00:8000  (00:F080)           NT_:			#192	; Puntero a/tabla de frecuencias
     204.  00:8000                      
     205.  00:8000  (00:F140)           AYREGS:			#0
     206.  00:8000  (00:F140)           VT_:			#14
     207.  00:8000  (00:F14E)           EnvBase:		#2
     208.  00:8000  (00:F150)           VAR0END:		#0
     209.  00:8000                      
     210.  00:8000  (00:F150)           T1_:			#0		
     211.  00:8000  (00:F150)           T_NEW_1:		#0
     212.  00:8000  (00:F150)           T_OLD_1:		#24
     213.  00:8000  (00:F168)           T_OLD_2:		#24
     214.  00:8000  (00:F180)           T_NEW_3:		#0
     215.  00:8000  (00:F180)           T_OLD_3:		#2
     216.  00:8000  (00:F182)           T_OLD_0:		#0
     217.  00:8000  (00:F182)           T_NEW_0:		#24
     218.  00:8000  (00:F19A)           T_NEW_2:		#166
     219.  00:8000                      ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;PT3 REPLAYER END
     220.  00:8000                      
     221.  00:8000                      ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ayFX REPLAYER 
     222.  00:8000  (00:F240)           ayFX_MODE:		#1			; ayFX mode
     223.  00:8000  (00:F241)           ayFX_BANK:		#2			; Current ayFX Bank
     224.  00:8000  (00:F243)           ayFX_PRIORITY:	#1			; Current ayFX stream priotity
     225.  00:8000  (00:F244)           ayFX_POINTER:	#2			; Pointer to the current ayFX stream
     226.  00:8000  (00:F246)           ayFX_TONE:		#2			; Current tone of the ayFX stream
     227.  00:8000  (00:F248)           ayFX_NOISE:		#1			; Current noise of the ayFX stream
     228.  00:8000  (00:F249)           ayFX_VOLUME:	#1			; Current volume of the ayFX stream
     229.  00:8000  (00:F24A)           ayFX_CHANNEL:	#1			; PSG channel to play the ayFX stream
     230.  00:8000                      
     231.  00:8000                      	;IF (AYFXRELATIVE == 1 ) 
     232.  00:8000                      ;ayFX_VT:	ds	2			; ayFX relative volume table pointer
     233.  00:8000                      	;ENDIF
     234.  00:8000                      ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ayFX REPLAYER END
     235.  00:8000                      
     236.  00:8000                      
     237.  00:8000                      
       7   00:8000                      
       8   00:8000                      ;;=====================================================
       9   00:8000                      ;;DEFINICIÓN DE CABECERA DE ARCHIVO BIN
      10   00:8000                      ;;=====================================================		
      11   00:8000                      	include "cabecerabin.asm"
       1.  00:8000                      ;;=====================================================
       2.  00:8000                      ;; FICHERO cabecera.asm
       3.  00:8000                      ;;=====================================================
       4.  00:8000                      
       5.  00:8000                      ;;CABECERA FICHERO BIN
       6.  00:8000  FE                  	DB	#FE
       7.  00:8001  00 80               	DW	START
       8.  00:8003  12 A7               	DW	END
       9.  00:8005  00 80               	DW	START
      10.  00:8007                      
      11.  00:8007                      ;;INICIO CÓDIGO PROGRAMA	
      12.  00:8007                      	ORG	#8000
      13.  00:8000                      	
      12   00:8000                      	
      13   00:8000                      START:	
      14   00:8000                      	;inicializa pantalla y entonrno
      15   00:8000  CD E4 80            	CALL	sub_preparapantalla			;screen 2,2 sin click al pulsar tecla y color 16,1,1
      16   00:8003                      	
      17   00:8003                      	;inicializa variables para parametrizar funciones y que lo que se muestre sea variable (nº vidas, mapa, puertas, pantalla, etc...)
      18   00:8003  CD 33 80            	CALL	inicializa_variables_pruebas
      19   00:8006                      	
      20   00:8006                      	;inicializa los niveles por partida
      21   00:8006  CD 56 80            	CALL	inicializa_niveles			;no es necesario parametrizarlo según el nivel del usuario ya que se cargan todos
      22   00:8009                      	
      23   00:8009                      	;pinta la pantalla (la primera o algunas especiales se pintan completamente)
      24   00:8009  CD 05 81            	CALL	pinta_pantalla_completa 
      25   00:800C                      	
      26   00:800C                      	;carga sprites en memoria (SE HA RETRASADO HASTA PARAMETRIZAR LA CARGA DE PANTALLAS)
      27   00:800C  CD 89 83            	CALL 	carga_patrones_sprites_nivel
      28   00:800F                      	
      29   00:800F                      	;funciones que modificarian el marcador si se produce un evento cuando toque y cuando se pinta la pantalla ya se mira
      30   00:800F                      	;una variable para ver si el array hay que actualizarlo en pantalla o no
      31   00:800F  CD 5E 81            	CALL	pinta_vidas
      32   00:8012  CD 6D 81            	CALL 	pinta_reliquias
      33   00:8015  CD 7C 81            	CALL	pinta_nivel
      34   00:8018  CD FD 81            	CALL	borra_mapa
      35   00:801B  CD 8B 82            	CALL	pinta_puertas
      36   00:801E                      
      37   00:801E  3E 13               	LD		 A, TILEPROTAM
      38   00:8020  32 59 A3            	LD		(elemento_pintar_mapa), A
      39   00:8023  CD FD 82            	CALL	posiciona_en_mapa		;se le pasa elemento_pintar_mapa (tile del prota) está el prota y prota.poxx y posy
      40   00:8026                      	
      41   00:8026                      	;incializacion de replayer con interrupciones
      42   00:8026                      ;	CALL	inicializa_replayer_efectos_interrupciones
      43   00:8026                      	
      44   00:8026                      loop_principal:
      45   00:8026  76                  	HALT							;espera VBLANK y sincroniza
      46   00:8027                      	
      47   00:8027  CD A1 83            	CALL	render_sprites			;actualiza array de sprites y los pinta en pantalla
      48   00:802A                      	
      49   00:802A  CD EE 81            	CALL	pinta_energia			;pinta la energia en pantalla
      50   00:802D                      
      51   00:802D  CD E4 83            	CALL	check_player			;MIRA EL CONTROL Y APLICA LA LOGICA DE MOVIMIENTO DEL PROTAGONISTA
      52   00:8030                      	
      53   00:8030  C3 26 80            	JP		loop_principal
      54   00:8033                      fin_programa_principal:
      55   00:8033                      	;RET
      56   00:8033                      
      57   00:8033                      
      58   00:8033                      
      59   00:8033                      
      60   00:8033                      
      61   00:8033                      ;;*******************************************************************
      62   00:8033                      ; sólo para hacer pruebas y pintar la parte de las vidas y demás
      63   00:8033                      inicializa_variables_pruebas:
      64   00:8033  3E 04               	LD		 A, 4
      65   00:8035  32 35 A3            	LD		(prota_vidas),A
      66   00:8038                      
      67   00:8038  3E 04               	LD		 A, 4
      68   00:803A  32 36 A3            	LD		(prota_reliquias), A
      69   00:803D                      
      70   00:803D  3E 64               	LD		 A, 100
      71   00:803F  32 39 A3            	LD		(prota_energia), A
      72   00:8042                      
      73   00:8042                      	;ubico al prota dentro del nivel para obtener luego las habitaciones y enemigos que aparecerán
      74   00:8042                      	;será igual la posición inicial en todos los niveles
      75   00:8042                      	
      76   00:8042  3E 04               	LD		 A, 4				;los niveles (matrices) son 7 del 0 al 6
      77   00:8044  32 34 A3            	LD		(prota_nivel), A	;nivel empieza en 0 para usar las posiciones ascii
      78   00:8047                      
      79   00:8047  3E 06               	LD		 A, 6				;los subniveles (filas) son 7 del 0 al 6
      80   00:8049  32 38 A3            	LD		(prota_pos_mapy), A	;pos Y dentro del nivel (se empieza en 0)
      81   00:804C                      
      82   00:804C  3E 02               	LD		 A, 2				;columnas 7: del 0 al 6
      83   00:804E  32 37 A3            	LD		(prota_pos_mapx), A	;pos X dentro del nivel (se empieza en 0)
      84   00:8051                      	
      85   00:8051  AF                  	XOR		 A
      86   00:8052  32 29 A3            	LD		(prota.cadencia), A
      87   00:8055                      fin_inicializa_variables_pruebas:
      88   00:8055  C9                  	RET
      89   00:8056                      ;;************************************************************************
      90   00:8056                      
      91   00:8056                      
      92   00:8056                      
      93   00:8056                      
      94   00:8056                      
      95   00:8056                      
      96   00:8056                      
      97   00:8056                      
      98   00:8056                      
      99   00:8056                      ;;=====================================================
     100   00:8056                      ;;DEFINICIÓN DE SUBRUTINAS
     101   00:8056                      ;;=====================================================
     102   00:8056                      	include "subrutinas.asm"
       1.  00:8056                      ;;=====================================================
       2.  00:8056                      ;;DEFINICIÓN DE SUBRUTINAS
       3.  00:8056                      ;;=====================================================	
       4.  00:8056                      
       5.  00:8056                      
       6.  00:8056                      ;;=====================================================
       7.  00:8056                      ;;INICIALIZA_NIVELES
       8.  00:8056                      ;;=====================================================	
       9.  00:8056                      ; función: 	copia la plantilla de niveles (habitaciones_plantilla) en los niveles de trabajo para el juego (habitaciones_juego)
      10.  00:8056                      ; entrada: 	habitaciones_plantilla
      11.  00:8056                      ; salida: 	habitaciones_juego
      12.  00:8056                      ; toca: 	A
      13.  00:8056                      inicializa_niveles:
      14.  00:8056  D9                  	EXX
      15.  00:8057                      	
      16.  00:8057  AF                  	XOR		 A
      17.  00:8058  06 31               	LD		 B, 49				;7 filas por 7 niveles menos el primero que lo hago diera del buble porque se suma 14 y no 16
      18.  00:805A  21 0B A0            	LD		HL, habitaciones_juego;tambíen puntero al primer nivel
      19.  00:805D  11 0E 00            	LD		DE,14
      20.  00:8060  19                  	ADD		HL,DE
      21.  00:8061  77                  	LD		(HL),A
      22.  00:8062  11 10 00            	LD		DE,16				;desde las col 15 de una fila a la siguiente
      23.  00:8065                      .bucle_borra_hab:
      24.  00:8065  19                  	ADD		HL,DE
      25.  00:8066  77                  	LD		(HL),A
      26.  00:8067  10 FC               	DJNZ	.bucle_borra_hab
      27.  00:8069                      	
      28.  00:8069  D9                  	EXX
      29.  00:806A                      fin_iniciliza_niveles:
      30.  00:806A  C9                  	RET
      31.  00:806B                      
      32.  00:806B                      
      33.  00:806B                      ;;=====================================================
      34.  00:806B                      ;;ACTUALIZA_MARCADOR_VIDAS
      35.  00:806B                      ;;=====================================================	
      36.  00:806B                      ; función:  actualiza el buffer de vidas
      37.  00:806B                      ; entrada: 	prota_vidas
      38.  00:806B                      ; salida: 	array_aux_vidas
      39.  00:806B                      ; toca:		A,B,HL
      40.  00:806B                      actualiza_marcador_vidas:
      41.  00:806B                      	;para no andar restando pongo todos los huecos a negro y luego en otro bucle las caras
      42.  00:806B                      	;1-pinto todo en blanco
      43.  00:806B  21 3A A3            	LD		HL,array_aux_vidas
      44.  00:806E  06 08               	LD		 B,NMAXVIDREL
      45.  00:8070                      loop_marcador_caras_negro:	;asignar espacios en negro
      46.  00:8070  36 00               	LD		(HL),0			;0 posición mapa tiles para nada (es transparente pero el fondo es negro)
      47.  00:8072  23                  	INC		HL
      48.  00:8073  10 FB               	DJNZ	loop_marcador_caras_negro
      49.  00:8075                      fin_loop_marcador_caras_negro:
      50.  00:8075                      	;2-pinto las caras según el n de vidas
      51.  00:8075  3A 35 A3            	LD		 A, (prota_vidas)
      52.  00:8078  B7                  	OR		 A
      53.  00:8079  C8                  	RET 	 Z
      54.  00:807A  47                  	LD		 B, A
      55.  00:807B  21 3A A3            	LD		HL, array_aux_vidas
      56.  00:807E                      loop_marcador_caras: ;asignar caras
      57.  00:807E  36 0D               	LD		(HL), POSCARAMAP	;13 posición mapa tiles para cara
      58.  00:8080  23                  	INC		HL
      59.  00:8081  10 FB               	DJNZ	loop_marcador_caras
      60.  00:8083                      fin_loop_marcador_caras:
      61.  00:8083                      
      62.  00:8083                      fin_actualiza_marcador_vidas:
      63.  00:8083  C9                  	RET
      64.  00:8084                      
      65.  00:8084                      
      66.  00:8084                      ;;=====================================================
      67.  00:8084                      ;;ACTUALIZA_BUFFER_RELIQUIAS
      68.  00:8084                      ;;=====================================================	
      69.  00:8084                      ; función: 	actualiza buffer de reliquias
      70.  00:8084                      ; entrada: 	prota_reliquias
      71.  00:8084                      ; salida: 	array_aux_reliquias
      72.  00:8084                      ; toca:		A,B,HL
      73.  00:8084                      actualiza_buffer_reliquias:	
      74.  00:8084                      	;para no andar restando pongo todos los huecos a negro y luego en otro bucle las reliquias
      75.  00:8084                      	;1-pinto todo en blanco
      76.  00:8084  21 42 A3            	LD		HL, array_aux_reliquias
      77.  00:8087  06 08               	LD		 B, NMAXVIDREL
      78.  00:8089  AF                  	XOR		 A
      79.  00:808A                      loop_buffer_reliquias_negro:	;asignar espacios en negro
      80.  00:808A  77                  	LD		(HL), A			;0 posición mapa tiles para nada (es transparente pero el fondo es negro)
      81.  00:808B  23                  	INC		HL
      82.  00:808C  10 FC               	DJNZ	loop_buffer_reliquias_negro
      83.  00:808E                      
      84.  00:808E                      	;2-pinto las cruces según el n de reliquias
      85.  00:808E  21 42 A3            	LD		HL, array_aux_reliquias
      86.  00:8091  3A 36 A3            	LD		 A, (prota_reliquias)
      87.  00:8094  B7                  	OR		 A
      88.  00:8095  C8                  	RET		 Z
      89.  00:8096  47                  	LD		 B, A
      90.  00:8097                      loop_buffer_reliquias: ;asignar reliquias
      91.  00:8097  36 11               	LD		(HL), POSRELIMAP	;17 posición mapa tiles para reliquia
      92.  00:8099  23                  	INC		HL
      93.  00:809A  10 FB               	DJNZ	loop_buffer_reliquias
      94.  00:809C                      fin_actualiza_buffer_reliquias:
      95.  00:809C  C9                  	RET
      96.  00:809D                      
      97.  00:809D                      
      98.  00:809D                      
      99.  00:809D                      ;;=====================================================
     100.  00:809D                      ;;LOCALIZA_INFO_HABITACION
     101.  00:809D                      ;;=====================================================	
     102.  00:809D                      ; función: 	busca las puertas que hay que pintar egún la posición del usuario y las pone en habitacion_actual
     103.  00:809D                      ; entrada: 	prota.pos_mapy, prota.pos_mapx, prota_nivel habitaciones_juego
     104.  00:809D                      ; salida: 	habitacion_actual
     105.  00:809D                      ; toca:		todo
     106.  00:809D                      ;ejemplo: nivel 4, posy 5 y posx 3
     107.  00:809D                      ;3 + 5 x 8 + 4 x 49
     108.  00:809D                      localiza_info_habitacion:
     109.  00:809D                      ;primera posición: me coloco en la columna correcta
     110.  00:809D  21 0B A0            	LD		HL, habitaciones_juego
     111.  00:80A0                      .situo_columna:	
     112.  00:80A0  3A 37 A3            	LD		 A, (prota_pos_mapx)
     113.  00:80A3  CB 27               	SLA		 A				;multiplico por dos ya que cada habitación va de dos en dos bytes
     114.  00:80A5  06 00               	LD		 B, 0
     115.  00:80A7  4F                  	LD		 C, A
     116.  00:80A8                      
     117.  00:80A8  09                  	ADD 	HL, BC			;sumo a la posición 0 la columnax2 en la que situarme
     118.  00:80A9                      	
     119.  00:80A9                      .situo_fila:
     120.  00:80A9  3A 38 A3            	LD		A, (prota_pos_mapy)
     121.  00:80AC  B7                  	OR	 	A
     122.  00:80AD  CA BA 80            	JP		Z, .situo_nivel	;si la fila es 0 no es necesario seguir operando en fila
     123.  00:80B0                      	
     124.  00:80B0  47                  	LD		B, A
     125.  00:80B1  AF                  	XOR		A
     126.  00:80B2                      .loop_suma_fila:
     127.  00:80B2  C6 10               	ADD		16				;cada fila tiene 16 bytes
     128.  00:80B4  10 FC               	DJNZ	.loop_suma_fila
     129.  00:80B6                      	
     130.  00:80B6  06 00               	LD		 B, 0
     131.  00:80B8  4F                  	LD		 C, A
     132.  00:80B9                      
     133.  00:80B9  09                  	ADD 	HL, BC			;sumo a la columna 16 x filas para situarme en la fila correcta
     134.  00:80BA                      
     135.  00:80BA                      .situo_nivel:
     136.  00:80BA  3A 34 A3            	LD		 A, (prota_nivel)
     137.  00:80BD  B7                  	OR	 	 A
     138.  00:80BE  CA CE 80            	JP		 Z, .actualiza_valiable_habitacion	;si el nivel es 0 al pasar por las anterirores ya estoy situado actualizo la variable y termino
     139.  00:80C1                      	
     140.  00:80C1  E5                  	PUSH	HL				;guardo el resultado intermedio
     141.  00:80C2                      	
     142.  00:80C2  47                  	LD		 B, A			;preparo la varible del bucle
     143.  00:80C3  11 70 00            	LD		DE, 112			;112 = 16x42 son los bytes de cada matriz-nivel
     144.  00:80C6  21 00 00            	LD		HL, 0
     145.  00:80C9                      .loop_suma_nivel:
     146.  00:80C9  19                  	ADD		HL,DE
     147.  00:80CA  10 FD               	DJNZ	.loop_suma_nivel
     148.  00:80CC                      	
     149.  00:80CC  D1                  	POP		DE				;devuelvo el resultado intermedio en DE que ya no lo necesito
     150.  00:80CD                      	
     151.  00:80CD  19                  	ADD		HL,DE			;sumo el resultdo del nivel al resultado intermedio anterior
     152.  00:80CE                      
     153.  00:80CE                      .actualiza_valiable_habitacion
     154.  00:80CE  7E                  	LD		 A, (HL)
     155.  00:80CF  32 09 A0            	LD		(habitacion_actual), A
     156.  00:80D2                      fin_localiza_info_habitacion:
     157.  00:80D2  C9                  	RET
     158.  00:80D3                      
     159.  00:80D3                      
     160.  00:80D3                      
     161.  00:80D3                      
     103   00:80D3                      	
     104   00:80D3                      	include "subr_pintapantalla.asm"
       1.  00:80D3                      ;;=====================================================
       2.  00:80D3                      ;;DEFINICIÓN DE SUBRUTINAS
       3.  00:80D3                      ;;=====================================================	
       4.  00:80D3                      ;relacionadas con pintado en pantalla (y no sprites)
       5.  00:80D3                      
       6.  00:80D3                      
       7.  00:80D3                      ;;=====================================================
       8.  00:80D3                      ;;COLOR_PANTALLA
       9.  00:80D3                      ;;=====================================================	
      10.  00:80D3                      ; función: 	el equivalente en basic a color 15,1,1
      11.  00:80D3                      ; entrada: 	HL	que apunta a un array de bytes con 3 bytes FORCLR, BAKCLR y BDRCLR
      12.  00:80D3                      ; salida: 	-
      13.  00:80D3                      ; toca: 	todo
      14.  00:80D3                      color_pantalla:
      15.  00:80D3  7E                  	LD		 A, (HL)			;FORCLR 
      16.  00:80D4  32 E9 F3            	LD 		(FORCLR),A
      17.  00:80D7  23                  	INC		HL
      18.  00:80D8                      	
      19.  00:80D8  7E                  	LD		 A, (HL)			;BAKCLR
      20.  00:80D9  32 EA F3            	LD 		(BAKCLR),A
      21.  00:80DC  23                  	INC		HL
      22.  00:80DD                      	
      23.  00:80DD  7E                  	LD		 A, (HL)
      24.  00:80DE  32 EB F3            	LD 		(BDRCLR),A			;BDRCLR
      25.  00:80E1  C3 62 00            	JP		CHGCLR 
      26.  00:80E4                      fin_color_pantalla:
      27.  00:80E4                      	;RET
      28.  00:80E4                      
      29.  00:80E4                      
      30.  00:80E4                      ;;=====================================================
      31.  00:80E4                      ;;PREPARAPANTALLA
      32.  00:80E4                      ;;=====================================================	
      33.  00:80E4                      ; función: elimina clic cuando se pulsa tecla, cls, screen 2,2
      34.  00:80E4                      ; entrada: -
      35.  00:80E4                      ; salida: -
      36.  00:80E4                      ; toca: si no son todos los regristros, casi todos
      37.  00:80E4                      sub_preparapantalla:
      38.  00:80E4                      	;toca A y Z
      39.  00:80E4                      elimina_clic;
      40.  00:80E4  AF                  	XOR		 A
      41.  00:80E5  32 DB F3            	LD		(CLIKSW),A
      42.  00:80E8                      fin_elimina_clic:
      43.  00:80E8                      
      44.  00:80E8                      	;toca A
      45.  00:80E8                      limpia_pantalla:
      46.  00:80E8  AF                  	XOR		 A
      47.  00:80E9  CD C3 00            	CALL 	CLS
      48.  00:80EC                      fin_limpia_pantalla:
      49.  00:80EC                      
      50.  00:80EC                      	;toca A y direcciones #F3E9/#F3EA/#F3EB, poner en HL array con 3 valores
      51.  00:80EC  21 1B A3            	LD		HL, color_base
      52.  00:80EF  CD D3 80            	CALL	color_pantalla
      53.  00:80F2                      	
      54.  00:80F2                      	;cambiamos a SCREEN 2,2 del BASIC
      55.  00:80F2                      	;toca A
      56.  00:80F2                      screen2:
      57.  00:80F2  3E 02               	LD		 A, 2
      58.  00:80F4  CD 5F 00            	CALL	CHGMOD			;selecciona screen 2
      59.  00:80F7                      sprites_16_16:
      60.  00:80F7  3A E0 F3            	LD		 A, (RG1SAV)
      61.  00:80FA  F6 02               	OR		00000010b		;fuerza sprites de 16x16
      62.  00:80FC  32 E0 F3            	LD		(RG1SAV), A		;no lo guardamos en la copia de variables del sistema
      63.  00:80FF  47                  	LD		 B, A
      64.  00:8100  0E 01               	LD		 C, 1
      65.  00:8102  C3 47 00            	JP		WRTVDP			;opción alternativa de escribir las tres lineas siguientes
      66.  00:8105                      	;~ CALL	WRTVDP			;lo escribe en el registro 1 del VDP
      67.  00:8105                      	;~ RET
      68.  00:8105                      fin_sub_preparapantalla:
      69.  00:8105                      	
      70.  00:8105                      
      71.  00:8105                      ;;=====================================================
      72.  00:8105                      ;;PINTA_PANTALLA_COMPLETA
      73.  00:8105                      ;;=====================================================	
      74.  00:8105                      ; función: pinta el escenario, las 3 partes
      75.  00:8105                      ; entrada: -
      76.  00:8105                      ; salida: -
      77.  00:8105                      ; toca: si no son todos los regristros, casi todos
      78.  00:8105                      pinta_pantalla_completa:
      79.  00:8105  CD 0C 81            	CALL 	pinta_parte_superior_pantalla
      80.  00:8108                      	
      81.  00:8108  CD 43 81            	CALL 	pinta_parte_inferior_pantalla	
      82.  00:810B                      fin_pinta_pantalla_completa:
      83.  00:810B  C9                  	RET
      84.  00:810C                      
      85.  00:810C                      
      86.  00:810C                      ;;=====================================================
      87.  00:810C                      ;;PINTA_PARTE_SUPERIOR_PANTALLA
      88.  00:810C                      ;;=====================================================	
      89.  00:810C                      ; función: pinta el escenario, las 2 partes superiores y actualiza puertas
      90.  00:810C                      ; entrada: -
      91.  00:810C                      ; salida: -
      92.  00:810C                      ; toca: si no son todos los regristros, casi todos
      93.  00:810C                      pinta_parte_superior_pantalla:
      94.  00:810C                      
      95.  00:810C                      ;************** preguntar cómo parametrizar esto **********************************************
      96.  00:810C                      
      97.  00:810C                      	;cangando banco 1
      98.  00:810C                      	;cargamos los patrones
      99.  00:810C  21 BA A4            	LD		HL, tiles_patrones_pantalla11
     100.  00:810F  11 00 00            	LD		DE, CHRTBL
     101.  00:8112  CD A9 95            	CALL	depack_VRAM
     102.  00:8115                      	;cargamos mapa de pantalla
     103.  00:8115  21 F5 A4            	LD		HL, tiles_mapa_pantalla11
     104.  00:8118  11 00 18            	LD		DE, TILMAP
     105.  00:811B  CD A9 95            	CALL	depack_VRAM
     106.  00:811E                      	;cargamos los colores de los patrones
     107.  00:811E  21 DD A4            	LD		HL, tiles_color_pantalla11
     108.  00:8121  11 00 20            	LD		DE, CLRTBL
     109.  00:8124  CD A9 95            	CALL	depack_VRAM
     110.  00:8127                      	
     111.  00:8127                      	;cangando banco 2
     112.  00:8127                      	;cargamos los patrones
     113.  00:8127  21 BA A4            	LD		HL, tiles_patrones_pantalla12
     114.  00:812A  11 00 08            	LD		DE, CHRTBL + #0800
     115.  00:812D  CD A9 95            	CALL	depack_VRAM	
     116.  00:8130                      	;cargamos mapa de pantalla
     117.  00:8130  21 0F A5            	LD		HL, tiles_mapa_pantalla12
     118.  00:8133  11 00 19            	LD		DE, TILMAP + #0100
     119.  00:8136  CD A9 95            	CALL	depack_VRAM
     120.  00:8139                      	;cargamos los colores de los patrones
     121.  00:8139  21 DD A4            	LD		HL, tiles_color_pantalla12
     122.  00:813C  11 00 28            	LD		DE, CLRTBL + #0800
     123.  00:813F                      	;JP		depack_VRAM
     124.  00:813F  CD A9 95            	CALL	depack_VRAM
     125.  00:8142                      fin_pinta_parte_superior_pantalla:
     126.  00:8142  C9                  	RET
     127.  00:8143                      
     128.  00:8143                      
     129.  00:8143                      ;;=====================================================
     130.  00:8143                      ;;PINTA_PARTE_INFERIOR_PANTALLA
     131.  00:8143                      ;;=====================================================	
     132.  00:8143                      ; función: pinta la parte inferior del escenario que es común
     133.  00:8143                      ; entrada: -
     134.  00:8143                      ; salida: -
     135.  00:8143                      ; toca: si no son todos los regristros, casi todos
     136.  00:8143                      pinta_parte_inferior_pantalla:
     137.  00:8143                      	;cangando banco 3
     138.  00:8143                      	;cargamos los patrones
     139.  00:8143  21 39 A5            	LD		HL,tiles_patrones_pantalla3
     140.  00:8146  11 00 10            	LD		DE,CHRTBL + #1000
     141.  00:8149  CD A9 95            	CALL	depack_VRAM	
     142.  00:814C                      	;cargamos mapa de pantalla
     143.  00:814C  21 B0 A6            	LD		HL,tiles_mapa_pantalla3
     144.  00:814F  11 00 1A            	LD		DE,TILMAP + #0200
     145.  00:8152  CD A9 95            	CALL	depack_VRAM
     146.  00:8155                      	;cargamos los colores de los patrones
     147.  00:8155  21 7E A6            	LD		HL,tiles_color_pantalla3
     148.  00:8158  11 00 30            	LD		DE,CLRTBL + #1000
     149.  00:815B  C3 A9 95            	JP		depack_VRAM
     150.  00:815E                      	;~ CALL	depack_VRAM
     151.  00:815E                      fin_pinta_parte_inferior_pantalla:
     152.  00:815E                      	;~ RET
     153.  00:815E                      
     154.  00:815E                      
     155.  00:815E                      
     156.  00:815E                      ;;=====================================================
     157.  00:815E                      ;;PINTA_VIDAS
     158.  00:815E                      ;;=====================================================	
     159.  00:815E                      ; función: 	actualiza el mapa de tiles para que en el próximo refresco se pinten y actualiza_vidas
     160.  00:815E                      ; entrada: 	array_aux_vidas
     161.  00:815E                      ; salida: 	actualiza_vidas_sn
     162.  00:815E                      ; toca:		todo
     163.  00:815E                      pinta_vidas:
     164.  00:815E  CD 6B 80            	CALL	actualiza_marcador_vidas
     165.  00:8161                      	
     166.  00:8161  21 3A A3            	LD		HL, array_aux_vidas
     167.  00:8164  11 48 1A            	LD		DE, TILMAP + POSVIDAS 	;inicio posición en el mapa de tiles de las vidas
     168.  00:8167  01 08 00            	LD		BC, NMAXVIDREL			;hay 8 posiciones para vidas/reliquias o espacios en negro si no tiene 8 vidas/reliquias
     169.  00:816A  C3 5C 00            	JP		LDIRVM
     170.  00:816D                      fin_pinta_vidas:
     171.  00:816D                      	;RET
     172.  00:816D                      	
     173.  00:816D                      	
     174.  00:816D                      
     175.  00:816D                      ;;=====================================================
     176.  00:816D                      ;;PINTA_RELIQUIAS
     177.  00:816D                      ;;=====================================================	
     178.  00:816D                      ; función: 	actualiza el mapa de tiles para que en el próximo refresco se pinten y actualiza_reliquias
     179.  00:816D                      ; entrada: 	array_aux_reliquias
     180.  00:816D                      ; salida: 	-
     181.  00:816D                      ; toca:		todo
     182.  00:816D                      pinta_reliquias:
     183.  00:816D  CD 84 80            	CALL	actualiza_buffer_reliquias
     184.  00:8170                      	
     185.  00:8170  21 42 A3            	LD		HL, array_aux_reliquias
     186.  00:8173  11 C8 1A            	LD		DE, TILMAP + POSRELIQ 	;inicio posición en el mapa de tiles de las vidas
     187.  00:8176  01 08 00            	LD		BC, NMAXVIDREL			;hay 8 posiciones para vidas/reliquias o espacios en negro si no tiene 8 vidas/reliquias
     188.  00:8179  C3 5C 00            	JP		LDIRVM
     189.  00:817C                      fin_pinta_reliquias:
     190.  00:817C                      	;RET
     191.  00:817C                      	
     192.  00:817C                      
     193.  00:817C                      
     194.  00:817C                      	
     195.  00:817C                      ;;=====================================================
     196.  00:817C                      ;;PINTA_NIVEL
     197.  00:817C                      ;;=====================================================	
     198.  00:817C                      ; función: 	actualiza el nivel en la parte de puntuación
     199.  00:817C                      ; entrada: 	prota_nivel
     200.  00:817C                      ; salida: 	-
     201.  00:817C                      ; toca:		HL,DE,BC
     202.  00:817C                      pinta_nivel:	
     203.  00:817C                      	;forma más avanzada sin llamada a la bios
     204.  00:817C  01 B4 1A            	LD		BC,TILMAP + POSNIVEL ;posición en el mapa de tiles del tile de nivel
     205.  00:817F  3A 34 A3            	LD		 A, (prota_nivel)	;seleccionando la pos del banco de tiles a poner en el mapa
     206.  00:8182  C6 30               	ADD		'0'	
     207.  00:8184  57                  	LD		 D, A
     208.  00:8185                      	
     209.  00:8185  CD 89 81            	CALL	pinta_tile_suelto	;nota ... un call+ret se debe poder sustiruir por un jp
     210.  00:8188                      fin_pinta_nivel:
     211.  00:8188  C9                  	RET
     212.  00:8189                      
     213.  00:8189                      
     214.  00:8189                      
     215.  00:8189                      ;;=====================================================
     216.  00:8189                      ;;PINTA_TILE_SUELTO
     217.  00:8189                      ;;=====================================================	
     218.  00:8189                      ; función: 	pinta al tile que digamos en D, en la posición BC
     219.  00:8189                      ; entrada: 	BC (posición a pintar en el mapa),D (qué se va a pintar el esa posición)
     220.  00:8189                      ; salida: 	-
     221.  00:8189                      ; toca:		-
     222.  00:8189                      pinta_tile_suelto:
     223.  00:8189  DB 99               	IN		 A,(REGEST)		;leer registro de estado (recomendado)
     224.  00:818B  79                  	LD		 A,C			;primero byte bajo	
     225.  00:818C  D3 99               	OUT		(REGEST),A
     226.  00:818E  78                  	LD		 A,B			;después byte alto  ********************** preguntar a Fernando cómo que byte bajo es B
     227.  00:818F  F6 40               	OR		1000000b		;+64
     228.  00:8191  D3 99               	OUT		(REGEST),A
     229.  00:8193                      	
     230.  00:8193  7A                  	LD		A,D
     231.  00:8194  D3 98               	OUT		(REGESCVDP),A	;escribe A en VRAM en la posición indicada por los dos OUT anteriores
     232.  00:8196                      fin_pinta_tile_suelto:
     233.  00:8196  C9                  	RET
     234.  00:8197                      
     235.  00:8197                      
     236.  00:8197                      
     237.  00:8197                      
     238.  00:8197                      
     239.  00:8197                      ;;=====================================================
     240.  00:8197                      ;;MIRA_PINTA ENERGIA
     241.  00:8197                      ;;=====================================================	
     242.  00:8197                      ; función: 	actualiza el nivel de energia en la parte de puntuación
     243.  00:8197                      ; nota:		el cuadrado más bajo de ejergía siempre estará pintado... se obviará
     244.  00:8197                      ; entrada: 	prota.energia, array_aux_energia
     245.  00:8197                      ; salida: 	-
     246.  00:8197                      ; toca:		ninguno porque usa EXX
     247.  00:8197                      
     248.  00:8197                      ; nota importante... lo mismo interesa hacer esto con un array para comparar y un bucle
     249.  00:8197                      
     250.  00:8197                      
     251.  00:8197                      mira_pinta_energia:
     252.  00:8197  D9                  	EXX							;por si acaso guardo el contenido de HL (si veo que no es necesario guardarlo lo quito) uso esto en vez de push por el nº ciclos
     253.  00:8198                      	
     254.  00:8198  3A 39 A3            	LD		 A,(prota_energia) 	;para las comparaciones A variable (actual) y B fijo (limites)
     255.  00:819B                      
     256.  00:819B  0E 00               	LD		 C,TILENEGRO		;para agilizar asignaciones en vez de un valor cte uso otro registro
     257.  00:819D                      pinta_ener:
     258.  00:819D                      pinta_ener_tile_8:
     259.  00:819D  21 51 A3            	LD		HL,ultimo_pos_array_aux_energia	;coloco puntero en array e iré decrementando
     260.  00:81A0  06 D9               	LD		 B,TILEENERG8
     261.  00:81A2  B8                  	CP		 B
     262.  00:81A3  38 04               	JR		C,pinta_ener_tile_8_negro
     263.  00:81A5  36 0E               	LD		(HL),TILEMAPVERD
     264.  00:81A7  18 01               	JR		pinta_ener_tile_7
     265.  00:81A9                      pinta_ener_tile_8_negro:
     266.  00:81A9  71                  	LD		(HL),C
     267.  00:81AA                      
     268.  00:81AA                      pinta_ener_tile_7:
     269.  00:81AA  2B                  	DEC		HL
     270.  00:81AB  06 BA               	LD		 B,TILEENERG7
     271.  00:81AD  B8                  	CP		 B
     272.  00:81AE  38 04               	JR		C,pinta_ener_tile_7_negro
     273.  00:81B0  36 0E               	LD		(HL),TILEMAPVERD
     274.  00:81B2  18 01               	JR		pinta_ener_tile_6
     275.  00:81B4                      pinta_ener_tile_7_negro:
     276.  00:81B4  71                  	LD		(HL),C
     277.  00:81B5                      
     278.  00:81B5                      pinta_ener_tile_6:
     279.  00:81B5  2B                  	DEC		HL
     280.  00:81B6  06 9B               	LD		 B,TILEENERG6
     281.  00:81B8  B8                  	CP		 B
     282.  00:81B9  38 04               	JR		C,pinta_ener_tile_6_negro
     283.  00:81BB  36 0E               	LD		(HL),14
     284.  00:81BD  18 01               	JR		pinta_ener_tile_5
     285.  00:81BF                      pinta_ener_tile_6_negro:
     286.  00:81BF  71                  	LD		(HL),C
     287.  00:81C0                      
     288.  00:81C0                      pinta_ener_tile_5:
     289.  00:81C0  2B                  	DEC		HL
     290.  00:81C1  06 7C               	LD		 B,TILEENERG5
     291.  00:81C3  B8                  	CP		 B
     292.  00:81C4  38 04               	JR		C,pinta_ener_tile_5_negro
     293.  00:81C6  36 0E               	LD		(HL),TILEMAPVERD
     294.  00:81C8  18 01               	JR		pinta_ener_tile_4
     295.  00:81CA                      pinta_ener_tile_5_negro:
     296.  00:81CA  71                  	LD		(HL),C
     297.  00:81CB                      
     298.  00:81CB                      pinta_ener_tile_4:
     299.  00:81CB  2B                  	DEC		HL
     300.  00:81CC  06 5D               	LD		 B,TILEENERG4
     301.  00:81CE  B8                  	CP		 B
     302.  00:81CF  38 04               	JR		C,pinta_ener_tile_4_negro
     303.  00:81D1  36 0F               	LD		(HL),TILEMAPAMAR
     304.  00:81D3  18 01               	JR		pinta_ener_tile_3
     305.  00:81D5                      pinta_ener_tile_4_negro:
     306.  00:81D5  71                  	LD		(HL),C
     307.  00:81D6                      	
     308.  00:81D6                      pinta_ener_tile_3:
     309.  00:81D6  2B                  	DEC		HL
     310.  00:81D7  06 3E               	LD		 B,TILEENERG3
     311.  00:81D9  B8                  	CP		 B
     312.  00:81DA  38 04               	JR		C,pinta_ener_tile_3_negro
     313.  00:81DC  36 0F               	LD		(HL),TILEMAPAMAR
     314.  00:81DE  18 01               	JR		pinta_ener_tile_2
     315.  00:81E0                      pinta_ener_tile_3_negro:
     316.  00:81E0  71                  	LD		(HL),C
     317.  00:81E1                      
     318.  00:81E1                      pinta_ener_tile_2:
     319.  00:81E1  2B                  	DEC		HL
     320.  00:81E2  06 1F               	LD		 B,TILEENERG2
     321.  00:81E4  B8                  	CP		 B
     322.  00:81E5  38 04               	JR		C,pinta_ener_tile_2_negro
     323.  00:81E7  36 10               	LD		(HL),TILEMAPROJO
     324.  00:81E9  18 01               	JR		fin_mira_pinta_energia		;siempre estará pintado el cuadro mínimo
     325.  00:81EB                      pinta_ener_tile_2_negro:
     326.  00:81EB  71                  	LD		(HL),C
     327.  00:81EC                      
     328.  00:81EC                      fin_mira_pinta_energia:
     329.  00:81EC  D9                  	EXX
     330.  00:81ED  C9                  	RET
     331.  00:81EE                      
     332.  00:81EE                      
     333.  00:81EE                      ;;=====================================================
     334.  00:81EE                      ;;PINTA_ENERGIA
     335.  00:81EE                      ;;=====================================================	
     336.  00:81EE                      ; función: 	actualiza el mapa de tiles para que en el próximo refresco se pinte la barra de energia actual
     337.  00:81EE                      ; entrada: 	array_aux_energia
     338.  00:81EE                      ; toca:		todo
     339.  00:81EE                      pinta_energia:
     340.  00:81EE  CD 97 81            	CALL	mira_pinta_energia
     341.  00:81F1                      	
     342.  00:81F1  21 4A A3            	LD		HL, array_aux_energia
     343.  00:81F4  11 88 1A            	LD		DE, TILMAP + POSENERG 	;inicio posición en el mapa de tiles de las vidas
     344.  00:81F7  01 08 00            	LD		BC, NMAXVIDREL			;hay 8 posiciones para vidas/reliquias o espacios en negro si no tiene 8 vidas/reliquias
     345.  00:81FA  C3 5C 00            	JP		LDIRVM
     346.  00:81FD                      fin_pinta_energia:
     347.  00:81FD                      
     348.  00:81FD                      
     349.  00:81FD                      
     350.  00:81FD                      ;;=====================================================
     351.  00:81FD                      ;;BORRA_MAPA
     352.  00:81FD                      ;;=====================================================	
     353.  00:81FD                      ; función: 	pone todas las habitaciones del mapa a negro (los tiles del mapa los rellena con un array a 0 - caracter en negro)
     354.  00:81FD                      ; entrada: 	array_aux_mapa_limpiar
     355.  00:81FD                      ; salida: 	-
     356.  00:81FD                      ; toca:		AF
     357.  00:81FD                      borra_mapa:
     358.  00:81FD  D9                  	EXX
     359.  00:81FE                      	
     360.  00:81FE  21 52 A3            	LD		HL,array_aux_mapa_limpiar
     361.  00:8201  11 F8 1A            	LD		DE,TILMAP + POSMAPLIN1 	;inicio posición en el mapa de tiles de la primera fila del mapa
     362.  00:8204  01 07 00            	LD		BC,NHABNIVEL			;cada nivel son 7 filas con 7 habitaciones "posibles"
     363.  00:8207  CD 5C 00            	CALL	LDIRVM
     364.  00:820A                      	
     365.  00:820A  21 52 A3            	LD		HL,array_aux_mapa_limpiar
     366.  00:820D  11 D8 1A            	LD		DE,TILMAP + POSMAPLIN2
     367.  00:8210  01 07 00            	LD		BC,NHABNIVEL
     368.  00:8213  CD 5C 00            	CALL	LDIRVM
     369.  00:8216                      
     370.  00:8216  21 52 A3            	LD		HL,array_aux_mapa_limpiar
     371.  00:8219  11 B8 1A            	LD		DE,TILMAP + POSMAPLIN3
     372.  00:821C  01 07 00            	LD		BC,NHABNIVEL
     373.  00:821F  CD 5C 00            	CALL	LDIRVM
     374.  00:8222                      
     375.  00:8222  21 52 A3            	LD		HL,array_aux_mapa_limpiar	
     376.  00:8225  11 98 1A            	LD		DE,TILMAP + POSMAPLIN4
     377.  00:8228  01 07 00            	LD		BC,NHABNIVEL
     378.  00:822B  CD 5C 00            	CALL	LDIRVM
     379.  00:822E                      
     380.  00:822E  21 52 A3            	LD		HL,array_aux_mapa_limpiar	
     381.  00:8231  11 78 1A            	LD		DE,TILMAP + POSMAPLIN5
     382.  00:8234  01 07 00            	LD		BC,NHABNIVEL
     383.  00:8237  CD 5C 00            	CALL	LDIRVM
     384.  00:823A                      
     385.  00:823A  21 52 A3            	LD		HL,array_aux_mapa_limpiar	
     386.  00:823D  11 58 1A            	LD		DE,TILMAP + POSMAPLIN6
     387.  00:8240  01 07 00            	LD		BC,NHABNIVEL
     388.  00:8243  CD 5C 00            	CALL	LDIRVM
     389.  00:8246                      
     390.  00:8246  21 52 A3            	LD		HL,array_aux_mapa_limpiar	
     391.  00:8249  11 38 1A            	LD		DE,TILMAP + POSMAPLIN7
     392.  00:824C  01 07 00            	LD		BC,NHABNIVEL
     393.  00:824F  CD 5C 00            	CALL	LDIRVM
     394.  00:8252                      	
     395.  00:8252  D9                  	EXX
     396.  00:8253                      fin_borra_mapa:
     397.  00:8253  C9                  	RET
     398.  00:8254                      
     399.  00:8254                      
     400.  00:8254                      
     401.  00:8254                      
     402.  00:8254                      
     403.  00:8254                      
     404.  00:8254                      
     405.  00:8254                      
     406.  00:8254                      
     407.  00:8254                      ;=====================================================
     408.  00:8254                      ;;PINTA_ARRAY
     409.  00:8254                      ;;=====================================================	
     410.  00:8254                      ;;;funcion:  se le pasa un array con posiciones de tiles y coordenadas x e y y los pinta en screen 2
     411.  00:8254                      ;;entrada:	wordaux1 (pos inicio sc2 donde pintar) y wordaux2 (puntero al array a pintar), BC (posición en tilemap) , D filas y E columnas
     412.  00:8254                      ;;salida:	-
     413.  00:8254                      ;;importante: necesita de una variable wordaux1 tipo WD (wordaux1: 	DW	0)
     414.  00:8254                      ;; ejemplo llamada:
     415.  00:8254                      	;~ LD		HL,array_tiles					;guardo puntero al array a pintar (como psar por referencia)
     416.  00:8254                      	;~ LD		(wordaux2),HL					;en la variable wordaux2
     417.  00:8254                      	;~ LD		HL,SC2MAP + 256 + 32			;calcula posición en tilemap
     418.  00:8254                      	;~ LD		(wordaux1),HL					;guarda valor pos tilemap en wordaux1
     419.  00:8254                      	;~ LD		B,H								;coloca posición tilemap BC
     420.  00:8254                      	;~ LD		C,L
     421.  00:8254                      	;~ LD		D,2								;nº de filas
     422.  00:8254                      	;~ LD		E,3								;nº de columnas
     423.  00:8254                      	;~ CALL	pinta_array
     424.  00:8254                      
     425.  00:8254                      pinta_array:
     426.  00:8254  F5                  	PUSH	AF
     427.  00:8255                      	
     428.  00:8255                      	;contamos con que la posición "global" en el tilemap está ya en BC
     429.  00:8255                      	;y el puntero al array a pintar en wordaux2 y la posición en tilemap sc2 en wordaux1
     430.  00:8255                      	;inicializa
     431.  00:8255  DB 99               	IN		 A,(REGEST)		;leer registro de estado (recomendado)
     432.  00:8257                      	
     433.  00:8257                      	;coloca puntero para pintar tile según BC
     434.  00:8257  79                  	LD		 A,C			;primero byte bajo	
     435.  00:8258  D3 99               	OUT		(REGEST),A
     436.  00:825A  78                  	LD		 A,B			;después byte alto  ********************** preguntar a Fernando cómo que byte bajo es B
     437.  00:825B  F6 40               	OR		1000000b		;+64
     438.  00:825D  D3 99               	OUT		(REGEST),A
     439.  00:825F                      
     440.  00:825F                      	
     441.  00:825F  2A 89 82            	LD		HL,(wordaux2)	;HL es lo que se pintará y le he pasado el puntero del array tilemap a pintar
     442.  00:8262                      .pa_pinta_fila:
     443.  00:8262  43                  	LD		 B,E
     444.  00:8263                      .pa_pinta_columnas: 		;finta la fila (pintando las columnas)
     445.  00:8263  7E                  	LD		 A,(HL)
     446.  00:8264  D3 98               	OUT		(REGESCVDP),A	;escribe A en VRAM en la posición indicada por los dos OUT anteriores
     447.  00:8266  23                  	INC		HL
     448.  00:8267  10 FA               	DJNZ	.pa_pinta_columnas
     449.  00:8269                      	
     450.  00:8269                      	;no es una solución elegante lo de repetir código pero queda claro
     451.  00:8269                      	;por si hay otra fila
     452.  00:8269  E5                  	PUSH	HL
     453.  00:826A  2A 87 82            	LD		HL,(wordaux1)
     454.  00:826D  01 20 00            	LD		BC,32
     455.  00:8270  09                  	ADD		HL,BC
     456.  00:8271  22 87 82            	LD		(wordaux1),HL
     457.  00:8274  44                  	LD		B,H
     458.  00:8275  4D                  	LD		C,L
     459.  00:8276  E1                  	POP		HL
     460.  00:8277                      	
     461.  00:8277  79                  	LD		 A,C			;primero byte bajo	
     462.  00:8278  D3 99               	OUT		(REGEST),A
     463.  00:827A  78                  	LD		 A,B			;después byte alto 
     464.  00:827B  F6 40               	OR		1000000b		;+64
     465.  00:827D  D3 99               	OUT		(REGEST),A
     466.  00:827F                      	
     467.  00:827F                      	;si hay otra fila repite
     468.  00:827F  15                  	DEC		 D
     469.  00:8280  7A                  	LD		 A,D		;¿hay otra fila?
     470.  00:8281  B7                  	OR		 A
     471.  00:8282  C2 62 82            	JP		NZ,.pa_pinta_fila
     472.  00:8285                      	
     473.  00:8285  F1                  	POP		AF
     474.  00:8286                      	
     475.  00:8286                      fin_pinta_array:
     476.  00:8286  C9                  	RET
     477.  00:8287                      ;;variables asocidas a la función (no sé si dejarlo aquí y encapsularlo todo o hacerla reutilizable)
     478.  00:8287                      ;; por de pronto la dejo aquí
     479.  00:8287  00 00               wordaux1:		DW	0	;almacena la posición en el tilemap 0 al 675
     480.  00:8289  00 00               wordaux2:		DW	0	;almacena puntero a array de tiles (posiciones en realidad) a pintar (posiciones repetidas en los 3 bancos)
     481.  00:828B                      
     482.  00:828B                      
     483.  00:828B                      
     484.  00:828B                      
     485.  00:828B                      
     486.  00:828B                      ;;=====================================================
     487.  00:828B                      ;;PINTA_PUERTAS
     488.  00:828B                      ;;=====================================================	
     489.  00:828B                      ; función: 	examina A y mira si tiene que pintar puertas de los lados, arriba o abrajo o las escaleras (o no)
     490.  00:828B                      ; entrada: 	habitacion_actual 1 escalera 1 puerta arriba 1 pu der 1 pu aba 1 pu izq (si es 0 pinta pared)
     491.  00:828B                      ; salida: 	-
     492.  00:828B                      ; toca:		todo
     493.  00:828B                      pinta_puertas:
     494.  00:828B  CD 0C 81            	CALL	pinta_parte_superior_pantalla	;pinta pasillo y paredes
     495.  00:828E                      
     496.  00:828E  CD 9D 80            	CALL	localiza_info_habitacion	;busca qué puertas debe pintar y lo mete en habitación_actual
     497.  00:8291                      	
     498.  00:8291  3A 09 A0            	LD		 A, (habitacion_actual)		;se mete en A porque la función pide A y para no buscar el valor 4 veces
     499.  00:8294                      
     500.  00:8294                      ;	BIT		 4, A
     501.  00:8294                      ;	CALL	nz, pinta_escalera
     502.  00:8294                      
     503.  00:8294  CB 5F               	BIT		 3, A
     504.  00:8296  C4 BE 82            	CALL	nz, pinta_puerta_arr
     505.  00:8299                      
     506.  00:8299  CB 57               	BIT		 2, A
     507.  00:829B  C4 D3 82            	CALL	nz, pinta_puerta_der
     508.  00:829E                      
     509.  00:829E  CB 4F               	BIT		 1, A
     510.  00:82A0  C4 A9 82            	CALL	nz, pinta_puerta_aba
     511.  00:82A3                      	
     512.  00:82A3  CB 47               	BIT		 0, A
     513.  00:82A5  C4 E8 82            	CALL	nz, pinta_puerta_izq
     514.  00:82A8                      fin_pinta_puertas:
     515.  00:82A8  C9                  	RET
     516.  00:82A9                      
     517.  00:82A9                      
     518.  00:82A9                      
     519.  00:82A9                      
     520.  00:82A9                      ;;=====================================================
     521.  00:82A9                      ;;PINTA_PUERTA_ABA
     522.  00:82A9                      ;;=====================================================	
     523.  00:82A9                      ; función: 	pinta la puerta de abajo
     524.  00:82A9                      ; entrada: 	array_puerta_abajo, wordaux2, wordaux1
     525.  00:82A9                      ; salida: 	-
     526.  00:82A9                      ; toca:		HL,BC, DE
     527.  00:82A9                      pinta_puerta_aba:
     528.  00:82A9  21 83 A3            	LD		HL,array_puerta_abajo			;guardo puntero al array a pintar (como psar por referencia)
     529.  00:82AC  22 89 82            	LD		(wordaux2),HL					;en la variable wordaux2
     530.  00:82AF  21 EE 19            	LD		HL,TILMAP + POSPUERABAJ			;calcula posición en tilemap
     531.  00:82B2  22 87 82            	LD		(wordaux1),HL					;guarda valor pos tilemap en wordaux1
     532.  00:82B5  44                  	LD		B,H								;coloca posición tilemap BC
     533.  00:82B6  4D                  	LD		C,L
     534.  00:82B7  16 01               	LD		D,1								;nº de filas
     535.  00:82B9  1E 04               	LD		E,4								;nº de columnas
     536.  00:82BB  C3 54 82            	JP		pinta_array
     537.  00:82BE                      fin_pinta_puerta_aba:
     538.  00:82BE                      
     539.  00:82BE                      ;;=====================================================
     540.  00:82BE                      ;;PINTA_PUERTA_ARR
     541.  00:82BE                      ;;=====================================================	
     542.  00:82BE                      ; función: 	pinta la puerta de arriba
     543.  00:82BE                      ; entrada: 	array_puerta_arriba, wordaux2, wordaux1
     544.  00:82BE                      ; salida: 	-
     545.  00:82BE                      ; toca:		HL,BC, DE
     546.  00:82BE                      pinta_puerta_arr:
     547.  00:82BE  21 5A A3            	LD		HL,array_puerta_arriba			;guardo puntero al array a pintar (como psar por referencia)
     548.  00:82C1  22 89 82            	LD		(wordaux2),HL					;en la variable wordaux2
     549.  00:82C4  21 8E 18            	LD		HL,TILMAP + POSPUERARRI			;calcula posición en tilemap
     550.  00:82C7  22 87 82            	LD		(wordaux1),HL					;guarda valor pos tilemap en wordaux1
     551.  00:82CA  44                  	LD		B,H								;coloca posición tilemap BC
     552.  00:82CB  4D                  	LD		C,L
     553.  00:82CC  16 05               	LD		D,5								;nº de filas
     554.  00:82CE  1E 04               	LD		E,4								;nº de columnas
     555.  00:82D0  C3 54 82            	JP		pinta_array
     556.  00:82D3                      fin_pinta_puerta_arr:
     557.  00:82D3                      
     558.  00:82D3                      
     559.  00:82D3                      ;;=====================================================
     560.  00:82D3                      ;;PINTA_PUERTA_DER
     561.  00:82D3                      ;;=====================================================	
     562.  00:82D3                      ; función: 	pinta la puerta de la derecha
     563.  00:82D3                      ; entrada: 	array_puerta_derecha, wordaux2, wordaux1
     564.  00:82D3                      ; salida: 	-
     565.  00:82D3                      ; toca:		HL,BC, DE
     566.  00:82D3                      pinta_puerta_der:
     567.  00:82D3  21 6E A3            	LD		HL,array_puerta_derecha			;guardo puntero al array a pintar (como psar por referencia)
     568.  00:82D6  22 89 82            	LD		(wordaux2),HL					;en la variable wordaux2
     569.  00:82D9  21 FC 18            	LD		HL,TILMAP + POSPUERDERE			;calcula posición en tilemap
     570.  00:82DC  22 87 82            	LD		(wordaux1),HL					;guarda valor pos tilemap en wordaux1
     571.  00:82DF  44                  	LD		B,H								;coloca posición tilemap BC
     572.  00:82E0  4D                  	LD		C,L
     573.  00:82E1  16 07               	LD		D,7								;nº de filas
     574.  00:82E3  1E 03               	LD		E,3								;nº de columnas
     575.  00:82E5  C3 54 82            	JP		pinta_array
     576.  00:82E8                      fin_pinta_puerta_der:
     577.  00:82E8                      	
     578.  00:82E8                      ;;=====================================================
     579.  00:82E8                      ;;PINTA_PUERTA_IZQ
     580.  00:82E8                      ;;=====================================================	
     581.  00:82E8                      ; función: 	pinta la puerta de la izquierda
     582.  00:82E8                      ; entrada: 	array_puerta_izquierda, wordaux2, wordaux1
     583.  00:82E8                      ; salida: 	-
     584.  00:82E8                      ; toca:		HL,BC, DE
     585.  00:82E8                      pinta_puerta_izq:
     586.  00:82E8  21 87 A3            	LD		HL,array_puerta_izquierda		;guardo puntero al array a pintar (como psar por referencia)
     587.  00:82EB  22 89 82            	LD		(wordaux2),HL					;en la variable wordaux2
     588.  00:82EE  21 E1 18            	LD		HL,TILMAP + POSPUERIZQU			;calcula posición en tilemap
     589.  00:82F1  22 87 82            	LD		(wordaux1),HL					;guarda valor pos tilemap en wordaux1
     590.  00:82F4  44                  	LD		B,H								;coloca posición tilemap BC
     591.  00:82F5  4D                  	LD		C,L
     592.  00:82F6  16 07               	LD		D,7								;nº de filas
     593.  00:82F8  1E 03               	LD		E,3								;nº de columnas
     594.  00:82FA  C3 54 82            	JP		pinta_array
     595.  00:82FD                      fin_pinta_puerta_izq:
     596.  00:82FD                      
     597.  00:82FD                      
     598.  00:82FD                      
     599.  00:82FD                      
     600.  00:82FD                      ;;=====================================================
     601.  00:82FD                      ;;POSICIONA_EN_MAPA
     602.  00:82FD                      ;;=====================================================	
     603.  00:82FD                      ; función: 	en el mapa de marcadores de la derecha/abajo marca un cuadro en gris o con un muñeco
     604.  00:82FD                      ;			según el valor de prota.posición pinta entrá un muñeco y por donde vaya pasando el prota
     605.  00:82FD                      ;			quedará en gris
     606.  00:82FD                      ; entrada: 	elemento_pintar_mapa, prota_pos_mapy, prota_pos_mapx
     607.  00:82FD                      ; salida: 	-
     608.  00:82FD                      ; toca:		todos
     609.  00:82FD                      posiciona_en_mapa:
     610.  00:82FD                      	;#0238 es la posición en mapa de tiles de la esquina superior izquierda del mapa (569 en decimal)
     611.  00:82FD  21 38 1A            	LD		HL, TILMAP + POSMAPA;pos inicial
     612.  00:8300                      	
     613.  00:8300                      	;ahora se le calcula la fila a pintar ya que va de abajo a arriba y no como en el mapa + columna
     614.  00:8300                      .sumar_fila:
     615.  00:8300  3A 38 A3            	LD		 A,(prota_pos_mapy)
     616.  00:8303  FE 01               	CP		 1
     617.  00:8305  28 2A               	JR		 Z, .fila_1
     618.  00:8307  3A 38 A3            	LD		 A,(prota_pos_mapy)
     619.  00:830A  FE 02               	CP		 2
     620.  00:830C  28 2A               	JR		 Z, .fila_2
     621.  00:830E  3A 38 A3            	LD		 A,(prota_pos_mapy)
     622.  00:8311  FE 03               	CP		 3
     623.  00:8313  28 2A               	JR		 Z, .fila_3
     624.  00:8315  3A 38 A3            	LD		 A,(prota_pos_mapy)
     625.  00:8318  FE 04               	CP		 4
     626.  00:831A  28 2A               	JR		 Z, .fila_4
     627.  00:831C  3A 38 A3            	LD		 A,(prota_pos_mapy)
     628.  00:831F  FE 05               	CP		 5
     629.  00:8321  28 2A               	JR		 Z, .fila_5
     630.  00:8323  3A 38 A3            	LD		 A,(prota_pos_mapy)
     631.  00:8326  FE 06               	CP		 6
     632.  00:8328  28 2A               	JR		 Z, .sumar_columna
     633.  00:832A                      	;no consulto la 0 porque si no es ninguna de las anteriores es 0 y por tanto sería un jr fila_0
     634.  00:832A                      	
     635.  00:832A                      .fila_0:
     636.  00:832A  11 C0 00            	LD		DE, 192
     637.  00:832D  19                  	ADD		HL, DE			;nota: se que repito el ADD pero la otra opción es inicializar DE y ya tarda mucho la funicón (es por velicidad)
     638.  00:832E  C3 54 83            	JP		.sumar_columna
     639.  00:8331                      .fila_1:
     640.  00:8331  11 A0 00            	LD		DE, 160
     641.  00:8334  19                  	ADD		HL, DE
     642.  00:8335  C3 54 83            	JP		.sumar_columna
     643.  00:8338                      .fila_2:
     644.  00:8338  11 80 00            	LD		DE, 128
     645.  00:833B  19                  	ADD		HL, DE
     646.  00:833C  C3 54 83            	JP		.sumar_columna
     647.  00:833F                      .fila_3:
     648.  00:833F  11 60 00            	LD		DE, 96
     649.  00:8342  19                  	ADD		HL, DE
     650.  00:8343  C3 54 83            	JP		.sumar_columna
     651.  00:8346                      .fila_4:
     652.  00:8346  11 40 00            	LD		DE, 64
     653.  00:8349  19                  	ADD		HL, DE
     654.  00:834A  C3 54 83            	JP		.sumar_columna
     655.  00:834D                      .fila_5:
     656.  00:834D  11 20 00            	LD		DE, 32
     657.  00:8350  19                  	ADD		HL, DE
     658.  00:8351  C3 54 83            	JP		.sumar_columna
     659.  00:8354                      .fila_6:
     660.  00:8354                      	;pongo fila_6 por poner ya que si es la fila 6 equiv. a primera fila del mapa y por tanto no suma fila
     661.  00:8354                      	
     662.  00:8354                      	
     663.  00:8354                      .sumar_columna:
     664.  00:8354  3A 37 A3            	LD 		 A, (prota_pos_mapx) ;POS X
     665.  00:8357  16 00               	LD		 D, 0
     666.  00:8359  5F                  	LD		 E, A
     667.  00:835A  19                  	ADD		HL, DE
     668.  00:835B                      	
     669.  00:835B                      	;resultado en BC para usar en la función pinta_tile_suelto
     670.  00:835B  44                  	LD		 B, H
     671.  00:835C  4D                  	LD		 C, L
     672.  00:835D                      	
     673.  00:835D                      	;terminado de fijar la coordenada recuperamos a para ver el tipo
     674.  00:835D  3A 59 A3            	LD		 A, (elemento_pintar_mapa)
     675.  00:8360  FE 09               	CP		 TILEGRISM
     676.  00:8362  CA 6A 83            	JP		 Z, pinta_pos_mapa_vacio
     677.  00:8365  16 13               	LD		 D, TILEPROTAM
     678.  00:8367  C3 6C 83            	JP		fin_pinta_pos_mapa
     679.  00:836A                      pinta_pos_mapa_vacio:
     680.  00:836A  16 09               	LD		 D, TILEGRISM	
     681.  00:836C                      
     682.  00:836C                      fin_pinta_pos_mapa:
     683.  00:836C  C3 89 81            	JP		pinta_tile_suelto
     684.  00:836F                      fin_posiciona_en_mapa:
     685.  00:836F                      	;~ -CALL/RET
     686.  00:836F                      
     687.  00:836F                      
     688.  00:836F                      
     689.  00:836F                      ;;=====================================================
     690.  00:836F                      ;;EFECTO_IMAGEN_TIRA_RELIQUIA
     691.  00:836F                      ;;=====================================================	
     692.  00:836F                      ; función: 	hace que el fondo de la pantalla parpadee N veces
     693.  00:836F                      ; entrada: 	actualiza_reliquias_sn
     694.  00:836F                      ; salida: 	-
     695.  00:836F                      ; toca: 	todo
     696.  00:836F                      efecto_imagen_tira_reliquia:
     697.  00:836F  3E 14               	LD		 A, 20;RETARDOREL
     698.  00:8371  47                  	LD		 B, A
     699.  00:8372                      
     700.  00:8372                      .parpadea_fondo:
     701.  00:8372  C5                  	PUSH	BC
     702.  00:8373  21 1E A3            	LD		HL, color_bomba1
     703.  00:8376  CD D3 80            	CALL	color_pantalla
     704.  00:8379                      	
     705.  00:8379                      	;~ PUSH	BC
     706.  00:8379                      	;~ LD		 A, 255
     707.  00:8379                      	;~ LD		 B, A
     708.  00:8379                      ;~ .bucle_de_espera:
     709.  00:8379                      	;~ NOP
     710.  00:8379                      	;~ DJNZ	 .bucle_de_espera
     711.  00:8379                      	;~ POP		BC
     712.  00:8379  76                  	HALT
     713.  00:837A                      
     714.  00:837A                      	
     715.  00:837A  21 21 A3            	LD		HL, color_bomba2
     716.  00:837D  CD D3 80            	CALL	color_pantalla
     717.  00:8380  C1                  	POP		BC
     718.  00:8381  10 EF               	DJNZ	.parpadea_fondo
     719.  00:8383                      	
     720.  00:8383  21 1B A3            	LD		HL, color_base
     721.  00:8386  C3 D3 80            	JP		color_pantalla
     722.  00:8389                      fin_efecto_imagen_tira_reliquia:
     723.  00:8389                      	;CALL/RET
     724.  00:8389                      
     105   00:8389                      	
     106   00:8389                      	include "subr_sprites.asm"
       1.  00:8389                      
       2.  00:8389                      ;;=====================================================
       3.  00:8389                      ;;SUBRUTINAS ENCARGADAS DE MANEJAR LOS SPRITES
       4.  00:8389                      ;;=====================================================	
       5.  00:8389                      
       6.  00:8389                      
       7.  00:8389                      ;; PREGUNTAR SI A FERNANDO SI ES MEJOR USAR LISTAS O ALGO PARA AHORRAR CÓDIGO
       8.  00:8389                      
       9.  00:8389                      
      10.  00:8389                      
      11.  00:8389                      
      12.  00:8389                      ;;=====================================================
      13.  00:8389                      ;;CARGA_PATRONES_SPRITES_NIVEL
      14.  00:8389                      ;;=====================================================	
      15.  00:8389                      ; función: 	examina el nivel y carga los patrones específicos necesarios
      16.  00:8389                      ; entrada: 	-
      17.  00:8389                      ; salida: 	-
      18.  00:8389                      ; toca: 	-
      19.  00:8389                      carga_patrones_sprites_nivel:
      20.  00:8389                      	
      21.  00:8389  CD 94 83            	CALL 	carga_patrones_nivel_comunes
      22.  00:838C                      	
      23.  00:838C                      	;carga atrones no comunes
      24.  00:838C  3A 34 A3            	LD		 A, (prota_nivel)
      25.  00:838F  B7                  	OR		 A
      26.  00:8390  CA A0 83            	JP		 Z, carga_patrones_sprites_nivel1
      27.  00:8393                      	
      28.  00:8393                      	
      29.  00:8393                      fin_carga_patrones_sprites_nivel:
      30.  00:8393  C9                  	RET		;dejo este ret de momento pero cuando la subrutina esté terminada sobrará
      31.  00:8394                      
      32.  00:8394                      	;RET comparo numeros con jp para incluir el RET con lo que el último ret me sobra
      33.  00:8394                      
      34.  00:8394                      ;;=====================================================
      35.  00:8394                      ;;CARGA_PATRONES_SPRITES_NIVEL_COMUNES
      36.  00:8394                      ;;=====================================================	
      37.  00:8394                      ; función: 	carga los patrones comunes en todos los niveles
      38.  00:8394                      ; entrada: 	-
      39.  00:8394                      ; salida: 	-
      40.  00:8394                      ; toca: 	-
      41.  00:8394                      carga_patrones_nivel_comunes:	
      42.  00:8394  21 89 96            	LD		HL, sprites_comunes
      43.  00:8397  11 00 38            	LD		DE, SPRTBL
      44.  00:839A  01 C0 00            	LD		BC, fin_sprites_comunes-sprites_comunes
      45.  00:839D  C3 5C 00            	JP		LDIRVM
      46.  00:83A0                      fin_carga_patrones_nivel_comunes:
      47.  00:83A0                      
      48.  00:83A0                      
      49.  00:83A0                      ;;=====================================================
      50.  00:83A0                      ;;CARGA_PATRONES_SPRITES_NIVEL1
      51.  00:83A0                      ;;=====================================================	
      52.  00:83A0                      ; función: 	copia los patrones de los sprites que e van a usar en el nivel 1 en vram
      53.  00:83A0                      ; entrada: 	-
      54.  00:83A0                      ; salida: 	-
      55.  00:83A0                      ; toca: 	-
      56.  00:83A0                      carga_patrones_sprites_nivel1:
      57.  00:83A0                      
      58.  00:83A0                      
      59.  00:83A0                      	;~ ;sprite sprite_reliquia
      60.  00:83A0                      	;~ LD		HL,sprite_reliquia
      61.  00:83A0                      	;~ LD		DE,#3880
      62.  00:83A0                      	;~ LD		BC,32				;32 bytes (sprites de 2 x 2)
      63.  00:83A0                      	;~ CALL	LDIRVM
      64.  00:83A0                      
      65.  00:83A0                      fin_carga_patrones_sprites:
      66.  00:83A0  C9                  	RET
      67.  00:83A1                      
      68.  00:83A1                      
      69.  00:83A1                      ;;=====================================================
      70.  00:83A1                      ;;ACTUALIZA_ARRAY_SPRITES_VRAM
      71.  00:83A1                      ;;=====================================================	
      72.  00:83A1                      ; función: 	copia el array con los valores de los sprites (pos, color, plano) en VRAM
      73.  00:83A1                      ; entrada: 	-
      74.  00:83A1                      ; salida: 	-
      75.  00:83A1                      ; toca: 	todos los registros. Como me interesa la velocidad, si necesito copiar de algo lo hago fuera
      76.  00:83A1                      render_sprites:
      77.  00:83A1                      	;volcando el array con toda la info de los sprites a la zona de atributos de sprites
      78.  00:83A1  21 AC A3            	LD		HL,array_sprites
      79.  00:83A4  11 00 1B            	LD		DE,SPRART
      80.  00:83A7  01 80 00            	LD		BC,4 * 32				;32 sprites x 4 bytes controlando el sprite (Y, X, plano, color)
      81.  00:83AA  C3 5C 00            	JP		LDIRVM
      82.  00:83AD                      fin_actualiza_array_sprites_vram:
      83.  00:83AD                      
      84.  00:83AD                      
      85.  00:83AD                      ;;=====================================================
      86.  00:83AD                      ;;VUELCA_RESULTADO_PUNTOMIRA_ARRAY
      87.  00:83AD                      ;;=====================================================	
      88.  00:83AD                      ; función: 	coloca los valores del punto de mira en la variable array_sprites para ser volcados en VRAM
      89.  00:83AD                      ; entrada: 	array_sprites_pm, prota.XXXXX
      90.  00:83AD                      ; salida: 	-
      91.  00:83AD                      ; toca: 	-
      92.  00:83AD                      vuelca_resultado_puntomira_array:
      93.  00:83AD  DD 21 AC A3         	LD		IX, array_sprites_pm
      94.  00:83B1                      	;posición y de los dos sprites que conforman el punto de mira
      95.  00:83B1  3A 25 A3            	LD		 A, (prota.posy)
      96.  00:83B4  DD 77 00            	LD		(IX  ), A
      97.  00:83B7  DD 77 04            	LD		(IX+4), A
      98.  00:83BA                      	;posición x de los dos sprites que conforman el punto de mira
      99.  00:83BA  3A 24 A3            	LD		 A, (prota.posx)
     100.  00:83BD  DD 77 01            	LD		(IX+1), A
     101.  00:83C0  DD 77 05            	LD		(IX+5), A
     102.  00:83C3                      	;plano
     103.  00:83C3  DD 36 02 00         	LD		(IX+2), 0
     104.  00:83C7  DD 36 06 04         	LD		(IX+6), 4	;al ser sprites de 16x16 hay que ir de 4 en 4
     105.  00:83CB                      	;color
     106.  00:83CB  3A 26 A3            	LD		 A, (prota.escena)
     107.  00:83CE  B7                  	OR		 A
     108.  00:83CF  C2 DB 83            	JP		NZ,.codigo_color_2
     109.  00:83D2                      .codigo_color_1:
     110.  00:83D2  DD 36 03 0F         	LD		(IX+3), COLBLANCO
     111.  00:83D6  DD 36 07 08         	LD		(IX+7), COLROJO
     112.  00:83DA  C9                  	RET
     113.  00:83DB                      .codigo_color_2:
     114.  00:83DB  DD 36 03 08         	LD		(IX+3), COLROJO
     115.  00:83DF  DD 36 07 0F         	LD		(IX+7), COLBLANCO
     116.  00:83E3  C9                  	RET
     117.  00:83E4                      fin_vuelca_resultado_puntomira_array:
     118.  00:83E4                      
     119.  00:83E4                      
     120.  00:83E4                      ;;=====================================================
     121.  00:83E4                      ;;CHECK_PLAYER
     122.  00:83E4                      ;;=====================================================	
     123.  00:83E4                      ; función: 	MIRA EL CONTROL Y APLICA LA LOGICA DE MOVIMIENTO DEL PROTAGONISTA
     124.  00:83E4                      ; entrada: 	-
     125.  00:83E4                      ; salida: 	-
     126.  00:83E4                      ; toca: 	A
     127.  00:83E4                      check_player:
     128.  00:83E4  CD 83 84            	CALL	update_controllers_status
     129.  00:83E7  B7                  	OR		 A
     130.  00:83E8  C8                  	RET		 Z						;si no se ha pulsado nada no se necesita mirar nada
     131.  00:83E9                      
     132.  00:83E9  CB 1F               	RR		 A
     133.  00:83EB  DC 04 84            	CALL	 C, mueve_arriba
     134.  00:83EE  CB 1F               	RR		 A
     135.  00:83F0  DC 20 84            	CALL	 C, mueve_abajo
     136.  00:83F3  CB 1F               	RR		 A
     137.  00:83F5  DC 2F 84            	CALL	 C, mueve_izquierda
     138.  00:83F8  CB 1F               	RR		 A
     139.  00:83FA  DC 11 84            	CALL	 C, mueve_derecha
     140.  00:83FD                      	
     141.  00:83FD                      	;zona para mirar disparo Recibe A que tendrá 0000 0 0 X-letra M X-espacio 
     142.  00:83FD  CD 3C 84            	CALL	mira_disparo
     143.  00:8400                      	
     144.  00:8400  C3 AD 83            	JP		vuelca_resultado_puntomira_array
     145.  00:8403                      f;in_check_player:
     146.  00:8403  C9                  	RET
     147.  00:8404                      
     107   00:8404                      	
     108   00:8404                      	include "subr_teclado_joy.asm"
       1.  00:8404                      ;;=====================================================
       2.  00:8404                      ;;SUBRUTINAS QUE CAPTURN EL JOYSTICK Y TECLADO Y MUEVEN PUNTO DE MIRA
       3.  00:8404                      ;;=====================================================
       4.  00:8404                      
       5.  00:8404                      ;;=====================================================
       6.  00:8404                      ;;MUEVE_ARRIBA
       7.  00:8404                      ;;=====================================================	
       8.  00:8404                      ; función: 	decrementa y si se no sale de los límites el valor del punto de mira a la derecha
       9.  00:8404                      ; entrada: 	-
      10.  00:8404                      ; salida: 	-
      11.  00:8404                      ; toca: 	-
      12.  00:8404                      mueve_arriba:
      13.  00:8404  F5                  	PUSH		AF
      14.  00:8405                      	
      15.  00:8405  3A 25 A3            	LD		 	 A, (prota.posy)
      16.  00:8408  3D                  	DEC			 A
      17.  00:8409  CA 0F 84            	JP			 Z,.no_decrementa_y
      18.  00:840C  32 25 A3            	LD			(prota.posy), A
      19.  00:840F                      	
      20.  00:840F                      .no_decrementa_y:
      21.  00:840F  F1                  	POP			AF
      22.  00:8410                      fin_mueve_arriba:
      23.  00:8410  C9                  	RET
      24.  00:8411                      
      25.  00:8411                      
      26.  00:8411                      ;;=====================================================
      27.  00:8411                      ;;MUEVE_DERECHA
      28.  00:8411                      ;;=====================================================	
      29.  00:8411                      ; función: 	incrementa si se no sale de los límites el valor del punto de mira a la derecha
      30.  00:8411                      ; entrada: 	-
      31.  00:8411                      ; salida: 	-
      32.  00:8411                      ; toca: 	-
      33.  00:8411                      mueve_derecha:
      34.  00:8411  F5                  	PUSH		AF
      35.  00:8412                      	
      36.  00:8412  3A 24 A3            	LD		 	 A, (prota.posx)
      37.  00:8415  3C                  	INC			 A
      38.  00:8416  FE EF               	CP			 A, LIMPANTDER - 16
      39.  00:8418  CA 1E 84            	JP			 Z, .no_incrementa_x
      40.  00:841B  32 24 A3            	LD			(prota.posx), A
      41.  00:841E                      	
      42.  00:841E                      .no_incrementa_x:
      43.  00:841E  F1                  	POP			AF
      44.  00:841F                      fin_mueve_derecha:
      45.  00:841F  C9                  	RET
      46.  00:8420                      
      47.  00:8420                      
      48.  00:8420                      ;;=====================================================
      49.  00:8420                      ;;MUEVE_ABAJO
      50.  00:8420                      ;;=====================================================	
      51.  00:8420                      ; función: 	incrementa y si se no sale de los límites el valor del punto de mira abajo
      52.  00:8420                      ; entrada: 	-
      53.  00:8420                      ; salida: 	-
      54.  00:8420                      ; toca: 	-
      55.  00:8420                      mueve_abajo:
      56.  00:8420  F5                  	PUSH		AF
      57.  00:8421                      	
      58.  00:8421  3A 25 A3            	LD		 	 A, (prota.posy)
      59.  00:8424  3C                  	INC			 A
      60.  00:8425  FE 70               	CP			 A, LIMPANTABA - 16
      61.  00:8427  CA 2D 84            	JP			 Z,.no_incrementa_y
      62.  00:842A  32 25 A3            	LD			(prota.posy), A
      63.  00:842D                      	
      64.  00:842D                      .no_incrementa_y:
      65.  00:842D  F1                  	POP			AF
      66.  00:842E                      fin_mueve_abajo:
      67.  00:842E  C9                  	RET
      68.  00:842F                      	
      69.  00:842F                      	
      70.  00:842F                      ;;=====================================================
      71.  00:842F                      ;;MUEVE_IZQUIERDA
      72.  00:842F                      ;;=====================================================	
      73.  00:842F                      ; función: 	decrementa x si se no sale de los límites el valor del punto de mira a la izquierda
      74.  00:842F                      ; entrada: 	-
      75.  00:842F                      ; salida: 	-
      76.  00:842F                      ; toca: 	-
      77.  00:842F                      mueve_izquierda:
      78.  00:842F  F5                  	PUSH		AF
      79.  00:8430                      	
      80.  00:8430  3A 24 A3            	LD		 	 A, (prota.posx)
      81.  00:8433  3D                  	DEC			 A
      82.  00:8434                      ;	CP			 A, LIMPANTIZQ
      83.  00:8434  CA 3A 84            	JP			 Z,.no_decrementa_x
      84.  00:8437  32 24 A3            	LD			(prota.posx), A
      85.  00:843A                      	
      86.  00:843A                      .no_decrementa_x:
      87.  00:843A  F1                  	POP			AF
      88.  00:843B                      fin_mueve_izquierda:
      89.  00:843B  C9                  	RET
      90.  00:843C                      
      91.  00:843C                      
      92.  00:843C                      
      93.  00:843C                      ;;=====================================================
      94.  00:843C                      ;;MIRA_DISPARO
      95.  00:843C                      ;;=====================================================	
      96.  00:843C                      ; función: 	Mira si se ha pulsado alguno de los dos disparos
      97.  00:843C                      ; entrada: 	A que tendrá 0000 0 0 X-letra M X-espacio 
      98.  00:843C                      ; salida: 	-
      99.  00:843C                      ; toca: 	A, B
     100.  00:843C                      mira_disparo:
     101.  00:843C                      .mira_boton_pulsado1:
     102.  00:843C  CB 1F               	RR		 A						;preparo en el carry si se ha pulsado botón 1
     103.  00:843E  D2 67 84            	JP		 NC, .mira_boton_pulsado2					
     104.  00:8441  F5                  	PUSH	AF						;copia A para usarlo después
     105.  00:8442                      	;se ha pulsado barra o boton 1
     106.  00:8442  3A 29 A3            	LD		 A, (prota.cadencia)
     107.  00:8445  B7                  	OR		 A
     108.  00:8446  CA 54 84            	JP		 Z, .efectua_disparo	;toca efectuar disparo realmente porque se ha pulsado lo suficiente el disparo
     109.  00:8449                      .no_efectua_disparo: ;IF
     110.  00:8449  3D                  		DEC		 A
     111.  00:844A  32 29 A3            		LD		(prota.cadencia), A	;resto cadencia hasta próximo disparo "real" (no automático por haber pulsado una tecla e ir demasiado rápido)
     112.  00:844D  AF                  		XOR		 A 
     113.  00:844E  32 26 A3            		LD		(prota.escena), A
     114.  00:8451  C3 66 84            		JP		.fin_mira_disparo1
     115.  00:8454                      .efectua_disparo:	;ELSE
     116.  00:8454                      		;cambio colores del sprite
     117.  00:8454  3A 26 A3            		LD		 A, (prota.escena)
     118.  00:8457  2F                  		CPL		 
     119.  00:8458  32 26 A3            		LD		(prota.escena), A
     120.  00:845B                      		;reseteo cadencia para el próximo disparo
     121.  00:845B  3E 04               		LD		 A, LIMCADENCIA						;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
     122.  00:845D  32 29 A3            		LD		 (prota.cadencia), A				;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
     123.  00:8460                      		;ejecuto sonido								;; ajustar cadencia y que cuando el disparo sea efectivo se reseteen los colores
     124.  00:8460  AF                  		XOR		 A
     125.  00:8461  0E 01               		LD		 C, 1
     126.  00:8463  CD 2B 8B            		CALL	ayFX_INIT	
     127.  00:8466                      .fin_mira_disparo1
     128.  00:8466                      
     129.  00:8466  F1                  	POP		AF
     130.  00:8467                      .mira_boton_pulsado2:
     131.  00:8467  CB 1F               	RR		 A
     132.  00:8469  D0                  	RET		 NC
     133.  00:846A                      	;se ha pulsado shift o boton 2
     134.  00:846A                      	
     135.  00:846A  3A 36 A3            	LD		 A, (prota_reliquias)	;miro si le quedan reliquias
     136.  00:846D  B7                  	OR		 A
     137.  00:846E  C8                  	RET		 Z						;si no le quedan salgo ya
     138.  00:846F                      	
     139.  00:846F                      	;actuaciones si se usa la reliquia botón 2 o M y quedn reliquias.. (antes ya se puso el valor en A)
     140.  00:846F  3A 36 A3            	LD		A, (prota_reliquias)
     141.  00:8472  3D                  	DEC		 A
     142.  00:8473  32 36 A3            	LD		(prota_reliquias), A
     143.  00:8476                      	
     144.  00:8476  3E 01               	LD		 A, 1
     145.  00:8478  0E 01               	LD		 C, 1
     146.  00:847A  CD 2B 8B            	CALL	ayFX_INIT
     147.  00:847D                      	
     148.  00:847D  CD 6F 83            	CALL 	efecto_imagen_tira_reliquia
     149.  00:8480                      	
     150.  00:8480  C3 6D 81            	JP		pinta_reliquias
     151.  00:8483                      fin_mira_disparo:
     152.  00:8483                      ;	RET		
     153.  00:8483                      
     154.  00:8483                      
     155.  00:8483                      ;;============================================================
     156.  00:8483                      ;;Código de D. Fernando García (BitVision) (al que siempre le estaré agradecido)
     157.  00:8483                      ;check_8th_keyboard_row
     158.  00:8483                      ;read_joy_0
     159.  00:8483                      ;check_8th_keyboard_row
     160.  00:8483                      ;check_4th_keyboard_row
     161.  00:8483                      ;;============================================================
     162.  00:8483                      ;;  usa constantes:
     163.  00:8483                      ;PSG_A  equ  0a0h  ;reg address
     164.  00:8483                      ;PSG_W  equ  0a1h  ;reg data WR
     165.  00:8483                      ;PSG_R  equ  0a2h  ;reg data
     166.  00:8483                      
     167.  00:8483                      ;;=====================================================
     168.  00:8483                      ;;update_controllers_status
     169.  00:8483                      ;;=====================================================	
     170.  00:8483                      ;depends on the next rountine
     171.  00:8483                      ;  returns
     172.  00:8483                      ;  a - 0P2TRLDU
     173.  00:8483                      
     174.  00:8483                      update_controllers_status:
     175.  00:8483  CD CE 84                 call  check_8th_keyboard_row
     176.  00:8486                      [4]  rrc    a
     176.  00:8486  CB 0F CB 0F CB 0F CB 0F 
     177.  00:848E  47                       ld    b,a    		;save for later  xxxTRDUL
     178.  00:848F                      
     179.  00:848F  E6 01                    and    #01    		;save L
     180.  00:8491  CB 27                    sla    a
     181.  00:8493  CB 27                    sla    a    		;now 00000L00
     182.  00:8495  4F                       ld    c,a    		;save for later
     183.  00:8496                      
     184.  00:8496  78                       ld    a,b    		;again we've got xxxTRDUL. I am interested on leaving 000000DU on a
     185.  00:8497  CB 3F                    srl    a
     186.  00:8499  E6 03                    and    00000011b
     187.  00:849B                      						;we've got 000000DU on a
     188.  00:849B  B1                       or    c    		;now we've got 00000LDU
     189.  00:849C  4F                       ld    c,a    		;save for later
     190.  00:849D                      
     191.  00:849D  78                       ld    a,b
     192.  00:849E  E6 18                    and    00011000b 	;we've got 000TR000
     193.  00:84A0  B1                       or    c
     194.  00:84A1                           ;finally    000TRLDU
     195.  00:84A1                      
     196.  00:84A1                           ;and    00000100   ;preserve just
     197.  00:84A1  47                       ld    b,a    		;save for later
     198.  00:84A2  CD DC 84                 call  check_4th_keyboard_row      ;check M & P
     199.  00:84A5  F5                       push  af
     200.  00:84A6  E6 04                    and    00000100b	;filter just M
     201.  00:84A8  87                       add    a
     202.  00:84A9  87                       add    a
     203.  00:84AA  87                       add    a           ;shift 3th to 6th bit
     204.  00:84AB  B0                       or    b           	;merge with previous
     205.  00:84AC  47                       ld    b,a
     206.  00:84AD                      
     207.  00:84AD  CD BA 84                 call  read_joy_0
     208.  00:84B0  E6 3F                    and    00111111b  	;we want just 002TRLDU  from joystick    (2 is second trigger)
     209.  00:84B2  B0                       or    b      		;added 000TRLDU from keyboard
     210.  00:84B3  47                       ld    b,a      	;save for later
     211.  00:84B4  F1                       pop    af      	; let's check on P
     212.  00:84B5                      
     213.  00:84B5  E6 20                    and    00100000b
     214.  00:84B7  87                       add    a      		;P status on 6th bit  ... so 0P2TRLDU
     215.  00:84B8  B0                       or    b
     216.  00:84B9                      
     217.  00:84B9  C9                       ret
     218.  00:84BA                      
     219.  00:84BA                      
     220.  00:84BA                      ;ret
     221.  00:84BA                      ;  a -            xx2TRLDU
     222.  00:84BA                      read_joy_0:
     223.  00:84BA  F3                         di
     224.  00:84BB  3E 0F                      ld    a,15
     225.  00:84BD  D3 A0                      out    [PSG_A],a
     226.  00:84BF  DB A2                      in    a,[PSG_R]
     227.  00:84C1  E6 BF                      and    10111111b        ;joy0
     228.  00:84C3                      
     229.  00:84C3  D3 A1                      out    [PSG_W],a        ;set joy0
     230.  00:84C5                      
     231.  00:84C5  3E 0E                      ld    a,14
     232.  00:84C7  D3 A0                      out    [PSG_A],a
     233.  00:84C9  DB A2                      in    a,[PSG_R]
     234.  00:84CB                      
     235.  00:84CB  FB                         ei
     236.  00:84CC  2F                         cpl
     237.  00:84CD                      
     238.  00:84CD  C9                         ret
     239.  00:84CE                      
     240.  00:84CE                      
     241.  00:84CE                      ;ret
     242.  00:84CE                      ;  a -      RDULxxxT
     243.  00:84CE                      check_8th_keyboard_row:
     244.  00:84CE  F3                       di
     245.  00:84CF  DB AA                    in    a,(#aa)
     246.  00:84D1  E6 F0                    and    #f0
     247.  00:84D3  F6 08                    or    8
     248.  00:84D5  D3 AA                    out    (#aa),a
     249.  00:84D7  DB A9                    in    a,(#a9)
     250.  00:84D9  FB                       ei
     251.  00:84DA  2F                       cpl
     252.  00:84DB                      
     253.  00:84DB  C9                       ret
     254.  00:84DC                      
     255.  00:84DC                      
     256.  00:84DC                      ;ret
     257.  00:84DC                      ;  a -      xxxxxMxx
     258.  00:84DC                      check_4th_keyboard_row:
     259.  00:84DC  F3                       di
     260.  00:84DD  DB AA                    in    a,(#aa)
     261.  00:84DF  E6 F0                    and    #f0
     262.  00:84E1  F6 04                    or    4
     263.  00:84E3  D3 AA                    out    (#aa),a
     264.  00:84E5  DB A9                    in    a,(#a9)
     265.  00:84E7  FB                       ei
     266.  00:84E8  2F                       cpl
     267.  00:84E9                      
     268.  00:84E9  C9                       ret
     269.  00:84EA                      
     270.  00:84EA                      ;--------------------------------------------
     271.  00:84EA                      
     272.  00:84EA                      
     273.  00:84EA                      
     274.  00:84EA                      
     275.  00:84EA                      
     276.  00:84EA                      
     277.  00:84EA                      
     278.  00:84EA                      
     109   00:84EA                      	
     110   00:84EA                      	include "subr_sonido.asm"
       1.  00:84EA                      
       2.  00:84EA                      ;;=====================================================
       3.  00:84EA                      ;;SUBRUTINAS PARA SONIDOS
       4.  00:84EA                      ;;=====================================================	
       5.  00:84EA                      
       6.  00:84EA                      ;;=====================================================
       7.  00:84EA                      ;;INICIALIZA_REPLAYER_EFECTOS_INTERRUPCIONES
       8.  00:84EA                      ;;=====================================================	
       9.  00:84EA                      ; función: 	inicializa: replayer de música, player de efectos e interrupciones
      10.  00:84EA                      ; entrada: 	-
      11.  00:84EA                      ; salida: 	-
      12.  00:84EA                      ; toca: 	HL, A
      13.  00:84EA                      inicializa_replayer_efectos_interrupciones:
      14.  00:84EA  F3                  	DI
      15.  00:84EB                      
      16.  00:84EB                      	;inicializacion de replayer musical
      17.  00:84EB  21 93 8B            	LD		HL, song-99			; hl <- initial address of module - 99
      18.  00:84EE  CD 2A 85            	CALL	PT3_INIT			; Inits PT3 player
      19.  00:84F1                      		
      20.  00:84F1                      	;inicializacion del reproductor de efectos sonoros
      21.  00:84F1  21 5E 95            	LD		HL, sfx_bank
      22.  00:84F4  CD 19 8B            	CALL	ayFX_SETUP
      23.  00:84F7                      	
      24.  00:84F7                      	;Engancha nuestra rutina de servicio al gancha que deja preparado la BIOS cuando se termina de pintar la pantalla (50 o 60 veces por segundo)
      25.  00:84F7  3E C3               	LD		A, #C3
      26.  00:84F9  32 9F FD            	LD		[H.TIMI], A
      27.  00:84FC  21 04 85            	LD		HL, subrutina_isr
      28.  00:84FF  22 A0 FD            	LD		[H.TIMI+1], HL
      29.  00:8502                      	
      30.  00:8502  FB                  	EI		;optimizacion:
      31.  00:8503                      			;piensa que las dos ultimas lineas podrian haber sido: 
      32.  00:8503                      			;ei						;primero ei
      33.  00:8503                      			;ld		[H.TIMI+1],hl	;luego este ld
      34.  00:8503                      									;PENSAR (y consultar ) PORQUE!!!!
      35.  00:8503                      fin_inicializa_replayer_efectos_interrupciones:
      36.  00:8503  C9                  	RET
      37.  00:8504                      
      38.  00:8504                      
      39.  00:8504                      
      40.  00:8504                      ;;=====================================================
      41.  00:8504                      ;;NUESTRA_ISR
      42.  00:8504                      ;;=====================================================	
      43.  00:8504                      ; función: 	envía datos al PSG + toca un trozo de música + toca trozo de 
      44.  00:8504                      ; entrada: 	-
      45.  00:8504                      ; salida: 	-
      46.  00:8504                      ; toca: 	HL, A
      47.  00:8504                      subrutina_isr:
      48.  00:8504  CD 6F 8A            	CALL	PT3_ROUT			;envia los datos a los registros del PSG
      49.  00:8507  CD 77 89            	CALL	PT3_PLAY			;calcula el siguiente 'trocito' de musica que sera enviado al proxima vez
      50.  00:850A  C3 61 8B            	JP		ayFX_PLAY			;calcula el siguiente 'trocito' de efecto especial de sonido que sera enviado la proxima vez
      51.  00:850D                      fin_subrutina_isr:
      52.  00:850D                      	;RET
      53.  00:850D                      
      54.  00:850D                      
      55.  00:850D                      
      56.  00:850D                      ;;=====================================================
      57.  00:850D                      ;;DEFINICIÓN DE SUBRUTINAS DE FERNANDO PARA COMPRESIÓN Y SONIDO
      58.  00:850D                      ;;=====================================================
      59.  00:850D                      subrutinas_sonido:
      60.  00:850D                      	include	"PT3-ROM_sjasm.asm"
       1:  00:850D                      		; --- PT3 REPLAYER WORKING ON ROM ---
       2:  00:850D                      		; --- Can be assembled with asMSX ---
       3:  00:850D                      		; --- ROM version: MSX-KUN        ---
       4:  00:850D                      		; --- asMSX version 2: SapphiRe   ---
       5:  00:850D                      
       6:  00:850D                      ; Based on MSX full version of PT3 by Dioniso
       7:  00:850D                      ;
       8:  00:850D                      ; This version of the replayer can be used with any note table
       9:  00:850D                      ; This version also allows the use of PT3 commands
      10:  00:850D                      ; First 99 bytes of each PT3 module should be stripped off
      11:  00:850D                      ;
      12:  00:850D                      ; PLAY and PSG WRITE routines seperated to allow independent calls
      13:  00:850D                      ;
      14:  00:850D                      ; ROM LENGTH: 1549 bytes
      15:  00:850D                      ; RAM LENGTH:  576 bytes
      16:  00:850D                      
      17:  00:850D                      
      18:  00:850D                      
      19:  00:850D                      ;SJASM version by BTV 2016
      20:  00:850D                      
      21:  00:850D                      
      22:  00:850D                      		; --- CONSTANT VALUES DEFINITION ---
      23:  00:850D                      
      24:  00:850D                      ;ChannelsVars
      25:  00:850D                      ;struc	CHNPRM
      26:  00:850D                      ;reset group
      27:  00:850D  (00:0000)           CHNPRM_PsInOr	equ 0	;RESB 1
      28:  00:850D  (00:0001)           CHNPRM_PsInSm	equ 1	;RESB 1
      29:  00:850D  (00:0002)           CHNPRM_CrAmSl	equ 2	;RESB 1
      30:  00:850D  (00:0003)           CHNPRM_CrNsSl	equ 3	;RESB 1
      31:  00:850D  (00:0004)           CHNPRM_CrEnSl	equ 4	;RESB 1
      32:  00:850D  (00:0005)           CHNPRM_TSlCnt	equ 5	;RESB 1
      33:  00:850D  (00:0006)           CHNPRM_CrTnSl	equ 6	;RESW 1
      34:  00:850D  (00:0008)           CHNPRM_TnAcc	equ 8	;RESW 1
      35:  00:850D  (00:000A)           CHNPRM_COnOff	equ 10	;RESB 1
      36:  00:850D                      ;reset group
      37:  00:850D                      
      38:  00:850D  (00:000B)           CHNPRM_OnOffD	equ 11	;RESB 1
      39:  00:850D                      
      40:  00:850D                      ;IX for PTDECOD here [+12]
      41:  00:850D  (00:000C)           CHNPRM_OffOnD	equ 12	;RESB 1
      42:  00:850D  (00:000D)           CHNPRM_OrnPtr	equ 13	;RESW 1
      43:  00:850D  (00:000F)           CHNPRM_SamPtr	equ 15	;RESW 1
      44:  00:850D  (00:0011)           CHNPRM_NNtSkp	equ 17	;RESB 1
      45:  00:850D  (00:0012)           CHNPRM_Note	equ 18	;RESB 1
      46:  00:850D  (00:0013)           CHNPRM_SlToNt	equ 19	;RESB 1
      47:  00:850D  (00:0014)           CHNPRM_Env_En	equ 20	;RESB 1
      48:  00:850D  (00:0015)           CHNPRM_Flags	equ 21	;RESB 1
      49:  00:850D                       ;Enabled - 0,SimpleGliss - 2
      50:  00:850D  (00:0016)           CHNPRM_TnSlDl	equ 22	;RESB 1
      51:  00:850D  (00:0017)           CHNPRM_TSlStp	equ 23	;RESW 1
      52:  00:850D  (00:0019)           CHNPRM_TnDelt	equ 25	;RESW 1
      53:  00:850D  (00:001B)           CHNPRM_NtSkCn	equ 27	;RESB 1
      54:  00:850D  (00:001C)           CHNPRM_Volume	equ 28	;RESB 1
      55:  00:850D  (00:001D)           CHNPRM_Size	equ 29	;RESB 1
      56:  00:850D                      ;endstruc
      57:  00:850D                      
      58:  00:850D                      ;struc	AR
      59:  00:850D  (00:0000)           AR_TonA		equ 0	;RESW 1
      60:  00:850D  (00:0002)           AR_TonB		equ 2	;RESW 1
      61:  00:850D  (00:0004)           AR_TonC		equ 4	;RESW 1
      62:  00:850D  (00:0006)           AR_Noise	equ 6	;RESB 1
      63:  00:850D  (00:0007)           AR_Mixer	equ 7	;RESB 1
      64:  00:850D  (00:0008)           AR_AmplA	equ 8	;RESB 1
      65:  00:850D  (00:0009)           AR_AmplB	equ 9	;RESB 1
      66:  00:850D  (00:000A)           AR_AmplC	equ 10	;RESB 1
      67:  00:850D  (00:000B)           AR_Env		equ 11	;RESW 1
      68:  00:850D  (00:000D)           AR_EnvTp	equ 13	;RESB 1
      69:  00:850D                      ;endstruc
      70:  00:850D                      
      71:  00:850D                      		; --- CODE STARTS HERE ---
      72:  00:850D                      
      73:  00:850D  21 00 F0            CHECKLP:	LD	HL,PT3_SETUP
      74:  00:8510  CB FE               		SET	7,[HL]
      75:  00:8512  CB 46               		BIT	0,[HL]
      76:  00:8514  C8                  		RET	Z
      77:  00:8515  E1                  		POP	HL
      78:  00:8516  21 7A F0            		LD	HL,DelyCnt
      79:  00:8519  34                  		INC	[HL]
      80:  00:851A  21 3E F0            		LD	HL,ChanA+CHNPRM_NtSkCn
      81:  00:851D  34                  		INC	[HL]
      82:  00:851E  AF                  PT3_MUTE:	XOR	A
      83:  00:851F  67                  		LD	H,A
      84:  00:8520  6F                  		LD	L,A
      85:  00:8521  32 48 F1            		LD	[AYREGS+AR_AmplA],A
      86:  00:8524  22 49 F1            		LD	[AYREGS+AR_AmplB],HL
      87:  00:8527  C3 70 8A            		JP	ROUT_A0
      88:  00:852A                      
      89:  00:852A                      PT3_INIT:	;HL - AddressOfModule - 100
      90:  00:852A  22 01 F0            		LD [PT3_MODADDR],HL
      91:  00:852D  E5                  		PUSH HL
      92:  00:852E  11 64 00            		LD DE,100
      93:  00:8531  19                  		ADD HL,DE
      94:  00:8532  7E                  		LD A,[HL]
      95:  00:8533  32 1C F0            		LD [PT3_Delay],A
      96:  00:8536  E5                  		PUSH HL
      97:  00:8537  DD E1               		POP IX
      98:  00:8539  19                  		ADD HL,DE
      99:  00:853A  22 03 F0            		LD [PT3_CrPsPtr],HL
     100:  00:853D  DD 5E 02            		LD E,[IX+102-100]
     101:  00:8540  19                  		ADD HL,DE
     102:  00:8541  23                  		INC HL
     103:  00:8542  22 18 F0            		LD [PT3_LPosPtr],HL
     104:  00:8545  D1                  		POP DE
     105:  00:8546  DD 6E 03            		LD L,[IX+103-100]
     106:  00:8549  DD 66 04            		LD H,[IX+104-100]
     107:  00:854C  19                  		ADD HL,DE
     108:  00:854D  22 1A F0            		LD [PT3_PatsPtr],HL
     109:  00:8550  21 A9 00            		LD HL,169
     110:  00:8553  19                  		ADD HL,DE
     111:  00:8554  22 07 F0            		LD [PT3_OrnPtrs],HL
     112:  00:8557  21 69 00            		LD HL,105
     113:  00:855A  19                  		ADD HL,DE
     114:  00:855B  22 05 F0            		LD [PT3_SAMPTRS],HL
     115:  00:855E  21 00 F0            		LD HL,PT3_SETUP
     116:  00:8561  CB BE               		RES 7,[HL]
     117:  00:8563                      
     118:  00:8563                      		; --- note table data depacker ---
     119:  00:8563                      		; Depacks first 12 tones of each tone table
     120:  00:8563                      
     121:  00:8563  11 E4 8A            		LD DE,T_PACK
     122:  00:8566  01 B1 F1            		LD BC,T1_+(2*49)-1
     123:  00:8569  1A                  .TP_0:		LD A,[DE]
     124:  00:856A  13                  		INC DE
     125:  00:856B  FE 1E               		CP 15*2
     126:  00:856D  30 06               		JR NC,.TP_1
     127:  00:856F  67                  		LD H,A
     128:  00:8570  1A                  		LD A,[DE]
     129:  00:8571  6F                  		LD L,A
     130:  00:8572  13                  		INC DE
     131:  00:8573  18 07               		JR .TP_2
     132:  00:8575  D5                  .TP_1:		PUSH DE
     133:  00:8576  16 00               		LD D,0
     134:  00:8578  5F                  		LD E,A
     135:  00:8579  19                  		ADD HL,DE
     136:  00:857A  19                  		ADD HL,DE
     137:  00:857B  D1                  		POP DE
     138:  00:857C  7C                  .TP_2:		LD A,H
     139:  00:857D  02                  		LD [BC],A
     140:  00:857E  0B                  		DEC BC
     141:  00:857F  7D                  		LD A,L
     142:  00:8580  02                  		LD [BC],A
     143:  00:8581  0B                  		DEC BC
     144:  00:8582  D6 F0               		SUB $F0
     145:  00:8584  20 E3               		JR NZ,.TP_0
     146:  00:8586                      
     147:  00:8586                      		; --- INITIALIZE PT3 VARIABLES ---
     148:  00:8586  21 23 F0            		LD HL,VARS
     149:  00:8589  77                  		LD [HL],A
     150:  00:858A  11 24 F0            		LD DE,VARS+1
     151:  00:858D  01 2C 01            		LD BC,VAR0END-VARS-1
     152:  00:8590  ED B0               		LDIR
     153:  00:8592                      
     154:  00:8592  3C                  		INC A
     155:  00:8593  32 7A F0            		LD [DelyCnt],A
     156:  00:8596  21 01 F0            		LD HL,$F001 ;H - CHNPRM_Volume, L - CHNPRM_NtSkCn
     157:  00:8599  22 3E F0            		LD [ChanA+CHNPRM_NtSkCn],HL
     158:  00:859C  22 5B F0            		LD [ChanB+CHNPRM_NtSkCn],HL
     159:  00:859F  22 78 F0            		LD [ChanC+CHNPRM_NtSkCn],HL
     160:  00:85A2                      
     161:  00:85A2  21 E0 8A            		LD HL,EMPTYSAMORN
     162:  00:85A5  22 12 F0            		LD [PT3_AdInPtA],HL ;ptr to zero
     163:  00:85A8  22 30 F0            		LD [ChanA+CHNPRM_OrnPtr],HL ;ornament 0 is "0,1,0"
     164:  00:85AB  22 4D F0            		LD [ChanB+CHNPRM_OrnPtr],HL ;in all versions from
     165:  00:85AE  22 6A F0            		LD [ChanC+CHNPRM_OrnPtr],HL ;3.xx to 3.6x and VTII
     166:  00:85B1                      
     167:  00:85B1  22 32 F0            		LD [ChanA+CHNPRM_SamPtr],HL ;S1 There is no default
     168:  00:85B4  22 4F F0            		LD [ChanB+CHNPRM_SamPtr],HL ;S2 sample in PT3, so, you
     169:  00:85B7  22 6C F0            		LD [ChanC+CHNPRM_SamPtr],HL ;S3 can comment S1,2,3; see
     170:  00:85BA                      					    ;also EMPTYSAMORN comment
     171:  00:85BA                      
     172:  00:85BA                      		; --- NOTE TABLE CREATOR (c) Ivan Roshin, adapted by SapphiRe ---
     173:  00:85BA  DD 7E FF            		LD A,[IX+99-100] ;TONE TABLE NUMBER
     174:  00:85BD  17                  		RLA
     175:  00:85BE  E6 07               		AND 7
     176:  00:85C0  21 90 8A            		LD HL,NT_DATA
     177:  00:85C3  D5                  		PUSH DE
     178:  00:85C4  50                  		LD D,B		; ld d,0 (bc is 0000 after LDIR)
     179:  00:85C5  87                  		ADD A,A
     180:  00:85C6  5F                  		LD E,A
     181:  00:85C7  19                  		ADD HL,DE	; hl -> init of correct note table data
     182:  00:85C8  5E                  		LD E,[HL]
     183:  00:85C9  23                  		INC HL
     184:  00:85CA  CB 3B               		SRL E
     185:  00:85CC  9F                  		SBC A,A
     186:  00:85CD  E6 A7               		AND $A7			;$00 (NOP) or $A7 (AND A)
     187:  00:85CF  32 21 F0            		LD [PT3_NTL3],A		; CORRECT INSTRUCTION, DEPENDS OF SELECTED TABLE
     188:  00:85D2  3E C9               		LD A,$C9		; RET CODE
     189:  00:85D4  32 22 F0            		LD [PT3_NTL3+1],A	; RET PLACED
     190:  00:85D7  EB                  		EX DE,HL
     191:  00:85D8  C1                  		POP BC ;BC=T1_
     192:  00:85D9  09                  		ADD HL,BC
     193:  00:85DA                      
     194:  00:85DA  1A                  		LD A,[DE]                           
     195:  00:85DB                      
     196:  00:85DB  01 A0 8A            		LD BC,T_
     197:  00:85DE  81                  		ADD A,C
     198:  00:85DF  4F                  		LD C,A
     199:  00:85E0  88                  		ADC A,B
     200:  00:85E1                      
     201:  00:85E1  91                  		SUB C
     202:  00:85E2  47                  		LD B,A
     203:  00:85E3  C5                  		PUSH BC
     204:  00:85E4  11 80 F0            		LD DE,NT_
     205:  00:85E7  D5                  		PUSH DE
     206:  00:85E8                      
     207:  00:85E8  06 0C               		LD B,12
     208:  00:85EA  C5                  .L1:		PUSH BC
     209:  00:85EB  4E                  		LD C,[HL]
     210:  00:85EC  23                  		INC HL
     211:  00:85ED  E5                  		PUSH HL
     212:  00:85EE  46                  		LD B,[HL]
     213:  00:85EF                      
     214:  00:85EF  D5                  		PUSH DE
     215:  00:85F0  EB                  		EX DE,HL
     216:  00:85F1  11 17 00            		LD DE,23
     217:  00:85F4  DD 26 08            		db $DD,$26,$08	;LD XH,8
     218:  00:85F7                      
     219:  00:85F7  CB 38               .L2:		SRL B
     220:  00:85F9  CB 19               		RR C
     221:  00:85FB  CD 21 F0            .L3:		CALL PT3_NTL3	;AND A or NOP
     222:  00:85FE  79                  		LD A,C
     223:  00:85FF  8A                  		ADC A,D	;=ADC 0
     224:  00:8600  77                  		LD [HL],A
     225:  00:8601  23                  		INC HL
     226:  00:8602  78                  		LD A,B
     227:  00:8603  8A                  		ADC A,D
     228:  00:8604  77                  		LD [HL],A
     229:  00:8605  19                  		ADD HL,DE
     230:  00:8606  DD 25               		db $DD,$25	;DEC XH
     231:  00:8608  20 ED               		JR NZ,.L2
     232:  00:860A                      
     233:  00:860A  D1                  		POP DE
     234:  00:860B  13                  		INC DE
     235:  00:860C  13                  		INC DE
     236:  00:860D  E1                  		POP HL
     237:  00:860E  23                  		INC HL
     238:  00:860F  C1                  		POP BC
     239:  00:8610  10 D8               		DJNZ .L1
     240:  00:8612                      
     241:  00:8612  E1                  		POP HL
     242:  00:8613  D1                  		POP DE
     243:  00:8614                      
     244:  00:8614  7B                  		LD A,E
     245:  00:8615  D5                  		PUSH DE
     246:  00:8616  11 AC 8A            		LD DE,TCOLD_1
     247:  00:8619  BB                  		CP E
     248:  00:861A  D1                  		POP DE
     249:  00:861B  20 05               		JR NZ,.CORR_1
     250:  00:861D  3E FD               		LD A,$FD
     251:  00:861F  32 AE F0            		LD [NT_+$2E],A
     252:  00:8622                      
     253:  00:8622  1A                  .CORR_1:	LD A,[DE]
     254:  00:8623  A7                  		AND A
     255:  00:8624  28 11               		JR Z,.TC_EXIT
     256:  00:8626  1F                  		RRA
     257:  00:8627  F5                  		PUSH AF
     258:  00:8628  87                  		ADD A,A
     259:  00:8629  4F                  		LD C,A
     260:  00:862A  09                  		ADD HL,BC
     261:  00:862B  F1                  		POP AF
     262:  00:862C  30 02               		JR NC,.CORR_2
     263:  00:862E  35                  		DEC [HL]
     264:  00:862F  35                  		DEC [HL]
     265:  00:8630  34                  .CORR_2:	INC [HL]
     266:  00:8631  A7                  		AND A
     267:  00:8632  ED 42               		SBC HL,BC
     268:  00:8634  13                  		INC DE
     269:  00:8635  18 EB               		JR .CORR_1
     270:  00:8637                      
     271:  00:8637                      .TC_EXIT:	;POP AF
     272:  00:8637                      
     273:  00:8637                      		; --- CREATE PT3 VOLUME TABLE (c) Ivan Roshin, adapted by SapphiRe ---
     274:  00:8637  21 11 00            		ld	hl,$11
     275:  00:863A  54                  		ld	d,h
     276:  00:863B  5C                  		ld	e,h
     277:  00:863C  DD 21 50 F1         		ld	IX,VT_+16
     278:  00:8640  06 0F               		ld	b,15
     279:  00:8642  E5                  .INITV1:	push	hl
     280:  00:8643  19                  		add	hl,de
     281:  00:8644  EB                  		ex	de,hl
     282:  00:8645  ED 62               		sbc	hl,hl
     283:  00:8647  48                  		ld	c,b
     284:  00:8648  06 10               		ld	b,16
     285:  00:864A  7D                  .INITV2:	ld	a,l
     286:  00:864B  17                  		rla
     287:  00:864C  7C                  		ld	a,h
     288:  00:864D  CE 00               		adc	a,0
     289:  00:864F  DD 77 00            		ld	[ix],a
     290:  00:8652  DD 23               		inc	ix
     291:  00:8654  19                  		add	hl,de
     292:  00:8655  10 F3               		djnz	.INITV2
     293:  00:8657  E1                  		pop	hl
     294:  00:8658  7B                  		ld	a,e
     295:  00:8659  FE 77               		cp	$77
     296:  00:865B  20 01               		jr	nz,.INITV3
     297:  00:865D  1C                  		inc	e
     298:  00:865E  41                  .INITV3:	ld	b,c
     299:  00:865F  10 E1               		djnz	.INITV1
     300:  00:8661                      
     301:  00:8661  C9                  		RET
     302:  00:8662                      
     303:  00:8662                      		;pattern decoder
     304:  00:8662  DD 36 08 00         PD_OrSm:	LD [IX+(CHNPRM_Env_En-12)],0
     305:  00:8666  CD EC 87            		CALL SETORN
     306:  00:8669  0A                  		LD A,[BC]
     307:  00:866A  03                  		INC BC
     308:  00:866B  0F                  		RRCA
     309:  00:866C                      
     310:  00:866C  87                  PD_SAM:		ADD A,A
     311:  00:866D  5F                  PD_SAM_:	LD E,A
     312:  00:866E  16 00               		LD D,0
     313:  00:8670  2A 05 F0            		LD HL,[PT3_SAMPTRS]
     314:  00:8673  19                  		ADD HL,DE
     315:  00:8674  5E                  		LD E,[HL]
     316:  00:8675  23                  		INC HL
     317:  00:8676  56                  		LD D,[HL]
     318:  00:8677  2A 01 F0            		LD HL,[PT3_MODADDR]
     319:  00:867A  19                  		ADD HL,DE
     320:  00:867B  DD 75 03            		LD [IX+(CHNPRM_SamPtr-12)],L
     321:  00:867E  DD 74 04            		LD [IX+(CHNPRM_SamPtr+1-12)],H
     322:  00:8681  18 41               		JR PD_LOOP
     323:  00:8683                      
     324:  00:8683  07                  PD_VOL:		RLCA
     325:  00:8684  07                  		RLCA
     326:  00:8685  07                  		RLCA
     327:  00:8686  07                  		RLCA
     328:  00:8687  DD 77 10            		LD [IX+(CHNPRM_Volume-12)],A
     329:  00:868A  18 3B               		JR PD_LP2
     330:  00:868C                      	
     331:  00:868C  DD 77 08            PD_EOff:	LD [IX+(CHNPRM_Env_En-12)],A
     332:  00:868F  DD 77 F4            		LD [IX+(CHNPRM_PsInOr-12)],A
     333:  00:8692  18 33               		JR PD_LP2
     334:  00:8694                      
     335:  00:8694  3D                  PD_SorE:	DEC A
     336:  00:8695  20 07               		JR NZ,PD_ENV
     337:  00:8697  0A                  		LD A,[BC]
     338:  00:8698  03                  		INC BC
     339:  00:8699  DD 77 05            		LD [IX+(CHNPRM_NNtSkp-12)],A
     340:  00:869C  18 29               		JR PD_LP2
     341:  00:869E                      
     342:  00:869E  CD D0 87            PD_ENV:		CALL SETENV
     343:  00:86A1  18 24               		JR PD_LP2
     344:  00:86A3                      
     345:  00:86A3  CD EC 87            PD_ORN:		CALL SETORN
     346:  00:86A6  18 1C               		JR PD_LOOP
     347:  00:86A8                             
     348:  00:86A8  DD 77 08            PD_ESAM:	LD [IX+(CHNPRM_Env_En-12)],A
     349:  00:86AB  DD 77 F4            		LD [IX+(CHNPRM_PsInOr-12)],A
     350:  00:86AE  C4 D0 87            		CALL NZ,SETENV
     351:  00:86B1  0A                  		LD A,[BC]
     352:  00:86B2  03                  		INC BC
     353:  00:86B3  18 B8               		JR PD_SAM_
     354:  00:86B5                      
     355:  00:86B5  DD 7E 06            PTDECOD:	LD A,[IX+(CHNPRM_Note-12)]
     356:  00:86B8  32 0F F0            		LD [PT3_PrNote],A
     357:  00:86BB  DD 6E FA            		LD L,[IX+(CHNPRM_CrTnSl-12)]
     358:  00:86BE  DD 66 FB            		LD H,[IX+(CHNPRM_CrTnSl+1-12)]
     359:  00:86C1  22 10 F0            		LD [PT3_PrSlide],HL
     360:  00:86C4                      
     361:  00:86C4  11 10 20            PD_LOOP:	LD DE,$2010
     362:  00:86C7  0A                  PD_LP2:		LD A,[BC]
     363:  00:86C8  03                  		INC BC
     364:  00:86C9  83                  		ADD A,E
     365:  00:86CA  38 96               		JR C,PD_OrSm
     366:  00:86CC  82                  		ADD A,D
     367:  00:86CD  28 4A               		JR Z,PD_FIN
     368:  00:86CF  38 9B               		JR C,PD_SAM
     369:  00:86D1  83                  		ADD A,E
     370:  00:86D2  28 25               		JR Z,PD_REL
     371:  00:86D4  38 AD               		JR C,PD_VOL
     372:  00:86D6  83                  		ADD A,E
     373:  00:86D7  28 B3               		JR Z,PD_EOff
     374:  00:86D9  38 B9               		JR C,PD_SorE
     375:  00:86DB  C6 60               		ADD A,96
     376:  00:86DD  38 20               		JR C,PD_NOTE
     377:  00:86DF  83                  		ADD A,E
     378:  00:86E0  38 C1               		JR C,PD_ORN
     379:  00:86E2  82                  		ADD A,D
     380:  00:86E3  38 0F               		JR C,PD_NOIS
     381:  00:86E5  83                  		ADD A,E
     382:  00:86E6  38 C0               		JR C,PD_ESAM
     383:  00:86E8  87                  		ADD A,A
     384:  00:86E9  5F                  		LD E,A
     385:  00:86EA  21 25 67            		LD HL,(SPCCOMS+$DF20) % 65536	; Adapted from original Speccy version (saves 6 bytes)
     386:  00:86ED  19                  		ADD HL,DE
     387:  00:86EE  5E                  		LD E,[HL]
     388:  00:86EF  23                  		INC HL
     389:  00:86F0  56                  		LD D,[HL]
     390:  00:86F1  D5                  		PUSH DE
     391:  00:86F2  18 D0               		JR PD_LOOP
     392:  00:86F4                      
     393:  00:86F4  32 7E F0            PD_NOIS:	LD [Ns_Base],A
     394:  00:86F7  18 CE               		JR PD_LP2
     395:  00:86F9                      
     396:  00:86F9  DD CB 09 86         PD_REL:		RES 0,[IX+(CHNPRM_Flags-12)]
     397:  00:86FD  18 08               		JR PD_RES
     398:  00:86FF                      	
     399:  00:86FF  DD 77 06            PD_NOTE:	LD [IX+(CHNPRM_Note-12)],A
     400:  00:8702  DD CB 09 C6         		SET 0,[IX+(CHNPRM_Flags-12)]
     401:  00:8706  AF                  		XOR A
     402:  00:8707                      
     403:  00:8707  ED 73 09 F0         PD_RES:		LD [PT3_PDSP],SP
     404:  00:870B  DD F9               		LD SP,IX
     405:  00:870D  67                  		LD H,A
     406:  00:870E  6F                  		LD L,A
     407:  00:870F  E5                  		PUSH HL
     408:  00:8710  E5                  		PUSH HL
     409:  00:8711  E5                  		PUSH HL
     410:  00:8712  E5                  		PUSH HL
     411:  00:8713  E5                  		PUSH HL
     412:  00:8714  E5                  		PUSH HL
     413:  00:8715  ED 7B 09 F0         		LD SP,[PT3_PDSP]
     414:  00:8719                      
     415:  00:8719  DD 7E 05            PD_FIN:		LD A,[IX+(CHNPRM_NNtSkp-12)]
     416:  00:871C  DD 77 0F            		LD [IX+(CHNPRM_NtSkCn-12)],A
     417:  00:871F  C9                  		RET
     418:  00:8720                      
     419:  00:8720  DD CB 09 96         C_PORTM:	RES 2,[IX+(CHNPRM_Flags-12)]
     420:  00:8724  0A                  		LD A,[BC]
     421:  00:8725  03                  		INC BC
     422:  00:8726                      		;SKIP PRECALCULATED TONE DELTA [BECAUSE
     423:  00:8726                      		;CANNOT BE RIGHT AFTER PT3 COMPILATION]
     424:  00:8726  03                  		INC BC
     425:  00:8727  03                  		INC BC
     426:  00:8728  DD 77 0A            		LD [IX+(CHNPRM_TnSlDl-12)],A
     427:  00:872B  DD 77 F9            		LD [IX+(CHNPRM_TSlCnt-12)],A
     428:  00:872E  11 80 F0            		LD DE,NT_
     429:  00:8731  DD 7E 06            		LD A,[IX+(CHNPRM_Note-12)]
     430:  00:8734  DD 77 07            		LD [IX+(CHNPRM_SlToNt-12)],A
     431:  00:8737  87                  		ADD A,A
     432:  00:8738  6F                  		LD L,A
     433:  00:8739  26 00               		LD H,0
     434:  00:873B  19                  		ADD HL,DE
     435:  00:873C  7E                  		LD A,[HL]
     436:  00:873D  23                  		INC HL
     437:  00:873E  66                  		LD H,[HL]
     438:  00:873F  6F                  		LD L,A
     439:  00:8740  E5                  		PUSH HL
     440:  00:8741  3A 0F F0            		LD A,[PT3_PrNote]
     441:  00:8744  DD 77 06            		LD [IX+(CHNPRM_Note-12)],A
     442:  00:8747  87                  		ADD A,A
     443:  00:8748  6F                  		LD L,A
     444:  00:8749  26 00               		LD H,0
     445:  00:874B  19                  		ADD HL,DE
     446:  00:874C  5E                  		LD E,[HL]
     447:  00:874D  23                  		INC HL
     448:  00:874E  56                  		LD D,[HL]
     449:  00:874F  E1                  		POP HL
     450:  00:8750  ED 52               		SBC HL,DE
     451:  00:8752  DD 75 0D            		LD [IX+(CHNPRM_TnDelt-12)],L
     452:  00:8755  DD 74 0E            		LD [IX+(CHNPRM_TnDelt+1-12)],H
     453:  00:8758  ED 5B 10 F0         		LD DE,[PT3_PrSlide]
     454:  00:875C  DD 73 FA            		LD [IX+(CHNPRM_CrTnSl-12)],E
     455:  00:875F  DD 72 FB            		LD [IX+(CHNPRM_CrTnSl+1-12)],D
     456:  00:8762  0A                  		LD A,[BC] ;SIGNED TONE STEP
     457:  00:8763  03                  		INC BC
     458:  00:8764  08                  		EX AF,AF'
     459:  00:8765  0A                  		LD A,[BC]
     460:  00:8766  03                  		INC BC
     461:  00:8767  A7                  		AND A
     462:  00:8768  28 01               		JR Z,.NOSIG
     463:  00:876A  EB                  		EX DE,HL
     464:  00:876B  ED 52               .NOSIG:	SBC HL,DE
     465:  00:876D  F2 75 87            		JP P,SET_STP
     466:  00:8770  2F                  		CPL
     467:  00:8771  08                  		EX AF,AF'
     468:  00:8772  ED 44               		NEG
     469:  00:8774  08                  		EX AF,AF'
     470:  00:8775  DD 77 0C            SET_STP:	LD [IX+(CHNPRM_TSlStp+1-12)],A
     471:  00:8778  08                  		EX AF,AF'
     472:  00:8779  DD 77 0B            		LD [IX+(CHNPRM_TSlStp-12)],A
     473:  00:877C  DD 36 FE 00         		LD [IX+(CHNPRM_COnOff-12)],0
     474:  00:8780  C9                  		RET
     475:  00:8781                      
     476:  00:8781  DD CB 09 D6         C_GLISS:	SET 2,[IX+(CHNPRM_Flags-12)]
     477:  00:8785  0A                  		LD A,[BC]
     478:  00:8786  03                  		INC BC
     479:  00:8787  DD 77 0A            		LD [IX+(CHNPRM_TnSlDl-12)],A
     480:  00:878A  DD 77 F9            		LD [IX+(CHNPRM_TSlCnt-12)],A
     481:  00:878D  0A                  		LD A,[BC]
     482:  00:878E  03                  		INC BC
     483:  00:878F  08                  		EX AF,AF'
     484:  00:8790  0A                  		LD A,[BC]
     485:  00:8791  03                  		INC BC
     486:  00:8792  18 E1               		JR SET_STP
     487:  00:8794                      
     488:  00:8794  0A                  C_SMPOS:	LD A,[BC]
     489:  00:8795  03                  		INC BC
     490:  00:8796  DD 77 F5            		LD [IX+(CHNPRM_PsInSm-12)],A
     491:  00:8799  C9                  		RET
     492:  00:879A                      
     493:  00:879A  0A                  C_ORPOS:	LD A,[BC]
     494:  00:879B  03                  		INC BC
     495:  00:879C  DD 77 F4            		LD [IX+(CHNPRM_PsInOr-12)],A
     496:  00:879F  C9                  		RET
     497:  00:87A0                      
     498:  00:87A0  0A                  C_VIBRT:	LD A,[BC]
     499:  00:87A1  03                  		INC BC
     500:  00:87A2  DD 77 FF            		LD [IX+(CHNPRM_OnOffD-12)],A
     501:  00:87A5  DD 77 FE            		LD [IX+(CHNPRM_COnOff-12)],A
     502:  00:87A8  0A                  		LD A,[BC]
     503:  00:87A9  03                  		INC BC
     504:  00:87AA  DD 77 00            		LD [IX+(CHNPRM_OffOnD-12)],A
     505:  00:87AD  AF                  		XOR A
     506:  00:87AE  DD 77 F9            		LD [IX+(CHNPRM_TSlCnt-12)],A
     507:  00:87B1  DD 77 FA            		LD [IX+(CHNPRM_CrTnSl-12)],A
     508:  00:87B4  DD 77 FB            		LD [IX+(CHNPRM_CrTnSl+1-12)],A
     509:  00:87B7  C9                  		RET
     510:  00:87B8                      
     511:  00:87B8  0A                  C_ENGLS:	LD A,[BC]
     512:  00:87B9  03                  		INC BC
     513:  00:87BA  32 1E F0            		LD [PT3_Env_Del],A
     514:  00:87BD  32 7D F0            		LD [CurEDel],A
     515:  00:87C0  0A                  		LD A,[BC]
     516:  00:87C1  03                  		INC BC
     517:  00:87C2  6F                  		LD L,A
     518:  00:87C3  0A                  		LD A,[BC]
     519:  00:87C4  03                  		INC BC
     520:  00:87C5  67                  		LD H,A
     521:  00:87C6  22 1F F0            		LD [PT3_ESldAdd],HL
     522:  00:87C9  C9                  		RET
     523:  00:87CA                      
     524:  00:87CA  0A                  C_DELAY:	LD A,[BC]
     525:  00:87CB  03                  		INC BC
     526:  00:87CC  32 1C F0            		LD [PT3_Delay],A
     527:  00:87CF  C9                  		RET
     528:  00:87D0                      	
     529:  00:87D0  DD 73 08            SETENV:		LD [IX+(CHNPRM_Env_En-12)],E
     530:  00:87D3  32 4D F1            		LD [AYREGS+AR_EnvTp],A
     531:  00:87D6  0A                  		LD A,[BC]
     532:  00:87D7  03                  		INC BC
     533:  00:87D8  67                  		LD H,A
     534:  00:87D9  0A                  		LD A,[BC]
     535:  00:87DA  03                  		INC BC
     536:  00:87DB  6F                  		LD L,A
     537:  00:87DC  22 4E F1            		LD [EnvBase],HL
     538:  00:87DF  AF                  		XOR A
     539:  00:87E0  DD 77 F4            		LD [IX+(CHNPRM_PsInOr-12)],A
     540:  00:87E3  32 7D F0            		LD [CurEDel],A
     541:  00:87E6  67                  		LD H,A
     542:  00:87E7  6F                  		LD L,A
     543:  00:87E8  22 7B F0            		LD [CurESld],HL
     544:  00:87EB  C9                  C_NOP:		RET
     545:  00:87EC                      
     546:  00:87EC  87                  SETORN:		ADD A,A
     547:  00:87ED  5F                  		LD E,A
     548:  00:87EE  16 00               		LD D,0
     549:  00:87F0  DD 72 F4            		LD [IX+(CHNPRM_PsInOr-12)],D
     550:  00:87F3  2A 07 F0            		LD HL,[PT3_OrnPtrs]
     551:  00:87F6  19                  		ADD HL,DE
     552:  00:87F7  5E                  		LD E,[HL]
     553:  00:87F8  23                  		INC HL
     554:  00:87F9  56                  		LD D,[HL]
     555:  00:87FA  2A 01 F0            		LD HL,[PT3_MODADDR]
     556:  00:87FD  19                  		ADD HL,DE
     557:  00:87FE  DD 75 01            		LD [IX+(CHNPRM_OrnPtr-12)],L
     558:  00:8801  DD 74 02            		LD [IX+(CHNPRM_OrnPtr+1-12)],H
     559:  00:8804  C9                  		RET
     560:  00:8805                      
     561:  00:8805                      		;ALL 16 ADDRESSES TO PROTECT FROM BROKEN PT3 MODULES
     562:  00:8805  EB 87               SPCCOMS:	dw C_NOP
     563:  00:8807  81 87               		dw C_GLISS
     564:  00:8809  20 87               		dw C_PORTM
     565:  00:880B  94 87               		dw C_SMPOS
     566:  00:880D  9A 87               		dw C_ORPOS
     567:  00:880F  A0 87               		dw C_VIBRT
     568:  00:8811  EB 87               		dw C_NOP
     569:  00:8813  EB 87               		dw C_NOP
     570:  00:8815  B8 87               		dw C_ENGLS
     571:  00:8817  CA 87               		dw C_DELAY
     572:  00:8819  EB 87               		dw C_NOP
     573:  00:881B  EB 87               		dw C_NOP
     574:  00:881D  EB 87               		dw C_NOP
     575:  00:881F  EB 87               		dw C_NOP
     576:  00:8821  EB 87               		dw C_NOP
     577:  00:8823  EB 87               		dw C_NOP
     578:  00:8825                      
     579:  00:8825  AF                  CHREGS:		XOR A
     580:  00:8826  32 4A F1            		LD [AYREGS+AR_AmplC],A
     581:  00:8829  DD CB 15 46         		BIT 0,[IX+CHNPRM_Flags]
     582:  00:882D  E5                  		PUSH HL
     583:  00:882E  CA 54 89            		JP Z,.CH_EXIT
     584:  00:8831  ED 73 0B F0         		LD [PT3_CSP],SP
     585:  00:8835  DD 6E 0D            		LD L,[IX+CHNPRM_OrnPtr]
     586:  00:8838  DD 66 0E            		LD H,[IX+CHNPRM_OrnPtr+1]
     587:  00:883B  F9                  		LD SP,HL
     588:  00:883C  D1                  		POP DE
     589:  00:883D  67                  		LD H,A
     590:  00:883E  DD 7E 00            		LD A,[IX+CHNPRM_PsInOr]
     591:  00:8841  6F                  		LD L,A
     592:  00:8842  39                  		ADD HL,SP
     593:  00:8843  3C                  		INC A
     594:  00:8844  BA                  		CP D
     595:  00:8845  38 01               		JR C,.CH_ORPS
     596:  00:8847  7B                  		LD A,E
     597:  00:8848  DD 77 00            .CH_ORPS:	LD [IX+CHNPRM_PsInOr],A
     598:  00:884B  DD 7E 12            		LD A,[IX+CHNPRM_Note]
     599:  00:884E  86                  		ADD A,[HL]
     600:  00:884F  F2 53 88            		JP P,.CH_NTP
     601:  00:8852  AF                  		XOR A
     602:  00:8853  FE 60               .CH_NTP:	CP 96
     603:  00:8855  38 02               		JR C,.CH_NOK
     604:  00:8857  3E 5F               		LD A,95
     605:  00:8859  87                  .CH_NOK:	ADD A,A
     606:  00:885A  08                  		EX AF,AF'
     607:  00:885B  DD 6E 0F            		LD L,[IX+CHNPRM_SamPtr]
     608:  00:885E  DD 66 10            		LD H,[IX+CHNPRM_SamPtr+1]
     609:  00:8861  F9                  		LD SP,HL
     610:  00:8862  D1                  		POP DE
     611:  00:8863  26 00               		LD H,0
     612:  00:8865  DD 7E 01            		LD A,[IX+CHNPRM_PsInSm]
     613:  00:8868  47                  		LD B,A
     614:  00:8869  87                  		ADD A,A
     615:  00:886A  87                  		ADD A,A
     616:  00:886B  6F                  		LD L,A
     617:  00:886C  39                  		ADD HL,SP
     618:  00:886D  F9                  		LD SP,HL
     619:  00:886E  78                  		LD A,B
     620:  00:886F  3C                  		INC A
     621:  00:8870  BA                  		CP D
     622:  00:8871  38 01               		JR C,.CH_SMPS
     623:  00:8873  7B                  		LD A,E
     624:  00:8874  DD 77 01            .CH_SMPS:	LD [IX+CHNPRM_PsInSm],A
     625:  00:8877  C1                  		POP BC
     626:  00:8878  E1                  		POP HL
     627:  00:8879  DD 5E 08            		LD E,[IX+CHNPRM_TnAcc]
     628:  00:887C  DD 56 09            		LD D,[IX+CHNPRM_TnAcc+1]
     629:  00:887F  19                  		ADD HL,DE
     630:  00:8880  CB 70               		BIT 6,B
     631:  00:8882  28 06               		JR Z,.CH_NOAC
     632:  00:8884  DD 75 08            		LD [IX+CHNPRM_TnAcc],L
     633:  00:8887  DD 74 09            		LD [IX+CHNPRM_TnAcc+1],H
     634:  00:888A  EB                  .CH_NOAC:	EX DE,HL
     635:  00:888B  08                  		EX AF,AF'
     636:  00:888C  6F                  		LD L,A
     637:  00:888D  26 00               		LD H,0
     638:  00:888F  31 80 F0            		LD SP,NT_
     639:  00:8892  39                  		ADD HL,SP
     640:  00:8893  F9                  		LD SP,HL
     641:  00:8894  E1                  		POP HL
     642:  00:8895  19                  		ADD HL,DE
     643:  00:8896  DD 5E 06            		LD E,[IX+CHNPRM_CrTnSl]
     644:  00:8899  DD 56 07            		LD D,[IX+CHNPRM_CrTnSl+1]
     645:  00:889C  19                  		ADD HL,DE
     646:  00:889D  ED 7B 0B F0         		LD SP,[PT3_CSP]
     647:  00:88A1  E3                  		EX [SP],HL
     648:  00:88A2  AF                  		XOR A
     649:  00:88A3  DD B6 05            		OR [IX+CHNPRM_TSlCnt]
     650:  00:88A6  28 3E               		JR Z,.CH_AMP
     651:  00:88A8  DD 35 05            		DEC [IX+CHNPRM_TSlCnt]
     652:  00:88AB  20 39               		JR NZ,.CH_AMP
     653:  00:88AD  DD 7E 16            		LD A,[IX+CHNPRM_TnSlDl]
     654:  00:88B0  DD 77 05            		LD [IX+CHNPRM_TSlCnt],A
     655:  00:88B3  DD 6E 17            		LD L,[IX+CHNPRM_TSlStp]
     656:  00:88B6  DD 66 18            		LD H,[IX+CHNPRM_TSlStp+1]
     657:  00:88B9  7C                  		LD A,H
     658:  00:88BA  19                  		ADD HL,DE
     659:  00:88BB  DD 75 06            		LD [IX+CHNPRM_CrTnSl],L
     660:  00:88BE  DD 74 07            		LD [IX+CHNPRM_CrTnSl+1],H
     661:  00:88C1  DD CB 15 56         		BIT 2,[IX+CHNPRM_Flags]
     662:  00:88C5  20 1F               		JR NZ,.CH_AMP
     663:  00:88C7  DD 5E 19            		LD E,[IX+CHNPRM_TnDelt]
     664:  00:88CA  DD 56 1A            		LD D,[IX+CHNPRM_TnDelt+1]
     665:  00:88CD  A7                  		AND A
     666:  00:88CE  28 01               		JR Z,.CH_STPP
     667:  00:88D0  EB                  		EX DE,HL
     668:  00:88D1  ED 52               .CH_STPP:	SBC HL,DE
     669:  00:88D3  FA E6 88            		JP M,.CH_AMP
     670:  00:88D6  DD 7E 13            		LD A,[IX+CHNPRM_SlToNt]
     671:  00:88D9  DD 77 12            		LD [IX+CHNPRM_Note],A
     672:  00:88DC  AF                  		XOR A
     673:  00:88DD  DD 77 05            		LD [IX+CHNPRM_TSlCnt],A
     674:  00:88E0  DD 77 06            		LD [IX+CHNPRM_CrTnSl],A
     675:  00:88E3  DD 77 07            		LD [IX+CHNPRM_CrTnSl+1],A
     676:  00:88E6  DD 7E 02            .CH_AMP:	LD A,[IX+CHNPRM_CrAmSl]
     677:  00:88E9  CB 79               		BIT 7,C
     678:  00:88EB  28 13               		JR Z,.CH_NOAM
     679:  00:88ED  CB 71               		BIT 6,C
     680:  00:88EF  28 07               		JR Z,.CH_AMIN
     681:  00:88F1  FE 0F               		CP 15
     682:  00:88F3  28 0B               		JR Z,.CH_NOAM
     683:  00:88F5  3C                  		INC A
     684:  00:88F6  18 05               		JR .CH_SVAM
     685:  00:88F8  FE F1               .CH_AMIN:	CP -15
     686:  00:88FA  28 04               		JR Z,.CH_NOAM
     687:  00:88FC  3D                  		DEC A
     688:  00:88FD  DD 77 02            .CH_SVAM:	LD [IX+CHNPRM_CrAmSl],A
     689:  00:8900  6F                  .CH_NOAM:	LD L,A
     690:  00:8901  78                  		LD A,B
     691:  00:8902  E6 0F               		AND 15
     692:  00:8904  85                  		ADD A,L
     693:  00:8905  F2 09 89            		JP P,.CH_APOS
     694:  00:8908  AF                  		XOR A
     695:  00:8909  FE 10               .CH_APOS:	CP 16
     696:  00:890B  38 02               		JR C,.CH_VOL
     697:  00:890D  3E 0F               		LD A,15
     698:  00:890F  DD B6 1C            .CH_VOL:	OR [IX+CHNPRM_Volume]
     699:  00:8912  6F                  		LD L,A
     700:  00:8913  26 00               		LD H,0
     701:  00:8915  11 40 F1            		LD DE,VT_
     702:  00:8918  19                  		ADD HL,DE
     703:  00:8919  7E                  		LD A,[HL]
     704:  00:891A  CB 41               .CH_ENV:	BIT 0,C
     705:  00:891C  20 03               		JR NZ,.CH_NOEN
     706:  00:891E  DD B6 14            		OR [IX+CHNPRM_Env_En]
     707:  00:8921  32 4A F1            .CH_NOEN:	LD [AYREGS+AR_AmplC],A
     708:  00:8924  CB 78               		BIT 7,B
     709:  00:8926  79                  		LD A,C
     710:  00:8927  28 19               		JR Z,.NO_ENSL
     711:  00:8929  17                  		RLA
     712:  00:892A  17                  		RLA
     713:  00:892B  CB 2F               		SRA A
     714:  00:892D  CB 2F               		SRA A
     715:  00:892F  CB 2F               		SRA A
     716:  00:8931  DD 86 04            		ADD A,[IX+CHNPRM_CrEnSl] ;SEE COMMENT BELOW
     717:  00:8934  CB 68               		BIT 5,B
     718:  00:8936  28 03               		JR Z,.NO_ENAC
     719:  00:8938  DD 77 04            		LD [IX+CHNPRM_CrEnSl],A
     720:  00:893B  21 1D F0            .NO_ENAC:	LD HL,PT3_AddToEn
     721:  00:893E  86                  		ADD A,[HL] ;BUG IN PT3 - NEED WORD HERE.
     722:  00:893F                      			   ;FIX IT IN NEXT VERSION?
     723:  00:893F  77                  		LD [HL],A
     724:  00:8940  18 0E               		JR .CH_MIX
     725:  00:8942  1F                  .NO_ENSL:	RRA
     726:  00:8943  DD 86 03            		ADD A,[IX+CHNPRM_CrNsSl]
     727:  00:8946  32 7F F0            		LD [AddToNs],A
     728:  00:8949  CB 68               		BIT 5,B
     729:  00:894B  28 03               		JR Z,.CH_MIX
     730:  00:894D  DD 77 03            		LD [IX+CHNPRM_CrNsSl],A
     731:  00:8950  78                  .CH_MIX:	LD A,B
     732:  00:8951  1F                  		RRA
     733:  00:8952  E6 48               		AND $48
     734:  00:8954  21 47 F1            .CH_EXIT:	LD HL,AYREGS+AR_Mixer
     735:  00:8957  B6                  		OR [HL]
     736:  00:8958  0F                  		RRCA
     737:  00:8959  77                  		LD [HL],A
     738:  00:895A  E1                  		POP HL
     739:  00:895B  AF                  		XOR A
     740:  00:895C  DD B6 0A            		OR [IX+CHNPRM_COnOff]
     741:  00:895F  C8                  		RET Z
     742:  00:8960  DD 35 0A            		DEC [IX+CHNPRM_COnOff]
     743:  00:8963  C0                  		RET NZ
     744:  00:8964  DD AE 15            		XOR [IX+CHNPRM_Flags]
     745:  00:8967  DD 77 15            		LD [IX+CHNPRM_Flags],A
     746:  00:896A  1F                  		RRA
     747:  00:896B  DD 7E 0B            		LD A,[IX+CHNPRM_OnOffD]
     748:  00:896E  38 03               		JR C,.CH_ONDL
     749:  00:8970  DD 7E 0C            		LD A,[IX+CHNPRM_OffOnD]
     750:  00:8973  DD 77 0A            .CH_ONDL:	LD [IX+CHNPRM_COnOff],A
     751:  00:8976  C9                  		RET
     752:  00:8977                      
     753:  00:8977  AF                  PT3_PLAY:	XOR A
     754:  00:8978  32 1D F0            		LD [PT3_AddToEn],A
     755:  00:897B  32 47 F1            		LD [AYREGS+AR_Mixer],A
     756:  00:897E  3D                  		DEC A
     757:  00:897F  32 4D F1            		LD [AYREGS+AR_EnvTp],A
     758:  00:8982  21 7A F0            		LD HL,DelyCnt
     759:  00:8985  35                  		DEC [HL]
     760:  00:8986  C2 0D 8A            		JP NZ,.PL2
     761:  00:8989  21 3E F0            		LD HL,ChanA+CHNPRM_NtSkCn
     762:  00:898C  35                  		DEC [HL]
     763:  00:898D  20 4E               		JR NZ,.PL1B
     764:  00:898F  ED 4B 12 F0         		LD BC,[PT3_AdInPtA]
     765:  00:8993  0A                  		LD A,[BC]
     766:  00:8994  A7                  		AND A
     767:  00:8995  20 3B               		JR NZ,.PL1A
     768:  00:8997  57                  		LD D,A
     769:  00:8998  32 7E F0            		LD [Ns_Base],A
     770:  00:899B  2A 03 F0            		LD HL,[PT3_CrPsPtr]
     771:  00:899E  23                  		INC HL
     772:  00:899F  7E                  		LD A,[HL]
     773:  00:89A0  3C                  		INC A
     774:  00:89A1  20 08               		JR NZ,.PLNLP
     775:  00:89A3  CD 0D 85            		CALL CHECKLP
     776:  00:89A6  2A 18 F0            		LD HL,[PT3_LPosPtr]
     777:  00:89A9  7E                  		LD A,[HL]
     778:  00:89AA  3C                  		INC A
     779:  00:89AB  22 03 F0            .PLNLP:	LD [PT3_CrPsPtr],HL
     780:  00:89AE  3D                  		DEC A
     781:  00:89AF  87                  		ADD A,A
     782:  00:89B0  5F                  		LD E,A
     783:  00:89B1  CB 12               		RL D
     784:  00:89B3  2A 1A F0            		LD HL,[PT3_PatsPtr]
     785:  00:89B6  19                  		ADD HL,DE
     786:  00:89B7  ED 5B 01 F0         		LD DE,[PT3_MODADDR]
     787:  00:89BB  ED 73 0D F0         		LD [PT3_PSP],SP
     788:  00:89BF  F9                  		LD SP,HL
     789:  00:89C0  E1                  		POP HL
     790:  00:89C1  19                  		ADD HL,DE
     791:  00:89C2  44                  		LD B,H
     792:  00:89C3  4D                  		LD C,L
     793:  00:89C4  E1                  		POP HL
     794:  00:89C5  19                  		ADD HL,DE
     795:  00:89C6  22 14 F0            		LD [PT3_AdInPtB],HL
     796:  00:89C9  E1                  		POP HL
     797:  00:89CA  19                  		ADD HL,DE
     798:  00:89CB  22 16 F0            		LD [PT3_AdInPtC],HL
     799:  00:89CE  ED 7B 0D F0         		LD SP,[PT3_PSP]
     800:  00:89D2                      
     801:  00:89D2  DD 21 2F F0         .PL1A:		LD IX,ChanA+12
     802:  00:89D6  CD B5 86            		CALL PTDECOD
     803:  00:89D9  ED 43 12 F0         		LD [PT3_AdInPtA],BC
     804:  00:89DD                      
     805:  00:89DD  21 5B F0            .PL1B:		LD HL,ChanB+CHNPRM_NtSkCn
     806:  00:89E0  35                  		DEC [HL]
     807:  00:89E1  20 0F               		JR NZ,.PL1C
     808:  00:89E3  DD 21 4C F0         		LD IX,ChanB+12
     809:  00:89E7  ED 4B 14 F0         		LD BC,[PT3_AdInPtB]
     810:  00:89EB  CD B5 86            		CALL PTDECOD
     811:  00:89EE  ED 43 14 F0         		LD [PT3_AdInPtB],BC
     812:  00:89F2                      
     813:  00:89F2  21 78 F0            .PL1C:		LD HL,ChanC+CHNPRM_NtSkCn
     814:  00:89F5  35                  		DEC [HL]
     815:  00:89F6  20 0F               		JR NZ,.PL1D
     816:  00:89F8  DD 21 69 F0         		LD IX,ChanC+12
     817:  00:89FC  ED 4B 16 F0         		LD BC,[PT3_AdInPtC]
     818:  00:8A00  CD B5 86            		CALL PTDECOD
     819:  00:8A03  ED 43 16 F0         		LD [PT3_AdInPtC],BC
     820:  00:8A07                      
     821:  00:8A07  3A 1C F0            .PL1D:		LD A,[PT3_Delay]
     822:  00:8A0A  32 7A F0            		LD [DelyCnt],A
     823:  00:8A0D                      
     824:  00:8A0D  DD 21 23 F0         .PL2:		LD IX,ChanA
     825:  00:8A11  2A 40 F1            		LD HL,[AYREGS+AR_TonA]
     826:  00:8A14  CD 25 88            		CALL CHREGS
     827:  00:8A17  22 40 F1            		LD [AYREGS+AR_TonA],HL
     828:  00:8A1A  3A 4A F1            		LD A,[AYREGS+AR_AmplC]
     829:  00:8A1D  32 48 F1            		LD [AYREGS+AR_AmplA],A
     830:  00:8A20  DD 21 40 F0         		LD IX,ChanB
     831:  00:8A24  2A 42 F1            		LD HL,[AYREGS+AR_TonB]
     832:  00:8A27  CD 25 88            		CALL CHREGS
     833:  00:8A2A  22 42 F1            		LD [AYREGS+AR_TonB],HL
     834:  00:8A2D  3A 4A F1            		LD A,[AYREGS+AR_AmplC]
     835:  00:8A30  32 49 F1            		LD [AYREGS+AR_AmplB],A
     836:  00:8A33  DD 21 5D F0         		LD IX,ChanC
     837:  00:8A37  2A 44 F1            		LD HL,[AYREGS+AR_TonC]
     838:  00:8A3A  CD 25 88            		CALL CHREGS
     839:  00:8A3D  22 44 F1            		LD [AYREGS+AR_TonC],HL
     840:  00:8A40                      
     841:  00:8A40  2A 7E F0            		LD HL,[Ns_Base_AddToNs]
     842:  00:8A43  7C                  		LD A,H
     843:  00:8A44  85                  		ADD A,L
     844:  00:8A45  32 46 F1            		LD [AYREGS+AR_Noise],A
     845:  00:8A48                      
     846:  00:8A48  3A 1D F0            		LD A,[PT3_AddToEn]
     847:  00:8A4B  5F                  		LD E,A
     848:  00:8A4C  87                  		ADD A,A
     849:  00:8A4D  9F                  		SBC A,A
     850:  00:8A4E  57                  		LD D,A
     851:  00:8A4F  2A 4E F1            		LD HL,[EnvBase]
     852:  00:8A52  19                  		ADD HL,DE
     853:  00:8A53  ED 5B 7B F0         		LD DE,[CurESld]
     854:  00:8A57  19                  		ADD HL,DE
     855:  00:8A58  22 4B F1            		LD [AYREGS+AR_Env],HL
     856:  00:8A5B                      
     857:  00:8A5B  AF                  		XOR A
     858:  00:8A5C  21 7D F0            		LD HL,CurEDel
     859:  00:8A5F  B6                  		OR [HL]
     860:  00:8A60  C8                  		RET Z
     861:  00:8A61  35                  		DEC [HL]
     862:  00:8A62  C0                  		RET NZ
     863:  00:8A63  3A 1E F0            		LD A,[PT3_Env_Del]
     864:  00:8A66  77                  		LD [HL],A
     865:  00:8A67  2A 1F F0            		LD HL,[PT3_ESldAdd]
     866:  00:8A6A  19                  		ADD HL,DE
     867:  00:8A6B  22 7B F0            		LD [CurESld],HL
     868:  00:8A6E  C9                  		RET
     869:  00:8A6F                      
     870:  00:8A6F  AF                  PT3_ROUT:	XOR A
     871:  00:8A70                      	
     872:  00:8A70                      ROUT_A0:	; --- FIXES BITS 6 AND 7 OF MIXER ---
     873:  00:8A70  21 47 F1            		LD	HL,AYREGS+AR_Mixer
     874:  00:8A73  CB FE               		set	7,[hl]
     875:  00:8A75  CB B6               		res	6,[hl]
     876:  00:8A77                      
     877:  00:8A77  0E A0               		LD C,$A0
     878:  00:8A79  21 40 F1            		LD HL,AYREGS
     879:  00:8A7C  ED 79               .LOUT:		OUT [C],A
     880:  00:8A7E  0C                  		INC C
     881:  00:8A7F  ED A3               		OUTI 
     882:  00:8A81  0D                  		DEC C
     883:  00:8A82  3C                  		INC A
     884:  00:8A83  FE 0D               		CP 13
     885:  00:8A85  20 F5               		JR NZ,.LOUT
     886:  00:8A87  ED 79               		OUT [C],A
     887:  00:8A89  7E                  		LD A,[HL]
     888:  00:8A8A  A7                  		AND A
     889:  00:8A8B  F8                  		RET M
     890:  00:8A8C  0C                  		INC C
     891:  00:8A8D  ED 79               		OUT [C],A
     892:  00:8A8F  C9                  		RET
     893:  00:8A90                      
     894:  00:8A90  64                  NT_DATA:	db (T_NEW_0-T1_)*2
     895:  00:8A91  2A                  		db TCNEW_0-T_
     896:  00:8A92  65                  		db (T_OLD_0-T1_)*2+1
     897:  00:8A93  00                  		db TCOLD_0-T_
     898:  00:8A94  01                  		db (T_NEW_1-T1_)*2+1
     899:  00:8A95  0C                  		db TCNEW_1-T_
     900:  00:8A96  01                  		db (T_OLD_1-T1_)*2+1
     901:  00:8A97  0C                  		db TCOLD_1-T_
     902:  00:8A98  94                  		db (T_NEW_2-T1_)*2
     903:  00:8A99  35                  		db TCNEW_2-T_
     904:  00:8A9A  30                  		db (T_OLD_2-T1_)*2
     905:  00:8A9B  0E                  		db TCOLD_2-T_
     906:  00:8A9C  60                  		db (T_NEW_3-T1_)*2
     907:  00:8A9D  20                  		db TCNEW_3-T_
     908:  00:8A9E  60                  		db (T_OLD_3-T1_)*2
     909:  00:8A9F  21                  		db TCOLD_3-T_
     910:  00:8AA0                      
     911:  00:8AA0                      T_:
     912:  00:8AA0                      
     913:  00:8AA0                      TCOLD_0:	db $00+1,$04+1,$08+1,$0A+1,$0C+1,$0E+1,$12+1,$14+1
     913:  00:8AA0  01 05 09 0B 0D 0F 13 15 
     914:  00:8AA8  19 25 3D 00         		db $18+1,$24+1,$3C+1,0
     915:  00:8AAC                      TCNEW_1:	
     916:  00:8AAC  5D 00               TCOLD_1:	db $5C+1,0
     917:  00:8AAE                      TCOLD_2:	db $30+1,$36+1,$4C+1,$52+1,$5E+1,$70+1,$82,$8C,$9C
     917:  00:8AAE  31 37 4D 53 5F 71 82 8C 9C 
     918:  00:8AB7                      		db $9E,$A0,$A6,$A8,$AA,$AC,$AE,$AE,0
     918:  00:8AB7  9E A0 A6 A8 AA AC AE AE 00 
     919:  00:8AC0  57                  TCNEW_3:	db $56+1
     920:  00:8AC1                      TCOLD_3:	db $1E+1,$22+1,$24+1,$28+1,$2C+1,$2E+1,$32+1,$BE+1,0
     920:  00:8AC1  1F 23 25 29 2D 2F 33 BF 00 
     921:  00:8ACA                      TCNEW_0:	db $1C+1,$20+1,$22+1,$26+1,$2A+1,$2C+1,$30+1,$54+1
     921:  00:8ACA  1D 21 23 27 2B 2D 31 55 
     922:  00:8AD2  BD BF 00            		db $BC+1,$BE+1,0
     923:  00:8AD5                      TCNEW_2:	db $1A+1,$20+1,$24+1,$28+1,$2A+1,$3A+1,$4C+1,$5E+1
     923:  00:8AD5  1B 21 25 29 2B 3B 4D 5F 
     924:  00:8ADD  BB BD BF            		db $BA+1,$BC+1,$BE+1
     925:  00:8AE0                      
     926:  00:8AE0  00 01 00 90         EMPTYSAMORN: 	db 0,1,0,$90 ;delete $90 if you don't need default sample
     927:  00:8AE4                      
     928:  00:8AE4                      T_PACK:		; First 12 values of tone tables (packed)
     929:  00:8AE4  0D                  		db ($06EC*2)/256
     930:  00:8AE5  D8                  		db #d8
     931:  00:8AE6  69                  		db $0755-$06EC
     932:  00:8AE7  70                  		db $07C5-$0755
     933:  00:8AE8  76                  		db $083B-$07C5
     934:  00:8AE9  7D                  		db $08B8-$083B
     935:  00:8AEA  85                  		db $093D-$08B8
     936:  00:8AEB  8D                  		db $09CA-$093D
     937:  00:8AEC  95                  		db $0A5F-$09CA
     938:  00:8AED  9D                  		db $0AFC-$0A5F
     939:  00:8AEE  A8                  		db $0BA4-$0AFC
     940:  00:8AEF  B1                  		db $0C55-$0BA4
     941:  00:8AF0  BB                  		db $0D10-$0C55
     942:  00:8AF1  0C                  		db ($066D*2)/256
     943:  00:8AF2  DA                  		db #da
     944:  00:8AF3  62                  		db $06CF-$066D
     945:  00:8AF4  68                  		db $0737-$06CF
     946:  00:8AF5  6D                  		db $07A4-$0737
     947:  00:8AF6  75                  		db $0819-$07A4
     948:  00:8AF7  7B                  		db $0894-$0819
     949:  00:8AF8  83                  		db $0917-$0894
     950:  00:8AF9  8A                  		db $09A1-$0917
     951:  00:8AFA  92                  		db $0A33-$09A1
     952:  00:8AFB  9C                  		db $0ACF-$0A33
     953:  00:8AFC  A4                  		db $0B73-$0ACF
     954:  00:8AFD  AF                  		db $0C22-$0B73
     955:  00:8AFE  B8                  		db $0CDA-$0C22
     956:  00:8AFF  0E                  		db ($0704*2)/256
     957:  00:8B00  08                  		db #08
     958:  00:8B01  6A                  		db $076E-$0704
     959:  00:8B02  72                  		db $07E0-$076E
     960:  00:8B03  78                  		db $0858-$07E0
     961:  00:8B04  7E                  		db $08D6-$0858
     962:  00:8B05  86                  		db $095C-$08D6
     963:  00:8B06  90                  		db $09EC-$095C
     964:  00:8B07  96                  		db $0A82-$09EC
     965:  00:8B08  A0                  		db $0B22-$0A82
     966:  00:8B09  AA                  		db $0BCC-$0B22
     967:  00:8B0A  B4                  		db $0C80-$0BCC
     968:  00:8B0B  BE                  		db $0D3E-$0C80
     969:  00:8B0C  0F                  		db ($07E0*2)/256
     970:  00:8B0D  C0                  		db #c0
     971:  00:8B0E  78                  		db $0858-$07E0
     972:  00:8B0F  88                  		db $08E0-$0858
     973:  00:8B10  80                  		db $0960-$08E0
     974:  00:8B11  90                  		db $09F0-$0960
     975:  00:8B12  98                  		db $0A88-$09F0
     976:  00:8B13  A0                  		db $0B28-$0A88
     977:  00:8B14  B0                  		db $0BD8-$0B28
     978:  00:8B15  A8                  		db $0C80-$0BD8
     979:  00:8B16  E0                  		db $0D60-$0C80
     980:  00:8B17  B0                  		db $0E10-$0D60
     981:  00:8B18  E8                  		db $0EF8-$0E10
      61.  00:8B19                      	include "ayFX-ROM_sjasm.asm"
       1:  00:8B19                      		; --- ayFX REPLAYER v1.31 ---
       2:  00:8B19                      
       3:  00:8B19                      		; --- v1.31	Fixed bug on previous version, only PSG channel C worked
       4:  00:8B19                      		; --- v1.3	Fixed volume and Relative volume versions on the same file, conditional compilation
       5:  00:8B19                      		; ---		Support for dynamic or fixed channel allocation
       6:  00:8B19                      		; --- v1.2f/r	ayFX bank support
       7:  00:8B19                      		; --- v1.11f/r	If a frame volume is zero then no AYREGS update
       8:  00:8B19                      		; --- v1.1f/r	Fixed volume for all ayFX streams
       9:  00:8B19                      		; --- v1.1	Explicit priority (as suggested by AR)
      10:  00:8B19                      		; --- v1.0f	Bug fixed (error when using noise)
      11:  00:8B19                      		; --- v1.0	Initial release
      12:  00:8B19                      
      13:  00:8B19                      		; --- DEFINE AYFXRELATIVE AS 0 FOR FIXED VOLUME VERSION ---
      14:  00:8B19                      		; --- DEFINE AYFXRELATIVE AS 1 FOR RELATIVE VOLUME VERSION ---
      15:  00:8B19  (00:0000)           AYFXRELATIVE equ 0
      16:  00:8B19                      
      17:  00:8B19                      ayFX_SETUP:	; ---          ayFX replayer setup          ---
      18:  00:8B19                      		; --- INPUT: HL -> pointer to the ayFX bank ---
      19:  00:8B19  22 41 F2            		ld	[ayFX_BANK],hl			; Current ayFX bank
      20:  00:8B1C  3E 01               		ld	a,1				; a:=0
      21:  00:8B1E  32 40 F2            		ld	[ayFX_MODE],a			; Initial mode: fixed channel
      22:  00:8B21  3C                  		inc	a				; Starting channel (=1)
      23:  00:8B22  32 4A F2            		ld	[ayFX_CHANNEL],a		; Updated
      24:  00:8B25                      ayFX_END:	; --- End of an ayFX stream ---
      25:  00:8B25  3E FF               		ld	a,255				; Lowest ayFX priority
      26:  00:8B27  32 43 F2            		ld	[ayFX_PRIORITY],a		; Priority saved (not playing ayFX stream)
      27:  00:8B2A  C9                  		ret					; Return
      28:  00:8B2B                      
      29:  00:8B2B                      ayFX_INIT:	; ---     INIT A NEW ayFX STREAM     ---
      30:  00:8B2B                      		; --- INPUT: A -> sound to be played ---
      31:  00:8B2B                      		; ---        C -> sound priority     ---
      32:  00:8B2B  C5                  		push	bc				; Store bc in stack
      33:  00:8B2C  D5                  		push	de				; Store de in stack
      34:  00:8B2D  E5                  		push	hl				; Store hl in stack
      35:  00:8B2E                      		; --- Check if the index is in the bank ---
      36:  00:8B2E  47                  		ld	b,a				; b:=a (new ayFX stream index)
      37:  00:8B2F  2A 41 F2            		ld	hl,[ayFX_BANK]			; Current ayFX BANK
      38:  00:8B32  7E                  		ld	a,[hl]				; Number of samples in the bank
      39:  00:8B33  B7                  		or	a				; If zero (means 256 samples)...
      40:  00:8B34  28 06               		jr	z,.CHECK_PRI			; ...goto .CHECK_PRI
      41:  00:8B36                      		; The bank has less than 256 samples
      42:  00:8B36  78                  		ld	a,b				; a:=b (new ayFX stream index)
      43:  00:8B37  BE                  		cp	[hl]				; If new index is not in the bank...
      44:  00:8B38  3E 02               		ld	a,2				; a:=2 (error 2: Sample not in the bank)
      45:  00:8B3A  30 21               		jr	nc,.INIT_END			; ...we can't init it
      46:  00:8B3C                      .CHECK_PRI:	; --- Check if the new priority is lower than the current one ---
      47:  00:8B3C                      		; ---   Remember: 0 = highest priority, 15 = lowest priority  ---
      48:  00:8B3C  78                  		ld	a,b				; a:=b (new ayFX stream index)
      49:  00:8B3D  3A 43 F2            		ld	a,[ayFX_PRIORITY]		; a:=Current ayFX stream priority
      50:  00:8B40  B9                  		cp	c				; If new ayFX stream priority is lower than current one...
      51:  00:8B41  3E 01               		ld	a,1				; a:=1 (error 1: A sample with higher priority is being played)
      52:  00:8B43  38 18               		jr	c,.INIT_END			; ...we don't start the new ayFX stream
      53:  00:8B45                      		; --- Set new priority ---
      54:  00:8B45  79                  		ld	a,c				; a:=New priority
      55:  00:8B46  E6 0F               		and	$0F				; We mask the priority
      56:  00:8B48  32 43 F2            		ld	[ayFX_PRIORITY],a		; new ayFX stream priority saved in RAM
      57:  00:8B4B                      
      58:  00:8B4B                      		IF ( AYFXRELATIVE == 1 )
      59:  00:8B4B                    ~ 			; --- Volume adjust using PT3 volume table ---
      60:  00:8B4B                    ~ 			ld	c,a				; c:=New priority (fixed)
      61:  00:8B4B                    ~ 			ld	a,15				; a:=15
      62:  00:8B4B                    ~ 			sub	c				; a:=15-New priority = relative volume
      63:  00:8B4B                    ~ 			jr	z,.INIT_NOSOUND		; If priority is 15 -> no sound output (volume is zero)
      64:  00:8B4B                    ~ 			add	a,a				; a:=a*2
      65:  00:8B4B                    ~ 			add	a,a				; a:=a*4
      66:  00:8B4B                    ~ 			add	a,a				; a:=a*8
      67:  00:8B4B                    ~ 			add	a,a				; a:=a*16
      68:  00:8B4B                    ~ 			ld	e,a				; e:=a
      69:  00:8B4B                    ~ 			ld	d,0				; de:=a
      70:  00:8B4B                    ~ 			ld	hl,VT_				; hl:=PT3 volume table
      71:  00:8B4B                    ~ 			add	hl,de				; hl is a pointer to the relative volume table
      72:  00:8B4B                    ~ 			ld	[ayFX_VT],hl			; Save pointer
      73:  00:8B4B                    ~ 		ENDIF
      74:  00:8B4B                      
      75:  00:8B4B                      		; --- Calculate the pointer to the new ayFX stream ---
      76:  00:8B4B  ED 5B 41 F2         		ld	de,[ayFX_BANK]			; de:=Current ayFX bank
      77:  00:8B4F  13                  		inc	de				; de points to the increments table of the bank
      78:  00:8B50  68                  		ld	l,b				; l:=b (new ayFX stream index)
      79:  00:8B51  26 00               		ld	h,0				; hl:=b (new ayFX stream index)
      80:  00:8B53  29                  		add	hl,hl				; hl:=hl*2
      81:  00:8B54  19                  		add	hl,de				; hl:=hl+de (hl points to the correct increment)
      82:  00:8B55  5E                  		ld	e,[hl]				; e:=lower byte of the increment
      83:  00:8B56  23                  		inc	hl				; hl points to the higher byte of the correct increment
      84:  00:8B57  56                  		ld	d,[hl]				; de:=increment
      85:  00:8B58  19                  		add	hl,de				; hl:=hl+de (hl points to the new ayFX stream)
      86:  00:8B59  22 44 F2            		ld	[ayFX_POINTER],hl		; Pointer saved in RAM
      87:  00:8B5C  AF                  		xor	a				; a:=0 (no errors)
      88:  00:8B5D  E1                  .INIT_END:	pop	hl				; Retrieve hl from stack
      89:  00:8B5E  D1                  		pop	de				; Retrieve de from stack
      90:  00:8B5F  C1                  		pop	bc				; Retrieve bc from stack
      91:  00:8B60  C9                  		ret					; Return
      92:  00:8B61                      
      93:  00:8B61                      		IF ( AYFXRELATIVE == 1 )
      94:  00:8B61                    ~ .INIT_NOSOUND:	; --- Init a sample with relative volume zero -> no sound output ---
      95:  00:8B61                    ~ 			ld	a,255				; Lowest ayFX priority
      96:  00:8B61                    ~ 			ld	[ayFX_PRIORITY],a		; Priority saved (not playing ayFX stream)
      97:  00:8B61                    ~ 			jr	.INIT_END			; Jumps to .INIT_END
      98:  00:8B61                    ~ 		ENDIF
      99:  00:8B61                      
     100:  00:8B61                      ayFX_PLAY:	; --- PLAY A FRAME OF AN ayFX STREAM ---
     101:  00:8B61  3A 43 F2            		ld	a,[ayFX_PRIORITY]		; a:=Current ayFX stream priority
     102:  00:8B64  B7                  		or	a				; If priority has bit 7 on...
     103:  00:8B65  F8                  		ret	m				; ...return
     104:  00:8B66                      		; --- Calculate next ayFX channel (if needed) ---
     105:  00:8B66  3A 40 F2            		ld	a,[ayFX_MODE]			; ayFX mode
     106:  00:8B69  E6 01               		and	1				; If bit0=0 (fixed channel)...
     107:  00:8B6B  28 08               		jr	z,.TAKECB			; ...skip channel changing
     108:  00:8B6D  21 4A F2            		ld	hl,ayFX_CHANNEL			; Old ayFX playing channel
     109:  00:8B70  35                  		dec	[hl]				; New ayFX playing channel
     110:  00:8B71  20 02               		jr	nz,.TAKECB			; If not zero jump to .TAKECB
     111:  00:8B73  36 03               		ld	[hl],3				; If zero -> set channel 3
     112:  00:8B75                      .TAKECB:	; --- Extract control byte from stream ---
     113:  00:8B75  2A 44 F2            		ld	hl,[ayFX_POINTER]		; Pointer to the current ayFX stream
     114:  00:8B78  4E                  		ld	c,[hl]				; c:=Control byte
     115:  00:8B79  23                  		inc	hl				; Increment pointer
     116:  00:8B7A                      		; --- Check if there's new tone on stream ---
     117:  00:8B7A  CB 69               		bit	5,c				; If bit 5 c is off...
     118:  00:8B7C  28 08               		jr	z,.CHECK_NN			; ...jump to .CHECK_NN (no new tone)
     119:  00:8B7E                      		; --- Extract new tone from stream ---
     120:  00:8B7E  5E                  		ld	e,[hl]				; e:=lower byte of new tone
     121:  00:8B7F  23                  		inc	hl				; Increment pointer
     122:  00:8B80  56                  		ld	d,[hl]				; d:=higher byte of new tone
     123:  00:8B81  23                  		inc	hl				; Increment pointer
     124:  00:8B82  ED 53 46 F2         		ld	[ayFX_TONE],de			; ayFX tone updated
     125:  00:8B86                      .CHECK_NN:	; --- Check if there's new noise on stream ---
     126:  00:8B86  CB 71               		bit	6,c				; if bit 6 c is off...
     127:  00:8B88  28 09               		jr	z,.SETPOINTER			; ...jump to .SETPOINTER (no new noise)
     128:  00:8B8A                      		; --- Extract new noise from stream ---
     129:  00:8B8A  7E                  		ld	a,[hl]				; a:=New noise
     130:  00:8B8B  23                  		inc	hl				; Increment pointer
     131:  00:8B8C  FE 20               		cp	$20				; If it's an illegal value of noise (used to mark end of stream)...
     132:  00:8B8E  28 95               		jr.	z,ayFX_END			; ...jump to ayFX_END
     133:  00:8B90  32 48 F2            		ld	[ayFX_NOISE],a			; ayFX noise updated
     134:  00:8B93                      .SETPOINTER:	; --- Update ayFX pointer ---
     135:  00:8B93  22 44 F2            		ld	[ayFX_POINTER],hl		; Update ayFX stream pointer
     136:  00:8B96                      		; --- Extract volume ---
     137:  00:8B96  79                  		ld	a,c				; a:=Control byte
     138:  00:8B97  E6 0F               		and	$0F				; lower nibble
     139:  00:8B99                      
     140:  00:8B99                      		IF ( AYFXRELATIVE == 1 )
     141:  00:8B99                    ~ 			; --- Fix the volume using PT3 Volume Table ---
     142:  00:8B99                    ~ 			ld	hl,[ayFX_VT]			; hl:=Pointer to relative volume table
     143:  00:8B99                    ~ 			ld	e,a				; e:=a (ayFX volume)
     144:  00:8B99                    ~ 			ld	d,0				; d:=0
     145:  00:8B99                    ~ 			add	hl,de				; hl:=hl+de (hl points to the relative volume of this frame
     146:  00:8B99                    ~ 			ld	a,[hl]				; a:=ayFX relative volume
     147:  00:8B99                    ~ 			or	a				; If relative volume is zero...
     148:  00:8B99                    ~ 		ENDIF
     149:  00:8B99                      
     150:  00:8B99  32 49 F2            		ld	[ayFX_VOLUME],a			; ayFX volume updated
     151:  00:8B9C  C8                  		ret	z				; ...return (don't copy ayFX values in to AYREGS)
     152:  00:8B9D                      		; -------------------------------------
     153:  00:8B9D                      		; --- COPY ayFX VALUES IN TO AYREGS ---
     154:  00:8B9D                      		; -------------------------------------
     155:  00:8B9D                      		; --- Set noise channel ---
     156:  00:8B9D  CB 79               		bit	7,c				; If noise is off...
     157:  00:8B9F  20 06               		jr	nz,.SETMASKS			; ...jump to .SETMASKS
     158:  00:8BA1  3A 48 F2            		ld	a,[ayFX_NOISE]			; ayFX noise value
     159:  00:8BA4  32 46 F1            		ld	[AYREGS+6],a			; copied in to AYREGS (noise channel)
     160:  00:8BA7                      .SETMASKS:	; --- Set mixer masks ---
     161:  00:8BA7  79                  		ld	a,c				; a:=Control byte
     162:  00:8BA8  E6 90               		and	$90				; Only bits 7 and 4 (noise and tone mask for psg reg 7)
     163:  00:8BAA  FE 90               		cp	$90				; If no noise and no tone...
     164:  00:8BAC  C8                  		ret	z				; ...return (don't copy ayFX values in to AYREGS)
     165:  00:8BAD                      		; --- Copy ayFX values in to ARYREGS ---
     166:  00:8BAD  0F                  		rrca					; Rotate a to the right (1 TIME)
     167:  00:8BAE  0F                  		rrca					; Rotate a to the right (2 TIMES) (OR mask)
     168:  00:8BAF  16 DB               		ld	d,$DB				; d:=Mask for psg mixer (AND mask)
     169:  00:8BB1                      		; --- Dump to correct channel ---
     170:  00:8BB1  21 4A F2            		ld	hl,ayFX_CHANNEL			; Next ayFX playing channel
     171:  00:8BB4  46                  		ld	b,[hl]				; Channel counter
     172:  00:8BB5                      .CHK1:		; --- Check if playing channel was 1 ---
     173:  00:8BB5  10 0D               		djnz	.CHK2				; Decrement and jump if channel was not 1
     174:  00:8BB7                      .PLAY_C:	; --- Play ayFX stream on channel C ---
     175:  00:8BB7  CD E6 8B            		call	.SETMIXER			; Set PSG mixer value (returning a=ayFX volume and hl=ayFX tone)
     176:  00:8BBA  32 4A F1            		ld	[AYREGS+10],a			; Volume copied in to AYREGS (channel C volume)
     177:  00:8BBD  CB 51               		bit	2,c				; If tone is off...
     178:  00:8BBF  C0                  		ret	nz				; ...return
     179:  00:8BC0  22 44 F1            		ld	[AYREGS+4],hl			; copied in to AYREGS (channel C tone)
     180:  00:8BC3  C9                  		ret					; Return
     181:  00:8BC4                      .CHK2:		; --- Check if playing channel was 2 ---
     182:  00:8BC4  CB 0A               		rrc	d				; Rotate right AND mask
     183:  00:8BC6  0F                  		rrca					; Rotate right OR mask
     184:  00:8BC7  10 0D               		djnz	.CHK3				; Decrement and jump if channel was not 2
     185:  00:8BC9                      .PLAY_B:	; --- Play ayFX stream on channel B ---
     186:  00:8BC9  CD E6 8B            		call	.SETMIXER			; Set PSG mixer value (returning a=ayFX volume and hl=ayFX tone)
     187:  00:8BCC  32 49 F1            		ld	[AYREGS+9],a			; Volume copied in to AYREGS (channel B volume)
     188:  00:8BCF  CB 49               		bit	1,c				; If tone is off...
     189:  00:8BD1  C0                  		ret	nz				; ...return
     190:  00:8BD2  22 42 F1            		ld	[AYREGS+2],hl			; copied in to AYREGS (channel B tone)
     191:  00:8BD5  C9                  		ret					; Return
     192:  00:8BD6                      .CHK3:		; --- Check if playing channel was 3 ---
     193:  00:8BD6  CB 0A               		rrc	d				; Rotate right AND mask
     194:  00:8BD8  0F                  		rrca					; Rotate right OR mask
     195:  00:8BD9                      .PLAY_A:	; --- Play ayFX stream on channel A ---
     196:  00:8BD9  CD E6 8B            		call	.SETMIXER			; Set PSG mixer value (returning a=ayFX volume and hl=ayFX tone)
     197:  00:8BDC  32 48 F1            		ld	[AYREGS+8],a			; Volume copied in to AYREGS (channel A volume)
     198:  00:8BDF  CB 41               		bit	0,c				; If tone is off...
     199:  00:8BE1  C0                  		ret	nz				; ...return
     200:  00:8BE2  22 40 F1            		ld	[AYREGS+0],hl			; copied in to AYREGS (channel A tone)
     201:  00:8BE5  C9                  		ret					; Return
     202:  00:8BE6                      .SETMIXER:	; --- Set PSG mixer value ---
     203:  00:8BE6  4F                  		ld	c,a				; c:=OR mask
     204:  00:8BE7  3A 47 F1            		ld	a,[AYREGS+7]			; a:=PSG mixer value
     205:  00:8BEA  A2                  		and	d				; AND mask
     206:  00:8BEB  B1                  		or	c				; OR mask
     207:  00:8BEC  32 47 F1            		ld	[AYREGS+7],a			; PSG mixer value updated
     208:  00:8BEF  3A 49 F2            		ld	a,[ayFX_VOLUME]			; a:=ayFX volume value
     209:  00:8BF2  2A 46 F2            		ld	hl,[ayFX_TONE]			; ayFX tone value
     210:  00:8BF5  C9                  		ret					; Return
     211:  00:8BF6                      
     212:  00:8BF6                      		IF ( AYFXRELATIVE == 1 )
     213:  00:8BF6                    ~ 			; --- UNCOMMENT THIS IF YOU DON'T USE THIS REPLAYER WITH PT3 REPLAYER ---
     214:  00:8BF6                    ~ 		;VT_:	.INCBIN	"VT.BIN"
     215:  00:8BF6                    ~ 			; --- UNCOMMENT THIS IF YOU DON'T USE THIS REPLAYER WITH PT3 REPLAYER ---
     216:  00:8BF6                    ~ 		ENDIF
      62.  00:8BF6                      	
      63.  00:8BF6                      	
      64.  00:8BF6                      
      65.  00:8BF6                      ;;=====================================================
      66.  00:8BF6                      ;;DEFINICIÓN DE CANTIONES Y EFECTOS DE SONIDO
      67.  00:8BF6                      ;;=====================================================		
      68.  00:8BF6                      song:
      69.  00:8BF6  (0968)              	incbin "bloodytears_castlevania.99"
      70.  00:955E                      	
      71.  00:955E                      sfx_bank:
      72.  00:955E  (004B)              	incbin "demo.afb"
      73.  00:95A9                      
     111   00:95A9                      	
     112   00:95A9                      
     113   00:95A9                      ;;=====================================================
     114   00:95A9                      ;;DEFINICIÓN DE SUBRUTINAS DE FERNANDO PARA COMPRESIÓN Y SONIDO
     115   00:95A9                      ;;=====================================================
     116   00:95A9                      ;Este include lleva la rutina de descompresión de ROM/RAM a VRAM de pletter
     117   00:95A9                      ;Está adaptada de la original a sjasm
     118   00:95A9                      ;	HL = RAM/ROM source	; DE = VRAM destination
     119   00:95A9                      depack_VRAM:
     120   00:95A9                      	include "PL_VRAM_Depack_SJASM.asm"
       1.  00:95A9                      ;-----------------------------------------------------------
       2.  00:95A9                      ; Pletter v0.5b VRAM Depacker v1.1 - 16Kb version
       3.  00:95A9                      ; HL = RAM/ROM source ; DE = VRAM destination
       4.  00:95A9                      ;-----------------------------------------------------------
       5.  00:95A9  F3                  	di
       6.  00:95AA                      
       7.  00:95AA                      ; VRAM address setup
       8.  00:95AA  7B                  	ld	a,e
       9.  00:95AB  D3 99               	out	[099h],a
      10.  00:95AD  7A                  	ld	a,d
      11.  00:95AE  F6 40               	or	040h
      12.  00:95B0  D3 99               	out	[099h],a
      13.  00:95B2                      
      14.  00:95B2                      ; Initialization
      15.  00:95B2  7E                  	ld	a,[hl]
      16.  00:95B3  23                  	inc	hl
      17.  00:95B4  D9                  	exx
      18.  00:95B5  11 00 00            	ld	de,0
      19.  00:95B8  87                  	add	a,a
      20.  00:95B9  3C                  	inc	a
      21.  00:95BA  CB 13               	rl	e
      22.  00:95BC  87                  	add	a,a
      23.  00:95BD  CB 13               	rl	e
      24.  00:95BF  87                  	add	a,a
      25.  00:95C0  CB 13               	rl	e
      26.  00:95C2  CB 13               	rl	e
      27.  00:95C4  21 7B 96            	ld	hl,modes
      28.  00:95C7  19                  	add	hl,de
      29.  00:95C8  5E                  	ld	e,[hl]
      30.  00:95C9  DD 6B               	ld	ixl,e
      31.  00:95CB  23                  	inc	hl
      32.  00:95CC  5E                  	ld	e,[hl]
      33.  00:95CD  DD 63               	ld	ixh,e
      34.  00:95CF  1E 01               	ld	e,1
      35.  00:95D1  D9                  	exx
      36.  00:95D2  FD 21 DB 95         	ld	iy,loop
      37.  00:95D6                      
      38.  00:95D6                      ; Main depack loop
      39.  00:95D6  0E 98               literal:ld	c,098h
      40.  00:95D8  ED A3               	outi
      41.  00:95DA  13                  	inc	de
      42.  00:95DB  87                  loop:	add	a,a
      43.  00:95DC  CC 6F 96              	call	z,getbit
      44.  00:95DF  30 F5               	jr	nc,literal
      45.  00:95E1                      
      46.  00:95E1                      ; Compressed data
      47.  00:95E1  D9                  	exx
      48.  00:95E2  62                  	ld	h,d
      49.  00:95E3  6B                  	ld	l,e
      50.  00:95E4  87                  getlen: add	a,a
      51.  00:95E5  CC 73 96            	call	z,getbitexx
      52.  00:95E8  30 1D               	jr	nc,lenok
      53.  00:95EA  87                  lus:	add	a,a
      54.  00:95EB  CC 73 96            	call	z,getbitexx
      55.  00:95EE  ED 6A               	adc	hl,hl
      56.  00:95F0  D8                  	ret	c
      57.  00:95F1  87                  	add	a,a
      58.  00:95F2  CC 73 96            	call	z,getbitexx
      59.  00:95F5  30 10               	jr	nc,lenok
      60.  00:95F7  87                  	add	a,a
      61.  00:95F8  CC 73 96            	call	z,getbitexx
      62.  00:95FB  ED 6A               	adc	hl,hl
      63.  00:95FD  DA 79 96            	jp	c,Depack_out
      64.  00:9600  87                  	add	a,a
      65.  00:9601  CC 73 96            	call	z,getbitexx
      66.  00:9604  DA EA 95            	jp	c,lus
      67.  00:9607  23                  lenok:  inc	hl
      68.  00:9608  D9                  	exx
      69.  00:9609  4E                  	ld	c,[hl]
      70.  00:960A  23                  	inc	hl
      71.  00:960B  06 00               	ld	b,0
      72.  00:960D  CB 79               	bit	7,c
      73.  00:960F  CA 42 96            	jp	z,offsok
      74.  00:9612  DD E9               	jp	ix
      75.  00:9614                      
      76.  00:9614  87                  mode7:  add	a,a
      77.  00:9615  CC 6F 96              	call	z,getbit
      78.  00:9618  CB 10               	rl	b
      79.  00:961A  87                  mode6:	add	a,a
      80.  00:961B  CC 6F 96              	call	z,getbit
      81.  00:961E  CB 10               	rl	b
      82.  00:9620  87                  mode5:  add	a,a
      83.  00:9621  CC 6F 96              	call	z,getbit
      84.  00:9624  CB 10               	rl	b
      85.  00:9626  87                  mode4:  add	a,a
      86.  00:9627  CC 6F 96              	call	z,getbit
      87.  00:962A  CB 10               	rl	b
      88.  00:962C  87                  mode3:  add	a,a
      89.  00:962D  CC 6F 96              	call	z,getbit
      90.  00:9630  CB 10               	rl	b
      91.  00:9632  87                  mode2:	add	a,a
      92.  00:9633  CC 6F 96              	call	z,getbit
      93.  00:9636  CB 10               	rl	b
      94.  00:9638  87                  	add	a,a
      95.  00:9639  CC 6F 96              	call	z,getbit
      96.  00:963C  30 04               	jr	nc,offsok
      97.  00:963E  B7                  	or	a
      98.  00:963F  04                  	inc	b
      99.  00:9640  CB B9               	res	7,c
     100.  00:9642  03                  offsok: inc	bc
     101.  00:9643  E5                  	push	hl
     102.  00:9644  D9                  	exx
     103.  00:9645  E5                  	push	hl
     104.  00:9646  D9                  	exx
     105.  00:9647  6B                  	ld	l,e
     106.  00:9648  62                  	ld	h,d
     107.  00:9649  ED 42               	sbc	hl,bc
     108.  00:964B  C1                  	pop	bc
     109.  00:964C  F5                  	push	af
     110.  00:964D  7D                  .loop:	ld	a,l
     111.  00:964E  D3 99               	out	[099h],a
     112.  00:9650  7C                  	ld	a,h
     113.  00:9651  00                  	nop                     ; VDP timing
     114.  00:9652  D3 99               	out	[099h],a
     115.  00:9654  00                  	nop                     ; VDP timing
     116.  00:9655  DB 98               	in	a,[098h]
     117.  00:9657  08                  	ex	af,af'
     118.  00:9658  7B                  	ld	a,e
     119.  00:9659  00                  	nop			; VDP timing
     120.  00:965A  D3 99               	out	[099h],a
     121.  00:965C  7A                  	ld	a,d
     122.  00:965D  F6 40               	or	040h
     123.  00:965F  D3 99               	out	[099h],a
     124.  00:9661  08                  	ex	af,af'
     125.  00:9662  00                  	nop			; VDP timing
     126.  00:9663  D3 98               	out	[098h],a
     127.  00:9665  13                  	inc	de
     128.  00:9666  ED A1               	cpi
     129.  00:9668  EA 4D 96            	jp	pe,.loop
     130.  00:966B  F1                  	pop	af
     131.  00:966C  E1                  	pop	hl
     132.  00:966D  FD E9               	jp	iy
     133.  00:966F                      
     134.  00:966F  7E                  getbit: ld	a,[hl]
     135.  00:9670  23                  	inc	hl
     136.  00:9671  17                  	rla
     137.  00:9672  C9                  	ret
     138.  00:9673                      
     139.  00:9673                      getbitexx:
     140.  00:9673  D9                  	exx
     141.  00:9674  7E                  	ld	a,[hl]
     142.  00:9675  23                  	inc	hl
     143.  00:9676  D9                  	exx
     144.  00:9677  17                  	rla
     145.  00:9678  C9                  	ret
     146.  00:9679                      
     147.  00:9679                      ; Depacker exit
     148.  00:9679                      Depack_out:
     149.  00:9679  FB                  	ei
     150.  00:967A  C9                  	ret
     151.  00:967B                      
     152.  00:967B                      modes:
     153.  00:967B  42 96               	dw	offsok
     154.  00:967D  32 96               	dw	mode2
     155.  00:967F  2C 96               	dw	mode3
     156.  00:9681  26 96               	dw	mode4
     157.  00:9683  20 96               	dw	mode5
     158.  00:9685  1A 96               	dw	mode6
     159.  00:9687  14 96               	dw	mode7
     121   00:9689                      
     122   00:9689                      
     123   00:9689                      	
     124   00:9689                      ;;=====================================================
     125   00:9689                      ;;DEFINICIÓN DE ESTRUCTURAS
     126   00:9689                      ;;=====================================================		
     127   00:9689                      	include "estructuras.asm"
       1.  00:9689                      ;;=====================================================
       2.  00:9689                      ;;DEFINICIÓN DE ESTRUCTURAS
       3.  00:9689                      ;;=====================================================
       4.  00:9689                      
       5.  00:9689                      ;crear estructura
       6.  00:9689                      
       7.  00:9689                      	STRUCT ESTRUCTURA_PUNTOMIRA
       8.  00:9689                    < posx			DB		100
       9.  00:9689                    < posy			DB		100
      10.  00:9689                    < escena			DB		0	;valores porsibles 0 (blanco+rojo en punto de mira) y NEG 0 (al revés)
      11.  00:9689                    < velocidad		DB		0
      12.  00:9689                    < boton2_pressed  DB		0
      13.  00:9689                    < cadencia		DB		5	;nº de veces que se ejecutará el disparo antes de ejecutar un disparo real (porque cuando se pulsa la tecl dispara 3 ó 4 veces de rápido que va)
      14.  00:9689                    < ; al final he decidido (ya que el punto de mira es el prota) que lo relacionado con el prota vaya en esta estructura
      15.  00:9689                    < pm_aux1			DB		0	;para llegar a los 16 campos
      16.  00:9689                    < pm_aux2			DB		0	;para llegar a los 16 campos
      17.  00:9689                    < pm_aux3			DB		0	;para llegar a los 16 campos
      18.  00:9689                    < pm_aux4			DB		0	;para llegar a los 16 campos
      19.  00:9689                    < pm_aux5			DB		0	;para llegar a los 16 campos
      20.  00:9689                    < pm_aux6			DB		0	;para llegar a los 16 campos
      21.  00:9689                    < pm_aux7			DB		0	;para llegar a los 16 campos
      22.  00:9689                    < pm_aux8			DB		0	;para llegar a los 16 campos
      23.  00:9689                    < pm_aux9			DB		0	;para llegar a los 16 campos
      24.  00:9689                    < pm_aux10		DB		0	;para llegar a los 16 campos
      25.  00:9689                    < 	ENDSTRUCT;ESTRUCTURA_PUNTOMIRA
      26.  00:9689                      
      27.  00:9689                      	
      28.  00:9689                      	STRUCT ESTRUCTURA_ENEMIGO
      29.  00:9689                    < tipo				DB		0	;(0 serpiente por ejemplo) #FF muerto o no existe
      30.  00:9689                    < posx				DB		5
      31.  00:9689                    < posy				DB		50
      32.  00:9689                    < color				DB		5
      33.  00:9689                    < escena				DB		0
      34.  00:9689                    < contador_siguiente_escena	DB	0
      35.  00:9689                    < reset_contador		DB		0
      36.  00:9689                    < dano				DB		0	;daño
      37.  00:9689                    < energia				DB		0	;energía del enemigo... si llega a 0 => existe <- 0
      38.  00:9689                    < ;indica el nº de sprite a mostrar y si está compuesto por uno o dos sprites y si están en horizontal o vertical
      39.  00:9689                    < ver_hor				DB		0
      40.  00:9689                    < manejador_dibujo 	DW		0
      41.  00:9689                    < en_aux3				DB		0
      42.  00:9689                    < en_aux4				DB		0
      43.  00:9689                    < 	ENDSTRUCT;ESTRUCTURA_ENEMIGO
      44.  00:9689                      	
      45.  00:9689                      	STRUCT ESTRUCTURA_EXTRA		;vidas extra, plantas de curación de energía, reliquias	
      46.  00:9689                    < tipo				DB		0	;#FF muerto/usado o no existe
      47.  00:9689                    < posx				DB		50
      48.  00:9689                    < posy				DB		50
      49.  00:9689                    < color				DB		5
      50.  00:9689                    < contador			DB		0	;por si doy dos reliquias en vez de una, por ejemplo
      51.  00:9689                    < en_aux1				DB		0	;para llegar a los 16 campos
      52.  00:9689                    < en_aux2				DB		0
      53.  00:9689                    < en_aux3				DB		0
      54.  00:9689                    < en_aux4				DB		0
      55.  00:9689                    < en_aux5				DB		0
      56.  00:9689                    < en_aux6				DB		0
      57.  00:9689                    < en_aux7				DB		0
      58.  00:9689                    < en_aux8				DB		0
      59.  00:9689                    < en_aux9				DB		0
      60.  00:9689                    < en_aux10			DB		0
      61.  00:9689                    < en_aux11			DB		0
      62.  00:9689                    < 	ENDSTRUCT;ESTRUCTURA_EXTRA
      63.  00:9689                      
      64.  00:9689                      
      65.  00:9689                      
      66.  00:9689                      
      67.  00:9689                      
      68.  00:9689                      
      69.  00:9689                      
     128   00:9689                      	
     129   00:9689                      ;;=====================================================
     130   00:9689                      ;;DEFINICIÓN DE VARIABLES
     131   00:9689                      ;;=====================================================		
     132   00:9689                      	include "sprites.asm"
       1.  00:9689                      ;;=====================================================
       2.  00:9689                      ;;DEFINICIÓN DE SPRITES
       3.  00:9689                      ;;=====================================================	
       4.  00:9689                      
       5.  00:9689                      
       6.  00:9689                      ;; NOTA:
       7.  00:9689                      ;~ sprite_reliquia_oracion: on/off
       8.  00:9689                      ;~ sprite_reliquia_cruz: on/off
       9.  00:9689                      ;~ sprite_reliquia_agua: on/off
      10.  00:9689                      ;~ sprite_peto: on/off
      11.  00:9689                      ;~ sprite_planta: on/off
      12.  00:9689                      ;~ sprite_vida_extra: on/off
      13.  00:9689                      ;~ sprite_ballesta_mejorada: on/off
      14.  00:9689                      
      15.  00:9689                      ;~ iban a ser sprites pero por falta de recursos serán tiles
      16.  00:9689                      
      17.  00:9689                      
      18.  00:9689                      sprites_pantantalla:
      19.  00:9689                      
      20.  00:9689                      ;; PARTE 1: SPRITES COMUNES
      21.  00:9689                      
      22.  00:9689                      sprites_comunes:
      23.  00:9689                      sprite_punto_mira_1:	;color 8
      24.  00:9689                      	db #FF,#FF,#C0,#C0,#C0,#C0,#C0,#C0
      24.  00:9689  FF FF C0 C0 C0 C0 C0 C0 
      25.  00:9691                      	db #C0,#C0,#C0,#C0,#C0,#C0,#FF,#FF
      25.  00:9691  C0 C0 C0 C0 C0 C0 FF FF 
      26.  00:9699                      	db #FF,#FF,#03,#03,#03,#03,#03,#03
      26.  00:9699  FF FF 03 03 03 03 03 03 
      27.  00:96A1                      	db #03,#03,#03,#03,#03,#03,#FF,#FF
      27.  00:96A1  03 03 03 03 03 03 FF FF 
      28.  00:96A9                      	
      29.  00:96A9                      sprite_punto_mira_2: 	;color 15
      30.  00:96A9                      	db #00,#00,#00,#00,#0F,#0F,#0C,#0C
      30.  00:96A9  00 00 00 00 0F 0F 0C 0C 
      31.  00:96B1                      	db #0C,#0C,#0F,#0F,#00,#00,#00,#00
      31.  00:96B1  0C 0C 0F 0F 00 00 00 00 
      32.  00:96B9                      	db #00,#00,#00,#00,#F0,#F0,#30,#30
      32.  00:96B9  00 00 00 00 F0 F0 30 30 
      33.  00:96C1                      	db #30,#30,#F0,#F0,#00,#00,#00,#00
      33.  00:96C1  30 30 F0 F0 00 00 00 00 
      34.  00:96C9                      	
      35.  00:96C9                      sprite_punto_mira_1_mejorado:
      36.  00:96C9                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      36.  00:96C9  FF FF FF FF FF FF FF FF 
      37.  00:96D1                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      37.  00:96D1  FF FF FF FF FF FF FF FF 
      38.  00:96D9                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      38.  00:96D9  FF FF FF FF FF FF FF FF 
      39.  00:96E1                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      39.  00:96E1  FF FF FF FF FF FF FF FF 
      40.  00:96E9                      
      41.  00:96E9                      sprite_punto_mira_2_mejorado:
      42.  00:96E9                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      42.  00:96E9  FF FF FF FF FF FF FF FF 
      43.  00:96F1                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      43.  00:96F1  FF FF FF FF FF FF FF FF 
      44.  00:96F9                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      44.  00:96F9  FF FF FF FF FF FF FF FF 
      45.  00:9701                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      45.  00:9701  FF FF FF FF FF FF FF FF 
      46.  00:9709                      	
      47.  00:9709                      sprite_explosion_1:
      48.  00:9709                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      48.  00:9709  FF FF FF FF FF FF FF FF 
      49.  00:9711                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      49.  00:9711  FF FF FF FF FF FF FF FF 
      50.  00:9719                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      50.  00:9719  FF FF FF FF FF FF FF FF 
      51.  00:9721                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF	
      51.  00:9721  FF FF FF FF FF FF FF FF 
      52.  00:9729                      
      53.  00:9729                      sprite_explosion_2:
      54.  00:9729                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      54.  00:9729  FF FF FF FF FF FF FF FF 
      55.  00:9731                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      55.  00:9731  FF FF FF FF FF FF FF FF 
      56.  00:9739                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      56.  00:9739  FF FF FF FF FF FF FF FF 
      57.  00:9741                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF	
      57.  00:9741  FF FF FF FF FF FF FF FF 
      58.  00:9749                      fin_sprites_comunes:
      59.  00:9749                      
      60.  00:9749                      ;; PARTE 2: SPRITES NO COMUNES
      61.  00:9749                      
      62.  00:9749                      ;; ARAÑA
      63.  00:9749                      	
      64.  00:9749                      sprite_arana1_1:
      65.  00:9749                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      65.  00:9749  FF FF FF FF FF FF FF FF 
      66.  00:9751                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      66.  00:9751  FF FF FF FF FF FF FF FF 
      67.  00:9759                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      67.  00:9759  FF FF FF FF FF FF FF FF 
      68.  00:9761                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      68.  00:9761  FF FF FF FF FF FF FF FF 
      69.  00:9769                      	
      70.  00:9769                      sprite_arana1_2:
      71.  00:9769                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      71.  00:9769  FF FF FF FF FF FF FF FF 
      72.  00:9771                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      72.  00:9771  FF FF FF FF FF FF FF FF 
      73.  00:9779                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      73.  00:9779  FF FF FF FF FF FF FF FF 
      74.  00:9781                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      74.  00:9781  FF FF FF FF FF FF FF FF 
      75.  00:9789                      
      76.  00:9789                      ;; MURCIELAGO
      77.  00:9789                      	
      78.  00:9789                      sprite_murcielago1_1:
      79.  00:9789                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      79.  00:9789  FF FF FF FF FF FF FF FF 
      80.  00:9791                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      80.  00:9791  FF FF FF FF FF FF FF FF 
      81.  00:9799                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      81.  00:9799  FF FF FF FF FF FF FF FF 
      82.  00:97A1                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      82.  00:97A1  FF FF FF FF FF FF FF FF 
      83.  00:97A9                      	
      84.  00:97A9                      sprite_murcielago1_2:
      85.  00:97A9                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      85.  00:97A9  FF FF FF FF FF FF FF FF 
      86.  00:97B1                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      86.  00:97B1  FF FF FF FF FF FF FF FF 
      87.  00:97B9                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      87.  00:97B9  FF FF FF FF FF FF FF FF 
      88.  00:97C1                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF	
      88.  00:97C1  FF FF FF FF FF FF FF FF 
      89.  00:97C9                      
      90.  00:97C9                      ;; SERPIENTE
      91.  00:97C9                      
      92.  00:97C9                      sprite_serpiente1_1:
      93.  00:97C9                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      93.  00:97C9  FF FF FF FF FF FF FF FF 
      94.  00:97D1                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      94.  00:97D1  FF FF FF FF FF FF FF FF 
      95.  00:97D9                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      95.  00:97D9  FF FF FF FF FF FF FF FF 
      96.  00:97E1                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      96.  00:97E1  FF FF FF FF FF FF FF FF 
      97.  00:97E9                      	
      98.  00:97E9                      sprite_serpiente1_2:
      99.  00:97E9                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      99.  00:97E9  FF FF FF FF FF FF FF FF 
     100.  00:97F1                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     100.  00:97F1  FF FF FF FF FF FF FF FF 
     101.  00:97F9                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     101.  00:97F9  FF FF FF FF FF FF FF FF 
     102.  00:9801                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     102.  00:9801  FF FF FF FF FF FF FF FF 
     103.  00:9809                      	
     104.  00:9809                      sprite_serpiente2_1:
     105.  00:9809                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     105.  00:9809  FF FF FF FF FF FF FF FF 
     106.  00:9811                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     106.  00:9811  FF FF FF FF FF FF FF FF 
     107.  00:9819                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     107.  00:9819  FF FF FF FF FF FF FF FF 
     108.  00:9821                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     108.  00:9821  FF FF FF FF FF FF FF FF 
     109.  00:9829                      	
     110.  00:9829                      sprite_serpiente2_2:
     111.  00:9829                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     111.  00:9829  FF FF FF FF FF FF FF FF 
     112.  00:9831                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     112.  00:9831  FF FF FF FF FF FF FF FF 
     113.  00:9839                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     113.  00:9839  FF FF FF FF FF FF FF FF 
     114.  00:9841                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     114.  00:9841  FF FF FF FF FF FF FF FF 
     115.  00:9849                      
     116.  00:9849                      ;; ZOMBI
     117.  00:9849                      
     118.  00:9849                      sprite_zombi1_1_1:
     119.  00:9849                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     119.  00:9849  FF FF FF FF FF FF FF FF 
     120.  00:9851                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     120.  00:9851  FF FF FF FF FF FF FF FF 
     121.  00:9859                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     121.  00:9859  FF FF FF FF FF FF FF FF 
     122.  00:9861                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     122.  00:9861  FF FF FF FF FF FF FF FF 
     123.  00:9869                      
     124.  00:9869                      sprite_zombi1_2_1:
     125.  00:9869                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     125.  00:9869  FF FF FF FF FF FF FF FF 
     126.  00:9871                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     126.  00:9871  FF FF FF FF FF FF FF FF 
     127.  00:9879                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     127.  00:9879  FF FF FF FF FF FF FF FF 
     128.  00:9881                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     128.  00:9881  FF FF FF FF FF FF FF FF 
     129.  00:9889                      	
     130.  00:9889                      sprite_zombi1_3_1:
     131.  00:9889                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     131.  00:9889  FF FF FF FF FF FF FF FF 
     132.  00:9891                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     132.  00:9891  FF FF FF FF FF FF FF FF 
     133.  00:9899                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     133.  00:9899  FF FF FF FF FF FF FF FF 
     134.  00:98A1                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     134.  00:98A1  FF FF FF FF FF FF FF FF 
     135.  00:98A9                      	
     136.  00:98A9                      sprite_zombi1_4_1:
     137.  00:98A9                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     137.  00:98A9  FF FF FF FF FF FF FF FF 
     138.  00:98B1                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     138.  00:98B1  FF FF FF FF FF FF FF FF 
     139.  00:98B9                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     139.  00:98B9  FF FF FF FF FF FF FF FF 
     140.  00:98C1                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     140.  00:98C1  FF FF FF FF FF FF FF FF 
     141.  00:98C9                      	
     142.  00:98C9                      sprite_zombi1_1_2:
     143.  00:98C9                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     143.  00:98C9  FF FF FF FF FF FF FF FF 
     144.  00:98D1                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     144.  00:98D1  FF FF FF FF FF FF FF FF 
     145.  00:98D9                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     145.  00:98D9  FF FF FF FF FF FF FF FF 
     146.  00:98E1                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     146.  00:98E1  FF FF FF FF FF FF FF FF 
     147.  00:98E9                      
     148.  00:98E9                      sprite_zombi1_2_2:
     149.  00:98E9                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     149.  00:98E9  FF FF FF FF FF FF FF FF 
     150.  00:98F1                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     150.  00:98F1  FF FF FF FF FF FF FF FF 
     151.  00:98F9                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     151.  00:98F9  FF FF FF FF FF FF FF FF 
     152.  00:9901                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     152.  00:9901  FF FF FF FF FF FF FF FF 
     153.  00:9909                      	
     154.  00:9909                      sprite_zombi1_3_2:
     155.  00:9909                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     155.  00:9909  FF FF FF FF FF FF FF FF 
     156.  00:9911                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     156.  00:9911  FF FF FF FF FF FF FF FF 
     157.  00:9919                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     157.  00:9919  FF FF FF FF FF FF FF FF 
     158.  00:9921                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     158.  00:9921  FF FF FF FF FF FF FF FF 
     159.  00:9929                      	
     160.  00:9929                      sprite_zombi1_4_2:
     161.  00:9929                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     161.  00:9929  FF FF FF FF FF FF FF FF 
     162.  00:9931                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     162.  00:9931  FF FF FF FF FF FF FF FF 
     163.  00:9939                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     163.  00:9939  FF FF FF FF FF FF FF FF 
     164.  00:9941                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     164.  00:9941  FF FF FF FF FF FF FF FF 
     165.  00:9949                      	
     166.  00:9949                      sprite_zombi2_1_1:
     167.  00:9949                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     167.  00:9949  FF FF FF FF FF FF FF FF 
     168.  00:9951                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     168.  00:9951  FF FF FF FF FF FF FF FF 
     169.  00:9959                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     169.  00:9959  FF FF FF FF FF FF FF FF 
     170.  00:9961                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     170.  00:9961  FF FF FF FF FF FF FF FF 
     171.  00:9969                      
     172.  00:9969                      sprite_zombi2_2_1:
     173.  00:9969                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     173.  00:9969  FF FF FF FF FF FF FF FF 
     174.  00:9971                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     174.  00:9971  FF FF FF FF FF FF FF FF 
     175.  00:9979                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     175.  00:9979  FF FF FF FF FF FF FF FF 
     176.  00:9981                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     176.  00:9981  FF FF FF FF FF FF FF FF 
     177.  00:9989                      	
     178.  00:9989                      sprite_zombi2_3_1:
     179.  00:9989                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     179.  00:9989  FF FF FF FF FF FF FF FF 
     180.  00:9991                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     180.  00:9991  FF FF FF FF FF FF FF FF 
     181.  00:9999                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     181.  00:9999  FF FF FF FF FF FF FF FF 
     182.  00:99A1                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     182.  00:99A1  FF FF FF FF FF FF FF FF 
     183.  00:99A9                      	
     184.  00:99A9                      sprite_zombi2_4_1:
     185.  00:99A9                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     185.  00:99A9  FF FF FF FF FF FF FF FF 
     186.  00:99B1                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     186.  00:99B1  FF FF FF FF FF FF FF FF 
     187.  00:99B9                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     187.  00:99B9  FF FF FF FF FF FF FF FF 
     188.  00:99C1                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     188.  00:99C1  FF FF FF FF FF FF FF FF 
     189.  00:99C9                      	
     190.  00:99C9                      sprite_zombi2_1_2:
     191.  00:99C9                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     191.  00:99C9  FF FF FF FF FF FF FF FF 
     192.  00:99D1                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     192.  00:99D1  FF FF FF FF FF FF FF FF 
     193.  00:99D9                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     193.  00:99D9  FF FF FF FF FF FF FF FF 
     194.  00:99E1                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     194.  00:99E1  FF FF FF FF FF FF FF FF 
     195.  00:99E9                      
     196.  00:99E9                      sprite_zombi2_2_2:
     197.  00:99E9                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     197.  00:99E9  FF FF FF FF FF FF FF FF 
     198.  00:99F1                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     198.  00:99F1  FF FF FF FF FF FF FF FF 
     199.  00:99F9                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     199.  00:99F9  FF FF FF FF FF FF FF FF 
     200.  00:9A01                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     200.  00:9A01  FF FF FF FF FF FF FF FF 
     201.  00:9A09                      	
     202.  00:9A09                      sprite_zombi2_3_2:
     203.  00:9A09                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     203.  00:9A09  FF FF FF FF FF FF FF FF 
     204.  00:9A11                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     204.  00:9A11  FF FF FF FF FF FF FF FF 
     205.  00:9A19                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     205.  00:9A19  FF FF FF FF FF FF FF FF 
     206.  00:9A21                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     206.  00:9A21  FF FF FF FF FF FF FF FF 
     207.  00:9A29                      	
     208.  00:9A29                      sprite_zombi2_4_2:
     209.  00:9A29                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     209.  00:9A29  FF FF FF FF FF FF FF FF 
     210.  00:9A31                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     210.  00:9A31  FF FF FF FF FF FF FF FF 
     211.  00:9A39                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     211.  00:9A39  FF FF FF FF FF FF FF FF 
     212.  00:9A41                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     212.  00:9A41  FF FF FF FF FF FF FF FF 
     213.  00:9A49                      	
     214.  00:9A49                      ;; CABALLERO
     215.  00:9A49                      
     216.  00:9A49                      sprite_caballero1_1_1:
     217.  00:9A49                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     217.  00:9A49  FF FF FF FF FF FF FF FF 
     218.  00:9A51                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     218.  00:9A51  FF FF FF FF FF FF FF FF 
     219.  00:9A59                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     219.  00:9A59  FF FF FF FF FF FF FF FF 
     220.  00:9A61                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     220.  00:9A61  FF FF FF FF FF FF FF FF 
     221.  00:9A69                      
     222.  00:9A69                      sprite_caballero1_2_1:
     223.  00:9A69                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     223.  00:9A69  FF FF FF FF FF FF FF FF 
     224.  00:9A71                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     224.  00:9A71  FF FF FF FF FF FF FF FF 
     225.  00:9A79                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     225.  00:9A79  FF FF FF FF FF FF FF FF 
     226.  00:9A81                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     226.  00:9A81  FF FF FF FF FF FF FF FF 
     227.  00:9A89                      	
     228.  00:9A89                      sprite_caballero1_3_1:
     229.  00:9A89                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     229.  00:9A89  FF FF FF FF FF FF FF FF 
     230.  00:9A91                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     230.  00:9A91  FF FF FF FF FF FF FF FF 
     231.  00:9A99                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     231.  00:9A99  FF FF FF FF FF FF FF FF 
     232.  00:9AA1                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     232.  00:9AA1  FF FF FF FF FF FF FF FF 
     233.  00:9AA9                      	
     234.  00:9AA9                      sprite_caballero1_4_1:
     235.  00:9AA9                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     235.  00:9AA9  FF FF FF FF FF FF FF FF 
     236.  00:9AB1                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     236.  00:9AB1  FF FF FF FF FF FF FF FF 
     237.  00:9AB9                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     237.  00:9AB9  FF FF FF FF FF FF FF FF 
     238.  00:9AC1                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     238.  00:9AC1  FF FF FF FF FF FF FF FF 
     239.  00:9AC9                      	
     240.  00:9AC9                      sprite_caballero1_1_2:
     241.  00:9AC9                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     241.  00:9AC9  FF FF FF FF FF FF FF FF 
     242.  00:9AD1                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     242.  00:9AD1  FF FF FF FF FF FF FF FF 
     243.  00:9AD9                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     243.  00:9AD9  FF FF FF FF FF FF FF FF 
     244.  00:9AE1                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     244.  00:9AE1  FF FF FF FF FF FF FF FF 
     245.  00:9AE9                      
     246.  00:9AE9                      sprite_caballero1_2_2:
     247.  00:9AE9                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     247.  00:9AE9  FF FF FF FF FF FF FF FF 
     248.  00:9AF1                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     248.  00:9AF1  FF FF FF FF FF FF FF FF 
     249.  00:9AF9                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     249.  00:9AF9  FF FF FF FF FF FF FF FF 
     250.  00:9B01                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     250.  00:9B01  FF FF FF FF FF FF FF FF 
     251.  00:9B09                      	
     252.  00:9B09                      sprite_caballero1_3_2:
     253.  00:9B09                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     253.  00:9B09  FF FF FF FF FF FF FF FF 
     254.  00:9B11                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     254.  00:9B11  FF FF FF FF FF FF FF FF 
     255.  00:9B19                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     255.  00:9B19  FF FF FF FF FF FF FF FF 
     256.  00:9B21                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     256.  00:9B21  FF FF FF FF FF FF FF FF 
     257.  00:9B29                      	
     258.  00:9B29                      sprite_caballero1_4_2:
     259.  00:9B29                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     259.  00:9B29  FF FF FF FF FF FF FF FF 
     260.  00:9B31                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     260.  00:9B31  FF FF FF FF FF FF FF FF 
     261.  00:9B39                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     261.  00:9B39  FF FF FF FF FF FF FF FF 
     262.  00:9B41                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     262.  00:9B41  FF FF FF FF FF FF FF FF 
     263.  00:9B49                      	
     264.  00:9B49                      sprite_caballero2_1_1:
     265.  00:9B49                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     265.  00:9B49  FF FF FF FF FF FF FF FF 
     266.  00:9B51                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     266.  00:9B51  FF FF FF FF FF FF FF FF 
     267.  00:9B59                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     267.  00:9B59  FF FF FF FF FF FF FF FF 
     268.  00:9B61                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     268.  00:9B61  FF FF FF FF FF FF FF FF 
     269.  00:9B69                      
     270.  00:9B69                      sprite_caballero2_2_1:
     271.  00:9B69                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     271.  00:9B69  FF FF FF FF FF FF FF FF 
     272.  00:9B71                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     272.  00:9B71  FF FF FF FF FF FF FF FF 
     273.  00:9B79                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     273.  00:9B79  FF FF FF FF FF FF FF FF 
     274.  00:9B81                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     274.  00:9B81  FF FF FF FF FF FF FF FF 
     275.  00:9B89                      	
     276.  00:9B89                      sprite_caballero2_3_1:
     277.  00:9B89                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     277.  00:9B89  FF FF FF FF FF FF FF FF 
     278.  00:9B91                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     278.  00:9B91  FF FF FF FF FF FF FF FF 
     279.  00:9B99                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     279.  00:9B99  FF FF FF FF FF FF FF FF 
     280.  00:9BA1                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     280.  00:9BA1  FF FF FF FF FF FF FF FF 
     281.  00:9BA9                      	
     282.  00:9BA9                      sprite_caballero2_4_1:
     283.  00:9BA9                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     283.  00:9BA9  FF FF FF FF FF FF FF FF 
     284.  00:9BB1                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     284.  00:9BB1  FF FF FF FF FF FF FF FF 
     285.  00:9BB9                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     285.  00:9BB9  FF FF FF FF FF FF FF FF 
     286.  00:9BC1                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     286.  00:9BC1  FF FF FF FF FF FF FF FF 
     287.  00:9BC9                      	
     288.  00:9BC9                      sprite_caballero2_1_2:
     289.  00:9BC9                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     289.  00:9BC9  FF FF FF FF FF FF FF FF 
     290.  00:9BD1                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     290.  00:9BD1  FF FF FF FF FF FF FF FF 
     291.  00:9BD9                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     291.  00:9BD9  FF FF FF FF FF FF FF FF 
     292.  00:9BE1                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     292.  00:9BE1  FF FF FF FF FF FF FF FF 
     293.  00:9BE9                      
     294.  00:9BE9                      sprite_caballero2_2_2:
     295.  00:9BE9                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     295.  00:9BE9  FF FF FF FF FF FF FF FF 
     296.  00:9BF1                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     296.  00:9BF1  FF FF FF FF FF FF FF FF 
     297.  00:9BF9                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     297.  00:9BF9  FF FF FF FF FF FF FF FF 
     298.  00:9C01                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     298.  00:9C01  FF FF FF FF FF FF FF FF 
     299.  00:9C09                      	
     300.  00:9C09                      sprite_caballero2_3_2:
     301.  00:9C09                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     301.  00:9C09  FF FF FF FF FF FF FF FF 
     302.  00:9C11                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     302.  00:9C11  FF FF FF FF FF FF FF FF 
     303.  00:9C19                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     303.  00:9C19  FF FF FF FF FF FF FF FF 
     304.  00:9C21                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     304.  00:9C21  FF FF FF FF FF FF FF FF 
     305.  00:9C29                      	
     306.  00:9C29                      sprite_caballero2_4_2:
     307.  00:9C29                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     307.  00:9C29  FF FF FF FF FF FF FF FF 
     308.  00:9C31                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     308.  00:9C31  FF FF FF FF FF FF FF FF 
     309.  00:9C39                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     309.  00:9C39  FF FF FF FF FF FF FF FF 
     310.  00:9C41                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     310.  00:9C41  FF FF FF FF FF FF FF FF 
     311.  00:9C49                      	
     312.  00:9C49                      ;; LLAMA
     313.  00:9C49                      
     314.  00:9C49                      sprite_llama1_1:	
     315.  00:9C49                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     315.  00:9C49  FF FF FF FF FF FF FF FF 
     316.  00:9C51                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     316.  00:9C51  FF FF FF FF FF FF FF FF 
     317.  00:9C59                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     317.  00:9C59  FF FF FF FF FF FF FF FF 
     318.  00:9C61                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     318.  00:9C61  FF FF FF FF FF FF FF FF 
     319.  00:9C69                      	
     320.  00:9C69                      sprite_llama2_1:	
     321.  00:9C69                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     321.  00:9C69  FF FF FF FF FF FF FF FF 
     322.  00:9C71                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     322.  00:9C71  FF FF FF FF FF FF FF FF 
     323.  00:9C79                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     323.  00:9C79  FF FF FF FF FF FF FF FF 
     324.  00:9C81                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF	
     324.  00:9C81  FF FF FF FF FF FF FF FF 
     325.  00:9C89                      	
     326.  00:9C89                      sprite_llama1_2:	
     327.  00:9C89                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     327.  00:9C89  FF FF FF FF FF FF FF FF 
     328.  00:9C91                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     328.  00:9C91  FF FF FF FF FF FF FF FF 
     329.  00:9C99                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     329.  00:9C99  FF FF FF FF FF FF FF FF 
     330.  00:9CA1                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     330.  00:9CA1  FF FF FF FF FF FF FF FF 
     331.  00:9CA9                      	
     332.  00:9CA9                      sprite_llama2_2:	
     333.  00:9CA9                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     333.  00:9CA9  FF FF FF FF FF FF FF FF 
     334.  00:9CB1                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     334.  00:9CB1  FF FF FF FF FF FF FF FF 
     335.  00:9CB9                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     335.  00:9CB9  FF FF FF FF FF FF FF FF 
     336.  00:9CC1                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF			
     336.  00:9CC1  FF FF FF FF FF FF FF FF 
     337.  00:9CC9                      	
     338.  00:9CC9                      ;; FANTASMA
     339.  00:9CC9                      
     340.  00:9CC9                      sprite_fantasma1_1:
     341.  00:9CC9                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     341.  00:9CC9  FF FF FF FF FF FF FF FF 
     342.  00:9CD1                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     342.  00:9CD1  FF FF FF FF FF FF FF FF 
     343.  00:9CD9                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     343.  00:9CD9  FF FF FF FF FF FF FF FF 
     344.  00:9CE1                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     344.  00:9CE1  FF FF FF FF FF FF FF FF 
     345.  00:9CE9                      
     346.  00:9CE9                      sprite_fantasma2_1:
     347.  00:9CE9                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     347.  00:9CE9  FF FF FF FF FF FF FF FF 
     348.  00:9CF1                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     348.  00:9CF1  FF FF FF FF FF FF FF FF 
     349.  00:9CF9                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     349.  00:9CF9  FF FF FF FF FF FF FF FF 
     350.  00:9D01                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     350.  00:9D01  FF FF FF FF FF FF FF FF 
     351.  00:9D09                      
     352.  00:9D09                      sprite_fantasma1_2:
     353.  00:9D09                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     353.  00:9D09  FF FF FF FF FF FF FF FF 
     354.  00:9D11                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     354.  00:9D11  FF FF FF FF FF FF FF FF 
     355.  00:9D19                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     355.  00:9D19  FF FF FF FF FF FF FF FF 
     356.  00:9D21                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     356.  00:9D21  FF FF FF FF FF FF FF FF 
     357.  00:9D29                      
     358.  00:9D29                      sprite_fantasma2_2:
     359.  00:9D29                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     359.  00:9D29  FF FF FF FF FF FF FF FF 
     360.  00:9D31                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     360.  00:9D31  FF FF FF FF FF FF FF FF 
     361.  00:9D39                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     361.  00:9D39  FF FF FF FF FF FF FF FF 
     362.  00:9D41                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF	
     362.  00:9D41  FF FF FF FF FF FF FF FF 
     363.  00:9D49                      	
     364.  00:9D49                      ;; MAGIA
     365.  00:9D49                      
     366.  00:9D49                      sprite_magia1_1:
     367.  00:9D49                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     367.  00:9D49  FF FF FF FF FF FF FF FF 
     368.  00:9D51                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     368.  00:9D51  FF FF FF FF FF FF FF FF 
     369.  00:9D59                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     369.  00:9D59  FF FF FF FF FF FF FF FF 
     370.  00:9D61                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     370.  00:9D61  FF FF FF FF FF FF FF FF 
     371.  00:9D69                      
     372.  00:9D69                      sprite_magia2_1:
     373.  00:9D69                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     373.  00:9D69  FF FF FF FF FF FF FF FF 
     374.  00:9D71                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     374.  00:9D71  FF FF FF FF FF FF FF FF 
     375.  00:9D79                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     375.  00:9D79  FF FF FF FF FF FF FF FF 
     376.  00:9D81                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     376.  00:9D81  FF FF FF FF FF FF FF FF 
     377.  00:9D89                      
     378.  00:9D89                      sprite_magia1_2:
     379.  00:9D89                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     379.  00:9D89  FF FF FF FF FF FF FF FF 
     380.  00:9D91                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     380.  00:9D91  FF FF FF FF FF FF FF FF 
     381.  00:9D99                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     381.  00:9D99  FF FF FF FF FF FF FF FF 
     382.  00:9DA1                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     382.  00:9DA1  FF FF FF FF FF FF FF FF 
     383.  00:9DA9                      
     384.  00:9DA9                      sprite_magia2_2:
     385.  00:9DA9                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     385.  00:9DA9  FF FF FF FF FF FF FF FF 
     386.  00:9DB1                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     386.  00:9DB1  FF FF FF FF FF FF FF FF 
     387.  00:9DB9                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     387.  00:9DB9  FF FF FF FF FF FF FF FF 
     388.  00:9DC1                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF	
     388.  00:9DC1  FF FF FF FF FF FF FF FF 
     389.  00:9DC9                      	
     390.  00:9DC9                      	
     391.  00:9DC9                      ;; BEHOLDER
     392.  00:9DC9                      
     393.  00:9DC9                      sprite_beholder1_1:
     394.  00:9DC9                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     394.  00:9DC9  FF FF FF FF FF FF FF FF 
     395.  00:9DD1                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     395.  00:9DD1  FF FF FF FF FF FF FF FF 
     396.  00:9DD9                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     396.  00:9DD9  FF FF FF FF FF FF FF FF 
     397.  00:9DE1                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     397.  00:9DE1  FF FF FF FF FF FF FF FF 
     398.  00:9DE9                      
     399.  00:9DE9                      sprite_beholder2_1:
     400.  00:9DE9                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     400.  00:9DE9  FF FF FF FF FF FF FF FF 
     401.  00:9DF1                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     401.  00:9DF1  FF FF FF FF FF FF FF FF 
     402.  00:9DF9                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     402.  00:9DF9  FF FF FF FF FF FF FF FF 
     403.  00:9E01                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     403.  00:9E01  FF FF FF FF FF FF FF FF 
     404.  00:9E09                      
     405.  00:9E09                      sprite_beholder3_1:
     406.  00:9E09                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     406.  00:9E09  FF FF FF FF FF FF FF FF 
     407.  00:9E11                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     407.  00:9E11  FF FF FF FF FF FF FF FF 
     408.  00:9E19                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     408.  00:9E19  FF FF FF FF FF FF FF FF 
     409.  00:9E21                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     409.  00:9E21  FF FF FF FF FF FF FF FF 
     410.  00:9E29                      
     411.  00:9E29                      sprite_beholder4_1:
     412.  00:9E29                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     412.  00:9E29  FF FF FF FF FF FF FF FF 
     413.  00:9E31                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     413.  00:9E31  FF FF FF FF FF FF FF FF 
     414.  00:9E39                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     414.  00:9E39  FF FF FF FF FF FF FF FF 
     415.  00:9E41                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF	
     415.  00:9E41  FF FF FF FF FF FF FF FF 
     416.  00:9E49                      	
     417.  00:9E49                      sprite_beholder1_2:
     418.  00:9E49                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     418.  00:9E49  FF FF FF FF FF FF FF FF 
     419.  00:9E51                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     419.  00:9E51  FF FF FF FF FF FF FF FF 
     420.  00:9E59                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     420.  00:9E59  FF FF FF FF FF FF FF FF 
     421.  00:9E61                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     421.  00:9E61  FF FF FF FF FF FF FF FF 
     422.  00:9E69                      
     423.  00:9E69                      sprite_beholder2_2:
     424.  00:9E69                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     424.  00:9E69  FF FF FF FF FF FF FF FF 
     425.  00:9E71                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     425.  00:9E71  FF FF FF FF FF FF FF FF 
     426.  00:9E79                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     426.  00:9E79  FF FF FF FF FF FF FF FF 
     427.  00:9E81                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     427.  00:9E81  FF FF FF FF FF FF FF FF 
     428.  00:9E89                      
     429.  00:9E89                      sprite_beholder3_2:
     430.  00:9E89                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     430.  00:9E89  FF FF FF FF FF FF FF FF 
     431.  00:9E91                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     431.  00:9E91  FF FF FF FF FF FF FF FF 
     432.  00:9E99                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     432.  00:9E99  FF FF FF FF FF FF FF FF 
     433.  00:9EA1                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     433.  00:9EA1  FF FF FF FF FF FF FF FF 
     434.  00:9EA9                      
     435.  00:9EA9                      sprite_beholder4_2:
     436.  00:9EA9                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     436.  00:9EA9  FF FF FF FF FF FF FF FF 
     437.  00:9EB1                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     437.  00:9EB1  FF FF FF FF FF FF FF FF 
     438.  00:9EB9                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     438.  00:9EB9  FF FF FF FF FF FF FF FF 
     439.  00:9EC1                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF		
     439.  00:9EC1  FF FF FF FF FF FF FF FF 
     440.  00:9EC9                      	
     441.  00:9EC9                      ;; VAMPIRO
     442.  00:9EC9                      
     443.  00:9EC9                      sprite_vampiro1_1:
     444.  00:9EC9                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     444.  00:9EC9  FF FF FF FF FF FF FF FF 
     445.  00:9ED1                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     445.  00:9ED1  FF FF FF FF FF FF FF FF 
     446.  00:9ED9                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     446.  00:9ED9  FF FF FF FF FF FF FF FF 
     447.  00:9EE1                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     447.  00:9EE1  FF FF FF FF FF FF FF FF 
     448.  00:9EE9                      
     449.  00:9EE9                      sprite_vampiro2_1:
     450.  00:9EE9                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     450.  00:9EE9  FF FF FF FF FF FF FF FF 
     451.  00:9EF1                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     451.  00:9EF1  FF FF FF FF FF FF FF FF 
     452.  00:9EF9                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     452.  00:9EF9  FF FF FF FF FF FF FF FF 
     453.  00:9F01                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     453.  00:9F01  FF FF FF FF FF FF FF FF 
     454.  00:9F09                      
     455.  00:9F09                      sprite_vampiro1_2:
     456.  00:9F09                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     456.  00:9F09  FF FF FF FF FF FF FF FF 
     457.  00:9F11                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     457.  00:9F11  FF FF FF FF FF FF FF FF 
     458.  00:9F19                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     458.  00:9F19  FF FF FF FF FF FF FF FF 
     459.  00:9F21                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     459.  00:9F21  FF FF FF FF FF FF FF FF 
     460.  00:9F29                      
     461.  00:9F29                      sprite_vampiro2_2:
     462.  00:9F29                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     462.  00:9F29  FF FF FF FF FF FF FF FF 
     463.  00:9F31                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     463.  00:9F31  FF FF FF FF FF FF FF FF 
     464.  00:9F39                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     464.  00:9F39  FF FF FF FF FF FF FF FF 
     465.  00:9F41                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     465.  00:9F41  FF FF FF FF FF FF FF FF 
     466.  00:9F49                      	
     467.  00:9F49                      ;; MANOIZQ
     468.  00:9F49                      
     469.  00:9F49                      sprite_manoizq1:
     470.  00:9F49                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     470.  00:9F49  FF FF FF FF FF FF FF FF 
     471.  00:9F51                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     471.  00:9F51  FF FF FF FF FF FF FF FF 
     472.  00:9F59                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     472.  00:9F59  FF FF FF FF FF FF FF FF 
     473.  00:9F61                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     473.  00:9F61  FF FF FF FF FF FF FF FF 
     474.  00:9F69                      	
     475.  00:9F69                      sprite_manoizq2:
     476.  00:9F69                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     476.  00:9F69  FF FF FF FF FF FF FF FF 
     477.  00:9F71                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     477.  00:9F71  FF FF FF FF FF FF FF FF 
     478.  00:9F79                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     478.  00:9F79  FF FF FF FF FF FF FF FF 
     479.  00:9F81                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     479.  00:9F81  FF FF FF FF FF FF FF FF 
     480.  00:9F89                      	
     481.  00:9F89                      sprite_manoizq3:
     482.  00:9F89                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     482.  00:9F89  FF FF FF FF FF FF FF FF 
     483.  00:9F91                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     483.  00:9F91  FF FF FF FF FF FF FF FF 
     484.  00:9F99                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     484.  00:9F99  FF FF FF FF FF FF FF FF 
     485.  00:9FA1                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF	
     485.  00:9FA1  FF FF FF FF FF FF FF FF 
     486.  00:9FA9                      	
     487.  00:9FA9                      ;; MANODER
     488.  00:9FA9                      
     489.  00:9FA9                      sprite_manoder1:
     490.  00:9FA9                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     490.  00:9FA9  FF FF FF FF FF FF FF FF 
     491.  00:9FB1                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     491.  00:9FB1  FF FF FF FF FF FF FF FF 
     492.  00:9FB9                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     492.  00:9FB9  FF FF FF FF FF FF FF FF 
     493.  00:9FC1                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     493.  00:9FC1  FF FF FF FF FF FF FF FF 
     494.  00:9FC9                      	
     495.  00:9FC9                      sprite_manoder2:
     496.  00:9FC9                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     496.  00:9FC9  FF FF FF FF FF FF FF FF 
     497.  00:9FD1                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     497.  00:9FD1  FF FF FF FF FF FF FF FF 
     498.  00:9FD9                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     498.  00:9FD9  FF FF FF FF FF FF FF FF 
     499.  00:9FE1                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     499.  00:9FE1  FF FF FF FF FF FF FF FF 
     500.  00:9FE9                      	
     501.  00:9FE9                      sprite_manoder3:
     502.  00:9FE9                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     502.  00:9FE9  FF FF FF FF FF FF FF FF 
     503.  00:9FF1                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     503.  00:9FF1  FF FF FF FF FF FF FF FF 
     504.  00:9FF9                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     504.  00:9FF9  FF FF FF FF FF FF FF FF 
     505.  00:A001                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF		
     505.  00:A001  FF FF FF FF FF FF FF FF 
     506.  00:A009                      	
     507.  00:A009                      	
     508.  00:A009                      	
     509.  00:A009                      	
     510.  00:A009                      	
     511.  00:A009                      	
     512.  00:A009                      	
     513.  00:A009                      	
     514.  00:A009                      	
     515.  00:A009                      	
     516.  00:A009                      	
     517.  00:A009                      	
     518.  00:A009                      	
     519.  00:A009                      	
     520.  00:A009                      	
     521.  00:A009                      	
     522.  00:A009                      	
     523.  00:A009                      	
     524.  00:A009                      	
     525.  00:A009                      	
     526.  00:A009                      	
     527.  00:A009                      	
     528.  00:A009                      	
     133   00:A009                      	
     134   00:A009                      	include "habitaciones.asm"
       1.  00:A009                      ;;=====================================================
       2.  00:A009                      ;;DEFINICIÓN DE HABITACIONES x NIVEL
       3.  00:A009                      ;;=====================================================	
       4.  00:A009                      
       5.  00:A009                      ; sólo voy a usar 7x7 pero como los arrays son lineales y voy a trabajar con matrices
       6.  00:A009                      ; me interesa que seande  8x8 aunque sólo trabaje con 7x7
       7.  00:A009                      
       8.  00:A009                      ; ojo... la primera linea corresponderá a la primera linea del castillo no a la última
       9.  00:A009                      
      10.  00:A009                      ;; definición de estructura de bits
      11.  00:A009                      ;16 bits por habitación
      12.  00:A009                      ;~ 0000 - nº puertas 1 arriba 1 derecha 1 abajo 1 izquierda
      13.  00:A009                      ;~ 1 - hay reliquia?
      14.  00:A009                      ;~ 1 - hay vida extra
      15.  00:A009                      ;~ 1 - hay arma extra (durará 6 pantallas - sonido distinto)
      16.  00:A009                      ;~ 1 - hay energía? (sobran bits ... se puede usar otro como carga energía +)
      17.  00:A009                      ;~ 1 - es pantalla de mostruo fin de fase?
      18.  00:A009                      ;~ 1 - es pantalla inicial (equivaldría a la puerta de un castillo)?
      19.  00:A009                      ;~ 1 - es pantalla final?
      20.  00:A009                      
      21.  00:A009                      
      22.  00:A009                      ;importante: el byte de la columna 15 indicará con 1 y 0 habitaciones por las que se haya pasado
      23.  00:A009                      ;cuando se inicie la partida todos se pondrán a 0
      24.  00:A009                      
      25.  00:A009                      habitacion_actual:
      26.  00:A009  00 00               	db  #00,#00		;habitación donde se encuentre el prota. Se mete en una varible par traer todos los datos de golpe y no buscrlos varias veces
      27.  00:A00B                      
      28.  00:A00B                      habitaciones_juego:
      29.  00:A00B                      habitaciones_nivel0:
      30.  00:A00B                      	db  00000000b,#00,00000001b,#01,00000010b,#02,00000011b,#03,00001000b,#04,00001001b,#05,00001100b,#06,#FF,#00 ;primera fila
      30.  00:A00B  00 00 01 01 02 02 03 03 08 04 09 05 0C 06 FF 00 
      31.  00:A01B                      	db  #17,#10,#11,#11,#12,#12,#13,#13,#14,#14,#15,#15,#16,#16,#FF,#00
      31.  00:A01B  17 10 11 11 12 12 13 13 14 14 15 15 16 16 FF 00 
      32.  00:A02B                      	db  #20,#20,#21,#21,#22,#22,#23,#23,#24,#24,#25,#25,#26,#26,#FF,#00
      32.  00:A02B  20 20 21 21 22 22 23 23 24 24 25 25 26 26 FF 00 
      33.  00:A03B                      	db  #30,#30,#31,#31,#32,#32,#33,#33,#34,#34,#35,#35,#36,#36,#FF,#00
      33.  00:A03B  30 30 31 31 32 32 33 33 34 34 35 35 36 36 FF 00 
      34.  00:A04B                      	db  00000000b,#00,00000001b,#01,00001111b,#02,00000011b,#03,00001000b,#04,00001001b,#05,00001100b,#06,#FF,#00
      34.  00:A04B  00 00 01 01 0F 02 03 03 08 04 09 05 0C 06 FF 00 
      35.  00:A05B                      	db  #50,#50,#51,#51,#52,#52,#53,#53,#54,#54,#55,#55,#56,#56,#FF,#00
      35.  00:A05B  50 50 51 51 52 52 53 53 54 54 55 55 56 56 FF 00 
      36.  00:A06B                      	db  00000000b,#00,00000001b,#01,00001111b,#02,00000011b,#03,00001000b,#04,00001001b,#05,00001100b,#06,#FF,#00	;ultima fila
      36.  00:A06B  00 00 01 01 0F 02 03 03 08 04 09 05 0C 06 FF 00 
      37.  00:A07B                      	
      38.  00:A07B                      habitaciones_nivel1:
      39.  00:A07B                      	db  00000000b,#00,00000001b,#01,00000010b,#02,00000011b,#03,00001000b,#04,00001001b,#05,00001100b,#06,#FF,#00 ;primera fila
      39.  00:A07B  00 00 01 01 02 02 03 03 08 04 09 05 0C 06 FF 00 
      40.  00:A08B                      	db  #17,#10,#11,#11,#12,#12,#13,#13,#14,#14,#15,#15,#16,#16,#FF,#00
      40.  00:A08B  17 10 11 11 12 12 13 13 14 14 15 15 16 16 FF 00 
      41.  00:A09B                      	db  #20,#20,#21,#21,#22,#22,#23,#23,#24,#24,#25,#25,#26,#26,#FF,#00
      41.  00:A09B  20 20 21 21 22 22 23 23 24 24 25 25 26 26 FF 00 
      42.  00:A0AB                      	db  #30,#30,#31,#31,#32,#32,#33,#33,#34,#34,#35,#35,#36,#36,#FF,#00
      42.  00:A0AB  30 30 31 31 32 32 33 33 34 34 35 35 36 36 FF 00 
      43.  00:A0BB                      	db  00000000b,#00,00000001b,#01,00001111b,#02,00000011b,#03,00001000b,#04,00001001b,#05,00001100b,#06,#FF,#00
      43.  00:A0BB  00 00 01 01 0F 02 03 03 08 04 09 05 0C 06 FF 00 
      44.  00:A0CB                      	db  #50,#50,#51,#51,#52,#52,#53,#53,#54,#54,#55,#55,#56,#56,#FF,#00
      44.  00:A0CB  50 50 51 51 52 52 53 53 54 54 55 55 56 56 FF 00 
      45.  00:A0DB                      	db  00000000b,#00,00000001b,#01,00000010b,#02,00000011b,#03,00001000b,#04,00001001b,#05,00001100b,#06,#FF,#00	;ultima fila
      45.  00:A0DB  00 00 01 01 02 02 03 03 08 04 09 05 0C 06 FF 00 
      46.  00:A0EB                      	
      47.  00:A0EB                      habitaciones_nivel2:
      48.  00:A0EB                      	db  00000000b,#00,00000001b,#01,00000010b,#02,00000011b,#03,00001000b,#04,00001001b,#05,00001100b,#06,#FF,#00 ;primera fila
      48.  00:A0EB  00 00 01 01 02 02 03 03 08 04 09 05 0C 06 FF 00 
      49.  00:A0FB                      	db  #17,#10,#11,#11,#12,#12,#13,#13,#14,#14,#15,#15,#16,#16,#FF,#00
      49.  00:A0FB  17 10 11 11 12 12 13 13 14 14 15 15 16 16 FF 00 
      50.  00:A10B                      	db  #20,#20,#21,#21,#22,#22,#23,#23,#24,#24,#25,#25,#26,#26,#FF,#00
      50.  00:A10B  20 20 21 21 22 22 23 23 24 24 25 25 26 26 FF 00 
      51.  00:A11B                      	db  #30,#30,#31,#31,#32,#32,#33,#33,#34,#34,#35,#35,#36,#36,#FF,#00
      51.  00:A11B  30 30 31 31 32 32 33 33 34 34 35 35 36 36 FF 00 
      52.  00:A12B                      	db  00000000b,#00,00000001b,#01,00001111b,#02,00000011b,#03,00001000b,#04,00001001b,#05,00001100b,#06,#FF,#00
      52.  00:A12B  00 00 01 01 0F 02 03 03 08 04 09 05 0C 06 FF 00 
      53.  00:A13B                      	db  #50,#50,#51,#51,#52,#52,#53,#53,#54,#54,#55,#55,#56,#56,#FF,#00
      53.  00:A13B  50 50 51 51 52 52 53 53 54 54 55 55 56 56 FF 00 
      54.  00:A14B                      	db  00000000b,#00,00000001b,#01,00000010b,#02,00000011b,#03,00001000b,#04,00001001b,#05,00001100b,#06,#FF,#00	;ultima fila
      54.  00:A14B  00 00 01 01 02 02 03 03 08 04 09 05 0C 06 FF 00 
      55.  00:A15B                      	
      56.  00:A15B                      habitaciones_nivel3:
      57.  00:A15B                      	db  00000000b,#00,00000001b,#01,00000010b,#02,00000011b,#03,00001000b,#04,00001001b,#05,00001100b,#06,#FF,#00 ;primera fila
      57.  00:A15B  00 00 01 01 02 02 03 03 08 04 09 05 0C 06 FF 00 
      58.  00:A16B                      	db  #17,#10,#11,#11,#12,#12,#13,#13,#14,#14,#15,#15,#16,#16,#FF,#00
      58.  00:A16B  17 10 11 11 12 12 13 13 14 14 15 15 16 16 FF 00 
      59.  00:A17B                      	db  #20,#20,#21,#21,#22,#22,#23,#23,#24,#24,#25,#25,#26,#26,#FF,#00
      59.  00:A17B  20 20 21 21 22 22 23 23 24 24 25 25 26 26 FF 00 
      60.  00:A18B                      	db  #30,#30,#31,#31,#32,#32,#33,#33,#34,#34,#35,#35,#36,#36,#FF,#00
      60.  00:A18B  30 30 31 31 32 32 33 33 34 34 35 35 36 36 FF 00 
      61.  00:A19B                      	db  00000000b,#00,00000001b,#01,00001111b,#02,00000011b,#03,00001000b,#04,00001001b,#05,00001100b,#06,#FF,#00
      61.  00:A19B  00 00 01 01 0F 02 03 03 08 04 09 05 0C 06 FF 00 
      62.  00:A1AB                      	db  #50,#50,#51,#51,#52,#52,#53,#53,#54,#54,#55,#55,#56,#56,#FF,#00
      62.  00:A1AB  50 50 51 51 52 52 53 53 54 54 55 55 56 56 FF 00 
      63.  00:A1BB                      	db  00000000b,#00,00000001b,#01,00000010b,#02,00000011b,#03,00001000b,#04,00001001b,#05,00001100b,#06,#FF,#00	;ultima fila
      63.  00:A1BB  00 00 01 01 02 02 03 03 08 04 09 05 0C 06 FF 00 
      64.  00:A1CB                      	
      65.  00:A1CB                      habitaciones_nivel4:
      66.  00:A1CB                      	db  00000001b,#00,00000001b,#01,00000010b,#02,00000011b,#03,00001000b,#04,00001001b,#05,00001100b,#06,#FF,#00 ;primera fila
      66.  00:A1CB  01 00 01 01 02 02 03 03 08 04 09 05 0C 06 FF 00 
      67.  00:A1DB                      	db  #17,#10,#11,#11,#12,#12,#13,#13,#14,#14,#15,#15,#16,#16,#FF,#00
      67.  00:A1DB  17 10 11 11 12 12 13 13 14 14 15 15 16 16 FF 00 
      68.  00:A1EB                      	db  #20,#20,#21,#21,#22,#22,#23,#23,#24,#24,#25,#25,#26,#26,#FF,#00
      68.  00:A1EB  20 20 21 21 22 22 23 23 24 24 25 25 26 26 FF 00 
      69.  00:A1FB                      	db  #30,#30,#31,#31,#32,#32,#33,#33,#34,#34,#35,#35,#36,#36,#FF,#00
      69.  00:A1FB  30 30 31 31 32 32 33 33 34 34 35 35 36 36 FF 00 
      70.  00:A20B                      	db  00000000b,#00,00000001b,#01,00001111b,#02,00000011b,#03,00001000b,#04,00001001b,#05,00001100b,#06,#FF,#00
      70.  00:A20B  00 00 01 01 0F 02 03 03 08 04 09 05 0C 06 FF 00 
      71.  00:A21B                      	db  #50,#50,#51,#51,#52,#52,#53,#53,#54,#54,#55,#55,#56,#56,#FF,#00
      71.  00:A21B  50 50 51 51 52 52 53 53 54 54 55 55 56 56 FF 00 
      72.  00:A22B                      	db  00000000b,#00,00000001b,#01,00001111b,#02,00000011b,#03,00001000b,#04,00001001b,#05,00001100b,#06,#FF,#00	;ultima fila
      72.  00:A22B  00 00 01 01 0F 02 03 03 08 04 09 05 0C 06 FF 00 
      73.  00:A23B                      	
      74.  00:A23B                      habitaciones_nivel5:
      75.  00:A23B                      	db  00000000b,#00,00000001b,#01,00000010b,#02,00000011b,#03,00001000b,#04,00001001b,#05,00001100b,#06,#FF,#00 ;primera fila
      75.  00:A23B  00 00 01 01 02 02 03 03 08 04 09 05 0C 06 FF 00 
      76.  00:A24B                      	db  #17,#10,#11,#11,#12,#12,#13,#13,#14,#14,#15,#15,#16,#16,#FF,#00
      76.  00:A24B  17 10 11 11 12 12 13 13 14 14 15 15 16 16 FF 00 
      77.  00:A25B                      	db  #20,#20,#21,#21,#22,#22,#23,#23,#24,#24,#25,#25,#26,#26,#FF,#00
      77.  00:A25B  20 20 21 21 22 22 23 23 24 24 25 25 26 26 FF 00 
      78.  00:A26B                      	db  #30,#30,#31,#31,#32,#32,#33,#33,#34,#34,#35,#35,#36,#36,#FF,#00
      78.  00:A26B  30 30 31 31 32 32 33 33 34 34 35 35 36 36 FF 00 
      79.  00:A27B                      	db  00000000b,#00,00000001b,#01,00001111b,#02,00000011b,#03,00001000b,#04,00001001b,#05,00001100b,#06,#FF,#00
      79.  00:A27B  00 00 01 01 0F 02 03 03 08 04 09 05 0C 06 FF 00 
      80.  00:A28B                      	db  #50,#50,#51,#51,#52,#52,#53,#53,#54,#54,#55,#55,#56,#56,#FF,#00
      80.  00:A28B  50 50 51 51 52 52 53 53 54 54 55 55 56 56 FF 00 
      81.  00:A29B                      	db  00000000b,#00,00000001b,#01,00001010b,#02,00000011b,#03,00001000b,#04,00001001b,#05,00001100b,#06,#FF,#00	;ultima fila
      81.  00:A29B  00 00 01 01 0A 02 03 03 08 04 09 05 0C 06 FF 00 
      82.  00:A2AB                      	
      83.  00:A2AB                      habitaciones_nivel6:
      84.  00:A2AB                      	db  00000000b,#00,00000001b,#01,00000010b,#02,00000011b,#03,00001000b,#04,00001001b,#05,00001100b,#06,#FF,#00 ;primera fila
      84.  00:A2AB  00 00 01 01 02 02 03 03 08 04 09 05 0C 06 FF 00 
      85.  00:A2BB                      	db  #17,#10,#11,#11,#12,#12,#13,#13,#14,#14,#15,#15,#16,#16,#FF,#00
      85.  00:A2BB  17 10 11 11 12 12 13 13 14 14 15 15 16 16 FF 00 
      86.  00:A2CB                      	db  #20,#20,#21,#21,#22,#22,#23,#23,#24,#24,#25,#25,#26,#26,#FF,#00
      86.  00:A2CB  20 20 21 21 22 22 23 23 24 24 25 25 26 26 FF 00 
      87.  00:A2DB                      	db  #30,#30,#31,#31,#32,#32,#33,#33,#34,#34,#35,#35,#36,#36,#FF,#00
      87.  00:A2DB  30 30 31 31 32 32 33 33 34 34 35 35 36 36 FF 00 
      88.  00:A2EB                      	db  00000000b,#00,00000001b,#01,00001111b,#02,00000011b,#03,00001000b,#04,00001001b,#05,00001100b,#06,#FF,#00
      88.  00:A2EB  00 00 01 01 0F 02 03 03 08 04 09 05 0C 06 FF 00 
      89.  00:A2FB                      	db  #50,#50,#51,#51,#52,#52,#53,#53,#54,#54,#55,#55,#56,#56,#FF,#00
      89.  00:A2FB  50 50 51 51 52 52 53 53 54 54 55 55 56 56 FF 00 
      90.  00:A30B                      	db  00000000b,#00,00000001b,#01,00000010b,#02,00000011b,#03,00001000b,#04,00001001b,#05,00001100b,#06,#FF,#00	;ultima fila
      90.  00:A30B  00 00 01 01 02 02 03 03 08 04 09 05 0C 06 FF 00 
      91.  00:A31B                      
      92.  00:A31B                      
      93.  00:A31B                      
     135   00:A31B                      	
     136   00:A31B                      	include "variables.asm"
       1.  00:A31B                      ;;=====================================================
       2.  00:A31B                      ;;DEFINICIÓN DE VARIABLES
       3.  00:A31B                      ;;=====================================================
       4.  00:A31B                      
       5.  00:A31B                      ;Colores base de la pantalla
       6.  00:A31B                      color_base:
       7.  00:A31B  01 01 01            			DB		COLNEGRO,COLNEGRO,COLNEGRO	
       8.  00:A31E                      ;colores de pantalla cuando se tira bomba
       9.  00:A31E                      color_bomba1:
      10.  00:A31E  08 08 08            			DB		COLROJO,COLROJO,COLROJO
      11.  00:A321                      color_bomba2:
      12.  00:A321  06 06 06            			DB		COLROJOOSC,COLROJOOSC,COLROJOOSC
      13.  00:A324                      
      14.  00:A324                      ;definicion de variable del prota usando la estructura del punto de mira
      15.  00:A324                      prota:		ESTRUCTURA_PUNTOMIRA
      15.  00:A324  64 64 00 00 00 05 00 00 00 00 00 00 00 00 00 00 
      16.  00:A334                      ;variables globales del prota
      17.  00:A334                      prota_nivel:			;nivel del castillo donde está 0-6
      18.  00:A334  00                  			DB		0
      19.  00:A335                      prota_vidas:
      20.  00:A335  00                  			DB		0
      21.  00:A336                      prota_reliquias:
      22.  00:A336  03                  			DB		3
      23.  00:A337                      prota_pos_mapx:
      24.  00:A337  00                  			DB		0	;pos columna
      25.  00:A338                      prota_pos_mapy:
      26.  00:A338  00                  			DB		0	;pos fila
      27.  00:A339                      prota_energia:
      28.  00:A339  FA                  			DB		250
      29.  00:A33A                      
      30.  00:A33A                      ;array para pintar de golpe el marcador de vidas
      31.  00:A33A                      array_aux_vidas: 		
      32.  00:A33A                      			DB		0,0,0,0,0,0,0,0
      32.  00:A33A  00 00 00 00 00 00 00 00 
      33.  00:A342                      
      34.  00:A342                      ;array para pintar de golpe el marcador de reliquias
      35.  00:A342                      array_aux_reliquias:	
      36.  00:A342                      			DB		0,0,0,0,0,0,0,0
      36.  00:A342  00 00 00 00 00 00 00 00 
      37.  00:A34A                      
      38.  00:A34A                      array_aux_energia:					;array para pintar de golpe el marcador de energía
      39.  00:A34A                      			DB		16,0,0,0,0,0,0 	;el 16 primero es porque siempre estará pintado el cuadro primero rojo
      39.  00:A34A  10 00 00 00 00 00 00 
      40.  00:A351                      ultimo_pos_array_aux_energia:
      41.  00:A351  00                  			DB		0				;el array completo es de 8 pero para posicionar sin niecesidad de cálculos  etiqueto este aparte
      42.  00:A352                      			
      43.  00:A352                      array_aux_mapa_limpiar:	;es por facilitar el reseteo del mapa (pinto 7 lineas en negro con bios) la otra opción es más larga en código y complicada aunque más rápida
      44.  00:A352                      			DB		0,0,0,0,0,0,0
      44.  00:A352  00 00 00 00 00 00 00 
      45.  00:A359                      elemento_pintar_mapa:
      46.  00:A359  00                  			DB		0	;TILEPROTAM = 19, ;TILEGRISM = 9
      47.  00:A35A                      			
      48.  00:A35A                      ;; nota importante: cada vez que se cambie de nivel se actualizará el contenido
      49.  00:A35A                      ;; arrays con mapa de tiles de las puertas
      50.  00:A35A                      array_puerta_arriba:
      51.  00:A35A  03 01 01 03         array_puerta_arriba1:		DB	3,1,1,3
      52.  00:A35E  01 01 01 01         array_puerta_arriba2:		DB	1,1,1,1
      53.  00:A362  01 01 01 01         array_puerta_arriba3:		DB	1,1,1,1
      54.  00:A366  01 01 01 01         array_puerta_arriba4:		DB	1,1,1,1
      55.  00:A36A  01 01 01 01         array_puerta_arriba5:		DB	1,1,1,1
      56.  00:A36E                      
      57.  00:A36E                      array_puerta_derecha:
      58.  00:A36E  01 03 03            array_puerta_derecha1:		DB	1,3,3
      59.  00:A371  01 01 03            array_puerta_derecha2:		DB	1,1,3
      60.  00:A374  01 01 01            array_puerta_derecha3:		DB	1,1,1
      61.  00:A377  01 01 01            array_puerta_derecha4:		DB	1,1,1
      62.  00:A37A  01 01 01            array_puerta_derecha5:		DB	1,1,1
      63.  00:A37D  02 01 01            array_puerta_derecha6:		DB	2,1,1
      64.  00:A380  04 02 01            array_puerta_derecha7:		DB	4,2,1
      65.  00:A383                      	
      66.  00:A383  01 01 01 01         array_puerta_abajo:			DB	1,1,1,1
      67.  00:A387                      
      68.  00:A387                      array_puerta_izquierda:
      69.  00:A387  03 03 01            array_puerta_izquierda1:	DB	3,3,1
      70.  00:A38A  03 01 01            array_puerta_izquierda2:	DB	3,1,1
      71.  00:A38D  01 01 01            array_puerta_izquierda3:	DB	1,1,1
      72.  00:A390  01 01 01            array_puerta_izquierda4:	DB	1,1,1
      73.  00:A393  01 01 01            array_puerta_izquierda5:	DB	1,1,1
      74.  00:A396  01 01 02            array_puerta_izquierda6:	DB	1,1,2
      75.  00:A399  01 02 04            array_puerta_izquierda7:	DB	1,2,4
      76.  00:A39C                      
      77.  00:A39C                      ;array con posiciones pseudoaleatorias de ayudas y extras (qué valor se escogerá con R 0-127 + and 00001111)
      78.  00:A39C                      pos_ayudas:					DB	0,4,18,23,45,69,73,82,90,152,171,180,190,192,198,208
      78.  00:A39C  00 04 12 17 2D 45 49 52 5A 98 AB B4 BE C0 C6 D0 
      79.  00:A3AC                      
      80.  00:A3AC                      
      81.  00:A3AC                      ;array de 4 bytes x 32 sprites posibles en pantalla que sobreescribirá la tabla de sprites actualizando VRAM
      82.  00:A3AC                      array_sprites:
      83.  00:A3AC  00 (8)              array_sprites_pm:				DS	2 * 4
      84.  00:A3B4  00 (120)            array_sprites_enem:				DS	30 * 4
      85.  00:A42C  00 (140)            lista_enemigos:					DS	10 * ESTRUCTURA_ENEMIGO
      86.  00:A4B8                      ; puntero al array a pintar en VRAM
      87.  00:A4B8  00 00               puntero_array_atrib_array_VRAM: DW	0	;ARRAYSPTRIES + 8
      88.  00:A4BA                      
      89.  00:A4BA                      
     137   00:A4BA                      	
     138   00:A4BA                      ;;=====================================================
     139   00:A4BA                      ;;DEFINICIÓN DE PANTALLAS
     140   00:A4BA                      ;;=====================================================		
     141   00:A4BA                      	include "pantallas.asm"
       1.  00:A4BA                      ;;=====================================================
       2.  00:A4BA                      ;;DEFINICIÓN DE PANTALLAS
       3.  00:A4BA                      ;;=====================================================		
       4.  00:A4BA                      
       5.  00:A4BA                      ; bancos 1 y 2 y de pantalla 1 (en realidad es una pantalla de pruebas)
       6.  00:A4BA                      tiles_patrones_pantalla11:	
       7.  00:A4BA  (0023)              tiles_patrones_pantalla12:	incbin "pan1_23.bank1.bin.chr.pletter"
       8.  00:A4DD                      tiles_color_pantalla11:		
       9.  00:A4DD  (0018)              tiles_color_pantalla12:		incbin "pan1_23.bank1.bin.clr.pletter"
      10.  00:A4F5  (001A)              tiles_mapa_pantalla11:		incbin "pan1_23.bank0.bin.map.pletter"
      11.  00:A50F  (002A)              tiles_mapa_pantalla12:		incbin "pan1_23.bank1.bin.map.pletter"
      12.  00:A539                      
      13.  00:A539                      
      14.  00:A539                      
      15.  00:A539                      
      16.  00:A539                      
      17.  00:A539                      
      18.  00:A539                      ; 3º banco que es la parte de puntos, vidas, mapas, etc... es común
      19.  00:A539                      ;~ tiles_patrones_pantalla3:	incbin "pan_33.bin.chr.pletter"
      20.  00:A539                      ;~ tiles_color_pantalla3:		incbin "pan_33.bin.clr.pletter"
      21.  00:A539                      ;~ tiles_mapa_pantalla3:		incbin "pan_33.bin.map.pletter"
      22.  00:A539                      
      23.  00:A539  (0145)              tiles_patrones_pantalla3:	incbin "pan1.bank2.bin.chr.plet5"
      24.  00:A67E  (0032)              tiles_color_pantalla3:		incbin "pan1.bank2.bin.clr.plet5"
      25.  00:A6B0  (0062)              tiles_mapa_pantalla3:		incbin "pan1.bank2.bin.map.plet5"
      26.  00:A712                      
      27.  00:A712                      ;NOTA: FALTARÍAN PANTALLAS ESPECIALES (POR DEFINIR)
     142   00:A712                      
     143   00:A712                      
     144   00:A712                      	
     145   00:A712                      END:

    LABELS
-------------------------------------------------
00:000000D8 X GTTRIG
00:000000D5 X GTSTCK
00:0000F3DB   CLIKSW
00:0000013E X RDVDP
00:00000047   WRTVDP
00:0000005C   LDIRVM
00:00000059 X LDIRMV
00:0000005F   CHGMOD
00:00000041 X DISSCR
00:00000044 X ENASCR
00:00000062   CHGCLR
00:0000F3E9   FORCLR
00:0000F3EA   BAKCLR
00:0000F3EB   BDRCLR
00:000000C3   CLS
00:0000F3DF X RG0SAV
00:0000F3E0   RG1SAV
00:0000F3E1 X RG2SAV
00:0000F3E2 X RG3SAV
00:0000F3E3 X RG4SAV
00:0000F3E4 X RG5SAV
00:0000F3E5 X RG6SAV
00:0000F3E6 X RG7SAV
00:0000F3E7 X STATFL
00:00000099   REGEST
00:00000098   REGESCVDP
00:000000A0   PSG_A
00:000000A1   PSG_W
00:000000A2   PSG_R
00:00000000   CHRTBL
00:00001800   TILMAP
00:00001B00   SPRART
00:00002000   CLRTBL
00:00003800   SPRTBL
00:00000001 X SI
00:00000000 X NO
00:00000004   LIMCADENCIA
00:00000000 X COLTRASP
00:00000001   COLNEGRO
00:00000002 X COLVERDE
00:00000003 X COLVERCLA
00:00000004 X COLAZULOSC
00:00000005 X COLAZULLA
00:00000006   COLROJOOSC
00:00000007 X COLCYAN
00:00000008   COLROJO
00:00000009 X COLROJOCLA
00:0000000A X COLAMAROSC
00:0000000B X COLAMARCLA
00:0000000C X COLVERDOSC
00:0000000D X COLMAGENTA
00:0000000E X COLGRIS
00:0000000F   COLBLANCO
00:000002F8   POSMAPLIN1
00:000002D8   POSMAPLIN2
00:000002B8   POSMAPLIN3
00:00000298   POSMAPLIN4
00:00000278   POSMAPLIN5
00:00000258   POSMAPLIN6
00:00000238   POSMAPLIN7
00:0000000D   POSCARAMAP
00:00000248   POSVIDAS
00:00000011   POSRELIMAP
00:000002C8   POSRELIQ
00:00000288   POSENERG
00:000002B4   POSNIVEL
00:00000238   POSMAPA
00:000001EE   POSPUERABAJ
00:0000008E   POSPUERARRI
00:000000FC   POSPUERDERE
00:000000E1   POSPUERIZQU
00:000000C8 X ORACIONON
00:000000CC X ORACIONOFF
00:000000D0 X CRUZON
00:000000D4 X CRUZOFF
00:000000D8 X AGUAON
00:000000DC X AGUAOFF
00:000000E0 X ARMADON
00:000000E4 X ARMADOFF
00:000000E8 X PLANTAON
00:000000EC X PLANTAOFF
00:000000F0 X VIDAEXTON
00:000000F4 X VIDAEXTOFF
00:000000F8 X BALLESON
00:000000FC X BALLESOFF
00:00000013   TILEPROTAM
00:00000009   TILEGRISM
00:00000010   TILEMAPROJO
00:0000000F   TILEMAPAMAR
00:0000000E   TILEMAPVERD
00:00000008   NMAXVIDREL
00:00000007   NHABNIVEL
00:000000F8 X MAXENERGIA
00:000000D9   TILEENERG8
00:000000BA   TILEENERG7
00:0000009B   TILEENERG6
00:0000007C   TILEENERG5
00:0000005D   TILEENERG4
00:0000003E   TILEENERG3
00:0000001F   TILEENERG2
00:00000000   TILENEGRO
00:00000000 X LIMPANTIZQ
00:000000FF   LIMPANTDER
00:00000000 X LIMPANTARR
00:00000080   LIMPANTABA
00:00000006 X BASEMAPY
00:00000003 X BASEMAPX
00:0000FD9A X H.KEYI
00:0000FD9F   H.TIMI
00:0000F000   PT3_SETUP
00:0000F001   PT3_MODADDR
00:0000F003   PT3_CrPsPtr
00:0000F005   PT3_SAMPTRS
00:0000F007   PT3_OrnPtrs
00:0000F009   PT3_PDSP
00:0000F00B   PT3_CSP
00:0000F00D   PT3_PSP
00:0000F00F   PT3_PrNote
00:0000F010   PT3_PrSlide
00:0000F012   PT3_AdInPtA
00:0000F014   PT3_AdInPtB
00:0000F016   PT3_AdInPtC
00:0000F018   PT3_LPosPtr
00:0000F01A   PT3_PatsPtr
00:0000F01C   PT3_Delay
00:0000F01D   PT3_AddToEn
00:0000F01E   PT3_Env_Del
00:0000F01F   PT3_ESldAdd
00:0000F021   PT3_NTL3
00:0000F023   VARS
00:0000F023   ChanA
00:0000F040   ChanB
00:0000F05D   ChanC
00:0000F07A   DelyCnt
00:0000F07B   CurESld
00:0000F07D   CurEDel
00:0000F07E   Ns_Base_AddToNs
00:0000F07E   Ns_Base
00:0000F07F   AddToNs
00:0000F080   NT_
00:0000F140   AYREGS
00:0000F140   VT_
00:0000F14E   EnvBase
00:0000F150   VAR0END
00:0000F150   T1_
00:0000F150   T_NEW_1
00:0000F150   T_OLD_1
00:0000F168   T_OLD_2
00:0000F180   T_NEW_3
00:0000F180   T_OLD_3
00:0000F182   T_OLD_0
00:0000F182   T_NEW_0
00:0000F19A   T_NEW_2
00:0000F240   ayFX_MODE
00:0000F241   ayFX_BANK
00:0000F243   ayFX_PRIORITY
00:0000F244   ayFX_POINTER
00:0000F246   ayFX_TONE
00:0000F248   ayFX_NOISE
00:0000F249   ayFX_VOLUME
00:0000F24A   ayFX_CHANNEL
00:00008000   START
00:00008026   loop_principal
00:00008033 X fin_programa_principal
00:00008033   inicializa_variables_pruebas
00:00008055 X fin_inicializa_variables_pruebas
00:00008056   inicializa_niveles
00:00008065   inicializa_niveles.bucle_borra_hab
00:0000806A X fin_iniciliza_niveles
00:0000806B   actualiza_marcador_vidas
00:00008070   loop_marcador_caras_negro
00:00008075 X fin_loop_marcador_caras_negro
00:0000807E   loop_marcador_caras
00:00008083 X fin_loop_marcador_caras
00:00008083 X fin_actualiza_marcador_vidas
00:00008084   actualiza_buffer_reliquias
00:0000808A   loop_buffer_reliquias_negro
00:00008097   loop_buffer_reliquias
00:0000809C X fin_actualiza_buffer_reliquias
00:0000809D   localiza_info_habitacion
00:000080A0 X localiza_info_habitacion.situo_columna
00:000080A9 X localiza_info_habitacion.situo_fila
00:000080B2   localiza_info_habitacion.loop_suma_fila
00:000080BA   localiza_info_habitacion.situo_nivel
00:000080C9   localiza_info_habitacion.loop_suma_nivel
00:000080CE   localiza_info_habitacion.actualiza_valiable_habitacion
00:000080D2 X fin_localiza_info_habitacion
00:000080D3   color_pantalla
00:000080E4 X fin_color_pantalla
00:000080E4   sub_preparapantalla
00:000080E4 X elimina_clic
00:000080E8 X fin_elimina_clic
00:000080E8 X limpia_pantalla
00:000080EC X fin_limpia_pantalla
00:000080F2 X screen2
00:000080F7 X sprites_16_16
00:00008105 X fin_sub_preparapantalla
00:00008105   pinta_pantalla_completa
00:0000810B X fin_pinta_pantalla_completa
00:0000810C   pinta_parte_superior_pantalla
00:00008142 X fin_pinta_parte_superior_pantalla
00:00008143   pinta_parte_inferior_pantalla
00:0000815E X fin_pinta_parte_inferior_pantalla
00:0000815E   pinta_vidas
00:0000816D X fin_pinta_vidas
00:0000816D   pinta_reliquias
00:0000817C X fin_pinta_reliquias
00:0000817C   pinta_nivel
00:00008188 X fin_pinta_nivel
00:00008189   pinta_tile_suelto
00:00008196 X fin_pinta_tile_suelto
00:00008197   mira_pinta_energia
00:0000819D X pinta_ener
00:0000819D X pinta_ener_tile_8
00:000081A9   pinta_ener_tile_8_negro
00:000081AA   pinta_ener_tile_7
00:000081B4   pinta_ener_tile_7_negro
00:000081B5   pinta_ener_tile_6
00:000081BF   pinta_ener_tile_6_negro
00:000081C0   pinta_ener_tile_5
00:000081CA   pinta_ener_tile_5_negro
00:000081CB   pinta_ener_tile_4
00:000081D5   pinta_ener_tile_4_negro
00:000081D6   pinta_ener_tile_3
00:000081E0   pinta_ener_tile_3_negro
00:000081E1   pinta_ener_tile_2
00:000081EB   pinta_ener_tile_2_negro
00:000081EC   fin_mira_pinta_energia
00:000081EE   pinta_energia
00:000081FD X fin_pinta_energia
00:000081FD   borra_mapa
00:00008253 X fin_borra_mapa
00:00008254   pinta_array
00:00008262   pinta_array.pa_pinta_fila
00:00008263   pinta_array.pa_pinta_columnas
00:00008286 X fin_pinta_array
00:00008287   wordaux1
00:00008289   wordaux2
00:0000828B   pinta_puertas
00:000082A8 X fin_pinta_puertas
00:000082A9   pinta_puerta_aba
00:000082BE X fin_pinta_puerta_aba
00:000082BE   pinta_puerta_arr
00:000082D3 X fin_pinta_puerta_arr
00:000082D3   pinta_puerta_der
00:000082E8 X fin_pinta_puerta_der
00:000082E8   pinta_puerta_izq
00:000082FD X fin_pinta_puerta_izq
00:000082FD   posiciona_en_mapa
00:00008300 X posiciona_en_mapa.sumar_fila
00:0000832A X posiciona_en_mapa.fila_0
00:00008331   posiciona_en_mapa.fila_1
00:00008338   posiciona_en_mapa.fila_2
00:0000833F   posiciona_en_mapa.fila_3
00:00008346   posiciona_en_mapa.fila_4
00:0000834D   posiciona_en_mapa.fila_5
00:00008354 X posiciona_en_mapa.fila_6
00:00008354   posiciona_en_mapa.sumar_columna
00:0000836A   pinta_pos_mapa_vacio
00:0000836C   fin_pinta_pos_mapa
00:0000836F X fin_posiciona_en_mapa
00:0000836F   efecto_imagen_tira_reliquia
00:00008372   efecto_imagen_tira_reliquia.parpadea_fondo
00:00008389 X fin_efecto_imagen_tira_reliquia
00:00008389   carga_patrones_sprites_nivel
00:00008393 X fin_carga_patrones_sprites_nivel
00:00008394   carga_patrones_nivel_comunes
00:000083A0 X fin_carga_patrones_nivel_comunes
00:000083A0   carga_patrones_sprites_nivel1
00:000083A0 X fin_carga_patrones_sprites
00:000083A1   render_sprites
00:000083AD X fin_actualiza_array_sprites_vram
00:000083AD   vuelca_resultado_puntomira_array
00:000083D2 X vuelca_resultado_puntomira_array.codigo_color_1
00:000083DB   vuelca_resultado_puntomira_array.codigo_color_2
00:000083E4 X fin_vuelca_resultado_puntomira_array
00:000083E4   check_player
00:00008403 X f
00:00008404   mueve_arriba
00:0000840F   mueve_arriba.no_decrementa_y
00:00008410 X fin_mueve_arriba
00:00008411   mueve_derecha
00:0000841E   mueve_derecha.no_incrementa_x
00:0000841F X fin_mueve_derecha
00:00008420   mueve_abajo
00:0000842D   mueve_abajo.no_incrementa_y
00:0000842E X fin_mueve_abajo
00:0000842F   mueve_izquierda
00:0000843A   mueve_izquierda.no_decrementa_x
00:0000843B X fin_mueve_izquierda
00:0000843C   mira_disparo
00:0000843C X mira_disparo.mira_boton_pulsado1
00:00008449 X mira_disparo.no_efectua_disparo
00:00008454   mira_disparo.efectua_disparo
00:00008466   mira_disparo.fin_mira_disparo1
00:00008467   mira_disparo.mira_boton_pulsado2
00:00008483 X fin_mira_disparo
00:00008483   update_controllers_status
00:000084BA   read_joy_0
00:000084CE   check_8th_keyboard_row
00:000084DC   check_4th_keyboard_row
00:000084EA X inicializa_replayer_efectos_interrupciones
00:00008503 X fin_inicializa_replayer_efectos_interrupciones
00:00008504   subrutina_isr
00:0000850D X fin_subrutina_isr
00:0000850D X subrutinas_sonido
00:00000000   CHNPRM_PsInOr
00:00000001   CHNPRM_PsInSm
00:00000002   CHNPRM_CrAmSl
00:00000003   CHNPRM_CrNsSl
00:00000004   CHNPRM_CrEnSl
00:00000005   CHNPRM_TSlCnt
00:00000006   CHNPRM_CrTnSl
00:00000008   CHNPRM_TnAcc
00:0000000A   CHNPRM_COnOff
00:0000000B   CHNPRM_OnOffD
00:0000000C   CHNPRM_OffOnD
00:0000000D   CHNPRM_OrnPtr
00:0000000F   CHNPRM_SamPtr
00:00000011   CHNPRM_NNtSkp
00:00000012   CHNPRM_Note
00:00000013   CHNPRM_SlToNt
00:00000014   CHNPRM_Env_En
00:00000015   CHNPRM_Flags
00:00000016   CHNPRM_TnSlDl
00:00000017   CHNPRM_TSlStp
00:00000019   CHNPRM_TnDelt
00:0000001B   CHNPRM_NtSkCn
00:0000001C   CHNPRM_Volume
00:0000001D X CHNPRM_Size
00:00000000   AR_TonA
00:00000002   AR_TonB
00:00000004   AR_TonC
00:00000006   AR_Noise
00:00000007   AR_Mixer
00:00000008   AR_AmplA
00:00000009   AR_AmplB
00:0000000A   AR_AmplC
00:0000000B   AR_Env
00:0000000D   AR_EnvTp
00:0000850D   CHECKLP
00:0000851E X PT3_MUTE
00:0000852A   PT3_INIT
00:00008569   PT3_INIT.TP_0
00:00008575   PT3_INIT.TP_1
00:0000857C   PT3_INIT.TP_2
00:000085EA   PT3_INIT.L1
00:000085F7   PT3_INIT.L2
00:000085FB X PT3_INIT.L3
00:00008622   PT3_INIT.CORR_1
00:00008630   PT3_INIT.CORR_2
00:00008637   PT3_INIT.TC_EXIT
00:00008642   PT3_INIT.INITV1
00:0000864A   PT3_INIT.INITV2
00:0000865E   PT3_INIT.INITV3
00:00008662   PD_OrSm
00:0000866C   PD_SAM
00:0000866D   PD_SAM_
00:00008683   PD_VOL
00:0000868C   PD_EOff
00:00008694   PD_SorE
00:0000869E   PD_ENV
00:000086A3   PD_ORN
00:000086A8   PD_ESAM
00:000086B5   PTDECOD
00:000086C4   PD_LOOP
00:000086C7   PD_LP2
00:000086F4   PD_NOIS
00:000086F9   PD_REL
00:000086FF   PD_NOTE
00:00008707   PD_RES
00:00008719   PD_FIN
00:00008720   C_PORTM
00:0000876B   C_PORTM.NOSIG
00:00008775   SET_STP
00:00008781   C_GLISS
00:00008794   C_SMPOS
00:0000879A   C_ORPOS
00:000087A0   C_VIBRT
00:000087B8   C_ENGLS
00:000087CA   C_DELAY
00:000087D0   SETENV
00:000087EB   C_NOP
00:000087EC   SETORN
00:00008805   SPCCOMS
00:00008825   CHREGS
00:00008848   CHREGS.CH_ORPS
00:00008853   CHREGS.CH_NTP
00:00008859   CHREGS.CH_NOK
00:00008874   CHREGS.CH_SMPS
00:0000888A   CHREGS.CH_NOAC
00:000088D1   CHREGS.CH_STPP
00:000088E6   CHREGS.CH_AMP
00:000088F8   CHREGS.CH_AMIN
00:000088FD   CHREGS.CH_SVAM
00:00008900   CHREGS.CH_NOAM
00:00008909   CHREGS.CH_APOS
00:0000890F   CHREGS.CH_VOL
00:0000891A X CHREGS.CH_ENV
00:00008921   CHREGS.CH_NOEN
00:0000893B   CHREGS.NO_ENAC
00:00008942   CHREGS.NO_ENSL
00:00008950   CHREGS.CH_MIX
00:00008954   CHREGS.CH_EXIT
00:00008973   CHREGS.CH_ONDL
00:00008977   PT3_PLAY
00:000089AB   PT3_PLAY.PLNLP
00:000089D2   PT3_PLAY.PL1A
00:000089DD   PT3_PLAY.PL1B
00:000089F2   PT3_PLAY.PL1C
00:00008A07   PT3_PLAY.PL1D
00:00008A0D   PT3_PLAY.PL2
00:00008A6F   PT3_ROUT
00:00008A70   ROUT_A0
00:00008A7C   ROUT_A0.LOUT
00:00008A90   NT_DATA
00:00008AA0   T_
00:00008AA0   TCOLD_0
00:00008AAC   TCNEW_1
00:00008AAC   TCOLD_1
00:00008AAE   TCOLD_2
00:00008AC0   TCNEW_3
00:00008AC1   TCOLD_3
00:00008ACA   TCNEW_0
00:00008AD5   TCNEW_2
00:00008AE0   EMPTYSAMORN
00:00008AE4   T_PACK
00:00000000 X AYFXRELATIVE
00:00008B19   ayFX_SETUP
00:00008B25   ayFX_END
00:00008B2B   ayFX_INIT
00:00008B3C   ayFX_INIT.CHECK_PRI
00:00008B5D   ayFX_INIT.INIT_END
00:00008B61   ayFX_PLAY
00:00008B75   ayFX_PLAY.TAKECB
00:00008B86   ayFX_PLAY.CHECK_NN
00:00008B93   ayFX_PLAY.SETPOINTER
00:00008BA7   ayFX_PLAY.SETMASKS
00:00008BB5 X ayFX_PLAY.CHK1
00:00008BB7 X ayFX_PLAY.PLAY_C
00:00008BC4   ayFX_PLAY.CHK2
00:00008BC9 X ayFX_PLAY.PLAY_B
00:00008BD6   ayFX_PLAY.CHK3
00:00008BD9 X ayFX_PLAY.PLAY_A
00:00008BE6   ayFX_PLAY.SETMIXER
00:00008BF6   song
00:0000955E   sfx_bank
00:000095A9   depack_VRAM
00:000095D6   literal
00:000095DB   loop
00:000095E4 X getlen
00:000095EA   lus
00:00009607   lenok
00:00009614   mode7
00:0000961A   mode6
00:00009620   mode5
00:00009626   mode4
00:0000962C   mode3
00:00009632   mode2
00:00009642   offsok
00:0000964D   offsok.loop
00:0000966F   getbit
00:00009673   getbitexx
00:00009679   Depack_out
00:0000967B   modes
00:00000000 X ESTRUCTURA_PUNTOMIRA.posx
00:00000001 X ESTRUCTURA_PUNTOMIRA.posy
00:00000002 X ESTRUCTURA_PUNTOMIRA.escena
00:00000003 X ESTRUCTURA_PUNTOMIRA.velocidad
00:00000004 X ESTRUCTURA_PUNTOMIRA.boton2_pressed
00:00000005 X ESTRUCTURA_PUNTOMIRA.cadencia
00:00000006 X ESTRUCTURA_PUNTOMIRA.pm_aux1
00:00000007 X ESTRUCTURA_PUNTOMIRA.pm_aux2
00:00000008 X ESTRUCTURA_PUNTOMIRA.pm_aux3
00:00000009 X ESTRUCTURA_PUNTOMIRA.pm_aux4
00:0000000A X ESTRUCTURA_PUNTOMIRA.pm_aux5
00:0000000B X ESTRUCTURA_PUNTOMIRA.pm_aux6
00:0000000C X ESTRUCTURA_PUNTOMIRA.pm_aux7
00:0000000D X ESTRUCTURA_PUNTOMIRA.pm_aux8
00:0000000E X ESTRUCTURA_PUNTOMIRA.pm_aux9
00:0000000F X ESTRUCTURA_PUNTOMIRA.pm_aux10
00:00000010 X ESTRUCTURA_PUNTOMIRA
00:00000000 X ESTRUCTURA_ENEMIGO.tipo
00:00000001 X ESTRUCTURA_ENEMIGO.posx
00:00000002 X ESTRUCTURA_ENEMIGO.posy
00:00000003 X ESTRUCTURA_ENEMIGO.color
00:00000004 X ESTRUCTURA_ENEMIGO.escena
00:00000005 X ESTRUCTURA_ENEMIGO.contador_siguiente_escena
00:00000006 X ESTRUCTURA_ENEMIGO.reset_contador
00:00000007 X ESTRUCTURA_ENEMIGO.dano
00:00000008 X ESTRUCTURA_ENEMIGO.energia
00:00000009 X ESTRUCTURA_ENEMIGO.ver_hor
00:0000000A X ESTRUCTURA_ENEMIGO.manejador_dibujo
00:0000000C X ESTRUCTURA_ENEMIGO.en_aux3
00:0000000D X ESTRUCTURA_ENEMIGO.en_aux4
00:0000000E   ESTRUCTURA_ENEMIGO
00:00000000 X ESTRUCTURA_EXTRA.tipo
00:00000001 X ESTRUCTURA_EXTRA.posx
00:00000002 X ESTRUCTURA_EXTRA.posy
00:00000003 X ESTRUCTURA_EXTRA.color
00:00000004 X ESTRUCTURA_EXTRA.contador
00:00000005 X ESTRUCTURA_EXTRA.en_aux1
00:00000006 X ESTRUCTURA_EXTRA.en_aux2
00:00000007 X ESTRUCTURA_EXTRA.en_aux3
00:00000008 X ESTRUCTURA_EXTRA.en_aux4
00:00000009 X ESTRUCTURA_EXTRA.en_aux5
00:0000000A X ESTRUCTURA_EXTRA.en_aux6
00:0000000B X ESTRUCTURA_EXTRA.en_aux7
00:0000000C X ESTRUCTURA_EXTRA.en_aux8
00:0000000D X ESTRUCTURA_EXTRA.en_aux9
00:0000000E X ESTRUCTURA_EXTRA.en_aux10
00:0000000F X ESTRUCTURA_EXTRA.en_aux11
00:00000010 X ESTRUCTURA_EXTRA
00:00009689 X sprites_pantantalla
00:00009689   sprites_comunes
00:00009689 X sprite_punto_mira_1
00:000096A9 X sprite_punto_mira_2
00:000096C9 X sprite_punto_mira_1_mejorado
00:000096E9 X sprite_punto_mira_2_mejorado
00:00009709 X sprite_explosion_1
00:00009729 X sprite_explosion_2
00:00009749   fin_sprites_comunes
00:00009749 X sprite_arana1_1
00:00009769 X sprite_arana1_2
00:00009789 X sprite_murcielago1_1
00:000097A9 X sprite_murcielago1_2
00:000097C9 X sprite_serpiente1_1
00:000097E9 X sprite_serpiente1_2
00:00009809 X sprite_serpiente2_1
00:00009829 X sprite_serpiente2_2
00:00009849 X sprite_zombi1_1_1
00:00009869 X sprite_zombi1_2_1
00:00009889 X sprite_zombi1_3_1
00:000098A9 X sprite_zombi1_4_1
00:000098C9 X sprite_zombi1_1_2
00:000098E9 X sprite_zombi1_2_2
00:00009909 X sprite_zombi1_3_2
00:00009929 X sprite_zombi1_4_2
00:00009949 X sprite_zombi2_1_1
00:00009969 X sprite_zombi2_2_1
00:00009989 X sprite_zombi2_3_1
00:000099A9 X sprite_zombi2_4_1
00:000099C9 X sprite_zombi2_1_2
00:000099E9 X sprite_zombi2_2_2
00:00009A09 X sprite_zombi2_3_2
00:00009A29 X sprite_zombi2_4_2
00:00009A49 X sprite_caballero1_1_1
00:00009A69 X sprite_caballero1_2_1
00:00009A89 X sprite_caballero1_3_1
00:00009AA9 X sprite_caballero1_4_1
00:00009AC9 X sprite_caballero1_1_2
00:00009AE9 X sprite_caballero1_2_2
00:00009B09 X sprite_caballero1_3_2
00:00009B29 X sprite_caballero1_4_2
00:00009B49 X sprite_caballero2_1_1
00:00009B69 X sprite_caballero2_2_1
00:00009B89 X sprite_caballero2_3_1
00:00009BA9 X sprite_caballero2_4_1
00:00009BC9 X sprite_caballero2_1_2
00:00009BE9 X sprite_caballero2_2_2
00:00009C09 X sprite_caballero2_3_2
00:00009C29 X sprite_caballero2_4_2
00:00009C49 X sprite_llama1_1
00:00009C69 X sprite_llama2_1
00:00009C89 X sprite_llama1_2
00:00009CA9 X sprite_llama2_2
00:00009CC9 X sprite_fantasma1_1
00:00009CE9 X sprite_fantasma2_1
00:00009D09 X sprite_fantasma1_2
00:00009D29 X sprite_fantasma2_2
00:00009D49 X sprite_magia1_1
00:00009D69 X sprite_magia2_1
00:00009D89 X sprite_magia1_2
00:00009DA9 X sprite_magia2_2
00:00009DC9 X sprite_beholder1_1
00:00009DE9 X sprite_beholder2_1
00:00009E09 X sprite_beholder3_1
00:00009E29 X sprite_beholder4_1
00:00009E49 X sprite_beholder1_2
00:00009E69 X sprite_beholder2_2
00:00009E89 X sprite_beholder3_2
00:00009EA9 X sprite_beholder4_2
00:00009EC9 X sprite_vampiro1_1
00:00009EE9 X sprite_vampiro2_1
00:00009F09 X sprite_vampiro1_2
00:00009F29 X sprite_vampiro2_2
00:00009F49 X sprite_manoizq1
00:00009F69 X sprite_manoizq2
00:00009F89 X sprite_manoizq3
00:00009FA9 X sprite_manoder1
00:00009FC9 X sprite_manoder2
00:00009FE9 X sprite_manoder3
00:0000A009   habitacion_actual
00:0000A00B   habitaciones_juego
00:0000A00B X habitaciones_nivel0
00:0000A07B X habitaciones_nivel1
00:0000A0EB X habitaciones_nivel2
00:0000A15B X habitaciones_nivel3
00:0000A1CB X habitaciones_nivel4
00:0000A23B X habitaciones_nivel5
00:0000A2AB X habitaciones_nivel6
00:0000A31B   color_base
00:0000A31E   color_bomba1
00:0000A321   color_bomba2
00:0000A324 X prota
00:0000A324   prota.posx
00:0000A325   prota.posy
00:0000A326   prota.escena
00:0000A327 X prota.velocidad
00:0000A328 X prota.boton2_pressed
00:0000A329   prota.cadencia
00:0000A32A X prota.pm_aux1
00:0000A32B X prota.pm_aux2
00:0000A32C X prota.pm_aux3
00:0000A32D X prota.pm_aux4
00:0000A32E X prota.pm_aux5
00:0000A32F X prota.pm_aux6
00:0000A330 X prota.pm_aux7
00:0000A331 X prota.pm_aux8
00:0000A332 X prota.pm_aux9
00:0000A333 X prota.pm_aux10
00:0000A334   prota_nivel
00:0000A335   prota_vidas
00:0000A336   prota_reliquias
00:0000A337   prota_pos_mapx
00:0000A338   prota_pos_mapy
00:0000A339   prota_energia
00:0000A33A   array_aux_vidas
00:0000A342   array_aux_reliquias
00:0000A34A   array_aux_energia
00:0000A351   ultimo_pos_array_aux_energia
00:0000A352   array_aux_mapa_limpiar
00:0000A359   elemento_pintar_mapa
00:0000A35A   array_puerta_arriba
00:0000A35A X array_puerta_arriba1
00:0000A35E X array_puerta_arriba2
00:0000A362 X array_puerta_arriba3
00:0000A366 X array_puerta_arriba4
00:0000A36A X array_puerta_arriba5
00:0000A36E   array_puerta_derecha
00:0000A36E X array_puerta_derecha1
00:0000A371 X array_puerta_derecha2
00:0000A374 X array_puerta_derecha3
00:0000A377 X array_puerta_derecha4
00:0000A37A X array_puerta_derecha5
00:0000A37D X array_puerta_derecha6
00:0000A380 X array_puerta_derecha7
00:0000A383   array_puerta_abajo
00:0000A387   array_puerta_izquierda
00:0000A387 X array_puerta_izquierda1
00:0000A38A X array_puerta_izquierda2
00:0000A38D X array_puerta_izquierda3
00:0000A390 X array_puerta_izquierda4
00:0000A393 X array_puerta_izquierda5
00:0000A396 X array_puerta_izquierda6
00:0000A399 X array_puerta_izquierda7
00:0000A39C X pos_ayudas
00:0000A3AC   array_sprites
00:0000A3AC   array_sprites_pm
00:0000A3B4 X array_sprites_enem
00:0000A42C X lista_enemigos
00:0000A4B8 X puntero_array_atrib_array_VRAM
00:0000A4BA   tiles_patrones_pantalla11
00:0000A4BA   tiles_patrones_pantalla12
00:0000A4DD   tiles_color_pantalla11
00:0000A4DD   tiles_color_pantalla12
00:0000A4F5   tiles_mapa_pantalla11
00:0000A50F   tiles_mapa_pantalla12
00:0000A539   tiles_patrones_pantalla3
00:0000A67E   tiles_color_pantalla3
00:0000A6B0   tiles_mapa_pantalla3
00:0000A712   END


 Output: t4.out
-------------------------------------------------

 Page: 00
  Org: 00008000  Size: *  Used: 00000000

    No output

 Output: t4.bin
-------------------------------------------------

 Page: 00
  Org: 00008000  Size: *  Used: 00002719

   Address   Length Align   Label
   00008000   10009         START
