Sjasm Z80 Assembler v0.42c - www.xl2s.tk             [2021.11.13 - 10:22:25]

t4.asm
Errors: 0

       1   00:0000                      	OUTPUT	"t4.bin"
       2   00:8000                      	
       3   00:8000                      ;;=====================================================
       4   00:8000                      ;;DEFINICIÓN DE CONSTANTES
       5   00:8000                      ;;=====================================================	
       6   00:8000                      	include "constantes.asm"
       1.  00:8000                      ;;=====================================================
       2.  00:8000                      ;; FICHERO constantes.asm
       3.  00:8000                      ;;=====================================================
       4.  00:8000                      
       5.  00:8000                      ;;ETIQUETAS/CONSTANTES BIOS TECLADO
       6.  00:8000  (00:00D8)           GTTRIG		equ		#00D8	;Returns current trigger status
       7.  00:8000  (00:00D5)           GTSTCK		equ		#00D5	;Returns the joystick/cursors status
       8.  00:8000  (00:F3DB)           CLIKSW		equ		#F3DB	;deshabilita el sonido de clic cuando se pulsa una tecla
       9.  00:8000                      
      10.  00:8000                      ;;ETIQUETAS/CONSTANTES BIOS VDP
      11.  00:8000  (00:013E)           RDVDP		equ		#013E	;lee registro status VDP
      12.  00:8000  (00:0047)           WRTVDP		equ		#0047	;escribe registros del VDP
      13.  00:8000  (00:005C)           LDIRVM		equ		#005C	;RAM/ROM -> VRAM
      14.  00:8000  (00:0059)           LDIRMV		equ		#0059	;VRAM -> RAM
      15.  00:8000  (00:005F)           CHGMOD		equ		#005F	;cambia modo pantalla (screen mode)
      16.  00:8000  (00:0041)           DISSCR  	equ		#0041	;desactiva pantanlla
      17.  00:8000  (00:0044)           ENASCR  	equ		#0044	;activa pantalla
      18.  00:8000  (00:0062)           CHGCLR  	equ		#0062	;cambia color de pantalla (toca A y direcciones)
      19.  00:8000  (00:F3E9)           FORCLR		equ		#F3E9	;zona memoria color foreground
      20.  00:8000  (00:F3EA)           BAKCLR  	equ		#F3EA	;zona memoria color background
      21.  00:8000  (00:F3EB)           BDRCLR 		equ		#F3EB	;zona memoria bordercolor
      22.  00:8000  (00:00C3)           CLS			equ		#00C3	;limpia pantalla (necesita A=0)
      23.  00:8000                      
      24.  00:8000                      ;;ETIQUETAS/CONSTANTES REGISTROS VDP
      25.  00:8000  (00:F3DF)           RG0SAV		equ		#F3DF	;Mirror of VDP register 0 (Basic: VDP(0))
      26.  00:8000  (00:F3E0)           RG1SAV		equ		#F3E0	;Mirror of VDP register 1 (Basic: VDP(1))
      27.  00:8000  (00:F3E1)           RG2SAV		equ		#F3E1	;Mirror of VDP register 2 (Basic: VDP(2))
      28.  00:8000  (00:F3E2)           RG3SAV		equ		#F3E2	;Mirror of VDP register 3 (Basic: VDP(3))
      29.  00:8000  (00:F3E3)           RG4SAV		equ		#F3E3	;Mirror of VDP register 4 (Basic: VDP(4))
      30.  00:8000  (00:F3E4)           RG5SAV		equ		#F3E4	;Mirror of VDP register 5 (Basic: VDP(5))
      31.  00:8000  (00:F3E5)           RG6SAV		equ		#F3E5	;Mirror of VDP register 6 (Basic: VDP(6))
      32.  00:8000  (00:F3E6)           RG7SAV		equ		#F3E6	;Mirror of VDP register 7 (Basic: VDP(7))
      33.  00:8000  (00:F3E7)           STATFL		equ		#F3E7	;Mirror of VDP(8) status register (S#0)
      34.  00:8000                      
      35.  00:8000  (00:0099)           REGEST		equ		#0099	;registro de estado para escribir directamente en VRAM
      36.  00:8000  (00:0098)           REGESCVDP	equ		#0098	;registro donde escribir valor para VRAM
      37.  00:8000                      
      38.  00:8000                      ;;ETIQUETAS/CONSTANTES REGISTROS PSG (PARA JOYSTICK)
      39.  00:8000  (00:00A0)           PSG_A  equ  0a0h  ;reg address
      40.  00:8000  (00:00A1)           PSG_W  equ  0a1h  ;reg data WR
      41.  00:8000  (00:00A2)           PSG_R  equ  0a2h  ;reg data
      42.  00:8000                      
      43.  00:8000                      
      44.  00:8000                      ;;ETIQUETAS DE ZONAS DE MEMORIA DE LA VPD (MSX1)
      45.  00:8000  (00:0000)           CHRTBL		equ		#0000
      46.  00:8000  (00:1800)           TILMAP		equ		#1800
      47.  00:8000  (00:1B00)           SPRART		equ		#1B00
      48.  00:8000  (00:2000)           CLRTBL		equ		#2000
      49.  00:8000  (00:3800)           SPRTBL		equ		#3800
      50.  00:8000                      
      51.  00:8000                      
      52.  00:8000                      ;;ETIQUETAS ESTANDAR PARA DAR MÁS CLARIDAD AL CODIGO
      53.  00:8000  (00:0001)           SI			equ		1
      54.  00:8000  (00:0000)           NO			equ		0
      55.  00:8000  (00:0001)           PUERTAACTIV equ		1
      56.  00:8000  (00:0000)           PUERTAINACT equ		0
      57.  00:8000  (00:0004)           LIMCADENCIA equ		4	;nº de veces que se ejecutará el disparo antes de ejecutar un disparo real (porque cuando se pulsa la tecl dispara 3 ó 4 veces de rápido que va)
      58.  00:8000                      ;hay que estudiar si 3 es un nº mejor
      59.  00:8000                      
      60.  00:8000                      
      61.  00:8000                      ;;PALETA DE COLORES DEL MSX
      62.  00:8000  (00:0000)           COLTRASP	equ		0
      63.  00:8000  (00:0001)           COLNEGRO	equ		1
      64.  00:8000  (00:0002)           COLVERDE	equ		2
      65.  00:8000  (00:0003)           COLVERCLA	equ		3
      66.  00:8000  (00:0004)           COLAZULOSC	equ		4
      67.  00:8000  (00:0005)           COLAZULLA	equ		5
      68.  00:8000  (00:0006)           COLROJOOSC	equ		6
      69.  00:8000  (00:0007)           COLCYAN		equ		7
      70.  00:8000  (00:0008)           COLROJO		equ		8
      71.  00:8000  (00:0009)           COLROJOCLA	equ		9
      72.  00:8000  (00:000A)           COLAMAROSC	equ		10
      73.  00:8000  (00:000B)           COLAMARCLA	equ		11
      74.  00:8000  (00:000C)           COLVERDOSC	equ		12
      75.  00:8000  (00:000D)           COLMAGENTA	equ		13
      76.  00:8000  (00:000E)           COLGRIS		equ		14
      77.  00:8000  (00:000F)           COLBLANCO	equ		15
      78.  00:8000                      
      79.  00:8000                      
      80.  00:8000                      ;;ETIQUETAS ESPECIFICAS PARA DAR MÁS CLARIDAD AL CODIGO (relacionadas con posiciones en mapa vdp)
      81.  00:8000  (00:02F8)           POSMAPLIN1  equ		#02F8
      82.  00:8000  (00:02D8)           POSMAPLIN2  equ		#02D8
      83.  00:8000  (00:02B8)           POSMAPLIN3  equ		#02B8
      84.  00:8000  (00:0298)           POSMAPLIN4  equ		#0298
      85.  00:8000  (00:0278)           POSMAPLIN5  equ		#0278
      86.  00:8000  (00:0258)           POSMAPLIN6  equ		#0258
      87.  00:8000  (00:0238)           POSMAPLIN7  equ		#0238
      88.  00:8000                      
      89.  00:8000  (00:000D)           POSCARAMAP	equ		#000D
      90.  00:8000  (00:0248)           POSVIDAS	equ		#0248
      91.  00:8000  (00:0011)           POSRELIMAP	equ		#0011
      92.  00:8000  (00:02C8)           POSRELIQ	equ		#02C8
      93.  00:8000  (00:0288)           POSENERG	equ		#0288
      94.  00:8000  (00:02B4)           POSNIVEL	equ		#02B4
      95.  00:8000  (00:0238)           POSMAPA		equ 	#0238
      96.  00:8000                      
      97.  00:8000  (00:01EE)           POSPUERABAJ equ		#01EE
      98.  00:8000  (00:008E)           POSPUERARRI equ		#008E
      99.  00:8000  (00:00FC)           POSPUERDERE equ		#00FC
     100.  00:8000  (00:00E1)           POSPUERIZQU equ		#00E1
     101.  00:8000  (00:006C)           POSESCALERA equ		#006C	;32 x 3 + columna
     102.  00:8000                      
     103.  00:8000                      ;;POSICIONES DE LAS AYUDAS EN PANTALLA BANCO 1
     104.  00:8000  (00:00A3)           POSORACION	equ		163
     105.  00:8000  (00:00A7)           POSCRUZ		equ		167
     106.  00:8000  (00:00AB)           POSAGUA		equ		171
     107.  00:8000  (00:00AF)           POSARMAD	equ		175
     108.  00:8000  (00:00B3)           POSPLANTA	equ		179
     109.  00:8000  (00:00B7)           POSVIDAEXT	equ		183
     110.  00:8000  (00:00BB)           POSBALLESTA	equ		187
     111.  00:8000                      
     112.  00:8000                      ;;POSICIONES DE LAS AYUDAS EN PANTALLA PIXEL CENTRAL X
     113.  00:8000  (00:0020)           POSORACIONX	equ		32
     114.  00:8000  (00:0040)           POSCRUZX	equ		64
     115.  00:8000  (00:0060)           POSAGUAX	equ		96
     116.  00:8000  (00:0080)           POSARMADX	equ		128
     117.  00:8000  (00:00A0)           POSPLANTAX	equ		160
     118.  00:8000  (00:00C0)           POSVIDAEXTX	equ		192
     119.  00:8000  (00:00E0)           POSBALLESTAX equ	224
     120.  00:8000                      
     121.  00:8000                      ;;POSICIONES DE LAS AYUDAS EN PANTALLA PIXEL CENTRAL Y
     122.  00:8000  (00:0070)           POSAYUDASY	equ		112	;se pone por poner porque las estructuras de ayudas ya se inicializan con este valor
     123.  00:8000                      
     124.  00:8000                      ;;POSICIÓN INICIAL DEL SPRITE DEL PUNTO DE MIRA
     125.  00:8000  (00:0078)           POSXPM		equ		120
     126.  00:8000  (00:006C)           POSYPM		equ		108
     127.  00:8000                      
     128.  00:8000                      ;;ESTADO ESTRUCTURA
     129.  00:8000  (00:0000)           INACTIVA	equ		0
     130.  00:8000  (00:0001)           ACTIVA		equ		1
     131.  00:8000  (00:0001)           HABTERMIN	equ		1
     132.  00:8000                      
     133.  00:8000                      ;;POSICIONES DE LAS ANTORCHAS
     134.  00:8000  (00:0088)           POSANTOR1	equ		136
     135.  00:8000  (00:0097)           POSANTOR2	equ		151
     136.  00:8000  (00:00C4)           MAPLLAMA1	equ		196
     137.  00:8000  (00:00C5)           MAPLLAMA2	equ		197
     138.  00:8000  (00:00FF)           RESETLLAMA	equ		255
     139.  00:8000                      
     140.  00:8000                      ;;POSICIONES DE LOS ESQUELETOS
     141.  00:8000  (00:0088)           POSESQUEL1	equ		136
     142.  00:8000  (00:0095)           POSESQUEL2	equ		149
     143.  00:8000  (00:00A9)           POSCALAVE1	equ		169
     144.  00:8000  (00:00B6)           POSCALAVE2	equ		182
     145.  00:8000  (00:0019)           RESETESQUEL	equ		25
     146.  00:8000  (00:0004)           RESETESCENAESQUEL 	equ	4	;hay 4 caras con las que el esqueleto cambia (se ha metido el 0 para facilitar código)
     147.  00:8000                      
     148.  00:8000                      ;;ETIQUETAS ESPECIFICAS PARA DAR MÁS CLARIDAD AL CODIGO (relacionadas con posiciones en en el banco de memoria)
     149.  00:8000  (00:0013)           TILEPROTAM  equ		19		;tile del prota para pintar en mapa
     150.  00:8000  (00:0009)           TILEGRISM	equ		9		;tile gris que representa vacio (por donde el prota va pasando)
     151.  00:8000  (00:0010)           TILEMAPROJO equ		16
     152.  00:8000  (00:000F)           TILEMAPAMAR equ		15
     153.  00:8000  (00:000E)           TILEMAPVERD equ		14
     154.  00:8000                      
     155.  00:8000                      
     156.  00:8000                      ;;ETIQUETAS ESPECIFICAS PARA DAR MÁS CLARIDAD AL CODIGO (generales)
     157.  00:8000  (00:0008)           NMAXVIDREL	equ		8		;el número máximo de vidas y de reliquias es de 8
     158.  00:8000  (00:0007)           NHABNIVEL	equ		7
     159.  00:8000  (00:00F8)           MAXENERGIA  equ		248
     160.  00:8000  (00:00D9)           TILEENERG8  equ		217
     161.  00:8000  (00:00BA)           TILEENERG7  equ		186
     162.  00:8000  (00:009B)           TILEENERG6  equ		155
     163.  00:8000  (00:007C)           TILEENERG5  equ		124
     164.  00:8000  (00:005D)           TILEENERG4  equ		93
     165.  00:8000  (00:003E)           TILEENERG3  equ		62
     166.  00:8000  (00:001F)           TILEENERG2  equ		31
     167.  00:8000  (00:0000)           TILENEGRO	equ		0
     168.  00:8000                      
     169.  00:8000                      ;limites
     170.  00:8000  (00:0000)           LIMPANTIZQ  equ		0
     171.  00:8000  (00:00FF)           LIMPANTDER  equ		255
     172.  00:8000  (00:0000)           LIMPANTARR  equ		0
     173.  00:8000  (00:0080)           LIMPANTABA  equ		128
     174.  00:8000                      
     175.  00:8000                      
     176.  00:8000                      ;matriz de 7x7 empieza en 0, y fila y x col, cuento desde esquina sup izq
     177.  00:8000  (00:0006)           BASEMAPY	equ		6
     178.  00:8000  (00:0003)           BASEMAPX	equ		3
     179.  00:8000                      
     180.  00:8000                      
     181.  00:8000                      
     182.  00:8000                      ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
     183.  00:8000                      ;; CONSTANTES PARA INTERRUPCIONES
     184.  00:8000                      ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
     185.  00:8000  (00:FD9A)           H.KEYI		equ     	#FD9A
     186.  00:8000  (00:FD9F)           H.TIMI	 	equ     	#FD9F
     187.  00:8000                      
     188.  00:8000                      
     189.  00:8000                      ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
     190.  00:8000                      ;; CONSTANTES PARA SONIDO 
     191.  00:8000                      ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
     192.  00:8000                      
     193.  00:8000  (F000)              	map		#f000
     194.  00:8000                      
     195.  00:8000                      ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;PT3 REPLAYER
     196.  00:8000  (00:F000)           PT3_SETUP:		#1	;set bit0 to 1, if you want to play without looping
     197.  00:8000                      					;bit7 is set each time, when loop point is passed
     198.  00:8000  (00:F001)           PT3_MODADDR:	#2
     199.  00:8000  (00:F003)           PT3_CrPsPtr:	#2
     200.  00:8000  (00:F005)           PT3_SAMPTRS:	#2
     201.  00:8000  (00:F007)           PT3_OrnPtrs:	#2
     202.  00:8000  (00:F009)           PT3_PDSP:		#2
     203.  00:8000  (00:F00B)           PT3_CSP:		#2
     204.  00:8000  (00:F00D)           PT3_PSP:		#2
     205.  00:8000  (00:F00F)           PT3_PrNote:		#1
     206.  00:8000  (00:F010)           PT3_PrSlide:	#2
     207.  00:8000  (00:F012)           PT3_AdInPtA:	#2
     208.  00:8000  (00:F014)           PT3_AdInPtB:	#2
     209.  00:8000  (00:F016)           PT3_AdInPtC:	#2
     210.  00:8000  (00:F018)           PT3_LPosPtr:	#2
     211.  00:8000  (00:F01A)           PT3_PatsPtr:	#2
     212.  00:8000  (00:F01C)           PT3_Delay:		#1
     213.  00:8000  (00:F01D)           PT3_AddToEn:	#1
     214.  00:8000  (00:F01E)           PT3_Env_Del:	#1
     215.  00:8000  (00:F01F)           PT3_ESldAdd:	#2
     216.  00:8000  (00:F021)           PT3_NTL3:		#2	; AND A / NOP (note table creator)
     217.  00:8000                      
     218.  00:8000  (00:F023)           VARS:			#0
     219.  00:8000                      
     220.  00:8000  (00:F023)           ChanA:			#29			;CHNPRM_Size
     221.  00:8000  (00:F040)           ChanB:			#29			;CHNPRM_Size
     222.  00:8000  (00:F05D)           ChanC:			#29			;CHNPRM_Size
     223.  00:8000                      
     224.  00:8000                      ;GlobalVars
     225.  00:8000  (00:F07A)           DelyCnt:		#1
     226.  00:8000  (00:F07B)           CurESld:		#2
     227.  00:8000  (00:F07D)           CurEDel:		#1
     228.  00:8000  (00:F07E)           Ns_Base_AddToNs:	#0
     229.  00:8000  (00:F07E)           Ns_Base:		#1
     230.  00:8000  (00:F07F)           AddToNs:		#1
     231.  00:8000                      
     232.  00:8000  (00:F080)           NT_:			#192	; Puntero a/tabla de frecuencias
     233.  00:8000                      
     234.  00:8000  (00:F140)           AYREGS:			#0
     235.  00:8000  (00:F140)           VT_:			#14
     236.  00:8000  (00:F14E)           EnvBase:		#2
     237.  00:8000  (00:F150)           VAR0END:		#0
     238.  00:8000                      
     239.  00:8000  (00:F150)           T1_:			#0		
     240.  00:8000  (00:F150)           T_NEW_1:		#0
     241.  00:8000  (00:F150)           T_OLD_1:		#24
     242.  00:8000  (00:F168)           T_OLD_2:		#24
     243.  00:8000  (00:F180)           T_NEW_3:		#0
     244.  00:8000  (00:F180)           T_OLD_3:		#2
     245.  00:8000  (00:F182)           T_OLD_0:		#0
     246.  00:8000  (00:F182)           T_NEW_0:		#24
     247.  00:8000  (00:F19A)           T_NEW_2:		#166
     248.  00:8000                      ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;PT3 REPLAYER END
     249.  00:8000                      
     250.  00:8000                      ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ayFX REPLAYER 
     251.  00:8000  (00:F240)           ayFX_MODE:		#1			; ayFX mode
     252.  00:8000  (00:F241)           ayFX_BANK:		#2			; Current ayFX Bank
     253.  00:8000  (00:F243)           ayFX_PRIORITY:	#1			; Current ayFX stream priotity
     254.  00:8000  (00:F244)           ayFX_POINTER:	#2			; Pointer to the current ayFX stream
     255.  00:8000  (00:F246)           ayFX_TONE:		#2			; Current tone of the ayFX stream
     256.  00:8000  (00:F248)           ayFX_NOISE:		#1			; Current noise of the ayFX stream
     257.  00:8000  (00:F249)           ayFX_VOLUME:	#1			; Current volume of the ayFX stream
     258.  00:8000  (00:F24A)           ayFX_CHANNEL:	#1			; PSG channel to play the ayFX stream
     259.  00:8000                      
     260.  00:8000                      	;IF (AYFXRELATIVE == 1 ) 
     261.  00:8000                      ;ayFX_VT:	ds	2			; ayFX relative volume table pointer
     262.  00:8000                      	;ENDIF
     263.  00:8000                      ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ayFX REPLAYER END
     264.  00:8000                      
     265.  00:8000                      
     266.  00:8000                      
       7   00:8000                      
       8   00:8000                      ;;=====================================================
       9   00:8000                      ;;DEFINICIÓN DE CABECERA DE ARCHIVO BIN
      10   00:8000                      ;;=====================================================		
      11   00:8000                      	include "cabecerabin.asm"
       1.  00:8000                      ;;=====================================================
       2.  00:8000                      ;; FICHERO cabecera.asm
       3.  00:8000                      ;;=====================================================
       4.  00:8000                      
       5.  00:8000                      ;;CABECERA FICHERO BIN
       6.  00:8000  FE                  	DB	#FE
       7.  00:8001  00 80               	DW	START
       8.  00:8003  1B BE               	DW	END
       9.  00:8005  00 80               	DW	START
      10.  00:8007                      
      11.  00:8007                      ;;INICIO CÓDIGO PROGRAMA	
      12.  00:8007                      	ORG	#8000
      13.  00:8000                      	
      12   00:8000                      	
      13   00:8000                      START:	
      14   00:8000                      	;inicializa pantalla y entonrno
      15   00:8000  CD D0 81            	CALL	sub_preparapantalla			;screen 2,2 sin click al pulsar tecla y color 16,1,1
      16   00:8003                      	
      17   00:8003                      	;inicializa variables para parametrizar funciones y que lo que se muestre sea variable (nº vidas, mapa, puertas, pantalla, etc...)
      18   00:8003  CD 59 80            	CALL	inicializa_variables_pruebas
      19   00:8006                      	
      20   00:8006                      ;***************************************************
      21   00:8006                      	;inicializa los niveles por partida
      22   00:8006                      ;	CALL	inicializa_niveles			;no es necesario parametrizarlo según el nivel del usuario ya que se cargan todos
      23   00:8006                      ;************** quitarlo cuando pueda navegar por habitaciones y esté más avanzado el proyecto
      24   00:8006                      
      25   00:8006                      	;inicializa los valores de cada puerta excepto si están activas o no (eso ocurre cuando se matan todos los enemigos de la hab. y sólo a las puertas que se muestren)
      26   00:8006  CD 5B 87            	CALL	inicializa_puertas
      27   00:8009                      	
      28   00:8009                      	;inicializa las estructuras de forma particular según ayuda pero sin poner valores de posición
      29   00:8009  CD 39 9B            	CALL	inicializa_ayudas
      30   00:800C                      	
      31   00:800C                      	;inicializa las estructuras de las antorchas y esqueletos
      32   00:800C  CD F8 84            	CALL	inicializa_antorchas
      33   00:800F  CD 1A 85            	CALL	inicializa_esqueletos
      34   00:8012                      	
      35   00:8012                      	;pinta la pantalla (la primera o algunas especiales se pintan completamente)
      36   00:8012  CD F1 81            	CALL	pinta_pantalla_completa
      37   00:8015                      	
      38   00:8015                      	;carga sprites en memoria (SE HA RETRASADO HASTA PARAMETRIZAR LA CARGA DE PANTALLAS)
      39   00:8015  CD 1D 89            	CALL 	carga_patrones_sprites_nivel
      40   00:8018                      	
      41   00:8018                      	;funciones que modificarian el marcador si se produce un evento cuando toque y cuando se pinta la pantalla ya se mira
      42   00:8018                      	;una variable para ver si el array hay que actualizarlo en pantalla o no
      43   00:8018  CD 31 83            	CALL	pinta_vidas
      44   00:801B  CD 40 83            	CALL 	pinta_reliquias
      45   00:801E  CD 4F 83            	CALL	pinta_nivel
      46   00:8021  CD CF 83            	CALL	borra_mapa
      47   00:8024  CD CF 87            	CALL	pinta_puertas
      48   00:8027                      
      49   00:8027  3E 13               	LD		 A, TILEPROTAM
      50   00:8029  32 07 AA            	LD		(elemento_pintar_mapa), A
      51   00:802C  CD 26 84            	CALL	posiciona_en_mapa		;se le pasa elemento_pintar_mapa (tile del prota) está el prota y prota.posx y posy
      52   00:802F                      		
      53   00:802F  CD D7 9B            	CALL	pinta_ayudas_habitacion
      54   00:8032                      	
      55   00:8032  CD 3C 85            	CALL	pinta_extra_fondo
      56   00:8035                      	
      57   00:8035                      	;esta función no va aquí sino en check colisiones pero se pone aquí para realizar pruebas
      58   00:8035  CD 68 81            	CALL	terminada_habitacion_recorrida ;para cuando se maten todos los enemigos de la habitación
      59   00:8038                      
      60   00:8038                      	;incializacion de replayer con interrupciones
      61   00:8038                      ;	CALL	inicializa_replayer_efectos_interrupciones
      62   00:8038                      
      63   00:8038                      loop_principal:
      64   00:8038  76                  	HALT							;espera VBLANK y sincroniza
      65   00:8039                      	
      66   00:8039  CD 2E 89            	CALL	render_sprites			;actualiza array de sprites y los pinta en pantalla
      67   00:803C                      	
      68   00:803C  CD C0 83            	CALL	pinta_energia			;pinta la energia en pantalla
      69   00:803F                      	
      70   00:803F  CD B3 85            	CALL	actualiza_elementos_fondo
      71   00:8042                      
      72   00:8042  CD 71 89            	CALL	check_player			;MIRA EL CONTROL Y APLICA LA LOGICA DE MOVIMIENTO DEL PROTAGONISTA
      73   00:8045                      	
      74   00:8045  C3 38 80            	JP		loop_principal
      75   00:8048                      fin_programa_principal:
      76   00:8048                      	;no necesita RET
      77   00:8048                      
      78   00:8048                      
      79   00:8048                      ;;=====================================================
      80   00:8048                      ;;CHECK_COLISIONES_OBJETOS
      81   00:8048                      ;;=====================================================	
      82   00:8048                      ; función: 	revisa (con enemigos+ayudas o puertas según si la habitación ha sido recorrida o no) las variables para ver si se disparó sobre ellas
      83   00:8048                      ; entrada: 	is_habitacion_terminada
      84   00:8048                      ; salida: 	-
      85   00:8048                      ; toca:		HL,BC, DE
      86   00:8048                      check_colisiones_objetos:
      87   00:8048                      
      88   00:8048                      ;;;		parece que funciona pero hayq que seguir depurando
      89   00:8048                      
      90   00:8048  F5                  	PUSH	AF
      91   00:8049                      	
      92   00:8049                      	;pantalla limpia?
      93   00:8049  3A B8 A6            	LD		 A, (is_habitacion_terminada)
      94   00:804C  F6 00               	OR		 0
      95   00:804E  CA 57 80            	JP		 Z, .habitacion_no_terminada
      96   00:8051                      	;SI 
      97   00:8051                      	;recorre puertas y sale
      98   00:8051  CD 69 88            		CALL	check_colisiones_puertas
      99   00:8054                      		
     100   00:8054  C3 57 80            		JP		fin_check_colisiones_objetos	
     101   00:8057                      	;NO 
     102   00:8057                      .habitacion_no_terminada:
     103   00:8057                      	;recorre ayudas
     104   00:8057                      	;recorre enemigos
     105   00:8057                      
     106   00:8057                      
     107   00:8057                      fin_check_colisiones_objetos:	
     108   00:8057  F1                  	POP		AF
     109   00:8058  C9                  	RET
     110   00:8059                      
     111   00:8059                      
     112   00:8059                      
     113   00:8059                      
     114   00:8059                      
     115   00:8059                      
     116   00:8059                      
     117   00:8059                      ;;*******************************************************************
     118   00:8059                      ; sólo para hacer pruebas y pintar la parte de las vidas y demás
     119   00:8059                      inicializa_variables_pruebas:
     120   00:8059  3E 04               	LD		 A, 4
     121   00:805B  32 E3 A9            	LD		(prota_vidas),A
     122   00:805E                      
     123   00:805E  3E 04               	LD		 A, 4
     124   00:8060  32 E4 A9            	LD		(prota_reliquias), A
     125   00:8063                      
     126   00:8063  3E 64               	LD		 A, 100
     127   00:8065  32 E7 A9            	LD		(prota_energia), A
     128   00:8068                      
     129   00:8068                      	;ubico al prota dentro del nivel para obtener luego las habitaciones y enemigos que aparecerán
     130   00:8068                      	;será igual la posición inicial en todos los niveles
     131   00:8068                      	
     132   00:8068  3E 00               	LD		 A, 0				;los niveles (matrices) son 7 del 0 al 6
     133   00:806A  32 E2 A9            	LD		(prota_nivel), A	;nivel empieza en 0 para usar las posiciones ascii
     134   00:806D                      
     135   00:806D  3E 00               	LD		 A, 0				;los subniveles (filas) son 7 del 0 al 6
     136   00:806F  32 E6 A9            	LD		(prota_pos_mapy), A	;pos Y dentro del nivel (se empieza en 0)
     137   00:8072                      
     138   00:8072  3E 03               	LD		 A, 3				;columnas 7: del 0 al 6
     139   00:8074  32 E5 A9            	LD		(prota_pos_mapx), A	;pos X dentro del nivel (se empieza en 0)
     140   00:8077                      	
     141   00:8077  AF                  	XOR		 A					;cadencia por defecto.. cuando se coja mejora en arma se puede variar
     142   00:8078  32 D7 A9            	LD		(prota.cadencia), A
     143   00:807B                      	
     144   00:807B  32 B8 A6            	LD		(is_habitacion_terminada), A
     145   00:807E                      fin_inicializa_variables_pruebas:
     146   00:807E  C9                  	RET
     147   00:807F                      ;;************************************************************************
     148   00:807F                      
     149   00:807F                      
     150   00:807F                      
     151   00:807F                      
     152   00:807F                      
     153   00:807F                      
     154   00:807F                      
     155   00:807F                      
     156   00:807F                      
     157   00:807F                      ;;=====================================================
     158   00:807F                      ;;DEFINICIÓN DE SUBRUTINAS
     159   00:807F                      ;;=====================================================
     160   00:807F                      	include "subrutinas.asm"
       1.  00:807F                      ;;=====================================================
       2.  00:807F                      ;;DEFINICIÓN DE SUBRUTINAS
       3.  00:807F                      ;;=====================================================	
       4.  00:807F                      
       5.  00:807F                      
       6.  00:807F                      ;;=====================================================
       7.  00:807F                      ;;INICIALIZA_NIVELES
       8.  00:807F                      ;;=====================================================	
       9.  00:807F                      ; función: 	pone el bit 4 de todas las habitaciones (byte habitacion_actual 0,2,4....) a 0
      10.  00:807F                      ; entrada: 	habitaciones_plantilla
      11.  00:807F                      ; salida: 	habitaciones_plantilla con los el bit 4 de los bites bytes impares a 0
      12.  00:807F                      ; toca: 	habitaciones_plantilla, B
      13.  00:807F                      inicializa_niveles:
      14.  00:807F  F5                  		PUSH		AF
      15.  00:8080  C5                  		PUSH		BC
      16.  00:8081  E5                  		PUSH		HL
      17.  00:8082                      		
      18.  00:8082  06 38               		LD			 B, 56		;la mitad de bytes del array de un nivel
      19.  00:8084  21 B9 A6            		LD 			HL, habitaciones_nivel0
      20.  00:8087                      .inicia_nivel_0
      21.  00:8087  7E                  		LD		 	 A, (HL)
      22.  00:8088  CB E7               		SET			 4, A 		;el 4 bit a 0 indica que por esa habitacion no se ha pasado/no se han atado todos los enemigos
      23.  00:808A  77                  		LD			(HL), A
      24.  00:808B  23 23               [2]		INC			HL
      25.  00:808D  10 F8               		DJNZ		.inicia_nivel_0
      26.  00:808F                      
      27.  00:808F  06 38               		LD			 B, 56		;la mitad de bytes del array de un nivel
      28.  00:8091  21 29 A7            		LD 			HL, habitaciones_nivel1
      29.  00:8094                      .inicia_nivel_1
      30.  00:8094  7E                  		LD		 	 A, (HL)
      31.  00:8095  CB E7               		SET			 4, A 		;el 4 bit a 0 indica que por esa habitacion no se ha pasado/no se han atado todos los enemigos
      32.  00:8097  77                  		LD			(HL), A
      33.  00:8098  23 23               [2]		INC			HL
      34.  00:809A  10 F8               		DJNZ		.inicia_nivel_1
      35.  00:809C                      
      36.  00:809C  06 38               		LD			 B, 56		;la mitad de bytes del array de un nivel
      37.  00:809E  21 99 A7            		LD 			HL, habitaciones_nivel2
      38.  00:80A1                      .inicia_nivel_2
      39.  00:80A1  7E                  		LD		 	 A, (HL)
      40.  00:80A2  CB E7               		SET			 4, A 		;el 4 bit a 0 indica que por esa habitacion no se ha pasado/no se han atado todos los enemigos
      41.  00:80A4  77                  		LD			(HL), A
      42.  00:80A5  23 23               [2]		INC			HL
      43.  00:80A7  10 F8               		DJNZ		.inicia_nivel_2
      44.  00:80A9                      
      45.  00:80A9  06 38               		LD			 B, 56		;la mitad de bytes del array de un nivel
      46.  00:80AB  21 09 A8            		LD 			HL, habitaciones_nivel3
      47.  00:80AE                      .inicia_nivel_3
      48.  00:80AE  7E                  		LD		 	 A, (HL)
      49.  00:80AF  CB E7               		SET			 4, A 		;el 4 bit a 0 indica que por esa habitacion no se ha pasado/no se han atado todos los enemigos
      50.  00:80B1  77                  		LD			(HL), A
      51.  00:80B2  23 23               [2]		INC			HL
      52.  00:80B4  10 F8               		DJNZ		.inicia_nivel_3
      53.  00:80B6                      
      54.  00:80B6  06 38               		LD			 B, 56		;la mitad de bytes del array de un nivel
      55.  00:80B8  21 79 A8            		LD 			HL, habitaciones_nivel4
      56.  00:80BB                      .inicia_nivel_4
      57.  00:80BB  7E                  		LD		 	 A, (HL)
      58.  00:80BC  CB E7               		SET			 4, A 		;el 4 bit a 0 indica que por esa habitacion no se ha pasado/no se han atado todos los enemigos
      59.  00:80BE  77                  		LD			(HL), A
      60.  00:80BF  23 23               [2]		INC			HL
      61.  00:80C1  10 F8               		DJNZ		.inicia_nivel_4
      62.  00:80C3                      
      63.  00:80C3  06 38               		LD			 B, 56		;la mitad de bytes del array de un nivel
      64.  00:80C5  21 E9 A8            		LD 			HL, habitaciones_nivel5
      65.  00:80C8                      .inicia_nivel_5
      66.  00:80C8  7E                  		LD		 	 A, (HL)
      67.  00:80C9  CB E7               		SET			 4, A 		;el 4 bit a 0 indica que por esa habitacion no se ha pasado/no se han atado todos los enemigos
      68.  00:80CB  77                  		LD			(HL), A
      69.  00:80CC  23 23               [2]		INC			HL
      70.  00:80CE  10 F8               		DJNZ		.inicia_nivel_5
      71.  00:80D0                      
      72.  00:80D0  06 38               		LD			 B, 56		;la mitad de bytes del array de un nivel
      73.  00:80D2  21 59 A9            		LD 			HL, habitaciones_nivel6
      74.  00:80D5                      .inicia_nivel_6
      75.  00:80D5  7E                  		LD		 	 A, (HL)
      76.  00:80D6  CB E7               		SET			 4, A 		;el 4 bit a 0 indica que por esa habitacion no se ha pasado/no se han atado todos los enemigos
      77.  00:80D8  77                  		LD			(HL), A
      78.  00:80D9  23 23               [2]		INC			HL
      79.  00:80DB  10 F8               		DJNZ		.inicia_nivel_6
      80.  00:80DD                      
      81.  00:80DD  E1                  		POP			HL
      82.  00:80DE  C1                  		POP			BC
      83.  00:80DF  F1                  		POP			AF
      84.  00:80E0                      fin_iniciliza_niveles:
      85.  00:80E0  C9                  		RET
      86.  00:80E1                      
      87.  00:80E1                      
      88.  00:80E1                      ;;=====================================================
      89.  00:80E1                      ;;ACTUALIZA_MARCADOR_VIDAS
      90.  00:80E1                      ;;=====================================================	
      91.  00:80E1                      ; función:  actualiza el buffer de vidas
      92.  00:80E1                      ; entrada: 	prota_vidas
      93.  00:80E1                      ; salida: 	array_aux_vidas
      94.  00:80E1                      ; toca:		A,B,HL
      95.  00:80E1                      actualiza_marcador_vidas:
      96.  00:80E1                      	;para no andar restando pongo todos los huecos a negro y luego en otro bucle las caras
      97.  00:80E1                      	;1-pinto todo en blanco
      98.  00:80E1  21 E8 A9            	LD		HL,array_aux_vidas
      99.  00:80E4  06 08               	LD		 B,NMAXVIDREL
     100.  00:80E6                      loop_marcador_caras_negro:	;asignar espacios en negro
     101.  00:80E6  36 00               	LD		(HL),0			;0 posición mapa tiles para nada (es transparente pero el fondo es negro)
     102.  00:80E8  23                  	INC		HL
     103.  00:80E9  10 FB               	DJNZ	loop_marcador_caras_negro
     104.  00:80EB                      fin_loop_marcador_caras_negro:
     105.  00:80EB                      	;2-pinto las caras según el n de vidas
     106.  00:80EB  3A E3 A9            	LD		 A, (prota_vidas)
     107.  00:80EE  B7                  	OR		 A
     108.  00:80EF  C8                  	RET 	 Z
     109.  00:80F0  47                  	LD		 B, A
     110.  00:80F1  21 E8 A9            	LD		HL, array_aux_vidas
     111.  00:80F4                      loop_marcador_caras: ;asignar caras
     112.  00:80F4  36 0D               	LD		(HL), POSCARAMAP	;13 posición mapa tiles para cara
     113.  00:80F6  23                  	INC		HL
     114.  00:80F7  10 FB               	DJNZ	loop_marcador_caras
     115.  00:80F9                      fin_loop_marcador_caras:
     116.  00:80F9                      fin_actualiza_marcador_vidas:
     117.  00:80F9  C9                  	RET
     118.  00:80FA                      
     119.  00:80FA                      
     120.  00:80FA                      ;;=====================================================
     121.  00:80FA                      ;;ACTUALIZA_BUFFER_RELIQUIAS
     122.  00:80FA                      ;;=====================================================	
     123.  00:80FA                      ; función: 	actualiza buffer de reliquias
     124.  00:80FA                      ; entrada: 	prota_reliquias
     125.  00:80FA                      ; salida: 	array_aux_reliquias
     126.  00:80FA                      ; toca:		A,B,HL
     127.  00:80FA                      actualiza_buffer_reliquias:	
     128.  00:80FA                      	;para no andar restando pongo todos los huecos a negro y luego en otro bucle las reliquias
     129.  00:80FA                      	;1-pinto todo en blanco
     130.  00:80FA  21 F0 A9            	LD		HL, array_aux_reliquias
     131.  00:80FD  06 08               	LD		 B, NMAXVIDREL
     132.  00:80FF  AF                  	XOR		 A
     133.  00:8100                      loop_buffer_reliquias_negro:	;asignar espacios en negro
     134.  00:8100  77                  	LD		(HL), A			;0 posición mapa tiles para nada (es transparente pero el fondo es negro)
     135.  00:8101  23                  	INC		HL
     136.  00:8102  10 FC               	DJNZ	loop_buffer_reliquias_negro
     137.  00:8104                      
     138.  00:8104                      	;2-pinto las cruces según el n de reliquias
     139.  00:8104  21 F0 A9            	LD		HL, array_aux_reliquias
     140.  00:8107  3A E4 A9            	LD		 A, (prota_reliquias)
     141.  00:810A  B7                  	OR		 A
     142.  00:810B  C8                  	RET		 Z
     143.  00:810C  47                  	LD		 B, A
     144.  00:810D                      loop_buffer_reliquias: ;asignar reliquias
     145.  00:810D  36 11               	LD		(HL), POSRELIMAP	;17 posición mapa tiles para reliquia
     146.  00:810F  23                  	INC		HL
     147.  00:8110  10 FB               	DJNZ	loop_buffer_reliquias
     148.  00:8112                      fin_actualiza_buffer_reliquias:
     149.  00:8112  C9                  	RET
     150.  00:8113                      
     151.  00:8113                      
     152.  00:8113                      
     153.  00:8113                      ;;=====================================================
     154.  00:8113                      ;;LOCALIZA_INFO_HABITACION
     155.  00:8113                      ;;=====================================================	
     156.  00:8113                      ; función: 	busca las puertas que hay que pintar egún la posición del usuario y las pone en habitacion_actual
     157.  00:8113                      ; entrada: 	prota.pos_mapy, prota.pos_mapx, prota_nivel habitaciones_juego
     158.  00:8113                      ; salida: 	habitacion_actual
     159.  00:8113                      ; toca:		todo
     160.  00:8113                      ;ejemplo: nivel 4, posy 5 y posx 3
     161.  00:8113                      ;3 + 5 x 8 + 4 x 49
     162.  00:8113                      localiza_info_habitacion:
     163.  00:8113                      	;~ PUSH	AF
     164.  00:8113                      	;~ PUSH	BC
     165.  00:8113                      	;~ PUSH	DE
     166.  00:8113                      	;~ PUSH	HL
     167.  00:8113                      
     168.  00:8113                      ;primera posición: me coloco en la columna correcta
     169.  00:8113  21 B9 A6            	LD		HL, habitaciones_juego
     170.  00:8116                      .situo_columna:	
     171.  00:8116  3A E5 A9            	LD		 A, (prota_pos_mapx)
     172.  00:8119  CB 27               	SLA		 A				;multiplico por dos ya que cada habitación va de dos en dos bytes
     173.  00:811B  06 00               	LD		 B, 0
     174.  00:811D  4F                  	LD		 C, A
     175.  00:811E  09                  	ADD 	HL, BC			;sumo a la posición 0 la columnax2 en la que situarme
     176.  00:811F                      	
     177.  00:811F                      .situo_fila:
     178.  00:811F  3A E6 A9            	LD		A, (prota_pos_mapy)
     179.  00:8122  B7                  	OR	 	A
     180.  00:8123  CA 30 81            	JP		Z, .situo_nivel	;si la fila es 0 no es necesario seguir operando en fila
     181.  00:8126                      	
     182.  00:8126  47                  	LD		B, A
     183.  00:8127  AF                  	XOR		A
     184.  00:8128                      .loop_suma_fila:
     185.  00:8128  C6 10               	ADD		16				;cada fila tiene 16 bytes
     186.  00:812A  10 FC               	DJNZ	.loop_suma_fila
     187.  00:812C                      	
     188.  00:812C  06 00               	LD		 B, 0
     189.  00:812E  4F                  	LD		 C, A
     190.  00:812F                      
     191.  00:812F  09                  	ADD 	HL, BC			;sumo a la columna 16 x filas para situarme en la fila correcta
     192.  00:8130                      
     193.  00:8130                      .situo_nivel:
     194.  00:8130  3A E2 A9            	LD		 A, (prota_nivel)
     195.  00:8133  B7                  	OR	 	 A
     196.  00:8134  CA 44 81            	JP		 Z, .actualiza_variable_habitacion	;si el nivel es 0 al pasar por las anterirores ya estoy situado actualizo la variable y termino
     197.  00:8137                      	
     198.  00:8137  E5                  	PUSH	HL				;guardo el resultado intermedio
     199.  00:8138                      	
     200.  00:8138  47                  	LD		 B, A			;preparo la varible del bucle
     201.  00:8139  11 70 00            	LD		DE, 112			;112 = 16x42 son los bytes de cada matriz-nivel
     202.  00:813C  21 00 00            	LD		HL, 0
     203.  00:813F                      .loop_suma_nivel:
     204.  00:813F  19                  	ADD		HL, DE
     205.  00:8140  10 FD               	DJNZ	.loop_suma_nivel
     206.  00:8142                      	
     207.  00:8142  D1                  	POP		DE				;devuelvo el resultado intermedio en DE que ya no lo necesito
     208.  00:8143                      	
     209.  00:8143  19                  	ADD		HL, DE			;sumo el resultado del nivel al resultado intermedio anterior
     210.  00:8144                      	
     211.  00:8144                      .actualiza_variable_habitacion
     212.  00:8144  7E                  	LD		 A, (HL)
     213.  00:8145  32 B4 A6            	LD		(habitacion_actual), A
     214.  00:8148                      	
     215.  00:8148                      	;actualizo la variable habitacion_actual y su puntero para poder modificar por si se vuelve a pasar por ahí
     216.  00:8148  DD 21 B6 A6         	LD		IX, habitacion_actual_puntero
     217.  00:814C  DD 74 00            	LD		(IX), H
     218.  00:814F  DD 75 01            	LD		(IX + 1), L
     219.  00:8152                      	
     220.  00:8152                      	;actualizo la variable is_habitacion_terminada
     221.  00:8152  3A B4 A6            	LD		 A, (habitacion_actual)
     222.  00:8155  E6 10               	AND		00010000b					;me interresa sólo el bit 4 (si la habitación ha sido recorrida)
     223.  00:8157                      [4]	SRA		 A
     223.  00:8157  CB 2F CB 2F CB 2F CB 2F 
     224.  00:815F  32 B8 A6            	LD		(is_habitacion_terminada), A
     225.  00:8162                      	
     226.  00:8162                      	;actualizo la variable habitacion_extras
     227.  00:8162  23                  	INC		HL				;el byte de los extras está antes de donde se especifican las puertas
     228.  00:8163  7E                  	LD		 A, (HL)
     229.  00:8164  32 B5 A6            	LD		(habitacion_extras), A
     230.  00:8167                      
     231.  00:8167                      	;~ POP		HL	
     232.  00:8167                      	;~ POP		DE
     233.  00:8167                      	;~ POP		BC
     234.  00:8167                      	;~ POP		AF
     235.  00:8167                      fin_localiza_info_habitacion:
     236.  00:8167  C9                  	RET
     237.  00:8168                      	
     238.  00:8168                      
     239.  00:8168                      ;;=====================================================
     240.  00:8168                      ;;TERMINADA_HABIACION_RECORRIDA
     241.  00:8168                      ;;=====================================================	
     242.  00:8168                      ; función: 	usando la variable prota_pos_mapx pone un 1 a donde apunta habitacion_recorrida (el array... byte 14 de 
     243.  00:8168                      ;			habitaciones recorridas en esa fila) para ver si uestra enemigos o no y permita pasar por puertas
     244.  00:8168                      ; entrada: 	prota_pos_mapx, habitacion_recorrida
     245.  00:8168                      ; salida: 	habitacion_recorrida (byte 14 de la fila de habitaciones) actualizada con OR A (en A la habitacion)
     246.  00:8168                      ; toca:		IX, HL, AF
     247.  00:8168                      terminada_habitacion_recorrida:
     248.  00:8168  21 B6 A6            		LD			HL, habitacion_actual_puntero
     249.  00:816B  7E                  		LD			 A, (HL)
     250.  00:816C  CB E7               		SET			 4, A
     251.  00:816E  77                  		LD			(HL), A
     252.  00:816F                      		
     253.  00:816F  3E 01               		LD			 A, HABTERMIN	;da igual qué bit mientras sea distinto de 0 pero se pone 1
     254.  00:8171  32 B8 A6            		LD			(is_habitacion_terminada), A
     255.  00:8174                      		
     256.  00:8174                      		;este trozo no sirve de nada pero ya e quedo más tranquilo si lo pongo, por ser exacto y completo
     257.  00:8174                      		;no sirve porque se cambiará de habitación y se perderá/actualizará el dato
     258.  00:8174  3A B4 A6            		LD			 A, (habitacion_actual)
     259.  00:8177  CB E7               		SET			 4, A
     260.  00:8179  32 B4 A6            		LD			(habitacion_actual), A
     261.  00:817C                      fin_terminada_habitacion_recorrida:
     262.  00:817C  C9                  		RET
     263.  00:817D                      
     264.  00:817D                      
     265.  00:817D                      
     266.  00:817D                      ;;=====================================================
     267.  00:817D                      ;;ENTRA_HABITACION												*no terminada
     268.  00:817D                      ;;=====================================================	
     269.  00:817D                      ; función: 	actualiza elementos en pantalla cuando hay cambios en habitación
     270.  00:817D                      ;			fondo
     271.  00:817D                      ;			puertas
     272.  00:817D                      ;			ayudas
     273.  00:817D                      ;			imagenes
     274.  00:817D                      ;			mapa inferior
     275.  00:817D                      ;			enemigos
     276.  00:817D                      ; entrada: 	prota_pos_mapy, prota_pos_mapy, prota_nivel
     277.  00:817D                      ; salida: 	
     278.  00:817D                      entra_habitacion:
     279.  00:817D  CD F8 81            		CALL	pinta_parte_superior_pantalla
     280.  00:8180  CD CF 87            		CALL	pinta_puertas
     281.  00:8183  CD 3C 85            		CALL	pinta_extra_fondo
     282.  00:8186  CD D7 9B            		CALL	pinta_ayudas_habitacion
     283.  00:8189                      	
     284.  00:8189  C3 8F 81            		JP		pinta_heroe_mapa
     285.  00:818C                      fin_entra_habitacion:
     286.  00:818C                      
     287.  00:818C                      
     288.  00:818C                      ;;=====================================================
     289.  00:818C                      ;;SALE_HABITACION
     290.  00:818C                      ;;=====================================================	
     291.  00:818C                      ; función: 	actualiza elementos en pantalla cuando hay cambios en habitación
     292.  00:818C                      ;			para salir de una habitacion
     293.  00:818C                      ; entrada: 	
     294.  00:818C                      ; salida: 	
     295.  00:818C                      sale_habitacion:
     296.  00:818C  C3 97 81            		JP		pinta_blanco_mapa
     297.  00:818F                      fin_sale_habitacion:
     298.  00:818F                      
     299.  00:818F                      
     300.  00:818F                      	
     301.  00:818F                      ;;=====================================================
     302.  00:818F                      ;;PINTA_HEROE_MAPA
     303.  00:818F                      ;;PINTA_BLANCO_MAPA
     304.  00:818F                      ;;=====================================================	
     305.  00:818F                      ; función: 	pinta el iconito del heroe en el mapa o un espacio en blanco
     306.  00:818F                      ; entrada: 	
     307.  00:818F                      ; salida: 	
     308.  00:818F                      ; toca:		todo
     309.  00:818F                      pinta_heroe_mapa:
     310.  00:818F  3E 13               		LD		 A, TILEPROTAM
     311.  00:8191  32 07 AA            		LD		(elemento_pintar_mapa), A
     312.  00:8194  C3 26 84            		JP		posiciona_en_mapa		;se le pasa elemento_pintar_mapa (tile del prota) está el prota y prota.posx y posy
     313.  00:8197                      fin_pinta_heroe_mapa:
     314.  00:8197                      pinta_blanco_mapa:
     315.  00:8197  3E 09               		LD		 A, TILEGRISM
     316.  00:8199  32 07 AA            		LD		(elemento_pintar_mapa), A
     317.  00:819C  C3 26 84            		JP		posiciona_en_mapa		;se le pasa elemento_pintar_mapa (tile del prota) está el prota y prota.posx y posy
     318.  00:819F                      fin_pinta_blanco_mapa:
     319.  00:819F                      	
     320.  00:819F                      	
     321.  00:819F                      	
     322.  00:819F                      	
     323.  00:819F                      	
     324.  00:819F                      	
     325.  00:819F                      	
     326.  00:819F                      	
     327.  00:819F                      	
     328.  00:819F                      	
     329.  00:819F                      	
     161   00:819F                      	
     162   00:819F                      	include "subr_general.asm"
       1.  00:819F                      ;;=====================================================
       2.  00:819F                      ;;DEFINICIÓN DE SUBRUTINAS GENERALES USABLES PARA CUALQUIER PROYECTO
       3.  00:819F                      ;;=====================================================	
       4.  00:819F                      
       5.  00:819F                      ;;=====================================================
       6.  00:819F                      ;;SUMA_A_BC
       7.  00:819F                      ;;=====================================================	
       8.  00:819F                      ; función: 	suma A a BC por si da más de 255
       9.  00:819F                      ; entrada: 	A, BC
      10.  00:819F                      ; salida: 	A + BC
      11.  00:819F                      ; toca:		A, BC
      12.  00:819F                      suma_A_BC:
      13.  00:819F  81                  	ADD		 C
      14.  00:81A0  4F                  	LD		 C, A
      15.  00:81A1  88                  	ADC		 B
      16.  00:81A2  91                  	SUB		 C
      17.  00:81A3  47                  	LD		 B, A
      18.  00:81A4                      fin_suma_A_BC:
      19.  00:81A4  C9                  	RET
      20.  00:81A5                      	
      21.  00:81A5                      ;;=====================================================
      22.  00:81A5                      ;;SUMA_A_HL
      23.  00:81A5                      ;;=====================================================	
      24.  00:81A5                      ; función: 	suma A a BC por si da más de 255
      25.  00:81A5                      ; entrada: 	A, HL
      26.  00:81A5                      ; salida: 	A + HL
      27.  00:81A5                      ; toca:		A, HL
      28.  00:81A5                      suma_A_HL:
      29.  00:81A5  85                  	ADD		 L
      30.  00:81A6  6F                  	LD		 L, A
      31.  00:81A7  8C                  	ADC		 H
      32.  00:81A8  95                  	SUB		 L
      33.  00:81A9  67                  	LD		 H, A
      34.  00:81AA                      fin_suma_A_HL:
      35.  00:81AA  C9                  	RET
      36.  00:81AB                      	
      37.  00:81AB                      	
      38.  00:81AB                      ;;=====================================================
      39.  00:81AB                      ;;TEST_OK
      40.  00:81AB                      ;;=====================================================	
      41.  00:81AB                      ; función: para pruebas.. cambia el color de fondo cuando se le llama
      42.  00:81AB                      test_OK:
      43.  00:81AB  F5                  	PUSH	AF
      44.  00:81AC                      	
      45.  00:81AC  3E 0F               	LD		 A, 15
      46.  00:81AE                      	
      47.  00:81AE  32 E9 F3            	LD 		(FORCLR), A
      48.  00:81B1  23                  	INC		HL
      49.  00:81B2                      	
      50.  00:81B2  32 EA F3            	LD 		(BAKCLR), A
      51.  00:81B5  23                  	INC		HL
      52.  00:81B6                      	
      53.  00:81B6  7E                  	LD		 A, (HL)
      54.  00:81B7  32 EB F3            	LD 		(BDRCLR), A
      55.  00:81BA                      	
      56.  00:81BA  CD 62 00            	CALL	CHGCLR 
      57.  00:81BD                      	
      58.  00:81BD  F1                  	POP		AF
      59.  00:81BE                      fin_test_OK:
      60.  00:81BE  C9                  	RET
     163   00:81BF                      	
     164   00:81BF                      	include "subr_pintapantalla.asm"
       1.  00:81BF                      ;;=====================================================
       2.  00:81BF                      ;;DEFINICIÓN DE SUBRUTINAS
       3.  00:81BF                      ;;=====================================================	
       4.  00:81BF                      ;relacionadas con pintado en pantalla (y no sprites)
       5.  00:81BF                      
       6.  00:81BF                      
       7.  00:81BF                      ;;=====================================================
       8.  00:81BF                      ;;COLOR_PANTALLA
       9.  00:81BF                      ;;=====================================================	
      10.  00:81BF                      ; función: 	el equivalente en basic a color 15,1,1
      11.  00:81BF                      ; entrada: 	HL	que apunta a un array de bytes con 3 bytes FORCLR, BAKCLR y BDRCLR
      12.  00:81BF                      ; salida: 	-
      13.  00:81BF                      ; toca: 	todo
      14.  00:81BF                      color_pantalla:
      15.  00:81BF  7E                  	LD		 A, (HL)			;FORCLR 
      16.  00:81C0  32 E9 F3            	LD 		(FORCLR),A
      17.  00:81C3  23                  	INC		HL
      18.  00:81C4                      	
      19.  00:81C4  7E                  	LD		 A, (HL)			;BAKCLR
      20.  00:81C5  32 EA F3            	LD 		(BAKCLR),A
      21.  00:81C8  23                  	INC		HL
      22.  00:81C9                      	
      23.  00:81C9  7E                  	LD		 A, (HL)
      24.  00:81CA  32 EB F3            	LD 		(BDRCLR),A			;BDRCLR
      25.  00:81CD  C3 62 00            	JP		CHGCLR 
      26.  00:81D0                      fin_color_pantalla:
      27.  00:81D0                      
      28.  00:81D0                      
      29.  00:81D0                      ;;=====================================================
      30.  00:81D0                      ;;PREPARAPANTALLA
      31.  00:81D0                      ;;=====================================================	
      32.  00:81D0                      ; función: elimina clic cuando se pulsa tecla, cls, screen 2,2
      33.  00:81D0                      ; entrada: -
      34.  00:81D0                      ; salida: -
      35.  00:81D0                      ; toca: si no son todos los regristros, casi todos
      36.  00:81D0                      sub_preparapantalla:
      37.  00:81D0                      	;toca A y Z
      38.  00:81D0                      elimina_clic;
      39.  00:81D0  AF                  	XOR		 A
      40.  00:81D1  32 DB F3            	LD		(CLIKSW),A
      41.  00:81D4                      fin_elimina_clic:
      42.  00:81D4                      
      43.  00:81D4                      	;toca A
      44.  00:81D4                      limpia_pantalla:
      45.  00:81D4  AF                  	XOR		 A
      46.  00:81D5  CD C3 00            	CALL 	CLS
      47.  00:81D8                      fin_limpia_pantalla:
      48.  00:81D8                      
      49.  00:81D8                      	;toca A y direcciones #F3E9/#F3EA/#F3EB, poner en HL array con 3 valores
      50.  00:81D8  21 C9 A9            	LD		HL, color_base
      51.  00:81DB  CD BF 81            	CALL	color_pantalla
      52.  00:81DE                      	
      53.  00:81DE                      	;cambiamos a SCREEN 2,2 del BASIC
      54.  00:81DE                      	;toca A
      55.  00:81DE                      screen2:
      56.  00:81DE  3E 02               	LD		 A, 2
      57.  00:81E0  CD 5F 00            	CALL	CHGMOD			;selecciona screen 2
      58.  00:81E3                      sprites_16_16:
      59.  00:81E3  3A E0 F3            	LD		 A, (RG1SAV)
      60.  00:81E6  F6 02               	OR		00000010b		;fuerza sprites de 16x16
      61.  00:81E8  32 E0 F3            	LD		(RG1SAV), A		;no lo guardamos en la copia de variables del sistema
      62.  00:81EB  47                  	LD		 B, A
      63.  00:81EC  0E 01               	LD		 C, 1
      64.  00:81EE  C3 47 00            	JP		WRTVDP			;opción alternativa de escribir las tres lineas siguientes
      65.  00:81F1                      fin_sub_preparapantalla:
      66.  00:81F1                      	
      67.  00:81F1                      
      68.  00:81F1                      ;;=====================================================
      69.  00:81F1                      ;;PINTA_PANTALLA_COMPLETA
      70.  00:81F1                      ;;=====================================================	
      71.  00:81F1                      ; función: pinta el escenario, las 3 partes
      72.  00:81F1                      ; entrada: -
      73.  00:81F1                      ; salida: -
      74.  00:81F1                      ; toca: si no son todos los regristros, casi todos
      75.  00:81F1                      pinta_pantalla_completa:
      76.  00:81F1  CD F8 81            	CALL 	pinta_parte_superior_pantalla
      77.  00:81F4                      	
      78.  00:81F4  CD 16 83            	CALL 	pinta_parte_inferior_pantalla	
      79.  00:81F7                      fin_pinta_pantalla_completa:
      80.  00:81F7  C9                  	RET
      81.  00:81F8                      
      82.  00:81F8                      
      83.  00:81F8                      ;;=====================================================
      84.  00:81F8                      ;;PINTA_PARTE_SUPERIOR_PANTALLA
      85.  00:81F8                      ;;=====================================================	
      86.  00:81F8                      ; función: pinta el escenario, los dos bancos superiores
      87.  00:81F8                      ; entrada: -
      88.  00:81F8                      ; salida: -
      89.  00:81F8                      ; toca: si no son todos los regristros, casi todos
      90.  00:81F8                      pinta_parte_superior_pantalla:
      91.  00:81F8  3A E2 A9            	LD		 A, (prota_nivel)
      92.  00:81FB  CA 29 82            	JP		 Z, .carga_nivel_0
      93.  00:81FE  3D                  	DEC		 A
      94.  00:81FF  3A E2 A9            	LD		 A, (prota_nivel)
      95.  00:8202  CA 44 82            	JP		 Z, .carga_nivel_1
      96.  00:8205  3D                  	DEC		 A
      97.  00:8206  3A E2 A9            	LD		 A, (prota_nivel)
      98.  00:8209  CA 5F 82            	JP		 Z, .carga_nivel_2
      99.  00:820C  3D                  	DEC		 A
     100.  00:820D  3A E2 A9            	LD		 A, (prota_nivel)
     101.  00:8210  CA 7A 82            	JP		 Z, .carga_nivel_3
     102.  00:8213  3D                  	DEC		 A
     103.  00:8214  3A E2 A9            	LD		 A, (prota_nivel)
     104.  00:8217  CA 95 82            	JP		 Z, .carga_nivel_4
     105.  00:821A  3D                  	DEC		 A
     106.  00:821B  3A E2 A9            	LD		 A, (prota_nivel)
     107.  00:821E  CA B0 82            	JP		 Z, .carga_nivel_5
     108.  00:8221  3D                  	DEC		 A
     109.  00:8222  3A E2 A9            	LD		 A, (prota_nivel)
     110.  00:8225  CA CB 82            	JP		 Z, .carga_nivel_6
     111.  00:8228  3D                  	DEC		 A
     112.  00:8229                      	
     113.  00:8229                      .carga_nivel_0:
     114.  00:8229  21 48 AC            	LD		HL, tiles_patrones_nivel0
     115.  00:822C  22 10 83            	LD		(tiles_patrones), HL
     116.  00:822F  21 72 AE            	LD		HL, tiles_color_nivel0
     117.  00:8232  22 12 83            	LD		(tiles_colores), HL
     118.  00:8235  21 48 AC            	LD		HL, tiles_patrones_nivel0
     119.  00:8238  22 10 83            	LD		(tiles_patrones), HL
     120.  00:823B  21 DD AE            	LD		HL, tiles_mapa_nivel0
     121.  00:823E  22 14 83            	LD		(tiles_mapa), HL
     122.  00:8241  C3 E3 82            	JP		.fin_carga_niveles
     123.  00:8244                      
     124.  00:8244                      .carga_nivel_1:
     125.  00:8244  21 12 AF            	LD		HL, tiles_patrones_nivel1
     126.  00:8247  22 10 83            	LD		(tiles_patrones), HL
     127.  00:824A  21 C7 B0            	LD		HL, tiles_color_nivel1
     128.  00:824D  22 12 83            	LD		(tiles_colores), HL
     129.  00:8250  21 12 AF            	LD		HL, tiles_patrones_nivel1
     130.  00:8253  22 10 83            	LD		(tiles_patrones), HL
     131.  00:8256  21 0E B1            	LD		HL, tiles_mapa_nivel1
     132.  00:8259  22 14 83            	LD		(tiles_mapa), HL
     133.  00:825C  C3 E3 82            	JP		.fin_carga_niveles
     134.  00:825F                      	
     135.  00:825F                      .carga_nivel_2:
     136.  00:825F  21 43 B1            	LD		HL, tiles_patrones_nivel2
     137.  00:8262  22 10 83            	LD		(tiles_patrones), HL
     138.  00:8265  21 F8 B2            	LD		HL, tiles_color_nivel2
     139.  00:8268  22 12 83            	LD		(tiles_colores), HL
     140.  00:826B  21 43 B1            	LD		HL, tiles_patrones_nivel2
     141.  00:826E  22 10 83            	LD		(tiles_patrones), HL
     142.  00:8271  21 3F B3            	LD		HL, tiles_mapa_nivel2
     143.  00:8274  22 14 83            	LD		(tiles_mapa), HL
     144.  00:8277  C3 E3 82            	JP		.fin_carga_niveles
     145.  00:827A                      	
     146.  00:827A                      .carga_nivel_3:
     147.  00:827A  21 74 B3            	LD		HL, tiles_patrones_nivel3
     148.  00:827D  22 10 83            	LD		(tiles_patrones), HL
     149.  00:8280  21 29 B5            	LD		HL, tiles_color_nivel3
     150.  00:8283  22 12 83            	LD		(tiles_colores), HL
     151.  00:8286  21 74 B3            	LD		HL, tiles_patrones_nivel3
     152.  00:8289  22 10 83            	LD		(tiles_patrones), HL
     153.  00:828C  21 70 B5            	LD		HL, tiles_mapa_nivel3
     154.  00:828F  22 14 83            	LD		(tiles_mapa), HL
     155.  00:8292  C3 E3 82            	JP		.fin_carga_niveles
     156.  00:8295                      	
     157.  00:8295                      .carga_nivel_4:
     158.  00:8295  21 A5 B5            	LD		HL, tiles_patrones_nivel4
     159.  00:8298  22 10 83            	LD		(tiles_patrones), HL
     160.  00:829B  21 5A B7            	LD		HL, tiles_color_nivel4
     161.  00:829E  22 12 83            	LD		(tiles_colores), HL
     162.  00:82A1  21 A5 B5            	LD		HL, tiles_patrones_nivel4
     163.  00:82A4  22 10 83            	LD		(tiles_patrones), HL
     164.  00:82A7  21 A1 B7            	LD		HL, tiles_mapa_nivel4
     165.  00:82AA  22 14 83            	LD		(tiles_mapa), HL
     166.  00:82AD  C3 E3 82            	JP		.fin_carga_niveles
     167.  00:82B0                      	
     168.  00:82B0                      .carga_nivel_5:
     169.  00:82B0  21 D6 B7            	LD		HL, tiles_patrones_nivel5
     170.  00:82B3  22 10 83            	LD		(tiles_patrones), HL
     171.  00:82B6  21 8B B9            	LD		HL, tiles_color_nivel5
     172.  00:82B9  22 12 83            	LD		(tiles_colores), HL
     173.  00:82BC  21 D6 B7            	LD		HL, tiles_patrones_nivel5
     174.  00:82BF  22 10 83            	LD		(tiles_patrones), HL
     175.  00:82C2  21 D2 B9            	LD		HL, tiles_mapa_nivel5
     176.  00:82C5  22 14 83            	LD		(tiles_mapa), HL
     177.  00:82C8  C3 E3 82            	JP		.fin_carga_niveles
     178.  00:82CB                      	
     179.  00:82CB                      .carga_nivel_6:
     180.  00:82CB  21 07 BA            	LD		HL, tiles_patrones_nivel6
     181.  00:82CE  22 10 83            	LD		(tiles_patrones), HL
     182.  00:82D1  21 BC BB            	LD		HL, tiles_color_nivel6
     183.  00:82D4  22 12 83            	LD		(tiles_colores), HL
     184.  00:82D7  21 07 BA            	LD		HL, tiles_patrones_nivel6
     185.  00:82DA  22 10 83            	LD		(tiles_patrones), HL
     186.  00:82DD  21 03 BC            	LD		HL, tiles_mapa_nivel6
     187.  00:82E0  22 14 83            	LD		(tiles_mapa), HL
     188.  00:82E3                      ;	JP		.fin_carga niveles			;no necesario
     189.  00:82E3                      .fin_carga_niveles:
     190.  00:82E3                      
     191.  00:82E3                      	;cargando banco 1
     192.  00:82E3                      	;cargamos los patrones
     193.  00:82E3  2A 10 83            	LD		HL, (tiles_patrones)
     194.  00:82E6  11 00 00            	LD		DE, CHRTBL
     195.  00:82E9  CD 54 9C            	CALL	depack_VRAM
     196.  00:82EC                      	;cargamos los colores de los patrones
     197.  00:82EC  2A 12 83            	LD		HL, (tiles_colores)
     198.  00:82EF  11 00 20            	LD		DE, CLRTBL
     199.  00:82F2  CD 54 9C            	CALL	depack_VRAM
     200.  00:82F5                      	
     201.  00:82F5                      	;cargando banco 2
     202.  00:82F5                      	;cargamos los patrones
     203.  00:82F5  2A 10 83            	LD		HL, (tiles_patrones)
     204.  00:82F8  11 00 08            	LD		DE, CHRTBL + #0800
     205.  00:82FB  CD 54 9C            	CALL	depack_VRAM	
     206.  00:82FE                      	;cargamos los colores de los patrones
     207.  00:82FE  2A 12 83            	LD		HL, (tiles_colores)
     208.  00:8301  11 00 28            	LD		DE, CLRTBL + #0800
     209.  00:8304  CD 54 9C            	CALL	depack_VRAM
     210.  00:8307                      	
     211.  00:8307                      	;cargamos mapa de pantalla banco 1 y 2
     212.  00:8307  2A 14 83            	LD		HL, (tiles_mapa)
     213.  00:830A  11 00 18            	LD		DE, TILMAP
     214.  00:830D  C3 54 9C            	JP		depack_VRAM
     215.  00:8310                      fin_pinta_parte_superior_pantalla:
     216.  00:8310  00 00               tiles_patrones:		DW	0
     217.  00:8312  00 00               tiles_colores:		DW	0
     218.  00:8314  00 00               tiles_mapa:			DW	0
     219.  00:8316                      
     220.  00:8316                      
     221.  00:8316                      ;;=====================================================
     222.  00:8316                      ;;PINTA_PARTE_INFERIOR_PANTALLA
     223.  00:8316                      ;;=====================================================	
     224.  00:8316                      ; función: pinta la parte inferior del escenario que es común
     225.  00:8316                      ; entrada: -
     226.  00:8316                      ; salida: -
     227.  00:8316                      ; toca: si no son todos los regristros, casi todos
     228.  00:8316                      pinta_parte_inferior_pantalla:
     229.  00:8316                      	;cangando banco 3
     230.  00:8316                      	;cargamos los patrones
     231.  00:8316  21 38 BC            	LD		HL,tiles_patrones_marcador
     232.  00:8319  11 00 10            	LD		DE,CHRTBL + #1000
     233.  00:831C  CD 54 9C            	CALL	depack_VRAM	
     234.  00:831F                      	;cargamos mapa de pantalla
     235.  00:831F  21 B9 BD            	LD		HL,tiles_mapa_marcador
     236.  00:8322  11 00 1A            	LD		DE,TILMAP + #0200
     237.  00:8325  CD 54 9C            	CALL	depack_VRAM
     238.  00:8328                      	;cargamos los colores de los patrones
     239.  00:8328  21 84 BD            	LD		HL,tiles_color_marcador
     240.  00:832B  11 00 30            	LD		DE,CLRTBL + #1000
     241.  00:832E  C3 54 9C            	JP		depack_VRAM
     242.  00:8331                      fin_pinta_parte_inferior_pantalla:
     243.  00:8331                      
     244.  00:8331                      
     245.  00:8331                      
     246.  00:8331                      ;;=====================================================
     247.  00:8331                      ;;PINTA_VIDAS
     248.  00:8331                      ;;=====================================================	
     249.  00:8331                      ; función: 	actualiza el mapa de tiles para que en el próximo refresco se pinten y actualiza_vidas
     250.  00:8331                      ; entrada: 	array_aux_vidas
     251.  00:8331                      ; salida: 	actualiza_vidas_sn
     252.  00:8331                      ; toca:		todo
     253.  00:8331                      pinta_vidas:
     254.  00:8331  CD E1 80            	CALL	actualiza_marcador_vidas
     255.  00:8334                      	
     256.  00:8334  21 E8 A9            	LD		HL, array_aux_vidas
     257.  00:8337  11 48 1A            	LD		DE, TILMAP + POSVIDAS 	;inicio posición en el mapa de tiles de las vidas
     258.  00:833A  01 08 00            	LD		BC, NMAXVIDREL			;hay 8 posiciones para vidas/reliquias o espacios en negro si no tiene 8 vidas/reliquias
     259.  00:833D  C3 5C 00            	JP		LDIRVM
     260.  00:8340                      fin_pinta_vidas:
     261.  00:8340                      	
     262.  00:8340                      	
     263.  00:8340                      
     264.  00:8340                      ;;=====================================================
     265.  00:8340                      ;;PINTA_RELIQUIAS
     266.  00:8340                      ;;=====================================================	
     267.  00:8340                      ; función: 	actualiza el mapa de tiles para que en el próximo refresco se pinten y actualiza_reliquias
     268.  00:8340                      ; entrada: 	array_aux_reliquias
     269.  00:8340                      ; salida: 	-
     270.  00:8340                      ; toca:		todo
     271.  00:8340                      pinta_reliquias:
     272.  00:8340  CD FA 80            	CALL	actualiza_buffer_reliquias
     273.  00:8343                      	
     274.  00:8343  21 F0 A9            	LD		HL, array_aux_reliquias
     275.  00:8346  11 C8 1A            	LD		DE, TILMAP + POSRELIQ 	;inicio posición en el mapa de tiles de las vidas
     276.  00:8349  01 08 00            	LD		BC, NMAXVIDREL			;hay 8 posiciones para vidas/reliquias o espacios en negro si no tiene 8 vidas/reliquias
     277.  00:834C  C3 5C 00            	JP		LDIRVM
     278.  00:834F                      fin_pinta_reliquias:
     279.  00:834F                      	
     280.  00:834F                      
     281.  00:834F                      
     282.  00:834F                      	
     283.  00:834F                      ;;=====================================================
     284.  00:834F                      ;;PINTA_NIVEL
     285.  00:834F                      ;;=====================================================	
     286.  00:834F                      ; función: 	actualiza el nivel en la parte de puntuación
     287.  00:834F                      ; entrada: 	prota_nivel
     288.  00:834F                      ; salida: 	-
     289.  00:834F                      ; toca:		HL,DE,BC
     290.  00:834F                      pinta_nivel:	
     291.  00:834F                      	;forma más avanzada sin llamada a la bios
     292.  00:834F  01 B4 1A            	LD		BC,TILMAP + POSNIVEL ;posición en el mapa de tiles del tile de nivel
     293.  00:8352  3A E2 A9            	LD		 A, (prota_nivel)	 ;seleccionando la pos del banco de tiles a poner en el mapa
     294.  00:8355  C6 30               	ADD		'0'	
     295.  00:8357  57                  	LD		 D, A
     296.  00:8358                      	
     297.  00:8358  C3 5B 83            	JP		pinta_tile_suelto
     298.  00:835B                      fin_pinta_nivel:
     299.  00:835B                      
     300.  00:835B                      
     301.  00:835B                      
     302.  00:835B                      ;;=====================================================
     303.  00:835B                      ;;PINTA_TILE_SUELTO
     304.  00:835B                      ;;=====================================================	
     305.  00:835B                      ; función: 	pinta al tile que digamos en D, en la posición BC
     306.  00:835B                      ; entrada: 	BC (posición a pintar en el mapa),D (qué se va a pintar el esa posición)
     307.  00:835B                      ; salida: 	-
     308.  00:835B                      ; toca:		-
     309.  00:835B                      pinta_tile_suelto:	
     310.  00:835B  DB 99               	IN		 A,(REGEST)		;leer registro de estado (recomendado)
     311.  00:835D  79                  	LD		 A,C			;primero byte bajo	
     312.  00:835E  D3 99               	OUT		(REGEST),A
     313.  00:8360  78                  	LD		 A,B			;después byte alto  ********************** preguntar a Fernando cómo que byte bajo es B
     314.  00:8361  F6 40               	OR		1000000b		;+64
     315.  00:8363  D3 99               	OUT		(REGEST),A
     316.  00:8365                      	
     317.  00:8365  7A                  	LD		A,D
     318.  00:8366  D3 98               	OUT		(REGESCVDP),A	;escribe A en VRAM en la posición indicada por los dos OUT anteriores
     319.  00:8368                      fin_pinta_tile_suelto:
     320.  00:8368  C9                  	RET
     321.  00:8369                      
     322.  00:8369                      
     323.  00:8369                      
     324.  00:8369                      
     325.  00:8369                      
     326.  00:8369                      ;;=====================================================
     327.  00:8369                      ;;MIRA_PINTA ENERGIA
     328.  00:8369                      ;;=====================================================	
     329.  00:8369                      ; función: 	actualiza el nivel de energia en la parte de puntuación
     330.  00:8369                      ; nota:		el cuadrado más bajo de ejergía siempre estará pintado... se obviará
     331.  00:8369                      ; entrada: 	prota.energia, array_aux_energia
     332.  00:8369                      ; salida: 	-
     333.  00:8369                      ; toca:		ninguno porque usa EXX
     334.  00:8369                      
     335.  00:8369                      ; nota importante... lo mismo interesa hacer esto con un array para comparar y un bucle
     336.  00:8369                      
     337.  00:8369                      mira_pinta_energia:
     338.  00:8369  D9                  	EXX							;por si acaso guardo el contenido de HL (si veo que no es necesario guardarlo lo quito) uso esto en vez de push por el nº ciclos
     339.  00:836A                      	
     340.  00:836A  3A E7 A9            	LD		 A,(prota_energia) 	;para las comparaciones A variable (actual) y B fijo (limites)
     341.  00:836D                      
     342.  00:836D  0E 00               	LD		 C,TILENEGRO		;para agilizar asignaciones en vez de un valor cte uso otro registro
     343.  00:836F                      pinta_ener:
     344.  00:836F                      pinta_ener_tile_8:
     345.  00:836F  21 FF A9            	LD		HL,ultimo_pos_array_aux_energia	;coloco puntero en array e iré decrementando
     346.  00:8372  06 D9               	LD		 B,TILEENERG8
     347.  00:8374  B8                  	CP		 B
     348.  00:8375  38 04               	JR		C,pinta_ener_tile_8_negro
     349.  00:8377  36 0E               	LD		(HL),TILEMAPVERD
     350.  00:8379  18 01               	JR		pinta_ener_tile_7
     351.  00:837B                      pinta_ener_tile_8_negro:
     352.  00:837B  71                  	LD		(HL),C
     353.  00:837C                      
     354.  00:837C                      pinta_ener_tile_7:
     355.  00:837C  2B                  	DEC		HL
     356.  00:837D  06 BA               	LD		 B,TILEENERG7
     357.  00:837F  B8                  	CP		 B
     358.  00:8380  38 04               	JR		C,pinta_ener_tile_7_negro
     359.  00:8382  36 0E               	LD		(HL),TILEMAPVERD
     360.  00:8384  18 01               	JR		pinta_ener_tile_6
     361.  00:8386                      pinta_ener_tile_7_negro:
     362.  00:8386  71                  	LD		(HL),C
     363.  00:8387                      
     364.  00:8387                      pinta_ener_tile_6:
     365.  00:8387  2B                  	DEC		HL
     366.  00:8388  06 9B               	LD		 B,TILEENERG6
     367.  00:838A  B8                  	CP		 B
     368.  00:838B  38 04               	JR		C,pinta_ener_tile_6_negro
     369.  00:838D  36 0E               	LD		(HL),14
     370.  00:838F  18 01               	JR		pinta_ener_tile_5
     371.  00:8391                      pinta_ener_tile_6_negro:
     372.  00:8391  71                  	LD		(HL),C
     373.  00:8392                      
     374.  00:8392                      pinta_ener_tile_5:
     375.  00:8392  2B                  	DEC		HL
     376.  00:8393  06 7C               	LD		 B,TILEENERG5
     377.  00:8395  B8                  	CP		 B
     378.  00:8396  38 04               	JR		C,pinta_ener_tile_5_negro
     379.  00:8398  36 0E               	LD		(HL),TILEMAPVERD
     380.  00:839A  18 01               	JR		pinta_ener_tile_4
     381.  00:839C                      pinta_ener_tile_5_negro:
     382.  00:839C  71                  	LD		(HL),C
     383.  00:839D                      
     384.  00:839D                      pinta_ener_tile_4:
     385.  00:839D  2B                  	DEC		HL
     386.  00:839E  06 5D               	LD		 B,TILEENERG4
     387.  00:83A0  B8                  	CP		 B
     388.  00:83A1  38 04               	JR		C,pinta_ener_tile_4_negro
     389.  00:83A3  36 0F               	LD		(HL),TILEMAPAMAR
     390.  00:83A5  18 01               	JR		pinta_ener_tile_3
     391.  00:83A7                      pinta_ener_tile_4_negro:
     392.  00:83A7  71                  	LD		(HL),C
     393.  00:83A8                      	
     394.  00:83A8                      pinta_ener_tile_3:
     395.  00:83A8  2B                  	DEC		HL
     396.  00:83A9  06 3E               	LD		 B,TILEENERG3
     397.  00:83AB  B8                  	CP		 B
     398.  00:83AC  38 04               	JR		C,pinta_ener_tile_3_negro
     399.  00:83AE  36 0F               	LD		(HL),TILEMAPAMAR
     400.  00:83B0  18 01               	JR		pinta_ener_tile_2
     401.  00:83B2                      pinta_ener_tile_3_negro:
     402.  00:83B2  71                  	LD		(HL),C
     403.  00:83B3                      
     404.  00:83B3                      pinta_ener_tile_2:
     405.  00:83B3  2B                  	DEC		HL
     406.  00:83B4  06 1F               	LD		 B,TILEENERG2
     407.  00:83B6  B8                  	CP		 B
     408.  00:83B7  38 04               	JR		C,pinta_ener_tile_2_negro
     409.  00:83B9  36 10               	LD		(HL),TILEMAPROJO
     410.  00:83BB  18 01               	JR		fin_mira_pinta_energia		;siempre estará pintado el cuadro mínimo
     411.  00:83BD                      pinta_ener_tile_2_negro:
     412.  00:83BD  71                  	LD		(HL),C
     413.  00:83BE                      
     414.  00:83BE                      fin_mira_pinta_energia:
     415.  00:83BE  D9                  	EXX
     416.  00:83BF  C9                  	RET
     417.  00:83C0                      
     418.  00:83C0                      
     419.  00:83C0                      ;;=====================================================
     420.  00:83C0                      ;;PINTA_ENERGIA
     421.  00:83C0                      ;;=====================================================	
     422.  00:83C0                      ; función: 	actualiza el mapa de tiles para que en el próximo refresco se pinte la barra de energia actual
     423.  00:83C0                      ; entrada: 	array_aux_energia
     424.  00:83C0                      ; toca:		todo
     425.  00:83C0                      pinta_energia:
     426.  00:83C0  CD 69 83            	CALL	mira_pinta_energia
     427.  00:83C3                      	
     428.  00:83C3  21 F8 A9            	LD		HL, array_aux_energia
     429.  00:83C6  11 88 1A            	LD		DE, TILMAP + POSENERG 	;inicio posición en el mapa de tiles de las vidas
     430.  00:83C9  01 08 00            	LD		BC, NMAXVIDREL			;hay 8 posiciones para vidas/reliquias o espacios en negro si no tiene 8 vidas/reliquias
     431.  00:83CC  C3 5C 00            	JP		LDIRVM
     432.  00:83CF                      fin_pinta_energia:
     433.  00:83CF                      
     434.  00:83CF                      
     435.  00:83CF                      
     436.  00:83CF                      ;;=====================================================
     437.  00:83CF                      ;;BORRA_MAPA
     438.  00:83CF                      ;;=====================================================	
     439.  00:83CF                      ; función: 	pone todas las habitaciones del mapa a negro (los tiles del mapa los rellena con un array a 0 - caracter en negro)
     440.  00:83CF                      ; entrada: 	array_aux_mapa_limpiar
     441.  00:83CF                      ; salida: 	-
     442.  00:83CF                      ; toca:		AF
     443.  00:83CF                      borra_mapa:
     444.  00:83CF  D9                  	EXX
     445.  00:83D0                      	
     446.  00:83D0  21 00 AA            	LD		HL,array_aux_mapa_limpiar
     447.  00:83D3  11 F8 1A            	LD		DE,TILMAP + POSMAPLIN1 	;inicio posición en el mapa de tiles de la primera fila del mapa
     448.  00:83D6  01 07 00            	LD		BC,NHABNIVEL			;cada nivel son 7 filas con 7 habitaciones "posibles"
     449.  00:83D9  CD 5C 00            	CALL	LDIRVM
     450.  00:83DC                      	
     451.  00:83DC  21 00 AA            	LD		HL,array_aux_mapa_limpiar
     452.  00:83DF  11 D8 1A            	LD		DE,TILMAP + POSMAPLIN2
     453.  00:83E2  01 07 00            	LD		BC,NHABNIVEL
     454.  00:83E5  CD 5C 00            	CALL	LDIRVM
     455.  00:83E8                      
     456.  00:83E8  21 00 AA            	LD		HL,array_aux_mapa_limpiar
     457.  00:83EB  11 B8 1A            	LD		DE,TILMAP + POSMAPLIN3
     458.  00:83EE  01 07 00            	LD		BC,NHABNIVEL
     459.  00:83F1  CD 5C 00            	CALL	LDIRVM
     460.  00:83F4                      
     461.  00:83F4  21 00 AA            	LD		HL,array_aux_mapa_limpiar	
     462.  00:83F7  11 98 1A            	LD		DE,TILMAP + POSMAPLIN4
     463.  00:83FA  01 07 00            	LD		BC,NHABNIVEL
     464.  00:83FD  CD 5C 00            	CALL	LDIRVM
     465.  00:8400                      
     466.  00:8400  21 00 AA            	LD		HL,array_aux_mapa_limpiar	
     467.  00:8403  11 78 1A            	LD		DE,TILMAP + POSMAPLIN5
     468.  00:8406  01 07 00            	LD		BC,NHABNIVEL
     469.  00:8409  CD 5C 00            	CALL	LDIRVM
     470.  00:840C                      
     471.  00:840C  21 00 AA            	LD		HL,array_aux_mapa_limpiar	
     472.  00:840F  11 58 1A            	LD		DE,TILMAP + POSMAPLIN6
     473.  00:8412  01 07 00            	LD		BC,NHABNIVEL
     474.  00:8415  CD 5C 00            	CALL	LDIRVM
     475.  00:8418                      
     476.  00:8418  21 00 AA            	LD		HL,array_aux_mapa_limpiar	
     477.  00:841B  11 38 1A            	LD		DE,TILMAP + POSMAPLIN7
     478.  00:841E  01 07 00            	LD		BC,NHABNIVEL
     479.  00:8421  CD 5C 00            	CALL	LDIRVM
     480.  00:8424                      	
     481.  00:8424  D9                  	EXX
     482.  00:8425                      fin_borra_mapa:
     483.  00:8425  C9                  	RET
     484.  00:8426                      
     485.  00:8426                      
     486.  00:8426                      
     487.  00:8426                      
     488.  00:8426                      
     489.  00:8426                      
     490.  00:8426                      
     491.  00:8426                      ;;=====================================================
     492.  00:8426                      ;;POSICIONA_EN_MAPA
     493.  00:8426                      ;;=====================================================	
     494.  00:8426                      ; función: 	en el mapa de marcadores de la derecha/abajo marca un cuadro en gris o con un muñeco
     495.  00:8426                      ;			según el valor de prota.posición pinta entrá un muñeco y por donde vaya pasando el prota
     496.  00:8426                      ;			quedará en gris
     497.  00:8426                      ; entrada: 	elemento_pintar_mapa  A , prota_pos_mapy, prota_pos_mapx
     498.  00:8426                      ; salida: 	-
     499.  00:8426                      ; toca:		todos
     500.  00:8426                      posiciona_en_mapa:
     501.  00:8426                      	;#0238 es la posición en mapa de tiles de la esquina superior izquierda del mapa (569 en decimal)
     502.  00:8426  21 38 1A            	LD		HL, TILMAP + POSMAPA;pos inicial
     503.  00:8429                      	
     504.  00:8429                      	;ahora se le calcula la fila a pintar ya que va de abajo a arriba y no como en el mapa + columna
     505.  00:8429                      .sumar_fila:
     506.  00:8429  3A E6 A9            	LD		 A, (prota_pos_mapy)
     507.  00:842C  FE 01               	CP		 1
     508.  00:842E  28 2A               	JR		 Z, .fila_1
     509.  00:8430  3A E6 A9            	LD		 A, (prota_pos_mapy)
     510.  00:8433  FE 02               	CP		 2
     511.  00:8435  28 2A               	JR		 Z, .fila_2
     512.  00:8437  3A E6 A9            	LD		 A, (prota_pos_mapy)
     513.  00:843A  FE 03               	CP		 3
     514.  00:843C  28 2A               	JR		 Z, .fila_3
     515.  00:843E  3A E6 A9            	LD		 A, (prota_pos_mapy)
     516.  00:8441  FE 04               	CP		 4
     517.  00:8443  28 2A               	JR		 Z, .fila_4
     518.  00:8445  3A E6 A9            	LD		 A, (prota_pos_mapy)
     519.  00:8448  FE 05               	CP		 5
     520.  00:844A  28 2A               	JR		 Z, .fila_5
     521.  00:844C  3A E6 A9            	LD		 A, (prota_pos_mapy)
     522.  00:844F  FE 06               	CP		 6
     523.  00:8451  28 2A               	JR		 Z, .sumar_columna
     524.  00:8453                      	;no consulto la 0 porque si no es ninguna de las anteriores es 0 y por tanto sería un jr fila_0
     525.  00:8453                      	
     526.  00:8453                      .fila_0:
     527.  00:8453  11 C0 00            	LD		DE, 192
     528.  00:8456  19                  	ADD		HL, DE			;nota: se que repito el ADD pero la otra opción es inicializar DE y ya tarda mucho la funicón (es por velicidad)
     529.  00:8457  C3 7D 84            	JP		.sumar_columna
     530.  00:845A                      .fila_1:
     531.  00:845A  11 A0 00            	LD		DE, 160
     532.  00:845D  19                  	ADD		HL, DE
     533.  00:845E  C3 7D 84            	JP		.sumar_columna
     534.  00:8461                      .fila_2:
     535.  00:8461  11 80 00            	LD		DE, 128
     536.  00:8464  19                  	ADD		HL, DE
     537.  00:8465  C3 7D 84            	JP		.sumar_columna
     538.  00:8468                      .fila_3:
     539.  00:8468  11 60 00            	LD		DE, 96
     540.  00:846B  19                  	ADD		HL, DE
     541.  00:846C  C3 7D 84            	JP		.sumar_columna
     542.  00:846F                      .fila_4:
     543.  00:846F  11 40 00            	LD		DE, 64
     544.  00:8472  19                  	ADD		HL, DE
     545.  00:8473  C3 7D 84            	JP		.sumar_columna
     546.  00:8476                      .fila_5:
     547.  00:8476  11 20 00            	LD		DE, 32
     548.  00:8479  19                  	ADD		HL, DE
     549.  00:847A  C3 7D 84            	JP		.sumar_columna
     550.  00:847D                      .fila_6:
     551.  00:847D                      	;pongo fila_6 por poner ya que si es la fila 6 equiv. a primera fila del mapa y por tanto no suma fila
     552.  00:847D                      	
     553.  00:847D                      	
     554.  00:847D                      .sumar_columna:
     555.  00:847D  3A E5 A9            	LD 		 A, (prota_pos_mapx) ;POS X
     556.  00:8480  16 00               	LD		 D, 0
     557.  00:8482  5F                  	LD		 E, A
     558.  00:8483  19                  	ADD		HL, DE
     559.  00:8484                      	
     560.  00:8484                      	;resultado en BC para usar en la función pinta_tile_suelto
     561.  00:8484  44                  	LD		 B, H
     562.  00:8485  4D                  	LD		 C, L
     563.  00:8486                      	
     564.  00:8486                      	;terminado de fijar la coordenada recuperamos a para ver el tipo
     565.  00:8486  3A 07 AA            	LD		 A, (elemento_pintar_mapa)
     566.  00:8489  FE 09               	CP		 TILEGRISM
     567.  00:848B  CA 93 84            	JP		 Z, pinta_pos_mapa_vacio
     568.  00:848E  16 13               	LD		 D, TILEPROTAM
     569.  00:8490  C3 95 84            	JP		fin_pinta_pos_mapa
     570.  00:8493                      pinta_pos_mapa_vacio:
     571.  00:8493  16 09               	LD		 D, TILEGRISM	
     572.  00:8495                      
     573.  00:8495                      fin_pinta_pos_mapa:
     574.  00:8495  C3 5B 83            	JP		pinta_tile_suelto
     575.  00:8498                      fin_posiciona_en_mapa:
     576.  00:8498                      
     577.  00:8498                      
     578.  00:8498                      
     579.  00:8498                      
     580.  00:8498                      ;;=====================================================
     581.  00:8498                      ;;EFECTO_IMAGEN_TIRA_RELIQUIA
     582.  00:8498                      ;;=====================================================	
     583.  00:8498                      ; función: 	hace que el fondo de la pantalla parpadee N veces
     584.  00:8498                      ; entrada: 	actualiza_reliquias_sn
     585.  00:8498                      ; salida: 	-
     586.  00:8498                      ; toca: 	todo
     587.  00:8498                      efecto_imagen_tira_reliquia:
     588.  00:8498  3E 14               	LD		 A, 20;RETARDOREL
     589.  00:849A  47                  	LD		 B, A
     590.  00:849B                      
     591.  00:849B                      .parpadea_fondo:
     592.  00:849B  C5                  	PUSH	BC
     593.  00:849C  21 CC A9            	LD		HL, color_bomba1
     594.  00:849F  CD BF 81            	CALL	color_pantalla
     595.  00:84A2                      	
     596.  00:84A2                      	;~ PUSH	BC
     597.  00:84A2                      	;~ LD		 A, 255
     598.  00:84A2                      	;~ LD		 B, A
     599.  00:84A2                      ;~ .bucle_de_espera:
     600.  00:84A2                      	;~ NOP
     601.  00:84A2                      	;~ DJNZ	 .bucle_de_espera
     602.  00:84A2                      	;~ POP		BC
     603.  00:84A2  76                  	HALT
     604.  00:84A3                      
     605.  00:84A3                      	
     606.  00:84A3  21 CF A9            	LD		HL, color_bomba2
     607.  00:84A6  CD BF 81            	CALL	color_pantalla
     608.  00:84A9  C1                  	POP		BC
     609.  00:84AA  10 EF               	DJNZ	.parpadea_fondo
     610.  00:84AC                      	
     611.  00:84AC  21 C9 A9            	LD		HL, color_base
     612.  00:84AF  C3 BF 81            	JP		color_pantalla
     613.  00:84B2                      fin_efecto_imagen_tira_reliquia:
     614.  00:84B2                      
     615.  00:84B2                      
     616.  00:84B2                      
     617.  00:84B2                      
     618.  00:84B2                      ;=====================================================
     619.  00:84B2                      ;;PINTA_ARRAY
     620.  00:84B2                      ;;=====================================================	
     621.  00:84B2                      ;;funcion:  (pinta el mismo tile) se le pasa un array con posiciones de tiles y coordenadas x e y y los pinta en screen 2
     622.  00:84B2                      ;;entrada:	wordaux1 (pos inicio sc2 donde pintar) y wordaux2 (puntero al array a pintar), BC (posición en tilemap) , D filas y E columnas
     623.  00:84B2                      ;;salida:	-
     624.  00:84B2                      ;;importante: necesita de una variable wordaux1 tipo WD (wordaux1: 	DW	0)
     625.  00:84B2                      ;; ejemplo llamada:
     626.  00:84B2                      	;~ LD		HL,array_tiles					;guardo puntero al array a pintar (como psar por referencia)
     627.  00:84B2                      	;~ LD		(wordaux2),HL					;en la variable wordaux2
     628.  00:84B2                      	;~ LD		HL,SC2MAP + 256 + 32			;calcula posición en tilemap
     629.  00:84B2                      	;~ LD		(wordaux1),HL					;guarda valor pos tilemap en wordaux1
     630.  00:84B2                      	;~ LD		B,H								;coloca posición tilemap BC
     631.  00:84B2                      	;~ LD		C,L
     632.  00:84B2                      	;~ LD		D,2								;nº de filas ahora byteaux1
     633.  00:84B2                      	;~ LD		E,3								;nº de columnas ahora byteaux2
     634.  00:84B2                      	;~ CALL	pinta_array
     635.  00:84B2                      
     636.  00:84B2                      pinta_array:
     637.  00:84B2  08                  	EX		AF, AF'
     638.  00:84B3                      	
     639.  00:84B3  3A F6 84            	LD		 A, (byteaux1)
     640.  00:84B6  57                  	LD		 D, A
     641.  00:84B7  3A F7 84            	LD		 A, (byteaux2)
     642.  00:84BA  5F                  	LD		 E, A
     643.  00:84BB                      	
     644.  00:84BB  2A F2 84            	LD		HL, (wordaux1)
     645.  00:84BE  44                  	LD		 B, H							;coloca posición tilemap BC
     646.  00:84BF  4D                  	LD		 C, L
     647.  00:84C0                      	
     648.  00:84C0                      	;contamos con que la posición "global" en el tilemap está ya en BC
     649.  00:84C0                      	;y el puntero al array a pintar en wordaux2 y la posición en tilemap sc2 en wordaux1
     650.  00:84C0                      	;inicializa
     651.  00:84C0  DB 99               	IN		 A,(REGEST)		;leer registro de estado (recomendado)
     652.  00:84C2                      	
     653.  00:84C2                      	;coloca puntero para pintar tile según BC
     654.  00:84C2  79                  	LD		 A,C			;primero byte bajo	
     655.  00:84C3  D3 99               	OUT		(REGEST),A
     656.  00:84C5  78                  	LD		 A,B			;después byte alto  ********************** preguntar a Fernando cómo que byte bajo es B
     657.  00:84C6  F6 40               	OR		1000000b		;+64
     658.  00:84C8  D3 99               	OUT		(REGEST),A
     659.  00:84CA                      
     660.  00:84CA                      	
     661.  00:84CA  2A F4 84            	LD		HL,(wordaux2)	;HL es lo que se pintará y le he pasado el puntero del array tilemap a pintar
     662.  00:84CD                      .pa_pinta_fila:
     663.  00:84CD  43                  	LD		 B,E
     664.  00:84CE                      .pa_pinta_columnas: 		;finta la fila (pintando las columnas)
     665.  00:84CE  7E                  	LD		 A,(HL)
     666.  00:84CF  D3 98               	OUT		(REGESCVDP),A	;escribe A en VRAM en la posición indicada por los dos OUT anteriores
     667.  00:84D1  23                  	INC		HL
     668.  00:84D2  10 FA               	DJNZ	.pa_pinta_columnas
     669.  00:84D4                      	
     670.  00:84D4                      	;no es una solución elegante lo de repetir código pero queda claro
     671.  00:84D4                      	;por si hay otra fila
     672.  00:84D4  E5                  	PUSH	HL
     673.  00:84D5  2A F2 84            	LD		HL,(wordaux1)
     674.  00:84D8  01 20 00            	LD		BC,32
     675.  00:84DB  09                  	ADD		HL,BC
     676.  00:84DC  22 F2 84            	LD		(wordaux1),HL
     677.  00:84DF  44                  	LD		B,H
     678.  00:84E0  4D                  	LD		C,L
     679.  00:84E1  E1                  	POP		HL
     680.  00:84E2                      	
     681.  00:84E2  79                  	LD		 A,C			;primero byte bajo	
     682.  00:84E3  D3 99               	OUT		(REGEST),A
     683.  00:84E5  78                  	LD		 A,B			;después byte alto 
     684.  00:84E6  F6 40               	OR		1000000b		;+64
     685.  00:84E8  D3 99               	OUT		(REGEST),A
     686.  00:84EA                      	
     687.  00:84EA                      	;si hay otra fila repite
     688.  00:84EA  15                  	DEC		 D
     689.  00:84EB  7A                  	LD		 A,D		;¿hay otra fila?
     690.  00:84EC  B7                  	OR		 A
     691.  00:84ED  C4 CD 84            	CALL	NZ,.pa_pinta_fila
     692.  00:84F0                      	
     693.  00:84F0  08                  	EX		AF, AF'
     694.  00:84F1                      fin_pinta_array:
     695.  00:84F1  C9                  	RET
     696.  00:84F2                      ;;variables asocidas a la función pinta_array
     697.  00:84F2                      ;; por de pronto la dejo aquí
     698.  00:84F2  00 00               wordaux1:		DW	0	;almacena la posición en el tilemap 0 al 675
     699.  00:84F4  00 00               wordaux2:		DW	0	;almacena puntero a array de tiles (posiciones en realidad) a pintar (posiciones repetidas en los 2 primeros bancos)
     700.  00:84F6  00                  byteaux1:		DB	0	;nº filas Registro D
     701.  00:84F7  00                  byteaux2:		DB	0	;nº columnas Registro E
     702.  00:84F8                      
     703.  00:84F8                      
     704.  00:84F8                      
     705.  00:84F8                      
     706.  00:84F8                      ;;=====================================================
     707.  00:84F8                      ;;INICIALIZA_ANTORCHAS
     708.  00:84F8                      ;;=====================================================	
     709.  00:84F8                      ; función: 	inicializa las variables de estructuras de las antorchas
     710.  00:84F8                      ; entrada: 	antorchas, array_antorcha
     711.  00:84F8                      ; salida: 	
     712.  00:84F8                      ; toca:		HL, IX
     713.  00:84F8                      inicializa_antorchas:
     714.  00:84F8  DD 21 19 AB         	LD		IX, antorchas
     715.  00:84FC  DD 36 00 00         	LD		(IX), INACTIVA
     716.  00:8500  21 20 AB            	LD		HL, array_antorcha
     717.  00:8503  DD 74 01            	LD		(IX + 1), H
     718.  00:8506  DD 75 02            	LD		(IX + 2), L
     719.  00:8509  DD 36 03 88         	LD		(IX + 3), POSANTOR1
     720.  00:850D  DD 36 04 97         	LD		(IX + 4), POSANTOR2
     721.  00:8511  DD 36 05 00         	LD		(IX + 5), 0
     722.  00:8515  DD 36 06 FF         	LD		(IX + 6), RESETLLAMA
     723.  00:8519                      fin_inicializa_antorchas:
     724.  00:8519  C9                  	RET
     725.  00:851A                      
     726.  00:851A                      
     727.  00:851A                      ;;=====================================================
     728.  00:851A                      ;;INICIALIZA_esqueletos
     729.  00:851A                      ;;=====================================================	
     730.  00:851A                      ; función: 	inicializa las variables de estructuras de los esqueletos
     731.  00:851A                      ; entrada: 	esqueletos, array_esqueletos
     732.  00:851A                      ; salida: 	
     733.  00:851A                      ; toca:		HL, IX
     734.  00:851A                      inicializa_esqueletos:
     735.  00:851A  DD 21 23 AB         	LD		IX, esqueletos
     736.  00:851E  DD 36 00 00         	LD		(IX), INACTIVA
     737.  00:8522  21 2A AB            	LD		HL, array_esqueleto
     738.  00:8525  DD 74 01            	LD		(IX + 1), H
     739.  00:8528  DD 75 02            	LD		(IX + 2), L
     740.  00:852B  DD 36 03 88         	LD		(IX + 3), POSESQUEL1
     741.  00:852F  DD 36 04 95         	LD		(IX + 4), POSESQUEL2
     742.  00:8533  DD 36 05 00         	LD		(IX + 5), 0
     743.  00:8537  DD 36 06 19         	LD		(IX + 6), RESETESQUEL
     744.  00:853B                      fin_inicializa_esqueletos:
     745.  00:853B  C9                  	RET
     746.  00:853C                      	
     747.  00:853C                      
     748.  00:853C                      ;;=====================================================
     749.  00:853C                      ;;PINTA_ANTORCHAS
     750.  00:853C                      ;;=====================================================	
     751.  00:853C                      ; función: 	pinta las antorchas con valores base
     752.  00:853C                      ; entrada: 	antorchas, array_antorcha
     753.  00:853C                      ; salida: 	
     754.  00:853C                      ; toca:		HL
     755.  00:853C                      pinta_extra_fondo:
     756.  00:853C  DD 21 19 AB         	LD		IX, antorchas
     757.  00:8540                      .examina_sihay_antorchas
     758.  00:8540                      	;hay que pintarlas?
     759.  00:8540  3A B5 A6            	LD		 A, (habitacion_extras)
     760.  00:8543  CB 47               	BIT		 0, A
     761.  00:8545  C2 4F 85            	JP		NZ, .hayantorchas			;si el bit 0 de extras es 0 no se pintan antorchas
     762.  00:8548  DD 36 00 00         	LD		(IX), INACTIVA
     763.  00:854C  C3 78 85            	JP		.examina_sihay_esqueletos
     764.  00:854F                      	
     765.  00:854F                      .hayantorchas:
     766.  00:854F  DD 36 00 01         	LD		(IX), ACTIVA
     767.  00:8553                      	;pinta antorcha izquierdda
     768.  00:8553  DD 66 01            	LD		 H, (IX + 1)
     769.  00:8556  DD 6E 02            	LD		 L, (IX + 2)
     770.  00:8559  22 F4 84            	LD		(wordaux2), HL				;guarda pos array en wordaux2
     771.  00:855C                      	
     772.  00:855C  21 88 18            	LD		HL, TILMAP + POSANTOR1		;calcula posición en tilemap
     773.  00:855F  22 F2 84            	LD		(wordaux1), HL				;guarda valor pos tilemap en wordaux1
     774.  00:8562                      
     775.  00:8562  3E 03               	LD		 A, 3						;nº de filas	
     776.  00:8564  32 F6 84            	LD		(byteaux1), A
     777.  00:8567  3E 01               	LD		 A, 1						;nº de columnas
     778.  00:8569  32 F7 84            	LD		(byteaux2), A				
     779.  00:856C                      	
     780.  00:856C  CD B2 84            	CALL	pinta_array
     781.  00:856F                      	
     782.  00:856F                      	;pinta antorcha derecha
     783.  00:856F  21 97 18            	LD		HL, TILMAP + POSANTOR2		;calcula posición en tilemap
     784.  00:8572  22 F2 84            	LD		(wordaux1), HL				;guarda valor pos tilemap en wordaux1
     785.  00:8575                      	
     786.  00:8575  C3 B2 84            	JP		pinta_array 				;no ecesita CALL ya que la subrutina termina aquí
     787.  00:8578                      	
     788.  00:8578                      .examina_sihay_esqueletos
     789.  00:8578  DD 21 23 AB         	LD		IX, esqueletos
     790.  00:857C                      	;hay que pintarlos?
     791.  00:857C  3A B4 A6            	LD		 A, (habitacion_actual)
     792.  00:857F  CB 6F               	BIT		 5, A
     793.  00:8581  C2 89 85            	JP		NZ, .hayesqueletos			;si el bit 0 de extras es 0 no se pintan antorchas
     794.  00:8584  DD 36 00 00         	LD		(IX), INACTIVA
     795.  00:8588  C9                  	RET									;no hay que pintarlo. no hay que continuar
     796.  00:8589                      
     797.  00:8589                      .hayesqueletos
     798.  00:8589  DD 36 00 01         	LD		(IX), ACTIVA
     799.  00:858D                      	;pinta antorcha izquierdda
     800.  00:858D  DD 66 01            	LD		 H, (IX + 1)
     801.  00:8590  DD 6E 02            	LD		 L, (IX + 2)
     802.  00:8593  22 F4 84            	LD		(wordaux2), HL				;guarda pos array en wordaux2
     803.  00:8596                      	
     804.  00:8596  21 88 18            	LD		HL, TILMAP + POSESQUEL1		;calcula posición en tilemap
     805.  00:8599  22 F2 84            	LD		(wordaux1), HL				;guarda valor pos tilemap en wordaux1
     806.  00:859C                      
     807.  00:859C  3E 04               	LD		 A, 4						;nº de filas	
     808.  00:859E  32 F6 84            	LD		(byteaux1), A
     809.  00:85A1  3E 03               	LD		 A, 3						;nº de columnas
     810.  00:85A3  32 F7 84            	LD		(byteaux2), A				
     811.  00:85A6                      	
     812.  00:85A6  CD B2 84            	CALL	pinta_array
     813.  00:85A9                      	
     814.  00:85A9                      	;pinta antorcha derecha
     815.  00:85A9  21 95 18            	LD		HL, TILMAP + POSESQUEL2		;calcula posición en tilemap
     816.  00:85AC  22 F2 84            	LD		(wordaux1), HL				;guarda valor pos tilemap en wordaux1
     817.  00:85AF                      	
     818.  00:85AF  C3 B2 84            	JP		pinta_array 				;no ecesita CALL ya que la subrutina termina aquí
     819.  00:85B2                      fin_pinta_extra_fondo:
     820.  00:85B2  C9                  	RET
     821.  00:85B3                      
     822.  00:85B3                      
     823.  00:85B3                      
     824.  00:85B3                      ;;=====================================================
     825.  00:85B3                      ;;ACTUALIZA_ELEMENTOS_FONDO
     826.  00:85B3                      ;;=====================================================	
     827.  00:85B3                      ; función: 	de los elementos que pueda haber en el fondo de la pared (pantalla) actualiza si procede
     828.  00:85B3                      ;			actualmente: antorchas y a futuro esqueletos
     829.  00:85B3                      ; entrada: 	
     830.  00:85B3                      ; salida: 	
     831.  00:85B3                      ; toca:		A
     832.  00:85B3                      actualiza_elementos_fondo:
     833.  00:85B3                      .examina_antorchas:
     834.  00:85B3  DD 21 19 AB         	LD		IX, antorchas
     835.  00:85B7  DD 7E 00            	LD		 A, (IX)
     836.  00:85BA  B7                  	OR		 A
     837.  00:85BB  CA C1 85            	JP 	 	 Z, .examina_esqueletos
     838.  00:85BE                      	
     839.  00:85BE  CD CD 85            	CALL	flip_llamas_antorchas
     840.  00:85C1                      .examina_esqueletos:
     841.  00:85C1  DD 21 23 AB         	LD		IX, esqueletos
     842.  00:85C5  DD 7E 00            	LD		 A, (IX)
     843.  00:85C8  B7                  	OR		 A
     844.  00:85C9  C8                  	RET	 	 Z
     845.  00:85CA                      	
     846.  00:85CA  C3 2A 86            	JP		flip_calavera_esqueletos
     847.  00:85CD                      fin_actualiza_elementos_fondo:
     848.  00:85CD                      
     849.  00:85CD                      
     850.  00:85CD                      
     851.  00:85CD                      
     852.  00:85CD                      ;;=====================================================
     853.  00:85CD                      ;;FLIP_LLAMAS_ANTORCHAS
     854.  00:85CD                      ;;=====================================================	
     855.  00:85CD                      ; función: 	modifica las llamas de las antorchas con los tipos que hay
     856.  00:85CD                      ; entrada: 	
     857.  00:85CD                      ; salida: 	
     858.  00:85CD                      ; toca:		
     859.  00:85CD                      flip_llamas_antorchas:
     860.  00:85CD  DD 21 19 AB         	LD		IX, antorchas
     861.  00:85D1                      	;tiene que cambiar de llama?
     862.  00:85D1  DD 7E 06            	LD		 A, (IX + 6)
     863.  00:85D4  3D                  	DEC		 A
     864.  00:85D5  DD 77 06            	LD		 (IX + 6), A
     865.  00:85D8                      	;no
     866.  00:85D8  C0                  	RET		NZ
     867.  00:85D9                      	;si
     868.  00:85D9  C5                  	PUSH	BC
     869.  00:85DA  D5                  	PUSH	DE
     870.  00:85DB                      	
     871.  00:85DB  DD 36 06 FF         	LD		(IX + 6), RESETLLAMA	
     872.  00:85DF                      	
     873.  00:85DF                      	;qué llama toca?
     874.  00:85DF  DD 7E 05            	LD		 A, (IX + 5)
     875.  00:85E2  B7                  	OR		 A
     876.  00:85E3  CA 07 86            	JP		 Z, .llama_par
     877.  00:85E6                      .llama_impar
     878.  00:85E6                      	;cambio a llama par
     879.  00:85E6  AF                   	XOR		 A
     880.  00:85E7  DD 77 05            	LD		(IX + 5), A
     881.  00:85EA                      	;pinto llamas
     882.  00:85EA  01 00 18            	LD		BC, TILMAP
     883.  00:85ED  3E 88               	LD		 A, POSANTOR1
     884.  00:85EF  CD 9F 81            	CALL	suma_A_BC
     885.  00:85F2  16 C4               	LD		 D, MAPLLAMA1
     886.  00:85F4  CD 5B 83            	CALL	pinta_tile_suelto
     887.  00:85F7                      	
     888.  00:85F7  01 00 18            	LD		BC, TILMAP
     889.  00:85FA  3E 97               	LD		 A, POSANTOR2
     890.  00:85FC  CD 9F 81            	CALL	suma_A_BC
     891.  00:85FF  16 C5               	LD		 D, MAPLLAMA2
     892.  00:8601  CD 5B 83            	CALL	pinta_tile_suelto	
     893.  00:8604  C3 26 86            	JP		fin_flip_llamas_antorchas
     894.  00:8607                      	
     895.  00:8607                      .llama_par
     896.  00:8607                      	;cambio a llama par
     897.  00:8607  3E 01                	LD		 A, 1
     898.  00:8609  DD 77 05            	LD		(IX + 5), A
     899.  00:860C                      	;pinto llamas
     900.  00:860C  01 00 18            	LD		BC, TILMAP
     901.  00:860F  3E 88               	LD		 A, POSANTOR1
     902.  00:8611  CD 9F 81            	CALL	suma_A_BC
     903.  00:8614  16 C5               	LD		 D, MAPLLAMA2
     904.  00:8616  CD 5B 83            	CALL	pinta_tile_suelto
     905.  00:8619                      	
     906.  00:8619  01 00 18            	LD		BC, TILMAP
     907.  00:861C  3E 97               	LD		 A, POSANTOR2
     908.  00:861E  CD 9F 81            	CALL	suma_A_BC
     909.  00:8621  16 C4               	LD		 D, MAPLLAMA1
     910.  00:8623  CD 5B 83            	CALL	pinta_tile_suelto
     911.  00:8626                      
     912.  00:8626                      fin_flip_llamas_antorchas:
     913.  00:8626                      	;restauro los balores de los registros tocados antes
     914.  00:8626  D1                  	POP		DE
     915.  00:8627  C1                  	POP		BC
     916.  00:8628  F1                  	POP		AF
     917.  00:8629                      
     918.  00:8629  C9                  	RET
     919.  00:862A                      
     920.  00:862A                      
     921.  00:862A                      ;;=====================================================
     922.  00:862A                      ;;FLIP_CALAVERA_ESQUELETOS
     923.  00:862A                      ;;=====================================================	
     924.  00:862A                      ; función: 	modifica las calaveras de los esqueletos
     925.  00:862A                      ; entrada: 	
     926.  00:862A                      ; salida: 	
     927.  00:862A                      ; toca:		TODOS.... muy importante DE
     928.  00:862A                      flip_calavera_esqueletos:
     929.  00:862A  DD 21 23 AB         	LD		IX, esqueletos
     930.  00:862E                      	
     931.  00:862E                      	;tiene que cambiar de calavera?
     932.  00:862E  DD 7E 06            	LD		 A, (IX + ESTRUCTURA_ESQUELETO.cont_sig_escena)
     933.  00:8631  3D                  	DEC		 A
     934.  00:8632  DD 77 06            	LD		 (IX + ESTRUCTURA_ESQUELETO.cont_sig_escena), A
     935.  00:8635                      	;no
     936.  00:8635  C0                  	RET		NZ
     937.  00:8636                      	;si
     938.  00:8636  DD 36 06 19         	LD		(IX + ESTRUCTURA_ESQUELETO.cont_sig_escena), RESETESQUEL		;resetea contador de nueve escena
     939.  00:863A                      	
     940.  00:863A  CD 58 86            	CALL	actualiza_escena_calavera
     941.  00:863D                      
     942.  00:863D                      	;pinto calaveras
     943.  00:863D  01 00 18            	LD		BC, TILMAP
     944.  00:8640  3E A9               	LD		 A, POSCALAVE1
     945.  00:8642  CD 9F 81            	CALL	suma_A_BC
     946.  00:8645  D5                  	PUSH	DE
     947.  00:8646  56                  	LD		 D, (HL)
     948.  00:8647  CD 5B 83            	CALL	pinta_tile_suelto
     949.  00:864A                      	
     950.  00:864A  01 00 18            	LD		BC, TILMAP
     951.  00:864D  3E B6               	LD		 A, POSCALAVE2
     952.  00:864F  CD 9F 81            	CALL	suma_A_BC
     953.  00:8652  E1                  	POP		HL
     954.  00:8653  56                  	LD		 D, (HL)
     955.  00:8654  C3 5B 83            	JP		pinta_tile_suelto	
     956.  00:8657                      fin_flip_calavera_esqueletos:
     957.  00:8657  00                  var_aux_calavera	DB	0;
     958.  00:8658                      
     959.  00:8658                      
     960.  00:8658                      ;;=====================================================
     961.  00:8658                      ;;ACTUALIZA_ESCENA_CALAVERA
     962.  00:8658                      ;;=====================================================	
     963.  00:8658                      ; función: 	modifica las siguiente calavera a mostrar
     964.  00:8658                      ; entrada: 	
     965.  00:8658                      ; salida: 	DE (iportante porque se usa fuera) y ESTRUCTURA_ESQUELETO.escena
     966.  00:8658                      ; toca:		TODOS.... muy importante DE
     967.  00:8658                      actualiza_escena_calavera:
     968.  00:8658                      	;consulta_escena
     969.  00:8658  DD 7E 05            	LD		 A, (IX + ESTRUCTURA_ESQUELETO.escena)
     970.  00:865B  32 57 86            	LD		(var_aux_calavera), A
     971.  00:865E  B7                  	OR		 A
     972.  00:865F  C2 64 86            	JP		 NZ, .decrementa_escenas
     973.  00:8662  3E 04               	LD		 A, RESETESCENAESQUEL
     974.  00:8664                      .decrementa_escenas
     975.  00:8664  3D                  	DEC		 A
     976.  00:8665                      .fin_consulta_escena
     977.  00:8665  DD 77 05            	LD		 (IX + ESTRUCTURA_ESQUELETO.escena), A
     978.  00:8668                      	
     979.  00:8668  21 36 AB            	LD		HL, lista_escenas_calavera
     980.  00:866B  3A 57 86            	LD		 A, (var_aux_calavera)
     981.  00:866E  CD A5 81            	CALL	suma_A_HL
     982.  00:8671                      	
     983.  00:8671  54                  	LD		 D, H
     984.  00:8672  5D                  	LD		 E, L
     985.  00:8673                      fin_actualiza_escena_calavera:
     986.  00:8673  C9                  	RET
     987.  00:8674                      
     165   00:8674                      	
     166   00:8674                      	include "subr_puertas.asm"
       1.  00:8674                      ;;=====================================================
       2.  00:8674                      ;;SUBRUTINAS RELACIONADAS CON LAS PUERTAS
       3.  00:8674                      ;;=====================================================
       4.  00:8674                      
       5.  00:8674                      
       6.  00:8674                      ;;=====================================================
       7.  00:8674                      ;;VARIABLES
       8.  00:8674                      ;;=====================================================
       9.  00:8674                      
      10.  00:8674                      ;; arrays con mapa de tiles de las puertas
      11.  00:8674                      array_puerta_arriba:
      12.  00:8674  03 01 01 03         	DB	3,1,1,3
      13.  00:8678  01 01 01 01         	DB	1,1,1,1
      14.  00:867C  01 01 01 01         	DB	1,1,1,1
      15.  00:8680  01 01 01 01         	DB	1,1,1,1
      16.  00:8684  01 01 01 01         	DB	1,1,1,1
      17.  00:8688                      
      18.  00:8688                      array_puerta_derecha:
      19.  00:8688  01 03 03            	DB	1,3,3
      20.  00:868B  01 01 03            	DB	1,1,3
      21.  00:868E  01 01 01            	DB	1,1,1
      22.  00:8691  01 01 01            	DB	1,1,1
      23.  00:8694  01 01 01            	DB	1,1,1
      24.  00:8697  02 01 01            	DB	2,1,1
      25.  00:869A  04 02 01            	DB	4,2,1
      26.  00:869D                      	
      27.  00:869D                      array_puerta_abajo:			
      28.  00:869D  01 01 01 01         	DB	1,1,1,1
      29.  00:86A1                      
      30.  00:86A1                      array_puerta_izquierda:
      31.  00:86A1  03 03 01            	DB	3,3,1
      32.  00:86A4  03 01 01            	DB	3,1,1
      33.  00:86A7  01 01 01            	DB	1,1,1
      34.  00:86AA  01 01 01            	DB	1,1,1
      35.  00:86AD  01 01 01            	DB	1,1,1
      36.  00:86B0  01 01 02            	DB	1,1,2
      37.  00:86B3  01 02 04            	DB	1,2,4
      38.  00:86B6                      
      39.  00:86B6                      array_escalera:
      40.  00:86B6                      	DB	5,5,5,5,5,5,5,5
      40.  00:86B6  05 05 05 05 05 05 05 05 
      41.  00:86BE                      	DB	5,0,0,0,1,1,1,5
      41.  00:86BE  05 00 00 00 01 01 01 05 
      42.  00:86C6                      	DB	5,0,0,0,1,1,1,5
      42.  00:86C6  05 00 00 00 01 01 01 05 
      43.  00:86CE                      	DB	5,0,0,6,6,6,6,5
      43.  00:86CE  05 00 00 06 06 06 06 05 
      44.  00:86D6                      	DB	5,0,6,6,6,6,6,5
      44.  00:86D6  05 00 06 06 06 06 06 05 
      45.  00:86DE                      	DB	5,6,6,6,6,6,6,5
      45.  00:86DE  05 06 06 06 06 06 06 05 
      46.  00:86E6                      
      47.  00:86E6                      
      48.  00:86E6                      
      49.  00:86E6                      lista_puertas:
      50.  00:86E6  00 (13)             puerta_arriba:		DS		ESTRUCTURA_PUERTA
      51.  00:86F3  00 (13)             puerta_derecha:		DS		ESTRUCTURA_PUERTA
      52.  00:8700  00 (13)             puerta_abajo:		DS		ESTRUCTURA_PUERTA
      53.  00:870D  00 (13)             puerta_izquierda:	DS		ESTRUCTURA_PUERTA
      54.  00:871A                      
      55.  00:871A                      datos_puertas:
      56.  00:871A                      datos_escalera:
      57.  00:871A  00                  					DB		#00;0		; 0 no activa <>0 activo
      58.  00:871B  80                  					DB		#80;128		;punto x de la puerta para cuando se dispare encima
      59.  00:871C  30                  					DB		#30;48		;punto y de la puerta para cuando se dispare encima
      60.  00:871D  20                  					DB		#20;32		;radio x de la puerta para cuando se dispare encima
      61.  00:871E  18                  					DB		#18;24		;radio y de la puerta para cuando se dispare encima
      62.  00:871F  9A 87               					DW		accion_puerta_arriba;función para acción de cada tipo de puerta
      63.  00:8721  B6 86               					DW		array_escalera		;puntero al array con los tiles de las puertas
      64.  00:8723  6C 18               					DW		TILMAP + POSESCALERA
      65.  00:8725  06                  					DB		6			;alto/filas
      66.  00:8726  08                  					DB		8			;ancho/columnas
      67.  00:8727                      
      68.  00:8727                      datos_puerta_arriba:
      69.  00:8727  00                  					DB		#00;0		;0 no activa <>0 activo
      70.  00:8728  80                  					DB		#80;128		;punto x de la puerta para cuando se dispare encima
      71.  00:8729  34                  					DB		#34;52		;punto y de la puerta para cuando se dispare encima
      72.  00:872A  10                  					DB		#10;16		;radio x de la puerta para cuando se dispare encima
      73.  00:872B  14                  					DB		#14;20		;radio y de la puerta para cuando se dispare encima
      74.  00:872C  9A 87               					DW		accion_puerta_arriba	;función para acción de cada tipo de puerta
      75.  00:872E  74 86               					DW		array_puerta_arriba		;puntero al array con los tiles de las puertas
      76.  00:8730  8E 18               					DW		TILMAP + POSPUERARRI
      77.  00:8732  05                  					DB		5			;alto/filas
      78.  00:8733  04                  					DB		4			;ancho/columnas
      79.  00:8734                      
      80.  00:8734                      datos_puerta_derecha:
      81.  00:8734  00                  					DB		#00;0		;0 no activa <>0 activo
      82.  00:8735  EC                  					DB		#EC;236		;punto x de la puerta para cuando se dispare encima
      83.  00:8736  54                  					DB		#54;84		;punto y de la puerta para cuando se dispare encima
      84.  00:8737  0C                  					DB		#0C;12		;radio x de la puerta para cuando se dispare encima
      85.  00:8738  14                  					DB		#14;20		;radio y de la puerta para cuando se dispare encima
      86.  00:8739  9A 87               					DW		accion_puerta_arriba	;función para acción de cada tipo de puerta
      87.  00:873B  88 86               					DW		array_puerta_derecha	;puntero al array con los tiles de las puertas
      88.  00:873D  FC 18               					DW		TILMAP + POSPUERDERE
      89.  00:873F  07                  					DB		7			;alto/filas
      90.  00:8740  03                  					DB		3			;ancho/columnas
      91.  00:8741                      					
      92.  00:8741                      datos_puerta_abajo:
      93.  00:8741  00                  					DB		#00;0		;0 no activa <>0 activo
      94.  00:8742  80                  					DB		#80;128		;punto x de la puerta para cuando se dispare encima
      95.  00:8743  7C                  					DB		#7C;124		;punto y de la puerta para cuando se dispare encima
      96.  00:8744  0A                  					DB		#0A;#05;5		;radio x de la puerta para cuando se dispare encima  **********************************
      97.  00:8745  20                  					DB		#20;#10;16		;radio y de la puerta para cuando se dispare encima
      98.  00:8746  9A 87               					DW		accion_puerta_arriba	;función para acción de cada tipo de puerta
      99.  00:8748  9D 86               					DW		array_puerta_abajo		;puntero al array con los tiles de las puertas
     100.  00:874A  EE 19               					DW		TILMAP + POSPUERABAJ
     101.  00:874C  01                  					DB		1			;alto/filas
     102.  00:874D  04                  					DB		4			;ancho/columnas
     103.  00:874E                      
     104.  00:874E                      datos_puerta_izquierda:
     105.  00:874E  00                  					DB		#00;0		;0 no activa <>0 activo
     106.  00:874F  18                  					DB		#18;24		;punto x de la puerta para cuando se dispare encima
     107.  00:8750  54                  					DB		#54;84		;punto y de la puerta para cuando se dispare encima
     108.  00:8751  0C                  					DB		#0C;12		;radio x de la puerta para cuando se dispare encima
     109.  00:8752  14                  					DB		#14;20		;radio y de la puerta para cuando se dispare encima
     110.  00:8753  9A 87               					DW		accion_puerta_arriba	;función para acción de cada tipo de puerta
     111.  00:8755  A1 86               					DW		array_puerta_izquierda	;puntero al array con los tiles de las puertas
     112.  00:8757  E1 18               					DW		TILMAP + POSPUERIZQU
     113.  00:8759  07                  					DB		7			;alto/filas
     114.  00:875A  03                  					DB		3			;ancho/columnas
     115.  00:875B                      
     116.  00:875B                      
     117.  00:875B                      
     118.  00:875B                      ;;=====================================================
     119.  00:875B                      ;;SUBRUTINAS
     120.  00:875B                      ;;=====================================================
     121.  00:875B                      
     122.  00:875B                      
     123.  00:875B                      ;;=====================================================
     124.  00:875B                      ;;INICIALIZA_PUERTAS
     125.  00:875B                      ;;=====================================================	
     126.  00:875B                      ; función: 	inicializa las variables de estructuras de ayuda del array lista_puertas
     127.  00:875B                      ; entrada: 	*********************datos_delasdistintasayudas, variable estructura_ayuda_ayudaquesea
     128.  00:875B                      ; salida: 	lista_ayudas
     129.  00:875B                      ; toca:		-
     130.  00:875B                      inicializa_puertas:
     131.  00:875B  E5                  	PUSH	HL
     132.  00:875C  C5                  	PUSH	BC
     133.  00:875D  D5                  	PUSH	DE
     134.  00:875E                      	
     135.  00:875E                      	;inicializa puerta arriba
     136.  00:875E  3A E6 A9            	LD		 A, (prota_pos_mapy)
     137.  00:8761  FE 06               	CP		 6
     138.  00:8763  CA 6C 87            	JP		 Z,.pinta_escalera			;de tener que pintar algo arriba, se pinta escalera (fila 6) o puerta (fila <> 6)
     139.  00:8766  21 27 87            		LD		HL, datos_puerta_arriba	;origen
     140.  00:8769  C3 6F 87            		JP		.cotinuamos_pintando_escalera_arriba
     141.  00:876C                      .pinta_escalera
     142.  00:876C  21 1A 87            		LD		HL, datos_escalera		;origen
     143.  00:876F                      .cotinuamos_pintando_escalera_arriba
     144.  00:876F  11 E6 86            	LD		DE, puerta_arriba			;destino
     145.  00:8772  CD 94 87            	CALL	carga_datos_puerta
     146.  00:8775                      	
     147.  00:8775                      	;inicializa puerta derecha
     148.  00:8775  21 34 87            	LD		HL, datos_puerta_derecha	;origen
     149.  00:8778  11 F3 86            	LD		DE, puerta_derecha			;destino
     150.  00:877B  CD 94 87            	CALL	carga_datos_puerta
     151.  00:877E                      	
     152.  00:877E                      	;inicializa puerta abajo
     153.  00:877E  21 41 87            	LD		HL, datos_puerta_abajo		;origen
     154.  00:8781  11 00 87            	LD		DE, puerta_abajo			;destino
     155.  00:8784  CD 94 87            	CALL	carga_datos_puerta
     156.  00:8787                      	
     157.  00:8787                      	;inicializa puerta izquierda
     158.  00:8787  21 4E 87            	LD		HL, datos_puerta_izquierda	;origen
     159.  00:878A  11 0D 87            	LD		DE, puerta_izquierda		;destino
     160.  00:878D  CD 94 87            	CALL	carga_datos_puerta
     161.  00:8790                      	
     162.  00:8790  D1                  	POP		DE
     163.  00:8791  C1                  	POP		BC
     164.  00:8792  E1                  	POP		HL
     165.  00:8793                      fin_inicializa_puertas:
     166.  00:8793  C9                  	RET
     167.  00:8794                      
     168.  00:8794                      
     169.  00:8794                      
     170.  00:8794                      ;;=====================================================
     171.  00:8794                      ;;CARGA_DATOS_PUERTA
     172.  00:8794                      ;;=====================================================	
     173.  00:8794                      ; función: 	carga los datos de la puerta de una variable con los datos de la puerta
     174.  00:8794                      ; entrada
     175.  00:8794                      ;  hl: origen de datos
     176.  00:8794                      ;  de: destino de datos
     177.  00:8794                      ; salida: 	-
     178.  00:8794                      ; toca:		HL, DE, BC
     179.  00:8794                      carga_datos_puerta:
     180.  00:8794  01 0D 00            	LD		BC, ESTRUCTURA_PUERTA ;bytes a mover (el nombre de la estructura equivale al tamaño de la estructura en bytes)
     181.  00:8797  ED B0               	LDIR
     182.  00:8799                      fin_carga_datos_puerta:
     183.  00:8799  C9                  	RET
     184.  00:879A                      
     185.  00:879A                      ;;=====================================================
     186.  00:879A                      ;;ACCION_PUERTA_ARRIBA
     187.  00:879A                      ;;=====================================================	
     188.  00:879A                      ; función: 	
     189.  00:879A                      ; entrada: 	
     190.  00:879A                      ; salida: 	
     191.  00:879A                      accion_puerta_arriba:
     192.  00:879A  CD 8C 81            	CALL	sale_habitacion
     193.  00:879D                      	
     194.  00:879D  21 E6 A9            	LD		HL, prota_pos_mapy
     195.  00:87A0  34                  	INC		(HL)
     196.  00:87A1                      
     197.  00:87A1  C3 7D 81            	JP		entra_habitacion
     198.  00:87A4                      fin_accion_puerta_arriba:
     199.  00:87A4                      
     200.  00:87A4                      
     201.  00:87A4                      ;;=====================================================
     202.  00:87A4                      ;;ACCION_PUERTA_DERECHA
     203.  00:87A4                      ;;=====================================================	
     204.  00:87A4                      ; función: 	
     205.  00:87A4                      ; entrada: 	
     206.  00:87A4                      ; salida: 	
     207.  00:87A4                      accion_puerta_derecha:
     208.  00:87A4  CD 8C 81            	CALL	sale_habitacion
     209.  00:87A7                      	
     210.  00:87A7  21 E5 A9            	LD		 HL, prota_pos_mapx
     211.  00:87AA  34                  	INC		 (HL)
     212.  00:87AB                      
     213.  00:87AB  C3 7D 81            	JP		entra_habitacion
     214.  00:87AE                      fin_accion_puerta_derecha:
     215.  00:87AE                      	
     216.  00:87AE                      
     217.  00:87AE                      ;;=====================================================
     218.  00:87AE                      ;;ACCION_PUERTA_ABAJO
     219.  00:87AE                      ;;=====================================================	
     220.  00:87AE                      ; función: 	
     221.  00:87AE                      ; entrada: 	
     222.  00:87AE                      ; salida: 	
     223.  00:87AE                      accion_puerta_abajo:
     224.  00:87AE                      ;* examina si es la primera habitación para efecto de retirarse del juego
     225.  00:87AE                      
     226.  00:87AE                      ;************************************************************************************************
     227.  00:87AE  CD AB 81            	CALL	test_OK
     228.  00:87B1                      
     229.  00:87B1                      
     230.  00:87B1  3A E6 A9            	LD		 A, (prota_pos_mapy)
     231.  00:87B4  B7                  	OR		 A
     232.  00:87B5  20 04               	JR		NZ, .decrementa_solo_habitacion
     233.  00:87B7                      .decrementa_nivel
     234.  00:87B7  2A E2 A9            	LD		HL, (prota_nivel)
     235.  00:87BA  2B                  	DEC		HL
     236.  00:87BB                      	
     237.  00:87BB                      	
     238.  00:87BB                      	;esto tienem más trabajo
     239.  00:87BB                      	
     240.  00:87BB                      .decrementa_solo_habitacion
     241.  00:87BB  CD 8C 81            	CALL	sale_habitacion
     242.  00:87BE                      	
     243.  00:87BE  21 E6 A9            	LD		HL, prota_pos_mapy
     244.  00:87C1  35                  	DEC		(HL)
     245.  00:87C2                      
     246.  00:87C2  C3 7D 81            	JP		entra_habitacion
     247.  00:87C5                      fin_accion_puerta_abajo:
     248.  00:87C5                      	
     249.  00:87C5                      	
     250.  00:87C5                      ;;=====================================================
     251.  00:87C5                      ;;ACCION_PUERTA_IZQUIERDA
     252.  00:87C5                      ;;=====================================================	
     253.  00:87C5                      ; función: 	
     254.  00:87C5                      ; entrada: 	
     255.  00:87C5                      ; salida: 	
     256.  00:87C5                      accion_puerta_izquierda:
     257.  00:87C5  CD 8C 81            	CALL	sale_habitacion
     258.  00:87C8                      	
     259.  00:87C8  21 E5 A9            	LD		 HL, prota_pos_mapx
     260.  00:87CB  35                  	DEC		 (HL)
     261.  00:87CC                      
     262.  00:87CC  C3 7D 81            	JP		entra_habitacion
     263.  00:87CF                      fin_accion_puerta_izquierda:
     264.  00:87CF                      	
     265.  00:87CF                      
     266.  00:87CF                      ;;=====================================================
     267.  00:87CF                      ;;PINTA_PUERTAS
     268.  00:87CF                      ;;=====================================================	
     269.  00:87CF                      ; función: 	examina A y mira si tiene que pintar puertas de los lados, arriba o abrajo o las escaleras (o no)
     270.  00:87CF                      ; entrada: 	habitacion_actual 1 escalera 1 puerta arriba 1 pu der 1 pu aba 1 pu izq (si es 0 pinta pared)
     271.  00:87CF                      ; salida: 	-
     272.  00:87CF                      ; toca:		todo
     273.  00:87CF                      pinta_puertas:
     274.  00:87CF  CD 13 81            	CALL	localiza_info_habitacion	;busca qué puertas debe pintar y lo mete en habitación_actual
     275.  00:87D2                      
     276.  00:87D2  CD FC 88            	CALL	desactiva_todas_puertas
     277.  00:87D5                      
     278.  00:87D5                      	;examina puerta arrba
     279.  00:87D5  3A B4 A6            	LD		 A, (habitacion_actual)
     280.  00:87D8  CB 5F               	BIT		 3, A					
     281.  00:87DA  CA E8 87            	JP		 Z, .fin_puerta_arriba		;tiene puerta arriba?
     282.  00:87DD  CD 2C 88            		CALL	pinta_puerta_arr		;pinto puerta ;si es de la fila 7 los datos de la pueta de arriba serán los de una escalera
     283.  00:87E0  DD 21 E6 86         		LD		IX, puerta_arriba		
     284.  00:87E4  DD 36 00 01         		LD		(IX), 1					;activo puerta
     285.  00:87E8                      .fin_puerta_arriba:
     286.  00:87E8                      
     287.  00:87E8                      	;examina puerta derecha
     288.  00:87E8  3A B4 A6            	LD		 A, (habitacion_actual)
     289.  00:87EB  CB 57               	BIT		 2, A
     290.  00:87ED  CA FB 87            	JP		 Z, .fin_puerta_derecha		;tiene puerta derecha?
     291.  00:87F0  CD 36 88            		CALL	pinta_puerta_der		;pinto puerta
     292.  00:87F3  DD 21 F3 86         		LD		IX, puerta_derecha
     293.  00:87F7  DD 36 00 01         		LD		(IX), 1					;activo puerta
     294.  00:87FB                      .fin_puerta_derecha:
     295.  00:87FB                      
     296.  00:87FB                      	;examina puerta abajo
     297.  00:87FB  3A B4 A6            	LD		 A, (habitacion_actual)
     298.  00:87FE  CB 4F               	BIT		 1, A
     299.  00:8800  CA 0E 88            	JP		 Z, .fin_puerta_abajo		;tiene puerta derecha?
     300.  00:8803  CD 22 88            		CALL	pinta_puerta_aba		;pinto puerta
     301.  00:8806  DD 21 00 87         		LD		IX, puerta_abajo	
     302.  00:880A  DD 36 00 01         		LD		(IX), 1					;activo puerta
     303.  00:880E                      .fin_puerta_abajo:
     304.  00:880E                      
     305.  00:880E                      	;examina puerta izquierda
     306.  00:880E  3A B4 A6            	LD		 A, (habitacion_actual)
     307.  00:8811  CB 47               	BIT		 0, A
     308.  00:8813  CA 21 88            	JP		 Z, fin_pinta_puertas		;tiene puerta derecha?
     309.  00:8816  CD 40 88            		CALL	pinta_puerta_izq		;pinto puerta
     310.  00:8819  DD 21 0D 87         		LD		IX, puerta_izquierda	
     311.  00:881D  DD 36 00 01         		LD		(IX), 1					;activo puerta
     312.  00:8821                      fin_pinta_puertas:
     313.  00:8821  C9                  	RET
     314.  00:8822                      
     315.  00:8822                      
     316.  00:8822                      ;;=====================================================
     317.  00:8822                      ;;PINTA_PUERTA_ABA
     318.  00:8822                      ;;=====================================================	
     319.  00:8822                      ; función: 	pinta la puerta de abajo
     320.  00:8822                      ; entrada: 	puerta_abajo
     321.  00:8822                      ; salida: 	-
     322.  00:8822                      ; toca:		A, HL,BC, DE
     323.  00:8822                      pinta_puerta_aba:
     324.  00:8822  DD 21 00 87         	LD		IX, puerta_abajo
     325.  00:8826  CD 4A 88            	CALL	actualiza_variables_pinta_array
     326.  00:8829                      		
     327.  00:8829  C3 B2 84            	JP		pinta_array
     328.  00:882C                      fin_pinta_puerta_aba:
     329.  00:882C                      
     330.  00:882C                      
     331.  00:882C                      ;;=====================================================
     332.  00:882C                      ;;PINTA_PUERTA_ARR
     333.  00:882C                      ;;=====================================================	
     334.  00:882C                      ; función: 	pinta la puerta de arriba
     335.  00:882C                      ; entrada: 	puerta_arriba
     336.  00:882C                      ; salida: 	-
     337.  00:882C                      ; toca:		IX
     338.  00:882C                      pinta_puerta_arr:
     339.  00:882C  DD 21 E6 86         	LD		IX, puerta_arriba
     340.  00:8830  CD 4A 88            	CALL	actualiza_variables_pinta_array
     341.  00:8833                      	
     342.  00:8833  C3 B2 84            	JP		pinta_array
     343.  00:8836                      fin_pinta_puerta_arr:
     344.  00:8836                      
     345.  00:8836                      
     346.  00:8836                      ;;=====================================================
     347.  00:8836                      ;;PINTA_PUERTA_DER
     348.  00:8836                      ;;=====================================================	
     349.  00:8836                      ; función: 	pinta la puerta de la derecha
     350.  00:8836                      ; entrada: 	puerta_derecha
     351.  00:8836                      ; salida: 	-
     352.  00:8836                      ; toca:		HL,BC, DE
     353.  00:8836                      pinta_puerta_der:
     354.  00:8836  DD 21 F3 86         	LD		IX, puerta_derecha
     355.  00:883A  CD 4A 88            	CALL	actualiza_variables_pinta_array
     356.  00:883D                      	
     357.  00:883D  C3 B2 84            	JP		pinta_array
     358.  00:8840                      fin_pinta_puerta_der:
     359.  00:8840                      
     360.  00:8840                      	
     361.  00:8840                      ;;=====================================================
     362.  00:8840                      ;;PINTA_PUERTA_IZQ
     363.  00:8840                      ;;=====================================================	
     364.  00:8840                      ; función: 	pinta la puerta de la izquierda
     365.  00:8840                      ; entrada: 	puerta_izquierda
     366.  00:8840                      ; salida: 	-
     367.  00:8840                      ; toca:		HL,BC, DE
     368.  00:8840                      pinta_puerta_izq:
     369.  00:8840  DD 21 0D 87         	LD		IX, puerta_izquierda
     370.  00:8844  CD 4A 88            	CALL	actualiza_variables_pinta_array
     371.  00:8847                      	
     372.  00:8847  C3 B2 84            	JP		pinta_array
     373.  00:884A                      fin_pinta_puerta_izq:
     374.  00:884A                      
     375.  00:884A                      
     376.  00:884A                      ;;=====================================================
     377.  00:884A                      ;;FIN_ACTUALIZA_VARIABLES_PINTA_ARRAY
     378.  00:884A                      ;;=====================================================	
     379.  00:884A                      ; función: 	como el código es el mismo en esta subrutia se actualizan los valores de wordaux2, wordaux1, byteaux1, byteaux2
     380.  00:884A                      ; entrada: 	IX apuntando a la estructura de una puerta
     381.  00:884A                      ; salida: 	-
     382.  00:884A                      ; toca:		A,HL,BC, DE
     383.  00:884A                      actualiza_variables_pinta_array:
     384.  00:884A  DD 6E 07            	LD		 L, (IX + ESTRUCTURA_PUERTA.tiles_puerta)	;guardo puntero al array a pintar (como pasar por referencia)
     385.  00:884D  DD 66 08            	LD		 H, (IX + ESTRUCTURA_PUERTA.tiles_puerta + 1)
     386.  00:8850  22 F4 84            	LD		(wordaux2), HL						;en la variable wordaux2
     387.  00:8853                      	
     388.  00:8853  DD 6E 09            	LD		 L, (IX + ESTRUCTURA_PUERTA.pos_en_tilemap)	;guardo puntero al array a pintar (como pasar por referencia)
     389.  00:8856  DD 66 0A            	LD		 H, (IX + ESTRUCTURA_PUERTA.pos_en_tilemap + 1)
     390.  00:8859  22 F2 84            	LD		(wordaux1), HL						;guarda valor pos tilemap en wordaux1
     391.  00:885C                      	
     392.  00:885C  DD 7E 0B            	LD		 A, (IX + ESTRUCTURA_PUERTA.alto)	;nº de filas
     393.  00:885F  32 F6 84            	LD		(byteaux1), A
     394.  00:8862                      	
     395.  00:8862  DD 7E 0C            	LD		 A, (IX + ESTRUCTURA_PUERTA.ancho)	;nº de columnas
     396.  00:8865  32 F7 84            	LD		(byteaux2), A
     397.  00:8868                      fin_actualiza_variables_pinta_array:
     398.  00:8868  C9                  	RET
     399.  00:8869                      
     400.  00:8869                      
     401.  00:8869                      
     402.  00:8869                      ;;=====================================================
     403.  00:8869                      ;;CHECK_COLISIONES_PUERTAS
     404.  00:8869                      ;;=====================================================	
     405.  00:8869                      ; función: 	examina si se ha disparado sobre ua puerta activa, si es así, ejecuta la acción correspondiente
     406.  00:8869                      ; entrada: 	puerta_arriba, puerta_derecha, puerta_abajo, puerta_izquierda
     407.  00:8869                      ; salida: 	-
     408.  00:8869                      ; toca:		todo
     409.  00:8869                      check_colisiones_puertas:
     410.  00:8869                      .examina_puerta_arriba:
     411.  00:8869  DD 21 E6 86         	LD		IX, puerta_arriba
     412.  00:886D  DD 7E 00            	LD		 A, (IX)
     413.  00:8870  B7                  	OR		 A							;está activa esta puerta?
     414.  00:8871  CA 7F 88            	JP		 Z, .examina_puerta_derecha
     415.  00:8874                      	
     416.  00:8874  CD CB 88            	CALL	check_colision_puerta		;aquí ya es cosa de ver colisiones prota/puerta_izquierda
     417.  00:8877                      	;recibe valor A
     418.  00:8877  F6 00               	OR		 0							;hubo colisión?
     419.  00:8879  CA 7F 88            	JP		 Z, .examina_puerta_derecha	;no hubo colisión por lo que examina puerta siguiente
     420.  00:887C                      	;hubo colisión
     421.  00:887C                      	;EJECUTA ACCIÓN Y SALE DE LA RUTINA	
     422.  00:887C  C3 BF 88            	JP		.ejecuta_accion_y_sale
     423.  00:887F                      	
     424.  00:887F                      .examina_puerta_derecha:
     425.  00:887F  DD 21 F3 86         	LD		IX, puerta_derecha
     426.  00:8883  DD 7E 00            	LD		 A, (IX)
     427.  00:8886  B7                  	OR		 A							;está activa esta puerta?
     428.  00:8887  CA 95 88            	JP		 Z, .examina_puerta_abajo
     429.  00:888A  CD CB 88            	CALL	check_colision_puerta		;aquí ya es cosa de ver colisiones prota/puerta_izquierda
     430.  00:888D                      	
     431.  00:888D  F6 00               	OR		 0							;hubo colisión?
     432.  00:888F  CA 95 88            	JP		 Z, .examina_puerta_abajo	;no hubo colisión por lo que examina puerta siguiente
     433.  00:8892                      	;hubo colisión
     434.  00:8892                      	;EJECUTA ACCIÓN Y SALE DE LA RUTINA
     435.  00:8892  C3 CA 88            	JP		fin_check_colisiones_puertas
     436.  00:8895                      	
     437.  00:8895                      .examina_puerta_abajo:
     438.  00:8895  DD 21 00 87         	LD		IX, puerta_abajo
     439.  00:8899  DD 7E 00            	LD		 A, (IX)
     440.  00:889C  B7                  	OR		 A							;está activa esta puerta?
     441.  00:889D  CA AB 88            	JP		 Z, .examina_puerta_izquierda
     442.  00:88A0  CD CB 88            	CALL	check_colision_puerta		;aquí ya es cosa de ver colisiones prota/puerta_izquierda
     443.  00:88A3                      	
     444.  00:88A3  F6 00               	OR		 0							;hubo colisión?
     445.  00:88A5  CA AB 88            	JP		 Z, .examina_puerta_izquierda;no hubo colisión por lo que examina puerta siguiente
     446.  00:88A8                      	;hubo colisión
     447.  00:88A8                      	;EJECUTA ACCIÓN Y SALE DE LA RUTINA
     448.  00:88A8  C3 CA 88            	JP		fin_check_colisiones_puertas
     449.  00:88AB                      	
     450.  00:88AB                      .examina_puerta_izquierda:
     451.  00:88AB  DD 21 0D 87         	LD		IX, puerta_izquierda
     452.  00:88AF  DD 7E 00            	LD		 A, (IX)
     453.  00:88B2  B7                  	OR		 A							;está activa esta puerta?
     454.  00:88B3  CA CA 88            	JP		 Z, fin_check_colisiones_puertas
     455.  00:88B6  CD CB 88            	CALL	check_colision_puerta		;aquí ya es cosa de ver colisiones prota/puerta_izquierda
     456.  00:88B9                      	
     457.  00:88B9  F6 00               	OR		 0							;hubo colisión?
     458.  00:88BB  C8                  	RET		 Z							;es la última puerta a mirar, si no hubo colisión salimos
     459.  00:88BC                      	;hubo colisión
     460.  00:88BC                      	;EJECUTA ACCIÓN Y SALE DE LA RUTINA
     461.  00:88BC  C3 CA 88            	JP		fin_check_colisiones_puertas
     462.  00:88BF                      
     463.  00:88BF                      .ejecuta_accion_y_sale
     464.  00:88BF  21 CA 88            	LD		HL, fin_check_colisiones_puertas ;se guarda dónde volver
     465.  00:88C2  E5                  	PUSH	HL
     466.  00:88C3                      	
     467.  00:88C3  DD 6E 05            	LD		 L, (IX + ESTRUCTURA_PUERTA.accion)
     468.  00:88C6  DD 66 06            	LD		 H, (IX + ESTRUCTURA_PUERTA.accion + 1)
     469.  00:88C9  E9                  	JP		(HL)
     470.  00:88CA                      fin_check_colisiones_puertas:
     471.  00:88CA  C9                  	RET
     472.  00:88CB                      
     473.  00:88CB                      
     474.  00:88CB                      ;;=====================================================
     475.  00:88CB                      ;;CHECK_COLISION_PUERTA
     476.  00:88CB                      ;;=====================================================	
     477.  00:88CB                      ; función: 	revisa (con enemigos+ayudas o puertas según si la habitación ha sido recorrida o no) las variables para ver si se disparó sobre ellas
     478.  00:88CB                      ; entrada: 	IX con el puntero a la puerta que se examina
     479.  00:88CB                      ; salida: 	A (0 no hay colisión con puerta / 1 sí la hay)
     480.  00:88CB                      ; toca:		HL,BC, DE
     481.  00:88CB                      check_colision_puerta:
     482.  00:88CB                      .deteccioncolision_paso1:
     483.  00:88CB  FD 21 D2 A9         	LD		IY, prota	;IY punto de mira / IX puerta
     484.  00:88CF  FD 7E 00            	LD		 A, (IY + ESTRUCTURA_PUNTOMIRA.posx)
     485.  00:88D2  C6 08               	ADD		 8			;8-es fijo, offset del punto de mira ya que se mueve según la esquina superior izquierda y el centro del punto de mira está en el centro del sprite
     486.  00:88D4                      	
     487.  00:88D4                      	;ya tengo en A la coordenada X del centro del punto de mira					
     488.  00:88D4  DD 96 01            	SUB		(IX + ESTRUCTURA_PUERTA.posx)	;le resto el punto x en la puerta
     489.  00:88D7                      	
     490.  00:88D7  D2 DC 88            	JP		NC, .deteccioncolision_paso2	;si no es negativo comparo con el radio
     491.  00:88DA                      
     492.  00:88DA  ED 44               	NEG										;si es negativo lo niego (valor absoluto)
     493.  00:88DC                      	
     494.  00:88DC                      .deteccioncolision_paso2:
     495.  00:88DC  DD BE 03            	CP		(IX + ESTRUCTURA_PUERTA.radiox)	;comparo con el radio X de la puerta
     496.  00:88DF                      	
     497.  00:88DF  DA E4 88            	JP		 C, .deteccioncolision_paso3	;SI NC la distancia es >= por lo que sale y no es necesario verificar nada más
     498.  00:88E2                      	
     499.  00:88E2  AF                  	XOR		 A								;el resultado es falso y se guarda en A y ya no hay que seguir coprobando
     500.  00:88E3  C9                  	RET
     501.  00:88E4                      	
     502.  00:88E4                      .deteccioncolision_paso3:					;la distancia X es válida, comprobamos la distancia Y
     503.  00:88E4  FD 7E 01            	LD		 A, (IY + ESTRUCTURA_PUNTOMIRA.posy)
     504.  00:88E7  C6 08               	ADD		 8								;le sumo el offset del punto de mira (8 es fijo)
     505.  00:88E9                      
     506.  00:88E9                      	;ya tengo en A la coordenada Y del centro del punto de mira					
     507.  00:88E9  DD 96 02            	SUB		(IX + ESTRUCTURA_PUERTA.posy)	;le resto el punto y en la puerta
     508.  00:88EC                      	
     509.  00:88EC  D2 F1 88            	JP		NC, .deteccioncolision_paso4	;si no es negativo comparo con el radio
     510.  00:88EF                      
     511.  00:88EF  ED 44               	NEG										;si es negativo lo niego (valor absoluto)
     512.  00:88F1                      
     513.  00:88F1                      .deteccioncolision_paso4:
     514.  00:88F1  DD BE 04            	CP		(IX + ESTRUCTURA_PUERTA.radioy)	;comparo con el radio Y de la puerta
     515.  00:88F4                      
     516.  00:88F4  DA F9 88            	JP		 C, .deteccioncolision_paso5	;SI NC la distancia es >= por lo que sale y no es necesario verificar nada más
     517.  00:88F7                      	
     518.  00:88F7  AF                  	XOR		 A								;el resultado es falso y se guarda en A un 0 y al ser la 2º comprobación salimos
     519.  00:88F8  C9                  	RET
     520.  00:88F9                      
     521.  00:88F9                      .deteccioncolision_paso5:
     522.  00:88F9  3E 01               	LD		 A, SI
     523.  00:88FB                      fin_check_colision_puerta:
     524.  00:88FB  C9                  	RET
     525.  00:88FC                      
     526.  00:88FC                      
     527.  00:88FC                      
     528.  00:88FC                      
     529.  00:88FC                      	
     530.  00:88FC                      ;;=====================================================
     531.  00:88FC                      ;;CHECK_COLISION_PUERTA
     532.  00:88FC                      ;;=====================================================	
     533.  00:88FC                      ; función: 	revisa (con enemigos+ayudas o puertas según si la habitación ha sido recorrida o no) las variables para ver si se disparó sobre ellas
     534.  00:88FC                      ; entrada: 	puerta_arriba, puerta_derecha, puerta_abajo, puerta_izquierda
     535.  00:88FC                      ; salida: 	las estructuras de la puertas (entrada) con el valor activo a 0 (PUERTAINACT)
     536.  00:88FC                      ; toca:		IX
     537.  00:88FC                      desactiva_todas_puertas:
     538.  00:88FC  DD 21 E6 86         	LD		IX, puerta_arriba		;desactivo_puerta arriba
     539.  00:8900  DD 36 00 00         	LD		(IX), PUERTAINACT
     540.  00:8904  DD 21 F3 86         	LD		IX, puerta_derecha		;desactivo_puerta derecha
     541.  00:8908  DD 36 00 00         	LD		(IX), PUERTAINACT
     542.  00:890C  DD 21 00 87         	LD		IX, puerta_abajo		;desactivo_puerta abajo
     543.  00:8910  DD 36 00 00         	LD		(IX), PUERTAINACT
     544.  00:8914  DD 21 0D 87         	LD		IX, puerta_izquierda	;desactivo_puerta izquierda
     545.  00:8918  DD 36 00 00         	LD		(IX), PUERTAINACT
     546.  00:891C                      fin_desactiva_todas_puertas:
     547.  00:891C  C9                  	RET
     548.  00:891D                      
     167   00:891D                      	
     168   00:891D                      	include "subr_sprites.asm"
       1.  00:891D                      
       2.  00:891D                      ;;=====================================================
       3.  00:891D                      ;;SUBRUTINAS ENCARGADAS DE MANEJAR LOS SPRITES
       4.  00:891D                      ;;=====================================================	
       5.  00:891D                      
       6.  00:891D                      
       7.  00:891D                      ;; PREGUNTAR SI A FERNANDO SI ES MEJOR USAR LISTAS O ALGO PARA AHORRAR CÓDIGO
       8.  00:891D                      
       9.  00:891D                      
      10.  00:891D                      
      11.  00:891D                      
      12.  00:891D                      ;;=====================================================
      13.  00:891D                      ;;CARGA_PATRONES_SPRITES_NIVEL
      14.  00:891D                      ;;=====================================================	
      15.  00:891D                      ; función: 	examina el nivel y carga los patrones específicos necesarios
      16.  00:891D                      ; entrada: 	-
      17.  00:891D                      ; salida: 	-
      18.  00:891D                      ; toca: 	-
      19.  00:891D                      carga_patrones_sprites_nivel:
      20.  00:891D  CD 21 89            	CALL 	carga_patrones_nivel_comunes
      21.  00:8920                      	
      22.  00:8920  C9                  	RET		;*********************
      23.  00:8921                      	
      24.  00:8921                      	
      25.  00:8921                      	;POR AHORA ES TODO COMÚN ... CUANDO EL JUGADOR SE MUEVA LOS PATRONES SERÁN DEPENDIENDO DEL NIVEL
      26.  00:8921                      	; O NO Y LO QUE SE HACE ES PERSONALIZAR LA PANTALLA USANDO LOS MISMOS PATRONES PERO PINTANDO DISTINTOS
      27.  00:8921                      	; EN DISTINTOS SITIOS SEGÚN NIVEL
      28.  00:8921                      	
      29.  00:8921                      	;~ ;carga patrones no comunes
      30.  00:8921                      	;~ LD		 A, (prota_nivel)
      31.  00:8921                      	;~ OR		 A
      32.  00:8921                      	;~ JP		 Z, carga_patrones_sprites_nivel donde esté el prota
      33.  00:8921                      fin_carga_patrones_sprites_nivel:
      34.  00:8921                      
      35.  00:8921                      
      36.  00:8921                      ;;=====================================================
      37.  00:8921                      ;;CARGA_PATRONES_SPRITES_NIVEL_COMUNES
      38.  00:8921                      ;;=====================================================	
      39.  00:8921                      ; función: 	carga los patrones comunes en todos los niveles
      40.  00:8921                      ; entrada: 	-
      41.  00:8921                      ; salida: 	-
      42.  00:8921                      ; toca: 	-
      43.  00:8921                      carga_patrones_nivel_comunes:	
      44.  00:8921  21 34 9D            	LD		HL, sprites_comunes
      45.  00:8924  11 00 38            	LD		DE, SPRTBL
      46.  00:8927  01 C0 00            	LD		BC, fin_sprites_comunes-sprites_comunes
      47.  00:892A  C3 5C 00            	JP		LDIRVM
      48.  00:892D                      fin_carga_patrones_nivel_comunes:
      49.  00:892D                      
      50.  00:892D                      
      51.  00:892D                      ;;=====================================================
      52.  00:892D                      ;;CARGA_PATRONES_SPRITES_NIVEL1
      53.  00:892D                      ;;=====================================================	
      54.  00:892D                      ; función: 	copia los patrones de los sprites que e van a usar en el nivel 1 en vram
      55.  00:892D                      ; entrada: 	-
      56.  00:892D                      ; salida: 	-
      57.  00:892D                      ; toca: 	-
      58.  00:892D                      carga_patrones_sprites_nivel1:
      59.  00:892D                      
      60.  00:892D                      	;~ ;sprite sprite_reliquia
      61.  00:892D                      	;~ LD		HL,sprite_reliquia
      62.  00:892D                      	;~ LD		DE,#3880
      63.  00:892D                      	;~ LD		BC,32				;32 bytes (sprites de 2 x 2)
      64.  00:892D                      	;~ CALL	LDIRVM
      65.  00:892D                      
      66.  00:892D                      fin_carga_patrones_sprites:
      67.  00:892D  C9                  	RET
      68.  00:892E                      
      69.  00:892E                      
      70.  00:892E                      ;;=====================================================
      71.  00:892E                      ;;ACTUALIZA_ARRAY_SPRITES_VRAM
      72.  00:892E                      ;;=====================================================	
      73.  00:892E                      ; función: 	copia el array con los valores de los sprites (pos, color, plano) en VRAM
      74.  00:892E                      ; entrada: 	-
      75.  00:892E                      ; salida: 	-
      76.  00:892E                      ; toca: 	todos los registros. Como me interesa la velocidad, si necesito copiar de algo lo hago fuera
      77.  00:892E                      render_sprites:
      78.  00:892E                      	;volcando el array con toda la info de los sprites a la zona de atributos de sprites
      79.  00:892E  21 3A AB            	LD		HL,array_sprites
      80.  00:8931  11 00 1B            	LD		DE,SPRART
      81.  00:8934  01 80 00            	LD		BC,4 * 32				;32 sprites x 4 bytes controlando el sprite (Y, X, plano, color)
      82.  00:8937  C3 5C 00            	JP		LDIRVM
      83.  00:893A                      fin_actualiza_array_sprites_vram:
      84.  00:893A                      
      85.  00:893A                      
      86.  00:893A                      ;;=====================================================
      87.  00:893A                      ;;VUELCA_RESULTADO_PUNTOMIRA_ARRAY
      88.  00:893A                      ;;=====================================================	
      89.  00:893A                      ; función: 	coloca los valores del punto de mira en la variable array_sprites para ser volcados en VRAM
      90.  00:893A                      ; entrada: 	array_sprites_pm, prota.XXXXX
      91.  00:893A                      ; salida: 	-
      92.  00:893A                      ; toca: 	-
      93.  00:893A                      vuelca_resultado_puntomira_array:
      94.  00:893A  DD 21 3A AB         	LD		IX, array_sprites_pm
      95.  00:893E                      	;posición y de los dos sprites que conforman el punto de mira
      96.  00:893E  3A D3 A9            	LD		 A, (prota.posy)
      97.  00:8941  DD 77 00            	LD		(IX  ), A
      98.  00:8944  DD 77 04            	LD		(IX+4), A
      99.  00:8947                      	;posición x de los dos sprites que conforman el punto de mira
     100.  00:8947  3A D2 A9            	LD		 A, (prota.posx)
     101.  00:894A  DD 77 01            	LD		(IX+1), A
     102.  00:894D  DD 77 05            	LD		(IX+5), A
     103.  00:8950                      	;plano
     104.  00:8950  DD 36 02 00         	LD		(IX+2), 0
     105.  00:8954  DD 36 06 04         	LD		(IX+6), 4	;al ser sprites de 16x16 hay que ir de 4 en 4
     106.  00:8958                      	;color
     107.  00:8958  3A D4 A9            	LD		 A, (prota.escena)
     108.  00:895B  B7                  	OR		 A
     109.  00:895C  C2 68 89            	JP		NZ,.codigo_color_2
     110.  00:895F                      .codigo_color_1:
     111.  00:895F  DD 36 03 0F         	LD		(IX+3), COLBLANCO
     112.  00:8963  DD 36 07 08         	LD		(IX+7), COLROJO
     113.  00:8967  C9                  	RET
     114.  00:8968                      .codigo_color_2:
     115.  00:8968  DD 36 03 08         	LD		(IX+3), COLROJO
     116.  00:896C  DD 36 07 0F         	LD		(IX+7), COLBLANCO
     117.  00:8970  C9                  	RET
     118.  00:8971                      fin_vuelca_resultado_puntomira_array:
     119.  00:8971                      
     120.  00:8971                      
     121.  00:8971                      ;;=====================================================
     122.  00:8971                      ;;CHECK_PLAYER
     123.  00:8971                      ;;=====================================================	
     124.  00:8971                      ; función: 	MIRA EL CONTROL Y APLICA LA LOGICA DE MOVIMIENTO DEL PROTAGONISTA
     125.  00:8971                      ; entrada: 	-
     126.  00:8971                      ; salida: 	-
     127.  00:8971                      ; toca: 	A
     128.  00:8971                      check_player:
     129.  00:8971  CD 13 8A            	CALL	update_controllers_status
     130.  00:8974  B7                  	OR		 A
     131.  00:8975  C8                  	RET		 Z						;si no se ha pulsado nada no se necesita mirar nada
     132.  00:8976                      
     133.  00:8976  CB 1F               	RR		 A
     134.  00:8978  DC 91 89            	CALL	 C, mueve_arriba
     135.  00:897B  CB 1F               	RR		 A
     136.  00:897D  DC AD 89            	CALL	 C, mueve_abajo
     137.  00:8980  CB 1F               	RR		 A
     138.  00:8982  DC BC 89            	CALL	 C, mueve_izquierda
     139.  00:8985  CB 1F               	RR		 A
     140.  00:8987  DC 9E 89            	CALL	 C, mueve_derecha
     141.  00:898A                      	
     142.  00:898A                      	;zona para mirar disparo Recibe A que tendrá 0000 0 0 X-letra M X-espacio 
     143.  00:898A  CD C9 89            	CALL	mira_disparo
     144.  00:898D                      
     145.  00:898D  C3 3A 89            	JP		vuelca_resultado_puntomira_array
     146.  00:8990                      f;in_check_player:
     147.  00:8990  C9                  	RET
     148.  00:8991                      
     169   00:8991                      	
     170   00:8991                      	include "subr_teclado_joy.asm"
       1.  00:8991                      ;;=====================================================
       2.  00:8991                      ;;SUBRUTINAS QUE CAPTURAN EL JOYSTICK Y TECLADO Y MUEVEN PUNTO DE MIRA
       3.  00:8991                      ;;=====================================================
       4.  00:8991                      
       5.  00:8991                      ;;=====================================================
       6.  00:8991                      ;;MUEVE_ARRIBA
       7.  00:8991                      ;;=====================================================	
       8.  00:8991                      ; función: 	decrementa y si se no sale de los límites el valor del punto de mira a la derecha
       9.  00:8991                      ; entrada: 	-
      10.  00:8991                      ; salida: 	-
      11.  00:8991                      ; toca: 	-
      12.  00:8991                      mueve_arriba:
      13.  00:8991  F5                  	PUSH		AF
      14.  00:8992                      	
      15.  00:8992  3A D3 A9            	LD		 	 A, (prota.posy)
      16.  00:8995  3D                  	DEC			 A
      17.  00:8996  CA 9C 89            	JP			 Z,.no_decrementa_y
      18.  00:8999  32 D3 A9            	LD			(prota.posy), A
      19.  00:899C                      	
      20.  00:899C                      .no_decrementa_y:
      21.  00:899C  F1                  	POP			AF
      22.  00:899D                      fin_mueve_arriba:
      23.  00:899D  C9                  	RET
      24.  00:899E                      
      25.  00:899E                      
      26.  00:899E                      ;;=====================================================
      27.  00:899E                      ;;MUEVE_DERECHA
      28.  00:899E                      ;;=====================================================	
      29.  00:899E                      ; función: 	incrementa si se no sale de los límites el valor del punto de mira a la derecha
      30.  00:899E                      ; entrada: 	-
      31.  00:899E                      ; salida: 	-
      32.  00:899E                      ; toca: 	-
      33.  00:899E                      mueve_derecha:
      34.  00:899E  F5                  	PUSH		AF
      35.  00:899F                      	
      36.  00:899F  3A D2 A9            	LD		 	 A, (prota.posx)
      37.  00:89A2  3C                  	INC			 A
      38.  00:89A3  FE EF               	CP			 A, LIMPANTDER - 16
      39.  00:89A5  CA AB 89            	JP			 Z, .no_incrementa_x
      40.  00:89A8  32 D2 A9            	LD			(prota.posx), A
      41.  00:89AB                      	
      42.  00:89AB                      .no_incrementa_x:
      43.  00:89AB  F1                  	POP			AF
      44.  00:89AC                      fin_mueve_derecha:
      45.  00:89AC  C9                  	RET
      46.  00:89AD                      
      47.  00:89AD                      
      48.  00:89AD                      ;;=====================================================
      49.  00:89AD                      ;;MUEVE_ABAJO
      50.  00:89AD                      ;;=====================================================	
      51.  00:89AD                      ; función: 	incrementa y si se no sale de los límites el valor del punto de mira abajo
      52.  00:89AD                      ; entrada: 	-
      53.  00:89AD                      ; salida: 	-
      54.  00:89AD                      ; toca: 	-
      55.  00:89AD                      mueve_abajo:
      56.  00:89AD  F5                  	PUSH		AF
      57.  00:89AE                      	
      58.  00:89AE  3A D3 A9            	LD		 	 A, (prota.posy)
      59.  00:89B1  3C                  	INC			 A
      60.  00:89B2  FE 70               	CP			 A, LIMPANTABA - 16
      61.  00:89B4  CA BA 89            	JP			 Z,.no_incrementa_y
      62.  00:89B7  32 D3 A9            	LD			(prota.posy), A
      63.  00:89BA                      	
      64.  00:89BA                      .no_incrementa_y:
      65.  00:89BA  F1                  	POP			AF
      66.  00:89BB                      fin_mueve_abajo:
      67.  00:89BB  C9                  	RET
      68.  00:89BC                      	
      69.  00:89BC                      	
      70.  00:89BC                      ;;=====================================================
      71.  00:89BC                      ;;MUEVE_IZQUIERDA
      72.  00:89BC                      ;;=====================================================	
      73.  00:89BC                      ; función: 	decrementa x si se no sale de los límites el valor del punto de mira a la izquierda
      74.  00:89BC                      ; entrada: 	-
      75.  00:89BC                      ; salida: 	-
      76.  00:89BC                      ; toca: 	-
      77.  00:89BC                      mueve_izquierda:
      78.  00:89BC  F5                  	PUSH		AF
      79.  00:89BD                      	
      80.  00:89BD  3A D2 A9            	LD		 	 A, (prota.posx)
      81.  00:89C0  3D                  	DEC			 A
      82.  00:89C1                      ;	CP			 A, LIMPANTIZQ
      83.  00:89C1  CA C7 89            	JP			 Z,.no_decrementa_x
      84.  00:89C4  32 D2 A9            	LD			(prota.posx), A
      85.  00:89C7                      	
      86.  00:89C7                      .no_decrementa_x:
      87.  00:89C7  F1                  	POP			AF
      88.  00:89C8                      fin_mueve_izquierda:
      89.  00:89C8  C9                  	RET
      90.  00:89C9                      
      91.  00:89C9                      
      92.  00:89C9                      
      93.  00:89C9                      ;;=====================================================
      94.  00:89C9                      ;;MIRA_DISPARO
      95.  00:89C9                      ;;=====================================================	
      96.  00:89C9                      ; función: 	Mira si se ha pulsado alguno de los dos disparos
      97.  00:89C9                      ; entrada: 	A que tendrá 0000 0 0 X-letra M X-espacio 
      98.  00:89C9                      ; salida: 	-
      99.  00:89C9                      ; toca: 	A, B
     100.  00:89C9                      mira_disparo:
     101.  00:89C9                      .mira_boton_pulsado1:
     102.  00:89C9  CB 1F               	RR		 A						;preparo en el carry si se ha pulsado botón 1
     103.  00:89CB  D2 F7 89            	JP		 NC, .mira_boton_pulsado2					
     104.  00:89CE  F5                  	PUSH	AF						;copia A para usarlo después
     105.  00:89CF                      	;se ha pulsado barra o boton 1
     106.  00:89CF  3A D7 A9            	LD		 A, (prota.cadencia)
     107.  00:89D2  B7                  	OR		 A
     108.  00:89D3  CA E1 89            	JP		 Z, .efectua_disparo	;toca efectuar disparo realmente porque se ha pulsado lo suficiente el disparo
     109.  00:89D6                      .no_efectua_disparo: ;IF
     110.  00:89D6  3D                  		DEC		 A
     111.  00:89D7  32 D7 A9            		LD		(prota.cadencia), A	;resto cadencia hasta próximo disparo "real" (no automático por haber pulsado una tecla e ir demasiado rápido)
     112.  00:89DA  AF                  		XOR		 A 
     113.  00:89DB  32 D4 A9            		LD		(prota.escena), A
     114.  00:89DE  C3 F6 89            		JP		.fin_mira_disparo1
     115.  00:89E1                      .efectua_disparo:	;ELSE
     116.  00:89E1                      		;cambio colores del sprite
     117.  00:89E1  3A D4 A9            		LD		 A, (prota.escena)
     118.  00:89E4  2F                  		CPL		 
     119.  00:89E5  32 D4 A9            		LD		(prota.escena), A
     120.  00:89E8                      		;reseteo cadencia para el próximo disparo
     121.  00:89E8  3E 04               		LD		 A, LIMCADENCIA				;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
     122.  00:89EA  32 D7 A9            		LD		 (prota.cadencia), A		;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
     123.  00:89ED                      		
     124.  00:89ED                      		;ejecuto sonido						;; ajustar cadencia y que cuando el disparo sea efectivo se reseteen los colores
     125.  00:89ED  AF                  		XOR		 A
     126.  00:89EE  0E 01               		LD		 C, 1
     127.  00:89F0  CD BB 90            		CALL	ayFX_INIT
     128.  00:89F3                      		
     129.  00:89F3                      		;examino si el disparo le dió a algo activo
     130.  00:89F3  CD 48 80            		CALL	check_colisiones_objetos	;revisa las colisiones con puertas, ayudas y enemigos
     131.  00:89F6                      		
     132.  00:89F6                      .fin_mira_disparo1
     133.  00:89F6  F1                  	POP		AF
     134.  00:89F7                      
     135.  00:89F7                      .mira_boton_pulsado2:
     136.  00:89F7  CB 1F               	RR		 A
     137.  00:89F9  D0                  	RET		 NC
     138.  00:89FA                      	;se ha pulsado shift o boton 2
     139.  00:89FA                      	
     140.  00:89FA  3A E4 A9            	LD		 A, (prota_reliquias)	;miro si le quedan reliquias
     141.  00:89FD  B7                  	OR		 A
     142.  00:89FE  C8                  	RET		 Z						;si no le quedan salgo ya
     143.  00:89FF                      	
     144.  00:89FF                      	;actuaciones si se usa la reliquia botón 2 o M y quedn reliquias.. (antes ya se puso el valor en A)
     145.  00:89FF  3A E4 A9            	LD		A, (prota_reliquias)
     146.  00:8A02  3D                  	DEC		 A
     147.  00:8A03  32 E4 A9            	LD		(prota_reliquias), A
     148.  00:8A06                      	
     149.  00:8A06  3E 01               	LD		 A, 1
     150.  00:8A08  0E 01               	LD		 C, 1
     151.  00:8A0A  CD BB 90            	CALL	ayFX_INIT
     152.  00:8A0D                      	
     153.  00:8A0D  CD 98 84            	CALL 	efecto_imagen_tira_reliquia
     154.  00:8A10                      	
     155.  00:8A10  C3 40 83            	JP		pinta_reliquias
     156.  00:8A13                      fin_mira_disparo:
     157.  00:8A13                      ;	RET		
     158.  00:8A13                      
     159.  00:8A13                      
     160.  00:8A13                      ;;============================================================
     161.  00:8A13                      ;;Código de D. Fernando García (BitVision) (al que siempre le estaré agradecido)
     162.  00:8A13                      ;check_8th_keyboard_row
     163.  00:8A13                      ;read_joy_0
     164.  00:8A13                      ;check_8th_keyboard_row
     165.  00:8A13                      ;check_4th_keyboard_row
     166.  00:8A13                      ;;============================================================
     167.  00:8A13                      ;;  usa constantes:
     168.  00:8A13                      ;PSG_A  equ  0a0h  ;reg address
     169.  00:8A13                      ;PSG_W  equ  0a1h  ;reg data WR
     170.  00:8A13                      ;PSG_R  equ  0a2h  ;reg data
     171.  00:8A13                      
     172.  00:8A13                      ;;=====================================================
     173.  00:8A13                      ;;update_controllers_status
     174.  00:8A13                      ;;=====================================================	
     175.  00:8A13                      ;depends on the next rountine
     176.  00:8A13                      ;  returns
     177.  00:8A13                      ;  a - 0P2TRLDU
     178.  00:8A13                      
     179.  00:8A13                      update_controllers_status:
     180.  00:8A13  CD 5E 8A                 call  check_8th_keyboard_row
     181.  00:8A16                      [4]  rrc    a
     181.  00:8A16  CB 0F CB 0F CB 0F CB 0F 
     182.  00:8A1E  47                       ld    b,a    		;save for later  xxxTRDUL
     183.  00:8A1F                      
     184.  00:8A1F  E6 01                    and    #01    		;save L
     185.  00:8A21  CB 27                    sla    a
     186.  00:8A23  CB 27                    sla    a    		;now 00000L00
     187.  00:8A25  4F                       ld    c,a    		;save for later
     188.  00:8A26                      
     189.  00:8A26  78                       ld    a,b    		;again we've got xxxTRDUL. I am interested on leaving 000000DU on a
     190.  00:8A27  CB 3F                    srl    a
     191.  00:8A29  E6 03                    and    00000011b
     192.  00:8A2B                      						;we've got 000000DU on a
     193.  00:8A2B  B1                       or    c    		;now we've got 00000LDU
     194.  00:8A2C  4F                       ld    c,a    		;save for later
     195.  00:8A2D                      
     196.  00:8A2D  78                       ld    a,b
     197.  00:8A2E  E6 18                    and    00011000b 	;we've got 000TR000
     198.  00:8A30  B1                       or    c
     199.  00:8A31                           ;finally    000TRLDU
     200.  00:8A31                      
     201.  00:8A31                           ;and    00000100   ;preserve just
     202.  00:8A31  47                       ld    b,a    		;save for later
     203.  00:8A32  CD 6C 8A                 call  check_4th_keyboard_row      ;check M & P
     204.  00:8A35  F5                       push  af
     205.  00:8A36  E6 04                    and    00000100b	;filter just M
     206.  00:8A38  87                       add    a
     207.  00:8A39  87                       add    a
     208.  00:8A3A  87                       add    a           ;shift 3th to 6th bit
     209.  00:8A3B  B0                       or    b           	;merge with previous
     210.  00:8A3C  47                       ld    b,a
     211.  00:8A3D                      
     212.  00:8A3D  CD 4A 8A                 call  read_joy_0
     213.  00:8A40  E6 3F                    and    00111111b  	;we want just 002TRLDU  from joystick    (2 is second trigger)
     214.  00:8A42  B0                       or    b      		;added 000TRLDU from keyboard
     215.  00:8A43  47                       ld    b,a      	;save for later
     216.  00:8A44  F1                       pop    af      	; let's check on P
     217.  00:8A45                      
     218.  00:8A45  E6 20                    and    00100000b
     219.  00:8A47  87                       add    a      		;P status on 6th bit  ... so 0P2TRLDU
     220.  00:8A48  B0                       or    b
     221.  00:8A49                      
     222.  00:8A49  C9                       ret
     223.  00:8A4A                      
     224.  00:8A4A                      
     225.  00:8A4A                      ;ret
     226.  00:8A4A                      ;  a -            xx2TRLDU
     227.  00:8A4A                      read_joy_0:
     228.  00:8A4A  F3                         di
     229.  00:8A4B  3E 0F                      ld    a,15
     230.  00:8A4D  D3 A0                      out    [PSG_A],a
     231.  00:8A4F  DB A2                      in    a,[PSG_R]
     232.  00:8A51  E6 BF                      and    10111111b        ;joy0
     233.  00:8A53                      
     234.  00:8A53  D3 A1                      out    [PSG_W],a        ;set joy0
     235.  00:8A55                      
     236.  00:8A55  3E 0E                      ld    a,14
     237.  00:8A57  D3 A0                      out    [PSG_A],a
     238.  00:8A59  DB A2                      in    a,[PSG_R]
     239.  00:8A5B                      
     240.  00:8A5B  FB                         ei
     241.  00:8A5C  2F                         cpl
     242.  00:8A5D                      
     243.  00:8A5D  C9                         ret
     244.  00:8A5E                      
     245.  00:8A5E                      
     246.  00:8A5E                      ;ret
     247.  00:8A5E                      ;  a -      RDULxxxT
     248.  00:8A5E                      check_8th_keyboard_row:
     249.  00:8A5E  F3                       di
     250.  00:8A5F  DB AA                    in    a,(#aa)
     251.  00:8A61  E6 F0                    and    #f0
     252.  00:8A63  F6 08                    or    8
     253.  00:8A65  D3 AA                    out    (#aa),a
     254.  00:8A67  DB A9                    in    a,(#a9)
     255.  00:8A69  FB                       ei
     256.  00:8A6A  2F                       cpl
     257.  00:8A6B                      
     258.  00:8A6B  C9                       ret
     259.  00:8A6C                      
     260.  00:8A6C                      
     261.  00:8A6C                      ;ret
     262.  00:8A6C                      ;  a -      xxxxxMxx
     263.  00:8A6C                      check_4th_keyboard_row:
     264.  00:8A6C  F3                       di
     265.  00:8A6D  DB AA                    in    a,(#aa)
     266.  00:8A6F  E6 F0                    and    #f0
     267.  00:8A71  F6 04                    or    4
     268.  00:8A73  D3 AA                    out    (#aa),a
     269.  00:8A75  DB A9                    in    a,(#a9)
     270.  00:8A77  FB                       ei
     271.  00:8A78  2F                       cpl
     272.  00:8A79                      
     273.  00:8A79  C9                       ret
     274.  00:8A7A                      
     275.  00:8A7A                      ;--------------------------------------------
     276.  00:8A7A                      
     277.  00:8A7A                      
     278.  00:8A7A                      
     279.  00:8A7A                      
     280.  00:8A7A                      
     281.  00:8A7A                      
     282.  00:8A7A                      
     283.  00:8A7A                      
     171   00:8A7A                      	
     172   00:8A7A                      	include "subr_sonido.asm"
       1.  00:8A7A                      
       2.  00:8A7A                      ;;=====================================================
       3.  00:8A7A                      ;;SUBRUTINAS PARA SONIDOS
       4.  00:8A7A                      ;;=====================================================	
       5.  00:8A7A                      
       6.  00:8A7A                      ;;=====================================================
       7.  00:8A7A                      ;;INICIALIZA_REPLAYER_EFECTOS_INTERRUPCIONES
       8.  00:8A7A                      ;;=====================================================	
       9.  00:8A7A                      ; función: 	inicializa: replayer de música, player de efectos e interrupciones
      10.  00:8A7A                      ; entrada: 	-
      11.  00:8A7A                      ; salida: 	-
      12.  00:8A7A                      ; toca: 	HL, A
      13.  00:8A7A                      inicializa_replayer_efectos_interrupciones:
      14.  00:8A7A  F3                  	DI
      15.  00:8A7B                      
      16.  00:8A7B                      	;inicializacion de replayer musical
      17.  00:8A7B  21 23 91            	LD		HL, song-99			; hl <- initial address of module - 99
      18.  00:8A7E  CD BA 8A            	CALL	PT3_INIT			; Inits PT3 player
      19.  00:8A81                      		
      20.  00:8A81                      	;inicializacion del reproductor de efectos sonoros
      21.  00:8A81  21 EE 9A            	LD		HL, sfx_bank
      22.  00:8A84  CD A9 90            	CALL	ayFX_SETUP
      23.  00:8A87                      	
      24.  00:8A87                      	;Engancha nuestra rutina de servicio al gancha que deja preparado la BIOS cuando se termina de pintar la pantalla (50 o 60 veces por segundo)
      25.  00:8A87  3E C3               	LD		A, #C3
      26.  00:8A89  32 9F FD            	LD		[H.TIMI], A
      27.  00:8A8C  21 94 8A            	LD		HL, subrutina_isr
      28.  00:8A8F  22 A0 FD            	LD		[H.TIMI+1], HL
      29.  00:8A92                      	
      30.  00:8A92  FB                  	EI		;optimizacion:
      31.  00:8A93                      			;piensa que las dos ultimas lineas podrian haber sido: 
      32.  00:8A93                      			;ei						;primero ei
      33.  00:8A93                      			;ld		[H.TIMI+1],hl	;luego este ld
      34.  00:8A93                      									;PENSAR (y consultar ) PORQUE!!!!
      35.  00:8A93                      fin_inicializa_replayer_efectos_interrupciones:
      36.  00:8A93  C9                  	RET
      37.  00:8A94                      
      38.  00:8A94                      
      39.  00:8A94                      
      40.  00:8A94                      ;;=====================================================
      41.  00:8A94                      ;;NUESTRA_ISR
      42.  00:8A94                      ;;=====================================================	
      43.  00:8A94                      ; función: 	envía datos al PSG + toca un trozo de música + toca trozo de 
      44.  00:8A94                      ; entrada: 	-
      45.  00:8A94                      ; salida: 	-
      46.  00:8A94                      ; toca: 	HL, A
      47.  00:8A94                      subrutina_isr:
      48.  00:8A94  CD FF 8F            	CALL	PT3_ROUT			;envia los datos a los registros del PSG
      49.  00:8A97  CD 07 8F            	CALL	PT3_PLAY			;calcula el siguiente 'trocito' de musica que sera enviado al proxima vez
      50.  00:8A9A  C3 F1 90            	JP		ayFX_PLAY			;calcula el siguiente 'trocito' de efecto especial de sonido que sera enviado la proxima vez
      51.  00:8A9D                      fin_subrutina_isr:
      52.  00:8A9D                      	;RET
      53.  00:8A9D                      
      54.  00:8A9D                      
      55.  00:8A9D                      
      56.  00:8A9D                      ;;=====================================================
      57.  00:8A9D                      ;;DEFINICIÓN DE SUBRUTINAS DE FERNANDO PARA COMPRESIÓN Y SONIDO
      58.  00:8A9D                      ;;=====================================================
      59.  00:8A9D                      subrutinas_sonido:
      60.  00:8A9D                      	include	"PT3-ROM_sjasm.asm"
       1:  00:8A9D                      		; --- PT3 REPLAYER WORKING ON ROM ---
       2:  00:8A9D                      		; --- Can be assembled with asMSX ---
       3:  00:8A9D                      		; --- ROM version: MSX-KUN        ---
       4:  00:8A9D                      		; --- asMSX version 2: SapphiRe   ---
       5:  00:8A9D                      
       6:  00:8A9D                      ; Based on MSX full version of PT3 by Dioniso
       7:  00:8A9D                      ;
       8:  00:8A9D                      ; This version of the replayer can be used with any note table
       9:  00:8A9D                      ; This version also allows the use of PT3 commands
      10:  00:8A9D                      ; First 99 bytes of each PT3 module should be stripped off
      11:  00:8A9D                      ;
      12:  00:8A9D                      ; PLAY and PSG WRITE routines seperated to allow independent calls
      13:  00:8A9D                      ;
      14:  00:8A9D                      ; ROM LENGTH: 1549 bytes
      15:  00:8A9D                      ; RAM LENGTH:  576 bytes
      16:  00:8A9D                      
      17:  00:8A9D                      
      18:  00:8A9D                      
      19:  00:8A9D                      ;SJASM version by BTV 2016
      20:  00:8A9D                      
      21:  00:8A9D                      
      22:  00:8A9D                      		; --- CONSTANT VALUES DEFINITION ---
      23:  00:8A9D                      
      24:  00:8A9D                      ;ChannelsVars
      25:  00:8A9D                      ;struc	CHNPRM
      26:  00:8A9D                      ;reset group
      27:  00:8A9D  (00:0000)           CHNPRM_PsInOr	equ 0	;RESB 1
      28:  00:8A9D  (00:0001)           CHNPRM_PsInSm	equ 1	;RESB 1
      29:  00:8A9D  (00:0002)           CHNPRM_CrAmSl	equ 2	;RESB 1
      30:  00:8A9D  (00:0003)           CHNPRM_CrNsSl	equ 3	;RESB 1
      31:  00:8A9D  (00:0004)           CHNPRM_CrEnSl	equ 4	;RESB 1
      32:  00:8A9D  (00:0005)           CHNPRM_TSlCnt	equ 5	;RESB 1
      33:  00:8A9D  (00:0006)           CHNPRM_CrTnSl	equ 6	;RESW 1
      34:  00:8A9D  (00:0008)           CHNPRM_TnAcc	equ 8	;RESW 1
      35:  00:8A9D  (00:000A)           CHNPRM_COnOff	equ 10	;RESB 1
      36:  00:8A9D                      ;reset group
      37:  00:8A9D                      
      38:  00:8A9D  (00:000B)           CHNPRM_OnOffD	equ 11	;RESB 1
      39:  00:8A9D                      
      40:  00:8A9D                      ;IX for PTDECOD here [+12]
      41:  00:8A9D  (00:000C)           CHNPRM_OffOnD	equ 12	;RESB 1
      42:  00:8A9D  (00:000D)           CHNPRM_OrnPtr	equ 13	;RESW 1
      43:  00:8A9D  (00:000F)           CHNPRM_SamPtr	equ 15	;RESW 1
      44:  00:8A9D  (00:0011)           CHNPRM_NNtSkp	equ 17	;RESB 1
      45:  00:8A9D  (00:0012)           CHNPRM_Note	equ 18	;RESB 1
      46:  00:8A9D  (00:0013)           CHNPRM_SlToNt	equ 19	;RESB 1
      47:  00:8A9D  (00:0014)           CHNPRM_Env_En	equ 20	;RESB 1
      48:  00:8A9D  (00:0015)           CHNPRM_Flags	equ 21	;RESB 1
      49:  00:8A9D                       ;Enabled - 0,SimpleGliss - 2
      50:  00:8A9D  (00:0016)           CHNPRM_TnSlDl	equ 22	;RESB 1
      51:  00:8A9D  (00:0017)           CHNPRM_TSlStp	equ 23	;RESW 1
      52:  00:8A9D  (00:0019)           CHNPRM_TnDelt	equ 25	;RESW 1
      53:  00:8A9D  (00:001B)           CHNPRM_NtSkCn	equ 27	;RESB 1
      54:  00:8A9D  (00:001C)           CHNPRM_Volume	equ 28	;RESB 1
      55:  00:8A9D  (00:001D)           CHNPRM_Size	equ 29	;RESB 1
      56:  00:8A9D                      ;endstruc
      57:  00:8A9D                      
      58:  00:8A9D                      ;struc	AR
      59:  00:8A9D  (00:0000)           AR_TonA		equ 0	;RESW 1
      60:  00:8A9D  (00:0002)           AR_TonB		equ 2	;RESW 1
      61:  00:8A9D  (00:0004)           AR_TonC		equ 4	;RESW 1
      62:  00:8A9D  (00:0006)           AR_Noise	equ 6	;RESB 1
      63:  00:8A9D  (00:0007)           AR_Mixer	equ 7	;RESB 1
      64:  00:8A9D  (00:0008)           AR_AmplA	equ 8	;RESB 1
      65:  00:8A9D  (00:0009)           AR_AmplB	equ 9	;RESB 1
      66:  00:8A9D  (00:000A)           AR_AmplC	equ 10	;RESB 1
      67:  00:8A9D  (00:000B)           AR_Env		equ 11	;RESW 1
      68:  00:8A9D  (00:000D)           AR_EnvTp	equ 13	;RESB 1
      69:  00:8A9D                      ;endstruc
      70:  00:8A9D                      
      71:  00:8A9D                      		; --- CODE STARTS HERE ---
      72:  00:8A9D                      
      73:  00:8A9D  21 00 F0            CHECKLP:	LD	HL,PT3_SETUP
      74:  00:8AA0  CB FE               		SET	7,[HL]
      75:  00:8AA2  CB 46               		BIT	0,[HL]
      76:  00:8AA4  C8                  		RET	Z
      77:  00:8AA5  E1                  		POP	HL
      78:  00:8AA6  21 7A F0            		LD	HL,DelyCnt
      79:  00:8AA9  34                  		INC	[HL]
      80:  00:8AAA  21 3E F0            		LD	HL,ChanA+CHNPRM_NtSkCn
      81:  00:8AAD  34                  		INC	[HL]
      82:  00:8AAE  AF                  PT3_MUTE:	XOR	A
      83:  00:8AAF  67                  		LD	H,A
      84:  00:8AB0  6F                  		LD	L,A
      85:  00:8AB1  32 48 F1            		LD	[AYREGS+AR_AmplA],A
      86:  00:8AB4  22 49 F1            		LD	[AYREGS+AR_AmplB],HL
      87:  00:8AB7  C3 00 90            		JP	ROUT_A0
      88:  00:8ABA                      
      89:  00:8ABA                      PT3_INIT:	;HL - AddressOfModule - 100
      90:  00:8ABA  22 01 F0            		LD [PT3_MODADDR],HL
      91:  00:8ABD  E5                  		PUSH HL
      92:  00:8ABE  11 64 00            		LD DE,100
      93:  00:8AC1  19                  		ADD HL,DE
      94:  00:8AC2  7E                  		LD A,[HL]
      95:  00:8AC3  32 1C F0            		LD [PT3_Delay],A
      96:  00:8AC6  E5                  		PUSH HL
      97:  00:8AC7  DD E1               		POP IX
      98:  00:8AC9  19                  		ADD HL,DE
      99:  00:8ACA  22 03 F0            		LD [PT3_CrPsPtr],HL
     100:  00:8ACD  DD 5E 02            		LD E,[IX+102-100]
     101:  00:8AD0  19                  		ADD HL,DE
     102:  00:8AD1  23                  		INC HL
     103:  00:8AD2  22 18 F0            		LD [PT3_LPosPtr],HL
     104:  00:8AD5  D1                  		POP DE
     105:  00:8AD6  DD 6E 03            		LD L,[IX+103-100]
     106:  00:8AD9  DD 66 04            		LD H,[IX+104-100]
     107:  00:8ADC  19                  		ADD HL,DE
     108:  00:8ADD  22 1A F0            		LD [PT3_PatsPtr],HL
     109:  00:8AE0  21 A9 00            		LD HL,169
     110:  00:8AE3  19                  		ADD HL,DE
     111:  00:8AE4  22 07 F0            		LD [PT3_OrnPtrs],HL
     112:  00:8AE7  21 69 00            		LD HL,105
     113:  00:8AEA  19                  		ADD HL,DE
     114:  00:8AEB  22 05 F0            		LD [PT3_SAMPTRS],HL
     115:  00:8AEE  21 00 F0            		LD HL,PT3_SETUP
     116:  00:8AF1  CB BE               		RES 7,[HL]
     117:  00:8AF3                      
     118:  00:8AF3                      		; --- note table data depacker ---
     119:  00:8AF3                      		; Depacks first 12 tones of each tone table
     120:  00:8AF3                      
     121:  00:8AF3  11 74 90            		LD DE,T_PACK
     122:  00:8AF6  01 B1 F1            		LD BC,T1_+(2*49)-1
     123:  00:8AF9  1A                  .TP_0:		LD A,[DE]
     124:  00:8AFA  13                  		INC DE
     125:  00:8AFB  FE 1E               		CP 15*2
     126:  00:8AFD  30 06               		JR NC,.TP_1
     127:  00:8AFF  67                  		LD H,A
     128:  00:8B00  1A                  		LD A,[DE]
     129:  00:8B01  6F                  		LD L,A
     130:  00:8B02  13                  		INC DE
     131:  00:8B03  18 07               		JR .TP_2
     132:  00:8B05  D5                  .TP_1:		PUSH DE
     133:  00:8B06  16 00               		LD D,0
     134:  00:8B08  5F                  		LD E,A
     135:  00:8B09  19                  		ADD HL,DE
     136:  00:8B0A  19                  		ADD HL,DE
     137:  00:8B0B  D1                  		POP DE
     138:  00:8B0C  7C                  .TP_2:		LD A,H
     139:  00:8B0D  02                  		LD [BC],A
     140:  00:8B0E  0B                  		DEC BC
     141:  00:8B0F  7D                  		LD A,L
     142:  00:8B10  02                  		LD [BC],A
     143:  00:8B11  0B                  		DEC BC
     144:  00:8B12  D6 F0               		SUB $F0
     145:  00:8B14  20 E3               		JR NZ,.TP_0
     146:  00:8B16                      
     147:  00:8B16                      		; --- INITIALIZE PT3 VARIABLES ---
     148:  00:8B16  21 23 F0            		LD HL,VARS
     149:  00:8B19  77                  		LD [HL],A
     150:  00:8B1A  11 24 F0            		LD DE,VARS+1
     151:  00:8B1D  01 2C 01            		LD BC,VAR0END-VARS-1
     152:  00:8B20  ED B0               		LDIR
     153:  00:8B22                      
     154:  00:8B22  3C                  		INC A
     155:  00:8B23  32 7A F0            		LD [DelyCnt],A
     156:  00:8B26  21 01 F0            		LD HL,$F001 ;H - CHNPRM_Volume, L - CHNPRM_NtSkCn
     157:  00:8B29  22 3E F0            		LD [ChanA+CHNPRM_NtSkCn],HL
     158:  00:8B2C  22 5B F0            		LD [ChanB+CHNPRM_NtSkCn],HL
     159:  00:8B2F  22 78 F0            		LD [ChanC+CHNPRM_NtSkCn],HL
     160:  00:8B32                      
     161:  00:8B32  21 70 90            		LD HL,EMPTYSAMORN
     162:  00:8B35  22 12 F0            		LD [PT3_AdInPtA],HL ;ptr to zero
     163:  00:8B38  22 30 F0            		LD [ChanA+CHNPRM_OrnPtr],HL ;ornament 0 is "0,1,0"
     164:  00:8B3B  22 4D F0            		LD [ChanB+CHNPRM_OrnPtr],HL ;in all versions from
     165:  00:8B3E  22 6A F0            		LD [ChanC+CHNPRM_OrnPtr],HL ;3.xx to 3.6x and VTII
     166:  00:8B41                      
     167:  00:8B41  22 32 F0            		LD [ChanA+CHNPRM_SamPtr],HL ;S1 There is no default
     168:  00:8B44  22 4F F0            		LD [ChanB+CHNPRM_SamPtr],HL ;S2 sample in PT3, so, you
     169:  00:8B47  22 6C F0            		LD [ChanC+CHNPRM_SamPtr],HL ;S3 can comment S1,2,3; see
     170:  00:8B4A                      					    ;also EMPTYSAMORN comment
     171:  00:8B4A                      
     172:  00:8B4A                      		; --- NOTE TABLE CREATOR (c) Ivan Roshin, adapted by SapphiRe ---
     173:  00:8B4A  DD 7E FF            		LD A,[IX+99-100] ;TONE TABLE NUMBER
     174:  00:8B4D  17                  		RLA
     175:  00:8B4E  E6 07               		AND 7
     176:  00:8B50  21 20 90            		LD HL,NT_DATA
     177:  00:8B53  D5                  		PUSH DE
     178:  00:8B54  50                  		LD D,B		; ld d,0 (bc is 0000 after LDIR)
     179:  00:8B55  87                  		ADD A,A
     180:  00:8B56  5F                  		LD E,A
     181:  00:8B57  19                  		ADD HL,DE	; hl -> init of correct note table data
     182:  00:8B58  5E                  		LD E,[HL]
     183:  00:8B59  23                  		INC HL
     184:  00:8B5A  CB 3B               		SRL E
     185:  00:8B5C  9F                  		SBC A,A
     186:  00:8B5D  E6 A7               		AND $A7			;$00 (NOP) or $A7 (AND A)
     187:  00:8B5F  32 21 F0            		LD [PT3_NTL3],A		; CORRECT INSTRUCTION, DEPENDS OF SELECTED TABLE
     188:  00:8B62  3E C9               		LD A,$C9		; RET CODE
     189:  00:8B64  32 22 F0            		LD [PT3_NTL3+1],A	; RET PLACED
     190:  00:8B67  EB                  		EX DE,HL
     191:  00:8B68  C1                  		POP BC ;BC=T1_
     192:  00:8B69  09                  		ADD HL,BC
     193:  00:8B6A                      
     194:  00:8B6A  1A                  		LD A,[DE]                           
     195:  00:8B6B                      
     196:  00:8B6B  01 30 90            		LD BC,T_
     197:  00:8B6E  81                  		ADD A,C
     198:  00:8B6F  4F                  		LD C,A
     199:  00:8B70  88                  		ADC A,B
     200:  00:8B71                      
     201:  00:8B71  91                  		SUB C
     202:  00:8B72  47                  		LD B,A
     203:  00:8B73  C5                  		PUSH BC
     204:  00:8B74  11 80 F0            		LD DE,NT_
     205:  00:8B77  D5                  		PUSH DE
     206:  00:8B78                      
     207:  00:8B78  06 0C               		LD B,12
     208:  00:8B7A  C5                  .L1:		PUSH BC
     209:  00:8B7B  4E                  		LD C,[HL]
     210:  00:8B7C  23                  		INC HL
     211:  00:8B7D  E5                  		PUSH HL
     212:  00:8B7E  46                  		LD B,[HL]
     213:  00:8B7F                      
     214:  00:8B7F  D5                  		PUSH DE
     215:  00:8B80  EB                  		EX DE,HL
     216:  00:8B81  11 17 00            		LD DE,23
     217:  00:8B84  DD 26 08            		db $DD,$26,$08	;LD XH,8
     218:  00:8B87                      
     219:  00:8B87  CB 38               .L2:		SRL B
     220:  00:8B89  CB 19               		RR C
     221:  00:8B8B  CD 21 F0            .L3:		CALL PT3_NTL3	;AND A or NOP
     222:  00:8B8E  79                  		LD A,C
     223:  00:8B8F  8A                  		ADC A,D	;=ADC 0
     224:  00:8B90  77                  		LD [HL],A
     225:  00:8B91  23                  		INC HL
     226:  00:8B92  78                  		LD A,B
     227:  00:8B93  8A                  		ADC A,D
     228:  00:8B94  77                  		LD [HL],A
     229:  00:8B95  19                  		ADD HL,DE
     230:  00:8B96  DD 25               		db $DD,$25	;DEC XH
     231:  00:8B98  20 ED               		JR NZ,.L2
     232:  00:8B9A                      
     233:  00:8B9A  D1                  		POP DE
     234:  00:8B9B  13                  		INC DE
     235:  00:8B9C  13                  		INC DE
     236:  00:8B9D  E1                  		POP HL
     237:  00:8B9E  23                  		INC HL
     238:  00:8B9F  C1                  		POP BC
     239:  00:8BA0  10 D8               		DJNZ .L1
     240:  00:8BA2                      
     241:  00:8BA2  E1                  		POP HL
     242:  00:8BA3  D1                  		POP DE
     243:  00:8BA4                      
     244:  00:8BA4  7B                  		LD A,E
     245:  00:8BA5  D5                  		PUSH DE
     246:  00:8BA6  11 3C 90            		LD DE,TCOLD_1
     247:  00:8BA9  BB                  		CP E
     248:  00:8BAA  D1                  		POP DE
     249:  00:8BAB  20 05               		JR NZ,.CORR_1
     250:  00:8BAD  3E FD               		LD A,$FD
     251:  00:8BAF  32 AE F0            		LD [NT_+$2E],A
     252:  00:8BB2                      
     253:  00:8BB2  1A                  .CORR_1:	LD A,[DE]
     254:  00:8BB3  A7                  		AND A
     255:  00:8BB4  28 11               		JR Z,.TC_EXIT
     256:  00:8BB6  1F                  		RRA
     257:  00:8BB7  F5                  		PUSH AF
     258:  00:8BB8  87                  		ADD A,A
     259:  00:8BB9  4F                  		LD C,A
     260:  00:8BBA  09                  		ADD HL,BC
     261:  00:8BBB  F1                  		POP AF
     262:  00:8BBC  30 02               		JR NC,.CORR_2
     263:  00:8BBE  35                  		DEC [HL]
     264:  00:8BBF  35                  		DEC [HL]
     265:  00:8BC0  34                  .CORR_2:	INC [HL]
     266:  00:8BC1  A7                  		AND A
     267:  00:8BC2  ED 42               		SBC HL,BC
     268:  00:8BC4  13                  		INC DE
     269:  00:8BC5  18 EB               		JR .CORR_1
     270:  00:8BC7                      
     271:  00:8BC7                      .TC_EXIT:	;POP AF
     272:  00:8BC7                      
     273:  00:8BC7                      		; --- CREATE PT3 VOLUME TABLE (c) Ivan Roshin, adapted by SapphiRe ---
     274:  00:8BC7  21 11 00            		ld	hl,$11
     275:  00:8BCA  54                  		ld	d,h
     276:  00:8BCB  5C                  		ld	e,h
     277:  00:8BCC  DD 21 50 F1         		ld	IX,VT_+16
     278:  00:8BD0  06 0F               		ld	b,15
     279:  00:8BD2  E5                  .INITV1:	push	hl
     280:  00:8BD3  19                  		add	hl,de
     281:  00:8BD4  EB                  		ex	de,hl
     282:  00:8BD5  ED 62               		sbc	hl,hl
     283:  00:8BD7  48                  		ld	c,b
     284:  00:8BD8  06 10               		ld	b,16
     285:  00:8BDA  7D                  .INITV2:	ld	a,l
     286:  00:8BDB  17                  		rla
     287:  00:8BDC  7C                  		ld	a,h
     288:  00:8BDD  CE 00               		adc	a,0
     289:  00:8BDF  DD 77 00            		ld	[ix],a
     290:  00:8BE2  DD 23               		inc	ix
     291:  00:8BE4  19                  		add	hl,de
     292:  00:8BE5  10 F3               		djnz	.INITV2
     293:  00:8BE7  E1                  		pop	hl
     294:  00:8BE8  7B                  		ld	a,e
     295:  00:8BE9  FE 77               		cp	$77
     296:  00:8BEB  20 01               		jr	nz,.INITV3
     297:  00:8BED  1C                  		inc	e
     298:  00:8BEE  41                  .INITV3:	ld	b,c
     299:  00:8BEF  10 E1               		djnz	.INITV1
     300:  00:8BF1                      
     301:  00:8BF1  C9                  		RET
     302:  00:8BF2                      
     303:  00:8BF2                      		;pattern decoder
     304:  00:8BF2  DD 36 08 00         PD_OrSm:	LD [IX+(CHNPRM_Env_En-12)],0
     305:  00:8BF6  CD 7C 8D            		CALL SETORN
     306:  00:8BF9  0A                  		LD A,[BC]
     307:  00:8BFA  03                  		INC BC
     308:  00:8BFB  0F                  		RRCA
     309:  00:8BFC                      
     310:  00:8BFC  87                  PD_SAM:		ADD A,A
     311:  00:8BFD  5F                  PD_SAM_:	LD E,A
     312:  00:8BFE  16 00               		LD D,0
     313:  00:8C00  2A 05 F0            		LD HL,[PT3_SAMPTRS]
     314:  00:8C03  19                  		ADD HL,DE
     315:  00:8C04  5E                  		LD E,[HL]
     316:  00:8C05  23                  		INC HL
     317:  00:8C06  56                  		LD D,[HL]
     318:  00:8C07  2A 01 F0            		LD HL,[PT3_MODADDR]
     319:  00:8C0A  19                  		ADD HL,DE
     320:  00:8C0B  DD 75 03            		LD [IX+(CHNPRM_SamPtr-12)],L
     321:  00:8C0E  DD 74 04            		LD [IX+(CHNPRM_SamPtr+1-12)],H
     322:  00:8C11  18 41               		JR PD_LOOP
     323:  00:8C13                      
     324:  00:8C13  07                  PD_VOL:		RLCA
     325:  00:8C14  07                  		RLCA
     326:  00:8C15  07                  		RLCA
     327:  00:8C16  07                  		RLCA
     328:  00:8C17  DD 77 10            		LD [IX+(CHNPRM_Volume-12)],A
     329:  00:8C1A  18 3B               		JR PD_LP2
     330:  00:8C1C                      	
     331:  00:8C1C  DD 77 08            PD_EOff:	LD [IX+(CHNPRM_Env_En-12)],A
     332:  00:8C1F  DD 77 F4            		LD [IX+(CHNPRM_PsInOr-12)],A
     333:  00:8C22  18 33               		JR PD_LP2
     334:  00:8C24                      
     335:  00:8C24  3D                  PD_SorE:	DEC A
     336:  00:8C25  20 07               		JR NZ,PD_ENV
     337:  00:8C27  0A                  		LD A,[BC]
     338:  00:8C28  03                  		INC BC
     339:  00:8C29  DD 77 05            		LD [IX+(CHNPRM_NNtSkp-12)],A
     340:  00:8C2C  18 29               		JR PD_LP2
     341:  00:8C2E                      
     342:  00:8C2E  CD 60 8D            PD_ENV:		CALL SETENV
     343:  00:8C31  18 24               		JR PD_LP2
     344:  00:8C33                      
     345:  00:8C33  CD 7C 8D            PD_ORN:		CALL SETORN
     346:  00:8C36  18 1C               		JR PD_LOOP
     347:  00:8C38                             
     348:  00:8C38  DD 77 08            PD_ESAM:	LD [IX+(CHNPRM_Env_En-12)],A
     349:  00:8C3B  DD 77 F4            		LD [IX+(CHNPRM_PsInOr-12)],A
     350:  00:8C3E  C4 60 8D            		CALL NZ,SETENV
     351:  00:8C41  0A                  		LD A,[BC]
     352:  00:8C42  03                  		INC BC
     353:  00:8C43  18 B8               		JR PD_SAM_
     354:  00:8C45                      
     355:  00:8C45  DD 7E 06            PTDECOD:	LD A,[IX+(CHNPRM_Note-12)]
     356:  00:8C48  32 0F F0            		LD [PT3_PrNote],A
     357:  00:8C4B  DD 6E FA            		LD L,[IX+(CHNPRM_CrTnSl-12)]
     358:  00:8C4E  DD 66 FB            		LD H,[IX+(CHNPRM_CrTnSl+1-12)]
     359:  00:8C51  22 10 F0            		LD [PT3_PrSlide],HL
     360:  00:8C54                      
     361:  00:8C54  11 10 20            PD_LOOP:	LD DE,$2010
     362:  00:8C57  0A                  PD_LP2:		LD A,[BC]
     363:  00:8C58  03                  		INC BC
     364:  00:8C59  83                  		ADD A,E
     365:  00:8C5A  38 96               		JR C,PD_OrSm
     366:  00:8C5C  82                  		ADD A,D
     367:  00:8C5D  28 4A               		JR Z,PD_FIN
     368:  00:8C5F  38 9B               		JR C,PD_SAM
     369:  00:8C61  83                  		ADD A,E
     370:  00:8C62  28 25               		JR Z,PD_REL
     371:  00:8C64  38 AD               		JR C,PD_VOL
     372:  00:8C66  83                  		ADD A,E
     373:  00:8C67  28 B3               		JR Z,PD_EOff
     374:  00:8C69  38 B9               		JR C,PD_SorE
     375:  00:8C6B  C6 60               		ADD A,96
     376:  00:8C6D  38 20               		JR C,PD_NOTE
     377:  00:8C6F  83                  		ADD A,E
     378:  00:8C70  38 C1               		JR C,PD_ORN
     379:  00:8C72  82                  		ADD A,D
     380:  00:8C73  38 0F               		JR C,PD_NOIS
     381:  00:8C75  83                  		ADD A,E
     382:  00:8C76  38 C0               		JR C,PD_ESAM
     383:  00:8C78  87                  		ADD A,A
     384:  00:8C79  5F                  		LD E,A
     385:  00:8C7A  21 B5 6C            		LD HL,(SPCCOMS+$DF20) % 65536	; Adapted from original Speccy version (saves 6 bytes)
     386:  00:8C7D  19                  		ADD HL,DE
     387:  00:8C7E  5E                  		LD E,[HL]
     388:  00:8C7F  23                  		INC HL
     389:  00:8C80  56                  		LD D,[HL]
     390:  00:8C81  D5                  		PUSH DE
     391:  00:8C82  18 D0               		JR PD_LOOP
     392:  00:8C84                      
     393:  00:8C84  32 7E F0            PD_NOIS:	LD [Ns_Base],A
     394:  00:8C87  18 CE               		JR PD_LP2
     395:  00:8C89                      
     396:  00:8C89  DD CB 09 86         PD_REL:		RES 0,[IX+(CHNPRM_Flags-12)]
     397:  00:8C8D  18 08               		JR PD_RES
     398:  00:8C8F                      	
     399:  00:8C8F  DD 77 06            PD_NOTE:	LD [IX+(CHNPRM_Note-12)],A
     400:  00:8C92  DD CB 09 C6         		SET 0,[IX+(CHNPRM_Flags-12)]
     401:  00:8C96  AF                  		XOR A
     402:  00:8C97                      
     403:  00:8C97  ED 73 09 F0         PD_RES:		LD [PT3_PDSP],SP
     404:  00:8C9B  DD F9               		LD SP,IX
     405:  00:8C9D  67                  		LD H,A
     406:  00:8C9E  6F                  		LD L,A
     407:  00:8C9F  E5                  		PUSH HL
     408:  00:8CA0  E5                  		PUSH HL
     409:  00:8CA1  E5                  		PUSH HL
     410:  00:8CA2  E5                  		PUSH HL
     411:  00:8CA3  E5                  		PUSH HL
     412:  00:8CA4  E5                  		PUSH HL
     413:  00:8CA5  ED 7B 09 F0         		LD SP,[PT3_PDSP]
     414:  00:8CA9                      
     415:  00:8CA9  DD 7E 05            PD_FIN:		LD A,[IX+(CHNPRM_NNtSkp-12)]
     416:  00:8CAC  DD 77 0F            		LD [IX+(CHNPRM_NtSkCn-12)],A
     417:  00:8CAF  C9                  		RET
     418:  00:8CB0                      
     419:  00:8CB0  DD CB 09 96         C_PORTM:	RES 2,[IX+(CHNPRM_Flags-12)]
     420:  00:8CB4  0A                  		LD A,[BC]
     421:  00:8CB5  03                  		INC BC
     422:  00:8CB6                      		;SKIP PRECALCULATED TONE DELTA [BECAUSE
     423:  00:8CB6                      		;CANNOT BE RIGHT AFTER PT3 COMPILATION]
     424:  00:8CB6  03                  		INC BC
     425:  00:8CB7  03                  		INC BC
     426:  00:8CB8  DD 77 0A            		LD [IX+(CHNPRM_TnSlDl-12)],A
     427:  00:8CBB  DD 77 F9            		LD [IX+(CHNPRM_TSlCnt-12)],A
     428:  00:8CBE  11 80 F0            		LD DE,NT_
     429:  00:8CC1  DD 7E 06            		LD A,[IX+(CHNPRM_Note-12)]
     430:  00:8CC4  DD 77 07            		LD [IX+(CHNPRM_SlToNt-12)],A
     431:  00:8CC7  87                  		ADD A,A
     432:  00:8CC8  6F                  		LD L,A
     433:  00:8CC9  26 00               		LD H,0
     434:  00:8CCB  19                  		ADD HL,DE
     435:  00:8CCC  7E                  		LD A,[HL]
     436:  00:8CCD  23                  		INC HL
     437:  00:8CCE  66                  		LD H,[HL]
     438:  00:8CCF  6F                  		LD L,A
     439:  00:8CD0  E5                  		PUSH HL
     440:  00:8CD1  3A 0F F0            		LD A,[PT3_PrNote]
     441:  00:8CD4  DD 77 06            		LD [IX+(CHNPRM_Note-12)],A
     442:  00:8CD7  87                  		ADD A,A
     443:  00:8CD8  6F                  		LD L,A
     444:  00:8CD9  26 00               		LD H,0
     445:  00:8CDB  19                  		ADD HL,DE
     446:  00:8CDC  5E                  		LD E,[HL]
     447:  00:8CDD  23                  		INC HL
     448:  00:8CDE  56                  		LD D,[HL]
     449:  00:8CDF  E1                  		POP HL
     450:  00:8CE0  ED 52               		SBC HL,DE
     451:  00:8CE2  DD 75 0D            		LD [IX+(CHNPRM_TnDelt-12)],L
     452:  00:8CE5  DD 74 0E            		LD [IX+(CHNPRM_TnDelt+1-12)],H
     453:  00:8CE8  ED 5B 10 F0         		LD DE,[PT3_PrSlide]
     454:  00:8CEC  DD 73 FA            		LD [IX+(CHNPRM_CrTnSl-12)],E
     455:  00:8CEF  DD 72 FB            		LD [IX+(CHNPRM_CrTnSl+1-12)],D
     456:  00:8CF2  0A                  		LD A,[BC] ;SIGNED TONE STEP
     457:  00:8CF3  03                  		INC BC
     458:  00:8CF4  08                  		EX AF,AF'
     459:  00:8CF5  0A                  		LD A,[BC]
     460:  00:8CF6  03                  		INC BC
     461:  00:8CF7  A7                  		AND A
     462:  00:8CF8  28 01               		JR Z,.NOSIG
     463:  00:8CFA  EB                  		EX DE,HL
     464:  00:8CFB  ED 52               .NOSIG:	SBC HL,DE
     465:  00:8CFD  F2 05 8D            		JP P,SET_STP
     466:  00:8D00  2F                  		CPL
     467:  00:8D01  08                  		EX AF,AF'
     468:  00:8D02  ED 44               		NEG
     469:  00:8D04  08                  		EX AF,AF'
     470:  00:8D05  DD 77 0C            SET_STP:	LD [IX+(CHNPRM_TSlStp+1-12)],A
     471:  00:8D08  08                  		EX AF,AF'
     472:  00:8D09  DD 77 0B            		LD [IX+(CHNPRM_TSlStp-12)],A
     473:  00:8D0C  DD 36 FE 00         		LD [IX+(CHNPRM_COnOff-12)],0
     474:  00:8D10  C9                  		RET
     475:  00:8D11                      
     476:  00:8D11  DD CB 09 D6         C_GLISS:	SET 2,[IX+(CHNPRM_Flags-12)]
     477:  00:8D15  0A                  		LD A,[BC]
     478:  00:8D16  03                  		INC BC
     479:  00:8D17  DD 77 0A            		LD [IX+(CHNPRM_TnSlDl-12)],A
     480:  00:8D1A  DD 77 F9            		LD [IX+(CHNPRM_TSlCnt-12)],A
     481:  00:8D1D  0A                  		LD A,[BC]
     482:  00:8D1E  03                  		INC BC
     483:  00:8D1F  08                  		EX AF,AF'
     484:  00:8D20  0A                  		LD A,[BC]
     485:  00:8D21  03                  		INC BC
     486:  00:8D22  18 E1               		JR SET_STP
     487:  00:8D24                      
     488:  00:8D24  0A                  C_SMPOS:	LD A,[BC]
     489:  00:8D25  03                  		INC BC
     490:  00:8D26  DD 77 F5            		LD [IX+(CHNPRM_PsInSm-12)],A
     491:  00:8D29  C9                  		RET
     492:  00:8D2A                      
     493:  00:8D2A  0A                  C_ORPOS:	LD A,[BC]
     494:  00:8D2B  03                  		INC BC
     495:  00:8D2C  DD 77 F4            		LD [IX+(CHNPRM_PsInOr-12)],A
     496:  00:8D2F  C9                  		RET
     497:  00:8D30                      
     498:  00:8D30  0A                  C_VIBRT:	LD A,[BC]
     499:  00:8D31  03                  		INC BC
     500:  00:8D32  DD 77 FF            		LD [IX+(CHNPRM_OnOffD-12)],A
     501:  00:8D35  DD 77 FE            		LD [IX+(CHNPRM_COnOff-12)],A
     502:  00:8D38  0A                  		LD A,[BC]
     503:  00:8D39  03                  		INC BC
     504:  00:8D3A  DD 77 00            		LD [IX+(CHNPRM_OffOnD-12)],A
     505:  00:8D3D  AF                  		XOR A
     506:  00:8D3E  DD 77 F9            		LD [IX+(CHNPRM_TSlCnt-12)],A
     507:  00:8D41  DD 77 FA            		LD [IX+(CHNPRM_CrTnSl-12)],A
     508:  00:8D44  DD 77 FB            		LD [IX+(CHNPRM_CrTnSl+1-12)],A
     509:  00:8D47  C9                  		RET
     510:  00:8D48                      
     511:  00:8D48  0A                  C_ENGLS:	LD A,[BC]
     512:  00:8D49  03                  		INC BC
     513:  00:8D4A  32 1E F0            		LD [PT3_Env_Del],A
     514:  00:8D4D  32 7D F0            		LD [CurEDel],A
     515:  00:8D50  0A                  		LD A,[BC]
     516:  00:8D51  03                  		INC BC
     517:  00:8D52  6F                  		LD L,A
     518:  00:8D53  0A                  		LD A,[BC]
     519:  00:8D54  03                  		INC BC
     520:  00:8D55  67                  		LD H,A
     521:  00:8D56  22 1F F0            		LD [PT3_ESldAdd],HL
     522:  00:8D59  C9                  		RET
     523:  00:8D5A                      
     524:  00:8D5A  0A                  C_DELAY:	LD A,[BC]
     525:  00:8D5B  03                  		INC BC
     526:  00:8D5C  32 1C F0            		LD [PT3_Delay],A
     527:  00:8D5F  C9                  		RET
     528:  00:8D60                      	
     529:  00:8D60  DD 73 08            SETENV:		LD [IX+(CHNPRM_Env_En-12)],E
     530:  00:8D63  32 4D F1            		LD [AYREGS+AR_EnvTp],A
     531:  00:8D66  0A                  		LD A,[BC]
     532:  00:8D67  03                  		INC BC
     533:  00:8D68  67                  		LD H,A
     534:  00:8D69  0A                  		LD A,[BC]
     535:  00:8D6A  03                  		INC BC
     536:  00:8D6B  6F                  		LD L,A
     537:  00:8D6C  22 4E F1            		LD [EnvBase],HL
     538:  00:8D6F  AF                  		XOR A
     539:  00:8D70  DD 77 F4            		LD [IX+(CHNPRM_PsInOr-12)],A
     540:  00:8D73  32 7D F0            		LD [CurEDel],A
     541:  00:8D76  67                  		LD H,A
     542:  00:8D77  6F                  		LD L,A
     543:  00:8D78  22 7B F0            		LD [CurESld],HL
     544:  00:8D7B  C9                  C_NOP:		RET
     545:  00:8D7C                      
     546:  00:8D7C  87                  SETORN:		ADD A,A
     547:  00:8D7D  5F                  		LD E,A
     548:  00:8D7E  16 00               		LD D,0
     549:  00:8D80  DD 72 F4            		LD [IX+(CHNPRM_PsInOr-12)],D
     550:  00:8D83  2A 07 F0            		LD HL,[PT3_OrnPtrs]
     551:  00:8D86  19                  		ADD HL,DE
     552:  00:8D87  5E                  		LD E,[HL]
     553:  00:8D88  23                  		INC HL
     554:  00:8D89  56                  		LD D,[HL]
     555:  00:8D8A  2A 01 F0            		LD HL,[PT3_MODADDR]
     556:  00:8D8D  19                  		ADD HL,DE
     557:  00:8D8E  DD 75 01            		LD [IX+(CHNPRM_OrnPtr-12)],L
     558:  00:8D91  DD 74 02            		LD [IX+(CHNPRM_OrnPtr+1-12)],H
     559:  00:8D94  C9                  		RET
     560:  00:8D95                      
     561:  00:8D95                      		;ALL 16 ADDRESSES TO PROTECT FROM BROKEN PT3 MODULES
     562:  00:8D95  7B 8D               SPCCOMS:	dw C_NOP
     563:  00:8D97  11 8D               		dw C_GLISS
     564:  00:8D99  B0 8C               		dw C_PORTM
     565:  00:8D9B  24 8D               		dw C_SMPOS
     566:  00:8D9D  2A 8D               		dw C_ORPOS
     567:  00:8D9F  30 8D               		dw C_VIBRT
     568:  00:8DA1  7B 8D               		dw C_NOP
     569:  00:8DA3  7B 8D               		dw C_NOP
     570:  00:8DA5  48 8D               		dw C_ENGLS
     571:  00:8DA7  5A 8D               		dw C_DELAY
     572:  00:8DA9  7B 8D               		dw C_NOP
     573:  00:8DAB  7B 8D               		dw C_NOP
     574:  00:8DAD  7B 8D               		dw C_NOP
     575:  00:8DAF  7B 8D               		dw C_NOP
     576:  00:8DB1  7B 8D               		dw C_NOP
     577:  00:8DB3  7B 8D               		dw C_NOP
     578:  00:8DB5                      
     579:  00:8DB5  AF                  CHREGS:		XOR A
     580:  00:8DB6  32 4A F1            		LD [AYREGS+AR_AmplC],A
     581:  00:8DB9  DD CB 15 46         		BIT 0,[IX+CHNPRM_Flags]
     582:  00:8DBD  E5                  		PUSH HL
     583:  00:8DBE  CA E4 8E            		JP Z,.CH_EXIT
     584:  00:8DC1  ED 73 0B F0         		LD [PT3_CSP],SP
     585:  00:8DC5  DD 6E 0D            		LD L,[IX+CHNPRM_OrnPtr]
     586:  00:8DC8  DD 66 0E            		LD H,[IX+CHNPRM_OrnPtr+1]
     587:  00:8DCB  F9                  		LD SP,HL
     588:  00:8DCC  D1                  		POP DE
     589:  00:8DCD  67                  		LD H,A
     590:  00:8DCE  DD 7E 00            		LD A,[IX+CHNPRM_PsInOr]
     591:  00:8DD1  6F                  		LD L,A
     592:  00:8DD2  39                  		ADD HL,SP
     593:  00:8DD3  3C                  		INC A
     594:  00:8DD4  BA                  		CP D
     595:  00:8DD5  38 01               		JR C,.CH_ORPS
     596:  00:8DD7  7B                  		LD A,E
     597:  00:8DD8  DD 77 00            .CH_ORPS:	LD [IX+CHNPRM_PsInOr],A
     598:  00:8DDB  DD 7E 12            		LD A,[IX+CHNPRM_Note]
     599:  00:8DDE  86                  		ADD A,[HL]
     600:  00:8DDF  F2 E3 8D            		JP P,.CH_NTP
     601:  00:8DE2  AF                  		XOR A
     602:  00:8DE3  FE 60               .CH_NTP:	CP 96
     603:  00:8DE5  38 02               		JR C,.CH_NOK
     604:  00:8DE7  3E 5F               		LD A,95
     605:  00:8DE9  87                  .CH_NOK:	ADD A,A
     606:  00:8DEA  08                  		EX AF,AF'
     607:  00:8DEB  DD 6E 0F            		LD L,[IX+CHNPRM_SamPtr]
     608:  00:8DEE  DD 66 10            		LD H,[IX+CHNPRM_SamPtr+1]
     609:  00:8DF1  F9                  		LD SP,HL
     610:  00:8DF2  D1                  		POP DE
     611:  00:8DF3  26 00               		LD H,0
     612:  00:8DF5  DD 7E 01            		LD A,[IX+CHNPRM_PsInSm]
     613:  00:8DF8  47                  		LD B,A
     614:  00:8DF9  87                  		ADD A,A
     615:  00:8DFA  87                  		ADD A,A
     616:  00:8DFB  6F                  		LD L,A
     617:  00:8DFC  39                  		ADD HL,SP
     618:  00:8DFD  F9                  		LD SP,HL
     619:  00:8DFE  78                  		LD A,B
     620:  00:8DFF  3C                  		INC A
     621:  00:8E00  BA                  		CP D
     622:  00:8E01  38 01               		JR C,.CH_SMPS
     623:  00:8E03  7B                  		LD A,E
     624:  00:8E04  DD 77 01            .CH_SMPS:	LD [IX+CHNPRM_PsInSm],A
     625:  00:8E07  C1                  		POP BC
     626:  00:8E08  E1                  		POP HL
     627:  00:8E09  DD 5E 08            		LD E,[IX+CHNPRM_TnAcc]
     628:  00:8E0C  DD 56 09            		LD D,[IX+CHNPRM_TnAcc+1]
     629:  00:8E0F  19                  		ADD HL,DE
     630:  00:8E10  CB 70               		BIT 6,B
     631:  00:8E12  28 06               		JR Z,.CH_NOAC
     632:  00:8E14  DD 75 08            		LD [IX+CHNPRM_TnAcc],L
     633:  00:8E17  DD 74 09            		LD [IX+CHNPRM_TnAcc+1],H
     634:  00:8E1A  EB                  .CH_NOAC:	EX DE,HL
     635:  00:8E1B  08                  		EX AF,AF'
     636:  00:8E1C  6F                  		LD L,A
     637:  00:8E1D  26 00               		LD H,0
     638:  00:8E1F  31 80 F0            		LD SP,NT_
     639:  00:8E22  39                  		ADD HL,SP
     640:  00:8E23  F9                  		LD SP,HL
     641:  00:8E24  E1                  		POP HL
     642:  00:8E25  19                  		ADD HL,DE
     643:  00:8E26  DD 5E 06            		LD E,[IX+CHNPRM_CrTnSl]
     644:  00:8E29  DD 56 07            		LD D,[IX+CHNPRM_CrTnSl+1]
     645:  00:8E2C  19                  		ADD HL,DE
     646:  00:8E2D  ED 7B 0B F0         		LD SP,[PT3_CSP]
     647:  00:8E31  E3                  		EX [SP],HL
     648:  00:8E32  AF                  		XOR A
     649:  00:8E33  DD B6 05            		OR [IX+CHNPRM_TSlCnt]
     650:  00:8E36  28 3E               		JR Z,.CH_AMP
     651:  00:8E38  DD 35 05            		DEC [IX+CHNPRM_TSlCnt]
     652:  00:8E3B  20 39               		JR NZ,.CH_AMP
     653:  00:8E3D  DD 7E 16            		LD A,[IX+CHNPRM_TnSlDl]
     654:  00:8E40  DD 77 05            		LD [IX+CHNPRM_TSlCnt],A
     655:  00:8E43  DD 6E 17            		LD L,[IX+CHNPRM_TSlStp]
     656:  00:8E46  DD 66 18            		LD H,[IX+CHNPRM_TSlStp+1]
     657:  00:8E49  7C                  		LD A,H
     658:  00:8E4A  19                  		ADD HL,DE
     659:  00:8E4B  DD 75 06            		LD [IX+CHNPRM_CrTnSl],L
     660:  00:8E4E  DD 74 07            		LD [IX+CHNPRM_CrTnSl+1],H
     661:  00:8E51  DD CB 15 56         		BIT 2,[IX+CHNPRM_Flags]
     662:  00:8E55  20 1F               		JR NZ,.CH_AMP
     663:  00:8E57  DD 5E 19            		LD E,[IX+CHNPRM_TnDelt]
     664:  00:8E5A  DD 56 1A            		LD D,[IX+CHNPRM_TnDelt+1]
     665:  00:8E5D  A7                  		AND A
     666:  00:8E5E  28 01               		JR Z,.CH_STPP
     667:  00:8E60  EB                  		EX DE,HL
     668:  00:8E61  ED 52               .CH_STPP:	SBC HL,DE
     669:  00:8E63  FA 76 8E            		JP M,.CH_AMP
     670:  00:8E66  DD 7E 13            		LD A,[IX+CHNPRM_SlToNt]
     671:  00:8E69  DD 77 12            		LD [IX+CHNPRM_Note],A
     672:  00:8E6C  AF                  		XOR A
     673:  00:8E6D  DD 77 05            		LD [IX+CHNPRM_TSlCnt],A
     674:  00:8E70  DD 77 06            		LD [IX+CHNPRM_CrTnSl],A
     675:  00:8E73  DD 77 07            		LD [IX+CHNPRM_CrTnSl+1],A
     676:  00:8E76  DD 7E 02            .CH_AMP:	LD A,[IX+CHNPRM_CrAmSl]
     677:  00:8E79  CB 79               		BIT 7,C
     678:  00:8E7B  28 13               		JR Z,.CH_NOAM
     679:  00:8E7D  CB 71               		BIT 6,C
     680:  00:8E7F  28 07               		JR Z,.CH_AMIN
     681:  00:8E81  FE 0F               		CP 15
     682:  00:8E83  28 0B               		JR Z,.CH_NOAM
     683:  00:8E85  3C                  		INC A
     684:  00:8E86  18 05               		JR .CH_SVAM
     685:  00:8E88  FE F1               .CH_AMIN:	CP -15
     686:  00:8E8A  28 04               		JR Z,.CH_NOAM
     687:  00:8E8C  3D                  		DEC A
     688:  00:8E8D  DD 77 02            .CH_SVAM:	LD [IX+CHNPRM_CrAmSl],A
     689:  00:8E90  6F                  .CH_NOAM:	LD L,A
     690:  00:8E91  78                  		LD A,B
     691:  00:8E92  E6 0F               		AND 15
     692:  00:8E94  85                  		ADD A,L
     693:  00:8E95  F2 99 8E            		JP P,.CH_APOS
     694:  00:8E98  AF                  		XOR A
     695:  00:8E99  FE 10               .CH_APOS:	CP 16
     696:  00:8E9B  38 02               		JR C,.CH_VOL
     697:  00:8E9D  3E 0F               		LD A,15
     698:  00:8E9F  DD B6 1C            .CH_VOL:	OR [IX+CHNPRM_Volume]
     699:  00:8EA2  6F                  		LD L,A
     700:  00:8EA3  26 00               		LD H,0
     701:  00:8EA5  11 40 F1            		LD DE,VT_
     702:  00:8EA8  19                  		ADD HL,DE
     703:  00:8EA9  7E                  		LD A,[HL]
     704:  00:8EAA  CB 41               .CH_ENV:	BIT 0,C
     705:  00:8EAC  20 03               		JR NZ,.CH_NOEN
     706:  00:8EAE  DD B6 14            		OR [IX+CHNPRM_Env_En]
     707:  00:8EB1  32 4A F1            .CH_NOEN:	LD [AYREGS+AR_AmplC],A
     708:  00:8EB4  CB 78               		BIT 7,B
     709:  00:8EB6  79                  		LD A,C
     710:  00:8EB7  28 19               		JR Z,.NO_ENSL
     711:  00:8EB9  17                  		RLA
     712:  00:8EBA  17                  		RLA
     713:  00:8EBB  CB 2F               		SRA A
     714:  00:8EBD  CB 2F               		SRA A
     715:  00:8EBF  CB 2F               		SRA A
     716:  00:8EC1  DD 86 04            		ADD A,[IX+CHNPRM_CrEnSl] ;SEE COMMENT BELOW
     717:  00:8EC4  CB 68               		BIT 5,B
     718:  00:8EC6  28 03               		JR Z,.NO_ENAC
     719:  00:8EC8  DD 77 04            		LD [IX+CHNPRM_CrEnSl],A
     720:  00:8ECB  21 1D F0            .NO_ENAC:	LD HL,PT3_AddToEn
     721:  00:8ECE  86                  		ADD A,[HL] ;BUG IN PT3 - NEED WORD HERE.
     722:  00:8ECF                      			   ;FIX IT IN NEXT VERSION?
     723:  00:8ECF  77                  		LD [HL],A
     724:  00:8ED0  18 0E               		JR .CH_MIX
     725:  00:8ED2  1F                  .NO_ENSL:	RRA
     726:  00:8ED3  DD 86 03            		ADD A,[IX+CHNPRM_CrNsSl]
     727:  00:8ED6  32 7F F0            		LD [AddToNs],A
     728:  00:8ED9  CB 68               		BIT 5,B
     729:  00:8EDB  28 03               		JR Z,.CH_MIX
     730:  00:8EDD  DD 77 03            		LD [IX+CHNPRM_CrNsSl],A
     731:  00:8EE0  78                  .CH_MIX:	LD A,B
     732:  00:8EE1  1F                  		RRA
     733:  00:8EE2  E6 48               		AND $48
     734:  00:8EE4  21 47 F1            .CH_EXIT:	LD HL,AYREGS+AR_Mixer
     735:  00:8EE7  B6                  		OR [HL]
     736:  00:8EE8  0F                  		RRCA
     737:  00:8EE9  77                  		LD [HL],A
     738:  00:8EEA  E1                  		POP HL
     739:  00:8EEB  AF                  		XOR A
     740:  00:8EEC  DD B6 0A            		OR [IX+CHNPRM_COnOff]
     741:  00:8EEF  C8                  		RET Z
     742:  00:8EF0  DD 35 0A            		DEC [IX+CHNPRM_COnOff]
     743:  00:8EF3  C0                  		RET NZ
     744:  00:8EF4  DD AE 15            		XOR [IX+CHNPRM_Flags]
     745:  00:8EF7  DD 77 15            		LD [IX+CHNPRM_Flags],A
     746:  00:8EFA  1F                  		RRA
     747:  00:8EFB  DD 7E 0B            		LD A,[IX+CHNPRM_OnOffD]
     748:  00:8EFE  38 03               		JR C,.CH_ONDL
     749:  00:8F00  DD 7E 0C            		LD A,[IX+CHNPRM_OffOnD]
     750:  00:8F03  DD 77 0A            .CH_ONDL:	LD [IX+CHNPRM_COnOff],A
     751:  00:8F06  C9                  		RET
     752:  00:8F07                      
     753:  00:8F07  AF                  PT3_PLAY:	XOR A
     754:  00:8F08  32 1D F0            		LD [PT3_AddToEn],A
     755:  00:8F0B  32 47 F1            		LD [AYREGS+AR_Mixer],A
     756:  00:8F0E  3D                  		DEC A
     757:  00:8F0F  32 4D F1            		LD [AYREGS+AR_EnvTp],A
     758:  00:8F12  21 7A F0            		LD HL,DelyCnt
     759:  00:8F15  35                  		DEC [HL]
     760:  00:8F16  C2 9D 8F            		JP NZ,.PL2
     761:  00:8F19  21 3E F0            		LD HL,ChanA+CHNPRM_NtSkCn
     762:  00:8F1C  35                  		DEC [HL]
     763:  00:8F1D  20 4E               		JR NZ,.PL1B
     764:  00:8F1F  ED 4B 12 F0         		LD BC,[PT3_AdInPtA]
     765:  00:8F23  0A                  		LD A,[BC]
     766:  00:8F24  A7                  		AND A
     767:  00:8F25  20 3B               		JR NZ,.PL1A
     768:  00:8F27  57                  		LD D,A
     769:  00:8F28  32 7E F0            		LD [Ns_Base],A
     770:  00:8F2B  2A 03 F0            		LD HL,[PT3_CrPsPtr]
     771:  00:8F2E  23                  		INC HL
     772:  00:8F2F  7E                  		LD A,[HL]
     773:  00:8F30  3C                  		INC A
     774:  00:8F31  20 08               		JR NZ,.PLNLP
     775:  00:8F33  CD 9D 8A            		CALL CHECKLP
     776:  00:8F36  2A 18 F0            		LD HL,[PT3_LPosPtr]
     777:  00:8F39  7E                  		LD A,[HL]
     778:  00:8F3A  3C                  		INC A
     779:  00:8F3B  22 03 F0            .PLNLP:	LD [PT3_CrPsPtr],HL
     780:  00:8F3E  3D                  		DEC A
     781:  00:8F3F  87                  		ADD A,A
     782:  00:8F40  5F                  		LD E,A
     783:  00:8F41  CB 12               		RL D
     784:  00:8F43  2A 1A F0            		LD HL,[PT3_PatsPtr]
     785:  00:8F46  19                  		ADD HL,DE
     786:  00:8F47  ED 5B 01 F0         		LD DE,[PT3_MODADDR]
     787:  00:8F4B  ED 73 0D F0         		LD [PT3_PSP],SP
     788:  00:8F4F  F9                  		LD SP,HL
     789:  00:8F50  E1                  		POP HL
     790:  00:8F51  19                  		ADD HL,DE
     791:  00:8F52  44                  		LD B,H
     792:  00:8F53  4D                  		LD C,L
     793:  00:8F54  E1                  		POP HL
     794:  00:8F55  19                  		ADD HL,DE
     795:  00:8F56  22 14 F0            		LD [PT3_AdInPtB],HL
     796:  00:8F59  E1                  		POP HL
     797:  00:8F5A  19                  		ADD HL,DE
     798:  00:8F5B  22 16 F0            		LD [PT3_AdInPtC],HL
     799:  00:8F5E  ED 7B 0D F0         		LD SP,[PT3_PSP]
     800:  00:8F62                      
     801:  00:8F62  DD 21 2F F0         .PL1A:		LD IX,ChanA+12
     802:  00:8F66  CD 45 8C            		CALL PTDECOD
     803:  00:8F69  ED 43 12 F0         		LD [PT3_AdInPtA],BC
     804:  00:8F6D                      
     805:  00:8F6D  21 5B F0            .PL1B:		LD HL,ChanB+CHNPRM_NtSkCn
     806:  00:8F70  35                  		DEC [HL]
     807:  00:8F71  20 0F               		JR NZ,.PL1C
     808:  00:8F73  DD 21 4C F0         		LD IX,ChanB+12
     809:  00:8F77  ED 4B 14 F0         		LD BC,[PT3_AdInPtB]
     810:  00:8F7B  CD 45 8C            		CALL PTDECOD
     811:  00:8F7E  ED 43 14 F0         		LD [PT3_AdInPtB],BC
     812:  00:8F82                      
     813:  00:8F82  21 78 F0            .PL1C:		LD HL,ChanC+CHNPRM_NtSkCn
     814:  00:8F85  35                  		DEC [HL]
     815:  00:8F86  20 0F               		JR NZ,.PL1D
     816:  00:8F88  DD 21 69 F0         		LD IX,ChanC+12
     817:  00:8F8C  ED 4B 16 F0         		LD BC,[PT3_AdInPtC]
     818:  00:8F90  CD 45 8C            		CALL PTDECOD
     819:  00:8F93  ED 43 16 F0         		LD [PT3_AdInPtC],BC
     820:  00:8F97                      
     821:  00:8F97  3A 1C F0            .PL1D:		LD A,[PT3_Delay]
     822:  00:8F9A  32 7A F0            		LD [DelyCnt],A
     823:  00:8F9D                      
     824:  00:8F9D  DD 21 23 F0         .PL2:		LD IX,ChanA
     825:  00:8FA1  2A 40 F1            		LD HL,[AYREGS+AR_TonA]
     826:  00:8FA4  CD B5 8D            		CALL CHREGS
     827:  00:8FA7  22 40 F1            		LD [AYREGS+AR_TonA],HL
     828:  00:8FAA  3A 4A F1            		LD A,[AYREGS+AR_AmplC]
     829:  00:8FAD  32 48 F1            		LD [AYREGS+AR_AmplA],A
     830:  00:8FB0  DD 21 40 F0         		LD IX,ChanB
     831:  00:8FB4  2A 42 F1            		LD HL,[AYREGS+AR_TonB]
     832:  00:8FB7  CD B5 8D            		CALL CHREGS
     833:  00:8FBA  22 42 F1            		LD [AYREGS+AR_TonB],HL
     834:  00:8FBD  3A 4A F1            		LD A,[AYREGS+AR_AmplC]
     835:  00:8FC0  32 49 F1            		LD [AYREGS+AR_AmplB],A
     836:  00:8FC3  DD 21 5D F0         		LD IX,ChanC
     837:  00:8FC7  2A 44 F1            		LD HL,[AYREGS+AR_TonC]
     838:  00:8FCA  CD B5 8D            		CALL CHREGS
     839:  00:8FCD  22 44 F1            		LD [AYREGS+AR_TonC],HL
     840:  00:8FD0                      
     841:  00:8FD0  2A 7E F0            		LD HL,[Ns_Base_AddToNs]
     842:  00:8FD3  7C                  		LD A,H
     843:  00:8FD4  85                  		ADD A,L
     844:  00:8FD5  32 46 F1            		LD [AYREGS+AR_Noise],A
     845:  00:8FD8                      
     846:  00:8FD8  3A 1D F0            		LD A,[PT3_AddToEn]
     847:  00:8FDB  5F                  		LD E,A
     848:  00:8FDC  87                  		ADD A,A
     849:  00:8FDD  9F                  		SBC A,A
     850:  00:8FDE  57                  		LD D,A
     851:  00:8FDF  2A 4E F1            		LD HL,[EnvBase]
     852:  00:8FE2  19                  		ADD HL,DE
     853:  00:8FE3  ED 5B 7B F0         		LD DE,[CurESld]
     854:  00:8FE7  19                  		ADD HL,DE
     855:  00:8FE8  22 4B F1            		LD [AYREGS+AR_Env],HL
     856:  00:8FEB                      
     857:  00:8FEB  AF                  		XOR A
     858:  00:8FEC  21 7D F0            		LD HL,CurEDel
     859:  00:8FEF  B6                  		OR [HL]
     860:  00:8FF0  C8                  		RET Z
     861:  00:8FF1  35                  		DEC [HL]
     862:  00:8FF2  C0                  		RET NZ
     863:  00:8FF3  3A 1E F0            		LD A,[PT3_Env_Del]
     864:  00:8FF6  77                  		LD [HL],A
     865:  00:8FF7  2A 1F F0            		LD HL,[PT3_ESldAdd]
     866:  00:8FFA  19                  		ADD HL,DE
     867:  00:8FFB  22 7B F0            		LD [CurESld],HL
     868:  00:8FFE  C9                  		RET
     869:  00:8FFF                      
     870:  00:8FFF  AF                  PT3_ROUT:	XOR A
     871:  00:9000                      	
     872:  00:9000                      ROUT_A0:	; --- FIXES BITS 6 AND 7 OF MIXER ---
     873:  00:9000  21 47 F1            		LD	HL,AYREGS+AR_Mixer
     874:  00:9003  CB FE               		set	7,[hl]
     875:  00:9005  CB B6               		res	6,[hl]
     876:  00:9007                      
     877:  00:9007  0E A0               		LD C,$A0
     878:  00:9009  21 40 F1            		LD HL,AYREGS
     879:  00:900C  ED 79               .LOUT:		OUT [C],A
     880:  00:900E  0C                  		INC C
     881:  00:900F  ED A3               		OUTI 
     882:  00:9011  0D                  		DEC C
     883:  00:9012  3C                  		INC A
     884:  00:9013  FE 0D               		CP 13
     885:  00:9015  20 F5               		JR NZ,.LOUT
     886:  00:9017  ED 79               		OUT [C],A
     887:  00:9019  7E                  		LD A,[HL]
     888:  00:901A  A7                  		AND A
     889:  00:901B  F8                  		RET M
     890:  00:901C  0C                  		INC C
     891:  00:901D  ED 79               		OUT [C],A
     892:  00:901F  C9                  		RET
     893:  00:9020                      
     894:  00:9020  64                  NT_DATA:	db (T_NEW_0-T1_)*2
     895:  00:9021  2A                  		db TCNEW_0-T_
     896:  00:9022  65                  		db (T_OLD_0-T1_)*2+1
     897:  00:9023  00                  		db TCOLD_0-T_
     898:  00:9024  01                  		db (T_NEW_1-T1_)*2+1
     899:  00:9025  0C                  		db TCNEW_1-T_
     900:  00:9026  01                  		db (T_OLD_1-T1_)*2+1
     901:  00:9027  0C                  		db TCOLD_1-T_
     902:  00:9028  94                  		db (T_NEW_2-T1_)*2
     903:  00:9029  35                  		db TCNEW_2-T_
     904:  00:902A  30                  		db (T_OLD_2-T1_)*2
     905:  00:902B  0E                  		db TCOLD_2-T_
     906:  00:902C  60                  		db (T_NEW_3-T1_)*2
     907:  00:902D  20                  		db TCNEW_3-T_
     908:  00:902E  60                  		db (T_OLD_3-T1_)*2
     909:  00:902F  21                  		db TCOLD_3-T_
     910:  00:9030                      
     911:  00:9030                      T_:
     912:  00:9030                      
     913:  00:9030                      TCOLD_0:	db $00+1,$04+1,$08+1,$0A+1,$0C+1,$0E+1,$12+1,$14+1
     913:  00:9030  01 05 09 0B 0D 0F 13 15 
     914:  00:9038  19 25 3D 00         		db $18+1,$24+1,$3C+1,0
     915:  00:903C                      TCNEW_1:	
     916:  00:903C  5D 00               TCOLD_1:	db $5C+1,0
     917:  00:903E                      TCOLD_2:	db $30+1,$36+1,$4C+1,$52+1,$5E+1,$70+1,$82,$8C,$9C
     917:  00:903E  31 37 4D 53 5F 71 82 8C 9C 
     918:  00:9047                      		db $9E,$A0,$A6,$A8,$AA,$AC,$AE,$AE,0
     918:  00:9047  9E A0 A6 A8 AA AC AE AE 00 
     919:  00:9050  57                  TCNEW_3:	db $56+1
     920:  00:9051                      TCOLD_3:	db $1E+1,$22+1,$24+1,$28+1,$2C+1,$2E+1,$32+1,$BE+1,0
     920:  00:9051  1F 23 25 29 2D 2F 33 BF 00 
     921:  00:905A                      TCNEW_0:	db $1C+1,$20+1,$22+1,$26+1,$2A+1,$2C+1,$30+1,$54+1
     921:  00:905A  1D 21 23 27 2B 2D 31 55 
     922:  00:9062  BD BF 00            		db $BC+1,$BE+1,0
     923:  00:9065                      TCNEW_2:	db $1A+1,$20+1,$24+1,$28+1,$2A+1,$3A+1,$4C+1,$5E+1
     923:  00:9065  1B 21 25 29 2B 3B 4D 5F 
     924:  00:906D  BB BD BF            		db $BA+1,$BC+1,$BE+1
     925:  00:9070                      
     926:  00:9070  00 01 00 90         EMPTYSAMORN: 	db 0,1,0,$90 ;delete $90 if you don't need default sample
     927:  00:9074                      
     928:  00:9074                      T_PACK:		; First 12 values of tone tables (packed)
     929:  00:9074  0D                  		db ($06EC*2)/256
     930:  00:9075  D8                  		db #d8
     931:  00:9076  69                  		db $0755-$06EC
     932:  00:9077  70                  		db $07C5-$0755
     933:  00:9078  76                  		db $083B-$07C5
     934:  00:9079  7D                  		db $08B8-$083B
     935:  00:907A  85                  		db $093D-$08B8
     936:  00:907B  8D                  		db $09CA-$093D
     937:  00:907C  95                  		db $0A5F-$09CA
     938:  00:907D  9D                  		db $0AFC-$0A5F
     939:  00:907E  A8                  		db $0BA4-$0AFC
     940:  00:907F  B1                  		db $0C55-$0BA4
     941:  00:9080  BB                  		db $0D10-$0C55
     942:  00:9081  0C                  		db ($066D*2)/256
     943:  00:9082  DA                  		db #da
     944:  00:9083  62                  		db $06CF-$066D
     945:  00:9084  68                  		db $0737-$06CF
     946:  00:9085  6D                  		db $07A4-$0737
     947:  00:9086  75                  		db $0819-$07A4
     948:  00:9087  7B                  		db $0894-$0819
     949:  00:9088  83                  		db $0917-$0894
     950:  00:9089  8A                  		db $09A1-$0917
     951:  00:908A  92                  		db $0A33-$09A1
     952:  00:908B  9C                  		db $0ACF-$0A33
     953:  00:908C  A4                  		db $0B73-$0ACF
     954:  00:908D  AF                  		db $0C22-$0B73
     955:  00:908E  B8                  		db $0CDA-$0C22
     956:  00:908F  0E                  		db ($0704*2)/256
     957:  00:9090  08                  		db #08
     958:  00:9091  6A                  		db $076E-$0704
     959:  00:9092  72                  		db $07E0-$076E
     960:  00:9093  78                  		db $0858-$07E0
     961:  00:9094  7E                  		db $08D6-$0858
     962:  00:9095  86                  		db $095C-$08D6
     963:  00:9096  90                  		db $09EC-$095C
     964:  00:9097  96                  		db $0A82-$09EC
     965:  00:9098  A0                  		db $0B22-$0A82
     966:  00:9099  AA                  		db $0BCC-$0B22
     967:  00:909A  B4                  		db $0C80-$0BCC
     968:  00:909B  BE                  		db $0D3E-$0C80
     969:  00:909C  0F                  		db ($07E0*2)/256
     970:  00:909D  C0                  		db #c0
     971:  00:909E  78                  		db $0858-$07E0
     972:  00:909F  88                  		db $08E0-$0858
     973:  00:90A0  80                  		db $0960-$08E0
     974:  00:90A1  90                  		db $09F0-$0960
     975:  00:90A2  98                  		db $0A88-$09F0
     976:  00:90A3  A0                  		db $0B28-$0A88
     977:  00:90A4  B0                  		db $0BD8-$0B28
     978:  00:90A5  A8                  		db $0C80-$0BD8
     979:  00:90A6  E0                  		db $0D60-$0C80
     980:  00:90A7  B0                  		db $0E10-$0D60
     981:  00:90A8  E8                  		db $0EF8-$0E10
      61.  00:90A9                      	include "ayFX-ROM_sjasm.asm"
       1:  00:90A9                      		; --- ayFX REPLAYER v1.31 ---
       2:  00:90A9                      
       3:  00:90A9                      		; --- v1.31	Fixed bug on previous version, only PSG channel C worked
       4:  00:90A9                      		; --- v1.3	Fixed volume and Relative volume versions on the same file, conditional compilation
       5:  00:90A9                      		; ---		Support for dynamic or fixed channel allocation
       6:  00:90A9                      		; --- v1.2f/r	ayFX bank support
       7:  00:90A9                      		; --- v1.11f/r	If a frame volume is zero then no AYREGS update
       8:  00:90A9                      		; --- v1.1f/r	Fixed volume for all ayFX streams
       9:  00:90A9                      		; --- v1.1	Explicit priority (as suggested by AR)
      10:  00:90A9                      		; --- v1.0f	Bug fixed (error when using noise)
      11:  00:90A9                      		; --- v1.0	Initial release
      12:  00:90A9                      
      13:  00:90A9                      		; --- DEFINE AYFXRELATIVE AS 0 FOR FIXED VOLUME VERSION ---
      14:  00:90A9                      		; --- DEFINE AYFXRELATIVE AS 1 FOR RELATIVE VOLUME VERSION ---
      15:  00:90A9  (00:0000)           AYFXRELATIVE equ 0
      16:  00:90A9                      
      17:  00:90A9                      ayFX_SETUP:	; ---          ayFX replayer setup          ---
      18:  00:90A9                      		; --- INPUT: HL -> pointer to the ayFX bank ---
      19:  00:90A9  22 41 F2            		ld	[ayFX_BANK],hl			; Current ayFX bank
      20:  00:90AC  3E 01               		ld	a,1				; a:=0
      21:  00:90AE  32 40 F2            		ld	[ayFX_MODE],a			; Initial mode: fixed channel
      22:  00:90B1  3C                  		inc	a				; Starting channel (=1)
      23:  00:90B2  32 4A F2            		ld	[ayFX_CHANNEL],a		; Updated
      24:  00:90B5                      ayFX_END:	; --- End of an ayFX stream ---
      25:  00:90B5  3E FF               		ld	a,255				; Lowest ayFX priority
      26:  00:90B7  32 43 F2            		ld	[ayFX_PRIORITY],a		; Priority saved (not playing ayFX stream)
      27:  00:90BA  C9                  		ret					; Return
      28:  00:90BB                      
      29:  00:90BB                      ayFX_INIT:	; ---     INIT A NEW ayFX STREAM     ---
      30:  00:90BB                      		; --- INPUT: A -> sound to be played ---
      31:  00:90BB                      		; ---        C -> sound priority     ---
      32:  00:90BB  C5                  		push	bc				; Store bc in stack
      33:  00:90BC  D5                  		push	de				; Store de in stack
      34:  00:90BD  E5                  		push	hl				; Store hl in stack
      35:  00:90BE                      		; --- Check if the index is in the bank ---
      36:  00:90BE  47                  		ld	b,a				; b:=a (new ayFX stream index)
      37:  00:90BF  2A 41 F2            		ld	hl,[ayFX_BANK]			; Current ayFX BANK
      38:  00:90C2  7E                  		ld	a,[hl]				; Number of samples in the bank
      39:  00:90C3  B7                  		or	a				; If zero (means 256 samples)...
      40:  00:90C4  28 06               		jr	z,.CHECK_PRI			; ...goto .CHECK_PRI
      41:  00:90C6                      		; The bank has less than 256 samples
      42:  00:90C6  78                  		ld	a,b				; a:=b (new ayFX stream index)
      43:  00:90C7  BE                  		cp	[hl]				; If new index is not in the bank...
      44:  00:90C8  3E 02               		ld	a,2				; a:=2 (error 2: Sample not in the bank)
      45:  00:90CA  30 21               		jr	nc,.INIT_END			; ...we can't init it
      46:  00:90CC                      .CHECK_PRI:	; --- Check if the new priority is lower than the current one ---
      47:  00:90CC                      		; ---   Remember: 0 = highest priority, 15 = lowest priority  ---
      48:  00:90CC  78                  		ld	a,b				; a:=b (new ayFX stream index)
      49:  00:90CD  3A 43 F2            		ld	a,[ayFX_PRIORITY]		; a:=Current ayFX stream priority
      50:  00:90D0  B9                  		cp	c				; If new ayFX stream priority is lower than current one...
      51:  00:90D1  3E 01               		ld	a,1				; a:=1 (error 1: A sample with higher priority is being played)
      52:  00:90D3  38 18               		jr	c,.INIT_END			; ...we don't start the new ayFX stream
      53:  00:90D5                      		; --- Set new priority ---
      54:  00:90D5  79                  		ld	a,c				; a:=New priority
      55:  00:90D6  E6 0F               		and	$0F				; We mask the priority
      56:  00:90D8  32 43 F2            		ld	[ayFX_PRIORITY],a		; new ayFX stream priority saved in RAM
      57:  00:90DB                      
      58:  00:90DB                      		IF ( AYFXRELATIVE == 1 )
      59:  00:90DB                    ~ 			; --- Volume adjust using PT3 volume table ---
      60:  00:90DB                    ~ 			ld	c,a				; c:=New priority (fixed)
      61:  00:90DB                    ~ 			ld	a,15				; a:=15
      62:  00:90DB                    ~ 			sub	c				; a:=15-New priority = relative volume
      63:  00:90DB                    ~ 			jr	z,.INIT_NOSOUND		; If priority is 15 -> no sound output (volume is zero)
      64:  00:90DB                    ~ 			add	a,a				; a:=a*2
      65:  00:90DB                    ~ 			add	a,a				; a:=a*4
      66:  00:90DB                    ~ 			add	a,a				; a:=a*8
      67:  00:90DB                    ~ 			add	a,a				; a:=a*16
      68:  00:90DB                    ~ 			ld	e,a				; e:=a
      69:  00:90DB                    ~ 			ld	d,0				; de:=a
      70:  00:90DB                    ~ 			ld	hl,VT_				; hl:=PT3 volume table
      71:  00:90DB                    ~ 			add	hl,de				; hl is a pointer to the relative volume table
      72:  00:90DB                    ~ 			ld	[ayFX_VT],hl			; Save pointer
      73:  00:90DB                    ~ 		ENDIF
      74:  00:90DB                      
      75:  00:90DB                      		; --- Calculate the pointer to the new ayFX stream ---
      76:  00:90DB  ED 5B 41 F2         		ld	de,[ayFX_BANK]			; de:=Current ayFX bank
      77:  00:90DF  13                  		inc	de				; de points to the increments table of the bank
      78:  00:90E0  68                  		ld	l,b				; l:=b (new ayFX stream index)
      79:  00:90E1  26 00               		ld	h,0				; hl:=b (new ayFX stream index)
      80:  00:90E3  29                  		add	hl,hl				; hl:=hl*2
      81:  00:90E4  19                  		add	hl,de				; hl:=hl+de (hl points to the correct increment)
      82:  00:90E5  5E                  		ld	e,[hl]				; e:=lower byte of the increment
      83:  00:90E6  23                  		inc	hl				; hl points to the higher byte of the correct increment
      84:  00:90E7  56                  		ld	d,[hl]				; de:=increment
      85:  00:90E8  19                  		add	hl,de				; hl:=hl+de (hl points to the new ayFX stream)
      86:  00:90E9  22 44 F2            		ld	[ayFX_POINTER],hl		; Pointer saved in RAM
      87:  00:90EC  AF                  		xor	a				; a:=0 (no errors)
      88:  00:90ED  E1                  .INIT_END:	pop	hl				; Retrieve hl from stack
      89:  00:90EE  D1                  		pop	de				; Retrieve de from stack
      90:  00:90EF  C1                  		pop	bc				; Retrieve bc from stack
      91:  00:90F0  C9                  		ret					; Return
      92:  00:90F1                      
      93:  00:90F1                      		IF ( AYFXRELATIVE == 1 )
      94:  00:90F1                    ~ .INIT_NOSOUND:	; --- Init a sample with relative volume zero -> no sound output ---
      95:  00:90F1                    ~ 			ld	a,255				; Lowest ayFX priority
      96:  00:90F1                    ~ 			ld	[ayFX_PRIORITY],a		; Priority saved (not playing ayFX stream)
      97:  00:90F1                    ~ 			jr	.INIT_END			; Jumps to .INIT_END
      98:  00:90F1                    ~ 		ENDIF
      99:  00:90F1                      
     100:  00:90F1                      ayFX_PLAY:	; --- PLAY A FRAME OF AN ayFX STREAM ---
     101:  00:90F1  3A 43 F2            		ld	a,[ayFX_PRIORITY]		; a:=Current ayFX stream priority
     102:  00:90F4  B7                  		or	a				; If priority has bit 7 on...
     103:  00:90F5  F8                  		ret	m				; ...return
     104:  00:90F6                      		; --- Calculate next ayFX channel (if needed) ---
     105:  00:90F6  3A 40 F2            		ld	a,[ayFX_MODE]			; ayFX mode
     106:  00:90F9  E6 01               		and	1				; If bit0=0 (fixed channel)...
     107:  00:90FB  28 08               		jr	z,.TAKECB			; ...skip channel changing
     108:  00:90FD  21 4A F2            		ld	hl,ayFX_CHANNEL			; Old ayFX playing channel
     109:  00:9100  35                  		dec	[hl]				; New ayFX playing channel
     110:  00:9101  20 02               		jr	nz,.TAKECB			; If not zero jump to .TAKECB
     111:  00:9103  36 03               		ld	[hl],3				; If zero -> set channel 3
     112:  00:9105                      .TAKECB:	; --- Extract control byte from stream ---
     113:  00:9105  2A 44 F2            		ld	hl,[ayFX_POINTER]		; Pointer to the current ayFX stream
     114:  00:9108  4E                  		ld	c,[hl]				; c:=Control byte
     115:  00:9109  23                  		inc	hl				; Increment pointer
     116:  00:910A                      		; --- Check if there's new tone on stream ---
     117:  00:910A  CB 69               		bit	5,c				; If bit 5 c is off...
     118:  00:910C  28 08               		jr	z,.CHECK_NN			; ...jump to .CHECK_NN (no new tone)
     119:  00:910E                      		; --- Extract new tone from stream ---
     120:  00:910E  5E                  		ld	e,[hl]				; e:=lower byte of new tone
     121:  00:910F  23                  		inc	hl				; Increment pointer
     122:  00:9110  56                  		ld	d,[hl]				; d:=higher byte of new tone
     123:  00:9111  23                  		inc	hl				; Increment pointer
     124:  00:9112  ED 53 46 F2         		ld	[ayFX_TONE],de			; ayFX tone updated
     125:  00:9116                      .CHECK_NN:	; --- Check if there's new noise on stream ---
     126:  00:9116  CB 71               		bit	6,c				; if bit 6 c is off...
     127:  00:9118  28 09               		jr	z,.SETPOINTER			; ...jump to .SETPOINTER (no new noise)
     128:  00:911A                      		; --- Extract new noise from stream ---
     129:  00:911A  7E                  		ld	a,[hl]				; a:=New noise
     130:  00:911B  23                  		inc	hl				; Increment pointer
     131:  00:911C  FE 20               		cp	$20				; If it's an illegal value of noise (used to mark end of stream)...
     132:  00:911E  28 95               		jr.	z,ayFX_END			; ...jump to ayFX_END
     133:  00:9120  32 48 F2            		ld	[ayFX_NOISE],a			; ayFX noise updated
     134:  00:9123                      .SETPOINTER:	; --- Update ayFX pointer ---
     135:  00:9123  22 44 F2            		ld	[ayFX_POINTER],hl		; Update ayFX stream pointer
     136:  00:9126                      		; --- Extract volume ---
     137:  00:9126  79                  		ld	a,c				; a:=Control byte
     138:  00:9127  E6 0F               		and	$0F				; lower nibble
     139:  00:9129                      
     140:  00:9129                      		IF ( AYFXRELATIVE == 1 )
     141:  00:9129                    ~ 			; --- Fix the volume using PT3 Volume Table ---
     142:  00:9129                    ~ 			ld	hl,[ayFX_VT]			; hl:=Pointer to relative volume table
     143:  00:9129                    ~ 			ld	e,a				; e:=a (ayFX volume)
     144:  00:9129                    ~ 			ld	d,0				; d:=0
     145:  00:9129                    ~ 			add	hl,de				; hl:=hl+de (hl points to the relative volume of this frame
     146:  00:9129                    ~ 			ld	a,[hl]				; a:=ayFX relative volume
     147:  00:9129                    ~ 			or	a				; If relative volume is zero...
     148:  00:9129                    ~ 		ENDIF
     149:  00:9129                      
     150:  00:9129  32 49 F2            		ld	[ayFX_VOLUME],a			; ayFX volume updated
     151:  00:912C  C8                  		ret	z				; ...return (don't copy ayFX values in to AYREGS)
     152:  00:912D                      		; -------------------------------------
     153:  00:912D                      		; --- COPY ayFX VALUES IN TO AYREGS ---
     154:  00:912D                      		; -------------------------------------
     155:  00:912D                      		; --- Set noise channel ---
     156:  00:912D  CB 79               		bit	7,c				; If noise is off...
     157:  00:912F  20 06               		jr	nz,.SETMASKS			; ...jump to .SETMASKS
     158:  00:9131  3A 48 F2            		ld	a,[ayFX_NOISE]			; ayFX noise value
     159:  00:9134  32 46 F1            		ld	[AYREGS+6],a			; copied in to AYREGS (noise channel)
     160:  00:9137                      .SETMASKS:	; --- Set mixer masks ---
     161:  00:9137  79                  		ld	a,c				; a:=Control byte
     162:  00:9138  E6 90               		and	$90				; Only bits 7 and 4 (noise and tone mask for psg reg 7)
     163:  00:913A  FE 90               		cp	$90				; If no noise and no tone...
     164:  00:913C  C8                  		ret	z				; ...return (don't copy ayFX values in to AYREGS)
     165:  00:913D                      		; --- Copy ayFX values in to ARYREGS ---
     166:  00:913D  0F                  		rrca					; Rotate a to the right (1 TIME)
     167:  00:913E  0F                  		rrca					; Rotate a to the right (2 TIMES) (OR mask)
     168:  00:913F  16 DB               		ld	d,$DB				; d:=Mask for psg mixer (AND mask)
     169:  00:9141                      		; --- Dump to correct channel ---
     170:  00:9141  21 4A F2            		ld	hl,ayFX_CHANNEL			; Next ayFX playing channel
     171:  00:9144  46                  		ld	b,[hl]				; Channel counter
     172:  00:9145                      .CHK1:		; --- Check if playing channel was 1 ---
     173:  00:9145  10 0D               		djnz	.CHK2				; Decrement and jump if channel was not 1
     174:  00:9147                      .PLAY_C:	; --- Play ayFX stream on channel C ---
     175:  00:9147  CD 76 91            		call	.SETMIXER			; Set PSG mixer value (returning a=ayFX volume and hl=ayFX tone)
     176:  00:914A  32 4A F1            		ld	[AYREGS+10],a			; Volume copied in to AYREGS (channel C volume)
     177:  00:914D  CB 51               		bit	2,c				; If tone is off...
     178:  00:914F  C0                  		ret	nz				; ...return
     179:  00:9150  22 44 F1            		ld	[AYREGS+4],hl			; copied in to AYREGS (channel C tone)
     180:  00:9153  C9                  		ret					; Return
     181:  00:9154                      .CHK2:		; --- Check if playing channel was 2 ---
     182:  00:9154  CB 0A               		rrc	d				; Rotate right AND mask
     183:  00:9156  0F                  		rrca					; Rotate right OR mask
     184:  00:9157  10 0D               		djnz	.CHK3				; Decrement and jump if channel was not 2
     185:  00:9159                      .PLAY_B:	; --- Play ayFX stream on channel B ---
     186:  00:9159  CD 76 91            		call	.SETMIXER			; Set PSG mixer value (returning a=ayFX volume and hl=ayFX tone)
     187:  00:915C  32 49 F1            		ld	[AYREGS+9],a			; Volume copied in to AYREGS (channel B volume)
     188:  00:915F  CB 49               		bit	1,c				; If tone is off...
     189:  00:9161  C0                  		ret	nz				; ...return
     190:  00:9162  22 42 F1            		ld	[AYREGS+2],hl			; copied in to AYREGS (channel B tone)
     191:  00:9165  C9                  		ret					; Return
     192:  00:9166                      .CHK3:		; --- Check if playing channel was 3 ---
     193:  00:9166  CB 0A               		rrc	d				; Rotate right AND mask
     194:  00:9168  0F                  		rrca					; Rotate right OR mask
     195:  00:9169                      .PLAY_A:	; --- Play ayFX stream on channel A ---
     196:  00:9169  CD 76 91            		call	.SETMIXER			; Set PSG mixer value (returning a=ayFX volume and hl=ayFX tone)
     197:  00:916C  32 48 F1            		ld	[AYREGS+8],a			; Volume copied in to AYREGS (channel A volume)
     198:  00:916F  CB 41               		bit	0,c				; If tone is off...
     199:  00:9171  C0                  		ret	nz				; ...return
     200:  00:9172  22 40 F1            		ld	[AYREGS+0],hl			; copied in to AYREGS (channel A tone)
     201:  00:9175  C9                  		ret					; Return
     202:  00:9176                      .SETMIXER:	; --- Set PSG mixer value ---
     203:  00:9176  4F                  		ld	c,a				; c:=OR mask
     204:  00:9177  3A 47 F1            		ld	a,[AYREGS+7]			; a:=PSG mixer value
     205:  00:917A  A2                  		and	d				; AND mask
     206:  00:917B  B1                  		or	c				; OR mask
     207:  00:917C  32 47 F1            		ld	[AYREGS+7],a			; PSG mixer value updated
     208:  00:917F  3A 49 F2            		ld	a,[ayFX_VOLUME]			; a:=ayFX volume value
     209:  00:9182  2A 46 F2            		ld	hl,[ayFX_TONE]			; ayFX tone value
     210:  00:9185  C9                  		ret					; Return
     211:  00:9186                      
     212:  00:9186                      		IF ( AYFXRELATIVE == 1 )
     213:  00:9186                    ~ 			; --- UNCOMMENT THIS IF YOU DON'T USE THIS REPLAYER WITH PT3 REPLAYER ---
     214:  00:9186                    ~ 		;VT_:	.INCBIN	"VT.BIN"
     215:  00:9186                    ~ 			; --- UNCOMMENT THIS IF YOU DON'T USE THIS REPLAYER WITH PT3 REPLAYER ---
     216:  00:9186                    ~ 		ENDIF
      62.  00:9186                      	
      63.  00:9186                      	
      64.  00:9186                      
      65.  00:9186                      ;;=====================================================
      66.  00:9186                      ;;DEFINICIÓN DE CANTIONES Y EFECTOS DE SONIDO
      67.  00:9186                      ;;=====================================================		
      68.  00:9186                      song:
      69.  00:9186  (0968)              	incbin "bloodytears_castlevania.99"
      70.  00:9AEE                      	
      71.  00:9AEE                      sfx_bank:
      72.  00:9AEE  (004B)              	incbin "demo.afb"
      73.  00:9B39                      
     173   00:9B39                      	
     174   00:9B39                      	include "subr_ayudas.asm"
       1.  00:9B39                      ;;=====================================================
       2.  00:9B39                      ;;SUBRUTINAS MANEJO DE OBJETOS AYUDA
       3.  00:9B39                      ;;=====================================================	
       4.  00:9B39                      
       5.  00:9B39                      ;;=====================================================
       6.  00:9B39                      ;;INICIALIZA_AYUDAS
       7.  00:9B39                      ;;=====================================================	
       8.  00:9B39                      ; función: 	inicializa las variables de estructuras de ayuda del array lista_ayudas
       9.  00:9B39                      ; entrada: 	datos_delasdistintasayudas, variable estructura_ayuda_ayudaquesea
      10.  00:9B39                      ; salida: 	lista_ayudas
      11.  00:9B39                      ; toca:		HL, DE, BC
      12.  00:9B39                      inicializa_ayudas:
      13.  00:9B39                      	;oración
      14.  00:9B39  DD 21 08 AA         	LD		IX, ayuda_oracion
      15.  00:9B3D  DD 36 00 00         	LD		(IX + 0), INACTIVA			
      16.  00:9B41  21 E1 AA            	LD		HL, array_oracionon
      17.  00:9B44  DD 74 01            	LD		(IX + 1), H
      18.  00:9B47  DD 75 02            	LD		(IX + 2), L
      19.  00:9B4A  21 E5 AA            	LD		HL, array_oracionoff
      20.  00:9B4D  DD 74 03            	LD		(IX + 3), H
      21.  00:9B50  DD 75 04            	LD		(IX + 4), L
      22.  00:9B53  DD 36 05 A3         	LD		(IX + 5), POSORACION
      23.  00:9B57  DD 36 06 20         	LD		(IX + 6), POSORACIONX
      24.  00:9B5B  DD 36 07 70         	LD		(IX + 7), POSAYUDASY	
      25.  00:9B5F  21 4D 9C            	LD		HL, accion_oracion
      26.  00:9B62  DD 74 08            	LD		(IX + 8), H
      27.  00:9B65  DD 75 09            	LD		(IX + 9), L
      28.  00:9B68                      	
      29.  00:9B68                      	;cruz
      30.  00:9B68  21 82 AA            	LD		HL, datos_cruz
      31.  00:9B6B  11 18 AA            	LD		DE, ayuda_cruz
      32.  00:9B6E  01 10 00            	LD		BC, 16;#ESTRUCTURA_AYUDA ;equivale a 16.. el tamaño de la estructura en bytes
      33.  00:9B71  ED B0               	LDIR
      34.  00:9B73                      	
      35.  00:9B73                      	;agua bendita
      36.  00:9B73  21 8C AA            	LD		HL, datos_aguabendita
      37.  00:9B76  11 28 AA            	LD		DE, ayuda_aguabendita
      38.  00:9B79  CD A1 9B            	CALL	carga_datos_ayuda
      39.  00:9B7C                      		
      40.  00:9B7C                      	;armadura
      41.  00:9B7C  21 9D AA            	LD		HL, datos_armadura
      42.  00:9B7F  11 38 AA            	LD		DE, ayuda_armadura
      43.  00:9B82  CD A1 9B            	CALL	carga_datos_ayuda
      44.  00:9B85                      		
      45.  00:9B85                      	;planta
      46.  00:9B85  21 AE AA            	LD		HL, datos_planta
      47.  00:9B88  11 48 AA            	LD		DE, ayuda_planta
      48.  00:9B8B  CD A1 9B            	CALL	carga_datos_ayuda
      49.  00:9B8E                      		
      50.  00:9B8E                      	;vida extra
      51.  00:9B8E  21 BF AA            	LD		HL, datos_vidaextra
      52.  00:9B91  11 58 AA            	LD		DE, ayuda_vidaextra
      53.  00:9B94  CD A1 9B            	CALL	carga_datos_ayuda
      54.  00:9B97                      		
      55.  00:9B97                      	;ballesta
      56.  00:9B97  21 D0 AA            	LD		HL, datos_ballesta
      57.  00:9B9A  11 68 AA            	LD		DE, ayuda_ballesta
      58.  00:9B9D  CD A1 9B            	CALL	carga_datos_ayuda
      59.  00:9BA0                      fin_resetea_ayudas:
      60.  00:9BA0  C9                  	RET
      61.  00:9BA1                      	
      62.  00:9BA1                      
      63.  00:9BA1                      ;;=====================================================
      64.  00:9BA1                      ;;CARGA_DATOS_AYUDA
      65.  00:9BA1                      ;;=====================================================	
      66.  00:9BA1                      ; función: 	carga los datos de la ayuda de una variable dentro de la variable estructura (más carga y espacio que rellenar a pelo desde IX en adelante pero más simple)
      67.  00:9BA1                      ;entrada
      68.  00:9BA1                      ;  hl: origen de datos
      69.  00:9BA1                      ;  de: destino de datos
      70.  00:9BA1                      ; salida: 	-
      71.  00:9BA1                      ; toca:		HL, DE, BC
      72.  00:9BA1                      carga_datos_ayuda:
      73.  00:9BA1  01 10 00            	LD		BC, 16;ESTRUCTURA_AYUDA ;equivale a 16.. el tamaño de la estructura en bytes
      74.  00:9BA4  ED B0               	LDIR
      75.  00:9BA6                      fin_carga_datos_ayuda:
      76.  00:9BA6  C9                  	RET
      77.  00:9BA7                      
      78.  00:9BA7                      
      79.  00:9BA7                      
      80.  00:9BA7                      ;;=====================================================
      81.  00:9BA7                      ;;PINTA_OBJ_AYUDA
      82.  00:9BA7                      ;;=====================================================	
      83.  00:9BA7                      ; función: 	pinta un objeto de tipo ayuda que se le pase por referencia IX y el tipo en A
      84.  00:9BA7                      ; entrada: 	IX - puntero a objeto a mostrar, A - si está on u off
      85.  00:9BA7                      ; salida: 	-
      86.  00:9BA7                      ; toca:		AF, HL, BC, DE
      87.  00:9BA7                      pinta_obj_ayuda:
      88.  00:9BA7                      	;se recibe objeto desde fuera, por ejmplo LD IX, ayuda_oracion
      89.  00:9BA7                      
      90.  00:9BA7  B7                  	OR		 A
      91.  00:9BA8  CA B7 9B            	JP		 Z,.dibujooff
      92.  00:9BAB                      .dibujoon:	
      93.  00:9BAB  DD 66 01            	LD		 H, (IX + 1)
      94.  00:9BAE  DD 6E 02            	LD		 L, (IX + 2)
      95.  00:9BB1  22 F4 84            	LD		(wordaux2), HL
      96.  00:9BB4  C3 C0 9B            	JP		.param_wordaux2
      97.  00:9BB7                      .dibujooff:
      98.  00:9BB7  DD 66 03            	LD		 H, (IX + 3)
      99.  00:9BBA  DD 6E 04            	LD		 L, (IX + 4)
     100.  00:9BBD  22 F4 84            	LD		(wordaux2), HL
     101.  00:9BC0                      
     102.  00:9BC0                      .param_wordaux2:	
     103.  00:9BC0  21 00 19            	LD		HL, TILMAP + 256	;calcula posición en tilemap + 256 por colocarse siempre en bank1
     104.  00:9BC3  DD 7E 05            	LD		 A, (IX + 5)
     105.  00:9BC6  CD A5 81            	CALL	suma_A_HL
     106.  00:9BC9  22 F2 84            	LD		(wordaux1), HL		;pongo el valor en wordaux1
     107.  00:9BCC                      
     108.  00:9BCC                      .filasycols:
     109.  00:9BCC  3E 02               	LD		 A, 2				;equivale a LD	A,2 porque A ya valía 1
     110.  00:9BCE  32 F6 84            	LD		(byteaux1), A	;nº de filas
     111.  00:9BD1  32 F7 84            	LD		(byteaux2), A	;nº de columnas
     112.  00:9BD4                      	
     113.  00:9BD4  C3 B2 84            	JP		pinta_array
     114.  00:9BD7                      fin_pinta_obj_ayuda:
     115.  00:9BD7                      
     116.  00:9BD7                      
     117.  00:9BD7                      ;;=====================================================
     118.  00:9BD7                      ;;PINTA_AYUDAS_HABITACIÓN
     119.  00:9BD7                      ;;=====================================================	
     120.  00:9BD7                      ; función: 	examina el byte con las ayudas y pinta las que estén seleccionadas según variable habitacion_extras
     121.  00:9BD7                      ; entrada: 	habitacion_extras
     122.  00:9BD7                      ; salida: 	-
     123.  00:9BD7                      pinta_ayudas_habitacion:
     124.  00:9BD7                      .examina_oracion:
     125.  00:9BD7  3A B5 A6            	LD		 A, (habitacion_extras)
     126.  00:9BDA  CB 7F               	BIT		 7,A
     127.  00:9BDC  CA E8 9B            	JP		 Z,.examina_cruz
     128.  00:9BDF  DD 21 08 AA         	LD		IX, ayuda_oracion
     129.  00:9BE3  3E 01               	LD		 A, ACTIVA
     130.  00:9BE5  CD A7 9B            	CALL	pinta_obj_ayuda
     131.  00:9BE8                      .examina_cruz:
     132.  00:9BE8  3A B5 A6            	LD		 A, (habitacion_extras)
     133.  00:9BEB  CB 77               	BIT		 6,A
     134.  00:9BED  CA F9 9B            	JP		 Z,.examina_aguabendita
     135.  00:9BF0  DD 21 18 AA         	LD		IX, ayuda_cruz
     136.  00:9BF4  3E 01               	LD		 A, ACTIVA
     137.  00:9BF6  CD A7 9B            	CALL	pinta_obj_ayuda
     138.  00:9BF9                      .examina_aguabendita:
     139.  00:9BF9  3A B5 A6            	LD		 A, (habitacion_extras)
     140.  00:9BFC  CB 6F               	BIT		 5,A
     141.  00:9BFE  CA 0A 9C            	JP		 Z,.examina_armadura
     142.  00:9C01  DD 21 28 AA         	LD		IX, ayuda_aguabendita
     143.  00:9C05  3E 01               	LD		 A, ACTIVA
     144.  00:9C07  CD A7 9B            	CALL	pinta_obj_ayuda
     145.  00:9C0A                      .examina_armadura:
     146.  00:9C0A  3A B5 A6            	LD		 A, (habitacion_extras)
     147.  00:9C0D  CB 67               	BIT		 4,A
     148.  00:9C0F  CA 1B 9C            	JP		 Z,.examina_planta
     149.  00:9C12  DD 21 38 AA         	LD		IX, ayuda_armadura
     150.  00:9C16  3E 01               	LD		 A, ACTIVA
     151.  00:9C18  CD A7 9B            	CALL	pinta_obj_ayuda
     152.  00:9C1B                      .examina_planta:
     153.  00:9C1B  3A B5 A6            	LD		 A, (habitacion_extras)
     154.  00:9C1E  CB 5F               	BIT		 3,A
     155.  00:9C20  CA 2C 9C            	JP		 Z,.examina_vidaextra
     156.  00:9C23  DD 21 48 AA         	LD		IX, ayuda_planta
     157.  00:9C27  3E 01               	LD		 A, ACTIVA
     158.  00:9C29  CD A7 9B            	CALL	pinta_obj_ayuda
     159.  00:9C2C                      .examina_vidaextra:
     160.  00:9C2C  3A B5 A6            	LD		 A, (habitacion_extras)
     161.  00:9C2F  CB 57               	BIT		 2,A
     162.  00:9C31  CA 3D 9C            	JP		 Z,.examina_ballesta
     163.  00:9C34  DD 21 58 AA         	LD		IX, ayuda_vidaextra
     164.  00:9C38  3E 01               	LD		 A, ACTIVA
     165.  00:9C3A  CD A7 9B            	CALL	pinta_obj_ayuda
     166.  00:9C3D                      .examina_ballesta:
     167.  00:9C3D  3A B5 A6            	LD		 A, (habitacion_extras)
     168.  00:9C40  CB 4F               	BIT		 1,A
     169.  00:9C42  C8                  	RET		 Z
     170.  00:9C43  DD 21 68 AA         	LD		IX, ayuda_ballesta
     171.  00:9C47  3E 01               	LD		 A, ACTIVA
     172.  00:9C49  CD A7 9B            	CALL	pinta_obj_ayuda
     173.  00:9C4C                      fin_pinta_ayudas_habitacion:
     174.  00:9C4C  C9                  	RET
     175.  00:9C4D                      
     176.  00:9C4D                      
     177.  00:9C4D                      
     178.  00:9C4D                      ;;=====================================================
     179.  00:9C4D                      ;;ACCION_ORACION
     180.  00:9C4D                      ;;=====================================================	
     181.  00:9C4D                      ; función: 	
     182.  00:9C4D                      ; entrada: 	
     183.  00:9C4D                      ; salida: 	-
     184.  00:9C4D                      accion_oracion:
     185.  00:9C4D                      fin_accion_oracion:
     186.  00:9C4D  C9                  	RET
     187.  00:9C4E                      	
     188.  00:9C4E                      
     189.  00:9C4E                      ;;=====================================================
     190.  00:9C4E                      ;;ACCION_CRUZ
     191.  00:9C4E                      ;;=====================================================	
     192.  00:9C4E                      ; función: 	
     193.  00:9C4E                      ; entrada: 	
     194.  00:9C4E                      ; salida: 	-
     195.  00:9C4E                      accion_cruz:
     196.  00:9C4E                      fin_accion_cruz:
     197.  00:9C4E  C9                  	RET
     198.  00:9C4F                      
     199.  00:9C4F                      
     200.  00:9C4F                      ;;=====================================================
     201.  00:9C4F                      ;;ACCION_AGUA
     202.  00:9C4F                      ;;=====================================================	
     203.  00:9C4F                      ; función: 	
     204.  00:9C4F                      ; entrada: 	
     205.  00:9C4F                      ; salida: 	-
     206.  00:9C4F                      accion_agua:
     207.  00:9C4F                      fin_accion_agua:
     208.  00:9C4F  C9                  	RET
     209.  00:9C50                      
     210.  00:9C50                      
     211.  00:9C50                      ;;=====================================================
     212.  00:9C50                      ;;ACCION_ARMADURA
     213.  00:9C50                      ;;=====================================================	
     214.  00:9C50                      ; función: 	
     215.  00:9C50                      ; entrada: 	
     216.  00:9C50                      ; salida: 	-
     217.  00:9C50                      accion_armadura:
     218.  00:9C50                      fin_accion_armadura:
     219.  00:9C50  C9                  	RET
     220.  00:9C51                      
     221.  00:9C51                      
     222.  00:9C51                      ;;=====================================================
     223.  00:9C51                      ;;ACCION_PLANTA
     224.  00:9C51                      ;;=====================================================	
     225.  00:9C51                      ; función: 	
     226.  00:9C51                      ; entrada: 	
     227.  00:9C51                      ; salida: 	-
     228.  00:9C51                      accion_planta:
     229.  00:9C51                      fin_accion_planta:
     230.  00:9C51  C9                  	RET
     231.  00:9C52                      
     232.  00:9C52                      
     233.  00:9C52                      ;;=====================================================
     234.  00:9C52                      ;;ACCION_VIDAEXTRA
     235.  00:9C52                      ;;=====================================================	
     236.  00:9C52                      ; función: 	
     237.  00:9C52                      ; entrada: 	
     238.  00:9C52                      ; salida: 	-
     239.  00:9C52                      accion_vidaextra:
     240.  00:9C52                      fin_accion_vidaextra:
     241.  00:9C52  C9                  	RET
     242.  00:9C53                      
     243.  00:9C53                      
     244.  00:9C53                      ;;=====================================================
     245.  00:9C53                      ;;ACCION_BALLESTA
     246.  00:9C53                      ;;=====================================================	
     247.  00:9C53                      ; función: 	
     248.  00:9C53                      ; entrada: 	
     249.  00:9C53                      ; salida: 	-
     250.  00:9C53                      accion_ballesta:
     251.  00:9C53                      fin_accion_ballesta:
     252.  00:9C53  C9                  	RET
     253.  00:9C54                      
     254.  00:9C54                      
     175   00:9C54                      	
     176   00:9C54                      
     177   00:9C54                      ;;=====================================================
     178   00:9C54                      ;;DEFINICIÓN DE SUBRUTINAS DE FERNANDO PARA COMPRESIÓN Y SONIDO
     179   00:9C54                      ;;=====================================================
     180   00:9C54                      ;Este include lleva la rutina de descompresión de ROM/RAM a VRAM de pletter
     181   00:9C54                      ;Está adaptada de la original a sjasm
     182   00:9C54                      ;	HL = RAM/ROM source	; DE = VRAM destination
     183   00:9C54                      depack_VRAM:
     184   00:9C54                      	include "PL_VRAM_Depack_SJASM.asm"
       1.  00:9C54                      ;-----------------------------------------------------------
       2.  00:9C54                      ; Pletter v0.5b VRAM Depacker v1.1 - 16Kb version
       3.  00:9C54                      ; HL = RAM/ROM source ; DE = VRAM destination
       4.  00:9C54                      ;-----------------------------------------------------------
       5.  00:9C54  F3                  	di
       6.  00:9C55                      
       7.  00:9C55                      ; VRAM address setup
       8.  00:9C55  7B                  	ld	a,e
       9.  00:9C56  D3 99               	out	[099h],a
      10.  00:9C58  7A                  	ld	a,d
      11.  00:9C59  F6 40               	or	040h
      12.  00:9C5B  D3 99               	out	[099h],a
      13.  00:9C5D                      
      14.  00:9C5D                      ; Initialization
      15.  00:9C5D  7E                  	ld	a,[hl]
      16.  00:9C5E  23                  	inc	hl
      17.  00:9C5F  D9                  	exx
      18.  00:9C60  11 00 00            	ld	de,0
      19.  00:9C63  87                  	add	a,a
      20.  00:9C64  3C                  	inc	a
      21.  00:9C65  CB 13               	rl	e
      22.  00:9C67  87                  	add	a,a
      23.  00:9C68  CB 13               	rl	e
      24.  00:9C6A  87                  	add	a,a
      25.  00:9C6B  CB 13               	rl	e
      26.  00:9C6D  CB 13               	rl	e
      27.  00:9C6F  21 26 9D            	ld	hl,modes
      28.  00:9C72  19                  	add	hl,de
      29.  00:9C73  5E                  	ld	e,[hl]
      30.  00:9C74  DD 6B               	ld	ixl,e
      31.  00:9C76  23                  	inc	hl
      32.  00:9C77  5E                  	ld	e,[hl]
      33.  00:9C78  DD 63               	ld	ixh,e
      34.  00:9C7A  1E 01               	ld	e,1
      35.  00:9C7C  D9                  	exx
      36.  00:9C7D  FD 21 86 9C         	ld	iy,loop
      37.  00:9C81                      
      38.  00:9C81                      ; Main depack loop
      39.  00:9C81  0E 98               literal:ld	c,098h
      40.  00:9C83  ED A3               	outi
      41.  00:9C85  13                  	inc	de
      42.  00:9C86  87                  loop:	add	a,a
      43.  00:9C87  CC 1A 9D              	call	z,getbit
      44.  00:9C8A  30 F5               	jr	nc,literal
      45.  00:9C8C                      
      46.  00:9C8C                      ; Compressed data
      47.  00:9C8C  D9                  	exx
      48.  00:9C8D  62                  	ld	h,d
      49.  00:9C8E  6B                  	ld	l,e
      50.  00:9C8F  87                  getlen: add	a,a
      51.  00:9C90  CC 1E 9D            	call	z,getbitexx
      52.  00:9C93  30 1D               	jr	nc,lenok
      53.  00:9C95  87                  lus:	add	a,a
      54.  00:9C96  CC 1E 9D            	call	z,getbitexx
      55.  00:9C99  ED 6A               	adc	hl,hl
      56.  00:9C9B  D8                  	ret	c
      57.  00:9C9C  87                  	add	a,a
      58.  00:9C9D  CC 1E 9D            	call	z,getbitexx
      59.  00:9CA0  30 10               	jr	nc,lenok
      60.  00:9CA2  87                  	add	a,a
      61.  00:9CA3  CC 1E 9D            	call	z,getbitexx
      62.  00:9CA6  ED 6A               	adc	hl,hl
      63.  00:9CA8  DA 24 9D            	jp	c,Depack_out
      64.  00:9CAB  87                  	add	a,a
      65.  00:9CAC  CC 1E 9D            	call	z,getbitexx
      66.  00:9CAF  DA 95 9C            	jp	c,lus
      67.  00:9CB2  23                  lenok:  inc	hl
      68.  00:9CB3  D9                  	exx
      69.  00:9CB4  4E                  	ld	c,[hl]
      70.  00:9CB5  23                  	inc	hl
      71.  00:9CB6  06 00               	ld	b,0
      72.  00:9CB8  CB 79               	bit	7,c
      73.  00:9CBA  CA ED 9C            	jp	z,offsok
      74.  00:9CBD  DD E9               	jp	ix
      75.  00:9CBF                      
      76.  00:9CBF  87                  mode7:  add	a,a
      77.  00:9CC0  CC 1A 9D              	call	z,getbit
      78.  00:9CC3  CB 10               	rl	b
      79.  00:9CC5  87                  mode6:	add	a,a
      80.  00:9CC6  CC 1A 9D              	call	z,getbit
      81.  00:9CC9  CB 10               	rl	b
      82.  00:9CCB  87                  mode5:  add	a,a
      83.  00:9CCC  CC 1A 9D              	call	z,getbit
      84.  00:9CCF  CB 10               	rl	b
      85.  00:9CD1  87                  mode4:  add	a,a
      86.  00:9CD2  CC 1A 9D              	call	z,getbit
      87.  00:9CD5  CB 10               	rl	b
      88.  00:9CD7  87                  mode3:  add	a,a
      89.  00:9CD8  CC 1A 9D              	call	z,getbit
      90.  00:9CDB  CB 10               	rl	b
      91.  00:9CDD  87                  mode2:	add	a,a
      92.  00:9CDE  CC 1A 9D              	call	z,getbit
      93.  00:9CE1  CB 10               	rl	b
      94.  00:9CE3  87                  	add	a,a
      95.  00:9CE4  CC 1A 9D              	call	z,getbit
      96.  00:9CE7  30 04               	jr	nc,offsok
      97.  00:9CE9  B7                  	or	a
      98.  00:9CEA  04                  	inc	b
      99.  00:9CEB  CB B9               	res	7,c
     100.  00:9CED  03                  offsok: inc	bc
     101.  00:9CEE  E5                  	push	hl
     102.  00:9CEF  D9                  	exx
     103.  00:9CF0  E5                  	push	hl
     104.  00:9CF1  D9                  	exx
     105.  00:9CF2  6B                  	ld	l,e
     106.  00:9CF3  62                  	ld	h,d
     107.  00:9CF4  ED 42               	sbc	hl,bc
     108.  00:9CF6  C1                  	pop	bc
     109.  00:9CF7  F5                  	push	af
     110.  00:9CF8  7D                  .loop:	ld	a,l
     111.  00:9CF9  D3 99               	out	[099h],a
     112.  00:9CFB  7C                  	ld	a,h
     113.  00:9CFC  00                  	nop                     ; VDP timing
     114.  00:9CFD  D3 99               	out	[099h],a
     115.  00:9CFF  00                  	nop                     ; VDP timing
     116.  00:9D00  DB 98               	in	a,[098h]
     117.  00:9D02  08                  	ex	af,af'
     118.  00:9D03  7B                  	ld	a,e
     119.  00:9D04  00                  	nop			; VDP timing
     120.  00:9D05  D3 99               	out	[099h],a
     121.  00:9D07  7A                  	ld	a,d
     122.  00:9D08  F6 40               	or	040h
     123.  00:9D0A  D3 99               	out	[099h],a
     124.  00:9D0C  08                  	ex	af,af'
     125.  00:9D0D  00                  	nop			; VDP timing
     126.  00:9D0E  D3 98               	out	[098h],a
     127.  00:9D10  13                  	inc	de
     128.  00:9D11  ED A1               	cpi
     129.  00:9D13  EA F8 9C            	jp	pe,.loop
     130.  00:9D16  F1                  	pop	af
     131.  00:9D17  E1                  	pop	hl
     132.  00:9D18  FD E9               	jp	iy
     133.  00:9D1A                      
     134.  00:9D1A  7E                  getbit: ld	a,[hl]
     135.  00:9D1B  23                  	inc	hl
     136.  00:9D1C  17                  	rla
     137.  00:9D1D  C9                  	ret
     138.  00:9D1E                      
     139.  00:9D1E                      getbitexx:
     140.  00:9D1E  D9                  	exx
     141.  00:9D1F  7E                  	ld	a,[hl]
     142.  00:9D20  23                  	inc	hl
     143.  00:9D21  D9                  	exx
     144.  00:9D22  17                  	rla
     145.  00:9D23  C9                  	ret
     146.  00:9D24                      
     147.  00:9D24                      ; Depacker exit
     148.  00:9D24                      Depack_out:
     149.  00:9D24  FB                  	ei
     150.  00:9D25  C9                  	ret
     151.  00:9D26                      
     152.  00:9D26                      modes:
     153.  00:9D26  ED 9C               	dw	offsok
     154.  00:9D28  DD 9C               	dw	mode2
     155.  00:9D2A  D7 9C               	dw	mode3
     156.  00:9D2C  D1 9C               	dw	mode4
     157.  00:9D2E  CB 9C               	dw	mode5
     158.  00:9D30  C5 9C               	dw	mode6
     159.  00:9D32  BF 9C               	dw	mode7
     185   00:9D34                      
     186   00:9D34                      
     187   00:9D34                      	
     188   00:9D34                      ;;=====================================================
     189   00:9D34                      ;;DEFINICIÓN DE ESTRUCTURAS
     190   00:9D34                      ;;=====================================================		
     191   00:9D34                      	include "estructuras.asm"
       1.  00:9D34                      ;;=====================================================
       2.  00:9D34                      ;;DEFINICIÓN DE ESTRUCTURAS
       3.  00:9D34                      ;;=====================================================
       4.  00:9D34                      
       5.  00:9D34                      ;crear estructura
       6.  00:9D34                      
       7.  00:9D34                      	STRUCT ESTRUCTURA_PUNTOMIRA
       8.  00:9D34                    < posx			DB		POSXPM
       9.  00:9D34                    < posy			DB		POSYPM
      10.  00:9D34                    < escena			DB		0	;valores porsibles 0 (blanco+rojo en punto de mira) y NEG 0 (al revés)
      11.  00:9D34                    < velocidad		DB		0
      12.  00:9D34                    < boton2_pressed  DB		0
      13.  00:9D34                    < cadencia		DB		5	;nº de veces que se ejecutará el disparo antes de ejecutar un disparo real (porque cuando se pulsa la tecl dispara 3 ó 4 veces de rápido que va)
      14.  00:9D34                    < ; al final he decidido (ya que el punto de mira es el prota) que lo relacionado con el prota vaya en esta estructura
      15.  00:9D34                    < pm_aux1			DB		0	;para llegar a los 16 campos
      16.  00:9D34                    < pm_aux2			DB		0	;para llegar a los 16 campos
      17.  00:9D34                    < pm_aux3			DB		0	;para llegar a los 16 campos
      18.  00:9D34                    < pm_aux4			DB		0	;para llegar a los 16 campos
      19.  00:9D34                    < pm_aux5			DB		0	;para llegar a los 16 campos
      20.  00:9D34                    < pm_aux6			DB		0	;para llegar a los 16 campos
      21.  00:9D34                    < pm_aux7			DB		0	;para llegar a los 16 campos
      22.  00:9D34                    < pm_aux8			DB		0	;para llegar a los 16 campos
      23.  00:9D34                    < pm_aux9			DB		0	;para llegar a los 16 campos
      24.  00:9D34                    < pm_aux10		DB		0	;para llegar a los 16 campos
      25.  00:9D34                    < 	ENDSTRUCT;ESTRUCTURA_PUNTOMIRA
      26.  00:9D34                      
      27.  00:9D34                      	
      28.  00:9D34                      	STRUCT ESTRUCTURA_ENEMIGO
      29.  00:9D34                    < tipo				DB		0	;(0 serpiente por ejemplo) #FF muerto o no existe
      30.  00:9D34                    < posx				DB		5
      31.  00:9D34                    < posy				DB		50
      32.  00:9D34                    < color				DB		5
      33.  00:9D34                    < escena				DB		0
      34.  00:9D34                    < contador_siguiente_escena	DB	0
      35.  00:9D34                    < reset_contador		DB		0
      36.  00:9D34                    < dano				DB		0	;daño
      37.  00:9D34                    < energia				DB		0	;energía del enemigo... si llega a 0 => existe <- 0
      38.  00:9D34                    < ;indica el nº de sprite a mostrar y si está compuesto por uno o dos sprites y si están en horizontal o vertical
      39.  00:9D34                    < ver_hor				DB		0
      40.  00:9D34                    < manejador_dibujo 	DW		0
      41.  00:9D34                    < en_aux3				DB		0
      42.  00:9D34                    < en_aux4				DB		0
      43.  00:9D34                    < 	ENDSTRUCT;ESTRUCTURA_ENEMIGO
      44.  00:9D34                      	
      45.  00:9D34                      	STRUCT ESTRUCTURA_AYUDA		;vidas extra, plantas de curación de energía, reliquias				
      46.  00:9D34                    < activo				DB		0	;0 no activo <>0 activo 											0
      47.  00:9D34                    < postilemem_nousado	DW		0	;pos en memoria ver array_ayudas de cómo se mostrarán (wordaux2)	1,2
      48.  00:9D34                    < postilemem_usado	DW		0	;pos en memoria ver array_ayudas de cómo se mostrarán (wordaux2)	3,4
      49.  00:9D34                    < pospantalla			DB		0	;pos en pantalla (memoria en el banco 1 se le suma 256 + TILEMAP) (wordaux1)	5
      50.  00:9D34                    < posx				DB		0	;pos del pixel central (esquina superior + 8x)						6
      51.  00:9D34                    < posy				DB		112	;pos del pixel central (esquina superior + 8y) (para toas igual)	7
      52.  00:9D34                    < puntero_accion		DW		0	;subrutina que indica la acción si se dispara en el objeto			8,9
      53.  00:9D34                    < ayu_aux1			DB		0	;relleno
      54.  00:9D34                    < ayu_aux2			DB		0	;relleno
      55.  00:9D34                    < ayu_aux3			DB		0	;relleno
      56.  00:9D34                    < ayu_aux4			DB		0	;relleno
      57.  00:9D34                    < ayu_aux5			DB		0	;relleno
      58.  00:9D34                    < ayu_aux6			DB		0	;relleno
      59.  00:9D34                    < 	ENDSTRUCT;ESTRUCTURA_AYUDA
      60.  00:9D34                      
      61.  00:9D34                      
      62.  00:9D34                      	STRUCT ESTRUCTURA_ANTORCHA
      63.  00:9D34                    < activo				DB		0	;0 no activa <>0 activo
      64.  00:9D34                    < postilemem_antor1	DW		0	;pos en memoria ver array_antorcha de cómo se mostrará (wordaux2)	1,2
      65.  00:9D34                    < pospantalla_antor1	DB		0	;pos en pantalla (memoria en el banco 1 se le suma 256 + TILEMAP) (wordaux1)	3
      66.  00:9D34                    < pospantalla_antor2	DB		0	;pos en pantalla (memoria en el banco 1 se le suma 256 + TILEMAP) (wordaux1)	4
      67.  00:9D34                    < escena				DB		0	;(va entre 0 y 1 - 0=>llama1 y llama2 o 1=>llama2 y llama1	7 - tiles 196 y 197)	5
      68.  00:9D34                    < cont_sig_escena		DB		10	;	6
      69.  00:9D34                    < 	ENDSTRUCT;ESTRUCTURA_ANTORCHA
      70.  00:9D34                      
      71.  00:9D34                      	STRUCT ESTRUCTURA_ESQUELETO
      72.  00:9D34                    < activo				DB		0	;0 no activa <>0 activo
      73.  00:9D34                    < postilemem_antor1	DW		0	;pos en memoria ver array_antorcha de cómo se mostrará (wordaux2)	1,2
      74.  00:9D34                    < pospantalla_esquel1	DB		0	;pos en pantalla (memoria en el banco 1 se le suma 256 + TILEMAP) (wordaux1)	3
      75.  00:9D34                    < pospantalla_esquel2	DB		0	;pos en pantalla (memoria en el banco 1 se le suma 256 + TILEMAP) (wordaux1)	4
      76.  00:9D34                    < escena				DB		0	;(va entre 0 y 4 - tiles 164, 165, 164, 166)	5
      77.  00:9D34                    < cont_sig_escena		DB		0	;	6
      78.  00:9D34                    < 	ENDSTRUCT;ESTRUCTURA_ESQUELETO
      79.  00:9D34                      	
      80.  00:9D34                      	STRUCT ESTRUCTURA_PUERTA	;también servirá para la escalera
      81.  00:9D34                    < activa				DB		0	;0 no activa <>0 activo
      82.  00:9D34                    < posx				DB		0	;punto x de la puerta para cuando se dispare encima
      83.  00:9D34                    < posy				DB		0	;punto y de la puerta para cuando se dispare encima
      84.  00:9D34                    < radiox				DB		0	;radio x de la puerta para cuando se dispare encima
      85.  00:9D34                    < radioy				DB		0	;radio y de la puerta para cuando se dispare encima
      86.  00:9D34                    < accion				DW		0	;función para acción de cada tipo de puerta
      87.  00:9D34                    < tiles_puerta		DW		0	;puntero al array con los tiles de las puertas para wordaux2
      88.  00:9D34                    < pos_en_tilemap		DW		0	;calcula posición en tilemap para wordaux1
      89.  00:9D34                    < alto				DB		0	;alto en tiles del dibujo de la puerta (filas)
      90.  00:9D34                    < ancho				DB		0	;ancho en tiles del dibujo de la puerta (columnas)
      91.  00:9D34                    < 	ENDSTRUCT;ESTRUCTURA_PUERTA
      92.  00:9D34                      
      93.  00:9D34                      
      94.  00:9D34                      
      95.  00:9D34                      
      96.  00:9D34                      
      97.  00:9D34                      
     192   00:9D34                      	
     193   00:9D34                      ;;=====================================================
     194   00:9D34                      ;;DEFINICIÓN DE VARIABLES
     195   00:9D34                      ;;=====================================================		
     196   00:9D34                      	include "sprites.asm"
       1.  00:9D34                      ;;=====================================================
       2.  00:9D34                      ;;DEFINICIÓN DE SPRITES
       3.  00:9D34                      ;;=====================================================	
       4.  00:9D34                      
       5.  00:9D34                      
       6.  00:9D34                      ;; NOTA:
       7.  00:9D34                      ;~ sprite_reliquia_oracion: on/off
       8.  00:9D34                      ;~ sprite_reliquia_cruz: on/off
       9.  00:9D34                      ;~ sprite_reliquia_agua: on/off
      10.  00:9D34                      ;~ sprite_peto: on/off
      11.  00:9D34                      ;~ sprite_planta: on/off
      12.  00:9D34                      ;~ sprite_vida_extra: on/off
      13.  00:9D34                      ;~ sprite_ballesta_mejorada: on/off
      14.  00:9D34                      
      15.  00:9D34                      ;~ iban a ser sprites pero por falta de recursos serán tiles
      16.  00:9D34                      
      17.  00:9D34                      
      18.  00:9D34                      sprites_pantantalla:
      19.  00:9D34                      
      20.  00:9D34                      ;; PARTE 1: SPRITES COMUNES
      21.  00:9D34                      
      22.  00:9D34                      sprites_comunes:
      23.  00:9D34                      sprite_punto_mira_1:	;color 8
      24.  00:9D34                      	db #FF,#FF,#C0,#C0,#C0,#C0,#C0,#C0
      24.  00:9D34  FF FF C0 C0 C0 C0 C0 C0 
      25.  00:9D3C                      	db #C0,#C0,#C0,#C0,#C0,#C0,#FF,#FF
      25.  00:9D3C  C0 C0 C0 C0 C0 C0 FF FF 
      26.  00:9D44                      	db #FF,#FF,#03,#03,#03,#03,#03,#03
      26.  00:9D44  FF FF 03 03 03 03 03 03 
      27.  00:9D4C                      	db #03,#03,#03,#03,#03,#03,#FF,#FF
      27.  00:9D4C  03 03 03 03 03 03 FF FF 
      28.  00:9D54                      	
      29.  00:9D54                      sprite_punto_mira_2: 	;color 15
      30.  00:9D54                      	db #00,#00,#00,#00,#0F,#0F,#0C,#0C
      30.  00:9D54  00 00 00 00 0F 0F 0C 0C 
      31.  00:9D5C                      	db #0C,#0C,#0F,#0F,#00,#00,#00,#00
      31.  00:9D5C  0C 0C 0F 0F 00 00 00 00 
      32.  00:9D64                      	db #00,#00,#00,#00,#F0,#F0,#30,#30
      32.  00:9D64  00 00 00 00 F0 F0 30 30 
      33.  00:9D6C                      	db #30,#30,#F0,#F0,#00,#00,#00,#00
      33.  00:9D6C  30 30 F0 F0 00 00 00 00 
      34.  00:9D74                      	
      35.  00:9D74                      sprite_punto_mira_1_mejorado:
      36.  00:9D74                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      36.  00:9D74  FF FF FF FF FF FF FF FF 
      37.  00:9D7C                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      37.  00:9D7C  FF FF FF FF FF FF FF FF 
      38.  00:9D84                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      38.  00:9D84  FF FF FF FF FF FF FF FF 
      39.  00:9D8C                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      39.  00:9D8C  FF FF FF FF FF FF FF FF 
      40.  00:9D94                      
      41.  00:9D94                      sprite_punto_mira_2_mejorado:
      42.  00:9D94                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      42.  00:9D94  FF FF FF FF FF FF FF FF 
      43.  00:9D9C                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      43.  00:9D9C  FF FF FF FF FF FF FF FF 
      44.  00:9DA4                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      44.  00:9DA4  FF FF FF FF FF FF FF FF 
      45.  00:9DAC                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      45.  00:9DAC  FF FF FF FF FF FF FF FF 
      46.  00:9DB4                      	
      47.  00:9DB4                      sprite_explosion_1:
      48.  00:9DB4                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      48.  00:9DB4  FF FF FF FF FF FF FF FF 
      49.  00:9DBC                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      49.  00:9DBC  FF FF FF FF FF FF FF FF 
      50.  00:9DC4                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      50.  00:9DC4  FF FF FF FF FF FF FF FF 
      51.  00:9DCC                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF	
      51.  00:9DCC  FF FF FF FF FF FF FF FF 
      52.  00:9DD4                      
      53.  00:9DD4                      sprite_explosion_2:
      54.  00:9DD4                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      54.  00:9DD4  FF FF FF FF FF FF FF FF 
      55.  00:9DDC                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      55.  00:9DDC  FF FF FF FF FF FF FF FF 
      56.  00:9DE4                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      56.  00:9DE4  FF FF FF FF FF FF FF FF 
      57.  00:9DEC                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF	
      57.  00:9DEC  FF FF FF FF FF FF FF FF 
      58.  00:9DF4                      fin_sprites_comunes:
      59.  00:9DF4                      
      60.  00:9DF4                      ;; PARTE 2: SPRITES NO COMUNES
      61.  00:9DF4                      
      62.  00:9DF4                      ;; ARAÑA
      63.  00:9DF4                      	
      64.  00:9DF4                      sprite_arana1_1:
      65.  00:9DF4                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      65.  00:9DF4  FF FF FF FF FF FF FF FF 
      66.  00:9DFC                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      66.  00:9DFC  FF FF FF FF FF FF FF FF 
      67.  00:9E04                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      67.  00:9E04  FF FF FF FF FF FF FF FF 
      68.  00:9E0C                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      68.  00:9E0C  FF FF FF FF FF FF FF FF 
      69.  00:9E14                      	
      70.  00:9E14                      sprite_arana1_2:
      71.  00:9E14                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      71.  00:9E14  FF FF FF FF FF FF FF FF 
      72.  00:9E1C                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      72.  00:9E1C  FF FF FF FF FF FF FF FF 
      73.  00:9E24                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      73.  00:9E24  FF FF FF FF FF FF FF FF 
      74.  00:9E2C                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      74.  00:9E2C  FF FF FF FF FF FF FF FF 
      75.  00:9E34                      
      76.  00:9E34                      ;; MURCIELAGO
      77.  00:9E34                      	
      78.  00:9E34                      sprite_murcielago1_1:
      79.  00:9E34                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      79.  00:9E34  FF FF FF FF FF FF FF FF 
      80.  00:9E3C                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      80.  00:9E3C  FF FF FF FF FF FF FF FF 
      81.  00:9E44                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      81.  00:9E44  FF FF FF FF FF FF FF FF 
      82.  00:9E4C                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      82.  00:9E4C  FF FF FF FF FF FF FF FF 
      83.  00:9E54                      	
      84.  00:9E54                      sprite_murcielago1_2:
      85.  00:9E54                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      85.  00:9E54  FF FF FF FF FF FF FF FF 
      86.  00:9E5C                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      86.  00:9E5C  FF FF FF FF FF FF FF FF 
      87.  00:9E64                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      87.  00:9E64  FF FF FF FF FF FF FF FF 
      88.  00:9E6C                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF	
      88.  00:9E6C  FF FF FF FF FF FF FF FF 
      89.  00:9E74                      
      90.  00:9E74                      ;; SERPIENTE
      91.  00:9E74                      
      92.  00:9E74                      sprite_serpiente1_1:
      93.  00:9E74                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      93.  00:9E74  FF FF FF FF FF FF FF FF 
      94.  00:9E7C                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      94.  00:9E7C  FF FF FF FF FF FF FF FF 
      95.  00:9E84                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      95.  00:9E84  FF FF FF FF FF FF FF FF 
      96.  00:9E8C                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      96.  00:9E8C  FF FF FF FF FF FF FF FF 
      97.  00:9E94                      	
      98.  00:9E94                      sprite_serpiente1_2:
      99.  00:9E94                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      99.  00:9E94  FF FF FF FF FF FF FF FF 
     100.  00:9E9C                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     100.  00:9E9C  FF FF FF FF FF FF FF FF 
     101.  00:9EA4                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     101.  00:9EA4  FF FF FF FF FF FF FF FF 
     102.  00:9EAC                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     102.  00:9EAC  FF FF FF FF FF FF FF FF 
     103.  00:9EB4                      	
     104.  00:9EB4                      sprite_serpiente2_1:
     105.  00:9EB4                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     105.  00:9EB4  FF FF FF FF FF FF FF FF 
     106.  00:9EBC                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     106.  00:9EBC  FF FF FF FF FF FF FF FF 
     107.  00:9EC4                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     107.  00:9EC4  FF FF FF FF FF FF FF FF 
     108.  00:9ECC                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     108.  00:9ECC  FF FF FF FF FF FF FF FF 
     109.  00:9ED4                      	
     110.  00:9ED4                      sprite_serpiente2_2:
     111.  00:9ED4                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     111.  00:9ED4  FF FF FF FF FF FF FF FF 
     112.  00:9EDC                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     112.  00:9EDC  FF FF FF FF FF FF FF FF 
     113.  00:9EE4                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     113.  00:9EE4  FF FF FF FF FF FF FF FF 
     114.  00:9EEC                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     114.  00:9EEC  FF FF FF FF FF FF FF FF 
     115.  00:9EF4                      
     116.  00:9EF4                      ;; ZOMBI
     117.  00:9EF4                      
     118.  00:9EF4                      sprite_zombi1_1_1:
     119.  00:9EF4                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     119.  00:9EF4  FF FF FF FF FF FF FF FF 
     120.  00:9EFC                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     120.  00:9EFC  FF FF FF FF FF FF FF FF 
     121.  00:9F04                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     121.  00:9F04  FF FF FF FF FF FF FF FF 
     122.  00:9F0C                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     122.  00:9F0C  FF FF FF FF FF FF FF FF 
     123.  00:9F14                      
     124.  00:9F14                      sprite_zombi1_2_1:
     125.  00:9F14                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     125.  00:9F14  FF FF FF FF FF FF FF FF 
     126.  00:9F1C                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     126.  00:9F1C  FF FF FF FF FF FF FF FF 
     127.  00:9F24                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     127.  00:9F24  FF FF FF FF FF FF FF FF 
     128.  00:9F2C                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     128.  00:9F2C  FF FF FF FF FF FF FF FF 
     129.  00:9F34                      	
     130.  00:9F34                      sprite_zombi1_3_1:
     131.  00:9F34                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     131.  00:9F34  FF FF FF FF FF FF FF FF 
     132.  00:9F3C                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     132.  00:9F3C  FF FF FF FF FF FF FF FF 
     133.  00:9F44                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     133.  00:9F44  FF FF FF FF FF FF FF FF 
     134.  00:9F4C                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     134.  00:9F4C  FF FF FF FF FF FF FF FF 
     135.  00:9F54                      	
     136.  00:9F54                      sprite_zombi1_4_1:
     137.  00:9F54                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     137.  00:9F54  FF FF FF FF FF FF FF FF 
     138.  00:9F5C                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     138.  00:9F5C  FF FF FF FF FF FF FF FF 
     139.  00:9F64                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     139.  00:9F64  FF FF FF FF FF FF FF FF 
     140.  00:9F6C                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     140.  00:9F6C  FF FF FF FF FF FF FF FF 
     141.  00:9F74                      	
     142.  00:9F74                      sprite_zombi1_1_2:
     143.  00:9F74                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     143.  00:9F74  FF FF FF FF FF FF FF FF 
     144.  00:9F7C                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     144.  00:9F7C  FF FF FF FF FF FF FF FF 
     145.  00:9F84                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     145.  00:9F84  FF FF FF FF FF FF FF FF 
     146.  00:9F8C                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     146.  00:9F8C  FF FF FF FF FF FF FF FF 
     147.  00:9F94                      
     148.  00:9F94                      sprite_zombi1_2_2:
     149.  00:9F94                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     149.  00:9F94  FF FF FF FF FF FF FF FF 
     150.  00:9F9C                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     150.  00:9F9C  FF FF FF FF FF FF FF FF 
     151.  00:9FA4                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     151.  00:9FA4  FF FF FF FF FF FF FF FF 
     152.  00:9FAC                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     152.  00:9FAC  FF FF FF FF FF FF FF FF 
     153.  00:9FB4                      	
     154.  00:9FB4                      sprite_zombi1_3_2:
     155.  00:9FB4                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     155.  00:9FB4  FF FF FF FF FF FF FF FF 
     156.  00:9FBC                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     156.  00:9FBC  FF FF FF FF FF FF FF FF 
     157.  00:9FC4                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     157.  00:9FC4  FF FF FF FF FF FF FF FF 
     158.  00:9FCC                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     158.  00:9FCC  FF FF FF FF FF FF FF FF 
     159.  00:9FD4                      	
     160.  00:9FD4                      sprite_zombi1_4_2:
     161.  00:9FD4                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     161.  00:9FD4  FF FF FF FF FF FF FF FF 
     162.  00:9FDC                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     162.  00:9FDC  FF FF FF FF FF FF FF FF 
     163.  00:9FE4                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     163.  00:9FE4  FF FF FF FF FF FF FF FF 
     164.  00:9FEC                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     164.  00:9FEC  FF FF FF FF FF FF FF FF 
     165.  00:9FF4                      	
     166.  00:9FF4                      sprite_zombi2_1_1:
     167.  00:9FF4                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     167.  00:9FF4  FF FF FF FF FF FF FF FF 
     168.  00:9FFC                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     168.  00:9FFC  FF FF FF FF FF FF FF FF 
     169.  00:A004                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     169.  00:A004  FF FF FF FF FF FF FF FF 
     170.  00:A00C                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     170.  00:A00C  FF FF FF FF FF FF FF FF 
     171.  00:A014                      
     172.  00:A014                      sprite_zombi2_2_1:
     173.  00:A014                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     173.  00:A014  FF FF FF FF FF FF FF FF 
     174.  00:A01C                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     174.  00:A01C  FF FF FF FF FF FF FF FF 
     175.  00:A024                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     175.  00:A024  FF FF FF FF FF FF FF FF 
     176.  00:A02C                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     176.  00:A02C  FF FF FF FF FF FF FF FF 
     177.  00:A034                      	
     178.  00:A034                      sprite_zombi2_3_1:
     179.  00:A034                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     179.  00:A034  FF FF FF FF FF FF FF FF 
     180.  00:A03C                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     180.  00:A03C  FF FF FF FF FF FF FF FF 
     181.  00:A044                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     181.  00:A044  FF FF FF FF FF FF FF FF 
     182.  00:A04C                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     182.  00:A04C  FF FF FF FF FF FF FF FF 
     183.  00:A054                      	
     184.  00:A054                      sprite_zombi2_4_1:
     185.  00:A054                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     185.  00:A054  FF FF FF FF FF FF FF FF 
     186.  00:A05C                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     186.  00:A05C  FF FF FF FF FF FF FF FF 
     187.  00:A064                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     187.  00:A064  FF FF FF FF FF FF FF FF 
     188.  00:A06C                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     188.  00:A06C  FF FF FF FF FF FF FF FF 
     189.  00:A074                      	
     190.  00:A074                      sprite_zombi2_1_2:
     191.  00:A074                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     191.  00:A074  FF FF FF FF FF FF FF FF 
     192.  00:A07C                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     192.  00:A07C  FF FF FF FF FF FF FF FF 
     193.  00:A084                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     193.  00:A084  FF FF FF FF FF FF FF FF 
     194.  00:A08C                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     194.  00:A08C  FF FF FF FF FF FF FF FF 
     195.  00:A094                      
     196.  00:A094                      sprite_zombi2_2_2:
     197.  00:A094                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     197.  00:A094  FF FF FF FF FF FF FF FF 
     198.  00:A09C                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     198.  00:A09C  FF FF FF FF FF FF FF FF 
     199.  00:A0A4                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     199.  00:A0A4  FF FF FF FF FF FF FF FF 
     200.  00:A0AC                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     200.  00:A0AC  FF FF FF FF FF FF FF FF 
     201.  00:A0B4                      	
     202.  00:A0B4                      sprite_zombi2_3_2:
     203.  00:A0B4                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     203.  00:A0B4  FF FF FF FF FF FF FF FF 
     204.  00:A0BC                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     204.  00:A0BC  FF FF FF FF FF FF FF FF 
     205.  00:A0C4                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     205.  00:A0C4  FF FF FF FF FF FF FF FF 
     206.  00:A0CC                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     206.  00:A0CC  FF FF FF FF FF FF FF FF 
     207.  00:A0D4                      	
     208.  00:A0D4                      sprite_zombi2_4_2:
     209.  00:A0D4                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     209.  00:A0D4  FF FF FF FF FF FF FF FF 
     210.  00:A0DC                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     210.  00:A0DC  FF FF FF FF FF FF FF FF 
     211.  00:A0E4                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     211.  00:A0E4  FF FF FF FF FF FF FF FF 
     212.  00:A0EC                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     212.  00:A0EC  FF FF FF FF FF FF FF FF 
     213.  00:A0F4                      	
     214.  00:A0F4                      ;; CABALLERO
     215.  00:A0F4                      
     216.  00:A0F4                      sprite_caballero1_1_1:
     217.  00:A0F4                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     217.  00:A0F4  FF FF FF FF FF FF FF FF 
     218.  00:A0FC                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     218.  00:A0FC  FF FF FF FF FF FF FF FF 
     219.  00:A104                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     219.  00:A104  FF FF FF FF FF FF FF FF 
     220.  00:A10C                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     220.  00:A10C  FF FF FF FF FF FF FF FF 
     221.  00:A114                      
     222.  00:A114                      sprite_caballero1_2_1:
     223.  00:A114                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     223.  00:A114  FF FF FF FF FF FF FF FF 
     224.  00:A11C                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     224.  00:A11C  FF FF FF FF FF FF FF FF 
     225.  00:A124                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     225.  00:A124  FF FF FF FF FF FF FF FF 
     226.  00:A12C                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     226.  00:A12C  FF FF FF FF FF FF FF FF 
     227.  00:A134                      	
     228.  00:A134                      sprite_caballero1_3_1:
     229.  00:A134                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     229.  00:A134  FF FF FF FF FF FF FF FF 
     230.  00:A13C                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     230.  00:A13C  FF FF FF FF FF FF FF FF 
     231.  00:A144                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     231.  00:A144  FF FF FF FF FF FF FF FF 
     232.  00:A14C                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     232.  00:A14C  FF FF FF FF FF FF FF FF 
     233.  00:A154                      	
     234.  00:A154                      sprite_caballero1_4_1:
     235.  00:A154                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     235.  00:A154  FF FF FF FF FF FF FF FF 
     236.  00:A15C                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     236.  00:A15C  FF FF FF FF FF FF FF FF 
     237.  00:A164                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     237.  00:A164  FF FF FF FF FF FF FF FF 
     238.  00:A16C                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     238.  00:A16C  FF FF FF FF FF FF FF FF 
     239.  00:A174                      	
     240.  00:A174                      sprite_caballero1_1_2:
     241.  00:A174                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     241.  00:A174  FF FF FF FF FF FF FF FF 
     242.  00:A17C                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     242.  00:A17C  FF FF FF FF FF FF FF FF 
     243.  00:A184                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     243.  00:A184  FF FF FF FF FF FF FF FF 
     244.  00:A18C                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     244.  00:A18C  FF FF FF FF FF FF FF FF 
     245.  00:A194                      
     246.  00:A194                      sprite_caballero1_2_2:
     247.  00:A194                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     247.  00:A194  FF FF FF FF FF FF FF FF 
     248.  00:A19C                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     248.  00:A19C  FF FF FF FF FF FF FF FF 
     249.  00:A1A4                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     249.  00:A1A4  FF FF FF FF FF FF FF FF 
     250.  00:A1AC                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     250.  00:A1AC  FF FF FF FF FF FF FF FF 
     251.  00:A1B4                      	
     252.  00:A1B4                      sprite_caballero1_3_2:
     253.  00:A1B4                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     253.  00:A1B4  FF FF FF FF FF FF FF FF 
     254.  00:A1BC                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     254.  00:A1BC  FF FF FF FF FF FF FF FF 
     255.  00:A1C4                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     255.  00:A1C4  FF FF FF FF FF FF FF FF 
     256.  00:A1CC                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     256.  00:A1CC  FF FF FF FF FF FF FF FF 
     257.  00:A1D4                      	
     258.  00:A1D4                      sprite_caballero1_4_2:
     259.  00:A1D4                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     259.  00:A1D4  FF FF FF FF FF FF FF FF 
     260.  00:A1DC                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     260.  00:A1DC  FF FF FF FF FF FF FF FF 
     261.  00:A1E4                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     261.  00:A1E4  FF FF FF FF FF FF FF FF 
     262.  00:A1EC                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     262.  00:A1EC  FF FF FF FF FF FF FF FF 
     263.  00:A1F4                      	
     264.  00:A1F4                      sprite_caballero2_1_1:
     265.  00:A1F4                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     265.  00:A1F4  FF FF FF FF FF FF FF FF 
     266.  00:A1FC                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     266.  00:A1FC  FF FF FF FF FF FF FF FF 
     267.  00:A204                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     267.  00:A204  FF FF FF FF FF FF FF FF 
     268.  00:A20C                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     268.  00:A20C  FF FF FF FF FF FF FF FF 
     269.  00:A214                      
     270.  00:A214                      sprite_caballero2_2_1:
     271.  00:A214                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     271.  00:A214  FF FF FF FF FF FF FF FF 
     272.  00:A21C                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     272.  00:A21C  FF FF FF FF FF FF FF FF 
     273.  00:A224                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     273.  00:A224  FF FF FF FF FF FF FF FF 
     274.  00:A22C                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     274.  00:A22C  FF FF FF FF FF FF FF FF 
     275.  00:A234                      	
     276.  00:A234                      sprite_caballero2_3_1:
     277.  00:A234                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     277.  00:A234  FF FF FF FF FF FF FF FF 
     278.  00:A23C                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     278.  00:A23C  FF FF FF FF FF FF FF FF 
     279.  00:A244                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     279.  00:A244  FF FF FF FF FF FF FF FF 
     280.  00:A24C                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     280.  00:A24C  FF FF FF FF FF FF FF FF 
     281.  00:A254                      	
     282.  00:A254                      sprite_caballero2_4_1:
     283.  00:A254                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     283.  00:A254  FF FF FF FF FF FF FF FF 
     284.  00:A25C                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     284.  00:A25C  FF FF FF FF FF FF FF FF 
     285.  00:A264                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     285.  00:A264  FF FF FF FF FF FF FF FF 
     286.  00:A26C                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     286.  00:A26C  FF FF FF FF FF FF FF FF 
     287.  00:A274                      	
     288.  00:A274                      sprite_caballero2_1_2:
     289.  00:A274                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     289.  00:A274  FF FF FF FF FF FF FF FF 
     290.  00:A27C                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     290.  00:A27C  FF FF FF FF FF FF FF FF 
     291.  00:A284                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     291.  00:A284  FF FF FF FF FF FF FF FF 
     292.  00:A28C                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     292.  00:A28C  FF FF FF FF FF FF FF FF 
     293.  00:A294                      
     294.  00:A294                      sprite_caballero2_2_2:
     295.  00:A294                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     295.  00:A294  FF FF FF FF FF FF FF FF 
     296.  00:A29C                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     296.  00:A29C  FF FF FF FF FF FF FF FF 
     297.  00:A2A4                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     297.  00:A2A4  FF FF FF FF FF FF FF FF 
     298.  00:A2AC                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     298.  00:A2AC  FF FF FF FF FF FF FF FF 
     299.  00:A2B4                      	
     300.  00:A2B4                      sprite_caballero2_3_2:
     301.  00:A2B4                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     301.  00:A2B4  FF FF FF FF FF FF FF FF 
     302.  00:A2BC                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     302.  00:A2BC  FF FF FF FF FF FF FF FF 
     303.  00:A2C4                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     303.  00:A2C4  FF FF FF FF FF FF FF FF 
     304.  00:A2CC                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     304.  00:A2CC  FF FF FF FF FF FF FF FF 
     305.  00:A2D4                      	
     306.  00:A2D4                      sprite_caballero2_4_2:
     307.  00:A2D4                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     307.  00:A2D4  FF FF FF FF FF FF FF FF 
     308.  00:A2DC                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     308.  00:A2DC  FF FF FF FF FF FF FF FF 
     309.  00:A2E4                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     309.  00:A2E4  FF FF FF FF FF FF FF FF 
     310.  00:A2EC                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     310.  00:A2EC  FF FF FF FF FF FF FF FF 
     311.  00:A2F4                      	
     312.  00:A2F4                      ;; LLAMA
     313.  00:A2F4                      
     314.  00:A2F4                      sprite_llama1_1:	
     315.  00:A2F4                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     315.  00:A2F4  FF FF FF FF FF FF FF FF 
     316.  00:A2FC                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     316.  00:A2FC  FF FF FF FF FF FF FF FF 
     317.  00:A304                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     317.  00:A304  FF FF FF FF FF FF FF FF 
     318.  00:A30C                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     318.  00:A30C  FF FF FF FF FF FF FF FF 
     319.  00:A314                      	
     320.  00:A314                      sprite_llama2_1:	
     321.  00:A314                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     321.  00:A314  FF FF FF FF FF FF FF FF 
     322.  00:A31C                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     322.  00:A31C  FF FF FF FF FF FF FF FF 
     323.  00:A324                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     323.  00:A324  FF FF FF FF FF FF FF FF 
     324.  00:A32C                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF	
     324.  00:A32C  FF FF FF FF FF FF FF FF 
     325.  00:A334                      	
     326.  00:A334                      sprite_llama1_2:	
     327.  00:A334                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     327.  00:A334  FF FF FF FF FF FF FF FF 
     328.  00:A33C                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     328.  00:A33C  FF FF FF FF FF FF FF FF 
     329.  00:A344                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     329.  00:A344  FF FF FF FF FF FF FF FF 
     330.  00:A34C                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     330.  00:A34C  FF FF FF FF FF FF FF FF 
     331.  00:A354                      	
     332.  00:A354                      sprite_llama2_2:	
     333.  00:A354                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     333.  00:A354  FF FF FF FF FF FF FF FF 
     334.  00:A35C                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     334.  00:A35C  FF FF FF FF FF FF FF FF 
     335.  00:A364                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     335.  00:A364  FF FF FF FF FF FF FF FF 
     336.  00:A36C                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF			
     336.  00:A36C  FF FF FF FF FF FF FF FF 
     337.  00:A374                      	
     338.  00:A374                      ;; FANTASMA
     339.  00:A374                      
     340.  00:A374                      sprite_fantasma1_1:
     341.  00:A374                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     341.  00:A374  FF FF FF FF FF FF FF FF 
     342.  00:A37C                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     342.  00:A37C  FF FF FF FF FF FF FF FF 
     343.  00:A384                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     343.  00:A384  FF FF FF FF FF FF FF FF 
     344.  00:A38C                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     344.  00:A38C  FF FF FF FF FF FF FF FF 
     345.  00:A394                      
     346.  00:A394                      sprite_fantasma2_1:
     347.  00:A394                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     347.  00:A394  FF FF FF FF FF FF FF FF 
     348.  00:A39C                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     348.  00:A39C  FF FF FF FF FF FF FF FF 
     349.  00:A3A4                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     349.  00:A3A4  FF FF FF FF FF FF FF FF 
     350.  00:A3AC                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     350.  00:A3AC  FF FF FF FF FF FF FF FF 
     351.  00:A3B4                      
     352.  00:A3B4                      sprite_fantasma1_2:
     353.  00:A3B4                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     353.  00:A3B4  FF FF FF FF FF FF FF FF 
     354.  00:A3BC                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     354.  00:A3BC  FF FF FF FF FF FF FF FF 
     355.  00:A3C4                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     355.  00:A3C4  FF FF FF FF FF FF FF FF 
     356.  00:A3CC                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     356.  00:A3CC  FF FF FF FF FF FF FF FF 
     357.  00:A3D4                      
     358.  00:A3D4                      sprite_fantasma2_2:
     359.  00:A3D4                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     359.  00:A3D4  FF FF FF FF FF FF FF FF 
     360.  00:A3DC                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     360.  00:A3DC  FF FF FF FF FF FF FF FF 
     361.  00:A3E4                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     361.  00:A3E4  FF FF FF FF FF FF FF FF 
     362.  00:A3EC                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF	
     362.  00:A3EC  FF FF FF FF FF FF FF FF 
     363.  00:A3F4                      	
     364.  00:A3F4                      ;; MAGIA
     365.  00:A3F4                      
     366.  00:A3F4                      sprite_magia1_1:
     367.  00:A3F4                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     367.  00:A3F4  FF FF FF FF FF FF FF FF 
     368.  00:A3FC                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     368.  00:A3FC  FF FF FF FF FF FF FF FF 
     369.  00:A404                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     369.  00:A404  FF FF FF FF FF FF FF FF 
     370.  00:A40C                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     370.  00:A40C  FF FF FF FF FF FF FF FF 
     371.  00:A414                      
     372.  00:A414                      sprite_magia2_1:
     373.  00:A414                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     373.  00:A414  FF FF FF FF FF FF FF FF 
     374.  00:A41C                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     374.  00:A41C  FF FF FF FF FF FF FF FF 
     375.  00:A424                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     375.  00:A424  FF FF FF FF FF FF FF FF 
     376.  00:A42C                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     376.  00:A42C  FF FF FF FF FF FF FF FF 
     377.  00:A434                      
     378.  00:A434                      sprite_magia1_2:
     379.  00:A434                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     379.  00:A434  FF FF FF FF FF FF FF FF 
     380.  00:A43C                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     380.  00:A43C  FF FF FF FF FF FF FF FF 
     381.  00:A444                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     381.  00:A444  FF FF FF FF FF FF FF FF 
     382.  00:A44C                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     382.  00:A44C  FF FF FF FF FF FF FF FF 
     383.  00:A454                      
     384.  00:A454                      sprite_magia2_2:
     385.  00:A454                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     385.  00:A454  FF FF FF FF FF FF FF FF 
     386.  00:A45C                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     386.  00:A45C  FF FF FF FF FF FF FF FF 
     387.  00:A464                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     387.  00:A464  FF FF FF FF FF FF FF FF 
     388.  00:A46C                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF	
     388.  00:A46C  FF FF FF FF FF FF FF FF 
     389.  00:A474                      	
     390.  00:A474                      	
     391.  00:A474                      ;; BEHOLDER
     392.  00:A474                      
     393.  00:A474                      sprite_beholder1_1:
     394.  00:A474                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     394.  00:A474  FF FF FF FF FF FF FF FF 
     395.  00:A47C                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     395.  00:A47C  FF FF FF FF FF FF FF FF 
     396.  00:A484                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     396.  00:A484  FF FF FF FF FF FF FF FF 
     397.  00:A48C                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     397.  00:A48C  FF FF FF FF FF FF FF FF 
     398.  00:A494                      
     399.  00:A494                      sprite_beholder2_1:
     400.  00:A494                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     400.  00:A494  FF FF FF FF FF FF FF FF 
     401.  00:A49C                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     401.  00:A49C  FF FF FF FF FF FF FF FF 
     402.  00:A4A4                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     402.  00:A4A4  FF FF FF FF FF FF FF FF 
     403.  00:A4AC                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     403.  00:A4AC  FF FF FF FF FF FF FF FF 
     404.  00:A4B4                      
     405.  00:A4B4                      sprite_beholder3_1:
     406.  00:A4B4                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     406.  00:A4B4  FF FF FF FF FF FF FF FF 
     407.  00:A4BC                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     407.  00:A4BC  FF FF FF FF FF FF FF FF 
     408.  00:A4C4                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     408.  00:A4C4  FF FF FF FF FF FF FF FF 
     409.  00:A4CC                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     409.  00:A4CC  FF FF FF FF FF FF FF FF 
     410.  00:A4D4                      
     411.  00:A4D4                      sprite_beholder4_1:
     412.  00:A4D4                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     412.  00:A4D4  FF FF FF FF FF FF FF FF 
     413.  00:A4DC                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     413.  00:A4DC  FF FF FF FF FF FF FF FF 
     414.  00:A4E4                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     414.  00:A4E4  FF FF FF FF FF FF FF FF 
     415.  00:A4EC                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF	
     415.  00:A4EC  FF FF FF FF FF FF FF FF 
     416.  00:A4F4                      	
     417.  00:A4F4                      sprite_beholder1_2:
     418.  00:A4F4                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     418.  00:A4F4  FF FF FF FF FF FF FF FF 
     419.  00:A4FC                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     419.  00:A4FC  FF FF FF FF FF FF FF FF 
     420.  00:A504                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     420.  00:A504  FF FF FF FF FF FF FF FF 
     421.  00:A50C                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     421.  00:A50C  FF FF FF FF FF FF FF FF 
     422.  00:A514                      
     423.  00:A514                      sprite_beholder2_2:
     424.  00:A514                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     424.  00:A514  FF FF FF FF FF FF FF FF 
     425.  00:A51C                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     425.  00:A51C  FF FF FF FF FF FF FF FF 
     426.  00:A524                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     426.  00:A524  FF FF FF FF FF FF FF FF 
     427.  00:A52C                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     427.  00:A52C  FF FF FF FF FF FF FF FF 
     428.  00:A534                      
     429.  00:A534                      sprite_beholder3_2:
     430.  00:A534                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     430.  00:A534  FF FF FF FF FF FF FF FF 
     431.  00:A53C                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     431.  00:A53C  FF FF FF FF FF FF FF FF 
     432.  00:A544                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     432.  00:A544  FF FF FF FF FF FF FF FF 
     433.  00:A54C                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     433.  00:A54C  FF FF FF FF FF FF FF FF 
     434.  00:A554                      
     435.  00:A554                      sprite_beholder4_2:
     436.  00:A554                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     436.  00:A554  FF FF FF FF FF FF FF FF 
     437.  00:A55C                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     437.  00:A55C  FF FF FF FF FF FF FF FF 
     438.  00:A564                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     438.  00:A564  FF FF FF FF FF FF FF FF 
     439.  00:A56C                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF		
     439.  00:A56C  FF FF FF FF FF FF FF FF 
     440.  00:A574                      	
     441.  00:A574                      ;; VAMPIRO
     442.  00:A574                      
     443.  00:A574                      sprite_vampiro1_1:
     444.  00:A574                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     444.  00:A574  FF FF FF FF FF FF FF FF 
     445.  00:A57C                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     445.  00:A57C  FF FF FF FF FF FF FF FF 
     446.  00:A584                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     446.  00:A584  FF FF FF FF FF FF FF FF 
     447.  00:A58C                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     447.  00:A58C  FF FF FF FF FF FF FF FF 
     448.  00:A594                      
     449.  00:A594                      sprite_vampiro2_1:
     450.  00:A594                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     450.  00:A594  FF FF FF FF FF FF FF FF 
     451.  00:A59C                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     451.  00:A59C  FF FF FF FF FF FF FF FF 
     452.  00:A5A4                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     452.  00:A5A4  FF FF FF FF FF FF FF FF 
     453.  00:A5AC                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     453.  00:A5AC  FF FF FF FF FF FF FF FF 
     454.  00:A5B4                      
     455.  00:A5B4                      sprite_vampiro1_2:
     456.  00:A5B4                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     456.  00:A5B4  FF FF FF FF FF FF FF FF 
     457.  00:A5BC                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     457.  00:A5BC  FF FF FF FF FF FF FF FF 
     458.  00:A5C4                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     458.  00:A5C4  FF FF FF FF FF FF FF FF 
     459.  00:A5CC                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     459.  00:A5CC  FF FF FF FF FF FF FF FF 
     460.  00:A5D4                      
     461.  00:A5D4                      sprite_vampiro2_2:
     462.  00:A5D4                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     462.  00:A5D4  FF FF FF FF FF FF FF FF 
     463.  00:A5DC                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     463.  00:A5DC  FF FF FF FF FF FF FF FF 
     464.  00:A5E4                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     464.  00:A5E4  FF FF FF FF FF FF FF FF 
     465.  00:A5EC                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     465.  00:A5EC  FF FF FF FF FF FF FF FF 
     466.  00:A5F4                      	
     467.  00:A5F4                      ;; MANOIZQ
     468.  00:A5F4                      
     469.  00:A5F4                      sprite_manoizq1:
     470.  00:A5F4                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     470.  00:A5F4  FF FF FF FF FF FF FF FF 
     471.  00:A5FC                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     471.  00:A5FC  FF FF FF FF FF FF FF FF 
     472.  00:A604                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     472.  00:A604  FF FF FF FF FF FF FF FF 
     473.  00:A60C                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     473.  00:A60C  FF FF FF FF FF FF FF FF 
     474.  00:A614                      	
     475.  00:A614                      sprite_manoizq2:
     476.  00:A614                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     476.  00:A614  FF FF FF FF FF FF FF FF 
     477.  00:A61C                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     477.  00:A61C  FF FF FF FF FF FF FF FF 
     478.  00:A624                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     478.  00:A624  FF FF FF FF FF FF FF FF 
     479.  00:A62C                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     479.  00:A62C  FF FF FF FF FF FF FF FF 
     480.  00:A634                      	
     481.  00:A634                      sprite_manoizq3:
     482.  00:A634                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     482.  00:A634  FF FF FF FF FF FF FF FF 
     483.  00:A63C                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     483.  00:A63C  FF FF FF FF FF FF FF FF 
     484.  00:A644                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     484.  00:A644  FF FF FF FF FF FF FF FF 
     485.  00:A64C                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF	
     485.  00:A64C  FF FF FF FF FF FF FF FF 
     486.  00:A654                      	
     487.  00:A654                      ;; MANODER
     488.  00:A654                      
     489.  00:A654                      sprite_manoder1:
     490.  00:A654                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     490.  00:A654  FF FF FF FF FF FF FF FF 
     491.  00:A65C                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     491.  00:A65C  FF FF FF FF FF FF FF FF 
     492.  00:A664                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     492.  00:A664  FF FF FF FF FF FF FF FF 
     493.  00:A66C                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     493.  00:A66C  FF FF FF FF FF FF FF FF 
     494.  00:A674                      	
     495.  00:A674                      sprite_manoder2:
     496.  00:A674                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     496.  00:A674  FF FF FF FF FF FF FF FF 
     497.  00:A67C                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     497.  00:A67C  FF FF FF FF FF FF FF FF 
     498.  00:A684                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     498.  00:A684  FF FF FF FF FF FF FF FF 
     499.  00:A68C                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     499.  00:A68C  FF FF FF FF FF FF FF FF 
     500.  00:A694                      	
     501.  00:A694                      sprite_manoder3:
     502.  00:A694                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     502.  00:A694  FF FF FF FF FF FF FF FF 
     503.  00:A69C                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     503.  00:A69C  FF FF FF FF FF FF FF FF 
     504.  00:A6A4                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     504.  00:A6A4  FF FF FF FF FF FF FF FF 
     505.  00:A6AC                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF		
     505.  00:A6AC  FF FF FF FF FF FF FF FF 
     506.  00:A6B4                      	
     507.  00:A6B4                      	
     508.  00:A6B4                      	
     509.  00:A6B4                      	
     510.  00:A6B4                      	
     511.  00:A6B4                      	
     512.  00:A6B4                      	
     513.  00:A6B4                      	
     514.  00:A6B4                      	
     515.  00:A6B4                      	
     516.  00:A6B4                      	
     517.  00:A6B4                      	
     518.  00:A6B4                      	
     519.  00:A6B4                      	
     520.  00:A6B4                      	
     521.  00:A6B4                      	
     522.  00:A6B4                      	
     523.  00:A6B4                      	
     524.  00:A6B4                      	
     525.  00:A6B4                      	
     526.  00:A6B4                      	
     527.  00:A6B4                      	
     528.  00:A6B4                      	
     197   00:A6B4                      	
     198   00:A6B4                      	include "habitaciones.asm"
       1.  00:A6B4                      ;;=====================================================
       2.  00:A6B4                      ;;DEFINICIÓN DE HABITACIONES x NIVEL
       3.  00:A6B4                      ;;=====================================================	
       4.  00:A6B4                      
       5.  00:A6B4                      ; sólo voy a usar 7x7 pero como los arrays son lineales y voy a trabajar con matrices
       6.  00:A6B4                      ; me interesa que seande  8x8 aunque sólo trabaje con 7x7
       7.  00:A6B4                      
       8.  00:A6B4                      ; ojo... la primera linea corresponderá a la primera linea del castillo no a la última
       9.  00:A6B4                      
      10.  00:A6B4                      ;; definición de estructura de bits
      11.  00:A6B4                      ;16 bits por habitación
      12.  00:A6B4                      
      13.  00:A6B4                      ;NOTA: no es necesario asignar un bit para la puerta de arriba ya que en las habitaciones de la fila 7 sólo habrá una puerta que será una escalera
      14.  00:A6B4                      
      15.  00:A6B4                      ;~ 7 - sin asignar
      16.  00:A6B4                      ;~ 6 - sin asignar
      17.  00:A6B4                      ;~ 5 - esqueletos
      18.  00:A6B4                      ;~ 4 - todos los enemigos muertos 0 no y 1 ó <>0 => toca la variable "is_habitacion_terminada"
      19.  00:A6B4                      ;~ 0,1,2,3 - nº puertas 1 arriba 1 derecha 1 abajo 1 izquierda
      20.  00:A6B4                      
      21.  00:A6B4                      ;~ 7 - oracion
      22.  00:A6B4                      ;~ 6 - cruz
      23.  00:A6B4                      ;~ 5 - agua bendita
      24.  00:A6B4                      ;~ 4 - armadura
      25.  00:A6B4                      ;~ 3 - planta
      26.  00:A6B4                      ;~ 2 - vida extra
      27.  00:A6B4                      ;~ 1 - ballesta
      28.  00:A6B4                      ;~ 0 - antorchas
      29.  00:A6B4                      
      30.  00:A6B4                      ;importante: el byte de la columna 15 indicará con 1 y 0 habitaciones por las que se haya pasado
      31.  00:A6B4                      ;cuando se inicie la partida todos se pondrán a 0
      32.  00:A6B4                      ;por ejemplo 01000000b se ha pasado por la hab. 2 de esa fila en el nivel que sea
      33.  00:A6B4                      
      34.  00:A6B4                      habitacion_actual:
      35.  00:A6B4  00                  	db  0		;habitación donde se encuentre el prota. Se mete en una varible par traer todos los datos de golpe y no buscarlos varias veces
      36.  00:A6B5                      habitacion_extras:
      37.  00:A6B5  00                  	db	0		;donde van las ayudas de una habitación
      38.  00:A6B6                      habitacion_actual_puntero;
      39.  00:A6B6  00 00               	dw	0		;puntero para actualizar la habitación cuando se maten todos los enemigos
      40.  00:A6B8                      is_habitacion_terminada:
      41.  00:A6B8  00                  	db	0		;variable para consultar más rápido si se ha pasado (<>0 si se ha pasado y 0 no se ha pasado)
      42.  00:A6B9                      
      43.  00:A6B9                      
      44.  00:A6B9                      habitaciones_juego:
      45.  00:A6B9                      habitaciones_nivel0:
      46.  00:A6B9                      	db  00000000b,#C0,00000000b,#C0,00000000b,#01,00111010b,#01,00010000b,#C0,00000000b,#C0,00000000b,#C0,#00,#00 	;primera fila
      46.  00:A6B9  00 C0 00 C0 00 01 3A 01 10 C0 00 C0 00 C0 00 00 
      47.  00:A6C9                      	db  00000000b,#C0,00011100b,#C0,00011101b,#01,00011111b,#00,00011101b,#C0,00011001b,#C0,00000000b,#C0,#00,#00
      47.  00:A6C9  00 C0 1C C0 1D 01 1F 00 1D C0 19 C0 00 C0 00 00 
      48.  00:A6D9                      	db  00000000b,#C0,00011110b,#C0,00011111b,#00,00011111b,#00,00011111b,#C0,00011011b,#C0,00000000b,#C0,#00,#00
      48.  00:A6D9  00 C0 1E C0 1F 00 1F 00 1F C0 1B C0 00 C0 00 00 
      49.  00:A6E9                      	db  00000000b,#C0,00011010b,#C0,00011010b,#00,00010010b,#00,00011010b,#C0,00011010b,#C0,00000000b,#C0,#00,#00
      49.  00:A6E9  00 C0 1A C0 1A 00 12 00 1A C0 1A C0 00 C0 00 00 
      50.  00:A6F9                      	db  00000000b,#C0,00011010b,#C0,00011110b,#C0,00010101b,#C0,00011011b,#C0,00011010b,#C0,00000000b,#C0,#00,#00
      50.  00:A6F9  00 C0 1A C0 1E C0 15 C0 1B C0 1A C0 00 C0 00 00 
      51.  00:A709                      	db  00000000b,#C0,00010110b,#C0,00010111b,#C0,00011101b,#C0,00010111b,#C0,00010011b,#C0,00000000b,#C0,#00,#00
      51.  00:A709  00 C0 16 C0 17 C0 1D C0 17 C0 13 C0 00 C0 00 00 
      52.  00:A719                      	db  00000000b,#C0,00000000b,#C0,00000000b,#C0,00111010b,#C0,00011000b,#C0,00000000b,#C0,00000000b,#C0,#00,#00	;última fila
      52.  00:A719  00 C0 00 C0 00 C0 3A C0 18 C0 00 C0 00 C0 00 00 
      53.  00:A729                      	
      54.  00:A729                      habitaciones_nivel1:
      55.  00:A729                      	db  00000000b,#C0,00000000b,#C0,00000000b,#00,00011010b,#00,00010000b,#C0,00000000b,#C0,00000000b,#C0,#00,#00 	;primera fila
      55.  00:A729  00 C0 00 C0 00 00 1A 00 10 C0 00 C0 00 C0 00 00 
      56.  00:A739                      	db  00000000b,#C0,00011100b,#C0,00011101b,#00,00011111b,#00,00011101b,#C0,00011001b,#C0,00000000b,#C0,#00,#00
      56.  00:A739  00 C0 1C C0 1D 00 1F 00 1D C0 19 C0 00 C0 00 00 
      57.  00:A749                      	db  00000000b,#C0,00011110b,#C0,00011111b,#00,00011111b,#00,00011111b,#C0,00011011b,#C0,00000000b,#C0,#00,#00
      57.  00:A749  00 C0 1E C0 1F 00 1F 00 1F C0 1B C0 00 C0 00 00 
      58.  00:A759                      	db  00000000b,#C0,00011010b,#C0,00011010b,#00,00010010b,#00,00011010b,#C0,00011010b,#C0,00000000b,#C0,#00,#00
      58.  00:A759  00 C0 1A C0 1A 00 12 00 1A C0 1A C0 00 C0 00 00 
      59.  00:A769                      	db  00000000b,#C0,00011010b,#C0,00011110b,#C0,00010101b,#C0,00011011b,#C0,00011010b,#C0,00000000b,#C0,#00,#00
      59.  00:A769  00 C0 1A C0 1E C0 15 C0 1B C0 1A C0 00 C0 00 00 
      60.  00:A779                      	db  00000000b,#C0,00010110b,#C0,00010111b,#C0,00011101b,#C0,00010111b,#C0,00010011b,#C0,00000000b,#C0,#00,#00
      60.  00:A779  00 C0 16 C0 17 C0 1D C0 17 C0 13 C0 00 C0 00 00 
      61.  00:A789                      	db  00000000b,#C0,00000000b,#C0,00000000b,#C0,00011010b,#C0,00011000b,#C0,00000000b,#C0,00000000b,#C0,#00,#00	;última fila
      61.  00:A789  00 C0 00 C0 00 C0 1A C0 18 C0 00 C0 00 C0 00 00 
      62.  00:A799                      	
      63.  00:A799                      habitaciones_nivel2:
      64.  00:A799                      	db  00000000b,#C0,00000000b,#C0,00000000b,#00,00011010b,#00,00010000b,#C0,00000000b,#C0,00000000b,#C0,#00,#00 	;primera fila
      64.  00:A799  00 C0 00 C0 00 00 1A 00 10 C0 00 C0 00 C0 00 00 
      65.  00:A7A9                      	db  00000000b,#C0,00011100b,#C0,00011101b,#00,00011111b,#00,00011101b,#C0,00011001b,#C0,00000000b,#C0,#00,#00
      65.  00:A7A9  00 C0 1C C0 1D 00 1F 00 1D C0 19 C0 00 C0 00 00 
      66.  00:A7B9                      	db  00000000b,#C0,00011110b,#C0,00011111b,#00,00011111b,#00,00011111b,#C0,00011011b,#C0,00000000b,#C0,#00,#00
      66.  00:A7B9  00 C0 1E C0 1F 00 1F 00 1F C0 1B C0 00 C0 00 00 
      67.  00:A7C9                      	db  00000000b,#C0,00011010b,#C0,00011010b,#00,00010010b,#00,00011010b,#C0,00011010b,#C0,00000000b,#C0,#00,#00
      67.  00:A7C9  00 C0 1A C0 1A 00 12 00 1A C0 1A C0 00 C0 00 00 
      68.  00:A7D9                      	db  00000000b,#C0,00011010b,#C0,00011110b,#C0,00010101b,#C0,00011011b,#C0,00011010b,#C0,00000000b,#C0,#00,#00
      68.  00:A7D9  00 C0 1A C0 1E C0 15 C0 1B C0 1A C0 00 C0 00 00 
      69.  00:A7E9                      	db  00000000b,#C0,00010110b,#C0,00010111b,#C0,00011101b,#C0,00010111b,#C0,00010011b,#C0,00000000b,#C0,#00,#00
      69.  00:A7E9  00 C0 16 C0 17 C0 1D C0 17 C0 13 C0 00 C0 00 00 
      70.  00:A7F9                      	db  00000000b,#C0,00000000b,#C0,00000000b,#C0,00011010b,#C0,00011000b,#C0,00000000b,#C0,00000000b,#C0,#00,#00	;última fila
      70.  00:A7F9  00 C0 00 C0 00 C0 1A C0 18 C0 00 C0 00 C0 00 00 
      71.  00:A809                      	
      72.  00:A809                      habitaciones_nivel3:
      73.  00:A809                      	db  00000000b,#C0,00000000b,#C0,00000000b,#00,00011010b,#00,00010000b,#C0,00000000b,#C0,00000000b,#C0,#00,#00 	;primera fila
      73.  00:A809  00 C0 00 C0 00 00 1A 00 10 C0 00 C0 00 C0 00 00 
      74.  00:A819                      	db  00000000b,#C0,00011100b,#C0,00011101b,#00,00011111b,#00,00011101b,#C0,00011001b,#C0,00000000b,#C0,#00,#00
      74.  00:A819  00 C0 1C C0 1D 00 1F 00 1D C0 19 C0 00 C0 00 00 
      75.  00:A829                      	db  00000000b,#C0,00011110b,#C0,00011111b,#00,00011111b,#00,00011111b,#C0,00011011b,#C0,00000000b,#C0,#00,#00
      75.  00:A829  00 C0 1E C0 1F 00 1F 00 1F C0 1B C0 00 C0 00 00 
      76.  00:A839                      	db  00000000b,#C0,00011010b,#C0,00011010b,#00,00010010b,#00,00011010b,#C0,00011010b,#C0,00000000b,#C0,#00,#00
      76.  00:A839  00 C0 1A C0 1A 00 12 00 1A C0 1A C0 00 C0 00 00 
      77.  00:A849                      	db  00000000b,#C0,00011010b,#C0,00011110b,#C0,00010101b,#C0,00011011b,#C0,00011010b,#C0,00000000b,#C0,#00,#00
      77.  00:A849  00 C0 1A C0 1E C0 15 C0 1B C0 1A C0 00 C0 00 00 
      78.  00:A859                      	db  00000000b,#C0,00010110b,#C0,00010111b,#C0,00011101b,#C0,00010111b,#C0,00010011b,#C0,00000000b,#C0,#00,#00
      78.  00:A859  00 C0 16 C0 17 C0 1D C0 17 C0 13 C0 00 C0 00 00 
      79.  00:A869                      	db  00000000b,#C0,00000000b,#C0,00000000b,#C0,00011010b,#C0,00011000b,#C0,00000000b,#C0,00000000b,#C0,#00,#00	;última fila
      79.  00:A869  00 C0 00 C0 00 C0 1A C0 18 C0 00 C0 00 C0 00 00 
      80.  00:A879                      	
      81.  00:A879                      habitaciones_nivel4:
      82.  00:A879                      	db  00000000b,#C0,00000000b,#C0,00000000b,#00,00011010b,#00,00010000b,#C0,00000000b,#C0,00000000b,#C0,#00,#00 	;primera fila
      82.  00:A879  00 C0 00 C0 00 00 1A 00 10 C0 00 C0 00 C0 00 00 
      83.  00:A889                      	db  00000000b,#C0,00011100b,#C0,00011101b,#00,00011111b,#00,00011101b,#C0,00011001b,#C0,00000000b,#C0,#00,#00
      83.  00:A889  00 C0 1C C0 1D 00 1F 00 1D C0 19 C0 00 C0 00 00 
      84.  00:A899                      	db  00000000b,#C0,00011110b,#C0,00011111b,#00,00011111b,#00,00011111b,#C0,00011011b,#C0,00000000b,#C0,#00,#00
      84.  00:A899  00 C0 1E C0 1F 00 1F 00 1F C0 1B C0 00 C0 00 00 
      85.  00:A8A9                      	db  00000000b,#C0,00011010b,#C0,00011010b,#00,00010010b,#00,00011010b,#C0,00011010b,#C0,00000000b,#C0,#00,#00
      85.  00:A8A9  00 C0 1A C0 1A 00 12 00 1A C0 1A C0 00 C0 00 00 
      86.  00:A8B9                      	db  00000000b,#C0,00011010b,#C0,00011110b,#C0,00010101b,#C0,00011011b,#C0,00011010b,#C0,00000000b,#C0,#00,#00
      86.  00:A8B9  00 C0 1A C0 1E C0 15 C0 1B C0 1A C0 00 C0 00 00 
      87.  00:A8C9                      	db  00000000b,#C0,00010110b,#C0,00010111b,#C0,00011101b,#C0,00010111b,#C0,00010011b,#C0,00000000b,#C0,#00,#00
      87.  00:A8C9  00 C0 16 C0 17 C0 1D C0 17 C0 13 C0 00 C0 00 00 
      88.  00:A8D9                      	db  00000000b,#C0,00000000b,#C0,00000000b,#C0,00011010b,#C0,00011000b,#C0,00000000b,#C0,00000000b,#C0,#00,#00	;última fila
      88.  00:A8D9  00 C0 00 C0 00 C0 1A C0 18 C0 00 C0 00 C0 00 00 
      89.  00:A8E9                      	
      90.  00:A8E9                      habitaciones_nivel5:
      91.  00:A8E9                      	db  00000000b,#C0,00000000b,#C0,00000000b,#00,00011010b,#00,00010000b,#C0,00000000b,#C0,00000000b,#C0,#00,#00 	;primera fila
      91.  00:A8E9  00 C0 00 C0 00 00 1A 00 10 C0 00 C0 00 C0 00 00 
      92.  00:A8F9                      	db  00000000b,#C0,00011100b,#C0,00011101b,#00,00011111b,#00,00011101b,#C0,00011001b,#C0,00000000b,#C0,#00,#00
      92.  00:A8F9  00 C0 1C C0 1D 00 1F 00 1D C0 19 C0 00 C0 00 00 
      93.  00:A909                      	db  00000000b,#C0,00011110b,#C0,00011111b,#00,00011111b,#00,00011111b,#C0,00011011b,#C0,00000000b,#C0,#00,#00
      93.  00:A909  00 C0 1E C0 1F 00 1F 00 1F C0 1B C0 00 C0 00 00 
      94.  00:A919                      	db  00000000b,#C0,00011010b,#C0,00011010b,#00,00010010b,#00,00011010b,#C0,00011010b,#C0,00000000b,#C0,#00,#00
      94.  00:A919  00 C0 1A C0 1A 00 12 00 1A C0 1A C0 00 C0 00 00 
      95.  00:A929                      	db  00000000b,#C0,00011010b,#C0,00011110b,#C0,00010101b,#C0,00011011b,#C0,00011010b,#C0,00000000b,#C0,#00,#00
      95.  00:A929  00 C0 1A C0 1E C0 15 C0 1B C0 1A C0 00 C0 00 00 
      96.  00:A939                      	db  00000000b,#C0,00010110b,#C0,00010111b,#C0,00011101b,#C0,00010111b,#C0,00010011b,#C0,00000000b,#C0,#00,#00
      96.  00:A939  00 C0 16 C0 17 C0 1D C0 17 C0 13 C0 00 C0 00 00 
      97.  00:A949                      	db  00000000b,#C0,00000000b,#C0,00000000b,#C0,00011010b,#C0,00011000b,#C0,00000000b,#C0,00000000b,#C0,#00,#00	;última fila
      97.  00:A949  00 C0 00 C0 00 C0 1A C0 18 C0 00 C0 00 C0 00 00 
      98.  00:A959                      	
      99.  00:A959                      habitaciones_nivel6:
     100.  00:A959                      	db  00000000b,#C0,00000000b,#C0,00000000b,#00,00011010b,#00,00010000b,#C0,00000000b,#C0,00000000b,#C0,#00,#00 	;primera fila
     100.  00:A959  00 C0 00 C0 00 00 1A 00 10 C0 00 C0 00 C0 00 00 
     101.  00:A969                      	db  00000000b,#C0,00011100b,#C0,00011101b,#00,00011111b,#00,00011101b,#C0,00011001b,#C0,00000000b,#C0,#00,#00
     101.  00:A969  00 C0 1C C0 1D 00 1F 00 1D C0 19 C0 00 C0 00 00 
     102.  00:A979                      	db  00000000b,#C0,00011110b,#C0,00011111b,#00,00011111b,#00,00011111b,#C0,00011011b,#C0,00000000b,#C0,#00,#00
     102.  00:A979  00 C0 1E C0 1F 00 1F 00 1F C0 1B C0 00 C0 00 00 
     103.  00:A989                      	db  00000000b,#C0,00011010b,#C0,00011010b,#00,00010010b,#00,00011010b,#C0,00011010b,#C0,00000000b,#C0,#00,#00
     103.  00:A989  00 C0 1A C0 1A 00 12 00 1A C0 1A C0 00 C0 00 00 
     104.  00:A999                      	db  00000000b,#C0,00011010b,#C0,00011110b,#C0,00010101b,#C0,00011011b,#C0,00011010b,#C0,00000000b,#C0,#00,#00
     104.  00:A999  00 C0 1A C0 1E C0 15 C0 1B C0 1A C0 00 C0 00 00 
     105.  00:A9A9                      	db  00000000b,#C0,00010110b,#C0,00010111b,#C0,00011101b,#C0,00010111b,#C0,00010011b,#C0,00000000b,#C0,#00,#00
     105.  00:A9A9  00 C0 16 C0 17 C0 1D C0 17 C0 13 C0 00 C0 00 00 
     106.  00:A9B9                      	db  00000000b,#C0,00000000b,#C0,00000000b,#C0,00011010b,#C0,00011000b,#C0,00000000b,#C0,00000000b,#C0,#00,#00	;última fila
     106.  00:A9B9  00 C0 00 C0 00 C0 1A C0 18 C0 00 C0 00 C0 00 00 
     107.  00:A9C9                      
     108.  00:A9C9                      
     199   00:A9C9                      	
     200   00:A9C9                      	include "variables.asm"
       1.  00:A9C9                      ;;=====================================================
       2.  00:A9C9                      ;;DEFINICIÓN DE VARIABLES
       3.  00:A9C9                      ;;=====================================================
       4.  00:A9C9                      
       5.  00:A9C9                      ;Colores base de la pantalla
       6.  00:A9C9                      color_base:
       7.  00:A9C9  01 01 01            			DB		COLNEGRO,COLNEGRO,COLNEGRO	
       8.  00:A9CC                      ;colores de pantalla cuando se tira bomba
       9.  00:A9CC                      color_bomba1:
      10.  00:A9CC  08 08 08            			DB		COLROJO,COLROJO,COLROJO
      11.  00:A9CF                      color_bomba2:
      12.  00:A9CF  06 06 06            			DB		COLROJOOSC,COLROJOOSC,COLROJOOSC
      13.  00:A9D2                      
      14.  00:A9D2                      ;definicion de variable del prota usando la estructura del punto de mira
      15.  00:A9D2                      prota:		ESTRUCTURA_PUNTOMIRA
      15.  00:A9D2  78 6C 00 00 00 05 00 00 00 00 00 00 00 00 00 00 
      16.  00:A9E2                      ;variables globales del prota
      17.  00:A9E2                      prota_nivel:			;nivel del castillo donde está 0-6
      18.  00:A9E2  00                  			DB		0
      19.  00:A9E3                      prota_vidas:
      20.  00:A9E3  00                  			DB		0
      21.  00:A9E4                      prota_reliquias:
      22.  00:A9E4  03                  			DB		3
      23.  00:A9E5                      prota_pos_mapx:
      24.  00:A9E5  00                  			DB		0	;pos columna
      25.  00:A9E6                      prota_pos_mapy:
      26.  00:A9E6  00                  			DB		0	;pos fila
      27.  00:A9E7                      prota_energia:
      28.  00:A9E7  FA                  			DB		250
      29.  00:A9E8                      
      30.  00:A9E8                      ;array para pintar de golpe el marcador de vidas
      31.  00:A9E8                      array_aux_vidas: 		
      32.  00:A9E8                      			DB		0,0,0,0,0,0,0,0
      32.  00:A9E8  00 00 00 00 00 00 00 00 
      33.  00:A9F0                      
      34.  00:A9F0                      ;array para pintar de golpe el marcador de reliquias
      35.  00:A9F0                      array_aux_reliquias:	
      36.  00:A9F0                      			DB		0,0,0,0,0,0,0,0
      36.  00:A9F0  00 00 00 00 00 00 00 00 
      37.  00:A9F8                      
      38.  00:A9F8                      array_aux_energia:					;array para pintar de golpe el marcador de energía
      39.  00:A9F8                      			DB		16,0,0,0,0,0,0 	;el 16 primero es porque siempre estará pintado el cuadro primero rojo
      39.  00:A9F8  10 00 00 00 00 00 00 
      40.  00:A9FF                      ultimo_pos_array_aux_energia:
      41.  00:A9FF  00                  			DB		0				;el array completo es de 8 pero para posicionar sin niecesidad de cálculos  etiqueto este aparte
      42.  00:AA00                      			
      43.  00:AA00                      array_aux_mapa_limpiar:	;es por facilitar el reseteo del mapa (pinto 7 lineas en negro con bios) la otra opción es más larga en código y complicada aunque más rápida
      44.  00:AA00                      			DB		0,0,0,0,0,0,0
      44.  00:AA00  00 00 00 00 00 00 00 
      45.  00:AA07                      elemento_pintar_mapa:
      46.  00:AA07  00                  			DB		0	;TILEPROTAM = 19, ;TILEGRISM = 9
      47.  00:AA08                      			
      48.  00:AA08                      ;; nota importante: cada vez que se cambie de nivel se actualizará el contenido
      49.  00:AA08                      
      50.  00:AA08                      
      51.  00:AA08                      lista_ayudas:
      52.  00:AA08  00 (16)             ayuda_oracion:		DS		ESTRUCTURA_AYUDA		
      53.  00:AA18  00 (16)             ayuda_cruz:			DS		ESTRUCTURA_AYUDA
      54.  00:AA28  00 (16)             ayuda_aguabendita:	DS		ESTRUCTURA_AYUDA
      55.  00:AA38  00 (16)             ayuda_armadura:		DS		ESTRUCTURA_AYUDA
      56.  00:AA48  00 (16)             ayuda_planta:		DS		ESTRUCTURA_AYUDA
      57.  00:AA58  00 (16)             ayuda_vidaextra		DS		ESTRUCTURA_AYUDA
      58.  00:AA68  00 (16)             ayuda_ballesta:		DS		ESTRUCTURA_AYUDA
      59.  00:AA78                      
      60.  00:AA78                      ;datos ayudas
      61.  00:AA78                      datos_oracion:
      62.  00:AA78  00                  				DB    	0				;0 no activo <>0 activo															0
      63.  00:AA79  E1 AA               				DW		array_oracionon	;pos en memoria ver array_ayudas de cómo se mostrarán (wordaux2)				1,2
      64.  00:AA7B  E5 AA               				DW		array_oracionoff;pos en memoria ver array_ayudas de cómo se mostrarán (wordaux2)				3,4
      65.  00:AA7D  A3                  				DB		POSORACION		;pos en pantalla (memoria en el banco 1 se le suma 256 + TILEMAP) (wordaux1)	5
      66.  00:AA7E  20                  				DB		POSORACIONX		;pos del pixel central (esquina superior + 8x)									6
      67.  00:AA7F  70                  				DB		POSAYUDASY		;pos del pixel central (esquina superior + 8y) (para toas igual)				7
      68.  00:AA80  4D 9C               				DW		accion_oracion	;subrutina que indica la acción si se dispara en el objeto						8,9
      69.  00:AA82                      datos_cruz:
      70.  00:AA82                      				;~ DB    	0				;0 no activo <>0 activo															0
      71.  00:AA82                      				;~ DW		array_cruzon	;pos en memoria ver array_ayudas de cómo se mostrarán (wordaux2)				1,2
      72.  00:AA82                      				;~ DW		array_cruzoff	;pos en memoria ver array_ayudas de cómo se mostrarán (wordaux2)				3,4
      73.  00:AA82                      				;~ DB		POSCRUZ			;pos en pantalla (memoria en el banco 1 se le suma 256 + TILEMAP) (wordaux1)	5
      74.  00:AA82                      				;~ DB		POSCRUZX		;pos del pixel central (esquina superior + 8x)									6
      75.  00:AA82                      				;~ DB		POSAYUDASY		;pos del pixel central (esquina superior + 8y) (para toas igual)				7
      76.  00:AA82                      				;~ DW		accion_cruz		;subrutina que indica la acción si se dispara en el objeto						8,9 
      77.  00:AA82                      				
      78.  00:AA82  00                  				DB    	0				;0 no activo <>0 activo															0
      79.  00:AA83  E9 AA               				DW		array_cruzon	;pos en memoria ver array_ayudas de cómo se mostrarán (wordaux2)				1,2
      80.  00:AA85  ED AA               				DW		array_cruzoff	;pos en memoria ver array_ayudas de cómo se mostrarán (wordaux2)				3,4
      81.  00:AA87  A7                  				DB		167			;pos en pantalla (memoria en el banco 1 se le suma 256 + TILEMAP) (wordaux1)	5
      82.  00:AA88  40                  				DB		64		;pos del pixel central (esquina superior + 8x)									6
      83.  00:AA89  70                  				DB		112		;pos del pixel central (esquina superior + 8y) (para toas igual)				7
      84.  00:AA8A  4E 9C               				DW		accion_cruz		;subrutina que indica la acción si se dispara en el objeto						8,9 
      85.  00:AA8C                      				
      86.  00:AA8C                      datos_aguabendita:
      87.  00:AA8C  00                  				DB    	0				;0 no activo <>0 activo															0
      88.  00:AA8D  F1 AA               				DW		array_aguaon	;pos en memoria ver array_ayudas de cómo se mostrarán (wordaux2)				1,2
      89.  00:AA8F  F5 AA               				DW		array_aguaoff	;pos en memoria ver array_ayudas de cómo se mostrarán (wordaux2)				3,4
      90.  00:AA91  AB                  				DB		POSAGUA			;pos en pantalla (memoria en el banco 1 se le suma 256 + TILEMAP) (wordaux1)	5
      91.  00:AA92  60                  				DB		POSAGUAX		;pos del pixel central (esquina superior + 8x)									6
      92.  00:AA93  70                  				DB		POSAYUDASY		;pos del pixel central (esquina superior + 8y) (para toas igual)				7
      93.  00:AA94  4F 9C               				DW		accion_agua		;subrutina que indica la acción si se dispara en el objeto						8,9
      94.  00:AA96  00                  				DB		0	;relleno																		10-16    
      95.  00:AA97  00                  				DB		0	;relleno																		10-16    
      96.  00:AA98  00                  				DB		0	;relleno																		10-16    
      97.  00:AA99  00                  				DB		0	;relleno																		10-16    
      98.  00:AA9A  00                  				DB		0	;relleno																		10-16    
      99.  00:AA9B  00                  				DB		0	;relleno																		10-16   
     100.  00:AA9C  00                  				DB		0	;relleno																		10-16    
     101.  00:AA9D                      datos_armadura:
     102.  00:AA9D  00                  				DB    	0				;0 no activo <>0 activo															0
     103.  00:AA9E  F9 AA               				DW		array_armaduraon;pos en memoria ver array_ayudas de cómo se mostrarán (wordaux2)				1,2
     104.  00:AAA0  FD AA               				DW		array_armaduraoff;pos en memoria ver array_ayudas de cómo se mostrarán (wordaux2)				3,4
     105.  00:AAA2  AF                  				DB		POSARMAD		;pos en pantalla (memoria en el banco 1 se le suma 256 + TILEMAP) (wordaux1)	5
     106.  00:AAA3  80                  				DB		POSARMADX		;pos del pixel central (esquina superior + 8x)									6
     107.  00:AAA4  70                  				DB		POSAYUDASY		;pos del pixel central (esquina superior + 8y) (para toas igual)				7
     108.  00:AAA5  50 9C               				DW		accion_armadura	;subrutina que indica la acción si se dispara en el objeto						8,9
     109.  00:AAA7  00                  				DB		0	;relleno																		10-16    
     110.  00:AAA8  00                  				DB		0	;relleno																		10-16    
     111.  00:AAA9  00                  				DB		0	;relleno																		10-16    
     112.  00:AAAA  00                  				DB		0	;relleno																		10-16    
     113.  00:AAAB  00                  				DB		0	;relleno																		10-16    
     114.  00:AAAC  00                  				DB		0	;relleno																		10-16   
     115.  00:AAAD  00                  				DB		0	;relleno																		10-16    
     116.  00:AAAE                      datos_planta:
     117.  00:AAAE  00                  				DB    	0				;0 no activo <>0 activo															0
     118.  00:AAAF  01 AB               				DW		array_plantaon	;pos en memoria ver array_ayudas de cómo se mostrarán (wordaux2)				1,2
     119.  00:AAB1  05 AB               				DW		array_plantaoff	;pos en memoria ver array_ayudas de cómo se mostrarán (wordaux2)				3,4
     120.  00:AAB3  B3                  				DB		POSPLANTA		;pos en pantalla (memoria en el banco 1 se le suma 256 + TILEMAP) (wordaux1)	5
     121.  00:AAB4  A0                  				DB		POSPLANTAX		;pos del pixel central (esquina superior + 8x)									6
     122.  00:AAB5  70                  				DB		POSAYUDASY		;pos del pixel central (esquina superior + 8y) (para toas igual)				7
     123.  00:AAB6  51 9C               				DW		accion_planta	;subrutina que indica la acción si se dispara en el objeto						8,9
     124.  00:AAB8  00                  				DB		0	;relleno																		10-16    
     125.  00:AAB9  00                  				DB		0	;relleno																		10-16    
     126.  00:AABA  00                  				DB		0	;relleno																		10-16    
     127.  00:AABB  00                  				DB		0	;relleno																		10-16    
     128.  00:AABC  00                  				DB		0	;relleno																		10-16    
     129.  00:AABD  00                  				DB		0	;relleno																		10-16   
     130.  00:AABE  00                  				DB		0	;relleno																		10-16     
     131.  00:AABF                      datos_vidaextra:
     132.  00:AABF  00                  				DB    	0				;0 no activo <>0 activo															0
     133.  00:AAC0  09 AB               				DW		array_extraon	;pos en memoria ver array_ayudas de cómo se mostrarán (wordaux2)				1,2
     134.  00:AAC2  0D AB               				DW		array_extraoff	;pos en memoria ver array_ayudas de cómo se mostrarán (wordaux2)				3,4
     135.  00:AAC4  B7                  				DB		POSVIDAEXT		;pos en pantalla (memoria en el banco 1 se le suma 256 + TILEMAP) (wordaux1)	5
     136.  00:AAC5  C0                  				DB		POSVIDAEXTX		;pos del pixel central (esquina superior + 8x)									6
     137.  00:AAC6  70                  				DB		POSAYUDASY		;pos del pixel central (esquina superior + 8y) (para toas igual)				7
     138.  00:AAC7  52 9C               				DW		accion_vidaextra;subrutina que indica la acción si se dispara en el objeto						8,9
     139.  00:AAC9  00                  				DB		0	;relleno																		10-16    
     140.  00:AACA  00                  				DB		0	;relleno																		10-16    
     141.  00:AACB  00                  				DB		0	;relleno																		10-16    
     142.  00:AACC  00                  				DB		0	;relleno																		10-16    
     143.  00:AACD  00                  				DB		0	;relleno																		10-16    
     144.  00:AACE  00                  				DB		0	;relleno																		10-16   
     145.  00:AACF  00                  				DB		0	;relleno																		10-16     
     146.  00:AAD0                      datos_ballesta:
     147.  00:AAD0  00                  				DB    	0				;0 no activo <>0 activo															0
     148.  00:AAD1  11 AB               				DW		array_ballestaon;pos en memoria ver array_ayudas de cómo se mostrarán (wordaux2)				1,2
     149.  00:AAD3  15 AB               				DW		array_ballestaoff;pos en memoria ver array_ayudas de cómo se mostrarán (wordaux2)				3,4
     150.  00:AAD5  BB                  				DB		POSBALLESTA		;pos en pantalla (memoria en el banco 1 se le suma 256 + TILEMAP) (wordaux1)	5
     151.  00:AAD6  E0                  				DB		POSBALLESTAX	;pos del pixel central (esquina superior + 8x)									6
     152.  00:AAD7  70                  				DB		POSAYUDASY		;pos del pixel central (esquina superior + 8y) (para toas igual)				7
     153.  00:AAD8  4D 9C               				DW		accion_oracion	;subrutina que indica la acción si se dispara en el objeto						8,9
     154.  00:AADA  00                  				DB		0	;relleno																		10-16    
     155.  00:AADB  00                  				DB		0	;relleno																		10-16    
     156.  00:AADC  00                  				DB		0	;relleno																		10-16    
     157.  00:AADD  00                  				DB		0	;relleno																		10-16    
     158.  00:AADE  00                  				DB		0	;relleno																		10-16    
     159.  00:AADF  00                  				DB		0	;relleno																		10-16   
     160.  00:AAE0  00                  				DB		0	;relleno																		10-16      
     161.  00:AAE1                      
     162.  00:AAE1                      
     163.  00:AAE1                      
     164.  00:AAE1                      
     165.  00:AAE1                      
     166.  00:AAE1                      ;array de ayudas
     167.  00:AAE1                      ;posición dentro del bank1 (o 0 que son iguales) de los tiles de la ayuda (cómo en los sprites de 2x2)
     168.  00:AAE1                      array_ayudas:
     169.  00:AAE1  C8 CA               array_oracionon:			DB	200,202
     170.  00:AAE3  C9 CB               array_oracionon1:			DB	201,203
     171.  00:AAE5  CC CE               array_oracionoff:			DB	204,206
     172.  00:AAE7  CD CF               array_oracionoff1:			DB	205,207
     173.  00:AAE9  D0 D2               array_cruzon:				DB	208,210
     174.  00:AAEB  D1 D3               array_cruzon1:				DB	209,211
     175.  00:AAED  D4 D6               array_cruzoff:				DB	212,214
     176.  00:AAEF  D5 D7               array_cruzoff1:				DB	213,215
     177.  00:AAF1  D8 DA               array_aguaon:				DB	216,218
     178.  00:AAF3  D9 DB               array_aguaon1:				DB	217,219
     179.  00:AAF5  DC DE               array_aguaoff:				DB	220,222
     180.  00:AAF7  DD DF               array_aguaoff1:				DB	221,223
     181.  00:AAF9  E0 E2               array_armaduraon:			DB	224,226
     182.  00:AAFB  E1 E3               array_armaduraon1:			DB	225,227
     183.  00:AAFD  E4 E6               array_armaduraoff:			DB	228,230
     184.  00:AAFF  E5 E7               array_armaduraoff1:			DB	229,231
     185.  00:AB01  E8 EA               array_plantaon:				DB	232,234
     186.  00:AB03  E9 EB               array_plantaon1:			DB	233,235
     187.  00:AB05  EC EE               array_plantaoff:			DB	236,238
     188.  00:AB07  ED EF               array_plantaoff1:			DB	237,239
     189.  00:AB09  F0 F2               array_extraon:				DB	240,242
     190.  00:AB0B  F1 F3               array_extraon1:				DB	241,243
     191.  00:AB0D  F4 F6               array_extraoff:				DB	244,246
     192.  00:AB0F  F5 F7               array_extraoff1:			DB	245,247
     193.  00:AB11  F8 FA               array_ballestaon:			DB	248,250
     194.  00:AB13  F9 FB               array_ballestaon1:			DB	249,251
     195.  00:AB15  FC FE               array_ballestaoff:			DB	252,254
     196.  00:AB17  FD FF               array_ballestaoff1:			DB	253,255
     197.  00:AB19                      
     198.  00:AB19  00 (7)              antorchas:			DS		ESTRUCTURA_ANTORCHA
     199.  00:AB20  C5 C6 C7            array_antorcha:				DB	197,198,199	;fuego + madera1 + madera2
     200.  00:AB23                      
     201.  00:AB23  00 (7)              esqueletos:			DS		ESTRUCTURA_ESQUELETO
     202.  00:AB2A                      array_esqueleto:			DB	194, 0, 195, 160, 164, 161, 0, 163, 0, 193, 162, 192
     202.  00:AB2A  C2 00 C3 A0 A4 A1 00 A3 00 C1 A2 C0 
     203.  00:AB36  A4 A5 A4 A6         lista_escenas_calavera:		DB	164, 165, 164, 166
     204.  00:AB3A                      
     205.  00:AB3A                      
     206.  00:AB3A                      
     207.  00:AB3A                      
     208.  00:AB3A                      ;array de 4 bytes x 32 sprites posibles en pantalla que sobreescribirá la tabla de sprites actualizando VRAM
     209.  00:AB3A                      array_sprites:
     210.  00:AB3A  00 (8)              array_sprites_pm:				DS	2 * 4
     211.  00:AB42  00 (120)            array_sprites_enem:				DS	30 * 4
     212.  00:ABBA  00 (140)            lista_enemigos:					DS	10 * ESTRUCTURA_ENEMIGO
     213.  00:AC46                      ; puntero al array a pintar en VRAM
     214.  00:AC46  00 00               puntero_array_atrib_array_VRAM: DW	0	;ARRAYSPTRIES + 8
     215.  00:AC48                      
     216.  00:AC48                      
     217.  00:AC48                      
     218.  00:AC48                      
     219.  00:AC48                      
     201   00:AC48                      	
     202   00:AC48                      ;;=====================================================
     203   00:AC48                      ;;DEFINICIÓN DE PANTALLAS
     204   00:AC48                      ;;=====================================================		
     205   00:AC48                      	include "pantallas.asm"
       1.  00:AC48                      ;;=====================================================
       2.  00:AC48                      ;;DEFINICIÓN DE PANTALLAS
       3.  00:AC48                      ;;=====================================================		
       4.  00:AC48                      
       5.  00:AC48                      ; bancos 1 y 2 y de pantalla 1 
       6.  00:AC48                      ; se usa un banco común (en este caso el banco 1)
       7.  00:AC48                      ; el mapa afecta al banco 1 y 2
       8.  00:AC48  (022A)              tiles_patrones_nivel0:	incbin "pantallas/nivel0.bank1.til.bin.chr.plet5"
       9.  00:AE72  (006B)              tiles_color_nivel0:		incbin "pantallas/nivel0.bank1.til.bin.clr.plet5"
      10.  00:AEDD  (0035)              tiles_mapa_nivel0:		incbin "pantallas/nivel0.bank01.map.bin.plet5"
      11.  00:AF12                      
      12.  00:AF12  (01B5)              tiles_patrones_nivel1:	incbin "pantallas/nivel1.bank1.til.bin.chr.plet5"
      13.  00:B0C7  (0047)              tiles_color_nivel1:		incbin "pantallas/nivel1.bank1.til.bin.clr.plet5"
      14.  00:B10E  (0035)              tiles_mapa_nivel1:		incbin "pantallas/nivel1.bank01.map.bin.plet5"
      15.  00:B143                      
      16.  00:B143  (01B5)              tiles_patrones_nivel2:	incbin "pantallas/nivel2.bank1.til.bin.chr.plet5"
      17.  00:B2F8  (0047)              tiles_color_nivel2:		incbin "pantallas/nivel2.bank1.til.bin.clr.plet5"
      18.  00:B33F  (0035)              tiles_mapa_nivel2:		incbin "pantallas/nivel2.bank01.map.bin.plet5"
      19.  00:B374                      
      20.  00:B374  (01B5)              tiles_patrones_nivel3:	incbin "pantallas/nivel3.bank1.til.bin.chr.plet5"
      21.  00:B529  (0047)              tiles_color_nivel3:		incbin "pantallas/nivel3.bank1.til.bin.clr.plet5"
      22.  00:B570  (0035)              tiles_mapa_nivel3:		incbin "pantallas/nivel3.bank01.map.bin.plet5"
      23.  00:B5A5                      
      24.  00:B5A5  (01B5)              tiles_patrones_nivel4:	incbin "pantallas/nivel4.bank1.til.bin.chr.plet5"
      25.  00:B75A  (0047)              tiles_color_nivel4:		incbin "pantallas/nivel4.bank1.til.bin.clr.plet5"
      26.  00:B7A1  (0035)              tiles_mapa_nivel4:		incbin "pantallas/nivel4.bank01.map.bin.plet5"
      27.  00:B7D6                      
      28.  00:B7D6  (01B5)              tiles_patrones_nivel5:	incbin "pantallas/nivel5.bank1.til.bin.chr.plet5"
      29.  00:B98B  (0047)              tiles_color_nivel5:		incbin "pantallas/nivel5.bank1.til.bin.clr.plet5"
      30.  00:B9D2  (0035)              tiles_mapa_nivel5:		incbin "pantallas/nivel5.bank01.map.bin.plet5"
      31.  00:BA07                      
      32.  00:BA07  (01B5)              tiles_patrones_nivel6:	incbin "pantallas/nivel6.bank1.til.bin.chr.plet5"
      33.  00:BBBC  (0047)              tiles_color_nivel6:		incbin "pantallas/nivel6.bank1.til.bin.clr.plet5"
      34.  00:BC03  (0035)              tiles_mapa_nivel6:		incbin "pantallas/nivel6.bank01.map.bin.plet5"
      35.  00:BC38                      
      36.  00:BC38                      ; 3º banco que es la parte de puntos, vidas, mapas, etc... es común
      37.  00:BC38  (014C)              tiles_patrones_marcador:	incbin "pantallas/marcador.til.bin.chr.plet5"
      38.  00:BD84  (0035)              tiles_color_marcador:		incbin "pantallas/marcador.til.bin.clr.plet5"
      39.  00:BDB9  (0062)              tiles_mapa_marcador:		incbin "pantallas/marcador.map.bin.plet5"
      40.  00:BE1B                      
      41.  00:BE1B                      ;NOTA: FALTARÍAN PANTALLAS ESPECIALES (POR DEFINIR)
      42.  00:BE1B                      ; INICIO
      43.  00:BE1B                      ; GAME OVER
      44.  00:BE1B                      ; HUIDA
      45.  00:BE1B                      ; 2 FINAL BUENO
      46.  00:BE1B                      ; 1 FINAL MALO
     206   00:BE1B                      
     207   00:BE1B                      END:

    LABELS
-------------------------------------------------
00:000000D8 X GTTRIG
00:000000D5 X GTSTCK
00:0000F3DB   CLIKSW
00:0000013E X RDVDP
00:00000047   WRTVDP
00:0000005C   LDIRVM
00:00000059 X LDIRMV
00:0000005F   CHGMOD
00:00000041 X DISSCR
00:00000044 X ENASCR
00:00000062   CHGCLR
00:0000F3E9   FORCLR
00:0000F3EA   BAKCLR
00:0000F3EB   BDRCLR
00:000000C3   CLS
00:0000F3DF X RG0SAV
00:0000F3E0   RG1SAV
00:0000F3E1 X RG2SAV
00:0000F3E2 X RG3SAV
00:0000F3E3 X RG4SAV
00:0000F3E4 X RG5SAV
00:0000F3E5 X RG6SAV
00:0000F3E6 X RG7SAV
00:0000F3E7 X STATFL
00:00000099   REGEST
00:00000098   REGESCVDP
00:000000A0   PSG_A
00:000000A1   PSG_W
00:000000A2   PSG_R
00:00000000   CHRTBL
00:00001800   TILMAP
00:00001B00   SPRART
00:00002000   CLRTBL
00:00003800   SPRTBL
00:00000001   SI
00:00000000 X NO
00:00000001 X PUERTAACTIV
00:00000000   PUERTAINACT
00:00000004   LIMCADENCIA
00:00000000 X COLTRASP
00:00000001   COLNEGRO
00:00000002 X COLVERDE
00:00000003 X COLVERCLA
00:00000004 X COLAZULOSC
00:00000005 X COLAZULLA
00:00000006   COLROJOOSC
00:00000007 X COLCYAN
00:00000008   COLROJO
00:00000009 X COLROJOCLA
00:0000000A X COLAMAROSC
00:0000000B X COLAMARCLA
00:0000000C X COLVERDOSC
00:0000000D X COLMAGENTA
00:0000000E X COLGRIS
00:0000000F   COLBLANCO
00:000002F8   POSMAPLIN1
00:000002D8   POSMAPLIN2
00:000002B8   POSMAPLIN3
00:00000298   POSMAPLIN4
00:00000278   POSMAPLIN5
00:00000258   POSMAPLIN6
00:00000238   POSMAPLIN7
00:0000000D   POSCARAMAP
00:00000248   POSVIDAS
00:00000011   POSRELIMAP
00:000002C8   POSRELIQ
00:00000288   POSENERG
00:000002B4   POSNIVEL
00:00000238   POSMAPA
00:000001EE   POSPUERABAJ
00:0000008E   POSPUERARRI
00:000000FC   POSPUERDERE
00:000000E1   POSPUERIZQU
00:0000006C   POSESCALERA
00:000000A3   POSORACION
00:000000A7 X POSCRUZ
00:000000AB   POSAGUA
00:000000AF   POSARMAD
00:000000B3   POSPLANTA
00:000000B7   POSVIDAEXT
00:000000BB   POSBALLESTA
00:00000020   POSORACIONX
00:00000040 X POSCRUZX
00:00000060   POSAGUAX
00:00000080   POSARMADX
00:000000A0   POSPLANTAX
00:000000C0   POSVIDAEXTX
00:000000E0   POSBALLESTAX
00:00000070   POSAYUDASY
00:00000078 X POSXPM
00:0000006C X POSYPM
00:00000000   INACTIVA
00:00000001   ACTIVA
00:00000001   HABTERMIN
00:00000088   POSANTOR1
00:00000097   POSANTOR2
00:000000C4   MAPLLAMA1
00:000000C5   MAPLLAMA2
00:000000FF   RESETLLAMA
00:00000088   POSESQUEL1
00:00000095   POSESQUEL2
00:000000A9   POSCALAVE1
00:000000B6   POSCALAVE2
00:00000019   RESETESQUEL
00:00000004   RESETESCENAESQUEL
00:00000013   TILEPROTAM
00:00000009   TILEGRISM
00:00000010   TILEMAPROJO
00:0000000F   TILEMAPAMAR
00:0000000E   TILEMAPVERD
00:00000008   NMAXVIDREL
00:00000007   NHABNIVEL
00:000000F8 X MAXENERGIA
00:000000D9   TILEENERG8
00:000000BA   TILEENERG7
00:0000009B   TILEENERG6
00:0000007C   TILEENERG5
00:0000005D   TILEENERG4
00:0000003E   TILEENERG3
00:0000001F   TILEENERG2
00:00000000   TILENEGRO
00:00000000 X LIMPANTIZQ
00:000000FF   LIMPANTDER
00:00000000 X LIMPANTARR
00:00000080   LIMPANTABA
00:00000006 X BASEMAPY
00:00000003 X BASEMAPX
00:0000FD9A X H.KEYI
00:0000FD9F   H.TIMI
00:0000F000   PT3_SETUP
00:0000F001   PT3_MODADDR
00:0000F003   PT3_CrPsPtr
00:0000F005   PT3_SAMPTRS
00:0000F007   PT3_OrnPtrs
00:0000F009   PT3_PDSP
00:0000F00B   PT3_CSP
00:0000F00D   PT3_PSP
00:0000F00F   PT3_PrNote
00:0000F010   PT3_PrSlide
00:0000F012   PT3_AdInPtA
00:0000F014   PT3_AdInPtB
00:0000F016   PT3_AdInPtC
00:0000F018   PT3_LPosPtr
00:0000F01A   PT3_PatsPtr
00:0000F01C   PT3_Delay
00:0000F01D   PT3_AddToEn
00:0000F01E   PT3_Env_Del
00:0000F01F   PT3_ESldAdd
00:0000F021   PT3_NTL3
00:0000F023   VARS
00:0000F023   ChanA
00:0000F040   ChanB
00:0000F05D   ChanC
00:0000F07A   DelyCnt
00:0000F07B   CurESld
00:0000F07D   CurEDel
00:0000F07E   Ns_Base_AddToNs
00:0000F07E   Ns_Base
00:0000F07F   AddToNs
00:0000F080   NT_
00:0000F140   AYREGS
00:0000F140   VT_
00:0000F14E   EnvBase
00:0000F150   VAR0END
00:0000F150   T1_
00:0000F150   T_NEW_1
00:0000F150   T_OLD_1
00:0000F168   T_OLD_2
00:0000F180   T_NEW_3
00:0000F180   T_OLD_3
00:0000F182   T_OLD_0
00:0000F182   T_NEW_0
00:0000F19A   T_NEW_2
00:0000F240   ayFX_MODE
00:0000F241   ayFX_BANK
00:0000F243   ayFX_PRIORITY
00:0000F244   ayFX_POINTER
00:0000F246   ayFX_TONE
00:0000F248   ayFX_NOISE
00:0000F249   ayFX_VOLUME
00:0000F24A   ayFX_CHANNEL
00:00008000   START
00:00008038   loop_principal
00:00008048 X fin_programa_principal
00:00008048   check_colisiones_objetos
00:00008057   check_colisiones_objetos.habitacion_no_terminada
00:00008057   fin_check_colisiones_objetos
00:00008059   inicializa_variables_pruebas
00:0000807E X fin_inicializa_variables_pruebas
00:0000807F X inicializa_niveles
00:00008087   inicializa_niveles.inicia_nivel_0
00:00008094   inicializa_niveles.inicia_nivel_1
00:000080A1   inicializa_niveles.inicia_nivel_2
00:000080AE   inicializa_niveles.inicia_nivel_3
00:000080BB   inicializa_niveles.inicia_nivel_4
00:000080C8   inicializa_niveles.inicia_nivel_5
00:000080D5   inicializa_niveles.inicia_nivel_6
00:000080E0 X fin_iniciliza_niveles
00:000080E1   actualiza_marcador_vidas
00:000080E6   loop_marcador_caras_negro
00:000080EB X fin_loop_marcador_caras_negro
00:000080F4   loop_marcador_caras
00:000080F9 X fin_loop_marcador_caras
00:000080F9 X fin_actualiza_marcador_vidas
00:000080FA   actualiza_buffer_reliquias
00:00008100   loop_buffer_reliquias_negro
00:0000810D   loop_buffer_reliquias
00:00008112 X fin_actualiza_buffer_reliquias
00:00008113   localiza_info_habitacion
00:00008116 X localiza_info_habitacion.situo_columna
00:0000811F X localiza_info_habitacion.situo_fila
00:00008128   localiza_info_habitacion.loop_suma_fila
00:00008130   localiza_info_habitacion.situo_nivel
00:0000813F   localiza_info_habitacion.loop_suma_nivel
00:00008144   localiza_info_habitacion.actualiza_variable_habitacion
00:00008167 X fin_localiza_info_habitacion
00:00008168   terminada_habitacion_recorrida
00:0000817C X fin_terminada_habitacion_recorrida
00:0000817D   entra_habitacion
00:0000818C X fin_entra_habitacion
00:0000818C   sale_habitacion
00:0000818F X fin_sale_habitacion
00:0000818F   pinta_heroe_mapa
00:00008197 X fin_pinta_heroe_mapa
00:00008197   pinta_blanco_mapa
00:0000819F X fin_pinta_blanco_mapa
00:0000819F   suma_A_BC
00:000081A4 X fin_suma_A_BC
00:000081A5   suma_A_HL
00:000081AA X fin_suma_A_HL
00:000081AB   test_OK
00:000081BE X fin_test_OK
00:000081BF   color_pantalla
00:000081D0 X fin_color_pantalla
00:000081D0   sub_preparapantalla
00:000081D0 X elimina_clic
00:000081D4 X fin_elimina_clic
00:000081D4 X limpia_pantalla
00:000081D8 X fin_limpia_pantalla
00:000081DE X screen2
00:000081E3 X sprites_16_16
00:000081F1 X fin_sub_preparapantalla
00:000081F1   pinta_pantalla_completa
00:000081F7 X fin_pinta_pantalla_completa
00:000081F8   pinta_parte_superior_pantalla
00:00008229   pinta_parte_superior_pantalla.carga_nivel_0
00:00008244   pinta_parte_superior_pantalla.carga_nivel_1
00:0000825F   pinta_parte_superior_pantalla.carga_nivel_2
00:0000827A   pinta_parte_superior_pantalla.carga_nivel_3
00:00008295   pinta_parte_superior_pantalla.carga_nivel_4
00:000082B0   pinta_parte_superior_pantalla.carga_nivel_5
00:000082CB   pinta_parte_superior_pantalla.carga_nivel_6
00:000082E3   pinta_parte_superior_pantalla.fin_carga_niveles
00:00008310 X fin_pinta_parte_superior_pantalla
00:00008310   tiles_patrones
00:00008312   tiles_colores
00:00008314   tiles_mapa
00:00008316   pinta_parte_inferior_pantalla
00:00008331 X fin_pinta_parte_inferior_pantalla
00:00008331   pinta_vidas
00:00008340 X fin_pinta_vidas
00:00008340   pinta_reliquias
00:0000834F X fin_pinta_reliquias
00:0000834F   pinta_nivel
00:0000835B X fin_pinta_nivel
00:0000835B   pinta_tile_suelto
00:00008368 X fin_pinta_tile_suelto
00:00008369   mira_pinta_energia
00:0000836F X pinta_ener
00:0000836F X pinta_ener_tile_8
00:0000837B   pinta_ener_tile_8_negro
00:0000837C   pinta_ener_tile_7
00:00008386   pinta_ener_tile_7_negro
00:00008387   pinta_ener_tile_6
00:00008391   pinta_ener_tile_6_negro
00:00008392   pinta_ener_tile_5
00:0000839C   pinta_ener_tile_5_negro
00:0000839D   pinta_ener_tile_4
00:000083A7   pinta_ener_tile_4_negro
00:000083A8   pinta_ener_tile_3
00:000083B2   pinta_ener_tile_3_negro
00:000083B3   pinta_ener_tile_2
00:000083BD   pinta_ener_tile_2_negro
00:000083BE   fin_mira_pinta_energia
00:000083C0   pinta_energia
00:000083CF X fin_pinta_energia
00:000083CF   borra_mapa
00:00008425 X fin_borra_mapa
00:00008426   posiciona_en_mapa
00:00008429 X posiciona_en_mapa.sumar_fila
00:00008453 X posiciona_en_mapa.fila_0
00:0000845A   posiciona_en_mapa.fila_1
00:00008461   posiciona_en_mapa.fila_2
00:00008468   posiciona_en_mapa.fila_3
00:0000846F   posiciona_en_mapa.fila_4
00:00008476   posiciona_en_mapa.fila_5
00:0000847D X posiciona_en_mapa.fila_6
00:0000847D   posiciona_en_mapa.sumar_columna
00:00008493   pinta_pos_mapa_vacio
00:00008495   fin_pinta_pos_mapa
00:00008498 X fin_posiciona_en_mapa
00:00008498   efecto_imagen_tira_reliquia
00:0000849B   efecto_imagen_tira_reliquia.parpadea_fondo
00:000084B2 X fin_efecto_imagen_tira_reliquia
00:000084B2   pinta_array
00:000084CD   pinta_array.pa_pinta_fila
00:000084CE   pinta_array.pa_pinta_columnas
00:000084F1 X fin_pinta_array
00:000084F2   wordaux1
00:000084F4   wordaux2
00:000084F6   byteaux1
00:000084F7   byteaux2
00:000084F8   inicializa_antorchas
00:00008519 X fin_inicializa_antorchas
00:0000851A   inicializa_esqueletos
00:0000853B X fin_inicializa_esqueletos
00:0000853C   pinta_extra_fondo
00:00008540 X pinta_extra_fondo.examina_sihay_antorchas
00:0000854F   pinta_extra_fondo.hayantorchas
00:00008578   pinta_extra_fondo.examina_sihay_esqueletos
00:00008589   pinta_extra_fondo.hayesqueletos
00:000085B2 X fin_pinta_extra_fondo
00:000085B3   actualiza_elementos_fondo
00:000085B3 X actualiza_elementos_fondo.examina_antorchas
00:000085C1   actualiza_elementos_fondo.examina_esqueletos
00:000085CD X fin_actualiza_elementos_fondo
00:000085CD   flip_llamas_antorchas
00:000085E6 X flip_llamas_antorchas.llama_impar
00:00008607   flip_llamas_antorchas.llama_par
00:00008626   fin_flip_llamas_antorchas
00:0000862A   flip_calavera_esqueletos
00:00008657 X fin_flip_calavera_esqueletos
00:00008657   var_aux_calavera
00:00008658   actualiza_escena_calavera
00:00008664   actualiza_escena_calavera.decrementa_escenas
00:00008665 X actualiza_escena_calavera.fin_consulta_escena
00:00008673 X fin_actualiza_escena_calavera
00:00008674   array_puerta_arriba
00:00008688   array_puerta_derecha
00:0000869D   array_puerta_abajo
00:000086A1   array_puerta_izquierda
00:000086B6   array_escalera
00:000086E6 X lista_puertas
00:000086E6   puerta_arriba
00:000086F3   puerta_derecha
00:00008700   puerta_abajo
00:0000870D   puerta_izquierda
00:0000871A X datos_puertas
00:0000871A   datos_escalera
00:00008727   datos_puerta_arriba
00:00008734   datos_puerta_derecha
00:00008741   datos_puerta_abajo
00:0000874E   datos_puerta_izquierda
00:0000875B   inicializa_puertas
00:0000876C   inicializa_puertas.pinta_escalera
00:0000876F   inicializa_puertas.cotinuamos_pintando_escalera_arriba
00:00008793 X fin_inicializa_puertas
00:00008794   carga_datos_puerta
00:00008799 X fin_carga_datos_puerta
00:0000879A   accion_puerta_arriba
00:000087A4 X fin_accion_puerta_arriba
00:000087A4 X accion_puerta_derecha
00:000087AE X fin_accion_puerta_derecha
00:000087AE X accion_puerta_abajo
00:000087B7 X accion_puerta_abajo.decrementa_nivel
00:000087BB   accion_puerta_abajo.decrementa_solo_habitacion
00:000087C5 X fin_accion_puerta_abajo
00:000087C5 X accion_puerta_izquierda
00:000087CF X fin_accion_puerta_izquierda
00:000087CF   pinta_puertas
00:000087E8   pinta_puertas.fin_puerta_arriba
00:000087FB   pinta_puertas.fin_puerta_derecha
00:0000880E   pinta_puertas.fin_puerta_abajo
00:00008821   fin_pinta_puertas
00:00008822   pinta_puerta_aba
00:0000882C X fin_pinta_puerta_aba
00:0000882C   pinta_puerta_arr
00:00008836 X fin_pinta_puerta_arr
00:00008836   pinta_puerta_der
00:00008840 X fin_pinta_puerta_der
00:00008840   pinta_puerta_izq
00:0000884A X fin_pinta_puerta_izq
00:0000884A   actualiza_variables_pinta_array
00:00008868 X fin_actualiza_variables_pinta_array
00:00008869   check_colisiones_puertas
00:00008869 X check_colisiones_puertas.examina_puerta_arriba
00:0000887F   check_colisiones_puertas.examina_puerta_derecha
00:00008895   check_colisiones_puertas.examina_puerta_abajo
00:000088AB   check_colisiones_puertas.examina_puerta_izquierda
00:000088BF   check_colisiones_puertas.ejecuta_accion_y_sale
00:000088CA   fin_check_colisiones_puertas
00:000088CB   check_colision_puerta
00:000088CB X check_colision_puerta.deteccioncolision_paso1
00:000088DC   check_colision_puerta.deteccioncolision_paso2
00:000088E4   check_colision_puerta.deteccioncolision_paso3
00:000088F1   check_colision_puerta.deteccioncolision_paso4
00:000088F9   check_colision_puerta.deteccioncolision_paso5
00:000088FB X fin_check_colision_puerta
00:000088FC   desactiva_todas_puertas
00:0000891C X fin_desactiva_todas_puertas
00:0000891D   carga_patrones_sprites_nivel
00:00008921 X fin_carga_patrones_sprites_nivel
00:00008921   carga_patrones_nivel_comunes
00:0000892D X fin_carga_patrones_nivel_comunes
00:0000892D X carga_patrones_sprites_nivel1
00:0000892D X fin_carga_patrones_sprites
00:0000892E   render_sprites
00:0000893A X fin_actualiza_array_sprites_vram
00:0000893A   vuelca_resultado_puntomira_array
00:0000895F X vuelca_resultado_puntomira_array.codigo_color_1
00:00008968   vuelca_resultado_puntomira_array.codigo_color_2
00:00008971 X fin_vuelca_resultado_puntomira_array
00:00008971   check_player
00:00008990 X f
00:00008991   mueve_arriba
00:0000899C   mueve_arriba.no_decrementa_y
00:0000899D X fin_mueve_arriba
00:0000899E   mueve_derecha
00:000089AB   mueve_derecha.no_incrementa_x
00:000089AC X fin_mueve_derecha
00:000089AD   mueve_abajo
00:000089BA   mueve_abajo.no_incrementa_y
00:000089BB X fin_mueve_abajo
00:000089BC   mueve_izquierda
00:000089C7   mueve_izquierda.no_decrementa_x
00:000089C8 X fin_mueve_izquierda
00:000089C9   mira_disparo
00:000089C9 X mira_disparo.mira_boton_pulsado1
00:000089D6 X mira_disparo.no_efectua_disparo
00:000089E1   mira_disparo.efectua_disparo
00:000089F6   mira_disparo.fin_mira_disparo1
00:000089F7   mira_disparo.mira_boton_pulsado2
00:00008A13 X fin_mira_disparo
00:00008A13   update_controllers_status
00:00008A4A   read_joy_0
00:00008A5E   check_8th_keyboard_row
00:00008A6C   check_4th_keyboard_row
00:00008A7A X inicializa_replayer_efectos_interrupciones
00:00008A93 X fin_inicializa_replayer_efectos_interrupciones
00:00008A94   subrutina_isr
00:00008A9D X fin_subrutina_isr
00:00008A9D X subrutinas_sonido
00:00000000   CHNPRM_PsInOr
00:00000001   CHNPRM_PsInSm
00:00000002   CHNPRM_CrAmSl
00:00000003   CHNPRM_CrNsSl
00:00000004   CHNPRM_CrEnSl
00:00000005   CHNPRM_TSlCnt
00:00000006   CHNPRM_CrTnSl
00:00000008   CHNPRM_TnAcc
00:0000000A   CHNPRM_COnOff
00:0000000B   CHNPRM_OnOffD
00:0000000C   CHNPRM_OffOnD
00:0000000D   CHNPRM_OrnPtr
00:0000000F   CHNPRM_SamPtr
00:00000011   CHNPRM_NNtSkp
00:00000012   CHNPRM_Note
00:00000013   CHNPRM_SlToNt
00:00000014   CHNPRM_Env_En
00:00000015   CHNPRM_Flags
00:00000016   CHNPRM_TnSlDl
00:00000017   CHNPRM_TSlStp
00:00000019   CHNPRM_TnDelt
00:0000001B   CHNPRM_NtSkCn
00:0000001C   CHNPRM_Volume
00:0000001D X CHNPRM_Size
00:00000000   AR_TonA
00:00000002   AR_TonB
00:00000004   AR_TonC
00:00000006   AR_Noise
00:00000007   AR_Mixer
00:00000008   AR_AmplA
00:00000009   AR_AmplB
00:0000000A   AR_AmplC
00:0000000B   AR_Env
00:0000000D   AR_EnvTp
00:00008A9D   CHECKLP
00:00008AAE X PT3_MUTE
00:00008ABA   PT3_INIT
00:00008AF9   PT3_INIT.TP_0
00:00008B05   PT3_INIT.TP_1
00:00008B0C   PT3_INIT.TP_2
00:00008B7A   PT3_INIT.L1
00:00008B87   PT3_INIT.L2
00:00008B8B X PT3_INIT.L3
00:00008BB2   PT3_INIT.CORR_1
00:00008BC0   PT3_INIT.CORR_2
00:00008BC7   PT3_INIT.TC_EXIT
00:00008BD2   PT3_INIT.INITV1
00:00008BDA   PT3_INIT.INITV2
00:00008BEE   PT3_INIT.INITV3
00:00008BF2   PD_OrSm
00:00008BFC   PD_SAM
00:00008BFD   PD_SAM_
00:00008C13   PD_VOL
00:00008C1C   PD_EOff
00:00008C24   PD_SorE
00:00008C2E   PD_ENV
00:00008C33   PD_ORN
00:00008C38   PD_ESAM
00:00008C45   PTDECOD
00:00008C54   PD_LOOP
00:00008C57   PD_LP2
00:00008C84   PD_NOIS
00:00008C89   PD_REL
00:00008C8F   PD_NOTE
00:00008C97   PD_RES
00:00008CA9   PD_FIN
00:00008CB0   C_PORTM
00:00008CFB   C_PORTM.NOSIG
00:00008D05   SET_STP
00:00008D11   C_GLISS
00:00008D24   C_SMPOS
00:00008D2A   C_ORPOS
00:00008D30   C_VIBRT
00:00008D48   C_ENGLS
00:00008D5A   C_DELAY
00:00008D60   SETENV
00:00008D7B   C_NOP
00:00008D7C   SETORN
00:00008D95   SPCCOMS
00:00008DB5   CHREGS
00:00008DD8   CHREGS.CH_ORPS
00:00008DE3   CHREGS.CH_NTP
00:00008DE9   CHREGS.CH_NOK
00:00008E04   CHREGS.CH_SMPS
00:00008E1A   CHREGS.CH_NOAC
00:00008E61   CHREGS.CH_STPP
00:00008E76   CHREGS.CH_AMP
00:00008E88   CHREGS.CH_AMIN
00:00008E8D   CHREGS.CH_SVAM
00:00008E90   CHREGS.CH_NOAM
00:00008E99   CHREGS.CH_APOS
00:00008E9F   CHREGS.CH_VOL
00:00008EAA X CHREGS.CH_ENV
00:00008EB1   CHREGS.CH_NOEN
00:00008ECB   CHREGS.NO_ENAC
00:00008ED2   CHREGS.NO_ENSL
00:00008EE0   CHREGS.CH_MIX
00:00008EE4   CHREGS.CH_EXIT
00:00008F03   CHREGS.CH_ONDL
00:00008F07   PT3_PLAY
00:00008F3B   PT3_PLAY.PLNLP
00:00008F62   PT3_PLAY.PL1A
00:00008F6D   PT3_PLAY.PL1B
00:00008F82   PT3_PLAY.PL1C
00:00008F97   PT3_PLAY.PL1D
00:00008F9D   PT3_PLAY.PL2
00:00008FFF   PT3_ROUT
00:00009000   ROUT_A0
00:0000900C   ROUT_A0.LOUT
00:00009020   NT_DATA
00:00009030   T_
00:00009030   TCOLD_0
00:0000903C   TCNEW_1
00:0000903C   TCOLD_1
00:0000903E   TCOLD_2
00:00009050   TCNEW_3
00:00009051   TCOLD_3
00:0000905A   TCNEW_0
00:00009065   TCNEW_2
00:00009070   EMPTYSAMORN
00:00009074   T_PACK
00:00000000 X AYFXRELATIVE
00:000090A9   ayFX_SETUP
00:000090B5   ayFX_END
00:000090BB   ayFX_INIT
00:000090CC   ayFX_INIT.CHECK_PRI
00:000090ED   ayFX_INIT.INIT_END
00:000090F1   ayFX_PLAY
00:00009105   ayFX_PLAY.TAKECB
00:00009116   ayFX_PLAY.CHECK_NN
00:00009123   ayFX_PLAY.SETPOINTER
00:00009137   ayFX_PLAY.SETMASKS
00:00009145 X ayFX_PLAY.CHK1
00:00009147 X ayFX_PLAY.PLAY_C
00:00009154   ayFX_PLAY.CHK2
00:00009159 X ayFX_PLAY.PLAY_B
00:00009166   ayFX_PLAY.CHK3
00:00009169 X ayFX_PLAY.PLAY_A
00:00009176   ayFX_PLAY.SETMIXER
00:00009186   song
00:00009AEE   sfx_bank
00:00009B39   inicializa_ayudas
00:00009BA0 X fin_resetea_ayudas
00:00009BA1   carga_datos_ayuda
00:00009BA6 X fin_carga_datos_ayuda
00:00009BA7   pinta_obj_ayuda
00:00009BAB X pinta_obj_ayuda.dibujoon
00:00009BB7   pinta_obj_ayuda.dibujooff
00:00009BC0   pinta_obj_ayuda.param_wordaux2
00:00009BCC X pinta_obj_ayuda.filasycols
00:00009BD7 X fin_pinta_obj_ayuda
00:00009BD7   pinta_ayudas_habitacion
00:00009BD7 X pinta_ayudas_habitacion.examina_oracion
00:00009BE8   pinta_ayudas_habitacion.examina_cruz
00:00009BF9   pinta_ayudas_habitacion.examina_aguabendita
00:00009C0A   pinta_ayudas_habitacion.examina_armadura
00:00009C1B   pinta_ayudas_habitacion.examina_planta
00:00009C2C   pinta_ayudas_habitacion.examina_vidaextra
00:00009C3D   pinta_ayudas_habitacion.examina_ballesta
00:00009C4C X fin_pinta_ayudas_habitacion
00:00009C4D   accion_oracion
00:00009C4D X fin_accion_oracion
00:00009C4E   accion_cruz
00:00009C4E X fin_accion_cruz
00:00009C4F   accion_agua
00:00009C4F X fin_accion_agua
00:00009C50   accion_armadura
00:00009C50 X fin_accion_armadura
00:00009C51   accion_planta
00:00009C51 X fin_accion_planta
00:00009C52   accion_vidaextra
00:00009C52 X fin_accion_vidaextra
00:00009C53 X accion_ballesta
00:00009C53 X fin_accion_ballesta
00:00009C54   depack_VRAM
00:00009C81   literal
00:00009C86   loop
00:00009C8F X getlen
00:00009C95   lus
00:00009CB2   lenok
00:00009CBF   mode7
00:00009CC5   mode6
00:00009CCB   mode5
00:00009CD1   mode4
00:00009CD7   mode3
00:00009CDD   mode2
00:00009CED   offsok
00:00009CF8   offsok.loop
00:00009D1A   getbit
00:00009D1E   getbitexx
00:00009D24   Depack_out
00:00009D26   modes
00:00000000   ESTRUCTURA_PUNTOMIRA.posx
00:00000001   ESTRUCTURA_PUNTOMIRA.posy
00:00000002 X ESTRUCTURA_PUNTOMIRA.escena
00:00000003 X ESTRUCTURA_PUNTOMIRA.velocidad
00:00000004 X ESTRUCTURA_PUNTOMIRA.boton2_pressed
00:00000005 X ESTRUCTURA_PUNTOMIRA.cadencia
00:00000006 X ESTRUCTURA_PUNTOMIRA.pm_aux1
00:00000007 X ESTRUCTURA_PUNTOMIRA.pm_aux2
00:00000008 X ESTRUCTURA_PUNTOMIRA.pm_aux3
00:00000009 X ESTRUCTURA_PUNTOMIRA.pm_aux4
00:0000000A X ESTRUCTURA_PUNTOMIRA.pm_aux5
00:0000000B X ESTRUCTURA_PUNTOMIRA.pm_aux6
00:0000000C X ESTRUCTURA_PUNTOMIRA.pm_aux7
00:0000000D X ESTRUCTURA_PUNTOMIRA.pm_aux8
00:0000000E X ESTRUCTURA_PUNTOMIRA.pm_aux9
00:0000000F X ESTRUCTURA_PUNTOMIRA.pm_aux10
00:00000010 X ESTRUCTURA_PUNTOMIRA
00:00000000 X ESTRUCTURA_ENEMIGO.tipo
00:00000001 X ESTRUCTURA_ENEMIGO.posx
00:00000002 X ESTRUCTURA_ENEMIGO.posy
00:00000003 X ESTRUCTURA_ENEMIGO.color
00:00000004 X ESTRUCTURA_ENEMIGO.escena
00:00000005 X ESTRUCTURA_ENEMIGO.contador_siguiente_escena
00:00000006 X ESTRUCTURA_ENEMIGO.reset_contador
00:00000007 X ESTRUCTURA_ENEMIGO.dano
00:00000008 X ESTRUCTURA_ENEMIGO.energia
00:00000009 X ESTRUCTURA_ENEMIGO.ver_hor
00:0000000A X ESTRUCTURA_ENEMIGO.manejador_dibujo
00:0000000C X ESTRUCTURA_ENEMIGO.en_aux3
00:0000000D X ESTRUCTURA_ENEMIGO.en_aux4
00:0000000E   ESTRUCTURA_ENEMIGO
00:00000000 X ESTRUCTURA_AYUDA.activo
00:00000001 X ESTRUCTURA_AYUDA.postilemem_nousado
00:00000003 X ESTRUCTURA_AYUDA.postilemem_usado
00:00000005 X ESTRUCTURA_AYUDA.pospantalla
00:00000006 X ESTRUCTURA_AYUDA.posx
00:00000007 X ESTRUCTURA_AYUDA.posy
00:00000008 X ESTRUCTURA_AYUDA.puntero_accion
00:0000000A X ESTRUCTURA_AYUDA.ayu_aux1
00:0000000B X ESTRUCTURA_AYUDA.ayu_aux2
00:0000000C X ESTRUCTURA_AYUDA.ayu_aux3
00:0000000D X ESTRUCTURA_AYUDA.ayu_aux4
00:0000000E X ESTRUCTURA_AYUDA.ayu_aux5
00:0000000F X ESTRUCTURA_AYUDA.ayu_aux6
00:00000010   ESTRUCTURA_AYUDA
00:00000000 X ESTRUCTURA_ANTORCHA.activo
00:00000001 X ESTRUCTURA_ANTORCHA.postilemem_antor1
00:00000003 X ESTRUCTURA_ANTORCHA.pospantalla_antor1
00:00000004 X ESTRUCTURA_ANTORCHA.pospantalla_antor2
00:00000005 X ESTRUCTURA_ANTORCHA.escena
00:00000006 X ESTRUCTURA_ANTORCHA.cont_sig_escena
00:00000007   ESTRUCTURA_ANTORCHA
00:00000000 X ESTRUCTURA_ESQUELETO.activo
00:00000001 X ESTRUCTURA_ESQUELETO.postilemem_antor1
00:00000003 X ESTRUCTURA_ESQUELETO.pospantalla_esquel1
00:00000004 X ESTRUCTURA_ESQUELETO.pospantalla_esquel2
00:00000005   ESTRUCTURA_ESQUELETO.escena
00:00000006   ESTRUCTURA_ESQUELETO.cont_sig_escena
00:00000007   ESTRUCTURA_ESQUELETO
00:00000000 X ESTRUCTURA_PUERTA.activa
00:00000001   ESTRUCTURA_PUERTA.posx
00:00000002   ESTRUCTURA_PUERTA.posy
00:00000003   ESTRUCTURA_PUERTA.radiox
00:00000004   ESTRUCTURA_PUERTA.radioy
00:00000005   ESTRUCTURA_PUERTA.accion
00:00000007   ESTRUCTURA_PUERTA.tiles_puerta
00:00000009   ESTRUCTURA_PUERTA.pos_en_tilemap
00:0000000B   ESTRUCTURA_PUERTA.alto
00:0000000C   ESTRUCTURA_PUERTA.ancho
00:0000000D   ESTRUCTURA_PUERTA
00:00009D34 X sprites_pantantalla
00:00009D34   sprites_comunes
00:00009D34 X sprite_punto_mira_1
00:00009D54 X sprite_punto_mira_2
00:00009D74 X sprite_punto_mira_1_mejorado
00:00009D94 X sprite_punto_mira_2_mejorado
00:00009DB4 X sprite_explosion_1
00:00009DD4 X sprite_explosion_2
00:00009DF4   fin_sprites_comunes
00:00009DF4 X sprite_arana1_1
00:00009E14 X sprite_arana1_2
00:00009E34 X sprite_murcielago1_1
00:00009E54 X sprite_murcielago1_2
00:00009E74 X sprite_serpiente1_1
00:00009E94 X sprite_serpiente1_2
00:00009EB4 X sprite_serpiente2_1
00:00009ED4 X sprite_serpiente2_2
00:00009EF4 X sprite_zombi1_1_1
00:00009F14 X sprite_zombi1_2_1
00:00009F34 X sprite_zombi1_3_1
00:00009F54 X sprite_zombi1_4_1
00:00009F74 X sprite_zombi1_1_2
00:00009F94 X sprite_zombi1_2_2
00:00009FB4 X sprite_zombi1_3_2
00:00009FD4 X sprite_zombi1_4_2
00:00009FF4 X sprite_zombi2_1_1
00:0000A014 X sprite_zombi2_2_1
00:0000A034 X sprite_zombi2_3_1
00:0000A054 X sprite_zombi2_4_1
00:0000A074 X sprite_zombi2_1_2
00:0000A094 X sprite_zombi2_2_2
00:0000A0B4 X sprite_zombi2_3_2
00:0000A0D4 X sprite_zombi2_4_2
00:0000A0F4 X sprite_caballero1_1_1
00:0000A114 X sprite_caballero1_2_1
00:0000A134 X sprite_caballero1_3_1
00:0000A154 X sprite_caballero1_4_1
00:0000A174 X sprite_caballero1_1_2
00:0000A194 X sprite_caballero1_2_2
00:0000A1B4 X sprite_caballero1_3_2
00:0000A1D4 X sprite_caballero1_4_2
00:0000A1F4 X sprite_caballero2_1_1
00:0000A214 X sprite_caballero2_2_1
00:0000A234 X sprite_caballero2_3_1
00:0000A254 X sprite_caballero2_4_1
00:0000A274 X sprite_caballero2_1_2
00:0000A294 X sprite_caballero2_2_2
00:0000A2B4 X sprite_caballero2_3_2
00:0000A2D4 X sprite_caballero2_4_2
00:0000A2F4 X sprite_llama1_1
00:0000A314 X sprite_llama2_1
00:0000A334 X sprite_llama1_2
00:0000A354 X sprite_llama2_2
00:0000A374 X sprite_fantasma1_1
00:0000A394 X sprite_fantasma2_1
00:0000A3B4 X sprite_fantasma1_2
00:0000A3D4 X sprite_fantasma2_2
00:0000A3F4 X sprite_magia1_1
00:0000A414 X sprite_magia2_1
00:0000A434 X sprite_magia1_2
00:0000A454 X sprite_magia2_2
00:0000A474 X sprite_beholder1_1
00:0000A494 X sprite_beholder2_1
00:0000A4B4 X sprite_beholder3_1
00:0000A4D4 X sprite_beholder4_1
00:0000A4F4 X sprite_beholder1_2
00:0000A514 X sprite_beholder2_2
00:0000A534 X sprite_beholder3_2
00:0000A554 X sprite_beholder4_2
00:0000A574 X sprite_vampiro1_1
00:0000A594 X sprite_vampiro2_1
00:0000A5B4 X sprite_vampiro1_2
00:0000A5D4 X sprite_vampiro2_2
00:0000A5F4 X sprite_manoizq1
00:0000A614 X sprite_manoizq2
00:0000A634 X sprite_manoizq3
00:0000A654 X sprite_manoder1
00:0000A674 X sprite_manoder2
00:0000A694 X sprite_manoder3
00:0000A6B4   habitacion_actual
00:0000A6B5   habitacion_extras
00:0000A6B6   habitacion_actual_puntero
00:0000A6B8   is_habitacion_terminada
00:0000A6B9   habitaciones_juego
00:0000A6B9   habitaciones_nivel0
00:0000A729   habitaciones_nivel1
00:0000A799   habitaciones_nivel2
00:0000A809   habitaciones_nivel3
00:0000A879   habitaciones_nivel4
00:0000A8E9   habitaciones_nivel5
00:0000A959   habitaciones_nivel6
00:0000A9C9   color_base
00:0000A9CC   color_bomba1
00:0000A9CF   color_bomba2
00:0000A9D2   prota
00:0000A9D2   prota.posx
00:0000A9D3   prota.posy
00:0000A9D4   prota.escena
00:0000A9D5 X prota.velocidad
00:0000A9D6 X prota.boton2_pressed
00:0000A9D7   prota.cadencia
00:0000A9D8 X prota.pm_aux1
00:0000A9D9 X prota.pm_aux2
00:0000A9DA X prota.pm_aux3
00:0000A9DB X prota.pm_aux4
00:0000A9DC X prota.pm_aux5
00:0000A9DD X prota.pm_aux6
00:0000A9DE X prota.pm_aux7
00:0000A9DF X prota.pm_aux8
00:0000A9E0 X prota.pm_aux9
00:0000A9E1 X prota.pm_aux10
00:0000A9E2   prota_nivel
00:0000A9E3   prota_vidas
00:0000A9E4   prota_reliquias
00:0000A9E5   prota_pos_mapx
00:0000A9E6   prota_pos_mapy
00:0000A9E7   prota_energia
00:0000A9E8   array_aux_vidas
00:0000A9F0   array_aux_reliquias
00:0000A9F8   array_aux_energia
00:0000A9FF   ultimo_pos_array_aux_energia
00:0000AA00   array_aux_mapa_limpiar
00:0000AA07   elemento_pintar_mapa
00:0000AA08 X lista_ayudas
00:0000AA08   ayuda_oracion
00:0000AA18   ayuda_cruz
00:0000AA28   ayuda_aguabendita
00:0000AA38   ayuda_armadura
00:0000AA48   ayuda_planta
00:0000AA58   ayuda_vidaextra
00:0000AA68   ayuda_ballesta
00:0000AA78 X datos_oracion
00:0000AA82   datos_cruz
00:0000AA8C   datos_aguabendita
00:0000AA9D   datos_armadura
00:0000AAAE   datos_planta
00:0000AABF   datos_vidaextra
00:0000AAD0   datos_ballesta
00:0000AAE1 X array_ayudas
00:0000AAE1   array_oracionon
00:0000AAE3 X array_oracionon1
00:0000AAE5   array_oracionoff
00:0000AAE7 X array_oracionoff1
00:0000AAE9   array_cruzon
00:0000AAEB X array_cruzon1
00:0000AAED   array_cruzoff
00:0000AAEF X array_cruzoff1
00:0000AAF1   array_aguaon
00:0000AAF3 X array_aguaon1
00:0000AAF5   array_aguaoff
00:0000AAF7 X array_aguaoff1
00:0000AAF9   array_armaduraon
00:0000AAFB X array_armaduraon1
00:0000AAFD   array_armaduraoff
00:0000AAFF X array_armaduraoff1
00:0000AB01   array_plantaon
00:0000AB03 X array_plantaon1
00:0000AB05   array_plantaoff
00:0000AB07 X array_plantaoff1
00:0000AB09   array_extraon
00:0000AB0B X array_extraon1
00:0000AB0D   array_extraoff
00:0000AB0F X array_extraoff1
00:0000AB11   array_ballestaon
00:0000AB13 X array_ballestaon1
00:0000AB15   array_ballestaoff
00:0000AB17 X array_ballestaoff1
00:0000AB19   antorchas
00:0000AB20   array_antorcha
00:0000AB23   esqueletos
00:0000AB2A   array_esqueleto
00:0000AB36   lista_escenas_calavera
00:0000AB3A   array_sprites
00:0000AB3A   array_sprites_pm
00:0000AB42 X array_sprites_enem
00:0000ABBA X lista_enemigos
00:0000AC46 X puntero_array_atrib_array_VRAM
00:0000AC48   tiles_patrones_nivel0
00:0000AE72   tiles_color_nivel0
00:0000AEDD   tiles_mapa_nivel0
00:0000AF12   tiles_patrones_nivel1
00:0000B0C7   tiles_color_nivel1
00:0000B10E   tiles_mapa_nivel1
00:0000B143   tiles_patrones_nivel2
00:0000B2F8   tiles_color_nivel2
00:0000B33F   tiles_mapa_nivel2
00:0000B374   tiles_patrones_nivel3
00:0000B529   tiles_color_nivel3
00:0000B570   tiles_mapa_nivel3
00:0000B5A5   tiles_patrones_nivel4
00:0000B75A   tiles_color_nivel4
00:0000B7A1   tiles_mapa_nivel4
00:0000B7D6   tiles_patrones_nivel5
00:0000B98B   tiles_color_nivel5
00:0000B9D2   tiles_mapa_nivel5
00:0000BA07   tiles_patrones_nivel6
00:0000BBBC   tiles_color_nivel6
00:0000BC03   tiles_mapa_nivel6
00:0000BC38   tiles_patrones_marcador
00:0000BD84   tiles_color_marcador
00:0000BDB9   tiles_mapa_marcador
00:0000BE1B   END


 Output: t4.out
-------------------------------------------------

 Page: 00
  Org: 00008000  Size: *  Used: 00000000

    No output

 Output: t4.bin
-------------------------------------------------

 Page: 00
  Org: 00008000  Size: *  Used: 00003E22

   Address   Length Align   Label
   00008000   15906         START
