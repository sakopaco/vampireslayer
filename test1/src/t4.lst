Sjasm Z80 Assembler v0.42c - www.xl2s.tk             [2021.07.27 - 22:35:01]

t4.asm
Errors: 0

       1   00:0000                      	OUTPUT	"t4.bin"
       2   00:8000                      	
       3   00:8000                      ;;=====================================================
       4   00:8000                      ;;DEFINICIÓN DE CONSTANTES
       5   00:8000                      ;;=====================================================	
       6   00:8000                      	include "constantes.asm"
       1.  00:8000                      ;;=====================================================
       2.  00:8000                      ;; FICHERO constantes.asm
       3.  00:8000                      ;;=====================================================
       4.  00:8000                      
       5.  00:8000                      ;;ETIQUETAS/CONSTANTES BIOS TECLADO
       6.  00:8000  (00:00D8)           GTTRIG		equ		#00D8	;Returns current trigger status
       7.  00:8000  (00:00D5)           GTSTCK		equ		#00D5	;Returns the joystick/cursors status
       8.  00:8000  (00:F3DB)           CLIKSW		equ		#F3DB	;deshabilita el sonido de clic cuando se pulsa una tecla
       9.  00:8000                      
      10.  00:8000                      ;;ETIQUETAS/CONSTANTES BIOS VDP
      11.  00:8000  (00:013E)           RDVDP		equ		#013E	;lee registro status VDP
      12.  00:8000  (00:0047)           WRTVDP		equ		#0047	;escribe registros del VDP
      13.  00:8000  (00:005C)           LDIRVM		equ		#005C	;RAM/ROM -> VRAM
      14.  00:8000  (00:0059)           LDIRMV		equ		#0059	;VRAM -> RAM
      15.  00:8000  (00:005F)           CHGMOD		equ		#005F	;cambia modo pantalla (screen mode)
      16.  00:8000  (00:0041)           DISSCR  	equ		#0041	;desactiva pantanlla
      17.  00:8000  (00:0044)           ENASCR  	equ		#0044	;activa pantalla
      18.  00:8000  (00:0062)           CHGCLR  	equ		#0062	;cambia color de pantalla (toca A y direcciones)
      19.  00:8000  (00:F3E9)           FORCLR		equ		#F3E9	;zona memoria color foreground
      20.  00:8000  (00:F3EA)           BAKCLR  	equ		#F3EA	;zona memoria color background
      21.  00:8000  (00:F3EB)           BDRCLR 		equ		#F3EB	;zona memoria bordercolor
      22.  00:8000  (00:00C3)           CLS			equ		#00C3	;limpia pantalla (necesita A=0)
      23.  00:8000                      
      24.  00:8000                      ;;ETIQUETAS/CONSTANTES REGISTROS VDP
      25.  00:8000  (00:F3DF)           RG0SAV		equ		#F3DF	;Mirror of VDP register 0 (Basic: VDP(0))
      26.  00:8000  (00:F3E0)           RG1SAV		equ		#F3E0	;Mirror of VDP register 1 (Basic: VDP(1))
      27.  00:8000  (00:F3E1)           RG2SAV		equ		#F3E1	;Mirror of VDP register 2 (Basic: VDP(2))
      28.  00:8000  (00:F3E2)           RG3SAV		equ		#F3E2	;Mirror of VDP register 3 (Basic: VDP(3))
      29.  00:8000  (00:F3E3)           RG4SAV		equ		#F3E3	;Mirror of VDP register 4 (Basic: VDP(4))
      30.  00:8000  (00:F3E4)           RG5SAV		equ		#F3E4	;Mirror of VDP register 5 (Basic: VDP(5))
      31.  00:8000  (00:F3E5)           RG6SAV		equ		#F3E5	;Mirror of VDP register 6 (Basic: VDP(6))
      32.  00:8000  (00:F3E6)           RG7SAV		equ		#F3E6	;Mirror of VDP register 7 (Basic: VDP(7))
      33.  00:8000  (00:F3E7)           STATFL		equ		#F3E7	;Mirror of VDP(8) status register (S#0)
      34.  00:8000                      
      35.  00:8000  (00:0099)           REGEST		equ		#0099	;registro de estado para escribir directamente en VRAM
      36.  00:8000  (00:0098)           REGESCVDP	equ		#0098	;registro donde escribir valor para VRAM
      37.  00:8000                      
      38.  00:8000                      
      39.  00:8000                      
      40.  00:8000                      ;;ETIQUETAS DE ZONAS DE MEMORIA DE LA VPD (MSX1)
      41.  00:8000  (00:0000)           CHRTBL		equ		#0000
      42.  00:8000  (00:1800)           TILMAP		equ		#1800
      43.  00:8000  (00:1B00)           SPRART		equ		#1B00
      44.  00:8000  (00:2000)           CLRTBL		equ		#2000
      45.  00:8000  (00:3800)           SPRTBL		equ		#3800
      46.  00:8000                      
      47.  00:8000                      
      48.  00:8000                      ;;ETIQUETAS ESTANDAR PARA DAR MÁS CLARIDAD AL CODIGO
      49.  00:8000  (00:0001)           SI			equ		1
      50.  00:8000  (00:0000)           NO			equ		0
      51.  00:8000                      
      52.  00:8000  (00:0000)           COLTRASP	equ		0
      53.  00:8000  (00:0001)           COLNEGRO	equ		1
      54.  00:8000  (00:0002)           COLVERDE	equ		2
      55.  00:8000  (00:0003)           COLVERCLA	equ		3
      56.  00:8000  (00:0004)           COLAZULOSC	equ		4
      57.  00:8000  (00:0005)           COLAZULLA	equ		5
      58.  00:8000  (00:0006)           COLROJOOSC	equ		6
      59.  00:8000  (00:0007)           COLCYAN		equ		7
      60.  00:8000  (00:0008)           COLROJO		equ		8
      61.  00:8000  (00:0009)           COLROJOCLA	equ		9
      62.  00:8000  (00:000A)           COLAMAROSC	equ		10
      63.  00:8000  (00:000B)           COLAMARCLA	equ		11
      64.  00:8000  (00:000C)           COLVERDOSC	equ		12
      65.  00:8000  (00:000D)           COLMAGENTA	equ		13
      66.  00:8000  (00:000E)           COLGRIS		equ		14
      67.  00:8000  (00:000F)           COLBLANCO	equ		15
      68.  00:8000                      
      69.  00:8000                      
      70.  00:8000                      
      71.  00:8000                      ;;ETIQUETAS ESPECIFICAS PARA DAR MÁS CLARIDAD AL CODIGO (relacionadas con posiciones en mapa vdp)
      72.  00:8000  (00:02F8)           POSMAPLIN1  equ		#02F8
      73.  00:8000  (00:02D8)           POSMAPLIN2  equ		#02D8
      74.  00:8000  (00:02B8)           POSMAPLIN3  equ		#02B8
      75.  00:8000  (00:0298)           POSMAPLIN4  equ		#0298
      76.  00:8000  (00:0278)           POSMAPLIN5  equ		#0278
      77.  00:8000  (00:0258)           POSMAPLIN6  equ		#0258
      78.  00:8000  (00:0238)           POSMAPLIN7  equ		#0238
      79.  00:8000                      
      80.  00:8000  (00:000D)           POSCARAMAP	equ		#000D
      81.  00:8000  (00:0248)           POSVIDAS	equ		#0248
      82.  00:8000  (00:0011)           POSRELIMAP	equ		#0011
      83.  00:8000  (00:02C8)           POSRELIQ	equ		#02C8
      84.  00:8000  (00:0288)           POSENERG	equ		#0288
      85.  00:8000  (00:02B4)           POSNIVEL	equ		#02B4
      86.  00:8000  (00:0238)           POSMAPA		equ 	#0238
      87.  00:8000                      
      88.  00:8000  (00:01EE)           POSPUERABAJ equ		#01EE
      89.  00:8000  (00:008E)           POSPUERARRI equ		#008E
      90.  00:8000  (00:00FC)           POSPUERDERE equ		#00FC
      91.  00:8000  (00:00E1)           POSPUERIZQU equ		#00E1
      92.  00:8000                      
      93.  00:8000                      
      94.  00:8000                      ;;ETIQUETAS ESPECIFICAS PARA DAR MÁS CLARIDAD AL CODIGO (relacionadas con posiciones en en el banco de memoria)
      95.  00:8000  (00:0013)           TILEMAPPROT equ		19
      96.  00:8000  (00:0009)           TILEMAPVACI	equ		9
      97.  00:8000  (00:0010)           TILEMAPROJO equ		16
      98.  00:8000  (00:000F)           TILEMAPAMAR equ		15
      99.  00:8000  (00:000E)           TILEMAPVERD equ		14
     100.  00:8000                      
     101.  00:8000                      
     102.  00:8000                      ;;ETIQUETAS ESPECIFICAS PARA DAR MÁS CLARIDAD AL CODIGO (generales)
     103.  00:8000  (00:0008)           NMAXVIDREL	equ		8		;el número máximo de vidas y de reliquias es de 8
     104.  00:8000  (00:0007)           NHABNIVEL	equ		7
     105.  00:8000  (00:00F8)           MAXENERGIA  equ		248
     106.  00:8000  (00:00D9)           TILEENERG8  equ		217
     107.  00:8000  (00:00BA)           TILEENERG7  equ		186
     108.  00:8000  (00:009B)           TILEENERG6  equ		155
     109.  00:8000  (00:007C)           TILEENERG5  equ		124
     110.  00:8000  (00:005D)           TILEENERG4  equ		93
     111.  00:8000  (00:003E)           TILEENERG3  equ		62
     112.  00:8000  (00:001F)           TILEENERG2  equ		31
     113.  00:8000  (00:0000)           TILENEGRO	equ		0
     114.  00:8000                      
     115.  00:8000                      ;limites
     116.  00:8000  (00:0000)           LIMPANTIZQ  equ		0
     117.  00:8000  (00:00FF)           LIMPANTDER  equ		255
     118.  00:8000  (00:0000)           LIMPANTARR  equ		0
     119.  00:8000  (00:0080)           LIMPANTABA  equ		128
     120.  00:8000                      
     121.  00:8000  (00:0001)           MUEARR  	equ		1
     122.  00:8000  (00:0002)           MUEARRDER	equ		2
     123.  00:8000  (00:0003)           MUEDER  	equ		3
     124.  00:8000  (00:0004)           MUEDERABA  	equ		4
     125.  00:8000  (00:0005)           MUEABA  	equ		5
     126.  00:8000  (00:0006)           MUEABAIZQ  	equ		6
     127.  00:8000  (00:0007)           MUEIZQ  	equ		7
     128.  00:8000  (00:0008)           MUEIZQARR  	equ		8
     129.  00:8000                      
     130.  00:8000                      
     131.  00:8000                      
     132.  00:8000                      ;matriz de 7x7 empieza en 0, y fila y x col, cuento desde esquina sup izq
     133.  00:8000  (00:0006)           BASEMAPY	equ		6
     134.  00:8000  (00:0003)           BASEMAPX	equ		3
       7   00:8000                      
       8   00:8000                      ;;=====================================================
       9   00:8000                      ;;DEFINICIÓN DE CABECERA DE ARCHIVO BIN
      10   00:8000                      ;;=====================================================		
      11   00:8000                      	include "cabecerabin.asm"
       1.  00:8000                      ;;=====================================================
       2.  00:8000                      ;; FICHERO cabecera.asm
       3.  00:8000                      ;;=====================================================
       4.  00:8000                      
       5.  00:8000                      ;;CABECERA FICHERO BIN
       6.  00:8000  FE                  	DB	#FE
       7.  00:8001  00 80               	DW	START
       8.  00:8003  33 8F               	DW	END
       9.  00:8005  00 80               	DW	START
      10.  00:8007                      
      11.  00:8007                      ;;INICIO CÓDIGO PROGRAMA	
      12.  00:8007                      	ORG	#8000
      13.  00:8000                      	
      12   00:8000                      	
      13   00:8000                      START:
      14   00:8000                      	
      15   00:8000                      	;inicializa pantalla y entonrno
      16   00:8000  CD B6 81            	CALL	sub_preparapantalla			;screen 2,2 sin click al pulsar tecla y color 16,1,1
      17   00:8003                      	
      18   00:8003                      	;inicializa variables para parametrizar funciones y que lo que se muestre sea variable (nº vidas, mapa, puertas, pantalla, etc...)
      19   00:8003  CD FD 80            	CALL	inicializa_variables_pruebas
      20   00:8006                      	
      21   00:8006                      	;inicializa los niveles por partida
      22   00:8006  CD 2B 81            	CALL	inicializa_niveles			;no es necesario parametrizarlo según el nivel del usuario ya que se cargan todos
      23   00:8009                      	
      24   00:8009                      	;pinta la pantalla (la primera o algunas especiales se pintan completamente)
      25   00:8009  CD E3 81            	CALL	pinta_pantalla_completa 
      26   00:800C                      	
      27   00:800C                      	;carga sprites en memoria (SE HA RETRASADO HASTA PARAMETRIZAR LA CARGA DE PANTALLAS)
      28   00:800C  CD 53 84            	CALL 	carga_patrones_sprites_nivel1
      29   00:800F                      	
      30   00:800F                      	;funciones que modificarian el marcador si se produce un evento cuando toque y cuando se pinta la pantalla ya se mira
      31   00:800F                      	;una variable para ver si el array hay que actualizarlo en pantalla o no
      32   00:800F  CD 40 81            	CALL	actualiza_marcador_vidas
      33   00:8012  CD 59 81            	CALL	actualiza_marcador_reliquias
      34   00:8015  CD 62 82            	CALL	pinta_nivel
      35   00:8018  CD E3 82            	CALL	borra_mapa
      36   00:801B                      
      37   00:801B  CD 70 81            	CALL	localiza_info_habitacion	;devuelve variable habitacion_actual 	
      38   00:801E                      
      39   00:801E  3E 01               	LD		 A,1
      40   00:8020  CD E3 83            	CALL	posiciona_en_mapa		;se le pasa A 1 (tile del prota) está el prota y prota.poxx y posy
      41   00:8023                      
      42   00:8023                      	
      43   00:8023                      loop_principal:
      44   00:8023  76                  	HALT							;espera VBLANK y sincroniza
      45   00:8024                      	
      46   00:8024  CD 24 85            	CALL	render_sprites			;actualiza array de sprites y los pinta en pantalla
      47   00:8027                      	
      48   00:8027  CD D4 82            	CALL	pinta_energia			;pinta la energia en pantalla
      49   00:802A                      
      50   00:802A                      mira_pinta_puertas:
      51   00:802A  3A 79 8B            	LD		 A,(actualiza_puertas_sn)
      52   00:802D  B7                  	OR		 A
      53   00:802E  28 06               	JR		 Z,fin_mira_pinta_puertas
      54   00:8030                      	
      55   00:8030                      	;primero preparo la pantalla como si no hubiera puertas
      56   00:8030  CD EA 81            	CALL 	pinta_parte_superior_pantalla
      57   00:8033                      	
      58   00:8033  CD 71 83            	CALL	pinta_puertas
      59   00:8036                      fin_mira_pinta_puertas:
      60   00:8036                      	
      61   00:8036                      mira_pinta_vidas:
      62   00:8036  3A 60 8B            	LD		 A, (actualiza_vidas_sn)
      63   00:8039  B7                  	OR		 A
      64   00:803A  28 03               	JR		 Z, fin_mira_pinta_vidas
      65   00:803C  CD 3C 82            	CALL	pinta_vidas
      66   00:803F                      fin_mira_pinta_vidas:	
      67   00:803F                      
      68   00:803F                      mira_pinta_reliquias:
      69   00:803F  3A 69 8B            	LD		 A, (actualiza_reliquias_sn)
      70   00:8042  B7                  	OR		 A
      71   00:8043  28 03               	JR		 Z, fin_mira_pinta_reliquias
      72   00:8045  CD 4F 82            	CALL	pinta_reliquias
      73   00:8048                      fin_mira_pinta_reliquias:
      74   00:8048                      
      75   00:8048  CD 52 80            	CALL	check_player			;MIRA EL CONTROL Y APLICA LA LOGICA DE MOVIMIENTO DEL PROTAGONISTA
      76   00:804B                      	
      77   00:804B  CD 7D 82            	CALL	mira_pinta_energia		;actualiza el array de energia siempre pero no pinta eso lo hace pinta_energia
      78   00:804E                      	
      79   00:804E  C3 23 80            	JP		loop_principal
      80   00:8051                      fin_programa_principal:
      81   00:8051  C9                  	RET
      82   00:8052                      
      83   00:8052                      
      84   00:8052                      
      85   00:8052                      
      86   00:8052                      ;;=====================================================
      87   00:8052                      ;;CHECK_PLAYER
      88   00:8052                      ;;=====================================================	
      89   00:8052                      ; función: 	MIRA EL CONTROL Y APLICA LA LOGICA DE MOVIMIENTO DEL PROTAGONISTA
      90   00:8052                      ; entrada: 	-
      91   00:8052                      ; salida: 	-
      92   00:8052                      ; toca: 	
      93   00:8052                      check_player:
      94   00:8052  D9                  	EXX
      95   00:8053                      	
      96   00:8053  AF                  	XOR		 A
      97   00:8054  CD D5 00            	CALL	GTSTCK
      98   00:8057                      	
      99   00:8057                      	;~ ;pone resultado en variable tecla_pulsada
     100   00:8057                      	;~ CALL	obtiene_tecla_pulsada
     101   00:8057                      	;~ ;pone resultado en variable accion_joystic
     102   00:8057                      	;~ CALL	obtiene_accion_joystick
     103   00:8057                      	;~ ;mezcla resultados y ls pone en A
     104   00:8057                      	;~ CALL	mezcla_calores_tecla_joystick
     105   00:8057                      	
     106   00:8057                      	
     107   00:8057  FE 01               	CP		MUEARR
     108   00:8059  CC 84 80            	CALL	 Z,mueve_arriba
     109   00:805C  FE 02               	CP		MUEARRDER
     110   00:805E  CC 91 80            	CALL	 Z,mueve_arriba_derecha
     111   00:8061  FE 03               	CP		MUEDER
     112   00:8063  CC 97 80            	CALL	 Z,mueve_derecha
     113   00:8066  FE 04               	CP		MUEDERABA
     114   00:8068  CC A6 80            	CALL	 Z,mueve_derecha_abajo
     115   00:806B  FE 05               	CP		MUEABA
     116   00:806D  CC AC 80            	CALL	 Z,mueve_abajo
     117   00:8070  FE 06               	CP		MUEABAIZQ
     118   00:8072  CC BB 80            	CALL	 Z,mueve_abajo_izquierda
     119   00:8075  FE 07               	CP		MUEIZQ
     120   00:8077  CC C1 80            	CALL	 Z,mueve_izquierda
     121   00:807A  FE 08               	CP		MUEIZQARR
     122   00:807C  CC CE 80            	CALL	 Z,mueve_izquierda_arriba
     123   00:807F                      	
     124   00:807F                      	;zona par mirar disparo
     125   00:807F                      
     126   00:807F  CD D4 80            	CALL	vuelca_resultado_puntomira_array
     127   00:8082                      
     128   00:8082  D9                  	EXX
     129   00:8083                      fin_check_player:
     130   00:8083  C9                  	RET
     131   00:8084                      
     132   00:8084                      
     133   00:8084                      ;;=====================================================
     134   00:8084                      ;;MUEVE_ARRIBA
     135   00:8084                      ;;=====================================================	
     136   00:8084                      ; función: 	decrementa y si se no sale de los límites el valor del punto de mira a la derecha
     137   00:8084                      ; entrada: 	-
     138   00:8084                      ; salida: 	-
     139   00:8084                      ; toca: 	-
     140   00:8084                      mueve_arriba:
     141   00:8084  F5                  	PUSH		AF
     142   00:8085                      	
     143   00:8085  3A 49 8B            	LD		 	 A, (prota.posy)
     144   00:8088  3D                  	DEC			 A
     145   00:8089  CA 8F 80            	JP			 Z,.no_decrementa_y
     146   00:808C  32 49 8B            	LD			(prota.posy), A
     147   00:808F                      	
     148   00:808F                      .no_decrementa_y:
     149   00:808F  F1                  	POP			AF
     150   00:8090                      fin_mueve_arriba:
     151   00:8090  C9                  	RET
     152   00:8091                      	
     153   00:8091                      	
     154   00:8091                      ;;=====================================================
     155   00:8091                      ;;MUEVE_ARRIBA_DERECHA
     156   00:8091                      ;;=====================================================	
     157   00:8091                      ; función: 	mueve punto de mira en diagonal arriba a la derecha
     158   00:8091                      ; entrada: 	-
     159   00:8091                      ; salida: 	-
     160   00:8091                      ; toca: 	-
     161   00:8091                      mueve_arriba_derecha:
     162   00:8091                      	
     163   00:8091  CD 84 80            	CALL		mueve_arriba
     164   00:8094  C3 97 80            	JP			mueve_derecha
     165   00:8097                      	
     166   00:8097                      fin_mueve_arriba_derecha:
     167   00:8097                      	;RET
     168   00:8097                      
     169   00:8097                      
     170   00:8097                      ;;=====================================================
     171   00:8097                      ;;MUEVE_DERECHA
     172   00:8097                      ;;=====================================================	
     173   00:8097                      ; función: 	incrementa si se no sale de los límites el valor del punto de mira a la derecha
     174   00:8097                      ; entrada: 	-
     175   00:8097                      ; salida: 	-
     176   00:8097                      ; toca: 	-
     177   00:8097                      mueve_derecha:
     178   00:8097  F5                  	PUSH		AF
     179   00:8098                      	
     180   00:8098  3A 48 8B            	LD		 	 A, (prota.posx)
     181   00:809B  3C                  	INC			 A
     182   00:809C  FE EF               	CP			 A, LIMPANTDER - 16
     183   00:809E  CA A4 80            	JP			 Z, .no_incrementa_x
     184   00:80A1  32 48 8B            	LD			(prota.posx), A
     185   00:80A4                      	
     186   00:80A4                      .no_incrementa_x:
     187   00:80A4  F1                  	POP			AF
     188   00:80A5                      fin_mueve_derecha:
     189   00:80A5  C9                  	RET
     190   00:80A6                      
     191   00:80A6                      ;;=====================================================
     192   00:80A6                      ;;MUEVE_DERECHA_ABAJO
     193   00:80A6                      ;;=====================================================	
     194   00:80A6                      ; función: 	mueve punto de mira en diagonal abajo a la derecha
     195   00:80A6                      ; entrada: 	-
     196   00:80A6                      ; salida: 	-
     197   00:80A6                      ; toca: 	-
     198   00:80A6                      mueve_derecha_abajo:
     199   00:80A6                      	
     200   00:80A6  CD 97 80            	CALL		mueve_derecha
     201   00:80A9  C3 AC 80            	JP			mueve_abajo
     202   00:80AC                      	
     203   00:80AC                      fin_mueve_derecha_abajo:
     204   00:80AC                      ;	RET
     205   00:80AC                      
     206   00:80AC                      ;;=====================================================
     207   00:80AC                      ;;MUEVE_ABAJO
     208   00:80AC                      ;;=====================================================	
     209   00:80AC                      ; función: 	incrementa y si se no sale de los límites el valor del punto de mira abajo
     210   00:80AC                      ; entrada: 	-
     211   00:80AC                      ; salida: 	-
     212   00:80AC                      ; toca: 	-
     213   00:80AC                      mueve_abajo:
     214   00:80AC  F5                  	PUSH		AF
     215   00:80AD                      	
     216   00:80AD  3A 49 8B            	LD		 	 A, (prota.posy)
     217   00:80B0  3C                  	INC			 A
     218   00:80B1  FE 70               	CP			 A, LIMPANTABA - 16
     219   00:80B3  CA B9 80            	JP			 Z,.no_incrementa_y
     220   00:80B6  32 49 8B            	LD			(prota.posy), A
     221   00:80B9                      	
     222   00:80B9                      .no_incrementa_y:
     223   00:80B9  F1                  	POP			AF
     224   00:80BA                      fin_mueve_abajo:
     225   00:80BA  C9                  	RET
     226   00:80BB                      	
     227   00:80BB                      
     228   00:80BB                      ;;=====================================================
     229   00:80BB                      ;;MUEVE_ABAJO_IZQUIERDA
     230   00:80BB                      ;;=====================================================	
     231   00:80BB                      ; función: 	mueve punto de mira en diagonal abajo a la izquierda
     232   00:80BB                      ; entrada: 	-
     233   00:80BB                      ; salida: 	-
     234   00:80BB                      ; toca: 	-
     235   00:80BB                      mueve_abajo_izquierda:
     236   00:80BB                      	
     237   00:80BB  CD AC 80            	CALL		mueve_abajo
     238   00:80BE  C3 C1 80            	JP			mueve_izquierda
     239   00:80C1                      
     240   00:80C1                      fin_mueve_abajo_izquierda:
     241   00:80C1                      	;RET
     242   00:80C1                      
     243   00:80C1                      	
     244   00:80C1                      ;;=====================================================
     245   00:80C1                      ;;MUEVE_IZQUIERDA
     246   00:80C1                      ;;=====================================================	
     247   00:80C1                      ; función: 	decrementa x si se no sale de los límites el valor del punto de mira a la izquierda
     248   00:80C1                      ; entrada: 	-
     249   00:80C1                      ; salida: 	-
     250   00:80C1                      ; toca: 	-
     251   00:80C1                      mueve_izquierda:
     252   00:80C1  F5                  	PUSH		AF
     253   00:80C2                      	
     254   00:80C2  3A 48 8B            	LD		 	 A, (prota.posx)
     255   00:80C5  3D                  	DEC			 A
     256   00:80C6                      ;	CP			 A, LIMPANTIZQ
     257   00:80C6  CA CC 80            	JP			 Z,.no_decrementa_x
     258   00:80C9  32 48 8B            	LD			(prota.posx), A
     259   00:80CC                      	
     260   00:80CC                      .no_decrementa_x:
     261   00:80CC  F1                  	POP			AF
     262   00:80CD                      fin_mueve_izquierda:
     263   00:80CD  C9                  	RET
     264   00:80CE                      
     265   00:80CE                      
     266   00:80CE                      ;;=====================================================
     267   00:80CE                      ;;MUEVE_IZQUIERDA_ARRIBA
     268   00:80CE                      ;;=====================================================	
     269   00:80CE                      ; función: 	mueve punto de mira en diagonal arriba a la izquierda
     270   00:80CE                      ; entrada: 	-
     271   00:80CE                      ; salida: 	-
     272   00:80CE                      ; toca: 	-
     273   00:80CE                      mueve_izquierda_arriba:
     274   00:80CE                      
     275   00:80CE  CD C1 80            	CALL		mueve_izquierda
     276   00:80D1  C3 84 80            	JP			mueve_arriba
     277   00:80D4                      
     278   00:80D4                      fin_mueve_izquierda_arriba:
     279   00:80D4                      	;RET
     280   00:80D4                      
     281   00:80D4                      ;;=====================================================
     282   00:80D4                      ;;VUELCA_RESULTADO_PUNTOMIRA_ARRAY
     283   00:80D4                      ;;=====================================================	
     284   00:80D4                      ; función: 	coloca los valores del punto de mira en la variable array_sprites para ser volcados en VRAM
     285   00:80D4                      ; entrada: 	-
     286   00:80D4                      ; salida: 	-
     287   00:80D4                      ; toca: 	-
     288   00:80D4                      vuelca_resultado_puntomira_array:
     289   00:80D4  F5                  	PUSH	AF
     290   00:80D5                      	
     291   00:80D5  DD 21 BC 8B         	LD		IX, array_sprites_pm
     292   00:80D9                      	;posición y de los dos sprites que conforman el punto de mira
     293   00:80D9  3A 49 8B            	LD		 A, (prota.posy)
     294   00:80DC  DD 77 00            	LD		(IX  ), A
     295   00:80DF  DD 77 04            	LD		(IX+4), A
     296   00:80E2                      	;posición x de los dos sprites que conforman el punto de mira
     297   00:80E2  3A 48 8B            	LD		 A, (prota.posx)
     298   00:80E5  DD 77 01            	LD		(IX+1), A
     299   00:80E8  DD 77 05            	LD		(IX+5), A
     300   00:80EB                      	;plano
     301   00:80EB  DD 36 02 00         	LD		(IX+2), 0
     302   00:80EF  DD 36 06 04         	LD		(IX+6), 4	;al ser sprites de 16x16 hay que ir de 4 en 4
     303   00:80F3                      	;color
     304   00:80F3  DD 36 03 0F         	LD		(IX+3), COLBLANCO
     305   00:80F7  DD 36 07 08         	LD		(IX+7), COLROJO
     306   00:80FB                      	
     307   00:80FB  F1                  	POP		AF
     308   00:80FC                      fin_vuelca_resultado_puntomira_array:
     309   00:80FC  C9                  	RET
     310   00:80FD                      
     311   00:80FD                      
     312   00:80FD                      
     313   00:80FD                      
     314   00:80FD                      
     315   00:80FD                      
     316   00:80FD                      ;;*******************************************************************
     317   00:80FD                      ; sólo para hacer pruebas y pintar la parte de las vidas y demás
     318   00:80FD                      inicializa_variables_pruebas:
     319   00:80FD  3E 04               	LD		 A, 4
     320   00:80FF  32 11 86            	LD		(prota_vidas),A
     321   00:8102                      
     322   00:8102  3E 01               	LD		 A, SI	
     323   00:8104  32 60 8B            	LD		(actualiza_vidas_sn), A	;actualizo la variable para que pinte vidas 1 sí / 0 no
     324   00:8107                      
     325   00:8107  3E 05               	LD		 A, 5
     326   00:8109  32 12 86            	LD		(prota_reliquias), A
     327   00:810C                      	
     328   00:810C  3E 01               	LD		 A, SI	
     329   00:810E  32 69 8B            	LD		(actualiza_reliquias_sn), A	;actualizo la variable para que pinte vidas 1 sí / 0 no
     330   00:8111                      
     331   00:8111  3E 64               	LD		 A, 100
     332   00:8113  32 15 86            	LD		(prota_energia), A
     333   00:8116                      
     334   00:8116  3E 01               	LD		 A, 1
     335   00:8118  32 10 86            	LD		(prota_nivel), A		;nivel empieza en 0 para usar las posiciones ascii
     336   00:811B                      	
     337   00:811B                      	;ubico al prota dentro del nivel para obtener luego las habitaciones y enemigos que aparecerán
     338   00:811B                      	;será igual la posición inicial en todos los niveles
     339   00:811B                      
     340   00:811B  3E 00               	LD		 A, 0				;los niveles son 7 del 0 al 6
     341   00:811D  32 14 86            	LD		(prota_pos_mapy), A	;pos y dentro del nivel (se empieza en 0)
     342   00:8120                      
     343   00:8120  3E 03               	LD		 A, 3				;columnas 7 del 0 al 6
     344   00:8122  32 13 86            	LD		(prota_pos_mapx), A	;pos y dentro del nivel (se empieza en 0)
     345   00:8125                      	
     346   00:8125                      	;************************************************
     347   00:8125                      	;importante : revisar pintado de mapa
     348   00:8125                      
     349   00:8125  3E 01               	LD			 A, 1 
     350   00:8127  32 79 8B            	LD			(actualiza_puertas_sn), A;(1 actualiza y 0 no actualiza puertas)
     351   00:812A                      fin_inicializa_variables_pruebas:
     352   00:812A  C9                  	RET
     353   00:812B                      ;;************************************************************************
     354   00:812B                      
     355   00:812B                      
     356   00:812B                      
     357   00:812B                      
     358   00:812B                      
     359   00:812B                      
     360   00:812B                      
     361   00:812B                      
     362   00:812B                      
     363   00:812B                      ;;=====================================================
     364   00:812B                      ;;DEFINICIÓN DE SUBRUTINAS
     365   00:812B                      ;;=====================================================
     366   00:812B                      	include "subrutinas.asm"
       1.  00:812B                      ;;=====================================================
       2.  00:812B                      ;;DEFINICIÓN DE SUBRUTINAS
       3.  00:812B                      ;;=====================================================	
       4.  00:812B                      
       5.  00:812B                      
       6.  00:812B                      ;;=====================================================
       7.  00:812B                      ;;INICIALIZA_NIVELES
       8.  00:812B                      ;;=====================================================	
       9.  00:812B                      ; función: 	copia la plantilla de niveles (habitaciones_plantilla) en los niveles de trabajo para el juego (habitaciones_juego)
      10.  00:812B                      ; entrada: 	habitaciones_plantilla
      11.  00:812B                      ; salida: 	habitaciones_juego
      12.  00:812B                      ; toca: 	A
      13.  00:812B                      inicializa_niveles:
      14.  00:812B  D9                  	EXX
      15.  00:812C                      	
      16.  00:812C  AF                  	XOR		 A
      17.  00:812D  06 31               	LD		 B, 49				;7 filas por 7 niveles menos el primero que lo hago diera del buble porque se suma 14 y no 16
      18.  00:812F  21 38 88            	LD		HL, habitaciones_juego;tambíen puntero al primer nivel
      19.  00:8132  11 0E 00            	LD		DE,14
      20.  00:8135  19                  	ADD		HL,DE
      21.  00:8136  77                  	LD		(HL),A
      22.  00:8137  11 10 00            	LD		DE,16				;desde las col 15 de una fila a la siguiente
      23.  00:813A                      .bucle_borra_hab:
      24.  00:813A  19                  	ADD		HL,DE
      25.  00:813B  77                  	LD		(HL),A
      26.  00:813C  10 FC               	DJNZ	.bucle_borra_hab
      27.  00:813E                      	
      28.  00:813E  D9                  	EXX
      29.  00:813F                      fin_iniciliza_niveles:
      30.  00:813F  C9                  	RET
      31.  00:8140                      
      32.  00:8140                      
      33.  00:8140                      ;;=====================================================
      34.  00:8140                      ;;ACTUALIZA_MARCADOR_VIDAS
      35.  00:8140                      ;;=====================================================	
      36.  00:8140                      ; función:  actualiza el buffer de vidas
      37.  00:8140                      ; entrada: 	prota_vidas
      38.  00:8140                      ; salida: 	array_aux_vidas
      39.  00:8140                      ; toca:		A,B,HL
      40.  00:8140                      actualiza_marcador_vidas:
      41.  00:8140  D9                  	EXX
      42.  00:8141                      
      43.  00:8141                      	;para no andar restando pongo todos los huecos a negro y luego en otro bucle las caras
      44.  00:8141                      	;1-pinto todo en blanco
      45.  00:8141  21 58 8B            	LD		HL,array_aux_vidas
      46.  00:8144  06 08               	LD		 B,NMAXVIDREL
      47.  00:8146                      loop_marcador_caras_negro:	;asignar espacios en negro
      48.  00:8146  36 00               	LD		(HL),0			;0 posición mapa tiles para nada (es transparente pero el fondo es negro)
      49.  00:8148  23                  	INC		HL
      50.  00:8149  10 FB               	DJNZ	loop_marcador_caras_negro
      51.  00:814B                      fin_loop_marcador_caras_negro:
      52.  00:814B                      	;2-pinto las caras según el n de vidas
      53.  00:814B  21 58 8B            	LD		HL,array_aux_vidas
      54.  00:814E  3A 11 86            	LD		 A,(prota_vidas)
      55.  00:8151  47                  	LD		 B,A
      56.  00:8152                      loop_marcador_caras: ;asignar caras
      57.  00:8152  36 0D               	LD		(HL),POSCARAMAP	;13 posición mapa tiles para cara
      58.  00:8154  23                  	INC		HL
      59.  00:8155  10 FB               	DJNZ	loop_marcador_caras
      60.  00:8157                      fin_loop_marcador_caras:
      61.  00:8157                      
      62.  00:8157  D9                  	EXX
      63.  00:8158                      fin_actualiza_marcador_vidas:
      64.  00:8158  C9                  	RET
      65.  00:8159                      
      66.  00:8159                      
      67.  00:8159                      ;;=====================================================
      68.  00:8159                      ;;ACTUALIZA_MARCADOR_RELIQUIAS
      69.  00:8159                      ;;=====================================================	
      70.  00:8159                      ; función: 	actualiza buffer de reliquias
      71.  00:8159                      ; entrada: 	prota_reliquias
      72.  00:8159                      ; salida: 	array_aux_reliquias
      73.  00:8159                      ; toca:		A,B,HL
      74.  00:8159                      actualiza_marcador_reliquias:
      75.  00:8159                      	;para no andar restando pongo todos los huecos a negro y luego en otro bucle las reliquias
      76.  00:8159                      	;1-pinto todo en blanco
      77.  00:8159  21 61 8B            	LD		HL, array_aux_reliquias
      78.  00:815C  06 08               	LD		 B, NMAXVIDREL
      79.  00:815E                      loop_marcador_reliquias_negro:	;asignar espacios en negro
      80.  00:815E  36 00               	LD		(HL), 0			;0 posición mapa tiles para nada (es transparente pero el fondo es negro)
      81.  00:8160  23                  	INC		HL
      82.  00:8161  10 FB               	DJNZ	loop_marcador_reliquias_negro
      83.  00:8163                      fin_loop_marcador_reliquias_negro:
      84.  00:8163                      	;2-pinto las cruces según el n de reliquias
      85.  00:8163  21 61 8B            	LD		HL, array_aux_reliquias
      86.  00:8166  3A 12 86            	LD		 A, (prota_reliquias)
      87.  00:8169  47                  	LD		 B, A
      88.  00:816A                      loop_marcador_reliquias: ;asignar reliquias
      89.  00:816A  36 11               	LD		(HL), POSRELIMAP	;17 posición mapa tiles para reliquia
      90.  00:816C  23                  	INC		HL
      91.  00:816D  10 FB               	DJNZ	loop_marcador_reliquias
      92.  00:816F                      fin_loop_marcador_reliquias:
      93.  00:816F                      fin_actualiza_marcador_reliquias:
      94.  00:816F  C9                  	RET
      95.  00:8170                      
      96.  00:8170                      
      97.  00:8170                      
      98.  00:8170                      ;;=====================================================
      99.  00:8170                      ;;LOCALIZA_INFO_HABITACION
     100.  00:8170                      ;;=====================================================	
     101.  00:8170                      ; función: 	busca las puertas que hay que pintar egún la posición del usuario y las pone en A
     102.  00:8170                      ; entrada: 	prota.pos_mapy, prota.pos_mapx, prota_nivel habitaciones_juego
     103.  00:8170                      ; salida: 	habitacion_actual
     104.  00:8170                      ; toca:		A
     105.  00:8170                      ;ejemplo: nivel 4, posx 5 y posy 3
     106.  00:8170                      ;  (4 x 7) x 16 (se necesitan dos bytes y el prod de 16 es slr 4 veces)
     107.  00:8170                      ; +(3 x 16) 	de la fila (se necesita 1 y byte el prod de 16 es slr 4 veces)
     108.  00:8170                      ; +5        	de la columna 
     109.  00:8170                      localiza_info_habitacion:
     110.  00:8170  D9                  		EXX
     111.  00:8171                      
     112.  00:8171                      ;primer sumando	(en el ejemplo + (4x7)x16)
     113.  00:8171  21 38 88            		LD		HL, habitaciones_juego
     114.  00:8174  3A 10 86            		LD		 A, (prota_nivel)	
     115.  00:8177  B7                  		OR		 A
     116.  00:8178  28 16               		JR		 Z, .no_suma_niveles_previos	;el primero nivel (0) no sumaría ni uno por lo que salto al segundo sumando
     117.  00:817A                      	;sumo 7 veces el nº de nivel si no es cero
     118.  00:817A  57                  		LD		 D, A
     119.  00:817B  06 06               		LD		 B, 6
     120.  00:817D                      .primer_producto
     121.  00:817D  82                  		ADD		 A, D
     122.  00:817E  10 FD               		DJNZ	 .primer_producto
     123.  00:8180  47                  		LD		 B, A				;guardo el resultado en B
     124.  00:8181                      
     125.  00:8181                      ;el resultado previo está en B. Ahoro hay que multiplicar A x 16, lo guardo en DE y lo sumo en HL
     126.  00:8181                      		;inicializo valores a 0
     127.  00:8181  AF                  		XOR		 A
     128.  00:8182  57                  		LD		 D, A
     129.  00:8183  5F                  		LD		 E, A
     130.  00:8184  67                  		LD		 H, A
     131.  00:8185  6F                  		LD		 L, A
     132.  00:8186                      
     133.  00:8186  58                  		LD		 E, B				;pongo el (4x7) en HL (estaba en B)
     134.  00:8187                      		
     135.  00:8187  06 10               		LD		 B, 16
     136.  00:8189                      .segundo_producto
     137.  00:8189  19                  		ADD		HL, DE				;segundo producto x 16
     138.  00:818A  10 FD               		DJNZ	.segundo_producto	
     139.  00:818C                      		
     140.  00:818C                      .fin_seg_prod:
     141.  00:818C                      	;coloco puntero DE al inicio de las habitaciones y le sumo para poner el puntero en el nivel que me interesa
     142.  00:818C  11 38 88            		LD		DE, habitaciones_juego
     143.  00:818F  19                  		ADD		HL, DE				;suma el nº de bytes de los niveles previos (4 x 7 x 16)
     144.  00:8190                      .no_suma_niveles_previos:
     145.  00:8190                      
     146.  00:8190                      ;ya tengo el puntero HL al inicio del nivel que me interesa
     147.  00:8190                      
     148.  00:8190                      ;segundo sumando (en el ejemplo + 3x16)
     149.  00:8190  3A 14 86            	LD		 A,(prota_pos_mapy)
     150.  00:8193                      [4]	SLA		 A				;equivalente a 3 x 16			
     150.  00:8193  CB 27 CB 27 CB 27 CB 27 
     151.  00:819B                      
     152.  00:819B  5F                  	LD		 E, A
     153.  00:819C  AF                  	XOR		 A
     154.  00:819D  57                  	LD		 D, A
     155.  00:819E  19                  	ADD		HL, DE			;equivale a 4x7x16 (HL) + 3x16 (DE)
     156.  00:819F                      
     157.  00:819F                      ;tercer sumando (en el ejemplo + 5)
     158.  00:819F  3A 13 86            	LD		 A, (prota_pos_mapx)
     159.  00:81A2  47                  	LD		 B, A
     160.  00:81A3                      .situa_columna:
     161.  00:81A3  23 23               [2]	INC		HL
     162.  00:81A5  10 FC               	DJNZ	.situa_columna
     163.  00:81A7                      
     164.  00:81A7                      ;ya tengo el puntero HL al inicio de la fila que me interesa
     165.  00:81A7                      
     166.  00:81A7                      ;colocamos resultado en habitación actual
     167.  00:81A7  DD 21 36 88         	LD		IX, habitacion_actual
     168.  00:81AB  7E                  	LD		 A, (HL)
     169.  00:81AC  DD 77 00            	LD		(IX), A
     170.  00:81AF  23                  	INC		HL
     171.  00:81B0  7E                  	LD		 A, (HL)
     172.  00:81B1  DD 77 01            	LD		(IX+1), A
     173.  00:81B4                      	
     174.  00:81B4  D9                  	EXX
     175.  00:81B5                      fin_localiza_info_habitacion:
     176.  00:81B5  C9                  	RET
     177.  00:81B6                      
     178.  00:81B6                      
     179.  00:81B6                      
     180.  00:81B6                      
     367   00:81B6                      	
     368   00:81B6                      	include "subr_pintapantalla.asm"
       1.  00:81B6                      ;;=====================================================
       2.  00:81B6                      ;;DEFINICIÓN DE SUBRUTINAS
       3.  00:81B6                      ;;=====================================================	
       4.  00:81B6                      ;relacionadas con pintado en pantalla (y no sprites)
       5.  00:81B6                      
       6.  00:81B6                      
       7.  00:81B6                      ;;=====================================================
       8.  00:81B6                      ;;PREPARAPANTALLA
       9.  00:81B6                      ;;=====================================================	
      10.  00:81B6                      ; función: elimina clic cuando se pulsa tecla, cls, screen 2,2
      11.  00:81B6                      ; entrada: -
      12.  00:81B6                      ; salida: -
      13.  00:81B6                      ; toca: si no son todos los regristros, casi todos
      14.  00:81B6                      sub_preparapantalla:
      15.  00:81B6                      	;toca A y Z
      16.  00:81B6                      elimina_clic;
      17.  00:81B6  AF                  	XOR		 A
      18.  00:81B7  32 DB F3            	LD		(CLIKSW),A
      19.  00:81BA                      fin_elimina_clic:
      20.  00:81BA                      
      21.  00:81BA                      	;toca A
      22.  00:81BA                      limpia_pantalla:
      23.  00:81BA  AF                  	XOR			A
      24.  00:81BB  CD C3 00            	CALL 		CLS
      25.  00:81BE                      fin_limpia_pantalla:
      26.  00:81BE                      
      27.  00:81BE                      	;toca A y direcciones #F3E9/#F3EA/#F3EB
      28.  00:81BE                      set_color:
      29.  00:81BE  3E 02               	LD		 A,2				;verde oscuro
      30.  00:81C0  32 E9 F3            	LD 		(FORCLR),A
      31.  00:81C3  3E 01               	LD		 A,1				;negro
      32.  00:81C5  32 EA F3            	LD 		(BAKCLR),A
      33.  00:81C8  3E 01               	LD		 A,1				;negro
      34.  00:81CA  32 EB F3            	LD 		(BDRCLR),A
      35.  00:81CD  CD 62 00            	CALL	CHGCLR  
      36.  00:81D0                      fin_set_color:
      37.  00:81D0                      	
      38.  00:81D0                      	;cambiamos a SCREEN 2,2 del BASIC
      39.  00:81D0                      	;toca A
      40.  00:81D0                      screen2:
      41.  00:81D0  3E 02               	LD		 A,2
      42.  00:81D2  CD 5F 00            	CALL	CHGMOD			;selecciona screen 2
      43.  00:81D5                      sprites_16_16:
      44.  00:81D5  3A E0 F3            	LD		 A,(RG1SAV)
      45.  00:81D8  F6 02               	OR		00000010b		;fuerza sprites de 16x16
      46.  00:81DA  32 E0 F3            	LD		(RG1SAV),A		;no lo guardamos en la copia de variables del sistema
      47.  00:81DD  47                  	LD		 B,A
      48.  00:81DE  0E 01               	LD		 C,1
      49.  00:81E0  C3 47 00            	JP		WRTVDP			;opción alternativa de escribir las tres lineas siguientes
      50.  00:81E3                      	;~ CALL	WRTVDP			;lo escribe en el registro 1 del VDP
      51.  00:81E3                      	;~ RET
      52.  00:81E3                      fin_sub_preparapantalla:
      53.  00:81E3                      	
      54.  00:81E3                      
      55.  00:81E3                      ;;=====================================================
      56.  00:81E3                      ;;PINTA_PANTALLA_COMPLETA
      57.  00:81E3                      ;;=====================================================	
      58.  00:81E3                      ; función: pinta el escenario, las 3 partes
      59.  00:81E3                      ; entrada: -
      60.  00:81E3                      ; salida: -
      61.  00:81E3                      ; toca: si no son todos los regristros, casi todos
      62.  00:81E3                      pinta_pantalla_completa:
      63.  00:81E3  CD EA 81            	CALL 	pinta_parte_superior_pantalla
      64.  00:81E6                      	
      65.  00:81E6  CD 21 82            	CALL 	pinta_parte_inferior_pantalla	
      66.  00:81E9                      fin_pinta_pantalla_completa:
      67.  00:81E9  C9                  	RET
      68.  00:81EA                      
      69.  00:81EA                      
      70.  00:81EA                      ;;=====================================================
      71.  00:81EA                      ;;PINTA_PARTE_SUPERIOR_PANTALLA
      72.  00:81EA                      ;;=====================================================	
      73.  00:81EA                      ; función: pinta el escenario, las 2 partes superiores y actualiza puertas
      74.  00:81EA                      ; entrada: -
      75.  00:81EA                      ; salida: -
      76.  00:81EA                      ; toca: si no son todos los regristros, casi todos
      77.  00:81EA                      pinta_parte_superior_pantalla:
      78.  00:81EA                      
      79.  00:81EA                      ;************** preguntar cómo parametrizar esto **********************************************
      80.  00:81EA                      
      81.  00:81EA                      	;cangando banco 1
      82.  00:81EA                      	;cargamos los patrones
      83.  00:81EA  21 CA 8C            	LD		HL, tiles_patrones_pantalla11
      84.  00:81ED  11 00 00            	LD		DE, CHRTBL
      85.  00:81F0  CD 30 85            	CALL	depack_VRAM
      86.  00:81F3                      	;cargamos mapa de pantalla
      87.  00:81F3  21 05 8D            	LD		HL, tiles_mapa_pantalla11
      88.  00:81F6  11 00 18            	LD		DE, TILMAP
      89.  00:81F9  CD 30 85            	CALL	depack_VRAM
      90.  00:81FC                      	;cargamos los colores de los patrones
      91.  00:81FC  21 ED 8C            	LD		HL, tiles_color_pantalla11
      92.  00:81FF  11 00 20            	LD		DE, CLRTBL
      93.  00:8202  CD 30 85            	CALL	depack_VRAM
      94.  00:8205                      	
      95.  00:8205                      	;cangando banco 2
      96.  00:8205                      	;cargamos los patrones
      97.  00:8205  21 CA 8C            	LD		HL, tiles_patrones_pantalla12
      98.  00:8208  11 00 08            	LD		DE, CHRTBL + #0800
      99.  00:820B  CD 30 85            	CALL	depack_VRAM	
     100.  00:820E                      	;cargamos mapa de pantalla
     101.  00:820E  21 1F 8D            	LD		HL, tiles_mapa_pantalla12
     102.  00:8211  11 00 19            	LD		DE, TILMAP + #0100
     103.  00:8214  CD 30 85            	CALL	depack_VRAM
     104.  00:8217                      	;cargamos los colores de los patrones
     105.  00:8217  21 ED 8C            	LD		HL, tiles_color_pantalla12
     106.  00:821A  11 00 28            	LD		DE, CLRTBL + #0800
     107.  00:821D                      	;JP		depack_VRAM
     108.  00:821D  CD 30 85            	CALL	depack_VRAM
     109.  00:8220                      fin_pinta_parte_superior_pantalla:
     110.  00:8220  C9                  	RET
     111.  00:8221                      
     112.  00:8221                      
     113.  00:8221                      ;;=====================================================
     114.  00:8221                      ;;PINTA_PARTE_INFERIOR_PANTALLA
     115.  00:8221                      ;;=====================================================	
     116.  00:8221                      ; función: pinta la parte inferior del escenario que es común
     117.  00:8221                      ; entrada: -
     118.  00:8221                      ; salida: -
     119.  00:8221                      ; toca: si no son todos los regristros, casi todos
     120.  00:8221                      pinta_parte_inferior_pantalla:
     121.  00:8221                      	;cangando banco 3
     122.  00:8221                      	;cargamos los patrones
     123.  00:8221  21 49 8D            	LD		HL,tiles_patrones_pantalla3
     124.  00:8224  11 00 10            	LD		DE,CHRTBL + #1000
     125.  00:8227  CD 30 85            	CALL	depack_VRAM	
     126.  00:822A                      	;cargamos mapa de pantalla
     127.  00:822A  21 C4 8E            	LD		HL,tiles_mapa_pantalla3
     128.  00:822D  11 00 1A            	LD		DE,TILMAP + #0200
     129.  00:8230  CD 30 85            	CALL	depack_VRAM
     130.  00:8233                      	;cargamos los colores de los patrones
     131.  00:8233  21 8F 8E            	LD		HL,tiles_color_pantalla3
     132.  00:8236  11 00 30            	LD		DE,CLRTBL + #1000
     133.  00:8239  C3 30 85            	JP		depack_VRAM
     134.  00:823C                      	;~ CALL	depack_VRAM
     135.  00:823C                      fin_pinta_parte_inferior_pantalla:
     136.  00:823C                      	;~ RET
     137.  00:823C                      
     138.  00:823C                      
     139.  00:823C                      
     140.  00:823C                      ;;=====================================================
     141.  00:823C                      ;;PINTA_VIDAS
     142.  00:823C                      ;;=====================================================	
     143.  00:823C                      ; función: 	actualiza el mapa de tiles para que en el próximo refresco se pinten y actualiza_vidas
     144.  00:823C                      ; entrada: 	array_aux_vidas
     145.  00:823C                      ; salida: 	actualiza_vidas_sn
     146.  00:823C                      ; toca:		AF
     147.  00:823C                      pinta_vidas:
     148.  00:823C  D9                  	EXX
     149.  00:823D                      	
     150.  00:823D  21 58 8B            	LD		HL, array_aux_vidas
     151.  00:8240  11 48 1A            	LD		DE, TILMAP + POSVIDAS 	;inicio posición en el mapa de tiles de las vidas
     152.  00:8243  01 08 00            	LD		BC, NMAXVIDREL			;hay 8 posiciones para vidas/reliquias o espacios en negro si no tiene 8 vidas/reliquias
     153.  00:8246  CD 5C 00            	CALL	LDIRVM
     154.  00:8249                      	
     155.  00:8249                      	;una vez quer está pintada ya no se actualizará a menos que perdamos/ganemos una vida
     156.  00:8249  AF                  	XOR		 A
     157.  00:824A  32 60 8B            	LD		(actualiza_vidas_sn),A
     158.  00:824D                      
     159.  00:824D  D9                  	EXX
     160.  00:824E                      fin_pinta_vidas:
     161.  00:824E  C9                  	RET
     162.  00:824F                      	
     163.  00:824F                      	
     164.  00:824F                      
     165.  00:824F                      ;;=====================================================
     166.  00:824F                      ;;PINTA_RELIQUIAS
     167.  00:824F                      ;;=====================================================	
     168.  00:824F                      ; función: 	actualiza el mapa de tiles para que en el próximo refresco se pinten y actualiza_reliquias
     169.  00:824F                      ; entrada: 	array_aux_reliquias
     170.  00:824F                      ; salida: 	actualiza_reliquias_sn
     171.  00:824F                      ; toca:		AF
     172.  00:824F                      pinta_reliquias:
     173.  00:824F  D9                  	EXX
     174.  00:8250                      	
     175.  00:8250  21 61 8B            	LD		HL, array_aux_reliquias
     176.  00:8253  11 C8 1A            	LD		DE, TILMAP + POSRELIQ 	;inicio posición en el mapa de tiles de las vidas
     177.  00:8256  01 08 00            	LD		BC, NMAXVIDREL			;hay 8 posiciones para vidas/reliquias o espacios en negro si no tiene 8 vidas/reliquias
     178.  00:8259  CD 5C 00            	CALL	LDIRVM
     179.  00:825C                      	
     180.  00:825C                      	;una vez quer está pintada ya no se actualizará a menos que ganemos/gastemos una reliquia
     181.  00:825C  AF                  	XOR		 A
     182.  00:825D  32 69 8B            	LD		(actualiza_reliquias_sn), A
     183.  00:8260                      
     184.  00:8260  D9                  	EXX
     185.  00:8261                      fin_pinta_reliquias:
     186.  00:8261  C9                  	RET
     187.  00:8262                      	
     188.  00:8262                      
     189.  00:8262                      
     190.  00:8262                      	
     191.  00:8262                      ;;=====================================================
     192.  00:8262                      ;;PINTA_NIVEL
     193.  00:8262                      ;;=====================================================	
     194.  00:8262                      ; función: 	actualiza el nivel en la parte de puntuación
     195.  00:8262                      ; entrada: 	prota_nivel
     196.  00:8262                      ; salida: 	-
     197.  00:8262                      ; toca:		HL,DE,BC
     198.  00:8262                      pinta_nivel:	
     199.  00:8262                      	;forma más avanzada sin llamada a la bios
     200.  00:8262  01 B4 1A            	LD		BC,TILMAP + POSNIVEL ;posición en el mapa de tiles del tile de nivel
     201.  00:8265  3A 10 86            	LD		 A, (prota_nivel)	;seleccionando la pos del banco de tiles a poner en el mapa
     202.  00:8268  C6 30               	ADD		'0'	
     203.  00:826A  57                  	LD		 D, A
     204.  00:826B                      	
     205.  00:826B  CD 6F 82            	CALL	pinta_tile_suelto	;nota ... un call+ret se debe poder sustiruir por un jp
     206.  00:826E                      fin_pinta_nivel:
     207.  00:826E  C9                  	RET
     208.  00:826F                      
     209.  00:826F                      
     210.  00:826F                      
     211.  00:826F                      ;;=====================================================
     212.  00:826F                      ;;PINTA_TILE_SUELTO
     213.  00:826F                      ;;=====================================================	
     214.  00:826F                      ; función: 	pinta al tile que digamos en D, en la posición BC
     215.  00:826F                      ; entrada: 	BC (posición a pintar en el mapa),D (qué se va a pintar el esa posición)
     216.  00:826F                      ; salida: 	-
     217.  00:826F                      ; toca:		-
     218.  00:826F                      pinta_tile_suelto:
     219.  00:826F  DB 99               	IN		 A,(REGEST)		;leer registro de estado (recomendado)
     220.  00:8271  79                  	LD		 A,C			;primero byte bajo	
     221.  00:8272  D3 99               	OUT		(REGEST),A
     222.  00:8274  78                  	LD		 A,B			;después byte alto  ********************** preguntar a Fernando cómo que byte bajo es B
     223.  00:8275  F6 40               	OR		1000000b		;+64
     224.  00:8277  D3 99               	OUT		(REGEST),A
     225.  00:8279                      	
     226.  00:8279  7A                  	LD		A,D
     227.  00:827A  D3 98               	OUT		(REGESCVDP),A	;escribe A en VRAM en la posición indicada por los dos OUT anteriores
     228.  00:827C                      fin_pinta_tile_suelto:
     229.  00:827C  C9                  	RET
     230.  00:827D                      
     231.  00:827D                      
     232.  00:827D                      
     233.  00:827D                      
     234.  00:827D                      
     235.  00:827D                      ;;=====================================================
     236.  00:827D                      ;;MIRA_PINTA ENERGIA
     237.  00:827D                      ;;=====================================================	
     238.  00:827D                      ; función: 	actualiza el nivel de energia en la parte de puntuación
     239.  00:827D                      ; nota:		el cuadrado más bajo de ejergía siempre estará pintado... se obviará
     240.  00:827D                      ; entrada: 	prota.energia, array_aux_energia
     241.  00:827D                      ; salida: 	-
     242.  00:827D                      ; toca:		ninguno porque usa EXX
     243.  00:827D                      
     244.  00:827D                      ; nota importante... lo mismo interesa hacer esto con un array para comparar y un bucle
     245.  00:827D                      
     246.  00:827D                      
     247.  00:827D                      mira_pinta_energia:
     248.  00:827D  D9                  	EXX							;por si acaso guardo el contenido de HL (si veo que no es necesario guardarlo lo quito) uso esto en vez de push por el nº ciclos
     249.  00:827E                      	
     250.  00:827E  3A 15 86            	LD		 A,(prota_energia) 	;para las comparaciones A variable (actual) y B fijo (limites)
     251.  00:8281                      
     252.  00:8281  0E 00               	LD		 C,TILENEGRO		;para agilizar asignaciones en vez de un valor cte uso otro registro
     253.  00:8283                      pinta_ener:
     254.  00:8283                      pinta_ener_tile_8:
     255.  00:8283  21 71 8B            	LD		HL,ultimo_pos_array_aux_energia	;coloco puntero en array e iré decrementando
     256.  00:8286  06 D9               	LD		 B,TILEENERG8
     257.  00:8288  B8                  	CP		 B
     258.  00:8289  38 04               	JR		C,pinta_ener_tile_8_negro
     259.  00:828B  36 0E               	LD		(HL),TILEMAPVERD
     260.  00:828D  18 01               	JR		pinta_ener_tile_7
     261.  00:828F                      pinta_ener_tile_8_negro:
     262.  00:828F  71                  	LD		(HL),C
     263.  00:8290                      
     264.  00:8290                      pinta_ener_tile_7:
     265.  00:8290  2B                  	DEC		HL
     266.  00:8291  06 BA               	LD		 B,TILEENERG7
     267.  00:8293  B8                  	CP		 B
     268.  00:8294  38 04               	JR		C,pinta_ener_tile_7_negro
     269.  00:8296  36 0E               	LD		(HL),TILEMAPVERD
     270.  00:8298  18 01               	JR		pinta_ener_tile_6
     271.  00:829A                      pinta_ener_tile_7_negro:
     272.  00:829A  71                  	LD		(HL),C
     273.  00:829B                      
     274.  00:829B                      pinta_ener_tile_6:
     275.  00:829B  2B                  	DEC		HL
     276.  00:829C  06 9B               	LD		 B,TILEENERG6
     277.  00:829E  B8                  	CP		 B
     278.  00:829F  38 04               	JR		C,pinta_ener_tile_6_negro
     279.  00:82A1  36 0E               	LD		(HL),14
     280.  00:82A3  18 01               	JR		pinta_ener_tile_5
     281.  00:82A5                      pinta_ener_tile_6_negro:
     282.  00:82A5  71                  	LD		(HL),C
     283.  00:82A6                      
     284.  00:82A6                      pinta_ener_tile_5:
     285.  00:82A6  2B                  	DEC		HL
     286.  00:82A7  06 7C               	LD		 B,TILEENERG5
     287.  00:82A9  B8                  	CP		 B
     288.  00:82AA  38 04               	JR		C,pinta_ener_tile_5_negro
     289.  00:82AC  36 0E               	LD		(HL),TILEMAPVERD
     290.  00:82AE  18 01               	JR		pinta_ener_tile_4
     291.  00:82B0                      pinta_ener_tile_5_negro:
     292.  00:82B0  71                  	LD		(HL),C
     293.  00:82B1                      
     294.  00:82B1                      pinta_ener_tile_4:
     295.  00:82B1  2B                  	DEC		HL
     296.  00:82B2  06 5D               	LD		 B,TILEENERG4
     297.  00:82B4  B8                  	CP		 B
     298.  00:82B5  38 04               	JR		C,pinta_ener_tile_4_negro
     299.  00:82B7  36 0F               	LD		(HL),TILEMAPAMAR
     300.  00:82B9  18 01               	JR		pinta_ener_tile_3
     301.  00:82BB                      pinta_ener_tile_4_negro:
     302.  00:82BB  71                  	LD		(HL),C
     303.  00:82BC                      	
     304.  00:82BC                      pinta_ener_tile_3:
     305.  00:82BC  2B                  	DEC		HL
     306.  00:82BD  06 3E               	LD		 B,TILEENERG3
     307.  00:82BF  B8                  	CP		 B
     308.  00:82C0  38 04               	JR		C,pinta_ener_tile_3_negro
     309.  00:82C2  36 0F               	LD		(HL),TILEMAPAMAR
     310.  00:82C4  18 01               	JR		pinta_ener_tile_2
     311.  00:82C6                      pinta_ener_tile_3_negro:
     312.  00:82C6  71                  	LD		(HL),C
     313.  00:82C7                      
     314.  00:82C7                      pinta_ener_tile_2:
     315.  00:82C7  2B                  	DEC		HL
     316.  00:82C8  06 1F               	LD		 B,TILEENERG2
     317.  00:82CA  B8                  	CP		 B
     318.  00:82CB  38 04               	JR		C,pinta_ener_tile_2_negro
     319.  00:82CD  36 10               	LD		(HL),TILEMAPROJO
     320.  00:82CF  18 01               	JR		fin_mira_pinta_energia		;siempre estará pintado el cuadro mínimo
     321.  00:82D1                      pinta_ener_tile_2_negro:
     322.  00:82D1  71                  	LD		(HL),C
     323.  00:82D2                      
     324.  00:82D2                      fin_mira_pinta_energia:
     325.  00:82D2  D9                  	EXX
     326.  00:82D3  C9                  	RET
     327.  00:82D4                      
     328.  00:82D4                      
     329.  00:82D4                      ;;=====================================================
     330.  00:82D4                      ;;PINTA_ENERGIA
     331.  00:82D4                      ;;=====================================================	
     332.  00:82D4                      ; función: 	actualiza el mapa de tiles para que en el próximo refresco se pinte la barra de energia actual
     333.  00:82D4                      ; entrada: 	array_aux_energia
     334.  00:82D4                      ; toca:		AF
     335.  00:82D4                      pinta_energia:
     336.  00:82D4  D9                  	EXX
     337.  00:82D5                      	
     338.  00:82D5  21 6A 8B            	LD		HL, array_aux_energia
     339.  00:82D8  11 88 1A            	LD		DE, TILMAP + POSENERG 	;inicio posición en el mapa de tiles de las vidas
     340.  00:82DB  01 08 00            	LD		BC, NMAXVIDREL			;hay 8 posiciones para vidas/reliquias o espacios en negro si no tiene 8 vidas/reliquias
     341.  00:82DE  CD 5C 00            	CALL	LDIRVM
     342.  00:82E1                      		
     343.  00:82E1  D9                  	EXX
     344.  00:82E2                      fin_pinta_energia:
     345.  00:82E2  C9                  	RET
     346.  00:82E3                      
     347.  00:82E3                      
     348.  00:82E3                      
     349.  00:82E3                      ;;=====================================================
     350.  00:82E3                      ;;BORRA_MAPA
     351.  00:82E3                      ;;=====================================================	
     352.  00:82E3                      ; función: 	pone todas las habitaciones del mapa a negro (los tiles del mapa los rellena con un array a 0 - caracter en negro)
     353.  00:82E3                      ; entrada: 	array_aux_mapa_limpiar
     354.  00:82E3                      ; salida: 	-
     355.  00:82E3                      ; toca:		AF
     356.  00:82E3                      borra_mapa:
     357.  00:82E3  D9                  	EXX
     358.  00:82E4                      	
     359.  00:82E4  21 72 8B            	LD		HL,array_aux_mapa_limpiar
     360.  00:82E7  11 F8 1A            	LD		DE,TILMAP + POSMAPLIN1 	;inicio posición en el mapa de tiles de la primera fila del mapa
     361.  00:82EA  01 07 00            	LD		BC,NHABNIVEL			;cada nivel son 7 filas con 7 habitaciones "posibles"
     362.  00:82ED  CD 5C 00            	CALL	LDIRVM
     363.  00:82F0                      	
     364.  00:82F0  21 72 8B            	LD		HL,array_aux_mapa_limpiar
     365.  00:82F3  11 D8 1A            	LD		DE,TILMAP + POSMAPLIN2
     366.  00:82F6  01 07 00            	LD		BC,NHABNIVEL
     367.  00:82F9  CD 5C 00            	CALL	LDIRVM
     368.  00:82FC                      
     369.  00:82FC  21 72 8B            	LD		HL,array_aux_mapa_limpiar
     370.  00:82FF  11 B8 1A            	LD		DE,TILMAP + POSMAPLIN3
     371.  00:8302  01 07 00            	LD		BC,NHABNIVEL
     372.  00:8305  CD 5C 00            	CALL	LDIRVM
     373.  00:8308                      
     374.  00:8308  21 72 8B            	LD		HL,array_aux_mapa_limpiar	
     375.  00:830B  11 98 1A            	LD		DE,TILMAP + POSMAPLIN4
     376.  00:830E  01 07 00            	LD		BC,NHABNIVEL
     377.  00:8311  CD 5C 00            	CALL	LDIRVM
     378.  00:8314                      
     379.  00:8314  21 72 8B            	LD		HL,array_aux_mapa_limpiar	
     380.  00:8317  11 78 1A            	LD		DE,TILMAP + POSMAPLIN5
     381.  00:831A  01 07 00            	LD		BC,NHABNIVEL
     382.  00:831D  CD 5C 00            	CALL	LDIRVM
     383.  00:8320                      
     384.  00:8320  21 72 8B            	LD		HL,array_aux_mapa_limpiar	
     385.  00:8323  11 58 1A            	LD		DE,TILMAP + POSMAPLIN6
     386.  00:8326  01 07 00            	LD		BC,NHABNIVEL
     387.  00:8329  CD 5C 00            	CALL	LDIRVM
     388.  00:832C                      
     389.  00:832C  21 72 8B            	LD		HL,array_aux_mapa_limpiar	
     390.  00:832F  11 38 1A            	LD		DE,TILMAP + POSMAPLIN7
     391.  00:8332  01 07 00            	LD		BC,NHABNIVEL
     392.  00:8335  CD 5C 00            	CALL	LDIRVM
     393.  00:8338                      	
     394.  00:8338  D9                  	EXX
     395.  00:8339                      fin_borra_mapa:
     396.  00:8339  C9                  	RET
     397.  00:833A                      
     398.  00:833A                      
     399.  00:833A                      
     400.  00:833A                      
     401.  00:833A                      
     402.  00:833A                      
     403.  00:833A                      
     404.  00:833A                      
     405.  00:833A                      
     406.  00:833A                      ;=====================================================
     407.  00:833A                      ;;PINTA_ARRAY
     408.  00:833A                      ;;=====================================================	
     409.  00:833A                      ;;;funcion:  se le pasa un array con posiciones de tiles y coordenadas x e y y los pinta en screen 2
     410.  00:833A                      ;;entrada:	wordaux1 (pos inicio sc2 donde pintar) y wordaux2 (puntero al array a pintar), BC (posición en tilemap) , D filas y E columnas
     411.  00:833A                      ;;salida:	-
     412.  00:833A                      ;;importante: necesita de una variable wordaux1 tipo WD (wordaux1: 	DW	0)
     413.  00:833A                      ;; ejemplo llamada:
     414.  00:833A                      	;~ LD		HL,array_tiles					;guardo puntero al array a pintar (como psar por referencia)
     415.  00:833A                      	;~ LD		(wordaux2),HL					;en la variable wordaux2
     416.  00:833A                      	;~ LD		HL,SC2MAP + 256 + 32			;calcula posición en tilemap
     417.  00:833A                      	;~ LD		(wordaux1),HL					;guarda valor pos tilemap en wordaux1
     418.  00:833A                      	;~ LD		B,H								;coloca posición tilemap BC
     419.  00:833A                      	;~ LD		C,L
     420.  00:833A                      	;~ LD		D,2								;nº de filas
     421.  00:833A                      	;~ LD		E,3								;nº de columnas
     422.  00:833A                      	;~ CALL	pinta_array
     423.  00:833A                      
     424.  00:833A                      pinta_array:
     425.  00:833A  F5                  	PUSH	AF
     426.  00:833B                      	
     427.  00:833B                      	;contamos con que la posición "global" en el tilemap está ya en BC
     428.  00:833B                      	;y el puntero al array a pintar en wordaux2 y la posición en tilemap sc2 en wordaux1
     429.  00:833B                      	;inicializa
     430.  00:833B  DB 99               	IN		 A,(REGEST)		;leer registro de estado (recomendado)
     431.  00:833D                      	
     432.  00:833D                      	;coloca puntero para pintar tile según BC
     433.  00:833D  79                  	LD		 A,C			;primero byte bajo	
     434.  00:833E  D3 99               	OUT		(REGEST),A
     435.  00:8340  78                  	LD		 A,B			;después byte alto  ********************** preguntar a Fernando cómo que byte bajo es B
     436.  00:8341  F6 40               	OR		1000000b		;+64
     437.  00:8343  D3 99               	OUT		(REGEST),A
     438.  00:8345                      
     439.  00:8345                      	
     440.  00:8345  2A 6F 83            	LD		HL,(wordaux2)	;HL es lo que se pintará y le he pasado el puntero del array tilemap a pintar
     441.  00:8348                      .pa_pinta_fila:
     442.  00:8348  43                  	LD		 B,E
     443.  00:8349                      .pa_pinta_columnas: 		;finta la fila (pintando las columnas)
     444.  00:8349  7E                  	LD		 A,(HL)
     445.  00:834A  D3 98               	OUT		(REGESCVDP),A	;escribe A en VRAM en la posición indicada por los dos OUT anteriores
     446.  00:834C  23                  	INC		HL
     447.  00:834D  10 FA               	DJNZ	.pa_pinta_columnas
     448.  00:834F                      	
     449.  00:834F                      	;no es una solución elegante lo de repetir código pero queda claro
     450.  00:834F                      	;por si hay otra fila
     451.  00:834F  E5                  	PUSH	HL
     452.  00:8350  2A 6D 83            	LD		HL,(wordaux1)
     453.  00:8353  01 20 00            	LD		BC,32
     454.  00:8356  09                  	ADD		HL,BC
     455.  00:8357  22 6D 83            	LD		(wordaux1),HL
     456.  00:835A  44                  	LD		B,H
     457.  00:835B  4D                  	LD		C,L
     458.  00:835C  E1                  	POP		HL
     459.  00:835D                      	
     460.  00:835D  79                  	LD		 A,C			;primero byte bajo	
     461.  00:835E  D3 99               	OUT		(REGEST),A
     462.  00:8360  78                  	LD		 A,B			;después byte alto 
     463.  00:8361  F6 40               	OR		1000000b		;+64
     464.  00:8363  D3 99               	OUT		(REGEST),A
     465.  00:8365                      	
     466.  00:8365                      	;si hay otra fila repite
     467.  00:8365  15                  	DEC		 D
     468.  00:8366  7A                  	LD		 A,D		;¿hay otra fila?
     469.  00:8367  B7                  	OR		 A
     470.  00:8368  C2 48 83            	JP		NZ,.pa_pinta_fila
     471.  00:836B                      	
     472.  00:836B  F1                  	POP		AF
     473.  00:836C                      	
     474.  00:836C                      fin_pinta_array:
     475.  00:836C  C9                  	RET
     476.  00:836D                      ;;variables asocidas a la función (no sé si dejarlo aquí y encapsularlo todo o hacerla reutilizable)
     477.  00:836D                      ;; por de pronto la dejo aquí
     478.  00:836D  00 00               wordaux1:		DW	0	;almacena la posición en el tilemap 0 al 675
     479.  00:836F  00 00               wordaux2:		DW	0	;almacena puntero a array de tiles (posiciones en realidad) a pintar (posiciones repetidas en los 3 bancos)
     480.  00:8371                      
     481.  00:8371                      
     482.  00:8371                      
     483.  00:8371                      
     484.  00:8371                      
     485.  00:8371                      ;;=====================================================
     486.  00:8371                      ;;PINTA_PUERTAS
     487.  00:8371                      ;;=====================================================	
     488.  00:8371                      ; función: 	examina A y mira si tiene que pintar puertas de los lados, arriba o abrajo o las escaleras (o no)
     489.  00:8371                      ; entrada: 	habitacion_actual 1 escalera 1 puerta arriba 1 pu der 1 pu aba 1 pu izq (si es 0 pinta pared)
     490.  00:8371                      ; salida: 	-
     491.  00:8371                      ; toca:		- uso EXX
     492.  00:8371                      pinta_puertas:
     493.  00:8371  D9                  	EXX
     494.  00:8372                      	
     495.  00:8372  3A 36 88            	LD		 A, (habitacion_actual)		;se mete en A porque la función pide A y para no buscar el valor 4 veces
     496.  00:8375                      
     497.  00:8375                      ;	BIT		 4, A
     498.  00:8375                      ;	CALL	nz, pinta_escalera
     499.  00:8375                      
     500.  00:8375  CB 5F               	BIT		 3, A
     501.  00:8377  C4 A4 83            	CALL	nz, pinta_puerta_arr
     502.  00:837A                      
     503.  00:837A  CB 57               	BIT		 2, A
     504.  00:837C  C4 B9 83            	CALL	nz, pinta_puerta_der
     505.  00:837F                      
     506.  00:837F  CB 4F               	BIT		 1, A
     507.  00:8381  C4 8F 83            	CALL	nz, pinta_puerta_aba
     508.  00:8384                      	
     509.  00:8384  CB 47               	BIT		 0, A
     510.  00:8386  C4 CE 83            	CALL	nz, pinta_puerta_izq
     511.  00:8389                      	
     512.  00:8389  AF                  	XOR		 A
     513.  00:838A  32 79 8B            	LD		(actualiza_puertas_sn), A ;(1 actualiza y 0 no actualiza puertas) se pone a 0 para que no actualice todo el tiempo (ya se ha actualizado)... me hubiera gustado poner cte NO pero es más rápido así
     514.  00:838D                      
     515.  00:838D  D9                  	EXX
     516.  00:838E                      fin_pinta_puertas:
     517.  00:838E  C9                  	RET
     518.  00:838F                      
     519.  00:838F                      
     520.  00:838F                      
     521.  00:838F                      
     522.  00:838F                      ;;=====================================================
     523.  00:838F                      ;;PINTA_PUERTA_ABA
     524.  00:838F                      ;;=====================================================	
     525.  00:838F                      ; función: 	pinta la puerta de abajo
     526.  00:838F                      ; entrada: 	array_puerta_abajo, wordaux2, wordaux1
     527.  00:838F                      ; salida: 	-
     528.  00:838F                      ; toca:		HL,BC, DE
     529.  00:838F                      pinta_puerta_aba:
     530.  00:838F  21 A3 8B            	LD		HL,array_puerta_abajo			;guardo puntero al array a pintar (como psar por referencia)
     531.  00:8392  22 6F 83            	LD		(wordaux2),HL					;en la variable wordaux2
     532.  00:8395  21 EE 19            	LD		HL,TILMAP + POSPUERABAJ			;calcula posición en tilemap
     533.  00:8398  22 6D 83            	LD		(wordaux1),HL					;guarda valor pos tilemap en wordaux1
     534.  00:839B  44                  	LD		B,H								;coloca posición tilemap BC
     535.  00:839C  4D                  	LD		C,L
     536.  00:839D  16 01               	LD		D,1								;nº de filas
     537.  00:839F  1E 04               	LD		E,4								;nº de columnas
     538.  00:83A1  C3 3A 83            	JP		pinta_array
     539.  00:83A4                      	;~ CALL	pinta_array
     540.  00:83A4                      fin_pinta_puerta_aba:
     541.  00:83A4                      	;~ RET
     542.  00:83A4                      
     543.  00:83A4                      ;;=====================================================
     544.  00:83A4                      ;;PINTA_PUERTA_ARR
     545.  00:83A4                      ;;=====================================================	
     546.  00:83A4                      ; función: 	pinta la puerta de arriba
     547.  00:83A4                      ; entrada: 	array_puerta_arriba, wordaux2, wordaux1
     548.  00:83A4                      ; salida: 	-
     549.  00:83A4                      ; toca:		HL,BC, DE
     550.  00:83A4                      pinta_puerta_arr:
     551.  00:83A4  21 7A 8B            	LD		HL,array_puerta_arriba			;guardo puntero al array a pintar (como psar por referencia)
     552.  00:83A7  22 6F 83            	LD		(wordaux2),HL					;en la variable wordaux2
     553.  00:83AA  21 8E 18            	LD		HL,TILMAP + POSPUERARRI			;calcula posición en tilemap
     554.  00:83AD  22 6D 83            	LD		(wordaux1),HL					;guarda valor pos tilemap en wordaux1
     555.  00:83B0  44                  	LD		B,H								;coloca posición tilemap BC
     556.  00:83B1  4D                  	LD		C,L
     557.  00:83B2  16 05               	LD		D,5								;nº de filas
     558.  00:83B4  1E 04               	LD		E,4								;nº de columnas
     559.  00:83B6  C3 3A 83            	JP		pinta_array
     560.  00:83B9                      	;~ CALL	pinta_array
     561.  00:83B9                      fin_pinta_puerta_arr:
     562.  00:83B9                      	;~ RET
     563.  00:83B9                      
     564.  00:83B9                      ;;=====================================================
     565.  00:83B9                      ;;PINTA_PUERTA_DER
     566.  00:83B9                      ;;=====================================================	
     567.  00:83B9                      ; función: 	pinta la puerta de la derecha
     568.  00:83B9                      ; entrada: 	array_puerta_derecha, wordaux2, wordaux1
     569.  00:83B9                      ; salida: 	-
     570.  00:83B9                      ; toca:		HL,BC, DE
     571.  00:83B9                      pinta_puerta_der:
     572.  00:83B9  21 8E 8B            	LD		HL,array_puerta_derecha			;guardo puntero al array a pintar (como psar por referencia)
     573.  00:83BC  22 6F 83            	LD		(wordaux2),HL					;en la variable wordaux2
     574.  00:83BF  21 FC 18            	LD		HL,TILMAP + POSPUERDERE			;calcula posición en tilemap
     575.  00:83C2  22 6D 83            	LD		(wordaux1),HL					;guarda valor pos tilemap en wordaux1
     576.  00:83C5  44                  	LD		B,H								;coloca posición tilemap BC
     577.  00:83C6  4D                  	LD		C,L
     578.  00:83C7  16 07               	LD		D,7								;nº de filas
     579.  00:83C9  1E 03               	LD		E,3								;nº de columnas
     580.  00:83CB  C3 3A 83            	JP		pinta_array
     581.  00:83CE                      	;~ CALL	pinta_array
     582.  00:83CE                      fin_pinta_puerta_der:
     583.  00:83CE                      	;~ RET
     584.  00:83CE                      	
     585.  00:83CE                      ;;=====================================================
     586.  00:83CE                      ;;PINTA_PUERTA_IZQ
     587.  00:83CE                      ;;=====================================================	
     588.  00:83CE                      ; función: 	pinta la puerta de la izquierda
     589.  00:83CE                      ; entrada: 	array_puerta_izquierda, wordaux2, wordaux1
     590.  00:83CE                      ; salida: 	-
     591.  00:83CE                      ; toca:		HL,BC, DE
     592.  00:83CE                      pinta_puerta_izq:
     593.  00:83CE  21 A7 8B            	LD		HL,array_puerta_izquierda		;guardo puntero al array a pintar (como psar por referencia)
     594.  00:83D1  22 6F 83            	LD		(wordaux2),HL					;en la variable wordaux2
     595.  00:83D4  21 E1 18            	LD		HL,TILMAP + POSPUERIZQU			;calcula posición en tilemap
     596.  00:83D7  22 6D 83            	LD		(wordaux1),HL					;guarda valor pos tilemap en wordaux1
     597.  00:83DA  44                  	LD		B,H								;coloca posición tilemap BC
     598.  00:83DB  4D                  	LD		C,L
     599.  00:83DC  16 07               	LD		D,7								;nº de filas
     600.  00:83DE  1E 03               	LD		E,3								;nº de columnas
     601.  00:83E0  C3 3A 83            	JP		pinta_array
     602.  00:83E3                      	;~ CALL	pinta_array
     603.  00:83E3                      fin_pinta_puerta_izq:
     604.  00:83E3                      	;~ RET
     605.  00:83E3                      
     606.  00:83E3                      
     607.  00:83E3                      
     608.  00:83E3                      
     609.  00:83E3                      
     610.  00:83E3                      ;;=====================================================
     611.  00:83E3                      ;;POSICIONA_EN_MAPA
     612.  00:83E3                      ;;=====================================================	
     613.  00:83E3                      ; función: 	en el mapa de marcadores de la derecha/abajo marca un cuadro en gris o con un muñeco
     614.  00:83E3                      ;			según el valor de prota.posición pinta entrá un muñeco y por donde vaya pasando el prota
     615.  00:83E3                      ;			quedará en gris
     616.  00:83E3                      ; entrada: 	A=0 gris 1 - tile 0, A=1 muñeco - tile 19, prota.pos_mapy,prota.pos_mapx)
     617.  00:83E3                      ; salida: 	-
     618.  00:83E3                      ; toca:		todos
     619.  00:83E3                      posiciona_en_mapa:
     620.  00:83E3  F5                  	PUSH	AF		;almacenamos el tipo a pintar para cuando terminemos de calcular la coordenada
     621.  00:83E4                      	
     622.  00:83E4                      	;#0238 es la posición en mapa de tiles de la esquina superior izquierda del mapa (569 en decimal)
     623.  00:83E4  21 38 1A            	LD		HL, TILMAP + POSMAPA;pos inicial
     624.  00:83E7                      	
     625.  00:83E7                      	;ahora se le calcula la fila a pintar ya que va de abajo a arriba y no como en el mapa + columna
     626.  00:83E7                      .sumar_fila:
     627.  00:83E7  3A 14 86            	LD		 A,(prota_pos_mapy)
     628.  00:83EA  FE 01               	CP		 1
     629.  00:83EC  28 2A               	JR		 Z, .fila_1
     630.  00:83EE  3A 14 86            	LD		 A,(prota_pos_mapy)
     631.  00:83F1  FE 02               	CP		 2
     632.  00:83F3  28 2A               	JR		 Z, .fila_2
     633.  00:83F5  3A 14 86            	LD		 A,(prota_pos_mapy)
     634.  00:83F8  FE 03               	CP		 3
     635.  00:83FA  28 2A               	JR		 Z, .fila_3
     636.  00:83FC  3A 14 86            	LD		 A,(prota_pos_mapy)
     637.  00:83FF  FE 04               	CP		 4
     638.  00:8401  28 2A               	JR		 Z, .fila_4
     639.  00:8403  3A 14 86            	LD		 A,(prota_pos_mapy)
     640.  00:8406  FE 05               	CP		 5
     641.  00:8408  28 2A               	JR		 Z, .fila_5
     642.  00:840A  3A 14 86            	LD		 A,(prota_pos_mapy)
     643.  00:840D  FE 06               	CP		 6
     644.  00:840F  28 2A               	JR		 Z, .sumar_columna
     645.  00:8411                      	;no consulto la 0 porque si no es ninguna de las anteriores es 0 y por tanto sería un jr fila_0
     646.  00:8411                      	
     647.  00:8411                      .fila_0:
     648.  00:8411  11 C0 00            	LD		DE, 192
     649.  00:8414  19                  	ADD		HL, DE			;nota: se que repito el ADD pero la otra opción es inicializar DE y ya tarda mucho la funicón (es por velicidad)
     650.  00:8415  C3 3B 84            	JP		.sumar_columna
     651.  00:8418                      .fila_1:
     652.  00:8418  11 A0 00            	LD		DE, 160
     653.  00:841B  19                  	ADD		HL, DE
     654.  00:841C  C3 3B 84            	JP		.sumar_columna
     655.  00:841F                      .fila_2:
     656.  00:841F  11 80 00            	LD		DE, 128
     657.  00:8422  19                  	ADD		HL, DE
     658.  00:8423  C3 3B 84            	JP		.sumar_columna
     659.  00:8426                      .fila_3:
     660.  00:8426  11 60 00            	LD		DE, 96
     661.  00:8429  19                  	ADD		HL, DE
     662.  00:842A  C3 3B 84            	JP		.sumar_columna
     663.  00:842D                      .fila_4:
     664.  00:842D  11 40 00            	LD		DE, 64
     665.  00:8430  19                  	ADD		HL, DE
     666.  00:8431  C3 3B 84            	JP		.sumar_columna
     667.  00:8434                      .fila_5:
     668.  00:8434  11 20 00            	LD		DE, 32
     669.  00:8437  19                  	ADD		HL, DE
     670.  00:8438  C3 3B 84            	JP		.sumar_columna
     671.  00:843B                      .fila_6:
     672.  00:843B                      	;pongo fila_6 por poner ya que si es la fila 6 equiv. a primera fila del mapa y por tanto no suma fila
     673.  00:843B                      	
     674.  00:843B                      	
     675.  00:843B                      .sumar_columna:
     676.  00:843B  3A 13 86            	LD 		 A, (prota_pos_mapx) ;POS X
     677.  00:843E  16 00               	LD		 D, 0
     678.  00:8440  5F                  	LD		 E, A
     679.  00:8441  19                  	ADD		HL, DE
     680.  00:8442                      	
     681.  00:8442                      	;resultado en BC para usar en la función pinta_tile_suelto
     682.  00:8442  44                  	LD		 B, H
     683.  00:8443  4D                  	LD		 C, L
     684.  00:8444                      	
     685.  00:8444                      	;terminado de fijar la coordenada recuperamos a para ver el tipo
     686.  00:8444  F1                  	POP		 AF
     687.  00:8445  B7                  	OR		 A
     688.  00:8446  CA 4E 84            	JP		 Z, pinta_pos_mapa_vacio
     689.  00:8449  16 13               	LD		 D, TILEMAPPROT
     690.  00:844B  C3 50 84            	JP		fin_pinta_pos_mapa
     691.  00:844E                      pinta_pos_mapa_vacio:
     692.  00:844E  16 09               	LD		 D, TILEMAPVACI				;********************* se puede hacer mejor o está bien usar push y pop ¿?¿?¿?
     693.  00:8450                      
     694.  00:8450                      fin_pinta_pos_mapa:
     695.  00:8450  C3 6F 82            	JP		pinta_tile_suelto
     696.  00:8453                      	;~ CALL	pinta_tile_suelto
     697.  00:8453                      fin_posiciona_en_mapa:
     698.  00:8453                      	;~ RET
     699.  00:8453                      
     700.  00:8453                      
     369   00:8453                      	
     370   00:8453                      	include "subr_sprites.asm"
       1.  00:8453                      
       2.  00:8453                      ;;=====================================================
       3.  00:8453                      ;;SUBRUTINAS ENCARGADAS DE MANEJAR LOS SPRITES
       4.  00:8453                      ;;=====================================================	
       5.  00:8453                      
       6.  00:8453                      
       7.  00:8453                      ;; PREGUNTAR SI A FERNANDO SI ES MEJOR USAR LISTAS O ALGO PARA AHORRAR CÓDIGO
       8.  00:8453                      
       9.  00:8453                      
      10.  00:8453                      ;;=====================================================
      11.  00:8453                      ;;CARGA_PATRONES_SPRITES_NIVEL1
      12.  00:8453                      ;;=====================================================	
      13.  00:8453                      ; función: 	copia los patrones de los sprites que e van a usar en el nivel 1 en vram
      14.  00:8453                      ; entrada: 	-
      15.  00:8453                      ; salida: 	-
      16.  00:8453                      ; toca: 	-
      17.  00:8453                      carga_patrones_sprites_nivel1:
      18.  00:8453  F5                  	PUSH	AF					;guardo copia de AF
      19.  00:8454  D9                  	EXX							;guardo copia de BC,DE y HL
      20.  00:8455                      	
      21.  00:8455                      	;sprite punto de mira		(este no será necesario cargarlo en ningún otro nivel del juego, sólo el primero)
      22.  00:8455  21 16 86            	LD		HL,sprite_punto_mira_1
      23.  00:8458  11 00 38            	LD		DE,#3800
      24.  00:845B  01 20 00            	LD		BC,32				;32 bytes (sprites de 2 x 2)
      25.  00:845E  CD 5C 00            	CALL	LDIRVM
      26.  00:8461  21 36 86            	LD		HL,sprite_punto_mira_2
      27.  00:8464  11 20 38            	LD		DE,#3820
      28.  00:8467  01 20 00            	LD		BC,32				;32 bytes (sprites de 2 x 2)
      29.  00:846A  CD 5C 00            	CALL	LDIRVM
      30.  00:846D                      	
      31.  00:846D                      	;sprite sprite_punto_mira_1_mejorado
      32.  00:846D  21 56 86            	LD		HL,sprite_punto_mira_1_mejorado
      33.  00:8470  11 40 38            	LD		DE,#3840
      34.  00:8473  01 20 00            	LD		BC,32				;32 bytes (sprites de 2 x 2)
      35.  00:8476  CD 5C 00            	CALL	LDIRVM
      36.  00:8479  21 76 86            	LD		HL,sprite_punto_mira_2_mejorado
      37.  00:847C  11 60 38            	LD		DE,#3860
      38.  00:847F  01 20 00            	LD		BC,32				;32 bytes (sprites de 2 x 2)
      39.  00:8482  CD 5C 00            	CALL	LDIRVM
      40.  00:8485                      
      41.  00:8485                      	;sprite sprite_reliquia
      42.  00:8485  21 96 86            	LD		HL,sprite_reliquia
      43.  00:8488  11 80 38            	LD		DE,#3880
      44.  00:848B  01 20 00            	LD		BC,32				;32 bytes (sprites de 2 x 2)
      45.  00:848E  CD 5C 00            	CALL	LDIRVM
      46.  00:8491                      
      47.  00:8491                      	;sprite sprite_vida_extra
      48.  00:8491  21 96 86            	LD		HL,sprite_reliquia
      49.  00:8494  11 A0 38            	LD		DE,#38A0
      50.  00:8497  01 20 00            	LD		BC,32				;32 bytes (sprites de 2 x 2)
      51.  00:849A  CD 5C 00            	CALL	LDIRVM
      52.  00:849D                      
      53.  00:849D                      	;sprite sprite_planta
      54.  00:849D  21 D6 86            	LD		HL,sprite_planta
      55.  00:84A0  11 C0 38            	LD		DE,#38C0
      56.  00:84A3  01 20 00            	LD		BC,32				;32 bytes (sprites de 2 x 2)
      57.  00:84A6  CD 5C 00            	CALL	LDIRVM
      58.  00:84A9                      	
      59.  00:84A9                      	;sprite sprite_ballesta_mejorada
      60.  00:84A9  21 F6 86            	LD		HL,sprite_ballesta_mejorada
      61.  00:84AC  11 E0 38            	LD		DE,#38E0
      62.  00:84AF  01 20 00            	LD		BC,32				;32 bytes (sprites de 2 x 2)
      63.  00:84B2  CD 5C 00            	CALL	LDIRVM
      64.  00:84B5                      
      65.  00:84B5                      	;sprite sprite_ciempies
      66.  00:84B5  21 16 87            	LD		HL,sprite_ciempies1
      67.  00:84B8  11 00 39            	LD		DE,#3900
      68.  00:84BB  01 20 00            	LD		BC,32				;32 bytes (sprites de 2 x 2)
      69.  00:84BE  CD 5C 00            	CALL	LDIRVM
      70.  00:84C1  21 36 87            	LD		HL,sprite_ciempies2
      71.  00:84C4  11 20 39            	LD		DE,#3920
      72.  00:84C7  01 20 00            	LD		BC,32				;32 bytes (sprites de 2 x 2)
      73.  00:84CA  CD 5C 00            	CALL	LDIRVM		
      74.  00:84CD                      
      75.  00:84CD                      	;sprite sprite_arana
      76.  00:84CD  21 56 87            	LD		HL,sprite_arana1
      77.  00:84D0  11 40 39            	LD		DE,#3940
      78.  00:84D3  01 20 00            	LD		BC,32				;32 bytes (sprites de 2 x 2)
      79.  00:84D6  CD 5C 00            	CALL	LDIRVM
      80.  00:84D9  21 76 87            	LD		HL,sprite_arana2
      81.  00:84DC  11 60 39            	LD		DE,#3960
      82.  00:84DF  01 20 00            	LD		BC,32				;32 bytes (sprites de 2 x 2)
      83.  00:84E2  CD 5C 00            	CALL	LDIRVM	
      84.  00:84E5                      
      85.  00:84E5                      	;sprite sprite_serpiente
      86.  00:84E5  21 96 87            	LD		HL,sprite_serpiente1
      87.  00:84E8  11 80 39            	LD		DE,#3980
      88.  00:84EB  01 20 00            	LD		BC,32				;32 bytes (sprites de 2 x 2)
      89.  00:84EE  CD 5C 00            	CALL	LDIRVM
      90.  00:84F1  21 B6 87            	LD		HL,sprite_serpiente2
      91.  00:84F4  11 A0 39            	LD		DE,#39A0
      92.  00:84F7  01 20 00            	LD		BC,32				;32 bytes (sprites de 2 x 2)
      93.  00:84FA  CD 5C 00            	CALL	LDIRVM	
      94.  00:84FD                      
      95.  00:84FD                      	;sprite sprite_murcielago
      96.  00:84FD  21 D6 87            	LD		HL,sprite_murcielago1
      97.  00:8500  11 C0 39            	LD		DE,#39C0
      98.  00:8503  01 20 00            	LD		BC,32				;32 bytes (sprites de 2 x 2)
      99.  00:8506  CD 5C 00            	CALL	LDIRVM
     100.  00:8509  21 F6 87            	LD		HL,sprite_murcielago2
     101.  00:850C  11 E0 39            	LD		DE,#39E0
     102.  00:850F  01 20 00            	LD		BC,32				;32 bytes (sprites de 2 x 2)
     103.  00:8512  CD 5C 00            	CALL	LDIRVM
     104.  00:8515                      	
     105.  00:8515                      	;sprite sprite_explosion
     106.  00:8515  21 16 88            	LD		HL,sprite_explosion
     107.  00:8518  11 20 3A            	LD		DE,#3A20
     108.  00:851B  01 20 00            	LD		BC,32				;32 bytes (sprites de 2 x 2)
     109.  00:851E  CD 5C 00            	CALL	LDIRVM
     110.  00:8521                      	
     111.  00:8521  D9                  	EXX							;recupero copia de BC,DE y HL
     112.  00:8522  F1                  	POP		AF					;recupero copia de AF
     113.  00:8523                      fin_carga_patrones_sprites:
     114.  00:8523  C9                  	RET
     115.  00:8524                      
     116.  00:8524                      
     117.  00:8524                      ;;=====================================================
     118.  00:8524                      ;;ACTUALIZA_ARRAY_SPRITES_VRAM
     119.  00:8524                      ;;=====================================================	
     120.  00:8524                      ; función: 	copia el array con los valores de los sprites (pos, color, plano) en VRAM
     121.  00:8524                      ; entrada: 	-
     122.  00:8524                      ; salida: 	-
     123.  00:8524                      ; toca: 	todos los registros. Como me interesa la velocidad, si necesito copiar de algo lo hago fuera
     124.  00:8524                      render_sprites:
     125.  00:8524                      	;volcando el array con toda la info de los sprites a la zona de atributos de sprites
     126.  00:8524  21 BC 8B            	LD		HL,array_sprites
     127.  00:8527  11 00 1B            	LD		DE,SPRART
     128.  00:852A  01 80 00            	LD		BC,4 * 32				;32 sprites x 4 bytes controlando el sprite (Y, X, plano, color)
     129.  00:852D  C3 5C 00            	JP		LDIRVM
     130.  00:8530                      	;~ CALL	LDIRVM
     131.  00:8530                      fin_actualiza_array_sprites_vram:
     132.  00:8530                      	;~ RET
     133.  00:8530                      
     134.  00:8530                      
     135.  00:8530                      
     371   00:8530                      	
     372   00:8530                      
     373   00:8530                      ;Este include lleva la rutina de descompresión de ROM/RAM a VRAM de pletter
     374   00:8530                      ;Está adaptada de la original a sjasm
     375   00:8530                      ;	HL = RAM/ROM source	; DE = VRAM destination
     376   00:8530                      depack_VRAM:
     377   00:8530                      	include "PL_VRAM_Depack_SJASM.asm"
       1.  00:8530                      ;-----------------------------------------------------------
       2.  00:8530                      ; Pletter v0.5b VRAM Depacker v1.1 - 16Kb version
       3.  00:8530                      ; HL = RAM/ROM source ; DE = VRAM destination
       4.  00:8530                      ;-----------------------------------------------------------
       5.  00:8530  F3                  	di
       6.  00:8531                      
       7.  00:8531                      ; VRAM address setup
       8.  00:8531  7B                  	ld	a,e
       9.  00:8532  D3 99               	out	[099h],a
      10.  00:8534  7A                  	ld	a,d
      11.  00:8535  F6 40               	or	040h
      12.  00:8537  D3 99               	out	[099h],a
      13.  00:8539                      
      14.  00:8539                      ; Initialization
      15.  00:8539  7E                  	ld	a,[hl]
      16.  00:853A  23                  	inc	hl
      17.  00:853B  D9                  	exx
      18.  00:853C  11 00 00            	ld	de,0
      19.  00:853F  87                  	add	a,a
      20.  00:8540  3C                  	inc	a
      21.  00:8541  CB 13               	rl	e
      22.  00:8543  87                  	add	a,a
      23.  00:8544  CB 13               	rl	e
      24.  00:8546  87                  	add	a,a
      25.  00:8547  CB 13               	rl	e
      26.  00:8549  CB 13               	rl	e
      27.  00:854B  21 02 86            	ld	hl,modes
      28.  00:854E  19                  	add	hl,de
      29.  00:854F  5E                  	ld	e,[hl]
      30.  00:8550  DD 6B               	ld	ixl,e
      31.  00:8552  23                  	inc	hl
      32.  00:8553  5E                  	ld	e,[hl]
      33.  00:8554  DD 63               	ld	ixh,e
      34.  00:8556  1E 01               	ld	e,1
      35.  00:8558  D9                  	exx
      36.  00:8559  FD 21 62 85         	ld	iy,loop
      37.  00:855D                      
      38.  00:855D                      ; Main depack loop
      39.  00:855D  0E 98               literal:ld	c,098h
      40.  00:855F  ED A3               	outi
      41.  00:8561  13                  	inc	de
      42.  00:8562  87                  loop:	add	a,a
      43.  00:8563  CC F6 85              	call	z,getbit
      44.  00:8566  30 F5               	jr	nc,literal
      45.  00:8568                      
      46.  00:8568                      ; Compressed data
      47.  00:8568  D9                  	exx
      48.  00:8569  62                  	ld	h,d
      49.  00:856A  6B                  	ld	l,e
      50.  00:856B  87                  getlen: add	a,a
      51.  00:856C  CC FA 85            	call	z,getbitexx
      52.  00:856F  30 1D               	jr	nc,lenok
      53.  00:8571  87                  lus:	add	a,a
      54.  00:8572  CC FA 85            	call	z,getbitexx
      55.  00:8575  ED 6A               	adc	hl,hl
      56.  00:8577  D8                  	ret	c
      57.  00:8578  87                  	add	a,a
      58.  00:8579  CC FA 85            	call	z,getbitexx
      59.  00:857C  30 10               	jr	nc,lenok
      60.  00:857E  87                  	add	a,a
      61.  00:857F  CC FA 85            	call	z,getbitexx
      62.  00:8582  ED 6A               	adc	hl,hl
      63.  00:8584  DA 00 86            	jp	c,Depack_out
      64.  00:8587  87                  	add	a,a
      65.  00:8588  CC FA 85            	call	z,getbitexx
      66.  00:858B  DA 71 85            	jp	c,lus
      67.  00:858E  23                  lenok:  inc	hl
      68.  00:858F  D9                  	exx
      69.  00:8590  4E                  	ld	c,[hl]
      70.  00:8591  23                  	inc	hl
      71.  00:8592  06 00               	ld	b,0
      72.  00:8594  CB 79               	bit	7,c
      73.  00:8596  CA C9 85            	jp	z,offsok
      74.  00:8599  DD E9               	jp	ix
      75.  00:859B                      
      76.  00:859B  87                  mode7:  add	a,a
      77.  00:859C  CC F6 85              	call	z,getbit
      78.  00:859F  CB 10               	rl	b
      79.  00:85A1  87                  mode6:	add	a,a
      80.  00:85A2  CC F6 85              	call	z,getbit
      81.  00:85A5  CB 10               	rl	b
      82.  00:85A7  87                  mode5:  add	a,a
      83.  00:85A8  CC F6 85              	call	z,getbit
      84.  00:85AB  CB 10               	rl	b
      85.  00:85AD  87                  mode4:  add	a,a
      86.  00:85AE  CC F6 85              	call	z,getbit
      87.  00:85B1  CB 10               	rl	b
      88.  00:85B3  87                  mode3:  add	a,a
      89.  00:85B4  CC F6 85              	call	z,getbit
      90.  00:85B7  CB 10               	rl	b
      91.  00:85B9  87                  mode2:	add	a,a
      92.  00:85BA  CC F6 85              	call	z,getbit
      93.  00:85BD  CB 10               	rl	b
      94.  00:85BF  87                  	add	a,a
      95.  00:85C0  CC F6 85              	call	z,getbit
      96.  00:85C3  30 04               	jr	nc,offsok
      97.  00:85C5  B7                  	or	a
      98.  00:85C6  04                  	inc	b
      99.  00:85C7  CB B9               	res	7,c
     100.  00:85C9  03                  offsok: inc	bc
     101.  00:85CA  E5                  	push	hl
     102.  00:85CB  D9                  	exx
     103.  00:85CC  E5                  	push	hl
     104.  00:85CD  D9                  	exx
     105.  00:85CE  6B                  	ld	l,e
     106.  00:85CF  62                  	ld	h,d
     107.  00:85D0  ED 42               	sbc	hl,bc
     108.  00:85D2  C1                  	pop	bc
     109.  00:85D3  F5                  	push	af
     110.  00:85D4  7D                  .loop:	ld	a,l
     111.  00:85D5  D3 99               	out	[099h],a
     112.  00:85D7  7C                  	ld	a,h
     113.  00:85D8  00                  	nop                     ; VDP timing
     114.  00:85D9  D3 99               	out	[099h],a
     115.  00:85DB  00                  	nop                     ; VDP timing
     116.  00:85DC  DB 98               	in	a,[098h]
     117.  00:85DE  08                  	ex	af,af'
     118.  00:85DF  7B                  	ld	a,e
     119.  00:85E0  00                  	nop			; VDP timing
     120.  00:85E1  D3 99               	out	[099h],a
     121.  00:85E3  7A                  	ld	a,d
     122.  00:85E4  F6 40               	or	040h
     123.  00:85E6  D3 99               	out	[099h],a
     124.  00:85E8  08                  	ex	af,af'
     125.  00:85E9  00                  	nop			; VDP timing
     126.  00:85EA  D3 98               	out	[098h],a
     127.  00:85EC  13                  	inc	de
     128.  00:85ED  ED A1               	cpi
     129.  00:85EF  EA D4 85            	jp	pe,.loop
     130.  00:85F2  F1                  	pop	af
     131.  00:85F3  E1                  	pop	hl
     132.  00:85F4  FD E9               	jp	iy
     133.  00:85F6                      
     134.  00:85F6  7E                  getbit: ld	a,[hl]
     135.  00:85F7  23                  	inc	hl
     136.  00:85F8  17                  	rla
     137.  00:85F9  C9                  	ret
     138.  00:85FA                      
     139.  00:85FA                      getbitexx:
     140.  00:85FA  D9                  	exx
     141.  00:85FB  7E                  	ld	a,[hl]
     142.  00:85FC  23                  	inc	hl
     143.  00:85FD  D9                  	exx
     144.  00:85FE  17                  	rla
     145.  00:85FF  C9                  	ret
     146.  00:8600                      
     147.  00:8600                      ; Depacker exit
     148.  00:8600                      Depack_out:
     149.  00:8600  FB                  	ei
     150.  00:8601  C9                  	ret
     151.  00:8602                      
     152.  00:8602                      modes:
     153.  00:8602  C9 85               	dw	offsok
     154.  00:8604  B9 85               	dw	mode2
     155.  00:8606  B3 85               	dw	mode3
     156.  00:8608  AD 85               	dw	mode4
     157.  00:860A  A7 85               	dw	mode5
     158.  00:860C  A1 85               	dw	mode6
     159.  00:860E  9B 85               	dw	mode7
     378   00:8610                      
     379   00:8610                      
     380   00:8610                      	
     381   00:8610                      ;;=====================================================
     382   00:8610                      ;;DEFINICIÓN DE ESTRUCTURAS
     383   00:8610                      ;;=====================================================		
     384   00:8610                      	include "estructuras.asm"
       1.  00:8610                      ;;=====================================================
       2.  00:8610                      ;;DEFINICIÓN DE ESTRUCTURAS
       3.  00:8610                      ;;=====================================================
       4.  00:8610                      
       5.  00:8610                      ;crear estructura
       6.  00:8610                      ;variables globales del prota
       7.  00:8610                      prota_nivel:			;nivel del castillo donde está 0-6
       8.  00:8610  00                  			DB		0
       9.  00:8611                      prota_vidas:
      10.  00:8611  00                  			DB		0
      11.  00:8612                      prota_reliquias:
      12.  00:8612  03                  			DB		3
      13.  00:8613                      prota_pos_mapx:
      14.  00:8613  00                  			DB		0	;pos columna
      15.  00:8614                      prota_pos_mapy:
      16.  00:8614  00                  			DB		0	;pos fila
      17.  00:8615                      prota_energia:
      18.  00:8615  FA                  			DB		250
      19.  00:8616                      
      20.  00:8616                      	STRUCT ESTRUCTURA_PUNTOMIRA
      21.  00:8616                    < posx			DB		100
      22.  00:8616                    < posy			DB		100
      23.  00:8616                    < retardo			DB		0	;contador_siguiente_escena
      24.  00:8616                    < escena			DB		0
      25.  00:8616                    < reset_contador	DB		0
      26.  00:8616                    < velocidad		DB		0
      27.  00:8616                    < ; al final he decidido (ya que el punto de mira es el prota) que lo relacionado con el prota vaya en esta estructura
      28.  00:8616                    < pm_aux1			DB		0	;para llegar a los 16 campos
      29.  00:8616                    < pm_aux2			DB		0	;para llegar a los 16 campos
      30.  00:8616                    < pm_aux3			DB		0	;para llegar a los 16 campos
      31.  00:8616                    < pm_aux4			DB		0	;para llegar a los 16 campos
      32.  00:8616                    < pm_aux5			DB		0	;para llegar a los 16 campos
      33.  00:8616                    < pm_aux6			DB		0	;para llegar a los 16 campos
      34.  00:8616                    < pm_aux7			DB		0	;para llegar a los 16 campos
      35.  00:8616                    < pm_aux8			DB		0	;para llegar a los 16 campos
      36.  00:8616                    < pm_aux9			DB		0	;para llegar a los 16 campos
      37.  00:8616                    < pm_aux10		DB		0	;para llegar a los 16 campos
      38.  00:8616                    < 
      39.  00:8616                    < 
      40.  00:8616                    < 	ENDSTRUCT;ESTRUCTURA_PUNTOMIRA
      41.  00:8616                      	
      42.  00:8616                      	STRUCT ESTRUCTURA_ENEMIGO
      43.  00:8616                    < tipo				DB		0	;(0 serpiente por ejemplo) #FF muerto o no existe
      44.  00:8616                    < posx				DB		5
      45.  00:8616                    < posy				DB		50
      46.  00:8616                    < color				DB		5
      47.  00:8616                    < escena				DB		0
      48.  00:8616                    < contador_siguiente_escena	DB	0
      49.  00:8616                    < reset_contador		DB		0
      50.  00:8616                    < dano				DB		0	;daño
      51.  00:8616                    < energia				DB		0	;energía del enemigo... si llega a 0 => existe <- 0
      52.  00:8616                    < ;indica el nº de sprite a mostrar y si está compuesto por uno o dos sprites y si están en horizontal o vertical
      53.  00:8616                    < ver_hor				DB		0
      54.  00:8616                    < manejador_dibujo 	DW		0
      55.  00:8616                    < en_aux3				DB		0
      56.  00:8616                    < en_aux4				DB		0
      57.  00:8616                    < 	ENDSTRUCT;ESTRUCTURA_ENEMIGO
      58.  00:8616                      	
      59.  00:8616                      	STRUCT ESTRUCTURA_EXTRA		;vidas extra, plantas de curación de energía, reliquias	
      60.  00:8616                    < tipo				DB		0	;#FF muerto/usado o no existe
      61.  00:8616                    < posx				DB		50
      62.  00:8616                    < posy				DB		50
      63.  00:8616                    < color				DB		5
      64.  00:8616                    < contador			DB		0	;por si doy dos reliquias en vez de una, por ejemplo
      65.  00:8616                    < en_aux1				DB		0	;para llegar a los 16 campos
      66.  00:8616                    < en_aux2				DB		0
      67.  00:8616                    < en_aux3				DB		0
      68.  00:8616                    < en_aux4				DB		0
      69.  00:8616                    < en_aux5				DB		0
      70.  00:8616                    < en_aux6				DB		0
      71.  00:8616                    < en_aux7				DB		0
      72.  00:8616                    < en_aux8				DB		0
      73.  00:8616                    < en_aux9				DB		0
      74.  00:8616                    < en_aux10			DB		0
      75.  00:8616                    < en_aux11			DB		0
      76.  00:8616                    < 	ENDSTRUCT;ESTRUCTURA_EXTRA
      77.  00:8616                      
      78.  00:8616                      
      79.  00:8616                      
      80.  00:8616                      
      81.  00:8616                      
      82.  00:8616                      
      83.  00:8616                      
     385   00:8616                      	
     386   00:8616                      ;;=====================================================
     387   00:8616                      ;;DEFINICIÓN DE VARIABLES
     388   00:8616                      ;;=====================================================		
     389   00:8616                      	include "sprites.asm"
       1.  00:8616                      ;;=====================================================
       2.  00:8616                      ;;DEFINICIÓN DE SPRITES
       3.  00:8616                      ;;=====================================================	
       4.  00:8616                      sprites_pantantalla:
       5.  00:8616                      
       6.  00:8616                      sprite_punto_mira_1:	;color 8
       7.  00:8616                      	db #FF,#FF,#C0,#C0,#C0,#C0,#C0,#C0
       7.  00:8616  FF FF C0 C0 C0 C0 C0 C0 
       8.  00:861E                      	db #C0,#C0,#C0,#C0,#C0,#C0,#FF,#FF
       8.  00:861E  C0 C0 C0 C0 C0 C0 FF FF 
       9.  00:8626                      	db #FF,#FF,#03,#03,#03,#03,#03,#03
       9.  00:8626  FF FF 03 03 03 03 03 03 
      10.  00:862E                      	db #03,#03,#03,#03,#03,#03,#FF,#FF
      10.  00:862E  03 03 03 03 03 03 FF FF 
      11.  00:8636                      	
      12.  00:8636                      sprite_punto_mira_2: 	;color 15
      13.  00:8636                      	db #00,#00,#00,#00,#0F,#0F,#0C,#0C
      13.  00:8636  00 00 00 00 0F 0F 0C 0C 
      14.  00:863E                      	db #0C,#0C,#0F,#0F,#00,#00,#00,#00
      14.  00:863E  0C 0C 0F 0F 00 00 00 00 
      15.  00:8646                      	db #00,#00,#00,#00,#F0,#F0,#30,#30
      15.  00:8646  00 00 00 00 F0 F0 30 30 
      16.  00:864E                      	db #30,#30,#F0,#F0,#00,#00,#00,#00
      16.  00:864E  30 30 F0 F0 00 00 00 00 
      17.  00:8656                      	
      18.  00:8656                      sprite_punto_mira_1_mejorado:
      19.  00:8656                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      19.  00:8656  FF FF FF FF FF FF FF FF 
      20.  00:865E                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      20.  00:865E  FF FF FF FF FF FF FF FF 
      21.  00:8666                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      21.  00:8666  FF FF FF FF FF FF FF FF 
      22.  00:866E                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      22.  00:866E  FF FF FF FF FF FF FF FF 
      23.  00:8676                      
      24.  00:8676                      sprite_punto_mira_2_mejorado:
      25.  00:8676                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      25.  00:8676  FF FF FF FF FF FF FF FF 
      26.  00:867E                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      26.  00:867E  FF FF FF FF FF FF FF FF 
      27.  00:8686                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      27.  00:8686  FF FF FF FF FF FF FF FF 
      28.  00:868E                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      28.  00:868E  FF FF FF FF FF FF FF FF 
      29.  00:8696                      	
      30.  00:8696                      sprite_reliquia:
      31.  00:8696                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      31.  00:8696  FF FF FF FF FF FF FF FF 
      32.  00:869E                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      32.  00:869E  FF FF FF FF FF FF FF FF 
      33.  00:86A6                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      33.  00:86A6  FF FF FF FF FF FF FF FF 
      34.  00:86AE                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      34.  00:86AE  FF FF FF FF FF FF FF FF 
      35.  00:86B6                      	
      36.  00:86B6                      sprite_vida_extra:
      37.  00:86B6                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      37.  00:86B6  FF FF FF FF FF FF FF FF 
      38.  00:86BE                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      38.  00:86BE  FF FF FF FF FF FF FF FF 
      39.  00:86C6                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      39.  00:86C6  FF FF FF FF FF FF FF FF 
      40.  00:86CE                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      40.  00:86CE  FF FF FF FF FF FF FF FF 
      41.  00:86D6                      	
      42.  00:86D6                      sprite_planta:
      43.  00:86D6                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      43.  00:86D6  FF FF FF FF FF FF FF FF 
      44.  00:86DE                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      44.  00:86DE  FF FF FF FF FF FF FF FF 
      45.  00:86E6                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      45.  00:86E6  FF FF FF FF FF FF FF FF 
      46.  00:86EE                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      46.  00:86EE  FF FF FF FF FF FF FF FF 
      47.  00:86F6                      	
      48.  00:86F6                      sprite_ballesta_mejorada:
      49.  00:86F6                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      49.  00:86F6  FF FF FF FF FF FF FF FF 
      50.  00:86FE                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      50.  00:86FE  FF FF FF FF FF FF FF FF 
      51.  00:8706                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      51.  00:8706  FF FF FF FF FF FF FF FF 
      52.  00:870E                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF	
      52.  00:870E  FF FF FF FF FF FF FF FF 
      53.  00:8716                      	
      54.  00:8716                      sprite_ciempies1:
      55.  00:8716                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      55.  00:8716  FF FF FF FF FF FF FF FF 
      56.  00:871E                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      56.  00:871E  FF FF FF FF FF FF FF FF 
      57.  00:8726                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      57.  00:8726  FF FF FF FF FF FF FF FF 
      58.  00:872E                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      58.  00:872E  FF FF FF FF FF FF FF FF 
      59.  00:8736                      	
      60.  00:8736                      sprite_ciempies2:
      61.  00:8736                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      61.  00:8736  FF FF FF FF FF FF FF FF 
      62.  00:873E                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      62.  00:873E  FF FF FF FF FF FF FF FF 
      63.  00:8746                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      63.  00:8746  FF FF FF FF FF FF FF FF 
      64.  00:874E                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      64.  00:874E  FF FF FF FF FF FF FF FF 
      65.  00:8756                      	
      66.  00:8756                      sprite_arana1:
      67.  00:8756                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      67.  00:8756  FF FF FF FF FF FF FF FF 
      68.  00:875E                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      68.  00:875E  FF FF FF FF FF FF FF FF 
      69.  00:8766                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      69.  00:8766  FF FF FF FF FF FF FF FF 
      70.  00:876E                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      70.  00:876E  FF FF FF FF FF FF FF FF 
      71.  00:8776                      	
      72.  00:8776                      sprite_arana2:
      73.  00:8776                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      73.  00:8776  FF FF FF FF FF FF FF FF 
      74.  00:877E                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      74.  00:877E  FF FF FF FF FF FF FF FF 
      75.  00:8786                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      75.  00:8786  FF FF FF FF FF FF FF FF 
      76.  00:878E                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      76.  00:878E  FF FF FF FF FF FF FF FF 
      77.  00:8796                      	
      78.  00:8796                      sprite_serpiente1:
      79.  00:8796                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      79.  00:8796  FF FF FF FF FF FF FF FF 
      80.  00:879E                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      80.  00:879E  FF FF FF FF FF FF FF FF 
      81.  00:87A6                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      81.  00:87A6  FF FF FF FF FF FF FF FF 
      82.  00:87AE                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      82.  00:87AE  FF FF FF FF FF FF FF FF 
      83.  00:87B6                      	
      84.  00:87B6                      sprite_serpiente2:
      85.  00:87B6                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      85.  00:87B6  FF FF FF FF FF FF FF FF 
      86.  00:87BE                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      86.  00:87BE  FF FF FF FF FF FF FF FF 
      87.  00:87C6                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      87.  00:87C6  FF FF FF FF FF FF FF FF 
      88.  00:87CE                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      88.  00:87CE  FF FF FF FF FF FF FF FF 
      89.  00:87D6                      	
      90.  00:87D6                      sprite_murcielago1:
      91.  00:87D6                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      91.  00:87D6  FF FF FF FF FF FF FF FF 
      92.  00:87DE                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      92.  00:87DE  FF FF FF FF FF FF FF FF 
      93.  00:87E6                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      93.  00:87E6  FF FF FF FF FF FF FF FF 
      94.  00:87EE                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      94.  00:87EE  FF FF FF FF FF FF FF FF 
      95.  00:87F6                      	
      96.  00:87F6                      sprite_murcielago2:
      97.  00:87F6                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      97.  00:87F6  FF FF FF FF FF FF FF FF 
      98.  00:87FE                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      98.  00:87FE  FF FF FF FF FF FF FF FF 
      99.  00:8806                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      99.  00:8806  FF FF FF FF FF FF FF FF 
     100.  00:880E                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF	
     100.  00:880E  FF FF FF FF FF FF FF FF 
     101.  00:8816                      
     102.  00:8816                      sprite_explosion:
     103.  00:8816                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     103.  00:8816  FF FF FF FF FF FF FF FF 
     104.  00:881E                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     104.  00:881E  FF FF FF FF FF FF FF FF 
     105.  00:8826                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     105.  00:8826  FF FF FF FF FF FF FF FF 
     106.  00:882E                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     106.  00:882E  FF FF FF FF FF FF FF FF 
     107.  00:8836                      	
     108.  00:8836                      	
     109.  00:8836                      	
     390   00:8836                      	
     391   00:8836                      	include "habitaciones.asm"
       1.  00:8836                      ;;=====================================================
       2.  00:8836                      ;;DEFINICIÓN DE HABITACIONES x NIVEL
       3.  00:8836                      ;;=====================================================	
       4.  00:8836                      
       5.  00:8836                      ; sólo voy a usar 7x7 pero como los arrays son lineales y voy a trabajar con matrices
       6.  00:8836                      ; me interesa que seande  8x8 aunque sólo trabaje con 7x7
       7.  00:8836                      
       8.  00:8836                      ; ojo... la primera linea corresponderá a la primera linea del castillo no a la última
       9.  00:8836                      
      10.  00:8836                      ;; definición de estructura de bits
      11.  00:8836                      ;Tipo DB pero serán 2 bytes por habitación byte primero (habitaciones etc) + byte 2º. Los bytes 15 y 16 se usan para información extra
      12.  00:8836                      ;los 7 primeros bits del byte 15 indican si se ha pasado/limpiado una habitación o no
      13.  00:8836                      ;~ 0 - lleno o vacío (si ya se ha pasado)
      14.  00:8836                      ;~ 0000 - nº puertas 1 arriba 1 derecha 1 abajo 1 izquierda
      15.  00:8836                      ;~ 1 - hay reliquia?
      16.  00:8836                      ;~ 1 - hay vida extra
      17.  00:8836                      ;~ 1 - hay arma extra (durará 6 pantallas - sonido distinto)
      18.  00:8836                      ;~ 1 - hay energía? (sobran bits ... se puede usar otro como carga energía +)
      19.  00:8836                      ;~ 1 - es pantalla de mostruo fin de fase?
      20.  00:8836                      ;~ 1 - es pantalla inicial (equivaldría a la puerta de un castillo)?
      21.  00:8836                      ;~ 1 - es pantalla final?
      22.  00:8836                      
      23.  00:8836                      
      24.  00:8836                      ;importante: el byte de la columna 15 indicará con 1 y 0 habitaciones por las que se haya pasado
      25.  00:8836                      ;cuando se inicie la partida todos se pondrán a 0
      26.  00:8836                      
      27.  00:8836                      habitacion_actual:
      28.  00:8836  00 00               	db  #00,#00		;habitación donde se encuentre el prota. Se mete en una varible par traer todos los datos de golpe y no buscrlos varias veces
      29.  00:8838                      
      30.  00:8838                      habitaciones_juego:
      31.  00:8838                      habitaciones_nivel0:
      32.  00:8838                      ;---------------------------------* habitación inicial
      33.  00:8838                      	db  #00,#00,#01,#01,#02,#02,#03,#03,#04,#04,#05,#05,#06,#06,#FF,#00 ;primera fila
      33.  00:8838  00 00 01 01 02 02 03 03 04 04 05 05 06 06 FF 00 
      34.  00:8848                      	db  #17,#10,#11,#11,#12,#12,#13,#13,#14,#14,#15,#15,#16,#16,#FF,#00
      34.  00:8848  17 10 11 11 12 12 13 13 14 14 15 15 16 16 FF 00 
      35.  00:8858                      	db  #20,#20,#21,#21,#22,#22,#23,#23,#24,#24,#25,#25,#26,#26,#FF,#00
      35.  00:8858  20 20 21 21 22 22 23 23 24 24 25 25 26 26 FF 00 
      36.  00:8868                      	db  #30,#30,#31,#31,#32,#32,#33,#33,#34,#34,#35,#35,#36,#36,#FF,#00
      36.  00:8868  30 30 31 31 32 32 33 33 34 34 35 35 36 36 FF 00 
      37.  00:8878                      	db  #40,#40,#41,#41,#42,#42,#43,#43,#44,#44,#45,#45,#46,#46,#FF,#00
      37.  00:8878  40 40 41 41 42 42 43 43 44 44 45 45 46 46 FF 00 
      38.  00:8888                      	db  #50,#50,#51,#51,#52,#52,#53,#53,#54,#54,#55,#55,#56,#56,#FF,#00
      38.  00:8888  50 50 51 51 52 52 53 53 54 54 55 55 56 56 FF 00 
      39.  00:8898                      	db  #60,#60,#61,#61,#62,#62,00001111b,#63,#64,#64,#65,#65,#66,#66,#FF,#00	;ultima fila
      39.  00:8898  60 60 61 61 62 62 0F 63 64 64 65 65 66 66 FF 00 
      40.  00:88A8                      	
      41.  00:88A8                      habitaciones_nivel1:
      42.  00:88A8                      	db  #00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00 ;primera fila
      42.  00:88A8  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
      43.  00:88B8                      	db  #00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00
      43.  00:88B8  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
      44.  00:88C8                      	db  #00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00
      44.  00:88C8  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
      45.  00:88D8                      	db  #00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00
      45.  00:88D8  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
      46.  00:88E8                      	db  #00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00
      46.  00:88E8  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
      47.  00:88F8                      	db  #00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00
      47.  00:88F8  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
      48.  00:8908                      	db  #00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00	;ultima fila
      48.  00:8908  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
      49.  00:8918                      	
      50.  00:8918                      habitaciones_nivel2:
      51.  00:8918                      	db  #00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00 ;primera fila
      51.  00:8918  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
      52.  00:8928                      	db  #00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00
      52.  00:8928  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
      53.  00:8938                      	db  #00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00
      53.  00:8938  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
      54.  00:8948                      	db  #00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00
      54.  00:8948  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
      55.  00:8958                      	db  #00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00
      55.  00:8958  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
      56.  00:8968                      	db  #00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00
      56.  00:8968  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
      57.  00:8978                      	db  #00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00	;ultima fila
      57.  00:8978  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
      58.  00:8988                      	
      59.  00:8988                      habitaciones_nivel3:
      60.  00:8988                      	db  #00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00 ;primera fila
      60.  00:8988  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
      61.  00:8998                      	db  #00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00
      61.  00:8998  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
      62.  00:89A8                      	db  #00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00
      62.  00:89A8  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
      63.  00:89B8                      	db  #00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00
      63.  00:89B8  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
      64.  00:89C8                      	db  #00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00
      64.  00:89C8  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
      65.  00:89D8                      	db  #00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00
      65.  00:89D8  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
      66.  00:89E8                      	db  #00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00	;ultima fila
      66.  00:89E8  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
      67.  00:89F8                      	
      68.  00:89F8                      habitaciones_nivel4:
      69.  00:89F8                      	db  #00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00 ;primera fila
      69.  00:89F8  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
      70.  00:8A08                      	db  #00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00
      70.  00:8A08  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
      71.  00:8A18                      	db  #00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00
      71.  00:8A18  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
      72.  00:8A28                      	db  #00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00
      72.  00:8A28  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
      73.  00:8A38                      	db  #00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00
      73.  00:8A38  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
      74.  00:8A48                      	db  #00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00
      74.  00:8A48  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
      75.  00:8A58                      	db  #00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00	;ultima fila
      75.  00:8A58  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
      76.  00:8A68                      	
      77.  00:8A68                      habitaciones_nivel5:
      78.  00:8A68                      	db  #00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00 ;primera fila
      78.  00:8A68  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
      79.  00:8A78                      	db  #00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00
      79.  00:8A78  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
      80.  00:8A88                      	db  #00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00
      80.  00:8A88  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
      81.  00:8A98                      	db  #00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00
      81.  00:8A98  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
      82.  00:8AA8                      	db  #00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00
      82.  00:8AA8  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
      83.  00:8AB8                      	db  #00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00
      83.  00:8AB8  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
      84.  00:8AC8                      	db  #00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00	;ultima fila
      84.  00:8AC8  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
      85.  00:8AD8                      	
      86.  00:8AD8                      habitaciones_nivel6:
      87.  00:8AD8                      	db  #6F,#6F,#01,#01,#02,#02,#03,#03,#04,#04,#05,#05,#06,#06,#FF,#00 ;primera fila
      87.  00:8AD8  6F 6F 01 01 02 02 03 03 04 04 05 05 06 06 FF 00 
      88.  00:8AE8                      	db  #17,#10,#11,#11,#12,#12,#13,#13,#14,#14,#15,#15,#16,#16,#FF,#00
      88.  00:8AE8  17 10 11 11 12 12 13 13 14 14 15 15 16 16 FF 00 
      89.  00:8AF8                      	db  #20,#20,#21,#21,#22,#22,#23,#23,#24,#24,#25,#25,#26,#26,#FF,#00
      89.  00:8AF8  20 20 21 21 22 22 23 23 24 24 25 25 26 26 FF 00 
      90.  00:8B08                      	db  #30,#30,#31,#31,#32,#32,#33,#33,#34,#34,#35,#35,#36,#36,#FF,#00
      90.  00:8B08  30 30 31 31 32 32 33 33 34 34 35 35 36 36 FF 00 
      91.  00:8B18                      	db  #40,#40,#41,#41,#42,#42,#43,#43,#44,#44,#45,#45,#46,#46,#FF,#00
      91.  00:8B18  40 40 41 41 42 42 43 43 44 44 45 45 46 46 FF 00 
      92.  00:8B28                      	db  #50,#50,#51,#51,#52,#52,#53,#53,#54,#54,#55,#55,#56,#56,#FF,#00
      92.  00:8B28  50 50 51 51 52 52 53 53 54 54 55 55 56 56 FF 00 
      93.  00:8B38                      	db  #60,#60,#61,#61,#62,#62,#63,#63,#64,#64,#65,#65,#66,#66,#FF,#00	;ultima fila
      93.  00:8B38  60 60 61 61 62 62 63 63 64 64 65 65 66 66 FF 00 
      94.  00:8B48                      
      95.  00:8B48                      
     392   00:8B48                      	
     393   00:8B48                      	include "variables.asm"
       1.  00:8B48                      ;;=====================================================
       2.  00:8B48                      ;;DEFINICIÓN DE VARIABLES
       3.  00:8B48                      ;;=====================================================	
       4.  00:8B48                      ;definicion de variable del prota usando la estructura del punto de mira
       5.  00:8B48                      prota:		ESTRUCTURA_PUNTOMIRA
       5.  00:8B48  64 64 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
       6.  00:8B58                      
       7.  00:8B58                      
       8.  00:8B58                      
       9.  00:8B58                      array_aux_vidas: 		;array para pintar de golpe el marcador de vidas
      10.  00:8B58                      			DB		0,0,0,0,0,0,0,0
      10.  00:8B58  00 00 00 00 00 00 00 00 
      11.  00:8B60                      actualiza_vidas_sn:
      12.  00:8B60  00                  			DB		0 	;valor que indica si hay que actualizar el marcador de vidas 1 ó no 0
      13.  00:8B61                      
      14.  00:8B61                      array_aux_reliquias:	;array para pintar de golpe el marcador de reliquias
      15.  00:8B61                      			DB		0,0,0,0,0,0,0,0
      15.  00:8B61  00 00 00 00 00 00 00 00 
      16.  00:8B69                      actualiza_reliquias_sn:
      17.  00:8B69  00                  			DB		0 	;valor que indica si hay que actualizar el marcador de reliquias 1 ó no 0
      18.  00:8B6A                      
      19.  00:8B6A                      array_aux_energia:		;array para pintar de golpe el marcador de energía
      20.  00:8B6A                      			DB		16,0,0,0,0,0,0 ;el 16 primero es porque siempre estará pintado el cuadro primero rojo
      20.  00:8B6A  10 00 00 00 00 00 00 
      21.  00:8B71                      ultimo_pos_array_aux_energia:
      22.  00:8B71  00                  			DB		0			;el array completo es de 8 pero para posicionar sin niecesidad de cálculos  etiqueto este aparte
      23.  00:8B72                      			
      24.  00:8B72                      array_aux_mapa_limpiar:	;es por facilitar el reseteo del mapa (pinto 7 lineas en negro con bios) la otra opción es más larga en código y complicada aunque más rápida
      25.  00:8B72                      			DB		0,0,0,0,0,0,0
      25.  00:8B72  00 00 00 00 00 00 00 
      26.  00:8B79                      
      27.  00:8B79                      actualiza_puertas_sn:	;0 no 1 sí (se pone a 1 cuando se cambia de habitación y al terminar se vuelve a poner a 0)
      28.  00:8B79  00                  			DB		0 	;valor que indica si hay que actualizar las puertas de una pantalla (se crea porque sólo hay que actualizar si se cambia a de hab)
      29.  00:8B7A                      			
      30.  00:8B7A                      ;; nota importante: cada vez que se cambie de nivel se actualizará el contenido
      31.  00:8B7A                      ;; arrays con mapa de tiles de las puertas
      32.  00:8B7A                      array_puerta_arriba:
      33.  00:8B7A  03 01 01 03         array_puerta_arriba1:		DB	3,1,1,3
      34.  00:8B7E  01 01 01 01         array_puerta_arriba2:		DB	1,1,1,1
      35.  00:8B82  01 01 01 01         array_puerta_arriba3:		DB	1,1,1,1
      36.  00:8B86  01 01 01 01         array_puerta_arriba4:		DB	1,1,1,1
      37.  00:8B8A  01 01 01 01         array_puerta_arriba5:		DB	1,1,1,1
      38.  00:8B8E                      
      39.  00:8B8E                      array_puerta_derecha:
      40.  00:8B8E  01 03 03            array_puerta_derecha1:		DB	1,3,3
      41.  00:8B91  01 01 03            array_puerta_derecha2:		DB	1,1,3
      42.  00:8B94  01 01 01            array_puerta_derecha3:		DB	1,1,1
      43.  00:8B97  01 01 01            array_puerta_derecha4:		DB	1,1,1
      44.  00:8B9A  01 01 01            array_puerta_derecha5:		DB	1,1,1
      45.  00:8B9D  02 01 01            array_puerta_derecha6:		DB	2,1,1
      46.  00:8BA0  04 02 01            array_puerta_derecha7:		DB	4,2,1
      47.  00:8BA3                      	
      48.  00:8BA3  01 01 01 01         array_puerta_abajo:			DB	1,1,1,1
      49.  00:8BA7                      
      50.  00:8BA7                      array_puerta_izquierda:
      51.  00:8BA7  03 03 01            array_puerta_izquierda1:	DB	3,3,1
      52.  00:8BAA  03 01 01            array_puerta_izquierda2:	DB	3,1,1
      53.  00:8BAD  01 01 01            array_puerta_izquierda3:	DB	1,1,1
      54.  00:8BB0  01 01 01            array_puerta_izquierda4:	DB	1,1,1
      55.  00:8BB3  01 01 01            array_puerta_izquierda5:	DB	1,1,1
      56.  00:8BB6  01 01 02            array_puerta_izquierda6:	DB	1,1,2
      57.  00:8BB9  01 02 04            array_puerta_izquierda7:	DB	1,2,4
      58.  00:8BBC                      
      59.  00:8BBC                      
      60.  00:8BBC                      ;array de 4 bytes x 32 sprites posibles en pantalla que sobreescribirá la tabla de sprites actualizando VRAM
      61.  00:8BBC                      array_sprites:
      62.  00:8BBC  00 (8)              array_sprites_pm:				DS	2 * 4
      63.  00:8BC4  00 (120)            array_sprites_enem:				DS	30 * 4
      64.  00:8C3C  00 (140)            lista_enemigos:					DS	10 * ESTRUCTURA_ENEMIGO
      65.  00:8CC8                      ; puntero al array a pintar en VRAM
      66.  00:8CC8  00 00               puntero_array_atrib_array_VRAM: DW	0	;ARRAYSPTRIES + 8
     394   00:8CCA                      
     395   00:8CCA                      
     396   00:8CCA                      	
     397   00:8CCA                      ;;=====================================================
     398   00:8CCA                      ;;DEFINICIÓN DE PANTALLAS
     399   00:8CCA                      ;;=====================================================		
     400   00:8CCA                      	include "pantallas.asm"
       1.  00:8CCA                      ;;=====================================================
       2.  00:8CCA                      ;;DEFINICIÓN DE PANTALLAS
       3.  00:8CCA                      ;;=====================================================		
       4.  00:8CCA                      
       5.  00:8CCA                      ; bancos 1 y 2 y de pantalla 1 (en realidad es una pantalla de pruebas)
       6.  00:8CCA                      tiles_patrones_pantalla11:	
       7.  00:8CCA  (0023)              tiles_patrones_pantalla12:	incbin "pan1_23.bank1.bin.chr.pletter"
       8.  00:8CED                      tiles_color_pantalla11:		
       9.  00:8CED  (0018)              tiles_color_pantalla12:		incbin "pan1_23.bank1.bin.clr.pletter"
      10.  00:8D05  (001A)              tiles_mapa_pantalla11:		incbin "pan1_23.bank0.bin.map.pletter"
      11.  00:8D1F  (002A)              tiles_mapa_pantalla12:		incbin "pan1_23.bank1.bin.map.pletter"
      12.  00:8D49                      
      13.  00:8D49                      
      14.  00:8D49                      
      15.  00:8D49                      
      16.  00:8D49                      
      17.  00:8D49                      
      18.  00:8D49                      ; 3º banco que es la parte de puntos, vidas, mapas, etc... es común
      19.  00:8D49  (0146)              tiles_patrones_pantalla3:	incbin "pan_33.bin.chr.pletter"
      20.  00:8E8F  (0035)              tiles_color_pantalla3:		incbin "pan_33.bin.clr.pletter"
      21.  00:8EC4  (006F)              tiles_mapa_pantalla3:		incbin "pan_33.bin.map.pletter"
      22.  00:8F33                      
      23.  00:8F33                      ;NOTA: FALTARÍAN PANTALLAS ESPECIALES (POR DEFINIR)
     401   00:8F33                      	
     402   00:8F33                      END:

    LABELS
-------------------------------------------------
00:000000D8 X GTTRIG
00:000000D5   GTSTCK
00:0000F3DB   CLIKSW
00:0000013E X RDVDP
00:00000047   WRTVDP
00:0000005C   LDIRVM
00:00000059 X LDIRMV
00:0000005F   CHGMOD
00:00000041 X DISSCR
00:00000044 X ENASCR
00:00000062   CHGCLR
00:0000F3E9   FORCLR
00:0000F3EA   BAKCLR
00:0000F3EB   BDRCLR
00:000000C3   CLS
00:0000F3DF X RG0SAV
00:0000F3E0   RG1SAV
00:0000F3E1 X RG2SAV
00:0000F3E2 X RG3SAV
00:0000F3E3 X RG4SAV
00:0000F3E4 X RG5SAV
00:0000F3E5 X RG6SAV
00:0000F3E6 X RG7SAV
00:0000F3E7 X STATFL
00:00000099   REGEST
00:00000098   REGESCVDP
00:00000000   CHRTBL
00:00001800   TILMAP
00:00001B00   SPRART
00:00002000   CLRTBL
00:00003800 X SPRTBL
00:00000001   SI
00:00000000 X NO
00:00000000 X COLTRASP
00:00000001 X COLNEGRO
00:00000002 X COLVERDE
00:00000003 X COLVERCLA
00:00000004 X COLAZULOSC
00:00000005 X COLAZULLA
00:00000006 X COLROJOOSC
00:00000007 X COLCYAN
00:00000008   COLROJO
00:00000009 X COLROJOCLA
00:0000000A X COLAMAROSC
00:0000000B X COLAMARCLA
00:0000000C X COLVERDOSC
00:0000000D X COLMAGENTA
00:0000000E X COLGRIS
00:0000000F   COLBLANCO
00:000002F8   POSMAPLIN1
00:000002D8   POSMAPLIN2
00:000002B8   POSMAPLIN3
00:00000298   POSMAPLIN4
00:00000278   POSMAPLIN5
00:00000258   POSMAPLIN6
00:00000238   POSMAPLIN7
00:0000000D   POSCARAMAP
00:00000248   POSVIDAS
00:00000011   POSRELIMAP
00:000002C8   POSRELIQ
00:00000288   POSENERG
00:000002B4   POSNIVEL
00:00000238   POSMAPA
00:000001EE   POSPUERABAJ
00:0000008E   POSPUERARRI
00:000000FC   POSPUERDERE
00:000000E1   POSPUERIZQU
00:00000013   TILEMAPPROT
00:00000009   TILEMAPVACI
00:00000010   TILEMAPROJO
00:0000000F   TILEMAPAMAR
00:0000000E   TILEMAPVERD
00:00000008   NMAXVIDREL
00:00000007   NHABNIVEL
00:000000F8 X MAXENERGIA
00:000000D9   TILEENERG8
00:000000BA   TILEENERG7
00:0000009B   TILEENERG6
00:0000007C   TILEENERG5
00:0000005D   TILEENERG4
00:0000003E   TILEENERG3
00:0000001F   TILEENERG2
00:00000000   TILENEGRO
00:00000000 X LIMPANTIZQ
00:000000FF   LIMPANTDER
00:00000000 X LIMPANTARR
00:00000080   LIMPANTABA
00:00000001   MUEARR
00:00000002   MUEARRDER
00:00000003   MUEDER
00:00000004   MUEDERABA
00:00000005   MUEABA
00:00000006   MUEABAIZQ
00:00000007   MUEIZQ
00:00000008   MUEIZQARR
00:00000006 X BASEMAPY
00:00000003 X BASEMAPX
00:00008000   START
00:00008023   loop_principal
00:0000802A X mira_pinta_puertas
00:00008036   fin_mira_pinta_puertas
00:00008036 X mira_pinta_vidas
00:0000803F   fin_mira_pinta_vidas
00:0000803F X mira_pinta_reliquias
00:00008048   fin_mira_pinta_reliquias
00:00008051 X fin_programa_principal
00:00008052   check_player
00:00008083 X fin_check_player
00:00008084   mueve_arriba
00:0000808F   mueve_arriba.no_decrementa_y
00:00008090 X fin_mueve_arriba
00:00008091   mueve_arriba_derecha
00:00008097 X fin_mueve_arriba_derecha
00:00008097   mueve_derecha
00:000080A4   mueve_derecha.no_incrementa_x
00:000080A5 X fin_mueve_derecha
00:000080A6   mueve_derecha_abajo
00:000080AC X fin_mueve_derecha_abajo
00:000080AC   mueve_abajo
00:000080B9   mueve_abajo.no_incrementa_y
00:000080BA X fin_mueve_abajo
00:000080BB   mueve_abajo_izquierda
00:000080C1 X fin_mueve_abajo_izquierda
00:000080C1   mueve_izquierda
00:000080CC   mueve_izquierda.no_decrementa_x
00:000080CD X fin_mueve_izquierda
00:000080CE   mueve_izquierda_arriba
00:000080D4 X fin_mueve_izquierda_arriba
00:000080D4   vuelca_resultado_puntomira_array
00:000080FC X fin_vuelca_resultado_puntomira_array
00:000080FD   inicializa_variables_pruebas
00:0000812A X fin_inicializa_variables_pruebas
00:0000812B   inicializa_niveles
00:0000813A   inicializa_niveles.bucle_borra_hab
00:0000813F X fin_iniciliza_niveles
00:00008140   actualiza_marcador_vidas
00:00008146   loop_marcador_caras_negro
00:0000814B X fin_loop_marcador_caras_negro
00:00008152   loop_marcador_caras
00:00008157 X fin_loop_marcador_caras
00:00008158 X fin_actualiza_marcador_vidas
00:00008159   actualiza_marcador_reliquias
00:0000815E   loop_marcador_reliquias_negro
00:00008163 X fin_loop_marcador_reliquias_negro
00:0000816A   loop_marcador_reliquias
00:0000816F X fin_loop_marcador_reliquias
00:0000816F X fin_actualiza_marcador_reliquias
00:00008170   localiza_info_habitacion
00:0000817D   localiza_info_habitacion.primer_producto
00:00008189   localiza_info_habitacion.segundo_producto
00:0000818C X localiza_info_habitacion.fin_seg_prod
00:00008190   localiza_info_habitacion.no_suma_niveles_previos
00:000081A3   localiza_info_habitacion.situa_columna
00:000081B5 X fin_localiza_info_habitacion
00:000081B6   sub_preparapantalla
00:000081B6 X elimina_clic
00:000081BA X fin_elimina_clic
00:000081BA X limpia_pantalla
00:000081BE X fin_limpia_pantalla
00:000081BE X set_color
00:000081D0 X fin_set_color
00:000081D0 X screen2
00:000081D5 X sprites_16_16
00:000081E3 X fin_sub_preparapantalla
00:000081E3   pinta_pantalla_completa
00:000081E9 X fin_pinta_pantalla_completa
00:000081EA   pinta_parte_superior_pantalla
00:00008220 X fin_pinta_parte_superior_pantalla
00:00008221   pinta_parte_inferior_pantalla
00:0000823C X fin_pinta_parte_inferior_pantalla
00:0000823C   pinta_vidas
00:0000824E X fin_pinta_vidas
00:0000824F   pinta_reliquias
00:00008261 X fin_pinta_reliquias
00:00008262   pinta_nivel
00:0000826E X fin_pinta_nivel
00:0000826F   pinta_tile_suelto
00:0000827C X fin_pinta_tile_suelto
00:0000827D   mira_pinta_energia
00:00008283 X pinta_ener
00:00008283 X pinta_ener_tile_8
00:0000828F   pinta_ener_tile_8_negro
00:00008290   pinta_ener_tile_7
00:0000829A   pinta_ener_tile_7_negro
00:0000829B   pinta_ener_tile_6
00:000082A5   pinta_ener_tile_6_negro
00:000082A6   pinta_ener_tile_5
00:000082B0   pinta_ener_tile_5_negro
00:000082B1   pinta_ener_tile_4
00:000082BB   pinta_ener_tile_4_negro
00:000082BC   pinta_ener_tile_3
00:000082C6   pinta_ener_tile_3_negro
00:000082C7   pinta_ener_tile_2
00:000082D1   pinta_ener_tile_2_negro
00:000082D2   fin_mira_pinta_energia
00:000082D4   pinta_energia
00:000082E2 X fin_pinta_energia
00:000082E3   borra_mapa
00:00008339 X fin_borra_mapa
00:0000833A   pinta_array
00:00008348   pinta_array.pa_pinta_fila
00:00008349   pinta_array.pa_pinta_columnas
00:0000836C X fin_pinta_array
00:0000836D   wordaux1
00:0000836F   wordaux2
00:00008371   pinta_puertas
00:0000838E X fin_pinta_puertas
00:0000838F   pinta_puerta_aba
00:000083A4 X fin_pinta_puerta_aba
00:000083A4   pinta_puerta_arr
00:000083B9 X fin_pinta_puerta_arr
00:000083B9   pinta_puerta_der
00:000083CE X fin_pinta_puerta_der
00:000083CE   pinta_puerta_izq
00:000083E3 X fin_pinta_puerta_izq
00:000083E3   posiciona_en_mapa
00:000083E7 X posiciona_en_mapa.sumar_fila
00:00008411 X posiciona_en_mapa.fila_0
00:00008418   posiciona_en_mapa.fila_1
00:0000841F   posiciona_en_mapa.fila_2
00:00008426   posiciona_en_mapa.fila_3
00:0000842D   posiciona_en_mapa.fila_4
00:00008434   posiciona_en_mapa.fila_5
00:0000843B X posiciona_en_mapa.fila_6
00:0000843B   posiciona_en_mapa.sumar_columna
00:0000844E   pinta_pos_mapa_vacio
00:00008450   fin_pinta_pos_mapa
00:00008453 X fin_posiciona_en_mapa
00:00008453   carga_patrones_sprites_nivel1
00:00008523 X fin_carga_patrones_sprites
00:00008524   render_sprites
00:00008530 X fin_actualiza_array_sprites_vram
00:00008530   depack_VRAM
00:0000855D   literal
00:00008562   loop
00:0000856B X getlen
00:00008571   lus
00:0000858E   lenok
00:0000859B   mode7
00:000085A1   mode6
00:000085A7   mode5
00:000085AD   mode4
00:000085B3   mode3
00:000085B9   mode2
00:000085C9   offsok
00:000085D4   offsok.loop
00:000085F6   getbit
00:000085FA   getbitexx
00:00008600   Depack_out
00:00008602   modes
00:00008610   prota_nivel
00:00008611   prota_vidas
00:00008612   prota_reliquias
00:00008613   prota_pos_mapx
00:00008614   prota_pos_mapy
00:00008615   prota_energia
00:00000000 X ESTRUCTURA_PUNTOMIRA.posx
00:00000001 X ESTRUCTURA_PUNTOMIRA.posy
00:00000002 X ESTRUCTURA_PUNTOMIRA.retardo
00:00000003 X ESTRUCTURA_PUNTOMIRA.escena
00:00000004 X ESTRUCTURA_PUNTOMIRA.reset_contador
00:00000005 X ESTRUCTURA_PUNTOMIRA.velocidad
00:00000006 X ESTRUCTURA_PUNTOMIRA.pm_aux1
00:00000007 X ESTRUCTURA_PUNTOMIRA.pm_aux2
00:00000008 X ESTRUCTURA_PUNTOMIRA.pm_aux3
00:00000009 X ESTRUCTURA_PUNTOMIRA.pm_aux4
00:0000000A X ESTRUCTURA_PUNTOMIRA.pm_aux5
00:0000000B X ESTRUCTURA_PUNTOMIRA.pm_aux6
00:0000000C X ESTRUCTURA_PUNTOMIRA.pm_aux7
00:0000000D X ESTRUCTURA_PUNTOMIRA.pm_aux8
00:0000000E X ESTRUCTURA_PUNTOMIRA.pm_aux9
00:0000000F X ESTRUCTURA_PUNTOMIRA.pm_aux10
00:00000010 X ESTRUCTURA_PUNTOMIRA
00:00000000 X ESTRUCTURA_ENEMIGO.tipo
00:00000001 X ESTRUCTURA_ENEMIGO.posx
00:00000002 X ESTRUCTURA_ENEMIGO.posy
00:00000003 X ESTRUCTURA_ENEMIGO.color
00:00000004 X ESTRUCTURA_ENEMIGO.escena
00:00000005 X ESTRUCTURA_ENEMIGO.contador_siguiente_escena
00:00000006 X ESTRUCTURA_ENEMIGO.reset_contador
00:00000007 X ESTRUCTURA_ENEMIGO.dano
00:00000008 X ESTRUCTURA_ENEMIGO.energia
00:00000009 X ESTRUCTURA_ENEMIGO.ver_hor
00:0000000A X ESTRUCTURA_ENEMIGO.manejador_dibujo
00:0000000C X ESTRUCTURA_ENEMIGO.en_aux3
00:0000000D X ESTRUCTURA_ENEMIGO.en_aux4
00:0000000E   ESTRUCTURA_ENEMIGO
00:00000000 X ESTRUCTURA_EXTRA.tipo
00:00000001 X ESTRUCTURA_EXTRA.posx
00:00000002 X ESTRUCTURA_EXTRA.posy
00:00000003 X ESTRUCTURA_EXTRA.color
00:00000004 X ESTRUCTURA_EXTRA.contador
00:00000005 X ESTRUCTURA_EXTRA.en_aux1
00:00000006 X ESTRUCTURA_EXTRA.en_aux2
00:00000007 X ESTRUCTURA_EXTRA.en_aux3
00:00000008 X ESTRUCTURA_EXTRA.en_aux4
00:00000009 X ESTRUCTURA_EXTRA.en_aux5
00:0000000A X ESTRUCTURA_EXTRA.en_aux6
00:0000000B X ESTRUCTURA_EXTRA.en_aux7
00:0000000C X ESTRUCTURA_EXTRA.en_aux8
00:0000000D X ESTRUCTURA_EXTRA.en_aux9
00:0000000E X ESTRUCTURA_EXTRA.en_aux10
00:0000000F X ESTRUCTURA_EXTRA.en_aux11
00:00000010 X ESTRUCTURA_EXTRA
00:00008616 X sprites_pantantalla
00:00008616   sprite_punto_mira_1
00:00008636   sprite_punto_mira_2
00:00008656   sprite_punto_mira_1_mejorado
00:00008676   sprite_punto_mira_2_mejorado
00:00008696   sprite_reliquia
00:000086B6 X sprite_vida_extra
00:000086D6   sprite_planta
00:000086F6   sprite_ballesta_mejorada
00:00008716   sprite_ciempies1
00:00008736   sprite_ciempies2
00:00008756   sprite_arana1
00:00008776   sprite_arana2
00:00008796   sprite_serpiente1
00:000087B6   sprite_serpiente2
00:000087D6   sprite_murcielago1
00:000087F6   sprite_murcielago2
00:00008816   sprite_explosion
00:00008836   habitacion_actual
00:00008838   habitaciones_juego
00:00008838 X habitaciones_nivel0
00:000088A8 X habitaciones_nivel1
00:00008918 X habitaciones_nivel2
00:00008988 X habitaciones_nivel3
00:000089F8 X habitaciones_nivel4
00:00008A68 X habitaciones_nivel5
00:00008AD8 X habitaciones_nivel6
00:00008B48 X prota
00:00008B48   prota.posx
00:00008B49   prota.posy
00:00008B4A X prota.retardo
00:00008B4B X prota.escena
00:00008B4C X prota.reset_contador
00:00008B4D X prota.velocidad
00:00008B4E X prota.pm_aux1
00:00008B4F X prota.pm_aux2
00:00008B50 X prota.pm_aux3
00:00008B51 X prota.pm_aux4
00:00008B52 X prota.pm_aux5
00:00008B53 X prota.pm_aux6
00:00008B54 X prota.pm_aux7
00:00008B55 X prota.pm_aux8
00:00008B56 X prota.pm_aux9
00:00008B57 X prota.pm_aux10
00:00008B58   array_aux_vidas
00:00008B60   actualiza_vidas_sn
00:00008B61   array_aux_reliquias
00:00008B69   actualiza_reliquias_sn
00:00008B6A   array_aux_energia
00:00008B71   ultimo_pos_array_aux_energia
00:00008B72   array_aux_mapa_limpiar
00:00008B79   actualiza_puertas_sn
00:00008B7A   array_puerta_arriba
00:00008B7A X array_puerta_arriba1
00:00008B7E X array_puerta_arriba2
00:00008B82 X array_puerta_arriba3
00:00008B86 X array_puerta_arriba4
00:00008B8A X array_puerta_arriba5
00:00008B8E   array_puerta_derecha
00:00008B8E X array_puerta_derecha1
00:00008B91 X array_puerta_derecha2
00:00008B94 X array_puerta_derecha3
00:00008B97 X array_puerta_derecha4
00:00008B9A X array_puerta_derecha5
00:00008B9D X array_puerta_derecha6
00:00008BA0 X array_puerta_derecha7
00:00008BA3   array_puerta_abajo
00:00008BA7   array_puerta_izquierda
00:00008BA7 X array_puerta_izquierda1
00:00008BAA X array_puerta_izquierda2
00:00008BAD X array_puerta_izquierda3
00:00008BB0 X array_puerta_izquierda4
00:00008BB3 X array_puerta_izquierda5
00:00008BB6 X array_puerta_izquierda6
00:00008BB9 X array_puerta_izquierda7
00:00008BBC   array_sprites
00:00008BBC   array_sprites_pm
00:00008BC4 X array_sprites_enem
00:00008C3C X lista_enemigos
00:00008CC8 X puntero_array_atrib_array_VRAM
00:00008CCA   tiles_patrones_pantalla11
00:00008CCA   tiles_patrones_pantalla12
00:00008CED   tiles_color_pantalla11
00:00008CED   tiles_color_pantalla12
00:00008D05   tiles_mapa_pantalla11
00:00008D1F   tiles_mapa_pantalla12
00:00008D49   tiles_patrones_pantalla3
00:00008E8F   tiles_color_pantalla3
00:00008EC4   tiles_mapa_pantalla3
00:00008F33   END


 Output: t4.out
-------------------------------------------------

 Page: 00
  Org: 00008000  Size: *  Used: 00000000

    No output

 Output: t4.bin
-------------------------------------------------

 Page: 00
  Org: 00008000  Size: *  Used: 00000F3A

   Address   Length Align   Label
   00008000    3898         START
