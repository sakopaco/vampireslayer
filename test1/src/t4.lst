Sjasm Z80 Assembler v0.42c - www.xl2s.tk             [2021.08.10 - 18:35:31]

t4.asm
Errors: 0

       1   00:0000                      	OUTPUT	"t4.bin"
       2   00:8000                      	
       3   00:8000                      ;;=====================================================
       4   00:8000                      ;;DEFINICIÓN DE CONSTANTES
       5   00:8000                      ;;=====================================================	
       6   00:8000                      	include "constantes.asm"
       1.  00:8000                      ;;=====================================================
       2.  00:8000                      ;; FICHERO constantes.asm
       3.  00:8000                      ;;=====================================================
       4.  00:8000                      
       5.  00:8000                      ;;ETIQUETAS/CONSTANTES BIOS TECLADO
       6.  00:8000  (00:00D8)           GTTRIG		equ		#00D8	;Returns current trigger status
       7.  00:8000  (00:00D5)           GTSTCK		equ		#00D5	;Returns the joystick/cursors status
       8.  00:8000  (00:F3DB)           CLIKSW		equ		#F3DB	;deshabilita el sonido de clic cuando se pulsa una tecla
       9.  00:8000                      
      10.  00:8000                      ;;ETIQUETAS/CONSTANTES BIOS VDP
      11.  00:8000  (00:013E)           RDVDP		equ		#013E	;lee registro status VDP
      12.  00:8000  (00:0047)           WRTVDP		equ		#0047	;escribe registros del VDP
      13.  00:8000  (00:005C)           LDIRVM		equ		#005C	;RAM/ROM -> VRAM
      14.  00:8000  (00:0059)           LDIRMV		equ		#0059	;VRAM -> RAM
      15.  00:8000  (00:005F)           CHGMOD		equ		#005F	;cambia modo pantalla (screen mode)
      16.  00:8000  (00:0041)           DISSCR  	equ		#0041	;desactiva pantanlla
      17.  00:8000  (00:0044)           ENASCR  	equ		#0044	;activa pantalla
      18.  00:8000  (00:0062)           CHGCLR  	equ		#0062	;cambia color de pantalla (toca A y direcciones)
      19.  00:8000  (00:F3E9)           FORCLR		equ		#F3E9	;zona memoria color foreground
      20.  00:8000  (00:F3EA)           BAKCLR  	equ		#F3EA	;zona memoria color background
      21.  00:8000  (00:F3EB)           BDRCLR 		equ		#F3EB	;zona memoria bordercolor
      22.  00:8000  (00:00C3)           CLS			equ		#00C3	;limpia pantalla (necesita A=0)
      23.  00:8000                      
      24.  00:8000                      ;;ETIQUETAS/CONSTANTES REGISTROS VDP
      25.  00:8000  (00:F3DF)           RG0SAV		equ		#F3DF	;Mirror of VDP register 0 (Basic: VDP(0))
      26.  00:8000  (00:F3E0)           RG1SAV		equ		#F3E0	;Mirror of VDP register 1 (Basic: VDP(1))
      27.  00:8000  (00:F3E1)           RG2SAV		equ		#F3E1	;Mirror of VDP register 2 (Basic: VDP(2))
      28.  00:8000  (00:F3E2)           RG3SAV		equ		#F3E2	;Mirror of VDP register 3 (Basic: VDP(3))
      29.  00:8000  (00:F3E3)           RG4SAV		equ		#F3E3	;Mirror of VDP register 4 (Basic: VDP(4))
      30.  00:8000  (00:F3E4)           RG5SAV		equ		#F3E4	;Mirror of VDP register 5 (Basic: VDP(5))
      31.  00:8000  (00:F3E5)           RG6SAV		equ		#F3E5	;Mirror of VDP register 6 (Basic: VDP(6))
      32.  00:8000  (00:F3E6)           RG7SAV		equ		#F3E6	;Mirror of VDP register 7 (Basic: VDP(7))
      33.  00:8000  (00:F3E7)           STATFL		equ		#F3E7	;Mirror of VDP(8) status register (S#0)
      34.  00:8000                      
      35.  00:8000  (00:0099)           REGEST		equ		#0099	;registro de estado para escribir directamente en VRAM
      36.  00:8000  (00:0098)           REGESCVDP	equ		#0098	;registro donde escribir valor para VRAM
      37.  00:8000                      
      38.  00:8000                      ;;ETIQUETAS/CONSTANTES REGISTROS PSG (PARA JOYSTICK)
      39.  00:8000  (00:00A0)           PSG_A  equ  0a0h  ;reg address
      40.  00:8000  (00:00A1)           PSG_W  equ  0a1h  ;reg data WR
      41.  00:8000  (00:00A2)           PSG_R  equ  0a2h  ;reg data
      42.  00:8000                      
      43.  00:8000                      
      44.  00:8000                      ;;ETIQUETAS DE ZONAS DE MEMORIA DE LA VPD (MSX1)
      45.  00:8000  (00:0000)           CHRTBL		equ		#0000
      46.  00:8000  (00:1800)           TILMAP		equ		#1800
      47.  00:8000  (00:1B00)           SPRART		equ		#1B00
      48.  00:8000  (00:2000)           CLRTBL		equ		#2000
      49.  00:8000  (00:3800)           SPRTBL		equ		#3800
      50.  00:8000                      
      51.  00:8000                      
      52.  00:8000                      ;;ETIQUETAS ESTANDAR PARA DAR MÁS CLARIDAD AL CODIGO
      53.  00:8000  (00:0001)           SI			equ		1
      54.  00:8000  (00:0000)           NO			equ		0
      55.  00:8000                      
      56.  00:8000                      ;;PALETA DE COLORES DEL MSX
      57.  00:8000  (00:0000)           COLTRASP	equ		0
      58.  00:8000  (00:0001)           COLNEGRO	equ		1
      59.  00:8000  (00:0002)           COLVERDE	equ		2
      60.  00:8000  (00:0003)           COLVERCLA	equ		3
      61.  00:8000  (00:0004)           COLAZULOSC	equ		4
      62.  00:8000  (00:0005)           COLAZULLA	equ		5
      63.  00:8000  (00:0006)           COLROJOOSC	equ		6
      64.  00:8000  (00:0007)           COLCYAN		equ		7
      65.  00:8000  (00:0008)           COLROJO		equ		8
      66.  00:8000  (00:0009)           COLROJOCLA	equ		9
      67.  00:8000  (00:000A)           COLAMAROSC	equ		10
      68.  00:8000  (00:000B)           COLAMARCLA	equ		11
      69.  00:8000  (00:000C)           COLVERDOSC	equ		12
      70.  00:8000  (00:000D)           COLMAGENTA	equ		13
      71.  00:8000  (00:000E)           COLGRIS		equ		14
      72.  00:8000  (00:000F)           COLBLANCO	equ		15
      73.  00:8000                      
      74.  00:8000                      
      75.  00:8000                      
      76.  00:8000                      ;;ETIQUETAS ESPECIFICAS PARA DAR MÁS CLARIDAD AL CODIGO (relacionadas con posiciones en mapa vdp)
      77.  00:8000  (00:02F8)           POSMAPLIN1  equ		#02F8
      78.  00:8000  (00:02D8)           POSMAPLIN2  equ		#02D8
      79.  00:8000  (00:02B8)           POSMAPLIN3  equ		#02B8
      80.  00:8000  (00:0298)           POSMAPLIN4  equ		#0298
      81.  00:8000  (00:0278)           POSMAPLIN5  equ		#0278
      82.  00:8000  (00:0258)           POSMAPLIN6  equ		#0258
      83.  00:8000  (00:0238)           POSMAPLIN7  equ		#0238
      84.  00:8000                      
      85.  00:8000  (00:000D)           POSCARAMAP	equ		#000D
      86.  00:8000  (00:0248)           POSVIDAS	equ		#0248
      87.  00:8000  (00:0011)           POSRELIMAP	equ		#0011
      88.  00:8000  (00:02C8)           POSRELIQ	equ		#02C8
      89.  00:8000  (00:0288)           POSENERG	equ		#0288
      90.  00:8000  (00:02B4)           POSNIVEL	equ		#02B4
      91.  00:8000  (00:0238)           POSMAPA		equ 	#0238
      92.  00:8000                      
      93.  00:8000  (00:01EE)           POSPUERABAJ equ		#01EE
      94.  00:8000  (00:008E)           POSPUERARRI equ		#008E
      95.  00:8000  (00:00FC)           POSPUERDERE equ		#00FC
      96.  00:8000  (00:00E1)           POSPUERIZQU equ		#00E1
      97.  00:8000                      
      98.  00:8000                      
      99.  00:8000                      ;;ETIQUETAS ESPECIFICAS PARA DAR MÁS CLARIDAD AL CODIGO (relacionadas con posiciones en en el banco de memoria)
     100.  00:8000  (00:0013)           TILEMAPPROT equ		19
     101.  00:8000  (00:0009)           TILEMAPVACI	equ		9
     102.  00:8000  (00:0010)           TILEMAPROJO equ		16
     103.  00:8000  (00:000F)           TILEMAPAMAR equ		15
     104.  00:8000  (00:000E)           TILEMAPVERD equ		14
     105.  00:8000                      
     106.  00:8000                      
     107.  00:8000                      ;;ETIQUETAS ESPECIFICAS PARA DAR MÁS CLARIDAD AL CODIGO (generales)
     108.  00:8000  (00:0008)           NMAXVIDREL	equ		8		;el número máximo de vidas y de reliquias es de 8
     109.  00:8000  (00:0007)           NHABNIVEL	equ		7
     110.  00:8000  (00:00F8)           MAXENERGIA  equ		248
     111.  00:8000  (00:00D9)           TILEENERG8  equ		217
     112.  00:8000  (00:00BA)           TILEENERG7  equ		186
     113.  00:8000  (00:009B)           TILEENERG6  equ		155
     114.  00:8000  (00:007C)           TILEENERG5  equ		124
     115.  00:8000  (00:005D)           TILEENERG4  equ		93
     116.  00:8000  (00:003E)           TILEENERG3  equ		62
     117.  00:8000  (00:001F)           TILEENERG2  equ		31
     118.  00:8000  (00:0000)           TILENEGRO	equ		0
     119.  00:8000                      
     120.  00:8000                      ;limites
     121.  00:8000  (00:0000)           LIMPANTIZQ  equ		0
     122.  00:8000  (00:00FF)           LIMPANTDER  equ		255
     123.  00:8000  (00:0000)           LIMPANTARR  equ		0
     124.  00:8000  (00:0080)           LIMPANTABA  equ		128
     125.  00:8000                      
     126.  00:8000                      
     127.  00:8000                      ;matriz de 7x7 empieza en 0, y fila y x col, cuento desde esquina sup izq
     128.  00:8000  (00:0006)           BASEMAPY	equ		6
     129.  00:8000  (00:0003)           BASEMAPX	equ		3
     130.  00:8000                      
       7   00:8000                      
       8   00:8000                      ;;=====================================================
       9   00:8000                      ;;DEFINICIÓN DE CABECERA DE ARCHIVO BIN
      10   00:8000                      ;;=====================================================		
      11   00:8000                      	include "cabecerabin.asm"
       1.  00:8000                      ;;=====================================================
       2.  00:8000                      ;; FICHERO cabecera.asm
       3.  00:8000                      ;;=====================================================
       4.  00:8000                      
       5.  00:8000                      ;;CABECERA FICHERO BIN
       6.  00:8000  FE                  	DB	#FE
       7.  00:8001  00 80               	DW	START
       8.  00:8003  6B 8F               	DW	END
       9.  00:8005  00 80               	DW	START
      10.  00:8007                      
      11.  00:8007                      ;;INICIO CÓDIGO PROGRAMA	
      12.  00:8007                      	ORG	#8000
      13.  00:8000                      	
      12   00:8000                      	
      13   00:8000                      START:
      14   00:8000                      	
      15   00:8000                      	;inicializa pantalla y entonrno
      16   00:8000  CD E3 80            	CALL	sub_preparapantalla			;screen 2,2 sin click al pulsar tecla y color 16,1,1
      17   00:8003                      	
      18   00:8003                      	;inicializa variables para parametrizar funciones y que lo que se muestre sea variable (nº vidas, mapa, puertas, pantalla, etc...)
      19   00:8003  CD 4A 80            	CALL	inicializa_variables_pruebas
      20   00:8006                      	
      21   00:8006                      	;inicializa los niveles por partida
      22   00:8006  CD 69 80            	CALL	inicializa_niveles			;no es necesario parametrizarlo según el nivel del usuario ya que se cargan todos
      23   00:8009                      	
      24   00:8009                      	;pinta la pantalla (la primera o algunas especiales se pintan completamente)
      25   00:8009  CD 04 81            	CALL	pinta_pantalla_completa 
      26   00:800C                      	
      27   00:800C                      	;carga sprites en memoria (SE HA RETRASADO HASTA PARAMETRIZAR LA CARGA DE PANTALLAS)
      28   00:800C  CD 6C 83            	CALL 	carga_patrones_sprites_nivel1
      29   00:800F                      	
      30   00:800F                      	;funciones que modificarian el marcador si se produce un evento cuando toque y cuando se pinta la pantalla ya se mira
      31   00:800F                      	;una variable para ver si el array hay que actualizarlo en pantalla o no
      32   00:800F  CD 5D 81            	CALL	pinta_vidas
      33   00:8012  CD 6C 81            	CALL 	pinta_reliquias
      34   00:8015  CD 7B 81            	CALL	pinta_nivel
      35   00:8018  CD FC 81            	CALL	borra_mapa
      36   00:801B  CD 8A 82            	CALL	pinta_puertas	
      37   00:801E                      
      38   00:801E  3E 01               	LD		 A,1
      39   00:8020  CD FC 82            	CALL	posiciona_en_mapa		;se le pasa A 1 (tile del prota) está el prota y prota.poxx y posy
      40   00:8023                      	
      41   00:8023                      loop_principal:
      42   00:8023  76                  	HALT							;espera VBLANK y sincroniza
      43   00:8024                      	
      44   00:8024  CD 3D 84            	CALL	render_sprites			;actualiza array de sprites y los pinta en pantalla
      45   00:8027                      	
      46   00:8027  CD ED 81            	CALL	pinta_energia			;pinta la energia en pantalla
      47   00:802A                      
      48   00:802A  CD 80 84            	CALL	check_player			;MIRA EL CONTROL Y APLICA LA LOGICA DE MOVIMIENTO DEL PROTAGONISTA
      49   00:802D                      	
      50   00:802D  C3 23 80            	JP		loop_principal
      51   00:8030                      fin_programa_principal:
      52   00:8030                      	;RET
      53   00:8030                      
      54   00:8030                      
      55   00:8030                      
      56   00:8030                      ;;=====================================================
      57   00:8030                      ;;EFECTO_IMAGEN_TIRA_RELIQUIA
      58   00:8030                      ;;=====================================================	
      59   00:8030                      ; función: 	hace que el fondo de la pantalla parpadee N veces
      60   00:8030                      ; entrada: 	actualiza_reliquias_sn
      61   00:8030                      ; salida: 	-
      62   00:8030                      ; toca: 	todo
      63   00:8030                      efecto_imagen_tira_reliquia:
      64   00:8030  3E 14               	LD		 A, 20;RETARDOREL
      65   00:8032  47                  	LD		 B, A
      66   00:8033                      
      67   00:8033                      .parpadea_fondo:
      68   00:8033  C5                  	PUSH	BC
      69   00:8034  21 7D 8B            	LD		HL, color_bomba1
      70   00:8037  CD D2 80            	CALL	color_pantalla
      71   00:803A                      	
      72   00:803A                      	;~ PUSH	BC
      73   00:803A                      	;~ LD		 A, 255
      74   00:803A                      	;~ LD		 B, A
      75   00:803A                      ;~ .bucle_de_espera:
      76   00:803A                      	;~ NOP
      77   00:803A                      	;~ DJNZ	 .bucle_de_espera
      78   00:803A                      	;~ POP		BC
      79   00:803A  76                  	HALT
      80   00:803B                      
      81   00:803B                      	
      82   00:803B  21 80 8B            	LD		HL, color_bomba2
      83   00:803E  CD D2 80            	CALL	color_pantalla
      84   00:8041  C1                  	POP		BC
      85   00:8042  10 EF               	DJNZ	.parpadea_fondo
      86   00:8044                      	
      87   00:8044  21 7A 8B            	LD		HL, color_base
      88   00:8047  C3 D2 80            	JP		color_pantalla
      89   00:804A                      fin_efecto_imagen_tira_reliquia:
      90   00:804A                      	;CALL/RET
      91   00:804A                      
      92   00:804A                      
      93   00:804A                      
      94   00:804A                      
      95   00:804A                      
      96   00:804A                      
      97   00:804A                      ;;*******************************************************************
      98   00:804A                      ; sólo para hacer pruebas y pintar la parte de las vidas y demás
      99   00:804A                      inicializa_variables_pruebas:
     100   00:804A  3E 04               	LD		 A, 4
     101   00:804C  32 43 86            	LD		(prota_vidas),A
     102   00:804F                      
     103   00:804F  3E 04               	LD		 A, 4
     104   00:8051  32 44 86            	LD		(prota_reliquias), A
     105   00:8054                      
     106   00:8054  3E 64               	LD		 A, 100
     107   00:8056  32 47 86            	LD		(prota_energia), A
     108   00:8059                      
     109   00:8059                      	;ubico al prota dentro del nivel para obtener luego las habitaciones y enemigos que aparecerán
     110   00:8059                      	;será igual la posición inicial en todos los niveles
     111   00:8059                      	
     112   00:8059  3E 01               	LD		 A, 1
     113   00:805B  32 42 86            	LD		(prota_nivel), A	;nivel empieza en 0 para usar las posiciones ascii
     114   00:805E                      
     115   00:805E  3E 04               	LD		 A, 4				;los subniveles son 7 del 0 al 6
     116   00:8060  32 46 86            	LD		(prota_pos_mapy), A	;pos y dentro del nivel (se empieza en 0)
     117   00:8063                      
     118   00:8063  3E 06               	LD		 A, 6				;columnas 7: del 0 al 6
     119   00:8065  32 45 86            	LD		(prota_pos_mapx), A	;pos y dentro del nivel (se empieza en 0)
     120   00:8068                      	
     121   00:8068                      fin_inicializa_variables_pruebas:
     122   00:8068  C9                  	RET
     123   00:8069                      ;;************************************************************************
     124   00:8069                      
     125   00:8069                      
     126   00:8069                      
     127   00:8069                      
     128   00:8069                      
     129   00:8069                      
     130   00:8069                      
     131   00:8069                      
     132   00:8069                      
     133   00:8069                      ;;=====================================================
     134   00:8069                      ;;DEFINICIÓN DE SUBRUTINAS
     135   00:8069                      ;;=====================================================
     136   00:8069                      	include "subrutinas.asm"
       1.  00:8069                      ;;=====================================================
       2.  00:8069                      ;;DEFINICIÓN DE SUBRUTINAS
       3.  00:8069                      ;;=====================================================	
       4.  00:8069                      
       5.  00:8069                      
       6.  00:8069                      ;;=====================================================
       7.  00:8069                      ;;INICIALIZA_NIVELES
       8.  00:8069                      ;;=====================================================	
       9.  00:8069                      ; función: 	copia la plantilla de niveles (habitaciones_plantilla) en los niveles de trabajo para el juego (habitaciones_juego)
      10.  00:8069                      ; entrada: 	habitaciones_plantilla
      11.  00:8069                      ; salida: 	habitaciones_juego
      12.  00:8069                      ; toca: 	A
      13.  00:8069                      inicializa_niveles:
      14.  00:8069  D9                  	EXX
      15.  00:806A                      	
      16.  00:806A  AF                  	XOR		 A
      17.  00:806B  06 31               	LD		 B, 49				;7 filas por 7 niveles menos el primero que lo hago diera del buble porque se suma 14 y no 16
      18.  00:806D  21 6A 88            	LD		HL, habitaciones_juego;tambíen puntero al primer nivel
      19.  00:8070  11 0E 00            	LD		DE,14
      20.  00:8073  19                  	ADD		HL,DE
      21.  00:8074  77                  	LD		(HL),A
      22.  00:8075  11 10 00            	LD		DE,16				;desde las col 15 de una fila a la siguiente
      23.  00:8078                      .bucle_borra_hab:
      24.  00:8078  19                  	ADD		HL,DE
      25.  00:8079  77                  	LD		(HL),A
      26.  00:807A  10 FC               	DJNZ	.bucle_borra_hab
      27.  00:807C                      	
      28.  00:807C  D9                  	EXX
      29.  00:807D                      fin_iniciliza_niveles:
      30.  00:807D  C9                  	RET
      31.  00:807E                      
      32.  00:807E                      
      33.  00:807E                      ;;=====================================================
      34.  00:807E                      ;;ACTUALIZA_MARCADOR_VIDAS
      35.  00:807E                      ;;=====================================================	
      36.  00:807E                      ; función:  actualiza el buffer de vidas
      37.  00:807E                      ; entrada: 	prota_vidas
      38.  00:807E                      ; salida: 	array_aux_vidas
      39.  00:807E                      ; toca:		A,B,HL
      40.  00:807E                      actualiza_marcador_vidas:
      41.  00:807E                      	;para no andar restando pongo todos los huecos a negro y luego en otro bucle las caras
      42.  00:807E                      	;1-pinto todo en blanco
      43.  00:807E  21 93 8B            	LD		HL,array_aux_vidas
      44.  00:8081  06 08               	LD		 B,NMAXVIDREL
      45.  00:8083                      loop_marcador_caras_negro:	;asignar espacios en negro
      46.  00:8083  36 00               	LD		(HL),0			;0 posición mapa tiles para nada (es transparente pero el fondo es negro)
      47.  00:8085  23                  	INC		HL
      48.  00:8086  10 FB               	DJNZ	loop_marcador_caras_negro
      49.  00:8088                      fin_loop_marcador_caras_negro:
      50.  00:8088                      	;2-pinto las caras según el n de vidas
      51.  00:8088  3A 43 86            	LD		 A, (prota_vidas)
      52.  00:808B  B7                  	OR		 A
      53.  00:808C  C8                  	RET 	 Z
      54.  00:808D  47                  	LD		 B, A
      55.  00:808E  21 93 8B            	LD		HL, array_aux_vidas
      56.  00:8091                      loop_marcador_caras: ;asignar caras
      57.  00:8091  36 0D               	LD		(HL), POSCARAMAP	;13 posición mapa tiles para cara
      58.  00:8093  23                  	INC		HL
      59.  00:8094  10 FB               	DJNZ	loop_marcador_caras
      60.  00:8096                      fin_loop_marcador_caras:
      61.  00:8096                      
      62.  00:8096                      fin_actualiza_marcador_vidas:
      63.  00:8096  C9                  	RET
      64.  00:8097                      
      65.  00:8097                      
      66.  00:8097                      ;;=====================================================
      67.  00:8097                      ;;ACTUALIZA_BUFFER_RELIQUIAS
      68.  00:8097                      ;;=====================================================	
      69.  00:8097                      ; función: 	actualiza buffer de reliquias
      70.  00:8097                      ; entrada: 	prota_reliquias
      71.  00:8097                      ; salida: 	array_aux_reliquias
      72.  00:8097                      ; toca:		A,B,HL
      73.  00:8097                      actualiza_buffer_reliquias:	
      74.  00:8097                      	;para no andar restando pongo todos los huecos a negro y luego en otro bucle las reliquias
      75.  00:8097                      	;1-pinto todo en blanco
      76.  00:8097  21 9B 8B            	LD		HL, array_aux_reliquias
      77.  00:809A  06 08               	LD		 B, NMAXVIDREL
      78.  00:809C  AF                  	XOR		 A
      79.  00:809D                      loop_buffer_reliquias_negro:	;asignar espacios en negro
      80.  00:809D  77                  	LD		(HL), A			;0 posición mapa tiles para nada (es transparente pero el fondo es negro)
      81.  00:809E  23                  	INC		HL
      82.  00:809F  10 FC               	DJNZ	loop_buffer_reliquias_negro
      83.  00:80A1                      
      84.  00:80A1                      	;2-pinto las cruces según el n de reliquias
      85.  00:80A1  21 9B 8B            	LD		HL, array_aux_reliquias
      86.  00:80A4  3A 44 86            	LD		 A, (prota_reliquias)
      87.  00:80A7  B7                  	OR		 A
      88.  00:80A8  C8                  	RET		 Z
      89.  00:80A9  47                  	LD		 B, A
      90.  00:80AA                      loop_buffer_reliquias: ;asignar reliquias
      91.  00:80AA  36 11               	LD		(HL), POSRELIMAP	;17 posición mapa tiles para reliquia
      92.  00:80AC  23                  	INC		HL
      93.  00:80AD  10 FB               	DJNZ	loop_buffer_reliquias
      94.  00:80AF                      fin_actualiza_buffer_reliquias:
      95.  00:80AF  C9                  	RET
      96.  00:80B0                      
      97.  00:80B0                      
      98.  00:80B0                      
      99.  00:80B0                      ;;=====================================================
     100.  00:80B0                      ;;LOCALIZA_INFO_HABITACION
     101.  00:80B0                      ;;=====================================================	
     102.  00:80B0                      ; función: 	busca las puertas que hay que pintar egún la posición del usuario y las pone en A
     103.  00:80B0                      ; entrada: 	prota.pos_mapy, prota.pos_mapx, prota_nivel habitaciones_juego
     104.  00:80B0                      ; salida: 	habitacion_actual
     105.  00:80B0                      ; toca:		todo
     106.  00:80B0                      ;ejemplo: nivel 4, posx 5 y posy 3
     107.  00:80B0                      ;3 + 5 x 8 + 4 x 49
     108.  00:80B0                      localiza_info_habitacion:
     109.  00:80B0                      ;primera posición: me coloco en la columna correcta
     110.  00:80B0  21 6A 88            	LD		HL, habitaciones_juego
     111.  00:80B3                      .situo_columna:	
     112.  00:80B3  3A 45 86            	LD		 A, (prota_pos_mapx)
     113.  00:80B6  CB 27               	SLA		 A				;multiplico por dos ya que cada habitación va de dos en dos bytes
     114.  00:80B8  06 00               	LD		 B, 0
     115.  00:80BA  4F                  	LD		 C, A
     116.  00:80BB                      
     117.  00:80BB  09                  	ADD 	HL, BC			;sumo a la posición 0 la columnax2 en la que situarme
     118.  00:80BC                      	
     119.  00:80BC                      .situo_fila:
     120.  00:80BC  3A 46 86            	LD		A, (prota_pos_mapy)
     121.  00:80BF  B7                  	OR	 	A
     122.  00:80C0  CA CD 80            	JP		Z, .situo_nivel	;si la fila es 0 no es necesario seguir operando en fila
     123.  00:80C3                      	
     124.  00:80C3  47                  	LD		B, A
     125.  00:80C4  AF                  	XOR		A
     126.  00:80C5                      .loop_suma_fila:
     127.  00:80C5  C6 10               	ADD		16				;cada fila tiene 16 bytes
     128.  00:80C7  10 FC               	DJNZ	.loop_suma_fila
     129.  00:80C9                      	
     130.  00:80C9  06 00               	LD		 B, 0
     131.  00:80CB  4F                  	LD		 C, A
     132.  00:80CC                      
     133.  00:80CC  09                  	ADD 	HL, BC			;sumo a la columna 16 x filas para situarme en la fila correcta
     134.  00:80CD                      
     135.  00:80CD                      .situo_nivel:
     136.  00:80CD                      	
     137.  00:80CD                      	
     138.  00:80CD  7E                  	LD		 A, (HL)
     139.  00:80CE  32 68 88            	LD		(habitacion_actual), A
     140.  00:80D1                      fin_localiza_info_habitacion:
     141.  00:80D1  C9                  	RET
     142.  00:80D2                      
     143.  00:80D2                      
     144.  00:80D2                      
     145.  00:80D2                      
     137   00:80D2                      	
     138   00:80D2                      	include "subr_pintapantalla.asm"
       1.  00:80D2                      ;;=====================================================
       2.  00:80D2                      ;;DEFINICIÓN DE SUBRUTINAS
       3.  00:80D2                      ;;=====================================================	
       4.  00:80D2                      ;relacionadas con pintado en pantalla (y no sprites)
       5.  00:80D2                      
       6.  00:80D2                      
       7.  00:80D2                      ;;=====================================================
       8.  00:80D2                      ;;COLOR_PANTALLA
       9.  00:80D2                      ;;=====================================================	
      10.  00:80D2                      ; función: 	el equivalente en basic a color 15,1,1
      11.  00:80D2                      ; entrada: 	HL	que apunta a un array de bytes con 3 bytes FORCLR, BAKCLR y BDRCLR
      12.  00:80D2                      ; salida: 	-
      13.  00:80D2                      ; toca: 	todo
      14.  00:80D2                      color_pantalla:
      15.  00:80D2  7E                  	LD		 A, (HL)			;FORCLR 
      16.  00:80D3  32 E9 F3            	LD 		(FORCLR),A
      17.  00:80D6  23                  	INC		HL
      18.  00:80D7                      	
      19.  00:80D7  7E                  	LD		 A, (HL)			;BAKCLR
      20.  00:80D8  32 EA F3            	LD 		(BAKCLR),A
      21.  00:80DB  23                  	INC		HL
      22.  00:80DC                      	
      23.  00:80DC  7E                  	LD		 A, (HL)
      24.  00:80DD  32 EB F3            	LD 		(BDRCLR),A			;BDRCLR
      25.  00:80E0  C3 62 00            	JP		CHGCLR 
      26.  00:80E3                      fin_color_pantalla:
      27.  00:80E3                      	;RET
      28.  00:80E3                      
      29.  00:80E3                      
      30.  00:80E3                      ;;=====================================================
      31.  00:80E3                      ;;PREPARAPANTALLA
      32.  00:80E3                      ;;=====================================================	
      33.  00:80E3                      ; función: elimina clic cuando se pulsa tecla, cls, screen 2,2
      34.  00:80E3                      ; entrada: -
      35.  00:80E3                      ; salida: -
      36.  00:80E3                      ; toca: si no son todos los regristros, casi todos
      37.  00:80E3                      sub_preparapantalla:
      38.  00:80E3                      	;toca A y Z
      39.  00:80E3                      elimina_clic;
      40.  00:80E3  AF                  	XOR		 A
      41.  00:80E4  32 DB F3            	LD		(CLIKSW),A
      42.  00:80E7                      fin_elimina_clic:
      43.  00:80E7                      
      44.  00:80E7                      	;toca A
      45.  00:80E7                      limpia_pantalla:
      46.  00:80E7  AF                  	XOR		 A
      47.  00:80E8  CD C3 00            	CALL 	CLS
      48.  00:80EB                      fin_limpia_pantalla:
      49.  00:80EB                      
      50.  00:80EB                      	;toca A y direcciones #F3E9/#F3EA/#F3EB, poner en HL array con 3 valores
      51.  00:80EB  21 7A 8B            	LD		HL, color_base
      52.  00:80EE  CD D2 80            	CALL	color_pantalla
      53.  00:80F1                      	
      54.  00:80F1                      	;cambiamos a SCREEN 2,2 del BASIC
      55.  00:80F1                      	;toca A
      56.  00:80F1                      screen2:
      57.  00:80F1  3E 02               	LD		 A, 2
      58.  00:80F3  CD 5F 00            	CALL	CHGMOD			;selecciona screen 2
      59.  00:80F6                      sprites_16_16:
      60.  00:80F6  3A E0 F3            	LD		 A, (RG1SAV)
      61.  00:80F9  F6 02               	OR		00000010b		;fuerza sprites de 16x16
      62.  00:80FB  32 E0 F3            	LD		(RG1SAV), A		;no lo guardamos en la copia de variables del sistema
      63.  00:80FE  47                  	LD		 B, A
      64.  00:80FF  0E 01               	LD		 C, 1
      65.  00:8101  C3 47 00            	JP		WRTVDP			;opción alternativa de escribir las tres lineas siguientes
      66.  00:8104                      	;~ CALL	WRTVDP			;lo escribe en el registro 1 del VDP
      67.  00:8104                      	;~ RET
      68.  00:8104                      fin_sub_preparapantalla:
      69.  00:8104                      	
      70.  00:8104                      
      71.  00:8104                      ;;=====================================================
      72.  00:8104                      ;;PINTA_PANTALLA_COMPLETA
      73.  00:8104                      ;;=====================================================	
      74.  00:8104                      ; función: pinta el escenario, las 3 partes
      75.  00:8104                      ; entrada: -
      76.  00:8104                      ; salida: -
      77.  00:8104                      ; toca: si no son todos los regristros, casi todos
      78.  00:8104                      pinta_pantalla_completa:
      79.  00:8104  CD 0B 81            	CALL 	pinta_parte_superior_pantalla
      80.  00:8107                      	
      81.  00:8107  CD 42 81            	CALL 	pinta_parte_inferior_pantalla	
      82.  00:810A                      fin_pinta_pantalla_completa:
      83.  00:810A  C9                  	RET
      84.  00:810B                      
      85.  00:810B                      
      86.  00:810B                      ;;=====================================================
      87.  00:810B                      ;;PINTA_PARTE_SUPERIOR_PANTALLA
      88.  00:810B                      ;;=====================================================	
      89.  00:810B                      ; función: pinta el escenario, las 2 partes superiores y actualiza puertas
      90.  00:810B                      ; entrada: -
      91.  00:810B                      ; salida: -
      92.  00:810B                      ; toca: si no son todos los regristros, casi todos
      93.  00:810B                      pinta_parte_superior_pantalla:
      94.  00:810B                      
      95.  00:810B                      ;************** preguntar cómo parametrizar esto **********************************************
      96.  00:810B                      
      97.  00:810B                      	;cangando banco 1
      98.  00:810B                      	;cargamos los patrones
      99.  00:810B  21 02 8D            	LD		HL, tiles_patrones_pantalla11
     100.  00:810E  11 00 00            	LD		DE, CHRTBL
     101.  00:8111  CD 62 85            	CALL	depack_VRAM
     102.  00:8114                      	;cargamos mapa de pantalla
     103.  00:8114  21 3D 8D            	LD		HL, tiles_mapa_pantalla11
     104.  00:8117  11 00 18            	LD		DE, TILMAP
     105.  00:811A  CD 62 85            	CALL	depack_VRAM
     106.  00:811D                      	;cargamos los colores de los patrones
     107.  00:811D  21 25 8D            	LD		HL, tiles_color_pantalla11
     108.  00:8120  11 00 20            	LD		DE, CLRTBL
     109.  00:8123  CD 62 85            	CALL	depack_VRAM
     110.  00:8126                      	
     111.  00:8126                      	;cangando banco 2
     112.  00:8126                      	;cargamos los patrones
     113.  00:8126  21 02 8D            	LD		HL, tiles_patrones_pantalla12
     114.  00:8129  11 00 08            	LD		DE, CHRTBL + #0800
     115.  00:812C  CD 62 85            	CALL	depack_VRAM	
     116.  00:812F                      	;cargamos mapa de pantalla
     117.  00:812F  21 57 8D            	LD		HL, tiles_mapa_pantalla12
     118.  00:8132  11 00 19            	LD		DE, TILMAP + #0100
     119.  00:8135  CD 62 85            	CALL	depack_VRAM
     120.  00:8138                      	;cargamos los colores de los patrones
     121.  00:8138  21 25 8D            	LD		HL, tiles_color_pantalla12
     122.  00:813B  11 00 28            	LD		DE, CLRTBL + #0800
     123.  00:813E                      	;JP		depack_VRAM
     124.  00:813E  CD 62 85            	CALL	depack_VRAM
     125.  00:8141                      fin_pinta_parte_superior_pantalla:
     126.  00:8141  C9                  	RET
     127.  00:8142                      
     128.  00:8142                      
     129.  00:8142                      ;;=====================================================
     130.  00:8142                      ;;PINTA_PARTE_INFERIOR_PANTALLA
     131.  00:8142                      ;;=====================================================	
     132.  00:8142                      ; función: pinta la parte inferior del escenario que es común
     133.  00:8142                      ; entrada: -
     134.  00:8142                      ; salida: -
     135.  00:8142                      ; toca: si no son todos los regristros, casi todos
     136.  00:8142                      pinta_parte_inferior_pantalla:
     137.  00:8142                      	;cangando banco 3
     138.  00:8142                      	;cargamos los patrones
     139.  00:8142  21 81 8D            	LD		HL,tiles_patrones_pantalla3
     140.  00:8145  11 00 10            	LD		DE,CHRTBL + #1000
     141.  00:8148  CD 62 85            	CALL	depack_VRAM	
     142.  00:814B                      	;cargamos mapa de pantalla
     143.  00:814B  21 FC 8E            	LD		HL,tiles_mapa_pantalla3
     144.  00:814E  11 00 1A            	LD		DE,TILMAP + #0200
     145.  00:8151  CD 62 85            	CALL	depack_VRAM
     146.  00:8154                      	;cargamos los colores de los patrones
     147.  00:8154  21 C7 8E            	LD		HL,tiles_color_pantalla3
     148.  00:8157  11 00 30            	LD		DE,CLRTBL + #1000
     149.  00:815A  C3 62 85            	JP		depack_VRAM
     150.  00:815D                      	;~ CALL	depack_VRAM
     151.  00:815D                      fin_pinta_parte_inferior_pantalla:
     152.  00:815D                      	;~ RET
     153.  00:815D                      
     154.  00:815D                      
     155.  00:815D                      
     156.  00:815D                      ;;=====================================================
     157.  00:815D                      ;;PINTA_VIDAS
     158.  00:815D                      ;;=====================================================	
     159.  00:815D                      ; función: 	actualiza el mapa de tiles para que en el próximo refresco se pinten y actualiza_vidas
     160.  00:815D                      ; entrada: 	array_aux_vidas
     161.  00:815D                      ; salida: 	actualiza_vidas_sn
     162.  00:815D                      ; toca:		todo
     163.  00:815D                      pinta_vidas:
     164.  00:815D  CD 7E 80            	CALL	actualiza_marcador_vidas
     165.  00:8160                      	
     166.  00:8160  21 93 8B            	LD		HL, array_aux_vidas
     167.  00:8163  11 48 1A            	LD		DE, TILMAP + POSVIDAS 	;inicio posición en el mapa de tiles de las vidas
     168.  00:8166  01 08 00            	LD		BC, NMAXVIDREL			;hay 8 posiciones para vidas/reliquias o espacios en negro si no tiene 8 vidas/reliquias
     169.  00:8169  C3 5C 00            	JP		LDIRVM
     170.  00:816C                      fin_pinta_vidas:
     171.  00:816C                      	;RET
     172.  00:816C                      	
     173.  00:816C                      	
     174.  00:816C                      
     175.  00:816C                      ;;=====================================================
     176.  00:816C                      ;;PINTA_RELIQUIAS
     177.  00:816C                      ;;=====================================================	
     178.  00:816C                      ; función: 	actualiza el mapa de tiles para que en el próximo refresco se pinten y actualiza_reliquias
     179.  00:816C                      ; entrada: 	array_aux_reliquias
     180.  00:816C                      ; salida: 	-
     181.  00:816C                      ; toca:		todo
     182.  00:816C                      pinta_reliquias:
     183.  00:816C  CD 97 80            	CALL	actualiza_buffer_reliquias
     184.  00:816F                      	
     185.  00:816F  21 9B 8B            	LD		HL, array_aux_reliquias
     186.  00:8172  11 C8 1A            	LD		DE, TILMAP + POSRELIQ 	;inicio posición en el mapa de tiles de las vidas
     187.  00:8175  01 08 00            	LD		BC, NMAXVIDREL			;hay 8 posiciones para vidas/reliquias o espacios en negro si no tiene 8 vidas/reliquias
     188.  00:8178  C3 5C 00            	JP		LDIRVM
     189.  00:817B                      fin_pinta_reliquias:
     190.  00:817B                      	;RET
     191.  00:817B                      	
     192.  00:817B                      
     193.  00:817B                      
     194.  00:817B                      	
     195.  00:817B                      ;;=====================================================
     196.  00:817B                      ;;PINTA_NIVEL
     197.  00:817B                      ;;=====================================================	
     198.  00:817B                      ; función: 	actualiza el nivel en la parte de puntuación
     199.  00:817B                      ; entrada: 	prota_nivel
     200.  00:817B                      ; salida: 	-
     201.  00:817B                      ; toca:		HL,DE,BC
     202.  00:817B                      pinta_nivel:	
     203.  00:817B                      	;forma más avanzada sin llamada a la bios
     204.  00:817B  01 B4 1A            	LD		BC,TILMAP + POSNIVEL ;posición en el mapa de tiles del tile de nivel
     205.  00:817E  3A 42 86            	LD		 A, (prota_nivel)	;seleccionando la pos del banco de tiles a poner en el mapa
     206.  00:8181  C6 30               	ADD		'0'	
     207.  00:8183  57                  	LD		 D, A
     208.  00:8184                      	
     209.  00:8184  CD 88 81            	CALL	pinta_tile_suelto	;nota ... un call+ret se debe poder sustiruir por un jp
     210.  00:8187                      fin_pinta_nivel:
     211.  00:8187  C9                  	RET
     212.  00:8188                      
     213.  00:8188                      
     214.  00:8188                      
     215.  00:8188                      ;;=====================================================
     216.  00:8188                      ;;PINTA_TILE_SUELTO
     217.  00:8188                      ;;=====================================================	
     218.  00:8188                      ; función: 	pinta al tile que digamos en D, en la posición BC
     219.  00:8188                      ; entrada: 	BC (posición a pintar en el mapa),D (qué se va a pintar el esa posición)
     220.  00:8188                      ; salida: 	-
     221.  00:8188                      ; toca:		-
     222.  00:8188                      pinta_tile_suelto:
     223.  00:8188  DB 99               	IN		 A,(REGEST)		;leer registro de estado (recomendado)
     224.  00:818A  79                  	LD		 A,C			;primero byte bajo	
     225.  00:818B  D3 99               	OUT		(REGEST),A
     226.  00:818D  78                  	LD		 A,B			;después byte alto  ********************** preguntar a Fernando cómo que byte bajo es B
     227.  00:818E  F6 40               	OR		1000000b		;+64
     228.  00:8190  D3 99               	OUT		(REGEST),A
     229.  00:8192                      	
     230.  00:8192  7A                  	LD		A,D
     231.  00:8193  D3 98               	OUT		(REGESCVDP),A	;escribe A en VRAM en la posición indicada por los dos OUT anteriores
     232.  00:8195                      fin_pinta_tile_suelto:
     233.  00:8195  C9                  	RET
     234.  00:8196                      
     235.  00:8196                      
     236.  00:8196                      
     237.  00:8196                      
     238.  00:8196                      
     239.  00:8196                      ;;=====================================================
     240.  00:8196                      ;;MIRA_PINTA ENERGIA
     241.  00:8196                      ;;=====================================================	
     242.  00:8196                      ; función: 	actualiza el nivel de energia en la parte de puntuación
     243.  00:8196                      ; nota:		el cuadrado más bajo de ejergía siempre estará pintado... se obviará
     244.  00:8196                      ; entrada: 	prota.energia, array_aux_energia
     245.  00:8196                      ; salida: 	-
     246.  00:8196                      ; toca:		ninguno porque usa EXX
     247.  00:8196                      
     248.  00:8196                      ; nota importante... lo mismo interesa hacer esto con un array para comparar y un bucle
     249.  00:8196                      
     250.  00:8196                      
     251.  00:8196                      mira_pinta_energia:
     252.  00:8196  D9                  	EXX							;por si acaso guardo el contenido de HL (si veo que no es necesario guardarlo lo quito) uso esto en vez de push por el nº ciclos
     253.  00:8197                      	
     254.  00:8197  3A 47 86            	LD		 A,(prota_energia) 	;para las comparaciones A variable (actual) y B fijo (limites)
     255.  00:819A                      
     256.  00:819A  0E 00               	LD		 C,TILENEGRO		;para agilizar asignaciones en vez de un valor cte uso otro registro
     257.  00:819C                      pinta_ener:
     258.  00:819C                      pinta_ener_tile_8:
     259.  00:819C  21 AA 8B            	LD		HL,ultimo_pos_array_aux_energia	;coloco puntero en array e iré decrementando
     260.  00:819F  06 D9               	LD		 B,TILEENERG8
     261.  00:81A1  B8                  	CP		 B
     262.  00:81A2  38 04               	JR		C,pinta_ener_tile_8_negro
     263.  00:81A4  36 0E               	LD		(HL),TILEMAPVERD
     264.  00:81A6  18 01               	JR		pinta_ener_tile_7
     265.  00:81A8                      pinta_ener_tile_8_negro:
     266.  00:81A8  71                  	LD		(HL),C
     267.  00:81A9                      
     268.  00:81A9                      pinta_ener_tile_7:
     269.  00:81A9  2B                  	DEC		HL
     270.  00:81AA  06 BA               	LD		 B,TILEENERG7
     271.  00:81AC  B8                  	CP		 B
     272.  00:81AD  38 04               	JR		C,pinta_ener_tile_7_negro
     273.  00:81AF  36 0E               	LD		(HL),TILEMAPVERD
     274.  00:81B1  18 01               	JR		pinta_ener_tile_6
     275.  00:81B3                      pinta_ener_tile_7_negro:
     276.  00:81B3  71                  	LD		(HL),C
     277.  00:81B4                      
     278.  00:81B4                      pinta_ener_tile_6:
     279.  00:81B4  2B                  	DEC		HL
     280.  00:81B5  06 9B               	LD		 B,TILEENERG6
     281.  00:81B7  B8                  	CP		 B
     282.  00:81B8  38 04               	JR		C,pinta_ener_tile_6_negro
     283.  00:81BA  36 0E               	LD		(HL),14
     284.  00:81BC  18 01               	JR		pinta_ener_tile_5
     285.  00:81BE                      pinta_ener_tile_6_negro:
     286.  00:81BE  71                  	LD		(HL),C
     287.  00:81BF                      
     288.  00:81BF                      pinta_ener_tile_5:
     289.  00:81BF  2B                  	DEC		HL
     290.  00:81C0  06 7C               	LD		 B,TILEENERG5
     291.  00:81C2  B8                  	CP		 B
     292.  00:81C3  38 04               	JR		C,pinta_ener_tile_5_negro
     293.  00:81C5  36 0E               	LD		(HL),TILEMAPVERD
     294.  00:81C7  18 01               	JR		pinta_ener_tile_4
     295.  00:81C9                      pinta_ener_tile_5_negro:
     296.  00:81C9  71                  	LD		(HL),C
     297.  00:81CA                      
     298.  00:81CA                      pinta_ener_tile_4:
     299.  00:81CA  2B                  	DEC		HL
     300.  00:81CB  06 5D               	LD		 B,TILEENERG4
     301.  00:81CD  B8                  	CP		 B
     302.  00:81CE  38 04               	JR		C,pinta_ener_tile_4_negro
     303.  00:81D0  36 0F               	LD		(HL),TILEMAPAMAR
     304.  00:81D2  18 01               	JR		pinta_ener_tile_3
     305.  00:81D4                      pinta_ener_tile_4_negro:
     306.  00:81D4  71                  	LD		(HL),C
     307.  00:81D5                      	
     308.  00:81D5                      pinta_ener_tile_3:
     309.  00:81D5  2B                  	DEC		HL
     310.  00:81D6  06 3E               	LD		 B,TILEENERG3
     311.  00:81D8  B8                  	CP		 B
     312.  00:81D9  38 04               	JR		C,pinta_ener_tile_3_negro
     313.  00:81DB  36 0F               	LD		(HL),TILEMAPAMAR
     314.  00:81DD  18 01               	JR		pinta_ener_tile_2
     315.  00:81DF                      pinta_ener_tile_3_negro:
     316.  00:81DF  71                  	LD		(HL),C
     317.  00:81E0                      
     318.  00:81E0                      pinta_ener_tile_2:
     319.  00:81E0  2B                  	DEC		HL
     320.  00:81E1  06 1F               	LD		 B,TILEENERG2
     321.  00:81E3  B8                  	CP		 B
     322.  00:81E4  38 04               	JR		C,pinta_ener_tile_2_negro
     323.  00:81E6  36 10               	LD		(HL),TILEMAPROJO
     324.  00:81E8  18 01               	JR		fin_mira_pinta_energia		;siempre estará pintado el cuadro mínimo
     325.  00:81EA                      pinta_ener_tile_2_negro:
     326.  00:81EA  71                  	LD		(HL),C
     327.  00:81EB                      
     328.  00:81EB                      fin_mira_pinta_energia:
     329.  00:81EB  D9                  	EXX
     330.  00:81EC  C9                  	RET
     331.  00:81ED                      
     332.  00:81ED                      
     333.  00:81ED                      ;;=====================================================
     334.  00:81ED                      ;;PINTA_ENERGIA
     335.  00:81ED                      ;;=====================================================	
     336.  00:81ED                      ; función: 	actualiza el mapa de tiles para que en el próximo refresco se pinte la barra de energia actual
     337.  00:81ED                      ; entrada: 	array_aux_energia
     338.  00:81ED                      ; toca:		todo
     339.  00:81ED                      pinta_energia:
     340.  00:81ED  CD 96 81            	CALL	mira_pinta_energia
     341.  00:81F0                      	
     342.  00:81F0  21 A3 8B            	LD		HL, array_aux_energia
     343.  00:81F3  11 88 1A            	LD		DE, TILMAP + POSENERG 	;inicio posición en el mapa de tiles de las vidas
     344.  00:81F6  01 08 00            	LD		BC, NMAXVIDREL			;hay 8 posiciones para vidas/reliquias o espacios en negro si no tiene 8 vidas/reliquias
     345.  00:81F9  C3 5C 00            	JP		LDIRVM
     346.  00:81FC                      fin_pinta_energia:
     347.  00:81FC                      	;RET
     348.  00:81FC                      
     349.  00:81FC                      
     350.  00:81FC                      
     351.  00:81FC                      ;;=====================================================
     352.  00:81FC                      ;;BORRA_MAPA
     353.  00:81FC                      ;;=====================================================	
     354.  00:81FC                      ; función: 	pone todas las habitaciones del mapa a negro (los tiles del mapa los rellena con un array a 0 - caracter en negro)
     355.  00:81FC                      ; entrada: 	array_aux_mapa_limpiar
     356.  00:81FC                      ; salida: 	-
     357.  00:81FC                      ; toca:		AF
     358.  00:81FC                      borra_mapa:
     359.  00:81FC  D9                  	EXX
     360.  00:81FD                      	
     361.  00:81FD  21 AB 8B            	LD		HL,array_aux_mapa_limpiar
     362.  00:8200  11 F8 1A            	LD		DE,TILMAP + POSMAPLIN1 	;inicio posición en el mapa de tiles de la primera fila del mapa
     363.  00:8203  01 07 00            	LD		BC,NHABNIVEL			;cada nivel son 7 filas con 7 habitaciones "posibles"
     364.  00:8206  CD 5C 00            	CALL	LDIRVM
     365.  00:8209                      	
     366.  00:8209  21 AB 8B            	LD		HL,array_aux_mapa_limpiar
     367.  00:820C  11 D8 1A            	LD		DE,TILMAP + POSMAPLIN2
     368.  00:820F  01 07 00            	LD		BC,NHABNIVEL
     369.  00:8212  CD 5C 00            	CALL	LDIRVM
     370.  00:8215                      
     371.  00:8215  21 AB 8B            	LD		HL,array_aux_mapa_limpiar
     372.  00:8218  11 B8 1A            	LD		DE,TILMAP + POSMAPLIN3
     373.  00:821B  01 07 00            	LD		BC,NHABNIVEL
     374.  00:821E  CD 5C 00            	CALL	LDIRVM
     375.  00:8221                      
     376.  00:8221  21 AB 8B            	LD		HL,array_aux_mapa_limpiar	
     377.  00:8224  11 98 1A            	LD		DE,TILMAP + POSMAPLIN4
     378.  00:8227  01 07 00            	LD		BC,NHABNIVEL
     379.  00:822A  CD 5C 00            	CALL	LDIRVM
     380.  00:822D                      
     381.  00:822D  21 AB 8B            	LD		HL,array_aux_mapa_limpiar	
     382.  00:8230  11 78 1A            	LD		DE,TILMAP + POSMAPLIN5
     383.  00:8233  01 07 00            	LD		BC,NHABNIVEL
     384.  00:8236  CD 5C 00            	CALL	LDIRVM
     385.  00:8239                      
     386.  00:8239  21 AB 8B            	LD		HL,array_aux_mapa_limpiar	
     387.  00:823C  11 58 1A            	LD		DE,TILMAP + POSMAPLIN6
     388.  00:823F  01 07 00            	LD		BC,NHABNIVEL
     389.  00:8242  CD 5C 00            	CALL	LDIRVM
     390.  00:8245                      
     391.  00:8245  21 AB 8B            	LD		HL,array_aux_mapa_limpiar	
     392.  00:8248  11 38 1A            	LD		DE,TILMAP + POSMAPLIN7
     393.  00:824B  01 07 00            	LD		BC,NHABNIVEL
     394.  00:824E  CD 5C 00            	CALL	LDIRVM
     395.  00:8251                      	
     396.  00:8251  D9                  	EXX
     397.  00:8252                      fin_borra_mapa:
     398.  00:8252  C9                  	RET
     399.  00:8253                      
     400.  00:8253                      
     401.  00:8253                      
     402.  00:8253                      
     403.  00:8253                      
     404.  00:8253                      
     405.  00:8253                      
     406.  00:8253                      
     407.  00:8253                      
     408.  00:8253                      ;=====================================================
     409.  00:8253                      ;;PINTA_ARRAY
     410.  00:8253                      ;;=====================================================	
     411.  00:8253                      ;;;funcion:  se le pasa un array con posiciones de tiles y coordenadas x e y y los pinta en screen 2
     412.  00:8253                      ;;entrada:	wordaux1 (pos inicio sc2 donde pintar) y wordaux2 (puntero al array a pintar), BC (posición en tilemap) , D filas y E columnas
     413.  00:8253                      ;;salida:	-
     414.  00:8253                      ;;importante: necesita de una variable wordaux1 tipo WD (wordaux1: 	DW	0)
     415.  00:8253                      ;; ejemplo llamada:
     416.  00:8253                      	;~ LD		HL,array_tiles					;guardo puntero al array a pintar (como psar por referencia)
     417.  00:8253                      	;~ LD		(wordaux2),HL					;en la variable wordaux2
     418.  00:8253                      	;~ LD		HL,SC2MAP + 256 + 32			;calcula posición en tilemap
     419.  00:8253                      	;~ LD		(wordaux1),HL					;guarda valor pos tilemap en wordaux1
     420.  00:8253                      	;~ LD		B,H								;coloca posición tilemap BC
     421.  00:8253                      	;~ LD		C,L
     422.  00:8253                      	;~ LD		D,2								;nº de filas
     423.  00:8253                      	;~ LD		E,3								;nº de columnas
     424.  00:8253                      	;~ CALL	pinta_array
     425.  00:8253                      
     426.  00:8253                      pinta_array:
     427.  00:8253  F5                  	PUSH	AF
     428.  00:8254                      	
     429.  00:8254                      	;contamos con que la posición "global" en el tilemap está ya en BC
     430.  00:8254                      	;y el puntero al array a pintar en wordaux2 y la posición en tilemap sc2 en wordaux1
     431.  00:8254                      	;inicializa
     432.  00:8254  DB 99               	IN		 A,(REGEST)		;leer registro de estado (recomendado)
     433.  00:8256                      	
     434.  00:8256                      	;coloca puntero para pintar tile según BC
     435.  00:8256  79                  	LD		 A,C			;primero byte bajo	
     436.  00:8257  D3 99               	OUT		(REGEST),A
     437.  00:8259  78                  	LD		 A,B			;después byte alto  ********************** preguntar a Fernando cómo que byte bajo es B
     438.  00:825A  F6 40               	OR		1000000b		;+64
     439.  00:825C  D3 99               	OUT		(REGEST),A
     440.  00:825E                      
     441.  00:825E                      	
     442.  00:825E  2A 88 82            	LD		HL,(wordaux2)	;HL es lo que se pintará y le he pasado el puntero del array tilemap a pintar
     443.  00:8261                      .pa_pinta_fila:
     444.  00:8261  43                  	LD		 B,E
     445.  00:8262                      .pa_pinta_columnas: 		;finta la fila (pintando las columnas)
     446.  00:8262  7E                  	LD		 A,(HL)
     447.  00:8263  D3 98               	OUT		(REGESCVDP),A	;escribe A en VRAM en la posición indicada por los dos OUT anteriores
     448.  00:8265  23                  	INC		HL
     449.  00:8266  10 FA               	DJNZ	.pa_pinta_columnas
     450.  00:8268                      	
     451.  00:8268                      	;no es una solución elegante lo de repetir código pero queda claro
     452.  00:8268                      	;por si hay otra fila
     453.  00:8268  E5                  	PUSH	HL
     454.  00:8269  2A 86 82            	LD		HL,(wordaux1)
     455.  00:826C  01 20 00            	LD		BC,32
     456.  00:826F  09                  	ADD		HL,BC
     457.  00:8270  22 86 82            	LD		(wordaux1),HL
     458.  00:8273  44                  	LD		B,H
     459.  00:8274  4D                  	LD		C,L
     460.  00:8275  E1                  	POP		HL
     461.  00:8276                      	
     462.  00:8276  79                  	LD		 A,C			;primero byte bajo	
     463.  00:8277  D3 99               	OUT		(REGEST),A
     464.  00:8279  78                  	LD		 A,B			;después byte alto 
     465.  00:827A  F6 40               	OR		1000000b		;+64
     466.  00:827C  D3 99               	OUT		(REGEST),A
     467.  00:827E                      	
     468.  00:827E                      	;si hay otra fila repite
     469.  00:827E  15                  	DEC		 D
     470.  00:827F  7A                  	LD		 A,D		;¿hay otra fila?
     471.  00:8280  B7                  	OR		 A
     472.  00:8281  C2 61 82            	JP		NZ,.pa_pinta_fila
     473.  00:8284                      	
     474.  00:8284  F1                  	POP		AF
     475.  00:8285                      	
     476.  00:8285                      fin_pinta_array:
     477.  00:8285  C9                  	RET
     478.  00:8286                      ;;variables asocidas a la función (no sé si dejarlo aquí y encapsularlo todo o hacerla reutilizable)
     479.  00:8286                      ;; por de pronto la dejo aquí
     480.  00:8286  00 00               wordaux1:		DW	0	;almacena la posición en el tilemap 0 al 675
     481.  00:8288  00 00               wordaux2:		DW	0	;almacena puntero a array de tiles (posiciones en realidad) a pintar (posiciones repetidas en los 3 bancos)
     482.  00:828A                      
     483.  00:828A                      
     484.  00:828A                      
     485.  00:828A                      
     486.  00:828A                      
     487.  00:828A                      ;;=====================================================
     488.  00:828A                      ;;PINTA_PUERTAS
     489.  00:828A                      ;;=====================================================	
     490.  00:828A                      ; función: 	examina A y mira si tiene que pintar puertas de los lados, arriba o abrajo o las escaleras (o no)
     491.  00:828A                      ; entrada: 	habitacion_actual 1 escalera 1 puerta arriba 1 pu der 1 pu aba 1 pu izq (si es 0 pinta pared)
     492.  00:828A                      ; salida: 	-
     493.  00:828A                      ; toca:		todo
     494.  00:828A                      pinta_puertas:
     495.  00:828A  CD 0B 81            	CALL	pinta_parte_superior_pantalla	;pinta pasillo y paredes
     496.  00:828D                      
     497.  00:828D  CD B0 80            	CALL	localiza_info_habitacion	;busca qué puertas debe pintar y lo mete en habitación_actual
     498.  00:8290                      	
     499.  00:8290  3A 68 88            	LD		 A, (habitacion_actual)		;se mete en A porque la función pide A y para no buscar el valor 4 veces
     500.  00:8293                      
     501.  00:8293                      ;	LD		 A, 00000111b	; para pruebas
     502.  00:8293                      
     503.  00:8293                      
     504.  00:8293                      ;	BIT		 4, A
     505.  00:8293                      ;	CALL	nz, pinta_escalera
     506.  00:8293                      
     507.  00:8293  CB 5F               	BIT		 3, A
     508.  00:8295  C4 BD 82            	CALL	nz, pinta_puerta_arr
     509.  00:8298                      
     510.  00:8298  CB 57               	BIT		 2, A
     511.  00:829A  C4 D2 82            	CALL	nz, pinta_puerta_der
     512.  00:829D                      
     513.  00:829D  CB 4F               	BIT		 1, A
     514.  00:829F  C4 A8 82            	CALL	nz, pinta_puerta_aba
     515.  00:82A2                      	
     516.  00:82A2  CB 47               	BIT		 0, A
     517.  00:82A4  C4 E7 82            	CALL	nz, pinta_puerta_izq
     518.  00:82A7                      
     519.  00:82A7                      	;; sustituir el último call por jp *************************************************
     520.  00:82A7                      fin_pinta_puertas:
     521.  00:82A7  C9                  	RET
     522.  00:82A8                      
     523.  00:82A8                      
     524.  00:82A8                      
     525.  00:82A8                      
     526.  00:82A8                      ;;=====================================================
     527.  00:82A8                      ;;PINTA_PUERTA_ABA
     528.  00:82A8                      ;;=====================================================	
     529.  00:82A8                      ; función: 	pinta la puerta de abajo
     530.  00:82A8                      ; entrada: 	array_puerta_abajo, wordaux2, wordaux1
     531.  00:82A8                      ; salida: 	-
     532.  00:82A8                      ; toca:		HL,BC, DE
     533.  00:82A8                      pinta_puerta_aba:
     534.  00:82A8  21 DB 8B            	LD		HL,array_puerta_abajo			;guardo puntero al array a pintar (como psar por referencia)
     535.  00:82AB  22 88 82            	LD		(wordaux2),HL					;en la variable wordaux2
     536.  00:82AE  21 EE 19            	LD		HL,TILMAP + POSPUERABAJ			;calcula posición en tilemap
     537.  00:82B1  22 86 82            	LD		(wordaux1),HL					;guarda valor pos tilemap en wordaux1
     538.  00:82B4  44                  	LD		B,H								;coloca posición tilemap BC
     539.  00:82B5  4D                  	LD		C,L
     540.  00:82B6  16 01               	LD		D,1								;nº de filas
     541.  00:82B8  1E 04               	LD		E,4								;nº de columnas
     542.  00:82BA  C3 53 82            	JP		pinta_array
     543.  00:82BD                      	;~ CALL	pinta_array
     544.  00:82BD                      fin_pinta_puerta_aba:
     545.  00:82BD                      	;~ RET
     546.  00:82BD                      
     547.  00:82BD                      ;;=====================================================
     548.  00:82BD                      ;;PINTA_PUERTA_ARR
     549.  00:82BD                      ;;=====================================================	
     550.  00:82BD                      ; función: 	pinta la puerta de arriba
     551.  00:82BD                      ; entrada: 	array_puerta_arriba, wordaux2, wordaux1
     552.  00:82BD                      ; salida: 	-
     553.  00:82BD                      ; toca:		HL,BC, DE
     554.  00:82BD                      pinta_puerta_arr:
     555.  00:82BD  21 B2 8B            	LD		HL,array_puerta_arriba			;guardo puntero al array a pintar (como psar por referencia)
     556.  00:82C0  22 88 82            	LD		(wordaux2),HL					;en la variable wordaux2
     557.  00:82C3  21 8E 18            	LD		HL,TILMAP + POSPUERARRI			;calcula posición en tilemap
     558.  00:82C6  22 86 82            	LD		(wordaux1),HL					;guarda valor pos tilemap en wordaux1
     559.  00:82C9  44                  	LD		B,H								;coloca posición tilemap BC
     560.  00:82CA  4D                  	LD		C,L
     561.  00:82CB  16 05               	LD		D,5								;nº de filas
     562.  00:82CD  1E 04               	LD		E,4								;nº de columnas
     563.  00:82CF  C3 53 82            	JP		pinta_array
     564.  00:82D2                      	;~ CALL	pinta_array
     565.  00:82D2                      fin_pinta_puerta_arr:
     566.  00:82D2                      	;~ RET
     567.  00:82D2                      
     568.  00:82D2                      ;;=====================================================
     569.  00:82D2                      ;;PINTA_PUERTA_DER
     570.  00:82D2                      ;;=====================================================	
     571.  00:82D2                      ; función: 	pinta la puerta de la derecha
     572.  00:82D2                      ; entrada: 	array_puerta_derecha, wordaux2, wordaux1
     573.  00:82D2                      ; salida: 	-
     574.  00:82D2                      ; toca:		HL,BC, DE
     575.  00:82D2                      pinta_puerta_der:
     576.  00:82D2  21 C6 8B            	LD		HL,array_puerta_derecha			;guardo puntero al array a pintar (como psar por referencia)
     577.  00:82D5  22 88 82            	LD		(wordaux2),HL					;en la variable wordaux2
     578.  00:82D8  21 FC 18            	LD		HL,TILMAP + POSPUERDERE			;calcula posición en tilemap
     579.  00:82DB  22 86 82            	LD		(wordaux1),HL					;guarda valor pos tilemap en wordaux1
     580.  00:82DE  44                  	LD		B,H								;coloca posición tilemap BC
     581.  00:82DF  4D                  	LD		C,L
     582.  00:82E0  16 07               	LD		D,7								;nº de filas
     583.  00:82E2  1E 03               	LD		E,3								;nº de columnas
     584.  00:82E4  C3 53 82            	JP		pinta_array
     585.  00:82E7                      	;~ CALL	pinta_array
     586.  00:82E7                      fin_pinta_puerta_der:
     587.  00:82E7                      	;~ RET
     588.  00:82E7                      	
     589.  00:82E7                      ;;=====================================================
     590.  00:82E7                      ;;PINTA_PUERTA_IZQ
     591.  00:82E7                      ;;=====================================================	
     592.  00:82E7                      ; función: 	pinta la puerta de la izquierda
     593.  00:82E7                      ; entrada: 	array_puerta_izquierda, wordaux2, wordaux1
     594.  00:82E7                      ; salida: 	-
     595.  00:82E7                      ; toca:		HL,BC, DE
     596.  00:82E7                      pinta_puerta_izq:
     597.  00:82E7  21 DF 8B            	LD		HL,array_puerta_izquierda		;guardo puntero al array a pintar (como psar por referencia)
     598.  00:82EA  22 88 82            	LD		(wordaux2),HL					;en la variable wordaux2
     599.  00:82ED  21 E1 18            	LD		HL,TILMAP + POSPUERIZQU			;calcula posición en tilemap
     600.  00:82F0  22 86 82            	LD		(wordaux1),HL					;guarda valor pos tilemap en wordaux1
     601.  00:82F3  44                  	LD		B,H								;coloca posición tilemap BC
     602.  00:82F4  4D                  	LD		C,L
     603.  00:82F5  16 07               	LD		D,7								;nº de filas
     604.  00:82F7  1E 03               	LD		E,3								;nº de columnas
     605.  00:82F9  C3 53 82            	JP		pinta_array
     606.  00:82FC                      	;~ CALL	pinta_array
     607.  00:82FC                      fin_pinta_puerta_izq:
     608.  00:82FC                      	;~ RET
     609.  00:82FC                      
     610.  00:82FC                      
     611.  00:82FC                      
     612.  00:82FC                      
     613.  00:82FC                      
     614.  00:82FC                      ;;=====================================================
     615.  00:82FC                      ;;POSICIONA_EN_MAPA
     616.  00:82FC                      ;;=====================================================	
     617.  00:82FC                      ; función: 	en el mapa de marcadores de la derecha/abajo marca un cuadro en gris o con un muñeco
     618.  00:82FC                      ;			según el valor de prota.posición pinta entrá un muñeco y por donde vaya pasando el prota
     619.  00:82FC                      ;			quedará en gris
     620.  00:82FC                      ; entrada: 	A=0 gris 1 - tile 0, A=1 muñeco - tile 19, prota.pos_mapy,prota.pos_mapx)
     621.  00:82FC                      ; salida: 	-
     622.  00:82FC                      ; toca:		todos
     623.  00:82FC                      posiciona_en_mapa:
     624.  00:82FC  F5                  	PUSH	AF		;almacenamos el tipo a pintar para cuando terminemos de calcular la coordenada
     625.  00:82FD                      	
     626.  00:82FD                      	;#0238 es la posición en mapa de tiles de la esquina superior izquierda del mapa (569 en decimal)
     627.  00:82FD  21 38 1A            	LD		HL, TILMAP + POSMAPA;pos inicial
     628.  00:8300                      	
     629.  00:8300                      	;ahora se le calcula la fila a pintar ya que va de abajo a arriba y no como en el mapa + columna
     630.  00:8300                      .sumar_fila:
     631.  00:8300  3A 46 86            	LD		 A,(prota_pos_mapy)
     632.  00:8303  FE 01               	CP		 1
     633.  00:8305  28 2A               	JR		 Z, .fila_1
     634.  00:8307  3A 46 86            	LD		 A,(prota_pos_mapy)
     635.  00:830A  FE 02               	CP		 2
     636.  00:830C  28 2A               	JR		 Z, .fila_2
     637.  00:830E  3A 46 86            	LD		 A,(prota_pos_mapy)
     638.  00:8311  FE 03               	CP		 3
     639.  00:8313  28 2A               	JR		 Z, .fila_3
     640.  00:8315  3A 46 86            	LD		 A,(prota_pos_mapy)
     641.  00:8318  FE 04               	CP		 4
     642.  00:831A  28 2A               	JR		 Z, .fila_4
     643.  00:831C  3A 46 86            	LD		 A,(prota_pos_mapy)
     644.  00:831F  FE 05               	CP		 5
     645.  00:8321  28 2A               	JR		 Z, .fila_5
     646.  00:8323  3A 46 86            	LD		 A,(prota_pos_mapy)
     647.  00:8326  FE 06               	CP		 6
     648.  00:8328  28 2A               	JR		 Z, .sumar_columna
     649.  00:832A                      	;no consulto la 0 porque si no es ninguna de las anteriores es 0 y por tanto sería un jr fila_0
     650.  00:832A                      	
     651.  00:832A                      .fila_0:
     652.  00:832A  11 C0 00            	LD		DE, 192
     653.  00:832D  19                  	ADD		HL, DE			;nota: se que repito el ADD pero la otra opción es inicializar DE y ya tarda mucho la funicón (es por velicidad)
     654.  00:832E  C3 54 83            	JP		.sumar_columna
     655.  00:8331                      .fila_1:
     656.  00:8331  11 A0 00            	LD		DE, 160
     657.  00:8334  19                  	ADD		HL, DE
     658.  00:8335  C3 54 83            	JP		.sumar_columna
     659.  00:8338                      .fila_2:
     660.  00:8338  11 80 00            	LD		DE, 128
     661.  00:833B  19                  	ADD		HL, DE
     662.  00:833C  C3 54 83            	JP		.sumar_columna
     663.  00:833F                      .fila_3:
     664.  00:833F  11 60 00            	LD		DE, 96
     665.  00:8342  19                  	ADD		HL, DE
     666.  00:8343  C3 54 83            	JP		.sumar_columna
     667.  00:8346                      .fila_4:
     668.  00:8346  11 40 00            	LD		DE, 64
     669.  00:8349  19                  	ADD		HL, DE
     670.  00:834A  C3 54 83            	JP		.sumar_columna
     671.  00:834D                      .fila_5:
     672.  00:834D  11 20 00            	LD		DE, 32
     673.  00:8350  19                  	ADD		HL, DE
     674.  00:8351  C3 54 83            	JP		.sumar_columna
     675.  00:8354                      .fila_6:
     676.  00:8354                      	;pongo fila_6 por poner ya que si es la fila 6 equiv. a primera fila del mapa y por tanto no suma fila
     677.  00:8354                      	
     678.  00:8354                      	
     679.  00:8354                      .sumar_columna:
     680.  00:8354  3A 45 86            	LD 		 A, (prota_pos_mapx) ;POS X
     681.  00:8357  16 00               	LD		 D, 0
     682.  00:8359  5F                  	LD		 E, A
     683.  00:835A  19                  	ADD		HL, DE
     684.  00:835B                      	
     685.  00:835B                      	;resultado en BC para usar en la función pinta_tile_suelto
     686.  00:835B  44                  	LD		 B, H
     687.  00:835C  4D                  	LD		 C, L
     688.  00:835D                      	
     689.  00:835D                      	;terminado de fijar la coordenada recuperamos a para ver el tipo
     690.  00:835D  F1                  	POP		 AF
     691.  00:835E  B7                  	OR		 A
     692.  00:835F  CA 67 83            	JP		 Z, pinta_pos_mapa_vacio
     693.  00:8362  16 13               	LD		 D, TILEMAPPROT
     694.  00:8364  C3 69 83            	JP		fin_pinta_pos_mapa
     695.  00:8367                      pinta_pos_mapa_vacio:
     696.  00:8367  16 09               	LD		 D, TILEMAPVACI				;********************* se puede hacer mejor o está bien usar push y pop ¿?¿?¿?
     697.  00:8369                      
     698.  00:8369                      fin_pinta_pos_mapa:
     699.  00:8369  C3 88 81            	JP		pinta_tile_suelto
     700.  00:836C                      	;~ CALL	pinta_tile_suelto
     701.  00:836C                      fin_posiciona_en_mapa:
     702.  00:836C                      	;~ RET
     703.  00:836C                      
     704.  00:836C                      
     139   00:836C                      	
     140   00:836C                      	include "subr_sprites.asm"
       1.  00:836C                      
       2.  00:836C                      ;;=====================================================
       3.  00:836C                      ;;SUBRUTINAS ENCARGADAS DE MANEJAR LOS SPRITES
       4.  00:836C                      ;;=====================================================	
       5.  00:836C                      
       6.  00:836C                      
       7.  00:836C                      ;; PREGUNTAR SI A FERNANDO SI ES MEJOR USAR LISTAS O ALGO PARA AHORRAR CÓDIGO
       8.  00:836C                      
       9.  00:836C                      
      10.  00:836C                      ;;=====================================================
      11.  00:836C                      ;;CARGA_PATRONES_SPRITES_NIVEL1
      12.  00:836C                      ;;=====================================================	
      13.  00:836C                      ; función: 	copia los patrones de los sprites que e van a usar en el nivel 1 en vram
      14.  00:836C                      ; entrada: 	-
      15.  00:836C                      ; salida: 	-
      16.  00:836C                      ; toca: 	-
      17.  00:836C                      carga_patrones_sprites_nivel1:
      18.  00:836C  F5                  	PUSH	AF					;guardo copia de AF
      19.  00:836D  D9                  	EXX							;guardo copia de BC,DE y HL
      20.  00:836E                      	
      21.  00:836E                      	;sprite punto de mira		(este no será necesario cargarlo en ningún otro nivel del juego, sólo el primero)
      22.  00:836E  21 48 86            	LD		HL,sprite_punto_mira_1
      23.  00:8371  11 00 38            	LD		DE,#3800
      24.  00:8374  01 20 00            	LD		BC,32				;32 bytes (sprites de 2 x 2)
      25.  00:8377  CD 5C 00            	CALL	LDIRVM
      26.  00:837A  21 68 86            	LD		HL,sprite_punto_mira_2
      27.  00:837D  11 20 38            	LD		DE,#3820
      28.  00:8380  01 20 00            	LD		BC,32				;32 bytes (sprites de 2 x 2)
      29.  00:8383  CD 5C 00            	CALL	LDIRVM
      30.  00:8386                      	
      31.  00:8386                      	;sprite sprite_punto_mira_1_mejorado
      32.  00:8386  21 88 86            	LD		HL,sprite_punto_mira_1_mejorado
      33.  00:8389  11 40 38            	LD		DE,#3840
      34.  00:838C  01 20 00            	LD		BC,32				;32 bytes (sprites de 2 x 2)
      35.  00:838F  CD 5C 00            	CALL	LDIRVM
      36.  00:8392  21 A8 86            	LD		HL,sprite_punto_mira_2_mejorado
      37.  00:8395  11 60 38            	LD		DE,#3860
      38.  00:8398  01 20 00            	LD		BC,32				;32 bytes (sprites de 2 x 2)
      39.  00:839B  CD 5C 00            	CALL	LDIRVM
      40.  00:839E                      
      41.  00:839E                      	;sprite sprite_reliquia
      42.  00:839E  21 C8 86            	LD		HL,sprite_reliquia
      43.  00:83A1  11 80 38            	LD		DE,#3880
      44.  00:83A4  01 20 00            	LD		BC,32				;32 bytes (sprites de 2 x 2)
      45.  00:83A7  CD 5C 00            	CALL	LDIRVM
      46.  00:83AA                      
      47.  00:83AA                      	;sprite sprite_vida_extra
      48.  00:83AA  21 C8 86            	LD		HL,sprite_reliquia
      49.  00:83AD  11 A0 38            	LD		DE,#38A0
      50.  00:83B0  01 20 00            	LD		BC,32				;32 bytes (sprites de 2 x 2)
      51.  00:83B3  CD 5C 00            	CALL	LDIRVM
      52.  00:83B6                      
      53.  00:83B6                      	;sprite sprite_planta
      54.  00:83B6  21 08 87            	LD		HL,sprite_planta
      55.  00:83B9  11 C0 38            	LD		DE,#38C0
      56.  00:83BC  01 20 00            	LD		BC,32				;32 bytes (sprites de 2 x 2)
      57.  00:83BF  CD 5C 00            	CALL	LDIRVM
      58.  00:83C2                      	
      59.  00:83C2                      	;sprite sprite_ballesta_mejorada
      60.  00:83C2  21 28 87            	LD		HL,sprite_ballesta_mejorada
      61.  00:83C5  11 E0 38            	LD		DE,#38E0
      62.  00:83C8  01 20 00            	LD		BC,32				;32 bytes (sprites de 2 x 2)
      63.  00:83CB  CD 5C 00            	CALL	LDIRVM
      64.  00:83CE                      
      65.  00:83CE                      	;sprite sprite_ciempies
      66.  00:83CE  21 48 87            	LD		HL,sprite_ciempies1
      67.  00:83D1  11 00 39            	LD		DE,#3900
      68.  00:83D4  01 20 00            	LD		BC,32				;32 bytes (sprites de 2 x 2)
      69.  00:83D7  CD 5C 00            	CALL	LDIRVM
      70.  00:83DA  21 68 87            	LD		HL,sprite_ciempies2
      71.  00:83DD  11 20 39            	LD		DE,#3920
      72.  00:83E0  01 20 00            	LD		BC,32				;32 bytes (sprites de 2 x 2)
      73.  00:83E3  CD 5C 00            	CALL	LDIRVM		
      74.  00:83E6                      
      75.  00:83E6                      	;sprite sprite_arana
      76.  00:83E6  21 88 87            	LD		HL,sprite_arana1
      77.  00:83E9  11 40 39            	LD		DE,#3940
      78.  00:83EC  01 20 00            	LD		BC,32				;32 bytes (sprites de 2 x 2)
      79.  00:83EF  CD 5C 00            	CALL	LDIRVM
      80.  00:83F2  21 A8 87            	LD		HL,sprite_arana2
      81.  00:83F5  11 60 39            	LD		DE,#3960
      82.  00:83F8  01 20 00            	LD		BC,32				;32 bytes (sprites de 2 x 2)
      83.  00:83FB  CD 5C 00            	CALL	LDIRVM	
      84.  00:83FE                      
      85.  00:83FE                      	;sprite sprite_serpiente
      86.  00:83FE  21 C8 87            	LD		HL,sprite_serpiente1
      87.  00:8401  11 80 39            	LD		DE,#3980
      88.  00:8404  01 20 00            	LD		BC,32				;32 bytes (sprites de 2 x 2)
      89.  00:8407  CD 5C 00            	CALL	LDIRVM
      90.  00:840A  21 E8 87            	LD		HL,sprite_serpiente2
      91.  00:840D  11 A0 39            	LD		DE,#39A0
      92.  00:8410  01 20 00            	LD		BC,32				;32 bytes (sprites de 2 x 2)
      93.  00:8413  CD 5C 00            	CALL	LDIRVM	
      94.  00:8416                      
      95.  00:8416                      	;sprite sprite_murcielago
      96.  00:8416  21 08 88            	LD		HL,sprite_murcielago1
      97.  00:8419  11 C0 39            	LD		DE,#39C0
      98.  00:841C  01 20 00            	LD		BC,32				;32 bytes (sprites de 2 x 2)
      99.  00:841F  CD 5C 00            	CALL	LDIRVM
     100.  00:8422  21 28 88            	LD		HL,sprite_murcielago2
     101.  00:8425  11 E0 39            	LD		DE,#39E0
     102.  00:8428  01 20 00            	LD		BC,32				;32 bytes (sprites de 2 x 2)
     103.  00:842B  CD 5C 00            	CALL	LDIRVM
     104.  00:842E                      	
     105.  00:842E                      	;sprite sprite_explosion
     106.  00:842E  21 48 88            	LD		HL,sprite_explosion
     107.  00:8431  11 20 3A            	LD		DE,#3A20
     108.  00:8434  01 20 00            	LD		BC,32				;32 bytes (sprites de 2 x 2)
     109.  00:8437  CD 5C 00            	CALL	LDIRVM
     110.  00:843A                      	
     111.  00:843A  D9                  	EXX							;recupero copia de BC,DE y HL
     112.  00:843B  F1                  	POP		AF					;recupero copia de AF
     113.  00:843C                      fin_carga_patrones_sprites:
     114.  00:843C  C9                  	RET
     115.  00:843D                      
     116.  00:843D                      
     117.  00:843D                      ;;=====================================================
     118.  00:843D                      ;;ACTUALIZA_ARRAY_SPRITES_VRAM
     119.  00:843D                      ;;=====================================================	
     120.  00:843D                      ; función: 	copia el array con los valores de los sprites (pos, color, plano) en VRAM
     121.  00:843D                      ; entrada: 	-
     122.  00:843D                      ; salida: 	-
     123.  00:843D                      ; toca: 	todos los registros. Como me interesa la velocidad, si necesito copiar de algo lo hago fuera
     124.  00:843D                      render_sprites:
     125.  00:843D                      	;volcando el array con toda la info de los sprites a la zona de atributos de sprites
     126.  00:843D  21 F4 8B            	LD		HL,array_sprites
     127.  00:8440  11 00 1B            	LD		DE,SPRART
     128.  00:8443  01 80 00            	LD		BC,4 * 32				;32 sprites x 4 bytes controlando el sprite (Y, X, plano, color)
     129.  00:8446  C3 5C 00            	JP		LDIRVM
     130.  00:8449                      	;~ CALL	LDIRVM
     131.  00:8449                      fin_actualiza_array_sprites_vram:
     132.  00:8449                      	;~ RET
     133.  00:8449                      
     134.  00:8449                      
     135.  00:8449                      ;;=====================================================
     136.  00:8449                      ;;VUELCA_RESULTADO_PUNTOMIRA_ARRAY
     137.  00:8449                      ;;=====================================================	
     138.  00:8449                      ; función: 	coloca los valores del punto de mira en la variable array_sprites para ser volcados en VRAM
     139.  00:8449                      ; entrada: 	array_sprites_pm, prota.XXXXX
     140.  00:8449                      ; salida: 	-
     141.  00:8449                      ; toca: 	-
     142.  00:8449                      vuelca_resultado_puntomira_array:
     143.  00:8449  DD 21 F4 8B         	LD		IX, array_sprites_pm
     144.  00:844D                      	;posición y de los dos sprites que conforman el punto de mira
     145.  00:844D  3A 84 8B            	LD		 A, (prota.posy)
     146.  00:8450  DD 77 00            	LD		(IX  ), A
     147.  00:8453  DD 77 04            	LD		(IX+4), A
     148.  00:8456                      	;posición x de los dos sprites que conforman el punto de mira
     149.  00:8456  3A 83 8B            	LD		 A, (prota.posx)
     150.  00:8459  DD 77 01            	LD		(IX+1), A
     151.  00:845C  DD 77 05            	LD		(IX+5), A
     152.  00:845F                      	;plano
     153.  00:845F  DD 36 02 00         	LD		(IX+2), 0
     154.  00:8463  DD 36 06 04         	LD		(IX+6), 4	;al ser sprites de 16x16 hay que ir de 4 en 4
     155.  00:8467                      	;color
     156.  00:8467  3A 85 8B            	LD		 A, (prota.escena)
     157.  00:846A  B7                  	OR		 A
     158.  00:846B  C2 77 84            	JP		NZ,.codigo_color_2
     159.  00:846E                      .codigo_color_1:
     160.  00:846E  DD 36 03 0F         	LD		(IX+3), COLBLANCO
     161.  00:8472  DD 36 07 08         	LD		(IX+7), COLROJO
     162.  00:8476  C9                  	RET
     163.  00:8477                      .codigo_color_2:
     164.  00:8477  DD 36 03 08         	LD		(IX+3), COLROJO
     165.  00:847B  DD 36 07 0F         	LD		(IX+7), COLBLANCO
     166.  00:847F  C9                  	RET
     167.  00:8480                      fin_vuelca_resultado_puntomira_array:
     168.  00:8480                      
     169.  00:8480                      
     170.  00:8480                      ;;=====================================================
     171.  00:8480                      ;;CHECK_PLAYER
     172.  00:8480                      ;;=====================================================	
     173.  00:8480                      ; función: 	MIRA EL CONTROL Y APLICA LA LOGICA DE MOVIMIENTO DEL PROTAGONISTA
     174.  00:8480                      ; entrada: 	-
     175.  00:8480                      ; salida: 	-
     176.  00:8480                      ; toca: 	A
     177.  00:8480                      check_player:
     178.  00:8480  CD FB 84            	CALL	update_controllers_status
     179.  00:8483  B7                  	OR		 A
     180.  00:8484  C8                  	RET		 Z						;si no se ha pulsado nada no se necesita mirar nada
     181.  00:8485                      
     182.  00:8485  CB 1F               	RR		 A
     183.  00:8487  DC A0 84            	CALL	 C, mueve_arriba
     184.  00:848A  CB 1F               	RR		 A
     185.  00:848C  DC BC 84            	CALL	 C, mueve_abajo
     186.  00:848F  CB 1F               	RR		 A
     187.  00:8491  DC CB 84            	CALL	 C, mueve_izquierda
     188.  00:8494  CB 1F               	RR		 A
     189.  00:8496  DC AD 84            	CALL	 C, mueve_derecha
     190.  00:8499                      	
     191.  00:8499                      	;zona para mirar disparo Recibe A que tendrá 0000 0 0 X-letra M X-espacio 
     192.  00:8499  CD D8 84            	CALL	mira_disparo
     193.  00:849C                      	
     194.  00:849C  C3 49 84            	JP		vuelca_resultado_puntomira_array
     195.  00:849F                      f;in_check_player:
     196.  00:849F  C9                  	RET
     197.  00:84A0                      
     141   00:84A0                      	
     142   00:84A0                      	include "subr_teclado_joy.asm"
       1.  00:84A0                      ;;=====================================================
       2.  00:84A0                      ;;SUBRUTINAS QUE CAPTURN EL JOYSTICK Y TECLADO Y MUEVEN PUNTO DE MIRA
       3.  00:84A0                      ;;=====================================================
       4.  00:84A0                      
       5.  00:84A0                      ;;=====================================================
       6.  00:84A0                      ;;MUEVE_ARRIBA
       7.  00:84A0                      ;;=====================================================	
       8.  00:84A0                      ; función: 	decrementa y si se no sale de los límites el valor del punto de mira a la derecha
       9.  00:84A0                      ; entrada: 	-
      10.  00:84A0                      ; salida: 	-
      11.  00:84A0                      ; toca: 	-
      12.  00:84A0                      mueve_arriba:
      13.  00:84A0  F5                  	PUSH		AF
      14.  00:84A1                      	
      15.  00:84A1  3A 84 8B            	LD		 	 A, (prota.posy)
      16.  00:84A4  3D                  	DEC			 A
      17.  00:84A5  CA AB 84            	JP			 Z,.no_decrementa_y
      18.  00:84A8  32 84 8B            	LD			(prota.posy), A
      19.  00:84AB                      	
      20.  00:84AB                      .no_decrementa_y:
      21.  00:84AB  F1                  	POP			AF
      22.  00:84AC                      fin_mueve_arriba:
      23.  00:84AC  C9                  	RET
      24.  00:84AD                      
      25.  00:84AD                      
      26.  00:84AD                      ;;=====================================================
      27.  00:84AD                      ;;MUEVE_DERECHA
      28.  00:84AD                      ;;=====================================================	
      29.  00:84AD                      ; función: 	incrementa si se no sale de los límites el valor del punto de mira a la derecha
      30.  00:84AD                      ; entrada: 	-
      31.  00:84AD                      ; salida: 	-
      32.  00:84AD                      ; toca: 	-
      33.  00:84AD                      mueve_derecha:
      34.  00:84AD  F5                  	PUSH		AF
      35.  00:84AE                      	
      36.  00:84AE  3A 83 8B            	LD		 	 A, (prota.posx)
      37.  00:84B1  3C                  	INC			 A
      38.  00:84B2  FE EF               	CP			 A, LIMPANTDER - 16
      39.  00:84B4  CA BA 84            	JP			 Z, .no_incrementa_x
      40.  00:84B7  32 83 8B            	LD			(prota.posx), A
      41.  00:84BA                      	
      42.  00:84BA                      .no_incrementa_x:
      43.  00:84BA  F1                  	POP			AF
      44.  00:84BB                      fin_mueve_derecha:
      45.  00:84BB  C9                  	RET
      46.  00:84BC                      
      47.  00:84BC                      
      48.  00:84BC                      ;;=====================================================
      49.  00:84BC                      ;;MUEVE_ABAJO
      50.  00:84BC                      ;;=====================================================	
      51.  00:84BC                      ; función: 	incrementa y si se no sale de los límites el valor del punto de mira abajo
      52.  00:84BC                      ; entrada: 	-
      53.  00:84BC                      ; salida: 	-
      54.  00:84BC                      ; toca: 	-
      55.  00:84BC                      mueve_abajo:
      56.  00:84BC  F5                  	PUSH		AF
      57.  00:84BD                      	
      58.  00:84BD  3A 84 8B            	LD		 	 A, (prota.posy)
      59.  00:84C0  3C                  	INC			 A
      60.  00:84C1  FE 70               	CP			 A, LIMPANTABA - 16
      61.  00:84C3  CA C9 84            	JP			 Z,.no_incrementa_y
      62.  00:84C6  32 84 8B            	LD			(prota.posy), A
      63.  00:84C9                      	
      64.  00:84C9                      .no_incrementa_y:
      65.  00:84C9  F1                  	POP			AF
      66.  00:84CA                      fin_mueve_abajo:
      67.  00:84CA  C9                  	RET
      68.  00:84CB                      	
      69.  00:84CB                      	
      70.  00:84CB                      ;;=====================================================
      71.  00:84CB                      ;;MUEVE_IZQUIERDA
      72.  00:84CB                      ;;=====================================================	
      73.  00:84CB                      ; función: 	decrementa x si se no sale de los límites el valor del punto de mira a la izquierda
      74.  00:84CB                      ; entrada: 	-
      75.  00:84CB                      ; salida: 	-
      76.  00:84CB                      ; toca: 	-
      77.  00:84CB                      mueve_izquierda:
      78.  00:84CB  F5                  	PUSH		AF
      79.  00:84CC                      	
      80.  00:84CC  3A 83 8B            	LD		 	 A, (prota.posx)
      81.  00:84CF  3D                  	DEC			 A
      82.  00:84D0                      ;	CP			 A, LIMPANTIZQ
      83.  00:84D0  CA D6 84            	JP			 Z,.no_decrementa_x
      84.  00:84D3  32 83 8B            	LD			(prota.posx), A
      85.  00:84D6                      	
      86.  00:84D6                      .no_decrementa_x:
      87.  00:84D6  F1                  	POP			AF
      88.  00:84D7                      fin_mueve_izquierda:
      89.  00:84D7  C9                  	RET
      90.  00:84D8                      
      91.  00:84D8                      
      92.  00:84D8                      
      93.  00:84D8                      ;;=====================================================
      94.  00:84D8                      ;;MIRA_DISPARO
      95.  00:84D8                      ;;=====================================================	
      96.  00:84D8                      ; función: 	Mira si se ha pulsado alguno de los dos disparos
      97.  00:84D8                      ; entrada: 	A que tendrá 0000 0 0 X-letra M X-espacio 
      98.  00:84D8                      ; salida: 	-
      99.  00:84D8                      ; toca: 	A, B
     100.  00:84D8                      mira_disparo:
     101.  00:84D8                      .mira_boton_pulsado1:
     102.  00:84D8  CB 1F               	RR		 A						;preparo en el carry si se ha pulsado botón 1
     103.  00:84DA  D2 E6 84            	JP		 NC, .mira_boton_pulsado2					
     104.  00:84DD  47                  	LD		 B, A					;copia A para usarlo después
     105.  00:84DE                      	;se ha pulsado barra o boton 1
     106.  00:84DE  3A 85 8B            	LD		 A, (prota.escena)
     107.  00:84E1  2F                  	CPL		 
     108.  00:84E2  32 85 8B            	LD		(prota.escena), A
     109.  00:84E5                      
     110.  00:84E5  78                  	LD		 A, B
     111.  00:84E6                      .mira_boton_pulsado2:
     112.  00:84E6  CB 1F               	RR		 A
     113.  00:84E8  D0                  	RET		 NC
     114.  00:84E9                      	;se ha pulsado shift o boton 2
     115.  00:84E9                      	
     116.  00:84E9  3A 44 86            	LD		 A, (prota_reliquias)	;miro si le quedan reliquias
     117.  00:84EC  B7                  	OR		 A
     118.  00:84ED  C8                  	RET		 Z						;si no le quedan salgo ya
     119.  00:84EE                      	
     120.  00:84EE                      	;actuaciones si se usa la reliquia botón 2 o M y quedn reliquias.. (antes ya se puso el valor en A)
     121.  00:84EE  3A 44 86            	LD		A, (prota_reliquias)
     122.  00:84F1  3D                  	DEC		 A
     123.  00:84F2  32 44 86            	LD		(prota_reliquias), A
     124.  00:84F5                      	
     125.  00:84F5  CD 30 80            	CALL 	efecto_imagen_tira_reliquia
     126.  00:84F8                      	
     127.  00:84F8  C3 6C 81            	JP		pinta_reliquias
     128.  00:84FB                      fin_mira_disparo:
     129.  00:84FB                      ;	RET		
     130.  00:84FB                      
     131.  00:84FB                      
     132.  00:84FB                      ;;============================================================
     133.  00:84FB                      ;;Código de D. Fernando García (BitVision) (al que siempre le estaré agradecido)
     134.  00:84FB                      ;check_8th_keyboard_row
     135.  00:84FB                      ;read_joy_0
     136.  00:84FB                      ;check_8th_keyboard_row
     137.  00:84FB                      ;check_4th_keyboard_row
     138.  00:84FB                      ;;============================================================
     139.  00:84FB                      ;;  usa constantes:
     140.  00:84FB                      ;PSG_A  equ  0a0h  ;reg address
     141.  00:84FB                      ;PSG_W  equ  0a1h  ;reg data WR
     142.  00:84FB                      ;PSG_R  equ  0a2h  ;reg data
     143.  00:84FB                      
     144.  00:84FB                      ;;=====================================================
     145.  00:84FB                      ;;update_controllers_status
     146.  00:84FB                      ;;=====================================================	
     147.  00:84FB                      ;depends on the next rountine
     148.  00:84FB                      ;  returns
     149.  00:84FB                      ;  a - 0P2TRLDU
     150.  00:84FB                      
     151.  00:84FB                      update_controllers_status:
     152.  00:84FB  CD 46 85                 call  check_8th_keyboard_row
     153.  00:84FE                      [4]  rrc    a
     153.  00:84FE  CB 0F CB 0F CB 0F CB 0F 
     154.  00:8506  47                       ld    b,a    		;save for later  xxxTRDUL
     155.  00:8507                      
     156.  00:8507  E6 01                    and    #01    		;save L
     157.  00:8509  CB 27                    sla    a
     158.  00:850B  CB 27                    sla    a    		;now 00000L00
     159.  00:850D  4F                       ld    c,a    		;save for later
     160.  00:850E                      
     161.  00:850E  78                       ld    a,b    		;again we've got xxxTRDUL. I am interested on leaving 000000DU on a
     162.  00:850F  CB 3F                    srl    a
     163.  00:8511  E6 03                    and    00000011b
     164.  00:8513                      						;we've got 000000DU on a
     165.  00:8513  B1                       or    c    		;now we've got 00000LDU
     166.  00:8514  4F                       ld    c,a    		;save for later
     167.  00:8515                      
     168.  00:8515  78                       ld    a,b
     169.  00:8516  E6 18                    and    00011000b 	;we've got 000TR000
     170.  00:8518  B1                       or    c
     171.  00:8519                           ;finally    000TRLDU
     172.  00:8519                      
     173.  00:8519                           ;and    00000100   ;preserve just
     174.  00:8519  47                       ld    b,a    		;save for later
     175.  00:851A  CD 54 85                 call  check_4th_keyboard_row      ;check M & P
     176.  00:851D  F5                       push  af
     177.  00:851E  E6 04                    and    00000100b	;filter just M
     178.  00:8520  87                       add    a
     179.  00:8521  87                       add    a
     180.  00:8522  87                       add    a           ;shift 3th to 6th bit
     181.  00:8523  B0                       or    b           	;merge with previous
     182.  00:8524  47                       ld    b,a
     183.  00:8525                      
     184.  00:8525  CD 32 85                 call  read_joy_0
     185.  00:8528  E6 3F                    and    00111111b  	;we want just 002TRLDU  from joystick    (2 is second trigger)
     186.  00:852A  B0                       or    b      		;added 000TRLDU from keyboard
     187.  00:852B  47                       ld    b,a      	;save for later
     188.  00:852C  F1                       pop    af      	; let's check on P
     189.  00:852D                      
     190.  00:852D  E6 20                    and    00100000b
     191.  00:852F  87                       add    a      		;P status on 6th bit  ... so 0P2TRLDU
     192.  00:8530  B0                       or    b
     193.  00:8531                      
     194.  00:8531  C9                       ret
     195.  00:8532                      
     196.  00:8532                      
     197.  00:8532                      ;ret
     198.  00:8532                      ;  a -            xx2TRLDU
     199.  00:8532                      read_joy_0:
     200.  00:8532  F3                         di
     201.  00:8533  3E 0F                      ld    a,15
     202.  00:8535  D3 A0                      out    [PSG_A],a
     203.  00:8537  DB A2                      in    a,[PSG_R]
     204.  00:8539  E6 BF                      and    10111111b        ;joy0
     205.  00:853B                      
     206.  00:853B  D3 A1                      out    [PSG_W],a        ;set joy0
     207.  00:853D                      
     208.  00:853D  3E 0E                      ld    a,14
     209.  00:853F  D3 A0                      out    [PSG_A],a
     210.  00:8541  DB A2                      in    a,[PSG_R]
     211.  00:8543                      
     212.  00:8543  FB                         ei
     213.  00:8544  2F                         cpl
     214.  00:8545                      
     215.  00:8545  C9                         ret
     216.  00:8546                      
     217.  00:8546                      
     218.  00:8546                      ;ret
     219.  00:8546                      ;  a -      RDULxxxT
     220.  00:8546                      check_8th_keyboard_row:
     221.  00:8546  F3                       di
     222.  00:8547  DB AA                    in    a,(#aa)
     223.  00:8549  E6 F0                    and    #f0
     224.  00:854B  F6 08                    or    8
     225.  00:854D  D3 AA                    out    (#aa),a
     226.  00:854F  DB A9                    in    a,(#a9)
     227.  00:8551  FB                       ei
     228.  00:8552  2F                       cpl
     229.  00:8553                      
     230.  00:8553  C9                       ret
     231.  00:8554                      
     232.  00:8554                      
     233.  00:8554                      ;ret
     234.  00:8554                      ;  a -      xxxxxMxx
     235.  00:8554                      check_4th_keyboard_row:
     236.  00:8554  F3                       di
     237.  00:8555  DB AA                    in    a,(#aa)
     238.  00:8557  E6 F0                    and    #f0
     239.  00:8559  F6 04                    or    4
     240.  00:855B  D3 AA                    out    (#aa),a
     241.  00:855D  DB A9                    in    a,(#a9)
     242.  00:855F  FB                       ei
     243.  00:8560  2F                       cpl
     244.  00:8561                      
     245.  00:8561  C9                       ret
     246.  00:8562                      
     247.  00:8562                      ;--------------------------------------------
     248.  00:8562                      
     249.  00:8562                      
     250.  00:8562                      
     251.  00:8562                      
     252.  00:8562                      
     253.  00:8562                      
     254.  00:8562                      
     255.  00:8562                      
     143   00:8562                      	
     144   00:8562                      
     145   00:8562                      ;Este include lleva la rutina de descompresión de ROM/RAM a VRAM de pletter
     146   00:8562                      ;Está adaptada de la original a sjasm
     147   00:8562                      ;	HL = RAM/ROM source	; DE = VRAM destination
     148   00:8562                      depack_VRAM:
     149   00:8562                      	include "PL_VRAM_Depack_SJASM.asm"
       1.  00:8562                      ;-----------------------------------------------------------
       2.  00:8562                      ; Pletter v0.5b VRAM Depacker v1.1 - 16Kb version
       3.  00:8562                      ; HL = RAM/ROM source ; DE = VRAM destination
       4.  00:8562                      ;-----------------------------------------------------------
       5.  00:8562  F3                  	di
       6.  00:8563                      
       7.  00:8563                      ; VRAM address setup
       8.  00:8563  7B                  	ld	a,e
       9.  00:8564  D3 99               	out	[099h],a
      10.  00:8566  7A                  	ld	a,d
      11.  00:8567  F6 40               	or	040h
      12.  00:8569  D3 99               	out	[099h],a
      13.  00:856B                      
      14.  00:856B                      ; Initialization
      15.  00:856B  7E                  	ld	a,[hl]
      16.  00:856C  23                  	inc	hl
      17.  00:856D  D9                  	exx
      18.  00:856E  11 00 00            	ld	de,0
      19.  00:8571  87                  	add	a,a
      20.  00:8572  3C                  	inc	a
      21.  00:8573  CB 13               	rl	e
      22.  00:8575  87                  	add	a,a
      23.  00:8576  CB 13               	rl	e
      24.  00:8578  87                  	add	a,a
      25.  00:8579  CB 13               	rl	e
      26.  00:857B  CB 13               	rl	e
      27.  00:857D  21 34 86            	ld	hl,modes
      28.  00:8580  19                  	add	hl,de
      29.  00:8581  5E                  	ld	e,[hl]
      30.  00:8582  DD 6B               	ld	ixl,e
      31.  00:8584  23                  	inc	hl
      32.  00:8585  5E                  	ld	e,[hl]
      33.  00:8586  DD 63               	ld	ixh,e
      34.  00:8588  1E 01               	ld	e,1
      35.  00:858A  D9                  	exx
      36.  00:858B  FD 21 94 85         	ld	iy,loop
      37.  00:858F                      
      38.  00:858F                      ; Main depack loop
      39.  00:858F  0E 98               literal:ld	c,098h
      40.  00:8591  ED A3               	outi
      41.  00:8593  13                  	inc	de
      42.  00:8594  87                  loop:	add	a,a
      43.  00:8595  CC 28 86              	call	z,getbit
      44.  00:8598  30 F5               	jr	nc,literal
      45.  00:859A                      
      46.  00:859A                      ; Compressed data
      47.  00:859A  D9                  	exx
      48.  00:859B  62                  	ld	h,d
      49.  00:859C  6B                  	ld	l,e
      50.  00:859D  87                  getlen: add	a,a
      51.  00:859E  CC 2C 86            	call	z,getbitexx
      52.  00:85A1  30 1D               	jr	nc,lenok
      53.  00:85A3  87                  lus:	add	a,a
      54.  00:85A4  CC 2C 86            	call	z,getbitexx
      55.  00:85A7  ED 6A               	adc	hl,hl
      56.  00:85A9  D8                  	ret	c
      57.  00:85AA  87                  	add	a,a
      58.  00:85AB  CC 2C 86            	call	z,getbitexx
      59.  00:85AE  30 10               	jr	nc,lenok
      60.  00:85B0  87                  	add	a,a
      61.  00:85B1  CC 2C 86            	call	z,getbitexx
      62.  00:85B4  ED 6A               	adc	hl,hl
      63.  00:85B6  DA 32 86            	jp	c,Depack_out
      64.  00:85B9  87                  	add	a,a
      65.  00:85BA  CC 2C 86            	call	z,getbitexx
      66.  00:85BD  DA A3 85            	jp	c,lus
      67.  00:85C0  23                  lenok:  inc	hl
      68.  00:85C1  D9                  	exx
      69.  00:85C2  4E                  	ld	c,[hl]
      70.  00:85C3  23                  	inc	hl
      71.  00:85C4  06 00               	ld	b,0
      72.  00:85C6  CB 79               	bit	7,c
      73.  00:85C8  CA FB 85            	jp	z,offsok
      74.  00:85CB  DD E9               	jp	ix
      75.  00:85CD                      
      76.  00:85CD  87                  mode7:  add	a,a
      77.  00:85CE  CC 28 86              	call	z,getbit
      78.  00:85D1  CB 10               	rl	b
      79.  00:85D3  87                  mode6:	add	a,a
      80.  00:85D4  CC 28 86              	call	z,getbit
      81.  00:85D7  CB 10               	rl	b
      82.  00:85D9  87                  mode5:  add	a,a
      83.  00:85DA  CC 28 86              	call	z,getbit
      84.  00:85DD  CB 10               	rl	b
      85.  00:85DF  87                  mode4:  add	a,a
      86.  00:85E0  CC 28 86              	call	z,getbit
      87.  00:85E3  CB 10               	rl	b
      88.  00:85E5  87                  mode3:  add	a,a
      89.  00:85E6  CC 28 86              	call	z,getbit
      90.  00:85E9  CB 10               	rl	b
      91.  00:85EB  87                  mode2:	add	a,a
      92.  00:85EC  CC 28 86              	call	z,getbit
      93.  00:85EF  CB 10               	rl	b
      94.  00:85F1  87                  	add	a,a
      95.  00:85F2  CC 28 86              	call	z,getbit
      96.  00:85F5  30 04               	jr	nc,offsok
      97.  00:85F7  B7                  	or	a
      98.  00:85F8  04                  	inc	b
      99.  00:85F9  CB B9               	res	7,c
     100.  00:85FB  03                  offsok: inc	bc
     101.  00:85FC  E5                  	push	hl
     102.  00:85FD  D9                  	exx
     103.  00:85FE  E5                  	push	hl
     104.  00:85FF  D9                  	exx
     105.  00:8600  6B                  	ld	l,e
     106.  00:8601  62                  	ld	h,d
     107.  00:8602  ED 42               	sbc	hl,bc
     108.  00:8604  C1                  	pop	bc
     109.  00:8605  F5                  	push	af
     110.  00:8606  7D                  .loop:	ld	a,l
     111.  00:8607  D3 99               	out	[099h],a
     112.  00:8609  7C                  	ld	a,h
     113.  00:860A  00                  	nop                     ; VDP timing
     114.  00:860B  D3 99               	out	[099h],a
     115.  00:860D  00                  	nop                     ; VDP timing
     116.  00:860E  DB 98               	in	a,[098h]
     117.  00:8610  08                  	ex	af,af'
     118.  00:8611  7B                  	ld	a,e
     119.  00:8612  00                  	nop			; VDP timing
     120.  00:8613  D3 99               	out	[099h],a
     121.  00:8615  7A                  	ld	a,d
     122.  00:8616  F6 40               	or	040h
     123.  00:8618  D3 99               	out	[099h],a
     124.  00:861A  08                  	ex	af,af'
     125.  00:861B  00                  	nop			; VDP timing
     126.  00:861C  D3 98               	out	[098h],a
     127.  00:861E  13                  	inc	de
     128.  00:861F  ED A1               	cpi
     129.  00:8621  EA 06 86            	jp	pe,.loop
     130.  00:8624  F1                  	pop	af
     131.  00:8625  E1                  	pop	hl
     132.  00:8626  FD E9               	jp	iy
     133.  00:8628                      
     134.  00:8628  7E                  getbit: ld	a,[hl]
     135.  00:8629  23                  	inc	hl
     136.  00:862A  17                  	rla
     137.  00:862B  C9                  	ret
     138.  00:862C                      
     139.  00:862C                      getbitexx:
     140.  00:862C  D9                  	exx
     141.  00:862D  7E                  	ld	a,[hl]
     142.  00:862E  23                  	inc	hl
     143.  00:862F  D9                  	exx
     144.  00:8630  17                  	rla
     145.  00:8631  C9                  	ret
     146.  00:8632                      
     147.  00:8632                      ; Depacker exit
     148.  00:8632                      Depack_out:
     149.  00:8632  FB                  	ei
     150.  00:8633  C9                  	ret
     151.  00:8634                      
     152.  00:8634                      modes:
     153.  00:8634  FB 85               	dw	offsok
     154.  00:8636  EB 85               	dw	mode2
     155.  00:8638  E5 85               	dw	mode3
     156.  00:863A  DF 85               	dw	mode4
     157.  00:863C  D9 85               	dw	mode5
     158.  00:863E  D3 85               	dw	mode6
     159.  00:8640  CD 85               	dw	mode7
     150   00:8642                      
     151   00:8642                      
     152   00:8642                      	
     153   00:8642                      ;;=====================================================
     154   00:8642                      ;;DEFINICIÓN DE ESTRUCTURAS
     155   00:8642                      ;;=====================================================		
     156   00:8642                      	include "estructuras.asm"
       1.  00:8642                      ;;=====================================================
       2.  00:8642                      ;;DEFINICIÓN DE ESTRUCTURAS
       3.  00:8642                      ;;=====================================================
       4.  00:8642                      
       5.  00:8642                      ;crear estructura
       6.  00:8642                      ;variables globales del prota
       7.  00:8642                      prota_nivel:			;nivel del castillo donde está 0-6
       8.  00:8642  00                  			DB		0
       9.  00:8643                      prota_vidas:
      10.  00:8643  00                  			DB		0
      11.  00:8644                      prota_reliquias:
      12.  00:8644  03                  			DB		3
      13.  00:8645                      prota_pos_mapx:
      14.  00:8645  00                  			DB		0	;pos columna
      15.  00:8646                      prota_pos_mapy:
      16.  00:8646  00                  			DB		0	;pos fila
      17.  00:8647                      prota_energia:
      18.  00:8647  FA                  			DB		250
      19.  00:8648                      
      20.  00:8648                      	STRUCT ESTRUCTURA_PUNTOMIRA
      21.  00:8648                    < posx			DB		100
      22.  00:8648                    < posy			DB		100
      23.  00:8648                    < escena			DB		0	;valores porsibles 0 (blanco+rojo en punto de mira) y NEG 0 (al revés)
      24.  00:8648                    < velocidad		DB		0
      25.  00:8648                    < boton2_pressed  DB		0
      26.  00:8648                    < ; al final he decidido (ya que el punto de mira es el prota) que lo relacionado con el prota vaya en esta estructura
      27.  00:8648                    < pm_aux1			DB		0	;para llegar a los 16 campos
      28.  00:8648                    < pm_aux2			DB		0	;para llegar a los 16 campos
      29.  00:8648                    < pm_aux3			DB		0	;para llegar a los 16 campos
      30.  00:8648                    < pm_aux4			DB		0	;para llegar a los 16 campos
      31.  00:8648                    < pm_aux5			DB		0	;para llegar a los 16 campos
      32.  00:8648                    < pm_aux6			DB		0	;para llegar a los 16 campos
      33.  00:8648                    < pm_aux7			DB		0	;para llegar a los 16 campos
      34.  00:8648                    < pm_aux8			DB		0	;para llegar a los 16 campos
      35.  00:8648                    < pm_aux9			DB		0	;para llegar a los 16 campos
      36.  00:8648                    < pm_aux10		DB		0	;para llegar a los 16 campos
      37.  00:8648                    < pm_aux11		DB		0	;para llegar a los 16 campos
      38.  00:8648                    < 	ENDSTRUCT;ESTRUCTURA_PUNTOMIRA
      39.  00:8648                      
      40.  00:8648                      	
      41.  00:8648                      	STRUCT ESTRUCTURA_ENEMIGO
      42.  00:8648                    < tipo				DB		0	;(0 serpiente por ejemplo) #FF muerto o no existe
      43.  00:8648                    < posx				DB		5
      44.  00:8648                    < posy				DB		50
      45.  00:8648                    < color				DB		5
      46.  00:8648                    < escena				DB		0
      47.  00:8648                    < contador_siguiente_escena	DB	0
      48.  00:8648                    < reset_contador		DB		0
      49.  00:8648                    < dano				DB		0	;daño
      50.  00:8648                    < energia				DB		0	;energía del enemigo... si llega a 0 => existe <- 0
      51.  00:8648                    < ;indica el nº de sprite a mostrar y si está compuesto por uno o dos sprites y si están en horizontal o vertical
      52.  00:8648                    < ver_hor				DB		0
      53.  00:8648                    < manejador_dibujo 	DW		0
      54.  00:8648                    < en_aux3				DB		0
      55.  00:8648                    < en_aux4				DB		0
      56.  00:8648                    < 	ENDSTRUCT;ESTRUCTURA_ENEMIGO
      57.  00:8648                      	
      58.  00:8648                      	STRUCT ESTRUCTURA_EXTRA		;vidas extra, plantas de curación de energía, reliquias	
      59.  00:8648                    < tipo				DB		0	;#FF muerto/usado o no existe
      60.  00:8648                    < posx				DB		50
      61.  00:8648                    < posy				DB		50
      62.  00:8648                    < color				DB		5
      63.  00:8648                    < contador			DB		0	;por si doy dos reliquias en vez de una, por ejemplo
      64.  00:8648                    < en_aux1				DB		0	;para llegar a los 16 campos
      65.  00:8648                    < en_aux2				DB		0
      66.  00:8648                    < en_aux3				DB		0
      67.  00:8648                    < en_aux4				DB		0
      68.  00:8648                    < en_aux5				DB		0
      69.  00:8648                    < en_aux6				DB		0
      70.  00:8648                    < en_aux7				DB		0
      71.  00:8648                    < en_aux8				DB		0
      72.  00:8648                    < en_aux9				DB		0
      73.  00:8648                    < en_aux10			DB		0
      74.  00:8648                    < en_aux11			DB		0
      75.  00:8648                    < 	ENDSTRUCT;ESTRUCTURA_EXTRA
      76.  00:8648                      
      77.  00:8648                      
      78.  00:8648                      
      79.  00:8648                      
      80.  00:8648                      
      81.  00:8648                      
      82.  00:8648                      
     157   00:8648                      	
     158   00:8648                      ;;=====================================================
     159   00:8648                      ;;DEFINICIÓN DE VARIABLES
     160   00:8648                      ;;=====================================================		
     161   00:8648                      	include "sprites.asm"
       1.  00:8648                      ;;=====================================================
       2.  00:8648                      ;;DEFINICIÓN DE SPRITES
       3.  00:8648                      ;;=====================================================	
       4.  00:8648                      sprites_pantantalla:
       5.  00:8648                      
       6.  00:8648                      sprite_punto_mira_1:	;color 8
       7.  00:8648                      	db #FF,#FF,#C0,#C0,#C0,#C0,#C0,#C0
       7.  00:8648  FF FF C0 C0 C0 C0 C0 C0 
       8.  00:8650                      	db #C0,#C0,#C0,#C0,#C0,#C0,#FF,#FF
       8.  00:8650  C0 C0 C0 C0 C0 C0 FF FF 
       9.  00:8658                      	db #FF,#FF,#03,#03,#03,#03,#03,#03
       9.  00:8658  FF FF 03 03 03 03 03 03 
      10.  00:8660                      	db #03,#03,#03,#03,#03,#03,#FF,#FF
      10.  00:8660  03 03 03 03 03 03 FF FF 
      11.  00:8668                      	
      12.  00:8668                      sprite_punto_mira_2: 	;color 15
      13.  00:8668                      	db #00,#00,#00,#00,#0F,#0F,#0C,#0C
      13.  00:8668  00 00 00 00 0F 0F 0C 0C 
      14.  00:8670                      	db #0C,#0C,#0F,#0F,#00,#00,#00,#00
      14.  00:8670  0C 0C 0F 0F 00 00 00 00 
      15.  00:8678                      	db #00,#00,#00,#00,#F0,#F0,#30,#30
      15.  00:8678  00 00 00 00 F0 F0 30 30 
      16.  00:8680                      	db #30,#30,#F0,#F0,#00,#00,#00,#00
      16.  00:8680  30 30 F0 F0 00 00 00 00 
      17.  00:8688                      	
      18.  00:8688                      sprite_punto_mira_1_mejorado:
      19.  00:8688                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      19.  00:8688  FF FF FF FF FF FF FF FF 
      20.  00:8690                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      20.  00:8690  FF FF FF FF FF FF FF FF 
      21.  00:8698                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      21.  00:8698  FF FF FF FF FF FF FF FF 
      22.  00:86A0                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      22.  00:86A0  FF FF FF FF FF FF FF FF 
      23.  00:86A8                      
      24.  00:86A8                      sprite_punto_mira_2_mejorado:
      25.  00:86A8                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      25.  00:86A8  FF FF FF FF FF FF FF FF 
      26.  00:86B0                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      26.  00:86B0  FF FF FF FF FF FF FF FF 
      27.  00:86B8                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      27.  00:86B8  FF FF FF FF FF FF FF FF 
      28.  00:86C0                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      28.  00:86C0  FF FF FF FF FF FF FF FF 
      29.  00:86C8                      	
      30.  00:86C8                      sprite_reliquia:
      31.  00:86C8                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      31.  00:86C8  FF FF FF FF FF FF FF FF 
      32.  00:86D0                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      32.  00:86D0  FF FF FF FF FF FF FF FF 
      33.  00:86D8                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      33.  00:86D8  FF FF FF FF FF FF FF FF 
      34.  00:86E0                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      34.  00:86E0  FF FF FF FF FF FF FF FF 
      35.  00:86E8                      	
      36.  00:86E8                      sprite_vida_extra:
      37.  00:86E8                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      37.  00:86E8  FF FF FF FF FF FF FF FF 
      38.  00:86F0                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      38.  00:86F0  FF FF FF FF FF FF FF FF 
      39.  00:86F8                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      39.  00:86F8  FF FF FF FF FF FF FF FF 
      40.  00:8700                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      40.  00:8700  FF FF FF FF FF FF FF FF 
      41.  00:8708                      	
      42.  00:8708                      sprite_planta:
      43.  00:8708                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      43.  00:8708  FF FF FF FF FF FF FF FF 
      44.  00:8710                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      44.  00:8710  FF FF FF FF FF FF FF FF 
      45.  00:8718                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      45.  00:8718  FF FF FF FF FF FF FF FF 
      46.  00:8720                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      46.  00:8720  FF FF FF FF FF FF FF FF 
      47.  00:8728                      	
      48.  00:8728                      sprite_ballesta_mejorada:
      49.  00:8728                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      49.  00:8728  FF FF FF FF FF FF FF FF 
      50.  00:8730                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      50.  00:8730  FF FF FF FF FF FF FF FF 
      51.  00:8738                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      51.  00:8738  FF FF FF FF FF FF FF FF 
      52.  00:8740                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF	
      52.  00:8740  FF FF FF FF FF FF FF FF 
      53.  00:8748                      	
      54.  00:8748                      sprite_ciempies1:
      55.  00:8748                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      55.  00:8748  FF FF FF FF FF FF FF FF 
      56.  00:8750                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      56.  00:8750  FF FF FF FF FF FF FF FF 
      57.  00:8758                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      57.  00:8758  FF FF FF FF FF FF FF FF 
      58.  00:8760                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      58.  00:8760  FF FF FF FF FF FF FF FF 
      59.  00:8768                      	
      60.  00:8768                      sprite_ciempies2:
      61.  00:8768                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      61.  00:8768  FF FF FF FF FF FF FF FF 
      62.  00:8770                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      62.  00:8770  FF FF FF FF FF FF FF FF 
      63.  00:8778                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      63.  00:8778  FF FF FF FF FF FF FF FF 
      64.  00:8780                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      64.  00:8780  FF FF FF FF FF FF FF FF 
      65.  00:8788                      	
      66.  00:8788                      sprite_arana1:
      67.  00:8788                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      67.  00:8788  FF FF FF FF FF FF FF FF 
      68.  00:8790                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      68.  00:8790  FF FF FF FF FF FF FF FF 
      69.  00:8798                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      69.  00:8798  FF FF FF FF FF FF FF FF 
      70.  00:87A0                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      70.  00:87A0  FF FF FF FF FF FF FF FF 
      71.  00:87A8                      	
      72.  00:87A8                      sprite_arana2:
      73.  00:87A8                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      73.  00:87A8  FF FF FF FF FF FF FF FF 
      74.  00:87B0                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      74.  00:87B0  FF FF FF FF FF FF FF FF 
      75.  00:87B8                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      75.  00:87B8  FF FF FF FF FF FF FF FF 
      76.  00:87C0                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      76.  00:87C0  FF FF FF FF FF FF FF FF 
      77.  00:87C8                      	
      78.  00:87C8                      sprite_serpiente1:
      79.  00:87C8                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      79.  00:87C8  FF FF FF FF FF FF FF FF 
      80.  00:87D0                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      80.  00:87D0  FF FF FF FF FF FF FF FF 
      81.  00:87D8                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      81.  00:87D8  FF FF FF FF FF FF FF FF 
      82.  00:87E0                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      82.  00:87E0  FF FF FF FF FF FF FF FF 
      83.  00:87E8                      	
      84.  00:87E8                      sprite_serpiente2:
      85.  00:87E8                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      85.  00:87E8  FF FF FF FF FF FF FF FF 
      86.  00:87F0                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      86.  00:87F0  FF FF FF FF FF FF FF FF 
      87.  00:87F8                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      87.  00:87F8  FF FF FF FF FF FF FF FF 
      88.  00:8800                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      88.  00:8800  FF FF FF FF FF FF FF FF 
      89.  00:8808                      	
      90.  00:8808                      sprite_murcielago1:
      91.  00:8808                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      91.  00:8808  FF FF FF FF FF FF FF FF 
      92.  00:8810                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      92.  00:8810  FF FF FF FF FF FF FF FF 
      93.  00:8818                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      93.  00:8818  FF FF FF FF FF FF FF FF 
      94.  00:8820                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      94.  00:8820  FF FF FF FF FF FF FF FF 
      95.  00:8828                      	
      96.  00:8828                      sprite_murcielago2:
      97.  00:8828                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      97.  00:8828  FF FF FF FF FF FF FF FF 
      98.  00:8830                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      98.  00:8830  FF FF FF FF FF FF FF FF 
      99.  00:8838                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      99.  00:8838  FF FF FF FF FF FF FF FF 
     100.  00:8840                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF	
     100.  00:8840  FF FF FF FF FF FF FF FF 
     101.  00:8848                      
     102.  00:8848                      sprite_explosion:
     103.  00:8848                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     103.  00:8848  FF FF FF FF FF FF FF FF 
     104.  00:8850                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     104.  00:8850  FF FF FF FF FF FF FF FF 
     105.  00:8858                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     105.  00:8858  FF FF FF FF FF FF FF FF 
     106.  00:8860                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     106.  00:8860  FF FF FF FF FF FF FF FF 
     107.  00:8868                      	
     108.  00:8868                      	
     109.  00:8868                      	
     162   00:8868                      	
     163   00:8868                      	include "habitaciones.asm"
       1.  00:8868                      ;;=====================================================
       2.  00:8868                      ;;DEFINICIÓN DE HABITACIONES x NIVEL
       3.  00:8868                      ;;=====================================================	
       4.  00:8868                      
       5.  00:8868                      ; sólo voy a usar 7x7 pero como los arrays son lineales y voy a trabajar con matrices
       6.  00:8868                      ; me interesa que seande  8x8 aunque sólo trabaje con 7x7
       7.  00:8868                      
       8.  00:8868                      ; ojo... la primera linea corresponderá a la primera linea del castillo no a la última
       9.  00:8868                      
      10.  00:8868                      ;; definición de estructura de bits
      11.  00:8868                      ;16 bits por habitación
      12.  00:8868                      ;~ 0000 - nº puertas 1 arriba 1 derecha 1 abajo 1 izquierda
      13.  00:8868                      ;~ 1 - hay reliquia?
      14.  00:8868                      ;~ 1 - hay vida extra
      15.  00:8868                      ;~ 1 - hay arma extra (durará 6 pantallas - sonido distinto)
      16.  00:8868                      ;~ 1 - hay energía? (sobran bits ... se puede usar otro como carga energía +)
      17.  00:8868                      ;~ 1 - es pantalla de mostruo fin de fase?
      18.  00:8868                      ;~ 1 - es pantalla inicial (equivaldría a la puerta de un castillo)?
      19.  00:8868                      ;~ 1 - es pantalla final?
      20.  00:8868                      
      21.  00:8868                      
      22.  00:8868                      ;importante: el byte de la columna 15 indicará con 1 y 0 habitaciones por las que se haya pasado
      23.  00:8868                      ;cuando se inicie la partida todos se pondrán a 0
      24.  00:8868                      
      25.  00:8868                      habitacion_actual:
      26.  00:8868  00 00               	db  #00,#00		;habitación donde se encuentre el prota. Se mete en una varible par traer todos los datos de golpe y no buscrlos varias veces
      27.  00:886A                      
      28.  00:886A                      habitaciones_juego:
      29.  00:886A                      habitaciones_nivel0:
      30.  00:886A                      ;---------------------------------* habitación inicial
      31.  00:886A                      	db  00000000b,#00,00000001b,#01,00000010b,#02,00000011b,#03,00001000b,#04,00001001b,#05,00001100b,#06,#FF,#00 ;primera fila
      31.  00:886A  00 00 01 01 02 02 03 03 08 04 09 05 0C 06 FF 00 
      32.  00:887A                      	db  #17,#10,#11,#11,#12,#12,#13,#13,#14,#14,#15,#15,#16,#16,#FF,#00
      32.  00:887A  17 10 11 11 12 12 13 13 14 14 15 15 16 16 FF 00 
      33.  00:888A                      	db  #20,#20,#21,#21,#22,#22,#23,#23,#24,#24,#25,#25,#26,#26,#FF,#00
      33.  00:888A  20 20 21 21 22 22 23 23 24 24 25 25 26 26 FF 00 
      34.  00:889A                      	db  #30,#30,#31,#31,#32,#32,#33,#33,#34,#34,#35,#35,#36,#36,#FF,#00
      34.  00:889A  30 30 31 31 32 32 33 33 34 34 35 35 36 36 FF 00 
      35.  00:88AA                      	db  00000000b,#00,00000001b,#01,00001111b,#02,00000011b,#03,00001000b,#04,00001001b,#05,00001100b,#06,#FF,#00
      35.  00:88AA  00 00 01 01 0F 02 03 03 08 04 09 05 0C 06 FF 00 
      36.  00:88BA                      	db  #50,#50,#51,#51,#52,#52,#53,#53,#54,#54,#55,#55,#56,#56,#FF,#00
      36.  00:88BA  50 50 51 51 52 52 53 53 54 54 55 55 56 56 FF 00 
      37.  00:88CA                      	db  00000000b,#00,00000001b,#01,00000010b,#02,00000011b,#03,00001000b,#04,00001001b,#05,00001100b,#06,#FF,#00	;ultima fila
      37.  00:88CA  00 00 01 01 02 02 03 03 08 04 09 05 0C 06 FF 00 
      38.  00:88DA                      	
      39.  00:88DA                      habitaciones_nivel1:
      40.  00:88DA                      	db  #00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00 ;primera fila
      40.  00:88DA  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
      41.  00:88EA                      	db  #00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00
      41.  00:88EA  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
      42.  00:88FA                      	db  #00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00
      42.  00:88FA  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
      43.  00:890A                      	db  #00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00
      43.  00:890A  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
      44.  00:891A                      	db  #00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00
      44.  00:891A  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
      45.  00:892A                      	db  #00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00
      45.  00:892A  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
      46.  00:893A                      	db  #00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00	;ultima fila
      46.  00:893A  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
      47.  00:894A                      	
      48.  00:894A                      habitaciones_nivel2:
      49.  00:894A                      	db  #00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00 ;primera fila
      49.  00:894A  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
      50.  00:895A                      	db  #00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00
      50.  00:895A  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
      51.  00:896A                      	db  #00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00
      51.  00:896A  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
      52.  00:897A                      	db  #00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00
      52.  00:897A  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
      53.  00:898A                      	db  #00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00
      53.  00:898A  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
      54.  00:899A                      	db  #00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00
      54.  00:899A  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
      55.  00:89AA                      	db  #00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00	;ultima fila
      55.  00:89AA  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
      56.  00:89BA                      	
      57.  00:89BA                      habitaciones_nivel3:
      58.  00:89BA                      	db  #00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00 ;primera fila
      58.  00:89BA  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
      59.  00:89CA                      	db  #00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00
      59.  00:89CA  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
      60.  00:89DA                      	db  #00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00
      60.  00:89DA  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
      61.  00:89EA                      	db  #00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00
      61.  00:89EA  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
      62.  00:89FA                      	db  #00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00
      62.  00:89FA  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
      63.  00:8A0A                      	db  #00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00
      63.  00:8A0A  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
      64.  00:8A1A                      	db  #00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00	;ultima fila
      64.  00:8A1A  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
      65.  00:8A2A                      	
      66.  00:8A2A                      habitaciones_nivel4:
      67.  00:8A2A                      	db  #00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00 ;primera fila
      67.  00:8A2A  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
      68.  00:8A3A                      	db  #00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00
      68.  00:8A3A  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
      69.  00:8A4A                      	db  #00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00
      69.  00:8A4A  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
      70.  00:8A5A                      	db  #00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00
      70.  00:8A5A  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
      71.  00:8A6A                      	db  #00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00
      71.  00:8A6A  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
      72.  00:8A7A                      	db  #00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00
      72.  00:8A7A  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
      73.  00:8A8A                      	db  #00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00	;ultima fila
      73.  00:8A8A  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
      74.  00:8A9A                      	
      75.  00:8A9A                      habitaciones_nivel5:
      76.  00:8A9A                      	db  #00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00 ;primera fila
      76.  00:8A9A  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
      77.  00:8AAA                      	db  #00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00
      77.  00:8AAA  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
      78.  00:8ABA                      	db  #00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00
      78.  00:8ABA  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
      79.  00:8ACA                      	db  #00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00
      79.  00:8ACA  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
      80.  00:8ADA                      	db  #00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00
      80.  00:8ADA  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
      81.  00:8AEA                      	db  #00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00
      81.  00:8AEA  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
      82.  00:8AFA                      	db  #00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00	;ultima fila
      82.  00:8AFA  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
      83.  00:8B0A                      	
      84.  00:8B0A                      habitaciones_nivel6:
      85.  00:8B0A                      	db  #6F,#6F,#01,#01,#02,#02,#03,#03,#04,#04,#05,#05,#06,#06,#FF,#00 ;primera fila
      85.  00:8B0A  6F 6F 01 01 02 02 03 03 04 04 05 05 06 06 FF 00 
      86.  00:8B1A                      	db  #17,#10,#11,#11,#12,#12,#13,#13,#14,#14,#15,#15,#16,#16,#FF,#00
      86.  00:8B1A  17 10 11 11 12 12 13 13 14 14 15 15 16 16 FF 00 
      87.  00:8B2A                      	db  #20,#20,#21,#21,#22,#22,#23,#23,#24,#24,#25,#25,#26,#26,#FF,#00
      87.  00:8B2A  20 20 21 21 22 22 23 23 24 24 25 25 26 26 FF 00 
      88.  00:8B3A                      	db  #30,#30,#31,#31,#32,#32,#33,#33,#34,#34,#35,#35,#36,#36,#FF,#00
      88.  00:8B3A  30 30 31 31 32 32 33 33 34 34 35 35 36 36 FF 00 
      89.  00:8B4A                      	db  #40,#40,#41,#41,#42,#42,#43,#43,#44,#44,#45,#45,#46,#46,#FF,#00
      89.  00:8B4A  40 40 41 41 42 42 43 43 44 44 45 45 46 46 FF 00 
      90.  00:8B5A                      	db  #50,#50,#51,#51,#52,#52,#53,#53,#54,#54,#55,#55,#56,#56,#FF,#00
      90.  00:8B5A  50 50 51 51 52 52 53 53 54 54 55 55 56 56 FF 00 
      91.  00:8B6A                      	db  #60,#60,#61,#61,#62,#62,#63,#63,#64,#64,#65,#65,#66,#66,#FF,#00	;ultima fila
      91.  00:8B6A  60 60 61 61 62 62 63 63 64 64 65 65 66 66 FF 00 
      92.  00:8B7A                      
      93.  00:8B7A                      
     164   00:8B7A                      	
     165   00:8B7A                      	include "variables.asm"
       1.  00:8B7A                      ;;=====================================================
       2.  00:8B7A                      ;;DEFINICIÓN DE VARIABLES
       3.  00:8B7A                      ;;=====================================================
       4.  00:8B7A                      
       5.  00:8B7A                      ;Colores base de la pantalla
       6.  00:8B7A                      color_base:
       7.  00:8B7A  01 01 01            			DB		COLNEGRO,COLNEGRO,COLNEGRO	
       8.  00:8B7D                      ;colores de pantalla cuando se tira bomba
       9.  00:8B7D                      color_bomba1:
      10.  00:8B7D  08 08 08            			DB		COLROJO,COLROJO,COLROJO
      11.  00:8B80                      color_bomba2:
      12.  00:8B80  06 06 06            			DB		COLROJOOSC,COLROJOOSC,COLROJOOSC
      13.  00:8B83                      
      14.  00:8B83                      ;definicion de variable del prota usando la estructura del punto de mira
      15.  00:8B83                      prota:		ESTRUCTURA_PUNTOMIRA
      15.  00:8B83  64 64 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
      16.  00:8B93                      
      17.  00:8B93                      ;array para pintar de golpe el marcador de vidas
      18.  00:8B93                      array_aux_vidas: 		
      19.  00:8B93                      			DB		0,0,0,0,0,0,0,0
      19.  00:8B93  00 00 00 00 00 00 00 00 
      20.  00:8B9B                      
      21.  00:8B9B                      ;array para pintar de golpe el marcador de reliquias
      22.  00:8B9B                      array_aux_reliquias:	
      23.  00:8B9B                      			DB		0,0,0,0,0,0,0,0
      23.  00:8B9B  00 00 00 00 00 00 00 00 
      24.  00:8BA3                      
      25.  00:8BA3                      array_aux_energia:		;array para pintar de golpe el marcador de energía
      26.  00:8BA3                      			DB		16,0,0,0,0,0,0 ;el 16 primero es porque siempre estará pintado el cuadro primero rojo
      26.  00:8BA3  10 00 00 00 00 00 00 
      27.  00:8BAA                      ultimo_pos_array_aux_energia:
      28.  00:8BAA  00                  			DB		0			;el array completo es de 8 pero para posicionar sin niecesidad de cálculos  etiqueto este aparte
      29.  00:8BAB                      			
      30.  00:8BAB                      array_aux_mapa_limpiar:	;es por facilitar el reseteo del mapa (pinto 7 lineas en negro con bios) la otra opción es más larga en código y complicada aunque más rápida
      31.  00:8BAB                      			DB		0,0,0,0,0,0,0
      31.  00:8BAB  00 00 00 00 00 00 00 
      32.  00:8BB2                      			
      33.  00:8BB2                      ;; nota importante: cada vez que se cambie de nivel se actualizará el contenido
      34.  00:8BB2                      ;; arrays con mapa de tiles de las puertas
      35.  00:8BB2                      array_puerta_arriba:
      36.  00:8BB2  03 01 01 03         array_puerta_arriba1:		DB	3,1,1,3
      37.  00:8BB6  01 01 01 01         array_puerta_arriba2:		DB	1,1,1,1
      38.  00:8BBA  01 01 01 01         array_puerta_arriba3:		DB	1,1,1,1
      39.  00:8BBE  01 01 01 01         array_puerta_arriba4:		DB	1,1,1,1
      40.  00:8BC2  01 01 01 01         array_puerta_arriba5:		DB	1,1,1,1
      41.  00:8BC6                      
      42.  00:8BC6                      array_puerta_derecha:
      43.  00:8BC6  01 03 03            array_puerta_derecha1:		DB	1,3,3
      44.  00:8BC9  01 01 03            array_puerta_derecha2:		DB	1,1,3
      45.  00:8BCC  01 01 01            array_puerta_derecha3:		DB	1,1,1
      46.  00:8BCF  01 01 01            array_puerta_derecha4:		DB	1,1,1
      47.  00:8BD2  01 01 01            array_puerta_derecha5:		DB	1,1,1
      48.  00:8BD5  02 01 01            array_puerta_derecha6:		DB	2,1,1
      49.  00:8BD8  04 02 01            array_puerta_derecha7:		DB	4,2,1
      50.  00:8BDB                      	
      51.  00:8BDB  01 01 01 01         array_puerta_abajo:			DB	1,1,1,1
      52.  00:8BDF                      
      53.  00:8BDF                      array_puerta_izquierda:
      54.  00:8BDF  03 03 01            array_puerta_izquierda1:	DB	3,3,1
      55.  00:8BE2  03 01 01            array_puerta_izquierda2:	DB	3,1,1
      56.  00:8BE5  01 01 01            array_puerta_izquierda3:	DB	1,1,1
      57.  00:8BE8  01 01 01            array_puerta_izquierda4:	DB	1,1,1
      58.  00:8BEB  01 01 01            array_puerta_izquierda5:	DB	1,1,1
      59.  00:8BEE  01 01 02            array_puerta_izquierda6:	DB	1,1,2
      60.  00:8BF1  01 02 04            array_puerta_izquierda7:	DB	1,2,4
      61.  00:8BF4                      
      62.  00:8BF4                      
      63.  00:8BF4                      ;array de 4 bytes x 32 sprites posibles en pantalla que sobreescribirá la tabla de sprites actualizando VRAM
      64.  00:8BF4                      array_sprites:
      65.  00:8BF4  00 (8)              array_sprites_pm:				DS	2 * 4
      66.  00:8BFC  00 (120)            array_sprites_enem:				DS	30 * 4
      67.  00:8C74  00 (140)            lista_enemigos:					DS	10 * ESTRUCTURA_ENEMIGO
      68.  00:8D00                      ; puntero al array a pintar en VRAM
      69.  00:8D00  00 00               puntero_array_atrib_array_VRAM: DW	0	;ARRAYSPTRIES + 8
      70.  00:8D02                      
      71.  00:8D02                      
     166   00:8D02                      
     167   00:8D02                      
     168   00:8D02                      	
     169   00:8D02                      ;;=====================================================
     170   00:8D02                      ;;DEFINICIÓN DE PANTALLAS
     171   00:8D02                      ;;=====================================================		
     172   00:8D02                      	include "pantallas.asm"
       1.  00:8D02                      ;;=====================================================
       2.  00:8D02                      ;;DEFINICIÓN DE PANTALLAS
       3.  00:8D02                      ;;=====================================================		
       4.  00:8D02                      
       5.  00:8D02                      ; bancos 1 y 2 y de pantalla 1 (en realidad es una pantalla de pruebas)
       6.  00:8D02                      tiles_patrones_pantalla11:	
       7.  00:8D02  (0023)              tiles_patrones_pantalla12:	incbin "pan1_23.bank1.bin.chr.pletter"
       8.  00:8D25                      tiles_color_pantalla11:		
       9.  00:8D25  (0018)              tiles_color_pantalla12:		incbin "pan1_23.bank1.bin.clr.pletter"
      10.  00:8D3D  (001A)              tiles_mapa_pantalla11:		incbin "pan1_23.bank0.bin.map.pletter"
      11.  00:8D57  (002A)              tiles_mapa_pantalla12:		incbin "pan1_23.bank1.bin.map.pletter"
      12.  00:8D81                      
      13.  00:8D81                      
      14.  00:8D81                      
      15.  00:8D81                      
      16.  00:8D81                      
      17.  00:8D81                      
      18.  00:8D81                      ; 3º banco que es la parte de puntos, vidas, mapas, etc... es común
      19.  00:8D81  (0146)              tiles_patrones_pantalla3:	incbin "pan_33.bin.chr.pletter"
      20.  00:8EC7  (0035)              tiles_color_pantalla3:		incbin "pan_33.bin.clr.pletter"
      21.  00:8EFC  (006F)              tiles_mapa_pantalla3:		incbin "pan_33.bin.map.pletter"
      22.  00:8F6B                      
      23.  00:8F6B                      ;NOTA: FALTARÍAN PANTALLAS ESPECIALES (POR DEFINIR)
     173   00:8F6B                      	
     174   00:8F6B                      END:

    LABELS
-------------------------------------------------
00:000000D8 X GTTRIG
00:000000D5 X GTSTCK
00:0000F3DB   CLIKSW
00:0000013E X RDVDP
00:00000047   WRTVDP
00:0000005C   LDIRVM
00:00000059 X LDIRMV
00:0000005F   CHGMOD
00:00000041 X DISSCR
00:00000044 X ENASCR
00:00000062   CHGCLR
00:0000F3E9   FORCLR
00:0000F3EA   BAKCLR
00:0000F3EB   BDRCLR
00:000000C3   CLS
00:0000F3DF X RG0SAV
00:0000F3E0   RG1SAV
00:0000F3E1 X RG2SAV
00:0000F3E2 X RG3SAV
00:0000F3E3 X RG4SAV
00:0000F3E4 X RG5SAV
00:0000F3E5 X RG6SAV
00:0000F3E6 X RG7SAV
00:0000F3E7 X STATFL
00:00000099   REGEST
00:00000098   REGESCVDP
00:000000A0   PSG_A
00:000000A1   PSG_W
00:000000A2   PSG_R
00:00000000   CHRTBL
00:00001800   TILMAP
00:00001B00   SPRART
00:00002000   CLRTBL
00:00003800 X SPRTBL
00:00000001 X SI
00:00000000 X NO
00:00000000 X COLTRASP
00:00000001   COLNEGRO
00:00000002 X COLVERDE
00:00000003 X COLVERCLA
00:00000004 X COLAZULOSC
00:00000005 X COLAZULLA
00:00000006   COLROJOOSC
00:00000007 X COLCYAN
00:00000008   COLROJO
00:00000009 X COLROJOCLA
00:0000000A X COLAMAROSC
00:0000000B X COLAMARCLA
00:0000000C X COLVERDOSC
00:0000000D X COLMAGENTA
00:0000000E X COLGRIS
00:0000000F   COLBLANCO
00:000002F8   POSMAPLIN1
00:000002D8   POSMAPLIN2
00:000002B8   POSMAPLIN3
00:00000298   POSMAPLIN4
00:00000278   POSMAPLIN5
00:00000258   POSMAPLIN6
00:00000238   POSMAPLIN7
00:0000000D   POSCARAMAP
00:00000248   POSVIDAS
00:00000011   POSRELIMAP
00:000002C8   POSRELIQ
00:00000288   POSENERG
00:000002B4   POSNIVEL
00:00000238   POSMAPA
00:000001EE   POSPUERABAJ
00:0000008E   POSPUERARRI
00:000000FC   POSPUERDERE
00:000000E1   POSPUERIZQU
00:00000013   TILEMAPPROT
00:00000009   TILEMAPVACI
00:00000010   TILEMAPROJO
00:0000000F   TILEMAPAMAR
00:0000000E   TILEMAPVERD
00:00000008   NMAXVIDREL
00:00000007   NHABNIVEL
00:000000F8 X MAXENERGIA
00:000000D9   TILEENERG8
00:000000BA   TILEENERG7
00:0000009B   TILEENERG6
00:0000007C   TILEENERG5
00:0000005D   TILEENERG4
00:0000003E   TILEENERG3
00:0000001F   TILEENERG2
00:00000000   TILENEGRO
00:00000000 X LIMPANTIZQ
00:000000FF   LIMPANTDER
00:00000000 X LIMPANTARR
00:00000080   LIMPANTABA
00:00000006 X BASEMAPY
00:00000003 X BASEMAPX
00:00008000   START
00:00008023   loop_principal
00:00008030 X fin_programa_principal
00:00008030   efecto_imagen_tira_reliquia
00:00008033   efecto_imagen_tira_reliquia.parpadea_fondo
00:0000804A X fin_efecto_imagen_tira_reliquia
00:0000804A   inicializa_variables_pruebas
00:00008068 X fin_inicializa_variables_pruebas
00:00008069   inicializa_niveles
00:00008078   inicializa_niveles.bucle_borra_hab
00:0000807D X fin_iniciliza_niveles
00:0000807E   actualiza_marcador_vidas
00:00008083   loop_marcador_caras_negro
00:00008088 X fin_loop_marcador_caras_negro
00:00008091   loop_marcador_caras
00:00008096 X fin_loop_marcador_caras
00:00008096 X fin_actualiza_marcador_vidas
00:00008097   actualiza_buffer_reliquias
00:0000809D   loop_buffer_reliquias_negro
00:000080AA   loop_buffer_reliquias
00:000080AF X fin_actualiza_buffer_reliquias
00:000080B0   localiza_info_habitacion
00:000080B3 X localiza_info_habitacion.situo_columna
00:000080BC X localiza_info_habitacion.situo_fila
00:000080C5   localiza_info_habitacion.loop_suma_fila
00:000080CD   localiza_info_habitacion.situo_nivel
00:000080D1 X fin_localiza_info_habitacion
00:000080D2   color_pantalla
00:000080E3 X fin_color_pantalla
00:000080E3   sub_preparapantalla
00:000080E3 X elimina_clic
00:000080E7 X fin_elimina_clic
00:000080E7 X limpia_pantalla
00:000080EB X fin_limpia_pantalla
00:000080F1 X screen2
00:000080F6 X sprites_16_16
00:00008104 X fin_sub_preparapantalla
00:00008104   pinta_pantalla_completa
00:0000810A X fin_pinta_pantalla_completa
00:0000810B   pinta_parte_superior_pantalla
00:00008141 X fin_pinta_parte_superior_pantalla
00:00008142   pinta_parte_inferior_pantalla
00:0000815D X fin_pinta_parte_inferior_pantalla
00:0000815D   pinta_vidas
00:0000816C X fin_pinta_vidas
00:0000816C   pinta_reliquias
00:0000817B X fin_pinta_reliquias
00:0000817B   pinta_nivel
00:00008187 X fin_pinta_nivel
00:00008188   pinta_tile_suelto
00:00008195 X fin_pinta_tile_suelto
00:00008196   mira_pinta_energia
00:0000819C X pinta_ener
00:0000819C X pinta_ener_tile_8
00:000081A8   pinta_ener_tile_8_negro
00:000081A9   pinta_ener_tile_7
00:000081B3   pinta_ener_tile_7_negro
00:000081B4   pinta_ener_tile_6
00:000081BE   pinta_ener_tile_6_negro
00:000081BF   pinta_ener_tile_5
00:000081C9   pinta_ener_tile_5_negro
00:000081CA   pinta_ener_tile_4
00:000081D4   pinta_ener_tile_4_negro
00:000081D5   pinta_ener_tile_3
00:000081DF   pinta_ener_tile_3_negro
00:000081E0   pinta_ener_tile_2
00:000081EA   pinta_ener_tile_2_negro
00:000081EB   fin_mira_pinta_energia
00:000081ED   pinta_energia
00:000081FC X fin_pinta_energia
00:000081FC   borra_mapa
00:00008252 X fin_borra_mapa
00:00008253   pinta_array
00:00008261   pinta_array.pa_pinta_fila
00:00008262   pinta_array.pa_pinta_columnas
00:00008285 X fin_pinta_array
00:00008286   wordaux1
00:00008288   wordaux2
00:0000828A   pinta_puertas
00:000082A7 X fin_pinta_puertas
00:000082A8   pinta_puerta_aba
00:000082BD X fin_pinta_puerta_aba
00:000082BD   pinta_puerta_arr
00:000082D2 X fin_pinta_puerta_arr
00:000082D2   pinta_puerta_der
00:000082E7 X fin_pinta_puerta_der
00:000082E7   pinta_puerta_izq
00:000082FC X fin_pinta_puerta_izq
00:000082FC   posiciona_en_mapa
00:00008300 X posiciona_en_mapa.sumar_fila
00:0000832A X posiciona_en_mapa.fila_0
00:00008331   posiciona_en_mapa.fila_1
00:00008338   posiciona_en_mapa.fila_2
00:0000833F   posiciona_en_mapa.fila_3
00:00008346   posiciona_en_mapa.fila_4
00:0000834D   posiciona_en_mapa.fila_5
00:00008354 X posiciona_en_mapa.fila_6
00:00008354   posiciona_en_mapa.sumar_columna
00:00008367   pinta_pos_mapa_vacio
00:00008369   fin_pinta_pos_mapa
00:0000836C X fin_posiciona_en_mapa
00:0000836C   carga_patrones_sprites_nivel1
00:0000843C X fin_carga_patrones_sprites
00:0000843D   render_sprites
00:00008449 X fin_actualiza_array_sprites_vram
00:00008449   vuelca_resultado_puntomira_array
00:0000846E X vuelca_resultado_puntomira_array.codigo_color_1
00:00008477   vuelca_resultado_puntomira_array.codigo_color_2
00:00008480 X fin_vuelca_resultado_puntomira_array
00:00008480   check_player
00:0000849F X f
00:000084A0   mueve_arriba
00:000084AB   mueve_arriba.no_decrementa_y
00:000084AC X fin_mueve_arriba
00:000084AD   mueve_derecha
00:000084BA   mueve_derecha.no_incrementa_x
00:000084BB X fin_mueve_derecha
00:000084BC   mueve_abajo
00:000084C9   mueve_abajo.no_incrementa_y
00:000084CA X fin_mueve_abajo
00:000084CB   mueve_izquierda
00:000084D6   mueve_izquierda.no_decrementa_x
00:000084D7 X fin_mueve_izquierda
00:000084D8   mira_disparo
00:000084D8 X mira_disparo.mira_boton_pulsado1
00:000084E6   mira_disparo.mira_boton_pulsado2
00:000084FB X fin_mira_disparo
00:000084FB   update_controllers_status
00:00008532   read_joy_0
00:00008546   check_8th_keyboard_row
00:00008554   check_4th_keyboard_row
00:00008562   depack_VRAM
00:0000858F   literal
00:00008594   loop
00:0000859D X getlen
00:000085A3   lus
00:000085C0   lenok
00:000085CD   mode7
00:000085D3   mode6
00:000085D9   mode5
00:000085DF   mode4
00:000085E5   mode3
00:000085EB   mode2
00:000085FB   offsok
00:00008606   offsok.loop
00:00008628   getbit
00:0000862C   getbitexx
00:00008632   Depack_out
00:00008634   modes
00:00008642   prota_nivel
00:00008643   prota_vidas
00:00008644   prota_reliquias
00:00008645   prota_pos_mapx
00:00008646   prota_pos_mapy
00:00008647   prota_energia
00:00000000 X ESTRUCTURA_PUNTOMIRA.posx
00:00000001 X ESTRUCTURA_PUNTOMIRA.posy
00:00000002 X ESTRUCTURA_PUNTOMIRA.escena
00:00000003 X ESTRUCTURA_PUNTOMIRA.velocidad
00:00000004 X ESTRUCTURA_PUNTOMIRA.boton2_pressed
00:00000005 X ESTRUCTURA_PUNTOMIRA.pm_aux1
00:00000006 X ESTRUCTURA_PUNTOMIRA.pm_aux2
00:00000007 X ESTRUCTURA_PUNTOMIRA.pm_aux3
00:00000008 X ESTRUCTURA_PUNTOMIRA.pm_aux4
00:00000009 X ESTRUCTURA_PUNTOMIRA.pm_aux5
00:0000000A X ESTRUCTURA_PUNTOMIRA.pm_aux6
00:0000000B X ESTRUCTURA_PUNTOMIRA.pm_aux7
00:0000000C X ESTRUCTURA_PUNTOMIRA.pm_aux8
00:0000000D X ESTRUCTURA_PUNTOMIRA.pm_aux9
00:0000000E X ESTRUCTURA_PUNTOMIRA.pm_aux10
00:0000000F X ESTRUCTURA_PUNTOMIRA.pm_aux11
00:00000010 X ESTRUCTURA_PUNTOMIRA
00:00000000 X ESTRUCTURA_ENEMIGO.tipo
00:00000001 X ESTRUCTURA_ENEMIGO.posx
00:00000002 X ESTRUCTURA_ENEMIGO.posy
00:00000003 X ESTRUCTURA_ENEMIGO.color
00:00000004 X ESTRUCTURA_ENEMIGO.escena
00:00000005 X ESTRUCTURA_ENEMIGO.contador_siguiente_escena
00:00000006 X ESTRUCTURA_ENEMIGO.reset_contador
00:00000007 X ESTRUCTURA_ENEMIGO.dano
00:00000008 X ESTRUCTURA_ENEMIGO.energia
00:00000009 X ESTRUCTURA_ENEMIGO.ver_hor
00:0000000A X ESTRUCTURA_ENEMIGO.manejador_dibujo
00:0000000C X ESTRUCTURA_ENEMIGO.en_aux3
00:0000000D X ESTRUCTURA_ENEMIGO.en_aux4
00:0000000E   ESTRUCTURA_ENEMIGO
00:00000000 X ESTRUCTURA_EXTRA.tipo
00:00000001 X ESTRUCTURA_EXTRA.posx
00:00000002 X ESTRUCTURA_EXTRA.posy
00:00000003 X ESTRUCTURA_EXTRA.color
00:00000004 X ESTRUCTURA_EXTRA.contador
00:00000005 X ESTRUCTURA_EXTRA.en_aux1
00:00000006 X ESTRUCTURA_EXTRA.en_aux2
00:00000007 X ESTRUCTURA_EXTRA.en_aux3
00:00000008 X ESTRUCTURA_EXTRA.en_aux4
00:00000009 X ESTRUCTURA_EXTRA.en_aux5
00:0000000A X ESTRUCTURA_EXTRA.en_aux6
00:0000000B X ESTRUCTURA_EXTRA.en_aux7
00:0000000C X ESTRUCTURA_EXTRA.en_aux8
00:0000000D X ESTRUCTURA_EXTRA.en_aux9
00:0000000E X ESTRUCTURA_EXTRA.en_aux10
00:0000000F X ESTRUCTURA_EXTRA.en_aux11
00:00000010 X ESTRUCTURA_EXTRA
00:00008648 X sprites_pantantalla
00:00008648   sprite_punto_mira_1
00:00008668   sprite_punto_mira_2
00:00008688   sprite_punto_mira_1_mejorado
00:000086A8   sprite_punto_mira_2_mejorado
00:000086C8   sprite_reliquia
00:000086E8 X sprite_vida_extra
00:00008708   sprite_planta
00:00008728   sprite_ballesta_mejorada
00:00008748   sprite_ciempies1
00:00008768   sprite_ciempies2
00:00008788   sprite_arana1
00:000087A8   sprite_arana2
00:000087C8   sprite_serpiente1
00:000087E8   sprite_serpiente2
00:00008808   sprite_murcielago1
00:00008828   sprite_murcielago2
00:00008848   sprite_explosion
00:00008868   habitacion_actual
00:0000886A   habitaciones_juego
00:0000886A X habitaciones_nivel0
00:000088DA X habitaciones_nivel1
00:0000894A X habitaciones_nivel2
00:000089BA X habitaciones_nivel3
00:00008A2A X habitaciones_nivel4
00:00008A9A X habitaciones_nivel5
00:00008B0A X habitaciones_nivel6
00:00008B7A   color_base
00:00008B7D   color_bomba1
00:00008B80   color_bomba2
00:00008B83 X prota
00:00008B83   prota.posx
00:00008B84   prota.posy
00:00008B85   prota.escena
00:00008B86 X prota.velocidad
00:00008B87 X prota.boton2_pressed
00:00008B88 X prota.pm_aux1
00:00008B89 X prota.pm_aux2
00:00008B8A X prota.pm_aux3
00:00008B8B X prota.pm_aux4
00:00008B8C X prota.pm_aux5
00:00008B8D X prota.pm_aux6
00:00008B8E X prota.pm_aux7
00:00008B8F X prota.pm_aux8
00:00008B90 X prota.pm_aux9
00:00008B91 X prota.pm_aux10
00:00008B92 X prota.pm_aux11
00:00008B93   array_aux_vidas
00:00008B9B   array_aux_reliquias
00:00008BA3   array_aux_energia
00:00008BAA   ultimo_pos_array_aux_energia
00:00008BAB   array_aux_mapa_limpiar
00:00008BB2   array_puerta_arriba
00:00008BB2 X array_puerta_arriba1
00:00008BB6 X array_puerta_arriba2
00:00008BBA X array_puerta_arriba3
00:00008BBE X array_puerta_arriba4
00:00008BC2 X array_puerta_arriba5
00:00008BC6   array_puerta_derecha
00:00008BC6 X array_puerta_derecha1
00:00008BC9 X array_puerta_derecha2
00:00008BCC X array_puerta_derecha3
00:00008BCF X array_puerta_derecha4
00:00008BD2 X array_puerta_derecha5
00:00008BD5 X array_puerta_derecha6
00:00008BD8 X array_puerta_derecha7
00:00008BDB   array_puerta_abajo
00:00008BDF   array_puerta_izquierda
00:00008BDF X array_puerta_izquierda1
00:00008BE2 X array_puerta_izquierda2
00:00008BE5 X array_puerta_izquierda3
00:00008BE8 X array_puerta_izquierda4
00:00008BEB X array_puerta_izquierda5
00:00008BEE X array_puerta_izquierda6
00:00008BF1 X array_puerta_izquierda7
00:00008BF4   array_sprites
00:00008BF4   array_sprites_pm
00:00008BFC X array_sprites_enem
00:00008C74 X lista_enemigos
00:00008D00 X puntero_array_atrib_array_VRAM
00:00008D02   tiles_patrones_pantalla11
00:00008D02   tiles_patrones_pantalla12
00:00008D25   tiles_color_pantalla11
00:00008D25   tiles_color_pantalla12
00:00008D3D   tiles_mapa_pantalla11
00:00008D57   tiles_mapa_pantalla12
00:00008D81   tiles_patrones_pantalla3
00:00008EC7   tiles_color_pantalla3
00:00008EFC   tiles_mapa_pantalla3
00:00008F6B   END


 Output: t4.out
-------------------------------------------------

 Page: 00
  Org: 00008000  Size: *  Used: 00000000

    No output

 Output: t4.bin
-------------------------------------------------

 Page: 00
  Org: 00008000  Size: *  Used: 00000F72

   Address   Length Align   Label
   00008000    3954         START
