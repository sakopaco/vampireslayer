Sjasm Z80 Assembler v0.42c - www.xl2s.tk             [2021.10.19 - 21:06:58]

t4.asm
Errors: 0

       1   00:0000                      	OUTPUT	"t4.bin"
       2   00:8000                      	
       3   00:8000                      ;;=====================================================
       4   00:8000                      ;;DEFINICIÓN DE CONSTANTES
       5   00:8000                      ;;=====================================================	
       6   00:8000                      	include "constantes.asm"
       1.  00:8000                      ;;=====================================================
       2.  00:8000                      ;; FICHERO constantes.asm
       3.  00:8000                      ;;=====================================================
       4.  00:8000                      
       5.  00:8000                      ;;ETIQUETAS/CONSTANTES BIOS TECLADO
       6.  00:8000  (00:00D8)           GTTRIG		equ		#00D8	;Returns current trigger status
       7.  00:8000  (00:00D5)           GTSTCK		equ		#00D5	;Returns the joystick/cursors status
       8.  00:8000  (00:F3DB)           CLIKSW		equ		#F3DB	;deshabilita el sonido de clic cuando se pulsa una tecla
       9.  00:8000                      
      10.  00:8000                      ;;ETIQUETAS/CONSTANTES BIOS VDP
      11.  00:8000  (00:013E)           RDVDP		equ		#013E	;lee registro status VDP
      12.  00:8000  (00:0047)           WRTVDP		equ		#0047	;escribe registros del VDP
      13.  00:8000  (00:005C)           LDIRVM		equ		#005C	;RAM/ROM -> VRAM
      14.  00:8000  (00:0059)           LDIRMV		equ		#0059	;VRAM -> RAM
      15.  00:8000  (00:005F)           CHGMOD		equ		#005F	;cambia modo pantalla (screen mode)
      16.  00:8000  (00:0041)           DISSCR  	equ		#0041	;desactiva pantanlla
      17.  00:8000  (00:0044)           ENASCR  	equ		#0044	;activa pantalla
      18.  00:8000  (00:0062)           CHGCLR  	equ		#0062	;cambia color de pantalla (toca A y direcciones)
      19.  00:8000  (00:F3E9)           FORCLR		equ		#F3E9	;zona memoria color foreground
      20.  00:8000  (00:F3EA)           BAKCLR  	equ		#F3EA	;zona memoria color background
      21.  00:8000  (00:F3EB)           BDRCLR 		equ		#F3EB	;zona memoria bordercolor
      22.  00:8000  (00:00C3)           CLS			equ		#00C3	;limpia pantalla (necesita A=0)
      23.  00:8000                      
      24.  00:8000                      ;;ETIQUETAS/CONSTANTES REGISTROS VDP
      25.  00:8000  (00:F3DF)           RG0SAV		equ		#F3DF	;Mirror of VDP register 0 (Basic: VDP(0))
      26.  00:8000  (00:F3E0)           RG1SAV		equ		#F3E0	;Mirror of VDP register 1 (Basic: VDP(1))
      27.  00:8000  (00:F3E1)           RG2SAV		equ		#F3E1	;Mirror of VDP register 2 (Basic: VDP(2))
      28.  00:8000  (00:F3E2)           RG3SAV		equ		#F3E2	;Mirror of VDP register 3 (Basic: VDP(3))
      29.  00:8000  (00:F3E3)           RG4SAV		equ		#F3E3	;Mirror of VDP register 4 (Basic: VDP(4))
      30.  00:8000  (00:F3E4)           RG5SAV		equ		#F3E4	;Mirror of VDP register 5 (Basic: VDP(5))
      31.  00:8000  (00:F3E5)           RG6SAV		equ		#F3E5	;Mirror of VDP register 6 (Basic: VDP(6))
      32.  00:8000  (00:F3E6)           RG7SAV		equ		#F3E6	;Mirror of VDP register 7 (Basic: VDP(7))
      33.  00:8000  (00:F3E7)           STATFL		equ		#F3E7	;Mirror of VDP(8) status register (S#0)
      34.  00:8000                      
      35.  00:8000  (00:0099)           REGEST		equ		#0099	;registro de estado para escribir directamente en VRAM
      36.  00:8000  (00:0098)           REGESCVDP	equ		#0098	;registro donde escribir valor para VRAM
      37.  00:8000                      
      38.  00:8000                      ;;ETIQUETAS/CONSTANTES REGISTROS PSG (PARA JOYSTICK)
      39.  00:8000  (00:00A0)           PSG_A  equ  0a0h  ;reg address
      40.  00:8000  (00:00A1)           PSG_W  equ  0a1h  ;reg data WR
      41.  00:8000  (00:00A2)           PSG_R  equ  0a2h  ;reg data
      42.  00:8000                      
      43.  00:8000                      
      44.  00:8000                      ;;ETIQUETAS DE ZONAS DE MEMORIA DE LA VPD (MSX1)
      45.  00:8000  (00:0000)           CHRTBL		equ		#0000
      46.  00:8000  (00:1800)           TILMAP		equ		#1800
      47.  00:8000  (00:1900)           TILMAPBANK1 equ		#1900
      48.  00:8000  (00:1B00)           SPRART		equ		#1B00
      49.  00:8000  (00:2000)           CLRTBL		equ		#2000
      50.  00:8000  (00:3800)           SPRTBL		equ		#3800
      51.  00:8000                      
      52.  00:8000                      
      53.  00:8000                      ;;ETIQUETAS ESTANDAR PARA DAR MÁS CLARIDAD AL CODIGO
      54.  00:8000  (00:0001)           SI			equ		1
      55.  00:8000  (00:0000)           NO			equ		0
      56.  00:8000  (00:0004)           LIMCADENCIA equ		4	;nº de veces que se ejecutará el disparo antes de ejecutar un disparo real (porque cuando se pulsa la tecl dispara 3 ó 4 veces de rápido que va)
      57.  00:8000                      ;hay que estudiar si 3 es un nº mejor
      58.  00:8000                      
      59.  00:8000                      
      60.  00:8000                      
      61.  00:8000                      ;;PALETA DE COLORES DEL MSX
      62.  00:8000  (00:0000)           COLTRASP	equ		0
      63.  00:8000  (00:0001)           COLNEGRO	equ		1
      64.  00:8000  (00:0002)           COLVERDE	equ		2
      65.  00:8000  (00:0003)           COLVERCLA	equ		3
      66.  00:8000  (00:0004)           COLAZULOSC	equ		4
      67.  00:8000  (00:0005)           COLAZULLA	equ		5
      68.  00:8000  (00:0006)           COLROJOOSC	equ		6
      69.  00:8000  (00:0007)           COLCYAN		equ		7
      70.  00:8000  (00:0008)           COLROJO		equ		8
      71.  00:8000  (00:0009)           COLROJOCLA	equ		9
      72.  00:8000  (00:000A)           COLAMAROSC	equ		10
      73.  00:8000  (00:000B)           COLAMARCLA	equ		11
      74.  00:8000  (00:000C)           COLVERDOSC	equ		12
      75.  00:8000  (00:000D)           COLMAGENTA	equ		13
      76.  00:8000  (00:000E)           COLGRIS		equ		14
      77.  00:8000  (00:000F)           COLBLANCO	equ		15
      78.  00:8000                      
      79.  00:8000                      
      80.  00:8000                      
      81.  00:8000                      ;;ETIQUETAS ESPECIFICAS PARA DAR MÁS CLARIDAD AL CODIGO (relacionadas con posiciones en mapa vdp)
      82.  00:8000  (00:02F8)           POSMAPLIN1  equ		#02F8
      83.  00:8000  (00:02D8)           POSMAPLIN2  equ		#02D8
      84.  00:8000  (00:02B8)           POSMAPLIN3  equ		#02B8
      85.  00:8000  (00:0298)           POSMAPLIN4  equ		#0298
      86.  00:8000  (00:0278)           POSMAPLIN5  equ		#0278
      87.  00:8000  (00:0258)           POSMAPLIN6  equ		#0258
      88.  00:8000  (00:0238)           POSMAPLIN7  equ		#0238
      89.  00:8000                      
      90.  00:8000  (00:000D)           POSCARAMAP	equ		#000D
      91.  00:8000  (00:0248)           POSVIDAS	equ		#0248
      92.  00:8000  (00:0011)           POSRELIMAP	equ		#0011
      93.  00:8000  (00:02C8)           POSRELIQ	equ		#02C8
      94.  00:8000  (00:0288)           POSENERG	equ		#0288
      95.  00:8000  (00:02B4)           POSNIVEL	equ		#02B4
      96.  00:8000  (00:0238)           POSMAPA		equ 	#0238
      97.  00:8000                      
      98.  00:8000  (00:01EE)           POSPUERABAJ equ		#01EE
      99.  00:8000  (00:008E)           POSPUERARRI equ		#008E
     100.  00:8000  (00:00FC)           POSPUERDERE equ		#00FC
     101.  00:8000  (00:00E1)           POSPUERIZQU equ		#00E1
     102.  00:8000                      
     103.  00:8000                      ;;POSICIONES DE LAS AYUDAS EN PANTALLA BANCO 1
     104.  00:8000  (00:00A3)           POSORACION	equ		163
     105.  00:8000  (00:00A7)           POSCRUZ		equ		167
     106.  00:8000  (00:00AB)           POSAGUA		equ		171
     107.  00:8000  (00:00AF)           POSARMAD	equ		175
     108.  00:8000  (00:00B3)           POSPLANTA	equ		179
     109.  00:8000  (00:00B7)           POSVIDAEXT	equ		183
     110.  00:8000  (00:00BB)           POSBALLESTA	equ		187
     111.  00:8000                      
     112.  00:8000                      ;;POSICIONES DE LAS AYUDAS EN PANTALLA PIXEL CENTRAL X
     113.  00:8000  (00:0020)           POSORACIONX	equ		32
     114.  00:8000  (00:0040)           POSCRUZX	equ		64
     115.  00:8000  (00:0060)           POSAGUAX	equ		96
     116.  00:8000  (00:0080)           POSARMADX	equ		128
     117.  00:8000  (00:00A0)           POSPLANTAX	equ		160
     118.  00:8000  (00:00C0)           POSVIDAEXTX	equ		192
     119.  00:8000  (00:00E0)           POSBALLESTAX equ	224
     120.  00:8000                      
     121.  00:8000                      ;;POSICIONES DE LAS AYUDAS EN PANTALLA PIXEL CENTRAL Y
     122.  00:8000  (00:0070)           POSAYUDASY	equ		112	;se pone por poner porque las estructuras de ayudas ya se inicializan con este valor
     123.  00:8000                      
     124.  00:8000                      ;;ESTADO ESTRUCTURA
     125.  00:8000  (00:0000)           INACTIVA	equ		0
     126.  00:8000  (00:0001)           ACTIVA		equ		1
     127.  00:8000  (00:0001)           HABTERMIN	equ		1
     128.  00:8000                      
     129.  00:8000                      ;;POSICIONES DE LAS ANTORCHAS
     130.  00:8000  (00:0088)           POSANTOR1	equ		136
     131.  00:8000  (00:0097)           POSANTOR2	equ		151
     132.  00:8000  (00:00C4)           MAPLLAMA1	equ		196
     133.  00:8000  (00:00C5)           MAPLLAMA2	equ		197
     134.  00:8000  (00:00FF)           RESETLLAMA	equ		255
     135.  00:8000                      
     136.  00:8000                      ;;POSICIONES DE LOS ESQUELETOS
     137.  00:8000  (00:0088)           POSESQUEL1	equ		136
     138.  00:8000  (00:0095)           POSESQUEL2	equ		149
     139.  00:8000  (00:00A9)           POSCALAVE1	equ		169
     140.  00:8000  (00:00B6)           POSCALAVE2	equ		182
     141.  00:8000  (00:0019)           RESETESQUEL	equ		25
     142.  00:8000  (00:0004)           RESETESCENAESQUEL 	equ	4	;hay 4 caras con las que el esqueleto cambia (se ha metido el 0 para facilitar código)
     143.  00:8000                      
     144.  00:8000                      ;;ETIQUETAS ESPECIFICAS PARA DAR MÁS CLARIDAD AL CODIGO (relacionadas con posiciones en en el banco de memoria)
     145.  00:8000  (00:0013)           TILEPROTAM  equ		19		;tile del prota para pintar en mapa
     146.  00:8000  (00:0009)           TILEGRISM	equ		9		;tile gris que representa vacio (por donde el prota va pasando)
     147.  00:8000  (00:0010)           TILEMAPROJO equ		16
     148.  00:8000  (00:000F)           TILEMAPAMAR equ		15
     149.  00:8000  (00:000E)           TILEMAPVERD equ		14
     150.  00:8000                      
     151.  00:8000                      
     152.  00:8000                      ;;ETIQUETAS ESPECIFICAS PARA DAR MÁS CLARIDAD AL CODIGO (generales)
     153.  00:8000  (00:0008)           NMAXVIDREL	equ		8		;el número máximo de vidas y de reliquias es de 8
     154.  00:8000  (00:0007)           NHABNIVEL	equ		7
     155.  00:8000  (00:00F8)           MAXENERGIA  equ		248
     156.  00:8000  (00:00D9)           TILEENERG8  equ		217
     157.  00:8000  (00:00BA)           TILEENERG7  equ		186
     158.  00:8000  (00:009B)           TILEENERG6  equ		155
     159.  00:8000  (00:007C)           TILEENERG5  equ		124
     160.  00:8000  (00:005D)           TILEENERG4  equ		93
     161.  00:8000  (00:003E)           TILEENERG3  equ		62
     162.  00:8000  (00:001F)           TILEENERG2  equ		31
     163.  00:8000  (00:0000)           TILENEGRO	equ		0
     164.  00:8000                      
     165.  00:8000                      ;limites
     166.  00:8000  (00:0000)           LIMPANTIZQ  equ		0
     167.  00:8000  (00:00FF)           LIMPANTDER  equ		255
     168.  00:8000  (00:0000)           LIMPANTARR  equ		0
     169.  00:8000  (00:0080)           LIMPANTABA  equ		128
     170.  00:8000                      
     171.  00:8000                      
     172.  00:8000                      ;matriz de 7x7 empieza en 0, y fila y x col, cuento desde esquina sup izq
     173.  00:8000  (00:0006)           BASEMAPY	equ		6
     174.  00:8000  (00:0003)           BASEMAPX	equ		3
     175.  00:8000                      
     176.  00:8000                      
     177.  00:8000                      
     178.  00:8000                      ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
     179.  00:8000                      ;; CONSTANTES PARA INTERRUPCIONES
     180.  00:8000                      ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
     181.  00:8000  (00:FD9A)           H.KEYI		equ     	#FD9A
     182.  00:8000  (00:FD9F)           H.TIMI	 	equ     	#FD9F
     183.  00:8000                      
     184.  00:8000                      
     185.  00:8000                      ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
     186.  00:8000                      ;; CONSTANTES PARA SONIDO 
     187.  00:8000                      ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
     188.  00:8000                      
     189.  00:8000  (F000)              	map		#f000
     190.  00:8000                      
     191.  00:8000                      ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;PT3 REPLAYER
     192.  00:8000  (00:F000)           PT3_SETUP:		#1	;set bit0 to 1, if you want to play without looping
     193.  00:8000                      					;bit7 is set each time, when loop point is passed
     194.  00:8000  (00:F001)           PT3_MODADDR:	#2
     195.  00:8000  (00:F003)           PT3_CrPsPtr:	#2
     196.  00:8000  (00:F005)           PT3_SAMPTRS:	#2
     197.  00:8000  (00:F007)           PT3_OrnPtrs:	#2
     198.  00:8000  (00:F009)           PT3_PDSP:		#2
     199.  00:8000  (00:F00B)           PT3_CSP:		#2
     200.  00:8000  (00:F00D)           PT3_PSP:		#2
     201.  00:8000  (00:F00F)           PT3_PrNote:		#1
     202.  00:8000  (00:F010)           PT3_PrSlide:	#2
     203.  00:8000  (00:F012)           PT3_AdInPtA:	#2
     204.  00:8000  (00:F014)           PT3_AdInPtB:	#2
     205.  00:8000  (00:F016)           PT3_AdInPtC:	#2
     206.  00:8000  (00:F018)           PT3_LPosPtr:	#2
     207.  00:8000  (00:F01A)           PT3_PatsPtr:	#2
     208.  00:8000  (00:F01C)           PT3_Delay:		#1
     209.  00:8000  (00:F01D)           PT3_AddToEn:	#1
     210.  00:8000  (00:F01E)           PT3_Env_Del:	#1
     211.  00:8000  (00:F01F)           PT3_ESldAdd:	#2
     212.  00:8000  (00:F021)           PT3_NTL3:		#2	; AND A / NOP (note table creator)
     213.  00:8000                      
     214.  00:8000  (00:F023)           VARS:			#0
     215.  00:8000                      
     216.  00:8000  (00:F023)           ChanA:			#29			;CHNPRM_Size
     217.  00:8000  (00:F040)           ChanB:			#29			;CHNPRM_Size
     218.  00:8000  (00:F05D)           ChanC:			#29			;CHNPRM_Size
     219.  00:8000                      
     220.  00:8000                      ;GlobalVars
     221.  00:8000  (00:F07A)           DelyCnt:		#1
     222.  00:8000  (00:F07B)           CurESld:		#2
     223.  00:8000  (00:F07D)           CurEDel:		#1
     224.  00:8000  (00:F07E)           Ns_Base_AddToNs:	#0
     225.  00:8000  (00:F07E)           Ns_Base:		#1
     226.  00:8000  (00:F07F)           AddToNs:		#1
     227.  00:8000                      
     228.  00:8000  (00:F080)           NT_:			#192	; Puntero a/tabla de frecuencias
     229.  00:8000                      
     230.  00:8000  (00:F140)           AYREGS:			#0
     231.  00:8000  (00:F140)           VT_:			#14
     232.  00:8000  (00:F14E)           EnvBase:		#2
     233.  00:8000  (00:F150)           VAR0END:		#0
     234.  00:8000                      
     235.  00:8000  (00:F150)           T1_:			#0		
     236.  00:8000  (00:F150)           T_NEW_1:		#0
     237.  00:8000  (00:F150)           T_OLD_1:		#24
     238.  00:8000  (00:F168)           T_OLD_2:		#24
     239.  00:8000  (00:F180)           T_NEW_3:		#0
     240.  00:8000  (00:F180)           T_OLD_3:		#2
     241.  00:8000  (00:F182)           T_OLD_0:		#0
     242.  00:8000  (00:F182)           T_NEW_0:		#24
     243.  00:8000  (00:F19A)           T_NEW_2:		#166
     244.  00:8000                      ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;PT3 REPLAYER END
     245.  00:8000                      
     246.  00:8000                      ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ayFX REPLAYER 
     247.  00:8000  (00:F240)           ayFX_MODE:		#1			; ayFX mode
     248.  00:8000  (00:F241)           ayFX_BANK:		#2			; Current ayFX Bank
     249.  00:8000  (00:F243)           ayFX_PRIORITY:	#1			; Current ayFX stream priotity
     250.  00:8000  (00:F244)           ayFX_POINTER:	#2			; Pointer to the current ayFX stream
     251.  00:8000  (00:F246)           ayFX_TONE:		#2			; Current tone of the ayFX stream
     252.  00:8000  (00:F248)           ayFX_NOISE:		#1			; Current noise of the ayFX stream
     253.  00:8000  (00:F249)           ayFX_VOLUME:	#1			; Current volume of the ayFX stream
     254.  00:8000  (00:F24A)           ayFX_CHANNEL:	#1			; PSG channel to play the ayFX stream
     255.  00:8000                      
     256.  00:8000                      	;IF (AYFXRELATIVE == 1 ) 
     257.  00:8000                      ;ayFX_VT:	ds	2			; ayFX relative volume table pointer
     258.  00:8000                      	;ENDIF
     259.  00:8000                      ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ayFX REPLAYER END
     260.  00:8000                      
     261.  00:8000                      
     262.  00:8000                      
       7   00:8000                      
       8   00:8000                      ;;=====================================================
       9   00:8000                      ;;DEFINICIÓN DE CABECERA DE ARCHIVO BIN
      10   00:8000                      ;;=====================================================		
      11   00:8000                      	include "cabecerabin.asm"
       1.  00:8000                      ;;=====================================================
       2.  00:8000                      ;; FICHERO cabecera.asm
       3.  00:8000                      ;;=====================================================
       4.  00:8000                      
       5.  00:8000                      ;;CABECERA FICHERO BIN
       6.  00:8000  FE                  	DB	#FE
       7.  00:8001  00 80               	DW	START
       8.  00:8003  81 BC               	DW	END
       9.  00:8005  00 80               	DW	START
      10.  00:8007                      
      11.  00:8007                      ;;INICIO CÓDIGO PROGRAMA	
      12.  00:8007                      	ORG	#8000
      13.  00:8000                      	
      12   00:8000                      	
      13   00:8000                      START:	
      14   00:8000                      	;inicializa pantalla y entonrno
      15   00:8000  CD 8C 81            	CALL	sub_preparapantalla			;screen 2,2 sin click al pulsar tecla y color 16,1,1
      16   00:8003                      	
      17   00:8003                      	;inicializa variables para parametrizar funciones y que lo que se muestre sea variable (nº vidas, mapa, puertas, pantalla, etc...)
      18   00:8003  CD 4C 80            	CALL	inicializa_variables_pruebas
      19   00:8006                      	
      20   00:8006                      ;***************************************************
      21   00:8006                      	;inicializa los niveles por partida
      22   00:8006                      ;	CALL	inicializa_niveles			;no es necesario parametrizarlo según el nivel del usuario ya que se cargan todos
      23   00:8006                      ;************** quitarlo cuando pueda navegar por habitaciones y esté más avanzado el proyecto
      24   00:8006                      
      25   00:8006                      	;inicializa los valores de cada puerta excepto si están activas o no (eso ocurre cuando se matan todos los enemigos de la hab. y sólo a las puertas que se muestren)
      26   00:8006  CD BA 86            	CALL	inicializa_puertas
      27   00:8009                      	
      28   00:8009                      	;inicializa las estructuras de forma particular según ayuda pero sin poner valores de posición
      29   00:8009  CD AE 99            	CALL	inicializa_ayudas
      30   00:800C                      	
      31   00:800C                      	;inicializa las estructuras de las antorchas y esqueletos
      32   00:800C  CD B4 84            	CALL	inicializa_antorchas
      33   00:800F  CD D6 84            	CALL	inicializa_esqueletos
      34   00:8012                      	
      35   00:8012                      	;pinta la pantalla (la primera o algunas especiales se pintan completamente)
      36   00:8012  CD AD 81            	CALL	pinta_pantalla_completa 
      37   00:8015                      	
      38   00:8015                      	;carga sprites en memoria (SE HA RETRASADO HASTA PARAMETRIZAR LA CARGA DE PANTALLAS)
      39   00:8015  CD 95 87            	CALL 	carga_patrones_sprites_nivel
      40   00:8018                      	
      41   00:8018                      	;funciones que modificarian el marcador si se produce un evento cuando toque y cuando se pinta la pantalla ya se mira
      42   00:8018                      	;una variable para ver si el array hay que actualizarlo en pantalla o no
      43   00:8018  CD ED 82            	CALL	pinta_vidas
      44   00:801B  CD FC 82            	CALL 	pinta_reliquias
      45   00:801E  CD 0B 83            	CALL	pinta_nivel
      46   00:8021  CD 8B 83            	CALL	borra_mapa
      47   00:8024  CD EF 86            	CALL	pinta_puertas
      48   00:8027                      
      49   00:8027  3E 13               	LD		 A, TILEPROTAM
      50   00:8029  32 7C A8            	LD		(elemento_pintar_mapa), A
      51   00:802C  CD E2 83            	CALL	posiciona_en_mapa		;se le pasa elemento_pintar_mapa (tile del prota) está el prota y prota.posx y posy
      52   00:802F                      		
      53   00:802F  CD 4C 9A            	CALL	pinta_ayudas_habitacion
      54   00:8032                      	
      55   00:8032  CD F8 84            	CALL	pinta_extra_fondo
      56   00:8035                      	
      57   00:8035  CD 56 81            	CALL	terminada_habitacion_recorrida ;para cuando se maten todos los enemigos de la habitación
      58   00:8038                      
      59   00:8038                      	;incializacion de replayer con interrupciones
      60   00:8038                      ;	CALL	inicializa_replayer_efectos_interrupciones
      61   00:8038                      
      62   00:8038                      loop_principal:
      63   00:8038  76                  	HALT							;espera VBLANK y sincroniza
      64   00:8039                      	
      65   00:8039  CD A6 87            	CALL	render_sprites			;actualiza array de sprites y los pinta en pantalla
      66   00:803C                      	
      67   00:803C  CD 7C 83            	CALL	pinta_energia			;pinta la energia en pantalla
      68   00:803F                      	
      69   00:803F  CD 6F 85            	CALL	actualiza_elementos_fondo
      70   00:8042                      
      71   00:8042  CD E9 87            	CALL	check_player			;MIRA EL CONTROL Y APLICA LA LOGICA DE MOVIMIENTO DEL PROTAGONISTA
      72   00:8045                      	
      73   00:8045  CD 4B 80            	CALL	check_colisiones		;revisa las colisiones con puertas, ayudas y enemigos
      74   00:8048                      	
      75   00:8048  C3 38 80            	JP		loop_principal
      76   00:804B                      fin_programa_principal:
      77   00:804B                      	;no necesita RET
      78   00:804B                      
      79   00:804B                      
      80   00:804B                      check_colisiones:
      81   00:804B                      	;pantalla limpia?
      82   00:804B                      	
      83   00:804B                      	;SI 
      84   00:804B                      	;recorre puertas y sale
      85   00:804B                      	;NO 
      86   00:804B                      	;recorre ayudas
      87   00:804B                      	;recorre enemigos
      88   00:804B                      fin_check_colisiones:
      89   00:804B  C9                  	RET
      90   00:804C                      
      91   00:804C                      
      92   00:804C                      
      93   00:804C                      
      94   00:804C                      
      95   00:804C                      ;;*******************************************************************
      96   00:804C                      ; sólo para hacer pruebas y pintar la parte de las vidas y demás
      97   00:804C                      inicializa_variables_pruebas:
      98   00:804C  3E 04               	LD		 A, 4
      99   00:804E  32 58 A8            	LD		(prota_vidas),A
     100   00:8051                      
     101   00:8051  3E 04               	LD		 A, 4
     102   00:8053  32 59 A8            	LD		(prota_reliquias), A
     103   00:8056                      
     104   00:8056  3E 64               	LD		 A, 100
     105   00:8058  32 5C A8            	LD		(prota_energia), A
     106   00:805B                      
     107   00:805B                      	;ubico al prota dentro del nivel para obtener luego las habitaciones y enemigos que aparecerán
     108   00:805B                      	;será igual la posición inicial en todos los niveles
     109   00:805B                      	
     110   00:805B  3E 00               	LD		 A, 0				;los niveles (matrices) son 7 del 0 al 6
     111   00:805D  32 57 A8            	LD		(prota_nivel), A	;nivel empieza en 0 para usar las posiciones ascii
     112   00:8060                      
     113   00:8060  3E 00               	LD		 A, 0				;los subniveles (filas) son 7 del 0 al 6
     114   00:8062  32 5B A8            	LD		(prota_pos_mapy), A	;pos Y dentro del nivel (se empieza en 0)
     115   00:8065                      
     116   00:8065  3E 02               	LD		 A, 2				;columnas 7: del 0 al 6
     117   00:8067  32 5A A8            	LD		(prota_pos_mapx), A	;pos X dentro del nivel (se empieza en 0)
     118   00:806A                      	
     119   00:806A  AF                  	XOR		 A
     120   00:806B  32 4C A8            	LD		(prota.cadencia), A
     121   00:806E                      fin_inicializa_variables_pruebas:
     122   00:806E  C9                  	RET
     123   00:806F                      ;;************************************************************************
     124   00:806F                      
     125   00:806F                      
     126   00:806F                      
     127   00:806F                      
     128   00:806F                      
     129   00:806F                      
     130   00:806F                      
     131   00:806F                      
     132   00:806F                      
     133   00:806F                      ;;=====================================================
     134   00:806F                      ;;DEFINICIÓN DE SUBRUTINAS
     135   00:806F                      ;;=====================================================
     136   00:806F                      	include "subrutinas.asm"
       1.  00:806F                      ;;=====================================================
       2.  00:806F                      ;;DEFINICIÓN DE SUBRUTINAS
       3.  00:806F                      ;;=====================================================	
       4.  00:806F                      
       5.  00:806F                      
       6.  00:806F                      ;;=====================================================
       7.  00:806F                      ;;INICIALIZA_NIVELES
       8.  00:806F                      ;;=====================================================	
       9.  00:806F                      ; función: 	pone el bit 4 de todas las habitaciones (byte habitacion_actual 0,2,4....) a 0
      10.  00:806F                      ; entrada: 	habitaciones_plantilla
      11.  00:806F                      ; salida: 	habitaciones_plantilla con los el bit 4 de los bites bytes impares a 0
      12.  00:806F                      ; toca: 	habitaciones_plantilla, B
      13.  00:806F                      inicializa_niveles:
      14.  00:806F  F5                  		PUSH		AF
      15.  00:8070  C5                  		PUSH		BC
      16.  00:8071  E5                  		PUSH		HL
      17.  00:8072                      		
      18.  00:8072  06 38               		LD			 B, 56		;la mitad de bytes del array de un nivel
      19.  00:8074  21 2E A5            		LD 			HL, habitaciones_nivel0
      20.  00:8077                      .inicia_nivel_0
      21.  00:8077  7E                  		LD		 	 A, (HL)
      22.  00:8078  CB E7               		SET			 4, A 		;el 4 bit a 0 indica que por esa habitacion no se ha pasado/no se han atado todos los enemigos
      23.  00:807A  77                  		LD			(HL), A
      24.  00:807B  23 23               [2]		INC			HL
      25.  00:807D  10 F8               		DJNZ		.inicia_nivel_0
      26.  00:807F                      
      27.  00:807F  06 38               		LD			 B, 56		;la mitad de bytes del array de un nivel
      28.  00:8081  21 9E A5            		LD 			HL, habitaciones_nivel1
      29.  00:8084                      .inicia_nivel_1
      30.  00:8084  7E                  		LD		 	 A, (HL)
      31.  00:8085  CB E7               		SET			 4, A 		;el 4 bit a 0 indica que por esa habitacion no se ha pasado/no se han atado todos los enemigos
      32.  00:8087  77                  		LD			(HL), A
      33.  00:8088  23 23               [2]		INC			HL
      34.  00:808A  10 F8               		DJNZ		.inicia_nivel_1
      35.  00:808C                      
      36.  00:808C  06 38               		LD			 B, 56		;la mitad de bytes del array de un nivel
      37.  00:808E  21 0E A6            		LD 			HL, habitaciones_nivel2
      38.  00:8091                      .inicia_nivel_2
      39.  00:8091  7E                  		LD		 	 A, (HL)
      40.  00:8092  CB E7               		SET			 4, A 		;el 4 bit a 0 indica que por esa habitacion no se ha pasado/no se han atado todos los enemigos
      41.  00:8094  77                  		LD			(HL), A
      42.  00:8095  23 23               [2]		INC			HL
      43.  00:8097  10 F8               		DJNZ		.inicia_nivel_2
      44.  00:8099                      
      45.  00:8099  06 38               		LD			 B, 56		;la mitad de bytes del array de un nivel
      46.  00:809B  21 7E A6            		LD 			HL, habitaciones_nivel3
      47.  00:809E                      .inicia_nivel_3
      48.  00:809E  7E                  		LD		 	 A, (HL)
      49.  00:809F  CB E7               		SET			 4, A 		;el 4 bit a 0 indica que por esa habitacion no se ha pasado/no se han atado todos los enemigos
      50.  00:80A1  77                  		LD			(HL), A
      51.  00:80A2  23 23               [2]		INC			HL
      52.  00:80A4  10 F8               		DJNZ		.inicia_nivel_3
      53.  00:80A6                      
      54.  00:80A6  06 38               		LD			 B, 56		;la mitad de bytes del array de un nivel
      55.  00:80A8  21 EE A6            		LD 			HL, habitaciones_nivel4
      56.  00:80AB                      .inicia_nivel_4
      57.  00:80AB  7E                  		LD		 	 A, (HL)
      58.  00:80AC  CB E7               		SET			 4, A 		;el 4 bit a 0 indica que por esa habitacion no se ha pasado/no se han atado todos los enemigos
      59.  00:80AE  77                  		LD			(HL), A
      60.  00:80AF  23 23               [2]		INC			HL
      61.  00:80B1  10 F8               		DJNZ		.inicia_nivel_4
      62.  00:80B3                      
      63.  00:80B3  06 38               		LD			 B, 56		;la mitad de bytes del array de un nivel
      64.  00:80B5  21 5E A7            		LD 			HL, habitaciones_nivel5
      65.  00:80B8                      .inicia_nivel_5
      66.  00:80B8  7E                  		LD		 	 A, (HL)
      67.  00:80B9  CB E7               		SET			 4, A 		;el 4 bit a 0 indica que por esa habitacion no se ha pasado/no se han atado todos los enemigos
      68.  00:80BB  77                  		LD			(HL), A
      69.  00:80BC  23 23               [2]		INC			HL
      70.  00:80BE  10 F8               		DJNZ		.inicia_nivel_5
      71.  00:80C0                      
      72.  00:80C0  06 38               		LD			 B, 56		;la mitad de bytes del array de un nivel
      73.  00:80C2  21 CE A7            		LD 			HL, habitaciones_nivel6
      74.  00:80C5                      .inicia_nivel_6
      75.  00:80C5  7E                  		LD		 	 A, (HL)
      76.  00:80C6  CB E7               		SET			 4, A 		;el 4 bit a 0 indica que por esa habitacion no se ha pasado/no se han atado todos los enemigos
      77.  00:80C8  77                  		LD			(HL), A
      78.  00:80C9  23 23               [2]		INC			HL
      79.  00:80CB  10 F8               		DJNZ		.inicia_nivel_6
      80.  00:80CD                      
      81.  00:80CD  E1                  		POP			HL
      82.  00:80CE  C1                  		POP			BC
      83.  00:80CF  F1                  		POP			AF
      84.  00:80D0                      fin_iniciliza_niveles:
      85.  00:80D0  C9                  		RET
      86.  00:80D1                      
      87.  00:80D1                      
      88.  00:80D1                      ;;=====================================================
      89.  00:80D1                      ;;ACTUALIZA_MARCADOR_VIDAS
      90.  00:80D1                      ;;=====================================================	
      91.  00:80D1                      ; función:  actualiza el buffer de vidas
      92.  00:80D1                      ; entrada: 	prota_vidas
      93.  00:80D1                      ; salida: 	array_aux_vidas
      94.  00:80D1                      ; toca:		A,B,HL
      95.  00:80D1                      actualiza_marcador_vidas:
      96.  00:80D1                      	;para no andar restando pongo todos los huecos a negro y luego en otro bucle las caras
      97.  00:80D1                      	;1-pinto todo en blanco
      98.  00:80D1  21 5D A8            	LD		HL,array_aux_vidas
      99.  00:80D4  06 08               	LD		 B,NMAXVIDREL
     100.  00:80D6                      loop_marcador_caras_negro:	;asignar espacios en negro
     101.  00:80D6  36 00               	LD		(HL),0			;0 posición mapa tiles para nada (es transparente pero el fondo es negro)
     102.  00:80D8  23                  	INC		HL
     103.  00:80D9  10 FB               	DJNZ	loop_marcador_caras_negro
     104.  00:80DB                      fin_loop_marcador_caras_negro:
     105.  00:80DB                      	;2-pinto las caras según el n de vidas
     106.  00:80DB  3A 58 A8            	LD		 A, (prota_vidas)
     107.  00:80DE  B7                  	OR		 A
     108.  00:80DF  C8                  	RET 	 Z
     109.  00:80E0  47                  	LD		 B, A
     110.  00:80E1  21 5D A8            	LD		HL, array_aux_vidas
     111.  00:80E4                      loop_marcador_caras: ;asignar caras
     112.  00:80E4  36 0D               	LD		(HL), POSCARAMAP	;13 posición mapa tiles para cara
     113.  00:80E6  23                  	INC		HL
     114.  00:80E7  10 FB               	DJNZ	loop_marcador_caras
     115.  00:80E9                      fin_loop_marcador_caras:
     116.  00:80E9                      fin_actualiza_marcador_vidas:
     117.  00:80E9  C9                  	RET
     118.  00:80EA                      
     119.  00:80EA                      
     120.  00:80EA                      ;;=====================================================
     121.  00:80EA                      ;;ACTUALIZA_BUFFER_RELIQUIAS
     122.  00:80EA                      ;;=====================================================	
     123.  00:80EA                      ; función: 	actualiza buffer de reliquias
     124.  00:80EA                      ; entrada: 	prota_reliquias
     125.  00:80EA                      ; salida: 	array_aux_reliquias
     126.  00:80EA                      ; toca:		A,B,HL
     127.  00:80EA                      actualiza_buffer_reliquias:	
     128.  00:80EA                      	;para no andar restando pongo todos los huecos a negro y luego en otro bucle las reliquias
     129.  00:80EA                      	;1-pinto todo en blanco
     130.  00:80EA  21 65 A8            	LD		HL, array_aux_reliquias
     131.  00:80ED  06 08               	LD		 B, NMAXVIDREL
     132.  00:80EF  AF                  	XOR		 A
     133.  00:80F0                      loop_buffer_reliquias_negro:	;asignar espacios en negro
     134.  00:80F0  77                  	LD		(HL), A			;0 posición mapa tiles para nada (es transparente pero el fondo es negro)
     135.  00:80F1  23                  	INC		HL
     136.  00:80F2  10 FC               	DJNZ	loop_buffer_reliquias_negro
     137.  00:80F4                      
     138.  00:80F4                      	;2-pinto las cruces según el n de reliquias
     139.  00:80F4  21 65 A8            	LD		HL, array_aux_reliquias
     140.  00:80F7  3A 59 A8            	LD		 A, (prota_reliquias)
     141.  00:80FA  B7                  	OR		 A
     142.  00:80FB  C8                  	RET		 Z
     143.  00:80FC  47                  	LD		 B, A
     144.  00:80FD                      loop_buffer_reliquias: ;asignar reliquias
     145.  00:80FD  36 11               	LD		(HL), POSRELIMAP	;17 posición mapa tiles para reliquia
     146.  00:80FF  23                  	INC		HL
     147.  00:8100  10 FB               	DJNZ	loop_buffer_reliquias
     148.  00:8102                      fin_actualiza_buffer_reliquias:
     149.  00:8102  C9                  	RET
     150.  00:8103                      
     151.  00:8103                      
     152.  00:8103                      
     153.  00:8103                      ;;=====================================================
     154.  00:8103                      ;;LOCALIZA_INFO_HABITACION
     155.  00:8103                      ;;=====================================================	
     156.  00:8103                      ; función: 	busca las puertas que hay que pintar egún la posición del usuario y las pone en habitacion_actual
     157.  00:8103                      ; entrada: 	prota.pos_mapy, prota.pos_mapx, prota_nivel habitaciones_juego
     158.  00:8103                      ; salida: 	habitacion_actual
     159.  00:8103                      ; toca:		todo
     160.  00:8103                      ;ejemplo: nivel 4, posy 5 y posx 3
     161.  00:8103                      ;3 + 5 x 8 + 4 x 49
     162.  00:8103                      localiza_info_habitacion:
     163.  00:8103                      	;~ PUSH	AF
     164.  00:8103                      	;~ PUSH	BC
     165.  00:8103                      	;~ PUSH	DE
     166.  00:8103                      	;~ PUSH	HL
     167.  00:8103                      
     168.  00:8103                      ;primera posición: me coloco en la columna correcta
     169.  00:8103  21 2E A5            	LD		HL, habitaciones_juego
     170.  00:8106                      .situo_columna:	
     171.  00:8106  3A 5A A8            	LD		 A, (prota_pos_mapx)
     172.  00:8109  CB 27               	SLA		 A				;multiplico por dos ya que cada habitación va de dos en dos bytes
     173.  00:810B  06 00               	LD		 B, 0
     174.  00:810D  4F                  	LD		 C, A
     175.  00:810E  09                  	ADD 	HL, BC			;sumo a la posición 0 la columnax2 en la que situarme
     176.  00:810F                      	
     177.  00:810F                      .situo_fila:
     178.  00:810F  3A 5B A8            	LD		A, (prota_pos_mapy)
     179.  00:8112  B7                  	OR	 	A
     180.  00:8113  CA 20 81            	JP		Z, .situo_nivel	;si la fila es 0 no es necesario seguir operando en fila
     181.  00:8116                      	
     182.  00:8116  47                  	LD		B, A
     183.  00:8117  AF                  	XOR		A
     184.  00:8118                      .loop_suma_fila:
     185.  00:8118  C6 10               	ADD		16				;cada fila tiene 16 bytes
     186.  00:811A  10 FC               	DJNZ	.loop_suma_fila
     187.  00:811C                      	
     188.  00:811C  06 00               	LD		 B, 0
     189.  00:811E  4F                  	LD		 C, A
     190.  00:811F                      
     191.  00:811F  09                  	ADD 	HL, BC			;sumo a la columna 16 x filas para situarme en la fila correcta
     192.  00:8120                      
     193.  00:8120                      .situo_nivel:
     194.  00:8120  3A 57 A8            	LD		 A, (prota_nivel)
     195.  00:8123  B7                  	OR	 	 A
     196.  00:8124  CA 34 81            	JP		 Z, .actualiza_variable_habitacion	;si el nivel es 0 al pasar por las anterirores ya estoy situado actualizo la variable y termino
     197.  00:8127                      	
     198.  00:8127  E5                  	PUSH	HL				;guardo el resultado intermedio
     199.  00:8128                      	
     200.  00:8128  47                  	LD		 B, A			;preparo la varible del bucle
     201.  00:8129  11 70 00            	LD		DE, 112			;112 = 16x42 son los bytes de cada matriz-nivel
     202.  00:812C  21 00 00            	LD		HL, 0
     203.  00:812F                      .loop_suma_nivel:
     204.  00:812F  19                  	ADD		HL, DE
     205.  00:8130  10 FD               	DJNZ	.loop_suma_nivel
     206.  00:8132                      	
     207.  00:8132  D1                  	POP		DE				;devuelvo el resultado intermedio en DE que ya no lo necesito
     208.  00:8133                      	
     209.  00:8133  19                  	ADD		HL, DE			;sumo el resultado del nivel al resultado intermedio anterior
     210.  00:8134                      	
     211.  00:8134                      .actualiza_variable_habitacion
     212.  00:8134  7E                  	LD		 A, (HL)
     213.  00:8135  32 29 A5            	LD		(habitacion_actual), A
     214.  00:8138                      	
     215.  00:8138                      	;actualizo la variable habitacion_actual y su puntero para poder modificar por si se vuelve a pasar por ahí
     216.  00:8138  DD 21 2B A5         	LD		IX, habitacion_actual_puntero
     217.  00:813C  DD 74 00            	LD		(IX), H
     218.  00:813F  DD 75 01            	LD		(IX + 1), L
     219.  00:8142                      	
     220.  00:8142                      	;actualizo la variable is_habitacion_terminada
     221.  00:8142  3A 29 A5            	LD		 A, (habitacion_actual)
     222.  00:8145  32 2D A5            	LD		(is_habitacion_terminada), A
     223.  00:8148  3A 2B A5            	LD		 A, (habitacion_actual_puntero)
     224.  00:814B  F6 10               	OR		00010000b
     225.  00:814D  32 2D A5            	LD		(is_habitacion_terminada), A
     226.  00:8150                      	
     227.  00:8150                      	;actualizo la variable habitacion_extras
     228.  00:8150  23                  	INC		HL				;el byte de los extras está antes de donde se especifican las puertas
     229.  00:8151  7E                  	LD		 A, (HL)
     230.  00:8152  32 2A A5            	LD		(habitacion_extras), A
     231.  00:8155                      
     232.  00:8155                      	;~ POP		HL	
     233.  00:8155                      	;~ POP		DE
     234.  00:8155                      	;~ POP		BC
     235.  00:8155                      	;~ POP		AF
     236.  00:8155                      fin_localiza_info_habitacion:
     237.  00:8155  C9                  	RET
     238.  00:8156                      	
     239.  00:8156                      
     240.  00:8156                      ;;=====================================================
     241.  00:8156                      ;;TERMINADA_HABIACION_RECORRIDA
     242.  00:8156                      ;;=====================================================	
     243.  00:8156                      ; función: 	usando la variable prota_pos_mapx pone un 1 a donde apunta habitacion_recorrida (el array... byte 14 de 
     244.  00:8156                      ;			habitaciones recorridas en esa fila) para ver si uestra enemigos o no y permita pasar por puertas
     245.  00:8156                      ; entrada: 	prota_pos_mapx, habitacion_recorrida
     246.  00:8156                      ; salida: 	habitacion_recorrida (byte 14 de la fila de habitaciones) actualizada con OR A (en A la habitacion)
     247.  00:8156                      ; toca:		IX
     248.  00:8156                      terminada_habitacion_recorrida:
     249.  00:8156  F5                  		PUSH		AF
     250.  00:8157  E5                  		PUSH		HL
     251.  00:8158                      		
     252.  00:8158  21 2B A5            		LD			HL, habitacion_actual_puntero
     253.  00:815B  7E                  		LD			 A, (HL)
     254.  00:815C  CB E7               		SET			 4, A
     255.  00:815E  77                  		LD			(HL), A
     256.  00:815F                      		
     257.  00:815F  3E 01               		LD			 A, HABTERMIN	;da igual qué bit mientras sea distinto de 0
     258.  00:8161  32 2D A5            		LD			(is_habitacion_terminada), A
     259.  00:8164                      		
     260.  00:8164                      		;este trozo no sirve de nada pero ya e quedo más tranquilo si lo pongo, por ser exacto y completo
     261.  00:8164                      		;no sirve porque se cambiará de habitación y se perderá/actualizará el dato
     262.  00:8164  3A 29 A5            		LD			 A, (habitacion_actual)
     263.  00:8167  CB E7               		SET			 4, A
     264.  00:8169  32 29 A5            		LD			(habitacion_actual), A
     265.  00:816C                      		
     266.  00:816C  E1                  		POP			HL
     267.  00:816D  F1                  		POP			AF
     268.  00:816E                      fin_terminada_habitacion_recorrida:
     269.  00:816E  C9                  		RET
     270.  00:816F                      
     271.  00:816F                      
     272.  00:816F                      
     273.  00:816F                      	
     274.  00:816F                      	
     275.  00:816F                      	
     276.  00:816F                      	
     277.  00:816F                      	
     278.  00:816F                      	
     279.  00:816F                      	
     280.  00:816F                      	
     281.  00:816F                      	
     282.  00:816F                      	
     283.  00:816F                      	
     284.  00:816F                      	
     285.  00:816F                      	
     286.  00:816F                      	
     287.  00:816F                      	
     288.  00:816F                      	
     289.  00:816F                      	
     137   00:816F                      	
     138   00:816F                      	include "subr_general.asm"
       1.  00:816F                      ;;=====================================================
       2.  00:816F                      ;;DEFINICIÓN DE SUBRUTINAS GENERALES USABLES PARA CUALQUIER PROYECTO
       3.  00:816F                      ;;=====================================================	
       4.  00:816F                      
       5.  00:816F                      ;;=====================================================
       6.  00:816F                      ;;SUMA_A_BC
       7.  00:816F                      ;;=====================================================	
       8.  00:816F                      ; función: 	suma A a BC por si da más de 255
       9.  00:816F                      ; entrada: 	A, BC
      10.  00:816F                      ; salida: 	A + BC
      11.  00:816F                      ; toca:		A, BC
      12.  00:816F                      suma_A_BC:
      13.  00:816F  81                  	ADD		 C
      14.  00:8170  4F                  	LD		 C, A
      15.  00:8171  88                  	ADC		 B
      16.  00:8172  91                  	SUB		 C
      17.  00:8173  47                  	LD		 B, A
      18.  00:8174                      fin_suma_A_BC:
      19.  00:8174  C9                  	RET
      20.  00:8175                      	
      21.  00:8175                      ;;=====================================================
      22.  00:8175                      ;;SUMA_A_HL
      23.  00:8175                      ;;=====================================================	
      24.  00:8175                      ; función: 	suma A a BC por si da más de 255
      25.  00:8175                      ; entrada: 	A, HL
      26.  00:8175                      ; salida: 	A + HL
      27.  00:8175                      ; toca:		A, HL
      28.  00:8175                      suma_A_HL:
      29.  00:8175  85                  	ADD		 L
      30.  00:8176  6F                  	LD		 L, A
      31.  00:8177  8C                  	ADC		 H
      32.  00:8178  95                  	SUB		 L
      33.  00:8179  67                  	LD		 H, A
      34.  00:817A                      fin_suma_A_HL:
      35.  00:817A  C9                  	RET
     139   00:817B                      	
     140   00:817B                      	include "subr_pintapantalla.asm"
       1.  00:817B                      ;;=====================================================
       2.  00:817B                      ;;DEFINICIÓN DE SUBRUTINAS
       3.  00:817B                      ;;=====================================================	
       4.  00:817B                      ;relacionadas con pintado en pantalla (y no sprites)
       5.  00:817B                      
       6.  00:817B                      
       7.  00:817B                      ;;=====================================================
       8.  00:817B                      ;;COLOR_PANTALLA
       9.  00:817B                      ;;=====================================================	
      10.  00:817B                      ; función: 	el equivalente en basic a color 15,1,1
      11.  00:817B                      ; entrada: 	HL	que apunta a un array de bytes con 3 bytes FORCLR, BAKCLR y BDRCLR
      12.  00:817B                      ; salida: 	-
      13.  00:817B                      ; toca: 	todo
      14.  00:817B                      color_pantalla:
      15.  00:817B  7E                  	LD		 A, (HL)			;FORCLR 
      16.  00:817C  32 E9 F3            	LD 		(FORCLR),A
      17.  00:817F  23                  	INC		HL
      18.  00:8180                      	
      19.  00:8180  7E                  	LD		 A, (HL)			;BAKCLR
      20.  00:8181  32 EA F3            	LD 		(BAKCLR),A
      21.  00:8184  23                  	INC		HL
      22.  00:8185                      	
      23.  00:8185  7E                  	LD		 A, (HL)
      24.  00:8186  32 EB F3            	LD 		(BDRCLR),A			;BDRCLR
      25.  00:8189  C3 62 00            	JP		CHGCLR 
      26.  00:818C                      fin_color_pantalla:
      27.  00:818C                      
      28.  00:818C                      
      29.  00:818C                      ;;=====================================================
      30.  00:818C                      ;;PREPARAPANTALLA
      31.  00:818C                      ;;=====================================================	
      32.  00:818C                      ; función: elimina clic cuando se pulsa tecla, cls, screen 2,2
      33.  00:818C                      ; entrada: -
      34.  00:818C                      ; salida: -
      35.  00:818C                      ; toca: si no son todos los regristros, casi todos
      36.  00:818C                      sub_preparapantalla:
      37.  00:818C                      	;toca A y Z
      38.  00:818C                      elimina_clic;
      39.  00:818C  AF                  	XOR		 A
      40.  00:818D  32 DB F3            	LD		(CLIKSW),A
      41.  00:8190                      fin_elimina_clic:
      42.  00:8190                      
      43.  00:8190                      	;toca A
      44.  00:8190                      limpia_pantalla:
      45.  00:8190  AF                  	XOR		 A
      46.  00:8191  CD C3 00            	CALL 	CLS
      47.  00:8194                      fin_limpia_pantalla:
      48.  00:8194                      
      49.  00:8194                      	;toca A y direcciones #F3E9/#F3EA/#F3EB, poner en HL array con 3 valores
      50.  00:8194  21 3E A8            	LD		HL, color_base
      51.  00:8197  CD 7B 81            	CALL	color_pantalla
      52.  00:819A                      	
      53.  00:819A                      	;cambiamos a SCREEN 2,2 del BASIC
      54.  00:819A                      	;toca A
      55.  00:819A                      screen2:
      56.  00:819A  3E 02               	LD		 A, 2
      57.  00:819C  CD 5F 00            	CALL	CHGMOD			;selecciona screen 2
      58.  00:819F                      sprites_16_16:
      59.  00:819F  3A E0 F3            	LD		 A, (RG1SAV)
      60.  00:81A2  F6 02               	OR		00000010b		;fuerza sprites de 16x16
      61.  00:81A4  32 E0 F3            	LD		(RG1SAV), A		;no lo guardamos en la copia de variables del sistema
      62.  00:81A7  47                  	LD		 B, A
      63.  00:81A8  0E 01               	LD		 C, 1
      64.  00:81AA  C3 47 00            	JP		WRTVDP			;opción alternativa de escribir las tres lineas siguientes
      65.  00:81AD                      fin_sub_preparapantalla:
      66.  00:81AD                      	
      67.  00:81AD                      
      68.  00:81AD                      ;;=====================================================
      69.  00:81AD                      ;;PINTA_PANTALLA_COMPLETA
      70.  00:81AD                      ;;=====================================================	
      71.  00:81AD                      ; función: pinta el escenario, las 3 partes
      72.  00:81AD                      ; entrada: -
      73.  00:81AD                      ; salida: -
      74.  00:81AD                      ; toca: si no son todos los regristros, casi todos
      75.  00:81AD                      pinta_pantalla_completa:
      76.  00:81AD  CD B4 81            	CALL 	pinta_parte_superior_pantalla
      77.  00:81B0                      	
      78.  00:81B0  CD D2 82            	CALL 	pinta_parte_inferior_pantalla	
      79.  00:81B3                      fin_pinta_pantalla_completa:
      80.  00:81B3  C9                  	RET
      81.  00:81B4                      
      82.  00:81B4                      
      83.  00:81B4                      ;;=====================================================
      84.  00:81B4                      ;;PINTA_PARTE_SUPERIOR_PANTALLA
      85.  00:81B4                      ;;=====================================================	
      86.  00:81B4                      ; función: pinta el escenario, los dos bancos superiores
      87.  00:81B4                      ; entrada: -
      88.  00:81B4                      ; salida: -
      89.  00:81B4                      ; toca: si no son todos los regristros, casi todos
      90.  00:81B4                      pinta_parte_superior_pantalla:
      91.  00:81B4  3A 57 A8            	LD		 A, (prota_nivel)
      92.  00:81B7  CA E5 81            	JP		 Z, .carga_nivel_0
      93.  00:81BA  3D                  	DEC		 A
      94.  00:81BB  3A 57 A8            	LD		 A, (prota_nivel)
      95.  00:81BE  CA 00 82            	JP		 Z, .carga_nivel_1
      96.  00:81C1  3D                  	DEC		 A
      97.  00:81C2  3A 57 A8            	LD		 A, (prota_nivel)
      98.  00:81C5  CA 1B 82            	JP		 Z, .carga_nivel_2
      99.  00:81C8  3D                  	DEC		 A
     100.  00:81C9  3A 57 A8            	LD		 A, (prota_nivel)
     101.  00:81CC  CA 36 82            	JP		 Z, .carga_nivel_3
     102.  00:81CF  3D                  	DEC		 A
     103.  00:81D0  3A 57 A8            	LD		 A, (prota_nivel)
     104.  00:81D3  CA 51 82            	JP		 Z, .carga_nivel_4
     105.  00:81D6  3D                  	DEC		 A
     106.  00:81D7  3A 57 A8            	LD		 A, (prota_nivel)
     107.  00:81DA  CA 6C 82            	JP		 Z, .carga_nivel_5
     108.  00:81DD  3D                  	DEC		 A
     109.  00:81DE  3A 57 A8            	LD		 A, (prota_nivel)
     110.  00:81E1  CA 87 82            	JP		 Z, .carga_nivel_6
     111.  00:81E4  3D                  	DEC		 A
     112.  00:81E5                      	
     113.  00:81E5                      .carga_nivel_0:
     114.  00:81E5  21 BD AA            	LD		HL, tiles_patrones_nivel0
     115.  00:81E8  22 CC 82            	LD		(tiles_patrones), HL
     116.  00:81EB  21 DA AC            	LD		HL, tiles_color_nivel0
     117.  00:81EE  22 CE 82            	LD		(tiles_colores), HL
     118.  00:81F1  21 BD AA            	LD		HL, tiles_patrones_nivel0
     119.  00:81F4  22 CC 82            	LD		(tiles_patrones), HL
     120.  00:81F7  21 43 AD            	LD		HL, tiles_mapa_nivel0
     121.  00:81FA  22 D0 82            	LD		(tiles_mapa), HL
     122.  00:81FD  C3 9F 82            	JP		.fin_carga_niveles
     123.  00:8200                      
     124.  00:8200                      .carga_nivel_1:
     125.  00:8200  21 78 AD            	LD		HL, tiles_patrones_nivel1
     126.  00:8203  22 CC 82            	LD		(tiles_patrones), HL
     127.  00:8206  21 2D AF            	LD		HL, tiles_color_nivel1
     128.  00:8209  22 CE 82            	LD		(tiles_colores), HL
     129.  00:820C  21 78 AD            	LD		HL, tiles_patrones_nivel1
     130.  00:820F  22 CC 82            	LD		(tiles_patrones), HL
     131.  00:8212  21 74 AF            	LD		HL, tiles_mapa_nivel1
     132.  00:8215  22 D0 82            	LD		(tiles_mapa), HL
     133.  00:8218  C3 9F 82            	JP		.fin_carga_niveles
     134.  00:821B                      	
     135.  00:821B                      .carga_nivel_2:
     136.  00:821B  21 A9 AF            	LD		HL, tiles_patrones_nivel2
     137.  00:821E  22 CC 82            	LD		(tiles_patrones), HL
     138.  00:8221  21 5E B1            	LD		HL, tiles_color_nivel2
     139.  00:8224  22 CE 82            	LD		(tiles_colores), HL
     140.  00:8227  21 A9 AF            	LD		HL, tiles_patrones_nivel2
     141.  00:822A  22 CC 82            	LD		(tiles_patrones), HL
     142.  00:822D  21 A5 B1            	LD		HL, tiles_mapa_nivel2
     143.  00:8230  22 D0 82            	LD		(tiles_mapa), HL
     144.  00:8233  C3 9F 82            	JP		.fin_carga_niveles
     145.  00:8236                      	
     146.  00:8236                      .carga_nivel_3:
     147.  00:8236  21 DA B1            	LD		HL, tiles_patrones_nivel3
     148.  00:8239  22 CC 82            	LD		(tiles_patrones), HL
     149.  00:823C  21 8F B3            	LD		HL, tiles_color_nivel3
     150.  00:823F  22 CE 82            	LD		(tiles_colores), HL
     151.  00:8242  21 DA B1            	LD		HL, tiles_patrones_nivel3
     152.  00:8245  22 CC 82            	LD		(tiles_patrones), HL
     153.  00:8248  21 D6 B3            	LD		HL, tiles_mapa_nivel3
     154.  00:824B  22 D0 82            	LD		(tiles_mapa), HL
     155.  00:824E  C3 9F 82            	JP		.fin_carga_niveles
     156.  00:8251                      	
     157.  00:8251                      .carga_nivel_4:
     158.  00:8251  21 0B B4            	LD		HL, tiles_patrones_nivel4
     159.  00:8254  22 CC 82            	LD		(tiles_patrones), HL
     160.  00:8257  21 C0 B5            	LD		HL, tiles_color_nivel4
     161.  00:825A  22 CE 82            	LD		(tiles_colores), HL
     162.  00:825D  21 0B B4            	LD		HL, tiles_patrones_nivel4
     163.  00:8260  22 CC 82            	LD		(tiles_patrones), HL
     164.  00:8263  21 07 B6            	LD		HL, tiles_mapa_nivel4
     165.  00:8266  22 D0 82            	LD		(tiles_mapa), HL
     166.  00:8269  C3 9F 82            	JP		.fin_carga_niveles
     167.  00:826C                      	
     168.  00:826C                      .carga_nivel_5:
     169.  00:826C  21 3C B6            	LD		HL, tiles_patrones_nivel5
     170.  00:826F  22 CC 82            	LD		(tiles_patrones), HL
     171.  00:8272  21 F1 B7            	LD		HL, tiles_color_nivel5
     172.  00:8275  22 CE 82            	LD		(tiles_colores), HL
     173.  00:8278  21 3C B6            	LD		HL, tiles_patrones_nivel5
     174.  00:827B  22 CC 82            	LD		(tiles_patrones), HL
     175.  00:827E  21 38 B8            	LD		HL, tiles_mapa_nivel5
     176.  00:8281  22 D0 82            	LD		(tiles_mapa), HL
     177.  00:8284  C3 9F 82            	JP		.fin_carga_niveles
     178.  00:8287                      	
     179.  00:8287                      .carga_nivel_6:
     180.  00:8287  21 6D B8            	LD		HL, tiles_patrones_nivel6
     181.  00:828A  22 CC 82            	LD		(tiles_patrones), HL
     182.  00:828D  21 22 BA            	LD		HL, tiles_color_nivel6
     183.  00:8290  22 CE 82            	LD		(tiles_colores), HL
     184.  00:8293  21 6D B8            	LD		HL, tiles_patrones_nivel6
     185.  00:8296  22 CC 82            	LD		(tiles_patrones), HL
     186.  00:8299  21 69 BA            	LD		HL, tiles_mapa_nivel6
     187.  00:829C  22 D0 82            	LD		(tiles_mapa), HL
     188.  00:829F                      ;	JP		.fin_carga niveles			;no necesario
     189.  00:829F                      .fin_carga_niveles:
     190.  00:829F                      
     191.  00:829F                      	;cargando banco 1
     192.  00:829F                      	;cargamos los patrones
     193.  00:829F  2A CC 82            	LD		HL, (tiles_patrones)
     194.  00:82A2  11 00 00            	LD		DE, CHRTBL
     195.  00:82A5  CD C9 9A            	CALL	depack_VRAM
     196.  00:82A8                      	;cargamos los colores de los patrones
     197.  00:82A8  2A CE 82            	LD		HL, (tiles_colores)
     198.  00:82AB  11 00 20            	LD		DE, CLRTBL
     199.  00:82AE  CD C9 9A            	CALL	depack_VRAM
     200.  00:82B1                      	
     201.  00:82B1                      	;cargando banco 2
     202.  00:82B1                      	;cargamos los patrones
     203.  00:82B1  2A CC 82            	LD		HL, (tiles_patrones)
     204.  00:82B4  11 00 08            	LD		DE, CHRTBL + #0800
     205.  00:82B7  CD C9 9A            	CALL	depack_VRAM	
     206.  00:82BA                      	;cargamos los colores de los patrones
     207.  00:82BA  2A CE 82            	LD		HL, (tiles_colores)
     208.  00:82BD  11 00 28            	LD		DE, CLRTBL + #0800
     209.  00:82C0  CD C9 9A            	CALL	depack_VRAM
     210.  00:82C3                      	
     211.  00:82C3                      	;cargamos mapa de pantalla banco 1 y 2
     212.  00:82C3  2A D0 82            	LD		HL, (tiles_mapa)
     213.  00:82C6  11 00 18            	LD		DE, TILMAP
     214.  00:82C9  C3 C9 9A            	JP		depack_VRAM
     215.  00:82CC                      fin_pinta_parte_superior_pantalla:
     216.  00:82CC  00 00               tiles_patrones:		DW	0
     217.  00:82CE  00 00               tiles_colores:		DW	0
     218.  00:82D0  00 00               tiles_mapa:			DW	0
     219.  00:82D2                      
     220.  00:82D2                      
     221.  00:82D2                      ;;=====================================================
     222.  00:82D2                      ;;PINTA_PARTE_INFERIOR_PANTALLA
     223.  00:82D2                      ;;=====================================================	
     224.  00:82D2                      ; función: pinta la parte inferior del escenario que es común
     225.  00:82D2                      ; entrada: -
     226.  00:82D2                      ; salida: -
     227.  00:82D2                      ; toca: si no son todos los regristros, casi todos
     228.  00:82D2                      pinta_parte_inferior_pantalla:
     229.  00:82D2                      	;cangando banco 3
     230.  00:82D2                      	;cargamos los patrones
     231.  00:82D2  21 9E BA            	LD		HL,tiles_patrones_marcador
     232.  00:82D5  11 00 10            	LD		DE,CHRTBL + #1000
     233.  00:82D8  CD C9 9A            	CALL	depack_VRAM	
     234.  00:82DB                      	;cargamos mapa de pantalla
     235.  00:82DB  21 1F BC            	LD		HL,tiles_mapa_marcador
     236.  00:82DE  11 00 1A            	LD		DE,TILMAP + #0200
     237.  00:82E1  CD C9 9A            	CALL	depack_VRAM
     238.  00:82E4                      	;cargamos los colores de los patrones
     239.  00:82E4  21 EA BB            	LD		HL,tiles_color_marcador
     240.  00:82E7  11 00 30            	LD		DE,CLRTBL + #1000
     241.  00:82EA  C3 C9 9A            	JP		depack_VRAM
     242.  00:82ED                      fin_pinta_parte_inferior_pantalla:
     243.  00:82ED                      
     244.  00:82ED                      
     245.  00:82ED                      
     246.  00:82ED                      ;;=====================================================
     247.  00:82ED                      ;;PINTA_VIDAS
     248.  00:82ED                      ;;=====================================================	
     249.  00:82ED                      ; función: 	actualiza el mapa de tiles para que en el próximo refresco se pinten y actualiza_vidas
     250.  00:82ED                      ; entrada: 	array_aux_vidas
     251.  00:82ED                      ; salida: 	actualiza_vidas_sn
     252.  00:82ED                      ; toca:		todo
     253.  00:82ED                      pinta_vidas:
     254.  00:82ED  CD D1 80            	CALL	actualiza_marcador_vidas
     255.  00:82F0                      	
     256.  00:82F0  21 5D A8            	LD		HL, array_aux_vidas
     257.  00:82F3  11 48 1A            	LD		DE, TILMAP + POSVIDAS 	;inicio posición en el mapa de tiles de las vidas
     258.  00:82F6  01 08 00            	LD		BC, NMAXVIDREL			;hay 8 posiciones para vidas/reliquias o espacios en negro si no tiene 8 vidas/reliquias
     259.  00:82F9  C3 5C 00            	JP		LDIRVM
     260.  00:82FC                      fin_pinta_vidas:
     261.  00:82FC                      	
     262.  00:82FC                      	
     263.  00:82FC                      
     264.  00:82FC                      ;;=====================================================
     265.  00:82FC                      ;;PINTA_RELIQUIAS
     266.  00:82FC                      ;;=====================================================	
     267.  00:82FC                      ; función: 	actualiza el mapa de tiles para que en el próximo refresco se pinten y actualiza_reliquias
     268.  00:82FC                      ; entrada: 	array_aux_reliquias
     269.  00:82FC                      ; salida: 	-
     270.  00:82FC                      ; toca:		todo
     271.  00:82FC                      pinta_reliquias:
     272.  00:82FC  CD EA 80            	CALL	actualiza_buffer_reliquias
     273.  00:82FF                      	
     274.  00:82FF  21 65 A8            	LD		HL, array_aux_reliquias
     275.  00:8302  11 C8 1A            	LD		DE, TILMAP + POSRELIQ 	;inicio posición en el mapa de tiles de las vidas
     276.  00:8305  01 08 00            	LD		BC, NMAXVIDREL			;hay 8 posiciones para vidas/reliquias o espacios en negro si no tiene 8 vidas/reliquias
     277.  00:8308  C3 5C 00            	JP		LDIRVM
     278.  00:830B                      fin_pinta_reliquias:
     279.  00:830B                      	
     280.  00:830B                      
     281.  00:830B                      
     282.  00:830B                      	
     283.  00:830B                      ;;=====================================================
     284.  00:830B                      ;;PINTA_NIVEL
     285.  00:830B                      ;;=====================================================	
     286.  00:830B                      ; función: 	actualiza el nivel en la parte de puntuación
     287.  00:830B                      ; entrada: 	prota_nivel
     288.  00:830B                      ; salida: 	-
     289.  00:830B                      ; toca:		HL,DE,BC
     290.  00:830B                      pinta_nivel:	
     291.  00:830B                      	;forma más avanzada sin llamada a la bios
     292.  00:830B  01 B4 1A            	LD		BC,TILMAP + POSNIVEL ;posición en el mapa de tiles del tile de nivel
     293.  00:830E  3A 57 A8            	LD		 A, (prota_nivel)	 ;seleccionando la pos del banco de tiles a poner en el mapa
     294.  00:8311  C6 30               	ADD		'0'	
     295.  00:8313  57                  	LD		 D, A
     296.  00:8314                      	
     297.  00:8314  C3 17 83            	JP		pinta_tile_suelto
     298.  00:8317                      fin_pinta_nivel:
     299.  00:8317                      
     300.  00:8317                      
     301.  00:8317                      
     302.  00:8317                      ;;=====================================================
     303.  00:8317                      ;;PINTA_TILE_SUELTO
     304.  00:8317                      ;;=====================================================	
     305.  00:8317                      ; función: 	pinta al tile que digamos en D, en la posición BC
     306.  00:8317                      ; entrada: 	BC (posición a pintar en el mapa),D (qué se va a pintar el esa posición)
     307.  00:8317                      ; salida: 	-
     308.  00:8317                      ; toca:		-
     309.  00:8317                      pinta_tile_suelto:	
     310.  00:8317  DB 99               	IN		 A,(REGEST)		;leer registro de estado (recomendado)
     311.  00:8319  79                  	LD		 A,C			;primero byte bajo	
     312.  00:831A  D3 99               	OUT		(REGEST),A
     313.  00:831C  78                  	LD		 A,B			;después byte alto  ********************** preguntar a Fernando cómo que byte bajo es B
     314.  00:831D  F6 40               	OR		1000000b		;+64
     315.  00:831F  D3 99               	OUT		(REGEST),A
     316.  00:8321                      	
     317.  00:8321  7A                  	LD		A,D
     318.  00:8322  D3 98               	OUT		(REGESCVDP),A	;escribe A en VRAM en la posición indicada por los dos OUT anteriores
     319.  00:8324                      fin_pinta_tile_suelto:
     320.  00:8324  C9                  	RET
     321.  00:8325                      
     322.  00:8325                      
     323.  00:8325                      
     324.  00:8325                      
     325.  00:8325                      
     326.  00:8325                      ;;=====================================================
     327.  00:8325                      ;;MIRA_PINTA ENERGIA
     328.  00:8325                      ;;=====================================================	
     329.  00:8325                      ; función: 	actualiza el nivel de energia en la parte de puntuación
     330.  00:8325                      ; nota:		el cuadrado más bajo de ejergía siempre estará pintado... se obviará
     331.  00:8325                      ; entrada: 	prota.energia, array_aux_energia
     332.  00:8325                      ; salida: 	-
     333.  00:8325                      ; toca:		ninguno porque usa EXX
     334.  00:8325                      
     335.  00:8325                      ; nota importante... lo mismo interesa hacer esto con un array para comparar y un bucle
     336.  00:8325                      
     337.  00:8325                      mira_pinta_energia:
     338.  00:8325  D9                  	EXX							;por si acaso guardo el contenido de HL (si veo que no es necesario guardarlo lo quito) uso esto en vez de push por el nº ciclos
     339.  00:8326                      	
     340.  00:8326  3A 5C A8            	LD		 A,(prota_energia) 	;para las comparaciones A variable (actual) y B fijo (limites)
     341.  00:8329                      
     342.  00:8329  0E 00               	LD		 C,TILENEGRO		;para agilizar asignaciones en vez de un valor cte uso otro registro
     343.  00:832B                      pinta_ener:
     344.  00:832B                      pinta_ener_tile_8:
     345.  00:832B  21 74 A8            	LD		HL,ultimo_pos_array_aux_energia	;coloco puntero en array e iré decrementando
     346.  00:832E  06 D9               	LD		 B,TILEENERG8
     347.  00:8330  B8                  	CP		 B
     348.  00:8331  38 04               	JR		C,pinta_ener_tile_8_negro
     349.  00:8333  36 0E               	LD		(HL),TILEMAPVERD
     350.  00:8335  18 01               	JR		pinta_ener_tile_7
     351.  00:8337                      pinta_ener_tile_8_negro:
     352.  00:8337  71                  	LD		(HL),C
     353.  00:8338                      
     354.  00:8338                      pinta_ener_tile_7:
     355.  00:8338  2B                  	DEC		HL
     356.  00:8339  06 BA               	LD		 B,TILEENERG7
     357.  00:833B  B8                  	CP		 B
     358.  00:833C  38 04               	JR		C,pinta_ener_tile_7_negro
     359.  00:833E  36 0E               	LD		(HL),TILEMAPVERD
     360.  00:8340  18 01               	JR		pinta_ener_tile_6
     361.  00:8342                      pinta_ener_tile_7_negro:
     362.  00:8342  71                  	LD		(HL),C
     363.  00:8343                      
     364.  00:8343                      pinta_ener_tile_6:
     365.  00:8343  2B                  	DEC		HL
     366.  00:8344  06 9B               	LD		 B,TILEENERG6
     367.  00:8346  B8                  	CP		 B
     368.  00:8347  38 04               	JR		C,pinta_ener_tile_6_negro
     369.  00:8349  36 0E               	LD		(HL),14
     370.  00:834B  18 01               	JR		pinta_ener_tile_5
     371.  00:834D                      pinta_ener_tile_6_negro:
     372.  00:834D  71                  	LD		(HL),C
     373.  00:834E                      
     374.  00:834E                      pinta_ener_tile_5:
     375.  00:834E  2B                  	DEC		HL
     376.  00:834F  06 7C               	LD		 B,TILEENERG5
     377.  00:8351  B8                  	CP		 B
     378.  00:8352  38 04               	JR		C,pinta_ener_tile_5_negro
     379.  00:8354  36 0E               	LD		(HL),TILEMAPVERD
     380.  00:8356  18 01               	JR		pinta_ener_tile_4
     381.  00:8358                      pinta_ener_tile_5_negro:
     382.  00:8358  71                  	LD		(HL),C
     383.  00:8359                      
     384.  00:8359                      pinta_ener_tile_4:
     385.  00:8359  2B                  	DEC		HL
     386.  00:835A  06 5D               	LD		 B,TILEENERG4
     387.  00:835C  B8                  	CP		 B
     388.  00:835D  38 04               	JR		C,pinta_ener_tile_4_negro
     389.  00:835F  36 0F               	LD		(HL),TILEMAPAMAR
     390.  00:8361  18 01               	JR		pinta_ener_tile_3
     391.  00:8363                      pinta_ener_tile_4_negro:
     392.  00:8363  71                  	LD		(HL),C
     393.  00:8364                      	
     394.  00:8364                      pinta_ener_tile_3:
     395.  00:8364  2B                  	DEC		HL
     396.  00:8365  06 3E               	LD		 B,TILEENERG3
     397.  00:8367  B8                  	CP		 B
     398.  00:8368  38 04               	JR		C,pinta_ener_tile_3_negro
     399.  00:836A  36 0F               	LD		(HL),TILEMAPAMAR
     400.  00:836C  18 01               	JR		pinta_ener_tile_2
     401.  00:836E                      pinta_ener_tile_3_negro:
     402.  00:836E  71                  	LD		(HL),C
     403.  00:836F                      
     404.  00:836F                      pinta_ener_tile_2:
     405.  00:836F  2B                  	DEC		HL
     406.  00:8370  06 1F               	LD		 B,TILEENERG2
     407.  00:8372  B8                  	CP		 B
     408.  00:8373  38 04               	JR		C,pinta_ener_tile_2_negro
     409.  00:8375  36 10               	LD		(HL),TILEMAPROJO
     410.  00:8377  18 01               	JR		fin_mira_pinta_energia		;siempre estará pintado el cuadro mínimo
     411.  00:8379                      pinta_ener_tile_2_negro:
     412.  00:8379  71                  	LD		(HL),C
     413.  00:837A                      
     414.  00:837A                      fin_mira_pinta_energia:
     415.  00:837A  D9                  	EXX
     416.  00:837B  C9                  	RET
     417.  00:837C                      
     418.  00:837C                      
     419.  00:837C                      ;;=====================================================
     420.  00:837C                      ;;PINTA_ENERGIA
     421.  00:837C                      ;;=====================================================	
     422.  00:837C                      ; función: 	actualiza el mapa de tiles para que en el próximo refresco se pinte la barra de energia actual
     423.  00:837C                      ; entrada: 	array_aux_energia
     424.  00:837C                      ; toca:		todo
     425.  00:837C                      pinta_energia:
     426.  00:837C  CD 25 83            	CALL	mira_pinta_energia
     427.  00:837F                      	
     428.  00:837F  21 6D A8            	LD		HL, array_aux_energia
     429.  00:8382  11 88 1A            	LD		DE, TILMAP + POSENERG 	;inicio posición en el mapa de tiles de las vidas
     430.  00:8385  01 08 00            	LD		BC, NMAXVIDREL			;hay 8 posiciones para vidas/reliquias o espacios en negro si no tiene 8 vidas/reliquias
     431.  00:8388  C3 5C 00            	JP		LDIRVM
     432.  00:838B                      fin_pinta_energia:
     433.  00:838B                      
     434.  00:838B                      
     435.  00:838B                      
     436.  00:838B                      ;;=====================================================
     437.  00:838B                      ;;BORRA_MAPA
     438.  00:838B                      ;;=====================================================	
     439.  00:838B                      ; función: 	pone todas las habitaciones del mapa a negro (los tiles del mapa los rellena con un array a 0 - caracter en negro)
     440.  00:838B                      ; entrada: 	array_aux_mapa_limpiar
     441.  00:838B                      ; salida: 	-
     442.  00:838B                      ; toca:		AF
     443.  00:838B                      borra_mapa:
     444.  00:838B  D9                  	EXX
     445.  00:838C                      	
     446.  00:838C  21 75 A8            	LD		HL,array_aux_mapa_limpiar
     447.  00:838F  11 F8 1A            	LD		DE,TILMAP + POSMAPLIN1 	;inicio posición en el mapa de tiles de la primera fila del mapa
     448.  00:8392  01 07 00            	LD		BC,NHABNIVEL			;cada nivel son 7 filas con 7 habitaciones "posibles"
     449.  00:8395  CD 5C 00            	CALL	LDIRVM
     450.  00:8398                      	
     451.  00:8398  21 75 A8            	LD		HL,array_aux_mapa_limpiar
     452.  00:839B  11 D8 1A            	LD		DE,TILMAP + POSMAPLIN2
     453.  00:839E  01 07 00            	LD		BC,NHABNIVEL
     454.  00:83A1  CD 5C 00            	CALL	LDIRVM
     455.  00:83A4                      
     456.  00:83A4  21 75 A8            	LD		HL,array_aux_mapa_limpiar
     457.  00:83A7  11 B8 1A            	LD		DE,TILMAP + POSMAPLIN3
     458.  00:83AA  01 07 00            	LD		BC,NHABNIVEL
     459.  00:83AD  CD 5C 00            	CALL	LDIRVM
     460.  00:83B0                      
     461.  00:83B0  21 75 A8            	LD		HL,array_aux_mapa_limpiar	
     462.  00:83B3  11 98 1A            	LD		DE,TILMAP + POSMAPLIN4
     463.  00:83B6  01 07 00            	LD		BC,NHABNIVEL
     464.  00:83B9  CD 5C 00            	CALL	LDIRVM
     465.  00:83BC                      
     466.  00:83BC  21 75 A8            	LD		HL,array_aux_mapa_limpiar	
     467.  00:83BF  11 78 1A            	LD		DE,TILMAP + POSMAPLIN5
     468.  00:83C2  01 07 00            	LD		BC,NHABNIVEL
     469.  00:83C5  CD 5C 00            	CALL	LDIRVM
     470.  00:83C8                      
     471.  00:83C8  21 75 A8            	LD		HL,array_aux_mapa_limpiar	
     472.  00:83CB  11 58 1A            	LD		DE,TILMAP + POSMAPLIN6
     473.  00:83CE  01 07 00            	LD		BC,NHABNIVEL
     474.  00:83D1  CD 5C 00            	CALL	LDIRVM
     475.  00:83D4                      
     476.  00:83D4  21 75 A8            	LD		HL,array_aux_mapa_limpiar	
     477.  00:83D7  11 38 1A            	LD		DE,TILMAP + POSMAPLIN7
     478.  00:83DA  01 07 00            	LD		BC,NHABNIVEL
     479.  00:83DD  CD 5C 00            	CALL	LDIRVM
     480.  00:83E0                      	
     481.  00:83E0  D9                  	EXX
     482.  00:83E1                      fin_borra_mapa:
     483.  00:83E1  C9                  	RET
     484.  00:83E2                      
     485.  00:83E2                      
     486.  00:83E2                      
     487.  00:83E2                      
     488.  00:83E2                      
     489.  00:83E2                      
     490.  00:83E2                      
     491.  00:83E2                      ;;=====================================================
     492.  00:83E2                      ;;POSICIONA_EN_MAPA
     493.  00:83E2                      ;;=====================================================	
     494.  00:83E2                      ; función: 	en el mapa de marcadores de la derecha/abajo marca un cuadro en gris o con un muñeco
     495.  00:83E2                      ;			según el valor de prota.posición pinta entrá un muñeco y por donde vaya pasando el prota
     496.  00:83E2                      ;			quedará en gris
     497.  00:83E2                      ; entrada: 	elemento_pintar_mapa, prota_pos_mapy, prota_pos_mapx
     498.  00:83E2                      ; salida: 	-
     499.  00:83E2                      ; toca:		todos
     500.  00:83E2                      posiciona_en_mapa:
     501.  00:83E2                      	;#0238 es la posición en mapa de tiles de la esquina superior izquierda del mapa (569 en decimal)
     502.  00:83E2  21 38 1A            	LD		HL, TILMAP + POSMAPA;pos inicial
     503.  00:83E5                      	
     504.  00:83E5                      	;ahora se le calcula la fila a pintar ya que va de abajo a arriba y no como en el mapa + columna
     505.  00:83E5                      .sumar_fila:
     506.  00:83E5  3A 5B A8            	LD		 A, (prota_pos_mapy)
     507.  00:83E8  FE 01               	CP		 1
     508.  00:83EA  28 2A               	JR		 Z, .fila_1
     509.  00:83EC  3A 5B A8            	LD		 A, (prota_pos_mapy)
     510.  00:83EF  FE 02               	CP		 2
     511.  00:83F1  28 2A               	JR		 Z, .fila_2
     512.  00:83F3  3A 5B A8            	LD		 A, (prota_pos_mapy)
     513.  00:83F6  FE 03               	CP		 3
     514.  00:83F8  28 2A               	JR		 Z, .fila_3
     515.  00:83FA  3A 5B A8            	LD		 A, (prota_pos_mapy)
     516.  00:83FD  FE 04               	CP		 4
     517.  00:83FF  28 2A               	JR		 Z, .fila_4
     518.  00:8401  3A 5B A8            	LD		 A, (prota_pos_mapy)
     519.  00:8404  FE 05               	CP		 5
     520.  00:8406  28 2A               	JR		 Z, .fila_5
     521.  00:8408  3A 5B A8            	LD		 A, (prota_pos_mapy)
     522.  00:840B  FE 06               	CP		 6
     523.  00:840D  28 2A               	JR		 Z, .sumar_columna
     524.  00:840F                      	;no consulto la 0 porque si no es ninguna de las anteriores es 0 y por tanto sería un jr fila_0
     525.  00:840F                      	
     526.  00:840F                      .fila_0:
     527.  00:840F  11 C0 00            	LD		DE, 192
     528.  00:8412  19                  	ADD		HL, DE			;nota: se que repito el ADD pero la otra opción es inicializar DE y ya tarda mucho la funicón (es por velicidad)
     529.  00:8413  C3 39 84            	JP		.sumar_columna
     530.  00:8416                      .fila_1:
     531.  00:8416  11 A0 00            	LD		DE, 160
     532.  00:8419  19                  	ADD		HL, DE
     533.  00:841A  C3 39 84            	JP		.sumar_columna
     534.  00:841D                      .fila_2:
     535.  00:841D  11 80 00            	LD		DE, 128
     536.  00:8420  19                  	ADD		HL, DE
     537.  00:8421  C3 39 84            	JP		.sumar_columna
     538.  00:8424                      .fila_3:
     539.  00:8424  11 60 00            	LD		DE, 96
     540.  00:8427  19                  	ADD		HL, DE
     541.  00:8428  C3 39 84            	JP		.sumar_columna
     542.  00:842B                      .fila_4:
     543.  00:842B  11 40 00            	LD		DE, 64
     544.  00:842E  19                  	ADD		HL, DE
     545.  00:842F  C3 39 84            	JP		.sumar_columna
     546.  00:8432                      .fila_5:
     547.  00:8432  11 20 00            	LD		DE, 32
     548.  00:8435  19                  	ADD		HL, DE
     549.  00:8436  C3 39 84            	JP		.sumar_columna
     550.  00:8439                      .fila_6:
     551.  00:8439                      	;pongo fila_6 por poner ya que si es la fila 6 equiv. a primera fila del mapa y por tanto no suma fila
     552.  00:8439                      	
     553.  00:8439                      	
     554.  00:8439                      .sumar_columna:
     555.  00:8439  3A 5A A8            	LD 		 A, (prota_pos_mapx) ;POS X
     556.  00:843C  16 00               	LD		 D, 0
     557.  00:843E  5F                  	LD		 E, A
     558.  00:843F  19                  	ADD		HL, DE
     559.  00:8440                      	
     560.  00:8440                      	;resultado en BC para usar en la función pinta_tile_suelto
     561.  00:8440  44                  	LD		 B, H
     562.  00:8441  4D                  	LD		 C, L
     563.  00:8442                      	
     564.  00:8442                      	;terminado de fijar la coordenada recuperamos a para ver el tipo
     565.  00:8442  3A 7C A8            	LD		 A, (elemento_pintar_mapa)
     566.  00:8445  FE 09               	CP		 TILEGRISM
     567.  00:8447  CA 4F 84            	JP		 Z, pinta_pos_mapa_vacio
     568.  00:844A  16 13               	LD		 D, TILEPROTAM
     569.  00:844C  C3 51 84            	JP		fin_pinta_pos_mapa
     570.  00:844F                      pinta_pos_mapa_vacio:
     571.  00:844F  16 09               	LD		 D, TILEGRISM	
     572.  00:8451                      
     573.  00:8451                      fin_pinta_pos_mapa:
     574.  00:8451  C3 17 83            	JP		pinta_tile_suelto
     575.  00:8454                      fin_posiciona_en_mapa:
     576.  00:8454                      
     577.  00:8454                      
     578.  00:8454                      
     579.  00:8454                      
     580.  00:8454                      ;;=====================================================
     581.  00:8454                      ;;EFECTO_IMAGEN_TIRA_RELIQUIA
     582.  00:8454                      ;;=====================================================	
     583.  00:8454                      ; función: 	hace que el fondo de la pantalla parpadee N veces
     584.  00:8454                      ; entrada: 	actualiza_reliquias_sn
     585.  00:8454                      ; salida: 	-
     586.  00:8454                      ; toca: 	todo
     587.  00:8454                      efecto_imagen_tira_reliquia:
     588.  00:8454  3E 14               	LD		 A, 20;RETARDOREL
     589.  00:8456  47                  	LD		 B, A
     590.  00:8457                      
     591.  00:8457                      .parpadea_fondo:
     592.  00:8457  C5                  	PUSH	BC
     593.  00:8458  21 41 A8            	LD		HL, color_bomba1
     594.  00:845B  CD 7B 81            	CALL	color_pantalla
     595.  00:845E                      	
     596.  00:845E                      	;~ PUSH	BC
     597.  00:845E                      	;~ LD		 A, 255
     598.  00:845E                      	;~ LD		 B, A
     599.  00:845E                      ;~ .bucle_de_espera:
     600.  00:845E                      	;~ NOP
     601.  00:845E                      	;~ DJNZ	 .bucle_de_espera
     602.  00:845E                      	;~ POP		BC
     603.  00:845E  76                  	HALT
     604.  00:845F                      
     605.  00:845F                      	
     606.  00:845F  21 44 A8            	LD		HL, color_bomba2
     607.  00:8462  CD 7B 81            	CALL	color_pantalla
     608.  00:8465  C1                  	POP		BC
     609.  00:8466  10 EF               	DJNZ	.parpadea_fondo
     610.  00:8468                      	
     611.  00:8468  21 3E A8            	LD		HL, color_base
     612.  00:846B  C3 7B 81            	JP		color_pantalla
     613.  00:846E                      fin_efecto_imagen_tira_reliquia:
     614.  00:846E                      
     615.  00:846E                      
     616.  00:846E                      
     617.  00:846E                      
     618.  00:846E                      ;=====================================================
     619.  00:846E                      ;;PINTA_ARRAY
     620.  00:846E                      ;;=====================================================	
     621.  00:846E                      ;;funcion:  (pinta el mismo tile) se le pasa un array con posiciones de tiles y coordenadas x e y y los pinta en screen 2
     622.  00:846E                      ;;entrada:	wordaux1 (pos inicio sc2 donde pintar) y wordaux2 (puntero al array a pintar), BC (posición en tilemap) , D filas y E columnas
     623.  00:846E                      ;;salida:	-
     624.  00:846E                      ;;importante: necesita de una variable wordaux1 tipo WD (wordaux1: 	DW	0)
     625.  00:846E                      ;; ejemplo llamada:
     626.  00:846E                      	;~ LD		HL,array_tiles					;guardo puntero al array a pintar (como psar por referencia)
     627.  00:846E                      	;~ LD		(wordaux2),HL					;en la variable wordaux2
     628.  00:846E                      	;~ LD		HL,SC2MAP + 256 + 32			;calcula posición en tilemap
     629.  00:846E                      	;~ LD		(wordaux1),HL					;guarda valor pos tilemap en wordaux1
     630.  00:846E                      	;~ LD		B,H								;coloca posición tilemap BC
     631.  00:846E                      	;~ LD		C,L
     632.  00:846E                      	;~ LD		D,2								;nº de filas ahora byteaux1
     633.  00:846E                      	;~ LD		E,3								;nº de columnas ahora byteaux2
     634.  00:846E                      	;~ CALL	pinta_array
     635.  00:846E                      
     636.  00:846E                      pinta_array:
     637.  00:846E  08                  	EX		AF, AF'
     638.  00:846F                      	
     639.  00:846F  3A B2 84            	LD		 A, (byteaux1)
     640.  00:8472  57                  	LD		 D, A
     641.  00:8473  3A B3 84            	LD		 A, (byteaux2)
     642.  00:8476  5F                  	LD		 E, A
     643.  00:8477                      	
     644.  00:8477  2A AE 84            	LD		HL, (wordaux1)
     645.  00:847A  44                  	LD		 B, H							;coloca posición tilemap BC
     646.  00:847B  4D                  	LD		 C, L
     647.  00:847C                      	
     648.  00:847C                      	;contamos con que la posición "global" en el tilemap está ya en BC
     649.  00:847C                      	;y el puntero al array a pintar en wordaux2 y la posición en tilemap sc2 en wordaux1
     650.  00:847C                      	;inicializa
     651.  00:847C  DB 99               	IN		 A,(REGEST)		;leer registro de estado (recomendado)
     652.  00:847E                      	
     653.  00:847E                      	;coloca puntero para pintar tile según BC
     654.  00:847E  79                  	LD		 A,C			;primero byte bajo	
     655.  00:847F  D3 99               	OUT		(REGEST),A
     656.  00:8481  78                  	LD		 A,B			;después byte alto  ********************** preguntar a Fernando cómo que byte bajo es B
     657.  00:8482  F6 40               	OR		1000000b		;+64
     658.  00:8484  D3 99               	OUT		(REGEST),A
     659.  00:8486                      
     660.  00:8486                      	
     661.  00:8486  2A B0 84            	LD		HL,(wordaux2)	;HL es lo que se pintará y le he pasado el puntero del array tilemap a pintar
     662.  00:8489                      .pa_pinta_fila:
     663.  00:8489  43                  	LD		 B,E
     664.  00:848A                      .pa_pinta_columnas: 		;finta la fila (pintando las columnas)
     665.  00:848A  7E                  	LD		 A,(HL)
     666.  00:848B  D3 98               	OUT		(REGESCVDP),A	;escribe A en VRAM en la posición indicada por los dos OUT anteriores
     667.  00:848D  23                  	INC		HL
     668.  00:848E  10 FA               	DJNZ	.pa_pinta_columnas
     669.  00:8490                      	
     670.  00:8490                      	;no es una solución elegante lo de repetir código pero queda claro
     671.  00:8490                      	;por si hay otra fila
     672.  00:8490  E5                  	PUSH	HL
     673.  00:8491  2A AE 84            	LD		HL,(wordaux1)
     674.  00:8494  01 20 00            	LD		BC,32
     675.  00:8497  09                  	ADD		HL,BC
     676.  00:8498  22 AE 84            	LD		(wordaux1),HL
     677.  00:849B  44                  	LD		B,H
     678.  00:849C  4D                  	LD		C,L
     679.  00:849D  E1                  	POP		HL
     680.  00:849E                      	
     681.  00:849E  79                  	LD		 A,C			;primero byte bajo	
     682.  00:849F  D3 99               	OUT		(REGEST),A
     683.  00:84A1  78                  	LD		 A,B			;después byte alto 
     684.  00:84A2  F6 40               	OR		1000000b		;+64
     685.  00:84A4  D3 99               	OUT		(REGEST),A
     686.  00:84A6                      	
     687.  00:84A6                      	;si hay otra fila repite
     688.  00:84A6  15                  	DEC		 D
     689.  00:84A7  7A                  	LD		 A,D		;¿hay otra fila?
     690.  00:84A8  B7                  	OR		 A
     691.  00:84A9  C4 89 84            	CALL	NZ,.pa_pinta_fila
     692.  00:84AC                      	
     693.  00:84AC  08                  	EX		AF, AF'
     694.  00:84AD                      fin_pinta_array:
     695.  00:84AD  C9                  	RET
     696.  00:84AE                      ;;variables asocidas a la función pinta_array
     697.  00:84AE                      ;; por de pronto la dejo aquí
     698.  00:84AE  00 00               wordaux1:		DW	0	;almacena la posición en el tilemap 0 al 675
     699.  00:84B0  00 00               wordaux2:		DW	0	;almacena puntero a array de tiles (posiciones en realidad) a pintar (posiciones repetidas en los 2 primeros bancos)
     700.  00:84B2  00                  byteaux1:		DB	0	;nº filas Registro D
     701.  00:84B3  00                  byteaux2:		DB	0	;nº columnas Registro E
     702.  00:84B4                      
     703.  00:84B4                      
     704.  00:84B4                      
     705.  00:84B4                      
     706.  00:84B4                      ;;=====================================================
     707.  00:84B4                      ;;INICIALIZA_ANTORCHAS
     708.  00:84B4                      ;;=====================================================	
     709.  00:84B4                      ; función: 	inicializa las variables de estructuras de las antorchas
     710.  00:84B4                      ; entrada: 	antorchas, array_antorcha
     711.  00:84B4                      ; salida: 	
     712.  00:84B4                      ; toca:		HL, IX
     713.  00:84B4                      inicializa_antorchas:
     714.  00:84B4  DD 21 8E A9         	LD		IX, antorchas
     715.  00:84B8  DD 36 00 00         	LD		(IX), INACTIVA
     716.  00:84BC  21 95 A9            	LD		HL, array_antorcha
     717.  00:84BF  DD 74 01            	LD		(IX + 1), H
     718.  00:84C2  DD 75 02            	LD		(IX + 2), L
     719.  00:84C5  DD 36 03 88         	LD		(IX + 3), POSANTOR1
     720.  00:84C9  DD 36 04 97         	LD		(IX + 4), POSANTOR2
     721.  00:84CD  DD 36 05 00         	LD		(IX + 5), 0
     722.  00:84D1  DD 36 06 FF         	LD		(IX + 6), RESETLLAMA
     723.  00:84D5                      fin_inicializa_antorchas:
     724.  00:84D5  C9                  	RET
     725.  00:84D6                      
     726.  00:84D6                      
     727.  00:84D6                      ;;=====================================================
     728.  00:84D6                      ;;INICIALIZA_esqueletos
     729.  00:84D6                      ;;=====================================================	
     730.  00:84D6                      ; función: 	inicializa las variables de estructuras de los esqueletos
     731.  00:84D6                      ; entrada: 	esqueletos, array_esqueletos
     732.  00:84D6                      ; salida: 	
     733.  00:84D6                      ; toca:		HL, IX
     734.  00:84D6                      inicializa_esqueletos:
     735.  00:84D6  DD 21 98 A9         	LD		IX, esqueletos
     736.  00:84DA  DD 36 00 00         	LD		(IX), INACTIVA
     737.  00:84DE  21 9F A9            	LD		HL, array_esqueleto
     738.  00:84E1  DD 74 01            	LD		(IX + 1), H
     739.  00:84E4  DD 75 02            	LD		(IX + 2), L
     740.  00:84E7  DD 36 03 88         	LD		(IX + 3), POSESQUEL1
     741.  00:84EB  DD 36 04 95         	LD		(IX + 4), POSESQUEL2
     742.  00:84EF  DD 36 05 00         	LD		(IX + 5), 0
     743.  00:84F3  DD 36 06 19         	LD		(IX + 6), RESETESQUEL
     744.  00:84F7                      fin_inicializa_esqueletos:
     745.  00:84F7  C9                  	RET
     746.  00:84F8                      	
     747.  00:84F8                      
     748.  00:84F8                      ;;=====================================================
     749.  00:84F8                      ;;PINTA_ANTORCHAS
     750.  00:84F8                      ;;=====================================================	
     751.  00:84F8                      ; función: 	pinta las antorchas con valores base
     752.  00:84F8                      ; entrada: 	antorchas, array_antorcha
     753.  00:84F8                      ; salida: 	
     754.  00:84F8                      ; toca:		HL
     755.  00:84F8                      pinta_extra_fondo:
     756.  00:84F8  DD 21 8E A9         	LD		IX, antorchas
     757.  00:84FC                      .examina_sihay_antorchas
     758.  00:84FC                      	;hay que pintarlas?
     759.  00:84FC  3A 2A A5            	LD		 A, (habitacion_extras)
     760.  00:84FF  CB 47               	BIT		 0, A
     761.  00:8501  C2 0B 85            	JP		NZ, .hayantorchas			;si el bit 0 de extras es 0 no se pintan antorchas
     762.  00:8504  DD 36 00 00         	LD		(IX), INACTIVA
     763.  00:8508  C3 34 85            	JP		.examina_sihay_esqueletos
     764.  00:850B                      	
     765.  00:850B                      .hayantorchas:
     766.  00:850B  DD 36 00 01         	LD		(IX), ACTIVA
     767.  00:850F                      	;pinta antorcha izquierdda
     768.  00:850F  DD 66 01            	LD		 H, (IX + 1)
     769.  00:8512  DD 6E 02            	LD		 L, (IX + 2)
     770.  00:8515  22 B0 84            	LD		(wordaux2), HL				;guarda pos array en wordaux2
     771.  00:8518                      	
     772.  00:8518  21 88 18            	LD		HL, TILMAP + POSANTOR1		;calcula posición en tilemap
     773.  00:851B  22 AE 84            	LD		(wordaux1), HL				;guarda valor pos tilemap en wordaux1
     774.  00:851E                      
     775.  00:851E  3E 03               	LD		 A, 3						;nº de filas	
     776.  00:8520  32 B2 84            	LD		(byteaux1), A
     777.  00:8523  3E 01               	LD		 A, 1						;nº de columnas
     778.  00:8525  32 B3 84            	LD		(byteaux2), A				
     779.  00:8528                      	
     780.  00:8528  CD 6E 84            	CALL	pinta_array
     781.  00:852B                      	
     782.  00:852B                      	;pinta antorcha derecha
     783.  00:852B  21 97 18            	LD		HL, TILMAP + POSANTOR2		;calcula posición en tilemap
     784.  00:852E  22 AE 84            	LD		(wordaux1), HL				;guarda valor pos tilemap en wordaux1
     785.  00:8531                      	
     786.  00:8531  C3 6E 84            	JP		pinta_array 				;no ecesita CALL ya que la subrutina termina aquí
     787.  00:8534                      	
     788.  00:8534                      .examina_sihay_esqueletos
     789.  00:8534  DD 21 98 A9         	LD		IX, esqueletos
     790.  00:8538                      	;hay que pintarlos?
     791.  00:8538  3A 29 A5            	LD		 A, (habitacion_actual)
     792.  00:853B  CB 6F               	BIT		 5, A
     793.  00:853D  C2 45 85            	JP		NZ, .hayesqueletos			;si el bit 0 de extras es 0 no se pintan antorchas
     794.  00:8540  DD 36 00 00         	LD		(IX), INACTIVA
     795.  00:8544  C9                  	RET									;no hay que pintarlo. no hay que continuar
     796.  00:8545                      
     797.  00:8545                      .hayesqueletos
     798.  00:8545  DD 36 00 01         	LD		(IX), ACTIVA
     799.  00:8549                      	;pinta antorcha izquierdda
     800.  00:8549  DD 66 01            	LD		 H, (IX + 1)
     801.  00:854C  DD 6E 02            	LD		 L, (IX + 2)
     802.  00:854F  22 B0 84            	LD		(wordaux2), HL				;guarda pos array en wordaux2
     803.  00:8552                      	
     804.  00:8552  21 88 18            	LD		HL, TILMAP + POSESQUEL1		;calcula posición en tilemap
     805.  00:8555  22 AE 84            	LD		(wordaux1), HL				;guarda valor pos tilemap en wordaux1
     806.  00:8558                      
     807.  00:8558  3E 04               	LD		 A, 4						;nº de filas	
     808.  00:855A  32 B2 84            	LD		(byteaux1), A
     809.  00:855D  3E 03               	LD		 A, 3						;nº de columnas
     810.  00:855F  32 B3 84            	LD		(byteaux2), A				
     811.  00:8562                      	
     812.  00:8562  CD 6E 84            	CALL	pinta_array
     813.  00:8565                      	
     814.  00:8565                      	;pinta antorcha derecha
     815.  00:8565  21 95 18            	LD		HL, TILMAP + POSESQUEL2		;calcula posición en tilemap
     816.  00:8568  22 AE 84            	LD		(wordaux1), HL				;guarda valor pos tilemap en wordaux1
     817.  00:856B                      	
     818.  00:856B  C3 6E 84            	JP		pinta_array 				;no ecesita CALL ya que la subrutina termina aquí
     819.  00:856E                      fin_pinta_extra_fondo:
     820.  00:856E  C9                  	RET
     821.  00:856F                      
     822.  00:856F                      
     823.  00:856F                      
     824.  00:856F                      ;;=====================================================
     825.  00:856F                      ;;ACTUALIZA_ELEMENTOS_FONDO
     826.  00:856F                      ;;=====================================================	
     827.  00:856F                      ; función: 	de los elementos que pueda haber en el fondo de la pared (pantalla) actualiza si procede
     828.  00:856F                      ;			actualmente: antorchas y a futuro esqueletos
     829.  00:856F                      ; entrada: 	
     830.  00:856F                      ; salida: 	
     831.  00:856F                      ; toca:		A
     832.  00:856F                      actualiza_elementos_fondo:
     833.  00:856F                      .examina_antorchas:
     834.  00:856F  DD 21 8E A9         	LD		IX, antorchas
     835.  00:8573  DD 7E 00            	LD		 A, (IX)
     836.  00:8576  B7                  	OR		 A
     837.  00:8577  CA 7D 85            	JP 	 	 Z, .examina_esqueletos
     838.  00:857A                      	
     839.  00:857A  CD 89 85            	CALL	flip_llamas_antorchas
     840.  00:857D                      .examina_esqueletos:
     841.  00:857D  DD 21 98 A9         	LD		IX, esqueletos
     842.  00:8581  DD 7E 00            	LD		 A, (IX)
     843.  00:8584  B7                  	OR		 A
     844.  00:8585  C8                  	RET	 	 Z
     845.  00:8586                      	
     846.  00:8586  C3 E6 85            	JP		flip_calavera_esqueletos
     847.  00:8589                      fin_actualiza_elementos_fondo:
     848.  00:8589                      
     849.  00:8589                      
     850.  00:8589                      
     851.  00:8589                      
     852.  00:8589                      ;;=====================================================
     853.  00:8589                      ;;FLIP_LLAMAS_ANTORCHAS
     854.  00:8589                      ;;=====================================================	
     855.  00:8589                      ; función: 	modifica las llamas de las antorchas con los tipos que hay
     856.  00:8589                      ; entrada: 	
     857.  00:8589                      ; salida: 	
     858.  00:8589                      ; toca:		
     859.  00:8589                      flip_llamas_antorchas:
     860.  00:8589  DD 21 8E A9         	LD		IX, antorchas
     861.  00:858D                      	;tiene que cambiar de llama?
     862.  00:858D  DD 7E 06            	LD		 A, (IX + 6)
     863.  00:8590  3D                  	DEC		 A
     864.  00:8591  DD 77 06            	LD		 (IX + 6), A
     865.  00:8594                      	;no
     866.  00:8594  C0                  	RET		NZ
     867.  00:8595                      	;si
     868.  00:8595  C5                  	PUSH	BC
     869.  00:8596  D5                  	PUSH	DE
     870.  00:8597                      	
     871.  00:8597  DD 36 06 FF         	LD		(IX + 6), RESETLLAMA	
     872.  00:859B                      	
     873.  00:859B                      	;qué llama toca?
     874.  00:859B  DD 7E 05            	LD		 A, (IX + 5)
     875.  00:859E  B7                  	OR		 A
     876.  00:859F  CA C3 85            	JP		 Z, .llama_par
     877.  00:85A2                      .llama_impar
     878.  00:85A2                      	;cambio a llama par
     879.  00:85A2  AF                   	XOR		 A
     880.  00:85A3  DD 77 05            	LD		(IX + 5), A
     881.  00:85A6                      	;pinto llamas
     882.  00:85A6  01 00 18            	LD		BC, TILMAP
     883.  00:85A9  3E 88               	LD		 A, POSANTOR1
     884.  00:85AB  CD 6F 81            	CALL	suma_A_BC
     885.  00:85AE  16 C4               	LD		 D, MAPLLAMA1
     886.  00:85B0  CD 17 83            	CALL	pinta_tile_suelto
     887.  00:85B3                      	
     888.  00:85B3  01 00 18            	LD		BC, TILMAP
     889.  00:85B6  3E 97               	LD		 A, POSANTOR2
     890.  00:85B8  CD 6F 81            	CALL	suma_A_BC
     891.  00:85BB  16 C5               	LD		 D, MAPLLAMA2
     892.  00:85BD  CD 17 83            	CALL	pinta_tile_suelto	
     893.  00:85C0  C3 E2 85            	JP		fin_flip_llamas_antorchas
     894.  00:85C3                      	
     895.  00:85C3                      .llama_par
     896.  00:85C3                      	;cambio a llama par
     897.  00:85C3  3E 01                	LD		 A, 1
     898.  00:85C5  DD 77 05            	LD		(IX + 5), A
     899.  00:85C8                      	;pinto llamas
     900.  00:85C8  01 00 18            	LD		BC, TILMAP
     901.  00:85CB  3E 88               	LD		 A, POSANTOR1
     902.  00:85CD  CD 6F 81            	CALL	suma_A_BC
     903.  00:85D0  16 C5               	LD		 D, MAPLLAMA2
     904.  00:85D2  CD 17 83            	CALL	pinta_tile_suelto
     905.  00:85D5                      	
     906.  00:85D5  01 00 18            	LD		BC, TILMAP
     907.  00:85D8  3E 97               	LD		 A, POSANTOR2
     908.  00:85DA  CD 6F 81            	CALL	suma_A_BC
     909.  00:85DD  16 C4               	LD		 D, MAPLLAMA1
     910.  00:85DF  CD 17 83            	CALL	pinta_tile_suelto
     911.  00:85E2                      
     912.  00:85E2                      fin_flip_llamas_antorchas:
     913.  00:85E2                      	;restauro los balores de los registros tocados antes
     914.  00:85E2  D1                  	POP		DE
     915.  00:85E3  C1                  	POP		BC
     916.  00:85E4  F1                  	POP		AF
     917.  00:85E5                      
     918.  00:85E5  C9                  	RET
     919.  00:85E6                      
     920.  00:85E6                      
     921.  00:85E6                      ;;=====================================================
     922.  00:85E6                      ;;FLIP_CALAVERA_ESQUELETOS
     923.  00:85E6                      ;;=====================================================	
     924.  00:85E6                      ; función: 	modifica las calaveras de los esqueletos
     925.  00:85E6                      ; entrada: 	
     926.  00:85E6                      ; salida: 	
     927.  00:85E6                      ; toca:		TODOS.... muy importante DE
     928.  00:85E6                      flip_calavera_esqueletos:
     929.  00:85E6  DD 21 98 A9         	LD		IX, esqueletos
     930.  00:85EA                      	
     931.  00:85EA                      	;tiene que cambiar de calavera?
     932.  00:85EA  DD 7E 06            	LD		 A, (IX + ESTRUCTURA_ESQUELETO.cont_sig_escena)
     933.  00:85ED  3D                  	DEC		 A
     934.  00:85EE  DD 77 06            	LD		 (IX + ESTRUCTURA_ESQUELETO.cont_sig_escena), A
     935.  00:85F1                      	;no
     936.  00:85F1  C0                  	RET		NZ
     937.  00:85F2                      	;si
     938.  00:85F2  DD 36 06 19         	LD		(IX + ESTRUCTURA_ESQUELETO.cont_sig_escena), RESETESQUEL		;resetea contador de nueve escena
     939.  00:85F6                      	
     940.  00:85F6  CD 14 86            	CALL	actualiza_escena_calavera
     941.  00:85F9                      
     942.  00:85F9                      	;pinto calaveras
     943.  00:85F9  01 00 18            	LD		BC, TILMAP
     944.  00:85FC  3E A9               	LD		 A, POSCALAVE1
     945.  00:85FE  CD 6F 81            	CALL	suma_A_BC
     946.  00:8601  D5                  	PUSH	DE
     947.  00:8602  56                  	LD		 D, (HL)
     948.  00:8603  CD 17 83            	CALL	pinta_tile_suelto
     949.  00:8606                      	
     950.  00:8606  01 00 18            	LD		BC, TILMAP
     951.  00:8609  3E B6               	LD		 A, POSCALAVE2
     952.  00:860B  CD 6F 81            	CALL	suma_A_BC
     953.  00:860E  E1                  	POP		HL
     954.  00:860F  56                  	LD		 D, (HL)
     955.  00:8610  C3 17 83            	JP		pinta_tile_suelto	
     956.  00:8613                      fin_flip_calavera_esqueletos:
     957.  00:8613  00                  var_aux_calavera	DB	0;
     958.  00:8614                      
     959.  00:8614                      
     960.  00:8614                      ;;=====================================================
     961.  00:8614                      ;;ACTUALIZA_ESCENA_CALAVERA
     962.  00:8614                      ;;=====================================================	
     963.  00:8614                      ; función: 	modifica las siguiente calavera a mostrar
     964.  00:8614                      ; entrada: 	
     965.  00:8614                      ; salida: 	DE (iportante porque se usa fuera) y ESTRUCTURA_ESQUELETO.escena
     966.  00:8614                      ; toca:		TODOS.... muy importante DE
     967.  00:8614                      actualiza_escena_calavera:
     968.  00:8614                      	;consulta_escena
     969.  00:8614  DD 7E 05            	LD		 A, (IX + ESTRUCTURA_ESQUELETO.escena)
     970.  00:8617  32 13 86            	LD		(var_aux_calavera), A
     971.  00:861A  B7                  	OR		 A
     972.  00:861B  C2 20 86            	JP		 NZ, .decrementa_escenas
     973.  00:861E  3E 04               	LD		 A, RESETESCENAESQUEL
     974.  00:8620                      .decrementa_escenas
     975.  00:8620  3D                  	DEC		 A
     976.  00:8621                      .fin_consulta_escena
     977.  00:8621  DD 77 05            	LD		 (IX + ESTRUCTURA_ESQUELETO.escena), A
     978.  00:8624                      	
     979.  00:8624  21 AB A9            	LD		HL, lista_escenas_calavera
     980.  00:8627  3A 13 86            	LD		 A, (var_aux_calavera)
     981.  00:862A  CD 75 81            	CALL	suma_A_HL
     982.  00:862D                      	
     983.  00:862D  54                  	LD		 D, H
     984.  00:862E  5D                  	LD		 E, L
     985.  00:862F                      fin_actualiza_escena_calavera:
     986.  00:862F  C9                  	RET
     987.  00:8630                      
     141   00:8630                      	
     142   00:8630                      	include "subr_puertas.asm"
       1.  00:8630                      ;;=====================================================
       2.  00:8630                      ;;SUBRUTINAS RELACIONADAS CON LAS PUERTAS
       3.  00:8630                      ;;=====================================================
       4.  00:8630                      
       5.  00:8630                      
       6.  00:8630                      ;;=====================================================
       7.  00:8630                      ;;VARIABLES
       8.  00:8630                      ;;=====================================================
       9.  00:8630                      
      10.  00:8630                      ;; arrays con mapa de tiles de las puertas
      11.  00:8630                      array_puerta_arriba:
      12.  00:8630  03 01 01 03         array_puerta_arriba1:		DB	3,1,1,3
      13.  00:8634  01 01 01 01         array_puerta_arriba2:		DB	1,1,1,1
      14.  00:8638  01 01 01 01         array_puerta_arriba3:		DB	1,1,1,1
      15.  00:863C  01 01 01 01         array_puerta_arriba4:		DB	1,1,1,1
      16.  00:8640  01 01 01 01         array_puerta_arriba5:		DB	1,1,1,1
      17.  00:8644                      
      18.  00:8644                      array_puerta_derecha:
      19.  00:8644  01 03 03            array_puerta_derecha1:		DB	1,3,3
      20.  00:8647  01 01 03            array_puerta_derecha2:		DB	1,1,3
      21.  00:864A  01 01 01            array_puerta_derecha3:		DB	1,1,1
      22.  00:864D  01 01 01            array_puerta_derecha4:		DB	1,1,1
      23.  00:8650  01 01 01            array_puerta_derecha5:		DB	1,1,1
      24.  00:8653  02 01 01            array_puerta_derecha6:		DB	2,1,1
      25.  00:8656  04 02 01            array_puerta_derecha7:		DB	4,2,1
      26.  00:8659                      	
      27.  00:8659  01 01 01 01         array_puerta_abajo:			DB	1,1,1,1
      28.  00:865D                      
      29.  00:865D                      array_puerta_izquierda:
      30.  00:865D  03 03 01            array_puerta_izquierda1:	DB	3,3,1
      31.  00:8660  03 01 01            array_puerta_izquierda2:	DB	3,1,1
      32.  00:8663  01 01 01            array_puerta_izquierda3:	DB	1,1,1
      33.  00:8666  01 01 01            array_puerta_izquierda4:	DB	1,1,1
      34.  00:8669  01 01 01            array_puerta_izquierda5:	DB	1,1,1
      35.  00:866C  01 01 02            array_puerta_izquierda6:	DB	1,1,2
      36.  00:866F  01 02 04            array_puerta_izquierda7:	DB	1,2,4
      37.  00:8672                      
      38.  00:8672                      
      39.  00:8672                      
      40.  00:8672                      lista_puertas:
      41.  00:8672  00 (9)              puerta_arriba:		DS		ESTRUCTURA_PUERTA
      42.  00:867B  00 (9)              puerta_derecha:		DS		ESTRUCTURA_PUERTA
      43.  00:8684  00 (9)              puerta_abajo:		DS		ESTRUCTURA_PUERTA
      44.  00:868D  00 (9)              puerta_izquierda:	DS		ESTRUCTURA_PUERTA
      45.  00:8696                      
      46.  00:8696                      datos_puertas:
      47.  00:8696                      datos_puerta_arriba:
      48.  00:8696  00                  					DB		#00;0		;0 no activa <>0 activo
      49.  00:8697  80                  					DB		#80;128		;punto x de la puerta para cuando se dispare encima
      50.  00:8698  34                  					DB		#34;52		;punto y de la puerta para cuando se dispare encima
      51.  00:8699  10                  					DB		#10;16		;radio x de la puerta para cuando se dispare encima
      52.  00:869A  14                  					DB		#14;20		;radio y de la puerta para cuando se dispare encima
      53.  00:869B  EB 86               					DW		accion_puerta_arriba	;función para acción de cada tipo de puerta
      54.  00:869D  30 86               					DW		array_puerta_arriba		;puntero al array con los tiles de las puertas
      55.  00:869F                      
      56.  00:869F                      datos_puerta_derecha:
      57.  00:869F  00                  					DB		#00;0		;0 no activa <>0 activo
      58.  00:86A0  EC                  					DB		#EC;236		;punto x de la puerta para cuando se dispare encima
      59.  00:86A1  54                  					DB		#54;84		;punto y de la puerta para cuando se dispare encima
      60.  00:86A2  0C                  					DB		#0C;12		;radio x de la puerta para cuando se dispare encima
      61.  00:86A3  14                  					DB		#14;20		;radio y de la puerta para cuando se dispare encima
      62.  00:86A4  EB 86               					DW		accion_puerta_arriba	;función para acción de cada tipo de puerta
      63.  00:86A6  44 86               					DW		array_puerta_derecha	;puntero al array con los tiles de las puertas
      64.  00:86A8                      					
      65.  00:86A8                      datos_puerta_abajo:
      66.  00:86A8  00                  					DB		#00;0		;0 no activa <>0 activo
      67.  00:86A9  80                  					DB		#80;128		;punto x de la puerta para cuando se dispare encima
      68.  00:86AA  7C                  					DB		#7C;124		;punto y de la puerta para cuando se dispare encima
      69.  00:86AB  05                  					DB		#05;5		;radio x de la puerta para cuando se dispare encima
      70.  00:86AC  10                  					DB		#10;16		;radio y de la puerta para cuando se dispare encima
      71.  00:86AD  EB 86               					DW		accion_puerta_arriba	;función para acción de cada tipo de puerta
      72.  00:86AF  59 86               					DW		array_puerta_abajo		;puntero al array con los tiles de las puertas
      73.  00:86B1                      					
      74.  00:86B1                      datos_puerta_izquierda:
      75.  00:86B1  00                  					DB		#00;0		;0 no activa <>0 activo
      76.  00:86B2  18                  					DB		#18;24		;punto x de la puerta para cuando se dispare encima
      77.  00:86B3  54                  					DB		#54;84		;punto y de la puerta para cuando se dispare encima
      78.  00:86B4  0C                  					DB		#0C;12		;radio x de la puerta para cuando se dispare encima
      79.  00:86B5  14                  					DB		#14;20		;radio y de la puerta para cuando se dispare encima
      80.  00:86B6  EB 86               					DW		accion_puerta_arriba	;función para acción de cada tipo de puerta
      81.  00:86B8  5D 86               					DW		array_puerta_izquierda	;puntero al array con los tiles de las puertas
      82.  00:86BA                      
      83.  00:86BA                      
      84.  00:86BA                      
      85.  00:86BA                      ;;=====================================================
      86.  00:86BA                      ;;SUBRUTINAS
      87.  00:86BA                      ;;=====================================================
      88.  00:86BA                      
      89.  00:86BA                      
      90.  00:86BA                      ;;=====================================================
      91.  00:86BA                      ;;INICIALIZA_PUERTAS
      92.  00:86BA                      ;;=====================================================	
      93.  00:86BA                      ; función: 	inicializa las variables de estructuras de ayuda del array lista_puertas
      94.  00:86BA                      ; entrada: 	*********************datos_delasdistintasayudas, variable estructura_ayuda_ayudaquesea
      95.  00:86BA                      ; salida: 	lista_ayudas
      96.  00:86BA                      ; toca:		-
      97.  00:86BA                      inicializa_puertas:
      98.  00:86BA  E5                  	PUSH	HL
      99.  00:86BB  C5                  	PUSH	BC
     100.  00:86BC  D5                  	PUSH	DE
     101.  00:86BD                      	
     102.  00:86BD                      	;inicializa puerta arriba
     103.  00:86BD  21 96 86            	LD		HL, datos_puerta_arriba		;origen
     104.  00:86C0  11 72 86            	LD		DE, puerta_arriba			;destino
     105.  00:86C3  CD E5 86            	CALL	carga_datos_puerta
     106.  00:86C6                      	
     107.  00:86C6                      	;inicializa puerta derecha
     108.  00:86C6  21 9F 86            	LD		HL, datos_puerta_derecha	;origen
     109.  00:86C9  11 7B 86            	LD		DE, puerta_derecha			;destino
     110.  00:86CC  CD E5 86            	CALL	carga_datos_puerta
     111.  00:86CF                      	
     112.  00:86CF                      	;inicializa puerta abajo
     113.  00:86CF  21 A8 86            	LD		HL, datos_puerta_abajo	;origen
     114.  00:86D2  11 84 86            	LD		DE, puerta_abajo			;destino
     115.  00:86D5  CD E5 86            	CALL	carga_datos_puerta
     116.  00:86D8                      	
     117.  00:86D8                      	;inicializa puerta izquierda
     118.  00:86D8  21 B1 86            	LD		HL, datos_puerta_izquierda	;origen
     119.  00:86DB  11 8D 86            	LD		DE, puerta_izquierda		;destino
     120.  00:86DE  CD E5 86            	CALL	carga_datos_puerta
     121.  00:86E1                      	
     122.  00:86E1  D1                  	POP		DE
     123.  00:86E2  C1                  	POP		BC
     124.  00:86E3  E1                  	POP		HL
     125.  00:86E4                      fin_inicializa_puertas:
     126.  00:86E4  C9                  	RET
     127.  00:86E5                      
     128.  00:86E5                      
     129.  00:86E5                      
     130.  00:86E5                      
     131.  00:86E5                      
     132.  00:86E5                      ;;=====================================================
     133.  00:86E5                      ;;CARGA_DATOS_PUERTA
     134.  00:86E5                      ;;=====================================================	
     135.  00:86E5                      ; función: 	carga los datos de la puerta de una variable con los datos de la puerta
     136.  00:86E5                      ; entrada
     137.  00:86E5                      ;  hl: origen de datos
     138.  00:86E5                      ;  de: destino de datos
     139.  00:86E5                      ; salida: 	-
     140.  00:86E5                      ; toca:		HL, DE, BC
     141.  00:86E5                      carga_datos_puerta:
     142.  00:86E5  01 09 00            	LD		BC, ESTRUCTURA_PUERTA ;bytes a mover (el nombre de la estructura equivale al tamaño de la estructura en bytes)
     143.  00:86E8  ED B0               	LDIR
     144.  00:86EA                      fin_carga_datos_puerta:
     145.  00:86EA  C9                  	RET
     146.  00:86EB                      
     147.  00:86EB                      
     148.  00:86EB                      ;;=====================================================
     149.  00:86EB                      ;;ACCION_PUERTA_ARRIBA
     150.  00:86EB                      ;;=====================================================	
     151.  00:86EB                      ; función: 	
     152.  00:86EB                      ; entrada: 	
     153.  00:86EB                      ; salida: 	
     154.  00:86EB                      accion_puerta_arriba:
     155.  00:86EB                      fin_accion_puerta_arriba:
     156.  00:86EB  C9                  	RET
     157.  00:86EC                      
     158.  00:86EC                      
     159.  00:86EC                      ;;=====================================================
     160.  00:86EC                      ;;ACCION_PUERTA_DERECHA
     161.  00:86EC                      ;;=====================================================	
     162.  00:86EC                      ; función: 	
     163.  00:86EC                      ; entrada: 	
     164.  00:86EC                      ; salida: 	
     165.  00:86EC                      accion_puerta_derecha:
     166.  00:86EC                      fin_accion_puerta_derecha:
     167.  00:86EC  C9                  	RET
     168.  00:86ED                      	
     169.  00:86ED                      
     170.  00:86ED                      ;;=====================================================
     171.  00:86ED                      ;;ACCION_PUERTA_ABAJO
     172.  00:86ED                      ;;=====================================================	
     173.  00:86ED                      ; función: 	
     174.  00:86ED                      ; entrada: 	
     175.  00:86ED                      ; salida: 	
     176.  00:86ED                      accion_puerta_abajo:
     177.  00:86ED                      fin_accion_puerta_abajo:
     178.  00:86ED  C9                  	RET
     179.  00:86EE                      	
     180.  00:86EE                      	
     181.  00:86EE                      ;;=====================================================
     182.  00:86EE                      ;;ACCION_PUERTA_IZQUIERDA
     183.  00:86EE                      ;;=====================================================	
     184.  00:86EE                      ; función: 	
     185.  00:86EE                      ; entrada: 	
     186.  00:86EE                      ; salida: 	
     187.  00:86EE                      accion_puerta_izquierda:
     188.  00:86EE                      fin_accion_puerta_izquierda:
     189.  00:86EE  C9                  	RET
     190.  00:86EF                      	
     191.  00:86EF                      
     192.  00:86EF                      ;;=====================================================
     193.  00:86EF                      ;;PINTA_PUERTAS
     194.  00:86EF                      ;;=====================================================	
     195.  00:86EF                      ; función: 	examina A y mira si tiene que pintar puertas de los lados, arriba o abrajo o las escaleras (o no)
     196.  00:86EF                      ; entrada: 	habitacion_actual 1 escalera 1 puerta arriba 1 pu der 1 pu aba 1 pu izq (si es 0 pinta pared)
     197.  00:86EF                      ; salida: 	-
     198.  00:86EF                      ; toca:		todo
     199.  00:86EF                      pinta_puertas:
     200.  00:86EF  CD B4 81            	CALL	pinta_parte_superior_pantalla	;pinta pasillo y paredes
     201.  00:86F2                      
     202.  00:86F2  CD 03 81            	CALL	localiza_info_habitacion	;busca qué puertas debe pintar y lo mete en habitación_actual
     203.  00:86F5                      	
     204.  00:86F5  3A 29 A5            	LD		 A, (habitacion_actual)		;se mete en A porque la función pide A y para no buscar el valor 4 veces
     205.  00:86F8                      
     206.  00:86F8                      ;	BIT		 4, A
     207.  00:86F8                      ;	CALL	nz, pinta_escalera
     208.  00:86F8                      
     209.  00:86F8  CB 5F               	BIT		 3, A
     210.  00:86FA  C4 2F 87            	CALL	nz, pinta_puerta_arr
     211.  00:86FD                      
     212.  00:86FD  CB 57               	BIT		 2, A
     213.  00:86FF  C4 51 87            	CALL	nz, pinta_puerta_der
     214.  00:8702                      
     215.  00:8702  CB 4F               	BIT		 1, A
     216.  00:8704  C4 0D 87            	CALL	nz, pinta_puerta_aba
     217.  00:8707                      	
     218.  00:8707  CB 47               	BIT		 0, A
     219.  00:8709  C4 73 87            	CALL	nz, pinta_puerta_izq
     220.  00:870C                      fin_pinta_puertas:
     221.  00:870C  C9                  	RET
     222.  00:870D                      
     223.  00:870D                      
     224.  00:870D                      ;;=====================================================
     225.  00:870D                      ;;PINTA_PUERTA_ABA
     226.  00:870D                      ;;=====================================================	
     227.  00:870D                      ; función: 	pinta la puerta de abajo
     228.  00:870D                      ; entrada: 	array_puerta_abajo, wordaux2, wordaux1
     229.  00:870D                      ; salida: 	-
     230.  00:870D                      ; toca:		HL,BC, DE
     231.  00:870D                      pinta_puerta_aba:
     232.  00:870D  F5                  	PUSH	AF
     233.  00:870E                      	
     234.  00:870E  DD 21 84 86         	LD		IX, puerta_abajo
     235.  00:8712  DD 6E 07            	LD		 L, (IX + ESTRUCTURA_PUERTA.tiles_puerta)			;guardo puntero al array a pintar (como pasar por referencia)
     236.  00:8715  DD 66 08            	LD		 H, (IX + ESTRUCTURA_PUERTA.tiles_puerta + 1)
     237.  00:8718                      	
     238.  00:8718  22 B0 84            	LD		(wordaux2), HL					;en la variable wordaux2
     239.  00:871B  21 EE 19            	LD		HL, TILMAP + POSPUERABAJ		;calcula posición en tilemap
     240.  00:871E  22 AE 84            	LD		(wordaux1), HL					;guarda valor pos tilemap en wordaux1
     241.  00:8721                      
     242.  00:8721  3E 01               	LD		 A, 1							;nº de filas
     243.  00:8723  32 B2 84            	LD		(byteaux1), A
     244.  00:8726  3E 04               	LD		 A, 4							;nº de columnas
     245.  00:8728  32 B3 84            	LD		(byteaux2), A
     246.  00:872B                      	
     247.  00:872B  F1                  	POP		AF
     248.  00:872C                      	
     249.  00:872C  C3 6E 84            	JP		pinta_array
     250.  00:872F                      fin_pinta_puerta_aba:
     251.  00:872F                      
     252.  00:872F                      
     253.  00:872F                      ;;=====================================================
     254.  00:872F                      ;;PINTA_PUERTA_ARR
     255.  00:872F                      ;;=====================================================	
     256.  00:872F                      ; función: 	pinta la puerta de arriba
     257.  00:872F                      ; entrada: 	array_puerta_arriba, wordaux2, wordaux1
     258.  00:872F                      ; salida: 	-
     259.  00:872F                      ; toca:		HL,BC, DE
     260.  00:872F                      pinta_puerta_arr:
     261.  00:872F  F5                  	PUSH	AF
     262.  00:8730                      	
     263.  00:8730  DD 21 72 86         	LD		IX, puerta_arriba
     264.  00:8734  DD 6E 07            	LD		 L, (IX + ESTRUCTURA_PUERTA.tiles_puerta)			;guardo puntero al array a pintar (como pasar por referencia)
     265.  00:8737  DD 66 08            	LD		 H, (IX + ESTRUCTURA_PUERTA.tiles_puerta + 1)
     266.  00:873A                      	
     267.  00:873A  22 B0 84            	LD		(wordaux2), HL					;en la variable wordaux2
     268.  00:873D  21 8E 18            	LD		HL, TILMAP + POSPUERARRI		;calcula posición en tilemap
     269.  00:8740  22 AE 84            	LD		(wordaux1), HL					;guarda valor pos tilemap en wordaux1
     270.  00:8743  3E 05               	LD		 A, 5							;nº de filas
     271.  00:8745  32 B2 84            	LD		(byteaux1), A
     272.  00:8748  3E 04               	LD		 A, 4							;nº de columnas
     273.  00:874A  32 B3 84            	LD		(byteaux2), A
     274.  00:874D                      	
     275.  00:874D  F1                  	POP		AF
     276.  00:874E                      	
     277.  00:874E  C3 6E 84            	JP		pinta_array
     278.  00:8751                      fin_pinta_puerta_arr:
     279.  00:8751                      
     280.  00:8751                      
     281.  00:8751                      ;;=====================================================
     282.  00:8751                      ;;PINTA_PUERTA_DER
     283.  00:8751                      ;;=====================================================	
     284.  00:8751                      ; función: 	pinta la puerta de la derecha
     285.  00:8751                      ; entrada: 	array_puerta_derecha, wordaux2, wordaux1
     286.  00:8751                      ; salida: 	-
     287.  00:8751                      ; toca:		HL,BC, DE
     288.  00:8751                      pinta_puerta_der:
     289.  00:8751  F5                  	PUSH	AF
     290.  00:8752                      	
     291.  00:8752  DD 21 7B 86         	LD		IX, puerta_derecha
     292.  00:8756  DD 6E 07            	LD		 L, (IX + ESTRUCTURA_PUERTA.tiles_puerta)			;guardo puntero al array a pintar (como pasar por referencia)
     293.  00:8759  DD 66 08            	LD		 H, (IX + ESTRUCTURA_PUERTA.tiles_puerta + 1)
     294.  00:875C                      	
     295.  00:875C  22 B0 84            	LD		(wordaux2), HL					;en la variable wordaux2
     296.  00:875F  21 FC 18            	LD		HL, TILMAP + POSPUERDERE		;calcula posición en tilemap
     297.  00:8762  22 AE 84            	LD		(wordaux1), HL					;guarda valor pos tilemap en wordaux1
     298.  00:8765                      
     299.  00:8765  3E 07               	LD		 A, 7							;nº de filas
     300.  00:8767  32 B2 84            	LD		(byteaux1), A
     301.  00:876A  3E 03               	LD		 A, 3							;nº de columnas
     302.  00:876C  32 B3 84            	LD		(byteaux2), A
     303.  00:876F                      	
     304.  00:876F  F1                  	POP		AF
     305.  00:8770                      	
     306.  00:8770  C3 6E 84            	JP		pinta_array
     307.  00:8773                      fin_pinta_puerta_der:
     308.  00:8773                      
     309.  00:8773                      	
     310.  00:8773                      ;;=====================================================
     311.  00:8773                      ;;PINTA_PUERTA_IZQ
     312.  00:8773                      ;;=====================================================	
     313.  00:8773                      ; función: 	pinta la puerta de la izquierda
     314.  00:8773                      ; entrada: 	array_puerta_izquierda, wordaux2, wordaux1
     315.  00:8773                      ; salida: 	-
     316.  00:8773                      ; toca:		HL,BC, DE
     317.  00:8773                      pinta_puerta_izq:
     318.  00:8773  F5                  	PUSH	AF
     319.  00:8774                      	
     320.  00:8774  DD 21 8D 86         	LD		IX, puerta_izquierda
     321.  00:8778  DD 6E 07            	LD		 L, (IX + ESTRUCTURA_PUERTA.tiles_puerta)			;guardo puntero al array a pintar (como pasar por referencia)
     322.  00:877B  DD 66 08            	LD		 H, (IX + ESTRUCTURA_PUERTA.tiles_puerta + 1)
     323.  00:877E                      	
     324.  00:877E  22 B0 84            	LD		(wordaux2), HL					;en la variable wordaux2
     325.  00:8781  21 E1 18            	LD		HL, TILMAP + POSPUERIZQU		;calcula posición en tilemap
     326.  00:8784  22 AE 84            	LD		(wordaux1), HL					;guarda valor pos tilemap en wordaux1
     327.  00:8787                      
     328.  00:8787  3E 07               	LD		 A, 7							;nº de filas
     329.  00:8789  32 B2 84            	LD		(byteaux1), A
     330.  00:878C  3E 03               	LD		 A, 3							;nº de columnas
     331.  00:878E  32 B3 84            	LD		(byteaux2), A
     332.  00:8791                      	
     333.  00:8791  F1                  	POP		AF
     334.  00:8792                      	
     335.  00:8792  C3 6E 84            	JP		pinta_array
     336.  00:8795                      fin_pinta_puerta_izq:
     337.  00:8795                      
     338.  00:8795                      
     143   00:8795                      	
     144   00:8795                      	include "subr_sprites.asm"
       1.  00:8795                      
       2.  00:8795                      ;;=====================================================
       3.  00:8795                      ;;SUBRUTINAS ENCARGADAS DE MANEJAR LOS SPRITES
       4.  00:8795                      ;;=====================================================	
       5.  00:8795                      
       6.  00:8795                      
       7.  00:8795                      ;; PREGUNTAR SI A FERNANDO SI ES MEJOR USAR LISTAS O ALGO PARA AHORRAR CÓDIGO
       8.  00:8795                      
       9.  00:8795                      
      10.  00:8795                      
      11.  00:8795                      
      12.  00:8795                      ;;=====================================================
      13.  00:8795                      ;;CARGA_PATRONES_SPRITES_NIVEL
      14.  00:8795                      ;;=====================================================	
      15.  00:8795                      ; función: 	examina el nivel y carga los patrones específicos necesarios
      16.  00:8795                      ; entrada: 	-
      17.  00:8795                      ; salida: 	-
      18.  00:8795                      ; toca: 	-
      19.  00:8795                      carga_patrones_sprites_nivel:
      20.  00:8795  CD 99 87            	CALL 	carga_patrones_nivel_comunes
      21.  00:8798                      	
      22.  00:8798  C9                  	RET		;*********************
      23.  00:8799                      	
      24.  00:8799                      	
      25.  00:8799                      	;POR AHORA ES TODO COMÚN ... CUANDO EL JUGADOR SE MUEVA LOS PATRONES SERÁN DEPENDIENDO DEL NIVEL
      26.  00:8799                      	; O NO Y LO QUE SE HACE ES PERSONALIZAR LA PANTALLA USANDO LOS MISMOS PATRONES PERO PINTANDO DISTINTOS
      27.  00:8799                      	; EN DISTINTOS SITIOS SEGÚN NIVEL
      28.  00:8799                      	
      29.  00:8799                      	;~ ;carga patrones no comunes
      30.  00:8799                      	;~ LD		 A, (prota_nivel)
      31.  00:8799                      	;~ OR		 A
      32.  00:8799                      	;~ JP		 Z, carga_patrones_sprites_nivel donde esté el prota
      33.  00:8799                      fin_carga_patrones_sprites_nivel:
      34.  00:8799                      
      35.  00:8799                      
      36.  00:8799                      ;;=====================================================
      37.  00:8799                      ;;CARGA_PATRONES_SPRITES_NIVEL_COMUNES
      38.  00:8799                      ;;=====================================================	
      39.  00:8799                      ; función: 	carga los patrones comunes en todos los niveles
      40.  00:8799                      ; entrada: 	-
      41.  00:8799                      ; salida: 	-
      42.  00:8799                      ; toca: 	-
      43.  00:8799                      carga_patrones_nivel_comunes:	
      44.  00:8799  21 A9 9B            	LD		HL, sprites_comunes
      45.  00:879C  11 00 38            	LD		DE, SPRTBL
      46.  00:879F  01 C0 00            	LD		BC, fin_sprites_comunes-sprites_comunes
      47.  00:87A2  C3 5C 00            	JP		LDIRVM
      48.  00:87A5                      fin_carga_patrones_nivel_comunes:
      49.  00:87A5                      
      50.  00:87A5                      
      51.  00:87A5                      ;;=====================================================
      52.  00:87A5                      ;;CARGA_PATRONES_SPRITES_NIVEL1
      53.  00:87A5                      ;;=====================================================	
      54.  00:87A5                      ; función: 	copia los patrones de los sprites que e van a usar en el nivel 1 en vram
      55.  00:87A5                      ; entrada: 	-
      56.  00:87A5                      ; salida: 	-
      57.  00:87A5                      ; toca: 	-
      58.  00:87A5                      carga_patrones_sprites_nivel1:
      59.  00:87A5                      
      60.  00:87A5                      	;~ ;sprite sprite_reliquia
      61.  00:87A5                      	;~ LD		HL,sprite_reliquia
      62.  00:87A5                      	;~ LD		DE,#3880
      63.  00:87A5                      	;~ LD		BC,32				;32 bytes (sprites de 2 x 2)
      64.  00:87A5                      	;~ CALL	LDIRVM
      65.  00:87A5                      
      66.  00:87A5                      fin_carga_patrones_sprites:
      67.  00:87A5  C9                  	RET
      68.  00:87A6                      
      69.  00:87A6                      
      70.  00:87A6                      ;;=====================================================
      71.  00:87A6                      ;;ACTUALIZA_ARRAY_SPRITES_VRAM
      72.  00:87A6                      ;;=====================================================	
      73.  00:87A6                      ; función: 	copia el array con los valores de los sprites (pos, color, plano) en VRAM
      74.  00:87A6                      ; entrada: 	-
      75.  00:87A6                      ; salida: 	-
      76.  00:87A6                      ; toca: 	todos los registros. Como me interesa la velocidad, si necesito copiar de algo lo hago fuera
      77.  00:87A6                      render_sprites:
      78.  00:87A6                      	;volcando el array con toda la info de los sprites a la zona de atributos de sprites
      79.  00:87A6  21 AF A9            	LD		HL,array_sprites
      80.  00:87A9  11 00 1B            	LD		DE,SPRART
      81.  00:87AC  01 80 00            	LD		BC,4 * 32				;32 sprites x 4 bytes controlando el sprite (Y, X, plano, color)
      82.  00:87AF  C3 5C 00            	JP		LDIRVM
      83.  00:87B2                      fin_actualiza_array_sprites_vram:
      84.  00:87B2                      
      85.  00:87B2                      
      86.  00:87B2                      ;;=====================================================
      87.  00:87B2                      ;;VUELCA_RESULTADO_PUNTOMIRA_ARRAY
      88.  00:87B2                      ;;=====================================================	
      89.  00:87B2                      ; función: 	coloca los valores del punto de mira en la variable array_sprites para ser volcados en VRAM
      90.  00:87B2                      ; entrada: 	array_sprites_pm, prota.XXXXX
      91.  00:87B2                      ; salida: 	-
      92.  00:87B2                      ; toca: 	-
      93.  00:87B2                      vuelca_resultado_puntomira_array:
      94.  00:87B2  DD 21 AF A9         	LD		IX, array_sprites_pm
      95.  00:87B6                      	;posición y de los dos sprites que conforman el punto de mira
      96.  00:87B6  3A 48 A8            	LD		 A, (prota.posy)
      97.  00:87B9  DD 77 00            	LD		(IX  ), A
      98.  00:87BC  DD 77 04            	LD		(IX+4), A
      99.  00:87BF                      	;posición x de los dos sprites que conforman el punto de mira
     100.  00:87BF  3A 47 A8            	LD		 A, (prota.posx)
     101.  00:87C2  DD 77 01            	LD		(IX+1), A
     102.  00:87C5  DD 77 05            	LD		(IX+5), A
     103.  00:87C8                      	;plano
     104.  00:87C8  DD 36 02 00         	LD		(IX+2), 0
     105.  00:87CC  DD 36 06 04         	LD		(IX+6), 4	;al ser sprites de 16x16 hay que ir de 4 en 4
     106.  00:87D0                      	;color
     107.  00:87D0  3A 49 A8            	LD		 A, (prota.escena)
     108.  00:87D3  B7                  	OR		 A
     109.  00:87D4  C2 E0 87            	JP		NZ,.codigo_color_2
     110.  00:87D7                      .codigo_color_1:
     111.  00:87D7  DD 36 03 0F         	LD		(IX+3), COLBLANCO
     112.  00:87DB  DD 36 07 08         	LD		(IX+7), COLROJO
     113.  00:87DF  C9                  	RET
     114.  00:87E0                      .codigo_color_2:
     115.  00:87E0  DD 36 03 08         	LD		(IX+3), COLROJO
     116.  00:87E4  DD 36 07 0F         	LD		(IX+7), COLBLANCO
     117.  00:87E8  C9                  	RET
     118.  00:87E9                      fin_vuelca_resultado_puntomira_array:
     119.  00:87E9                      
     120.  00:87E9                      
     121.  00:87E9                      ;;=====================================================
     122.  00:87E9                      ;;CHECK_PLAYER
     123.  00:87E9                      ;;=====================================================	
     124.  00:87E9                      ; función: 	MIRA EL CONTROL Y APLICA LA LOGICA DE MOVIMIENTO DEL PROTAGONISTA
     125.  00:87E9                      ; entrada: 	-
     126.  00:87E9                      ; salida: 	-
     127.  00:87E9                      ; toca: 	A
     128.  00:87E9                      check_player:
     129.  00:87E9  CD 88 88            	CALL	update_controllers_status
     130.  00:87EC  B7                  	OR		 A
     131.  00:87ED  C8                  	RET		 Z						;si no se ha pulsado nada no se necesita mirar nada
     132.  00:87EE                      
     133.  00:87EE  CB 1F               	RR		 A
     134.  00:87F0  DC 09 88            	CALL	 C, mueve_arriba
     135.  00:87F3  CB 1F               	RR		 A
     136.  00:87F5  DC 25 88            	CALL	 C, mueve_abajo
     137.  00:87F8  CB 1F               	RR		 A
     138.  00:87FA  DC 34 88            	CALL	 C, mueve_izquierda
     139.  00:87FD  CB 1F               	RR		 A
     140.  00:87FF  DC 16 88            	CALL	 C, mueve_derecha
     141.  00:8802                      	
     142.  00:8802                      	;zona para mirar disparo Recibe A que tendrá 0000 0 0 X-letra M X-espacio 
     143.  00:8802  CD 41 88            	CALL	mira_disparo
     144.  00:8805                      	
     145.  00:8805  C3 B2 87            	JP		vuelca_resultado_puntomira_array
     146.  00:8808                      f;in_check_player:
     147.  00:8808  C9                  	RET
     148.  00:8809                      
     145   00:8809                      	
     146   00:8809                      	include "subr_teclado_joy.asm"
       1.  00:8809                      ;;=====================================================
       2.  00:8809                      ;;SUBRUTINAS QUE CAPTURAN EL JOYSTICK Y TECLADO Y MUEVEN PUNTO DE MIRA
       3.  00:8809                      ;;=====================================================
       4.  00:8809                      
       5.  00:8809                      ;;=====================================================
       6.  00:8809                      ;;MUEVE_ARRIBA
       7.  00:8809                      ;;=====================================================	
       8.  00:8809                      ; función: 	decrementa y si se no sale de los límites el valor del punto de mira a la derecha
       9.  00:8809                      ; entrada: 	-
      10.  00:8809                      ; salida: 	-
      11.  00:8809                      ; toca: 	-
      12.  00:8809                      mueve_arriba:
      13.  00:8809  F5                  	PUSH		AF
      14.  00:880A                      	
      15.  00:880A  3A 48 A8            	LD		 	 A, (prota.posy)
      16.  00:880D  3D                  	DEC			 A
      17.  00:880E  CA 14 88            	JP			 Z,.no_decrementa_y
      18.  00:8811  32 48 A8            	LD			(prota.posy), A
      19.  00:8814                      	
      20.  00:8814                      .no_decrementa_y:
      21.  00:8814  F1                  	POP			AF
      22.  00:8815                      fin_mueve_arriba:
      23.  00:8815  C9                  	RET
      24.  00:8816                      
      25.  00:8816                      
      26.  00:8816                      ;;=====================================================
      27.  00:8816                      ;;MUEVE_DERECHA
      28.  00:8816                      ;;=====================================================	
      29.  00:8816                      ; función: 	incrementa si se no sale de los límites el valor del punto de mira a la derecha
      30.  00:8816                      ; entrada: 	-
      31.  00:8816                      ; salida: 	-
      32.  00:8816                      ; toca: 	-
      33.  00:8816                      mueve_derecha:
      34.  00:8816  F5                  	PUSH		AF
      35.  00:8817                      	
      36.  00:8817  3A 47 A8            	LD		 	 A, (prota.posx)
      37.  00:881A  3C                  	INC			 A
      38.  00:881B  FE EF               	CP			 A, LIMPANTDER - 16
      39.  00:881D  CA 23 88            	JP			 Z, .no_incrementa_x
      40.  00:8820  32 47 A8            	LD			(prota.posx), A
      41.  00:8823                      	
      42.  00:8823                      .no_incrementa_x:
      43.  00:8823  F1                  	POP			AF
      44.  00:8824                      fin_mueve_derecha:
      45.  00:8824  C9                  	RET
      46.  00:8825                      
      47.  00:8825                      
      48.  00:8825                      ;;=====================================================
      49.  00:8825                      ;;MUEVE_ABAJO
      50.  00:8825                      ;;=====================================================	
      51.  00:8825                      ; función: 	incrementa y si se no sale de los límites el valor del punto de mira abajo
      52.  00:8825                      ; entrada: 	-
      53.  00:8825                      ; salida: 	-
      54.  00:8825                      ; toca: 	-
      55.  00:8825                      mueve_abajo:
      56.  00:8825  F5                  	PUSH		AF
      57.  00:8826                      	
      58.  00:8826  3A 48 A8            	LD		 	 A, (prota.posy)
      59.  00:8829  3C                  	INC			 A
      60.  00:882A  FE 70               	CP			 A, LIMPANTABA - 16
      61.  00:882C  CA 32 88            	JP			 Z,.no_incrementa_y
      62.  00:882F  32 48 A8            	LD			(prota.posy), A
      63.  00:8832                      	
      64.  00:8832                      .no_incrementa_y:
      65.  00:8832  F1                  	POP			AF
      66.  00:8833                      fin_mueve_abajo:
      67.  00:8833  C9                  	RET
      68.  00:8834                      	
      69.  00:8834                      	
      70.  00:8834                      ;;=====================================================
      71.  00:8834                      ;;MUEVE_IZQUIERDA
      72.  00:8834                      ;;=====================================================	
      73.  00:8834                      ; función: 	decrementa x si se no sale de los límites el valor del punto de mira a la izquierda
      74.  00:8834                      ; entrada: 	-
      75.  00:8834                      ; salida: 	-
      76.  00:8834                      ; toca: 	-
      77.  00:8834                      mueve_izquierda:
      78.  00:8834  F5                  	PUSH		AF
      79.  00:8835                      	
      80.  00:8835  3A 47 A8            	LD		 	 A, (prota.posx)
      81.  00:8838  3D                  	DEC			 A
      82.  00:8839                      ;	CP			 A, LIMPANTIZQ
      83.  00:8839  CA 3F 88            	JP			 Z,.no_decrementa_x
      84.  00:883C  32 47 A8            	LD			(prota.posx), A
      85.  00:883F                      	
      86.  00:883F                      .no_decrementa_x:
      87.  00:883F  F1                  	POP			AF
      88.  00:8840                      fin_mueve_izquierda:
      89.  00:8840  C9                  	RET
      90.  00:8841                      
      91.  00:8841                      
      92.  00:8841                      
      93.  00:8841                      ;;=====================================================
      94.  00:8841                      ;;MIRA_DISPARO
      95.  00:8841                      ;;=====================================================	
      96.  00:8841                      ; función: 	Mira si se ha pulsado alguno de los dos disparos
      97.  00:8841                      ; entrada: 	A que tendrá 0000 0 0 X-letra M X-espacio 
      98.  00:8841                      ; salida: 	-
      99.  00:8841                      ; toca: 	A, B
     100.  00:8841                      mira_disparo:
     101.  00:8841                      .mira_boton_pulsado1:
     102.  00:8841  CB 1F               	RR		 A						;preparo en el carry si se ha pulsado botón 1
     103.  00:8843  D2 6C 88            	JP		 NC, .mira_boton_pulsado2					
     104.  00:8846  F5                  	PUSH	AF						;copia A para usarlo después
     105.  00:8847                      	;se ha pulsado barra o boton 1
     106.  00:8847  3A 4C A8            	LD		 A, (prota.cadencia)
     107.  00:884A  B7                  	OR		 A
     108.  00:884B  CA 59 88            	JP		 Z, .efectua_disparo	;toca efectuar disparo realmente porque se ha pulsado lo suficiente el disparo
     109.  00:884E                      .no_efectua_disparo: ;IF
     110.  00:884E  3D                  		DEC		 A
     111.  00:884F  32 4C A8            		LD		(prota.cadencia), A	;resto cadencia hasta próximo disparo "real" (no automático por haber pulsado una tecla e ir demasiado rápido)
     112.  00:8852  AF                  		XOR		 A 
     113.  00:8853  32 49 A8            		LD		(prota.escena), A
     114.  00:8856  C3 6B 88            		JP		.fin_mira_disparo1
     115.  00:8859                      .efectua_disparo:	;ELSE
     116.  00:8859                      		;cambio colores del sprite
     117.  00:8859  3A 49 A8            		LD		 A, (prota.escena)
     118.  00:885C  2F                  		CPL		 
     119.  00:885D  32 49 A8            		LD		(prota.escena), A
     120.  00:8860                      		;reseteo cadencia para el próximo disparo
     121.  00:8860  3E 04               		LD		 A, LIMCADENCIA						;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
     122.  00:8862  32 4C A8            		LD		 (prota.cadencia), A				;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
     123.  00:8865                      		;ejecuto sonido								;; ajustar cadencia y que cuando el disparo sea efectivo se reseteen los colores
     124.  00:8865  AF                  		XOR		 A
     125.  00:8866  0E 01               		LD		 C, 1
     126.  00:8868  CD 30 8F            		CALL	ayFX_INIT
     127.  00:886B                      		
     128.  00:886B                      		
     129.  00:886B                      		
     130.  00:886B                      		
     131.  00:886B                      		;CREAR ESTRUCTURAS PARA LAS PUERTAS Y ARRAY PARA MIRARLAS
     132.  00:886B                      		;CALL	check_colisiones ************************
     133.  00:886B                      		
     134.  00:886B                      		
     135.  00:886B                      		
     136.  00:886B                      		
     137.  00:886B                      		
     138.  00:886B                      		
     139.  00:886B                      .fin_mira_disparo1
     140.  00:886B  F1                  	POP		AF
     141.  00:886C                      
     142.  00:886C                      .mira_boton_pulsado2:
     143.  00:886C  CB 1F               	RR		 A
     144.  00:886E  D0                  	RET		 NC
     145.  00:886F                      	;se ha pulsado shift o boton 2
     146.  00:886F                      	
     147.  00:886F  3A 59 A8            	LD		 A, (prota_reliquias)	;miro si le quedan reliquias
     148.  00:8872  B7                  	OR		 A
     149.  00:8873  C8                  	RET		 Z						;si no le quedan salgo ya
     150.  00:8874                      	
     151.  00:8874                      	;actuaciones si se usa la reliquia botón 2 o M y quedn reliquias.. (antes ya se puso el valor en A)
     152.  00:8874  3A 59 A8            	LD		A, (prota_reliquias)
     153.  00:8877  3D                  	DEC		 A
     154.  00:8878  32 59 A8            	LD		(prota_reliquias), A
     155.  00:887B                      	
     156.  00:887B  3E 01               	LD		 A, 1
     157.  00:887D  0E 01               	LD		 C, 1
     158.  00:887F  CD 30 8F            	CALL	ayFX_INIT
     159.  00:8882                      	
     160.  00:8882  CD 54 84            	CALL 	efecto_imagen_tira_reliquia
     161.  00:8885                      	
     162.  00:8885  C3 FC 82            	JP		pinta_reliquias
     163.  00:8888                      fin_mira_disparo:
     164.  00:8888                      ;	RET		
     165.  00:8888                      
     166.  00:8888                      
     167.  00:8888                      ;;============================================================
     168.  00:8888                      ;;Código de D. Fernando García (BitVision) (al que siempre le estaré agradecido)
     169.  00:8888                      ;check_8th_keyboard_row
     170.  00:8888                      ;read_joy_0
     171.  00:8888                      ;check_8th_keyboard_row
     172.  00:8888                      ;check_4th_keyboard_row
     173.  00:8888                      ;;============================================================
     174.  00:8888                      ;;  usa constantes:
     175.  00:8888                      ;PSG_A  equ  0a0h  ;reg address
     176.  00:8888                      ;PSG_W  equ  0a1h  ;reg data WR
     177.  00:8888                      ;PSG_R  equ  0a2h  ;reg data
     178.  00:8888                      
     179.  00:8888                      ;;=====================================================
     180.  00:8888                      ;;update_controllers_status
     181.  00:8888                      ;;=====================================================	
     182.  00:8888                      ;depends on the next rountine
     183.  00:8888                      ;  returns
     184.  00:8888                      ;  a - 0P2TRLDU
     185.  00:8888                      
     186.  00:8888                      update_controllers_status:
     187.  00:8888  CD D3 88                 call  check_8th_keyboard_row
     188.  00:888B                      [4]  rrc    a
     188.  00:888B  CB 0F CB 0F CB 0F CB 0F 
     189.  00:8893  47                       ld    b,a    		;save for later  xxxTRDUL
     190.  00:8894                      
     191.  00:8894  E6 01                    and    #01    		;save L
     192.  00:8896  CB 27                    sla    a
     193.  00:8898  CB 27                    sla    a    		;now 00000L00
     194.  00:889A  4F                       ld    c,a    		;save for later
     195.  00:889B                      
     196.  00:889B  78                       ld    a,b    		;again we've got xxxTRDUL. I am interested on leaving 000000DU on a
     197.  00:889C  CB 3F                    srl    a
     198.  00:889E  E6 03                    and    00000011b
     199.  00:88A0                      						;we've got 000000DU on a
     200.  00:88A0  B1                       or    c    		;now we've got 00000LDU
     201.  00:88A1  4F                       ld    c,a    		;save for later
     202.  00:88A2                      
     203.  00:88A2  78                       ld    a,b
     204.  00:88A3  E6 18                    and    00011000b 	;we've got 000TR000
     205.  00:88A5  B1                       or    c
     206.  00:88A6                           ;finally    000TRLDU
     207.  00:88A6                      
     208.  00:88A6                           ;and    00000100   ;preserve just
     209.  00:88A6  47                       ld    b,a    		;save for later
     210.  00:88A7  CD E1 88                 call  check_4th_keyboard_row      ;check M & P
     211.  00:88AA  F5                       push  af
     212.  00:88AB  E6 04                    and    00000100b	;filter just M
     213.  00:88AD  87                       add    a
     214.  00:88AE  87                       add    a
     215.  00:88AF  87                       add    a           ;shift 3th to 6th bit
     216.  00:88B0  B0                       or    b           	;merge with previous
     217.  00:88B1  47                       ld    b,a
     218.  00:88B2                      
     219.  00:88B2  CD BF 88                 call  read_joy_0
     220.  00:88B5  E6 3F                    and    00111111b  	;we want just 002TRLDU  from joystick    (2 is second trigger)
     221.  00:88B7  B0                       or    b      		;added 000TRLDU from keyboard
     222.  00:88B8  47                       ld    b,a      	;save for later
     223.  00:88B9  F1                       pop    af      	; let's check on P
     224.  00:88BA                      
     225.  00:88BA  E6 20                    and    00100000b
     226.  00:88BC  87                       add    a      		;P status on 6th bit  ... so 0P2TRLDU
     227.  00:88BD  B0                       or    b
     228.  00:88BE                      
     229.  00:88BE  C9                       ret
     230.  00:88BF                      
     231.  00:88BF                      
     232.  00:88BF                      ;ret
     233.  00:88BF                      ;  a -            xx2TRLDU
     234.  00:88BF                      read_joy_0:
     235.  00:88BF  F3                         di
     236.  00:88C0  3E 0F                      ld    a,15
     237.  00:88C2  D3 A0                      out    [PSG_A],a
     238.  00:88C4  DB A2                      in    a,[PSG_R]
     239.  00:88C6  E6 BF                      and    10111111b        ;joy0
     240.  00:88C8                      
     241.  00:88C8  D3 A1                      out    [PSG_W],a        ;set joy0
     242.  00:88CA                      
     243.  00:88CA  3E 0E                      ld    a,14
     244.  00:88CC  D3 A0                      out    [PSG_A],a
     245.  00:88CE  DB A2                      in    a,[PSG_R]
     246.  00:88D0                      
     247.  00:88D0  FB                         ei
     248.  00:88D1  2F                         cpl
     249.  00:88D2                      
     250.  00:88D2  C9                         ret
     251.  00:88D3                      
     252.  00:88D3                      
     253.  00:88D3                      ;ret
     254.  00:88D3                      ;  a -      RDULxxxT
     255.  00:88D3                      check_8th_keyboard_row:
     256.  00:88D3  F3                       di
     257.  00:88D4  DB AA                    in    a,(#aa)
     258.  00:88D6  E6 F0                    and    #f0
     259.  00:88D8  F6 08                    or    8
     260.  00:88DA  D3 AA                    out    (#aa),a
     261.  00:88DC  DB A9                    in    a,(#a9)
     262.  00:88DE  FB                       ei
     263.  00:88DF  2F                       cpl
     264.  00:88E0                      
     265.  00:88E0  C9                       ret
     266.  00:88E1                      
     267.  00:88E1                      
     268.  00:88E1                      ;ret
     269.  00:88E1                      ;  a -      xxxxxMxx
     270.  00:88E1                      check_4th_keyboard_row:
     271.  00:88E1  F3                       di
     272.  00:88E2  DB AA                    in    a,(#aa)
     273.  00:88E4  E6 F0                    and    #f0
     274.  00:88E6  F6 04                    or    4
     275.  00:88E8  D3 AA                    out    (#aa),a
     276.  00:88EA  DB A9                    in    a,(#a9)
     277.  00:88EC  FB                       ei
     278.  00:88ED  2F                       cpl
     279.  00:88EE                      
     280.  00:88EE  C9                       ret
     281.  00:88EF                      
     282.  00:88EF                      ;--------------------------------------------
     283.  00:88EF                      
     284.  00:88EF                      
     285.  00:88EF                      
     286.  00:88EF                      
     287.  00:88EF                      
     288.  00:88EF                      
     289.  00:88EF                      
     290.  00:88EF                      
     147   00:88EF                      	
     148   00:88EF                      	include "subr_sonido.asm"
       1.  00:88EF                      
       2.  00:88EF                      ;;=====================================================
       3.  00:88EF                      ;;SUBRUTINAS PARA SONIDOS
       4.  00:88EF                      ;;=====================================================	
       5.  00:88EF                      
       6.  00:88EF                      ;;=====================================================
       7.  00:88EF                      ;;INICIALIZA_REPLAYER_EFECTOS_INTERRUPCIONES
       8.  00:88EF                      ;;=====================================================	
       9.  00:88EF                      ; función: 	inicializa: replayer de música, player de efectos e interrupciones
      10.  00:88EF                      ; entrada: 	-
      11.  00:88EF                      ; salida: 	-
      12.  00:88EF                      ; toca: 	HL, A
      13.  00:88EF                      inicializa_replayer_efectos_interrupciones:
      14.  00:88EF  F3                  	DI
      15.  00:88F0                      
      16.  00:88F0                      	;inicializacion de replayer musical
      17.  00:88F0  21 98 8F            	LD		HL, song-99			; hl <- initial address of module - 99
      18.  00:88F3  CD 2F 89            	CALL	PT3_INIT			; Inits PT3 player
      19.  00:88F6                      		
      20.  00:88F6                      	;inicializacion del reproductor de efectos sonoros
      21.  00:88F6  21 63 99            	LD		HL, sfx_bank
      22.  00:88F9  CD 1E 8F            	CALL	ayFX_SETUP
      23.  00:88FC                      	
      24.  00:88FC                      	;Engancha nuestra rutina de servicio al gancha que deja preparado la BIOS cuando se termina de pintar la pantalla (50 o 60 veces por segundo)
      25.  00:88FC  3E C3               	LD		A, #C3
      26.  00:88FE  32 9F FD            	LD		[H.TIMI], A
      27.  00:8901  21 09 89            	LD		HL, subrutina_isr
      28.  00:8904  22 A0 FD            	LD		[H.TIMI+1], HL
      29.  00:8907                      	
      30.  00:8907  FB                  	EI		;optimizacion:
      31.  00:8908                      			;piensa que las dos ultimas lineas podrian haber sido: 
      32.  00:8908                      			;ei						;primero ei
      33.  00:8908                      			;ld		[H.TIMI+1],hl	;luego este ld
      34.  00:8908                      									;PENSAR (y consultar ) PORQUE!!!!
      35.  00:8908                      fin_inicializa_replayer_efectos_interrupciones:
      36.  00:8908  C9                  	RET
      37.  00:8909                      
      38.  00:8909                      
      39.  00:8909                      
      40.  00:8909                      ;;=====================================================
      41.  00:8909                      ;;NUESTRA_ISR
      42.  00:8909                      ;;=====================================================	
      43.  00:8909                      ; función: 	envía datos al PSG + toca un trozo de música + toca trozo de 
      44.  00:8909                      ; entrada: 	-
      45.  00:8909                      ; salida: 	-
      46.  00:8909                      ; toca: 	HL, A
      47.  00:8909                      subrutina_isr:
      48.  00:8909  CD 74 8E            	CALL	PT3_ROUT			;envia los datos a los registros del PSG
      49.  00:890C  CD 7C 8D            	CALL	PT3_PLAY			;calcula el siguiente 'trocito' de musica que sera enviado al proxima vez
      50.  00:890F  C3 66 8F            	JP		ayFX_PLAY			;calcula el siguiente 'trocito' de efecto especial de sonido que sera enviado la proxima vez
      51.  00:8912                      fin_subrutina_isr:
      52.  00:8912                      	;RET
      53.  00:8912                      
      54.  00:8912                      
      55.  00:8912                      
      56.  00:8912                      ;;=====================================================
      57.  00:8912                      ;;DEFINICIÓN DE SUBRUTINAS DE FERNANDO PARA COMPRESIÓN Y SONIDO
      58.  00:8912                      ;;=====================================================
      59.  00:8912                      subrutinas_sonido:
      60.  00:8912                      	include	"PT3-ROM_sjasm.asm"
       1:  00:8912                      		; --- PT3 REPLAYER WORKING ON ROM ---
       2:  00:8912                      		; --- Can be assembled with asMSX ---
       3:  00:8912                      		; --- ROM version: MSX-KUN        ---
       4:  00:8912                      		; --- asMSX version 2: SapphiRe   ---
       5:  00:8912                      
       6:  00:8912                      ; Based on MSX full version of PT3 by Dioniso
       7:  00:8912                      ;
       8:  00:8912                      ; This version of the replayer can be used with any note table
       9:  00:8912                      ; This version also allows the use of PT3 commands
      10:  00:8912                      ; First 99 bytes of each PT3 module should be stripped off
      11:  00:8912                      ;
      12:  00:8912                      ; PLAY and PSG WRITE routines seperated to allow independent calls
      13:  00:8912                      ;
      14:  00:8912                      ; ROM LENGTH: 1549 bytes
      15:  00:8912                      ; RAM LENGTH:  576 bytes
      16:  00:8912                      
      17:  00:8912                      
      18:  00:8912                      
      19:  00:8912                      ;SJASM version by BTV 2016
      20:  00:8912                      
      21:  00:8912                      
      22:  00:8912                      		; --- CONSTANT VALUES DEFINITION ---
      23:  00:8912                      
      24:  00:8912                      ;ChannelsVars
      25:  00:8912                      ;struc	CHNPRM
      26:  00:8912                      ;reset group
      27:  00:8912  (00:0000)           CHNPRM_PsInOr	equ 0	;RESB 1
      28:  00:8912  (00:0001)           CHNPRM_PsInSm	equ 1	;RESB 1
      29:  00:8912  (00:0002)           CHNPRM_CrAmSl	equ 2	;RESB 1
      30:  00:8912  (00:0003)           CHNPRM_CrNsSl	equ 3	;RESB 1
      31:  00:8912  (00:0004)           CHNPRM_CrEnSl	equ 4	;RESB 1
      32:  00:8912  (00:0005)           CHNPRM_TSlCnt	equ 5	;RESB 1
      33:  00:8912  (00:0006)           CHNPRM_CrTnSl	equ 6	;RESW 1
      34:  00:8912  (00:0008)           CHNPRM_TnAcc	equ 8	;RESW 1
      35:  00:8912  (00:000A)           CHNPRM_COnOff	equ 10	;RESB 1
      36:  00:8912                      ;reset group
      37:  00:8912                      
      38:  00:8912  (00:000B)           CHNPRM_OnOffD	equ 11	;RESB 1
      39:  00:8912                      
      40:  00:8912                      ;IX for PTDECOD here [+12]
      41:  00:8912  (00:000C)           CHNPRM_OffOnD	equ 12	;RESB 1
      42:  00:8912  (00:000D)           CHNPRM_OrnPtr	equ 13	;RESW 1
      43:  00:8912  (00:000F)           CHNPRM_SamPtr	equ 15	;RESW 1
      44:  00:8912  (00:0011)           CHNPRM_NNtSkp	equ 17	;RESB 1
      45:  00:8912  (00:0012)           CHNPRM_Note	equ 18	;RESB 1
      46:  00:8912  (00:0013)           CHNPRM_SlToNt	equ 19	;RESB 1
      47:  00:8912  (00:0014)           CHNPRM_Env_En	equ 20	;RESB 1
      48:  00:8912  (00:0015)           CHNPRM_Flags	equ 21	;RESB 1
      49:  00:8912                       ;Enabled - 0,SimpleGliss - 2
      50:  00:8912  (00:0016)           CHNPRM_TnSlDl	equ 22	;RESB 1
      51:  00:8912  (00:0017)           CHNPRM_TSlStp	equ 23	;RESW 1
      52:  00:8912  (00:0019)           CHNPRM_TnDelt	equ 25	;RESW 1
      53:  00:8912  (00:001B)           CHNPRM_NtSkCn	equ 27	;RESB 1
      54:  00:8912  (00:001C)           CHNPRM_Volume	equ 28	;RESB 1
      55:  00:8912  (00:001D)           CHNPRM_Size	equ 29	;RESB 1
      56:  00:8912                      ;endstruc
      57:  00:8912                      
      58:  00:8912                      ;struc	AR
      59:  00:8912  (00:0000)           AR_TonA		equ 0	;RESW 1
      60:  00:8912  (00:0002)           AR_TonB		equ 2	;RESW 1
      61:  00:8912  (00:0004)           AR_TonC		equ 4	;RESW 1
      62:  00:8912  (00:0006)           AR_Noise	equ 6	;RESB 1
      63:  00:8912  (00:0007)           AR_Mixer	equ 7	;RESB 1
      64:  00:8912  (00:0008)           AR_AmplA	equ 8	;RESB 1
      65:  00:8912  (00:0009)           AR_AmplB	equ 9	;RESB 1
      66:  00:8912  (00:000A)           AR_AmplC	equ 10	;RESB 1
      67:  00:8912  (00:000B)           AR_Env		equ 11	;RESW 1
      68:  00:8912  (00:000D)           AR_EnvTp	equ 13	;RESB 1
      69:  00:8912                      ;endstruc
      70:  00:8912                      
      71:  00:8912                      		; --- CODE STARTS HERE ---
      72:  00:8912                      
      73:  00:8912  21 00 F0            CHECKLP:	LD	HL,PT3_SETUP
      74:  00:8915  CB FE               		SET	7,[HL]
      75:  00:8917  CB 46               		BIT	0,[HL]
      76:  00:8919  C8                  		RET	Z
      77:  00:891A  E1                  		POP	HL
      78:  00:891B  21 7A F0            		LD	HL,DelyCnt
      79:  00:891E  34                  		INC	[HL]
      80:  00:891F  21 3E F0            		LD	HL,ChanA+CHNPRM_NtSkCn
      81:  00:8922  34                  		INC	[HL]
      82:  00:8923  AF                  PT3_MUTE:	XOR	A
      83:  00:8924  67                  		LD	H,A
      84:  00:8925  6F                  		LD	L,A
      85:  00:8926  32 48 F1            		LD	[AYREGS+AR_AmplA],A
      86:  00:8929  22 49 F1            		LD	[AYREGS+AR_AmplB],HL
      87:  00:892C  C3 75 8E            		JP	ROUT_A0
      88:  00:892F                      
      89:  00:892F                      PT3_INIT:	;HL - AddressOfModule - 100
      90:  00:892F  22 01 F0            		LD [PT3_MODADDR],HL
      91:  00:8932  E5                  		PUSH HL
      92:  00:8933  11 64 00            		LD DE,100
      93:  00:8936  19                  		ADD HL,DE
      94:  00:8937  7E                  		LD A,[HL]
      95:  00:8938  32 1C F0            		LD [PT3_Delay],A
      96:  00:893B  E5                  		PUSH HL
      97:  00:893C  DD E1               		POP IX
      98:  00:893E  19                  		ADD HL,DE
      99:  00:893F  22 03 F0            		LD [PT3_CrPsPtr],HL
     100:  00:8942  DD 5E 02            		LD E,[IX+102-100]
     101:  00:8945  19                  		ADD HL,DE
     102:  00:8946  23                  		INC HL
     103:  00:8947  22 18 F0            		LD [PT3_LPosPtr],HL
     104:  00:894A  D1                  		POP DE
     105:  00:894B  DD 6E 03            		LD L,[IX+103-100]
     106:  00:894E  DD 66 04            		LD H,[IX+104-100]
     107:  00:8951  19                  		ADD HL,DE
     108:  00:8952  22 1A F0            		LD [PT3_PatsPtr],HL
     109:  00:8955  21 A9 00            		LD HL,169
     110:  00:8958  19                  		ADD HL,DE
     111:  00:8959  22 07 F0            		LD [PT3_OrnPtrs],HL
     112:  00:895C  21 69 00            		LD HL,105
     113:  00:895F  19                  		ADD HL,DE
     114:  00:8960  22 05 F0            		LD [PT3_SAMPTRS],HL
     115:  00:8963  21 00 F0            		LD HL,PT3_SETUP
     116:  00:8966  CB BE               		RES 7,[HL]
     117:  00:8968                      
     118:  00:8968                      		; --- note table data depacker ---
     119:  00:8968                      		; Depacks first 12 tones of each tone table
     120:  00:8968                      
     121:  00:8968  11 E9 8E            		LD DE,T_PACK
     122:  00:896B  01 B1 F1            		LD BC,T1_+(2*49)-1
     123:  00:896E  1A                  .TP_0:		LD A,[DE]
     124:  00:896F  13                  		INC DE
     125:  00:8970  FE 1E               		CP 15*2
     126:  00:8972  30 06               		JR NC,.TP_1
     127:  00:8974  67                  		LD H,A
     128:  00:8975  1A                  		LD A,[DE]
     129:  00:8976  6F                  		LD L,A
     130:  00:8977  13                  		INC DE
     131:  00:8978  18 07               		JR .TP_2
     132:  00:897A  D5                  .TP_1:		PUSH DE
     133:  00:897B  16 00               		LD D,0
     134:  00:897D  5F                  		LD E,A
     135:  00:897E  19                  		ADD HL,DE
     136:  00:897F  19                  		ADD HL,DE
     137:  00:8980  D1                  		POP DE
     138:  00:8981  7C                  .TP_2:		LD A,H
     139:  00:8982  02                  		LD [BC],A
     140:  00:8983  0B                  		DEC BC
     141:  00:8984  7D                  		LD A,L
     142:  00:8985  02                  		LD [BC],A
     143:  00:8986  0B                  		DEC BC
     144:  00:8987  D6 F0               		SUB $F0
     145:  00:8989  20 E3               		JR NZ,.TP_0
     146:  00:898B                      
     147:  00:898B                      		; --- INITIALIZE PT3 VARIABLES ---
     148:  00:898B  21 23 F0            		LD HL,VARS
     149:  00:898E  77                  		LD [HL],A
     150:  00:898F  11 24 F0            		LD DE,VARS+1
     151:  00:8992  01 2C 01            		LD BC,VAR0END-VARS-1
     152:  00:8995  ED B0               		LDIR
     153:  00:8997                      
     154:  00:8997  3C                  		INC A
     155:  00:8998  32 7A F0            		LD [DelyCnt],A
     156:  00:899B  21 01 F0            		LD HL,$F001 ;H - CHNPRM_Volume, L - CHNPRM_NtSkCn
     157:  00:899E  22 3E F0            		LD [ChanA+CHNPRM_NtSkCn],HL
     158:  00:89A1  22 5B F0            		LD [ChanB+CHNPRM_NtSkCn],HL
     159:  00:89A4  22 78 F0            		LD [ChanC+CHNPRM_NtSkCn],HL
     160:  00:89A7                      
     161:  00:89A7  21 E5 8E            		LD HL,EMPTYSAMORN
     162:  00:89AA  22 12 F0            		LD [PT3_AdInPtA],HL ;ptr to zero
     163:  00:89AD  22 30 F0            		LD [ChanA+CHNPRM_OrnPtr],HL ;ornament 0 is "0,1,0"
     164:  00:89B0  22 4D F0            		LD [ChanB+CHNPRM_OrnPtr],HL ;in all versions from
     165:  00:89B3  22 6A F0            		LD [ChanC+CHNPRM_OrnPtr],HL ;3.xx to 3.6x and VTII
     166:  00:89B6                      
     167:  00:89B6  22 32 F0            		LD [ChanA+CHNPRM_SamPtr],HL ;S1 There is no default
     168:  00:89B9  22 4F F0            		LD [ChanB+CHNPRM_SamPtr],HL ;S2 sample in PT3, so, you
     169:  00:89BC  22 6C F0            		LD [ChanC+CHNPRM_SamPtr],HL ;S3 can comment S1,2,3; see
     170:  00:89BF                      					    ;also EMPTYSAMORN comment
     171:  00:89BF                      
     172:  00:89BF                      		; --- NOTE TABLE CREATOR (c) Ivan Roshin, adapted by SapphiRe ---
     173:  00:89BF  DD 7E FF            		LD A,[IX+99-100] ;TONE TABLE NUMBER
     174:  00:89C2  17                  		RLA
     175:  00:89C3  E6 07               		AND 7
     176:  00:89C5  21 95 8E            		LD HL,NT_DATA
     177:  00:89C8  D5                  		PUSH DE
     178:  00:89C9  50                  		LD D,B		; ld d,0 (bc is 0000 after LDIR)
     179:  00:89CA  87                  		ADD A,A
     180:  00:89CB  5F                  		LD E,A
     181:  00:89CC  19                  		ADD HL,DE	; hl -> init of correct note table data
     182:  00:89CD  5E                  		LD E,[HL]
     183:  00:89CE  23                  		INC HL
     184:  00:89CF  CB 3B               		SRL E
     185:  00:89D1  9F                  		SBC A,A
     186:  00:89D2  E6 A7               		AND $A7			;$00 (NOP) or $A7 (AND A)
     187:  00:89D4  32 21 F0            		LD [PT3_NTL3],A		; CORRECT INSTRUCTION, DEPENDS OF SELECTED TABLE
     188:  00:89D7  3E C9               		LD A,$C9		; RET CODE
     189:  00:89D9  32 22 F0            		LD [PT3_NTL3+1],A	; RET PLACED
     190:  00:89DC  EB                  		EX DE,HL
     191:  00:89DD  C1                  		POP BC ;BC=T1_
     192:  00:89DE  09                  		ADD HL,BC
     193:  00:89DF                      
     194:  00:89DF  1A                  		LD A,[DE]                           
     195:  00:89E0                      
     196:  00:89E0  01 A5 8E            		LD BC,T_
     197:  00:89E3  81                  		ADD A,C
     198:  00:89E4  4F                  		LD C,A
     199:  00:89E5  88                  		ADC A,B
     200:  00:89E6                      
     201:  00:89E6  91                  		SUB C
     202:  00:89E7  47                  		LD B,A
     203:  00:89E8  C5                  		PUSH BC
     204:  00:89E9  11 80 F0            		LD DE,NT_
     205:  00:89EC  D5                  		PUSH DE
     206:  00:89ED                      
     207:  00:89ED  06 0C               		LD B,12
     208:  00:89EF  C5                  .L1:		PUSH BC
     209:  00:89F0  4E                  		LD C,[HL]
     210:  00:89F1  23                  		INC HL
     211:  00:89F2  E5                  		PUSH HL
     212:  00:89F3  46                  		LD B,[HL]
     213:  00:89F4                      
     214:  00:89F4  D5                  		PUSH DE
     215:  00:89F5  EB                  		EX DE,HL
     216:  00:89F6  11 17 00            		LD DE,23
     217:  00:89F9  DD 26 08            		db $DD,$26,$08	;LD XH,8
     218:  00:89FC                      
     219:  00:89FC  CB 38               .L2:		SRL B
     220:  00:89FE  CB 19               		RR C
     221:  00:8A00  CD 21 F0            .L3:		CALL PT3_NTL3	;AND A or NOP
     222:  00:8A03  79                  		LD A,C
     223:  00:8A04  8A                  		ADC A,D	;=ADC 0
     224:  00:8A05  77                  		LD [HL],A
     225:  00:8A06  23                  		INC HL
     226:  00:8A07  78                  		LD A,B
     227:  00:8A08  8A                  		ADC A,D
     228:  00:8A09  77                  		LD [HL],A
     229:  00:8A0A  19                  		ADD HL,DE
     230:  00:8A0B  DD 25               		db $DD,$25	;DEC XH
     231:  00:8A0D  20 ED               		JR NZ,.L2
     232:  00:8A0F                      
     233:  00:8A0F  D1                  		POP DE
     234:  00:8A10  13                  		INC DE
     235:  00:8A11  13                  		INC DE
     236:  00:8A12  E1                  		POP HL
     237:  00:8A13  23                  		INC HL
     238:  00:8A14  C1                  		POP BC
     239:  00:8A15  10 D8               		DJNZ .L1
     240:  00:8A17                      
     241:  00:8A17  E1                  		POP HL
     242:  00:8A18  D1                  		POP DE
     243:  00:8A19                      
     244:  00:8A19  7B                  		LD A,E
     245:  00:8A1A  D5                  		PUSH DE
     246:  00:8A1B  11 B1 8E            		LD DE,TCOLD_1
     247:  00:8A1E  BB                  		CP E
     248:  00:8A1F  D1                  		POP DE
     249:  00:8A20  20 05               		JR NZ,.CORR_1
     250:  00:8A22  3E FD               		LD A,$FD
     251:  00:8A24  32 AE F0            		LD [NT_+$2E],A
     252:  00:8A27                      
     253:  00:8A27  1A                  .CORR_1:	LD A,[DE]
     254:  00:8A28  A7                  		AND A
     255:  00:8A29  28 11               		JR Z,.TC_EXIT
     256:  00:8A2B  1F                  		RRA
     257:  00:8A2C  F5                  		PUSH AF
     258:  00:8A2D  87                  		ADD A,A
     259:  00:8A2E  4F                  		LD C,A
     260:  00:8A2F  09                  		ADD HL,BC
     261:  00:8A30  F1                  		POP AF
     262:  00:8A31  30 02               		JR NC,.CORR_2
     263:  00:8A33  35                  		DEC [HL]
     264:  00:8A34  35                  		DEC [HL]
     265:  00:8A35  34                  .CORR_2:	INC [HL]
     266:  00:8A36  A7                  		AND A
     267:  00:8A37  ED 42               		SBC HL,BC
     268:  00:8A39  13                  		INC DE
     269:  00:8A3A  18 EB               		JR .CORR_1
     270:  00:8A3C                      
     271:  00:8A3C                      .TC_EXIT:	;POP AF
     272:  00:8A3C                      
     273:  00:8A3C                      		; --- CREATE PT3 VOLUME TABLE (c) Ivan Roshin, adapted by SapphiRe ---
     274:  00:8A3C  21 11 00            		ld	hl,$11
     275:  00:8A3F  54                  		ld	d,h
     276:  00:8A40  5C                  		ld	e,h
     277:  00:8A41  DD 21 50 F1         		ld	IX,VT_+16
     278:  00:8A45  06 0F               		ld	b,15
     279:  00:8A47  E5                  .INITV1:	push	hl
     280:  00:8A48  19                  		add	hl,de
     281:  00:8A49  EB                  		ex	de,hl
     282:  00:8A4A  ED 62               		sbc	hl,hl
     283:  00:8A4C  48                  		ld	c,b
     284:  00:8A4D  06 10               		ld	b,16
     285:  00:8A4F  7D                  .INITV2:	ld	a,l
     286:  00:8A50  17                  		rla
     287:  00:8A51  7C                  		ld	a,h
     288:  00:8A52  CE 00               		adc	a,0
     289:  00:8A54  DD 77 00            		ld	[ix],a
     290:  00:8A57  DD 23               		inc	ix
     291:  00:8A59  19                  		add	hl,de
     292:  00:8A5A  10 F3               		djnz	.INITV2
     293:  00:8A5C  E1                  		pop	hl
     294:  00:8A5D  7B                  		ld	a,e
     295:  00:8A5E  FE 77               		cp	$77
     296:  00:8A60  20 01               		jr	nz,.INITV3
     297:  00:8A62  1C                  		inc	e
     298:  00:8A63  41                  .INITV3:	ld	b,c
     299:  00:8A64  10 E1               		djnz	.INITV1
     300:  00:8A66                      
     301:  00:8A66  C9                  		RET
     302:  00:8A67                      
     303:  00:8A67                      		;pattern decoder
     304:  00:8A67  DD 36 08 00         PD_OrSm:	LD [IX+(CHNPRM_Env_En-12)],0
     305:  00:8A6B  CD F1 8B            		CALL SETORN
     306:  00:8A6E  0A                  		LD A,[BC]
     307:  00:8A6F  03                  		INC BC
     308:  00:8A70  0F                  		RRCA
     309:  00:8A71                      
     310:  00:8A71  87                  PD_SAM:		ADD A,A
     311:  00:8A72  5F                  PD_SAM_:	LD E,A
     312:  00:8A73  16 00               		LD D,0
     313:  00:8A75  2A 05 F0            		LD HL,[PT3_SAMPTRS]
     314:  00:8A78  19                  		ADD HL,DE
     315:  00:8A79  5E                  		LD E,[HL]
     316:  00:8A7A  23                  		INC HL
     317:  00:8A7B  56                  		LD D,[HL]
     318:  00:8A7C  2A 01 F0            		LD HL,[PT3_MODADDR]
     319:  00:8A7F  19                  		ADD HL,DE
     320:  00:8A80  DD 75 03            		LD [IX+(CHNPRM_SamPtr-12)],L
     321:  00:8A83  DD 74 04            		LD [IX+(CHNPRM_SamPtr+1-12)],H
     322:  00:8A86  18 41               		JR PD_LOOP
     323:  00:8A88                      
     324:  00:8A88  07                  PD_VOL:		RLCA
     325:  00:8A89  07                  		RLCA
     326:  00:8A8A  07                  		RLCA
     327:  00:8A8B  07                  		RLCA
     328:  00:8A8C  DD 77 10            		LD [IX+(CHNPRM_Volume-12)],A
     329:  00:8A8F  18 3B               		JR PD_LP2
     330:  00:8A91                      	
     331:  00:8A91  DD 77 08            PD_EOff:	LD [IX+(CHNPRM_Env_En-12)],A
     332:  00:8A94  DD 77 F4            		LD [IX+(CHNPRM_PsInOr-12)],A
     333:  00:8A97  18 33               		JR PD_LP2
     334:  00:8A99                      
     335:  00:8A99  3D                  PD_SorE:	DEC A
     336:  00:8A9A  20 07               		JR NZ,PD_ENV
     337:  00:8A9C  0A                  		LD A,[BC]
     338:  00:8A9D  03                  		INC BC
     339:  00:8A9E  DD 77 05            		LD [IX+(CHNPRM_NNtSkp-12)],A
     340:  00:8AA1  18 29               		JR PD_LP2
     341:  00:8AA3                      
     342:  00:8AA3  CD D5 8B            PD_ENV:		CALL SETENV
     343:  00:8AA6  18 24               		JR PD_LP2
     344:  00:8AA8                      
     345:  00:8AA8  CD F1 8B            PD_ORN:		CALL SETORN
     346:  00:8AAB  18 1C               		JR PD_LOOP
     347:  00:8AAD                             
     348:  00:8AAD  DD 77 08            PD_ESAM:	LD [IX+(CHNPRM_Env_En-12)],A
     349:  00:8AB0  DD 77 F4            		LD [IX+(CHNPRM_PsInOr-12)],A
     350:  00:8AB3  C4 D5 8B            		CALL NZ,SETENV
     351:  00:8AB6  0A                  		LD A,[BC]
     352:  00:8AB7  03                  		INC BC
     353:  00:8AB8  18 B8               		JR PD_SAM_
     354:  00:8ABA                      
     355:  00:8ABA  DD 7E 06            PTDECOD:	LD A,[IX+(CHNPRM_Note-12)]
     356:  00:8ABD  32 0F F0            		LD [PT3_PrNote],A
     357:  00:8AC0  DD 6E FA            		LD L,[IX+(CHNPRM_CrTnSl-12)]
     358:  00:8AC3  DD 66 FB            		LD H,[IX+(CHNPRM_CrTnSl+1-12)]
     359:  00:8AC6  22 10 F0            		LD [PT3_PrSlide],HL
     360:  00:8AC9                      
     361:  00:8AC9  11 10 20            PD_LOOP:	LD DE,$2010
     362:  00:8ACC  0A                  PD_LP2:		LD A,[BC]
     363:  00:8ACD  03                  		INC BC
     364:  00:8ACE  83                  		ADD A,E
     365:  00:8ACF  38 96               		JR C,PD_OrSm
     366:  00:8AD1  82                  		ADD A,D
     367:  00:8AD2  28 4A               		JR Z,PD_FIN
     368:  00:8AD4  38 9B               		JR C,PD_SAM
     369:  00:8AD6  83                  		ADD A,E
     370:  00:8AD7  28 25               		JR Z,PD_REL
     371:  00:8AD9  38 AD               		JR C,PD_VOL
     372:  00:8ADB  83                  		ADD A,E
     373:  00:8ADC  28 B3               		JR Z,PD_EOff
     374:  00:8ADE  38 B9               		JR C,PD_SorE
     375:  00:8AE0  C6 60               		ADD A,96
     376:  00:8AE2  38 20               		JR C,PD_NOTE
     377:  00:8AE4  83                  		ADD A,E
     378:  00:8AE5  38 C1               		JR C,PD_ORN
     379:  00:8AE7  82                  		ADD A,D
     380:  00:8AE8  38 0F               		JR C,PD_NOIS
     381:  00:8AEA  83                  		ADD A,E
     382:  00:8AEB  38 C0               		JR C,PD_ESAM
     383:  00:8AED  87                  		ADD A,A
     384:  00:8AEE  5F                  		LD E,A
     385:  00:8AEF  21 2A 6B            		LD HL,(SPCCOMS+$DF20) % 65536	; Adapted from original Speccy version (saves 6 bytes)
     386:  00:8AF2  19                  		ADD HL,DE
     387:  00:8AF3  5E                  		LD E,[HL]
     388:  00:8AF4  23                  		INC HL
     389:  00:8AF5  56                  		LD D,[HL]
     390:  00:8AF6  D5                  		PUSH DE
     391:  00:8AF7  18 D0               		JR PD_LOOP
     392:  00:8AF9                      
     393:  00:8AF9  32 7E F0            PD_NOIS:	LD [Ns_Base],A
     394:  00:8AFC  18 CE               		JR PD_LP2
     395:  00:8AFE                      
     396:  00:8AFE  DD CB 09 86         PD_REL:		RES 0,[IX+(CHNPRM_Flags-12)]
     397:  00:8B02  18 08               		JR PD_RES
     398:  00:8B04                      	
     399:  00:8B04  DD 77 06            PD_NOTE:	LD [IX+(CHNPRM_Note-12)],A
     400:  00:8B07  DD CB 09 C6         		SET 0,[IX+(CHNPRM_Flags-12)]
     401:  00:8B0B  AF                  		XOR A
     402:  00:8B0C                      
     403:  00:8B0C  ED 73 09 F0         PD_RES:		LD [PT3_PDSP],SP
     404:  00:8B10  DD F9               		LD SP,IX
     405:  00:8B12  67                  		LD H,A
     406:  00:8B13  6F                  		LD L,A
     407:  00:8B14  E5                  		PUSH HL
     408:  00:8B15  E5                  		PUSH HL
     409:  00:8B16  E5                  		PUSH HL
     410:  00:8B17  E5                  		PUSH HL
     411:  00:8B18  E5                  		PUSH HL
     412:  00:8B19  E5                  		PUSH HL
     413:  00:8B1A  ED 7B 09 F0         		LD SP,[PT3_PDSP]
     414:  00:8B1E                      
     415:  00:8B1E  DD 7E 05            PD_FIN:		LD A,[IX+(CHNPRM_NNtSkp-12)]
     416:  00:8B21  DD 77 0F            		LD [IX+(CHNPRM_NtSkCn-12)],A
     417:  00:8B24  C9                  		RET
     418:  00:8B25                      
     419:  00:8B25  DD CB 09 96         C_PORTM:	RES 2,[IX+(CHNPRM_Flags-12)]
     420:  00:8B29  0A                  		LD A,[BC]
     421:  00:8B2A  03                  		INC BC
     422:  00:8B2B                      		;SKIP PRECALCULATED TONE DELTA [BECAUSE
     423:  00:8B2B                      		;CANNOT BE RIGHT AFTER PT3 COMPILATION]
     424:  00:8B2B  03                  		INC BC
     425:  00:8B2C  03                  		INC BC
     426:  00:8B2D  DD 77 0A            		LD [IX+(CHNPRM_TnSlDl-12)],A
     427:  00:8B30  DD 77 F9            		LD [IX+(CHNPRM_TSlCnt-12)],A
     428:  00:8B33  11 80 F0            		LD DE,NT_
     429:  00:8B36  DD 7E 06            		LD A,[IX+(CHNPRM_Note-12)]
     430:  00:8B39  DD 77 07            		LD [IX+(CHNPRM_SlToNt-12)],A
     431:  00:8B3C  87                  		ADD A,A
     432:  00:8B3D  6F                  		LD L,A
     433:  00:8B3E  26 00               		LD H,0
     434:  00:8B40  19                  		ADD HL,DE
     435:  00:8B41  7E                  		LD A,[HL]
     436:  00:8B42  23                  		INC HL
     437:  00:8B43  66                  		LD H,[HL]
     438:  00:8B44  6F                  		LD L,A
     439:  00:8B45  E5                  		PUSH HL
     440:  00:8B46  3A 0F F0            		LD A,[PT3_PrNote]
     441:  00:8B49  DD 77 06            		LD [IX+(CHNPRM_Note-12)],A
     442:  00:8B4C  87                  		ADD A,A
     443:  00:8B4D  6F                  		LD L,A
     444:  00:8B4E  26 00               		LD H,0
     445:  00:8B50  19                  		ADD HL,DE
     446:  00:8B51  5E                  		LD E,[HL]
     447:  00:8B52  23                  		INC HL
     448:  00:8B53  56                  		LD D,[HL]
     449:  00:8B54  E1                  		POP HL
     450:  00:8B55  ED 52               		SBC HL,DE
     451:  00:8B57  DD 75 0D            		LD [IX+(CHNPRM_TnDelt-12)],L
     452:  00:8B5A  DD 74 0E            		LD [IX+(CHNPRM_TnDelt+1-12)],H
     453:  00:8B5D  ED 5B 10 F0         		LD DE,[PT3_PrSlide]
     454:  00:8B61  DD 73 FA            		LD [IX+(CHNPRM_CrTnSl-12)],E
     455:  00:8B64  DD 72 FB            		LD [IX+(CHNPRM_CrTnSl+1-12)],D
     456:  00:8B67  0A                  		LD A,[BC] ;SIGNED TONE STEP
     457:  00:8B68  03                  		INC BC
     458:  00:8B69  08                  		EX AF,AF'
     459:  00:8B6A  0A                  		LD A,[BC]
     460:  00:8B6B  03                  		INC BC
     461:  00:8B6C  A7                  		AND A
     462:  00:8B6D  28 01               		JR Z,.NOSIG
     463:  00:8B6F  EB                  		EX DE,HL
     464:  00:8B70  ED 52               .NOSIG:	SBC HL,DE
     465:  00:8B72  F2 7A 8B            		JP P,SET_STP
     466:  00:8B75  2F                  		CPL
     467:  00:8B76  08                  		EX AF,AF'
     468:  00:8B77  ED 44               		NEG
     469:  00:8B79  08                  		EX AF,AF'
     470:  00:8B7A  DD 77 0C            SET_STP:	LD [IX+(CHNPRM_TSlStp+1-12)],A
     471:  00:8B7D  08                  		EX AF,AF'
     472:  00:8B7E  DD 77 0B            		LD [IX+(CHNPRM_TSlStp-12)],A
     473:  00:8B81  DD 36 FE 00         		LD [IX+(CHNPRM_COnOff-12)],0
     474:  00:8B85  C9                  		RET
     475:  00:8B86                      
     476:  00:8B86  DD CB 09 D6         C_GLISS:	SET 2,[IX+(CHNPRM_Flags-12)]
     477:  00:8B8A  0A                  		LD A,[BC]
     478:  00:8B8B  03                  		INC BC
     479:  00:8B8C  DD 77 0A            		LD [IX+(CHNPRM_TnSlDl-12)],A
     480:  00:8B8F  DD 77 F9            		LD [IX+(CHNPRM_TSlCnt-12)],A
     481:  00:8B92  0A                  		LD A,[BC]
     482:  00:8B93  03                  		INC BC
     483:  00:8B94  08                  		EX AF,AF'
     484:  00:8B95  0A                  		LD A,[BC]
     485:  00:8B96  03                  		INC BC
     486:  00:8B97  18 E1               		JR SET_STP
     487:  00:8B99                      
     488:  00:8B99  0A                  C_SMPOS:	LD A,[BC]
     489:  00:8B9A  03                  		INC BC
     490:  00:8B9B  DD 77 F5            		LD [IX+(CHNPRM_PsInSm-12)],A
     491:  00:8B9E  C9                  		RET
     492:  00:8B9F                      
     493:  00:8B9F  0A                  C_ORPOS:	LD A,[BC]
     494:  00:8BA0  03                  		INC BC
     495:  00:8BA1  DD 77 F4            		LD [IX+(CHNPRM_PsInOr-12)],A
     496:  00:8BA4  C9                  		RET
     497:  00:8BA5                      
     498:  00:8BA5  0A                  C_VIBRT:	LD A,[BC]
     499:  00:8BA6  03                  		INC BC
     500:  00:8BA7  DD 77 FF            		LD [IX+(CHNPRM_OnOffD-12)],A
     501:  00:8BAA  DD 77 FE            		LD [IX+(CHNPRM_COnOff-12)],A
     502:  00:8BAD  0A                  		LD A,[BC]
     503:  00:8BAE  03                  		INC BC
     504:  00:8BAF  DD 77 00            		LD [IX+(CHNPRM_OffOnD-12)],A
     505:  00:8BB2  AF                  		XOR A
     506:  00:8BB3  DD 77 F9            		LD [IX+(CHNPRM_TSlCnt-12)],A
     507:  00:8BB6  DD 77 FA            		LD [IX+(CHNPRM_CrTnSl-12)],A
     508:  00:8BB9  DD 77 FB            		LD [IX+(CHNPRM_CrTnSl+1-12)],A
     509:  00:8BBC  C9                  		RET
     510:  00:8BBD                      
     511:  00:8BBD  0A                  C_ENGLS:	LD A,[BC]
     512:  00:8BBE  03                  		INC BC
     513:  00:8BBF  32 1E F0            		LD [PT3_Env_Del],A
     514:  00:8BC2  32 7D F0            		LD [CurEDel],A
     515:  00:8BC5  0A                  		LD A,[BC]
     516:  00:8BC6  03                  		INC BC
     517:  00:8BC7  6F                  		LD L,A
     518:  00:8BC8  0A                  		LD A,[BC]
     519:  00:8BC9  03                  		INC BC
     520:  00:8BCA  67                  		LD H,A
     521:  00:8BCB  22 1F F0            		LD [PT3_ESldAdd],HL
     522:  00:8BCE  C9                  		RET
     523:  00:8BCF                      
     524:  00:8BCF  0A                  C_DELAY:	LD A,[BC]
     525:  00:8BD0  03                  		INC BC
     526:  00:8BD1  32 1C F0            		LD [PT3_Delay],A
     527:  00:8BD4  C9                  		RET
     528:  00:8BD5                      	
     529:  00:8BD5  DD 73 08            SETENV:		LD [IX+(CHNPRM_Env_En-12)],E
     530:  00:8BD8  32 4D F1            		LD [AYREGS+AR_EnvTp],A
     531:  00:8BDB  0A                  		LD A,[BC]
     532:  00:8BDC  03                  		INC BC
     533:  00:8BDD  67                  		LD H,A
     534:  00:8BDE  0A                  		LD A,[BC]
     535:  00:8BDF  03                  		INC BC
     536:  00:8BE0  6F                  		LD L,A
     537:  00:8BE1  22 4E F1            		LD [EnvBase],HL
     538:  00:8BE4  AF                  		XOR A
     539:  00:8BE5  DD 77 F4            		LD [IX+(CHNPRM_PsInOr-12)],A
     540:  00:8BE8  32 7D F0            		LD [CurEDel],A
     541:  00:8BEB  67                  		LD H,A
     542:  00:8BEC  6F                  		LD L,A
     543:  00:8BED  22 7B F0            		LD [CurESld],HL
     544:  00:8BF0  C9                  C_NOP:		RET
     545:  00:8BF1                      
     546:  00:8BF1  87                  SETORN:		ADD A,A
     547:  00:8BF2  5F                  		LD E,A
     548:  00:8BF3  16 00               		LD D,0
     549:  00:8BF5  DD 72 F4            		LD [IX+(CHNPRM_PsInOr-12)],D
     550:  00:8BF8  2A 07 F0            		LD HL,[PT3_OrnPtrs]
     551:  00:8BFB  19                  		ADD HL,DE
     552:  00:8BFC  5E                  		LD E,[HL]
     553:  00:8BFD  23                  		INC HL
     554:  00:8BFE  56                  		LD D,[HL]
     555:  00:8BFF  2A 01 F0            		LD HL,[PT3_MODADDR]
     556:  00:8C02  19                  		ADD HL,DE
     557:  00:8C03  DD 75 01            		LD [IX+(CHNPRM_OrnPtr-12)],L
     558:  00:8C06  DD 74 02            		LD [IX+(CHNPRM_OrnPtr+1-12)],H
     559:  00:8C09  C9                  		RET
     560:  00:8C0A                      
     561:  00:8C0A                      		;ALL 16 ADDRESSES TO PROTECT FROM BROKEN PT3 MODULES
     562:  00:8C0A  F0 8B               SPCCOMS:	dw C_NOP
     563:  00:8C0C  86 8B               		dw C_GLISS
     564:  00:8C0E  25 8B               		dw C_PORTM
     565:  00:8C10  99 8B               		dw C_SMPOS
     566:  00:8C12  9F 8B               		dw C_ORPOS
     567:  00:8C14  A5 8B               		dw C_VIBRT
     568:  00:8C16  F0 8B               		dw C_NOP
     569:  00:8C18  F0 8B               		dw C_NOP
     570:  00:8C1A  BD 8B               		dw C_ENGLS
     571:  00:8C1C  CF 8B               		dw C_DELAY
     572:  00:8C1E  F0 8B               		dw C_NOP
     573:  00:8C20  F0 8B               		dw C_NOP
     574:  00:8C22  F0 8B               		dw C_NOP
     575:  00:8C24  F0 8B               		dw C_NOP
     576:  00:8C26  F0 8B               		dw C_NOP
     577:  00:8C28  F0 8B               		dw C_NOP
     578:  00:8C2A                      
     579:  00:8C2A  AF                  CHREGS:		XOR A
     580:  00:8C2B  32 4A F1            		LD [AYREGS+AR_AmplC],A
     581:  00:8C2E  DD CB 15 46         		BIT 0,[IX+CHNPRM_Flags]
     582:  00:8C32  E5                  		PUSH HL
     583:  00:8C33  CA 59 8D            		JP Z,.CH_EXIT
     584:  00:8C36  ED 73 0B F0         		LD [PT3_CSP],SP
     585:  00:8C3A  DD 6E 0D            		LD L,[IX+CHNPRM_OrnPtr]
     586:  00:8C3D  DD 66 0E            		LD H,[IX+CHNPRM_OrnPtr+1]
     587:  00:8C40  F9                  		LD SP,HL
     588:  00:8C41  D1                  		POP DE
     589:  00:8C42  67                  		LD H,A
     590:  00:8C43  DD 7E 00            		LD A,[IX+CHNPRM_PsInOr]
     591:  00:8C46  6F                  		LD L,A
     592:  00:8C47  39                  		ADD HL,SP
     593:  00:8C48  3C                  		INC A
     594:  00:8C49  BA                  		CP D
     595:  00:8C4A  38 01               		JR C,.CH_ORPS
     596:  00:8C4C  7B                  		LD A,E
     597:  00:8C4D  DD 77 00            .CH_ORPS:	LD [IX+CHNPRM_PsInOr],A
     598:  00:8C50  DD 7E 12            		LD A,[IX+CHNPRM_Note]
     599:  00:8C53  86                  		ADD A,[HL]
     600:  00:8C54  F2 58 8C            		JP P,.CH_NTP
     601:  00:8C57  AF                  		XOR A
     602:  00:8C58  FE 60               .CH_NTP:	CP 96
     603:  00:8C5A  38 02               		JR C,.CH_NOK
     604:  00:8C5C  3E 5F               		LD A,95
     605:  00:8C5E  87                  .CH_NOK:	ADD A,A
     606:  00:8C5F  08                  		EX AF,AF'
     607:  00:8C60  DD 6E 0F            		LD L,[IX+CHNPRM_SamPtr]
     608:  00:8C63  DD 66 10            		LD H,[IX+CHNPRM_SamPtr+1]
     609:  00:8C66  F9                  		LD SP,HL
     610:  00:8C67  D1                  		POP DE
     611:  00:8C68  26 00               		LD H,0
     612:  00:8C6A  DD 7E 01            		LD A,[IX+CHNPRM_PsInSm]
     613:  00:8C6D  47                  		LD B,A
     614:  00:8C6E  87                  		ADD A,A
     615:  00:8C6F  87                  		ADD A,A
     616:  00:8C70  6F                  		LD L,A
     617:  00:8C71  39                  		ADD HL,SP
     618:  00:8C72  F9                  		LD SP,HL
     619:  00:8C73  78                  		LD A,B
     620:  00:8C74  3C                  		INC A
     621:  00:8C75  BA                  		CP D
     622:  00:8C76  38 01               		JR C,.CH_SMPS
     623:  00:8C78  7B                  		LD A,E
     624:  00:8C79  DD 77 01            .CH_SMPS:	LD [IX+CHNPRM_PsInSm],A
     625:  00:8C7C  C1                  		POP BC
     626:  00:8C7D  E1                  		POP HL
     627:  00:8C7E  DD 5E 08            		LD E,[IX+CHNPRM_TnAcc]
     628:  00:8C81  DD 56 09            		LD D,[IX+CHNPRM_TnAcc+1]
     629:  00:8C84  19                  		ADD HL,DE
     630:  00:8C85  CB 70               		BIT 6,B
     631:  00:8C87  28 06               		JR Z,.CH_NOAC
     632:  00:8C89  DD 75 08            		LD [IX+CHNPRM_TnAcc],L
     633:  00:8C8C  DD 74 09            		LD [IX+CHNPRM_TnAcc+1],H
     634:  00:8C8F  EB                  .CH_NOAC:	EX DE,HL
     635:  00:8C90  08                  		EX AF,AF'
     636:  00:8C91  6F                  		LD L,A
     637:  00:8C92  26 00               		LD H,0
     638:  00:8C94  31 80 F0            		LD SP,NT_
     639:  00:8C97  39                  		ADD HL,SP
     640:  00:8C98  F9                  		LD SP,HL
     641:  00:8C99  E1                  		POP HL
     642:  00:8C9A  19                  		ADD HL,DE
     643:  00:8C9B  DD 5E 06            		LD E,[IX+CHNPRM_CrTnSl]
     644:  00:8C9E  DD 56 07            		LD D,[IX+CHNPRM_CrTnSl+1]
     645:  00:8CA1  19                  		ADD HL,DE
     646:  00:8CA2  ED 7B 0B F0         		LD SP,[PT3_CSP]
     647:  00:8CA6  E3                  		EX [SP],HL
     648:  00:8CA7  AF                  		XOR A
     649:  00:8CA8  DD B6 05            		OR [IX+CHNPRM_TSlCnt]
     650:  00:8CAB  28 3E               		JR Z,.CH_AMP
     651:  00:8CAD  DD 35 05            		DEC [IX+CHNPRM_TSlCnt]
     652:  00:8CB0  20 39               		JR NZ,.CH_AMP
     653:  00:8CB2  DD 7E 16            		LD A,[IX+CHNPRM_TnSlDl]
     654:  00:8CB5  DD 77 05            		LD [IX+CHNPRM_TSlCnt],A
     655:  00:8CB8  DD 6E 17            		LD L,[IX+CHNPRM_TSlStp]
     656:  00:8CBB  DD 66 18            		LD H,[IX+CHNPRM_TSlStp+1]
     657:  00:8CBE  7C                  		LD A,H
     658:  00:8CBF  19                  		ADD HL,DE
     659:  00:8CC0  DD 75 06            		LD [IX+CHNPRM_CrTnSl],L
     660:  00:8CC3  DD 74 07            		LD [IX+CHNPRM_CrTnSl+1],H
     661:  00:8CC6  DD CB 15 56         		BIT 2,[IX+CHNPRM_Flags]
     662:  00:8CCA  20 1F               		JR NZ,.CH_AMP
     663:  00:8CCC  DD 5E 19            		LD E,[IX+CHNPRM_TnDelt]
     664:  00:8CCF  DD 56 1A            		LD D,[IX+CHNPRM_TnDelt+1]
     665:  00:8CD2  A7                  		AND A
     666:  00:8CD3  28 01               		JR Z,.CH_STPP
     667:  00:8CD5  EB                  		EX DE,HL
     668:  00:8CD6  ED 52               .CH_STPP:	SBC HL,DE
     669:  00:8CD8  FA EB 8C            		JP M,.CH_AMP
     670:  00:8CDB  DD 7E 13            		LD A,[IX+CHNPRM_SlToNt]
     671:  00:8CDE  DD 77 12            		LD [IX+CHNPRM_Note],A
     672:  00:8CE1  AF                  		XOR A
     673:  00:8CE2  DD 77 05            		LD [IX+CHNPRM_TSlCnt],A
     674:  00:8CE5  DD 77 06            		LD [IX+CHNPRM_CrTnSl],A
     675:  00:8CE8  DD 77 07            		LD [IX+CHNPRM_CrTnSl+1],A
     676:  00:8CEB  DD 7E 02            .CH_AMP:	LD A,[IX+CHNPRM_CrAmSl]
     677:  00:8CEE  CB 79               		BIT 7,C
     678:  00:8CF0  28 13               		JR Z,.CH_NOAM
     679:  00:8CF2  CB 71               		BIT 6,C
     680:  00:8CF4  28 07               		JR Z,.CH_AMIN
     681:  00:8CF6  FE 0F               		CP 15
     682:  00:8CF8  28 0B               		JR Z,.CH_NOAM
     683:  00:8CFA  3C                  		INC A
     684:  00:8CFB  18 05               		JR .CH_SVAM
     685:  00:8CFD  FE F1               .CH_AMIN:	CP -15
     686:  00:8CFF  28 04               		JR Z,.CH_NOAM
     687:  00:8D01  3D                  		DEC A
     688:  00:8D02  DD 77 02            .CH_SVAM:	LD [IX+CHNPRM_CrAmSl],A
     689:  00:8D05  6F                  .CH_NOAM:	LD L,A
     690:  00:8D06  78                  		LD A,B
     691:  00:8D07  E6 0F               		AND 15
     692:  00:8D09  85                  		ADD A,L
     693:  00:8D0A  F2 0E 8D            		JP P,.CH_APOS
     694:  00:8D0D  AF                  		XOR A
     695:  00:8D0E  FE 10               .CH_APOS:	CP 16
     696:  00:8D10  38 02               		JR C,.CH_VOL
     697:  00:8D12  3E 0F               		LD A,15
     698:  00:8D14  DD B6 1C            .CH_VOL:	OR [IX+CHNPRM_Volume]
     699:  00:8D17  6F                  		LD L,A
     700:  00:8D18  26 00               		LD H,0
     701:  00:8D1A  11 40 F1            		LD DE,VT_
     702:  00:8D1D  19                  		ADD HL,DE
     703:  00:8D1E  7E                  		LD A,[HL]
     704:  00:8D1F  CB 41               .CH_ENV:	BIT 0,C
     705:  00:8D21  20 03               		JR NZ,.CH_NOEN
     706:  00:8D23  DD B6 14            		OR [IX+CHNPRM_Env_En]
     707:  00:8D26  32 4A F1            .CH_NOEN:	LD [AYREGS+AR_AmplC],A
     708:  00:8D29  CB 78               		BIT 7,B
     709:  00:8D2B  79                  		LD A,C
     710:  00:8D2C  28 19               		JR Z,.NO_ENSL
     711:  00:8D2E  17                  		RLA
     712:  00:8D2F  17                  		RLA
     713:  00:8D30  CB 2F               		SRA A
     714:  00:8D32  CB 2F               		SRA A
     715:  00:8D34  CB 2F               		SRA A
     716:  00:8D36  DD 86 04            		ADD A,[IX+CHNPRM_CrEnSl] ;SEE COMMENT BELOW
     717:  00:8D39  CB 68               		BIT 5,B
     718:  00:8D3B  28 03               		JR Z,.NO_ENAC
     719:  00:8D3D  DD 77 04            		LD [IX+CHNPRM_CrEnSl],A
     720:  00:8D40  21 1D F0            .NO_ENAC:	LD HL,PT3_AddToEn
     721:  00:8D43  86                  		ADD A,[HL] ;BUG IN PT3 - NEED WORD HERE.
     722:  00:8D44                      			   ;FIX IT IN NEXT VERSION?
     723:  00:8D44  77                  		LD [HL],A
     724:  00:8D45  18 0E               		JR .CH_MIX
     725:  00:8D47  1F                  .NO_ENSL:	RRA
     726:  00:8D48  DD 86 03            		ADD A,[IX+CHNPRM_CrNsSl]
     727:  00:8D4B  32 7F F0            		LD [AddToNs],A
     728:  00:8D4E  CB 68               		BIT 5,B
     729:  00:8D50  28 03               		JR Z,.CH_MIX
     730:  00:8D52  DD 77 03            		LD [IX+CHNPRM_CrNsSl],A
     731:  00:8D55  78                  .CH_MIX:	LD A,B
     732:  00:8D56  1F                  		RRA
     733:  00:8D57  E6 48               		AND $48
     734:  00:8D59  21 47 F1            .CH_EXIT:	LD HL,AYREGS+AR_Mixer
     735:  00:8D5C  B6                  		OR [HL]
     736:  00:8D5D  0F                  		RRCA
     737:  00:8D5E  77                  		LD [HL],A
     738:  00:8D5F  E1                  		POP HL
     739:  00:8D60  AF                  		XOR A
     740:  00:8D61  DD B6 0A            		OR [IX+CHNPRM_COnOff]
     741:  00:8D64  C8                  		RET Z
     742:  00:8D65  DD 35 0A            		DEC [IX+CHNPRM_COnOff]
     743:  00:8D68  C0                  		RET NZ
     744:  00:8D69  DD AE 15            		XOR [IX+CHNPRM_Flags]
     745:  00:8D6C  DD 77 15            		LD [IX+CHNPRM_Flags],A
     746:  00:8D6F  1F                  		RRA
     747:  00:8D70  DD 7E 0B            		LD A,[IX+CHNPRM_OnOffD]
     748:  00:8D73  38 03               		JR C,.CH_ONDL
     749:  00:8D75  DD 7E 0C            		LD A,[IX+CHNPRM_OffOnD]
     750:  00:8D78  DD 77 0A            .CH_ONDL:	LD [IX+CHNPRM_COnOff],A
     751:  00:8D7B  C9                  		RET
     752:  00:8D7C                      
     753:  00:8D7C  AF                  PT3_PLAY:	XOR A
     754:  00:8D7D  32 1D F0            		LD [PT3_AddToEn],A
     755:  00:8D80  32 47 F1            		LD [AYREGS+AR_Mixer],A
     756:  00:8D83  3D                  		DEC A
     757:  00:8D84  32 4D F1            		LD [AYREGS+AR_EnvTp],A
     758:  00:8D87  21 7A F0            		LD HL,DelyCnt
     759:  00:8D8A  35                  		DEC [HL]
     760:  00:8D8B  C2 12 8E            		JP NZ,.PL2
     761:  00:8D8E  21 3E F0            		LD HL,ChanA+CHNPRM_NtSkCn
     762:  00:8D91  35                  		DEC [HL]
     763:  00:8D92  20 4E               		JR NZ,.PL1B
     764:  00:8D94  ED 4B 12 F0         		LD BC,[PT3_AdInPtA]
     765:  00:8D98  0A                  		LD A,[BC]
     766:  00:8D99  A7                  		AND A
     767:  00:8D9A  20 3B               		JR NZ,.PL1A
     768:  00:8D9C  57                  		LD D,A
     769:  00:8D9D  32 7E F0            		LD [Ns_Base],A
     770:  00:8DA0  2A 03 F0            		LD HL,[PT3_CrPsPtr]
     771:  00:8DA3  23                  		INC HL
     772:  00:8DA4  7E                  		LD A,[HL]
     773:  00:8DA5  3C                  		INC A
     774:  00:8DA6  20 08               		JR NZ,.PLNLP
     775:  00:8DA8  CD 12 89            		CALL CHECKLP
     776:  00:8DAB  2A 18 F0            		LD HL,[PT3_LPosPtr]
     777:  00:8DAE  7E                  		LD A,[HL]
     778:  00:8DAF  3C                  		INC A
     779:  00:8DB0  22 03 F0            .PLNLP:	LD [PT3_CrPsPtr],HL
     780:  00:8DB3  3D                  		DEC A
     781:  00:8DB4  87                  		ADD A,A
     782:  00:8DB5  5F                  		LD E,A
     783:  00:8DB6  CB 12               		RL D
     784:  00:8DB8  2A 1A F0            		LD HL,[PT3_PatsPtr]
     785:  00:8DBB  19                  		ADD HL,DE
     786:  00:8DBC  ED 5B 01 F0         		LD DE,[PT3_MODADDR]
     787:  00:8DC0  ED 73 0D F0         		LD [PT3_PSP],SP
     788:  00:8DC4  F9                  		LD SP,HL
     789:  00:8DC5  E1                  		POP HL
     790:  00:8DC6  19                  		ADD HL,DE
     791:  00:8DC7  44                  		LD B,H
     792:  00:8DC8  4D                  		LD C,L
     793:  00:8DC9  E1                  		POP HL
     794:  00:8DCA  19                  		ADD HL,DE
     795:  00:8DCB  22 14 F0            		LD [PT3_AdInPtB],HL
     796:  00:8DCE  E1                  		POP HL
     797:  00:8DCF  19                  		ADD HL,DE
     798:  00:8DD0  22 16 F0            		LD [PT3_AdInPtC],HL
     799:  00:8DD3  ED 7B 0D F0         		LD SP,[PT3_PSP]
     800:  00:8DD7                      
     801:  00:8DD7  DD 21 2F F0         .PL1A:		LD IX,ChanA+12
     802:  00:8DDB  CD BA 8A            		CALL PTDECOD
     803:  00:8DDE  ED 43 12 F0         		LD [PT3_AdInPtA],BC
     804:  00:8DE2                      
     805:  00:8DE2  21 5B F0            .PL1B:		LD HL,ChanB+CHNPRM_NtSkCn
     806:  00:8DE5  35                  		DEC [HL]
     807:  00:8DE6  20 0F               		JR NZ,.PL1C
     808:  00:8DE8  DD 21 4C F0         		LD IX,ChanB+12
     809:  00:8DEC  ED 4B 14 F0         		LD BC,[PT3_AdInPtB]
     810:  00:8DF0  CD BA 8A            		CALL PTDECOD
     811:  00:8DF3  ED 43 14 F0         		LD [PT3_AdInPtB],BC
     812:  00:8DF7                      
     813:  00:8DF7  21 78 F0            .PL1C:		LD HL,ChanC+CHNPRM_NtSkCn
     814:  00:8DFA  35                  		DEC [HL]
     815:  00:8DFB  20 0F               		JR NZ,.PL1D
     816:  00:8DFD  DD 21 69 F0         		LD IX,ChanC+12
     817:  00:8E01  ED 4B 16 F0         		LD BC,[PT3_AdInPtC]
     818:  00:8E05  CD BA 8A            		CALL PTDECOD
     819:  00:8E08  ED 43 16 F0         		LD [PT3_AdInPtC],BC
     820:  00:8E0C                      
     821:  00:8E0C  3A 1C F0            .PL1D:		LD A,[PT3_Delay]
     822:  00:8E0F  32 7A F0            		LD [DelyCnt],A
     823:  00:8E12                      
     824:  00:8E12  DD 21 23 F0         .PL2:		LD IX,ChanA
     825:  00:8E16  2A 40 F1            		LD HL,[AYREGS+AR_TonA]
     826:  00:8E19  CD 2A 8C            		CALL CHREGS
     827:  00:8E1C  22 40 F1            		LD [AYREGS+AR_TonA],HL
     828:  00:8E1F  3A 4A F1            		LD A,[AYREGS+AR_AmplC]
     829:  00:8E22  32 48 F1            		LD [AYREGS+AR_AmplA],A
     830:  00:8E25  DD 21 40 F0         		LD IX,ChanB
     831:  00:8E29  2A 42 F1            		LD HL,[AYREGS+AR_TonB]
     832:  00:8E2C  CD 2A 8C            		CALL CHREGS
     833:  00:8E2F  22 42 F1            		LD [AYREGS+AR_TonB],HL
     834:  00:8E32  3A 4A F1            		LD A,[AYREGS+AR_AmplC]
     835:  00:8E35  32 49 F1            		LD [AYREGS+AR_AmplB],A
     836:  00:8E38  DD 21 5D F0         		LD IX,ChanC
     837:  00:8E3C  2A 44 F1            		LD HL,[AYREGS+AR_TonC]
     838:  00:8E3F  CD 2A 8C            		CALL CHREGS
     839:  00:8E42  22 44 F1            		LD [AYREGS+AR_TonC],HL
     840:  00:8E45                      
     841:  00:8E45  2A 7E F0            		LD HL,[Ns_Base_AddToNs]
     842:  00:8E48  7C                  		LD A,H
     843:  00:8E49  85                  		ADD A,L
     844:  00:8E4A  32 46 F1            		LD [AYREGS+AR_Noise],A
     845:  00:8E4D                      
     846:  00:8E4D  3A 1D F0            		LD A,[PT3_AddToEn]
     847:  00:8E50  5F                  		LD E,A
     848:  00:8E51  87                  		ADD A,A
     849:  00:8E52  9F                  		SBC A,A
     850:  00:8E53  57                  		LD D,A
     851:  00:8E54  2A 4E F1            		LD HL,[EnvBase]
     852:  00:8E57  19                  		ADD HL,DE
     853:  00:8E58  ED 5B 7B F0         		LD DE,[CurESld]
     854:  00:8E5C  19                  		ADD HL,DE
     855:  00:8E5D  22 4B F1            		LD [AYREGS+AR_Env],HL
     856:  00:8E60                      
     857:  00:8E60  AF                  		XOR A
     858:  00:8E61  21 7D F0            		LD HL,CurEDel
     859:  00:8E64  B6                  		OR [HL]
     860:  00:8E65  C8                  		RET Z
     861:  00:8E66  35                  		DEC [HL]
     862:  00:8E67  C0                  		RET NZ
     863:  00:8E68  3A 1E F0            		LD A,[PT3_Env_Del]
     864:  00:8E6B  77                  		LD [HL],A
     865:  00:8E6C  2A 1F F0            		LD HL,[PT3_ESldAdd]
     866:  00:8E6F  19                  		ADD HL,DE
     867:  00:8E70  22 7B F0            		LD [CurESld],HL
     868:  00:8E73  C9                  		RET
     869:  00:8E74                      
     870:  00:8E74  AF                  PT3_ROUT:	XOR A
     871:  00:8E75                      	
     872:  00:8E75                      ROUT_A0:	; --- FIXES BITS 6 AND 7 OF MIXER ---
     873:  00:8E75  21 47 F1            		LD	HL,AYREGS+AR_Mixer
     874:  00:8E78  CB FE               		set	7,[hl]
     875:  00:8E7A  CB B6               		res	6,[hl]
     876:  00:8E7C                      
     877:  00:8E7C  0E A0               		LD C,$A0
     878:  00:8E7E  21 40 F1            		LD HL,AYREGS
     879:  00:8E81  ED 79               .LOUT:		OUT [C],A
     880:  00:8E83  0C                  		INC C
     881:  00:8E84  ED A3               		OUTI 
     882:  00:8E86  0D                  		DEC C
     883:  00:8E87  3C                  		INC A
     884:  00:8E88  FE 0D               		CP 13
     885:  00:8E8A  20 F5               		JR NZ,.LOUT
     886:  00:8E8C  ED 79               		OUT [C],A
     887:  00:8E8E  7E                  		LD A,[HL]
     888:  00:8E8F  A7                  		AND A
     889:  00:8E90  F8                  		RET M
     890:  00:8E91  0C                  		INC C
     891:  00:8E92  ED 79               		OUT [C],A
     892:  00:8E94  C9                  		RET
     893:  00:8E95                      
     894:  00:8E95  64                  NT_DATA:	db (T_NEW_0-T1_)*2
     895:  00:8E96  2A                  		db TCNEW_0-T_
     896:  00:8E97  65                  		db (T_OLD_0-T1_)*2+1
     897:  00:8E98  00                  		db TCOLD_0-T_
     898:  00:8E99  01                  		db (T_NEW_1-T1_)*2+1
     899:  00:8E9A  0C                  		db TCNEW_1-T_
     900:  00:8E9B  01                  		db (T_OLD_1-T1_)*2+1
     901:  00:8E9C  0C                  		db TCOLD_1-T_
     902:  00:8E9D  94                  		db (T_NEW_2-T1_)*2
     903:  00:8E9E  35                  		db TCNEW_2-T_
     904:  00:8E9F  30                  		db (T_OLD_2-T1_)*2
     905:  00:8EA0  0E                  		db TCOLD_2-T_
     906:  00:8EA1  60                  		db (T_NEW_3-T1_)*2
     907:  00:8EA2  20                  		db TCNEW_3-T_
     908:  00:8EA3  60                  		db (T_OLD_3-T1_)*2
     909:  00:8EA4  21                  		db TCOLD_3-T_
     910:  00:8EA5                      
     911:  00:8EA5                      T_:
     912:  00:8EA5                      
     913:  00:8EA5                      TCOLD_0:	db $00+1,$04+1,$08+1,$0A+1,$0C+1,$0E+1,$12+1,$14+1
     913:  00:8EA5  01 05 09 0B 0D 0F 13 15 
     914:  00:8EAD  19 25 3D 00         		db $18+1,$24+1,$3C+1,0
     915:  00:8EB1                      TCNEW_1:	
     916:  00:8EB1  5D 00               TCOLD_1:	db $5C+1,0
     917:  00:8EB3                      TCOLD_2:	db $30+1,$36+1,$4C+1,$52+1,$5E+1,$70+1,$82,$8C,$9C
     917:  00:8EB3  31 37 4D 53 5F 71 82 8C 9C 
     918:  00:8EBC                      		db $9E,$A0,$A6,$A8,$AA,$AC,$AE,$AE,0
     918:  00:8EBC  9E A0 A6 A8 AA AC AE AE 00 
     919:  00:8EC5  57                  TCNEW_3:	db $56+1
     920:  00:8EC6                      TCOLD_3:	db $1E+1,$22+1,$24+1,$28+1,$2C+1,$2E+1,$32+1,$BE+1,0
     920:  00:8EC6  1F 23 25 29 2D 2F 33 BF 00 
     921:  00:8ECF                      TCNEW_0:	db $1C+1,$20+1,$22+1,$26+1,$2A+1,$2C+1,$30+1,$54+1
     921:  00:8ECF  1D 21 23 27 2B 2D 31 55 
     922:  00:8ED7  BD BF 00            		db $BC+1,$BE+1,0
     923:  00:8EDA                      TCNEW_2:	db $1A+1,$20+1,$24+1,$28+1,$2A+1,$3A+1,$4C+1,$5E+1
     923:  00:8EDA  1B 21 25 29 2B 3B 4D 5F 
     924:  00:8EE2  BB BD BF            		db $BA+1,$BC+1,$BE+1
     925:  00:8EE5                      
     926:  00:8EE5  00 01 00 90         EMPTYSAMORN: 	db 0,1,0,$90 ;delete $90 if you don't need default sample
     927:  00:8EE9                      
     928:  00:8EE9                      T_PACK:		; First 12 values of tone tables (packed)
     929:  00:8EE9  0D                  		db ($06EC*2)/256
     930:  00:8EEA  D8                  		db #d8
     931:  00:8EEB  69                  		db $0755-$06EC
     932:  00:8EEC  70                  		db $07C5-$0755
     933:  00:8EED  76                  		db $083B-$07C5
     934:  00:8EEE  7D                  		db $08B8-$083B
     935:  00:8EEF  85                  		db $093D-$08B8
     936:  00:8EF0  8D                  		db $09CA-$093D
     937:  00:8EF1  95                  		db $0A5F-$09CA
     938:  00:8EF2  9D                  		db $0AFC-$0A5F
     939:  00:8EF3  A8                  		db $0BA4-$0AFC
     940:  00:8EF4  B1                  		db $0C55-$0BA4
     941:  00:8EF5  BB                  		db $0D10-$0C55
     942:  00:8EF6  0C                  		db ($066D*2)/256
     943:  00:8EF7  DA                  		db #da
     944:  00:8EF8  62                  		db $06CF-$066D
     945:  00:8EF9  68                  		db $0737-$06CF
     946:  00:8EFA  6D                  		db $07A4-$0737
     947:  00:8EFB  75                  		db $0819-$07A4
     948:  00:8EFC  7B                  		db $0894-$0819
     949:  00:8EFD  83                  		db $0917-$0894
     950:  00:8EFE  8A                  		db $09A1-$0917
     951:  00:8EFF  92                  		db $0A33-$09A1
     952:  00:8F00  9C                  		db $0ACF-$0A33
     953:  00:8F01  A4                  		db $0B73-$0ACF
     954:  00:8F02  AF                  		db $0C22-$0B73
     955:  00:8F03  B8                  		db $0CDA-$0C22
     956:  00:8F04  0E                  		db ($0704*2)/256
     957:  00:8F05  08                  		db #08
     958:  00:8F06  6A                  		db $076E-$0704
     959:  00:8F07  72                  		db $07E0-$076E
     960:  00:8F08  78                  		db $0858-$07E0
     961:  00:8F09  7E                  		db $08D6-$0858
     962:  00:8F0A  86                  		db $095C-$08D6
     963:  00:8F0B  90                  		db $09EC-$095C
     964:  00:8F0C  96                  		db $0A82-$09EC
     965:  00:8F0D  A0                  		db $0B22-$0A82
     966:  00:8F0E  AA                  		db $0BCC-$0B22
     967:  00:8F0F  B4                  		db $0C80-$0BCC
     968:  00:8F10  BE                  		db $0D3E-$0C80
     969:  00:8F11  0F                  		db ($07E0*2)/256
     970:  00:8F12  C0                  		db #c0
     971:  00:8F13  78                  		db $0858-$07E0
     972:  00:8F14  88                  		db $08E0-$0858
     973:  00:8F15  80                  		db $0960-$08E0
     974:  00:8F16  90                  		db $09F0-$0960
     975:  00:8F17  98                  		db $0A88-$09F0
     976:  00:8F18  A0                  		db $0B28-$0A88
     977:  00:8F19  B0                  		db $0BD8-$0B28
     978:  00:8F1A  A8                  		db $0C80-$0BD8
     979:  00:8F1B  E0                  		db $0D60-$0C80
     980:  00:8F1C  B0                  		db $0E10-$0D60
     981:  00:8F1D  E8                  		db $0EF8-$0E10
      61.  00:8F1E                      	include "ayFX-ROM_sjasm.asm"
       1:  00:8F1E                      		; --- ayFX REPLAYER v1.31 ---
       2:  00:8F1E                      
       3:  00:8F1E                      		; --- v1.31	Fixed bug on previous version, only PSG channel C worked
       4:  00:8F1E                      		; --- v1.3	Fixed volume and Relative volume versions on the same file, conditional compilation
       5:  00:8F1E                      		; ---		Support for dynamic or fixed channel allocation
       6:  00:8F1E                      		; --- v1.2f/r	ayFX bank support
       7:  00:8F1E                      		; --- v1.11f/r	If a frame volume is zero then no AYREGS update
       8:  00:8F1E                      		; --- v1.1f/r	Fixed volume for all ayFX streams
       9:  00:8F1E                      		; --- v1.1	Explicit priority (as suggested by AR)
      10:  00:8F1E                      		; --- v1.0f	Bug fixed (error when using noise)
      11:  00:8F1E                      		; --- v1.0	Initial release
      12:  00:8F1E                      
      13:  00:8F1E                      		; --- DEFINE AYFXRELATIVE AS 0 FOR FIXED VOLUME VERSION ---
      14:  00:8F1E                      		; --- DEFINE AYFXRELATIVE AS 1 FOR RELATIVE VOLUME VERSION ---
      15:  00:8F1E  (00:0000)           AYFXRELATIVE equ 0
      16:  00:8F1E                      
      17:  00:8F1E                      ayFX_SETUP:	; ---          ayFX replayer setup          ---
      18:  00:8F1E                      		; --- INPUT: HL -> pointer to the ayFX bank ---
      19:  00:8F1E  22 41 F2            		ld	[ayFX_BANK],hl			; Current ayFX bank
      20:  00:8F21  3E 01               		ld	a,1				; a:=0
      21:  00:8F23  32 40 F2            		ld	[ayFX_MODE],a			; Initial mode: fixed channel
      22:  00:8F26  3C                  		inc	a				; Starting channel (=1)
      23:  00:8F27  32 4A F2            		ld	[ayFX_CHANNEL],a		; Updated
      24:  00:8F2A                      ayFX_END:	; --- End of an ayFX stream ---
      25:  00:8F2A  3E FF               		ld	a,255				; Lowest ayFX priority
      26:  00:8F2C  32 43 F2            		ld	[ayFX_PRIORITY],a		; Priority saved (not playing ayFX stream)
      27:  00:8F2F  C9                  		ret					; Return
      28:  00:8F30                      
      29:  00:8F30                      ayFX_INIT:	; ---     INIT A NEW ayFX STREAM     ---
      30:  00:8F30                      		; --- INPUT: A -> sound to be played ---
      31:  00:8F30                      		; ---        C -> sound priority     ---
      32:  00:8F30  C5                  		push	bc				; Store bc in stack
      33:  00:8F31  D5                  		push	de				; Store de in stack
      34:  00:8F32  E5                  		push	hl				; Store hl in stack
      35:  00:8F33                      		; --- Check if the index is in the bank ---
      36:  00:8F33  47                  		ld	b,a				; b:=a (new ayFX stream index)
      37:  00:8F34  2A 41 F2            		ld	hl,[ayFX_BANK]			; Current ayFX BANK
      38:  00:8F37  7E                  		ld	a,[hl]				; Number of samples in the bank
      39:  00:8F38  B7                  		or	a				; If zero (means 256 samples)...
      40:  00:8F39  28 06               		jr	z,.CHECK_PRI			; ...goto .CHECK_PRI
      41:  00:8F3B                      		; The bank has less than 256 samples
      42:  00:8F3B  78                  		ld	a,b				; a:=b (new ayFX stream index)
      43:  00:8F3C  BE                  		cp	[hl]				; If new index is not in the bank...
      44:  00:8F3D  3E 02               		ld	a,2				; a:=2 (error 2: Sample not in the bank)
      45:  00:8F3F  30 21               		jr	nc,.INIT_END			; ...we can't init it
      46:  00:8F41                      .CHECK_PRI:	; --- Check if the new priority is lower than the current one ---
      47:  00:8F41                      		; ---   Remember: 0 = highest priority, 15 = lowest priority  ---
      48:  00:8F41  78                  		ld	a,b				; a:=b (new ayFX stream index)
      49:  00:8F42  3A 43 F2            		ld	a,[ayFX_PRIORITY]		; a:=Current ayFX stream priority
      50:  00:8F45  B9                  		cp	c				; If new ayFX stream priority is lower than current one...
      51:  00:8F46  3E 01               		ld	a,1				; a:=1 (error 1: A sample with higher priority is being played)
      52:  00:8F48  38 18               		jr	c,.INIT_END			; ...we don't start the new ayFX stream
      53:  00:8F4A                      		; --- Set new priority ---
      54:  00:8F4A  79                  		ld	a,c				; a:=New priority
      55:  00:8F4B  E6 0F               		and	$0F				; We mask the priority
      56:  00:8F4D  32 43 F2            		ld	[ayFX_PRIORITY],a		; new ayFX stream priority saved in RAM
      57:  00:8F50                      
      58:  00:8F50                      		IF ( AYFXRELATIVE == 1 )
      59:  00:8F50                    ~ 			; --- Volume adjust using PT3 volume table ---
      60:  00:8F50                    ~ 			ld	c,a				; c:=New priority (fixed)
      61:  00:8F50                    ~ 			ld	a,15				; a:=15
      62:  00:8F50                    ~ 			sub	c				; a:=15-New priority = relative volume
      63:  00:8F50                    ~ 			jr	z,.INIT_NOSOUND		; If priority is 15 -> no sound output (volume is zero)
      64:  00:8F50                    ~ 			add	a,a				; a:=a*2
      65:  00:8F50                    ~ 			add	a,a				; a:=a*4
      66:  00:8F50                    ~ 			add	a,a				; a:=a*8
      67:  00:8F50                    ~ 			add	a,a				; a:=a*16
      68:  00:8F50                    ~ 			ld	e,a				; e:=a
      69:  00:8F50                    ~ 			ld	d,0				; de:=a
      70:  00:8F50                    ~ 			ld	hl,VT_				; hl:=PT3 volume table
      71:  00:8F50                    ~ 			add	hl,de				; hl is a pointer to the relative volume table
      72:  00:8F50                    ~ 			ld	[ayFX_VT],hl			; Save pointer
      73:  00:8F50                    ~ 		ENDIF
      74:  00:8F50                      
      75:  00:8F50                      		; --- Calculate the pointer to the new ayFX stream ---
      76:  00:8F50  ED 5B 41 F2         		ld	de,[ayFX_BANK]			; de:=Current ayFX bank
      77:  00:8F54  13                  		inc	de				; de points to the increments table of the bank
      78:  00:8F55  68                  		ld	l,b				; l:=b (new ayFX stream index)
      79:  00:8F56  26 00               		ld	h,0				; hl:=b (new ayFX stream index)
      80:  00:8F58  29                  		add	hl,hl				; hl:=hl*2
      81:  00:8F59  19                  		add	hl,de				; hl:=hl+de (hl points to the correct increment)
      82:  00:8F5A  5E                  		ld	e,[hl]				; e:=lower byte of the increment
      83:  00:8F5B  23                  		inc	hl				; hl points to the higher byte of the correct increment
      84:  00:8F5C  56                  		ld	d,[hl]				; de:=increment
      85:  00:8F5D  19                  		add	hl,de				; hl:=hl+de (hl points to the new ayFX stream)
      86:  00:8F5E  22 44 F2            		ld	[ayFX_POINTER],hl		; Pointer saved in RAM
      87:  00:8F61  AF                  		xor	a				; a:=0 (no errors)
      88:  00:8F62  E1                  .INIT_END:	pop	hl				; Retrieve hl from stack
      89:  00:8F63  D1                  		pop	de				; Retrieve de from stack
      90:  00:8F64  C1                  		pop	bc				; Retrieve bc from stack
      91:  00:8F65  C9                  		ret					; Return
      92:  00:8F66                      
      93:  00:8F66                      		IF ( AYFXRELATIVE == 1 )
      94:  00:8F66                    ~ .INIT_NOSOUND:	; --- Init a sample with relative volume zero -> no sound output ---
      95:  00:8F66                    ~ 			ld	a,255				; Lowest ayFX priority
      96:  00:8F66                    ~ 			ld	[ayFX_PRIORITY],a		; Priority saved (not playing ayFX stream)
      97:  00:8F66                    ~ 			jr	.INIT_END			; Jumps to .INIT_END
      98:  00:8F66                    ~ 		ENDIF
      99:  00:8F66                      
     100:  00:8F66                      ayFX_PLAY:	; --- PLAY A FRAME OF AN ayFX STREAM ---
     101:  00:8F66  3A 43 F2            		ld	a,[ayFX_PRIORITY]		; a:=Current ayFX stream priority
     102:  00:8F69  B7                  		or	a				; If priority has bit 7 on...
     103:  00:8F6A  F8                  		ret	m				; ...return
     104:  00:8F6B                      		; --- Calculate next ayFX channel (if needed) ---
     105:  00:8F6B  3A 40 F2            		ld	a,[ayFX_MODE]			; ayFX mode
     106:  00:8F6E  E6 01               		and	1				; If bit0=0 (fixed channel)...
     107:  00:8F70  28 08               		jr	z,.TAKECB			; ...skip channel changing
     108:  00:8F72  21 4A F2            		ld	hl,ayFX_CHANNEL			; Old ayFX playing channel
     109:  00:8F75  35                  		dec	[hl]				; New ayFX playing channel
     110:  00:8F76  20 02               		jr	nz,.TAKECB			; If not zero jump to .TAKECB
     111:  00:8F78  36 03               		ld	[hl],3				; If zero -> set channel 3
     112:  00:8F7A                      .TAKECB:	; --- Extract control byte from stream ---
     113:  00:8F7A  2A 44 F2            		ld	hl,[ayFX_POINTER]		; Pointer to the current ayFX stream
     114:  00:8F7D  4E                  		ld	c,[hl]				; c:=Control byte
     115:  00:8F7E  23                  		inc	hl				; Increment pointer
     116:  00:8F7F                      		; --- Check if there's new tone on stream ---
     117:  00:8F7F  CB 69               		bit	5,c				; If bit 5 c is off...
     118:  00:8F81  28 08               		jr	z,.CHECK_NN			; ...jump to .CHECK_NN (no new tone)
     119:  00:8F83                      		; --- Extract new tone from stream ---
     120:  00:8F83  5E                  		ld	e,[hl]				; e:=lower byte of new tone
     121:  00:8F84  23                  		inc	hl				; Increment pointer
     122:  00:8F85  56                  		ld	d,[hl]				; d:=higher byte of new tone
     123:  00:8F86  23                  		inc	hl				; Increment pointer
     124:  00:8F87  ED 53 46 F2         		ld	[ayFX_TONE],de			; ayFX tone updated
     125:  00:8F8B                      .CHECK_NN:	; --- Check if there's new noise on stream ---
     126:  00:8F8B  CB 71               		bit	6,c				; if bit 6 c is off...
     127:  00:8F8D  28 09               		jr	z,.SETPOINTER			; ...jump to .SETPOINTER (no new noise)
     128:  00:8F8F                      		; --- Extract new noise from stream ---
     129:  00:8F8F  7E                  		ld	a,[hl]				; a:=New noise
     130:  00:8F90  23                  		inc	hl				; Increment pointer
     131:  00:8F91  FE 20               		cp	$20				; If it's an illegal value of noise (used to mark end of stream)...
     132:  00:8F93  28 95               		jr.	z,ayFX_END			; ...jump to ayFX_END
     133:  00:8F95  32 48 F2            		ld	[ayFX_NOISE],a			; ayFX noise updated
     134:  00:8F98                      .SETPOINTER:	; --- Update ayFX pointer ---
     135:  00:8F98  22 44 F2            		ld	[ayFX_POINTER],hl		; Update ayFX stream pointer
     136:  00:8F9B                      		; --- Extract volume ---
     137:  00:8F9B  79                  		ld	a,c				; a:=Control byte
     138:  00:8F9C  E6 0F               		and	$0F				; lower nibble
     139:  00:8F9E                      
     140:  00:8F9E                      		IF ( AYFXRELATIVE == 1 )
     141:  00:8F9E                    ~ 			; --- Fix the volume using PT3 Volume Table ---
     142:  00:8F9E                    ~ 			ld	hl,[ayFX_VT]			; hl:=Pointer to relative volume table
     143:  00:8F9E                    ~ 			ld	e,a				; e:=a (ayFX volume)
     144:  00:8F9E                    ~ 			ld	d,0				; d:=0
     145:  00:8F9E                    ~ 			add	hl,de				; hl:=hl+de (hl points to the relative volume of this frame
     146:  00:8F9E                    ~ 			ld	a,[hl]				; a:=ayFX relative volume
     147:  00:8F9E                    ~ 			or	a				; If relative volume is zero...
     148:  00:8F9E                    ~ 		ENDIF
     149:  00:8F9E                      
     150:  00:8F9E  32 49 F2            		ld	[ayFX_VOLUME],a			; ayFX volume updated
     151:  00:8FA1  C8                  		ret	z				; ...return (don't copy ayFX values in to AYREGS)
     152:  00:8FA2                      		; -------------------------------------
     153:  00:8FA2                      		; --- COPY ayFX VALUES IN TO AYREGS ---
     154:  00:8FA2                      		; -------------------------------------
     155:  00:8FA2                      		; --- Set noise channel ---
     156:  00:8FA2  CB 79               		bit	7,c				; If noise is off...
     157:  00:8FA4  20 06               		jr	nz,.SETMASKS			; ...jump to .SETMASKS
     158:  00:8FA6  3A 48 F2            		ld	a,[ayFX_NOISE]			; ayFX noise value
     159:  00:8FA9  32 46 F1            		ld	[AYREGS+6],a			; copied in to AYREGS (noise channel)
     160:  00:8FAC                      .SETMASKS:	; --- Set mixer masks ---
     161:  00:8FAC  79                  		ld	a,c				; a:=Control byte
     162:  00:8FAD  E6 90               		and	$90				; Only bits 7 and 4 (noise and tone mask for psg reg 7)
     163:  00:8FAF  FE 90               		cp	$90				; If no noise and no tone...
     164:  00:8FB1  C8                  		ret	z				; ...return (don't copy ayFX values in to AYREGS)
     165:  00:8FB2                      		; --- Copy ayFX values in to ARYREGS ---
     166:  00:8FB2  0F                  		rrca					; Rotate a to the right (1 TIME)
     167:  00:8FB3  0F                  		rrca					; Rotate a to the right (2 TIMES) (OR mask)
     168:  00:8FB4  16 DB               		ld	d,$DB				; d:=Mask for psg mixer (AND mask)
     169:  00:8FB6                      		; --- Dump to correct channel ---
     170:  00:8FB6  21 4A F2            		ld	hl,ayFX_CHANNEL			; Next ayFX playing channel
     171:  00:8FB9  46                  		ld	b,[hl]				; Channel counter
     172:  00:8FBA                      .CHK1:		; --- Check if playing channel was 1 ---
     173:  00:8FBA  10 0D               		djnz	.CHK2				; Decrement and jump if channel was not 1
     174:  00:8FBC                      .PLAY_C:	; --- Play ayFX stream on channel C ---
     175:  00:8FBC  CD EB 8F            		call	.SETMIXER			; Set PSG mixer value (returning a=ayFX volume and hl=ayFX tone)
     176:  00:8FBF  32 4A F1            		ld	[AYREGS+10],a			; Volume copied in to AYREGS (channel C volume)
     177:  00:8FC2  CB 51               		bit	2,c				; If tone is off...
     178:  00:8FC4  C0                  		ret	nz				; ...return
     179:  00:8FC5  22 44 F1            		ld	[AYREGS+4],hl			; copied in to AYREGS (channel C tone)
     180:  00:8FC8  C9                  		ret					; Return
     181:  00:8FC9                      .CHK2:		; --- Check if playing channel was 2 ---
     182:  00:8FC9  CB 0A               		rrc	d				; Rotate right AND mask
     183:  00:8FCB  0F                  		rrca					; Rotate right OR mask
     184:  00:8FCC  10 0D               		djnz	.CHK3				; Decrement and jump if channel was not 2
     185:  00:8FCE                      .PLAY_B:	; --- Play ayFX stream on channel B ---
     186:  00:8FCE  CD EB 8F            		call	.SETMIXER			; Set PSG mixer value (returning a=ayFX volume and hl=ayFX tone)
     187:  00:8FD1  32 49 F1            		ld	[AYREGS+9],a			; Volume copied in to AYREGS (channel B volume)
     188:  00:8FD4  CB 49               		bit	1,c				; If tone is off...
     189:  00:8FD6  C0                  		ret	nz				; ...return
     190:  00:8FD7  22 42 F1            		ld	[AYREGS+2],hl			; copied in to AYREGS (channel B tone)
     191:  00:8FDA  C9                  		ret					; Return
     192:  00:8FDB                      .CHK3:		; --- Check if playing channel was 3 ---
     193:  00:8FDB  CB 0A               		rrc	d				; Rotate right AND mask
     194:  00:8FDD  0F                  		rrca					; Rotate right OR mask
     195:  00:8FDE                      .PLAY_A:	; --- Play ayFX stream on channel A ---
     196:  00:8FDE  CD EB 8F            		call	.SETMIXER			; Set PSG mixer value (returning a=ayFX volume and hl=ayFX tone)
     197:  00:8FE1  32 48 F1            		ld	[AYREGS+8],a			; Volume copied in to AYREGS (channel A volume)
     198:  00:8FE4  CB 41               		bit	0,c				; If tone is off...
     199:  00:8FE6  C0                  		ret	nz				; ...return
     200:  00:8FE7  22 40 F1            		ld	[AYREGS+0],hl			; copied in to AYREGS (channel A tone)
     201:  00:8FEA  C9                  		ret					; Return
     202:  00:8FEB                      .SETMIXER:	; --- Set PSG mixer value ---
     203:  00:8FEB  4F                  		ld	c,a				; c:=OR mask
     204:  00:8FEC  3A 47 F1            		ld	a,[AYREGS+7]			; a:=PSG mixer value
     205:  00:8FEF  A2                  		and	d				; AND mask
     206:  00:8FF0  B1                  		or	c				; OR mask
     207:  00:8FF1  32 47 F1            		ld	[AYREGS+7],a			; PSG mixer value updated
     208:  00:8FF4  3A 49 F2            		ld	a,[ayFX_VOLUME]			; a:=ayFX volume value
     209:  00:8FF7  2A 46 F2            		ld	hl,[ayFX_TONE]			; ayFX tone value
     210:  00:8FFA  C9                  		ret					; Return
     211:  00:8FFB                      
     212:  00:8FFB                      		IF ( AYFXRELATIVE == 1 )
     213:  00:8FFB                    ~ 			; --- UNCOMMENT THIS IF YOU DON'T USE THIS REPLAYER WITH PT3 REPLAYER ---
     214:  00:8FFB                    ~ 		;VT_:	.INCBIN	"VT.BIN"
     215:  00:8FFB                    ~ 			; --- UNCOMMENT THIS IF YOU DON'T USE THIS REPLAYER WITH PT3 REPLAYER ---
     216:  00:8FFB                    ~ 		ENDIF
      62.  00:8FFB                      	
      63.  00:8FFB                      	
      64.  00:8FFB                      
      65.  00:8FFB                      ;;=====================================================
      66.  00:8FFB                      ;;DEFINICIÓN DE CANTIONES Y EFECTOS DE SONIDO
      67.  00:8FFB                      ;;=====================================================		
      68.  00:8FFB                      song:
      69.  00:8FFB  (0968)              	incbin "bloodytears_castlevania.99"
      70.  00:9963                      	
      71.  00:9963                      sfx_bank:
      72.  00:9963  (004B)              	incbin "demo.afb"
      73.  00:99AE                      
     149   00:99AE                      	
     150   00:99AE                      	include "subr_ayudas.asm"
       1.  00:99AE                      ;;=====================================================
       2.  00:99AE                      ;;SUBRUTINAS MANEJO DE OBJETOS AYUDA
       3.  00:99AE                      ;;=====================================================	
       4.  00:99AE                      
       5.  00:99AE                      ;;=====================================================
       6.  00:99AE                      ;;INICIALIZA_AYUDAS
       7.  00:99AE                      ;;=====================================================	
       8.  00:99AE                      ; función: 	inicializa las variables de estructuras de ayuda del array lista_ayudas
       9.  00:99AE                      ; entrada: 	datos_delasdistintasayudas, variable estructura_ayuda_ayudaquesea
      10.  00:99AE                      ; salida: 	lista_ayudas
      11.  00:99AE                      ; toca:		HL, DE, BC
      12.  00:99AE                      inicializa_ayudas:
      13.  00:99AE                      	;oración
      14.  00:99AE  DD 21 7D A8         	LD		IX, ayuda_oracion
      15.  00:99B2  DD 36 00 00         	LD		(IX + 0), INACTIVA			
      16.  00:99B6  21 56 A9            	LD		HL, array_oracionon
      17.  00:99B9  DD 74 01            	LD		(IX + 1), H
      18.  00:99BC  DD 75 02            	LD		(IX + 2), L
      19.  00:99BF  21 5A A9            	LD		HL, array_oracionoff
      20.  00:99C2  DD 74 03            	LD		(IX + 3), H
      21.  00:99C5  DD 75 04            	LD		(IX + 4), L
      22.  00:99C8  DD 36 05 A3         	LD		(IX + 5), POSORACION
      23.  00:99CC  DD 36 06 20         	LD		(IX + 6), POSORACIONX
      24.  00:99D0  DD 36 07 70         	LD		(IX + 7), POSAYUDASY	
      25.  00:99D4  21 C2 9A            	LD		HL, accion_oracion
      26.  00:99D7  DD 74 08            	LD		(IX + 8), H
      27.  00:99DA  DD 75 09            	LD		(IX + 9), L
      28.  00:99DD                      	
      29.  00:99DD                      	;cruz
      30.  00:99DD  21 F7 A8            	LD		HL, datos_cruz
      31.  00:99E0  11 8D A8            	LD		DE, ayuda_cruz
      32.  00:99E3  01 10 00            	LD		BC, 16;#ESTRUCTURA_AYUDA ;equivale a 16.. el tamaño de la estructura en bytes
      33.  00:99E6  ED B0               	LDIR
      34.  00:99E8                      	
      35.  00:99E8                      	;agua bendita
      36.  00:99E8  21 01 A9            	LD		HL, datos_aguabendita
      37.  00:99EB  11 9D A8            	LD		DE, ayuda_aguabendita
      38.  00:99EE  CD 16 9A            	CALL	carga_datos_ayuda
      39.  00:99F1                      		
      40.  00:99F1                      	;armadura
      41.  00:99F1  21 12 A9            	LD		HL, datos_armadura
      42.  00:99F4  11 AD A8            	LD		DE, ayuda_armadura
      43.  00:99F7  CD 16 9A            	CALL	carga_datos_ayuda
      44.  00:99FA                      		
      45.  00:99FA                      	;planta
      46.  00:99FA  21 23 A9            	LD		HL, datos_planta
      47.  00:99FD  11 BD A8            	LD		DE, ayuda_planta
      48.  00:9A00  CD 16 9A            	CALL	carga_datos_ayuda
      49.  00:9A03                      		
      50.  00:9A03                      	;vida extra
      51.  00:9A03  21 34 A9            	LD		HL, datos_vidaextra
      52.  00:9A06  11 CD A8            	LD		DE, ayuda_vidaextra
      53.  00:9A09  CD 16 9A            	CALL	carga_datos_ayuda
      54.  00:9A0C                      		
      55.  00:9A0C                      	;ballesta
      56.  00:9A0C  21 45 A9            	LD		HL, datos_ballesta
      57.  00:9A0F  11 DD A8            	LD		DE, ayuda_ballesta
      58.  00:9A12  CD 16 9A            	CALL	carga_datos_ayuda
      59.  00:9A15                      fin_resetea_ayudas:
      60.  00:9A15  C9                  	RET
      61.  00:9A16                      	
      62.  00:9A16                      
      63.  00:9A16                      ;;=====================================================
      64.  00:9A16                      ;;CARGA_DATOS_AYUDA
      65.  00:9A16                      ;;=====================================================	
      66.  00:9A16                      ; función: 	carga los datos de la ayuda de una variable dentro de la variable estructura (más carga y espacio que rellenar a pelo desde IX en adelante pero más simple)
      67.  00:9A16                      ;entrada
      68.  00:9A16                      ;  hl: origen de datos
      69.  00:9A16                      ;  de: destino de datos
      70.  00:9A16                      ; salida: 	-
      71.  00:9A16                      ; toca:		HL, DE, BC
      72.  00:9A16                      carga_datos_ayuda:
      73.  00:9A16  01 10 00            	LD		BC, 16;ESTRUCTURA_AYUDA ;equivale a 16.. el tamaño de la estructura en bytes
      74.  00:9A19  ED B0               	LDIR
      75.  00:9A1B                      fin_carga_datos_ayuda:
      76.  00:9A1B  C9                  	RET
      77.  00:9A1C                      
      78.  00:9A1C                      
      79.  00:9A1C                      
      80.  00:9A1C                      ;;=====================================================
      81.  00:9A1C                      ;;PINTA_OBJ_AYUDA
      82.  00:9A1C                      ;;=====================================================	
      83.  00:9A1C                      ; función: 	pinta un objeto de tipo ayuda que se le pase por referencia IX y el tipo en A
      84.  00:9A1C                      ; entrada: 	IX - puntero a objeto a mostrar, A - si está on u off
      85.  00:9A1C                      ; salida: 	-
      86.  00:9A1C                      ; toca:		AF, HL, BC, DE
      87.  00:9A1C                      pinta_obj_ayuda:
      88.  00:9A1C                      	;se recibe objeto desde fuera, por ejmplo LD IX, ayuda_oracion
      89.  00:9A1C                      
      90.  00:9A1C  B7                  	OR		 A
      91.  00:9A1D  CA 2C 9A            	JP		 Z,.dibujooff
      92.  00:9A20                      .dibujoon:	
      93.  00:9A20  DD 66 01            	LD		 H, (IX + 1)
      94.  00:9A23  DD 6E 02            	LD		 L, (IX + 2)
      95.  00:9A26  22 B0 84            	LD		(wordaux2), HL
      96.  00:9A29  C3 35 9A            	JP		.param_wordaux2
      97.  00:9A2C                      .dibujooff:
      98.  00:9A2C  DD 66 03            	LD		 H, (IX + 3)
      99.  00:9A2F  DD 6E 04            	LD		 L, (IX + 4)
     100.  00:9A32  22 B0 84            	LD		(wordaux2), HL
     101.  00:9A35                      
     102.  00:9A35                      .param_wordaux2:	
     103.  00:9A35  21 00 19            	LD		HL, TILMAP + 256	;calcula posición en tilemap + 256 por colocarse siempre en bank1
     104.  00:9A38  DD 7E 05            	LD		 A, (IX + 5)
     105.  00:9A3B  CD 75 81            	CALL	suma_A_HL
     106.  00:9A3E  22 AE 84            	LD		(wordaux1), HL		;pongo el valor en wordaux1
     107.  00:9A41                      
     108.  00:9A41                      .filasycols:
     109.  00:9A41  3E 02               	LD		 A, 2				;equivale a LD	A,2 porque A ya valía 1
     110.  00:9A43  32 B2 84            	LD		(byteaux1), A	;nº de filas
     111.  00:9A46  32 B3 84            	LD		(byteaux2), A	;nº de columnas
     112.  00:9A49                      	
     113.  00:9A49  C3 6E 84            	JP		pinta_array
     114.  00:9A4C                      fin_pinta_obj_ayuda:
     115.  00:9A4C                      
     116.  00:9A4C                      
     117.  00:9A4C                      ;;=====================================================
     118.  00:9A4C                      ;;PINTA_AYUDAS_HABITACIÓN
     119.  00:9A4C                      ;;=====================================================	
     120.  00:9A4C                      ; función: 	examina el byte con las ayudas y pinta las que estén seleccionadas según variable habitacion_extras
     121.  00:9A4C                      ; entrada: 	habitacion_extras
     122.  00:9A4C                      ; salida: 	-
     123.  00:9A4C                      pinta_ayudas_habitacion:
     124.  00:9A4C                      .examina_oracion:
     125.  00:9A4C  3A 2A A5            	LD		 A, (habitacion_extras)
     126.  00:9A4F  CB 7F               	BIT		 7,A
     127.  00:9A51  CA 5D 9A            	JP		 Z,.examina_cruz
     128.  00:9A54  DD 21 7D A8         	LD		IX, ayuda_oracion
     129.  00:9A58  3E 01               	LD		 A, ACTIVA
     130.  00:9A5A  CD 1C 9A            	CALL	pinta_obj_ayuda
     131.  00:9A5D                      .examina_cruz:
     132.  00:9A5D  3A 2A A5            	LD		 A, (habitacion_extras)
     133.  00:9A60  CB 77               	BIT		 6,A
     134.  00:9A62  CA 6E 9A            	JP		 Z,.examina_aguabendita
     135.  00:9A65  DD 21 8D A8         	LD		IX, ayuda_cruz
     136.  00:9A69  3E 01               	LD		 A, ACTIVA
     137.  00:9A6B  CD 1C 9A            	CALL	pinta_obj_ayuda
     138.  00:9A6E                      .examina_aguabendita:
     139.  00:9A6E  3A 2A A5            	LD		 A, (habitacion_extras)
     140.  00:9A71  CB 6F               	BIT		 5,A
     141.  00:9A73  CA 7F 9A            	JP		 Z,.examina_armadura
     142.  00:9A76  DD 21 9D A8         	LD		IX, ayuda_aguabendita
     143.  00:9A7A  3E 01               	LD		 A, ACTIVA
     144.  00:9A7C  CD 1C 9A            	CALL	pinta_obj_ayuda
     145.  00:9A7F                      .examina_armadura:
     146.  00:9A7F  3A 2A A5            	LD		 A, (habitacion_extras)
     147.  00:9A82  CB 67               	BIT		 4,A
     148.  00:9A84  CA 90 9A            	JP		 Z,.examina_planta
     149.  00:9A87  DD 21 AD A8         	LD		IX, ayuda_armadura
     150.  00:9A8B  3E 01               	LD		 A, ACTIVA
     151.  00:9A8D  CD 1C 9A            	CALL	pinta_obj_ayuda
     152.  00:9A90                      .examina_planta:
     153.  00:9A90  3A 2A A5            	LD		 A, (habitacion_extras)
     154.  00:9A93  CB 5F               	BIT		 3,A
     155.  00:9A95  CA A1 9A            	JP		 Z,.examina_vidaextra
     156.  00:9A98  DD 21 BD A8         	LD		IX, ayuda_planta
     157.  00:9A9C  3E 01               	LD		 A, ACTIVA
     158.  00:9A9E  CD 1C 9A            	CALL	pinta_obj_ayuda
     159.  00:9AA1                      .examina_vidaextra:
     160.  00:9AA1  3A 2A A5            	LD		 A, (habitacion_extras)
     161.  00:9AA4  CB 57               	BIT		 2,A
     162.  00:9AA6  CA B2 9A            	JP		 Z,.examina_ballesta
     163.  00:9AA9  DD 21 CD A8         	LD		IX, ayuda_vidaextra
     164.  00:9AAD  3E 01               	LD		 A, ACTIVA
     165.  00:9AAF  CD 1C 9A            	CALL	pinta_obj_ayuda
     166.  00:9AB2                      .examina_ballesta:
     167.  00:9AB2  3A 2A A5            	LD		 A, (habitacion_extras)
     168.  00:9AB5  CB 4F               	BIT		 1,A
     169.  00:9AB7  C8                  	RET		 Z
     170.  00:9AB8  DD 21 DD A8         	LD		IX, ayuda_ballesta
     171.  00:9ABC  3E 01               	LD		 A, ACTIVA
     172.  00:9ABE  CD 1C 9A            	CALL	pinta_obj_ayuda
     173.  00:9AC1                      fin_pinta_ayudas_habitacion:
     174.  00:9AC1  C9                  	RET
     175.  00:9AC2                      
     176.  00:9AC2                      
     177.  00:9AC2                      
     178.  00:9AC2                      ;;=====================================================
     179.  00:9AC2                      ;;ACCION_ORACION
     180.  00:9AC2                      ;;=====================================================	
     181.  00:9AC2                      ; función: 	
     182.  00:9AC2                      ; entrada: 	
     183.  00:9AC2                      ; salida: 	-
     184.  00:9AC2                      accion_oracion:
     185.  00:9AC2                      fin_accion_oracion:
     186.  00:9AC2  C9                  	RET
     187.  00:9AC3                      	
     188.  00:9AC3                      
     189.  00:9AC3                      ;;=====================================================
     190.  00:9AC3                      ;;ACCION_CRUZ
     191.  00:9AC3                      ;;=====================================================	
     192.  00:9AC3                      ; función: 	
     193.  00:9AC3                      ; entrada: 	
     194.  00:9AC3                      ; salida: 	-
     195.  00:9AC3                      accion_cruz:
     196.  00:9AC3                      fin_accion_cruz:
     197.  00:9AC3  C9                  	RET
     198.  00:9AC4                      
     199.  00:9AC4                      
     200.  00:9AC4                      ;;=====================================================
     201.  00:9AC4                      ;;ACCION_AGUA
     202.  00:9AC4                      ;;=====================================================	
     203.  00:9AC4                      ; función: 	
     204.  00:9AC4                      ; entrada: 	
     205.  00:9AC4                      ; salida: 	-
     206.  00:9AC4                      accion_agua:
     207.  00:9AC4                      fin_accion_agua:
     208.  00:9AC4  C9                  	RET
     209.  00:9AC5                      
     210.  00:9AC5                      
     211.  00:9AC5                      ;;=====================================================
     212.  00:9AC5                      ;;ACCION_ARMADURA
     213.  00:9AC5                      ;;=====================================================	
     214.  00:9AC5                      ; función: 	
     215.  00:9AC5                      ; entrada: 	
     216.  00:9AC5                      ; salida: 	-
     217.  00:9AC5                      accion_armadura:
     218.  00:9AC5                      fin_accion_armadura:
     219.  00:9AC5  C9                  	RET
     220.  00:9AC6                      
     221.  00:9AC6                      
     222.  00:9AC6                      ;;=====================================================
     223.  00:9AC6                      ;;ACCION_PLANTA
     224.  00:9AC6                      ;;=====================================================	
     225.  00:9AC6                      ; función: 	
     226.  00:9AC6                      ; entrada: 	
     227.  00:9AC6                      ; salida: 	-
     228.  00:9AC6                      accion_planta:
     229.  00:9AC6                      fin_accion_planta:
     230.  00:9AC6  C9                  	RET
     231.  00:9AC7                      
     232.  00:9AC7                      
     233.  00:9AC7                      ;;=====================================================
     234.  00:9AC7                      ;;ACCION_VIDAEXTRA
     235.  00:9AC7                      ;;=====================================================	
     236.  00:9AC7                      ; función: 	
     237.  00:9AC7                      ; entrada: 	
     238.  00:9AC7                      ; salida: 	-
     239.  00:9AC7                      accion_vidaextra:
     240.  00:9AC7                      fin_accion_vidaextra:
     241.  00:9AC7  C9                  	RET
     242.  00:9AC8                      
     243.  00:9AC8                      
     244.  00:9AC8                      ;;=====================================================
     245.  00:9AC8                      ;;ACCION_BALLESTA
     246.  00:9AC8                      ;;=====================================================	
     247.  00:9AC8                      ; función: 	
     248.  00:9AC8                      ; entrada: 	
     249.  00:9AC8                      ; salida: 	-
     250.  00:9AC8                      accion_ballesta:
     251.  00:9AC8                      fin_accion_ballesta:
     252.  00:9AC8  C9                  	RET
     253.  00:9AC9                      
     254.  00:9AC9                      
     151   00:9AC9                      	
     152   00:9AC9                      
     153   00:9AC9                      ;;=====================================================
     154   00:9AC9                      ;;DEFINICIÓN DE SUBRUTINAS DE FERNANDO PARA COMPRESIÓN Y SONIDO
     155   00:9AC9                      ;;=====================================================
     156   00:9AC9                      ;Este include lleva la rutina de descompresión de ROM/RAM a VRAM de pletter
     157   00:9AC9                      ;Está adaptada de la original a sjasm
     158   00:9AC9                      ;	HL = RAM/ROM source	; DE = VRAM destination
     159   00:9AC9                      depack_VRAM:
     160   00:9AC9                      	include "PL_VRAM_Depack_SJASM.asm"
       1.  00:9AC9                      ;-----------------------------------------------------------
       2.  00:9AC9                      ; Pletter v0.5b VRAM Depacker v1.1 - 16Kb version
       3.  00:9AC9                      ; HL = RAM/ROM source ; DE = VRAM destination
       4.  00:9AC9                      ;-----------------------------------------------------------
       5.  00:9AC9  F3                  	di
       6.  00:9ACA                      
       7.  00:9ACA                      ; VRAM address setup
       8.  00:9ACA  7B                  	ld	a,e
       9.  00:9ACB  D3 99               	out	[099h],a
      10.  00:9ACD  7A                  	ld	a,d
      11.  00:9ACE  F6 40               	or	040h
      12.  00:9AD0  D3 99               	out	[099h],a
      13.  00:9AD2                      
      14.  00:9AD2                      ; Initialization
      15.  00:9AD2  7E                  	ld	a,[hl]
      16.  00:9AD3  23                  	inc	hl
      17.  00:9AD4  D9                  	exx
      18.  00:9AD5  11 00 00            	ld	de,0
      19.  00:9AD8  87                  	add	a,a
      20.  00:9AD9  3C                  	inc	a
      21.  00:9ADA  CB 13               	rl	e
      22.  00:9ADC  87                  	add	a,a
      23.  00:9ADD  CB 13               	rl	e
      24.  00:9ADF  87                  	add	a,a
      25.  00:9AE0  CB 13               	rl	e
      26.  00:9AE2  CB 13               	rl	e
      27.  00:9AE4  21 9B 9B            	ld	hl,modes
      28.  00:9AE7  19                  	add	hl,de
      29.  00:9AE8  5E                  	ld	e,[hl]
      30.  00:9AE9  DD 6B               	ld	ixl,e
      31.  00:9AEB  23                  	inc	hl
      32.  00:9AEC  5E                  	ld	e,[hl]
      33.  00:9AED  DD 63               	ld	ixh,e
      34.  00:9AEF  1E 01               	ld	e,1
      35.  00:9AF1  D9                  	exx
      36.  00:9AF2  FD 21 FB 9A         	ld	iy,loop
      37.  00:9AF6                      
      38.  00:9AF6                      ; Main depack loop
      39.  00:9AF6  0E 98               literal:ld	c,098h
      40.  00:9AF8  ED A3               	outi
      41.  00:9AFA  13                  	inc	de
      42.  00:9AFB  87                  loop:	add	a,a
      43.  00:9AFC  CC 8F 9B              	call	z,getbit
      44.  00:9AFF  30 F5               	jr	nc,literal
      45.  00:9B01                      
      46.  00:9B01                      ; Compressed data
      47.  00:9B01  D9                  	exx
      48.  00:9B02  62                  	ld	h,d
      49.  00:9B03  6B                  	ld	l,e
      50.  00:9B04  87                  getlen: add	a,a
      51.  00:9B05  CC 93 9B            	call	z,getbitexx
      52.  00:9B08  30 1D               	jr	nc,lenok
      53.  00:9B0A  87                  lus:	add	a,a
      54.  00:9B0B  CC 93 9B            	call	z,getbitexx
      55.  00:9B0E  ED 6A               	adc	hl,hl
      56.  00:9B10  D8                  	ret	c
      57.  00:9B11  87                  	add	a,a
      58.  00:9B12  CC 93 9B            	call	z,getbitexx
      59.  00:9B15  30 10               	jr	nc,lenok
      60.  00:9B17  87                  	add	a,a
      61.  00:9B18  CC 93 9B            	call	z,getbitexx
      62.  00:9B1B  ED 6A               	adc	hl,hl
      63.  00:9B1D  DA 99 9B            	jp	c,Depack_out
      64.  00:9B20  87                  	add	a,a
      65.  00:9B21  CC 93 9B            	call	z,getbitexx
      66.  00:9B24  DA 0A 9B            	jp	c,lus
      67.  00:9B27  23                  lenok:  inc	hl
      68.  00:9B28  D9                  	exx
      69.  00:9B29  4E                  	ld	c,[hl]
      70.  00:9B2A  23                  	inc	hl
      71.  00:9B2B  06 00               	ld	b,0
      72.  00:9B2D  CB 79               	bit	7,c
      73.  00:9B2F  CA 62 9B            	jp	z,offsok
      74.  00:9B32  DD E9               	jp	ix
      75.  00:9B34                      
      76.  00:9B34  87                  mode7:  add	a,a
      77.  00:9B35  CC 8F 9B              	call	z,getbit
      78.  00:9B38  CB 10               	rl	b
      79.  00:9B3A  87                  mode6:	add	a,a
      80.  00:9B3B  CC 8F 9B              	call	z,getbit
      81.  00:9B3E  CB 10               	rl	b
      82.  00:9B40  87                  mode5:  add	a,a
      83.  00:9B41  CC 8F 9B              	call	z,getbit
      84.  00:9B44  CB 10               	rl	b
      85.  00:9B46  87                  mode4:  add	a,a
      86.  00:9B47  CC 8F 9B              	call	z,getbit
      87.  00:9B4A  CB 10               	rl	b
      88.  00:9B4C  87                  mode3:  add	a,a
      89.  00:9B4D  CC 8F 9B              	call	z,getbit
      90.  00:9B50  CB 10               	rl	b
      91.  00:9B52  87                  mode2:	add	a,a
      92.  00:9B53  CC 8F 9B              	call	z,getbit
      93.  00:9B56  CB 10               	rl	b
      94.  00:9B58  87                  	add	a,a
      95.  00:9B59  CC 8F 9B              	call	z,getbit
      96.  00:9B5C  30 04               	jr	nc,offsok
      97.  00:9B5E  B7                  	or	a
      98.  00:9B5F  04                  	inc	b
      99.  00:9B60  CB B9               	res	7,c
     100.  00:9B62  03                  offsok: inc	bc
     101.  00:9B63  E5                  	push	hl
     102.  00:9B64  D9                  	exx
     103.  00:9B65  E5                  	push	hl
     104.  00:9B66  D9                  	exx
     105.  00:9B67  6B                  	ld	l,e
     106.  00:9B68  62                  	ld	h,d
     107.  00:9B69  ED 42               	sbc	hl,bc
     108.  00:9B6B  C1                  	pop	bc
     109.  00:9B6C  F5                  	push	af
     110.  00:9B6D  7D                  .loop:	ld	a,l
     111.  00:9B6E  D3 99               	out	[099h],a
     112.  00:9B70  7C                  	ld	a,h
     113.  00:9B71  00                  	nop                     ; VDP timing
     114.  00:9B72  D3 99               	out	[099h],a
     115.  00:9B74  00                  	nop                     ; VDP timing
     116.  00:9B75  DB 98               	in	a,[098h]
     117.  00:9B77  08                  	ex	af,af'
     118.  00:9B78  7B                  	ld	a,e
     119.  00:9B79  00                  	nop			; VDP timing
     120.  00:9B7A  D3 99               	out	[099h],a
     121.  00:9B7C  7A                  	ld	a,d
     122.  00:9B7D  F6 40               	or	040h
     123.  00:9B7F  D3 99               	out	[099h],a
     124.  00:9B81  08                  	ex	af,af'
     125.  00:9B82  00                  	nop			; VDP timing
     126.  00:9B83  D3 98               	out	[098h],a
     127.  00:9B85  13                  	inc	de
     128.  00:9B86  ED A1               	cpi
     129.  00:9B88  EA 6D 9B            	jp	pe,.loop
     130.  00:9B8B  F1                  	pop	af
     131.  00:9B8C  E1                  	pop	hl
     132.  00:9B8D  FD E9               	jp	iy
     133.  00:9B8F                      
     134.  00:9B8F  7E                  getbit: ld	a,[hl]
     135.  00:9B90  23                  	inc	hl
     136.  00:9B91  17                  	rla
     137.  00:9B92  C9                  	ret
     138.  00:9B93                      
     139.  00:9B93                      getbitexx:
     140.  00:9B93  D9                  	exx
     141.  00:9B94  7E                  	ld	a,[hl]
     142.  00:9B95  23                  	inc	hl
     143.  00:9B96  D9                  	exx
     144.  00:9B97  17                  	rla
     145.  00:9B98  C9                  	ret
     146.  00:9B99                      
     147.  00:9B99                      ; Depacker exit
     148.  00:9B99                      Depack_out:
     149.  00:9B99  FB                  	ei
     150.  00:9B9A  C9                  	ret
     151.  00:9B9B                      
     152.  00:9B9B                      modes:
     153.  00:9B9B  62 9B               	dw	offsok
     154.  00:9B9D  52 9B               	dw	mode2
     155.  00:9B9F  4C 9B               	dw	mode3
     156.  00:9BA1  46 9B               	dw	mode4
     157.  00:9BA3  40 9B               	dw	mode5
     158.  00:9BA5  3A 9B               	dw	mode6
     159.  00:9BA7  34 9B               	dw	mode7
     161   00:9BA9                      
     162   00:9BA9                      
     163   00:9BA9                      	
     164   00:9BA9                      ;;=====================================================
     165   00:9BA9                      ;;DEFINICIÓN DE ESTRUCTURAS
     166   00:9BA9                      ;;=====================================================		
     167   00:9BA9                      	include "estructuras.asm"
       1.  00:9BA9                      ;;=====================================================
       2.  00:9BA9                      ;;DEFINICIÓN DE ESTRUCTURAS
       3.  00:9BA9                      ;;=====================================================
       4.  00:9BA9                      
       5.  00:9BA9                      ;crear estructura
       6.  00:9BA9                      
       7.  00:9BA9                      	STRUCT ESTRUCTURA_PUNTOMIRA
       8.  00:9BA9                    < posx			DB		100
       9.  00:9BA9                    < posy			DB		100
      10.  00:9BA9                    < escena			DB		0	;valores porsibles 0 (blanco+rojo en punto de mira) y NEG 0 (al revés)
      11.  00:9BA9                    < velocidad		DB		0
      12.  00:9BA9                    < boton2_pressed  DB		0
      13.  00:9BA9                    < cadencia		DB		5	;nº de veces que se ejecutará el disparo antes de ejecutar un disparo real (porque cuando se pulsa la tecl dispara 3 ó 4 veces de rápido que va)
      14.  00:9BA9                    < ; al final he decidido (ya que el punto de mira es el prota) que lo relacionado con el prota vaya en esta estructura
      15.  00:9BA9                    < pm_aux1			DB		0	;para llegar a los 16 campos
      16.  00:9BA9                    < pm_aux2			DB		0	;para llegar a los 16 campos
      17.  00:9BA9                    < pm_aux3			DB		0	;para llegar a los 16 campos
      18.  00:9BA9                    < pm_aux4			DB		0	;para llegar a los 16 campos
      19.  00:9BA9                    < pm_aux5			DB		0	;para llegar a los 16 campos
      20.  00:9BA9                    < pm_aux6			DB		0	;para llegar a los 16 campos
      21.  00:9BA9                    < pm_aux7			DB		0	;para llegar a los 16 campos
      22.  00:9BA9                    < pm_aux8			DB		0	;para llegar a los 16 campos
      23.  00:9BA9                    < pm_aux9			DB		0	;para llegar a los 16 campos
      24.  00:9BA9                    < pm_aux10		DB		0	;para llegar a los 16 campos
      25.  00:9BA9                    < 	ENDSTRUCT;ESTRUCTURA_PUNTOMIRA
      26.  00:9BA9                      
      27.  00:9BA9                      	
      28.  00:9BA9                      	STRUCT ESTRUCTURA_ENEMIGO
      29.  00:9BA9                    < tipo				DB		0	;(0 serpiente por ejemplo) #FF muerto o no existe
      30.  00:9BA9                    < posx				DB		5
      31.  00:9BA9                    < posy				DB		50
      32.  00:9BA9                    < color				DB		5
      33.  00:9BA9                    < escena				DB		0
      34.  00:9BA9                    < contador_siguiente_escena	DB	0
      35.  00:9BA9                    < reset_contador		DB		0
      36.  00:9BA9                    < dano				DB		0	;daño
      37.  00:9BA9                    < energia				DB		0	;energía del enemigo... si llega a 0 => existe <- 0
      38.  00:9BA9                    < ;indica el nº de sprite a mostrar y si está compuesto por uno o dos sprites y si están en horizontal o vertical
      39.  00:9BA9                    < ver_hor				DB		0
      40.  00:9BA9                    < manejador_dibujo 	DW		0
      41.  00:9BA9                    < en_aux3				DB		0
      42.  00:9BA9                    < en_aux4				DB		0
      43.  00:9BA9                    < 	ENDSTRUCT;ESTRUCTURA_ENEMIGO
      44.  00:9BA9                      	
      45.  00:9BA9                      	STRUCT ESTRUCTURA_AYUDA		;vidas extra, plantas de curación de energía, reliquias				
      46.  00:9BA9                    < activo				DB		0	;0 no activo <>0 activo 											0
      47.  00:9BA9                    < postilemem_nousado	DW		0	;pos en memoria ver array_ayudas de cómo se mostrarán (wordaux2)	1,2
      48.  00:9BA9                    < postilemem_usado	DW		0	;pos en memoria ver array_ayudas de cómo se mostrarán (wordaux2)	3,4
      49.  00:9BA9                    < pospantalla			DB		0	;pos en pantalla (memoria en el banco 1 se le suma 256 + TILEMAP) (wordaux1)	5
      50.  00:9BA9                    < posx				DB		0	;pos del pixel central (esquina superior + 8x)						6
      51.  00:9BA9                    < posy				DB		112	;pos del pixel central (esquina superior + 8y) (para toas igual)	7
      52.  00:9BA9                    < puntero_accion		DW		0	;subrutina que indica la acción si se dispara en el objeto			8,9
      53.  00:9BA9                    < ayu_aux1			DB		0	;relleno
      54.  00:9BA9                    < ayu_aux2			DB		0	;relleno
      55.  00:9BA9                    < ayu_aux3			DB		0	;relleno
      56.  00:9BA9                    < ayu_aux4			DB		0	;relleno
      57.  00:9BA9                    < ayu_aux5			DB		0	;relleno
      58.  00:9BA9                    < ayu_aux6			DB		0	;relleno
      59.  00:9BA9                    < 	ENDSTRUCT;ESTRUCTURA_AYUDA
      60.  00:9BA9                      
      61.  00:9BA9                      
      62.  00:9BA9                      	STRUCT ESTRUCTURA_ANTORCHA
      63.  00:9BA9                    < activo				DB		0	;0 no activa <>0 activo
      64.  00:9BA9                    < postilemem_antor1	DW		0	;pos en memoria ver array_antorcha de cómo se mostrará (wordaux2)	1,2
      65.  00:9BA9                    < pospantalla_antor1	DB		0	;pos en pantalla (memoria en el banco 1 se le suma 256 + TILEMAP) (wordaux1)	3
      66.  00:9BA9                    < pospantalla_antor2	DB		0	;pos en pantalla (memoria en el banco 1 se le suma 256 + TILEMAP) (wordaux1)	4
      67.  00:9BA9                    < escena				DB		0	;(va entre 0 y 1 - 0=>llama1 y llama2 o 1=>llama2 y llama1	7 - tiles 196 y 197)	5
      68.  00:9BA9                    < cont_sig_escena		DB		10	;	6
      69.  00:9BA9                    < 	ENDSTRUCT;ESTRUCTURA_ANTORCHA
      70.  00:9BA9                      
      71.  00:9BA9                      	STRUCT ESTRUCTURA_ESQUELETO
      72.  00:9BA9                    < activo				DB		0	;0 no activa <>0 activo
      73.  00:9BA9                    < postilemem_antor1	DW		0	;pos en memoria ver array_antorcha de cómo se mostrará (wordaux2)	1,2
      74.  00:9BA9                    < pospantalla_esquel1	DB		0	;pos en pantalla (memoria en el banco 1 se le suma 256 + TILEMAP) (wordaux1)	3
      75.  00:9BA9                    < pospantalla_esquel2	DB		0	;pos en pantalla (memoria en el banco 1 se le suma 256 + TILEMAP) (wordaux1)	4
      76.  00:9BA9                    < escena				DB		0	;(va entre 0 y 4 - tiles 164, 165, 164, 166)	5
      77.  00:9BA9                    < cont_sig_escena		DB		0	;	6
      78.  00:9BA9                    < 	ENDSTRUCT;ESTRUCTURA_ESQUELETO
      79.  00:9BA9                      	
      80.  00:9BA9                      	STRUCT	ESTRUCTURA_PUERTA
      81.  00:9BA9                    < activo				DB		0	;0 no activa <>0 activo
      82.  00:9BA9                    < posx				DB		0	;punto x de la puerta para cuando se dispare encima
      83.  00:9BA9                    < posy				DB		0	;punto y de la puerta para cuando se dispare encima
      84.  00:9BA9                    < radiox				DB		0	;radio x de la puerta para cuando se dispare encima
      85.  00:9BA9                    < radioy				DB		0	;radio y de la puerta para cuando se dispare encima
      86.  00:9BA9                    < accion				DW		0	;función para acción de cada tipo de puerta
      87.  00:9BA9                    < tiles_puerta		DW		0	;puntero al array con los tiles de las puertas
      88.  00:9BA9                    < 	ENDSTRUCT;ESTRUCTURA_PUERTA
      89.  00:9BA9                      
      90.  00:9BA9                      
      91.  00:9BA9                      
      92.  00:9BA9                      
      93.  00:9BA9                      
      94.  00:9BA9                      
     168   00:9BA9                      	
     169   00:9BA9                      ;;=====================================================
     170   00:9BA9                      ;;DEFINICIÓN DE VARIABLES
     171   00:9BA9                      ;;=====================================================		
     172   00:9BA9                      	include "sprites.asm"
       1.  00:9BA9                      ;;=====================================================
       2.  00:9BA9                      ;;DEFINICIÓN DE SPRITES
       3.  00:9BA9                      ;;=====================================================	
       4.  00:9BA9                      
       5.  00:9BA9                      
       6.  00:9BA9                      ;; NOTA:
       7.  00:9BA9                      ;~ sprite_reliquia_oracion: on/off
       8.  00:9BA9                      ;~ sprite_reliquia_cruz: on/off
       9.  00:9BA9                      ;~ sprite_reliquia_agua: on/off
      10.  00:9BA9                      ;~ sprite_peto: on/off
      11.  00:9BA9                      ;~ sprite_planta: on/off
      12.  00:9BA9                      ;~ sprite_vida_extra: on/off
      13.  00:9BA9                      ;~ sprite_ballesta_mejorada: on/off
      14.  00:9BA9                      
      15.  00:9BA9                      ;~ iban a ser sprites pero por falta de recursos serán tiles
      16.  00:9BA9                      
      17.  00:9BA9                      
      18.  00:9BA9                      sprites_pantantalla:
      19.  00:9BA9                      
      20.  00:9BA9                      ;; PARTE 1: SPRITES COMUNES
      21.  00:9BA9                      
      22.  00:9BA9                      sprites_comunes:
      23.  00:9BA9                      sprite_punto_mira_1:	;color 8
      24.  00:9BA9                      	db #FF,#FF,#C0,#C0,#C0,#C0,#C0,#C0
      24.  00:9BA9  FF FF C0 C0 C0 C0 C0 C0 
      25.  00:9BB1                      	db #C0,#C0,#C0,#C0,#C0,#C0,#FF,#FF
      25.  00:9BB1  C0 C0 C0 C0 C0 C0 FF FF 
      26.  00:9BB9                      	db #FF,#FF,#03,#03,#03,#03,#03,#03
      26.  00:9BB9  FF FF 03 03 03 03 03 03 
      27.  00:9BC1                      	db #03,#03,#03,#03,#03,#03,#FF,#FF
      27.  00:9BC1  03 03 03 03 03 03 FF FF 
      28.  00:9BC9                      	
      29.  00:9BC9                      sprite_punto_mira_2: 	;color 15
      30.  00:9BC9                      	db #00,#00,#00,#00,#0F,#0F,#0C,#0C
      30.  00:9BC9  00 00 00 00 0F 0F 0C 0C 
      31.  00:9BD1                      	db #0C,#0C,#0F,#0F,#00,#00,#00,#00
      31.  00:9BD1  0C 0C 0F 0F 00 00 00 00 
      32.  00:9BD9                      	db #00,#00,#00,#00,#F0,#F0,#30,#30
      32.  00:9BD9  00 00 00 00 F0 F0 30 30 
      33.  00:9BE1                      	db #30,#30,#F0,#F0,#00,#00,#00,#00
      33.  00:9BE1  30 30 F0 F0 00 00 00 00 
      34.  00:9BE9                      	
      35.  00:9BE9                      sprite_punto_mira_1_mejorado:
      36.  00:9BE9                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      36.  00:9BE9  FF FF FF FF FF FF FF FF 
      37.  00:9BF1                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      37.  00:9BF1  FF FF FF FF FF FF FF FF 
      38.  00:9BF9                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      38.  00:9BF9  FF FF FF FF FF FF FF FF 
      39.  00:9C01                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      39.  00:9C01  FF FF FF FF FF FF FF FF 
      40.  00:9C09                      
      41.  00:9C09                      sprite_punto_mira_2_mejorado:
      42.  00:9C09                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      42.  00:9C09  FF FF FF FF FF FF FF FF 
      43.  00:9C11                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      43.  00:9C11  FF FF FF FF FF FF FF FF 
      44.  00:9C19                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      44.  00:9C19  FF FF FF FF FF FF FF FF 
      45.  00:9C21                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      45.  00:9C21  FF FF FF FF FF FF FF FF 
      46.  00:9C29                      	
      47.  00:9C29                      sprite_explosion_1:
      48.  00:9C29                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      48.  00:9C29  FF FF FF FF FF FF FF FF 
      49.  00:9C31                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      49.  00:9C31  FF FF FF FF FF FF FF FF 
      50.  00:9C39                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      50.  00:9C39  FF FF FF FF FF FF FF FF 
      51.  00:9C41                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF	
      51.  00:9C41  FF FF FF FF FF FF FF FF 
      52.  00:9C49                      
      53.  00:9C49                      sprite_explosion_2:
      54.  00:9C49                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      54.  00:9C49  FF FF FF FF FF FF FF FF 
      55.  00:9C51                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      55.  00:9C51  FF FF FF FF FF FF FF FF 
      56.  00:9C59                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      56.  00:9C59  FF FF FF FF FF FF FF FF 
      57.  00:9C61                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF	
      57.  00:9C61  FF FF FF FF FF FF FF FF 
      58.  00:9C69                      fin_sprites_comunes:
      59.  00:9C69                      
      60.  00:9C69                      ;; PARTE 2: SPRITES NO COMUNES
      61.  00:9C69                      
      62.  00:9C69                      ;; ARAÑA
      63.  00:9C69                      	
      64.  00:9C69                      sprite_arana1_1:
      65.  00:9C69                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      65.  00:9C69  FF FF FF FF FF FF FF FF 
      66.  00:9C71                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      66.  00:9C71  FF FF FF FF FF FF FF FF 
      67.  00:9C79                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      67.  00:9C79  FF FF FF FF FF FF FF FF 
      68.  00:9C81                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      68.  00:9C81  FF FF FF FF FF FF FF FF 
      69.  00:9C89                      	
      70.  00:9C89                      sprite_arana1_2:
      71.  00:9C89                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      71.  00:9C89  FF FF FF FF FF FF FF FF 
      72.  00:9C91                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      72.  00:9C91  FF FF FF FF FF FF FF FF 
      73.  00:9C99                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      73.  00:9C99  FF FF FF FF FF FF FF FF 
      74.  00:9CA1                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      74.  00:9CA1  FF FF FF FF FF FF FF FF 
      75.  00:9CA9                      
      76.  00:9CA9                      ;; MURCIELAGO
      77.  00:9CA9                      	
      78.  00:9CA9                      sprite_murcielago1_1:
      79.  00:9CA9                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      79.  00:9CA9  FF FF FF FF FF FF FF FF 
      80.  00:9CB1                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      80.  00:9CB1  FF FF FF FF FF FF FF FF 
      81.  00:9CB9                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      81.  00:9CB9  FF FF FF FF FF FF FF FF 
      82.  00:9CC1                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      82.  00:9CC1  FF FF FF FF FF FF FF FF 
      83.  00:9CC9                      	
      84.  00:9CC9                      sprite_murcielago1_2:
      85.  00:9CC9                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      85.  00:9CC9  FF FF FF FF FF FF FF FF 
      86.  00:9CD1                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      86.  00:9CD1  FF FF FF FF FF FF FF FF 
      87.  00:9CD9                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      87.  00:9CD9  FF FF FF FF FF FF FF FF 
      88.  00:9CE1                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF	
      88.  00:9CE1  FF FF FF FF FF FF FF FF 
      89.  00:9CE9                      
      90.  00:9CE9                      ;; SERPIENTE
      91.  00:9CE9                      
      92.  00:9CE9                      sprite_serpiente1_1:
      93.  00:9CE9                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      93.  00:9CE9  FF FF FF FF FF FF FF FF 
      94.  00:9CF1                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      94.  00:9CF1  FF FF FF FF FF FF FF FF 
      95.  00:9CF9                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      95.  00:9CF9  FF FF FF FF FF FF FF FF 
      96.  00:9D01                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      96.  00:9D01  FF FF FF FF FF FF FF FF 
      97.  00:9D09                      	
      98.  00:9D09                      sprite_serpiente1_2:
      99.  00:9D09                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      99.  00:9D09  FF FF FF FF FF FF FF FF 
     100.  00:9D11                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     100.  00:9D11  FF FF FF FF FF FF FF FF 
     101.  00:9D19                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     101.  00:9D19  FF FF FF FF FF FF FF FF 
     102.  00:9D21                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     102.  00:9D21  FF FF FF FF FF FF FF FF 
     103.  00:9D29                      	
     104.  00:9D29                      sprite_serpiente2_1:
     105.  00:9D29                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     105.  00:9D29  FF FF FF FF FF FF FF FF 
     106.  00:9D31                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     106.  00:9D31  FF FF FF FF FF FF FF FF 
     107.  00:9D39                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     107.  00:9D39  FF FF FF FF FF FF FF FF 
     108.  00:9D41                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     108.  00:9D41  FF FF FF FF FF FF FF FF 
     109.  00:9D49                      	
     110.  00:9D49                      sprite_serpiente2_2:
     111.  00:9D49                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     111.  00:9D49  FF FF FF FF FF FF FF FF 
     112.  00:9D51                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     112.  00:9D51  FF FF FF FF FF FF FF FF 
     113.  00:9D59                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     113.  00:9D59  FF FF FF FF FF FF FF FF 
     114.  00:9D61                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     114.  00:9D61  FF FF FF FF FF FF FF FF 
     115.  00:9D69                      
     116.  00:9D69                      ;; ZOMBI
     117.  00:9D69                      
     118.  00:9D69                      sprite_zombi1_1_1:
     119.  00:9D69                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     119.  00:9D69  FF FF FF FF FF FF FF FF 
     120.  00:9D71                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     120.  00:9D71  FF FF FF FF FF FF FF FF 
     121.  00:9D79                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     121.  00:9D79  FF FF FF FF FF FF FF FF 
     122.  00:9D81                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     122.  00:9D81  FF FF FF FF FF FF FF FF 
     123.  00:9D89                      
     124.  00:9D89                      sprite_zombi1_2_1:
     125.  00:9D89                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     125.  00:9D89  FF FF FF FF FF FF FF FF 
     126.  00:9D91                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     126.  00:9D91  FF FF FF FF FF FF FF FF 
     127.  00:9D99                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     127.  00:9D99  FF FF FF FF FF FF FF FF 
     128.  00:9DA1                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     128.  00:9DA1  FF FF FF FF FF FF FF FF 
     129.  00:9DA9                      	
     130.  00:9DA9                      sprite_zombi1_3_1:
     131.  00:9DA9                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     131.  00:9DA9  FF FF FF FF FF FF FF FF 
     132.  00:9DB1                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     132.  00:9DB1  FF FF FF FF FF FF FF FF 
     133.  00:9DB9                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     133.  00:9DB9  FF FF FF FF FF FF FF FF 
     134.  00:9DC1                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     134.  00:9DC1  FF FF FF FF FF FF FF FF 
     135.  00:9DC9                      	
     136.  00:9DC9                      sprite_zombi1_4_1:
     137.  00:9DC9                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     137.  00:9DC9  FF FF FF FF FF FF FF FF 
     138.  00:9DD1                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     138.  00:9DD1  FF FF FF FF FF FF FF FF 
     139.  00:9DD9                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     139.  00:9DD9  FF FF FF FF FF FF FF FF 
     140.  00:9DE1                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     140.  00:9DE1  FF FF FF FF FF FF FF FF 
     141.  00:9DE9                      	
     142.  00:9DE9                      sprite_zombi1_1_2:
     143.  00:9DE9                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     143.  00:9DE9  FF FF FF FF FF FF FF FF 
     144.  00:9DF1                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     144.  00:9DF1  FF FF FF FF FF FF FF FF 
     145.  00:9DF9                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     145.  00:9DF9  FF FF FF FF FF FF FF FF 
     146.  00:9E01                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     146.  00:9E01  FF FF FF FF FF FF FF FF 
     147.  00:9E09                      
     148.  00:9E09                      sprite_zombi1_2_2:
     149.  00:9E09                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     149.  00:9E09  FF FF FF FF FF FF FF FF 
     150.  00:9E11                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     150.  00:9E11  FF FF FF FF FF FF FF FF 
     151.  00:9E19                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     151.  00:9E19  FF FF FF FF FF FF FF FF 
     152.  00:9E21                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     152.  00:9E21  FF FF FF FF FF FF FF FF 
     153.  00:9E29                      	
     154.  00:9E29                      sprite_zombi1_3_2:
     155.  00:9E29                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     155.  00:9E29  FF FF FF FF FF FF FF FF 
     156.  00:9E31                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     156.  00:9E31  FF FF FF FF FF FF FF FF 
     157.  00:9E39                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     157.  00:9E39  FF FF FF FF FF FF FF FF 
     158.  00:9E41                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     158.  00:9E41  FF FF FF FF FF FF FF FF 
     159.  00:9E49                      	
     160.  00:9E49                      sprite_zombi1_4_2:
     161.  00:9E49                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     161.  00:9E49  FF FF FF FF FF FF FF FF 
     162.  00:9E51                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     162.  00:9E51  FF FF FF FF FF FF FF FF 
     163.  00:9E59                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     163.  00:9E59  FF FF FF FF FF FF FF FF 
     164.  00:9E61                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     164.  00:9E61  FF FF FF FF FF FF FF FF 
     165.  00:9E69                      	
     166.  00:9E69                      sprite_zombi2_1_1:
     167.  00:9E69                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     167.  00:9E69  FF FF FF FF FF FF FF FF 
     168.  00:9E71                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     168.  00:9E71  FF FF FF FF FF FF FF FF 
     169.  00:9E79                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     169.  00:9E79  FF FF FF FF FF FF FF FF 
     170.  00:9E81                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     170.  00:9E81  FF FF FF FF FF FF FF FF 
     171.  00:9E89                      
     172.  00:9E89                      sprite_zombi2_2_1:
     173.  00:9E89                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     173.  00:9E89  FF FF FF FF FF FF FF FF 
     174.  00:9E91                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     174.  00:9E91  FF FF FF FF FF FF FF FF 
     175.  00:9E99                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     175.  00:9E99  FF FF FF FF FF FF FF FF 
     176.  00:9EA1                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     176.  00:9EA1  FF FF FF FF FF FF FF FF 
     177.  00:9EA9                      	
     178.  00:9EA9                      sprite_zombi2_3_1:
     179.  00:9EA9                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     179.  00:9EA9  FF FF FF FF FF FF FF FF 
     180.  00:9EB1                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     180.  00:9EB1  FF FF FF FF FF FF FF FF 
     181.  00:9EB9                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     181.  00:9EB9  FF FF FF FF FF FF FF FF 
     182.  00:9EC1                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     182.  00:9EC1  FF FF FF FF FF FF FF FF 
     183.  00:9EC9                      	
     184.  00:9EC9                      sprite_zombi2_4_1:
     185.  00:9EC9                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     185.  00:9EC9  FF FF FF FF FF FF FF FF 
     186.  00:9ED1                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     186.  00:9ED1  FF FF FF FF FF FF FF FF 
     187.  00:9ED9                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     187.  00:9ED9  FF FF FF FF FF FF FF FF 
     188.  00:9EE1                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     188.  00:9EE1  FF FF FF FF FF FF FF FF 
     189.  00:9EE9                      	
     190.  00:9EE9                      sprite_zombi2_1_2:
     191.  00:9EE9                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     191.  00:9EE9  FF FF FF FF FF FF FF FF 
     192.  00:9EF1                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     192.  00:9EF1  FF FF FF FF FF FF FF FF 
     193.  00:9EF9                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     193.  00:9EF9  FF FF FF FF FF FF FF FF 
     194.  00:9F01                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     194.  00:9F01  FF FF FF FF FF FF FF FF 
     195.  00:9F09                      
     196.  00:9F09                      sprite_zombi2_2_2:
     197.  00:9F09                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     197.  00:9F09  FF FF FF FF FF FF FF FF 
     198.  00:9F11                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     198.  00:9F11  FF FF FF FF FF FF FF FF 
     199.  00:9F19                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     199.  00:9F19  FF FF FF FF FF FF FF FF 
     200.  00:9F21                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     200.  00:9F21  FF FF FF FF FF FF FF FF 
     201.  00:9F29                      	
     202.  00:9F29                      sprite_zombi2_3_2:
     203.  00:9F29                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     203.  00:9F29  FF FF FF FF FF FF FF FF 
     204.  00:9F31                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     204.  00:9F31  FF FF FF FF FF FF FF FF 
     205.  00:9F39                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     205.  00:9F39  FF FF FF FF FF FF FF FF 
     206.  00:9F41                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     206.  00:9F41  FF FF FF FF FF FF FF FF 
     207.  00:9F49                      	
     208.  00:9F49                      sprite_zombi2_4_2:
     209.  00:9F49                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     209.  00:9F49  FF FF FF FF FF FF FF FF 
     210.  00:9F51                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     210.  00:9F51  FF FF FF FF FF FF FF FF 
     211.  00:9F59                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     211.  00:9F59  FF FF FF FF FF FF FF FF 
     212.  00:9F61                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     212.  00:9F61  FF FF FF FF FF FF FF FF 
     213.  00:9F69                      	
     214.  00:9F69                      ;; CABALLERO
     215.  00:9F69                      
     216.  00:9F69                      sprite_caballero1_1_1:
     217.  00:9F69                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     217.  00:9F69  FF FF FF FF FF FF FF FF 
     218.  00:9F71                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     218.  00:9F71  FF FF FF FF FF FF FF FF 
     219.  00:9F79                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     219.  00:9F79  FF FF FF FF FF FF FF FF 
     220.  00:9F81                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     220.  00:9F81  FF FF FF FF FF FF FF FF 
     221.  00:9F89                      
     222.  00:9F89                      sprite_caballero1_2_1:
     223.  00:9F89                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     223.  00:9F89  FF FF FF FF FF FF FF FF 
     224.  00:9F91                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     224.  00:9F91  FF FF FF FF FF FF FF FF 
     225.  00:9F99                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     225.  00:9F99  FF FF FF FF FF FF FF FF 
     226.  00:9FA1                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     226.  00:9FA1  FF FF FF FF FF FF FF FF 
     227.  00:9FA9                      	
     228.  00:9FA9                      sprite_caballero1_3_1:
     229.  00:9FA9                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     229.  00:9FA9  FF FF FF FF FF FF FF FF 
     230.  00:9FB1                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     230.  00:9FB1  FF FF FF FF FF FF FF FF 
     231.  00:9FB9                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     231.  00:9FB9  FF FF FF FF FF FF FF FF 
     232.  00:9FC1                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     232.  00:9FC1  FF FF FF FF FF FF FF FF 
     233.  00:9FC9                      	
     234.  00:9FC9                      sprite_caballero1_4_1:
     235.  00:9FC9                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     235.  00:9FC9  FF FF FF FF FF FF FF FF 
     236.  00:9FD1                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     236.  00:9FD1  FF FF FF FF FF FF FF FF 
     237.  00:9FD9                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     237.  00:9FD9  FF FF FF FF FF FF FF FF 
     238.  00:9FE1                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     238.  00:9FE1  FF FF FF FF FF FF FF FF 
     239.  00:9FE9                      	
     240.  00:9FE9                      sprite_caballero1_1_2:
     241.  00:9FE9                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     241.  00:9FE9  FF FF FF FF FF FF FF FF 
     242.  00:9FF1                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     242.  00:9FF1  FF FF FF FF FF FF FF FF 
     243.  00:9FF9                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     243.  00:9FF9  FF FF FF FF FF FF FF FF 
     244.  00:A001                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     244.  00:A001  FF FF FF FF FF FF FF FF 
     245.  00:A009                      
     246.  00:A009                      sprite_caballero1_2_2:
     247.  00:A009                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     247.  00:A009  FF FF FF FF FF FF FF FF 
     248.  00:A011                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     248.  00:A011  FF FF FF FF FF FF FF FF 
     249.  00:A019                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     249.  00:A019  FF FF FF FF FF FF FF FF 
     250.  00:A021                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     250.  00:A021  FF FF FF FF FF FF FF FF 
     251.  00:A029                      	
     252.  00:A029                      sprite_caballero1_3_2:
     253.  00:A029                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     253.  00:A029  FF FF FF FF FF FF FF FF 
     254.  00:A031                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     254.  00:A031  FF FF FF FF FF FF FF FF 
     255.  00:A039                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     255.  00:A039  FF FF FF FF FF FF FF FF 
     256.  00:A041                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     256.  00:A041  FF FF FF FF FF FF FF FF 
     257.  00:A049                      	
     258.  00:A049                      sprite_caballero1_4_2:
     259.  00:A049                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     259.  00:A049  FF FF FF FF FF FF FF FF 
     260.  00:A051                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     260.  00:A051  FF FF FF FF FF FF FF FF 
     261.  00:A059                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     261.  00:A059  FF FF FF FF FF FF FF FF 
     262.  00:A061                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     262.  00:A061  FF FF FF FF FF FF FF FF 
     263.  00:A069                      	
     264.  00:A069                      sprite_caballero2_1_1:
     265.  00:A069                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     265.  00:A069  FF FF FF FF FF FF FF FF 
     266.  00:A071                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     266.  00:A071  FF FF FF FF FF FF FF FF 
     267.  00:A079                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     267.  00:A079  FF FF FF FF FF FF FF FF 
     268.  00:A081                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     268.  00:A081  FF FF FF FF FF FF FF FF 
     269.  00:A089                      
     270.  00:A089                      sprite_caballero2_2_1:
     271.  00:A089                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     271.  00:A089  FF FF FF FF FF FF FF FF 
     272.  00:A091                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     272.  00:A091  FF FF FF FF FF FF FF FF 
     273.  00:A099                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     273.  00:A099  FF FF FF FF FF FF FF FF 
     274.  00:A0A1                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     274.  00:A0A1  FF FF FF FF FF FF FF FF 
     275.  00:A0A9                      	
     276.  00:A0A9                      sprite_caballero2_3_1:
     277.  00:A0A9                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     277.  00:A0A9  FF FF FF FF FF FF FF FF 
     278.  00:A0B1                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     278.  00:A0B1  FF FF FF FF FF FF FF FF 
     279.  00:A0B9                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     279.  00:A0B9  FF FF FF FF FF FF FF FF 
     280.  00:A0C1                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     280.  00:A0C1  FF FF FF FF FF FF FF FF 
     281.  00:A0C9                      	
     282.  00:A0C9                      sprite_caballero2_4_1:
     283.  00:A0C9                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     283.  00:A0C9  FF FF FF FF FF FF FF FF 
     284.  00:A0D1                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     284.  00:A0D1  FF FF FF FF FF FF FF FF 
     285.  00:A0D9                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     285.  00:A0D9  FF FF FF FF FF FF FF FF 
     286.  00:A0E1                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     286.  00:A0E1  FF FF FF FF FF FF FF FF 
     287.  00:A0E9                      	
     288.  00:A0E9                      sprite_caballero2_1_2:
     289.  00:A0E9                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     289.  00:A0E9  FF FF FF FF FF FF FF FF 
     290.  00:A0F1                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     290.  00:A0F1  FF FF FF FF FF FF FF FF 
     291.  00:A0F9                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     291.  00:A0F9  FF FF FF FF FF FF FF FF 
     292.  00:A101                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     292.  00:A101  FF FF FF FF FF FF FF FF 
     293.  00:A109                      
     294.  00:A109                      sprite_caballero2_2_2:
     295.  00:A109                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     295.  00:A109  FF FF FF FF FF FF FF FF 
     296.  00:A111                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     296.  00:A111  FF FF FF FF FF FF FF FF 
     297.  00:A119                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     297.  00:A119  FF FF FF FF FF FF FF FF 
     298.  00:A121                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     298.  00:A121  FF FF FF FF FF FF FF FF 
     299.  00:A129                      	
     300.  00:A129                      sprite_caballero2_3_2:
     301.  00:A129                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     301.  00:A129  FF FF FF FF FF FF FF FF 
     302.  00:A131                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     302.  00:A131  FF FF FF FF FF FF FF FF 
     303.  00:A139                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     303.  00:A139  FF FF FF FF FF FF FF FF 
     304.  00:A141                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     304.  00:A141  FF FF FF FF FF FF FF FF 
     305.  00:A149                      	
     306.  00:A149                      sprite_caballero2_4_2:
     307.  00:A149                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     307.  00:A149  FF FF FF FF FF FF FF FF 
     308.  00:A151                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     308.  00:A151  FF FF FF FF FF FF FF FF 
     309.  00:A159                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     309.  00:A159  FF FF FF FF FF FF FF FF 
     310.  00:A161                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     310.  00:A161  FF FF FF FF FF FF FF FF 
     311.  00:A169                      	
     312.  00:A169                      ;; LLAMA
     313.  00:A169                      
     314.  00:A169                      sprite_llama1_1:	
     315.  00:A169                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     315.  00:A169  FF FF FF FF FF FF FF FF 
     316.  00:A171                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     316.  00:A171  FF FF FF FF FF FF FF FF 
     317.  00:A179                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     317.  00:A179  FF FF FF FF FF FF FF FF 
     318.  00:A181                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     318.  00:A181  FF FF FF FF FF FF FF FF 
     319.  00:A189                      	
     320.  00:A189                      sprite_llama2_1:	
     321.  00:A189                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     321.  00:A189  FF FF FF FF FF FF FF FF 
     322.  00:A191                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     322.  00:A191  FF FF FF FF FF FF FF FF 
     323.  00:A199                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     323.  00:A199  FF FF FF FF FF FF FF FF 
     324.  00:A1A1                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF	
     324.  00:A1A1  FF FF FF FF FF FF FF FF 
     325.  00:A1A9                      	
     326.  00:A1A9                      sprite_llama1_2:	
     327.  00:A1A9                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     327.  00:A1A9  FF FF FF FF FF FF FF FF 
     328.  00:A1B1                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     328.  00:A1B1  FF FF FF FF FF FF FF FF 
     329.  00:A1B9                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     329.  00:A1B9  FF FF FF FF FF FF FF FF 
     330.  00:A1C1                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     330.  00:A1C1  FF FF FF FF FF FF FF FF 
     331.  00:A1C9                      	
     332.  00:A1C9                      sprite_llama2_2:	
     333.  00:A1C9                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     333.  00:A1C9  FF FF FF FF FF FF FF FF 
     334.  00:A1D1                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     334.  00:A1D1  FF FF FF FF FF FF FF FF 
     335.  00:A1D9                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     335.  00:A1D9  FF FF FF FF FF FF FF FF 
     336.  00:A1E1                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF			
     336.  00:A1E1  FF FF FF FF FF FF FF FF 
     337.  00:A1E9                      	
     338.  00:A1E9                      ;; FANTASMA
     339.  00:A1E9                      
     340.  00:A1E9                      sprite_fantasma1_1:
     341.  00:A1E9                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     341.  00:A1E9  FF FF FF FF FF FF FF FF 
     342.  00:A1F1                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     342.  00:A1F1  FF FF FF FF FF FF FF FF 
     343.  00:A1F9                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     343.  00:A1F9  FF FF FF FF FF FF FF FF 
     344.  00:A201                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     344.  00:A201  FF FF FF FF FF FF FF FF 
     345.  00:A209                      
     346.  00:A209                      sprite_fantasma2_1:
     347.  00:A209                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     347.  00:A209  FF FF FF FF FF FF FF FF 
     348.  00:A211                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     348.  00:A211  FF FF FF FF FF FF FF FF 
     349.  00:A219                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     349.  00:A219  FF FF FF FF FF FF FF FF 
     350.  00:A221                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     350.  00:A221  FF FF FF FF FF FF FF FF 
     351.  00:A229                      
     352.  00:A229                      sprite_fantasma1_2:
     353.  00:A229                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     353.  00:A229  FF FF FF FF FF FF FF FF 
     354.  00:A231                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     354.  00:A231  FF FF FF FF FF FF FF FF 
     355.  00:A239                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     355.  00:A239  FF FF FF FF FF FF FF FF 
     356.  00:A241                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     356.  00:A241  FF FF FF FF FF FF FF FF 
     357.  00:A249                      
     358.  00:A249                      sprite_fantasma2_2:
     359.  00:A249                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     359.  00:A249  FF FF FF FF FF FF FF FF 
     360.  00:A251                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     360.  00:A251  FF FF FF FF FF FF FF FF 
     361.  00:A259                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     361.  00:A259  FF FF FF FF FF FF FF FF 
     362.  00:A261                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF	
     362.  00:A261  FF FF FF FF FF FF FF FF 
     363.  00:A269                      	
     364.  00:A269                      ;; MAGIA
     365.  00:A269                      
     366.  00:A269                      sprite_magia1_1:
     367.  00:A269                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     367.  00:A269  FF FF FF FF FF FF FF FF 
     368.  00:A271                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     368.  00:A271  FF FF FF FF FF FF FF FF 
     369.  00:A279                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     369.  00:A279  FF FF FF FF FF FF FF FF 
     370.  00:A281                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     370.  00:A281  FF FF FF FF FF FF FF FF 
     371.  00:A289                      
     372.  00:A289                      sprite_magia2_1:
     373.  00:A289                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     373.  00:A289  FF FF FF FF FF FF FF FF 
     374.  00:A291                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     374.  00:A291  FF FF FF FF FF FF FF FF 
     375.  00:A299                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     375.  00:A299  FF FF FF FF FF FF FF FF 
     376.  00:A2A1                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     376.  00:A2A1  FF FF FF FF FF FF FF FF 
     377.  00:A2A9                      
     378.  00:A2A9                      sprite_magia1_2:
     379.  00:A2A9                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     379.  00:A2A9  FF FF FF FF FF FF FF FF 
     380.  00:A2B1                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     380.  00:A2B1  FF FF FF FF FF FF FF FF 
     381.  00:A2B9                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     381.  00:A2B9  FF FF FF FF FF FF FF FF 
     382.  00:A2C1                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     382.  00:A2C1  FF FF FF FF FF FF FF FF 
     383.  00:A2C9                      
     384.  00:A2C9                      sprite_magia2_2:
     385.  00:A2C9                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     385.  00:A2C9  FF FF FF FF FF FF FF FF 
     386.  00:A2D1                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     386.  00:A2D1  FF FF FF FF FF FF FF FF 
     387.  00:A2D9                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     387.  00:A2D9  FF FF FF FF FF FF FF FF 
     388.  00:A2E1                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF	
     388.  00:A2E1  FF FF FF FF FF FF FF FF 
     389.  00:A2E9                      	
     390.  00:A2E9                      	
     391.  00:A2E9                      ;; BEHOLDER
     392.  00:A2E9                      
     393.  00:A2E9                      sprite_beholder1_1:
     394.  00:A2E9                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     394.  00:A2E9  FF FF FF FF FF FF FF FF 
     395.  00:A2F1                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     395.  00:A2F1  FF FF FF FF FF FF FF FF 
     396.  00:A2F9                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     396.  00:A2F9  FF FF FF FF FF FF FF FF 
     397.  00:A301                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     397.  00:A301  FF FF FF FF FF FF FF FF 
     398.  00:A309                      
     399.  00:A309                      sprite_beholder2_1:
     400.  00:A309                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     400.  00:A309  FF FF FF FF FF FF FF FF 
     401.  00:A311                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     401.  00:A311  FF FF FF FF FF FF FF FF 
     402.  00:A319                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     402.  00:A319  FF FF FF FF FF FF FF FF 
     403.  00:A321                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     403.  00:A321  FF FF FF FF FF FF FF FF 
     404.  00:A329                      
     405.  00:A329                      sprite_beholder3_1:
     406.  00:A329                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     406.  00:A329  FF FF FF FF FF FF FF FF 
     407.  00:A331                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     407.  00:A331  FF FF FF FF FF FF FF FF 
     408.  00:A339                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     408.  00:A339  FF FF FF FF FF FF FF FF 
     409.  00:A341                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     409.  00:A341  FF FF FF FF FF FF FF FF 
     410.  00:A349                      
     411.  00:A349                      sprite_beholder4_1:
     412.  00:A349                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     412.  00:A349  FF FF FF FF FF FF FF FF 
     413.  00:A351                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     413.  00:A351  FF FF FF FF FF FF FF FF 
     414.  00:A359                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     414.  00:A359  FF FF FF FF FF FF FF FF 
     415.  00:A361                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF	
     415.  00:A361  FF FF FF FF FF FF FF FF 
     416.  00:A369                      	
     417.  00:A369                      sprite_beholder1_2:
     418.  00:A369                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     418.  00:A369  FF FF FF FF FF FF FF FF 
     419.  00:A371                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     419.  00:A371  FF FF FF FF FF FF FF FF 
     420.  00:A379                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     420.  00:A379  FF FF FF FF FF FF FF FF 
     421.  00:A381                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     421.  00:A381  FF FF FF FF FF FF FF FF 
     422.  00:A389                      
     423.  00:A389                      sprite_beholder2_2:
     424.  00:A389                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     424.  00:A389  FF FF FF FF FF FF FF FF 
     425.  00:A391                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     425.  00:A391  FF FF FF FF FF FF FF FF 
     426.  00:A399                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     426.  00:A399  FF FF FF FF FF FF FF FF 
     427.  00:A3A1                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     427.  00:A3A1  FF FF FF FF FF FF FF FF 
     428.  00:A3A9                      
     429.  00:A3A9                      sprite_beholder3_2:
     430.  00:A3A9                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     430.  00:A3A9  FF FF FF FF FF FF FF FF 
     431.  00:A3B1                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     431.  00:A3B1  FF FF FF FF FF FF FF FF 
     432.  00:A3B9                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     432.  00:A3B9  FF FF FF FF FF FF FF FF 
     433.  00:A3C1                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     433.  00:A3C1  FF FF FF FF FF FF FF FF 
     434.  00:A3C9                      
     435.  00:A3C9                      sprite_beholder4_2:
     436.  00:A3C9                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     436.  00:A3C9  FF FF FF FF FF FF FF FF 
     437.  00:A3D1                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     437.  00:A3D1  FF FF FF FF FF FF FF FF 
     438.  00:A3D9                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     438.  00:A3D9  FF FF FF FF FF FF FF FF 
     439.  00:A3E1                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF		
     439.  00:A3E1  FF FF FF FF FF FF FF FF 
     440.  00:A3E9                      	
     441.  00:A3E9                      ;; VAMPIRO
     442.  00:A3E9                      
     443.  00:A3E9                      sprite_vampiro1_1:
     444.  00:A3E9                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     444.  00:A3E9  FF FF FF FF FF FF FF FF 
     445.  00:A3F1                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     445.  00:A3F1  FF FF FF FF FF FF FF FF 
     446.  00:A3F9                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     446.  00:A3F9  FF FF FF FF FF FF FF FF 
     447.  00:A401                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     447.  00:A401  FF FF FF FF FF FF FF FF 
     448.  00:A409                      
     449.  00:A409                      sprite_vampiro2_1:
     450.  00:A409                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     450.  00:A409  FF FF FF FF FF FF FF FF 
     451.  00:A411                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     451.  00:A411  FF FF FF FF FF FF FF FF 
     452.  00:A419                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     452.  00:A419  FF FF FF FF FF FF FF FF 
     453.  00:A421                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     453.  00:A421  FF FF FF FF FF FF FF FF 
     454.  00:A429                      
     455.  00:A429                      sprite_vampiro1_2:
     456.  00:A429                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     456.  00:A429  FF FF FF FF FF FF FF FF 
     457.  00:A431                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     457.  00:A431  FF FF FF FF FF FF FF FF 
     458.  00:A439                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     458.  00:A439  FF FF FF FF FF FF FF FF 
     459.  00:A441                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     459.  00:A441  FF FF FF FF FF FF FF FF 
     460.  00:A449                      
     461.  00:A449                      sprite_vampiro2_2:
     462.  00:A449                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     462.  00:A449  FF FF FF FF FF FF FF FF 
     463.  00:A451                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     463.  00:A451  FF FF FF FF FF FF FF FF 
     464.  00:A459                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     464.  00:A459  FF FF FF FF FF FF FF FF 
     465.  00:A461                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     465.  00:A461  FF FF FF FF FF FF FF FF 
     466.  00:A469                      	
     467.  00:A469                      ;; MANOIZQ
     468.  00:A469                      
     469.  00:A469                      sprite_manoizq1:
     470.  00:A469                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     470.  00:A469  FF FF FF FF FF FF FF FF 
     471.  00:A471                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     471.  00:A471  FF FF FF FF FF FF FF FF 
     472.  00:A479                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     472.  00:A479  FF FF FF FF FF FF FF FF 
     473.  00:A481                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     473.  00:A481  FF FF FF FF FF FF FF FF 
     474.  00:A489                      	
     475.  00:A489                      sprite_manoizq2:
     476.  00:A489                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     476.  00:A489  FF FF FF FF FF FF FF FF 
     477.  00:A491                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     477.  00:A491  FF FF FF FF FF FF FF FF 
     478.  00:A499                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     478.  00:A499  FF FF FF FF FF FF FF FF 
     479.  00:A4A1                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     479.  00:A4A1  FF FF FF FF FF FF FF FF 
     480.  00:A4A9                      	
     481.  00:A4A9                      sprite_manoizq3:
     482.  00:A4A9                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     482.  00:A4A9  FF FF FF FF FF FF FF FF 
     483.  00:A4B1                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     483.  00:A4B1  FF FF FF FF FF FF FF FF 
     484.  00:A4B9                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     484.  00:A4B9  FF FF FF FF FF FF FF FF 
     485.  00:A4C1                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF	
     485.  00:A4C1  FF FF FF FF FF FF FF FF 
     486.  00:A4C9                      	
     487.  00:A4C9                      ;; MANODER
     488.  00:A4C9                      
     489.  00:A4C9                      sprite_manoder1:
     490.  00:A4C9                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     490.  00:A4C9  FF FF FF FF FF FF FF FF 
     491.  00:A4D1                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     491.  00:A4D1  FF FF FF FF FF FF FF FF 
     492.  00:A4D9                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     492.  00:A4D9  FF FF FF FF FF FF FF FF 
     493.  00:A4E1                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     493.  00:A4E1  FF FF FF FF FF FF FF FF 
     494.  00:A4E9                      	
     495.  00:A4E9                      sprite_manoder2:
     496.  00:A4E9                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     496.  00:A4E9  FF FF FF FF FF FF FF FF 
     497.  00:A4F1                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     497.  00:A4F1  FF FF FF FF FF FF FF FF 
     498.  00:A4F9                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     498.  00:A4F9  FF FF FF FF FF FF FF FF 
     499.  00:A501                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     499.  00:A501  FF FF FF FF FF FF FF FF 
     500.  00:A509                      	
     501.  00:A509                      sprite_manoder3:
     502.  00:A509                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     502.  00:A509  FF FF FF FF FF FF FF FF 
     503.  00:A511                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     503.  00:A511  FF FF FF FF FF FF FF FF 
     504.  00:A519                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     504.  00:A519  FF FF FF FF FF FF FF FF 
     505.  00:A521                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF		
     505.  00:A521  FF FF FF FF FF FF FF FF 
     506.  00:A529                      	
     507.  00:A529                      	
     508.  00:A529                      	
     509.  00:A529                      	
     510.  00:A529                      	
     511.  00:A529                      	
     512.  00:A529                      	
     513.  00:A529                      	
     514.  00:A529                      	
     515.  00:A529                      	
     516.  00:A529                      	
     517.  00:A529                      	
     518.  00:A529                      	
     519.  00:A529                      	
     520.  00:A529                      	
     521.  00:A529                      	
     522.  00:A529                      	
     523.  00:A529                      	
     524.  00:A529                      	
     525.  00:A529                      	
     526.  00:A529                      	
     527.  00:A529                      	
     528.  00:A529                      	
     173   00:A529                      	
     174   00:A529                      	include "habitaciones.asm"
       1.  00:A529                      ;;=====================================================
       2.  00:A529                      ;;DEFINICIÓN DE HABITACIONES x NIVEL
       3.  00:A529                      ;;=====================================================	
       4.  00:A529                      
       5.  00:A529                      ; sólo voy a usar 7x7 pero como los arrays son lineales y voy a trabajar con matrices
       6.  00:A529                      ; me interesa que seande  8x8 aunque sólo trabaje con 7x7
       7.  00:A529                      
       8.  00:A529                      ; ojo... la primera linea corresponderá a la primera linea del castillo no a la última
       9.  00:A529                      
      10.  00:A529                      ;; definición de estructura de bits
      11.  00:A529                      ;16 bits por habitación
      12.  00:A529                      
      13.  00:A529                      ;~ 7 - sin asignar
      14.  00:A529                      ;~ 6 - sin asignar
      15.  00:A529                      ;~ 5 - esqueletos
      16.  00:A529                      ;~ 4 - todos los enemigos muertos 0 no y 1 ó <>0
      17.  00:A529                      ;~ 0,1,2,3 - nº puertas 1 arriba 1 derecha 1 abajo 1 izquierda
      18.  00:A529                      
      19.  00:A529                      ;~ 7 - oracion
      20.  00:A529                      ;~ 6 - cruz
      21.  00:A529                      ;~ 5 - agua bendita
      22.  00:A529                      ;~ 4 - armadura
      23.  00:A529                      ;~ 3 - planta
      24.  00:A529                      ;~ 2 - vida extra
      25.  00:A529                      ;~ 1 - ballesta
      26.  00:A529                      ;~ 0 - antorchas
      27.  00:A529                      
      28.  00:A529                      ;importante: el byte de la columna 15 indicará con 1 y 0 habitaciones por las que se haya pasado
      29.  00:A529                      ;cuando se inicie la partida todos se pondrán a 0
      30.  00:A529                      ;por ejemplo 01000000b se ha pasado por la hab. 2 de esa fila en el nivel que sea
      31.  00:A529                      
      32.  00:A529                      habitacion_actual:
      33.  00:A529  00                  	db  0		;habitación donde se encuentre el prota. Se mete en una varible par traer todos los datos de golpe y no buscarlos varias veces
      34.  00:A52A                      habitacion_extras:
      35.  00:A52A  00                  	db	0		;donde van las ayudas de una habitación
      36.  00:A52B                      habitacion_actual_puntero;
      37.  00:A52B  00 00               	dw	0		;puntero para actualizar la habitación cuando se maten todos los enemigos
      38.  00:A52D                      is_habitacion_terminada:
      39.  00:A52D  00                  	db	0		;variable para consultar más rápido si se ha pasado (<>0 si se ha pasado y 0 no se ha pasado)
      40.  00:A52E                      
      41.  00:A52E                      habitaciones_juego:
      42.  00:A52E                      habitaciones_nivel0:
      43.  00:A52E                      	db  00010000b,#00,00010001b,#01,00011111b,11000001b,00000010b,#03,00001000b,#04,00001001b,#05,00001100b,#06,00000000b,#CD ;primera fila
      43.  00:A52E  10 00 11 01 1F C1 02 03 08 04 09 05 0C 06 00 CD 
      44.  00:A53E                      	db  00010000b,#10,#11,#11,#12,#12,#13,#13,#14,#14,#15,#15,#16,#16,#FF,#00
      44.  00:A53E  10 10 11 11 12 12 13 13 14 14 15 15 16 16 FF 00 
      45.  00:A54E                      	db  #20,#20,#21,#21,#22,#22,#23,#23,#24,#24,#25,#25,#26,#26,#FF,#00
      45.  00:A54E  20 20 21 21 22 22 23 23 24 24 25 25 26 26 FF 00 
      46.  00:A55E                      	db  #30,#30,#31,#31,#32,#32,#33,#33,#34,#34,#35,#35,#36,#36,#FF,#00
      46.  00:A55E  30 30 31 31 32 32 33 33 34 34 35 35 36 36 FF 00 
      47.  00:A56E                      	db  00000000b,#00,00000001b,#01,00001111b,#02,00000011b,#03,00001000b,#04,00001001b,#05,00001100b,#06,#FF,#00
      47.  00:A56E  00 00 01 01 0F 02 03 03 08 04 09 05 0C 06 FF 00 
      48.  00:A57E                      	db  #50,#50,#51,#51,#52,#52,#53,#53,#54,#54,#55,#55,#56,#56,#FF,#00
      48.  00:A57E  50 50 51 51 52 52 53 53 54 54 55 55 56 56 FF 00 
      49.  00:A58E                      	db  00000000b,#00,00000001b,#01,00001111b,#02,00000011b,#03,00001000b,#04,00001001b,#05,00001100b,#06,#FF,#00	;ultima fila
      49.  00:A58E  00 00 01 01 0F 02 03 03 08 04 09 05 0C 06 FF 00 
      50.  00:A59E                      	
      51.  00:A59E                      habitaciones_nivel1:
      52.  00:A59E                      	db  00010000b,#00,00000001b,#01,00000010b,#02,00000011b,#03,00001000b,#04,00001001b,#05,00001100b,#06,#FF,#00 ;primera fila
      52.  00:A59E  10 00 01 01 02 02 03 03 08 04 09 05 0C 06 FF 00 
      53.  00:A5AE                      	db  #17,#10,#11,#11,#12,#12,#13,#13,#14,#14,#15,#15,#16,#16,#FF,#00
      53.  00:A5AE  17 10 11 11 12 12 13 13 14 14 15 15 16 16 FF 00 
      54.  00:A5BE                      	db  #20,#20,#21,#21,#22,#22,#23,#23,#24,#24,#25,#25,#26,#26,#FF,#00
      54.  00:A5BE  20 20 21 21 22 22 23 23 24 24 25 25 26 26 FF 00 
      55.  00:A5CE                      	db  #30,#30,#31,#31,#32,#32,#33,#33,#34,#34,#35,#35,#36,#36,#FF,#00
      55.  00:A5CE  30 30 31 31 32 32 33 33 34 34 35 35 36 36 FF 00 
      56.  00:A5DE                      	db  00000000b,#00,00000001b,#01,00001111b,#02,00000011b,#03,00001000b,#04,00001001b,#05,00001100b,#06,#FF,#00
      56.  00:A5DE  00 00 01 01 0F 02 03 03 08 04 09 05 0C 06 FF 00 
      57.  00:A5EE                      	db  #50,#50,#51,#51,#52,#52,#53,#53,#54,#54,#55,#55,#56,#56,#FF,#00
      57.  00:A5EE  50 50 51 51 52 52 53 53 54 54 55 55 56 56 FF 00 
      58.  00:A5FE                      	db  00000000b,#00,00000001b,#01,00000010b,#02,00000011b,#03,00001000b,#04,00001001b,#05,00001100b,#06,#FF,#00	;ultima fila
      58.  00:A5FE  00 00 01 01 02 02 03 03 08 04 09 05 0C 06 FF 00 
      59.  00:A60E                      	
      60.  00:A60E                      habitaciones_nivel2:
      61.  00:A60E                      	db  00000000b,#00,00000001b,#01,00000010b,#02,00000011b,#03,00001000b,#04,00001001b,#05,00001100b,#06,#FF,#00 ;primera fila
      61.  00:A60E  00 00 01 01 02 02 03 03 08 04 09 05 0C 06 FF 00 
      62.  00:A61E                      	db  #17,#10,#11,#11,#12,#12,#13,#13,#14,#14,#15,#15,#16,#16,#FF,#00
      62.  00:A61E  17 10 11 11 12 12 13 13 14 14 15 15 16 16 FF 00 
      63.  00:A62E                      	db  #20,#20,#21,#21,#22,#22,#23,#23,#24,#24,#25,#25,#26,#26,#FF,#00
      63.  00:A62E  20 20 21 21 22 22 23 23 24 24 25 25 26 26 FF 00 
      64.  00:A63E                      	db  #30,#30,#31,#31,#32,#32,#33,#33,#34,#34,#35,#35,#36,#36,#FF,#00
      64.  00:A63E  30 30 31 31 32 32 33 33 34 34 35 35 36 36 FF 00 
      65.  00:A64E                      	db  00000000b,#00,00000001b,#01,00001111b,#02,00000011b,#03,00001000b,#04,00001001b,#05,00001100b,#06,#FF,#00
      65.  00:A64E  00 00 01 01 0F 02 03 03 08 04 09 05 0C 06 FF 00 
      66.  00:A65E                      	db  #50,#50,#51,#51,#52,#52,#53,#53,#54,#54,#55,#55,#56,#56,#FF,#00
      66.  00:A65E  50 50 51 51 52 52 53 53 54 54 55 55 56 56 FF 00 
      67.  00:A66E                      	db  00000000b,#00,00000001b,#01,00000010b,#02,00000011b,#03,00001000b,#04,00001001b,#05,00001100b,#06,#FF,#00	;ultima fila
      67.  00:A66E  00 00 01 01 02 02 03 03 08 04 09 05 0C 06 FF 00 
      68.  00:A67E                      	
      69.  00:A67E                      habitaciones_nivel3:
      70.  00:A67E                      	db  00000000b,#00,00000001b,#01,00000010b,#02,00000011b,#03,00001000b,#04,00001001b,#05,00001100b,#06,#FF,#00 ;primera fila
      70.  00:A67E  00 00 01 01 02 02 03 03 08 04 09 05 0C 06 FF 00 
      71.  00:A68E                      	db  #17,#10,#11,#11,#12,#12,#13,#13,#14,#14,#15,#15,#16,#16,#FF,#00
      71.  00:A68E  17 10 11 11 12 12 13 13 14 14 15 15 16 16 FF 00 
      72.  00:A69E                      	db  #20,#20,#21,#21,#22,#22,#23,#23,#24,#24,#25,#25,#26,#26,#FF,#00
      72.  00:A69E  20 20 21 21 22 22 23 23 24 24 25 25 26 26 FF 00 
      73.  00:A6AE                      	db  #30,#30,#31,#31,#32,#32,#33,#33,#34,#34,#35,#35,#36,#36,#FF,#00
      73.  00:A6AE  30 30 31 31 32 32 33 33 34 34 35 35 36 36 FF 00 
      74.  00:A6BE                      	db  00000000b,#00,00000001b,#01,00001111b,#02,00000011b,#03,00001000b,#04,00001001b,#05,00001100b,#06,#FF,#00
      74.  00:A6BE  00 00 01 01 0F 02 03 03 08 04 09 05 0C 06 FF 00 
      75.  00:A6CE                      	db  #50,#50,#51,#51,#52,#52,#53,#53,#54,#54,#55,#55,#56,#56,#FF,#00
      75.  00:A6CE  50 50 51 51 52 52 53 53 54 54 55 55 56 56 FF 00 
      76.  00:A6DE                      	db  00000000b,#00,00000001b,#01,00000010b,#02,00000011b,#03,00001000b,#04,00001001b,#05,00001100b,#06,#FF,#00	;ultima fila
      76.  00:A6DE  00 00 01 01 02 02 03 03 08 04 09 05 0C 06 FF 00 
      77.  00:A6EE                      	
      78.  00:A6EE                      habitaciones_nivel4:
      79.  00:A6EE                      	db  00000001b,#00,00000001b,#01,00000010b,#02,00000011b,#03,00001000b,#04,00001001b,#05,00001100b,#06,#FF,#00 ;primera fila
      79.  00:A6EE  01 00 01 01 02 02 03 03 08 04 09 05 0C 06 FF 00 
      80.  00:A6FE                      	db  #17,#10,#11,#11,#12,#12,#13,#13,#14,#14,#15,#15,#16,#16,#FF,#00
      80.  00:A6FE  17 10 11 11 12 12 13 13 14 14 15 15 16 16 FF 00 
      81.  00:A70E                      	db  #20,#20,#21,#21,#22,#22,#23,#23,#24,#24,#25,#25,#26,#26,#FF,#00
      81.  00:A70E  20 20 21 21 22 22 23 23 24 24 25 25 26 26 FF 00 
      82.  00:A71E                      	db  #30,#30,#31,#31,#32,#32,#33,#33,#34,#34,#35,#35,#36,#36,#FF,#00
      82.  00:A71E  30 30 31 31 32 32 33 33 34 34 35 35 36 36 FF 00 
      83.  00:A72E                      	db  00000000b,#00,00000001b,#01,00001111b,#02,00000011b,#03,00001000b,#04,00001001b,#05,00001100b,#06,#FF,#00
      83.  00:A72E  00 00 01 01 0F 02 03 03 08 04 09 05 0C 06 FF 00 
      84.  00:A73E                      	db  #50,#50,#51,#51,#52,#52,#53,#53,#54,#54,#55,#55,#56,#56,#FF,#00
      84.  00:A73E  50 50 51 51 52 52 53 53 54 54 55 55 56 56 FF 00 
      85.  00:A74E                      	db  00000000b,#00,00000001b,#01,00001111b,00001111b,00000011b,#03,00001000b,#04,00001001b,#05,00001100b,#06,#FF,#00	;ultima fila
      85.  00:A74E  00 00 01 01 0F 0F 03 03 08 04 09 05 0C 06 FF 00 
      86.  00:A75E                      	
      87.  00:A75E                      habitaciones_nivel5:
      88.  00:A75E                      	db  00000000b,#00,00000001b,#01,00000010b,#02,00000011b,#03,00001000b,#04,00001001b,#05,00001100b,#06,#FF,#00 ;primera fila
      88.  00:A75E  00 00 01 01 02 02 03 03 08 04 09 05 0C 06 FF 00 
      89.  00:A76E                      	db  #17,#10,#11,#11,#12,#12,#13,#13,#14,#14,#15,#15,#16,#16,#FF,#00
      89.  00:A76E  17 10 11 11 12 12 13 13 14 14 15 15 16 16 FF 00 
      90.  00:A77E                      	db  #20,#20,#21,#21,#22,#22,#23,#23,#24,#24,#25,#25,#26,#26,#FF,#00
      90.  00:A77E  20 20 21 21 22 22 23 23 24 24 25 25 26 26 FF 00 
      91.  00:A78E                      	db  #30,#30,#31,#31,#32,#32,#33,#33,#34,#34,#35,#35,#36,#36,#FF,#00
      91.  00:A78E  30 30 31 31 32 32 33 33 34 34 35 35 36 36 FF 00 
      92.  00:A79E                      	db  00000000b,#00,00000001b,#01,00001111b,#02,00000011b,#03,00001000b,#04,00001001b,#05,00001100b,#06,#FF,#00
      92.  00:A79E  00 00 01 01 0F 02 03 03 08 04 09 05 0C 06 FF 00 
      93.  00:A7AE                      	db  #50,#50,#51,#51,#52,#52,#53,#53,#54,#54,#55,#55,#56,#56,#FF,#00
      93.  00:A7AE  50 50 51 51 52 52 53 53 54 54 55 55 56 56 FF 00 
      94.  00:A7BE                      	db  00000000b,#00,00000001b,#01,00001010b,00001010b,00000011b,#03,00001000b,#04,00001001b,#05,00001100b,#06,#FF,#00	;ultima fila
      94.  00:A7BE  00 00 01 01 0A 0A 03 03 08 04 09 05 0C 06 FF 00 
      95.  00:A7CE                      	
      96.  00:A7CE                      habitaciones_nivel6:
      97.  00:A7CE                      	db  00000000b,#00,00000001b,#01,00000010b,#02,00000011b,#03,00001000b,#04,00001001b,#05,00001100b,#06,#FF,#00 ;primera fila
      97.  00:A7CE  00 00 01 01 02 02 03 03 08 04 09 05 0C 06 FF 00 
      98.  00:A7DE                      	db  #17,#10,#11,#11,#12,#12,#13,#13,#14,#14,#15,#15,#16,#16,#FF,#00
      98.  00:A7DE  17 10 11 11 12 12 13 13 14 14 15 15 16 16 FF 00 
      99.  00:A7EE                      	db  #20,#20,#21,#21,#22,#22,#23,#23,#24,#24,#25,#25,#26,#26,#FF,#00
      99.  00:A7EE  20 20 21 21 22 22 23 23 24 24 25 25 26 26 FF 00 
     100.  00:A7FE                      	db  #30,#30,#31,#31,#32,#32,#33,#33,#34,#34,#35,#35,#36,#36,#FF,#00
     100.  00:A7FE  30 30 31 31 32 32 33 33 34 34 35 35 36 36 FF 00 
     101.  00:A80E                      	db  00000000b,#00,00000001b,#01,00001111b,#02,00000011b,#03,00001000b,#04,00001001b,#05,00001100b,#06,#FF,#00
     101.  00:A80E  00 00 01 01 0F 02 03 03 08 04 09 05 0C 06 FF 00 
     102.  00:A81E                      	db  #50,#50,#51,#51,#52,#52,#53,#53,#54,#54,#55,#55,#56,#56,#FF,#00
     102.  00:A81E  50 50 51 51 52 52 53 53 54 54 55 55 56 56 FF 00 
     103.  00:A82E                      	db  00000000b,#00,00000001b,10000000b,00001111b,#02,00000011b,#03,00001000b,#04,00001001b,#05,00001100b,#06,#FF,#00	;ultima fila
     103.  00:A82E  00 00 01 80 0F 02 03 03 08 04 09 05 0C 06 FF 00 
     104.  00:A83E                      
     105.  00:A83E                      
     175   00:A83E                      	
     176   00:A83E                      	include "variables.asm"
       1.  00:A83E                      ;;=====================================================
       2.  00:A83E                      ;;DEFINICIÓN DE VARIABLES
       3.  00:A83E                      ;;=====================================================
       4.  00:A83E                      
       5.  00:A83E                      ;Colores base de la pantalla
       6.  00:A83E                      color_base:
       7.  00:A83E  01 01 01            			DB		COLNEGRO,COLNEGRO,COLNEGRO	
       8.  00:A841                      ;colores de pantalla cuando se tira bomba
       9.  00:A841                      color_bomba1:
      10.  00:A841  08 08 08            			DB		COLROJO,COLROJO,COLROJO
      11.  00:A844                      color_bomba2:
      12.  00:A844  06 06 06            			DB		COLROJOOSC,COLROJOOSC,COLROJOOSC
      13.  00:A847                      
      14.  00:A847                      ;definicion de variable del prota usando la estructura del punto de mira
      15.  00:A847                      prota:		ESTRUCTURA_PUNTOMIRA
      15.  00:A847  64 64 00 00 00 05 00 00 00 00 00 00 00 00 00 00 
      16.  00:A857                      ;variables globales del prota
      17.  00:A857                      prota_nivel:			;nivel del castillo donde está 0-6
      18.  00:A857  00                  			DB		0
      19.  00:A858                      prota_vidas:
      20.  00:A858  00                  			DB		0
      21.  00:A859                      prota_reliquias:
      22.  00:A859  03                  			DB		3
      23.  00:A85A                      prota_pos_mapx:
      24.  00:A85A  00                  			DB		0	;pos columna
      25.  00:A85B                      prota_pos_mapy:
      26.  00:A85B  00                  			DB		0	;pos fila
      27.  00:A85C                      prota_energia:
      28.  00:A85C  FA                  			DB		250
      29.  00:A85D                      
      30.  00:A85D                      ;array para pintar de golpe el marcador de vidas
      31.  00:A85D                      array_aux_vidas: 		
      32.  00:A85D                      			DB		0,0,0,0,0,0,0,0
      32.  00:A85D  00 00 00 00 00 00 00 00 
      33.  00:A865                      
      34.  00:A865                      ;array para pintar de golpe el marcador de reliquias
      35.  00:A865                      array_aux_reliquias:	
      36.  00:A865                      			DB		0,0,0,0,0,0,0,0
      36.  00:A865  00 00 00 00 00 00 00 00 
      37.  00:A86D                      
      38.  00:A86D                      array_aux_energia:					;array para pintar de golpe el marcador de energía
      39.  00:A86D                      			DB		16,0,0,0,0,0,0 	;el 16 primero es porque siempre estará pintado el cuadro primero rojo
      39.  00:A86D  10 00 00 00 00 00 00 
      40.  00:A874                      ultimo_pos_array_aux_energia:
      41.  00:A874  00                  			DB		0				;el array completo es de 8 pero para posicionar sin niecesidad de cálculos  etiqueto este aparte
      42.  00:A875                      			
      43.  00:A875                      array_aux_mapa_limpiar:	;es por facilitar el reseteo del mapa (pinto 7 lineas en negro con bios) la otra opción es más larga en código y complicada aunque más rápida
      44.  00:A875                      			DB		0,0,0,0,0,0,0
      44.  00:A875  00 00 00 00 00 00 00 
      45.  00:A87C                      elemento_pintar_mapa:
      46.  00:A87C  00                  			DB		0	;TILEPROTAM = 19, ;TILEGRISM = 9
      47.  00:A87D                      			
      48.  00:A87D                      ;; nota importante: cada vez que se cambie de nivel se actualizará el contenido
      49.  00:A87D                      
      50.  00:A87D                      
      51.  00:A87D                      lista_ayudas:
      52.  00:A87D  00 (16)             ayuda_oracion:		DS		ESTRUCTURA_AYUDA		
      53.  00:A88D  00 (16)             ayuda_cruz:			DS		ESTRUCTURA_AYUDA
      54.  00:A89D  00 (16)             ayuda_aguabendita:	DS		ESTRUCTURA_AYUDA
      55.  00:A8AD  00 (16)             ayuda_armadura:		DS		ESTRUCTURA_AYUDA
      56.  00:A8BD  00 (16)             ayuda_planta:		DS		ESTRUCTURA_AYUDA
      57.  00:A8CD  00 (16)             ayuda_vidaextra		DS		ESTRUCTURA_AYUDA
      58.  00:A8DD  00 (16)             ayuda_ballesta:		DS		ESTRUCTURA_AYUDA
      59.  00:A8ED                      
      60.  00:A8ED                      ;datos ayudas
      61.  00:A8ED                      datos_oracion:
      62.  00:A8ED  00                  				DB    	0				;0 no activo <>0 activo															0
      63.  00:A8EE  56 A9               				DW		array_oracionon	;pos en memoria ver array_ayudas de cómo se mostrarán (wordaux2)				1,2
      64.  00:A8F0  5A A9               				DW		array_oracionoff;pos en memoria ver array_ayudas de cómo se mostrarán (wordaux2)				3,4
      65.  00:A8F2  A3                  				DB		POSORACION		;pos en pantalla (memoria en el banco 1 se le suma 256 + TILEMAP) (wordaux1)	5
      66.  00:A8F3  20                  				DB		POSORACIONX		;pos del pixel central (esquina superior + 8x)									6
      67.  00:A8F4  70                  				DB		POSAYUDASY		;pos del pixel central (esquina superior + 8y) (para toas igual)				7
      68.  00:A8F5  C2 9A               				DW		accion_oracion	;subrutina que indica la acción si se dispara en el objeto						8,9
      69.  00:A8F7                      datos_cruz:
      70.  00:A8F7                      				;~ DB    	0				;0 no activo <>0 activo															0
      71.  00:A8F7                      				;~ DW		array_cruzon	;pos en memoria ver array_ayudas de cómo se mostrarán (wordaux2)				1,2
      72.  00:A8F7                      				;~ DW		array_cruzoff	;pos en memoria ver array_ayudas de cómo se mostrarán (wordaux2)				3,4
      73.  00:A8F7                      				;~ DB		POSCRUZ			;pos en pantalla (memoria en el banco 1 se le suma 256 + TILEMAP) (wordaux1)	5
      74.  00:A8F7                      				;~ DB		POSCRUZX		;pos del pixel central (esquina superior + 8x)									6
      75.  00:A8F7                      				;~ DB		POSAYUDASY		;pos del pixel central (esquina superior + 8y) (para toas igual)				7
      76.  00:A8F7                      				;~ DW		accion_cruz		;subrutina que indica la acción si se dispara en el objeto						8,9 
      77.  00:A8F7                      				
      78.  00:A8F7  00                  				DB    	0				;0 no activo <>0 activo															0
      79.  00:A8F8  5E A9               				DW		array_cruzon	;pos en memoria ver array_ayudas de cómo se mostrarán (wordaux2)				1,2
      80.  00:A8FA  62 A9               				DW		array_cruzoff	;pos en memoria ver array_ayudas de cómo se mostrarán (wordaux2)				3,4
      81.  00:A8FC  A7                  				DB		167			;pos en pantalla (memoria en el banco 1 se le suma 256 + TILEMAP) (wordaux1)	5
      82.  00:A8FD  40                  				DB		64		;pos del pixel central (esquina superior + 8x)									6
      83.  00:A8FE  70                  				DB		112		;pos del pixel central (esquina superior + 8y) (para toas igual)				7
      84.  00:A8FF  C3 9A               				DW		accion_cruz		;subrutina que indica la acción si se dispara en el objeto						8,9 
      85.  00:A901                      				
      86.  00:A901                      datos_aguabendita:
      87.  00:A901  00                  				DB    	0				;0 no activo <>0 activo															0
      88.  00:A902  66 A9               				DW		array_aguaon	;pos en memoria ver array_ayudas de cómo se mostrarán (wordaux2)				1,2
      89.  00:A904  6A A9               				DW		array_aguaoff	;pos en memoria ver array_ayudas de cómo se mostrarán (wordaux2)				3,4
      90.  00:A906  AB                  				DB		POSAGUA			;pos en pantalla (memoria en el banco 1 se le suma 256 + TILEMAP) (wordaux1)	5
      91.  00:A907  60                  				DB		POSAGUAX		;pos del pixel central (esquina superior + 8x)									6
      92.  00:A908  70                  				DB		POSAYUDASY		;pos del pixel central (esquina superior + 8y) (para toas igual)				7
      93.  00:A909  C4 9A               				DW		accion_agua		;subrutina que indica la acción si se dispara en el objeto						8,9
      94.  00:A90B  00                  				DB		0	;relleno																		10-16    
      95.  00:A90C  00                  				DB		0	;relleno																		10-16    
      96.  00:A90D  00                  				DB		0	;relleno																		10-16    
      97.  00:A90E  00                  				DB		0	;relleno																		10-16    
      98.  00:A90F  00                  				DB		0	;relleno																		10-16    
      99.  00:A910  00                  				DB		0	;relleno																		10-16   
     100.  00:A911  00                  				DB		0	;relleno																		10-16    
     101.  00:A912                      datos_armadura:
     102.  00:A912  00                  				DB    	0				;0 no activo <>0 activo															0
     103.  00:A913  6E A9               				DW		array_armaduraon;pos en memoria ver array_ayudas de cómo se mostrarán (wordaux2)				1,2
     104.  00:A915  72 A9               				DW		array_armaduraoff;pos en memoria ver array_ayudas de cómo se mostrarán (wordaux2)				3,4
     105.  00:A917  AF                  				DB		POSARMAD		;pos en pantalla (memoria en el banco 1 se le suma 256 + TILEMAP) (wordaux1)	5
     106.  00:A918  80                  				DB		POSARMADX		;pos del pixel central (esquina superior + 8x)									6
     107.  00:A919  70                  				DB		POSAYUDASY		;pos del pixel central (esquina superior + 8y) (para toas igual)				7
     108.  00:A91A  C5 9A               				DW		accion_armadura	;subrutina que indica la acción si se dispara en el objeto						8,9
     109.  00:A91C  00                  				DB		0	;relleno																		10-16    
     110.  00:A91D  00                  				DB		0	;relleno																		10-16    
     111.  00:A91E  00                  				DB		0	;relleno																		10-16    
     112.  00:A91F  00                  				DB		0	;relleno																		10-16    
     113.  00:A920  00                  				DB		0	;relleno																		10-16    
     114.  00:A921  00                  				DB		0	;relleno																		10-16   
     115.  00:A922  00                  				DB		0	;relleno																		10-16    
     116.  00:A923                      datos_planta:
     117.  00:A923  00                  				DB    	0				;0 no activo <>0 activo															0
     118.  00:A924  76 A9               				DW		array_plantaon	;pos en memoria ver array_ayudas de cómo se mostrarán (wordaux2)				1,2
     119.  00:A926  7A A9               				DW		array_plantaoff	;pos en memoria ver array_ayudas de cómo se mostrarán (wordaux2)				3,4
     120.  00:A928  B3                  				DB		POSPLANTA		;pos en pantalla (memoria en el banco 1 se le suma 256 + TILEMAP) (wordaux1)	5
     121.  00:A929  A0                  				DB		POSPLANTAX		;pos del pixel central (esquina superior + 8x)									6
     122.  00:A92A  70                  				DB		POSAYUDASY		;pos del pixel central (esquina superior + 8y) (para toas igual)				7
     123.  00:A92B  C6 9A               				DW		accion_planta	;subrutina que indica la acción si se dispara en el objeto						8,9
     124.  00:A92D  00                  				DB		0	;relleno																		10-16    
     125.  00:A92E  00                  				DB		0	;relleno																		10-16    
     126.  00:A92F  00                  				DB		0	;relleno																		10-16    
     127.  00:A930  00                  				DB		0	;relleno																		10-16    
     128.  00:A931  00                  				DB		0	;relleno																		10-16    
     129.  00:A932  00                  				DB		0	;relleno																		10-16   
     130.  00:A933  00                  				DB		0	;relleno																		10-16     
     131.  00:A934                      datos_vidaextra:
     132.  00:A934  00                  				DB    	0				;0 no activo <>0 activo															0
     133.  00:A935  7E A9               				DW		array_extraon	;pos en memoria ver array_ayudas de cómo se mostrarán (wordaux2)				1,2
     134.  00:A937  82 A9               				DW		array_extraoff	;pos en memoria ver array_ayudas de cómo se mostrarán (wordaux2)				3,4
     135.  00:A939  B7                  				DB		POSVIDAEXT		;pos en pantalla (memoria en el banco 1 se le suma 256 + TILEMAP) (wordaux1)	5
     136.  00:A93A  C0                  				DB		POSVIDAEXTX		;pos del pixel central (esquina superior + 8x)									6
     137.  00:A93B  70                  				DB		POSAYUDASY		;pos del pixel central (esquina superior + 8y) (para toas igual)				7
     138.  00:A93C  C7 9A               				DW		accion_vidaextra;subrutina que indica la acción si se dispara en el objeto						8,9
     139.  00:A93E  00                  				DB		0	;relleno																		10-16    
     140.  00:A93F  00                  				DB		0	;relleno																		10-16    
     141.  00:A940  00                  				DB		0	;relleno																		10-16    
     142.  00:A941  00                  				DB		0	;relleno																		10-16    
     143.  00:A942  00                  				DB		0	;relleno																		10-16    
     144.  00:A943  00                  				DB		0	;relleno																		10-16   
     145.  00:A944  00                  				DB		0	;relleno																		10-16     
     146.  00:A945                      datos_ballesta:
     147.  00:A945  00                  				DB    	0				;0 no activo <>0 activo															0
     148.  00:A946  86 A9               				DW		array_ballestaon;pos en memoria ver array_ayudas de cómo se mostrarán (wordaux2)				1,2
     149.  00:A948  8A A9               				DW		array_ballestaoff;pos en memoria ver array_ayudas de cómo se mostrarán (wordaux2)				3,4
     150.  00:A94A  BB                  				DB		POSBALLESTA		;pos en pantalla (memoria en el banco 1 se le suma 256 + TILEMAP) (wordaux1)	5
     151.  00:A94B  E0                  				DB		POSBALLESTAX	;pos del pixel central (esquina superior + 8x)									6
     152.  00:A94C  70                  				DB		POSAYUDASY		;pos del pixel central (esquina superior + 8y) (para toas igual)				7
     153.  00:A94D  C2 9A               				DW		accion_oracion	;subrutina que indica la acción si se dispara en el objeto						8,9
     154.  00:A94F  00                  				DB		0	;relleno																		10-16    
     155.  00:A950  00                  				DB		0	;relleno																		10-16    
     156.  00:A951  00                  				DB		0	;relleno																		10-16    
     157.  00:A952  00                  				DB		0	;relleno																		10-16    
     158.  00:A953  00                  				DB		0	;relleno																		10-16    
     159.  00:A954  00                  				DB		0	;relleno																		10-16   
     160.  00:A955  00                  				DB		0	;relleno																		10-16      
     161.  00:A956                      
     162.  00:A956                      
     163.  00:A956                      
     164.  00:A956                      
     165.  00:A956                      
     166.  00:A956                      ;array de ayudas
     167.  00:A956                      ;posición dentro del bank1 (o 0 que son iguales) de los tiles de la ayuda (cómo en los sprites de 2x2)
     168.  00:A956                      array_ayudas:
     169.  00:A956  C8 CA               array_oracionon:			DB	200,202
     170.  00:A958  C9 CB               array_oracionon1:			DB	201,203
     171.  00:A95A  CC CE               array_oracionoff:			DB	204,206
     172.  00:A95C  CD CF               array_oracionoff1:			DB	205,207
     173.  00:A95E  D0 D2               array_cruzon:				DB	208,210
     174.  00:A960  D1 D3               array_cruzon1:				DB	209,211
     175.  00:A962  D4 D6               array_cruzoff:				DB	212,214
     176.  00:A964  D5 D7               array_cruzoff1:				DB	213,215
     177.  00:A966  D8 DA               array_aguaon:				DB	216,218
     178.  00:A968  D9 DB               array_aguaon1:				DB	217,219
     179.  00:A96A  DC DE               array_aguaoff:				DB	220,222
     180.  00:A96C  DD DF               array_aguaoff1:				DB	221,223
     181.  00:A96E  E0 E2               array_armaduraon:			DB	224,226
     182.  00:A970  E1 E3               array_armaduraon1:			DB	225,227
     183.  00:A972  E4 E6               array_armaduraoff:			DB	228,230
     184.  00:A974  E5 E7               array_armaduraoff1:			DB	229,231
     185.  00:A976  E8 EA               array_plantaon:				DB	232,234
     186.  00:A978  E9 EB               array_plantaon1:			DB	233,235
     187.  00:A97A  EC EE               array_plantaoff:			DB	236,238
     188.  00:A97C  ED EF               array_plantaoff1:			DB	237,239
     189.  00:A97E  F0 F2               array_extraon:				DB	240,242
     190.  00:A980  F1 F3               array_extraon1:				DB	241,243
     191.  00:A982  F4 F6               array_extraoff:				DB	244,246
     192.  00:A984  F5 F7               array_extraoff1:			DB	245,247
     193.  00:A986  F8 FA               array_ballestaon:			DB	248,250
     194.  00:A988  F9 FB               array_ballestaon1:			DB	249,251
     195.  00:A98A  FC FE               array_ballestaoff:			DB	252,254
     196.  00:A98C  FD FF               array_ballestaoff1:			DB	253,255
     197.  00:A98E                      
     198.  00:A98E  00 (7)              antorchas:			DS		ESTRUCTURA_ANTORCHA
     199.  00:A995  C5 C6 C7            array_antorcha:				DB	197,198,199	;fuego + madera1 + madera2
     200.  00:A998                      
     201.  00:A998  00 (7)              esqueletos:			DS		ESTRUCTURA_ESQUELETO
     202.  00:A99F                      array_esqueleto:			DB	194, 0, 195, 160, 164, 161, 0, 163, 0, 193, 162, 192
     202.  00:A99F  C2 00 C3 A0 A4 A1 00 A3 00 C1 A2 C0 
     203.  00:A9AB  A4 A5 A4 A6         lista_escenas_calavera:		DB	164, 165, 164, 166
     204.  00:A9AF                      
     205.  00:A9AF                      
     206.  00:A9AF                      
     207.  00:A9AF                      
     208.  00:A9AF                      ;array de 4 bytes x 32 sprites posibles en pantalla que sobreescribirá la tabla de sprites actualizando VRAM
     209.  00:A9AF                      array_sprites:
     210.  00:A9AF  00 (8)              array_sprites_pm:				DS	2 * 4
     211.  00:A9B7  00 (120)            array_sprites_enem:				DS	30 * 4
     212.  00:AA2F  00 (140)            lista_enemigos:					DS	10 * ESTRUCTURA_ENEMIGO
     213.  00:AABB                      ; puntero al array a pintar en VRAM
     214.  00:AABB  00 00               puntero_array_atrib_array_VRAM: DW	0	;ARRAYSPTRIES + 8
     215.  00:AABD                      
     216.  00:AABD                      
     217.  00:AABD                      
     218.  00:AABD                      
     219.  00:AABD                      
     177   00:AABD                      	
     178   00:AABD                      ;;=====================================================
     179   00:AABD                      ;;DEFINICIÓN DE PANTALLAS
     180   00:AABD                      ;;=====================================================		
     181   00:AABD                      	include "pantallas.asm"
       1.  00:AABD                      ;;=====================================================
       2.  00:AABD                      ;;DEFINICIÓN DE PANTALLAS
       3.  00:AABD                      ;;=====================================================		
       4.  00:AABD                      
       5.  00:AABD                      ; bancos 1 y 2 y de pantalla 1 
       6.  00:AABD                      ; se usa un banco común (en este caso el banco 1)
       7.  00:AABD                      ; el mapa afecta al banco 1 y 2
       8.  00:AABD  (021D)              tiles_patrones_nivel0:	incbin "pantallas/nivel0.bank1.til.bin.chr.plet5"
       9.  00:ACDA  (0069)              tiles_color_nivel0:		incbin "pantallas/nivel0.bank1.til.bin.clr.plet5"
      10.  00:AD43  (0035)              tiles_mapa_nivel0:		incbin "pantallas/nivel0.bank01.map.bin.plet5"
      11.  00:AD78                      
      12.  00:AD78  (01B5)              tiles_patrones_nivel1:	incbin "pantallas/nivel1.bank1.til.bin.chr.plet5"
      13.  00:AF2D  (0047)              tiles_color_nivel1:		incbin "pantallas/nivel1.bank1.til.bin.clr.plet5"
      14.  00:AF74  (0035)              tiles_mapa_nivel1:		incbin "pantallas/nivel1.bank01.map.bin.plet5"
      15.  00:AFA9                      
      16.  00:AFA9  (01B5)              tiles_patrones_nivel2:	incbin "pantallas/nivel2.bank1.til.bin.chr.plet5"
      17.  00:B15E  (0047)              tiles_color_nivel2:		incbin "pantallas/nivel2.bank1.til.bin.clr.plet5"
      18.  00:B1A5  (0035)              tiles_mapa_nivel2:		incbin "pantallas/nivel2.bank01.map.bin.plet5"
      19.  00:B1DA                      
      20.  00:B1DA  (01B5)              tiles_patrones_nivel3:	incbin "pantallas/nivel3.bank1.til.bin.chr.plet5"
      21.  00:B38F  (0047)              tiles_color_nivel3:		incbin "pantallas/nivel3.bank1.til.bin.clr.plet5"
      22.  00:B3D6  (0035)              tiles_mapa_nivel3:		incbin "pantallas/nivel3.bank01.map.bin.plet5"
      23.  00:B40B                      
      24.  00:B40B  (01B5)              tiles_patrones_nivel4:	incbin "pantallas/nivel4.bank1.til.bin.chr.plet5"
      25.  00:B5C0  (0047)              tiles_color_nivel4:		incbin "pantallas/nivel4.bank1.til.bin.clr.plet5"
      26.  00:B607  (0035)              tiles_mapa_nivel4:		incbin "pantallas/nivel4.bank01.map.bin.plet5"
      27.  00:B63C                      
      28.  00:B63C  (01B5)              tiles_patrones_nivel5:	incbin "pantallas/nivel5.bank1.til.bin.chr.plet5"
      29.  00:B7F1  (0047)              tiles_color_nivel5:		incbin "pantallas/nivel5.bank1.til.bin.clr.plet5"
      30.  00:B838  (0035)              tiles_mapa_nivel5:		incbin "pantallas/nivel5.bank01.map.bin.plet5"
      31.  00:B86D                      
      32.  00:B86D  (01B5)              tiles_patrones_nivel6:	incbin "pantallas/nivel6.bank1.til.bin.chr.plet5"
      33.  00:BA22  (0047)              tiles_color_nivel6:		incbin "pantallas/nivel6.bank1.til.bin.clr.plet5"
      34.  00:BA69  (0035)              tiles_mapa_nivel6:		incbin "pantallas/nivel6.bank01.map.bin.plet5"
      35.  00:BA9E                      
      36.  00:BA9E                      ; 3º banco que es la parte de puntos, vidas, mapas, etc... es común
      37.  00:BA9E  (014C)              tiles_patrones_marcador:	incbin "pantallas/marcador.til.bin.chr.plet5"
      38.  00:BBEA  (0035)              tiles_color_marcador:		incbin "pantallas/marcador.til.bin.clr.plet5"
      39.  00:BC1F  (0062)              tiles_mapa_marcador:		incbin "pantallas/marcador.map.bin.plet5"
      40.  00:BC81                      
      41.  00:BC81                      ;NOTA: FALTARÍAN PANTALLAS ESPECIALES (POR DEFINIR)
     182   00:BC81                      
     183   00:BC81                      
     184   00:BC81                      	
     185   00:BC81                      END:

    LABELS
-------------------------------------------------
00:000000D8 X GTTRIG
00:000000D5 X GTSTCK
00:0000F3DB   CLIKSW
00:0000013E X RDVDP
00:00000047   WRTVDP
00:0000005C   LDIRVM
00:00000059 X LDIRMV
00:0000005F   CHGMOD
00:00000041 X DISSCR
00:00000044 X ENASCR
00:00000062   CHGCLR
00:0000F3E9   FORCLR
00:0000F3EA   BAKCLR
00:0000F3EB   BDRCLR
00:000000C3   CLS
00:0000F3DF X RG0SAV
00:0000F3E0   RG1SAV
00:0000F3E1 X RG2SAV
00:0000F3E2 X RG3SAV
00:0000F3E3 X RG4SAV
00:0000F3E4 X RG5SAV
00:0000F3E5 X RG6SAV
00:0000F3E6 X RG7SAV
00:0000F3E7 X STATFL
00:00000099   REGEST
00:00000098   REGESCVDP
00:000000A0   PSG_A
00:000000A1   PSG_W
00:000000A2   PSG_R
00:00000000   CHRTBL
00:00001800   TILMAP
00:00001900 X TILMAPBANK1
00:00001B00   SPRART
00:00002000   CLRTBL
00:00003800   SPRTBL
00:00000001 X SI
00:00000000 X NO
00:00000004   LIMCADENCIA
00:00000000 X COLTRASP
00:00000001   COLNEGRO
00:00000002 X COLVERDE
00:00000003 X COLVERCLA
00:00000004 X COLAZULOSC
00:00000005 X COLAZULLA
00:00000006   COLROJOOSC
00:00000007 X COLCYAN
00:00000008   COLROJO
00:00000009 X COLROJOCLA
00:0000000A X COLAMAROSC
00:0000000B X COLAMARCLA
00:0000000C X COLVERDOSC
00:0000000D X COLMAGENTA
00:0000000E X COLGRIS
00:0000000F   COLBLANCO
00:000002F8   POSMAPLIN1
00:000002D8   POSMAPLIN2
00:000002B8   POSMAPLIN3
00:00000298   POSMAPLIN4
00:00000278   POSMAPLIN5
00:00000258   POSMAPLIN6
00:00000238   POSMAPLIN7
00:0000000D   POSCARAMAP
00:00000248   POSVIDAS
00:00000011   POSRELIMAP
00:000002C8   POSRELIQ
00:00000288   POSENERG
00:000002B4   POSNIVEL
00:00000238   POSMAPA
00:000001EE   POSPUERABAJ
00:0000008E   POSPUERARRI
00:000000FC   POSPUERDERE
00:000000E1   POSPUERIZQU
00:000000A3   POSORACION
00:000000A7 X POSCRUZ
00:000000AB   POSAGUA
00:000000AF   POSARMAD
00:000000B3   POSPLANTA
00:000000B7   POSVIDAEXT
00:000000BB   POSBALLESTA
00:00000020   POSORACIONX
00:00000040 X POSCRUZX
00:00000060   POSAGUAX
00:00000080   POSARMADX
00:000000A0   POSPLANTAX
00:000000C0   POSVIDAEXTX
00:000000E0   POSBALLESTAX
00:00000070   POSAYUDASY
00:00000000   INACTIVA
00:00000001   ACTIVA
00:00000001   HABTERMIN
00:00000088   POSANTOR1
00:00000097   POSANTOR2
00:000000C4   MAPLLAMA1
00:000000C5   MAPLLAMA2
00:000000FF   RESETLLAMA
00:00000088   POSESQUEL1
00:00000095   POSESQUEL2
00:000000A9   POSCALAVE1
00:000000B6   POSCALAVE2
00:00000019   RESETESQUEL
00:00000004   RESETESCENAESQUEL
00:00000013   TILEPROTAM
00:00000009   TILEGRISM
00:00000010   TILEMAPROJO
00:0000000F   TILEMAPAMAR
00:0000000E   TILEMAPVERD
00:00000008   NMAXVIDREL
00:00000007   NHABNIVEL
00:000000F8 X MAXENERGIA
00:000000D9   TILEENERG8
00:000000BA   TILEENERG7
00:0000009B   TILEENERG6
00:0000007C   TILEENERG5
00:0000005D   TILEENERG4
00:0000003E   TILEENERG3
00:0000001F   TILEENERG2
00:00000000   TILENEGRO
00:00000000 X LIMPANTIZQ
00:000000FF   LIMPANTDER
00:00000000 X LIMPANTARR
00:00000080   LIMPANTABA
00:00000006 X BASEMAPY
00:00000003 X BASEMAPX
00:0000FD9A X H.KEYI
00:0000FD9F   H.TIMI
00:0000F000   PT3_SETUP
00:0000F001   PT3_MODADDR
00:0000F003   PT3_CrPsPtr
00:0000F005   PT3_SAMPTRS
00:0000F007   PT3_OrnPtrs
00:0000F009   PT3_PDSP
00:0000F00B   PT3_CSP
00:0000F00D   PT3_PSP
00:0000F00F   PT3_PrNote
00:0000F010   PT3_PrSlide
00:0000F012   PT3_AdInPtA
00:0000F014   PT3_AdInPtB
00:0000F016   PT3_AdInPtC
00:0000F018   PT3_LPosPtr
00:0000F01A   PT3_PatsPtr
00:0000F01C   PT3_Delay
00:0000F01D   PT3_AddToEn
00:0000F01E   PT3_Env_Del
00:0000F01F   PT3_ESldAdd
00:0000F021   PT3_NTL3
00:0000F023   VARS
00:0000F023   ChanA
00:0000F040   ChanB
00:0000F05D   ChanC
00:0000F07A   DelyCnt
00:0000F07B   CurESld
00:0000F07D   CurEDel
00:0000F07E   Ns_Base_AddToNs
00:0000F07E   Ns_Base
00:0000F07F   AddToNs
00:0000F080   NT_
00:0000F140   AYREGS
00:0000F140   VT_
00:0000F14E   EnvBase
00:0000F150   VAR0END
00:0000F150   T1_
00:0000F150   T_NEW_1
00:0000F150   T_OLD_1
00:0000F168   T_OLD_2
00:0000F180   T_NEW_3
00:0000F180   T_OLD_3
00:0000F182   T_OLD_0
00:0000F182   T_NEW_0
00:0000F19A   T_NEW_2
00:0000F240   ayFX_MODE
00:0000F241   ayFX_BANK
00:0000F243   ayFX_PRIORITY
00:0000F244   ayFX_POINTER
00:0000F246   ayFX_TONE
00:0000F248   ayFX_NOISE
00:0000F249   ayFX_VOLUME
00:0000F24A   ayFX_CHANNEL
00:00008000   START
00:00008038   loop_principal
00:0000804B X fin_programa_principal
00:0000804B   check_colisiones
00:0000804B X fin_check_colisiones
00:0000804C   inicializa_variables_pruebas
00:0000806E X fin_inicializa_variables_pruebas
00:0000806F X inicializa_niveles
00:00008077   inicializa_niveles.inicia_nivel_0
00:00008084   inicializa_niveles.inicia_nivel_1
00:00008091   inicializa_niveles.inicia_nivel_2
00:0000809E   inicializa_niveles.inicia_nivel_3
00:000080AB   inicializa_niveles.inicia_nivel_4
00:000080B8   inicializa_niveles.inicia_nivel_5
00:000080C5   inicializa_niveles.inicia_nivel_6
00:000080D0 X fin_iniciliza_niveles
00:000080D1   actualiza_marcador_vidas
00:000080D6   loop_marcador_caras_negro
00:000080DB X fin_loop_marcador_caras_negro
00:000080E4   loop_marcador_caras
00:000080E9 X fin_loop_marcador_caras
00:000080E9 X fin_actualiza_marcador_vidas
00:000080EA   actualiza_buffer_reliquias
00:000080F0   loop_buffer_reliquias_negro
00:000080FD   loop_buffer_reliquias
00:00008102 X fin_actualiza_buffer_reliquias
00:00008103   localiza_info_habitacion
00:00008106 X localiza_info_habitacion.situo_columna
00:0000810F X localiza_info_habitacion.situo_fila
00:00008118   localiza_info_habitacion.loop_suma_fila
00:00008120   localiza_info_habitacion.situo_nivel
00:0000812F   localiza_info_habitacion.loop_suma_nivel
00:00008134   localiza_info_habitacion.actualiza_variable_habitacion
00:00008155 X fin_localiza_info_habitacion
00:00008156   terminada_habitacion_recorrida
00:0000816E X fin_terminada_habitacion_recorrida
00:0000816F   suma_A_BC
00:00008174 X fin_suma_A_BC
00:00008175   suma_A_HL
00:0000817A X fin_suma_A_HL
00:0000817B   color_pantalla
00:0000818C X fin_color_pantalla
00:0000818C   sub_preparapantalla
00:0000818C X elimina_clic
00:00008190 X fin_elimina_clic
00:00008190 X limpia_pantalla
00:00008194 X fin_limpia_pantalla
00:0000819A X screen2
00:0000819F X sprites_16_16
00:000081AD X fin_sub_preparapantalla
00:000081AD   pinta_pantalla_completa
00:000081B3 X fin_pinta_pantalla_completa
00:000081B4   pinta_parte_superior_pantalla
00:000081E5   pinta_parte_superior_pantalla.carga_nivel_0
00:00008200   pinta_parte_superior_pantalla.carga_nivel_1
00:0000821B   pinta_parte_superior_pantalla.carga_nivel_2
00:00008236   pinta_parte_superior_pantalla.carga_nivel_3
00:00008251   pinta_parte_superior_pantalla.carga_nivel_4
00:0000826C   pinta_parte_superior_pantalla.carga_nivel_5
00:00008287   pinta_parte_superior_pantalla.carga_nivel_6
00:0000829F   pinta_parte_superior_pantalla.fin_carga_niveles
00:000082CC X fin_pinta_parte_superior_pantalla
00:000082CC   tiles_patrones
00:000082CE   tiles_colores
00:000082D0   tiles_mapa
00:000082D2   pinta_parte_inferior_pantalla
00:000082ED X fin_pinta_parte_inferior_pantalla
00:000082ED   pinta_vidas
00:000082FC X fin_pinta_vidas
00:000082FC   pinta_reliquias
00:0000830B X fin_pinta_reliquias
00:0000830B   pinta_nivel
00:00008317 X fin_pinta_nivel
00:00008317   pinta_tile_suelto
00:00008324 X fin_pinta_tile_suelto
00:00008325   mira_pinta_energia
00:0000832B X pinta_ener
00:0000832B X pinta_ener_tile_8
00:00008337   pinta_ener_tile_8_negro
00:00008338   pinta_ener_tile_7
00:00008342   pinta_ener_tile_7_negro
00:00008343   pinta_ener_tile_6
00:0000834D   pinta_ener_tile_6_negro
00:0000834E   pinta_ener_tile_5
00:00008358   pinta_ener_tile_5_negro
00:00008359   pinta_ener_tile_4
00:00008363   pinta_ener_tile_4_negro
00:00008364   pinta_ener_tile_3
00:0000836E   pinta_ener_tile_3_negro
00:0000836F   pinta_ener_tile_2
00:00008379   pinta_ener_tile_2_negro
00:0000837A   fin_mira_pinta_energia
00:0000837C   pinta_energia
00:0000838B X fin_pinta_energia
00:0000838B   borra_mapa
00:000083E1 X fin_borra_mapa
00:000083E2   posiciona_en_mapa
00:000083E5 X posiciona_en_mapa.sumar_fila
00:0000840F X posiciona_en_mapa.fila_0
00:00008416   posiciona_en_mapa.fila_1
00:0000841D   posiciona_en_mapa.fila_2
00:00008424   posiciona_en_mapa.fila_3
00:0000842B   posiciona_en_mapa.fila_4
00:00008432   posiciona_en_mapa.fila_5
00:00008439 X posiciona_en_mapa.fila_6
00:00008439   posiciona_en_mapa.sumar_columna
00:0000844F   pinta_pos_mapa_vacio
00:00008451   fin_pinta_pos_mapa
00:00008454 X fin_posiciona_en_mapa
00:00008454   efecto_imagen_tira_reliquia
00:00008457   efecto_imagen_tira_reliquia.parpadea_fondo
00:0000846E X fin_efecto_imagen_tira_reliquia
00:0000846E   pinta_array
00:00008489   pinta_array.pa_pinta_fila
00:0000848A   pinta_array.pa_pinta_columnas
00:000084AD X fin_pinta_array
00:000084AE   wordaux1
00:000084B0   wordaux2
00:000084B2   byteaux1
00:000084B3   byteaux2
00:000084B4   inicializa_antorchas
00:000084D5 X fin_inicializa_antorchas
00:000084D6   inicializa_esqueletos
00:000084F7 X fin_inicializa_esqueletos
00:000084F8   pinta_extra_fondo
00:000084FC X pinta_extra_fondo.examina_sihay_antorchas
00:0000850B   pinta_extra_fondo.hayantorchas
00:00008534   pinta_extra_fondo.examina_sihay_esqueletos
00:00008545   pinta_extra_fondo.hayesqueletos
00:0000856E X fin_pinta_extra_fondo
00:0000856F   actualiza_elementos_fondo
00:0000856F X actualiza_elementos_fondo.examina_antorchas
00:0000857D   actualiza_elementos_fondo.examina_esqueletos
00:00008589 X fin_actualiza_elementos_fondo
00:00008589   flip_llamas_antorchas
00:000085A2 X flip_llamas_antorchas.llama_impar
00:000085C3   flip_llamas_antorchas.llama_par
00:000085E2   fin_flip_llamas_antorchas
00:000085E6   flip_calavera_esqueletos
00:00008613 X fin_flip_calavera_esqueletos
00:00008613   var_aux_calavera
00:00008614   actualiza_escena_calavera
00:00008620   actualiza_escena_calavera.decrementa_escenas
00:00008621 X actualiza_escena_calavera.fin_consulta_escena
00:0000862F X fin_actualiza_escena_calavera
00:00008630   array_puerta_arriba
00:00008630 X array_puerta_arriba1
00:00008634 X array_puerta_arriba2
00:00008638 X array_puerta_arriba3
00:0000863C X array_puerta_arriba4
00:00008640 X array_puerta_arriba5
00:00008644   array_puerta_derecha
00:00008644 X array_puerta_derecha1
00:00008647 X array_puerta_derecha2
00:0000864A X array_puerta_derecha3
00:0000864D X array_puerta_derecha4
00:00008650 X array_puerta_derecha5
00:00008653 X array_puerta_derecha6
00:00008656 X array_puerta_derecha7
00:00008659   array_puerta_abajo
00:0000865D   array_puerta_izquierda
00:0000865D X array_puerta_izquierda1
00:00008660 X array_puerta_izquierda2
00:00008663 X array_puerta_izquierda3
00:00008666 X array_puerta_izquierda4
00:00008669 X array_puerta_izquierda5
00:0000866C X array_puerta_izquierda6
00:0000866F X array_puerta_izquierda7
00:00008672 X lista_puertas
00:00008672   puerta_arriba
00:0000867B   puerta_derecha
00:00008684   puerta_abajo
00:0000868D   puerta_izquierda
00:00008696 X datos_puertas
00:00008696   datos_puerta_arriba
00:0000869F   datos_puerta_derecha
00:000086A8   datos_puerta_abajo
00:000086B1   datos_puerta_izquierda
00:000086BA   inicializa_puertas
00:000086E4 X fin_inicializa_puertas
00:000086E5   carga_datos_puerta
00:000086EA X fin_carga_datos_puerta
00:000086EB   accion_puerta_arriba
00:000086EB X fin_accion_puerta_arriba
00:000086EC X accion_puerta_derecha
00:000086EC X fin_accion_puerta_derecha
00:000086ED X accion_puerta_abajo
00:000086ED X fin_accion_puerta_abajo
00:000086EE X accion_puerta_izquierda
00:000086EE X fin_accion_puerta_izquierda
00:000086EF   pinta_puertas
00:0000870C X fin_pinta_puertas
00:0000870D   pinta_puerta_aba
00:0000872F X fin_pinta_puerta_aba
00:0000872F   pinta_puerta_arr
00:00008751 X fin_pinta_puerta_arr
00:00008751   pinta_puerta_der
00:00008773 X fin_pinta_puerta_der
00:00008773   pinta_puerta_izq
00:00008795 X fin_pinta_puerta_izq
00:00008795   carga_patrones_sprites_nivel
00:00008799 X fin_carga_patrones_sprites_nivel
00:00008799   carga_patrones_nivel_comunes
00:000087A5 X fin_carga_patrones_nivel_comunes
00:000087A5 X carga_patrones_sprites_nivel1
00:000087A5 X fin_carga_patrones_sprites
00:000087A6   render_sprites
00:000087B2 X fin_actualiza_array_sprites_vram
00:000087B2   vuelca_resultado_puntomira_array
00:000087D7 X vuelca_resultado_puntomira_array.codigo_color_1
00:000087E0   vuelca_resultado_puntomira_array.codigo_color_2
00:000087E9 X fin_vuelca_resultado_puntomira_array
00:000087E9   check_player
00:00008808 X f
00:00008809   mueve_arriba
00:00008814   mueve_arriba.no_decrementa_y
00:00008815 X fin_mueve_arriba
00:00008816   mueve_derecha
00:00008823   mueve_derecha.no_incrementa_x
00:00008824 X fin_mueve_derecha
00:00008825   mueve_abajo
00:00008832   mueve_abajo.no_incrementa_y
00:00008833 X fin_mueve_abajo
00:00008834   mueve_izquierda
00:0000883F   mueve_izquierda.no_decrementa_x
00:00008840 X fin_mueve_izquierda
00:00008841   mira_disparo
00:00008841 X mira_disparo.mira_boton_pulsado1
00:0000884E X mira_disparo.no_efectua_disparo
00:00008859   mira_disparo.efectua_disparo
00:0000886B   mira_disparo.fin_mira_disparo1
00:0000886C   mira_disparo.mira_boton_pulsado2
00:00008888 X fin_mira_disparo
00:00008888   update_controllers_status
00:000088BF   read_joy_0
00:000088D3   check_8th_keyboard_row
00:000088E1   check_4th_keyboard_row
00:000088EF X inicializa_replayer_efectos_interrupciones
00:00008908 X fin_inicializa_replayer_efectos_interrupciones
00:00008909   subrutina_isr
00:00008912 X fin_subrutina_isr
00:00008912 X subrutinas_sonido
00:00000000   CHNPRM_PsInOr
00:00000001   CHNPRM_PsInSm
00:00000002   CHNPRM_CrAmSl
00:00000003   CHNPRM_CrNsSl
00:00000004   CHNPRM_CrEnSl
00:00000005   CHNPRM_TSlCnt
00:00000006   CHNPRM_CrTnSl
00:00000008   CHNPRM_TnAcc
00:0000000A   CHNPRM_COnOff
00:0000000B   CHNPRM_OnOffD
00:0000000C   CHNPRM_OffOnD
00:0000000D   CHNPRM_OrnPtr
00:0000000F   CHNPRM_SamPtr
00:00000011   CHNPRM_NNtSkp
00:00000012   CHNPRM_Note
00:00000013   CHNPRM_SlToNt
00:00000014   CHNPRM_Env_En
00:00000015   CHNPRM_Flags
00:00000016   CHNPRM_TnSlDl
00:00000017   CHNPRM_TSlStp
00:00000019   CHNPRM_TnDelt
00:0000001B   CHNPRM_NtSkCn
00:0000001C   CHNPRM_Volume
00:0000001D X CHNPRM_Size
00:00000000   AR_TonA
00:00000002   AR_TonB
00:00000004   AR_TonC
00:00000006   AR_Noise
00:00000007   AR_Mixer
00:00000008   AR_AmplA
00:00000009   AR_AmplB
00:0000000A   AR_AmplC
00:0000000B   AR_Env
00:0000000D   AR_EnvTp
00:00008912   CHECKLP
00:00008923 X PT3_MUTE
00:0000892F   PT3_INIT
00:0000896E   PT3_INIT.TP_0
00:0000897A   PT3_INIT.TP_1
00:00008981   PT3_INIT.TP_2
00:000089EF   PT3_INIT.L1
00:000089FC   PT3_INIT.L2
00:00008A00 X PT3_INIT.L3
00:00008A27   PT3_INIT.CORR_1
00:00008A35   PT3_INIT.CORR_2
00:00008A3C   PT3_INIT.TC_EXIT
00:00008A47   PT3_INIT.INITV1
00:00008A4F   PT3_INIT.INITV2
00:00008A63   PT3_INIT.INITV3
00:00008A67   PD_OrSm
00:00008A71   PD_SAM
00:00008A72   PD_SAM_
00:00008A88   PD_VOL
00:00008A91   PD_EOff
00:00008A99   PD_SorE
00:00008AA3   PD_ENV
00:00008AA8   PD_ORN
00:00008AAD   PD_ESAM
00:00008ABA   PTDECOD
00:00008AC9   PD_LOOP
00:00008ACC   PD_LP2
00:00008AF9   PD_NOIS
00:00008AFE   PD_REL
00:00008B04   PD_NOTE
00:00008B0C   PD_RES
00:00008B1E   PD_FIN
00:00008B25   C_PORTM
00:00008B70   C_PORTM.NOSIG
00:00008B7A   SET_STP
00:00008B86   C_GLISS
00:00008B99   C_SMPOS
00:00008B9F   C_ORPOS
00:00008BA5   C_VIBRT
00:00008BBD   C_ENGLS
00:00008BCF   C_DELAY
00:00008BD5   SETENV
00:00008BF0   C_NOP
00:00008BF1   SETORN
00:00008C0A   SPCCOMS
00:00008C2A   CHREGS
00:00008C4D   CHREGS.CH_ORPS
00:00008C58   CHREGS.CH_NTP
00:00008C5E   CHREGS.CH_NOK
00:00008C79   CHREGS.CH_SMPS
00:00008C8F   CHREGS.CH_NOAC
00:00008CD6   CHREGS.CH_STPP
00:00008CEB   CHREGS.CH_AMP
00:00008CFD   CHREGS.CH_AMIN
00:00008D02   CHREGS.CH_SVAM
00:00008D05   CHREGS.CH_NOAM
00:00008D0E   CHREGS.CH_APOS
00:00008D14   CHREGS.CH_VOL
00:00008D1F X CHREGS.CH_ENV
00:00008D26   CHREGS.CH_NOEN
00:00008D40   CHREGS.NO_ENAC
00:00008D47   CHREGS.NO_ENSL
00:00008D55   CHREGS.CH_MIX
00:00008D59   CHREGS.CH_EXIT
00:00008D78   CHREGS.CH_ONDL
00:00008D7C   PT3_PLAY
00:00008DB0   PT3_PLAY.PLNLP
00:00008DD7   PT3_PLAY.PL1A
00:00008DE2   PT3_PLAY.PL1B
00:00008DF7   PT3_PLAY.PL1C
00:00008E0C   PT3_PLAY.PL1D
00:00008E12   PT3_PLAY.PL2
00:00008E74   PT3_ROUT
00:00008E75   ROUT_A0
00:00008E81   ROUT_A0.LOUT
00:00008E95   NT_DATA
00:00008EA5   T_
00:00008EA5   TCOLD_0
00:00008EB1   TCNEW_1
00:00008EB1   TCOLD_1
00:00008EB3   TCOLD_2
00:00008EC5   TCNEW_3
00:00008EC6   TCOLD_3
00:00008ECF   TCNEW_0
00:00008EDA   TCNEW_2
00:00008EE5   EMPTYSAMORN
00:00008EE9   T_PACK
00:00000000 X AYFXRELATIVE
00:00008F1E   ayFX_SETUP
00:00008F2A   ayFX_END
00:00008F30   ayFX_INIT
00:00008F41   ayFX_INIT.CHECK_PRI
00:00008F62   ayFX_INIT.INIT_END
00:00008F66   ayFX_PLAY
00:00008F7A   ayFX_PLAY.TAKECB
00:00008F8B   ayFX_PLAY.CHECK_NN
00:00008F98   ayFX_PLAY.SETPOINTER
00:00008FAC   ayFX_PLAY.SETMASKS
00:00008FBA X ayFX_PLAY.CHK1
00:00008FBC X ayFX_PLAY.PLAY_C
00:00008FC9   ayFX_PLAY.CHK2
00:00008FCE X ayFX_PLAY.PLAY_B
00:00008FDB   ayFX_PLAY.CHK3
00:00008FDE X ayFX_PLAY.PLAY_A
00:00008FEB   ayFX_PLAY.SETMIXER
00:00008FFB   song
00:00009963   sfx_bank
00:000099AE   inicializa_ayudas
00:00009A15 X fin_resetea_ayudas
00:00009A16   carga_datos_ayuda
00:00009A1B X fin_carga_datos_ayuda
00:00009A1C   pinta_obj_ayuda
00:00009A20 X pinta_obj_ayuda.dibujoon
00:00009A2C   pinta_obj_ayuda.dibujooff
00:00009A35   pinta_obj_ayuda.param_wordaux2
00:00009A41 X pinta_obj_ayuda.filasycols
00:00009A4C X fin_pinta_obj_ayuda
00:00009A4C   pinta_ayudas_habitacion
00:00009A4C X pinta_ayudas_habitacion.examina_oracion
00:00009A5D   pinta_ayudas_habitacion.examina_cruz
00:00009A6E   pinta_ayudas_habitacion.examina_aguabendita
00:00009A7F   pinta_ayudas_habitacion.examina_armadura
00:00009A90   pinta_ayudas_habitacion.examina_planta
00:00009AA1   pinta_ayudas_habitacion.examina_vidaextra
00:00009AB2   pinta_ayudas_habitacion.examina_ballesta
00:00009AC1 X fin_pinta_ayudas_habitacion
00:00009AC2   accion_oracion
00:00009AC2 X fin_accion_oracion
00:00009AC3   accion_cruz
00:00009AC3 X fin_accion_cruz
00:00009AC4   accion_agua
00:00009AC4 X fin_accion_agua
00:00009AC5   accion_armadura
00:00009AC5 X fin_accion_armadura
00:00009AC6   accion_planta
00:00009AC6 X fin_accion_planta
00:00009AC7   accion_vidaextra
00:00009AC7 X fin_accion_vidaextra
00:00009AC8 X accion_ballesta
00:00009AC8 X fin_accion_ballesta
00:00009AC9   depack_VRAM
00:00009AF6   literal
00:00009AFB   loop
00:00009B04 X getlen
00:00009B0A   lus
00:00009B27   lenok
00:00009B34   mode7
00:00009B3A   mode6
00:00009B40   mode5
00:00009B46   mode4
00:00009B4C   mode3
00:00009B52   mode2
00:00009B62   offsok
00:00009B6D   offsok.loop
00:00009B8F   getbit
00:00009B93   getbitexx
00:00009B99   Depack_out
00:00009B9B   modes
00:00000000 X ESTRUCTURA_PUNTOMIRA.posx
00:00000001 X ESTRUCTURA_PUNTOMIRA.posy
00:00000002 X ESTRUCTURA_PUNTOMIRA.escena
00:00000003 X ESTRUCTURA_PUNTOMIRA.velocidad
00:00000004 X ESTRUCTURA_PUNTOMIRA.boton2_pressed
00:00000005 X ESTRUCTURA_PUNTOMIRA.cadencia
00:00000006 X ESTRUCTURA_PUNTOMIRA.pm_aux1
00:00000007 X ESTRUCTURA_PUNTOMIRA.pm_aux2
00:00000008 X ESTRUCTURA_PUNTOMIRA.pm_aux3
00:00000009 X ESTRUCTURA_PUNTOMIRA.pm_aux4
00:0000000A X ESTRUCTURA_PUNTOMIRA.pm_aux5
00:0000000B X ESTRUCTURA_PUNTOMIRA.pm_aux6
00:0000000C X ESTRUCTURA_PUNTOMIRA.pm_aux7
00:0000000D X ESTRUCTURA_PUNTOMIRA.pm_aux8
00:0000000E X ESTRUCTURA_PUNTOMIRA.pm_aux9
00:0000000F X ESTRUCTURA_PUNTOMIRA.pm_aux10
00:00000010 X ESTRUCTURA_PUNTOMIRA
00:00000000 X ESTRUCTURA_ENEMIGO.tipo
00:00000001 X ESTRUCTURA_ENEMIGO.posx
00:00000002 X ESTRUCTURA_ENEMIGO.posy
00:00000003 X ESTRUCTURA_ENEMIGO.color
00:00000004 X ESTRUCTURA_ENEMIGO.escena
00:00000005 X ESTRUCTURA_ENEMIGO.contador_siguiente_escena
00:00000006 X ESTRUCTURA_ENEMIGO.reset_contador
00:00000007 X ESTRUCTURA_ENEMIGO.dano
00:00000008 X ESTRUCTURA_ENEMIGO.energia
00:00000009 X ESTRUCTURA_ENEMIGO.ver_hor
00:0000000A X ESTRUCTURA_ENEMIGO.manejador_dibujo
00:0000000C X ESTRUCTURA_ENEMIGO.en_aux3
00:0000000D X ESTRUCTURA_ENEMIGO.en_aux4
00:0000000E   ESTRUCTURA_ENEMIGO
00:00000000 X ESTRUCTURA_AYUDA.activo
00:00000001 X ESTRUCTURA_AYUDA.postilemem_nousado
00:00000003 X ESTRUCTURA_AYUDA.postilemem_usado
00:00000005 X ESTRUCTURA_AYUDA.pospantalla
00:00000006 X ESTRUCTURA_AYUDA.posx
00:00000007 X ESTRUCTURA_AYUDA.posy
00:00000008 X ESTRUCTURA_AYUDA.puntero_accion
00:0000000A X ESTRUCTURA_AYUDA.ayu_aux1
00:0000000B X ESTRUCTURA_AYUDA.ayu_aux2
00:0000000C X ESTRUCTURA_AYUDA.ayu_aux3
00:0000000D X ESTRUCTURA_AYUDA.ayu_aux4
00:0000000E X ESTRUCTURA_AYUDA.ayu_aux5
00:0000000F X ESTRUCTURA_AYUDA.ayu_aux6
00:00000010   ESTRUCTURA_AYUDA
00:00000000 X ESTRUCTURA_ANTORCHA.activo
00:00000001 X ESTRUCTURA_ANTORCHA.postilemem_antor1
00:00000003 X ESTRUCTURA_ANTORCHA.pospantalla_antor1
00:00000004 X ESTRUCTURA_ANTORCHA.pospantalla_antor2
00:00000005 X ESTRUCTURA_ANTORCHA.escena
00:00000006 X ESTRUCTURA_ANTORCHA.cont_sig_escena
00:00000007   ESTRUCTURA_ANTORCHA
00:00000000 X ESTRUCTURA_ESQUELETO.activo
00:00000001 X ESTRUCTURA_ESQUELETO.postilemem_antor1
00:00000003 X ESTRUCTURA_ESQUELETO.pospantalla_esquel1
00:00000004 X ESTRUCTURA_ESQUELETO.pospantalla_esquel2
00:00000005   ESTRUCTURA_ESQUELETO.escena
00:00000006   ESTRUCTURA_ESQUELETO.cont_sig_escena
00:00000007   ESTRUCTURA_ESQUELETO
00:00000000 X ESTRUCTURA_PUERTA.activo
00:00000001 X ESTRUCTURA_PUERTA.posx
00:00000002 X ESTRUCTURA_PUERTA.posy
00:00000003 X ESTRUCTURA_PUERTA.radiox
00:00000004 X ESTRUCTURA_PUERTA.radioy
00:00000005 X ESTRUCTURA_PUERTA.accion
00:00000007   ESTRUCTURA_PUERTA.tiles_puerta
00:00000009   ESTRUCTURA_PUERTA
00:00009BA9 X sprites_pantantalla
00:00009BA9   sprites_comunes
00:00009BA9 X sprite_punto_mira_1
00:00009BC9 X sprite_punto_mira_2
00:00009BE9 X sprite_punto_mira_1_mejorado
00:00009C09 X sprite_punto_mira_2_mejorado
00:00009C29 X sprite_explosion_1
00:00009C49 X sprite_explosion_2
00:00009C69   fin_sprites_comunes
00:00009C69 X sprite_arana1_1
00:00009C89 X sprite_arana1_2
00:00009CA9 X sprite_murcielago1_1
00:00009CC9 X sprite_murcielago1_2
00:00009CE9 X sprite_serpiente1_1
00:00009D09 X sprite_serpiente1_2
00:00009D29 X sprite_serpiente2_1
00:00009D49 X sprite_serpiente2_2
00:00009D69 X sprite_zombi1_1_1
00:00009D89 X sprite_zombi1_2_1
00:00009DA9 X sprite_zombi1_3_1
00:00009DC9 X sprite_zombi1_4_1
00:00009DE9 X sprite_zombi1_1_2
00:00009E09 X sprite_zombi1_2_2
00:00009E29 X sprite_zombi1_3_2
00:00009E49 X sprite_zombi1_4_2
00:00009E69 X sprite_zombi2_1_1
00:00009E89 X sprite_zombi2_2_1
00:00009EA9 X sprite_zombi2_3_1
00:00009EC9 X sprite_zombi2_4_1
00:00009EE9 X sprite_zombi2_1_2
00:00009F09 X sprite_zombi2_2_2
00:00009F29 X sprite_zombi2_3_2
00:00009F49 X sprite_zombi2_4_2
00:00009F69 X sprite_caballero1_1_1
00:00009F89 X sprite_caballero1_2_1
00:00009FA9 X sprite_caballero1_3_1
00:00009FC9 X sprite_caballero1_4_1
00:00009FE9 X sprite_caballero1_1_2
00:0000A009 X sprite_caballero1_2_2
00:0000A029 X sprite_caballero1_3_2
00:0000A049 X sprite_caballero1_4_2
00:0000A069 X sprite_caballero2_1_1
00:0000A089 X sprite_caballero2_2_1
00:0000A0A9 X sprite_caballero2_3_1
00:0000A0C9 X sprite_caballero2_4_1
00:0000A0E9 X sprite_caballero2_1_2
00:0000A109 X sprite_caballero2_2_2
00:0000A129 X sprite_caballero2_3_2
00:0000A149 X sprite_caballero2_4_2
00:0000A169 X sprite_llama1_1
00:0000A189 X sprite_llama2_1
00:0000A1A9 X sprite_llama1_2
00:0000A1C9 X sprite_llama2_2
00:0000A1E9 X sprite_fantasma1_1
00:0000A209 X sprite_fantasma2_1
00:0000A229 X sprite_fantasma1_2
00:0000A249 X sprite_fantasma2_2
00:0000A269 X sprite_magia1_1
00:0000A289 X sprite_magia2_1
00:0000A2A9 X sprite_magia1_2
00:0000A2C9 X sprite_magia2_2
00:0000A2E9 X sprite_beholder1_1
00:0000A309 X sprite_beholder2_1
00:0000A329 X sprite_beholder3_1
00:0000A349 X sprite_beholder4_1
00:0000A369 X sprite_beholder1_2
00:0000A389 X sprite_beholder2_2
00:0000A3A9 X sprite_beholder3_2
00:0000A3C9 X sprite_beholder4_2
00:0000A3E9 X sprite_vampiro1_1
00:0000A409 X sprite_vampiro2_1
00:0000A429 X sprite_vampiro1_2
00:0000A449 X sprite_vampiro2_2
00:0000A469 X sprite_manoizq1
00:0000A489 X sprite_manoizq2
00:0000A4A9 X sprite_manoizq3
00:0000A4C9 X sprite_manoder1
00:0000A4E9 X sprite_manoder2
00:0000A509 X sprite_manoder3
00:0000A529   habitacion_actual
00:0000A52A   habitacion_extras
00:0000A52B   habitacion_actual_puntero
00:0000A52D   is_habitacion_terminada
00:0000A52E   habitaciones_juego
00:0000A52E   habitaciones_nivel0
00:0000A59E   habitaciones_nivel1
00:0000A60E   habitaciones_nivel2
00:0000A67E   habitaciones_nivel3
00:0000A6EE   habitaciones_nivel4
00:0000A75E   habitaciones_nivel5
00:0000A7CE   habitaciones_nivel6
00:0000A83E   color_base
00:0000A841   color_bomba1
00:0000A844   color_bomba2
00:0000A847 X prota
00:0000A847   prota.posx
00:0000A848   prota.posy
00:0000A849   prota.escena
00:0000A84A X prota.velocidad
00:0000A84B X prota.boton2_pressed
00:0000A84C   prota.cadencia
00:0000A84D X prota.pm_aux1
00:0000A84E X prota.pm_aux2
00:0000A84F X prota.pm_aux3
00:0000A850 X prota.pm_aux4
00:0000A851 X prota.pm_aux5
00:0000A852 X prota.pm_aux6
00:0000A853 X prota.pm_aux7
00:0000A854 X prota.pm_aux8
00:0000A855 X prota.pm_aux9
00:0000A856 X prota.pm_aux10
00:0000A857   prota_nivel
00:0000A858   prota_vidas
00:0000A859   prota_reliquias
00:0000A85A   prota_pos_mapx
00:0000A85B   prota_pos_mapy
00:0000A85C   prota_energia
00:0000A85D   array_aux_vidas
00:0000A865   array_aux_reliquias
00:0000A86D   array_aux_energia
00:0000A874   ultimo_pos_array_aux_energia
00:0000A875   array_aux_mapa_limpiar
00:0000A87C   elemento_pintar_mapa
00:0000A87D X lista_ayudas
00:0000A87D   ayuda_oracion
00:0000A88D   ayuda_cruz
00:0000A89D   ayuda_aguabendita
00:0000A8AD   ayuda_armadura
00:0000A8BD   ayuda_planta
00:0000A8CD   ayuda_vidaextra
00:0000A8DD   ayuda_ballesta
00:0000A8ED X datos_oracion
00:0000A8F7   datos_cruz
00:0000A901   datos_aguabendita
00:0000A912   datos_armadura
00:0000A923   datos_planta
00:0000A934   datos_vidaextra
00:0000A945   datos_ballesta
00:0000A956 X array_ayudas
00:0000A956   array_oracionon
00:0000A958 X array_oracionon1
00:0000A95A   array_oracionoff
00:0000A95C X array_oracionoff1
00:0000A95E   array_cruzon
00:0000A960 X array_cruzon1
00:0000A962   array_cruzoff
00:0000A964 X array_cruzoff1
00:0000A966   array_aguaon
00:0000A968 X array_aguaon1
00:0000A96A   array_aguaoff
00:0000A96C X array_aguaoff1
00:0000A96E   array_armaduraon
00:0000A970 X array_armaduraon1
00:0000A972   array_armaduraoff
00:0000A974 X array_armaduraoff1
00:0000A976   array_plantaon
00:0000A978 X array_plantaon1
00:0000A97A   array_plantaoff
00:0000A97C X array_plantaoff1
00:0000A97E   array_extraon
00:0000A980 X array_extraon1
00:0000A982   array_extraoff
00:0000A984 X array_extraoff1
00:0000A986   array_ballestaon
00:0000A988 X array_ballestaon1
00:0000A98A   array_ballestaoff
00:0000A98C X array_ballestaoff1
00:0000A98E   antorchas
00:0000A995   array_antorcha
00:0000A998   esqueletos
00:0000A99F   array_esqueleto
00:0000A9AB   lista_escenas_calavera
00:0000A9AF   array_sprites
00:0000A9AF   array_sprites_pm
00:0000A9B7 X array_sprites_enem
00:0000AA2F X lista_enemigos
00:0000AABB X puntero_array_atrib_array_VRAM
00:0000AABD   tiles_patrones_nivel0
00:0000ACDA   tiles_color_nivel0
00:0000AD43   tiles_mapa_nivel0
00:0000AD78   tiles_patrones_nivel1
00:0000AF2D   tiles_color_nivel1
00:0000AF74   tiles_mapa_nivel1
00:0000AFA9   tiles_patrones_nivel2
00:0000B15E   tiles_color_nivel2
00:0000B1A5   tiles_mapa_nivel2
00:0000B1DA   tiles_patrones_nivel3
00:0000B38F   tiles_color_nivel3
00:0000B3D6   tiles_mapa_nivel3
00:0000B40B   tiles_patrones_nivel4
00:0000B5C0   tiles_color_nivel4
00:0000B607   tiles_mapa_nivel4
00:0000B63C   tiles_patrones_nivel5
00:0000B7F1   tiles_color_nivel5
00:0000B838   tiles_mapa_nivel5
00:0000B86D   tiles_patrones_nivel6
00:0000BA22   tiles_color_nivel6
00:0000BA69   tiles_mapa_nivel6
00:0000BA9E   tiles_patrones_marcador
00:0000BBEA   tiles_color_marcador
00:0000BC1F   tiles_mapa_marcador
00:0000BC81   END


 Output: t4.out
-------------------------------------------------

 Page: 00
  Org: 00008000  Size: *  Used: 00000000

    No output

 Output: t4.bin
-------------------------------------------------

 Page: 00
  Org: 00008000  Size: *  Used: 00003C88

   Address   Length Align   Label
   00008000   15496         START
