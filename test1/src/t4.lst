Sjasm Z80 Assembler v0.42c - www.xl2s.tk             [2021.09.05 - 16:58:04]

t4.asm
Errors: 0

       1   00:0000                      	OUTPUT	"t4.bin"
       2   00:8000                      	
       3   00:8000                      ;;=====================================================
       4   00:8000                      ;;DEFINICIÓN DE CONSTANTES
       5   00:8000                      ;;=====================================================	
       6   00:8000                      	include "constantes.asm"
       1.  00:8000                      ;;=====================================================
       2.  00:8000                      ;; FICHERO constantes.asm
       3.  00:8000                      ;;=====================================================
       4.  00:8000                      
       5.  00:8000                      ;;ETIQUETAS/CONSTANTES BIOS TECLADO
       6.  00:8000  (00:00D8)           GTTRIG		equ		#00D8	;Returns current trigger status
       7.  00:8000  (00:00D5)           GTSTCK		equ		#00D5	;Returns the joystick/cursors status
       8.  00:8000  (00:F3DB)           CLIKSW		equ		#F3DB	;deshabilita el sonido de clic cuando se pulsa una tecla
       9.  00:8000                      
      10.  00:8000                      ;;ETIQUETAS/CONSTANTES BIOS VDP
      11.  00:8000  (00:013E)           RDVDP		equ		#013E	;lee registro status VDP
      12.  00:8000  (00:0047)           WRTVDP		equ		#0047	;escribe registros del VDP
      13.  00:8000  (00:005C)           LDIRVM		equ		#005C	;RAM/ROM -> VRAM
      14.  00:8000  (00:0059)           LDIRMV		equ		#0059	;VRAM -> RAM
      15.  00:8000  (00:005F)           CHGMOD		equ		#005F	;cambia modo pantalla (screen mode)
      16.  00:8000  (00:0041)           DISSCR  	equ		#0041	;desactiva pantanlla
      17.  00:8000  (00:0044)           ENASCR  	equ		#0044	;activa pantalla
      18.  00:8000  (00:0062)           CHGCLR  	equ		#0062	;cambia color de pantalla (toca A y direcciones)
      19.  00:8000  (00:F3E9)           FORCLR		equ		#F3E9	;zona memoria color foreground
      20.  00:8000  (00:F3EA)           BAKCLR  	equ		#F3EA	;zona memoria color background
      21.  00:8000  (00:F3EB)           BDRCLR 		equ		#F3EB	;zona memoria bordercolor
      22.  00:8000  (00:00C3)           CLS			equ		#00C3	;limpia pantalla (necesita A=0)
      23.  00:8000                      
      24.  00:8000                      ;;ETIQUETAS/CONSTANTES REGISTROS VDP
      25.  00:8000  (00:F3DF)           RG0SAV		equ		#F3DF	;Mirror of VDP register 0 (Basic: VDP(0))
      26.  00:8000  (00:F3E0)           RG1SAV		equ		#F3E0	;Mirror of VDP register 1 (Basic: VDP(1))
      27.  00:8000  (00:F3E1)           RG2SAV		equ		#F3E1	;Mirror of VDP register 2 (Basic: VDP(2))
      28.  00:8000  (00:F3E2)           RG3SAV		equ		#F3E2	;Mirror of VDP register 3 (Basic: VDP(3))
      29.  00:8000  (00:F3E3)           RG4SAV		equ		#F3E3	;Mirror of VDP register 4 (Basic: VDP(4))
      30.  00:8000  (00:F3E4)           RG5SAV		equ		#F3E4	;Mirror of VDP register 5 (Basic: VDP(5))
      31.  00:8000  (00:F3E5)           RG6SAV		equ		#F3E5	;Mirror of VDP register 6 (Basic: VDP(6))
      32.  00:8000  (00:F3E6)           RG7SAV		equ		#F3E6	;Mirror of VDP register 7 (Basic: VDP(7))
      33.  00:8000  (00:F3E7)           STATFL		equ		#F3E7	;Mirror of VDP(8) status register (S#0)
      34.  00:8000                      
      35.  00:8000  (00:0099)           REGEST		equ		#0099	;registro de estado para escribir directamente en VRAM
      36.  00:8000  (00:0098)           REGESCVDP	equ		#0098	;registro donde escribir valor para VRAM
      37.  00:8000                      
      38.  00:8000                      ;;ETIQUETAS/CONSTANTES REGISTROS PSG (PARA JOYSTICK)
      39.  00:8000  (00:00A0)           PSG_A  equ  0a0h  ;reg address
      40.  00:8000  (00:00A1)           PSG_W  equ  0a1h  ;reg data WR
      41.  00:8000  (00:00A2)           PSG_R  equ  0a2h  ;reg data
      42.  00:8000                      
      43.  00:8000                      
      44.  00:8000                      ;;ETIQUETAS DE ZONAS DE MEMORIA DE LA VPD (MSX1)
      45.  00:8000  (00:0000)           CHRTBL		equ		#0000
      46.  00:8000  (00:1800)           TILMAP		equ		#1800
      47.  00:8000  (00:1900)           TILMAPBANK1 equ		#1900
      48.  00:8000  (00:1B00)           SPRART		equ		#1B00
      49.  00:8000  (00:2000)           CLRTBL		equ		#2000
      50.  00:8000  (00:3800)           SPRTBL		equ		#3800
      51.  00:8000                      
      52.  00:8000                      
      53.  00:8000                      ;;ETIQUETAS ESTANDAR PARA DAR MÁS CLARIDAD AL CODIGO
      54.  00:8000  (00:0001)           SI			equ		1
      55.  00:8000  (00:0000)           NO			equ		0
      56.  00:8000  (00:0004)           LIMCADENCIA equ		4	;nº de veces que se ejecutará el disparo antes de ejecutar un disparo real (porque cuando se pulsa la tecl dispara 3 ó 4 veces de rápido que va)
      57.  00:8000                      ;hay que estudiar si 3 es un nº mejor
      58.  00:8000                      
      59.  00:8000                      
      60.  00:8000                      
      61.  00:8000                      ;;PALETA DE COLORES DEL MSX
      62.  00:8000  (00:0000)           COLTRASP	equ		0
      63.  00:8000  (00:0001)           COLNEGRO	equ		1
      64.  00:8000  (00:0002)           COLVERDE	equ		2
      65.  00:8000  (00:0003)           COLVERCLA	equ		3
      66.  00:8000  (00:0004)           COLAZULOSC	equ		4
      67.  00:8000  (00:0005)           COLAZULLA	equ		5
      68.  00:8000  (00:0006)           COLROJOOSC	equ		6
      69.  00:8000  (00:0007)           COLCYAN		equ		7
      70.  00:8000  (00:0008)           COLROJO		equ		8
      71.  00:8000  (00:0009)           COLROJOCLA	equ		9
      72.  00:8000  (00:000A)           COLAMAROSC	equ		10
      73.  00:8000  (00:000B)           COLAMARCLA	equ		11
      74.  00:8000  (00:000C)           COLVERDOSC	equ		12
      75.  00:8000  (00:000D)           COLMAGENTA	equ		13
      76.  00:8000  (00:000E)           COLGRIS		equ		14
      77.  00:8000  (00:000F)           COLBLANCO	equ		15
      78.  00:8000                      
      79.  00:8000                      
      80.  00:8000                      
      81.  00:8000                      ;;ETIQUETAS ESPECIFICAS PARA DAR MÁS CLARIDAD AL CODIGO (relacionadas con posiciones en mapa vdp)
      82.  00:8000  (00:02F8)           POSMAPLIN1  equ		#02F8
      83.  00:8000  (00:02D8)           POSMAPLIN2  equ		#02D8
      84.  00:8000  (00:02B8)           POSMAPLIN3  equ		#02B8
      85.  00:8000  (00:0298)           POSMAPLIN4  equ		#0298
      86.  00:8000  (00:0278)           POSMAPLIN5  equ		#0278
      87.  00:8000  (00:0258)           POSMAPLIN6  equ		#0258
      88.  00:8000  (00:0238)           POSMAPLIN7  equ		#0238
      89.  00:8000                      
      90.  00:8000  (00:000D)           POSCARAMAP	equ		#000D
      91.  00:8000  (00:0248)           POSVIDAS	equ		#0248
      92.  00:8000  (00:0011)           POSRELIMAP	equ		#0011
      93.  00:8000  (00:02C8)           POSRELIQ	equ		#02C8
      94.  00:8000  (00:0288)           POSENERG	equ		#0288
      95.  00:8000  (00:02B4)           POSNIVEL	equ		#02B4
      96.  00:8000  (00:0238)           POSMAPA		equ 	#0238
      97.  00:8000                      
      98.  00:8000  (00:01EE)           POSPUERABAJ equ		#01EE
      99.  00:8000  (00:008E)           POSPUERARRI equ		#008E
     100.  00:8000  (00:00FC)           POSPUERDERE equ		#00FC
     101.  00:8000  (00:00E1)           POSPUERIZQU equ		#00E1
     102.  00:8000                      
     103.  00:8000  (00:0000)           ORACIONON	equ		0
     104.  00:8000  (00:0004)           ORACIONOFF  equ		4
     105.  00:8000  (00:0008)           CRUZON		equ		8
     106.  00:8000  (00:000C)           CRUZOFF		equ		12
     107.  00:8000  (00:0010)           AGUAON		equ		16
     108.  00:8000  (00:0014)           AGUAOFF		equ		20
     109.  00:8000  (00:0018)           ARMADON		equ		24
     110.  00:8000  (00:001C)           ARMADOFF	equ		28
     111.  00:8000  (00:0020)           PLANTAON	equ		32
     112.  00:8000  (00:0024)           PLANTAOFF	equ		36
     113.  00:8000  (00:0028)           VIDAEXTON	equ		40
     114.  00:8000  (00:002C)           VIDAEXTOFF	equ		44
     115.  00:8000  (00:0030)           BALLESON	equ		48
     116.  00:8000  (00:0034)           BALLESOFF	equ		52
     117.  00:8000                      
     118.  00:8000                      ;;ETIQUETAS ESPECIFICAS PARA DAR MÁS CLARIDAD AL CODIGO (relacionadas con posiciones en en el banco de memoria)
     119.  00:8000  (00:0013)           TILEPROTAM  equ		19		;tile del prota para pintar en mapa
     120.  00:8000  (00:0009)           TILEGRISM	equ		9		;tile gris que representa vacio (por donde el prota va pasando)
     121.  00:8000  (00:0010)           TILEMAPROJO equ		16
     122.  00:8000  (00:000F)           TILEMAPAMAR equ		15
     123.  00:8000  (00:000E)           TILEMAPVERD equ		14
     124.  00:8000                      
     125.  00:8000                      
     126.  00:8000                      ;;ETIQUETAS ESPECIFICAS PARA DAR MÁS CLARIDAD AL CODIGO (generales)
     127.  00:8000  (00:0008)           NMAXVIDREL	equ		8		;el número máximo de vidas y de reliquias es de 8
     128.  00:8000  (00:0007)           NHABNIVEL	equ		7
     129.  00:8000  (00:00F8)           MAXENERGIA  equ		248
     130.  00:8000  (00:00D9)           TILEENERG8  equ		217
     131.  00:8000  (00:00BA)           TILEENERG7  equ		186
     132.  00:8000  (00:009B)           TILEENERG6  equ		155
     133.  00:8000  (00:007C)           TILEENERG5  equ		124
     134.  00:8000  (00:005D)           TILEENERG4  equ		93
     135.  00:8000  (00:003E)           TILEENERG3  equ		62
     136.  00:8000  (00:001F)           TILEENERG2  equ		31
     137.  00:8000  (00:0000)           TILENEGRO	equ		0
     138.  00:8000                      
     139.  00:8000                      ;limites
     140.  00:8000  (00:0000)           LIMPANTIZQ  equ		0
     141.  00:8000  (00:00FF)           LIMPANTDER  equ		255
     142.  00:8000  (00:0000)           LIMPANTARR  equ		0
     143.  00:8000  (00:0080)           LIMPANTABA  equ		128
     144.  00:8000                      
     145.  00:8000                      
     146.  00:8000                      ;matriz de 7x7 empieza en 0, y fila y x col, cuento desde esquina sup izq
     147.  00:8000  (00:0006)           BASEMAPY	equ		6
     148.  00:8000  (00:0003)           BASEMAPX	equ		3
     149.  00:8000                      
     150.  00:8000                      
     151.  00:8000                      
     152.  00:8000                      ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
     153.  00:8000                      ;; CONSTANTES PARA INTERRUPCIONES
     154.  00:8000                      ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
     155.  00:8000  (00:FD9A)           H.KEYI		equ     	#FD9A
     156.  00:8000  (00:FD9F)           H.TIMI	 	equ     	#FD9F
     157.  00:8000                      
     158.  00:8000                      
     159.  00:8000                      ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
     160.  00:8000                      ;; CONSTANTES PARA SONIDO 
     161.  00:8000                      ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
     162.  00:8000                      
     163.  00:8000  (F000)              	map		#f000
     164.  00:8000                      
     165.  00:8000                      ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;PT3 REPLAYER
     166.  00:8000  (00:F000)           PT3_SETUP:		#1	;set bit0 to 1, if you want to play without looping
     167.  00:8000                      					;bit7 is set each time, when loop point is passed
     168.  00:8000  (00:F001)           PT3_MODADDR:	#2
     169.  00:8000  (00:F003)           PT3_CrPsPtr:	#2
     170.  00:8000  (00:F005)           PT3_SAMPTRS:	#2
     171.  00:8000  (00:F007)           PT3_OrnPtrs:	#2
     172.  00:8000  (00:F009)           PT3_PDSP:		#2
     173.  00:8000  (00:F00B)           PT3_CSP:		#2
     174.  00:8000  (00:F00D)           PT3_PSP:		#2
     175.  00:8000  (00:F00F)           PT3_PrNote:		#1
     176.  00:8000  (00:F010)           PT3_PrSlide:	#2
     177.  00:8000  (00:F012)           PT3_AdInPtA:	#2
     178.  00:8000  (00:F014)           PT3_AdInPtB:	#2
     179.  00:8000  (00:F016)           PT3_AdInPtC:	#2
     180.  00:8000  (00:F018)           PT3_LPosPtr:	#2
     181.  00:8000  (00:F01A)           PT3_PatsPtr:	#2
     182.  00:8000  (00:F01C)           PT3_Delay:		#1
     183.  00:8000  (00:F01D)           PT3_AddToEn:	#1
     184.  00:8000  (00:F01E)           PT3_Env_Del:	#1
     185.  00:8000  (00:F01F)           PT3_ESldAdd:	#2
     186.  00:8000  (00:F021)           PT3_NTL3:		#2	; AND A / NOP (note table creator)
     187.  00:8000                      
     188.  00:8000  (00:F023)           VARS:			#0
     189.  00:8000                      
     190.  00:8000  (00:F023)           ChanA:			#29			;CHNPRM_Size
     191.  00:8000  (00:F040)           ChanB:			#29			;CHNPRM_Size
     192.  00:8000  (00:F05D)           ChanC:			#29			;CHNPRM_Size
     193.  00:8000                      
     194.  00:8000                      ;GlobalVars
     195.  00:8000  (00:F07A)           DelyCnt:		#1
     196.  00:8000  (00:F07B)           CurESld:		#2
     197.  00:8000  (00:F07D)           CurEDel:		#1
     198.  00:8000  (00:F07E)           Ns_Base_AddToNs:	#0
     199.  00:8000  (00:F07E)           Ns_Base:		#1
     200.  00:8000  (00:F07F)           AddToNs:		#1
     201.  00:8000                      
     202.  00:8000  (00:F080)           NT_:			#192	; Puntero a/tabla de frecuencias
     203.  00:8000                      
     204.  00:8000  (00:F140)           AYREGS:			#0
     205.  00:8000  (00:F140)           VT_:			#14
     206.  00:8000  (00:F14E)           EnvBase:		#2
     207.  00:8000  (00:F150)           VAR0END:		#0
     208.  00:8000                      
     209.  00:8000  (00:F150)           T1_:			#0		
     210.  00:8000  (00:F150)           T_NEW_1:		#0
     211.  00:8000  (00:F150)           T_OLD_1:		#24
     212.  00:8000  (00:F168)           T_OLD_2:		#24
     213.  00:8000  (00:F180)           T_NEW_3:		#0
     214.  00:8000  (00:F180)           T_OLD_3:		#2
     215.  00:8000  (00:F182)           T_OLD_0:		#0
     216.  00:8000  (00:F182)           T_NEW_0:		#24
     217.  00:8000  (00:F19A)           T_NEW_2:		#166
     218.  00:8000                      ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;PT3 REPLAYER END
     219.  00:8000                      
     220.  00:8000                      ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ayFX REPLAYER 
     221.  00:8000  (00:F240)           ayFX_MODE:		#1			; ayFX mode
     222.  00:8000  (00:F241)           ayFX_BANK:		#2			; Current ayFX Bank
     223.  00:8000  (00:F243)           ayFX_PRIORITY:	#1			; Current ayFX stream priotity
     224.  00:8000  (00:F244)           ayFX_POINTER:	#2			; Pointer to the current ayFX stream
     225.  00:8000  (00:F246)           ayFX_TONE:		#2			; Current tone of the ayFX stream
     226.  00:8000  (00:F248)           ayFX_NOISE:		#1			; Current noise of the ayFX stream
     227.  00:8000  (00:F249)           ayFX_VOLUME:	#1			; Current volume of the ayFX stream
     228.  00:8000  (00:F24A)           ayFX_CHANNEL:	#1			; PSG channel to play the ayFX stream
     229.  00:8000                      
     230.  00:8000                      	;IF (AYFXRELATIVE == 1 ) 
     231.  00:8000                      ;ayFX_VT:	ds	2			; ayFX relative volume table pointer
     232.  00:8000                      	;ENDIF
     233.  00:8000                      ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ayFX REPLAYER END
     234.  00:8000                      
     235.  00:8000                      
     236.  00:8000                      
       7   00:8000                      
       8   00:8000                      ;;=====================================================
       9   00:8000                      ;;DEFINICIÓN DE CABECERA DE ARCHIVO BIN
      10   00:8000                      ;;=====================================================		
      11   00:8000                      	include "cabecerabin.asm"
       1.  00:8000                      ;;=====================================================
       2.  00:8000                      ;; FICHERO cabecera.asm
       3.  00:8000                      ;;=====================================================
       4.  00:8000                      
       5.  00:8000                      ;;CABECERA FICHERO BIN
       6.  00:8000  FE                  	DB	#FE
       7.  00:8001  00 80               	DW	START
       8.  00:8003  40 B7               	DW	END
       9.  00:8005  00 80               	DW	START
      10.  00:8007                      
      11.  00:8007                      ;;INICIO CÓDIGO PROGRAMA	
      12.  00:8007                      	ORG	#8000
      13.  00:8000                      	
      12   00:8000                      	
      13   00:8000                      START:	
      14   00:8000                      	;inicializa pantalla y entonrno
      15   00:8000  CD EF 80            	CALL	sub_preparapantalla			;screen 2,2 sin click al pulsar tecla y color 16,1,1
      16   00:8003                      	
      17   00:8003                      	;inicializa variables para parametrizar funciones y que lo que se muestre sea variable (nº vidas, mapa, puertas, pantalla, etc...)
      18   00:8003  CD 38 80            	CALL	inicializa_variables_pruebas
      19   00:8006                      	
      20   00:8006                      	;inicializa los niveles por partida
      21   00:8006  CD 5B 80            	CALL	inicializa_niveles			;no es necesario parametrizarlo según el nivel del usuario ya que se cargan todos
      22   00:8009                      	
      23   00:8009                      	;pinta la pantalla (la primera o algunas especiales se pintan completamente)
      24   00:8009  CD 10 81            	CALL	pinta_pantalla_completa 
      25   00:800C                      	
      26   00:800C                      	;carga sprites en memoria (SE HA RETRASADO HASTA PARAMETRIZAR LA CARGA DE PANTALLAS)
      27   00:800C  CD 9D 84            	CALL 	carga_patrones_sprites_nivel
      28   00:800F                      	
      29   00:800F                      	;funciones que modificarian el marcador si se produce un evento cuando toque y cuando se pinta la pantalla ya se mira
      30   00:800F                      	;una variable para ver si el array hay que actualizarlo en pantalla o no
      31   00:800F  CD 50 82            	CALL	pinta_vidas
      32   00:8012  CD 5F 82            	CALL 	pinta_reliquias
      33   00:8015  CD 6E 82            	CALL	pinta_nivel
      34   00:8018  CD EE 82            	CALL	borra_mapa
      35   00:801B  CD 81 83            	CALL	pinta_puertas
      36   00:801E                      
      37   00:801E  3E 13               	LD		 A, TILEPROTAM
      38   00:8020  32 6D A4            	LD		(elemento_pintar_mapa), A
      39   00:8023  CD EB 83            	CALL	posiciona_en_mapa		;se le pasa elemento_pintar_mapa (tile del prota) está el prota y prota.poxx y posy
      40   00:8026                      	
      41   00:8026  3E 14               	LD		 A, AGUAOFF
      42   00:8028  CD 77 84            	CALL	pinta_obj_ayuda
      43   00:802B                      	
      44   00:802B                      	;incializacion de replayer con interrupciones
      45   00:802B                      ;	CALL	inicializa_replayer_efectos_interrupciones
      46   00:802B                      
      47   00:802B                      loop_principal:
      48   00:802B  76                  	HALT							;espera VBLANK y sincroniza
      49   00:802C                      	
      50   00:802C  CD B5 84            	CALL	render_sprites			;actualiza array de sprites y los pinta en pantalla
      51   00:802F                      	
      52   00:802F  CD DF 82            	CALL	pinta_energia			;pinta la energia en pantalla
      53   00:8032                      
      54   00:8032  CD F8 84            	CALL	check_player			;MIRA EL CONTROL Y APLICA LA LOGICA DE MOVIMIENTO DEL PROTAGONISTA
      55   00:8035                      	
      56   00:8035  C3 2B 80            	JP		loop_principal
      57   00:8038                      fin_programa_principal:
      58   00:8038                      	;RET
      59   00:8038                      
      60   00:8038                      
      61   00:8038                      
      62   00:8038                      
      63   00:8038                      
      64   00:8038                      ;;*******************************************************************
      65   00:8038                      ; sólo para hacer pruebas y pintar la parte de las vidas y demás
      66   00:8038                      inicializa_variables_pruebas:
      67   00:8038  3E 04               	LD		 A, 4
      68   00:803A  32 49 A4            	LD		(prota_vidas),A
      69   00:803D                      
      70   00:803D  3E 04               	LD		 A, 4
      71   00:803F  32 4A A4            	LD		(prota_reliquias), A
      72   00:8042                      
      73   00:8042  3E 64               	LD		 A, 100
      74   00:8044  32 4D A4            	LD		(prota_energia), A
      75   00:8047                      
      76   00:8047                      	;ubico al prota dentro del nivel para obtener luego las habitaciones y enemigos que aparecerán
      77   00:8047                      	;será igual la posición inicial en todos los niveles
      78   00:8047                      	
      79   00:8047  3E 04               	LD		 A, 4				;los niveles (matrices) son 7 del 0 al 6
      80   00:8049  32 48 A4            	LD		(prota_nivel), A	;nivel empieza en 0 para usar las posiciones ascii
      81   00:804C                      
      82   00:804C  3E 06               	LD		 A, 6				;los subniveles (filas) son 7 del 0 al 6
      83   00:804E  32 4C A4            	LD		(prota_pos_mapy), A	;pos Y dentro del nivel (se empieza en 0)
      84   00:8051                      
      85   00:8051  3E 02               	LD		 A, 2				;columnas 7: del 0 al 6
      86   00:8053  32 4B A4            	LD		(prota_pos_mapx), A	;pos X dentro del nivel (se empieza en 0)
      87   00:8056                      	
      88   00:8056  AF                  	XOR		 A
      89   00:8057  32 3D A4            	LD		(prota.cadencia), A
      90   00:805A                      fin_inicializa_variables_pruebas:
      91   00:805A  C9                  	RET
      92   00:805B                      ;;************************************************************************
      93   00:805B                      
      94   00:805B                      
      95   00:805B                      
      96   00:805B                      
      97   00:805B                      
      98   00:805B                      
      99   00:805B                      
     100   00:805B                      
     101   00:805B                      
     102   00:805B                      ;;=====================================================
     103   00:805B                      ;;DEFINICIÓN DE SUBRUTINAS
     104   00:805B                      ;;=====================================================
     105   00:805B                      	include "subrutinas.asm"
       1.  00:805B                      ;;=====================================================
       2.  00:805B                      ;;DEFINICIÓN DE SUBRUTINAS
       3.  00:805B                      ;;=====================================================	
       4.  00:805B                      
       5.  00:805B                      
       6.  00:805B                      ;;=====================================================
       7.  00:805B                      ;;INICIALIZA_NIVELES
       8.  00:805B                      ;;=====================================================	
       9.  00:805B                      ; función: 	copia la plantilla de niveles (habitaciones_plantilla) en los niveles de trabajo para el juego (habitaciones_juego)
      10.  00:805B                      ; entrada: 	habitaciones_plantilla
      11.  00:805B                      ; salida: 	habitaciones_juego
      12.  00:805B                      ; toca: 	A
      13.  00:805B                      inicializa_niveles:
      14.  00:805B  D9                  	EXX
      15.  00:805C                      	
      16.  00:805C  AF                  	XOR		 A
      17.  00:805D  06 31               	LD		 B, 49				;7 filas por 7 niveles menos el primero que lo hago diera del buble porque se suma 14 y no 16
      18.  00:805F  21 1F A1            	LD		HL, habitaciones_juego;tambíen puntero al primer nivel
      19.  00:8062  11 0E 00            	LD		DE,14
      20.  00:8065  19                  	ADD		HL,DE
      21.  00:8066  77                  	LD		(HL),A
      22.  00:8067  11 10 00            	LD		DE,16				;desde las col 15 de una fila a la siguiente
      23.  00:806A                      .bucle_borra_hab:
      24.  00:806A  19                  	ADD		HL,DE
      25.  00:806B  77                  	LD		(HL),A
      26.  00:806C  10 FC               	DJNZ	.bucle_borra_hab
      27.  00:806E                      	
      28.  00:806E  D9                  	EXX
      29.  00:806F                      fin_iniciliza_niveles:
      30.  00:806F  C9                  	RET
      31.  00:8070                      
      32.  00:8070                      
      33.  00:8070                      ;;=====================================================
      34.  00:8070                      ;;ACTUALIZA_MARCADOR_VIDAS
      35.  00:8070                      ;;=====================================================	
      36.  00:8070                      ; función:  actualiza el buffer de vidas
      37.  00:8070                      ; entrada: 	prota_vidas
      38.  00:8070                      ; salida: 	array_aux_vidas
      39.  00:8070                      ; toca:		A,B,HL
      40.  00:8070                      actualiza_marcador_vidas:
      41.  00:8070                      	;para no andar restando pongo todos los huecos a negro y luego en otro bucle las caras
      42.  00:8070                      	;1-pinto todo en blanco
      43.  00:8070  21 4E A4            	LD		HL,array_aux_vidas
      44.  00:8073  06 08               	LD		 B,NMAXVIDREL
      45.  00:8075                      loop_marcador_caras_negro:	;asignar espacios en negro
      46.  00:8075  36 00               	LD		(HL),0			;0 posición mapa tiles para nada (es transparente pero el fondo es negro)
      47.  00:8077  23                  	INC		HL
      48.  00:8078  10 FB               	DJNZ	loop_marcador_caras_negro
      49.  00:807A                      fin_loop_marcador_caras_negro:
      50.  00:807A                      	;2-pinto las caras según el n de vidas
      51.  00:807A  3A 49 A4            	LD		 A, (prota_vidas)
      52.  00:807D  B7                  	OR		 A
      53.  00:807E  C8                  	RET 	 Z
      54.  00:807F  47                  	LD		 B, A
      55.  00:8080  21 4E A4            	LD		HL, array_aux_vidas
      56.  00:8083                      loop_marcador_caras: ;asignar caras
      57.  00:8083  36 0D               	LD		(HL), POSCARAMAP	;13 posición mapa tiles para cara
      58.  00:8085  23                  	INC		HL
      59.  00:8086  10 FB               	DJNZ	loop_marcador_caras
      60.  00:8088                      fin_loop_marcador_caras:
      61.  00:8088                      
      62.  00:8088                      fin_actualiza_marcador_vidas:
      63.  00:8088  C9                  	RET
      64.  00:8089                      
      65.  00:8089                      
      66.  00:8089                      ;;=====================================================
      67.  00:8089                      ;;ACTUALIZA_BUFFER_RELIQUIAS
      68.  00:8089                      ;;=====================================================	
      69.  00:8089                      ; función: 	actualiza buffer de reliquias
      70.  00:8089                      ; entrada: 	prota_reliquias
      71.  00:8089                      ; salida: 	array_aux_reliquias
      72.  00:8089                      ; toca:		A,B,HL
      73.  00:8089                      actualiza_buffer_reliquias:	
      74.  00:8089                      	;para no andar restando pongo todos los huecos a negro y luego en otro bucle las reliquias
      75.  00:8089                      	;1-pinto todo en blanco
      76.  00:8089  21 56 A4            	LD		HL, array_aux_reliquias
      77.  00:808C  06 08               	LD		 B, NMAXVIDREL
      78.  00:808E  AF                  	XOR		 A
      79.  00:808F                      loop_buffer_reliquias_negro:	;asignar espacios en negro
      80.  00:808F  77                  	LD		(HL), A			;0 posición mapa tiles para nada (es transparente pero el fondo es negro)
      81.  00:8090  23                  	INC		HL
      82.  00:8091  10 FC               	DJNZ	loop_buffer_reliquias_negro
      83.  00:8093                      
      84.  00:8093                      	;2-pinto las cruces según el n de reliquias
      85.  00:8093  21 56 A4            	LD		HL, array_aux_reliquias
      86.  00:8096  3A 4A A4            	LD		 A, (prota_reliquias)
      87.  00:8099  B7                  	OR		 A
      88.  00:809A  C8                  	RET		 Z
      89.  00:809B  47                  	LD		 B, A
      90.  00:809C                      loop_buffer_reliquias: ;asignar reliquias
      91.  00:809C  36 11               	LD		(HL), POSRELIMAP	;17 posición mapa tiles para reliquia
      92.  00:809E  23                  	INC		HL
      93.  00:809F  10 FB               	DJNZ	loop_buffer_reliquias
      94.  00:80A1                      fin_actualiza_buffer_reliquias:
      95.  00:80A1  C9                  	RET
      96.  00:80A2                      
      97.  00:80A2                      
      98.  00:80A2                      
      99.  00:80A2                      ;;=====================================================
     100.  00:80A2                      ;;LOCALIZA_INFO_HABITACION
     101.  00:80A2                      ;;=====================================================	
     102.  00:80A2                      ; función: 	busca las puertas que hay que pintar egún la posición del usuario y las pone en habitacion_actual
     103.  00:80A2                      ; entrada: 	prota.pos_mapy, prota.pos_mapx, prota_nivel habitaciones_juego
     104.  00:80A2                      ; salida: 	habitacion_actual
     105.  00:80A2                      ; toca:		todo
     106.  00:80A2                      ;ejemplo: nivel 4, posy 5 y posx 3
     107.  00:80A2                      ;3 + 5 x 8 + 4 x 49
     108.  00:80A2                      localiza_info_habitacion:
     109.  00:80A2                      ;primera posición: me coloco en la columna correcta
     110.  00:80A2  21 1F A1            	LD		HL, habitaciones_juego
     111.  00:80A5                      .situo_columna:	
     112.  00:80A5  3A 4B A4            	LD		 A, (prota_pos_mapx)
     113.  00:80A8  CB 27               	SLA		 A				;multiplico por dos ya que cada habitación va de dos en dos bytes
     114.  00:80AA  06 00               	LD		 B, 0
     115.  00:80AC  4F                  	LD		 C, A
     116.  00:80AD                      
     117.  00:80AD  09                  	ADD 	HL, BC			;sumo a la posición 0 la columnax2 en la que situarme
     118.  00:80AE                      	
     119.  00:80AE                      .situo_fila:
     120.  00:80AE  3A 4C A4            	LD		A, (prota_pos_mapy)
     121.  00:80B1  B7                  	OR	 	A
     122.  00:80B2  CA BF 80            	JP		Z, .situo_nivel	;si la fila es 0 no es necesario seguir operando en fila
     123.  00:80B5                      	
     124.  00:80B5  47                  	LD		B, A
     125.  00:80B6  AF                  	XOR		A
     126.  00:80B7                      .loop_suma_fila:
     127.  00:80B7  C6 10               	ADD		16				;cada fila tiene 16 bytes
     128.  00:80B9  10 FC               	DJNZ	.loop_suma_fila
     129.  00:80BB                      	
     130.  00:80BB  06 00               	LD		 B, 0
     131.  00:80BD  4F                  	LD		 C, A
     132.  00:80BE                      
     133.  00:80BE  09                  	ADD 	HL, BC			;sumo a la columna 16 x filas para situarme en la fila correcta
     134.  00:80BF                      
     135.  00:80BF                      .situo_nivel:
     136.  00:80BF  3A 48 A4            	LD		 A, (prota_nivel)
     137.  00:80C2  B7                  	OR	 	 A
     138.  00:80C3  CA D3 80            	JP		 Z, .actualiza_valiable_habitacion	;si el nivel es 0 al pasar por las anterirores ya estoy situado actualizo la variable y termino
     139.  00:80C6                      	
     140.  00:80C6  E5                  	PUSH	HL				;guardo el resultado intermedio
     141.  00:80C7                      	
     142.  00:80C7  47                  	LD		 B, A			;preparo la varible del bucle
     143.  00:80C8  11 70 00            	LD		DE, 112			;112 = 16x42 son los bytes de cada matriz-nivel
     144.  00:80CB  21 00 00            	LD		HL, 0
     145.  00:80CE                      .loop_suma_nivel:
     146.  00:80CE  19                  	ADD		HL,DE
     147.  00:80CF  10 FD               	DJNZ	.loop_suma_nivel
     148.  00:80D1                      	
     149.  00:80D1  D1                  	POP		DE				;devuelvo el resultado intermedio en DE que ya no lo necesito
     150.  00:80D2                      	
     151.  00:80D2  19                  	ADD		HL,DE			;sumo el resultdo del nivel al resultado intermedio anterior
     152.  00:80D3                      
     153.  00:80D3                      .actualiza_valiable_habitacion
     154.  00:80D3  7E                  	LD		 A, (HL)
     155.  00:80D4  32 1D A1            	LD		(habitacion_actual), A
     156.  00:80D7                      fin_localiza_info_habitacion:
     157.  00:80D7  C9                  	RET
     158.  00:80D8                      
     159.  00:80D8                      
     160.  00:80D8                      
     161.  00:80D8                      
     106   00:80D8                      	
     107   00:80D8                      	include "subr_general.asm"
       1.  00:80D8                      ;;=====================================================
       2.  00:80D8                      ;;DEFINICIÓN DE SUBRUTINAS GENERALES USABLES PARA CUALQUIER PROYECTO
       3.  00:80D8                      ;;=====================================================	
       4.  00:80D8                      
       5.  00:80D8                      ;;=====================================================
       6.  00:80D8                      ;;SUMA_A_BC
       7.  00:80D8                      ;;=====================================================	
       8.  00:80D8                      ; función: 	suma A a BC por si da más de 255
       9.  00:80D8                      ; entrada: 	A, BC
      10.  00:80D8                      ; salida: 	A + BC
      11.  00:80D8                      ; toca:		A, BC
      12.  00:80D8                      suma_A_BC:
      13.  00:80D8  81                  	ADD		 C
      14.  00:80D9  4F                  	LD		 C, A
      15.  00:80DA  88                  	ADC		 B
      16.  00:80DB  91                  	SUB		 C
      17.  00:80DC  47                  	LD		 B, A
      18.  00:80DD                      fin_suma_A_BC:
      19.  00:80DD  C9                  	RET
     108   00:80DE                      	
     109   00:80DE                      	include "subr_pintapantalla.asm"
       1.  00:80DE                      ;;=====================================================
       2.  00:80DE                      ;;DEFINICIÓN DE SUBRUTINAS
       3.  00:80DE                      ;;=====================================================	
       4.  00:80DE                      ;relacionadas con pintado en pantalla (y no sprites)
       5.  00:80DE                      
       6.  00:80DE                      
       7.  00:80DE                      ;;=====================================================
       8.  00:80DE                      ;;COLOR_PANTALLA
       9.  00:80DE                      ;;=====================================================	
      10.  00:80DE                      ; función: 	el equivalente en basic a color 15,1,1
      11.  00:80DE                      ; entrada: 	HL	que apunta a un array de bytes con 3 bytes FORCLR, BAKCLR y BDRCLR
      12.  00:80DE                      ; salida: 	-
      13.  00:80DE                      ; toca: 	todo
      14.  00:80DE                      color_pantalla:
      15.  00:80DE  7E                  	LD		 A, (HL)			;FORCLR 
      16.  00:80DF  32 E9 F3            	LD 		(FORCLR),A
      17.  00:80E2  23                  	INC		HL
      18.  00:80E3                      	
      19.  00:80E3  7E                  	LD		 A, (HL)			;BAKCLR
      20.  00:80E4  32 EA F3            	LD 		(BAKCLR),A
      21.  00:80E7  23                  	INC		HL
      22.  00:80E8                      	
      23.  00:80E8  7E                  	LD		 A, (HL)
      24.  00:80E9  32 EB F3            	LD 		(BDRCLR),A			;BDRCLR
      25.  00:80EC  C3 62 00            	JP		CHGCLR 
      26.  00:80EF                      fin_color_pantalla:
      27.  00:80EF                      
      28.  00:80EF                      
      29.  00:80EF                      ;;=====================================================
      30.  00:80EF                      ;;PREPARAPANTALLA
      31.  00:80EF                      ;;=====================================================	
      32.  00:80EF                      ; función: elimina clic cuando se pulsa tecla, cls, screen 2,2
      33.  00:80EF                      ; entrada: -
      34.  00:80EF                      ; salida: -
      35.  00:80EF                      ; toca: si no son todos los regristros, casi todos
      36.  00:80EF                      sub_preparapantalla:
      37.  00:80EF                      	;toca A y Z
      38.  00:80EF                      elimina_clic;
      39.  00:80EF  AF                  	XOR		 A
      40.  00:80F0  32 DB F3            	LD		(CLIKSW),A
      41.  00:80F3                      fin_elimina_clic:
      42.  00:80F3                      
      43.  00:80F3                      	;toca A
      44.  00:80F3                      limpia_pantalla:
      45.  00:80F3  AF                  	XOR		 A
      46.  00:80F4  CD C3 00            	CALL 	CLS
      47.  00:80F7                      fin_limpia_pantalla:
      48.  00:80F7                      
      49.  00:80F7                      	;toca A y direcciones #F3E9/#F3EA/#F3EB, poner en HL array con 3 valores
      50.  00:80F7  21 2F A4            	LD		HL, color_base
      51.  00:80FA  CD DE 80            	CALL	color_pantalla
      52.  00:80FD                      	
      53.  00:80FD                      	;cambiamos a SCREEN 2,2 del BASIC
      54.  00:80FD                      	;toca A
      55.  00:80FD                      screen2:
      56.  00:80FD  3E 02               	LD		 A, 2
      57.  00:80FF  CD 5F 00            	CALL	CHGMOD			;selecciona screen 2
      58.  00:8102                      sprites_16_16:
      59.  00:8102  3A E0 F3            	LD		 A, (RG1SAV)
      60.  00:8105  F6 02               	OR		00000010b		;fuerza sprites de 16x16
      61.  00:8107  32 E0 F3            	LD		(RG1SAV), A		;no lo guardamos en la copia de variables del sistema
      62.  00:810A  47                  	LD		 B, A
      63.  00:810B  0E 01               	LD		 C, 1
      64.  00:810D  C3 47 00            	JP		WRTVDP			;opción alternativa de escribir las tres lineas siguientes
      65.  00:8110                      fin_sub_preparapantalla:
      66.  00:8110                      	
      67.  00:8110                      
      68.  00:8110                      ;;=====================================================
      69.  00:8110                      ;;PINTA_PANTALLA_COMPLETA
      70.  00:8110                      ;;=====================================================	
      71.  00:8110                      ; función: pinta el escenario, las 3 partes
      72.  00:8110                      ; entrada: -
      73.  00:8110                      ; salida: -
      74.  00:8110                      ; toca: si no son todos los regristros, casi todos
      75.  00:8110                      pinta_pantalla_completa:
      76.  00:8110  CD 17 81            	CALL 	pinta_parte_superior_pantalla
      77.  00:8113                      	
      78.  00:8113  CD 35 82            	CALL 	pinta_parte_inferior_pantalla	
      79.  00:8116                      fin_pinta_pantalla_completa:
      80.  00:8116  C9                  	RET
      81.  00:8117                      
      82.  00:8117                      
      83.  00:8117                      ;;=====================================================
      84.  00:8117                      ;;PINTA_PARTE_SUPERIOR_PANTALLA
      85.  00:8117                      ;;=====================================================	
      86.  00:8117                      ; función: pinta el escenario, los dos bancos superiores
      87.  00:8117                      ; entrada: -
      88.  00:8117                      ; salida: -
      89.  00:8117                      ; toca: si no son todos los regristros, casi todos
      90.  00:8117                      pinta_parte_superior_pantalla:
      91.  00:8117  3A 48 A4            	LD		 A, (prota_nivel)
      92.  00:811A  CA 48 81            	JP		 Z, .carga_nivel_0
      93.  00:811D  3D                  	DEC		 A
      94.  00:811E  3A 48 A4            	LD		 A, (prota_nivel)
      95.  00:8121  CA 63 81            	JP		 Z, .carga_nivel_1
      96.  00:8124  3D                  	DEC		 A
      97.  00:8125  3A 48 A4            	LD		 A, (prota_nivel)
      98.  00:8128  CA 7E 81            	JP		 Z, .carga_nivel_2
      99.  00:812B  3D                  	DEC		 A
     100.  00:812C  3A 48 A4            	LD		 A, (prota_nivel)
     101.  00:812F  CA 99 81            	JP		 Z, .carga_nivel_3
     102.  00:8132  3D                  	DEC		 A
     103.  00:8133  3A 48 A4            	LD		 A, (prota_nivel)
     104.  00:8136  CA B4 81            	JP		 Z, .carga_nivel_4
     105.  00:8139  3D                  	DEC		 A
     106.  00:813A  3A 48 A4            	LD		 A, (prota_nivel)
     107.  00:813D  CA CF 81            	JP		 Z, .carga_nivel_5
     108.  00:8140  3D                  	DEC		 A
     109.  00:8141  3A 48 A4            	LD		 A, (prota_nivel)
     110.  00:8144  CA EA 81            	JP		 Z, .carga_nivel_6
     111.  00:8147  3D                  	DEC		 A
     112.  00:8148                      	
     113.  00:8148                      .carga_nivel_0:
     114.  00:8148  21 06 A6            	LD		HL, tiles_patrones_nivel0
     115.  00:814B  22 2F 82            	LD		(tiles_patrones), HL
     116.  00:814E  21 BB A7            	LD		HL, tiles_color_nivel0
     117.  00:8151  22 31 82            	LD		(tiles_colores), HL
     118.  00:8154  21 06 A6            	LD		HL, tiles_patrones_nivel0
     119.  00:8157  22 2F 82            	LD		(tiles_patrones), HL
     120.  00:815A  21 02 A8            	LD		HL, tiles_mapa_nivel0
     121.  00:815D  22 33 82            	LD		(tiles_mapa), HL
     122.  00:8160  C3 02 82            	JP		.fin_carga_niveles
     123.  00:8163                      
     124.  00:8163                      .carga_nivel_1:
     125.  00:8163  21 37 A8            	LD		HL, tiles_patrones_nivel1
     126.  00:8166  22 2F 82            	LD		(tiles_patrones), HL
     127.  00:8169  21 EC A9            	LD		HL, tiles_color_nivel1
     128.  00:816C  22 31 82            	LD		(tiles_colores), HL
     129.  00:816F  21 37 A8            	LD		HL, tiles_patrones_nivel1
     130.  00:8172  22 2F 82            	LD		(tiles_patrones), HL
     131.  00:8175  21 33 AA            	LD		HL, tiles_mapa_nivel1
     132.  00:8178  22 33 82            	LD		(tiles_mapa), HL
     133.  00:817B  C3 02 82            	JP		.fin_carga_niveles
     134.  00:817E                      	
     135.  00:817E                      .carga_nivel_2:
     136.  00:817E  21 68 AA            	LD		HL, tiles_patrones_nivel2
     137.  00:8181  22 2F 82            	LD		(tiles_patrones), HL
     138.  00:8184  21 1D AC            	LD		HL, tiles_color_nivel2
     139.  00:8187  22 31 82            	LD		(tiles_colores), HL
     140.  00:818A  21 68 AA            	LD		HL, tiles_patrones_nivel2
     141.  00:818D  22 2F 82            	LD		(tiles_patrones), HL
     142.  00:8190  21 64 AC            	LD		HL, tiles_mapa_nivel2
     143.  00:8193  22 33 82            	LD		(tiles_mapa), HL
     144.  00:8196  C3 02 82            	JP		.fin_carga_niveles
     145.  00:8199                      	
     146.  00:8199                      .carga_nivel_3:
     147.  00:8199  21 99 AC            	LD		HL, tiles_patrones_nivel3
     148.  00:819C  22 2F 82            	LD		(tiles_patrones), HL
     149.  00:819F  21 4E AE            	LD		HL, tiles_color_nivel3
     150.  00:81A2  22 31 82            	LD		(tiles_colores), HL
     151.  00:81A5  21 99 AC            	LD		HL, tiles_patrones_nivel3
     152.  00:81A8  22 2F 82            	LD		(tiles_patrones), HL
     153.  00:81AB  21 95 AE            	LD		HL, tiles_mapa_nivel3
     154.  00:81AE  22 33 82            	LD		(tiles_mapa), HL
     155.  00:81B1  C3 02 82            	JP		.fin_carga_niveles
     156.  00:81B4                      	
     157.  00:81B4                      .carga_nivel_4:
     158.  00:81B4  21 CA AE            	LD		HL, tiles_patrones_nivel4
     159.  00:81B7  22 2F 82            	LD		(tiles_patrones), HL
     160.  00:81BA  21 7F B0            	LD		HL, tiles_color_nivel4
     161.  00:81BD  22 31 82            	LD		(tiles_colores), HL
     162.  00:81C0  21 CA AE            	LD		HL, tiles_patrones_nivel4
     163.  00:81C3  22 2F 82            	LD		(tiles_patrones), HL
     164.  00:81C6  21 C6 B0            	LD		HL, tiles_mapa_nivel4
     165.  00:81C9  22 33 82            	LD		(tiles_mapa), HL
     166.  00:81CC  C3 02 82            	JP		.fin_carga_niveles
     167.  00:81CF                      	
     168.  00:81CF                      .carga_nivel_5:
     169.  00:81CF  21 FB B0            	LD		HL, tiles_patrones_nivel5
     170.  00:81D2  22 2F 82            	LD		(tiles_patrones), HL
     171.  00:81D5  21 B0 B2            	LD		HL, tiles_color_nivel5
     172.  00:81D8  22 31 82            	LD		(tiles_colores), HL
     173.  00:81DB  21 FB B0            	LD		HL, tiles_patrones_nivel5
     174.  00:81DE  22 2F 82            	LD		(tiles_patrones), HL
     175.  00:81E1  21 F7 B2            	LD		HL, tiles_mapa_nivel5
     176.  00:81E4  22 33 82            	LD		(tiles_mapa), HL
     177.  00:81E7  C3 02 82            	JP		.fin_carga_niveles
     178.  00:81EA                      	
     179.  00:81EA                      .carga_nivel_6:
     180.  00:81EA  21 2C B3            	LD		HL, tiles_patrones_nivel6
     181.  00:81ED  22 2F 82            	LD		(tiles_patrones), HL
     182.  00:81F0  21 E1 B4            	LD		HL, tiles_color_nivel6
     183.  00:81F3  22 31 82            	LD		(tiles_colores), HL
     184.  00:81F6  21 2C B3            	LD		HL, tiles_patrones_nivel6
     185.  00:81F9  22 2F 82            	LD		(tiles_patrones), HL
     186.  00:81FC  21 28 B5            	LD		HL, tiles_mapa_nivel6
     187.  00:81FF  22 33 82            	LD		(tiles_mapa), HL
     188.  00:8202                      ;	JP		.fin_carga niveles			;no necesario
     189.  00:8202                      .fin_carga_niveles:
     190.  00:8202                      
     191.  00:8202                      	;cargando banco 1
     192.  00:8202                      	;cargamos los patrones
     193.  00:8202  2A 2F 82            	LD		HL, (tiles_patrones)
     194.  00:8205  11 00 00            	LD		DE, CHRTBL
     195.  00:8208  CD BD 96            	CALL	depack_VRAM
     196.  00:820B                      	;cargamos los colores de los patrones
     197.  00:820B  2A 31 82            	LD		HL, (tiles_colores)
     198.  00:820E  11 00 20            	LD		DE, CLRTBL
     199.  00:8211  CD BD 96            	CALL	depack_VRAM
     200.  00:8214                      	
     201.  00:8214                      	;cargando banco 2
     202.  00:8214                      	;cargamos los patrones
     203.  00:8214  2A 2F 82            	LD		HL, (tiles_patrones)
     204.  00:8217  11 00 08            	LD		DE, CHRTBL + #0800
     205.  00:821A  CD BD 96            	CALL	depack_VRAM	
     206.  00:821D                      	;cargamos los colores de los patrones
     207.  00:821D  2A 31 82            	LD		HL, (tiles_colores)
     208.  00:8220  11 00 28            	LD		DE, CLRTBL + #0800
     209.  00:8223  CD BD 96            	CALL	depack_VRAM
     210.  00:8226                      	
     211.  00:8226                      	;cargamos mapa de pantalla banco 1 y 2
     212.  00:8226  2A 33 82            	LD		HL, (tiles_mapa)
     213.  00:8229  11 00 18            	LD		DE, TILMAP
     214.  00:822C  C3 BD 96            	JP		depack_VRAM
     215.  00:822F                      fin_pinta_parte_superior_pantalla:
     216.  00:822F  00 00               tiles_patrones:		DW	0
     217.  00:8231  00 00               tiles_colores:		DW	0
     218.  00:8233  00 00               tiles_mapa:			DW	0
     219.  00:8235                      
     220.  00:8235                      
     221.  00:8235                      ;;=====================================================
     222.  00:8235                      ;;PINTA_PARTE_INFERIOR_PANTALLA
     223.  00:8235                      ;;=====================================================	
     224.  00:8235                      ; función: pinta la parte inferior del escenario que es común
     225.  00:8235                      ; entrada: -
     226.  00:8235                      ; salida: -
     227.  00:8235                      ; toca: si no son todos los regristros, casi todos
     228.  00:8235                      pinta_parte_inferior_pantalla:
     229.  00:8235                      	;cangando banco 3
     230.  00:8235                      	;cargamos los patrones
     231.  00:8235  21 5D B5            	LD		HL,tiles_patrones_marcador
     232.  00:8238  11 00 10            	LD		DE,CHRTBL + #1000
     233.  00:823B  CD BD 96            	CALL	depack_VRAM	
     234.  00:823E                      	;cargamos mapa de pantalla
     235.  00:823E  21 DE B6            	LD		HL,tiles_mapa_marcador
     236.  00:8241  11 00 1A            	LD		DE,TILMAP + #0200
     237.  00:8244  CD BD 96            	CALL	depack_VRAM
     238.  00:8247                      	;cargamos los colores de los patrones
     239.  00:8247  21 A9 B6            	LD		HL,tiles_color_marcador
     240.  00:824A  11 00 30            	LD		DE,CLRTBL + #1000
     241.  00:824D  C3 BD 96            	JP		depack_VRAM
     242.  00:8250                      fin_pinta_parte_inferior_pantalla:
     243.  00:8250                      
     244.  00:8250                      
     245.  00:8250                      
     246.  00:8250                      ;;=====================================================
     247.  00:8250                      ;;PINTA_VIDAS
     248.  00:8250                      ;;=====================================================	
     249.  00:8250                      ; función: 	actualiza el mapa de tiles para que en el próximo refresco se pinten y actualiza_vidas
     250.  00:8250                      ; entrada: 	array_aux_vidas
     251.  00:8250                      ; salida: 	actualiza_vidas_sn
     252.  00:8250                      ; toca:		todo
     253.  00:8250                      pinta_vidas:
     254.  00:8250  CD 70 80            	CALL	actualiza_marcador_vidas
     255.  00:8253                      	
     256.  00:8253  21 4E A4            	LD		HL, array_aux_vidas
     257.  00:8256  11 48 1A            	LD		DE, TILMAP + POSVIDAS 	;inicio posición en el mapa de tiles de las vidas
     258.  00:8259  01 08 00            	LD		BC, NMAXVIDREL			;hay 8 posiciones para vidas/reliquias o espacios en negro si no tiene 8 vidas/reliquias
     259.  00:825C  C3 5C 00            	JP		LDIRVM
     260.  00:825F                      fin_pinta_vidas:
     261.  00:825F                      	
     262.  00:825F                      	
     263.  00:825F                      
     264.  00:825F                      ;;=====================================================
     265.  00:825F                      ;;PINTA_RELIQUIAS
     266.  00:825F                      ;;=====================================================	
     267.  00:825F                      ; función: 	actualiza el mapa de tiles para que en el próximo refresco se pinten y actualiza_reliquias
     268.  00:825F                      ; entrada: 	array_aux_reliquias
     269.  00:825F                      ; salida: 	-
     270.  00:825F                      ; toca:		todo
     271.  00:825F                      pinta_reliquias:
     272.  00:825F  CD 89 80            	CALL	actualiza_buffer_reliquias
     273.  00:8262                      	
     274.  00:8262  21 56 A4            	LD		HL, array_aux_reliquias
     275.  00:8265  11 C8 1A            	LD		DE, TILMAP + POSRELIQ 	;inicio posición en el mapa de tiles de las vidas
     276.  00:8268  01 08 00            	LD		BC, NMAXVIDREL			;hay 8 posiciones para vidas/reliquias o espacios en negro si no tiene 8 vidas/reliquias
     277.  00:826B  C3 5C 00            	JP		LDIRVM
     278.  00:826E                      fin_pinta_reliquias:
     279.  00:826E                      	
     280.  00:826E                      
     281.  00:826E                      
     282.  00:826E                      	
     283.  00:826E                      ;;=====================================================
     284.  00:826E                      ;;PINTA_NIVEL
     285.  00:826E                      ;;=====================================================	
     286.  00:826E                      ; función: 	actualiza el nivel en la parte de puntuación
     287.  00:826E                      ; entrada: 	prota_nivel
     288.  00:826E                      ; salida: 	-
     289.  00:826E                      ; toca:		HL,DE,BC
     290.  00:826E                      pinta_nivel:	
     291.  00:826E                      	;forma más avanzada sin llamada a la bios
     292.  00:826E  01 B4 1A            	LD		BC,TILMAP + POSNIVEL ;posición en el mapa de tiles del tile de nivel
     293.  00:8271  3A 48 A4            	LD		 A, (prota_nivel)	;seleccionando la pos del banco de tiles a poner en el mapa
     294.  00:8274  C6 30               	ADD		'0'	
     295.  00:8276  57                  	LD		 D, A
     296.  00:8277                      	
     297.  00:8277  C3 7A 82            	JP		pinta_tile_suelto
     298.  00:827A                      fin_pinta_nivel:
     299.  00:827A                      
     300.  00:827A                      
     301.  00:827A                      
     302.  00:827A                      ;;=====================================================
     303.  00:827A                      ;;PINTA_TILE_SUELTO
     304.  00:827A                      ;;=====================================================	
     305.  00:827A                      ; función: 	pinta al tile que digamos en D, en la posición BC
     306.  00:827A                      ; entrada: 	BC (posición a pintar en el mapa),D (qué se va a pintar el esa posición)
     307.  00:827A                      ; salida: 	-
     308.  00:827A                      ; toca:		-
     309.  00:827A                      pinta_tile_suelto:
     310.  00:827A  DB 99               	IN		 A,(REGEST)		;leer registro de estado (recomendado)
     311.  00:827C  79                  	LD		 A,C			;primero byte bajo	
     312.  00:827D  D3 99               	OUT		(REGEST),A
     313.  00:827F  78                  	LD		 A,B			;después byte alto  ********************** preguntar a Fernando cómo que byte bajo es B
     314.  00:8280  F6 40               	OR		1000000b		;+64
     315.  00:8282  D3 99               	OUT		(REGEST),A
     316.  00:8284                      	
     317.  00:8284  7A                  	LD		A,D
     318.  00:8285  D3 98               	OUT		(REGESCVDP),A	;escribe A en VRAM en la posición indicada por los dos OUT anteriores
     319.  00:8287                      fin_pinta_tile_suelto:
     320.  00:8287  C9                  	RET
     321.  00:8288                      
     322.  00:8288                      
     323.  00:8288                      
     324.  00:8288                      
     325.  00:8288                      
     326.  00:8288                      ;;=====================================================
     327.  00:8288                      ;;MIRA_PINTA ENERGIA
     328.  00:8288                      ;;=====================================================	
     329.  00:8288                      ; función: 	actualiza el nivel de energia en la parte de puntuación
     330.  00:8288                      ; nota:		el cuadrado más bajo de ejergía siempre estará pintado... se obviará
     331.  00:8288                      ; entrada: 	prota.energia, array_aux_energia
     332.  00:8288                      ; salida: 	-
     333.  00:8288                      ; toca:		ninguno porque usa EXX
     334.  00:8288                      
     335.  00:8288                      ; nota importante... lo mismo interesa hacer esto con un array para comparar y un bucle
     336.  00:8288                      
     337.  00:8288                      mira_pinta_energia:
     338.  00:8288  D9                  	EXX							;por si acaso guardo el contenido de HL (si veo que no es necesario guardarlo lo quito) uso esto en vez de push por el nº ciclos
     339.  00:8289                      	
     340.  00:8289  3A 4D A4            	LD		 A,(prota_energia) 	;para las comparaciones A variable (actual) y B fijo (limites)
     341.  00:828C                      
     342.  00:828C  0E 00               	LD		 C,TILENEGRO		;para agilizar asignaciones en vez de un valor cte uso otro registro
     343.  00:828E                      pinta_ener:
     344.  00:828E                      pinta_ener_tile_8:
     345.  00:828E  21 65 A4            	LD		HL,ultimo_pos_array_aux_energia	;coloco puntero en array e iré decrementando
     346.  00:8291  06 D9               	LD		 B,TILEENERG8
     347.  00:8293  B8                  	CP		 B
     348.  00:8294  38 04               	JR		C,pinta_ener_tile_8_negro
     349.  00:8296  36 0E               	LD		(HL),TILEMAPVERD
     350.  00:8298  18 01               	JR		pinta_ener_tile_7
     351.  00:829A                      pinta_ener_tile_8_negro:
     352.  00:829A  71                  	LD		(HL),C
     353.  00:829B                      
     354.  00:829B                      pinta_ener_tile_7:
     355.  00:829B  2B                  	DEC		HL
     356.  00:829C  06 BA               	LD		 B,TILEENERG7
     357.  00:829E  B8                  	CP		 B
     358.  00:829F  38 04               	JR		C,pinta_ener_tile_7_negro
     359.  00:82A1  36 0E               	LD		(HL),TILEMAPVERD
     360.  00:82A3  18 01               	JR		pinta_ener_tile_6
     361.  00:82A5                      pinta_ener_tile_7_negro:
     362.  00:82A5  71                  	LD		(HL),C
     363.  00:82A6                      
     364.  00:82A6                      pinta_ener_tile_6:
     365.  00:82A6  2B                  	DEC		HL
     366.  00:82A7  06 9B               	LD		 B,TILEENERG6
     367.  00:82A9  B8                  	CP		 B
     368.  00:82AA  38 04               	JR		C,pinta_ener_tile_6_negro
     369.  00:82AC  36 0E               	LD		(HL),14
     370.  00:82AE  18 01               	JR		pinta_ener_tile_5
     371.  00:82B0                      pinta_ener_tile_6_negro:
     372.  00:82B0  71                  	LD		(HL),C
     373.  00:82B1                      
     374.  00:82B1                      pinta_ener_tile_5:
     375.  00:82B1  2B                  	DEC		HL
     376.  00:82B2  06 7C               	LD		 B,TILEENERG5
     377.  00:82B4  B8                  	CP		 B
     378.  00:82B5  38 04               	JR		C,pinta_ener_tile_5_negro
     379.  00:82B7  36 0E               	LD		(HL),TILEMAPVERD
     380.  00:82B9  18 01               	JR		pinta_ener_tile_4
     381.  00:82BB                      pinta_ener_tile_5_negro:
     382.  00:82BB  71                  	LD		(HL),C
     383.  00:82BC                      
     384.  00:82BC                      pinta_ener_tile_4:
     385.  00:82BC  2B                  	DEC		HL
     386.  00:82BD  06 5D               	LD		 B,TILEENERG4
     387.  00:82BF  B8                  	CP		 B
     388.  00:82C0  38 04               	JR		C,pinta_ener_tile_4_negro
     389.  00:82C2  36 0F               	LD		(HL),TILEMAPAMAR
     390.  00:82C4  18 01               	JR		pinta_ener_tile_3
     391.  00:82C6                      pinta_ener_tile_4_negro:
     392.  00:82C6  71                  	LD		(HL),C
     393.  00:82C7                      	
     394.  00:82C7                      pinta_ener_tile_3:
     395.  00:82C7  2B                  	DEC		HL
     396.  00:82C8  06 3E               	LD		 B,TILEENERG3
     397.  00:82CA  B8                  	CP		 B
     398.  00:82CB  38 04               	JR		C,pinta_ener_tile_3_negro
     399.  00:82CD  36 0F               	LD		(HL),TILEMAPAMAR
     400.  00:82CF  18 01               	JR		pinta_ener_tile_2
     401.  00:82D1                      pinta_ener_tile_3_negro:
     402.  00:82D1  71                  	LD		(HL),C
     403.  00:82D2                      
     404.  00:82D2                      pinta_ener_tile_2:
     405.  00:82D2  2B                  	DEC		HL
     406.  00:82D3  06 1F               	LD		 B,TILEENERG2
     407.  00:82D5  B8                  	CP		 B
     408.  00:82D6  38 04               	JR		C,pinta_ener_tile_2_negro
     409.  00:82D8  36 10               	LD		(HL),TILEMAPROJO
     410.  00:82DA  18 01               	JR		fin_mira_pinta_energia		;siempre estará pintado el cuadro mínimo
     411.  00:82DC                      pinta_ener_tile_2_negro:
     412.  00:82DC  71                  	LD		(HL),C
     413.  00:82DD                      
     414.  00:82DD                      fin_mira_pinta_energia:
     415.  00:82DD  D9                  	EXX
     416.  00:82DE  C9                  	RET
     417.  00:82DF                      
     418.  00:82DF                      
     419.  00:82DF                      ;;=====================================================
     420.  00:82DF                      ;;PINTA_ENERGIA
     421.  00:82DF                      ;;=====================================================	
     422.  00:82DF                      ; función: 	actualiza el mapa de tiles para que en el próximo refresco se pinte la barra de energia actual
     423.  00:82DF                      ; entrada: 	array_aux_energia
     424.  00:82DF                      ; toca:		todo
     425.  00:82DF                      pinta_energia:
     426.  00:82DF  CD 88 82            	CALL	mira_pinta_energia
     427.  00:82E2                      	
     428.  00:82E2  21 5E A4            	LD		HL, array_aux_energia
     429.  00:82E5  11 88 1A            	LD		DE, TILMAP + POSENERG 	;inicio posición en el mapa de tiles de las vidas
     430.  00:82E8  01 08 00            	LD		BC, NMAXVIDREL			;hay 8 posiciones para vidas/reliquias o espacios en negro si no tiene 8 vidas/reliquias
     431.  00:82EB  C3 5C 00            	JP		LDIRVM
     432.  00:82EE                      fin_pinta_energia:
     433.  00:82EE                      
     434.  00:82EE                      
     435.  00:82EE                      
     436.  00:82EE                      ;;=====================================================
     437.  00:82EE                      ;;BORRA_MAPA
     438.  00:82EE                      ;;=====================================================	
     439.  00:82EE                      ; función: 	pone todas las habitaciones del mapa a negro (los tiles del mapa los rellena con un array a 0 - caracter en negro)
     440.  00:82EE                      ; entrada: 	array_aux_mapa_limpiar
     441.  00:82EE                      ; salida: 	-
     442.  00:82EE                      ; toca:		AF
     443.  00:82EE                      borra_mapa:
     444.  00:82EE  D9                  	EXX
     445.  00:82EF                      	
     446.  00:82EF  21 66 A4            	LD		HL,array_aux_mapa_limpiar
     447.  00:82F2  11 F8 1A            	LD		DE,TILMAP + POSMAPLIN1 	;inicio posición en el mapa de tiles de la primera fila del mapa
     448.  00:82F5  01 07 00            	LD		BC,NHABNIVEL			;cada nivel son 7 filas con 7 habitaciones "posibles"
     449.  00:82F8  CD 5C 00            	CALL	LDIRVM
     450.  00:82FB                      	
     451.  00:82FB  21 66 A4            	LD		HL,array_aux_mapa_limpiar
     452.  00:82FE  11 D8 1A            	LD		DE,TILMAP + POSMAPLIN2
     453.  00:8301  01 07 00            	LD		BC,NHABNIVEL
     454.  00:8304  CD 5C 00            	CALL	LDIRVM
     455.  00:8307                      
     456.  00:8307  21 66 A4            	LD		HL,array_aux_mapa_limpiar
     457.  00:830A  11 B8 1A            	LD		DE,TILMAP + POSMAPLIN3
     458.  00:830D  01 07 00            	LD		BC,NHABNIVEL
     459.  00:8310  CD 5C 00            	CALL	LDIRVM
     460.  00:8313                      
     461.  00:8313  21 66 A4            	LD		HL,array_aux_mapa_limpiar	
     462.  00:8316  11 98 1A            	LD		DE,TILMAP + POSMAPLIN4
     463.  00:8319  01 07 00            	LD		BC,NHABNIVEL
     464.  00:831C  CD 5C 00            	CALL	LDIRVM
     465.  00:831F                      
     466.  00:831F  21 66 A4            	LD		HL,array_aux_mapa_limpiar	
     467.  00:8322  11 78 1A            	LD		DE,TILMAP + POSMAPLIN5
     468.  00:8325  01 07 00            	LD		BC,NHABNIVEL
     469.  00:8328  CD 5C 00            	CALL	LDIRVM
     470.  00:832B                      
     471.  00:832B  21 66 A4            	LD		HL,array_aux_mapa_limpiar	
     472.  00:832E  11 58 1A            	LD		DE,TILMAP + POSMAPLIN6
     473.  00:8331  01 07 00            	LD		BC,NHABNIVEL
     474.  00:8334  CD 5C 00            	CALL	LDIRVM
     475.  00:8337                      
     476.  00:8337  21 66 A4            	LD		HL,array_aux_mapa_limpiar	
     477.  00:833A  11 38 1A            	LD		DE,TILMAP + POSMAPLIN7
     478.  00:833D  01 07 00            	LD		BC,NHABNIVEL
     479.  00:8340  CD 5C 00            	CALL	LDIRVM
     480.  00:8343                      	
     481.  00:8343  D9                  	EXX
     482.  00:8344                      fin_borra_mapa:
     483.  00:8344  C9                  	RET
     484.  00:8345                      
     485.  00:8345                      
     486.  00:8345                      
     487.  00:8345                      
     488.  00:8345                      
     489.  00:8345                      ;=====================================================
     490.  00:8345                      ;;PINTA_ARRAY
     491.  00:8345                      ;;=====================================================	
     492.  00:8345                      ;;funcion:  (pinta el mismo tile) se le pasa un array con posiciones de tiles y coordenadas x e y y los pinta en screen 2
     493.  00:8345                      ;;entrada:	wordaux1 (pos inicio sc2 donde pintar) y wordaux2 (puntero al array a pintar), BC (posición en tilemap) , D filas y E columnas
     494.  00:8345                      ;;salida:	-
     495.  00:8345                      ;;importante: necesita de una variable wordaux1 tipo WD (wordaux1: 	DW	0)
     496.  00:8345                      ;; ejemplo llamada:
     497.  00:8345                      	;~ LD		HL,array_tiles					;guardo puntero al array a pintar (como psar por referencia)
     498.  00:8345                      	;~ LD		(wordaux2),HL					;en la variable wordaux2
     499.  00:8345                      	;~ LD		HL,SC2MAP + 256 + 32			;calcula posición en tilemap
     500.  00:8345                      	;~ LD		(wordaux1),HL					;guarda valor pos tilemap en wordaux1
     501.  00:8345                      	;~ LD		B,H								;coloca posición tilemap BC
     502.  00:8345                      	;~ LD		C,L
     503.  00:8345                      	;~ LD		D,2								;nº de filas
     504.  00:8345                      	;~ LD		E,3								;nº de columnas
     505.  00:8345                      	;~ CALL	pinta_array
     506.  00:8345                      
     507.  00:8345                      pinta_array:
     508.  00:8345  F5                  	PUSH	AF
     509.  00:8346                      	
     510.  00:8346  2A 7D 83            	LD		HL, (wordaux1)
     511.  00:8349  44                  	LD		B, H							;coloca posición tilemap BC
     512.  00:834A  4D                  	LD		C, L
     513.  00:834B                      	
     514.  00:834B                      	;contamos con que la posición "global" en el tilemap está ya en BC
     515.  00:834B                      	;y el puntero al array a pintar en wordaux2 y la posición en tilemap sc2 en wordaux1
     516.  00:834B                      	;inicializa
     517.  00:834B  DB 99               	IN		 A,(REGEST)		;leer registro de estado (recomendado)
     518.  00:834D                      	
     519.  00:834D                      	;coloca puntero para pintar tile según BC
     520.  00:834D  79                  	LD		 A,C			;primero byte bajo	
     521.  00:834E  D3 99               	OUT		(REGEST),A
     522.  00:8350  78                  	LD		 A,B			;después byte alto  ********************** preguntar a Fernando cómo que byte bajo es B
     523.  00:8351  F6 40               	OR		1000000b		;+64
     524.  00:8353  D3 99               	OUT		(REGEST),A
     525.  00:8355                      
     526.  00:8355                      	
     527.  00:8355  2A 7F 83            	LD		HL,(wordaux2)	;HL es lo que se pintará y le he pasado el puntero del array tilemap a pintar
     528.  00:8358                      .pa_pinta_fila:
     529.  00:8358  43                  	LD		 B,E
     530.  00:8359                      .pa_pinta_columnas: 		;finta la fila (pintando las columnas)
     531.  00:8359  7E                  	LD		 A,(HL)
     532.  00:835A  D3 98               	OUT		(REGESCVDP),A	;escribe A en VRAM en la posición indicada por los dos OUT anteriores
     533.  00:835C  23                  	INC		HL
     534.  00:835D  10 FA               	DJNZ	.pa_pinta_columnas
     535.  00:835F                      	
     536.  00:835F                      	;no es una solución elegante lo de repetir código pero queda claro
     537.  00:835F                      	;por si hay otra fila
     538.  00:835F  E5                  	PUSH	HL
     539.  00:8360  2A 7D 83            	LD		HL,(wordaux1)
     540.  00:8363  01 20 00            	LD		BC,32
     541.  00:8366  09                  	ADD		HL,BC
     542.  00:8367  22 7D 83            	LD		(wordaux1),HL
     543.  00:836A  44                  	LD		B,H
     544.  00:836B  4D                  	LD		C,L
     545.  00:836C  E1                  	POP		HL
     546.  00:836D                      	
     547.  00:836D  79                  	LD		 A,C			;primero byte bajo	
     548.  00:836E  D3 99               	OUT		(REGEST),A
     549.  00:8370  78                  	LD		 A,B			;después byte alto 
     550.  00:8371  F6 40               	OR		1000000b		;+64
     551.  00:8373  D3 99               	OUT		(REGEST),A
     552.  00:8375                      	
     553.  00:8375                      	;si hay otra fila repite
     554.  00:8375  15                  	DEC		 D
     555.  00:8376  7A                  	LD		 A,D		;¿hay otra fila?
     556.  00:8377  B7                  	OR		 A
     557.  00:8378  C2 58 83            	JP		NZ,.pa_pinta_fila
     558.  00:837B                      	
     559.  00:837B  F1                  	POP		AF
     560.  00:837C                      	
     561.  00:837C                      fin_pinta_array:
     562.  00:837C  C9                  	RET
     563.  00:837D                      ;;variables asocidas a la función (no sé si dejarlo aquí y encapsularlo todo o hacerla reutilizable)
     564.  00:837D                      ;; por de pronto la dejo aquí
     565.  00:837D  00 00               wordaux1:		DW	0	;almacena la posición en el tilemap 0 al 675
     566.  00:837F  00 00               wordaux2:		DW	0	;almacena puntero a array de tiles (posiciones en realidad) a pintar (posiciones repetidas en los 3 bancos)
     567.  00:8381                      
     568.  00:8381                      
     569.  00:8381                      
     570.  00:8381                      
     571.  00:8381                      
     572.  00:8381                      ;;=====================================================
     573.  00:8381                      ;;PINTA_PUERTAS
     574.  00:8381                      ;;=====================================================	
     575.  00:8381                      ; función: 	examina A y mira si tiene que pintar puertas de los lados, arriba o abrajo o las escaleras (o no)
     576.  00:8381                      ; entrada: 	habitacion_actual 1 escalera 1 puerta arriba 1 pu der 1 pu aba 1 pu izq (si es 0 pinta pared)
     577.  00:8381                      ; salida: 	-
     578.  00:8381                      ; toca:		todo
     579.  00:8381                      pinta_puertas:
     580.  00:8381  CD 17 81            	CALL	pinta_parte_superior_pantalla	;pinta pasillo y paredes
     581.  00:8384                      
     582.  00:8384  CD A2 80            	CALL	localiza_info_habitacion	;busca qué puertas debe pintar y lo mete en habitación_actual
     583.  00:8387                      	
     584.  00:8387  3A 1D A1            	LD		 A, (habitacion_actual)		;se mete en A porque la función pide A y para no buscar el valor 4 veces
     585.  00:838A                      
     586.  00:838A                      ;	BIT		 4, A
     587.  00:838A                      ;	CALL	nz, pinta_escalera
     588.  00:838A                      
     589.  00:838A  CB 5F               	BIT		 3, A
     590.  00:838C  C4 B2 83            	CALL	nz, pinta_puerta_arr
     591.  00:838F                      
     592.  00:838F  CB 57               	BIT		 2, A
     593.  00:8391  C4 C5 83            	CALL	nz, pinta_puerta_der
     594.  00:8394                      
     595.  00:8394  CB 4F               	BIT		 1, A
     596.  00:8396  C4 9F 83            	CALL	nz, pinta_puerta_aba
     597.  00:8399                      	
     598.  00:8399  CB 47               	BIT		 0, A
     599.  00:839B  C4 D8 83            	CALL	nz, pinta_puerta_izq
     600.  00:839E                      fin_pinta_puertas:
     601.  00:839E  C9                  	RET
     602.  00:839F                      
     603.  00:839F                      
     604.  00:839F                      
     605.  00:839F                      
     606.  00:839F                      ;;=====================================================
     607.  00:839F                      ;;PINTA_PUERTA_ABA
     608.  00:839F                      ;;=====================================================	
     609.  00:839F                      ; función: 	pinta la puerta de abajo
     610.  00:839F                      ; entrada: 	array_puerta_abajo, wordaux2, wordaux1
     611.  00:839F                      ; salida: 	-
     612.  00:839F                      ; toca:		HL,BC, DE
     613.  00:839F                      pinta_puerta_aba:
     614.  00:839F  21 97 A4            	LD		HL, array_puerta_abajo			;guardo puntero al array a pintar (como pasar por referencia)
     615.  00:83A2  22 7F 83            	LD		(wordaux2), HL					;en la variable wordaux2
     616.  00:83A5  21 EE 19            	LD		HL, TILMAP + POSPUERABAJ		;calcula posición en tilemap
     617.  00:83A8  22 7D 83            	LD		(wordaux1), HL					;guarda valor pos tilemap en wordaux1
     618.  00:83AB  16 01               	LD		D, 1							;nº de filas
     619.  00:83AD  1E 04               	LD		E, 4							;nº de columnas
     620.  00:83AF  C3 45 83            	JP		pinta_array
     621.  00:83B2                      fin_pinta_puerta_aba:
     622.  00:83B2                      
     623.  00:83B2                      ;;=====================================================
     624.  00:83B2                      ;;PINTA_PUERTA_ARR
     625.  00:83B2                      ;;=====================================================	
     626.  00:83B2                      ; función: 	pinta la puerta de arriba
     627.  00:83B2                      ; entrada: 	array_puerta_arriba, wordaux2, wordaux1
     628.  00:83B2                      ; salida: 	-
     629.  00:83B2                      ; toca:		HL,BC, DE
     630.  00:83B2                      pinta_puerta_arr:
     631.  00:83B2  21 6E A4            	LD		HL, array_puerta_arriba			;guardo puntero al array a pintar (como pasar por referencia)
     632.  00:83B5  22 7F 83            	LD		(wordaux2), HL					;en la variable wordaux2
     633.  00:83B8  21 8E 18            	LD		HL, TILMAP + POSPUERARRI		;calcula posición en tilemap
     634.  00:83BB  22 7D 83            	LD		(wordaux1), HL					;guarda valor pos tilemap en wordaux1
     635.  00:83BE  16 05               	LD		D, 5							;nº de filas
     636.  00:83C0  1E 04               	LD		E, 4							;nº de columnas
     637.  00:83C2  C3 45 83            	JP		pinta_array
     638.  00:83C5                      fin_pinta_puerta_arr:
     639.  00:83C5                      
     640.  00:83C5                      
     641.  00:83C5                      ;;=====================================================
     642.  00:83C5                      ;;PINTA_PUERTA_DER
     643.  00:83C5                      ;;=====================================================	
     644.  00:83C5                      ; función: 	pinta la puerta de la derecha
     645.  00:83C5                      ; entrada: 	array_puerta_derecha, wordaux2, wordaux1
     646.  00:83C5                      ; salida: 	-
     647.  00:83C5                      ; toca:		HL,BC, DE
     648.  00:83C5                      pinta_puerta_der:
     649.  00:83C5  21 82 A4            	LD		HL, array_puerta_derecha		;guardo puntero al array a pintar (como pasar por referencia)
     650.  00:83C8  22 7F 83            	LD		(wordaux2), HL					;en la variable wordaux2
     651.  00:83CB  21 FC 18            	LD		HL, TILMAP + POSPUERDERE		;calcula posición en tilemap
     652.  00:83CE  22 7D 83            	LD		(wordaux1), HL					;guarda valor pos tilemap en wordaux1
     653.  00:83D1  16 07               	LD		D, 7							;nº de filas
     654.  00:83D3  1E 03               	LD		E, 3							;nº de columnas
     655.  00:83D5  C3 45 83            	JP		pinta_array
     656.  00:83D8                      fin_pinta_puerta_der:
     657.  00:83D8                      	
     658.  00:83D8                      ;;=====================================================
     659.  00:83D8                      ;;PINTA_PUERTA_IZQ
     660.  00:83D8                      ;;=====================================================	
     661.  00:83D8                      ; función: 	pinta la puerta de la izquierda
     662.  00:83D8                      ; entrada: 	array_puerta_izquierda, wordaux2, wordaux1
     663.  00:83D8                      ; salida: 	-
     664.  00:83D8                      ; toca:		HL,BC, DE
     665.  00:83D8                      pinta_puerta_izq:
     666.  00:83D8  21 9B A4            	LD		HL, array_puerta_izquierda		;guardo puntero al array a pintar (como pasar por referencia)
     667.  00:83DB  22 7F 83            	LD		(wordaux2), HL					;en la variable wordaux2
     668.  00:83DE  21 E1 18            	LD		HL, TILMAP + POSPUERIZQU		;calcula posición en tilemap
     669.  00:83E1  22 7D 83            	LD		(wordaux1), HL					;guarda valor pos tilemap en wordaux1
     670.  00:83E4  16 07               	LD		D, 7							;nº de filas
     671.  00:83E6  1E 03               	LD		E, 3							;nº de columnas
     672.  00:83E8  C3 45 83            	JP		pinta_array
     673.  00:83EB                      fin_pinta_puerta_izq:
     674.  00:83EB                      
     675.  00:83EB                      
     676.  00:83EB                      
     677.  00:83EB                      
     678.  00:83EB                      ;;=====================================================
     679.  00:83EB                      ;;POSICIONA_EN_MAPA
     680.  00:83EB                      ;;=====================================================	
     681.  00:83EB                      ; función: 	en el mapa de marcadores de la derecha/abajo marca un cuadro en gris o con un muñeco
     682.  00:83EB                      ;			según el valor de prota.posición pinta entrá un muñeco y por donde vaya pasando el prota
     683.  00:83EB                      ;			quedará en gris
     684.  00:83EB                      ; entrada: 	elemento_pintar_mapa, prota_pos_mapy, prota_pos_mapx
     685.  00:83EB                      ; salida: 	-
     686.  00:83EB                      ; toca:		todos
     687.  00:83EB                      posiciona_en_mapa:
     688.  00:83EB                      	;#0238 es la posición en mapa de tiles de la esquina superior izquierda del mapa (569 en decimal)
     689.  00:83EB  21 38 1A            	LD		HL, TILMAP + POSMAPA;pos inicial
     690.  00:83EE                      	
     691.  00:83EE                      	;ahora se le calcula la fila a pintar ya que va de abajo a arriba y no como en el mapa + columna
     692.  00:83EE                      .sumar_fila:
     693.  00:83EE  3A 4C A4            	LD		 A, (prota_pos_mapy)
     694.  00:83F1  FE 01               	CP		 1
     695.  00:83F3  28 2A               	JR		 Z, .fila_1
     696.  00:83F5  3A 4C A4            	LD		 A, (prota_pos_mapy)
     697.  00:83F8  FE 02               	CP		 2
     698.  00:83FA  28 2A               	JR		 Z, .fila_2
     699.  00:83FC  3A 4C A4            	LD		 A, (prota_pos_mapy)
     700.  00:83FF  FE 03               	CP		 3
     701.  00:8401  28 2A               	JR		 Z, .fila_3
     702.  00:8403  3A 4C A4            	LD		 A, (prota_pos_mapy)
     703.  00:8406  FE 04               	CP		 4
     704.  00:8408  28 2A               	JR		 Z, .fila_4
     705.  00:840A  3A 4C A4            	LD		 A, (prota_pos_mapy)
     706.  00:840D  FE 05               	CP		 5
     707.  00:840F  28 2A               	JR		 Z, .fila_5
     708.  00:8411  3A 4C A4            	LD		 A, (prota_pos_mapy)
     709.  00:8414  FE 06               	CP		 6
     710.  00:8416  28 2A               	JR		 Z, .sumar_columna
     711.  00:8418                      	;no consulto la 0 porque si no es ninguna de las anteriores es 0 y por tanto sería un jr fila_0
     712.  00:8418                      	
     713.  00:8418                      .fila_0:
     714.  00:8418  11 C0 00            	LD		DE, 192
     715.  00:841B  19                  	ADD		HL, DE			;nota: se que repito el ADD pero la otra opción es inicializar DE y ya tarda mucho la funicón (es por velicidad)
     716.  00:841C  C3 42 84            	JP		.sumar_columna
     717.  00:841F                      .fila_1:
     718.  00:841F  11 A0 00            	LD		DE, 160
     719.  00:8422  19                  	ADD		HL, DE
     720.  00:8423  C3 42 84            	JP		.sumar_columna
     721.  00:8426                      .fila_2:
     722.  00:8426  11 80 00            	LD		DE, 128
     723.  00:8429  19                  	ADD		HL, DE
     724.  00:842A  C3 42 84            	JP		.sumar_columna
     725.  00:842D                      .fila_3:
     726.  00:842D  11 60 00            	LD		DE, 96
     727.  00:8430  19                  	ADD		HL, DE
     728.  00:8431  C3 42 84            	JP		.sumar_columna
     729.  00:8434                      .fila_4:
     730.  00:8434  11 40 00            	LD		DE, 64
     731.  00:8437  19                  	ADD		HL, DE
     732.  00:8438  C3 42 84            	JP		.sumar_columna
     733.  00:843B                      .fila_5:
     734.  00:843B  11 20 00            	LD		DE, 32
     735.  00:843E  19                  	ADD		HL, DE
     736.  00:843F  C3 42 84            	JP		.sumar_columna
     737.  00:8442                      .fila_6:
     738.  00:8442                      	;pongo fila_6 por poner ya que si es la fila 6 equiv. a primera fila del mapa y por tanto no suma fila
     739.  00:8442                      	
     740.  00:8442                      	
     741.  00:8442                      .sumar_columna:
     742.  00:8442  3A 4B A4            	LD 		 A, (prota_pos_mapx) ;POS X
     743.  00:8445  16 00               	LD		 D, 0
     744.  00:8447  5F                  	LD		 E, A
     745.  00:8448  19                  	ADD		HL, DE
     746.  00:8449                      	
     747.  00:8449                      	;resultado en BC para usar en la función pinta_tile_suelto
     748.  00:8449  44                  	LD		 B, H
     749.  00:844A  4D                  	LD		 C, L
     750.  00:844B                      	
     751.  00:844B                      	;terminado de fijar la coordenada recuperamos a para ver el tipo
     752.  00:844B  3A 6D A4            	LD		 A, (elemento_pintar_mapa)
     753.  00:844E  FE 09               	CP		 TILEGRISM
     754.  00:8450  CA 58 84            	JP		 Z, pinta_pos_mapa_vacio
     755.  00:8453  16 13               	LD		 D, TILEPROTAM
     756.  00:8455  C3 5A 84            	JP		fin_pinta_pos_mapa
     757.  00:8458                      pinta_pos_mapa_vacio:
     758.  00:8458  16 09               	LD		 D, TILEGRISM	
     759.  00:845A                      
     760.  00:845A                      fin_pinta_pos_mapa:
     761.  00:845A  C3 7A 82            	JP		pinta_tile_suelto
     762.  00:845D                      fin_posiciona_en_mapa:
     763.  00:845D                      
     764.  00:845D                      
     765.  00:845D                      
     766.  00:845D                      
     767.  00:845D                      ;;=====================================================
     768.  00:845D                      ;;EFECTO_IMAGEN_TIRA_RELIQUIA
     769.  00:845D                      ;;=====================================================	
     770.  00:845D                      ; función: 	hace que el fondo de la pantalla parpadee N veces
     771.  00:845D                      ; entrada: 	actualiza_reliquias_sn
     772.  00:845D                      ; salida: 	-
     773.  00:845D                      ; toca: 	todo
     774.  00:845D                      efecto_imagen_tira_reliquia:
     775.  00:845D  3E 14               	LD		 A, 20;RETARDOREL
     776.  00:845F  47                  	LD		 B, A
     777.  00:8460                      
     778.  00:8460                      .parpadea_fondo:
     779.  00:8460  C5                  	PUSH	BC
     780.  00:8461  21 32 A4            	LD		HL, color_bomba1
     781.  00:8464  CD DE 80            	CALL	color_pantalla
     782.  00:8467                      	
     783.  00:8467                      	;~ PUSH	BC
     784.  00:8467                      	;~ LD		 A, 255
     785.  00:8467                      	;~ LD		 B, A
     786.  00:8467                      ;~ .bucle_de_espera:
     787.  00:8467                      	;~ NOP
     788.  00:8467                      	;~ DJNZ	 .bucle_de_espera
     789.  00:8467                      	;~ POP		BC
     790.  00:8467  76                  	HALT
     791.  00:8468                      
     792.  00:8468                      	
     793.  00:8468  21 35 A4            	LD		HL, color_bomba2
     794.  00:846B  CD DE 80            	CALL	color_pantalla
     795.  00:846E  C1                  	POP		BC
     796.  00:846F  10 EF               	DJNZ	.parpadea_fondo
     797.  00:8471                      	
     798.  00:8471  21 2F A4            	LD		HL, color_base
     799.  00:8474  C3 DE 80            	JP		color_pantalla
     800.  00:8477                      fin_efecto_imagen_tira_reliquia:
     801.  00:8477                      
     802.  00:8477                      
     803.  00:8477                      
     804.  00:8477                      
     805.  00:8477                      ;;=====================================================
     806.  00:8477                      ;;PINTA_OBJ_AYUDA
     807.  00:8477                      ;;=====================================================	
     808.  00:8477                      ; función: 	
     809.  00:8477                      ; entrada: 	A - objeto a mostrar
     810.  00:8477                      ; salida: 	-
     811.  00:8477                      ; toca:		AF, HL, BC, DE
     812.  00:8477                      pinta_obj_ayuda:
     813.  00:8477                      	;se recibe objeto an A desde fuera, por ejmplo LD		 A, CRUZOFF
     814.  00:8477  01 C0 A4            	LD		BC, array_ayudas
     815.  00:847A  CD D8 80            	CALL 	suma_A_BC
     816.  00:847D                      	
     817.  00:847D                      	;coloca pos array objeto a pintar en 
     818.  00:847D  ED 43 7F 83         	LD		(wordaux2), BC
     819.  00:8481                      	
     820.  00:8481  21 00 19            	LD		HL, TILMAP + 256	;calcula posición en tilemap + 256 por colocarse siempre en bank1
     821.  00:8484                      	
     822.  00:8484  ED 5F               	LD		 A, R				;obtengo un valor "random" entre 0 y 255
     823.  00:8486  E6 0F               	AND		00001111b			;me quedo con los 4 bits menos signif. y obtengo entre 0 y 15 (tamaño del array pos_ayudas)
     824.  00:8488  01 B0 A4            	LD		BC, pos_ayudas		;puntero a inicio de array pos_ayudas
     825.  00:848B  CD D8 80            	CALL 	suma_A_BC			;tengo en BC la pos de memoria de pos_ayudas
     826.  00:848E                      	
     827.  00:848E  0A                  	LD		 A, (BC)			;tengo en A la posición dentro del bank1 
     828.  00:848F  16 00               	LD		 D, 0
     829.  00:8491  5F                  	LD		 E, A
     830.  00:8492  19                  	ADD		HL, DE				;le sumo a HL la posción de inicio de tilemap + 256 + dónde colocar el objeto
     831.  00:8493                      
     832.  00:8493  22 7D 83            	LD		(wordaux1), HL		;pongo el valor en wordaux1
     833.  00:8496                      
     834.  00:8496  16 02               	LD		D, 2				;nº de filas
     835.  00:8498  1E 02               	LD		E, 2				;nº de columnas
     836.  00:849A  C3 45 83            	JP		pinta_array
     837.  00:849D                      fin_pinta_obj_ayuda:
     838.  00:849D                      
     839.  00:849D                      
     840.  00:849D                      
     841.  00:849D                      
     110   00:849D                      	
     111   00:849D                      	include "subr_sprites.asm"
       1.  00:849D                      
       2.  00:849D                      ;;=====================================================
       3.  00:849D                      ;;SUBRUTINAS ENCARGADAS DE MANEJAR LOS SPRITES
       4.  00:849D                      ;;=====================================================	
       5.  00:849D                      
       6.  00:849D                      
       7.  00:849D                      ;; PREGUNTAR SI A FERNANDO SI ES MEJOR USAR LISTAS O ALGO PARA AHORRAR CÓDIGO
       8.  00:849D                      
       9.  00:849D                      
      10.  00:849D                      
      11.  00:849D                      
      12.  00:849D                      ;;=====================================================
      13.  00:849D                      ;;CARGA_PATRONES_SPRITES_NIVEL
      14.  00:849D                      ;;=====================================================	
      15.  00:849D                      ; función: 	examina el nivel y carga los patrones específicos necesarios
      16.  00:849D                      ; entrada: 	-
      17.  00:849D                      ; salida: 	-
      18.  00:849D                      ; toca: 	-
      19.  00:849D                      carga_patrones_sprites_nivel:
      20.  00:849D                      	
      21.  00:849D  CD A8 84            	CALL 	carga_patrones_nivel_comunes
      22.  00:84A0                      	
      23.  00:84A0                      	;carga atrones no comunes
      24.  00:84A0  3A 48 A4            	LD		 A, (prota_nivel)
      25.  00:84A3  B7                  	OR		 A
      26.  00:84A4  CA B4 84            	JP		 Z, carga_patrones_sprites_nivel1
      27.  00:84A7                      	
      28.  00:84A7                      	
      29.  00:84A7                      fin_carga_patrones_sprites_nivel:
      30.  00:84A7  C9                  	RET		;dejo este ret de momento pero cuando la subrutina esté terminada sobrará
      31.  00:84A8                      
      32.  00:84A8                      	;RET comparo numeros con jp para incluir el RET con lo que el último ret me sobra
      33.  00:84A8                      
      34.  00:84A8                      ;;=====================================================
      35.  00:84A8                      ;;CARGA_PATRONES_SPRITES_NIVEL_COMUNES
      36.  00:84A8                      ;;=====================================================	
      37.  00:84A8                      ; función: 	carga los patrones comunes en todos los niveles
      38.  00:84A8                      ; entrada: 	-
      39.  00:84A8                      ; salida: 	-
      40.  00:84A8                      ; toca: 	-
      41.  00:84A8                      carga_patrones_nivel_comunes:	
      42.  00:84A8  21 9D 97            	LD		HL, sprites_comunes
      43.  00:84AB  11 00 38            	LD		DE, SPRTBL
      44.  00:84AE  01 C0 00            	LD		BC, fin_sprites_comunes-sprites_comunes
      45.  00:84B1  C3 5C 00            	JP		LDIRVM
      46.  00:84B4                      fin_carga_patrones_nivel_comunes:
      47.  00:84B4                      
      48.  00:84B4                      
      49.  00:84B4                      ;;=====================================================
      50.  00:84B4                      ;;CARGA_PATRONES_SPRITES_NIVEL1
      51.  00:84B4                      ;;=====================================================	
      52.  00:84B4                      ; función: 	copia los patrones de los sprites que e van a usar en el nivel 1 en vram
      53.  00:84B4                      ; entrada: 	-
      54.  00:84B4                      ; salida: 	-
      55.  00:84B4                      ; toca: 	-
      56.  00:84B4                      carga_patrones_sprites_nivel1:
      57.  00:84B4                      
      58.  00:84B4                      
      59.  00:84B4                      	;~ ;sprite sprite_reliquia
      60.  00:84B4                      	;~ LD		HL,sprite_reliquia
      61.  00:84B4                      	;~ LD		DE,#3880
      62.  00:84B4                      	;~ LD		BC,32				;32 bytes (sprites de 2 x 2)
      63.  00:84B4                      	;~ CALL	LDIRVM
      64.  00:84B4                      
      65.  00:84B4                      fin_carga_patrones_sprites:
      66.  00:84B4  C9                  	RET
      67.  00:84B5                      
      68.  00:84B5                      
      69.  00:84B5                      ;;=====================================================
      70.  00:84B5                      ;;ACTUALIZA_ARRAY_SPRITES_VRAM
      71.  00:84B5                      ;;=====================================================	
      72.  00:84B5                      ; función: 	copia el array con los valores de los sprites (pos, color, plano) en VRAM
      73.  00:84B5                      ; entrada: 	-
      74.  00:84B5                      ; salida: 	-
      75.  00:84B5                      ; toca: 	todos los registros. Como me interesa la velocidad, si necesito copiar de algo lo hago fuera
      76.  00:84B5                      render_sprites:
      77.  00:84B5                      	;volcando el array con toda la info de los sprites a la zona de atributos de sprites
      78.  00:84B5  21 F8 A4            	LD		HL,array_sprites
      79.  00:84B8  11 00 1B            	LD		DE,SPRART
      80.  00:84BB  01 80 00            	LD		BC,4 * 32				;32 sprites x 4 bytes controlando el sprite (Y, X, plano, color)
      81.  00:84BE  C3 5C 00            	JP		LDIRVM
      82.  00:84C1                      fin_actualiza_array_sprites_vram:
      83.  00:84C1                      
      84.  00:84C1                      
      85.  00:84C1                      ;;=====================================================
      86.  00:84C1                      ;;VUELCA_RESULTADO_PUNTOMIRA_ARRAY
      87.  00:84C1                      ;;=====================================================	
      88.  00:84C1                      ; función: 	coloca los valores del punto de mira en la variable array_sprites para ser volcados en VRAM
      89.  00:84C1                      ; entrada: 	array_sprites_pm, prota.XXXXX
      90.  00:84C1                      ; salida: 	-
      91.  00:84C1                      ; toca: 	-
      92.  00:84C1                      vuelca_resultado_puntomira_array:
      93.  00:84C1  DD 21 F8 A4         	LD		IX, array_sprites_pm
      94.  00:84C5                      	;posición y de los dos sprites que conforman el punto de mira
      95.  00:84C5  3A 39 A4            	LD		 A, (prota.posy)
      96.  00:84C8  DD 77 00            	LD		(IX  ), A
      97.  00:84CB  DD 77 04            	LD		(IX+4), A
      98.  00:84CE                      	;posición x de los dos sprites que conforman el punto de mira
      99.  00:84CE  3A 38 A4            	LD		 A, (prota.posx)
     100.  00:84D1  DD 77 01            	LD		(IX+1), A
     101.  00:84D4  DD 77 05            	LD		(IX+5), A
     102.  00:84D7                      	;plano
     103.  00:84D7  DD 36 02 00         	LD		(IX+2), 0
     104.  00:84DB  DD 36 06 04         	LD		(IX+6), 4	;al ser sprites de 16x16 hay que ir de 4 en 4
     105.  00:84DF                      	;color
     106.  00:84DF  3A 3A A4            	LD		 A, (prota.escena)
     107.  00:84E2  B7                  	OR		 A
     108.  00:84E3  C2 EF 84            	JP		NZ,.codigo_color_2
     109.  00:84E6                      .codigo_color_1:
     110.  00:84E6  DD 36 03 0F         	LD		(IX+3), COLBLANCO
     111.  00:84EA  DD 36 07 08         	LD		(IX+7), COLROJO
     112.  00:84EE  C9                  	RET
     113.  00:84EF                      .codigo_color_2:
     114.  00:84EF  DD 36 03 08         	LD		(IX+3), COLROJO
     115.  00:84F3  DD 36 07 0F         	LD		(IX+7), COLBLANCO
     116.  00:84F7  C9                  	RET
     117.  00:84F8                      fin_vuelca_resultado_puntomira_array:
     118.  00:84F8                      
     119.  00:84F8                      
     120.  00:84F8                      ;;=====================================================
     121.  00:84F8                      ;;CHECK_PLAYER
     122.  00:84F8                      ;;=====================================================	
     123.  00:84F8                      ; función: 	MIRA EL CONTROL Y APLICA LA LOGICA DE MOVIMIENTO DEL PROTAGONISTA
     124.  00:84F8                      ; entrada: 	-
     125.  00:84F8                      ; salida: 	-
     126.  00:84F8                      ; toca: 	A
     127.  00:84F8                      check_player:
     128.  00:84F8  CD 97 85            	CALL	update_controllers_status
     129.  00:84FB  B7                  	OR		 A
     130.  00:84FC  C8                  	RET		 Z						;si no se ha pulsado nada no se necesita mirar nada
     131.  00:84FD                      
     132.  00:84FD  CB 1F               	RR		 A
     133.  00:84FF  DC 18 85            	CALL	 C, mueve_arriba
     134.  00:8502  CB 1F               	RR		 A
     135.  00:8504  DC 34 85            	CALL	 C, mueve_abajo
     136.  00:8507  CB 1F               	RR		 A
     137.  00:8509  DC 43 85            	CALL	 C, mueve_izquierda
     138.  00:850C  CB 1F               	RR		 A
     139.  00:850E  DC 25 85            	CALL	 C, mueve_derecha
     140.  00:8511                      	
     141.  00:8511                      	;zona para mirar disparo Recibe A que tendrá 0000 0 0 X-letra M X-espacio 
     142.  00:8511  CD 50 85            	CALL	mira_disparo
     143.  00:8514                      	
     144.  00:8514  C3 C1 84            	JP		vuelca_resultado_puntomira_array
     145.  00:8517                      f;in_check_player:
     146.  00:8517  C9                  	RET
     147.  00:8518                      
     112   00:8518                      	
     113   00:8518                      	include "subr_teclado_joy.asm"
       1.  00:8518                      ;;=====================================================
       2.  00:8518                      ;;SUBRUTINAS QUE CAPTURN EL JOYSTICK Y TECLADO Y MUEVEN PUNTO DE MIRA
       3.  00:8518                      ;;=====================================================
       4.  00:8518                      
       5.  00:8518                      ;;=====================================================
       6.  00:8518                      ;;MUEVE_ARRIBA
       7.  00:8518                      ;;=====================================================	
       8.  00:8518                      ; función: 	decrementa y si se no sale de los límites el valor del punto de mira a la derecha
       9.  00:8518                      ; entrada: 	-
      10.  00:8518                      ; salida: 	-
      11.  00:8518                      ; toca: 	-
      12.  00:8518                      mueve_arriba:
      13.  00:8518  F5                  	PUSH		AF
      14.  00:8519                      	
      15.  00:8519  3A 39 A4            	LD		 	 A, (prota.posy)
      16.  00:851C  3D                  	DEC			 A
      17.  00:851D  CA 23 85            	JP			 Z,.no_decrementa_y
      18.  00:8520  32 39 A4            	LD			(prota.posy), A
      19.  00:8523                      	
      20.  00:8523                      .no_decrementa_y:
      21.  00:8523  F1                  	POP			AF
      22.  00:8524                      fin_mueve_arriba:
      23.  00:8524  C9                  	RET
      24.  00:8525                      
      25.  00:8525                      
      26.  00:8525                      ;;=====================================================
      27.  00:8525                      ;;MUEVE_DERECHA
      28.  00:8525                      ;;=====================================================	
      29.  00:8525                      ; función: 	incrementa si se no sale de los límites el valor del punto de mira a la derecha
      30.  00:8525                      ; entrada: 	-
      31.  00:8525                      ; salida: 	-
      32.  00:8525                      ; toca: 	-
      33.  00:8525                      mueve_derecha:
      34.  00:8525  F5                  	PUSH		AF
      35.  00:8526                      	
      36.  00:8526  3A 38 A4            	LD		 	 A, (prota.posx)
      37.  00:8529  3C                  	INC			 A
      38.  00:852A  FE EF               	CP			 A, LIMPANTDER - 16
      39.  00:852C  CA 32 85            	JP			 Z, .no_incrementa_x
      40.  00:852F  32 38 A4            	LD			(prota.posx), A
      41.  00:8532                      	
      42.  00:8532                      .no_incrementa_x:
      43.  00:8532  F1                  	POP			AF
      44.  00:8533                      fin_mueve_derecha:
      45.  00:8533  C9                  	RET
      46.  00:8534                      
      47.  00:8534                      
      48.  00:8534                      ;;=====================================================
      49.  00:8534                      ;;MUEVE_ABAJO
      50.  00:8534                      ;;=====================================================	
      51.  00:8534                      ; función: 	incrementa y si se no sale de los límites el valor del punto de mira abajo
      52.  00:8534                      ; entrada: 	-
      53.  00:8534                      ; salida: 	-
      54.  00:8534                      ; toca: 	-
      55.  00:8534                      mueve_abajo:
      56.  00:8534  F5                  	PUSH		AF
      57.  00:8535                      	
      58.  00:8535  3A 39 A4            	LD		 	 A, (prota.posy)
      59.  00:8538  3C                  	INC			 A
      60.  00:8539  FE 70               	CP			 A, LIMPANTABA - 16
      61.  00:853B  CA 41 85            	JP			 Z,.no_incrementa_y
      62.  00:853E  32 39 A4            	LD			(prota.posy), A
      63.  00:8541                      	
      64.  00:8541                      .no_incrementa_y:
      65.  00:8541  F1                  	POP			AF
      66.  00:8542                      fin_mueve_abajo:
      67.  00:8542  C9                  	RET
      68.  00:8543                      	
      69.  00:8543                      	
      70.  00:8543                      ;;=====================================================
      71.  00:8543                      ;;MUEVE_IZQUIERDA
      72.  00:8543                      ;;=====================================================	
      73.  00:8543                      ; función: 	decrementa x si se no sale de los límites el valor del punto de mira a la izquierda
      74.  00:8543                      ; entrada: 	-
      75.  00:8543                      ; salida: 	-
      76.  00:8543                      ; toca: 	-
      77.  00:8543                      mueve_izquierda:
      78.  00:8543  F5                  	PUSH		AF
      79.  00:8544                      	
      80.  00:8544  3A 38 A4            	LD		 	 A, (prota.posx)
      81.  00:8547  3D                  	DEC			 A
      82.  00:8548                      ;	CP			 A, LIMPANTIZQ
      83.  00:8548  CA 4E 85            	JP			 Z,.no_decrementa_x
      84.  00:854B  32 38 A4            	LD			(prota.posx), A
      85.  00:854E                      	
      86.  00:854E                      .no_decrementa_x:
      87.  00:854E  F1                  	POP			AF
      88.  00:854F                      fin_mueve_izquierda:
      89.  00:854F  C9                  	RET
      90.  00:8550                      
      91.  00:8550                      
      92.  00:8550                      
      93.  00:8550                      ;;=====================================================
      94.  00:8550                      ;;MIRA_DISPARO
      95.  00:8550                      ;;=====================================================	
      96.  00:8550                      ; función: 	Mira si se ha pulsado alguno de los dos disparos
      97.  00:8550                      ; entrada: 	A que tendrá 0000 0 0 X-letra M X-espacio 
      98.  00:8550                      ; salida: 	-
      99.  00:8550                      ; toca: 	A, B
     100.  00:8550                      mira_disparo:
     101.  00:8550                      .mira_boton_pulsado1:
     102.  00:8550  CB 1F               	RR		 A						;preparo en el carry si se ha pulsado botón 1
     103.  00:8552  D2 7B 85            	JP		 NC, .mira_boton_pulsado2					
     104.  00:8555  F5                  	PUSH	AF						;copia A para usarlo después
     105.  00:8556                      	;se ha pulsado barra o boton 1
     106.  00:8556  3A 3D A4            	LD		 A, (prota.cadencia)
     107.  00:8559  B7                  	OR		 A
     108.  00:855A  CA 68 85            	JP		 Z, .efectua_disparo	;toca efectuar disparo realmente porque se ha pulsado lo suficiente el disparo
     109.  00:855D                      .no_efectua_disparo: ;IF
     110.  00:855D  3D                  		DEC		 A
     111.  00:855E  32 3D A4            		LD		(prota.cadencia), A	;resto cadencia hasta próximo disparo "real" (no automático por haber pulsado una tecla e ir demasiado rápido)
     112.  00:8561  AF                  		XOR		 A 
     113.  00:8562  32 3A A4            		LD		(prota.escena), A
     114.  00:8565  C3 7A 85            		JP		.fin_mira_disparo1
     115.  00:8568                      .efectua_disparo:	;ELSE
     116.  00:8568                      		;cambio colores del sprite
     117.  00:8568  3A 3A A4            		LD		 A, (prota.escena)
     118.  00:856B  2F                  		CPL		 
     119.  00:856C  32 3A A4            		LD		(prota.escena), A
     120.  00:856F                      		;reseteo cadencia para el próximo disparo
     121.  00:856F  3E 04               		LD		 A, LIMCADENCIA						;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
     122.  00:8571  32 3D A4            		LD		 (prota.cadencia), A				;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
     123.  00:8574                      		;ejecuto sonido								;; ajustar cadencia y que cuando el disparo sea efectivo se reseteen los colores
     124.  00:8574  AF                  		XOR		 A
     125.  00:8575  0E 01               		LD		 C, 1
     126.  00:8577  CD 3F 8C            		CALL	ayFX_INIT	
     127.  00:857A                      .fin_mira_disparo1
     128.  00:857A                      
     129.  00:857A  F1                  	POP		AF
     130.  00:857B                      .mira_boton_pulsado2:
     131.  00:857B  CB 1F               	RR		 A
     132.  00:857D  D0                  	RET		 NC
     133.  00:857E                      	;se ha pulsado shift o boton 2
     134.  00:857E                      	
     135.  00:857E  3A 4A A4            	LD		 A, (prota_reliquias)	;miro si le quedan reliquias
     136.  00:8581  B7                  	OR		 A
     137.  00:8582  C8                  	RET		 Z						;si no le quedan salgo ya
     138.  00:8583                      	
     139.  00:8583                      	;actuaciones si se usa la reliquia botón 2 o M y quedn reliquias.. (antes ya se puso el valor en A)
     140.  00:8583  3A 4A A4            	LD		A, (prota_reliquias)
     141.  00:8586  3D                  	DEC		 A
     142.  00:8587  32 4A A4            	LD		(prota_reliquias), A
     143.  00:858A                      	
     144.  00:858A  3E 01               	LD		 A, 1
     145.  00:858C  0E 01               	LD		 C, 1
     146.  00:858E  CD 3F 8C            	CALL	ayFX_INIT
     147.  00:8591                      	
     148.  00:8591  CD 5D 84            	CALL 	efecto_imagen_tira_reliquia
     149.  00:8594                      	
     150.  00:8594  C3 5F 82            	JP		pinta_reliquias
     151.  00:8597                      fin_mira_disparo:
     152.  00:8597                      ;	RET		
     153.  00:8597                      
     154.  00:8597                      
     155.  00:8597                      ;;============================================================
     156.  00:8597                      ;;Código de D. Fernando García (BitVision) (al que siempre le estaré agradecido)
     157.  00:8597                      ;check_8th_keyboard_row
     158.  00:8597                      ;read_joy_0
     159.  00:8597                      ;check_8th_keyboard_row
     160.  00:8597                      ;check_4th_keyboard_row
     161.  00:8597                      ;;============================================================
     162.  00:8597                      ;;  usa constantes:
     163.  00:8597                      ;PSG_A  equ  0a0h  ;reg address
     164.  00:8597                      ;PSG_W  equ  0a1h  ;reg data WR
     165.  00:8597                      ;PSG_R  equ  0a2h  ;reg data
     166.  00:8597                      
     167.  00:8597                      ;;=====================================================
     168.  00:8597                      ;;update_controllers_status
     169.  00:8597                      ;;=====================================================	
     170.  00:8597                      ;depends on the next rountine
     171.  00:8597                      ;  returns
     172.  00:8597                      ;  a - 0P2TRLDU
     173.  00:8597                      
     174.  00:8597                      update_controllers_status:
     175.  00:8597  CD E2 85                 call  check_8th_keyboard_row
     176.  00:859A                      [4]  rrc    a
     176.  00:859A  CB 0F CB 0F CB 0F CB 0F 
     177.  00:85A2  47                       ld    b,a    		;save for later  xxxTRDUL
     178.  00:85A3                      
     179.  00:85A3  E6 01                    and    #01    		;save L
     180.  00:85A5  CB 27                    sla    a
     181.  00:85A7  CB 27                    sla    a    		;now 00000L00
     182.  00:85A9  4F                       ld    c,a    		;save for later
     183.  00:85AA                      
     184.  00:85AA  78                       ld    a,b    		;again we've got xxxTRDUL. I am interested on leaving 000000DU on a
     185.  00:85AB  CB 3F                    srl    a
     186.  00:85AD  E6 03                    and    00000011b
     187.  00:85AF                      						;we've got 000000DU on a
     188.  00:85AF  B1                       or    c    		;now we've got 00000LDU
     189.  00:85B0  4F                       ld    c,a    		;save for later
     190.  00:85B1                      
     191.  00:85B1  78                       ld    a,b
     192.  00:85B2  E6 18                    and    00011000b 	;we've got 000TR000
     193.  00:85B4  B1                       or    c
     194.  00:85B5                           ;finally    000TRLDU
     195.  00:85B5                      
     196.  00:85B5                           ;and    00000100   ;preserve just
     197.  00:85B5  47                       ld    b,a    		;save for later
     198.  00:85B6  CD F0 85                 call  check_4th_keyboard_row      ;check M & P
     199.  00:85B9  F5                       push  af
     200.  00:85BA  E6 04                    and    00000100b	;filter just M
     201.  00:85BC  87                       add    a
     202.  00:85BD  87                       add    a
     203.  00:85BE  87                       add    a           ;shift 3th to 6th bit
     204.  00:85BF  B0                       or    b           	;merge with previous
     205.  00:85C0  47                       ld    b,a
     206.  00:85C1                      
     207.  00:85C1  CD CE 85                 call  read_joy_0
     208.  00:85C4  E6 3F                    and    00111111b  	;we want just 002TRLDU  from joystick    (2 is second trigger)
     209.  00:85C6  B0                       or    b      		;added 000TRLDU from keyboard
     210.  00:85C7  47                       ld    b,a      	;save for later
     211.  00:85C8  F1                       pop    af      	; let's check on P
     212.  00:85C9                      
     213.  00:85C9  E6 20                    and    00100000b
     214.  00:85CB  87                       add    a      		;P status on 6th bit  ... so 0P2TRLDU
     215.  00:85CC  B0                       or    b
     216.  00:85CD                      
     217.  00:85CD  C9                       ret
     218.  00:85CE                      
     219.  00:85CE                      
     220.  00:85CE                      ;ret
     221.  00:85CE                      ;  a -            xx2TRLDU
     222.  00:85CE                      read_joy_0:
     223.  00:85CE  F3                         di
     224.  00:85CF  3E 0F                      ld    a,15
     225.  00:85D1  D3 A0                      out    [PSG_A],a
     226.  00:85D3  DB A2                      in    a,[PSG_R]
     227.  00:85D5  E6 BF                      and    10111111b        ;joy0
     228.  00:85D7                      
     229.  00:85D7  D3 A1                      out    [PSG_W],a        ;set joy0
     230.  00:85D9                      
     231.  00:85D9  3E 0E                      ld    a,14
     232.  00:85DB  D3 A0                      out    [PSG_A],a
     233.  00:85DD  DB A2                      in    a,[PSG_R]
     234.  00:85DF                      
     235.  00:85DF  FB                         ei
     236.  00:85E0  2F                         cpl
     237.  00:85E1                      
     238.  00:85E1  C9                         ret
     239.  00:85E2                      
     240.  00:85E2                      
     241.  00:85E2                      ;ret
     242.  00:85E2                      ;  a -      RDULxxxT
     243.  00:85E2                      check_8th_keyboard_row:
     244.  00:85E2  F3                       di
     245.  00:85E3  DB AA                    in    a,(#aa)
     246.  00:85E5  E6 F0                    and    #f0
     247.  00:85E7  F6 08                    or    8
     248.  00:85E9  D3 AA                    out    (#aa),a
     249.  00:85EB  DB A9                    in    a,(#a9)
     250.  00:85ED  FB                       ei
     251.  00:85EE  2F                       cpl
     252.  00:85EF                      
     253.  00:85EF  C9                       ret
     254.  00:85F0                      
     255.  00:85F0                      
     256.  00:85F0                      ;ret
     257.  00:85F0                      ;  a -      xxxxxMxx
     258.  00:85F0                      check_4th_keyboard_row:
     259.  00:85F0  F3                       di
     260.  00:85F1  DB AA                    in    a,(#aa)
     261.  00:85F3  E6 F0                    and    #f0
     262.  00:85F5  F6 04                    or    4
     263.  00:85F7  D3 AA                    out    (#aa),a
     264.  00:85F9  DB A9                    in    a,(#a9)
     265.  00:85FB  FB                       ei
     266.  00:85FC  2F                       cpl
     267.  00:85FD                      
     268.  00:85FD  C9                       ret
     269.  00:85FE                      
     270.  00:85FE                      ;--------------------------------------------
     271.  00:85FE                      
     272.  00:85FE                      
     273.  00:85FE                      
     274.  00:85FE                      
     275.  00:85FE                      
     276.  00:85FE                      
     277.  00:85FE                      
     278.  00:85FE                      
     114   00:85FE                      	
     115   00:85FE                      	include "subr_sonido.asm"
       1.  00:85FE                      
       2.  00:85FE                      ;;=====================================================
       3.  00:85FE                      ;;SUBRUTINAS PARA SONIDOS
       4.  00:85FE                      ;;=====================================================	
       5.  00:85FE                      
       6.  00:85FE                      ;;=====================================================
       7.  00:85FE                      ;;INICIALIZA_REPLAYER_EFECTOS_INTERRUPCIONES
       8.  00:85FE                      ;;=====================================================	
       9.  00:85FE                      ; función: 	inicializa: replayer de música, player de efectos e interrupciones
      10.  00:85FE                      ; entrada: 	-
      11.  00:85FE                      ; salida: 	-
      12.  00:85FE                      ; toca: 	HL, A
      13.  00:85FE                      inicializa_replayer_efectos_interrupciones:
      14.  00:85FE  F3                  	DI
      15.  00:85FF                      
      16.  00:85FF                      	;inicializacion de replayer musical
      17.  00:85FF  21 A7 8C            	LD		HL, song-99			; hl <- initial address of module - 99
      18.  00:8602  CD 3E 86            	CALL	PT3_INIT			; Inits PT3 player
      19.  00:8605                      		
      20.  00:8605                      	;inicializacion del reproductor de efectos sonoros
      21.  00:8605  21 72 96            	LD		HL, sfx_bank
      22.  00:8608  CD 2D 8C            	CALL	ayFX_SETUP
      23.  00:860B                      	
      24.  00:860B                      	;Engancha nuestra rutina de servicio al gancha que deja preparado la BIOS cuando se termina de pintar la pantalla (50 o 60 veces por segundo)
      25.  00:860B  3E C3               	LD		A, #C3
      26.  00:860D  32 9F FD            	LD		[H.TIMI], A
      27.  00:8610  21 18 86            	LD		HL, subrutina_isr
      28.  00:8613  22 A0 FD            	LD		[H.TIMI+1], HL
      29.  00:8616                      	
      30.  00:8616  FB                  	EI		;optimizacion:
      31.  00:8617                      			;piensa que las dos ultimas lineas podrian haber sido: 
      32.  00:8617                      			;ei						;primero ei
      33.  00:8617                      			;ld		[H.TIMI+1],hl	;luego este ld
      34.  00:8617                      									;PENSAR (y consultar ) PORQUE!!!!
      35.  00:8617                      fin_inicializa_replayer_efectos_interrupciones:
      36.  00:8617  C9                  	RET
      37.  00:8618                      
      38.  00:8618                      
      39.  00:8618                      
      40.  00:8618                      ;;=====================================================
      41.  00:8618                      ;;NUESTRA_ISR
      42.  00:8618                      ;;=====================================================	
      43.  00:8618                      ; función: 	envía datos al PSG + toca un trozo de música + toca trozo de 
      44.  00:8618                      ; entrada: 	-
      45.  00:8618                      ; salida: 	-
      46.  00:8618                      ; toca: 	HL, A
      47.  00:8618                      subrutina_isr:
      48.  00:8618  CD 83 8B            	CALL	PT3_ROUT			;envia los datos a los registros del PSG
      49.  00:861B  CD 8B 8A            	CALL	PT3_PLAY			;calcula el siguiente 'trocito' de musica que sera enviado al proxima vez
      50.  00:861E  C3 75 8C            	JP		ayFX_PLAY			;calcula el siguiente 'trocito' de efecto especial de sonido que sera enviado la proxima vez
      51.  00:8621                      fin_subrutina_isr:
      52.  00:8621                      	;RET
      53.  00:8621                      
      54.  00:8621                      
      55.  00:8621                      
      56.  00:8621                      ;;=====================================================
      57.  00:8621                      ;;DEFINICIÓN DE SUBRUTINAS DE FERNANDO PARA COMPRESIÓN Y SONIDO
      58.  00:8621                      ;;=====================================================
      59.  00:8621                      subrutinas_sonido:
      60.  00:8621                      	include	"PT3-ROM_sjasm.asm"
       1:  00:8621                      		; --- PT3 REPLAYER WORKING ON ROM ---
       2:  00:8621                      		; --- Can be assembled with asMSX ---
       3:  00:8621                      		; --- ROM version: MSX-KUN        ---
       4:  00:8621                      		; --- asMSX version 2: SapphiRe   ---
       5:  00:8621                      
       6:  00:8621                      ; Based on MSX full version of PT3 by Dioniso
       7:  00:8621                      ;
       8:  00:8621                      ; This version of the replayer can be used with any note table
       9:  00:8621                      ; This version also allows the use of PT3 commands
      10:  00:8621                      ; First 99 bytes of each PT3 module should be stripped off
      11:  00:8621                      ;
      12:  00:8621                      ; PLAY and PSG WRITE routines seperated to allow independent calls
      13:  00:8621                      ;
      14:  00:8621                      ; ROM LENGTH: 1549 bytes
      15:  00:8621                      ; RAM LENGTH:  576 bytes
      16:  00:8621                      
      17:  00:8621                      
      18:  00:8621                      
      19:  00:8621                      ;SJASM version by BTV 2016
      20:  00:8621                      
      21:  00:8621                      
      22:  00:8621                      		; --- CONSTANT VALUES DEFINITION ---
      23:  00:8621                      
      24:  00:8621                      ;ChannelsVars
      25:  00:8621                      ;struc	CHNPRM
      26:  00:8621                      ;reset group
      27:  00:8621  (00:0000)           CHNPRM_PsInOr	equ 0	;RESB 1
      28:  00:8621  (00:0001)           CHNPRM_PsInSm	equ 1	;RESB 1
      29:  00:8621  (00:0002)           CHNPRM_CrAmSl	equ 2	;RESB 1
      30:  00:8621  (00:0003)           CHNPRM_CrNsSl	equ 3	;RESB 1
      31:  00:8621  (00:0004)           CHNPRM_CrEnSl	equ 4	;RESB 1
      32:  00:8621  (00:0005)           CHNPRM_TSlCnt	equ 5	;RESB 1
      33:  00:8621  (00:0006)           CHNPRM_CrTnSl	equ 6	;RESW 1
      34:  00:8621  (00:0008)           CHNPRM_TnAcc	equ 8	;RESW 1
      35:  00:8621  (00:000A)           CHNPRM_COnOff	equ 10	;RESB 1
      36:  00:8621                      ;reset group
      37:  00:8621                      
      38:  00:8621  (00:000B)           CHNPRM_OnOffD	equ 11	;RESB 1
      39:  00:8621                      
      40:  00:8621                      ;IX for PTDECOD here [+12]
      41:  00:8621  (00:000C)           CHNPRM_OffOnD	equ 12	;RESB 1
      42:  00:8621  (00:000D)           CHNPRM_OrnPtr	equ 13	;RESW 1
      43:  00:8621  (00:000F)           CHNPRM_SamPtr	equ 15	;RESW 1
      44:  00:8621  (00:0011)           CHNPRM_NNtSkp	equ 17	;RESB 1
      45:  00:8621  (00:0012)           CHNPRM_Note	equ 18	;RESB 1
      46:  00:8621  (00:0013)           CHNPRM_SlToNt	equ 19	;RESB 1
      47:  00:8621  (00:0014)           CHNPRM_Env_En	equ 20	;RESB 1
      48:  00:8621  (00:0015)           CHNPRM_Flags	equ 21	;RESB 1
      49:  00:8621                       ;Enabled - 0,SimpleGliss - 2
      50:  00:8621  (00:0016)           CHNPRM_TnSlDl	equ 22	;RESB 1
      51:  00:8621  (00:0017)           CHNPRM_TSlStp	equ 23	;RESW 1
      52:  00:8621  (00:0019)           CHNPRM_TnDelt	equ 25	;RESW 1
      53:  00:8621  (00:001B)           CHNPRM_NtSkCn	equ 27	;RESB 1
      54:  00:8621  (00:001C)           CHNPRM_Volume	equ 28	;RESB 1
      55:  00:8621  (00:001D)           CHNPRM_Size	equ 29	;RESB 1
      56:  00:8621                      ;endstruc
      57:  00:8621                      
      58:  00:8621                      ;struc	AR
      59:  00:8621  (00:0000)           AR_TonA		equ 0	;RESW 1
      60:  00:8621  (00:0002)           AR_TonB		equ 2	;RESW 1
      61:  00:8621  (00:0004)           AR_TonC		equ 4	;RESW 1
      62:  00:8621  (00:0006)           AR_Noise	equ 6	;RESB 1
      63:  00:8621  (00:0007)           AR_Mixer	equ 7	;RESB 1
      64:  00:8621  (00:0008)           AR_AmplA	equ 8	;RESB 1
      65:  00:8621  (00:0009)           AR_AmplB	equ 9	;RESB 1
      66:  00:8621  (00:000A)           AR_AmplC	equ 10	;RESB 1
      67:  00:8621  (00:000B)           AR_Env		equ 11	;RESW 1
      68:  00:8621  (00:000D)           AR_EnvTp	equ 13	;RESB 1
      69:  00:8621                      ;endstruc
      70:  00:8621                      
      71:  00:8621                      		; --- CODE STARTS HERE ---
      72:  00:8621                      
      73:  00:8621  21 00 F0            CHECKLP:	LD	HL,PT3_SETUP
      74:  00:8624  CB FE               		SET	7,[HL]
      75:  00:8626  CB 46               		BIT	0,[HL]
      76:  00:8628  C8                  		RET	Z
      77:  00:8629  E1                  		POP	HL
      78:  00:862A  21 7A F0            		LD	HL,DelyCnt
      79:  00:862D  34                  		INC	[HL]
      80:  00:862E  21 3E F0            		LD	HL,ChanA+CHNPRM_NtSkCn
      81:  00:8631  34                  		INC	[HL]
      82:  00:8632  AF                  PT3_MUTE:	XOR	A
      83:  00:8633  67                  		LD	H,A
      84:  00:8634  6F                  		LD	L,A
      85:  00:8635  32 48 F1            		LD	[AYREGS+AR_AmplA],A
      86:  00:8638  22 49 F1            		LD	[AYREGS+AR_AmplB],HL
      87:  00:863B  C3 84 8B            		JP	ROUT_A0
      88:  00:863E                      
      89:  00:863E                      PT3_INIT:	;HL - AddressOfModule - 100
      90:  00:863E  22 01 F0            		LD [PT3_MODADDR],HL
      91:  00:8641  E5                  		PUSH HL
      92:  00:8642  11 64 00            		LD DE,100
      93:  00:8645  19                  		ADD HL,DE
      94:  00:8646  7E                  		LD A,[HL]
      95:  00:8647  32 1C F0            		LD [PT3_Delay],A
      96:  00:864A  E5                  		PUSH HL
      97:  00:864B  DD E1               		POP IX
      98:  00:864D  19                  		ADD HL,DE
      99:  00:864E  22 03 F0            		LD [PT3_CrPsPtr],HL
     100:  00:8651  DD 5E 02            		LD E,[IX+102-100]
     101:  00:8654  19                  		ADD HL,DE
     102:  00:8655  23                  		INC HL
     103:  00:8656  22 18 F0            		LD [PT3_LPosPtr],HL
     104:  00:8659  D1                  		POP DE
     105:  00:865A  DD 6E 03            		LD L,[IX+103-100]
     106:  00:865D  DD 66 04            		LD H,[IX+104-100]
     107:  00:8660  19                  		ADD HL,DE
     108:  00:8661  22 1A F0            		LD [PT3_PatsPtr],HL
     109:  00:8664  21 A9 00            		LD HL,169
     110:  00:8667  19                  		ADD HL,DE
     111:  00:8668  22 07 F0            		LD [PT3_OrnPtrs],HL
     112:  00:866B  21 69 00            		LD HL,105
     113:  00:866E  19                  		ADD HL,DE
     114:  00:866F  22 05 F0            		LD [PT3_SAMPTRS],HL
     115:  00:8672  21 00 F0            		LD HL,PT3_SETUP
     116:  00:8675  CB BE               		RES 7,[HL]
     117:  00:8677                      
     118:  00:8677                      		; --- note table data depacker ---
     119:  00:8677                      		; Depacks first 12 tones of each tone table
     120:  00:8677                      
     121:  00:8677  11 F8 8B            		LD DE,T_PACK
     122:  00:867A  01 B1 F1            		LD BC,T1_+(2*49)-1
     123:  00:867D  1A                  .TP_0:		LD A,[DE]
     124:  00:867E  13                  		INC DE
     125:  00:867F  FE 1E               		CP 15*2
     126:  00:8681  30 06               		JR NC,.TP_1
     127:  00:8683  67                  		LD H,A
     128:  00:8684  1A                  		LD A,[DE]
     129:  00:8685  6F                  		LD L,A
     130:  00:8686  13                  		INC DE
     131:  00:8687  18 07               		JR .TP_2
     132:  00:8689  D5                  .TP_1:		PUSH DE
     133:  00:868A  16 00               		LD D,0
     134:  00:868C  5F                  		LD E,A
     135:  00:868D  19                  		ADD HL,DE
     136:  00:868E  19                  		ADD HL,DE
     137:  00:868F  D1                  		POP DE
     138:  00:8690  7C                  .TP_2:		LD A,H
     139:  00:8691  02                  		LD [BC],A
     140:  00:8692  0B                  		DEC BC
     141:  00:8693  7D                  		LD A,L
     142:  00:8694  02                  		LD [BC],A
     143:  00:8695  0B                  		DEC BC
     144:  00:8696  D6 F0               		SUB $F0
     145:  00:8698  20 E3               		JR NZ,.TP_0
     146:  00:869A                      
     147:  00:869A                      		; --- INITIALIZE PT3 VARIABLES ---
     148:  00:869A  21 23 F0            		LD HL,VARS
     149:  00:869D  77                  		LD [HL],A
     150:  00:869E  11 24 F0            		LD DE,VARS+1
     151:  00:86A1  01 2C 01            		LD BC,VAR0END-VARS-1
     152:  00:86A4  ED B0               		LDIR
     153:  00:86A6                      
     154:  00:86A6  3C                  		INC A
     155:  00:86A7  32 7A F0            		LD [DelyCnt],A
     156:  00:86AA  21 01 F0            		LD HL,$F001 ;H - CHNPRM_Volume, L - CHNPRM_NtSkCn
     157:  00:86AD  22 3E F0            		LD [ChanA+CHNPRM_NtSkCn],HL
     158:  00:86B0  22 5B F0            		LD [ChanB+CHNPRM_NtSkCn],HL
     159:  00:86B3  22 78 F0            		LD [ChanC+CHNPRM_NtSkCn],HL
     160:  00:86B6                      
     161:  00:86B6  21 F4 8B            		LD HL,EMPTYSAMORN
     162:  00:86B9  22 12 F0            		LD [PT3_AdInPtA],HL ;ptr to zero
     163:  00:86BC  22 30 F0            		LD [ChanA+CHNPRM_OrnPtr],HL ;ornament 0 is "0,1,0"
     164:  00:86BF  22 4D F0            		LD [ChanB+CHNPRM_OrnPtr],HL ;in all versions from
     165:  00:86C2  22 6A F0            		LD [ChanC+CHNPRM_OrnPtr],HL ;3.xx to 3.6x and VTII
     166:  00:86C5                      
     167:  00:86C5  22 32 F0            		LD [ChanA+CHNPRM_SamPtr],HL ;S1 There is no default
     168:  00:86C8  22 4F F0            		LD [ChanB+CHNPRM_SamPtr],HL ;S2 sample in PT3, so, you
     169:  00:86CB  22 6C F0            		LD [ChanC+CHNPRM_SamPtr],HL ;S3 can comment S1,2,3; see
     170:  00:86CE                      					    ;also EMPTYSAMORN comment
     171:  00:86CE                      
     172:  00:86CE                      		; --- NOTE TABLE CREATOR (c) Ivan Roshin, adapted by SapphiRe ---
     173:  00:86CE  DD 7E FF            		LD A,[IX+99-100] ;TONE TABLE NUMBER
     174:  00:86D1  17                  		RLA
     175:  00:86D2  E6 07               		AND 7
     176:  00:86D4  21 A4 8B            		LD HL,NT_DATA
     177:  00:86D7  D5                  		PUSH DE
     178:  00:86D8  50                  		LD D,B		; ld d,0 (bc is 0000 after LDIR)
     179:  00:86D9  87                  		ADD A,A
     180:  00:86DA  5F                  		LD E,A
     181:  00:86DB  19                  		ADD HL,DE	; hl -> init of correct note table data
     182:  00:86DC  5E                  		LD E,[HL]
     183:  00:86DD  23                  		INC HL
     184:  00:86DE  CB 3B               		SRL E
     185:  00:86E0  9F                  		SBC A,A
     186:  00:86E1  E6 A7               		AND $A7			;$00 (NOP) or $A7 (AND A)
     187:  00:86E3  32 21 F0            		LD [PT3_NTL3],A		; CORRECT INSTRUCTION, DEPENDS OF SELECTED TABLE
     188:  00:86E6  3E C9               		LD A,$C9		; RET CODE
     189:  00:86E8  32 22 F0            		LD [PT3_NTL3+1],A	; RET PLACED
     190:  00:86EB  EB                  		EX DE,HL
     191:  00:86EC  C1                  		POP BC ;BC=T1_
     192:  00:86ED  09                  		ADD HL,BC
     193:  00:86EE                      
     194:  00:86EE  1A                  		LD A,[DE]                           
     195:  00:86EF                      
     196:  00:86EF  01 B4 8B            		LD BC,T_
     197:  00:86F2  81                  		ADD A,C
     198:  00:86F3  4F                  		LD C,A
     199:  00:86F4  88                  		ADC A,B
     200:  00:86F5                      
     201:  00:86F5  91                  		SUB C
     202:  00:86F6  47                  		LD B,A
     203:  00:86F7  C5                  		PUSH BC
     204:  00:86F8  11 80 F0            		LD DE,NT_
     205:  00:86FB  D5                  		PUSH DE
     206:  00:86FC                      
     207:  00:86FC  06 0C               		LD B,12
     208:  00:86FE  C5                  .L1:		PUSH BC
     209:  00:86FF  4E                  		LD C,[HL]
     210:  00:8700  23                  		INC HL
     211:  00:8701  E5                  		PUSH HL
     212:  00:8702  46                  		LD B,[HL]
     213:  00:8703                      
     214:  00:8703  D5                  		PUSH DE
     215:  00:8704  EB                  		EX DE,HL
     216:  00:8705  11 17 00            		LD DE,23
     217:  00:8708  DD 26 08            		db $DD,$26,$08	;LD XH,8
     218:  00:870B                      
     219:  00:870B  CB 38               .L2:		SRL B
     220:  00:870D  CB 19               		RR C
     221:  00:870F  CD 21 F0            .L3:		CALL PT3_NTL3	;AND A or NOP
     222:  00:8712  79                  		LD A,C
     223:  00:8713  8A                  		ADC A,D	;=ADC 0
     224:  00:8714  77                  		LD [HL],A
     225:  00:8715  23                  		INC HL
     226:  00:8716  78                  		LD A,B
     227:  00:8717  8A                  		ADC A,D
     228:  00:8718  77                  		LD [HL],A
     229:  00:8719  19                  		ADD HL,DE
     230:  00:871A  DD 25               		db $DD,$25	;DEC XH
     231:  00:871C  20 ED               		JR NZ,.L2
     232:  00:871E                      
     233:  00:871E  D1                  		POP DE
     234:  00:871F  13                  		INC DE
     235:  00:8720  13                  		INC DE
     236:  00:8721  E1                  		POP HL
     237:  00:8722  23                  		INC HL
     238:  00:8723  C1                  		POP BC
     239:  00:8724  10 D8               		DJNZ .L1
     240:  00:8726                      
     241:  00:8726  E1                  		POP HL
     242:  00:8727  D1                  		POP DE
     243:  00:8728                      
     244:  00:8728  7B                  		LD A,E
     245:  00:8729  D5                  		PUSH DE
     246:  00:872A  11 C0 8B            		LD DE,TCOLD_1
     247:  00:872D  BB                  		CP E
     248:  00:872E  D1                  		POP DE
     249:  00:872F  20 05               		JR NZ,.CORR_1
     250:  00:8731  3E FD               		LD A,$FD
     251:  00:8733  32 AE F0            		LD [NT_+$2E],A
     252:  00:8736                      
     253:  00:8736  1A                  .CORR_1:	LD A,[DE]
     254:  00:8737  A7                  		AND A
     255:  00:8738  28 11               		JR Z,.TC_EXIT
     256:  00:873A  1F                  		RRA
     257:  00:873B  F5                  		PUSH AF
     258:  00:873C  87                  		ADD A,A
     259:  00:873D  4F                  		LD C,A
     260:  00:873E  09                  		ADD HL,BC
     261:  00:873F  F1                  		POP AF
     262:  00:8740  30 02               		JR NC,.CORR_2
     263:  00:8742  35                  		DEC [HL]
     264:  00:8743  35                  		DEC [HL]
     265:  00:8744  34                  .CORR_2:	INC [HL]
     266:  00:8745  A7                  		AND A
     267:  00:8746  ED 42               		SBC HL,BC
     268:  00:8748  13                  		INC DE
     269:  00:8749  18 EB               		JR .CORR_1
     270:  00:874B                      
     271:  00:874B                      .TC_EXIT:	;POP AF
     272:  00:874B                      
     273:  00:874B                      		; --- CREATE PT3 VOLUME TABLE (c) Ivan Roshin, adapted by SapphiRe ---
     274:  00:874B  21 11 00            		ld	hl,$11
     275:  00:874E  54                  		ld	d,h
     276:  00:874F  5C                  		ld	e,h
     277:  00:8750  DD 21 50 F1         		ld	IX,VT_+16
     278:  00:8754  06 0F               		ld	b,15
     279:  00:8756  E5                  .INITV1:	push	hl
     280:  00:8757  19                  		add	hl,de
     281:  00:8758  EB                  		ex	de,hl
     282:  00:8759  ED 62               		sbc	hl,hl
     283:  00:875B  48                  		ld	c,b
     284:  00:875C  06 10               		ld	b,16
     285:  00:875E  7D                  .INITV2:	ld	a,l
     286:  00:875F  17                  		rla
     287:  00:8760  7C                  		ld	a,h
     288:  00:8761  CE 00               		adc	a,0
     289:  00:8763  DD 77 00            		ld	[ix],a
     290:  00:8766  DD 23               		inc	ix
     291:  00:8768  19                  		add	hl,de
     292:  00:8769  10 F3               		djnz	.INITV2
     293:  00:876B  E1                  		pop	hl
     294:  00:876C  7B                  		ld	a,e
     295:  00:876D  FE 77               		cp	$77
     296:  00:876F  20 01               		jr	nz,.INITV3
     297:  00:8771  1C                  		inc	e
     298:  00:8772  41                  .INITV3:	ld	b,c
     299:  00:8773  10 E1               		djnz	.INITV1
     300:  00:8775                      
     301:  00:8775  C9                  		RET
     302:  00:8776                      
     303:  00:8776                      		;pattern decoder
     304:  00:8776  DD 36 08 00         PD_OrSm:	LD [IX+(CHNPRM_Env_En-12)],0
     305:  00:877A  CD 00 89            		CALL SETORN
     306:  00:877D  0A                  		LD A,[BC]
     307:  00:877E  03                  		INC BC
     308:  00:877F  0F                  		RRCA
     309:  00:8780                      
     310:  00:8780  87                  PD_SAM:		ADD A,A
     311:  00:8781  5F                  PD_SAM_:	LD E,A
     312:  00:8782  16 00               		LD D,0
     313:  00:8784  2A 05 F0            		LD HL,[PT3_SAMPTRS]
     314:  00:8787  19                  		ADD HL,DE
     315:  00:8788  5E                  		LD E,[HL]
     316:  00:8789  23                  		INC HL
     317:  00:878A  56                  		LD D,[HL]
     318:  00:878B  2A 01 F0            		LD HL,[PT3_MODADDR]
     319:  00:878E  19                  		ADD HL,DE
     320:  00:878F  DD 75 03            		LD [IX+(CHNPRM_SamPtr-12)],L
     321:  00:8792  DD 74 04            		LD [IX+(CHNPRM_SamPtr+1-12)],H
     322:  00:8795  18 41               		JR PD_LOOP
     323:  00:8797                      
     324:  00:8797  07                  PD_VOL:		RLCA
     325:  00:8798  07                  		RLCA
     326:  00:8799  07                  		RLCA
     327:  00:879A  07                  		RLCA
     328:  00:879B  DD 77 10            		LD [IX+(CHNPRM_Volume-12)],A
     329:  00:879E  18 3B               		JR PD_LP2
     330:  00:87A0                      	
     331:  00:87A0  DD 77 08            PD_EOff:	LD [IX+(CHNPRM_Env_En-12)],A
     332:  00:87A3  DD 77 F4            		LD [IX+(CHNPRM_PsInOr-12)],A
     333:  00:87A6  18 33               		JR PD_LP2
     334:  00:87A8                      
     335:  00:87A8  3D                  PD_SorE:	DEC A
     336:  00:87A9  20 07               		JR NZ,PD_ENV
     337:  00:87AB  0A                  		LD A,[BC]
     338:  00:87AC  03                  		INC BC
     339:  00:87AD  DD 77 05            		LD [IX+(CHNPRM_NNtSkp-12)],A
     340:  00:87B0  18 29               		JR PD_LP2
     341:  00:87B2                      
     342:  00:87B2  CD E4 88            PD_ENV:		CALL SETENV
     343:  00:87B5  18 24               		JR PD_LP2
     344:  00:87B7                      
     345:  00:87B7  CD 00 89            PD_ORN:		CALL SETORN
     346:  00:87BA  18 1C               		JR PD_LOOP
     347:  00:87BC                             
     348:  00:87BC  DD 77 08            PD_ESAM:	LD [IX+(CHNPRM_Env_En-12)],A
     349:  00:87BF  DD 77 F4            		LD [IX+(CHNPRM_PsInOr-12)],A
     350:  00:87C2  C4 E4 88            		CALL NZ,SETENV
     351:  00:87C5  0A                  		LD A,[BC]
     352:  00:87C6  03                  		INC BC
     353:  00:87C7  18 B8               		JR PD_SAM_
     354:  00:87C9                      
     355:  00:87C9  DD 7E 06            PTDECOD:	LD A,[IX+(CHNPRM_Note-12)]
     356:  00:87CC  32 0F F0            		LD [PT3_PrNote],A
     357:  00:87CF  DD 6E FA            		LD L,[IX+(CHNPRM_CrTnSl-12)]
     358:  00:87D2  DD 66 FB            		LD H,[IX+(CHNPRM_CrTnSl+1-12)]
     359:  00:87D5  22 10 F0            		LD [PT3_PrSlide],HL
     360:  00:87D8                      
     361:  00:87D8  11 10 20            PD_LOOP:	LD DE,$2010
     362:  00:87DB  0A                  PD_LP2:		LD A,[BC]
     363:  00:87DC  03                  		INC BC
     364:  00:87DD  83                  		ADD A,E
     365:  00:87DE  38 96               		JR C,PD_OrSm
     366:  00:87E0  82                  		ADD A,D
     367:  00:87E1  28 4A               		JR Z,PD_FIN
     368:  00:87E3  38 9B               		JR C,PD_SAM
     369:  00:87E5  83                  		ADD A,E
     370:  00:87E6  28 25               		JR Z,PD_REL
     371:  00:87E8  38 AD               		JR C,PD_VOL
     372:  00:87EA  83                  		ADD A,E
     373:  00:87EB  28 B3               		JR Z,PD_EOff
     374:  00:87ED  38 B9               		JR C,PD_SorE
     375:  00:87EF  C6 60               		ADD A,96
     376:  00:87F1  38 20               		JR C,PD_NOTE
     377:  00:87F3  83                  		ADD A,E
     378:  00:87F4  38 C1               		JR C,PD_ORN
     379:  00:87F6  82                  		ADD A,D
     380:  00:87F7  38 0F               		JR C,PD_NOIS
     381:  00:87F9  83                  		ADD A,E
     382:  00:87FA  38 C0               		JR C,PD_ESAM
     383:  00:87FC  87                  		ADD A,A
     384:  00:87FD  5F                  		LD E,A
     385:  00:87FE  21 39 68            		LD HL,(SPCCOMS+$DF20) % 65536	; Adapted from original Speccy version (saves 6 bytes)
     386:  00:8801  19                  		ADD HL,DE
     387:  00:8802  5E                  		LD E,[HL]
     388:  00:8803  23                  		INC HL
     389:  00:8804  56                  		LD D,[HL]
     390:  00:8805  D5                  		PUSH DE
     391:  00:8806  18 D0               		JR PD_LOOP
     392:  00:8808                      
     393:  00:8808  32 7E F0            PD_NOIS:	LD [Ns_Base],A
     394:  00:880B  18 CE               		JR PD_LP2
     395:  00:880D                      
     396:  00:880D  DD CB 09 86         PD_REL:		RES 0,[IX+(CHNPRM_Flags-12)]
     397:  00:8811  18 08               		JR PD_RES
     398:  00:8813                      	
     399:  00:8813  DD 77 06            PD_NOTE:	LD [IX+(CHNPRM_Note-12)],A
     400:  00:8816  DD CB 09 C6         		SET 0,[IX+(CHNPRM_Flags-12)]
     401:  00:881A  AF                  		XOR A
     402:  00:881B                      
     403:  00:881B  ED 73 09 F0         PD_RES:		LD [PT3_PDSP],SP
     404:  00:881F  DD F9               		LD SP,IX
     405:  00:8821  67                  		LD H,A
     406:  00:8822  6F                  		LD L,A
     407:  00:8823  E5                  		PUSH HL
     408:  00:8824  E5                  		PUSH HL
     409:  00:8825  E5                  		PUSH HL
     410:  00:8826  E5                  		PUSH HL
     411:  00:8827  E5                  		PUSH HL
     412:  00:8828  E5                  		PUSH HL
     413:  00:8829  ED 7B 09 F0         		LD SP,[PT3_PDSP]
     414:  00:882D                      
     415:  00:882D  DD 7E 05            PD_FIN:		LD A,[IX+(CHNPRM_NNtSkp-12)]
     416:  00:8830  DD 77 0F            		LD [IX+(CHNPRM_NtSkCn-12)],A
     417:  00:8833  C9                  		RET
     418:  00:8834                      
     419:  00:8834  DD CB 09 96         C_PORTM:	RES 2,[IX+(CHNPRM_Flags-12)]
     420:  00:8838  0A                  		LD A,[BC]
     421:  00:8839  03                  		INC BC
     422:  00:883A                      		;SKIP PRECALCULATED TONE DELTA [BECAUSE
     423:  00:883A                      		;CANNOT BE RIGHT AFTER PT3 COMPILATION]
     424:  00:883A  03                  		INC BC
     425:  00:883B  03                  		INC BC
     426:  00:883C  DD 77 0A            		LD [IX+(CHNPRM_TnSlDl-12)],A
     427:  00:883F  DD 77 F9            		LD [IX+(CHNPRM_TSlCnt-12)],A
     428:  00:8842  11 80 F0            		LD DE,NT_
     429:  00:8845  DD 7E 06            		LD A,[IX+(CHNPRM_Note-12)]
     430:  00:8848  DD 77 07            		LD [IX+(CHNPRM_SlToNt-12)],A
     431:  00:884B  87                  		ADD A,A
     432:  00:884C  6F                  		LD L,A
     433:  00:884D  26 00               		LD H,0
     434:  00:884F  19                  		ADD HL,DE
     435:  00:8850  7E                  		LD A,[HL]
     436:  00:8851  23                  		INC HL
     437:  00:8852  66                  		LD H,[HL]
     438:  00:8853  6F                  		LD L,A
     439:  00:8854  E5                  		PUSH HL
     440:  00:8855  3A 0F F0            		LD A,[PT3_PrNote]
     441:  00:8858  DD 77 06            		LD [IX+(CHNPRM_Note-12)],A
     442:  00:885B  87                  		ADD A,A
     443:  00:885C  6F                  		LD L,A
     444:  00:885D  26 00               		LD H,0
     445:  00:885F  19                  		ADD HL,DE
     446:  00:8860  5E                  		LD E,[HL]
     447:  00:8861  23                  		INC HL
     448:  00:8862  56                  		LD D,[HL]
     449:  00:8863  E1                  		POP HL
     450:  00:8864  ED 52               		SBC HL,DE
     451:  00:8866  DD 75 0D            		LD [IX+(CHNPRM_TnDelt-12)],L
     452:  00:8869  DD 74 0E            		LD [IX+(CHNPRM_TnDelt+1-12)],H
     453:  00:886C  ED 5B 10 F0         		LD DE,[PT3_PrSlide]
     454:  00:8870  DD 73 FA            		LD [IX+(CHNPRM_CrTnSl-12)],E
     455:  00:8873  DD 72 FB            		LD [IX+(CHNPRM_CrTnSl+1-12)],D
     456:  00:8876  0A                  		LD A,[BC] ;SIGNED TONE STEP
     457:  00:8877  03                  		INC BC
     458:  00:8878  08                  		EX AF,AF'
     459:  00:8879  0A                  		LD A,[BC]
     460:  00:887A  03                  		INC BC
     461:  00:887B  A7                  		AND A
     462:  00:887C  28 01               		JR Z,.NOSIG
     463:  00:887E  EB                  		EX DE,HL
     464:  00:887F  ED 52               .NOSIG:	SBC HL,DE
     465:  00:8881  F2 89 88            		JP P,SET_STP
     466:  00:8884  2F                  		CPL
     467:  00:8885  08                  		EX AF,AF'
     468:  00:8886  ED 44               		NEG
     469:  00:8888  08                  		EX AF,AF'
     470:  00:8889  DD 77 0C            SET_STP:	LD [IX+(CHNPRM_TSlStp+1-12)],A
     471:  00:888C  08                  		EX AF,AF'
     472:  00:888D  DD 77 0B            		LD [IX+(CHNPRM_TSlStp-12)],A
     473:  00:8890  DD 36 FE 00         		LD [IX+(CHNPRM_COnOff-12)],0
     474:  00:8894  C9                  		RET
     475:  00:8895                      
     476:  00:8895  DD CB 09 D6         C_GLISS:	SET 2,[IX+(CHNPRM_Flags-12)]
     477:  00:8899  0A                  		LD A,[BC]
     478:  00:889A  03                  		INC BC
     479:  00:889B  DD 77 0A            		LD [IX+(CHNPRM_TnSlDl-12)],A
     480:  00:889E  DD 77 F9            		LD [IX+(CHNPRM_TSlCnt-12)],A
     481:  00:88A1  0A                  		LD A,[BC]
     482:  00:88A2  03                  		INC BC
     483:  00:88A3  08                  		EX AF,AF'
     484:  00:88A4  0A                  		LD A,[BC]
     485:  00:88A5  03                  		INC BC
     486:  00:88A6  18 E1               		JR SET_STP
     487:  00:88A8                      
     488:  00:88A8  0A                  C_SMPOS:	LD A,[BC]
     489:  00:88A9  03                  		INC BC
     490:  00:88AA  DD 77 F5            		LD [IX+(CHNPRM_PsInSm-12)],A
     491:  00:88AD  C9                  		RET
     492:  00:88AE                      
     493:  00:88AE  0A                  C_ORPOS:	LD A,[BC]
     494:  00:88AF  03                  		INC BC
     495:  00:88B0  DD 77 F4            		LD [IX+(CHNPRM_PsInOr-12)],A
     496:  00:88B3  C9                  		RET
     497:  00:88B4                      
     498:  00:88B4  0A                  C_VIBRT:	LD A,[BC]
     499:  00:88B5  03                  		INC BC
     500:  00:88B6  DD 77 FF            		LD [IX+(CHNPRM_OnOffD-12)],A
     501:  00:88B9  DD 77 FE            		LD [IX+(CHNPRM_COnOff-12)],A
     502:  00:88BC  0A                  		LD A,[BC]
     503:  00:88BD  03                  		INC BC
     504:  00:88BE  DD 77 00            		LD [IX+(CHNPRM_OffOnD-12)],A
     505:  00:88C1  AF                  		XOR A
     506:  00:88C2  DD 77 F9            		LD [IX+(CHNPRM_TSlCnt-12)],A
     507:  00:88C5  DD 77 FA            		LD [IX+(CHNPRM_CrTnSl-12)],A
     508:  00:88C8  DD 77 FB            		LD [IX+(CHNPRM_CrTnSl+1-12)],A
     509:  00:88CB  C9                  		RET
     510:  00:88CC                      
     511:  00:88CC  0A                  C_ENGLS:	LD A,[BC]
     512:  00:88CD  03                  		INC BC
     513:  00:88CE  32 1E F0            		LD [PT3_Env_Del],A
     514:  00:88D1  32 7D F0            		LD [CurEDel],A
     515:  00:88D4  0A                  		LD A,[BC]
     516:  00:88D5  03                  		INC BC
     517:  00:88D6  6F                  		LD L,A
     518:  00:88D7  0A                  		LD A,[BC]
     519:  00:88D8  03                  		INC BC
     520:  00:88D9  67                  		LD H,A
     521:  00:88DA  22 1F F0            		LD [PT3_ESldAdd],HL
     522:  00:88DD  C9                  		RET
     523:  00:88DE                      
     524:  00:88DE  0A                  C_DELAY:	LD A,[BC]
     525:  00:88DF  03                  		INC BC
     526:  00:88E0  32 1C F0            		LD [PT3_Delay],A
     527:  00:88E3  C9                  		RET
     528:  00:88E4                      	
     529:  00:88E4  DD 73 08            SETENV:		LD [IX+(CHNPRM_Env_En-12)],E
     530:  00:88E7  32 4D F1            		LD [AYREGS+AR_EnvTp],A
     531:  00:88EA  0A                  		LD A,[BC]
     532:  00:88EB  03                  		INC BC
     533:  00:88EC  67                  		LD H,A
     534:  00:88ED  0A                  		LD A,[BC]
     535:  00:88EE  03                  		INC BC
     536:  00:88EF  6F                  		LD L,A
     537:  00:88F0  22 4E F1            		LD [EnvBase],HL
     538:  00:88F3  AF                  		XOR A
     539:  00:88F4  DD 77 F4            		LD [IX+(CHNPRM_PsInOr-12)],A
     540:  00:88F7  32 7D F0            		LD [CurEDel],A
     541:  00:88FA  67                  		LD H,A
     542:  00:88FB  6F                  		LD L,A
     543:  00:88FC  22 7B F0            		LD [CurESld],HL
     544:  00:88FF  C9                  C_NOP:		RET
     545:  00:8900                      
     546:  00:8900  87                  SETORN:		ADD A,A
     547:  00:8901  5F                  		LD E,A
     548:  00:8902  16 00               		LD D,0
     549:  00:8904  DD 72 F4            		LD [IX+(CHNPRM_PsInOr-12)],D
     550:  00:8907  2A 07 F0            		LD HL,[PT3_OrnPtrs]
     551:  00:890A  19                  		ADD HL,DE
     552:  00:890B  5E                  		LD E,[HL]
     553:  00:890C  23                  		INC HL
     554:  00:890D  56                  		LD D,[HL]
     555:  00:890E  2A 01 F0            		LD HL,[PT3_MODADDR]
     556:  00:8911  19                  		ADD HL,DE
     557:  00:8912  DD 75 01            		LD [IX+(CHNPRM_OrnPtr-12)],L
     558:  00:8915  DD 74 02            		LD [IX+(CHNPRM_OrnPtr+1-12)],H
     559:  00:8918  C9                  		RET
     560:  00:8919                      
     561:  00:8919                      		;ALL 16 ADDRESSES TO PROTECT FROM BROKEN PT3 MODULES
     562:  00:8919  FF 88               SPCCOMS:	dw C_NOP
     563:  00:891B  95 88               		dw C_GLISS
     564:  00:891D  34 88               		dw C_PORTM
     565:  00:891F  A8 88               		dw C_SMPOS
     566:  00:8921  AE 88               		dw C_ORPOS
     567:  00:8923  B4 88               		dw C_VIBRT
     568:  00:8925  FF 88               		dw C_NOP
     569:  00:8927  FF 88               		dw C_NOP
     570:  00:8929  CC 88               		dw C_ENGLS
     571:  00:892B  DE 88               		dw C_DELAY
     572:  00:892D  FF 88               		dw C_NOP
     573:  00:892F  FF 88               		dw C_NOP
     574:  00:8931  FF 88               		dw C_NOP
     575:  00:8933  FF 88               		dw C_NOP
     576:  00:8935  FF 88               		dw C_NOP
     577:  00:8937  FF 88               		dw C_NOP
     578:  00:8939                      
     579:  00:8939  AF                  CHREGS:		XOR A
     580:  00:893A  32 4A F1            		LD [AYREGS+AR_AmplC],A
     581:  00:893D  DD CB 15 46         		BIT 0,[IX+CHNPRM_Flags]
     582:  00:8941  E5                  		PUSH HL
     583:  00:8942  CA 68 8A            		JP Z,.CH_EXIT
     584:  00:8945  ED 73 0B F0         		LD [PT3_CSP],SP
     585:  00:8949  DD 6E 0D            		LD L,[IX+CHNPRM_OrnPtr]
     586:  00:894C  DD 66 0E            		LD H,[IX+CHNPRM_OrnPtr+1]
     587:  00:894F  F9                  		LD SP,HL
     588:  00:8950  D1                  		POP DE
     589:  00:8951  67                  		LD H,A
     590:  00:8952  DD 7E 00            		LD A,[IX+CHNPRM_PsInOr]
     591:  00:8955  6F                  		LD L,A
     592:  00:8956  39                  		ADD HL,SP
     593:  00:8957  3C                  		INC A
     594:  00:8958  BA                  		CP D
     595:  00:8959  38 01               		JR C,.CH_ORPS
     596:  00:895B  7B                  		LD A,E
     597:  00:895C  DD 77 00            .CH_ORPS:	LD [IX+CHNPRM_PsInOr],A
     598:  00:895F  DD 7E 12            		LD A,[IX+CHNPRM_Note]
     599:  00:8962  86                  		ADD A,[HL]
     600:  00:8963  F2 67 89            		JP P,.CH_NTP
     601:  00:8966  AF                  		XOR A
     602:  00:8967  FE 60               .CH_NTP:	CP 96
     603:  00:8969  38 02               		JR C,.CH_NOK
     604:  00:896B  3E 5F               		LD A,95
     605:  00:896D  87                  .CH_NOK:	ADD A,A
     606:  00:896E  08                  		EX AF,AF'
     607:  00:896F  DD 6E 0F            		LD L,[IX+CHNPRM_SamPtr]
     608:  00:8972  DD 66 10            		LD H,[IX+CHNPRM_SamPtr+1]
     609:  00:8975  F9                  		LD SP,HL
     610:  00:8976  D1                  		POP DE
     611:  00:8977  26 00               		LD H,0
     612:  00:8979  DD 7E 01            		LD A,[IX+CHNPRM_PsInSm]
     613:  00:897C  47                  		LD B,A
     614:  00:897D  87                  		ADD A,A
     615:  00:897E  87                  		ADD A,A
     616:  00:897F  6F                  		LD L,A
     617:  00:8980  39                  		ADD HL,SP
     618:  00:8981  F9                  		LD SP,HL
     619:  00:8982  78                  		LD A,B
     620:  00:8983  3C                  		INC A
     621:  00:8984  BA                  		CP D
     622:  00:8985  38 01               		JR C,.CH_SMPS
     623:  00:8987  7B                  		LD A,E
     624:  00:8988  DD 77 01            .CH_SMPS:	LD [IX+CHNPRM_PsInSm],A
     625:  00:898B  C1                  		POP BC
     626:  00:898C  E1                  		POP HL
     627:  00:898D  DD 5E 08            		LD E,[IX+CHNPRM_TnAcc]
     628:  00:8990  DD 56 09            		LD D,[IX+CHNPRM_TnAcc+1]
     629:  00:8993  19                  		ADD HL,DE
     630:  00:8994  CB 70               		BIT 6,B
     631:  00:8996  28 06               		JR Z,.CH_NOAC
     632:  00:8998  DD 75 08            		LD [IX+CHNPRM_TnAcc],L
     633:  00:899B  DD 74 09            		LD [IX+CHNPRM_TnAcc+1],H
     634:  00:899E  EB                  .CH_NOAC:	EX DE,HL
     635:  00:899F  08                  		EX AF,AF'
     636:  00:89A0  6F                  		LD L,A
     637:  00:89A1  26 00               		LD H,0
     638:  00:89A3  31 80 F0            		LD SP,NT_
     639:  00:89A6  39                  		ADD HL,SP
     640:  00:89A7  F9                  		LD SP,HL
     641:  00:89A8  E1                  		POP HL
     642:  00:89A9  19                  		ADD HL,DE
     643:  00:89AA  DD 5E 06            		LD E,[IX+CHNPRM_CrTnSl]
     644:  00:89AD  DD 56 07            		LD D,[IX+CHNPRM_CrTnSl+1]
     645:  00:89B0  19                  		ADD HL,DE
     646:  00:89B1  ED 7B 0B F0         		LD SP,[PT3_CSP]
     647:  00:89B5  E3                  		EX [SP],HL
     648:  00:89B6  AF                  		XOR A
     649:  00:89B7  DD B6 05            		OR [IX+CHNPRM_TSlCnt]
     650:  00:89BA  28 3E               		JR Z,.CH_AMP
     651:  00:89BC  DD 35 05            		DEC [IX+CHNPRM_TSlCnt]
     652:  00:89BF  20 39               		JR NZ,.CH_AMP
     653:  00:89C1  DD 7E 16            		LD A,[IX+CHNPRM_TnSlDl]
     654:  00:89C4  DD 77 05            		LD [IX+CHNPRM_TSlCnt],A
     655:  00:89C7  DD 6E 17            		LD L,[IX+CHNPRM_TSlStp]
     656:  00:89CA  DD 66 18            		LD H,[IX+CHNPRM_TSlStp+1]
     657:  00:89CD  7C                  		LD A,H
     658:  00:89CE  19                  		ADD HL,DE
     659:  00:89CF  DD 75 06            		LD [IX+CHNPRM_CrTnSl],L
     660:  00:89D2  DD 74 07            		LD [IX+CHNPRM_CrTnSl+1],H
     661:  00:89D5  DD CB 15 56         		BIT 2,[IX+CHNPRM_Flags]
     662:  00:89D9  20 1F               		JR NZ,.CH_AMP
     663:  00:89DB  DD 5E 19            		LD E,[IX+CHNPRM_TnDelt]
     664:  00:89DE  DD 56 1A            		LD D,[IX+CHNPRM_TnDelt+1]
     665:  00:89E1  A7                  		AND A
     666:  00:89E2  28 01               		JR Z,.CH_STPP
     667:  00:89E4  EB                  		EX DE,HL
     668:  00:89E5  ED 52               .CH_STPP:	SBC HL,DE
     669:  00:89E7  FA FA 89            		JP M,.CH_AMP
     670:  00:89EA  DD 7E 13            		LD A,[IX+CHNPRM_SlToNt]
     671:  00:89ED  DD 77 12            		LD [IX+CHNPRM_Note],A
     672:  00:89F0  AF                  		XOR A
     673:  00:89F1  DD 77 05            		LD [IX+CHNPRM_TSlCnt],A
     674:  00:89F4  DD 77 06            		LD [IX+CHNPRM_CrTnSl],A
     675:  00:89F7  DD 77 07            		LD [IX+CHNPRM_CrTnSl+1],A
     676:  00:89FA  DD 7E 02            .CH_AMP:	LD A,[IX+CHNPRM_CrAmSl]
     677:  00:89FD  CB 79               		BIT 7,C
     678:  00:89FF  28 13               		JR Z,.CH_NOAM
     679:  00:8A01  CB 71               		BIT 6,C
     680:  00:8A03  28 07               		JR Z,.CH_AMIN
     681:  00:8A05  FE 0F               		CP 15
     682:  00:8A07  28 0B               		JR Z,.CH_NOAM
     683:  00:8A09  3C                  		INC A
     684:  00:8A0A  18 05               		JR .CH_SVAM
     685:  00:8A0C  FE F1               .CH_AMIN:	CP -15
     686:  00:8A0E  28 04               		JR Z,.CH_NOAM
     687:  00:8A10  3D                  		DEC A
     688:  00:8A11  DD 77 02            .CH_SVAM:	LD [IX+CHNPRM_CrAmSl],A
     689:  00:8A14  6F                  .CH_NOAM:	LD L,A
     690:  00:8A15  78                  		LD A,B
     691:  00:8A16  E6 0F               		AND 15
     692:  00:8A18  85                  		ADD A,L
     693:  00:8A19  F2 1D 8A            		JP P,.CH_APOS
     694:  00:8A1C  AF                  		XOR A
     695:  00:8A1D  FE 10               .CH_APOS:	CP 16
     696:  00:8A1F  38 02               		JR C,.CH_VOL
     697:  00:8A21  3E 0F               		LD A,15
     698:  00:8A23  DD B6 1C            .CH_VOL:	OR [IX+CHNPRM_Volume]
     699:  00:8A26  6F                  		LD L,A
     700:  00:8A27  26 00               		LD H,0
     701:  00:8A29  11 40 F1            		LD DE,VT_
     702:  00:8A2C  19                  		ADD HL,DE
     703:  00:8A2D  7E                  		LD A,[HL]
     704:  00:8A2E  CB 41               .CH_ENV:	BIT 0,C
     705:  00:8A30  20 03               		JR NZ,.CH_NOEN
     706:  00:8A32  DD B6 14            		OR [IX+CHNPRM_Env_En]
     707:  00:8A35  32 4A F1            .CH_NOEN:	LD [AYREGS+AR_AmplC],A
     708:  00:8A38  CB 78               		BIT 7,B
     709:  00:8A3A  79                  		LD A,C
     710:  00:8A3B  28 19               		JR Z,.NO_ENSL
     711:  00:8A3D  17                  		RLA
     712:  00:8A3E  17                  		RLA
     713:  00:8A3F  CB 2F               		SRA A
     714:  00:8A41  CB 2F               		SRA A
     715:  00:8A43  CB 2F               		SRA A
     716:  00:8A45  DD 86 04            		ADD A,[IX+CHNPRM_CrEnSl] ;SEE COMMENT BELOW
     717:  00:8A48  CB 68               		BIT 5,B
     718:  00:8A4A  28 03               		JR Z,.NO_ENAC
     719:  00:8A4C  DD 77 04            		LD [IX+CHNPRM_CrEnSl],A
     720:  00:8A4F  21 1D F0            .NO_ENAC:	LD HL,PT3_AddToEn
     721:  00:8A52  86                  		ADD A,[HL] ;BUG IN PT3 - NEED WORD HERE.
     722:  00:8A53                      			   ;FIX IT IN NEXT VERSION?
     723:  00:8A53  77                  		LD [HL],A
     724:  00:8A54  18 0E               		JR .CH_MIX
     725:  00:8A56  1F                  .NO_ENSL:	RRA
     726:  00:8A57  DD 86 03            		ADD A,[IX+CHNPRM_CrNsSl]
     727:  00:8A5A  32 7F F0            		LD [AddToNs],A
     728:  00:8A5D  CB 68               		BIT 5,B
     729:  00:8A5F  28 03               		JR Z,.CH_MIX
     730:  00:8A61  DD 77 03            		LD [IX+CHNPRM_CrNsSl],A
     731:  00:8A64  78                  .CH_MIX:	LD A,B
     732:  00:8A65  1F                  		RRA
     733:  00:8A66  E6 48               		AND $48
     734:  00:8A68  21 47 F1            .CH_EXIT:	LD HL,AYREGS+AR_Mixer
     735:  00:8A6B  B6                  		OR [HL]
     736:  00:8A6C  0F                  		RRCA
     737:  00:8A6D  77                  		LD [HL],A
     738:  00:8A6E  E1                  		POP HL
     739:  00:8A6F  AF                  		XOR A
     740:  00:8A70  DD B6 0A            		OR [IX+CHNPRM_COnOff]
     741:  00:8A73  C8                  		RET Z
     742:  00:8A74  DD 35 0A            		DEC [IX+CHNPRM_COnOff]
     743:  00:8A77  C0                  		RET NZ
     744:  00:8A78  DD AE 15            		XOR [IX+CHNPRM_Flags]
     745:  00:8A7B  DD 77 15            		LD [IX+CHNPRM_Flags],A
     746:  00:8A7E  1F                  		RRA
     747:  00:8A7F  DD 7E 0B            		LD A,[IX+CHNPRM_OnOffD]
     748:  00:8A82  38 03               		JR C,.CH_ONDL
     749:  00:8A84  DD 7E 0C            		LD A,[IX+CHNPRM_OffOnD]
     750:  00:8A87  DD 77 0A            .CH_ONDL:	LD [IX+CHNPRM_COnOff],A
     751:  00:8A8A  C9                  		RET
     752:  00:8A8B                      
     753:  00:8A8B  AF                  PT3_PLAY:	XOR A
     754:  00:8A8C  32 1D F0            		LD [PT3_AddToEn],A
     755:  00:8A8F  32 47 F1            		LD [AYREGS+AR_Mixer],A
     756:  00:8A92  3D                  		DEC A
     757:  00:8A93  32 4D F1            		LD [AYREGS+AR_EnvTp],A
     758:  00:8A96  21 7A F0            		LD HL,DelyCnt
     759:  00:8A99  35                  		DEC [HL]
     760:  00:8A9A  C2 21 8B            		JP NZ,.PL2
     761:  00:8A9D  21 3E F0            		LD HL,ChanA+CHNPRM_NtSkCn
     762:  00:8AA0  35                  		DEC [HL]
     763:  00:8AA1  20 4E               		JR NZ,.PL1B
     764:  00:8AA3  ED 4B 12 F0         		LD BC,[PT3_AdInPtA]
     765:  00:8AA7  0A                  		LD A,[BC]
     766:  00:8AA8  A7                  		AND A
     767:  00:8AA9  20 3B               		JR NZ,.PL1A
     768:  00:8AAB  57                  		LD D,A
     769:  00:8AAC  32 7E F0            		LD [Ns_Base],A
     770:  00:8AAF  2A 03 F0            		LD HL,[PT3_CrPsPtr]
     771:  00:8AB2  23                  		INC HL
     772:  00:8AB3  7E                  		LD A,[HL]
     773:  00:8AB4  3C                  		INC A
     774:  00:8AB5  20 08               		JR NZ,.PLNLP
     775:  00:8AB7  CD 21 86            		CALL CHECKLP
     776:  00:8ABA  2A 18 F0            		LD HL,[PT3_LPosPtr]
     777:  00:8ABD  7E                  		LD A,[HL]
     778:  00:8ABE  3C                  		INC A
     779:  00:8ABF  22 03 F0            .PLNLP:	LD [PT3_CrPsPtr],HL
     780:  00:8AC2  3D                  		DEC A
     781:  00:8AC3  87                  		ADD A,A
     782:  00:8AC4  5F                  		LD E,A
     783:  00:8AC5  CB 12               		RL D
     784:  00:8AC7  2A 1A F0            		LD HL,[PT3_PatsPtr]
     785:  00:8ACA  19                  		ADD HL,DE
     786:  00:8ACB  ED 5B 01 F0         		LD DE,[PT3_MODADDR]
     787:  00:8ACF  ED 73 0D F0         		LD [PT3_PSP],SP
     788:  00:8AD3  F9                  		LD SP,HL
     789:  00:8AD4  E1                  		POP HL
     790:  00:8AD5  19                  		ADD HL,DE
     791:  00:8AD6  44                  		LD B,H
     792:  00:8AD7  4D                  		LD C,L
     793:  00:8AD8  E1                  		POP HL
     794:  00:8AD9  19                  		ADD HL,DE
     795:  00:8ADA  22 14 F0            		LD [PT3_AdInPtB],HL
     796:  00:8ADD  E1                  		POP HL
     797:  00:8ADE  19                  		ADD HL,DE
     798:  00:8ADF  22 16 F0            		LD [PT3_AdInPtC],HL
     799:  00:8AE2  ED 7B 0D F0         		LD SP,[PT3_PSP]
     800:  00:8AE6                      
     801:  00:8AE6  DD 21 2F F0         .PL1A:		LD IX,ChanA+12
     802:  00:8AEA  CD C9 87            		CALL PTDECOD
     803:  00:8AED  ED 43 12 F0         		LD [PT3_AdInPtA],BC
     804:  00:8AF1                      
     805:  00:8AF1  21 5B F0            .PL1B:		LD HL,ChanB+CHNPRM_NtSkCn
     806:  00:8AF4  35                  		DEC [HL]
     807:  00:8AF5  20 0F               		JR NZ,.PL1C
     808:  00:8AF7  DD 21 4C F0         		LD IX,ChanB+12
     809:  00:8AFB  ED 4B 14 F0         		LD BC,[PT3_AdInPtB]
     810:  00:8AFF  CD C9 87            		CALL PTDECOD
     811:  00:8B02  ED 43 14 F0         		LD [PT3_AdInPtB],BC
     812:  00:8B06                      
     813:  00:8B06  21 78 F0            .PL1C:		LD HL,ChanC+CHNPRM_NtSkCn
     814:  00:8B09  35                  		DEC [HL]
     815:  00:8B0A  20 0F               		JR NZ,.PL1D
     816:  00:8B0C  DD 21 69 F0         		LD IX,ChanC+12
     817:  00:8B10  ED 4B 16 F0         		LD BC,[PT3_AdInPtC]
     818:  00:8B14  CD C9 87            		CALL PTDECOD
     819:  00:8B17  ED 43 16 F0         		LD [PT3_AdInPtC],BC
     820:  00:8B1B                      
     821:  00:8B1B  3A 1C F0            .PL1D:		LD A,[PT3_Delay]
     822:  00:8B1E  32 7A F0            		LD [DelyCnt],A
     823:  00:8B21                      
     824:  00:8B21  DD 21 23 F0         .PL2:		LD IX,ChanA
     825:  00:8B25  2A 40 F1            		LD HL,[AYREGS+AR_TonA]
     826:  00:8B28  CD 39 89            		CALL CHREGS
     827:  00:8B2B  22 40 F1            		LD [AYREGS+AR_TonA],HL
     828:  00:8B2E  3A 4A F1            		LD A,[AYREGS+AR_AmplC]
     829:  00:8B31  32 48 F1            		LD [AYREGS+AR_AmplA],A
     830:  00:8B34  DD 21 40 F0         		LD IX,ChanB
     831:  00:8B38  2A 42 F1            		LD HL,[AYREGS+AR_TonB]
     832:  00:8B3B  CD 39 89            		CALL CHREGS
     833:  00:8B3E  22 42 F1            		LD [AYREGS+AR_TonB],HL
     834:  00:8B41  3A 4A F1            		LD A,[AYREGS+AR_AmplC]
     835:  00:8B44  32 49 F1            		LD [AYREGS+AR_AmplB],A
     836:  00:8B47  DD 21 5D F0         		LD IX,ChanC
     837:  00:8B4B  2A 44 F1            		LD HL,[AYREGS+AR_TonC]
     838:  00:8B4E  CD 39 89            		CALL CHREGS
     839:  00:8B51  22 44 F1            		LD [AYREGS+AR_TonC],HL
     840:  00:8B54                      
     841:  00:8B54  2A 7E F0            		LD HL,[Ns_Base_AddToNs]
     842:  00:8B57  7C                  		LD A,H
     843:  00:8B58  85                  		ADD A,L
     844:  00:8B59  32 46 F1            		LD [AYREGS+AR_Noise],A
     845:  00:8B5C                      
     846:  00:8B5C  3A 1D F0            		LD A,[PT3_AddToEn]
     847:  00:8B5F  5F                  		LD E,A
     848:  00:8B60  87                  		ADD A,A
     849:  00:8B61  9F                  		SBC A,A
     850:  00:8B62  57                  		LD D,A
     851:  00:8B63  2A 4E F1            		LD HL,[EnvBase]
     852:  00:8B66  19                  		ADD HL,DE
     853:  00:8B67  ED 5B 7B F0         		LD DE,[CurESld]
     854:  00:8B6B  19                  		ADD HL,DE
     855:  00:8B6C  22 4B F1            		LD [AYREGS+AR_Env],HL
     856:  00:8B6F                      
     857:  00:8B6F  AF                  		XOR A
     858:  00:8B70  21 7D F0            		LD HL,CurEDel
     859:  00:8B73  B6                  		OR [HL]
     860:  00:8B74  C8                  		RET Z
     861:  00:8B75  35                  		DEC [HL]
     862:  00:8B76  C0                  		RET NZ
     863:  00:8B77  3A 1E F0            		LD A,[PT3_Env_Del]
     864:  00:8B7A  77                  		LD [HL],A
     865:  00:8B7B  2A 1F F0            		LD HL,[PT3_ESldAdd]
     866:  00:8B7E  19                  		ADD HL,DE
     867:  00:8B7F  22 7B F0            		LD [CurESld],HL
     868:  00:8B82  C9                  		RET
     869:  00:8B83                      
     870:  00:8B83  AF                  PT3_ROUT:	XOR A
     871:  00:8B84                      	
     872:  00:8B84                      ROUT_A0:	; --- FIXES BITS 6 AND 7 OF MIXER ---
     873:  00:8B84  21 47 F1            		LD	HL,AYREGS+AR_Mixer
     874:  00:8B87  CB FE               		set	7,[hl]
     875:  00:8B89  CB B6               		res	6,[hl]
     876:  00:8B8B                      
     877:  00:8B8B  0E A0               		LD C,$A0
     878:  00:8B8D  21 40 F1            		LD HL,AYREGS
     879:  00:8B90  ED 79               .LOUT:		OUT [C],A
     880:  00:8B92  0C                  		INC C
     881:  00:8B93  ED A3               		OUTI 
     882:  00:8B95  0D                  		DEC C
     883:  00:8B96  3C                  		INC A
     884:  00:8B97  FE 0D               		CP 13
     885:  00:8B99  20 F5               		JR NZ,.LOUT
     886:  00:8B9B  ED 79               		OUT [C],A
     887:  00:8B9D  7E                  		LD A,[HL]
     888:  00:8B9E  A7                  		AND A
     889:  00:8B9F  F8                  		RET M
     890:  00:8BA0  0C                  		INC C
     891:  00:8BA1  ED 79               		OUT [C],A
     892:  00:8BA3  C9                  		RET
     893:  00:8BA4                      
     894:  00:8BA4  64                  NT_DATA:	db (T_NEW_0-T1_)*2
     895:  00:8BA5  2A                  		db TCNEW_0-T_
     896:  00:8BA6  65                  		db (T_OLD_0-T1_)*2+1
     897:  00:8BA7  00                  		db TCOLD_0-T_
     898:  00:8BA8  01                  		db (T_NEW_1-T1_)*2+1
     899:  00:8BA9  0C                  		db TCNEW_1-T_
     900:  00:8BAA  01                  		db (T_OLD_1-T1_)*2+1
     901:  00:8BAB  0C                  		db TCOLD_1-T_
     902:  00:8BAC  94                  		db (T_NEW_2-T1_)*2
     903:  00:8BAD  35                  		db TCNEW_2-T_
     904:  00:8BAE  30                  		db (T_OLD_2-T1_)*2
     905:  00:8BAF  0E                  		db TCOLD_2-T_
     906:  00:8BB0  60                  		db (T_NEW_3-T1_)*2
     907:  00:8BB1  20                  		db TCNEW_3-T_
     908:  00:8BB2  60                  		db (T_OLD_3-T1_)*2
     909:  00:8BB3  21                  		db TCOLD_3-T_
     910:  00:8BB4                      
     911:  00:8BB4                      T_:
     912:  00:8BB4                      
     913:  00:8BB4                      TCOLD_0:	db $00+1,$04+1,$08+1,$0A+1,$0C+1,$0E+1,$12+1,$14+1
     913:  00:8BB4  01 05 09 0B 0D 0F 13 15 
     914:  00:8BBC  19 25 3D 00         		db $18+1,$24+1,$3C+1,0
     915:  00:8BC0                      TCNEW_1:	
     916:  00:8BC0  5D 00               TCOLD_1:	db $5C+1,0
     917:  00:8BC2                      TCOLD_2:	db $30+1,$36+1,$4C+1,$52+1,$5E+1,$70+1,$82,$8C,$9C
     917:  00:8BC2  31 37 4D 53 5F 71 82 8C 9C 
     918:  00:8BCB                      		db $9E,$A0,$A6,$A8,$AA,$AC,$AE,$AE,0
     918:  00:8BCB  9E A0 A6 A8 AA AC AE AE 00 
     919:  00:8BD4  57                  TCNEW_3:	db $56+1
     920:  00:8BD5                      TCOLD_3:	db $1E+1,$22+1,$24+1,$28+1,$2C+1,$2E+1,$32+1,$BE+1,0
     920:  00:8BD5  1F 23 25 29 2D 2F 33 BF 00 
     921:  00:8BDE                      TCNEW_0:	db $1C+1,$20+1,$22+1,$26+1,$2A+1,$2C+1,$30+1,$54+1
     921:  00:8BDE  1D 21 23 27 2B 2D 31 55 
     922:  00:8BE6  BD BF 00            		db $BC+1,$BE+1,0
     923:  00:8BE9                      TCNEW_2:	db $1A+1,$20+1,$24+1,$28+1,$2A+1,$3A+1,$4C+1,$5E+1
     923:  00:8BE9  1B 21 25 29 2B 3B 4D 5F 
     924:  00:8BF1  BB BD BF            		db $BA+1,$BC+1,$BE+1
     925:  00:8BF4                      
     926:  00:8BF4  00 01 00 90         EMPTYSAMORN: 	db 0,1,0,$90 ;delete $90 if you don't need default sample
     927:  00:8BF8                      
     928:  00:8BF8                      T_PACK:		; First 12 values of tone tables (packed)
     929:  00:8BF8  0D                  		db ($06EC*2)/256
     930:  00:8BF9  D8                  		db #d8
     931:  00:8BFA  69                  		db $0755-$06EC
     932:  00:8BFB  70                  		db $07C5-$0755
     933:  00:8BFC  76                  		db $083B-$07C5
     934:  00:8BFD  7D                  		db $08B8-$083B
     935:  00:8BFE  85                  		db $093D-$08B8
     936:  00:8BFF  8D                  		db $09CA-$093D
     937:  00:8C00  95                  		db $0A5F-$09CA
     938:  00:8C01  9D                  		db $0AFC-$0A5F
     939:  00:8C02  A8                  		db $0BA4-$0AFC
     940:  00:8C03  B1                  		db $0C55-$0BA4
     941:  00:8C04  BB                  		db $0D10-$0C55
     942:  00:8C05  0C                  		db ($066D*2)/256
     943:  00:8C06  DA                  		db #da
     944:  00:8C07  62                  		db $06CF-$066D
     945:  00:8C08  68                  		db $0737-$06CF
     946:  00:8C09  6D                  		db $07A4-$0737
     947:  00:8C0A  75                  		db $0819-$07A4
     948:  00:8C0B  7B                  		db $0894-$0819
     949:  00:8C0C  83                  		db $0917-$0894
     950:  00:8C0D  8A                  		db $09A1-$0917
     951:  00:8C0E  92                  		db $0A33-$09A1
     952:  00:8C0F  9C                  		db $0ACF-$0A33
     953:  00:8C10  A4                  		db $0B73-$0ACF
     954:  00:8C11  AF                  		db $0C22-$0B73
     955:  00:8C12  B8                  		db $0CDA-$0C22
     956:  00:8C13  0E                  		db ($0704*2)/256
     957:  00:8C14  08                  		db #08
     958:  00:8C15  6A                  		db $076E-$0704
     959:  00:8C16  72                  		db $07E0-$076E
     960:  00:8C17  78                  		db $0858-$07E0
     961:  00:8C18  7E                  		db $08D6-$0858
     962:  00:8C19  86                  		db $095C-$08D6
     963:  00:8C1A  90                  		db $09EC-$095C
     964:  00:8C1B  96                  		db $0A82-$09EC
     965:  00:8C1C  A0                  		db $0B22-$0A82
     966:  00:8C1D  AA                  		db $0BCC-$0B22
     967:  00:8C1E  B4                  		db $0C80-$0BCC
     968:  00:8C1F  BE                  		db $0D3E-$0C80
     969:  00:8C20  0F                  		db ($07E0*2)/256
     970:  00:8C21  C0                  		db #c0
     971:  00:8C22  78                  		db $0858-$07E0
     972:  00:8C23  88                  		db $08E0-$0858
     973:  00:8C24  80                  		db $0960-$08E0
     974:  00:8C25  90                  		db $09F0-$0960
     975:  00:8C26  98                  		db $0A88-$09F0
     976:  00:8C27  A0                  		db $0B28-$0A88
     977:  00:8C28  B0                  		db $0BD8-$0B28
     978:  00:8C29  A8                  		db $0C80-$0BD8
     979:  00:8C2A  E0                  		db $0D60-$0C80
     980:  00:8C2B  B0                  		db $0E10-$0D60
     981:  00:8C2C  E8                  		db $0EF8-$0E10
      61.  00:8C2D                      	include "ayFX-ROM_sjasm.asm"
       1:  00:8C2D                      		; --- ayFX REPLAYER v1.31 ---
       2:  00:8C2D                      
       3:  00:8C2D                      		; --- v1.31	Fixed bug on previous version, only PSG channel C worked
       4:  00:8C2D                      		; --- v1.3	Fixed volume and Relative volume versions on the same file, conditional compilation
       5:  00:8C2D                      		; ---		Support for dynamic or fixed channel allocation
       6:  00:8C2D                      		; --- v1.2f/r	ayFX bank support
       7:  00:8C2D                      		; --- v1.11f/r	If a frame volume is zero then no AYREGS update
       8:  00:8C2D                      		; --- v1.1f/r	Fixed volume for all ayFX streams
       9:  00:8C2D                      		; --- v1.1	Explicit priority (as suggested by AR)
      10:  00:8C2D                      		; --- v1.0f	Bug fixed (error when using noise)
      11:  00:8C2D                      		; --- v1.0	Initial release
      12:  00:8C2D                      
      13:  00:8C2D                      		; --- DEFINE AYFXRELATIVE AS 0 FOR FIXED VOLUME VERSION ---
      14:  00:8C2D                      		; --- DEFINE AYFXRELATIVE AS 1 FOR RELATIVE VOLUME VERSION ---
      15:  00:8C2D  (00:0000)           AYFXRELATIVE equ 0
      16:  00:8C2D                      
      17:  00:8C2D                      ayFX_SETUP:	; ---          ayFX replayer setup          ---
      18:  00:8C2D                      		; --- INPUT: HL -> pointer to the ayFX bank ---
      19:  00:8C2D  22 41 F2            		ld	[ayFX_BANK],hl			; Current ayFX bank
      20:  00:8C30  3E 01               		ld	a,1				; a:=0
      21:  00:8C32  32 40 F2            		ld	[ayFX_MODE],a			; Initial mode: fixed channel
      22:  00:8C35  3C                  		inc	a				; Starting channel (=1)
      23:  00:8C36  32 4A F2            		ld	[ayFX_CHANNEL],a		; Updated
      24:  00:8C39                      ayFX_END:	; --- End of an ayFX stream ---
      25:  00:8C39  3E FF               		ld	a,255				; Lowest ayFX priority
      26:  00:8C3B  32 43 F2            		ld	[ayFX_PRIORITY],a		; Priority saved (not playing ayFX stream)
      27:  00:8C3E  C9                  		ret					; Return
      28:  00:8C3F                      
      29:  00:8C3F                      ayFX_INIT:	; ---     INIT A NEW ayFX STREAM     ---
      30:  00:8C3F                      		; --- INPUT: A -> sound to be played ---
      31:  00:8C3F                      		; ---        C -> sound priority     ---
      32:  00:8C3F  C5                  		push	bc				; Store bc in stack
      33:  00:8C40  D5                  		push	de				; Store de in stack
      34:  00:8C41  E5                  		push	hl				; Store hl in stack
      35:  00:8C42                      		; --- Check if the index is in the bank ---
      36:  00:8C42  47                  		ld	b,a				; b:=a (new ayFX stream index)
      37:  00:8C43  2A 41 F2            		ld	hl,[ayFX_BANK]			; Current ayFX BANK
      38:  00:8C46  7E                  		ld	a,[hl]				; Number of samples in the bank
      39:  00:8C47  B7                  		or	a				; If zero (means 256 samples)...
      40:  00:8C48  28 06               		jr	z,.CHECK_PRI			; ...goto .CHECK_PRI
      41:  00:8C4A                      		; The bank has less than 256 samples
      42:  00:8C4A  78                  		ld	a,b				; a:=b (new ayFX stream index)
      43:  00:8C4B  BE                  		cp	[hl]				; If new index is not in the bank...
      44:  00:8C4C  3E 02               		ld	a,2				; a:=2 (error 2: Sample not in the bank)
      45:  00:8C4E  30 21               		jr	nc,.INIT_END			; ...we can't init it
      46:  00:8C50                      .CHECK_PRI:	; --- Check if the new priority is lower than the current one ---
      47:  00:8C50                      		; ---   Remember: 0 = highest priority, 15 = lowest priority  ---
      48:  00:8C50  78                  		ld	a,b				; a:=b (new ayFX stream index)
      49:  00:8C51  3A 43 F2            		ld	a,[ayFX_PRIORITY]		; a:=Current ayFX stream priority
      50:  00:8C54  B9                  		cp	c				; If new ayFX stream priority is lower than current one...
      51:  00:8C55  3E 01               		ld	a,1				; a:=1 (error 1: A sample with higher priority is being played)
      52:  00:8C57  38 18               		jr	c,.INIT_END			; ...we don't start the new ayFX stream
      53:  00:8C59                      		; --- Set new priority ---
      54:  00:8C59  79                  		ld	a,c				; a:=New priority
      55:  00:8C5A  E6 0F               		and	$0F				; We mask the priority
      56:  00:8C5C  32 43 F2            		ld	[ayFX_PRIORITY],a		; new ayFX stream priority saved in RAM
      57:  00:8C5F                      
      58:  00:8C5F                      		IF ( AYFXRELATIVE == 1 )
      59:  00:8C5F                    ~ 			; --- Volume adjust using PT3 volume table ---
      60:  00:8C5F                    ~ 			ld	c,a				; c:=New priority (fixed)
      61:  00:8C5F                    ~ 			ld	a,15				; a:=15
      62:  00:8C5F                    ~ 			sub	c				; a:=15-New priority = relative volume
      63:  00:8C5F                    ~ 			jr	z,.INIT_NOSOUND		; If priority is 15 -> no sound output (volume is zero)
      64:  00:8C5F                    ~ 			add	a,a				; a:=a*2
      65:  00:8C5F                    ~ 			add	a,a				; a:=a*4
      66:  00:8C5F                    ~ 			add	a,a				; a:=a*8
      67:  00:8C5F                    ~ 			add	a,a				; a:=a*16
      68:  00:8C5F                    ~ 			ld	e,a				; e:=a
      69:  00:8C5F                    ~ 			ld	d,0				; de:=a
      70:  00:8C5F                    ~ 			ld	hl,VT_				; hl:=PT3 volume table
      71:  00:8C5F                    ~ 			add	hl,de				; hl is a pointer to the relative volume table
      72:  00:8C5F                    ~ 			ld	[ayFX_VT],hl			; Save pointer
      73:  00:8C5F                    ~ 		ENDIF
      74:  00:8C5F                      
      75:  00:8C5F                      		; --- Calculate the pointer to the new ayFX stream ---
      76:  00:8C5F  ED 5B 41 F2         		ld	de,[ayFX_BANK]			; de:=Current ayFX bank
      77:  00:8C63  13                  		inc	de				; de points to the increments table of the bank
      78:  00:8C64  68                  		ld	l,b				; l:=b (new ayFX stream index)
      79:  00:8C65  26 00               		ld	h,0				; hl:=b (new ayFX stream index)
      80:  00:8C67  29                  		add	hl,hl				; hl:=hl*2
      81:  00:8C68  19                  		add	hl,de				; hl:=hl+de (hl points to the correct increment)
      82:  00:8C69  5E                  		ld	e,[hl]				; e:=lower byte of the increment
      83:  00:8C6A  23                  		inc	hl				; hl points to the higher byte of the correct increment
      84:  00:8C6B  56                  		ld	d,[hl]				; de:=increment
      85:  00:8C6C  19                  		add	hl,de				; hl:=hl+de (hl points to the new ayFX stream)
      86:  00:8C6D  22 44 F2            		ld	[ayFX_POINTER],hl		; Pointer saved in RAM
      87:  00:8C70  AF                  		xor	a				; a:=0 (no errors)
      88:  00:8C71  E1                  .INIT_END:	pop	hl				; Retrieve hl from stack
      89:  00:8C72  D1                  		pop	de				; Retrieve de from stack
      90:  00:8C73  C1                  		pop	bc				; Retrieve bc from stack
      91:  00:8C74  C9                  		ret					; Return
      92:  00:8C75                      
      93:  00:8C75                      		IF ( AYFXRELATIVE == 1 )
      94:  00:8C75                    ~ .INIT_NOSOUND:	; --- Init a sample with relative volume zero -> no sound output ---
      95:  00:8C75                    ~ 			ld	a,255				; Lowest ayFX priority
      96:  00:8C75                    ~ 			ld	[ayFX_PRIORITY],a		; Priority saved (not playing ayFX stream)
      97:  00:8C75                    ~ 			jr	.INIT_END			; Jumps to .INIT_END
      98:  00:8C75                    ~ 		ENDIF
      99:  00:8C75                      
     100:  00:8C75                      ayFX_PLAY:	; --- PLAY A FRAME OF AN ayFX STREAM ---
     101:  00:8C75  3A 43 F2            		ld	a,[ayFX_PRIORITY]		; a:=Current ayFX stream priority
     102:  00:8C78  B7                  		or	a				; If priority has bit 7 on...
     103:  00:8C79  F8                  		ret	m				; ...return
     104:  00:8C7A                      		; --- Calculate next ayFX channel (if needed) ---
     105:  00:8C7A  3A 40 F2            		ld	a,[ayFX_MODE]			; ayFX mode
     106:  00:8C7D  E6 01               		and	1				; If bit0=0 (fixed channel)...
     107:  00:8C7F  28 08               		jr	z,.TAKECB			; ...skip channel changing
     108:  00:8C81  21 4A F2            		ld	hl,ayFX_CHANNEL			; Old ayFX playing channel
     109:  00:8C84  35                  		dec	[hl]				; New ayFX playing channel
     110:  00:8C85  20 02               		jr	nz,.TAKECB			; If not zero jump to .TAKECB
     111:  00:8C87  36 03               		ld	[hl],3				; If zero -> set channel 3
     112:  00:8C89                      .TAKECB:	; --- Extract control byte from stream ---
     113:  00:8C89  2A 44 F2            		ld	hl,[ayFX_POINTER]		; Pointer to the current ayFX stream
     114:  00:8C8C  4E                  		ld	c,[hl]				; c:=Control byte
     115:  00:8C8D  23                  		inc	hl				; Increment pointer
     116:  00:8C8E                      		; --- Check if there's new tone on stream ---
     117:  00:8C8E  CB 69               		bit	5,c				; If bit 5 c is off...
     118:  00:8C90  28 08               		jr	z,.CHECK_NN			; ...jump to .CHECK_NN (no new tone)
     119:  00:8C92                      		; --- Extract new tone from stream ---
     120:  00:8C92  5E                  		ld	e,[hl]				; e:=lower byte of new tone
     121:  00:8C93  23                  		inc	hl				; Increment pointer
     122:  00:8C94  56                  		ld	d,[hl]				; d:=higher byte of new tone
     123:  00:8C95  23                  		inc	hl				; Increment pointer
     124:  00:8C96  ED 53 46 F2         		ld	[ayFX_TONE],de			; ayFX tone updated
     125:  00:8C9A                      .CHECK_NN:	; --- Check if there's new noise on stream ---
     126:  00:8C9A  CB 71               		bit	6,c				; if bit 6 c is off...
     127:  00:8C9C  28 09               		jr	z,.SETPOINTER			; ...jump to .SETPOINTER (no new noise)
     128:  00:8C9E                      		; --- Extract new noise from stream ---
     129:  00:8C9E  7E                  		ld	a,[hl]				; a:=New noise
     130:  00:8C9F  23                  		inc	hl				; Increment pointer
     131:  00:8CA0  FE 20               		cp	$20				; If it's an illegal value of noise (used to mark end of stream)...
     132:  00:8CA2  28 95               		jr.	z,ayFX_END			; ...jump to ayFX_END
     133:  00:8CA4  32 48 F2            		ld	[ayFX_NOISE],a			; ayFX noise updated
     134:  00:8CA7                      .SETPOINTER:	; --- Update ayFX pointer ---
     135:  00:8CA7  22 44 F2            		ld	[ayFX_POINTER],hl		; Update ayFX stream pointer
     136:  00:8CAA                      		; --- Extract volume ---
     137:  00:8CAA  79                  		ld	a,c				; a:=Control byte
     138:  00:8CAB  E6 0F               		and	$0F				; lower nibble
     139:  00:8CAD                      
     140:  00:8CAD                      		IF ( AYFXRELATIVE == 1 )
     141:  00:8CAD                    ~ 			; --- Fix the volume using PT3 Volume Table ---
     142:  00:8CAD                    ~ 			ld	hl,[ayFX_VT]			; hl:=Pointer to relative volume table
     143:  00:8CAD                    ~ 			ld	e,a				; e:=a (ayFX volume)
     144:  00:8CAD                    ~ 			ld	d,0				; d:=0
     145:  00:8CAD                    ~ 			add	hl,de				; hl:=hl+de (hl points to the relative volume of this frame
     146:  00:8CAD                    ~ 			ld	a,[hl]				; a:=ayFX relative volume
     147:  00:8CAD                    ~ 			or	a				; If relative volume is zero...
     148:  00:8CAD                    ~ 		ENDIF
     149:  00:8CAD                      
     150:  00:8CAD  32 49 F2            		ld	[ayFX_VOLUME],a			; ayFX volume updated
     151:  00:8CB0  C8                  		ret	z				; ...return (don't copy ayFX values in to AYREGS)
     152:  00:8CB1                      		; -------------------------------------
     153:  00:8CB1                      		; --- COPY ayFX VALUES IN TO AYREGS ---
     154:  00:8CB1                      		; -------------------------------------
     155:  00:8CB1                      		; --- Set noise channel ---
     156:  00:8CB1  CB 79               		bit	7,c				; If noise is off...
     157:  00:8CB3  20 06               		jr	nz,.SETMASKS			; ...jump to .SETMASKS
     158:  00:8CB5  3A 48 F2            		ld	a,[ayFX_NOISE]			; ayFX noise value
     159:  00:8CB8  32 46 F1            		ld	[AYREGS+6],a			; copied in to AYREGS (noise channel)
     160:  00:8CBB                      .SETMASKS:	; --- Set mixer masks ---
     161:  00:8CBB  79                  		ld	a,c				; a:=Control byte
     162:  00:8CBC  E6 90               		and	$90				; Only bits 7 and 4 (noise and tone mask for psg reg 7)
     163:  00:8CBE  FE 90               		cp	$90				; If no noise and no tone...
     164:  00:8CC0  C8                  		ret	z				; ...return (don't copy ayFX values in to AYREGS)
     165:  00:8CC1                      		; --- Copy ayFX values in to ARYREGS ---
     166:  00:8CC1  0F                  		rrca					; Rotate a to the right (1 TIME)
     167:  00:8CC2  0F                  		rrca					; Rotate a to the right (2 TIMES) (OR mask)
     168:  00:8CC3  16 DB               		ld	d,$DB				; d:=Mask for psg mixer (AND mask)
     169:  00:8CC5                      		; --- Dump to correct channel ---
     170:  00:8CC5  21 4A F2            		ld	hl,ayFX_CHANNEL			; Next ayFX playing channel
     171:  00:8CC8  46                  		ld	b,[hl]				; Channel counter
     172:  00:8CC9                      .CHK1:		; --- Check if playing channel was 1 ---
     173:  00:8CC9  10 0D               		djnz	.CHK2				; Decrement and jump if channel was not 1
     174:  00:8CCB                      .PLAY_C:	; --- Play ayFX stream on channel C ---
     175:  00:8CCB  CD FA 8C            		call	.SETMIXER			; Set PSG mixer value (returning a=ayFX volume and hl=ayFX tone)
     176:  00:8CCE  32 4A F1            		ld	[AYREGS+10],a			; Volume copied in to AYREGS (channel C volume)
     177:  00:8CD1  CB 51               		bit	2,c				; If tone is off...
     178:  00:8CD3  C0                  		ret	nz				; ...return
     179:  00:8CD4  22 44 F1            		ld	[AYREGS+4],hl			; copied in to AYREGS (channel C tone)
     180:  00:8CD7  C9                  		ret					; Return
     181:  00:8CD8                      .CHK2:		; --- Check if playing channel was 2 ---
     182:  00:8CD8  CB 0A               		rrc	d				; Rotate right AND mask
     183:  00:8CDA  0F                  		rrca					; Rotate right OR mask
     184:  00:8CDB  10 0D               		djnz	.CHK3				; Decrement and jump if channel was not 2
     185:  00:8CDD                      .PLAY_B:	; --- Play ayFX stream on channel B ---
     186:  00:8CDD  CD FA 8C            		call	.SETMIXER			; Set PSG mixer value (returning a=ayFX volume and hl=ayFX tone)
     187:  00:8CE0  32 49 F1            		ld	[AYREGS+9],a			; Volume copied in to AYREGS (channel B volume)
     188:  00:8CE3  CB 49               		bit	1,c				; If tone is off...
     189:  00:8CE5  C0                  		ret	nz				; ...return
     190:  00:8CE6  22 42 F1            		ld	[AYREGS+2],hl			; copied in to AYREGS (channel B tone)
     191:  00:8CE9  C9                  		ret					; Return
     192:  00:8CEA                      .CHK3:		; --- Check if playing channel was 3 ---
     193:  00:8CEA  CB 0A               		rrc	d				; Rotate right AND mask
     194:  00:8CEC  0F                  		rrca					; Rotate right OR mask
     195:  00:8CED                      .PLAY_A:	; --- Play ayFX stream on channel A ---
     196:  00:8CED  CD FA 8C            		call	.SETMIXER			; Set PSG mixer value (returning a=ayFX volume and hl=ayFX tone)
     197:  00:8CF0  32 48 F1            		ld	[AYREGS+8],a			; Volume copied in to AYREGS (channel A volume)
     198:  00:8CF3  CB 41               		bit	0,c				; If tone is off...
     199:  00:8CF5  C0                  		ret	nz				; ...return
     200:  00:8CF6  22 40 F1            		ld	[AYREGS+0],hl			; copied in to AYREGS (channel A tone)
     201:  00:8CF9  C9                  		ret					; Return
     202:  00:8CFA                      .SETMIXER:	; --- Set PSG mixer value ---
     203:  00:8CFA  4F                  		ld	c,a				; c:=OR mask
     204:  00:8CFB  3A 47 F1            		ld	a,[AYREGS+7]			; a:=PSG mixer value
     205:  00:8CFE  A2                  		and	d				; AND mask
     206:  00:8CFF  B1                  		or	c				; OR mask
     207:  00:8D00  32 47 F1            		ld	[AYREGS+7],a			; PSG mixer value updated
     208:  00:8D03  3A 49 F2            		ld	a,[ayFX_VOLUME]			; a:=ayFX volume value
     209:  00:8D06  2A 46 F2            		ld	hl,[ayFX_TONE]			; ayFX tone value
     210:  00:8D09  C9                  		ret					; Return
     211:  00:8D0A                      
     212:  00:8D0A                      		IF ( AYFXRELATIVE == 1 )
     213:  00:8D0A                    ~ 			; --- UNCOMMENT THIS IF YOU DON'T USE THIS REPLAYER WITH PT3 REPLAYER ---
     214:  00:8D0A                    ~ 		;VT_:	.INCBIN	"VT.BIN"
     215:  00:8D0A                    ~ 			; --- UNCOMMENT THIS IF YOU DON'T USE THIS REPLAYER WITH PT3 REPLAYER ---
     216:  00:8D0A                    ~ 		ENDIF
      62.  00:8D0A                      	
      63.  00:8D0A                      	
      64.  00:8D0A                      
      65.  00:8D0A                      ;;=====================================================
      66.  00:8D0A                      ;;DEFINICIÓN DE CANTIONES Y EFECTOS DE SONIDO
      67.  00:8D0A                      ;;=====================================================		
      68.  00:8D0A                      song:
      69.  00:8D0A  (0968)              	incbin "bloodytears_castlevania.99"
      70.  00:9672                      	
      71.  00:9672                      sfx_bank:
      72.  00:9672  (004B)              	incbin "demo.afb"
      73.  00:96BD                      
     116   00:96BD                      	
     117   00:96BD                      
     118   00:96BD                      ;;=====================================================
     119   00:96BD                      ;;DEFINICIÓN DE SUBRUTINAS DE FERNANDO PARA COMPRESIÓN Y SONIDO
     120   00:96BD                      ;;=====================================================
     121   00:96BD                      ;Este include lleva la rutina de descompresión de ROM/RAM a VRAM de pletter
     122   00:96BD                      ;Está adaptada de la original a sjasm
     123   00:96BD                      ;	HL = RAM/ROM source	; DE = VRAM destination
     124   00:96BD                      depack_VRAM:
     125   00:96BD                      	include "PL_VRAM_Depack_SJASM.asm"
       1.  00:96BD                      ;-----------------------------------------------------------
       2.  00:96BD                      ; Pletter v0.5b VRAM Depacker v1.1 - 16Kb version
       3.  00:96BD                      ; HL = RAM/ROM source ; DE = VRAM destination
       4.  00:96BD                      ;-----------------------------------------------------------
       5.  00:96BD  F3                  	di
       6.  00:96BE                      
       7.  00:96BE                      ; VRAM address setup
       8.  00:96BE  7B                  	ld	a,e
       9.  00:96BF  D3 99               	out	[099h],a
      10.  00:96C1  7A                  	ld	a,d
      11.  00:96C2  F6 40               	or	040h
      12.  00:96C4  D3 99               	out	[099h],a
      13.  00:96C6                      
      14.  00:96C6                      ; Initialization
      15.  00:96C6  7E                  	ld	a,[hl]
      16.  00:96C7  23                  	inc	hl
      17.  00:96C8  D9                  	exx
      18.  00:96C9  11 00 00            	ld	de,0
      19.  00:96CC  87                  	add	a,a
      20.  00:96CD  3C                  	inc	a
      21.  00:96CE  CB 13               	rl	e
      22.  00:96D0  87                  	add	a,a
      23.  00:96D1  CB 13               	rl	e
      24.  00:96D3  87                  	add	a,a
      25.  00:96D4  CB 13               	rl	e
      26.  00:96D6  CB 13               	rl	e
      27.  00:96D8  21 8F 97            	ld	hl,modes
      28.  00:96DB  19                  	add	hl,de
      29.  00:96DC  5E                  	ld	e,[hl]
      30.  00:96DD  DD 6B               	ld	ixl,e
      31.  00:96DF  23                  	inc	hl
      32.  00:96E0  5E                  	ld	e,[hl]
      33.  00:96E1  DD 63               	ld	ixh,e
      34.  00:96E3  1E 01               	ld	e,1
      35.  00:96E5  D9                  	exx
      36.  00:96E6  FD 21 EF 96         	ld	iy,loop
      37.  00:96EA                      
      38.  00:96EA                      ; Main depack loop
      39.  00:96EA  0E 98               literal:ld	c,098h
      40.  00:96EC  ED A3               	outi
      41.  00:96EE  13                  	inc	de
      42.  00:96EF  87                  loop:	add	a,a
      43.  00:96F0  CC 83 97              	call	z,getbit
      44.  00:96F3  30 F5               	jr	nc,literal
      45.  00:96F5                      
      46.  00:96F5                      ; Compressed data
      47.  00:96F5  D9                  	exx
      48.  00:96F6  62                  	ld	h,d
      49.  00:96F7  6B                  	ld	l,e
      50.  00:96F8  87                  getlen: add	a,a
      51.  00:96F9  CC 87 97            	call	z,getbitexx
      52.  00:96FC  30 1D               	jr	nc,lenok
      53.  00:96FE  87                  lus:	add	a,a
      54.  00:96FF  CC 87 97            	call	z,getbitexx
      55.  00:9702  ED 6A               	adc	hl,hl
      56.  00:9704  D8                  	ret	c
      57.  00:9705  87                  	add	a,a
      58.  00:9706  CC 87 97            	call	z,getbitexx
      59.  00:9709  30 10               	jr	nc,lenok
      60.  00:970B  87                  	add	a,a
      61.  00:970C  CC 87 97            	call	z,getbitexx
      62.  00:970F  ED 6A               	adc	hl,hl
      63.  00:9711  DA 8D 97            	jp	c,Depack_out
      64.  00:9714  87                  	add	a,a
      65.  00:9715  CC 87 97            	call	z,getbitexx
      66.  00:9718  DA FE 96            	jp	c,lus
      67.  00:971B  23                  lenok:  inc	hl
      68.  00:971C  D9                  	exx
      69.  00:971D  4E                  	ld	c,[hl]
      70.  00:971E  23                  	inc	hl
      71.  00:971F  06 00               	ld	b,0
      72.  00:9721  CB 79               	bit	7,c
      73.  00:9723  CA 56 97            	jp	z,offsok
      74.  00:9726  DD E9               	jp	ix
      75.  00:9728                      
      76.  00:9728  87                  mode7:  add	a,a
      77.  00:9729  CC 83 97              	call	z,getbit
      78.  00:972C  CB 10               	rl	b
      79.  00:972E  87                  mode6:	add	a,a
      80.  00:972F  CC 83 97              	call	z,getbit
      81.  00:9732  CB 10               	rl	b
      82.  00:9734  87                  mode5:  add	a,a
      83.  00:9735  CC 83 97              	call	z,getbit
      84.  00:9738  CB 10               	rl	b
      85.  00:973A  87                  mode4:  add	a,a
      86.  00:973B  CC 83 97              	call	z,getbit
      87.  00:973E  CB 10               	rl	b
      88.  00:9740  87                  mode3:  add	a,a
      89.  00:9741  CC 83 97              	call	z,getbit
      90.  00:9744  CB 10               	rl	b
      91.  00:9746  87                  mode2:	add	a,a
      92.  00:9747  CC 83 97              	call	z,getbit
      93.  00:974A  CB 10               	rl	b
      94.  00:974C  87                  	add	a,a
      95.  00:974D  CC 83 97              	call	z,getbit
      96.  00:9750  30 04               	jr	nc,offsok
      97.  00:9752  B7                  	or	a
      98.  00:9753  04                  	inc	b
      99.  00:9754  CB B9               	res	7,c
     100.  00:9756  03                  offsok: inc	bc
     101.  00:9757  E5                  	push	hl
     102.  00:9758  D9                  	exx
     103.  00:9759  E5                  	push	hl
     104.  00:975A  D9                  	exx
     105.  00:975B  6B                  	ld	l,e
     106.  00:975C  62                  	ld	h,d
     107.  00:975D  ED 42               	sbc	hl,bc
     108.  00:975F  C1                  	pop	bc
     109.  00:9760  F5                  	push	af
     110.  00:9761  7D                  .loop:	ld	a,l
     111.  00:9762  D3 99               	out	[099h],a
     112.  00:9764  7C                  	ld	a,h
     113.  00:9765  00                  	nop                     ; VDP timing
     114.  00:9766  D3 99               	out	[099h],a
     115.  00:9768  00                  	nop                     ; VDP timing
     116.  00:9769  DB 98               	in	a,[098h]
     117.  00:976B  08                  	ex	af,af'
     118.  00:976C  7B                  	ld	a,e
     119.  00:976D  00                  	nop			; VDP timing
     120.  00:976E  D3 99               	out	[099h],a
     121.  00:9770  7A                  	ld	a,d
     122.  00:9771  F6 40               	or	040h
     123.  00:9773  D3 99               	out	[099h],a
     124.  00:9775  08                  	ex	af,af'
     125.  00:9776  00                  	nop			; VDP timing
     126.  00:9777  D3 98               	out	[098h],a
     127.  00:9779  13                  	inc	de
     128.  00:977A  ED A1               	cpi
     129.  00:977C  EA 61 97            	jp	pe,.loop
     130.  00:977F  F1                  	pop	af
     131.  00:9780  E1                  	pop	hl
     132.  00:9781  FD E9               	jp	iy
     133.  00:9783                      
     134.  00:9783  7E                  getbit: ld	a,[hl]
     135.  00:9784  23                  	inc	hl
     136.  00:9785  17                  	rla
     137.  00:9786  C9                  	ret
     138.  00:9787                      
     139.  00:9787                      getbitexx:
     140.  00:9787  D9                  	exx
     141.  00:9788  7E                  	ld	a,[hl]
     142.  00:9789  23                  	inc	hl
     143.  00:978A  D9                  	exx
     144.  00:978B  17                  	rla
     145.  00:978C  C9                  	ret
     146.  00:978D                      
     147.  00:978D                      ; Depacker exit
     148.  00:978D                      Depack_out:
     149.  00:978D  FB                  	ei
     150.  00:978E  C9                  	ret
     151.  00:978F                      
     152.  00:978F                      modes:
     153.  00:978F  56 97               	dw	offsok
     154.  00:9791  46 97               	dw	mode2
     155.  00:9793  40 97               	dw	mode3
     156.  00:9795  3A 97               	dw	mode4
     157.  00:9797  34 97               	dw	mode5
     158.  00:9799  2E 97               	dw	mode6
     159.  00:979B  28 97               	dw	mode7
     126   00:979D                      
     127   00:979D                      
     128   00:979D                      	
     129   00:979D                      ;;=====================================================
     130   00:979D                      ;;DEFINICIÓN DE ESTRUCTURAS
     131   00:979D                      ;;=====================================================		
     132   00:979D                      	include "estructuras.asm"
       1.  00:979D                      ;;=====================================================
       2.  00:979D                      ;;DEFINICIÓN DE ESTRUCTURAS
       3.  00:979D                      ;;=====================================================
       4.  00:979D                      
       5.  00:979D                      ;crear estructura
       6.  00:979D                      
       7.  00:979D                      	STRUCT ESTRUCTURA_PUNTOMIRA
       8.  00:979D                    < posx			DB		100
       9.  00:979D                    < posy			DB		100
      10.  00:979D                    < escena			DB		0	;valores porsibles 0 (blanco+rojo en punto de mira) y NEG 0 (al revés)
      11.  00:979D                    < velocidad		DB		0
      12.  00:979D                    < boton2_pressed  DB		0
      13.  00:979D                    < cadencia		DB		5	;nº de veces que se ejecutará el disparo antes de ejecutar un disparo real (porque cuando se pulsa la tecl dispara 3 ó 4 veces de rápido que va)
      14.  00:979D                    < ; al final he decidido (ya que el punto de mira es el prota) que lo relacionado con el prota vaya en esta estructura
      15.  00:979D                    < pm_aux1			DB		0	;para llegar a los 16 campos
      16.  00:979D                    < pm_aux2			DB		0	;para llegar a los 16 campos
      17.  00:979D                    < pm_aux3			DB		0	;para llegar a los 16 campos
      18.  00:979D                    < pm_aux4			DB		0	;para llegar a los 16 campos
      19.  00:979D                    < pm_aux5			DB		0	;para llegar a los 16 campos
      20.  00:979D                    < pm_aux6			DB		0	;para llegar a los 16 campos
      21.  00:979D                    < pm_aux7			DB		0	;para llegar a los 16 campos
      22.  00:979D                    < pm_aux8			DB		0	;para llegar a los 16 campos
      23.  00:979D                    < pm_aux9			DB		0	;para llegar a los 16 campos
      24.  00:979D                    < pm_aux10		DB		0	;para llegar a los 16 campos
      25.  00:979D                    < 	ENDSTRUCT;ESTRUCTURA_PUNTOMIRA
      26.  00:979D                      
      27.  00:979D                      	
      28.  00:979D                      	STRUCT ESTRUCTURA_ENEMIGO
      29.  00:979D                    < tipo				DB		0	;(0 serpiente por ejemplo) #FF muerto o no existe
      30.  00:979D                    < posx				DB		5
      31.  00:979D                    < posy				DB		50
      32.  00:979D                    < color				DB		5
      33.  00:979D                    < escena				DB		0
      34.  00:979D                    < contador_siguiente_escena	DB	0
      35.  00:979D                    < reset_contador		DB		0
      36.  00:979D                    < dano				DB		0	;daño
      37.  00:979D                    < energia				DB		0	;energía del enemigo... si llega a 0 => existe <- 0
      38.  00:979D                    < ;indica el nº de sprite a mostrar y si está compuesto por uno o dos sprites y si están en horizontal o vertical
      39.  00:979D                    < ver_hor				DB		0
      40.  00:979D                    < manejador_dibujo 	DW		0
      41.  00:979D                    < en_aux3				DB		0
      42.  00:979D                    < en_aux4				DB		0
      43.  00:979D                    < 	ENDSTRUCT;ESTRUCTURA_ENEMIGO
      44.  00:979D                      	
      45.  00:979D                      	STRUCT ESTRUCTURA_EXTRA		;vidas extra, plantas de curación de energía, reliquias	
      46.  00:979D                    < tipo				DB		0	;#FF muerto/usado o no existe
      47.  00:979D                    < posx				DB		50
      48.  00:979D                    < posy				DB		50
      49.  00:979D                    < color				DB		5
      50.  00:979D                    < contador			DB		0	;por si doy dos reliquias en vez de una, por ejemplo
      51.  00:979D                    < en_aux1				DB		0	;para llegar a los 16 campos
      52.  00:979D                    < en_aux2				DB		0
      53.  00:979D                    < en_aux3				DB		0
      54.  00:979D                    < en_aux4				DB		0
      55.  00:979D                    < en_aux5				DB		0
      56.  00:979D                    < en_aux6				DB		0
      57.  00:979D                    < en_aux7				DB		0
      58.  00:979D                    < en_aux8				DB		0
      59.  00:979D                    < en_aux9				DB		0
      60.  00:979D                    < en_aux10			DB		0
      61.  00:979D                    < en_aux11			DB		0
      62.  00:979D                    < 	ENDSTRUCT;ESTRUCTURA_EXTRA
      63.  00:979D                      
      64.  00:979D                      
      65.  00:979D                      
      66.  00:979D                      
      67.  00:979D                      
      68.  00:979D                      
      69.  00:979D                      
     133   00:979D                      	
     134   00:979D                      ;;=====================================================
     135   00:979D                      ;;DEFINICIÓN DE VARIABLES
     136   00:979D                      ;;=====================================================		
     137   00:979D                      	include "sprites.asm"
       1.  00:979D                      ;;=====================================================
       2.  00:979D                      ;;DEFINICIÓN DE SPRITES
       3.  00:979D                      ;;=====================================================	
       4.  00:979D                      
       5.  00:979D                      
       6.  00:979D                      ;; NOTA:
       7.  00:979D                      ;~ sprite_reliquia_oracion: on/off
       8.  00:979D                      ;~ sprite_reliquia_cruz: on/off
       9.  00:979D                      ;~ sprite_reliquia_agua: on/off
      10.  00:979D                      ;~ sprite_peto: on/off
      11.  00:979D                      ;~ sprite_planta: on/off
      12.  00:979D                      ;~ sprite_vida_extra: on/off
      13.  00:979D                      ;~ sprite_ballesta_mejorada: on/off
      14.  00:979D                      
      15.  00:979D                      ;~ iban a ser sprites pero por falta de recursos serán tiles
      16.  00:979D                      
      17.  00:979D                      
      18.  00:979D                      sprites_pantantalla:
      19.  00:979D                      
      20.  00:979D                      ;; PARTE 1: SPRITES COMUNES
      21.  00:979D                      
      22.  00:979D                      sprites_comunes:
      23.  00:979D                      sprite_punto_mira_1:	;color 8
      24.  00:979D                      	db #FF,#FF,#C0,#C0,#C0,#C0,#C0,#C0
      24.  00:979D  FF FF C0 C0 C0 C0 C0 C0 
      25.  00:97A5                      	db #C0,#C0,#C0,#C0,#C0,#C0,#FF,#FF
      25.  00:97A5  C0 C0 C0 C0 C0 C0 FF FF 
      26.  00:97AD                      	db #FF,#FF,#03,#03,#03,#03,#03,#03
      26.  00:97AD  FF FF 03 03 03 03 03 03 
      27.  00:97B5                      	db #03,#03,#03,#03,#03,#03,#FF,#FF
      27.  00:97B5  03 03 03 03 03 03 FF FF 
      28.  00:97BD                      	
      29.  00:97BD                      sprite_punto_mira_2: 	;color 15
      30.  00:97BD                      	db #00,#00,#00,#00,#0F,#0F,#0C,#0C
      30.  00:97BD  00 00 00 00 0F 0F 0C 0C 
      31.  00:97C5                      	db #0C,#0C,#0F,#0F,#00,#00,#00,#00
      31.  00:97C5  0C 0C 0F 0F 00 00 00 00 
      32.  00:97CD                      	db #00,#00,#00,#00,#F0,#F0,#30,#30
      32.  00:97CD  00 00 00 00 F0 F0 30 30 
      33.  00:97D5                      	db #30,#30,#F0,#F0,#00,#00,#00,#00
      33.  00:97D5  30 30 F0 F0 00 00 00 00 
      34.  00:97DD                      	
      35.  00:97DD                      sprite_punto_mira_1_mejorado:
      36.  00:97DD                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      36.  00:97DD  FF FF FF FF FF FF FF FF 
      37.  00:97E5                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      37.  00:97E5  FF FF FF FF FF FF FF FF 
      38.  00:97ED                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      38.  00:97ED  FF FF FF FF FF FF FF FF 
      39.  00:97F5                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      39.  00:97F5  FF FF FF FF FF FF FF FF 
      40.  00:97FD                      
      41.  00:97FD                      sprite_punto_mira_2_mejorado:
      42.  00:97FD                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      42.  00:97FD  FF FF FF FF FF FF FF FF 
      43.  00:9805                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      43.  00:9805  FF FF FF FF FF FF FF FF 
      44.  00:980D                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      44.  00:980D  FF FF FF FF FF FF FF FF 
      45.  00:9815                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      45.  00:9815  FF FF FF FF FF FF FF FF 
      46.  00:981D                      	
      47.  00:981D                      sprite_explosion_1:
      48.  00:981D                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      48.  00:981D  FF FF FF FF FF FF FF FF 
      49.  00:9825                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      49.  00:9825  FF FF FF FF FF FF FF FF 
      50.  00:982D                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      50.  00:982D  FF FF FF FF FF FF FF FF 
      51.  00:9835                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF	
      51.  00:9835  FF FF FF FF FF FF FF FF 
      52.  00:983D                      
      53.  00:983D                      sprite_explosion_2:
      54.  00:983D                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      54.  00:983D  FF FF FF FF FF FF FF FF 
      55.  00:9845                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      55.  00:9845  FF FF FF FF FF FF FF FF 
      56.  00:984D                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      56.  00:984D  FF FF FF FF FF FF FF FF 
      57.  00:9855                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF	
      57.  00:9855  FF FF FF FF FF FF FF FF 
      58.  00:985D                      fin_sprites_comunes:
      59.  00:985D                      
      60.  00:985D                      ;; PARTE 2: SPRITES NO COMUNES
      61.  00:985D                      
      62.  00:985D                      ;; ARAÑA
      63.  00:985D                      	
      64.  00:985D                      sprite_arana1_1:
      65.  00:985D                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      65.  00:985D  FF FF FF FF FF FF FF FF 
      66.  00:9865                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      66.  00:9865  FF FF FF FF FF FF FF FF 
      67.  00:986D                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      67.  00:986D  FF FF FF FF FF FF FF FF 
      68.  00:9875                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      68.  00:9875  FF FF FF FF FF FF FF FF 
      69.  00:987D                      	
      70.  00:987D                      sprite_arana1_2:
      71.  00:987D                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      71.  00:987D  FF FF FF FF FF FF FF FF 
      72.  00:9885                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      72.  00:9885  FF FF FF FF FF FF FF FF 
      73.  00:988D                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      73.  00:988D  FF FF FF FF FF FF FF FF 
      74.  00:9895                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      74.  00:9895  FF FF FF FF FF FF FF FF 
      75.  00:989D                      
      76.  00:989D                      ;; MURCIELAGO
      77.  00:989D                      	
      78.  00:989D                      sprite_murcielago1_1:
      79.  00:989D                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      79.  00:989D  FF FF FF FF FF FF FF FF 
      80.  00:98A5                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      80.  00:98A5  FF FF FF FF FF FF FF FF 
      81.  00:98AD                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      81.  00:98AD  FF FF FF FF FF FF FF FF 
      82.  00:98B5                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      82.  00:98B5  FF FF FF FF FF FF FF FF 
      83.  00:98BD                      	
      84.  00:98BD                      sprite_murcielago1_2:
      85.  00:98BD                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      85.  00:98BD  FF FF FF FF FF FF FF FF 
      86.  00:98C5                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      86.  00:98C5  FF FF FF FF FF FF FF FF 
      87.  00:98CD                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      87.  00:98CD  FF FF FF FF FF FF FF FF 
      88.  00:98D5                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF	
      88.  00:98D5  FF FF FF FF FF FF FF FF 
      89.  00:98DD                      
      90.  00:98DD                      ;; SERPIENTE
      91.  00:98DD                      
      92.  00:98DD                      sprite_serpiente1_1:
      93.  00:98DD                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      93.  00:98DD  FF FF FF FF FF FF FF FF 
      94.  00:98E5                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      94.  00:98E5  FF FF FF FF FF FF FF FF 
      95.  00:98ED                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      95.  00:98ED  FF FF FF FF FF FF FF FF 
      96.  00:98F5                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      96.  00:98F5  FF FF FF FF FF FF FF FF 
      97.  00:98FD                      	
      98.  00:98FD                      sprite_serpiente1_2:
      99.  00:98FD                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      99.  00:98FD  FF FF FF FF FF FF FF FF 
     100.  00:9905                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     100.  00:9905  FF FF FF FF FF FF FF FF 
     101.  00:990D                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     101.  00:990D  FF FF FF FF FF FF FF FF 
     102.  00:9915                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     102.  00:9915  FF FF FF FF FF FF FF FF 
     103.  00:991D                      	
     104.  00:991D                      sprite_serpiente2_1:
     105.  00:991D                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     105.  00:991D  FF FF FF FF FF FF FF FF 
     106.  00:9925                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     106.  00:9925  FF FF FF FF FF FF FF FF 
     107.  00:992D                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     107.  00:992D  FF FF FF FF FF FF FF FF 
     108.  00:9935                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     108.  00:9935  FF FF FF FF FF FF FF FF 
     109.  00:993D                      	
     110.  00:993D                      sprite_serpiente2_2:
     111.  00:993D                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     111.  00:993D  FF FF FF FF FF FF FF FF 
     112.  00:9945                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     112.  00:9945  FF FF FF FF FF FF FF FF 
     113.  00:994D                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     113.  00:994D  FF FF FF FF FF FF FF FF 
     114.  00:9955                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     114.  00:9955  FF FF FF FF FF FF FF FF 
     115.  00:995D                      
     116.  00:995D                      ;; ZOMBI
     117.  00:995D                      
     118.  00:995D                      sprite_zombi1_1_1:
     119.  00:995D                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     119.  00:995D  FF FF FF FF FF FF FF FF 
     120.  00:9965                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     120.  00:9965  FF FF FF FF FF FF FF FF 
     121.  00:996D                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     121.  00:996D  FF FF FF FF FF FF FF FF 
     122.  00:9975                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     122.  00:9975  FF FF FF FF FF FF FF FF 
     123.  00:997D                      
     124.  00:997D                      sprite_zombi1_2_1:
     125.  00:997D                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     125.  00:997D  FF FF FF FF FF FF FF FF 
     126.  00:9985                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     126.  00:9985  FF FF FF FF FF FF FF FF 
     127.  00:998D                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     127.  00:998D  FF FF FF FF FF FF FF FF 
     128.  00:9995                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     128.  00:9995  FF FF FF FF FF FF FF FF 
     129.  00:999D                      	
     130.  00:999D                      sprite_zombi1_3_1:
     131.  00:999D                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     131.  00:999D  FF FF FF FF FF FF FF FF 
     132.  00:99A5                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     132.  00:99A5  FF FF FF FF FF FF FF FF 
     133.  00:99AD                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     133.  00:99AD  FF FF FF FF FF FF FF FF 
     134.  00:99B5                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     134.  00:99B5  FF FF FF FF FF FF FF FF 
     135.  00:99BD                      	
     136.  00:99BD                      sprite_zombi1_4_1:
     137.  00:99BD                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     137.  00:99BD  FF FF FF FF FF FF FF FF 
     138.  00:99C5                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     138.  00:99C5  FF FF FF FF FF FF FF FF 
     139.  00:99CD                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     139.  00:99CD  FF FF FF FF FF FF FF FF 
     140.  00:99D5                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     140.  00:99D5  FF FF FF FF FF FF FF FF 
     141.  00:99DD                      	
     142.  00:99DD                      sprite_zombi1_1_2:
     143.  00:99DD                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     143.  00:99DD  FF FF FF FF FF FF FF FF 
     144.  00:99E5                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     144.  00:99E5  FF FF FF FF FF FF FF FF 
     145.  00:99ED                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     145.  00:99ED  FF FF FF FF FF FF FF FF 
     146.  00:99F5                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     146.  00:99F5  FF FF FF FF FF FF FF FF 
     147.  00:99FD                      
     148.  00:99FD                      sprite_zombi1_2_2:
     149.  00:99FD                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     149.  00:99FD  FF FF FF FF FF FF FF FF 
     150.  00:9A05                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     150.  00:9A05  FF FF FF FF FF FF FF FF 
     151.  00:9A0D                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     151.  00:9A0D  FF FF FF FF FF FF FF FF 
     152.  00:9A15                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     152.  00:9A15  FF FF FF FF FF FF FF FF 
     153.  00:9A1D                      	
     154.  00:9A1D                      sprite_zombi1_3_2:
     155.  00:9A1D                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     155.  00:9A1D  FF FF FF FF FF FF FF FF 
     156.  00:9A25                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     156.  00:9A25  FF FF FF FF FF FF FF FF 
     157.  00:9A2D                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     157.  00:9A2D  FF FF FF FF FF FF FF FF 
     158.  00:9A35                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     158.  00:9A35  FF FF FF FF FF FF FF FF 
     159.  00:9A3D                      	
     160.  00:9A3D                      sprite_zombi1_4_2:
     161.  00:9A3D                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     161.  00:9A3D  FF FF FF FF FF FF FF FF 
     162.  00:9A45                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     162.  00:9A45  FF FF FF FF FF FF FF FF 
     163.  00:9A4D                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     163.  00:9A4D  FF FF FF FF FF FF FF FF 
     164.  00:9A55                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     164.  00:9A55  FF FF FF FF FF FF FF FF 
     165.  00:9A5D                      	
     166.  00:9A5D                      sprite_zombi2_1_1:
     167.  00:9A5D                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     167.  00:9A5D  FF FF FF FF FF FF FF FF 
     168.  00:9A65                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     168.  00:9A65  FF FF FF FF FF FF FF FF 
     169.  00:9A6D                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     169.  00:9A6D  FF FF FF FF FF FF FF FF 
     170.  00:9A75                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     170.  00:9A75  FF FF FF FF FF FF FF FF 
     171.  00:9A7D                      
     172.  00:9A7D                      sprite_zombi2_2_1:
     173.  00:9A7D                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     173.  00:9A7D  FF FF FF FF FF FF FF FF 
     174.  00:9A85                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     174.  00:9A85  FF FF FF FF FF FF FF FF 
     175.  00:9A8D                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     175.  00:9A8D  FF FF FF FF FF FF FF FF 
     176.  00:9A95                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     176.  00:9A95  FF FF FF FF FF FF FF FF 
     177.  00:9A9D                      	
     178.  00:9A9D                      sprite_zombi2_3_1:
     179.  00:9A9D                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     179.  00:9A9D  FF FF FF FF FF FF FF FF 
     180.  00:9AA5                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     180.  00:9AA5  FF FF FF FF FF FF FF FF 
     181.  00:9AAD                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     181.  00:9AAD  FF FF FF FF FF FF FF FF 
     182.  00:9AB5                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     182.  00:9AB5  FF FF FF FF FF FF FF FF 
     183.  00:9ABD                      	
     184.  00:9ABD                      sprite_zombi2_4_1:
     185.  00:9ABD                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     185.  00:9ABD  FF FF FF FF FF FF FF FF 
     186.  00:9AC5                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     186.  00:9AC5  FF FF FF FF FF FF FF FF 
     187.  00:9ACD                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     187.  00:9ACD  FF FF FF FF FF FF FF FF 
     188.  00:9AD5                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     188.  00:9AD5  FF FF FF FF FF FF FF FF 
     189.  00:9ADD                      	
     190.  00:9ADD                      sprite_zombi2_1_2:
     191.  00:9ADD                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     191.  00:9ADD  FF FF FF FF FF FF FF FF 
     192.  00:9AE5                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     192.  00:9AE5  FF FF FF FF FF FF FF FF 
     193.  00:9AED                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     193.  00:9AED  FF FF FF FF FF FF FF FF 
     194.  00:9AF5                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     194.  00:9AF5  FF FF FF FF FF FF FF FF 
     195.  00:9AFD                      
     196.  00:9AFD                      sprite_zombi2_2_2:
     197.  00:9AFD                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     197.  00:9AFD  FF FF FF FF FF FF FF FF 
     198.  00:9B05                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     198.  00:9B05  FF FF FF FF FF FF FF FF 
     199.  00:9B0D                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     199.  00:9B0D  FF FF FF FF FF FF FF FF 
     200.  00:9B15                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     200.  00:9B15  FF FF FF FF FF FF FF FF 
     201.  00:9B1D                      	
     202.  00:9B1D                      sprite_zombi2_3_2:
     203.  00:9B1D                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     203.  00:9B1D  FF FF FF FF FF FF FF FF 
     204.  00:9B25                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     204.  00:9B25  FF FF FF FF FF FF FF FF 
     205.  00:9B2D                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     205.  00:9B2D  FF FF FF FF FF FF FF FF 
     206.  00:9B35                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     206.  00:9B35  FF FF FF FF FF FF FF FF 
     207.  00:9B3D                      	
     208.  00:9B3D                      sprite_zombi2_4_2:
     209.  00:9B3D                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     209.  00:9B3D  FF FF FF FF FF FF FF FF 
     210.  00:9B45                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     210.  00:9B45  FF FF FF FF FF FF FF FF 
     211.  00:9B4D                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     211.  00:9B4D  FF FF FF FF FF FF FF FF 
     212.  00:9B55                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     212.  00:9B55  FF FF FF FF FF FF FF FF 
     213.  00:9B5D                      	
     214.  00:9B5D                      ;; CABALLERO
     215.  00:9B5D                      
     216.  00:9B5D                      sprite_caballero1_1_1:
     217.  00:9B5D                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     217.  00:9B5D  FF FF FF FF FF FF FF FF 
     218.  00:9B65                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     218.  00:9B65  FF FF FF FF FF FF FF FF 
     219.  00:9B6D                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     219.  00:9B6D  FF FF FF FF FF FF FF FF 
     220.  00:9B75                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     220.  00:9B75  FF FF FF FF FF FF FF FF 
     221.  00:9B7D                      
     222.  00:9B7D                      sprite_caballero1_2_1:
     223.  00:9B7D                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     223.  00:9B7D  FF FF FF FF FF FF FF FF 
     224.  00:9B85                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     224.  00:9B85  FF FF FF FF FF FF FF FF 
     225.  00:9B8D                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     225.  00:9B8D  FF FF FF FF FF FF FF FF 
     226.  00:9B95                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     226.  00:9B95  FF FF FF FF FF FF FF FF 
     227.  00:9B9D                      	
     228.  00:9B9D                      sprite_caballero1_3_1:
     229.  00:9B9D                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     229.  00:9B9D  FF FF FF FF FF FF FF FF 
     230.  00:9BA5                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     230.  00:9BA5  FF FF FF FF FF FF FF FF 
     231.  00:9BAD                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     231.  00:9BAD  FF FF FF FF FF FF FF FF 
     232.  00:9BB5                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     232.  00:9BB5  FF FF FF FF FF FF FF FF 
     233.  00:9BBD                      	
     234.  00:9BBD                      sprite_caballero1_4_1:
     235.  00:9BBD                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     235.  00:9BBD  FF FF FF FF FF FF FF FF 
     236.  00:9BC5                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     236.  00:9BC5  FF FF FF FF FF FF FF FF 
     237.  00:9BCD                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     237.  00:9BCD  FF FF FF FF FF FF FF FF 
     238.  00:9BD5                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     238.  00:9BD5  FF FF FF FF FF FF FF FF 
     239.  00:9BDD                      	
     240.  00:9BDD                      sprite_caballero1_1_2:
     241.  00:9BDD                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     241.  00:9BDD  FF FF FF FF FF FF FF FF 
     242.  00:9BE5                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     242.  00:9BE5  FF FF FF FF FF FF FF FF 
     243.  00:9BED                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     243.  00:9BED  FF FF FF FF FF FF FF FF 
     244.  00:9BF5                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     244.  00:9BF5  FF FF FF FF FF FF FF FF 
     245.  00:9BFD                      
     246.  00:9BFD                      sprite_caballero1_2_2:
     247.  00:9BFD                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     247.  00:9BFD  FF FF FF FF FF FF FF FF 
     248.  00:9C05                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     248.  00:9C05  FF FF FF FF FF FF FF FF 
     249.  00:9C0D                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     249.  00:9C0D  FF FF FF FF FF FF FF FF 
     250.  00:9C15                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     250.  00:9C15  FF FF FF FF FF FF FF FF 
     251.  00:9C1D                      	
     252.  00:9C1D                      sprite_caballero1_3_2:
     253.  00:9C1D                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     253.  00:9C1D  FF FF FF FF FF FF FF FF 
     254.  00:9C25                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     254.  00:9C25  FF FF FF FF FF FF FF FF 
     255.  00:9C2D                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     255.  00:9C2D  FF FF FF FF FF FF FF FF 
     256.  00:9C35                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     256.  00:9C35  FF FF FF FF FF FF FF FF 
     257.  00:9C3D                      	
     258.  00:9C3D                      sprite_caballero1_4_2:
     259.  00:9C3D                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     259.  00:9C3D  FF FF FF FF FF FF FF FF 
     260.  00:9C45                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     260.  00:9C45  FF FF FF FF FF FF FF FF 
     261.  00:9C4D                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     261.  00:9C4D  FF FF FF FF FF FF FF FF 
     262.  00:9C55                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     262.  00:9C55  FF FF FF FF FF FF FF FF 
     263.  00:9C5D                      	
     264.  00:9C5D                      sprite_caballero2_1_1:
     265.  00:9C5D                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     265.  00:9C5D  FF FF FF FF FF FF FF FF 
     266.  00:9C65                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     266.  00:9C65  FF FF FF FF FF FF FF FF 
     267.  00:9C6D                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     267.  00:9C6D  FF FF FF FF FF FF FF FF 
     268.  00:9C75                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     268.  00:9C75  FF FF FF FF FF FF FF FF 
     269.  00:9C7D                      
     270.  00:9C7D                      sprite_caballero2_2_1:
     271.  00:9C7D                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     271.  00:9C7D  FF FF FF FF FF FF FF FF 
     272.  00:9C85                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     272.  00:9C85  FF FF FF FF FF FF FF FF 
     273.  00:9C8D                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     273.  00:9C8D  FF FF FF FF FF FF FF FF 
     274.  00:9C95                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     274.  00:9C95  FF FF FF FF FF FF FF FF 
     275.  00:9C9D                      	
     276.  00:9C9D                      sprite_caballero2_3_1:
     277.  00:9C9D                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     277.  00:9C9D  FF FF FF FF FF FF FF FF 
     278.  00:9CA5                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     278.  00:9CA5  FF FF FF FF FF FF FF FF 
     279.  00:9CAD                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     279.  00:9CAD  FF FF FF FF FF FF FF FF 
     280.  00:9CB5                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     280.  00:9CB5  FF FF FF FF FF FF FF FF 
     281.  00:9CBD                      	
     282.  00:9CBD                      sprite_caballero2_4_1:
     283.  00:9CBD                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     283.  00:9CBD  FF FF FF FF FF FF FF FF 
     284.  00:9CC5                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     284.  00:9CC5  FF FF FF FF FF FF FF FF 
     285.  00:9CCD                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     285.  00:9CCD  FF FF FF FF FF FF FF FF 
     286.  00:9CD5                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     286.  00:9CD5  FF FF FF FF FF FF FF FF 
     287.  00:9CDD                      	
     288.  00:9CDD                      sprite_caballero2_1_2:
     289.  00:9CDD                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     289.  00:9CDD  FF FF FF FF FF FF FF FF 
     290.  00:9CE5                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     290.  00:9CE5  FF FF FF FF FF FF FF FF 
     291.  00:9CED                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     291.  00:9CED  FF FF FF FF FF FF FF FF 
     292.  00:9CF5                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     292.  00:9CF5  FF FF FF FF FF FF FF FF 
     293.  00:9CFD                      
     294.  00:9CFD                      sprite_caballero2_2_2:
     295.  00:9CFD                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     295.  00:9CFD  FF FF FF FF FF FF FF FF 
     296.  00:9D05                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     296.  00:9D05  FF FF FF FF FF FF FF FF 
     297.  00:9D0D                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     297.  00:9D0D  FF FF FF FF FF FF FF FF 
     298.  00:9D15                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     298.  00:9D15  FF FF FF FF FF FF FF FF 
     299.  00:9D1D                      	
     300.  00:9D1D                      sprite_caballero2_3_2:
     301.  00:9D1D                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     301.  00:9D1D  FF FF FF FF FF FF FF FF 
     302.  00:9D25                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     302.  00:9D25  FF FF FF FF FF FF FF FF 
     303.  00:9D2D                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     303.  00:9D2D  FF FF FF FF FF FF FF FF 
     304.  00:9D35                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     304.  00:9D35  FF FF FF FF FF FF FF FF 
     305.  00:9D3D                      	
     306.  00:9D3D                      sprite_caballero2_4_2:
     307.  00:9D3D                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     307.  00:9D3D  FF FF FF FF FF FF FF FF 
     308.  00:9D45                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     308.  00:9D45  FF FF FF FF FF FF FF FF 
     309.  00:9D4D                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     309.  00:9D4D  FF FF FF FF FF FF FF FF 
     310.  00:9D55                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     310.  00:9D55  FF FF FF FF FF FF FF FF 
     311.  00:9D5D                      	
     312.  00:9D5D                      ;; LLAMA
     313.  00:9D5D                      
     314.  00:9D5D                      sprite_llama1_1:	
     315.  00:9D5D                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     315.  00:9D5D  FF FF FF FF FF FF FF FF 
     316.  00:9D65                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     316.  00:9D65  FF FF FF FF FF FF FF FF 
     317.  00:9D6D                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     317.  00:9D6D  FF FF FF FF FF FF FF FF 
     318.  00:9D75                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     318.  00:9D75  FF FF FF FF FF FF FF FF 
     319.  00:9D7D                      	
     320.  00:9D7D                      sprite_llama2_1:	
     321.  00:9D7D                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     321.  00:9D7D  FF FF FF FF FF FF FF FF 
     322.  00:9D85                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     322.  00:9D85  FF FF FF FF FF FF FF FF 
     323.  00:9D8D                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     323.  00:9D8D  FF FF FF FF FF FF FF FF 
     324.  00:9D95                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF	
     324.  00:9D95  FF FF FF FF FF FF FF FF 
     325.  00:9D9D                      	
     326.  00:9D9D                      sprite_llama1_2:	
     327.  00:9D9D                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     327.  00:9D9D  FF FF FF FF FF FF FF FF 
     328.  00:9DA5                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     328.  00:9DA5  FF FF FF FF FF FF FF FF 
     329.  00:9DAD                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     329.  00:9DAD  FF FF FF FF FF FF FF FF 
     330.  00:9DB5                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     330.  00:9DB5  FF FF FF FF FF FF FF FF 
     331.  00:9DBD                      	
     332.  00:9DBD                      sprite_llama2_2:	
     333.  00:9DBD                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     333.  00:9DBD  FF FF FF FF FF FF FF FF 
     334.  00:9DC5                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     334.  00:9DC5  FF FF FF FF FF FF FF FF 
     335.  00:9DCD                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     335.  00:9DCD  FF FF FF FF FF FF FF FF 
     336.  00:9DD5                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF			
     336.  00:9DD5  FF FF FF FF FF FF FF FF 
     337.  00:9DDD                      	
     338.  00:9DDD                      ;; FANTASMA
     339.  00:9DDD                      
     340.  00:9DDD                      sprite_fantasma1_1:
     341.  00:9DDD                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     341.  00:9DDD  FF FF FF FF FF FF FF FF 
     342.  00:9DE5                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     342.  00:9DE5  FF FF FF FF FF FF FF FF 
     343.  00:9DED                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     343.  00:9DED  FF FF FF FF FF FF FF FF 
     344.  00:9DF5                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     344.  00:9DF5  FF FF FF FF FF FF FF FF 
     345.  00:9DFD                      
     346.  00:9DFD                      sprite_fantasma2_1:
     347.  00:9DFD                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     347.  00:9DFD  FF FF FF FF FF FF FF FF 
     348.  00:9E05                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     348.  00:9E05  FF FF FF FF FF FF FF FF 
     349.  00:9E0D                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     349.  00:9E0D  FF FF FF FF FF FF FF FF 
     350.  00:9E15                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     350.  00:9E15  FF FF FF FF FF FF FF FF 
     351.  00:9E1D                      
     352.  00:9E1D                      sprite_fantasma1_2:
     353.  00:9E1D                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     353.  00:9E1D  FF FF FF FF FF FF FF FF 
     354.  00:9E25                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     354.  00:9E25  FF FF FF FF FF FF FF FF 
     355.  00:9E2D                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     355.  00:9E2D  FF FF FF FF FF FF FF FF 
     356.  00:9E35                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     356.  00:9E35  FF FF FF FF FF FF FF FF 
     357.  00:9E3D                      
     358.  00:9E3D                      sprite_fantasma2_2:
     359.  00:9E3D                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     359.  00:9E3D  FF FF FF FF FF FF FF FF 
     360.  00:9E45                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     360.  00:9E45  FF FF FF FF FF FF FF FF 
     361.  00:9E4D                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     361.  00:9E4D  FF FF FF FF FF FF FF FF 
     362.  00:9E55                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF	
     362.  00:9E55  FF FF FF FF FF FF FF FF 
     363.  00:9E5D                      	
     364.  00:9E5D                      ;; MAGIA
     365.  00:9E5D                      
     366.  00:9E5D                      sprite_magia1_1:
     367.  00:9E5D                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     367.  00:9E5D  FF FF FF FF FF FF FF FF 
     368.  00:9E65                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     368.  00:9E65  FF FF FF FF FF FF FF FF 
     369.  00:9E6D                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     369.  00:9E6D  FF FF FF FF FF FF FF FF 
     370.  00:9E75                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     370.  00:9E75  FF FF FF FF FF FF FF FF 
     371.  00:9E7D                      
     372.  00:9E7D                      sprite_magia2_1:
     373.  00:9E7D                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     373.  00:9E7D  FF FF FF FF FF FF FF FF 
     374.  00:9E85                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     374.  00:9E85  FF FF FF FF FF FF FF FF 
     375.  00:9E8D                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     375.  00:9E8D  FF FF FF FF FF FF FF FF 
     376.  00:9E95                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     376.  00:9E95  FF FF FF FF FF FF FF FF 
     377.  00:9E9D                      
     378.  00:9E9D                      sprite_magia1_2:
     379.  00:9E9D                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     379.  00:9E9D  FF FF FF FF FF FF FF FF 
     380.  00:9EA5                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     380.  00:9EA5  FF FF FF FF FF FF FF FF 
     381.  00:9EAD                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     381.  00:9EAD  FF FF FF FF FF FF FF FF 
     382.  00:9EB5                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     382.  00:9EB5  FF FF FF FF FF FF FF FF 
     383.  00:9EBD                      
     384.  00:9EBD                      sprite_magia2_2:
     385.  00:9EBD                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     385.  00:9EBD  FF FF FF FF FF FF FF FF 
     386.  00:9EC5                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     386.  00:9EC5  FF FF FF FF FF FF FF FF 
     387.  00:9ECD                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     387.  00:9ECD  FF FF FF FF FF FF FF FF 
     388.  00:9ED5                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF	
     388.  00:9ED5  FF FF FF FF FF FF FF FF 
     389.  00:9EDD                      	
     390.  00:9EDD                      	
     391.  00:9EDD                      ;; BEHOLDER
     392.  00:9EDD                      
     393.  00:9EDD                      sprite_beholder1_1:
     394.  00:9EDD                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     394.  00:9EDD  FF FF FF FF FF FF FF FF 
     395.  00:9EE5                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     395.  00:9EE5  FF FF FF FF FF FF FF FF 
     396.  00:9EED                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     396.  00:9EED  FF FF FF FF FF FF FF FF 
     397.  00:9EF5                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     397.  00:9EF5  FF FF FF FF FF FF FF FF 
     398.  00:9EFD                      
     399.  00:9EFD                      sprite_beholder2_1:
     400.  00:9EFD                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     400.  00:9EFD  FF FF FF FF FF FF FF FF 
     401.  00:9F05                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     401.  00:9F05  FF FF FF FF FF FF FF FF 
     402.  00:9F0D                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     402.  00:9F0D  FF FF FF FF FF FF FF FF 
     403.  00:9F15                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     403.  00:9F15  FF FF FF FF FF FF FF FF 
     404.  00:9F1D                      
     405.  00:9F1D                      sprite_beholder3_1:
     406.  00:9F1D                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     406.  00:9F1D  FF FF FF FF FF FF FF FF 
     407.  00:9F25                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     407.  00:9F25  FF FF FF FF FF FF FF FF 
     408.  00:9F2D                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     408.  00:9F2D  FF FF FF FF FF FF FF FF 
     409.  00:9F35                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     409.  00:9F35  FF FF FF FF FF FF FF FF 
     410.  00:9F3D                      
     411.  00:9F3D                      sprite_beholder4_1:
     412.  00:9F3D                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     412.  00:9F3D  FF FF FF FF FF FF FF FF 
     413.  00:9F45                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     413.  00:9F45  FF FF FF FF FF FF FF FF 
     414.  00:9F4D                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     414.  00:9F4D  FF FF FF FF FF FF FF FF 
     415.  00:9F55                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF	
     415.  00:9F55  FF FF FF FF FF FF FF FF 
     416.  00:9F5D                      	
     417.  00:9F5D                      sprite_beholder1_2:
     418.  00:9F5D                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     418.  00:9F5D  FF FF FF FF FF FF FF FF 
     419.  00:9F65                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     419.  00:9F65  FF FF FF FF FF FF FF FF 
     420.  00:9F6D                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     420.  00:9F6D  FF FF FF FF FF FF FF FF 
     421.  00:9F75                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     421.  00:9F75  FF FF FF FF FF FF FF FF 
     422.  00:9F7D                      
     423.  00:9F7D                      sprite_beholder2_2:
     424.  00:9F7D                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     424.  00:9F7D  FF FF FF FF FF FF FF FF 
     425.  00:9F85                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     425.  00:9F85  FF FF FF FF FF FF FF FF 
     426.  00:9F8D                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     426.  00:9F8D  FF FF FF FF FF FF FF FF 
     427.  00:9F95                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     427.  00:9F95  FF FF FF FF FF FF FF FF 
     428.  00:9F9D                      
     429.  00:9F9D                      sprite_beholder3_2:
     430.  00:9F9D                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     430.  00:9F9D  FF FF FF FF FF FF FF FF 
     431.  00:9FA5                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     431.  00:9FA5  FF FF FF FF FF FF FF FF 
     432.  00:9FAD                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     432.  00:9FAD  FF FF FF FF FF FF FF FF 
     433.  00:9FB5                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     433.  00:9FB5  FF FF FF FF FF FF FF FF 
     434.  00:9FBD                      
     435.  00:9FBD                      sprite_beholder4_2:
     436.  00:9FBD                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     436.  00:9FBD  FF FF FF FF FF FF FF FF 
     437.  00:9FC5                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     437.  00:9FC5  FF FF FF FF FF FF FF FF 
     438.  00:9FCD                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     438.  00:9FCD  FF FF FF FF FF FF FF FF 
     439.  00:9FD5                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF		
     439.  00:9FD5  FF FF FF FF FF FF FF FF 
     440.  00:9FDD                      	
     441.  00:9FDD                      ;; VAMPIRO
     442.  00:9FDD                      
     443.  00:9FDD                      sprite_vampiro1_1:
     444.  00:9FDD                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     444.  00:9FDD  FF FF FF FF FF FF FF FF 
     445.  00:9FE5                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     445.  00:9FE5  FF FF FF FF FF FF FF FF 
     446.  00:9FED                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     446.  00:9FED  FF FF FF FF FF FF FF FF 
     447.  00:9FF5                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     447.  00:9FF5  FF FF FF FF FF FF FF FF 
     448.  00:9FFD                      
     449.  00:9FFD                      sprite_vampiro2_1:
     450.  00:9FFD                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     450.  00:9FFD  FF FF FF FF FF FF FF FF 
     451.  00:A005                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     451.  00:A005  FF FF FF FF FF FF FF FF 
     452.  00:A00D                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     452.  00:A00D  FF FF FF FF FF FF FF FF 
     453.  00:A015                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     453.  00:A015  FF FF FF FF FF FF FF FF 
     454.  00:A01D                      
     455.  00:A01D                      sprite_vampiro1_2:
     456.  00:A01D                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     456.  00:A01D  FF FF FF FF FF FF FF FF 
     457.  00:A025                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     457.  00:A025  FF FF FF FF FF FF FF FF 
     458.  00:A02D                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     458.  00:A02D  FF FF FF FF FF FF FF FF 
     459.  00:A035                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     459.  00:A035  FF FF FF FF FF FF FF FF 
     460.  00:A03D                      
     461.  00:A03D                      sprite_vampiro2_2:
     462.  00:A03D                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     462.  00:A03D  FF FF FF FF FF FF FF FF 
     463.  00:A045                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     463.  00:A045  FF FF FF FF FF FF FF FF 
     464.  00:A04D                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     464.  00:A04D  FF FF FF FF FF FF FF FF 
     465.  00:A055                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     465.  00:A055  FF FF FF FF FF FF FF FF 
     466.  00:A05D                      	
     467.  00:A05D                      ;; MANOIZQ
     468.  00:A05D                      
     469.  00:A05D                      sprite_manoizq1:
     470.  00:A05D                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     470.  00:A05D  FF FF FF FF FF FF FF FF 
     471.  00:A065                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     471.  00:A065  FF FF FF FF FF FF FF FF 
     472.  00:A06D                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     472.  00:A06D  FF FF FF FF FF FF FF FF 
     473.  00:A075                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     473.  00:A075  FF FF FF FF FF FF FF FF 
     474.  00:A07D                      	
     475.  00:A07D                      sprite_manoizq2:
     476.  00:A07D                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     476.  00:A07D  FF FF FF FF FF FF FF FF 
     477.  00:A085                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     477.  00:A085  FF FF FF FF FF FF FF FF 
     478.  00:A08D                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     478.  00:A08D  FF FF FF FF FF FF FF FF 
     479.  00:A095                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     479.  00:A095  FF FF FF FF FF FF FF FF 
     480.  00:A09D                      	
     481.  00:A09D                      sprite_manoizq3:
     482.  00:A09D                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     482.  00:A09D  FF FF FF FF FF FF FF FF 
     483.  00:A0A5                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     483.  00:A0A5  FF FF FF FF FF FF FF FF 
     484.  00:A0AD                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     484.  00:A0AD  FF FF FF FF FF FF FF FF 
     485.  00:A0B5                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF	
     485.  00:A0B5  FF FF FF FF FF FF FF FF 
     486.  00:A0BD                      	
     487.  00:A0BD                      ;; MANODER
     488.  00:A0BD                      
     489.  00:A0BD                      sprite_manoder1:
     490.  00:A0BD                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     490.  00:A0BD  FF FF FF FF FF FF FF FF 
     491.  00:A0C5                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     491.  00:A0C5  FF FF FF FF FF FF FF FF 
     492.  00:A0CD                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     492.  00:A0CD  FF FF FF FF FF FF FF FF 
     493.  00:A0D5                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     493.  00:A0D5  FF FF FF FF FF FF FF FF 
     494.  00:A0DD                      	
     495.  00:A0DD                      sprite_manoder2:
     496.  00:A0DD                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     496.  00:A0DD  FF FF FF FF FF FF FF FF 
     497.  00:A0E5                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     497.  00:A0E5  FF FF FF FF FF FF FF FF 
     498.  00:A0ED                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     498.  00:A0ED  FF FF FF FF FF FF FF FF 
     499.  00:A0F5                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     499.  00:A0F5  FF FF FF FF FF FF FF FF 
     500.  00:A0FD                      	
     501.  00:A0FD                      sprite_manoder3:
     502.  00:A0FD                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     502.  00:A0FD  FF FF FF FF FF FF FF FF 
     503.  00:A105                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     503.  00:A105  FF FF FF FF FF FF FF FF 
     504.  00:A10D                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     504.  00:A10D  FF FF FF FF FF FF FF FF 
     505.  00:A115                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF		
     505.  00:A115  FF FF FF FF FF FF FF FF 
     506.  00:A11D                      	
     507.  00:A11D                      	
     508.  00:A11D                      	
     509.  00:A11D                      	
     510.  00:A11D                      	
     511.  00:A11D                      	
     512.  00:A11D                      	
     513.  00:A11D                      	
     514.  00:A11D                      	
     515.  00:A11D                      	
     516.  00:A11D                      	
     517.  00:A11D                      	
     518.  00:A11D                      	
     519.  00:A11D                      	
     520.  00:A11D                      	
     521.  00:A11D                      	
     522.  00:A11D                      	
     523.  00:A11D                      	
     524.  00:A11D                      	
     525.  00:A11D                      	
     526.  00:A11D                      	
     527.  00:A11D                      	
     528.  00:A11D                      	
     138   00:A11D                      	
     139   00:A11D                      	include "habitaciones.asm"
       1.  00:A11D                      ;;=====================================================
       2.  00:A11D                      ;;DEFINICIÓN DE HABITACIONES x NIVEL
       3.  00:A11D                      ;;=====================================================	
       4.  00:A11D                      
       5.  00:A11D                      ; sólo voy a usar 7x7 pero como los arrays son lineales y voy a trabajar con matrices
       6.  00:A11D                      ; me interesa que seande  8x8 aunque sólo trabaje con 7x7
       7.  00:A11D                      
       8.  00:A11D                      ; ojo... la primera linea corresponderá a la primera linea del castillo no a la última
       9.  00:A11D                      
      10.  00:A11D                      ;; definición de estructura de bits
      11.  00:A11D                      ;16 bits por habitación
      12.  00:A11D                      ;~ 0000 - nº puertas 1 arriba 1 derecha 1 abajo 1 izquierda
      13.  00:A11D                      ;~ 1 - hay reliquia?
      14.  00:A11D                      ;~ 1 - hay vida extra
      15.  00:A11D                      ;~ 1 - hay arma extra (durará 6 pantallas - sonido distinto)
      16.  00:A11D                      ;~ 1 - hay energía? (sobran bits ... se puede usar otro como carga energía +)
      17.  00:A11D                      ;~ 1 - es pantalla de mostruo fin de fase?
      18.  00:A11D                      ;~ 1 - es pantalla inicial (equivaldría a la puerta de un castillo)?
      19.  00:A11D                      ;~ 1 - es pantalla final?
      20.  00:A11D                      
      21.  00:A11D                      
      22.  00:A11D                      ;importante: el byte de la columna 15 indicará con 1 y 0 habitaciones por las que se haya pasado
      23.  00:A11D                      ;cuando se inicie la partida todos se pondrán a 0
      24.  00:A11D                      
      25.  00:A11D                      habitacion_actual:
      26.  00:A11D  00 00               	db  #00,#00		;habitación donde se encuentre el prota. Se mete en una varible par traer todos los datos de golpe y no buscrlos varias veces
      27.  00:A11F                      
      28.  00:A11F                      habitaciones_juego:
      29.  00:A11F                      habitaciones_nivel0:
      30.  00:A11F                      	db  00000000b,#00,00000001b,#01,00000010b,#02,00000011b,#03,00001000b,#04,00001001b,#05,00001100b,#06,#FF,#00 ;primera fila
      30.  00:A11F  00 00 01 01 02 02 03 03 08 04 09 05 0C 06 FF 00 
      31.  00:A12F                      	db  #17,#10,#11,#11,#12,#12,#13,#13,#14,#14,#15,#15,#16,#16,#FF,#00
      31.  00:A12F  17 10 11 11 12 12 13 13 14 14 15 15 16 16 FF 00 
      32.  00:A13F                      	db  #20,#20,#21,#21,#22,#22,#23,#23,#24,#24,#25,#25,#26,#26,#FF,#00
      32.  00:A13F  20 20 21 21 22 22 23 23 24 24 25 25 26 26 FF 00 
      33.  00:A14F                      	db  #30,#30,#31,#31,#32,#32,#33,#33,#34,#34,#35,#35,#36,#36,#FF,#00
      33.  00:A14F  30 30 31 31 32 32 33 33 34 34 35 35 36 36 FF 00 
      34.  00:A15F                      	db  00000000b,#00,00000001b,#01,00001111b,#02,00000011b,#03,00001000b,#04,00001001b,#05,00001100b,#06,#FF,#00
      34.  00:A15F  00 00 01 01 0F 02 03 03 08 04 09 05 0C 06 FF 00 
      35.  00:A16F                      	db  #50,#50,#51,#51,#52,#52,#53,#53,#54,#54,#55,#55,#56,#56,#FF,#00
      35.  00:A16F  50 50 51 51 52 52 53 53 54 54 55 55 56 56 FF 00 
      36.  00:A17F                      	db  00000000b,#00,00000001b,#01,00001111b,#02,00000011b,#03,00001000b,#04,00001001b,#05,00001100b,#06,#FF,#00	;ultima fila
      36.  00:A17F  00 00 01 01 0F 02 03 03 08 04 09 05 0C 06 FF 00 
      37.  00:A18F                      	
      38.  00:A18F                      habitaciones_nivel1:
      39.  00:A18F                      	db  00000000b,#00,00000001b,#01,00000010b,#02,00000011b,#03,00001000b,#04,00001001b,#05,00001100b,#06,#FF,#00 ;primera fila
      39.  00:A18F  00 00 01 01 02 02 03 03 08 04 09 05 0C 06 FF 00 
      40.  00:A19F                      	db  #17,#10,#11,#11,#12,#12,#13,#13,#14,#14,#15,#15,#16,#16,#FF,#00
      40.  00:A19F  17 10 11 11 12 12 13 13 14 14 15 15 16 16 FF 00 
      41.  00:A1AF                      	db  #20,#20,#21,#21,#22,#22,#23,#23,#24,#24,#25,#25,#26,#26,#FF,#00
      41.  00:A1AF  20 20 21 21 22 22 23 23 24 24 25 25 26 26 FF 00 
      42.  00:A1BF                      	db  #30,#30,#31,#31,#32,#32,#33,#33,#34,#34,#35,#35,#36,#36,#FF,#00
      42.  00:A1BF  30 30 31 31 32 32 33 33 34 34 35 35 36 36 FF 00 
      43.  00:A1CF                      	db  00000000b,#00,00000001b,#01,00001111b,#02,00000011b,#03,00001000b,#04,00001001b,#05,00001100b,#06,#FF,#00
      43.  00:A1CF  00 00 01 01 0F 02 03 03 08 04 09 05 0C 06 FF 00 
      44.  00:A1DF                      	db  #50,#50,#51,#51,#52,#52,#53,#53,#54,#54,#55,#55,#56,#56,#FF,#00
      44.  00:A1DF  50 50 51 51 52 52 53 53 54 54 55 55 56 56 FF 00 
      45.  00:A1EF                      	db  00000000b,#00,00000001b,#01,00000010b,#02,00000011b,#03,00001000b,#04,00001001b,#05,00001100b,#06,#FF,#00	;ultima fila
      45.  00:A1EF  00 00 01 01 02 02 03 03 08 04 09 05 0C 06 FF 00 
      46.  00:A1FF                      	
      47.  00:A1FF                      habitaciones_nivel2:
      48.  00:A1FF                      	db  00000000b,#00,00000001b,#01,00000010b,#02,00000011b,#03,00001000b,#04,00001001b,#05,00001100b,#06,#FF,#00 ;primera fila
      48.  00:A1FF  00 00 01 01 02 02 03 03 08 04 09 05 0C 06 FF 00 
      49.  00:A20F                      	db  #17,#10,#11,#11,#12,#12,#13,#13,#14,#14,#15,#15,#16,#16,#FF,#00
      49.  00:A20F  17 10 11 11 12 12 13 13 14 14 15 15 16 16 FF 00 
      50.  00:A21F                      	db  #20,#20,#21,#21,#22,#22,#23,#23,#24,#24,#25,#25,#26,#26,#FF,#00
      50.  00:A21F  20 20 21 21 22 22 23 23 24 24 25 25 26 26 FF 00 
      51.  00:A22F                      	db  #30,#30,#31,#31,#32,#32,#33,#33,#34,#34,#35,#35,#36,#36,#FF,#00
      51.  00:A22F  30 30 31 31 32 32 33 33 34 34 35 35 36 36 FF 00 
      52.  00:A23F                      	db  00000000b,#00,00000001b,#01,00001111b,#02,00000011b,#03,00001000b,#04,00001001b,#05,00001100b,#06,#FF,#00
      52.  00:A23F  00 00 01 01 0F 02 03 03 08 04 09 05 0C 06 FF 00 
      53.  00:A24F                      	db  #50,#50,#51,#51,#52,#52,#53,#53,#54,#54,#55,#55,#56,#56,#FF,#00
      53.  00:A24F  50 50 51 51 52 52 53 53 54 54 55 55 56 56 FF 00 
      54.  00:A25F                      	db  00000000b,#00,00000001b,#01,00000010b,#02,00000011b,#03,00001000b,#04,00001001b,#05,00001100b,#06,#FF,#00	;ultima fila
      54.  00:A25F  00 00 01 01 02 02 03 03 08 04 09 05 0C 06 FF 00 
      55.  00:A26F                      	
      56.  00:A26F                      habitaciones_nivel3:
      57.  00:A26F                      	db  00000000b,#00,00000001b,#01,00000010b,#02,00000011b,#03,00001000b,#04,00001001b,#05,00001100b,#06,#FF,#00 ;primera fila
      57.  00:A26F  00 00 01 01 02 02 03 03 08 04 09 05 0C 06 FF 00 
      58.  00:A27F                      	db  #17,#10,#11,#11,#12,#12,#13,#13,#14,#14,#15,#15,#16,#16,#FF,#00
      58.  00:A27F  17 10 11 11 12 12 13 13 14 14 15 15 16 16 FF 00 
      59.  00:A28F                      	db  #20,#20,#21,#21,#22,#22,#23,#23,#24,#24,#25,#25,#26,#26,#FF,#00
      59.  00:A28F  20 20 21 21 22 22 23 23 24 24 25 25 26 26 FF 00 
      60.  00:A29F                      	db  #30,#30,#31,#31,#32,#32,#33,#33,#34,#34,#35,#35,#36,#36,#FF,#00
      60.  00:A29F  30 30 31 31 32 32 33 33 34 34 35 35 36 36 FF 00 
      61.  00:A2AF                      	db  00000000b,#00,00000001b,#01,00001111b,#02,00000011b,#03,00001000b,#04,00001001b,#05,00001100b,#06,#FF,#00
      61.  00:A2AF  00 00 01 01 0F 02 03 03 08 04 09 05 0C 06 FF 00 
      62.  00:A2BF                      	db  #50,#50,#51,#51,#52,#52,#53,#53,#54,#54,#55,#55,#56,#56,#FF,#00
      62.  00:A2BF  50 50 51 51 52 52 53 53 54 54 55 55 56 56 FF 00 
      63.  00:A2CF                      	db  00000000b,#00,00000001b,#01,00000010b,#02,00000011b,#03,00001000b,#04,00001001b,#05,00001100b,#06,#FF,#00	;ultima fila
      63.  00:A2CF  00 00 01 01 02 02 03 03 08 04 09 05 0C 06 FF 00 
      64.  00:A2DF                      	
      65.  00:A2DF                      habitaciones_nivel4:
      66.  00:A2DF                      	db  00000001b,#00,00000001b,#01,00000010b,#02,00000011b,#03,00001000b,#04,00001001b,#05,00001100b,#06,#FF,#00 ;primera fila
      66.  00:A2DF  01 00 01 01 02 02 03 03 08 04 09 05 0C 06 FF 00 
      67.  00:A2EF                      	db  #17,#10,#11,#11,#12,#12,#13,#13,#14,#14,#15,#15,#16,#16,#FF,#00
      67.  00:A2EF  17 10 11 11 12 12 13 13 14 14 15 15 16 16 FF 00 
      68.  00:A2FF                      	db  #20,#20,#21,#21,#22,#22,#23,#23,#24,#24,#25,#25,#26,#26,#FF,#00
      68.  00:A2FF  20 20 21 21 22 22 23 23 24 24 25 25 26 26 FF 00 
      69.  00:A30F                      	db  #30,#30,#31,#31,#32,#32,#33,#33,#34,#34,#35,#35,#36,#36,#FF,#00
      69.  00:A30F  30 30 31 31 32 32 33 33 34 34 35 35 36 36 FF 00 
      70.  00:A31F                      	db  00000000b,#00,00000001b,#01,00001111b,#02,00000011b,#03,00001000b,#04,00001001b,#05,00001100b,#06,#FF,#00
      70.  00:A31F  00 00 01 01 0F 02 03 03 08 04 09 05 0C 06 FF 00 
      71.  00:A32F                      	db  #50,#50,#51,#51,#52,#52,#53,#53,#54,#54,#55,#55,#56,#56,#FF,#00
      71.  00:A32F  50 50 51 51 52 52 53 53 54 54 55 55 56 56 FF 00 
      72.  00:A33F                      	db  00000000b,#00,00000001b,#01,00001111b,#02,00000011b,#03,00001000b,#04,00001001b,#05,00001100b,#06,#FF,#00	;ultima fila
      72.  00:A33F  00 00 01 01 0F 02 03 03 08 04 09 05 0C 06 FF 00 
      73.  00:A34F                      	
      74.  00:A34F                      habitaciones_nivel5:
      75.  00:A34F                      	db  00000000b,#00,00000001b,#01,00000010b,#02,00000011b,#03,00001000b,#04,00001001b,#05,00001100b,#06,#FF,#00 ;primera fila
      75.  00:A34F  00 00 01 01 02 02 03 03 08 04 09 05 0C 06 FF 00 
      76.  00:A35F                      	db  #17,#10,#11,#11,#12,#12,#13,#13,#14,#14,#15,#15,#16,#16,#FF,#00
      76.  00:A35F  17 10 11 11 12 12 13 13 14 14 15 15 16 16 FF 00 
      77.  00:A36F                      	db  #20,#20,#21,#21,#22,#22,#23,#23,#24,#24,#25,#25,#26,#26,#FF,#00
      77.  00:A36F  20 20 21 21 22 22 23 23 24 24 25 25 26 26 FF 00 
      78.  00:A37F                      	db  #30,#30,#31,#31,#32,#32,#33,#33,#34,#34,#35,#35,#36,#36,#FF,#00
      78.  00:A37F  30 30 31 31 32 32 33 33 34 34 35 35 36 36 FF 00 
      79.  00:A38F                      	db  00000000b,#00,00000001b,#01,00001111b,#02,00000011b,#03,00001000b,#04,00001001b,#05,00001100b,#06,#FF,#00
      79.  00:A38F  00 00 01 01 0F 02 03 03 08 04 09 05 0C 06 FF 00 
      80.  00:A39F                      	db  #50,#50,#51,#51,#52,#52,#53,#53,#54,#54,#55,#55,#56,#56,#FF,#00
      80.  00:A39F  50 50 51 51 52 52 53 53 54 54 55 55 56 56 FF 00 
      81.  00:A3AF                      	db  00000000b,#00,00000001b,#01,00001010b,#02,00000011b,#03,00001000b,#04,00001001b,#05,00001100b,#06,#FF,#00	;ultima fila
      81.  00:A3AF  00 00 01 01 0A 02 03 03 08 04 09 05 0C 06 FF 00 
      82.  00:A3BF                      	
      83.  00:A3BF                      habitaciones_nivel6:
      84.  00:A3BF                      	db  00000000b,#00,00000001b,#01,00000010b,#02,00000011b,#03,00001000b,#04,00001001b,#05,00001100b,#06,#FF,#00 ;primera fila
      84.  00:A3BF  00 00 01 01 02 02 03 03 08 04 09 05 0C 06 FF 00 
      85.  00:A3CF                      	db  #17,#10,#11,#11,#12,#12,#13,#13,#14,#14,#15,#15,#16,#16,#FF,#00
      85.  00:A3CF  17 10 11 11 12 12 13 13 14 14 15 15 16 16 FF 00 
      86.  00:A3DF                      	db  #20,#20,#21,#21,#22,#22,#23,#23,#24,#24,#25,#25,#26,#26,#FF,#00
      86.  00:A3DF  20 20 21 21 22 22 23 23 24 24 25 25 26 26 FF 00 
      87.  00:A3EF                      	db  #30,#30,#31,#31,#32,#32,#33,#33,#34,#34,#35,#35,#36,#36,#FF,#00
      87.  00:A3EF  30 30 31 31 32 32 33 33 34 34 35 35 36 36 FF 00 
      88.  00:A3FF                      	db  00000000b,#00,00000001b,#01,00001111b,#02,00000011b,#03,00001000b,#04,00001001b,#05,00001100b,#06,#FF,#00
      88.  00:A3FF  00 00 01 01 0F 02 03 03 08 04 09 05 0C 06 FF 00 
      89.  00:A40F                      	db  #50,#50,#51,#51,#52,#52,#53,#53,#54,#54,#55,#55,#56,#56,#FF,#00
      89.  00:A40F  50 50 51 51 52 52 53 53 54 54 55 55 56 56 FF 00 
      90.  00:A41F                      	db  00000000b,#00,00000001b,#01,00000010b,#02,00000011b,#03,00001000b,#04,00001001b,#05,00001100b,#06,#FF,#00	;ultima fila
      90.  00:A41F  00 00 01 01 02 02 03 03 08 04 09 05 0C 06 FF 00 
      91.  00:A42F                      
      92.  00:A42F                      
      93.  00:A42F                      
     140   00:A42F                      	
     141   00:A42F                      	include "variables.asm"
       1.  00:A42F                      ;;=====================================================
       2.  00:A42F                      ;;DEFINICIÓN DE VARIABLES
       3.  00:A42F                      ;;=====================================================
       4.  00:A42F                      
       5.  00:A42F                      ;Colores base de la pantalla
       6.  00:A42F                      color_base:
       7.  00:A42F  01 01 01            			DB		COLNEGRO,COLNEGRO,COLNEGRO	
       8.  00:A432                      ;colores de pantalla cuando se tira bomba
       9.  00:A432                      color_bomba1:
      10.  00:A432  08 08 08            			DB		COLROJO,COLROJO,COLROJO
      11.  00:A435                      color_bomba2:
      12.  00:A435  06 06 06            			DB		COLROJOOSC,COLROJOOSC,COLROJOOSC
      13.  00:A438                      
      14.  00:A438                      ;definicion de variable del prota usando la estructura del punto de mira
      15.  00:A438                      prota:		ESTRUCTURA_PUNTOMIRA
      15.  00:A438  64 64 00 00 00 05 00 00 00 00 00 00 00 00 00 00 
      16.  00:A448                      ;variables globales del prota
      17.  00:A448                      prota_nivel:			;nivel del castillo donde está 0-6
      18.  00:A448  00                  			DB		0
      19.  00:A449                      prota_vidas:
      20.  00:A449  00                  			DB		0
      21.  00:A44A                      prota_reliquias:
      22.  00:A44A  03                  			DB		3
      23.  00:A44B                      prota_pos_mapx:
      24.  00:A44B  00                  			DB		0	;pos columna
      25.  00:A44C                      prota_pos_mapy:
      26.  00:A44C  00                  			DB		0	;pos fila
      27.  00:A44D                      prota_energia:
      28.  00:A44D  FA                  			DB		250
      29.  00:A44E                      
      30.  00:A44E                      ;array para pintar de golpe el marcador de vidas
      31.  00:A44E                      array_aux_vidas: 		
      32.  00:A44E                      			DB		0,0,0,0,0,0,0,0
      32.  00:A44E  00 00 00 00 00 00 00 00 
      33.  00:A456                      
      34.  00:A456                      ;array para pintar de golpe el marcador de reliquias
      35.  00:A456                      array_aux_reliquias:	
      36.  00:A456                      			DB		0,0,0,0,0,0,0,0
      36.  00:A456  00 00 00 00 00 00 00 00 
      37.  00:A45E                      
      38.  00:A45E                      array_aux_energia:					;array para pintar de golpe el marcador de energía
      39.  00:A45E                      			DB		16,0,0,0,0,0,0 	;el 16 primero es porque siempre estará pintado el cuadro primero rojo
      39.  00:A45E  10 00 00 00 00 00 00 
      40.  00:A465                      ultimo_pos_array_aux_energia:
      41.  00:A465  00                  			DB		0				;el array completo es de 8 pero para posicionar sin niecesidad de cálculos  etiqueto este aparte
      42.  00:A466                      			
      43.  00:A466                      array_aux_mapa_limpiar:	;es por facilitar el reseteo del mapa (pinto 7 lineas en negro con bios) la otra opción es más larga en código y complicada aunque más rápida
      44.  00:A466                      			DB		0,0,0,0,0,0,0
      44.  00:A466  00 00 00 00 00 00 00 
      45.  00:A46D                      elemento_pintar_mapa:
      46.  00:A46D  00                  			DB		0	;TILEPROTAM = 19, ;TILEGRISM = 9
      47.  00:A46E                      			
      48.  00:A46E                      ;; nota importante: cada vez que se cambie de nivel se actualizará el contenido
      49.  00:A46E                      ;; arrays con mapa de tiles de las puertas
      50.  00:A46E                      array_puerta_arriba:
      51.  00:A46E  03 01 01 03         array_puerta_arriba1:		DB	3,1,1,3
      52.  00:A472  01 01 01 01         array_puerta_arriba2:		DB	1,1,1,1
      53.  00:A476  01 01 01 01         array_puerta_arriba3:		DB	1,1,1,1
      54.  00:A47A  01 01 01 01         array_puerta_arriba4:		DB	1,1,1,1
      55.  00:A47E  01 01 01 01         array_puerta_arriba5:		DB	1,1,1,1
      56.  00:A482                      
      57.  00:A482                      array_puerta_derecha:
      58.  00:A482  01 03 03            array_puerta_derecha1:		DB	1,3,3
      59.  00:A485  01 01 03            array_puerta_derecha2:		DB	1,1,3
      60.  00:A488  01 01 01            array_puerta_derecha3:		DB	1,1,1
      61.  00:A48B  01 01 01            array_puerta_derecha4:		DB	1,1,1
      62.  00:A48E  01 01 01            array_puerta_derecha5:		DB	1,1,1
      63.  00:A491  02 01 01            array_puerta_derecha6:		DB	2,1,1
      64.  00:A494  04 02 01            array_puerta_derecha7:		DB	4,2,1
      65.  00:A497                      	
      66.  00:A497  01 01 01 01         array_puerta_abajo:			DB	1,1,1,1
      67.  00:A49B                      
      68.  00:A49B                      array_puerta_izquierda:
      69.  00:A49B  03 03 01            array_puerta_izquierda1:	DB	3,3,1
      70.  00:A49E  03 01 01            array_puerta_izquierda2:	DB	3,1,1
      71.  00:A4A1  01 01 01            array_puerta_izquierda3:	DB	1,1,1
      72.  00:A4A4  01 01 01            array_puerta_izquierda4:	DB	1,1,1
      73.  00:A4A7  01 01 01            array_puerta_izquierda5:	DB	1,1,1
      74.  00:A4AA  01 01 02            array_puerta_izquierda6:	DB	1,1,2
      75.  00:A4AD  01 02 04            array_puerta_izquierda7:	DB	1,2,4
      76.  00:A4B0                      
      77.  00:A4B0                      ;array con posiciones pseudoaleatorias de ayudas y extras (qué valor se escogerá con R 0-127 + and 00001111)
      78.  00:A4B0                      ;+256 porque aparecerán todas en el banco1
      79.  00:A4B0                      pos_ayudas:					DB	0,4,18,23,45,69,73,82,90,152,171,180,190,192,198,208
      79.  00:A4B0  00 04 12 17 2D 45 49 52 5A 98 AB B4 BE C0 C6 D0 
      80.  00:A4C0                      
      81.  00:A4C0                      ;array de ayudas
      82.  00:A4C0                      array_ayudas:
      83.  00:A4C0  C8 CA               array_oracionon:			DB	200,202
      84.  00:A4C2  CA CB               array_oracionon1:			DB	202,203
      85.  00:A4C4  CC CE               array_oracionoff:			DB	204,206
      86.  00:A4C6  CD CF               array_oracionoff1:			DB	205,207
      87.  00:A4C8  D0 D2               array_cruzon:				DB	208,210
      88.  00:A4CA  D1 D3               array_cruzon1:				DB	209,211
      89.  00:A4CC  D4 D6               array_cruzoff:				DB	212,214
      90.  00:A4CE  D5 D7               array_cruzoff1:				DB	213,215
      91.  00:A4D0  D8 DA               array_aguaon:				DB	216,218
      92.  00:A4D2  D9 DB               array_aguaon1:				DB	217,219
      93.  00:A4D4  DC DE               array_aguaoff:				DB	220,222
      94.  00:A4D6  DD DF               array_aguaoff1:				DB	221,223
      95.  00:A4D8  E0 E2               array_armaduraon:			DB	224,226
      96.  00:A4DA  E1 E3               array_armaduraon1:			DB	225,227
      97.  00:A4DC  E4 E6               array_armaduraoff:			DB	228,230
      98.  00:A4DE  E5 E7               array_armaduraoff1:			DB	229,231
      99.  00:A4E0  E8 EA               array_plantaon:				DB	232,234
     100.  00:A4E2  E9 EB               array_plantaon1:			DB	233,235
     101.  00:A4E4  EC EE               array_plantaoff:			DB	236,238
     102.  00:A4E6  ED EF               array_plantaoff1:			DB	237,239
     103.  00:A4E8  F0 F2               array_extraon:				DB	240,242
     104.  00:A4EA  F1 F3               array_extraon1:				DB	241,243
     105.  00:A4EC  F4 F6               array_extraoff:				DB	244,246
     106.  00:A4EE  F5 F7               array_extraoff1:			DB	245,247
     107.  00:A4F0  F8 FA               array_ballestaon:			DB	248,250
     108.  00:A4F2  F9 FB               array_ballestaon1:			DB	249,251
     109.  00:A4F4  FC FE               array_ballestaoff:			DB	252,254
     110.  00:A4F6  FD FF               array_ballestaoff1:			DB	253,255
     111.  00:A4F8                      
     112.  00:A4F8                      
     113.  00:A4F8                      ;array de 4 bytes x 32 sprites posibles en pantalla que sobreescribirá la tabla de sprites actualizando VRAM
     114.  00:A4F8                      array_sprites:
     115.  00:A4F8  00 (8)              array_sprites_pm:				DS	2 * 4
     116.  00:A500  00 (120)            array_sprites_enem:				DS	30 * 4
     117.  00:A578  00 (140)            lista_enemigos:					DS	10 * ESTRUCTURA_ENEMIGO
     118.  00:A604                      ; puntero al array a pintar en VRAM
     119.  00:A604  00 00               puntero_array_atrib_array_VRAM: DW	0	;ARRAYSPTRIES + 8
     120.  00:A606                      
     121.  00:A606                      
     142   00:A606                      	
     143   00:A606                      ;;=====================================================
     144   00:A606                      ;;DEFINICIÓN DE PANTALLAS
     145   00:A606                      ;;=====================================================		
     146   00:A606                      	include "pantallas.asm"
       1.  00:A606                      ;;=====================================================
       2.  00:A606                      ;;DEFINICIÓN DE PANTALLAS
       3.  00:A606                      ;;=====================================================		
       4.  00:A606                      
       5.  00:A606                      ; bancos 1 y 2 y de pantalla 1 
       6.  00:A606                      ; se usa un banco común (en este caso el banco 1)
       7.  00:A606                      ; el mapa afecta al banco 1 y 2
       8.  00:A606  (01B5)              tiles_patrones_nivel0:	incbin "pantallas/nivel0.bank1.til.bin.chr.plet5"
       9.  00:A7BB  (0047)              tiles_color_nivel0:		incbin "pantallas/nivel0.bank1.til.bin.clr.plet5"
      10.  00:A802  (0035)              tiles_mapa_nivel0:		incbin "pantallas/nivel0.bank01.map.bin.plet5"
      11.  00:A837                      
      12.  00:A837  (01B5)              tiles_patrones_nivel1:	incbin "pantallas/nivel1.bank1.til.bin.chr.plet5"
      13.  00:A9EC  (0047)              tiles_color_nivel1:		incbin "pantallas/nivel1.bank1.til.bin.clr.plet5"
      14.  00:AA33  (0035)              tiles_mapa_nivel1:		incbin "pantallas/nivel1.bank01.map.bin.plet5"
      15.  00:AA68                      
      16.  00:AA68  (01B5)              tiles_patrones_nivel2:	incbin "pantallas/nivel2.bank1.til.bin.chr.plet5"
      17.  00:AC1D  (0047)              tiles_color_nivel2:		incbin "pantallas/nivel2.bank1.til.bin.clr.plet5"
      18.  00:AC64  (0035)              tiles_mapa_nivel2:		incbin "pantallas/nivel2.bank01.map.bin.plet5"
      19.  00:AC99                      
      20.  00:AC99  (01B5)              tiles_patrones_nivel3:	incbin "pantallas/nivel3.bank1.til.bin.chr.plet5"
      21.  00:AE4E  (0047)              tiles_color_nivel3:		incbin "pantallas/nivel3.bank1.til.bin.clr.plet5"
      22.  00:AE95  (0035)              tiles_mapa_nivel3:		incbin "pantallas/nivel3.bank01.map.bin.plet5"
      23.  00:AECA                      
      24.  00:AECA  (01B5)              tiles_patrones_nivel4:	incbin "pantallas/nivel4.bank1.til.bin.chr.plet5"
      25.  00:B07F  (0047)              tiles_color_nivel4:		incbin "pantallas/nivel4.bank1.til.bin.clr.plet5"
      26.  00:B0C6  (0035)              tiles_mapa_nivel4:		incbin "pantallas/nivel4.bank01.map.bin.plet5"
      27.  00:B0FB                      
      28.  00:B0FB  (01B5)              tiles_patrones_nivel5:	incbin "pantallas/nivel5.bank1.til.bin.chr.plet5"
      29.  00:B2B0  (0047)              tiles_color_nivel5:		incbin "pantallas/nivel5.bank1.til.bin.clr.plet5"
      30.  00:B2F7  (0035)              tiles_mapa_nivel5:		incbin "pantallas/nivel5.bank01.map.bin.plet5"
      31.  00:B32C                      
      32.  00:B32C  (01B5)              tiles_patrones_nivel6:	incbin "pantallas/nivel6.bank1.til.bin.chr.plet5"
      33.  00:B4E1  (0047)              tiles_color_nivel6:		incbin "pantallas/nivel6.bank1.til.bin.clr.plet5"
      34.  00:B528  (0035)              tiles_mapa_nivel6:		incbin "pantallas/nivel6.bank01.map.bin.plet5"
      35.  00:B55D                      
      36.  00:B55D                      ; 3º banco que es la parte de puntos, vidas, mapas, etc... es común
      37.  00:B55D  (014C)              tiles_patrones_marcador:	incbin "pantallas/marcador.til.bin.chr.plet5"
      38.  00:B6A9  (0035)              tiles_color_marcador:		incbin "pantallas/marcador.til.bin.clr.plet5"
      39.  00:B6DE  (0062)              tiles_mapa_marcador:		incbin "pantallas/marcador.map.bin.plet5"
      40.  00:B740                      
      41.  00:B740                      ;NOTA: FALTARÍAN PANTALLAS ESPECIALES (POR DEFINIR)
     147   00:B740                      
     148   00:B740                      
     149   00:B740                      	
     150   00:B740                      END:

    LABELS
-------------------------------------------------
00:000000D8 X GTTRIG
00:000000D5 X GTSTCK
00:0000F3DB   CLIKSW
00:0000013E X RDVDP
00:00000047   WRTVDP
00:0000005C   LDIRVM
00:00000059 X LDIRMV
00:0000005F   CHGMOD
00:00000041 X DISSCR
00:00000044 X ENASCR
00:00000062   CHGCLR
00:0000F3E9   FORCLR
00:0000F3EA   BAKCLR
00:0000F3EB   BDRCLR
00:000000C3   CLS
00:0000F3DF X RG0SAV
00:0000F3E0   RG1SAV
00:0000F3E1 X RG2SAV
00:0000F3E2 X RG3SAV
00:0000F3E3 X RG4SAV
00:0000F3E4 X RG5SAV
00:0000F3E5 X RG6SAV
00:0000F3E6 X RG7SAV
00:0000F3E7 X STATFL
00:00000099   REGEST
00:00000098   REGESCVDP
00:000000A0   PSG_A
00:000000A1   PSG_W
00:000000A2   PSG_R
00:00000000   CHRTBL
00:00001800   TILMAP
00:00001900 X TILMAPBANK1
00:00001B00   SPRART
00:00002000   CLRTBL
00:00003800   SPRTBL
00:00000001 X SI
00:00000000 X NO
00:00000004   LIMCADENCIA
00:00000000 X COLTRASP
00:00000001   COLNEGRO
00:00000002 X COLVERDE
00:00000003 X COLVERCLA
00:00000004 X COLAZULOSC
00:00000005 X COLAZULLA
00:00000006   COLROJOOSC
00:00000007 X COLCYAN
00:00000008   COLROJO
00:00000009 X COLROJOCLA
00:0000000A X COLAMAROSC
00:0000000B X COLAMARCLA
00:0000000C X COLVERDOSC
00:0000000D X COLMAGENTA
00:0000000E X COLGRIS
00:0000000F   COLBLANCO
00:000002F8   POSMAPLIN1
00:000002D8   POSMAPLIN2
00:000002B8   POSMAPLIN3
00:00000298   POSMAPLIN4
00:00000278   POSMAPLIN5
00:00000258   POSMAPLIN6
00:00000238   POSMAPLIN7
00:0000000D   POSCARAMAP
00:00000248   POSVIDAS
00:00000011   POSRELIMAP
00:000002C8   POSRELIQ
00:00000288   POSENERG
00:000002B4   POSNIVEL
00:00000238   POSMAPA
00:000001EE   POSPUERABAJ
00:0000008E   POSPUERARRI
00:000000FC   POSPUERDERE
00:000000E1   POSPUERIZQU
00:00000000 X ORACIONON
00:00000004 X ORACIONOFF
00:00000008 X CRUZON
00:0000000C X CRUZOFF
00:00000010 X AGUAON
00:00000014   AGUAOFF
00:00000018 X ARMADON
00:0000001C X ARMADOFF
00:00000020 X PLANTAON
00:00000024 X PLANTAOFF
00:00000028 X VIDAEXTON
00:0000002C X VIDAEXTOFF
00:00000030 X BALLESON
00:00000034 X BALLESOFF
00:00000013   TILEPROTAM
00:00000009   TILEGRISM
00:00000010   TILEMAPROJO
00:0000000F   TILEMAPAMAR
00:0000000E   TILEMAPVERD
00:00000008   NMAXVIDREL
00:00000007   NHABNIVEL
00:000000F8 X MAXENERGIA
00:000000D9   TILEENERG8
00:000000BA   TILEENERG7
00:0000009B   TILEENERG6
00:0000007C   TILEENERG5
00:0000005D   TILEENERG4
00:0000003E   TILEENERG3
00:0000001F   TILEENERG2
00:00000000   TILENEGRO
00:00000000 X LIMPANTIZQ
00:000000FF   LIMPANTDER
00:00000000 X LIMPANTARR
00:00000080   LIMPANTABA
00:00000006 X BASEMAPY
00:00000003 X BASEMAPX
00:0000FD9A X H.KEYI
00:0000FD9F   H.TIMI
00:0000F000   PT3_SETUP
00:0000F001   PT3_MODADDR
00:0000F003   PT3_CrPsPtr
00:0000F005   PT3_SAMPTRS
00:0000F007   PT3_OrnPtrs
00:0000F009   PT3_PDSP
00:0000F00B   PT3_CSP
00:0000F00D   PT3_PSP
00:0000F00F   PT3_PrNote
00:0000F010   PT3_PrSlide
00:0000F012   PT3_AdInPtA
00:0000F014   PT3_AdInPtB
00:0000F016   PT3_AdInPtC
00:0000F018   PT3_LPosPtr
00:0000F01A   PT3_PatsPtr
00:0000F01C   PT3_Delay
00:0000F01D   PT3_AddToEn
00:0000F01E   PT3_Env_Del
00:0000F01F   PT3_ESldAdd
00:0000F021   PT3_NTL3
00:0000F023   VARS
00:0000F023   ChanA
00:0000F040   ChanB
00:0000F05D   ChanC
00:0000F07A   DelyCnt
00:0000F07B   CurESld
00:0000F07D   CurEDel
00:0000F07E   Ns_Base_AddToNs
00:0000F07E   Ns_Base
00:0000F07F   AddToNs
00:0000F080   NT_
00:0000F140   AYREGS
00:0000F140   VT_
00:0000F14E   EnvBase
00:0000F150   VAR0END
00:0000F150   T1_
00:0000F150   T_NEW_1
00:0000F150   T_OLD_1
00:0000F168   T_OLD_2
00:0000F180   T_NEW_3
00:0000F180   T_OLD_3
00:0000F182   T_OLD_0
00:0000F182   T_NEW_0
00:0000F19A   T_NEW_2
00:0000F240   ayFX_MODE
00:0000F241   ayFX_BANK
00:0000F243   ayFX_PRIORITY
00:0000F244   ayFX_POINTER
00:0000F246   ayFX_TONE
00:0000F248   ayFX_NOISE
00:0000F249   ayFX_VOLUME
00:0000F24A   ayFX_CHANNEL
00:00008000   START
00:0000802B   loop_principal
00:00008038 X fin_programa_principal
00:00008038   inicializa_variables_pruebas
00:0000805A X fin_inicializa_variables_pruebas
00:0000805B   inicializa_niveles
00:0000806A   inicializa_niveles.bucle_borra_hab
00:0000806F X fin_iniciliza_niveles
00:00008070   actualiza_marcador_vidas
00:00008075   loop_marcador_caras_negro
00:0000807A X fin_loop_marcador_caras_negro
00:00008083   loop_marcador_caras
00:00008088 X fin_loop_marcador_caras
00:00008088 X fin_actualiza_marcador_vidas
00:00008089   actualiza_buffer_reliquias
00:0000808F   loop_buffer_reliquias_negro
00:0000809C   loop_buffer_reliquias
00:000080A1 X fin_actualiza_buffer_reliquias
00:000080A2   localiza_info_habitacion
00:000080A5 X localiza_info_habitacion.situo_columna
00:000080AE X localiza_info_habitacion.situo_fila
00:000080B7   localiza_info_habitacion.loop_suma_fila
00:000080BF   localiza_info_habitacion.situo_nivel
00:000080CE   localiza_info_habitacion.loop_suma_nivel
00:000080D3   localiza_info_habitacion.actualiza_valiable_habitacion
00:000080D7 X fin_localiza_info_habitacion
00:000080D8   suma_A_BC
00:000080DD X fin_suma_A_BC
00:000080DE   color_pantalla
00:000080EF X fin_color_pantalla
00:000080EF   sub_preparapantalla
00:000080EF X elimina_clic
00:000080F3 X fin_elimina_clic
00:000080F3 X limpia_pantalla
00:000080F7 X fin_limpia_pantalla
00:000080FD X screen2
00:00008102 X sprites_16_16
00:00008110 X fin_sub_preparapantalla
00:00008110   pinta_pantalla_completa
00:00008116 X fin_pinta_pantalla_completa
00:00008117   pinta_parte_superior_pantalla
00:00008148   pinta_parte_superior_pantalla.carga_nivel_0
00:00008163   pinta_parte_superior_pantalla.carga_nivel_1
00:0000817E   pinta_parte_superior_pantalla.carga_nivel_2
00:00008199   pinta_parte_superior_pantalla.carga_nivel_3
00:000081B4   pinta_parte_superior_pantalla.carga_nivel_4
00:000081CF   pinta_parte_superior_pantalla.carga_nivel_5
00:000081EA   pinta_parte_superior_pantalla.carga_nivel_6
00:00008202   pinta_parte_superior_pantalla.fin_carga_niveles
00:0000822F X fin_pinta_parte_superior_pantalla
00:0000822F   tiles_patrones
00:00008231   tiles_colores
00:00008233   tiles_mapa
00:00008235   pinta_parte_inferior_pantalla
00:00008250 X fin_pinta_parte_inferior_pantalla
00:00008250   pinta_vidas
00:0000825F X fin_pinta_vidas
00:0000825F   pinta_reliquias
00:0000826E X fin_pinta_reliquias
00:0000826E   pinta_nivel
00:0000827A X fin_pinta_nivel
00:0000827A   pinta_tile_suelto
00:00008287 X fin_pinta_tile_suelto
00:00008288   mira_pinta_energia
00:0000828E X pinta_ener
00:0000828E X pinta_ener_tile_8
00:0000829A   pinta_ener_tile_8_negro
00:0000829B   pinta_ener_tile_7
00:000082A5   pinta_ener_tile_7_negro
00:000082A6   pinta_ener_tile_6
00:000082B0   pinta_ener_tile_6_negro
00:000082B1   pinta_ener_tile_5
00:000082BB   pinta_ener_tile_5_negro
00:000082BC   pinta_ener_tile_4
00:000082C6   pinta_ener_tile_4_negro
00:000082C7   pinta_ener_tile_3
00:000082D1   pinta_ener_tile_3_negro
00:000082D2   pinta_ener_tile_2
00:000082DC   pinta_ener_tile_2_negro
00:000082DD   fin_mira_pinta_energia
00:000082DF   pinta_energia
00:000082EE X fin_pinta_energia
00:000082EE   borra_mapa
00:00008344 X fin_borra_mapa
00:00008345   pinta_array
00:00008358   pinta_array.pa_pinta_fila
00:00008359   pinta_array.pa_pinta_columnas
00:0000837C X fin_pinta_array
00:0000837D   wordaux1
00:0000837F   wordaux2
00:00008381   pinta_puertas
00:0000839E X fin_pinta_puertas
00:0000839F   pinta_puerta_aba
00:000083B2 X fin_pinta_puerta_aba
00:000083B2   pinta_puerta_arr
00:000083C5 X fin_pinta_puerta_arr
00:000083C5   pinta_puerta_der
00:000083D8 X fin_pinta_puerta_der
00:000083D8   pinta_puerta_izq
00:000083EB X fin_pinta_puerta_izq
00:000083EB   posiciona_en_mapa
00:000083EE X posiciona_en_mapa.sumar_fila
00:00008418 X posiciona_en_mapa.fila_0
00:0000841F   posiciona_en_mapa.fila_1
00:00008426   posiciona_en_mapa.fila_2
00:0000842D   posiciona_en_mapa.fila_3
00:00008434   posiciona_en_mapa.fila_4
00:0000843B   posiciona_en_mapa.fila_5
00:00008442 X posiciona_en_mapa.fila_6
00:00008442   posiciona_en_mapa.sumar_columna
00:00008458   pinta_pos_mapa_vacio
00:0000845A   fin_pinta_pos_mapa
00:0000845D X fin_posiciona_en_mapa
00:0000845D   efecto_imagen_tira_reliquia
00:00008460   efecto_imagen_tira_reliquia.parpadea_fondo
00:00008477 X fin_efecto_imagen_tira_reliquia
00:00008477   pinta_obj_ayuda
00:0000849D X fin_pinta_obj_ayuda
00:0000849D   carga_patrones_sprites_nivel
00:000084A7 X fin_carga_patrones_sprites_nivel
00:000084A8   carga_patrones_nivel_comunes
00:000084B4 X fin_carga_patrones_nivel_comunes
00:000084B4   carga_patrones_sprites_nivel1
00:000084B4 X fin_carga_patrones_sprites
00:000084B5   render_sprites
00:000084C1 X fin_actualiza_array_sprites_vram
00:000084C1   vuelca_resultado_puntomira_array
00:000084E6 X vuelca_resultado_puntomira_array.codigo_color_1
00:000084EF   vuelca_resultado_puntomira_array.codigo_color_2
00:000084F8 X fin_vuelca_resultado_puntomira_array
00:000084F8   check_player
00:00008517 X f
00:00008518   mueve_arriba
00:00008523   mueve_arriba.no_decrementa_y
00:00008524 X fin_mueve_arriba
00:00008525   mueve_derecha
00:00008532   mueve_derecha.no_incrementa_x
00:00008533 X fin_mueve_derecha
00:00008534   mueve_abajo
00:00008541   mueve_abajo.no_incrementa_y
00:00008542 X fin_mueve_abajo
00:00008543   mueve_izquierda
00:0000854E   mueve_izquierda.no_decrementa_x
00:0000854F X fin_mueve_izquierda
00:00008550   mira_disparo
00:00008550 X mira_disparo.mira_boton_pulsado1
00:0000855D X mira_disparo.no_efectua_disparo
00:00008568   mira_disparo.efectua_disparo
00:0000857A   mira_disparo.fin_mira_disparo1
00:0000857B   mira_disparo.mira_boton_pulsado2
00:00008597 X fin_mira_disparo
00:00008597   update_controllers_status
00:000085CE   read_joy_0
00:000085E2   check_8th_keyboard_row
00:000085F0   check_4th_keyboard_row
00:000085FE X inicializa_replayer_efectos_interrupciones
00:00008617 X fin_inicializa_replayer_efectos_interrupciones
00:00008618   subrutina_isr
00:00008621 X fin_subrutina_isr
00:00008621 X subrutinas_sonido
00:00000000   CHNPRM_PsInOr
00:00000001   CHNPRM_PsInSm
00:00000002   CHNPRM_CrAmSl
00:00000003   CHNPRM_CrNsSl
00:00000004   CHNPRM_CrEnSl
00:00000005   CHNPRM_TSlCnt
00:00000006   CHNPRM_CrTnSl
00:00000008   CHNPRM_TnAcc
00:0000000A   CHNPRM_COnOff
00:0000000B   CHNPRM_OnOffD
00:0000000C   CHNPRM_OffOnD
00:0000000D   CHNPRM_OrnPtr
00:0000000F   CHNPRM_SamPtr
00:00000011   CHNPRM_NNtSkp
00:00000012   CHNPRM_Note
00:00000013   CHNPRM_SlToNt
00:00000014   CHNPRM_Env_En
00:00000015   CHNPRM_Flags
00:00000016   CHNPRM_TnSlDl
00:00000017   CHNPRM_TSlStp
00:00000019   CHNPRM_TnDelt
00:0000001B   CHNPRM_NtSkCn
00:0000001C   CHNPRM_Volume
00:0000001D X CHNPRM_Size
00:00000000   AR_TonA
00:00000002   AR_TonB
00:00000004   AR_TonC
00:00000006   AR_Noise
00:00000007   AR_Mixer
00:00000008   AR_AmplA
00:00000009   AR_AmplB
00:0000000A   AR_AmplC
00:0000000B   AR_Env
00:0000000D   AR_EnvTp
00:00008621   CHECKLP
00:00008632 X PT3_MUTE
00:0000863E   PT3_INIT
00:0000867D   PT3_INIT.TP_0
00:00008689   PT3_INIT.TP_1
00:00008690   PT3_INIT.TP_2
00:000086FE   PT3_INIT.L1
00:0000870B   PT3_INIT.L2
00:0000870F X PT3_INIT.L3
00:00008736   PT3_INIT.CORR_1
00:00008744   PT3_INIT.CORR_2
00:0000874B   PT3_INIT.TC_EXIT
00:00008756   PT3_INIT.INITV1
00:0000875E   PT3_INIT.INITV2
00:00008772   PT3_INIT.INITV3
00:00008776   PD_OrSm
00:00008780   PD_SAM
00:00008781   PD_SAM_
00:00008797   PD_VOL
00:000087A0   PD_EOff
00:000087A8   PD_SorE
00:000087B2   PD_ENV
00:000087B7   PD_ORN
00:000087BC   PD_ESAM
00:000087C9   PTDECOD
00:000087D8   PD_LOOP
00:000087DB   PD_LP2
00:00008808   PD_NOIS
00:0000880D   PD_REL
00:00008813   PD_NOTE
00:0000881B   PD_RES
00:0000882D   PD_FIN
00:00008834   C_PORTM
00:0000887F   C_PORTM.NOSIG
00:00008889   SET_STP
00:00008895   C_GLISS
00:000088A8   C_SMPOS
00:000088AE   C_ORPOS
00:000088B4   C_VIBRT
00:000088CC   C_ENGLS
00:000088DE   C_DELAY
00:000088E4   SETENV
00:000088FF   C_NOP
00:00008900   SETORN
00:00008919   SPCCOMS
00:00008939   CHREGS
00:0000895C   CHREGS.CH_ORPS
00:00008967   CHREGS.CH_NTP
00:0000896D   CHREGS.CH_NOK
00:00008988   CHREGS.CH_SMPS
00:0000899E   CHREGS.CH_NOAC
00:000089E5   CHREGS.CH_STPP
00:000089FA   CHREGS.CH_AMP
00:00008A0C   CHREGS.CH_AMIN
00:00008A11   CHREGS.CH_SVAM
00:00008A14   CHREGS.CH_NOAM
00:00008A1D   CHREGS.CH_APOS
00:00008A23   CHREGS.CH_VOL
00:00008A2E X CHREGS.CH_ENV
00:00008A35   CHREGS.CH_NOEN
00:00008A4F   CHREGS.NO_ENAC
00:00008A56   CHREGS.NO_ENSL
00:00008A64   CHREGS.CH_MIX
00:00008A68   CHREGS.CH_EXIT
00:00008A87   CHREGS.CH_ONDL
00:00008A8B   PT3_PLAY
00:00008ABF   PT3_PLAY.PLNLP
00:00008AE6   PT3_PLAY.PL1A
00:00008AF1   PT3_PLAY.PL1B
00:00008B06   PT3_PLAY.PL1C
00:00008B1B   PT3_PLAY.PL1D
00:00008B21   PT3_PLAY.PL2
00:00008B83   PT3_ROUT
00:00008B84   ROUT_A0
00:00008B90   ROUT_A0.LOUT
00:00008BA4   NT_DATA
00:00008BB4   T_
00:00008BB4   TCOLD_0
00:00008BC0   TCNEW_1
00:00008BC0   TCOLD_1
00:00008BC2   TCOLD_2
00:00008BD4   TCNEW_3
00:00008BD5   TCOLD_3
00:00008BDE   TCNEW_0
00:00008BE9   TCNEW_2
00:00008BF4   EMPTYSAMORN
00:00008BF8   T_PACK
00:00000000 X AYFXRELATIVE
00:00008C2D   ayFX_SETUP
00:00008C39   ayFX_END
00:00008C3F   ayFX_INIT
00:00008C50   ayFX_INIT.CHECK_PRI
00:00008C71   ayFX_INIT.INIT_END
00:00008C75   ayFX_PLAY
00:00008C89   ayFX_PLAY.TAKECB
00:00008C9A   ayFX_PLAY.CHECK_NN
00:00008CA7   ayFX_PLAY.SETPOINTER
00:00008CBB   ayFX_PLAY.SETMASKS
00:00008CC9 X ayFX_PLAY.CHK1
00:00008CCB X ayFX_PLAY.PLAY_C
00:00008CD8   ayFX_PLAY.CHK2
00:00008CDD X ayFX_PLAY.PLAY_B
00:00008CEA   ayFX_PLAY.CHK3
00:00008CED X ayFX_PLAY.PLAY_A
00:00008CFA   ayFX_PLAY.SETMIXER
00:00008D0A   song
00:00009672   sfx_bank
00:000096BD   depack_VRAM
00:000096EA   literal
00:000096EF   loop
00:000096F8 X getlen
00:000096FE   lus
00:0000971B   lenok
00:00009728   mode7
00:0000972E   mode6
00:00009734   mode5
00:0000973A   mode4
00:00009740   mode3
00:00009746   mode2
00:00009756   offsok
00:00009761   offsok.loop
00:00009783   getbit
00:00009787   getbitexx
00:0000978D   Depack_out
00:0000978F   modes
00:00000000 X ESTRUCTURA_PUNTOMIRA.posx
00:00000001 X ESTRUCTURA_PUNTOMIRA.posy
00:00000002 X ESTRUCTURA_PUNTOMIRA.escena
00:00000003 X ESTRUCTURA_PUNTOMIRA.velocidad
00:00000004 X ESTRUCTURA_PUNTOMIRA.boton2_pressed
00:00000005 X ESTRUCTURA_PUNTOMIRA.cadencia
00:00000006 X ESTRUCTURA_PUNTOMIRA.pm_aux1
00:00000007 X ESTRUCTURA_PUNTOMIRA.pm_aux2
00:00000008 X ESTRUCTURA_PUNTOMIRA.pm_aux3
00:00000009 X ESTRUCTURA_PUNTOMIRA.pm_aux4
00:0000000A X ESTRUCTURA_PUNTOMIRA.pm_aux5
00:0000000B X ESTRUCTURA_PUNTOMIRA.pm_aux6
00:0000000C X ESTRUCTURA_PUNTOMIRA.pm_aux7
00:0000000D X ESTRUCTURA_PUNTOMIRA.pm_aux8
00:0000000E X ESTRUCTURA_PUNTOMIRA.pm_aux9
00:0000000F X ESTRUCTURA_PUNTOMIRA.pm_aux10
00:00000010 X ESTRUCTURA_PUNTOMIRA
00:00000000 X ESTRUCTURA_ENEMIGO.tipo
00:00000001 X ESTRUCTURA_ENEMIGO.posx
00:00000002 X ESTRUCTURA_ENEMIGO.posy
00:00000003 X ESTRUCTURA_ENEMIGO.color
00:00000004 X ESTRUCTURA_ENEMIGO.escena
00:00000005 X ESTRUCTURA_ENEMIGO.contador_siguiente_escena
00:00000006 X ESTRUCTURA_ENEMIGO.reset_contador
00:00000007 X ESTRUCTURA_ENEMIGO.dano
00:00000008 X ESTRUCTURA_ENEMIGO.energia
00:00000009 X ESTRUCTURA_ENEMIGO.ver_hor
00:0000000A X ESTRUCTURA_ENEMIGO.manejador_dibujo
00:0000000C X ESTRUCTURA_ENEMIGO.en_aux3
00:0000000D X ESTRUCTURA_ENEMIGO.en_aux4
00:0000000E   ESTRUCTURA_ENEMIGO
00:00000000 X ESTRUCTURA_EXTRA.tipo
00:00000001 X ESTRUCTURA_EXTRA.posx
00:00000002 X ESTRUCTURA_EXTRA.posy
00:00000003 X ESTRUCTURA_EXTRA.color
00:00000004 X ESTRUCTURA_EXTRA.contador
00:00000005 X ESTRUCTURA_EXTRA.en_aux1
00:00000006 X ESTRUCTURA_EXTRA.en_aux2
00:00000007 X ESTRUCTURA_EXTRA.en_aux3
00:00000008 X ESTRUCTURA_EXTRA.en_aux4
00:00000009 X ESTRUCTURA_EXTRA.en_aux5
00:0000000A X ESTRUCTURA_EXTRA.en_aux6
00:0000000B X ESTRUCTURA_EXTRA.en_aux7
00:0000000C X ESTRUCTURA_EXTRA.en_aux8
00:0000000D X ESTRUCTURA_EXTRA.en_aux9
00:0000000E X ESTRUCTURA_EXTRA.en_aux10
00:0000000F X ESTRUCTURA_EXTRA.en_aux11
00:00000010 X ESTRUCTURA_EXTRA
00:0000979D X sprites_pantantalla
00:0000979D   sprites_comunes
00:0000979D X sprite_punto_mira_1
00:000097BD X sprite_punto_mira_2
00:000097DD X sprite_punto_mira_1_mejorado
00:000097FD X sprite_punto_mira_2_mejorado
00:0000981D X sprite_explosion_1
00:0000983D X sprite_explosion_2
00:0000985D   fin_sprites_comunes
00:0000985D X sprite_arana1_1
00:0000987D X sprite_arana1_2
00:0000989D X sprite_murcielago1_1
00:000098BD X sprite_murcielago1_2
00:000098DD X sprite_serpiente1_1
00:000098FD X sprite_serpiente1_2
00:0000991D X sprite_serpiente2_1
00:0000993D X sprite_serpiente2_2
00:0000995D X sprite_zombi1_1_1
00:0000997D X sprite_zombi1_2_1
00:0000999D X sprite_zombi1_3_1
00:000099BD X sprite_zombi1_4_1
00:000099DD X sprite_zombi1_1_2
00:000099FD X sprite_zombi1_2_2
00:00009A1D X sprite_zombi1_3_2
00:00009A3D X sprite_zombi1_4_2
00:00009A5D X sprite_zombi2_1_1
00:00009A7D X sprite_zombi2_2_1
00:00009A9D X sprite_zombi2_3_1
00:00009ABD X sprite_zombi2_4_1
00:00009ADD X sprite_zombi2_1_2
00:00009AFD X sprite_zombi2_2_2
00:00009B1D X sprite_zombi2_3_2
00:00009B3D X sprite_zombi2_4_2
00:00009B5D X sprite_caballero1_1_1
00:00009B7D X sprite_caballero1_2_1
00:00009B9D X sprite_caballero1_3_1
00:00009BBD X sprite_caballero1_4_1
00:00009BDD X sprite_caballero1_1_2
00:00009BFD X sprite_caballero1_2_2
00:00009C1D X sprite_caballero1_3_2
00:00009C3D X sprite_caballero1_4_2
00:00009C5D X sprite_caballero2_1_1
00:00009C7D X sprite_caballero2_2_1
00:00009C9D X sprite_caballero2_3_1
00:00009CBD X sprite_caballero2_4_1
00:00009CDD X sprite_caballero2_1_2
00:00009CFD X sprite_caballero2_2_2
00:00009D1D X sprite_caballero2_3_2
00:00009D3D X sprite_caballero2_4_2
00:00009D5D X sprite_llama1_1
00:00009D7D X sprite_llama2_1
00:00009D9D X sprite_llama1_2
00:00009DBD X sprite_llama2_2
00:00009DDD X sprite_fantasma1_1
00:00009DFD X sprite_fantasma2_1
00:00009E1D X sprite_fantasma1_2
00:00009E3D X sprite_fantasma2_2
00:00009E5D X sprite_magia1_1
00:00009E7D X sprite_magia2_1
00:00009E9D X sprite_magia1_2
00:00009EBD X sprite_magia2_2
00:00009EDD X sprite_beholder1_1
00:00009EFD X sprite_beholder2_1
00:00009F1D X sprite_beholder3_1
00:00009F3D X sprite_beholder4_1
00:00009F5D X sprite_beholder1_2
00:00009F7D X sprite_beholder2_2
00:00009F9D X sprite_beholder3_2
00:00009FBD X sprite_beholder4_2
00:00009FDD X sprite_vampiro1_1
00:00009FFD X sprite_vampiro2_1
00:0000A01D X sprite_vampiro1_2
00:0000A03D X sprite_vampiro2_2
00:0000A05D X sprite_manoizq1
00:0000A07D X sprite_manoizq2
00:0000A09D X sprite_manoizq3
00:0000A0BD X sprite_manoder1
00:0000A0DD X sprite_manoder2
00:0000A0FD X sprite_manoder3
00:0000A11D   habitacion_actual
00:0000A11F   habitaciones_juego
00:0000A11F X habitaciones_nivel0
00:0000A18F X habitaciones_nivel1
00:0000A1FF X habitaciones_nivel2
00:0000A26F X habitaciones_nivel3
00:0000A2DF X habitaciones_nivel4
00:0000A34F X habitaciones_nivel5
00:0000A3BF X habitaciones_nivel6
00:0000A42F   color_base
00:0000A432   color_bomba1
00:0000A435   color_bomba2
00:0000A438 X prota
00:0000A438   prota.posx
00:0000A439   prota.posy
00:0000A43A   prota.escena
00:0000A43B X prota.velocidad
00:0000A43C X prota.boton2_pressed
00:0000A43D   prota.cadencia
00:0000A43E X prota.pm_aux1
00:0000A43F X prota.pm_aux2
00:0000A440 X prota.pm_aux3
00:0000A441 X prota.pm_aux4
00:0000A442 X prota.pm_aux5
00:0000A443 X prota.pm_aux6
00:0000A444 X prota.pm_aux7
00:0000A445 X prota.pm_aux8
00:0000A446 X prota.pm_aux9
00:0000A447 X prota.pm_aux10
00:0000A448   prota_nivel
00:0000A449   prota_vidas
00:0000A44A   prota_reliquias
00:0000A44B   prota_pos_mapx
00:0000A44C   prota_pos_mapy
00:0000A44D   prota_energia
00:0000A44E   array_aux_vidas
00:0000A456   array_aux_reliquias
00:0000A45E   array_aux_energia
00:0000A465   ultimo_pos_array_aux_energia
00:0000A466   array_aux_mapa_limpiar
00:0000A46D   elemento_pintar_mapa
00:0000A46E   array_puerta_arriba
00:0000A46E X array_puerta_arriba1
00:0000A472 X array_puerta_arriba2
00:0000A476 X array_puerta_arriba3
00:0000A47A X array_puerta_arriba4
00:0000A47E X array_puerta_arriba5
00:0000A482   array_puerta_derecha
00:0000A482 X array_puerta_derecha1
00:0000A485 X array_puerta_derecha2
00:0000A488 X array_puerta_derecha3
00:0000A48B X array_puerta_derecha4
00:0000A48E X array_puerta_derecha5
00:0000A491 X array_puerta_derecha6
00:0000A494 X array_puerta_derecha7
00:0000A497   array_puerta_abajo
00:0000A49B   array_puerta_izquierda
00:0000A49B X array_puerta_izquierda1
00:0000A49E X array_puerta_izquierda2
00:0000A4A1 X array_puerta_izquierda3
00:0000A4A4 X array_puerta_izquierda4
00:0000A4A7 X array_puerta_izquierda5
00:0000A4AA X array_puerta_izquierda6
00:0000A4AD X array_puerta_izquierda7
00:0000A4B0   pos_ayudas
00:0000A4C0   array_ayudas
00:0000A4C0 X array_oracionon
00:0000A4C2 X array_oracionon1
00:0000A4C4 X array_oracionoff
00:0000A4C6 X array_oracionoff1
00:0000A4C8 X array_cruzon
00:0000A4CA X array_cruzon1
00:0000A4CC X array_cruzoff
00:0000A4CE X array_cruzoff1
00:0000A4D0 X array_aguaon
00:0000A4D2 X array_aguaon1
00:0000A4D4 X array_aguaoff
00:0000A4D6 X array_aguaoff1
00:0000A4D8 X array_armaduraon
00:0000A4DA X array_armaduraon1
00:0000A4DC X array_armaduraoff
00:0000A4DE X array_armaduraoff1
00:0000A4E0 X array_plantaon
00:0000A4E2 X array_plantaon1
00:0000A4E4 X array_plantaoff
00:0000A4E6 X array_plantaoff1
00:0000A4E8 X array_extraon
00:0000A4EA X array_extraon1
00:0000A4EC X array_extraoff
00:0000A4EE X array_extraoff1
00:0000A4F0 X array_ballestaon
00:0000A4F2 X array_ballestaon1
00:0000A4F4 X array_ballestaoff
00:0000A4F6 X array_ballestaoff1
00:0000A4F8   array_sprites
00:0000A4F8   array_sprites_pm
00:0000A500 X array_sprites_enem
00:0000A578 X lista_enemigos
00:0000A604 X puntero_array_atrib_array_VRAM
00:0000A606   tiles_patrones_nivel0
00:0000A7BB   tiles_color_nivel0
00:0000A802   tiles_mapa_nivel0
00:0000A837   tiles_patrones_nivel1
00:0000A9EC   tiles_color_nivel1
00:0000AA33   tiles_mapa_nivel1
00:0000AA68   tiles_patrones_nivel2
00:0000AC1D   tiles_color_nivel2
00:0000AC64   tiles_mapa_nivel2
00:0000AC99   tiles_patrones_nivel3
00:0000AE4E   tiles_color_nivel3
00:0000AE95   tiles_mapa_nivel3
00:0000AECA   tiles_patrones_nivel4
00:0000B07F   tiles_color_nivel4
00:0000B0C6   tiles_mapa_nivel4
00:0000B0FB   tiles_patrones_nivel5
00:0000B2B0   tiles_color_nivel5
00:0000B2F7   tiles_mapa_nivel5
00:0000B32C   tiles_patrones_nivel6
00:0000B4E1   tiles_color_nivel6
00:0000B528   tiles_mapa_nivel6
00:0000B55D   tiles_patrones_marcador
00:0000B6A9   tiles_color_marcador
00:0000B6DE   tiles_mapa_marcador
00:0000B740   END


 Output: t4.out
-------------------------------------------------

 Page: 00
  Org: 00008000  Size: *  Used: 00000000

    No output

 Output: t4.bin
-------------------------------------------------

 Page: 00
  Org: 00008000  Size: *  Used: 00003747

   Address   Length Align   Label
   00008000   14151         START
