Sjasm Z80 Assembler v0.42c - www.xl2s.tk             [2021.07.30 - 11:13:23]

t4.asm
Errors: 0

       1   00:0000                      	OUTPUT	"t4.bin"
       2   00:8000                      	
       3   00:8000                      ;;=====================================================
       4   00:8000                      ;;DEFINICIÓN DE CONSTANTES
       5   00:8000                      ;;=====================================================	
       6   00:8000                      	include "constantes.asm"
       1.  00:8000                      ;;=====================================================
       2.  00:8000                      ;; FICHERO constantes.asm
       3.  00:8000                      ;;=====================================================
       4.  00:8000                      
       5.  00:8000                      ;;ETIQUETAS/CONSTANTES BIOS TECLADO
       6.  00:8000  (00:00D8)           GTTRIG		equ		#00D8	;Returns current trigger status
       7.  00:8000  (00:00D5)           GTSTCK		equ		#00D5	;Returns the joystick/cursors status
       8.  00:8000  (00:F3DB)           CLIKSW		equ		#F3DB	;deshabilita el sonido de clic cuando se pulsa una tecla
       9.  00:8000                      
      10.  00:8000                      ;;ETIQUETAS/CONSTANTES BIOS VDP
      11.  00:8000  (00:013E)           RDVDP		equ		#013E	;lee registro status VDP
      12.  00:8000  (00:0047)           WRTVDP		equ		#0047	;escribe registros del VDP
      13.  00:8000  (00:005C)           LDIRVM		equ		#005C	;RAM/ROM -> VRAM
      14.  00:8000  (00:0059)           LDIRMV		equ		#0059	;VRAM -> RAM
      15.  00:8000  (00:005F)           CHGMOD		equ		#005F	;cambia modo pantalla (screen mode)
      16.  00:8000  (00:0041)           DISSCR  	equ		#0041	;desactiva pantanlla
      17.  00:8000  (00:0044)           ENASCR  	equ		#0044	;activa pantalla
      18.  00:8000  (00:0062)           CHGCLR  	equ		#0062	;cambia color de pantalla (toca A y direcciones)
      19.  00:8000  (00:F3E9)           FORCLR		equ		#F3E9	;zona memoria color foreground
      20.  00:8000  (00:F3EA)           BAKCLR  	equ		#F3EA	;zona memoria color background
      21.  00:8000  (00:F3EB)           BDRCLR 		equ		#F3EB	;zona memoria bordercolor
      22.  00:8000  (00:00C3)           CLS			equ		#00C3	;limpia pantalla (necesita A=0)
      23.  00:8000                      
      24.  00:8000                      ;;ETIQUETAS/CONSTANTES REGISTROS VDP
      25.  00:8000  (00:F3DF)           RG0SAV		equ		#F3DF	;Mirror of VDP register 0 (Basic: VDP(0))
      26.  00:8000  (00:F3E0)           RG1SAV		equ		#F3E0	;Mirror of VDP register 1 (Basic: VDP(1))
      27.  00:8000  (00:F3E1)           RG2SAV		equ		#F3E1	;Mirror of VDP register 2 (Basic: VDP(2))
      28.  00:8000  (00:F3E2)           RG3SAV		equ		#F3E2	;Mirror of VDP register 3 (Basic: VDP(3))
      29.  00:8000  (00:F3E3)           RG4SAV		equ		#F3E3	;Mirror of VDP register 4 (Basic: VDP(4))
      30.  00:8000  (00:F3E4)           RG5SAV		equ		#F3E4	;Mirror of VDP register 5 (Basic: VDP(5))
      31.  00:8000  (00:F3E5)           RG6SAV		equ		#F3E5	;Mirror of VDP register 6 (Basic: VDP(6))
      32.  00:8000  (00:F3E6)           RG7SAV		equ		#F3E6	;Mirror of VDP register 7 (Basic: VDP(7))
      33.  00:8000  (00:F3E7)           STATFL		equ		#F3E7	;Mirror of VDP(8) status register (S#0)
      34.  00:8000                      
      35.  00:8000  (00:0099)           REGEST		equ		#0099	;registro de estado para escribir directamente en VRAM
      36.  00:8000  (00:0098)           REGESCVDP	equ		#0098	;registro donde escribir valor para VRAM
      37.  00:8000                      
      38.  00:8000                      
      39.  00:8000                      ;;ETIQUETAS DE ZONAS DE MEMORIA DE LA VPD (MSX1)
      40.  00:8000  (00:0000)           CHRTBL		equ		#0000
      41.  00:8000  (00:1800)           TILMAP		equ		#1800
      42.  00:8000  (00:1B00)           SPRART		equ		#1B00
      43.  00:8000  (00:2000)           CLRTBL		equ		#2000
      44.  00:8000  (00:3800)           SPRTBL		equ		#3800
      45.  00:8000                      
      46.  00:8000                      
      47.  00:8000                      ;;ETIQUETAS ESTANDAR PARA DAR MÁS CLARIDAD AL CODIGO
      48.  00:8000  (00:0001)           SI			equ		1
      49.  00:8000  (00:0000)           NO			equ		0
      50.  00:8000                      
      51.  00:8000  (00:0000)           COLTRASP	equ		0
      52.  00:8000  (00:0001)           COLNEGRO	equ		1
      53.  00:8000  (00:0002)           COLVERDE	equ		2
      54.  00:8000  (00:0003)           COLVERCLA	equ		3
      55.  00:8000  (00:0004)           COLAZULOSC	equ		4
      56.  00:8000  (00:0005)           COLAZULLA	equ		5
      57.  00:8000  (00:0006)           COLROJOOSC	equ		6
      58.  00:8000  (00:0007)           COLCYAN		equ		7
      59.  00:8000  (00:0008)           COLROJO		equ		8
      60.  00:8000  (00:0009)           COLROJOCLA	equ		9
      61.  00:8000  (00:000A)           COLAMAROSC	equ		10
      62.  00:8000  (00:000B)           COLAMARCLA	equ		11
      63.  00:8000  (00:000C)           COLVERDOSC	equ		12
      64.  00:8000  (00:000D)           COLMAGENTA	equ		13
      65.  00:8000  (00:000E)           COLGRIS		equ		14
      66.  00:8000  (00:000F)           COLBLANCO	equ		15
      67.  00:8000                      
      68.  00:8000                      
      69.  00:8000                      
      70.  00:8000                      ;;ETIQUETAS ESPECIFICAS PARA DAR MÁS CLARIDAD AL CODIGO (relacionadas con posiciones en mapa vdp)
      71.  00:8000  (00:02F8)           POSMAPLIN1  equ		#02F8
      72.  00:8000  (00:02D8)           POSMAPLIN2  equ		#02D8
      73.  00:8000  (00:02B8)           POSMAPLIN3  equ		#02B8
      74.  00:8000  (00:0298)           POSMAPLIN4  equ		#0298
      75.  00:8000  (00:0278)           POSMAPLIN5  equ		#0278
      76.  00:8000  (00:0258)           POSMAPLIN6  equ		#0258
      77.  00:8000  (00:0238)           POSMAPLIN7  equ		#0238
      78.  00:8000                      
      79.  00:8000  (00:000D)           POSCARAMAP	equ		#000D
      80.  00:8000  (00:0248)           POSVIDAS	equ		#0248
      81.  00:8000  (00:0011)           POSRELIMAP	equ		#0011
      82.  00:8000  (00:02C8)           POSRELIQ	equ		#02C8
      83.  00:8000  (00:0288)           POSENERG	equ		#0288
      84.  00:8000  (00:02B4)           POSNIVEL	equ		#02B4
      85.  00:8000  (00:0238)           POSMAPA		equ 	#0238
      86.  00:8000                      
      87.  00:8000  (00:01EE)           POSPUERABAJ equ		#01EE
      88.  00:8000  (00:008E)           POSPUERARRI equ		#008E
      89.  00:8000  (00:00FC)           POSPUERDERE equ		#00FC
      90.  00:8000  (00:00E1)           POSPUERIZQU equ		#00E1
      91.  00:8000                      
      92.  00:8000                      
      93.  00:8000                      ;;ETIQUETAS ESPECIFICAS PARA DAR MÁS CLARIDAD AL CODIGO (relacionadas con posiciones en en el banco de memoria)
      94.  00:8000  (00:0013)           TILEMAPPROT equ		19
      95.  00:8000  (00:0009)           TILEMAPVACI	equ		9
      96.  00:8000  (00:0010)           TILEMAPROJO equ		16
      97.  00:8000  (00:000F)           TILEMAPAMAR equ		15
      98.  00:8000  (00:000E)           TILEMAPVERD equ		14
      99.  00:8000                      
     100.  00:8000                      
     101.  00:8000                      ;;ETIQUETAS ESPECIFICAS PARA DAR MÁS CLARIDAD AL CODIGO (generales)
     102.  00:8000  (00:0008)           NMAXVIDREL	equ		8		;el número máximo de vidas y de reliquias es de 8
     103.  00:8000  (00:0007)           NHABNIVEL	equ		7
     104.  00:8000  (00:00F8)           MAXENERGIA  equ		248
     105.  00:8000  (00:00D9)           TILEENERG8  equ		217
     106.  00:8000  (00:00BA)           TILEENERG7  equ		186
     107.  00:8000  (00:009B)           TILEENERG6  equ		155
     108.  00:8000  (00:007C)           TILEENERG5  equ		124
     109.  00:8000  (00:005D)           TILEENERG4  equ		93
     110.  00:8000  (00:003E)           TILEENERG3  equ		62
     111.  00:8000  (00:001F)           TILEENERG2  equ		31
     112.  00:8000  (00:0000)           TILENEGRO	equ		0
     113.  00:8000                      
     114.  00:8000                      ;limites
     115.  00:8000  (00:0000)           LIMPANTIZQ  equ		0
     116.  00:8000  (00:00FF)           LIMPANTDER  equ		255
     117.  00:8000  (00:0000)           LIMPANTARR  equ		0
     118.  00:8000  (00:0080)           LIMPANTABA  equ		128
     119.  00:8000                      
     120.  00:8000  (00:0001)           MUEARR  	equ		1
     121.  00:8000  (00:0002)           MUEARRDER	equ		2
     122.  00:8000  (00:0003)           MUEDER  	equ		3
     123.  00:8000  (00:0004)           MUEDERABA  	equ		4
     124.  00:8000  (00:0005)           MUEABA  	equ		5
     125.  00:8000  (00:0006)           MUEABAIZQ  	equ		6
     126.  00:8000  (00:0007)           MUEIZQ  	equ		7
     127.  00:8000  (00:0008)           MUEIZQARR  	equ		8
     128.  00:8000                      
     129.  00:8000                      
     130.  00:8000                      
     131.  00:8000                      ;matriz de 7x7 empieza en 0, y fila y x col, cuento desde esquina sup izq
     132.  00:8000  (00:0006)           BASEMAPY	equ		6
     133.  00:8000  (00:0003)           BASEMAPX	equ		3
       7   00:8000                      
       8   00:8000                      ;;=====================================================
       9   00:8000                      ;;DEFINICIÓN DE CABECERA DE ARCHIVO BIN
      10   00:8000                      ;;=====================================================		
      11   00:8000                      	include "cabecerabin.asm"
       1.  00:8000                      ;;=====================================================
       2.  00:8000                      ;; FICHERO cabecera.asm
       3.  00:8000                      ;;=====================================================
       4.  00:8000                      
       5.  00:8000                      ;;CABECERA FICHERO BIN
       6.  00:8000  FE                  	DB	#FE
       7.  00:8001  00 80               	DW	START
       8.  00:8003  8B 8F               	DW	END
       9.  00:8005  00 80               	DW	START
      10.  00:8007                      
      11.  00:8007                      ;;INICIO CÓDIGO PROGRAMA	
      12.  00:8007                      	ORG	#8000
      13.  00:8000                      	
      12   00:8000                      	
      13   00:8000                      START:
      14   00:8000                      	
      15   00:8000                      	;inicializa pantalla y entonrno
      16   00:8000  CD 83 81            	CALL	sub_preparapantalla			;screen 2,2 sin click al pulsar tecla y color 16,1,1
      17   00:8003                      	
      18   00:8003                      	;inicializa variables para parametrizar funciones y que lo que se muestre sea variable (nº vidas, mapa, puertas, pantalla, etc...)
      19   00:8003  CD CA 80            	CALL	inicializa_variables_pruebas
      20   00:8006                      	
      21   00:8006                      	;inicializa los niveles por partida
      22   00:8006  CD F8 80            	CALL	inicializa_niveles			;no es necesario parametrizarlo según el nivel del usuario ya que se cargan todos
      23   00:8009                      	
      24   00:8009                      	;pinta la pantalla (la primera o algunas especiales se pintan completamente)
      25   00:8009  CD B0 81            	CALL	pinta_pantalla_completa 
      26   00:800C                      	
      27   00:800C                      	;carga sprites en memoria (SE HA RETRASADO HASTA PARAMETRIZAR LA CARGA DE PANTALLAS)
      28   00:800C  CD 20 84            	CALL 	carga_patrones_sprites_nivel1
      29   00:800F                      	
      30   00:800F                      	;funciones que modificarian el marcador si se produce un evento cuando toque y cuando se pinta la pantalla ya se mira
      31   00:800F                      	;una variable para ver si el array hay que actualizarlo en pantalla o no
      32   00:800F  CD 0D 81            	CALL	actualiza_marcador_vidas
      33   00:8012  CD 26 81            	CALL	actualiza_marcador_reliquias
      34   00:8015  CD 2F 82            	CALL	pinta_nivel
      35   00:8018  CD B0 82            	CALL	borra_mapa
      36   00:801B                      
      37   00:801B  CD 3D 81            	CALL	localiza_info_habitacion	;devuelve variable habitacion_actual 	
      38   00:801E                      
      39   00:801E  3E 01               	LD		 A,1
      40   00:8020  CD B0 83            	CALL	posiciona_en_mapa		;se le pasa A 1 (tile del prota) está el prota y prota.poxx y posy
      41   00:8023                      
      42   00:8023                      	
      43   00:8023                      loop_principal:
      44   00:8023  76                  	HALT							;espera VBLANK y sincroniza
      45   00:8024                      	
      46   00:8024  CD F1 84            	CALL	render_sprites			;actualiza array de sprites y los pinta en pantalla
      47   00:8027                      	
      48   00:8027  CD A1 82            	CALL	pinta_energia			;pinta la energia en pantalla
      49   00:802A                      
      50   00:802A                      mira_pinta_puertas:
      51   00:802A  3A BF 8B            	LD		 A,(actualiza_puertas_sn)
      52   00:802D  B7                  	OR		 A
      53   00:802E  28 06               	JR		 Z,fin_mira_pinta_puertas
      54   00:8030                      	
      55   00:8030                      	;primero preparo la pantalla como si no hubiera puertas
      56   00:8030  CD B7 81            	CALL 	pinta_parte_superior_pantalla
      57   00:8033                      	
      58   00:8033  CD 3E 83            	CALL	pinta_puertas
      59   00:8036                      fin_mira_pinta_puertas:
      60   00:8036                      	
      61   00:8036                      mira_pinta_vidas:
      62   00:8036  3A A6 8B            	LD		 A, (actualiza_vidas_sn)
      63   00:8039  B7                  	OR		 A
      64   00:803A  28 03               	JR		 Z, fin_mira_pinta_vidas
      65   00:803C  CD 09 82            	CALL	pinta_vidas
      66   00:803F                      fin_mira_pinta_vidas:	
      67   00:803F                      
      68   00:803F                      mira_pinta_reliquias:
      69   00:803F  3A AF 8B            	LD		 A, (actualiza_reliquias_sn)
      70   00:8042  B7                  	OR		 A
      71   00:8043  28 03               	JR		 Z, fin_mira_pinta_reliquias
      72   00:8045  CD 1C 82            	CALL	pinta_reliquias
      73   00:8048                      fin_mira_pinta_reliquias:
      74   00:8048                      
      75   00:8048  CD 52 80            	CALL	check_player			;MIRA EL CONTROL Y APLICA LA LOGICA DE MOVIMIENTO DEL PROTAGONISTA
      76   00:804B                      	
      77   00:804B  CD 4A 82            	CALL	mira_pinta_energia		;actualiza el array de energia siempre pero no pinta eso lo hace pinta_energia
      78   00:804E                      	
      79   00:804E  C3 23 80            	JP		loop_principal
      80   00:8051                      fin_programa_principal:
      81   00:8051  C9                  	RET
      82   00:8052                      
      83   00:8052                      
      84   00:8052                      
      85   00:8052                      
      86   00:8052                      ;;=====================================================
      87   00:8052                      ;;CHECK_PLAYER
      88   00:8052                      ;;=====================================================	
      89   00:8052                      ; función: 	MIRA EL CONTROL Y APLICA LA LOGICA DE MOVIMIENTO DEL PROTAGONISTA
      90   00:8052                      ; entrada: 	-
      91   00:8052                      ; salida: 	-
      92   00:8052                      ; toca: 	
      93   00:8052                      check_player:
      94   00:8052  D9                  	EXX
      95   00:8053                      	
      96   00:8053  AF                  	XOR		 A
      97   00:8054                      	;~ CALL	GTSTCK
      98   00:8054                      	
      99   00:8054                      	;pone resultado en variable tecla_pulsada
     100   00:8054  CD 8A 80            	CALL	obtiene_tecla_pulsada
     101   00:8057                      	;~ ;pone resultado en variable accion_joystic
     102   00:8057                      	;~ CALL	obtiene_accion_joystick
     103   00:8057                      	;~ ;mezcla resultados y ls pone en A
     104   00:8057                      	;~ CALL	mezcla_calores_tecla_joystick
     105   00:8057                      	
     106   00:8057  3A 02 8C            	LD		 A, (teclas_pulsadas)
     107   00:805A  C8                  	RET		 Z						;si no se ha pulsado nada no se necesita mirar nada
     108   00:805B  E6 0F               	AND		 A, 00001111b
     109   00:805D                      	
     110   00:805D  FE 01               	CP		MUEARR
     111   00:805F  CC 26 85            	CALL	 Z,mueve_arriba
     112   00:8062  FE 02               	CP		MUEARRDER
     113   00:8064  CC 33 85            	CALL	 Z,mueve_arriba_derecha
     114   00:8067  FE 03               	CP		MUEDER
     115   00:8069  CC 39 85            	CALL	 Z,mueve_derecha
     116   00:806C  FE 04               	CP		MUEDERABA
     117   00:806E  CC 48 85            	CALL	 Z,mueve_derecha_abajo
     118   00:8071  FE 05               	CP		MUEABA
     119   00:8073  CC 4E 85            	CALL	 Z,mueve_abajo
     120   00:8076  FE 06               	CP		MUEABAIZQ
     121   00:8078  CC 5D 85            	CALL	 Z,mueve_abajo_izquierda
     122   00:807B  FE 07               	CP		MUEIZQ
     123   00:807D  CC 63 85            	CALL	 Z,mueve_izquierda
     124   00:8080  FE 08               	CP		MUEIZQARR
     125   00:8082  CC 70 85            	CALL	 Z,mueve_izquierda_arriba
     126   00:8085                      	
     127   00:8085                      	;zona par mirar disparo
     128   00:8085                      
     129   00:8085  CD FD 84            	CALL	vuelca_resultado_puntomira_array
     130   00:8088                      
     131   00:8088  D9                  	EXX
     132   00:8089                      fin_check_player:
     133   00:8089  C9                  	RET
     134   00:808A                      
     135   00:808A                      
     136   00:808A                      
     137   00:808A                      ;;=====================================================
     138   00:808A                      ;;OBTIENE TECLA PULSADA
     139   00:808A                      ;;=====================================================	
     140   00:808A                      ; función: 	devuelve un valor entre 1 y 8 según la dirección de teclas pulsada
     141   00:808A                      ; entrada: 	-
     142   00:808A                      ; salida: 	teclas_pulsadas
     143   00:808A                      ; toca: 	
     144   00:808A                      obtiene_tecla_pulsada:
     145   00:808A                      	;primero vacio la variable teclas_pulsadas
     146   00:808A                      	;XXPS para disparo primario  y secundario
     147   00:808A                      	;DDDD para movimientos 
     148   00:808A  AF                  	XOR		 A
     149   00:808B  57                  	LD		 D, A 					;inicializo D porque guardaré el resultado ahí y luego lo mando a teclas_pulsadas
     150   00:808C                      
     151   00:808C                      	;segundo examino la fila 6 y bit 0 para ver si se ha pulsado SHIFT en cuyo caso vale 0
     152   00:808C  06 06               	LD		 B, 6
     153   00:808E                      	
     154   00:808E  DB AA               	IN		 A, (#AA)
     155   00:8090  E6 F0                   AND		#F0
     156   00:8092  B0                      OR		 B
     157   00:8093  D3 AA                   OUT		(#AA), A
     158   00:8095  DB A9                   IN		 A, (#A9)
     159   00:8097                      	
     160   00:8097  CB 47               	BIT		 0, A					;Se ha pulsado shift?
     161   00:8099  C2 9F 80            	JP		 NZ, .finsi_pulsado_shift
     162   00:809C  3E 10               	LD		 A, 00010000b
     163   00:809E  57                  	LD		D, A					;pongo el bit 5 de la D a 1
     164   00:809F                      .finsi_pulsado_shift:
     165   00:809F                      
     166   00:809F  06 08               	LD		 B, 8					;linea donde están los cursores y espacio
     167   00:80A1                      	
     168   00:80A1  DB AA               	IN		 A, (#AA)
     169   00:80A3  E6 F0                   AND		#F0
     170   00:80A5  B0                      OR		 B
     171   00:80A6  D3 AA                   OUT		(#AA), A
     172   00:80A8  DB A9                   IN		 A, (#A9)
     173   00:80AA                      	
     174   00:80AA  CB 47               	BIT		 0, A					;Se ha pulsado espacio?
     175   00:80AC  C2 B5 80            	JP		 NZ, .finsi_pulsado_espacio
     176   00:80AF  08                  	EX		AF, AF'					;guardo el valor de A para para actualizar D
     177   00:80B0  3E 20               	LD		 A, 00100000b
     178   00:80B2  B2                  	OR		 D
     179   00:80B3  57                  	LD		 D, A
     180   00:80B4  08                  	EX		AF, AF'
     181   00:80B5                      .finsi_pulsado_espacio:
     182   00:80B5                      	
     183   00:80B5                      	;miramos las pulsaciones de cursores
     184   00:80B5                      [4] SRL		 A						;preparo A que tiene en los 4 primeros bits las pulsaciones de cursores
     184   00:80B5  CB 3F CB 3F CB 3F CB 3F 
     185   00:80BD                      
     186   00:80BD  21 04 8C            	LD		HL, array_movimientos_cursores
     187   00:80C0  06 00               	LD		 B, 0
     188   00:80C2  4F                  	LD		 C, A
     189   00:80C3  09                  	ADD		HL, BC
     190   00:80C4                      	
     191   00:80C4  7E                  	LD		 A, (HL)
     192   00:80C5  B2                  	OR		 D
     193   00:80C6                      	
     194   00:80C6  32 02 8C            	LD		(teclas_pulsadas), A
     195   00:80C9                      fin_obtiene_tecla_pulsada:
     196   00:80C9  C9                  	RET
     197   00:80CA                      
     198   00:80CA                      
     199   00:80CA                      
     200   00:80CA                      ;;*******************************************************************
     201   00:80CA                      ; sólo para hacer pruebas y pintar la parte de las vidas y demás
     202   00:80CA                      inicializa_variables_pruebas:
     203   00:80CA  3E 04               	LD		 A, 4
     204   00:80CC  32 57 86            	LD		(prota_vidas),A
     205   00:80CF                      
     206   00:80CF  3E 01               	LD		 A, SI	
     207   00:80D1  32 A6 8B            	LD		(actualiza_vidas_sn), A	;actualizo la variable para que pinte vidas 1 sí / 0 no
     208   00:80D4                      
     209   00:80D4  3E 05               	LD		 A, 5
     210   00:80D6  32 58 86            	LD		(prota_reliquias), A
     211   00:80D9                      	
     212   00:80D9  3E 01               	LD		 A, SI	
     213   00:80DB  32 AF 8B            	LD		(actualiza_reliquias_sn), A	;actualizo la variable para que pinte vidas 1 sí / 0 no
     214   00:80DE                      
     215   00:80DE  3E 64               	LD		 A, 100
     216   00:80E0  32 5B 86            	LD		(prota_energia), A
     217   00:80E3                      
     218   00:80E3  3E 01               	LD		 A, 1
     219   00:80E5  32 56 86            	LD		(prota_nivel), A		;nivel empieza en 0 para usar las posiciones ascii
     220   00:80E8                      	
     221   00:80E8                      	;ubico al prota dentro del nivel para obtener luego las habitaciones y enemigos que aparecerán
     222   00:80E8                      	;será igual la posición inicial en todos los niveles
     223   00:80E8                      
     224   00:80E8  3E 00               	LD		 A, 0				;los niveles son 7 del 0 al 6
     225   00:80EA  32 5A 86            	LD		(prota_pos_mapy), A	;pos y dentro del nivel (se empieza en 0)
     226   00:80ED                      
     227   00:80ED  3E 03               	LD		 A, 3				;columnas 7 del 0 al 6
     228   00:80EF  32 59 86            	LD		(prota_pos_mapx), A	;pos y dentro del nivel (se empieza en 0)
     229   00:80F2                      	
     230   00:80F2                      	;************************************************
     231   00:80F2                      	;importante : revisar pintado de mapa
     232   00:80F2                      
     233   00:80F2  3E 01               	LD			 A, 1 
     234   00:80F4  32 BF 8B            	LD			(actualiza_puertas_sn), A;(1 actualiza y 0 no actualiza puertas)
     235   00:80F7                      fin_inicializa_variables_pruebas:
     236   00:80F7  C9                  	RET
     237   00:80F8                      ;;************************************************************************
     238   00:80F8                      
     239   00:80F8                      
     240   00:80F8                      
     241   00:80F8                      
     242   00:80F8                      
     243   00:80F8                      
     244   00:80F8                      
     245   00:80F8                      
     246   00:80F8                      
     247   00:80F8                      ;;=====================================================
     248   00:80F8                      ;;DEFINICIÓN DE SUBRUTINAS
     249   00:80F8                      ;;=====================================================
     250   00:80F8                      	include "subrutinas.asm"
       1.  00:80F8                      ;;=====================================================
       2.  00:80F8                      ;;DEFINICIÓN DE SUBRUTINAS
       3.  00:80F8                      ;;=====================================================	
       4.  00:80F8                      
       5.  00:80F8                      
       6.  00:80F8                      ;;=====================================================
       7.  00:80F8                      ;;INICIALIZA_NIVELES
       8.  00:80F8                      ;;=====================================================	
       9.  00:80F8                      ; función: 	copia la plantilla de niveles (habitaciones_plantilla) en los niveles de trabajo para el juego (habitaciones_juego)
      10.  00:80F8                      ; entrada: 	habitaciones_plantilla
      11.  00:80F8                      ; salida: 	habitaciones_juego
      12.  00:80F8                      ; toca: 	A
      13.  00:80F8                      inicializa_niveles:
      14.  00:80F8  D9                  	EXX
      15.  00:80F9                      	
      16.  00:80F9  AF                  	XOR		 A
      17.  00:80FA  06 31               	LD		 B, 49				;7 filas por 7 niveles menos el primero que lo hago diera del buble porque se suma 14 y no 16
      18.  00:80FC  21 7E 88            	LD		HL, habitaciones_juego;tambíen puntero al primer nivel
      19.  00:80FF  11 0E 00            	LD		DE,14
      20.  00:8102  19                  	ADD		HL,DE
      21.  00:8103  77                  	LD		(HL),A
      22.  00:8104  11 10 00            	LD		DE,16				;desde las col 15 de una fila a la siguiente
      23.  00:8107                      .bucle_borra_hab:
      24.  00:8107  19                  	ADD		HL,DE
      25.  00:8108  77                  	LD		(HL),A
      26.  00:8109  10 FC               	DJNZ	.bucle_borra_hab
      27.  00:810B                      	
      28.  00:810B  D9                  	EXX
      29.  00:810C                      fin_iniciliza_niveles:
      30.  00:810C  C9                  	RET
      31.  00:810D                      
      32.  00:810D                      
      33.  00:810D                      ;;=====================================================
      34.  00:810D                      ;;ACTUALIZA_MARCADOR_VIDAS
      35.  00:810D                      ;;=====================================================	
      36.  00:810D                      ; función:  actualiza el buffer de vidas
      37.  00:810D                      ; entrada: 	prota_vidas
      38.  00:810D                      ; salida: 	array_aux_vidas
      39.  00:810D                      ; toca:		A,B,HL
      40.  00:810D                      actualiza_marcador_vidas:
      41.  00:810D  D9                  	EXX
      42.  00:810E                      
      43.  00:810E                      	;para no andar restando pongo todos los huecos a negro y luego en otro bucle las caras
      44.  00:810E                      	;1-pinto todo en blanco
      45.  00:810E  21 9E 8B            	LD		HL,array_aux_vidas
      46.  00:8111  06 08               	LD		 B,NMAXVIDREL
      47.  00:8113                      loop_marcador_caras_negro:	;asignar espacios en negro
      48.  00:8113  36 00               	LD		(HL),0			;0 posición mapa tiles para nada (es transparente pero el fondo es negro)
      49.  00:8115  23                  	INC		HL
      50.  00:8116  10 FB               	DJNZ	loop_marcador_caras_negro
      51.  00:8118                      fin_loop_marcador_caras_negro:
      52.  00:8118                      	;2-pinto las caras según el n de vidas
      53.  00:8118  21 9E 8B            	LD		HL,array_aux_vidas
      54.  00:811B  3A 57 86            	LD		 A,(prota_vidas)
      55.  00:811E  47                  	LD		 B,A
      56.  00:811F                      loop_marcador_caras: ;asignar caras
      57.  00:811F  36 0D               	LD		(HL),POSCARAMAP	;13 posición mapa tiles para cara
      58.  00:8121  23                  	INC		HL
      59.  00:8122  10 FB               	DJNZ	loop_marcador_caras
      60.  00:8124                      fin_loop_marcador_caras:
      61.  00:8124                      
      62.  00:8124  D9                  	EXX
      63.  00:8125                      fin_actualiza_marcador_vidas:
      64.  00:8125  C9                  	RET
      65.  00:8126                      
      66.  00:8126                      
      67.  00:8126                      ;;=====================================================
      68.  00:8126                      ;;ACTUALIZA_MARCADOR_RELIQUIAS
      69.  00:8126                      ;;=====================================================	
      70.  00:8126                      ; función: 	actualiza buffer de reliquias
      71.  00:8126                      ; entrada: 	prota_reliquias
      72.  00:8126                      ; salida: 	array_aux_reliquias
      73.  00:8126                      ; toca:		A,B,HL
      74.  00:8126                      actualiza_marcador_reliquias:
      75.  00:8126                      	;para no andar restando pongo todos los huecos a negro y luego en otro bucle las reliquias
      76.  00:8126                      	;1-pinto todo en blanco
      77.  00:8126  21 A7 8B            	LD		HL, array_aux_reliquias
      78.  00:8129  06 08               	LD		 B, NMAXVIDREL
      79.  00:812B                      loop_marcador_reliquias_negro:	;asignar espacios en negro
      80.  00:812B  36 00               	LD		(HL), 0			;0 posición mapa tiles para nada (es transparente pero el fondo es negro)
      81.  00:812D  23                  	INC		HL
      82.  00:812E  10 FB               	DJNZ	loop_marcador_reliquias_negro
      83.  00:8130                      fin_loop_marcador_reliquias_negro:
      84.  00:8130                      	;2-pinto las cruces según el n de reliquias
      85.  00:8130  21 A7 8B            	LD		HL, array_aux_reliquias
      86.  00:8133  3A 58 86            	LD		 A, (prota_reliquias)
      87.  00:8136  47                  	LD		 B, A
      88.  00:8137                      loop_marcador_reliquias: ;asignar reliquias
      89.  00:8137  36 11               	LD		(HL), POSRELIMAP	;17 posición mapa tiles para reliquia
      90.  00:8139  23                  	INC		HL
      91.  00:813A  10 FB               	DJNZ	loop_marcador_reliquias
      92.  00:813C                      fin_loop_marcador_reliquias:
      93.  00:813C                      fin_actualiza_marcador_reliquias:
      94.  00:813C  C9                  	RET
      95.  00:813D                      
      96.  00:813D                      
      97.  00:813D                      
      98.  00:813D                      ;;=====================================================
      99.  00:813D                      ;;LOCALIZA_INFO_HABITACION
     100.  00:813D                      ;;=====================================================	
     101.  00:813D                      ; función: 	busca las puertas que hay que pintar egún la posición del usuario y las pone en A
     102.  00:813D                      ; entrada: 	prota.pos_mapy, prota.pos_mapx, prota_nivel habitaciones_juego
     103.  00:813D                      ; salida: 	habitacion_actual
     104.  00:813D                      ; toca:		A
     105.  00:813D                      ;ejemplo: nivel 4, posx 5 y posy 3
     106.  00:813D                      ;  (4 x 7) x 16 (se necesitan dos bytes y el prod de 16 es slr 4 veces)
     107.  00:813D                      ; +(3 x 16) 	de la fila (se necesita 1 y byte el prod de 16 es slr 4 veces)
     108.  00:813D                      ; +5        	de la columna 
     109.  00:813D                      localiza_info_habitacion:
     110.  00:813D  D9                  		EXX
     111.  00:813E                      
     112.  00:813E                      ;primer sumando	(en el ejemplo + (4x7)x16)
     113.  00:813E  21 7E 88            		LD		HL, habitaciones_juego
     114.  00:8141  3A 56 86            		LD		 A, (prota_nivel)	
     115.  00:8144  B7                  		OR		 A
     116.  00:8145  28 16               		JR		 Z, .no_suma_niveles_previos	;el primero nivel (0) no sumaría ni uno por lo que salto al segundo sumando
     117.  00:8147                      	;sumo 7 veces el nº de nivel si no es cero
     118.  00:8147  57                  		LD		 D, A
     119.  00:8148  06 06               		LD		 B, 6
     120.  00:814A                      .primer_producto
     121.  00:814A  82                  		ADD		 A, D
     122.  00:814B  10 FD               		DJNZ	 .primer_producto
     123.  00:814D  47                  		LD		 B, A				;guardo el resultado en B
     124.  00:814E                      
     125.  00:814E                      ;el resultado previo está en B. Ahoro hay que multiplicar A x 16, lo guardo en DE y lo sumo en HL
     126.  00:814E                      		;inicializo valores a 0
     127.  00:814E  AF                  		XOR		 A
     128.  00:814F  57                  		LD		 D, A
     129.  00:8150  5F                  		LD		 E, A
     130.  00:8151  67                  		LD		 H, A
     131.  00:8152  6F                  		LD		 L, A
     132.  00:8153                      
     133.  00:8153  58                  		LD		 E, B				;pongo el (4x7) en HL (estaba en B)
     134.  00:8154                      		
     135.  00:8154  06 10               		LD		 B, 16
     136.  00:8156                      .segundo_producto
     137.  00:8156  19                  		ADD		HL, DE				;segundo producto x 16
     138.  00:8157  10 FD               		DJNZ	.segundo_producto	
     139.  00:8159                      		
     140.  00:8159                      .fin_seg_prod:
     141.  00:8159                      	;coloco puntero DE al inicio de las habitaciones y le sumo para poner el puntero en el nivel que me interesa
     142.  00:8159  11 7E 88            		LD		DE, habitaciones_juego
     143.  00:815C  19                  		ADD		HL, DE				;suma el nº de bytes de los niveles previos (4 x 7 x 16)
     144.  00:815D                      .no_suma_niveles_previos:
     145.  00:815D                      
     146.  00:815D                      ;ya tengo el puntero HL al inicio del nivel que me interesa
     147.  00:815D                      
     148.  00:815D                      ;segundo sumando (en el ejemplo + 3x16)
     149.  00:815D  3A 5A 86            	LD		 A,(prota_pos_mapy)
     150.  00:8160                      [4]	SLA		 A				;equivalente a 3 x 16			
     150.  00:8160  CB 27 CB 27 CB 27 CB 27 
     151.  00:8168                      
     152.  00:8168  5F                  	LD		 E, A
     153.  00:8169  AF                  	XOR		 A
     154.  00:816A  57                  	LD		 D, A
     155.  00:816B  19                  	ADD		HL, DE			;equivale a 4x7x16 (HL) + 3x16 (DE)
     156.  00:816C                      
     157.  00:816C                      ;tercer sumando (en el ejemplo + 5)
     158.  00:816C  3A 59 86            	LD		 A, (prota_pos_mapx)
     159.  00:816F  47                  	LD		 B, A
     160.  00:8170                      .situa_columna:
     161.  00:8170  23 23               [2]	INC		HL
     162.  00:8172  10 FC               	DJNZ	.situa_columna
     163.  00:8174                      
     164.  00:8174                      ;ya tengo el puntero HL al inicio de la fila que me interesa
     165.  00:8174                      
     166.  00:8174                      ;colocamos resultado en habitación actual
     167.  00:8174  DD 21 7C 88         	LD		IX, habitacion_actual
     168.  00:8178  7E                  	LD		 A, (HL)
     169.  00:8179  DD 77 00            	LD		(IX), A
     170.  00:817C  23                  	INC		HL
     171.  00:817D  7E                  	LD		 A, (HL)
     172.  00:817E  DD 77 01            	LD		(IX+1), A
     173.  00:8181                      	
     174.  00:8181  D9                  	EXX
     175.  00:8182                      fin_localiza_info_habitacion:
     176.  00:8182  C9                  	RET
     177.  00:8183                      
     178.  00:8183                      
     179.  00:8183                      
     180.  00:8183                      
     251   00:8183                      	
     252   00:8183                      	include "subr_pintapantalla.asm"
       1.  00:8183                      ;;=====================================================
       2.  00:8183                      ;;DEFINICIÓN DE SUBRUTINAS
       3.  00:8183                      ;;=====================================================	
       4.  00:8183                      ;relacionadas con pintado en pantalla (y no sprites)
       5.  00:8183                      
       6.  00:8183                      
       7.  00:8183                      ;;=====================================================
       8.  00:8183                      ;;PREPARAPANTALLA
       9.  00:8183                      ;;=====================================================	
      10.  00:8183                      ; función: elimina clic cuando se pulsa tecla, cls, screen 2,2
      11.  00:8183                      ; entrada: -
      12.  00:8183                      ; salida: -
      13.  00:8183                      ; toca: si no son todos los regristros, casi todos
      14.  00:8183                      sub_preparapantalla:
      15.  00:8183                      	;toca A y Z
      16.  00:8183                      elimina_clic;
      17.  00:8183  AF                  	XOR		 A
      18.  00:8184  32 DB F3            	LD		(CLIKSW),A
      19.  00:8187                      fin_elimina_clic:
      20.  00:8187                      
      21.  00:8187                      	;toca A
      22.  00:8187                      limpia_pantalla:
      23.  00:8187  AF                  	XOR			A
      24.  00:8188  CD C3 00            	CALL 		CLS
      25.  00:818B                      fin_limpia_pantalla:
      26.  00:818B                      
      27.  00:818B                      	;toca A y direcciones #F3E9/#F3EA/#F3EB
      28.  00:818B                      set_color:
      29.  00:818B  3E 02               	LD		 A,2				;verde oscuro
      30.  00:818D  32 E9 F3            	LD 		(FORCLR),A
      31.  00:8190  3E 01               	LD		 A,1				;negro
      32.  00:8192  32 EA F3            	LD 		(BAKCLR),A
      33.  00:8195  3E 01               	LD		 A,1				;negro
      34.  00:8197  32 EB F3            	LD 		(BDRCLR),A
      35.  00:819A  CD 62 00            	CALL	CHGCLR  
      36.  00:819D                      fin_set_color:
      37.  00:819D                      	
      38.  00:819D                      	;cambiamos a SCREEN 2,2 del BASIC
      39.  00:819D                      	;toca A
      40.  00:819D                      screen2:
      41.  00:819D  3E 02               	LD		 A,2
      42.  00:819F  CD 5F 00            	CALL	CHGMOD			;selecciona screen 2
      43.  00:81A2                      sprites_16_16:
      44.  00:81A2  3A E0 F3            	LD		 A,(RG1SAV)
      45.  00:81A5  F6 02               	OR		00000010b		;fuerza sprites de 16x16
      46.  00:81A7  32 E0 F3            	LD		(RG1SAV),A		;no lo guardamos en la copia de variables del sistema
      47.  00:81AA  47                  	LD		 B,A
      48.  00:81AB  0E 01               	LD		 C,1
      49.  00:81AD  C3 47 00            	JP		WRTVDP			;opción alternativa de escribir las tres lineas siguientes
      50.  00:81B0                      	;~ CALL	WRTVDP			;lo escribe en el registro 1 del VDP
      51.  00:81B0                      	;~ RET
      52.  00:81B0                      fin_sub_preparapantalla:
      53.  00:81B0                      	
      54.  00:81B0                      
      55.  00:81B0                      ;;=====================================================
      56.  00:81B0                      ;;PINTA_PANTALLA_COMPLETA
      57.  00:81B0                      ;;=====================================================	
      58.  00:81B0                      ; función: pinta el escenario, las 3 partes
      59.  00:81B0                      ; entrada: -
      60.  00:81B0                      ; salida: -
      61.  00:81B0                      ; toca: si no son todos los regristros, casi todos
      62.  00:81B0                      pinta_pantalla_completa:
      63.  00:81B0  CD B7 81            	CALL 	pinta_parte_superior_pantalla
      64.  00:81B3                      	
      65.  00:81B3  CD EE 81            	CALL 	pinta_parte_inferior_pantalla	
      66.  00:81B6                      fin_pinta_pantalla_completa:
      67.  00:81B6  C9                  	RET
      68.  00:81B7                      
      69.  00:81B7                      
      70.  00:81B7                      ;;=====================================================
      71.  00:81B7                      ;;PINTA_PARTE_SUPERIOR_PANTALLA
      72.  00:81B7                      ;;=====================================================	
      73.  00:81B7                      ; función: pinta el escenario, las 2 partes superiores y actualiza puertas
      74.  00:81B7                      ; entrada: -
      75.  00:81B7                      ; salida: -
      76.  00:81B7                      ; toca: si no son todos los regristros, casi todos
      77.  00:81B7                      pinta_parte_superior_pantalla:
      78.  00:81B7                      
      79.  00:81B7                      ;************** preguntar cómo parametrizar esto **********************************************
      80.  00:81B7                      
      81.  00:81B7                      	;cangando banco 1
      82.  00:81B7                      	;cargamos los patrones
      83.  00:81B7  21 22 8D            	LD		HL, tiles_patrones_pantalla11
      84.  00:81BA  11 00 00            	LD		DE, CHRTBL
      85.  00:81BD  CD 76 85            	CALL	depack_VRAM
      86.  00:81C0                      	;cargamos mapa de pantalla
      87.  00:81C0  21 5D 8D            	LD		HL, tiles_mapa_pantalla11
      88.  00:81C3  11 00 18            	LD		DE, TILMAP
      89.  00:81C6  CD 76 85            	CALL	depack_VRAM
      90.  00:81C9                      	;cargamos los colores de los patrones
      91.  00:81C9  21 45 8D            	LD		HL, tiles_color_pantalla11
      92.  00:81CC  11 00 20            	LD		DE, CLRTBL
      93.  00:81CF  CD 76 85            	CALL	depack_VRAM
      94.  00:81D2                      	
      95.  00:81D2                      	;cangando banco 2
      96.  00:81D2                      	;cargamos los patrones
      97.  00:81D2  21 22 8D            	LD		HL, tiles_patrones_pantalla12
      98.  00:81D5  11 00 08            	LD		DE, CHRTBL + #0800
      99.  00:81D8  CD 76 85            	CALL	depack_VRAM	
     100.  00:81DB                      	;cargamos mapa de pantalla
     101.  00:81DB  21 77 8D            	LD		HL, tiles_mapa_pantalla12
     102.  00:81DE  11 00 19            	LD		DE, TILMAP + #0100
     103.  00:81E1  CD 76 85            	CALL	depack_VRAM
     104.  00:81E4                      	;cargamos los colores de los patrones
     105.  00:81E4  21 45 8D            	LD		HL, tiles_color_pantalla12
     106.  00:81E7  11 00 28            	LD		DE, CLRTBL + #0800
     107.  00:81EA                      	;JP		depack_VRAM
     108.  00:81EA  CD 76 85            	CALL	depack_VRAM
     109.  00:81ED                      fin_pinta_parte_superior_pantalla:
     110.  00:81ED  C9                  	RET
     111.  00:81EE                      
     112.  00:81EE                      
     113.  00:81EE                      ;;=====================================================
     114.  00:81EE                      ;;PINTA_PARTE_INFERIOR_PANTALLA
     115.  00:81EE                      ;;=====================================================	
     116.  00:81EE                      ; función: pinta la parte inferior del escenario que es común
     117.  00:81EE                      ; entrada: -
     118.  00:81EE                      ; salida: -
     119.  00:81EE                      ; toca: si no son todos los regristros, casi todos
     120.  00:81EE                      pinta_parte_inferior_pantalla:
     121.  00:81EE                      	;cangando banco 3
     122.  00:81EE                      	;cargamos los patrones
     123.  00:81EE  21 A1 8D            	LD		HL,tiles_patrones_pantalla3
     124.  00:81F1  11 00 10            	LD		DE,CHRTBL + #1000
     125.  00:81F4  CD 76 85            	CALL	depack_VRAM	
     126.  00:81F7                      	;cargamos mapa de pantalla
     127.  00:81F7  21 1C 8F            	LD		HL,tiles_mapa_pantalla3
     128.  00:81FA  11 00 1A            	LD		DE,TILMAP + #0200
     129.  00:81FD  CD 76 85            	CALL	depack_VRAM
     130.  00:8200                      	;cargamos los colores de los patrones
     131.  00:8200  21 E7 8E            	LD		HL,tiles_color_pantalla3
     132.  00:8203  11 00 30            	LD		DE,CLRTBL + #1000
     133.  00:8206  C3 76 85            	JP		depack_VRAM
     134.  00:8209                      	;~ CALL	depack_VRAM
     135.  00:8209                      fin_pinta_parte_inferior_pantalla:
     136.  00:8209                      	;~ RET
     137.  00:8209                      
     138.  00:8209                      
     139.  00:8209                      
     140.  00:8209                      ;;=====================================================
     141.  00:8209                      ;;PINTA_VIDAS
     142.  00:8209                      ;;=====================================================	
     143.  00:8209                      ; función: 	actualiza el mapa de tiles para que en el próximo refresco se pinten y actualiza_vidas
     144.  00:8209                      ; entrada: 	array_aux_vidas
     145.  00:8209                      ; salida: 	actualiza_vidas_sn
     146.  00:8209                      ; toca:		AF
     147.  00:8209                      pinta_vidas:
     148.  00:8209  D9                  	EXX
     149.  00:820A                      	
     150.  00:820A  21 9E 8B            	LD		HL, array_aux_vidas
     151.  00:820D  11 48 1A            	LD		DE, TILMAP + POSVIDAS 	;inicio posición en el mapa de tiles de las vidas
     152.  00:8210  01 08 00            	LD		BC, NMAXVIDREL			;hay 8 posiciones para vidas/reliquias o espacios en negro si no tiene 8 vidas/reliquias
     153.  00:8213  CD 5C 00            	CALL	LDIRVM
     154.  00:8216                      	
     155.  00:8216                      	;una vez quer está pintada ya no se actualizará a menos que perdamos/ganemos una vida
     156.  00:8216  AF                  	XOR		 A
     157.  00:8217  32 A6 8B            	LD		(actualiza_vidas_sn),A
     158.  00:821A                      
     159.  00:821A  D9                  	EXX
     160.  00:821B                      fin_pinta_vidas:
     161.  00:821B  C9                  	RET
     162.  00:821C                      	
     163.  00:821C                      	
     164.  00:821C                      
     165.  00:821C                      ;;=====================================================
     166.  00:821C                      ;;PINTA_RELIQUIAS
     167.  00:821C                      ;;=====================================================	
     168.  00:821C                      ; función: 	actualiza el mapa de tiles para que en el próximo refresco se pinten y actualiza_reliquias
     169.  00:821C                      ; entrada: 	array_aux_reliquias
     170.  00:821C                      ; salida: 	actualiza_reliquias_sn
     171.  00:821C                      ; toca:		AF
     172.  00:821C                      pinta_reliquias:
     173.  00:821C  D9                  	EXX
     174.  00:821D                      	
     175.  00:821D  21 A7 8B            	LD		HL, array_aux_reliquias
     176.  00:8220  11 C8 1A            	LD		DE, TILMAP + POSRELIQ 	;inicio posición en el mapa de tiles de las vidas
     177.  00:8223  01 08 00            	LD		BC, NMAXVIDREL			;hay 8 posiciones para vidas/reliquias o espacios en negro si no tiene 8 vidas/reliquias
     178.  00:8226  CD 5C 00            	CALL	LDIRVM
     179.  00:8229                      	
     180.  00:8229                      	;una vez quer está pintada ya no se actualizará a menos que ganemos/gastemos una reliquia
     181.  00:8229  AF                  	XOR		 A
     182.  00:822A  32 AF 8B            	LD		(actualiza_reliquias_sn), A
     183.  00:822D                      
     184.  00:822D  D9                  	EXX
     185.  00:822E                      fin_pinta_reliquias:
     186.  00:822E  C9                  	RET
     187.  00:822F                      	
     188.  00:822F                      
     189.  00:822F                      
     190.  00:822F                      	
     191.  00:822F                      ;;=====================================================
     192.  00:822F                      ;;PINTA_NIVEL
     193.  00:822F                      ;;=====================================================	
     194.  00:822F                      ; función: 	actualiza el nivel en la parte de puntuación
     195.  00:822F                      ; entrada: 	prota_nivel
     196.  00:822F                      ; salida: 	-
     197.  00:822F                      ; toca:		HL,DE,BC
     198.  00:822F                      pinta_nivel:	
     199.  00:822F                      	;forma más avanzada sin llamada a la bios
     200.  00:822F  01 B4 1A            	LD		BC,TILMAP + POSNIVEL ;posición en el mapa de tiles del tile de nivel
     201.  00:8232  3A 56 86            	LD		 A, (prota_nivel)	;seleccionando la pos del banco de tiles a poner en el mapa
     202.  00:8235  C6 30               	ADD		'0'	
     203.  00:8237  57                  	LD		 D, A
     204.  00:8238                      	
     205.  00:8238  CD 3C 82            	CALL	pinta_tile_suelto	;nota ... un call+ret se debe poder sustiruir por un jp
     206.  00:823B                      fin_pinta_nivel:
     207.  00:823B  C9                  	RET
     208.  00:823C                      
     209.  00:823C                      
     210.  00:823C                      
     211.  00:823C                      ;;=====================================================
     212.  00:823C                      ;;PINTA_TILE_SUELTO
     213.  00:823C                      ;;=====================================================	
     214.  00:823C                      ; función: 	pinta al tile que digamos en D, en la posición BC
     215.  00:823C                      ; entrada: 	BC (posición a pintar en el mapa),D (qué se va a pintar el esa posición)
     216.  00:823C                      ; salida: 	-
     217.  00:823C                      ; toca:		-
     218.  00:823C                      pinta_tile_suelto:
     219.  00:823C  DB 99               	IN		 A,(REGEST)		;leer registro de estado (recomendado)
     220.  00:823E  79                  	LD		 A,C			;primero byte bajo	
     221.  00:823F  D3 99               	OUT		(REGEST),A
     222.  00:8241  78                  	LD		 A,B			;después byte alto  ********************** preguntar a Fernando cómo que byte bajo es B
     223.  00:8242  F6 40               	OR		1000000b		;+64
     224.  00:8244  D3 99               	OUT		(REGEST),A
     225.  00:8246                      	
     226.  00:8246  7A                  	LD		A,D
     227.  00:8247  D3 98               	OUT		(REGESCVDP),A	;escribe A en VRAM en la posición indicada por los dos OUT anteriores
     228.  00:8249                      fin_pinta_tile_suelto:
     229.  00:8249  C9                  	RET
     230.  00:824A                      
     231.  00:824A                      
     232.  00:824A                      
     233.  00:824A                      
     234.  00:824A                      
     235.  00:824A                      ;;=====================================================
     236.  00:824A                      ;;MIRA_PINTA ENERGIA
     237.  00:824A                      ;;=====================================================	
     238.  00:824A                      ; función: 	actualiza el nivel de energia en la parte de puntuación
     239.  00:824A                      ; nota:		el cuadrado más bajo de ejergía siempre estará pintado... se obviará
     240.  00:824A                      ; entrada: 	prota.energia, array_aux_energia
     241.  00:824A                      ; salida: 	-
     242.  00:824A                      ; toca:		ninguno porque usa EXX
     243.  00:824A                      
     244.  00:824A                      ; nota importante... lo mismo interesa hacer esto con un array para comparar y un bucle
     245.  00:824A                      
     246.  00:824A                      
     247.  00:824A                      mira_pinta_energia:
     248.  00:824A  D9                  	EXX							;por si acaso guardo el contenido de HL (si veo que no es necesario guardarlo lo quito) uso esto en vez de push por el nº ciclos
     249.  00:824B                      	
     250.  00:824B  3A 5B 86            	LD		 A,(prota_energia) 	;para las comparaciones A variable (actual) y B fijo (limites)
     251.  00:824E                      
     252.  00:824E  0E 00               	LD		 C,TILENEGRO		;para agilizar asignaciones en vez de un valor cte uso otro registro
     253.  00:8250                      pinta_ener:
     254.  00:8250                      pinta_ener_tile_8:
     255.  00:8250  21 B7 8B            	LD		HL,ultimo_pos_array_aux_energia	;coloco puntero en array e iré decrementando
     256.  00:8253  06 D9               	LD		 B,TILEENERG8
     257.  00:8255  B8                  	CP		 B
     258.  00:8256  38 04               	JR		C,pinta_ener_tile_8_negro
     259.  00:8258  36 0E               	LD		(HL),TILEMAPVERD
     260.  00:825A  18 01               	JR		pinta_ener_tile_7
     261.  00:825C                      pinta_ener_tile_8_negro:
     262.  00:825C  71                  	LD		(HL),C
     263.  00:825D                      
     264.  00:825D                      pinta_ener_tile_7:
     265.  00:825D  2B                  	DEC		HL
     266.  00:825E  06 BA               	LD		 B,TILEENERG7
     267.  00:8260  B8                  	CP		 B
     268.  00:8261  38 04               	JR		C,pinta_ener_tile_7_negro
     269.  00:8263  36 0E               	LD		(HL),TILEMAPVERD
     270.  00:8265  18 01               	JR		pinta_ener_tile_6
     271.  00:8267                      pinta_ener_tile_7_negro:
     272.  00:8267  71                  	LD		(HL),C
     273.  00:8268                      
     274.  00:8268                      pinta_ener_tile_6:
     275.  00:8268  2B                  	DEC		HL
     276.  00:8269  06 9B               	LD		 B,TILEENERG6
     277.  00:826B  B8                  	CP		 B
     278.  00:826C  38 04               	JR		C,pinta_ener_tile_6_negro
     279.  00:826E  36 0E               	LD		(HL),14
     280.  00:8270  18 01               	JR		pinta_ener_tile_5
     281.  00:8272                      pinta_ener_tile_6_negro:
     282.  00:8272  71                  	LD		(HL),C
     283.  00:8273                      
     284.  00:8273                      pinta_ener_tile_5:
     285.  00:8273  2B                  	DEC		HL
     286.  00:8274  06 7C               	LD		 B,TILEENERG5
     287.  00:8276  B8                  	CP		 B
     288.  00:8277  38 04               	JR		C,pinta_ener_tile_5_negro
     289.  00:8279  36 0E               	LD		(HL),TILEMAPVERD
     290.  00:827B  18 01               	JR		pinta_ener_tile_4
     291.  00:827D                      pinta_ener_tile_5_negro:
     292.  00:827D  71                  	LD		(HL),C
     293.  00:827E                      
     294.  00:827E                      pinta_ener_tile_4:
     295.  00:827E  2B                  	DEC		HL
     296.  00:827F  06 5D               	LD		 B,TILEENERG4
     297.  00:8281  B8                  	CP		 B
     298.  00:8282  38 04               	JR		C,pinta_ener_tile_4_negro
     299.  00:8284  36 0F               	LD		(HL),TILEMAPAMAR
     300.  00:8286  18 01               	JR		pinta_ener_tile_3
     301.  00:8288                      pinta_ener_tile_4_negro:
     302.  00:8288  71                  	LD		(HL),C
     303.  00:8289                      	
     304.  00:8289                      pinta_ener_tile_3:
     305.  00:8289  2B                  	DEC		HL
     306.  00:828A  06 3E               	LD		 B,TILEENERG3
     307.  00:828C  B8                  	CP		 B
     308.  00:828D  38 04               	JR		C,pinta_ener_tile_3_negro
     309.  00:828F  36 0F               	LD		(HL),TILEMAPAMAR
     310.  00:8291  18 01               	JR		pinta_ener_tile_2
     311.  00:8293                      pinta_ener_tile_3_negro:
     312.  00:8293  71                  	LD		(HL),C
     313.  00:8294                      
     314.  00:8294                      pinta_ener_tile_2:
     315.  00:8294  2B                  	DEC		HL
     316.  00:8295  06 1F               	LD		 B,TILEENERG2
     317.  00:8297  B8                  	CP		 B
     318.  00:8298  38 04               	JR		C,pinta_ener_tile_2_negro
     319.  00:829A  36 10               	LD		(HL),TILEMAPROJO
     320.  00:829C  18 01               	JR		fin_mira_pinta_energia		;siempre estará pintado el cuadro mínimo
     321.  00:829E                      pinta_ener_tile_2_negro:
     322.  00:829E  71                  	LD		(HL),C
     323.  00:829F                      
     324.  00:829F                      fin_mira_pinta_energia:
     325.  00:829F  D9                  	EXX
     326.  00:82A0  C9                  	RET
     327.  00:82A1                      
     328.  00:82A1                      
     329.  00:82A1                      ;;=====================================================
     330.  00:82A1                      ;;PINTA_ENERGIA
     331.  00:82A1                      ;;=====================================================	
     332.  00:82A1                      ; función: 	actualiza el mapa de tiles para que en el próximo refresco se pinte la barra de energia actual
     333.  00:82A1                      ; entrada: 	array_aux_energia
     334.  00:82A1                      ; toca:		AF
     335.  00:82A1                      pinta_energia:
     336.  00:82A1  D9                  	EXX
     337.  00:82A2                      	
     338.  00:82A2  21 B0 8B            	LD		HL, array_aux_energia
     339.  00:82A5  11 88 1A            	LD		DE, TILMAP + POSENERG 	;inicio posición en el mapa de tiles de las vidas
     340.  00:82A8  01 08 00            	LD		BC, NMAXVIDREL			;hay 8 posiciones para vidas/reliquias o espacios en negro si no tiene 8 vidas/reliquias
     341.  00:82AB  CD 5C 00            	CALL	LDIRVM
     342.  00:82AE                      		
     343.  00:82AE  D9                  	EXX
     344.  00:82AF                      fin_pinta_energia:
     345.  00:82AF  C9                  	RET
     346.  00:82B0                      
     347.  00:82B0                      
     348.  00:82B0                      
     349.  00:82B0                      ;;=====================================================
     350.  00:82B0                      ;;BORRA_MAPA
     351.  00:82B0                      ;;=====================================================	
     352.  00:82B0                      ; función: 	pone todas las habitaciones del mapa a negro (los tiles del mapa los rellena con un array a 0 - caracter en negro)
     353.  00:82B0                      ; entrada: 	array_aux_mapa_limpiar
     354.  00:82B0                      ; salida: 	-
     355.  00:82B0                      ; toca:		AF
     356.  00:82B0                      borra_mapa:
     357.  00:82B0  D9                  	EXX
     358.  00:82B1                      	
     359.  00:82B1  21 B8 8B            	LD		HL,array_aux_mapa_limpiar
     360.  00:82B4  11 F8 1A            	LD		DE,TILMAP + POSMAPLIN1 	;inicio posición en el mapa de tiles de la primera fila del mapa
     361.  00:82B7  01 07 00            	LD		BC,NHABNIVEL			;cada nivel son 7 filas con 7 habitaciones "posibles"
     362.  00:82BA  CD 5C 00            	CALL	LDIRVM
     363.  00:82BD                      	
     364.  00:82BD  21 B8 8B            	LD		HL,array_aux_mapa_limpiar
     365.  00:82C0  11 D8 1A            	LD		DE,TILMAP + POSMAPLIN2
     366.  00:82C3  01 07 00            	LD		BC,NHABNIVEL
     367.  00:82C6  CD 5C 00            	CALL	LDIRVM
     368.  00:82C9                      
     369.  00:82C9  21 B8 8B            	LD		HL,array_aux_mapa_limpiar
     370.  00:82CC  11 B8 1A            	LD		DE,TILMAP + POSMAPLIN3
     371.  00:82CF  01 07 00            	LD		BC,NHABNIVEL
     372.  00:82D2  CD 5C 00            	CALL	LDIRVM
     373.  00:82D5                      
     374.  00:82D5  21 B8 8B            	LD		HL,array_aux_mapa_limpiar	
     375.  00:82D8  11 98 1A            	LD		DE,TILMAP + POSMAPLIN4
     376.  00:82DB  01 07 00            	LD		BC,NHABNIVEL
     377.  00:82DE  CD 5C 00            	CALL	LDIRVM
     378.  00:82E1                      
     379.  00:82E1  21 B8 8B            	LD		HL,array_aux_mapa_limpiar	
     380.  00:82E4  11 78 1A            	LD		DE,TILMAP + POSMAPLIN5
     381.  00:82E7  01 07 00            	LD		BC,NHABNIVEL
     382.  00:82EA  CD 5C 00            	CALL	LDIRVM
     383.  00:82ED                      
     384.  00:82ED  21 B8 8B            	LD		HL,array_aux_mapa_limpiar	
     385.  00:82F0  11 58 1A            	LD		DE,TILMAP + POSMAPLIN6
     386.  00:82F3  01 07 00            	LD		BC,NHABNIVEL
     387.  00:82F6  CD 5C 00            	CALL	LDIRVM
     388.  00:82F9                      
     389.  00:82F9  21 B8 8B            	LD		HL,array_aux_mapa_limpiar	
     390.  00:82FC  11 38 1A            	LD		DE,TILMAP + POSMAPLIN7
     391.  00:82FF  01 07 00            	LD		BC,NHABNIVEL
     392.  00:8302  CD 5C 00            	CALL	LDIRVM
     393.  00:8305                      	
     394.  00:8305  D9                  	EXX
     395.  00:8306                      fin_borra_mapa:
     396.  00:8306  C9                  	RET
     397.  00:8307                      
     398.  00:8307                      
     399.  00:8307                      
     400.  00:8307                      
     401.  00:8307                      
     402.  00:8307                      
     403.  00:8307                      
     404.  00:8307                      
     405.  00:8307                      
     406.  00:8307                      ;=====================================================
     407.  00:8307                      ;;PINTA_ARRAY
     408.  00:8307                      ;;=====================================================	
     409.  00:8307                      ;;;funcion:  se le pasa un array con posiciones de tiles y coordenadas x e y y los pinta en screen 2
     410.  00:8307                      ;;entrada:	wordaux1 (pos inicio sc2 donde pintar) y wordaux2 (puntero al array a pintar), BC (posición en tilemap) , D filas y E columnas
     411.  00:8307                      ;;salida:	-
     412.  00:8307                      ;;importante: necesita de una variable wordaux1 tipo WD (wordaux1: 	DW	0)
     413.  00:8307                      ;; ejemplo llamada:
     414.  00:8307                      	;~ LD		HL,array_tiles					;guardo puntero al array a pintar (como psar por referencia)
     415.  00:8307                      	;~ LD		(wordaux2),HL					;en la variable wordaux2
     416.  00:8307                      	;~ LD		HL,SC2MAP + 256 + 32			;calcula posición en tilemap
     417.  00:8307                      	;~ LD		(wordaux1),HL					;guarda valor pos tilemap en wordaux1
     418.  00:8307                      	;~ LD		B,H								;coloca posición tilemap BC
     419.  00:8307                      	;~ LD		C,L
     420.  00:8307                      	;~ LD		D,2								;nº de filas
     421.  00:8307                      	;~ LD		E,3								;nº de columnas
     422.  00:8307                      	;~ CALL	pinta_array
     423.  00:8307                      
     424.  00:8307                      pinta_array:
     425.  00:8307  F5                  	PUSH	AF
     426.  00:8308                      	
     427.  00:8308                      	;contamos con que la posición "global" en el tilemap está ya en BC
     428.  00:8308                      	;y el puntero al array a pintar en wordaux2 y la posición en tilemap sc2 en wordaux1
     429.  00:8308                      	;inicializa
     430.  00:8308  DB 99               	IN		 A,(REGEST)		;leer registro de estado (recomendado)
     431.  00:830A                      	
     432.  00:830A                      	;coloca puntero para pintar tile según BC
     433.  00:830A  79                  	LD		 A,C			;primero byte bajo	
     434.  00:830B  D3 99               	OUT		(REGEST),A
     435.  00:830D  78                  	LD		 A,B			;después byte alto  ********************** preguntar a Fernando cómo que byte bajo es B
     436.  00:830E  F6 40               	OR		1000000b		;+64
     437.  00:8310  D3 99               	OUT		(REGEST),A
     438.  00:8312                      
     439.  00:8312                      	
     440.  00:8312  2A 3C 83            	LD		HL,(wordaux2)	;HL es lo que se pintará y le he pasado el puntero del array tilemap a pintar
     441.  00:8315                      .pa_pinta_fila:
     442.  00:8315  43                  	LD		 B,E
     443.  00:8316                      .pa_pinta_columnas: 		;finta la fila (pintando las columnas)
     444.  00:8316  7E                  	LD		 A,(HL)
     445.  00:8317  D3 98               	OUT		(REGESCVDP),A	;escribe A en VRAM en la posición indicada por los dos OUT anteriores
     446.  00:8319  23                  	INC		HL
     447.  00:831A  10 FA               	DJNZ	.pa_pinta_columnas
     448.  00:831C                      	
     449.  00:831C                      	;no es una solución elegante lo de repetir código pero queda claro
     450.  00:831C                      	;por si hay otra fila
     451.  00:831C  E5                  	PUSH	HL
     452.  00:831D  2A 3A 83            	LD		HL,(wordaux1)
     453.  00:8320  01 20 00            	LD		BC,32
     454.  00:8323  09                  	ADD		HL,BC
     455.  00:8324  22 3A 83            	LD		(wordaux1),HL
     456.  00:8327  44                  	LD		B,H
     457.  00:8328  4D                  	LD		C,L
     458.  00:8329  E1                  	POP		HL
     459.  00:832A                      	
     460.  00:832A  79                  	LD		 A,C			;primero byte bajo	
     461.  00:832B  D3 99               	OUT		(REGEST),A
     462.  00:832D  78                  	LD		 A,B			;después byte alto 
     463.  00:832E  F6 40               	OR		1000000b		;+64
     464.  00:8330  D3 99               	OUT		(REGEST),A
     465.  00:8332                      	
     466.  00:8332                      	;si hay otra fila repite
     467.  00:8332  15                  	DEC		 D
     468.  00:8333  7A                  	LD		 A,D		;¿hay otra fila?
     469.  00:8334  B7                  	OR		 A
     470.  00:8335  C2 15 83            	JP		NZ,.pa_pinta_fila
     471.  00:8338                      	
     472.  00:8338  F1                  	POP		AF
     473.  00:8339                      	
     474.  00:8339                      fin_pinta_array:
     475.  00:8339  C9                  	RET
     476.  00:833A                      ;;variables asocidas a la función (no sé si dejarlo aquí y encapsularlo todo o hacerla reutilizable)
     477.  00:833A                      ;; por de pronto la dejo aquí
     478.  00:833A  00 00               wordaux1:		DW	0	;almacena la posición en el tilemap 0 al 675
     479.  00:833C  00 00               wordaux2:		DW	0	;almacena puntero a array de tiles (posiciones en realidad) a pintar (posiciones repetidas en los 3 bancos)
     480.  00:833E                      
     481.  00:833E                      
     482.  00:833E                      
     483.  00:833E                      
     484.  00:833E                      
     485.  00:833E                      ;;=====================================================
     486.  00:833E                      ;;PINTA_PUERTAS
     487.  00:833E                      ;;=====================================================	
     488.  00:833E                      ; función: 	examina A y mira si tiene que pintar puertas de los lados, arriba o abrajo o las escaleras (o no)
     489.  00:833E                      ; entrada: 	habitacion_actual 1 escalera 1 puerta arriba 1 pu der 1 pu aba 1 pu izq (si es 0 pinta pared)
     490.  00:833E                      ; salida: 	-
     491.  00:833E                      ; toca:		- uso EXX
     492.  00:833E                      pinta_puertas:
     493.  00:833E  D9                  	EXX
     494.  00:833F                      	
     495.  00:833F  3A 7C 88            	LD		 A, (habitacion_actual)		;se mete en A porque la función pide A y para no buscar el valor 4 veces
     496.  00:8342                      
     497.  00:8342                      ;	BIT		 4, A
     498.  00:8342                      ;	CALL	nz, pinta_escalera
     499.  00:8342                      
     500.  00:8342  CB 5F               	BIT		 3, A
     501.  00:8344  C4 71 83            	CALL	nz, pinta_puerta_arr
     502.  00:8347                      
     503.  00:8347  CB 57               	BIT		 2, A
     504.  00:8349  C4 86 83            	CALL	nz, pinta_puerta_der
     505.  00:834C                      
     506.  00:834C  CB 4F               	BIT		 1, A
     507.  00:834E  C4 5C 83            	CALL	nz, pinta_puerta_aba
     508.  00:8351                      	
     509.  00:8351  CB 47               	BIT		 0, A
     510.  00:8353  C4 9B 83            	CALL	nz, pinta_puerta_izq
     511.  00:8356                      	
     512.  00:8356  AF                  	XOR		 A
     513.  00:8357  32 BF 8B            	LD		(actualiza_puertas_sn), A ;(1 actualiza y 0 no actualiza puertas) se pone a 0 para que no actualice todo el tiempo (ya se ha actualizado)... me hubiera gustado poner cte NO pero es más rápido así
     514.  00:835A                      
     515.  00:835A  D9                  	EXX
     516.  00:835B                      fin_pinta_puertas:
     517.  00:835B  C9                  	RET
     518.  00:835C                      
     519.  00:835C                      
     520.  00:835C                      
     521.  00:835C                      
     522.  00:835C                      ;;=====================================================
     523.  00:835C                      ;;PINTA_PUERTA_ABA
     524.  00:835C                      ;;=====================================================	
     525.  00:835C                      ; función: 	pinta la puerta de abajo
     526.  00:835C                      ; entrada: 	array_puerta_abajo, wordaux2, wordaux1
     527.  00:835C                      ; salida: 	-
     528.  00:835C                      ; toca:		HL,BC, DE
     529.  00:835C                      pinta_puerta_aba:
     530.  00:835C  21 E9 8B            	LD		HL,array_puerta_abajo			;guardo puntero al array a pintar (como psar por referencia)
     531.  00:835F  22 3C 83            	LD		(wordaux2),HL					;en la variable wordaux2
     532.  00:8362  21 EE 19            	LD		HL,TILMAP + POSPUERABAJ			;calcula posición en tilemap
     533.  00:8365  22 3A 83            	LD		(wordaux1),HL					;guarda valor pos tilemap en wordaux1
     534.  00:8368  44                  	LD		B,H								;coloca posición tilemap BC
     535.  00:8369  4D                  	LD		C,L
     536.  00:836A  16 01               	LD		D,1								;nº de filas
     537.  00:836C  1E 04               	LD		E,4								;nº de columnas
     538.  00:836E  C3 07 83            	JP		pinta_array
     539.  00:8371                      	;~ CALL	pinta_array
     540.  00:8371                      fin_pinta_puerta_aba:
     541.  00:8371                      	;~ RET
     542.  00:8371                      
     543.  00:8371                      ;;=====================================================
     544.  00:8371                      ;;PINTA_PUERTA_ARR
     545.  00:8371                      ;;=====================================================	
     546.  00:8371                      ; función: 	pinta la puerta de arriba
     547.  00:8371                      ; entrada: 	array_puerta_arriba, wordaux2, wordaux1
     548.  00:8371                      ; salida: 	-
     549.  00:8371                      ; toca:		HL,BC, DE
     550.  00:8371                      pinta_puerta_arr:
     551.  00:8371  21 C0 8B            	LD		HL,array_puerta_arriba			;guardo puntero al array a pintar (como psar por referencia)
     552.  00:8374  22 3C 83            	LD		(wordaux2),HL					;en la variable wordaux2
     553.  00:8377  21 8E 18            	LD		HL,TILMAP + POSPUERARRI			;calcula posición en tilemap
     554.  00:837A  22 3A 83            	LD		(wordaux1),HL					;guarda valor pos tilemap en wordaux1
     555.  00:837D  44                  	LD		B,H								;coloca posición tilemap BC
     556.  00:837E  4D                  	LD		C,L
     557.  00:837F  16 05               	LD		D,5								;nº de filas
     558.  00:8381  1E 04               	LD		E,4								;nº de columnas
     559.  00:8383  C3 07 83            	JP		pinta_array
     560.  00:8386                      	;~ CALL	pinta_array
     561.  00:8386                      fin_pinta_puerta_arr:
     562.  00:8386                      	;~ RET
     563.  00:8386                      
     564.  00:8386                      ;;=====================================================
     565.  00:8386                      ;;PINTA_PUERTA_DER
     566.  00:8386                      ;;=====================================================	
     567.  00:8386                      ; función: 	pinta la puerta de la derecha
     568.  00:8386                      ; entrada: 	array_puerta_derecha, wordaux2, wordaux1
     569.  00:8386                      ; salida: 	-
     570.  00:8386                      ; toca:		HL,BC, DE
     571.  00:8386                      pinta_puerta_der:
     572.  00:8386  21 D4 8B            	LD		HL,array_puerta_derecha			;guardo puntero al array a pintar (como psar por referencia)
     573.  00:8389  22 3C 83            	LD		(wordaux2),HL					;en la variable wordaux2
     574.  00:838C  21 FC 18            	LD		HL,TILMAP + POSPUERDERE			;calcula posición en tilemap
     575.  00:838F  22 3A 83            	LD		(wordaux1),HL					;guarda valor pos tilemap en wordaux1
     576.  00:8392  44                  	LD		B,H								;coloca posición tilemap BC
     577.  00:8393  4D                  	LD		C,L
     578.  00:8394  16 07               	LD		D,7								;nº de filas
     579.  00:8396  1E 03               	LD		E,3								;nº de columnas
     580.  00:8398  C3 07 83            	JP		pinta_array
     581.  00:839B                      	;~ CALL	pinta_array
     582.  00:839B                      fin_pinta_puerta_der:
     583.  00:839B                      	;~ RET
     584.  00:839B                      	
     585.  00:839B                      ;;=====================================================
     586.  00:839B                      ;;PINTA_PUERTA_IZQ
     587.  00:839B                      ;;=====================================================	
     588.  00:839B                      ; función: 	pinta la puerta de la izquierda
     589.  00:839B                      ; entrada: 	array_puerta_izquierda, wordaux2, wordaux1
     590.  00:839B                      ; salida: 	-
     591.  00:839B                      ; toca:		HL,BC, DE
     592.  00:839B                      pinta_puerta_izq:
     593.  00:839B  21 ED 8B            	LD		HL,array_puerta_izquierda		;guardo puntero al array a pintar (como psar por referencia)
     594.  00:839E  22 3C 83            	LD		(wordaux2),HL					;en la variable wordaux2
     595.  00:83A1  21 E1 18            	LD		HL,TILMAP + POSPUERIZQU			;calcula posición en tilemap
     596.  00:83A4  22 3A 83            	LD		(wordaux1),HL					;guarda valor pos tilemap en wordaux1
     597.  00:83A7  44                  	LD		B,H								;coloca posición tilemap BC
     598.  00:83A8  4D                  	LD		C,L
     599.  00:83A9  16 07               	LD		D,7								;nº de filas
     600.  00:83AB  1E 03               	LD		E,3								;nº de columnas
     601.  00:83AD  C3 07 83            	JP		pinta_array
     602.  00:83B0                      	;~ CALL	pinta_array
     603.  00:83B0                      fin_pinta_puerta_izq:
     604.  00:83B0                      	;~ RET
     605.  00:83B0                      
     606.  00:83B0                      
     607.  00:83B0                      
     608.  00:83B0                      
     609.  00:83B0                      
     610.  00:83B0                      ;;=====================================================
     611.  00:83B0                      ;;POSICIONA_EN_MAPA
     612.  00:83B0                      ;;=====================================================	
     613.  00:83B0                      ; función: 	en el mapa de marcadores de la derecha/abajo marca un cuadro en gris o con un muñeco
     614.  00:83B0                      ;			según el valor de prota.posición pinta entrá un muñeco y por donde vaya pasando el prota
     615.  00:83B0                      ;			quedará en gris
     616.  00:83B0                      ; entrada: 	A=0 gris 1 - tile 0, A=1 muñeco - tile 19, prota.pos_mapy,prota.pos_mapx)
     617.  00:83B0                      ; salida: 	-
     618.  00:83B0                      ; toca:		todos
     619.  00:83B0                      posiciona_en_mapa:
     620.  00:83B0  F5                  	PUSH	AF		;almacenamos el tipo a pintar para cuando terminemos de calcular la coordenada
     621.  00:83B1                      	
     622.  00:83B1                      	;#0238 es la posición en mapa de tiles de la esquina superior izquierda del mapa (569 en decimal)
     623.  00:83B1  21 38 1A            	LD		HL, TILMAP + POSMAPA;pos inicial
     624.  00:83B4                      	
     625.  00:83B4                      	;ahora se le calcula la fila a pintar ya que va de abajo a arriba y no como en el mapa + columna
     626.  00:83B4                      .sumar_fila:
     627.  00:83B4  3A 5A 86            	LD		 A,(prota_pos_mapy)
     628.  00:83B7  FE 01               	CP		 1
     629.  00:83B9  28 2A               	JR		 Z, .fila_1
     630.  00:83BB  3A 5A 86            	LD		 A,(prota_pos_mapy)
     631.  00:83BE  FE 02               	CP		 2
     632.  00:83C0  28 2A               	JR		 Z, .fila_2
     633.  00:83C2  3A 5A 86            	LD		 A,(prota_pos_mapy)
     634.  00:83C5  FE 03               	CP		 3
     635.  00:83C7  28 2A               	JR		 Z, .fila_3
     636.  00:83C9  3A 5A 86            	LD		 A,(prota_pos_mapy)
     637.  00:83CC  FE 04               	CP		 4
     638.  00:83CE  28 2A               	JR		 Z, .fila_4
     639.  00:83D0  3A 5A 86            	LD		 A,(prota_pos_mapy)
     640.  00:83D3  FE 05               	CP		 5
     641.  00:83D5  28 2A               	JR		 Z, .fila_5
     642.  00:83D7  3A 5A 86            	LD		 A,(prota_pos_mapy)
     643.  00:83DA  FE 06               	CP		 6
     644.  00:83DC  28 2A               	JR		 Z, .sumar_columna
     645.  00:83DE                      	;no consulto la 0 porque si no es ninguna de las anteriores es 0 y por tanto sería un jr fila_0
     646.  00:83DE                      	
     647.  00:83DE                      .fila_0:
     648.  00:83DE  11 C0 00            	LD		DE, 192
     649.  00:83E1  19                  	ADD		HL, DE			;nota: se que repito el ADD pero la otra opción es inicializar DE y ya tarda mucho la funicón (es por velicidad)
     650.  00:83E2  C3 08 84            	JP		.sumar_columna
     651.  00:83E5                      .fila_1:
     652.  00:83E5  11 A0 00            	LD		DE, 160
     653.  00:83E8  19                  	ADD		HL, DE
     654.  00:83E9  C3 08 84            	JP		.sumar_columna
     655.  00:83EC                      .fila_2:
     656.  00:83EC  11 80 00            	LD		DE, 128
     657.  00:83EF  19                  	ADD		HL, DE
     658.  00:83F0  C3 08 84            	JP		.sumar_columna
     659.  00:83F3                      .fila_3:
     660.  00:83F3  11 60 00            	LD		DE, 96
     661.  00:83F6  19                  	ADD		HL, DE
     662.  00:83F7  C3 08 84            	JP		.sumar_columna
     663.  00:83FA                      .fila_4:
     664.  00:83FA  11 40 00            	LD		DE, 64
     665.  00:83FD  19                  	ADD		HL, DE
     666.  00:83FE  C3 08 84            	JP		.sumar_columna
     667.  00:8401                      .fila_5:
     668.  00:8401  11 20 00            	LD		DE, 32
     669.  00:8404  19                  	ADD		HL, DE
     670.  00:8405  C3 08 84            	JP		.sumar_columna
     671.  00:8408                      .fila_6:
     672.  00:8408                      	;pongo fila_6 por poner ya que si es la fila 6 equiv. a primera fila del mapa y por tanto no suma fila
     673.  00:8408                      	
     674.  00:8408                      	
     675.  00:8408                      .sumar_columna:
     676.  00:8408  3A 59 86            	LD 		 A, (prota_pos_mapx) ;POS X
     677.  00:840B  16 00               	LD		 D, 0
     678.  00:840D  5F                  	LD		 E, A
     679.  00:840E  19                  	ADD		HL, DE
     680.  00:840F                      	
     681.  00:840F                      	;resultado en BC para usar en la función pinta_tile_suelto
     682.  00:840F  44                  	LD		 B, H
     683.  00:8410  4D                  	LD		 C, L
     684.  00:8411                      	
     685.  00:8411                      	;terminado de fijar la coordenada recuperamos a para ver el tipo
     686.  00:8411  F1                  	POP		 AF
     687.  00:8412  B7                  	OR		 A
     688.  00:8413  CA 1B 84            	JP		 Z, pinta_pos_mapa_vacio
     689.  00:8416  16 13               	LD		 D, TILEMAPPROT
     690.  00:8418  C3 1D 84            	JP		fin_pinta_pos_mapa
     691.  00:841B                      pinta_pos_mapa_vacio:
     692.  00:841B  16 09               	LD		 D, TILEMAPVACI				;********************* se puede hacer mejor o está bien usar push y pop ¿?¿?¿?
     693.  00:841D                      
     694.  00:841D                      fin_pinta_pos_mapa:
     695.  00:841D  C3 3C 82            	JP		pinta_tile_suelto
     696.  00:8420                      	;~ CALL	pinta_tile_suelto
     697.  00:8420                      fin_posiciona_en_mapa:
     698.  00:8420                      	;~ RET
     699.  00:8420                      
     700.  00:8420                      
     253   00:8420                      	
     254   00:8420                      	include "subr_sprites.asm"
       1.  00:8420                      
       2.  00:8420                      ;;=====================================================
       3.  00:8420                      ;;SUBRUTINAS ENCARGADAS DE MANEJAR LOS SPRITES
       4.  00:8420                      ;;=====================================================	
       5.  00:8420                      
       6.  00:8420                      
       7.  00:8420                      ;; PREGUNTAR SI A FERNANDO SI ES MEJOR USAR LISTAS O ALGO PARA AHORRAR CÓDIGO
       8.  00:8420                      
       9.  00:8420                      
      10.  00:8420                      ;;=====================================================
      11.  00:8420                      ;;CARGA_PATRONES_SPRITES_NIVEL1
      12.  00:8420                      ;;=====================================================	
      13.  00:8420                      ; función: 	copia los patrones de los sprites que e van a usar en el nivel 1 en vram
      14.  00:8420                      ; entrada: 	-
      15.  00:8420                      ; salida: 	-
      16.  00:8420                      ; toca: 	-
      17.  00:8420                      carga_patrones_sprites_nivel1:
      18.  00:8420  F5                  	PUSH	AF					;guardo copia de AF
      19.  00:8421  D9                  	EXX							;guardo copia de BC,DE y HL
      20.  00:8422                      	
      21.  00:8422                      	;sprite punto de mira		(este no será necesario cargarlo en ningún otro nivel del juego, sólo el primero)
      22.  00:8422  21 5C 86            	LD		HL,sprite_punto_mira_1
      23.  00:8425  11 00 38            	LD		DE,#3800
      24.  00:8428  01 20 00            	LD		BC,32				;32 bytes (sprites de 2 x 2)
      25.  00:842B  CD 5C 00            	CALL	LDIRVM
      26.  00:842E  21 7C 86            	LD		HL,sprite_punto_mira_2
      27.  00:8431  11 20 38            	LD		DE,#3820
      28.  00:8434  01 20 00            	LD		BC,32				;32 bytes (sprites de 2 x 2)
      29.  00:8437  CD 5C 00            	CALL	LDIRVM
      30.  00:843A                      	
      31.  00:843A                      	;sprite sprite_punto_mira_1_mejorado
      32.  00:843A  21 9C 86            	LD		HL,sprite_punto_mira_1_mejorado
      33.  00:843D  11 40 38            	LD		DE,#3840
      34.  00:8440  01 20 00            	LD		BC,32				;32 bytes (sprites de 2 x 2)
      35.  00:8443  CD 5C 00            	CALL	LDIRVM
      36.  00:8446  21 BC 86            	LD		HL,sprite_punto_mira_2_mejorado
      37.  00:8449  11 60 38            	LD		DE,#3860
      38.  00:844C  01 20 00            	LD		BC,32				;32 bytes (sprites de 2 x 2)
      39.  00:844F  CD 5C 00            	CALL	LDIRVM
      40.  00:8452                      
      41.  00:8452                      	;sprite sprite_reliquia
      42.  00:8452  21 DC 86            	LD		HL,sprite_reliquia
      43.  00:8455  11 80 38            	LD		DE,#3880
      44.  00:8458  01 20 00            	LD		BC,32				;32 bytes (sprites de 2 x 2)
      45.  00:845B  CD 5C 00            	CALL	LDIRVM
      46.  00:845E                      
      47.  00:845E                      	;sprite sprite_vida_extra
      48.  00:845E  21 DC 86            	LD		HL,sprite_reliquia
      49.  00:8461  11 A0 38            	LD		DE,#38A0
      50.  00:8464  01 20 00            	LD		BC,32				;32 bytes (sprites de 2 x 2)
      51.  00:8467  CD 5C 00            	CALL	LDIRVM
      52.  00:846A                      
      53.  00:846A                      	;sprite sprite_planta
      54.  00:846A  21 1C 87            	LD		HL,sprite_planta
      55.  00:846D  11 C0 38            	LD		DE,#38C0
      56.  00:8470  01 20 00            	LD		BC,32				;32 bytes (sprites de 2 x 2)
      57.  00:8473  CD 5C 00            	CALL	LDIRVM
      58.  00:8476                      	
      59.  00:8476                      	;sprite sprite_ballesta_mejorada
      60.  00:8476  21 3C 87            	LD		HL,sprite_ballesta_mejorada
      61.  00:8479  11 E0 38            	LD		DE,#38E0
      62.  00:847C  01 20 00            	LD		BC,32				;32 bytes (sprites de 2 x 2)
      63.  00:847F  CD 5C 00            	CALL	LDIRVM
      64.  00:8482                      
      65.  00:8482                      	;sprite sprite_ciempies
      66.  00:8482  21 5C 87            	LD		HL,sprite_ciempies1
      67.  00:8485  11 00 39            	LD		DE,#3900
      68.  00:8488  01 20 00            	LD		BC,32				;32 bytes (sprites de 2 x 2)
      69.  00:848B  CD 5C 00            	CALL	LDIRVM
      70.  00:848E  21 7C 87            	LD		HL,sprite_ciempies2
      71.  00:8491  11 20 39            	LD		DE,#3920
      72.  00:8494  01 20 00            	LD		BC,32				;32 bytes (sprites de 2 x 2)
      73.  00:8497  CD 5C 00            	CALL	LDIRVM		
      74.  00:849A                      
      75.  00:849A                      	;sprite sprite_arana
      76.  00:849A  21 9C 87            	LD		HL,sprite_arana1
      77.  00:849D  11 40 39            	LD		DE,#3940
      78.  00:84A0  01 20 00            	LD		BC,32				;32 bytes (sprites de 2 x 2)
      79.  00:84A3  CD 5C 00            	CALL	LDIRVM
      80.  00:84A6  21 BC 87            	LD		HL,sprite_arana2
      81.  00:84A9  11 60 39            	LD		DE,#3960
      82.  00:84AC  01 20 00            	LD		BC,32				;32 bytes (sprites de 2 x 2)
      83.  00:84AF  CD 5C 00            	CALL	LDIRVM	
      84.  00:84B2                      
      85.  00:84B2                      	;sprite sprite_serpiente
      86.  00:84B2  21 DC 87            	LD		HL,sprite_serpiente1
      87.  00:84B5  11 80 39            	LD		DE,#3980
      88.  00:84B8  01 20 00            	LD		BC,32				;32 bytes (sprites de 2 x 2)
      89.  00:84BB  CD 5C 00            	CALL	LDIRVM
      90.  00:84BE  21 FC 87            	LD		HL,sprite_serpiente2
      91.  00:84C1  11 A0 39            	LD		DE,#39A0
      92.  00:84C4  01 20 00            	LD		BC,32				;32 bytes (sprites de 2 x 2)
      93.  00:84C7  CD 5C 00            	CALL	LDIRVM	
      94.  00:84CA                      
      95.  00:84CA                      	;sprite sprite_murcielago
      96.  00:84CA  21 1C 88            	LD		HL,sprite_murcielago1
      97.  00:84CD  11 C0 39            	LD		DE,#39C0
      98.  00:84D0  01 20 00            	LD		BC,32				;32 bytes (sprites de 2 x 2)
      99.  00:84D3  CD 5C 00            	CALL	LDIRVM
     100.  00:84D6  21 3C 88            	LD		HL,sprite_murcielago2
     101.  00:84D9  11 E0 39            	LD		DE,#39E0
     102.  00:84DC  01 20 00            	LD		BC,32				;32 bytes (sprites de 2 x 2)
     103.  00:84DF  CD 5C 00            	CALL	LDIRVM
     104.  00:84E2                      	
     105.  00:84E2                      	;sprite sprite_explosion
     106.  00:84E2  21 5C 88            	LD		HL,sprite_explosion
     107.  00:84E5  11 20 3A            	LD		DE,#3A20
     108.  00:84E8  01 20 00            	LD		BC,32				;32 bytes (sprites de 2 x 2)
     109.  00:84EB  CD 5C 00            	CALL	LDIRVM
     110.  00:84EE                      	
     111.  00:84EE  D9                  	EXX							;recupero copia de BC,DE y HL
     112.  00:84EF  F1                  	POP		AF					;recupero copia de AF
     113.  00:84F0                      fin_carga_patrones_sprites:
     114.  00:84F0  C9                  	RET
     115.  00:84F1                      
     116.  00:84F1                      
     117.  00:84F1                      ;;=====================================================
     118.  00:84F1                      ;;ACTUALIZA_ARRAY_SPRITES_VRAM
     119.  00:84F1                      ;;=====================================================	
     120.  00:84F1                      ; función: 	copia el array con los valores de los sprites (pos, color, plano) en VRAM
     121.  00:84F1                      ; entrada: 	-
     122.  00:84F1                      ; salida: 	-
     123.  00:84F1                      ; toca: 	todos los registros. Como me interesa la velocidad, si necesito copiar de algo lo hago fuera
     124.  00:84F1                      render_sprites:
     125.  00:84F1                      	;volcando el array con toda la info de los sprites a la zona de atributos de sprites
     126.  00:84F1  21 14 8C            	LD		HL,array_sprites
     127.  00:84F4  11 00 1B            	LD		DE,SPRART
     128.  00:84F7  01 80 00            	LD		BC,4 * 32				;32 sprites x 4 bytes controlando el sprite (Y, X, plano, color)
     129.  00:84FA  C3 5C 00            	JP		LDIRVM
     130.  00:84FD                      	;~ CALL	LDIRVM
     131.  00:84FD                      fin_actualiza_array_sprites_vram:
     132.  00:84FD                      	;~ RET
     133.  00:84FD                      
     134.  00:84FD                      
     135.  00:84FD                      
     136.  00:84FD                      
     137.  00:84FD                      ;;=====================================================
     138.  00:84FD                      ;;VUELCA_RESULTADO_PUNTOMIRA_ARRAY
     139.  00:84FD                      ;;=====================================================	
     140.  00:84FD                      ; función: 	coloca los valores del punto de mira en la variable array_sprites para ser volcados en VRAM
     141.  00:84FD                      ; entrada: 	-
     142.  00:84FD                      ; salida: 	-
     143.  00:84FD                      ; toca: 	-
     144.  00:84FD                      vuelca_resultado_puntomira_array:
     145.  00:84FD  F5                  	PUSH	AF
     146.  00:84FE                      	
     147.  00:84FE  DD 21 14 8C         	LD		IX, array_sprites_pm
     148.  00:8502                      	;posición y de los dos sprites que conforman el punto de mira
     149.  00:8502  3A 8F 8B            	LD		 A, (prota.posy)
     150.  00:8505  DD 77 00            	LD		(IX  ), A
     151.  00:8508  DD 77 04            	LD		(IX+4), A
     152.  00:850B                      	;posición x de los dos sprites que conforman el punto de mira
     153.  00:850B  3A 8E 8B            	LD		 A, (prota.posx)
     154.  00:850E  DD 77 01            	LD		(IX+1), A
     155.  00:8511  DD 77 05            	LD		(IX+5), A
     156.  00:8514                      	;plano
     157.  00:8514  DD 36 02 00         	LD		(IX+2), 0
     158.  00:8518  DD 36 06 04         	LD		(IX+6), 4	;al ser sprites de 16x16 hay que ir de 4 en 4
     159.  00:851C                      	;color
     160.  00:851C  DD 36 03 0F         	LD		(IX+3), COLBLANCO
     161.  00:8520  DD 36 07 08         	LD		(IX+7), COLROJO
     162.  00:8524                      	
     163.  00:8524  F1                  	POP		AF
     164.  00:8525                      fin_vuelca_resultado_puntomira_array:
     165.  00:8525  C9                  	RET
     166.  00:8526                      
     255   00:8526                      	
     256   00:8526                      	include "subr_teclado_joy.asm"
       1.  00:8526                      
       2.  00:8526                      
       3.  00:8526                      ;;=====================================================
       4.  00:8526                      ;;MUEVE_ARRIBA
       5.  00:8526                      ;;=====================================================	
       6.  00:8526                      ; función: 	decrementa y si se no sale de los límites el valor del punto de mira a la derecha
       7.  00:8526                      ; entrada: 	-
       8.  00:8526                      ; salida: 	-
       9.  00:8526                      ; toca: 	-
      10.  00:8526                      mueve_arriba:
      11.  00:8526  F5                  	PUSH		AF
      12.  00:8527                      	
      13.  00:8527  3A 8F 8B            	LD		 	 A, (prota.posy)
      14.  00:852A  3D                  	DEC			 A
      15.  00:852B  CA 31 85            	JP			 Z,.no_decrementa_y
      16.  00:852E  32 8F 8B            	LD			(prota.posy), A
      17.  00:8531                      	
      18.  00:8531                      .no_decrementa_y:
      19.  00:8531  F1                  	POP			AF
      20.  00:8532                      fin_mueve_arriba:
      21.  00:8532  C9                  	RET
      22.  00:8533                      	
      23.  00:8533                      	
      24.  00:8533                      ;;=====================================================
      25.  00:8533                      ;;MUEVE_ARRIBA_DERECHA
      26.  00:8533                      ;;=====================================================	
      27.  00:8533                      ; función: 	mueve punto de mira en diagonal arriba a la derecha
      28.  00:8533                      ; entrada: 	-
      29.  00:8533                      ; salida: 	-
      30.  00:8533                      ; toca: 	-
      31.  00:8533                      mueve_arriba_derecha:
      32.  00:8533                      	
      33.  00:8533  CD 26 85            	CALL		mueve_arriba
      34.  00:8536  C3 39 85            	JP			mueve_derecha
      35.  00:8539                      	
      36.  00:8539                      fin_mueve_arriba_derecha:
      37.  00:8539                      	;RET
      38.  00:8539                      
      39.  00:8539                      
      40.  00:8539                      ;;=====================================================
      41.  00:8539                      ;;MUEVE_DERECHA
      42.  00:8539                      ;;=====================================================	
      43.  00:8539                      ; función: 	incrementa si se no sale de los límites el valor del punto de mira a la derecha
      44.  00:8539                      ; entrada: 	-
      45.  00:8539                      ; salida: 	-
      46.  00:8539                      ; toca: 	-
      47.  00:8539                      mueve_derecha:
      48.  00:8539  F5                  	PUSH		AF
      49.  00:853A                      	
      50.  00:853A  3A 8E 8B            	LD		 	 A, (prota.posx)
      51.  00:853D  3C                  	INC			 A
      52.  00:853E  FE EF               	CP			 A, LIMPANTDER - 16
      53.  00:8540  CA 46 85            	JP			 Z, .no_incrementa_x
      54.  00:8543  32 8E 8B            	LD			(prota.posx), A
      55.  00:8546                      	
      56.  00:8546                      .no_incrementa_x:
      57.  00:8546  F1                  	POP			AF
      58.  00:8547                      fin_mueve_derecha:
      59.  00:8547  C9                  	RET
      60.  00:8548                      
      61.  00:8548                      ;;=====================================================
      62.  00:8548                      ;;MUEVE_DERECHA_ABAJO
      63.  00:8548                      ;;=====================================================	
      64.  00:8548                      ; función: 	mueve punto de mira en diagonal abajo a la derecha
      65.  00:8548                      ; entrada: 	-
      66.  00:8548                      ; salida: 	-
      67.  00:8548                      ; toca: 	-
      68.  00:8548                      mueve_derecha_abajo:
      69.  00:8548                      	
      70.  00:8548  CD 39 85            	CALL		mueve_derecha
      71.  00:854B  C3 4E 85            	JP			mueve_abajo
      72.  00:854E                      	
      73.  00:854E                      fin_mueve_derecha_abajo:
      74.  00:854E                      ;	RET
      75.  00:854E                      
      76.  00:854E                      ;;=====================================================
      77.  00:854E                      ;;MUEVE_ABAJO
      78.  00:854E                      ;;=====================================================	
      79.  00:854E                      ; función: 	incrementa y si se no sale de los límites el valor del punto de mira abajo
      80.  00:854E                      ; entrada: 	-
      81.  00:854E                      ; salida: 	-
      82.  00:854E                      ; toca: 	-
      83.  00:854E                      mueve_abajo:
      84.  00:854E  F5                  	PUSH		AF
      85.  00:854F                      	
      86.  00:854F  3A 8F 8B            	LD		 	 A, (prota.posy)
      87.  00:8552  3C                  	INC			 A
      88.  00:8553  FE 70               	CP			 A, LIMPANTABA - 16
      89.  00:8555  CA 5B 85            	JP			 Z,.no_incrementa_y
      90.  00:8558  32 8F 8B            	LD			(prota.posy), A
      91.  00:855B                      	
      92.  00:855B                      .no_incrementa_y:
      93.  00:855B  F1                  	POP			AF
      94.  00:855C                      fin_mueve_abajo:
      95.  00:855C  C9                  	RET
      96.  00:855D                      	
      97.  00:855D                      
      98.  00:855D                      ;;=====================================================
      99.  00:855D                      ;;MUEVE_ABAJO_IZQUIERDA
     100.  00:855D                      ;;=====================================================	
     101.  00:855D                      ; función: 	mueve punto de mira en diagonal abajo a la izquierda
     102.  00:855D                      ; entrada: 	-
     103.  00:855D                      ; salida: 	-
     104.  00:855D                      ; toca: 	-
     105.  00:855D                      mueve_abajo_izquierda:
     106.  00:855D                      	
     107.  00:855D  CD 4E 85            	CALL		mueve_abajo
     108.  00:8560  C3 63 85            	JP			mueve_izquierda
     109.  00:8563                      
     110.  00:8563                      fin_mueve_abajo_izquierda:
     111.  00:8563                      	;RET
     112.  00:8563                      
     113.  00:8563                      	
     114.  00:8563                      ;;=====================================================
     115.  00:8563                      ;;MUEVE_IZQUIERDA
     116.  00:8563                      ;;=====================================================	
     117.  00:8563                      ; función: 	decrementa x si se no sale de los límites el valor del punto de mira a la izquierda
     118.  00:8563                      ; entrada: 	-
     119.  00:8563                      ; salida: 	-
     120.  00:8563                      ; toca: 	-
     121.  00:8563                      mueve_izquierda:
     122.  00:8563  F5                  	PUSH		AF
     123.  00:8564                      	
     124.  00:8564  3A 8E 8B            	LD		 	 A, (prota.posx)
     125.  00:8567  3D                  	DEC			 A
     126.  00:8568                      ;	CP			 A, LIMPANTIZQ
     127.  00:8568  CA 6E 85            	JP			 Z,.no_decrementa_x
     128.  00:856B  32 8E 8B            	LD			(prota.posx), A
     129.  00:856E                      	
     130.  00:856E                      .no_decrementa_x:
     131.  00:856E  F1                  	POP			AF
     132.  00:856F                      fin_mueve_izquierda:
     133.  00:856F  C9                  	RET
     134.  00:8570                      
     135.  00:8570                      
     136.  00:8570                      ;;=====================================================
     137.  00:8570                      ;;MUEVE_IZQUIERDA_ARRIBA
     138.  00:8570                      ;;=====================================================	
     139.  00:8570                      ; función: 	mueve punto de mira en diagonal arriba a la izquierda
     140.  00:8570                      ; entrada: 	-
     141.  00:8570                      ; salida: 	-
     142.  00:8570                      ; toca: 	-
     143.  00:8570                      mueve_izquierda_arriba:
     144.  00:8570                      
     145.  00:8570  CD 63 85            	CALL		mueve_izquierda
     146.  00:8573  C3 26 85            	JP			mueve_arriba
     147.  00:8576                      
     148.  00:8576                      fin_mueve_izquierda_arriba:
     149.  00:8576                      	;RET
     150.  00:8576                      
     257   00:8576                      	
     258   00:8576                      
     259   00:8576                      ;Este include lleva la rutina de descompresión de ROM/RAM a VRAM de pletter
     260   00:8576                      ;Está adaptada de la original a sjasm
     261   00:8576                      ;	HL = RAM/ROM source	; DE = VRAM destination
     262   00:8576                      depack_VRAM:
     263   00:8576                      	include "PL_VRAM_Depack_SJASM.asm"
       1.  00:8576                      ;-----------------------------------------------------------
       2.  00:8576                      ; Pletter v0.5b VRAM Depacker v1.1 - 16Kb version
       3.  00:8576                      ; HL = RAM/ROM source ; DE = VRAM destination
       4.  00:8576                      ;-----------------------------------------------------------
       5.  00:8576  F3                  	di
       6.  00:8577                      
       7.  00:8577                      ; VRAM address setup
       8.  00:8577  7B                  	ld	a,e
       9.  00:8578  D3 99               	out	[099h],a
      10.  00:857A  7A                  	ld	a,d
      11.  00:857B  F6 40               	or	040h
      12.  00:857D  D3 99               	out	[099h],a
      13.  00:857F                      
      14.  00:857F                      ; Initialization
      15.  00:857F  7E                  	ld	a,[hl]
      16.  00:8580  23                  	inc	hl
      17.  00:8581  D9                  	exx
      18.  00:8582  11 00 00            	ld	de,0
      19.  00:8585  87                  	add	a,a
      20.  00:8586  3C                  	inc	a
      21.  00:8587  CB 13               	rl	e
      22.  00:8589  87                  	add	a,a
      23.  00:858A  CB 13               	rl	e
      24.  00:858C  87                  	add	a,a
      25.  00:858D  CB 13               	rl	e
      26.  00:858F  CB 13               	rl	e
      27.  00:8591  21 48 86            	ld	hl,modes
      28.  00:8594  19                  	add	hl,de
      29.  00:8595  5E                  	ld	e,[hl]
      30.  00:8596  DD 6B               	ld	ixl,e
      31.  00:8598  23                  	inc	hl
      32.  00:8599  5E                  	ld	e,[hl]
      33.  00:859A  DD 63               	ld	ixh,e
      34.  00:859C  1E 01               	ld	e,1
      35.  00:859E  D9                  	exx
      36.  00:859F  FD 21 A8 85         	ld	iy,loop
      37.  00:85A3                      
      38.  00:85A3                      ; Main depack loop
      39.  00:85A3  0E 98               literal:ld	c,098h
      40.  00:85A5  ED A3               	outi
      41.  00:85A7  13                  	inc	de
      42.  00:85A8  87                  loop:	add	a,a
      43.  00:85A9  CC 3C 86              	call	z,getbit
      44.  00:85AC  30 F5               	jr	nc,literal
      45.  00:85AE                      
      46.  00:85AE                      ; Compressed data
      47.  00:85AE  D9                  	exx
      48.  00:85AF  62                  	ld	h,d
      49.  00:85B0  6B                  	ld	l,e
      50.  00:85B1  87                  getlen: add	a,a
      51.  00:85B2  CC 40 86            	call	z,getbitexx
      52.  00:85B5  30 1D               	jr	nc,lenok
      53.  00:85B7  87                  lus:	add	a,a
      54.  00:85B8  CC 40 86            	call	z,getbitexx
      55.  00:85BB  ED 6A               	adc	hl,hl
      56.  00:85BD  D8                  	ret	c
      57.  00:85BE  87                  	add	a,a
      58.  00:85BF  CC 40 86            	call	z,getbitexx
      59.  00:85C2  30 10               	jr	nc,lenok
      60.  00:85C4  87                  	add	a,a
      61.  00:85C5  CC 40 86            	call	z,getbitexx
      62.  00:85C8  ED 6A               	adc	hl,hl
      63.  00:85CA  DA 46 86            	jp	c,Depack_out
      64.  00:85CD  87                  	add	a,a
      65.  00:85CE  CC 40 86            	call	z,getbitexx
      66.  00:85D1  DA B7 85            	jp	c,lus
      67.  00:85D4  23                  lenok:  inc	hl
      68.  00:85D5  D9                  	exx
      69.  00:85D6  4E                  	ld	c,[hl]
      70.  00:85D7  23                  	inc	hl
      71.  00:85D8  06 00               	ld	b,0
      72.  00:85DA  CB 79               	bit	7,c
      73.  00:85DC  CA 0F 86            	jp	z,offsok
      74.  00:85DF  DD E9               	jp	ix
      75.  00:85E1                      
      76.  00:85E1  87                  mode7:  add	a,a
      77.  00:85E2  CC 3C 86              	call	z,getbit
      78.  00:85E5  CB 10               	rl	b
      79.  00:85E7  87                  mode6:	add	a,a
      80.  00:85E8  CC 3C 86              	call	z,getbit
      81.  00:85EB  CB 10               	rl	b
      82.  00:85ED  87                  mode5:  add	a,a
      83.  00:85EE  CC 3C 86              	call	z,getbit
      84.  00:85F1  CB 10               	rl	b
      85.  00:85F3  87                  mode4:  add	a,a
      86.  00:85F4  CC 3C 86              	call	z,getbit
      87.  00:85F7  CB 10               	rl	b
      88.  00:85F9  87                  mode3:  add	a,a
      89.  00:85FA  CC 3C 86              	call	z,getbit
      90.  00:85FD  CB 10               	rl	b
      91.  00:85FF  87                  mode2:	add	a,a
      92.  00:8600  CC 3C 86              	call	z,getbit
      93.  00:8603  CB 10               	rl	b
      94.  00:8605  87                  	add	a,a
      95.  00:8606  CC 3C 86              	call	z,getbit
      96.  00:8609  30 04               	jr	nc,offsok
      97.  00:860B  B7                  	or	a
      98.  00:860C  04                  	inc	b
      99.  00:860D  CB B9               	res	7,c
     100.  00:860F  03                  offsok: inc	bc
     101.  00:8610  E5                  	push	hl
     102.  00:8611  D9                  	exx
     103.  00:8612  E5                  	push	hl
     104.  00:8613  D9                  	exx
     105.  00:8614  6B                  	ld	l,e
     106.  00:8615  62                  	ld	h,d
     107.  00:8616  ED 42               	sbc	hl,bc
     108.  00:8618  C1                  	pop	bc
     109.  00:8619  F5                  	push	af
     110.  00:861A  7D                  .loop:	ld	a,l
     111.  00:861B  D3 99               	out	[099h],a
     112.  00:861D  7C                  	ld	a,h
     113.  00:861E  00                  	nop                     ; VDP timing
     114.  00:861F  D3 99               	out	[099h],a
     115.  00:8621  00                  	nop                     ; VDP timing
     116.  00:8622  DB 98               	in	a,[098h]
     117.  00:8624  08                  	ex	af,af'
     118.  00:8625  7B                  	ld	a,e
     119.  00:8626  00                  	nop			; VDP timing
     120.  00:8627  D3 99               	out	[099h],a
     121.  00:8629  7A                  	ld	a,d
     122.  00:862A  F6 40               	or	040h
     123.  00:862C  D3 99               	out	[099h],a
     124.  00:862E  08                  	ex	af,af'
     125.  00:862F  00                  	nop			; VDP timing
     126.  00:8630  D3 98               	out	[098h],a
     127.  00:8632  13                  	inc	de
     128.  00:8633  ED A1               	cpi
     129.  00:8635  EA 1A 86            	jp	pe,.loop
     130.  00:8638  F1                  	pop	af
     131.  00:8639  E1                  	pop	hl
     132.  00:863A  FD E9               	jp	iy
     133.  00:863C                      
     134.  00:863C  7E                  getbit: ld	a,[hl]
     135.  00:863D  23                  	inc	hl
     136.  00:863E  17                  	rla
     137.  00:863F  C9                  	ret
     138.  00:8640                      
     139.  00:8640                      getbitexx:
     140.  00:8640  D9                  	exx
     141.  00:8641  7E                  	ld	a,[hl]
     142.  00:8642  23                  	inc	hl
     143.  00:8643  D9                  	exx
     144.  00:8644  17                  	rla
     145.  00:8645  C9                  	ret
     146.  00:8646                      
     147.  00:8646                      ; Depacker exit
     148.  00:8646                      Depack_out:
     149.  00:8646  FB                  	ei
     150.  00:8647  C9                  	ret
     151.  00:8648                      
     152.  00:8648                      modes:
     153.  00:8648  0F 86               	dw	offsok
     154.  00:864A  FF 85               	dw	mode2
     155.  00:864C  F9 85               	dw	mode3
     156.  00:864E  F3 85               	dw	mode4
     157.  00:8650  ED 85               	dw	mode5
     158.  00:8652  E7 85               	dw	mode6
     159.  00:8654  E1 85               	dw	mode7
     264   00:8656                      
     265   00:8656                      
     266   00:8656                      	
     267   00:8656                      ;;=====================================================
     268   00:8656                      ;;DEFINICIÓN DE ESTRUCTURAS
     269   00:8656                      ;;=====================================================		
     270   00:8656                      	include "estructuras.asm"
       1.  00:8656                      ;;=====================================================
       2.  00:8656                      ;;DEFINICIÓN DE ESTRUCTURAS
       3.  00:8656                      ;;=====================================================
       4.  00:8656                      
       5.  00:8656                      ;crear estructura
       6.  00:8656                      ;variables globales del prota
       7.  00:8656                      prota_nivel:			;nivel del castillo donde está 0-6
       8.  00:8656  00                  			DB		0
       9.  00:8657                      prota_vidas:
      10.  00:8657  00                  			DB		0
      11.  00:8658                      prota_reliquias:
      12.  00:8658  03                  			DB		3
      13.  00:8659                      prota_pos_mapx:
      14.  00:8659  00                  			DB		0	;pos columna
      15.  00:865A                      prota_pos_mapy:
      16.  00:865A  00                  			DB		0	;pos fila
      17.  00:865B                      prota_energia:
      18.  00:865B  FA                  			DB		250
      19.  00:865C                      
      20.  00:865C                      	STRUCT ESTRUCTURA_PUNTOMIRA
      21.  00:865C                    < posx			DB		100
      22.  00:865C                    < posy			DB		100
      23.  00:865C                    < retardo			DB		0	;contador_siguiente_escena
      24.  00:865C                    < escena			DB		0
      25.  00:865C                    < reset_contador	DB		0
      26.  00:865C                    < velocidad		DB		0
      27.  00:865C                    < ; al final he decidido (ya que el punto de mira es el prota) que lo relacionado con el prota vaya en esta estructura
      28.  00:865C                    < pm_aux1			DB		0	;para llegar a los 16 campos
      29.  00:865C                    < pm_aux2			DB		0	;para llegar a los 16 campos
      30.  00:865C                    < pm_aux3			DB		0	;para llegar a los 16 campos
      31.  00:865C                    < pm_aux4			DB		0	;para llegar a los 16 campos
      32.  00:865C                    < pm_aux5			DB		0	;para llegar a los 16 campos
      33.  00:865C                    < pm_aux6			DB		0	;para llegar a los 16 campos
      34.  00:865C                    < pm_aux7			DB		0	;para llegar a los 16 campos
      35.  00:865C                    < pm_aux8			DB		0	;para llegar a los 16 campos
      36.  00:865C                    < pm_aux9			DB		0	;para llegar a los 16 campos
      37.  00:865C                    < pm_aux10		DB		0	;para llegar a los 16 campos
      38.  00:865C                    < 
      39.  00:865C                    < 
      40.  00:865C                    < 	ENDSTRUCT;ESTRUCTURA_PUNTOMIRA
      41.  00:865C                      	
      42.  00:865C                      	STRUCT ESTRUCTURA_ENEMIGO
      43.  00:865C                    < tipo				DB		0	;(0 serpiente por ejemplo) #FF muerto o no existe
      44.  00:865C                    < posx				DB		5
      45.  00:865C                    < posy				DB		50
      46.  00:865C                    < color				DB		5
      47.  00:865C                    < escena				DB		0
      48.  00:865C                    < contador_siguiente_escena	DB	0
      49.  00:865C                    < reset_contador		DB		0
      50.  00:865C                    < dano				DB		0	;daño
      51.  00:865C                    < energia				DB		0	;energía del enemigo... si llega a 0 => existe <- 0
      52.  00:865C                    < ;indica el nº de sprite a mostrar y si está compuesto por uno o dos sprites y si están en horizontal o vertical
      53.  00:865C                    < ver_hor				DB		0
      54.  00:865C                    < manejador_dibujo 	DW		0
      55.  00:865C                    < en_aux3				DB		0
      56.  00:865C                    < en_aux4				DB		0
      57.  00:865C                    < 	ENDSTRUCT;ESTRUCTURA_ENEMIGO
      58.  00:865C                      	
      59.  00:865C                      	STRUCT ESTRUCTURA_EXTRA		;vidas extra, plantas de curación de energía, reliquias	
      60.  00:865C                    < tipo				DB		0	;#FF muerto/usado o no existe
      61.  00:865C                    < posx				DB		50
      62.  00:865C                    < posy				DB		50
      63.  00:865C                    < color				DB		5
      64.  00:865C                    < contador			DB		0	;por si doy dos reliquias en vez de una, por ejemplo
      65.  00:865C                    < en_aux1				DB		0	;para llegar a los 16 campos
      66.  00:865C                    < en_aux2				DB		0
      67.  00:865C                    < en_aux3				DB		0
      68.  00:865C                    < en_aux4				DB		0
      69.  00:865C                    < en_aux5				DB		0
      70.  00:865C                    < en_aux6				DB		0
      71.  00:865C                    < en_aux7				DB		0
      72.  00:865C                    < en_aux8				DB		0
      73.  00:865C                    < en_aux9				DB		0
      74.  00:865C                    < en_aux10			DB		0
      75.  00:865C                    < en_aux11			DB		0
      76.  00:865C                    < 	ENDSTRUCT;ESTRUCTURA_EXTRA
      77.  00:865C                      
      78.  00:865C                      
      79.  00:865C                      
      80.  00:865C                      
      81.  00:865C                      
      82.  00:865C                      
      83.  00:865C                      
     271   00:865C                      	
     272   00:865C                      ;;=====================================================
     273   00:865C                      ;;DEFINICIÓN DE VARIABLES
     274   00:865C                      ;;=====================================================		
     275   00:865C                      	include "sprites.asm"
       1.  00:865C                      ;;=====================================================
       2.  00:865C                      ;;DEFINICIÓN DE SPRITES
       3.  00:865C                      ;;=====================================================	
       4.  00:865C                      sprites_pantantalla:
       5.  00:865C                      
       6.  00:865C                      sprite_punto_mira_1:	;color 8
       7.  00:865C                      	db #FF,#FF,#C0,#C0,#C0,#C0,#C0,#C0
       7.  00:865C  FF FF C0 C0 C0 C0 C0 C0 
       8.  00:8664                      	db #C0,#C0,#C0,#C0,#C0,#C0,#FF,#FF
       8.  00:8664  C0 C0 C0 C0 C0 C0 FF FF 
       9.  00:866C                      	db #FF,#FF,#03,#03,#03,#03,#03,#03
       9.  00:866C  FF FF 03 03 03 03 03 03 
      10.  00:8674                      	db #03,#03,#03,#03,#03,#03,#FF,#FF
      10.  00:8674  03 03 03 03 03 03 FF FF 
      11.  00:867C                      	
      12.  00:867C                      sprite_punto_mira_2: 	;color 15
      13.  00:867C                      	db #00,#00,#00,#00,#0F,#0F,#0C,#0C
      13.  00:867C  00 00 00 00 0F 0F 0C 0C 
      14.  00:8684                      	db #0C,#0C,#0F,#0F,#00,#00,#00,#00
      14.  00:8684  0C 0C 0F 0F 00 00 00 00 
      15.  00:868C                      	db #00,#00,#00,#00,#F0,#F0,#30,#30
      15.  00:868C  00 00 00 00 F0 F0 30 30 
      16.  00:8694                      	db #30,#30,#F0,#F0,#00,#00,#00,#00
      16.  00:8694  30 30 F0 F0 00 00 00 00 
      17.  00:869C                      	
      18.  00:869C                      sprite_punto_mira_1_mejorado:
      19.  00:869C                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      19.  00:869C  FF FF FF FF FF FF FF FF 
      20.  00:86A4                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      20.  00:86A4  FF FF FF FF FF FF FF FF 
      21.  00:86AC                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      21.  00:86AC  FF FF FF FF FF FF FF FF 
      22.  00:86B4                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      22.  00:86B4  FF FF FF FF FF FF FF FF 
      23.  00:86BC                      
      24.  00:86BC                      sprite_punto_mira_2_mejorado:
      25.  00:86BC                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      25.  00:86BC  FF FF FF FF FF FF FF FF 
      26.  00:86C4                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      26.  00:86C4  FF FF FF FF FF FF FF FF 
      27.  00:86CC                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      27.  00:86CC  FF FF FF FF FF FF FF FF 
      28.  00:86D4                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      28.  00:86D4  FF FF FF FF FF FF FF FF 
      29.  00:86DC                      	
      30.  00:86DC                      sprite_reliquia:
      31.  00:86DC                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      31.  00:86DC  FF FF FF FF FF FF FF FF 
      32.  00:86E4                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      32.  00:86E4  FF FF FF FF FF FF FF FF 
      33.  00:86EC                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      33.  00:86EC  FF FF FF FF FF FF FF FF 
      34.  00:86F4                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      34.  00:86F4  FF FF FF FF FF FF FF FF 
      35.  00:86FC                      	
      36.  00:86FC                      sprite_vida_extra:
      37.  00:86FC                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      37.  00:86FC  FF FF FF FF FF FF FF FF 
      38.  00:8704                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      38.  00:8704  FF FF FF FF FF FF FF FF 
      39.  00:870C                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      39.  00:870C  FF FF FF FF FF FF FF FF 
      40.  00:8714                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      40.  00:8714  FF FF FF FF FF FF FF FF 
      41.  00:871C                      	
      42.  00:871C                      sprite_planta:
      43.  00:871C                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      43.  00:871C  FF FF FF FF FF FF FF FF 
      44.  00:8724                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      44.  00:8724  FF FF FF FF FF FF FF FF 
      45.  00:872C                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      45.  00:872C  FF FF FF FF FF FF FF FF 
      46.  00:8734                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      46.  00:8734  FF FF FF FF FF FF FF FF 
      47.  00:873C                      	
      48.  00:873C                      sprite_ballesta_mejorada:
      49.  00:873C                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      49.  00:873C  FF FF FF FF FF FF FF FF 
      50.  00:8744                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      50.  00:8744  FF FF FF FF FF FF FF FF 
      51.  00:874C                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      51.  00:874C  FF FF FF FF FF FF FF FF 
      52.  00:8754                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF	
      52.  00:8754  FF FF FF FF FF FF FF FF 
      53.  00:875C                      	
      54.  00:875C                      sprite_ciempies1:
      55.  00:875C                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      55.  00:875C  FF FF FF FF FF FF FF FF 
      56.  00:8764                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      56.  00:8764  FF FF FF FF FF FF FF FF 
      57.  00:876C                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      57.  00:876C  FF FF FF FF FF FF FF FF 
      58.  00:8774                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      58.  00:8774  FF FF FF FF FF FF FF FF 
      59.  00:877C                      	
      60.  00:877C                      sprite_ciempies2:
      61.  00:877C                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      61.  00:877C  FF FF FF FF FF FF FF FF 
      62.  00:8784                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      62.  00:8784  FF FF FF FF FF FF FF FF 
      63.  00:878C                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      63.  00:878C  FF FF FF FF FF FF FF FF 
      64.  00:8794                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      64.  00:8794  FF FF FF FF FF FF FF FF 
      65.  00:879C                      	
      66.  00:879C                      sprite_arana1:
      67.  00:879C                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      67.  00:879C  FF FF FF FF FF FF FF FF 
      68.  00:87A4                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      68.  00:87A4  FF FF FF FF FF FF FF FF 
      69.  00:87AC                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      69.  00:87AC  FF FF FF FF FF FF FF FF 
      70.  00:87B4                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      70.  00:87B4  FF FF FF FF FF FF FF FF 
      71.  00:87BC                      	
      72.  00:87BC                      sprite_arana2:
      73.  00:87BC                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      73.  00:87BC  FF FF FF FF FF FF FF FF 
      74.  00:87C4                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      74.  00:87C4  FF FF FF FF FF FF FF FF 
      75.  00:87CC                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      75.  00:87CC  FF FF FF FF FF FF FF FF 
      76.  00:87D4                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      76.  00:87D4  FF FF FF FF FF FF FF FF 
      77.  00:87DC                      	
      78.  00:87DC                      sprite_serpiente1:
      79.  00:87DC                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      79.  00:87DC  FF FF FF FF FF FF FF FF 
      80.  00:87E4                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      80.  00:87E4  FF FF FF FF FF FF FF FF 
      81.  00:87EC                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      81.  00:87EC  FF FF FF FF FF FF FF FF 
      82.  00:87F4                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      82.  00:87F4  FF FF FF FF FF FF FF FF 
      83.  00:87FC                      	
      84.  00:87FC                      sprite_serpiente2:
      85.  00:87FC                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      85.  00:87FC  FF FF FF FF FF FF FF FF 
      86.  00:8804                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      86.  00:8804  FF FF FF FF FF FF FF FF 
      87.  00:880C                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      87.  00:880C  FF FF FF FF FF FF FF FF 
      88.  00:8814                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      88.  00:8814  FF FF FF FF FF FF FF FF 
      89.  00:881C                      	
      90.  00:881C                      sprite_murcielago1:
      91.  00:881C                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      91.  00:881C  FF FF FF FF FF FF FF FF 
      92.  00:8824                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      92.  00:8824  FF FF FF FF FF FF FF FF 
      93.  00:882C                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      93.  00:882C  FF FF FF FF FF FF FF FF 
      94.  00:8834                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      94.  00:8834  FF FF FF FF FF FF FF FF 
      95.  00:883C                      	
      96.  00:883C                      sprite_murcielago2:
      97.  00:883C                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      97.  00:883C  FF FF FF FF FF FF FF FF 
      98.  00:8844                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      98.  00:8844  FF FF FF FF FF FF FF FF 
      99.  00:884C                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      99.  00:884C  FF FF FF FF FF FF FF FF 
     100.  00:8854                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF	
     100.  00:8854  FF FF FF FF FF FF FF FF 
     101.  00:885C                      
     102.  00:885C                      sprite_explosion:
     103.  00:885C                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     103.  00:885C  FF FF FF FF FF FF FF FF 
     104.  00:8864                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     104.  00:8864  FF FF FF FF FF FF FF FF 
     105.  00:886C                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     105.  00:886C  FF FF FF FF FF FF FF FF 
     106.  00:8874                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     106.  00:8874  FF FF FF FF FF FF FF FF 
     107.  00:887C                      	
     108.  00:887C                      	
     109.  00:887C                      	
     276   00:887C                      	
     277   00:887C                      	include "habitaciones.asm"
       1.  00:887C                      ;;=====================================================
       2.  00:887C                      ;;DEFINICIÓN DE HABITACIONES x NIVEL
       3.  00:887C                      ;;=====================================================	
       4.  00:887C                      
       5.  00:887C                      ; sólo voy a usar 7x7 pero como los arrays son lineales y voy a trabajar con matrices
       6.  00:887C                      ; me interesa que seande  8x8 aunque sólo trabaje con 7x7
       7.  00:887C                      
       8.  00:887C                      ; ojo... la primera linea corresponderá a la primera linea del castillo no a la última
       9.  00:887C                      
      10.  00:887C                      ;; definición de estructura de bits
      11.  00:887C                      ;Tipo DB pero serán 2 bytes por habitación byte primero (habitaciones etc) + byte 2º. Los bytes 15 y 16 se usan para información extra
      12.  00:887C                      ;los 7 primeros bits del byte 15 indican si se ha pasado/limpiado una habitación o no
      13.  00:887C                      ;~ 0 - lleno o vacío (si ya se ha pasado)
      14.  00:887C                      ;~ 0000 - nº puertas 1 arriba 1 derecha 1 abajo 1 izquierda
      15.  00:887C                      ;~ 1 - hay reliquia?
      16.  00:887C                      ;~ 1 - hay vida extra
      17.  00:887C                      ;~ 1 - hay arma extra (durará 6 pantallas - sonido distinto)
      18.  00:887C                      ;~ 1 - hay energía? (sobran bits ... se puede usar otro como carga energía +)
      19.  00:887C                      ;~ 1 - es pantalla de mostruo fin de fase?
      20.  00:887C                      ;~ 1 - es pantalla inicial (equivaldría a la puerta de un castillo)?
      21.  00:887C                      ;~ 1 - es pantalla final?
      22.  00:887C                      
      23.  00:887C                      
      24.  00:887C                      ;importante: el byte de la columna 15 indicará con 1 y 0 habitaciones por las que se haya pasado
      25.  00:887C                      ;cuando se inicie la partida todos se pondrán a 0
      26.  00:887C                      
      27.  00:887C                      habitacion_actual:
      28.  00:887C  00 00               	db  #00,#00		;habitación donde se encuentre el prota. Se mete en una varible par traer todos los datos de golpe y no buscrlos varias veces
      29.  00:887E                      
      30.  00:887E                      habitaciones_juego:
      31.  00:887E                      habitaciones_nivel0:
      32.  00:887E                      ;---------------------------------* habitación inicial
      33.  00:887E                      	db  #00,#00,#01,#01,#02,#02,#03,#03,#04,#04,#05,#05,#06,#06,#FF,#00 ;primera fila
      33.  00:887E  00 00 01 01 02 02 03 03 04 04 05 05 06 06 FF 00 
      34.  00:888E                      	db  #17,#10,#11,#11,#12,#12,#13,#13,#14,#14,#15,#15,#16,#16,#FF,#00
      34.  00:888E  17 10 11 11 12 12 13 13 14 14 15 15 16 16 FF 00 
      35.  00:889E                      	db  #20,#20,#21,#21,#22,#22,#23,#23,#24,#24,#25,#25,#26,#26,#FF,#00
      35.  00:889E  20 20 21 21 22 22 23 23 24 24 25 25 26 26 FF 00 
      36.  00:88AE                      	db  #30,#30,#31,#31,#32,#32,#33,#33,#34,#34,#35,#35,#36,#36,#FF,#00
      36.  00:88AE  30 30 31 31 32 32 33 33 34 34 35 35 36 36 FF 00 
      37.  00:88BE                      	db  #40,#40,#41,#41,#42,#42,#43,#43,#44,#44,#45,#45,#46,#46,#FF,#00
      37.  00:88BE  40 40 41 41 42 42 43 43 44 44 45 45 46 46 FF 00 
      38.  00:88CE                      	db  #50,#50,#51,#51,#52,#52,#53,#53,#54,#54,#55,#55,#56,#56,#FF,#00
      38.  00:88CE  50 50 51 51 52 52 53 53 54 54 55 55 56 56 FF 00 
      39.  00:88DE                      	db  #60,#60,#61,#61,#62,#62,00001111b,#63,#64,#64,#65,#65,#66,#66,#FF,#00	;ultima fila
      39.  00:88DE  60 60 61 61 62 62 0F 63 64 64 65 65 66 66 FF 00 
      40.  00:88EE                      	
      41.  00:88EE                      habitaciones_nivel1:
      42.  00:88EE                      	db  #00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00 ;primera fila
      42.  00:88EE  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
      43.  00:88FE                      	db  #00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00
      43.  00:88FE  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
      44.  00:890E                      	db  #00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00
      44.  00:890E  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
      45.  00:891E                      	db  #00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00
      45.  00:891E  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
      46.  00:892E                      	db  #00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00
      46.  00:892E  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
      47.  00:893E                      	db  #00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00
      47.  00:893E  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
      48.  00:894E                      	db  #00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00	;ultima fila
      48.  00:894E  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
      49.  00:895E                      	
      50.  00:895E                      habitaciones_nivel2:
      51.  00:895E                      	db  #00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00 ;primera fila
      51.  00:895E  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
      52.  00:896E                      	db  #00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00
      52.  00:896E  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
      53.  00:897E                      	db  #00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00
      53.  00:897E  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
      54.  00:898E                      	db  #00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00
      54.  00:898E  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
      55.  00:899E                      	db  #00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00
      55.  00:899E  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
      56.  00:89AE                      	db  #00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00
      56.  00:89AE  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
      57.  00:89BE                      	db  #00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00	;ultima fila
      57.  00:89BE  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
      58.  00:89CE                      	
      59.  00:89CE                      habitaciones_nivel3:
      60.  00:89CE                      	db  #00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00 ;primera fila
      60.  00:89CE  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
      61.  00:89DE                      	db  #00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00
      61.  00:89DE  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
      62.  00:89EE                      	db  #00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00
      62.  00:89EE  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
      63.  00:89FE                      	db  #00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00
      63.  00:89FE  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
      64.  00:8A0E                      	db  #00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00
      64.  00:8A0E  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
      65.  00:8A1E                      	db  #00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00
      65.  00:8A1E  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
      66.  00:8A2E                      	db  #00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00	;ultima fila
      66.  00:8A2E  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
      67.  00:8A3E                      	
      68.  00:8A3E                      habitaciones_nivel4:
      69.  00:8A3E                      	db  #00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00 ;primera fila
      69.  00:8A3E  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
      70.  00:8A4E                      	db  #00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00
      70.  00:8A4E  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
      71.  00:8A5E                      	db  #00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00
      71.  00:8A5E  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
      72.  00:8A6E                      	db  #00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00
      72.  00:8A6E  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
      73.  00:8A7E                      	db  #00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00
      73.  00:8A7E  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
      74.  00:8A8E                      	db  #00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00
      74.  00:8A8E  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
      75.  00:8A9E                      	db  #00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00	;ultima fila
      75.  00:8A9E  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
      76.  00:8AAE                      	
      77.  00:8AAE                      habitaciones_nivel5:
      78.  00:8AAE                      	db  #00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00 ;primera fila
      78.  00:8AAE  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
      79.  00:8ABE                      	db  #00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00
      79.  00:8ABE  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
      80.  00:8ACE                      	db  #00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00
      80.  00:8ACE  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
      81.  00:8ADE                      	db  #00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00
      81.  00:8ADE  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
      82.  00:8AEE                      	db  #00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00
      82.  00:8AEE  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
      83.  00:8AFE                      	db  #00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00
      83.  00:8AFE  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
      84.  00:8B0E                      	db  #00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00	;ultima fila
      84.  00:8B0E  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
      85.  00:8B1E                      	
      86.  00:8B1E                      habitaciones_nivel6:
      87.  00:8B1E                      	db  #6F,#6F,#01,#01,#02,#02,#03,#03,#04,#04,#05,#05,#06,#06,#FF,#00 ;primera fila
      87.  00:8B1E  6F 6F 01 01 02 02 03 03 04 04 05 05 06 06 FF 00 
      88.  00:8B2E                      	db  #17,#10,#11,#11,#12,#12,#13,#13,#14,#14,#15,#15,#16,#16,#FF,#00
      88.  00:8B2E  17 10 11 11 12 12 13 13 14 14 15 15 16 16 FF 00 
      89.  00:8B3E                      	db  #20,#20,#21,#21,#22,#22,#23,#23,#24,#24,#25,#25,#26,#26,#FF,#00
      89.  00:8B3E  20 20 21 21 22 22 23 23 24 24 25 25 26 26 FF 00 
      90.  00:8B4E                      	db  #30,#30,#31,#31,#32,#32,#33,#33,#34,#34,#35,#35,#36,#36,#FF,#00
      90.  00:8B4E  30 30 31 31 32 32 33 33 34 34 35 35 36 36 FF 00 
      91.  00:8B5E                      	db  #40,#40,#41,#41,#42,#42,#43,#43,#44,#44,#45,#45,#46,#46,#FF,#00
      91.  00:8B5E  40 40 41 41 42 42 43 43 44 44 45 45 46 46 FF 00 
      92.  00:8B6E                      	db  #50,#50,#51,#51,#52,#52,#53,#53,#54,#54,#55,#55,#56,#56,#FF,#00
      92.  00:8B6E  50 50 51 51 52 52 53 53 54 54 55 55 56 56 FF 00 
      93.  00:8B7E                      	db  #60,#60,#61,#61,#62,#62,#63,#63,#64,#64,#65,#65,#66,#66,#FF,#00	;ultima fila
      93.  00:8B7E  60 60 61 61 62 62 63 63 64 64 65 65 66 66 FF 00 
      94.  00:8B8E                      
      95.  00:8B8E                      
     278   00:8B8E                      	
     279   00:8B8E                      	include "variables.asm"
       1.  00:8B8E                      ;;=====================================================
       2.  00:8B8E                      ;;DEFINICIÓN DE VARIABLES
       3.  00:8B8E                      ;;=====================================================	
       4.  00:8B8E                      ;definicion de variable del prota usando la estructura del punto de mira
       5.  00:8B8E                      prota:		ESTRUCTURA_PUNTOMIRA
       5.  00:8B8E  64 64 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
       6.  00:8B9E                      
       7.  00:8B9E                      array_aux_vidas: 		;array para pintar de golpe el marcador de vidas
       8.  00:8B9E                      			DB		0,0,0,0,0,0,0,0
       8.  00:8B9E  00 00 00 00 00 00 00 00 
       9.  00:8BA6                      actualiza_vidas_sn:
      10.  00:8BA6  00                  			DB		0 	;valor que indica si hay que actualizar el marcador de vidas 1 ó no 0
      11.  00:8BA7                      
      12.  00:8BA7                      array_aux_reliquias:	;array para pintar de golpe el marcador de reliquias
      13.  00:8BA7                      			DB		0,0,0,0,0,0,0,0
      13.  00:8BA7  00 00 00 00 00 00 00 00 
      14.  00:8BAF                      actualiza_reliquias_sn:
      15.  00:8BAF  00                  			DB		0 	;valor que indica si hay que actualizar el marcador de reliquias 1 ó no 0
      16.  00:8BB0                      
      17.  00:8BB0                      array_aux_energia:		;array para pintar de golpe el marcador de energía
      18.  00:8BB0                      			DB		16,0,0,0,0,0,0 ;el 16 primero es porque siempre estará pintado el cuadro primero rojo
      18.  00:8BB0  10 00 00 00 00 00 00 
      19.  00:8BB7                      ultimo_pos_array_aux_energia:
      20.  00:8BB7  00                  			DB		0			;el array completo es de 8 pero para posicionar sin niecesidad de cálculos  etiqueto este aparte
      21.  00:8BB8                      			
      22.  00:8BB8                      array_aux_mapa_limpiar:	;es por facilitar el reseteo del mapa (pinto 7 lineas en negro con bios) la otra opción es más larga en código y complicada aunque más rápida
      23.  00:8BB8                      			DB		0,0,0,0,0,0,0
      23.  00:8BB8  00 00 00 00 00 00 00 
      24.  00:8BBF                      
      25.  00:8BBF                      actualiza_puertas_sn:	;0 no 1 sí (se pone a 1 cuando se cambia de habitación y al terminar se vuelve a poner a 0)
      26.  00:8BBF  00                  			DB		0 	;valor que indica si hay que actualizar las puertas de una pantalla (se crea porque sólo hay que actualizar si se cambia a de hab)
      27.  00:8BC0                      			
      28.  00:8BC0                      ;; nota importante: cada vez que se cambie de nivel se actualizará el contenido
      29.  00:8BC0                      ;; arrays con mapa de tiles de las puertas
      30.  00:8BC0                      array_puerta_arriba:
      31.  00:8BC0  03 01 01 03         array_puerta_arriba1:		DB	3,1,1,3
      32.  00:8BC4  01 01 01 01         array_puerta_arriba2:		DB	1,1,1,1
      33.  00:8BC8  01 01 01 01         array_puerta_arriba3:		DB	1,1,1,1
      34.  00:8BCC  01 01 01 01         array_puerta_arriba4:		DB	1,1,1,1
      35.  00:8BD0  01 01 01 01         array_puerta_arriba5:		DB	1,1,1,1
      36.  00:8BD4                      
      37.  00:8BD4                      array_puerta_derecha:
      38.  00:8BD4  01 03 03            array_puerta_derecha1:		DB	1,3,3
      39.  00:8BD7  01 01 03            array_puerta_derecha2:		DB	1,1,3
      40.  00:8BDA  01 01 01            array_puerta_derecha3:		DB	1,1,1
      41.  00:8BDD  01 01 01            array_puerta_derecha4:		DB	1,1,1
      42.  00:8BE0  01 01 01            array_puerta_derecha5:		DB	1,1,1
      43.  00:8BE3  02 01 01            array_puerta_derecha6:		DB	2,1,1
      44.  00:8BE6  04 02 01            array_puerta_derecha7:		DB	4,2,1
      45.  00:8BE9                      	
      46.  00:8BE9  01 01 01 01         array_puerta_abajo:			DB	1,1,1,1
      47.  00:8BED                      
      48.  00:8BED                      array_puerta_izquierda:
      49.  00:8BED  03 03 01            array_puerta_izquierda1:	DB	3,3,1
      50.  00:8BF0  03 01 01            array_puerta_izquierda2:	DB	3,1,1
      51.  00:8BF3  01 01 01            array_puerta_izquierda3:	DB	1,1,1
      52.  00:8BF6  01 01 01            array_puerta_izquierda4:	DB	1,1,1
      53.  00:8BF9  01 01 01            array_puerta_izquierda5:	DB	1,1,1
      54.  00:8BFC  01 01 02            array_puerta_izquierda6:	DB	1,1,2
      55.  00:8BFF  01 02 04            array_puerta_izquierda7:	DB	1,2,4
      56.  00:8C02                      
      57.  00:8C02                      
      58.  00:8C02                      ;;variables para teclas teclas y joystick (control del punto de mira)
      59.  00:8C02  00                  teclas_pulsadas:			DB	0	;4 bits altos (disparo normal espacio o alternativo shift) 4 bits siguientes movimiento
      60.  00:8C03  00                  accion_joystick:			DB	0	;4 bits altos (disparo normal A o alternativo B) 4 bits siguientes movimiento
      61.  00:8C04                      array_movimientos_cursores:			;posiciones que tras mirar teclado y 4srr devuelve y su traducción en movmiento a cursor
      62.  00:8C04                      							DB	9,9,9,4,9,2,9,3,9,9,6,5,8,1,7,0
      62.  00:8C04  09 09 09 04 09 02 09 03 09 09 06 05 08 01 07 00 
      63.  00:8C14                      
      64.  00:8C14                      
      65.  00:8C14                      ;array de 4 bytes x 32 sprites posibles en pantalla que sobreescribirá la tabla de sprites actualizando VRAM
      66.  00:8C14                      array_sprites:
      67.  00:8C14  00 (8)              array_sprites_pm:				DS	2 * 4
      68.  00:8C1C  00 (120)            array_sprites_enem:				DS	30 * 4
      69.  00:8C94  00 (140)            lista_enemigos:					DS	10 * ESTRUCTURA_ENEMIGO
      70.  00:8D20                      ; puntero al array a pintar en VRAM
      71.  00:8D20  00 00               puntero_array_atrib_array_VRAM: DW	0	;ARRAYSPTRIES + 8
      72.  00:8D22                      
      73.  00:8D22                      
     280   00:8D22                      
     281   00:8D22                      
     282   00:8D22                      	
     283   00:8D22                      ;;=====================================================
     284   00:8D22                      ;;DEFINICIÓN DE PANTALLAS
     285   00:8D22                      ;;=====================================================		
     286   00:8D22                      	include "pantallas.asm"
       1.  00:8D22                      ;;=====================================================
       2.  00:8D22                      ;;DEFINICIÓN DE PANTALLAS
       3.  00:8D22                      ;;=====================================================		
       4.  00:8D22                      
       5.  00:8D22                      ; bancos 1 y 2 y de pantalla 1 (en realidad es una pantalla de pruebas)
       6.  00:8D22                      tiles_patrones_pantalla11:	
       7.  00:8D22  (0023)              tiles_patrones_pantalla12:	incbin "pan1_23.bank1.bin.chr.pletter"
       8.  00:8D45                      tiles_color_pantalla11:		
       9.  00:8D45  (0018)              tiles_color_pantalla12:		incbin "pan1_23.bank1.bin.clr.pletter"
      10.  00:8D5D  (001A)              tiles_mapa_pantalla11:		incbin "pan1_23.bank0.bin.map.pletter"
      11.  00:8D77  (002A)              tiles_mapa_pantalla12:		incbin "pan1_23.bank1.bin.map.pletter"
      12.  00:8DA1                      
      13.  00:8DA1                      
      14.  00:8DA1                      
      15.  00:8DA1                      
      16.  00:8DA1                      
      17.  00:8DA1                      
      18.  00:8DA1                      ; 3º banco que es la parte de puntos, vidas, mapas, etc... es común
      19.  00:8DA1  (0146)              tiles_patrones_pantalla3:	incbin "pan_33.bin.chr.pletter"
      20.  00:8EE7  (0035)              tiles_color_pantalla3:		incbin "pan_33.bin.clr.pletter"
      21.  00:8F1C  (006F)              tiles_mapa_pantalla3:		incbin "pan_33.bin.map.pletter"
      22.  00:8F8B                      
      23.  00:8F8B                      ;NOTA: FALTARÍAN PANTALLAS ESPECIALES (POR DEFINIR)
     287   00:8F8B                      	
     288   00:8F8B                      END:

    LABELS
-------------------------------------------------
00:000000D8 X GTTRIG
00:000000D5 X GTSTCK
00:0000F3DB   CLIKSW
00:0000013E X RDVDP
00:00000047   WRTVDP
00:0000005C   LDIRVM
00:00000059 X LDIRMV
00:0000005F   CHGMOD
00:00000041 X DISSCR
00:00000044 X ENASCR
00:00000062   CHGCLR
00:0000F3E9   FORCLR
00:0000F3EA   BAKCLR
00:0000F3EB   BDRCLR
00:000000C3   CLS
00:0000F3DF X RG0SAV
00:0000F3E0   RG1SAV
00:0000F3E1 X RG2SAV
00:0000F3E2 X RG3SAV
00:0000F3E3 X RG4SAV
00:0000F3E4 X RG5SAV
00:0000F3E5 X RG6SAV
00:0000F3E6 X RG7SAV
00:0000F3E7 X STATFL
00:00000099   REGEST
00:00000098   REGESCVDP
00:00000000   CHRTBL
00:00001800   TILMAP
00:00001B00   SPRART
00:00002000   CLRTBL
00:00003800 X SPRTBL
00:00000001   SI
00:00000000 X NO
00:00000000 X COLTRASP
00:00000001 X COLNEGRO
00:00000002 X COLVERDE
00:00000003 X COLVERCLA
00:00000004 X COLAZULOSC
00:00000005 X COLAZULLA
00:00000006 X COLROJOOSC
00:00000007 X COLCYAN
00:00000008   COLROJO
00:00000009 X COLROJOCLA
00:0000000A X COLAMAROSC
00:0000000B X COLAMARCLA
00:0000000C X COLVERDOSC
00:0000000D X COLMAGENTA
00:0000000E X COLGRIS
00:0000000F   COLBLANCO
00:000002F8   POSMAPLIN1
00:000002D8   POSMAPLIN2
00:000002B8   POSMAPLIN3
00:00000298   POSMAPLIN4
00:00000278   POSMAPLIN5
00:00000258   POSMAPLIN6
00:00000238   POSMAPLIN7
00:0000000D   POSCARAMAP
00:00000248   POSVIDAS
00:00000011   POSRELIMAP
00:000002C8   POSRELIQ
00:00000288   POSENERG
00:000002B4   POSNIVEL
00:00000238   POSMAPA
00:000001EE   POSPUERABAJ
00:0000008E   POSPUERARRI
00:000000FC   POSPUERDERE
00:000000E1   POSPUERIZQU
00:00000013   TILEMAPPROT
00:00000009   TILEMAPVACI
00:00000010   TILEMAPROJO
00:0000000F   TILEMAPAMAR
00:0000000E   TILEMAPVERD
00:00000008   NMAXVIDREL
00:00000007   NHABNIVEL
00:000000F8 X MAXENERGIA
00:000000D9   TILEENERG8
00:000000BA   TILEENERG7
00:0000009B   TILEENERG6
00:0000007C   TILEENERG5
00:0000005D   TILEENERG4
00:0000003E   TILEENERG3
00:0000001F   TILEENERG2
00:00000000   TILENEGRO
00:00000000 X LIMPANTIZQ
00:000000FF   LIMPANTDER
00:00000000 X LIMPANTARR
00:00000080   LIMPANTABA
00:00000001   MUEARR
00:00000002   MUEARRDER
00:00000003   MUEDER
00:00000004   MUEDERABA
00:00000005   MUEABA
00:00000006   MUEABAIZQ
00:00000007   MUEIZQ
00:00000008   MUEIZQARR
00:00000006 X BASEMAPY
00:00000003 X BASEMAPX
00:00008000   START
00:00008023   loop_principal
00:0000802A X mira_pinta_puertas
00:00008036   fin_mira_pinta_puertas
00:00008036 X mira_pinta_vidas
00:0000803F   fin_mira_pinta_vidas
00:0000803F X mira_pinta_reliquias
00:00008048   fin_mira_pinta_reliquias
00:00008051 X fin_programa_principal
00:00008052   check_player
00:00008089 X fin_check_player
00:0000808A   obtiene_tecla_pulsada
00:0000809F   obtiene_tecla_pulsada.finsi_pulsado_shift
00:000080B5   obtiene_tecla_pulsada.finsi_pulsado_espacio
00:000080C9 X fin_obtiene_tecla_pulsada
00:000080CA   inicializa_variables_pruebas
00:000080F7 X fin_inicializa_variables_pruebas
00:000080F8   inicializa_niveles
00:00008107   inicializa_niveles.bucle_borra_hab
00:0000810C X fin_iniciliza_niveles
00:0000810D   actualiza_marcador_vidas
00:00008113   loop_marcador_caras_negro
00:00008118 X fin_loop_marcador_caras_negro
00:0000811F   loop_marcador_caras
00:00008124 X fin_loop_marcador_caras
00:00008125 X fin_actualiza_marcador_vidas
00:00008126   actualiza_marcador_reliquias
00:0000812B   loop_marcador_reliquias_negro
00:00008130 X fin_loop_marcador_reliquias_negro
00:00008137   loop_marcador_reliquias
00:0000813C X fin_loop_marcador_reliquias
00:0000813C X fin_actualiza_marcador_reliquias
00:0000813D   localiza_info_habitacion
00:0000814A   localiza_info_habitacion.primer_producto
00:00008156   localiza_info_habitacion.segundo_producto
00:00008159 X localiza_info_habitacion.fin_seg_prod
00:0000815D   localiza_info_habitacion.no_suma_niveles_previos
00:00008170   localiza_info_habitacion.situa_columna
00:00008182 X fin_localiza_info_habitacion
00:00008183   sub_preparapantalla
00:00008183 X elimina_clic
00:00008187 X fin_elimina_clic
00:00008187 X limpia_pantalla
00:0000818B X fin_limpia_pantalla
00:0000818B X set_color
00:0000819D X fin_set_color
00:0000819D X screen2
00:000081A2 X sprites_16_16
00:000081B0 X fin_sub_preparapantalla
00:000081B0   pinta_pantalla_completa
00:000081B6 X fin_pinta_pantalla_completa
00:000081B7   pinta_parte_superior_pantalla
00:000081ED X fin_pinta_parte_superior_pantalla
00:000081EE   pinta_parte_inferior_pantalla
00:00008209 X fin_pinta_parte_inferior_pantalla
00:00008209   pinta_vidas
00:0000821B X fin_pinta_vidas
00:0000821C   pinta_reliquias
00:0000822E X fin_pinta_reliquias
00:0000822F   pinta_nivel
00:0000823B X fin_pinta_nivel
00:0000823C   pinta_tile_suelto
00:00008249 X fin_pinta_tile_suelto
00:0000824A   mira_pinta_energia
00:00008250 X pinta_ener
00:00008250 X pinta_ener_tile_8
00:0000825C   pinta_ener_tile_8_negro
00:0000825D   pinta_ener_tile_7
00:00008267   pinta_ener_tile_7_negro
00:00008268   pinta_ener_tile_6
00:00008272   pinta_ener_tile_6_negro
00:00008273   pinta_ener_tile_5
00:0000827D   pinta_ener_tile_5_negro
00:0000827E   pinta_ener_tile_4
00:00008288   pinta_ener_tile_4_negro
00:00008289   pinta_ener_tile_3
00:00008293   pinta_ener_tile_3_negro
00:00008294   pinta_ener_tile_2
00:0000829E   pinta_ener_tile_2_negro
00:0000829F   fin_mira_pinta_energia
00:000082A1   pinta_energia
00:000082AF X fin_pinta_energia
00:000082B0   borra_mapa
00:00008306 X fin_borra_mapa
00:00008307   pinta_array
00:00008315   pinta_array.pa_pinta_fila
00:00008316   pinta_array.pa_pinta_columnas
00:00008339 X fin_pinta_array
00:0000833A   wordaux1
00:0000833C   wordaux2
00:0000833E   pinta_puertas
00:0000835B X fin_pinta_puertas
00:0000835C   pinta_puerta_aba
00:00008371 X fin_pinta_puerta_aba
00:00008371   pinta_puerta_arr
00:00008386 X fin_pinta_puerta_arr
00:00008386   pinta_puerta_der
00:0000839B X fin_pinta_puerta_der
00:0000839B   pinta_puerta_izq
00:000083B0 X fin_pinta_puerta_izq
00:000083B0   posiciona_en_mapa
00:000083B4 X posiciona_en_mapa.sumar_fila
00:000083DE X posiciona_en_mapa.fila_0
00:000083E5   posiciona_en_mapa.fila_1
00:000083EC   posiciona_en_mapa.fila_2
00:000083F3   posiciona_en_mapa.fila_3
00:000083FA   posiciona_en_mapa.fila_4
00:00008401   posiciona_en_mapa.fila_5
00:00008408 X posiciona_en_mapa.fila_6
00:00008408   posiciona_en_mapa.sumar_columna
00:0000841B   pinta_pos_mapa_vacio
00:0000841D   fin_pinta_pos_mapa
00:00008420 X fin_posiciona_en_mapa
00:00008420   carga_patrones_sprites_nivel1
00:000084F0 X fin_carga_patrones_sprites
00:000084F1   render_sprites
00:000084FD X fin_actualiza_array_sprites_vram
00:000084FD   vuelca_resultado_puntomira_array
00:00008525 X fin_vuelca_resultado_puntomira_array
00:00008526   mueve_arriba
00:00008531   mueve_arriba.no_decrementa_y
00:00008532 X fin_mueve_arriba
00:00008533   mueve_arriba_derecha
00:00008539 X fin_mueve_arriba_derecha
00:00008539   mueve_derecha
00:00008546   mueve_derecha.no_incrementa_x
00:00008547 X fin_mueve_derecha
00:00008548   mueve_derecha_abajo
00:0000854E X fin_mueve_derecha_abajo
00:0000854E   mueve_abajo
00:0000855B   mueve_abajo.no_incrementa_y
00:0000855C X fin_mueve_abajo
00:0000855D   mueve_abajo_izquierda
00:00008563 X fin_mueve_abajo_izquierda
00:00008563   mueve_izquierda
00:0000856E   mueve_izquierda.no_decrementa_x
00:0000856F X fin_mueve_izquierda
00:00008570   mueve_izquierda_arriba
00:00008576 X fin_mueve_izquierda_arriba
00:00008576   depack_VRAM
00:000085A3   literal
00:000085A8   loop
00:000085B1 X getlen
00:000085B7   lus
00:000085D4   lenok
00:000085E1   mode7
00:000085E7   mode6
00:000085ED   mode5
00:000085F3   mode4
00:000085F9   mode3
00:000085FF   mode2
00:0000860F   offsok
00:0000861A   offsok.loop
00:0000863C   getbit
00:00008640   getbitexx
00:00008646   Depack_out
00:00008648   modes
00:00008656   prota_nivel
00:00008657   prota_vidas
00:00008658   prota_reliquias
00:00008659   prota_pos_mapx
00:0000865A   prota_pos_mapy
00:0000865B   prota_energia
00:00000000 X ESTRUCTURA_PUNTOMIRA.posx
00:00000001 X ESTRUCTURA_PUNTOMIRA.posy
00:00000002 X ESTRUCTURA_PUNTOMIRA.retardo
00:00000003 X ESTRUCTURA_PUNTOMIRA.escena
00:00000004 X ESTRUCTURA_PUNTOMIRA.reset_contador
00:00000005 X ESTRUCTURA_PUNTOMIRA.velocidad
00:00000006 X ESTRUCTURA_PUNTOMIRA.pm_aux1
00:00000007 X ESTRUCTURA_PUNTOMIRA.pm_aux2
00:00000008 X ESTRUCTURA_PUNTOMIRA.pm_aux3
00:00000009 X ESTRUCTURA_PUNTOMIRA.pm_aux4
00:0000000A X ESTRUCTURA_PUNTOMIRA.pm_aux5
00:0000000B X ESTRUCTURA_PUNTOMIRA.pm_aux6
00:0000000C X ESTRUCTURA_PUNTOMIRA.pm_aux7
00:0000000D X ESTRUCTURA_PUNTOMIRA.pm_aux8
00:0000000E X ESTRUCTURA_PUNTOMIRA.pm_aux9
00:0000000F X ESTRUCTURA_PUNTOMIRA.pm_aux10
00:00000010 X ESTRUCTURA_PUNTOMIRA
00:00000000 X ESTRUCTURA_ENEMIGO.tipo
00:00000001 X ESTRUCTURA_ENEMIGO.posx
00:00000002 X ESTRUCTURA_ENEMIGO.posy
00:00000003 X ESTRUCTURA_ENEMIGO.color
00:00000004 X ESTRUCTURA_ENEMIGO.escena
00:00000005 X ESTRUCTURA_ENEMIGO.contador_siguiente_escena
00:00000006 X ESTRUCTURA_ENEMIGO.reset_contador
00:00000007 X ESTRUCTURA_ENEMIGO.dano
00:00000008 X ESTRUCTURA_ENEMIGO.energia
00:00000009 X ESTRUCTURA_ENEMIGO.ver_hor
00:0000000A X ESTRUCTURA_ENEMIGO.manejador_dibujo
00:0000000C X ESTRUCTURA_ENEMIGO.en_aux3
00:0000000D X ESTRUCTURA_ENEMIGO.en_aux4
00:0000000E   ESTRUCTURA_ENEMIGO
00:00000000 X ESTRUCTURA_EXTRA.tipo
00:00000001 X ESTRUCTURA_EXTRA.posx
00:00000002 X ESTRUCTURA_EXTRA.posy
00:00000003 X ESTRUCTURA_EXTRA.color
00:00000004 X ESTRUCTURA_EXTRA.contador
00:00000005 X ESTRUCTURA_EXTRA.en_aux1
00:00000006 X ESTRUCTURA_EXTRA.en_aux2
00:00000007 X ESTRUCTURA_EXTRA.en_aux3
00:00000008 X ESTRUCTURA_EXTRA.en_aux4
00:00000009 X ESTRUCTURA_EXTRA.en_aux5
00:0000000A X ESTRUCTURA_EXTRA.en_aux6
00:0000000B X ESTRUCTURA_EXTRA.en_aux7
00:0000000C X ESTRUCTURA_EXTRA.en_aux8
00:0000000D X ESTRUCTURA_EXTRA.en_aux9
00:0000000E X ESTRUCTURA_EXTRA.en_aux10
00:0000000F X ESTRUCTURA_EXTRA.en_aux11
00:00000010 X ESTRUCTURA_EXTRA
00:0000865C X sprites_pantantalla
00:0000865C   sprite_punto_mira_1
00:0000867C   sprite_punto_mira_2
00:0000869C   sprite_punto_mira_1_mejorado
00:000086BC   sprite_punto_mira_2_mejorado
00:000086DC   sprite_reliquia
00:000086FC X sprite_vida_extra
00:0000871C   sprite_planta
00:0000873C   sprite_ballesta_mejorada
00:0000875C   sprite_ciempies1
00:0000877C   sprite_ciempies2
00:0000879C   sprite_arana1
00:000087BC   sprite_arana2
00:000087DC   sprite_serpiente1
00:000087FC   sprite_serpiente2
00:0000881C   sprite_murcielago1
00:0000883C   sprite_murcielago2
00:0000885C   sprite_explosion
00:0000887C   habitacion_actual
00:0000887E   habitaciones_juego
00:0000887E X habitaciones_nivel0
00:000088EE X habitaciones_nivel1
00:0000895E X habitaciones_nivel2
00:000089CE X habitaciones_nivel3
00:00008A3E X habitaciones_nivel4
00:00008AAE X habitaciones_nivel5
00:00008B1E X habitaciones_nivel6
00:00008B8E X prota
00:00008B8E   prota.posx
00:00008B8F   prota.posy
00:00008B90 X prota.retardo
00:00008B91 X prota.escena
00:00008B92 X prota.reset_contador
00:00008B93 X prota.velocidad
00:00008B94 X prota.pm_aux1
00:00008B95 X prota.pm_aux2
00:00008B96 X prota.pm_aux3
00:00008B97 X prota.pm_aux4
00:00008B98 X prota.pm_aux5
00:00008B99 X prota.pm_aux6
00:00008B9A X prota.pm_aux7
00:00008B9B X prota.pm_aux8
00:00008B9C X prota.pm_aux9
00:00008B9D X prota.pm_aux10
00:00008B9E   array_aux_vidas
00:00008BA6   actualiza_vidas_sn
00:00008BA7   array_aux_reliquias
00:00008BAF   actualiza_reliquias_sn
00:00008BB0   array_aux_energia
00:00008BB7   ultimo_pos_array_aux_energia
00:00008BB8   array_aux_mapa_limpiar
00:00008BBF   actualiza_puertas_sn
00:00008BC0   array_puerta_arriba
00:00008BC0 X array_puerta_arriba1
00:00008BC4 X array_puerta_arriba2
00:00008BC8 X array_puerta_arriba3
00:00008BCC X array_puerta_arriba4
00:00008BD0 X array_puerta_arriba5
00:00008BD4   array_puerta_derecha
00:00008BD4 X array_puerta_derecha1
00:00008BD7 X array_puerta_derecha2
00:00008BDA X array_puerta_derecha3
00:00008BDD X array_puerta_derecha4
00:00008BE0 X array_puerta_derecha5
00:00008BE3 X array_puerta_derecha6
00:00008BE6 X array_puerta_derecha7
00:00008BE9   array_puerta_abajo
00:00008BED   array_puerta_izquierda
00:00008BED X array_puerta_izquierda1
00:00008BF0 X array_puerta_izquierda2
00:00008BF3 X array_puerta_izquierda3
00:00008BF6 X array_puerta_izquierda4
00:00008BF9 X array_puerta_izquierda5
00:00008BFC X array_puerta_izquierda6
00:00008BFF X array_puerta_izquierda7
00:00008C02   teclas_pulsadas
00:00008C03 X accion_joystick
00:00008C04   array_movimientos_cursores
00:00008C14   array_sprites
00:00008C14   array_sprites_pm
00:00008C1C X array_sprites_enem
00:00008C94 X lista_enemigos
00:00008D20 X puntero_array_atrib_array_VRAM
00:00008D22   tiles_patrones_pantalla11
00:00008D22   tiles_patrones_pantalla12
00:00008D45   tiles_color_pantalla11
00:00008D45   tiles_color_pantalla12
00:00008D5D   tiles_mapa_pantalla11
00:00008D77   tiles_mapa_pantalla12
00:00008DA1   tiles_patrones_pantalla3
00:00008EE7   tiles_color_pantalla3
00:00008F1C   tiles_mapa_pantalla3
00:00008F8B   END


 Output: t4.out
-------------------------------------------------

 Page: 00
  Org: 00008000  Size: *  Used: 00000000

    No output

 Output: t4.bin
-------------------------------------------------

 Page: 00
  Org: 00008000  Size: *  Used: 00000F92

   Address   Length Align   Label
   00008000    3986         START
