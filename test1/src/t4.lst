Sjasm Z80 Assembler v0.42c - www.xl2s.tk             [2021.10.16 - 14:29:36]

t4.asm
Errors: 0

       1   00:0000                      	OUTPUT	"t4.bin"
       2   00:8000                      	
       3   00:8000                      ;;=====================================================
       4   00:8000                      ;;DEFINICIÓN DE CONSTANTES
       5   00:8000                      ;;=====================================================	
       6   00:8000                      	include "constantes.asm"
       1.  00:8000                      ;;=====================================================
       2.  00:8000                      ;; FICHERO constantes.asm
       3.  00:8000                      ;;=====================================================
       4.  00:8000                      
       5.  00:8000                      ;;ETIQUETAS/CONSTANTES BIOS TECLADO
       6.  00:8000  (00:00D8)           GTTRIG		equ		#00D8	;Returns current trigger status
       7.  00:8000  (00:00D5)           GTSTCK		equ		#00D5	;Returns the joystick/cursors status
       8.  00:8000  (00:F3DB)           CLIKSW		equ		#F3DB	;deshabilita el sonido de clic cuando se pulsa una tecla
       9.  00:8000                      
      10.  00:8000                      ;;ETIQUETAS/CONSTANTES BIOS VDP
      11.  00:8000  (00:013E)           RDVDP		equ		#013E	;lee registro status VDP
      12.  00:8000  (00:0047)           WRTVDP		equ		#0047	;escribe registros del VDP
      13.  00:8000  (00:005C)           LDIRVM		equ		#005C	;RAM/ROM -> VRAM
      14.  00:8000  (00:0059)           LDIRMV		equ		#0059	;VRAM -> RAM
      15.  00:8000  (00:005F)           CHGMOD		equ		#005F	;cambia modo pantalla (screen mode)
      16.  00:8000  (00:0041)           DISSCR  	equ		#0041	;desactiva pantanlla
      17.  00:8000  (00:0044)           ENASCR  	equ		#0044	;activa pantalla
      18.  00:8000  (00:0062)           CHGCLR  	equ		#0062	;cambia color de pantalla (toca A y direcciones)
      19.  00:8000  (00:F3E9)           FORCLR		equ		#F3E9	;zona memoria color foreground
      20.  00:8000  (00:F3EA)           BAKCLR  	equ		#F3EA	;zona memoria color background
      21.  00:8000  (00:F3EB)           BDRCLR 		equ		#F3EB	;zona memoria bordercolor
      22.  00:8000  (00:00C3)           CLS			equ		#00C3	;limpia pantalla (necesita A=0)
      23.  00:8000                      
      24.  00:8000                      ;;ETIQUETAS/CONSTANTES REGISTROS VDP
      25.  00:8000  (00:F3DF)           RG0SAV		equ		#F3DF	;Mirror of VDP register 0 (Basic: VDP(0))
      26.  00:8000  (00:F3E0)           RG1SAV		equ		#F3E0	;Mirror of VDP register 1 (Basic: VDP(1))
      27.  00:8000  (00:F3E1)           RG2SAV		equ		#F3E1	;Mirror of VDP register 2 (Basic: VDP(2))
      28.  00:8000  (00:F3E2)           RG3SAV		equ		#F3E2	;Mirror of VDP register 3 (Basic: VDP(3))
      29.  00:8000  (00:F3E3)           RG4SAV		equ		#F3E3	;Mirror of VDP register 4 (Basic: VDP(4))
      30.  00:8000  (00:F3E4)           RG5SAV		equ		#F3E4	;Mirror of VDP register 5 (Basic: VDP(5))
      31.  00:8000  (00:F3E5)           RG6SAV		equ		#F3E5	;Mirror of VDP register 6 (Basic: VDP(6))
      32.  00:8000  (00:F3E6)           RG7SAV		equ		#F3E6	;Mirror of VDP register 7 (Basic: VDP(7))
      33.  00:8000  (00:F3E7)           STATFL		equ		#F3E7	;Mirror of VDP(8) status register (S#0)
      34.  00:8000                      
      35.  00:8000  (00:0099)           REGEST		equ		#0099	;registro de estado para escribir directamente en VRAM
      36.  00:8000  (00:0098)           REGESCVDP	equ		#0098	;registro donde escribir valor para VRAM
      37.  00:8000                      
      38.  00:8000                      ;;ETIQUETAS/CONSTANTES REGISTROS PSG (PARA JOYSTICK)
      39.  00:8000  (00:00A0)           PSG_A  equ  0a0h  ;reg address
      40.  00:8000  (00:00A1)           PSG_W  equ  0a1h  ;reg data WR
      41.  00:8000  (00:00A2)           PSG_R  equ  0a2h  ;reg data
      42.  00:8000                      
      43.  00:8000                      
      44.  00:8000                      ;;ETIQUETAS DE ZONAS DE MEMORIA DE LA VPD (MSX1)
      45.  00:8000  (00:0000)           CHRTBL		equ		#0000
      46.  00:8000  (00:1800)           TILMAP		equ		#1800
      47.  00:8000  (00:1900)           TILMAPBANK1 equ		#1900
      48.  00:8000  (00:1B00)           SPRART		equ		#1B00
      49.  00:8000  (00:2000)           CLRTBL		equ		#2000
      50.  00:8000  (00:3800)           SPRTBL		equ		#3800
      51.  00:8000                      
      52.  00:8000                      
      53.  00:8000                      ;;ETIQUETAS ESTANDAR PARA DAR MÁS CLARIDAD AL CODIGO
      54.  00:8000  (00:0001)           SI			equ		1
      55.  00:8000  (00:0000)           NO			equ		0
      56.  00:8000  (00:0004)           LIMCADENCIA equ		4	;nº de veces que se ejecutará el disparo antes de ejecutar un disparo real (porque cuando se pulsa la tecl dispara 3 ó 4 veces de rápido que va)
      57.  00:8000                      ;hay que estudiar si 3 es un nº mejor
      58.  00:8000                      
      59.  00:8000                      
      60.  00:8000                      
      61.  00:8000                      ;;PALETA DE COLORES DEL MSX
      62.  00:8000  (00:0000)           COLTRASP	equ		0
      63.  00:8000  (00:0001)           COLNEGRO	equ		1
      64.  00:8000  (00:0002)           COLVERDE	equ		2
      65.  00:8000  (00:0003)           COLVERCLA	equ		3
      66.  00:8000  (00:0004)           COLAZULOSC	equ		4
      67.  00:8000  (00:0005)           COLAZULLA	equ		5
      68.  00:8000  (00:0006)           COLROJOOSC	equ		6
      69.  00:8000  (00:0007)           COLCYAN		equ		7
      70.  00:8000  (00:0008)           COLROJO		equ		8
      71.  00:8000  (00:0009)           COLROJOCLA	equ		9
      72.  00:8000  (00:000A)           COLAMAROSC	equ		10
      73.  00:8000  (00:000B)           COLAMARCLA	equ		11
      74.  00:8000  (00:000C)           COLVERDOSC	equ		12
      75.  00:8000  (00:000D)           COLMAGENTA	equ		13
      76.  00:8000  (00:000E)           COLGRIS		equ		14
      77.  00:8000  (00:000F)           COLBLANCO	equ		15
      78.  00:8000                      
      79.  00:8000                      
      80.  00:8000                      
      81.  00:8000                      ;;ETIQUETAS ESPECIFICAS PARA DAR MÁS CLARIDAD AL CODIGO (relacionadas con posiciones en mapa vdp)
      82.  00:8000  (00:02F8)           POSMAPLIN1  equ		#02F8
      83.  00:8000  (00:02D8)           POSMAPLIN2  equ		#02D8
      84.  00:8000  (00:02B8)           POSMAPLIN3  equ		#02B8
      85.  00:8000  (00:0298)           POSMAPLIN4  equ		#0298
      86.  00:8000  (00:0278)           POSMAPLIN5  equ		#0278
      87.  00:8000  (00:0258)           POSMAPLIN6  equ		#0258
      88.  00:8000  (00:0238)           POSMAPLIN7  equ		#0238
      89.  00:8000                      
      90.  00:8000  (00:000D)           POSCARAMAP	equ		#000D
      91.  00:8000  (00:0248)           POSVIDAS	equ		#0248
      92.  00:8000  (00:0011)           POSRELIMAP	equ		#0011
      93.  00:8000  (00:02C8)           POSRELIQ	equ		#02C8
      94.  00:8000  (00:0288)           POSENERG	equ		#0288
      95.  00:8000  (00:02B4)           POSNIVEL	equ		#02B4
      96.  00:8000  (00:0238)           POSMAPA		equ 	#0238
      97.  00:8000                      
      98.  00:8000  (00:01EE)           POSPUERABAJ equ		#01EE
      99.  00:8000  (00:008E)           POSPUERARRI equ		#008E
     100.  00:8000  (00:00FC)           POSPUERDERE equ		#00FC
     101.  00:8000  (00:00E1)           POSPUERIZQU equ		#00E1
     102.  00:8000                      
     103.  00:8000                      ;;POSICIONES DE LAS AYUDAS EN PANTALLA BANCO 1
     104.  00:8000  (00:00A3)           POSORACION	equ		163
     105.  00:8000  (00:00A7)           POSCRUZ		equ		167
     106.  00:8000  (00:00AB)           POSAGUA		equ		171
     107.  00:8000  (00:00AF)           POSARMAD	equ		175
     108.  00:8000  (00:00B3)           POSPLANTA	equ		179
     109.  00:8000  (00:00B7)           POSVIDAEXT	equ		183
     110.  00:8000  (00:00BB)           POSBALLESTA	equ		187
     111.  00:8000                      
     112.  00:8000                      ;;POSICIONES DE LAS AYUDAS EN PANTALLA PIXEL CENTRAL X
     113.  00:8000  (00:0020)           POSORACIONX	equ		32
     114.  00:8000  (00:0040)           POSCRUZX	equ		64
     115.  00:8000  (00:0060)           POSAGUAX	equ		96
     116.  00:8000  (00:0080)           POSARMADX	equ		128
     117.  00:8000  (00:00A0)           POSPLANTAX	equ		160
     118.  00:8000  (00:00C0)           POSVIDAEXTX	equ		192
     119.  00:8000  (00:00E0)           POSBALLESTAX equ	224
     120.  00:8000                      
     121.  00:8000                      ;;POSICIONES DE LAS AYUDAS EN PANTALLA PIXEL CENTRAL Y
     122.  00:8000  (00:0070)           POSAYUDASY	equ		112	;se pone por poner porque las estructuras de ayudas ya se inicializan con este valor
     123.  00:8000                      
     124.  00:8000                      ;;ESTADO ESTRUCTURA
     125.  00:8000  (00:0000)           INACTIVA	equ		0
     126.  00:8000  (00:0001)           ACTIVA		equ		1
     127.  00:8000                      
     128.  00:8000                      ;;POSICIONES DE LAS ANTORCHAS
     129.  00:8000  (00:0088)           POSANTOR1	equ		136
     130.  00:8000  (00:0097)           POSANTOR2	equ		151
     131.  00:8000  (00:00C4)           MAPLLAMA1	equ		196
     132.  00:8000  (00:00C5)           MAPLLAMA2	equ		197
     133.  00:8000  (00:00FF)           RESETLLAMA	equ		255
     134.  00:8000                      
     135.  00:8000                      ;;POSICIONES DE LOS ESQUELETOS
     136.  00:8000  (00:0088)           POSESQUEL1	equ		136
     137.  00:8000  (00:0095)           POSESQUEL2	equ		149
     138.  00:8000  (00:00A9)           POSCALAVE1	equ		169
     139.  00:8000  (00:00B6)           POSCALAVE2	equ		182
     140.  00:8000  (00:0019)           RESETESQUEL	equ		25
     141.  00:8000  (00:0004)           RESETESCENAESQUEL 	equ	4	;hay 4 caras con las que el esqueleto cambia (se ha metido el 0 para facilitar código)
     142.  00:8000                      
     143.  00:8000                      ;;ETIQUETAS ESPECIFICAS PARA DAR MÁS CLARIDAD AL CODIGO (relacionadas con posiciones en en el banco de memoria)
     144.  00:8000  (00:0013)           TILEPROTAM  equ		19		;tile del prota para pintar en mapa
     145.  00:8000  (00:0009)           TILEGRISM	equ		9		;tile gris que representa vacio (por donde el prota va pasando)
     146.  00:8000  (00:0010)           TILEMAPROJO equ		16
     147.  00:8000  (00:000F)           TILEMAPAMAR equ		15
     148.  00:8000  (00:000E)           TILEMAPVERD equ		14
     149.  00:8000                      
     150.  00:8000                      
     151.  00:8000                      ;;ETIQUETAS ESPECIFICAS PARA DAR MÁS CLARIDAD AL CODIGO (generales)
     152.  00:8000  (00:0008)           NMAXVIDREL	equ		8		;el número máximo de vidas y de reliquias es de 8
     153.  00:8000  (00:0007)           NHABNIVEL	equ		7
     154.  00:8000  (00:00F8)           MAXENERGIA  equ		248
     155.  00:8000  (00:00D9)           TILEENERG8  equ		217
     156.  00:8000  (00:00BA)           TILEENERG7  equ		186
     157.  00:8000  (00:009B)           TILEENERG6  equ		155
     158.  00:8000  (00:007C)           TILEENERG5  equ		124
     159.  00:8000  (00:005D)           TILEENERG4  equ		93
     160.  00:8000  (00:003E)           TILEENERG3  equ		62
     161.  00:8000  (00:001F)           TILEENERG2  equ		31
     162.  00:8000  (00:0000)           TILENEGRO	equ		0
     163.  00:8000                      
     164.  00:8000                      ;limites
     165.  00:8000  (00:0000)           LIMPANTIZQ  equ		0
     166.  00:8000  (00:00FF)           LIMPANTDER  equ		255
     167.  00:8000  (00:0000)           LIMPANTARR  equ		0
     168.  00:8000  (00:0080)           LIMPANTABA  equ		128
     169.  00:8000                      
     170.  00:8000                      
     171.  00:8000                      ;matriz de 7x7 empieza en 0, y fila y x col, cuento desde esquina sup izq
     172.  00:8000  (00:0006)           BASEMAPY	equ		6
     173.  00:8000  (00:0003)           BASEMAPX	equ		3
     174.  00:8000                      
     175.  00:8000                      
     176.  00:8000                      
     177.  00:8000                      ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
     178.  00:8000                      ;; CONSTANTES PARA INTERRUPCIONES
     179.  00:8000                      ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
     180.  00:8000  (00:FD9A)           H.KEYI		equ     	#FD9A
     181.  00:8000  (00:FD9F)           H.TIMI	 	equ     	#FD9F
     182.  00:8000                      
     183.  00:8000                      
     184.  00:8000                      ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
     185.  00:8000                      ;; CONSTANTES PARA SONIDO 
     186.  00:8000                      ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
     187.  00:8000                      
     188.  00:8000  (F000)              	map		#f000
     189.  00:8000                      
     190.  00:8000                      ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;PT3 REPLAYER
     191.  00:8000  (00:F000)           PT3_SETUP:		#1	;set bit0 to 1, if you want to play without looping
     192.  00:8000                      					;bit7 is set each time, when loop point is passed
     193.  00:8000  (00:F001)           PT3_MODADDR:	#2
     194.  00:8000  (00:F003)           PT3_CrPsPtr:	#2
     195.  00:8000  (00:F005)           PT3_SAMPTRS:	#2
     196.  00:8000  (00:F007)           PT3_OrnPtrs:	#2
     197.  00:8000  (00:F009)           PT3_PDSP:		#2
     198.  00:8000  (00:F00B)           PT3_CSP:		#2
     199.  00:8000  (00:F00D)           PT3_PSP:		#2
     200.  00:8000  (00:F00F)           PT3_PrNote:		#1
     201.  00:8000  (00:F010)           PT3_PrSlide:	#2
     202.  00:8000  (00:F012)           PT3_AdInPtA:	#2
     203.  00:8000  (00:F014)           PT3_AdInPtB:	#2
     204.  00:8000  (00:F016)           PT3_AdInPtC:	#2
     205.  00:8000  (00:F018)           PT3_LPosPtr:	#2
     206.  00:8000  (00:F01A)           PT3_PatsPtr:	#2
     207.  00:8000  (00:F01C)           PT3_Delay:		#1
     208.  00:8000  (00:F01D)           PT3_AddToEn:	#1
     209.  00:8000  (00:F01E)           PT3_Env_Del:	#1
     210.  00:8000  (00:F01F)           PT3_ESldAdd:	#2
     211.  00:8000  (00:F021)           PT3_NTL3:		#2	; AND A / NOP (note table creator)
     212.  00:8000                      
     213.  00:8000  (00:F023)           VARS:			#0
     214.  00:8000                      
     215.  00:8000  (00:F023)           ChanA:			#29			;CHNPRM_Size
     216.  00:8000  (00:F040)           ChanB:			#29			;CHNPRM_Size
     217.  00:8000  (00:F05D)           ChanC:			#29			;CHNPRM_Size
     218.  00:8000                      
     219.  00:8000                      ;GlobalVars
     220.  00:8000  (00:F07A)           DelyCnt:		#1
     221.  00:8000  (00:F07B)           CurESld:		#2
     222.  00:8000  (00:F07D)           CurEDel:		#1
     223.  00:8000  (00:F07E)           Ns_Base_AddToNs:	#0
     224.  00:8000  (00:F07E)           Ns_Base:		#1
     225.  00:8000  (00:F07F)           AddToNs:		#1
     226.  00:8000                      
     227.  00:8000  (00:F080)           NT_:			#192	; Puntero a/tabla de frecuencias
     228.  00:8000                      
     229.  00:8000  (00:F140)           AYREGS:			#0
     230.  00:8000  (00:F140)           VT_:			#14
     231.  00:8000  (00:F14E)           EnvBase:		#2
     232.  00:8000  (00:F150)           VAR0END:		#0
     233.  00:8000                      
     234.  00:8000  (00:F150)           T1_:			#0		
     235.  00:8000  (00:F150)           T_NEW_1:		#0
     236.  00:8000  (00:F150)           T_OLD_1:		#24
     237.  00:8000  (00:F168)           T_OLD_2:		#24
     238.  00:8000  (00:F180)           T_NEW_3:		#0
     239.  00:8000  (00:F180)           T_OLD_3:		#2
     240.  00:8000  (00:F182)           T_OLD_0:		#0
     241.  00:8000  (00:F182)           T_NEW_0:		#24
     242.  00:8000  (00:F19A)           T_NEW_2:		#166
     243.  00:8000                      ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;PT3 REPLAYER END
     244.  00:8000                      
     245.  00:8000                      ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ayFX REPLAYER 
     246.  00:8000  (00:F240)           ayFX_MODE:		#1			; ayFX mode
     247.  00:8000  (00:F241)           ayFX_BANK:		#2			; Current ayFX Bank
     248.  00:8000  (00:F243)           ayFX_PRIORITY:	#1			; Current ayFX stream priotity
     249.  00:8000  (00:F244)           ayFX_POINTER:	#2			; Pointer to the current ayFX stream
     250.  00:8000  (00:F246)           ayFX_TONE:		#2			; Current tone of the ayFX stream
     251.  00:8000  (00:F248)           ayFX_NOISE:		#1			; Current noise of the ayFX stream
     252.  00:8000  (00:F249)           ayFX_VOLUME:	#1			; Current volume of the ayFX stream
     253.  00:8000  (00:F24A)           ayFX_CHANNEL:	#1			; PSG channel to play the ayFX stream
     254.  00:8000                      
     255.  00:8000                      	;IF (AYFXRELATIVE == 1 ) 
     256.  00:8000                      ;ayFX_VT:	ds	2			; ayFX relative volume table pointer
     257.  00:8000                      	;ENDIF
     258.  00:8000                      ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ayFX REPLAYER END
     259.  00:8000                      
     260.  00:8000                      
     261.  00:8000                      
       7   00:8000                      
       8   00:8000                      ;;=====================================================
       9   00:8000                      ;;DEFINICIÓN DE CABECERA DE ARCHIVO BIN
      10   00:8000                      ;;=====================================================		
      11   00:8000                      	include "cabecerabin.asm"
       1.  00:8000                      ;;=====================================================
       2.  00:8000                      ;; FICHERO cabecera.asm
       3.  00:8000                      ;;=====================================================
       4.  00:8000                      
       5.  00:8000                      ;;CABECERA FICHERO BIN
       6.  00:8000  FE                  	DB	#FE
       7.  00:8001  00 80               	DW	START
       8.  00:8003  A6 BB               	DW	END
       9.  00:8005  00 80               	DW	START
      10.  00:8007                      
      11.  00:8007                      ;;INICIO CÓDIGO PROGRAMA	
      12.  00:8007                      	ORG	#8000
      13.  00:8000                      	
      12   00:8000                      	
      13   00:8000                      START:	
      14   00:8000                      	;inicializa pantalla y entonrno
      15   00:8000  CD 49 81            	CALL	sub_preparapantalla			;screen 2,2 sin click al pulsar tecla y color 16,1,1
      16   00:8003                      	
      17   00:8003                      	;inicializa variables para parametrizar funciones y que lo que se muestre sea variable (nº vidas, mapa, puertas, pantalla, etc...)
      18   00:8003  CD 46 80            	CALL	inicializa_variables_pruebas
      19   00:8006                      	
      20   00:8006                      	;inicializa los niveles por partida
      21   00:8006                      ;	CALL	inicializa_niveles			;no es necesario parametrizarlo según el nivel del usuario ya que se cargan todos
      22   00:8006                      ;************** quitarlo cuando el anejo de la variable habitacion_recorrida esté correcto y depurado
      23   00:8006                      
      24   00:8006                      
      25   00:8006                      	
      26   00:8006                      	;inicializa las estructuras de forma particular según ayuDa pero sin poner valores de posición
      27   00:8006  CD 8B 98            	CALL	inicializa_ayudas
      28   00:8009                      	
      29   00:8009                      	;inicializa las estructuras de las antorchas y esqueletos
      30   00:8009  CD FB 84            	CALL	inicializa_antorchas
      31   00:800C  CD 1D 85            	CALL	inicializa_esqueletos
      32   00:800F                      	
      33   00:800F                      	;pinta la pantalla (la primera o algunas especiales se pintan completamente)
      34   00:800F  CD 6A 81            	CALL	pinta_pantalla_completa 
      35   00:8012                      	
      36   00:8012                      	;carga sprites en memoria (SE HA RETRASADO HASTA PARAMETRIZAR LA CARGA DE PANTALLAS)
      37   00:8012  CD 72 86            	CALL 	carga_patrones_sprites_nivel
      38   00:8015                      	
      39   00:8015                      	;funciones que modificarian el marcador si se produce un evento cuando toque y cuando se pinta la pantalla ya se mira
      40   00:8015                      	;una variable para ver si el array hay que actualizarlo en pantalla o no
      41   00:8015  CD AA 82            	CALL	pinta_vidas
      42   00:8018  CD B9 82            	CALL 	pinta_reliquias
      43   00:801B  CD C8 82            	CALL	pinta_nivel
      44   00:801E  CD 48 83            	CALL	borra_mapa
      45   00:8021  CD 9F 83            	CALL	pinta_puertas
      46   00:8024                      
      47   00:8024  3E 13               	LD		 A, TILEPROTAM
      48   00:8026  32 5F A7            	LD		(elemento_pintar_mapa), A
      49   00:8029  CD 29 84            	CALL	posiciona_en_mapa		;se le pasa elemento_pintar_mapa (tile del prota) está el prota y prota.posx y posy
      50   00:802C                      		
      51   00:802C  CD 29 99            	CALL	pinta_ayudas_habitacion
      52   00:802F                      	
      53   00:802F  CD 3F 85            	CALL	pinta_extra_fondo
      54   00:8032                      	
      55   00:8032                      	;CALL	terminada_habitacion_recorrida ;para cuando se maten todos los enemigos de la habitación
      56   00:8032                      
      57   00:8032                      	;incializacion de replayer con interrupciones
      58   00:8032                      ;	CALL	inicializa_replayer_efectos_interrupciones
      59   00:8032                      
      60   00:8032                      loop_principal:
      61   00:8032  76                  	HALT							;espera VBLANK y sincroniza
      62   00:8033                      	
      63   00:8033  CD 83 86            	CALL	render_sprites			;actualiza array de sprites y los pinta en pantalla
      64   00:8036                      	
      65   00:8036  CD 39 83            	CALL	pinta_energia			;pinta la energia en pantalla
      66   00:8039                      	
      67   00:8039  CD B6 85            	CALL	actualiza_elementos_fondo
      68   00:803C                      
      69   00:803C  CD C6 86            	CALL	check_player			;MIRA EL CONTROL Y APLICA LA LOGICA DE MOVIMIENTO DEL PROTAGONISTA
      70   00:803F                      	
      71   00:803F  CD 45 80            	CALL	check_colisiones		;revisa las colisiones con puertas, ayudas y enemigos
      72   00:8042                      	
      73   00:8042  C3 32 80            	JP		loop_principal
      74   00:8045                      fin_programa_principal:
      75   00:8045                      	;RET
      76   00:8045                      
      77   00:8045                      
      78   00:8045                      
      79   00:8045                      
      80   00:8045                      check_colisiones:
      81   00:8045                      	;pantalla limpia?
      82   00:8045                      	
      83   00:8045                      	;SI 
      84   00:8045                      	;recorre puertas y sale
      85   00:8045                      	;NO 
      86   00:8045                      	;recorre ayudas
      87   00:8045                      	;recorre enemigos
      88   00:8045                      fin_check_colisiones:
      89   00:8045  C9                  	RET
      90   00:8046                      
      91   00:8046                      
      92   00:8046                      
      93   00:8046                      
      94   00:8046                      
      95   00:8046                      ;;*******************************************************************
      96   00:8046                      ; sólo para hacer pruebas y pintar la parte de las vidas y demás
      97   00:8046                      inicializa_variables_pruebas:
      98   00:8046  3E 04               	LD		 A, 4
      99   00:8048  32 3B A7            	LD		(prota_vidas),A
     100   00:804B                      
     101   00:804B  3E 04               	LD		 A, 4
     102   00:804D  32 3C A7            	LD		(prota_reliquias), A
     103   00:8050                      
     104   00:8050  3E 64               	LD		 A, 100
     105   00:8052  32 3F A7            	LD		(prota_energia), A
     106   00:8055                      
     107   00:8055                      	;ubico al prota dentro del nivel para obtener luego las habitaciones y enemigos que aparecerán
     108   00:8055                      	;será igual la posición inicial en todos los niveles
     109   00:8055                      	
     110   00:8055  3E 00               	LD		 A, 0				;los niveles (matrices) son 7 del 0 al 6
     111   00:8057  32 3A A7            	LD		(prota_nivel), A	;nivel empieza en 0 para usar las posiciones ascii
     112   00:805A                      
     113   00:805A  3E 00               	LD		 A, 0				;los subniveles (filas) son 7 del 0 al 6
     114   00:805C  32 3E A7            	LD		(prota_pos_mapy), A	;pos Y dentro del nivel (se empieza en 0)
     115   00:805F                      
     116   00:805F  3E 02               	LD		 A, 2				;columnas 7: del 0 al 6
     117   00:8061  32 3D A7            	LD		(prota_pos_mapx), A	;pos X dentro del nivel (se empieza en 0)
     118   00:8064                      	
     119   00:8064  AF                  	XOR		 A
     120   00:8065  32 2F A7            	LD		(prota.cadencia), A
     121   00:8068                      fin_inicializa_variables_pruebas:
     122   00:8068  C9                  	RET
     123   00:8069                      ;;************************************************************************
     124   00:8069                      
     125   00:8069                      
     126   00:8069                      
     127   00:8069                      
     128   00:8069                      
     129   00:8069                      
     130   00:8069                      
     131   00:8069                      
     132   00:8069                      
     133   00:8069                      ;;=====================================================
     134   00:8069                      ;;DEFINICIÓN DE SUBRUTINAS
     135   00:8069                      ;;=====================================================
     136   00:8069                      	include "subrutinas.asm"
       1.  00:8069                      ;;=====================================================
       2.  00:8069                      ;;DEFINICIÓN DE SUBRUTINAS
       3.  00:8069                      ;;=====================================================	
       4.  00:8069                      
       5.  00:8069                      
       6.  00:8069                      ;;=====================================================
       7.  00:8069                      ;;INICIALIZA_NIVELES
       8.  00:8069                      ;;=====================================================	
       9.  00:8069                      ; función: 	copia la plantilla de niveles (habitaciones_plantilla) en los niveles de trabajo para el juego (habitaciones_juego)
      10.  00:8069                      ; entrada: 	habitaciones_plantilla
      11.  00:8069                      ; salida: 	habitaciones_juego
      12.  00:8069                      ; toca: 	A, B, HL, DE
      13.  00:8069                      inicializa_niveles:
      14.  00:8069  AF                  		XOR		 A
      15.  00:806A  06 31               		LD		 B,   49				;7 filas por 7 niveles menos el primero que lo hago fuera del buble
      16.  00:806C  21 11 A4            		LD		HL,   habitaciones_juego;tambíen puntero a la primera fila del primer nivel
      17.  00:806F  11 0E 00            		LD		DE,   14				;14 bytes de habitaciones y 2 extras
      18.  00:8072  19                  		ADD		HL,   DE				;puntero al primero de los bytes extras
      19.  00:8073  77                  		LD		(HL), A					;0000000Xb si X=0 no se ha pasado por allí y si es 1 sí
      20.  00:8074  11 10 00            		LD		DE,   16				;desde las col 15 de una fila a la siguiente
      21.  00:8077                      .bucle_borra_hab:
      22.  00:8077  19                  		ADD		HL,   DE				;situo el puntero 16 bytes siguientes
      23.  00:8078  77                  		LD		(HL), A					;pongo su contenido a 0
      24.  00:8079  10 FC               		DJNZ	.bucle_borra_hab		;repito para poner todos a 0
      25.  00:807B                      fin_iniciliza_niveles:
      26.  00:807B  C9                  		RET
      27.  00:807C                      
      28.  00:807C                      
      29.  00:807C                      ;;=====================================================
      30.  00:807C                      ;;ACTUALIZA_MARCADOR_VIDAS
      31.  00:807C                      ;;=====================================================	
      32.  00:807C                      ; función:  actualiza el buffer de vidas
      33.  00:807C                      ; entrada: 	prota_vidas
      34.  00:807C                      ; salida: 	array_aux_vidas
      35.  00:807C                      ; toca:		A,B,HL
      36.  00:807C                      actualiza_marcador_vidas:
      37.  00:807C                      	;para no andar restando pongo todos los huecos a negro y luego en otro bucle las caras
      38.  00:807C                      	;1-pinto todo en blanco
      39.  00:807C  21 40 A7            	LD		HL,array_aux_vidas
      40.  00:807F  06 08               	LD		 B,NMAXVIDREL
      41.  00:8081                      loop_marcador_caras_negro:	;asignar espacios en negro
      42.  00:8081  36 00               	LD		(HL),0			;0 posición mapa tiles para nada (es transparente pero el fondo es negro)
      43.  00:8083  23                  	INC		HL
      44.  00:8084  10 FB               	DJNZ	loop_marcador_caras_negro
      45.  00:8086                      fin_loop_marcador_caras_negro:
      46.  00:8086                      	;2-pinto las caras según el n de vidas
      47.  00:8086  3A 3B A7            	LD		 A, (prota_vidas)
      48.  00:8089  B7                  	OR		 A
      49.  00:808A  C8                  	RET 	 Z
      50.  00:808B  47                  	LD		 B, A
      51.  00:808C  21 40 A7            	LD		HL, array_aux_vidas
      52.  00:808F                      loop_marcador_caras: ;asignar caras
      53.  00:808F  36 0D               	LD		(HL), POSCARAMAP	;13 posición mapa tiles para cara
      54.  00:8091  23                  	INC		HL
      55.  00:8092  10 FB               	DJNZ	loop_marcador_caras
      56.  00:8094                      fin_loop_marcador_caras:
      57.  00:8094                      fin_actualiza_marcador_vidas:
      58.  00:8094  C9                  	RET
      59.  00:8095                      
      60.  00:8095                      
      61.  00:8095                      ;;=====================================================
      62.  00:8095                      ;;ACTUALIZA_BUFFER_RELIQUIAS
      63.  00:8095                      ;;=====================================================	
      64.  00:8095                      ; función: 	actualiza buffer de reliquias
      65.  00:8095                      ; entrada: 	prota_reliquias
      66.  00:8095                      ; salida: 	array_aux_reliquias
      67.  00:8095                      ; toca:		A,B,HL
      68.  00:8095                      actualiza_buffer_reliquias:	
      69.  00:8095                      	;para no andar restando pongo todos los huecos a negro y luego en otro bucle las reliquias
      70.  00:8095                      	;1-pinto todo en blanco
      71.  00:8095  21 48 A7            	LD		HL, array_aux_reliquias
      72.  00:8098  06 08               	LD		 B, NMAXVIDREL
      73.  00:809A  AF                  	XOR		 A
      74.  00:809B                      loop_buffer_reliquias_negro:	;asignar espacios en negro
      75.  00:809B  77                  	LD		(HL), A			;0 posición mapa tiles para nada (es transparente pero el fondo es negro)
      76.  00:809C  23                  	INC		HL
      77.  00:809D  10 FC               	DJNZ	loop_buffer_reliquias_negro
      78.  00:809F                      
      79.  00:809F                      	;2-pinto las cruces según el n de reliquias
      80.  00:809F  21 48 A7            	LD		HL, array_aux_reliquias
      81.  00:80A2  3A 3C A7            	LD		 A, (prota_reliquias)
      82.  00:80A5  B7                  	OR		 A
      83.  00:80A6  C8                  	RET		 Z
      84.  00:80A7  47                  	LD		 B, A
      85.  00:80A8                      loop_buffer_reliquias: ;asignar reliquias
      86.  00:80A8  36 11               	LD		(HL), POSRELIMAP	;17 posición mapa tiles para reliquia
      87.  00:80AA  23                  	INC		HL
      88.  00:80AB  10 FB               	DJNZ	loop_buffer_reliquias
      89.  00:80AD                      fin_actualiza_buffer_reliquias:
      90.  00:80AD  C9                  	RET
      91.  00:80AE                      
      92.  00:80AE                      
      93.  00:80AE                      
      94.  00:80AE                      ;;=====================================================
      95.  00:80AE                      ;;LOCALIZA_INFO_HABITACION
      96.  00:80AE                      ;;=====================================================	
      97.  00:80AE                      ; función: 	busca las puertas que hay que pintar egún la posición del usuario y las pone en habitacion_actual
      98.  00:80AE                      ; entrada: 	prota.pos_mapy, prota.pos_mapx, prota_nivel habitaciones_juego
      99.  00:80AE                      ; salida: 	habitacion_actual
     100.  00:80AE                      ; toca:		todo
     101.  00:80AE                      ;ejemplo: nivel 4, posy 5 y posx 3
     102.  00:80AE                      ;3 + 5 x 8 + 4 x 49
     103.  00:80AE                      localiza_info_habitacion:
     104.  00:80AE                      ;primera posición: me coloco en la columna correcta
     105.  00:80AE  21 11 A4            	LD		HL, habitaciones_juego
     106.  00:80B1                      .situo_columna:	
     107.  00:80B1  3A 3D A7            	LD		 A, (prota_pos_mapx)
     108.  00:80B4  CB 27               	SLA		 A				;multiplico por dos ya que cada habitación va de dos en dos bytes
     109.  00:80B6  06 00               	LD		 B, 0
     110.  00:80B8  4F                  	LD		 C, A
     111.  00:80B9  09                  	ADD 	HL, BC			;sumo a la posición 0 la columnax2 en la que situarme
     112.  00:80BA                      	
     113.  00:80BA                      .situo_fila:
     114.  00:80BA  3A 3E A7            	LD		A, (prota_pos_mapy)
     115.  00:80BD  B7                  	OR	 	A
     116.  00:80BE  CA CB 80            	JP		Z, .situo_nivel	;si la fila es 0 no es necesario seguir operando en fila
     117.  00:80C1                      	
     118.  00:80C1  47                  	LD		B, A
     119.  00:80C2  AF                  	XOR		A
     120.  00:80C3                      .loop_suma_fila:
     121.  00:80C3  C6 10               	ADD		16				;cada fila tiene 16 bytes
     122.  00:80C5  10 FC               	DJNZ	.loop_suma_fila
     123.  00:80C7                      	
     124.  00:80C7  06 00               	LD		 B, 0
     125.  00:80C9  4F                  	LD		 C, A
     126.  00:80CA                      
     127.  00:80CA  09                  	ADD 	HL, BC			;sumo a la columna 16 x filas para situarme en la fila correcta
     128.  00:80CB                      
     129.  00:80CB                      .situo_nivel:
     130.  00:80CB  3A 3A A7            	LD		 A, (prota_nivel)
     131.  00:80CE  B7                  	OR	 	 A
     132.  00:80CF  CA DF 80            	JP		 Z, .actualiza_variable_habitacion	;si el nivel es 0 al pasar por las anterirores ya estoy situado actualizo la variable y termino
     133.  00:80D2                      	
     134.  00:80D2  E5                  	PUSH	HL				;guardo el resultado intermedio
     135.  00:80D3                      	
     136.  00:80D3  47                  	LD		 B, A			;preparo la varible del bucle
     137.  00:80D4  11 70 00            	LD		DE, 112			;112 = 16x42 son los bytes de cada matriz-nivel
     138.  00:80D7  21 00 00            	LD		HL, 0
     139.  00:80DA                      .loop_suma_nivel:
     140.  00:80DA  19                  	ADD		HL, DE
     141.  00:80DB  10 FD               	DJNZ	.loop_suma_nivel
     142.  00:80DD                      	
     143.  00:80DD  D1                  	POP		DE				;devuelvo el resultado intermedio en DE que ya no lo necesito
     144.  00:80DE                      	
     145.  00:80DE  19                  	ADD		HL, DE			;sumo el resultado del nivel al resultado intermedio anterior
     146.  00:80DF                      	
     147.  00:80DF                      .actualiza_variable_habitacion
     148.  00:80DF                      	;actualizo la variable habitacion_actual
     149.  00:80DF  7E                  	LD		 A, (HL)
     150.  00:80E0  32 06 A4            	LD		(habitacion_actual), A
     151.  00:80E3                      	
     152.  00:80E3                      	;actualizo la variable habitacion_extras
     153.  00:80E3  23                  	INC		HL				;el byte de los extras está antes de donde se especifican las puertas
     154.  00:80E4  7E                  	LD		 A, (HL)
     155.  00:80E5  32 07 A4            	LD		(habitacion_extras), A
     156.  00:80E8                      	
     157.  00:80E8                      	;guardo puntero a habitacion_actual
     158.  00:80E8  2B                  	DEC		HL
     159.  00:80E9  E5                  	PUSH	HL
     160.  00:80EA                      	
     161.  00:80EA                      	;actualizo la variable habitacion_recorrida
     162.  00:80EA  3A 3D A7            	LD		 A, (prota_pos_mapx)
     163.  00:80ED  CB 27               	SLA		 A	;x 2
     164.  00:80EF  47                  	LD		 B, A
     165.  00:80F0  3E 0E               	LD		 A, 14
     166.  00:80F2  90                  	SUB		 B
     167.  00:80F3  47                  	LD		 B, A
     168.  00:80F4                      	
     169.  00:80F4                      	;en B tengo cuántos bytes tengo que incrementar el puntero HL para llegar al byte 15 de la fila del array (empieza en 0)
     170.  00:80F4  E1                  	POP		HL	;recupero HL
     171.  00:80F5  CD 32 81            	CALL	suma_A_HL
     172.  00:80F8                      	
     173.  00:80F8  DD 21 08 A4         	LD		IX, habitacion_recorrida
     174.  00:80FC  DD 74 00            	LD		(IX), H
     175.  00:80FF  DD 75 01            	LD		(IX + 1), L
     176.  00:8102                      fin_localiza_info_habitacion:
     177.  00:8102  C9                  	RET
     178.  00:8103                      	
     179.  00:8103                      
     180.  00:8103                      ;;=====================================================
     181.  00:8103                      ;;TERMINADA_HABIACION_RECORRIDA
     182.  00:8103                      ;;=====================================================	
     183.  00:8103                      ; función: 	usando la variable prota_pos_mapx pone un 1 a donde apunta habitacion_recorrida (el array... byte 14 de 
     184.  00:8103                      ;			habitaciones recorridas en esa fila) para ver si uestra enemigos o no y permita pasar por puertas
     185.  00:8103                      ; entrada: 	prota_pos_mapx, habitacion_recorrida
     186.  00:8103                      ; salida: 	habitacion_recorrida (byte 14 de la fila de habitaciones) actualizada con OR A (en A la habitacion)
     187.  00:8103                      ; toca:		IX
     188.  00:8103                      terminada_habitacion_recorrida:
     189.  00:8103  F5                  	PUSH	AF
     190.  00:8104  C5                  	PUSH	BC
     191.  00:8105  E5                  	PUSH	HL
     192.  00:8106                      	
     193.  00:8106                      	;tomamos el valor antiguo de habitación recorrida y lo ponemos en B
     194.  00:8106  DD 21 08 A4         	LD		IX, habitacion_recorrida
     195.  00:810A  DD 66 00            	LD		 H, (IX)
     196.  00:810D  DD 6E 01            	LD		 L, (IX + 1)
     197.  00:8110  7E                  	LD		 A, (HL)
     198.  00:8111  47                  	LD		 B, A
     199.  00:8112                      	
     200.  00:8112                      	;ponemos A a 0 con un 1 en el bit de la habitación que hemos terminado
     201.  00:8112  21 0A A4            	LD		HL, habitacion_terminada
     202.  00:8115  3A 3D A7            	LD		 A, (prota_pos_mapx)
     203.  00:8118  CD 32 81            	CALL	suma_A_HL
     204.  00:811B  7E                  	LD		 A, (HL)
     205.  00:811C                      	
     206.  00:811C                      	;marcamos la habitación como terminada
     207.  00:811C  B0                  	OR		 B
     208.  00:811D                      	
     209.  00:811D                      	;actualizamos la habitación recorrida
     210.  00:811D  DD 21 08 A4         	LD		IX, habitacion_recorrida
     211.  00:8121  DD 66 00            	LD		 H, (IX)
     212.  00:8124  DD 6E 01            	LD		 L, (IX + 1)
     213.  00:8127  77                  	LD		(HL), A	
     214.  00:8128                      	
     215.  00:8128  F1                  	POP		AF
     216.  00:8129  C1                  	POP		BC
     217.  00:812A  E1                  	POP		HL
     218.  00:812B                      fin_terminada_habitacion_recorrida:
     219.  00:812B  C9                  	RET
     220.  00:812C                      
     221.  00:812C                      
     222.  00:812C                      	
     223.  00:812C                      	
     224.  00:812C                      	
     225.  00:812C                      	
     226.  00:812C                      	
     227.  00:812C                      	
     228.  00:812C                      	
     229.  00:812C                      	
     230.  00:812C                      	
     231.  00:812C                      	
     232.  00:812C                      	
     233.  00:812C                      	
     234.  00:812C                      	
     235.  00:812C                      	
     236.  00:812C                      	
     237.  00:812C                      	
     238.  00:812C                      	
     137   00:812C                      	
     138   00:812C                      	include "subr_general.asm"
       1.  00:812C                      ;;=====================================================
       2.  00:812C                      ;;DEFINICIÓN DE SUBRUTINAS GENERALES USABLES PARA CUALQUIER PROYECTO
       3.  00:812C                      ;;=====================================================	
       4.  00:812C                      
       5.  00:812C                      ;;=====================================================
       6.  00:812C                      ;;SUMA_A_BC
       7.  00:812C                      ;;=====================================================	
       8.  00:812C                      ; función: 	suma A a BC por si da más de 255
       9.  00:812C                      ; entrada: 	A, BC
      10.  00:812C                      ; salida: 	A + BC
      11.  00:812C                      ; toca:		A, BC
      12.  00:812C                      suma_A_BC:
      13.  00:812C  81                  	ADD		 C
      14.  00:812D  4F                  	LD		 C, A
      15.  00:812E  88                  	ADC		 B
      16.  00:812F  91                  	SUB		 C
      17.  00:8130  47                  	LD		 B, A
      18.  00:8131                      fin_suma_A_BC:
      19.  00:8131  C9                  	RET
      20.  00:8132                      	
      21.  00:8132                      ;;=====================================================
      22.  00:8132                      ;;SUMA_A_HL
      23.  00:8132                      ;;=====================================================	
      24.  00:8132                      ; función: 	suma A a BC por si da más de 255
      25.  00:8132                      ; entrada: 	A, HL
      26.  00:8132                      ; salida: 	A + HL
      27.  00:8132                      ; toca:		A, HL
      28.  00:8132                      suma_A_HL:
      29.  00:8132  85                  	ADD		 L
      30.  00:8133  6F                  	LD		 L, A
      31.  00:8134  8C                  	ADC		 H
      32.  00:8135  95                  	SUB		 L
      33.  00:8136  67                  	LD		 H, A
      34.  00:8137                      fin_suma_A_HL:
      35.  00:8137  C9                  	RET
     139   00:8138                      	
     140   00:8138                      	include "subr_pintapantalla.asm"
       1.  00:8138                      ;;=====================================================
       2.  00:8138                      ;;DEFINICIÓN DE SUBRUTINAS
       3.  00:8138                      ;;=====================================================	
       4.  00:8138                      ;relacionadas con pintado en pantalla (y no sprites)
       5.  00:8138                      
       6.  00:8138                      
       7.  00:8138                      ;;=====================================================
       8.  00:8138                      ;;COLOR_PANTALLA
       9.  00:8138                      ;;=====================================================	
      10.  00:8138                      ; función: 	el equivalente en basic a color 15,1,1
      11.  00:8138                      ; entrada: 	HL	que apunta a un array de bytes con 3 bytes FORCLR, BAKCLR y BDRCLR
      12.  00:8138                      ; salida: 	-
      13.  00:8138                      ; toca: 	todo
      14.  00:8138                      color_pantalla:
      15.  00:8138  7E                  	LD		 A, (HL)			;FORCLR 
      16.  00:8139  32 E9 F3            	LD 		(FORCLR),A
      17.  00:813C  23                  	INC		HL
      18.  00:813D                      	
      19.  00:813D  7E                  	LD		 A, (HL)			;BAKCLR
      20.  00:813E  32 EA F3            	LD 		(BAKCLR),A
      21.  00:8141  23                  	INC		HL
      22.  00:8142                      	
      23.  00:8142  7E                  	LD		 A, (HL)
      24.  00:8143  32 EB F3            	LD 		(BDRCLR),A			;BDRCLR
      25.  00:8146  C3 62 00            	JP		CHGCLR 
      26.  00:8149                      fin_color_pantalla:
      27.  00:8149                      
      28.  00:8149                      
      29.  00:8149                      ;;=====================================================
      30.  00:8149                      ;;PREPARAPANTALLA
      31.  00:8149                      ;;=====================================================	
      32.  00:8149                      ; función: elimina clic cuando se pulsa tecla, cls, screen 2,2
      33.  00:8149                      ; entrada: -
      34.  00:8149                      ; salida: -
      35.  00:8149                      ; toca: si no son todos los regristros, casi todos
      36.  00:8149                      sub_preparapantalla:
      37.  00:8149                      	;toca A y Z
      38.  00:8149                      elimina_clic;
      39.  00:8149  AF                  	XOR		 A
      40.  00:814A  32 DB F3            	LD		(CLIKSW),A
      41.  00:814D                      fin_elimina_clic:
      42.  00:814D                      
      43.  00:814D                      	;toca A
      44.  00:814D                      limpia_pantalla:
      45.  00:814D  AF                  	XOR		 A
      46.  00:814E  CD C3 00            	CALL 	CLS
      47.  00:8151                      fin_limpia_pantalla:
      48.  00:8151                      
      49.  00:8151                      	;toca A y direcciones #F3E9/#F3EA/#F3EB, poner en HL array con 3 valores
      50.  00:8151  21 21 A7            	LD		HL, color_base
      51.  00:8154  CD 38 81            	CALL	color_pantalla
      52.  00:8157                      	
      53.  00:8157                      	;cambiamos a SCREEN 2,2 del BASIC
      54.  00:8157                      	;toca A
      55.  00:8157                      screen2:
      56.  00:8157  3E 02               	LD		 A, 2
      57.  00:8159  CD 5F 00            	CALL	CHGMOD			;selecciona screen 2
      58.  00:815C                      sprites_16_16:
      59.  00:815C  3A E0 F3            	LD		 A, (RG1SAV)
      60.  00:815F  F6 02               	OR		00000010b		;fuerza sprites de 16x16
      61.  00:8161  32 E0 F3            	LD		(RG1SAV), A		;no lo guardamos en la copia de variables del sistema
      62.  00:8164  47                  	LD		 B, A
      63.  00:8165  0E 01               	LD		 C, 1
      64.  00:8167  C3 47 00            	JP		WRTVDP			;opción alternativa de escribir las tres lineas siguientes
      65.  00:816A                      fin_sub_preparapantalla:
      66.  00:816A                      	
      67.  00:816A                      
      68.  00:816A                      ;;=====================================================
      69.  00:816A                      ;;PINTA_PANTALLA_COMPLETA
      70.  00:816A                      ;;=====================================================	
      71.  00:816A                      ; función: pinta el escenario, las 3 partes
      72.  00:816A                      ; entrada: -
      73.  00:816A                      ; salida: -
      74.  00:816A                      ; toca: si no son todos los regristros, casi todos
      75.  00:816A                      pinta_pantalla_completa:
      76.  00:816A  CD 71 81            	CALL 	pinta_parte_superior_pantalla
      77.  00:816D                      	
      78.  00:816D  CD 8F 82            	CALL 	pinta_parte_inferior_pantalla	
      79.  00:8170                      fin_pinta_pantalla_completa:
      80.  00:8170  C9                  	RET
      81.  00:8171                      
      82.  00:8171                      
      83.  00:8171                      ;;=====================================================
      84.  00:8171                      ;;PINTA_PARTE_SUPERIOR_PANTALLA
      85.  00:8171                      ;;=====================================================	
      86.  00:8171                      ; función: pinta el escenario, los dos bancos superiores
      87.  00:8171                      ; entrada: -
      88.  00:8171                      ; salida: -
      89.  00:8171                      ; toca: si no son todos los regristros, casi todos
      90.  00:8171                      pinta_parte_superior_pantalla:
      91.  00:8171  3A 3A A7            	LD		 A, (prota_nivel)
      92.  00:8174  CA A2 81            	JP		 Z, .carga_nivel_0
      93.  00:8177  3D                  	DEC		 A
      94.  00:8178  3A 3A A7            	LD		 A, (prota_nivel)
      95.  00:817B  CA BD 81            	JP		 Z, .carga_nivel_1
      96.  00:817E  3D                  	DEC		 A
      97.  00:817F  3A 3A A7            	LD		 A, (prota_nivel)
      98.  00:8182  CA D8 81            	JP		 Z, .carga_nivel_2
      99.  00:8185  3D                  	DEC		 A
     100.  00:8186  3A 3A A7            	LD		 A, (prota_nivel)
     101.  00:8189  CA F3 81            	JP		 Z, .carga_nivel_3
     102.  00:818C  3D                  	DEC		 A
     103.  00:818D  3A 3A A7            	LD		 A, (prota_nivel)
     104.  00:8190  CA 0E 82            	JP		 Z, .carga_nivel_4
     105.  00:8193  3D                  	DEC		 A
     106.  00:8194  3A 3A A7            	LD		 A, (prota_nivel)
     107.  00:8197  CA 29 82            	JP		 Z, .carga_nivel_5
     108.  00:819A  3D                  	DEC		 A
     109.  00:819B  3A 3A A7            	LD		 A, (prota_nivel)
     110.  00:819E  CA 44 82            	JP		 Z, .carga_nivel_6
     111.  00:81A1  3D                  	DEC		 A
     112.  00:81A2                      	
     113.  00:81A2                      .carga_nivel_0:
     114.  00:81A2  21 E2 A9            	LD		HL, tiles_patrones_nivel0
     115.  00:81A5  22 89 82            	LD		(tiles_patrones), HL
     116.  00:81A8  21 FF AB            	LD		HL, tiles_color_nivel0
     117.  00:81AB  22 8B 82            	LD		(tiles_colores), HL
     118.  00:81AE  21 E2 A9            	LD		HL, tiles_patrones_nivel0
     119.  00:81B1  22 89 82            	LD		(tiles_patrones), HL
     120.  00:81B4  21 68 AC            	LD		HL, tiles_mapa_nivel0
     121.  00:81B7  22 8D 82            	LD		(tiles_mapa), HL
     122.  00:81BA  C3 5C 82            	JP		.fin_carga_niveles
     123.  00:81BD                      
     124.  00:81BD                      .carga_nivel_1:
     125.  00:81BD  21 9D AC            	LD		HL, tiles_patrones_nivel1
     126.  00:81C0  22 89 82            	LD		(tiles_patrones), HL
     127.  00:81C3  21 52 AE            	LD		HL, tiles_color_nivel1
     128.  00:81C6  22 8B 82            	LD		(tiles_colores), HL
     129.  00:81C9  21 9D AC            	LD		HL, tiles_patrones_nivel1
     130.  00:81CC  22 89 82            	LD		(tiles_patrones), HL
     131.  00:81CF  21 99 AE            	LD		HL, tiles_mapa_nivel1
     132.  00:81D2  22 8D 82            	LD		(tiles_mapa), HL
     133.  00:81D5  C3 5C 82            	JP		.fin_carga_niveles
     134.  00:81D8                      	
     135.  00:81D8                      .carga_nivel_2:
     136.  00:81D8  21 CE AE            	LD		HL, tiles_patrones_nivel2
     137.  00:81DB  22 89 82            	LD		(tiles_patrones), HL
     138.  00:81DE  21 83 B0            	LD		HL, tiles_color_nivel2
     139.  00:81E1  22 8B 82            	LD		(tiles_colores), HL
     140.  00:81E4  21 CE AE            	LD		HL, tiles_patrones_nivel2
     141.  00:81E7  22 89 82            	LD		(tiles_patrones), HL
     142.  00:81EA  21 CA B0            	LD		HL, tiles_mapa_nivel2
     143.  00:81ED  22 8D 82            	LD		(tiles_mapa), HL
     144.  00:81F0  C3 5C 82            	JP		.fin_carga_niveles
     145.  00:81F3                      	
     146.  00:81F3                      .carga_nivel_3:
     147.  00:81F3  21 FF B0            	LD		HL, tiles_patrones_nivel3
     148.  00:81F6  22 89 82            	LD		(tiles_patrones), HL
     149.  00:81F9  21 B4 B2            	LD		HL, tiles_color_nivel3
     150.  00:81FC  22 8B 82            	LD		(tiles_colores), HL
     151.  00:81FF  21 FF B0            	LD		HL, tiles_patrones_nivel3
     152.  00:8202  22 89 82            	LD		(tiles_patrones), HL
     153.  00:8205  21 FB B2            	LD		HL, tiles_mapa_nivel3
     154.  00:8208  22 8D 82            	LD		(tiles_mapa), HL
     155.  00:820B  C3 5C 82            	JP		.fin_carga_niveles
     156.  00:820E                      	
     157.  00:820E                      .carga_nivel_4:
     158.  00:820E  21 30 B3            	LD		HL, tiles_patrones_nivel4
     159.  00:8211  22 89 82            	LD		(tiles_patrones), HL
     160.  00:8214  21 E5 B4            	LD		HL, tiles_color_nivel4
     161.  00:8217  22 8B 82            	LD		(tiles_colores), HL
     162.  00:821A  21 30 B3            	LD		HL, tiles_patrones_nivel4
     163.  00:821D  22 89 82            	LD		(tiles_patrones), HL
     164.  00:8220  21 2C B5            	LD		HL, tiles_mapa_nivel4
     165.  00:8223  22 8D 82            	LD		(tiles_mapa), HL
     166.  00:8226  C3 5C 82            	JP		.fin_carga_niveles
     167.  00:8229                      	
     168.  00:8229                      .carga_nivel_5:
     169.  00:8229  21 61 B5            	LD		HL, tiles_patrones_nivel5
     170.  00:822C  22 89 82            	LD		(tiles_patrones), HL
     171.  00:822F  21 16 B7            	LD		HL, tiles_color_nivel5
     172.  00:8232  22 8B 82            	LD		(tiles_colores), HL
     173.  00:8235  21 61 B5            	LD		HL, tiles_patrones_nivel5
     174.  00:8238  22 89 82            	LD		(tiles_patrones), HL
     175.  00:823B  21 5D B7            	LD		HL, tiles_mapa_nivel5
     176.  00:823E  22 8D 82            	LD		(tiles_mapa), HL
     177.  00:8241  C3 5C 82            	JP		.fin_carga_niveles
     178.  00:8244                      	
     179.  00:8244                      .carga_nivel_6:
     180.  00:8244  21 92 B7            	LD		HL, tiles_patrones_nivel6
     181.  00:8247  22 89 82            	LD		(tiles_patrones), HL
     182.  00:824A  21 47 B9            	LD		HL, tiles_color_nivel6
     183.  00:824D  22 8B 82            	LD		(tiles_colores), HL
     184.  00:8250  21 92 B7            	LD		HL, tiles_patrones_nivel6
     185.  00:8253  22 89 82            	LD		(tiles_patrones), HL
     186.  00:8256  21 8E B9            	LD		HL, tiles_mapa_nivel6
     187.  00:8259  22 8D 82            	LD		(tiles_mapa), HL
     188.  00:825C                      ;	JP		.fin_carga niveles			;no necesario
     189.  00:825C                      .fin_carga_niveles:
     190.  00:825C                      
     191.  00:825C                      	;cargando banco 1
     192.  00:825C                      	;cargamos los patrones
     193.  00:825C  2A 89 82            	LD		HL, (tiles_patrones)
     194.  00:825F  11 00 00            	LD		DE, CHRTBL
     195.  00:8262  CD A6 99            	CALL	depack_VRAM
     196.  00:8265                      	;cargamos los colores de los patrones
     197.  00:8265  2A 8B 82            	LD		HL, (tiles_colores)
     198.  00:8268  11 00 20            	LD		DE, CLRTBL
     199.  00:826B  CD A6 99            	CALL	depack_VRAM
     200.  00:826E                      	
     201.  00:826E                      	;cargando banco 2
     202.  00:826E                      	;cargamos los patrones
     203.  00:826E  2A 89 82            	LD		HL, (tiles_patrones)
     204.  00:8271  11 00 08            	LD		DE, CHRTBL + #0800
     205.  00:8274  CD A6 99            	CALL	depack_VRAM	
     206.  00:8277                      	;cargamos los colores de los patrones
     207.  00:8277  2A 8B 82            	LD		HL, (tiles_colores)
     208.  00:827A  11 00 28            	LD		DE, CLRTBL + #0800
     209.  00:827D  CD A6 99            	CALL	depack_VRAM
     210.  00:8280                      	
     211.  00:8280                      	;cargamos mapa de pantalla banco 1 y 2
     212.  00:8280  2A 8D 82            	LD		HL, (tiles_mapa)
     213.  00:8283  11 00 18            	LD		DE, TILMAP
     214.  00:8286  C3 A6 99            	JP		depack_VRAM
     215.  00:8289                      fin_pinta_parte_superior_pantalla:
     216.  00:8289  00 00               tiles_patrones:		DW	0
     217.  00:828B  00 00               tiles_colores:		DW	0
     218.  00:828D  00 00               tiles_mapa:			DW	0
     219.  00:828F                      
     220.  00:828F                      
     221.  00:828F                      ;;=====================================================
     222.  00:828F                      ;;PINTA_PARTE_INFERIOR_PANTALLA
     223.  00:828F                      ;;=====================================================	
     224.  00:828F                      ; función: pinta la parte inferior del escenario que es común
     225.  00:828F                      ; entrada: -
     226.  00:828F                      ; salida: -
     227.  00:828F                      ; toca: si no son todos los regristros, casi todos
     228.  00:828F                      pinta_parte_inferior_pantalla:
     229.  00:828F                      	;cangando banco 3
     230.  00:828F                      	;cargamos los patrones
     231.  00:828F  21 C3 B9            	LD		HL,tiles_patrones_marcador
     232.  00:8292  11 00 10            	LD		DE,CHRTBL + #1000
     233.  00:8295  CD A6 99            	CALL	depack_VRAM	
     234.  00:8298                      	;cargamos mapa de pantalla
     235.  00:8298  21 44 BB            	LD		HL,tiles_mapa_marcador
     236.  00:829B  11 00 1A            	LD		DE,TILMAP + #0200
     237.  00:829E  CD A6 99            	CALL	depack_VRAM
     238.  00:82A1                      	;cargamos los colores de los patrones
     239.  00:82A1  21 0F BB            	LD		HL,tiles_color_marcador
     240.  00:82A4  11 00 30            	LD		DE,CLRTBL + #1000
     241.  00:82A7  C3 A6 99            	JP		depack_VRAM
     242.  00:82AA                      fin_pinta_parte_inferior_pantalla:
     243.  00:82AA                      
     244.  00:82AA                      
     245.  00:82AA                      
     246.  00:82AA                      ;;=====================================================
     247.  00:82AA                      ;;PINTA_VIDAS
     248.  00:82AA                      ;;=====================================================	
     249.  00:82AA                      ; función: 	actualiza el mapa de tiles para que en el próximo refresco se pinten y actualiza_vidas
     250.  00:82AA                      ; entrada: 	array_aux_vidas
     251.  00:82AA                      ; salida: 	actualiza_vidas_sn
     252.  00:82AA                      ; toca:		todo
     253.  00:82AA                      pinta_vidas:
     254.  00:82AA  CD 7C 80            	CALL	actualiza_marcador_vidas
     255.  00:82AD                      	
     256.  00:82AD  21 40 A7            	LD		HL, array_aux_vidas
     257.  00:82B0  11 48 1A            	LD		DE, TILMAP + POSVIDAS 	;inicio posición en el mapa de tiles de las vidas
     258.  00:82B3  01 08 00            	LD		BC, NMAXVIDREL			;hay 8 posiciones para vidas/reliquias o espacios en negro si no tiene 8 vidas/reliquias
     259.  00:82B6  C3 5C 00            	JP		LDIRVM
     260.  00:82B9                      fin_pinta_vidas:
     261.  00:82B9                      	
     262.  00:82B9                      	
     263.  00:82B9                      
     264.  00:82B9                      ;;=====================================================
     265.  00:82B9                      ;;PINTA_RELIQUIAS
     266.  00:82B9                      ;;=====================================================	
     267.  00:82B9                      ; función: 	actualiza el mapa de tiles para que en el próximo refresco se pinten y actualiza_reliquias
     268.  00:82B9                      ; entrada: 	array_aux_reliquias
     269.  00:82B9                      ; salida: 	-
     270.  00:82B9                      ; toca:		todo
     271.  00:82B9                      pinta_reliquias:
     272.  00:82B9  CD 95 80            	CALL	actualiza_buffer_reliquias
     273.  00:82BC                      	
     274.  00:82BC  21 48 A7            	LD		HL, array_aux_reliquias
     275.  00:82BF  11 C8 1A            	LD		DE, TILMAP + POSRELIQ 	;inicio posición en el mapa de tiles de las vidas
     276.  00:82C2  01 08 00            	LD		BC, NMAXVIDREL			;hay 8 posiciones para vidas/reliquias o espacios en negro si no tiene 8 vidas/reliquias
     277.  00:82C5  C3 5C 00            	JP		LDIRVM
     278.  00:82C8                      fin_pinta_reliquias:
     279.  00:82C8                      	
     280.  00:82C8                      
     281.  00:82C8                      
     282.  00:82C8                      	
     283.  00:82C8                      ;;=====================================================
     284.  00:82C8                      ;;PINTA_NIVEL
     285.  00:82C8                      ;;=====================================================	
     286.  00:82C8                      ; función: 	actualiza el nivel en la parte de puntuación
     287.  00:82C8                      ; entrada: 	prota_nivel
     288.  00:82C8                      ; salida: 	-
     289.  00:82C8                      ; toca:		HL,DE,BC
     290.  00:82C8                      pinta_nivel:	
     291.  00:82C8                      	;forma más avanzada sin llamada a la bios
     292.  00:82C8  01 B4 1A            	LD		BC,TILMAP + POSNIVEL ;posición en el mapa de tiles del tile de nivel
     293.  00:82CB  3A 3A A7            	LD		 A, (prota_nivel)	;seleccionando la pos del banco de tiles a poner en el mapa
     294.  00:82CE  C6 30               	ADD		'0'	
     295.  00:82D0  57                  	LD		 D, A
     296.  00:82D1                      	
     297.  00:82D1  C3 D4 82            	JP		pinta_tile_suelto
     298.  00:82D4                      fin_pinta_nivel:
     299.  00:82D4                      
     300.  00:82D4                      
     301.  00:82D4                      
     302.  00:82D4                      ;;=====================================================
     303.  00:82D4                      ;;PINTA_TILE_SUELTO
     304.  00:82D4                      ;;=====================================================	
     305.  00:82D4                      ; función: 	pinta al tile que digamos en D, en la posición BC
     306.  00:82D4                      ; entrada: 	BC (posición a pintar en el mapa),D (qué se va a pintar el esa posición)
     307.  00:82D4                      ; salida: 	-
     308.  00:82D4                      ; toca:		-
     309.  00:82D4                      pinta_tile_suelto:
     310.  00:82D4  DB 99               	IN		 A,(REGEST)		;leer registro de estado (recomendado)
     311.  00:82D6  79                  	LD		 A,C			;primero byte bajo	
     312.  00:82D7  D3 99               	OUT		(REGEST),A
     313.  00:82D9  78                  	LD		 A,B			;después byte alto  ********************** preguntar a Fernando cómo que byte bajo es B
     314.  00:82DA  F6 40               	OR		1000000b		;+64
     315.  00:82DC  D3 99               	OUT		(REGEST),A
     316.  00:82DE                      	
     317.  00:82DE  7A                  	LD		A,D
     318.  00:82DF  D3 98               	OUT		(REGESCVDP),A	;escribe A en VRAM en la posición indicada por los dos OUT anteriores
     319.  00:82E1                      fin_pinta_tile_suelto:
     320.  00:82E1  C9                  	RET
     321.  00:82E2                      
     322.  00:82E2                      
     323.  00:82E2                      
     324.  00:82E2                      
     325.  00:82E2                      
     326.  00:82E2                      ;;=====================================================
     327.  00:82E2                      ;;MIRA_PINTA ENERGIA
     328.  00:82E2                      ;;=====================================================	
     329.  00:82E2                      ; función: 	actualiza el nivel de energia en la parte de puntuación
     330.  00:82E2                      ; nota:		el cuadrado más bajo de ejergía siempre estará pintado... se obviará
     331.  00:82E2                      ; entrada: 	prota.energia, array_aux_energia
     332.  00:82E2                      ; salida: 	-
     333.  00:82E2                      ; toca:		ninguno porque usa EXX
     334.  00:82E2                      
     335.  00:82E2                      ; nota importante... lo mismo interesa hacer esto con un array para comparar y un bucle
     336.  00:82E2                      
     337.  00:82E2                      mira_pinta_energia:
     338.  00:82E2  D9                  	EXX							;por si acaso guardo el contenido de HL (si veo que no es necesario guardarlo lo quito) uso esto en vez de push por el nº ciclos
     339.  00:82E3                      	
     340.  00:82E3  3A 3F A7            	LD		 A,(prota_energia) 	;para las comparaciones A variable (actual) y B fijo (limites)
     341.  00:82E6                      
     342.  00:82E6  0E 00               	LD		 C,TILENEGRO		;para agilizar asignaciones en vez de un valor cte uso otro registro
     343.  00:82E8                      pinta_ener:
     344.  00:82E8                      pinta_ener_tile_8:
     345.  00:82E8  21 57 A7            	LD		HL,ultimo_pos_array_aux_energia	;coloco puntero en array e iré decrementando
     346.  00:82EB  06 D9               	LD		 B,TILEENERG8
     347.  00:82ED  B8                  	CP		 B
     348.  00:82EE  38 04               	JR		C,pinta_ener_tile_8_negro
     349.  00:82F0  36 0E               	LD		(HL),TILEMAPVERD
     350.  00:82F2  18 01               	JR		pinta_ener_tile_7
     351.  00:82F4                      pinta_ener_tile_8_negro:
     352.  00:82F4  71                  	LD		(HL),C
     353.  00:82F5                      
     354.  00:82F5                      pinta_ener_tile_7:
     355.  00:82F5  2B                  	DEC		HL
     356.  00:82F6  06 BA               	LD		 B,TILEENERG7
     357.  00:82F8  B8                  	CP		 B
     358.  00:82F9  38 04               	JR		C,pinta_ener_tile_7_negro
     359.  00:82FB  36 0E               	LD		(HL),TILEMAPVERD
     360.  00:82FD  18 01               	JR		pinta_ener_tile_6
     361.  00:82FF                      pinta_ener_tile_7_negro:
     362.  00:82FF  71                  	LD		(HL),C
     363.  00:8300                      
     364.  00:8300                      pinta_ener_tile_6:
     365.  00:8300  2B                  	DEC		HL
     366.  00:8301  06 9B               	LD		 B,TILEENERG6
     367.  00:8303  B8                  	CP		 B
     368.  00:8304  38 04               	JR		C,pinta_ener_tile_6_negro
     369.  00:8306  36 0E               	LD		(HL),14
     370.  00:8308  18 01               	JR		pinta_ener_tile_5
     371.  00:830A                      pinta_ener_tile_6_negro:
     372.  00:830A  71                  	LD		(HL),C
     373.  00:830B                      
     374.  00:830B                      pinta_ener_tile_5:
     375.  00:830B  2B                  	DEC		HL
     376.  00:830C  06 7C               	LD		 B,TILEENERG5
     377.  00:830E  B8                  	CP		 B
     378.  00:830F  38 04               	JR		C,pinta_ener_tile_5_negro
     379.  00:8311  36 0E               	LD		(HL),TILEMAPVERD
     380.  00:8313  18 01               	JR		pinta_ener_tile_4
     381.  00:8315                      pinta_ener_tile_5_negro:
     382.  00:8315  71                  	LD		(HL),C
     383.  00:8316                      
     384.  00:8316                      pinta_ener_tile_4:
     385.  00:8316  2B                  	DEC		HL
     386.  00:8317  06 5D               	LD		 B,TILEENERG4
     387.  00:8319  B8                  	CP		 B
     388.  00:831A  38 04               	JR		C,pinta_ener_tile_4_negro
     389.  00:831C  36 0F               	LD		(HL),TILEMAPAMAR
     390.  00:831E  18 01               	JR		pinta_ener_tile_3
     391.  00:8320                      pinta_ener_tile_4_negro:
     392.  00:8320  71                  	LD		(HL),C
     393.  00:8321                      	
     394.  00:8321                      pinta_ener_tile_3:
     395.  00:8321  2B                  	DEC		HL
     396.  00:8322  06 3E               	LD		 B,TILEENERG3
     397.  00:8324  B8                  	CP		 B
     398.  00:8325  38 04               	JR		C,pinta_ener_tile_3_negro
     399.  00:8327  36 0F               	LD		(HL),TILEMAPAMAR
     400.  00:8329  18 01               	JR		pinta_ener_tile_2
     401.  00:832B                      pinta_ener_tile_3_negro:
     402.  00:832B  71                  	LD		(HL),C
     403.  00:832C                      
     404.  00:832C                      pinta_ener_tile_2:
     405.  00:832C  2B                  	DEC		HL
     406.  00:832D  06 1F               	LD		 B,TILEENERG2
     407.  00:832F  B8                  	CP		 B
     408.  00:8330  38 04               	JR		C,pinta_ener_tile_2_negro
     409.  00:8332  36 10               	LD		(HL),TILEMAPROJO
     410.  00:8334  18 01               	JR		fin_mira_pinta_energia		;siempre estará pintado el cuadro mínimo
     411.  00:8336                      pinta_ener_tile_2_negro:
     412.  00:8336  71                  	LD		(HL),C
     413.  00:8337                      
     414.  00:8337                      fin_mira_pinta_energia:
     415.  00:8337  D9                  	EXX
     416.  00:8338  C9                  	RET
     417.  00:8339                      
     418.  00:8339                      
     419.  00:8339                      ;;=====================================================
     420.  00:8339                      ;;PINTA_ENERGIA
     421.  00:8339                      ;;=====================================================	
     422.  00:8339                      ; función: 	actualiza el mapa de tiles para que en el próximo refresco se pinte la barra de energia actual
     423.  00:8339                      ; entrada: 	array_aux_energia
     424.  00:8339                      ; toca:		todo
     425.  00:8339                      pinta_energia:
     426.  00:8339  CD E2 82            	CALL	mira_pinta_energia
     427.  00:833C                      	
     428.  00:833C  21 50 A7            	LD		HL, array_aux_energia
     429.  00:833F  11 88 1A            	LD		DE, TILMAP + POSENERG 	;inicio posición en el mapa de tiles de las vidas
     430.  00:8342  01 08 00            	LD		BC, NMAXVIDREL			;hay 8 posiciones para vidas/reliquias o espacios en negro si no tiene 8 vidas/reliquias
     431.  00:8345  C3 5C 00            	JP		LDIRVM
     432.  00:8348                      fin_pinta_energia:
     433.  00:8348                      
     434.  00:8348                      
     435.  00:8348                      
     436.  00:8348                      ;;=====================================================
     437.  00:8348                      ;;BORRA_MAPA
     438.  00:8348                      ;;=====================================================	
     439.  00:8348                      ; función: 	pone todas las habitaciones del mapa a negro (los tiles del mapa los rellena con un array a 0 - caracter en negro)
     440.  00:8348                      ; entrada: 	array_aux_mapa_limpiar
     441.  00:8348                      ; salida: 	-
     442.  00:8348                      ; toca:		AF
     443.  00:8348                      borra_mapa:
     444.  00:8348  D9                  	EXX
     445.  00:8349                      	
     446.  00:8349  21 58 A7            	LD		HL,array_aux_mapa_limpiar
     447.  00:834C  11 F8 1A            	LD		DE,TILMAP + POSMAPLIN1 	;inicio posición en el mapa de tiles de la primera fila del mapa
     448.  00:834F  01 07 00            	LD		BC,NHABNIVEL			;cada nivel son 7 filas con 7 habitaciones "posibles"
     449.  00:8352  CD 5C 00            	CALL	LDIRVM
     450.  00:8355                      	
     451.  00:8355  21 58 A7            	LD		HL,array_aux_mapa_limpiar
     452.  00:8358  11 D8 1A            	LD		DE,TILMAP + POSMAPLIN2
     453.  00:835B  01 07 00            	LD		BC,NHABNIVEL
     454.  00:835E  CD 5C 00            	CALL	LDIRVM
     455.  00:8361                      
     456.  00:8361  21 58 A7            	LD		HL,array_aux_mapa_limpiar
     457.  00:8364  11 B8 1A            	LD		DE,TILMAP + POSMAPLIN3
     458.  00:8367  01 07 00            	LD		BC,NHABNIVEL
     459.  00:836A  CD 5C 00            	CALL	LDIRVM
     460.  00:836D                      
     461.  00:836D  21 58 A7            	LD		HL,array_aux_mapa_limpiar	
     462.  00:8370  11 98 1A            	LD		DE,TILMAP + POSMAPLIN4
     463.  00:8373  01 07 00            	LD		BC,NHABNIVEL
     464.  00:8376  CD 5C 00            	CALL	LDIRVM
     465.  00:8379                      
     466.  00:8379  21 58 A7            	LD		HL,array_aux_mapa_limpiar	
     467.  00:837C  11 78 1A            	LD		DE,TILMAP + POSMAPLIN5
     468.  00:837F  01 07 00            	LD		BC,NHABNIVEL
     469.  00:8382  CD 5C 00            	CALL	LDIRVM
     470.  00:8385                      
     471.  00:8385  21 58 A7            	LD		HL,array_aux_mapa_limpiar	
     472.  00:8388  11 58 1A            	LD		DE,TILMAP + POSMAPLIN6
     473.  00:838B  01 07 00            	LD		BC,NHABNIVEL
     474.  00:838E  CD 5C 00            	CALL	LDIRVM
     475.  00:8391                      
     476.  00:8391  21 58 A7            	LD		HL,array_aux_mapa_limpiar	
     477.  00:8394  11 38 1A            	LD		DE,TILMAP + POSMAPLIN7
     478.  00:8397  01 07 00            	LD		BC,NHABNIVEL
     479.  00:839A  CD 5C 00            	CALL	LDIRVM
     480.  00:839D                      	
     481.  00:839D  D9                  	EXX
     482.  00:839E                      fin_borra_mapa:
     483.  00:839E  C9                  	RET
     484.  00:839F                      
     485.  00:839F                      
     486.  00:839F                      
     487.  00:839F                      
     488.  00:839F                      
     489.  00:839F                      ;;=====================================================
     490.  00:839F                      ;;PINTA_PUERTAS
     491.  00:839F                      ;;=====================================================	
     492.  00:839F                      ; función: 	examina A y mira si tiene que pintar puertas de los lados, arriba o abrajo o las escaleras (o no)
     493.  00:839F                      ; entrada: 	habitacion_actual 1 escalera 1 puerta arriba 1 pu der 1 pu aba 1 pu izq (si es 0 pinta pared)
     494.  00:839F                      ; salida: 	-
     495.  00:839F                      ; toca:		todo
     496.  00:839F                      pinta_puertas:
     497.  00:839F  CD 71 81            	CALL	pinta_parte_superior_pantalla	;pinta pasillo y paredes
     498.  00:83A2                      
     499.  00:83A2  CD AE 80            	CALL	localiza_info_habitacion	;busca qué puertas debe pintar y lo mete en habitación_actual
     500.  00:83A5                      	
     501.  00:83A5  3A 06 A4            	LD		 A, (habitacion_actual)		;se mete en A porque la función pide A y para no buscar el valor 4 veces
     502.  00:83A8                      
     503.  00:83A8                      ;	BIT		 4, A
     504.  00:83A8                      ;	CALL	nz, pinta_escalera
     505.  00:83A8                      
     506.  00:83A8  CB 5F               	BIT		 3, A
     507.  00:83AA  C4 D8 83            	CALL	nz, pinta_puerta_arr
     508.  00:83AD                      
     509.  00:83AD  CB 57               	BIT		 2, A
     510.  00:83AF  C4 F3 83            	CALL	nz, pinta_puerta_der
     511.  00:83B2                      
     512.  00:83B2  CB 4F               	BIT		 1, A
     513.  00:83B4  C4 BD 83            	CALL	nz, pinta_puerta_aba
     514.  00:83B7                      	
     515.  00:83B7  CB 47               	BIT		 0, A
     516.  00:83B9  C4 0E 84            	CALL	nz, pinta_puerta_izq
     517.  00:83BC                      fin_pinta_puertas:
     518.  00:83BC  C9                  	RET
     519.  00:83BD                      
     520.  00:83BD                      
     521.  00:83BD                      
     522.  00:83BD                      
     523.  00:83BD                      ;;=====================================================
     524.  00:83BD                      ;;PINTA_PUERTA_ABA
     525.  00:83BD                      ;;=====================================================	
     526.  00:83BD                      ; función: 	pinta la puerta de abajo
     527.  00:83BD                      ; entrada: 	array_puerta_abajo, wordaux2, wordaux1
     528.  00:83BD                      ; salida: 	-
     529.  00:83BD                      ; toca:		HL,BC, DE
     530.  00:83BD                      pinta_puerta_aba:
     531.  00:83BD  F5                  	PUSH	AF
     532.  00:83BE                      	
     533.  00:83BE  21 89 A7            	LD		HL, array_puerta_abajo			;guardo puntero al array a pintar (como pasar por referencia)
     534.  00:83C1  22 F7 84            	LD		(wordaux2), HL					;en la variable wordaux2
     535.  00:83C4  21 EE 19            	LD		HL, TILMAP + POSPUERABAJ		;calcula posición en tilemap
     536.  00:83C7  22 F5 84            	LD		(wordaux1), HL					;guarda valor pos tilemap en wordaux1
     537.  00:83CA                      
     538.  00:83CA  3E 01               	LD		 A, 1							;nº de filas
     539.  00:83CC  32 F9 84            	LD		(byteaux1), A
     540.  00:83CF  3E 04               	LD		 A, 4							;nº de columnas
     541.  00:83D1  32 FA 84            	LD		(byteaux2), A
     542.  00:83D4                      	
     543.  00:83D4  F1                  	POP		AF
     544.  00:83D5                      	
     545.  00:83D5  C3 B5 84            	JP		pinta_array
     546.  00:83D8                      fin_pinta_puerta_aba:
     547.  00:83D8                      
     548.  00:83D8                      ;;=====================================================
     549.  00:83D8                      ;;PINTA_PUERTA_ARR
     550.  00:83D8                      ;;=====================================================	
     551.  00:83D8                      ; función: 	pinta la puerta de arriba
     552.  00:83D8                      ; entrada: 	array_puerta_arriba, wordaux2, wordaux1
     553.  00:83D8                      ; salida: 	-
     554.  00:83D8                      ; toca:		HL,BC, DE
     555.  00:83D8                      pinta_puerta_arr:
     556.  00:83D8  F5                  	PUSH	AF
     557.  00:83D9                      	
     558.  00:83D9  21 60 A7            	LD		HL, array_puerta_arriba			;guardo puntero al array a pintar (como pasar por referencia)
     559.  00:83DC  22 F7 84            	LD		(wordaux2), HL					;en la variable wordaux2
     560.  00:83DF  21 8E 18            	LD		HL, TILMAP + POSPUERARRI		;calcula posición en tilemap
     561.  00:83E2  22 F5 84            	LD		(wordaux1), HL					;guarda valor pos tilemap en wordaux1
     562.  00:83E5  3E 05               	LD		 A, 5							;nº de filas
     563.  00:83E7  32 F9 84            	LD		(byteaux1), A
     564.  00:83EA  3E 04               	LD		 A, 4							;nº de columnas
     565.  00:83EC  32 FA 84            	LD		(byteaux2), A
     566.  00:83EF                      	
     567.  00:83EF  F1                  	POP		AF
     568.  00:83F0                      	
     569.  00:83F0  C3 B5 84            	JP		pinta_array
     570.  00:83F3                      fin_pinta_puerta_arr:
     571.  00:83F3                      
     572.  00:83F3                      
     573.  00:83F3                      ;;=====================================================
     574.  00:83F3                      ;;PINTA_PUERTA_DER
     575.  00:83F3                      ;;=====================================================	
     576.  00:83F3                      ; función: 	pinta la puerta de la derecha
     577.  00:83F3                      ; entrada: 	array_puerta_derecha, wordaux2, wordaux1
     578.  00:83F3                      ; salida: 	-
     579.  00:83F3                      ; toca:		HL,BC, DE
     580.  00:83F3                      pinta_puerta_der:
     581.  00:83F3  F5                  	PUSH	AF
     582.  00:83F4  21 74 A7            	LD		HL, array_puerta_derecha		;guardo puntero al array a pintar (como pasar por referencia)
     583.  00:83F7  22 F7 84            	LD		(wordaux2), HL					;en la variable wordaux2
     584.  00:83FA  21 FC 18            	LD		HL, TILMAP + POSPUERDERE		;calcula posición en tilemap
     585.  00:83FD  22 F5 84            	LD		(wordaux1), HL					;guarda valor pos tilemap en wordaux1
     586.  00:8400                      
     587.  00:8400  3E 07               	LD		 A, 7							;nº de filas
     588.  00:8402  32 F9 84            	LD		(byteaux1), A
     589.  00:8405  3E 03               	LD		 A, 3							;nº de columnas
     590.  00:8407  32 FA 84            	LD		(byteaux2), A
     591.  00:840A                      	
     592.  00:840A  F1                  	POP		AF
     593.  00:840B                      	
     594.  00:840B  C3 B5 84            	JP		pinta_array
     595.  00:840E                      fin_pinta_puerta_der:
     596.  00:840E                      	
     597.  00:840E                      ;;=====================================================
     598.  00:840E                      ;;PINTA_PUERTA_IZQ
     599.  00:840E                      ;;=====================================================	
     600.  00:840E                      ; función: 	pinta la puerta de la izquierda
     601.  00:840E                      ; entrada: 	array_puerta_izquierda, wordaux2, wordaux1
     602.  00:840E                      ; salida: 	-
     603.  00:840E                      ; toca:		HL,BC, DE
     604.  00:840E                      pinta_puerta_izq:
     605.  00:840E  F5                  	PUSH	AF
     606.  00:840F                      	
     607.  00:840F  21 8D A7            	LD		HL, array_puerta_izquierda		;guardo puntero al array a pintar (como pasar por referencia)
     608.  00:8412  22 F7 84            	LD		(wordaux2), HL					;en la variable wordaux2
     609.  00:8415  21 E1 18            	LD		HL, TILMAP + POSPUERIZQU		;calcula posición en tilemap
     610.  00:8418  22 F5 84            	LD		(wordaux1), HL					;guarda valor pos tilemap en wordaux1
     611.  00:841B                      
     612.  00:841B  3E 07               	LD		 A, 7							;nº de filas
     613.  00:841D  32 F9 84            	LD		(byteaux1), A
     614.  00:8420  3E 03               	LD		 A, 3							;nº de columnas
     615.  00:8422  32 FA 84            	LD		(byteaux2), A
     616.  00:8425                      	
     617.  00:8425  F1                  	POP		AF
     618.  00:8426                      	
     619.  00:8426  C3 B5 84            	JP		pinta_array
     620.  00:8429                      fin_pinta_puerta_izq:
     621.  00:8429                      
     622.  00:8429                      
     623.  00:8429                      ;;=====================================================
     624.  00:8429                      ;;POSICIONA_EN_MAPA
     625.  00:8429                      ;;=====================================================	
     626.  00:8429                      ; función: 	en el mapa de marcadores de la derecha/abajo marca un cuadro en gris o con un muñeco
     627.  00:8429                      ;			según el valor de prota.posición pinta entrá un muñeco y por donde vaya pasando el prota
     628.  00:8429                      ;			quedará en gris
     629.  00:8429                      ; entrada: 	elemento_pintar_mapa, prota_pos_mapy, prota_pos_mapx
     630.  00:8429                      ; salida: 	-
     631.  00:8429                      ; toca:		todos
     632.  00:8429                      posiciona_en_mapa:
     633.  00:8429                      	;#0238 es la posición en mapa de tiles de la esquina superior izquierda del mapa (569 en decimal)
     634.  00:8429  21 38 1A            	LD		HL, TILMAP + POSMAPA;pos inicial
     635.  00:842C                      	
     636.  00:842C                      	;ahora se le calcula la fila a pintar ya que va de abajo a arriba y no como en el mapa + columna
     637.  00:842C                      .sumar_fila:
     638.  00:842C  3A 3E A7            	LD		 A, (prota_pos_mapy)
     639.  00:842F  FE 01               	CP		 1
     640.  00:8431  28 2A               	JR		 Z, .fila_1
     641.  00:8433  3A 3E A7            	LD		 A, (prota_pos_mapy)
     642.  00:8436  FE 02               	CP		 2
     643.  00:8438  28 2A               	JR		 Z, .fila_2
     644.  00:843A  3A 3E A7            	LD		 A, (prota_pos_mapy)
     645.  00:843D  FE 03               	CP		 3
     646.  00:843F  28 2A               	JR		 Z, .fila_3
     647.  00:8441  3A 3E A7            	LD		 A, (prota_pos_mapy)
     648.  00:8444  FE 04               	CP		 4
     649.  00:8446  28 2A               	JR		 Z, .fila_4
     650.  00:8448  3A 3E A7            	LD		 A, (prota_pos_mapy)
     651.  00:844B  FE 05               	CP		 5
     652.  00:844D  28 2A               	JR		 Z, .fila_5
     653.  00:844F  3A 3E A7            	LD		 A, (prota_pos_mapy)
     654.  00:8452  FE 06               	CP		 6
     655.  00:8454  28 2A               	JR		 Z, .sumar_columna
     656.  00:8456                      	;no consulto la 0 porque si no es ninguna de las anteriores es 0 y por tanto sería un jr fila_0
     657.  00:8456                      	
     658.  00:8456                      .fila_0:
     659.  00:8456  11 C0 00            	LD		DE, 192
     660.  00:8459  19                  	ADD		HL, DE			;nota: se que repito el ADD pero la otra opción es inicializar DE y ya tarda mucho la funicón (es por velicidad)
     661.  00:845A  C3 80 84            	JP		.sumar_columna
     662.  00:845D                      .fila_1:
     663.  00:845D  11 A0 00            	LD		DE, 160
     664.  00:8460  19                  	ADD		HL, DE
     665.  00:8461  C3 80 84            	JP		.sumar_columna
     666.  00:8464                      .fila_2:
     667.  00:8464  11 80 00            	LD		DE, 128
     668.  00:8467  19                  	ADD		HL, DE
     669.  00:8468  C3 80 84            	JP		.sumar_columna
     670.  00:846B                      .fila_3:
     671.  00:846B  11 60 00            	LD		DE, 96
     672.  00:846E  19                  	ADD		HL, DE
     673.  00:846F  C3 80 84            	JP		.sumar_columna
     674.  00:8472                      .fila_4:
     675.  00:8472  11 40 00            	LD		DE, 64
     676.  00:8475  19                  	ADD		HL, DE
     677.  00:8476  C3 80 84            	JP		.sumar_columna
     678.  00:8479                      .fila_5:
     679.  00:8479  11 20 00            	LD		DE, 32
     680.  00:847C  19                  	ADD		HL, DE
     681.  00:847D  C3 80 84            	JP		.sumar_columna
     682.  00:8480                      .fila_6:
     683.  00:8480                      	;pongo fila_6 por poner ya que si es la fila 6 equiv. a primera fila del mapa y por tanto no suma fila
     684.  00:8480                      	
     685.  00:8480                      	
     686.  00:8480                      .sumar_columna:
     687.  00:8480  3A 3D A7            	LD 		 A, (prota_pos_mapx) ;POS X
     688.  00:8483  16 00               	LD		 D, 0
     689.  00:8485  5F                  	LD		 E, A
     690.  00:8486  19                  	ADD		HL, DE
     691.  00:8487                      	
     692.  00:8487                      	;resultado en BC para usar en la función pinta_tile_suelto
     693.  00:8487  44                  	LD		 B, H
     694.  00:8488  4D                  	LD		 C, L
     695.  00:8489                      	
     696.  00:8489                      	;terminado de fijar la coordenada recuperamos a para ver el tipo
     697.  00:8489  3A 5F A7            	LD		 A, (elemento_pintar_mapa)
     698.  00:848C  FE 09               	CP		 TILEGRISM
     699.  00:848E  CA 96 84            	JP		 Z, pinta_pos_mapa_vacio
     700.  00:8491  16 13               	LD		 D, TILEPROTAM
     701.  00:8493  C3 98 84            	JP		fin_pinta_pos_mapa
     702.  00:8496                      pinta_pos_mapa_vacio:
     703.  00:8496  16 09               	LD		 D, TILEGRISM	
     704.  00:8498                      
     705.  00:8498                      fin_pinta_pos_mapa:
     706.  00:8498  C3 D4 82            	JP		pinta_tile_suelto
     707.  00:849B                      fin_posiciona_en_mapa:
     708.  00:849B                      
     709.  00:849B                      
     710.  00:849B                      
     711.  00:849B                      
     712.  00:849B                      ;;=====================================================
     713.  00:849B                      ;;EFECTO_IMAGEN_TIRA_RELIQUIA
     714.  00:849B                      ;;=====================================================	
     715.  00:849B                      ; función: 	hace que el fondo de la pantalla parpadee N veces
     716.  00:849B                      ; entrada: 	actualiza_reliquias_sn
     717.  00:849B                      ; salida: 	-
     718.  00:849B                      ; toca: 	todo
     719.  00:849B                      efecto_imagen_tira_reliquia:
     720.  00:849B  3E 14               	LD		 A, 20;RETARDOREL
     721.  00:849D  47                  	LD		 B, A
     722.  00:849E                      
     723.  00:849E                      .parpadea_fondo:
     724.  00:849E  C5                  	PUSH	BC
     725.  00:849F  21 24 A7            	LD		HL, color_bomba1
     726.  00:84A2  CD 38 81            	CALL	color_pantalla
     727.  00:84A5                      	
     728.  00:84A5                      	;~ PUSH	BC
     729.  00:84A5                      	;~ LD		 A, 255
     730.  00:84A5                      	;~ LD		 B, A
     731.  00:84A5                      ;~ .bucle_de_espera:
     732.  00:84A5                      	;~ NOP
     733.  00:84A5                      	;~ DJNZ	 .bucle_de_espera
     734.  00:84A5                      	;~ POP		BC
     735.  00:84A5  76                  	HALT
     736.  00:84A6                      
     737.  00:84A6                      	
     738.  00:84A6  21 27 A7            	LD		HL, color_bomba2
     739.  00:84A9  CD 38 81            	CALL	color_pantalla
     740.  00:84AC  C1                  	POP		BC
     741.  00:84AD  10 EF               	DJNZ	.parpadea_fondo
     742.  00:84AF                      	
     743.  00:84AF  21 21 A7            	LD		HL, color_base
     744.  00:84B2  C3 38 81            	JP		color_pantalla
     745.  00:84B5                      fin_efecto_imagen_tira_reliquia:
     746.  00:84B5                      
     747.  00:84B5                      
     748.  00:84B5                      
     749.  00:84B5                      
     750.  00:84B5                      ;=====================================================
     751.  00:84B5                      ;;PINTA_ARRAY
     752.  00:84B5                      ;;=====================================================	
     753.  00:84B5                      ;;funcion:  (pinta el mismo tile) se le pasa un array con posiciones de tiles y coordenadas x e y y los pinta en screen 2
     754.  00:84B5                      ;;entrada:	wordaux1 (pos inicio sc2 donde pintar) y wordaux2 (puntero al array a pintar), BC (posición en tilemap) , D filas y E columnas
     755.  00:84B5                      ;;salida:	-
     756.  00:84B5                      ;;importante: necesita de una variable wordaux1 tipo WD (wordaux1: 	DW	0)
     757.  00:84B5                      ;; ejemplo llamada:
     758.  00:84B5                      	;~ LD		HL,array_tiles					;guardo puntero al array a pintar (como psar por referencia)
     759.  00:84B5                      	;~ LD		(wordaux2),HL					;en la variable wordaux2
     760.  00:84B5                      	;~ LD		HL,SC2MAP + 256 + 32			;calcula posición en tilemap
     761.  00:84B5                      	;~ LD		(wordaux1),HL					;guarda valor pos tilemap en wordaux1
     762.  00:84B5                      	;~ LD		B,H								;coloca posición tilemap BC
     763.  00:84B5                      	;~ LD		C,L
     764.  00:84B5                      	;~ LD		D,2								;nº de filas ahora byteaux1
     765.  00:84B5                      	;~ LD		E,3								;nº de columnas ahora byteaux2
     766.  00:84B5                      	;~ CALL	pinta_array
     767.  00:84B5                      
     768.  00:84B5                      pinta_array:
     769.  00:84B5  08                  	EX		AF, AF'
     770.  00:84B6                      	
     771.  00:84B6  3A F9 84            	LD		 A, (byteaux1)
     772.  00:84B9  57                  	LD		 D, A
     773.  00:84BA  3A FA 84            	LD		 A, (byteaux2)
     774.  00:84BD  5F                  	LD		 E, A
     775.  00:84BE                      
     776.  00:84BE                      	
     777.  00:84BE  2A F5 84            	LD		HL, (wordaux1)
     778.  00:84C1  44                  	LD		 B, H							;coloca posición tilemap BC
     779.  00:84C2  4D                  	LD		 C, L
     780.  00:84C3                      	
     781.  00:84C3                      	;contamos con que la posición "global" en el tilemap está ya en BC
     782.  00:84C3                      	;y el puntero al array a pintar en wordaux2 y la posición en tilemap sc2 en wordaux1
     783.  00:84C3                      	;inicializa
     784.  00:84C3  DB 99               	IN		 A,(REGEST)		;leer registro de estado (recomendado)
     785.  00:84C5                      	
     786.  00:84C5                      	;coloca puntero para pintar tile según BC
     787.  00:84C5  79                  	LD		 A,C			;primero byte bajo	
     788.  00:84C6  D3 99               	OUT		(REGEST),A
     789.  00:84C8  78                  	LD		 A,B			;después byte alto  ********************** preguntar a Fernando cómo que byte bajo es B
     790.  00:84C9  F6 40               	OR		1000000b		;+64
     791.  00:84CB  D3 99               	OUT		(REGEST),A
     792.  00:84CD                      
     793.  00:84CD                      	
     794.  00:84CD  2A F7 84            	LD		HL,(wordaux2)	;HL es lo que se pintará y le he pasado el puntero del array tilemap a pintar
     795.  00:84D0                      .pa_pinta_fila:
     796.  00:84D0  43                  	LD		 B,E
     797.  00:84D1                      .pa_pinta_columnas: 		;finta la fila (pintando las columnas)
     798.  00:84D1  7E                  	LD		 A,(HL)
     799.  00:84D2  D3 98               	OUT		(REGESCVDP),A	;escribe A en VRAM en la posición indicada por los dos OUT anteriores
     800.  00:84D4  23                  	INC		HL
     801.  00:84D5  10 FA               	DJNZ	.pa_pinta_columnas
     802.  00:84D7                      	
     803.  00:84D7                      	;no es una solución elegante lo de repetir código pero queda claro
     804.  00:84D7                      	;por si hay otra fila
     805.  00:84D7  E5                  	PUSH	HL
     806.  00:84D8  2A F5 84            	LD		HL,(wordaux1)
     807.  00:84DB  01 20 00            	LD		BC,32
     808.  00:84DE  09                  	ADD		HL,BC
     809.  00:84DF  22 F5 84            	LD		(wordaux1),HL
     810.  00:84E2  44                  	LD		B,H
     811.  00:84E3  4D                  	LD		C,L
     812.  00:84E4  E1                  	POP		HL
     813.  00:84E5                      	
     814.  00:84E5  79                  	LD		 A,C			;primero byte bajo	
     815.  00:84E6  D3 99               	OUT		(REGEST),A
     816.  00:84E8  78                  	LD		 A,B			;después byte alto 
     817.  00:84E9  F6 40               	OR		1000000b		;+64
     818.  00:84EB  D3 99               	OUT		(REGEST),A
     819.  00:84ED                      	
     820.  00:84ED                      	;si hay otra fila repite
     821.  00:84ED  15                  	DEC		 D
     822.  00:84EE  7A                  	LD		 A,D		;¿hay otra fila?
     823.  00:84EF  B7                  	OR		 A
     824.  00:84F0  C4 D0 84            	CALL	NZ,.pa_pinta_fila
     825.  00:84F3                      	
     826.  00:84F3  08                  	EX		AF, AF'
     827.  00:84F4                      fin_pinta_array:
     828.  00:84F4  C9                  	RET
     829.  00:84F5                      ;;variables asocidas a la función pinta_array
     830.  00:84F5                      ;; por de pronto la dejo aquí
     831.  00:84F5  00 00               wordaux1:		DW	0	;almacena la posición en el tilemap 0 al 675
     832.  00:84F7  00 00               wordaux2:		DW	0	;almacena puntero a array de tiles (posiciones en realidad) a pintar (posiciones repetidas en los 2 primeros bancos)
     833.  00:84F9  00                  byteaux1:		DB	0	;nº filas Registro D
     834.  00:84FA  00                  byteaux2:		DB	0	;nº columnas Registro E
     835.  00:84FB                      
     836.  00:84FB                      
     837.  00:84FB                      
     838.  00:84FB                      
     839.  00:84FB                      ;;=====================================================
     840.  00:84FB                      ;;INICIALIZA_ANTORCHAS
     841.  00:84FB                      ;;=====================================================	
     842.  00:84FB                      ; función: 	inicializa las variables de estructuras de las antorchas
     843.  00:84FB                      ; entrada: 	antorchas, array_antorcha
     844.  00:84FB                      ; salida: 	
     845.  00:84FB                      ; toca:		HL, IX
     846.  00:84FB                      inicializa_antorchas:
     847.  00:84FB  DD 21 B3 A8         	LD		IX, antorchas
     848.  00:84FF  DD 36 00 00         	LD		(IX), INACTIVA
     849.  00:8503  21 BA A8            	LD		HL, array_antorcha
     850.  00:8506  DD 74 01            	LD		(IX + 1), H
     851.  00:8509  DD 75 02            	LD		(IX + 2), L
     852.  00:850C  DD 36 03 88         	LD		(IX + 3), POSANTOR1
     853.  00:8510  DD 36 04 97         	LD		(IX + 4), POSANTOR2
     854.  00:8514  DD 36 05 00         	LD		(IX + 5), 0
     855.  00:8518  DD 36 06 FF         	LD		(IX + 6), RESETLLAMA
     856.  00:851C                      fin_inicializa_antorchas:
     857.  00:851C  C9                  	RET
     858.  00:851D                      
     859.  00:851D                      
     860.  00:851D                      ;;=====================================================
     861.  00:851D                      ;;INICIALIZA_esqueletos
     862.  00:851D                      ;;=====================================================	
     863.  00:851D                      ; función: 	inicializa las variables de estructuras de los esqueletos
     864.  00:851D                      ; entrada: 	esqueletos, array_esqueletos
     865.  00:851D                      ; salida: 	
     866.  00:851D                      ; toca:		HL, IX
     867.  00:851D                      inicializa_esqueletos:
     868.  00:851D  DD 21 BD A8         	LD		IX, esqueletos
     869.  00:8521  DD 36 00 00         	LD		(IX), INACTIVA
     870.  00:8525  21 C4 A8            	LD		HL, array_esqueleto
     871.  00:8528  DD 74 01            	LD		(IX + 1), H
     872.  00:852B  DD 75 02            	LD		(IX + 2), L
     873.  00:852E  DD 36 03 88         	LD		(IX + 3), POSESQUEL1
     874.  00:8532  DD 36 04 95         	LD		(IX + 4), POSESQUEL2
     875.  00:8536  DD 36 05 00         	LD		(IX + 5), 0
     876.  00:853A  DD 36 06 19         	LD		(IX + 6), RESETESQUEL
     877.  00:853E                      fin_inicializa_esqueletos:
     878.  00:853E  C9                  	RET
     879.  00:853F                      	
     880.  00:853F                      	
     881.  00:853F                      ;;=====================================================
     882.  00:853F                      ;;PINTA_ANTORCHAS
     883.  00:853F                      ;;=====================================================	
     884.  00:853F                      ; función: 	pinta las antorchas con valores base
     885.  00:853F                      ; entrada: 	antorchas, array_antorcha
     886.  00:853F                      ; salida: 	
     887.  00:853F                      ; toca:		HL
     888.  00:853F                      pinta_extra_fondo:
     889.  00:853F  DD 21 B3 A8         	LD		IX, antorchas
     890.  00:8543                      .examina_sihay_antorchas
     891.  00:8543                      	;hay que pintarlas?
     892.  00:8543  3A 07 A4            	LD		 A, (habitacion_extras)
     893.  00:8546  CB 47               	BIT		 0, A
     894.  00:8548  C2 52 85            	JP		NZ, .hayantorchas			;si el bit 0 de extras es 0 no se pintan antorchas
     895.  00:854B  DD 36 00 00         	LD		(IX), INACTIVA
     896.  00:854F  C3 7B 85            	JP		.examina_sihay_esqueletos
     897.  00:8552                      	
     898.  00:8552                      .hayantorchas:
     899.  00:8552  DD 36 00 01         	LD		(IX), ACTIVA
     900.  00:8556                      	;pinta antorcha izquierdda
     901.  00:8556  DD 66 01            	LD		 H, (IX + 1)
     902.  00:8559  DD 6E 02            	LD		 L, (IX + 2)
     903.  00:855C  22 F7 84            	LD		(wordaux2), HL				;guarda pos array en wordaux2
     904.  00:855F                      	
     905.  00:855F  21 88 18            	LD		HL, TILMAP + POSANTOR1		;calcula posición en tilemap
     906.  00:8562  22 F5 84            	LD		(wordaux1), HL				;guarda valor pos tilemap en wordaux1
     907.  00:8565                      
     908.  00:8565  3E 03               	LD		 A, 3						;nº de filas	
     909.  00:8567  32 F9 84            	LD		(byteaux1), A
     910.  00:856A  3E 01               	LD		 A, 1						;nº de columnas
     911.  00:856C  32 FA 84            	LD		(byteaux2), A				
     912.  00:856F                      	
     913.  00:856F  CD B5 84            	CALL	pinta_array
     914.  00:8572                      	
     915.  00:8572                      	;pinta antorcha derecha
     916.  00:8572  21 97 18            	LD		HL, TILMAP + POSANTOR2		;calcula posición en tilemap
     917.  00:8575  22 F5 84            	LD		(wordaux1), HL				;guarda valor pos tilemap en wordaux1
     918.  00:8578                      	
     919.  00:8578  C3 B5 84            	JP		pinta_array 				;no ecesita CALL ya que la subrutina termina aquí
     920.  00:857B                      	
     921.  00:857B                      .examina_sihay_esqueletos
     922.  00:857B  DD 21 BD A8         	LD		IX, esqueletos
     923.  00:857F                      	;hay que pintarlos?
     924.  00:857F  3A 06 A4            	LD		 A, (habitacion_actual)
     925.  00:8582  CB 6F               	BIT		 5, A
     926.  00:8584  C2 8C 85            	JP		NZ, .hayesqueletos			;si el bit 0 de extras es 0 no se pintan antorchas
     927.  00:8587  DD 36 00 00         	LD		(IX), INACTIVA
     928.  00:858B  C9                  	RET
     929.  00:858C                      
     930.  00:858C                      .hayesqueletos
     931.  00:858C  DD 36 00 01         	LD		(IX), ACTIVA
     932.  00:8590                      	;pinta antorcha izquierdda
     933.  00:8590  DD 66 01            	LD		 H, (IX + 1)
     934.  00:8593  DD 6E 02            	LD		 L, (IX + 2)
     935.  00:8596  22 F7 84            	LD		(wordaux2), HL				;guarda pos array en wordaux2
     936.  00:8599                      	
     937.  00:8599  21 88 18            	LD		HL, TILMAP + POSESQUEL1		;calcula posición en tilemap
     938.  00:859C  22 F5 84            	LD		(wordaux1), HL				;guarda valor pos tilemap en wordaux1
     939.  00:859F                      
     940.  00:859F  3E 04               	LD		 A, 4						;nº de filas	
     941.  00:85A1  32 F9 84            	LD		(byteaux1), A
     942.  00:85A4  3E 03               	LD		 A, 3						;nº de columnas
     943.  00:85A6  32 FA 84            	LD		(byteaux2), A				
     944.  00:85A9                      	
     945.  00:85A9  CD B5 84            	CALL	pinta_array
     946.  00:85AC                      	
     947.  00:85AC                      	;pinta antorcha derecha
     948.  00:85AC  21 95 18            	LD		HL, TILMAP + POSESQUEL2		;calcula posición en tilemap
     949.  00:85AF  22 F5 84            	LD		(wordaux1), HL				;guarda valor pos tilemap en wordaux1
     950.  00:85B2                      	
     951.  00:85B2  C3 B5 84            	JP		pinta_array 				;no ecesita CALL ya que la subrutina termina aquí
     952.  00:85B5                      fin_pinta_extra_fondo:
     953.  00:85B5  C9                  	RET
     954.  00:85B6                      
     955.  00:85B6                      
     956.  00:85B6                      
     957.  00:85B6                      ;;=====================================================
     958.  00:85B6                      ;;ACTUALIZA_ELEMENTOS_FONDO
     959.  00:85B6                      ;;=====================================================	
     960.  00:85B6                      ; función: 	de los elementos que pueda haber en el fondo de la pared (pantalla) actualiza si procede
     961.  00:85B6                      ;			actualmente: antorchas y a futuro esqueletos
     962.  00:85B6                      ; entrada: 	
     963.  00:85B6                      ; salida: 	
     964.  00:85B6                      ; toca:		
     965.  00:85B6                      actualiza_elementos_fondo:
     966.  00:85B6                      .examina_antorchas:
     967.  00:85B6  DD 21 B3 A8         	LD		IX, antorchas
     968.  00:85BA  DD 7E 00            	LD		 A, (IX)
     969.  00:85BD  B7                  	OR		 A
     970.  00:85BE  CA C4 85            	JP 	 	 Z, .examina_esqueletos
     971.  00:85C1                      	
     972.  00:85C1  C3 D1 85            	JP		flip_llamas_antorchas
     973.  00:85C4                      .examina_esqueletos:
     974.  00:85C4  DD 21 BD A8         	LD		IX, esqueletos
     975.  00:85C8  DD 7E 00            	LD		 A, (IX)
     976.  00:85CB  B7                  	OR		 A
     977.  00:85CC  C8                  	RET	 	 Z
     978.  00:85CD                      	
     979.  00:85CD  C3 28 86            	JP		flip_calavera_esqueletos
     980.  00:85D0                      fin_actualiza_elementos_fondo:
     981.  00:85D0  C9                  	RET
     982.  00:85D1                      
     983.  00:85D1                      
     984.  00:85D1                      
     985.  00:85D1                      ;;=====================================================
     986.  00:85D1                      ;;FLIP_LLAMAS_ANTORCHAS
     987.  00:85D1                      ;;=====================================================	
     988.  00:85D1                      ; función: 	modifica las llamas de las antorchas con los tipos que hay
     989.  00:85D1                      ; entrada: 	
     990.  00:85D1                      ; salida: 	
     991.  00:85D1                      ; toca:		
     992.  00:85D1                      flip_llamas_antorchas:
     993.  00:85D1  DD 21 B3 A8         	LD		IX, antorchas
     994.  00:85D5                      	;tiene que cambiar de llama?
     995.  00:85D5  DD 7E 06            	LD		 A, (IX + 6)
     996.  00:85D8  3D                  	DEC		 A
     997.  00:85D9  DD 77 06            	LD		 (IX + 6), A
     998.  00:85DC                      	;no
     999.  00:85DC  C0                  	RET		NZ
    1000.  00:85DD                      	;si
    1001.  00:85DD  DD 36 06 FF         	LD		(IX + 6), RESETLLAMA	
    1002.  00:85E1                      	
    1003.  00:85E1                      	;qué llama toca?
    1004.  00:85E1  DD 7E 05            	LD		 A, (IX + 5)
    1005.  00:85E4  B7                  	OR		 A
    1006.  00:85E5  CA 09 86            	JP		 Z, .llama_par
    1007.  00:85E8                      .llama_impar
    1008.  00:85E8                      	;cambio a llama par
    1009.  00:85E8  AF                   	XOR		 A
    1010.  00:85E9  DD 77 05            	LD		(IX + 5), A
    1011.  00:85EC                      	;pinto llamas
    1012.  00:85EC  01 00 18            	LD		BC, TILMAP
    1013.  00:85EF  3E 88               	LD		 A, POSANTOR1
    1014.  00:85F1  CD 2C 81            	CALL	suma_A_BC
    1015.  00:85F4  16 C4               	LD		 D, MAPLLAMA1
    1016.  00:85F6  CD D4 82            	CALL	pinta_tile_suelto
    1017.  00:85F9                      	
    1018.  00:85F9  01 00 18            	LD		BC, TILMAP
    1019.  00:85FC  3E 97               	LD		 A, POSANTOR2
    1020.  00:85FE  CD 2C 81            	CALL	suma_A_BC
    1021.  00:8601  16 C5               	LD		 D, MAPLLAMA2
    1022.  00:8603  CD D4 82            	CALL	pinta_tile_suelto	
    1023.  00:8606  C3 28 86            	JP		fin_flip_llamas_antorchas
    1024.  00:8609                      .llama_par
    1025.  00:8609                      	;cambio a llama par
    1026.  00:8609  3E 01                	LD		 A, 1
    1027.  00:860B  DD 77 05            	LD		(IX + 5), A
    1028.  00:860E                      	;pinto llamas
    1029.  00:860E  01 00 18            	LD		BC, TILMAP
    1030.  00:8611  3E 88               	LD		 A, POSANTOR1
    1031.  00:8613  CD 2C 81            	CALL	suma_A_BC
    1032.  00:8616  16 C5               	LD		 D, MAPLLAMA2
    1033.  00:8618  CD D4 82            	CALL	pinta_tile_suelto
    1034.  00:861B                      	
    1035.  00:861B  01 00 18            	LD		BC, TILMAP
    1036.  00:861E  3E 97               	LD		 A, POSANTOR2
    1037.  00:8620  CD 2C 81            	CALL	suma_A_BC
    1038.  00:8623  16 C4               	LD		 D, MAPLLAMA1
    1039.  00:8625  C3 D4 82            	JP		pinta_tile_suelto
    1040.  00:8628                      fin_flip_llamas_antorchas:
    1041.  00:8628                      
    1042.  00:8628                      
    1043.  00:8628                      ;;=====================================================
    1044.  00:8628                      ;;FLIP_CALAVERA_ESQUELETOS
    1045.  00:8628                      ;;=====================================================	
    1046.  00:8628                      ; función: 	modifica las calaveras de los esqueletos
    1047.  00:8628                      ; entrada: 	
    1048.  00:8628                      ; salida: 	
    1049.  00:8628                      ; toca:		TODOS.... muy importante DE
    1050.  00:8628                      flip_calavera_esqueletos:
    1051.  00:8628  DD 21 BD A8         	LD		IX, esqueletos
    1052.  00:862C                      	
    1053.  00:862C                      	;tiene que cambiar de calavera?
    1054.  00:862C  DD 7E 06            	LD		 A, (IX + ESTRUCTURA_ESQUELETO.cont_sig_escena)
    1055.  00:862F  3D                  	DEC		 A
    1056.  00:8630  DD 77 06            	LD		 (IX + ESTRUCTURA_ESQUELETO.cont_sig_escena), A
    1057.  00:8633                      	;no
    1058.  00:8633  C0                  	RET		NZ
    1059.  00:8634                      	;si
    1060.  00:8634  DD 36 06 19         	LD		(IX + ESTRUCTURA_ESQUELETO.cont_sig_escena), RESETESQUEL		;resetea contador de nueve escena
    1061.  00:8638                      	
    1062.  00:8638  CD 56 86            	CALL	actualiza_escena_calavera
    1063.  00:863B                      
    1064.  00:863B                      	;pinto calaveras
    1065.  00:863B  01 00 18            	LD		BC, TILMAP
    1066.  00:863E  3E A9               	LD		 A, POSCALAVE1
    1067.  00:8640  CD 2C 81            	CALL	suma_A_BC
    1068.  00:8643  D5                  	PUSH	DE
    1069.  00:8644  56                  	LD		 D, (HL)
    1070.  00:8645  CD D4 82            	CALL	pinta_tile_suelto
    1071.  00:8648                      	
    1072.  00:8648  01 00 18            	LD		BC, TILMAP
    1073.  00:864B  3E B6               	LD		 A, POSCALAVE2
    1074.  00:864D  CD 2C 81            	CALL	suma_A_BC
    1075.  00:8650  E1                  	POP		HL
    1076.  00:8651  56                  	LD		 D, (HL)
    1077.  00:8652  C3 D4 82            	JP		pinta_tile_suelto	
    1078.  00:8655                      fin_flip_calavera_esqueletos:
    1079.  00:8655  00                  var_aux_calavera	DB	0;
    1080.  00:8656                      
    1081.  00:8656                      
    1082.  00:8656                      ;;=====================================================
    1083.  00:8656                      ;;ACTUALIZA_ESCENA_CALAVERA
    1084.  00:8656                      ;;=====================================================	
    1085.  00:8656                      ; función: 	modifica las siguiente calavera a mostrar
    1086.  00:8656                      ; entrada: 	
    1087.  00:8656                      ; salida: 	DE (iportante porque se usa fuera) y ESTRUCTURA_ESQUELETO.escena
    1088.  00:8656                      ; toca:		TODOS.... muy importante DE
    1089.  00:8656                      actualiza_escena_calavera:
    1090.  00:8656                      	;consulta_escena
    1091.  00:8656  DD 7E 05            	LD		 A, (IX + ESTRUCTURA_ESQUELETO.escena)
    1092.  00:8659  32 55 86            	LD		(var_aux_calavera), A
    1093.  00:865C  B7                  	OR		 A
    1094.  00:865D  C2 62 86            	JP		 NZ, .decrementa_escenas
    1095.  00:8660  3E 04               	LD		 A, RESETESCENAESQUEL
    1096.  00:8662                      .decrementa_escenas
    1097.  00:8662  3D                  	DEC		 A
    1098.  00:8663                      .fin_consulta_escena
    1099.  00:8663  DD 77 05            	LD		 (IX + ESTRUCTURA_ESQUELETO.escena), A
    1100.  00:8666                      	
    1101.  00:8666  21 D0 A8            	LD		HL, lista_escenas_calavera
    1102.  00:8669  3A 55 86            	LD		 A, (var_aux_calavera)
    1103.  00:866C  CD 32 81            	CALL	suma_A_HL
    1104.  00:866F                      	
    1105.  00:866F  54                  	LD		 D, H
    1106.  00:8670  5D                  	LD		 E, L
    1107.  00:8671                      fin_actualiza_escena_calavera:
    1108.  00:8671  C9                  	RET
    1109.  00:8672                      
     141   00:8672                      	
     142   00:8672                      	include "subr_sprites.asm"
       1.  00:8672                      
       2.  00:8672                      ;;=====================================================
       3.  00:8672                      ;;SUBRUTINAS ENCARGADAS DE MANEJAR LOS SPRITES
       4.  00:8672                      ;;=====================================================	
       5.  00:8672                      
       6.  00:8672                      
       7.  00:8672                      ;; PREGUNTAR SI A FERNANDO SI ES MEJOR USAR LISTAS O ALGO PARA AHORRAR CÓDIGO
       8.  00:8672                      
       9.  00:8672                      
      10.  00:8672                      
      11.  00:8672                      
      12.  00:8672                      ;;=====================================================
      13.  00:8672                      ;;CARGA_PATRONES_SPRITES_NIVEL
      14.  00:8672                      ;;=====================================================	
      15.  00:8672                      ; función: 	examina el nivel y carga los patrones específicos necesarios
      16.  00:8672                      ; entrada: 	-
      17.  00:8672                      ; salida: 	-
      18.  00:8672                      ; toca: 	-
      19.  00:8672                      carga_patrones_sprites_nivel:
      20.  00:8672  CD 76 86            	CALL 	carga_patrones_nivel_comunes
      21.  00:8675                      	
      22.  00:8675  C9                  	RET		;*********************
      23.  00:8676                      	
      24.  00:8676                      	
      25.  00:8676                      	
      26.  00:8676                      	;~ ;carga patrones no comunes
      27.  00:8676                      	;~ LD		 A, (prota_nivel)
      28.  00:8676                      	;~ OR		 A
      29.  00:8676                      	;~ JP		 Z, carga_patrones_sprites_nivel donde esté el prota
      30.  00:8676                      fin_carga_patrones_sprites_nivel:
      31.  00:8676                      
      32.  00:8676                      
      33.  00:8676                      ;;=====================================================
      34.  00:8676                      ;;CARGA_PATRONES_SPRITES_NIVEL_COMUNES
      35.  00:8676                      ;;=====================================================	
      36.  00:8676                      ; función: 	carga los patrones comunes en todos los niveles
      37.  00:8676                      ; entrada: 	-
      38.  00:8676                      ; salida: 	-
      39.  00:8676                      ; toca: 	-
      40.  00:8676                      carga_patrones_nivel_comunes:	
      41.  00:8676  21 86 9A            	LD		HL, sprites_comunes
      42.  00:8679  11 00 38            	LD		DE, SPRTBL
      43.  00:867C  01 C0 00            	LD		BC, fin_sprites_comunes-sprites_comunes
      44.  00:867F  C3 5C 00            	JP		LDIRVM
      45.  00:8682                      fin_carga_patrones_nivel_comunes:
      46.  00:8682                      
      47.  00:8682                      
      48.  00:8682                      ;;=====================================================
      49.  00:8682                      ;;CARGA_PATRONES_SPRITES_NIVEL1
      50.  00:8682                      ;;=====================================================	
      51.  00:8682                      ; función: 	copia los patrones de los sprites que e van a usar en el nivel 1 en vram
      52.  00:8682                      ; entrada: 	-
      53.  00:8682                      ; salida: 	-
      54.  00:8682                      ; toca: 	-
      55.  00:8682                      carga_patrones_sprites_nivel1:
      56.  00:8682                      
      57.  00:8682                      	;~ ;sprite sprite_reliquia
      58.  00:8682                      	;~ LD		HL,sprite_reliquia
      59.  00:8682                      	;~ LD		DE,#3880
      60.  00:8682                      	;~ LD		BC,32				;32 bytes (sprites de 2 x 2)
      61.  00:8682                      	;~ CALL	LDIRVM
      62.  00:8682                      
      63.  00:8682                      fin_carga_patrones_sprites:
      64.  00:8682  C9                  	RET
      65.  00:8683                      
      66.  00:8683                      
      67.  00:8683                      ;;=====================================================
      68.  00:8683                      ;;ACTUALIZA_ARRAY_SPRITES_VRAM
      69.  00:8683                      ;;=====================================================	
      70.  00:8683                      ; función: 	copia el array con los valores de los sprites (pos, color, plano) en VRAM
      71.  00:8683                      ; entrada: 	-
      72.  00:8683                      ; salida: 	-
      73.  00:8683                      ; toca: 	todos los registros. Como me interesa la velocidad, si necesito copiar de algo lo hago fuera
      74.  00:8683                      render_sprites:
      75.  00:8683                      	;volcando el array con toda la info de los sprites a la zona de atributos de sprites
      76.  00:8683  21 D4 A8            	LD		HL,array_sprites
      77.  00:8686  11 00 1B            	LD		DE,SPRART
      78.  00:8689  01 80 00            	LD		BC,4 * 32				;32 sprites x 4 bytes controlando el sprite (Y, X, plano, color)
      79.  00:868C  C3 5C 00            	JP		LDIRVM
      80.  00:868F                      fin_actualiza_array_sprites_vram:
      81.  00:868F                      
      82.  00:868F                      
      83.  00:868F                      ;;=====================================================
      84.  00:868F                      ;;VUELCA_RESULTADO_PUNTOMIRA_ARRAY
      85.  00:868F                      ;;=====================================================	
      86.  00:868F                      ; función: 	coloca los valores del punto de mira en la variable array_sprites para ser volcados en VRAM
      87.  00:868F                      ; entrada: 	array_sprites_pm, prota.XXXXX
      88.  00:868F                      ; salida: 	-
      89.  00:868F                      ; toca: 	-
      90.  00:868F                      vuelca_resultado_puntomira_array:
      91.  00:868F  DD 21 D4 A8         	LD		IX, array_sprites_pm
      92.  00:8693                      	;posición y de los dos sprites que conforman el punto de mira
      93.  00:8693  3A 2B A7            	LD		 A, (prota.posy)
      94.  00:8696  DD 77 00            	LD		(IX  ), A
      95.  00:8699  DD 77 04            	LD		(IX+4), A
      96.  00:869C                      	;posición x de los dos sprites que conforman el punto de mira
      97.  00:869C  3A 2A A7            	LD		 A, (prota.posx)
      98.  00:869F  DD 77 01            	LD		(IX+1), A
      99.  00:86A2  DD 77 05            	LD		(IX+5), A
     100.  00:86A5                      	;plano
     101.  00:86A5  DD 36 02 00         	LD		(IX+2), 0
     102.  00:86A9  DD 36 06 04         	LD		(IX+6), 4	;al ser sprites de 16x16 hay que ir de 4 en 4
     103.  00:86AD                      	;color
     104.  00:86AD  3A 2C A7            	LD		 A, (prota.escena)
     105.  00:86B0  B7                  	OR		 A
     106.  00:86B1  C2 BD 86            	JP		NZ,.codigo_color_2
     107.  00:86B4                      .codigo_color_1:
     108.  00:86B4  DD 36 03 0F         	LD		(IX+3), COLBLANCO
     109.  00:86B8  DD 36 07 08         	LD		(IX+7), COLROJO
     110.  00:86BC  C9                  	RET
     111.  00:86BD                      .codigo_color_2:
     112.  00:86BD  DD 36 03 08         	LD		(IX+3), COLROJO
     113.  00:86C1  DD 36 07 0F         	LD		(IX+7), COLBLANCO
     114.  00:86C5  C9                  	RET
     115.  00:86C6                      fin_vuelca_resultado_puntomira_array:
     116.  00:86C6                      
     117.  00:86C6                      
     118.  00:86C6                      ;;=====================================================
     119.  00:86C6                      ;;CHECK_PLAYER
     120.  00:86C6                      ;;=====================================================	
     121.  00:86C6                      ; función: 	MIRA EL CONTROL Y APLICA LA LOGICA DE MOVIMIENTO DEL PROTAGONISTA
     122.  00:86C6                      ; entrada: 	-
     123.  00:86C6                      ; salida: 	-
     124.  00:86C6                      ; toca: 	A
     125.  00:86C6                      check_player:
     126.  00:86C6  CD 65 87            	CALL	update_controllers_status
     127.  00:86C9  B7                  	OR		 A
     128.  00:86CA  C8                  	RET		 Z						;si no se ha pulsado nada no se necesita mirar nada
     129.  00:86CB                      
     130.  00:86CB  CB 1F               	RR		 A
     131.  00:86CD  DC E6 86            	CALL	 C, mueve_arriba
     132.  00:86D0  CB 1F               	RR		 A
     133.  00:86D2  DC 02 87            	CALL	 C, mueve_abajo
     134.  00:86D5  CB 1F               	RR		 A
     135.  00:86D7  DC 11 87            	CALL	 C, mueve_izquierda
     136.  00:86DA  CB 1F               	RR		 A
     137.  00:86DC  DC F3 86            	CALL	 C, mueve_derecha
     138.  00:86DF                      	
     139.  00:86DF                      	;zona para mirar disparo Recibe A que tendrá 0000 0 0 X-letra M X-espacio 
     140.  00:86DF  CD 1E 87            	CALL	mira_disparo
     141.  00:86E2                      	
     142.  00:86E2  C3 8F 86            	JP		vuelca_resultado_puntomira_array
     143.  00:86E5                      f;in_check_player:
     144.  00:86E5  C9                  	RET
     145.  00:86E6                      
     143   00:86E6                      	
     144   00:86E6                      	include "subr_teclado_joy.asm"
       1.  00:86E6                      ;;=====================================================
       2.  00:86E6                      ;;SUBRUTINAS QUE CAPTURN EL JOYSTICK Y TECLADO Y MUEVEN PUNTO DE MIRA
       3.  00:86E6                      ;;=====================================================
       4.  00:86E6                      
       5.  00:86E6                      ;;=====================================================
       6.  00:86E6                      ;;MUEVE_ARRIBA
       7.  00:86E6                      ;;=====================================================	
       8.  00:86E6                      ; función: 	decrementa y si se no sale de los límites el valor del punto de mira a la derecha
       9.  00:86E6                      ; entrada: 	-
      10.  00:86E6                      ; salida: 	-
      11.  00:86E6                      ; toca: 	-
      12.  00:86E6                      mueve_arriba:
      13.  00:86E6  F5                  	PUSH		AF
      14.  00:86E7                      	
      15.  00:86E7  3A 2B A7            	LD		 	 A, (prota.posy)
      16.  00:86EA  3D                  	DEC			 A
      17.  00:86EB  CA F1 86            	JP			 Z,.no_decrementa_y
      18.  00:86EE  32 2B A7            	LD			(prota.posy), A
      19.  00:86F1                      	
      20.  00:86F1                      .no_decrementa_y:
      21.  00:86F1  F1                  	POP			AF
      22.  00:86F2                      fin_mueve_arriba:
      23.  00:86F2  C9                  	RET
      24.  00:86F3                      
      25.  00:86F3                      
      26.  00:86F3                      ;;=====================================================
      27.  00:86F3                      ;;MUEVE_DERECHA
      28.  00:86F3                      ;;=====================================================	
      29.  00:86F3                      ; función: 	incrementa si se no sale de los límites el valor del punto de mira a la derecha
      30.  00:86F3                      ; entrada: 	-
      31.  00:86F3                      ; salida: 	-
      32.  00:86F3                      ; toca: 	-
      33.  00:86F3                      mueve_derecha:
      34.  00:86F3  F5                  	PUSH		AF
      35.  00:86F4                      	
      36.  00:86F4  3A 2A A7            	LD		 	 A, (prota.posx)
      37.  00:86F7  3C                  	INC			 A
      38.  00:86F8  FE EF               	CP			 A, LIMPANTDER - 16
      39.  00:86FA  CA 00 87            	JP			 Z, .no_incrementa_x
      40.  00:86FD  32 2A A7            	LD			(prota.posx), A
      41.  00:8700                      	
      42.  00:8700                      .no_incrementa_x:
      43.  00:8700  F1                  	POP			AF
      44.  00:8701                      fin_mueve_derecha:
      45.  00:8701  C9                  	RET
      46.  00:8702                      
      47.  00:8702                      
      48.  00:8702                      ;;=====================================================
      49.  00:8702                      ;;MUEVE_ABAJO
      50.  00:8702                      ;;=====================================================	
      51.  00:8702                      ; función: 	incrementa y si se no sale de los límites el valor del punto de mira abajo
      52.  00:8702                      ; entrada: 	-
      53.  00:8702                      ; salida: 	-
      54.  00:8702                      ; toca: 	-
      55.  00:8702                      mueve_abajo:
      56.  00:8702  F5                  	PUSH		AF
      57.  00:8703                      	
      58.  00:8703  3A 2B A7            	LD		 	 A, (prota.posy)
      59.  00:8706  3C                  	INC			 A
      60.  00:8707  FE 70               	CP			 A, LIMPANTABA - 16
      61.  00:8709  CA 0F 87            	JP			 Z,.no_incrementa_y
      62.  00:870C  32 2B A7            	LD			(prota.posy), A
      63.  00:870F                      	
      64.  00:870F                      .no_incrementa_y:
      65.  00:870F  F1                  	POP			AF
      66.  00:8710                      fin_mueve_abajo:
      67.  00:8710  C9                  	RET
      68.  00:8711                      	
      69.  00:8711                      	
      70.  00:8711                      ;;=====================================================
      71.  00:8711                      ;;MUEVE_IZQUIERDA
      72.  00:8711                      ;;=====================================================	
      73.  00:8711                      ; función: 	decrementa x si se no sale de los límites el valor del punto de mira a la izquierda
      74.  00:8711                      ; entrada: 	-
      75.  00:8711                      ; salida: 	-
      76.  00:8711                      ; toca: 	-
      77.  00:8711                      mueve_izquierda:
      78.  00:8711  F5                  	PUSH		AF
      79.  00:8712                      	
      80.  00:8712  3A 2A A7            	LD		 	 A, (prota.posx)
      81.  00:8715  3D                  	DEC			 A
      82.  00:8716                      ;	CP			 A, LIMPANTIZQ
      83.  00:8716  CA 1C 87            	JP			 Z,.no_decrementa_x
      84.  00:8719  32 2A A7            	LD			(prota.posx), A
      85.  00:871C                      	
      86.  00:871C                      .no_decrementa_x:
      87.  00:871C  F1                  	POP			AF
      88.  00:871D                      fin_mueve_izquierda:
      89.  00:871D  C9                  	RET
      90.  00:871E                      
      91.  00:871E                      
      92.  00:871E                      
      93.  00:871E                      ;;=====================================================
      94.  00:871E                      ;;MIRA_DISPARO
      95.  00:871E                      ;;=====================================================	
      96.  00:871E                      ; función: 	Mira si se ha pulsado alguno de los dos disparos
      97.  00:871E                      ; entrada: 	A que tendrá 0000 0 0 X-letra M X-espacio 
      98.  00:871E                      ; salida: 	-
      99.  00:871E                      ; toca: 	A, B
     100.  00:871E                      mira_disparo:
     101.  00:871E                      .mira_boton_pulsado1:
     102.  00:871E  CB 1F               	RR		 A						;preparo en el carry si se ha pulsado botón 1
     103.  00:8720  D2 49 87            	JP		 NC, .mira_boton_pulsado2					
     104.  00:8723  F5                  	PUSH	AF						;copia A para usarlo después
     105.  00:8724                      	;se ha pulsado barra o boton 1
     106.  00:8724  3A 2F A7            	LD		 A, (prota.cadencia)
     107.  00:8727  B7                  	OR		 A
     108.  00:8728  CA 36 87            	JP		 Z, .efectua_disparo	;toca efectuar disparo realmente porque se ha pulsado lo suficiente el disparo
     109.  00:872B                      .no_efectua_disparo: ;IF
     110.  00:872B  3D                  		DEC		 A
     111.  00:872C  32 2F A7            		LD		(prota.cadencia), A	;resto cadencia hasta próximo disparo "real" (no automático por haber pulsado una tecla e ir demasiado rápido)
     112.  00:872F  AF                  		XOR		 A 
     113.  00:8730  32 2C A7            		LD		(prota.escena), A
     114.  00:8733  C3 48 87            		JP		.fin_mira_disparo1
     115.  00:8736                      .efectua_disparo:	;ELSE
     116.  00:8736                      		;cambio colores del sprite
     117.  00:8736  3A 2C A7            		LD		 A, (prota.escena)
     118.  00:8739  2F                  		CPL		 
     119.  00:873A  32 2C A7            		LD		(prota.escena), A
     120.  00:873D                      		;reseteo cadencia para el próximo disparo
     121.  00:873D  3E 04               		LD		 A, LIMCADENCIA						;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
     122.  00:873F  32 2F A7            		LD		 (prota.cadencia), A				;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
     123.  00:8742                      		;ejecuto sonido								;; ajustar cadencia y que cuando el disparo sea efectivo se reseteen los colores
     124.  00:8742  AF                  		XOR		 A
     125.  00:8743  0E 01               		LD		 C, 1
     126.  00:8745  CD 0D 8E            		CALL	ayFX_INIT	
     127.  00:8748                      .fin_mira_disparo1
     128.  00:8748                      
     129.  00:8748  F1                  	POP		AF
     130.  00:8749                      .mira_boton_pulsado2:
     131.  00:8749  CB 1F               	RR		 A
     132.  00:874B  D0                  	RET		 NC
     133.  00:874C                      	;se ha pulsado shift o boton 2
     134.  00:874C                      	
     135.  00:874C  3A 3C A7            	LD		 A, (prota_reliquias)	;miro si le quedan reliquias
     136.  00:874F  B7                  	OR		 A
     137.  00:8750  C8                  	RET		 Z						;si no le quedan salgo ya
     138.  00:8751                      	
     139.  00:8751                      	;actuaciones si se usa la reliquia botón 2 o M y quedn reliquias.. (antes ya se puso el valor en A)
     140.  00:8751  3A 3C A7            	LD		A, (prota_reliquias)
     141.  00:8754  3D                  	DEC		 A
     142.  00:8755  32 3C A7            	LD		(prota_reliquias), A
     143.  00:8758                      	
     144.  00:8758  3E 01               	LD		 A, 1
     145.  00:875A  0E 01               	LD		 C, 1
     146.  00:875C  CD 0D 8E            	CALL	ayFX_INIT
     147.  00:875F                      	
     148.  00:875F  CD 9B 84            	CALL 	efecto_imagen_tira_reliquia
     149.  00:8762                      	
     150.  00:8762  C3 B9 82            	JP		pinta_reliquias
     151.  00:8765                      fin_mira_disparo:
     152.  00:8765                      ;	RET		
     153.  00:8765                      
     154.  00:8765                      
     155.  00:8765                      ;;============================================================
     156.  00:8765                      ;;Código de D. Fernando García (BitVision) (al que siempre le estaré agradecido)
     157.  00:8765                      ;check_8th_keyboard_row
     158.  00:8765                      ;read_joy_0
     159.  00:8765                      ;check_8th_keyboard_row
     160.  00:8765                      ;check_4th_keyboard_row
     161.  00:8765                      ;;============================================================
     162.  00:8765                      ;;  usa constantes:
     163.  00:8765                      ;PSG_A  equ  0a0h  ;reg address
     164.  00:8765                      ;PSG_W  equ  0a1h  ;reg data WR
     165.  00:8765                      ;PSG_R  equ  0a2h  ;reg data
     166.  00:8765                      
     167.  00:8765                      ;;=====================================================
     168.  00:8765                      ;;update_controllers_status
     169.  00:8765                      ;;=====================================================	
     170.  00:8765                      ;depends on the next rountine
     171.  00:8765                      ;  returns
     172.  00:8765                      ;  a - 0P2TRLDU
     173.  00:8765                      
     174.  00:8765                      update_controllers_status:
     175.  00:8765  CD B0 87                 call  check_8th_keyboard_row
     176.  00:8768                      [4]  rrc    a
     176.  00:8768  CB 0F CB 0F CB 0F CB 0F 
     177.  00:8770  47                       ld    b,a    		;save for later  xxxTRDUL
     178.  00:8771                      
     179.  00:8771  E6 01                    and    #01    		;save L
     180.  00:8773  CB 27                    sla    a
     181.  00:8775  CB 27                    sla    a    		;now 00000L00
     182.  00:8777  4F                       ld    c,a    		;save for later
     183.  00:8778                      
     184.  00:8778  78                       ld    a,b    		;again we've got xxxTRDUL. I am interested on leaving 000000DU on a
     185.  00:8779  CB 3F                    srl    a
     186.  00:877B  E6 03                    and    00000011b
     187.  00:877D                      						;we've got 000000DU on a
     188.  00:877D  B1                       or    c    		;now we've got 00000LDU
     189.  00:877E  4F                       ld    c,a    		;save for later
     190.  00:877F                      
     191.  00:877F  78                       ld    a,b
     192.  00:8780  E6 18                    and    00011000b 	;we've got 000TR000
     193.  00:8782  B1                       or    c
     194.  00:8783                           ;finally    000TRLDU
     195.  00:8783                      
     196.  00:8783                           ;and    00000100   ;preserve just
     197.  00:8783  47                       ld    b,a    		;save for later
     198.  00:8784  CD BE 87                 call  check_4th_keyboard_row      ;check M & P
     199.  00:8787  F5                       push  af
     200.  00:8788  E6 04                    and    00000100b	;filter just M
     201.  00:878A  87                       add    a
     202.  00:878B  87                       add    a
     203.  00:878C  87                       add    a           ;shift 3th to 6th bit
     204.  00:878D  B0                       or    b           	;merge with previous
     205.  00:878E  47                       ld    b,a
     206.  00:878F                      
     207.  00:878F  CD 9C 87                 call  read_joy_0
     208.  00:8792  E6 3F                    and    00111111b  	;we want just 002TRLDU  from joystick    (2 is second trigger)
     209.  00:8794  B0                       or    b      		;added 000TRLDU from keyboard
     210.  00:8795  47                       ld    b,a      	;save for later
     211.  00:8796  F1                       pop    af      	; let's check on P
     212.  00:8797                      
     213.  00:8797  E6 20                    and    00100000b
     214.  00:8799  87                       add    a      		;P status on 6th bit  ... so 0P2TRLDU
     215.  00:879A  B0                       or    b
     216.  00:879B                      
     217.  00:879B  C9                       ret
     218.  00:879C                      
     219.  00:879C                      
     220.  00:879C                      ;ret
     221.  00:879C                      ;  a -            xx2TRLDU
     222.  00:879C                      read_joy_0:
     223.  00:879C  F3                         di
     224.  00:879D  3E 0F                      ld    a,15
     225.  00:879F  D3 A0                      out    [PSG_A],a
     226.  00:87A1  DB A2                      in    a,[PSG_R]
     227.  00:87A3  E6 BF                      and    10111111b        ;joy0
     228.  00:87A5                      
     229.  00:87A5  D3 A1                      out    [PSG_W],a        ;set joy0
     230.  00:87A7                      
     231.  00:87A7  3E 0E                      ld    a,14
     232.  00:87A9  D3 A0                      out    [PSG_A],a
     233.  00:87AB  DB A2                      in    a,[PSG_R]
     234.  00:87AD                      
     235.  00:87AD  FB                         ei
     236.  00:87AE  2F                         cpl
     237.  00:87AF                      
     238.  00:87AF  C9                         ret
     239.  00:87B0                      
     240.  00:87B0                      
     241.  00:87B0                      ;ret
     242.  00:87B0                      ;  a -      RDULxxxT
     243.  00:87B0                      check_8th_keyboard_row:
     244.  00:87B0  F3                       di
     245.  00:87B1  DB AA                    in    a,(#aa)
     246.  00:87B3  E6 F0                    and    #f0
     247.  00:87B5  F6 08                    or    8
     248.  00:87B7  D3 AA                    out    (#aa),a
     249.  00:87B9  DB A9                    in    a,(#a9)
     250.  00:87BB  FB                       ei
     251.  00:87BC  2F                       cpl
     252.  00:87BD                      
     253.  00:87BD  C9                       ret
     254.  00:87BE                      
     255.  00:87BE                      
     256.  00:87BE                      ;ret
     257.  00:87BE                      ;  a -      xxxxxMxx
     258.  00:87BE                      check_4th_keyboard_row:
     259.  00:87BE  F3                       di
     260.  00:87BF  DB AA                    in    a,(#aa)
     261.  00:87C1  E6 F0                    and    #f0
     262.  00:87C3  F6 04                    or    4
     263.  00:87C5  D3 AA                    out    (#aa),a
     264.  00:87C7  DB A9                    in    a,(#a9)
     265.  00:87C9  FB                       ei
     266.  00:87CA  2F                       cpl
     267.  00:87CB                      
     268.  00:87CB  C9                       ret
     269.  00:87CC                      
     270.  00:87CC                      ;--------------------------------------------
     271.  00:87CC                      
     272.  00:87CC                      
     273.  00:87CC                      
     274.  00:87CC                      
     275.  00:87CC                      
     276.  00:87CC                      
     277.  00:87CC                      
     278.  00:87CC                      
     145   00:87CC                      	
     146   00:87CC                      	include "subr_sonido.asm"
       1.  00:87CC                      
       2.  00:87CC                      ;;=====================================================
       3.  00:87CC                      ;;SUBRUTINAS PARA SONIDOS
       4.  00:87CC                      ;;=====================================================	
       5.  00:87CC                      
       6.  00:87CC                      ;;=====================================================
       7.  00:87CC                      ;;INICIALIZA_REPLAYER_EFECTOS_INTERRUPCIONES
       8.  00:87CC                      ;;=====================================================	
       9.  00:87CC                      ; función: 	inicializa: replayer de música, player de efectos e interrupciones
      10.  00:87CC                      ; entrada: 	-
      11.  00:87CC                      ; salida: 	-
      12.  00:87CC                      ; toca: 	HL, A
      13.  00:87CC                      inicializa_replayer_efectos_interrupciones:
      14.  00:87CC  F3                  	DI
      15.  00:87CD                      
      16.  00:87CD                      	;inicializacion de replayer musical
      17.  00:87CD  21 75 8E            	LD		HL, song-99			; hl <- initial address of module - 99
      18.  00:87D0  CD 0C 88            	CALL	PT3_INIT			; Inits PT3 player
      19.  00:87D3                      		
      20.  00:87D3                      	;inicializacion del reproductor de efectos sonoros
      21.  00:87D3  21 40 98            	LD		HL, sfx_bank
      22.  00:87D6  CD FB 8D            	CALL	ayFX_SETUP
      23.  00:87D9                      	
      24.  00:87D9                      	;Engancha nuestra rutina de servicio al gancha que deja preparado la BIOS cuando se termina de pintar la pantalla (50 o 60 veces por segundo)
      25.  00:87D9  3E C3               	LD		A, #C3
      26.  00:87DB  32 9F FD            	LD		[H.TIMI], A
      27.  00:87DE  21 E6 87            	LD		HL, subrutina_isr
      28.  00:87E1  22 A0 FD            	LD		[H.TIMI+1], HL
      29.  00:87E4                      	
      30.  00:87E4  FB                  	EI		;optimizacion:
      31.  00:87E5                      			;piensa que las dos ultimas lineas podrian haber sido: 
      32.  00:87E5                      			;ei						;primero ei
      33.  00:87E5                      			;ld		[H.TIMI+1],hl	;luego este ld
      34.  00:87E5                      									;PENSAR (y consultar ) PORQUE!!!!
      35.  00:87E5                      fin_inicializa_replayer_efectos_interrupciones:
      36.  00:87E5  C9                  	RET
      37.  00:87E6                      
      38.  00:87E6                      
      39.  00:87E6                      
      40.  00:87E6                      ;;=====================================================
      41.  00:87E6                      ;;NUESTRA_ISR
      42.  00:87E6                      ;;=====================================================	
      43.  00:87E6                      ; función: 	envía datos al PSG + toca un trozo de música + toca trozo de 
      44.  00:87E6                      ; entrada: 	-
      45.  00:87E6                      ; salida: 	-
      46.  00:87E6                      ; toca: 	HL, A
      47.  00:87E6                      subrutina_isr:
      48.  00:87E6  CD 51 8D            	CALL	PT3_ROUT			;envia los datos a los registros del PSG
      49.  00:87E9  CD 59 8C            	CALL	PT3_PLAY			;calcula el siguiente 'trocito' de musica que sera enviado al proxima vez
      50.  00:87EC  C3 43 8E            	JP		ayFX_PLAY			;calcula el siguiente 'trocito' de efecto especial de sonido que sera enviado la proxima vez
      51.  00:87EF                      fin_subrutina_isr:
      52.  00:87EF                      	;RET
      53.  00:87EF                      
      54.  00:87EF                      
      55.  00:87EF                      
      56.  00:87EF                      ;;=====================================================
      57.  00:87EF                      ;;DEFINICIÓN DE SUBRUTINAS DE FERNANDO PARA COMPRESIÓN Y SONIDO
      58.  00:87EF                      ;;=====================================================
      59.  00:87EF                      subrutinas_sonido:
      60.  00:87EF                      	include	"PT3-ROM_sjasm.asm"
       1:  00:87EF                      		; --- PT3 REPLAYER WORKING ON ROM ---
       2:  00:87EF                      		; --- Can be assembled with asMSX ---
       3:  00:87EF                      		; --- ROM version: MSX-KUN        ---
       4:  00:87EF                      		; --- asMSX version 2: SapphiRe   ---
       5:  00:87EF                      
       6:  00:87EF                      ; Based on MSX full version of PT3 by Dioniso
       7:  00:87EF                      ;
       8:  00:87EF                      ; This version of the replayer can be used with any note table
       9:  00:87EF                      ; This version also allows the use of PT3 commands
      10:  00:87EF                      ; First 99 bytes of each PT3 module should be stripped off
      11:  00:87EF                      ;
      12:  00:87EF                      ; PLAY and PSG WRITE routines seperated to allow independent calls
      13:  00:87EF                      ;
      14:  00:87EF                      ; ROM LENGTH: 1549 bytes
      15:  00:87EF                      ; RAM LENGTH:  576 bytes
      16:  00:87EF                      
      17:  00:87EF                      
      18:  00:87EF                      
      19:  00:87EF                      ;SJASM version by BTV 2016
      20:  00:87EF                      
      21:  00:87EF                      
      22:  00:87EF                      		; --- CONSTANT VALUES DEFINITION ---
      23:  00:87EF                      
      24:  00:87EF                      ;ChannelsVars
      25:  00:87EF                      ;struc	CHNPRM
      26:  00:87EF                      ;reset group
      27:  00:87EF  (00:0000)           CHNPRM_PsInOr	equ 0	;RESB 1
      28:  00:87EF  (00:0001)           CHNPRM_PsInSm	equ 1	;RESB 1
      29:  00:87EF  (00:0002)           CHNPRM_CrAmSl	equ 2	;RESB 1
      30:  00:87EF  (00:0003)           CHNPRM_CrNsSl	equ 3	;RESB 1
      31:  00:87EF  (00:0004)           CHNPRM_CrEnSl	equ 4	;RESB 1
      32:  00:87EF  (00:0005)           CHNPRM_TSlCnt	equ 5	;RESB 1
      33:  00:87EF  (00:0006)           CHNPRM_CrTnSl	equ 6	;RESW 1
      34:  00:87EF  (00:0008)           CHNPRM_TnAcc	equ 8	;RESW 1
      35:  00:87EF  (00:000A)           CHNPRM_COnOff	equ 10	;RESB 1
      36:  00:87EF                      ;reset group
      37:  00:87EF                      
      38:  00:87EF  (00:000B)           CHNPRM_OnOffD	equ 11	;RESB 1
      39:  00:87EF                      
      40:  00:87EF                      ;IX for PTDECOD here [+12]
      41:  00:87EF  (00:000C)           CHNPRM_OffOnD	equ 12	;RESB 1
      42:  00:87EF  (00:000D)           CHNPRM_OrnPtr	equ 13	;RESW 1
      43:  00:87EF  (00:000F)           CHNPRM_SamPtr	equ 15	;RESW 1
      44:  00:87EF  (00:0011)           CHNPRM_NNtSkp	equ 17	;RESB 1
      45:  00:87EF  (00:0012)           CHNPRM_Note	equ 18	;RESB 1
      46:  00:87EF  (00:0013)           CHNPRM_SlToNt	equ 19	;RESB 1
      47:  00:87EF  (00:0014)           CHNPRM_Env_En	equ 20	;RESB 1
      48:  00:87EF  (00:0015)           CHNPRM_Flags	equ 21	;RESB 1
      49:  00:87EF                       ;Enabled - 0,SimpleGliss - 2
      50:  00:87EF  (00:0016)           CHNPRM_TnSlDl	equ 22	;RESB 1
      51:  00:87EF  (00:0017)           CHNPRM_TSlStp	equ 23	;RESW 1
      52:  00:87EF  (00:0019)           CHNPRM_TnDelt	equ 25	;RESW 1
      53:  00:87EF  (00:001B)           CHNPRM_NtSkCn	equ 27	;RESB 1
      54:  00:87EF  (00:001C)           CHNPRM_Volume	equ 28	;RESB 1
      55:  00:87EF  (00:001D)           CHNPRM_Size	equ 29	;RESB 1
      56:  00:87EF                      ;endstruc
      57:  00:87EF                      
      58:  00:87EF                      ;struc	AR
      59:  00:87EF  (00:0000)           AR_TonA		equ 0	;RESW 1
      60:  00:87EF  (00:0002)           AR_TonB		equ 2	;RESW 1
      61:  00:87EF  (00:0004)           AR_TonC		equ 4	;RESW 1
      62:  00:87EF  (00:0006)           AR_Noise	equ 6	;RESB 1
      63:  00:87EF  (00:0007)           AR_Mixer	equ 7	;RESB 1
      64:  00:87EF  (00:0008)           AR_AmplA	equ 8	;RESB 1
      65:  00:87EF  (00:0009)           AR_AmplB	equ 9	;RESB 1
      66:  00:87EF  (00:000A)           AR_AmplC	equ 10	;RESB 1
      67:  00:87EF  (00:000B)           AR_Env		equ 11	;RESW 1
      68:  00:87EF  (00:000D)           AR_EnvTp	equ 13	;RESB 1
      69:  00:87EF                      ;endstruc
      70:  00:87EF                      
      71:  00:87EF                      		; --- CODE STARTS HERE ---
      72:  00:87EF                      
      73:  00:87EF  21 00 F0            CHECKLP:	LD	HL,PT3_SETUP
      74:  00:87F2  CB FE               		SET	7,[HL]
      75:  00:87F4  CB 46               		BIT	0,[HL]
      76:  00:87F6  C8                  		RET	Z
      77:  00:87F7  E1                  		POP	HL
      78:  00:87F8  21 7A F0            		LD	HL,DelyCnt
      79:  00:87FB  34                  		INC	[HL]
      80:  00:87FC  21 3E F0            		LD	HL,ChanA+CHNPRM_NtSkCn
      81:  00:87FF  34                  		INC	[HL]
      82:  00:8800  AF                  PT3_MUTE:	XOR	A
      83:  00:8801  67                  		LD	H,A
      84:  00:8802  6F                  		LD	L,A
      85:  00:8803  32 48 F1            		LD	[AYREGS+AR_AmplA],A
      86:  00:8806  22 49 F1            		LD	[AYREGS+AR_AmplB],HL
      87:  00:8809  C3 52 8D            		JP	ROUT_A0
      88:  00:880C                      
      89:  00:880C                      PT3_INIT:	;HL - AddressOfModule - 100
      90:  00:880C  22 01 F0            		LD [PT3_MODADDR],HL
      91:  00:880F  E5                  		PUSH HL
      92:  00:8810  11 64 00            		LD DE,100
      93:  00:8813  19                  		ADD HL,DE
      94:  00:8814  7E                  		LD A,[HL]
      95:  00:8815  32 1C F0            		LD [PT3_Delay],A
      96:  00:8818  E5                  		PUSH HL
      97:  00:8819  DD E1               		POP IX
      98:  00:881B  19                  		ADD HL,DE
      99:  00:881C  22 03 F0            		LD [PT3_CrPsPtr],HL
     100:  00:881F  DD 5E 02            		LD E,[IX+102-100]
     101:  00:8822  19                  		ADD HL,DE
     102:  00:8823  23                  		INC HL
     103:  00:8824  22 18 F0            		LD [PT3_LPosPtr],HL
     104:  00:8827  D1                  		POP DE
     105:  00:8828  DD 6E 03            		LD L,[IX+103-100]
     106:  00:882B  DD 66 04            		LD H,[IX+104-100]
     107:  00:882E  19                  		ADD HL,DE
     108:  00:882F  22 1A F0            		LD [PT3_PatsPtr],HL
     109:  00:8832  21 A9 00            		LD HL,169
     110:  00:8835  19                  		ADD HL,DE
     111:  00:8836  22 07 F0            		LD [PT3_OrnPtrs],HL
     112:  00:8839  21 69 00            		LD HL,105
     113:  00:883C  19                  		ADD HL,DE
     114:  00:883D  22 05 F0            		LD [PT3_SAMPTRS],HL
     115:  00:8840  21 00 F0            		LD HL,PT3_SETUP
     116:  00:8843  CB BE               		RES 7,[HL]
     117:  00:8845                      
     118:  00:8845                      		; --- note table data depacker ---
     119:  00:8845                      		; Depacks first 12 tones of each tone table
     120:  00:8845                      
     121:  00:8845  11 C6 8D            		LD DE,T_PACK
     122:  00:8848  01 B1 F1            		LD BC,T1_+(2*49)-1
     123:  00:884B  1A                  .TP_0:		LD A,[DE]
     124:  00:884C  13                  		INC DE
     125:  00:884D  FE 1E               		CP 15*2
     126:  00:884F  30 06               		JR NC,.TP_1
     127:  00:8851  67                  		LD H,A
     128:  00:8852  1A                  		LD A,[DE]
     129:  00:8853  6F                  		LD L,A
     130:  00:8854  13                  		INC DE
     131:  00:8855  18 07               		JR .TP_2
     132:  00:8857  D5                  .TP_1:		PUSH DE
     133:  00:8858  16 00               		LD D,0
     134:  00:885A  5F                  		LD E,A
     135:  00:885B  19                  		ADD HL,DE
     136:  00:885C  19                  		ADD HL,DE
     137:  00:885D  D1                  		POP DE
     138:  00:885E  7C                  .TP_2:		LD A,H
     139:  00:885F  02                  		LD [BC],A
     140:  00:8860  0B                  		DEC BC
     141:  00:8861  7D                  		LD A,L
     142:  00:8862  02                  		LD [BC],A
     143:  00:8863  0B                  		DEC BC
     144:  00:8864  D6 F0               		SUB $F0
     145:  00:8866  20 E3               		JR NZ,.TP_0
     146:  00:8868                      
     147:  00:8868                      		; --- INITIALIZE PT3 VARIABLES ---
     148:  00:8868  21 23 F0            		LD HL,VARS
     149:  00:886B  77                  		LD [HL],A
     150:  00:886C  11 24 F0            		LD DE,VARS+1
     151:  00:886F  01 2C 01            		LD BC,VAR0END-VARS-1
     152:  00:8872  ED B0               		LDIR
     153:  00:8874                      
     154:  00:8874  3C                  		INC A
     155:  00:8875  32 7A F0            		LD [DelyCnt],A
     156:  00:8878  21 01 F0            		LD HL,$F001 ;H - CHNPRM_Volume, L - CHNPRM_NtSkCn
     157:  00:887B  22 3E F0            		LD [ChanA+CHNPRM_NtSkCn],HL
     158:  00:887E  22 5B F0            		LD [ChanB+CHNPRM_NtSkCn],HL
     159:  00:8881  22 78 F0            		LD [ChanC+CHNPRM_NtSkCn],HL
     160:  00:8884                      
     161:  00:8884  21 C2 8D            		LD HL,EMPTYSAMORN
     162:  00:8887  22 12 F0            		LD [PT3_AdInPtA],HL ;ptr to zero
     163:  00:888A  22 30 F0            		LD [ChanA+CHNPRM_OrnPtr],HL ;ornament 0 is "0,1,0"
     164:  00:888D  22 4D F0            		LD [ChanB+CHNPRM_OrnPtr],HL ;in all versions from
     165:  00:8890  22 6A F0            		LD [ChanC+CHNPRM_OrnPtr],HL ;3.xx to 3.6x and VTII
     166:  00:8893                      
     167:  00:8893  22 32 F0            		LD [ChanA+CHNPRM_SamPtr],HL ;S1 There is no default
     168:  00:8896  22 4F F0            		LD [ChanB+CHNPRM_SamPtr],HL ;S2 sample in PT3, so, you
     169:  00:8899  22 6C F0            		LD [ChanC+CHNPRM_SamPtr],HL ;S3 can comment S1,2,3; see
     170:  00:889C                      					    ;also EMPTYSAMORN comment
     171:  00:889C                      
     172:  00:889C                      		; --- NOTE TABLE CREATOR (c) Ivan Roshin, adapted by SapphiRe ---
     173:  00:889C  DD 7E FF            		LD A,[IX+99-100] ;TONE TABLE NUMBER
     174:  00:889F  17                  		RLA
     175:  00:88A0  E6 07               		AND 7
     176:  00:88A2  21 72 8D            		LD HL,NT_DATA
     177:  00:88A5  D5                  		PUSH DE
     178:  00:88A6  50                  		LD D,B		; ld d,0 (bc is 0000 after LDIR)
     179:  00:88A7  87                  		ADD A,A
     180:  00:88A8  5F                  		LD E,A
     181:  00:88A9  19                  		ADD HL,DE	; hl -> init of correct note table data
     182:  00:88AA  5E                  		LD E,[HL]
     183:  00:88AB  23                  		INC HL
     184:  00:88AC  CB 3B               		SRL E
     185:  00:88AE  9F                  		SBC A,A
     186:  00:88AF  E6 A7               		AND $A7			;$00 (NOP) or $A7 (AND A)
     187:  00:88B1  32 21 F0            		LD [PT3_NTL3],A		; CORRECT INSTRUCTION, DEPENDS OF SELECTED TABLE
     188:  00:88B4  3E C9               		LD A,$C9		; RET CODE
     189:  00:88B6  32 22 F0            		LD [PT3_NTL3+1],A	; RET PLACED
     190:  00:88B9  EB                  		EX DE,HL
     191:  00:88BA  C1                  		POP BC ;BC=T1_
     192:  00:88BB  09                  		ADD HL,BC
     193:  00:88BC                      
     194:  00:88BC  1A                  		LD A,[DE]                           
     195:  00:88BD                      
     196:  00:88BD  01 82 8D            		LD BC,T_
     197:  00:88C0  81                  		ADD A,C
     198:  00:88C1  4F                  		LD C,A
     199:  00:88C2  88                  		ADC A,B
     200:  00:88C3                      
     201:  00:88C3  91                  		SUB C
     202:  00:88C4  47                  		LD B,A
     203:  00:88C5  C5                  		PUSH BC
     204:  00:88C6  11 80 F0            		LD DE,NT_
     205:  00:88C9  D5                  		PUSH DE
     206:  00:88CA                      
     207:  00:88CA  06 0C               		LD B,12
     208:  00:88CC  C5                  .L1:		PUSH BC
     209:  00:88CD  4E                  		LD C,[HL]
     210:  00:88CE  23                  		INC HL
     211:  00:88CF  E5                  		PUSH HL
     212:  00:88D0  46                  		LD B,[HL]
     213:  00:88D1                      
     214:  00:88D1  D5                  		PUSH DE
     215:  00:88D2  EB                  		EX DE,HL
     216:  00:88D3  11 17 00            		LD DE,23
     217:  00:88D6  DD 26 08            		db $DD,$26,$08	;LD XH,8
     218:  00:88D9                      
     219:  00:88D9  CB 38               .L2:		SRL B
     220:  00:88DB  CB 19               		RR C
     221:  00:88DD  CD 21 F0            .L3:		CALL PT3_NTL3	;AND A or NOP
     222:  00:88E0  79                  		LD A,C
     223:  00:88E1  8A                  		ADC A,D	;=ADC 0
     224:  00:88E2  77                  		LD [HL],A
     225:  00:88E3  23                  		INC HL
     226:  00:88E4  78                  		LD A,B
     227:  00:88E5  8A                  		ADC A,D
     228:  00:88E6  77                  		LD [HL],A
     229:  00:88E7  19                  		ADD HL,DE
     230:  00:88E8  DD 25               		db $DD,$25	;DEC XH
     231:  00:88EA  20 ED               		JR NZ,.L2
     232:  00:88EC                      
     233:  00:88EC  D1                  		POP DE
     234:  00:88ED  13                  		INC DE
     235:  00:88EE  13                  		INC DE
     236:  00:88EF  E1                  		POP HL
     237:  00:88F0  23                  		INC HL
     238:  00:88F1  C1                  		POP BC
     239:  00:88F2  10 D8               		DJNZ .L1
     240:  00:88F4                      
     241:  00:88F4  E1                  		POP HL
     242:  00:88F5  D1                  		POP DE
     243:  00:88F6                      
     244:  00:88F6  7B                  		LD A,E
     245:  00:88F7  D5                  		PUSH DE
     246:  00:88F8  11 8E 8D            		LD DE,TCOLD_1
     247:  00:88FB  BB                  		CP E
     248:  00:88FC  D1                  		POP DE
     249:  00:88FD  20 05               		JR NZ,.CORR_1
     250:  00:88FF  3E FD               		LD A,$FD
     251:  00:8901  32 AE F0            		LD [NT_+$2E],A
     252:  00:8904                      
     253:  00:8904  1A                  .CORR_1:	LD A,[DE]
     254:  00:8905  A7                  		AND A
     255:  00:8906  28 11               		JR Z,.TC_EXIT
     256:  00:8908  1F                  		RRA
     257:  00:8909  F5                  		PUSH AF
     258:  00:890A  87                  		ADD A,A
     259:  00:890B  4F                  		LD C,A
     260:  00:890C  09                  		ADD HL,BC
     261:  00:890D  F1                  		POP AF
     262:  00:890E  30 02               		JR NC,.CORR_2
     263:  00:8910  35                  		DEC [HL]
     264:  00:8911  35                  		DEC [HL]
     265:  00:8912  34                  .CORR_2:	INC [HL]
     266:  00:8913  A7                  		AND A
     267:  00:8914  ED 42               		SBC HL,BC
     268:  00:8916  13                  		INC DE
     269:  00:8917  18 EB               		JR .CORR_1
     270:  00:8919                      
     271:  00:8919                      .TC_EXIT:	;POP AF
     272:  00:8919                      
     273:  00:8919                      		; --- CREATE PT3 VOLUME TABLE (c) Ivan Roshin, adapted by SapphiRe ---
     274:  00:8919  21 11 00            		ld	hl,$11
     275:  00:891C  54                  		ld	d,h
     276:  00:891D  5C                  		ld	e,h
     277:  00:891E  DD 21 50 F1         		ld	IX,VT_+16
     278:  00:8922  06 0F               		ld	b,15
     279:  00:8924  E5                  .INITV1:	push	hl
     280:  00:8925  19                  		add	hl,de
     281:  00:8926  EB                  		ex	de,hl
     282:  00:8927  ED 62               		sbc	hl,hl
     283:  00:8929  48                  		ld	c,b
     284:  00:892A  06 10               		ld	b,16
     285:  00:892C  7D                  .INITV2:	ld	a,l
     286:  00:892D  17                  		rla
     287:  00:892E  7C                  		ld	a,h
     288:  00:892F  CE 00               		adc	a,0
     289:  00:8931  DD 77 00            		ld	[ix],a
     290:  00:8934  DD 23               		inc	ix
     291:  00:8936  19                  		add	hl,de
     292:  00:8937  10 F3               		djnz	.INITV2
     293:  00:8939  E1                  		pop	hl
     294:  00:893A  7B                  		ld	a,e
     295:  00:893B  FE 77               		cp	$77
     296:  00:893D  20 01               		jr	nz,.INITV3
     297:  00:893F  1C                  		inc	e
     298:  00:8940  41                  .INITV3:	ld	b,c
     299:  00:8941  10 E1               		djnz	.INITV1
     300:  00:8943                      
     301:  00:8943  C9                  		RET
     302:  00:8944                      
     303:  00:8944                      		;pattern decoder
     304:  00:8944  DD 36 08 00         PD_OrSm:	LD [IX+(CHNPRM_Env_En-12)],0
     305:  00:8948  CD CE 8A            		CALL SETORN
     306:  00:894B  0A                  		LD A,[BC]
     307:  00:894C  03                  		INC BC
     308:  00:894D  0F                  		RRCA
     309:  00:894E                      
     310:  00:894E  87                  PD_SAM:		ADD A,A
     311:  00:894F  5F                  PD_SAM_:	LD E,A
     312:  00:8950  16 00               		LD D,0
     313:  00:8952  2A 05 F0            		LD HL,[PT3_SAMPTRS]
     314:  00:8955  19                  		ADD HL,DE
     315:  00:8956  5E                  		LD E,[HL]
     316:  00:8957  23                  		INC HL
     317:  00:8958  56                  		LD D,[HL]
     318:  00:8959  2A 01 F0            		LD HL,[PT3_MODADDR]
     319:  00:895C  19                  		ADD HL,DE
     320:  00:895D  DD 75 03            		LD [IX+(CHNPRM_SamPtr-12)],L
     321:  00:8960  DD 74 04            		LD [IX+(CHNPRM_SamPtr+1-12)],H
     322:  00:8963  18 41               		JR PD_LOOP
     323:  00:8965                      
     324:  00:8965  07                  PD_VOL:		RLCA
     325:  00:8966  07                  		RLCA
     326:  00:8967  07                  		RLCA
     327:  00:8968  07                  		RLCA
     328:  00:8969  DD 77 10            		LD [IX+(CHNPRM_Volume-12)],A
     329:  00:896C  18 3B               		JR PD_LP2
     330:  00:896E                      	
     331:  00:896E  DD 77 08            PD_EOff:	LD [IX+(CHNPRM_Env_En-12)],A
     332:  00:8971  DD 77 F4            		LD [IX+(CHNPRM_PsInOr-12)],A
     333:  00:8974  18 33               		JR PD_LP2
     334:  00:8976                      
     335:  00:8976  3D                  PD_SorE:	DEC A
     336:  00:8977  20 07               		JR NZ,PD_ENV
     337:  00:8979  0A                  		LD A,[BC]
     338:  00:897A  03                  		INC BC
     339:  00:897B  DD 77 05            		LD [IX+(CHNPRM_NNtSkp-12)],A
     340:  00:897E  18 29               		JR PD_LP2
     341:  00:8980                      
     342:  00:8980  CD B2 8A            PD_ENV:		CALL SETENV
     343:  00:8983  18 24               		JR PD_LP2
     344:  00:8985                      
     345:  00:8985  CD CE 8A            PD_ORN:		CALL SETORN
     346:  00:8988  18 1C               		JR PD_LOOP
     347:  00:898A                             
     348:  00:898A  DD 77 08            PD_ESAM:	LD [IX+(CHNPRM_Env_En-12)],A
     349:  00:898D  DD 77 F4            		LD [IX+(CHNPRM_PsInOr-12)],A
     350:  00:8990  C4 B2 8A            		CALL NZ,SETENV
     351:  00:8993  0A                  		LD A,[BC]
     352:  00:8994  03                  		INC BC
     353:  00:8995  18 B8               		JR PD_SAM_
     354:  00:8997                      
     355:  00:8997  DD 7E 06            PTDECOD:	LD A,[IX+(CHNPRM_Note-12)]
     356:  00:899A  32 0F F0            		LD [PT3_PrNote],A
     357:  00:899D  DD 6E FA            		LD L,[IX+(CHNPRM_CrTnSl-12)]
     358:  00:89A0  DD 66 FB            		LD H,[IX+(CHNPRM_CrTnSl+1-12)]
     359:  00:89A3  22 10 F0            		LD [PT3_PrSlide],HL
     360:  00:89A6                      
     361:  00:89A6  11 10 20            PD_LOOP:	LD DE,$2010
     362:  00:89A9  0A                  PD_LP2:		LD A,[BC]
     363:  00:89AA  03                  		INC BC
     364:  00:89AB  83                  		ADD A,E
     365:  00:89AC  38 96               		JR C,PD_OrSm
     366:  00:89AE  82                  		ADD A,D
     367:  00:89AF  28 4A               		JR Z,PD_FIN
     368:  00:89B1  38 9B               		JR C,PD_SAM
     369:  00:89B3  83                  		ADD A,E
     370:  00:89B4  28 25               		JR Z,PD_REL
     371:  00:89B6  38 AD               		JR C,PD_VOL
     372:  00:89B8  83                  		ADD A,E
     373:  00:89B9  28 B3               		JR Z,PD_EOff
     374:  00:89BB  38 B9               		JR C,PD_SorE
     375:  00:89BD  C6 60               		ADD A,96
     376:  00:89BF  38 20               		JR C,PD_NOTE
     377:  00:89C1  83                  		ADD A,E
     378:  00:89C2  38 C1               		JR C,PD_ORN
     379:  00:89C4  82                  		ADD A,D
     380:  00:89C5  38 0F               		JR C,PD_NOIS
     381:  00:89C7  83                  		ADD A,E
     382:  00:89C8  38 C0               		JR C,PD_ESAM
     383:  00:89CA  87                  		ADD A,A
     384:  00:89CB  5F                  		LD E,A
     385:  00:89CC  21 07 6A            		LD HL,(SPCCOMS+$DF20) % 65536	; Adapted from original Speccy version (saves 6 bytes)
     386:  00:89CF  19                  		ADD HL,DE
     387:  00:89D0  5E                  		LD E,[HL]
     388:  00:89D1  23                  		INC HL
     389:  00:89D2  56                  		LD D,[HL]
     390:  00:89D3  D5                  		PUSH DE
     391:  00:89D4  18 D0               		JR PD_LOOP
     392:  00:89D6                      
     393:  00:89D6  32 7E F0            PD_NOIS:	LD [Ns_Base],A
     394:  00:89D9  18 CE               		JR PD_LP2
     395:  00:89DB                      
     396:  00:89DB  DD CB 09 86         PD_REL:		RES 0,[IX+(CHNPRM_Flags-12)]
     397:  00:89DF  18 08               		JR PD_RES
     398:  00:89E1                      	
     399:  00:89E1  DD 77 06            PD_NOTE:	LD [IX+(CHNPRM_Note-12)],A
     400:  00:89E4  DD CB 09 C6         		SET 0,[IX+(CHNPRM_Flags-12)]
     401:  00:89E8  AF                  		XOR A
     402:  00:89E9                      
     403:  00:89E9  ED 73 09 F0         PD_RES:		LD [PT3_PDSP],SP
     404:  00:89ED  DD F9               		LD SP,IX
     405:  00:89EF  67                  		LD H,A
     406:  00:89F0  6F                  		LD L,A
     407:  00:89F1  E5                  		PUSH HL
     408:  00:89F2  E5                  		PUSH HL
     409:  00:89F3  E5                  		PUSH HL
     410:  00:89F4  E5                  		PUSH HL
     411:  00:89F5  E5                  		PUSH HL
     412:  00:89F6  E5                  		PUSH HL
     413:  00:89F7  ED 7B 09 F0         		LD SP,[PT3_PDSP]
     414:  00:89FB                      
     415:  00:89FB  DD 7E 05            PD_FIN:		LD A,[IX+(CHNPRM_NNtSkp-12)]
     416:  00:89FE  DD 77 0F            		LD [IX+(CHNPRM_NtSkCn-12)],A
     417:  00:8A01  C9                  		RET
     418:  00:8A02                      
     419:  00:8A02  DD CB 09 96         C_PORTM:	RES 2,[IX+(CHNPRM_Flags-12)]
     420:  00:8A06  0A                  		LD A,[BC]
     421:  00:8A07  03                  		INC BC
     422:  00:8A08                      		;SKIP PRECALCULATED TONE DELTA [BECAUSE
     423:  00:8A08                      		;CANNOT BE RIGHT AFTER PT3 COMPILATION]
     424:  00:8A08  03                  		INC BC
     425:  00:8A09  03                  		INC BC
     426:  00:8A0A  DD 77 0A            		LD [IX+(CHNPRM_TnSlDl-12)],A
     427:  00:8A0D  DD 77 F9            		LD [IX+(CHNPRM_TSlCnt-12)],A
     428:  00:8A10  11 80 F0            		LD DE,NT_
     429:  00:8A13  DD 7E 06            		LD A,[IX+(CHNPRM_Note-12)]
     430:  00:8A16  DD 77 07            		LD [IX+(CHNPRM_SlToNt-12)],A
     431:  00:8A19  87                  		ADD A,A
     432:  00:8A1A  6F                  		LD L,A
     433:  00:8A1B  26 00               		LD H,0
     434:  00:8A1D  19                  		ADD HL,DE
     435:  00:8A1E  7E                  		LD A,[HL]
     436:  00:8A1F  23                  		INC HL
     437:  00:8A20  66                  		LD H,[HL]
     438:  00:8A21  6F                  		LD L,A
     439:  00:8A22  E5                  		PUSH HL
     440:  00:8A23  3A 0F F0            		LD A,[PT3_PrNote]
     441:  00:8A26  DD 77 06            		LD [IX+(CHNPRM_Note-12)],A
     442:  00:8A29  87                  		ADD A,A
     443:  00:8A2A  6F                  		LD L,A
     444:  00:8A2B  26 00               		LD H,0
     445:  00:8A2D  19                  		ADD HL,DE
     446:  00:8A2E  5E                  		LD E,[HL]
     447:  00:8A2F  23                  		INC HL
     448:  00:8A30  56                  		LD D,[HL]
     449:  00:8A31  E1                  		POP HL
     450:  00:8A32  ED 52               		SBC HL,DE
     451:  00:8A34  DD 75 0D            		LD [IX+(CHNPRM_TnDelt-12)],L
     452:  00:8A37  DD 74 0E            		LD [IX+(CHNPRM_TnDelt+1-12)],H
     453:  00:8A3A  ED 5B 10 F0         		LD DE,[PT3_PrSlide]
     454:  00:8A3E  DD 73 FA            		LD [IX+(CHNPRM_CrTnSl-12)],E
     455:  00:8A41  DD 72 FB            		LD [IX+(CHNPRM_CrTnSl+1-12)],D
     456:  00:8A44  0A                  		LD A,[BC] ;SIGNED TONE STEP
     457:  00:8A45  03                  		INC BC
     458:  00:8A46  08                  		EX AF,AF'
     459:  00:8A47  0A                  		LD A,[BC]
     460:  00:8A48  03                  		INC BC
     461:  00:8A49  A7                  		AND A
     462:  00:8A4A  28 01               		JR Z,.NOSIG
     463:  00:8A4C  EB                  		EX DE,HL
     464:  00:8A4D  ED 52               .NOSIG:	SBC HL,DE
     465:  00:8A4F  F2 57 8A            		JP P,SET_STP
     466:  00:8A52  2F                  		CPL
     467:  00:8A53  08                  		EX AF,AF'
     468:  00:8A54  ED 44               		NEG
     469:  00:8A56  08                  		EX AF,AF'
     470:  00:8A57  DD 77 0C            SET_STP:	LD [IX+(CHNPRM_TSlStp+1-12)],A
     471:  00:8A5A  08                  		EX AF,AF'
     472:  00:8A5B  DD 77 0B            		LD [IX+(CHNPRM_TSlStp-12)],A
     473:  00:8A5E  DD 36 FE 00         		LD [IX+(CHNPRM_COnOff-12)],0
     474:  00:8A62  C9                  		RET
     475:  00:8A63                      
     476:  00:8A63  DD CB 09 D6         C_GLISS:	SET 2,[IX+(CHNPRM_Flags-12)]
     477:  00:8A67  0A                  		LD A,[BC]
     478:  00:8A68  03                  		INC BC
     479:  00:8A69  DD 77 0A            		LD [IX+(CHNPRM_TnSlDl-12)],A
     480:  00:8A6C  DD 77 F9            		LD [IX+(CHNPRM_TSlCnt-12)],A
     481:  00:8A6F  0A                  		LD A,[BC]
     482:  00:8A70  03                  		INC BC
     483:  00:8A71  08                  		EX AF,AF'
     484:  00:8A72  0A                  		LD A,[BC]
     485:  00:8A73  03                  		INC BC
     486:  00:8A74  18 E1               		JR SET_STP
     487:  00:8A76                      
     488:  00:8A76  0A                  C_SMPOS:	LD A,[BC]
     489:  00:8A77  03                  		INC BC
     490:  00:8A78  DD 77 F5            		LD [IX+(CHNPRM_PsInSm-12)],A
     491:  00:8A7B  C9                  		RET
     492:  00:8A7C                      
     493:  00:8A7C  0A                  C_ORPOS:	LD A,[BC]
     494:  00:8A7D  03                  		INC BC
     495:  00:8A7E  DD 77 F4            		LD [IX+(CHNPRM_PsInOr-12)],A
     496:  00:8A81  C9                  		RET
     497:  00:8A82                      
     498:  00:8A82  0A                  C_VIBRT:	LD A,[BC]
     499:  00:8A83  03                  		INC BC
     500:  00:8A84  DD 77 FF            		LD [IX+(CHNPRM_OnOffD-12)],A
     501:  00:8A87  DD 77 FE            		LD [IX+(CHNPRM_COnOff-12)],A
     502:  00:8A8A  0A                  		LD A,[BC]
     503:  00:8A8B  03                  		INC BC
     504:  00:8A8C  DD 77 00            		LD [IX+(CHNPRM_OffOnD-12)],A
     505:  00:8A8F  AF                  		XOR A
     506:  00:8A90  DD 77 F9            		LD [IX+(CHNPRM_TSlCnt-12)],A
     507:  00:8A93  DD 77 FA            		LD [IX+(CHNPRM_CrTnSl-12)],A
     508:  00:8A96  DD 77 FB            		LD [IX+(CHNPRM_CrTnSl+1-12)],A
     509:  00:8A99  C9                  		RET
     510:  00:8A9A                      
     511:  00:8A9A  0A                  C_ENGLS:	LD A,[BC]
     512:  00:8A9B  03                  		INC BC
     513:  00:8A9C  32 1E F0            		LD [PT3_Env_Del],A
     514:  00:8A9F  32 7D F0            		LD [CurEDel],A
     515:  00:8AA2  0A                  		LD A,[BC]
     516:  00:8AA3  03                  		INC BC
     517:  00:8AA4  6F                  		LD L,A
     518:  00:8AA5  0A                  		LD A,[BC]
     519:  00:8AA6  03                  		INC BC
     520:  00:8AA7  67                  		LD H,A
     521:  00:8AA8  22 1F F0            		LD [PT3_ESldAdd],HL
     522:  00:8AAB  C9                  		RET
     523:  00:8AAC                      
     524:  00:8AAC  0A                  C_DELAY:	LD A,[BC]
     525:  00:8AAD  03                  		INC BC
     526:  00:8AAE  32 1C F0            		LD [PT3_Delay],A
     527:  00:8AB1  C9                  		RET
     528:  00:8AB2                      	
     529:  00:8AB2  DD 73 08            SETENV:		LD [IX+(CHNPRM_Env_En-12)],E
     530:  00:8AB5  32 4D F1            		LD [AYREGS+AR_EnvTp],A
     531:  00:8AB8  0A                  		LD A,[BC]
     532:  00:8AB9  03                  		INC BC
     533:  00:8ABA  67                  		LD H,A
     534:  00:8ABB  0A                  		LD A,[BC]
     535:  00:8ABC  03                  		INC BC
     536:  00:8ABD  6F                  		LD L,A
     537:  00:8ABE  22 4E F1            		LD [EnvBase],HL
     538:  00:8AC1  AF                  		XOR A
     539:  00:8AC2  DD 77 F4            		LD [IX+(CHNPRM_PsInOr-12)],A
     540:  00:8AC5  32 7D F0            		LD [CurEDel],A
     541:  00:8AC8  67                  		LD H,A
     542:  00:8AC9  6F                  		LD L,A
     543:  00:8ACA  22 7B F0            		LD [CurESld],HL
     544:  00:8ACD  C9                  C_NOP:		RET
     545:  00:8ACE                      
     546:  00:8ACE  87                  SETORN:		ADD A,A
     547:  00:8ACF  5F                  		LD E,A
     548:  00:8AD0  16 00               		LD D,0
     549:  00:8AD2  DD 72 F4            		LD [IX+(CHNPRM_PsInOr-12)],D
     550:  00:8AD5  2A 07 F0            		LD HL,[PT3_OrnPtrs]
     551:  00:8AD8  19                  		ADD HL,DE
     552:  00:8AD9  5E                  		LD E,[HL]
     553:  00:8ADA  23                  		INC HL
     554:  00:8ADB  56                  		LD D,[HL]
     555:  00:8ADC  2A 01 F0            		LD HL,[PT3_MODADDR]
     556:  00:8ADF  19                  		ADD HL,DE
     557:  00:8AE0  DD 75 01            		LD [IX+(CHNPRM_OrnPtr-12)],L
     558:  00:8AE3  DD 74 02            		LD [IX+(CHNPRM_OrnPtr+1-12)],H
     559:  00:8AE6  C9                  		RET
     560:  00:8AE7                      
     561:  00:8AE7                      		;ALL 16 ADDRESSES TO PROTECT FROM BROKEN PT3 MODULES
     562:  00:8AE7  CD 8A               SPCCOMS:	dw C_NOP
     563:  00:8AE9  63 8A               		dw C_GLISS
     564:  00:8AEB  02 8A               		dw C_PORTM
     565:  00:8AED  76 8A               		dw C_SMPOS
     566:  00:8AEF  7C 8A               		dw C_ORPOS
     567:  00:8AF1  82 8A               		dw C_VIBRT
     568:  00:8AF3  CD 8A               		dw C_NOP
     569:  00:8AF5  CD 8A               		dw C_NOP
     570:  00:8AF7  9A 8A               		dw C_ENGLS
     571:  00:8AF9  AC 8A               		dw C_DELAY
     572:  00:8AFB  CD 8A               		dw C_NOP
     573:  00:8AFD  CD 8A               		dw C_NOP
     574:  00:8AFF  CD 8A               		dw C_NOP
     575:  00:8B01  CD 8A               		dw C_NOP
     576:  00:8B03  CD 8A               		dw C_NOP
     577:  00:8B05  CD 8A               		dw C_NOP
     578:  00:8B07                      
     579:  00:8B07  AF                  CHREGS:		XOR A
     580:  00:8B08  32 4A F1            		LD [AYREGS+AR_AmplC],A
     581:  00:8B0B  DD CB 15 46         		BIT 0,[IX+CHNPRM_Flags]
     582:  00:8B0F  E5                  		PUSH HL
     583:  00:8B10  CA 36 8C            		JP Z,.CH_EXIT
     584:  00:8B13  ED 73 0B F0         		LD [PT3_CSP],SP
     585:  00:8B17  DD 6E 0D            		LD L,[IX+CHNPRM_OrnPtr]
     586:  00:8B1A  DD 66 0E            		LD H,[IX+CHNPRM_OrnPtr+1]
     587:  00:8B1D  F9                  		LD SP,HL
     588:  00:8B1E  D1                  		POP DE
     589:  00:8B1F  67                  		LD H,A
     590:  00:8B20  DD 7E 00            		LD A,[IX+CHNPRM_PsInOr]
     591:  00:8B23  6F                  		LD L,A
     592:  00:8B24  39                  		ADD HL,SP
     593:  00:8B25  3C                  		INC A
     594:  00:8B26  BA                  		CP D
     595:  00:8B27  38 01               		JR C,.CH_ORPS
     596:  00:8B29  7B                  		LD A,E
     597:  00:8B2A  DD 77 00            .CH_ORPS:	LD [IX+CHNPRM_PsInOr],A
     598:  00:8B2D  DD 7E 12            		LD A,[IX+CHNPRM_Note]
     599:  00:8B30  86                  		ADD A,[HL]
     600:  00:8B31  F2 35 8B            		JP P,.CH_NTP
     601:  00:8B34  AF                  		XOR A
     602:  00:8B35  FE 60               .CH_NTP:	CP 96
     603:  00:8B37  38 02               		JR C,.CH_NOK
     604:  00:8B39  3E 5F               		LD A,95
     605:  00:8B3B  87                  .CH_NOK:	ADD A,A
     606:  00:8B3C  08                  		EX AF,AF'
     607:  00:8B3D  DD 6E 0F            		LD L,[IX+CHNPRM_SamPtr]
     608:  00:8B40  DD 66 10            		LD H,[IX+CHNPRM_SamPtr+1]
     609:  00:8B43  F9                  		LD SP,HL
     610:  00:8B44  D1                  		POP DE
     611:  00:8B45  26 00               		LD H,0
     612:  00:8B47  DD 7E 01            		LD A,[IX+CHNPRM_PsInSm]
     613:  00:8B4A  47                  		LD B,A
     614:  00:8B4B  87                  		ADD A,A
     615:  00:8B4C  87                  		ADD A,A
     616:  00:8B4D  6F                  		LD L,A
     617:  00:8B4E  39                  		ADD HL,SP
     618:  00:8B4F  F9                  		LD SP,HL
     619:  00:8B50  78                  		LD A,B
     620:  00:8B51  3C                  		INC A
     621:  00:8B52  BA                  		CP D
     622:  00:8B53  38 01               		JR C,.CH_SMPS
     623:  00:8B55  7B                  		LD A,E
     624:  00:8B56  DD 77 01            .CH_SMPS:	LD [IX+CHNPRM_PsInSm],A
     625:  00:8B59  C1                  		POP BC
     626:  00:8B5A  E1                  		POP HL
     627:  00:8B5B  DD 5E 08            		LD E,[IX+CHNPRM_TnAcc]
     628:  00:8B5E  DD 56 09            		LD D,[IX+CHNPRM_TnAcc+1]
     629:  00:8B61  19                  		ADD HL,DE
     630:  00:8B62  CB 70               		BIT 6,B
     631:  00:8B64  28 06               		JR Z,.CH_NOAC
     632:  00:8B66  DD 75 08            		LD [IX+CHNPRM_TnAcc],L
     633:  00:8B69  DD 74 09            		LD [IX+CHNPRM_TnAcc+1],H
     634:  00:8B6C  EB                  .CH_NOAC:	EX DE,HL
     635:  00:8B6D  08                  		EX AF,AF'
     636:  00:8B6E  6F                  		LD L,A
     637:  00:8B6F  26 00               		LD H,0
     638:  00:8B71  31 80 F0            		LD SP,NT_
     639:  00:8B74  39                  		ADD HL,SP
     640:  00:8B75  F9                  		LD SP,HL
     641:  00:8B76  E1                  		POP HL
     642:  00:8B77  19                  		ADD HL,DE
     643:  00:8B78  DD 5E 06            		LD E,[IX+CHNPRM_CrTnSl]
     644:  00:8B7B  DD 56 07            		LD D,[IX+CHNPRM_CrTnSl+1]
     645:  00:8B7E  19                  		ADD HL,DE
     646:  00:8B7F  ED 7B 0B F0         		LD SP,[PT3_CSP]
     647:  00:8B83  E3                  		EX [SP],HL
     648:  00:8B84  AF                  		XOR A
     649:  00:8B85  DD B6 05            		OR [IX+CHNPRM_TSlCnt]
     650:  00:8B88  28 3E               		JR Z,.CH_AMP
     651:  00:8B8A  DD 35 05            		DEC [IX+CHNPRM_TSlCnt]
     652:  00:8B8D  20 39               		JR NZ,.CH_AMP
     653:  00:8B8F  DD 7E 16            		LD A,[IX+CHNPRM_TnSlDl]
     654:  00:8B92  DD 77 05            		LD [IX+CHNPRM_TSlCnt],A
     655:  00:8B95  DD 6E 17            		LD L,[IX+CHNPRM_TSlStp]
     656:  00:8B98  DD 66 18            		LD H,[IX+CHNPRM_TSlStp+1]
     657:  00:8B9B  7C                  		LD A,H
     658:  00:8B9C  19                  		ADD HL,DE
     659:  00:8B9D  DD 75 06            		LD [IX+CHNPRM_CrTnSl],L
     660:  00:8BA0  DD 74 07            		LD [IX+CHNPRM_CrTnSl+1],H
     661:  00:8BA3  DD CB 15 56         		BIT 2,[IX+CHNPRM_Flags]
     662:  00:8BA7  20 1F               		JR NZ,.CH_AMP
     663:  00:8BA9  DD 5E 19            		LD E,[IX+CHNPRM_TnDelt]
     664:  00:8BAC  DD 56 1A            		LD D,[IX+CHNPRM_TnDelt+1]
     665:  00:8BAF  A7                  		AND A
     666:  00:8BB0  28 01               		JR Z,.CH_STPP
     667:  00:8BB2  EB                  		EX DE,HL
     668:  00:8BB3  ED 52               .CH_STPP:	SBC HL,DE
     669:  00:8BB5  FA C8 8B            		JP M,.CH_AMP
     670:  00:8BB8  DD 7E 13            		LD A,[IX+CHNPRM_SlToNt]
     671:  00:8BBB  DD 77 12            		LD [IX+CHNPRM_Note],A
     672:  00:8BBE  AF                  		XOR A
     673:  00:8BBF  DD 77 05            		LD [IX+CHNPRM_TSlCnt],A
     674:  00:8BC2  DD 77 06            		LD [IX+CHNPRM_CrTnSl],A
     675:  00:8BC5  DD 77 07            		LD [IX+CHNPRM_CrTnSl+1],A
     676:  00:8BC8  DD 7E 02            .CH_AMP:	LD A,[IX+CHNPRM_CrAmSl]
     677:  00:8BCB  CB 79               		BIT 7,C
     678:  00:8BCD  28 13               		JR Z,.CH_NOAM
     679:  00:8BCF  CB 71               		BIT 6,C
     680:  00:8BD1  28 07               		JR Z,.CH_AMIN
     681:  00:8BD3  FE 0F               		CP 15
     682:  00:8BD5  28 0B               		JR Z,.CH_NOAM
     683:  00:8BD7  3C                  		INC A
     684:  00:8BD8  18 05               		JR .CH_SVAM
     685:  00:8BDA  FE F1               .CH_AMIN:	CP -15
     686:  00:8BDC  28 04               		JR Z,.CH_NOAM
     687:  00:8BDE  3D                  		DEC A
     688:  00:8BDF  DD 77 02            .CH_SVAM:	LD [IX+CHNPRM_CrAmSl],A
     689:  00:8BE2  6F                  .CH_NOAM:	LD L,A
     690:  00:8BE3  78                  		LD A,B
     691:  00:8BE4  E6 0F               		AND 15
     692:  00:8BE6  85                  		ADD A,L
     693:  00:8BE7  F2 EB 8B            		JP P,.CH_APOS
     694:  00:8BEA  AF                  		XOR A
     695:  00:8BEB  FE 10               .CH_APOS:	CP 16
     696:  00:8BED  38 02               		JR C,.CH_VOL
     697:  00:8BEF  3E 0F               		LD A,15
     698:  00:8BF1  DD B6 1C            .CH_VOL:	OR [IX+CHNPRM_Volume]
     699:  00:8BF4  6F                  		LD L,A
     700:  00:8BF5  26 00               		LD H,0
     701:  00:8BF7  11 40 F1            		LD DE,VT_
     702:  00:8BFA  19                  		ADD HL,DE
     703:  00:8BFB  7E                  		LD A,[HL]
     704:  00:8BFC  CB 41               .CH_ENV:	BIT 0,C
     705:  00:8BFE  20 03               		JR NZ,.CH_NOEN
     706:  00:8C00  DD B6 14            		OR [IX+CHNPRM_Env_En]
     707:  00:8C03  32 4A F1            .CH_NOEN:	LD [AYREGS+AR_AmplC],A
     708:  00:8C06  CB 78               		BIT 7,B
     709:  00:8C08  79                  		LD A,C
     710:  00:8C09  28 19               		JR Z,.NO_ENSL
     711:  00:8C0B  17                  		RLA
     712:  00:8C0C  17                  		RLA
     713:  00:8C0D  CB 2F               		SRA A
     714:  00:8C0F  CB 2F               		SRA A
     715:  00:8C11  CB 2F               		SRA A
     716:  00:8C13  DD 86 04            		ADD A,[IX+CHNPRM_CrEnSl] ;SEE COMMENT BELOW
     717:  00:8C16  CB 68               		BIT 5,B
     718:  00:8C18  28 03               		JR Z,.NO_ENAC
     719:  00:8C1A  DD 77 04            		LD [IX+CHNPRM_CrEnSl],A
     720:  00:8C1D  21 1D F0            .NO_ENAC:	LD HL,PT3_AddToEn
     721:  00:8C20  86                  		ADD A,[HL] ;BUG IN PT3 - NEED WORD HERE.
     722:  00:8C21                      			   ;FIX IT IN NEXT VERSION?
     723:  00:8C21  77                  		LD [HL],A
     724:  00:8C22  18 0E               		JR .CH_MIX
     725:  00:8C24  1F                  .NO_ENSL:	RRA
     726:  00:8C25  DD 86 03            		ADD A,[IX+CHNPRM_CrNsSl]
     727:  00:8C28  32 7F F0            		LD [AddToNs],A
     728:  00:8C2B  CB 68               		BIT 5,B
     729:  00:8C2D  28 03               		JR Z,.CH_MIX
     730:  00:8C2F  DD 77 03            		LD [IX+CHNPRM_CrNsSl],A
     731:  00:8C32  78                  .CH_MIX:	LD A,B
     732:  00:8C33  1F                  		RRA
     733:  00:8C34  E6 48               		AND $48
     734:  00:8C36  21 47 F1            .CH_EXIT:	LD HL,AYREGS+AR_Mixer
     735:  00:8C39  B6                  		OR [HL]
     736:  00:8C3A  0F                  		RRCA
     737:  00:8C3B  77                  		LD [HL],A
     738:  00:8C3C  E1                  		POP HL
     739:  00:8C3D  AF                  		XOR A
     740:  00:8C3E  DD B6 0A            		OR [IX+CHNPRM_COnOff]
     741:  00:8C41  C8                  		RET Z
     742:  00:8C42  DD 35 0A            		DEC [IX+CHNPRM_COnOff]
     743:  00:8C45  C0                  		RET NZ
     744:  00:8C46  DD AE 15            		XOR [IX+CHNPRM_Flags]
     745:  00:8C49  DD 77 15            		LD [IX+CHNPRM_Flags],A
     746:  00:8C4C  1F                  		RRA
     747:  00:8C4D  DD 7E 0B            		LD A,[IX+CHNPRM_OnOffD]
     748:  00:8C50  38 03               		JR C,.CH_ONDL
     749:  00:8C52  DD 7E 0C            		LD A,[IX+CHNPRM_OffOnD]
     750:  00:8C55  DD 77 0A            .CH_ONDL:	LD [IX+CHNPRM_COnOff],A
     751:  00:8C58  C9                  		RET
     752:  00:8C59                      
     753:  00:8C59  AF                  PT3_PLAY:	XOR A
     754:  00:8C5A  32 1D F0            		LD [PT3_AddToEn],A
     755:  00:8C5D  32 47 F1            		LD [AYREGS+AR_Mixer],A
     756:  00:8C60  3D                  		DEC A
     757:  00:8C61  32 4D F1            		LD [AYREGS+AR_EnvTp],A
     758:  00:8C64  21 7A F0            		LD HL,DelyCnt
     759:  00:8C67  35                  		DEC [HL]
     760:  00:8C68  C2 EF 8C            		JP NZ,.PL2
     761:  00:8C6B  21 3E F0            		LD HL,ChanA+CHNPRM_NtSkCn
     762:  00:8C6E  35                  		DEC [HL]
     763:  00:8C6F  20 4E               		JR NZ,.PL1B
     764:  00:8C71  ED 4B 12 F0         		LD BC,[PT3_AdInPtA]
     765:  00:8C75  0A                  		LD A,[BC]
     766:  00:8C76  A7                  		AND A
     767:  00:8C77  20 3B               		JR NZ,.PL1A
     768:  00:8C79  57                  		LD D,A
     769:  00:8C7A  32 7E F0            		LD [Ns_Base],A
     770:  00:8C7D  2A 03 F0            		LD HL,[PT3_CrPsPtr]
     771:  00:8C80  23                  		INC HL
     772:  00:8C81  7E                  		LD A,[HL]
     773:  00:8C82  3C                  		INC A
     774:  00:8C83  20 08               		JR NZ,.PLNLP
     775:  00:8C85  CD EF 87            		CALL CHECKLP
     776:  00:8C88  2A 18 F0            		LD HL,[PT3_LPosPtr]
     777:  00:8C8B  7E                  		LD A,[HL]
     778:  00:8C8C  3C                  		INC A
     779:  00:8C8D  22 03 F0            .PLNLP:	LD [PT3_CrPsPtr],HL
     780:  00:8C90  3D                  		DEC A
     781:  00:8C91  87                  		ADD A,A
     782:  00:8C92  5F                  		LD E,A
     783:  00:8C93  CB 12               		RL D
     784:  00:8C95  2A 1A F0            		LD HL,[PT3_PatsPtr]
     785:  00:8C98  19                  		ADD HL,DE
     786:  00:8C99  ED 5B 01 F0         		LD DE,[PT3_MODADDR]
     787:  00:8C9D  ED 73 0D F0         		LD [PT3_PSP],SP
     788:  00:8CA1  F9                  		LD SP,HL
     789:  00:8CA2  E1                  		POP HL
     790:  00:8CA3  19                  		ADD HL,DE
     791:  00:8CA4  44                  		LD B,H
     792:  00:8CA5  4D                  		LD C,L
     793:  00:8CA6  E1                  		POP HL
     794:  00:8CA7  19                  		ADD HL,DE
     795:  00:8CA8  22 14 F0            		LD [PT3_AdInPtB],HL
     796:  00:8CAB  E1                  		POP HL
     797:  00:8CAC  19                  		ADD HL,DE
     798:  00:8CAD  22 16 F0            		LD [PT3_AdInPtC],HL
     799:  00:8CB0  ED 7B 0D F0         		LD SP,[PT3_PSP]
     800:  00:8CB4                      
     801:  00:8CB4  DD 21 2F F0         .PL1A:		LD IX,ChanA+12
     802:  00:8CB8  CD 97 89            		CALL PTDECOD
     803:  00:8CBB  ED 43 12 F0         		LD [PT3_AdInPtA],BC
     804:  00:8CBF                      
     805:  00:8CBF  21 5B F0            .PL1B:		LD HL,ChanB+CHNPRM_NtSkCn
     806:  00:8CC2  35                  		DEC [HL]
     807:  00:8CC3  20 0F               		JR NZ,.PL1C
     808:  00:8CC5  DD 21 4C F0         		LD IX,ChanB+12
     809:  00:8CC9  ED 4B 14 F0         		LD BC,[PT3_AdInPtB]
     810:  00:8CCD  CD 97 89            		CALL PTDECOD
     811:  00:8CD0  ED 43 14 F0         		LD [PT3_AdInPtB],BC
     812:  00:8CD4                      
     813:  00:8CD4  21 78 F0            .PL1C:		LD HL,ChanC+CHNPRM_NtSkCn
     814:  00:8CD7  35                  		DEC [HL]
     815:  00:8CD8  20 0F               		JR NZ,.PL1D
     816:  00:8CDA  DD 21 69 F0         		LD IX,ChanC+12
     817:  00:8CDE  ED 4B 16 F0         		LD BC,[PT3_AdInPtC]
     818:  00:8CE2  CD 97 89            		CALL PTDECOD
     819:  00:8CE5  ED 43 16 F0         		LD [PT3_AdInPtC],BC
     820:  00:8CE9                      
     821:  00:8CE9  3A 1C F0            .PL1D:		LD A,[PT3_Delay]
     822:  00:8CEC  32 7A F0            		LD [DelyCnt],A
     823:  00:8CEF                      
     824:  00:8CEF  DD 21 23 F0         .PL2:		LD IX,ChanA
     825:  00:8CF3  2A 40 F1            		LD HL,[AYREGS+AR_TonA]
     826:  00:8CF6  CD 07 8B            		CALL CHREGS
     827:  00:8CF9  22 40 F1            		LD [AYREGS+AR_TonA],HL
     828:  00:8CFC  3A 4A F1            		LD A,[AYREGS+AR_AmplC]
     829:  00:8CFF  32 48 F1            		LD [AYREGS+AR_AmplA],A
     830:  00:8D02  DD 21 40 F0         		LD IX,ChanB
     831:  00:8D06  2A 42 F1            		LD HL,[AYREGS+AR_TonB]
     832:  00:8D09  CD 07 8B            		CALL CHREGS
     833:  00:8D0C  22 42 F1            		LD [AYREGS+AR_TonB],HL
     834:  00:8D0F  3A 4A F1            		LD A,[AYREGS+AR_AmplC]
     835:  00:8D12  32 49 F1            		LD [AYREGS+AR_AmplB],A
     836:  00:8D15  DD 21 5D F0         		LD IX,ChanC
     837:  00:8D19  2A 44 F1            		LD HL,[AYREGS+AR_TonC]
     838:  00:8D1C  CD 07 8B            		CALL CHREGS
     839:  00:8D1F  22 44 F1            		LD [AYREGS+AR_TonC],HL
     840:  00:8D22                      
     841:  00:8D22  2A 7E F0            		LD HL,[Ns_Base_AddToNs]
     842:  00:8D25  7C                  		LD A,H
     843:  00:8D26  85                  		ADD A,L
     844:  00:8D27  32 46 F1            		LD [AYREGS+AR_Noise],A
     845:  00:8D2A                      
     846:  00:8D2A  3A 1D F0            		LD A,[PT3_AddToEn]
     847:  00:8D2D  5F                  		LD E,A
     848:  00:8D2E  87                  		ADD A,A
     849:  00:8D2F  9F                  		SBC A,A
     850:  00:8D30  57                  		LD D,A
     851:  00:8D31  2A 4E F1            		LD HL,[EnvBase]
     852:  00:8D34  19                  		ADD HL,DE
     853:  00:8D35  ED 5B 7B F0         		LD DE,[CurESld]
     854:  00:8D39  19                  		ADD HL,DE
     855:  00:8D3A  22 4B F1            		LD [AYREGS+AR_Env],HL
     856:  00:8D3D                      
     857:  00:8D3D  AF                  		XOR A
     858:  00:8D3E  21 7D F0            		LD HL,CurEDel
     859:  00:8D41  B6                  		OR [HL]
     860:  00:8D42  C8                  		RET Z
     861:  00:8D43  35                  		DEC [HL]
     862:  00:8D44  C0                  		RET NZ
     863:  00:8D45  3A 1E F0            		LD A,[PT3_Env_Del]
     864:  00:8D48  77                  		LD [HL],A
     865:  00:8D49  2A 1F F0            		LD HL,[PT3_ESldAdd]
     866:  00:8D4C  19                  		ADD HL,DE
     867:  00:8D4D  22 7B F0            		LD [CurESld],HL
     868:  00:8D50  C9                  		RET
     869:  00:8D51                      
     870:  00:8D51  AF                  PT3_ROUT:	XOR A
     871:  00:8D52                      	
     872:  00:8D52                      ROUT_A0:	; --- FIXES BITS 6 AND 7 OF MIXER ---
     873:  00:8D52  21 47 F1            		LD	HL,AYREGS+AR_Mixer
     874:  00:8D55  CB FE               		set	7,[hl]
     875:  00:8D57  CB B6               		res	6,[hl]
     876:  00:8D59                      
     877:  00:8D59  0E A0               		LD C,$A0
     878:  00:8D5B  21 40 F1            		LD HL,AYREGS
     879:  00:8D5E  ED 79               .LOUT:		OUT [C],A
     880:  00:8D60  0C                  		INC C
     881:  00:8D61  ED A3               		OUTI 
     882:  00:8D63  0D                  		DEC C
     883:  00:8D64  3C                  		INC A
     884:  00:8D65  FE 0D               		CP 13
     885:  00:8D67  20 F5               		JR NZ,.LOUT
     886:  00:8D69  ED 79               		OUT [C],A
     887:  00:8D6B  7E                  		LD A,[HL]
     888:  00:8D6C  A7                  		AND A
     889:  00:8D6D  F8                  		RET M
     890:  00:8D6E  0C                  		INC C
     891:  00:8D6F  ED 79               		OUT [C],A
     892:  00:8D71  C9                  		RET
     893:  00:8D72                      
     894:  00:8D72  64                  NT_DATA:	db (T_NEW_0-T1_)*2
     895:  00:8D73  2A                  		db TCNEW_0-T_
     896:  00:8D74  65                  		db (T_OLD_0-T1_)*2+1
     897:  00:8D75  00                  		db TCOLD_0-T_
     898:  00:8D76  01                  		db (T_NEW_1-T1_)*2+1
     899:  00:8D77  0C                  		db TCNEW_1-T_
     900:  00:8D78  01                  		db (T_OLD_1-T1_)*2+1
     901:  00:8D79  0C                  		db TCOLD_1-T_
     902:  00:8D7A  94                  		db (T_NEW_2-T1_)*2
     903:  00:8D7B  35                  		db TCNEW_2-T_
     904:  00:8D7C  30                  		db (T_OLD_2-T1_)*2
     905:  00:8D7D  0E                  		db TCOLD_2-T_
     906:  00:8D7E  60                  		db (T_NEW_3-T1_)*2
     907:  00:8D7F  20                  		db TCNEW_3-T_
     908:  00:8D80  60                  		db (T_OLD_3-T1_)*2
     909:  00:8D81  21                  		db TCOLD_3-T_
     910:  00:8D82                      
     911:  00:8D82                      T_:
     912:  00:8D82                      
     913:  00:8D82                      TCOLD_0:	db $00+1,$04+1,$08+1,$0A+1,$0C+1,$0E+1,$12+1,$14+1
     913:  00:8D82  01 05 09 0B 0D 0F 13 15 
     914:  00:8D8A  19 25 3D 00         		db $18+1,$24+1,$3C+1,0
     915:  00:8D8E                      TCNEW_1:	
     916:  00:8D8E  5D 00               TCOLD_1:	db $5C+1,0
     917:  00:8D90                      TCOLD_2:	db $30+1,$36+1,$4C+1,$52+1,$5E+1,$70+1,$82,$8C,$9C
     917:  00:8D90  31 37 4D 53 5F 71 82 8C 9C 
     918:  00:8D99                      		db $9E,$A0,$A6,$A8,$AA,$AC,$AE,$AE,0
     918:  00:8D99  9E A0 A6 A8 AA AC AE AE 00 
     919:  00:8DA2  57                  TCNEW_3:	db $56+1
     920:  00:8DA3                      TCOLD_3:	db $1E+1,$22+1,$24+1,$28+1,$2C+1,$2E+1,$32+1,$BE+1,0
     920:  00:8DA3  1F 23 25 29 2D 2F 33 BF 00 
     921:  00:8DAC                      TCNEW_0:	db $1C+1,$20+1,$22+1,$26+1,$2A+1,$2C+1,$30+1,$54+1
     921:  00:8DAC  1D 21 23 27 2B 2D 31 55 
     922:  00:8DB4  BD BF 00            		db $BC+1,$BE+1,0
     923:  00:8DB7                      TCNEW_2:	db $1A+1,$20+1,$24+1,$28+1,$2A+1,$3A+1,$4C+1,$5E+1
     923:  00:8DB7  1B 21 25 29 2B 3B 4D 5F 
     924:  00:8DBF  BB BD BF            		db $BA+1,$BC+1,$BE+1
     925:  00:8DC2                      
     926:  00:8DC2  00 01 00 90         EMPTYSAMORN: 	db 0,1,0,$90 ;delete $90 if you don't need default sample
     927:  00:8DC6                      
     928:  00:8DC6                      T_PACK:		; First 12 values of tone tables (packed)
     929:  00:8DC6  0D                  		db ($06EC*2)/256
     930:  00:8DC7  D8                  		db #d8
     931:  00:8DC8  69                  		db $0755-$06EC
     932:  00:8DC9  70                  		db $07C5-$0755
     933:  00:8DCA  76                  		db $083B-$07C5
     934:  00:8DCB  7D                  		db $08B8-$083B
     935:  00:8DCC  85                  		db $093D-$08B8
     936:  00:8DCD  8D                  		db $09CA-$093D
     937:  00:8DCE  95                  		db $0A5F-$09CA
     938:  00:8DCF  9D                  		db $0AFC-$0A5F
     939:  00:8DD0  A8                  		db $0BA4-$0AFC
     940:  00:8DD1  B1                  		db $0C55-$0BA4
     941:  00:8DD2  BB                  		db $0D10-$0C55
     942:  00:8DD3  0C                  		db ($066D*2)/256
     943:  00:8DD4  DA                  		db #da
     944:  00:8DD5  62                  		db $06CF-$066D
     945:  00:8DD6  68                  		db $0737-$06CF
     946:  00:8DD7  6D                  		db $07A4-$0737
     947:  00:8DD8  75                  		db $0819-$07A4
     948:  00:8DD9  7B                  		db $0894-$0819
     949:  00:8DDA  83                  		db $0917-$0894
     950:  00:8DDB  8A                  		db $09A1-$0917
     951:  00:8DDC  92                  		db $0A33-$09A1
     952:  00:8DDD  9C                  		db $0ACF-$0A33
     953:  00:8DDE  A4                  		db $0B73-$0ACF
     954:  00:8DDF  AF                  		db $0C22-$0B73
     955:  00:8DE0  B8                  		db $0CDA-$0C22
     956:  00:8DE1  0E                  		db ($0704*2)/256
     957:  00:8DE2  08                  		db #08
     958:  00:8DE3  6A                  		db $076E-$0704
     959:  00:8DE4  72                  		db $07E0-$076E
     960:  00:8DE5  78                  		db $0858-$07E0
     961:  00:8DE6  7E                  		db $08D6-$0858
     962:  00:8DE7  86                  		db $095C-$08D6
     963:  00:8DE8  90                  		db $09EC-$095C
     964:  00:8DE9  96                  		db $0A82-$09EC
     965:  00:8DEA  A0                  		db $0B22-$0A82
     966:  00:8DEB  AA                  		db $0BCC-$0B22
     967:  00:8DEC  B4                  		db $0C80-$0BCC
     968:  00:8DED  BE                  		db $0D3E-$0C80
     969:  00:8DEE  0F                  		db ($07E0*2)/256
     970:  00:8DEF  C0                  		db #c0
     971:  00:8DF0  78                  		db $0858-$07E0
     972:  00:8DF1  88                  		db $08E0-$0858
     973:  00:8DF2  80                  		db $0960-$08E0
     974:  00:8DF3  90                  		db $09F0-$0960
     975:  00:8DF4  98                  		db $0A88-$09F0
     976:  00:8DF5  A0                  		db $0B28-$0A88
     977:  00:8DF6  B0                  		db $0BD8-$0B28
     978:  00:8DF7  A8                  		db $0C80-$0BD8
     979:  00:8DF8  E0                  		db $0D60-$0C80
     980:  00:8DF9  B0                  		db $0E10-$0D60
     981:  00:8DFA  E8                  		db $0EF8-$0E10
      61.  00:8DFB                      	include "ayFX-ROM_sjasm.asm"
       1:  00:8DFB                      		; --- ayFX REPLAYER v1.31 ---
       2:  00:8DFB                      
       3:  00:8DFB                      		; --- v1.31	Fixed bug on previous version, only PSG channel C worked
       4:  00:8DFB                      		; --- v1.3	Fixed volume and Relative volume versions on the same file, conditional compilation
       5:  00:8DFB                      		; ---		Support for dynamic or fixed channel allocation
       6:  00:8DFB                      		; --- v1.2f/r	ayFX bank support
       7:  00:8DFB                      		; --- v1.11f/r	If a frame volume is zero then no AYREGS update
       8:  00:8DFB                      		; --- v1.1f/r	Fixed volume for all ayFX streams
       9:  00:8DFB                      		; --- v1.1	Explicit priority (as suggested by AR)
      10:  00:8DFB                      		; --- v1.0f	Bug fixed (error when using noise)
      11:  00:8DFB                      		; --- v1.0	Initial release
      12:  00:8DFB                      
      13:  00:8DFB                      		; --- DEFINE AYFXRELATIVE AS 0 FOR FIXED VOLUME VERSION ---
      14:  00:8DFB                      		; --- DEFINE AYFXRELATIVE AS 1 FOR RELATIVE VOLUME VERSION ---
      15:  00:8DFB  (00:0000)           AYFXRELATIVE equ 0
      16:  00:8DFB                      
      17:  00:8DFB                      ayFX_SETUP:	; ---          ayFX replayer setup          ---
      18:  00:8DFB                      		; --- INPUT: HL -> pointer to the ayFX bank ---
      19:  00:8DFB  22 41 F2            		ld	[ayFX_BANK],hl			; Current ayFX bank
      20:  00:8DFE  3E 01               		ld	a,1				; a:=0
      21:  00:8E00  32 40 F2            		ld	[ayFX_MODE],a			; Initial mode: fixed channel
      22:  00:8E03  3C                  		inc	a				; Starting channel (=1)
      23:  00:8E04  32 4A F2            		ld	[ayFX_CHANNEL],a		; Updated
      24:  00:8E07                      ayFX_END:	; --- End of an ayFX stream ---
      25:  00:8E07  3E FF               		ld	a,255				; Lowest ayFX priority
      26:  00:8E09  32 43 F2            		ld	[ayFX_PRIORITY],a		; Priority saved (not playing ayFX stream)
      27:  00:8E0C  C9                  		ret					; Return
      28:  00:8E0D                      
      29:  00:8E0D                      ayFX_INIT:	; ---     INIT A NEW ayFX STREAM     ---
      30:  00:8E0D                      		; --- INPUT: A -> sound to be played ---
      31:  00:8E0D                      		; ---        C -> sound priority     ---
      32:  00:8E0D  C5                  		push	bc				; Store bc in stack
      33:  00:8E0E  D5                  		push	de				; Store de in stack
      34:  00:8E0F  E5                  		push	hl				; Store hl in stack
      35:  00:8E10                      		; --- Check if the index is in the bank ---
      36:  00:8E10  47                  		ld	b,a				; b:=a (new ayFX stream index)
      37:  00:8E11  2A 41 F2            		ld	hl,[ayFX_BANK]			; Current ayFX BANK
      38:  00:8E14  7E                  		ld	a,[hl]				; Number of samples in the bank
      39:  00:8E15  B7                  		or	a				; If zero (means 256 samples)...
      40:  00:8E16  28 06               		jr	z,.CHECK_PRI			; ...goto .CHECK_PRI
      41:  00:8E18                      		; The bank has less than 256 samples
      42:  00:8E18  78                  		ld	a,b				; a:=b (new ayFX stream index)
      43:  00:8E19  BE                  		cp	[hl]				; If new index is not in the bank...
      44:  00:8E1A  3E 02               		ld	a,2				; a:=2 (error 2: Sample not in the bank)
      45:  00:8E1C  30 21               		jr	nc,.INIT_END			; ...we can't init it
      46:  00:8E1E                      .CHECK_PRI:	; --- Check if the new priority is lower than the current one ---
      47:  00:8E1E                      		; ---   Remember: 0 = highest priority, 15 = lowest priority  ---
      48:  00:8E1E  78                  		ld	a,b				; a:=b (new ayFX stream index)
      49:  00:8E1F  3A 43 F2            		ld	a,[ayFX_PRIORITY]		; a:=Current ayFX stream priority
      50:  00:8E22  B9                  		cp	c				; If new ayFX stream priority is lower than current one...
      51:  00:8E23  3E 01               		ld	a,1				; a:=1 (error 1: A sample with higher priority is being played)
      52:  00:8E25  38 18               		jr	c,.INIT_END			; ...we don't start the new ayFX stream
      53:  00:8E27                      		; --- Set new priority ---
      54:  00:8E27  79                  		ld	a,c				; a:=New priority
      55:  00:8E28  E6 0F               		and	$0F				; We mask the priority
      56:  00:8E2A  32 43 F2            		ld	[ayFX_PRIORITY],a		; new ayFX stream priority saved in RAM
      57:  00:8E2D                      
      58:  00:8E2D                      		IF ( AYFXRELATIVE == 1 )
      59:  00:8E2D                    ~ 			; --- Volume adjust using PT3 volume table ---
      60:  00:8E2D                    ~ 			ld	c,a				; c:=New priority (fixed)
      61:  00:8E2D                    ~ 			ld	a,15				; a:=15
      62:  00:8E2D                    ~ 			sub	c				; a:=15-New priority = relative volume
      63:  00:8E2D                    ~ 			jr	z,.INIT_NOSOUND		; If priority is 15 -> no sound output (volume is zero)
      64:  00:8E2D                    ~ 			add	a,a				; a:=a*2
      65:  00:8E2D                    ~ 			add	a,a				; a:=a*4
      66:  00:8E2D                    ~ 			add	a,a				; a:=a*8
      67:  00:8E2D                    ~ 			add	a,a				; a:=a*16
      68:  00:8E2D                    ~ 			ld	e,a				; e:=a
      69:  00:8E2D                    ~ 			ld	d,0				; de:=a
      70:  00:8E2D                    ~ 			ld	hl,VT_				; hl:=PT3 volume table
      71:  00:8E2D                    ~ 			add	hl,de				; hl is a pointer to the relative volume table
      72:  00:8E2D                    ~ 			ld	[ayFX_VT],hl			; Save pointer
      73:  00:8E2D                    ~ 		ENDIF
      74:  00:8E2D                      
      75:  00:8E2D                      		; --- Calculate the pointer to the new ayFX stream ---
      76:  00:8E2D  ED 5B 41 F2         		ld	de,[ayFX_BANK]			; de:=Current ayFX bank
      77:  00:8E31  13                  		inc	de				; de points to the increments table of the bank
      78:  00:8E32  68                  		ld	l,b				; l:=b (new ayFX stream index)
      79:  00:8E33  26 00               		ld	h,0				; hl:=b (new ayFX stream index)
      80:  00:8E35  29                  		add	hl,hl				; hl:=hl*2
      81:  00:8E36  19                  		add	hl,de				; hl:=hl+de (hl points to the correct increment)
      82:  00:8E37  5E                  		ld	e,[hl]				; e:=lower byte of the increment
      83:  00:8E38  23                  		inc	hl				; hl points to the higher byte of the correct increment
      84:  00:8E39  56                  		ld	d,[hl]				; de:=increment
      85:  00:8E3A  19                  		add	hl,de				; hl:=hl+de (hl points to the new ayFX stream)
      86:  00:8E3B  22 44 F2            		ld	[ayFX_POINTER],hl		; Pointer saved in RAM
      87:  00:8E3E  AF                  		xor	a				; a:=0 (no errors)
      88:  00:8E3F  E1                  .INIT_END:	pop	hl				; Retrieve hl from stack
      89:  00:8E40  D1                  		pop	de				; Retrieve de from stack
      90:  00:8E41  C1                  		pop	bc				; Retrieve bc from stack
      91:  00:8E42  C9                  		ret					; Return
      92:  00:8E43                      
      93:  00:8E43                      		IF ( AYFXRELATIVE == 1 )
      94:  00:8E43                    ~ .INIT_NOSOUND:	; --- Init a sample with relative volume zero -> no sound output ---
      95:  00:8E43                    ~ 			ld	a,255				; Lowest ayFX priority
      96:  00:8E43                    ~ 			ld	[ayFX_PRIORITY],a		; Priority saved (not playing ayFX stream)
      97:  00:8E43                    ~ 			jr	.INIT_END			; Jumps to .INIT_END
      98:  00:8E43                    ~ 		ENDIF
      99:  00:8E43                      
     100:  00:8E43                      ayFX_PLAY:	; --- PLAY A FRAME OF AN ayFX STREAM ---
     101:  00:8E43  3A 43 F2            		ld	a,[ayFX_PRIORITY]		; a:=Current ayFX stream priority
     102:  00:8E46  B7                  		or	a				; If priority has bit 7 on...
     103:  00:8E47  F8                  		ret	m				; ...return
     104:  00:8E48                      		; --- Calculate next ayFX channel (if needed) ---
     105:  00:8E48  3A 40 F2            		ld	a,[ayFX_MODE]			; ayFX mode
     106:  00:8E4B  E6 01               		and	1				; If bit0=0 (fixed channel)...
     107:  00:8E4D  28 08               		jr	z,.TAKECB			; ...skip channel changing
     108:  00:8E4F  21 4A F2            		ld	hl,ayFX_CHANNEL			; Old ayFX playing channel
     109:  00:8E52  35                  		dec	[hl]				; New ayFX playing channel
     110:  00:8E53  20 02               		jr	nz,.TAKECB			; If not zero jump to .TAKECB
     111:  00:8E55  36 03               		ld	[hl],3				; If zero -> set channel 3
     112:  00:8E57                      .TAKECB:	; --- Extract control byte from stream ---
     113:  00:8E57  2A 44 F2            		ld	hl,[ayFX_POINTER]		; Pointer to the current ayFX stream
     114:  00:8E5A  4E                  		ld	c,[hl]				; c:=Control byte
     115:  00:8E5B  23                  		inc	hl				; Increment pointer
     116:  00:8E5C                      		; --- Check if there's new tone on stream ---
     117:  00:8E5C  CB 69               		bit	5,c				; If bit 5 c is off...
     118:  00:8E5E  28 08               		jr	z,.CHECK_NN			; ...jump to .CHECK_NN (no new tone)
     119:  00:8E60                      		; --- Extract new tone from stream ---
     120:  00:8E60  5E                  		ld	e,[hl]				; e:=lower byte of new tone
     121:  00:8E61  23                  		inc	hl				; Increment pointer
     122:  00:8E62  56                  		ld	d,[hl]				; d:=higher byte of new tone
     123:  00:8E63  23                  		inc	hl				; Increment pointer
     124:  00:8E64  ED 53 46 F2         		ld	[ayFX_TONE],de			; ayFX tone updated
     125:  00:8E68                      .CHECK_NN:	; --- Check if there's new noise on stream ---
     126:  00:8E68  CB 71               		bit	6,c				; if bit 6 c is off...
     127:  00:8E6A  28 09               		jr	z,.SETPOINTER			; ...jump to .SETPOINTER (no new noise)
     128:  00:8E6C                      		; --- Extract new noise from stream ---
     129:  00:8E6C  7E                  		ld	a,[hl]				; a:=New noise
     130:  00:8E6D  23                  		inc	hl				; Increment pointer
     131:  00:8E6E  FE 20               		cp	$20				; If it's an illegal value of noise (used to mark end of stream)...
     132:  00:8E70  28 95               		jr.	z,ayFX_END			; ...jump to ayFX_END
     133:  00:8E72  32 48 F2            		ld	[ayFX_NOISE],a			; ayFX noise updated
     134:  00:8E75                      .SETPOINTER:	; --- Update ayFX pointer ---
     135:  00:8E75  22 44 F2            		ld	[ayFX_POINTER],hl		; Update ayFX stream pointer
     136:  00:8E78                      		; --- Extract volume ---
     137:  00:8E78  79                  		ld	a,c				; a:=Control byte
     138:  00:8E79  E6 0F               		and	$0F				; lower nibble
     139:  00:8E7B                      
     140:  00:8E7B                      		IF ( AYFXRELATIVE == 1 )
     141:  00:8E7B                    ~ 			; --- Fix the volume using PT3 Volume Table ---
     142:  00:8E7B                    ~ 			ld	hl,[ayFX_VT]			; hl:=Pointer to relative volume table
     143:  00:8E7B                    ~ 			ld	e,a				; e:=a (ayFX volume)
     144:  00:8E7B                    ~ 			ld	d,0				; d:=0
     145:  00:8E7B                    ~ 			add	hl,de				; hl:=hl+de (hl points to the relative volume of this frame
     146:  00:8E7B                    ~ 			ld	a,[hl]				; a:=ayFX relative volume
     147:  00:8E7B                    ~ 			or	a				; If relative volume is zero...
     148:  00:8E7B                    ~ 		ENDIF
     149:  00:8E7B                      
     150:  00:8E7B  32 49 F2            		ld	[ayFX_VOLUME],a			; ayFX volume updated
     151:  00:8E7E  C8                  		ret	z				; ...return (don't copy ayFX values in to AYREGS)
     152:  00:8E7F                      		; -------------------------------------
     153:  00:8E7F                      		; --- COPY ayFX VALUES IN TO AYREGS ---
     154:  00:8E7F                      		; -------------------------------------
     155:  00:8E7F                      		; --- Set noise channel ---
     156:  00:8E7F  CB 79               		bit	7,c				; If noise is off...
     157:  00:8E81  20 06               		jr	nz,.SETMASKS			; ...jump to .SETMASKS
     158:  00:8E83  3A 48 F2            		ld	a,[ayFX_NOISE]			; ayFX noise value
     159:  00:8E86  32 46 F1            		ld	[AYREGS+6],a			; copied in to AYREGS (noise channel)
     160:  00:8E89                      .SETMASKS:	; --- Set mixer masks ---
     161:  00:8E89  79                  		ld	a,c				; a:=Control byte
     162:  00:8E8A  E6 90               		and	$90				; Only bits 7 and 4 (noise and tone mask for psg reg 7)
     163:  00:8E8C  FE 90               		cp	$90				; If no noise and no tone...
     164:  00:8E8E  C8                  		ret	z				; ...return (don't copy ayFX values in to AYREGS)
     165:  00:8E8F                      		; --- Copy ayFX values in to ARYREGS ---
     166:  00:8E8F  0F                  		rrca					; Rotate a to the right (1 TIME)
     167:  00:8E90  0F                  		rrca					; Rotate a to the right (2 TIMES) (OR mask)
     168:  00:8E91  16 DB               		ld	d,$DB				; d:=Mask for psg mixer (AND mask)
     169:  00:8E93                      		; --- Dump to correct channel ---
     170:  00:8E93  21 4A F2            		ld	hl,ayFX_CHANNEL			; Next ayFX playing channel
     171:  00:8E96  46                  		ld	b,[hl]				; Channel counter
     172:  00:8E97                      .CHK1:		; --- Check if playing channel was 1 ---
     173:  00:8E97  10 0D               		djnz	.CHK2				; Decrement and jump if channel was not 1
     174:  00:8E99                      .PLAY_C:	; --- Play ayFX stream on channel C ---
     175:  00:8E99  CD C8 8E            		call	.SETMIXER			; Set PSG mixer value (returning a=ayFX volume and hl=ayFX tone)
     176:  00:8E9C  32 4A F1            		ld	[AYREGS+10],a			; Volume copied in to AYREGS (channel C volume)
     177:  00:8E9F  CB 51               		bit	2,c				; If tone is off...
     178:  00:8EA1  C0                  		ret	nz				; ...return
     179:  00:8EA2  22 44 F1            		ld	[AYREGS+4],hl			; copied in to AYREGS (channel C tone)
     180:  00:8EA5  C9                  		ret					; Return
     181:  00:8EA6                      .CHK2:		; --- Check if playing channel was 2 ---
     182:  00:8EA6  CB 0A               		rrc	d				; Rotate right AND mask
     183:  00:8EA8  0F                  		rrca					; Rotate right OR mask
     184:  00:8EA9  10 0D               		djnz	.CHK3				; Decrement and jump if channel was not 2
     185:  00:8EAB                      .PLAY_B:	; --- Play ayFX stream on channel B ---
     186:  00:8EAB  CD C8 8E            		call	.SETMIXER			; Set PSG mixer value (returning a=ayFX volume and hl=ayFX tone)
     187:  00:8EAE  32 49 F1            		ld	[AYREGS+9],a			; Volume copied in to AYREGS (channel B volume)
     188:  00:8EB1  CB 49               		bit	1,c				; If tone is off...
     189:  00:8EB3  C0                  		ret	nz				; ...return
     190:  00:8EB4  22 42 F1            		ld	[AYREGS+2],hl			; copied in to AYREGS (channel B tone)
     191:  00:8EB7  C9                  		ret					; Return
     192:  00:8EB8                      .CHK3:		; --- Check if playing channel was 3 ---
     193:  00:8EB8  CB 0A               		rrc	d				; Rotate right AND mask
     194:  00:8EBA  0F                  		rrca					; Rotate right OR mask
     195:  00:8EBB                      .PLAY_A:	; --- Play ayFX stream on channel A ---
     196:  00:8EBB  CD C8 8E            		call	.SETMIXER			; Set PSG mixer value (returning a=ayFX volume and hl=ayFX tone)
     197:  00:8EBE  32 48 F1            		ld	[AYREGS+8],a			; Volume copied in to AYREGS (channel A volume)
     198:  00:8EC1  CB 41               		bit	0,c				; If tone is off...
     199:  00:8EC3  C0                  		ret	nz				; ...return
     200:  00:8EC4  22 40 F1            		ld	[AYREGS+0],hl			; copied in to AYREGS (channel A tone)
     201:  00:8EC7  C9                  		ret					; Return
     202:  00:8EC8                      .SETMIXER:	; --- Set PSG mixer value ---
     203:  00:8EC8  4F                  		ld	c,a				; c:=OR mask
     204:  00:8EC9  3A 47 F1            		ld	a,[AYREGS+7]			; a:=PSG mixer value
     205:  00:8ECC  A2                  		and	d				; AND mask
     206:  00:8ECD  B1                  		or	c				; OR mask
     207:  00:8ECE  32 47 F1            		ld	[AYREGS+7],a			; PSG mixer value updated
     208:  00:8ED1  3A 49 F2            		ld	a,[ayFX_VOLUME]			; a:=ayFX volume value
     209:  00:8ED4  2A 46 F2            		ld	hl,[ayFX_TONE]			; ayFX tone value
     210:  00:8ED7  C9                  		ret					; Return
     211:  00:8ED8                      
     212:  00:8ED8                      		IF ( AYFXRELATIVE == 1 )
     213:  00:8ED8                    ~ 			; --- UNCOMMENT THIS IF YOU DON'T USE THIS REPLAYER WITH PT3 REPLAYER ---
     214:  00:8ED8                    ~ 		;VT_:	.INCBIN	"VT.BIN"
     215:  00:8ED8                    ~ 			; --- UNCOMMENT THIS IF YOU DON'T USE THIS REPLAYER WITH PT3 REPLAYER ---
     216:  00:8ED8                    ~ 		ENDIF
      62.  00:8ED8                      	
      63.  00:8ED8                      	
      64.  00:8ED8                      
      65.  00:8ED8                      ;;=====================================================
      66.  00:8ED8                      ;;DEFINICIÓN DE CANTIONES Y EFECTOS DE SONIDO
      67.  00:8ED8                      ;;=====================================================		
      68.  00:8ED8                      song:
      69.  00:8ED8  (0968)              	incbin "bloodytears_castlevania.99"
      70.  00:9840                      	
      71.  00:9840                      sfx_bank:
      72.  00:9840  (004B)              	incbin "demo.afb"
      73.  00:988B                      
     147   00:988B                      	
     148   00:988B                      	include "subr_ayudas.asm"
       1.  00:988B                      ;;=====================================================
       2.  00:988B                      ;;SUBRUTINAS MANEJO DE OBJETOS AYUDA
       3.  00:988B                      ;;=====================================================	
       4.  00:988B                      
       5.  00:988B                      ;;=====================================================
       6.  00:988B                      ;;INICIALIZA_AYUDAS
       7.  00:988B                      ;;=====================================================	
       8.  00:988B                      ; función: 	inicializa las variables de estructuras de ayuda del array lista_ayudas
       9.  00:988B                      ; entrada: 	datos_delasdistintasayudas, variable estructura_ayuda_ayudaquesea
      10.  00:988B                      ; salida: 	lista_ayudas
      11.  00:988B                      ; toca:		HL, DE, BC
      12.  00:988B                      inicializa_ayudas:
      13.  00:988B                      	;oración
      14.  00:988B  DD 21 A2 A7         	LD		IX, ayuda_oracion
      15.  00:988F  DD 36 00 00         	LD		(IX + 0), INACTIVA			
      16.  00:9893  21 7B A8            	LD		HL, array_oracionon
      17.  00:9896  DD 74 01            	LD		(IX + 1), H
      18.  00:9899  DD 75 02            	LD		(IX + 2), L
      19.  00:989C  21 7F A8            	LD		HL, array_oracionoff
      20.  00:989F  DD 74 03            	LD		(IX + 3), H
      21.  00:98A2  DD 75 04            	LD		(IX + 4), L
      22.  00:98A5  DD 36 05 A3         	LD		(IX + 5), POSORACION
      23.  00:98A9  DD 36 06 20         	LD		(IX + 6), POSORACIONX
      24.  00:98AD  DD 36 07 70         	LD		(IX + 7), POSAYUDASY	;como es constante y no se cambia se puede inicializar la estructura con el valor y ahorramos tiempo
      25.  00:98B1  21 9F 99            	LD		HL, accion_oracion
      26.  00:98B4  DD 74 08            	LD		(IX + 8), H
      27.  00:98B7  DD 75 09            	LD		(IX + 9), L
      28.  00:98BA                      	
      29.  00:98BA                      	;cruz
      30.  00:98BA  21 1C A8            	LD		HL, datos_cruz
      31.  00:98BD  11 B2 A7            	LD		DE, ayuda_cruz
      32.  00:98C0  01 10 00            	LD		BC, 16;#ESTRUCTURA_AYUDA ;equivale a 16.. el tamaño de la estructura en bytes
      33.  00:98C3  ED B0               	LDIR
      34.  00:98C5                      	
      35.  00:98C5                      	;agua bendita
      36.  00:98C5  21 26 A8            	LD		HL, datos_aguabendita
      37.  00:98C8  11 C2 A7            	LD		DE, ayuda_aguabendita
      38.  00:98CB  CD F3 98            	CALL	carga_datos_ayuda
      39.  00:98CE                      		
      40.  00:98CE                      	;armadura
      41.  00:98CE  21 37 A8            	LD		HL, datos_armadura
      42.  00:98D1  11 D2 A7            	LD		DE, ayuda_armadura
      43.  00:98D4  CD F3 98            	CALL	carga_datos_ayuda
      44.  00:98D7                      		
      45.  00:98D7                      	;planta
      46.  00:98D7  21 48 A8            	LD		HL, datos_planta
      47.  00:98DA  11 E2 A7            	LD		DE, ayuda_planta
      48.  00:98DD  CD F3 98            	CALL	carga_datos_ayuda
      49.  00:98E0                      		
      50.  00:98E0                      	;vida extra
      51.  00:98E0  21 59 A8            	LD		HL, datos_vidaextra
      52.  00:98E3  11 F2 A7            	LD		DE, ayuda_vidaextra
      53.  00:98E6  CD F3 98            	CALL	carga_datos_ayuda
      54.  00:98E9                      		
      55.  00:98E9                      	;ballesta
      56.  00:98E9  21 6A A8            	LD		HL, datos_ballesta
      57.  00:98EC  11 02 A8            	LD		DE, ayuda_ballesta
      58.  00:98EF  CD F3 98            	CALL	carga_datos_ayuda
      59.  00:98F2                      fin_resetea_ayudas:
      60.  00:98F2  C9                  	RET
      61.  00:98F3                      	
      62.  00:98F3                      
      63.  00:98F3                      ;;=====================================================
      64.  00:98F3                      ;;CARGA_DATOS_AYUDA
      65.  00:98F3                      ;;=====================================================	
      66.  00:98F3                      ; función: 	carga los datos de la ayuda de una variable dentro de la variable estructura (más carga y espacio que rellenar a pelo desde IX en adelante pero más simple)
      67.  00:98F3                      ;entrada
      68.  00:98F3                      ;  hl: origen de datos
      69.  00:98F3                      ;  de: destino de datos
      70.  00:98F3                      ; salida: 	-
      71.  00:98F3                      ; toca:		HL, DE, BC
      72.  00:98F3                      carga_datos_ayuda:
      73.  00:98F3  01 10 00            	LD		BC, 16;#ESTRUCTURA_AYUDA ;equivale a 16.. el tamaño de la estructura en bytes
      74.  00:98F6  ED B0               	LDIR
      75.  00:98F8                      fin_carga_datos_ayuda:
      76.  00:98F8  C9                  	RET
      77.  00:98F9                      
      78.  00:98F9                      
      79.  00:98F9                      
      80.  00:98F9                      ;;=====================================================
      81.  00:98F9                      ;;PINTA_OBJ_AYUDA
      82.  00:98F9                      ;;=====================================================	
      83.  00:98F9                      ; función: 	pinta un objeto de tipo ayuda que se le pase por referencia IX y el tipo en A
      84.  00:98F9                      ; entrada: 	IX - puntero a objeto a mostrar, A - si está on u off
      85.  00:98F9                      ; salida: 	-
      86.  00:98F9                      ; toca:		AF, HL, BC, DE
      87.  00:98F9                      pinta_obj_ayuda:
      88.  00:98F9                      	;se recibe objeto desde fuera, por ejmplo LD IX, ayuda_oracion
      89.  00:98F9                      
      90.  00:98F9  B7                  	OR		 A
      91.  00:98FA  CA 09 99            	JP		 Z,.dibujooff
      92.  00:98FD                      .dibujoon:	
      93.  00:98FD  DD 66 01            	LD		 H, (IX + 1)
      94.  00:9900  DD 6E 02            	LD		 L, (IX + 2)
      95.  00:9903  22 F7 84            	LD		(wordaux2), HL
      96.  00:9906  C3 12 99            	JP		.param_wordaux2
      97.  00:9909                      .dibujooff:
      98.  00:9909  DD 66 03            	LD		 H, (IX + 3)
      99.  00:990C  DD 6E 04            	LD		 L, (IX + 4)
     100.  00:990F  22 F7 84            	LD		(wordaux2), HL
     101.  00:9912                      
     102.  00:9912                      .param_wordaux2:	
     103.  00:9912  21 00 19            	LD		HL, TILMAP + 256	;calcula posición en tilemap + 256 por colocarse siempre en bank1
     104.  00:9915  DD 7E 05            	LD		 A, (IX + 5)
     105.  00:9918  CD 32 81            	CALL	suma_A_HL
     106.  00:991B  22 F5 84            	LD		(wordaux1), HL		;pongo el valor en wordaux1
     107.  00:991E                      
     108.  00:991E                      .filasycols:
     109.  00:991E  3E 02               	LD		 A, 2				;equivale a LD	A,2 porque A ya valía 1
     110.  00:9920  32 F9 84            	LD		(byteaux1), A	;nº de filas
     111.  00:9923  32 FA 84            	LD		(byteaux2), A	;nº de columnas
     112.  00:9926                      	
     113.  00:9926  C3 B5 84            	JP		pinta_array
     114.  00:9929                      fin_pinta_obj_ayuda:
     115.  00:9929                      
     116.  00:9929                      
     117.  00:9929                      ;;=====================================================
     118.  00:9929                      ;;PINTA_AYUDAS_HABITACIÓN
     119.  00:9929                      ;;=====================================================	
     120.  00:9929                      ; función: 	examina el byte con las ayudas y pinta las que estén seleccionadas según variable habitacion_extras
     121.  00:9929                      ; entrada: 	habitacion_extras
     122.  00:9929                      ; salida: 	-
     123.  00:9929                      pinta_ayudas_habitacion:
     124.  00:9929                      .examina_oracion:
     125.  00:9929  3A 07 A4            	LD		 A, (habitacion_extras)
     126.  00:992C  CB 7F               	BIT		 7,A
     127.  00:992E  CA 3A 99            	JP		 Z,.examina_cruz
     128.  00:9931  DD 21 A2 A7         	LD		IX, ayuda_oracion
     129.  00:9935  3E 01               	LD		 A, ACTIVA
     130.  00:9937  CD F9 98            	CALL	pinta_obj_ayuda
     131.  00:993A                      .examina_cruz:
     132.  00:993A  3A 07 A4            	LD		 A, (habitacion_extras)
     133.  00:993D  CB 77               	BIT		 6,A
     134.  00:993F  CA 4B 99            	JP		 Z,.examina_aguabendita
     135.  00:9942  DD 21 B2 A7         	LD		IX, ayuda_cruz
     136.  00:9946  3E 01               	LD		 A, ACTIVA
     137.  00:9948  CD F9 98            	CALL	pinta_obj_ayuda
     138.  00:994B                      .examina_aguabendita:
     139.  00:994B  3A 07 A4            	LD		 A, (habitacion_extras)
     140.  00:994E  CB 6F               	BIT		 5,A
     141.  00:9950  CA 5C 99            	JP		 Z,.examina_armadura
     142.  00:9953  DD 21 C2 A7         	LD		IX, ayuda_aguabendita
     143.  00:9957  3E 01               	LD		 A, ACTIVA
     144.  00:9959  CD F9 98            	CALL	pinta_obj_ayuda
     145.  00:995C                      .examina_armadura:
     146.  00:995C  3A 07 A4            	LD		 A, (habitacion_extras)
     147.  00:995F  CB 67               	BIT		 4,A
     148.  00:9961  CA 6D 99            	JP		 Z,.examina_planta
     149.  00:9964  DD 21 D2 A7         	LD		IX, ayuda_armadura
     150.  00:9968  3E 01               	LD		 A, ACTIVA
     151.  00:996A  CD F9 98            	CALL	pinta_obj_ayuda
     152.  00:996D                      .examina_planta:
     153.  00:996D  3A 07 A4            	LD		 A, (habitacion_extras)
     154.  00:9970  CB 5F               	BIT		 3,A
     155.  00:9972  CA 7E 99            	JP		 Z,.examina_vidaextra
     156.  00:9975  DD 21 E2 A7         	LD		IX, ayuda_planta
     157.  00:9979  3E 01               	LD		 A, ACTIVA
     158.  00:997B  CD F9 98            	CALL	pinta_obj_ayuda
     159.  00:997E                      .examina_vidaextra:
     160.  00:997E  3A 07 A4            	LD		 A, (habitacion_extras)
     161.  00:9981  CB 57               	BIT		 2,A
     162.  00:9983  CA 8F 99            	JP		 Z,.examina_ballesta
     163.  00:9986  DD 21 F2 A7         	LD		IX, ayuda_vidaextra
     164.  00:998A  3E 01               	LD		 A, ACTIVA
     165.  00:998C  CD F9 98            	CALL	pinta_obj_ayuda
     166.  00:998F                      .examina_ballesta:
     167.  00:998F  3A 07 A4            	LD		 A, (habitacion_extras)
     168.  00:9992  CB 4F               	BIT		 1,A
     169.  00:9994  C8                  	RET		 Z
     170.  00:9995  DD 21 02 A8         	LD		IX, ayuda_ballesta
     171.  00:9999  3E 01               	LD		 A, ACTIVA
     172.  00:999B  CD F9 98            	CALL	pinta_obj_ayuda
     173.  00:999E                      fin_pinta_ayudas_habitacion:
     174.  00:999E  C9                  	RET
     175.  00:999F                      
     176.  00:999F                      
     177.  00:999F                      
     178.  00:999F                      ;;=====================================================
     179.  00:999F                      ;;ACCION_ORACION
     180.  00:999F                      ;;=====================================================	
     181.  00:999F                      ; función: 	
     182.  00:999F                      ; entrada: 	
     183.  00:999F                      ; salida: 	-
     184.  00:999F                      accion_oracion:
     185.  00:999F                      fin_accion_oracion:
     186.  00:999F  C9                  	RET
     187.  00:99A0                      	
     188.  00:99A0                      
     189.  00:99A0                      ;;=====================================================
     190.  00:99A0                      ;;ACCION_CRUZ
     191.  00:99A0                      ;;=====================================================	
     192.  00:99A0                      ; función: 	
     193.  00:99A0                      ; entrada: 	
     194.  00:99A0                      ; salida: 	-
     195.  00:99A0                      accion_cruz:
     196.  00:99A0                      fin_accion_cruz:
     197.  00:99A0  C9                  	RET
     198.  00:99A1                      
     199.  00:99A1                      
     200.  00:99A1                      ;;=====================================================
     201.  00:99A1                      ;;ACCION_AGUA
     202.  00:99A1                      ;;=====================================================	
     203.  00:99A1                      ; función: 	
     204.  00:99A1                      ; entrada: 	
     205.  00:99A1                      ; salida: 	-
     206.  00:99A1                      accion_agua:
     207.  00:99A1                      fin_accion_agua:
     208.  00:99A1  C9                  	RET
     209.  00:99A2                      
     210.  00:99A2                      
     211.  00:99A2                      ;;=====================================================
     212.  00:99A2                      ;;ACCION_ARMADURA
     213.  00:99A2                      ;;=====================================================	
     214.  00:99A2                      ; función: 	
     215.  00:99A2                      ; entrada: 	
     216.  00:99A2                      ; salida: 	-
     217.  00:99A2                      accion_armadura:
     218.  00:99A2                      fin_accion_armadura:
     219.  00:99A2  C9                  	RET
     220.  00:99A3                      
     221.  00:99A3                      
     222.  00:99A3                      ;;=====================================================
     223.  00:99A3                      ;;ACCION_PLANTA
     224.  00:99A3                      ;;=====================================================	
     225.  00:99A3                      ; función: 	
     226.  00:99A3                      ; entrada: 	
     227.  00:99A3                      ; salida: 	-
     228.  00:99A3                      accion_planta:
     229.  00:99A3                      fin_accion_planta:
     230.  00:99A3  C9                  	RET
     231.  00:99A4                      
     232.  00:99A4                      
     233.  00:99A4                      ;;=====================================================
     234.  00:99A4                      ;;ACCION_VIDAEXTRA
     235.  00:99A4                      ;;=====================================================	
     236.  00:99A4                      ; función: 	
     237.  00:99A4                      ; entrada: 	
     238.  00:99A4                      ; salida: 	-
     239.  00:99A4                      accion_vidaextra:
     240.  00:99A4                      fin_accion_vidaextra:
     241.  00:99A4  C9                  	RET
     242.  00:99A5                      
     243.  00:99A5                      
     244.  00:99A5                      ;;=====================================================
     245.  00:99A5                      ;;ACCION_BALLESTA
     246.  00:99A5                      ;;=====================================================	
     247.  00:99A5                      ; función: 	
     248.  00:99A5                      ; entrada: 	
     249.  00:99A5                      ; salida: 	-
     250.  00:99A5                      accion_ballesta:
     251.  00:99A5                      fin_accion_ballesta:
     252.  00:99A5  C9                  	RET
     253.  00:99A6                      
     254.  00:99A6                      
     149   00:99A6                      	
     150   00:99A6                      
     151   00:99A6                      ;;=====================================================
     152   00:99A6                      ;;DEFINICIÓN DE SUBRUTINAS DE FERNANDO PARA COMPRESIÓN Y SONIDO
     153   00:99A6                      ;;=====================================================
     154   00:99A6                      ;Este include lleva la rutina de descompresión de ROM/RAM a VRAM de pletter
     155   00:99A6                      ;Está adaptada de la original a sjasm
     156   00:99A6                      ;	HL = RAM/ROM source	; DE = VRAM destination
     157   00:99A6                      depack_VRAM:
     158   00:99A6                      	include "PL_VRAM_Depack_SJASM.asm"
       1.  00:99A6                      ;-----------------------------------------------------------
       2.  00:99A6                      ; Pletter v0.5b VRAM Depacker v1.1 - 16Kb version
       3.  00:99A6                      ; HL = RAM/ROM source ; DE = VRAM destination
       4.  00:99A6                      ;-----------------------------------------------------------
       5.  00:99A6  F3                  	di
       6.  00:99A7                      
       7.  00:99A7                      ; VRAM address setup
       8.  00:99A7  7B                  	ld	a,e
       9.  00:99A8  D3 99               	out	[099h],a
      10.  00:99AA  7A                  	ld	a,d
      11.  00:99AB  F6 40               	or	040h
      12.  00:99AD  D3 99               	out	[099h],a
      13.  00:99AF                      
      14.  00:99AF                      ; Initialization
      15.  00:99AF  7E                  	ld	a,[hl]
      16.  00:99B0  23                  	inc	hl
      17.  00:99B1  D9                  	exx
      18.  00:99B2  11 00 00            	ld	de,0
      19.  00:99B5  87                  	add	a,a
      20.  00:99B6  3C                  	inc	a
      21.  00:99B7  CB 13               	rl	e
      22.  00:99B9  87                  	add	a,a
      23.  00:99BA  CB 13               	rl	e
      24.  00:99BC  87                  	add	a,a
      25.  00:99BD  CB 13               	rl	e
      26.  00:99BF  CB 13               	rl	e
      27.  00:99C1  21 78 9A            	ld	hl,modes
      28.  00:99C4  19                  	add	hl,de
      29.  00:99C5  5E                  	ld	e,[hl]
      30.  00:99C6  DD 6B               	ld	ixl,e
      31.  00:99C8  23                  	inc	hl
      32.  00:99C9  5E                  	ld	e,[hl]
      33.  00:99CA  DD 63               	ld	ixh,e
      34.  00:99CC  1E 01               	ld	e,1
      35.  00:99CE  D9                  	exx
      36.  00:99CF  FD 21 D8 99         	ld	iy,loop
      37.  00:99D3                      
      38.  00:99D3                      ; Main depack loop
      39.  00:99D3  0E 98               literal:ld	c,098h
      40.  00:99D5  ED A3               	outi
      41.  00:99D7  13                  	inc	de
      42.  00:99D8  87                  loop:	add	a,a
      43.  00:99D9  CC 6C 9A              	call	z,getbit
      44.  00:99DC  30 F5               	jr	nc,literal
      45.  00:99DE                      
      46.  00:99DE                      ; Compressed data
      47.  00:99DE  D9                  	exx
      48.  00:99DF  62                  	ld	h,d
      49.  00:99E0  6B                  	ld	l,e
      50.  00:99E1  87                  getlen: add	a,a
      51.  00:99E2  CC 70 9A            	call	z,getbitexx
      52.  00:99E5  30 1D               	jr	nc,lenok
      53.  00:99E7  87                  lus:	add	a,a
      54.  00:99E8  CC 70 9A            	call	z,getbitexx
      55.  00:99EB  ED 6A               	adc	hl,hl
      56.  00:99ED  D8                  	ret	c
      57.  00:99EE  87                  	add	a,a
      58.  00:99EF  CC 70 9A            	call	z,getbitexx
      59.  00:99F2  30 10               	jr	nc,lenok
      60.  00:99F4  87                  	add	a,a
      61.  00:99F5  CC 70 9A            	call	z,getbitexx
      62.  00:99F8  ED 6A               	adc	hl,hl
      63.  00:99FA  DA 76 9A            	jp	c,Depack_out
      64.  00:99FD  87                  	add	a,a
      65.  00:99FE  CC 70 9A            	call	z,getbitexx
      66.  00:9A01  DA E7 99            	jp	c,lus
      67.  00:9A04  23                  lenok:  inc	hl
      68.  00:9A05  D9                  	exx
      69.  00:9A06  4E                  	ld	c,[hl]
      70.  00:9A07  23                  	inc	hl
      71.  00:9A08  06 00               	ld	b,0
      72.  00:9A0A  CB 79               	bit	7,c
      73.  00:9A0C  CA 3F 9A            	jp	z,offsok
      74.  00:9A0F  DD E9               	jp	ix
      75.  00:9A11                      
      76.  00:9A11  87                  mode7:  add	a,a
      77.  00:9A12  CC 6C 9A              	call	z,getbit
      78.  00:9A15  CB 10               	rl	b
      79.  00:9A17  87                  mode6:	add	a,a
      80.  00:9A18  CC 6C 9A              	call	z,getbit
      81.  00:9A1B  CB 10               	rl	b
      82.  00:9A1D  87                  mode5:  add	a,a
      83.  00:9A1E  CC 6C 9A              	call	z,getbit
      84.  00:9A21  CB 10               	rl	b
      85.  00:9A23  87                  mode4:  add	a,a
      86.  00:9A24  CC 6C 9A              	call	z,getbit
      87.  00:9A27  CB 10               	rl	b
      88.  00:9A29  87                  mode3:  add	a,a
      89.  00:9A2A  CC 6C 9A              	call	z,getbit
      90.  00:9A2D  CB 10               	rl	b
      91.  00:9A2F  87                  mode2:	add	a,a
      92.  00:9A30  CC 6C 9A              	call	z,getbit
      93.  00:9A33  CB 10               	rl	b
      94.  00:9A35  87                  	add	a,a
      95.  00:9A36  CC 6C 9A              	call	z,getbit
      96.  00:9A39  30 04               	jr	nc,offsok
      97.  00:9A3B  B7                  	or	a
      98.  00:9A3C  04                  	inc	b
      99.  00:9A3D  CB B9               	res	7,c
     100.  00:9A3F  03                  offsok: inc	bc
     101.  00:9A40  E5                  	push	hl
     102.  00:9A41  D9                  	exx
     103.  00:9A42  E5                  	push	hl
     104.  00:9A43  D9                  	exx
     105.  00:9A44  6B                  	ld	l,e
     106.  00:9A45  62                  	ld	h,d
     107.  00:9A46  ED 42               	sbc	hl,bc
     108.  00:9A48  C1                  	pop	bc
     109.  00:9A49  F5                  	push	af
     110.  00:9A4A  7D                  .loop:	ld	a,l
     111.  00:9A4B  D3 99               	out	[099h],a
     112.  00:9A4D  7C                  	ld	a,h
     113.  00:9A4E  00                  	nop                     ; VDP timing
     114.  00:9A4F  D3 99               	out	[099h],a
     115.  00:9A51  00                  	nop                     ; VDP timing
     116.  00:9A52  DB 98               	in	a,[098h]
     117.  00:9A54  08                  	ex	af,af'
     118.  00:9A55  7B                  	ld	a,e
     119.  00:9A56  00                  	nop			; VDP timing
     120.  00:9A57  D3 99               	out	[099h],a
     121.  00:9A59  7A                  	ld	a,d
     122.  00:9A5A  F6 40               	or	040h
     123.  00:9A5C  D3 99               	out	[099h],a
     124.  00:9A5E  08                  	ex	af,af'
     125.  00:9A5F  00                  	nop			; VDP timing
     126.  00:9A60  D3 98               	out	[098h],a
     127.  00:9A62  13                  	inc	de
     128.  00:9A63  ED A1               	cpi
     129.  00:9A65  EA 4A 9A            	jp	pe,.loop
     130.  00:9A68  F1                  	pop	af
     131.  00:9A69  E1                  	pop	hl
     132.  00:9A6A  FD E9               	jp	iy
     133.  00:9A6C                      
     134.  00:9A6C  7E                  getbit: ld	a,[hl]
     135.  00:9A6D  23                  	inc	hl
     136.  00:9A6E  17                  	rla
     137.  00:9A6F  C9                  	ret
     138.  00:9A70                      
     139.  00:9A70                      getbitexx:
     140.  00:9A70  D9                  	exx
     141.  00:9A71  7E                  	ld	a,[hl]
     142.  00:9A72  23                  	inc	hl
     143.  00:9A73  D9                  	exx
     144.  00:9A74  17                  	rla
     145.  00:9A75  C9                  	ret
     146.  00:9A76                      
     147.  00:9A76                      ; Depacker exit
     148.  00:9A76                      Depack_out:
     149.  00:9A76  FB                  	ei
     150.  00:9A77  C9                  	ret
     151.  00:9A78                      
     152.  00:9A78                      modes:
     153.  00:9A78  3F 9A               	dw	offsok
     154.  00:9A7A  2F 9A               	dw	mode2
     155.  00:9A7C  29 9A               	dw	mode3
     156.  00:9A7E  23 9A               	dw	mode4
     157.  00:9A80  1D 9A               	dw	mode5
     158.  00:9A82  17 9A               	dw	mode6
     159.  00:9A84  11 9A               	dw	mode7
     159   00:9A86                      
     160   00:9A86                      
     161   00:9A86                      	
     162   00:9A86                      ;;=====================================================
     163   00:9A86                      ;;DEFINICIÓN DE ESTRUCTURAS
     164   00:9A86                      ;;=====================================================		
     165   00:9A86                      	include "estructuras.asm"
       1.  00:9A86                      ;;=====================================================
       2.  00:9A86                      ;;DEFINICIÓN DE ESTRUCTURAS
       3.  00:9A86                      ;;=====================================================
       4.  00:9A86                      
       5.  00:9A86                      ;crear estructura
       6.  00:9A86                      
       7.  00:9A86                      	STRUCT ESTRUCTURA_PUNTOMIRA
       8.  00:9A86                    < posx			DB		100
       9.  00:9A86                    < posy			DB		100
      10.  00:9A86                    < escena			DB		0	;valores porsibles 0 (blanco+rojo en punto de mira) y NEG 0 (al revés)
      11.  00:9A86                    < velocidad		DB		0
      12.  00:9A86                    < boton2_pressed  DB		0
      13.  00:9A86                    < cadencia		DB		5	;nº de veces que se ejecutará el disparo antes de ejecutar un disparo real (porque cuando se pulsa la tecl dispara 3 ó 4 veces de rápido que va)
      14.  00:9A86                    < ; al final he decidido (ya que el punto de mira es el prota) que lo relacionado con el prota vaya en esta estructura
      15.  00:9A86                    < pm_aux1			DB		0	;para llegar a los 16 campos
      16.  00:9A86                    < pm_aux2			DB		0	;para llegar a los 16 campos
      17.  00:9A86                    < pm_aux3			DB		0	;para llegar a los 16 campos
      18.  00:9A86                    < pm_aux4			DB		0	;para llegar a los 16 campos
      19.  00:9A86                    < pm_aux5			DB		0	;para llegar a los 16 campos
      20.  00:9A86                    < pm_aux6			DB		0	;para llegar a los 16 campos
      21.  00:9A86                    < pm_aux7			DB		0	;para llegar a los 16 campos
      22.  00:9A86                    < pm_aux8			DB		0	;para llegar a los 16 campos
      23.  00:9A86                    < pm_aux9			DB		0	;para llegar a los 16 campos
      24.  00:9A86                    < pm_aux10		DB		0	;para llegar a los 16 campos
      25.  00:9A86                    < 	ENDSTRUCT;ESTRUCTURA_PUNTOMIRA
      26.  00:9A86                      
      27.  00:9A86                      	
      28.  00:9A86                      	STRUCT ESTRUCTURA_ENEMIGO
      29.  00:9A86                    < tipo				DB		0	;(0 serpiente por ejemplo) #FF muerto o no existe
      30.  00:9A86                    < posx				DB		5
      31.  00:9A86                    < posy				DB		50
      32.  00:9A86                    < color				DB		5
      33.  00:9A86                    < escena				DB		0
      34.  00:9A86                    < contador_siguiente_escena	DB	0
      35.  00:9A86                    < reset_contador		DB		0
      36.  00:9A86                    < dano				DB		0	;daño
      37.  00:9A86                    < energia				DB		0	;energía del enemigo... si llega a 0 => existe <- 0
      38.  00:9A86                    < ;indica el nº de sprite a mostrar y si está compuesto por uno o dos sprites y si están en horizontal o vertical
      39.  00:9A86                    < ver_hor				DB		0
      40.  00:9A86                    < manejador_dibujo 	DW		0
      41.  00:9A86                    < en_aux3				DB		0
      42.  00:9A86                    < en_aux4				DB		0
      43.  00:9A86                    < 	ENDSTRUCT;ESTRUCTURA_ENEMIGO
      44.  00:9A86                      	
      45.  00:9A86                      	STRUCT ESTRUCTURA_AYUDA		;vidas extra, plantas de curación de energía, reliquias				
      46.  00:9A86                    < activo				DB		0	;0 no activo <>0 activo 											0
      47.  00:9A86                    < postilemem_nousado	DW		0	;pos en memoria ver array_ayudas de cómo se mostrarán (wordaux2)	1,2
      48.  00:9A86                    < postilemem_usado	DW		0	;pos en memoria ver array_ayudas de cómo se mostrarán (wordaux2)	3,4
      49.  00:9A86                    < pospantalla			DB		0	;pos en pantalla (memoria en el banco 1 se le suma 256 + TILEMAP) (wordaux1)	5
      50.  00:9A86                    < posx				DB		0	;pos del pixel central (esquina superior + 8x)						6
      51.  00:9A86                    < posy				DB		112	;pos del pixel central (esquina superior + 8y) (para toas igual)	7
      52.  00:9A86                    < puntero_accion		DW		0	;subrutina que indica la acción si se dispara en el objeto			8,9
      53.  00:9A86                    < ayu_aux1			DB		0	;relleno
      54.  00:9A86                    < ayu_aux2			DB		0	;relleno
      55.  00:9A86                    < ayu_aux3			DB		0	;relleno
      56.  00:9A86                    < ayu_aux4			DB		0	;relleno
      57.  00:9A86                    < ayu_aux5			DB		0	;relleno
      58.  00:9A86                    < ayu_aux6			DB		0	;relleno
      59.  00:9A86                    < 	ENDSTRUCT;ESTRUCTURA_AYUDA
      60.  00:9A86                      
      61.  00:9A86                      
      62.  00:9A86                      	STRUCT ESTRUCTURA_ANTORCHA
      63.  00:9A86                    < activo				DB		0	;0 no activa <>0 activo
      64.  00:9A86                    < postilemem_antor1	DW		0	;pos en memoria ver array_antorcha de cómo se mostrará (wordaux2)	1,2
      65.  00:9A86                    < pospantalla_antor1	DB		0	;pos en pantalla (memoria en el banco 1 se le suma 256 + TILEMAP) (wordaux1)	3
      66.  00:9A86                    < pospantalla_antor2	DB		0	;pos en pantalla (memoria en el banco 1 se le suma 256 + TILEMAP) (wordaux1)	4
      67.  00:9A86                    < escena				DB		0	;(va entre 0 y 1 - 0=>llama1 y llama2 o 1=>llama2 y llama1	7 - tiles 196 y 197)	5
      68.  00:9A86                    < cont_sig_escena		DB		10	;	6
      69.  00:9A86                    < 	ENDSTRUCT;ESTRUCTURA_ANTORCHA
      70.  00:9A86                      
      71.  00:9A86                      	STRUCT ESTRUCTURA_ESQUELETO
      72.  00:9A86                    < activo				DB		0	;0 no activa <>0 activo
      73.  00:9A86                    < postilemem_antor1	DW		0	;pos en memoria ver array_antorcha de cómo se mostrará (wordaux2)	1,2
      74.  00:9A86                    < pospantalla_esquel1	DB		0	;pos en pantalla (memoria en el banco 1 se le suma 256 + TILEMAP) (wordaux1)	3
      75.  00:9A86                    < pospantalla_esquel2	DB		0	;pos en pantalla (memoria en el banco 1 se le suma 256 + TILEMAP) (wordaux1)	4
      76.  00:9A86                    < escena				DB		0	;(va entre 0 y 4 - tiles 164, 165, 164, 166)	5
      77.  00:9A86                    < cont_sig_escena		DB		0	;	6
      78.  00:9A86                    < 	ENDSTRUCT;ESTRUCTURA_ESQUELETO
      79.  00:9A86                      
      80.  00:9A86                      
      81.  00:9A86                      
      82.  00:9A86                      
      83.  00:9A86                      
      84.  00:9A86                      
     166   00:9A86                      	
     167   00:9A86                      ;;=====================================================
     168   00:9A86                      ;;DEFINICIÓN DE VARIABLES
     169   00:9A86                      ;;=====================================================		
     170   00:9A86                      	include "sprites.asm"
       1.  00:9A86                      ;;=====================================================
       2.  00:9A86                      ;;DEFINICIÓN DE SPRITES
       3.  00:9A86                      ;;=====================================================	
       4.  00:9A86                      
       5.  00:9A86                      
       6.  00:9A86                      ;; NOTA:
       7.  00:9A86                      ;~ sprite_reliquia_oracion: on/off
       8.  00:9A86                      ;~ sprite_reliquia_cruz: on/off
       9.  00:9A86                      ;~ sprite_reliquia_agua: on/off
      10.  00:9A86                      ;~ sprite_peto: on/off
      11.  00:9A86                      ;~ sprite_planta: on/off
      12.  00:9A86                      ;~ sprite_vida_extra: on/off
      13.  00:9A86                      ;~ sprite_ballesta_mejorada: on/off
      14.  00:9A86                      
      15.  00:9A86                      ;~ iban a ser sprites pero por falta de recursos serán tiles
      16.  00:9A86                      
      17.  00:9A86                      
      18.  00:9A86                      sprites_pantantalla:
      19.  00:9A86                      
      20.  00:9A86                      ;; PARTE 1: SPRITES COMUNES
      21.  00:9A86                      
      22.  00:9A86                      sprites_comunes:
      23.  00:9A86                      sprite_punto_mira_1:	;color 8
      24.  00:9A86                      	db #FF,#FF,#C0,#C0,#C0,#C0,#C0,#C0
      24.  00:9A86  FF FF C0 C0 C0 C0 C0 C0 
      25.  00:9A8E                      	db #C0,#C0,#C0,#C0,#C0,#C0,#FF,#FF
      25.  00:9A8E  C0 C0 C0 C0 C0 C0 FF FF 
      26.  00:9A96                      	db #FF,#FF,#03,#03,#03,#03,#03,#03
      26.  00:9A96  FF FF 03 03 03 03 03 03 
      27.  00:9A9E                      	db #03,#03,#03,#03,#03,#03,#FF,#FF
      27.  00:9A9E  03 03 03 03 03 03 FF FF 
      28.  00:9AA6                      	
      29.  00:9AA6                      sprite_punto_mira_2: 	;color 15
      30.  00:9AA6                      	db #00,#00,#00,#00,#0F,#0F,#0C,#0C
      30.  00:9AA6  00 00 00 00 0F 0F 0C 0C 
      31.  00:9AAE                      	db #0C,#0C,#0F,#0F,#00,#00,#00,#00
      31.  00:9AAE  0C 0C 0F 0F 00 00 00 00 
      32.  00:9AB6                      	db #00,#00,#00,#00,#F0,#F0,#30,#30
      32.  00:9AB6  00 00 00 00 F0 F0 30 30 
      33.  00:9ABE                      	db #30,#30,#F0,#F0,#00,#00,#00,#00
      33.  00:9ABE  30 30 F0 F0 00 00 00 00 
      34.  00:9AC6                      	
      35.  00:9AC6                      sprite_punto_mira_1_mejorado:
      36.  00:9AC6                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      36.  00:9AC6  FF FF FF FF FF FF FF FF 
      37.  00:9ACE                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      37.  00:9ACE  FF FF FF FF FF FF FF FF 
      38.  00:9AD6                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      38.  00:9AD6  FF FF FF FF FF FF FF FF 
      39.  00:9ADE                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      39.  00:9ADE  FF FF FF FF FF FF FF FF 
      40.  00:9AE6                      
      41.  00:9AE6                      sprite_punto_mira_2_mejorado:
      42.  00:9AE6                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      42.  00:9AE6  FF FF FF FF FF FF FF FF 
      43.  00:9AEE                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      43.  00:9AEE  FF FF FF FF FF FF FF FF 
      44.  00:9AF6                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      44.  00:9AF6  FF FF FF FF FF FF FF FF 
      45.  00:9AFE                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      45.  00:9AFE  FF FF FF FF FF FF FF FF 
      46.  00:9B06                      	
      47.  00:9B06                      sprite_explosion_1:
      48.  00:9B06                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      48.  00:9B06  FF FF FF FF FF FF FF FF 
      49.  00:9B0E                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      49.  00:9B0E  FF FF FF FF FF FF FF FF 
      50.  00:9B16                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      50.  00:9B16  FF FF FF FF FF FF FF FF 
      51.  00:9B1E                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF	
      51.  00:9B1E  FF FF FF FF FF FF FF FF 
      52.  00:9B26                      
      53.  00:9B26                      sprite_explosion_2:
      54.  00:9B26                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      54.  00:9B26  FF FF FF FF FF FF FF FF 
      55.  00:9B2E                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      55.  00:9B2E  FF FF FF FF FF FF FF FF 
      56.  00:9B36                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      56.  00:9B36  FF FF FF FF FF FF FF FF 
      57.  00:9B3E                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF	
      57.  00:9B3E  FF FF FF FF FF FF FF FF 
      58.  00:9B46                      fin_sprites_comunes:
      59.  00:9B46                      
      60.  00:9B46                      ;; PARTE 2: SPRITES NO COMUNES
      61.  00:9B46                      
      62.  00:9B46                      ;; ARAÑA
      63.  00:9B46                      	
      64.  00:9B46                      sprite_arana1_1:
      65.  00:9B46                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      65.  00:9B46  FF FF FF FF FF FF FF FF 
      66.  00:9B4E                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      66.  00:9B4E  FF FF FF FF FF FF FF FF 
      67.  00:9B56                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      67.  00:9B56  FF FF FF FF FF FF FF FF 
      68.  00:9B5E                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      68.  00:9B5E  FF FF FF FF FF FF FF FF 
      69.  00:9B66                      	
      70.  00:9B66                      sprite_arana1_2:
      71.  00:9B66                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      71.  00:9B66  FF FF FF FF FF FF FF FF 
      72.  00:9B6E                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      72.  00:9B6E  FF FF FF FF FF FF FF FF 
      73.  00:9B76                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      73.  00:9B76  FF FF FF FF FF FF FF FF 
      74.  00:9B7E                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      74.  00:9B7E  FF FF FF FF FF FF FF FF 
      75.  00:9B86                      
      76.  00:9B86                      ;; MURCIELAGO
      77.  00:9B86                      	
      78.  00:9B86                      sprite_murcielago1_1:
      79.  00:9B86                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      79.  00:9B86  FF FF FF FF FF FF FF FF 
      80.  00:9B8E                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      80.  00:9B8E  FF FF FF FF FF FF FF FF 
      81.  00:9B96                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      81.  00:9B96  FF FF FF FF FF FF FF FF 
      82.  00:9B9E                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      82.  00:9B9E  FF FF FF FF FF FF FF FF 
      83.  00:9BA6                      	
      84.  00:9BA6                      sprite_murcielago1_2:
      85.  00:9BA6                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      85.  00:9BA6  FF FF FF FF FF FF FF FF 
      86.  00:9BAE                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      86.  00:9BAE  FF FF FF FF FF FF FF FF 
      87.  00:9BB6                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      87.  00:9BB6  FF FF FF FF FF FF FF FF 
      88.  00:9BBE                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF	
      88.  00:9BBE  FF FF FF FF FF FF FF FF 
      89.  00:9BC6                      
      90.  00:9BC6                      ;; SERPIENTE
      91.  00:9BC6                      
      92.  00:9BC6                      sprite_serpiente1_1:
      93.  00:9BC6                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      93.  00:9BC6  FF FF FF FF FF FF FF FF 
      94.  00:9BCE                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      94.  00:9BCE  FF FF FF FF FF FF FF FF 
      95.  00:9BD6                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      95.  00:9BD6  FF FF FF FF FF FF FF FF 
      96.  00:9BDE                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      96.  00:9BDE  FF FF FF FF FF FF FF FF 
      97.  00:9BE6                      	
      98.  00:9BE6                      sprite_serpiente1_2:
      99.  00:9BE6                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      99.  00:9BE6  FF FF FF FF FF FF FF FF 
     100.  00:9BEE                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     100.  00:9BEE  FF FF FF FF FF FF FF FF 
     101.  00:9BF6                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     101.  00:9BF6  FF FF FF FF FF FF FF FF 
     102.  00:9BFE                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     102.  00:9BFE  FF FF FF FF FF FF FF FF 
     103.  00:9C06                      	
     104.  00:9C06                      sprite_serpiente2_1:
     105.  00:9C06                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     105.  00:9C06  FF FF FF FF FF FF FF FF 
     106.  00:9C0E                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     106.  00:9C0E  FF FF FF FF FF FF FF FF 
     107.  00:9C16                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     107.  00:9C16  FF FF FF FF FF FF FF FF 
     108.  00:9C1E                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     108.  00:9C1E  FF FF FF FF FF FF FF FF 
     109.  00:9C26                      	
     110.  00:9C26                      sprite_serpiente2_2:
     111.  00:9C26                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     111.  00:9C26  FF FF FF FF FF FF FF FF 
     112.  00:9C2E                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     112.  00:9C2E  FF FF FF FF FF FF FF FF 
     113.  00:9C36                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     113.  00:9C36  FF FF FF FF FF FF FF FF 
     114.  00:9C3E                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     114.  00:9C3E  FF FF FF FF FF FF FF FF 
     115.  00:9C46                      
     116.  00:9C46                      ;; ZOMBI
     117.  00:9C46                      
     118.  00:9C46                      sprite_zombi1_1_1:
     119.  00:9C46                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     119.  00:9C46  FF FF FF FF FF FF FF FF 
     120.  00:9C4E                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     120.  00:9C4E  FF FF FF FF FF FF FF FF 
     121.  00:9C56                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     121.  00:9C56  FF FF FF FF FF FF FF FF 
     122.  00:9C5E                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     122.  00:9C5E  FF FF FF FF FF FF FF FF 
     123.  00:9C66                      
     124.  00:9C66                      sprite_zombi1_2_1:
     125.  00:9C66                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     125.  00:9C66  FF FF FF FF FF FF FF FF 
     126.  00:9C6E                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     126.  00:9C6E  FF FF FF FF FF FF FF FF 
     127.  00:9C76                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     127.  00:9C76  FF FF FF FF FF FF FF FF 
     128.  00:9C7E                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     128.  00:9C7E  FF FF FF FF FF FF FF FF 
     129.  00:9C86                      	
     130.  00:9C86                      sprite_zombi1_3_1:
     131.  00:9C86                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     131.  00:9C86  FF FF FF FF FF FF FF FF 
     132.  00:9C8E                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     132.  00:9C8E  FF FF FF FF FF FF FF FF 
     133.  00:9C96                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     133.  00:9C96  FF FF FF FF FF FF FF FF 
     134.  00:9C9E                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     134.  00:9C9E  FF FF FF FF FF FF FF FF 
     135.  00:9CA6                      	
     136.  00:9CA6                      sprite_zombi1_4_1:
     137.  00:9CA6                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     137.  00:9CA6  FF FF FF FF FF FF FF FF 
     138.  00:9CAE                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     138.  00:9CAE  FF FF FF FF FF FF FF FF 
     139.  00:9CB6                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     139.  00:9CB6  FF FF FF FF FF FF FF FF 
     140.  00:9CBE                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     140.  00:9CBE  FF FF FF FF FF FF FF FF 
     141.  00:9CC6                      	
     142.  00:9CC6                      sprite_zombi1_1_2:
     143.  00:9CC6                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     143.  00:9CC6  FF FF FF FF FF FF FF FF 
     144.  00:9CCE                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     144.  00:9CCE  FF FF FF FF FF FF FF FF 
     145.  00:9CD6                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     145.  00:9CD6  FF FF FF FF FF FF FF FF 
     146.  00:9CDE                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     146.  00:9CDE  FF FF FF FF FF FF FF FF 
     147.  00:9CE6                      
     148.  00:9CE6                      sprite_zombi1_2_2:
     149.  00:9CE6                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     149.  00:9CE6  FF FF FF FF FF FF FF FF 
     150.  00:9CEE                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     150.  00:9CEE  FF FF FF FF FF FF FF FF 
     151.  00:9CF6                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     151.  00:9CF6  FF FF FF FF FF FF FF FF 
     152.  00:9CFE                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     152.  00:9CFE  FF FF FF FF FF FF FF FF 
     153.  00:9D06                      	
     154.  00:9D06                      sprite_zombi1_3_2:
     155.  00:9D06                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     155.  00:9D06  FF FF FF FF FF FF FF FF 
     156.  00:9D0E                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     156.  00:9D0E  FF FF FF FF FF FF FF FF 
     157.  00:9D16                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     157.  00:9D16  FF FF FF FF FF FF FF FF 
     158.  00:9D1E                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     158.  00:9D1E  FF FF FF FF FF FF FF FF 
     159.  00:9D26                      	
     160.  00:9D26                      sprite_zombi1_4_2:
     161.  00:9D26                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     161.  00:9D26  FF FF FF FF FF FF FF FF 
     162.  00:9D2E                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     162.  00:9D2E  FF FF FF FF FF FF FF FF 
     163.  00:9D36                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     163.  00:9D36  FF FF FF FF FF FF FF FF 
     164.  00:9D3E                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     164.  00:9D3E  FF FF FF FF FF FF FF FF 
     165.  00:9D46                      	
     166.  00:9D46                      sprite_zombi2_1_1:
     167.  00:9D46                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     167.  00:9D46  FF FF FF FF FF FF FF FF 
     168.  00:9D4E                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     168.  00:9D4E  FF FF FF FF FF FF FF FF 
     169.  00:9D56                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     169.  00:9D56  FF FF FF FF FF FF FF FF 
     170.  00:9D5E                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     170.  00:9D5E  FF FF FF FF FF FF FF FF 
     171.  00:9D66                      
     172.  00:9D66                      sprite_zombi2_2_1:
     173.  00:9D66                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     173.  00:9D66  FF FF FF FF FF FF FF FF 
     174.  00:9D6E                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     174.  00:9D6E  FF FF FF FF FF FF FF FF 
     175.  00:9D76                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     175.  00:9D76  FF FF FF FF FF FF FF FF 
     176.  00:9D7E                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     176.  00:9D7E  FF FF FF FF FF FF FF FF 
     177.  00:9D86                      	
     178.  00:9D86                      sprite_zombi2_3_1:
     179.  00:9D86                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     179.  00:9D86  FF FF FF FF FF FF FF FF 
     180.  00:9D8E                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     180.  00:9D8E  FF FF FF FF FF FF FF FF 
     181.  00:9D96                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     181.  00:9D96  FF FF FF FF FF FF FF FF 
     182.  00:9D9E                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     182.  00:9D9E  FF FF FF FF FF FF FF FF 
     183.  00:9DA6                      	
     184.  00:9DA6                      sprite_zombi2_4_1:
     185.  00:9DA6                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     185.  00:9DA6  FF FF FF FF FF FF FF FF 
     186.  00:9DAE                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     186.  00:9DAE  FF FF FF FF FF FF FF FF 
     187.  00:9DB6                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     187.  00:9DB6  FF FF FF FF FF FF FF FF 
     188.  00:9DBE                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     188.  00:9DBE  FF FF FF FF FF FF FF FF 
     189.  00:9DC6                      	
     190.  00:9DC6                      sprite_zombi2_1_2:
     191.  00:9DC6                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     191.  00:9DC6  FF FF FF FF FF FF FF FF 
     192.  00:9DCE                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     192.  00:9DCE  FF FF FF FF FF FF FF FF 
     193.  00:9DD6                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     193.  00:9DD6  FF FF FF FF FF FF FF FF 
     194.  00:9DDE                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     194.  00:9DDE  FF FF FF FF FF FF FF FF 
     195.  00:9DE6                      
     196.  00:9DE6                      sprite_zombi2_2_2:
     197.  00:9DE6                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     197.  00:9DE6  FF FF FF FF FF FF FF FF 
     198.  00:9DEE                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     198.  00:9DEE  FF FF FF FF FF FF FF FF 
     199.  00:9DF6                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     199.  00:9DF6  FF FF FF FF FF FF FF FF 
     200.  00:9DFE                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     200.  00:9DFE  FF FF FF FF FF FF FF FF 
     201.  00:9E06                      	
     202.  00:9E06                      sprite_zombi2_3_2:
     203.  00:9E06                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     203.  00:9E06  FF FF FF FF FF FF FF FF 
     204.  00:9E0E                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     204.  00:9E0E  FF FF FF FF FF FF FF FF 
     205.  00:9E16                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     205.  00:9E16  FF FF FF FF FF FF FF FF 
     206.  00:9E1E                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     206.  00:9E1E  FF FF FF FF FF FF FF FF 
     207.  00:9E26                      	
     208.  00:9E26                      sprite_zombi2_4_2:
     209.  00:9E26                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     209.  00:9E26  FF FF FF FF FF FF FF FF 
     210.  00:9E2E                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     210.  00:9E2E  FF FF FF FF FF FF FF FF 
     211.  00:9E36                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     211.  00:9E36  FF FF FF FF FF FF FF FF 
     212.  00:9E3E                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     212.  00:9E3E  FF FF FF FF FF FF FF FF 
     213.  00:9E46                      	
     214.  00:9E46                      ;; CABALLERO
     215.  00:9E46                      
     216.  00:9E46                      sprite_caballero1_1_1:
     217.  00:9E46                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     217.  00:9E46  FF FF FF FF FF FF FF FF 
     218.  00:9E4E                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     218.  00:9E4E  FF FF FF FF FF FF FF FF 
     219.  00:9E56                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     219.  00:9E56  FF FF FF FF FF FF FF FF 
     220.  00:9E5E                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     220.  00:9E5E  FF FF FF FF FF FF FF FF 
     221.  00:9E66                      
     222.  00:9E66                      sprite_caballero1_2_1:
     223.  00:9E66                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     223.  00:9E66  FF FF FF FF FF FF FF FF 
     224.  00:9E6E                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     224.  00:9E6E  FF FF FF FF FF FF FF FF 
     225.  00:9E76                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     225.  00:9E76  FF FF FF FF FF FF FF FF 
     226.  00:9E7E                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     226.  00:9E7E  FF FF FF FF FF FF FF FF 
     227.  00:9E86                      	
     228.  00:9E86                      sprite_caballero1_3_1:
     229.  00:9E86                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     229.  00:9E86  FF FF FF FF FF FF FF FF 
     230.  00:9E8E                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     230.  00:9E8E  FF FF FF FF FF FF FF FF 
     231.  00:9E96                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     231.  00:9E96  FF FF FF FF FF FF FF FF 
     232.  00:9E9E                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     232.  00:9E9E  FF FF FF FF FF FF FF FF 
     233.  00:9EA6                      	
     234.  00:9EA6                      sprite_caballero1_4_1:
     235.  00:9EA6                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     235.  00:9EA6  FF FF FF FF FF FF FF FF 
     236.  00:9EAE                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     236.  00:9EAE  FF FF FF FF FF FF FF FF 
     237.  00:9EB6                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     237.  00:9EB6  FF FF FF FF FF FF FF FF 
     238.  00:9EBE                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     238.  00:9EBE  FF FF FF FF FF FF FF FF 
     239.  00:9EC6                      	
     240.  00:9EC6                      sprite_caballero1_1_2:
     241.  00:9EC6                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     241.  00:9EC6  FF FF FF FF FF FF FF FF 
     242.  00:9ECE                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     242.  00:9ECE  FF FF FF FF FF FF FF FF 
     243.  00:9ED6                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     243.  00:9ED6  FF FF FF FF FF FF FF FF 
     244.  00:9EDE                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     244.  00:9EDE  FF FF FF FF FF FF FF FF 
     245.  00:9EE6                      
     246.  00:9EE6                      sprite_caballero1_2_2:
     247.  00:9EE6                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     247.  00:9EE6  FF FF FF FF FF FF FF FF 
     248.  00:9EEE                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     248.  00:9EEE  FF FF FF FF FF FF FF FF 
     249.  00:9EF6                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     249.  00:9EF6  FF FF FF FF FF FF FF FF 
     250.  00:9EFE                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     250.  00:9EFE  FF FF FF FF FF FF FF FF 
     251.  00:9F06                      	
     252.  00:9F06                      sprite_caballero1_3_2:
     253.  00:9F06                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     253.  00:9F06  FF FF FF FF FF FF FF FF 
     254.  00:9F0E                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     254.  00:9F0E  FF FF FF FF FF FF FF FF 
     255.  00:9F16                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     255.  00:9F16  FF FF FF FF FF FF FF FF 
     256.  00:9F1E                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     256.  00:9F1E  FF FF FF FF FF FF FF FF 
     257.  00:9F26                      	
     258.  00:9F26                      sprite_caballero1_4_2:
     259.  00:9F26                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     259.  00:9F26  FF FF FF FF FF FF FF FF 
     260.  00:9F2E                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     260.  00:9F2E  FF FF FF FF FF FF FF FF 
     261.  00:9F36                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     261.  00:9F36  FF FF FF FF FF FF FF FF 
     262.  00:9F3E                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     262.  00:9F3E  FF FF FF FF FF FF FF FF 
     263.  00:9F46                      	
     264.  00:9F46                      sprite_caballero2_1_1:
     265.  00:9F46                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     265.  00:9F46  FF FF FF FF FF FF FF FF 
     266.  00:9F4E                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     266.  00:9F4E  FF FF FF FF FF FF FF FF 
     267.  00:9F56                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     267.  00:9F56  FF FF FF FF FF FF FF FF 
     268.  00:9F5E                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     268.  00:9F5E  FF FF FF FF FF FF FF FF 
     269.  00:9F66                      
     270.  00:9F66                      sprite_caballero2_2_1:
     271.  00:9F66                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     271.  00:9F66  FF FF FF FF FF FF FF FF 
     272.  00:9F6E                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     272.  00:9F6E  FF FF FF FF FF FF FF FF 
     273.  00:9F76                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     273.  00:9F76  FF FF FF FF FF FF FF FF 
     274.  00:9F7E                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     274.  00:9F7E  FF FF FF FF FF FF FF FF 
     275.  00:9F86                      	
     276.  00:9F86                      sprite_caballero2_3_1:
     277.  00:9F86                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     277.  00:9F86  FF FF FF FF FF FF FF FF 
     278.  00:9F8E                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     278.  00:9F8E  FF FF FF FF FF FF FF FF 
     279.  00:9F96                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     279.  00:9F96  FF FF FF FF FF FF FF FF 
     280.  00:9F9E                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     280.  00:9F9E  FF FF FF FF FF FF FF FF 
     281.  00:9FA6                      	
     282.  00:9FA6                      sprite_caballero2_4_1:
     283.  00:9FA6                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     283.  00:9FA6  FF FF FF FF FF FF FF FF 
     284.  00:9FAE                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     284.  00:9FAE  FF FF FF FF FF FF FF FF 
     285.  00:9FB6                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     285.  00:9FB6  FF FF FF FF FF FF FF FF 
     286.  00:9FBE                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     286.  00:9FBE  FF FF FF FF FF FF FF FF 
     287.  00:9FC6                      	
     288.  00:9FC6                      sprite_caballero2_1_2:
     289.  00:9FC6                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     289.  00:9FC6  FF FF FF FF FF FF FF FF 
     290.  00:9FCE                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     290.  00:9FCE  FF FF FF FF FF FF FF FF 
     291.  00:9FD6                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     291.  00:9FD6  FF FF FF FF FF FF FF FF 
     292.  00:9FDE                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     292.  00:9FDE  FF FF FF FF FF FF FF FF 
     293.  00:9FE6                      
     294.  00:9FE6                      sprite_caballero2_2_2:
     295.  00:9FE6                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     295.  00:9FE6  FF FF FF FF FF FF FF FF 
     296.  00:9FEE                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     296.  00:9FEE  FF FF FF FF FF FF FF FF 
     297.  00:9FF6                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     297.  00:9FF6  FF FF FF FF FF FF FF FF 
     298.  00:9FFE                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     298.  00:9FFE  FF FF FF FF FF FF FF FF 
     299.  00:A006                      	
     300.  00:A006                      sprite_caballero2_3_2:
     301.  00:A006                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     301.  00:A006  FF FF FF FF FF FF FF FF 
     302.  00:A00E                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     302.  00:A00E  FF FF FF FF FF FF FF FF 
     303.  00:A016                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     303.  00:A016  FF FF FF FF FF FF FF FF 
     304.  00:A01E                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     304.  00:A01E  FF FF FF FF FF FF FF FF 
     305.  00:A026                      	
     306.  00:A026                      sprite_caballero2_4_2:
     307.  00:A026                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     307.  00:A026  FF FF FF FF FF FF FF FF 
     308.  00:A02E                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     308.  00:A02E  FF FF FF FF FF FF FF FF 
     309.  00:A036                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     309.  00:A036  FF FF FF FF FF FF FF FF 
     310.  00:A03E                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     310.  00:A03E  FF FF FF FF FF FF FF FF 
     311.  00:A046                      	
     312.  00:A046                      ;; LLAMA
     313.  00:A046                      
     314.  00:A046                      sprite_llama1_1:	
     315.  00:A046                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     315.  00:A046  FF FF FF FF FF FF FF FF 
     316.  00:A04E                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     316.  00:A04E  FF FF FF FF FF FF FF FF 
     317.  00:A056                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     317.  00:A056  FF FF FF FF FF FF FF FF 
     318.  00:A05E                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     318.  00:A05E  FF FF FF FF FF FF FF FF 
     319.  00:A066                      	
     320.  00:A066                      sprite_llama2_1:	
     321.  00:A066                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     321.  00:A066  FF FF FF FF FF FF FF FF 
     322.  00:A06E                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     322.  00:A06E  FF FF FF FF FF FF FF FF 
     323.  00:A076                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     323.  00:A076  FF FF FF FF FF FF FF FF 
     324.  00:A07E                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF	
     324.  00:A07E  FF FF FF FF FF FF FF FF 
     325.  00:A086                      	
     326.  00:A086                      sprite_llama1_2:	
     327.  00:A086                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     327.  00:A086  FF FF FF FF FF FF FF FF 
     328.  00:A08E                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     328.  00:A08E  FF FF FF FF FF FF FF FF 
     329.  00:A096                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     329.  00:A096  FF FF FF FF FF FF FF FF 
     330.  00:A09E                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     330.  00:A09E  FF FF FF FF FF FF FF FF 
     331.  00:A0A6                      	
     332.  00:A0A6                      sprite_llama2_2:	
     333.  00:A0A6                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     333.  00:A0A6  FF FF FF FF FF FF FF FF 
     334.  00:A0AE                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     334.  00:A0AE  FF FF FF FF FF FF FF FF 
     335.  00:A0B6                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     335.  00:A0B6  FF FF FF FF FF FF FF FF 
     336.  00:A0BE                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF			
     336.  00:A0BE  FF FF FF FF FF FF FF FF 
     337.  00:A0C6                      	
     338.  00:A0C6                      ;; FANTASMA
     339.  00:A0C6                      
     340.  00:A0C6                      sprite_fantasma1_1:
     341.  00:A0C6                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     341.  00:A0C6  FF FF FF FF FF FF FF FF 
     342.  00:A0CE                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     342.  00:A0CE  FF FF FF FF FF FF FF FF 
     343.  00:A0D6                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     343.  00:A0D6  FF FF FF FF FF FF FF FF 
     344.  00:A0DE                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     344.  00:A0DE  FF FF FF FF FF FF FF FF 
     345.  00:A0E6                      
     346.  00:A0E6                      sprite_fantasma2_1:
     347.  00:A0E6                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     347.  00:A0E6  FF FF FF FF FF FF FF FF 
     348.  00:A0EE                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     348.  00:A0EE  FF FF FF FF FF FF FF FF 
     349.  00:A0F6                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     349.  00:A0F6  FF FF FF FF FF FF FF FF 
     350.  00:A0FE                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     350.  00:A0FE  FF FF FF FF FF FF FF FF 
     351.  00:A106                      
     352.  00:A106                      sprite_fantasma1_2:
     353.  00:A106                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     353.  00:A106  FF FF FF FF FF FF FF FF 
     354.  00:A10E                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     354.  00:A10E  FF FF FF FF FF FF FF FF 
     355.  00:A116                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     355.  00:A116  FF FF FF FF FF FF FF FF 
     356.  00:A11E                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     356.  00:A11E  FF FF FF FF FF FF FF FF 
     357.  00:A126                      
     358.  00:A126                      sprite_fantasma2_2:
     359.  00:A126                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     359.  00:A126  FF FF FF FF FF FF FF FF 
     360.  00:A12E                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     360.  00:A12E  FF FF FF FF FF FF FF FF 
     361.  00:A136                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     361.  00:A136  FF FF FF FF FF FF FF FF 
     362.  00:A13E                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF	
     362.  00:A13E  FF FF FF FF FF FF FF FF 
     363.  00:A146                      	
     364.  00:A146                      ;; MAGIA
     365.  00:A146                      
     366.  00:A146                      sprite_magia1_1:
     367.  00:A146                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     367.  00:A146  FF FF FF FF FF FF FF FF 
     368.  00:A14E                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     368.  00:A14E  FF FF FF FF FF FF FF FF 
     369.  00:A156                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     369.  00:A156  FF FF FF FF FF FF FF FF 
     370.  00:A15E                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     370.  00:A15E  FF FF FF FF FF FF FF FF 
     371.  00:A166                      
     372.  00:A166                      sprite_magia2_1:
     373.  00:A166                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     373.  00:A166  FF FF FF FF FF FF FF FF 
     374.  00:A16E                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     374.  00:A16E  FF FF FF FF FF FF FF FF 
     375.  00:A176                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     375.  00:A176  FF FF FF FF FF FF FF FF 
     376.  00:A17E                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     376.  00:A17E  FF FF FF FF FF FF FF FF 
     377.  00:A186                      
     378.  00:A186                      sprite_magia1_2:
     379.  00:A186                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     379.  00:A186  FF FF FF FF FF FF FF FF 
     380.  00:A18E                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     380.  00:A18E  FF FF FF FF FF FF FF FF 
     381.  00:A196                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     381.  00:A196  FF FF FF FF FF FF FF FF 
     382.  00:A19E                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     382.  00:A19E  FF FF FF FF FF FF FF FF 
     383.  00:A1A6                      
     384.  00:A1A6                      sprite_magia2_2:
     385.  00:A1A6                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     385.  00:A1A6  FF FF FF FF FF FF FF FF 
     386.  00:A1AE                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     386.  00:A1AE  FF FF FF FF FF FF FF FF 
     387.  00:A1B6                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     387.  00:A1B6  FF FF FF FF FF FF FF FF 
     388.  00:A1BE                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF	
     388.  00:A1BE  FF FF FF FF FF FF FF FF 
     389.  00:A1C6                      	
     390.  00:A1C6                      	
     391.  00:A1C6                      ;; BEHOLDER
     392.  00:A1C6                      
     393.  00:A1C6                      sprite_beholder1_1:
     394.  00:A1C6                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     394.  00:A1C6  FF FF FF FF FF FF FF FF 
     395.  00:A1CE                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     395.  00:A1CE  FF FF FF FF FF FF FF FF 
     396.  00:A1D6                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     396.  00:A1D6  FF FF FF FF FF FF FF FF 
     397.  00:A1DE                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     397.  00:A1DE  FF FF FF FF FF FF FF FF 
     398.  00:A1E6                      
     399.  00:A1E6                      sprite_beholder2_1:
     400.  00:A1E6                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     400.  00:A1E6  FF FF FF FF FF FF FF FF 
     401.  00:A1EE                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     401.  00:A1EE  FF FF FF FF FF FF FF FF 
     402.  00:A1F6                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     402.  00:A1F6  FF FF FF FF FF FF FF FF 
     403.  00:A1FE                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     403.  00:A1FE  FF FF FF FF FF FF FF FF 
     404.  00:A206                      
     405.  00:A206                      sprite_beholder3_1:
     406.  00:A206                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     406.  00:A206  FF FF FF FF FF FF FF FF 
     407.  00:A20E                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     407.  00:A20E  FF FF FF FF FF FF FF FF 
     408.  00:A216                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     408.  00:A216  FF FF FF FF FF FF FF FF 
     409.  00:A21E                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     409.  00:A21E  FF FF FF FF FF FF FF FF 
     410.  00:A226                      
     411.  00:A226                      sprite_beholder4_1:
     412.  00:A226                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     412.  00:A226  FF FF FF FF FF FF FF FF 
     413.  00:A22E                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     413.  00:A22E  FF FF FF FF FF FF FF FF 
     414.  00:A236                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     414.  00:A236  FF FF FF FF FF FF FF FF 
     415.  00:A23E                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF	
     415.  00:A23E  FF FF FF FF FF FF FF FF 
     416.  00:A246                      	
     417.  00:A246                      sprite_beholder1_2:
     418.  00:A246                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     418.  00:A246  FF FF FF FF FF FF FF FF 
     419.  00:A24E                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     419.  00:A24E  FF FF FF FF FF FF FF FF 
     420.  00:A256                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     420.  00:A256  FF FF FF FF FF FF FF FF 
     421.  00:A25E                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     421.  00:A25E  FF FF FF FF FF FF FF FF 
     422.  00:A266                      
     423.  00:A266                      sprite_beholder2_2:
     424.  00:A266                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     424.  00:A266  FF FF FF FF FF FF FF FF 
     425.  00:A26E                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     425.  00:A26E  FF FF FF FF FF FF FF FF 
     426.  00:A276                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     426.  00:A276  FF FF FF FF FF FF FF FF 
     427.  00:A27E                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     427.  00:A27E  FF FF FF FF FF FF FF FF 
     428.  00:A286                      
     429.  00:A286                      sprite_beholder3_2:
     430.  00:A286                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     430.  00:A286  FF FF FF FF FF FF FF FF 
     431.  00:A28E                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     431.  00:A28E  FF FF FF FF FF FF FF FF 
     432.  00:A296                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     432.  00:A296  FF FF FF FF FF FF FF FF 
     433.  00:A29E                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     433.  00:A29E  FF FF FF FF FF FF FF FF 
     434.  00:A2A6                      
     435.  00:A2A6                      sprite_beholder4_2:
     436.  00:A2A6                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     436.  00:A2A6  FF FF FF FF FF FF FF FF 
     437.  00:A2AE                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     437.  00:A2AE  FF FF FF FF FF FF FF FF 
     438.  00:A2B6                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     438.  00:A2B6  FF FF FF FF FF FF FF FF 
     439.  00:A2BE                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF		
     439.  00:A2BE  FF FF FF FF FF FF FF FF 
     440.  00:A2C6                      	
     441.  00:A2C6                      ;; VAMPIRO
     442.  00:A2C6                      
     443.  00:A2C6                      sprite_vampiro1_1:
     444.  00:A2C6                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     444.  00:A2C6  FF FF FF FF FF FF FF FF 
     445.  00:A2CE                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     445.  00:A2CE  FF FF FF FF FF FF FF FF 
     446.  00:A2D6                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     446.  00:A2D6  FF FF FF FF FF FF FF FF 
     447.  00:A2DE                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     447.  00:A2DE  FF FF FF FF FF FF FF FF 
     448.  00:A2E6                      
     449.  00:A2E6                      sprite_vampiro2_1:
     450.  00:A2E6                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     450.  00:A2E6  FF FF FF FF FF FF FF FF 
     451.  00:A2EE                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     451.  00:A2EE  FF FF FF FF FF FF FF FF 
     452.  00:A2F6                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     452.  00:A2F6  FF FF FF FF FF FF FF FF 
     453.  00:A2FE                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     453.  00:A2FE  FF FF FF FF FF FF FF FF 
     454.  00:A306                      
     455.  00:A306                      sprite_vampiro1_2:
     456.  00:A306                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     456.  00:A306  FF FF FF FF FF FF FF FF 
     457.  00:A30E                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     457.  00:A30E  FF FF FF FF FF FF FF FF 
     458.  00:A316                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     458.  00:A316  FF FF FF FF FF FF FF FF 
     459.  00:A31E                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     459.  00:A31E  FF FF FF FF FF FF FF FF 
     460.  00:A326                      
     461.  00:A326                      sprite_vampiro2_2:
     462.  00:A326                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     462.  00:A326  FF FF FF FF FF FF FF FF 
     463.  00:A32E                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     463.  00:A32E  FF FF FF FF FF FF FF FF 
     464.  00:A336                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     464.  00:A336  FF FF FF FF FF FF FF FF 
     465.  00:A33E                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     465.  00:A33E  FF FF FF FF FF FF FF FF 
     466.  00:A346                      	
     467.  00:A346                      ;; MANOIZQ
     468.  00:A346                      
     469.  00:A346                      sprite_manoizq1:
     470.  00:A346                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     470.  00:A346  FF FF FF FF FF FF FF FF 
     471.  00:A34E                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     471.  00:A34E  FF FF FF FF FF FF FF FF 
     472.  00:A356                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     472.  00:A356  FF FF FF FF FF FF FF FF 
     473.  00:A35E                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     473.  00:A35E  FF FF FF FF FF FF FF FF 
     474.  00:A366                      	
     475.  00:A366                      sprite_manoizq2:
     476.  00:A366                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     476.  00:A366  FF FF FF FF FF FF FF FF 
     477.  00:A36E                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     477.  00:A36E  FF FF FF FF FF FF FF FF 
     478.  00:A376                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     478.  00:A376  FF FF FF FF FF FF FF FF 
     479.  00:A37E                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     479.  00:A37E  FF FF FF FF FF FF FF FF 
     480.  00:A386                      	
     481.  00:A386                      sprite_manoizq3:
     482.  00:A386                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     482.  00:A386  FF FF FF FF FF FF FF FF 
     483.  00:A38E                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     483.  00:A38E  FF FF FF FF FF FF FF FF 
     484.  00:A396                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     484.  00:A396  FF FF FF FF FF FF FF FF 
     485.  00:A39E                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF	
     485.  00:A39E  FF FF FF FF FF FF FF FF 
     486.  00:A3A6                      	
     487.  00:A3A6                      ;; MANODER
     488.  00:A3A6                      
     489.  00:A3A6                      sprite_manoder1:
     490.  00:A3A6                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     490.  00:A3A6  FF FF FF FF FF FF FF FF 
     491.  00:A3AE                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     491.  00:A3AE  FF FF FF FF FF FF FF FF 
     492.  00:A3B6                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     492.  00:A3B6  FF FF FF FF FF FF FF FF 
     493.  00:A3BE                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     493.  00:A3BE  FF FF FF FF FF FF FF FF 
     494.  00:A3C6                      	
     495.  00:A3C6                      sprite_manoder2:
     496.  00:A3C6                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     496.  00:A3C6  FF FF FF FF FF FF FF FF 
     497.  00:A3CE                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     497.  00:A3CE  FF FF FF FF FF FF FF FF 
     498.  00:A3D6                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     498.  00:A3D6  FF FF FF FF FF FF FF FF 
     499.  00:A3DE                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     499.  00:A3DE  FF FF FF FF FF FF FF FF 
     500.  00:A3E6                      	
     501.  00:A3E6                      sprite_manoder3:
     502.  00:A3E6                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     502.  00:A3E6  FF FF FF FF FF FF FF FF 
     503.  00:A3EE                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     503.  00:A3EE  FF FF FF FF FF FF FF FF 
     504.  00:A3F6                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     504.  00:A3F6  FF FF FF FF FF FF FF FF 
     505.  00:A3FE                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF		
     505.  00:A3FE  FF FF FF FF FF FF FF FF 
     506.  00:A406                      	
     507.  00:A406                      	
     508.  00:A406                      	
     509.  00:A406                      	
     510.  00:A406                      	
     511.  00:A406                      	
     512.  00:A406                      	
     513.  00:A406                      	
     514.  00:A406                      	
     515.  00:A406                      	
     516.  00:A406                      	
     517.  00:A406                      	
     518.  00:A406                      	
     519.  00:A406                      	
     520.  00:A406                      	
     521.  00:A406                      	
     522.  00:A406                      	
     523.  00:A406                      	
     524.  00:A406                      	
     525.  00:A406                      	
     526.  00:A406                      	
     527.  00:A406                      	
     528.  00:A406                      	
     171   00:A406                      	
     172   00:A406                      	include "habitaciones.asm"
       1.  00:A406                      ;;=====================================================
       2.  00:A406                      ;;DEFINICIÓN DE HABITACIONES x NIVEL
       3.  00:A406                      ;;=====================================================	
       4.  00:A406                      
       5.  00:A406                      ; sólo voy a usar 7x7 pero como los arrays son lineales y voy a trabajar con matrices
       6.  00:A406                      ; me interesa que seande  8x8 aunque sólo trabaje con 7x7
       7.  00:A406                      
       8.  00:A406                      ; ojo... la primera linea corresponderá a la primera linea del castillo no a la última
       9.  00:A406                      
      10.  00:A406                      ;; definición de estructura de bits
      11.  00:A406                      ;16 bits por habitación
      12.  00:A406                      
      13.  00:A406                      ;~ 7 - sin asignar
      14.  00:A406                      ;~ 6 - sin asignar
      15.  00:A406                      ;~ 5 - esqueletos
      16.  00:A406                      ;~ 4 - todos los enemigos muertos
      17.  00:A406                      ;~ 0,1,2,3 - nº puertas 1 arriba 1 derecha 1 abajo 1 izquierda
      18.  00:A406                      
      19.  00:A406                      ;~ 7 - oracion
      20.  00:A406                      ;~ 6 - cruz
      21.  00:A406                      ;~ 5 - agua bendita
      22.  00:A406                      ;~ 4 - armadura
      23.  00:A406                      ;~ 3 - planta
      24.  00:A406                      ;~ 2 - vida extra
      25.  00:A406                      ;~ 1 - ballesta
      26.  00:A406                      ;~ 0 - antorchas
      27.  00:A406                      
      28.  00:A406                      ;importante: el byte de la columna 15 indicará con 1 y 0 habitaciones por las que se haya pasado
      29.  00:A406                      ;cuando se inicie la partida todos se pondrán a 0
      30.  00:A406                      ;por ejemplo 01000000b se ha pasado por la hab. 2 de esa fila en el nivel que sea
      31.  00:A406                      
      32.  00:A406                      habitacion_actual:
      33.  00:A406  00                  	db  0		;habitación donde se encuentre el prota. Se mete en una varible par traer todos los datos de golpe y no buscarlos varias veces
      34.  00:A407                      habitacion_extras:
      35.  00:A407  00                  	db	0		;donde van las ayudas de una habitación
      36.  00:A408                      habitacion_recorrida;
      37.  00:A408  00 00               	dw	0		;byte de la columna 15 indicará con 1 y 0 habitaciones por las que se haya pasado (para que sea accesible y modificable se guarda puntero a variable)
      38.  00:A40A                      
      39.  00:A40A                      habitacion_terminada:	;array con 1 según la habitación que se haya terminado (en el eje x)
      40.  00:A40A                      	db	00000001b, 00000010b, 00000100b, 00001000b, 00010000b, 00100000b, 01000000b
      40.  00:A40A  01 02 04 08 10 20 40 
      41.  00:A411                      
      42.  00:A411                      habitaciones_juego:
      43.  00:A411                      habitaciones_nivel0:
      44.  00:A411                      	db  00000000b,#00,00000001b,#01,00001111b,11000001b,00000010b,#03,00001000b,#04,00001001b,#05,00001100b,#06,00000000b,#CD ;primera fila
      44.  00:A411  00 00 01 01 0F C1 02 03 08 04 09 05 0C 06 00 CD 
      45.  00:A421                      	db  #17,#10,#11,#11,#12,#12,#13,#13,#14,#14,#15,#15,#16,#16,#FF,#00
      45.  00:A421  17 10 11 11 12 12 13 13 14 14 15 15 16 16 FF 00 
      46.  00:A431                      	db  #20,#20,#21,#21,#22,#22,#23,#23,#24,#24,#25,#25,#26,#26,#FF,#00
      46.  00:A431  20 20 21 21 22 22 23 23 24 24 25 25 26 26 FF 00 
      47.  00:A441                      	db  #30,#30,#31,#31,#32,#32,#33,#33,#34,#34,#35,#35,#36,#36,#FF,#00
      47.  00:A441  30 30 31 31 32 32 33 33 34 34 35 35 36 36 FF 00 
      48.  00:A451                      	db  00000000b,#00,00000001b,#01,00001111b,#02,00000011b,#03,00001000b,#04,00001001b,#05,00001100b,#06,#FF,#00
      48.  00:A451  00 00 01 01 0F 02 03 03 08 04 09 05 0C 06 FF 00 
      49.  00:A461                      	db  #50,#50,#51,#51,#52,#52,#53,#53,#54,#54,#55,#55,#56,#56,#FF,#00
      49.  00:A461  50 50 51 51 52 52 53 53 54 54 55 55 56 56 FF 00 
      50.  00:A471                      	db  00000000b,#00,00000001b,#01,00001111b,#02,00000011b,#03,00001000b,#04,00001001b,#05,00001100b,#06,#FF,#00	;ultima fila
      50.  00:A471  00 00 01 01 0F 02 03 03 08 04 09 05 0C 06 FF 00 
      51.  00:A481                      	
      52.  00:A481                      habitaciones_nivel1:
      53.  00:A481                      	db  00000000b,#00,00000001b,#01,00000010b,#02,00000011b,#03,00001000b,#04,00001001b,#05,00001100b,#06,#FF,#00 ;primera fila
      53.  00:A481  00 00 01 01 02 02 03 03 08 04 09 05 0C 06 FF 00 
      54.  00:A491                      	db  #17,#10,#11,#11,#12,#12,#13,#13,#14,#14,#15,#15,#16,#16,#FF,#00
      54.  00:A491  17 10 11 11 12 12 13 13 14 14 15 15 16 16 FF 00 
      55.  00:A4A1                      	db  #20,#20,#21,#21,#22,#22,#23,#23,#24,#24,#25,#25,#26,#26,#FF,#00
      55.  00:A4A1  20 20 21 21 22 22 23 23 24 24 25 25 26 26 FF 00 
      56.  00:A4B1                      	db  #30,#30,#31,#31,#32,#32,#33,#33,#34,#34,#35,#35,#36,#36,#FF,#00
      56.  00:A4B1  30 30 31 31 32 32 33 33 34 34 35 35 36 36 FF 00 
      57.  00:A4C1                      	db  00000000b,#00,00000001b,#01,00001111b,#02,00000011b,#03,00001000b,#04,00001001b,#05,00001100b,#06,#FF,#00
      57.  00:A4C1  00 00 01 01 0F 02 03 03 08 04 09 05 0C 06 FF 00 
      58.  00:A4D1                      	db  #50,#50,#51,#51,#52,#52,#53,#53,#54,#54,#55,#55,#56,#56,#FF,#00
      58.  00:A4D1  50 50 51 51 52 52 53 53 54 54 55 55 56 56 FF 00 
      59.  00:A4E1                      	db  00000000b,#00,00000001b,#01,00000010b,#02,00000011b,#03,00001000b,#04,00001001b,#05,00001100b,#06,#FF,#00	;ultima fila
      59.  00:A4E1  00 00 01 01 02 02 03 03 08 04 09 05 0C 06 FF 00 
      60.  00:A4F1                      	
      61.  00:A4F1                      habitaciones_nivel2:
      62.  00:A4F1                      	db  00000000b,#00,00000001b,#01,00000010b,#02,00000011b,#03,00001000b,#04,00001001b,#05,00001100b,#06,#FF,#00 ;primera fila
      62.  00:A4F1  00 00 01 01 02 02 03 03 08 04 09 05 0C 06 FF 00 
      63.  00:A501                      	db  #17,#10,#11,#11,#12,#12,#13,#13,#14,#14,#15,#15,#16,#16,#FF,#00
      63.  00:A501  17 10 11 11 12 12 13 13 14 14 15 15 16 16 FF 00 
      64.  00:A511                      	db  #20,#20,#21,#21,#22,#22,#23,#23,#24,#24,#25,#25,#26,#26,#FF,#00
      64.  00:A511  20 20 21 21 22 22 23 23 24 24 25 25 26 26 FF 00 
      65.  00:A521                      	db  #30,#30,#31,#31,#32,#32,#33,#33,#34,#34,#35,#35,#36,#36,#FF,#00
      65.  00:A521  30 30 31 31 32 32 33 33 34 34 35 35 36 36 FF 00 
      66.  00:A531                      	db  00000000b,#00,00000001b,#01,00001111b,#02,00000011b,#03,00001000b,#04,00001001b,#05,00001100b,#06,#FF,#00
      66.  00:A531  00 00 01 01 0F 02 03 03 08 04 09 05 0C 06 FF 00 
      67.  00:A541                      	db  #50,#50,#51,#51,#52,#52,#53,#53,#54,#54,#55,#55,#56,#56,#FF,#00
      67.  00:A541  50 50 51 51 52 52 53 53 54 54 55 55 56 56 FF 00 
      68.  00:A551                      	db  00000000b,#00,00000001b,#01,00000010b,#02,00000011b,#03,00001000b,#04,00001001b,#05,00001100b,#06,#FF,#00	;ultima fila
      68.  00:A551  00 00 01 01 02 02 03 03 08 04 09 05 0C 06 FF 00 
      69.  00:A561                      	
      70.  00:A561                      habitaciones_nivel3:
      71.  00:A561                      	db  00000000b,#00,00000001b,#01,00000010b,#02,00000011b,#03,00001000b,#04,00001001b,#05,00001100b,#06,#FF,#00 ;primera fila
      71.  00:A561  00 00 01 01 02 02 03 03 08 04 09 05 0C 06 FF 00 
      72.  00:A571                      	db  #17,#10,#11,#11,#12,#12,#13,#13,#14,#14,#15,#15,#16,#16,#FF,#00
      72.  00:A571  17 10 11 11 12 12 13 13 14 14 15 15 16 16 FF 00 
      73.  00:A581                      	db  #20,#20,#21,#21,#22,#22,#23,#23,#24,#24,#25,#25,#26,#26,#FF,#00
      73.  00:A581  20 20 21 21 22 22 23 23 24 24 25 25 26 26 FF 00 
      74.  00:A591                      	db  #30,#30,#31,#31,#32,#32,#33,#33,#34,#34,#35,#35,#36,#36,#FF,#00
      74.  00:A591  30 30 31 31 32 32 33 33 34 34 35 35 36 36 FF 00 
      75.  00:A5A1                      	db  00000000b,#00,00000001b,#01,00001111b,#02,00000011b,#03,00001000b,#04,00001001b,#05,00001100b,#06,#FF,#00
      75.  00:A5A1  00 00 01 01 0F 02 03 03 08 04 09 05 0C 06 FF 00 
      76.  00:A5B1                      	db  #50,#50,#51,#51,#52,#52,#53,#53,#54,#54,#55,#55,#56,#56,#FF,#00
      76.  00:A5B1  50 50 51 51 52 52 53 53 54 54 55 55 56 56 FF 00 
      77.  00:A5C1                      	db  00000000b,#00,00000001b,#01,00000010b,#02,00000011b,#03,00001000b,#04,00001001b,#05,00001100b,#06,#FF,#00	;ultima fila
      77.  00:A5C1  00 00 01 01 02 02 03 03 08 04 09 05 0C 06 FF 00 
      78.  00:A5D1                      	
      79.  00:A5D1                      habitaciones_nivel4:
      80.  00:A5D1                      	db  00000001b,#00,00000001b,#01,00000010b,#02,00000011b,#03,00001000b,#04,00001001b,#05,00001100b,#06,#FF,#00 ;primera fila
      80.  00:A5D1  01 00 01 01 02 02 03 03 08 04 09 05 0C 06 FF 00 
      81.  00:A5E1                      	db  #17,#10,#11,#11,#12,#12,#13,#13,#14,#14,#15,#15,#16,#16,#FF,#00
      81.  00:A5E1  17 10 11 11 12 12 13 13 14 14 15 15 16 16 FF 00 
      82.  00:A5F1                      	db  #20,#20,#21,#21,#22,#22,#23,#23,#24,#24,#25,#25,#26,#26,#FF,#00
      82.  00:A5F1  20 20 21 21 22 22 23 23 24 24 25 25 26 26 FF 00 
      83.  00:A601                      	db  #30,#30,#31,#31,#32,#32,#33,#33,#34,#34,#35,#35,#36,#36,#FF,#00
      83.  00:A601  30 30 31 31 32 32 33 33 34 34 35 35 36 36 FF 00 
      84.  00:A611                      	db  00000000b,#00,00000001b,#01,00001111b,#02,00000011b,#03,00001000b,#04,00001001b,#05,00001100b,#06,#FF,#00
      84.  00:A611  00 00 01 01 0F 02 03 03 08 04 09 05 0C 06 FF 00 
      85.  00:A621                      	db  #50,#50,#51,#51,#52,#52,#53,#53,#54,#54,#55,#55,#56,#56,#FF,#00
      85.  00:A621  50 50 51 51 52 52 53 53 54 54 55 55 56 56 FF 00 
      86.  00:A631                      	db  00000000b,#00,00000001b,#01,00001111b,00001111b,00000011b,#03,00001000b,#04,00001001b,#05,00001100b,#06,#FF,#00	;ultima fila
      86.  00:A631  00 00 01 01 0F 0F 03 03 08 04 09 05 0C 06 FF 00 
      87.  00:A641                      	
      88.  00:A641                      habitaciones_nivel5:
      89.  00:A641                      	db  00000000b,#00,00000001b,#01,00000010b,#02,00000011b,#03,00001000b,#04,00001001b,#05,00001100b,#06,#FF,#00 ;primera fila
      89.  00:A641  00 00 01 01 02 02 03 03 08 04 09 05 0C 06 FF 00 
      90.  00:A651                      	db  #17,#10,#11,#11,#12,#12,#13,#13,#14,#14,#15,#15,#16,#16,#FF,#00
      90.  00:A651  17 10 11 11 12 12 13 13 14 14 15 15 16 16 FF 00 
      91.  00:A661                      	db  #20,#20,#21,#21,#22,#22,#23,#23,#24,#24,#25,#25,#26,#26,#FF,#00
      91.  00:A661  20 20 21 21 22 22 23 23 24 24 25 25 26 26 FF 00 
      92.  00:A671                      	db  #30,#30,#31,#31,#32,#32,#33,#33,#34,#34,#35,#35,#36,#36,#FF,#00
      92.  00:A671  30 30 31 31 32 32 33 33 34 34 35 35 36 36 FF 00 
      93.  00:A681                      	db  00000000b,#00,00000001b,#01,00001111b,#02,00000011b,#03,00001000b,#04,00001001b,#05,00001100b,#06,#FF,#00
      93.  00:A681  00 00 01 01 0F 02 03 03 08 04 09 05 0C 06 FF 00 
      94.  00:A691                      	db  #50,#50,#51,#51,#52,#52,#53,#53,#54,#54,#55,#55,#56,#56,#FF,#00
      94.  00:A691  50 50 51 51 52 52 53 53 54 54 55 55 56 56 FF 00 
      95.  00:A6A1                      	db  00000000b,#00,00000001b,#01,00001010b,00001010b,00000011b,#03,00001000b,#04,00001001b,#05,00001100b,#06,#FF,#00	;ultima fila
      95.  00:A6A1  00 00 01 01 0A 0A 03 03 08 04 09 05 0C 06 FF 00 
      96.  00:A6B1                      	
      97.  00:A6B1                      habitaciones_nivel6:
      98.  00:A6B1                      	db  00000000b,#00,00000001b,#01,00000010b,#02,00000011b,#03,00001000b,#04,00001001b,#05,00001100b,#06,#FF,#00 ;primera fila
      98.  00:A6B1  00 00 01 01 02 02 03 03 08 04 09 05 0C 06 FF 00 
      99.  00:A6C1                      	db  #17,#10,#11,#11,#12,#12,#13,#13,#14,#14,#15,#15,#16,#16,#FF,#00
      99.  00:A6C1  17 10 11 11 12 12 13 13 14 14 15 15 16 16 FF 00 
     100.  00:A6D1                      	db  #20,#20,#21,#21,#22,#22,#23,#23,#24,#24,#25,#25,#26,#26,#FF,#00
     100.  00:A6D1  20 20 21 21 22 22 23 23 24 24 25 25 26 26 FF 00 
     101.  00:A6E1                      	db  #30,#30,#31,#31,#32,#32,#33,#33,#34,#34,#35,#35,#36,#36,#FF,#00
     101.  00:A6E1  30 30 31 31 32 32 33 33 34 34 35 35 36 36 FF 00 
     102.  00:A6F1                      	db  00000000b,#00,00000001b,#01,00001111b,#02,00000011b,#03,00001000b,#04,00001001b,#05,00001100b,#06,#FF,#00
     102.  00:A6F1  00 00 01 01 0F 02 03 03 08 04 09 05 0C 06 FF 00 
     103.  00:A701                      	db  #50,#50,#51,#51,#52,#52,#53,#53,#54,#54,#55,#55,#56,#56,#FF,#00
     103.  00:A701  50 50 51 51 52 52 53 53 54 54 55 55 56 56 FF 00 
     104.  00:A711                      	db  00000000b,#00,00000001b,10000000b,00001111b,#02,00000011b,#03,00001000b,#04,00001001b,#05,00001100b,#06,#FF,#00	;ultima fila
     104.  00:A711  00 00 01 80 0F 02 03 03 08 04 09 05 0C 06 FF 00 
     105.  00:A721                      
     106.  00:A721                      
     173   00:A721                      	
     174   00:A721                      	include "variables.asm"
       1.  00:A721                      ;;=====================================================
       2.  00:A721                      ;;DEFINICIÓN DE VARIABLES
       3.  00:A721                      ;;=====================================================
       4.  00:A721                      
       5.  00:A721                      ;Colores base de la pantalla
       6.  00:A721                      color_base:
       7.  00:A721  01 01 01            			DB		COLNEGRO,COLNEGRO,COLNEGRO	
       8.  00:A724                      ;colores de pantalla cuando se tira bomba
       9.  00:A724                      color_bomba1:
      10.  00:A724  08 08 08            			DB		COLROJO,COLROJO,COLROJO
      11.  00:A727                      color_bomba2:
      12.  00:A727  06 06 06            			DB		COLROJOOSC,COLROJOOSC,COLROJOOSC
      13.  00:A72A                      
      14.  00:A72A                      ;definicion de variable del prota usando la estructura del punto de mira
      15.  00:A72A                      prota:		ESTRUCTURA_PUNTOMIRA
      15.  00:A72A  64 64 00 00 00 05 00 00 00 00 00 00 00 00 00 00 
      16.  00:A73A                      ;variables globales del prota
      17.  00:A73A                      prota_nivel:			;nivel del castillo donde está 0-6
      18.  00:A73A  00                  			DB		0
      19.  00:A73B                      prota_vidas:
      20.  00:A73B  00                  			DB		0
      21.  00:A73C                      prota_reliquias:
      22.  00:A73C  03                  			DB		3
      23.  00:A73D                      prota_pos_mapx:
      24.  00:A73D  00                  			DB		0	;pos columna
      25.  00:A73E                      prota_pos_mapy:
      26.  00:A73E  00                  			DB		0	;pos fila
      27.  00:A73F                      prota_energia:
      28.  00:A73F  FA                  			DB		250
      29.  00:A740                      
      30.  00:A740                      ;array para pintar de golpe el marcador de vidas
      31.  00:A740                      array_aux_vidas: 		
      32.  00:A740                      			DB		0,0,0,0,0,0,0,0
      32.  00:A740  00 00 00 00 00 00 00 00 
      33.  00:A748                      
      34.  00:A748                      ;array para pintar de golpe el marcador de reliquias
      35.  00:A748                      array_aux_reliquias:	
      36.  00:A748                      			DB		0,0,0,0,0,0,0,0
      36.  00:A748  00 00 00 00 00 00 00 00 
      37.  00:A750                      
      38.  00:A750                      array_aux_energia:					;array para pintar de golpe el marcador de energía
      39.  00:A750                      			DB		16,0,0,0,0,0,0 	;el 16 primero es porque siempre estará pintado el cuadro primero rojo
      39.  00:A750  10 00 00 00 00 00 00 
      40.  00:A757                      ultimo_pos_array_aux_energia:
      41.  00:A757  00                  			DB		0				;el array completo es de 8 pero para posicionar sin niecesidad de cálculos  etiqueto este aparte
      42.  00:A758                      			
      43.  00:A758                      array_aux_mapa_limpiar:	;es por facilitar el reseteo del mapa (pinto 7 lineas en negro con bios) la otra opción es más larga en código y complicada aunque más rápida
      44.  00:A758                      			DB		0,0,0,0,0,0,0
      44.  00:A758  00 00 00 00 00 00 00 
      45.  00:A75F                      elemento_pintar_mapa:
      46.  00:A75F  00                  			DB		0	;TILEPROTAM = 19, ;TILEGRISM = 9
      47.  00:A760                      			
      48.  00:A760                      ;; nota importante: cada vez que se cambie de nivel se actualizará el contenido
      49.  00:A760                      ;; arrays con mapa de tiles de las puertas
      50.  00:A760                      array_puerta_arriba:
      51.  00:A760  03 01 01 03         array_puerta_arriba1:		DB	3,1,1,3
      52.  00:A764  01 01 01 01         array_puerta_arriba2:		DB	1,1,1,1
      53.  00:A768  01 01 01 01         array_puerta_arriba3:		DB	1,1,1,1
      54.  00:A76C  01 01 01 01         array_puerta_arriba4:		DB	1,1,1,1
      55.  00:A770  01 01 01 01         array_puerta_arriba5:		DB	1,1,1,1
      56.  00:A774                      
      57.  00:A774                      array_puerta_derecha:
      58.  00:A774  01 03 03            array_puerta_derecha1:		DB	1,3,3
      59.  00:A777  01 01 03            array_puerta_derecha2:		DB	1,1,3
      60.  00:A77A  01 01 01            array_puerta_derecha3:		DB	1,1,1
      61.  00:A77D  01 01 01            array_puerta_derecha4:		DB	1,1,1
      62.  00:A780  01 01 01            array_puerta_derecha5:		DB	1,1,1
      63.  00:A783  02 01 01            array_puerta_derecha6:		DB	2,1,1
      64.  00:A786  04 02 01            array_puerta_derecha7:		DB	4,2,1
      65.  00:A789                      	
      66.  00:A789  01 01 01 01         array_puerta_abajo:			DB	1,1,1,1
      67.  00:A78D                      
      68.  00:A78D                      array_puerta_izquierda:
      69.  00:A78D  03 03 01            array_puerta_izquierda1:	DB	3,3,1
      70.  00:A790  03 01 01            array_puerta_izquierda2:	DB	3,1,1
      71.  00:A793  01 01 01            array_puerta_izquierda3:	DB	1,1,1
      72.  00:A796  01 01 01            array_puerta_izquierda4:	DB	1,1,1
      73.  00:A799  01 01 01            array_puerta_izquierda5:	DB	1,1,1
      74.  00:A79C  01 01 02            array_puerta_izquierda6:	DB	1,1,2
      75.  00:A79F  01 02 04            array_puerta_izquierda7:	DB	1,2,4
      76.  00:A7A2                      
      77.  00:A7A2                      
      78.  00:A7A2                      
      79.  00:A7A2                      lista_ayudas:
      80.  00:A7A2  00 (16)             ayuda_oracion:		DS		ESTRUCTURA_AYUDA		
      81.  00:A7B2  00 (16)             ayuda_cruz:			DS		ESTRUCTURA_AYUDA
      82.  00:A7C2  00 (16)             ayuda_aguabendita:	DS		ESTRUCTURA_AYUDA
      83.  00:A7D2  00 (16)             ayuda_armadura:		DS		ESTRUCTURA_AYUDA
      84.  00:A7E2  00 (16)             ayuda_planta:		DS		ESTRUCTURA_AYUDA
      85.  00:A7F2  00 (16)             ayuda_vidaextra		DS		ESTRUCTURA_AYUDA
      86.  00:A802  00 (16)             ayuda_ballesta:		DS		ESTRUCTURA_AYUDA
      87.  00:A812                      
      88.  00:A812                      ;datos ayudas
      89.  00:A812                      datos_oracion:
      90.  00:A812  00                  				DB    	0				;0 no activo <>0 activo															0
      91.  00:A813  7B A8               				DW		array_oracionon	;pos en memoria ver array_ayudas de cómo se mostrarán (wordaux2)				1,2
      92.  00:A815  7F A8               				DW		array_oracionoff;pos en memoria ver array_ayudas de cómo se mostrarán (wordaux2)				3,4
      93.  00:A817  A3                  				DB		POSORACION		;pos en pantalla (memoria en el banco 1 se le suma 256 + TILEMAP) (wordaux1)	5
      94.  00:A818  20                  				DB		POSORACIONX		;pos del pixel central (esquina superior + 8x)									6
      95.  00:A819  70                  				DB		POSAYUDASY		;pos del pixel central (esquina superior + 8y) (para toas igual)				7
      96.  00:A81A  9F 99               				DW		accion_oracion	;subrutina que indica la acción si se dispara en el objeto						8,9
      97.  00:A81C                      datos_cruz:
      98.  00:A81C                      				;~ DB    	0				;0 no activo <>0 activo															0
      99.  00:A81C                      				;~ DW		array_cruzon	;pos en memoria ver array_ayudas de cómo se mostrarán (wordaux2)				1,2
     100.  00:A81C                      				;~ DW		array_cruzoff	;pos en memoria ver array_ayudas de cómo se mostrarán (wordaux2)				3,4
     101.  00:A81C                      				;~ DB		POSCRUZ			;pos en pantalla (memoria en el banco 1 se le suma 256 + TILEMAP) (wordaux1)	5
     102.  00:A81C                      				;~ DB		POSCRUZX		;pos del pixel central (esquina superior + 8x)									6
     103.  00:A81C                      				;~ DB		POSAYUDASY		;pos del pixel central (esquina superior + 8y) (para toas igual)				7
     104.  00:A81C                      				;~ DW		accion_cruz		;subrutina que indica la acción si se dispara en el objeto						8,9 
     105.  00:A81C                      				
     106.  00:A81C  00                  				DB    	0				;0 no activo <>0 activo															0
     107.  00:A81D  83 A8               				DW		array_cruzon	;pos en memoria ver array_ayudas de cómo se mostrarán (wordaux2)				1,2
     108.  00:A81F  87 A8               				DW		array_cruzoff	;pos en memoria ver array_ayudas de cómo se mostrarán (wordaux2)				3,4
     109.  00:A821  A7                  				DB		167			;pos en pantalla (memoria en el banco 1 se le suma 256 + TILEMAP) (wordaux1)	5
     110.  00:A822  40                  				DB		64		;pos del pixel central (esquina superior + 8x)									6
     111.  00:A823  70                  				DB		112		;pos del pixel central (esquina superior + 8y) (para toas igual)				7
     112.  00:A824  A0 99               				DW		accion_cruz		;subrutina que indica la acción si se dispara en el objeto						8,9 
     113.  00:A826                      				
     114.  00:A826                      datos_aguabendita:
     115.  00:A826  00                  				DB    	0				;0 no activo <>0 activo															0
     116.  00:A827  8B A8               				DW		array_aguaon	;pos en memoria ver array_ayudas de cómo se mostrarán (wordaux2)				1,2
     117.  00:A829  8F A8               				DW		array_aguaoff	;pos en memoria ver array_ayudas de cómo se mostrarán (wordaux2)				3,4
     118.  00:A82B  AB                  				DB		POSAGUA			;pos en pantalla (memoria en el banco 1 se le suma 256 + TILEMAP) (wordaux1)	5
     119.  00:A82C  60                  				DB		POSAGUAX		;pos del pixel central (esquina superior + 8x)									6
     120.  00:A82D  70                  				DB		POSAYUDASY		;pos del pixel central (esquina superior + 8y) (para toas igual)				7
     121.  00:A82E  A1 99               				DW		accion_agua		;subrutina que indica la acción si se dispara en el objeto						8,9
     122.  00:A830  00                  				DB		0	;relleno																		10-16    
     123.  00:A831  00                  				DB		0	;relleno																		10-16    
     124.  00:A832  00                  				DB		0	;relleno																		10-16    
     125.  00:A833  00                  				DB		0	;relleno																		10-16    
     126.  00:A834  00                  				DB		0	;relleno																		10-16    
     127.  00:A835  00                  				DB		0	;relleno																		10-16   
     128.  00:A836  00                  				DB		0	;relleno																		10-16    
     129.  00:A837                      datos_armadura:
     130.  00:A837  00                  				DB    	0				;0 no activo <>0 activo															0
     131.  00:A838  93 A8               				DW		array_armaduraon;pos en memoria ver array_ayudas de cómo se mostrarán (wordaux2)				1,2
     132.  00:A83A  97 A8               				DW		array_armaduraoff;pos en memoria ver array_ayudas de cómo se mostrarán (wordaux2)				3,4
     133.  00:A83C  AF                  				DB		POSARMAD		;pos en pantalla (memoria en el banco 1 se le suma 256 + TILEMAP) (wordaux1)	5
     134.  00:A83D  80                  				DB		POSARMADX		;pos del pixel central (esquina superior + 8x)									6
     135.  00:A83E  70                  				DB		POSAYUDASY		;pos del pixel central (esquina superior + 8y) (para toas igual)				7
     136.  00:A83F  A2 99               				DW		accion_armadura	;subrutina que indica la acción si se dispara en el objeto						8,9
     137.  00:A841  00                  				DB		0	;relleno																		10-16    
     138.  00:A842  00                  				DB		0	;relleno																		10-16    
     139.  00:A843  00                  				DB		0	;relleno																		10-16    
     140.  00:A844  00                  				DB		0	;relleno																		10-16    
     141.  00:A845  00                  				DB		0	;relleno																		10-16    
     142.  00:A846  00                  				DB		0	;relleno																		10-16   
     143.  00:A847  00                  				DB		0	;relleno																		10-16    
     144.  00:A848                      datos_planta:
     145.  00:A848  00                  				DB    	0				;0 no activo <>0 activo															0
     146.  00:A849  9B A8               				DW		array_plantaon	;pos en memoria ver array_ayudas de cómo se mostrarán (wordaux2)				1,2
     147.  00:A84B  9F A8               				DW		array_plantaoff	;pos en memoria ver array_ayudas de cómo se mostrarán (wordaux2)				3,4
     148.  00:A84D  B3                  				DB		POSPLANTA		;pos en pantalla (memoria en el banco 1 se le suma 256 + TILEMAP) (wordaux1)	5
     149.  00:A84E  A0                  				DB		POSPLANTAX		;pos del pixel central (esquina superior + 8x)									6
     150.  00:A84F  70                  				DB		POSAYUDASY		;pos del pixel central (esquina superior + 8y) (para toas igual)				7
     151.  00:A850  A3 99               				DW		accion_planta	;subrutina que indica la acción si se dispara en el objeto						8,9
     152.  00:A852  00                  				DB		0	;relleno																		10-16    
     153.  00:A853  00                  				DB		0	;relleno																		10-16    
     154.  00:A854  00                  				DB		0	;relleno																		10-16    
     155.  00:A855  00                  				DB		0	;relleno																		10-16    
     156.  00:A856  00                  				DB		0	;relleno																		10-16    
     157.  00:A857  00                  				DB		0	;relleno																		10-16   
     158.  00:A858  00                  				DB		0	;relleno																		10-16     
     159.  00:A859                      datos_vidaextra:
     160.  00:A859  00                  				DB    	0				;0 no activo <>0 activo															0
     161.  00:A85A  A3 A8               				DW		array_extraon	;pos en memoria ver array_ayudas de cómo se mostrarán (wordaux2)				1,2
     162.  00:A85C  A7 A8               				DW		array_extraoff	;pos en memoria ver array_ayudas de cómo se mostrarán (wordaux2)				3,4
     163.  00:A85E  B7                  				DB		POSVIDAEXT		;pos en pantalla (memoria en el banco 1 se le suma 256 + TILEMAP) (wordaux1)	5
     164.  00:A85F  C0                  				DB		POSVIDAEXTX		;pos del pixel central (esquina superior + 8x)									6
     165.  00:A860  70                  				DB		POSAYUDASY		;pos del pixel central (esquina superior + 8y) (para toas igual)				7
     166.  00:A861  A4 99               				DW		accion_vidaextra;subrutina que indica la acción si se dispara en el objeto						8,9
     167.  00:A863  00                  				DB		0	;relleno																		10-16    
     168.  00:A864  00                  				DB		0	;relleno																		10-16    
     169.  00:A865  00                  				DB		0	;relleno																		10-16    
     170.  00:A866  00                  				DB		0	;relleno																		10-16    
     171.  00:A867  00                  				DB		0	;relleno																		10-16    
     172.  00:A868  00                  				DB		0	;relleno																		10-16   
     173.  00:A869  00                  				DB		0	;relleno																		10-16     
     174.  00:A86A                      datos_ballesta:
     175.  00:A86A  00                  				DB    	0				;0 no activo <>0 activo															0
     176.  00:A86B  AB A8               				DW		array_ballestaon;pos en memoria ver array_ayudas de cómo se mostrarán (wordaux2)				1,2
     177.  00:A86D  AF A8               				DW		array_ballestaoff;pos en memoria ver array_ayudas de cómo se mostrarán (wordaux2)				3,4
     178.  00:A86F  BB                  				DB		POSBALLESTA		;pos en pantalla (memoria en el banco 1 se le suma 256 + TILEMAP) (wordaux1)	5
     179.  00:A870  E0                  				DB		POSBALLESTAX	;pos del pixel central (esquina superior + 8x)									6
     180.  00:A871  70                  				DB		POSAYUDASY		;pos del pixel central (esquina superior + 8y) (para toas igual)				7
     181.  00:A872  9F 99               				DW		accion_oracion	;subrutina que indica la acción si se dispara en el objeto						8,9
     182.  00:A874  00                  				DB		0	;relleno																		10-16    
     183.  00:A875  00                  				DB		0	;relleno																		10-16    
     184.  00:A876  00                  				DB		0	;relleno																		10-16    
     185.  00:A877  00                  				DB		0	;relleno																		10-16    
     186.  00:A878  00                  				DB		0	;relleno																		10-16    
     187.  00:A879  00                  				DB		0	;relleno																		10-16   
     188.  00:A87A  00                  				DB		0	;relleno																		10-16      
     189.  00:A87B                      
     190.  00:A87B                      
     191.  00:A87B                      
     192.  00:A87B                      
     193.  00:A87B                      
     194.  00:A87B                      ;array de ayudas
     195.  00:A87B                      ;posición dentro del bank1 (o 0 que son iguales) de los tiles de la ayuda (cómo en los sprites de 2x2)
     196.  00:A87B                      array_ayudas:
     197.  00:A87B  C8 CA               array_oracionon:			DB	200,202
     198.  00:A87D  C9 CB               array_oracionon1:			DB	201,203
     199.  00:A87F  CC CE               array_oracionoff:			DB	204,206
     200.  00:A881  CD CF               array_oracionoff1:			DB	205,207
     201.  00:A883  D0 D2               array_cruzon:				DB	208,210
     202.  00:A885  D1 D3               array_cruzon1:				DB	209,211
     203.  00:A887  D4 D6               array_cruzoff:				DB	212,214
     204.  00:A889  D5 D7               array_cruzoff1:				DB	213,215
     205.  00:A88B  D8 DA               array_aguaon:				DB	216,218
     206.  00:A88D  D9 DB               array_aguaon1:				DB	217,219
     207.  00:A88F  DC DE               array_aguaoff:				DB	220,222
     208.  00:A891  DD DF               array_aguaoff1:				DB	221,223
     209.  00:A893  E0 E2               array_armaduraon:			DB	224,226
     210.  00:A895  E1 E3               array_armaduraon1:			DB	225,227
     211.  00:A897  E4 E6               array_armaduraoff:			DB	228,230
     212.  00:A899  E5 E7               array_armaduraoff1:			DB	229,231
     213.  00:A89B  E8 EA               array_plantaon:				DB	232,234
     214.  00:A89D  E9 EB               array_plantaon1:			DB	233,235
     215.  00:A89F  EC EE               array_plantaoff:			DB	236,238
     216.  00:A8A1  ED EF               array_plantaoff1:			DB	237,239
     217.  00:A8A3  F0 F2               array_extraon:				DB	240,242
     218.  00:A8A5  F1 F3               array_extraon1:				DB	241,243
     219.  00:A8A7  F4 F6               array_extraoff:				DB	244,246
     220.  00:A8A9  F5 F7               array_extraoff1:			DB	245,247
     221.  00:A8AB  F8 FA               array_ballestaon:			DB	248,250
     222.  00:A8AD  F9 FB               array_ballestaon1:			DB	249,251
     223.  00:A8AF  FC FE               array_ballestaoff:			DB	252,254
     224.  00:A8B1  FD FF               array_ballestaoff1:			DB	253,255
     225.  00:A8B3                      
     226.  00:A8B3  00 (7)              antorchas:			DS		ESTRUCTURA_ANTORCHA
     227.  00:A8BA  C5 C6 C7            array_antorcha:				DB	197,198,199	;fuego + madera1 + madera2
     228.  00:A8BD                      
     229.  00:A8BD  00 (7)              esqueletos:			DS		ESTRUCTURA_ESQUELETO
     230.  00:A8C4                      array_esqueleto:			DB	194, 0, 195, 160, 164, 161, 0, 163, 0, 193, 162, 192
     230.  00:A8C4  C2 00 C3 A0 A4 A1 00 A3 00 C1 A2 C0 
     231.  00:A8D0  A4 A5 A4 A6         lista_escenas_calavera:		DB	164, 165, 164, 166
     232.  00:A8D4                      
     233.  00:A8D4                      
     234.  00:A8D4                      
     235.  00:A8D4                      
     236.  00:A8D4                      ;array de 4 bytes x 32 sprites posibles en pantalla que sobreescribirá la tabla de sprites actualizando VRAM
     237.  00:A8D4                      array_sprites:
     238.  00:A8D4  00 (8)              array_sprites_pm:				DS	2 * 4
     239.  00:A8DC  00 (120)            array_sprites_enem:				DS	30 * 4
     240.  00:A954  00 (140)            lista_enemigos:					DS	10 * ESTRUCTURA_ENEMIGO
     241.  00:A9E0                      ; puntero al array a pintar en VRAM
     242.  00:A9E0  00 00               puntero_array_atrib_array_VRAM: DW	0	;ARRAYSPTRIES + 8
     243.  00:A9E2                      
     244.  00:A9E2                      
     245.  00:A9E2                      
     246.  00:A9E2                      
     247.  00:A9E2                      
     175   00:A9E2                      	
     176   00:A9E2                      ;;=====================================================
     177   00:A9E2                      ;;DEFINICIÓN DE PANTALLAS
     178   00:A9E2                      ;;=====================================================		
     179   00:A9E2                      	include "pantallas.asm"
       1.  00:A9E2                      ;;=====================================================
       2.  00:A9E2                      ;;DEFINICIÓN DE PANTALLAS
       3.  00:A9E2                      ;;=====================================================		
       4.  00:A9E2                      
       5.  00:A9E2                      ; bancos 1 y 2 y de pantalla 1 
       6.  00:A9E2                      ; se usa un banco común (en este caso el banco 1)
       7.  00:A9E2                      ; el mapa afecta al banco 1 y 2
       8.  00:A9E2  (021D)              tiles_patrones_nivel0:	incbin "pantallas/nivel0.bank1.til.bin.chr.plet5"
       9.  00:ABFF  (0069)              tiles_color_nivel0:		incbin "pantallas/nivel0.bank1.til.bin.clr.plet5"
      10.  00:AC68  (0035)              tiles_mapa_nivel0:		incbin "pantallas/nivel0.bank01.map.bin.plet5"
      11.  00:AC9D                      
      12.  00:AC9D  (01B5)              tiles_patrones_nivel1:	incbin "pantallas/nivel1.bank1.til.bin.chr.plet5"
      13.  00:AE52  (0047)              tiles_color_nivel1:		incbin "pantallas/nivel1.bank1.til.bin.clr.plet5"
      14.  00:AE99  (0035)              tiles_mapa_nivel1:		incbin "pantallas/nivel1.bank01.map.bin.plet5"
      15.  00:AECE                      
      16.  00:AECE  (01B5)              tiles_patrones_nivel2:	incbin "pantallas/nivel2.bank1.til.bin.chr.plet5"
      17.  00:B083  (0047)              tiles_color_nivel2:		incbin "pantallas/nivel2.bank1.til.bin.clr.plet5"
      18.  00:B0CA  (0035)              tiles_mapa_nivel2:		incbin "pantallas/nivel2.bank01.map.bin.plet5"
      19.  00:B0FF                      
      20.  00:B0FF  (01B5)              tiles_patrones_nivel3:	incbin "pantallas/nivel3.bank1.til.bin.chr.plet5"
      21.  00:B2B4  (0047)              tiles_color_nivel3:		incbin "pantallas/nivel3.bank1.til.bin.clr.plet5"
      22.  00:B2FB  (0035)              tiles_mapa_nivel3:		incbin "pantallas/nivel3.bank01.map.bin.plet5"
      23.  00:B330                      
      24.  00:B330  (01B5)              tiles_patrones_nivel4:	incbin "pantallas/nivel4.bank1.til.bin.chr.plet5"
      25.  00:B4E5  (0047)              tiles_color_nivel4:		incbin "pantallas/nivel4.bank1.til.bin.clr.plet5"
      26.  00:B52C  (0035)              tiles_mapa_nivel4:		incbin "pantallas/nivel4.bank01.map.bin.plet5"
      27.  00:B561                      
      28.  00:B561  (01B5)              tiles_patrones_nivel5:	incbin "pantallas/nivel5.bank1.til.bin.chr.plet5"
      29.  00:B716  (0047)              tiles_color_nivel5:		incbin "pantallas/nivel5.bank1.til.bin.clr.plet5"
      30.  00:B75D  (0035)              tiles_mapa_nivel5:		incbin "pantallas/nivel5.bank01.map.bin.plet5"
      31.  00:B792                      
      32.  00:B792  (01B5)              tiles_patrones_nivel6:	incbin "pantallas/nivel6.bank1.til.bin.chr.plet5"
      33.  00:B947  (0047)              tiles_color_nivel6:		incbin "pantallas/nivel6.bank1.til.bin.clr.plet5"
      34.  00:B98E  (0035)              tiles_mapa_nivel6:		incbin "pantallas/nivel6.bank01.map.bin.plet5"
      35.  00:B9C3                      
      36.  00:B9C3                      ; 3º banco que es la parte de puntos, vidas, mapas, etc... es común
      37.  00:B9C3  (014C)              tiles_patrones_marcador:	incbin "pantallas/marcador.til.bin.chr.plet5"
      38.  00:BB0F  (0035)              tiles_color_marcador:		incbin "pantallas/marcador.til.bin.clr.plet5"
      39.  00:BB44  (0062)              tiles_mapa_marcador:		incbin "pantallas/marcador.map.bin.plet5"
      40.  00:BBA6                      
      41.  00:BBA6                      ;NOTA: FALTARÍAN PANTALLAS ESPECIALES (POR DEFINIR)
     180   00:BBA6                      
     181   00:BBA6                      
     182   00:BBA6                      	
     183   00:BBA6                      END:

    LABELS
-------------------------------------------------
00:000000D8 X GTTRIG
00:000000D5 X GTSTCK
00:0000F3DB   CLIKSW
00:0000013E X RDVDP
00:00000047   WRTVDP
00:0000005C   LDIRVM
00:00000059 X LDIRMV
00:0000005F   CHGMOD
00:00000041 X DISSCR
00:00000044 X ENASCR
00:00000062   CHGCLR
00:0000F3E9   FORCLR
00:0000F3EA   BAKCLR
00:0000F3EB   BDRCLR
00:000000C3   CLS
00:0000F3DF X RG0SAV
00:0000F3E0   RG1SAV
00:0000F3E1 X RG2SAV
00:0000F3E2 X RG3SAV
00:0000F3E3 X RG4SAV
00:0000F3E4 X RG5SAV
00:0000F3E5 X RG6SAV
00:0000F3E6 X RG7SAV
00:0000F3E7 X STATFL
00:00000099   REGEST
00:00000098   REGESCVDP
00:000000A0   PSG_A
00:000000A1   PSG_W
00:000000A2   PSG_R
00:00000000   CHRTBL
00:00001800   TILMAP
00:00001900 X TILMAPBANK1
00:00001B00   SPRART
00:00002000   CLRTBL
00:00003800   SPRTBL
00:00000001 X SI
00:00000000 X NO
00:00000004   LIMCADENCIA
00:00000000 X COLTRASP
00:00000001   COLNEGRO
00:00000002 X COLVERDE
00:00000003 X COLVERCLA
00:00000004 X COLAZULOSC
00:00000005 X COLAZULLA
00:00000006   COLROJOOSC
00:00000007 X COLCYAN
00:00000008   COLROJO
00:00000009 X COLROJOCLA
00:0000000A X COLAMAROSC
00:0000000B X COLAMARCLA
00:0000000C X COLVERDOSC
00:0000000D X COLMAGENTA
00:0000000E X COLGRIS
00:0000000F   COLBLANCO
00:000002F8   POSMAPLIN1
00:000002D8   POSMAPLIN2
00:000002B8   POSMAPLIN3
00:00000298   POSMAPLIN4
00:00000278   POSMAPLIN5
00:00000258   POSMAPLIN6
00:00000238   POSMAPLIN7
00:0000000D   POSCARAMAP
00:00000248   POSVIDAS
00:00000011   POSRELIMAP
00:000002C8   POSRELIQ
00:00000288   POSENERG
00:000002B4   POSNIVEL
00:00000238   POSMAPA
00:000001EE   POSPUERABAJ
00:0000008E   POSPUERARRI
00:000000FC   POSPUERDERE
00:000000E1   POSPUERIZQU
00:000000A3   POSORACION
00:000000A7 X POSCRUZ
00:000000AB   POSAGUA
00:000000AF   POSARMAD
00:000000B3   POSPLANTA
00:000000B7   POSVIDAEXT
00:000000BB   POSBALLESTA
00:00000020   POSORACIONX
00:00000040 X POSCRUZX
00:00000060   POSAGUAX
00:00000080   POSARMADX
00:000000A0   POSPLANTAX
00:000000C0   POSVIDAEXTX
00:000000E0   POSBALLESTAX
00:00000070   POSAYUDASY
00:00000000   INACTIVA
00:00000001   ACTIVA
00:00000088   POSANTOR1
00:00000097   POSANTOR2
00:000000C4   MAPLLAMA1
00:000000C5   MAPLLAMA2
00:000000FF   RESETLLAMA
00:00000088   POSESQUEL1
00:00000095   POSESQUEL2
00:000000A9   POSCALAVE1
00:000000B6   POSCALAVE2
00:00000019   RESETESQUEL
00:00000004   RESETESCENAESQUEL
00:00000013   TILEPROTAM
00:00000009   TILEGRISM
00:00000010   TILEMAPROJO
00:0000000F   TILEMAPAMAR
00:0000000E   TILEMAPVERD
00:00000008   NMAXVIDREL
00:00000007   NHABNIVEL
00:000000F8 X MAXENERGIA
00:000000D9   TILEENERG8
00:000000BA   TILEENERG7
00:0000009B   TILEENERG6
00:0000007C   TILEENERG5
00:0000005D   TILEENERG4
00:0000003E   TILEENERG3
00:0000001F   TILEENERG2
00:00000000   TILENEGRO
00:00000000 X LIMPANTIZQ
00:000000FF   LIMPANTDER
00:00000000 X LIMPANTARR
00:00000080   LIMPANTABA
00:00000006 X BASEMAPY
00:00000003 X BASEMAPX
00:0000FD9A X H.KEYI
00:0000FD9F   H.TIMI
00:0000F000   PT3_SETUP
00:0000F001   PT3_MODADDR
00:0000F003   PT3_CrPsPtr
00:0000F005   PT3_SAMPTRS
00:0000F007   PT3_OrnPtrs
00:0000F009   PT3_PDSP
00:0000F00B   PT3_CSP
00:0000F00D   PT3_PSP
00:0000F00F   PT3_PrNote
00:0000F010   PT3_PrSlide
00:0000F012   PT3_AdInPtA
00:0000F014   PT3_AdInPtB
00:0000F016   PT3_AdInPtC
00:0000F018   PT3_LPosPtr
00:0000F01A   PT3_PatsPtr
00:0000F01C   PT3_Delay
00:0000F01D   PT3_AddToEn
00:0000F01E   PT3_Env_Del
00:0000F01F   PT3_ESldAdd
00:0000F021   PT3_NTL3
00:0000F023   VARS
00:0000F023   ChanA
00:0000F040   ChanB
00:0000F05D   ChanC
00:0000F07A   DelyCnt
00:0000F07B   CurESld
00:0000F07D   CurEDel
00:0000F07E   Ns_Base_AddToNs
00:0000F07E   Ns_Base
00:0000F07F   AddToNs
00:0000F080   NT_
00:0000F140   AYREGS
00:0000F140   VT_
00:0000F14E   EnvBase
00:0000F150   VAR0END
00:0000F150   T1_
00:0000F150   T_NEW_1
00:0000F150   T_OLD_1
00:0000F168   T_OLD_2
00:0000F180   T_NEW_3
00:0000F180   T_OLD_3
00:0000F182   T_OLD_0
00:0000F182   T_NEW_0
00:0000F19A   T_NEW_2
00:0000F240   ayFX_MODE
00:0000F241   ayFX_BANK
00:0000F243   ayFX_PRIORITY
00:0000F244   ayFX_POINTER
00:0000F246   ayFX_TONE
00:0000F248   ayFX_NOISE
00:0000F249   ayFX_VOLUME
00:0000F24A   ayFX_CHANNEL
00:00008000   START
00:00008032   loop_principal
00:00008045 X fin_programa_principal
00:00008045   check_colisiones
00:00008045 X fin_check_colisiones
00:00008046   inicializa_variables_pruebas
00:00008068 X fin_inicializa_variables_pruebas
00:00008069 X inicializa_niveles
00:00008077   inicializa_niveles.bucle_borra_hab
00:0000807B X fin_iniciliza_niveles
00:0000807C   actualiza_marcador_vidas
00:00008081   loop_marcador_caras_negro
00:00008086 X fin_loop_marcador_caras_negro
00:0000808F   loop_marcador_caras
00:00008094 X fin_loop_marcador_caras
00:00008094 X fin_actualiza_marcador_vidas
00:00008095   actualiza_buffer_reliquias
00:0000809B   loop_buffer_reliquias_negro
00:000080A8   loop_buffer_reliquias
00:000080AD X fin_actualiza_buffer_reliquias
00:000080AE   localiza_info_habitacion
00:000080B1 X localiza_info_habitacion.situo_columna
00:000080BA X localiza_info_habitacion.situo_fila
00:000080C3   localiza_info_habitacion.loop_suma_fila
00:000080CB   localiza_info_habitacion.situo_nivel
00:000080DA   localiza_info_habitacion.loop_suma_nivel
00:000080DF   localiza_info_habitacion.actualiza_variable_habitacion
00:00008102 X fin_localiza_info_habitacion
00:00008103 X terminada_habitacion_recorrida
00:0000812B X fin_terminada_habitacion_recorrida
00:0000812C   suma_A_BC
00:00008131 X fin_suma_A_BC
00:00008132   suma_A_HL
00:00008137 X fin_suma_A_HL
00:00008138   color_pantalla
00:00008149 X fin_color_pantalla
00:00008149   sub_preparapantalla
00:00008149 X elimina_clic
00:0000814D X fin_elimina_clic
00:0000814D X limpia_pantalla
00:00008151 X fin_limpia_pantalla
00:00008157 X screen2
00:0000815C X sprites_16_16
00:0000816A X fin_sub_preparapantalla
00:0000816A   pinta_pantalla_completa
00:00008170 X fin_pinta_pantalla_completa
00:00008171   pinta_parte_superior_pantalla
00:000081A2   pinta_parte_superior_pantalla.carga_nivel_0
00:000081BD   pinta_parte_superior_pantalla.carga_nivel_1
00:000081D8   pinta_parte_superior_pantalla.carga_nivel_2
00:000081F3   pinta_parte_superior_pantalla.carga_nivel_3
00:0000820E   pinta_parte_superior_pantalla.carga_nivel_4
00:00008229   pinta_parte_superior_pantalla.carga_nivel_5
00:00008244   pinta_parte_superior_pantalla.carga_nivel_6
00:0000825C   pinta_parte_superior_pantalla.fin_carga_niveles
00:00008289 X fin_pinta_parte_superior_pantalla
00:00008289   tiles_patrones
00:0000828B   tiles_colores
00:0000828D   tiles_mapa
00:0000828F   pinta_parte_inferior_pantalla
00:000082AA X fin_pinta_parte_inferior_pantalla
00:000082AA   pinta_vidas
00:000082B9 X fin_pinta_vidas
00:000082B9   pinta_reliquias
00:000082C8 X fin_pinta_reliquias
00:000082C8   pinta_nivel
00:000082D4 X fin_pinta_nivel
00:000082D4   pinta_tile_suelto
00:000082E1 X fin_pinta_tile_suelto
00:000082E2   mira_pinta_energia
00:000082E8 X pinta_ener
00:000082E8 X pinta_ener_tile_8
00:000082F4   pinta_ener_tile_8_negro
00:000082F5   pinta_ener_tile_7
00:000082FF   pinta_ener_tile_7_negro
00:00008300   pinta_ener_tile_6
00:0000830A   pinta_ener_tile_6_negro
00:0000830B   pinta_ener_tile_5
00:00008315   pinta_ener_tile_5_negro
00:00008316   pinta_ener_tile_4
00:00008320   pinta_ener_tile_4_negro
00:00008321   pinta_ener_tile_3
00:0000832B   pinta_ener_tile_3_negro
00:0000832C   pinta_ener_tile_2
00:00008336   pinta_ener_tile_2_negro
00:00008337   fin_mira_pinta_energia
00:00008339   pinta_energia
00:00008348 X fin_pinta_energia
00:00008348   borra_mapa
00:0000839E X fin_borra_mapa
00:0000839F   pinta_puertas
00:000083BC X fin_pinta_puertas
00:000083BD   pinta_puerta_aba
00:000083D8 X fin_pinta_puerta_aba
00:000083D8   pinta_puerta_arr
00:000083F3 X fin_pinta_puerta_arr
00:000083F3   pinta_puerta_der
00:0000840E X fin_pinta_puerta_der
00:0000840E   pinta_puerta_izq
00:00008429 X fin_pinta_puerta_izq
00:00008429   posiciona_en_mapa
00:0000842C X posiciona_en_mapa.sumar_fila
00:00008456 X posiciona_en_mapa.fila_0
00:0000845D   posiciona_en_mapa.fila_1
00:00008464   posiciona_en_mapa.fila_2
00:0000846B   posiciona_en_mapa.fila_3
00:00008472   posiciona_en_mapa.fila_4
00:00008479   posiciona_en_mapa.fila_5
00:00008480 X posiciona_en_mapa.fila_6
00:00008480   posiciona_en_mapa.sumar_columna
00:00008496   pinta_pos_mapa_vacio
00:00008498   fin_pinta_pos_mapa
00:0000849B X fin_posiciona_en_mapa
00:0000849B   efecto_imagen_tira_reliquia
00:0000849E   efecto_imagen_tira_reliquia.parpadea_fondo
00:000084B5 X fin_efecto_imagen_tira_reliquia
00:000084B5   pinta_array
00:000084D0   pinta_array.pa_pinta_fila
00:000084D1   pinta_array.pa_pinta_columnas
00:000084F4 X fin_pinta_array
00:000084F5   wordaux1
00:000084F7   wordaux2
00:000084F9   byteaux1
00:000084FA   byteaux2
00:000084FB   inicializa_antorchas
00:0000851C X fin_inicializa_antorchas
00:0000851D   inicializa_esqueletos
00:0000853E X fin_inicializa_esqueletos
00:0000853F   pinta_extra_fondo
00:00008543 X pinta_extra_fondo.examina_sihay_antorchas
00:00008552   pinta_extra_fondo.hayantorchas
00:0000857B   pinta_extra_fondo.examina_sihay_esqueletos
00:0000858C   pinta_extra_fondo.hayesqueletos
00:000085B5 X fin_pinta_extra_fondo
00:000085B6   actualiza_elementos_fondo
00:000085B6 X actualiza_elementos_fondo.examina_antorchas
00:000085C4   actualiza_elementos_fondo.examina_esqueletos
00:000085D0 X fin_actualiza_elementos_fondo
00:000085D1   flip_llamas_antorchas
00:000085E8 X flip_llamas_antorchas.llama_impar
00:00008609   flip_llamas_antorchas.llama_par
00:00008628   fin_flip_llamas_antorchas
00:00008628   flip_calavera_esqueletos
00:00008655 X fin_flip_calavera_esqueletos
00:00008655   var_aux_calavera
00:00008656   actualiza_escena_calavera
00:00008662   actualiza_escena_calavera.decrementa_escenas
00:00008663 X actualiza_escena_calavera.fin_consulta_escena
00:00008671 X fin_actualiza_escena_calavera
00:00008672   carga_patrones_sprites_nivel
00:00008676 X fin_carga_patrones_sprites_nivel
00:00008676   carga_patrones_nivel_comunes
00:00008682 X fin_carga_patrones_nivel_comunes
00:00008682 X carga_patrones_sprites_nivel1
00:00008682 X fin_carga_patrones_sprites
00:00008683   render_sprites
00:0000868F X fin_actualiza_array_sprites_vram
00:0000868F   vuelca_resultado_puntomira_array
00:000086B4 X vuelca_resultado_puntomira_array.codigo_color_1
00:000086BD   vuelca_resultado_puntomira_array.codigo_color_2
00:000086C6 X fin_vuelca_resultado_puntomira_array
00:000086C6   check_player
00:000086E5 X f
00:000086E6   mueve_arriba
00:000086F1   mueve_arriba.no_decrementa_y
00:000086F2 X fin_mueve_arriba
00:000086F3   mueve_derecha
00:00008700   mueve_derecha.no_incrementa_x
00:00008701 X fin_mueve_derecha
00:00008702   mueve_abajo
00:0000870F   mueve_abajo.no_incrementa_y
00:00008710 X fin_mueve_abajo
00:00008711   mueve_izquierda
00:0000871C   mueve_izquierda.no_decrementa_x
00:0000871D X fin_mueve_izquierda
00:0000871E   mira_disparo
00:0000871E X mira_disparo.mira_boton_pulsado1
00:0000872B X mira_disparo.no_efectua_disparo
00:00008736   mira_disparo.efectua_disparo
00:00008748   mira_disparo.fin_mira_disparo1
00:00008749   mira_disparo.mira_boton_pulsado2
00:00008765 X fin_mira_disparo
00:00008765   update_controllers_status
00:0000879C   read_joy_0
00:000087B0   check_8th_keyboard_row
00:000087BE   check_4th_keyboard_row
00:000087CC X inicializa_replayer_efectos_interrupciones
00:000087E5 X fin_inicializa_replayer_efectos_interrupciones
00:000087E6   subrutina_isr
00:000087EF X fin_subrutina_isr
00:000087EF X subrutinas_sonido
00:00000000   CHNPRM_PsInOr
00:00000001   CHNPRM_PsInSm
00:00000002   CHNPRM_CrAmSl
00:00000003   CHNPRM_CrNsSl
00:00000004   CHNPRM_CrEnSl
00:00000005   CHNPRM_TSlCnt
00:00000006   CHNPRM_CrTnSl
00:00000008   CHNPRM_TnAcc
00:0000000A   CHNPRM_COnOff
00:0000000B   CHNPRM_OnOffD
00:0000000C   CHNPRM_OffOnD
00:0000000D   CHNPRM_OrnPtr
00:0000000F   CHNPRM_SamPtr
00:00000011   CHNPRM_NNtSkp
00:00000012   CHNPRM_Note
00:00000013   CHNPRM_SlToNt
00:00000014   CHNPRM_Env_En
00:00000015   CHNPRM_Flags
00:00000016   CHNPRM_TnSlDl
00:00000017   CHNPRM_TSlStp
00:00000019   CHNPRM_TnDelt
00:0000001B   CHNPRM_NtSkCn
00:0000001C   CHNPRM_Volume
00:0000001D X CHNPRM_Size
00:00000000   AR_TonA
00:00000002   AR_TonB
00:00000004   AR_TonC
00:00000006   AR_Noise
00:00000007   AR_Mixer
00:00000008   AR_AmplA
00:00000009   AR_AmplB
00:0000000A   AR_AmplC
00:0000000B   AR_Env
00:0000000D   AR_EnvTp
00:000087EF   CHECKLP
00:00008800 X PT3_MUTE
00:0000880C   PT3_INIT
00:0000884B   PT3_INIT.TP_0
00:00008857   PT3_INIT.TP_1
00:0000885E   PT3_INIT.TP_2
00:000088CC   PT3_INIT.L1
00:000088D9   PT3_INIT.L2
00:000088DD X PT3_INIT.L3
00:00008904   PT3_INIT.CORR_1
00:00008912   PT3_INIT.CORR_2
00:00008919   PT3_INIT.TC_EXIT
00:00008924   PT3_INIT.INITV1
00:0000892C   PT3_INIT.INITV2
00:00008940   PT3_INIT.INITV3
00:00008944   PD_OrSm
00:0000894E   PD_SAM
00:0000894F   PD_SAM_
00:00008965   PD_VOL
00:0000896E   PD_EOff
00:00008976   PD_SorE
00:00008980   PD_ENV
00:00008985   PD_ORN
00:0000898A   PD_ESAM
00:00008997   PTDECOD
00:000089A6   PD_LOOP
00:000089A9   PD_LP2
00:000089D6   PD_NOIS
00:000089DB   PD_REL
00:000089E1   PD_NOTE
00:000089E9   PD_RES
00:000089FB   PD_FIN
00:00008A02   C_PORTM
00:00008A4D   C_PORTM.NOSIG
00:00008A57   SET_STP
00:00008A63   C_GLISS
00:00008A76   C_SMPOS
00:00008A7C   C_ORPOS
00:00008A82   C_VIBRT
00:00008A9A   C_ENGLS
00:00008AAC   C_DELAY
00:00008AB2   SETENV
00:00008ACD   C_NOP
00:00008ACE   SETORN
00:00008AE7   SPCCOMS
00:00008B07   CHREGS
00:00008B2A   CHREGS.CH_ORPS
00:00008B35   CHREGS.CH_NTP
00:00008B3B   CHREGS.CH_NOK
00:00008B56   CHREGS.CH_SMPS
00:00008B6C   CHREGS.CH_NOAC
00:00008BB3   CHREGS.CH_STPP
00:00008BC8   CHREGS.CH_AMP
00:00008BDA   CHREGS.CH_AMIN
00:00008BDF   CHREGS.CH_SVAM
00:00008BE2   CHREGS.CH_NOAM
00:00008BEB   CHREGS.CH_APOS
00:00008BF1   CHREGS.CH_VOL
00:00008BFC X CHREGS.CH_ENV
00:00008C03   CHREGS.CH_NOEN
00:00008C1D   CHREGS.NO_ENAC
00:00008C24   CHREGS.NO_ENSL
00:00008C32   CHREGS.CH_MIX
00:00008C36   CHREGS.CH_EXIT
00:00008C55   CHREGS.CH_ONDL
00:00008C59   PT3_PLAY
00:00008C8D   PT3_PLAY.PLNLP
00:00008CB4   PT3_PLAY.PL1A
00:00008CBF   PT3_PLAY.PL1B
00:00008CD4   PT3_PLAY.PL1C
00:00008CE9   PT3_PLAY.PL1D
00:00008CEF   PT3_PLAY.PL2
00:00008D51   PT3_ROUT
00:00008D52   ROUT_A0
00:00008D5E   ROUT_A0.LOUT
00:00008D72   NT_DATA
00:00008D82   T_
00:00008D82   TCOLD_0
00:00008D8E   TCNEW_1
00:00008D8E   TCOLD_1
00:00008D90   TCOLD_2
00:00008DA2   TCNEW_3
00:00008DA3   TCOLD_3
00:00008DAC   TCNEW_0
00:00008DB7   TCNEW_2
00:00008DC2   EMPTYSAMORN
00:00008DC6   T_PACK
00:00000000 X AYFXRELATIVE
00:00008DFB   ayFX_SETUP
00:00008E07   ayFX_END
00:00008E0D   ayFX_INIT
00:00008E1E   ayFX_INIT.CHECK_PRI
00:00008E3F   ayFX_INIT.INIT_END
00:00008E43   ayFX_PLAY
00:00008E57   ayFX_PLAY.TAKECB
00:00008E68   ayFX_PLAY.CHECK_NN
00:00008E75   ayFX_PLAY.SETPOINTER
00:00008E89   ayFX_PLAY.SETMASKS
00:00008E97 X ayFX_PLAY.CHK1
00:00008E99 X ayFX_PLAY.PLAY_C
00:00008EA6   ayFX_PLAY.CHK2
00:00008EAB X ayFX_PLAY.PLAY_B
00:00008EB8   ayFX_PLAY.CHK3
00:00008EBB X ayFX_PLAY.PLAY_A
00:00008EC8   ayFX_PLAY.SETMIXER
00:00008ED8   song
00:00009840   sfx_bank
00:0000988B   inicializa_ayudas
00:000098F2 X fin_resetea_ayudas
00:000098F3   carga_datos_ayuda
00:000098F8 X fin_carga_datos_ayuda
00:000098F9   pinta_obj_ayuda
00:000098FD X pinta_obj_ayuda.dibujoon
00:00009909   pinta_obj_ayuda.dibujooff
00:00009912   pinta_obj_ayuda.param_wordaux2
00:0000991E X pinta_obj_ayuda.filasycols
00:00009929 X fin_pinta_obj_ayuda
00:00009929   pinta_ayudas_habitacion
00:00009929 X pinta_ayudas_habitacion.examina_oracion
00:0000993A   pinta_ayudas_habitacion.examina_cruz
00:0000994B   pinta_ayudas_habitacion.examina_aguabendita
00:0000995C   pinta_ayudas_habitacion.examina_armadura
00:0000996D   pinta_ayudas_habitacion.examina_planta
00:0000997E   pinta_ayudas_habitacion.examina_vidaextra
00:0000998F   pinta_ayudas_habitacion.examina_ballesta
00:0000999E X fin_pinta_ayudas_habitacion
00:0000999F   accion_oracion
00:0000999F X fin_accion_oracion
00:000099A0   accion_cruz
00:000099A0 X fin_accion_cruz
00:000099A1   accion_agua
00:000099A1 X fin_accion_agua
00:000099A2   accion_armadura
00:000099A2 X fin_accion_armadura
00:000099A3   accion_planta
00:000099A3 X fin_accion_planta
00:000099A4   accion_vidaextra
00:000099A4 X fin_accion_vidaextra
00:000099A5 X accion_ballesta
00:000099A5 X fin_accion_ballesta
00:000099A6   depack_VRAM
00:000099D3   literal
00:000099D8   loop
00:000099E1 X getlen
00:000099E7   lus
00:00009A04   lenok
00:00009A11   mode7
00:00009A17   mode6
00:00009A1D   mode5
00:00009A23   mode4
00:00009A29   mode3
00:00009A2F   mode2
00:00009A3F   offsok
00:00009A4A   offsok.loop
00:00009A6C   getbit
00:00009A70   getbitexx
00:00009A76   Depack_out
00:00009A78   modes
00:00000000 X ESTRUCTURA_PUNTOMIRA.posx
00:00000001 X ESTRUCTURA_PUNTOMIRA.posy
00:00000002 X ESTRUCTURA_PUNTOMIRA.escena
00:00000003 X ESTRUCTURA_PUNTOMIRA.velocidad
00:00000004 X ESTRUCTURA_PUNTOMIRA.boton2_pressed
00:00000005 X ESTRUCTURA_PUNTOMIRA.cadencia
00:00000006 X ESTRUCTURA_PUNTOMIRA.pm_aux1
00:00000007 X ESTRUCTURA_PUNTOMIRA.pm_aux2
00:00000008 X ESTRUCTURA_PUNTOMIRA.pm_aux3
00:00000009 X ESTRUCTURA_PUNTOMIRA.pm_aux4
00:0000000A X ESTRUCTURA_PUNTOMIRA.pm_aux5
00:0000000B X ESTRUCTURA_PUNTOMIRA.pm_aux6
00:0000000C X ESTRUCTURA_PUNTOMIRA.pm_aux7
00:0000000D X ESTRUCTURA_PUNTOMIRA.pm_aux8
00:0000000E X ESTRUCTURA_PUNTOMIRA.pm_aux9
00:0000000F X ESTRUCTURA_PUNTOMIRA.pm_aux10
00:00000010 X ESTRUCTURA_PUNTOMIRA
00:00000000 X ESTRUCTURA_ENEMIGO.tipo
00:00000001 X ESTRUCTURA_ENEMIGO.posx
00:00000002 X ESTRUCTURA_ENEMIGO.posy
00:00000003 X ESTRUCTURA_ENEMIGO.color
00:00000004 X ESTRUCTURA_ENEMIGO.escena
00:00000005 X ESTRUCTURA_ENEMIGO.contador_siguiente_escena
00:00000006 X ESTRUCTURA_ENEMIGO.reset_contador
00:00000007 X ESTRUCTURA_ENEMIGO.dano
00:00000008 X ESTRUCTURA_ENEMIGO.energia
00:00000009 X ESTRUCTURA_ENEMIGO.ver_hor
00:0000000A X ESTRUCTURA_ENEMIGO.manejador_dibujo
00:0000000C X ESTRUCTURA_ENEMIGO.en_aux3
00:0000000D X ESTRUCTURA_ENEMIGO.en_aux4
00:0000000E   ESTRUCTURA_ENEMIGO
00:00000000 X ESTRUCTURA_AYUDA.activo
00:00000001 X ESTRUCTURA_AYUDA.postilemem_nousado
00:00000003 X ESTRUCTURA_AYUDA.postilemem_usado
00:00000005 X ESTRUCTURA_AYUDA.pospantalla
00:00000006 X ESTRUCTURA_AYUDA.posx
00:00000007 X ESTRUCTURA_AYUDA.posy
00:00000008 X ESTRUCTURA_AYUDA.puntero_accion
00:0000000A X ESTRUCTURA_AYUDA.ayu_aux1
00:0000000B X ESTRUCTURA_AYUDA.ayu_aux2
00:0000000C X ESTRUCTURA_AYUDA.ayu_aux3
00:0000000D X ESTRUCTURA_AYUDA.ayu_aux4
00:0000000E X ESTRUCTURA_AYUDA.ayu_aux5
00:0000000F X ESTRUCTURA_AYUDA.ayu_aux6
00:00000010   ESTRUCTURA_AYUDA
00:00000000 X ESTRUCTURA_ANTORCHA.activo
00:00000001 X ESTRUCTURA_ANTORCHA.postilemem_antor1
00:00000003 X ESTRUCTURA_ANTORCHA.pospantalla_antor1
00:00000004 X ESTRUCTURA_ANTORCHA.pospantalla_antor2
00:00000005 X ESTRUCTURA_ANTORCHA.escena
00:00000006 X ESTRUCTURA_ANTORCHA.cont_sig_escena
00:00000007   ESTRUCTURA_ANTORCHA
00:00000000 X ESTRUCTURA_ESQUELETO.activo
00:00000001 X ESTRUCTURA_ESQUELETO.postilemem_antor1
00:00000003 X ESTRUCTURA_ESQUELETO.pospantalla_esquel1
00:00000004 X ESTRUCTURA_ESQUELETO.pospantalla_esquel2
00:00000005   ESTRUCTURA_ESQUELETO.escena
00:00000006   ESTRUCTURA_ESQUELETO.cont_sig_escena
00:00000007   ESTRUCTURA_ESQUELETO
00:00009A86 X sprites_pantantalla
00:00009A86   sprites_comunes
00:00009A86 X sprite_punto_mira_1
00:00009AA6 X sprite_punto_mira_2
00:00009AC6 X sprite_punto_mira_1_mejorado
00:00009AE6 X sprite_punto_mira_2_mejorado
00:00009B06 X sprite_explosion_1
00:00009B26 X sprite_explosion_2
00:00009B46   fin_sprites_comunes
00:00009B46 X sprite_arana1_1
00:00009B66 X sprite_arana1_2
00:00009B86 X sprite_murcielago1_1
00:00009BA6 X sprite_murcielago1_2
00:00009BC6 X sprite_serpiente1_1
00:00009BE6 X sprite_serpiente1_2
00:00009C06 X sprite_serpiente2_1
00:00009C26 X sprite_serpiente2_2
00:00009C46 X sprite_zombi1_1_1
00:00009C66 X sprite_zombi1_2_1
00:00009C86 X sprite_zombi1_3_1
00:00009CA6 X sprite_zombi1_4_1
00:00009CC6 X sprite_zombi1_1_2
00:00009CE6 X sprite_zombi1_2_2
00:00009D06 X sprite_zombi1_3_2
00:00009D26 X sprite_zombi1_4_2
00:00009D46 X sprite_zombi2_1_1
00:00009D66 X sprite_zombi2_2_1
00:00009D86 X sprite_zombi2_3_1
00:00009DA6 X sprite_zombi2_4_1
00:00009DC6 X sprite_zombi2_1_2
00:00009DE6 X sprite_zombi2_2_2
00:00009E06 X sprite_zombi2_3_2
00:00009E26 X sprite_zombi2_4_2
00:00009E46 X sprite_caballero1_1_1
00:00009E66 X sprite_caballero1_2_1
00:00009E86 X sprite_caballero1_3_1
00:00009EA6 X sprite_caballero1_4_1
00:00009EC6 X sprite_caballero1_1_2
00:00009EE6 X sprite_caballero1_2_2
00:00009F06 X sprite_caballero1_3_2
00:00009F26 X sprite_caballero1_4_2
00:00009F46 X sprite_caballero2_1_1
00:00009F66 X sprite_caballero2_2_1
00:00009F86 X sprite_caballero2_3_1
00:00009FA6 X sprite_caballero2_4_1
00:00009FC6 X sprite_caballero2_1_2
00:00009FE6 X sprite_caballero2_2_2
00:0000A006 X sprite_caballero2_3_2
00:0000A026 X sprite_caballero2_4_2
00:0000A046 X sprite_llama1_1
00:0000A066 X sprite_llama2_1
00:0000A086 X sprite_llama1_2
00:0000A0A6 X sprite_llama2_2
00:0000A0C6 X sprite_fantasma1_1
00:0000A0E6 X sprite_fantasma2_1
00:0000A106 X sprite_fantasma1_2
00:0000A126 X sprite_fantasma2_2
00:0000A146 X sprite_magia1_1
00:0000A166 X sprite_magia2_1
00:0000A186 X sprite_magia1_2
00:0000A1A6 X sprite_magia2_2
00:0000A1C6 X sprite_beholder1_1
00:0000A1E6 X sprite_beholder2_1
00:0000A206 X sprite_beholder3_1
00:0000A226 X sprite_beholder4_1
00:0000A246 X sprite_beholder1_2
00:0000A266 X sprite_beholder2_2
00:0000A286 X sprite_beholder3_2
00:0000A2A6 X sprite_beholder4_2
00:0000A2C6 X sprite_vampiro1_1
00:0000A2E6 X sprite_vampiro2_1
00:0000A306 X sprite_vampiro1_2
00:0000A326 X sprite_vampiro2_2
00:0000A346 X sprite_manoizq1
00:0000A366 X sprite_manoizq2
00:0000A386 X sprite_manoizq3
00:0000A3A6 X sprite_manoder1
00:0000A3C6 X sprite_manoder2
00:0000A3E6 X sprite_manoder3
00:0000A406   habitacion_actual
00:0000A407   habitacion_extras
00:0000A408   habitacion_recorrida
00:0000A40A   habitacion_terminada
00:0000A411   habitaciones_juego
00:0000A411 X habitaciones_nivel0
00:0000A481 X habitaciones_nivel1
00:0000A4F1 X habitaciones_nivel2
00:0000A561 X habitaciones_nivel3
00:0000A5D1 X habitaciones_nivel4
00:0000A641 X habitaciones_nivel5
00:0000A6B1 X habitaciones_nivel6
00:0000A721   color_base
00:0000A724   color_bomba1
00:0000A727   color_bomba2
00:0000A72A X prota
00:0000A72A   prota.posx
00:0000A72B   prota.posy
00:0000A72C   prota.escena
00:0000A72D X prota.velocidad
00:0000A72E X prota.boton2_pressed
00:0000A72F   prota.cadencia
00:0000A730 X prota.pm_aux1
00:0000A731 X prota.pm_aux2
00:0000A732 X prota.pm_aux3
00:0000A733 X prota.pm_aux4
00:0000A734 X prota.pm_aux5
00:0000A735 X prota.pm_aux6
00:0000A736 X prota.pm_aux7
00:0000A737 X prota.pm_aux8
00:0000A738 X prota.pm_aux9
00:0000A739 X prota.pm_aux10
00:0000A73A   prota_nivel
00:0000A73B   prota_vidas
00:0000A73C   prota_reliquias
00:0000A73D   prota_pos_mapx
00:0000A73E   prota_pos_mapy
00:0000A73F   prota_energia
00:0000A740   array_aux_vidas
00:0000A748   array_aux_reliquias
00:0000A750   array_aux_energia
00:0000A757   ultimo_pos_array_aux_energia
00:0000A758   array_aux_mapa_limpiar
00:0000A75F   elemento_pintar_mapa
00:0000A760   array_puerta_arriba
00:0000A760 X array_puerta_arriba1
00:0000A764 X array_puerta_arriba2
00:0000A768 X array_puerta_arriba3
00:0000A76C X array_puerta_arriba4
00:0000A770 X array_puerta_arriba5
00:0000A774   array_puerta_derecha
00:0000A774 X array_puerta_derecha1
00:0000A777 X array_puerta_derecha2
00:0000A77A X array_puerta_derecha3
00:0000A77D X array_puerta_derecha4
00:0000A780 X array_puerta_derecha5
00:0000A783 X array_puerta_derecha6
00:0000A786 X array_puerta_derecha7
00:0000A789   array_puerta_abajo
00:0000A78D   array_puerta_izquierda
00:0000A78D X array_puerta_izquierda1
00:0000A790 X array_puerta_izquierda2
00:0000A793 X array_puerta_izquierda3
00:0000A796 X array_puerta_izquierda4
00:0000A799 X array_puerta_izquierda5
00:0000A79C X array_puerta_izquierda6
00:0000A79F X array_puerta_izquierda7
00:0000A7A2 X lista_ayudas
00:0000A7A2   ayuda_oracion
00:0000A7B2   ayuda_cruz
00:0000A7C2   ayuda_aguabendita
00:0000A7D2   ayuda_armadura
00:0000A7E2   ayuda_planta
00:0000A7F2   ayuda_vidaextra
00:0000A802   ayuda_ballesta
00:0000A812 X datos_oracion
00:0000A81C   datos_cruz
00:0000A826   datos_aguabendita
00:0000A837   datos_armadura
00:0000A848   datos_planta
00:0000A859   datos_vidaextra
00:0000A86A   datos_ballesta
00:0000A87B X array_ayudas
00:0000A87B   array_oracionon
00:0000A87D X array_oracionon1
00:0000A87F   array_oracionoff
00:0000A881 X array_oracionoff1
00:0000A883   array_cruzon
00:0000A885 X array_cruzon1
00:0000A887   array_cruzoff
00:0000A889 X array_cruzoff1
00:0000A88B   array_aguaon
00:0000A88D X array_aguaon1
00:0000A88F   array_aguaoff
00:0000A891 X array_aguaoff1
00:0000A893   array_armaduraon
00:0000A895 X array_armaduraon1
00:0000A897   array_armaduraoff
00:0000A899 X array_armaduraoff1
00:0000A89B   array_plantaon
00:0000A89D X array_plantaon1
00:0000A89F   array_plantaoff
00:0000A8A1 X array_plantaoff1
00:0000A8A3   array_extraon
00:0000A8A5 X array_extraon1
00:0000A8A7   array_extraoff
00:0000A8A9 X array_extraoff1
00:0000A8AB   array_ballestaon
00:0000A8AD X array_ballestaon1
00:0000A8AF   array_ballestaoff
00:0000A8B1 X array_ballestaoff1
00:0000A8B3   antorchas
00:0000A8BA   array_antorcha
00:0000A8BD   esqueletos
00:0000A8C4   array_esqueleto
00:0000A8D0   lista_escenas_calavera
00:0000A8D4   array_sprites
00:0000A8D4   array_sprites_pm
00:0000A8DC X array_sprites_enem
00:0000A954 X lista_enemigos
00:0000A9E0 X puntero_array_atrib_array_VRAM
00:0000A9E2   tiles_patrones_nivel0
00:0000ABFF   tiles_color_nivel0
00:0000AC68   tiles_mapa_nivel0
00:0000AC9D   tiles_patrones_nivel1
00:0000AE52   tiles_color_nivel1
00:0000AE99   tiles_mapa_nivel1
00:0000AECE   tiles_patrones_nivel2
00:0000B083   tiles_color_nivel2
00:0000B0CA   tiles_mapa_nivel2
00:0000B0FF   tiles_patrones_nivel3
00:0000B2B4   tiles_color_nivel3
00:0000B2FB   tiles_mapa_nivel3
00:0000B330   tiles_patrones_nivel4
00:0000B4E5   tiles_color_nivel4
00:0000B52C   tiles_mapa_nivel4
00:0000B561   tiles_patrones_nivel5
00:0000B716   tiles_color_nivel5
00:0000B75D   tiles_mapa_nivel5
00:0000B792   tiles_patrones_nivel6
00:0000B947   tiles_color_nivel6
00:0000B98E   tiles_mapa_nivel6
00:0000B9C3   tiles_patrones_marcador
00:0000BB0F   tiles_color_marcador
00:0000BB44   tiles_mapa_marcador
00:0000BBA6   END


 Output: t4.out
-------------------------------------------------

 Page: 00
  Org: 00008000  Size: *  Used: 00000000

    No output

 Output: t4.bin
-------------------------------------------------

 Page: 00
  Org: 00008000  Size: *  Used: 00003BAD

   Address   Length Align   Label
   00008000   15277         START
