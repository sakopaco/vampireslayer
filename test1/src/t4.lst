Sjasm Z80 Assembler v0.42c - www.xl2s.tk             [2021.09.05 - 10:54:18]

t4.asm
Errors: 0

       1   00:0000                      	OUTPUT	"t4.bin"
       2   00:8000                      	
       3   00:8000                      ;;=====================================================
       4   00:8000                      ;;DEFINICIÓN DE CONSTANTES
       5   00:8000                      ;;=====================================================	
       6   00:8000                      	include "constantes.asm"
       1.  00:8000                      ;;=====================================================
       2.  00:8000                      ;; FICHERO constantes.asm
       3.  00:8000                      ;;=====================================================
       4.  00:8000                      
       5.  00:8000                      ;;ETIQUETAS/CONSTANTES BIOS TECLADO
       6.  00:8000  (00:00D8)           GTTRIG		equ		#00D8	;Returns current trigger status
       7.  00:8000  (00:00D5)           GTSTCK		equ		#00D5	;Returns the joystick/cursors status
       8.  00:8000  (00:F3DB)           CLIKSW		equ		#F3DB	;deshabilita el sonido de clic cuando se pulsa una tecla
       9.  00:8000                      
      10.  00:8000                      ;;ETIQUETAS/CONSTANTES BIOS VDP
      11.  00:8000  (00:013E)           RDVDP		equ		#013E	;lee registro status VDP
      12.  00:8000  (00:0047)           WRTVDP		equ		#0047	;escribe registros del VDP
      13.  00:8000  (00:005C)           LDIRVM		equ		#005C	;RAM/ROM -> VRAM
      14.  00:8000  (00:0059)           LDIRMV		equ		#0059	;VRAM -> RAM
      15.  00:8000  (00:005F)           CHGMOD		equ		#005F	;cambia modo pantalla (screen mode)
      16.  00:8000  (00:0041)           DISSCR  	equ		#0041	;desactiva pantanlla
      17.  00:8000  (00:0044)           ENASCR  	equ		#0044	;activa pantalla
      18.  00:8000  (00:0062)           CHGCLR  	equ		#0062	;cambia color de pantalla (toca A y direcciones)
      19.  00:8000  (00:F3E9)           FORCLR		equ		#F3E9	;zona memoria color foreground
      20.  00:8000  (00:F3EA)           BAKCLR  	equ		#F3EA	;zona memoria color background
      21.  00:8000  (00:F3EB)           BDRCLR 		equ		#F3EB	;zona memoria bordercolor
      22.  00:8000  (00:00C3)           CLS			equ		#00C3	;limpia pantalla (necesita A=0)
      23.  00:8000                      
      24.  00:8000                      ;;ETIQUETAS/CONSTANTES REGISTROS VDP
      25.  00:8000  (00:F3DF)           RG0SAV		equ		#F3DF	;Mirror of VDP register 0 (Basic: VDP(0))
      26.  00:8000  (00:F3E0)           RG1SAV		equ		#F3E0	;Mirror of VDP register 1 (Basic: VDP(1))
      27.  00:8000  (00:F3E1)           RG2SAV		equ		#F3E1	;Mirror of VDP register 2 (Basic: VDP(2))
      28.  00:8000  (00:F3E2)           RG3SAV		equ		#F3E2	;Mirror of VDP register 3 (Basic: VDP(3))
      29.  00:8000  (00:F3E3)           RG4SAV		equ		#F3E3	;Mirror of VDP register 4 (Basic: VDP(4))
      30.  00:8000  (00:F3E4)           RG5SAV		equ		#F3E4	;Mirror of VDP register 5 (Basic: VDP(5))
      31.  00:8000  (00:F3E5)           RG6SAV		equ		#F3E5	;Mirror of VDP register 6 (Basic: VDP(6))
      32.  00:8000  (00:F3E6)           RG7SAV		equ		#F3E6	;Mirror of VDP register 7 (Basic: VDP(7))
      33.  00:8000  (00:F3E7)           STATFL		equ		#F3E7	;Mirror of VDP(8) status register (S#0)
      34.  00:8000                      
      35.  00:8000  (00:0099)           REGEST		equ		#0099	;registro de estado para escribir directamente en VRAM
      36.  00:8000  (00:0098)           REGESCVDP	equ		#0098	;registro donde escribir valor para VRAM
      37.  00:8000                      
      38.  00:8000                      ;;ETIQUETAS/CONSTANTES REGISTROS PSG (PARA JOYSTICK)
      39.  00:8000  (00:00A0)           PSG_A  equ  0a0h  ;reg address
      40.  00:8000  (00:00A1)           PSG_W  equ  0a1h  ;reg data WR
      41.  00:8000  (00:00A2)           PSG_R  equ  0a2h  ;reg data
      42.  00:8000                      
      43.  00:8000                      
      44.  00:8000                      ;;ETIQUETAS DE ZONAS DE MEMORIA DE LA VPD (MSX1)
      45.  00:8000  (00:0000)           CHRTBL		equ		#0000
      46.  00:8000  (00:1800)           TILMAP		equ		#1800
      47.  00:8000  (00:1900)           TILMAPBANK1 equ		#1900
      48.  00:8000  (00:1B00)           SPRART		equ		#1B00
      49.  00:8000  (00:2000)           CLRTBL		equ		#2000
      50.  00:8000  (00:3800)           SPRTBL		equ		#3800
      51.  00:8000                      
      52.  00:8000                      
      53.  00:8000                      ;;ETIQUETAS ESTANDAR PARA DAR MÁS CLARIDAD AL CODIGO
      54.  00:8000  (00:0001)           SI			equ		1
      55.  00:8000  (00:0000)           NO			equ		0
      56.  00:8000  (00:0004)           LIMCADENCIA equ		4	;nº de veces que se ejecutará el disparo antes de ejecutar un disparo real (porque cuando se pulsa la tecl dispara 3 ó 4 veces de rápido que va)
      57.  00:8000                      ;hay que estudiar si 3 es un nº mejor
      58.  00:8000                      
      59.  00:8000                      
      60.  00:8000                      
      61.  00:8000                      ;;PALETA DE COLORES DEL MSX
      62.  00:8000  (00:0000)           COLTRASP	equ		0
      63.  00:8000  (00:0001)           COLNEGRO	equ		1
      64.  00:8000  (00:0002)           COLVERDE	equ		2
      65.  00:8000  (00:0003)           COLVERCLA	equ		3
      66.  00:8000  (00:0004)           COLAZULOSC	equ		4
      67.  00:8000  (00:0005)           COLAZULLA	equ		5
      68.  00:8000  (00:0006)           COLROJOOSC	equ		6
      69.  00:8000  (00:0007)           COLCYAN		equ		7
      70.  00:8000  (00:0008)           COLROJO		equ		8
      71.  00:8000  (00:0009)           COLROJOCLA	equ		9
      72.  00:8000  (00:000A)           COLAMAROSC	equ		10
      73.  00:8000  (00:000B)           COLAMARCLA	equ		11
      74.  00:8000  (00:000C)           COLVERDOSC	equ		12
      75.  00:8000  (00:000D)           COLMAGENTA	equ		13
      76.  00:8000  (00:000E)           COLGRIS		equ		14
      77.  00:8000  (00:000F)           COLBLANCO	equ		15
      78.  00:8000                      
      79.  00:8000                      
      80.  00:8000                      
      81.  00:8000                      ;;ETIQUETAS ESPECIFICAS PARA DAR MÁS CLARIDAD AL CODIGO (relacionadas con posiciones en mapa vdp)
      82.  00:8000  (00:02F8)           POSMAPLIN1  equ		#02F8
      83.  00:8000  (00:02D8)           POSMAPLIN2  equ		#02D8
      84.  00:8000  (00:02B8)           POSMAPLIN3  equ		#02B8
      85.  00:8000  (00:0298)           POSMAPLIN4  equ		#0298
      86.  00:8000  (00:0278)           POSMAPLIN5  equ		#0278
      87.  00:8000  (00:0258)           POSMAPLIN6  equ		#0258
      88.  00:8000  (00:0238)           POSMAPLIN7  equ		#0238
      89.  00:8000                      
      90.  00:8000  (00:000D)           POSCARAMAP	equ		#000D
      91.  00:8000  (00:0248)           POSVIDAS	equ		#0248
      92.  00:8000  (00:0011)           POSRELIMAP	equ		#0011
      93.  00:8000  (00:02C8)           POSRELIQ	equ		#02C8
      94.  00:8000  (00:0288)           POSENERG	equ		#0288
      95.  00:8000  (00:02B4)           POSNIVEL	equ		#02B4
      96.  00:8000  (00:0238)           POSMAPA		equ 	#0238
      97.  00:8000                      
      98.  00:8000  (00:01EE)           POSPUERABAJ equ		#01EE
      99.  00:8000  (00:008E)           POSPUERARRI equ		#008E
     100.  00:8000  (00:00FC)           POSPUERDERE equ		#00FC
     101.  00:8000  (00:00E1)           POSPUERIZQU equ		#00E1
     102.  00:8000                      
     103.  00:8000  (00:0000)           ORACIONON	equ		0
     104.  00:8000  (00:0004)           ORACIONOFF  equ		4
     105.  00:8000  (00:0008)           CRUZON		equ		8
     106.  00:8000  (00:000C)           CRUZOFF		equ		12
     107.  00:8000  (00:0010)           AGUAON		equ		16
     108.  00:8000  (00:0014)           AGUAOFF		equ		20
     109.  00:8000  (00:0018)           ARMADON		equ		24
     110.  00:8000  (00:001C)           ARMADOFF	equ		28
     111.  00:8000  (00:0020)           PLANTAON	equ		32
     112.  00:8000  (00:0024)           PLANTAOFF	equ		36
     113.  00:8000  (00:0028)           VIDAEXTON	equ		40
     114.  00:8000  (00:002C)           VIDAEXTOFF	equ		44
     115.  00:8000  (00:0030)           BALLESON	equ		48
     116.  00:8000  (00:0034)           BALLESOFF	equ		52
     117.  00:8000                      
     118.  00:8000                      ;;ETIQUETAS ESPECIFICAS PARA DAR MÁS CLARIDAD AL CODIGO (relacionadas con posiciones en en el banco de memoria)
     119.  00:8000  (00:0013)           TILEPROTAM  equ		19		;tile del prota para pintar en mapa
     120.  00:8000  (00:0009)           TILEGRISM	equ		9		;tile gris que representa vacio (por donde el prota va pasando)
     121.  00:8000  (00:0010)           TILEMAPROJO equ		16
     122.  00:8000  (00:000F)           TILEMAPAMAR equ		15
     123.  00:8000  (00:000E)           TILEMAPVERD equ		14
     124.  00:8000                      
     125.  00:8000                      
     126.  00:8000                      ;;ETIQUETAS ESPECIFICAS PARA DAR MÁS CLARIDAD AL CODIGO (generales)
     127.  00:8000  (00:0008)           NMAXVIDREL	equ		8		;el número máximo de vidas y de reliquias es de 8
     128.  00:8000  (00:0007)           NHABNIVEL	equ		7
     129.  00:8000  (00:00F8)           MAXENERGIA  equ		248
     130.  00:8000  (00:00D9)           TILEENERG8  equ		217
     131.  00:8000  (00:00BA)           TILEENERG7  equ		186
     132.  00:8000  (00:009B)           TILEENERG6  equ		155
     133.  00:8000  (00:007C)           TILEENERG5  equ		124
     134.  00:8000  (00:005D)           TILEENERG4  equ		93
     135.  00:8000  (00:003E)           TILEENERG3  equ		62
     136.  00:8000  (00:001F)           TILEENERG2  equ		31
     137.  00:8000  (00:0000)           TILENEGRO	equ		0
     138.  00:8000                      
     139.  00:8000                      ;limites
     140.  00:8000  (00:0000)           LIMPANTIZQ  equ		0
     141.  00:8000  (00:00FF)           LIMPANTDER  equ		255
     142.  00:8000  (00:0000)           LIMPANTARR  equ		0
     143.  00:8000  (00:0080)           LIMPANTABA  equ		128
     144.  00:8000                      
     145.  00:8000                      
     146.  00:8000                      ;matriz de 7x7 empieza en 0, y fila y x col, cuento desde esquina sup izq
     147.  00:8000  (00:0006)           BASEMAPY	equ		6
     148.  00:8000  (00:0003)           BASEMAPX	equ		3
     149.  00:8000                      
     150.  00:8000                      
     151.  00:8000                      
     152.  00:8000                      ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
     153.  00:8000                      ;; CONSTANTES PARA INTERRUPCIONES
     154.  00:8000                      ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
     155.  00:8000  (00:FD9A)           H.KEYI		equ     	#FD9A
     156.  00:8000  (00:FD9F)           H.TIMI	 	equ     	#FD9F
     157.  00:8000                      
     158.  00:8000                      
     159.  00:8000                      ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
     160.  00:8000                      ;; CONSTANTES PARA SONIDO 
     161.  00:8000                      ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
     162.  00:8000                      
     163.  00:8000  (F000)              	map		#f000
     164.  00:8000                      
     165.  00:8000                      ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;PT3 REPLAYER
     166.  00:8000  (00:F000)           PT3_SETUP:		#1	;set bit0 to 1, if you want to play without looping
     167.  00:8000                      					;bit7 is set each time, when loop point is passed
     168.  00:8000  (00:F001)           PT3_MODADDR:	#2
     169.  00:8000  (00:F003)           PT3_CrPsPtr:	#2
     170.  00:8000  (00:F005)           PT3_SAMPTRS:	#2
     171.  00:8000  (00:F007)           PT3_OrnPtrs:	#2
     172.  00:8000  (00:F009)           PT3_PDSP:		#2
     173.  00:8000  (00:F00B)           PT3_CSP:		#2
     174.  00:8000  (00:F00D)           PT3_PSP:		#2
     175.  00:8000  (00:F00F)           PT3_PrNote:		#1
     176.  00:8000  (00:F010)           PT3_PrSlide:	#2
     177.  00:8000  (00:F012)           PT3_AdInPtA:	#2
     178.  00:8000  (00:F014)           PT3_AdInPtB:	#2
     179.  00:8000  (00:F016)           PT3_AdInPtC:	#2
     180.  00:8000  (00:F018)           PT3_LPosPtr:	#2
     181.  00:8000  (00:F01A)           PT3_PatsPtr:	#2
     182.  00:8000  (00:F01C)           PT3_Delay:		#1
     183.  00:8000  (00:F01D)           PT3_AddToEn:	#1
     184.  00:8000  (00:F01E)           PT3_Env_Del:	#1
     185.  00:8000  (00:F01F)           PT3_ESldAdd:	#2
     186.  00:8000  (00:F021)           PT3_NTL3:		#2	; AND A / NOP (note table creator)
     187.  00:8000                      
     188.  00:8000  (00:F023)           VARS:			#0
     189.  00:8000                      
     190.  00:8000  (00:F023)           ChanA:			#29			;CHNPRM_Size
     191.  00:8000  (00:F040)           ChanB:			#29			;CHNPRM_Size
     192.  00:8000  (00:F05D)           ChanC:			#29			;CHNPRM_Size
     193.  00:8000                      
     194.  00:8000                      ;GlobalVars
     195.  00:8000  (00:F07A)           DelyCnt:		#1
     196.  00:8000  (00:F07B)           CurESld:		#2
     197.  00:8000  (00:F07D)           CurEDel:		#1
     198.  00:8000  (00:F07E)           Ns_Base_AddToNs:	#0
     199.  00:8000  (00:F07E)           Ns_Base:		#1
     200.  00:8000  (00:F07F)           AddToNs:		#1
     201.  00:8000                      
     202.  00:8000  (00:F080)           NT_:			#192	; Puntero a/tabla de frecuencias
     203.  00:8000                      
     204.  00:8000  (00:F140)           AYREGS:			#0
     205.  00:8000  (00:F140)           VT_:			#14
     206.  00:8000  (00:F14E)           EnvBase:		#2
     207.  00:8000  (00:F150)           VAR0END:		#0
     208.  00:8000                      
     209.  00:8000  (00:F150)           T1_:			#0		
     210.  00:8000  (00:F150)           T_NEW_1:		#0
     211.  00:8000  (00:F150)           T_OLD_1:		#24
     212.  00:8000  (00:F168)           T_OLD_2:		#24
     213.  00:8000  (00:F180)           T_NEW_3:		#0
     214.  00:8000  (00:F180)           T_OLD_3:		#2
     215.  00:8000  (00:F182)           T_OLD_0:		#0
     216.  00:8000  (00:F182)           T_NEW_0:		#24
     217.  00:8000  (00:F19A)           T_NEW_2:		#166
     218.  00:8000                      ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;PT3 REPLAYER END
     219.  00:8000                      
     220.  00:8000                      ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ayFX REPLAYER 
     221.  00:8000  (00:F240)           ayFX_MODE:		#1			; ayFX mode
     222.  00:8000  (00:F241)           ayFX_BANK:		#2			; Current ayFX Bank
     223.  00:8000  (00:F243)           ayFX_PRIORITY:	#1			; Current ayFX stream priotity
     224.  00:8000  (00:F244)           ayFX_POINTER:	#2			; Pointer to the current ayFX stream
     225.  00:8000  (00:F246)           ayFX_TONE:		#2			; Current tone of the ayFX stream
     226.  00:8000  (00:F248)           ayFX_NOISE:		#1			; Current noise of the ayFX stream
     227.  00:8000  (00:F249)           ayFX_VOLUME:	#1			; Current volume of the ayFX stream
     228.  00:8000  (00:F24A)           ayFX_CHANNEL:	#1			; PSG channel to play the ayFX stream
     229.  00:8000                      
     230.  00:8000                      	;IF (AYFXRELATIVE == 1 ) 
     231.  00:8000                      ;ayFX_VT:	ds	2			; ayFX relative volume table pointer
     232.  00:8000                      	;ENDIF
     233.  00:8000                      ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ayFX REPLAYER END
     234.  00:8000                      
     235.  00:8000                      
     236.  00:8000                      
       7   00:8000                      
       8   00:8000                      ;;=====================================================
       9   00:8000                      ;;DEFINICIÓN DE CABECERA DE ARCHIVO BIN
      10   00:8000                      ;;=====================================================		
      11   00:8000                      	include "cabecerabin.asm"
       1.  00:8000                      ;;=====================================================
       2.  00:8000                      ;; FICHERO cabecera.asm
       3.  00:8000                      ;;=====================================================
       4.  00:8000                      
       5.  00:8000                      ;;CABECERA FICHERO BIN
       6.  00:8000  FE                  	DB	#FE
       7.  00:8001  00 80               	DW	START
       8.  00:8003  44 B7               	DW	END
       9.  00:8005  00 80               	DW	START
      10.  00:8007                      
      11.  00:8007                      ;;INICIO CÓDIGO PROGRAMA	
      12.  00:8007                      	ORG	#8000
      13.  00:8000                      	
      12   00:8000                      	
      13   00:8000                      START:	
      14   00:8000                      	;inicializa pantalla y entonrno
      15   00:8000  CD EA 80            	CALL	sub_preparapantalla			;screen 2,2 sin click al pulsar tecla y color 16,1,1
      16   00:8003                      	
      17   00:8003                      	;inicializa variables para parametrizar funciones y que lo que se muestre sea variable (nº vidas, mapa, puertas, pantalla, etc...)
      18   00:8003  CD 33 80            	CALL	inicializa_variables_pruebas
      19   00:8006                      	
      20   00:8006                      	;inicializa los niveles por partida
      21   00:8006  CD 56 80            	CALL	inicializa_niveles			;no es necesario parametrizarlo según el nivel del usuario ya que se cargan todos
      22   00:8009                      	
      23   00:8009                      	;pinta la pantalla (la primera o algunas especiales se pintan completamente)
      24   00:8009  CD 0B 81            	CALL	pinta_pantalla_completa 
      25   00:800C                      	
      26   00:800C                      	;carga sprites en memoria (SE HA RETRASADO HASTA PARAMETRIZAR LA CARGA DE PANTALLAS)
      27   00:800C  CD 91 84            	CALL 	carga_patrones_sprites_nivel
      28   00:800F                      	
      29   00:800F                      	;funciones que modificarian el marcador si se produce un evento cuando toque y cuando se pinta la pantalla ya se mira
      30   00:800F                      	;una variable para ver si el array hay que actualizarlo en pantalla o no
      31   00:800F  CD 4B 82            	CALL	pinta_vidas
      32   00:8012  CD 5A 82            	CALL 	pinta_reliquias
      33   00:8015  CD 69 82            	CALL	pinta_nivel
      34   00:8018  CD E9 82            	CALL	borra_mapa
      35   00:801B  CD 7C 83            	CALL	pinta_puertas
      36   00:801E                      
      37   00:801E  3E 13               	LD		 A, TILEPROTAM
      38   00:8020  32 61 A4            	LD		(elemento_pintar_mapa), A
      39   00:8023                      ;	CALL	posiciona_en_mapa		;se le pasa elemento_pintar_mapa (tile del prota) está el prota y prota.poxx y posy
      40   00:8023                      	
      41   00:8023                      	;incializacion de replayer con interrupciones
      42   00:8023                      ;	CALL	inicializa_replayer_efectos_interrupciones
      43   00:8023                      	
      44   00:8023                      	
      45   00:8023  CD 72 84            	CALL	pinta_obj_ayuda
      46   00:8026                      	
      47   00:8026                      loop_principal:
      48   00:8026  76                  	HALT							;espera VBLANK y sincroniza
      49   00:8027                      	
      50   00:8027  CD A9 84            	CALL	render_sprites			;actualiza array de sprites y los pinta en pantalla
      51   00:802A                      	
      52   00:802A  CD DA 82            	CALL	pinta_energia			;pinta la energia en pantalla
      53   00:802D                      
      54   00:802D  CD EC 84            	CALL	check_player			;MIRA EL CONTROL Y APLICA LA LOGICA DE MOVIMIENTO DEL PROTAGONISTA
      55   00:8030                      	
      56   00:8030  C3 26 80            	JP		loop_principal
      57   00:8033                      fin_programa_principal:
      58   00:8033                      	;RET
      59   00:8033                      
      60   00:8033                      
      61   00:8033                      
      62   00:8033                      
      63   00:8033                      
      64   00:8033                      ;;*******************************************************************
      65   00:8033                      ; sólo para hacer pruebas y pintar la parte de las vidas y demás
      66   00:8033                      inicializa_variables_pruebas:
      67   00:8033  3E 04               	LD		 A, 4
      68   00:8035  32 3D A4            	LD		(prota_vidas),A
      69   00:8038                      
      70   00:8038  3E 04               	LD		 A, 4
      71   00:803A  32 3E A4            	LD		(prota_reliquias), A
      72   00:803D                      
      73   00:803D  3E 64               	LD		 A, 100
      74   00:803F  32 41 A4            	LD		(prota_energia), A
      75   00:8042                      
      76   00:8042                      	;ubico al prota dentro del nivel para obtener luego las habitaciones y enemigos que aparecerán
      77   00:8042                      	;será igual la posición inicial en todos los niveles
      78   00:8042                      	
      79   00:8042  3E 04               	LD		 A, 4				;los niveles (matrices) son 7 del 0 al 6
      80   00:8044  32 3C A4            	LD		(prota_nivel), A	;nivel empieza en 0 para usar las posiciones ascii
      81   00:8047                      
      82   00:8047  3E 06               	LD		 A, 6				;los subniveles (filas) son 7 del 0 al 6
      83   00:8049  32 40 A4            	LD		(prota_pos_mapy), A	;pos Y dentro del nivel (se empieza en 0)
      84   00:804C                      
      85   00:804C  3E 02               	LD		 A, 2				;columnas 7: del 0 al 6
      86   00:804E  32 3F A4            	LD		(prota_pos_mapx), A	;pos X dentro del nivel (se empieza en 0)
      87   00:8051                      	
      88   00:8051  AF                  	XOR		 A
      89   00:8052  32 31 A4            	LD		(prota.cadencia), A
      90   00:8055                      fin_inicializa_variables_pruebas:
      91   00:8055  C9                  	RET
      92   00:8056                      ;;************************************************************************
      93   00:8056                      
      94   00:8056                      
      95   00:8056                      
      96   00:8056                      
      97   00:8056                      
      98   00:8056                      
      99   00:8056                      
     100   00:8056                      
     101   00:8056                      
     102   00:8056                      ;;=====================================================
     103   00:8056                      ;;DEFINICIÓN DE SUBRUTINAS
     104   00:8056                      ;;=====================================================
     105   00:8056                      	include "subrutinas.asm"
       1.  00:8056                      ;;=====================================================
       2.  00:8056                      ;;DEFINICIÓN DE SUBRUTINAS
       3.  00:8056                      ;;=====================================================	
       4.  00:8056                      
       5.  00:8056                      
       6.  00:8056                      ;;=====================================================
       7.  00:8056                      ;;INICIALIZA_NIVELES
       8.  00:8056                      ;;=====================================================	
       9.  00:8056                      ; función: 	copia la plantilla de niveles (habitaciones_plantilla) en los niveles de trabajo para el juego (habitaciones_juego)
      10.  00:8056                      ; entrada: 	habitaciones_plantilla
      11.  00:8056                      ; salida: 	habitaciones_juego
      12.  00:8056                      ; toca: 	A
      13.  00:8056                      inicializa_niveles:
      14.  00:8056  D9                  	EXX
      15.  00:8057                      	
      16.  00:8057  AF                  	XOR		 A
      17.  00:8058  06 31               	LD		 B, 49				;7 filas por 7 niveles menos el primero que lo hago diera del buble porque se suma 14 y no 16
      18.  00:805A  21 13 A1            	LD		HL, habitaciones_juego;tambíen puntero al primer nivel
      19.  00:805D  11 0E 00            	LD		DE,14
      20.  00:8060  19                  	ADD		HL,DE
      21.  00:8061  77                  	LD		(HL),A
      22.  00:8062  11 10 00            	LD		DE,16				;desde las col 15 de una fila a la siguiente
      23.  00:8065                      .bucle_borra_hab:
      24.  00:8065  19                  	ADD		HL,DE
      25.  00:8066  77                  	LD		(HL),A
      26.  00:8067  10 FC               	DJNZ	.bucle_borra_hab
      27.  00:8069                      	
      28.  00:8069  D9                  	EXX
      29.  00:806A                      fin_iniciliza_niveles:
      30.  00:806A  C9                  	RET
      31.  00:806B                      
      32.  00:806B                      
      33.  00:806B                      ;;=====================================================
      34.  00:806B                      ;;ACTUALIZA_MARCADOR_VIDAS
      35.  00:806B                      ;;=====================================================	
      36.  00:806B                      ; función:  actualiza el buffer de vidas
      37.  00:806B                      ; entrada: 	prota_vidas
      38.  00:806B                      ; salida: 	array_aux_vidas
      39.  00:806B                      ; toca:		A,B,HL
      40.  00:806B                      actualiza_marcador_vidas:
      41.  00:806B                      	;para no andar restando pongo todos los huecos a negro y luego en otro bucle las caras
      42.  00:806B                      	;1-pinto todo en blanco
      43.  00:806B  21 42 A4            	LD		HL,array_aux_vidas
      44.  00:806E  06 08               	LD		 B,NMAXVIDREL
      45.  00:8070                      loop_marcador_caras_negro:	;asignar espacios en negro
      46.  00:8070  36 00               	LD		(HL),0			;0 posición mapa tiles para nada (es transparente pero el fondo es negro)
      47.  00:8072  23                  	INC		HL
      48.  00:8073  10 FB               	DJNZ	loop_marcador_caras_negro
      49.  00:8075                      fin_loop_marcador_caras_negro:
      50.  00:8075                      	;2-pinto las caras según el n de vidas
      51.  00:8075  3A 3D A4            	LD		 A, (prota_vidas)
      52.  00:8078  B7                  	OR		 A
      53.  00:8079  C8                  	RET 	 Z
      54.  00:807A  47                  	LD		 B, A
      55.  00:807B  21 42 A4            	LD		HL, array_aux_vidas
      56.  00:807E                      loop_marcador_caras: ;asignar caras
      57.  00:807E  36 0D               	LD		(HL), POSCARAMAP	;13 posición mapa tiles para cara
      58.  00:8080  23                  	INC		HL
      59.  00:8081  10 FB               	DJNZ	loop_marcador_caras
      60.  00:8083                      fin_loop_marcador_caras:
      61.  00:8083                      
      62.  00:8083                      fin_actualiza_marcador_vidas:
      63.  00:8083  C9                  	RET
      64.  00:8084                      
      65.  00:8084                      
      66.  00:8084                      ;;=====================================================
      67.  00:8084                      ;;ACTUALIZA_BUFFER_RELIQUIAS
      68.  00:8084                      ;;=====================================================	
      69.  00:8084                      ; función: 	actualiza buffer de reliquias
      70.  00:8084                      ; entrada: 	prota_reliquias
      71.  00:8084                      ; salida: 	array_aux_reliquias
      72.  00:8084                      ; toca:		A,B,HL
      73.  00:8084                      actualiza_buffer_reliquias:	
      74.  00:8084                      	;para no andar restando pongo todos los huecos a negro y luego en otro bucle las reliquias
      75.  00:8084                      	;1-pinto todo en blanco
      76.  00:8084  21 4A A4            	LD		HL, array_aux_reliquias
      77.  00:8087  06 08               	LD		 B, NMAXVIDREL
      78.  00:8089  AF                  	XOR		 A
      79.  00:808A                      loop_buffer_reliquias_negro:	;asignar espacios en negro
      80.  00:808A  77                  	LD		(HL), A			;0 posición mapa tiles para nada (es transparente pero el fondo es negro)
      81.  00:808B  23                  	INC		HL
      82.  00:808C  10 FC               	DJNZ	loop_buffer_reliquias_negro
      83.  00:808E                      
      84.  00:808E                      	;2-pinto las cruces según el n de reliquias
      85.  00:808E  21 4A A4            	LD		HL, array_aux_reliquias
      86.  00:8091  3A 3E A4            	LD		 A, (prota_reliquias)
      87.  00:8094  B7                  	OR		 A
      88.  00:8095  C8                  	RET		 Z
      89.  00:8096  47                  	LD		 B, A
      90.  00:8097                      loop_buffer_reliquias: ;asignar reliquias
      91.  00:8097  36 11               	LD		(HL), POSRELIMAP	;17 posición mapa tiles para reliquia
      92.  00:8099  23                  	INC		HL
      93.  00:809A  10 FB               	DJNZ	loop_buffer_reliquias
      94.  00:809C                      fin_actualiza_buffer_reliquias:
      95.  00:809C  C9                  	RET
      96.  00:809D                      
      97.  00:809D                      
      98.  00:809D                      
      99.  00:809D                      ;;=====================================================
     100.  00:809D                      ;;LOCALIZA_INFO_HABITACION
     101.  00:809D                      ;;=====================================================	
     102.  00:809D                      ; función: 	busca las puertas que hay que pintar egún la posición del usuario y las pone en habitacion_actual
     103.  00:809D                      ; entrada: 	prota.pos_mapy, prota.pos_mapx, prota_nivel habitaciones_juego
     104.  00:809D                      ; salida: 	habitacion_actual
     105.  00:809D                      ; toca:		todo
     106.  00:809D                      ;ejemplo: nivel 4, posy 5 y posx 3
     107.  00:809D                      ;3 + 5 x 8 + 4 x 49
     108.  00:809D                      localiza_info_habitacion:
     109.  00:809D                      ;primera posición: me coloco en la columna correcta
     110.  00:809D  21 13 A1            	LD		HL, habitaciones_juego
     111.  00:80A0                      .situo_columna:	
     112.  00:80A0  3A 3F A4            	LD		 A, (prota_pos_mapx)
     113.  00:80A3  CB 27               	SLA		 A				;multiplico por dos ya que cada habitación va de dos en dos bytes
     114.  00:80A5  06 00               	LD		 B, 0
     115.  00:80A7  4F                  	LD		 C, A
     116.  00:80A8                      
     117.  00:80A8  09                  	ADD 	HL, BC			;sumo a la posición 0 la columnax2 en la que situarme
     118.  00:80A9                      	
     119.  00:80A9                      .situo_fila:
     120.  00:80A9  3A 40 A4            	LD		A, (prota_pos_mapy)
     121.  00:80AC  B7                  	OR	 	A
     122.  00:80AD  CA BA 80            	JP		Z, .situo_nivel	;si la fila es 0 no es necesario seguir operando en fila
     123.  00:80B0                      	
     124.  00:80B0  47                  	LD		B, A
     125.  00:80B1  AF                  	XOR		A
     126.  00:80B2                      .loop_suma_fila:
     127.  00:80B2  C6 10               	ADD		16				;cada fila tiene 16 bytes
     128.  00:80B4  10 FC               	DJNZ	.loop_suma_fila
     129.  00:80B6                      	
     130.  00:80B6  06 00               	LD		 B, 0
     131.  00:80B8  4F                  	LD		 C, A
     132.  00:80B9                      
     133.  00:80B9  09                  	ADD 	HL, BC			;sumo a la columna 16 x filas para situarme en la fila correcta
     134.  00:80BA                      
     135.  00:80BA                      .situo_nivel:
     136.  00:80BA  3A 3C A4            	LD		 A, (prota_nivel)
     137.  00:80BD  B7                  	OR	 	 A
     138.  00:80BE  CA CE 80            	JP		 Z, .actualiza_valiable_habitacion	;si el nivel es 0 al pasar por las anterirores ya estoy situado actualizo la variable y termino
     139.  00:80C1                      	
     140.  00:80C1  E5                  	PUSH	HL				;guardo el resultado intermedio
     141.  00:80C2                      	
     142.  00:80C2  47                  	LD		 B, A			;preparo la varible del bucle
     143.  00:80C3  11 70 00            	LD		DE, 112			;112 = 16x42 son los bytes de cada matriz-nivel
     144.  00:80C6  21 00 00            	LD		HL, 0
     145.  00:80C9                      .loop_suma_nivel:
     146.  00:80C9  19                  	ADD		HL,DE
     147.  00:80CA  10 FD               	DJNZ	.loop_suma_nivel
     148.  00:80CC                      	
     149.  00:80CC  D1                  	POP		DE				;devuelvo el resultado intermedio en DE que ya no lo necesito
     150.  00:80CD                      	
     151.  00:80CD  19                  	ADD		HL,DE			;sumo el resultdo del nivel al resultado intermedio anterior
     152.  00:80CE                      
     153.  00:80CE                      .actualiza_valiable_habitacion
     154.  00:80CE  7E                  	LD		 A, (HL)
     155.  00:80CF  32 11 A1            	LD		(habitacion_actual), A
     156.  00:80D2                      fin_localiza_info_habitacion:
     157.  00:80D2  C9                  	RET
     158.  00:80D3                      
     159.  00:80D3                      
     160.  00:80D3                      
     161.  00:80D3                      
     106   00:80D3                      	
     107   00:80D3                      	include "subr_general.asm"
       1.  00:80D3                      ;;=====================================================
       2.  00:80D3                      ;;DEFINICIÓN DE SUBRUTINAS GENERALES USABLES PARA CUALQUIER PROYECTO
       3.  00:80D3                      ;;=====================================================	
       4.  00:80D3                      
       5.  00:80D3                      ;;=====================================================
       6.  00:80D3                      ;;SUMA_A_BC
       7.  00:80D3                      ;;=====================================================	
       8.  00:80D3                      ; función: 	suma A a BC por si da más de 255
       9.  00:80D3                      ; entrada: 	A, BC
      10.  00:80D3                      ; salida: 	A + BC
      11.  00:80D3                      ; toca:		A, BC
      12.  00:80D3                      suma_A_BC:
      13.  00:80D3  81                  	ADD		 C
      14.  00:80D4  4F                  	LD		 C, A
      15.  00:80D5  88                  	ADC		 B
      16.  00:80D6  91                  	SUB		 C
      17.  00:80D7  47                  	LD		 B, A
      18.  00:80D8                      fin_suma_A_BC:
      19.  00:80D8  C9                  	RET
     108   00:80D9                      	
     109   00:80D9                      	include "subr_pintapantalla.asm"
       1.  00:80D9                      ;;=====================================================
       2.  00:80D9                      ;;DEFINICIÓN DE SUBRUTINAS
       3.  00:80D9                      ;;=====================================================	
       4.  00:80D9                      ;relacionadas con pintado en pantalla (y no sprites)
       5.  00:80D9                      
       6.  00:80D9                      
       7.  00:80D9                      ;;=====================================================
       8.  00:80D9                      ;;COLOR_PANTALLA
       9.  00:80D9                      ;;=====================================================	
      10.  00:80D9                      ; función: 	el equivalente en basic a color 15,1,1
      11.  00:80D9                      ; entrada: 	HL	que apunta a un array de bytes con 3 bytes FORCLR, BAKCLR y BDRCLR
      12.  00:80D9                      ; salida: 	-
      13.  00:80D9                      ; toca: 	todo
      14.  00:80D9                      color_pantalla:
      15.  00:80D9  7E                  	LD		 A, (HL)			;FORCLR 
      16.  00:80DA  32 E9 F3            	LD 		(FORCLR),A
      17.  00:80DD  23                  	INC		HL
      18.  00:80DE                      	
      19.  00:80DE  7E                  	LD		 A, (HL)			;BAKCLR
      20.  00:80DF  32 EA F3            	LD 		(BAKCLR),A
      21.  00:80E2  23                  	INC		HL
      22.  00:80E3                      	
      23.  00:80E3  7E                  	LD		 A, (HL)
      24.  00:80E4  32 EB F3            	LD 		(BDRCLR),A			;BDRCLR
      25.  00:80E7  C3 62 00            	JP		CHGCLR 
      26.  00:80EA                      fin_color_pantalla:
      27.  00:80EA                      
      28.  00:80EA                      
      29.  00:80EA                      ;;=====================================================
      30.  00:80EA                      ;;PREPARAPANTALLA
      31.  00:80EA                      ;;=====================================================	
      32.  00:80EA                      ; función: elimina clic cuando se pulsa tecla, cls, screen 2,2
      33.  00:80EA                      ; entrada: -
      34.  00:80EA                      ; salida: -
      35.  00:80EA                      ; toca: si no son todos los regristros, casi todos
      36.  00:80EA                      sub_preparapantalla:
      37.  00:80EA                      	;toca A y Z
      38.  00:80EA                      elimina_clic;
      39.  00:80EA  AF                  	XOR		 A
      40.  00:80EB  32 DB F3            	LD		(CLIKSW),A
      41.  00:80EE                      fin_elimina_clic:
      42.  00:80EE                      
      43.  00:80EE                      	;toca A
      44.  00:80EE                      limpia_pantalla:
      45.  00:80EE  AF                  	XOR		 A
      46.  00:80EF  CD C3 00            	CALL 	CLS
      47.  00:80F2                      fin_limpia_pantalla:
      48.  00:80F2                      
      49.  00:80F2                      	;toca A y direcciones #F3E9/#F3EA/#F3EB, poner en HL array con 3 valores
      50.  00:80F2  21 23 A4            	LD		HL, color_base
      51.  00:80F5  CD D9 80            	CALL	color_pantalla
      52.  00:80F8                      	
      53.  00:80F8                      	;cambiamos a SCREEN 2,2 del BASIC
      54.  00:80F8                      	;toca A
      55.  00:80F8                      screen2:
      56.  00:80F8  3E 02               	LD		 A, 2
      57.  00:80FA  CD 5F 00            	CALL	CHGMOD			;selecciona screen 2
      58.  00:80FD                      sprites_16_16:
      59.  00:80FD  3A E0 F3            	LD		 A, (RG1SAV)
      60.  00:8100  F6 02               	OR		00000010b		;fuerza sprites de 16x16
      61.  00:8102  32 E0 F3            	LD		(RG1SAV), A		;no lo guardamos en la copia de variables del sistema
      62.  00:8105  47                  	LD		 B, A
      63.  00:8106  0E 01               	LD		 C, 1
      64.  00:8108  C3 47 00            	JP		WRTVDP			;opción alternativa de escribir las tres lineas siguientes
      65.  00:810B                      fin_sub_preparapantalla:
      66.  00:810B                      	
      67.  00:810B                      
      68.  00:810B                      ;;=====================================================
      69.  00:810B                      ;;PINTA_PANTALLA_COMPLETA
      70.  00:810B                      ;;=====================================================	
      71.  00:810B                      ; función: pinta el escenario, las 3 partes
      72.  00:810B                      ; entrada: -
      73.  00:810B                      ; salida: -
      74.  00:810B                      ; toca: si no son todos los regristros, casi todos
      75.  00:810B                      pinta_pantalla_completa:
      76.  00:810B  CD 12 81            	CALL 	pinta_parte_superior_pantalla
      77.  00:810E                      	
      78.  00:810E  CD 30 82            	CALL 	pinta_parte_inferior_pantalla	
      79.  00:8111                      fin_pinta_pantalla_completa:
      80.  00:8111  C9                  	RET
      81.  00:8112                      
      82.  00:8112                      
      83.  00:8112                      ;;=====================================================
      84.  00:8112                      ;;PINTA_PARTE_SUPERIOR_PANTALLA
      85.  00:8112                      ;;=====================================================	
      86.  00:8112                      ; función: pinta el escenario, los dos bancos superiores
      87.  00:8112                      ; entrada: -
      88.  00:8112                      ; salida: -
      89.  00:8112                      ; toca: si no son todos los regristros, casi todos
      90.  00:8112                      pinta_parte_superior_pantalla:
      91.  00:8112  3A 3C A4            	LD		 A, (prota_nivel)
      92.  00:8115  CA 43 81            	JP		 Z, .carga_nivel_0
      93.  00:8118  3D                  	DEC		 A
      94.  00:8119  3A 3C A4            	LD		 A, (prota_nivel)
      95.  00:811C  CA 5E 81            	JP		 Z, .carga_nivel_1
      96.  00:811F  3D                  	DEC		 A
      97.  00:8120  3A 3C A4            	LD		 A, (prota_nivel)
      98.  00:8123  CA 79 81            	JP		 Z, .carga_nivel_2
      99.  00:8126  3D                  	DEC		 A
     100.  00:8127  3A 3C A4            	LD		 A, (prota_nivel)
     101.  00:812A  CA 94 81            	JP		 Z, .carga_nivel_3
     102.  00:812D  3D                  	DEC		 A
     103.  00:812E  3A 3C A4            	LD		 A, (prota_nivel)
     104.  00:8131  CA AF 81            	JP		 Z, .carga_nivel_4
     105.  00:8134  3D                  	DEC		 A
     106.  00:8135  3A 3C A4            	LD		 A, (prota_nivel)
     107.  00:8138  CA CA 81            	JP		 Z, .carga_nivel_5
     108.  00:813B  3D                  	DEC		 A
     109.  00:813C  3A 3C A4            	LD		 A, (prota_nivel)
     110.  00:813F  CA E5 81            	JP		 Z, .carga_nivel_6
     111.  00:8142  3D                  	DEC		 A
     112.  00:8143                      	
     113.  00:8143                      .carga_nivel_0:
     114.  00:8143  21 0A A6            	LD		HL, tiles_patrones_nivel0
     115.  00:8146  22 2A 82            	LD		(tiles_patrones), HL
     116.  00:8149  21 BF A7            	LD		HL, tiles_color_nivel0
     117.  00:814C  22 2C 82            	LD		(tiles_colores), HL
     118.  00:814F  21 0A A6            	LD		HL, tiles_patrones_nivel0
     119.  00:8152  22 2A 82            	LD		(tiles_patrones), HL
     120.  00:8155  21 06 A8            	LD		HL, tiles_mapa_nivel0
     121.  00:8158  22 2E 82            	LD		(tiles_mapa), HL
     122.  00:815B  C3 FD 81            	JP		.fin_carga_niveles
     123.  00:815E                      
     124.  00:815E                      .carga_nivel_1:
     125.  00:815E  21 3B A8            	LD		HL, tiles_patrones_nivel1
     126.  00:8161  22 2A 82            	LD		(tiles_patrones), HL
     127.  00:8164  21 F0 A9            	LD		HL, tiles_color_nivel1
     128.  00:8167  22 2C 82            	LD		(tiles_colores), HL
     129.  00:816A  21 3B A8            	LD		HL, tiles_patrones_nivel1
     130.  00:816D  22 2A 82            	LD		(tiles_patrones), HL
     131.  00:8170  21 37 AA            	LD		HL, tiles_mapa_nivel1
     132.  00:8173  22 2E 82            	LD		(tiles_mapa), HL
     133.  00:8176  C3 FD 81            	JP		.fin_carga_niveles
     134.  00:8179                      	
     135.  00:8179                      .carga_nivel_2:
     136.  00:8179  21 6C AA            	LD		HL, tiles_patrones_nivel2
     137.  00:817C  22 2A 82            	LD		(tiles_patrones), HL
     138.  00:817F  21 21 AC            	LD		HL, tiles_color_nivel2
     139.  00:8182  22 2C 82            	LD		(tiles_colores), HL
     140.  00:8185  21 6C AA            	LD		HL, tiles_patrones_nivel2
     141.  00:8188  22 2A 82            	LD		(tiles_patrones), HL
     142.  00:818B  21 68 AC            	LD		HL, tiles_mapa_nivel2
     143.  00:818E  22 2E 82            	LD		(tiles_mapa), HL
     144.  00:8191  C3 FD 81            	JP		.fin_carga_niveles
     145.  00:8194                      	
     146.  00:8194                      .carga_nivel_3:
     147.  00:8194  21 9D AC            	LD		HL, tiles_patrones_nivel3
     148.  00:8197  22 2A 82            	LD		(tiles_patrones), HL
     149.  00:819A  21 52 AE            	LD		HL, tiles_color_nivel3
     150.  00:819D  22 2C 82            	LD		(tiles_colores), HL
     151.  00:81A0  21 9D AC            	LD		HL, tiles_patrones_nivel3
     152.  00:81A3  22 2A 82            	LD		(tiles_patrones), HL
     153.  00:81A6  21 99 AE            	LD		HL, tiles_mapa_nivel3
     154.  00:81A9  22 2E 82            	LD		(tiles_mapa), HL
     155.  00:81AC  C3 FD 81            	JP		.fin_carga_niveles
     156.  00:81AF                      	
     157.  00:81AF                      .carga_nivel_4:
     158.  00:81AF  21 CE AE            	LD		HL, tiles_patrones_nivel4
     159.  00:81B2  22 2A 82            	LD		(tiles_patrones), HL
     160.  00:81B5  21 83 B0            	LD		HL, tiles_color_nivel4
     161.  00:81B8  22 2C 82            	LD		(tiles_colores), HL
     162.  00:81BB  21 CE AE            	LD		HL, tiles_patrones_nivel4
     163.  00:81BE  22 2A 82            	LD		(tiles_patrones), HL
     164.  00:81C1  21 CA B0            	LD		HL, tiles_mapa_nivel4
     165.  00:81C4  22 2E 82            	LD		(tiles_mapa), HL
     166.  00:81C7  C3 FD 81            	JP		.fin_carga_niveles
     167.  00:81CA                      	
     168.  00:81CA                      .carga_nivel_5:
     169.  00:81CA  21 FF B0            	LD		HL, tiles_patrones_nivel5
     170.  00:81CD  22 2A 82            	LD		(tiles_patrones), HL
     171.  00:81D0  21 B4 B2            	LD		HL, tiles_color_nivel5
     172.  00:81D3  22 2C 82            	LD		(tiles_colores), HL
     173.  00:81D6  21 FF B0            	LD		HL, tiles_patrones_nivel5
     174.  00:81D9  22 2A 82            	LD		(tiles_patrones), HL
     175.  00:81DC  21 FB B2            	LD		HL, tiles_mapa_nivel5
     176.  00:81DF  22 2E 82            	LD		(tiles_mapa), HL
     177.  00:81E2  C3 FD 81            	JP		.fin_carga_niveles
     178.  00:81E5                      	
     179.  00:81E5                      .carga_nivel_6:
     180.  00:81E5  21 30 B3            	LD		HL, tiles_patrones_nivel6
     181.  00:81E8  22 2A 82            	LD		(tiles_patrones), HL
     182.  00:81EB  21 E5 B4            	LD		HL, tiles_color_nivel6
     183.  00:81EE  22 2C 82            	LD		(tiles_colores), HL
     184.  00:81F1  21 30 B3            	LD		HL, tiles_patrones_nivel6
     185.  00:81F4  22 2A 82            	LD		(tiles_patrones), HL
     186.  00:81F7  21 2C B5            	LD		HL, tiles_mapa_nivel6
     187.  00:81FA  22 2E 82            	LD		(tiles_mapa), HL
     188.  00:81FD                      ;	JP		.fin_carga niveles			;no necesario
     189.  00:81FD                      .fin_carga_niveles:
     190.  00:81FD                      
     191.  00:81FD                      	;cargando banco 1
     192.  00:81FD                      	;cargamos los patrones
     193.  00:81FD  2A 2A 82            	LD		HL, (tiles_patrones)
     194.  00:8200  11 00 00            	LD		DE, CHRTBL
     195.  00:8203  CD B1 96            	CALL	depack_VRAM
     196.  00:8206                      	;cargamos los colores de los patrones
     197.  00:8206  2A 2C 82            	LD		HL, (tiles_colores)
     198.  00:8209  11 00 20            	LD		DE, CLRTBL
     199.  00:820C  CD B1 96            	CALL	depack_VRAM
     200.  00:820F                      	
     201.  00:820F                      	;cargando banco 2
     202.  00:820F                      	;cargamos los patrones
     203.  00:820F  2A 2A 82            	LD		HL, (tiles_patrones)
     204.  00:8212  11 00 08            	LD		DE, CHRTBL + #0800
     205.  00:8215  CD B1 96            	CALL	depack_VRAM	
     206.  00:8218                      	;cargamos los colores de los patrones
     207.  00:8218  2A 2C 82            	LD		HL, (tiles_colores)
     208.  00:821B  11 00 28            	LD		DE, CLRTBL + #0800
     209.  00:821E  CD B1 96            	CALL	depack_VRAM
     210.  00:8221                      	
     211.  00:8221                      	;cargamos mapa de pantalla banco 1 y 2
     212.  00:8221  2A 2E 82            	LD		HL, (tiles_mapa)
     213.  00:8224  11 00 18            	LD		DE, TILMAP
     214.  00:8227  C3 B1 96            	JP		depack_VRAM
     215.  00:822A                      fin_pinta_parte_superior_pantalla:
     216.  00:822A  00 00               tiles_patrones:		DW	0
     217.  00:822C  00 00               tiles_colores:		DW	0
     218.  00:822E  00 00               tiles_mapa:			DW	0
     219.  00:8230                      
     220.  00:8230                      
     221.  00:8230                      ;;=====================================================
     222.  00:8230                      ;;PINTA_PARTE_INFERIOR_PANTALLA
     223.  00:8230                      ;;=====================================================	
     224.  00:8230                      ; función: pinta la parte inferior del escenario que es común
     225.  00:8230                      ; entrada: -
     226.  00:8230                      ; salida: -
     227.  00:8230                      ; toca: si no son todos los regristros, casi todos
     228.  00:8230                      pinta_parte_inferior_pantalla:
     229.  00:8230                      	;cangando banco 3
     230.  00:8230                      	;cargamos los patrones
     231.  00:8230  21 61 B5            	LD		HL,tiles_patrones_marcador
     232.  00:8233  11 00 10            	LD		DE,CHRTBL + #1000
     233.  00:8236  CD B1 96            	CALL	depack_VRAM	
     234.  00:8239                      	;cargamos mapa de pantalla
     235.  00:8239  21 E2 B6            	LD		HL,tiles_mapa_marcador
     236.  00:823C  11 00 1A            	LD		DE,TILMAP + #0200
     237.  00:823F  CD B1 96            	CALL	depack_VRAM
     238.  00:8242                      	;cargamos los colores de los patrones
     239.  00:8242  21 AD B6            	LD		HL,tiles_color_marcador
     240.  00:8245  11 00 30            	LD		DE,CLRTBL + #1000
     241.  00:8248  C3 B1 96            	JP		depack_VRAM
     242.  00:824B                      fin_pinta_parte_inferior_pantalla:
     243.  00:824B                      
     244.  00:824B                      
     245.  00:824B                      
     246.  00:824B                      ;;=====================================================
     247.  00:824B                      ;;PINTA_VIDAS
     248.  00:824B                      ;;=====================================================	
     249.  00:824B                      ; función: 	actualiza el mapa de tiles para que en el próximo refresco se pinten y actualiza_vidas
     250.  00:824B                      ; entrada: 	array_aux_vidas
     251.  00:824B                      ; salida: 	actualiza_vidas_sn
     252.  00:824B                      ; toca:		todo
     253.  00:824B                      pinta_vidas:
     254.  00:824B  CD 6B 80            	CALL	actualiza_marcador_vidas
     255.  00:824E                      	
     256.  00:824E  21 42 A4            	LD		HL, array_aux_vidas
     257.  00:8251  11 48 1A            	LD		DE, TILMAP + POSVIDAS 	;inicio posición en el mapa de tiles de las vidas
     258.  00:8254  01 08 00            	LD		BC, NMAXVIDREL			;hay 8 posiciones para vidas/reliquias o espacios en negro si no tiene 8 vidas/reliquias
     259.  00:8257  C3 5C 00            	JP		LDIRVM
     260.  00:825A                      fin_pinta_vidas:
     261.  00:825A                      	
     262.  00:825A                      	
     263.  00:825A                      
     264.  00:825A                      ;;=====================================================
     265.  00:825A                      ;;PINTA_RELIQUIAS
     266.  00:825A                      ;;=====================================================	
     267.  00:825A                      ; función: 	actualiza el mapa de tiles para que en el próximo refresco se pinten y actualiza_reliquias
     268.  00:825A                      ; entrada: 	array_aux_reliquias
     269.  00:825A                      ; salida: 	-
     270.  00:825A                      ; toca:		todo
     271.  00:825A                      pinta_reliquias:
     272.  00:825A  CD 84 80            	CALL	actualiza_buffer_reliquias
     273.  00:825D                      	
     274.  00:825D  21 4A A4            	LD		HL, array_aux_reliquias
     275.  00:8260  11 C8 1A            	LD		DE, TILMAP + POSRELIQ 	;inicio posición en el mapa de tiles de las vidas
     276.  00:8263  01 08 00            	LD		BC, NMAXVIDREL			;hay 8 posiciones para vidas/reliquias o espacios en negro si no tiene 8 vidas/reliquias
     277.  00:8266  C3 5C 00            	JP		LDIRVM
     278.  00:8269                      fin_pinta_reliquias:
     279.  00:8269                      	
     280.  00:8269                      
     281.  00:8269                      
     282.  00:8269                      	
     283.  00:8269                      ;;=====================================================
     284.  00:8269                      ;;PINTA_NIVEL
     285.  00:8269                      ;;=====================================================	
     286.  00:8269                      ; función: 	actualiza el nivel en la parte de puntuación
     287.  00:8269                      ; entrada: 	prota_nivel
     288.  00:8269                      ; salida: 	-
     289.  00:8269                      ; toca:		HL,DE,BC
     290.  00:8269                      pinta_nivel:	
     291.  00:8269                      	;forma más avanzada sin llamada a la bios
     292.  00:8269  01 B4 1A            	LD		BC,TILMAP + POSNIVEL ;posición en el mapa de tiles del tile de nivel
     293.  00:826C  3A 3C A4            	LD		 A, (prota_nivel)	;seleccionando la pos del banco de tiles a poner en el mapa
     294.  00:826F  C6 30               	ADD		'0'	
     295.  00:8271  57                  	LD		 D, A
     296.  00:8272                      	
     297.  00:8272  C3 75 82            	JP		pinta_tile_suelto
     298.  00:8275                      fin_pinta_nivel:
     299.  00:8275                      
     300.  00:8275                      
     301.  00:8275                      
     302.  00:8275                      ;;=====================================================
     303.  00:8275                      ;;PINTA_TILE_SUELTO
     304.  00:8275                      ;;=====================================================	
     305.  00:8275                      ; función: 	pinta al tile que digamos en D, en la posición BC
     306.  00:8275                      ; entrada: 	BC (posición a pintar en el mapa),D (qué se va a pintar el esa posición)
     307.  00:8275                      ; salida: 	-
     308.  00:8275                      ; toca:		-
     309.  00:8275                      pinta_tile_suelto:
     310.  00:8275  DB 99               	IN		 A,(REGEST)		;leer registro de estado (recomendado)
     311.  00:8277  79                  	LD		 A,C			;primero byte bajo	
     312.  00:8278  D3 99               	OUT		(REGEST),A
     313.  00:827A  78                  	LD		 A,B			;después byte alto  ********************** preguntar a Fernando cómo que byte bajo es B
     314.  00:827B  F6 40               	OR		1000000b		;+64
     315.  00:827D  D3 99               	OUT		(REGEST),A
     316.  00:827F                      	
     317.  00:827F  7A                  	LD		A,D
     318.  00:8280  D3 98               	OUT		(REGESCVDP),A	;escribe A en VRAM en la posición indicada por los dos OUT anteriores
     319.  00:8282                      fin_pinta_tile_suelto:
     320.  00:8282  C9                  	RET
     321.  00:8283                      
     322.  00:8283                      
     323.  00:8283                      
     324.  00:8283                      
     325.  00:8283                      
     326.  00:8283                      ;;=====================================================
     327.  00:8283                      ;;MIRA_PINTA ENERGIA
     328.  00:8283                      ;;=====================================================	
     329.  00:8283                      ; función: 	actualiza el nivel de energia en la parte de puntuación
     330.  00:8283                      ; nota:		el cuadrado más bajo de ejergía siempre estará pintado... se obviará
     331.  00:8283                      ; entrada: 	prota.energia, array_aux_energia
     332.  00:8283                      ; salida: 	-
     333.  00:8283                      ; toca:		ninguno porque usa EXX
     334.  00:8283                      
     335.  00:8283                      ; nota importante... lo mismo interesa hacer esto con un array para comparar y un bucle
     336.  00:8283                      
     337.  00:8283                      mira_pinta_energia:
     338.  00:8283  D9                  	EXX							;por si acaso guardo el contenido de HL (si veo que no es necesario guardarlo lo quito) uso esto en vez de push por el nº ciclos
     339.  00:8284                      	
     340.  00:8284  3A 41 A4            	LD		 A,(prota_energia) 	;para las comparaciones A variable (actual) y B fijo (limites)
     341.  00:8287                      
     342.  00:8287  0E 00               	LD		 C,TILENEGRO		;para agilizar asignaciones en vez de un valor cte uso otro registro
     343.  00:8289                      pinta_ener:
     344.  00:8289                      pinta_ener_tile_8:
     345.  00:8289  21 59 A4            	LD		HL,ultimo_pos_array_aux_energia	;coloco puntero en array e iré decrementando
     346.  00:828C  06 D9               	LD		 B,TILEENERG8
     347.  00:828E  B8                  	CP		 B
     348.  00:828F  38 04               	JR		C,pinta_ener_tile_8_negro
     349.  00:8291  36 0E               	LD		(HL),TILEMAPVERD
     350.  00:8293  18 01               	JR		pinta_ener_tile_7
     351.  00:8295                      pinta_ener_tile_8_negro:
     352.  00:8295  71                  	LD		(HL),C
     353.  00:8296                      
     354.  00:8296                      pinta_ener_tile_7:
     355.  00:8296  2B                  	DEC		HL
     356.  00:8297  06 BA               	LD		 B,TILEENERG7
     357.  00:8299  B8                  	CP		 B
     358.  00:829A  38 04               	JR		C,pinta_ener_tile_7_negro
     359.  00:829C  36 0E               	LD		(HL),TILEMAPVERD
     360.  00:829E  18 01               	JR		pinta_ener_tile_6
     361.  00:82A0                      pinta_ener_tile_7_negro:
     362.  00:82A0  71                  	LD		(HL),C
     363.  00:82A1                      
     364.  00:82A1                      pinta_ener_tile_6:
     365.  00:82A1  2B                  	DEC		HL
     366.  00:82A2  06 9B               	LD		 B,TILEENERG6
     367.  00:82A4  B8                  	CP		 B
     368.  00:82A5  38 04               	JR		C,pinta_ener_tile_6_negro
     369.  00:82A7  36 0E               	LD		(HL),14
     370.  00:82A9  18 01               	JR		pinta_ener_tile_5
     371.  00:82AB                      pinta_ener_tile_6_negro:
     372.  00:82AB  71                  	LD		(HL),C
     373.  00:82AC                      
     374.  00:82AC                      pinta_ener_tile_5:
     375.  00:82AC  2B                  	DEC		HL
     376.  00:82AD  06 7C               	LD		 B,TILEENERG5
     377.  00:82AF  B8                  	CP		 B
     378.  00:82B0  38 04               	JR		C,pinta_ener_tile_5_negro
     379.  00:82B2  36 0E               	LD		(HL),TILEMAPVERD
     380.  00:82B4  18 01               	JR		pinta_ener_tile_4
     381.  00:82B6                      pinta_ener_tile_5_negro:
     382.  00:82B6  71                  	LD		(HL),C
     383.  00:82B7                      
     384.  00:82B7                      pinta_ener_tile_4:
     385.  00:82B7  2B                  	DEC		HL
     386.  00:82B8  06 5D               	LD		 B,TILEENERG4
     387.  00:82BA  B8                  	CP		 B
     388.  00:82BB  38 04               	JR		C,pinta_ener_tile_4_negro
     389.  00:82BD  36 0F               	LD		(HL),TILEMAPAMAR
     390.  00:82BF  18 01               	JR		pinta_ener_tile_3
     391.  00:82C1                      pinta_ener_tile_4_negro:
     392.  00:82C1  71                  	LD		(HL),C
     393.  00:82C2                      	
     394.  00:82C2                      pinta_ener_tile_3:
     395.  00:82C2  2B                  	DEC		HL
     396.  00:82C3  06 3E               	LD		 B,TILEENERG3
     397.  00:82C5  B8                  	CP		 B
     398.  00:82C6  38 04               	JR		C,pinta_ener_tile_3_negro
     399.  00:82C8  36 0F               	LD		(HL),TILEMAPAMAR
     400.  00:82CA  18 01               	JR		pinta_ener_tile_2
     401.  00:82CC                      pinta_ener_tile_3_negro:
     402.  00:82CC  71                  	LD		(HL),C
     403.  00:82CD                      
     404.  00:82CD                      pinta_ener_tile_2:
     405.  00:82CD  2B                  	DEC		HL
     406.  00:82CE  06 1F               	LD		 B,TILEENERG2
     407.  00:82D0  B8                  	CP		 B
     408.  00:82D1  38 04               	JR		C,pinta_ener_tile_2_negro
     409.  00:82D3  36 10               	LD		(HL),TILEMAPROJO
     410.  00:82D5  18 01               	JR		fin_mira_pinta_energia		;siempre estará pintado el cuadro mínimo
     411.  00:82D7                      pinta_ener_tile_2_negro:
     412.  00:82D7  71                  	LD		(HL),C
     413.  00:82D8                      
     414.  00:82D8                      fin_mira_pinta_energia:
     415.  00:82D8  D9                  	EXX
     416.  00:82D9  C9                  	RET
     417.  00:82DA                      
     418.  00:82DA                      
     419.  00:82DA                      ;;=====================================================
     420.  00:82DA                      ;;PINTA_ENERGIA
     421.  00:82DA                      ;;=====================================================	
     422.  00:82DA                      ; función: 	actualiza el mapa de tiles para que en el próximo refresco se pinte la barra de energia actual
     423.  00:82DA                      ; entrada: 	array_aux_energia
     424.  00:82DA                      ; toca:		todo
     425.  00:82DA                      pinta_energia:
     426.  00:82DA  CD 83 82            	CALL	mira_pinta_energia
     427.  00:82DD                      	
     428.  00:82DD  21 52 A4            	LD		HL, array_aux_energia
     429.  00:82E0  11 88 1A            	LD		DE, TILMAP + POSENERG 	;inicio posición en el mapa de tiles de las vidas
     430.  00:82E3  01 08 00            	LD		BC, NMAXVIDREL			;hay 8 posiciones para vidas/reliquias o espacios en negro si no tiene 8 vidas/reliquias
     431.  00:82E6  C3 5C 00            	JP		LDIRVM
     432.  00:82E9                      fin_pinta_energia:
     433.  00:82E9                      
     434.  00:82E9                      
     435.  00:82E9                      
     436.  00:82E9                      ;;=====================================================
     437.  00:82E9                      ;;BORRA_MAPA
     438.  00:82E9                      ;;=====================================================	
     439.  00:82E9                      ; función: 	pone todas las habitaciones del mapa a negro (los tiles del mapa los rellena con un array a 0 - caracter en negro)
     440.  00:82E9                      ; entrada: 	array_aux_mapa_limpiar
     441.  00:82E9                      ; salida: 	-
     442.  00:82E9                      ; toca:		AF
     443.  00:82E9                      borra_mapa:
     444.  00:82E9  D9                  	EXX
     445.  00:82EA                      	
     446.  00:82EA  21 5A A4            	LD		HL,array_aux_mapa_limpiar
     447.  00:82ED  11 F8 1A            	LD		DE,TILMAP + POSMAPLIN1 	;inicio posición en el mapa de tiles de la primera fila del mapa
     448.  00:82F0  01 07 00            	LD		BC,NHABNIVEL			;cada nivel son 7 filas con 7 habitaciones "posibles"
     449.  00:82F3  CD 5C 00            	CALL	LDIRVM
     450.  00:82F6                      	
     451.  00:82F6  21 5A A4            	LD		HL,array_aux_mapa_limpiar
     452.  00:82F9  11 D8 1A            	LD		DE,TILMAP + POSMAPLIN2
     453.  00:82FC  01 07 00            	LD		BC,NHABNIVEL
     454.  00:82FF  CD 5C 00            	CALL	LDIRVM
     455.  00:8302                      
     456.  00:8302  21 5A A4            	LD		HL,array_aux_mapa_limpiar
     457.  00:8305  11 B8 1A            	LD		DE,TILMAP + POSMAPLIN3
     458.  00:8308  01 07 00            	LD		BC,NHABNIVEL
     459.  00:830B  CD 5C 00            	CALL	LDIRVM
     460.  00:830E                      
     461.  00:830E  21 5A A4            	LD		HL,array_aux_mapa_limpiar	
     462.  00:8311  11 98 1A            	LD		DE,TILMAP + POSMAPLIN4
     463.  00:8314  01 07 00            	LD		BC,NHABNIVEL
     464.  00:8317  CD 5C 00            	CALL	LDIRVM
     465.  00:831A                      
     466.  00:831A  21 5A A4            	LD		HL,array_aux_mapa_limpiar	
     467.  00:831D  11 78 1A            	LD		DE,TILMAP + POSMAPLIN5
     468.  00:8320  01 07 00            	LD		BC,NHABNIVEL
     469.  00:8323  CD 5C 00            	CALL	LDIRVM
     470.  00:8326                      
     471.  00:8326  21 5A A4            	LD		HL,array_aux_mapa_limpiar	
     472.  00:8329  11 58 1A            	LD		DE,TILMAP + POSMAPLIN6
     473.  00:832C  01 07 00            	LD		BC,NHABNIVEL
     474.  00:832F  CD 5C 00            	CALL	LDIRVM
     475.  00:8332                      
     476.  00:8332  21 5A A4            	LD		HL,array_aux_mapa_limpiar	
     477.  00:8335  11 38 1A            	LD		DE,TILMAP + POSMAPLIN7
     478.  00:8338  01 07 00            	LD		BC,NHABNIVEL
     479.  00:833B  CD 5C 00            	CALL	LDIRVM
     480.  00:833E                      	
     481.  00:833E  D9                  	EXX
     482.  00:833F                      fin_borra_mapa:
     483.  00:833F  C9                  	RET
     484.  00:8340                      
     485.  00:8340                      
     486.  00:8340                      
     487.  00:8340                      
     488.  00:8340                      
     489.  00:8340                      ;=====================================================
     490.  00:8340                      ;;PINTA_ARRAY
     491.  00:8340                      ;;=====================================================	
     492.  00:8340                      ;;funcion:  (pinta el mismo tile) se le pasa un array con posiciones de tiles y coordenadas x e y y los pinta en screen 2
     493.  00:8340                      ;;entrada:	wordaux1 (pos inicio sc2 donde pintar) y wordaux2 (puntero al array a pintar), BC (posición en tilemap) , D filas y E columnas
     494.  00:8340                      ;;salida:	-
     495.  00:8340                      ;;importante: necesita de una variable wordaux1 tipo WD (wordaux1: 	DW	0)
     496.  00:8340                      ;; ejemplo llamada:
     497.  00:8340                      	;~ LD		HL,array_tiles					;guardo puntero al array a pintar (como psar por referencia)
     498.  00:8340                      	;~ LD		(wordaux2),HL					;en la variable wordaux2
     499.  00:8340                      	;~ LD		HL,SC2MAP + 256 + 32			;calcula posición en tilemap
     500.  00:8340                      	;~ LD		(wordaux1),HL					;guarda valor pos tilemap en wordaux1
     501.  00:8340                      	;~ LD		B,H								;coloca posición tilemap BC
     502.  00:8340                      	;~ LD		C,L
     503.  00:8340                      	;~ LD		D,2								;nº de filas
     504.  00:8340                      	;~ LD		E,3								;nº de columnas
     505.  00:8340                      	;~ CALL	pinta_array
     506.  00:8340                      
     507.  00:8340                      pinta_array:
     508.  00:8340  F5                  	PUSH	AF
     509.  00:8341                      	
     510.  00:8341  2A 78 83            	LD		HL, (wordaux1)
     511.  00:8344  44                  	LD		B, H							;coloca posición tilemap BC
     512.  00:8345  4D                  	LD		C, L
     513.  00:8346                      	
     514.  00:8346                      	;contamos con que la posición "global" en el tilemap está ya en BC
     515.  00:8346                      	;y el puntero al array a pintar en wordaux2 y la posición en tilemap sc2 en wordaux1
     516.  00:8346                      	;inicializa
     517.  00:8346  DB 99               	IN		 A,(REGEST)		;leer registro de estado (recomendado)
     518.  00:8348                      	
     519.  00:8348                      	;coloca puntero para pintar tile según BC
     520.  00:8348  79                  	LD		 A,C			;primero byte bajo	
     521.  00:8349  D3 99               	OUT		(REGEST),A
     522.  00:834B  78                  	LD		 A,B			;después byte alto  ********************** preguntar a Fernando cómo que byte bajo es B
     523.  00:834C  F6 40               	OR		1000000b		;+64
     524.  00:834E  D3 99               	OUT		(REGEST),A
     525.  00:8350                      
     526.  00:8350                      	
     527.  00:8350  2A 7A 83            	LD		HL,(wordaux2)	;HL es lo que se pintará y le he pasado el puntero del array tilemap a pintar
     528.  00:8353                      .pa_pinta_fila:
     529.  00:8353  43                  	LD		 B,E
     530.  00:8354                      .pa_pinta_columnas: 		;finta la fila (pintando las columnas)
     531.  00:8354  7E                  	LD		 A,(HL)
     532.  00:8355  D3 98               	OUT		(REGESCVDP),A	;escribe A en VRAM en la posición indicada por los dos OUT anteriores
     533.  00:8357  23                  	INC		HL
     534.  00:8358  10 FA               	DJNZ	.pa_pinta_columnas
     535.  00:835A                      	
     536.  00:835A                      	;no es una solución elegante lo de repetir código pero queda claro
     537.  00:835A                      	;por si hay otra fila
     538.  00:835A  E5                  	PUSH	HL
     539.  00:835B  2A 78 83            	LD		HL,(wordaux1)
     540.  00:835E  01 20 00            	LD		BC,32
     541.  00:8361  09                  	ADD		HL,BC
     542.  00:8362  22 78 83            	LD		(wordaux1),HL
     543.  00:8365  44                  	LD		B,H
     544.  00:8366  4D                  	LD		C,L
     545.  00:8367  E1                  	POP		HL
     546.  00:8368                      	
     547.  00:8368  79                  	LD		 A,C			;primero byte bajo	
     548.  00:8369  D3 99               	OUT		(REGEST),A
     549.  00:836B  78                  	LD		 A,B			;después byte alto 
     550.  00:836C  F6 40               	OR		1000000b		;+64
     551.  00:836E  D3 99               	OUT		(REGEST),A
     552.  00:8370                      	
     553.  00:8370                      	;si hay otra fila repite
     554.  00:8370  15                  	DEC		 D
     555.  00:8371  7A                  	LD		 A,D		;¿hay otra fila?
     556.  00:8372  B7                  	OR		 A
     557.  00:8373  C2 53 83            	JP		NZ,.pa_pinta_fila
     558.  00:8376                      	
     559.  00:8376  F1                  	POP		AF
     560.  00:8377                      	
     561.  00:8377                      fin_pinta_array:
     562.  00:8377  C9                  	RET
     563.  00:8378                      ;;variables asocidas a la función (no sé si dejarlo aquí y encapsularlo todo o hacerla reutilizable)
     564.  00:8378                      ;; por de pronto la dejo aquí
     565.  00:8378  00 00               wordaux1:		DW	0	;almacena la posición en el tilemap 0 al 675
     566.  00:837A  00 00               wordaux2:		DW	0	;almacena puntero a array de tiles (posiciones en realidad) a pintar (posiciones repetidas en los 3 bancos)
     567.  00:837C                      
     568.  00:837C                      
     569.  00:837C                      
     570.  00:837C                      
     571.  00:837C                      
     572.  00:837C                      ;;=====================================================
     573.  00:837C                      ;;PINTA_PUERTAS
     574.  00:837C                      ;;=====================================================	
     575.  00:837C                      ; función: 	examina A y mira si tiene que pintar puertas de los lados, arriba o abrajo o las escaleras (o no)
     576.  00:837C                      ; entrada: 	habitacion_actual 1 escalera 1 puerta arriba 1 pu der 1 pu aba 1 pu izq (si es 0 pinta pared)
     577.  00:837C                      ; salida: 	-
     578.  00:837C                      ; toca:		todo
     579.  00:837C                      pinta_puertas:
     580.  00:837C  CD 12 81            	CALL	pinta_parte_superior_pantalla	;pinta pasillo y paredes
     581.  00:837F                      
     582.  00:837F  CD 9D 80            	CALL	localiza_info_habitacion	;busca qué puertas debe pintar y lo mete en habitación_actual
     583.  00:8382                      	
     584.  00:8382  3A 11 A1            	LD		 A, (habitacion_actual)		;se mete en A porque la función pide A y para no buscar el valor 4 veces
     585.  00:8385                      
     586.  00:8385                      ;	BIT		 4, A
     587.  00:8385                      ;	CALL	nz, pinta_escalera
     588.  00:8385                      
     589.  00:8385  CB 5F               	BIT		 3, A
     590.  00:8387  C4 AD 83            	CALL	nz, pinta_puerta_arr
     591.  00:838A                      
     592.  00:838A  CB 57               	BIT		 2, A
     593.  00:838C  C4 C0 83            	CALL	nz, pinta_puerta_der
     594.  00:838F                      
     595.  00:838F  CB 4F               	BIT		 1, A
     596.  00:8391  C4 9A 83            	CALL	nz, pinta_puerta_aba
     597.  00:8394                      	
     598.  00:8394  CB 47               	BIT		 0, A
     599.  00:8396  C4 D3 83            	CALL	nz, pinta_puerta_izq
     600.  00:8399                      fin_pinta_puertas:
     601.  00:8399  C9                  	RET
     602.  00:839A                      
     603.  00:839A                      
     604.  00:839A                      
     605.  00:839A                      
     606.  00:839A                      ;;=====================================================
     607.  00:839A                      ;;PINTA_PUERTA_ABA
     608.  00:839A                      ;;=====================================================	
     609.  00:839A                      ; función: 	pinta la puerta de abajo
     610.  00:839A                      ; entrada: 	array_puerta_abajo, wordaux2, wordaux1
     611.  00:839A                      ; salida: 	-
     612.  00:839A                      ; toca:		HL,BC, DE
     613.  00:839A                      pinta_puerta_aba:
     614.  00:839A  21 8B A4            	LD		HL, array_puerta_abajo			;guardo puntero al array a pintar (como pasar por referencia)
     615.  00:839D  22 7A 83            	LD		(wordaux2), HL					;en la variable wordaux2
     616.  00:83A0  21 EE 19            	LD		HL, TILMAP + POSPUERABAJ		;calcula posición en tilemap
     617.  00:83A3  22 78 83            	LD		(wordaux1), HL					;guarda valor pos tilemap en wordaux1
     618.  00:83A6  16 01               	LD		D, 1							;nº de filas
     619.  00:83A8  1E 04               	LD		E, 4							;nº de columnas
     620.  00:83AA  C3 40 83            	JP		pinta_array
     621.  00:83AD                      fin_pinta_puerta_aba:
     622.  00:83AD                      
     623.  00:83AD                      ;;=====================================================
     624.  00:83AD                      ;;PINTA_PUERTA_ARR
     625.  00:83AD                      ;;=====================================================	
     626.  00:83AD                      ; función: 	pinta la puerta de arriba
     627.  00:83AD                      ; entrada: 	array_puerta_arriba, wordaux2, wordaux1
     628.  00:83AD                      ; salida: 	-
     629.  00:83AD                      ; toca:		HL,BC, DE
     630.  00:83AD                      pinta_puerta_arr:
     631.  00:83AD  21 62 A4            	LD		HL, array_puerta_arriba			;guardo puntero al array a pintar (como pasar por referencia)
     632.  00:83B0  22 7A 83            	LD		(wordaux2), HL					;en la variable wordaux2
     633.  00:83B3  21 8E 18            	LD		HL, TILMAP + POSPUERARRI		;calcula posición en tilemap
     634.  00:83B6  22 78 83            	LD		(wordaux1), HL					;guarda valor pos tilemap en wordaux1
     635.  00:83B9  16 05               	LD		D, 5							;nº de filas
     636.  00:83BB  1E 04               	LD		E, 4							;nº de columnas
     637.  00:83BD  C3 40 83            	JP		pinta_array
     638.  00:83C0                      fin_pinta_puerta_arr:
     639.  00:83C0                      
     640.  00:83C0                      
     641.  00:83C0                      ;;=====================================================
     642.  00:83C0                      ;;PINTA_PUERTA_DER
     643.  00:83C0                      ;;=====================================================	
     644.  00:83C0                      ; función: 	pinta la puerta de la derecha
     645.  00:83C0                      ; entrada: 	array_puerta_derecha, wordaux2, wordaux1
     646.  00:83C0                      ; salida: 	-
     647.  00:83C0                      ; toca:		HL,BC, DE
     648.  00:83C0                      pinta_puerta_der:
     649.  00:83C0  21 76 A4            	LD		HL, array_puerta_derecha		;guardo puntero al array a pintar (como pasar por referencia)
     650.  00:83C3  22 7A 83            	LD		(wordaux2), HL					;en la variable wordaux2
     651.  00:83C6  21 FC 18            	LD		HL, TILMAP + POSPUERDERE		;calcula posición en tilemap
     652.  00:83C9  22 78 83            	LD		(wordaux1), HL					;guarda valor pos tilemap en wordaux1
     653.  00:83CC  16 07               	LD		D, 7							;nº de filas
     654.  00:83CE  1E 03               	LD		E, 3							;nº de columnas
     655.  00:83D0  C3 40 83            	JP		pinta_array
     656.  00:83D3                      fin_pinta_puerta_der:
     657.  00:83D3                      	
     658.  00:83D3                      ;;=====================================================
     659.  00:83D3                      ;;PINTA_PUERTA_IZQ
     660.  00:83D3                      ;;=====================================================	
     661.  00:83D3                      ; función: 	pinta la puerta de la izquierda
     662.  00:83D3                      ; entrada: 	array_puerta_izquierda, wordaux2, wordaux1
     663.  00:83D3                      ; salida: 	-
     664.  00:83D3                      ; toca:		HL,BC, DE
     665.  00:83D3                      pinta_puerta_izq:
     666.  00:83D3  21 8F A4            	LD		HL, array_puerta_izquierda		;guardo puntero al array a pintar (como pasar por referencia)
     667.  00:83D6  22 7A 83            	LD		(wordaux2), HL					;en la variable wordaux2
     668.  00:83D9  21 E1 18            	LD		HL, TILMAP + POSPUERIZQU		;calcula posición en tilemap
     669.  00:83DC  22 78 83            	LD		(wordaux1), HL					;guarda valor pos tilemap en wordaux1
     670.  00:83DF  16 07               	LD		D, 7							;nº de filas
     671.  00:83E1  1E 03               	LD		E, 3							;nº de columnas
     672.  00:83E3  C3 40 83            	JP		pinta_array
     673.  00:83E6                      fin_pinta_puerta_izq:
     674.  00:83E6                      
     675.  00:83E6                      
     676.  00:83E6                      
     677.  00:83E6                      
     678.  00:83E6                      ;;=====================================================
     679.  00:83E6                      ;;POSICIONA_EN_MAPA
     680.  00:83E6                      ;;=====================================================	
     681.  00:83E6                      ; función: 	en el mapa de marcadores de la derecha/abajo marca un cuadro en gris o con un muñeco
     682.  00:83E6                      ;			según el valor de prota.posición pinta entrá un muñeco y por donde vaya pasando el prota
     683.  00:83E6                      ;			quedará en gris
     684.  00:83E6                      ; entrada: 	elemento_pintar_mapa, prota_pos_mapy, prota_pos_mapx
     685.  00:83E6                      ; salida: 	-
     686.  00:83E6                      ; toca:		todos
     687.  00:83E6                      posiciona_en_mapa:
     688.  00:83E6                      	;#0238 es la posición en mapa de tiles de la esquina superior izquierda del mapa (569 en decimal)
     689.  00:83E6  21 38 1A            	LD		HL, TILMAP + POSMAPA;pos inicial
     690.  00:83E9                      	
     691.  00:83E9                      	;ahora se le calcula la fila a pintar ya que va de abajo a arriba y no como en el mapa + columna
     692.  00:83E9                      .sumar_fila:
     693.  00:83E9  3A 40 A4            	LD		 A, (prota_pos_mapy)
     694.  00:83EC  FE 01               	CP		 1
     695.  00:83EE  28 2A               	JR		 Z, .fila_1
     696.  00:83F0  3A 40 A4            	LD		 A, (prota_pos_mapy)
     697.  00:83F3  FE 02               	CP		 2
     698.  00:83F5  28 2A               	JR		 Z, .fila_2
     699.  00:83F7  3A 40 A4            	LD		 A, (prota_pos_mapy)
     700.  00:83FA  FE 03               	CP		 3
     701.  00:83FC  28 2A               	JR		 Z, .fila_3
     702.  00:83FE  3A 40 A4            	LD		 A, (prota_pos_mapy)
     703.  00:8401  FE 04               	CP		 4
     704.  00:8403  28 2A               	JR		 Z, .fila_4
     705.  00:8405  3A 40 A4            	LD		 A, (prota_pos_mapy)
     706.  00:8408  FE 05               	CP		 5
     707.  00:840A  28 2A               	JR		 Z, .fila_5
     708.  00:840C  3A 40 A4            	LD		 A, (prota_pos_mapy)
     709.  00:840F  FE 06               	CP		 6
     710.  00:8411  28 2A               	JR		 Z, .sumar_columna
     711.  00:8413                      	;no consulto la 0 porque si no es ninguna de las anteriores es 0 y por tanto sería un jr fila_0
     712.  00:8413                      	
     713.  00:8413                      .fila_0:
     714.  00:8413  11 C0 00            	LD		DE, 192
     715.  00:8416  19                  	ADD		HL, DE			;nota: se que repito el ADD pero la otra opción es inicializar DE y ya tarda mucho la funicón (es por velicidad)
     716.  00:8417  C3 3D 84            	JP		.sumar_columna
     717.  00:841A                      .fila_1:
     718.  00:841A  11 A0 00            	LD		DE, 160
     719.  00:841D  19                  	ADD		HL, DE
     720.  00:841E  C3 3D 84            	JP		.sumar_columna
     721.  00:8421                      .fila_2:
     722.  00:8421  11 80 00            	LD		DE, 128
     723.  00:8424  19                  	ADD		HL, DE
     724.  00:8425  C3 3D 84            	JP		.sumar_columna
     725.  00:8428                      .fila_3:
     726.  00:8428  11 60 00            	LD		DE, 96
     727.  00:842B  19                  	ADD		HL, DE
     728.  00:842C  C3 3D 84            	JP		.sumar_columna
     729.  00:842F                      .fila_4:
     730.  00:842F  11 40 00            	LD		DE, 64
     731.  00:8432  19                  	ADD		HL, DE
     732.  00:8433  C3 3D 84            	JP		.sumar_columna
     733.  00:8436                      .fila_5:
     734.  00:8436  11 20 00            	LD		DE, 32
     735.  00:8439  19                  	ADD		HL, DE
     736.  00:843A  C3 3D 84            	JP		.sumar_columna
     737.  00:843D                      .fila_6:
     738.  00:843D                      	;pongo fila_6 por poner ya que si es la fila 6 equiv. a primera fila del mapa y por tanto no suma fila
     739.  00:843D                      	
     740.  00:843D                      	
     741.  00:843D                      .sumar_columna:
     742.  00:843D  3A 3F A4            	LD 		 A, (prota_pos_mapx) ;POS X
     743.  00:8440  16 00               	LD		 D, 0
     744.  00:8442  5F                  	LD		 E, A
     745.  00:8443  19                  	ADD		HL, DE
     746.  00:8444                      	
     747.  00:8444                      	;resultado en BC para usar en la función pinta_tile_suelto
     748.  00:8444  44                  	LD		 B, H
     749.  00:8445  4D                  	LD		 C, L
     750.  00:8446                      	
     751.  00:8446                      	;terminado de fijar la coordenada recuperamos a para ver el tipo
     752.  00:8446  3A 61 A4            	LD		 A, (elemento_pintar_mapa)
     753.  00:8449  FE 09               	CP		 TILEGRISM
     754.  00:844B  CA 53 84            	JP		 Z, pinta_pos_mapa_vacio
     755.  00:844E  16 13               	LD		 D, TILEPROTAM
     756.  00:8450  C3 55 84            	JP		fin_pinta_pos_mapa
     757.  00:8453                      pinta_pos_mapa_vacio:
     758.  00:8453  16 09               	LD		 D, TILEGRISM	
     759.  00:8455                      
     760.  00:8455                      fin_pinta_pos_mapa:
     761.  00:8455  C3 75 82            	JP		pinta_tile_suelto
     762.  00:8458                      fin_posiciona_en_mapa:
     763.  00:8458                      
     764.  00:8458                      
     765.  00:8458                      
     766.  00:8458                      
     767.  00:8458                      ;;=====================================================
     768.  00:8458                      ;;EFECTO_IMAGEN_TIRA_RELIQUIA
     769.  00:8458                      ;;=====================================================	
     770.  00:8458                      ; función: 	hace que el fondo de la pantalla parpadee N veces
     771.  00:8458                      ; entrada: 	actualiza_reliquias_sn
     772.  00:8458                      ; salida: 	-
     773.  00:8458                      ; toca: 	todo
     774.  00:8458                      efecto_imagen_tira_reliquia:
     775.  00:8458  3E 14               	LD		 A, 20;RETARDOREL
     776.  00:845A  47                  	LD		 B, A
     777.  00:845B                      
     778.  00:845B                      .parpadea_fondo:
     779.  00:845B  C5                  	PUSH	BC
     780.  00:845C  21 26 A4            	LD		HL, color_bomba1
     781.  00:845F  CD D9 80            	CALL	color_pantalla
     782.  00:8462                      	
     783.  00:8462                      	;~ PUSH	BC
     784.  00:8462                      	;~ LD		 A, 255
     785.  00:8462                      	;~ LD		 B, A
     786.  00:8462                      ;~ .bucle_de_espera:
     787.  00:8462                      	;~ NOP
     788.  00:8462                      	;~ DJNZ	 .bucle_de_espera
     789.  00:8462                      	;~ POP		BC
     790.  00:8462  76                  	HALT
     791.  00:8463                      
     792.  00:8463                      	
     793.  00:8463  21 29 A4            	LD		HL, color_bomba2
     794.  00:8466  CD D9 80            	CALL	color_pantalla
     795.  00:8469  C1                  	POP		BC
     796.  00:846A  10 EF               	DJNZ	.parpadea_fondo
     797.  00:846C                      	
     798.  00:846C  21 23 A4            	LD		HL, color_base
     799.  00:846F  C3 D9 80            	JP		color_pantalla
     800.  00:8472                      fin_efecto_imagen_tira_reliquia:
     801.  00:8472                      
     802.  00:8472                      
     803.  00:8472                      
     804.  00:8472                      
     805.  00:8472                      ;;=====================================================
     806.  00:8472                      ;;PINTA_OBJ_AYUDA
     807.  00:8472                      ;;=====================================================	
     808.  00:8472                      ; función: 	
     809.  00:8472                      ; entrada: 	A - objeto a mostrar
     810.  00:8472                      ; salida: 	-
     811.  00:8472                      ; toca:		AF, HL, BC, DE
     812.  00:8472                      pinta_obj_ayuda:
     813.  00:8472                      	;se recibe objeto an A
     814.  00:8472  3E 0C               	LD		 A, CRUZOFF
     815.  00:8474  01 C4 A4            	LD		BC, array_ayudas
     816.  00:8477  CD D3 80            	CALL 	suma_A_BC
     817.  00:847A                      	
     818.  00:847A                      	;coloca pos array objeto a pintar en 
     819.  00:847A  ED 43 7A 83         	LD		(wordaux2), BC
     820.  00:847E                      	
     821.  00:847E  3E 20               	LD		 A, 32
     822.  00:8480  01 A4 A4            	LD		BC, pos_ayudas
     823.  00:8483  CD D3 80            	CALL 	suma_A_BC
     824.  00:8486                      	
     825.  00:8486  ED 43 78 83         	LD		(wordaux1), BC
     826.  00:848A                      	
     827.  00:848A                      	;~ LD		HL, (BC)		;calcula posición en tilemap
     828.  00:848A                      	;~ LD		(wordaux1), HL					;guarda valor pos tilemap en wordaux1
     829.  00:848A                      
     830.  00:848A  16 02               	LD		D, 2							;nº de filas
     831.  00:848C  1E 02               	LD		E, 2							;nº de columnas
     832.  00:848E  C3 40 83            	JP		pinta_array
     833.  00:8491                      fin_pinta_obj_ayuda:
     834.  00:8491                      
     835.  00:8491                      
     836.  00:8491                      
     837.  00:8491                      
     110   00:8491                      	
     111   00:8491                      	include "subr_sprites.asm"
       1.  00:8491                      
       2.  00:8491                      ;;=====================================================
       3.  00:8491                      ;;SUBRUTINAS ENCARGADAS DE MANEJAR LOS SPRITES
       4.  00:8491                      ;;=====================================================	
       5.  00:8491                      
       6.  00:8491                      
       7.  00:8491                      ;; PREGUNTAR SI A FERNANDO SI ES MEJOR USAR LISTAS O ALGO PARA AHORRAR CÓDIGO
       8.  00:8491                      
       9.  00:8491                      
      10.  00:8491                      
      11.  00:8491                      
      12.  00:8491                      ;;=====================================================
      13.  00:8491                      ;;CARGA_PATRONES_SPRITES_NIVEL
      14.  00:8491                      ;;=====================================================	
      15.  00:8491                      ; función: 	examina el nivel y carga los patrones específicos necesarios
      16.  00:8491                      ; entrada: 	-
      17.  00:8491                      ; salida: 	-
      18.  00:8491                      ; toca: 	-
      19.  00:8491                      carga_patrones_sprites_nivel:
      20.  00:8491                      	
      21.  00:8491  CD 9C 84            	CALL 	carga_patrones_nivel_comunes
      22.  00:8494                      	
      23.  00:8494                      	;carga atrones no comunes
      24.  00:8494  3A 3C A4            	LD		 A, (prota_nivel)
      25.  00:8497  B7                  	OR		 A
      26.  00:8498  CA A8 84            	JP		 Z, carga_patrones_sprites_nivel1
      27.  00:849B                      	
      28.  00:849B                      	
      29.  00:849B                      fin_carga_patrones_sprites_nivel:
      30.  00:849B  C9                  	RET		;dejo este ret de momento pero cuando la subrutina esté terminada sobrará
      31.  00:849C                      
      32.  00:849C                      	;RET comparo numeros con jp para incluir el RET con lo que el último ret me sobra
      33.  00:849C                      
      34.  00:849C                      ;;=====================================================
      35.  00:849C                      ;;CARGA_PATRONES_SPRITES_NIVEL_COMUNES
      36.  00:849C                      ;;=====================================================	
      37.  00:849C                      ; función: 	carga los patrones comunes en todos los niveles
      38.  00:849C                      ; entrada: 	-
      39.  00:849C                      ; salida: 	-
      40.  00:849C                      ; toca: 	-
      41.  00:849C                      carga_patrones_nivel_comunes:	
      42.  00:849C  21 91 97            	LD		HL, sprites_comunes
      43.  00:849F  11 00 38            	LD		DE, SPRTBL
      44.  00:84A2  01 C0 00            	LD		BC, fin_sprites_comunes-sprites_comunes
      45.  00:84A5  C3 5C 00            	JP		LDIRVM
      46.  00:84A8                      fin_carga_patrones_nivel_comunes:
      47.  00:84A8                      
      48.  00:84A8                      
      49.  00:84A8                      ;;=====================================================
      50.  00:84A8                      ;;CARGA_PATRONES_SPRITES_NIVEL1
      51.  00:84A8                      ;;=====================================================	
      52.  00:84A8                      ; función: 	copia los patrones de los sprites que e van a usar en el nivel 1 en vram
      53.  00:84A8                      ; entrada: 	-
      54.  00:84A8                      ; salida: 	-
      55.  00:84A8                      ; toca: 	-
      56.  00:84A8                      carga_patrones_sprites_nivel1:
      57.  00:84A8                      
      58.  00:84A8                      
      59.  00:84A8                      	;~ ;sprite sprite_reliquia
      60.  00:84A8                      	;~ LD		HL,sprite_reliquia
      61.  00:84A8                      	;~ LD		DE,#3880
      62.  00:84A8                      	;~ LD		BC,32				;32 bytes (sprites de 2 x 2)
      63.  00:84A8                      	;~ CALL	LDIRVM
      64.  00:84A8                      
      65.  00:84A8                      fin_carga_patrones_sprites:
      66.  00:84A8  C9                  	RET
      67.  00:84A9                      
      68.  00:84A9                      
      69.  00:84A9                      ;;=====================================================
      70.  00:84A9                      ;;ACTUALIZA_ARRAY_SPRITES_VRAM
      71.  00:84A9                      ;;=====================================================	
      72.  00:84A9                      ; función: 	copia el array con los valores de los sprites (pos, color, plano) en VRAM
      73.  00:84A9                      ; entrada: 	-
      74.  00:84A9                      ; salida: 	-
      75.  00:84A9                      ; toca: 	todos los registros. Como me interesa la velocidad, si necesito copiar de algo lo hago fuera
      76.  00:84A9                      render_sprites:
      77.  00:84A9                      	;volcando el array con toda la info de los sprites a la zona de atributos de sprites
      78.  00:84A9  21 FC A4            	LD		HL,array_sprites
      79.  00:84AC  11 00 1B            	LD		DE,SPRART
      80.  00:84AF  01 80 00            	LD		BC,4 * 32				;32 sprites x 4 bytes controlando el sprite (Y, X, plano, color)
      81.  00:84B2  C3 5C 00            	JP		LDIRVM
      82.  00:84B5                      fin_actualiza_array_sprites_vram:
      83.  00:84B5                      
      84.  00:84B5                      
      85.  00:84B5                      ;;=====================================================
      86.  00:84B5                      ;;VUELCA_RESULTADO_PUNTOMIRA_ARRAY
      87.  00:84B5                      ;;=====================================================	
      88.  00:84B5                      ; función: 	coloca los valores del punto de mira en la variable array_sprites para ser volcados en VRAM
      89.  00:84B5                      ; entrada: 	array_sprites_pm, prota.XXXXX
      90.  00:84B5                      ; salida: 	-
      91.  00:84B5                      ; toca: 	-
      92.  00:84B5                      vuelca_resultado_puntomira_array:
      93.  00:84B5  DD 21 FC A4         	LD		IX, array_sprites_pm
      94.  00:84B9                      	;posición y de los dos sprites que conforman el punto de mira
      95.  00:84B9  3A 2D A4            	LD		 A, (prota.posy)
      96.  00:84BC  DD 77 00            	LD		(IX  ), A
      97.  00:84BF  DD 77 04            	LD		(IX+4), A
      98.  00:84C2                      	;posición x de los dos sprites que conforman el punto de mira
      99.  00:84C2  3A 2C A4            	LD		 A, (prota.posx)
     100.  00:84C5  DD 77 01            	LD		(IX+1), A
     101.  00:84C8  DD 77 05            	LD		(IX+5), A
     102.  00:84CB                      	;plano
     103.  00:84CB  DD 36 02 00         	LD		(IX+2), 0
     104.  00:84CF  DD 36 06 04         	LD		(IX+6), 4	;al ser sprites de 16x16 hay que ir de 4 en 4
     105.  00:84D3                      	;color
     106.  00:84D3  3A 2E A4            	LD		 A, (prota.escena)
     107.  00:84D6  B7                  	OR		 A
     108.  00:84D7  C2 E3 84            	JP		NZ,.codigo_color_2
     109.  00:84DA                      .codigo_color_1:
     110.  00:84DA  DD 36 03 0F         	LD		(IX+3), COLBLANCO
     111.  00:84DE  DD 36 07 08         	LD		(IX+7), COLROJO
     112.  00:84E2  C9                  	RET
     113.  00:84E3                      .codigo_color_2:
     114.  00:84E3  DD 36 03 08         	LD		(IX+3), COLROJO
     115.  00:84E7  DD 36 07 0F         	LD		(IX+7), COLBLANCO
     116.  00:84EB  C9                  	RET
     117.  00:84EC                      fin_vuelca_resultado_puntomira_array:
     118.  00:84EC                      
     119.  00:84EC                      
     120.  00:84EC                      ;;=====================================================
     121.  00:84EC                      ;;CHECK_PLAYER
     122.  00:84EC                      ;;=====================================================	
     123.  00:84EC                      ; función: 	MIRA EL CONTROL Y APLICA LA LOGICA DE MOVIMIENTO DEL PROTAGONISTA
     124.  00:84EC                      ; entrada: 	-
     125.  00:84EC                      ; salida: 	-
     126.  00:84EC                      ; toca: 	A
     127.  00:84EC                      check_player:
     128.  00:84EC  CD 8B 85            	CALL	update_controllers_status
     129.  00:84EF  B7                  	OR		 A
     130.  00:84F0  C8                  	RET		 Z						;si no se ha pulsado nada no se necesita mirar nada
     131.  00:84F1                      
     132.  00:84F1  CB 1F               	RR		 A
     133.  00:84F3  DC 0C 85            	CALL	 C, mueve_arriba
     134.  00:84F6  CB 1F               	RR		 A
     135.  00:84F8  DC 28 85            	CALL	 C, mueve_abajo
     136.  00:84FB  CB 1F               	RR		 A
     137.  00:84FD  DC 37 85            	CALL	 C, mueve_izquierda
     138.  00:8500  CB 1F               	RR		 A
     139.  00:8502  DC 19 85            	CALL	 C, mueve_derecha
     140.  00:8505                      	
     141.  00:8505                      	;zona para mirar disparo Recibe A que tendrá 0000 0 0 X-letra M X-espacio 
     142.  00:8505  CD 44 85            	CALL	mira_disparo
     143.  00:8508                      	
     144.  00:8508  C3 B5 84            	JP		vuelca_resultado_puntomira_array
     145.  00:850B                      f;in_check_player:
     146.  00:850B  C9                  	RET
     147.  00:850C                      
     112   00:850C                      	
     113   00:850C                      	include "subr_teclado_joy.asm"
       1.  00:850C                      ;;=====================================================
       2.  00:850C                      ;;SUBRUTINAS QUE CAPTURN EL JOYSTICK Y TECLADO Y MUEVEN PUNTO DE MIRA
       3.  00:850C                      ;;=====================================================
       4.  00:850C                      
       5.  00:850C                      ;;=====================================================
       6.  00:850C                      ;;MUEVE_ARRIBA
       7.  00:850C                      ;;=====================================================	
       8.  00:850C                      ; función: 	decrementa y si se no sale de los límites el valor del punto de mira a la derecha
       9.  00:850C                      ; entrada: 	-
      10.  00:850C                      ; salida: 	-
      11.  00:850C                      ; toca: 	-
      12.  00:850C                      mueve_arriba:
      13.  00:850C  F5                  	PUSH		AF
      14.  00:850D                      	
      15.  00:850D  3A 2D A4            	LD		 	 A, (prota.posy)
      16.  00:8510  3D                  	DEC			 A
      17.  00:8511  CA 17 85            	JP			 Z,.no_decrementa_y
      18.  00:8514  32 2D A4            	LD			(prota.posy), A
      19.  00:8517                      	
      20.  00:8517                      .no_decrementa_y:
      21.  00:8517  F1                  	POP			AF
      22.  00:8518                      fin_mueve_arriba:
      23.  00:8518  C9                  	RET
      24.  00:8519                      
      25.  00:8519                      
      26.  00:8519                      ;;=====================================================
      27.  00:8519                      ;;MUEVE_DERECHA
      28.  00:8519                      ;;=====================================================	
      29.  00:8519                      ; función: 	incrementa si se no sale de los límites el valor del punto de mira a la derecha
      30.  00:8519                      ; entrada: 	-
      31.  00:8519                      ; salida: 	-
      32.  00:8519                      ; toca: 	-
      33.  00:8519                      mueve_derecha:
      34.  00:8519  F5                  	PUSH		AF
      35.  00:851A                      	
      36.  00:851A  3A 2C A4            	LD		 	 A, (prota.posx)
      37.  00:851D  3C                  	INC			 A
      38.  00:851E  FE EF               	CP			 A, LIMPANTDER - 16
      39.  00:8520  CA 26 85            	JP			 Z, .no_incrementa_x
      40.  00:8523  32 2C A4            	LD			(prota.posx), A
      41.  00:8526                      	
      42.  00:8526                      .no_incrementa_x:
      43.  00:8526  F1                  	POP			AF
      44.  00:8527                      fin_mueve_derecha:
      45.  00:8527  C9                  	RET
      46.  00:8528                      
      47.  00:8528                      
      48.  00:8528                      ;;=====================================================
      49.  00:8528                      ;;MUEVE_ABAJO
      50.  00:8528                      ;;=====================================================	
      51.  00:8528                      ; función: 	incrementa y si se no sale de los límites el valor del punto de mira abajo
      52.  00:8528                      ; entrada: 	-
      53.  00:8528                      ; salida: 	-
      54.  00:8528                      ; toca: 	-
      55.  00:8528                      mueve_abajo:
      56.  00:8528  F5                  	PUSH		AF
      57.  00:8529                      	
      58.  00:8529  3A 2D A4            	LD		 	 A, (prota.posy)
      59.  00:852C  3C                  	INC			 A
      60.  00:852D  FE 70               	CP			 A, LIMPANTABA - 16
      61.  00:852F  CA 35 85            	JP			 Z,.no_incrementa_y
      62.  00:8532  32 2D A4            	LD			(prota.posy), A
      63.  00:8535                      	
      64.  00:8535                      .no_incrementa_y:
      65.  00:8535  F1                  	POP			AF
      66.  00:8536                      fin_mueve_abajo:
      67.  00:8536  C9                  	RET
      68.  00:8537                      	
      69.  00:8537                      	
      70.  00:8537                      ;;=====================================================
      71.  00:8537                      ;;MUEVE_IZQUIERDA
      72.  00:8537                      ;;=====================================================	
      73.  00:8537                      ; función: 	decrementa x si se no sale de los límites el valor del punto de mira a la izquierda
      74.  00:8537                      ; entrada: 	-
      75.  00:8537                      ; salida: 	-
      76.  00:8537                      ; toca: 	-
      77.  00:8537                      mueve_izquierda:
      78.  00:8537  F5                  	PUSH		AF
      79.  00:8538                      	
      80.  00:8538  3A 2C A4            	LD		 	 A, (prota.posx)
      81.  00:853B  3D                  	DEC			 A
      82.  00:853C                      ;	CP			 A, LIMPANTIZQ
      83.  00:853C  CA 42 85            	JP			 Z,.no_decrementa_x
      84.  00:853F  32 2C A4            	LD			(prota.posx), A
      85.  00:8542                      	
      86.  00:8542                      .no_decrementa_x:
      87.  00:8542  F1                  	POP			AF
      88.  00:8543                      fin_mueve_izquierda:
      89.  00:8543  C9                  	RET
      90.  00:8544                      
      91.  00:8544                      
      92.  00:8544                      
      93.  00:8544                      ;;=====================================================
      94.  00:8544                      ;;MIRA_DISPARO
      95.  00:8544                      ;;=====================================================	
      96.  00:8544                      ; función: 	Mira si se ha pulsado alguno de los dos disparos
      97.  00:8544                      ; entrada: 	A que tendrá 0000 0 0 X-letra M X-espacio 
      98.  00:8544                      ; salida: 	-
      99.  00:8544                      ; toca: 	A, B
     100.  00:8544                      mira_disparo:
     101.  00:8544                      .mira_boton_pulsado1:
     102.  00:8544  CB 1F               	RR		 A						;preparo en el carry si se ha pulsado botón 1
     103.  00:8546  D2 6F 85            	JP		 NC, .mira_boton_pulsado2					
     104.  00:8549  F5                  	PUSH	AF						;copia A para usarlo después
     105.  00:854A                      	;se ha pulsado barra o boton 1
     106.  00:854A  3A 31 A4            	LD		 A, (prota.cadencia)
     107.  00:854D  B7                  	OR		 A
     108.  00:854E  CA 5C 85            	JP		 Z, .efectua_disparo	;toca efectuar disparo realmente porque se ha pulsado lo suficiente el disparo
     109.  00:8551                      .no_efectua_disparo: ;IF
     110.  00:8551  3D                  		DEC		 A
     111.  00:8552  32 31 A4            		LD		(prota.cadencia), A	;resto cadencia hasta próximo disparo "real" (no automático por haber pulsado una tecla e ir demasiado rápido)
     112.  00:8555  AF                  		XOR		 A 
     113.  00:8556  32 2E A4            		LD		(prota.escena), A
     114.  00:8559  C3 6E 85            		JP		.fin_mira_disparo1
     115.  00:855C                      .efectua_disparo:	;ELSE
     116.  00:855C                      		;cambio colores del sprite
     117.  00:855C  3A 2E A4            		LD		 A, (prota.escena)
     118.  00:855F  2F                  		CPL		 
     119.  00:8560  32 2E A4            		LD		(prota.escena), A
     120.  00:8563                      		;reseteo cadencia para el próximo disparo
     121.  00:8563  3E 04               		LD		 A, LIMCADENCIA						;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
     122.  00:8565  32 31 A4            		LD		 (prota.cadencia), A				;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
     123.  00:8568                      		;ejecuto sonido								;; ajustar cadencia y que cuando el disparo sea efectivo se reseteen los colores
     124.  00:8568  AF                  		XOR		 A
     125.  00:8569  0E 01               		LD		 C, 1
     126.  00:856B  CD 33 8C            		CALL	ayFX_INIT	
     127.  00:856E                      .fin_mira_disparo1
     128.  00:856E                      
     129.  00:856E  F1                  	POP		AF
     130.  00:856F                      .mira_boton_pulsado2:
     131.  00:856F  CB 1F               	RR		 A
     132.  00:8571  D0                  	RET		 NC
     133.  00:8572                      	;se ha pulsado shift o boton 2
     134.  00:8572                      	
     135.  00:8572  3A 3E A4            	LD		 A, (prota_reliquias)	;miro si le quedan reliquias
     136.  00:8575  B7                  	OR		 A
     137.  00:8576  C8                  	RET		 Z						;si no le quedan salgo ya
     138.  00:8577                      	
     139.  00:8577                      	;actuaciones si se usa la reliquia botón 2 o M y quedn reliquias.. (antes ya se puso el valor en A)
     140.  00:8577  3A 3E A4            	LD		A, (prota_reliquias)
     141.  00:857A  3D                  	DEC		 A
     142.  00:857B  32 3E A4            	LD		(prota_reliquias), A
     143.  00:857E                      	
     144.  00:857E  3E 01               	LD		 A, 1
     145.  00:8580  0E 01               	LD		 C, 1
     146.  00:8582  CD 33 8C            	CALL	ayFX_INIT
     147.  00:8585                      	
     148.  00:8585  CD 58 84            	CALL 	efecto_imagen_tira_reliquia
     149.  00:8588                      	
     150.  00:8588  C3 5A 82            	JP		pinta_reliquias
     151.  00:858B                      fin_mira_disparo:
     152.  00:858B                      ;	RET		
     153.  00:858B                      
     154.  00:858B                      
     155.  00:858B                      ;;============================================================
     156.  00:858B                      ;;Código de D. Fernando García (BitVision) (al que siempre le estaré agradecido)
     157.  00:858B                      ;check_8th_keyboard_row
     158.  00:858B                      ;read_joy_0
     159.  00:858B                      ;check_8th_keyboard_row
     160.  00:858B                      ;check_4th_keyboard_row
     161.  00:858B                      ;;============================================================
     162.  00:858B                      ;;  usa constantes:
     163.  00:858B                      ;PSG_A  equ  0a0h  ;reg address
     164.  00:858B                      ;PSG_W  equ  0a1h  ;reg data WR
     165.  00:858B                      ;PSG_R  equ  0a2h  ;reg data
     166.  00:858B                      
     167.  00:858B                      ;;=====================================================
     168.  00:858B                      ;;update_controllers_status
     169.  00:858B                      ;;=====================================================	
     170.  00:858B                      ;depends on the next rountine
     171.  00:858B                      ;  returns
     172.  00:858B                      ;  a - 0P2TRLDU
     173.  00:858B                      
     174.  00:858B                      update_controllers_status:
     175.  00:858B  CD D6 85                 call  check_8th_keyboard_row
     176.  00:858E                      [4]  rrc    a
     176.  00:858E  CB 0F CB 0F CB 0F CB 0F 
     177.  00:8596  47                       ld    b,a    		;save for later  xxxTRDUL
     178.  00:8597                      
     179.  00:8597  E6 01                    and    #01    		;save L
     180.  00:8599  CB 27                    sla    a
     181.  00:859B  CB 27                    sla    a    		;now 00000L00
     182.  00:859D  4F                       ld    c,a    		;save for later
     183.  00:859E                      
     184.  00:859E  78                       ld    a,b    		;again we've got xxxTRDUL. I am interested on leaving 000000DU on a
     185.  00:859F  CB 3F                    srl    a
     186.  00:85A1  E6 03                    and    00000011b
     187.  00:85A3                      						;we've got 000000DU on a
     188.  00:85A3  B1                       or    c    		;now we've got 00000LDU
     189.  00:85A4  4F                       ld    c,a    		;save for later
     190.  00:85A5                      
     191.  00:85A5  78                       ld    a,b
     192.  00:85A6  E6 18                    and    00011000b 	;we've got 000TR000
     193.  00:85A8  B1                       or    c
     194.  00:85A9                           ;finally    000TRLDU
     195.  00:85A9                      
     196.  00:85A9                           ;and    00000100   ;preserve just
     197.  00:85A9  47                       ld    b,a    		;save for later
     198.  00:85AA  CD E4 85                 call  check_4th_keyboard_row      ;check M & P
     199.  00:85AD  F5                       push  af
     200.  00:85AE  E6 04                    and    00000100b	;filter just M
     201.  00:85B0  87                       add    a
     202.  00:85B1  87                       add    a
     203.  00:85B2  87                       add    a           ;shift 3th to 6th bit
     204.  00:85B3  B0                       or    b           	;merge with previous
     205.  00:85B4  47                       ld    b,a
     206.  00:85B5                      
     207.  00:85B5  CD C2 85                 call  read_joy_0
     208.  00:85B8  E6 3F                    and    00111111b  	;we want just 002TRLDU  from joystick    (2 is second trigger)
     209.  00:85BA  B0                       or    b      		;added 000TRLDU from keyboard
     210.  00:85BB  47                       ld    b,a      	;save for later
     211.  00:85BC  F1                       pop    af      	; let's check on P
     212.  00:85BD                      
     213.  00:85BD  E6 20                    and    00100000b
     214.  00:85BF  87                       add    a      		;P status on 6th bit  ... so 0P2TRLDU
     215.  00:85C0  B0                       or    b
     216.  00:85C1                      
     217.  00:85C1  C9                       ret
     218.  00:85C2                      
     219.  00:85C2                      
     220.  00:85C2                      ;ret
     221.  00:85C2                      ;  a -            xx2TRLDU
     222.  00:85C2                      read_joy_0:
     223.  00:85C2  F3                         di
     224.  00:85C3  3E 0F                      ld    a,15
     225.  00:85C5  D3 A0                      out    [PSG_A],a
     226.  00:85C7  DB A2                      in    a,[PSG_R]
     227.  00:85C9  E6 BF                      and    10111111b        ;joy0
     228.  00:85CB                      
     229.  00:85CB  D3 A1                      out    [PSG_W],a        ;set joy0
     230.  00:85CD                      
     231.  00:85CD  3E 0E                      ld    a,14
     232.  00:85CF  D3 A0                      out    [PSG_A],a
     233.  00:85D1  DB A2                      in    a,[PSG_R]
     234.  00:85D3                      
     235.  00:85D3  FB                         ei
     236.  00:85D4  2F                         cpl
     237.  00:85D5                      
     238.  00:85D5  C9                         ret
     239.  00:85D6                      
     240.  00:85D6                      
     241.  00:85D6                      ;ret
     242.  00:85D6                      ;  a -      RDULxxxT
     243.  00:85D6                      check_8th_keyboard_row:
     244.  00:85D6  F3                       di
     245.  00:85D7  DB AA                    in    a,(#aa)
     246.  00:85D9  E6 F0                    and    #f0
     247.  00:85DB  F6 08                    or    8
     248.  00:85DD  D3 AA                    out    (#aa),a
     249.  00:85DF  DB A9                    in    a,(#a9)
     250.  00:85E1  FB                       ei
     251.  00:85E2  2F                       cpl
     252.  00:85E3                      
     253.  00:85E3  C9                       ret
     254.  00:85E4                      
     255.  00:85E4                      
     256.  00:85E4                      ;ret
     257.  00:85E4                      ;  a -      xxxxxMxx
     258.  00:85E4                      check_4th_keyboard_row:
     259.  00:85E4  F3                       di
     260.  00:85E5  DB AA                    in    a,(#aa)
     261.  00:85E7  E6 F0                    and    #f0
     262.  00:85E9  F6 04                    or    4
     263.  00:85EB  D3 AA                    out    (#aa),a
     264.  00:85ED  DB A9                    in    a,(#a9)
     265.  00:85EF  FB                       ei
     266.  00:85F0  2F                       cpl
     267.  00:85F1                      
     268.  00:85F1  C9                       ret
     269.  00:85F2                      
     270.  00:85F2                      ;--------------------------------------------
     271.  00:85F2                      
     272.  00:85F2                      
     273.  00:85F2                      
     274.  00:85F2                      
     275.  00:85F2                      
     276.  00:85F2                      
     277.  00:85F2                      
     278.  00:85F2                      
     114   00:85F2                      	
     115   00:85F2                      	include "subr_sonido.asm"
       1.  00:85F2                      
       2.  00:85F2                      ;;=====================================================
       3.  00:85F2                      ;;SUBRUTINAS PARA SONIDOS
       4.  00:85F2                      ;;=====================================================	
       5.  00:85F2                      
       6.  00:85F2                      ;;=====================================================
       7.  00:85F2                      ;;INICIALIZA_REPLAYER_EFECTOS_INTERRUPCIONES
       8.  00:85F2                      ;;=====================================================	
       9.  00:85F2                      ; función: 	inicializa: replayer de música, player de efectos e interrupciones
      10.  00:85F2                      ; entrada: 	-
      11.  00:85F2                      ; salida: 	-
      12.  00:85F2                      ; toca: 	HL, A
      13.  00:85F2                      inicializa_replayer_efectos_interrupciones:
      14.  00:85F2  F3                  	DI
      15.  00:85F3                      
      16.  00:85F3                      	;inicializacion de replayer musical
      17.  00:85F3  21 9B 8C            	LD		HL, song-99			; hl <- initial address of module - 99
      18.  00:85F6  CD 32 86            	CALL	PT3_INIT			; Inits PT3 player
      19.  00:85F9                      		
      20.  00:85F9                      	;inicializacion del reproductor de efectos sonoros
      21.  00:85F9  21 66 96            	LD		HL, sfx_bank
      22.  00:85FC  CD 21 8C            	CALL	ayFX_SETUP
      23.  00:85FF                      	
      24.  00:85FF                      	;Engancha nuestra rutina de servicio al gancha que deja preparado la BIOS cuando se termina de pintar la pantalla (50 o 60 veces por segundo)
      25.  00:85FF  3E C3               	LD		A, #C3
      26.  00:8601  32 9F FD            	LD		[H.TIMI], A
      27.  00:8604  21 0C 86            	LD		HL, subrutina_isr
      28.  00:8607  22 A0 FD            	LD		[H.TIMI+1], HL
      29.  00:860A                      	
      30.  00:860A  FB                  	EI		;optimizacion:
      31.  00:860B                      			;piensa que las dos ultimas lineas podrian haber sido: 
      32.  00:860B                      			;ei						;primero ei
      33.  00:860B                      			;ld		[H.TIMI+1],hl	;luego este ld
      34.  00:860B                      									;PENSAR (y consultar ) PORQUE!!!!
      35.  00:860B                      fin_inicializa_replayer_efectos_interrupciones:
      36.  00:860B  C9                  	RET
      37.  00:860C                      
      38.  00:860C                      
      39.  00:860C                      
      40.  00:860C                      ;;=====================================================
      41.  00:860C                      ;;NUESTRA_ISR
      42.  00:860C                      ;;=====================================================	
      43.  00:860C                      ; función: 	envía datos al PSG + toca un trozo de música + toca trozo de 
      44.  00:860C                      ; entrada: 	-
      45.  00:860C                      ; salida: 	-
      46.  00:860C                      ; toca: 	HL, A
      47.  00:860C                      subrutina_isr:
      48.  00:860C  CD 77 8B            	CALL	PT3_ROUT			;envia los datos a los registros del PSG
      49.  00:860F  CD 7F 8A            	CALL	PT3_PLAY			;calcula el siguiente 'trocito' de musica que sera enviado al proxima vez
      50.  00:8612  C3 69 8C            	JP		ayFX_PLAY			;calcula el siguiente 'trocito' de efecto especial de sonido que sera enviado la proxima vez
      51.  00:8615                      fin_subrutina_isr:
      52.  00:8615                      	;RET
      53.  00:8615                      
      54.  00:8615                      
      55.  00:8615                      
      56.  00:8615                      ;;=====================================================
      57.  00:8615                      ;;DEFINICIÓN DE SUBRUTINAS DE FERNANDO PARA COMPRESIÓN Y SONIDO
      58.  00:8615                      ;;=====================================================
      59.  00:8615                      subrutinas_sonido:
      60.  00:8615                      	include	"PT3-ROM_sjasm.asm"
       1:  00:8615                      		; --- PT3 REPLAYER WORKING ON ROM ---
       2:  00:8615                      		; --- Can be assembled with asMSX ---
       3:  00:8615                      		; --- ROM version: MSX-KUN        ---
       4:  00:8615                      		; --- asMSX version 2: SapphiRe   ---
       5:  00:8615                      
       6:  00:8615                      ; Based on MSX full version of PT3 by Dioniso
       7:  00:8615                      ;
       8:  00:8615                      ; This version of the replayer can be used with any note table
       9:  00:8615                      ; This version also allows the use of PT3 commands
      10:  00:8615                      ; First 99 bytes of each PT3 module should be stripped off
      11:  00:8615                      ;
      12:  00:8615                      ; PLAY and PSG WRITE routines seperated to allow independent calls
      13:  00:8615                      ;
      14:  00:8615                      ; ROM LENGTH: 1549 bytes
      15:  00:8615                      ; RAM LENGTH:  576 bytes
      16:  00:8615                      
      17:  00:8615                      
      18:  00:8615                      
      19:  00:8615                      ;SJASM version by BTV 2016
      20:  00:8615                      
      21:  00:8615                      
      22:  00:8615                      		; --- CONSTANT VALUES DEFINITION ---
      23:  00:8615                      
      24:  00:8615                      ;ChannelsVars
      25:  00:8615                      ;struc	CHNPRM
      26:  00:8615                      ;reset group
      27:  00:8615  (00:0000)           CHNPRM_PsInOr	equ 0	;RESB 1
      28:  00:8615  (00:0001)           CHNPRM_PsInSm	equ 1	;RESB 1
      29:  00:8615  (00:0002)           CHNPRM_CrAmSl	equ 2	;RESB 1
      30:  00:8615  (00:0003)           CHNPRM_CrNsSl	equ 3	;RESB 1
      31:  00:8615  (00:0004)           CHNPRM_CrEnSl	equ 4	;RESB 1
      32:  00:8615  (00:0005)           CHNPRM_TSlCnt	equ 5	;RESB 1
      33:  00:8615  (00:0006)           CHNPRM_CrTnSl	equ 6	;RESW 1
      34:  00:8615  (00:0008)           CHNPRM_TnAcc	equ 8	;RESW 1
      35:  00:8615  (00:000A)           CHNPRM_COnOff	equ 10	;RESB 1
      36:  00:8615                      ;reset group
      37:  00:8615                      
      38:  00:8615  (00:000B)           CHNPRM_OnOffD	equ 11	;RESB 1
      39:  00:8615                      
      40:  00:8615                      ;IX for PTDECOD here [+12]
      41:  00:8615  (00:000C)           CHNPRM_OffOnD	equ 12	;RESB 1
      42:  00:8615  (00:000D)           CHNPRM_OrnPtr	equ 13	;RESW 1
      43:  00:8615  (00:000F)           CHNPRM_SamPtr	equ 15	;RESW 1
      44:  00:8615  (00:0011)           CHNPRM_NNtSkp	equ 17	;RESB 1
      45:  00:8615  (00:0012)           CHNPRM_Note	equ 18	;RESB 1
      46:  00:8615  (00:0013)           CHNPRM_SlToNt	equ 19	;RESB 1
      47:  00:8615  (00:0014)           CHNPRM_Env_En	equ 20	;RESB 1
      48:  00:8615  (00:0015)           CHNPRM_Flags	equ 21	;RESB 1
      49:  00:8615                       ;Enabled - 0,SimpleGliss - 2
      50:  00:8615  (00:0016)           CHNPRM_TnSlDl	equ 22	;RESB 1
      51:  00:8615  (00:0017)           CHNPRM_TSlStp	equ 23	;RESW 1
      52:  00:8615  (00:0019)           CHNPRM_TnDelt	equ 25	;RESW 1
      53:  00:8615  (00:001B)           CHNPRM_NtSkCn	equ 27	;RESB 1
      54:  00:8615  (00:001C)           CHNPRM_Volume	equ 28	;RESB 1
      55:  00:8615  (00:001D)           CHNPRM_Size	equ 29	;RESB 1
      56:  00:8615                      ;endstruc
      57:  00:8615                      
      58:  00:8615                      ;struc	AR
      59:  00:8615  (00:0000)           AR_TonA		equ 0	;RESW 1
      60:  00:8615  (00:0002)           AR_TonB		equ 2	;RESW 1
      61:  00:8615  (00:0004)           AR_TonC		equ 4	;RESW 1
      62:  00:8615  (00:0006)           AR_Noise	equ 6	;RESB 1
      63:  00:8615  (00:0007)           AR_Mixer	equ 7	;RESB 1
      64:  00:8615  (00:0008)           AR_AmplA	equ 8	;RESB 1
      65:  00:8615  (00:0009)           AR_AmplB	equ 9	;RESB 1
      66:  00:8615  (00:000A)           AR_AmplC	equ 10	;RESB 1
      67:  00:8615  (00:000B)           AR_Env		equ 11	;RESW 1
      68:  00:8615  (00:000D)           AR_EnvTp	equ 13	;RESB 1
      69:  00:8615                      ;endstruc
      70:  00:8615                      
      71:  00:8615                      		; --- CODE STARTS HERE ---
      72:  00:8615                      
      73:  00:8615  21 00 F0            CHECKLP:	LD	HL,PT3_SETUP
      74:  00:8618  CB FE               		SET	7,[HL]
      75:  00:861A  CB 46               		BIT	0,[HL]
      76:  00:861C  C8                  		RET	Z
      77:  00:861D  E1                  		POP	HL
      78:  00:861E  21 7A F0            		LD	HL,DelyCnt
      79:  00:8621  34                  		INC	[HL]
      80:  00:8622  21 3E F0            		LD	HL,ChanA+CHNPRM_NtSkCn
      81:  00:8625  34                  		INC	[HL]
      82:  00:8626  AF                  PT3_MUTE:	XOR	A
      83:  00:8627  67                  		LD	H,A
      84:  00:8628  6F                  		LD	L,A
      85:  00:8629  32 48 F1            		LD	[AYREGS+AR_AmplA],A
      86:  00:862C  22 49 F1            		LD	[AYREGS+AR_AmplB],HL
      87:  00:862F  C3 78 8B            		JP	ROUT_A0
      88:  00:8632                      
      89:  00:8632                      PT3_INIT:	;HL - AddressOfModule - 100
      90:  00:8632  22 01 F0            		LD [PT3_MODADDR],HL
      91:  00:8635  E5                  		PUSH HL
      92:  00:8636  11 64 00            		LD DE,100
      93:  00:8639  19                  		ADD HL,DE
      94:  00:863A  7E                  		LD A,[HL]
      95:  00:863B  32 1C F0            		LD [PT3_Delay],A
      96:  00:863E  E5                  		PUSH HL
      97:  00:863F  DD E1               		POP IX
      98:  00:8641  19                  		ADD HL,DE
      99:  00:8642  22 03 F0            		LD [PT3_CrPsPtr],HL
     100:  00:8645  DD 5E 02            		LD E,[IX+102-100]
     101:  00:8648  19                  		ADD HL,DE
     102:  00:8649  23                  		INC HL
     103:  00:864A  22 18 F0            		LD [PT3_LPosPtr],HL
     104:  00:864D  D1                  		POP DE
     105:  00:864E  DD 6E 03            		LD L,[IX+103-100]
     106:  00:8651  DD 66 04            		LD H,[IX+104-100]
     107:  00:8654  19                  		ADD HL,DE
     108:  00:8655  22 1A F0            		LD [PT3_PatsPtr],HL
     109:  00:8658  21 A9 00            		LD HL,169
     110:  00:865B  19                  		ADD HL,DE
     111:  00:865C  22 07 F0            		LD [PT3_OrnPtrs],HL
     112:  00:865F  21 69 00            		LD HL,105
     113:  00:8662  19                  		ADD HL,DE
     114:  00:8663  22 05 F0            		LD [PT3_SAMPTRS],HL
     115:  00:8666  21 00 F0            		LD HL,PT3_SETUP
     116:  00:8669  CB BE               		RES 7,[HL]
     117:  00:866B                      
     118:  00:866B                      		; --- note table data depacker ---
     119:  00:866B                      		; Depacks first 12 tones of each tone table
     120:  00:866B                      
     121:  00:866B  11 EC 8B            		LD DE,T_PACK
     122:  00:866E  01 B1 F1            		LD BC,T1_+(2*49)-1
     123:  00:8671  1A                  .TP_0:		LD A,[DE]
     124:  00:8672  13                  		INC DE
     125:  00:8673  FE 1E               		CP 15*2
     126:  00:8675  30 06               		JR NC,.TP_1
     127:  00:8677  67                  		LD H,A
     128:  00:8678  1A                  		LD A,[DE]
     129:  00:8679  6F                  		LD L,A
     130:  00:867A  13                  		INC DE
     131:  00:867B  18 07               		JR .TP_2
     132:  00:867D  D5                  .TP_1:		PUSH DE
     133:  00:867E  16 00               		LD D,0
     134:  00:8680  5F                  		LD E,A
     135:  00:8681  19                  		ADD HL,DE
     136:  00:8682  19                  		ADD HL,DE
     137:  00:8683  D1                  		POP DE
     138:  00:8684  7C                  .TP_2:		LD A,H
     139:  00:8685  02                  		LD [BC],A
     140:  00:8686  0B                  		DEC BC
     141:  00:8687  7D                  		LD A,L
     142:  00:8688  02                  		LD [BC],A
     143:  00:8689  0B                  		DEC BC
     144:  00:868A  D6 F0               		SUB $F0
     145:  00:868C  20 E3               		JR NZ,.TP_0
     146:  00:868E                      
     147:  00:868E                      		; --- INITIALIZE PT3 VARIABLES ---
     148:  00:868E  21 23 F0            		LD HL,VARS
     149:  00:8691  77                  		LD [HL],A
     150:  00:8692  11 24 F0            		LD DE,VARS+1
     151:  00:8695  01 2C 01            		LD BC,VAR0END-VARS-1
     152:  00:8698  ED B0               		LDIR
     153:  00:869A                      
     154:  00:869A  3C                  		INC A
     155:  00:869B  32 7A F0            		LD [DelyCnt],A
     156:  00:869E  21 01 F0            		LD HL,$F001 ;H - CHNPRM_Volume, L - CHNPRM_NtSkCn
     157:  00:86A1  22 3E F0            		LD [ChanA+CHNPRM_NtSkCn],HL
     158:  00:86A4  22 5B F0            		LD [ChanB+CHNPRM_NtSkCn],HL
     159:  00:86A7  22 78 F0            		LD [ChanC+CHNPRM_NtSkCn],HL
     160:  00:86AA                      
     161:  00:86AA  21 E8 8B            		LD HL,EMPTYSAMORN
     162:  00:86AD  22 12 F0            		LD [PT3_AdInPtA],HL ;ptr to zero
     163:  00:86B0  22 30 F0            		LD [ChanA+CHNPRM_OrnPtr],HL ;ornament 0 is "0,1,0"
     164:  00:86B3  22 4D F0            		LD [ChanB+CHNPRM_OrnPtr],HL ;in all versions from
     165:  00:86B6  22 6A F0            		LD [ChanC+CHNPRM_OrnPtr],HL ;3.xx to 3.6x and VTII
     166:  00:86B9                      
     167:  00:86B9  22 32 F0            		LD [ChanA+CHNPRM_SamPtr],HL ;S1 There is no default
     168:  00:86BC  22 4F F0            		LD [ChanB+CHNPRM_SamPtr],HL ;S2 sample in PT3, so, you
     169:  00:86BF  22 6C F0            		LD [ChanC+CHNPRM_SamPtr],HL ;S3 can comment S1,2,3; see
     170:  00:86C2                      					    ;also EMPTYSAMORN comment
     171:  00:86C2                      
     172:  00:86C2                      		; --- NOTE TABLE CREATOR (c) Ivan Roshin, adapted by SapphiRe ---
     173:  00:86C2  DD 7E FF            		LD A,[IX+99-100] ;TONE TABLE NUMBER
     174:  00:86C5  17                  		RLA
     175:  00:86C6  E6 07               		AND 7
     176:  00:86C8  21 98 8B            		LD HL,NT_DATA
     177:  00:86CB  D5                  		PUSH DE
     178:  00:86CC  50                  		LD D,B		; ld d,0 (bc is 0000 after LDIR)
     179:  00:86CD  87                  		ADD A,A
     180:  00:86CE  5F                  		LD E,A
     181:  00:86CF  19                  		ADD HL,DE	; hl -> init of correct note table data
     182:  00:86D0  5E                  		LD E,[HL]
     183:  00:86D1  23                  		INC HL
     184:  00:86D2  CB 3B               		SRL E
     185:  00:86D4  9F                  		SBC A,A
     186:  00:86D5  E6 A7               		AND $A7			;$00 (NOP) or $A7 (AND A)
     187:  00:86D7  32 21 F0            		LD [PT3_NTL3],A		; CORRECT INSTRUCTION, DEPENDS OF SELECTED TABLE
     188:  00:86DA  3E C9               		LD A,$C9		; RET CODE
     189:  00:86DC  32 22 F0            		LD [PT3_NTL3+1],A	; RET PLACED
     190:  00:86DF  EB                  		EX DE,HL
     191:  00:86E0  C1                  		POP BC ;BC=T1_
     192:  00:86E1  09                  		ADD HL,BC
     193:  00:86E2                      
     194:  00:86E2  1A                  		LD A,[DE]                           
     195:  00:86E3                      
     196:  00:86E3  01 A8 8B            		LD BC,T_
     197:  00:86E6  81                  		ADD A,C
     198:  00:86E7  4F                  		LD C,A
     199:  00:86E8  88                  		ADC A,B
     200:  00:86E9                      
     201:  00:86E9  91                  		SUB C
     202:  00:86EA  47                  		LD B,A
     203:  00:86EB  C5                  		PUSH BC
     204:  00:86EC  11 80 F0            		LD DE,NT_
     205:  00:86EF  D5                  		PUSH DE
     206:  00:86F0                      
     207:  00:86F0  06 0C               		LD B,12
     208:  00:86F2  C5                  .L1:		PUSH BC
     209:  00:86F3  4E                  		LD C,[HL]
     210:  00:86F4  23                  		INC HL
     211:  00:86F5  E5                  		PUSH HL
     212:  00:86F6  46                  		LD B,[HL]
     213:  00:86F7                      
     214:  00:86F7  D5                  		PUSH DE
     215:  00:86F8  EB                  		EX DE,HL
     216:  00:86F9  11 17 00            		LD DE,23
     217:  00:86FC  DD 26 08            		db $DD,$26,$08	;LD XH,8
     218:  00:86FF                      
     219:  00:86FF  CB 38               .L2:		SRL B
     220:  00:8701  CB 19               		RR C
     221:  00:8703  CD 21 F0            .L3:		CALL PT3_NTL3	;AND A or NOP
     222:  00:8706  79                  		LD A,C
     223:  00:8707  8A                  		ADC A,D	;=ADC 0
     224:  00:8708  77                  		LD [HL],A
     225:  00:8709  23                  		INC HL
     226:  00:870A  78                  		LD A,B
     227:  00:870B  8A                  		ADC A,D
     228:  00:870C  77                  		LD [HL],A
     229:  00:870D  19                  		ADD HL,DE
     230:  00:870E  DD 25               		db $DD,$25	;DEC XH
     231:  00:8710  20 ED               		JR NZ,.L2
     232:  00:8712                      
     233:  00:8712  D1                  		POP DE
     234:  00:8713  13                  		INC DE
     235:  00:8714  13                  		INC DE
     236:  00:8715  E1                  		POP HL
     237:  00:8716  23                  		INC HL
     238:  00:8717  C1                  		POP BC
     239:  00:8718  10 D8               		DJNZ .L1
     240:  00:871A                      
     241:  00:871A  E1                  		POP HL
     242:  00:871B  D1                  		POP DE
     243:  00:871C                      
     244:  00:871C  7B                  		LD A,E
     245:  00:871D  D5                  		PUSH DE
     246:  00:871E  11 B4 8B            		LD DE,TCOLD_1
     247:  00:8721  BB                  		CP E
     248:  00:8722  D1                  		POP DE
     249:  00:8723  20 05               		JR NZ,.CORR_1
     250:  00:8725  3E FD               		LD A,$FD
     251:  00:8727  32 AE F0            		LD [NT_+$2E],A
     252:  00:872A                      
     253:  00:872A  1A                  .CORR_1:	LD A,[DE]
     254:  00:872B  A7                  		AND A
     255:  00:872C  28 11               		JR Z,.TC_EXIT
     256:  00:872E  1F                  		RRA
     257:  00:872F  F5                  		PUSH AF
     258:  00:8730  87                  		ADD A,A
     259:  00:8731  4F                  		LD C,A
     260:  00:8732  09                  		ADD HL,BC
     261:  00:8733  F1                  		POP AF
     262:  00:8734  30 02               		JR NC,.CORR_2
     263:  00:8736  35                  		DEC [HL]
     264:  00:8737  35                  		DEC [HL]
     265:  00:8738  34                  .CORR_2:	INC [HL]
     266:  00:8739  A7                  		AND A
     267:  00:873A  ED 42               		SBC HL,BC
     268:  00:873C  13                  		INC DE
     269:  00:873D  18 EB               		JR .CORR_1
     270:  00:873F                      
     271:  00:873F                      .TC_EXIT:	;POP AF
     272:  00:873F                      
     273:  00:873F                      		; --- CREATE PT3 VOLUME TABLE (c) Ivan Roshin, adapted by SapphiRe ---
     274:  00:873F  21 11 00            		ld	hl,$11
     275:  00:8742  54                  		ld	d,h
     276:  00:8743  5C                  		ld	e,h
     277:  00:8744  DD 21 50 F1         		ld	IX,VT_+16
     278:  00:8748  06 0F               		ld	b,15
     279:  00:874A  E5                  .INITV1:	push	hl
     280:  00:874B  19                  		add	hl,de
     281:  00:874C  EB                  		ex	de,hl
     282:  00:874D  ED 62               		sbc	hl,hl
     283:  00:874F  48                  		ld	c,b
     284:  00:8750  06 10               		ld	b,16
     285:  00:8752  7D                  .INITV2:	ld	a,l
     286:  00:8753  17                  		rla
     287:  00:8754  7C                  		ld	a,h
     288:  00:8755  CE 00               		adc	a,0
     289:  00:8757  DD 77 00            		ld	[ix],a
     290:  00:875A  DD 23               		inc	ix
     291:  00:875C  19                  		add	hl,de
     292:  00:875D  10 F3               		djnz	.INITV2
     293:  00:875F  E1                  		pop	hl
     294:  00:8760  7B                  		ld	a,e
     295:  00:8761  FE 77               		cp	$77
     296:  00:8763  20 01               		jr	nz,.INITV3
     297:  00:8765  1C                  		inc	e
     298:  00:8766  41                  .INITV3:	ld	b,c
     299:  00:8767  10 E1               		djnz	.INITV1
     300:  00:8769                      
     301:  00:8769  C9                  		RET
     302:  00:876A                      
     303:  00:876A                      		;pattern decoder
     304:  00:876A  DD 36 08 00         PD_OrSm:	LD [IX+(CHNPRM_Env_En-12)],0
     305:  00:876E  CD F4 88            		CALL SETORN
     306:  00:8771  0A                  		LD A,[BC]
     307:  00:8772  03                  		INC BC
     308:  00:8773  0F                  		RRCA
     309:  00:8774                      
     310:  00:8774  87                  PD_SAM:		ADD A,A
     311:  00:8775  5F                  PD_SAM_:	LD E,A
     312:  00:8776  16 00               		LD D,0
     313:  00:8778  2A 05 F0            		LD HL,[PT3_SAMPTRS]
     314:  00:877B  19                  		ADD HL,DE
     315:  00:877C  5E                  		LD E,[HL]
     316:  00:877D  23                  		INC HL
     317:  00:877E  56                  		LD D,[HL]
     318:  00:877F  2A 01 F0            		LD HL,[PT3_MODADDR]
     319:  00:8782  19                  		ADD HL,DE
     320:  00:8783  DD 75 03            		LD [IX+(CHNPRM_SamPtr-12)],L
     321:  00:8786  DD 74 04            		LD [IX+(CHNPRM_SamPtr+1-12)],H
     322:  00:8789  18 41               		JR PD_LOOP
     323:  00:878B                      
     324:  00:878B  07                  PD_VOL:		RLCA
     325:  00:878C  07                  		RLCA
     326:  00:878D  07                  		RLCA
     327:  00:878E  07                  		RLCA
     328:  00:878F  DD 77 10            		LD [IX+(CHNPRM_Volume-12)],A
     329:  00:8792  18 3B               		JR PD_LP2
     330:  00:8794                      	
     331:  00:8794  DD 77 08            PD_EOff:	LD [IX+(CHNPRM_Env_En-12)],A
     332:  00:8797  DD 77 F4            		LD [IX+(CHNPRM_PsInOr-12)],A
     333:  00:879A  18 33               		JR PD_LP2
     334:  00:879C                      
     335:  00:879C  3D                  PD_SorE:	DEC A
     336:  00:879D  20 07               		JR NZ,PD_ENV
     337:  00:879F  0A                  		LD A,[BC]
     338:  00:87A0  03                  		INC BC
     339:  00:87A1  DD 77 05            		LD [IX+(CHNPRM_NNtSkp-12)],A
     340:  00:87A4  18 29               		JR PD_LP2
     341:  00:87A6                      
     342:  00:87A6  CD D8 88            PD_ENV:		CALL SETENV
     343:  00:87A9  18 24               		JR PD_LP2
     344:  00:87AB                      
     345:  00:87AB  CD F4 88            PD_ORN:		CALL SETORN
     346:  00:87AE  18 1C               		JR PD_LOOP
     347:  00:87B0                             
     348:  00:87B0  DD 77 08            PD_ESAM:	LD [IX+(CHNPRM_Env_En-12)],A
     349:  00:87B3  DD 77 F4            		LD [IX+(CHNPRM_PsInOr-12)],A
     350:  00:87B6  C4 D8 88            		CALL NZ,SETENV
     351:  00:87B9  0A                  		LD A,[BC]
     352:  00:87BA  03                  		INC BC
     353:  00:87BB  18 B8               		JR PD_SAM_
     354:  00:87BD                      
     355:  00:87BD  DD 7E 06            PTDECOD:	LD A,[IX+(CHNPRM_Note-12)]
     356:  00:87C0  32 0F F0            		LD [PT3_PrNote],A
     357:  00:87C3  DD 6E FA            		LD L,[IX+(CHNPRM_CrTnSl-12)]
     358:  00:87C6  DD 66 FB            		LD H,[IX+(CHNPRM_CrTnSl+1-12)]
     359:  00:87C9  22 10 F0            		LD [PT3_PrSlide],HL
     360:  00:87CC                      
     361:  00:87CC  11 10 20            PD_LOOP:	LD DE,$2010
     362:  00:87CF  0A                  PD_LP2:		LD A,[BC]
     363:  00:87D0  03                  		INC BC
     364:  00:87D1  83                  		ADD A,E
     365:  00:87D2  38 96               		JR C,PD_OrSm
     366:  00:87D4  82                  		ADD A,D
     367:  00:87D5  28 4A               		JR Z,PD_FIN
     368:  00:87D7  38 9B               		JR C,PD_SAM
     369:  00:87D9  83                  		ADD A,E
     370:  00:87DA  28 25               		JR Z,PD_REL
     371:  00:87DC  38 AD               		JR C,PD_VOL
     372:  00:87DE  83                  		ADD A,E
     373:  00:87DF  28 B3               		JR Z,PD_EOff
     374:  00:87E1  38 B9               		JR C,PD_SorE
     375:  00:87E3  C6 60               		ADD A,96
     376:  00:87E5  38 20               		JR C,PD_NOTE
     377:  00:87E7  83                  		ADD A,E
     378:  00:87E8  38 C1               		JR C,PD_ORN
     379:  00:87EA  82                  		ADD A,D
     380:  00:87EB  38 0F               		JR C,PD_NOIS
     381:  00:87ED  83                  		ADD A,E
     382:  00:87EE  38 C0               		JR C,PD_ESAM
     383:  00:87F0  87                  		ADD A,A
     384:  00:87F1  5F                  		LD E,A
     385:  00:87F2  21 2D 68            		LD HL,(SPCCOMS+$DF20) % 65536	; Adapted from original Speccy version (saves 6 bytes)
     386:  00:87F5  19                  		ADD HL,DE
     387:  00:87F6  5E                  		LD E,[HL]
     388:  00:87F7  23                  		INC HL
     389:  00:87F8  56                  		LD D,[HL]
     390:  00:87F9  D5                  		PUSH DE
     391:  00:87FA  18 D0               		JR PD_LOOP
     392:  00:87FC                      
     393:  00:87FC  32 7E F0            PD_NOIS:	LD [Ns_Base],A
     394:  00:87FF  18 CE               		JR PD_LP2
     395:  00:8801                      
     396:  00:8801  DD CB 09 86         PD_REL:		RES 0,[IX+(CHNPRM_Flags-12)]
     397:  00:8805  18 08               		JR PD_RES
     398:  00:8807                      	
     399:  00:8807  DD 77 06            PD_NOTE:	LD [IX+(CHNPRM_Note-12)],A
     400:  00:880A  DD CB 09 C6         		SET 0,[IX+(CHNPRM_Flags-12)]
     401:  00:880E  AF                  		XOR A
     402:  00:880F                      
     403:  00:880F  ED 73 09 F0         PD_RES:		LD [PT3_PDSP],SP
     404:  00:8813  DD F9               		LD SP,IX
     405:  00:8815  67                  		LD H,A
     406:  00:8816  6F                  		LD L,A
     407:  00:8817  E5                  		PUSH HL
     408:  00:8818  E5                  		PUSH HL
     409:  00:8819  E5                  		PUSH HL
     410:  00:881A  E5                  		PUSH HL
     411:  00:881B  E5                  		PUSH HL
     412:  00:881C  E5                  		PUSH HL
     413:  00:881D  ED 7B 09 F0         		LD SP,[PT3_PDSP]
     414:  00:8821                      
     415:  00:8821  DD 7E 05            PD_FIN:		LD A,[IX+(CHNPRM_NNtSkp-12)]
     416:  00:8824  DD 77 0F            		LD [IX+(CHNPRM_NtSkCn-12)],A
     417:  00:8827  C9                  		RET
     418:  00:8828                      
     419:  00:8828  DD CB 09 96         C_PORTM:	RES 2,[IX+(CHNPRM_Flags-12)]
     420:  00:882C  0A                  		LD A,[BC]
     421:  00:882D  03                  		INC BC
     422:  00:882E                      		;SKIP PRECALCULATED TONE DELTA [BECAUSE
     423:  00:882E                      		;CANNOT BE RIGHT AFTER PT3 COMPILATION]
     424:  00:882E  03                  		INC BC
     425:  00:882F  03                  		INC BC
     426:  00:8830  DD 77 0A            		LD [IX+(CHNPRM_TnSlDl-12)],A
     427:  00:8833  DD 77 F9            		LD [IX+(CHNPRM_TSlCnt-12)],A
     428:  00:8836  11 80 F0            		LD DE,NT_
     429:  00:8839  DD 7E 06            		LD A,[IX+(CHNPRM_Note-12)]
     430:  00:883C  DD 77 07            		LD [IX+(CHNPRM_SlToNt-12)],A
     431:  00:883F  87                  		ADD A,A
     432:  00:8840  6F                  		LD L,A
     433:  00:8841  26 00               		LD H,0
     434:  00:8843  19                  		ADD HL,DE
     435:  00:8844  7E                  		LD A,[HL]
     436:  00:8845  23                  		INC HL
     437:  00:8846  66                  		LD H,[HL]
     438:  00:8847  6F                  		LD L,A
     439:  00:8848  E5                  		PUSH HL
     440:  00:8849  3A 0F F0            		LD A,[PT3_PrNote]
     441:  00:884C  DD 77 06            		LD [IX+(CHNPRM_Note-12)],A
     442:  00:884F  87                  		ADD A,A
     443:  00:8850  6F                  		LD L,A
     444:  00:8851  26 00               		LD H,0
     445:  00:8853  19                  		ADD HL,DE
     446:  00:8854  5E                  		LD E,[HL]
     447:  00:8855  23                  		INC HL
     448:  00:8856  56                  		LD D,[HL]
     449:  00:8857  E1                  		POP HL
     450:  00:8858  ED 52               		SBC HL,DE
     451:  00:885A  DD 75 0D            		LD [IX+(CHNPRM_TnDelt-12)],L
     452:  00:885D  DD 74 0E            		LD [IX+(CHNPRM_TnDelt+1-12)],H
     453:  00:8860  ED 5B 10 F0         		LD DE,[PT3_PrSlide]
     454:  00:8864  DD 73 FA            		LD [IX+(CHNPRM_CrTnSl-12)],E
     455:  00:8867  DD 72 FB            		LD [IX+(CHNPRM_CrTnSl+1-12)],D
     456:  00:886A  0A                  		LD A,[BC] ;SIGNED TONE STEP
     457:  00:886B  03                  		INC BC
     458:  00:886C  08                  		EX AF,AF'
     459:  00:886D  0A                  		LD A,[BC]
     460:  00:886E  03                  		INC BC
     461:  00:886F  A7                  		AND A
     462:  00:8870  28 01               		JR Z,.NOSIG
     463:  00:8872  EB                  		EX DE,HL
     464:  00:8873  ED 52               .NOSIG:	SBC HL,DE
     465:  00:8875  F2 7D 88            		JP P,SET_STP
     466:  00:8878  2F                  		CPL
     467:  00:8879  08                  		EX AF,AF'
     468:  00:887A  ED 44               		NEG
     469:  00:887C  08                  		EX AF,AF'
     470:  00:887D  DD 77 0C            SET_STP:	LD [IX+(CHNPRM_TSlStp+1-12)],A
     471:  00:8880  08                  		EX AF,AF'
     472:  00:8881  DD 77 0B            		LD [IX+(CHNPRM_TSlStp-12)],A
     473:  00:8884  DD 36 FE 00         		LD [IX+(CHNPRM_COnOff-12)],0
     474:  00:8888  C9                  		RET
     475:  00:8889                      
     476:  00:8889  DD CB 09 D6         C_GLISS:	SET 2,[IX+(CHNPRM_Flags-12)]
     477:  00:888D  0A                  		LD A,[BC]
     478:  00:888E  03                  		INC BC
     479:  00:888F  DD 77 0A            		LD [IX+(CHNPRM_TnSlDl-12)],A
     480:  00:8892  DD 77 F9            		LD [IX+(CHNPRM_TSlCnt-12)],A
     481:  00:8895  0A                  		LD A,[BC]
     482:  00:8896  03                  		INC BC
     483:  00:8897  08                  		EX AF,AF'
     484:  00:8898  0A                  		LD A,[BC]
     485:  00:8899  03                  		INC BC
     486:  00:889A  18 E1               		JR SET_STP
     487:  00:889C                      
     488:  00:889C  0A                  C_SMPOS:	LD A,[BC]
     489:  00:889D  03                  		INC BC
     490:  00:889E  DD 77 F5            		LD [IX+(CHNPRM_PsInSm-12)],A
     491:  00:88A1  C9                  		RET
     492:  00:88A2                      
     493:  00:88A2  0A                  C_ORPOS:	LD A,[BC]
     494:  00:88A3  03                  		INC BC
     495:  00:88A4  DD 77 F4            		LD [IX+(CHNPRM_PsInOr-12)],A
     496:  00:88A7  C9                  		RET
     497:  00:88A8                      
     498:  00:88A8  0A                  C_VIBRT:	LD A,[BC]
     499:  00:88A9  03                  		INC BC
     500:  00:88AA  DD 77 FF            		LD [IX+(CHNPRM_OnOffD-12)],A
     501:  00:88AD  DD 77 FE            		LD [IX+(CHNPRM_COnOff-12)],A
     502:  00:88B0  0A                  		LD A,[BC]
     503:  00:88B1  03                  		INC BC
     504:  00:88B2  DD 77 00            		LD [IX+(CHNPRM_OffOnD-12)],A
     505:  00:88B5  AF                  		XOR A
     506:  00:88B6  DD 77 F9            		LD [IX+(CHNPRM_TSlCnt-12)],A
     507:  00:88B9  DD 77 FA            		LD [IX+(CHNPRM_CrTnSl-12)],A
     508:  00:88BC  DD 77 FB            		LD [IX+(CHNPRM_CrTnSl+1-12)],A
     509:  00:88BF  C9                  		RET
     510:  00:88C0                      
     511:  00:88C0  0A                  C_ENGLS:	LD A,[BC]
     512:  00:88C1  03                  		INC BC
     513:  00:88C2  32 1E F0            		LD [PT3_Env_Del],A
     514:  00:88C5  32 7D F0            		LD [CurEDel],A
     515:  00:88C8  0A                  		LD A,[BC]
     516:  00:88C9  03                  		INC BC
     517:  00:88CA  6F                  		LD L,A
     518:  00:88CB  0A                  		LD A,[BC]
     519:  00:88CC  03                  		INC BC
     520:  00:88CD  67                  		LD H,A
     521:  00:88CE  22 1F F0            		LD [PT3_ESldAdd],HL
     522:  00:88D1  C9                  		RET
     523:  00:88D2                      
     524:  00:88D2  0A                  C_DELAY:	LD A,[BC]
     525:  00:88D3  03                  		INC BC
     526:  00:88D4  32 1C F0            		LD [PT3_Delay],A
     527:  00:88D7  C9                  		RET
     528:  00:88D8                      	
     529:  00:88D8  DD 73 08            SETENV:		LD [IX+(CHNPRM_Env_En-12)],E
     530:  00:88DB  32 4D F1            		LD [AYREGS+AR_EnvTp],A
     531:  00:88DE  0A                  		LD A,[BC]
     532:  00:88DF  03                  		INC BC
     533:  00:88E0  67                  		LD H,A
     534:  00:88E1  0A                  		LD A,[BC]
     535:  00:88E2  03                  		INC BC
     536:  00:88E3  6F                  		LD L,A
     537:  00:88E4  22 4E F1            		LD [EnvBase],HL
     538:  00:88E7  AF                  		XOR A
     539:  00:88E8  DD 77 F4            		LD [IX+(CHNPRM_PsInOr-12)],A
     540:  00:88EB  32 7D F0            		LD [CurEDel],A
     541:  00:88EE  67                  		LD H,A
     542:  00:88EF  6F                  		LD L,A
     543:  00:88F0  22 7B F0            		LD [CurESld],HL
     544:  00:88F3  C9                  C_NOP:		RET
     545:  00:88F4                      
     546:  00:88F4  87                  SETORN:		ADD A,A
     547:  00:88F5  5F                  		LD E,A
     548:  00:88F6  16 00               		LD D,0
     549:  00:88F8  DD 72 F4            		LD [IX+(CHNPRM_PsInOr-12)],D
     550:  00:88FB  2A 07 F0            		LD HL,[PT3_OrnPtrs]
     551:  00:88FE  19                  		ADD HL,DE
     552:  00:88FF  5E                  		LD E,[HL]
     553:  00:8900  23                  		INC HL
     554:  00:8901  56                  		LD D,[HL]
     555:  00:8902  2A 01 F0            		LD HL,[PT3_MODADDR]
     556:  00:8905  19                  		ADD HL,DE
     557:  00:8906  DD 75 01            		LD [IX+(CHNPRM_OrnPtr-12)],L
     558:  00:8909  DD 74 02            		LD [IX+(CHNPRM_OrnPtr+1-12)],H
     559:  00:890C  C9                  		RET
     560:  00:890D                      
     561:  00:890D                      		;ALL 16 ADDRESSES TO PROTECT FROM BROKEN PT3 MODULES
     562:  00:890D  F3 88               SPCCOMS:	dw C_NOP
     563:  00:890F  89 88               		dw C_GLISS
     564:  00:8911  28 88               		dw C_PORTM
     565:  00:8913  9C 88               		dw C_SMPOS
     566:  00:8915  A2 88               		dw C_ORPOS
     567:  00:8917  A8 88               		dw C_VIBRT
     568:  00:8919  F3 88               		dw C_NOP
     569:  00:891B  F3 88               		dw C_NOP
     570:  00:891D  C0 88               		dw C_ENGLS
     571:  00:891F  D2 88               		dw C_DELAY
     572:  00:8921  F3 88               		dw C_NOP
     573:  00:8923  F3 88               		dw C_NOP
     574:  00:8925  F3 88               		dw C_NOP
     575:  00:8927  F3 88               		dw C_NOP
     576:  00:8929  F3 88               		dw C_NOP
     577:  00:892B  F3 88               		dw C_NOP
     578:  00:892D                      
     579:  00:892D  AF                  CHREGS:		XOR A
     580:  00:892E  32 4A F1            		LD [AYREGS+AR_AmplC],A
     581:  00:8931  DD CB 15 46         		BIT 0,[IX+CHNPRM_Flags]
     582:  00:8935  E5                  		PUSH HL
     583:  00:8936  CA 5C 8A            		JP Z,.CH_EXIT
     584:  00:8939  ED 73 0B F0         		LD [PT3_CSP],SP
     585:  00:893D  DD 6E 0D            		LD L,[IX+CHNPRM_OrnPtr]
     586:  00:8940  DD 66 0E            		LD H,[IX+CHNPRM_OrnPtr+1]
     587:  00:8943  F9                  		LD SP,HL
     588:  00:8944  D1                  		POP DE
     589:  00:8945  67                  		LD H,A
     590:  00:8946  DD 7E 00            		LD A,[IX+CHNPRM_PsInOr]
     591:  00:8949  6F                  		LD L,A
     592:  00:894A  39                  		ADD HL,SP
     593:  00:894B  3C                  		INC A
     594:  00:894C  BA                  		CP D
     595:  00:894D  38 01               		JR C,.CH_ORPS
     596:  00:894F  7B                  		LD A,E
     597:  00:8950  DD 77 00            .CH_ORPS:	LD [IX+CHNPRM_PsInOr],A
     598:  00:8953  DD 7E 12            		LD A,[IX+CHNPRM_Note]
     599:  00:8956  86                  		ADD A,[HL]
     600:  00:8957  F2 5B 89            		JP P,.CH_NTP
     601:  00:895A  AF                  		XOR A
     602:  00:895B  FE 60               .CH_NTP:	CP 96
     603:  00:895D  38 02               		JR C,.CH_NOK
     604:  00:895F  3E 5F               		LD A,95
     605:  00:8961  87                  .CH_NOK:	ADD A,A
     606:  00:8962  08                  		EX AF,AF'
     607:  00:8963  DD 6E 0F            		LD L,[IX+CHNPRM_SamPtr]
     608:  00:8966  DD 66 10            		LD H,[IX+CHNPRM_SamPtr+1]
     609:  00:8969  F9                  		LD SP,HL
     610:  00:896A  D1                  		POP DE
     611:  00:896B  26 00               		LD H,0
     612:  00:896D  DD 7E 01            		LD A,[IX+CHNPRM_PsInSm]
     613:  00:8970  47                  		LD B,A
     614:  00:8971  87                  		ADD A,A
     615:  00:8972  87                  		ADD A,A
     616:  00:8973  6F                  		LD L,A
     617:  00:8974  39                  		ADD HL,SP
     618:  00:8975  F9                  		LD SP,HL
     619:  00:8976  78                  		LD A,B
     620:  00:8977  3C                  		INC A
     621:  00:8978  BA                  		CP D
     622:  00:8979  38 01               		JR C,.CH_SMPS
     623:  00:897B  7B                  		LD A,E
     624:  00:897C  DD 77 01            .CH_SMPS:	LD [IX+CHNPRM_PsInSm],A
     625:  00:897F  C1                  		POP BC
     626:  00:8980  E1                  		POP HL
     627:  00:8981  DD 5E 08            		LD E,[IX+CHNPRM_TnAcc]
     628:  00:8984  DD 56 09            		LD D,[IX+CHNPRM_TnAcc+1]
     629:  00:8987  19                  		ADD HL,DE
     630:  00:8988  CB 70               		BIT 6,B
     631:  00:898A  28 06               		JR Z,.CH_NOAC
     632:  00:898C  DD 75 08            		LD [IX+CHNPRM_TnAcc],L
     633:  00:898F  DD 74 09            		LD [IX+CHNPRM_TnAcc+1],H
     634:  00:8992  EB                  .CH_NOAC:	EX DE,HL
     635:  00:8993  08                  		EX AF,AF'
     636:  00:8994  6F                  		LD L,A
     637:  00:8995  26 00               		LD H,0
     638:  00:8997  31 80 F0            		LD SP,NT_
     639:  00:899A  39                  		ADD HL,SP
     640:  00:899B  F9                  		LD SP,HL
     641:  00:899C  E1                  		POP HL
     642:  00:899D  19                  		ADD HL,DE
     643:  00:899E  DD 5E 06            		LD E,[IX+CHNPRM_CrTnSl]
     644:  00:89A1  DD 56 07            		LD D,[IX+CHNPRM_CrTnSl+1]
     645:  00:89A4  19                  		ADD HL,DE
     646:  00:89A5  ED 7B 0B F0         		LD SP,[PT3_CSP]
     647:  00:89A9  E3                  		EX [SP],HL
     648:  00:89AA  AF                  		XOR A
     649:  00:89AB  DD B6 05            		OR [IX+CHNPRM_TSlCnt]
     650:  00:89AE  28 3E               		JR Z,.CH_AMP
     651:  00:89B0  DD 35 05            		DEC [IX+CHNPRM_TSlCnt]
     652:  00:89B3  20 39               		JR NZ,.CH_AMP
     653:  00:89B5  DD 7E 16            		LD A,[IX+CHNPRM_TnSlDl]
     654:  00:89B8  DD 77 05            		LD [IX+CHNPRM_TSlCnt],A
     655:  00:89BB  DD 6E 17            		LD L,[IX+CHNPRM_TSlStp]
     656:  00:89BE  DD 66 18            		LD H,[IX+CHNPRM_TSlStp+1]
     657:  00:89C1  7C                  		LD A,H
     658:  00:89C2  19                  		ADD HL,DE
     659:  00:89C3  DD 75 06            		LD [IX+CHNPRM_CrTnSl],L
     660:  00:89C6  DD 74 07            		LD [IX+CHNPRM_CrTnSl+1],H
     661:  00:89C9  DD CB 15 56         		BIT 2,[IX+CHNPRM_Flags]
     662:  00:89CD  20 1F               		JR NZ,.CH_AMP
     663:  00:89CF  DD 5E 19            		LD E,[IX+CHNPRM_TnDelt]
     664:  00:89D2  DD 56 1A            		LD D,[IX+CHNPRM_TnDelt+1]
     665:  00:89D5  A7                  		AND A
     666:  00:89D6  28 01               		JR Z,.CH_STPP
     667:  00:89D8  EB                  		EX DE,HL
     668:  00:89D9  ED 52               .CH_STPP:	SBC HL,DE
     669:  00:89DB  FA EE 89            		JP M,.CH_AMP
     670:  00:89DE  DD 7E 13            		LD A,[IX+CHNPRM_SlToNt]
     671:  00:89E1  DD 77 12            		LD [IX+CHNPRM_Note],A
     672:  00:89E4  AF                  		XOR A
     673:  00:89E5  DD 77 05            		LD [IX+CHNPRM_TSlCnt],A
     674:  00:89E8  DD 77 06            		LD [IX+CHNPRM_CrTnSl],A
     675:  00:89EB  DD 77 07            		LD [IX+CHNPRM_CrTnSl+1],A
     676:  00:89EE  DD 7E 02            .CH_AMP:	LD A,[IX+CHNPRM_CrAmSl]
     677:  00:89F1  CB 79               		BIT 7,C
     678:  00:89F3  28 13               		JR Z,.CH_NOAM
     679:  00:89F5  CB 71               		BIT 6,C
     680:  00:89F7  28 07               		JR Z,.CH_AMIN
     681:  00:89F9  FE 0F               		CP 15
     682:  00:89FB  28 0B               		JR Z,.CH_NOAM
     683:  00:89FD  3C                  		INC A
     684:  00:89FE  18 05               		JR .CH_SVAM
     685:  00:8A00  FE F1               .CH_AMIN:	CP -15
     686:  00:8A02  28 04               		JR Z,.CH_NOAM
     687:  00:8A04  3D                  		DEC A
     688:  00:8A05  DD 77 02            .CH_SVAM:	LD [IX+CHNPRM_CrAmSl],A
     689:  00:8A08  6F                  .CH_NOAM:	LD L,A
     690:  00:8A09  78                  		LD A,B
     691:  00:8A0A  E6 0F               		AND 15
     692:  00:8A0C  85                  		ADD A,L
     693:  00:8A0D  F2 11 8A            		JP P,.CH_APOS
     694:  00:8A10  AF                  		XOR A
     695:  00:8A11  FE 10               .CH_APOS:	CP 16
     696:  00:8A13  38 02               		JR C,.CH_VOL
     697:  00:8A15  3E 0F               		LD A,15
     698:  00:8A17  DD B6 1C            .CH_VOL:	OR [IX+CHNPRM_Volume]
     699:  00:8A1A  6F                  		LD L,A
     700:  00:8A1B  26 00               		LD H,0
     701:  00:8A1D  11 40 F1            		LD DE,VT_
     702:  00:8A20  19                  		ADD HL,DE
     703:  00:8A21  7E                  		LD A,[HL]
     704:  00:8A22  CB 41               .CH_ENV:	BIT 0,C
     705:  00:8A24  20 03               		JR NZ,.CH_NOEN
     706:  00:8A26  DD B6 14            		OR [IX+CHNPRM_Env_En]
     707:  00:8A29  32 4A F1            .CH_NOEN:	LD [AYREGS+AR_AmplC],A
     708:  00:8A2C  CB 78               		BIT 7,B
     709:  00:8A2E  79                  		LD A,C
     710:  00:8A2F  28 19               		JR Z,.NO_ENSL
     711:  00:8A31  17                  		RLA
     712:  00:8A32  17                  		RLA
     713:  00:8A33  CB 2F               		SRA A
     714:  00:8A35  CB 2F               		SRA A
     715:  00:8A37  CB 2F               		SRA A
     716:  00:8A39  DD 86 04            		ADD A,[IX+CHNPRM_CrEnSl] ;SEE COMMENT BELOW
     717:  00:8A3C  CB 68               		BIT 5,B
     718:  00:8A3E  28 03               		JR Z,.NO_ENAC
     719:  00:8A40  DD 77 04            		LD [IX+CHNPRM_CrEnSl],A
     720:  00:8A43  21 1D F0            .NO_ENAC:	LD HL,PT3_AddToEn
     721:  00:8A46  86                  		ADD A,[HL] ;BUG IN PT3 - NEED WORD HERE.
     722:  00:8A47                      			   ;FIX IT IN NEXT VERSION?
     723:  00:8A47  77                  		LD [HL],A
     724:  00:8A48  18 0E               		JR .CH_MIX
     725:  00:8A4A  1F                  .NO_ENSL:	RRA
     726:  00:8A4B  DD 86 03            		ADD A,[IX+CHNPRM_CrNsSl]
     727:  00:8A4E  32 7F F0            		LD [AddToNs],A
     728:  00:8A51  CB 68               		BIT 5,B
     729:  00:8A53  28 03               		JR Z,.CH_MIX
     730:  00:8A55  DD 77 03            		LD [IX+CHNPRM_CrNsSl],A
     731:  00:8A58  78                  .CH_MIX:	LD A,B
     732:  00:8A59  1F                  		RRA
     733:  00:8A5A  E6 48               		AND $48
     734:  00:8A5C  21 47 F1            .CH_EXIT:	LD HL,AYREGS+AR_Mixer
     735:  00:8A5F  B6                  		OR [HL]
     736:  00:8A60  0F                  		RRCA
     737:  00:8A61  77                  		LD [HL],A
     738:  00:8A62  E1                  		POP HL
     739:  00:8A63  AF                  		XOR A
     740:  00:8A64  DD B6 0A            		OR [IX+CHNPRM_COnOff]
     741:  00:8A67  C8                  		RET Z
     742:  00:8A68  DD 35 0A            		DEC [IX+CHNPRM_COnOff]
     743:  00:8A6B  C0                  		RET NZ
     744:  00:8A6C  DD AE 15            		XOR [IX+CHNPRM_Flags]
     745:  00:8A6F  DD 77 15            		LD [IX+CHNPRM_Flags],A
     746:  00:8A72  1F                  		RRA
     747:  00:8A73  DD 7E 0B            		LD A,[IX+CHNPRM_OnOffD]
     748:  00:8A76  38 03               		JR C,.CH_ONDL
     749:  00:8A78  DD 7E 0C            		LD A,[IX+CHNPRM_OffOnD]
     750:  00:8A7B  DD 77 0A            .CH_ONDL:	LD [IX+CHNPRM_COnOff],A
     751:  00:8A7E  C9                  		RET
     752:  00:8A7F                      
     753:  00:8A7F  AF                  PT3_PLAY:	XOR A
     754:  00:8A80  32 1D F0            		LD [PT3_AddToEn],A
     755:  00:8A83  32 47 F1            		LD [AYREGS+AR_Mixer],A
     756:  00:8A86  3D                  		DEC A
     757:  00:8A87  32 4D F1            		LD [AYREGS+AR_EnvTp],A
     758:  00:8A8A  21 7A F0            		LD HL,DelyCnt
     759:  00:8A8D  35                  		DEC [HL]
     760:  00:8A8E  C2 15 8B            		JP NZ,.PL2
     761:  00:8A91  21 3E F0            		LD HL,ChanA+CHNPRM_NtSkCn
     762:  00:8A94  35                  		DEC [HL]
     763:  00:8A95  20 4E               		JR NZ,.PL1B
     764:  00:8A97  ED 4B 12 F0         		LD BC,[PT3_AdInPtA]
     765:  00:8A9B  0A                  		LD A,[BC]
     766:  00:8A9C  A7                  		AND A
     767:  00:8A9D  20 3B               		JR NZ,.PL1A
     768:  00:8A9F  57                  		LD D,A
     769:  00:8AA0  32 7E F0            		LD [Ns_Base],A
     770:  00:8AA3  2A 03 F0            		LD HL,[PT3_CrPsPtr]
     771:  00:8AA6  23                  		INC HL
     772:  00:8AA7  7E                  		LD A,[HL]
     773:  00:8AA8  3C                  		INC A
     774:  00:8AA9  20 08               		JR NZ,.PLNLP
     775:  00:8AAB  CD 15 86            		CALL CHECKLP
     776:  00:8AAE  2A 18 F0            		LD HL,[PT3_LPosPtr]
     777:  00:8AB1  7E                  		LD A,[HL]
     778:  00:8AB2  3C                  		INC A
     779:  00:8AB3  22 03 F0            .PLNLP:	LD [PT3_CrPsPtr],HL
     780:  00:8AB6  3D                  		DEC A
     781:  00:8AB7  87                  		ADD A,A
     782:  00:8AB8  5F                  		LD E,A
     783:  00:8AB9  CB 12               		RL D
     784:  00:8ABB  2A 1A F0            		LD HL,[PT3_PatsPtr]
     785:  00:8ABE  19                  		ADD HL,DE
     786:  00:8ABF  ED 5B 01 F0         		LD DE,[PT3_MODADDR]
     787:  00:8AC3  ED 73 0D F0         		LD [PT3_PSP],SP
     788:  00:8AC7  F9                  		LD SP,HL
     789:  00:8AC8  E1                  		POP HL
     790:  00:8AC9  19                  		ADD HL,DE
     791:  00:8ACA  44                  		LD B,H
     792:  00:8ACB  4D                  		LD C,L
     793:  00:8ACC  E1                  		POP HL
     794:  00:8ACD  19                  		ADD HL,DE
     795:  00:8ACE  22 14 F0            		LD [PT3_AdInPtB],HL
     796:  00:8AD1  E1                  		POP HL
     797:  00:8AD2  19                  		ADD HL,DE
     798:  00:8AD3  22 16 F0            		LD [PT3_AdInPtC],HL
     799:  00:8AD6  ED 7B 0D F0         		LD SP,[PT3_PSP]
     800:  00:8ADA                      
     801:  00:8ADA  DD 21 2F F0         .PL1A:		LD IX,ChanA+12
     802:  00:8ADE  CD BD 87            		CALL PTDECOD
     803:  00:8AE1  ED 43 12 F0         		LD [PT3_AdInPtA],BC
     804:  00:8AE5                      
     805:  00:8AE5  21 5B F0            .PL1B:		LD HL,ChanB+CHNPRM_NtSkCn
     806:  00:8AE8  35                  		DEC [HL]
     807:  00:8AE9  20 0F               		JR NZ,.PL1C
     808:  00:8AEB  DD 21 4C F0         		LD IX,ChanB+12
     809:  00:8AEF  ED 4B 14 F0         		LD BC,[PT3_AdInPtB]
     810:  00:8AF3  CD BD 87            		CALL PTDECOD
     811:  00:8AF6  ED 43 14 F0         		LD [PT3_AdInPtB],BC
     812:  00:8AFA                      
     813:  00:8AFA  21 78 F0            .PL1C:		LD HL,ChanC+CHNPRM_NtSkCn
     814:  00:8AFD  35                  		DEC [HL]
     815:  00:8AFE  20 0F               		JR NZ,.PL1D
     816:  00:8B00  DD 21 69 F0         		LD IX,ChanC+12
     817:  00:8B04  ED 4B 16 F0         		LD BC,[PT3_AdInPtC]
     818:  00:8B08  CD BD 87            		CALL PTDECOD
     819:  00:8B0B  ED 43 16 F0         		LD [PT3_AdInPtC],BC
     820:  00:8B0F                      
     821:  00:8B0F  3A 1C F0            .PL1D:		LD A,[PT3_Delay]
     822:  00:8B12  32 7A F0            		LD [DelyCnt],A
     823:  00:8B15                      
     824:  00:8B15  DD 21 23 F0         .PL2:		LD IX,ChanA
     825:  00:8B19  2A 40 F1            		LD HL,[AYREGS+AR_TonA]
     826:  00:8B1C  CD 2D 89            		CALL CHREGS
     827:  00:8B1F  22 40 F1            		LD [AYREGS+AR_TonA],HL
     828:  00:8B22  3A 4A F1            		LD A,[AYREGS+AR_AmplC]
     829:  00:8B25  32 48 F1            		LD [AYREGS+AR_AmplA],A
     830:  00:8B28  DD 21 40 F0         		LD IX,ChanB
     831:  00:8B2C  2A 42 F1            		LD HL,[AYREGS+AR_TonB]
     832:  00:8B2F  CD 2D 89            		CALL CHREGS
     833:  00:8B32  22 42 F1            		LD [AYREGS+AR_TonB],HL
     834:  00:8B35  3A 4A F1            		LD A,[AYREGS+AR_AmplC]
     835:  00:8B38  32 49 F1            		LD [AYREGS+AR_AmplB],A
     836:  00:8B3B  DD 21 5D F0         		LD IX,ChanC
     837:  00:8B3F  2A 44 F1            		LD HL,[AYREGS+AR_TonC]
     838:  00:8B42  CD 2D 89            		CALL CHREGS
     839:  00:8B45  22 44 F1            		LD [AYREGS+AR_TonC],HL
     840:  00:8B48                      
     841:  00:8B48  2A 7E F0            		LD HL,[Ns_Base_AddToNs]
     842:  00:8B4B  7C                  		LD A,H
     843:  00:8B4C  85                  		ADD A,L
     844:  00:8B4D  32 46 F1            		LD [AYREGS+AR_Noise],A
     845:  00:8B50                      
     846:  00:8B50  3A 1D F0            		LD A,[PT3_AddToEn]
     847:  00:8B53  5F                  		LD E,A
     848:  00:8B54  87                  		ADD A,A
     849:  00:8B55  9F                  		SBC A,A
     850:  00:8B56  57                  		LD D,A
     851:  00:8B57  2A 4E F1            		LD HL,[EnvBase]
     852:  00:8B5A  19                  		ADD HL,DE
     853:  00:8B5B  ED 5B 7B F0         		LD DE,[CurESld]
     854:  00:8B5F  19                  		ADD HL,DE
     855:  00:8B60  22 4B F1            		LD [AYREGS+AR_Env],HL
     856:  00:8B63                      
     857:  00:8B63  AF                  		XOR A
     858:  00:8B64  21 7D F0            		LD HL,CurEDel
     859:  00:8B67  B6                  		OR [HL]
     860:  00:8B68  C8                  		RET Z
     861:  00:8B69  35                  		DEC [HL]
     862:  00:8B6A  C0                  		RET NZ
     863:  00:8B6B  3A 1E F0            		LD A,[PT3_Env_Del]
     864:  00:8B6E  77                  		LD [HL],A
     865:  00:8B6F  2A 1F F0            		LD HL,[PT3_ESldAdd]
     866:  00:8B72  19                  		ADD HL,DE
     867:  00:8B73  22 7B F0            		LD [CurESld],HL
     868:  00:8B76  C9                  		RET
     869:  00:8B77                      
     870:  00:8B77  AF                  PT3_ROUT:	XOR A
     871:  00:8B78                      	
     872:  00:8B78                      ROUT_A0:	; --- FIXES BITS 6 AND 7 OF MIXER ---
     873:  00:8B78  21 47 F1            		LD	HL,AYREGS+AR_Mixer
     874:  00:8B7B  CB FE               		set	7,[hl]
     875:  00:8B7D  CB B6               		res	6,[hl]
     876:  00:8B7F                      
     877:  00:8B7F  0E A0               		LD C,$A0
     878:  00:8B81  21 40 F1            		LD HL,AYREGS
     879:  00:8B84  ED 79               .LOUT:		OUT [C],A
     880:  00:8B86  0C                  		INC C
     881:  00:8B87  ED A3               		OUTI 
     882:  00:8B89  0D                  		DEC C
     883:  00:8B8A  3C                  		INC A
     884:  00:8B8B  FE 0D               		CP 13
     885:  00:8B8D  20 F5               		JR NZ,.LOUT
     886:  00:8B8F  ED 79               		OUT [C],A
     887:  00:8B91  7E                  		LD A,[HL]
     888:  00:8B92  A7                  		AND A
     889:  00:8B93  F8                  		RET M
     890:  00:8B94  0C                  		INC C
     891:  00:8B95  ED 79               		OUT [C],A
     892:  00:8B97  C9                  		RET
     893:  00:8B98                      
     894:  00:8B98  64                  NT_DATA:	db (T_NEW_0-T1_)*2
     895:  00:8B99  2A                  		db TCNEW_0-T_
     896:  00:8B9A  65                  		db (T_OLD_0-T1_)*2+1
     897:  00:8B9B  00                  		db TCOLD_0-T_
     898:  00:8B9C  01                  		db (T_NEW_1-T1_)*2+1
     899:  00:8B9D  0C                  		db TCNEW_1-T_
     900:  00:8B9E  01                  		db (T_OLD_1-T1_)*2+1
     901:  00:8B9F  0C                  		db TCOLD_1-T_
     902:  00:8BA0  94                  		db (T_NEW_2-T1_)*2
     903:  00:8BA1  35                  		db TCNEW_2-T_
     904:  00:8BA2  30                  		db (T_OLD_2-T1_)*2
     905:  00:8BA3  0E                  		db TCOLD_2-T_
     906:  00:8BA4  60                  		db (T_NEW_3-T1_)*2
     907:  00:8BA5  20                  		db TCNEW_3-T_
     908:  00:8BA6  60                  		db (T_OLD_3-T1_)*2
     909:  00:8BA7  21                  		db TCOLD_3-T_
     910:  00:8BA8                      
     911:  00:8BA8                      T_:
     912:  00:8BA8                      
     913:  00:8BA8                      TCOLD_0:	db $00+1,$04+1,$08+1,$0A+1,$0C+1,$0E+1,$12+1,$14+1
     913:  00:8BA8  01 05 09 0B 0D 0F 13 15 
     914:  00:8BB0  19 25 3D 00         		db $18+1,$24+1,$3C+1,0
     915:  00:8BB4                      TCNEW_1:	
     916:  00:8BB4  5D 00               TCOLD_1:	db $5C+1,0
     917:  00:8BB6                      TCOLD_2:	db $30+1,$36+1,$4C+1,$52+1,$5E+1,$70+1,$82,$8C,$9C
     917:  00:8BB6  31 37 4D 53 5F 71 82 8C 9C 
     918:  00:8BBF                      		db $9E,$A0,$A6,$A8,$AA,$AC,$AE,$AE,0
     918:  00:8BBF  9E A0 A6 A8 AA AC AE AE 00 
     919:  00:8BC8  57                  TCNEW_3:	db $56+1
     920:  00:8BC9                      TCOLD_3:	db $1E+1,$22+1,$24+1,$28+1,$2C+1,$2E+1,$32+1,$BE+1,0
     920:  00:8BC9  1F 23 25 29 2D 2F 33 BF 00 
     921:  00:8BD2                      TCNEW_0:	db $1C+1,$20+1,$22+1,$26+1,$2A+1,$2C+1,$30+1,$54+1
     921:  00:8BD2  1D 21 23 27 2B 2D 31 55 
     922:  00:8BDA  BD BF 00            		db $BC+1,$BE+1,0
     923:  00:8BDD                      TCNEW_2:	db $1A+1,$20+1,$24+1,$28+1,$2A+1,$3A+1,$4C+1,$5E+1
     923:  00:8BDD  1B 21 25 29 2B 3B 4D 5F 
     924:  00:8BE5  BB BD BF            		db $BA+1,$BC+1,$BE+1
     925:  00:8BE8                      
     926:  00:8BE8  00 01 00 90         EMPTYSAMORN: 	db 0,1,0,$90 ;delete $90 if you don't need default sample
     927:  00:8BEC                      
     928:  00:8BEC                      T_PACK:		; First 12 values of tone tables (packed)
     929:  00:8BEC  0D                  		db ($06EC*2)/256
     930:  00:8BED  D8                  		db #d8
     931:  00:8BEE  69                  		db $0755-$06EC
     932:  00:8BEF  70                  		db $07C5-$0755
     933:  00:8BF0  76                  		db $083B-$07C5
     934:  00:8BF1  7D                  		db $08B8-$083B
     935:  00:8BF2  85                  		db $093D-$08B8
     936:  00:8BF3  8D                  		db $09CA-$093D
     937:  00:8BF4  95                  		db $0A5F-$09CA
     938:  00:8BF5  9D                  		db $0AFC-$0A5F
     939:  00:8BF6  A8                  		db $0BA4-$0AFC
     940:  00:8BF7  B1                  		db $0C55-$0BA4
     941:  00:8BF8  BB                  		db $0D10-$0C55
     942:  00:8BF9  0C                  		db ($066D*2)/256
     943:  00:8BFA  DA                  		db #da
     944:  00:8BFB  62                  		db $06CF-$066D
     945:  00:8BFC  68                  		db $0737-$06CF
     946:  00:8BFD  6D                  		db $07A4-$0737
     947:  00:8BFE  75                  		db $0819-$07A4
     948:  00:8BFF  7B                  		db $0894-$0819
     949:  00:8C00  83                  		db $0917-$0894
     950:  00:8C01  8A                  		db $09A1-$0917
     951:  00:8C02  92                  		db $0A33-$09A1
     952:  00:8C03  9C                  		db $0ACF-$0A33
     953:  00:8C04  A4                  		db $0B73-$0ACF
     954:  00:8C05  AF                  		db $0C22-$0B73
     955:  00:8C06  B8                  		db $0CDA-$0C22
     956:  00:8C07  0E                  		db ($0704*2)/256
     957:  00:8C08  08                  		db #08
     958:  00:8C09  6A                  		db $076E-$0704
     959:  00:8C0A  72                  		db $07E0-$076E
     960:  00:8C0B  78                  		db $0858-$07E0
     961:  00:8C0C  7E                  		db $08D6-$0858
     962:  00:8C0D  86                  		db $095C-$08D6
     963:  00:8C0E  90                  		db $09EC-$095C
     964:  00:8C0F  96                  		db $0A82-$09EC
     965:  00:8C10  A0                  		db $0B22-$0A82
     966:  00:8C11  AA                  		db $0BCC-$0B22
     967:  00:8C12  B4                  		db $0C80-$0BCC
     968:  00:8C13  BE                  		db $0D3E-$0C80
     969:  00:8C14  0F                  		db ($07E0*2)/256
     970:  00:8C15  C0                  		db #c0
     971:  00:8C16  78                  		db $0858-$07E0
     972:  00:8C17  88                  		db $08E0-$0858
     973:  00:8C18  80                  		db $0960-$08E0
     974:  00:8C19  90                  		db $09F0-$0960
     975:  00:8C1A  98                  		db $0A88-$09F0
     976:  00:8C1B  A0                  		db $0B28-$0A88
     977:  00:8C1C  B0                  		db $0BD8-$0B28
     978:  00:8C1D  A8                  		db $0C80-$0BD8
     979:  00:8C1E  E0                  		db $0D60-$0C80
     980:  00:8C1F  B0                  		db $0E10-$0D60
     981:  00:8C20  E8                  		db $0EF8-$0E10
      61.  00:8C21                      	include "ayFX-ROM_sjasm.asm"
       1:  00:8C21                      		; --- ayFX REPLAYER v1.31 ---
       2:  00:8C21                      
       3:  00:8C21                      		; --- v1.31	Fixed bug on previous version, only PSG channel C worked
       4:  00:8C21                      		; --- v1.3	Fixed volume and Relative volume versions on the same file, conditional compilation
       5:  00:8C21                      		; ---		Support for dynamic or fixed channel allocation
       6:  00:8C21                      		; --- v1.2f/r	ayFX bank support
       7:  00:8C21                      		; --- v1.11f/r	If a frame volume is zero then no AYREGS update
       8:  00:8C21                      		; --- v1.1f/r	Fixed volume for all ayFX streams
       9:  00:8C21                      		; --- v1.1	Explicit priority (as suggested by AR)
      10:  00:8C21                      		; --- v1.0f	Bug fixed (error when using noise)
      11:  00:8C21                      		; --- v1.0	Initial release
      12:  00:8C21                      
      13:  00:8C21                      		; --- DEFINE AYFXRELATIVE AS 0 FOR FIXED VOLUME VERSION ---
      14:  00:8C21                      		; --- DEFINE AYFXRELATIVE AS 1 FOR RELATIVE VOLUME VERSION ---
      15:  00:8C21  (00:0000)           AYFXRELATIVE equ 0
      16:  00:8C21                      
      17:  00:8C21                      ayFX_SETUP:	; ---          ayFX replayer setup          ---
      18:  00:8C21                      		; --- INPUT: HL -> pointer to the ayFX bank ---
      19:  00:8C21  22 41 F2            		ld	[ayFX_BANK],hl			; Current ayFX bank
      20:  00:8C24  3E 01               		ld	a,1				; a:=0
      21:  00:8C26  32 40 F2            		ld	[ayFX_MODE],a			; Initial mode: fixed channel
      22:  00:8C29  3C                  		inc	a				; Starting channel (=1)
      23:  00:8C2A  32 4A F2            		ld	[ayFX_CHANNEL],a		; Updated
      24:  00:8C2D                      ayFX_END:	; --- End of an ayFX stream ---
      25:  00:8C2D  3E FF               		ld	a,255				; Lowest ayFX priority
      26:  00:8C2F  32 43 F2            		ld	[ayFX_PRIORITY],a		; Priority saved (not playing ayFX stream)
      27:  00:8C32  C9                  		ret					; Return
      28:  00:8C33                      
      29:  00:8C33                      ayFX_INIT:	; ---     INIT A NEW ayFX STREAM     ---
      30:  00:8C33                      		; --- INPUT: A -> sound to be played ---
      31:  00:8C33                      		; ---        C -> sound priority     ---
      32:  00:8C33  C5                  		push	bc				; Store bc in stack
      33:  00:8C34  D5                  		push	de				; Store de in stack
      34:  00:8C35  E5                  		push	hl				; Store hl in stack
      35:  00:8C36                      		; --- Check if the index is in the bank ---
      36:  00:8C36  47                  		ld	b,a				; b:=a (new ayFX stream index)
      37:  00:8C37  2A 41 F2            		ld	hl,[ayFX_BANK]			; Current ayFX BANK
      38:  00:8C3A  7E                  		ld	a,[hl]				; Number of samples in the bank
      39:  00:8C3B  B7                  		or	a				; If zero (means 256 samples)...
      40:  00:8C3C  28 06               		jr	z,.CHECK_PRI			; ...goto .CHECK_PRI
      41:  00:8C3E                      		; The bank has less than 256 samples
      42:  00:8C3E  78                  		ld	a,b				; a:=b (new ayFX stream index)
      43:  00:8C3F  BE                  		cp	[hl]				; If new index is not in the bank...
      44:  00:8C40  3E 02               		ld	a,2				; a:=2 (error 2: Sample not in the bank)
      45:  00:8C42  30 21               		jr	nc,.INIT_END			; ...we can't init it
      46:  00:8C44                      .CHECK_PRI:	; --- Check if the new priority is lower than the current one ---
      47:  00:8C44                      		; ---   Remember: 0 = highest priority, 15 = lowest priority  ---
      48:  00:8C44  78                  		ld	a,b				; a:=b (new ayFX stream index)
      49:  00:8C45  3A 43 F2            		ld	a,[ayFX_PRIORITY]		; a:=Current ayFX stream priority
      50:  00:8C48  B9                  		cp	c				; If new ayFX stream priority is lower than current one...
      51:  00:8C49  3E 01               		ld	a,1				; a:=1 (error 1: A sample with higher priority is being played)
      52:  00:8C4B  38 18               		jr	c,.INIT_END			; ...we don't start the new ayFX stream
      53:  00:8C4D                      		; --- Set new priority ---
      54:  00:8C4D  79                  		ld	a,c				; a:=New priority
      55:  00:8C4E  E6 0F               		and	$0F				; We mask the priority
      56:  00:8C50  32 43 F2            		ld	[ayFX_PRIORITY],a		; new ayFX stream priority saved in RAM
      57:  00:8C53                      
      58:  00:8C53                      		IF ( AYFXRELATIVE == 1 )
      59:  00:8C53                    ~ 			; --- Volume adjust using PT3 volume table ---
      60:  00:8C53                    ~ 			ld	c,a				; c:=New priority (fixed)
      61:  00:8C53                    ~ 			ld	a,15				; a:=15
      62:  00:8C53                    ~ 			sub	c				; a:=15-New priority = relative volume
      63:  00:8C53                    ~ 			jr	z,.INIT_NOSOUND		; If priority is 15 -> no sound output (volume is zero)
      64:  00:8C53                    ~ 			add	a,a				; a:=a*2
      65:  00:8C53                    ~ 			add	a,a				; a:=a*4
      66:  00:8C53                    ~ 			add	a,a				; a:=a*8
      67:  00:8C53                    ~ 			add	a,a				; a:=a*16
      68:  00:8C53                    ~ 			ld	e,a				; e:=a
      69:  00:8C53                    ~ 			ld	d,0				; de:=a
      70:  00:8C53                    ~ 			ld	hl,VT_				; hl:=PT3 volume table
      71:  00:8C53                    ~ 			add	hl,de				; hl is a pointer to the relative volume table
      72:  00:8C53                    ~ 			ld	[ayFX_VT],hl			; Save pointer
      73:  00:8C53                    ~ 		ENDIF
      74:  00:8C53                      
      75:  00:8C53                      		; --- Calculate the pointer to the new ayFX stream ---
      76:  00:8C53  ED 5B 41 F2         		ld	de,[ayFX_BANK]			; de:=Current ayFX bank
      77:  00:8C57  13                  		inc	de				; de points to the increments table of the bank
      78:  00:8C58  68                  		ld	l,b				; l:=b (new ayFX stream index)
      79:  00:8C59  26 00               		ld	h,0				; hl:=b (new ayFX stream index)
      80:  00:8C5B  29                  		add	hl,hl				; hl:=hl*2
      81:  00:8C5C  19                  		add	hl,de				; hl:=hl+de (hl points to the correct increment)
      82:  00:8C5D  5E                  		ld	e,[hl]				; e:=lower byte of the increment
      83:  00:8C5E  23                  		inc	hl				; hl points to the higher byte of the correct increment
      84:  00:8C5F  56                  		ld	d,[hl]				; de:=increment
      85:  00:8C60  19                  		add	hl,de				; hl:=hl+de (hl points to the new ayFX stream)
      86:  00:8C61  22 44 F2            		ld	[ayFX_POINTER],hl		; Pointer saved in RAM
      87:  00:8C64  AF                  		xor	a				; a:=0 (no errors)
      88:  00:8C65  E1                  .INIT_END:	pop	hl				; Retrieve hl from stack
      89:  00:8C66  D1                  		pop	de				; Retrieve de from stack
      90:  00:8C67  C1                  		pop	bc				; Retrieve bc from stack
      91:  00:8C68  C9                  		ret					; Return
      92:  00:8C69                      
      93:  00:8C69                      		IF ( AYFXRELATIVE == 1 )
      94:  00:8C69                    ~ .INIT_NOSOUND:	; --- Init a sample with relative volume zero -> no sound output ---
      95:  00:8C69                    ~ 			ld	a,255				; Lowest ayFX priority
      96:  00:8C69                    ~ 			ld	[ayFX_PRIORITY],a		; Priority saved (not playing ayFX stream)
      97:  00:8C69                    ~ 			jr	.INIT_END			; Jumps to .INIT_END
      98:  00:8C69                    ~ 		ENDIF
      99:  00:8C69                      
     100:  00:8C69                      ayFX_PLAY:	; --- PLAY A FRAME OF AN ayFX STREAM ---
     101:  00:8C69  3A 43 F2            		ld	a,[ayFX_PRIORITY]		; a:=Current ayFX stream priority
     102:  00:8C6C  B7                  		or	a				; If priority has bit 7 on...
     103:  00:8C6D  F8                  		ret	m				; ...return
     104:  00:8C6E                      		; --- Calculate next ayFX channel (if needed) ---
     105:  00:8C6E  3A 40 F2            		ld	a,[ayFX_MODE]			; ayFX mode
     106:  00:8C71  E6 01               		and	1				; If bit0=0 (fixed channel)...
     107:  00:8C73  28 08               		jr	z,.TAKECB			; ...skip channel changing
     108:  00:8C75  21 4A F2            		ld	hl,ayFX_CHANNEL			; Old ayFX playing channel
     109:  00:8C78  35                  		dec	[hl]				; New ayFX playing channel
     110:  00:8C79  20 02               		jr	nz,.TAKECB			; If not zero jump to .TAKECB
     111:  00:8C7B  36 03               		ld	[hl],3				; If zero -> set channel 3
     112:  00:8C7D                      .TAKECB:	; --- Extract control byte from stream ---
     113:  00:8C7D  2A 44 F2            		ld	hl,[ayFX_POINTER]		; Pointer to the current ayFX stream
     114:  00:8C80  4E                  		ld	c,[hl]				; c:=Control byte
     115:  00:8C81  23                  		inc	hl				; Increment pointer
     116:  00:8C82                      		; --- Check if there's new tone on stream ---
     117:  00:8C82  CB 69               		bit	5,c				; If bit 5 c is off...
     118:  00:8C84  28 08               		jr	z,.CHECK_NN			; ...jump to .CHECK_NN (no new tone)
     119:  00:8C86                      		; --- Extract new tone from stream ---
     120:  00:8C86  5E                  		ld	e,[hl]				; e:=lower byte of new tone
     121:  00:8C87  23                  		inc	hl				; Increment pointer
     122:  00:8C88  56                  		ld	d,[hl]				; d:=higher byte of new tone
     123:  00:8C89  23                  		inc	hl				; Increment pointer
     124:  00:8C8A  ED 53 46 F2         		ld	[ayFX_TONE],de			; ayFX tone updated
     125:  00:8C8E                      .CHECK_NN:	; --- Check if there's new noise on stream ---
     126:  00:8C8E  CB 71               		bit	6,c				; if bit 6 c is off...
     127:  00:8C90  28 09               		jr	z,.SETPOINTER			; ...jump to .SETPOINTER (no new noise)
     128:  00:8C92                      		; --- Extract new noise from stream ---
     129:  00:8C92  7E                  		ld	a,[hl]				; a:=New noise
     130:  00:8C93  23                  		inc	hl				; Increment pointer
     131:  00:8C94  FE 20               		cp	$20				; If it's an illegal value of noise (used to mark end of stream)...
     132:  00:8C96  28 95               		jr.	z,ayFX_END			; ...jump to ayFX_END
     133:  00:8C98  32 48 F2            		ld	[ayFX_NOISE],a			; ayFX noise updated
     134:  00:8C9B                      .SETPOINTER:	; --- Update ayFX pointer ---
     135:  00:8C9B  22 44 F2            		ld	[ayFX_POINTER],hl		; Update ayFX stream pointer
     136:  00:8C9E                      		; --- Extract volume ---
     137:  00:8C9E  79                  		ld	a,c				; a:=Control byte
     138:  00:8C9F  E6 0F               		and	$0F				; lower nibble
     139:  00:8CA1                      
     140:  00:8CA1                      		IF ( AYFXRELATIVE == 1 )
     141:  00:8CA1                    ~ 			; --- Fix the volume using PT3 Volume Table ---
     142:  00:8CA1                    ~ 			ld	hl,[ayFX_VT]			; hl:=Pointer to relative volume table
     143:  00:8CA1                    ~ 			ld	e,a				; e:=a (ayFX volume)
     144:  00:8CA1                    ~ 			ld	d,0				; d:=0
     145:  00:8CA1                    ~ 			add	hl,de				; hl:=hl+de (hl points to the relative volume of this frame
     146:  00:8CA1                    ~ 			ld	a,[hl]				; a:=ayFX relative volume
     147:  00:8CA1                    ~ 			or	a				; If relative volume is zero...
     148:  00:8CA1                    ~ 		ENDIF
     149:  00:8CA1                      
     150:  00:8CA1  32 49 F2            		ld	[ayFX_VOLUME],a			; ayFX volume updated
     151:  00:8CA4  C8                  		ret	z				; ...return (don't copy ayFX values in to AYREGS)
     152:  00:8CA5                      		; -------------------------------------
     153:  00:8CA5                      		; --- COPY ayFX VALUES IN TO AYREGS ---
     154:  00:8CA5                      		; -------------------------------------
     155:  00:8CA5                      		; --- Set noise channel ---
     156:  00:8CA5  CB 79               		bit	7,c				; If noise is off...
     157:  00:8CA7  20 06               		jr	nz,.SETMASKS			; ...jump to .SETMASKS
     158:  00:8CA9  3A 48 F2            		ld	a,[ayFX_NOISE]			; ayFX noise value
     159:  00:8CAC  32 46 F1            		ld	[AYREGS+6],a			; copied in to AYREGS (noise channel)
     160:  00:8CAF                      .SETMASKS:	; --- Set mixer masks ---
     161:  00:8CAF  79                  		ld	a,c				; a:=Control byte
     162:  00:8CB0  E6 90               		and	$90				; Only bits 7 and 4 (noise and tone mask for psg reg 7)
     163:  00:8CB2  FE 90               		cp	$90				; If no noise and no tone...
     164:  00:8CB4  C8                  		ret	z				; ...return (don't copy ayFX values in to AYREGS)
     165:  00:8CB5                      		; --- Copy ayFX values in to ARYREGS ---
     166:  00:8CB5  0F                  		rrca					; Rotate a to the right (1 TIME)
     167:  00:8CB6  0F                  		rrca					; Rotate a to the right (2 TIMES) (OR mask)
     168:  00:8CB7  16 DB               		ld	d,$DB				; d:=Mask for psg mixer (AND mask)
     169:  00:8CB9                      		; --- Dump to correct channel ---
     170:  00:8CB9  21 4A F2            		ld	hl,ayFX_CHANNEL			; Next ayFX playing channel
     171:  00:8CBC  46                  		ld	b,[hl]				; Channel counter
     172:  00:8CBD                      .CHK1:		; --- Check if playing channel was 1 ---
     173:  00:8CBD  10 0D               		djnz	.CHK2				; Decrement and jump if channel was not 1
     174:  00:8CBF                      .PLAY_C:	; --- Play ayFX stream on channel C ---
     175:  00:8CBF  CD EE 8C            		call	.SETMIXER			; Set PSG mixer value (returning a=ayFX volume and hl=ayFX tone)
     176:  00:8CC2  32 4A F1            		ld	[AYREGS+10],a			; Volume copied in to AYREGS (channel C volume)
     177:  00:8CC5  CB 51               		bit	2,c				; If tone is off...
     178:  00:8CC7  C0                  		ret	nz				; ...return
     179:  00:8CC8  22 44 F1            		ld	[AYREGS+4],hl			; copied in to AYREGS (channel C tone)
     180:  00:8CCB  C9                  		ret					; Return
     181:  00:8CCC                      .CHK2:		; --- Check if playing channel was 2 ---
     182:  00:8CCC  CB 0A               		rrc	d				; Rotate right AND mask
     183:  00:8CCE  0F                  		rrca					; Rotate right OR mask
     184:  00:8CCF  10 0D               		djnz	.CHK3				; Decrement and jump if channel was not 2
     185:  00:8CD1                      .PLAY_B:	; --- Play ayFX stream on channel B ---
     186:  00:8CD1  CD EE 8C            		call	.SETMIXER			; Set PSG mixer value (returning a=ayFX volume and hl=ayFX tone)
     187:  00:8CD4  32 49 F1            		ld	[AYREGS+9],a			; Volume copied in to AYREGS (channel B volume)
     188:  00:8CD7  CB 49               		bit	1,c				; If tone is off...
     189:  00:8CD9  C0                  		ret	nz				; ...return
     190:  00:8CDA  22 42 F1            		ld	[AYREGS+2],hl			; copied in to AYREGS (channel B tone)
     191:  00:8CDD  C9                  		ret					; Return
     192:  00:8CDE                      .CHK3:		; --- Check if playing channel was 3 ---
     193:  00:8CDE  CB 0A               		rrc	d				; Rotate right AND mask
     194:  00:8CE0  0F                  		rrca					; Rotate right OR mask
     195:  00:8CE1                      .PLAY_A:	; --- Play ayFX stream on channel A ---
     196:  00:8CE1  CD EE 8C            		call	.SETMIXER			; Set PSG mixer value (returning a=ayFX volume and hl=ayFX tone)
     197:  00:8CE4  32 48 F1            		ld	[AYREGS+8],a			; Volume copied in to AYREGS (channel A volume)
     198:  00:8CE7  CB 41               		bit	0,c				; If tone is off...
     199:  00:8CE9  C0                  		ret	nz				; ...return
     200:  00:8CEA  22 40 F1            		ld	[AYREGS+0],hl			; copied in to AYREGS (channel A tone)
     201:  00:8CED  C9                  		ret					; Return
     202:  00:8CEE                      .SETMIXER:	; --- Set PSG mixer value ---
     203:  00:8CEE  4F                  		ld	c,a				; c:=OR mask
     204:  00:8CEF  3A 47 F1            		ld	a,[AYREGS+7]			; a:=PSG mixer value
     205:  00:8CF2  A2                  		and	d				; AND mask
     206:  00:8CF3  B1                  		or	c				; OR mask
     207:  00:8CF4  32 47 F1            		ld	[AYREGS+7],a			; PSG mixer value updated
     208:  00:8CF7  3A 49 F2            		ld	a,[ayFX_VOLUME]			; a:=ayFX volume value
     209:  00:8CFA  2A 46 F2            		ld	hl,[ayFX_TONE]			; ayFX tone value
     210:  00:8CFD  C9                  		ret					; Return
     211:  00:8CFE                      
     212:  00:8CFE                      		IF ( AYFXRELATIVE == 1 )
     213:  00:8CFE                    ~ 			; --- UNCOMMENT THIS IF YOU DON'T USE THIS REPLAYER WITH PT3 REPLAYER ---
     214:  00:8CFE                    ~ 		;VT_:	.INCBIN	"VT.BIN"
     215:  00:8CFE                    ~ 			; --- UNCOMMENT THIS IF YOU DON'T USE THIS REPLAYER WITH PT3 REPLAYER ---
     216:  00:8CFE                    ~ 		ENDIF
      62.  00:8CFE                      	
      63.  00:8CFE                      	
      64.  00:8CFE                      
      65.  00:8CFE                      ;;=====================================================
      66.  00:8CFE                      ;;DEFINICIÓN DE CANTIONES Y EFECTOS DE SONIDO
      67.  00:8CFE                      ;;=====================================================		
      68.  00:8CFE                      song:
      69.  00:8CFE  (0968)              	incbin "bloodytears_castlevania.99"
      70.  00:9666                      	
      71.  00:9666                      sfx_bank:
      72.  00:9666  (004B)              	incbin "demo.afb"
      73.  00:96B1                      
     116   00:96B1                      	
     117   00:96B1                      
     118   00:96B1                      ;;=====================================================
     119   00:96B1                      ;;DEFINICIÓN DE SUBRUTINAS DE FERNANDO PARA COMPRESIÓN Y SONIDO
     120   00:96B1                      ;;=====================================================
     121   00:96B1                      ;Este include lleva la rutina de descompresión de ROM/RAM a VRAM de pletter
     122   00:96B1                      ;Está adaptada de la original a sjasm
     123   00:96B1                      ;	HL = RAM/ROM source	; DE = VRAM destination
     124   00:96B1                      depack_VRAM:
     125   00:96B1                      	include "PL_VRAM_Depack_SJASM.asm"
       1.  00:96B1                      ;-----------------------------------------------------------
       2.  00:96B1                      ; Pletter v0.5b VRAM Depacker v1.1 - 16Kb version
       3.  00:96B1                      ; HL = RAM/ROM source ; DE = VRAM destination
       4.  00:96B1                      ;-----------------------------------------------------------
       5.  00:96B1  F3                  	di
       6.  00:96B2                      
       7.  00:96B2                      ; VRAM address setup
       8.  00:96B2  7B                  	ld	a,e
       9.  00:96B3  D3 99               	out	[099h],a
      10.  00:96B5  7A                  	ld	a,d
      11.  00:96B6  F6 40               	or	040h
      12.  00:96B8  D3 99               	out	[099h],a
      13.  00:96BA                      
      14.  00:96BA                      ; Initialization
      15.  00:96BA  7E                  	ld	a,[hl]
      16.  00:96BB  23                  	inc	hl
      17.  00:96BC  D9                  	exx
      18.  00:96BD  11 00 00            	ld	de,0
      19.  00:96C0  87                  	add	a,a
      20.  00:96C1  3C                  	inc	a
      21.  00:96C2  CB 13               	rl	e
      22.  00:96C4  87                  	add	a,a
      23.  00:96C5  CB 13               	rl	e
      24.  00:96C7  87                  	add	a,a
      25.  00:96C8  CB 13               	rl	e
      26.  00:96CA  CB 13               	rl	e
      27.  00:96CC  21 83 97            	ld	hl,modes
      28.  00:96CF  19                  	add	hl,de
      29.  00:96D0  5E                  	ld	e,[hl]
      30.  00:96D1  DD 6B               	ld	ixl,e
      31.  00:96D3  23                  	inc	hl
      32.  00:96D4  5E                  	ld	e,[hl]
      33.  00:96D5  DD 63               	ld	ixh,e
      34.  00:96D7  1E 01               	ld	e,1
      35.  00:96D9  D9                  	exx
      36.  00:96DA  FD 21 E3 96         	ld	iy,loop
      37.  00:96DE                      
      38.  00:96DE                      ; Main depack loop
      39.  00:96DE  0E 98               literal:ld	c,098h
      40.  00:96E0  ED A3               	outi
      41.  00:96E2  13                  	inc	de
      42.  00:96E3  87                  loop:	add	a,a
      43.  00:96E4  CC 77 97              	call	z,getbit
      44.  00:96E7  30 F5               	jr	nc,literal
      45.  00:96E9                      
      46.  00:96E9                      ; Compressed data
      47.  00:96E9  D9                  	exx
      48.  00:96EA  62                  	ld	h,d
      49.  00:96EB  6B                  	ld	l,e
      50.  00:96EC  87                  getlen: add	a,a
      51.  00:96ED  CC 7B 97            	call	z,getbitexx
      52.  00:96F0  30 1D               	jr	nc,lenok
      53.  00:96F2  87                  lus:	add	a,a
      54.  00:96F3  CC 7B 97            	call	z,getbitexx
      55.  00:96F6  ED 6A               	adc	hl,hl
      56.  00:96F8  D8                  	ret	c
      57.  00:96F9  87                  	add	a,a
      58.  00:96FA  CC 7B 97            	call	z,getbitexx
      59.  00:96FD  30 10               	jr	nc,lenok
      60.  00:96FF  87                  	add	a,a
      61.  00:9700  CC 7B 97            	call	z,getbitexx
      62.  00:9703  ED 6A               	adc	hl,hl
      63.  00:9705  DA 81 97            	jp	c,Depack_out
      64.  00:9708  87                  	add	a,a
      65.  00:9709  CC 7B 97            	call	z,getbitexx
      66.  00:970C  DA F2 96            	jp	c,lus
      67.  00:970F  23                  lenok:  inc	hl
      68.  00:9710  D9                  	exx
      69.  00:9711  4E                  	ld	c,[hl]
      70.  00:9712  23                  	inc	hl
      71.  00:9713  06 00               	ld	b,0
      72.  00:9715  CB 79               	bit	7,c
      73.  00:9717  CA 4A 97            	jp	z,offsok
      74.  00:971A  DD E9               	jp	ix
      75.  00:971C                      
      76.  00:971C  87                  mode7:  add	a,a
      77.  00:971D  CC 77 97              	call	z,getbit
      78.  00:9720  CB 10               	rl	b
      79.  00:9722  87                  mode6:	add	a,a
      80.  00:9723  CC 77 97              	call	z,getbit
      81.  00:9726  CB 10               	rl	b
      82.  00:9728  87                  mode5:  add	a,a
      83.  00:9729  CC 77 97              	call	z,getbit
      84.  00:972C  CB 10               	rl	b
      85.  00:972E  87                  mode4:  add	a,a
      86.  00:972F  CC 77 97              	call	z,getbit
      87.  00:9732  CB 10               	rl	b
      88.  00:9734  87                  mode3:  add	a,a
      89.  00:9735  CC 77 97              	call	z,getbit
      90.  00:9738  CB 10               	rl	b
      91.  00:973A  87                  mode2:	add	a,a
      92.  00:973B  CC 77 97              	call	z,getbit
      93.  00:973E  CB 10               	rl	b
      94.  00:9740  87                  	add	a,a
      95.  00:9741  CC 77 97              	call	z,getbit
      96.  00:9744  30 04               	jr	nc,offsok
      97.  00:9746  B7                  	or	a
      98.  00:9747  04                  	inc	b
      99.  00:9748  CB B9               	res	7,c
     100.  00:974A  03                  offsok: inc	bc
     101.  00:974B  E5                  	push	hl
     102.  00:974C  D9                  	exx
     103.  00:974D  E5                  	push	hl
     104.  00:974E  D9                  	exx
     105.  00:974F  6B                  	ld	l,e
     106.  00:9750  62                  	ld	h,d
     107.  00:9751  ED 42               	sbc	hl,bc
     108.  00:9753  C1                  	pop	bc
     109.  00:9754  F5                  	push	af
     110.  00:9755  7D                  .loop:	ld	a,l
     111.  00:9756  D3 99               	out	[099h],a
     112.  00:9758  7C                  	ld	a,h
     113.  00:9759  00                  	nop                     ; VDP timing
     114.  00:975A  D3 99               	out	[099h],a
     115.  00:975C  00                  	nop                     ; VDP timing
     116.  00:975D  DB 98               	in	a,[098h]
     117.  00:975F  08                  	ex	af,af'
     118.  00:9760  7B                  	ld	a,e
     119.  00:9761  00                  	nop			; VDP timing
     120.  00:9762  D3 99               	out	[099h],a
     121.  00:9764  7A                  	ld	a,d
     122.  00:9765  F6 40               	or	040h
     123.  00:9767  D3 99               	out	[099h],a
     124.  00:9769  08                  	ex	af,af'
     125.  00:976A  00                  	nop			; VDP timing
     126.  00:976B  D3 98               	out	[098h],a
     127.  00:976D  13                  	inc	de
     128.  00:976E  ED A1               	cpi
     129.  00:9770  EA 55 97            	jp	pe,.loop
     130.  00:9773  F1                  	pop	af
     131.  00:9774  E1                  	pop	hl
     132.  00:9775  FD E9               	jp	iy
     133.  00:9777                      
     134.  00:9777  7E                  getbit: ld	a,[hl]
     135.  00:9778  23                  	inc	hl
     136.  00:9779  17                  	rla
     137.  00:977A  C9                  	ret
     138.  00:977B                      
     139.  00:977B                      getbitexx:
     140.  00:977B  D9                  	exx
     141.  00:977C  7E                  	ld	a,[hl]
     142.  00:977D  23                  	inc	hl
     143.  00:977E  D9                  	exx
     144.  00:977F  17                  	rla
     145.  00:9780  C9                  	ret
     146.  00:9781                      
     147.  00:9781                      ; Depacker exit
     148.  00:9781                      Depack_out:
     149.  00:9781  FB                  	ei
     150.  00:9782  C9                  	ret
     151.  00:9783                      
     152.  00:9783                      modes:
     153.  00:9783  4A 97               	dw	offsok
     154.  00:9785  3A 97               	dw	mode2
     155.  00:9787  34 97               	dw	mode3
     156.  00:9789  2E 97               	dw	mode4
     157.  00:978B  28 97               	dw	mode5
     158.  00:978D  22 97               	dw	mode6
     159.  00:978F  1C 97               	dw	mode7
     126   00:9791                      
     127   00:9791                      
     128   00:9791                      	
     129   00:9791                      ;;=====================================================
     130   00:9791                      ;;DEFINICIÓN DE ESTRUCTURAS
     131   00:9791                      ;;=====================================================		
     132   00:9791                      	include "estructuras.asm"
       1.  00:9791                      ;;=====================================================
       2.  00:9791                      ;;DEFINICIÓN DE ESTRUCTURAS
       3.  00:9791                      ;;=====================================================
       4.  00:9791                      
       5.  00:9791                      ;crear estructura
       6.  00:9791                      
       7.  00:9791                      	STRUCT ESTRUCTURA_PUNTOMIRA
       8.  00:9791                    < posx			DB		100
       9.  00:9791                    < posy			DB		100
      10.  00:9791                    < escena			DB		0	;valores porsibles 0 (blanco+rojo en punto de mira) y NEG 0 (al revés)
      11.  00:9791                    < velocidad		DB		0
      12.  00:9791                    < boton2_pressed  DB		0
      13.  00:9791                    < cadencia		DB		5	;nº de veces que se ejecutará el disparo antes de ejecutar un disparo real (porque cuando se pulsa la tecl dispara 3 ó 4 veces de rápido que va)
      14.  00:9791                    < ; al final he decidido (ya que el punto de mira es el prota) que lo relacionado con el prota vaya en esta estructura
      15.  00:9791                    < pm_aux1			DB		0	;para llegar a los 16 campos
      16.  00:9791                    < pm_aux2			DB		0	;para llegar a los 16 campos
      17.  00:9791                    < pm_aux3			DB		0	;para llegar a los 16 campos
      18.  00:9791                    < pm_aux4			DB		0	;para llegar a los 16 campos
      19.  00:9791                    < pm_aux5			DB		0	;para llegar a los 16 campos
      20.  00:9791                    < pm_aux6			DB		0	;para llegar a los 16 campos
      21.  00:9791                    < pm_aux7			DB		0	;para llegar a los 16 campos
      22.  00:9791                    < pm_aux8			DB		0	;para llegar a los 16 campos
      23.  00:9791                    < pm_aux9			DB		0	;para llegar a los 16 campos
      24.  00:9791                    < pm_aux10		DB		0	;para llegar a los 16 campos
      25.  00:9791                    < 	ENDSTRUCT;ESTRUCTURA_PUNTOMIRA
      26.  00:9791                      
      27.  00:9791                      	
      28.  00:9791                      	STRUCT ESTRUCTURA_ENEMIGO
      29.  00:9791                    < tipo				DB		0	;(0 serpiente por ejemplo) #FF muerto o no existe
      30.  00:9791                    < posx				DB		5
      31.  00:9791                    < posy				DB		50
      32.  00:9791                    < color				DB		5
      33.  00:9791                    < escena				DB		0
      34.  00:9791                    < contador_siguiente_escena	DB	0
      35.  00:9791                    < reset_contador		DB		0
      36.  00:9791                    < dano				DB		0	;daño
      37.  00:9791                    < energia				DB		0	;energía del enemigo... si llega a 0 => existe <- 0
      38.  00:9791                    < ;indica el nº de sprite a mostrar y si está compuesto por uno o dos sprites y si están en horizontal o vertical
      39.  00:9791                    < ver_hor				DB		0
      40.  00:9791                    < manejador_dibujo 	DW		0
      41.  00:9791                    < en_aux3				DB		0
      42.  00:9791                    < en_aux4				DB		0
      43.  00:9791                    < 	ENDSTRUCT;ESTRUCTURA_ENEMIGO
      44.  00:9791                      	
      45.  00:9791                      	STRUCT ESTRUCTURA_EXTRA		;vidas extra, plantas de curación de energía, reliquias	
      46.  00:9791                    < tipo				DB		0	;#FF muerto/usado o no existe
      47.  00:9791                    < posx				DB		50
      48.  00:9791                    < posy				DB		50
      49.  00:9791                    < color				DB		5
      50.  00:9791                    < contador			DB		0	;por si doy dos reliquias en vez de una, por ejemplo
      51.  00:9791                    < en_aux1				DB		0	;para llegar a los 16 campos
      52.  00:9791                    < en_aux2				DB		0
      53.  00:9791                    < en_aux3				DB		0
      54.  00:9791                    < en_aux4				DB		0
      55.  00:9791                    < en_aux5				DB		0
      56.  00:9791                    < en_aux6				DB		0
      57.  00:9791                    < en_aux7				DB		0
      58.  00:9791                    < en_aux8				DB		0
      59.  00:9791                    < en_aux9				DB		0
      60.  00:9791                    < en_aux10			DB		0
      61.  00:9791                    < en_aux11			DB		0
      62.  00:9791                    < 	ENDSTRUCT;ESTRUCTURA_EXTRA
      63.  00:9791                      
      64.  00:9791                      
      65.  00:9791                      
      66.  00:9791                      
      67.  00:9791                      
      68.  00:9791                      
      69.  00:9791                      
     133   00:9791                      	
     134   00:9791                      ;;=====================================================
     135   00:9791                      ;;DEFINICIÓN DE VARIABLES
     136   00:9791                      ;;=====================================================		
     137   00:9791                      	include "sprites.asm"
       1.  00:9791                      ;;=====================================================
       2.  00:9791                      ;;DEFINICIÓN DE SPRITES
       3.  00:9791                      ;;=====================================================	
       4.  00:9791                      
       5.  00:9791                      
       6.  00:9791                      ;; NOTA:
       7.  00:9791                      ;~ sprite_reliquia_oracion: on/off
       8.  00:9791                      ;~ sprite_reliquia_cruz: on/off
       9.  00:9791                      ;~ sprite_reliquia_agua: on/off
      10.  00:9791                      ;~ sprite_peto: on/off
      11.  00:9791                      ;~ sprite_planta: on/off
      12.  00:9791                      ;~ sprite_vida_extra: on/off
      13.  00:9791                      ;~ sprite_ballesta_mejorada: on/off
      14.  00:9791                      
      15.  00:9791                      ;~ iban a ser sprites pero por falta de recursos serán tiles
      16.  00:9791                      
      17.  00:9791                      
      18.  00:9791                      sprites_pantantalla:
      19.  00:9791                      
      20.  00:9791                      ;; PARTE 1: SPRITES COMUNES
      21.  00:9791                      
      22.  00:9791                      sprites_comunes:
      23.  00:9791                      sprite_punto_mira_1:	;color 8
      24.  00:9791                      	db #FF,#FF,#C0,#C0,#C0,#C0,#C0,#C0
      24.  00:9791  FF FF C0 C0 C0 C0 C0 C0 
      25.  00:9799                      	db #C0,#C0,#C0,#C0,#C0,#C0,#FF,#FF
      25.  00:9799  C0 C0 C0 C0 C0 C0 FF FF 
      26.  00:97A1                      	db #FF,#FF,#03,#03,#03,#03,#03,#03
      26.  00:97A1  FF FF 03 03 03 03 03 03 
      27.  00:97A9                      	db #03,#03,#03,#03,#03,#03,#FF,#FF
      27.  00:97A9  03 03 03 03 03 03 FF FF 
      28.  00:97B1                      	
      29.  00:97B1                      sprite_punto_mira_2: 	;color 15
      30.  00:97B1                      	db #00,#00,#00,#00,#0F,#0F,#0C,#0C
      30.  00:97B1  00 00 00 00 0F 0F 0C 0C 
      31.  00:97B9                      	db #0C,#0C,#0F,#0F,#00,#00,#00,#00
      31.  00:97B9  0C 0C 0F 0F 00 00 00 00 
      32.  00:97C1                      	db #00,#00,#00,#00,#F0,#F0,#30,#30
      32.  00:97C1  00 00 00 00 F0 F0 30 30 
      33.  00:97C9                      	db #30,#30,#F0,#F0,#00,#00,#00,#00
      33.  00:97C9  30 30 F0 F0 00 00 00 00 
      34.  00:97D1                      	
      35.  00:97D1                      sprite_punto_mira_1_mejorado:
      36.  00:97D1                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      36.  00:97D1  FF FF FF FF FF FF FF FF 
      37.  00:97D9                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      37.  00:97D9  FF FF FF FF FF FF FF FF 
      38.  00:97E1                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      38.  00:97E1  FF FF FF FF FF FF FF FF 
      39.  00:97E9                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      39.  00:97E9  FF FF FF FF FF FF FF FF 
      40.  00:97F1                      
      41.  00:97F1                      sprite_punto_mira_2_mejorado:
      42.  00:97F1                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      42.  00:97F1  FF FF FF FF FF FF FF FF 
      43.  00:97F9                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      43.  00:97F9  FF FF FF FF FF FF FF FF 
      44.  00:9801                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      44.  00:9801  FF FF FF FF FF FF FF FF 
      45.  00:9809                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      45.  00:9809  FF FF FF FF FF FF FF FF 
      46.  00:9811                      	
      47.  00:9811                      sprite_explosion_1:
      48.  00:9811                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      48.  00:9811  FF FF FF FF FF FF FF FF 
      49.  00:9819                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      49.  00:9819  FF FF FF FF FF FF FF FF 
      50.  00:9821                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      50.  00:9821  FF FF FF FF FF FF FF FF 
      51.  00:9829                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF	
      51.  00:9829  FF FF FF FF FF FF FF FF 
      52.  00:9831                      
      53.  00:9831                      sprite_explosion_2:
      54.  00:9831                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      54.  00:9831  FF FF FF FF FF FF FF FF 
      55.  00:9839                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      55.  00:9839  FF FF FF FF FF FF FF FF 
      56.  00:9841                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      56.  00:9841  FF FF FF FF FF FF FF FF 
      57.  00:9849                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF	
      57.  00:9849  FF FF FF FF FF FF FF FF 
      58.  00:9851                      fin_sprites_comunes:
      59.  00:9851                      
      60.  00:9851                      ;; PARTE 2: SPRITES NO COMUNES
      61.  00:9851                      
      62.  00:9851                      ;; ARAÑA
      63.  00:9851                      	
      64.  00:9851                      sprite_arana1_1:
      65.  00:9851                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      65.  00:9851  FF FF FF FF FF FF FF FF 
      66.  00:9859                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      66.  00:9859  FF FF FF FF FF FF FF FF 
      67.  00:9861                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      67.  00:9861  FF FF FF FF FF FF FF FF 
      68.  00:9869                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      68.  00:9869  FF FF FF FF FF FF FF FF 
      69.  00:9871                      	
      70.  00:9871                      sprite_arana1_2:
      71.  00:9871                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      71.  00:9871  FF FF FF FF FF FF FF FF 
      72.  00:9879                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      72.  00:9879  FF FF FF FF FF FF FF FF 
      73.  00:9881                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      73.  00:9881  FF FF FF FF FF FF FF FF 
      74.  00:9889                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      74.  00:9889  FF FF FF FF FF FF FF FF 
      75.  00:9891                      
      76.  00:9891                      ;; MURCIELAGO
      77.  00:9891                      	
      78.  00:9891                      sprite_murcielago1_1:
      79.  00:9891                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      79.  00:9891  FF FF FF FF FF FF FF FF 
      80.  00:9899                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      80.  00:9899  FF FF FF FF FF FF FF FF 
      81.  00:98A1                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      81.  00:98A1  FF FF FF FF FF FF FF FF 
      82.  00:98A9                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      82.  00:98A9  FF FF FF FF FF FF FF FF 
      83.  00:98B1                      	
      84.  00:98B1                      sprite_murcielago1_2:
      85.  00:98B1                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      85.  00:98B1  FF FF FF FF FF FF FF FF 
      86.  00:98B9                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      86.  00:98B9  FF FF FF FF FF FF FF FF 
      87.  00:98C1                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      87.  00:98C1  FF FF FF FF FF FF FF FF 
      88.  00:98C9                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF	
      88.  00:98C9  FF FF FF FF FF FF FF FF 
      89.  00:98D1                      
      90.  00:98D1                      ;; SERPIENTE
      91.  00:98D1                      
      92.  00:98D1                      sprite_serpiente1_1:
      93.  00:98D1                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      93.  00:98D1  FF FF FF FF FF FF FF FF 
      94.  00:98D9                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      94.  00:98D9  FF FF FF FF FF FF FF FF 
      95.  00:98E1                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      95.  00:98E1  FF FF FF FF FF FF FF FF 
      96.  00:98E9                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      96.  00:98E9  FF FF FF FF FF FF FF FF 
      97.  00:98F1                      	
      98.  00:98F1                      sprite_serpiente1_2:
      99.  00:98F1                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      99.  00:98F1  FF FF FF FF FF FF FF FF 
     100.  00:98F9                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     100.  00:98F9  FF FF FF FF FF FF FF FF 
     101.  00:9901                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     101.  00:9901  FF FF FF FF FF FF FF FF 
     102.  00:9909                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     102.  00:9909  FF FF FF FF FF FF FF FF 
     103.  00:9911                      	
     104.  00:9911                      sprite_serpiente2_1:
     105.  00:9911                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     105.  00:9911  FF FF FF FF FF FF FF FF 
     106.  00:9919                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     106.  00:9919  FF FF FF FF FF FF FF FF 
     107.  00:9921                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     107.  00:9921  FF FF FF FF FF FF FF FF 
     108.  00:9929                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     108.  00:9929  FF FF FF FF FF FF FF FF 
     109.  00:9931                      	
     110.  00:9931                      sprite_serpiente2_2:
     111.  00:9931                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     111.  00:9931  FF FF FF FF FF FF FF FF 
     112.  00:9939                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     112.  00:9939  FF FF FF FF FF FF FF FF 
     113.  00:9941                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     113.  00:9941  FF FF FF FF FF FF FF FF 
     114.  00:9949                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     114.  00:9949  FF FF FF FF FF FF FF FF 
     115.  00:9951                      
     116.  00:9951                      ;; ZOMBI
     117.  00:9951                      
     118.  00:9951                      sprite_zombi1_1_1:
     119.  00:9951                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     119.  00:9951  FF FF FF FF FF FF FF FF 
     120.  00:9959                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     120.  00:9959  FF FF FF FF FF FF FF FF 
     121.  00:9961                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     121.  00:9961  FF FF FF FF FF FF FF FF 
     122.  00:9969                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     122.  00:9969  FF FF FF FF FF FF FF FF 
     123.  00:9971                      
     124.  00:9971                      sprite_zombi1_2_1:
     125.  00:9971                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     125.  00:9971  FF FF FF FF FF FF FF FF 
     126.  00:9979                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     126.  00:9979  FF FF FF FF FF FF FF FF 
     127.  00:9981                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     127.  00:9981  FF FF FF FF FF FF FF FF 
     128.  00:9989                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     128.  00:9989  FF FF FF FF FF FF FF FF 
     129.  00:9991                      	
     130.  00:9991                      sprite_zombi1_3_1:
     131.  00:9991                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     131.  00:9991  FF FF FF FF FF FF FF FF 
     132.  00:9999                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     132.  00:9999  FF FF FF FF FF FF FF FF 
     133.  00:99A1                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     133.  00:99A1  FF FF FF FF FF FF FF FF 
     134.  00:99A9                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     134.  00:99A9  FF FF FF FF FF FF FF FF 
     135.  00:99B1                      	
     136.  00:99B1                      sprite_zombi1_4_1:
     137.  00:99B1                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     137.  00:99B1  FF FF FF FF FF FF FF FF 
     138.  00:99B9                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     138.  00:99B9  FF FF FF FF FF FF FF FF 
     139.  00:99C1                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     139.  00:99C1  FF FF FF FF FF FF FF FF 
     140.  00:99C9                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     140.  00:99C9  FF FF FF FF FF FF FF FF 
     141.  00:99D1                      	
     142.  00:99D1                      sprite_zombi1_1_2:
     143.  00:99D1                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     143.  00:99D1  FF FF FF FF FF FF FF FF 
     144.  00:99D9                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     144.  00:99D9  FF FF FF FF FF FF FF FF 
     145.  00:99E1                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     145.  00:99E1  FF FF FF FF FF FF FF FF 
     146.  00:99E9                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     146.  00:99E9  FF FF FF FF FF FF FF FF 
     147.  00:99F1                      
     148.  00:99F1                      sprite_zombi1_2_2:
     149.  00:99F1                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     149.  00:99F1  FF FF FF FF FF FF FF FF 
     150.  00:99F9                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     150.  00:99F9  FF FF FF FF FF FF FF FF 
     151.  00:9A01                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     151.  00:9A01  FF FF FF FF FF FF FF FF 
     152.  00:9A09                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     152.  00:9A09  FF FF FF FF FF FF FF FF 
     153.  00:9A11                      	
     154.  00:9A11                      sprite_zombi1_3_2:
     155.  00:9A11                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     155.  00:9A11  FF FF FF FF FF FF FF FF 
     156.  00:9A19                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     156.  00:9A19  FF FF FF FF FF FF FF FF 
     157.  00:9A21                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     157.  00:9A21  FF FF FF FF FF FF FF FF 
     158.  00:9A29                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     158.  00:9A29  FF FF FF FF FF FF FF FF 
     159.  00:9A31                      	
     160.  00:9A31                      sprite_zombi1_4_2:
     161.  00:9A31                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     161.  00:9A31  FF FF FF FF FF FF FF FF 
     162.  00:9A39                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     162.  00:9A39  FF FF FF FF FF FF FF FF 
     163.  00:9A41                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     163.  00:9A41  FF FF FF FF FF FF FF FF 
     164.  00:9A49                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     164.  00:9A49  FF FF FF FF FF FF FF FF 
     165.  00:9A51                      	
     166.  00:9A51                      sprite_zombi2_1_1:
     167.  00:9A51                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     167.  00:9A51  FF FF FF FF FF FF FF FF 
     168.  00:9A59                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     168.  00:9A59  FF FF FF FF FF FF FF FF 
     169.  00:9A61                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     169.  00:9A61  FF FF FF FF FF FF FF FF 
     170.  00:9A69                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     170.  00:9A69  FF FF FF FF FF FF FF FF 
     171.  00:9A71                      
     172.  00:9A71                      sprite_zombi2_2_1:
     173.  00:9A71                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     173.  00:9A71  FF FF FF FF FF FF FF FF 
     174.  00:9A79                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     174.  00:9A79  FF FF FF FF FF FF FF FF 
     175.  00:9A81                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     175.  00:9A81  FF FF FF FF FF FF FF FF 
     176.  00:9A89                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     176.  00:9A89  FF FF FF FF FF FF FF FF 
     177.  00:9A91                      	
     178.  00:9A91                      sprite_zombi2_3_1:
     179.  00:9A91                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     179.  00:9A91  FF FF FF FF FF FF FF FF 
     180.  00:9A99                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     180.  00:9A99  FF FF FF FF FF FF FF FF 
     181.  00:9AA1                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     181.  00:9AA1  FF FF FF FF FF FF FF FF 
     182.  00:9AA9                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     182.  00:9AA9  FF FF FF FF FF FF FF FF 
     183.  00:9AB1                      	
     184.  00:9AB1                      sprite_zombi2_4_1:
     185.  00:9AB1                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     185.  00:9AB1  FF FF FF FF FF FF FF FF 
     186.  00:9AB9                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     186.  00:9AB9  FF FF FF FF FF FF FF FF 
     187.  00:9AC1                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     187.  00:9AC1  FF FF FF FF FF FF FF FF 
     188.  00:9AC9                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     188.  00:9AC9  FF FF FF FF FF FF FF FF 
     189.  00:9AD1                      	
     190.  00:9AD1                      sprite_zombi2_1_2:
     191.  00:9AD1                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     191.  00:9AD1  FF FF FF FF FF FF FF FF 
     192.  00:9AD9                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     192.  00:9AD9  FF FF FF FF FF FF FF FF 
     193.  00:9AE1                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     193.  00:9AE1  FF FF FF FF FF FF FF FF 
     194.  00:9AE9                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     194.  00:9AE9  FF FF FF FF FF FF FF FF 
     195.  00:9AF1                      
     196.  00:9AF1                      sprite_zombi2_2_2:
     197.  00:9AF1                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     197.  00:9AF1  FF FF FF FF FF FF FF FF 
     198.  00:9AF9                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     198.  00:9AF9  FF FF FF FF FF FF FF FF 
     199.  00:9B01                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     199.  00:9B01  FF FF FF FF FF FF FF FF 
     200.  00:9B09                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     200.  00:9B09  FF FF FF FF FF FF FF FF 
     201.  00:9B11                      	
     202.  00:9B11                      sprite_zombi2_3_2:
     203.  00:9B11                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     203.  00:9B11  FF FF FF FF FF FF FF FF 
     204.  00:9B19                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     204.  00:9B19  FF FF FF FF FF FF FF FF 
     205.  00:9B21                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     205.  00:9B21  FF FF FF FF FF FF FF FF 
     206.  00:9B29                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     206.  00:9B29  FF FF FF FF FF FF FF FF 
     207.  00:9B31                      	
     208.  00:9B31                      sprite_zombi2_4_2:
     209.  00:9B31                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     209.  00:9B31  FF FF FF FF FF FF FF FF 
     210.  00:9B39                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     210.  00:9B39  FF FF FF FF FF FF FF FF 
     211.  00:9B41                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     211.  00:9B41  FF FF FF FF FF FF FF FF 
     212.  00:9B49                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     212.  00:9B49  FF FF FF FF FF FF FF FF 
     213.  00:9B51                      	
     214.  00:9B51                      ;; CABALLERO
     215.  00:9B51                      
     216.  00:9B51                      sprite_caballero1_1_1:
     217.  00:9B51                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     217.  00:9B51  FF FF FF FF FF FF FF FF 
     218.  00:9B59                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     218.  00:9B59  FF FF FF FF FF FF FF FF 
     219.  00:9B61                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     219.  00:9B61  FF FF FF FF FF FF FF FF 
     220.  00:9B69                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     220.  00:9B69  FF FF FF FF FF FF FF FF 
     221.  00:9B71                      
     222.  00:9B71                      sprite_caballero1_2_1:
     223.  00:9B71                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     223.  00:9B71  FF FF FF FF FF FF FF FF 
     224.  00:9B79                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     224.  00:9B79  FF FF FF FF FF FF FF FF 
     225.  00:9B81                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     225.  00:9B81  FF FF FF FF FF FF FF FF 
     226.  00:9B89                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     226.  00:9B89  FF FF FF FF FF FF FF FF 
     227.  00:9B91                      	
     228.  00:9B91                      sprite_caballero1_3_1:
     229.  00:9B91                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     229.  00:9B91  FF FF FF FF FF FF FF FF 
     230.  00:9B99                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     230.  00:9B99  FF FF FF FF FF FF FF FF 
     231.  00:9BA1                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     231.  00:9BA1  FF FF FF FF FF FF FF FF 
     232.  00:9BA9                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     232.  00:9BA9  FF FF FF FF FF FF FF FF 
     233.  00:9BB1                      	
     234.  00:9BB1                      sprite_caballero1_4_1:
     235.  00:9BB1                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     235.  00:9BB1  FF FF FF FF FF FF FF FF 
     236.  00:9BB9                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     236.  00:9BB9  FF FF FF FF FF FF FF FF 
     237.  00:9BC1                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     237.  00:9BC1  FF FF FF FF FF FF FF FF 
     238.  00:9BC9                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     238.  00:9BC9  FF FF FF FF FF FF FF FF 
     239.  00:9BD1                      	
     240.  00:9BD1                      sprite_caballero1_1_2:
     241.  00:9BD1                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     241.  00:9BD1  FF FF FF FF FF FF FF FF 
     242.  00:9BD9                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     242.  00:9BD9  FF FF FF FF FF FF FF FF 
     243.  00:9BE1                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     243.  00:9BE1  FF FF FF FF FF FF FF FF 
     244.  00:9BE9                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     244.  00:9BE9  FF FF FF FF FF FF FF FF 
     245.  00:9BF1                      
     246.  00:9BF1                      sprite_caballero1_2_2:
     247.  00:9BF1                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     247.  00:9BF1  FF FF FF FF FF FF FF FF 
     248.  00:9BF9                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     248.  00:9BF9  FF FF FF FF FF FF FF FF 
     249.  00:9C01                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     249.  00:9C01  FF FF FF FF FF FF FF FF 
     250.  00:9C09                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     250.  00:9C09  FF FF FF FF FF FF FF FF 
     251.  00:9C11                      	
     252.  00:9C11                      sprite_caballero1_3_2:
     253.  00:9C11                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     253.  00:9C11  FF FF FF FF FF FF FF FF 
     254.  00:9C19                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     254.  00:9C19  FF FF FF FF FF FF FF FF 
     255.  00:9C21                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     255.  00:9C21  FF FF FF FF FF FF FF FF 
     256.  00:9C29                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     256.  00:9C29  FF FF FF FF FF FF FF FF 
     257.  00:9C31                      	
     258.  00:9C31                      sprite_caballero1_4_2:
     259.  00:9C31                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     259.  00:9C31  FF FF FF FF FF FF FF FF 
     260.  00:9C39                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     260.  00:9C39  FF FF FF FF FF FF FF FF 
     261.  00:9C41                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     261.  00:9C41  FF FF FF FF FF FF FF FF 
     262.  00:9C49                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     262.  00:9C49  FF FF FF FF FF FF FF FF 
     263.  00:9C51                      	
     264.  00:9C51                      sprite_caballero2_1_1:
     265.  00:9C51                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     265.  00:9C51  FF FF FF FF FF FF FF FF 
     266.  00:9C59                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     266.  00:9C59  FF FF FF FF FF FF FF FF 
     267.  00:9C61                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     267.  00:9C61  FF FF FF FF FF FF FF FF 
     268.  00:9C69                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     268.  00:9C69  FF FF FF FF FF FF FF FF 
     269.  00:9C71                      
     270.  00:9C71                      sprite_caballero2_2_1:
     271.  00:9C71                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     271.  00:9C71  FF FF FF FF FF FF FF FF 
     272.  00:9C79                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     272.  00:9C79  FF FF FF FF FF FF FF FF 
     273.  00:9C81                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     273.  00:9C81  FF FF FF FF FF FF FF FF 
     274.  00:9C89                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     274.  00:9C89  FF FF FF FF FF FF FF FF 
     275.  00:9C91                      	
     276.  00:9C91                      sprite_caballero2_3_1:
     277.  00:9C91                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     277.  00:9C91  FF FF FF FF FF FF FF FF 
     278.  00:9C99                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     278.  00:9C99  FF FF FF FF FF FF FF FF 
     279.  00:9CA1                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     279.  00:9CA1  FF FF FF FF FF FF FF FF 
     280.  00:9CA9                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     280.  00:9CA9  FF FF FF FF FF FF FF FF 
     281.  00:9CB1                      	
     282.  00:9CB1                      sprite_caballero2_4_1:
     283.  00:9CB1                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     283.  00:9CB1  FF FF FF FF FF FF FF FF 
     284.  00:9CB9                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     284.  00:9CB9  FF FF FF FF FF FF FF FF 
     285.  00:9CC1                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     285.  00:9CC1  FF FF FF FF FF FF FF FF 
     286.  00:9CC9                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     286.  00:9CC9  FF FF FF FF FF FF FF FF 
     287.  00:9CD1                      	
     288.  00:9CD1                      sprite_caballero2_1_2:
     289.  00:9CD1                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     289.  00:9CD1  FF FF FF FF FF FF FF FF 
     290.  00:9CD9                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     290.  00:9CD9  FF FF FF FF FF FF FF FF 
     291.  00:9CE1                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     291.  00:9CE1  FF FF FF FF FF FF FF FF 
     292.  00:9CE9                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     292.  00:9CE9  FF FF FF FF FF FF FF FF 
     293.  00:9CF1                      
     294.  00:9CF1                      sprite_caballero2_2_2:
     295.  00:9CF1                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     295.  00:9CF1  FF FF FF FF FF FF FF FF 
     296.  00:9CF9                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     296.  00:9CF9  FF FF FF FF FF FF FF FF 
     297.  00:9D01                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     297.  00:9D01  FF FF FF FF FF FF FF FF 
     298.  00:9D09                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     298.  00:9D09  FF FF FF FF FF FF FF FF 
     299.  00:9D11                      	
     300.  00:9D11                      sprite_caballero2_3_2:
     301.  00:9D11                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     301.  00:9D11  FF FF FF FF FF FF FF FF 
     302.  00:9D19                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     302.  00:9D19  FF FF FF FF FF FF FF FF 
     303.  00:9D21                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     303.  00:9D21  FF FF FF FF FF FF FF FF 
     304.  00:9D29                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     304.  00:9D29  FF FF FF FF FF FF FF FF 
     305.  00:9D31                      	
     306.  00:9D31                      sprite_caballero2_4_2:
     307.  00:9D31                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     307.  00:9D31  FF FF FF FF FF FF FF FF 
     308.  00:9D39                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     308.  00:9D39  FF FF FF FF FF FF FF FF 
     309.  00:9D41                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     309.  00:9D41  FF FF FF FF FF FF FF FF 
     310.  00:9D49                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     310.  00:9D49  FF FF FF FF FF FF FF FF 
     311.  00:9D51                      	
     312.  00:9D51                      ;; LLAMA
     313.  00:9D51                      
     314.  00:9D51                      sprite_llama1_1:	
     315.  00:9D51                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     315.  00:9D51  FF FF FF FF FF FF FF FF 
     316.  00:9D59                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     316.  00:9D59  FF FF FF FF FF FF FF FF 
     317.  00:9D61                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     317.  00:9D61  FF FF FF FF FF FF FF FF 
     318.  00:9D69                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     318.  00:9D69  FF FF FF FF FF FF FF FF 
     319.  00:9D71                      	
     320.  00:9D71                      sprite_llama2_1:	
     321.  00:9D71                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     321.  00:9D71  FF FF FF FF FF FF FF FF 
     322.  00:9D79                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     322.  00:9D79  FF FF FF FF FF FF FF FF 
     323.  00:9D81                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     323.  00:9D81  FF FF FF FF FF FF FF FF 
     324.  00:9D89                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF	
     324.  00:9D89  FF FF FF FF FF FF FF FF 
     325.  00:9D91                      	
     326.  00:9D91                      sprite_llama1_2:	
     327.  00:9D91                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     327.  00:9D91  FF FF FF FF FF FF FF FF 
     328.  00:9D99                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     328.  00:9D99  FF FF FF FF FF FF FF FF 
     329.  00:9DA1                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     329.  00:9DA1  FF FF FF FF FF FF FF FF 
     330.  00:9DA9                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     330.  00:9DA9  FF FF FF FF FF FF FF FF 
     331.  00:9DB1                      	
     332.  00:9DB1                      sprite_llama2_2:	
     333.  00:9DB1                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     333.  00:9DB1  FF FF FF FF FF FF FF FF 
     334.  00:9DB9                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     334.  00:9DB9  FF FF FF FF FF FF FF FF 
     335.  00:9DC1                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     335.  00:9DC1  FF FF FF FF FF FF FF FF 
     336.  00:9DC9                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF			
     336.  00:9DC9  FF FF FF FF FF FF FF FF 
     337.  00:9DD1                      	
     338.  00:9DD1                      ;; FANTASMA
     339.  00:9DD1                      
     340.  00:9DD1                      sprite_fantasma1_1:
     341.  00:9DD1                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     341.  00:9DD1  FF FF FF FF FF FF FF FF 
     342.  00:9DD9                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     342.  00:9DD9  FF FF FF FF FF FF FF FF 
     343.  00:9DE1                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     343.  00:9DE1  FF FF FF FF FF FF FF FF 
     344.  00:9DE9                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     344.  00:9DE9  FF FF FF FF FF FF FF FF 
     345.  00:9DF1                      
     346.  00:9DF1                      sprite_fantasma2_1:
     347.  00:9DF1                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     347.  00:9DF1  FF FF FF FF FF FF FF FF 
     348.  00:9DF9                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     348.  00:9DF9  FF FF FF FF FF FF FF FF 
     349.  00:9E01                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     349.  00:9E01  FF FF FF FF FF FF FF FF 
     350.  00:9E09                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     350.  00:9E09  FF FF FF FF FF FF FF FF 
     351.  00:9E11                      
     352.  00:9E11                      sprite_fantasma1_2:
     353.  00:9E11                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     353.  00:9E11  FF FF FF FF FF FF FF FF 
     354.  00:9E19                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     354.  00:9E19  FF FF FF FF FF FF FF FF 
     355.  00:9E21                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     355.  00:9E21  FF FF FF FF FF FF FF FF 
     356.  00:9E29                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     356.  00:9E29  FF FF FF FF FF FF FF FF 
     357.  00:9E31                      
     358.  00:9E31                      sprite_fantasma2_2:
     359.  00:9E31                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     359.  00:9E31  FF FF FF FF FF FF FF FF 
     360.  00:9E39                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     360.  00:9E39  FF FF FF FF FF FF FF FF 
     361.  00:9E41                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     361.  00:9E41  FF FF FF FF FF FF FF FF 
     362.  00:9E49                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF	
     362.  00:9E49  FF FF FF FF FF FF FF FF 
     363.  00:9E51                      	
     364.  00:9E51                      ;; MAGIA
     365.  00:9E51                      
     366.  00:9E51                      sprite_magia1_1:
     367.  00:9E51                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     367.  00:9E51  FF FF FF FF FF FF FF FF 
     368.  00:9E59                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     368.  00:9E59  FF FF FF FF FF FF FF FF 
     369.  00:9E61                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     369.  00:9E61  FF FF FF FF FF FF FF FF 
     370.  00:9E69                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     370.  00:9E69  FF FF FF FF FF FF FF FF 
     371.  00:9E71                      
     372.  00:9E71                      sprite_magia2_1:
     373.  00:9E71                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     373.  00:9E71  FF FF FF FF FF FF FF FF 
     374.  00:9E79                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     374.  00:9E79  FF FF FF FF FF FF FF FF 
     375.  00:9E81                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     375.  00:9E81  FF FF FF FF FF FF FF FF 
     376.  00:9E89                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     376.  00:9E89  FF FF FF FF FF FF FF FF 
     377.  00:9E91                      
     378.  00:9E91                      sprite_magia1_2:
     379.  00:9E91                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     379.  00:9E91  FF FF FF FF FF FF FF FF 
     380.  00:9E99                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     380.  00:9E99  FF FF FF FF FF FF FF FF 
     381.  00:9EA1                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     381.  00:9EA1  FF FF FF FF FF FF FF FF 
     382.  00:9EA9                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     382.  00:9EA9  FF FF FF FF FF FF FF FF 
     383.  00:9EB1                      
     384.  00:9EB1                      sprite_magia2_2:
     385.  00:9EB1                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     385.  00:9EB1  FF FF FF FF FF FF FF FF 
     386.  00:9EB9                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     386.  00:9EB9  FF FF FF FF FF FF FF FF 
     387.  00:9EC1                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     387.  00:9EC1  FF FF FF FF FF FF FF FF 
     388.  00:9EC9                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF	
     388.  00:9EC9  FF FF FF FF FF FF FF FF 
     389.  00:9ED1                      	
     390.  00:9ED1                      	
     391.  00:9ED1                      ;; BEHOLDER
     392.  00:9ED1                      
     393.  00:9ED1                      sprite_beholder1_1:
     394.  00:9ED1                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     394.  00:9ED1  FF FF FF FF FF FF FF FF 
     395.  00:9ED9                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     395.  00:9ED9  FF FF FF FF FF FF FF FF 
     396.  00:9EE1                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     396.  00:9EE1  FF FF FF FF FF FF FF FF 
     397.  00:9EE9                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     397.  00:9EE9  FF FF FF FF FF FF FF FF 
     398.  00:9EF1                      
     399.  00:9EF1                      sprite_beholder2_1:
     400.  00:9EF1                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     400.  00:9EF1  FF FF FF FF FF FF FF FF 
     401.  00:9EF9                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     401.  00:9EF9  FF FF FF FF FF FF FF FF 
     402.  00:9F01                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     402.  00:9F01  FF FF FF FF FF FF FF FF 
     403.  00:9F09                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     403.  00:9F09  FF FF FF FF FF FF FF FF 
     404.  00:9F11                      
     405.  00:9F11                      sprite_beholder3_1:
     406.  00:9F11                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     406.  00:9F11  FF FF FF FF FF FF FF FF 
     407.  00:9F19                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     407.  00:9F19  FF FF FF FF FF FF FF FF 
     408.  00:9F21                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     408.  00:9F21  FF FF FF FF FF FF FF FF 
     409.  00:9F29                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     409.  00:9F29  FF FF FF FF FF FF FF FF 
     410.  00:9F31                      
     411.  00:9F31                      sprite_beholder4_1:
     412.  00:9F31                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     412.  00:9F31  FF FF FF FF FF FF FF FF 
     413.  00:9F39                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     413.  00:9F39  FF FF FF FF FF FF FF FF 
     414.  00:9F41                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     414.  00:9F41  FF FF FF FF FF FF FF FF 
     415.  00:9F49                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF	
     415.  00:9F49  FF FF FF FF FF FF FF FF 
     416.  00:9F51                      	
     417.  00:9F51                      sprite_beholder1_2:
     418.  00:9F51                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     418.  00:9F51  FF FF FF FF FF FF FF FF 
     419.  00:9F59                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     419.  00:9F59  FF FF FF FF FF FF FF FF 
     420.  00:9F61                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     420.  00:9F61  FF FF FF FF FF FF FF FF 
     421.  00:9F69                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     421.  00:9F69  FF FF FF FF FF FF FF FF 
     422.  00:9F71                      
     423.  00:9F71                      sprite_beholder2_2:
     424.  00:9F71                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     424.  00:9F71  FF FF FF FF FF FF FF FF 
     425.  00:9F79                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     425.  00:9F79  FF FF FF FF FF FF FF FF 
     426.  00:9F81                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     426.  00:9F81  FF FF FF FF FF FF FF FF 
     427.  00:9F89                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     427.  00:9F89  FF FF FF FF FF FF FF FF 
     428.  00:9F91                      
     429.  00:9F91                      sprite_beholder3_2:
     430.  00:9F91                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     430.  00:9F91  FF FF FF FF FF FF FF FF 
     431.  00:9F99                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     431.  00:9F99  FF FF FF FF FF FF FF FF 
     432.  00:9FA1                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     432.  00:9FA1  FF FF FF FF FF FF FF FF 
     433.  00:9FA9                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     433.  00:9FA9  FF FF FF FF FF FF FF FF 
     434.  00:9FB1                      
     435.  00:9FB1                      sprite_beholder4_2:
     436.  00:9FB1                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     436.  00:9FB1  FF FF FF FF FF FF FF FF 
     437.  00:9FB9                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     437.  00:9FB9  FF FF FF FF FF FF FF FF 
     438.  00:9FC1                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     438.  00:9FC1  FF FF FF FF FF FF FF FF 
     439.  00:9FC9                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF		
     439.  00:9FC9  FF FF FF FF FF FF FF FF 
     440.  00:9FD1                      	
     441.  00:9FD1                      ;; VAMPIRO
     442.  00:9FD1                      
     443.  00:9FD1                      sprite_vampiro1_1:
     444.  00:9FD1                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     444.  00:9FD1  FF FF FF FF FF FF FF FF 
     445.  00:9FD9                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     445.  00:9FD9  FF FF FF FF FF FF FF FF 
     446.  00:9FE1                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     446.  00:9FE1  FF FF FF FF FF FF FF FF 
     447.  00:9FE9                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     447.  00:9FE9  FF FF FF FF FF FF FF FF 
     448.  00:9FF1                      
     449.  00:9FF1                      sprite_vampiro2_1:
     450.  00:9FF1                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     450.  00:9FF1  FF FF FF FF FF FF FF FF 
     451.  00:9FF9                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     451.  00:9FF9  FF FF FF FF FF FF FF FF 
     452.  00:A001                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     452.  00:A001  FF FF FF FF FF FF FF FF 
     453.  00:A009                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     453.  00:A009  FF FF FF FF FF FF FF FF 
     454.  00:A011                      
     455.  00:A011                      sprite_vampiro1_2:
     456.  00:A011                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     456.  00:A011  FF FF FF FF FF FF FF FF 
     457.  00:A019                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     457.  00:A019  FF FF FF FF FF FF FF FF 
     458.  00:A021                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     458.  00:A021  FF FF FF FF FF FF FF FF 
     459.  00:A029                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     459.  00:A029  FF FF FF FF FF FF FF FF 
     460.  00:A031                      
     461.  00:A031                      sprite_vampiro2_2:
     462.  00:A031                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     462.  00:A031  FF FF FF FF FF FF FF FF 
     463.  00:A039                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     463.  00:A039  FF FF FF FF FF FF FF FF 
     464.  00:A041                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     464.  00:A041  FF FF FF FF FF FF FF FF 
     465.  00:A049                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     465.  00:A049  FF FF FF FF FF FF FF FF 
     466.  00:A051                      	
     467.  00:A051                      ;; MANOIZQ
     468.  00:A051                      
     469.  00:A051                      sprite_manoizq1:
     470.  00:A051                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     470.  00:A051  FF FF FF FF FF FF FF FF 
     471.  00:A059                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     471.  00:A059  FF FF FF FF FF FF FF FF 
     472.  00:A061                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     472.  00:A061  FF FF FF FF FF FF FF FF 
     473.  00:A069                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     473.  00:A069  FF FF FF FF FF FF FF FF 
     474.  00:A071                      	
     475.  00:A071                      sprite_manoizq2:
     476.  00:A071                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     476.  00:A071  FF FF FF FF FF FF FF FF 
     477.  00:A079                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     477.  00:A079  FF FF FF FF FF FF FF FF 
     478.  00:A081                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     478.  00:A081  FF FF FF FF FF FF FF FF 
     479.  00:A089                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     479.  00:A089  FF FF FF FF FF FF FF FF 
     480.  00:A091                      	
     481.  00:A091                      sprite_manoizq3:
     482.  00:A091                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     482.  00:A091  FF FF FF FF FF FF FF FF 
     483.  00:A099                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     483.  00:A099  FF FF FF FF FF FF FF FF 
     484.  00:A0A1                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     484.  00:A0A1  FF FF FF FF FF FF FF FF 
     485.  00:A0A9                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF	
     485.  00:A0A9  FF FF FF FF FF FF FF FF 
     486.  00:A0B1                      	
     487.  00:A0B1                      ;; MANODER
     488.  00:A0B1                      
     489.  00:A0B1                      sprite_manoder1:
     490.  00:A0B1                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     490.  00:A0B1  FF FF FF FF FF FF FF FF 
     491.  00:A0B9                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     491.  00:A0B9  FF FF FF FF FF FF FF FF 
     492.  00:A0C1                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     492.  00:A0C1  FF FF FF FF FF FF FF FF 
     493.  00:A0C9                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     493.  00:A0C9  FF FF FF FF FF FF FF FF 
     494.  00:A0D1                      	
     495.  00:A0D1                      sprite_manoder2:
     496.  00:A0D1                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     496.  00:A0D1  FF FF FF FF FF FF FF FF 
     497.  00:A0D9                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     497.  00:A0D9  FF FF FF FF FF FF FF FF 
     498.  00:A0E1                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     498.  00:A0E1  FF FF FF FF FF FF FF FF 
     499.  00:A0E9                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     499.  00:A0E9  FF FF FF FF FF FF FF FF 
     500.  00:A0F1                      	
     501.  00:A0F1                      sprite_manoder3:
     502.  00:A0F1                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     502.  00:A0F1  FF FF FF FF FF FF FF FF 
     503.  00:A0F9                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     503.  00:A0F9  FF FF FF FF FF FF FF FF 
     504.  00:A101                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     504.  00:A101  FF FF FF FF FF FF FF FF 
     505.  00:A109                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF		
     505.  00:A109  FF FF FF FF FF FF FF FF 
     506.  00:A111                      	
     507.  00:A111                      	
     508.  00:A111                      	
     509.  00:A111                      	
     510.  00:A111                      	
     511.  00:A111                      	
     512.  00:A111                      	
     513.  00:A111                      	
     514.  00:A111                      	
     515.  00:A111                      	
     516.  00:A111                      	
     517.  00:A111                      	
     518.  00:A111                      	
     519.  00:A111                      	
     520.  00:A111                      	
     521.  00:A111                      	
     522.  00:A111                      	
     523.  00:A111                      	
     524.  00:A111                      	
     525.  00:A111                      	
     526.  00:A111                      	
     527.  00:A111                      	
     528.  00:A111                      	
     138   00:A111                      	
     139   00:A111                      	include "habitaciones.asm"
       1.  00:A111                      ;;=====================================================
       2.  00:A111                      ;;DEFINICIÓN DE HABITACIONES x NIVEL
       3.  00:A111                      ;;=====================================================	
       4.  00:A111                      
       5.  00:A111                      ; sólo voy a usar 7x7 pero como los arrays son lineales y voy a trabajar con matrices
       6.  00:A111                      ; me interesa que seande  8x8 aunque sólo trabaje con 7x7
       7.  00:A111                      
       8.  00:A111                      ; ojo... la primera linea corresponderá a la primera linea del castillo no a la última
       9.  00:A111                      
      10.  00:A111                      ;; definición de estructura de bits
      11.  00:A111                      ;16 bits por habitación
      12.  00:A111                      ;~ 0000 - nº puertas 1 arriba 1 derecha 1 abajo 1 izquierda
      13.  00:A111                      ;~ 1 - hay reliquia?
      14.  00:A111                      ;~ 1 - hay vida extra
      15.  00:A111                      ;~ 1 - hay arma extra (durará 6 pantallas - sonido distinto)
      16.  00:A111                      ;~ 1 - hay energía? (sobran bits ... se puede usar otro como carga energía +)
      17.  00:A111                      ;~ 1 - es pantalla de mostruo fin de fase?
      18.  00:A111                      ;~ 1 - es pantalla inicial (equivaldría a la puerta de un castillo)?
      19.  00:A111                      ;~ 1 - es pantalla final?
      20.  00:A111                      
      21.  00:A111                      
      22.  00:A111                      ;importante: el byte de la columna 15 indicará con 1 y 0 habitaciones por las que se haya pasado
      23.  00:A111                      ;cuando se inicie la partida todos se pondrán a 0
      24.  00:A111                      
      25.  00:A111                      habitacion_actual:
      26.  00:A111  00 00               	db  #00,#00		;habitación donde se encuentre el prota. Se mete en una varible par traer todos los datos de golpe y no buscrlos varias veces
      27.  00:A113                      
      28.  00:A113                      habitaciones_juego:
      29.  00:A113                      habitaciones_nivel0:
      30.  00:A113                      	db  00000000b,#00,00000001b,#01,00000010b,#02,00000011b,#03,00001000b,#04,00001001b,#05,00001100b,#06,#FF,#00 ;primera fila
      30.  00:A113  00 00 01 01 02 02 03 03 08 04 09 05 0C 06 FF 00 
      31.  00:A123                      	db  #17,#10,#11,#11,#12,#12,#13,#13,#14,#14,#15,#15,#16,#16,#FF,#00
      31.  00:A123  17 10 11 11 12 12 13 13 14 14 15 15 16 16 FF 00 
      32.  00:A133                      	db  #20,#20,#21,#21,#22,#22,#23,#23,#24,#24,#25,#25,#26,#26,#FF,#00
      32.  00:A133  20 20 21 21 22 22 23 23 24 24 25 25 26 26 FF 00 
      33.  00:A143                      	db  #30,#30,#31,#31,#32,#32,#33,#33,#34,#34,#35,#35,#36,#36,#FF,#00
      33.  00:A143  30 30 31 31 32 32 33 33 34 34 35 35 36 36 FF 00 
      34.  00:A153                      	db  00000000b,#00,00000001b,#01,00001111b,#02,00000011b,#03,00001000b,#04,00001001b,#05,00001100b,#06,#FF,#00
      34.  00:A153  00 00 01 01 0F 02 03 03 08 04 09 05 0C 06 FF 00 
      35.  00:A163                      	db  #50,#50,#51,#51,#52,#52,#53,#53,#54,#54,#55,#55,#56,#56,#FF,#00
      35.  00:A163  50 50 51 51 52 52 53 53 54 54 55 55 56 56 FF 00 
      36.  00:A173                      	db  00000000b,#00,00000001b,#01,00001111b,#02,00000011b,#03,00001000b,#04,00001001b,#05,00001100b,#06,#FF,#00	;ultima fila
      36.  00:A173  00 00 01 01 0F 02 03 03 08 04 09 05 0C 06 FF 00 
      37.  00:A183                      	
      38.  00:A183                      habitaciones_nivel1:
      39.  00:A183                      	db  00000000b,#00,00000001b,#01,00000010b,#02,00000011b,#03,00001000b,#04,00001001b,#05,00001100b,#06,#FF,#00 ;primera fila
      39.  00:A183  00 00 01 01 02 02 03 03 08 04 09 05 0C 06 FF 00 
      40.  00:A193                      	db  #17,#10,#11,#11,#12,#12,#13,#13,#14,#14,#15,#15,#16,#16,#FF,#00
      40.  00:A193  17 10 11 11 12 12 13 13 14 14 15 15 16 16 FF 00 
      41.  00:A1A3                      	db  #20,#20,#21,#21,#22,#22,#23,#23,#24,#24,#25,#25,#26,#26,#FF,#00
      41.  00:A1A3  20 20 21 21 22 22 23 23 24 24 25 25 26 26 FF 00 
      42.  00:A1B3                      	db  #30,#30,#31,#31,#32,#32,#33,#33,#34,#34,#35,#35,#36,#36,#FF,#00
      42.  00:A1B3  30 30 31 31 32 32 33 33 34 34 35 35 36 36 FF 00 
      43.  00:A1C3                      	db  00000000b,#00,00000001b,#01,00001111b,#02,00000011b,#03,00001000b,#04,00001001b,#05,00001100b,#06,#FF,#00
      43.  00:A1C3  00 00 01 01 0F 02 03 03 08 04 09 05 0C 06 FF 00 
      44.  00:A1D3                      	db  #50,#50,#51,#51,#52,#52,#53,#53,#54,#54,#55,#55,#56,#56,#FF,#00
      44.  00:A1D3  50 50 51 51 52 52 53 53 54 54 55 55 56 56 FF 00 
      45.  00:A1E3                      	db  00000000b,#00,00000001b,#01,00000010b,#02,00000011b,#03,00001000b,#04,00001001b,#05,00001100b,#06,#FF,#00	;ultima fila
      45.  00:A1E3  00 00 01 01 02 02 03 03 08 04 09 05 0C 06 FF 00 
      46.  00:A1F3                      	
      47.  00:A1F3                      habitaciones_nivel2:
      48.  00:A1F3                      	db  00000000b,#00,00000001b,#01,00000010b,#02,00000011b,#03,00001000b,#04,00001001b,#05,00001100b,#06,#FF,#00 ;primera fila
      48.  00:A1F3  00 00 01 01 02 02 03 03 08 04 09 05 0C 06 FF 00 
      49.  00:A203                      	db  #17,#10,#11,#11,#12,#12,#13,#13,#14,#14,#15,#15,#16,#16,#FF,#00
      49.  00:A203  17 10 11 11 12 12 13 13 14 14 15 15 16 16 FF 00 
      50.  00:A213                      	db  #20,#20,#21,#21,#22,#22,#23,#23,#24,#24,#25,#25,#26,#26,#FF,#00
      50.  00:A213  20 20 21 21 22 22 23 23 24 24 25 25 26 26 FF 00 
      51.  00:A223                      	db  #30,#30,#31,#31,#32,#32,#33,#33,#34,#34,#35,#35,#36,#36,#FF,#00
      51.  00:A223  30 30 31 31 32 32 33 33 34 34 35 35 36 36 FF 00 
      52.  00:A233                      	db  00000000b,#00,00000001b,#01,00001111b,#02,00000011b,#03,00001000b,#04,00001001b,#05,00001100b,#06,#FF,#00
      52.  00:A233  00 00 01 01 0F 02 03 03 08 04 09 05 0C 06 FF 00 
      53.  00:A243                      	db  #50,#50,#51,#51,#52,#52,#53,#53,#54,#54,#55,#55,#56,#56,#FF,#00
      53.  00:A243  50 50 51 51 52 52 53 53 54 54 55 55 56 56 FF 00 
      54.  00:A253                      	db  00000000b,#00,00000001b,#01,00000010b,#02,00000011b,#03,00001000b,#04,00001001b,#05,00001100b,#06,#FF,#00	;ultima fila
      54.  00:A253  00 00 01 01 02 02 03 03 08 04 09 05 0C 06 FF 00 
      55.  00:A263                      	
      56.  00:A263                      habitaciones_nivel3:
      57.  00:A263                      	db  00000000b,#00,00000001b,#01,00000010b,#02,00000011b,#03,00001000b,#04,00001001b,#05,00001100b,#06,#FF,#00 ;primera fila
      57.  00:A263  00 00 01 01 02 02 03 03 08 04 09 05 0C 06 FF 00 
      58.  00:A273                      	db  #17,#10,#11,#11,#12,#12,#13,#13,#14,#14,#15,#15,#16,#16,#FF,#00
      58.  00:A273  17 10 11 11 12 12 13 13 14 14 15 15 16 16 FF 00 
      59.  00:A283                      	db  #20,#20,#21,#21,#22,#22,#23,#23,#24,#24,#25,#25,#26,#26,#FF,#00
      59.  00:A283  20 20 21 21 22 22 23 23 24 24 25 25 26 26 FF 00 
      60.  00:A293                      	db  #30,#30,#31,#31,#32,#32,#33,#33,#34,#34,#35,#35,#36,#36,#FF,#00
      60.  00:A293  30 30 31 31 32 32 33 33 34 34 35 35 36 36 FF 00 
      61.  00:A2A3                      	db  00000000b,#00,00000001b,#01,00001111b,#02,00000011b,#03,00001000b,#04,00001001b,#05,00001100b,#06,#FF,#00
      61.  00:A2A3  00 00 01 01 0F 02 03 03 08 04 09 05 0C 06 FF 00 
      62.  00:A2B3                      	db  #50,#50,#51,#51,#52,#52,#53,#53,#54,#54,#55,#55,#56,#56,#FF,#00
      62.  00:A2B3  50 50 51 51 52 52 53 53 54 54 55 55 56 56 FF 00 
      63.  00:A2C3                      	db  00000000b,#00,00000001b,#01,00000010b,#02,00000011b,#03,00001000b,#04,00001001b,#05,00001100b,#06,#FF,#00	;ultima fila
      63.  00:A2C3  00 00 01 01 02 02 03 03 08 04 09 05 0C 06 FF 00 
      64.  00:A2D3                      	
      65.  00:A2D3                      habitaciones_nivel4:
      66.  00:A2D3                      	db  00000001b,#00,00000001b,#01,00000010b,#02,00000011b,#03,00001000b,#04,00001001b,#05,00001100b,#06,#FF,#00 ;primera fila
      66.  00:A2D3  01 00 01 01 02 02 03 03 08 04 09 05 0C 06 FF 00 
      67.  00:A2E3                      	db  #17,#10,#11,#11,#12,#12,#13,#13,#14,#14,#15,#15,#16,#16,#FF,#00
      67.  00:A2E3  17 10 11 11 12 12 13 13 14 14 15 15 16 16 FF 00 
      68.  00:A2F3                      	db  #20,#20,#21,#21,#22,#22,#23,#23,#24,#24,#25,#25,#26,#26,#FF,#00
      68.  00:A2F3  20 20 21 21 22 22 23 23 24 24 25 25 26 26 FF 00 
      69.  00:A303                      	db  #30,#30,#31,#31,#32,#32,#33,#33,#34,#34,#35,#35,#36,#36,#FF,#00
      69.  00:A303  30 30 31 31 32 32 33 33 34 34 35 35 36 36 FF 00 
      70.  00:A313                      	db  00000000b,#00,00000001b,#01,00001111b,#02,00000011b,#03,00001000b,#04,00001001b,#05,00001100b,#06,#FF,#00
      70.  00:A313  00 00 01 01 0F 02 03 03 08 04 09 05 0C 06 FF 00 
      71.  00:A323                      	db  #50,#50,#51,#51,#52,#52,#53,#53,#54,#54,#55,#55,#56,#56,#FF,#00
      71.  00:A323  50 50 51 51 52 52 53 53 54 54 55 55 56 56 FF 00 
      72.  00:A333                      	db  00000000b,#00,00000001b,#01,00001111b,#02,00000011b,#03,00001000b,#04,00001001b,#05,00001100b,#06,#FF,#00	;ultima fila
      72.  00:A333  00 00 01 01 0F 02 03 03 08 04 09 05 0C 06 FF 00 
      73.  00:A343                      	
      74.  00:A343                      habitaciones_nivel5:
      75.  00:A343                      	db  00000000b,#00,00000001b,#01,00000010b,#02,00000011b,#03,00001000b,#04,00001001b,#05,00001100b,#06,#FF,#00 ;primera fila
      75.  00:A343  00 00 01 01 02 02 03 03 08 04 09 05 0C 06 FF 00 
      76.  00:A353                      	db  #17,#10,#11,#11,#12,#12,#13,#13,#14,#14,#15,#15,#16,#16,#FF,#00
      76.  00:A353  17 10 11 11 12 12 13 13 14 14 15 15 16 16 FF 00 
      77.  00:A363                      	db  #20,#20,#21,#21,#22,#22,#23,#23,#24,#24,#25,#25,#26,#26,#FF,#00
      77.  00:A363  20 20 21 21 22 22 23 23 24 24 25 25 26 26 FF 00 
      78.  00:A373                      	db  #30,#30,#31,#31,#32,#32,#33,#33,#34,#34,#35,#35,#36,#36,#FF,#00
      78.  00:A373  30 30 31 31 32 32 33 33 34 34 35 35 36 36 FF 00 
      79.  00:A383                      	db  00000000b,#00,00000001b,#01,00001111b,#02,00000011b,#03,00001000b,#04,00001001b,#05,00001100b,#06,#FF,#00
      79.  00:A383  00 00 01 01 0F 02 03 03 08 04 09 05 0C 06 FF 00 
      80.  00:A393                      	db  #50,#50,#51,#51,#52,#52,#53,#53,#54,#54,#55,#55,#56,#56,#FF,#00
      80.  00:A393  50 50 51 51 52 52 53 53 54 54 55 55 56 56 FF 00 
      81.  00:A3A3                      	db  00000000b,#00,00000001b,#01,00001010b,#02,00000011b,#03,00001000b,#04,00001001b,#05,00001100b,#06,#FF,#00	;ultima fila
      81.  00:A3A3  00 00 01 01 0A 02 03 03 08 04 09 05 0C 06 FF 00 
      82.  00:A3B3                      	
      83.  00:A3B3                      habitaciones_nivel6:
      84.  00:A3B3                      	db  00000000b,#00,00000001b,#01,00000010b,#02,00000011b,#03,00001000b,#04,00001001b,#05,00001100b,#06,#FF,#00 ;primera fila
      84.  00:A3B3  00 00 01 01 02 02 03 03 08 04 09 05 0C 06 FF 00 
      85.  00:A3C3                      	db  #17,#10,#11,#11,#12,#12,#13,#13,#14,#14,#15,#15,#16,#16,#FF,#00
      85.  00:A3C3  17 10 11 11 12 12 13 13 14 14 15 15 16 16 FF 00 
      86.  00:A3D3                      	db  #20,#20,#21,#21,#22,#22,#23,#23,#24,#24,#25,#25,#26,#26,#FF,#00
      86.  00:A3D3  20 20 21 21 22 22 23 23 24 24 25 25 26 26 FF 00 
      87.  00:A3E3                      	db  #30,#30,#31,#31,#32,#32,#33,#33,#34,#34,#35,#35,#36,#36,#FF,#00
      87.  00:A3E3  30 30 31 31 32 32 33 33 34 34 35 35 36 36 FF 00 
      88.  00:A3F3                      	db  00000000b,#00,00000001b,#01,00001111b,#02,00000011b,#03,00001000b,#04,00001001b,#05,00001100b,#06,#FF,#00
      88.  00:A3F3  00 00 01 01 0F 02 03 03 08 04 09 05 0C 06 FF 00 
      89.  00:A403                      	db  #50,#50,#51,#51,#52,#52,#53,#53,#54,#54,#55,#55,#56,#56,#FF,#00
      89.  00:A403  50 50 51 51 52 52 53 53 54 54 55 55 56 56 FF 00 
      90.  00:A413                      	db  00000000b,#00,00000001b,#01,00000010b,#02,00000011b,#03,00001000b,#04,00001001b,#05,00001100b,#06,#FF,#00	;ultima fila
      90.  00:A413  00 00 01 01 02 02 03 03 08 04 09 05 0C 06 FF 00 
      91.  00:A423                      
      92.  00:A423                      
      93.  00:A423                      
     140   00:A423                      	
     141   00:A423                      	include "variables.asm"
       1.  00:A423                      ;;=====================================================
       2.  00:A423                      ;;DEFINICIÓN DE VARIABLES
       3.  00:A423                      ;;=====================================================
       4.  00:A423                      
       5.  00:A423                      ;Colores base de la pantalla
       6.  00:A423                      color_base:
       7.  00:A423  01 01 01            			DB		COLNEGRO,COLNEGRO,COLNEGRO	
       8.  00:A426                      ;colores de pantalla cuando se tira bomba
       9.  00:A426                      color_bomba1:
      10.  00:A426  08 08 08            			DB		COLROJO,COLROJO,COLROJO
      11.  00:A429                      color_bomba2:
      12.  00:A429  06 06 06            			DB		COLROJOOSC,COLROJOOSC,COLROJOOSC
      13.  00:A42C                      
      14.  00:A42C                      ;definicion de variable del prota usando la estructura del punto de mira
      15.  00:A42C                      prota:		ESTRUCTURA_PUNTOMIRA
      15.  00:A42C  64 64 00 00 00 05 00 00 00 00 00 00 00 00 00 00 
      16.  00:A43C                      ;variables globales del prota
      17.  00:A43C                      prota_nivel:			;nivel del castillo donde está 0-6
      18.  00:A43C  00                  			DB		0
      19.  00:A43D                      prota_vidas:
      20.  00:A43D  00                  			DB		0
      21.  00:A43E                      prota_reliquias:
      22.  00:A43E  03                  			DB		3
      23.  00:A43F                      prota_pos_mapx:
      24.  00:A43F  00                  			DB		0	;pos columna
      25.  00:A440                      prota_pos_mapy:
      26.  00:A440  00                  			DB		0	;pos fila
      27.  00:A441                      prota_energia:
      28.  00:A441  FA                  			DB		250
      29.  00:A442                      
      30.  00:A442                      ;array para pintar de golpe el marcador de vidas
      31.  00:A442                      array_aux_vidas: 		
      32.  00:A442                      			DB		0,0,0,0,0,0,0,0
      32.  00:A442  00 00 00 00 00 00 00 00 
      33.  00:A44A                      
      34.  00:A44A                      ;array para pintar de golpe el marcador de reliquias
      35.  00:A44A                      array_aux_reliquias:	
      36.  00:A44A                      			DB		0,0,0,0,0,0,0,0
      36.  00:A44A  00 00 00 00 00 00 00 00 
      37.  00:A452                      
      38.  00:A452                      array_aux_energia:					;array para pintar de golpe el marcador de energía
      39.  00:A452                      			DB		16,0,0,0,0,0,0 	;el 16 primero es porque siempre estará pintado el cuadro primero rojo
      39.  00:A452  10 00 00 00 00 00 00 
      40.  00:A459                      ultimo_pos_array_aux_energia:
      41.  00:A459  00                  			DB		0				;el array completo es de 8 pero para posicionar sin niecesidad de cálculos  etiqueto este aparte
      42.  00:A45A                      			
      43.  00:A45A                      array_aux_mapa_limpiar:	;es por facilitar el reseteo del mapa (pinto 7 lineas en negro con bios) la otra opción es más larga en código y complicada aunque más rápida
      44.  00:A45A                      			DB		0,0,0,0,0,0,0
      44.  00:A45A  00 00 00 00 00 00 00 
      45.  00:A461                      elemento_pintar_mapa:
      46.  00:A461  00                  			DB		0	;TILEPROTAM = 19, ;TILEGRISM = 9
      47.  00:A462                      			
      48.  00:A462                      ;; nota importante: cada vez que se cambie de nivel se actualizará el contenido
      49.  00:A462                      ;; arrays con mapa de tiles de las puertas
      50.  00:A462                      array_puerta_arriba:
      51.  00:A462  03 01 01 03         array_puerta_arriba1:		DB	3,1,1,3
      52.  00:A466  01 01 01 01         array_puerta_arriba2:		DB	1,1,1,1
      53.  00:A46A  01 01 01 01         array_puerta_arriba3:		DB	1,1,1,1
      54.  00:A46E  01 01 01 01         array_puerta_arriba4:		DB	1,1,1,1
      55.  00:A472  01 01 01 01         array_puerta_arriba5:		DB	1,1,1,1
      56.  00:A476                      
      57.  00:A476                      array_puerta_derecha:
      58.  00:A476  01 03 03            array_puerta_derecha1:		DB	1,3,3
      59.  00:A479  01 01 03            array_puerta_derecha2:		DB	1,1,3
      60.  00:A47C  01 01 01            array_puerta_derecha3:		DB	1,1,1
      61.  00:A47F  01 01 01            array_puerta_derecha4:		DB	1,1,1
      62.  00:A482  01 01 01            array_puerta_derecha5:		DB	1,1,1
      63.  00:A485  02 01 01            array_puerta_derecha6:		DB	2,1,1
      64.  00:A488  04 02 01            array_puerta_derecha7:		DB	4,2,1
      65.  00:A48B                      	
      66.  00:A48B  01 01 01 01         array_puerta_abajo:			DB	1,1,1,1
      67.  00:A48F                      
      68.  00:A48F                      array_puerta_izquierda:
      69.  00:A48F  03 03 01            array_puerta_izquierda1:	DB	3,3,1
      70.  00:A492  03 01 01            array_puerta_izquierda2:	DB	3,1,1
      71.  00:A495  01 01 01            array_puerta_izquierda3:	DB	1,1,1
      72.  00:A498  01 01 01            array_puerta_izquierda4:	DB	1,1,1
      73.  00:A49B  01 01 01            array_puerta_izquierda5:	DB	1,1,1
      74.  00:A49E  01 01 02            array_puerta_izquierda6:	DB	1,1,2
      75.  00:A4A1  01 02 04            array_puerta_izquierda7:	DB	1,2,4
      76.  00:A4A4                      
      77.  00:A4A4                      ;array con posiciones pseudoaleatorias de ayudas y extras (qué valor se escogerá con R 0-127 + and 00001111)
      78.  00:A4A4                      ;+256 porque aparecerán todas en el banco1
      79.  00:A4A4                      pos_ayudas:					DW	256,260,274,279,301,325,329,338,346,408,427,436,446,448,454,464
      79.  00:A4A4  00 01 04 01 12 01 17 01 2D 01 45 01 49 01 52 01 
      79.  00:A4B4  5A 01 98 01 AB 01 B4 01 BE 01 C0 01 C6 01 D0 01 
      80.  00:A4C4                      
      81.  00:A4C4                      ;array de ayudas
      82.  00:A4C4                      array_ayudas:
      83.  00:A4C4  C8 CA               array_oracionon:			DB	200,202
      84.  00:A4C6  CA CB               array_oracionon1:			DB	202,203
      85.  00:A4C8  CC CE               array_oracionoff:			DB	204,206
      86.  00:A4CA  CD CF               array_oracionoff1:			DB	205,207
      87.  00:A4CC  D0 D2               array_cruzon:				DB	208,210
      88.  00:A4CE  D1 D3               array_cruzon1:				DB	209,211
      89.  00:A4D0  D4 D6               array_cruzoff:				DB	212,214
      90.  00:A4D2  D5 D7               array_cruzoff1:				DB	213,215
      91.  00:A4D4  D8 DA               array_aguaon:				DB	216,218
      92.  00:A4D6  D9 DB               array_aguaon1:				DB	217,219
      93.  00:A4D8  DC DE               array_aguaoff:				DB	220,222
      94.  00:A4DA  DD DF               array_aguaoff1:				DB	221,223
      95.  00:A4DC  E0 E2               array_armaduraon:			DB	224,226
      96.  00:A4DE  E1 E3               array_armaduraon1:			DB	225,227
      97.  00:A4E0  E4 E6               array_armaduraoff:			DB	228,230
      98.  00:A4E2  E5 E7               array_armaduraoff1:			DB	229,231
      99.  00:A4E4  E8 EA               array_plantaon:				DB	232,234
     100.  00:A4E6  E9 EB               array_plantaon1:			DB	233,235
     101.  00:A4E8  EC EE               array_plantaoff:			DB	236,238
     102.  00:A4EA  ED EF               array_plantaoff1:			DB	237,239
     103.  00:A4EC  F0 F2               array_extraon:				DB	240,242
     104.  00:A4EE  F1 F3               array_extraon1:				DB	241,243
     105.  00:A4F0  F4 F6               array_extraoff:				DB	244,246
     106.  00:A4F2  F5 F7               array_extraoff1:			DB	245,247
     107.  00:A4F4  F8 FA               array_ballestaon:			DB	248,250
     108.  00:A4F6  F9 FB               array_ballestaon1:			DB	249,251
     109.  00:A4F8  FC FE               array_ballestaoff:			DB	252,254
     110.  00:A4FA  FD FF               array_ballestaoff1:			DB	253,255
     111.  00:A4FC                      
     112.  00:A4FC                      
     113.  00:A4FC                      ;array de 4 bytes x 32 sprites posibles en pantalla que sobreescribirá la tabla de sprites actualizando VRAM
     114.  00:A4FC                      array_sprites:
     115.  00:A4FC  00 (8)              array_sprites_pm:				DS	2 * 4
     116.  00:A504  00 (120)            array_sprites_enem:				DS	30 * 4
     117.  00:A57C  00 (140)            lista_enemigos:					DS	10 * ESTRUCTURA_ENEMIGO
     118.  00:A608                      ; puntero al array a pintar en VRAM
     119.  00:A608  00 00               puntero_array_atrib_array_VRAM: DW	0	;ARRAYSPTRIES + 8
     120.  00:A60A                      
     121.  00:A60A                      
     142   00:A60A                      	
     143   00:A60A                      ;;=====================================================
     144   00:A60A                      ;;DEFINICIÓN DE PANTALLAS
     145   00:A60A                      ;;=====================================================		
     146   00:A60A                      	include "pantallas.asm"
       1.  00:A60A                      ;;=====================================================
       2.  00:A60A                      ;;DEFINICIÓN DE PANTALLAS
       3.  00:A60A                      ;;=====================================================		
       4.  00:A60A                      
       5.  00:A60A                      ; bancos 1 y 2 y de pantalla 1 
       6.  00:A60A                      ; se usa un banco común (en este caso el banco 1)
       7.  00:A60A                      ; el mapa afecta al banco 1 y 2
       8.  00:A60A  (01B5)              tiles_patrones_nivel0:	incbin "pantallas/nivel0.bank1.til.bin.chr.plet5"
       9.  00:A7BF  (0047)              tiles_color_nivel0:		incbin "pantallas/nivel0.bank1.til.bin.clr.plet5"
      10.  00:A806  (0035)              tiles_mapa_nivel0:		incbin "pantallas/nivel0.bank01.map.bin.plet5"
      11.  00:A83B                      
      12.  00:A83B  (01B5)              tiles_patrones_nivel1:	incbin "pantallas/nivel1.bank1.til.bin.chr.plet5"
      13.  00:A9F0  (0047)              tiles_color_nivel1:		incbin "pantallas/nivel1.bank1.til.bin.clr.plet5"
      14.  00:AA37  (0035)              tiles_mapa_nivel1:		incbin "pantallas/nivel1.bank01.map.bin.plet5"
      15.  00:AA6C                      
      16.  00:AA6C  (01B5)              tiles_patrones_nivel2:	incbin "pantallas/nivel2.bank1.til.bin.chr.plet5"
      17.  00:AC21  (0047)              tiles_color_nivel2:		incbin "pantallas/nivel2.bank1.til.bin.clr.plet5"
      18.  00:AC68  (0035)              tiles_mapa_nivel2:		incbin "pantallas/nivel2.bank01.map.bin.plet5"
      19.  00:AC9D                      
      20.  00:AC9D  (01B5)              tiles_patrones_nivel3:	incbin "pantallas/nivel3.bank1.til.bin.chr.plet5"
      21.  00:AE52  (0047)              tiles_color_nivel3:		incbin "pantallas/nivel3.bank1.til.bin.clr.plet5"
      22.  00:AE99  (0035)              tiles_mapa_nivel3:		incbin "pantallas/nivel3.bank01.map.bin.plet5"
      23.  00:AECE                      
      24.  00:AECE  (01B5)              tiles_patrones_nivel4:	incbin "pantallas/nivel4.bank1.til.bin.chr.plet5"
      25.  00:B083  (0047)              tiles_color_nivel4:		incbin "pantallas/nivel4.bank1.til.bin.clr.plet5"
      26.  00:B0CA  (0035)              tiles_mapa_nivel4:		incbin "pantallas/nivel4.bank01.map.bin.plet5"
      27.  00:B0FF                      
      28.  00:B0FF  (01B5)              tiles_patrones_nivel5:	incbin "pantallas/nivel5.bank1.til.bin.chr.plet5"
      29.  00:B2B4  (0047)              tiles_color_nivel5:		incbin "pantallas/nivel5.bank1.til.bin.clr.plet5"
      30.  00:B2FB  (0035)              tiles_mapa_nivel5:		incbin "pantallas/nivel5.bank01.map.bin.plet5"
      31.  00:B330                      
      32.  00:B330  (01B5)              tiles_patrones_nivel6:	incbin "pantallas/nivel6.bank1.til.bin.chr.plet5"
      33.  00:B4E5  (0047)              tiles_color_nivel6:		incbin "pantallas/nivel6.bank1.til.bin.clr.plet5"
      34.  00:B52C  (0035)              tiles_mapa_nivel6:		incbin "pantallas/nivel6.bank01.map.bin.plet5"
      35.  00:B561                      
      36.  00:B561                      ; 3º banco que es la parte de puntos, vidas, mapas, etc... es común
      37.  00:B561  (014C)              tiles_patrones_marcador:	incbin "pantallas/marcador.til.bin.chr.plet5"
      38.  00:B6AD  (0035)              tiles_color_marcador:		incbin "pantallas/marcador.til.bin.clr.plet5"
      39.  00:B6E2  (0062)              tiles_mapa_marcador:		incbin "pantallas/marcador.map.bin.plet5"
      40.  00:B744                      
      41.  00:B744                      ;NOTA: FALTARÍAN PANTALLAS ESPECIALES (POR DEFINIR)
     147   00:B744                      
     148   00:B744                      
     149   00:B744                      	
     150   00:B744                      END:

    LABELS
-------------------------------------------------
00:000000D8 X GTTRIG
00:000000D5 X GTSTCK
00:0000F3DB   CLIKSW
00:0000013E X RDVDP
00:00000047   WRTVDP
00:0000005C   LDIRVM
00:00000059 X LDIRMV
00:0000005F   CHGMOD
00:00000041 X DISSCR
00:00000044 X ENASCR
00:00000062   CHGCLR
00:0000F3E9   FORCLR
00:0000F3EA   BAKCLR
00:0000F3EB   BDRCLR
00:000000C3   CLS
00:0000F3DF X RG0SAV
00:0000F3E0   RG1SAV
00:0000F3E1 X RG2SAV
00:0000F3E2 X RG3SAV
00:0000F3E3 X RG4SAV
00:0000F3E4 X RG5SAV
00:0000F3E5 X RG6SAV
00:0000F3E6 X RG7SAV
00:0000F3E7 X STATFL
00:00000099   REGEST
00:00000098   REGESCVDP
00:000000A0   PSG_A
00:000000A1   PSG_W
00:000000A2   PSG_R
00:00000000   CHRTBL
00:00001800   TILMAP
00:00001900 X TILMAPBANK1
00:00001B00   SPRART
00:00002000   CLRTBL
00:00003800   SPRTBL
00:00000001 X SI
00:00000000 X NO
00:00000004   LIMCADENCIA
00:00000000 X COLTRASP
00:00000001   COLNEGRO
00:00000002 X COLVERDE
00:00000003 X COLVERCLA
00:00000004 X COLAZULOSC
00:00000005 X COLAZULLA
00:00000006   COLROJOOSC
00:00000007 X COLCYAN
00:00000008   COLROJO
00:00000009 X COLROJOCLA
00:0000000A X COLAMAROSC
00:0000000B X COLAMARCLA
00:0000000C X COLVERDOSC
00:0000000D X COLMAGENTA
00:0000000E X COLGRIS
00:0000000F   COLBLANCO
00:000002F8   POSMAPLIN1
00:000002D8   POSMAPLIN2
00:000002B8   POSMAPLIN3
00:00000298   POSMAPLIN4
00:00000278   POSMAPLIN5
00:00000258   POSMAPLIN6
00:00000238   POSMAPLIN7
00:0000000D   POSCARAMAP
00:00000248   POSVIDAS
00:00000011   POSRELIMAP
00:000002C8   POSRELIQ
00:00000288   POSENERG
00:000002B4   POSNIVEL
00:00000238   POSMAPA
00:000001EE   POSPUERABAJ
00:0000008E   POSPUERARRI
00:000000FC   POSPUERDERE
00:000000E1   POSPUERIZQU
00:00000000 X ORACIONON
00:00000004 X ORACIONOFF
00:00000008 X CRUZON
00:0000000C   CRUZOFF
00:00000010 X AGUAON
00:00000014 X AGUAOFF
00:00000018 X ARMADON
00:0000001C X ARMADOFF
00:00000020 X PLANTAON
00:00000024 X PLANTAOFF
00:00000028 X VIDAEXTON
00:0000002C X VIDAEXTOFF
00:00000030 X BALLESON
00:00000034 X BALLESOFF
00:00000013   TILEPROTAM
00:00000009   TILEGRISM
00:00000010   TILEMAPROJO
00:0000000F   TILEMAPAMAR
00:0000000E   TILEMAPVERD
00:00000008   NMAXVIDREL
00:00000007   NHABNIVEL
00:000000F8 X MAXENERGIA
00:000000D9   TILEENERG8
00:000000BA   TILEENERG7
00:0000009B   TILEENERG6
00:0000007C   TILEENERG5
00:0000005D   TILEENERG4
00:0000003E   TILEENERG3
00:0000001F   TILEENERG2
00:00000000   TILENEGRO
00:00000000 X LIMPANTIZQ
00:000000FF   LIMPANTDER
00:00000000 X LIMPANTARR
00:00000080   LIMPANTABA
00:00000006 X BASEMAPY
00:00000003 X BASEMAPX
00:0000FD9A X H.KEYI
00:0000FD9F   H.TIMI
00:0000F000   PT3_SETUP
00:0000F001   PT3_MODADDR
00:0000F003   PT3_CrPsPtr
00:0000F005   PT3_SAMPTRS
00:0000F007   PT3_OrnPtrs
00:0000F009   PT3_PDSP
00:0000F00B   PT3_CSP
00:0000F00D   PT3_PSP
00:0000F00F   PT3_PrNote
00:0000F010   PT3_PrSlide
00:0000F012   PT3_AdInPtA
00:0000F014   PT3_AdInPtB
00:0000F016   PT3_AdInPtC
00:0000F018   PT3_LPosPtr
00:0000F01A   PT3_PatsPtr
00:0000F01C   PT3_Delay
00:0000F01D   PT3_AddToEn
00:0000F01E   PT3_Env_Del
00:0000F01F   PT3_ESldAdd
00:0000F021   PT3_NTL3
00:0000F023   VARS
00:0000F023   ChanA
00:0000F040   ChanB
00:0000F05D   ChanC
00:0000F07A   DelyCnt
00:0000F07B   CurESld
00:0000F07D   CurEDel
00:0000F07E   Ns_Base_AddToNs
00:0000F07E   Ns_Base
00:0000F07F   AddToNs
00:0000F080   NT_
00:0000F140   AYREGS
00:0000F140   VT_
00:0000F14E   EnvBase
00:0000F150   VAR0END
00:0000F150   T1_
00:0000F150   T_NEW_1
00:0000F150   T_OLD_1
00:0000F168   T_OLD_2
00:0000F180   T_NEW_3
00:0000F180   T_OLD_3
00:0000F182   T_OLD_0
00:0000F182   T_NEW_0
00:0000F19A   T_NEW_2
00:0000F240   ayFX_MODE
00:0000F241   ayFX_BANK
00:0000F243   ayFX_PRIORITY
00:0000F244   ayFX_POINTER
00:0000F246   ayFX_TONE
00:0000F248   ayFX_NOISE
00:0000F249   ayFX_VOLUME
00:0000F24A   ayFX_CHANNEL
00:00008000   START
00:00008026   loop_principal
00:00008033 X fin_programa_principal
00:00008033   inicializa_variables_pruebas
00:00008055 X fin_inicializa_variables_pruebas
00:00008056   inicializa_niveles
00:00008065   inicializa_niveles.bucle_borra_hab
00:0000806A X fin_iniciliza_niveles
00:0000806B   actualiza_marcador_vidas
00:00008070   loop_marcador_caras_negro
00:00008075 X fin_loop_marcador_caras_negro
00:0000807E   loop_marcador_caras
00:00008083 X fin_loop_marcador_caras
00:00008083 X fin_actualiza_marcador_vidas
00:00008084   actualiza_buffer_reliquias
00:0000808A   loop_buffer_reliquias_negro
00:00008097   loop_buffer_reliquias
00:0000809C X fin_actualiza_buffer_reliquias
00:0000809D   localiza_info_habitacion
00:000080A0 X localiza_info_habitacion.situo_columna
00:000080A9 X localiza_info_habitacion.situo_fila
00:000080B2   localiza_info_habitacion.loop_suma_fila
00:000080BA   localiza_info_habitacion.situo_nivel
00:000080C9   localiza_info_habitacion.loop_suma_nivel
00:000080CE   localiza_info_habitacion.actualiza_valiable_habitacion
00:000080D2 X fin_localiza_info_habitacion
00:000080D3   suma_A_BC
00:000080D8 X fin_suma_A_BC
00:000080D9   color_pantalla
00:000080EA X fin_color_pantalla
00:000080EA   sub_preparapantalla
00:000080EA X elimina_clic
00:000080EE X fin_elimina_clic
00:000080EE X limpia_pantalla
00:000080F2 X fin_limpia_pantalla
00:000080F8 X screen2
00:000080FD X sprites_16_16
00:0000810B X fin_sub_preparapantalla
00:0000810B   pinta_pantalla_completa
00:00008111 X fin_pinta_pantalla_completa
00:00008112   pinta_parte_superior_pantalla
00:00008143   pinta_parte_superior_pantalla.carga_nivel_0
00:0000815E   pinta_parte_superior_pantalla.carga_nivel_1
00:00008179   pinta_parte_superior_pantalla.carga_nivel_2
00:00008194   pinta_parte_superior_pantalla.carga_nivel_3
00:000081AF   pinta_parte_superior_pantalla.carga_nivel_4
00:000081CA   pinta_parte_superior_pantalla.carga_nivel_5
00:000081E5   pinta_parte_superior_pantalla.carga_nivel_6
00:000081FD   pinta_parte_superior_pantalla.fin_carga_niveles
00:0000822A X fin_pinta_parte_superior_pantalla
00:0000822A   tiles_patrones
00:0000822C   tiles_colores
00:0000822E   tiles_mapa
00:00008230   pinta_parte_inferior_pantalla
00:0000824B X fin_pinta_parte_inferior_pantalla
00:0000824B   pinta_vidas
00:0000825A X fin_pinta_vidas
00:0000825A   pinta_reliquias
00:00008269 X fin_pinta_reliquias
00:00008269   pinta_nivel
00:00008275 X fin_pinta_nivel
00:00008275   pinta_tile_suelto
00:00008282 X fin_pinta_tile_suelto
00:00008283   mira_pinta_energia
00:00008289 X pinta_ener
00:00008289 X pinta_ener_tile_8
00:00008295   pinta_ener_tile_8_negro
00:00008296   pinta_ener_tile_7
00:000082A0   pinta_ener_tile_7_negro
00:000082A1   pinta_ener_tile_6
00:000082AB   pinta_ener_tile_6_negro
00:000082AC   pinta_ener_tile_5
00:000082B6   pinta_ener_tile_5_negro
00:000082B7   pinta_ener_tile_4
00:000082C1   pinta_ener_tile_4_negro
00:000082C2   pinta_ener_tile_3
00:000082CC   pinta_ener_tile_3_negro
00:000082CD   pinta_ener_tile_2
00:000082D7   pinta_ener_tile_2_negro
00:000082D8   fin_mira_pinta_energia
00:000082DA   pinta_energia
00:000082E9 X fin_pinta_energia
00:000082E9   borra_mapa
00:0000833F X fin_borra_mapa
00:00008340   pinta_array
00:00008353   pinta_array.pa_pinta_fila
00:00008354   pinta_array.pa_pinta_columnas
00:00008377 X fin_pinta_array
00:00008378   wordaux1
00:0000837A   wordaux2
00:0000837C   pinta_puertas
00:00008399 X fin_pinta_puertas
00:0000839A   pinta_puerta_aba
00:000083AD X fin_pinta_puerta_aba
00:000083AD   pinta_puerta_arr
00:000083C0 X fin_pinta_puerta_arr
00:000083C0   pinta_puerta_der
00:000083D3 X fin_pinta_puerta_der
00:000083D3   pinta_puerta_izq
00:000083E6 X fin_pinta_puerta_izq
00:000083E6 X posiciona_en_mapa
00:000083E9 X posiciona_en_mapa.sumar_fila
00:00008413 X posiciona_en_mapa.fila_0
00:0000841A   posiciona_en_mapa.fila_1
00:00008421   posiciona_en_mapa.fila_2
00:00008428   posiciona_en_mapa.fila_3
00:0000842F   posiciona_en_mapa.fila_4
00:00008436   posiciona_en_mapa.fila_5
00:0000843D X posiciona_en_mapa.fila_6
00:0000843D   posiciona_en_mapa.sumar_columna
00:00008453   pinta_pos_mapa_vacio
00:00008455   fin_pinta_pos_mapa
00:00008458 X fin_posiciona_en_mapa
00:00008458   efecto_imagen_tira_reliquia
00:0000845B   efecto_imagen_tira_reliquia.parpadea_fondo
00:00008472 X fin_efecto_imagen_tira_reliquia
00:00008472   pinta_obj_ayuda
00:00008491 X fin_pinta_obj_ayuda
00:00008491   carga_patrones_sprites_nivel
00:0000849B X fin_carga_patrones_sprites_nivel
00:0000849C   carga_patrones_nivel_comunes
00:000084A8 X fin_carga_patrones_nivel_comunes
00:000084A8   carga_patrones_sprites_nivel1
00:000084A8 X fin_carga_patrones_sprites
00:000084A9   render_sprites
00:000084B5 X fin_actualiza_array_sprites_vram
00:000084B5   vuelca_resultado_puntomira_array
00:000084DA X vuelca_resultado_puntomira_array.codigo_color_1
00:000084E3   vuelca_resultado_puntomira_array.codigo_color_2
00:000084EC X fin_vuelca_resultado_puntomira_array
00:000084EC   check_player
00:0000850B X f
00:0000850C   mueve_arriba
00:00008517   mueve_arriba.no_decrementa_y
00:00008518 X fin_mueve_arriba
00:00008519   mueve_derecha
00:00008526   mueve_derecha.no_incrementa_x
00:00008527 X fin_mueve_derecha
00:00008528   mueve_abajo
00:00008535   mueve_abajo.no_incrementa_y
00:00008536 X fin_mueve_abajo
00:00008537   mueve_izquierda
00:00008542   mueve_izquierda.no_decrementa_x
00:00008543 X fin_mueve_izquierda
00:00008544   mira_disparo
00:00008544 X mira_disparo.mira_boton_pulsado1
00:00008551 X mira_disparo.no_efectua_disparo
00:0000855C   mira_disparo.efectua_disparo
00:0000856E   mira_disparo.fin_mira_disparo1
00:0000856F   mira_disparo.mira_boton_pulsado2
00:0000858B X fin_mira_disparo
00:0000858B   update_controllers_status
00:000085C2   read_joy_0
00:000085D6   check_8th_keyboard_row
00:000085E4   check_4th_keyboard_row
00:000085F2 X inicializa_replayer_efectos_interrupciones
00:0000860B X fin_inicializa_replayer_efectos_interrupciones
00:0000860C   subrutina_isr
00:00008615 X fin_subrutina_isr
00:00008615 X subrutinas_sonido
00:00000000   CHNPRM_PsInOr
00:00000001   CHNPRM_PsInSm
00:00000002   CHNPRM_CrAmSl
00:00000003   CHNPRM_CrNsSl
00:00000004   CHNPRM_CrEnSl
00:00000005   CHNPRM_TSlCnt
00:00000006   CHNPRM_CrTnSl
00:00000008   CHNPRM_TnAcc
00:0000000A   CHNPRM_COnOff
00:0000000B   CHNPRM_OnOffD
00:0000000C   CHNPRM_OffOnD
00:0000000D   CHNPRM_OrnPtr
00:0000000F   CHNPRM_SamPtr
00:00000011   CHNPRM_NNtSkp
00:00000012   CHNPRM_Note
00:00000013   CHNPRM_SlToNt
00:00000014   CHNPRM_Env_En
00:00000015   CHNPRM_Flags
00:00000016   CHNPRM_TnSlDl
00:00000017   CHNPRM_TSlStp
00:00000019   CHNPRM_TnDelt
00:0000001B   CHNPRM_NtSkCn
00:0000001C   CHNPRM_Volume
00:0000001D X CHNPRM_Size
00:00000000   AR_TonA
00:00000002   AR_TonB
00:00000004   AR_TonC
00:00000006   AR_Noise
00:00000007   AR_Mixer
00:00000008   AR_AmplA
00:00000009   AR_AmplB
00:0000000A   AR_AmplC
00:0000000B   AR_Env
00:0000000D   AR_EnvTp
00:00008615   CHECKLP
00:00008626 X PT3_MUTE
00:00008632   PT3_INIT
00:00008671   PT3_INIT.TP_0
00:0000867D   PT3_INIT.TP_1
00:00008684   PT3_INIT.TP_2
00:000086F2   PT3_INIT.L1
00:000086FF   PT3_INIT.L2
00:00008703 X PT3_INIT.L3
00:0000872A   PT3_INIT.CORR_1
00:00008738   PT3_INIT.CORR_2
00:0000873F   PT3_INIT.TC_EXIT
00:0000874A   PT3_INIT.INITV1
00:00008752   PT3_INIT.INITV2
00:00008766   PT3_INIT.INITV3
00:0000876A   PD_OrSm
00:00008774   PD_SAM
00:00008775   PD_SAM_
00:0000878B   PD_VOL
00:00008794   PD_EOff
00:0000879C   PD_SorE
00:000087A6   PD_ENV
00:000087AB   PD_ORN
00:000087B0   PD_ESAM
00:000087BD   PTDECOD
00:000087CC   PD_LOOP
00:000087CF   PD_LP2
00:000087FC   PD_NOIS
00:00008801   PD_REL
00:00008807   PD_NOTE
00:0000880F   PD_RES
00:00008821   PD_FIN
00:00008828   C_PORTM
00:00008873   C_PORTM.NOSIG
00:0000887D   SET_STP
00:00008889   C_GLISS
00:0000889C   C_SMPOS
00:000088A2   C_ORPOS
00:000088A8   C_VIBRT
00:000088C0   C_ENGLS
00:000088D2   C_DELAY
00:000088D8   SETENV
00:000088F3   C_NOP
00:000088F4   SETORN
00:0000890D   SPCCOMS
00:0000892D   CHREGS
00:00008950   CHREGS.CH_ORPS
00:0000895B   CHREGS.CH_NTP
00:00008961   CHREGS.CH_NOK
00:0000897C   CHREGS.CH_SMPS
00:00008992   CHREGS.CH_NOAC
00:000089D9   CHREGS.CH_STPP
00:000089EE   CHREGS.CH_AMP
00:00008A00   CHREGS.CH_AMIN
00:00008A05   CHREGS.CH_SVAM
00:00008A08   CHREGS.CH_NOAM
00:00008A11   CHREGS.CH_APOS
00:00008A17   CHREGS.CH_VOL
00:00008A22 X CHREGS.CH_ENV
00:00008A29   CHREGS.CH_NOEN
00:00008A43   CHREGS.NO_ENAC
00:00008A4A   CHREGS.NO_ENSL
00:00008A58   CHREGS.CH_MIX
00:00008A5C   CHREGS.CH_EXIT
00:00008A7B   CHREGS.CH_ONDL
00:00008A7F   PT3_PLAY
00:00008AB3   PT3_PLAY.PLNLP
00:00008ADA   PT3_PLAY.PL1A
00:00008AE5   PT3_PLAY.PL1B
00:00008AFA   PT3_PLAY.PL1C
00:00008B0F   PT3_PLAY.PL1D
00:00008B15   PT3_PLAY.PL2
00:00008B77   PT3_ROUT
00:00008B78   ROUT_A0
00:00008B84   ROUT_A0.LOUT
00:00008B98   NT_DATA
00:00008BA8   T_
00:00008BA8   TCOLD_0
00:00008BB4   TCNEW_1
00:00008BB4   TCOLD_1
00:00008BB6   TCOLD_2
00:00008BC8   TCNEW_3
00:00008BC9   TCOLD_3
00:00008BD2   TCNEW_0
00:00008BDD   TCNEW_2
00:00008BE8   EMPTYSAMORN
00:00008BEC   T_PACK
00:00000000 X AYFXRELATIVE
00:00008C21   ayFX_SETUP
00:00008C2D   ayFX_END
00:00008C33   ayFX_INIT
00:00008C44   ayFX_INIT.CHECK_PRI
00:00008C65   ayFX_INIT.INIT_END
00:00008C69   ayFX_PLAY
00:00008C7D   ayFX_PLAY.TAKECB
00:00008C8E   ayFX_PLAY.CHECK_NN
00:00008C9B   ayFX_PLAY.SETPOINTER
00:00008CAF   ayFX_PLAY.SETMASKS
00:00008CBD X ayFX_PLAY.CHK1
00:00008CBF X ayFX_PLAY.PLAY_C
00:00008CCC   ayFX_PLAY.CHK2
00:00008CD1 X ayFX_PLAY.PLAY_B
00:00008CDE   ayFX_PLAY.CHK3
00:00008CE1 X ayFX_PLAY.PLAY_A
00:00008CEE   ayFX_PLAY.SETMIXER
00:00008CFE   song
00:00009666   sfx_bank
00:000096B1   depack_VRAM
00:000096DE   literal
00:000096E3   loop
00:000096EC X getlen
00:000096F2   lus
00:0000970F   lenok
00:0000971C   mode7
00:00009722   mode6
00:00009728   mode5
00:0000972E   mode4
00:00009734   mode3
00:0000973A   mode2
00:0000974A   offsok
00:00009755   offsok.loop
00:00009777   getbit
00:0000977B   getbitexx
00:00009781   Depack_out
00:00009783   modes
00:00000000 X ESTRUCTURA_PUNTOMIRA.posx
00:00000001 X ESTRUCTURA_PUNTOMIRA.posy
00:00000002 X ESTRUCTURA_PUNTOMIRA.escena
00:00000003 X ESTRUCTURA_PUNTOMIRA.velocidad
00:00000004 X ESTRUCTURA_PUNTOMIRA.boton2_pressed
00:00000005 X ESTRUCTURA_PUNTOMIRA.cadencia
00:00000006 X ESTRUCTURA_PUNTOMIRA.pm_aux1
00:00000007 X ESTRUCTURA_PUNTOMIRA.pm_aux2
00:00000008 X ESTRUCTURA_PUNTOMIRA.pm_aux3
00:00000009 X ESTRUCTURA_PUNTOMIRA.pm_aux4
00:0000000A X ESTRUCTURA_PUNTOMIRA.pm_aux5
00:0000000B X ESTRUCTURA_PUNTOMIRA.pm_aux6
00:0000000C X ESTRUCTURA_PUNTOMIRA.pm_aux7
00:0000000D X ESTRUCTURA_PUNTOMIRA.pm_aux8
00:0000000E X ESTRUCTURA_PUNTOMIRA.pm_aux9
00:0000000F X ESTRUCTURA_PUNTOMIRA.pm_aux10
00:00000010 X ESTRUCTURA_PUNTOMIRA
00:00000000 X ESTRUCTURA_ENEMIGO.tipo
00:00000001 X ESTRUCTURA_ENEMIGO.posx
00:00000002 X ESTRUCTURA_ENEMIGO.posy
00:00000003 X ESTRUCTURA_ENEMIGO.color
00:00000004 X ESTRUCTURA_ENEMIGO.escena
00:00000005 X ESTRUCTURA_ENEMIGO.contador_siguiente_escena
00:00000006 X ESTRUCTURA_ENEMIGO.reset_contador
00:00000007 X ESTRUCTURA_ENEMIGO.dano
00:00000008 X ESTRUCTURA_ENEMIGO.energia
00:00000009 X ESTRUCTURA_ENEMIGO.ver_hor
00:0000000A X ESTRUCTURA_ENEMIGO.manejador_dibujo
00:0000000C X ESTRUCTURA_ENEMIGO.en_aux3
00:0000000D X ESTRUCTURA_ENEMIGO.en_aux4
00:0000000E   ESTRUCTURA_ENEMIGO
00:00000000 X ESTRUCTURA_EXTRA.tipo
00:00000001 X ESTRUCTURA_EXTRA.posx
00:00000002 X ESTRUCTURA_EXTRA.posy
00:00000003 X ESTRUCTURA_EXTRA.color
00:00000004 X ESTRUCTURA_EXTRA.contador
00:00000005 X ESTRUCTURA_EXTRA.en_aux1
00:00000006 X ESTRUCTURA_EXTRA.en_aux2
00:00000007 X ESTRUCTURA_EXTRA.en_aux3
00:00000008 X ESTRUCTURA_EXTRA.en_aux4
00:00000009 X ESTRUCTURA_EXTRA.en_aux5
00:0000000A X ESTRUCTURA_EXTRA.en_aux6
00:0000000B X ESTRUCTURA_EXTRA.en_aux7
00:0000000C X ESTRUCTURA_EXTRA.en_aux8
00:0000000D X ESTRUCTURA_EXTRA.en_aux9
00:0000000E X ESTRUCTURA_EXTRA.en_aux10
00:0000000F X ESTRUCTURA_EXTRA.en_aux11
00:00000010 X ESTRUCTURA_EXTRA
00:00009791 X sprites_pantantalla
00:00009791   sprites_comunes
00:00009791 X sprite_punto_mira_1
00:000097B1 X sprite_punto_mira_2
00:000097D1 X sprite_punto_mira_1_mejorado
00:000097F1 X sprite_punto_mira_2_mejorado
00:00009811 X sprite_explosion_1
00:00009831 X sprite_explosion_2
00:00009851   fin_sprites_comunes
00:00009851 X sprite_arana1_1
00:00009871 X sprite_arana1_2
00:00009891 X sprite_murcielago1_1
00:000098B1 X sprite_murcielago1_2
00:000098D1 X sprite_serpiente1_1
00:000098F1 X sprite_serpiente1_2
00:00009911 X sprite_serpiente2_1
00:00009931 X sprite_serpiente2_2
00:00009951 X sprite_zombi1_1_1
00:00009971 X sprite_zombi1_2_1
00:00009991 X sprite_zombi1_3_1
00:000099B1 X sprite_zombi1_4_1
00:000099D1 X sprite_zombi1_1_2
00:000099F1 X sprite_zombi1_2_2
00:00009A11 X sprite_zombi1_3_2
00:00009A31 X sprite_zombi1_4_2
00:00009A51 X sprite_zombi2_1_1
00:00009A71 X sprite_zombi2_2_1
00:00009A91 X sprite_zombi2_3_1
00:00009AB1 X sprite_zombi2_4_1
00:00009AD1 X sprite_zombi2_1_2
00:00009AF1 X sprite_zombi2_2_2
00:00009B11 X sprite_zombi2_3_2
00:00009B31 X sprite_zombi2_4_2
00:00009B51 X sprite_caballero1_1_1
00:00009B71 X sprite_caballero1_2_1
00:00009B91 X sprite_caballero1_3_1
00:00009BB1 X sprite_caballero1_4_1
00:00009BD1 X sprite_caballero1_1_2
00:00009BF1 X sprite_caballero1_2_2
00:00009C11 X sprite_caballero1_3_2
00:00009C31 X sprite_caballero1_4_2
00:00009C51 X sprite_caballero2_1_1
00:00009C71 X sprite_caballero2_2_1
00:00009C91 X sprite_caballero2_3_1
00:00009CB1 X sprite_caballero2_4_1
00:00009CD1 X sprite_caballero2_1_2
00:00009CF1 X sprite_caballero2_2_2
00:00009D11 X sprite_caballero2_3_2
00:00009D31 X sprite_caballero2_4_2
00:00009D51 X sprite_llama1_1
00:00009D71 X sprite_llama2_1
00:00009D91 X sprite_llama1_2
00:00009DB1 X sprite_llama2_2
00:00009DD1 X sprite_fantasma1_1
00:00009DF1 X sprite_fantasma2_1
00:00009E11 X sprite_fantasma1_2
00:00009E31 X sprite_fantasma2_2
00:00009E51 X sprite_magia1_1
00:00009E71 X sprite_magia2_1
00:00009E91 X sprite_magia1_2
00:00009EB1 X sprite_magia2_2
00:00009ED1 X sprite_beholder1_1
00:00009EF1 X sprite_beholder2_1
00:00009F11 X sprite_beholder3_1
00:00009F31 X sprite_beholder4_1
00:00009F51 X sprite_beholder1_2
00:00009F71 X sprite_beholder2_2
00:00009F91 X sprite_beholder3_2
00:00009FB1 X sprite_beholder4_2
00:00009FD1 X sprite_vampiro1_1
00:00009FF1 X sprite_vampiro2_1
00:0000A011 X sprite_vampiro1_2
00:0000A031 X sprite_vampiro2_2
00:0000A051 X sprite_manoizq1
00:0000A071 X sprite_manoizq2
00:0000A091 X sprite_manoizq3
00:0000A0B1 X sprite_manoder1
00:0000A0D1 X sprite_manoder2
00:0000A0F1 X sprite_manoder3
00:0000A111   habitacion_actual
00:0000A113   habitaciones_juego
00:0000A113 X habitaciones_nivel0
00:0000A183 X habitaciones_nivel1
00:0000A1F3 X habitaciones_nivel2
00:0000A263 X habitaciones_nivel3
00:0000A2D3 X habitaciones_nivel4
00:0000A343 X habitaciones_nivel5
00:0000A3B3 X habitaciones_nivel6
00:0000A423   color_base
00:0000A426   color_bomba1
00:0000A429   color_bomba2
00:0000A42C X prota
00:0000A42C   prota.posx
00:0000A42D   prota.posy
00:0000A42E   prota.escena
00:0000A42F X prota.velocidad
00:0000A430 X prota.boton2_pressed
00:0000A431   prota.cadencia
00:0000A432 X prota.pm_aux1
00:0000A433 X prota.pm_aux2
00:0000A434 X prota.pm_aux3
00:0000A435 X prota.pm_aux4
00:0000A436 X prota.pm_aux5
00:0000A437 X prota.pm_aux6
00:0000A438 X prota.pm_aux7
00:0000A439 X prota.pm_aux8
00:0000A43A X prota.pm_aux9
00:0000A43B X prota.pm_aux10
00:0000A43C   prota_nivel
00:0000A43D   prota_vidas
00:0000A43E   prota_reliquias
00:0000A43F   prota_pos_mapx
00:0000A440   prota_pos_mapy
00:0000A441   prota_energia
00:0000A442   array_aux_vidas
00:0000A44A   array_aux_reliquias
00:0000A452   array_aux_energia
00:0000A459   ultimo_pos_array_aux_energia
00:0000A45A   array_aux_mapa_limpiar
00:0000A461   elemento_pintar_mapa
00:0000A462   array_puerta_arriba
00:0000A462 X array_puerta_arriba1
00:0000A466 X array_puerta_arriba2
00:0000A46A X array_puerta_arriba3
00:0000A46E X array_puerta_arriba4
00:0000A472 X array_puerta_arriba5
00:0000A476   array_puerta_derecha
00:0000A476 X array_puerta_derecha1
00:0000A479 X array_puerta_derecha2
00:0000A47C X array_puerta_derecha3
00:0000A47F X array_puerta_derecha4
00:0000A482 X array_puerta_derecha5
00:0000A485 X array_puerta_derecha6
00:0000A488 X array_puerta_derecha7
00:0000A48B   array_puerta_abajo
00:0000A48F   array_puerta_izquierda
00:0000A48F X array_puerta_izquierda1
00:0000A492 X array_puerta_izquierda2
00:0000A495 X array_puerta_izquierda3
00:0000A498 X array_puerta_izquierda4
00:0000A49B X array_puerta_izquierda5
00:0000A49E X array_puerta_izquierda6
00:0000A4A1 X array_puerta_izquierda7
00:0000A4A4   pos_ayudas
00:0000A4C4   array_ayudas
00:0000A4C4 X array_oracionon
00:0000A4C6 X array_oracionon1
00:0000A4C8 X array_oracionoff
00:0000A4CA X array_oracionoff1
00:0000A4CC X array_cruzon
00:0000A4CE X array_cruzon1
00:0000A4D0 X array_cruzoff
00:0000A4D2 X array_cruzoff1
00:0000A4D4 X array_aguaon
00:0000A4D6 X array_aguaon1
00:0000A4D8 X array_aguaoff
00:0000A4DA X array_aguaoff1
00:0000A4DC X array_armaduraon
00:0000A4DE X array_armaduraon1
00:0000A4E0 X array_armaduraoff
00:0000A4E2 X array_armaduraoff1
00:0000A4E4 X array_plantaon
00:0000A4E6 X array_plantaon1
00:0000A4E8 X array_plantaoff
00:0000A4EA X array_plantaoff1
00:0000A4EC X array_extraon
00:0000A4EE X array_extraon1
00:0000A4F0 X array_extraoff
00:0000A4F2 X array_extraoff1
00:0000A4F4 X array_ballestaon
00:0000A4F6 X array_ballestaon1
00:0000A4F8 X array_ballestaoff
00:0000A4FA X array_ballestaoff1
00:0000A4FC   array_sprites
00:0000A4FC   array_sprites_pm
00:0000A504 X array_sprites_enem
00:0000A57C X lista_enemigos
00:0000A608 X puntero_array_atrib_array_VRAM
00:0000A60A   tiles_patrones_nivel0
00:0000A7BF   tiles_color_nivel0
00:0000A806   tiles_mapa_nivel0
00:0000A83B   tiles_patrones_nivel1
00:0000A9F0   tiles_color_nivel1
00:0000AA37   tiles_mapa_nivel1
00:0000AA6C   tiles_patrones_nivel2
00:0000AC21   tiles_color_nivel2
00:0000AC68   tiles_mapa_nivel2
00:0000AC9D   tiles_patrones_nivel3
00:0000AE52   tiles_color_nivel3
00:0000AE99   tiles_mapa_nivel3
00:0000AECE   tiles_patrones_nivel4
00:0000B083   tiles_color_nivel4
00:0000B0CA   tiles_mapa_nivel4
00:0000B0FF   tiles_patrones_nivel5
00:0000B2B4   tiles_color_nivel5
00:0000B2FB   tiles_mapa_nivel5
00:0000B330   tiles_patrones_nivel6
00:0000B4E5   tiles_color_nivel6
00:0000B52C   tiles_mapa_nivel6
00:0000B561   tiles_patrones_marcador
00:0000B6AD   tiles_color_marcador
00:0000B6E2   tiles_mapa_marcador
00:0000B744   END


 Output: t4.out
-------------------------------------------------

 Page: 00
  Org: 00008000  Size: *  Used: 00000000

    No output

 Output: t4.bin
-------------------------------------------------

 Page: 00
  Org: 00008000  Size: *  Used: 0000374B

   Address   Length Align   Label
   00008000   14155         START
