Sjasm Z80 Assembler v0.42c - www.xl2s.tk             [2021.10.23 - 20:46:53]

t4.asm
Errors: 0

       1   00:0000                      	OUTPUT	"t4.bin"
       2   00:8000                      	
       3   00:8000                      ;;=====================================================
       4   00:8000                      ;;DEFINICIÓN DE CONSTANTES
       5   00:8000                      ;;=====================================================	
       6   00:8000                      	include "constantes.asm"
       1.  00:8000                      ;;=====================================================
       2.  00:8000                      ;; FICHERO constantes.asm
       3.  00:8000                      ;;=====================================================
       4.  00:8000                      
       5.  00:8000                      ;;ETIQUETAS/CONSTANTES BIOS TECLADO
       6.  00:8000  (00:00D8)           GTTRIG		equ		#00D8	;Returns current trigger status
       7.  00:8000  (00:00D5)           GTSTCK		equ		#00D5	;Returns the joystick/cursors status
       8.  00:8000  (00:F3DB)           CLIKSW		equ		#F3DB	;deshabilita el sonido de clic cuando se pulsa una tecla
       9.  00:8000                      
      10.  00:8000                      ;;ETIQUETAS/CONSTANTES BIOS VDP
      11.  00:8000  (00:013E)           RDVDP		equ		#013E	;lee registro status VDP
      12.  00:8000  (00:0047)           WRTVDP		equ		#0047	;escribe registros del VDP
      13.  00:8000  (00:005C)           LDIRVM		equ		#005C	;RAM/ROM -> VRAM
      14.  00:8000  (00:0059)           LDIRMV		equ		#0059	;VRAM -> RAM
      15.  00:8000  (00:005F)           CHGMOD		equ		#005F	;cambia modo pantalla (screen mode)
      16.  00:8000  (00:0041)           DISSCR  	equ		#0041	;desactiva pantanlla
      17.  00:8000  (00:0044)           ENASCR  	equ		#0044	;activa pantalla
      18.  00:8000  (00:0062)           CHGCLR  	equ		#0062	;cambia color de pantalla (toca A y direcciones)
      19.  00:8000  (00:F3E9)           FORCLR		equ		#F3E9	;zona memoria color foreground
      20.  00:8000  (00:F3EA)           BAKCLR  	equ		#F3EA	;zona memoria color background
      21.  00:8000  (00:F3EB)           BDRCLR 		equ		#F3EB	;zona memoria bordercolor
      22.  00:8000  (00:00C3)           CLS			equ		#00C3	;limpia pantalla (necesita A=0)
      23.  00:8000                      
      24.  00:8000                      ;;ETIQUETAS/CONSTANTES REGISTROS VDP
      25.  00:8000  (00:F3DF)           RG0SAV		equ		#F3DF	;Mirror of VDP register 0 (Basic: VDP(0))
      26.  00:8000  (00:F3E0)           RG1SAV		equ		#F3E0	;Mirror of VDP register 1 (Basic: VDP(1))
      27.  00:8000  (00:F3E1)           RG2SAV		equ		#F3E1	;Mirror of VDP register 2 (Basic: VDP(2))
      28.  00:8000  (00:F3E2)           RG3SAV		equ		#F3E2	;Mirror of VDP register 3 (Basic: VDP(3))
      29.  00:8000  (00:F3E3)           RG4SAV		equ		#F3E3	;Mirror of VDP register 4 (Basic: VDP(4))
      30.  00:8000  (00:F3E4)           RG5SAV		equ		#F3E4	;Mirror of VDP register 5 (Basic: VDP(5))
      31.  00:8000  (00:F3E5)           RG6SAV		equ		#F3E5	;Mirror of VDP register 6 (Basic: VDP(6))
      32.  00:8000  (00:F3E6)           RG7SAV		equ		#F3E6	;Mirror of VDP register 7 (Basic: VDP(7))
      33.  00:8000  (00:F3E7)           STATFL		equ		#F3E7	;Mirror of VDP(8) status register (S#0)
      34.  00:8000                      
      35.  00:8000  (00:0099)           REGEST		equ		#0099	;registro de estado para escribir directamente en VRAM
      36.  00:8000  (00:0098)           REGESCVDP	equ		#0098	;registro donde escribir valor para VRAM
      37.  00:8000                      
      38.  00:8000                      ;;ETIQUETAS/CONSTANTES REGISTROS PSG (PARA JOYSTICK)
      39.  00:8000  (00:00A0)           PSG_A  equ  0a0h  ;reg address
      40.  00:8000  (00:00A1)           PSG_W  equ  0a1h  ;reg data WR
      41.  00:8000  (00:00A2)           PSG_R  equ  0a2h  ;reg data
      42.  00:8000                      
      43.  00:8000                      
      44.  00:8000                      ;;ETIQUETAS DE ZONAS DE MEMORIA DE LA VPD (MSX1)
      45.  00:8000  (00:0000)           CHRTBL		equ		#0000
      46.  00:8000  (00:1800)           TILMAP		equ		#1800
      47.  00:8000  (00:1B00)           SPRART		equ		#1B00
      48.  00:8000  (00:2000)           CLRTBL		equ		#2000
      49.  00:8000  (00:3800)           SPRTBL		equ		#3800
      50.  00:8000                      
      51.  00:8000                      
      52.  00:8000                      ;;ETIQUETAS ESTANDAR PARA DAR MÁS CLARIDAD AL CODIGO
      53.  00:8000  (00:0001)           SI			equ		1
      54.  00:8000  (00:0000)           NO			equ		0
      55.  00:8000  (00:0004)           LIMCADENCIA equ		4	;nº de veces que se ejecutará el disparo antes de ejecutar un disparo real (porque cuando se pulsa la tecl dispara 3 ó 4 veces de rápido que va)
      56.  00:8000                      ;hay que estudiar si 3 es un nº mejor
      57.  00:8000                      
      58.  00:8000                      
      59.  00:8000                      ;;PALETA DE COLORES DEL MSX
      60.  00:8000  (00:0000)           COLTRASP	equ		0
      61.  00:8000  (00:0001)           COLNEGRO	equ		1
      62.  00:8000  (00:0002)           COLVERDE	equ		2
      63.  00:8000  (00:0003)           COLVERCLA	equ		3
      64.  00:8000  (00:0004)           COLAZULOSC	equ		4
      65.  00:8000  (00:0005)           COLAZULLA	equ		5
      66.  00:8000  (00:0006)           COLROJOOSC	equ		6
      67.  00:8000  (00:0007)           COLCYAN		equ		7
      68.  00:8000  (00:0008)           COLROJO		equ		8
      69.  00:8000  (00:0009)           COLROJOCLA	equ		9
      70.  00:8000  (00:000A)           COLAMAROSC	equ		10
      71.  00:8000  (00:000B)           COLAMARCLA	equ		11
      72.  00:8000  (00:000C)           COLVERDOSC	equ		12
      73.  00:8000  (00:000D)           COLMAGENTA	equ		13
      74.  00:8000  (00:000E)           COLGRIS		equ		14
      75.  00:8000  (00:000F)           COLBLANCO	equ		15
      76.  00:8000                      
      77.  00:8000                      
      78.  00:8000                      ;;ETIQUETAS ESPECIFICAS PARA DAR MÁS CLARIDAD AL CODIGO (relacionadas con posiciones en mapa vdp)
      79.  00:8000  (00:02F8)           POSMAPLIN1  equ		#02F8
      80.  00:8000  (00:02D8)           POSMAPLIN2  equ		#02D8
      81.  00:8000  (00:02B8)           POSMAPLIN3  equ		#02B8
      82.  00:8000  (00:0298)           POSMAPLIN4  equ		#0298
      83.  00:8000  (00:0278)           POSMAPLIN5  equ		#0278
      84.  00:8000  (00:0258)           POSMAPLIN6  equ		#0258
      85.  00:8000  (00:0238)           POSMAPLIN7  equ		#0238
      86.  00:8000                      
      87.  00:8000  (00:000D)           POSCARAMAP	equ		#000D
      88.  00:8000  (00:0248)           POSVIDAS	equ		#0248
      89.  00:8000  (00:0011)           POSRELIMAP	equ		#0011
      90.  00:8000  (00:02C8)           POSRELIQ	equ		#02C8
      91.  00:8000  (00:0288)           POSENERG	equ		#0288
      92.  00:8000  (00:02B4)           POSNIVEL	equ		#02B4
      93.  00:8000  (00:0238)           POSMAPA		equ 	#0238
      94.  00:8000                      
      95.  00:8000  (00:01EE)           POSPUERABAJ equ		#01EE
      96.  00:8000  (00:008E)           POSPUERARRI equ		#008E
      97.  00:8000  (00:00FC)           POSPUERDERE equ		#00FC
      98.  00:8000  (00:00E1)           POSPUERIZQU equ		#00E1
      99.  00:8000  (00:006C)           POSESCALERA equ		#006C	;32 x 3 + columna
     100.  00:8000                      
     101.  00:8000                      ;;POSICIONES DE LAS AYUDAS EN PANTALLA BANCO 1
     102.  00:8000  (00:00A3)           POSORACION	equ		163
     103.  00:8000  (00:00A7)           POSCRUZ		equ		167
     104.  00:8000  (00:00AB)           POSAGUA		equ		171
     105.  00:8000  (00:00AF)           POSARMAD	equ		175
     106.  00:8000  (00:00B3)           POSPLANTA	equ		179
     107.  00:8000  (00:00B7)           POSVIDAEXT	equ		183
     108.  00:8000  (00:00BB)           POSBALLESTA	equ		187
     109.  00:8000                      
     110.  00:8000                      ;;POSICIONES DE LAS AYUDAS EN PANTALLA PIXEL CENTRAL X
     111.  00:8000  (00:0020)           POSORACIONX	equ		32
     112.  00:8000  (00:0040)           POSCRUZX	equ		64
     113.  00:8000  (00:0060)           POSAGUAX	equ		96
     114.  00:8000  (00:0080)           POSARMADX	equ		128
     115.  00:8000  (00:00A0)           POSPLANTAX	equ		160
     116.  00:8000  (00:00C0)           POSVIDAEXTX	equ		192
     117.  00:8000  (00:00E0)           POSBALLESTAX equ	224
     118.  00:8000                      
     119.  00:8000                      ;;POSICIONES DE LAS AYUDAS EN PANTALLA PIXEL CENTRAL Y
     120.  00:8000  (00:0070)           POSAYUDASY	equ		112	;se pone por poner porque las estructuras de ayudas ya se inicializan con este valor
     121.  00:8000                      
     122.  00:8000                      ;;POSICIÓN INICIAL DEL SPRITE DEL PUNTO DE MIRA
     123.  00:8000  (00:0078)           POSXPM		equ		120
     124.  00:8000  (00:006C)           POSYPM		equ		108
     125.  00:8000                      
     126.  00:8000                      ;;ESTADO ESTRUCTURA
     127.  00:8000  (00:0000)           INACTIVA	equ		0
     128.  00:8000  (00:0001)           ACTIVA		equ		1
     129.  00:8000  (00:0001)           HABTERMIN	equ		1
     130.  00:8000                      
     131.  00:8000                      ;;POSICIONES DE LAS ANTORCHAS
     132.  00:8000  (00:0088)           POSANTOR1	equ		136
     133.  00:8000  (00:0097)           POSANTOR2	equ		151
     134.  00:8000  (00:00C4)           MAPLLAMA1	equ		196
     135.  00:8000  (00:00C5)           MAPLLAMA2	equ		197
     136.  00:8000  (00:00FF)           RESETLLAMA	equ		255
     137.  00:8000                      
     138.  00:8000                      ;;POSICIONES DE LOS ESQUELETOS
     139.  00:8000  (00:0088)           POSESQUEL1	equ		136
     140.  00:8000  (00:0095)           POSESQUEL2	equ		149
     141.  00:8000  (00:00A9)           POSCALAVE1	equ		169
     142.  00:8000  (00:00B6)           POSCALAVE2	equ		182
     143.  00:8000  (00:0019)           RESETESQUEL	equ		25
     144.  00:8000  (00:0004)           RESETESCENAESQUEL 	equ	4	;hay 4 caras con las que el esqueleto cambia (se ha metido el 0 para facilitar código)
     145.  00:8000                      
     146.  00:8000                      ;;ETIQUETAS ESPECIFICAS PARA DAR MÁS CLARIDAD AL CODIGO (relacionadas con posiciones en en el banco de memoria)
     147.  00:8000  (00:0013)           TILEPROTAM  equ		19		;tile del prota para pintar en mapa
     148.  00:8000  (00:0009)           TILEGRISM	equ		9		;tile gris que representa vacio (por donde el prota va pasando)
     149.  00:8000  (00:0010)           TILEMAPROJO equ		16
     150.  00:8000  (00:000F)           TILEMAPAMAR equ		15
     151.  00:8000  (00:000E)           TILEMAPVERD equ		14
     152.  00:8000                      
     153.  00:8000                      
     154.  00:8000                      ;;ETIQUETAS ESPECIFICAS PARA DAR MÁS CLARIDAD AL CODIGO (generales)
     155.  00:8000  (00:0008)           NMAXVIDREL	equ		8		;el número máximo de vidas y de reliquias es de 8
     156.  00:8000  (00:0007)           NHABNIVEL	equ		7
     157.  00:8000  (00:00F8)           MAXENERGIA  equ		248
     158.  00:8000  (00:00D9)           TILEENERG8  equ		217
     159.  00:8000  (00:00BA)           TILEENERG7  equ		186
     160.  00:8000  (00:009B)           TILEENERG6  equ		155
     161.  00:8000  (00:007C)           TILEENERG5  equ		124
     162.  00:8000  (00:005D)           TILEENERG4  equ		93
     163.  00:8000  (00:003E)           TILEENERG3  equ		62
     164.  00:8000  (00:001F)           TILEENERG2  equ		31
     165.  00:8000  (00:0000)           TILENEGRO	equ		0
     166.  00:8000                      
     167.  00:8000                      ;limites
     168.  00:8000  (00:0000)           LIMPANTIZQ  equ		0
     169.  00:8000  (00:00FF)           LIMPANTDER  equ		255
     170.  00:8000  (00:0000)           LIMPANTARR  equ		0
     171.  00:8000  (00:0080)           LIMPANTABA  equ		128
     172.  00:8000                      
     173.  00:8000                      
     174.  00:8000                      ;matriz de 7x7 empieza en 0, y fila y x col, cuento desde esquina sup izq
     175.  00:8000  (00:0006)           BASEMAPY	equ		6
     176.  00:8000  (00:0003)           BASEMAPX	equ		3
     177.  00:8000                      
     178.  00:8000                      
     179.  00:8000                      
     180.  00:8000                      ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
     181.  00:8000                      ;; CONSTANTES PARA INTERRUPCIONES
     182.  00:8000                      ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
     183.  00:8000  (00:FD9A)           H.KEYI		equ     	#FD9A
     184.  00:8000  (00:FD9F)           H.TIMI	 	equ     	#FD9F
     185.  00:8000                      
     186.  00:8000                      
     187.  00:8000                      ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
     188.  00:8000                      ;; CONSTANTES PARA SONIDO 
     189.  00:8000                      ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
     190.  00:8000                      
     191.  00:8000  (F000)              	map		#f000
     192.  00:8000                      
     193.  00:8000                      ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;PT3 REPLAYER
     194.  00:8000  (00:F000)           PT3_SETUP:		#1	;set bit0 to 1, if you want to play without looping
     195.  00:8000                      					;bit7 is set each time, when loop point is passed
     196.  00:8000  (00:F001)           PT3_MODADDR:	#2
     197.  00:8000  (00:F003)           PT3_CrPsPtr:	#2
     198.  00:8000  (00:F005)           PT3_SAMPTRS:	#2
     199.  00:8000  (00:F007)           PT3_OrnPtrs:	#2
     200.  00:8000  (00:F009)           PT3_PDSP:		#2
     201.  00:8000  (00:F00B)           PT3_CSP:		#2
     202.  00:8000  (00:F00D)           PT3_PSP:		#2
     203.  00:8000  (00:F00F)           PT3_PrNote:		#1
     204.  00:8000  (00:F010)           PT3_PrSlide:	#2
     205.  00:8000  (00:F012)           PT3_AdInPtA:	#2
     206.  00:8000  (00:F014)           PT3_AdInPtB:	#2
     207.  00:8000  (00:F016)           PT3_AdInPtC:	#2
     208.  00:8000  (00:F018)           PT3_LPosPtr:	#2
     209.  00:8000  (00:F01A)           PT3_PatsPtr:	#2
     210.  00:8000  (00:F01C)           PT3_Delay:		#1
     211.  00:8000  (00:F01D)           PT3_AddToEn:	#1
     212.  00:8000  (00:F01E)           PT3_Env_Del:	#1
     213.  00:8000  (00:F01F)           PT3_ESldAdd:	#2
     214.  00:8000  (00:F021)           PT3_NTL3:		#2	; AND A / NOP (note table creator)
     215.  00:8000                      
     216.  00:8000  (00:F023)           VARS:			#0
     217.  00:8000                      
     218.  00:8000  (00:F023)           ChanA:			#29			;CHNPRM_Size
     219.  00:8000  (00:F040)           ChanB:			#29			;CHNPRM_Size
     220.  00:8000  (00:F05D)           ChanC:			#29			;CHNPRM_Size
     221.  00:8000                      
     222.  00:8000                      ;GlobalVars
     223.  00:8000  (00:F07A)           DelyCnt:		#1
     224.  00:8000  (00:F07B)           CurESld:		#2
     225.  00:8000  (00:F07D)           CurEDel:		#1
     226.  00:8000  (00:F07E)           Ns_Base_AddToNs:	#0
     227.  00:8000  (00:F07E)           Ns_Base:		#1
     228.  00:8000  (00:F07F)           AddToNs:		#1
     229.  00:8000                      
     230.  00:8000  (00:F080)           NT_:			#192	; Puntero a/tabla de frecuencias
     231.  00:8000                      
     232.  00:8000  (00:F140)           AYREGS:			#0
     233.  00:8000  (00:F140)           VT_:			#14
     234.  00:8000  (00:F14E)           EnvBase:		#2
     235.  00:8000  (00:F150)           VAR0END:		#0
     236.  00:8000                      
     237.  00:8000  (00:F150)           T1_:			#0		
     238.  00:8000  (00:F150)           T_NEW_1:		#0
     239.  00:8000  (00:F150)           T_OLD_1:		#24
     240.  00:8000  (00:F168)           T_OLD_2:		#24
     241.  00:8000  (00:F180)           T_NEW_3:		#0
     242.  00:8000  (00:F180)           T_OLD_3:		#2
     243.  00:8000  (00:F182)           T_OLD_0:		#0
     244.  00:8000  (00:F182)           T_NEW_0:		#24
     245.  00:8000  (00:F19A)           T_NEW_2:		#166
     246.  00:8000                      ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;PT3 REPLAYER END
     247.  00:8000                      
     248.  00:8000                      ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ayFX REPLAYER 
     249.  00:8000  (00:F240)           ayFX_MODE:		#1			; ayFX mode
     250.  00:8000  (00:F241)           ayFX_BANK:		#2			; Current ayFX Bank
     251.  00:8000  (00:F243)           ayFX_PRIORITY:	#1			; Current ayFX stream priotity
     252.  00:8000  (00:F244)           ayFX_POINTER:	#2			; Pointer to the current ayFX stream
     253.  00:8000  (00:F246)           ayFX_TONE:		#2			; Current tone of the ayFX stream
     254.  00:8000  (00:F248)           ayFX_NOISE:		#1			; Current noise of the ayFX stream
     255.  00:8000  (00:F249)           ayFX_VOLUME:	#1			; Current volume of the ayFX stream
     256.  00:8000  (00:F24A)           ayFX_CHANNEL:	#1			; PSG channel to play the ayFX stream
     257.  00:8000                      
     258.  00:8000                      	;IF (AYFXRELATIVE == 1 ) 
     259.  00:8000                      ;ayFX_VT:	ds	2			; ayFX relative volume table pointer
     260.  00:8000                      	;ENDIF
     261.  00:8000                      ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ayFX REPLAYER END
     262.  00:8000                      
     263.  00:8000                      
     264.  00:8000                      
       7   00:8000                      
       8   00:8000                      ;;=====================================================
       9   00:8000                      ;;DEFINICIÓN DE CABECERA DE ARCHIVO BIN
      10   00:8000                      ;;=====================================================		
      11   00:8000                      	include "cabecerabin.asm"
       1.  00:8000                      ;;=====================================================
       2.  00:8000                      ;; FICHERO cabecera.asm
       3.  00:8000                      ;;=====================================================
       4.  00:8000                      
       5.  00:8000                      ;;CABECERA FICHERO BIN
       6.  00:8000  FE                  	DB	#FE
       7.  00:8001  00 80               	DW	START
       8.  00:8003  59 BD               	DW	END
       9.  00:8005  00 80               	DW	START
      10.  00:8007                      
      11.  00:8007                      ;;INICIO CÓDIGO PROGRAMA	
      12.  00:8007                      	ORG	#8000
      13.  00:8000                      	
      12   00:8000                      	
      13   00:8000                      START:	
      14   00:8000                      	;inicializa pantalla y entonrno
      15   00:8000  CD DD 81            	CALL	sub_preparapantalla			;screen 2,2 sin click al pulsar tecla y color 16,1,1
      16   00:8003                      	
      17   00:8003                      	;inicializa variables para parametrizar funciones y que lo que se muestre sea variable (nº vidas, mapa, puertas, pantalla, etc...)
      18   00:8003  CD 9C 80            	CALL	inicializa_variables_pruebas
      19   00:8006                      	
      20   00:8006                      ;***************************************************
      21   00:8006                      	;inicializa los niveles por partida
      22   00:8006                      ;	CALL	inicializa_niveles			;no es necesario parametrizarlo según el nivel del usuario ya que se cargan todos
      23   00:8006                      ;************** quitarlo cuando pueda navegar por habitaciones y esté más avanzado el proyecto
      24   00:8006                      
      25   00:8006                      	;inicializa los valores de cada puerta excepto si están activas o no (eso ocurre cuando se matan todos los enemigos de la hab. y sólo a las puertas que se muestren)
      26   00:8006  CD 68 87            	CALL	inicializa_puertas
      27   00:8009                      	
      28   00:8009                      	;inicializa las estructuras de forma particular según ayuda pero sin poner valores de posición
      29   00:8009  CD 77 9A            	CALL	inicializa_ayudas
      30   00:800C                      	
      31   00:800C                      	;inicializa las estructuras de las antorchas y esqueletos
      32   00:800C  CD 05 85            	CALL	inicializa_antorchas
      33   00:800F  CD 27 85            	CALL	inicializa_esqueletos
      34   00:8012                      	
      35   00:8012                      	;pinta la pantalla (la primera o algunas especiales se pintan completamente)
      36   00:8012  CD FE 81            	CALL	pinta_pantalla_completa 
      37   00:8015                      	
      38   00:8015                      	;carga sprites en memoria (SE HA RETRASADO HASTA PARAMETRIZAR LA CARGA DE PANTALLAS)
      39   00:8015  CD 5B 88            	CALL 	carga_patrones_sprites_nivel
      40   00:8018                      	
      41   00:8018                      	;funciones que modificarian el marcador si se produce un evento cuando toque y cuando se pinta la pantalla ya se mira
      42   00:8018                      	;una variable para ver si el array hay que actualizarlo en pantalla o no
      43   00:8018  CD 3E 83            	CALL	pinta_vidas
      44   00:801B  CD 4D 83            	CALL 	pinta_reliquias
      45   00:801E  CD 5C 83            	CALL	pinta_nivel
      46   00:8021  CD DC 83            	CALL	borra_mapa
      47   00:8024  CD AC 87            	CALL	pinta_puertas
      48   00:8027                      
      49   00:8027  3E 13               	LD		 A, TILEPROTAM
      50   00:8029  32 45 A9            	LD		(elemento_pintar_mapa), A
      51   00:802C  CD 33 84            	CALL	posiciona_en_mapa		;se le pasa elemento_pintar_mapa (tile del prota) está el prota y prota.posx y posy
      52   00:802F                      		
      53   00:802F  CD 15 9B            	CALL	pinta_ayudas_habitacion
      54   00:8032                      	
      55   00:8032  CD 49 85            	CALL	pinta_extra_fondo
      56   00:8035                      	
      57   00:8035                      	;esta función no va aquí sino en check colisiones pero se pone aquí para realizar pruebas
      58   00:8035  CD A6 81            	CALL	terminada_habitacion_recorrida ;para cuando se maten todos los enemigos de la habitación
      59   00:8038                      
      60   00:8038                      	;incializacion de replayer con interrupciones
      61   00:8038                      ;	CALL	inicializa_replayer_efectos_interrupciones
      62   00:8038                      
      63   00:8038                      loop_principal:
      64   00:8038  76                  	HALT							;espera VBLANK y sincroniza
      65   00:8039                      	
      66   00:8039  CD 6C 88            	CALL	render_sprites			;actualiza array de sprites y los pinta en pantalla
      67   00:803C                      	
      68   00:803C  CD CD 83            	CALL	pinta_energia			;pinta la energia en pantalla
      69   00:803F                      	
      70   00:803F  CD C0 85            	CALL	actualiza_elementos_fondo
      71   00:8042                      
      72   00:8042  CD AF 88            	CALL	check_player			;MIRA EL CONTROL Y APLICA LA LOGICA DE MOVIMIENTO DEL PROTAGONISTA
      73   00:8045                      	
      74   00:8045  C3 38 80            	JP		loop_principal
      75   00:8048                      fin_programa_principal:
      76   00:8048                      	;no necesita RET
      77   00:8048                      
      78   00:8048                      ;;akskskk
      79   00:8048                      check_colisiones_objetos:
      80   00:8048                      	;pantalla limpia?
      81   00:8048  3A F6 A5            	LD		 A, (is_habitacion_terminada)
      82   00:804B  F6 00               	OR		 0
      83   00:804D  CA 56 80            	JP		 Z, .habitacion_no_terminada
      84   00:8050                      	;SI 
      85   00:8050                      	;recorre puertas y sale
      86   00:8050  CD 57 80            		CALL	check_colisiones_puertas
      87   00:8053  C3 56 80            		JP		fin_check_colisiones_objetos	
      88   00:8056                      	;NO 
      89   00:8056                      .habitacion_no_terminada:
      90   00:8056                      	;recorre ayudas
      91   00:8056                      	;recorre enemigos
      92   00:8056                      	
      93   00:8056                      fin_check_colisiones_objetos:
      94   00:8056  C9                  	RET
      95   00:8057                      
      96   00:8057                      
      97   00:8057                      ;;che
      98   00:8057                      check_colisiones_puertas:
      99   00:8057                      .examina_puerta_arriba:
     100   00:8057  DD 21 F3 86         	LD		IX, puerta_arriba
     101   00:805B  DD 7E 00            	LD		 A, (IX)
     102   00:805E  B7                  	OR		 A
     103   00:805F  CA 65 80            	JP		 Z, .examina_puerta_derecha
     104   00:8062  CD 90 80            	CALL	check_colision_puerta	;aquí ya es cosa de ver colisiones prota/puerta_izquierda
     105   00:8065                      
     106   00:8065                      .examina_puerta_derecha:
     107   00:8065  DD 21 00 87         	LD		IX, puerta_derecha
     108   00:8069  DD 7E 00            	LD		 A, (IX)
     109   00:806C  B7                  	OR		 A
     110   00:806D  CA 73 80            	JP		 Z, .examina_puerta_abajo
     111   00:8070  CD 90 80            	CALL	check_colision_puerta	;aquí ya es cosa de ver colisiones prota/puerta_izquierda
     112   00:8073                      
     113   00:8073                      .examina_puerta_abajo:
     114   00:8073  DD 21 0D 87         	LD		IX, puerta_abajo
     115   00:8077  DD 7E 00            	LD		 A, (IX)
     116   00:807A  B7                  	OR		 A
     117   00:807B  CA 81 80            	JP		 Z, .examina_puerta_izquierda
     118   00:807E  CD 90 80            	CALL	check_colision_puerta	;aquí ya es cosa de ver colisiones prota/puerta_izquierda
     119   00:8081                      
     120   00:8081                      .examina_puerta_izquierda:
     121   00:8081  DD 21 0D 87         	LD		IX, puerta_abajo
     122   00:8085  DD 7E 00            	LD		 A, (IX)
     123   00:8088  B7                  	OR		 A
     124   00:8089  CA 81 80            	JP		 Z, .examina_puerta_izquierda
     125   00:808C  CD 90 80            	CALL	check_colision_puerta	;aquí ya es cosa de ver colisiones prota/puerta_izquierda
     126   00:808F                      fin_check_colisiones_puertas:
     127   00:808F  C9                  		RET
     128   00:8090                      
     129   00:8090                      
     130   00:8090                      ;;Sisisisisisi
     131   00:8090                      ;recibe:	IX con el puntero a la puerta que se examina
     132   00:8090                      check_colision_puerta:
     133   00:8090  FD 21 10 A9         	LD		IY, prota
     134   00:8094  3E 08               	LD		 A, 8		;offset del punto de mira ya que se mueve según la esquina superior izquierda y el centro del punto de mira está en el centro del sprite
     135   00:8096  47                  	LD		 B, A
     136   00:8097                      	
     137   00:8097  FD 7E 00            	LD		 A, (IY + ESTRUCTURA_PUNTOMIRA.posx)
     138   00:809A  80                  	ADD		 B			;ya tengo en A la coordenada X del centro del punto de mira
     139   00:809B                      	
     140   00:809B                      fin_check_colision_puerta:
     141   00:809B  C9                  	RET
     142   00:809C                      
     143   00:809C                      
     144   00:809C                      ;;*******************************************************************
     145   00:809C                      ; sólo para hacer pruebas y pintar la parte de las vidas y demás
     146   00:809C                      inicializa_variables_pruebas:
     147   00:809C  3E 04               	LD		 A, 4
     148   00:809E  32 21 A9            	LD		(prota_vidas),A
     149   00:80A1                      
     150   00:80A1  3E 04               	LD		 A, 4
     151   00:80A3  32 22 A9            	LD		(prota_reliquias), A
     152   00:80A6                      
     153   00:80A6  3E 64               	LD		 A, 100
     154   00:80A8  32 25 A9            	LD		(prota_energia), A
     155   00:80AB                      
     156   00:80AB                      	;ubico al prota dentro del nivel para obtener luego las habitaciones y enemigos que aparecerán
     157   00:80AB                      	;será igual la posición inicial en todos los niveles
     158   00:80AB                      	
     159   00:80AB  3E 00               	LD		 A, 0				;los niveles (matrices) son 7 del 0 al 6
     160   00:80AD  32 20 A9            	LD		(prota_nivel), A	;nivel empieza en 0 para usar las posiciones ascii
     161   00:80B0                      
     162   00:80B0  3E 01               	LD		 A, 1				;los subniveles (filas) son 7 del 0 al 6
     163   00:80B2  32 24 A9            	LD		(prota_pos_mapy), A	;pos Y dentro del nivel (se empieza en 0)
     164   00:80B5                      
     165   00:80B5  3E 03               	LD		 A, 3				;columnas 7: del 0 al 6
     166   00:80B7  32 23 A9            	LD		(prota_pos_mapx), A	;pos X dentro del nivel (se empieza en 0)
     167   00:80BA                      	
     168   00:80BA  AF                  	XOR		 A
     169   00:80BB  32 15 A9            	LD		(prota.cadencia), A
     170   00:80BE                      fin_inicializa_variables_pruebas:
     171   00:80BE  C9                  	RET
     172   00:80BF                      ;;************************************************************************
     173   00:80BF                      
     174   00:80BF                      
     175   00:80BF                      
     176   00:80BF                      
     177   00:80BF                      
     178   00:80BF                      
     179   00:80BF                      
     180   00:80BF                      
     181   00:80BF                      
     182   00:80BF                      ;;=====================================================
     183   00:80BF                      ;;DEFINICIÓN DE SUBRUTINAS
     184   00:80BF                      ;;=====================================================
     185   00:80BF                      	include "subrutinas.asm"
       1.  00:80BF                      ;;=====================================================
       2.  00:80BF                      ;;DEFINICIÓN DE SUBRUTINAS
       3.  00:80BF                      ;;=====================================================	
       4.  00:80BF                      
       5.  00:80BF                      
       6.  00:80BF                      ;;=====================================================
       7.  00:80BF                      ;;INICIALIZA_NIVELES
       8.  00:80BF                      ;;=====================================================	
       9.  00:80BF                      ; función: 	pone el bit 4 de todas las habitaciones (byte habitacion_actual 0,2,4....) a 0
      10.  00:80BF                      ; entrada: 	habitaciones_plantilla
      11.  00:80BF                      ; salida: 	habitaciones_plantilla con los el bit 4 de los bites bytes impares a 0
      12.  00:80BF                      ; toca: 	habitaciones_plantilla, B
      13.  00:80BF                      inicializa_niveles:
      14.  00:80BF  F5                  		PUSH		AF
      15.  00:80C0  C5                  		PUSH		BC
      16.  00:80C1  E5                  		PUSH		HL
      17.  00:80C2                      		
      18.  00:80C2  06 38               		LD			 B, 56		;la mitad de bytes del array de un nivel
      19.  00:80C4  21 F7 A5            		LD 			HL, habitaciones_nivel0
      20.  00:80C7                      .inicia_nivel_0
      21.  00:80C7  7E                  		LD		 	 A, (HL)
      22.  00:80C8  CB E7               		SET			 4, A 		;el 4 bit a 0 indica que por esa habitacion no se ha pasado/no se han atado todos los enemigos
      23.  00:80CA  77                  		LD			(HL), A
      24.  00:80CB  23 23               [2]		INC			HL
      25.  00:80CD  10 F8               		DJNZ		.inicia_nivel_0
      26.  00:80CF                      
      27.  00:80CF  06 38               		LD			 B, 56		;la mitad de bytes del array de un nivel
      28.  00:80D1  21 67 A6            		LD 			HL, habitaciones_nivel1
      29.  00:80D4                      .inicia_nivel_1
      30.  00:80D4  7E                  		LD		 	 A, (HL)
      31.  00:80D5  CB E7               		SET			 4, A 		;el 4 bit a 0 indica que por esa habitacion no se ha pasado/no se han atado todos los enemigos
      32.  00:80D7  77                  		LD			(HL), A
      33.  00:80D8  23 23               [2]		INC			HL
      34.  00:80DA  10 F8               		DJNZ		.inicia_nivel_1
      35.  00:80DC                      
      36.  00:80DC  06 38               		LD			 B, 56		;la mitad de bytes del array de un nivel
      37.  00:80DE  21 D7 A6            		LD 			HL, habitaciones_nivel2
      38.  00:80E1                      .inicia_nivel_2
      39.  00:80E1  7E                  		LD		 	 A, (HL)
      40.  00:80E2  CB E7               		SET			 4, A 		;el 4 bit a 0 indica que por esa habitacion no se ha pasado/no se han atado todos los enemigos
      41.  00:80E4  77                  		LD			(HL), A
      42.  00:80E5  23 23               [2]		INC			HL
      43.  00:80E7  10 F8               		DJNZ		.inicia_nivel_2
      44.  00:80E9                      
      45.  00:80E9  06 38               		LD			 B, 56		;la mitad de bytes del array de un nivel
      46.  00:80EB  21 47 A7            		LD 			HL, habitaciones_nivel3
      47.  00:80EE                      .inicia_nivel_3
      48.  00:80EE  7E                  		LD		 	 A, (HL)
      49.  00:80EF  CB E7               		SET			 4, A 		;el 4 bit a 0 indica que por esa habitacion no se ha pasado/no se han atado todos los enemigos
      50.  00:80F1  77                  		LD			(HL), A
      51.  00:80F2  23 23               [2]		INC			HL
      52.  00:80F4  10 F8               		DJNZ		.inicia_nivel_3
      53.  00:80F6                      
      54.  00:80F6  06 38               		LD			 B, 56		;la mitad de bytes del array de un nivel
      55.  00:80F8  21 B7 A7            		LD 			HL, habitaciones_nivel4
      56.  00:80FB                      .inicia_nivel_4
      57.  00:80FB  7E                  		LD		 	 A, (HL)
      58.  00:80FC  CB E7               		SET			 4, A 		;el 4 bit a 0 indica que por esa habitacion no se ha pasado/no se han atado todos los enemigos
      59.  00:80FE  77                  		LD			(HL), A
      60.  00:80FF  23 23               [2]		INC			HL
      61.  00:8101  10 F8               		DJNZ		.inicia_nivel_4
      62.  00:8103                      
      63.  00:8103  06 38               		LD			 B, 56		;la mitad de bytes del array de un nivel
      64.  00:8105  21 27 A8            		LD 			HL, habitaciones_nivel5
      65.  00:8108                      .inicia_nivel_5
      66.  00:8108  7E                  		LD		 	 A, (HL)
      67.  00:8109  CB E7               		SET			 4, A 		;el 4 bit a 0 indica que por esa habitacion no se ha pasado/no se han atado todos los enemigos
      68.  00:810B  77                  		LD			(HL), A
      69.  00:810C  23 23               [2]		INC			HL
      70.  00:810E  10 F8               		DJNZ		.inicia_nivel_5
      71.  00:8110                      
      72.  00:8110  06 38               		LD			 B, 56		;la mitad de bytes del array de un nivel
      73.  00:8112  21 97 A8            		LD 			HL, habitaciones_nivel6
      74.  00:8115                      .inicia_nivel_6
      75.  00:8115  7E                  		LD		 	 A, (HL)
      76.  00:8116  CB E7               		SET			 4, A 		;el 4 bit a 0 indica que por esa habitacion no se ha pasado/no se han atado todos los enemigos
      77.  00:8118  77                  		LD			(HL), A
      78.  00:8119  23 23               [2]		INC			HL
      79.  00:811B  10 F8               		DJNZ		.inicia_nivel_6
      80.  00:811D                      
      81.  00:811D  E1                  		POP			HL
      82.  00:811E  C1                  		POP			BC
      83.  00:811F  F1                  		POP			AF
      84.  00:8120                      fin_iniciliza_niveles:
      85.  00:8120  C9                  		RET
      86.  00:8121                      
      87.  00:8121                      
      88.  00:8121                      ;;=====================================================
      89.  00:8121                      ;;ACTUALIZA_MARCADOR_VIDAS
      90.  00:8121                      ;;=====================================================	
      91.  00:8121                      ; función:  actualiza el buffer de vidas
      92.  00:8121                      ; entrada: 	prota_vidas
      93.  00:8121                      ; salida: 	array_aux_vidas
      94.  00:8121                      ; toca:		A,B,HL
      95.  00:8121                      actualiza_marcador_vidas:
      96.  00:8121                      	;para no andar restando pongo todos los huecos a negro y luego en otro bucle las caras
      97.  00:8121                      	;1-pinto todo en blanco
      98.  00:8121  21 26 A9            	LD		HL,array_aux_vidas
      99.  00:8124  06 08               	LD		 B,NMAXVIDREL
     100.  00:8126                      loop_marcador_caras_negro:	;asignar espacios en negro
     101.  00:8126  36 00               	LD		(HL),0			;0 posición mapa tiles para nada (es transparente pero el fondo es negro)
     102.  00:8128  23                  	INC		HL
     103.  00:8129  10 FB               	DJNZ	loop_marcador_caras_negro
     104.  00:812B                      fin_loop_marcador_caras_negro:
     105.  00:812B                      	;2-pinto las caras según el n de vidas
     106.  00:812B  3A 21 A9            	LD		 A, (prota_vidas)
     107.  00:812E  B7                  	OR		 A
     108.  00:812F  C8                  	RET 	 Z
     109.  00:8130  47                  	LD		 B, A
     110.  00:8131  21 26 A9            	LD		HL, array_aux_vidas
     111.  00:8134                      loop_marcador_caras: ;asignar caras
     112.  00:8134  36 0D               	LD		(HL), POSCARAMAP	;13 posición mapa tiles para cara
     113.  00:8136  23                  	INC		HL
     114.  00:8137  10 FB               	DJNZ	loop_marcador_caras
     115.  00:8139                      fin_loop_marcador_caras:
     116.  00:8139                      fin_actualiza_marcador_vidas:
     117.  00:8139  C9                  	RET
     118.  00:813A                      
     119.  00:813A                      
     120.  00:813A                      ;;=====================================================
     121.  00:813A                      ;;ACTUALIZA_BUFFER_RELIQUIAS
     122.  00:813A                      ;;=====================================================	
     123.  00:813A                      ; función: 	actualiza buffer de reliquias
     124.  00:813A                      ; entrada: 	prota_reliquias
     125.  00:813A                      ; salida: 	array_aux_reliquias
     126.  00:813A                      ; toca:		A,B,HL
     127.  00:813A                      actualiza_buffer_reliquias:	
     128.  00:813A                      	;para no andar restando pongo todos los huecos a negro y luego en otro bucle las reliquias
     129.  00:813A                      	;1-pinto todo en blanco
     130.  00:813A  21 2E A9            	LD		HL, array_aux_reliquias
     131.  00:813D  06 08               	LD		 B, NMAXVIDREL
     132.  00:813F  AF                  	XOR		 A
     133.  00:8140                      loop_buffer_reliquias_negro:	;asignar espacios en negro
     134.  00:8140  77                  	LD		(HL), A			;0 posición mapa tiles para nada (es transparente pero el fondo es negro)
     135.  00:8141  23                  	INC		HL
     136.  00:8142  10 FC               	DJNZ	loop_buffer_reliquias_negro
     137.  00:8144                      
     138.  00:8144                      	;2-pinto las cruces según el n de reliquias
     139.  00:8144  21 2E A9            	LD		HL, array_aux_reliquias
     140.  00:8147  3A 22 A9            	LD		 A, (prota_reliquias)
     141.  00:814A  B7                  	OR		 A
     142.  00:814B  C8                  	RET		 Z
     143.  00:814C  47                  	LD		 B, A
     144.  00:814D                      loop_buffer_reliquias: ;asignar reliquias
     145.  00:814D  36 11               	LD		(HL), POSRELIMAP	;17 posición mapa tiles para reliquia
     146.  00:814F  23                  	INC		HL
     147.  00:8150  10 FB               	DJNZ	loop_buffer_reliquias
     148.  00:8152                      fin_actualiza_buffer_reliquias:
     149.  00:8152  C9                  	RET
     150.  00:8153                      
     151.  00:8153                      
     152.  00:8153                      
     153.  00:8153                      ;;=====================================================
     154.  00:8153                      ;;LOCALIZA_INFO_HABITACION
     155.  00:8153                      ;;=====================================================	
     156.  00:8153                      ; función: 	busca las puertas que hay que pintar egún la posición del usuario y las pone en habitacion_actual
     157.  00:8153                      ; entrada: 	prota.pos_mapy, prota.pos_mapx, prota_nivel habitaciones_juego
     158.  00:8153                      ; salida: 	habitacion_actual
     159.  00:8153                      ; toca:		todo
     160.  00:8153                      ;ejemplo: nivel 4, posy 5 y posx 3
     161.  00:8153                      ;3 + 5 x 8 + 4 x 49
     162.  00:8153                      localiza_info_habitacion:
     163.  00:8153                      	;~ PUSH	AF
     164.  00:8153                      	;~ PUSH	BC
     165.  00:8153                      	;~ PUSH	DE
     166.  00:8153                      	;~ PUSH	HL
     167.  00:8153                      
     168.  00:8153                      ;primera posición: me coloco en la columna correcta
     169.  00:8153  21 F7 A5            	LD		HL, habitaciones_juego
     170.  00:8156                      .situo_columna:	
     171.  00:8156  3A 23 A9            	LD		 A, (prota_pos_mapx)
     172.  00:8159  CB 27               	SLA		 A				;multiplico por dos ya que cada habitación va de dos en dos bytes
     173.  00:815B  06 00               	LD		 B, 0
     174.  00:815D  4F                  	LD		 C, A
     175.  00:815E  09                  	ADD 	HL, BC			;sumo a la posición 0 la columnax2 en la que situarme
     176.  00:815F                      	
     177.  00:815F                      .situo_fila:
     178.  00:815F  3A 24 A9            	LD		A, (prota_pos_mapy)
     179.  00:8162  B7                  	OR	 	A
     180.  00:8163  CA 70 81            	JP		Z, .situo_nivel	;si la fila es 0 no es necesario seguir operando en fila
     181.  00:8166                      	
     182.  00:8166  47                  	LD		B, A
     183.  00:8167  AF                  	XOR		A
     184.  00:8168                      .loop_suma_fila:
     185.  00:8168  C6 10               	ADD		16				;cada fila tiene 16 bytes
     186.  00:816A  10 FC               	DJNZ	.loop_suma_fila
     187.  00:816C                      	
     188.  00:816C  06 00               	LD		 B, 0
     189.  00:816E  4F                  	LD		 C, A
     190.  00:816F                      
     191.  00:816F  09                  	ADD 	HL, BC			;sumo a la columna 16 x filas para situarme en la fila correcta
     192.  00:8170                      
     193.  00:8170                      .situo_nivel:
     194.  00:8170  3A 20 A9            	LD		 A, (prota_nivel)
     195.  00:8173  B7                  	OR	 	 A
     196.  00:8174  CA 84 81            	JP		 Z, .actualiza_variable_habitacion	;si el nivel es 0 al pasar por las anterirores ya estoy situado actualizo la variable y termino
     197.  00:8177                      	
     198.  00:8177  E5                  	PUSH	HL				;guardo el resultado intermedio
     199.  00:8178                      	
     200.  00:8178  47                  	LD		 B, A			;preparo la varible del bucle
     201.  00:8179  11 70 00            	LD		DE, 112			;112 = 16x42 son los bytes de cada matriz-nivel
     202.  00:817C  21 00 00            	LD		HL, 0
     203.  00:817F                      .loop_suma_nivel:
     204.  00:817F  19                  	ADD		HL, DE
     205.  00:8180  10 FD               	DJNZ	.loop_suma_nivel
     206.  00:8182                      	
     207.  00:8182  D1                  	POP		DE				;devuelvo el resultado intermedio en DE que ya no lo necesito
     208.  00:8183                      	
     209.  00:8183  19                  	ADD		HL, DE			;sumo el resultado del nivel al resultado intermedio anterior
     210.  00:8184                      	
     211.  00:8184                      .actualiza_variable_habitacion
     212.  00:8184  7E                  	LD		 A, (HL)
     213.  00:8185  32 F2 A5            	LD		(habitacion_actual), A
     214.  00:8188                      	
     215.  00:8188                      	;actualizo la variable habitacion_actual y su puntero para poder modificar por si se vuelve a pasar por ahí
     216.  00:8188  DD 21 F4 A5         	LD		IX, habitacion_actual_puntero
     217.  00:818C  DD 74 00            	LD		(IX), H
     218.  00:818F  DD 75 01            	LD		(IX + 1), L
     219.  00:8192                      	
     220.  00:8192                      	;actualizo la variable is_habitacion_terminada
     221.  00:8192  3A F2 A5            	LD		 A, (habitacion_actual)
     222.  00:8195  32 F6 A5            	LD		(is_habitacion_terminada), A
     223.  00:8198  3A F4 A5            	LD		 A, (habitacion_actual_puntero)
     224.  00:819B  F6 10               	OR		00010000b
     225.  00:819D  32 F6 A5            	LD		(is_habitacion_terminada), A
     226.  00:81A0                      	
     227.  00:81A0                      	;actualizo la variable habitacion_extras
     228.  00:81A0  23                  	INC		HL				;el byte de los extras está antes de donde se especifican las puertas
     229.  00:81A1  7E                  	LD		 A, (HL)
     230.  00:81A2  32 F3 A5            	LD		(habitacion_extras), A
     231.  00:81A5                      
     232.  00:81A5                      	;~ POP		HL	
     233.  00:81A5                      	;~ POP		DE
     234.  00:81A5                      	;~ POP		BC
     235.  00:81A5                      	;~ POP		AF
     236.  00:81A5                      fin_localiza_info_habitacion:
     237.  00:81A5  C9                  	RET
     238.  00:81A6                      	
     239.  00:81A6                      
     240.  00:81A6                      ;;=====================================================
     241.  00:81A6                      ;;TERMINADA_HABIACION_RECORRIDA
     242.  00:81A6                      ;;=====================================================	
     243.  00:81A6                      ; función: 	usando la variable prota_pos_mapx pone un 1 a donde apunta habitacion_recorrida (el array... byte 14 de 
     244.  00:81A6                      ;			habitaciones recorridas en esa fila) para ver si uestra enemigos o no y permita pasar por puertas
     245.  00:81A6                      ; entrada: 	prota_pos_mapx, habitacion_recorrida
     246.  00:81A6                      ; salida: 	habitacion_recorrida (byte 14 de la fila de habitaciones) actualizada con OR A (en A la habitacion)
     247.  00:81A6                      ; toca:		IX, HL, AF
     248.  00:81A6                      terminada_habitacion_recorrida:
     249.  00:81A6  21 F4 A5            		LD			HL, habitacion_actual_puntero
     250.  00:81A9  7E                  		LD			 A, (HL)
     251.  00:81AA  CB E7               		SET			 4, A
     252.  00:81AC  77                  		LD			(HL), A
     253.  00:81AD                      		
     254.  00:81AD  3E 01               		LD			 A, HABTERMIN	;da igual qué bit mientras sea distinto de 0
     255.  00:81AF  32 F6 A5            		LD			(is_habitacion_terminada), A
     256.  00:81B2                      		
     257.  00:81B2                      		;este trozo no sirve de nada pero ya e quedo más tranquilo si lo pongo, por ser exacto y completo
     258.  00:81B2                      		;no sirve porque se cambiará de habitación y se perderá/actualizará el dato
     259.  00:81B2  3A F2 A5            		LD			 A, (habitacion_actual)
     260.  00:81B5  CB E7               		SET			 4, A
     261.  00:81B7  32 F2 A5            		LD			(habitacion_actual), A
     262.  00:81BA                      		
     263.  00:81BA  3E 01               		LD			 A, 1
     264.  00:81BC  47                  		LD			 B, A
     265.  00:81BD  C3 1A 88            		JP			activa_desactiva_puertas		;se la pasa B que para activar necesita 1
     266.  00:81C0                      fin_terminada_habitacion_recorrida:
     267.  00:81C0                      
     268.  00:81C0                      
     269.  00:81C0                      
     270.  00:81C0                      
     271.  00:81C0                      	
     272.  00:81C0                      	
     273.  00:81C0                      	
     274.  00:81C0                      	
     275.  00:81C0                      	
     276.  00:81C0                      	
     277.  00:81C0                      	
     278.  00:81C0                      	
     279.  00:81C0                      	
     280.  00:81C0                      	
     281.  00:81C0                      	
     282.  00:81C0                      	
     283.  00:81C0                      	
     284.  00:81C0                      	
     285.  00:81C0                      	
     286.  00:81C0                      	
     287.  00:81C0                      	
     186   00:81C0                      	
     187   00:81C0                      	include "subr_general.asm"
       1.  00:81C0                      ;;=====================================================
       2.  00:81C0                      ;;DEFINICIÓN DE SUBRUTINAS GENERALES USABLES PARA CUALQUIER PROYECTO
       3.  00:81C0                      ;;=====================================================	
       4.  00:81C0                      
       5.  00:81C0                      ;;=====================================================
       6.  00:81C0                      ;;SUMA_A_BC
       7.  00:81C0                      ;;=====================================================	
       8.  00:81C0                      ; función: 	suma A a BC por si da más de 255
       9.  00:81C0                      ; entrada: 	A, BC
      10.  00:81C0                      ; salida: 	A + BC
      11.  00:81C0                      ; toca:		A, BC
      12.  00:81C0                      suma_A_BC:
      13.  00:81C0  81                  	ADD		 C
      14.  00:81C1  4F                  	LD		 C, A
      15.  00:81C2  88                  	ADC		 B
      16.  00:81C3  91                  	SUB		 C
      17.  00:81C4  47                  	LD		 B, A
      18.  00:81C5                      fin_suma_A_BC:
      19.  00:81C5  C9                  	RET
      20.  00:81C6                      	
      21.  00:81C6                      ;;=====================================================
      22.  00:81C6                      ;;SUMA_A_HL
      23.  00:81C6                      ;;=====================================================	
      24.  00:81C6                      ; función: 	suma A a BC por si da más de 255
      25.  00:81C6                      ; entrada: 	A, HL
      26.  00:81C6                      ; salida: 	A + HL
      27.  00:81C6                      ; toca:		A, HL
      28.  00:81C6                      suma_A_HL:
      29.  00:81C6  85                  	ADD		 L
      30.  00:81C7  6F                  	LD		 L, A
      31.  00:81C8  8C                  	ADC		 H
      32.  00:81C9  95                  	SUB		 L
      33.  00:81CA  67                  	LD		 H, A
      34.  00:81CB                      fin_suma_A_HL:
      35.  00:81CB  C9                  	RET
     188   00:81CC                      	
     189   00:81CC                      	include "subr_pintapantalla.asm"
       1.  00:81CC                      ;;=====================================================
       2.  00:81CC                      ;;DEFINICIÓN DE SUBRUTINAS
       3.  00:81CC                      ;;=====================================================	
       4.  00:81CC                      ;relacionadas con pintado en pantalla (y no sprites)
       5.  00:81CC                      
       6.  00:81CC                      
       7.  00:81CC                      ;;=====================================================
       8.  00:81CC                      ;;COLOR_PANTALLA
       9.  00:81CC                      ;;=====================================================	
      10.  00:81CC                      ; función: 	el equivalente en basic a color 15,1,1
      11.  00:81CC                      ; entrada: 	HL	que apunta a un array de bytes con 3 bytes FORCLR, BAKCLR y BDRCLR
      12.  00:81CC                      ; salida: 	-
      13.  00:81CC                      ; toca: 	todo
      14.  00:81CC                      color_pantalla:
      15.  00:81CC  7E                  	LD		 A, (HL)			;FORCLR 
      16.  00:81CD  32 E9 F3            	LD 		(FORCLR),A
      17.  00:81D0  23                  	INC		HL
      18.  00:81D1                      	
      19.  00:81D1  7E                  	LD		 A, (HL)			;BAKCLR
      20.  00:81D2  32 EA F3            	LD 		(BAKCLR),A
      21.  00:81D5  23                  	INC		HL
      22.  00:81D6                      	
      23.  00:81D6  7E                  	LD		 A, (HL)
      24.  00:81D7  32 EB F3            	LD 		(BDRCLR),A			;BDRCLR
      25.  00:81DA  C3 62 00            	JP		CHGCLR 
      26.  00:81DD                      fin_color_pantalla:
      27.  00:81DD                      
      28.  00:81DD                      
      29.  00:81DD                      ;;=====================================================
      30.  00:81DD                      ;;PREPARAPANTALLA
      31.  00:81DD                      ;;=====================================================	
      32.  00:81DD                      ; función: elimina clic cuando se pulsa tecla, cls, screen 2,2
      33.  00:81DD                      ; entrada: -
      34.  00:81DD                      ; salida: -
      35.  00:81DD                      ; toca: si no son todos los regristros, casi todos
      36.  00:81DD                      sub_preparapantalla:
      37.  00:81DD                      	;toca A y Z
      38.  00:81DD                      elimina_clic;
      39.  00:81DD  AF                  	XOR		 A
      40.  00:81DE  32 DB F3            	LD		(CLIKSW),A
      41.  00:81E1                      fin_elimina_clic:
      42.  00:81E1                      
      43.  00:81E1                      	;toca A
      44.  00:81E1                      limpia_pantalla:
      45.  00:81E1  AF                  	XOR		 A
      46.  00:81E2  CD C3 00            	CALL 	CLS
      47.  00:81E5                      fin_limpia_pantalla:
      48.  00:81E5                      
      49.  00:81E5                      	;toca A y direcciones #F3E9/#F3EA/#F3EB, poner en HL array con 3 valores
      50.  00:81E5  21 07 A9            	LD		HL, color_base
      51.  00:81E8  CD CC 81            	CALL	color_pantalla
      52.  00:81EB                      	
      53.  00:81EB                      	;cambiamos a SCREEN 2,2 del BASIC
      54.  00:81EB                      	;toca A
      55.  00:81EB                      screen2:
      56.  00:81EB  3E 02               	LD		 A, 2
      57.  00:81ED  CD 5F 00            	CALL	CHGMOD			;selecciona screen 2
      58.  00:81F0                      sprites_16_16:
      59.  00:81F0  3A E0 F3            	LD		 A, (RG1SAV)
      60.  00:81F3  F6 02               	OR		00000010b		;fuerza sprites de 16x16
      61.  00:81F5  32 E0 F3            	LD		(RG1SAV), A		;no lo guardamos en la copia de variables del sistema
      62.  00:81F8  47                  	LD		 B, A
      63.  00:81F9  0E 01               	LD		 C, 1
      64.  00:81FB  C3 47 00            	JP		WRTVDP			;opción alternativa de escribir las tres lineas siguientes
      65.  00:81FE                      fin_sub_preparapantalla:
      66.  00:81FE                      	
      67.  00:81FE                      
      68.  00:81FE                      ;;=====================================================
      69.  00:81FE                      ;;PINTA_PANTALLA_COMPLETA
      70.  00:81FE                      ;;=====================================================	
      71.  00:81FE                      ; función: pinta el escenario, las 3 partes
      72.  00:81FE                      ; entrada: -
      73.  00:81FE                      ; salida: -
      74.  00:81FE                      ; toca: si no son todos los regristros, casi todos
      75.  00:81FE                      pinta_pantalla_completa:
      76.  00:81FE  CD 05 82            	CALL 	pinta_parte_superior_pantalla
      77.  00:8201                      	
      78.  00:8201  CD 23 83            	CALL 	pinta_parte_inferior_pantalla	
      79.  00:8204                      fin_pinta_pantalla_completa:
      80.  00:8204  C9                  	RET
      81.  00:8205                      
      82.  00:8205                      
      83.  00:8205                      ;;=====================================================
      84.  00:8205                      ;;PINTA_PARTE_SUPERIOR_PANTALLA
      85.  00:8205                      ;;=====================================================	
      86.  00:8205                      ; función: pinta el escenario, los dos bancos superiores
      87.  00:8205                      ; entrada: -
      88.  00:8205                      ; salida: -
      89.  00:8205                      ; toca: si no son todos los regristros, casi todos
      90.  00:8205                      pinta_parte_superior_pantalla:
      91.  00:8205  3A 20 A9            	LD		 A, (prota_nivel)
      92.  00:8208  CA 36 82            	JP		 Z, .carga_nivel_0
      93.  00:820B  3D                  	DEC		 A
      94.  00:820C  3A 20 A9            	LD		 A, (prota_nivel)
      95.  00:820F  CA 51 82            	JP		 Z, .carga_nivel_1
      96.  00:8212  3D                  	DEC		 A
      97.  00:8213  3A 20 A9            	LD		 A, (prota_nivel)
      98.  00:8216  CA 6C 82            	JP		 Z, .carga_nivel_2
      99.  00:8219  3D                  	DEC		 A
     100.  00:821A  3A 20 A9            	LD		 A, (prota_nivel)
     101.  00:821D  CA 87 82            	JP		 Z, .carga_nivel_3
     102.  00:8220  3D                  	DEC		 A
     103.  00:8221  3A 20 A9            	LD		 A, (prota_nivel)
     104.  00:8224  CA A2 82            	JP		 Z, .carga_nivel_4
     105.  00:8227  3D                  	DEC		 A
     106.  00:8228  3A 20 A9            	LD		 A, (prota_nivel)
     107.  00:822B  CA BD 82            	JP		 Z, .carga_nivel_5
     108.  00:822E  3D                  	DEC		 A
     109.  00:822F  3A 20 A9            	LD		 A, (prota_nivel)
     110.  00:8232  CA D8 82            	JP		 Z, .carga_nivel_6
     111.  00:8235  3D                  	DEC		 A
     112.  00:8236                      	
     113.  00:8236                      .carga_nivel_0:
     114.  00:8236  21 86 AB            	LD		HL, tiles_patrones_nivel0
     115.  00:8239  22 1D 83            	LD		(tiles_patrones), HL
     116.  00:823C  21 B0 AD            	LD		HL, tiles_color_nivel0
     117.  00:823F  22 1F 83            	LD		(tiles_colores), HL
     118.  00:8242  21 86 AB            	LD		HL, tiles_patrones_nivel0
     119.  00:8245  22 1D 83            	LD		(tiles_patrones), HL
     120.  00:8248  21 1B AE            	LD		HL, tiles_mapa_nivel0
     121.  00:824B  22 21 83            	LD		(tiles_mapa), HL
     122.  00:824E  C3 F0 82            	JP		.fin_carga_niveles
     123.  00:8251                      
     124.  00:8251                      .carga_nivel_1:
     125.  00:8251  21 50 AE            	LD		HL, tiles_patrones_nivel1
     126.  00:8254  22 1D 83            	LD		(tiles_patrones), HL
     127.  00:8257  21 05 B0            	LD		HL, tiles_color_nivel1
     128.  00:825A  22 1F 83            	LD		(tiles_colores), HL
     129.  00:825D  21 50 AE            	LD		HL, tiles_patrones_nivel1
     130.  00:8260  22 1D 83            	LD		(tiles_patrones), HL
     131.  00:8263  21 4C B0            	LD		HL, tiles_mapa_nivel1
     132.  00:8266  22 21 83            	LD		(tiles_mapa), HL
     133.  00:8269  C3 F0 82            	JP		.fin_carga_niveles
     134.  00:826C                      	
     135.  00:826C                      .carga_nivel_2:
     136.  00:826C  21 81 B0            	LD		HL, tiles_patrones_nivel2
     137.  00:826F  22 1D 83            	LD		(tiles_patrones), HL
     138.  00:8272  21 36 B2            	LD		HL, tiles_color_nivel2
     139.  00:8275  22 1F 83            	LD		(tiles_colores), HL
     140.  00:8278  21 81 B0            	LD		HL, tiles_patrones_nivel2
     141.  00:827B  22 1D 83            	LD		(tiles_patrones), HL
     142.  00:827E  21 7D B2            	LD		HL, tiles_mapa_nivel2
     143.  00:8281  22 21 83            	LD		(tiles_mapa), HL
     144.  00:8284  C3 F0 82            	JP		.fin_carga_niveles
     145.  00:8287                      	
     146.  00:8287                      .carga_nivel_3:
     147.  00:8287  21 B2 B2            	LD		HL, tiles_patrones_nivel3
     148.  00:828A  22 1D 83            	LD		(tiles_patrones), HL
     149.  00:828D  21 67 B4            	LD		HL, tiles_color_nivel3
     150.  00:8290  22 1F 83            	LD		(tiles_colores), HL
     151.  00:8293  21 B2 B2            	LD		HL, tiles_patrones_nivel3
     152.  00:8296  22 1D 83            	LD		(tiles_patrones), HL
     153.  00:8299  21 AE B4            	LD		HL, tiles_mapa_nivel3
     154.  00:829C  22 21 83            	LD		(tiles_mapa), HL
     155.  00:829F  C3 F0 82            	JP		.fin_carga_niveles
     156.  00:82A2                      	
     157.  00:82A2                      .carga_nivel_4:
     158.  00:82A2  21 E3 B4            	LD		HL, tiles_patrones_nivel4
     159.  00:82A5  22 1D 83            	LD		(tiles_patrones), HL
     160.  00:82A8  21 98 B6            	LD		HL, tiles_color_nivel4
     161.  00:82AB  22 1F 83            	LD		(tiles_colores), HL
     162.  00:82AE  21 E3 B4            	LD		HL, tiles_patrones_nivel4
     163.  00:82B1  22 1D 83            	LD		(tiles_patrones), HL
     164.  00:82B4  21 DF B6            	LD		HL, tiles_mapa_nivel4
     165.  00:82B7  22 21 83            	LD		(tiles_mapa), HL
     166.  00:82BA  C3 F0 82            	JP		.fin_carga_niveles
     167.  00:82BD                      	
     168.  00:82BD                      .carga_nivel_5:
     169.  00:82BD  21 14 B7            	LD		HL, tiles_patrones_nivel5
     170.  00:82C0  22 1D 83            	LD		(tiles_patrones), HL
     171.  00:82C3  21 C9 B8            	LD		HL, tiles_color_nivel5
     172.  00:82C6  22 1F 83            	LD		(tiles_colores), HL
     173.  00:82C9  21 14 B7            	LD		HL, tiles_patrones_nivel5
     174.  00:82CC  22 1D 83            	LD		(tiles_patrones), HL
     175.  00:82CF  21 10 B9            	LD		HL, tiles_mapa_nivel5
     176.  00:82D2  22 21 83            	LD		(tiles_mapa), HL
     177.  00:82D5  C3 F0 82            	JP		.fin_carga_niveles
     178.  00:82D8                      	
     179.  00:82D8                      .carga_nivel_6:
     180.  00:82D8  21 45 B9            	LD		HL, tiles_patrones_nivel6
     181.  00:82DB  22 1D 83            	LD		(tiles_patrones), HL
     182.  00:82DE  21 FA BA            	LD		HL, tiles_color_nivel6
     183.  00:82E1  22 1F 83            	LD		(tiles_colores), HL
     184.  00:82E4  21 45 B9            	LD		HL, tiles_patrones_nivel6
     185.  00:82E7  22 1D 83            	LD		(tiles_patrones), HL
     186.  00:82EA  21 41 BB            	LD		HL, tiles_mapa_nivel6
     187.  00:82ED  22 21 83            	LD		(tiles_mapa), HL
     188.  00:82F0                      ;	JP		.fin_carga niveles			;no necesario
     189.  00:82F0                      .fin_carga_niveles:
     190.  00:82F0                      
     191.  00:82F0                      	;cargando banco 1
     192.  00:82F0                      	;cargamos los patrones
     193.  00:82F0  2A 1D 83            	LD		HL, (tiles_patrones)
     194.  00:82F3  11 00 00            	LD		DE, CHRTBL
     195.  00:82F6  CD 92 9B            	CALL	depack_VRAM
     196.  00:82F9                      	;cargamos los colores de los patrones
     197.  00:82F9  2A 1F 83            	LD		HL, (tiles_colores)
     198.  00:82FC  11 00 20            	LD		DE, CLRTBL
     199.  00:82FF  CD 92 9B            	CALL	depack_VRAM
     200.  00:8302                      	
     201.  00:8302                      	;cargando banco 2
     202.  00:8302                      	;cargamos los patrones
     203.  00:8302  2A 1D 83            	LD		HL, (tiles_patrones)
     204.  00:8305  11 00 08            	LD		DE, CHRTBL + #0800
     205.  00:8308  CD 92 9B            	CALL	depack_VRAM	
     206.  00:830B                      	;cargamos los colores de los patrones
     207.  00:830B  2A 1F 83            	LD		HL, (tiles_colores)
     208.  00:830E  11 00 28            	LD		DE, CLRTBL + #0800
     209.  00:8311  CD 92 9B            	CALL	depack_VRAM
     210.  00:8314                      	
     211.  00:8314                      	;cargamos mapa de pantalla banco 1 y 2
     212.  00:8314  2A 21 83            	LD		HL, (tiles_mapa)
     213.  00:8317  11 00 18            	LD		DE, TILMAP
     214.  00:831A  C3 92 9B            	JP		depack_VRAM
     215.  00:831D                      fin_pinta_parte_superior_pantalla:
     216.  00:831D  00 00               tiles_patrones:		DW	0
     217.  00:831F  00 00               tiles_colores:		DW	0
     218.  00:8321  00 00               tiles_mapa:			DW	0
     219.  00:8323                      
     220.  00:8323                      
     221.  00:8323                      ;;=====================================================
     222.  00:8323                      ;;PINTA_PARTE_INFERIOR_PANTALLA
     223.  00:8323                      ;;=====================================================	
     224.  00:8323                      ; función: pinta la parte inferior del escenario que es común
     225.  00:8323                      ; entrada: -
     226.  00:8323                      ; salida: -
     227.  00:8323                      ; toca: si no son todos los regristros, casi todos
     228.  00:8323                      pinta_parte_inferior_pantalla:
     229.  00:8323                      	;cangando banco 3
     230.  00:8323                      	;cargamos los patrones
     231.  00:8323  21 76 BB            	LD		HL,tiles_patrones_marcador
     232.  00:8326  11 00 10            	LD		DE,CHRTBL + #1000
     233.  00:8329  CD 92 9B            	CALL	depack_VRAM	
     234.  00:832C                      	;cargamos mapa de pantalla
     235.  00:832C  21 F7 BC            	LD		HL,tiles_mapa_marcador
     236.  00:832F  11 00 1A            	LD		DE,TILMAP + #0200
     237.  00:8332  CD 92 9B            	CALL	depack_VRAM
     238.  00:8335                      	;cargamos los colores de los patrones
     239.  00:8335  21 C2 BC            	LD		HL,tiles_color_marcador
     240.  00:8338  11 00 30            	LD		DE,CLRTBL + #1000
     241.  00:833B  C3 92 9B            	JP		depack_VRAM
     242.  00:833E                      fin_pinta_parte_inferior_pantalla:
     243.  00:833E                      
     244.  00:833E                      
     245.  00:833E                      
     246.  00:833E                      ;;=====================================================
     247.  00:833E                      ;;PINTA_VIDAS
     248.  00:833E                      ;;=====================================================	
     249.  00:833E                      ; función: 	actualiza el mapa de tiles para que en el próximo refresco se pinten y actualiza_vidas
     250.  00:833E                      ; entrada: 	array_aux_vidas
     251.  00:833E                      ; salida: 	actualiza_vidas_sn
     252.  00:833E                      ; toca:		todo
     253.  00:833E                      pinta_vidas:
     254.  00:833E  CD 21 81            	CALL	actualiza_marcador_vidas
     255.  00:8341                      	
     256.  00:8341  21 26 A9            	LD		HL, array_aux_vidas
     257.  00:8344  11 48 1A            	LD		DE, TILMAP + POSVIDAS 	;inicio posición en el mapa de tiles de las vidas
     258.  00:8347  01 08 00            	LD		BC, NMAXVIDREL			;hay 8 posiciones para vidas/reliquias o espacios en negro si no tiene 8 vidas/reliquias
     259.  00:834A  C3 5C 00            	JP		LDIRVM
     260.  00:834D                      fin_pinta_vidas:
     261.  00:834D                      	
     262.  00:834D                      	
     263.  00:834D                      
     264.  00:834D                      ;;=====================================================
     265.  00:834D                      ;;PINTA_RELIQUIAS
     266.  00:834D                      ;;=====================================================	
     267.  00:834D                      ; función: 	actualiza el mapa de tiles para que en el próximo refresco se pinten y actualiza_reliquias
     268.  00:834D                      ; entrada: 	array_aux_reliquias
     269.  00:834D                      ; salida: 	-
     270.  00:834D                      ; toca:		todo
     271.  00:834D                      pinta_reliquias:
     272.  00:834D  CD 3A 81            	CALL	actualiza_buffer_reliquias
     273.  00:8350                      	
     274.  00:8350  21 2E A9            	LD		HL, array_aux_reliquias
     275.  00:8353  11 C8 1A            	LD		DE, TILMAP + POSRELIQ 	;inicio posición en el mapa de tiles de las vidas
     276.  00:8356  01 08 00            	LD		BC, NMAXVIDREL			;hay 8 posiciones para vidas/reliquias o espacios en negro si no tiene 8 vidas/reliquias
     277.  00:8359  C3 5C 00            	JP		LDIRVM
     278.  00:835C                      fin_pinta_reliquias:
     279.  00:835C                      	
     280.  00:835C                      
     281.  00:835C                      
     282.  00:835C                      	
     283.  00:835C                      ;;=====================================================
     284.  00:835C                      ;;PINTA_NIVEL
     285.  00:835C                      ;;=====================================================	
     286.  00:835C                      ; función: 	actualiza el nivel en la parte de puntuación
     287.  00:835C                      ; entrada: 	prota_nivel
     288.  00:835C                      ; salida: 	-
     289.  00:835C                      ; toca:		HL,DE,BC
     290.  00:835C                      pinta_nivel:	
     291.  00:835C                      	;forma más avanzada sin llamada a la bios
     292.  00:835C  01 B4 1A            	LD		BC,TILMAP + POSNIVEL ;posición en el mapa de tiles del tile de nivel
     293.  00:835F  3A 20 A9            	LD		 A, (prota_nivel)	 ;seleccionando la pos del banco de tiles a poner en el mapa
     294.  00:8362  C6 30               	ADD		'0'	
     295.  00:8364  57                  	LD		 D, A
     296.  00:8365                      	
     297.  00:8365  C3 68 83            	JP		pinta_tile_suelto
     298.  00:8368                      fin_pinta_nivel:
     299.  00:8368                      
     300.  00:8368                      
     301.  00:8368                      
     302.  00:8368                      ;;=====================================================
     303.  00:8368                      ;;PINTA_TILE_SUELTO
     304.  00:8368                      ;;=====================================================	
     305.  00:8368                      ; función: 	pinta al tile que digamos en D, en la posición BC
     306.  00:8368                      ; entrada: 	BC (posición a pintar en el mapa),D (qué se va a pintar el esa posición)
     307.  00:8368                      ; salida: 	-
     308.  00:8368                      ; toca:		-
     309.  00:8368                      pinta_tile_suelto:	
     310.  00:8368  DB 99               	IN		 A,(REGEST)		;leer registro de estado (recomendado)
     311.  00:836A  79                  	LD		 A,C			;primero byte bajo	
     312.  00:836B  D3 99               	OUT		(REGEST),A
     313.  00:836D  78                  	LD		 A,B			;después byte alto  ********************** preguntar a Fernando cómo que byte bajo es B
     314.  00:836E  F6 40               	OR		1000000b		;+64
     315.  00:8370  D3 99               	OUT		(REGEST),A
     316.  00:8372                      	
     317.  00:8372  7A                  	LD		A,D
     318.  00:8373  D3 98               	OUT		(REGESCVDP),A	;escribe A en VRAM en la posición indicada por los dos OUT anteriores
     319.  00:8375                      fin_pinta_tile_suelto:
     320.  00:8375  C9                  	RET
     321.  00:8376                      
     322.  00:8376                      
     323.  00:8376                      
     324.  00:8376                      
     325.  00:8376                      
     326.  00:8376                      ;;=====================================================
     327.  00:8376                      ;;MIRA_PINTA ENERGIA
     328.  00:8376                      ;;=====================================================	
     329.  00:8376                      ; función: 	actualiza el nivel de energia en la parte de puntuación
     330.  00:8376                      ; nota:		el cuadrado más bajo de ejergía siempre estará pintado... se obviará
     331.  00:8376                      ; entrada: 	prota.energia, array_aux_energia
     332.  00:8376                      ; salida: 	-
     333.  00:8376                      ; toca:		ninguno porque usa EXX
     334.  00:8376                      
     335.  00:8376                      ; nota importante... lo mismo interesa hacer esto con un array para comparar y un bucle
     336.  00:8376                      
     337.  00:8376                      mira_pinta_energia:
     338.  00:8376  D9                  	EXX							;por si acaso guardo el contenido de HL (si veo que no es necesario guardarlo lo quito) uso esto en vez de push por el nº ciclos
     339.  00:8377                      	
     340.  00:8377  3A 25 A9            	LD		 A,(prota_energia) 	;para las comparaciones A variable (actual) y B fijo (limites)
     341.  00:837A                      
     342.  00:837A  0E 00               	LD		 C,TILENEGRO		;para agilizar asignaciones en vez de un valor cte uso otro registro
     343.  00:837C                      pinta_ener:
     344.  00:837C                      pinta_ener_tile_8:
     345.  00:837C  21 3D A9            	LD		HL,ultimo_pos_array_aux_energia	;coloco puntero en array e iré decrementando
     346.  00:837F  06 D9               	LD		 B,TILEENERG8
     347.  00:8381  B8                  	CP		 B
     348.  00:8382  38 04               	JR		C,pinta_ener_tile_8_negro
     349.  00:8384  36 0E               	LD		(HL),TILEMAPVERD
     350.  00:8386  18 01               	JR		pinta_ener_tile_7
     351.  00:8388                      pinta_ener_tile_8_negro:
     352.  00:8388  71                  	LD		(HL),C
     353.  00:8389                      
     354.  00:8389                      pinta_ener_tile_7:
     355.  00:8389  2B                  	DEC		HL
     356.  00:838A  06 BA               	LD		 B,TILEENERG7
     357.  00:838C  B8                  	CP		 B
     358.  00:838D  38 04               	JR		C,pinta_ener_tile_7_negro
     359.  00:838F  36 0E               	LD		(HL),TILEMAPVERD
     360.  00:8391  18 01               	JR		pinta_ener_tile_6
     361.  00:8393                      pinta_ener_tile_7_negro:
     362.  00:8393  71                  	LD		(HL),C
     363.  00:8394                      
     364.  00:8394                      pinta_ener_tile_6:
     365.  00:8394  2B                  	DEC		HL
     366.  00:8395  06 9B               	LD		 B,TILEENERG6
     367.  00:8397  B8                  	CP		 B
     368.  00:8398  38 04               	JR		C,pinta_ener_tile_6_negro
     369.  00:839A  36 0E               	LD		(HL),14
     370.  00:839C  18 01               	JR		pinta_ener_tile_5
     371.  00:839E                      pinta_ener_tile_6_negro:
     372.  00:839E  71                  	LD		(HL),C
     373.  00:839F                      
     374.  00:839F                      pinta_ener_tile_5:
     375.  00:839F  2B                  	DEC		HL
     376.  00:83A0  06 7C               	LD		 B,TILEENERG5
     377.  00:83A2  B8                  	CP		 B
     378.  00:83A3  38 04               	JR		C,pinta_ener_tile_5_negro
     379.  00:83A5  36 0E               	LD		(HL),TILEMAPVERD
     380.  00:83A7  18 01               	JR		pinta_ener_tile_4
     381.  00:83A9                      pinta_ener_tile_5_negro:
     382.  00:83A9  71                  	LD		(HL),C
     383.  00:83AA                      
     384.  00:83AA                      pinta_ener_tile_4:
     385.  00:83AA  2B                  	DEC		HL
     386.  00:83AB  06 5D               	LD		 B,TILEENERG4
     387.  00:83AD  B8                  	CP		 B
     388.  00:83AE  38 04               	JR		C,pinta_ener_tile_4_negro
     389.  00:83B0  36 0F               	LD		(HL),TILEMAPAMAR
     390.  00:83B2  18 01               	JR		pinta_ener_tile_3
     391.  00:83B4                      pinta_ener_tile_4_negro:
     392.  00:83B4  71                  	LD		(HL),C
     393.  00:83B5                      	
     394.  00:83B5                      pinta_ener_tile_3:
     395.  00:83B5  2B                  	DEC		HL
     396.  00:83B6  06 3E               	LD		 B,TILEENERG3
     397.  00:83B8  B8                  	CP		 B
     398.  00:83B9  38 04               	JR		C,pinta_ener_tile_3_negro
     399.  00:83BB  36 0F               	LD		(HL),TILEMAPAMAR
     400.  00:83BD  18 01               	JR		pinta_ener_tile_2
     401.  00:83BF                      pinta_ener_tile_3_negro:
     402.  00:83BF  71                  	LD		(HL),C
     403.  00:83C0                      
     404.  00:83C0                      pinta_ener_tile_2:
     405.  00:83C0  2B                  	DEC		HL
     406.  00:83C1  06 1F               	LD		 B,TILEENERG2
     407.  00:83C3  B8                  	CP		 B
     408.  00:83C4  38 04               	JR		C,pinta_ener_tile_2_negro
     409.  00:83C6  36 10               	LD		(HL),TILEMAPROJO
     410.  00:83C8  18 01               	JR		fin_mira_pinta_energia		;siempre estará pintado el cuadro mínimo
     411.  00:83CA                      pinta_ener_tile_2_negro:
     412.  00:83CA  71                  	LD		(HL),C
     413.  00:83CB                      
     414.  00:83CB                      fin_mira_pinta_energia:
     415.  00:83CB  D9                  	EXX
     416.  00:83CC  C9                  	RET
     417.  00:83CD                      
     418.  00:83CD                      
     419.  00:83CD                      ;;=====================================================
     420.  00:83CD                      ;;PINTA_ENERGIA
     421.  00:83CD                      ;;=====================================================	
     422.  00:83CD                      ; función: 	actualiza el mapa de tiles para que en el próximo refresco se pinte la barra de energia actual
     423.  00:83CD                      ; entrada: 	array_aux_energia
     424.  00:83CD                      ; toca:		todo
     425.  00:83CD                      pinta_energia:
     426.  00:83CD  CD 76 83            	CALL	mira_pinta_energia
     427.  00:83D0                      	
     428.  00:83D0  21 36 A9            	LD		HL, array_aux_energia
     429.  00:83D3  11 88 1A            	LD		DE, TILMAP + POSENERG 	;inicio posición en el mapa de tiles de las vidas
     430.  00:83D6  01 08 00            	LD		BC, NMAXVIDREL			;hay 8 posiciones para vidas/reliquias o espacios en negro si no tiene 8 vidas/reliquias
     431.  00:83D9  C3 5C 00            	JP		LDIRVM
     432.  00:83DC                      fin_pinta_energia:
     433.  00:83DC                      
     434.  00:83DC                      
     435.  00:83DC                      
     436.  00:83DC                      ;;=====================================================
     437.  00:83DC                      ;;BORRA_MAPA
     438.  00:83DC                      ;;=====================================================	
     439.  00:83DC                      ; función: 	pone todas las habitaciones del mapa a negro (los tiles del mapa los rellena con un array a 0 - caracter en negro)
     440.  00:83DC                      ; entrada: 	array_aux_mapa_limpiar
     441.  00:83DC                      ; salida: 	-
     442.  00:83DC                      ; toca:		AF
     443.  00:83DC                      borra_mapa:
     444.  00:83DC  D9                  	EXX
     445.  00:83DD                      	
     446.  00:83DD  21 3E A9            	LD		HL,array_aux_mapa_limpiar
     447.  00:83E0  11 F8 1A            	LD		DE,TILMAP + POSMAPLIN1 	;inicio posición en el mapa de tiles de la primera fila del mapa
     448.  00:83E3  01 07 00            	LD		BC,NHABNIVEL			;cada nivel son 7 filas con 7 habitaciones "posibles"
     449.  00:83E6  CD 5C 00            	CALL	LDIRVM
     450.  00:83E9                      	
     451.  00:83E9  21 3E A9            	LD		HL,array_aux_mapa_limpiar
     452.  00:83EC  11 D8 1A            	LD		DE,TILMAP + POSMAPLIN2
     453.  00:83EF  01 07 00            	LD		BC,NHABNIVEL
     454.  00:83F2  CD 5C 00            	CALL	LDIRVM
     455.  00:83F5                      
     456.  00:83F5  21 3E A9            	LD		HL,array_aux_mapa_limpiar
     457.  00:83F8  11 B8 1A            	LD		DE,TILMAP + POSMAPLIN3
     458.  00:83FB  01 07 00            	LD		BC,NHABNIVEL
     459.  00:83FE  CD 5C 00            	CALL	LDIRVM
     460.  00:8401                      
     461.  00:8401  21 3E A9            	LD		HL,array_aux_mapa_limpiar	
     462.  00:8404  11 98 1A            	LD		DE,TILMAP + POSMAPLIN4
     463.  00:8407  01 07 00            	LD		BC,NHABNIVEL
     464.  00:840A  CD 5C 00            	CALL	LDIRVM
     465.  00:840D                      
     466.  00:840D  21 3E A9            	LD		HL,array_aux_mapa_limpiar	
     467.  00:8410  11 78 1A            	LD		DE,TILMAP + POSMAPLIN5
     468.  00:8413  01 07 00            	LD		BC,NHABNIVEL
     469.  00:8416  CD 5C 00            	CALL	LDIRVM
     470.  00:8419                      
     471.  00:8419  21 3E A9            	LD		HL,array_aux_mapa_limpiar	
     472.  00:841C  11 58 1A            	LD		DE,TILMAP + POSMAPLIN6
     473.  00:841F  01 07 00            	LD		BC,NHABNIVEL
     474.  00:8422  CD 5C 00            	CALL	LDIRVM
     475.  00:8425                      
     476.  00:8425  21 3E A9            	LD		HL,array_aux_mapa_limpiar	
     477.  00:8428  11 38 1A            	LD		DE,TILMAP + POSMAPLIN7
     478.  00:842B  01 07 00            	LD		BC,NHABNIVEL
     479.  00:842E  CD 5C 00            	CALL	LDIRVM
     480.  00:8431                      	
     481.  00:8431  D9                  	EXX
     482.  00:8432                      fin_borra_mapa:
     483.  00:8432  C9                  	RET
     484.  00:8433                      
     485.  00:8433                      
     486.  00:8433                      
     487.  00:8433                      
     488.  00:8433                      
     489.  00:8433                      
     490.  00:8433                      
     491.  00:8433                      ;;=====================================================
     492.  00:8433                      ;;POSICIONA_EN_MAPA
     493.  00:8433                      ;;=====================================================	
     494.  00:8433                      ; función: 	en el mapa de marcadores de la derecha/abajo marca un cuadro en gris o con un muñeco
     495.  00:8433                      ;			según el valor de prota.posición pinta entrá un muñeco y por donde vaya pasando el prota
     496.  00:8433                      ;			quedará en gris
     497.  00:8433                      ; entrada: 	elemento_pintar_mapa, prota_pos_mapy, prota_pos_mapx
     498.  00:8433                      ; salida: 	-
     499.  00:8433                      ; toca:		todos
     500.  00:8433                      posiciona_en_mapa:
     501.  00:8433                      	;#0238 es la posición en mapa de tiles de la esquina superior izquierda del mapa (569 en decimal)
     502.  00:8433  21 38 1A            	LD		HL, TILMAP + POSMAPA;pos inicial
     503.  00:8436                      	
     504.  00:8436                      	;ahora se le calcula la fila a pintar ya que va de abajo a arriba y no como en el mapa + columna
     505.  00:8436                      .sumar_fila:
     506.  00:8436  3A 24 A9            	LD		 A, (prota_pos_mapy)
     507.  00:8439  FE 01               	CP		 1
     508.  00:843B  28 2A               	JR		 Z, .fila_1
     509.  00:843D  3A 24 A9            	LD		 A, (prota_pos_mapy)
     510.  00:8440  FE 02               	CP		 2
     511.  00:8442  28 2A               	JR		 Z, .fila_2
     512.  00:8444  3A 24 A9            	LD		 A, (prota_pos_mapy)
     513.  00:8447  FE 03               	CP		 3
     514.  00:8449  28 2A               	JR		 Z, .fila_3
     515.  00:844B  3A 24 A9            	LD		 A, (prota_pos_mapy)
     516.  00:844E  FE 04               	CP		 4
     517.  00:8450  28 2A               	JR		 Z, .fila_4
     518.  00:8452  3A 24 A9            	LD		 A, (prota_pos_mapy)
     519.  00:8455  FE 05               	CP		 5
     520.  00:8457  28 2A               	JR		 Z, .fila_5
     521.  00:8459  3A 24 A9            	LD		 A, (prota_pos_mapy)
     522.  00:845C  FE 06               	CP		 6
     523.  00:845E  28 2A               	JR		 Z, .sumar_columna
     524.  00:8460                      	;no consulto la 0 porque si no es ninguna de las anteriores es 0 y por tanto sería un jr fila_0
     525.  00:8460                      	
     526.  00:8460                      .fila_0:
     527.  00:8460  11 C0 00            	LD		DE, 192
     528.  00:8463  19                  	ADD		HL, DE			;nota: se que repito el ADD pero la otra opción es inicializar DE y ya tarda mucho la funicón (es por velicidad)
     529.  00:8464  C3 8A 84            	JP		.sumar_columna
     530.  00:8467                      .fila_1:
     531.  00:8467  11 A0 00            	LD		DE, 160
     532.  00:846A  19                  	ADD		HL, DE
     533.  00:846B  C3 8A 84            	JP		.sumar_columna
     534.  00:846E                      .fila_2:
     535.  00:846E  11 80 00            	LD		DE, 128
     536.  00:8471  19                  	ADD		HL, DE
     537.  00:8472  C3 8A 84            	JP		.sumar_columna
     538.  00:8475                      .fila_3:
     539.  00:8475  11 60 00            	LD		DE, 96
     540.  00:8478  19                  	ADD		HL, DE
     541.  00:8479  C3 8A 84            	JP		.sumar_columna
     542.  00:847C                      .fila_4:
     543.  00:847C  11 40 00            	LD		DE, 64
     544.  00:847F  19                  	ADD		HL, DE
     545.  00:8480  C3 8A 84            	JP		.sumar_columna
     546.  00:8483                      .fila_5:
     547.  00:8483  11 20 00            	LD		DE, 32
     548.  00:8486  19                  	ADD		HL, DE
     549.  00:8487  C3 8A 84            	JP		.sumar_columna
     550.  00:848A                      .fila_6:
     551.  00:848A                      	;pongo fila_6 por poner ya que si es la fila 6 equiv. a primera fila del mapa y por tanto no suma fila
     552.  00:848A                      	
     553.  00:848A                      	
     554.  00:848A                      .sumar_columna:
     555.  00:848A  3A 23 A9            	LD 		 A, (prota_pos_mapx) ;POS X
     556.  00:848D  16 00               	LD		 D, 0
     557.  00:848F  5F                  	LD		 E, A
     558.  00:8490  19                  	ADD		HL, DE
     559.  00:8491                      	
     560.  00:8491                      	;resultado en BC para usar en la función pinta_tile_suelto
     561.  00:8491  44                  	LD		 B, H
     562.  00:8492  4D                  	LD		 C, L
     563.  00:8493                      	
     564.  00:8493                      	;terminado de fijar la coordenada recuperamos a para ver el tipo
     565.  00:8493  3A 45 A9            	LD		 A, (elemento_pintar_mapa)
     566.  00:8496  FE 09               	CP		 TILEGRISM
     567.  00:8498  CA A0 84            	JP		 Z, pinta_pos_mapa_vacio
     568.  00:849B  16 13               	LD		 D, TILEPROTAM
     569.  00:849D  C3 A2 84            	JP		fin_pinta_pos_mapa
     570.  00:84A0                      pinta_pos_mapa_vacio:
     571.  00:84A0  16 09               	LD		 D, TILEGRISM	
     572.  00:84A2                      
     573.  00:84A2                      fin_pinta_pos_mapa:
     574.  00:84A2  C3 68 83            	JP		pinta_tile_suelto
     575.  00:84A5                      fin_posiciona_en_mapa:
     576.  00:84A5                      
     577.  00:84A5                      
     578.  00:84A5                      
     579.  00:84A5                      
     580.  00:84A5                      ;;=====================================================
     581.  00:84A5                      ;;EFECTO_IMAGEN_TIRA_RELIQUIA
     582.  00:84A5                      ;;=====================================================	
     583.  00:84A5                      ; función: 	hace que el fondo de la pantalla parpadee N veces
     584.  00:84A5                      ; entrada: 	actualiza_reliquias_sn
     585.  00:84A5                      ; salida: 	-
     586.  00:84A5                      ; toca: 	todo
     587.  00:84A5                      efecto_imagen_tira_reliquia:
     588.  00:84A5  3E 14               	LD		 A, 20;RETARDOREL
     589.  00:84A7  47                  	LD		 B, A
     590.  00:84A8                      
     591.  00:84A8                      .parpadea_fondo:
     592.  00:84A8  C5                  	PUSH	BC
     593.  00:84A9  21 0A A9            	LD		HL, color_bomba1
     594.  00:84AC  CD CC 81            	CALL	color_pantalla
     595.  00:84AF                      	
     596.  00:84AF                      	;~ PUSH	BC
     597.  00:84AF                      	;~ LD		 A, 255
     598.  00:84AF                      	;~ LD		 B, A
     599.  00:84AF                      ;~ .bucle_de_espera:
     600.  00:84AF                      	;~ NOP
     601.  00:84AF                      	;~ DJNZ	 .bucle_de_espera
     602.  00:84AF                      	;~ POP		BC
     603.  00:84AF  76                  	HALT
     604.  00:84B0                      
     605.  00:84B0                      	
     606.  00:84B0  21 0D A9            	LD		HL, color_bomba2
     607.  00:84B3  CD CC 81            	CALL	color_pantalla
     608.  00:84B6  C1                  	POP		BC
     609.  00:84B7  10 EF               	DJNZ	.parpadea_fondo
     610.  00:84B9                      	
     611.  00:84B9  21 07 A9            	LD		HL, color_base
     612.  00:84BC  C3 CC 81            	JP		color_pantalla
     613.  00:84BF                      fin_efecto_imagen_tira_reliquia:
     614.  00:84BF                      
     615.  00:84BF                      
     616.  00:84BF                      
     617.  00:84BF                      
     618.  00:84BF                      ;=====================================================
     619.  00:84BF                      ;;PINTA_ARRAY
     620.  00:84BF                      ;;=====================================================	
     621.  00:84BF                      ;;funcion:  (pinta el mismo tile) se le pasa un array con posiciones de tiles y coordenadas x e y y los pinta en screen 2
     622.  00:84BF                      ;;entrada:	wordaux1 (pos inicio sc2 donde pintar) y wordaux2 (puntero al array a pintar), BC (posición en tilemap) , D filas y E columnas
     623.  00:84BF                      ;;salida:	-
     624.  00:84BF                      ;;importante: necesita de una variable wordaux1 tipo WD (wordaux1: 	DW	0)
     625.  00:84BF                      ;; ejemplo llamada:
     626.  00:84BF                      	;~ LD		HL,array_tiles					;guardo puntero al array a pintar (como psar por referencia)
     627.  00:84BF                      	;~ LD		(wordaux2),HL					;en la variable wordaux2
     628.  00:84BF                      	;~ LD		HL,SC2MAP + 256 + 32			;calcula posición en tilemap
     629.  00:84BF                      	;~ LD		(wordaux1),HL					;guarda valor pos tilemap en wordaux1
     630.  00:84BF                      	;~ LD		B,H								;coloca posición tilemap BC
     631.  00:84BF                      	;~ LD		C,L
     632.  00:84BF                      	;~ LD		D,2								;nº de filas ahora byteaux1
     633.  00:84BF                      	;~ LD		E,3								;nº de columnas ahora byteaux2
     634.  00:84BF                      	;~ CALL	pinta_array
     635.  00:84BF                      
     636.  00:84BF                      pinta_array:
     637.  00:84BF  08                  	EX		AF, AF'
     638.  00:84C0                      	
     639.  00:84C0  3A 03 85            	LD		 A, (byteaux1)
     640.  00:84C3  57                  	LD		 D, A
     641.  00:84C4  3A 04 85            	LD		 A, (byteaux2)
     642.  00:84C7  5F                  	LD		 E, A
     643.  00:84C8                      	
     644.  00:84C8  2A FF 84            	LD		HL, (wordaux1)
     645.  00:84CB  44                  	LD		 B, H							;coloca posición tilemap BC
     646.  00:84CC  4D                  	LD		 C, L
     647.  00:84CD                      	
     648.  00:84CD                      	;contamos con que la posición "global" en el tilemap está ya en BC
     649.  00:84CD                      	;y el puntero al array a pintar en wordaux2 y la posición en tilemap sc2 en wordaux1
     650.  00:84CD                      	;inicializa
     651.  00:84CD  DB 99               	IN		 A,(REGEST)		;leer registro de estado (recomendado)
     652.  00:84CF                      	
     653.  00:84CF                      	;coloca puntero para pintar tile según BC
     654.  00:84CF  79                  	LD		 A,C			;primero byte bajo	
     655.  00:84D0  D3 99               	OUT		(REGEST),A
     656.  00:84D2  78                  	LD		 A,B			;después byte alto  ********************** preguntar a Fernando cómo que byte bajo es B
     657.  00:84D3  F6 40               	OR		1000000b		;+64
     658.  00:84D5  D3 99               	OUT		(REGEST),A
     659.  00:84D7                      
     660.  00:84D7                      	
     661.  00:84D7  2A 01 85            	LD		HL,(wordaux2)	;HL es lo que se pintará y le he pasado el puntero del array tilemap a pintar
     662.  00:84DA                      .pa_pinta_fila:
     663.  00:84DA  43                  	LD		 B,E
     664.  00:84DB                      .pa_pinta_columnas: 		;finta la fila (pintando las columnas)
     665.  00:84DB  7E                  	LD		 A,(HL)
     666.  00:84DC  D3 98               	OUT		(REGESCVDP),A	;escribe A en VRAM en la posición indicada por los dos OUT anteriores
     667.  00:84DE  23                  	INC		HL
     668.  00:84DF  10 FA               	DJNZ	.pa_pinta_columnas
     669.  00:84E1                      	
     670.  00:84E1                      	;no es una solución elegante lo de repetir código pero queda claro
     671.  00:84E1                      	;por si hay otra fila
     672.  00:84E1  E5                  	PUSH	HL
     673.  00:84E2  2A FF 84            	LD		HL,(wordaux1)
     674.  00:84E5  01 20 00            	LD		BC,32
     675.  00:84E8  09                  	ADD		HL,BC
     676.  00:84E9  22 FF 84            	LD		(wordaux1),HL
     677.  00:84EC  44                  	LD		B,H
     678.  00:84ED  4D                  	LD		C,L
     679.  00:84EE  E1                  	POP		HL
     680.  00:84EF                      	
     681.  00:84EF  79                  	LD		 A,C			;primero byte bajo	
     682.  00:84F0  D3 99               	OUT		(REGEST),A
     683.  00:84F2  78                  	LD		 A,B			;después byte alto 
     684.  00:84F3  F6 40               	OR		1000000b		;+64
     685.  00:84F5  D3 99               	OUT		(REGEST),A
     686.  00:84F7                      	
     687.  00:84F7                      	;si hay otra fila repite
     688.  00:84F7  15                  	DEC		 D
     689.  00:84F8  7A                  	LD		 A,D		;¿hay otra fila?
     690.  00:84F9  B7                  	OR		 A
     691.  00:84FA  C4 DA 84            	CALL	NZ,.pa_pinta_fila
     692.  00:84FD                      	
     693.  00:84FD  08                  	EX		AF, AF'
     694.  00:84FE                      fin_pinta_array:
     695.  00:84FE  C9                  	RET
     696.  00:84FF                      ;;variables asocidas a la función pinta_array
     697.  00:84FF                      ;; por de pronto la dejo aquí
     698.  00:84FF  00 00               wordaux1:		DW	0	;almacena la posición en el tilemap 0 al 675
     699.  00:8501  00 00               wordaux2:		DW	0	;almacena puntero a array de tiles (posiciones en realidad) a pintar (posiciones repetidas en los 2 primeros bancos)
     700.  00:8503  00                  byteaux1:		DB	0	;nº filas Registro D
     701.  00:8504  00                  byteaux2:		DB	0	;nº columnas Registro E
     702.  00:8505                      
     703.  00:8505                      
     704.  00:8505                      
     705.  00:8505                      
     706.  00:8505                      ;;=====================================================
     707.  00:8505                      ;;INICIALIZA_ANTORCHAS
     708.  00:8505                      ;;=====================================================	
     709.  00:8505                      ; función: 	inicializa las variables de estructuras de las antorchas
     710.  00:8505                      ; entrada: 	antorchas, array_antorcha
     711.  00:8505                      ; salida: 	
     712.  00:8505                      ; toca:		HL, IX
     713.  00:8505                      inicializa_antorchas:
     714.  00:8505  DD 21 57 AA         	LD		IX, antorchas
     715.  00:8509  DD 36 00 00         	LD		(IX), INACTIVA
     716.  00:850D  21 5E AA            	LD		HL, array_antorcha
     717.  00:8510  DD 74 01            	LD		(IX + 1), H
     718.  00:8513  DD 75 02            	LD		(IX + 2), L
     719.  00:8516  DD 36 03 88         	LD		(IX + 3), POSANTOR1
     720.  00:851A  DD 36 04 97         	LD		(IX + 4), POSANTOR2
     721.  00:851E  DD 36 05 00         	LD		(IX + 5), 0
     722.  00:8522  DD 36 06 FF         	LD		(IX + 6), RESETLLAMA
     723.  00:8526                      fin_inicializa_antorchas:
     724.  00:8526  C9                  	RET
     725.  00:8527                      
     726.  00:8527                      
     727.  00:8527                      ;;=====================================================
     728.  00:8527                      ;;INICIALIZA_esqueletos
     729.  00:8527                      ;;=====================================================	
     730.  00:8527                      ; función: 	inicializa las variables de estructuras de los esqueletos
     731.  00:8527                      ; entrada: 	esqueletos, array_esqueletos
     732.  00:8527                      ; salida: 	
     733.  00:8527                      ; toca:		HL, IX
     734.  00:8527                      inicializa_esqueletos:
     735.  00:8527  DD 21 61 AA         	LD		IX, esqueletos
     736.  00:852B  DD 36 00 00         	LD		(IX), INACTIVA
     737.  00:852F  21 68 AA            	LD		HL, array_esqueleto
     738.  00:8532  DD 74 01            	LD		(IX + 1), H
     739.  00:8535  DD 75 02            	LD		(IX + 2), L
     740.  00:8538  DD 36 03 88         	LD		(IX + 3), POSESQUEL1
     741.  00:853C  DD 36 04 95         	LD		(IX + 4), POSESQUEL2
     742.  00:8540  DD 36 05 00         	LD		(IX + 5), 0
     743.  00:8544  DD 36 06 19         	LD		(IX + 6), RESETESQUEL
     744.  00:8548                      fin_inicializa_esqueletos:
     745.  00:8548  C9                  	RET
     746.  00:8549                      	
     747.  00:8549                      
     748.  00:8549                      ;;=====================================================
     749.  00:8549                      ;;PINTA_ANTORCHAS
     750.  00:8549                      ;;=====================================================	
     751.  00:8549                      ; función: 	pinta las antorchas con valores base
     752.  00:8549                      ; entrada: 	antorchas, array_antorcha
     753.  00:8549                      ; salida: 	
     754.  00:8549                      ; toca:		HL
     755.  00:8549                      pinta_extra_fondo:
     756.  00:8549  DD 21 57 AA         	LD		IX, antorchas
     757.  00:854D                      .examina_sihay_antorchas
     758.  00:854D                      	;hay que pintarlas?
     759.  00:854D  3A F3 A5            	LD		 A, (habitacion_extras)
     760.  00:8550  CB 47               	BIT		 0, A
     761.  00:8552  C2 5C 85            	JP		NZ, .hayantorchas			;si el bit 0 de extras es 0 no se pintan antorchas
     762.  00:8555  DD 36 00 00         	LD		(IX), INACTIVA
     763.  00:8559  C3 85 85            	JP		.examina_sihay_esqueletos
     764.  00:855C                      	
     765.  00:855C                      .hayantorchas:
     766.  00:855C  DD 36 00 01         	LD		(IX), ACTIVA
     767.  00:8560                      	;pinta antorcha izquierdda
     768.  00:8560  DD 66 01            	LD		 H, (IX + 1)
     769.  00:8563  DD 6E 02            	LD		 L, (IX + 2)
     770.  00:8566  22 01 85            	LD		(wordaux2), HL				;guarda pos array en wordaux2
     771.  00:8569                      	
     772.  00:8569  21 88 18            	LD		HL, TILMAP + POSANTOR1		;calcula posición en tilemap
     773.  00:856C  22 FF 84            	LD		(wordaux1), HL				;guarda valor pos tilemap en wordaux1
     774.  00:856F                      
     775.  00:856F  3E 03               	LD		 A, 3						;nº de filas	
     776.  00:8571  32 03 85            	LD		(byteaux1), A
     777.  00:8574  3E 01               	LD		 A, 1						;nº de columnas
     778.  00:8576  32 04 85            	LD		(byteaux2), A				
     779.  00:8579                      	
     780.  00:8579  CD BF 84            	CALL	pinta_array
     781.  00:857C                      	
     782.  00:857C                      	;pinta antorcha derecha
     783.  00:857C  21 97 18            	LD		HL, TILMAP + POSANTOR2		;calcula posición en tilemap
     784.  00:857F  22 FF 84            	LD		(wordaux1), HL				;guarda valor pos tilemap en wordaux1
     785.  00:8582                      	
     786.  00:8582  C3 BF 84            	JP		pinta_array 				;no ecesita CALL ya que la subrutina termina aquí
     787.  00:8585                      	
     788.  00:8585                      .examina_sihay_esqueletos
     789.  00:8585  DD 21 61 AA         	LD		IX, esqueletos
     790.  00:8589                      	;hay que pintarlos?
     791.  00:8589  3A F2 A5            	LD		 A, (habitacion_actual)
     792.  00:858C  CB 6F               	BIT		 5, A
     793.  00:858E  C2 96 85            	JP		NZ, .hayesqueletos			;si el bit 0 de extras es 0 no se pintan antorchas
     794.  00:8591  DD 36 00 00         	LD		(IX), INACTIVA
     795.  00:8595  C9                  	RET									;no hay que pintarlo. no hay que continuar
     796.  00:8596                      
     797.  00:8596                      .hayesqueletos
     798.  00:8596  DD 36 00 01         	LD		(IX), ACTIVA
     799.  00:859A                      	;pinta antorcha izquierdda
     800.  00:859A  DD 66 01            	LD		 H, (IX + 1)
     801.  00:859D  DD 6E 02            	LD		 L, (IX + 2)
     802.  00:85A0  22 01 85            	LD		(wordaux2), HL				;guarda pos array en wordaux2
     803.  00:85A3                      	
     804.  00:85A3  21 88 18            	LD		HL, TILMAP + POSESQUEL1		;calcula posición en tilemap
     805.  00:85A6  22 FF 84            	LD		(wordaux1), HL				;guarda valor pos tilemap en wordaux1
     806.  00:85A9                      
     807.  00:85A9  3E 04               	LD		 A, 4						;nº de filas	
     808.  00:85AB  32 03 85            	LD		(byteaux1), A
     809.  00:85AE  3E 03               	LD		 A, 3						;nº de columnas
     810.  00:85B0  32 04 85            	LD		(byteaux2), A				
     811.  00:85B3                      	
     812.  00:85B3  CD BF 84            	CALL	pinta_array
     813.  00:85B6                      	
     814.  00:85B6                      	;pinta antorcha derecha
     815.  00:85B6  21 95 18            	LD		HL, TILMAP + POSESQUEL2		;calcula posición en tilemap
     816.  00:85B9  22 FF 84            	LD		(wordaux1), HL				;guarda valor pos tilemap en wordaux1
     817.  00:85BC                      	
     818.  00:85BC  C3 BF 84            	JP		pinta_array 				;no ecesita CALL ya que la subrutina termina aquí
     819.  00:85BF                      fin_pinta_extra_fondo:
     820.  00:85BF  C9                  	RET
     821.  00:85C0                      
     822.  00:85C0                      
     823.  00:85C0                      
     824.  00:85C0                      ;;=====================================================
     825.  00:85C0                      ;;ACTUALIZA_ELEMENTOS_FONDO
     826.  00:85C0                      ;;=====================================================	
     827.  00:85C0                      ; función: 	de los elementos que pueda haber en el fondo de la pared (pantalla) actualiza si procede
     828.  00:85C0                      ;			actualmente: antorchas y a futuro esqueletos
     829.  00:85C0                      ; entrada: 	
     830.  00:85C0                      ; salida: 	
     831.  00:85C0                      ; toca:		A
     832.  00:85C0                      actualiza_elementos_fondo:
     833.  00:85C0                      .examina_antorchas:
     834.  00:85C0  DD 21 57 AA         	LD		IX, antorchas
     835.  00:85C4  DD 7E 00            	LD		 A, (IX)
     836.  00:85C7  B7                  	OR		 A
     837.  00:85C8  CA CE 85            	JP 	 	 Z, .examina_esqueletos
     838.  00:85CB                      	
     839.  00:85CB  CD DA 85            	CALL	flip_llamas_antorchas
     840.  00:85CE                      .examina_esqueletos:
     841.  00:85CE  DD 21 61 AA         	LD		IX, esqueletos
     842.  00:85D2  DD 7E 00            	LD		 A, (IX)
     843.  00:85D5  B7                  	OR		 A
     844.  00:85D6  C8                  	RET	 	 Z
     845.  00:85D7                      	
     846.  00:85D7  C3 37 86            	JP		flip_calavera_esqueletos
     847.  00:85DA                      fin_actualiza_elementos_fondo:
     848.  00:85DA                      
     849.  00:85DA                      
     850.  00:85DA                      
     851.  00:85DA                      
     852.  00:85DA                      ;;=====================================================
     853.  00:85DA                      ;;FLIP_LLAMAS_ANTORCHAS
     854.  00:85DA                      ;;=====================================================	
     855.  00:85DA                      ; función: 	modifica las llamas de las antorchas con los tipos que hay
     856.  00:85DA                      ; entrada: 	
     857.  00:85DA                      ; salida: 	
     858.  00:85DA                      ; toca:		
     859.  00:85DA                      flip_llamas_antorchas:
     860.  00:85DA  DD 21 57 AA         	LD		IX, antorchas
     861.  00:85DE                      	;tiene que cambiar de llama?
     862.  00:85DE  DD 7E 06            	LD		 A, (IX + 6)
     863.  00:85E1  3D                  	DEC		 A
     864.  00:85E2  DD 77 06            	LD		 (IX + 6), A
     865.  00:85E5                      	;no
     866.  00:85E5  C0                  	RET		NZ
     867.  00:85E6                      	;si
     868.  00:85E6  C5                  	PUSH	BC
     869.  00:85E7  D5                  	PUSH	DE
     870.  00:85E8                      	
     871.  00:85E8  DD 36 06 FF         	LD		(IX + 6), RESETLLAMA	
     872.  00:85EC                      	
     873.  00:85EC                      	;qué llama toca?
     874.  00:85EC  DD 7E 05            	LD		 A, (IX + 5)
     875.  00:85EF  B7                  	OR		 A
     876.  00:85F0  CA 14 86            	JP		 Z, .llama_par
     877.  00:85F3                      .llama_impar
     878.  00:85F3                      	;cambio a llama par
     879.  00:85F3  AF                   	XOR		 A
     880.  00:85F4  DD 77 05            	LD		(IX + 5), A
     881.  00:85F7                      	;pinto llamas
     882.  00:85F7  01 00 18            	LD		BC, TILMAP
     883.  00:85FA  3E 88               	LD		 A, POSANTOR1
     884.  00:85FC  CD C0 81            	CALL	suma_A_BC
     885.  00:85FF  16 C4               	LD		 D, MAPLLAMA1
     886.  00:8601  CD 68 83            	CALL	pinta_tile_suelto
     887.  00:8604                      	
     888.  00:8604  01 00 18            	LD		BC, TILMAP
     889.  00:8607  3E 97               	LD		 A, POSANTOR2
     890.  00:8609  CD C0 81            	CALL	suma_A_BC
     891.  00:860C  16 C5               	LD		 D, MAPLLAMA2
     892.  00:860E  CD 68 83            	CALL	pinta_tile_suelto	
     893.  00:8611  C3 33 86            	JP		fin_flip_llamas_antorchas
     894.  00:8614                      	
     895.  00:8614                      .llama_par
     896.  00:8614                      	;cambio a llama par
     897.  00:8614  3E 01                	LD		 A, 1
     898.  00:8616  DD 77 05            	LD		(IX + 5), A
     899.  00:8619                      	;pinto llamas
     900.  00:8619  01 00 18            	LD		BC, TILMAP
     901.  00:861C  3E 88               	LD		 A, POSANTOR1
     902.  00:861E  CD C0 81            	CALL	suma_A_BC
     903.  00:8621  16 C5               	LD		 D, MAPLLAMA2
     904.  00:8623  CD 68 83            	CALL	pinta_tile_suelto
     905.  00:8626                      	
     906.  00:8626  01 00 18            	LD		BC, TILMAP
     907.  00:8629  3E 97               	LD		 A, POSANTOR2
     908.  00:862B  CD C0 81            	CALL	suma_A_BC
     909.  00:862E  16 C4               	LD		 D, MAPLLAMA1
     910.  00:8630  CD 68 83            	CALL	pinta_tile_suelto
     911.  00:8633                      
     912.  00:8633                      fin_flip_llamas_antorchas:
     913.  00:8633                      	;restauro los balores de los registros tocados antes
     914.  00:8633  D1                  	POP		DE
     915.  00:8634  C1                  	POP		BC
     916.  00:8635  F1                  	POP		AF
     917.  00:8636                      
     918.  00:8636  C9                  	RET
     919.  00:8637                      
     920.  00:8637                      
     921.  00:8637                      ;;=====================================================
     922.  00:8637                      ;;FLIP_CALAVERA_ESQUELETOS
     923.  00:8637                      ;;=====================================================	
     924.  00:8637                      ; función: 	modifica las calaveras de los esqueletos
     925.  00:8637                      ; entrada: 	
     926.  00:8637                      ; salida: 	
     927.  00:8637                      ; toca:		TODOS.... muy importante DE
     928.  00:8637                      flip_calavera_esqueletos:
     929.  00:8637  DD 21 61 AA         	LD		IX, esqueletos
     930.  00:863B                      	
     931.  00:863B                      	;tiene que cambiar de calavera?
     932.  00:863B  DD 7E 06            	LD		 A, (IX + ESTRUCTURA_ESQUELETO.cont_sig_escena)
     933.  00:863E  3D                  	DEC		 A
     934.  00:863F  DD 77 06            	LD		 (IX + ESTRUCTURA_ESQUELETO.cont_sig_escena), A
     935.  00:8642                      	;no
     936.  00:8642  C0                  	RET		NZ
     937.  00:8643                      	;si
     938.  00:8643  DD 36 06 19         	LD		(IX + ESTRUCTURA_ESQUELETO.cont_sig_escena), RESETESQUEL		;resetea contador de nueve escena
     939.  00:8647                      	
     940.  00:8647  CD 65 86            	CALL	actualiza_escena_calavera
     941.  00:864A                      
     942.  00:864A                      	;pinto calaveras
     943.  00:864A  01 00 18            	LD		BC, TILMAP
     944.  00:864D  3E A9               	LD		 A, POSCALAVE1
     945.  00:864F  CD C0 81            	CALL	suma_A_BC
     946.  00:8652  D5                  	PUSH	DE
     947.  00:8653  56                  	LD		 D, (HL)
     948.  00:8654  CD 68 83            	CALL	pinta_tile_suelto
     949.  00:8657                      	
     950.  00:8657  01 00 18            	LD		BC, TILMAP
     951.  00:865A  3E B6               	LD		 A, POSCALAVE2
     952.  00:865C  CD C0 81            	CALL	suma_A_BC
     953.  00:865F  E1                  	POP		HL
     954.  00:8660  56                  	LD		 D, (HL)
     955.  00:8661  C3 68 83            	JP		pinta_tile_suelto	
     956.  00:8664                      fin_flip_calavera_esqueletos:
     957.  00:8664  00                  var_aux_calavera	DB	0;
     958.  00:8665                      
     959.  00:8665                      
     960.  00:8665                      ;;=====================================================
     961.  00:8665                      ;;ACTUALIZA_ESCENA_CALAVERA
     962.  00:8665                      ;;=====================================================	
     963.  00:8665                      ; función: 	modifica las siguiente calavera a mostrar
     964.  00:8665                      ; entrada: 	
     965.  00:8665                      ; salida: 	DE (iportante porque se usa fuera) y ESTRUCTURA_ESQUELETO.escena
     966.  00:8665                      ; toca:		TODOS.... muy importante DE
     967.  00:8665                      actualiza_escena_calavera:
     968.  00:8665                      	;consulta_escena
     969.  00:8665  DD 7E 05            	LD		 A, (IX + ESTRUCTURA_ESQUELETO.escena)
     970.  00:8668  32 64 86            	LD		(var_aux_calavera), A
     971.  00:866B  B7                  	OR		 A
     972.  00:866C  C2 71 86            	JP		 NZ, .decrementa_escenas
     973.  00:866F  3E 04               	LD		 A, RESETESCENAESQUEL
     974.  00:8671                      .decrementa_escenas
     975.  00:8671  3D                  	DEC		 A
     976.  00:8672                      .fin_consulta_escena
     977.  00:8672  DD 77 05            	LD		 (IX + ESTRUCTURA_ESQUELETO.escena), A
     978.  00:8675                      	
     979.  00:8675  21 74 AA            	LD		HL, lista_escenas_calavera
     980.  00:8678  3A 64 86            	LD		 A, (var_aux_calavera)
     981.  00:867B  CD C6 81            	CALL	suma_A_HL
     982.  00:867E                      	
     983.  00:867E  54                  	LD		 D, H
     984.  00:867F  5D                  	LD		 E, L
     985.  00:8680                      fin_actualiza_escena_calavera:
     986.  00:8680  C9                  	RET
     987.  00:8681                      
     190   00:8681                      	
     191   00:8681                      	include "subr_puertas.asm"
       1.  00:8681                      ;;=====================================================
       2.  00:8681                      ;;SUBRUTINAS RELACIONADAS CON LAS PUERTAS
       3.  00:8681                      ;;=====================================================
       4.  00:8681                      
       5.  00:8681                      
       6.  00:8681                      ;;=====================================================
       7.  00:8681                      ;;VARIABLES
       8.  00:8681                      ;;=====================================================
       9.  00:8681                      
      10.  00:8681                      ;; arrays con mapa de tiles de las puertas
      11.  00:8681                      array_puerta_arriba:
      12.  00:8681  03 01 01 03         	DB	3,1,1,3
      13.  00:8685  01 01 01 01         	DB	1,1,1,1
      14.  00:8689  01 01 01 01         	DB	1,1,1,1
      15.  00:868D  01 01 01 01         	DB	1,1,1,1
      16.  00:8691  01 01 01 01         	DB	1,1,1,1
      17.  00:8695                      
      18.  00:8695                      array_puerta_derecha:
      19.  00:8695  01 03 03            	DB	1,3,3
      20.  00:8698  01 01 03            	DB	1,1,3
      21.  00:869B  01 01 01            	DB	1,1,1
      22.  00:869E  01 01 01            	DB	1,1,1
      23.  00:86A1  01 01 01            	DB	1,1,1
      24.  00:86A4  02 01 01            	DB	2,1,1
      25.  00:86A7  04 02 01            	DB	4,2,1
      26.  00:86AA                      	
      27.  00:86AA                      array_puerta_abajo:			
      28.  00:86AA  01 01 01 01         	DB	1,1,1,1
      29.  00:86AE                      
      30.  00:86AE                      array_puerta_izquierda:
      31.  00:86AE  03 03 01            	DB	3,3,1
      32.  00:86B1  03 01 01            	DB	3,1,1
      33.  00:86B4  01 01 01            	DB	1,1,1
      34.  00:86B7  01 01 01            	DB	1,1,1
      35.  00:86BA  01 01 01            	DB	1,1,1
      36.  00:86BD  01 01 02            	DB	1,1,2
      37.  00:86C0  01 02 04            	DB	1,2,4
      38.  00:86C3                      
      39.  00:86C3                      array_escalera:
      40.  00:86C3                      	DB	5,5,5,5,5,5,5,5
      40.  00:86C3  05 05 05 05 05 05 05 05 
      41.  00:86CB                      	DB	5,0,0,0,1,1,1,5
      41.  00:86CB  05 00 00 00 01 01 01 05 
      42.  00:86D3                      	DB	5,0,0,0,1,1,1,5
      42.  00:86D3  05 00 00 00 01 01 01 05 
      43.  00:86DB                      	DB	5,0,0,6,6,6,6,5
      43.  00:86DB  05 00 00 06 06 06 06 05 
      44.  00:86E3                      	DB	5,0,6,6,6,6,6,5
      44.  00:86E3  05 00 06 06 06 06 06 05 
      45.  00:86EB                      	DB	5,6,6,6,6,6,6,5
      45.  00:86EB  05 06 06 06 06 06 06 05 
      46.  00:86F3                      
      47.  00:86F3                      
      48.  00:86F3                      
      49.  00:86F3                      lista_puertas:
      50.  00:86F3  00 (13)             puerta_arriba:		DS		ESTRUCTURA_PUERTA
      51.  00:8700  00 (13)             puerta_derecha:		DS		ESTRUCTURA_PUERTA
      52.  00:870D  00 (13)             puerta_abajo:		DS		ESTRUCTURA_PUERTA
      53.  00:871A  00 (13)             puerta_izquierda:	DS		ESTRUCTURA_PUERTA
      54.  00:8727                      
      55.  00:8727                      datos_puertas:
      56.  00:8727                      datos_escalera:
      57.  00:8727  00                  					DB		#00;0		; 0 no activa <>0 activo
      58.  00:8728  80                  					DB		#80;128		;punto x de la puerta para cuando se dispare encima
      59.  00:8729  30                  					DB		#30;48		;punto y de la puerta para cuando se dispare encima
      60.  00:872A  20                  					DB		#20;32		;radio x de la puerta para cuando se dispare encima
      61.  00:872B  18                  					DB		#18;24		;radio y de la puerta para cuando se dispare encima
      62.  00:872C  A7 87               					DW		accion_escalera	;función para acción de cada tipo de puerta
      63.  00:872E  C3 86               					DW		array_escalera	;puntero al array con los tiles de las puertas
      64.  00:8730  6C 18               					DW		TILMAP + POSESCALERA
      65.  00:8732  06                  					DB		6			;alto/filas
      66.  00:8733  08                  					DB		8			;ancho/columnas
      67.  00:8734                      
      68.  00:8734                      datos_puerta_arriba:
      69.  00:8734  00                  					DB		#00;0		;0 no activa <>0 activo
      70.  00:8735  80                  					DB		#80;128		;punto x de la puerta para cuando se dispare encima
      71.  00:8736  34                  					DB		#34;52		;punto y de la puerta para cuando se dispare encima
      72.  00:8737  10                  					DB		#10;16		;radio x de la puerta para cuando se dispare encima
      73.  00:8738  14                  					DB		#14;20		;radio y de la puerta para cuando se dispare encima
      74.  00:8739  A8 87               					DW		accion_puerta_arriba	;función para acción de cada tipo de puerta
      75.  00:873B  81 86               					DW		array_puerta_arriba		;puntero al array con los tiles de las puertas
      76.  00:873D  8E 18               					DW		TILMAP + POSPUERARRI
      77.  00:873F  05                  					DB		5			;alto/filas
      78.  00:8740  04                  					DB		4			;ancho/columnas
      79.  00:8741                      
      80.  00:8741                      datos_puerta_derecha:
      81.  00:8741  00                  					DB		#00;0		;0 no activa <>0 activo
      82.  00:8742  EC                  					DB		#EC;236		;punto x de la puerta para cuando se dispare encima
      83.  00:8743  54                  					DB		#54;84		;punto y de la puerta para cuando se dispare encima
      84.  00:8744  0C                  					DB		#0C;12		;radio x de la puerta para cuando se dispare encima
      85.  00:8745  14                  					DB		#14;20		;radio y de la puerta para cuando se dispare encima
      86.  00:8746  A8 87               					DW		accion_puerta_arriba	;función para acción de cada tipo de puerta
      87.  00:8748  95 86               					DW		array_puerta_derecha	;puntero al array con los tiles de las puertas
      88.  00:874A  FC 18               					DW		TILMAP + POSPUERDERE
      89.  00:874C  07                  					DB		7			;alto/filas
      90.  00:874D  03                  					DB		3			;ancho/columnas
      91.  00:874E                      					
      92.  00:874E                      datos_puerta_abajo:
      93.  00:874E  00                  					DB		#00;0		;0 no activa <>0 activo
      94.  00:874F  80                  					DB		#80;128		;punto x de la puerta para cuando se dispare encima
      95.  00:8750  7C                  					DB		#7C;124		;punto y de la puerta para cuando se dispare encima
      96.  00:8751  05                  					DB		#05;5		;radio x de la puerta para cuando se dispare encima
      97.  00:8752  10                  					DB		#10;16		;radio y de la puerta para cuando se dispare encima
      98.  00:8753  A8 87               					DW		accion_puerta_arriba	;función para acción de cada tipo de puerta
      99.  00:8755  AA 86               					DW		array_puerta_abajo		;puntero al array con los tiles de las puertas
     100.  00:8757  EE 19               					DW		TILMAP + POSPUERABAJ
     101.  00:8759  01                  					DB		1			;alto/filas
     102.  00:875A  04                  					DB		4			;ancho/columnas
     103.  00:875B                      
     104.  00:875B                      datos_puerta_izquierda:
     105.  00:875B  00                  					DB		#00;0		;0 no activa <>0 activo
     106.  00:875C  18                  					DB		#18;24		;punto x de la puerta para cuando se dispare encima
     107.  00:875D  54                  					DB		#54;84		;punto y de la puerta para cuando se dispare encima
     108.  00:875E  0C                  					DB		#0C;12		;radio x de la puerta para cuando se dispare encima
     109.  00:875F  14                  					DB		#14;20		;radio y de la puerta para cuando se dispare encima
     110.  00:8760  A8 87               					DW		accion_puerta_arriba	;función para acción de cada tipo de puerta
     111.  00:8762  AE 86               					DW		array_puerta_izquierda	;puntero al array con los tiles de las puertas
     112.  00:8764  E1 18               					DW		TILMAP + POSPUERIZQU
     113.  00:8766  07                  					DB		7			;alto/filas
     114.  00:8767  03                  					DB		3			;ancho/columnas
     115.  00:8768                      
     116.  00:8768                      
     117.  00:8768                      
     118.  00:8768                      ;;=====================================================
     119.  00:8768                      ;;SUBRUTINAS
     120.  00:8768                      ;;=====================================================
     121.  00:8768                      
     122.  00:8768                      
     123.  00:8768                      ;;=====================================================
     124.  00:8768                      ;;INICIALIZA_PUERTAS
     125.  00:8768                      ;;=====================================================	
     126.  00:8768                      ; función: 	inicializa las variables de estructuras de ayuda del array lista_puertas
     127.  00:8768                      ; entrada: 	*********************datos_delasdistintasayudas, variable estructura_ayuda_ayudaquesea
     128.  00:8768                      ; salida: 	lista_ayudas
     129.  00:8768                      ; toca:		-
     130.  00:8768                      inicializa_puertas:
     131.  00:8768  E5                  	PUSH	HL
     132.  00:8769  C5                  	PUSH	BC
     133.  00:876A  D5                  	PUSH	DE
     134.  00:876B                      	
     135.  00:876B                      	;inicializa puerta arriba
     136.  00:876B  3A 24 A9            	LD		 A, (prota_pos_mapy)
     137.  00:876E  FE 06               	CP		 6
     138.  00:8770  CA 79 87            	JP		 Z,.pinta_escalera			;de tener que pintar algo arriba, se pinta escalera (fila 6) o puerta (fila <> 6)
     139.  00:8773  21 34 87            		LD		HL, datos_puerta_arriba	;origen
     140.  00:8776  C3 7C 87            		JP		.cotinuamos_pintando_escalera_arriba
     141.  00:8779                      .pinta_escalera
     142.  00:8779  21 27 87            		LD		HL, datos_escalera		;origen
     143.  00:877C                      .cotinuamos_pintando_escalera_arriba
     144.  00:877C  11 F3 86            	LD		DE, puerta_arriba			;destino
     145.  00:877F  CD A1 87            	CALL	carga_datos_puerta
     146.  00:8782                      	
     147.  00:8782                      	;inicializa puerta derecha
     148.  00:8782  21 41 87            	LD		HL, datos_puerta_derecha	;origen
     149.  00:8785  11 00 87            	LD		DE, puerta_derecha			;destino
     150.  00:8788  CD A1 87            	CALL	carga_datos_puerta
     151.  00:878B                      	
     152.  00:878B                      	;inicializa puerta abajo
     153.  00:878B  21 4E 87            	LD		HL, datos_puerta_abajo		;origen
     154.  00:878E  11 0D 87            	LD		DE, puerta_abajo			;destino
     155.  00:8791  CD A1 87            	CALL	carga_datos_puerta
     156.  00:8794                      	
     157.  00:8794                      	;inicializa puerta izquierda
     158.  00:8794  21 5B 87            	LD		HL, datos_puerta_izquierda	;origen
     159.  00:8797  11 1A 87            	LD		DE, puerta_izquierda		;destino
     160.  00:879A  CD A1 87            	CALL	carga_datos_puerta
     161.  00:879D                      	
     162.  00:879D  D1                  	POP		DE
     163.  00:879E  C1                  	POP		BC
     164.  00:879F  E1                  	POP		HL
     165.  00:87A0                      fin_inicializa_puertas:
     166.  00:87A0  C9                  	RET
     167.  00:87A1                      
     168.  00:87A1                      
     169.  00:87A1                      
     170.  00:87A1                      ;;=====================================================
     171.  00:87A1                      ;;CARGA_DATOS_PUERTA
     172.  00:87A1                      ;;=====================================================	
     173.  00:87A1                      ; función: 	carga los datos de la puerta de una variable con los datos de la puerta
     174.  00:87A1                      ; entrada
     175.  00:87A1                      ;  hl: origen de datos
     176.  00:87A1                      ;  de: destino de datos
     177.  00:87A1                      ; salida: 	-
     178.  00:87A1                      ; toca:		HL, DE, BC
     179.  00:87A1                      carga_datos_puerta:
     180.  00:87A1  01 0D 00            	LD		BC, ESTRUCTURA_PUERTA ;bytes a mover (el nombre de la estructura equivale al tamaño de la estructura en bytes)
     181.  00:87A4  ED B0               	LDIR
     182.  00:87A6                      fin_carga_datos_puerta:
     183.  00:87A6  C9                  	RET
     184.  00:87A7                      
     185.  00:87A7                      
     186.  00:87A7                      ;;=====================================================
     187.  00:87A7                      ;;ACCION_ESCALERA
     188.  00:87A7                      ;;=====================================================	
     189.  00:87A7                      ; función: 	
     190.  00:87A7                      ; entrada: 	
     191.  00:87A7                      ; salida: 	
     192.  00:87A7                      accion_escalera:
     193.  00:87A7                      	;CALL	cambio_habitacion
     194.  00:87A7                      fin_accion_escalera:
     195.  00:87A7  C9                  	RET
     196.  00:87A8                      
     197.  00:87A8                      
     198.  00:87A8                      ;;=====================================================
     199.  00:87A8                      ;;ACCION_PUERTA_ARRIBA
     200.  00:87A8                      ;;=====================================================	
     201.  00:87A8                      ; función: 	
     202.  00:87A8                      ; entrada: 	
     203.  00:87A8                      ; salida: 	
     204.  00:87A8                      accion_puerta_arriba:
     205.  00:87A8                      	;CALL	cambio_habitacion
     206.  00:87A8                      fin_accion_puerta_arriba:
     207.  00:87A8  C9                  	RET
     208.  00:87A9                      
     209.  00:87A9                      
     210.  00:87A9                      ;;=====================================================
     211.  00:87A9                      ;;ACCION_PUERTA_DERECHA
     212.  00:87A9                      ;;=====================================================	
     213.  00:87A9                      ; función: 	
     214.  00:87A9                      ; entrada: 	
     215.  00:87A9                      ; salida: 	
     216.  00:87A9                      accion_puerta_derecha:
     217.  00:87A9                      	;CALL	cambio_habitacion
     218.  00:87A9                      fin_accion_puerta_derecha:
     219.  00:87A9  C9                  	RET
     220.  00:87AA                      	
     221.  00:87AA                      
     222.  00:87AA                      ;;=====================================================
     223.  00:87AA                      ;;ACCION_PUERTA_ABAJO
     224.  00:87AA                      ;;=====================================================	
     225.  00:87AA                      ; función: 	
     226.  00:87AA                      ; entrada: 	
     227.  00:87AA                      ; salida: 	
     228.  00:87AA                      accion_puerta_abajo:
     229.  00:87AA                      	;CALL	cambio_habitacion
     230.  00:87AA                      fin_accion_puerta_abajo:
     231.  00:87AA  C9                  	RET
     232.  00:87AB                      	
     233.  00:87AB                      	
     234.  00:87AB                      ;;=====================================================
     235.  00:87AB                      ;;ACCION_PUERTA_IZQUIERDA
     236.  00:87AB                      ;;=====================================================	
     237.  00:87AB                      ; función: 	
     238.  00:87AB                      ; entrada: 	
     239.  00:87AB                      ; salida: 	
     240.  00:87AB                      accion_puerta_izquierda:
     241.  00:87AB                      	;CALL	cambio_habitacion
     242.  00:87AB                      fin_accion_puerta_izquierda:
     243.  00:87AB  C9                  	RET
     244.  00:87AC                      	
     245.  00:87AC                      
     246.  00:87AC                      ;;=====================================================
     247.  00:87AC                      ;;PINTA_PUERTAS
     248.  00:87AC                      ;;=====================================================	
     249.  00:87AC                      ; función: 	examina A y mira si tiene que pintar puertas de los lados, arriba o abrajo o las escaleras (o no)
     250.  00:87AC                      ; entrada: 	habitacion_actual 1 escalera 1 puerta arriba 1 pu der 1 pu aba 1 pu izq (si es 0 pinta pared)
     251.  00:87AC                      ; salida: 	-
     252.  00:87AC                      ; toca:		todo
     253.  00:87AC                      pinta_puertas:
     254.  00:87AC  CD 05 82            	CALL	pinta_parte_superior_pantalla	;pinta pasillo y paredes
     255.  00:87AF                      
     256.  00:87AF  CD 53 81            	CALL	localiza_info_habitacion	;busca qué puertas debe pintar y lo mete en habitación_actual
     257.  00:87B2                      	
     258.  00:87B2  3A F2 A5            	LD		 A, (habitacion_actual)
     259.  00:87B5  CB 5F               	BIT		 3, A
     260.  00:87B7  C4 DD 87            	CALL	nz, pinta_puerta_arr		;si es de la fila 7 los datos de la pueta de arriba serán los de una escalera
     261.  00:87BA                      
     262.  00:87BA  3A F2 A5            	LD		 A, (habitacion_actual)
     263.  00:87BD  CB 57               	BIT		 2, A
     264.  00:87BF  C4 E7 87            	CALL	nz, pinta_puerta_der
     265.  00:87C2                      
     266.  00:87C2  3A F2 A5            	LD		 A, (habitacion_actual)
     267.  00:87C5  CB 4F               	BIT		 1, A
     268.  00:87C7  C4 D3 87            	CALL	nz, pinta_puerta_aba
     269.  00:87CA                      
     270.  00:87CA  3A F2 A5            	LD		 A, (habitacion_actual)
     271.  00:87CD  CB 47               	BIT		 0, A
     272.  00:87CF  C4 F1 87            	CALL	nz, pinta_puerta_izq
     273.  00:87D2                      fin_pinta_puertas:
     274.  00:87D2  C9                  	RET
     275.  00:87D3                      
     276.  00:87D3                      
     277.  00:87D3                      ;;=====================================================
     278.  00:87D3                      ;;PINTA_PUERTA_ABA
     279.  00:87D3                      ;;=====================================================	
     280.  00:87D3                      ; función: 	pinta la puerta de abajo
     281.  00:87D3                      ; entrada: 	puerta_abajo
     282.  00:87D3                      ; salida: 	-
     283.  00:87D3                      ; toca:		A, HL,BC, DE
     284.  00:87D3                      pinta_puerta_aba:
     285.  00:87D3  DD 21 0D 87         	LD		IX, puerta_abajo
     286.  00:87D7  CD FB 87            	CALL	actualiza_variables_pinta_array
     287.  00:87DA                      		
     288.  00:87DA  C3 BF 84            	JP		pinta_array
     289.  00:87DD                      fin_pinta_puerta_aba:
     290.  00:87DD                      
     291.  00:87DD                      
     292.  00:87DD                      ;;=====================================================
     293.  00:87DD                      ;;PINTA_PUERTA_ARR
     294.  00:87DD                      ;;=====================================================	
     295.  00:87DD                      ; función: 	pinta la puerta de arriba
     296.  00:87DD                      ; entrada: 	puerta_arriba
     297.  00:87DD                      ; salida: 	-
     298.  00:87DD                      ; toca:		IX
     299.  00:87DD                      pinta_puerta_arr:
     300.  00:87DD  DD 21 F3 86         	LD		IX, puerta_arriba
     301.  00:87E1  CD FB 87            	CALL	actualiza_variables_pinta_array
     302.  00:87E4                      	
     303.  00:87E4  C3 BF 84            	JP		pinta_array
     304.  00:87E7                      fin_pinta_puerta_arr:
     305.  00:87E7                      
     306.  00:87E7                      
     307.  00:87E7                      ;;=====================================================
     308.  00:87E7                      ;;PINTA_PUERTA_DER
     309.  00:87E7                      ;;=====================================================	
     310.  00:87E7                      ; función: 	pinta la puerta de la derecha
     311.  00:87E7                      ; entrada: 	puerta_derecha
     312.  00:87E7                      ; salida: 	-
     313.  00:87E7                      ; toca:		HL,BC, DE
     314.  00:87E7                      pinta_puerta_der:
     315.  00:87E7  DD 21 00 87         	LD		IX, puerta_derecha
     316.  00:87EB  CD FB 87            	CALL	actualiza_variables_pinta_array
     317.  00:87EE                      	
     318.  00:87EE  C3 BF 84            	JP		pinta_array
     319.  00:87F1                      fin_pinta_puerta_der:
     320.  00:87F1                      
     321.  00:87F1                      	
     322.  00:87F1                      ;;=====================================================
     323.  00:87F1                      ;;PINTA_PUERTA_IZQ
     324.  00:87F1                      ;;=====================================================	
     325.  00:87F1                      ; función: 	pinta la puerta de la izquierda
     326.  00:87F1                      ; entrada: 	puerta_izquierda
     327.  00:87F1                      ; salida: 	-
     328.  00:87F1                      ; toca:		HL,BC, DE
     329.  00:87F1                      pinta_puerta_izq:
     330.  00:87F1  DD 21 1A 87         	LD		IX, puerta_izquierda
     331.  00:87F5  CD FB 87            	CALL	actualiza_variables_pinta_array
     332.  00:87F8                      	
     333.  00:87F8  C3 BF 84            	JP		pinta_array
     334.  00:87FB                      fin_pinta_puerta_izq:
     335.  00:87FB                      
     336.  00:87FB                      
     337.  00:87FB                      ;;=====================================================
     338.  00:87FB                      ;;FIN_ACTUALIZA_VARIABLES_PINTA_ARRAY
     339.  00:87FB                      ;;=====================================================	
     340.  00:87FB                      ; función: 	como el código es el mismo en esta subrutia se actualizan los valores de wordaux2, wordaux1, byteaux1, byteaux2
     341.  00:87FB                      ; entrada: 	IX apuntando a la estructura de una puerta
     342.  00:87FB                      ; salida: 	-
     343.  00:87FB                      ; toca:		A,HL,BC, DE
     344.  00:87FB                      actualiza_variables_pinta_array:
     345.  00:87FB  DD 6E 07            	LD		 L, (IX + ESTRUCTURA_PUERTA.tiles_puerta)	;guardo puntero al array a pintar (como pasar por referencia)
     346.  00:87FE  DD 66 08            	LD		 H, (IX + ESTRUCTURA_PUERTA.tiles_puerta + 1)
     347.  00:8801  22 01 85            	LD		(wordaux2), HL						;en la variable wordaux2
     348.  00:8804                      	
     349.  00:8804  DD 6E 09            	LD		 L, (IX + ESTRUCTURA_PUERTA.pos_en_tilemap)	;guardo puntero al array a pintar (como pasar por referencia)
     350.  00:8807  DD 66 0A            	LD		 H, (IX + ESTRUCTURA_PUERTA.pos_en_tilemap + 1)
     351.  00:880A  22 FF 84            	LD		(wordaux1), HL						;guarda valor pos tilemap en wordaux1
     352.  00:880D                      	
     353.  00:880D  DD 7E 0B            	LD		 A, (IX + ESTRUCTURA_PUERTA.alto)	;nº de filas
     354.  00:8810  32 03 85            	LD		(byteaux1), A
     355.  00:8813                      	
     356.  00:8813  DD 7E 0C            	LD		 A, (IX + ESTRUCTURA_PUERTA.ancho)	;nº de columnas
     357.  00:8816  32 04 85            	LD		(byteaux2), A
     358.  00:8819                      fin_actualiza_variables_pinta_array:
     359.  00:8819  C9                  	RET
     360.  00:881A                      
     361.  00:881A                      
     362.  00:881A                      ;;=====================================================
     363.  00:881A                      ;;ACTIVA_DESACTIVA_PUERTAS
     364.  00:881A                      ;;=====================================================	
     365.  00:881A                      ; función: 	coloca todas las puertas que haya pintadas en la habitación como activas o inactivas según B
     366.  00:881A                      ; entrada: 	IX apuntando a la estructura de una puerta, habitacion_actual
     367.  00:881A                      ; salida: 	-
     368.  00:881A                      ; toca:		A, IX, B
     369.  00:881A                      activa_desactiva_puertas:
     370.  00:881A                      .mira_puerta_arriba	
     371.  00:881A  3A F2 A5            	LD		 A, (habitacion_actual)
     372.  00:881D  CB 5F               	BIT		 3, A
     373.  00:881F  CA 2A 88            	JP		 Z, .mira_puerta_derecha
     374.  00:8822  78                  	LD		 A, B
     375.  00:8823  DD 21 F3 86         	LD		IX, puerta_arriba
     376.  00:8827  DD 77 00            	LD		(IX), A
     377.  00:882A                      
     378.  00:882A                      .mira_puerta_derecha
     379.  00:882A  3A F2 A5            	LD		 A, (habitacion_actual)
     380.  00:882D  CB 57               	BIT		 2, A
     381.  00:882F  CA 3A 88            	JP		 Z, .mira_puerta_abajo
     382.  00:8832  78                  	LD		 A, B
     383.  00:8833  DD 21 00 87         	LD		IX, puerta_derecha
     384.  00:8837  DD 77 00            	LD		(IX), A
     385.  00:883A                      	
     386.  00:883A                      .mira_puerta_abajo
     387.  00:883A  3A F2 A5            	LD		 A, (habitacion_actual)
     388.  00:883D  CB 4F               	BIT		 1, A
     389.  00:883F  CA 4A 88            	JP		 Z, .mira_puerta_izquierda
     390.  00:8842  78                  	LD		 A, B
     391.  00:8843  DD 21 0D 87         	LD		IX, puerta_abajo
     392.  00:8847  DD 77 00            	LD		(IX), A
     393.  00:884A                      
     394.  00:884A                      .mira_puerta_izquierda
     395.  00:884A  3A F2 A5            	LD		 A, (habitacion_actual)
     396.  00:884D  CB 47               	BIT		 0, A
     397.  00:884F  CA 5A 88            	JP		 Z, fin_activa_desactiva_puertas
     398.  00:8852  78                  	LD		 A, B
     399.  00:8853  DD 21 0D 87         	LD		IX, puerta_abajo
     400.  00:8857  DD 77 00            	LD		(IX), A
     401.  00:885A                      fin_activa_desactiva_puertas:
     402.  00:885A  C9                  	RET
     403.  00:885B                      
     404.  00:885B                      
     405.  00:885B                      
     406.  00:885B                      
     407.  00:885B                      
     192   00:885B                      	
     193   00:885B                      	include "subr_sprites.asm"
       1.  00:885B                      
       2.  00:885B                      ;;=====================================================
       3.  00:885B                      ;;SUBRUTINAS ENCARGADAS DE MANEJAR LOS SPRITES
       4.  00:885B                      ;;=====================================================	
       5.  00:885B                      
       6.  00:885B                      
       7.  00:885B                      ;; PREGUNTAR SI A FERNANDO SI ES MEJOR USAR LISTAS O ALGO PARA AHORRAR CÓDIGO
       8.  00:885B                      
       9.  00:885B                      
      10.  00:885B                      
      11.  00:885B                      
      12.  00:885B                      ;;=====================================================
      13.  00:885B                      ;;CARGA_PATRONES_SPRITES_NIVEL
      14.  00:885B                      ;;=====================================================	
      15.  00:885B                      ; función: 	examina el nivel y carga los patrones específicos necesarios
      16.  00:885B                      ; entrada: 	-
      17.  00:885B                      ; salida: 	-
      18.  00:885B                      ; toca: 	-
      19.  00:885B                      carga_patrones_sprites_nivel:
      20.  00:885B  CD 5F 88            	CALL 	carga_patrones_nivel_comunes
      21.  00:885E                      	
      22.  00:885E  C9                  	RET		;*********************
      23.  00:885F                      	
      24.  00:885F                      	
      25.  00:885F                      	;POR AHORA ES TODO COMÚN ... CUANDO EL JUGADOR SE MUEVA LOS PATRONES SERÁN DEPENDIENDO DEL NIVEL
      26.  00:885F                      	; O NO Y LO QUE SE HACE ES PERSONALIZAR LA PANTALLA USANDO LOS MISMOS PATRONES PERO PINTANDO DISTINTOS
      27.  00:885F                      	; EN DISTINTOS SITIOS SEGÚN NIVEL
      28.  00:885F                      	
      29.  00:885F                      	;~ ;carga patrones no comunes
      30.  00:885F                      	;~ LD		 A, (prota_nivel)
      31.  00:885F                      	;~ OR		 A
      32.  00:885F                      	;~ JP		 Z, carga_patrones_sprites_nivel donde esté el prota
      33.  00:885F                      fin_carga_patrones_sprites_nivel:
      34.  00:885F                      
      35.  00:885F                      
      36.  00:885F                      ;;=====================================================
      37.  00:885F                      ;;CARGA_PATRONES_SPRITES_NIVEL_COMUNES
      38.  00:885F                      ;;=====================================================	
      39.  00:885F                      ; función: 	carga los patrones comunes en todos los niveles
      40.  00:885F                      ; entrada: 	-
      41.  00:885F                      ; salida: 	-
      42.  00:885F                      ; toca: 	-
      43.  00:885F                      carga_patrones_nivel_comunes:	
      44.  00:885F  21 72 9C            	LD		HL, sprites_comunes
      45.  00:8862  11 00 38            	LD		DE, SPRTBL
      46.  00:8865  01 C0 00            	LD		BC, fin_sprites_comunes-sprites_comunes
      47.  00:8868  C3 5C 00            	JP		LDIRVM
      48.  00:886B                      fin_carga_patrones_nivel_comunes:
      49.  00:886B                      
      50.  00:886B                      
      51.  00:886B                      ;;=====================================================
      52.  00:886B                      ;;CARGA_PATRONES_SPRITES_NIVEL1
      53.  00:886B                      ;;=====================================================	
      54.  00:886B                      ; función: 	copia los patrones de los sprites que e van a usar en el nivel 1 en vram
      55.  00:886B                      ; entrada: 	-
      56.  00:886B                      ; salida: 	-
      57.  00:886B                      ; toca: 	-
      58.  00:886B                      carga_patrones_sprites_nivel1:
      59.  00:886B                      
      60.  00:886B                      	;~ ;sprite sprite_reliquia
      61.  00:886B                      	;~ LD		HL,sprite_reliquia
      62.  00:886B                      	;~ LD		DE,#3880
      63.  00:886B                      	;~ LD		BC,32				;32 bytes (sprites de 2 x 2)
      64.  00:886B                      	;~ CALL	LDIRVM
      65.  00:886B                      
      66.  00:886B                      fin_carga_patrones_sprites:
      67.  00:886B  C9                  	RET
      68.  00:886C                      
      69.  00:886C                      
      70.  00:886C                      ;;=====================================================
      71.  00:886C                      ;;ACTUALIZA_ARRAY_SPRITES_VRAM
      72.  00:886C                      ;;=====================================================	
      73.  00:886C                      ; función: 	copia el array con los valores de los sprites (pos, color, plano) en VRAM
      74.  00:886C                      ; entrada: 	-
      75.  00:886C                      ; salida: 	-
      76.  00:886C                      ; toca: 	todos los registros. Como me interesa la velocidad, si necesito copiar de algo lo hago fuera
      77.  00:886C                      render_sprites:
      78.  00:886C                      	;volcando el array con toda la info de los sprites a la zona de atributos de sprites
      79.  00:886C  21 78 AA            	LD		HL,array_sprites
      80.  00:886F  11 00 1B            	LD		DE,SPRART
      81.  00:8872  01 80 00            	LD		BC,4 * 32				;32 sprites x 4 bytes controlando el sprite (Y, X, plano, color)
      82.  00:8875  C3 5C 00            	JP		LDIRVM
      83.  00:8878                      fin_actualiza_array_sprites_vram:
      84.  00:8878                      
      85.  00:8878                      
      86.  00:8878                      ;;=====================================================
      87.  00:8878                      ;;VUELCA_RESULTADO_PUNTOMIRA_ARRAY
      88.  00:8878                      ;;=====================================================	
      89.  00:8878                      ; función: 	coloca los valores del punto de mira en la variable array_sprites para ser volcados en VRAM
      90.  00:8878                      ; entrada: 	array_sprites_pm, prota.XXXXX
      91.  00:8878                      ; salida: 	-
      92.  00:8878                      ; toca: 	-
      93.  00:8878                      vuelca_resultado_puntomira_array:
      94.  00:8878  DD 21 78 AA         	LD		IX, array_sprites_pm
      95.  00:887C                      	;posición y de los dos sprites que conforman el punto de mira
      96.  00:887C  3A 11 A9            	LD		 A, (prota.posy)
      97.  00:887F  DD 77 00            	LD		(IX  ), A
      98.  00:8882  DD 77 04            	LD		(IX+4), A
      99.  00:8885                      	;posición x de los dos sprites que conforman el punto de mira
     100.  00:8885  3A 10 A9            	LD		 A, (prota.posx)
     101.  00:8888  DD 77 01            	LD		(IX+1), A
     102.  00:888B  DD 77 05            	LD		(IX+5), A
     103.  00:888E                      	;plano
     104.  00:888E  DD 36 02 00         	LD		(IX+2), 0
     105.  00:8892  DD 36 06 04         	LD		(IX+6), 4	;al ser sprites de 16x16 hay que ir de 4 en 4
     106.  00:8896                      	;color
     107.  00:8896  3A 12 A9            	LD		 A, (prota.escena)
     108.  00:8899  B7                  	OR		 A
     109.  00:889A  C2 A6 88            	JP		NZ,.codigo_color_2
     110.  00:889D                      .codigo_color_1:
     111.  00:889D  DD 36 03 0F         	LD		(IX+3), COLBLANCO
     112.  00:88A1  DD 36 07 08         	LD		(IX+7), COLROJO
     113.  00:88A5  C9                  	RET
     114.  00:88A6                      .codigo_color_2:
     115.  00:88A6  DD 36 03 08         	LD		(IX+3), COLROJO
     116.  00:88AA  DD 36 07 0F         	LD		(IX+7), COLBLANCO
     117.  00:88AE  C9                  	RET
     118.  00:88AF                      fin_vuelca_resultado_puntomira_array:
     119.  00:88AF                      
     120.  00:88AF                      
     121.  00:88AF                      ;;=====================================================
     122.  00:88AF                      ;;CHECK_PLAYER
     123.  00:88AF                      ;;=====================================================	
     124.  00:88AF                      ; función: 	MIRA EL CONTROL Y APLICA LA LOGICA DE MOVIMIENTO DEL PROTAGONISTA
     125.  00:88AF                      ; entrada: 	-
     126.  00:88AF                      ; salida: 	-
     127.  00:88AF                      ; toca: 	A
     128.  00:88AF                      check_player:
     129.  00:88AF  CD 51 89            	CALL	update_controllers_status
     130.  00:88B2  B7                  	OR		 A
     131.  00:88B3  C8                  	RET		 Z						;si no se ha pulsado nada no se necesita mirar nada
     132.  00:88B4                      
     133.  00:88B4  CB 1F               	RR		 A
     134.  00:88B6  DC CF 88            	CALL	 C, mueve_arriba
     135.  00:88B9  CB 1F               	RR		 A
     136.  00:88BB  DC EB 88            	CALL	 C, mueve_abajo
     137.  00:88BE  CB 1F               	RR		 A
     138.  00:88C0  DC FA 88            	CALL	 C, mueve_izquierda
     139.  00:88C3  CB 1F               	RR		 A
     140.  00:88C5  DC DC 88            	CALL	 C, mueve_derecha
     141.  00:88C8                      	
     142.  00:88C8                      	;zona para mirar disparo Recibe A que tendrá 0000 0 0 X-letra M X-espacio 
     143.  00:88C8  CD 07 89            	CALL	mira_disparo
     144.  00:88CB                      
     145.  00:88CB  C3 78 88            	JP		vuelca_resultado_puntomira_array
     146.  00:88CE                      f;in_check_player:
     147.  00:88CE  C9                  	RET
     148.  00:88CF                      
     194   00:88CF                      	
     195   00:88CF                      	include "subr_teclado_joy.asm"
       1.  00:88CF                      ;;=====================================================
       2.  00:88CF                      ;;SUBRUTINAS QUE CAPTURAN EL JOYSTICK Y TECLADO Y MUEVEN PUNTO DE MIRA
       3.  00:88CF                      ;;=====================================================
       4.  00:88CF                      
       5.  00:88CF                      ;;=====================================================
       6.  00:88CF                      ;;MUEVE_ARRIBA
       7.  00:88CF                      ;;=====================================================	
       8.  00:88CF                      ; función: 	decrementa y si se no sale de los límites el valor del punto de mira a la derecha
       9.  00:88CF                      ; entrada: 	-
      10.  00:88CF                      ; salida: 	-
      11.  00:88CF                      ; toca: 	-
      12.  00:88CF                      mueve_arriba:
      13.  00:88CF  F5                  	PUSH		AF
      14.  00:88D0                      	
      15.  00:88D0  3A 11 A9            	LD		 	 A, (prota.posy)
      16.  00:88D3  3D                  	DEC			 A
      17.  00:88D4  CA DA 88            	JP			 Z,.no_decrementa_y
      18.  00:88D7  32 11 A9            	LD			(prota.posy), A
      19.  00:88DA                      	
      20.  00:88DA                      .no_decrementa_y:
      21.  00:88DA  F1                  	POP			AF
      22.  00:88DB                      fin_mueve_arriba:
      23.  00:88DB  C9                  	RET
      24.  00:88DC                      
      25.  00:88DC                      
      26.  00:88DC                      ;;=====================================================
      27.  00:88DC                      ;;MUEVE_DERECHA
      28.  00:88DC                      ;;=====================================================	
      29.  00:88DC                      ; función: 	incrementa si se no sale de los límites el valor del punto de mira a la derecha
      30.  00:88DC                      ; entrada: 	-
      31.  00:88DC                      ; salida: 	-
      32.  00:88DC                      ; toca: 	-
      33.  00:88DC                      mueve_derecha:
      34.  00:88DC  F5                  	PUSH		AF
      35.  00:88DD                      	
      36.  00:88DD  3A 10 A9            	LD		 	 A, (prota.posx)
      37.  00:88E0  3C                  	INC			 A
      38.  00:88E1  FE EF               	CP			 A, LIMPANTDER - 16
      39.  00:88E3  CA E9 88            	JP			 Z, .no_incrementa_x
      40.  00:88E6  32 10 A9            	LD			(prota.posx), A
      41.  00:88E9                      	
      42.  00:88E9                      .no_incrementa_x:
      43.  00:88E9  F1                  	POP			AF
      44.  00:88EA                      fin_mueve_derecha:
      45.  00:88EA  C9                  	RET
      46.  00:88EB                      
      47.  00:88EB                      
      48.  00:88EB                      ;;=====================================================
      49.  00:88EB                      ;;MUEVE_ABAJO
      50.  00:88EB                      ;;=====================================================	
      51.  00:88EB                      ; función: 	incrementa y si se no sale de los límites el valor del punto de mira abajo
      52.  00:88EB                      ; entrada: 	-
      53.  00:88EB                      ; salida: 	-
      54.  00:88EB                      ; toca: 	-
      55.  00:88EB                      mueve_abajo:
      56.  00:88EB  F5                  	PUSH		AF
      57.  00:88EC                      	
      58.  00:88EC  3A 11 A9            	LD		 	 A, (prota.posy)
      59.  00:88EF  3C                  	INC			 A
      60.  00:88F0  FE 70               	CP			 A, LIMPANTABA - 16
      61.  00:88F2  CA F8 88            	JP			 Z,.no_incrementa_y
      62.  00:88F5  32 11 A9            	LD			(prota.posy), A
      63.  00:88F8                      	
      64.  00:88F8                      .no_incrementa_y:
      65.  00:88F8  F1                  	POP			AF
      66.  00:88F9                      fin_mueve_abajo:
      67.  00:88F9  C9                  	RET
      68.  00:88FA                      	
      69.  00:88FA                      	
      70.  00:88FA                      ;;=====================================================
      71.  00:88FA                      ;;MUEVE_IZQUIERDA
      72.  00:88FA                      ;;=====================================================	
      73.  00:88FA                      ; función: 	decrementa x si se no sale de los límites el valor del punto de mira a la izquierda
      74.  00:88FA                      ; entrada: 	-
      75.  00:88FA                      ; salida: 	-
      76.  00:88FA                      ; toca: 	-
      77.  00:88FA                      mueve_izquierda:
      78.  00:88FA  F5                  	PUSH		AF
      79.  00:88FB                      	
      80.  00:88FB  3A 10 A9            	LD		 	 A, (prota.posx)
      81.  00:88FE  3D                  	DEC			 A
      82.  00:88FF                      ;	CP			 A, LIMPANTIZQ
      83.  00:88FF  CA 05 89            	JP			 Z,.no_decrementa_x
      84.  00:8902  32 10 A9            	LD			(prota.posx), A
      85.  00:8905                      	
      86.  00:8905                      .no_decrementa_x:
      87.  00:8905  F1                  	POP			AF
      88.  00:8906                      fin_mueve_izquierda:
      89.  00:8906  C9                  	RET
      90.  00:8907                      
      91.  00:8907                      
      92.  00:8907                      
      93.  00:8907                      ;;=====================================================
      94.  00:8907                      ;;MIRA_DISPARO
      95.  00:8907                      ;;=====================================================	
      96.  00:8907                      ; función: 	Mira si se ha pulsado alguno de los dos disparos
      97.  00:8907                      ; entrada: 	A que tendrá 0000 0 0 X-letra M X-espacio 
      98.  00:8907                      ; salida: 	-
      99.  00:8907                      ; toca: 	A, B
     100.  00:8907                      mira_disparo:
     101.  00:8907                      .mira_boton_pulsado1:
     102.  00:8907  CB 1F               	RR		 A						;preparo en el carry si se ha pulsado botón 1
     103.  00:8909  D2 35 89            	JP		 NC, .mira_boton_pulsado2					
     104.  00:890C  F5                  	PUSH	AF						;copia A para usarlo después
     105.  00:890D                      	;se ha pulsado barra o boton 1
     106.  00:890D  3A 15 A9            	LD		 A, (prota.cadencia)
     107.  00:8910  B7                  	OR		 A
     108.  00:8911  CA 1F 89            	JP		 Z, .efectua_disparo	;toca efectuar disparo realmente porque se ha pulsado lo suficiente el disparo
     109.  00:8914                      .no_efectua_disparo: ;IF
     110.  00:8914  3D                  		DEC		 A
     111.  00:8915  32 15 A9            		LD		(prota.cadencia), A	;resto cadencia hasta próximo disparo "real" (no automático por haber pulsado una tecla e ir demasiado rápido)
     112.  00:8918  AF                  		XOR		 A 
     113.  00:8919  32 12 A9            		LD		(prota.escena), A
     114.  00:891C  C3 34 89            		JP		.fin_mira_disparo1
     115.  00:891F                      .efectua_disparo:	;ELSE
     116.  00:891F                      		;cambio colores del sprite
     117.  00:891F  3A 12 A9            		LD		 A, (prota.escena)
     118.  00:8922  2F                  		CPL		 
     119.  00:8923  32 12 A9            		LD		(prota.escena), A
     120.  00:8926                      		;reseteo cadencia para el próximo disparo
     121.  00:8926  3E 04               		LD		 A, LIMCADENCIA						;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
     122.  00:8928  32 15 A9            		LD		 (prota.cadencia), A				;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
     123.  00:892B                      		;ejecuto sonido								;; ajustar cadencia y que cuando el disparo sea efectivo se reseteen los colores
     124.  00:892B  AF                  		XOR		 A
     125.  00:892C  0E 01               		LD		 C, 1
     126.  00:892E  CD F9 8F            		CALL	ayFX_INIT
     127.  00:8931                      		
     128.  00:8931                      
     129.  00:8931  CD 56 80            		CALL	fin_check_colisiones_objetos		;revisa las colisiones con puertas, ayudas y enemigos
     130.  00:8934                      		
     131.  00:8934                      		
     132.  00:8934                      .fin_mira_disparo1
     133.  00:8934  F1                  	POP		AF
     134.  00:8935                      
     135.  00:8935                      .mira_boton_pulsado2:
     136.  00:8935  CB 1F               	RR		 A
     137.  00:8937  D0                  	RET		 NC
     138.  00:8938                      	;se ha pulsado shift o boton 2
     139.  00:8938                      	
     140.  00:8938  3A 22 A9            	LD		 A, (prota_reliquias)	;miro si le quedan reliquias
     141.  00:893B  B7                  	OR		 A
     142.  00:893C  C8                  	RET		 Z						;si no le quedan salgo ya
     143.  00:893D                      	
     144.  00:893D                      	;actuaciones si se usa la reliquia botón 2 o M y quedn reliquias.. (antes ya se puso el valor en A)
     145.  00:893D  3A 22 A9            	LD		A, (prota_reliquias)
     146.  00:8940  3D                  	DEC		 A
     147.  00:8941  32 22 A9            	LD		(prota_reliquias), A
     148.  00:8944                      	
     149.  00:8944  3E 01               	LD		 A, 1
     150.  00:8946  0E 01               	LD		 C, 1
     151.  00:8948  CD F9 8F            	CALL	ayFX_INIT
     152.  00:894B                      	
     153.  00:894B  CD A5 84            	CALL 	efecto_imagen_tira_reliquia
     154.  00:894E                      	
     155.  00:894E  C3 4D 83            	JP		pinta_reliquias
     156.  00:8951                      fin_mira_disparo:
     157.  00:8951                      ;	RET		
     158.  00:8951                      
     159.  00:8951                      
     160.  00:8951                      ;;============================================================
     161.  00:8951                      ;;Código de D. Fernando García (BitVision) (al que siempre le estaré agradecido)
     162.  00:8951                      ;check_8th_keyboard_row
     163.  00:8951                      ;read_joy_0
     164.  00:8951                      ;check_8th_keyboard_row
     165.  00:8951                      ;check_4th_keyboard_row
     166.  00:8951                      ;;============================================================
     167.  00:8951                      ;;  usa constantes:
     168.  00:8951                      ;PSG_A  equ  0a0h  ;reg address
     169.  00:8951                      ;PSG_W  equ  0a1h  ;reg data WR
     170.  00:8951                      ;PSG_R  equ  0a2h  ;reg data
     171.  00:8951                      
     172.  00:8951                      ;;=====================================================
     173.  00:8951                      ;;update_controllers_status
     174.  00:8951                      ;;=====================================================	
     175.  00:8951                      ;depends on the next rountine
     176.  00:8951                      ;  returns
     177.  00:8951                      ;  a - 0P2TRLDU
     178.  00:8951                      
     179.  00:8951                      update_controllers_status:
     180.  00:8951  CD 9C 89                 call  check_8th_keyboard_row
     181.  00:8954                      [4]  rrc    a
     181.  00:8954  CB 0F CB 0F CB 0F CB 0F 
     182.  00:895C  47                       ld    b,a    		;save for later  xxxTRDUL
     183.  00:895D                      
     184.  00:895D  E6 01                    and    #01    		;save L
     185.  00:895F  CB 27                    sla    a
     186.  00:8961  CB 27                    sla    a    		;now 00000L00
     187.  00:8963  4F                       ld    c,a    		;save for later
     188.  00:8964                      
     189.  00:8964  78                       ld    a,b    		;again we've got xxxTRDUL. I am interested on leaving 000000DU on a
     190.  00:8965  CB 3F                    srl    a
     191.  00:8967  E6 03                    and    00000011b
     192.  00:8969                      						;we've got 000000DU on a
     193.  00:8969  B1                       or    c    		;now we've got 00000LDU
     194.  00:896A  4F                       ld    c,a    		;save for later
     195.  00:896B                      
     196.  00:896B  78                       ld    a,b
     197.  00:896C  E6 18                    and    00011000b 	;we've got 000TR000
     198.  00:896E  B1                       or    c
     199.  00:896F                           ;finally    000TRLDU
     200.  00:896F                      
     201.  00:896F                           ;and    00000100   ;preserve just
     202.  00:896F  47                       ld    b,a    		;save for later
     203.  00:8970  CD AA 89                 call  check_4th_keyboard_row      ;check M & P
     204.  00:8973  F5                       push  af
     205.  00:8974  E6 04                    and    00000100b	;filter just M
     206.  00:8976  87                       add    a
     207.  00:8977  87                       add    a
     208.  00:8978  87                       add    a           ;shift 3th to 6th bit
     209.  00:8979  B0                       or    b           	;merge with previous
     210.  00:897A  47                       ld    b,a
     211.  00:897B                      
     212.  00:897B  CD 88 89                 call  read_joy_0
     213.  00:897E  E6 3F                    and    00111111b  	;we want just 002TRLDU  from joystick    (2 is second trigger)
     214.  00:8980  B0                       or    b      		;added 000TRLDU from keyboard
     215.  00:8981  47                       ld    b,a      	;save for later
     216.  00:8982  F1                       pop    af      	; let's check on P
     217.  00:8983                      
     218.  00:8983  E6 20                    and    00100000b
     219.  00:8985  87                       add    a      		;P status on 6th bit  ... so 0P2TRLDU
     220.  00:8986  B0                       or    b
     221.  00:8987                      
     222.  00:8987  C9                       ret
     223.  00:8988                      
     224.  00:8988                      
     225.  00:8988                      ;ret
     226.  00:8988                      ;  a -            xx2TRLDU
     227.  00:8988                      read_joy_0:
     228.  00:8988  F3                         di
     229.  00:8989  3E 0F                      ld    a,15
     230.  00:898B  D3 A0                      out    [PSG_A],a
     231.  00:898D  DB A2                      in    a,[PSG_R]
     232.  00:898F  E6 BF                      and    10111111b        ;joy0
     233.  00:8991                      
     234.  00:8991  D3 A1                      out    [PSG_W],a        ;set joy0
     235.  00:8993                      
     236.  00:8993  3E 0E                      ld    a,14
     237.  00:8995  D3 A0                      out    [PSG_A],a
     238.  00:8997  DB A2                      in    a,[PSG_R]
     239.  00:8999                      
     240.  00:8999  FB                         ei
     241.  00:899A  2F                         cpl
     242.  00:899B                      
     243.  00:899B  C9                         ret
     244.  00:899C                      
     245.  00:899C                      
     246.  00:899C                      ;ret
     247.  00:899C                      ;  a -      RDULxxxT
     248.  00:899C                      check_8th_keyboard_row:
     249.  00:899C  F3                       di
     250.  00:899D  DB AA                    in    a,(#aa)
     251.  00:899F  E6 F0                    and    #f0
     252.  00:89A1  F6 08                    or    8
     253.  00:89A3  D3 AA                    out    (#aa),a
     254.  00:89A5  DB A9                    in    a,(#a9)
     255.  00:89A7  FB                       ei
     256.  00:89A8  2F                       cpl
     257.  00:89A9                      
     258.  00:89A9  C9                       ret
     259.  00:89AA                      
     260.  00:89AA                      
     261.  00:89AA                      ;ret
     262.  00:89AA                      ;  a -      xxxxxMxx
     263.  00:89AA                      check_4th_keyboard_row:
     264.  00:89AA  F3                       di
     265.  00:89AB  DB AA                    in    a,(#aa)
     266.  00:89AD  E6 F0                    and    #f0
     267.  00:89AF  F6 04                    or    4
     268.  00:89B1  D3 AA                    out    (#aa),a
     269.  00:89B3  DB A9                    in    a,(#a9)
     270.  00:89B5  FB                       ei
     271.  00:89B6  2F                       cpl
     272.  00:89B7                      
     273.  00:89B7  C9                       ret
     274.  00:89B8                      
     275.  00:89B8                      ;--------------------------------------------
     276.  00:89B8                      
     277.  00:89B8                      
     278.  00:89B8                      
     279.  00:89B8                      
     280.  00:89B8                      
     281.  00:89B8                      
     282.  00:89B8                      
     283.  00:89B8                      
     196   00:89B8                      	
     197   00:89B8                      	include "subr_sonido.asm"
       1.  00:89B8                      
       2.  00:89B8                      ;;=====================================================
       3.  00:89B8                      ;;SUBRUTINAS PARA SONIDOS
       4.  00:89B8                      ;;=====================================================	
       5.  00:89B8                      
       6.  00:89B8                      ;;=====================================================
       7.  00:89B8                      ;;INICIALIZA_REPLAYER_EFECTOS_INTERRUPCIONES
       8.  00:89B8                      ;;=====================================================	
       9.  00:89B8                      ; función: 	inicializa: replayer de música, player de efectos e interrupciones
      10.  00:89B8                      ; entrada: 	-
      11.  00:89B8                      ; salida: 	-
      12.  00:89B8                      ; toca: 	HL, A
      13.  00:89B8                      inicializa_replayer_efectos_interrupciones:
      14.  00:89B8  F3                  	DI
      15.  00:89B9                      
      16.  00:89B9                      	;inicializacion de replayer musical
      17.  00:89B9  21 61 90            	LD		HL, song-99			; hl <- initial address of module - 99
      18.  00:89BC  CD F8 89            	CALL	PT3_INIT			; Inits PT3 player
      19.  00:89BF                      		
      20.  00:89BF                      	;inicializacion del reproductor de efectos sonoros
      21.  00:89BF  21 2C 9A            	LD		HL, sfx_bank
      22.  00:89C2  CD E7 8F            	CALL	ayFX_SETUP
      23.  00:89C5                      	
      24.  00:89C5                      	;Engancha nuestra rutina de servicio al gancha que deja preparado la BIOS cuando se termina de pintar la pantalla (50 o 60 veces por segundo)
      25.  00:89C5  3E C3               	LD		A, #C3
      26.  00:89C7  32 9F FD            	LD		[H.TIMI], A
      27.  00:89CA  21 D2 89            	LD		HL, subrutina_isr
      28.  00:89CD  22 A0 FD            	LD		[H.TIMI+1], HL
      29.  00:89D0                      	
      30.  00:89D0  FB                  	EI		;optimizacion:
      31.  00:89D1                      			;piensa que las dos ultimas lineas podrian haber sido: 
      32.  00:89D1                      			;ei						;primero ei
      33.  00:89D1                      			;ld		[H.TIMI+1],hl	;luego este ld
      34.  00:89D1                      									;PENSAR (y consultar ) PORQUE!!!!
      35.  00:89D1                      fin_inicializa_replayer_efectos_interrupciones:
      36.  00:89D1  C9                  	RET
      37.  00:89D2                      
      38.  00:89D2                      
      39.  00:89D2                      
      40.  00:89D2                      ;;=====================================================
      41.  00:89D2                      ;;NUESTRA_ISR
      42.  00:89D2                      ;;=====================================================	
      43.  00:89D2                      ; función: 	envía datos al PSG + toca un trozo de música + toca trozo de 
      44.  00:89D2                      ; entrada: 	-
      45.  00:89D2                      ; salida: 	-
      46.  00:89D2                      ; toca: 	HL, A
      47.  00:89D2                      subrutina_isr:
      48.  00:89D2  CD 3D 8F            	CALL	PT3_ROUT			;envia los datos a los registros del PSG
      49.  00:89D5  CD 45 8E            	CALL	PT3_PLAY			;calcula el siguiente 'trocito' de musica que sera enviado al proxima vez
      50.  00:89D8  C3 2F 90            	JP		ayFX_PLAY			;calcula el siguiente 'trocito' de efecto especial de sonido que sera enviado la proxima vez
      51.  00:89DB                      fin_subrutina_isr:
      52.  00:89DB                      	;RET
      53.  00:89DB                      
      54.  00:89DB                      
      55.  00:89DB                      
      56.  00:89DB                      ;;=====================================================
      57.  00:89DB                      ;;DEFINICIÓN DE SUBRUTINAS DE FERNANDO PARA COMPRESIÓN Y SONIDO
      58.  00:89DB                      ;;=====================================================
      59.  00:89DB                      subrutinas_sonido:
      60.  00:89DB                      	include	"PT3-ROM_sjasm.asm"
       1:  00:89DB                      		; --- PT3 REPLAYER WORKING ON ROM ---
       2:  00:89DB                      		; --- Can be assembled with asMSX ---
       3:  00:89DB                      		; --- ROM version: MSX-KUN        ---
       4:  00:89DB                      		; --- asMSX version 2: SapphiRe   ---
       5:  00:89DB                      
       6:  00:89DB                      ; Based on MSX full version of PT3 by Dioniso
       7:  00:89DB                      ;
       8:  00:89DB                      ; This version of the replayer can be used with any note table
       9:  00:89DB                      ; This version also allows the use of PT3 commands
      10:  00:89DB                      ; First 99 bytes of each PT3 module should be stripped off
      11:  00:89DB                      ;
      12:  00:89DB                      ; PLAY and PSG WRITE routines seperated to allow independent calls
      13:  00:89DB                      ;
      14:  00:89DB                      ; ROM LENGTH: 1549 bytes
      15:  00:89DB                      ; RAM LENGTH:  576 bytes
      16:  00:89DB                      
      17:  00:89DB                      
      18:  00:89DB                      
      19:  00:89DB                      ;SJASM version by BTV 2016
      20:  00:89DB                      
      21:  00:89DB                      
      22:  00:89DB                      		; --- CONSTANT VALUES DEFINITION ---
      23:  00:89DB                      
      24:  00:89DB                      ;ChannelsVars
      25:  00:89DB                      ;struc	CHNPRM
      26:  00:89DB                      ;reset group
      27:  00:89DB  (00:0000)           CHNPRM_PsInOr	equ 0	;RESB 1
      28:  00:89DB  (00:0001)           CHNPRM_PsInSm	equ 1	;RESB 1
      29:  00:89DB  (00:0002)           CHNPRM_CrAmSl	equ 2	;RESB 1
      30:  00:89DB  (00:0003)           CHNPRM_CrNsSl	equ 3	;RESB 1
      31:  00:89DB  (00:0004)           CHNPRM_CrEnSl	equ 4	;RESB 1
      32:  00:89DB  (00:0005)           CHNPRM_TSlCnt	equ 5	;RESB 1
      33:  00:89DB  (00:0006)           CHNPRM_CrTnSl	equ 6	;RESW 1
      34:  00:89DB  (00:0008)           CHNPRM_TnAcc	equ 8	;RESW 1
      35:  00:89DB  (00:000A)           CHNPRM_COnOff	equ 10	;RESB 1
      36:  00:89DB                      ;reset group
      37:  00:89DB                      
      38:  00:89DB  (00:000B)           CHNPRM_OnOffD	equ 11	;RESB 1
      39:  00:89DB                      
      40:  00:89DB                      ;IX for PTDECOD here [+12]
      41:  00:89DB  (00:000C)           CHNPRM_OffOnD	equ 12	;RESB 1
      42:  00:89DB  (00:000D)           CHNPRM_OrnPtr	equ 13	;RESW 1
      43:  00:89DB  (00:000F)           CHNPRM_SamPtr	equ 15	;RESW 1
      44:  00:89DB  (00:0011)           CHNPRM_NNtSkp	equ 17	;RESB 1
      45:  00:89DB  (00:0012)           CHNPRM_Note	equ 18	;RESB 1
      46:  00:89DB  (00:0013)           CHNPRM_SlToNt	equ 19	;RESB 1
      47:  00:89DB  (00:0014)           CHNPRM_Env_En	equ 20	;RESB 1
      48:  00:89DB  (00:0015)           CHNPRM_Flags	equ 21	;RESB 1
      49:  00:89DB                       ;Enabled - 0,SimpleGliss - 2
      50:  00:89DB  (00:0016)           CHNPRM_TnSlDl	equ 22	;RESB 1
      51:  00:89DB  (00:0017)           CHNPRM_TSlStp	equ 23	;RESW 1
      52:  00:89DB  (00:0019)           CHNPRM_TnDelt	equ 25	;RESW 1
      53:  00:89DB  (00:001B)           CHNPRM_NtSkCn	equ 27	;RESB 1
      54:  00:89DB  (00:001C)           CHNPRM_Volume	equ 28	;RESB 1
      55:  00:89DB  (00:001D)           CHNPRM_Size	equ 29	;RESB 1
      56:  00:89DB                      ;endstruc
      57:  00:89DB                      
      58:  00:89DB                      ;struc	AR
      59:  00:89DB  (00:0000)           AR_TonA		equ 0	;RESW 1
      60:  00:89DB  (00:0002)           AR_TonB		equ 2	;RESW 1
      61:  00:89DB  (00:0004)           AR_TonC		equ 4	;RESW 1
      62:  00:89DB  (00:0006)           AR_Noise	equ 6	;RESB 1
      63:  00:89DB  (00:0007)           AR_Mixer	equ 7	;RESB 1
      64:  00:89DB  (00:0008)           AR_AmplA	equ 8	;RESB 1
      65:  00:89DB  (00:0009)           AR_AmplB	equ 9	;RESB 1
      66:  00:89DB  (00:000A)           AR_AmplC	equ 10	;RESB 1
      67:  00:89DB  (00:000B)           AR_Env		equ 11	;RESW 1
      68:  00:89DB  (00:000D)           AR_EnvTp	equ 13	;RESB 1
      69:  00:89DB                      ;endstruc
      70:  00:89DB                      
      71:  00:89DB                      		; --- CODE STARTS HERE ---
      72:  00:89DB                      
      73:  00:89DB  21 00 F0            CHECKLP:	LD	HL,PT3_SETUP
      74:  00:89DE  CB FE               		SET	7,[HL]
      75:  00:89E0  CB 46               		BIT	0,[HL]
      76:  00:89E2  C8                  		RET	Z
      77:  00:89E3  E1                  		POP	HL
      78:  00:89E4  21 7A F0            		LD	HL,DelyCnt
      79:  00:89E7  34                  		INC	[HL]
      80:  00:89E8  21 3E F0            		LD	HL,ChanA+CHNPRM_NtSkCn
      81:  00:89EB  34                  		INC	[HL]
      82:  00:89EC  AF                  PT3_MUTE:	XOR	A
      83:  00:89ED  67                  		LD	H,A
      84:  00:89EE  6F                  		LD	L,A
      85:  00:89EF  32 48 F1            		LD	[AYREGS+AR_AmplA],A
      86:  00:89F2  22 49 F1            		LD	[AYREGS+AR_AmplB],HL
      87:  00:89F5  C3 3E 8F            		JP	ROUT_A0
      88:  00:89F8                      
      89:  00:89F8                      PT3_INIT:	;HL - AddressOfModule - 100
      90:  00:89F8  22 01 F0            		LD [PT3_MODADDR],HL
      91:  00:89FB  E5                  		PUSH HL
      92:  00:89FC  11 64 00            		LD DE,100
      93:  00:89FF  19                  		ADD HL,DE
      94:  00:8A00  7E                  		LD A,[HL]
      95:  00:8A01  32 1C F0            		LD [PT3_Delay],A
      96:  00:8A04  E5                  		PUSH HL
      97:  00:8A05  DD E1               		POP IX
      98:  00:8A07  19                  		ADD HL,DE
      99:  00:8A08  22 03 F0            		LD [PT3_CrPsPtr],HL
     100:  00:8A0B  DD 5E 02            		LD E,[IX+102-100]
     101:  00:8A0E  19                  		ADD HL,DE
     102:  00:8A0F  23                  		INC HL
     103:  00:8A10  22 18 F0            		LD [PT3_LPosPtr],HL
     104:  00:8A13  D1                  		POP DE
     105:  00:8A14  DD 6E 03            		LD L,[IX+103-100]
     106:  00:8A17  DD 66 04            		LD H,[IX+104-100]
     107:  00:8A1A  19                  		ADD HL,DE
     108:  00:8A1B  22 1A F0            		LD [PT3_PatsPtr],HL
     109:  00:8A1E  21 A9 00            		LD HL,169
     110:  00:8A21  19                  		ADD HL,DE
     111:  00:8A22  22 07 F0            		LD [PT3_OrnPtrs],HL
     112:  00:8A25  21 69 00            		LD HL,105
     113:  00:8A28  19                  		ADD HL,DE
     114:  00:8A29  22 05 F0            		LD [PT3_SAMPTRS],HL
     115:  00:8A2C  21 00 F0            		LD HL,PT3_SETUP
     116:  00:8A2F  CB BE               		RES 7,[HL]
     117:  00:8A31                      
     118:  00:8A31                      		; --- note table data depacker ---
     119:  00:8A31                      		; Depacks first 12 tones of each tone table
     120:  00:8A31                      
     121:  00:8A31  11 B2 8F            		LD DE,T_PACK
     122:  00:8A34  01 B1 F1            		LD BC,T1_+(2*49)-1
     123:  00:8A37  1A                  .TP_0:		LD A,[DE]
     124:  00:8A38  13                  		INC DE
     125:  00:8A39  FE 1E               		CP 15*2
     126:  00:8A3B  30 06               		JR NC,.TP_1
     127:  00:8A3D  67                  		LD H,A
     128:  00:8A3E  1A                  		LD A,[DE]
     129:  00:8A3F  6F                  		LD L,A
     130:  00:8A40  13                  		INC DE
     131:  00:8A41  18 07               		JR .TP_2
     132:  00:8A43  D5                  .TP_1:		PUSH DE
     133:  00:8A44  16 00               		LD D,0
     134:  00:8A46  5F                  		LD E,A
     135:  00:8A47  19                  		ADD HL,DE
     136:  00:8A48  19                  		ADD HL,DE
     137:  00:8A49  D1                  		POP DE
     138:  00:8A4A  7C                  .TP_2:		LD A,H
     139:  00:8A4B  02                  		LD [BC],A
     140:  00:8A4C  0B                  		DEC BC
     141:  00:8A4D  7D                  		LD A,L
     142:  00:8A4E  02                  		LD [BC],A
     143:  00:8A4F  0B                  		DEC BC
     144:  00:8A50  D6 F0               		SUB $F0
     145:  00:8A52  20 E3               		JR NZ,.TP_0
     146:  00:8A54                      
     147:  00:8A54                      		; --- INITIALIZE PT3 VARIABLES ---
     148:  00:8A54  21 23 F0            		LD HL,VARS
     149:  00:8A57  77                  		LD [HL],A
     150:  00:8A58  11 24 F0            		LD DE,VARS+1
     151:  00:8A5B  01 2C 01            		LD BC,VAR0END-VARS-1
     152:  00:8A5E  ED B0               		LDIR
     153:  00:8A60                      
     154:  00:8A60  3C                  		INC A
     155:  00:8A61  32 7A F0            		LD [DelyCnt],A
     156:  00:8A64  21 01 F0            		LD HL,$F001 ;H - CHNPRM_Volume, L - CHNPRM_NtSkCn
     157:  00:8A67  22 3E F0            		LD [ChanA+CHNPRM_NtSkCn],HL
     158:  00:8A6A  22 5B F0            		LD [ChanB+CHNPRM_NtSkCn],HL
     159:  00:8A6D  22 78 F0            		LD [ChanC+CHNPRM_NtSkCn],HL
     160:  00:8A70                      
     161:  00:8A70  21 AE 8F            		LD HL,EMPTYSAMORN
     162:  00:8A73  22 12 F0            		LD [PT3_AdInPtA],HL ;ptr to zero
     163:  00:8A76  22 30 F0            		LD [ChanA+CHNPRM_OrnPtr],HL ;ornament 0 is "0,1,0"
     164:  00:8A79  22 4D F0            		LD [ChanB+CHNPRM_OrnPtr],HL ;in all versions from
     165:  00:8A7C  22 6A F0            		LD [ChanC+CHNPRM_OrnPtr],HL ;3.xx to 3.6x and VTII
     166:  00:8A7F                      
     167:  00:8A7F  22 32 F0            		LD [ChanA+CHNPRM_SamPtr],HL ;S1 There is no default
     168:  00:8A82  22 4F F0            		LD [ChanB+CHNPRM_SamPtr],HL ;S2 sample in PT3, so, you
     169:  00:8A85  22 6C F0            		LD [ChanC+CHNPRM_SamPtr],HL ;S3 can comment S1,2,3; see
     170:  00:8A88                      					    ;also EMPTYSAMORN comment
     171:  00:8A88                      
     172:  00:8A88                      		; --- NOTE TABLE CREATOR (c) Ivan Roshin, adapted by SapphiRe ---
     173:  00:8A88  DD 7E FF            		LD A,[IX+99-100] ;TONE TABLE NUMBER
     174:  00:8A8B  17                  		RLA
     175:  00:8A8C  E6 07               		AND 7
     176:  00:8A8E  21 5E 8F            		LD HL,NT_DATA
     177:  00:8A91  D5                  		PUSH DE
     178:  00:8A92  50                  		LD D,B		; ld d,0 (bc is 0000 after LDIR)
     179:  00:8A93  87                  		ADD A,A
     180:  00:8A94  5F                  		LD E,A
     181:  00:8A95  19                  		ADD HL,DE	; hl -> init of correct note table data
     182:  00:8A96  5E                  		LD E,[HL]
     183:  00:8A97  23                  		INC HL
     184:  00:8A98  CB 3B               		SRL E
     185:  00:8A9A  9F                  		SBC A,A
     186:  00:8A9B  E6 A7               		AND $A7			;$00 (NOP) or $A7 (AND A)
     187:  00:8A9D  32 21 F0            		LD [PT3_NTL3],A		; CORRECT INSTRUCTION, DEPENDS OF SELECTED TABLE
     188:  00:8AA0  3E C9               		LD A,$C9		; RET CODE
     189:  00:8AA2  32 22 F0            		LD [PT3_NTL3+1],A	; RET PLACED
     190:  00:8AA5  EB                  		EX DE,HL
     191:  00:8AA6  C1                  		POP BC ;BC=T1_
     192:  00:8AA7  09                  		ADD HL,BC
     193:  00:8AA8                      
     194:  00:8AA8  1A                  		LD A,[DE]                           
     195:  00:8AA9                      
     196:  00:8AA9  01 6E 8F            		LD BC,T_
     197:  00:8AAC  81                  		ADD A,C
     198:  00:8AAD  4F                  		LD C,A
     199:  00:8AAE  88                  		ADC A,B
     200:  00:8AAF                      
     201:  00:8AAF  91                  		SUB C
     202:  00:8AB0  47                  		LD B,A
     203:  00:8AB1  C5                  		PUSH BC
     204:  00:8AB2  11 80 F0            		LD DE,NT_
     205:  00:8AB5  D5                  		PUSH DE
     206:  00:8AB6                      
     207:  00:8AB6  06 0C               		LD B,12
     208:  00:8AB8  C5                  .L1:		PUSH BC
     209:  00:8AB9  4E                  		LD C,[HL]
     210:  00:8ABA  23                  		INC HL
     211:  00:8ABB  E5                  		PUSH HL
     212:  00:8ABC  46                  		LD B,[HL]
     213:  00:8ABD                      
     214:  00:8ABD  D5                  		PUSH DE
     215:  00:8ABE  EB                  		EX DE,HL
     216:  00:8ABF  11 17 00            		LD DE,23
     217:  00:8AC2  DD 26 08            		db $DD,$26,$08	;LD XH,8
     218:  00:8AC5                      
     219:  00:8AC5  CB 38               .L2:		SRL B
     220:  00:8AC7  CB 19               		RR C
     221:  00:8AC9  CD 21 F0            .L3:		CALL PT3_NTL3	;AND A or NOP
     222:  00:8ACC  79                  		LD A,C
     223:  00:8ACD  8A                  		ADC A,D	;=ADC 0
     224:  00:8ACE  77                  		LD [HL],A
     225:  00:8ACF  23                  		INC HL
     226:  00:8AD0  78                  		LD A,B
     227:  00:8AD1  8A                  		ADC A,D
     228:  00:8AD2  77                  		LD [HL],A
     229:  00:8AD3  19                  		ADD HL,DE
     230:  00:8AD4  DD 25               		db $DD,$25	;DEC XH
     231:  00:8AD6  20 ED               		JR NZ,.L2
     232:  00:8AD8                      
     233:  00:8AD8  D1                  		POP DE
     234:  00:8AD9  13                  		INC DE
     235:  00:8ADA  13                  		INC DE
     236:  00:8ADB  E1                  		POP HL
     237:  00:8ADC  23                  		INC HL
     238:  00:8ADD  C1                  		POP BC
     239:  00:8ADE  10 D8               		DJNZ .L1
     240:  00:8AE0                      
     241:  00:8AE0  E1                  		POP HL
     242:  00:8AE1  D1                  		POP DE
     243:  00:8AE2                      
     244:  00:8AE2  7B                  		LD A,E
     245:  00:8AE3  D5                  		PUSH DE
     246:  00:8AE4  11 7A 8F            		LD DE,TCOLD_1
     247:  00:8AE7  BB                  		CP E
     248:  00:8AE8  D1                  		POP DE
     249:  00:8AE9  20 05               		JR NZ,.CORR_1
     250:  00:8AEB  3E FD               		LD A,$FD
     251:  00:8AED  32 AE F0            		LD [NT_+$2E],A
     252:  00:8AF0                      
     253:  00:8AF0  1A                  .CORR_1:	LD A,[DE]
     254:  00:8AF1  A7                  		AND A
     255:  00:8AF2  28 11               		JR Z,.TC_EXIT
     256:  00:8AF4  1F                  		RRA
     257:  00:8AF5  F5                  		PUSH AF
     258:  00:8AF6  87                  		ADD A,A
     259:  00:8AF7  4F                  		LD C,A
     260:  00:8AF8  09                  		ADD HL,BC
     261:  00:8AF9  F1                  		POP AF
     262:  00:8AFA  30 02               		JR NC,.CORR_2
     263:  00:8AFC  35                  		DEC [HL]
     264:  00:8AFD  35                  		DEC [HL]
     265:  00:8AFE  34                  .CORR_2:	INC [HL]
     266:  00:8AFF  A7                  		AND A
     267:  00:8B00  ED 42               		SBC HL,BC
     268:  00:8B02  13                  		INC DE
     269:  00:8B03  18 EB               		JR .CORR_1
     270:  00:8B05                      
     271:  00:8B05                      .TC_EXIT:	;POP AF
     272:  00:8B05                      
     273:  00:8B05                      		; --- CREATE PT3 VOLUME TABLE (c) Ivan Roshin, adapted by SapphiRe ---
     274:  00:8B05  21 11 00            		ld	hl,$11
     275:  00:8B08  54                  		ld	d,h
     276:  00:8B09  5C                  		ld	e,h
     277:  00:8B0A  DD 21 50 F1         		ld	IX,VT_+16
     278:  00:8B0E  06 0F               		ld	b,15
     279:  00:8B10  E5                  .INITV1:	push	hl
     280:  00:8B11  19                  		add	hl,de
     281:  00:8B12  EB                  		ex	de,hl
     282:  00:8B13  ED 62               		sbc	hl,hl
     283:  00:8B15  48                  		ld	c,b
     284:  00:8B16  06 10               		ld	b,16
     285:  00:8B18  7D                  .INITV2:	ld	a,l
     286:  00:8B19  17                  		rla
     287:  00:8B1A  7C                  		ld	a,h
     288:  00:8B1B  CE 00               		adc	a,0
     289:  00:8B1D  DD 77 00            		ld	[ix],a
     290:  00:8B20  DD 23               		inc	ix
     291:  00:8B22  19                  		add	hl,de
     292:  00:8B23  10 F3               		djnz	.INITV2
     293:  00:8B25  E1                  		pop	hl
     294:  00:8B26  7B                  		ld	a,e
     295:  00:8B27  FE 77               		cp	$77
     296:  00:8B29  20 01               		jr	nz,.INITV3
     297:  00:8B2B  1C                  		inc	e
     298:  00:8B2C  41                  .INITV3:	ld	b,c
     299:  00:8B2D  10 E1               		djnz	.INITV1
     300:  00:8B2F                      
     301:  00:8B2F  C9                  		RET
     302:  00:8B30                      
     303:  00:8B30                      		;pattern decoder
     304:  00:8B30  DD 36 08 00         PD_OrSm:	LD [IX+(CHNPRM_Env_En-12)],0
     305:  00:8B34  CD BA 8C            		CALL SETORN
     306:  00:8B37  0A                  		LD A,[BC]
     307:  00:8B38  03                  		INC BC
     308:  00:8B39  0F                  		RRCA
     309:  00:8B3A                      
     310:  00:8B3A  87                  PD_SAM:		ADD A,A
     311:  00:8B3B  5F                  PD_SAM_:	LD E,A
     312:  00:8B3C  16 00               		LD D,0
     313:  00:8B3E  2A 05 F0            		LD HL,[PT3_SAMPTRS]
     314:  00:8B41  19                  		ADD HL,DE
     315:  00:8B42  5E                  		LD E,[HL]
     316:  00:8B43  23                  		INC HL
     317:  00:8B44  56                  		LD D,[HL]
     318:  00:8B45  2A 01 F0            		LD HL,[PT3_MODADDR]
     319:  00:8B48  19                  		ADD HL,DE
     320:  00:8B49  DD 75 03            		LD [IX+(CHNPRM_SamPtr-12)],L
     321:  00:8B4C  DD 74 04            		LD [IX+(CHNPRM_SamPtr+1-12)],H
     322:  00:8B4F  18 41               		JR PD_LOOP
     323:  00:8B51                      
     324:  00:8B51  07                  PD_VOL:		RLCA
     325:  00:8B52  07                  		RLCA
     326:  00:8B53  07                  		RLCA
     327:  00:8B54  07                  		RLCA
     328:  00:8B55  DD 77 10            		LD [IX+(CHNPRM_Volume-12)],A
     329:  00:8B58  18 3B               		JR PD_LP2
     330:  00:8B5A                      	
     331:  00:8B5A  DD 77 08            PD_EOff:	LD [IX+(CHNPRM_Env_En-12)],A
     332:  00:8B5D  DD 77 F4            		LD [IX+(CHNPRM_PsInOr-12)],A
     333:  00:8B60  18 33               		JR PD_LP2
     334:  00:8B62                      
     335:  00:8B62  3D                  PD_SorE:	DEC A
     336:  00:8B63  20 07               		JR NZ,PD_ENV
     337:  00:8B65  0A                  		LD A,[BC]
     338:  00:8B66  03                  		INC BC
     339:  00:8B67  DD 77 05            		LD [IX+(CHNPRM_NNtSkp-12)],A
     340:  00:8B6A  18 29               		JR PD_LP2
     341:  00:8B6C                      
     342:  00:8B6C  CD 9E 8C            PD_ENV:		CALL SETENV
     343:  00:8B6F  18 24               		JR PD_LP2
     344:  00:8B71                      
     345:  00:8B71  CD BA 8C            PD_ORN:		CALL SETORN
     346:  00:8B74  18 1C               		JR PD_LOOP
     347:  00:8B76                             
     348:  00:8B76  DD 77 08            PD_ESAM:	LD [IX+(CHNPRM_Env_En-12)],A
     349:  00:8B79  DD 77 F4            		LD [IX+(CHNPRM_PsInOr-12)],A
     350:  00:8B7C  C4 9E 8C            		CALL NZ,SETENV
     351:  00:8B7F  0A                  		LD A,[BC]
     352:  00:8B80  03                  		INC BC
     353:  00:8B81  18 B8               		JR PD_SAM_
     354:  00:8B83                      
     355:  00:8B83  DD 7E 06            PTDECOD:	LD A,[IX+(CHNPRM_Note-12)]
     356:  00:8B86  32 0F F0            		LD [PT3_PrNote],A
     357:  00:8B89  DD 6E FA            		LD L,[IX+(CHNPRM_CrTnSl-12)]
     358:  00:8B8C  DD 66 FB            		LD H,[IX+(CHNPRM_CrTnSl+1-12)]
     359:  00:8B8F  22 10 F0            		LD [PT3_PrSlide],HL
     360:  00:8B92                      
     361:  00:8B92  11 10 20            PD_LOOP:	LD DE,$2010
     362:  00:8B95  0A                  PD_LP2:		LD A,[BC]
     363:  00:8B96  03                  		INC BC
     364:  00:8B97  83                  		ADD A,E
     365:  00:8B98  38 96               		JR C,PD_OrSm
     366:  00:8B9A  82                  		ADD A,D
     367:  00:8B9B  28 4A               		JR Z,PD_FIN
     368:  00:8B9D  38 9B               		JR C,PD_SAM
     369:  00:8B9F  83                  		ADD A,E
     370:  00:8BA0  28 25               		JR Z,PD_REL
     371:  00:8BA2  38 AD               		JR C,PD_VOL
     372:  00:8BA4  83                  		ADD A,E
     373:  00:8BA5  28 B3               		JR Z,PD_EOff
     374:  00:8BA7  38 B9               		JR C,PD_SorE
     375:  00:8BA9  C6 60               		ADD A,96
     376:  00:8BAB  38 20               		JR C,PD_NOTE
     377:  00:8BAD  83                  		ADD A,E
     378:  00:8BAE  38 C1               		JR C,PD_ORN
     379:  00:8BB0  82                  		ADD A,D
     380:  00:8BB1  38 0F               		JR C,PD_NOIS
     381:  00:8BB3  83                  		ADD A,E
     382:  00:8BB4  38 C0               		JR C,PD_ESAM
     383:  00:8BB6  87                  		ADD A,A
     384:  00:8BB7  5F                  		LD E,A
     385:  00:8BB8  21 F3 6B            		LD HL,(SPCCOMS+$DF20) % 65536	; Adapted from original Speccy version (saves 6 bytes)
     386:  00:8BBB  19                  		ADD HL,DE
     387:  00:8BBC  5E                  		LD E,[HL]
     388:  00:8BBD  23                  		INC HL
     389:  00:8BBE  56                  		LD D,[HL]
     390:  00:8BBF  D5                  		PUSH DE
     391:  00:8BC0  18 D0               		JR PD_LOOP
     392:  00:8BC2                      
     393:  00:8BC2  32 7E F0            PD_NOIS:	LD [Ns_Base],A
     394:  00:8BC5  18 CE               		JR PD_LP2
     395:  00:8BC7                      
     396:  00:8BC7  DD CB 09 86         PD_REL:		RES 0,[IX+(CHNPRM_Flags-12)]
     397:  00:8BCB  18 08               		JR PD_RES
     398:  00:8BCD                      	
     399:  00:8BCD  DD 77 06            PD_NOTE:	LD [IX+(CHNPRM_Note-12)],A
     400:  00:8BD0  DD CB 09 C6         		SET 0,[IX+(CHNPRM_Flags-12)]
     401:  00:8BD4  AF                  		XOR A
     402:  00:8BD5                      
     403:  00:8BD5  ED 73 09 F0         PD_RES:		LD [PT3_PDSP],SP
     404:  00:8BD9  DD F9               		LD SP,IX
     405:  00:8BDB  67                  		LD H,A
     406:  00:8BDC  6F                  		LD L,A
     407:  00:8BDD  E5                  		PUSH HL
     408:  00:8BDE  E5                  		PUSH HL
     409:  00:8BDF  E5                  		PUSH HL
     410:  00:8BE0  E5                  		PUSH HL
     411:  00:8BE1  E5                  		PUSH HL
     412:  00:8BE2  E5                  		PUSH HL
     413:  00:8BE3  ED 7B 09 F0         		LD SP,[PT3_PDSP]
     414:  00:8BE7                      
     415:  00:8BE7  DD 7E 05            PD_FIN:		LD A,[IX+(CHNPRM_NNtSkp-12)]
     416:  00:8BEA  DD 77 0F            		LD [IX+(CHNPRM_NtSkCn-12)],A
     417:  00:8BED  C9                  		RET
     418:  00:8BEE                      
     419:  00:8BEE  DD CB 09 96         C_PORTM:	RES 2,[IX+(CHNPRM_Flags-12)]
     420:  00:8BF2  0A                  		LD A,[BC]
     421:  00:8BF3  03                  		INC BC
     422:  00:8BF4                      		;SKIP PRECALCULATED TONE DELTA [BECAUSE
     423:  00:8BF4                      		;CANNOT BE RIGHT AFTER PT3 COMPILATION]
     424:  00:8BF4  03                  		INC BC
     425:  00:8BF5  03                  		INC BC
     426:  00:8BF6  DD 77 0A            		LD [IX+(CHNPRM_TnSlDl-12)],A
     427:  00:8BF9  DD 77 F9            		LD [IX+(CHNPRM_TSlCnt-12)],A
     428:  00:8BFC  11 80 F0            		LD DE,NT_
     429:  00:8BFF  DD 7E 06            		LD A,[IX+(CHNPRM_Note-12)]
     430:  00:8C02  DD 77 07            		LD [IX+(CHNPRM_SlToNt-12)],A
     431:  00:8C05  87                  		ADD A,A
     432:  00:8C06  6F                  		LD L,A
     433:  00:8C07  26 00               		LD H,0
     434:  00:8C09  19                  		ADD HL,DE
     435:  00:8C0A  7E                  		LD A,[HL]
     436:  00:8C0B  23                  		INC HL
     437:  00:8C0C  66                  		LD H,[HL]
     438:  00:8C0D  6F                  		LD L,A
     439:  00:8C0E  E5                  		PUSH HL
     440:  00:8C0F  3A 0F F0            		LD A,[PT3_PrNote]
     441:  00:8C12  DD 77 06            		LD [IX+(CHNPRM_Note-12)],A
     442:  00:8C15  87                  		ADD A,A
     443:  00:8C16  6F                  		LD L,A
     444:  00:8C17  26 00               		LD H,0
     445:  00:8C19  19                  		ADD HL,DE
     446:  00:8C1A  5E                  		LD E,[HL]
     447:  00:8C1B  23                  		INC HL
     448:  00:8C1C  56                  		LD D,[HL]
     449:  00:8C1D  E1                  		POP HL
     450:  00:8C1E  ED 52               		SBC HL,DE
     451:  00:8C20  DD 75 0D            		LD [IX+(CHNPRM_TnDelt-12)],L
     452:  00:8C23  DD 74 0E            		LD [IX+(CHNPRM_TnDelt+1-12)],H
     453:  00:8C26  ED 5B 10 F0         		LD DE,[PT3_PrSlide]
     454:  00:8C2A  DD 73 FA            		LD [IX+(CHNPRM_CrTnSl-12)],E
     455:  00:8C2D  DD 72 FB            		LD [IX+(CHNPRM_CrTnSl+1-12)],D
     456:  00:8C30  0A                  		LD A,[BC] ;SIGNED TONE STEP
     457:  00:8C31  03                  		INC BC
     458:  00:8C32  08                  		EX AF,AF'
     459:  00:8C33  0A                  		LD A,[BC]
     460:  00:8C34  03                  		INC BC
     461:  00:8C35  A7                  		AND A
     462:  00:8C36  28 01               		JR Z,.NOSIG
     463:  00:8C38  EB                  		EX DE,HL
     464:  00:8C39  ED 52               .NOSIG:	SBC HL,DE
     465:  00:8C3B  F2 43 8C            		JP P,SET_STP
     466:  00:8C3E  2F                  		CPL
     467:  00:8C3F  08                  		EX AF,AF'
     468:  00:8C40  ED 44               		NEG
     469:  00:8C42  08                  		EX AF,AF'
     470:  00:8C43  DD 77 0C            SET_STP:	LD [IX+(CHNPRM_TSlStp+1-12)],A
     471:  00:8C46  08                  		EX AF,AF'
     472:  00:8C47  DD 77 0B            		LD [IX+(CHNPRM_TSlStp-12)],A
     473:  00:8C4A  DD 36 FE 00         		LD [IX+(CHNPRM_COnOff-12)],0
     474:  00:8C4E  C9                  		RET
     475:  00:8C4F                      
     476:  00:8C4F  DD CB 09 D6         C_GLISS:	SET 2,[IX+(CHNPRM_Flags-12)]
     477:  00:8C53  0A                  		LD A,[BC]
     478:  00:8C54  03                  		INC BC
     479:  00:8C55  DD 77 0A            		LD [IX+(CHNPRM_TnSlDl-12)],A
     480:  00:8C58  DD 77 F9            		LD [IX+(CHNPRM_TSlCnt-12)],A
     481:  00:8C5B  0A                  		LD A,[BC]
     482:  00:8C5C  03                  		INC BC
     483:  00:8C5D  08                  		EX AF,AF'
     484:  00:8C5E  0A                  		LD A,[BC]
     485:  00:8C5F  03                  		INC BC
     486:  00:8C60  18 E1               		JR SET_STP
     487:  00:8C62                      
     488:  00:8C62  0A                  C_SMPOS:	LD A,[BC]
     489:  00:8C63  03                  		INC BC
     490:  00:8C64  DD 77 F5            		LD [IX+(CHNPRM_PsInSm-12)],A
     491:  00:8C67  C9                  		RET
     492:  00:8C68                      
     493:  00:8C68  0A                  C_ORPOS:	LD A,[BC]
     494:  00:8C69  03                  		INC BC
     495:  00:8C6A  DD 77 F4            		LD [IX+(CHNPRM_PsInOr-12)],A
     496:  00:8C6D  C9                  		RET
     497:  00:8C6E                      
     498:  00:8C6E  0A                  C_VIBRT:	LD A,[BC]
     499:  00:8C6F  03                  		INC BC
     500:  00:8C70  DD 77 FF            		LD [IX+(CHNPRM_OnOffD-12)],A
     501:  00:8C73  DD 77 FE            		LD [IX+(CHNPRM_COnOff-12)],A
     502:  00:8C76  0A                  		LD A,[BC]
     503:  00:8C77  03                  		INC BC
     504:  00:8C78  DD 77 00            		LD [IX+(CHNPRM_OffOnD-12)],A
     505:  00:8C7B  AF                  		XOR A
     506:  00:8C7C  DD 77 F9            		LD [IX+(CHNPRM_TSlCnt-12)],A
     507:  00:8C7F  DD 77 FA            		LD [IX+(CHNPRM_CrTnSl-12)],A
     508:  00:8C82  DD 77 FB            		LD [IX+(CHNPRM_CrTnSl+1-12)],A
     509:  00:8C85  C9                  		RET
     510:  00:8C86                      
     511:  00:8C86  0A                  C_ENGLS:	LD A,[BC]
     512:  00:8C87  03                  		INC BC
     513:  00:8C88  32 1E F0            		LD [PT3_Env_Del],A
     514:  00:8C8B  32 7D F0            		LD [CurEDel],A
     515:  00:8C8E  0A                  		LD A,[BC]
     516:  00:8C8F  03                  		INC BC
     517:  00:8C90  6F                  		LD L,A
     518:  00:8C91  0A                  		LD A,[BC]
     519:  00:8C92  03                  		INC BC
     520:  00:8C93  67                  		LD H,A
     521:  00:8C94  22 1F F0            		LD [PT3_ESldAdd],HL
     522:  00:8C97  C9                  		RET
     523:  00:8C98                      
     524:  00:8C98  0A                  C_DELAY:	LD A,[BC]
     525:  00:8C99  03                  		INC BC
     526:  00:8C9A  32 1C F0            		LD [PT3_Delay],A
     527:  00:8C9D  C9                  		RET
     528:  00:8C9E                      	
     529:  00:8C9E  DD 73 08            SETENV:		LD [IX+(CHNPRM_Env_En-12)],E
     530:  00:8CA1  32 4D F1            		LD [AYREGS+AR_EnvTp],A
     531:  00:8CA4  0A                  		LD A,[BC]
     532:  00:8CA5  03                  		INC BC
     533:  00:8CA6  67                  		LD H,A
     534:  00:8CA7  0A                  		LD A,[BC]
     535:  00:8CA8  03                  		INC BC
     536:  00:8CA9  6F                  		LD L,A
     537:  00:8CAA  22 4E F1            		LD [EnvBase],HL
     538:  00:8CAD  AF                  		XOR A
     539:  00:8CAE  DD 77 F4            		LD [IX+(CHNPRM_PsInOr-12)],A
     540:  00:8CB1  32 7D F0            		LD [CurEDel],A
     541:  00:8CB4  67                  		LD H,A
     542:  00:8CB5  6F                  		LD L,A
     543:  00:8CB6  22 7B F0            		LD [CurESld],HL
     544:  00:8CB9  C9                  C_NOP:		RET
     545:  00:8CBA                      
     546:  00:8CBA  87                  SETORN:		ADD A,A
     547:  00:8CBB  5F                  		LD E,A
     548:  00:8CBC  16 00               		LD D,0
     549:  00:8CBE  DD 72 F4            		LD [IX+(CHNPRM_PsInOr-12)],D
     550:  00:8CC1  2A 07 F0            		LD HL,[PT3_OrnPtrs]
     551:  00:8CC4  19                  		ADD HL,DE
     552:  00:8CC5  5E                  		LD E,[HL]
     553:  00:8CC6  23                  		INC HL
     554:  00:8CC7  56                  		LD D,[HL]
     555:  00:8CC8  2A 01 F0            		LD HL,[PT3_MODADDR]
     556:  00:8CCB  19                  		ADD HL,DE
     557:  00:8CCC  DD 75 01            		LD [IX+(CHNPRM_OrnPtr-12)],L
     558:  00:8CCF  DD 74 02            		LD [IX+(CHNPRM_OrnPtr+1-12)],H
     559:  00:8CD2  C9                  		RET
     560:  00:8CD3                      
     561:  00:8CD3                      		;ALL 16 ADDRESSES TO PROTECT FROM BROKEN PT3 MODULES
     562:  00:8CD3  B9 8C               SPCCOMS:	dw C_NOP
     563:  00:8CD5  4F 8C               		dw C_GLISS
     564:  00:8CD7  EE 8B               		dw C_PORTM
     565:  00:8CD9  62 8C               		dw C_SMPOS
     566:  00:8CDB  68 8C               		dw C_ORPOS
     567:  00:8CDD  6E 8C               		dw C_VIBRT
     568:  00:8CDF  B9 8C               		dw C_NOP
     569:  00:8CE1  B9 8C               		dw C_NOP
     570:  00:8CE3  86 8C               		dw C_ENGLS
     571:  00:8CE5  98 8C               		dw C_DELAY
     572:  00:8CE7  B9 8C               		dw C_NOP
     573:  00:8CE9  B9 8C               		dw C_NOP
     574:  00:8CEB  B9 8C               		dw C_NOP
     575:  00:8CED  B9 8C               		dw C_NOP
     576:  00:8CEF  B9 8C               		dw C_NOP
     577:  00:8CF1  B9 8C               		dw C_NOP
     578:  00:8CF3                      
     579:  00:8CF3  AF                  CHREGS:		XOR A
     580:  00:8CF4  32 4A F1            		LD [AYREGS+AR_AmplC],A
     581:  00:8CF7  DD CB 15 46         		BIT 0,[IX+CHNPRM_Flags]
     582:  00:8CFB  E5                  		PUSH HL
     583:  00:8CFC  CA 22 8E            		JP Z,.CH_EXIT
     584:  00:8CFF  ED 73 0B F0         		LD [PT3_CSP],SP
     585:  00:8D03  DD 6E 0D            		LD L,[IX+CHNPRM_OrnPtr]
     586:  00:8D06  DD 66 0E            		LD H,[IX+CHNPRM_OrnPtr+1]
     587:  00:8D09  F9                  		LD SP,HL
     588:  00:8D0A  D1                  		POP DE
     589:  00:8D0B  67                  		LD H,A
     590:  00:8D0C  DD 7E 00            		LD A,[IX+CHNPRM_PsInOr]
     591:  00:8D0F  6F                  		LD L,A
     592:  00:8D10  39                  		ADD HL,SP
     593:  00:8D11  3C                  		INC A
     594:  00:8D12  BA                  		CP D
     595:  00:8D13  38 01               		JR C,.CH_ORPS
     596:  00:8D15  7B                  		LD A,E
     597:  00:8D16  DD 77 00            .CH_ORPS:	LD [IX+CHNPRM_PsInOr],A
     598:  00:8D19  DD 7E 12            		LD A,[IX+CHNPRM_Note]
     599:  00:8D1C  86                  		ADD A,[HL]
     600:  00:8D1D  F2 21 8D            		JP P,.CH_NTP
     601:  00:8D20  AF                  		XOR A
     602:  00:8D21  FE 60               .CH_NTP:	CP 96
     603:  00:8D23  38 02               		JR C,.CH_NOK
     604:  00:8D25  3E 5F               		LD A,95
     605:  00:8D27  87                  .CH_NOK:	ADD A,A
     606:  00:8D28  08                  		EX AF,AF'
     607:  00:8D29  DD 6E 0F            		LD L,[IX+CHNPRM_SamPtr]
     608:  00:8D2C  DD 66 10            		LD H,[IX+CHNPRM_SamPtr+1]
     609:  00:8D2F  F9                  		LD SP,HL
     610:  00:8D30  D1                  		POP DE
     611:  00:8D31  26 00               		LD H,0
     612:  00:8D33  DD 7E 01            		LD A,[IX+CHNPRM_PsInSm]
     613:  00:8D36  47                  		LD B,A
     614:  00:8D37  87                  		ADD A,A
     615:  00:8D38  87                  		ADD A,A
     616:  00:8D39  6F                  		LD L,A
     617:  00:8D3A  39                  		ADD HL,SP
     618:  00:8D3B  F9                  		LD SP,HL
     619:  00:8D3C  78                  		LD A,B
     620:  00:8D3D  3C                  		INC A
     621:  00:8D3E  BA                  		CP D
     622:  00:8D3F  38 01               		JR C,.CH_SMPS
     623:  00:8D41  7B                  		LD A,E
     624:  00:8D42  DD 77 01            .CH_SMPS:	LD [IX+CHNPRM_PsInSm],A
     625:  00:8D45  C1                  		POP BC
     626:  00:8D46  E1                  		POP HL
     627:  00:8D47  DD 5E 08            		LD E,[IX+CHNPRM_TnAcc]
     628:  00:8D4A  DD 56 09            		LD D,[IX+CHNPRM_TnAcc+1]
     629:  00:8D4D  19                  		ADD HL,DE
     630:  00:8D4E  CB 70               		BIT 6,B
     631:  00:8D50  28 06               		JR Z,.CH_NOAC
     632:  00:8D52  DD 75 08            		LD [IX+CHNPRM_TnAcc],L
     633:  00:8D55  DD 74 09            		LD [IX+CHNPRM_TnAcc+1],H
     634:  00:8D58  EB                  .CH_NOAC:	EX DE,HL
     635:  00:8D59  08                  		EX AF,AF'
     636:  00:8D5A  6F                  		LD L,A
     637:  00:8D5B  26 00               		LD H,0
     638:  00:8D5D  31 80 F0            		LD SP,NT_
     639:  00:8D60  39                  		ADD HL,SP
     640:  00:8D61  F9                  		LD SP,HL
     641:  00:8D62  E1                  		POP HL
     642:  00:8D63  19                  		ADD HL,DE
     643:  00:8D64  DD 5E 06            		LD E,[IX+CHNPRM_CrTnSl]
     644:  00:8D67  DD 56 07            		LD D,[IX+CHNPRM_CrTnSl+1]
     645:  00:8D6A  19                  		ADD HL,DE
     646:  00:8D6B  ED 7B 0B F0         		LD SP,[PT3_CSP]
     647:  00:8D6F  E3                  		EX [SP],HL
     648:  00:8D70  AF                  		XOR A
     649:  00:8D71  DD B6 05            		OR [IX+CHNPRM_TSlCnt]
     650:  00:8D74  28 3E               		JR Z,.CH_AMP
     651:  00:8D76  DD 35 05            		DEC [IX+CHNPRM_TSlCnt]
     652:  00:8D79  20 39               		JR NZ,.CH_AMP
     653:  00:8D7B  DD 7E 16            		LD A,[IX+CHNPRM_TnSlDl]
     654:  00:8D7E  DD 77 05            		LD [IX+CHNPRM_TSlCnt],A
     655:  00:8D81  DD 6E 17            		LD L,[IX+CHNPRM_TSlStp]
     656:  00:8D84  DD 66 18            		LD H,[IX+CHNPRM_TSlStp+1]
     657:  00:8D87  7C                  		LD A,H
     658:  00:8D88  19                  		ADD HL,DE
     659:  00:8D89  DD 75 06            		LD [IX+CHNPRM_CrTnSl],L
     660:  00:8D8C  DD 74 07            		LD [IX+CHNPRM_CrTnSl+1],H
     661:  00:8D8F  DD CB 15 56         		BIT 2,[IX+CHNPRM_Flags]
     662:  00:8D93  20 1F               		JR NZ,.CH_AMP
     663:  00:8D95  DD 5E 19            		LD E,[IX+CHNPRM_TnDelt]
     664:  00:8D98  DD 56 1A            		LD D,[IX+CHNPRM_TnDelt+1]
     665:  00:8D9B  A7                  		AND A
     666:  00:8D9C  28 01               		JR Z,.CH_STPP
     667:  00:8D9E  EB                  		EX DE,HL
     668:  00:8D9F  ED 52               .CH_STPP:	SBC HL,DE
     669:  00:8DA1  FA B4 8D            		JP M,.CH_AMP
     670:  00:8DA4  DD 7E 13            		LD A,[IX+CHNPRM_SlToNt]
     671:  00:8DA7  DD 77 12            		LD [IX+CHNPRM_Note],A
     672:  00:8DAA  AF                  		XOR A
     673:  00:8DAB  DD 77 05            		LD [IX+CHNPRM_TSlCnt],A
     674:  00:8DAE  DD 77 06            		LD [IX+CHNPRM_CrTnSl],A
     675:  00:8DB1  DD 77 07            		LD [IX+CHNPRM_CrTnSl+1],A
     676:  00:8DB4  DD 7E 02            .CH_AMP:	LD A,[IX+CHNPRM_CrAmSl]
     677:  00:8DB7  CB 79               		BIT 7,C
     678:  00:8DB9  28 13               		JR Z,.CH_NOAM
     679:  00:8DBB  CB 71               		BIT 6,C
     680:  00:8DBD  28 07               		JR Z,.CH_AMIN
     681:  00:8DBF  FE 0F               		CP 15
     682:  00:8DC1  28 0B               		JR Z,.CH_NOAM
     683:  00:8DC3  3C                  		INC A
     684:  00:8DC4  18 05               		JR .CH_SVAM
     685:  00:8DC6  FE F1               .CH_AMIN:	CP -15
     686:  00:8DC8  28 04               		JR Z,.CH_NOAM
     687:  00:8DCA  3D                  		DEC A
     688:  00:8DCB  DD 77 02            .CH_SVAM:	LD [IX+CHNPRM_CrAmSl],A
     689:  00:8DCE  6F                  .CH_NOAM:	LD L,A
     690:  00:8DCF  78                  		LD A,B
     691:  00:8DD0  E6 0F               		AND 15
     692:  00:8DD2  85                  		ADD A,L
     693:  00:8DD3  F2 D7 8D            		JP P,.CH_APOS
     694:  00:8DD6  AF                  		XOR A
     695:  00:8DD7  FE 10               .CH_APOS:	CP 16
     696:  00:8DD9  38 02               		JR C,.CH_VOL
     697:  00:8DDB  3E 0F               		LD A,15
     698:  00:8DDD  DD B6 1C            .CH_VOL:	OR [IX+CHNPRM_Volume]
     699:  00:8DE0  6F                  		LD L,A
     700:  00:8DE1  26 00               		LD H,0
     701:  00:8DE3  11 40 F1            		LD DE,VT_
     702:  00:8DE6  19                  		ADD HL,DE
     703:  00:8DE7  7E                  		LD A,[HL]
     704:  00:8DE8  CB 41               .CH_ENV:	BIT 0,C
     705:  00:8DEA  20 03               		JR NZ,.CH_NOEN
     706:  00:8DEC  DD B6 14            		OR [IX+CHNPRM_Env_En]
     707:  00:8DEF  32 4A F1            .CH_NOEN:	LD [AYREGS+AR_AmplC],A
     708:  00:8DF2  CB 78               		BIT 7,B
     709:  00:8DF4  79                  		LD A,C
     710:  00:8DF5  28 19               		JR Z,.NO_ENSL
     711:  00:8DF7  17                  		RLA
     712:  00:8DF8  17                  		RLA
     713:  00:8DF9  CB 2F               		SRA A
     714:  00:8DFB  CB 2F               		SRA A
     715:  00:8DFD  CB 2F               		SRA A
     716:  00:8DFF  DD 86 04            		ADD A,[IX+CHNPRM_CrEnSl] ;SEE COMMENT BELOW
     717:  00:8E02  CB 68               		BIT 5,B
     718:  00:8E04  28 03               		JR Z,.NO_ENAC
     719:  00:8E06  DD 77 04            		LD [IX+CHNPRM_CrEnSl],A
     720:  00:8E09  21 1D F0            .NO_ENAC:	LD HL,PT3_AddToEn
     721:  00:8E0C  86                  		ADD A,[HL] ;BUG IN PT3 - NEED WORD HERE.
     722:  00:8E0D                      			   ;FIX IT IN NEXT VERSION?
     723:  00:8E0D  77                  		LD [HL],A
     724:  00:8E0E  18 0E               		JR .CH_MIX
     725:  00:8E10  1F                  .NO_ENSL:	RRA
     726:  00:8E11  DD 86 03            		ADD A,[IX+CHNPRM_CrNsSl]
     727:  00:8E14  32 7F F0            		LD [AddToNs],A
     728:  00:8E17  CB 68               		BIT 5,B
     729:  00:8E19  28 03               		JR Z,.CH_MIX
     730:  00:8E1B  DD 77 03            		LD [IX+CHNPRM_CrNsSl],A
     731:  00:8E1E  78                  .CH_MIX:	LD A,B
     732:  00:8E1F  1F                  		RRA
     733:  00:8E20  E6 48               		AND $48
     734:  00:8E22  21 47 F1            .CH_EXIT:	LD HL,AYREGS+AR_Mixer
     735:  00:8E25  B6                  		OR [HL]
     736:  00:8E26  0F                  		RRCA
     737:  00:8E27  77                  		LD [HL],A
     738:  00:8E28  E1                  		POP HL
     739:  00:8E29  AF                  		XOR A
     740:  00:8E2A  DD B6 0A            		OR [IX+CHNPRM_COnOff]
     741:  00:8E2D  C8                  		RET Z
     742:  00:8E2E  DD 35 0A            		DEC [IX+CHNPRM_COnOff]
     743:  00:8E31  C0                  		RET NZ
     744:  00:8E32  DD AE 15            		XOR [IX+CHNPRM_Flags]
     745:  00:8E35  DD 77 15            		LD [IX+CHNPRM_Flags],A
     746:  00:8E38  1F                  		RRA
     747:  00:8E39  DD 7E 0B            		LD A,[IX+CHNPRM_OnOffD]
     748:  00:8E3C  38 03               		JR C,.CH_ONDL
     749:  00:8E3E  DD 7E 0C            		LD A,[IX+CHNPRM_OffOnD]
     750:  00:8E41  DD 77 0A            .CH_ONDL:	LD [IX+CHNPRM_COnOff],A
     751:  00:8E44  C9                  		RET
     752:  00:8E45                      
     753:  00:8E45  AF                  PT3_PLAY:	XOR A
     754:  00:8E46  32 1D F0            		LD [PT3_AddToEn],A
     755:  00:8E49  32 47 F1            		LD [AYREGS+AR_Mixer],A
     756:  00:8E4C  3D                  		DEC A
     757:  00:8E4D  32 4D F1            		LD [AYREGS+AR_EnvTp],A
     758:  00:8E50  21 7A F0            		LD HL,DelyCnt
     759:  00:8E53  35                  		DEC [HL]
     760:  00:8E54  C2 DB 8E            		JP NZ,.PL2
     761:  00:8E57  21 3E F0            		LD HL,ChanA+CHNPRM_NtSkCn
     762:  00:8E5A  35                  		DEC [HL]
     763:  00:8E5B  20 4E               		JR NZ,.PL1B
     764:  00:8E5D  ED 4B 12 F0         		LD BC,[PT3_AdInPtA]
     765:  00:8E61  0A                  		LD A,[BC]
     766:  00:8E62  A7                  		AND A
     767:  00:8E63  20 3B               		JR NZ,.PL1A
     768:  00:8E65  57                  		LD D,A
     769:  00:8E66  32 7E F0            		LD [Ns_Base],A
     770:  00:8E69  2A 03 F0            		LD HL,[PT3_CrPsPtr]
     771:  00:8E6C  23                  		INC HL
     772:  00:8E6D  7E                  		LD A,[HL]
     773:  00:8E6E  3C                  		INC A
     774:  00:8E6F  20 08               		JR NZ,.PLNLP
     775:  00:8E71  CD DB 89            		CALL CHECKLP
     776:  00:8E74  2A 18 F0            		LD HL,[PT3_LPosPtr]
     777:  00:8E77  7E                  		LD A,[HL]
     778:  00:8E78  3C                  		INC A
     779:  00:8E79  22 03 F0            .PLNLP:	LD [PT3_CrPsPtr],HL
     780:  00:8E7C  3D                  		DEC A
     781:  00:8E7D  87                  		ADD A,A
     782:  00:8E7E  5F                  		LD E,A
     783:  00:8E7F  CB 12               		RL D
     784:  00:8E81  2A 1A F0            		LD HL,[PT3_PatsPtr]
     785:  00:8E84  19                  		ADD HL,DE
     786:  00:8E85  ED 5B 01 F0         		LD DE,[PT3_MODADDR]
     787:  00:8E89  ED 73 0D F0         		LD [PT3_PSP],SP
     788:  00:8E8D  F9                  		LD SP,HL
     789:  00:8E8E  E1                  		POP HL
     790:  00:8E8F  19                  		ADD HL,DE
     791:  00:8E90  44                  		LD B,H
     792:  00:8E91  4D                  		LD C,L
     793:  00:8E92  E1                  		POP HL
     794:  00:8E93  19                  		ADD HL,DE
     795:  00:8E94  22 14 F0            		LD [PT3_AdInPtB],HL
     796:  00:8E97  E1                  		POP HL
     797:  00:8E98  19                  		ADD HL,DE
     798:  00:8E99  22 16 F0            		LD [PT3_AdInPtC],HL
     799:  00:8E9C  ED 7B 0D F0         		LD SP,[PT3_PSP]
     800:  00:8EA0                      
     801:  00:8EA0  DD 21 2F F0         .PL1A:		LD IX,ChanA+12
     802:  00:8EA4  CD 83 8B            		CALL PTDECOD
     803:  00:8EA7  ED 43 12 F0         		LD [PT3_AdInPtA],BC
     804:  00:8EAB                      
     805:  00:8EAB  21 5B F0            .PL1B:		LD HL,ChanB+CHNPRM_NtSkCn
     806:  00:8EAE  35                  		DEC [HL]
     807:  00:8EAF  20 0F               		JR NZ,.PL1C
     808:  00:8EB1  DD 21 4C F0         		LD IX,ChanB+12
     809:  00:8EB5  ED 4B 14 F0         		LD BC,[PT3_AdInPtB]
     810:  00:8EB9  CD 83 8B            		CALL PTDECOD
     811:  00:8EBC  ED 43 14 F0         		LD [PT3_AdInPtB],BC
     812:  00:8EC0                      
     813:  00:8EC0  21 78 F0            .PL1C:		LD HL,ChanC+CHNPRM_NtSkCn
     814:  00:8EC3  35                  		DEC [HL]
     815:  00:8EC4  20 0F               		JR NZ,.PL1D
     816:  00:8EC6  DD 21 69 F0         		LD IX,ChanC+12
     817:  00:8ECA  ED 4B 16 F0         		LD BC,[PT3_AdInPtC]
     818:  00:8ECE  CD 83 8B            		CALL PTDECOD
     819:  00:8ED1  ED 43 16 F0         		LD [PT3_AdInPtC],BC
     820:  00:8ED5                      
     821:  00:8ED5  3A 1C F0            .PL1D:		LD A,[PT3_Delay]
     822:  00:8ED8  32 7A F0            		LD [DelyCnt],A
     823:  00:8EDB                      
     824:  00:8EDB  DD 21 23 F0         .PL2:		LD IX,ChanA
     825:  00:8EDF  2A 40 F1            		LD HL,[AYREGS+AR_TonA]
     826:  00:8EE2  CD F3 8C            		CALL CHREGS
     827:  00:8EE5  22 40 F1            		LD [AYREGS+AR_TonA],HL
     828:  00:8EE8  3A 4A F1            		LD A,[AYREGS+AR_AmplC]
     829:  00:8EEB  32 48 F1            		LD [AYREGS+AR_AmplA],A
     830:  00:8EEE  DD 21 40 F0         		LD IX,ChanB
     831:  00:8EF2  2A 42 F1            		LD HL,[AYREGS+AR_TonB]
     832:  00:8EF5  CD F3 8C            		CALL CHREGS
     833:  00:8EF8  22 42 F1            		LD [AYREGS+AR_TonB],HL
     834:  00:8EFB  3A 4A F1            		LD A,[AYREGS+AR_AmplC]
     835:  00:8EFE  32 49 F1            		LD [AYREGS+AR_AmplB],A
     836:  00:8F01  DD 21 5D F0         		LD IX,ChanC
     837:  00:8F05  2A 44 F1            		LD HL,[AYREGS+AR_TonC]
     838:  00:8F08  CD F3 8C            		CALL CHREGS
     839:  00:8F0B  22 44 F1            		LD [AYREGS+AR_TonC],HL
     840:  00:8F0E                      
     841:  00:8F0E  2A 7E F0            		LD HL,[Ns_Base_AddToNs]
     842:  00:8F11  7C                  		LD A,H
     843:  00:8F12  85                  		ADD A,L
     844:  00:8F13  32 46 F1            		LD [AYREGS+AR_Noise],A
     845:  00:8F16                      
     846:  00:8F16  3A 1D F0            		LD A,[PT3_AddToEn]
     847:  00:8F19  5F                  		LD E,A
     848:  00:8F1A  87                  		ADD A,A
     849:  00:8F1B  9F                  		SBC A,A
     850:  00:8F1C  57                  		LD D,A
     851:  00:8F1D  2A 4E F1            		LD HL,[EnvBase]
     852:  00:8F20  19                  		ADD HL,DE
     853:  00:8F21  ED 5B 7B F0         		LD DE,[CurESld]
     854:  00:8F25  19                  		ADD HL,DE
     855:  00:8F26  22 4B F1            		LD [AYREGS+AR_Env],HL
     856:  00:8F29                      
     857:  00:8F29  AF                  		XOR A
     858:  00:8F2A  21 7D F0            		LD HL,CurEDel
     859:  00:8F2D  B6                  		OR [HL]
     860:  00:8F2E  C8                  		RET Z
     861:  00:8F2F  35                  		DEC [HL]
     862:  00:8F30  C0                  		RET NZ
     863:  00:8F31  3A 1E F0            		LD A,[PT3_Env_Del]
     864:  00:8F34  77                  		LD [HL],A
     865:  00:8F35  2A 1F F0            		LD HL,[PT3_ESldAdd]
     866:  00:8F38  19                  		ADD HL,DE
     867:  00:8F39  22 7B F0            		LD [CurESld],HL
     868:  00:8F3C  C9                  		RET
     869:  00:8F3D                      
     870:  00:8F3D  AF                  PT3_ROUT:	XOR A
     871:  00:8F3E                      	
     872:  00:8F3E                      ROUT_A0:	; --- FIXES BITS 6 AND 7 OF MIXER ---
     873:  00:8F3E  21 47 F1            		LD	HL,AYREGS+AR_Mixer
     874:  00:8F41  CB FE               		set	7,[hl]
     875:  00:8F43  CB B6               		res	6,[hl]
     876:  00:8F45                      
     877:  00:8F45  0E A0               		LD C,$A0
     878:  00:8F47  21 40 F1            		LD HL,AYREGS
     879:  00:8F4A  ED 79               .LOUT:		OUT [C],A
     880:  00:8F4C  0C                  		INC C
     881:  00:8F4D  ED A3               		OUTI 
     882:  00:8F4F  0D                  		DEC C
     883:  00:8F50  3C                  		INC A
     884:  00:8F51  FE 0D               		CP 13
     885:  00:8F53  20 F5               		JR NZ,.LOUT
     886:  00:8F55  ED 79               		OUT [C],A
     887:  00:8F57  7E                  		LD A,[HL]
     888:  00:8F58  A7                  		AND A
     889:  00:8F59  F8                  		RET M
     890:  00:8F5A  0C                  		INC C
     891:  00:8F5B  ED 79               		OUT [C],A
     892:  00:8F5D  C9                  		RET
     893:  00:8F5E                      
     894:  00:8F5E  64                  NT_DATA:	db (T_NEW_0-T1_)*2
     895:  00:8F5F  2A                  		db TCNEW_0-T_
     896:  00:8F60  65                  		db (T_OLD_0-T1_)*2+1
     897:  00:8F61  00                  		db TCOLD_0-T_
     898:  00:8F62  01                  		db (T_NEW_1-T1_)*2+1
     899:  00:8F63  0C                  		db TCNEW_1-T_
     900:  00:8F64  01                  		db (T_OLD_1-T1_)*2+1
     901:  00:8F65  0C                  		db TCOLD_1-T_
     902:  00:8F66  94                  		db (T_NEW_2-T1_)*2
     903:  00:8F67  35                  		db TCNEW_2-T_
     904:  00:8F68  30                  		db (T_OLD_2-T1_)*2
     905:  00:8F69  0E                  		db TCOLD_2-T_
     906:  00:8F6A  60                  		db (T_NEW_3-T1_)*2
     907:  00:8F6B  20                  		db TCNEW_3-T_
     908:  00:8F6C  60                  		db (T_OLD_3-T1_)*2
     909:  00:8F6D  21                  		db TCOLD_3-T_
     910:  00:8F6E                      
     911:  00:8F6E                      T_:
     912:  00:8F6E                      
     913:  00:8F6E                      TCOLD_0:	db $00+1,$04+1,$08+1,$0A+1,$0C+1,$0E+1,$12+1,$14+1
     913:  00:8F6E  01 05 09 0B 0D 0F 13 15 
     914:  00:8F76  19 25 3D 00         		db $18+1,$24+1,$3C+1,0
     915:  00:8F7A                      TCNEW_1:	
     916:  00:8F7A  5D 00               TCOLD_1:	db $5C+1,0
     917:  00:8F7C                      TCOLD_2:	db $30+1,$36+1,$4C+1,$52+1,$5E+1,$70+1,$82,$8C,$9C
     917:  00:8F7C  31 37 4D 53 5F 71 82 8C 9C 
     918:  00:8F85                      		db $9E,$A0,$A6,$A8,$AA,$AC,$AE,$AE,0
     918:  00:8F85  9E A0 A6 A8 AA AC AE AE 00 
     919:  00:8F8E  57                  TCNEW_3:	db $56+1
     920:  00:8F8F                      TCOLD_3:	db $1E+1,$22+1,$24+1,$28+1,$2C+1,$2E+1,$32+1,$BE+1,0
     920:  00:8F8F  1F 23 25 29 2D 2F 33 BF 00 
     921:  00:8F98                      TCNEW_0:	db $1C+1,$20+1,$22+1,$26+1,$2A+1,$2C+1,$30+1,$54+1
     921:  00:8F98  1D 21 23 27 2B 2D 31 55 
     922:  00:8FA0  BD BF 00            		db $BC+1,$BE+1,0
     923:  00:8FA3                      TCNEW_2:	db $1A+1,$20+1,$24+1,$28+1,$2A+1,$3A+1,$4C+1,$5E+1
     923:  00:8FA3  1B 21 25 29 2B 3B 4D 5F 
     924:  00:8FAB  BB BD BF            		db $BA+1,$BC+1,$BE+1
     925:  00:8FAE                      
     926:  00:8FAE  00 01 00 90         EMPTYSAMORN: 	db 0,1,0,$90 ;delete $90 if you don't need default sample
     927:  00:8FB2                      
     928:  00:8FB2                      T_PACK:		; First 12 values of tone tables (packed)
     929:  00:8FB2  0D                  		db ($06EC*2)/256
     930:  00:8FB3  D8                  		db #d8
     931:  00:8FB4  69                  		db $0755-$06EC
     932:  00:8FB5  70                  		db $07C5-$0755
     933:  00:8FB6  76                  		db $083B-$07C5
     934:  00:8FB7  7D                  		db $08B8-$083B
     935:  00:8FB8  85                  		db $093D-$08B8
     936:  00:8FB9  8D                  		db $09CA-$093D
     937:  00:8FBA  95                  		db $0A5F-$09CA
     938:  00:8FBB  9D                  		db $0AFC-$0A5F
     939:  00:8FBC  A8                  		db $0BA4-$0AFC
     940:  00:8FBD  B1                  		db $0C55-$0BA4
     941:  00:8FBE  BB                  		db $0D10-$0C55
     942:  00:8FBF  0C                  		db ($066D*2)/256
     943:  00:8FC0  DA                  		db #da
     944:  00:8FC1  62                  		db $06CF-$066D
     945:  00:8FC2  68                  		db $0737-$06CF
     946:  00:8FC3  6D                  		db $07A4-$0737
     947:  00:8FC4  75                  		db $0819-$07A4
     948:  00:8FC5  7B                  		db $0894-$0819
     949:  00:8FC6  83                  		db $0917-$0894
     950:  00:8FC7  8A                  		db $09A1-$0917
     951:  00:8FC8  92                  		db $0A33-$09A1
     952:  00:8FC9  9C                  		db $0ACF-$0A33
     953:  00:8FCA  A4                  		db $0B73-$0ACF
     954:  00:8FCB  AF                  		db $0C22-$0B73
     955:  00:8FCC  B8                  		db $0CDA-$0C22
     956:  00:8FCD  0E                  		db ($0704*2)/256
     957:  00:8FCE  08                  		db #08
     958:  00:8FCF  6A                  		db $076E-$0704
     959:  00:8FD0  72                  		db $07E0-$076E
     960:  00:8FD1  78                  		db $0858-$07E0
     961:  00:8FD2  7E                  		db $08D6-$0858
     962:  00:8FD3  86                  		db $095C-$08D6
     963:  00:8FD4  90                  		db $09EC-$095C
     964:  00:8FD5  96                  		db $0A82-$09EC
     965:  00:8FD6  A0                  		db $0B22-$0A82
     966:  00:8FD7  AA                  		db $0BCC-$0B22
     967:  00:8FD8  B4                  		db $0C80-$0BCC
     968:  00:8FD9  BE                  		db $0D3E-$0C80
     969:  00:8FDA  0F                  		db ($07E0*2)/256
     970:  00:8FDB  C0                  		db #c0
     971:  00:8FDC  78                  		db $0858-$07E0
     972:  00:8FDD  88                  		db $08E0-$0858
     973:  00:8FDE  80                  		db $0960-$08E0
     974:  00:8FDF  90                  		db $09F0-$0960
     975:  00:8FE0  98                  		db $0A88-$09F0
     976:  00:8FE1  A0                  		db $0B28-$0A88
     977:  00:8FE2  B0                  		db $0BD8-$0B28
     978:  00:8FE3  A8                  		db $0C80-$0BD8
     979:  00:8FE4  E0                  		db $0D60-$0C80
     980:  00:8FE5  B0                  		db $0E10-$0D60
     981:  00:8FE6  E8                  		db $0EF8-$0E10
      61.  00:8FE7                      	include "ayFX-ROM_sjasm.asm"
       1:  00:8FE7                      		; --- ayFX REPLAYER v1.31 ---
       2:  00:8FE7                      
       3:  00:8FE7                      		; --- v1.31	Fixed bug on previous version, only PSG channel C worked
       4:  00:8FE7                      		; --- v1.3	Fixed volume and Relative volume versions on the same file, conditional compilation
       5:  00:8FE7                      		; ---		Support for dynamic or fixed channel allocation
       6:  00:8FE7                      		; --- v1.2f/r	ayFX bank support
       7:  00:8FE7                      		; --- v1.11f/r	If a frame volume is zero then no AYREGS update
       8:  00:8FE7                      		; --- v1.1f/r	Fixed volume for all ayFX streams
       9:  00:8FE7                      		; --- v1.1	Explicit priority (as suggested by AR)
      10:  00:8FE7                      		; --- v1.0f	Bug fixed (error when using noise)
      11:  00:8FE7                      		; --- v1.0	Initial release
      12:  00:8FE7                      
      13:  00:8FE7                      		; --- DEFINE AYFXRELATIVE AS 0 FOR FIXED VOLUME VERSION ---
      14:  00:8FE7                      		; --- DEFINE AYFXRELATIVE AS 1 FOR RELATIVE VOLUME VERSION ---
      15:  00:8FE7  (00:0000)           AYFXRELATIVE equ 0
      16:  00:8FE7                      
      17:  00:8FE7                      ayFX_SETUP:	; ---          ayFX replayer setup          ---
      18:  00:8FE7                      		; --- INPUT: HL -> pointer to the ayFX bank ---
      19:  00:8FE7  22 41 F2            		ld	[ayFX_BANK],hl			; Current ayFX bank
      20:  00:8FEA  3E 01               		ld	a,1				; a:=0
      21:  00:8FEC  32 40 F2            		ld	[ayFX_MODE],a			; Initial mode: fixed channel
      22:  00:8FEF  3C                  		inc	a				; Starting channel (=1)
      23:  00:8FF0  32 4A F2            		ld	[ayFX_CHANNEL],a		; Updated
      24:  00:8FF3                      ayFX_END:	; --- End of an ayFX stream ---
      25:  00:8FF3  3E FF               		ld	a,255				; Lowest ayFX priority
      26:  00:8FF5  32 43 F2            		ld	[ayFX_PRIORITY],a		; Priority saved (not playing ayFX stream)
      27:  00:8FF8  C9                  		ret					; Return
      28:  00:8FF9                      
      29:  00:8FF9                      ayFX_INIT:	; ---     INIT A NEW ayFX STREAM     ---
      30:  00:8FF9                      		; --- INPUT: A -> sound to be played ---
      31:  00:8FF9                      		; ---        C -> sound priority     ---
      32:  00:8FF9  C5                  		push	bc				; Store bc in stack
      33:  00:8FFA  D5                  		push	de				; Store de in stack
      34:  00:8FFB  E5                  		push	hl				; Store hl in stack
      35:  00:8FFC                      		; --- Check if the index is in the bank ---
      36:  00:8FFC  47                  		ld	b,a				; b:=a (new ayFX stream index)
      37:  00:8FFD  2A 41 F2            		ld	hl,[ayFX_BANK]			; Current ayFX BANK
      38:  00:9000  7E                  		ld	a,[hl]				; Number of samples in the bank
      39:  00:9001  B7                  		or	a				; If zero (means 256 samples)...
      40:  00:9002  28 06               		jr	z,.CHECK_PRI			; ...goto .CHECK_PRI
      41:  00:9004                      		; The bank has less than 256 samples
      42:  00:9004  78                  		ld	a,b				; a:=b (new ayFX stream index)
      43:  00:9005  BE                  		cp	[hl]				; If new index is not in the bank...
      44:  00:9006  3E 02               		ld	a,2				; a:=2 (error 2: Sample not in the bank)
      45:  00:9008  30 21               		jr	nc,.INIT_END			; ...we can't init it
      46:  00:900A                      .CHECK_PRI:	; --- Check if the new priority is lower than the current one ---
      47:  00:900A                      		; ---   Remember: 0 = highest priority, 15 = lowest priority  ---
      48:  00:900A  78                  		ld	a,b				; a:=b (new ayFX stream index)
      49:  00:900B  3A 43 F2            		ld	a,[ayFX_PRIORITY]		; a:=Current ayFX stream priority
      50:  00:900E  B9                  		cp	c				; If new ayFX stream priority is lower than current one...
      51:  00:900F  3E 01               		ld	a,1				; a:=1 (error 1: A sample with higher priority is being played)
      52:  00:9011  38 18               		jr	c,.INIT_END			; ...we don't start the new ayFX stream
      53:  00:9013                      		; --- Set new priority ---
      54:  00:9013  79                  		ld	a,c				; a:=New priority
      55:  00:9014  E6 0F               		and	$0F				; We mask the priority
      56:  00:9016  32 43 F2            		ld	[ayFX_PRIORITY],a		; new ayFX stream priority saved in RAM
      57:  00:9019                      
      58:  00:9019                      		IF ( AYFXRELATIVE == 1 )
      59:  00:9019                    ~ 			; --- Volume adjust using PT3 volume table ---
      60:  00:9019                    ~ 			ld	c,a				; c:=New priority (fixed)
      61:  00:9019                    ~ 			ld	a,15				; a:=15
      62:  00:9019                    ~ 			sub	c				; a:=15-New priority = relative volume
      63:  00:9019                    ~ 			jr	z,.INIT_NOSOUND		; If priority is 15 -> no sound output (volume is zero)
      64:  00:9019                    ~ 			add	a,a				; a:=a*2
      65:  00:9019                    ~ 			add	a,a				; a:=a*4
      66:  00:9019                    ~ 			add	a,a				; a:=a*8
      67:  00:9019                    ~ 			add	a,a				; a:=a*16
      68:  00:9019                    ~ 			ld	e,a				; e:=a
      69:  00:9019                    ~ 			ld	d,0				; de:=a
      70:  00:9019                    ~ 			ld	hl,VT_				; hl:=PT3 volume table
      71:  00:9019                    ~ 			add	hl,de				; hl is a pointer to the relative volume table
      72:  00:9019                    ~ 			ld	[ayFX_VT],hl			; Save pointer
      73:  00:9019                    ~ 		ENDIF
      74:  00:9019                      
      75:  00:9019                      		; --- Calculate the pointer to the new ayFX stream ---
      76:  00:9019  ED 5B 41 F2         		ld	de,[ayFX_BANK]			; de:=Current ayFX bank
      77:  00:901D  13                  		inc	de				; de points to the increments table of the bank
      78:  00:901E  68                  		ld	l,b				; l:=b (new ayFX stream index)
      79:  00:901F  26 00               		ld	h,0				; hl:=b (new ayFX stream index)
      80:  00:9021  29                  		add	hl,hl				; hl:=hl*2
      81:  00:9022  19                  		add	hl,de				; hl:=hl+de (hl points to the correct increment)
      82:  00:9023  5E                  		ld	e,[hl]				; e:=lower byte of the increment
      83:  00:9024  23                  		inc	hl				; hl points to the higher byte of the correct increment
      84:  00:9025  56                  		ld	d,[hl]				; de:=increment
      85:  00:9026  19                  		add	hl,de				; hl:=hl+de (hl points to the new ayFX stream)
      86:  00:9027  22 44 F2            		ld	[ayFX_POINTER],hl		; Pointer saved in RAM
      87:  00:902A  AF                  		xor	a				; a:=0 (no errors)
      88:  00:902B  E1                  .INIT_END:	pop	hl				; Retrieve hl from stack
      89:  00:902C  D1                  		pop	de				; Retrieve de from stack
      90:  00:902D  C1                  		pop	bc				; Retrieve bc from stack
      91:  00:902E  C9                  		ret					; Return
      92:  00:902F                      
      93:  00:902F                      		IF ( AYFXRELATIVE == 1 )
      94:  00:902F                    ~ .INIT_NOSOUND:	; --- Init a sample with relative volume zero -> no sound output ---
      95:  00:902F                    ~ 			ld	a,255				; Lowest ayFX priority
      96:  00:902F                    ~ 			ld	[ayFX_PRIORITY],a		; Priority saved (not playing ayFX stream)
      97:  00:902F                    ~ 			jr	.INIT_END			; Jumps to .INIT_END
      98:  00:902F                    ~ 		ENDIF
      99:  00:902F                      
     100:  00:902F                      ayFX_PLAY:	; --- PLAY A FRAME OF AN ayFX STREAM ---
     101:  00:902F  3A 43 F2            		ld	a,[ayFX_PRIORITY]		; a:=Current ayFX stream priority
     102:  00:9032  B7                  		or	a				; If priority has bit 7 on...
     103:  00:9033  F8                  		ret	m				; ...return
     104:  00:9034                      		; --- Calculate next ayFX channel (if needed) ---
     105:  00:9034  3A 40 F2            		ld	a,[ayFX_MODE]			; ayFX mode
     106:  00:9037  E6 01               		and	1				; If bit0=0 (fixed channel)...
     107:  00:9039  28 08               		jr	z,.TAKECB			; ...skip channel changing
     108:  00:903B  21 4A F2            		ld	hl,ayFX_CHANNEL			; Old ayFX playing channel
     109:  00:903E  35                  		dec	[hl]				; New ayFX playing channel
     110:  00:903F  20 02               		jr	nz,.TAKECB			; If not zero jump to .TAKECB
     111:  00:9041  36 03               		ld	[hl],3				; If zero -> set channel 3
     112:  00:9043                      .TAKECB:	; --- Extract control byte from stream ---
     113:  00:9043  2A 44 F2            		ld	hl,[ayFX_POINTER]		; Pointer to the current ayFX stream
     114:  00:9046  4E                  		ld	c,[hl]				; c:=Control byte
     115:  00:9047  23                  		inc	hl				; Increment pointer
     116:  00:9048                      		; --- Check if there's new tone on stream ---
     117:  00:9048  CB 69               		bit	5,c				; If bit 5 c is off...
     118:  00:904A  28 08               		jr	z,.CHECK_NN			; ...jump to .CHECK_NN (no new tone)
     119:  00:904C                      		; --- Extract new tone from stream ---
     120:  00:904C  5E                  		ld	e,[hl]				; e:=lower byte of new tone
     121:  00:904D  23                  		inc	hl				; Increment pointer
     122:  00:904E  56                  		ld	d,[hl]				; d:=higher byte of new tone
     123:  00:904F  23                  		inc	hl				; Increment pointer
     124:  00:9050  ED 53 46 F2         		ld	[ayFX_TONE],de			; ayFX tone updated
     125:  00:9054                      .CHECK_NN:	; --- Check if there's new noise on stream ---
     126:  00:9054  CB 71               		bit	6,c				; if bit 6 c is off...
     127:  00:9056  28 09               		jr	z,.SETPOINTER			; ...jump to .SETPOINTER (no new noise)
     128:  00:9058                      		; --- Extract new noise from stream ---
     129:  00:9058  7E                  		ld	a,[hl]				; a:=New noise
     130:  00:9059  23                  		inc	hl				; Increment pointer
     131:  00:905A  FE 20               		cp	$20				; If it's an illegal value of noise (used to mark end of stream)...
     132:  00:905C  28 95               		jr.	z,ayFX_END			; ...jump to ayFX_END
     133:  00:905E  32 48 F2            		ld	[ayFX_NOISE],a			; ayFX noise updated
     134:  00:9061                      .SETPOINTER:	; --- Update ayFX pointer ---
     135:  00:9061  22 44 F2            		ld	[ayFX_POINTER],hl		; Update ayFX stream pointer
     136:  00:9064                      		; --- Extract volume ---
     137:  00:9064  79                  		ld	a,c				; a:=Control byte
     138:  00:9065  E6 0F               		and	$0F				; lower nibble
     139:  00:9067                      
     140:  00:9067                      		IF ( AYFXRELATIVE == 1 )
     141:  00:9067                    ~ 			; --- Fix the volume using PT3 Volume Table ---
     142:  00:9067                    ~ 			ld	hl,[ayFX_VT]			; hl:=Pointer to relative volume table
     143:  00:9067                    ~ 			ld	e,a				; e:=a (ayFX volume)
     144:  00:9067                    ~ 			ld	d,0				; d:=0
     145:  00:9067                    ~ 			add	hl,de				; hl:=hl+de (hl points to the relative volume of this frame
     146:  00:9067                    ~ 			ld	a,[hl]				; a:=ayFX relative volume
     147:  00:9067                    ~ 			or	a				; If relative volume is zero...
     148:  00:9067                    ~ 		ENDIF
     149:  00:9067                      
     150:  00:9067  32 49 F2            		ld	[ayFX_VOLUME],a			; ayFX volume updated
     151:  00:906A  C8                  		ret	z				; ...return (don't copy ayFX values in to AYREGS)
     152:  00:906B                      		; -------------------------------------
     153:  00:906B                      		; --- COPY ayFX VALUES IN TO AYREGS ---
     154:  00:906B                      		; -------------------------------------
     155:  00:906B                      		; --- Set noise channel ---
     156:  00:906B  CB 79               		bit	7,c				; If noise is off...
     157:  00:906D  20 06               		jr	nz,.SETMASKS			; ...jump to .SETMASKS
     158:  00:906F  3A 48 F2            		ld	a,[ayFX_NOISE]			; ayFX noise value
     159:  00:9072  32 46 F1            		ld	[AYREGS+6],a			; copied in to AYREGS (noise channel)
     160:  00:9075                      .SETMASKS:	; --- Set mixer masks ---
     161:  00:9075  79                  		ld	a,c				; a:=Control byte
     162:  00:9076  E6 90               		and	$90				; Only bits 7 and 4 (noise and tone mask for psg reg 7)
     163:  00:9078  FE 90               		cp	$90				; If no noise and no tone...
     164:  00:907A  C8                  		ret	z				; ...return (don't copy ayFX values in to AYREGS)
     165:  00:907B                      		; --- Copy ayFX values in to ARYREGS ---
     166:  00:907B  0F                  		rrca					; Rotate a to the right (1 TIME)
     167:  00:907C  0F                  		rrca					; Rotate a to the right (2 TIMES) (OR mask)
     168:  00:907D  16 DB               		ld	d,$DB				; d:=Mask for psg mixer (AND mask)
     169:  00:907F                      		; --- Dump to correct channel ---
     170:  00:907F  21 4A F2            		ld	hl,ayFX_CHANNEL			; Next ayFX playing channel
     171:  00:9082  46                  		ld	b,[hl]				; Channel counter
     172:  00:9083                      .CHK1:		; --- Check if playing channel was 1 ---
     173:  00:9083  10 0D               		djnz	.CHK2				; Decrement and jump if channel was not 1
     174:  00:9085                      .PLAY_C:	; --- Play ayFX stream on channel C ---
     175:  00:9085  CD B4 90            		call	.SETMIXER			; Set PSG mixer value (returning a=ayFX volume and hl=ayFX tone)
     176:  00:9088  32 4A F1            		ld	[AYREGS+10],a			; Volume copied in to AYREGS (channel C volume)
     177:  00:908B  CB 51               		bit	2,c				; If tone is off...
     178:  00:908D  C0                  		ret	nz				; ...return
     179:  00:908E  22 44 F1            		ld	[AYREGS+4],hl			; copied in to AYREGS (channel C tone)
     180:  00:9091  C9                  		ret					; Return
     181:  00:9092                      .CHK2:		; --- Check if playing channel was 2 ---
     182:  00:9092  CB 0A               		rrc	d				; Rotate right AND mask
     183:  00:9094  0F                  		rrca					; Rotate right OR mask
     184:  00:9095  10 0D               		djnz	.CHK3				; Decrement and jump if channel was not 2
     185:  00:9097                      .PLAY_B:	; --- Play ayFX stream on channel B ---
     186:  00:9097  CD B4 90            		call	.SETMIXER			; Set PSG mixer value (returning a=ayFX volume and hl=ayFX tone)
     187:  00:909A  32 49 F1            		ld	[AYREGS+9],a			; Volume copied in to AYREGS (channel B volume)
     188:  00:909D  CB 49               		bit	1,c				; If tone is off...
     189:  00:909F  C0                  		ret	nz				; ...return
     190:  00:90A0  22 42 F1            		ld	[AYREGS+2],hl			; copied in to AYREGS (channel B tone)
     191:  00:90A3  C9                  		ret					; Return
     192:  00:90A4                      .CHK3:		; --- Check if playing channel was 3 ---
     193:  00:90A4  CB 0A               		rrc	d				; Rotate right AND mask
     194:  00:90A6  0F                  		rrca					; Rotate right OR mask
     195:  00:90A7                      .PLAY_A:	; --- Play ayFX stream on channel A ---
     196:  00:90A7  CD B4 90            		call	.SETMIXER			; Set PSG mixer value (returning a=ayFX volume and hl=ayFX tone)
     197:  00:90AA  32 48 F1            		ld	[AYREGS+8],a			; Volume copied in to AYREGS (channel A volume)
     198:  00:90AD  CB 41               		bit	0,c				; If tone is off...
     199:  00:90AF  C0                  		ret	nz				; ...return
     200:  00:90B0  22 40 F1            		ld	[AYREGS+0],hl			; copied in to AYREGS (channel A tone)
     201:  00:90B3  C9                  		ret					; Return
     202:  00:90B4                      .SETMIXER:	; --- Set PSG mixer value ---
     203:  00:90B4  4F                  		ld	c,a				; c:=OR mask
     204:  00:90B5  3A 47 F1            		ld	a,[AYREGS+7]			; a:=PSG mixer value
     205:  00:90B8  A2                  		and	d				; AND mask
     206:  00:90B9  B1                  		or	c				; OR mask
     207:  00:90BA  32 47 F1            		ld	[AYREGS+7],a			; PSG mixer value updated
     208:  00:90BD  3A 49 F2            		ld	a,[ayFX_VOLUME]			; a:=ayFX volume value
     209:  00:90C0  2A 46 F2            		ld	hl,[ayFX_TONE]			; ayFX tone value
     210:  00:90C3  C9                  		ret					; Return
     211:  00:90C4                      
     212:  00:90C4                      		IF ( AYFXRELATIVE == 1 )
     213:  00:90C4                    ~ 			; --- UNCOMMENT THIS IF YOU DON'T USE THIS REPLAYER WITH PT3 REPLAYER ---
     214:  00:90C4                    ~ 		;VT_:	.INCBIN	"VT.BIN"
     215:  00:90C4                    ~ 			; --- UNCOMMENT THIS IF YOU DON'T USE THIS REPLAYER WITH PT3 REPLAYER ---
     216:  00:90C4                    ~ 		ENDIF
      62.  00:90C4                      	
      63.  00:90C4                      	
      64.  00:90C4                      
      65.  00:90C4                      ;;=====================================================
      66.  00:90C4                      ;;DEFINICIÓN DE CANTIONES Y EFECTOS DE SONIDO
      67.  00:90C4                      ;;=====================================================		
      68.  00:90C4                      song:
      69.  00:90C4  (0968)              	incbin "bloodytears_castlevania.99"
      70.  00:9A2C                      	
      71.  00:9A2C                      sfx_bank:
      72.  00:9A2C  (004B)              	incbin "demo.afb"
      73.  00:9A77                      
     198   00:9A77                      	
     199   00:9A77                      	include "subr_ayudas.asm"
       1.  00:9A77                      ;;=====================================================
       2.  00:9A77                      ;;SUBRUTINAS MANEJO DE OBJETOS AYUDA
       3.  00:9A77                      ;;=====================================================	
       4.  00:9A77                      
       5.  00:9A77                      ;;=====================================================
       6.  00:9A77                      ;;INICIALIZA_AYUDAS
       7.  00:9A77                      ;;=====================================================	
       8.  00:9A77                      ; función: 	inicializa las variables de estructuras de ayuda del array lista_ayudas
       9.  00:9A77                      ; entrada: 	datos_delasdistintasayudas, variable estructura_ayuda_ayudaquesea
      10.  00:9A77                      ; salida: 	lista_ayudas
      11.  00:9A77                      ; toca:		HL, DE, BC
      12.  00:9A77                      inicializa_ayudas:
      13.  00:9A77                      	;oración
      14.  00:9A77  DD 21 46 A9         	LD		IX, ayuda_oracion
      15.  00:9A7B  DD 36 00 00         	LD		(IX + 0), INACTIVA			
      16.  00:9A7F  21 1F AA            	LD		HL, array_oracionon
      17.  00:9A82  DD 74 01            	LD		(IX + 1), H
      18.  00:9A85  DD 75 02            	LD		(IX + 2), L
      19.  00:9A88  21 23 AA            	LD		HL, array_oracionoff
      20.  00:9A8B  DD 74 03            	LD		(IX + 3), H
      21.  00:9A8E  DD 75 04            	LD		(IX + 4), L
      22.  00:9A91  DD 36 05 A3         	LD		(IX + 5), POSORACION
      23.  00:9A95  DD 36 06 20         	LD		(IX + 6), POSORACIONX
      24.  00:9A99  DD 36 07 70         	LD		(IX + 7), POSAYUDASY	
      25.  00:9A9D  21 8B 9B            	LD		HL, accion_oracion
      26.  00:9AA0  DD 74 08            	LD		(IX + 8), H
      27.  00:9AA3  DD 75 09            	LD		(IX + 9), L
      28.  00:9AA6                      	
      29.  00:9AA6                      	;cruz
      30.  00:9AA6  21 C0 A9            	LD		HL, datos_cruz
      31.  00:9AA9  11 56 A9            	LD		DE, ayuda_cruz
      32.  00:9AAC  01 10 00            	LD		BC, 16;#ESTRUCTURA_AYUDA ;equivale a 16.. el tamaño de la estructura en bytes
      33.  00:9AAF  ED B0               	LDIR
      34.  00:9AB1                      	
      35.  00:9AB1                      	;agua bendita
      36.  00:9AB1  21 CA A9            	LD		HL, datos_aguabendita
      37.  00:9AB4  11 66 A9            	LD		DE, ayuda_aguabendita
      38.  00:9AB7  CD DF 9A            	CALL	carga_datos_ayuda
      39.  00:9ABA                      		
      40.  00:9ABA                      	;armadura
      41.  00:9ABA  21 DB A9            	LD		HL, datos_armadura
      42.  00:9ABD  11 76 A9            	LD		DE, ayuda_armadura
      43.  00:9AC0  CD DF 9A            	CALL	carga_datos_ayuda
      44.  00:9AC3                      		
      45.  00:9AC3                      	;planta
      46.  00:9AC3  21 EC A9            	LD		HL, datos_planta
      47.  00:9AC6  11 86 A9            	LD		DE, ayuda_planta
      48.  00:9AC9  CD DF 9A            	CALL	carga_datos_ayuda
      49.  00:9ACC                      		
      50.  00:9ACC                      	;vida extra
      51.  00:9ACC  21 FD A9            	LD		HL, datos_vidaextra
      52.  00:9ACF  11 96 A9            	LD		DE, ayuda_vidaextra
      53.  00:9AD2  CD DF 9A            	CALL	carga_datos_ayuda
      54.  00:9AD5                      		
      55.  00:9AD5                      	;ballesta
      56.  00:9AD5  21 0E AA            	LD		HL, datos_ballesta
      57.  00:9AD8  11 A6 A9            	LD		DE, ayuda_ballesta
      58.  00:9ADB  CD DF 9A            	CALL	carga_datos_ayuda
      59.  00:9ADE                      fin_resetea_ayudas:
      60.  00:9ADE  C9                  	RET
      61.  00:9ADF                      	
      62.  00:9ADF                      
      63.  00:9ADF                      ;;=====================================================
      64.  00:9ADF                      ;;CARGA_DATOS_AYUDA
      65.  00:9ADF                      ;;=====================================================	
      66.  00:9ADF                      ; función: 	carga los datos de la ayuda de una variable dentro de la variable estructura (más carga y espacio que rellenar a pelo desde IX en adelante pero más simple)
      67.  00:9ADF                      ;entrada
      68.  00:9ADF                      ;  hl: origen de datos
      69.  00:9ADF                      ;  de: destino de datos
      70.  00:9ADF                      ; salida: 	-
      71.  00:9ADF                      ; toca:		HL, DE, BC
      72.  00:9ADF                      carga_datos_ayuda:
      73.  00:9ADF  01 10 00            	LD		BC, 16;ESTRUCTURA_AYUDA ;equivale a 16.. el tamaño de la estructura en bytes
      74.  00:9AE2  ED B0               	LDIR
      75.  00:9AE4                      fin_carga_datos_ayuda:
      76.  00:9AE4  C9                  	RET
      77.  00:9AE5                      
      78.  00:9AE5                      
      79.  00:9AE5                      
      80.  00:9AE5                      ;;=====================================================
      81.  00:9AE5                      ;;PINTA_OBJ_AYUDA
      82.  00:9AE5                      ;;=====================================================	
      83.  00:9AE5                      ; función: 	pinta un objeto de tipo ayuda que se le pase por referencia IX y el tipo en A
      84.  00:9AE5                      ; entrada: 	IX - puntero a objeto a mostrar, A - si está on u off
      85.  00:9AE5                      ; salida: 	-
      86.  00:9AE5                      ; toca:		AF, HL, BC, DE
      87.  00:9AE5                      pinta_obj_ayuda:
      88.  00:9AE5                      	;se recibe objeto desde fuera, por ejmplo LD IX, ayuda_oracion
      89.  00:9AE5                      
      90.  00:9AE5  B7                  	OR		 A
      91.  00:9AE6  CA F5 9A            	JP		 Z,.dibujooff
      92.  00:9AE9                      .dibujoon:	
      93.  00:9AE9  DD 66 01            	LD		 H, (IX + 1)
      94.  00:9AEC  DD 6E 02            	LD		 L, (IX + 2)
      95.  00:9AEF  22 01 85            	LD		(wordaux2), HL
      96.  00:9AF2  C3 FE 9A            	JP		.param_wordaux2
      97.  00:9AF5                      .dibujooff:
      98.  00:9AF5  DD 66 03            	LD		 H, (IX + 3)
      99.  00:9AF8  DD 6E 04            	LD		 L, (IX + 4)
     100.  00:9AFB  22 01 85            	LD		(wordaux2), HL
     101.  00:9AFE                      
     102.  00:9AFE                      .param_wordaux2:	
     103.  00:9AFE  21 00 19            	LD		HL, TILMAP + 256	;calcula posición en tilemap + 256 por colocarse siempre en bank1
     104.  00:9B01  DD 7E 05            	LD		 A, (IX + 5)
     105.  00:9B04  CD C6 81            	CALL	suma_A_HL
     106.  00:9B07  22 FF 84            	LD		(wordaux1), HL		;pongo el valor en wordaux1
     107.  00:9B0A                      
     108.  00:9B0A                      .filasycols:
     109.  00:9B0A  3E 02               	LD		 A, 2				;equivale a LD	A,2 porque A ya valía 1
     110.  00:9B0C  32 03 85            	LD		(byteaux1), A	;nº de filas
     111.  00:9B0F  32 04 85            	LD		(byteaux2), A	;nº de columnas
     112.  00:9B12                      	
     113.  00:9B12  C3 BF 84            	JP		pinta_array
     114.  00:9B15                      fin_pinta_obj_ayuda:
     115.  00:9B15                      
     116.  00:9B15                      
     117.  00:9B15                      ;;=====================================================
     118.  00:9B15                      ;;PINTA_AYUDAS_HABITACIÓN
     119.  00:9B15                      ;;=====================================================	
     120.  00:9B15                      ; función: 	examina el byte con las ayudas y pinta las que estén seleccionadas según variable habitacion_extras
     121.  00:9B15                      ; entrada: 	habitacion_extras
     122.  00:9B15                      ; salida: 	-
     123.  00:9B15                      pinta_ayudas_habitacion:
     124.  00:9B15                      .examina_oracion:
     125.  00:9B15  3A F3 A5            	LD		 A, (habitacion_extras)
     126.  00:9B18  CB 7F               	BIT		 7,A
     127.  00:9B1A  CA 26 9B            	JP		 Z,.examina_cruz
     128.  00:9B1D  DD 21 46 A9         	LD		IX, ayuda_oracion
     129.  00:9B21  3E 01               	LD		 A, ACTIVA
     130.  00:9B23  CD E5 9A            	CALL	pinta_obj_ayuda
     131.  00:9B26                      .examina_cruz:
     132.  00:9B26  3A F3 A5            	LD		 A, (habitacion_extras)
     133.  00:9B29  CB 77               	BIT		 6,A
     134.  00:9B2B  CA 37 9B            	JP		 Z,.examina_aguabendita
     135.  00:9B2E  DD 21 56 A9         	LD		IX, ayuda_cruz
     136.  00:9B32  3E 01               	LD		 A, ACTIVA
     137.  00:9B34  CD E5 9A            	CALL	pinta_obj_ayuda
     138.  00:9B37                      .examina_aguabendita:
     139.  00:9B37  3A F3 A5            	LD		 A, (habitacion_extras)
     140.  00:9B3A  CB 6F               	BIT		 5,A
     141.  00:9B3C  CA 48 9B            	JP		 Z,.examina_armadura
     142.  00:9B3F  DD 21 66 A9         	LD		IX, ayuda_aguabendita
     143.  00:9B43  3E 01               	LD		 A, ACTIVA
     144.  00:9B45  CD E5 9A            	CALL	pinta_obj_ayuda
     145.  00:9B48                      .examina_armadura:
     146.  00:9B48  3A F3 A5            	LD		 A, (habitacion_extras)
     147.  00:9B4B  CB 67               	BIT		 4,A
     148.  00:9B4D  CA 59 9B            	JP		 Z,.examina_planta
     149.  00:9B50  DD 21 76 A9         	LD		IX, ayuda_armadura
     150.  00:9B54  3E 01               	LD		 A, ACTIVA
     151.  00:9B56  CD E5 9A            	CALL	pinta_obj_ayuda
     152.  00:9B59                      .examina_planta:
     153.  00:9B59  3A F3 A5            	LD		 A, (habitacion_extras)
     154.  00:9B5C  CB 5F               	BIT		 3,A
     155.  00:9B5E  CA 6A 9B            	JP		 Z,.examina_vidaextra
     156.  00:9B61  DD 21 86 A9         	LD		IX, ayuda_planta
     157.  00:9B65  3E 01               	LD		 A, ACTIVA
     158.  00:9B67  CD E5 9A            	CALL	pinta_obj_ayuda
     159.  00:9B6A                      .examina_vidaextra:
     160.  00:9B6A  3A F3 A5            	LD		 A, (habitacion_extras)
     161.  00:9B6D  CB 57               	BIT		 2,A
     162.  00:9B6F  CA 7B 9B            	JP		 Z,.examina_ballesta
     163.  00:9B72  DD 21 96 A9         	LD		IX, ayuda_vidaextra
     164.  00:9B76  3E 01               	LD		 A, ACTIVA
     165.  00:9B78  CD E5 9A            	CALL	pinta_obj_ayuda
     166.  00:9B7B                      .examina_ballesta:
     167.  00:9B7B  3A F3 A5            	LD		 A, (habitacion_extras)
     168.  00:9B7E  CB 4F               	BIT		 1,A
     169.  00:9B80  C8                  	RET		 Z
     170.  00:9B81  DD 21 A6 A9         	LD		IX, ayuda_ballesta
     171.  00:9B85  3E 01               	LD		 A, ACTIVA
     172.  00:9B87  CD E5 9A            	CALL	pinta_obj_ayuda
     173.  00:9B8A                      fin_pinta_ayudas_habitacion:
     174.  00:9B8A  C9                  	RET
     175.  00:9B8B                      
     176.  00:9B8B                      
     177.  00:9B8B                      
     178.  00:9B8B                      ;;=====================================================
     179.  00:9B8B                      ;;ACCION_ORACION
     180.  00:9B8B                      ;;=====================================================	
     181.  00:9B8B                      ; función: 	
     182.  00:9B8B                      ; entrada: 	
     183.  00:9B8B                      ; salida: 	-
     184.  00:9B8B                      accion_oracion:
     185.  00:9B8B                      fin_accion_oracion:
     186.  00:9B8B  C9                  	RET
     187.  00:9B8C                      	
     188.  00:9B8C                      
     189.  00:9B8C                      ;;=====================================================
     190.  00:9B8C                      ;;ACCION_CRUZ
     191.  00:9B8C                      ;;=====================================================	
     192.  00:9B8C                      ; función: 	
     193.  00:9B8C                      ; entrada: 	
     194.  00:9B8C                      ; salida: 	-
     195.  00:9B8C                      accion_cruz:
     196.  00:9B8C                      fin_accion_cruz:
     197.  00:9B8C  C9                  	RET
     198.  00:9B8D                      
     199.  00:9B8D                      
     200.  00:9B8D                      ;;=====================================================
     201.  00:9B8D                      ;;ACCION_AGUA
     202.  00:9B8D                      ;;=====================================================	
     203.  00:9B8D                      ; función: 	
     204.  00:9B8D                      ; entrada: 	
     205.  00:9B8D                      ; salida: 	-
     206.  00:9B8D                      accion_agua:
     207.  00:9B8D                      fin_accion_agua:
     208.  00:9B8D  C9                  	RET
     209.  00:9B8E                      
     210.  00:9B8E                      
     211.  00:9B8E                      ;;=====================================================
     212.  00:9B8E                      ;;ACCION_ARMADURA
     213.  00:9B8E                      ;;=====================================================	
     214.  00:9B8E                      ; función: 	
     215.  00:9B8E                      ; entrada: 	
     216.  00:9B8E                      ; salida: 	-
     217.  00:9B8E                      accion_armadura:
     218.  00:9B8E                      fin_accion_armadura:
     219.  00:9B8E  C9                  	RET
     220.  00:9B8F                      
     221.  00:9B8F                      
     222.  00:9B8F                      ;;=====================================================
     223.  00:9B8F                      ;;ACCION_PLANTA
     224.  00:9B8F                      ;;=====================================================	
     225.  00:9B8F                      ; función: 	
     226.  00:9B8F                      ; entrada: 	
     227.  00:9B8F                      ; salida: 	-
     228.  00:9B8F                      accion_planta:
     229.  00:9B8F                      fin_accion_planta:
     230.  00:9B8F  C9                  	RET
     231.  00:9B90                      
     232.  00:9B90                      
     233.  00:9B90                      ;;=====================================================
     234.  00:9B90                      ;;ACCION_VIDAEXTRA
     235.  00:9B90                      ;;=====================================================	
     236.  00:9B90                      ; función: 	
     237.  00:9B90                      ; entrada: 	
     238.  00:9B90                      ; salida: 	-
     239.  00:9B90                      accion_vidaextra:
     240.  00:9B90                      fin_accion_vidaextra:
     241.  00:9B90  C9                  	RET
     242.  00:9B91                      
     243.  00:9B91                      
     244.  00:9B91                      ;;=====================================================
     245.  00:9B91                      ;;ACCION_BALLESTA
     246.  00:9B91                      ;;=====================================================	
     247.  00:9B91                      ; función: 	
     248.  00:9B91                      ; entrada: 	
     249.  00:9B91                      ; salida: 	-
     250.  00:9B91                      accion_ballesta:
     251.  00:9B91                      fin_accion_ballesta:
     252.  00:9B91  C9                  	RET
     253.  00:9B92                      
     254.  00:9B92                      
     200   00:9B92                      	
     201   00:9B92                      
     202   00:9B92                      ;;=====================================================
     203   00:9B92                      ;;DEFINICIÓN DE SUBRUTINAS DE FERNANDO PARA COMPRESIÓN Y SONIDO
     204   00:9B92                      ;;=====================================================
     205   00:9B92                      ;Este include lleva la rutina de descompresión de ROM/RAM a VRAM de pletter
     206   00:9B92                      ;Está adaptada de la original a sjasm
     207   00:9B92                      ;	HL = RAM/ROM source	; DE = VRAM destination
     208   00:9B92                      depack_VRAM:
     209   00:9B92                      	include "PL_VRAM_Depack_SJASM.asm"
       1.  00:9B92                      ;-----------------------------------------------------------
       2.  00:9B92                      ; Pletter v0.5b VRAM Depacker v1.1 - 16Kb version
       3.  00:9B92                      ; HL = RAM/ROM source ; DE = VRAM destination
       4.  00:9B92                      ;-----------------------------------------------------------
       5.  00:9B92  F3                  	di
       6.  00:9B93                      
       7.  00:9B93                      ; VRAM address setup
       8.  00:9B93  7B                  	ld	a,e
       9.  00:9B94  D3 99               	out	[099h],a
      10.  00:9B96  7A                  	ld	a,d
      11.  00:9B97  F6 40               	or	040h
      12.  00:9B99  D3 99               	out	[099h],a
      13.  00:9B9B                      
      14.  00:9B9B                      ; Initialization
      15.  00:9B9B  7E                  	ld	a,[hl]
      16.  00:9B9C  23                  	inc	hl
      17.  00:9B9D  D9                  	exx
      18.  00:9B9E  11 00 00            	ld	de,0
      19.  00:9BA1  87                  	add	a,a
      20.  00:9BA2  3C                  	inc	a
      21.  00:9BA3  CB 13               	rl	e
      22.  00:9BA5  87                  	add	a,a
      23.  00:9BA6  CB 13               	rl	e
      24.  00:9BA8  87                  	add	a,a
      25.  00:9BA9  CB 13               	rl	e
      26.  00:9BAB  CB 13               	rl	e
      27.  00:9BAD  21 64 9C            	ld	hl,modes
      28.  00:9BB0  19                  	add	hl,de
      29.  00:9BB1  5E                  	ld	e,[hl]
      30.  00:9BB2  DD 6B               	ld	ixl,e
      31.  00:9BB4  23                  	inc	hl
      32.  00:9BB5  5E                  	ld	e,[hl]
      33.  00:9BB6  DD 63               	ld	ixh,e
      34.  00:9BB8  1E 01               	ld	e,1
      35.  00:9BBA  D9                  	exx
      36.  00:9BBB  FD 21 C4 9B         	ld	iy,loop
      37.  00:9BBF                      
      38.  00:9BBF                      ; Main depack loop
      39.  00:9BBF  0E 98               literal:ld	c,098h
      40.  00:9BC1  ED A3               	outi
      41.  00:9BC3  13                  	inc	de
      42.  00:9BC4  87                  loop:	add	a,a
      43.  00:9BC5  CC 58 9C              	call	z,getbit
      44.  00:9BC8  30 F5               	jr	nc,literal
      45.  00:9BCA                      
      46.  00:9BCA                      ; Compressed data
      47.  00:9BCA  D9                  	exx
      48.  00:9BCB  62                  	ld	h,d
      49.  00:9BCC  6B                  	ld	l,e
      50.  00:9BCD  87                  getlen: add	a,a
      51.  00:9BCE  CC 5C 9C            	call	z,getbitexx
      52.  00:9BD1  30 1D               	jr	nc,lenok
      53.  00:9BD3  87                  lus:	add	a,a
      54.  00:9BD4  CC 5C 9C            	call	z,getbitexx
      55.  00:9BD7  ED 6A               	adc	hl,hl
      56.  00:9BD9  D8                  	ret	c
      57.  00:9BDA  87                  	add	a,a
      58.  00:9BDB  CC 5C 9C            	call	z,getbitexx
      59.  00:9BDE  30 10               	jr	nc,lenok
      60.  00:9BE0  87                  	add	a,a
      61.  00:9BE1  CC 5C 9C            	call	z,getbitexx
      62.  00:9BE4  ED 6A               	adc	hl,hl
      63.  00:9BE6  DA 62 9C            	jp	c,Depack_out
      64.  00:9BE9  87                  	add	a,a
      65.  00:9BEA  CC 5C 9C            	call	z,getbitexx
      66.  00:9BED  DA D3 9B            	jp	c,lus
      67.  00:9BF0  23                  lenok:  inc	hl
      68.  00:9BF1  D9                  	exx
      69.  00:9BF2  4E                  	ld	c,[hl]
      70.  00:9BF3  23                  	inc	hl
      71.  00:9BF4  06 00               	ld	b,0
      72.  00:9BF6  CB 79               	bit	7,c
      73.  00:9BF8  CA 2B 9C            	jp	z,offsok
      74.  00:9BFB  DD E9               	jp	ix
      75.  00:9BFD                      
      76.  00:9BFD  87                  mode7:  add	a,a
      77.  00:9BFE  CC 58 9C              	call	z,getbit
      78.  00:9C01  CB 10               	rl	b
      79.  00:9C03  87                  mode6:	add	a,a
      80.  00:9C04  CC 58 9C              	call	z,getbit
      81.  00:9C07  CB 10               	rl	b
      82.  00:9C09  87                  mode5:  add	a,a
      83.  00:9C0A  CC 58 9C              	call	z,getbit
      84.  00:9C0D  CB 10               	rl	b
      85.  00:9C0F  87                  mode4:  add	a,a
      86.  00:9C10  CC 58 9C              	call	z,getbit
      87.  00:9C13  CB 10               	rl	b
      88.  00:9C15  87                  mode3:  add	a,a
      89.  00:9C16  CC 58 9C              	call	z,getbit
      90.  00:9C19  CB 10               	rl	b
      91.  00:9C1B  87                  mode2:	add	a,a
      92.  00:9C1C  CC 58 9C              	call	z,getbit
      93.  00:9C1F  CB 10               	rl	b
      94.  00:9C21  87                  	add	a,a
      95.  00:9C22  CC 58 9C              	call	z,getbit
      96.  00:9C25  30 04               	jr	nc,offsok
      97.  00:9C27  B7                  	or	a
      98.  00:9C28  04                  	inc	b
      99.  00:9C29  CB B9               	res	7,c
     100.  00:9C2B  03                  offsok: inc	bc
     101.  00:9C2C  E5                  	push	hl
     102.  00:9C2D  D9                  	exx
     103.  00:9C2E  E5                  	push	hl
     104.  00:9C2F  D9                  	exx
     105.  00:9C30  6B                  	ld	l,e
     106.  00:9C31  62                  	ld	h,d
     107.  00:9C32  ED 42               	sbc	hl,bc
     108.  00:9C34  C1                  	pop	bc
     109.  00:9C35  F5                  	push	af
     110.  00:9C36  7D                  .loop:	ld	a,l
     111.  00:9C37  D3 99               	out	[099h],a
     112.  00:9C39  7C                  	ld	a,h
     113.  00:9C3A  00                  	nop                     ; VDP timing
     114.  00:9C3B  D3 99               	out	[099h],a
     115.  00:9C3D  00                  	nop                     ; VDP timing
     116.  00:9C3E  DB 98               	in	a,[098h]
     117.  00:9C40  08                  	ex	af,af'
     118.  00:9C41  7B                  	ld	a,e
     119.  00:9C42  00                  	nop			; VDP timing
     120.  00:9C43  D3 99               	out	[099h],a
     121.  00:9C45  7A                  	ld	a,d
     122.  00:9C46  F6 40               	or	040h
     123.  00:9C48  D3 99               	out	[099h],a
     124.  00:9C4A  08                  	ex	af,af'
     125.  00:9C4B  00                  	nop			; VDP timing
     126.  00:9C4C  D3 98               	out	[098h],a
     127.  00:9C4E  13                  	inc	de
     128.  00:9C4F  ED A1               	cpi
     129.  00:9C51  EA 36 9C            	jp	pe,.loop
     130.  00:9C54  F1                  	pop	af
     131.  00:9C55  E1                  	pop	hl
     132.  00:9C56  FD E9               	jp	iy
     133.  00:9C58                      
     134.  00:9C58  7E                  getbit: ld	a,[hl]
     135.  00:9C59  23                  	inc	hl
     136.  00:9C5A  17                  	rla
     137.  00:9C5B  C9                  	ret
     138.  00:9C5C                      
     139.  00:9C5C                      getbitexx:
     140.  00:9C5C  D9                  	exx
     141.  00:9C5D  7E                  	ld	a,[hl]
     142.  00:9C5E  23                  	inc	hl
     143.  00:9C5F  D9                  	exx
     144.  00:9C60  17                  	rla
     145.  00:9C61  C9                  	ret
     146.  00:9C62                      
     147.  00:9C62                      ; Depacker exit
     148.  00:9C62                      Depack_out:
     149.  00:9C62  FB                  	ei
     150.  00:9C63  C9                  	ret
     151.  00:9C64                      
     152.  00:9C64                      modes:
     153.  00:9C64  2B 9C               	dw	offsok
     154.  00:9C66  1B 9C               	dw	mode2
     155.  00:9C68  15 9C               	dw	mode3
     156.  00:9C6A  0F 9C               	dw	mode4
     157.  00:9C6C  09 9C               	dw	mode5
     158.  00:9C6E  03 9C               	dw	mode6
     159.  00:9C70  FD 9B               	dw	mode7
     210   00:9C72                      
     211   00:9C72                      
     212   00:9C72                      	
     213   00:9C72                      ;;=====================================================
     214   00:9C72                      ;;DEFINICIÓN DE ESTRUCTURAS
     215   00:9C72                      ;;=====================================================		
     216   00:9C72                      	include "estructuras.asm"
       1.  00:9C72                      ;;=====================================================
       2.  00:9C72                      ;;DEFINICIÓN DE ESTRUCTURAS
       3.  00:9C72                      ;;=====================================================
       4.  00:9C72                      
       5.  00:9C72                      ;crear estructura
       6.  00:9C72                      
       7.  00:9C72                      	STRUCT ESTRUCTURA_PUNTOMIRA
       8.  00:9C72                    < posx			DB		POSXPM
       9.  00:9C72                    < posy			DB		POSYPM
      10.  00:9C72                    < escena			DB		0	;valores porsibles 0 (blanco+rojo en punto de mira) y NEG 0 (al revés)
      11.  00:9C72                    < velocidad		DB		0
      12.  00:9C72                    < boton2_pressed  DB		0
      13.  00:9C72                    < cadencia		DB		5	;nº de veces que se ejecutará el disparo antes de ejecutar un disparo real (porque cuando se pulsa la tecl dispara 3 ó 4 veces de rápido que va)
      14.  00:9C72                    < ; al final he decidido (ya que el punto de mira es el prota) que lo relacionado con el prota vaya en esta estructura
      15.  00:9C72                    < pm_aux1			DB		0	;para llegar a los 16 campos
      16.  00:9C72                    < pm_aux2			DB		0	;para llegar a los 16 campos
      17.  00:9C72                    < pm_aux3			DB		0	;para llegar a los 16 campos
      18.  00:9C72                    < pm_aux4			DB		0	;para llegar a los 16 campos
      19.  00:9C72                    < pm_aux5			DB		0	;para llegar a los 16 campos
      20.  00:9C72                    < pm_aux6			DB		0	;para llegar a los 16 campos
      21.  00:9C72                    < pm_aux7			DB		0	;para llegar a los 16 campos
      22.  00:9C72                    < pm_aux8			DB		0	;para llegar a los 16 campos
      23.  00:9C72                    < pm_aux9			DB		0	;para llegar a los 16 campos
      24.  00:9C72                    < pm_aux10		DB		0	;para llegar a los 16 campos
      25.  00:9C72                    < 	ENDSTRUCT;ESTRUCTURA_PUNTOMIRA
      26.  00:9C72                      
      27.  00:9C72                      	
      28.  00:9C72                      	STRUCT ESTRUCTURA_ENEMIGO
      29.  00:9C72                    < tipo				DB		0	;(0 serpiente por ejemplo) #FF muerto o no existe
      30.  00:9C72                    < posx				DB		5
      31.  00:9C72                    < posy				DB		50
      32.  00:9C72                    < color				DB		5
      33.  00:9C72                    < escena				DB		0
      34.  00:9C72                    < contador_siguiente_escena	DB	0
      35.  00:9C72                    < reset_contador		DB		0
      36.  00:9C72                    < dano				DB		0	;daño
      37.  00:9C72                    < energia				DB		0	;energía del enemigo... si llega a 0 => existe <- 0
      38.  00:9C72                    < ;indica el nº de sprite a mostrar y si está compuesto por uno o dos sprites y si están en horizontal o vertical
      39.  00:9C72                    < ver_hor				DB		0
      40.  00:9C72                    < manejador_dibujo 	DW		0
      41.  00:9C72                    < en_aux3				DB		0
      42.  00:9C72                    < en_aux4				DB		0
      43.  00:9C72                    < 	ENDSTRUCT;ESTRUCTURA_ENEMIGO
      44.  00:9C72                      	
      45.  00:9C72                      	STRUCT ESTRUCTURA_AYUDA		;vidas extra, plantas de curación de energía, reliquias				
      46.  00:9C72                    < activo				DB		0	;0 no activo <>0 activo 											0
      47.  00:9C72                    < postilemem_nousado	DW		0	;pos en memoria ver array_ayudas de cómo se mostrarán (wordaux2)	1,2
      48.  00:9C72                    < postilemem_usado	DW		0	;pos en memoria ver array_ayudas de cómo se mostrarán (wordaux2)	3,4
      49.  00:9C72                    < pospantalla			DB		0	;pos en pantalla (memoria en el banco 1 se le suma 256 + TILEMAP) (wordaux1)	5
      50.  00:9C72                    < posx				DB		0	;pos del pixel central (esquina superior + 8x)						6
      51.  00:9C72                    < posy				DB		112	;pos del pixel central (esquina superior + 8y) (para toas igual)	7
      52.  00:9C72                    < puntero_accion		DW		0	;subrutina que indica la acción si se dispara en el objeto			8,9
      53.  00:9C72                    < ayu_aux1			DB		0	;relleno
      54.  00:9C72                    < ayu_aux2			DB		0	;relleno
      55.  00:9C72                    < ayu_aux3			DB		0	;relleno
      56.  00:9C72                    < ayu_aux4			DB		0	;relleno
      57.  00:9C72                    < ayu_aux5			DB		0	;relleno
      58.  00:9C72                    < ayu_aux6			DB		0	;relleno
      59.  00:9C72                    < 	ENDSTRUCT;ESTRUCTURA_AYUDA
      60.  00:9C72                      
      61.  00:9C72                      
      62.  00:9C72                      	STRUCT ESTRUCTURA_ANTORCHA
      63.  00:9C72                    < activo				DB		0	;0 no activa <>0 activo
      64.  00:9C72                    < postilemem_antor1	DW		0	;pos en memoria ver array_antorcha de cómo se mostrará (wordaux2)	1,2
      65.  00:9C72                    < pospantalla_antor1	DB		0	;pos en pantalla (memoria en el banco 1 se le suma 256 + TILEMAP) (wordaux1)	3
      66.  00:9C72                    < pospantalla_antor2	DB		0	;pos en pantalla (memoria en el banco 1 se le suma 256 + TILEMAP) (wordaux1)	4
      67.  00:9C72                    < escena				DB		0	;(va entre 0 y 1 - 0=>llama1 y llama2 o 1=>llama2 y llama1	7 - tiles 196 y 197)	5
      68.  00:9C72                    < cont_sig_escena		DB		10	;	6
      69.  00:9C72                    < 	ENDSTRUCT;ESTRUCTURA_ANTORCHA
      70.  00:9C72                      
      71.  00:9C72                      	STRUCT ESTRUCTURA_ESQUELETO
      72.  00:9C72                    < activo				DB		0	;0 no activa <>0 activo
      73.  00:9C72                    < postilemem_antor1	DW		0	;pos en memoria ver array_antorcha de cómo se mostrará (wordaux2)	1,2
      74.  00:9C72                    < pospantalla_esquel1	DB		0	;pos en pantalla (memoria en el banco 1 se le suma 256 + TILEMAP) (wordaux1)	3
      75.  00:9C72                    < pospantalla_esquel2	DB		0	;pos en pantalla (memoria en el banco 1 se le suma 256 + TILEMAP) (wordaux1)	4
      76.  00:9C72                    < escena				DB		0	;(va entre 0 y 4 - tiles 164, 165, 164, 166)	5
      77.  00:9C72                    < cont_sig_escena		DB		0	;	6
      78.  00:9C72                    < 	ENDSTRUCT;ESTRUCTURA_ESQUELETO
      79.  00:9C72                      	
      80.  00:9C72                      	STRUCT ESTRUCTURA_PUERTA	;también servirá para la escalera
      81.  00:9C72                    < activo				DB		0	;0 no activa <>0 activo
      82.  00:9C72                    < posx				DB		0	;punto x de la puerta para cuando se dispare encima
      83.  00:9C72                    < posy				DB		0	;punto y de la puerta para cuando se dispare encima
      84.  00:9C72                    < radiox				DB		0	;radio x de la puerta para cuando se dispare encima
      85.  00:9C72                    < radioy				DB		0	;radio y de la puerta para cuando se dispare encima
      86.  00:9C72                    < accion				DW		0	;función para acción de cada tipo de puerta
      87.  00:9C72                    < tiles_puerta		DW		0	;puntero al array con los tiles de las puertas para wordaux2
      88.  00:9C72                    < pos_en_tilemap		DW		0	;calcula posición en tilemap para wordaux1
      89.  00:9C72                    < alto				DB		0	;alto en tiles del dibujo de la puerta (filas)
      90.  00:9C72                    < ancho				DB		0	;ancho en tiles del dibujo de la puerta (columnas)
      91.  00:9C72                    < 	ENDSTRUCT;ESTRUCTURA_PUERTA
      92.  00:9C72                      
      93.  00:9C72                      
      94.  00:9C72                      
      95.  00:9C72                      
      96.  00:9C72                      
      97.  00:9C72                      
     217   00:9C72                      	
     218   00:9C72                      ;;=====================================================
     219   00:9C72                      ;;DEFINICIÓN DE VARIABLES
     220   00:9C72                      ;;=====================================================		
     221   00:9C72                      	include "sprites.asm"
       1.  00:9C72                      ;;=====================================================
       2.  00:9C72                      ;;DEFINICIÓN DE SPRITES
       3.  00:9C72                      ;;=====================================================	
       4.  00:9C72                      
       5.  00:9C72                      
       6.  00:9C72                      ;; NOTA:
       7.  00:9C72                      ;~ sprite_reliquia_oracion: on/off
       8.  00:9C72                      ;~ sprite_reliquia_cruz: on/off
       9.  00:9C72                      ;~ sprite_reliquia_agua: on/off
      10.  00:9C72                      ;~ sprite_peto: on/off
      11.  00:9C72                      ;~ sprite_planta: on/off
      12.  00:9C72                      ;~ sprite_vida_extra: on/off
      13.  00:9C72                      ;~ sprite_ballesta_mejorada: on/off
      14.  00:9C72                      
      15.  00:9C72                      ;~ iban a ser sprites pero por falta de recursos serán tiles
      16.  00:9C72                      
      17.  00:9C72                      
      18.  00:9C72                      sprites_pantantalla:
      19.  00:9C72                      
      20.  00:9C72                      ;; PARTE 1: SPRITES COMUNES
      21.  00:9C72                      
      22.  00:9C72                      sprites_comunes:
      23.  00:9C72                      sprite_punto_mira_1:	;color 8
      24.  00:9C72                      	db #FF,#FF,#C0,#C0,#C0,#C0,#C0,#C0
      24.  00:9C72  FF FF C0 C0 C0 C0 C0 C0 
      25.  00:9C7A                      	db #C0,#C0,#C0,#C0,#C0,#C0,#FF,#FF
      25.  00:9C7A  C0 C0 C0 C0 C0 C0 FF FF 
      26.  00:9C82                      	db #FF,#FF,#03,#03,#03,#03,#03,#03
      26.  00:9C82  FF FF 03 03 03 03 03 03 
      27.  00:9C8A                      	db #03,#03,#03,#03,#03,#03,#FF,#FF
      27.  00:9C8A  03 03 03 03 03 03 FF FF 
      28.  00:9C92                      	
      29.  00:9C92                      sprite_punto_mira_2: 	;color 15
      30.  00:9C92                      	db #00,#00,#00,#00,#0F,#0F,#0C,#0C
      30.  00:9C92  00 00 00 00 0F 0F 0C 0C 
      31.  00:9C9A                      	db #0C,#0C,#0F,#0F,#00,#00,#00,#00
      31.  00:9C9A  0C 0C 0F 0F 00 00 00 00 
      32.  00:9CA2                      	db #00,#00,#00,#00,#F0,#F0,#30,#30
      32.  00:9CA2  00 00 00 00 F0 F0 30 30 
      33.  00:9CAA                      	db #30,#30,#F0,#F0,#00,#00,#00,#00
      33.  00:9CAA  30 30 F0 F0 00 00 00 00 
      34.  00:9CB2                      	
      35.  00:9CB2                      sprite_punto_mira_1_mejorado:
      36.  00:9CB2                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      36.  00:9CB2  FF FF FF FF FF FF FF FF 
      37.  00:9CBA                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      37.  00:9CBA  FF FF FF FF FF FF FF FF 
      38.  00:9CC2                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      38.  00:9CC2  FF FF FF FF FF FF FF FF 
      39.  00:9CCA                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      39.  00:9CCA  FF FF FF FF FF FF FF FF 
      40.  00:9CD2                      
      41.  00:9CD2                      sprite_punto_mira_2_mejorado:
      42.  00:9CD2                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      42.  00:9CD2  FF FF FF FF FF FF FF FF 
      43.  00:9CDA                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      43.  00:9CDA  FF FF FF FF FF FF FF FF 
      44.  00:9CE2                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      44.  00:9CE2  FF FF FF FF FF FF FF FF 
      45.  00:9CEA                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      45.  00:9CEA  FF FF FF FF FF FF FF FF 
      46.  00:9CF2                      	
      47.  00:9CF2                      sprite_explosion_1:
      48.  00:9CF2                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      48.  00:9CF2  FF FF FF FF FF FF FF FF 
      49.  00:9CFA                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      49.  00:9CFA  FF FF FF FF FF FF FF FF 
      50.  00:9D02                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      50.  00:9D02  FF FF FF FF FF FF FF FF 
      51.  00:9D0A                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF	
      51.  00:9D0A  FF FF FF FF FF FF FF FF 
      52.  00:9D12                      
      53.  00:9D12                      sprite_explosion_2:
      54.  00:9D12                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      54.  00:9D12  FF FF FF FF FF FF FF FF 
      55.  00:9D1A                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      55.  00:9D1A  FF FF FF FF FF FF FF FF 
      56.  00:9D22                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      56.  00:9D22  FF FF FF FF FF FF FF FF 
      57.  00:9D2A                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF	
      57.  00:9D2A  FF FF FF FF FF FF FF FF 
      58.  00:9D32                      fin_sprites_comunes:
      59.  00:9D32                      
      60.  00:9D32                      ;; PARTE 2: SPRITES NO COMUNES
      61.  00:9D32                      
      62.  00:9D32                      ;; ARAÑA
      63.  00:9D32                      	
      64.  00:9D32                      sprite_arana1_1:
      65.  00:9D32                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      65.  00:9D32  FF FF FF FF FF FF FF FF 
      66.  00:9D3A                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      66.  00:9D3A  FF FF FF FF FF FF FF FF 
      67.  00:9D42                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      67.  00:9D42  FF FF FF FF FF FF FF FF 
      68.  00:9D4A                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      68.  00:9D4A  FF FF FF FF FF FF FF FF 
      69.  00:9D52                      	
      70.  00:9D52                      sprite_arana1_2:
      71.  00:9D52                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      71.  00:9D52  FF FF FF FF FF FF FF FF 
      72.  00:9D5A                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      72.  00:9D5A  FF FF FF FF FF FF FF FF 
      73.  00:9D62                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      73.  00:9D62  FF FF FF FF FF FF FF FF 
      74.  00:9D6A                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      74.  00:9D6A  FF FF FF FF FF FF FF FF 
      75.  00:9D72                      
      76.  00:9D72                      ;; MURCIELAGO
      77.  00:9D72                      	
      78.  00:9D72                      sprite_murcielago1_1:
      79.  00:9D72                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      79.  00:9D72  FF FF FF FF FF FF FF FF 
      80.  00:9D7A                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      80.  00:9D7A  FF FF FF FF FF FF FF FF 
      81.  00:9D82                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      81.  00:9D82  FF FF FF FF FF FF FF FF 
      82.  00:9D8A                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      82.  00:9D8A  FF FF FF FF FF FF FF FF 
      83.  00:9D92                      	
      84.  00:9D92                      sprite_murcielago1_2:
      85.  00:9D92                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      85.  00:9D92  FF FF FF FF FF FF FF FF 
      86.  00:9D9A                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      86.  00:9D9A  FF FF FF FF FF FF FF FF 
      87.  00:9DA2                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      87.  00:9DA2  FF FF FF FF FF FF FF FF 
      88.  00:9DAA                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF	
      88.  00:9DAA  FF FF FF FF FF FF FF FF 
      89.  00:9DB2                      
      90.  00:9DB2                      ;; SERPIENTE
      91.  00:9DB2                      
      92.  00:9DB2                      sprite_serpiente1_1:
      93.  00:9DB2                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      93.  00:9DB2  FF FF FF FF FF FF FF FF 
      94.  00:9DBA                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      94.  00:9DBA  FF FF FF FF FF FF FF FF 
      95.  00:9DC2                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      95.  00:9DC2  FF FF FF FF FF FF FF FF 
      96.  00:9DCA                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      96.  00:9DCA  FF FF FF FF FF FF FF FF 
      97.  00:9DD2                      	
      98.  00:9DD2                      sprite_serpiente1_2:
      99.  00:9DD2                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      99.  00:9DD2  FF FF FF FF FF FF FF FF 
     100.  00:9DDA                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     100.  00:9DDA  FF FF FF FF FF FF FF FF 
     101.  00:9DE2                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     101.  00:9DE2  FF FF FF FF FF FF FF FF 
     102.  00:9DEA                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     102.  00:9DEA  FF FF FF FF FF FF FF FF 
     103.  00:9DF2                      	
     104.  00:9DF2                      sprite_serpiente2_1:
     105.  00:9DF2                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     105.  00:9DF2  FF FF FF FF FF FF FF FF 
     106.  00:9DFA                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     106.  00:9DFA  FF FF FF FF FF FF FF FF 
     107.  00:9E02                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     107.  00:9E02  FF FF FF FF FF FF FF FF 
     108.  00:9E0A                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     108.  00:9E0A  FF FF FF FF FF FF FF FF 
     109.  00:9E12                      	
     110.  00:9E12                      sprite_serpiente2_2:
     111.  00:9E12                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     111.  00:9E12  FF FF FF FF FF FF FF FF 
     112.  00:9E1A                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     112.  00:9E1A  FF FF FF FF FF FF FF FF 
     113.  00:9E22                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     113.  00:9E22  FF FF FF FF FF FF FF FF 
     114.  00:9E2A                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     114.  00:9E2A  FF FF FF FF FF FF FF FF 
     115.  00:9E32                      
     116.  00:9E32                      ;; ZOMBI
     117.  00:9E32                      
     118.  00:9E32                      sprite_zombi1_1_1:
     119.  00:9E32                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     119.  00:9E32  FF FF FF FF FF FF FF FF 
     120.  00:9E3A                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     120.  00:9E3A  FF FF FF FF FF FF FF FF 
     121.  00:9E42                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     121.  00:9E42  FF FF FF FF FF FF FF FF 
     122.  00:9E4A                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     122.  00:9E4A  FF FF FF FF FF FF FF FF 
     123.  00:9E52                      
     124.  00:9E52                      sprite_zombi1_2_1:
     125.  00:9E52                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     125.  00:9E52  FF FF FF FF FF FF FF FF 
     126.  00:9E5A                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     126.  00:9E5A  FF FF FF FF FF FF FF FF 
     127.  00:9E62                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     127.  00:9E62  FF FF FF FF FF FF FF FF 
     128.  00:9E6A                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     128.  00:9E6A  FF FF FF FF FF FF FF FF 
     129.  00:9E72                      	
     130.  00:9E72                      sprite_zombi1_3_1:
     131.  00:9E72                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     131.  00:9E72  FF FF FF FF FF FF FF FF 
     132.  00:9E7A                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     132.  00:9E7A  FF FF FF FF FF FF FF FF 
     133.  00:9E82                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     133.  00:9E82  FF FF FF FF FF FF FF FF 
     134.  00:9E8A                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     134.  00:9E8A  FF FF FF FF FF FF FF FF 
     135.  00:9E92                      	
     136.  00:9E92                      sprite_zombi1_4_1:
     137.  00:9E92                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     137.  00:9E92  FF FF FF FF FF FF FF FF 
     138.  00:9E9A                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     138.  00:9E9A  FF FF FF FF FF FF FF FF 
     139.  00:9EA2                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     139.  00:9EA2  FF FF FF FF FF FF FF FF 
     140.  00:9EAA                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     140.  00:9EAA  FF FF FF FF FF FF FF FF 
     141.  00:9EB2                      	
     142.  00:9EB2                      sprite_zombi1_1_2:
     143.  00:9EB2                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     143.  00:9EB2  FF FF FF FF FF FF FF FF 
     144.  00:9EBA                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     144.  00:9EBA  FF FF FF FF FF FF FF FF 
     145.  00:9EC2                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     145.  00:9EC2  FF FF FF FF FF FF FF FF 
     146.  00:9ECA                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     146.  00:9ECA  FF FF FF FF FF FF FF FF 
     147.  00:9ED2                      
     148.  00:9ED2                      sprite_zombi1_2_2:
     149.  00:9ED2                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     149.  00:9ED2  FF FF FF FF FF FF FF FF 
     150.  00:9EDA                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     150.  00:9EDA  FF FF FF FF FF FF FF FF 
     151.  00:9EE2                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     151.  00:9EE2  FF FF FF FF FF FF FF FF 
     152.  00:9EEA                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     152.  00:9EEA  FF FF FF FF FF FF FF FF 
     153.  00:9EF2                      	
     154.  00:9EF2                      sprite_zombi1_3_2:
     155.  00:9EF2                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     155.  00:9EF2  FF FF FF FF FF FF FF FF 
     156.  00:9EFA                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     156.  00:9EFA  FF FF FF FF FF FF FF FF 
     157.  00:9F02                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     157.  00:9F02  FF FF FF FF FF FF FF FF 
     158.  00:9F0A                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     158.  00:9F0A  FF FF FF FF FF FF FF FF 
     159.  00:9F12                      	
     160.  00:9F12                      sprite_zombi1_4_2:
     161.  00:9F12                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     161.  00:9F12  FF FF FF FF FF FF FF FF 
     162.  00:9F1A                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     162.  00:9F1A  FF FF FF FF FF FF FF FF 
     163.  00:9F22                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     163.  00:9F22  FF FF FF FF FF FF FF FF 
     164.  00:9F2A                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     164.  00:9F2A  FF FF FF FF FF FF FF FF 
     165.  00:9F32                      	
     166.  00:9F32                      sprite_zombi2_1_1:
     167.  00:9F32                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     167.  00:9F32  FF FF FF FF FF FF FF FF 
     168.  00:9F3A                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     168.  00:9F3A  FF FF FF FF FF FF FF FF 
     169.  00:9F42                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     169.  00:9F42  FF FF FF FF FF FF FF FF 
     170.  00:9F4A                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     170.  00:9F4A  FF FF FF FF FF FF FF FF 
     171.  00:9F52                      
     172.  00:9F52                      sprite_zombi2_2_1:
     173.  00:9F52                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     173.  00:9F52  FF FF FF FF FF FF FF FF 
     174.  00:9F5A                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     174.  00:9F5A  FF FF FF FF FF FF FF FF 
     175.  00:9F62                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     175.  00:9F62  FF FF FF FF FF FF FF FF 
     176.  00:9F6A                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     176.  00:9F6A  FF FF FF FF FF FF FF FF 
     177.  00:9F72                      	
     178.  00:9F72                      sprite_zombi2_3_1:
     179.  00:9F72                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     179.  00:9F72  FF FF FF FF FF FF FF FF 
     180.  00:9F7A                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     180.  00:9F7A  FF FF FF FF FF FF FF FF 
     181.  00:9F82                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     181.  00:9F82  FF FF FF FF FF FF FF FF 
     182.  00:9F8A                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     182.  00:9F8A  FF FF FF FF FF FF FF FF 
     183.  00:9F92                      	
     184.  00:9F92                      sprite_zombi2_4_1:
     185.  00:9F92                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     185.  00:9F92  FF FF FF FF FF FF FF FF 
     186.  00:9F9A                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     186.  00:9F9A  FF FF FF FF FF FF FF FF 
     187.  00:9FA2                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     187.  00:9FA2  FF FF FF FF FF FF FF FF 
     188.  00:9FAA                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     188.  00:9FAA  FF FF FF FF FF FF FF FF 
     189.  00:9FB2                      	
     190.  00:9FB2                      sprite_zombi2_1_2:
     191.  00:9FB2                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     191.  00:9FB2  FF FF FF FF FF FF FF FF 
     192.  00:9FBA                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     192.  00:9FBA  FF FF FF FF FF FF FF FF 
     193.  00:9FC2                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     193.  00:9FC2  FF FF FF FF FF FF FF FF 
     194.  00:9FCA                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     194.  00:9FCA  FF FF FF FF FF FF FF FF 
     195.  00:9FD2                      
     196.  00:9FD2                      sprite_zombi2_2_2:
     197.  00:9FD2                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     197.  00:9FD2  FF FF FF FF FF FF FF FF 
     198.  00:9FDA                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     198.  00:9FDA  FF FF FF FF FF FF FF FF 
     199.  00:9FE2                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     199.  00:9FE2  FF FF FF FF FF FF FF FF 
     200.  00:9FEA                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     200.  00:9FEA  FF FF FF FF FF FF FF FF 
     201.  00:9FF2                      	
     202.  00:9FF2                      sprite_zombi2_3_2:
     203.  00:9FF2                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     203.  00:9FF2  FF FF FF FF FF FF FF FF 
     204.  00:9FFA                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     204.  00:9FFA  FF FF FF FF FF FF FF FF 
     205.  00:A002                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     205.  00:A002  FF FF FF FF FF FF FF FF 
     206.  00:A00A                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     206.  00:A00A  FF FF FF FF FF FF FF FF 
     207.  00:A012                      	
     208.  00:A012                      sprite_zombi2_4_2:
     209.  00:A012                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     209.  00:A012  FF FF FF FF FF FF FF FF 
     210.  00:A01A                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     210.  00:A01A  FF FF FF FF FF FF FF FF 
     211.  00:A022                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     211.  00:A022  FF FF FF FF FF FF FF FF 
     212.  00:A02A                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     212.  00:A02A  FF FF FF FF FF FF FF FF 
     213.  00:A032                      	
     214.  00:A032                      ;; CABALLERO
     215.  00:A032                      
     216.  00:A032                      sprite_caballero1_1_1:
     217.  00:A032                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     217.  00:A032  FF FF FF FF FF FF FF FF 
     218.  00:A03A                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     218.  00:A03A  FF FF FF FF FF FF FF FF 
     219.  00:A042                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     219.  00:A042  FF FF FF FF FF FF FF FF 
     220.  00:A04A                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     220.  00:A04A  FF FF FF FF FF FF FF FF 
     221.  00:A052                      
     222.  00:A052                      sprite_caballero1_2_1:
     223.  00:A052                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     223.  00:A052  FF FF FF FF FF FF FF FF 
     224.  00:A05A                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     224.  00:A05A  FF FF FF FF FF FF FF FF 
     225.  00:A062                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     225.  00:A062  FF FF FF FF FF FF FF FF 
     226.  00:A06A                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     226.  00:A06A  FF FF FF FF FF FF FF FF 
     227.  00:A072                      	
     228.  00:A072                      sprite_caballero1_3_1:
     229.  00:A072                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     229.  00:A072  FF FF FF FF FF FF FF FF 
     230.  00:A07A                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     230.  00:A07A  FF FF FF FF FF FF FF FF 
     231.  00:A082                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     231.  00:A082  FF FF FF FF FF FF FF FF 
     232.  00:A08A                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     232.  00:A08A  FF FF FF FF FF FF FF FF 
     233.  00:A092                      	
     234.  00:A092                      sprite_caballero1_4_1:
     235.  00:A092                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     235.  00:A092  FF FF FF FF FF FF FF FF 
     236.  00:A09A                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     236.  00:A09A  FF FF FF FF FF FF FF FF 
     237.  00:A0A2                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     237.  00:A0A2  FF FF FF FF FF FF FF FF 
     238.  00:A0AA                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     238.  00:A0AA  FF FF FF FF FF FF FF FF 
     239.  00:A0B2                      	
     240.  00:A0B2                      sprite_caballero1_1_2:
     241.  00:A0B2                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     241.  00:A0B2  FF FF FF FF FF FF FF FF 
     242.  00:A0BA                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     242.  00:A0BA  FF FF FF FF FF FF FF FF 
     243.  00:A0C2                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     243.  00:A0C2  FF FF FF FF FF FF FF FF 
     244.  00:A0CA                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     244.  00:A0CA  FF FF FF FF FF FF FF FF 
     245.  00:A0D2                      
     246.  00:A0D2                      sprite_caballero1_2_2:
     247.  00:A0D2                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     247.  00:A0D2  FF FF FF FF FF FF FF FF 
     248.  00:A0DA                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     248.  00:A0DA  FF FF FF FF FF FF FF FF 
     249.  00:A0E2                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     249.  00:A0E2  FF FF FF FF FF FF FF FF 
     250.  00:A0EA                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     250.  00:A0EA  FF FF FF FF FF FF FF FF 
     251.  00:A0F2                      	
     252.  00:A0F2                      sprite_caballero1_3_2:
     253.  00:A0F2                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     253.  00:A0F2  FF FF FF FF FF FF FF FF 
     254.  00:A0FA                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     254.  00:A0FA  FF FF FF FF FF FF FF FF 
     255.  00:A102                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     255.  00:A102  FF FF FF FF FF FF FF FF 
     256.  00:A10A                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     256.  00:A10A  FF FF FF FF FF FF FF FF 
     257.  00:A112                      	
     258.  00:A112                      sprite_caballero1_4_2:
     259.  00:A112                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     259.  00:A112  FF FF FF FF FF FF FF FF 
     260.  00:A11A                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     260.  00:A11A  FF FF FF FF FF FF FF FF 
     261.  00:A122                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     261.  00:A122  FF FF FF FF FF FF FF FF 
     262.  00:A12A                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     262.  00:A12A  FF FF FF FF FF FF FF FF 
     263.  00:A132                      	
     264.  00:A132                      sprite_caballero2_1_1:
     265.  00:A132                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     265.  00:A132  FF FF FF FF FF FF FF FF 
     266.  00:A13A                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     266.  00:A13A  FF FF FF FF FF FF FF FF 
     267.  00:A142                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     267.  00:A142  FF FF FF FF FF FF FF FF 
     268.  00:A14A                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     268.  00:A14A  FF FF FF FF FF FF FF FF 
     269.  00:A152                      
     270.  00:A152                      sprite_caballero2_2_1:
     271.  00:A152                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     271.  00:A152  FF FF FF FF FF FF FF FF 
     272.  00:A15A                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     272.  00:A15A  FF FF FF FF FF FF FF FF 
     273.  00:A162                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     273.  00:A162  FF FF FF FF FF FF FF FF 
     274.  00:A16A                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     274.  00:A16A  FF FF FF FF FF FF FF FF 
     275.  00:A172                      	
     276.  00:A172                      sprite_caballero2_3_1:
     277.  00:A172                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     277.  00:A172  FF FF FF FF FF FF FF FF 
     278.  00:A17A                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     278.  00:A17A  FF FF FF FF FF FF FF FF 
     279.  00:A182                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     279.  00:A182  FF FF FF FF FF FF FF FF 
     280.  00:A18A                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     280.  00:A18A  FF FF FF FF FF FF FF FF 
     281.  00:A192                      	
     282.  00:A192                      sprite_caballero2_4_1:
     283.  00:A192                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     283.  00:A192  FF FF FF FF FF FF FF FF 
     284.  00:A19A                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     284.  00:A19A  FF FF FF FF FF FF FF FF 
     285.  00:A1A2                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     285.  00:A1A2  FF FF FF FF FF FF FF FF 
     286.  00:A1AA                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     286.  00:A1AA  FF FF FF FF FF FF FF FF 
     287.  00:A1B2                      	
     288.  00:A1B2                      sprite_caballero2_1_2:
     289.  00:A1B2                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     289.  00:A1B2  FF FF FF FF FF FF FF FF 
     290.  00:A1BA                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     290.  00:A1BA  FF FF FF FF FF FF FF FF 
     291.  00:A1C2                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     291.  00:A1C2  FF FF FF FF FF FF FF FF 
     292.  00:A1CA                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     292.  00:A1CA  FF FF FF FF FF FF FF FF 
     293.  00:A1D2                      
     294.  00:A1D2                      sprite_caballero2_2_2:
     295.  00:A1D2                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     295.  00:A1D2  FF FF FF FF FF FF FF FF 
     296.  00:A1DA                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     296.  00:A1DA  FF FF FF FF FF FF FF FF 
     297.  00:A1E2                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     297.  00:A1E2  FF FF FF FF FF FF FF FF 
     298.  00:A1EA                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     298.  00:A1EA  FF FF FF FF FF FF FF FF 
     299.  00:A1F2                      	
     300.  00:A1F2                      sprite_caballero2_3_2:
     301.  00:A1F2                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     301.  00:A1F2  FF FF FF FF FF FF FF FF 
     302.  00:A1FA                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     302.  00:A1FA  FF FF FF FF FF FF FF FF 
     303.  00:A202                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     303.  00:A202  FF FF FF FF FF FF FF FF 
     304.  00:A20A                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     304.  00:A20A  FF FF FF FF FF FF FF FF 
     305.  00:A212                      	
     306.  00:A212                      sprite_caballero2_4_2:
     307.  00:A212                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     307.  00:A212  FF FF FF FF FF FF FF FF 
     308.  00:A21A                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     308.  00:A21A  FF FF FF FF FF FF FF FF 
     309.  00:A222                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     309.  00:A222  FF FF FF FF FF FF FF FF 
     310.  00:A22A                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     310.  00:A22A  FF FF FF FF FF FF FF FF 
     311.  00:A232                      	
     312.  00:A232                      ;; LLAMA
     313.  00:A232                      
     314.  00:A232                      sprite_llama1_1:	
     315.  00:A232                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     315.  00:A232  FF FF FF FF FF FF FF FF 
     316.  00:A23A                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     316.  00:A23A  FF FF FF FF FF FF FF FF 
     317.  00:A242                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     317.  00:A242  FF FF FF FF FF FF FF FF 
     318.  00:A24A                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     318.  00:A24A  FF FF FF FF FF FF FF FF 
     319.  00:A252                      	
     320.  00:A252                      sprite_llama2_1:	
     321.  00:A252                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     321.  00:A252  FF FF FF FF FF FF FF FF 
     322.  00:A25A                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     322.  00:A25A  FF FF FF FF FF FF FF FF 
     323.  00:A262                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     323.  00:A262  FF FF FF FF FF FF FF FF 
     324.  00:A26A                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF	
     324.  00:A26A  FF FF FF FF FF FF FF FF 
     325.  00:A272                      	
     326.  00:A272                      sprite_llama1_2:	
     327.  00:A272                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     327.  00:A272  FF FF FF FF FF FF FF FF 
     328.  00:A27A                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     328.  00:A27A  FF FF FF FF FF FF FF FF 
     329.  00:A282                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     329.  00:A282  FF FF FF FF FF FF FF FF 
     330.  00:A28A                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     330.  00:A28A  FF FF FF FF FF FF FF FF 
     331.  00:A292                      	
     332.  00:A292                      sprite_llama2_2:	
     333.  00:A292                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     333.  00:A292  FF FF FF FF FF FF FF FF 
     334.  00:A29A                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     334.  00:A29A  FF FF FF FF FF FF FF FF 
     335.  00:A2A2                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     335.  00:A2A2  FF FF FF FF FF FF FF FF 
     336.  00:A2AA                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF			
     336.  00:A2AA  FF FF FF FF FF FF FF FF 
     337.  00:A2B2                      	
     338.  00:A2B2                      ;; FANTASMA
     339.  00:A2B2                      
     340.  00:A2B2                      sprite_fantasma1_1:
     341.  00:A2B2                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     341.  00:A2B2  FF FF FF FF FF FF FF FF 
     342.  00:A2BA                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     342.  00:A2BA  FF FF FF FF FF FF FF FF 
     343.  00:A2C2                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     343.  00:A2C2  FF FF FF FF FF FF FF FF 
     344.  00:A2CA                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     344.  00:A2CA  FF FF FF FF FF FF FF FF 
     345.  00:A2D2                      
     346.  00:A2D2                      sprite_fantasma2_1:
     347.  00:A2D2                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     347.  00:A2D2  FF FF FF FF FF FF FF FF 
     348.  00:A2DA                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     348.  00:A2DA  FF FF FF FF FF FF FF FF 
     349.  00:A2E2                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     349.  00:A2E2  FF FF FF FF FF FF FF FF 
     350.  00:A2EA                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     350.  00:A2EA  FF FF FF FF FF FF FF FF 
     351.  00:A2F2                      
     352.  00:A2F2                      sprite_fantasma1_2:
     353.  00:A2F2                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     353.  00:A2F2  FF FF FF FF FF FF FF FF 
     354.  00:A2FA                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     354.  00:A2FA  FF FF FF FF FF FF FF FF 
     355.  00:A302                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     355.  00:A302  FF FF FF FF FF FF FF FF 
     356.  00:A30A                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     356.  00:A30A  FF FF FF FF FF FF FF FF 
     357.  00:A312                      
     358.  00:A312                      sprite_fantasma2_2:
     359.  00:A312                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     359.  00:A312  FF FF FF FF FF FF FF FF 
     360.  00:A31A                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     360.  00:A31A  FF FF FF FF FF FF FF FF 
     361.  00:A322                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     361.  00:A322  FF FF FF FF FF FF FF FF 
     362.  00:A32A                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF	
     362.  00:A32A  FF FF FF FF FF FF FF FF 
     363.  00:A332                      	
     364.  00:A332                      ;; MAGIA
     365.  00:A332                      
     366.  00:A332                      sprite_magia1_1:
     367.  00:A332                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     367.  00:A332  FF FF FF FF FF FF FF FF 
     368.  00:A33A                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     368.  00:A33A  FF FF FF FF FF FF FF FF 
     369.  00:A342                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     369.  00:A342  FF FF FF FF FF FF FF FF 
     370.  00:A34A                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     370.  00:A34A  FF FF FF FF FF FF FF FF 
     371.  00:A352                      
     372.  00:A352                      sprite_magia2_1:
     373.  00:A352                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     373.  00:A352  FF FF FF FF FF FF FF FF 
     374.  00:A35A                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     374.  00:A35A  FF FF FF FF FF FF FF FF 
     375.  00:A362                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     375.  00:A362  FF FF FF FF FF FF FF FF 
     376.  00:A36A                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     376.  00:A36A  FF FF FF FF FF FF FF FF 
     377.  00:A372                      
     378.  00:A372                      sprite_magia1_2:
     379.  00:A372                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     379.  00:A372  FF FF FF FF FF FF FF FF 
     380.  00:A37A                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     380.  00:A37A  FF FF FF FF FF FF FF FF 
     381.  00:A382                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     381.  00:A382  FF FF FF FF FF FF FF FF 
     382.  00:A38A                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     382.  00:A38A  FF FF FF FF FF FF FF FF 
     383.  00:A392                      
     384.  00:A392                      sprite_magia2_2:
     385.  00:A392                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     385.  00:A392  FF FF FF FF FF FF FF FF 
     386.  00:A39A                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     386.  00:A39A  FF FF FF FF FF FF FF FF 
     387.  00:A3A2                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     387.  00:A3A2  FF FF FF FF FF FF FF FF 
     388.  00:A3AA                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF	
     388.  00:A3AA  FF FF FF FF FF FF FF FF 
     389.  00:A3B2                      	
     390.  00:A3B2                      	
     391.  00:A3B2                      ;; BEHOLDER
     392.  00:A3B2                      
     393.  00:A3B2                      sprite_beholder1_1:
     394.  00:A3B2                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     394.  00:A3B2  FF FF FF FF FF FF FF FF 
     395.  00:A3BA                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     395.  00:A3BA  FF FF FF FF FF FF FF FF 
     396.  00:A3C2                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     396.  00:A3C2  FF FF FF FF FF FF FF FF 
     397.  00:A3CA                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     397.  00:A3CA  FF FF FF FF FF FF FF FF 
     398.  00:A3D2                      
     399.  00:A3D2                      sprite_beholder2_1:
     400.  00:A3D2                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     400.  00:A3D2  FF FF FF FF FF FF FF FF 
     401.  00:A3DA                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     401.  00:A3DA  FF FF FF FF FF FF FF FF 
     402.  00:A3E2                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     402.  00:A3E2  FF FF FF FF FF FF FF FF 
     403.  00:A3EA                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     403.  00:A3EA  FF FF FF FF FF FF FF FF 
     404.  00:A3F2                      
     405.  00:A3F2                      sprite_beholder3_1:
     406.  00:A3F2                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     406.  00:A3F2  FF FF FF FF FF FF FF FF 
     407.  00:A3FA                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     407.  00:A3FA  FF FF FF FF FF FF FF FF 
     408.  00:A402                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     408.  00:A402  FF FF FF FF FF FF FF FF 
     409.  00:A40A                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     409.  00:A40A  FF FF FF FF FF FF FF FF 
     410.  00:A412                      
     411.  00:A412                      sprite_beholder4_1:
     412.  00:A412                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     412.  00:A412  FF FF FF FF FF FF FF FF 
     413.  00:A41A                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     413.  00:A41A  FF FF FF FF FF FF FF FF 
     414.  00:A422                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     414.  00:A422  FF FF FF FF FF FF FF FF 
     415.  00:A42A                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF	
     415.  00:A42A  FF FF FF FF FF FF FF FF 
     416.  00:A432                      	
     417.  00:A432                      sprite_beholder1_2:
     418.  00:A432                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     418.  00:A432  FF FF FF FF FF FF FF FF 
     419.  00:A43A                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     419.  00:A43A  FF FF FF FF FF FF FF FF 
     420.  00:A442                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     420.  00:A442  FF FF FF FF FF FF FF FF 
     421.  00:A44A                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     421.  00:A44A  FF FF FF FF FF FF FF FF 
     422.  00:A452                      
     423.  00:A452                      sprite_beholder2_2:
     424.  00:A452                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     424.  00:A452  FF FF FF FF FF FF FF FF 
     425.  00:A45A                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     425.  00:A45A  FF FF FF FF FF FF FF FF 
     426.  00:A462                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     426.  00:A462  FF FF FF FF FF FF FF FF 
     427.  00:A46A                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     427.  00:A46A  FF FF FF FF FF FF FF FF 
     428.  00:A472                      
     429.  00:A472                      sprite_beholder3_2:
     430.  00:A472                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     430.  00:A472  FF FF FF FF FF FF FF FF 
     431.  00:A47A                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     431.  00:A47A  FF FF FF FF FF FF FF FF 
     432.  00:A482                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     432.  00:A482  FF FF FF FF FF FF FF FF 
     433.  00:A48A                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     433.  00:A48A  FF FF FF FF FF FF FF FF 
     434.  00:A492                      
     435.  00:A492                      sprite_beholder4_2:
     436.  00:A492                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     436.  00:A492  FF FF FF FF FF FF FF FF 
     437.  00:A49A                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     437.  00:A49A  FF FF FF FF FF FF FF FF 
     438.  00:A4A2                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     438.  00:A4A2  FF FF FF FF FF FF FF FF 
     439.  00:A4AA                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF		
     439.  00:A4AA  FF FF FF FF FF FF FF FF 
     440.  00:A4B2                      	
     441.  00:A4B2                      ;; VAMPIRO
     442.  00:A4B2                      
     443.  00:A4B2                      sprite_vampiro1_1:
     444.  00:A4B2                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     444.  00:A4B2  FF FF FF FF FF FF FF FF 
     445.  00:A4BA                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     445.  00:A4BA  FF FF FF FF FF FF FF FF 
     446.  00:A4C2                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     446.  00:A4C2  FF FF FF FF FF FF FF FF 
     447.  00:A4CA                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     447.  00:A4CA  FF FF FF FF FF FF FF FF 
     448.  00:A4D2                      
     449.  00:A4D2                      sprite_vampiro2_1:
     450.  00:A4D2                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     450.  00:A4D2  FF FF FF FF FF FF FF FF 
     451.  00:A4DA                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     451.  00:A4DA  FF FF FF FF FF FF FF FF 
     452.  00:A4E2                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     452.  00:A4E2  FF FF FF FF FF FF FF FF 
     453.  00:A4EA                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     453.  00:A4EA  FF FF FF FF FF FF FF FF 
     454.  00:A4F2                      
     455.  00:A4F2                      sprite_vampiro1_2:
     456.  00:A4F2                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     456.  00:A4F2  FF FF FF FF FF FF FF FF 
     457.  00:A4FA                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     457.  00:A4FA  FF FF FF FF FF FF FF FF 
     458.  00:A502                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     458.  00:A502  FF FF FF FF FF FF FF FF 
     459.  00:A50A                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     459.  00:A50A  FF FF FF FF FF FF FF FF 
     460.  00:A512                      
     461.  00:A512                      sprite_vampiro2_2:
     462.  00:A512                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     462.  00:A512  FF FF FF FF FF FF FF FF 
     463.  00:A51A                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     463.  00:A51A  FF FF FF FF FF FF FF FF 
     464.  00:A522                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     464.  00:A522  FF FF FF FF FF FF FF FF 
     465.  00:A52A                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     465.  00:A52A  FF FF FF FF FF FF FF FF 
     466.  00:A532                      	
     467.  00:A532                      ;; MANOIZQ
     468.  00:A532                      
     469.  00:A532                      sprite_manoizq1:
     470.  00:A532                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     470.  00:A532  FF FF FF FF FF FF FF FF 
     471.  00:A53A                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     471.  00:A53A  FF FF FF FF FF FF FF FF 
     472.  00:A542                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     472.  00:A542  FF FF FF FF FF FF FF FF 
     473.  00:A54A                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     473.  00:A54A  FF FF FF FF FF FF FF FF 
     474.  00:A552                      	
     475.  00:A552                      sprite_manoizq2:
     476.  00:A552                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     476.  00:A552  FF FF FF FF FF FF FF FF 
     477.  00:A55A                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     477.  00:A55A  FF FF FF FF FF FF FF FF 
     478.  00:A562                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     478.  00:A562  FF FF FF FF FF FF FF FF 
     479.  00:A56A                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     479.  00:A56A  FF FF FF FF FF FF FF FF 
     480.  00:A572                      	
     481.  00:A572                      sprite_manoizq3:
     482.  00:A572                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     482.  00:A572  FF FF FF FF FF FF FF FF 
     483.  00:A57A                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     483.  00:A57A  FF FF FF FF FF FF FF FF 
     484.  00:A582                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     484.  00:A582  FF FF FF FF FF FF FF FF 
     485.  00:A58A                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF	
     485.  00:A58A  FF FF FF FF FF FF FF FF 
     486.  00:A592                      	
     487.  00:A592                      ;; MANODER
     488.  00:A592                      
     489.  00:A592                      sprite_manoder1:
     490.  00:A592                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     490.  00:A592  FF FF FF FF FF FF FF FF 
     491.  00:A59A                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     491.  00:A59A  FF FF FF FF FF FF FF FF 
     492.  00:A5A2                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     492.  00:A5A2  FF FF FF FF FF FF FF FF 
     493.  00:A5AA                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     493.  00:A5AA  FF FF FF FF FF FF FF FF 
     494.  00:A5B2                      	
     495.  00:A5B2                      sprite_manoder2:
     496.  00:A5B2                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     496.  00:A5B2  FF FF FF FF FF FF FF FF 
     497.  00:A5BA                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     497.  00:A5BA  FF FF FF FF FF FF FF FF 
     498.  00:A5C2                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     498.  00:A5C2  FF FF FF FF FF FF FF FF 
     499.  00:A5CA                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     499.  00:A5CA  FF FF FF FF FF FF FF FF 
     500.  00:A5D2                      	
     501.  00:A5D2                      sprite_manoder3:
     502.  00:A5D2                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     502.  00:A5D2  FF FF FF FF FF FF FF FF 
     503.  00:A5DA                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     503.  00:A5DA  FF FF FF FF FF FF FF FF 
     504.  00:A5E2                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     504.  00:A5E2  FF FF FF FF FF FF FF FF 
     505.  00:A5EA                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF		
     505.  00:A5EA  FF FF FF FF FF FF FF FF 
     506.  00:A5F2                      	
     507.  00:A5F2                      	
     508.  00:A5F2                      	
     509.  00:A5F2                      	
     510.  00:A5F2                      	
     511.  00:A5F2                      	
     512.  00:A5F2                      	
     513.  00:A5F2                      	
     514.  00:A5F2                      	
     515.  00:A5F2                      	
     516.  00:A5F2                      	
     517.  00:A5F2                      	
     518.  00:A5F2                      	
     519.  00:A5F2                      	
     520.  00:A5F2                      	
     521.  00:A5F2                      	
     522.  00:A5F2                      	
     523.  00:A5F2                      	
     524.  00:A5F2                      	
     525.  00:A5F2                      	
     526.  00:A5F2                      	
     527.  00:A5F2                      	
     528.  00:A5F2                      	
     222   00:A5F2                      	
     223   00:A5F2                      	include "habitaciones.asm"
       1.  00:A5F2                      ;;=====================================================
       2.  00:A5F2                      ;;DEFINICIÓN DE HABITACIONES x NIVEL
       3.  00:A5F2                      ;;=====================================================	
       4.  00:A5F2                      
       5.  00:A5F2                      ; sólo voy a usar 7x7 pero como los arrays son lineales y voy a trabajar con matrices
       6.  00:A5F2                      ; me interesa que seande  8x8 aunque sólo trabaje con 7x7
       7.  00:A5F2                      
       8.  00:A5F2                      ; ojo... la primera linea corresponderá a la primera linea del castillo no a la última
       9.  00:A5F2                      
      10.  00:A5F2                      ;; definición de estructura de bits
      11.  00:A5F2                      ;16 bits por habitación
      12.  00:A5F2                      
      13.  00:A5F2                      ;NOTA: no es necesario asignar un bit para la puerta de arriba ya que en las habitaciones de la fila 7 sólo habrá una puerta que será una escalera
      14.  00:A5F2                      
      15.  00:A5F2                      ;~ 7 - sin asignar
      16.  00:A5F2                      ;~ 6 - sin asignar
      17.  00:A5F2                      ;~ 5 - esqueletos
      18.  00:A5F2                      ;~ 4 - todos los enemigos muertos 0 no y 1 ó <>0 => toca la variable "is_habitacion_terminada"
      19.  00:A5F2                      ;~ 0,1,2,3 - nº puertas 1 arriba 1 derecha 1 abajo 1 izquierda
      20.  00:A5F2                      
      21.  00:A5F2                      ;~ 7 - oracion
      22.  00:A5F2                      ;~ 6 - cruz
      23.  00:A5F2                      ;~ 5 - agua bendita
      24.  00:A5F2                      ;~ 4 - armadura
      25.  00:A5F2                      ;~ 3 - planta
      26.  00:A5F2                      ;~ 2 - vida extra
      27.  00:A5F2                      ;~ 1 - ballesta
      28.  00:A5F2                      ;~ 0 - antorchas
      29.  00:A5F2                      
      30.  00:A5F2                      ;importante: el byte de la columna 15 indicará con 1 y 0 habitaciones por las que se haya pasado
      31.  00:A5F2                      ;cuando se inicie la partida todos se pondrán a 0
      32.  00:A5F2                      ;por ejemplo 01000000b se ha pasado por la hab. 2 de esa fila en el nivel que sea
      33.  00:A5F2                      
      34.  00:A5F2                      habitacion_actual:
      35.  00:A5F2  00                  	db  0		;habitación donde se encuentre el prota. Se mete en una varible par traer todos los datos de golpe y no buscarlos varias veces
      36.  00:A5F3                      habitacion_extras:
      37.  00:A5F3  00                  	db	0		;donde van las ayudas de una habitación
      38.  00:A5F4                      habitacion_actual_puntero;
      39.  00:A5F4  00 00               	dw	0		;puntero para actualizar la habitación cuando se maten todos los enemigos
      40.  00:A5F6                      is_habitacion_terminada:
      41.  00:A5F6  00                  	db	0		;variable para consultar más rápido si se ha pasado (<>0 si se ha pasado y 0 no se ha pasado)
      42.  00:A5F7                      
      43.  00:A5F7                      
      44.  00:A5F7                      habitaciones_juego:
      45.  00:A5F7                      habitaciones_nivel0:
      46.  00:A5F7                      	db  00000000b,#C0,00000000b,#C0,00000000b,#C0,00001000b,#C0,00001000b,#C0,00000000b,#C0,00000000b,#C0,#00,#00 	;primera fila
      46.  00:A5F7  00 C0 00 C0 00 C0 08 C0 08 C0 00 C0 00 C0 00 00 
      47.  00:A607                      	db  00000000b,#C0,00001100b,#C0,00001101b,#C0,00001111b,#C0,00001101b,#C0,00001001b,#C0,00000000b,#C0,#00,#00
      47.  00:A607  00 C0 0C C0 0D C0 0F C0 0D C0 09 C0 00 C0 00 00 
      48.  00:A617                      	db  00000000b,#C0,00001110b,#C0,00001111b,#C0,00001111b,#C0,00001111b,#C0,00001011b,#C0,00000000b,#C0,#00,#00
      48.  00:A617  00 C0 0E C0 0F C0 0F C0 0F C0 0B C0 00 C0 00 00 
      49.  00:A627                      	db  00000000b,#C0,00001010b,#C0,00001010b,#C0,00000010b,#C0,00001010b,#C0,00001010b,#C0,00000000b,#C0,#00,#00
      49.  00:A627  00 C0 0A C0 0A C0 02 C0 0A C0 0A C0 00 C0 00 00 
      50.  00:A637                      	db  00000000b,#C0,00001010b,#C0,00001110b,#C0,00000101b,#C0,00001011b,#C0,00001010b,#C0,00000000b,#C0,#00,#00
      50.  00:A637  00 C0 0A C0 0E C0 05 C0 0B C0 0A C0 00 C0 00 00 
      51.  00:A647                      	db  00000000b,#C0,00000110b,#C0,00000111b,#C0,00001101b,#C0,00000111b,#C0,00000011b,#C0,00000000b,#C0,#00,#00
      51.  00:A647  00 C0 06 C0 07 C0 0D C0 07 C0 03 C0 00 C0 00 00 
      52.  00:A657                      	db  00000000b,#C0,00000000b,#C0,00000000b,#C0,00001010b,#C0,00001000b,#C0,00000000b,#C0,00000000b,#C0,#00,#00	;última fila
      52.  00:A657  00 C0 00 C0 00 C0 0A C0 08 C0 00 C0 00 C0 00 00 
      53.  00:A667                      	
      54.  00:A667                      habitaciones_nivel1:
      55.  00:A667                      	db  00000000b,#C0,00000000b,#C0,00000000b,#C0,00001000b,#C0,00001000b,#C0,00000000b,#C0,00000000b,#C0,#00,#00 	;primera fila
      55.  00:A667  00 C0 00 C0 00 C0 08 C0 08 C0 00 C0 00 C0 00 00 
      56.  00:A677                      	db  00000000b,#C0,00001100b,#C0,00001101b,#C0,00001111b,#C0,00001101b,#C0,00001001b,#C0,00000000b,#C0,#00,#00
      56.  00:A677  00 C0 0C C0 0D C0 0F C0 0D C0 09 C0 00 C0 00 00 
      57.  00:A687                      	db  00000000b,#C0,00001110b,#C0,00001111b,#C0,00001111b,#C0,00001111b,#C0,00001011b,#C0,00000000b,#C0,#00,#00
      57.  00:A687  00 C0 0E C0 0F C0 0F C0 0F C0 0B C0 00 C0 00 00 
      58.  00:A697                      	db  00000000b,#C0,00001010b,#C0,00001010b,#C0,00000010b,#C0,00001010b,#C0,00001010b,#C0,00000000b,#C0,#00,#00
      58.  00:A697  00 C0 0A C0 0A C0 02 C0 0A C0 0A C0 00 C0 00 00 
      59.  00:A6A7                      	db  00000000b,#C0,00001010b,#C0,00001110b,#C0,00000101b,#C0,00001011b,#C0,00001010b,#C0,00000000b,#C0,#00,#00
      59.  00:A6A7  00 C0 0A C0 0E C0 05 C0 0B C0 0A C0 00 C0 00 00 
      60.  00:A6B7                      	db  00000000b,#C0,00000110b,#C0,00000111b,#C0,00001101b,#C0,00000111b,#C0,00000011b,#C0,00000000b,#C0,#00,#00
      60.  00:A6B7  00 C0 06 C0 07 C0 0D C0 07 C0 03 C0 00 C0 00 00 
      61.  00:A6C7                      	db  00000000b,#C0,00000000b,#C0,00000000b,#C0,00001010b,#C0,00001000b,#C0,00000000b,#C0,00000000b,#C0,#00,#00	;última fila
      61.  00:A6C7  00 C0 00 C0 00 C0 0A C0 08 C0 00 C0 00 C0 00 00 
      62.  00:A6D7                      	
      63.  00:A6D7                      habitaciones_nivel2:
      64.  00:A6D7                      	db  00000000b,#00,00000001b,#01,00000010b,#02,00000011b,#03,00001000b,#04,00001001b,#05,00001100b,#06,#FF,#00 ;primera fila
      64.  00:A6D7  00 00 01 01 02 02 03 03 08 04 09 05 0C 06 FF 00 
      65.  00:A6E7                      	db  #17,#10,#11,#11,#12,#12,#13,#13,#14,#14,#15,#15,#16,#16,#FF,#00
      65.  00:A6E7  17 10 11 11 12 12 13 13 14 14 15 15 16 16 FF 00 
      66.  00:A6F7                      	db  #20,#20,#21,#21,#22,#22,#23,#23,#24,#24,#25,#25,#26,#26,#FF,#00
      66.  00:A6F7  20 20 21 21 22 22 23 23 24 24 25 25 26 26 FF 00 
      67.  00:A707                      	db  #30,#30,#31,#31,#32,#32,#33,#33,#34,#34,#35,#35,#36,#36,#FF,#00
      67.  00:A707  30 30 31 31 32 32 33 33 34 34 35 35 36 36 FF 00 
      68.  00:A717                      	db  00000000b,#00,00000001b,#01,00001111b,#02,00000011b,#03,00001000b,#04,00001001b,#05,00001100b,#06,#FF,#00
      68.  00:A717  00 00 01 01 0F 02 03 03 08 04 09 05 0C 06 FF 00 
      69.  00:A727                      	db  #50,#50,#51,#51,#52,#52,#53,#53,#54,#54,#55,#55,#56,#56,#FF,#00
      69.  00:A727  50 50 51 51 52 52 53 53 54 54 55 55 56 56 FF 00 
      70.  00:A737                      	db  00000000b,#00,00000001b,#01,00000010b,#02,00000011b,#03,00001000b,#04,00001001b,#05,00001100b,#06,#FF,#00	;ultima fila
      70.  00:A737  00 00 01 01 02 02 03 03 08 04 09 05 0C 06 FF 00 
      71.  00:A747                      	
      72.  00:A747                      habitaciones_nivel3:
      73.  00:A747                      	db  00000000b,#00,00000001b,#01,00000010b,#02,00000011b,#03,00001000b,#04,00001001b,#05,00001100b,#06,#FF,#00 ;primera fila
      73.  00:A747  00 00 01 01 02 02 03 03 08 04 09 05 0C 06 FF 00 
      74.  00:A757                      	db  #17,#10,#11,#11,#12,#12,#13,#13,#14,#14,#15,#15,#16,#16,#FF,#00
      74.  00:A757  17 10 11 11 12 12 13 13 14 14 15 15 16 16 FF 00 
      75.  00:A767                      	db  #20,#20,#21,#21,#22,#22,#23,#23,#24,#24,#25,#25,#26,#26,#FF,#00
      75.  00:A767  20 20 21 21 22 22 23 23 24 24 25 25 26 26 FF 00 
      76.  00:A777                      	db  #30,#30,#31,#31,#32,#32,#33,#33,#34,#34,#35,#35,#36,#36,#FF,#00
      76.  00:A777  30 30 31 31 32 32 33 33 34 34 35 35 36 36 FF 00 
      77.  00:A787                      	db  00000000b,#00,00000001b,#01,00001111b,#02,00000011b,#03,00001000b,#04,00001001b,#05,00001100b,#06,#FF,#00
      77.  00:A787  00 00 01 01 0F 02 03 03 08 04 09 05 0C 06 FF 00 
      78.  00:A797                      	db  #50,#50,#51,#51,#52,#52,#53,#53,#54,#54,#55,#55,#56,#56,#FF,#00
      78.  00:A797  50 50 51 51 52 52 53 53 54 54 55 55 56 56 FF 00 
      79.  00:A7A7                      	db  00000000b,#00,00000001b,#01,00000010b,#02,00000011b,#03,00001000b,#04,00001001b,#05,00001100b,#06,#FF,#00	;ultima fila
      79.  00:A7A7  00 00 01 01 02 02 03 03 08 04 09 05 0C 06 FF 00 
      80.  00:A7B7                      	
      81.  00:A7B7                      habitaciones_nivel4:
      82.  00:A7B7                      	db  00000001b,#00,00000001b,#01,00000010b,#02,00000011b,#03,00001000b,#04,00001001b,#05,00001100b,#06,#FF,#00 ;primera fila
      82.  00:A7B7  01 00 01 01 02 02 03 03 08 04 09 05 0C 06 FF 00 
      83.  00:A7C7                      	db  #17,#10,#11,#11,#12,#12,#13,#13,#14,#14,#15,#15,#16,#16,#FF,#00
      83.  00:A7C7  17 10 11 11 12 12 13 13 14 14 15 15 16 16 FF 00 
      84.  00:A7D7                      	db  #20,#20,#21,#21,#22,#22,#23,#23,#24,#24,#25,#25,#26,#26,#FF,#00
      84.  00:A7D7  20 20 21 21 22 22 23 23 24 24 25 25 26 26 FF 00 
      85.  00:A7E7                      	db  #30,#30,#31,#31,#32,#32,#33,#33,#34,#34,#35,#35,#36,#36,#FF,#00
      85.  00:A7E7  30 30 31 31 32 32 33 33 34 34 35 35 36 36 FF 00 
      86.  00:A7F7                      	db  00000000b,#00,00000001b,#01,00001111b,#02,00000011b,#03,00001000b,#04,00001001b,#05,00001100b,#06,#FF,#00
      86.  00:A7F7  00 00 01 01 0F 02 03 03 08 04 09 05 0C 06 FF 00 
      87.  00:A807                      	db  #50,#50,#51,#51,#52,#52,#53,#53,#54,#54,#55,#55,#56,#56,#FF,#00
      87.  00:A807  50 50 51 51 52 52 53 53 54 54 55 55 56 56 FF 00 
      88.  00:A817                      	db  00000000b,#00,00000001b,#01,00001111b,00001111b,00000011b,#03,00001000b,#04,00001001b,#05,00001100b,#06,#FF,#00	;ultima fila
      88.  00:A817  00 00 01 01 0F 0F 03 03 08 04 09 05 0C 06 FF 00 
      89.  00:A827                      	
      90.  00:A827                      habitaciones_nivel5:
      91.  00:A827                      	db  00000000b,#00,00000001b,#01,00000010b,#02,00000011b,#03,00001000b,#04,00001001b,#05,00001100b,#06,#FF,#00 ;primera fila
      91.  00:A827  00 00 01 01 02 02 03 03 08 04 09 05 0C 06 FF 00 
      92.  00:A837                      	db  #17,#10,#11,#11,#12,#12,#13,#13,#14,#14,#15,#15,#16,#16,#FF,#00
      92.  00:A837  17 10 11 11 12 12 13 13 14 14 15 15 16 16 FF 00 
      93.  00:A847                      	db  #20,#20,#21,#21,#22,#22,#23,#23,#24,#24,#25,#25,#26,#26,#FF,#00
      93.  00:A847  20 20 21 21 22 22 23 23 24 24 25 25 26 26 FF 00 
      94.  00:A857                      	db  #30,#30,#31,#31,#32,#32,#33,#33,#34,#34,#35,#35,#36,#36,#FF,#00
      94.  00:A857  30 30 31 31 32 32 33 33 34 34 35 35 36 36 FF 00 
      95.  00:A867                      	db  00000000b,#00,00000001b,#01,00001111b,#02,00000011b,#03,00001000b,#04,00001001b,#05,00001100b,#06,#FF,#00
      95.  00:A867  00 00 01 01 0F 02 03 03 08 04 09 05 0C 06 FF 00 
      96.  00:A877                      	db  #50,#50,#51,#51,#52,#52,#53,#53,#54,#54,#55,#55,#56,#56,#FF,#00
      96.  00:A877  50 50 51 51 52 52 53 53 54 54 55 55 56 56 FF 00 
      97.  00:A887                      	db  00000000b,#00,00000001b,#01,00001010b,00001010b,00000011b,#03,00001000b,#04,00001001b,#05,00001100b,#06,#FF,#00	;ultima fila
      97.  00:A887  00 00 01 01 0A 0A 03 03 08 04 09 05 0C 06 FF 00 
      98.  00:A897                      	
      99.  00:A897                      habitaciones_nivel6:
     100.  00:A897                      	db  00000000b,#00,00000001b,#01,00000010b,#02,00000011b,#03,00001000b,#04,00001001b,#05,00001100b,#06,#FF,#00 ;primera fila
     100.  00:A897  00 00 01 01 02 02 03 03 08 04 09 05 0C 06 FF 00 
     101.  00:A8A7                      	db  #17,#10,#11,#11,#12,#12,#13,#13,#14,#14,#15,#15,#16,#16,#FF,#00
     101.  00:A8A7  17 10 11 11 12 12 13 13 14 14 15 15 16 16 FF 00 
     102.  00:A8B7                      	db  #20,#20,#21,#21,#22,#22,#23,#23,#24,#24,#25,#25,#26,#26,#FF,#00
     102.  00:A8B7  20 20 21 21 22 22 23 23 24 24 25 25 26 26 FF 00 
     103.  00:A8C7                      	db  #30,#30,#31,#31,#32,#32,#33,#33,#34,#34,#35,#35,#36,#36,#FF,#00
     103.  00:A8C7  30 30 31 31 32 32 33 33 34 34 35 35 36 36 FF 00 
     104.  00:A8D7                      	db  00000000b,#00,00000001b,#01,00001111b,#02,00000011b,#03,00001000b,#04,00001001b,#05,00001100b,#06,#FF,#00
     104.  00:A8D7  00 00 01 01 0F 02 03 03 08 04 09 05 0C 06 FF 00 
     105.  00:A8E7                      	db  #50,#50,#51,#51,#52,#52,#53,#53,#54,#54,#55,#55,#56,#56,#FF,#00
     105.  00:A8E7  50 50 51 51 52 52 53 53 54 54 55 55 56 56 FF 00 
     106.  00:A8F7                      	db  00000000b,#00,00000001b,10000000b,00001111b,#02,00000011b,#03,00001000b,#04,00001001b,#05,00001100b,#06,#FF,#00	;ultima fila
     106.  00:A8F7  00 00 01 80 0F 02 03 03 08 04 09 05 0C 06 FF 00 
     107.  00:A907                      
     108.  00:A907                      
     224   00:A907                      	
     225   00:A907                      	include "variables.asm"
       1.  00:A907                      ;;=====================================================
       2.  00:A907                      ;;DEFINICIÓN DE VARIABLES
       3.  00:A907                      ;;=====================================================
       4.  00:A907                      
       5.  00:A907                      ;Colores base de la pantalla
       6.  00:A907                      color_base:
       7.  00:A907  01 01 01            			DB		COLNEGRO,COLNEGRO,COLNEGRO	
       8.  00:A90A                      ;colores de pantalla cuando se tira bomba
       9.  00:A90A                      color_bomba1:
      10.  00:A90A  08 08 08            			DB		COLROJO,COLROJO,COLROJO
      11.  00:A90D                      color_bomba2:
      12.  00:A90D  06 06 06            			DB		COLROJOOSC,COLROJOOSC,COLROJOOSC
      13.  00:A910                      
      14.  00:A910                      ;definicion de variable del prota usando la estructura del punto de mira
      15.  00:A910                      prota:		ESTRUCTURA_PUNTOMIRA
      15.  00:A910  78 6C 00 00 00 05 00 00 00 00 00 00 00 00 00 00 
      16.  00:A920                      ;variables globales del prota
      17.  00:A920                      prota_nivel:			;nivel del castillo donde está 0-6
      18.  00:A920  00                  			DB		0
      19.  00:A921                      prota_vidas:
      20.  00:A921  00                  			DB		0
      21.  00:A922                      prota_reliquias:
      22.  00:A922  03                  			DB		3
      23.  00:A923                      prota_pos_mapx:
      24.  00:A923  00                  			DB		0	;pos columna
      25.  00:A924                      prota_pos_mapy:
      26.  00:A924  00                  			DB		0	;pos fila
      27.  00:A925                      prota_energia:
      28.  00:A925  FA                  			DB		250
      29.  00:A926                      
      30.  00:A926                      ;array para pintar de golpe el marcador de vidas
      31.  00:A926                      array_aux_vidas: 		
      32.  00:A926                      			DB		0,0,0,0,0,0,0,0
      32.  00:A926  00 00 00 00 00 00 00 00 
      33.  00:A92E                      
      34.  00:A92E                      ;array para pintar de golpe el marcador de reliquias
      35.  00:A92E                      array_aux_reliquias:	
      36.  00:A92E                      			DB		0,0,0,0,0,0,0,0
      36.  00:A92E  00 00 00 00 00 00 00 00 
      37.  00:A936                      
      38.  00:A936                      array_aux_energia:					;array para pintar de golpe el marcador de energía
      39.  00:A936                      			DB		16,0,0,0,0,0,0 	;el 16 primero es porque siempre estará pintado el cuadro primero rojo
      39.  00:A936  10 00 00 00 00 00 00 
      40.  00:A93D                      ultimo_pos_array_aux_energia:
      41.  00:A93D  00                  			DB		0				;el array completo es de 8 pero para posicionar sin niecesidad de cálculos  etiqueto este aparte
      42.  00:A93E                      			
      43.  00:A93E                      array_aux_mapa_limpiar:	;es por facilitar el reseteo del mapa (pinto 7 lineas en negro con bios) la otra opción es más larga en código y complicada aunque más rápida
      44.  00:A93E                      			DB		0,0,0,0,0,0,0
      44.  00:A93E  00 00 00 00 00 00 00 
      45.  00:A945                      elemento_pintar_mapa:
      46.  00:A945  00                  			DB		0	;TILEPROTAM = 19, ;TILEGRISM = 9
      47.  00:A946                      			
      48.  00:A946                      ;; nota importante: cada vez que se cambie de nivel se actualizará el contenido
      49.  00:A946                      
      50.  00:A946                      
      51.  00:A946                      lista_ayudas:
      52.  00:A946  00 (16)             ayuda_oracion:		DS		ESTRUCTURA_AYUDA		
      53.  00:A956  00 (16)             ayuda_cruz:			DS		ESTRUCTURA_AYUDA
      54.  00:A966  00 (16)             ayuda_aguabendita:	DS		ESTRUCTURA_AYUDA
      55.  00:A976  00 (16)             ayuda_armadura:		DS		ESTRUCTURA_AYUDA
      56.  00:A986  00 (16)             ayuda_planta:		DS		ESTRUCTURA_AYUDA
      57.  00:A996  00 (16)             ayuda_vidaextra		DS		ESTRUCTURA_AYUDA
      58.  00:A9A6  00 (16)             ayuda_ballesta:		DS		ESTRUCTURA_AYUDA
      59.  00:A9B6                      
      60.  00:A9B6                      ;datos ayudas
      61.  00:A9B6                      datos_oracion:
      62.  00:A9B6  00                  				DB    	0				;0 no activo <>0 activo															0
      63.  00:A9B7  1F AA               				DW		array_oracionon	;pos en memoria ver array_ayudas de cómo se mostrarán (wordaux2)				1,2
      64.  00:A9B9  23 AA               				DW		array_oracionoff;pos en memoria ver array_ayudas de cómo se mostrarán (wordaux2)				3,4
      65.  00:A9BB  A3                  				DB		POSORACION		;pos en pantalla (memoria en el banco 1 se le suma 256 + TILEMAP) (wordaux1)	5
      66.  00:A9BC  20                  				DB		POSORACIONX		;pos del pixel central (esquina superior + 8x)									6
      67.  00:A9BD  70                  				DB		POSAYUDASY		;pos del pixel central (esquina superior + 8y) (para toas igual)				7
      68.  00:A9BE  8B 9B               				DW		accion_oracion	;subrutina que indica la acción si se dispara en el objeto						8,9
      69.  00:A9C0                      datos_cruz:
      70.  00:A9C0                      				;~ DB    	0				;0 no activo <>0 activo															0
      71.  00:A9C0                      				;~ DW		array_cruzon	;pos en memoria ver array_ayudas de cómo se mostrarán (wordaux2)				1,2
      72.  00:A9C0                      				;~ DW		array_cruzoff	;pos en memoria ver array_ayudas de cómo se mostrarán (wordaux2)				3,4
      73.  00:A9C0                      				;~ DB		POSCRUZ			;pos en pantalla (memoria en el banco 1 se le suma 256 + TILEMAP) (wordaux1)	5
      74.  00:A9C0                      				;~ DB		POSCRUZX		;pos del pixel central (esquina superior + 8x)									6
      75.  00:A9C0                      				;~ DB		POSAYUDASY		;pos del pixel central (esquina superior + 8y) (para toas igual)				7
      76.  00:A9C0                      				;~ DW		accion_cruz		;subrutina que indica la acción si se dispara en el objeto						8,9 
      77.  00:A9C0                      				
      78.  00:A9C0  00                  				DB    	0				;0 no activo <>0 activo															0
      79.  00:A9C1  27 AA               				DW		array_cruzon	;pos en memoria ver array_ayudas de cómo se mostrarán (wordaux2)				1,2
      80.  00:A9C3  2B AA               				DW		array_cruzoff	;pos en memoria ver array_ayudas de cómo se mostrarán (wordaux2)				3,4
      81.  00:A9C5  A7                  				DB		167			;pos en pantalla (memoria en el banco 1 se le suma 256 + TILEMAP) (wordaux1)	5
      82.  00:A9C6  40                  				DB		64		;pos del pixel central (esquina superior + 8x)									6
      83.  00:A9C7  70                  				DB		112		;pos del pixel central (esquina superior + 8y) (para toas igual)				7
      84.  00:A9C8  8C 9B               				DW		accion_cruz		;subrutina que indica la acción si se dispara en el objeto						8,9 
      85.  00:A9CA                      				
      86.  00:A9CA                      datos_aguabendita:
      87.  00:A9CA  00                  				DB    	0				;0 no activo <>0 activo															0
      88.  00:A9CB  2F AA               				DW		array_aguaon	;pos en memoria ver array_ayudas de cómo se mostrarán (wordaux2)				1,2
      89.  00:A9CD  33 AA               				DW		array_aguaoff	;pos en memoria ver array_ayudas de cómo se mostrarán (wordaux2)				3,4
      90.  00:A9CF  AB                  				DB		POSAGUA			;pos en pantalla (memoria en el banco 1 se le suma 256 + TILEMAP) (wordaux1)	5
      91.  00:A9D0  60                  				DB		POSAGUAX		;pos del pixel central (esquina superior + 8x)									6
      92.  00:A9D1  70                  				DB		POSAYUDASY		;pos del pixel central (esquina superior + 8y) (para toas igual)				7
      93.  00:A9D2  8D 9B               				DW		accion_agua		;subrutina que indica la acción si se dispara en el objeto						8,9
      94.  00:A9D4  00                  				DB		0	;relleno																		10-16    
      95.  00:A9D5  00                  				DB		0	;relleno																		10-16    
      96.  00:A9D6  00                  				DB		0	;relleno																		10-16    
      97.  00:A9D7  00                  				DB		0	;relleno																		10-16    
      98.  00:A9D8  00                  				DB		0	;relleno																		10-16    
      99.  00:A9D9  00                  				DB		0	;relleno																		10-16   
     100.  00:A9DA  00                  				DB		0	;relleno																		10-16    
     101.  00:A9DB                      datos_armadura:
     102.  00:A9DB  00                  				DB    	0				;0 no activo <>0 activo															0
     103.  00:A9DC  37 AA               				DW		array_armaduraon;pos en memoria ver array_ayudas de cómo se mostrarán (wordaux2)				1,2
     104.  00:A9DE  3B AA               				DW		array_armaduraoff;pos en memoria ver array_ayudas de cómo se mostrarán (wordaux2)				3,4
     105.  00:A9E0  AF                  				DB		POSARMAD		;pos en pantalla (memoria en el banco 1 se le suma 256 + TILEMAP) (wordaux1)	5
     106.  00:A9E1  80                  				DB		POSARMADX		;pos del pixel central (esquina superior + 8x)									6
     107.  00:A9E2  70                  				DB		POSAYUDASY		;pos del pixel central (esquina superior + 8y) (para toas igual)				7
     108.  00:A9E3  8E 9B               				DW		accion_armadura	;subrutina que indica la acción si se dispara en el objeto						8,9
     109.  00:A9E5  00                  				DB		0	;relleno																		10-16    
     110.  00:A9E6  00                  				DB		0	;relleno																		10-16    
     111.  00:A9E7  00                  				DB		0	;relleno																		10-16    
     112.  00:A9E8  00                  				DB		0	;relleno																		10-16    
     113.  00:A9E9  00                  				DB		0	;relleno																		10-16    
     114.  00:A9EA  00                  				DB		0	;relleno																		10-16   
     115.  00:A9EB  00                  				DB		0	;relleno																		10-16    
     116.  00:A9EC                      datos_planta:
     117.  00:A9EC  00                  				DB    	0				;0 no activo <>0 activo															0
     118.  00:A9ED  3F AA               				DW		array_plantaon	;pos en memoria ver array_ayudas de cómo se mostrarán (wordaux2)				1,2
     119.  00:A9EF  43 AA               				DW		array_plantaoff	;pos en memoria ver array_ayudas de cómo se mostrarán (wordaux2)				3,4
     120.  00:A9F1  B3                  				DB		POSPLANTA		;pos en pantalla (memoria en el banco 1 se le suma 256 + TILEMAP) (wordaux1)	5
     121.  00:A9F2  A0                  				DB		POSPLANTAX		;pos del pixel central (esquina superior + 8x)									6
     122.  00:A9F3  70                  				DB		POSAYUDASY		;pos del pixel central (esquina superior + 8y) (para toas igual)				7
     123.  00:A9F4  8F 9B               				DW		accion_planta	;subrutina que indica la acción si se dispara en el objeto						8,9
     124.  00:A9F6  00                  				DB		0	;relleno																		10-16    
     125.  00:A9F7  00                  				DB		0	;relleno																		10-16    
     126.  00:A9F8  00                  				DB		0	;relleno																		10-16    
     127.  00:A9F9  00                  				DB		0	;relleno																		10-16    
     128.  00:A9FA  00                  				DB		0	;relleno																		10-16    
     129.  00:A9FB  00                  				DB		0	;relleno																		10-16   
     130.  00:A9FC  00                  				DB		0	;relleno																		10-16     
     131.  00:A9FD                      datos_vidaextra:
     132.  00:A9FD  00                  				DB    	0				;0 no activo <>0 activo															0
     133.  00:A9FE  47 AA               				DW		array_extraon	;pos en memoria ver array_ayudas de cómo se mostrarán (wordaux2)				1,2
     134.  00:AA00  4B AA               				DW		array_extraoff	;pos en memoria ver array_ayudas de cómo se mostrarán (wordaux2)				3,4
     135.  00:AA02  B7                  				DB		POSVIDAEXT		;pos en pantalla (memoria en el banco 1 se le suma 256 + TILEMAP) (wordaux1)	5
     136.  00:AA03  C0                  				DB		POSVIDAEXTX		;pos del pixel central (esquina superior + 8x)									6
     137.  00:AA04  70                  				DB		POSAYUDASY		;pos del pixel central (esquina superior + 8y) (para toas igual)				7
     138.  00:AA05  90 9B               				DW		accion_vidaextra;subrutina que indica la acción si se dispara en el objeto						8,9
     139.  00:AA07  00                  				DB		0	;relleno																		10-16    
     140.  00:AA08  00                  				DB		0	;relleno																		10-16    
     141.  00:AA09  00                  				DB		0	;relleno																		10-16    
     142.  00:AA0A  00                  				DB		0	;relleno																		10-16    
     143.  00:AA0B  00                  				DB		0	;relleno																		10-16    
     144.  00:AA0C  00                  				DB		0	;relleno																		10-16   
     145.  00:AA0D  00                  				DB		0	;relleno																		10-16     
     146.  00:AA0E                      datos_ballesta:
     147.  00:AA0E  00                  				DB    	0				;0 no activo <>0 activo															0
     148.  00:AA0F  4F AA               				DW		array_ballestaon;pos en memoria ver array_ayudas de cómo se mostrarán (wordaux2)				1,2
     149.  00:AA11  53 AA               				DW		array_ballestaoff;pos en memoria ver array_ayudas de cómo se mostrarán (wordaux2)				3,4
     150.  00:AA13  BB                  				DB		POSBALLESTA		;pos en pantalla (memoria en el banco 1 se le suma 256 + TILEMAP) (wordaux1)	5
     151.  00:AA14  E0                  				DB		POSBALLESTAX	;pos del pixel central (esquina superior + 8x)									6
     152.  00:AA15  70                  				DB		POSAYUDASY		;pos del pixel central (esquina superior + 8y) (para toas igual)				7
     153.  00:AA16  8B 9B               				DW		accion_oracion	;subrutina que indica la acción si se dispara en el objeto						8,9
     154.  00:AA18  00                  				DB		0	;relleno																		10-16    
     155.  00:AA19  00                  				DB		0	;relleno																		10-16    
     156.  00:AA1A  00                  				DB		0	;relleno																		10-16    
     157.  00:AA1B  00                  				DB		0	;relleno																		10-16    
     158.  00:AA1C  00                  				DB		0	;relleno																		10-16    
     159.  00:AA1D  00                  				DB		0	;relleno																		10-16   
     160.  00:AA1E  00                  				DB		0	;relleno																		10-16      
     161.  00:AA1F                      
     162.  00:AA1F                      
     163.  00:AA1F                      
     164.  00:AA1F                      
     165.  00:AA1F                      
     166.  00:AA1F                      ;array de ayudas
     167.  00:AA1F                      ;posición dentro del bank1 (o 0 que son iguales) de los tiles de la ayuda (cómo en los sprites de 2x2)
     168.  00:AA1F                      array_ayudas:
     169.  00:AA1F  C8 CA               array_oracionon:			DB	200,202
     170.  00:AA21  C9 CB               array_oracionon1:			DB	201,203
     171.  00:AA23  CC CE               array_oracionoff:			DB	204,206
     172.  00:AA25  CD CF               array_oracionoff1:			DB	205,207
     173.  00:AA27  D0 D2               array_cruzon:				DB	208,210
     174.  00:AA29  D1 D3               array_cruzon1:				DB	209,211
     175.  00:AA2B  D4 D6               array_cruzoff:				DB	212,214
     176.  00:AA2D  D5 D7               array_cruzoff1:				DB	213,215
     177.  00:AA2F  D8 DA               array_aguaon:				DB	216,218
     178.  00:AA31  D9 DB               array_aguaon1:				DB	217,219
     179.  00:AA33  DC DE               array_aguaoff:				DB	220,222
     180.  00:AA35  DD DF               array_aguaoff1:				DB	221,223
     181.  00:AA37  E0 E2               array_armaduraon:			DB	224,226
     182.  00:AA39  E1 E3               array_armaduraon1:			DB	225,227
     183.  00:AA3B  E4 E6               array_armaduraoff:			DB	228,230
     184.  00:AA3D  E5 E7               array_armaduraoff1:			DB	229,231
     185.  00:AA3F  E8 EA               array_plantaon:				DB	232,234
     186.  00:AA41  E9 EB               array_plantaon1:			DB	233,235
     187.  00:AA43  EC EE               array_plantaoff:			DB	236,238
     188.  00:AA45  ED EF               array_plantaoff1:			DB	237,239
     189.  00:AA47  F0 F2               array_extraon:				DB	240,242
     190.  00:AA49  F1 F3               array_extraon1:				DB	241,243
     191.  00:AA4B  F4 F6               array_extraoff:				DB	244,246
     192.  00:AA4D  F5 F7               array_extraoff1:			DB	245,247
     193.  00:AA4F  F8 FA               array_ballestaon:			DB	248,250
     194.  00:AA51  F9 FB               array_ballestaon1:			DB	249,251
     195.  00:AA53  FC FE               array_ballestaoff:			DB	252,254
     196.  00:AA55  FD FF               array_ballestaoff1:			DB	253,255
     197.  00:AA57                      
     198.  00:AA57  00 (7)              antorchas:			DS		ESTRUCTURA_ANTORCHA
     199.  00:AA5E  C5 C6 C7            array_antorcha:				DB	197,198,199	;fuego + madera1 + madera2
     200.  00:AA61                      
     201.  00:AA61  00 (7)              esqueletos:			DS		ESTRUCTURA_ESQUELETO
     202.  00:AA68                      array_esqueleto:			DB	194, 0, 195, 160, 164, 161, 0, 163, 0, 193, 162, 192
     202.  00:AA68  C2 00 C3 A0 A4 A1 00 A3 00 C1 A2 C0 
     203.  00:AA74  A4 A5 A4 A6         lista_escenas_calavera:		DB	164, 165, 164, 166
     204.  00:AA78                      
     205.  00:AA78                      
     206.  00:AA78                      
     207.  00:AA78                      
     208.  00:AA78                      ;array de 4 bytes x 32 sprites posibles en pantalla que sobreescribirá la tabla de sprites actualizando VRAM
     209.  00:AA78                      array_sprites:
     210.  00:AA78  00 (8)              array_sprites_pm:				DS	2 * 4
     211.  00:AA80  00 (120)            array_sprites_enem:				DS	30 * 4
     212.  00:AAF8  00 (140)            lista_enemigos:					DS	10 * ESTRUCTURA_ENEMIGO
     213.  00:AB84                      ; puntero al array a pintar en VRAM
     214.  00:AB84  00 00               puntero_array_atrib_array_VRAM: DW	0	;ARRAYSPTRIES + 8
     215.  00:AB86                      
     216.  00:AB86                      
     217.  00:AB86                      
     218.  00:AB86                      
     219.  00:AB86                      
     226   00:AB86                      	
     227   00:AB86                      ;;=====================================================
     228   00:AB86                      ;;DEFINICIÓN DE PANTALLAS
     229   00:AB86                      ;;=====================================================		
     230   00:AB86                      	include "pantallas.asm"
       1.  00:AB86                      ;;=====================================================
       2.  00:AB86                      ;;DEFINICIÓN DE PANTALLAS
       3.  00:AB86                      ;;=====================================================		
       4.  00:AB86                      
       5.  00:AB86                      ; bancos 1 y 2 y de pantalla 1 
       6.  00:AB86                      ; se usa un banco común (en este caso el banco 1)
       7.  00:AB86                      ; el mapa afecta al banco 1 y 2
       8.  00:AB86  (022A)              tiles_patrones_nivel0:	incbin "pantallas/nivel0.bank1.til.bin.chr.plet5"
       9.  00:ADB0  (006B)              tiles_color_nivel0:		incbin "pantallas/nivel0.bank1.til.bin.clr.plet5"
      10.  00:AE1B  (0035)              tiles_mapa_nivel0:		incbin "pantallas/nivel0.bank01.map.bin.plet5"
      11.  00:AE50                      
      12.  00:AE50  (01B5)              tiles_patrones_nivel1:	incbin "pantallas/nivel1.bank1.til.bin.chr.plet5"
      13.  00:B005  (0047)              tiles_color_nivel1:		incbin "pantallas/nivel1.bank1.til.bin.clr.plet5"
      14.  00:B04C  (0035)              tiles_mapa_nivel1:		incbin "pantallas/nivel1.bank01.map.bin.plet5"
      15.  00:B081                      
      16.  00:B081  (01B5)              tiles_patrones_nivel2:	incbin "pantallas/nivel2.bank1.til.bin.chr.plet5"
      17.  00:B236  (0047)              tiles_color_nivel2:		incbin "pantallas/nivel2.bank1.til.bin.clr.plet5"
      18.  00:B27D  (0035)              tiles_mapa_nivel2:		incbin "pantallas/nivel2.bank01.map.bin.plet5"
      19.  00:B2B2                      
      20.  00:B2B2  (01B5)              tiles_patrones_nivel3:	incbin "pantallas/nivel3.bank1.til.bin.chr.plet5"
      21.  00:B467  (0047)              tiles_color_nivel3:		incbin "pantallas/nivel3.bank1.til.bin.clr.plet5"
      22.  00:B4AE  (0035)              tiles_mapa_nivel3:		incbin "pantallas/nivel3.bank01.map.bin.plet5"
      23.  00:B4E3                      
      24.  00:B4E3  (01B5)              tiles_patrones_nivel4:	incbin "pantallas/nivel4.bank1.til.bin.chr.plet5"
      25.  00:B698  (0047)              tiles_color_nivel4:		incbin "pantallas/nivel4.bank1.til.bin.clr.plet5"
      26.  00:B6DF  (0035)              tiles_mapa_nivel4:		incbin "pantallas/nivel4.bank01.map.bin.plet5"
      27.  00:B714                      
      28.  00:B714  (01B5)              tiles_patrones_nivel5:	incbin "pantallas/nivel5.bank1.til.bin.chr.plet5"
      29.  00:B8C9  (0047)              tiles_color_nivel5:		incbin "pantallas/nivel5.bank1.til.bin.clr.plet5"
      30.  00:B910  (0035)              tiles_mapa_nivel5:		incbin "pantallas/nivel5.bank01.map.bin.plet5"
      31.  00:B945                      
      32.  00:B945  (01B5)              tiles_patrones_nivel6:	incbin "pantallas/nivel6.bank1.til.bin.chr.plet5"
      33.  00:BAFA  (0047)              tiles_color_nivel6:		incbin "pantallas/nivel6.bank1.til.bin.clr.plet5"
      34.  00:BB41  (0035)              tiles_mapa_nivel6:		incbin "pantallas/nivel6.bank01.map.bin.plet5"
      35.  00:BB76                      
      36.  00:BB76                      ; 3º banco que es la parte de puntos, vidas, mapas, etc... es común
      37.  00:BB76  (014C)              tiles_patrones_marcador:	incbin "pantallas/marcador.til.bin.chr.plet5"
      38.  00:BCC2  (0035)              tiles_color_marcador:		incbin "pantallas/marcador.til.bin.clr.plet5"
      39.  00:BCF7  (0062)              tiles_mapa_marcador:		incbin "pantallas/marcador.map.bin.plet5"
      40.  00:BD59                      
      41.  00:BD59                      ;NOTA: FALTARÍAN PANTALLAS ESPECIALES (POR DEFINIR)
      42.  00:BD59                      ; INICIO
      43.  00:BD59                      ; GAME OVER
      44.  00:BD59                      ; HUIDA
      45.  00:BD59                      ; 2 FINAL BUENO
      46.  00:BD59                      ; 1 FINAL MALO
     231   00:BD59                      
     232   00:BD59                      END:

    LABELS
-------------------------------------------------
00:000000D8 X GTTRIG
00:000000D5 X GTSTCK
00:0000F3DB   CLIKSW
00:0000013E X RDVDP
00:00000047   WRTVDP
00:0000005C   LDIRVM
00:00000059 X LDIRMV
00:0000005F   CHGMOD
00:00000041 X DISSCR
00:00000044 X ENASCR
00:00000062   CHGCLR
00:0000F3E9   FORCLR
00:0000F3EA   BAKCLR
00:0000F3EB   BDRCLR
00:000000C3   CLS
00:0000F3DF X RG0SAV
00:0000F3E0   RG1SAV
00:0000F3E1 X RG2SAV
00:0000F3E2 X RG3SAV
00:0000F3E3 X RG4SAV
00:0000F3E4 X RG5SAV
00:0000F3E5 X RG6SAV
00:0000F3E6 X RG7SAV
00:0000F3E7 X STATFL
00:00000099   REGEST
00:00000098   REGESCVDP
00:000000A0   PSG_A
00:000000A1   PSG_W
00:000000A2   PSG_R
00:00000000   CHRTBL
00:00001800   TILMAP
00:00001B00   SPRART
00:00002000   CLRTBL
00:00003800   SPRTBL
00:00000001 X SI
00:00000000 X NO
00:00000004   LIMCADENCIA
00:00000000 X COLTRASP
00:00000001   COLNEGRO
00:00000002 X COLVERDE
00:00000003 X COLVERCLA
00:00000004 X COLAZULOSC
00:00000005 X COLAZULLA
00:00000006   COLROJOOSC
00:00000007 X COLCYAN
00:00000008   COLROJO
00:00000009 X COLROJOCLA
00:0000000A X COLAMAROSC
00:0000000B X COLAMARCLA
00:0000000C X COLVERDOSC
00:0000000D X COLMAGENTA
00:0000000E X COLGRIS
00:0000000F   COLBLANCO
00:000002F8   POSMAPLIN1
00:000002D8   POSMAPLIN2
00:000002B8   POSMAPLIN3
00:00000298   POSMAPLIN4
00:00000278   POSMAPLIN5
00:00000258   POSMAPLIN6
00:00000238   POSMAPLIN7
00:0000000D   POSCARAMAP
00:00000248   POSVIDAS
00:00000011   POSRELIMAP
00:000002C8   POSRELIQ
00:00000288   POSENERG
00:000002B4   POSNIVEL
00:00000238   POSMAPA
00:000001EE   POSPUERABAJ
00:0000008E   POSPUERARRI
00:000000FC   POSPUERDERE
00:000000E1   POSPUERIZQU
00:0000006C   POSESCALERA
00:000000A3   POSORACION
00:000000A7 X POSCRUZ
00:000000AB   POSAGUA
00:000000AF   POSARMAD
00:000000B3   POSPLANTA
00:000000B7   POSVIDAEXT
00:000000BB   POSBALLESTA
00:00000020   POSORACIONX
00:00000040 X POSCRUZX
00:00000060   POSAGUAX
00:00000080   POSARMADX
00:000000A0   POSPLANTAX
00:000000C0   POSVIDAEXTX
00:000000E0   POSBALLESTAX
00:00000070   POSAYUDASY
00:00000078 X POSXPM
00:0000006C X POSYPM
00:00000000   INACTIVA
00:00000001   ACTIVA
00:00000001   HABTERMIN
00:00000088   POSANTOR1
00:00000097   POSANTOR2
00:000000C4   MAPLLAMA1
00:000000C5   MAPLLAMA2
00:000000FF   RESETLLAMA
00:00000088   POSESQUEL1
00:00000095   POSESQUEL2
00:000000A9   POSCALAVE1
00:000000B6   POSCALAVE2
00:00000019   RESETESQUEL
00:00000004   RESETESCENAESQUEL
00:00000013   TILEPROTAM
00:00000009   TILEGRISM
00:00000010   TILEMAPROJO
00:0000000F   TILEMAPAMAR
00:0000000E   TILEMAPVERD
00:00000008   NMAXVIDREL
00:00000007   NHABNIVEL
00:000000F8 X MAXENERGIA
00:000000D9   TILEENERG8
00:000000BA   TILEENERG7
00:0000009B   TILEENERG6
00:0000007C   TILEENERG5
00:0000005D   TILEENERG4
00:0000003E   TILEENERG3
00:0000001F   TILEENERG2
00:00000000   TILENEGRO
00:00000000 X LIMPANTIZQ
00:000000FF   LIMPANTDER
00:00000000 X LIMPANTARR
00:00000080   LIMPANTABA
00:00000006 X BASEMAPY
00:00000003 X BASEMAPX
00:0000FD9A X H.KEYI
00:0000FD9F   H.TIMI
00:0000F000   PT3_SETUP
00:0000F001   PT3_MODADDR
00:0000F003   PT3_CrPsPtr
00:0000F005   PT3_SAMPTRS
00:0000F007   PT3_OrnPtrs
00:0000F009   PT3_PDSP
00:0000F00B   PT3_CSP
00:0000F00D   PT3_PSP
00:0000F00F   PT3_PrNote
00:0000F010   PT3_PrSlide
00:0000F012   PT3_AdInPtA
00:0000F014   PT3_AdInPtB
00:0000F016   PT3_AdInPtC
00:0000F018   PT3_LPosPtr
00:0000F01A   PT3_PatsPtr
00:0000F01C   PT3_Delay
00:0000F01D   PT3_AddToEn
00:0000F01E   PT3_Env_Del
00:0000F01F   PT3_ESldAdd
00:0000F021   PT3_NTL3
00:0000F023   VARS
00:0000F023   ChanA
00:0000F040   ChanB
00:0000F05D   ChanC
00:0000F07A   DelyCnt
00:0000F07B   CurESld
00:0000F07D   CurEDel
00:0000F07E   Ns_Base_AddToNs
00:0000F07E   Ns_Base
00:0000F07F   AddToNs
00:0000F080   NT_
00:0000F140   AYREGS
00:0000F140   VT_
00:0000F14E   EnvBase
00:0000F150   VAR0END
00:0000F150   T1_
00:0000F150   T_NEW_1
00:0000F150   T_OLD_1
00:0000F168   T_OLD_2
00:0000F180   T_NEW_3
00:0000F180   T_OLD_3
00:0000F182   T_OLD_0
00:0000F182   T_NEW_0
00:0000F19A   T_NEW_2
00:0000F240   ayFX_MODE
00:0000F241   ayFX_BANK
00:0000F243   ayFX_PRIORITY
00:0000F244   ayFX_POINTER
00:0000F246   ayFX_TONE
00:0000F248   ayFX_NOISE
00:0000F249   ayFX_VOLUME
00:0000F24A   ayFX_CHANNEL
00:00008000   START
00:00008038   loop_principal
00:00008048 X fin_programa_principal
00:00008048 X check_colisiones_objetos
00:00008056   check_colisiones_objetos.habitacion_no_terminada
00:00008056   fin_check_colisiones_objetos
00:00008057   check_colisiones_puertas
00:00008057 X check_colisiones_puertas.examina_puerta_arriba
00:00008065   check_colisiones_puertas.examina_puerta_derecha
00:00008073   check_colisiones_puertas.examina_puerta_abajo
00:00008081   check_colisiones_puertas.examina_puerta_izquierda
00:0000808F X fin_check_colisiones_puertas
00:00008090   check_colision_puerta
00:0000809B X fin_check_colision_puerta
00:0000809C   inicializa_variables_pruebas
00:000080BE X fin_inicializa_variables_pruebas
00:000080BF X inicializa_niveles
00:000080C7   inicializa_niveles.inicia_nivel_0
00:000080D4   inicializa_niveles.inicia_nivel_1
00:000080E1   inicializa_niveles.inicia_nivel_2
00:000080EE   inicializa_niveles.inicia_nivel_3
00:000080FB   inicializa_niveles.inicia_nivel_4
00:00008108   inicializa_niveles.inicia_nivel_5
00:00008115   inicializa_niveles.inicia_nivel_6
00:00008120 X fin_iniciliza_niveles
00:00008121   actualiza_marcador_vidas
00:00008126   loop_marcador_caras_negro
00:0000812B X fin_loop_marcador_caras_negro
00:00008134   loop_marcador_caras
00:00008139 X fin_loop_marcador_caras
00:00008139 X fin_actualiza_marcador_vidas
00:0000813A   actualiza_buffer_reliquias
00:00008140   loop_buffer_reliquias_negro
00:0000814D   loop_buffer_reliquias
00:00008152 X fin_actualiza_buffer_reliquias
00:00008153   localiza_info_habitacion
00:00008156 X localiza_info_habitacion.situo_columna
00:0000815F X localiza_info_habitacion.situo_fila
00:00008168   localiza_info_habitacion.loop_suma_fila
00:00008170   localiza_info_habitacion.situo_nivel
00:0000817F   localiza_info_habitacion.loop_suma_nivel
00:00008184   localiza_info_habitacion.actualiza_variable_habitacion
00:000081A5 X fin_localiza_info_habitacion
00:000081A6   terminada_habitacion_recorrida
00:000081C0 X fin_terminada_habitacion_recorrida
00:000081C0   suma_A_BC
00:000081C5 X fin_suma_A_BC
00:000081C6   suma_A_HL
00:000081CB X fin_suma_A_HL
00:000081CC   color_pantalla
00:000081DD X fin_color_pantalla
00:000081DD   sub_preparapantalla
00:000081DD X elimina_clic
00:000081E1 X fin_elimina_clic
00:000081E1 X limpia_pantalla
00:000081E5 X fin_limpia_pantalla
00:000081EB X screen2
00:000081F0 X sprites_16_16
00:000081FE X fin_sub_preparapantalla
00:000081FE   pinta_pantalla_completa
00:00008204 X fin_pinta_pantalla_completa
00:00008205   pinta_parte_superior_pantalla
00:00008236   pinta_parte_superior_pantalla.carga_nivel_0
00:00008251   pinta_parte_superior_pantalla.carga_nivel_1
00:0000826C   pinta_parte_superior_pantalla.carga_nivel_2
00:00008287   pinta_parte_superior_pantalla.carga_nivel_3
00:000082A2   pinta_parte_superior_pantalla.carga_nivel_4
00:000082BD   pinta_parte_superior_pantalla.carga_nivel_5
00:000082D8   pinta_parte_superior_pantalla.carga_nivel_6
00:000082F0   pinta_parte_superior_pantalla.fin_carga_niveles
00:0000831D X fin_pinta_parte_superior_pantalla
00:0000831D   tiles_patrones
00:0000831F   tiles_colores
00:00008321   tiles_mapa
00:00008323   pinta_parte_inferior_pantalla
00:0000833E X fin_pinta_parte_inferior_pantalla
00:0000833E   pinta_vidas
00:0000834D X fin_pinta_vidas
00:0000834D   pinta_reliquias
00:0000835C X fin_pinta_reliquias
00:0000835C   pinta_nivel
00:00008368 X fin_pinta_nivel
00:00008368   pinta_tile_suelto
00:00008375 X fin_pinta_tile_suelto
00:00008376   mira_pinta_energia
00:0000837C X pinta_ener
00:0000837C X pinta_ener_tile_8
00:00008388   pinta_ener_tile_8_negro
00:00008389   pinta_ener_tile_7
00:00008393   pinta_ener_tile_7_negro
00:00008394   pinta_ener_tile_6
00:0000839E   pinta_ener_tile_6_negro
00:0000839F   pinta_ener_tile_5
00:000083A9   pinta_ener_tile_5_negro
00:000083AA   pinta_ener_tile_4
00:000083B4   pinta_ener_tile_4_negro
00:000083B5   pinta_ener_tile_3
00:000083BF   pinta_ener_tile_3_negro
00:000083C0   pinta_ener_tile_2
00:000083CA   pinta_ener_tile_2_negro
00:000083CB   fin_mira_pinta_energia
00:000083CD   pinta_energia
00:000083DC X fin_pinta_energia
00:000083DC   borra_mapa
00:00008432 X fin_borra_mapa
00:00008433   posiciona_en_mapa
00:00008436 X posiciona_en_mapa.sumar_fila
00:00008460 X posiciona_en_mapa.fila_0
00:00008467   posiciona_en_mapa.fila_1
00:0000846E   posiciona_en_mapa.fila_2
00:00008475   posiciona_en_mapa.fila_3
00:0000847C   posiciona_en_mapa.fila_4
00:00008483   posiciona_en_mapa.fila_5
00:0000848A X posiciona_en_mapa.fila_6
00:0000848A   posiciona_en_mapa.sumar_columna
00:000084A0   pinta_pos_mapa_vacio
00:000084A2   fin_pinta_pos_mapa
00:000084A5 X fin_posiciona_en_mapa
00:000084A5   efecto_imagen_tira_reliquia
00:000084A8   efecto_imagen_tira_reliquia.parpadea_fondo
00:000084BF X fin_efecto_imagen_tira_reliquia
00:000084BF   pinta_array
00:000084DA   pinta_array.pa_pinta_fila
00:000084DB   pinta_array.pa_pinta_columnas
00:000084FE X fin_pinta_array
00:000084FF   wordaux1
00:00008501   wordaux2
00:00008503   byteaux1
00:00008504   byteaux2
00:00008505   inicializa_antorchas
00:00008526 X fin_inicializa_antorchas
00:00008527   inicializa_esqueletos
00:00008548 X fin_inicializa_esqueletos
00:00008549   pinta_extra_fondo
00:0000854D X pinta_extra_fondo.examina_sihay_antorchas
00:0000855C   pinta_extra_fondo.hayantorchas
00:00008585   pinta_extra_fondo.examina_sihay_esqueletos
00:00008596   pinta_extra_fondo.hayesqueletos
00:000085BF X fin_pinta_extra_fondo
00:000085C0   actualiza_elementos_fondo
00:000085C0 X actualiza_elementos_fondo.examina_antorchas
00:000085CE   actualiza_elementos_fondo.examina_esqueletos
00:000085DA X fin_actualiza_elementos_fondo
00:000085DA   flip_llamas_antorchas
00:000085F3 X flip_llamas_antorchas.llama_impar
00:00008614   flip_llamas_antorchas.llama_par
00:00008633   fin_flip_llamas_antorchas
00:00008637   flip_calavera_esqueletos
00:00008664 X fin_flip_calavera_esqueletos
00:00008664   var_aux_calavera
00:00008665   actualiza_escena_calavera
00:00008671   actualiza_escena_calavera.decrementa_escenas
00:00008672 X actualiza_escena_calavera.fin_consulta_escena
00:00008680 X fin_actualiza_escena_calavera
00:00008681   array_puerta_arriba
00:00008695   array_puerta_derecha
00:000086AA   array_puerta_abajo
00:000086AE   array_puerta_izquierda
00:000086C3   array_escalera
00:000086F3 X lista_puertas
00:000086F3   puerta_arriba
00:00008700   puerta_derecha
00:0000870D   puerta_abajo
00:0000871A   puerta_izquierda
00:00008727 X datos_puertas
00:00008727   datos_escalera
00:00008734   datos_puerta_arriba
00:00008741   datos_puerta_derecha
00:0000874E   datos_puerta_abajo
00:0000875B   datos_puerta_izquierda
00:00008768   inicializa_puertas
00:00008779   inicializa_puertas.pinta_escalera
00:0000877C   inicializa_puertas.cotinuamos_pintando_escalera_arriba
00:000087A0 X fin_inicializa_puertas
00:000087A1   carga_datos_puerta
00:000087A6 X fin_carga_datos_puerta
00:000087A7   accion_escalera
00:000087A7 X fin_accion_escalera
00:000087A8   accion_puerta_arriba
00:000087A8 X fin_accion_puerta_arriba
00:000087A9 X accion_puerta_derecha
00:000087A9 X fin_accion_puerta_derecha
00:000087AA X accion_puerta_abajo
00:000087AA X fin_accion_puerta_abajo
00:000087AB X accion_puerta_izquierda
00:000087AB X fin_accion_puerta_izquierda
00:000087AC   pinta_puertas
00:000087D2 X fin_pinta_puertas
00:000087D3   pinta_puerta_aba
00:000087DD X fin_pinta_puerta_aba
00:000087DD   pinta_puerta_arr
00:000087E7 X fin_pinta_puerta_arr
00:000087E7   pinta_puerta_der
00:000087F1 X fin_pinta_puerta_der
00:000087F1   pinta_puerta_izq
00:000087FB X fin_pinta_puerta_izq
00:000087FB   actualiza_variables_pinta_array
00:00008819 X fin_actualiza_variables_pinta_array
00:0000881A   activa_desactiva_puertas
00:0000881A X activa_desactiva_puertas.mira_puerta_arriba
00:0000882A   activa_desactiva_puertas.mira_puerta_derecha
00:0000883A   activa_desactiva_puertas.mira_puerta_abajo
00:0000884A   activa_desactiva_puertas.mira_puerta_izquierda
00:0000885A   fin_activa_desactiva_puertas
00:0000885B   carga_patrones_sprites_nivel
00:0000885F X fin_carga_patrones_sprites_nivel
00:0000885F   carga_patrones_nivel_comunes
00:0000886B X fin_carga_patrones_nivel_comunes
00:0000886B X carga_patrones_sprites_nivel1
00:0000886B X fin_carga_patrones_sprites
00:0000886C   render_sprites
00:00008878 X fin_actualiza_array_sprites_vram
00:00008878   vuelca_resultado_puntomira_array
00:0000889D X vuelca_resultado_puntomira_array.codigo_color_1
00:000088A6   vuelca_resultado_puntomira_array.codigo_color_2
00:000088AF X fin_vuelca_resultado_puntomira_array
00:000088AF   check_player
00:000088CE X f
00:000088CF   mueve_arriba
00:000088DA   mueve_arriba.no_decrementa_y
00:000088DB X fin_mueve_arriba
00:000088DC   mueve_derecha
00:000088E9   mueve_derecha.no_incrementa_x
00:000088EA X fin_mueve_derecha
00:000088EB   mueve_abajo
00:000088F8   mueve_abajo.no_incrementa_y
00:000088F9 X fin_mueve_abajo
00:000088FA   mueve_izquierda
00:00008905   mueve_izquierda.no_decrementa_x
00:00008906 X fin_mueve_izquierda
00:00008907   mira_disparo
00:00008907 X mira_disparo.mira_boton_pulsado1
00:00008914 X mira_disparo.no_efectua_disparo
00:0000891F   mira_disparo.efectua_disparo
00:00008934   mira_disparo.fin_mira_disparo1
00:00008935   mira_disparo.mira_boton_pulsado2
00:00008951 X fin_mira_disparo
00:00008951   update_controllers_status
00:00008988   read_joy_0
00:0000899C   check_8th_keyboard_row
00:000089AA   check_4th_keyboard_row
00:000089B8 X inicializa_replayer_efectos_interrupciones
00:000089D1 X fin_inicializa_replayer_efectos_interrupciones
00:000089D2   subrutina_isr
00:000089DB X fin_subrutina_isr
00:000089DB X subrutinas_sonido
00:00000000   CHNPRM_PsInOr
00:00000001   CHNPRM_PsInSm
00:00000002   CHNPRM_CrAmSl
00:00000003   CHNPRM_CrNsSl
00:00000004   CHNPRM_CrEnSl
00:00000005   CHNPRM_TSlCnt
00:00000006   CHNPRM_CrTnSl
00:00000008   CHNPRM_TnAcc
00:0000000A   CHNPRM_COnOff
00:0000000B   CHNPRM_OnOffD
00:0000000C   CHNPRM_OffOnD
00:0000000D   CHNPRM_OrnPtr
00:0000000F   CHNPRM_SamPtr
00:00000011   CHNPRM_NNtSkp
00:00000012   CHNPRM_Note
00:00000013   CHNPRM_SlToNt
00:00000014   CHNPRM_Env_En
00:00000015   CHNPRM_Flags
00:00000016   CHNPRM_TnSlDl
00:00000017   CHNPRM_TSlStp
00:00000019   CHNPRM_TnDelt
00:0000001B   CHNPRM_NtSkCn
00:0000001C   CHNPRM_Volume
00:0000001D X CHNPRM_Size
00:00000000   AR_TonA
00:00000002   AR_TonB
00:00000004   AR_TonC
00:00000006   AR_Noise
00:00000007   AR_Mixer
00:00000008   AR_AmplA
00:00000009   AR_AmplB
00:0000000A   AR_AmplC
00:0000000B   AR_Env
00:0000000D   AR_EnvTp
00:000089DB   CHECKLP
00:000089EC X PT3_MUTE
00:000089F8   PT3_INIT
00:00008A37   PT3_INIT.TP_0
00:00008A43   PT3_INIT.TP_1
00:00008A4A   PT3_INIT.TP_2
00:00008AB8   PT3_INIT.L1
00:00008AC5   PT3_INIT.L2
00:00008AC9 X PT3_INIT.L3
00:00008AF0   PT3_INIT.CORR_1
00:00008AFE   PT3_INIT.CORR_2
00:00008B05   PT3_INIT.TC_EXIT
00:00008B10   PT3_INIT.INITV1
00:00008B18   PT3_INIT.INITV2
00:00008B2C   PT3_INIT.INITV3
00:00008B30   PD_OrSm
00:00008B3A   PD_SAM
00:00008B3B   PD_SAM_
00:00008B51   PD_VOL
00:00008B5A   PD_EOff
00:00008B62   PD_SorE
00:00008B6C   PD_ENV
00:00008B71   PD_ORN
00:00008B76   PD_ESAM
00:00008B83   PTDECOD
00:00008B92   PD_LOOP
00:00008B95   PD_LP2
00:00008BC2   PD_NOIS
00:00008BC7   PD_REL
00:00008BCD   PD_NOTE
00:00008BD5   PD_RES
00:00008BE7   PD_FIN
00:00008BEE   C_PORTM
00:00008C39   C_PORTM.NOSIG
00:00008C43   SET_STP
00:00008C4F   C_GLISS
00:00008C62   C_SMPOS
00:00008C68   C_ORPOS
00:00008C6E   C_VIBRT
00:00008C86   C_ENGLS
00:00008C98   C_DELAY
00:00008C9E   SETENV
00:00008CB9   C_NOP
00:00008CBA   SETORN
00:00008CD3   SPCCOMS
00:00008CF3   CHREGS
00:00008D16   CHREGS.CH_ORPS
00:00008D21   CHREGS.CH_NTP
00:00008D27   CHREGS.CH_NOK
00:00008D42   CHREGS.CH_SMPS
00:00008D58   CHREGS.CH_NOAC
00:00008D9F   CHREGS.CH_STPP
00:00008DB4   CHREGS.CH_AMP
00:00008DC6   CHREGS.CH_AMIN
00:00008DCB   CHREGS.CH_SVAM
00:00008DCE   CHREGS.CH_NOAM
00:00008DD7   CHREGS.CH_APOS
00:00008DDD   CHREGS.CH_VOL
00:00008DE8 X CHREGS.CH_ENV
00:00008DEF   CHREGS.CH_NOEN
00:00008E09   CHREGS.NO_ENAC
00:00008E10   CHREGS.NO_ENSL
00:00008E1E   CHREGS.CH_MIX
00:00008E22   CHREGS.CH_EXIT
00:00008E41   CHREGS.CH_ONDL
00:00008E45   PT3_PLAY
00:00008E79   PT3_PLAY.PLNLP
00:00008EA0   PT3_PLAY.PL1A
00:00008EAB   PT3_PLAY.PL1B
00:00008EC0   PT3_PLAY.PL1C
00:00008ED5   PT3_PLAY.PL1D
00:00008EDB   PT3_PLAY.PL2
00:00008F3D   PT3_ROUT
00:00008F3E   ROUT_A0
00:00008F4A   ROUT_A0.LOUT
00:00008F5E   NT_DATA
00:00008F6E   T_
00:00008F6E   TCOLD_0
00:00008F7A   TCNEW_1
00:00008F7A   TCOLD_1
00:00008F7C   TCOLD_2
00:00008F8E   TCNEW_3
00:00008F8F   TCOLD_3
00:00008F98   TCNEW_0
00:00008FA3   TCNEW_2
00:00008FAE   EMPTYSAMORN
00:00008FB2   T_PACK
00:00000000 X AYFXRELATIVE
00:00008FE7   ayFX_SETUP
00:00008FF3   ayFX_END
00:00008FF9   ayFX_INIT
00:0000900A   ayFX_INIT.CHECK_PRI
00:0000902B   ayFX_INIT.INIT_END
00:0000902F   ayFX_PLAY
00:00009043   ayFX_PLAY.TAKECB
00:00009054   ayFX_PLAY.CHECK_NN
00:00009061   ayFX_PLAY.SETPOINTER
00:00009075   ayFX_PLAY.SETMASKS
00:00009083 X ayFX_PLAY.CHK1
00:00009085 X ayFX_PLAY.PLAY_C
00:00009092   ayFX_PLAY.CHK2
00:00009097 X ayFX_PLAY.PLAY_B
00:000090A4   ayFX_PLAY.CHK3
00:000090A7 X ayFX_PLAY.PLAY_A
00:000090B4   ayFX_PLAY.SETMIXER
00:000090C4   song
00:00009A2C   sfx_bank
00:00009A77   inicializa_ayudas
00:00009ADE X fin_resetea_ayudas
00:00009ADF   carga_datos_ayuda
00:00009AE4 X fin_carga_datos_ayuda
00:00009AE5   pinta_obj_ayuda
00:00009AE9 X pinta_obj_ayuda.dibujoon
00:00009AF5   pinta_obj_ayuda.dibujooff
00:00009AFE   pinta_obj_ayuda.param_wordaux2
00:00009B0A X pinta_obj_ayuda.filasycols
00:00009B15 X fin_pinta_obj_ayuda
00:00009B15   pinta_ayudas_habitacion
00:00009B15 X pinta_ayudas_habitacion.examina_oracion
00:00009B26   pinta_ayudas_habitacion.examina_cruz
00:00009B37   pinta_ayudas_habitacion.examina_aguabendita
00:00009B48   pinta_ayudas_habitacion.examina_armadura
00:00009B59   pinta_ayudas_habitacion.examina_planta
00:00009B6A   pinta_ayudas_habitacion.examina_vidaextra
00:00009B7B   pinta_ayudas_habitacion.examina_ballesta
00:00009B8A X fin_pinta_ayudas_habitacion
00:00009B8B   accion_oracion
00:00009B8B X fin_accion_oracion
00:00009B8C   accion_cruz
00:00009B8C X fin_accion_cruz
00:00009B8D   accion_agua
00:00009B8D X fin_accion_agua
00:00009B8E   accion_armadura
00:00009B8E X fin_accion_armadura
00:00009B8F   accion_planta
00:00009B8F X fin_accion_planta
00:00009B90   accion_vidaextra
00:00009B90 X fin_accion_vidaextra
00:00009B91 X accion_ballesta
00:00009B91 X fin_accion_ballesta
00:00009B92   depack_VRAM
00:00009BBF   literal
00:00009BC4   loop
00:00009BCD X getlen
00:00009BD3   lus
00:00009BF0   lenok
00:00009BFD   mode7
00:00009C03   mode6
00:00009C09   mode5
00:00009C0F   mode4
00:00009C15   mode3
00:00009C1B   mode2
00:00009C2B   offsok
00:00009C36   offsok.loop
00:00009C58   getbit
00:00009C5C   getbitexx
00:00009C62   Depack_out
00:00009C64   modes
00:00000000   ESTRUCTURA_PUNTOMIRA.posx
00:00000001 X ESTRUCTURA_PUNTOMIRA.posy
00:00000002 X ESTRUCTURA_PUNTOMIRA.escena
00:00000003 X ESTRUCTURA_PUNTOMIRA.velocidad
00:00000004 X ESTRUCTURA_PUNTOMIRA.boton2_pressed
00:00000005 X ESTRUCTURA_PUNTOMIRA.cadencia
00:00000006 X ESTRUCTURA_PUNTOMIRA.pm_aux1
00:00000007 X ESTRUCTURA_PUNTOMIRA.pm_aux2
00:00000008 X ESTRUCTURA_PUNTOMIRA.pm_aux3
00:00000009 X ESTRUCTURA_PUNTOMIRA.pm_aux4
00:0000000A X ESTRUCTURA_PUNTOMIRA.pm_aux5
00:0000000B X ESTRUCTURA_PUNTOMIRA.pm_aux6
00:0000000C X ESTRUCTURA_PUNTOMIRA.pm_aux7
00:0000000D X ESTRUCTURA_PUNTOMIRA.pm_aux8
00:0000000E X ESTRUCTURA_PUNTOMIRA.pm_aux9
00:0000000F X ESTRUCTURA_PUNTOMIRA.pm_aux10
00:00000010 X ESTRUCTURA_PUNTOMIRA
00:00000000 X ESTRUCTURA_ENEMIGO.tipo
00:00000001 X ESTRUCTURA_ENEMIGO.posx
00:00000002 X ESTRUCTURA_ENEMIGO.posy
00:00000003 X ESTRUCTURA_ENEMIGO.color
00:00000004 X ESTRUCTURA_ENEMIGO.escena
00:00000005 X ESTRUCTURA_ENEMIGO.contador_siguiente_escena
00:00000006 X ESTRUCTURA_ENEMIGO.reset_contador
00:00000007 X ESTRUCTURA_ENEMIGO.dano
00:00000008 X ESTRUCTURA_ENEMIGO.energia
00:00000009 X ESTRUCTURA_ENEMIGO.ver_hor
00:0000000A X ESTRUCTURA_ENEMIGO.manejador_dibujo
00:0000000C X ESTRUCTURA_ENEMIGO.en_aux3
00:0000000D X ESTRUCTURA_ENEMIGO.en_aux4
00:0000000E   ESTRUCTURA_ENEMIGO
00:00000000 X ESTRUCTURA_AYUDA.activo
00:00000001 X ESTRUCTURA_AYUDA.postilemem_nousado
00:00000003 X ESTRUCTURA_AYUDA.postilemem_usado
00:00000005 X ESTRUCTURA_AYUDA.pospantalla
00:00000006 X ESTRUCTURA_AYUDA.posx
00:00000007 X ESTRUCTURA_AYUDA.posy
00:00000008 X ESTRUCTURA_AYUDA.puntero_accion
00:0000000A X ESTRUCTURA_AYUDA.ayu_aux1
00:0000000B X ESTRUCTURA_AYUDA.ayu_aux2
00:0000000C X ESTRUCTURA_AYUDA.ayu_aux3
00:0000000D X ESTRUCTURA_AYUDA.ayu_aux4
00:0000000E X ESTRUCTURA_AYUDA.ayu_aux5
00:0000000F X ESTRUCTURA_AYUDA.ayu_aux6
00:00000010   ESTRUCTURA_AYUDA
00:00000000 X ESTRUCTURA_ANTORCHA.activo
00:00000001 X ESTRUCTURA_ANTORCHA.postilemem_antor1
00:00000003 X ESTRUCTURA_ANTORCHA.pospantalla_antor1
00:00000004 X ESTRUCTURA_ANTORCHA.pospantalla_antor2
00:00000005 X ESTRUCTURA_ANTORCHA.escena
00:00000006 X ESTRUCTURA_ANTORCHA.cont_sig_escena
00:00000007   ESTRUCTURA_ANTORCHA
00:00000000 X ESTRUCTURA_ESQUELETO.activo
00:00000001 X ESTRUCTURA_ESQUELETO.postilemem_antor1
00:00000003 X ESTRUCTURA_ESQUELETO.pospantalla_esquel1
00:00000004 X ESTRUCTURA_ESQUELETO.pospantalla_esquel2
00:00000005   ESTRUCTURA_ESQUELETO.escena
00:00000006   ESTRUCTURA_ESQUELETO.cont_sig_escena
00:00000007   ESTRUCTURA_ESQUELETO
00:00000000 X ESTRUCTURA_PUERTA.activo
00:00000001 X ESTRUCTURA_PUERTA.posx
00:00000002 X ESTRUCTURA_PUERTA.posy
00:00000003 X ESTRUCTURA_PUERTA.radiox
00:00000004 X ESTRUCTURA_PUERTA.radioy
00:00000005 X ESTRUCTURA_PUERTA.accion
00:00000007   ESTRUCTURA_PUERTA.tiles_puerta
00:00000009   ESTRUCTURA_PUERTA.pos_en_tilemap
00:0000000B   ESTRUCTURA_PUERTA.alto
00:0000000C   ESTRUCTURA_PUERTA.ancho
00:0000000D   ESTRUCTURA_PUERTA
00:00009C72 X sprites_pantantalla
00:00009C72   sprites_comunes
00:00009C72 X sprite_punto_mira_1
00:00009C92 X sprite_punto_mira_2
00:00009CB2 X sprite_punto_mira_1_mejorado
00:00009CD2 X sprite_punto_mira_2_mejorado
00:00009CF2 X sprite_explosion_1
00:00009D12 X sprite_explosion_2
00:00009D32   fin_sprites_comunes
00:00009D32 X sprite_arana1_1
00:00009D52 X sprite_arana1_2
00:00009D72 X sprite_murcielago1_1
00:00009D92 X sprite_murcielago1_2
00:00009DB2 X sprite_serpiente1_1
00:00009DD2 X sprite_serpiente1_2
00:00009DF2 X sprite_serpiente2_1
00:00009E12 X sprite_serpiente2_2
00:00009E32 X sprite_zombi1_1_1
00:00009E52 X sprite_zombi1_2_1
00:00009E72 X sprite_zombi1_3_1
00:00009E92 X sprite_zombi1_4_1
00:00009EB2 X sprite_zombi1_1_2
00:00009ED2 X sprite_zombi1_2_2
00:00009EF2 X sprite_zombi1_3_2
00:00009F12 X sprite_zombi1_4_2
00:00009F32 X sprite_zombi2_1_1
00:00009F52 X sprite_zombi2_2_1
00:00009F72 X sprite_zombi2_3_1
00:00009F92 X sprite_zombi2_4_1
00:00009FB2 X sprite_zombi2_1_2
00:00009FD2 X sprite_zombi2_2_2
00:00009FF2 X sprite_zombi2_3_2
00:0000A012 X sprite_zombi2_4_2
00:0000A032 X sprite_caballero1_1_1
00:0000A052 X sprite_caballero1_2_1
00:0000A072 X sprite_caballero1_3_1
00:0000A092 X sprite_caballero1_4_1
00:0000A0B2 X sprite_caballero1_1_2
00:0000A0D2 X sprite_caballero1_2_2
00:0000A0F2 X sprite_caballero1_3_2
00:0000A112 X sprite_caballero1_4_2
00:0000A132 X sprite_caballero2_1_1
00:0000A152 X sprite_caballero2_2_1
00:0000A172 X sprite_caballero2_3_1
00:0000A192 X sprite_caballero2_4_1
00:0000A1B2 X sprite_caballero2_1_2
00:0000A1D2 X sprite_caballero2_2_2
00:0000A1F2 X sprite_caballero2_3_2
00:0000A212 X sprite_caballero2_4_2
00:0000A232 X sprite_llama1_1
00:0000A252 X sprite_llama2_1
00:0000A272 X sprite_llama1_2
00:0000A292 X sprite_llama2_2
00:0000A2B2 X sprite_fantasma1_1
00:0000A2D2 X sprite_fantasma2_1
00:0000A2F2 X sprite_fantasma1_2
00:0000A312 X sprite_fantasma2_2
00:0000A332 X sprite_magia1_1
00:0000A352 X sprite_magia2_1
00:0000A372 X sprite_magia1_2
00:0000A392 X sprite_magia2_2
00:0000A3B2 X sprite_beholder1_1
00:0000A3D2 X sprite_beholder2_1
00:0000A3F2 X sprite_beholder3_1
00:0000A412 X sprite_beholder4_1
00:0000A432 X sprite_beholder1_2
00:0000A452 X sprite_beholder2_2
00:0000A472 X sprite_beholder3_2
00:0000A492 X sprite_beholder4_2
00:0000A4B2 X sprite_vampiro1_1
00:0000A4D2 X sprite_vampiro2_1
00:0000A4F2 X sprite_vampiro1_2
00:0000A512 X sprite_vampiro2_2
00:0000A532 X sprite_manoizq1
00:0000A552 X sprite_manoizq2
00:0000A572 X sprite_manoizq3
00:0000A592 X sprite_manoder1
00:0000A5B2 X sprite_manoder2
00:0000A5D2 X sprite_manoder3
00:0000A5F2   habitacion_actual
00:0000A5F3   habitacion_extras
00:0000A5F4   habitacion_actual_puntero
00:0000A5F6   is_habitacion_terminada
00:0000A5F7   habitaciones_juego
00:0000A5F7   habitaciones_nivel0
00:0000A667   habitaciones_nivel1
00:0000A6D7   habitaciones_nivel2
00:0000A747   habitaciones_nivel3
00:0000A7B7   habitaciones_nivel4
00:0000A827   habitaciones_nivel5
00:0000A897   habitaciones_nivel6
00:0000A907   color_base
00:0000A90A   color_bomba1
00:0000A90D   color_bomba2
00:0000A910   prota
00:0000A910   prota.posx
00:0000A911   prota.posy
00:0000A912   prota.escena
00:0000A913 X prota.velocidad
00:0000A914 X prota.boton2_pressed
00:0000A915   prota.cadencia
00:0000A916 X prota.pm_aux1
00:0000A917 X prota.pm_aux2
00:0000A918 X prota.pm_aux3
00:0000A919 X prota.pm_aux4
00:0000A91A X prota.pm_aux5
00:0000A91B X prota.pm_aux6
00:0000A91C X prota.pm_aux7
00:0000A91D X prota.pm_aux8
00:0000A91E X prota.pm_aux9
00:0000A91F X prota.pm_aux10
00:0000A920   prota_nivel
00:0000A921   prota_vidas
00:0000A922   prota_reliquias
00:0000A923   prota_pos_mapx
00:0000A924   prota_pos_mapy
00:0000A925   prota_energia
00:0000A926   array_aux_vidas
00:0000A92E   array_aux_reliquias
00:0000A936   array_aux_energia
00:0000A93D   ultimo_pos_array_aux_energia
00:0000A93E   array_aux_mapa_limpiar
00:0000A945   elemento_pintar_mapa
00:0000A946 X lista_ayudas
00:0000A946   ayuda_oracion
00:0000A956   ayuda_cruz
00:0000A966   ayuda_aguabendita
00:0000A976   ayuda_armadura
00:0000A986   ayuda_planta
00:0000A996   ayuda_vidaextra
00:0000A9A6   ayuda_ballesta
00:0000A9B6 X datos_oracion
00:0000A9C0   datos_cruz
00:0000A9CA   datos_aguabendita
00:0000A9DB   datos_armadura
00:0000A9EC   datos_planta
00:0000A9FD   datos_vidaextra
00:0000AA0E   datos_ballesta
00:0000AA1F X array_ayudas
00:0000AA1F   array_oracionon
00:0000AA21 X array_oracionon1
00:0000AA23   array_oracionoff
00:0000AA25 X array_oracionoff1
00:0000AA27   array_cruzon
00:0000AA29 X array_cruzon1
00:0000AA2B   array_cruzoff
00:0000AA2D X array_cruzoff1
00:0000AA2F   array_aguaon
00:0000AA31 X array_aguaon1
00:0000AA33   array_aguaoff
00:0000AA35 X array_aguaoff1
00:0000AA37   array_armaduraon
00:0000AA39 X array_armaduraon1
00:0000AA3B   array_armaduraoff
00:0000AA3D X array_armaduraoff1
00:0000AA3F   array_plantaon
00:0000AA41 X array_plantaon1
00:0000AA43   array_plantaoff
00:0000AA45 X array_plantaoff1
00:0000AA47   array_extraon
00:0000AA49 X array_extraon1
00:0000AA4B   array_extraoff
00:0000AA4D X array_extraoff1
00:0000AA4F   array_ballestaon
00:0000AA51 X array_ballestaon1
00:0000AA53   array_ballestaoff
00:0000AA55 X array_ballestaoff1
00:0000AA57   antorchas
00:0000AA5E   array_antorcha
00:0000AA61   esqueletos
00:0000AA68   array_esqueleto
00:0000AA74   lista_escenas_calavera
00:0000AA78   array_sprites
00:0000AA78   array_sprites_pm
00:0000AA80 X array_sprites_enem
00:0000AAF8 X lista_enemigos
00:0000AB84 X puntero_array_atrib_array_VRAM
00:0000AB86   tiles_patrones_nivel0
00:0000ADB0   tiles_color_nivel0
00:0000AE1B   tiles_mapa_nivel0
00:0000AE50   tiles_patrones_nivel1
00:0000B005   tiles_color_nivel1
00:0000B04C   tiles_mapa_nivel1
00:0000B081   tiles_patrones_nivel2
00:0000B236   tiles_color_nivel2
00:0000B27D   tiles_mapa_nivel2
00:0000B2B2   tiles_patrones_nivel3
00:0000B467   tiles_color_nivel3
00:0000B4AE   tiles_mapa_nivel3
00:0000B4E3   tiles_patrones_nivel4
00:0000B698   tiles_color_nivel4
00:0000B6DF   tiles_mapa_nivel4
00:0000B714   tiles_patrones_nivel5
00:0000B8C9   tiles_color_nivel5
00:0000B910   tiles_mapa_nivel5
00:0000B945   tiles_patrones_nivel6
00:0000BAFA   tiles_color_nivel6
00:0000BB41   tiles_mapa_nivel6
00:0000BB76   tiles_patrones_marcador
00:0000BCC2   tiles_color_marcador
00:0000BCF7   tiles_mapa_marcador
00:0000BD59   END


 Output: t4.out
-------------------------------------------------

 Page: 00
  Org: 00008000  Size: *  Used: 00000000

    No output

 Output: t4.bin
-------------------------------------------------

 Page: 00
  Org: 00008000  Size: *  Used: 00003D60

   Address   Length Align   Label
   00008000   15712         START
