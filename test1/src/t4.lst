Sjasm Z80 Assembler v0.42c - www.xl2s.tk             [2021.08.08 - 10:08:12]

t4.asm
Errors: 0

       1   00:0000                      	OUTPUT	"t4.bin"
       2   00:8000                      	
       3   00:8000                      ;;=====================================================
       4   00:8000                      ;;DEFINICIÓN DE CONSTANTES
       5   00:8000                      ;;=====================================================	
       6   00:8000                      	include "constantes.asm"
       1.  00:8000                      ;;=====================================================
       2.  00:8000                      ;; FICHERO constantes.asm
       3.  00:8000                      ;;=====================================================
       4.  00:8000                      
       5.  00:8000                      ;;ETIQUETAS/CONSTANTES BIOS TECLADO
       6.  00:8000  (00:00D8)           GTTRIG		equ		#00D8	;Returns current trigger status
       7.  00:8000  (00:00D5)           GTSTCK		equ		#00D5	;Returns the joystick/cursors status
       8.  00:8000  (00:F3DB)           CLIKSW		equ		#F3DB	;deshabilita el sonido de clic cuando se pulsa una tecla
       9.  00:8000                      
      10.  00:8000                      ;;ETIQUETAS/CONSTANTES BIOS VDP
      11.  00:8000  (00:013E)           RDVDP		equ		#013E	;lee registro status VDP
      12.  00:8000  (00:0047)           WRTVDP		equ		#0047	;escribe registros del VDP
      13.  00:8000  (00:005C)           LDIRVM		equ		#005C	;RAM/ROM -> VRAM
      14.  00:8000  (00:0059)           LDIRMV		equ		#0059	;VRAM -> RAM
      15.  00:8000  (00:005F)           CHGMOD		equ		#005F	;cambia modo pantalla (screen mode)
      16.  00:8000  (00:0041)           DISSCR  	equ		#0041	;desactiva pantanlla
      17.  00:8000  (00:0044)           ENASCR  	equ		#0044	;activa pantalla
      18.  00:8000  (00:0062)           CHGCLR  	equ		#0062	;cambia color de pantalla (toca A y direcciones)
      19.  00:8000  (00:F3E9)           FORCLR		equ		#F3E9	;zona memoria color foreground
      20.  00:8000  (00:F3EA)           BAKCLR  	equ		#F3EA	;zona memoria color background
      21.  00:8000  (00:F3EB)           BDRCLR 		equ		#F3EB	;zona memoria bordercolor
      22.  00:8000  (00:00C3)           CLS			equ		#00C3	;limpia pantalla (necesita A=0)
      23.  00:8000                      
      24.  00:8000                      ;;ETIQUETAS/CONSTANTES REGISTROS VDP
      25.  00:8000  (00:F3DF)           RG0SAV		equ		#F3DF	;Mirror of VDP register 0 (Basic: VDP(0))
      26.  00:8000  (00:F3E0)           RG1SAV		equ		#F3E0	;Mirror of VDP register 1 (Basic: VDP(1))
      27.  00:8000  (00:F3E1)           RG2SAV		equ		#F3E1	;Mirror of VDP register 2 (Basic: VDP(2))
      28.  00:8000  (00:F3E2)           RG3SAV		equ		#F3E2	;Mirror of VDP register 3 (Basic: VDP(3))
      29.  00:8000  (00:F3E3)           RG4SAV		equ		#F3E3	;Mirror of VDP register 4 (Basic: VDP(4))
      30.  00:8000  (00:F3E4)           RG5SAV		equ		#F3E4	;Mirror of VDP register 5 (Basic: VDP(5))
      31.  00:8000  (00:F3E5)           RG6SAV		equ		#F3E5	;Mirror of VDP register 6 (Basic: VDP(6))
      32.  00:8000  (00:F3E6)           RG7SAV		equ		#F3E6	;Mirror of VDP register 7 (Basic: VDP(7))
      33.  00:8000  (00:F3E7)           STATFL		equ		#F3E7	;Mirror of VDP(8) status register (S#0)
      34.  00:8000                      
      35.  00:8000  (00:0099)           REGEST		equ		#0099	;registro de estado para escribir directamente en VRAM
      36.  00:8000  (00:0098)           REGESCVDP	equ		#0098	;registro donde escribir valor para VRAM
      37.  00:8000                      
      38.  00:8000                      ;;ETIQUETAS/CONSTANTES REGISTROS PSG (PARA JOYSTICK)
      39.  00:8000  (00:00A0)           PSG_A  equ  0a0h  ;reg address
      40.  00:8000  (00:00A1)           PSG_W  equ  0a1h  ;reg data WR
      41.  00:8000  (00:00A2)           PSG_R  equ  0a2h  ;reg data
      42.  00:8000                      
      43.  00:8000                      
      44.  00:8000                      ;;ETIQUETAS DE ZONAS DE MEMORIA DE LA VPD (MSX1)
      45.  00:8000  (00:0000)           CHRTBL		equ		#0000
      46.  00:8000  (00:1800)           TILMAP		equ		#1800
      47.  00:8000  (00:1B00)           SPRART		equ		#1B00
      48.  00:8000  (00:2000)           CLRTBL		equ		#2000
      49.  00:8000  (00:3800)           SPRTBL		equ		#3800
      50.  00:8000                      
      51.  00:8000                      
      52.  00:8000                      ;;ETIQUETAS ESTANDAR PARA DAR MÁS CLARIDAD AL CODIGO
      53.  00:8000  (00:0001)           SI			equ		1
      54.  00:8000  (00:0000)           NO			equ		0
      55.  00:8000                      
      56.  00:8000                      ;;PALETA DE COLORES DEL MSX
      57.  00:8000  (00:0000)           COLTRASP	equ		0
      58.  00:8000  (00:0001)           COLNEGRO	equ		1
      59.  00:8000  (00:0002)           COLVERDE	equ		2
      60.  00:8000  (00:0003)           COLVERCLA	equ		3
      61.  00:8000  (00:0004)           COLAZULOSC	equ		4
      62.  00:8000  (00:0005)           COLAZULLA	equ		5
      63.  00:8000  (00:0006)           COLROJOOSC	equ		6
      64.  00:8000  (00:0007)           COLCYAN		equ		7
      65.  00:8000  (00:0008)           COLROJO		equ		8
      66.  00:8000  (00:0009)           COLROJOCLA	equ		9
      67.  00:8000  (00:000A)           COLAMAROSC	equ		10
      68.  00:8000  (00:000B)           COLAMARCLA	equ		11
      69.  00:8000  (00:000C)           COLVERDOSC	equ		12
      70.  00:8000  (00:000D)           COLMAGENTA	equ		13
      71.  00:8000  (00:000E)           COLGRIS		equ		14
      72.  00:8000  (00:000F)           COLBLANCO	equ		15
      73.  00:8000                      
      74.  00:8000                      
      75.  00:8000                      
      76.  00:8000                      ;;ETIQUETAS ESPECIFICAS PARA DAR MÁS CLARIDAD AL CODIGO (relacionadas con posiciones en mapa vdp)
      77.  00:8000  (00:02F8)           POSMAPLIN1  equ		#02F8
      78.  00:8000  (00:02D8)           POSMAPLIN2  equ		#02D8
      79.  00:8000  (00:02B8)           POSMAPLIN3  equ		#02B8
      80.  00:8000  (00:0298)           POSMAPLIN4  equ		#0298
      81.  00:8000  (00:0278)           POSMAPLIN5  equ		#0278
      82.  00:8000  (00:0258)           POSMAPLIN6  equ		#0258
      83.  00:8000  (00:0238)           POSMAPLIN7  equ		#0238
      84.  00:8000                      
      85.  00:8000  (00:000D)           POSCARAMAP	equ		#000D
      86.  00:8000  (00:0248)           POSVIDAS	equ		#0248
      87.  00:8000  (00:0011)           POSRELIMAP	equ		#0011
      88.  00:8000  (00:02C8)           POSRELIQ	equ		#02C8
      89.  00:8000  (00:0288)           POSENERG	equ		#0288
      90.  00:8000  (00:02B4)           POSNIVEL	equ		#02B4
      91.  00:8000  (00:0238)           POSMAPA		equ 	#0238
      92.  00:8000                      
      93.  00:8000  (00:01EE)           POSPUERABAJ equ		#01EE
      94.  00:8000  (00:008E)           POSPUERARRI equ		#008E
      95.  00:8000  (00:00FC)           POSPUERDERE equ		#00FC
      96.  00:8000  (00:00E1)           POSPUERIZQU equ		#00E1
      97.  00:8000                      
      98.  00:8000                      
      99.  00:8000                      ;;ETIQUETAS ESPECIFICAS PARA DAR MÁS CLARIDAD AL CODIGO (relacionadas con posiciones en en el banco de memoria)
     100.  00:8000  (00:0013)           TILEMAPPROT equ		19
     101.  00:8000  (00:0009)           TILEMAPVACI	equ		9
     102.  00:8000  (00:0010)           TILEMAPROJO equ		16
     103.  00:8000  (00:000F)           TILEMAPAMAR equ		15
     104.  00:8000  (00:000E)           TILEMAPVERD equ		14
     105.  00:8000                      
     106.  00:8000                      
     107.  00:8000                      ;;ETIQUETAS ESPECIFICAS PARA DAR MÁS CLARIDAD AL CODIGO (generales)
     108.  00:8000  (00:0008)           NMAXVIDREL	equ		8		;el número máximo de vidas y de reliquias es de 8
     109.  00:8000  (00:0007)           NHABNIVEL	equ		7
     110.  00:8000  (00:00F8)           MAXENERGIA  equ		248
     111.  00:8000  (00:00D9)           TILEENERG8  equ		217
     112.  00:8000  (00:00BA)           TILEENERG7  equ		186
     113.  00:8000  (00:009B)           TILEENERG6  equ		155
     114.  00:8000  (00:007C)           TILEENERG5  equ		124
     115.  00:8000  (00:005D)           TILEENERG4  equ		93
     116.  00:8000  (00:003E)           TILEENERG3  equ		62
     117.  00:8000  (00:001F)           TILEENERG2  equ		31
     118.  00:8000  (00:0000)           TILENEGRO	equ		0
     119.  00:8000                      
     120.  00:8000                      ;limites
     121.  00:8000  (00:0000)           LIMPANTIZQ  equ		0
     122.  00:8000  (00:00FF)           LIMPANTDER  equ		255
     123.  00:8000  (00:0000)           LIMPANTARR  equ		0
     124.  00:8000  (00:0080)           LIMPANTABA  equ		128
     125.  00:8000                      
     126.  00:8000                      
     127.  00:8000                      ;matriz de 7x7 empieza en 0, y fila y x col, cuento desde esquina sup izq
     128.  00:8000  (00:0006)           BASEMAPY	equ		6
     129.  00:8000  (00:0003)           BASEMAPX	equ		3
     130.  00:8000                      
     131.  00:8000                      ;para que haga un bucle cuando se use una reliquia
     132.  00:8000  (00:0001)           RETARDOREL  equ		1;75
       7   00:8000                      
       8   00:8000                      ;;=====================================================
       9   00:8000                      ;;DEFINICIÓN DE CABECERA DE ARCHIVO BIN
      10   00:8000                      ;;=====================================================		
      11   00:8000                      	include "cabecerabin.asm"
       1.  00:8000                      ;;=====================================================
       2.  00:8000                      ;; FICHERO cabecera.asm
       3.  00:8000                      ;;=====================================================
       4.  00:8000                      
       5.  00:8000                      ;;CABECERA FICHERO BIN
       6.  00:8000  FE                  	DB	#FE
       7.  00:8001  00 80               	DW	START
       8.  00:8003  D3 8F               	DW	END
       9.  00:8005  00 80               	DW	START
      10.  00:8007                      
      11.  00:8007                      ;;INICIO CÓDIGO PROGRAMA	
      12.  00:8007                      	ORG	#8000
      13.  00:8000                      	
      12   00:8000                      	
      13   00:8000                      START:
      14   00:8000                      	
      15   00:8000                      	;inicializa pantalla y entonrno
      16   00:8000  CD 44 81            	CALL	sub_preparapantalla			;screen 2,2 sin click al pulsar tecla y color 16,1,1
      17   00:8003                      	
      18   00:8003                      	;inicializa variables para parametrizar funciones y que lo que se muestre sea variable (nº vidas, mapa, puertas, pantalla, etc...)
      19   00:8003  CD 79 80            	CALL	inicializa_variables_pruebas
      20   00:8006                      	
      21   00:8006                      	;inicializa los niveles por partida
      22   00:8006  CD A7 80            	CALL	inicializa_niveles			;no es necesario parametrizarlo según el nivel del usuario ya que se cargan todos
      23   00:8009                      	
      24   00:8009                      	;pinta la pantalla (la primera o algunas especiales se pintan completamente)
      25   00:8009  CD 65 81            	CALL	pinta_pantalla_completa 
      26   00:800C                      	
      27   00:800C                      	;carga sprites en memoria (SE HA RETRASADO HASTA PARAMETRIZAR LA CARGA DE PANTALLAS)
      28   00:800C  CD D1 83            	CALL 	carga_patrones_sprites_nivel1
      29   00:800F                      	
      30   00:800F                      	;funciones que modificarian el marcador si se produce un evento cuando toque y cuando se pinta la pantalla ya se mira
      31   00:800F                      	;una variable para ver si el array hay que actualizarlo en pantalla o no
      32   00:800F  CD BC 80            	CALL	actualiza_marcador_vidas
      33   00:8012  CD D5 80            	CALL	actualiza_marcador_reliquias
      34   00:8015  CD E0 81            	CALL	pinta_nivel
      35   00:8018  CD 61 82            	CALL	borra_mapa
      36   00:801B                      
      37   00:801B  CD EC 80            	CALL	localiza_info_habitacion	;devuelve variable habitacion_actual 	
      38   00:801E                      
      39   00:801E  3E 01               	LD		 A,1
      40   00:8020  CD 61 83            	CALL	posiciona_en_mapa		;se le pasa A 1 (tile del prota) está el prota y prota.poxx y posy
      41   00:8023                      
      42   00:8023                      	
      43   00:8023                      loop_principal:
      44   00:8023  76                  	HALT							;espera VBLANK y sincroniza
      45   00:8024                      	
      46   00:8024  CD A2 84            	CALL	render_sprites			;actualiza array de sprites y los pinta en pantalla
      47   00:8027                      	
      48   00:8027  CD 52 82            	CALL	pinta_energia			;pinta la energia en pantalla
      49   00:802A                      
      50   00:802A                      mira_pinta_puertas:
      51   00:802A  3A 19 8C            	LD		 A,(actualiza_puertas_sn)
      52   00:802D  B7                  	OR		 A
      53   00:802E  28 06               	JR		 Z,fin_mira_pinta_puertas
      54   00:8030                      	
      55   00:8030                      	;primero preparo la pantalla como si no hubiera puertas
      56   00:8030  CD 6C 81            	CALL 	pinta_parte_superior_pantalla
      57   00:8033                      	
      58   00:8033  CD EF 82            	CALL	pinta_puertas
      59   00:8036                      fin_mira_pinta_puertas:
      60   00:8036                      	
      61   00:8036                      mira_pinta_vidas:
      62   00:8036  3A 00 8C            	LD		 A, (actualiza_vidas_sn)
      63   00:8039  B7                  	OR		 A
      64   00:803A  28 03               	JR		 Z, fin_mira_pinta_vidas
      65   00:803C  CD BE 81            	CALL	pinta_vidas
      66   00:803F                      fin_mira_pinta_vidas:	
      67   00:803F                      
      68   00:803F                      mira_pinta_reliquias:
      69   00:803F  3A 09 8C            	LD		 A, (actualiza_reliquias_sn)
      70   00:8042  B7                  	OR		 A
      71   00:8043  CA 4E 80            	JP		 Z, fin_mira_pinta_reliquias
      72   00:8046                      	;1º actualiza el marcador de reliquias
      73   00:8046  CD D1 81            	CALL 	pinta_reliquias
      74   00:8049                      	;2º creo efecto de tirar reliquia
      75   00:8049                      ;	CALL	efecto_imagen_tira_reliquia
      76   00:8049                      
      77   00:8049  3E 00               	LD		 A, 0
      78   00:804B  32 09 8C            	LD		(actualiza_reliquias_sn), A
      79   00:804E                      fin_mira_pinta_reliquias:
      80   00:804E                      
      81   00:804E  CD E5 84            	CALL	check_player			;MIRA EL CONTROL Y APLICA LA LOGICA DE MOVIMIENTO DEL PROTAGONISTA
      82   00:8051                      	
      83   00:8051  CD FB 81            	CALL	mira_pinta_energia		;actualiza el array de energia siempre pero no pinta eso lo hace pinta_energia
      84   00:8054                      	
      85   00:8054  C3 23 80            	JP		loop_principal
      86   00:8057                      fin_programa_principal:
      87   00:8057  C9                  	RET
      88   00:8058                      
      89   00:8058                      
      90   00:8058                      
      91   00:8058                      ;;=====================================================
      92   00:8058                      ;;EFECTO_IMAGEN_TIRA_RELIQUIA
      93   00:8058                      ;;=====================================================	
      94   00:8058                      ; función: 	hace que el fondo de la pantalla parpadee N veces
      95   00:8058                      ; entrada: 	actualiza_reliquias_sn
      96   00:8058                      ; salida: 	-
      97   00:8058                      ; toca: 	A
      98   00:8058                      efecto_imagen_tira_reliquia:
      99   00:8058  3A 09 8C            	LD		 A, (actualiza_reliquias_sn)
     100   00:805B  3D                  	DEC		 A
     101   00:805C  32 09 8C            	LD		(actualiza_reliquias_sn), A
     102   00:805F  C2 68 80            	JP		NZ, .intercambia_color_fondo
     103   00:8062                      	;toca A y direcciones #F3E9/#F3EA/#F3EB, poner en HL array con 3 valores
     104   00:8062  21 DF 8B            	LD		HL, color_base
     105   00:8065  C3 32 81            	JP		color_pantalla
     106   00:8068                      	;CALL/RET
     107   00:8068                      	
     108   00:8068                      .intercambia_color_fondo:
     109   00:8068  CB 57               	BIT		 2, A
     110   00:806A  CA 73 80            	JP		 Z, .otro_fondo
     111   00:806D  21 E2 8B            	LD		HL, color_bomba1
     112   00:8070  C3 32 81            	JP		color_pantalla
     113   00:8073                      .otro_fondo:
     114   00:8073  21 E5 8B            	LD		HL, color_bomba2
     115   00:8076  C3 32 81            	JP		color_pantalla
     116   00:8079                      fin_efecto_imagen_tira_reliquia:
     117   00:8079                      	;CALL/RET
     118   00:8079                      
     119   00:8079                      
     120   00:8079                      
     121   00:8079                      
     122   00:8079                      
     123   00:8079                      
     124   00:8079                      ;;*******************************************************************
     125   00:8079                      ; sólo para hacer pruebas y pintar la parte de las vidas y demás
     126   00:8079                      inicializa_variables_pruebas:
     127   00:8079  3E 04               	LD		 A, 4
     128   00:807B  32 A8 86            	LD		(prota_vidas),A
     129   00:807E                      
     130   00:807E  3E 01               	LD		 A, SI	
     131   00:8080  32 00 8C            	LD		(actualiza_vidas_sn), A	;actualizo la variable para que pinte vidas 1 sí / 0 no
     132   00:8083                      
     133   00:8083  3E 04               	LD		 A, 4
     134   00:8085  32 A9 86            	LD		(prota_reliquias), A
     135   00:8088                      	
     136   00:8088  3E 01               	LD		 A, RETARDOREL	
     137   00:808A  32 09 8C            	LD		(actualiza_reliquias_sn), A	;actualizo la variable para que pinte vidas 1 sí / 0 no
     138   00:808D                      
     139   00:808D  3E 64               	LD		 A, 100
     140   00:808F  32 AC 86            	LD		(prota_energia), A
     141   00:8092                      
     142   00:8092  3E 01               	LD		 A, 1
     143   00:8094  32 A7 86            	LD		(prota_nivel), A		;nivel empieza en 0 para usar las posiciones ascii
     144   00:8097                      	
     145   00:8097                      	;ubico al prota dentro del nivel para obtener luego las habitaciones y enemigos que aparecerán
     146   00:8097                      	;será igual la posición inicial en todos los niveles
     147   00:8097                      
     148   00:8097  3E 00               	LD		 A, 0				;los niveles son 7 del 0 al 6
     149   00:8099  32 AB 86            	LD		(prota_pos_mapy), A	;pos y dentro del nivel (se empieza en 0)
     150   00:809C                      
     151   00:809C  3E 03               	LD		 A, 3				;columnas 7 del 0 al 6
     152   00:809E  32 AA 86            	LD		(prota_pos_mapx), A	;pos y dentro del nivel (se empieza en 0)
     153   00:80A1                      	
     154   00:80A1                      	;************************************************
     155   00:80A1                      	;importante : revisar pintado de mapa
     156   00:80A1                      
     157   00:80A1  3E 01               	LD			 A, 1 
     158   00:80A3  32 19 8C            	LD			(actualiza_puertas_sn), A;(1 actualiza y 0 no actualiza puertas)
     159   00:80A6                      fin_inicializa_variables_pruebas:
     160   00:80A6  C9                  	RET
     161   00:80A7                      ;;************************************************************************
     162   00:80A7                      
     163   00:80A7                      
     164   00:80A7                      
     165   00:80A7                      
     166   00:80A7                      
     167   00:80A7                      
     168   00:80A7                      
     169   00:80A7                      
     170   00:80A7                      
     171   00:80A7                      ;;=====================================================
     172   00:80A7                      ;;DEFINICIÓN DE SUBRUTINAS
     173   00:80A7                      ;;=====================================================
     174   00:80A7                      	include "subrutinas.asm"
       1.  00:80A7                      ;;=====================================================
       2.  00:80A7                      ;;DEFINICIÓN DE SUBRUTINAS
       3.  00:80A7                      ;;=====================================================	
       4.  00:80A7                      
       5.  00:80A7                      
       6.  00:80A7                      ;;=====================================================
       7.  00:80A7                      ;;INICIALIZA_NIVELES
       8.  00:80A7                      ;;=====================================================	
       9.  00:80A7                      ; función: 	copia la plantilla de niveles (habitaciones_plantilla) en los niveles de trabajo para el juego (habitaciones_juego)
      10.  00:80A7                      ; entrada: 	habitaciones_plantilla
      11.  00:80A7                      ; salida: 	habitaciones_juego
      12.  00:80A7                      ; toca: 	A
      13.  00:80A7                      inicializa_niveles:
      14.  00:80A7  D9                  	EXX
      15.  00:80A8                      	
      16.  00:80A8  AF                  	XOR		 A
      17.  00:80A9  06 31               	LD		 B, 49				;7 filas por 7 niveles menos el primero que lo hago diera del buble porque se suma 14 y no 16
      18.  00:80AB  21 CF 88            	LD		HL, habitaciones_juego;tambíen puntero al primer nivel
      19.  00:80AE  11 0E 00            	LD		DE,14
      20.  00:80B1  19                  	ADD		HL,DE
      21.  00:80B2  77                  	LD		(HL),A
      22.  00:80B3  11 10 00            	LD		DE,16				;desde las col 15 de una fila a la siguiente
      23.  00:80B6                      .bucle_borra_hab:
      24.  00:80B6  19                  	ADD		HL,DE
      25.  00:80B7  77                  	LD		(HL),A
      26.  00:80B8  10 FC               	DJNZ	.bucle_borra_hab
      27.  00:80BA                      	
      28.  00:80BA  D9                  	EXX
      29.  00:80BB                      fin_iniciliza_niveles:
      30.  00:80BB  C9                  	RET
      31.  00:80BC                      
      32.  00:80BC                      
      33.  00:80BC                      ;;=====================================================
      34.  00:80BC                      ;;ACTUALIZA_MARCADOR_VIDAS
      35.  00:80BC                      ;;=====================================================	
      36.  00:80BC                      ; función:  actualiza el buffer de vidas
      37.  00:80BC                      ; entrada: 	prota_vidas
      38.  00:80BC                      ; salida: 	array_aux_vidas
      39.  00:80BC                      ; toca:		A,B,HL
      40.  00:80BC                      actualiza_marcador_vidas:
      41.  00:80BC  D9                  	EXX
      42.  00:80BD                      
      43.  00:80BD                      	;para no andar restando pongo todos los huecos a negro y luego en otro bucle las caras
      44.  00:80BD                      	;1-pinto todo en blanco
      45.  00:80BD  21 F8 8B            	LD		HL,array_aux_vidas
      46.  00:80C0  06 08               	LD		 B,NMAXVIDREL
      47.  00:80C2                      loop_marcador_caras_negro:	;asignar espacios en negro
      48.  00:80C2  36 00               	LD		(HL),0			;0 posición mapa tiles para nada (es transparente pero el fondo es negro)
      49.  00:80C4  23                  	INC		HL
      50.  00:80C5  10 FB               	DJNZ	loop_marcador_caras_negro
      51.  00:80C7                      fin_loop_marcador_caras_negro:
      52.  00:80C7                      	;2-pinto las caras según el n de vidas
      53.  00:80C7  21 F8 8B            	LD		HL,array_aux_vidas
      54.  00:80CA  3A A8 86            	LD		 A,(prota_vidas)
      55.  00:80CD  47                  	LD		 B,A
      56.  00:80CE                      loop_marcador_caras: ;asignar caras
      57.  00:80CE  36 0D               	LD		(HL),POSCARAMAP	;13 posición mapa tiles para cara
      58.  00:80D0  23                  	INC		HL
      59.  00:80D1  10 FB               	DJNZ	loop_marcador_caras
      60.  00:80D3                      fin_loop_marcador_caras:
      61.  00:80D3                      
      62.  00:80D3  D9                  	EXX
      63.  00:80D4                      fin_actualiza_marcador_vidas:
      64.  00:80D4  C9                  	RET
      65.  00:80D5                      
      66.  00:80D5                      
      67.  00:80D5                      ;;=====================================================
      68.  00:80D5                      ;;ACTUALIZA_MARCADOR_RELIQUIAS
      69.  00:80D5                      ;;=====================================================	
      70.  00:80D5                      ; función: 	actualiza buffer de reliquias
      71.  00:80D5                      ; entrada: 	prota_reliquias
      72.  00:80D5                      ; salida: 	array_aux_reliquias
      73.  00:80D5                      ; toca:		A,B,HL
      74.  00:80D5                      actualiza_marcador_reliquias:
      75.  00:80D5                      	;para no andar restando pongo todos los huecos a negro y luego en otro bucle las reliquias
      76.  00:80D5                      	;1-pinto todo en blanco
      77.  00:80D5  21 01 8C            	LD		HL, array_aux_reliquias
      78.  00:80D8  06 08               	LD		 B, NMAXVIDREL
      79.  00:80DA                      loop_marcador_reliquias_negro:	;asignar espacios en negro
      80.  00:80DA  36 00               	LD		(HL), 0			;0 posición mapa tiles para nada (es transparente pero el fondo es negro)
      81.  00:80DC  23                  	INC		HL
      82.  00:80DD  10 FB               	DJNZ	loop_marcador_reliquias_negro
      83.  00:80DF                      fin_loop_marcador_reliquias_negro:
      84.  00:80DF                      	;2-pinto las cruces según el n de reliquias
      85.  00:80DF  21 01 8C            	LD		HL, array_aux_reliquias
      86.  00:80E2  3A A9 86            	LD		 A, (prota_reliquias)
      87.  00:80E5  47                  	LD		 B, A
      88.  00:80E6                      loop_marcador_reliquias: ;asignar reliquias
      89.  00:80E6  36 11               	LD		(HL), POSRELIMAP	;17 posición mapa tiles para reliquia
      90.  00:80E8  23                  	INC		HL
      91.  00:80E9  10 FB               	DJNZ	loop_marcador_reliquias
      92.  00:80EB                      fin_loop_marcador_reliquias:
      93.  00:80EB                      fin_actualiza_marcador_reliquias:
      94.  00:80EB  C9                  	RET
      95.  00:80EC                      
      96.  00:80EC                      
      97.  00:80EC                      
      98.  00:80EC                      ;;=====================================================
      99.  00:80EC                      ;;LOCALIZA_INFO_HABITACION
     100.  00:80EC                      ;;=====================================================	
     101.  00:80EC                      ; función: 	busca las puertas que hay que pintar egún la posición del usuario y las pone en A
     102.  00:80EC                      ; entrada: 	prota.pos_mapy, prota.pos_mapx, prota_nivel habitaciones_juego
     103.  00:80EC                      ; salida: 	habitacion_actual
     104.  00:80EC                      ; toca:		A
     105.  00:80EC                      ;ejemplo: nivel 4, posx 5 y posy 3
     106.  00:80EC                      ;  (4 x 7) x 16 (se necesitan dos bytes y el prod de 16 es slr 4 veces)
     107.  00:80EC                      ; +(3 x 16) 	de la fila (se necesita 1 y byte el prod de 16 es slr 4 veces)
     108.  00:80EC                      ; +5        	de la columna 
     109.  00:80EC                      localiza_info_habitacion:
     110.  00:80EC  D9                  		EXX
     111.  00:80ED                      
     112.  00:80ED                      ;primer sumando	(en el ejemplo + (4x7)x16)
     113.  00:80ED  21 CF 88            		LD		HL, habitaciones_juego
     114.  00:80F0  3A A7 86            		LD		 A, (prota_nivel)	
     115.  00:80F3  B7                  		OR		 A
     116.  00:80F4  28 16               		JR		 Z, .no_suma_niveles_previos	;el primero nivel (0) no sumaría ni uno por lo que salto al segundo sumando
     117.  00:80F6                      	;sumo 7 veces el nº de nivel si no es cero
     118.  00:80F6  57                  		LD		 D, A
     119.  00:80F7  06 06               		LD		 B, 6
     120.  00:80F9                      .primer_producto
     121.  00:80F9  82                  		ADD		 A, D
     122.  00:80FA  10 FD               		DJNZ	 .primer_producto
     123.  00:80FC  47                  		LD		 B, A				;guardo el resultado en B
     124.  00:80FD                      
     125.  00:80FD                      ;el resultado previo está en B. Ahoro hay que multiplicar A x 16, lo guardo en DE y lo sumo en HL
     126.  00:80FD                      		;inicializo valores a 0
     127.  00:80FD  AF                  		XOR		 A
     128.  00:80FE  57                  		LD		 D, A
     129.  00:80FF  5F                  		LD		 E, A
     130.  00:8100  67                  		LD		 H, A
     131.  00:8101  6F                  		LD		 L, A
     132.  00:8102                      
     133.  00:8102  58                  		LD		 E, B				;pongo el (4x7) en HL (estaba en B)
     134.  00:8103                      		
     135.  00:8103  06 10               		LD		 B, 16
     136.  00:8105                      .segundo_producto
     137.  00:8105  19                  		ADD		HL, DE				;segundo producto x 16
     138.  00:8106  10 FD               		DJNZ	.segundo_producto	
     139.  00:8108                      		
     140.  00:8108                      .fin_seg_prod:
     141.  00:8108                      	;coloco puntero DE al inicio de las habitaciones y le sumo para poner el puntero en el nivel que me interesa
     142.  00:8108  11 CF 88            		LD		DE, habitaciones_juego
     143.  00:810B  19                  		ADD		HL, DE				;suma el nº de bytes de los niveles previos (4 x 7 x 16)
     144.  00:810C                      .no_suma_niveles_previos:
     145.  00:810C                      
     146.  00:810C                      ;ya tengo el puntero HL al inicio del nivel que me interesa
     147.  00:810C                      
     148.  00:810C                      ;segundo sumando (en el ejemplo + 3x16)
     149.  00:810C  3A AB 86            	LD		 A,(prota_pos_mapy)
     150.  00:810F                      [4]	SLA		 A				;equivalente a 3 x 16			
     150.  00:810F  CB 27 CB 27 CB 27 CB 27 
     151.  00:8117                      
     152.  00:8117  5F                  	LD		 E, A
     153.  00:8118  AF                  	XOR		 A
     154.  00:8119  57                  	LD		 D, A
     155.  00:811A  19                  	ADD		HL, DE			;equivale a 4x7x16 (HL) + 3x16 (DE)
     156.  00:811B                      
     157.  00:811B                      ;tercer sumando (en el ejemplo + 5)
     158.  00:811B  3A AA 86            	LD		 A, (prota_pos_mapx)
     159.  00:811E  47                  	LD		 B, A
     160.  00:811F                      .situa_columna:
     161.  00:811F  23 23               [2]	INC		HL
     162.  00:8121  10 FC               	DJNZ	.situa_columna
     163.  00:8123                      
     164.  00:8123                      ;ya tengo el puntero HL al inicio de la fila que me interesa
     165.  00:8123                      
     166.  00:8123                      ;colocamos resultado en habitación actual
     167.  00:8123  DD 21 CD 88         	LD		IX, habitacion_actual
     168.  00:8127  7E                  	LD		 A, (HL)
     169.  00:8128  DD 77 00            	LD		(IX), A
     170.  00:812B  23                  	INC		HL
     171.  00:812C  7E                  	LD		 A, (HL)
     172.  00:812D  DD 77 01            	LD		(IX+1), A
     173.  00:8130                      	
     174.  00:8130  D9                  	EXX
     175.  00:8131                      fin_localiza_info_habitacion:
     176.  00:8131  C9                  	RET
     177.  00:8132                      
     178.  00:8132                      
     179.  00:8132                      
     180.  00:8132                      
     175   00:8132                      	
     176   00:8132                      	include "subr_pintapantalla.asm"
       1.  00:8132                      ;;=====================================================
       2.  00:8132                      ;;DEFINICIÓN DE SUBRUTINAS
       3.  00:8132                      ;;=====================================================	
       4.  00:8132                      ;relacionadas con pintado en pantalla (y no sprites)
       5.  00:8132                      
       6.  00:8132                      
       7.  00:8132                      ;;=====================================================
       8.  00:8132                      ;;COLOR_PANTALLA
       9.  00:8132                      ;;=====================================================	
      10.  00:8132                      ; función: el equivalente en basic a color 15,1,1
      11.  00:8132                      ; entrada: HL	que apunta a un array de bytes con 3 bytes FORCLR, BAKCLR y BDRCLR
      12.  00:8132                      ; salida: -
      13.  00:8132                      ; toca: 	A, HL
      14.  00:8132                      color_pantalla:
      15.  00:8132  7E                  	LD		 A, (HL)			;FORCLR 
      16.  00:8133  32 E9 F3            	LD 		(FORCLR),A
      17.  00:8136  23                  	INC		HL
      18.  00:8137                      	
      19.  00:8137  7E                  	LD		 A, (HL)			;BAKCLR
      20.  00:8138  32 EA F3            	LD 		(BAKCLR),A
      21.  00:813B  23                  	INC		HL
      22.  00:813C                      	
      23.  00:813C  7E                  	LD		 A, (HL)
      24.  00:813D  32 EB F3            	LD 		(BDRCLR),A			;BDRCLR
      25.  00:8140  CD 62 00            	CALL	CHGCLR  
      26.  00:8143                      fin_color_pantalla:
      27.  00:8143  C9                  	RET
      28.  00:8144                      
      29.  00:8144                      
      30.  00:8144                      ;;=====================================================
      31.  00:8144                      ;;PREPARAPANTALLA
      32.  00:8144                      ;;=====================================================	
      33.  00:8144                      ; función: elimina clic cuando se pulsa tecla, cls, screen 2,2
      34.  00:8144                      ; entrada: -
      35.  00:8144                      ; salida: -
      36.  00:8144                      ; toca: si no son todos los regristros, casi todos
      37.  00:8144                      sub_preparapantalla:
      38.  00:8144                      	;toca A y Z
      39.  00:8144                      elimina_clic;
      40.  00:8144  AF                  	XOR		 A
      41.  00:8145  32 DB F3            	LD		(CLIKSW),A
      42.  00:8148                      fin_elimina_clic:
      43.  00:8148                      
      44.  00:8148                      	;toca A
      45.  00:8148                      limpia_pantalla:
      46.  00:8148  AF                  	XOR		 A
      47.  00:8149  CD C3 00            	CALL 	CLS
      48.  00:814C                      fin_limpia_pantalla:
      49.  00:814C                      
      50.  00:814C                      	;toca A y direcciones #F3E9/#F3EA/#F3EB, poner en HL array con 3 valores
      51.  00:814C  21 DF 8B            	LD		HL, color_base
      52.  00:814F  CD 32 81            	CALL	color_pantalla
      53.  00:8152                      	
      54.  00:8152                      	;cambiamos a SCREEN 2,2 del BASIC
      55.  00:8152                      	;toca A
      56.  00:8152                      screen2:
      57.  00:8152  3E 02               	LD		 A, 2
      58.  00:8154  CD 5F 00            	CALL	CHGMOD			;selecciona screen 2
      59.  00:8157                      sprites_16_16:
      60.  00:8157  3A E0 F3            	LD		 A, (RG1SAV)
      61.  00:815A  F6 02               	OR		00000010b		;fuerza sprites de 16x16
      62.  00:815C  32 E0 F3            	LD		(RG1SAV), A		;no lo guardamos en la copia de variables del sistema
      63.  00:815F  47                  	LD		 B, A
      64.  00:8160  0E 01               	LD		 C, 1
      65.  00:8162  C3 47 00            	JP		WRTVDP			;opción alternativa de escribir las tres lineas siguientes
      66.  00:8165                      	;~ CALL	WRTVDP			;lo escribe en el registro 1 del VDP
      67.  00:8165                      	;~ RET
      68.  00:8165                      fin_sub_preparapantalla:
      69.  00:8165                      	
      70.  00:8165                      
      71.  00:8165                      ;;=====================================================
      72.  00:8165                      ;;PINTA_PANTALLA_COMPLETA
      73.  00:8165                      ;;=====================================================	
      74.  00:8165                      ; función: pinta el escenario, las 3 partes
      75.  00:8165                      ; entrada: -
      76.  00:8165                      ; salida: -
      77.  00:8165                      ; toca: si no son todos los regristros, casi todos
      78.  00:8165                      pinta_pantalla_completa:
      79.  00:8165  CD 6C 81            	CALL 	pinta_parte_superior_pantalla
      80.  00:8168                      	
      81.  00:8168  CD A3 81            	CALL 	pinta_parte_inferior_pantalla	
      82.  00:816B                      fin_pinta_pantalla_completa:
      83.  00:816B  C9                  	RET
      84.  00:816C                      
      85.  00:816C                      
      86.  00:816C                      ;;=====================================================
      87.  00:816C                      ;;PINTA_PARTE_SUPERIOR_PANTALLA
      88.  00:816C                      ;;=====================================================	
      89.  00:816C                      ; función: pinta el escenario, las 2 partes superiores y actualiza puertas
      90.  00:816C                      ; entrada: -
      91.  00:816C                      ; salida: -
      92.  00:816C                      ; toca: si no son todos los regristros, casi todos
      93.  00:816C                      pinta_parte_superior_pantalla:
      94.  00:816C                      
      95.  00:816C                      ;************** preguntar cómo parametrizar esto **********************************************
      96.  00:816C                      
      97.  00:816C                      	;cangando banco 1
      98.  00:816C                      	;cargamos los patrones
      99.  00:816C  21 6A 8D            	LD		HL, tiles_patrones_pantalla11
     100.  00:816F  11 00 00            	LD		DE, CHRTBL
     101.  00:8172  CD C7 85            	CALL	depack_VRAM
     102.  00:8175                      	;cargamos mapa de pantalla
     103.  00:8175  21 A5 8D            	LD		HL, tiles_mapa_pantalla11
     104.  00:8178  11 00 18            	LD		DE, TILMAP
     105.  00:817B  CD C7 85            	CALL	depack_VRAM
     106.  00:817E                      	;cargamos los colores de los patrones
     107.  00:817E  21 8D 8D            	LD		HL, tiles_color_pantalla11
     108.  00:8181  11 00 20            	LD		DE, CLRTBL
     109.  00:8184  CD C7 85            	CALL	depack_VRAM
     110.  00:8187                      	
     111.  00:8187                      	;cangando banco 2
     112.  00:8187                      	;cargamos los patrones
     113.  00:8187  21 6A 8D            	LD		HL, tiles_patrones_pantalla12
     114.  00:818A  11 00 08            	LD		DE, CHRTBL + #0800
     115.  00:818D  CD C7 85            	CALL	depack_VRAM	
     116.  00:8190                      	;cargamos mapa de pantalla
     117.  00:8190  21 BF 8D            	LD		HL, tiles_mapa_pantalla12
     118.  00:8193  11 00 19            	LD		DE, TILMAP + #0100
     119.  00:8196  CD C7 85            	CALL	depack_VRAM
     120.  00:8199                      	;cargamos los colores de los patrones
     121.  00:8199  21 8D 8D            	LD		HL, tiles_color_pantalla12
     122.  00:819C  11 00 28            	LD		DE, CLRTBL + #0800
     123.  00:819F                      	;JP		depack_VRAM
     124.  00:819F  CD C7 85            	CALL	depack_VRAM
     125.  00:81A2                      fin_pinta_parte_superior_pantalla:
     126.  00:81A2  C9                  	RET
     127.  00:81A3                      
     128.  00:81A3                      
     129.  00:81A3                      ;;=====================================================
     130.  00:81A3                      ;;PINTA_PARTE_INFERIOR_PANTALLA
     131.  00:81A3                      ;;=====================================================	
     132.  00:81A3                      ; función: pinta la parte inferior del escenario que es común
     133.  00:81A3                      ; entrada: -
     134.  00:81A3                      ; salida: -
     135.  00:81A3                      ; toca: si no son todos los regristros, casi todos
     136.  00:81A3                      pinta_parte_inferior_pantalla:
     137.  00:81A3                      	;cangando banco 3
     138.  00:81A3                      	;cargamos los patrones
     139.  00:81A3  21 E9 8D            	LD		HL,tiles_patrones_pantalla3
     140.  00:81A6  11 00 10            	LD		DE,CHRTBL + #1000
     141.  00:81A9  CD C7 85            	CALL	depack_VRAM	
     142.  00:81AC                      	;cargamos mapa de pantalla
     143.  00:81AC  21 64 8F            	LD		HL,tiles_mapa_pantalla3
     144.  00:81AF  11 00 1A            	LD		DE,TILMAP + #0200
     145.  00:81B2  CD C7 85            	CALL	depack_VRAM
     146.  00:81B5                      	;cargamos los colores de los patrones
     147.  00:81B5  21 2F 8F            	LD		HL,tiles_color_pantalla3
     148.  00:81B8  11 00 30            	LD		DE,CLRTBL + #1000
     149.  00:81BB  C3 C7 85            	JP		depack_VRAM
     150.  00:81BE                      	;~ CALL	depack_VRAM
     151.  00:81BE                      fin_pinta_parte_inferior_pantalla:
     152.  00:81BE                      	;~ RET
     153.  00:81BE                      
     154.  00:81BE                      
     155.  00:81BE                      
     156.  00:81BE                      ;;=====================================================
     157.  00:81BE                      ;;PINTA_VIDAS
     158.  00:81BE                      ;;=====================================================	
     159.  00:81BE                      ; función: 	actualiza el mapa de tiles para que en el próximo refresco se pinten y actualiza_vidas
     160.  00:81BE                      ; entrada: 	array_aux_vidas
     161.  00:81BE                      ; salida: 	actualiza_vidas_sn
     162.  00:81BE                      ; toca:		AF
     163.  00:81BE                      pinta_vidas:
     164.  00:81BE  D9                  	EXX
     165.  00:81BF                      	
     166.  00:81BF  21 F8 8B            	LD		HL, array_aux_vidas
     167.  00:81C2  11 48 1A            	LD		DE, TILMAP + POSVIDAS 	;inicio posición en el mapa de tiles de las vidas
     168.  00:81C5  01 08 00            	LD		BC, NMAXVIDREL			;hay 8 posiciones para vidas/reliquias o espacios en negro si no tiene 8 vidas/reliquias
     169.  00:81C8  CD 5C 00            	CALL	LDIRVM
     170.  00:81CB                      	
     171.  00:81CB                      	;una vez quer está pintada ya no se actualizará a menos que perdamos/ganemos una vida
     172.  00:81CB  AF                  	XOR		 A
     173.  00:81CC  32 00 8C            	LD		(actualiza_vidas_sn),A
     174.  00:81CF                      
     175.  00:81CF  D9                  	EXX
     176.  00:81D0                      fin_pinta_vidas:
     177.  00:81D0  C9                  	RET
     178.  00:81D1                      	
     179.  00:81D1                      	
     180.  00:81D1                      
     181.  00:81D1                      ;;=====================================================
     182.  00:81D1                      ;;PINTA_RELIQUIAS
     183.  00:81D1                      ;;=====================================================	
     184.  00:81D1                      ; función: 	actualiza el mapa de tiles para que en el próximo refresco se pinten y actualiza_reliquias
     185.  00:81D1                      ; entrada: 	array_aux_reliquias
     186.  00:81D1                      ; salida: 	actualiza_reliquias_sn
     187.  00:81D1                      ; toca:		AF
     188.  00:81D1                      pinta_reliquias:
     189.  00:81D1  D9                  	EXX
     190.  00:81D2                      	
     191.  00:81D2  21 01 8C            	LD		HL, array_aux_reliquias
     192.  00:81D5  11 C8 1A            	LD		DE, TILMAP + POSRELIQ 	;inicio posición en el mapa de tiles de las vidas
     193.  00:81D8  01 08 00            	LD		BC, NMAXVIDREL			;hay 8 posiciones para vidas/reliquias o espacios en negro si no tiene 8 vidas/reliquias
     194.  00:81DB  CD 5C 00            	CALL	LDIRVM
     195.  00:81DE                      
     196.  00:81DE  D9                  	EXX
     197.  00:81DF                      fin_pinta_reliquias:
     198.  00:81DF  C9                  	RET
     199.  00:81E0                      	
     200.  00:81E0                      
     201.  00:81E0                      
     202.  00:81E0                      	
     203.  00:81E0                      ;;=====================================================
     204.  00:81E0                      ;;PINTA_NIVEL
     205.  00:81E0                      ;;=====================================================	
     206.  00:81E0                      ; función: 	actualiza el nivel en la parte de puntuación
     207.  00:81E0                      ; entrada: 	prota_nivel
     208.  00:81E0                      ; salida: 	-
     209.  00:81E0                      ; toca:		HL,DE,BC
     210.  00:81E0                      pinta_nivel:	
     211.  00:81E0                      	;forma más avanzada sin llamada a la bios
     212.  00:81E0  01 B4 1A            	LD		BC,TILMAP + POSNIVEL ;posición en el mapa de tiles del tile de nivel
     213.  00:81E3  3A A7 86            	LD		 A, (prota_nivel)	;seleccionando la pos del banco de tiles a poner en el mapa
     214.  00:81E6  C6 30               	ADD		'0'	
     215.  00:81E8  57                  	LD		 D, A
     216.  00:81E9                      	
     217.  00:81E9  CD ED 81            	CALL	pinta_tile_suelto	;nota ... un call+ret se debe poder sustiruir por un jp
     218.  00:81EC                      fin_pinta_nivel:
     219.  00:81EC  C9                  	RET
     220.  00:81ED                      
     221.  00:81ED                      
     222.  00:81ED                      
     223.  00:81ED                      ;;=====================================================
     224.  00:81ED                      ;;PINTA_TILE_SUELTO
     225.  00:81ED                      ;;=====================================================	
     226.  00:81ED                      ; función: 	pinta al tile que digamos en D, en la posición BC
     227.  00:81ED                      ; entrada: 	BC (posición a pintar en el mapa),D (qué se va a pintar el esa posición)
     228.  00:81ED                      ; salida: 	-
     229.  00:81ED                      ; toca:		-
     230.  00:81ED                      pinta_tile_suelto:
     231.  00:81ED  DB 99               	IN		 A,(REGEST)		;leer registro de estado (recomendado)
     232.  00:81EF  79                  	LD		 A,C			;primero byte bajo	
     233.  00:81F0  D3 99               	OUT		(REGEST),A
     234.  00:81F2  78                  	LD		 A,B			;después byte alto  ********************** preguntar a Fernando cómo que byte bajo es B
     235.  00:81F3  F6 40               	OR		1000000b		;+64
     236.  00:81F5  D3 99               	OUT		(REGEST),A
     237.  00:81F7                      	
     238.  00:81F7  7A                  	LD		A,D
     239.  00:81F8  D3 98               	OUT		(REGESCVDP),A	;escribe A en VRAM en la posición indicada por los dos OUT anteriores
     240.  00:81FA                      fin_pinta_tile_suelto:
     241.  00:81FA  C9                  	RET
     242.  00:81FB                      
     243.  00:81FB                      
     244.  00:81FB                      
     245.  00:81FB                      
     246.  00:81FB                      
     247.  00:81FB                      ;;=====================================================
     248.  00:81FB                      ;;MIRA_PINTA ENERGIA
     249.  00:81FB                      ;;=====================================================	
     250.  00:81FB                      ; función: 	actualiza el nivel de energia en la parte de puntuación
     251.  00:81FB                      ; nota:		el cuadrado más bajo de ejergía siempre estará pintado... se obviará
     252.  00:81FB                      ; entrada: 	prota.energia, array_aux_energia
     253.  00:81FB                      ; salida: 	-
     254.  00:81FB                      ; toca:		ninguno porque usa EXX
     255.  00:81FB                      
     256.  00:81FB                      ; nota importante... lo mismo interesa hacer esto con un array para comparar y un bucle
     257.  00:81FB                      
     258.  00:81FB                      
     259.  00:81FB                      mira_pinta_energia:
     260.  00:81FB  D9                  	EXX							;por si acaso guardo el contenido de HL (si veo que no es necesario guardarlo lo quito) uso esto en vez de push por el nº ciclos
     261.  00:81FC                      	
     262.  00:81FC  3A AC 86            	LD		 A,(prota_energia) 	;para las comparaciones A variable (actual) y B fijo (limites)
     263.  00:81FF                      
     264.  00:81FF  0E 00               	LD		 C,TILENEGRO		;para agilizar asignaciones en vez de un valor cte uso otro registro
     265.  00:8201                      pinta_ener:
     266.  00:8201                      pinta_ener_tile_8:
     267.  00:8201  21 11 8C            	LD		HL,ultimo_pos_array_aux_energia	;coloco puntero en array e iré decrementando
     268.  00:8204  06 D9               	LD		 B,TILEENERG8
     269.  00:8206  B8                  	CP		 B
     270.  00:8207  38 04               	JR		C,pinta_ener_tile_8_negro
     271.  00:8209  36 0E               	LD		(HL),TILEMAPVERD
     272.  00:820B  18 01               	JR		pinta_ener_tile_7
     273.  00:820D                      pinta_ener_tile_8_negro:
     274.  00:820D  71                  	LD		(HL),C
     275.  00:820E                      
     276.  00:820E                      pinta_ener_tile_7:
     277.  00:820E  2B                  	DEC		HL
     278.  00:820F  06 BA               	LD		 B,TILEENERG7
     279.  00:8211  B8                  	CP		 B
     280.  00:8212  38 04               	JR		C,pinta_ener_tile_7_negro
     281.  00:8214  36 0E               	LD		(HL),TILEMAPVERD
     282.  00:8216  18 01               	JR		pinta_ener_tile_6
     283.  00:8218                      pinta_ener_tile_7_negro:
     284.  00:8218  71                  	LD		(HL),C
     285.  00:8219                      
     286.  00:8219                      pinta_ener_tile_6:
     287.  00:8219  2B                  	DEC		HL
     288.  00:821A  06 9B               	LD		 B,TILEENERG6
     289.  00:821C  B8                  	CP		 B
     290.  00:821D  38 04               	JR		C,pinta_ener_tile_6_negro
     291.  00:821F  36 0E               	LD		(HL),14
     292.  00:8221  18 01               	JR		pinta_ener_tile_5
     293.  00:8223                      pinta_ener_tile_6_negro:
     294.  00:8223  71                  	LD		(HL),C
     295.  00:8224                      
     296.  00:8224                      pinta_ener_tile_5:
     297.  00:8224  2B                  	DEC		HL
     298.  00:8225  06 7C               	LD		 B,TILEENERG5
     299.  00:8227  B8                  	CP		 B
     300.  00:8228  38 04               	JR		C,pinta_ener_tile_5_negro
     301.  00:822A  36 0E               	LD		(HL),TILEMAPVERD
     302.  00:822C  18 01               	JR		pinta_ener_tile_4
     303.  00:822E                      pinta_ener_tile_5_negro:
     304.  00:822E  71                  	LD		(HL),C
     305.  00:822F                      
     306.  00:822F                      pinta_ener_tile_4:
     307.  00:822F  2B                  	DEC		HL
     308.  00:8230  06 5D               	LD		 B,TILEENERG4
     309.  00:8232  B8                  	CP		 B
     310.  00:8233  38 04               	JR		C,pinta_ener_tile_4_negro
     311.  00:8235  36 0F               	LD		(HL),TILEMAPAMAR
     312.  00:8237  18 01               	JR		pinta_ener_tile_3
     313.  00:8239                      pinta_ener_tile_4_negro:
     314.  00:8239  71                  	LD		(HL),C
     315.  00:823A                      	
     316.  00:823A                      pinta_ener_tile_3:
     317.  00:823A  2B                  	DEC		HL
     318.  00:823B  06 3E               	LD		 B,TILEENERG3
     319.  00:823D  B8                  	CP		 B
     320.  00:823E  38 04               	JR		C,pinta_ener_tile_3_negro
     321.  00:8240  36 0F               	LD		(HL),TILEMAPAMAR
     322.  00:8242  18 01               	JR		pinta_ener_tile_2
     323.  00:8244                      pinta_ener_tile_3_negro:
     324.  00:8244  71                  	LD		(HL),C
     325.  00:8245                      
     326.  00:8245                      pinta_ener_tile_2:
     327.  00:8245  2B                  	DEC		HL
     328.  00:8246  06 1F               	LD		 B,TILEENERG2
     329.  00:8248  B8                  	CP		 B
     330.  00:8249  38 04               	JR		C,pinta_ener_tile_2_negro
     331.  00:824B  36 10               	LD		(HL),TILEMAPROJO
     332.  00:824D  18 01               	JR		fin_mira_pinta_energia		;siempre estará pintado el cuadro mínimo
     333.  00:824F                      pinta_ener_tile_2_negro:
     334.  00:824F  71                  	LD		(HL),C
     335.  00:8250                      
     336.  00:8250                      fin_mira_pinta_energia:
     337.  00:8250  D9                  	EXX
     338.  00:8251  C9                  	RET
     339.  00:8252                      
     340.  00:8252                      
     341.  00:8252                      ;;=====================================================
     342.  00:8252                      ;;PINTA_ENERGIA
     343.  00:8252                      ;;=====================================================	
     344.  00:8252                      ; función: 	actualiza el mapa de tiles para que en el próximo refresco se pinte la barra de energia actual
     345.  00:8252                      ; entrada: 	array_aux_energia
     346.  00:8252                      ; toca:		AF
     347.  00:8252                      pinta_energia:
     348.  00:8252  D9                  	EXX
     349.  00:8253                      	
     350.  00:8253  21 0A 8C            	LD		HL, array_aux_energia
     351.  00:8256  11 88 1A            	LD		DE, TILMAP + POSENERG 	;inicio posición en el mapa de tiles de las vidas
     352.  00:8259  01 08 00            	LD		BC, NMAXVIDREL			;hay 8 posiciones para vidas/reliquias o espacios en negro si no tiene 8 vidas/reliquias
     353.  00:825C  CD 5C 00            	CALL	LDIRVM
     354.  00:825F                      		
     355.  00:825F  D9                  	EXX
     356.  00:8260                      fin_pinta_energia:
     357.  00:8260  C9                  	RET
     358.  00:8261                      
     359.  00:8261                      
     360.  00:8261                      
     361.  00:8261                      ;;=====================================================
     362.  00:8261                      ;;BORRA_MAPA
     363.  00:8261                      ;;=====================================================	
     364.  00:8261                      ; función: 	pone todas las habitaciones del mapa a negro (los tiles del mapa los rellena con un array a 0 - caracter en negro)
     365.  00:8261                      ; entrada: 	array_aux_mapa_limpiar
     366.  00:8261                      ; salida: 	-
     367.  00:8261                      ; toca:		AF
     368.  00:8261                      borra_mapa:
     369.  00:8261  D9                  	EXX
     370.  00:8262                      	
     371.  00:8262  21 12 8C            	LD		HL,array_aux_mapa_limpiar
     372.  00:8265  11 F8 1A            	LD		DE,TILMAP + POSMAPLIN1 	;inicio posición en el mapa de tiles de la primera fila del mapa
     373.  00:8268  01 07 00            	LD		BC,NHABNIVEL			;cada nivel son 7 filas con 7 habitaciones "posibles"
     374.  00:826B  CD 5C 00            	CALL	LDIRVM
     375.  00:826E                      	
     376.  00:826E  21 12 8C            	LD		HL,array_aux_mapa_limpiar
     377.  00:8271  11 D8 1A            	LD		DE,TILMAP + POSMAPLIN2
     378.  00:8274  01 07 00            	LD		BC,NHABNIVEL
     379.  00:8277  CD 5C 00            	CALL	LDIRVM
     380.  00:827A                      
     381.  00:827A  21 12 8C            	LD		HL,array_aux_mapa_limpiar
     382.  00:827D  11 B8 1A            	LD		DE,TILMAP + POSMAPLIN3
     383.  00:8280  01 07 00            	LD		BC,NHABNIVEL
     384.  00:8283  CD 5C 00            	CALL	LDIRVM
     385.  00:8286                      
     386.  00:8286  21 12 8C            	LD		HL,array_aux_mapa_limpiar	
     387.  00:8289  11 98 1A            	LD		DE,TILMAP + POSMAPLIN4
     388.  00:828C  01 07 00            	LD		BC,NHABNIVEL
     389.  00:828F  CD 5C 00            	CALL	LDIRVM
     390.  00:8292                      
     391.  00:8292  21 12 8C            	LD		HL,array_aux_mapa_limpiar	
     392.  00:8295  11 78 1A            	LD		DE,TILMAP + POSMAPLIN5
     393.  00:8298  01 07 00            	LD		BC,NHABNIVEL
     394.  00:829B  CD 5C 00            	CALL	LDIRVM
     395.  00:829E                      
     396.  00:829E  21 12 8C            	LD		HL,array_aux_mapa_limpiar	
     397.  00:82A1  11 58 1A            	LD		DE,TILMAP + POSMAPLIN6
     398.  00:82A4  01 07 00            	LD		BC,NHABNIVEL
     399.  00:82A7  CD 5C 00            	CALL	LDIRVM
     400.  00:82AA                      
     401.  00:82AA  21 12 8C            	LD		HL,array_aux_mapa_limpiar	
     402.  00:82AD  11 38 1A            	LD		DE,TILMAP + POSMAPLIN7
     403.  00:82B0  01 07 00            	LD		BC,NHABNIVEL
     404.  00:82B3  CD 5C 00            	CALL	LDIRVM
     405.  00:82B6                      	
     406.  00:82B6  D9                  	EXX
     407.  00:82B7                      fin_borra_mapa:
     408.  00:82B7  C9                  	RET
     409.  00:82B8                      
     410.  00:82B8                      
     411.  00:82B8                      
     412.  00:82B8                      
     413.  00:82B8                      
     414.  00:82B8                      
     415.  00:82B8                      
     416.  00:82B8                      
     417.  00:82B8                      
     418.  00:82B8                      ;=====================================================
     419.  00:82B8                      ;;PINTA_ARRAY
     420.  00:82B8                      ;;=====================================================	
     421.  00:82B8                      ;;;funcion:  se le pasa un array con posiciones de tiles y coordenadas x e y y los pinta en screen 2
     422.  00:82B8                      ;;entrada:	wordaux1 (pos inicio sc2 donde pintar) y wordaux2 (puntero al array a pintar), BC (posición en tilemap) , D filas y E columnas
     423.  00:82B8                      ;;salida:	-
     424.  00:82B8                      ;;importante: necesita de una variable wordaux1 tipo WD (wordaux1: 	DW	0)
     425.  00:82B8                      ;; ejemplo llamada:
     426.  00:82B8                      	;~ LD		HL,array_tiles					;guardo puntero al array a pintar (como psar por referencia)
     427.  00:82B8                      	;~ LD		(wordaux2),HL					;en la variable wordaux2
     428.  00:82B8                      	;~ LD		HL,SC2MAP + 256 + 32			;calcula posición en tilemap
     429.  00:82B8                      	;~ LD		(wordaux1),HL					;guarda valor pos tilemap en wordaux1
     430.  00:82B8                      	;~ LD		B,H								;coloca posición tilemap BC
     431.  00:82B8                      	;~ LD		C,L
     432.  00:82B8                      	;~ LD		D,2								;nº de filas
     433.  00:82B8                      	;~ LD		E,3								;nº de columnas
     434.  00:82B8                      	;~ CALL	pinta_array
     435.  00:82B8                      
     436.  00:82B8                      pinta_array:
     437.  00:82B8  F5                  	PUSH	AF
     438.  00:82B9                      	
     439.  00:82B9                      	;contamos con que la posición "global" en el tilemap está ya en BC
     440.  00:82B9                      	;y el puntero al array a pintar en wordaux2 y la posición en tilemap sc2 en wordaux1
     441.  00:82B9                      	;inicializa
     442.  00:82B9  DB 99               	IN		 A,(REGEST)		;leer registro de estado (recomendado)
     443.  00:82BB                      	
     444.  00:82BB                      	;coloca puntero para pintar tile según BC
     445.  00:82BB  79                  	LD		 A,C			;primero byte bajo	
     446.  00:82BC  D3 99               	OUT		(REGEST),A
     447.  00:82BE  78                  	LD		 A,B			;después byte alto  ********************** preguntar a Fernando cómo que byte bajo es B
     448.  00:82BF  F6 40               	OR		1000000b		;+64
     449.  00:82C1  D3 99               	OUT		(REGEST),A
     450.  00:82C3                      
     451.  00:82C3                      	
     452.  00:82C3  2A ED 82            	LD		HL,(wordaux2)	;HL es lo que se pintará y le he pasado el puntero del array tilemap a pintar
     453.  00:82C6                      .pa_pinta_fila:
     454.  00:82C6  43                  	LD		 B,E
     455.  00:82C7                      .pa_pinta_columnas: 		;finta la fila (pintando las columnas)
     456.  00:82C7  7E                  	LD		 A,(HL)
     457.  00:82C8  D3 98               	OUT		(REGESCVDP),A	;escribe A en VRAM en la posición indicada por los dos OUT anteriores
     458.  00:82CA  23                  	INC		HL
     459.  00:82CB  10 FA               	DJNZ	.pa_pinta_columnas
     460.  00:82CD                      	
     461.  00:82CD                      	;no es una solución elegante lo de repetir código pero queda claro
     462.  00:82CD                      	;por si hay otra fila
     463.  00:82CD  E5                  	PUSH	HL
     464.  00:82CE  2A EB 82            	LD		HL,(wordaux1)
     465.  00:82D1  01 20 00            	LD		BC,32
     466.  00:82D4  09                  	ADD		HL,BC
     467.  00:82D5  22 EB 82            	LD		(wordaux1),HL
     468.  00:82D8  44                  	LD		B,H
     469.  00:82D9  4D                  	LD		C,L
     470.  00:82DA  E1                  	POP		HL
     471.  00:82DB                      	
     472.  00:82DB  79                  	LD		 A,C			;primero byte bajo	
     473.  00:82DC  D3 99               	OUT		(REGEST),A
     474.  00:82DE  78                  	LD		 A,B			;después byte alto 
     475.  00:82DF  F6 40               	OR		1000000b		;+64
     476.  00:82E1  D3 99               	OUT		(REGEST),A
     477.  00:82E3                      	
     478.  00:82E3                      	;si hay otra fila repite
     479.  00:82E3  15                  	DEC		 D
     480.  00:82E4  7A                  	LD		 A,D		;¿hay otra fila?
     481.  00:82E5  B7                  	OR		 A
     482.  00:82E6  C2 C6 82            	JP		NZ,.pa_pinta_fila
     483.  00:82E9                      	
     484.  00:82E9  F1                  	POP		AF
     485.  00:82EA                      	
     486.  00:82EA                      fin_pinta_array:
     487.  00:82EA  C9                  	RET
     488.  00:82EB                      ;;variables asocidas a la función (no sé si dejarlo aquí y encapsularlo todo o hacerla reutilizable)
     489.  00:82EB                      ;; por de pronto la dejo aquí
     490.  00:82EB  00 00               wordaux1:		DW	0	;almacena la posición en el tilemap 0 al 675
     491.  00:82ED  00 00               wordaux2:		DW	0	;almacena puntero a array de tiles (posiciones en realidad) a pintar (posiciones repetidas en los 3 bancos)
     492.  00:82EF                      
     493.  00:82EF                      
     494.  00:82EF                      
     495.  00:82EF                      
     496.  00:82EF                      
     497.  00:82EF                      ;;=====================================================
     498.  00:82EF                      ;;PINTA_PUERTAS
     499.  00:82EF                      ;;=====================================================	
     500.  00:82EF                      ; función: 	examina A y mira si tiene que pintar puertas de los lados, arriba o abrajo o las escaleras (o no)
     501.  00:82EF                      ; entrada: 	habitacion_actual 1 escalera 1 puerta arriba 1 pu der 1 pu aba 1 pu izq (si es 0 pinta pared)
     502.  00:82EF                      ; salida: 	-
     503.  00:82EF                      ; toca:		- uso EXX
     504.  00:82EF                      pinta_puertas:
     505.  00:82EF  D9                  	EXX
     506.  00:82F0                      	
     507.  00:82F0  3A CD 88            	LD		 A, (habitacion_actual)		;se mete en A porque la función pide A y para no buscar el valor 4 veces
     508.  00:82F3                      
     509.  00:82F3                      ;	BIT		 4, A
     510.  00:82F3                      ;	CALL	nz, pinta_escalera
     511.  00:82F3                      
     512.  00:82F3  CB 5F               	BIT		 3, A
     513.  00:82F5  C4 22 83            	CALL	nz, pinta_puerta_arr
     514.  00:82F8                      
     515.  00:82F8  CB 57               	BIT		 2, A
     516.  00:82FA  C4 37 83            	CALL	nz, pinta_puerta_der
     517.  00:82FD                      
     518.  00:82FD  CB 4F               	BIT		 1, A
     519.  00:82FF  C4 0D 83            	CALL	nz, pinta_puerta_aba
     520.  00:8302                      	
     521.  00:8302  CB 47               	BIT		 0, A
     522.  00:8304  C4 4C 83            	CALL	nz, pinta_puerta_izq
     523.  00:8307                      	
     524.  00:8307  AF                  	XOR		 A
     525.  00:8308  32 19 8C            	LD		(actualiza_puertas_sn), A ;(1 actualiza y 0 no actualiza puertas) se pone a 0 para que no actualice todo el tiempo (ya se ha actualizado)... me hubiera gustado poner cte NO pero es más rápido así
     526.  00:830B                      
     527.  00:830B  D9                  	EXX
     528.  00:830C                      fin_pinta_puertas:
     529.  00:830C  C9                  	RET
     530.  00:830D                      
     531.  00:830D                      
     532.  00:830D                      
     533.  00:830D                      
     534.  00:830D                      ;;=====================================================
     535.  00:830D                      ;;PINTA_PUERTA_ABA
     536.  00:830D                      ;;=====================================================	
     537.  00:830D                      ; función: 	pinta la puerta de abajo
     538.  00:830D                      ; entrada: 	array_puerta_abajo, wordaux2, wordaux1
     539.  00:830D                      ; salida: 	-
     540.  00:830D                      ; toca:		HL,BC, DE
     541.  00:830D                      pinta_puerta_aba:
     542.  00:830D  21 43 8C            	LD		HL,array_puerta_abajo			;guardo puntero al array a pintar (como psar por referencia)
     543.  00:8310  22 ED 82            	LD		(wordaux2),HL					;en la variable wordaux2
     544.  00:8313  21 EE 19            	LD		HL,TILMAP + POSPUERABAJ			;calcula posición en tilemap
     545.  00:8316  22 EB 82            	LD		(wordaux1),HL					;guarda valor pos tilemap en wordaux1
     546.  00:8319  44                  	LD		B,H								;coloca posición tilemap BC
     547.  00:831A  4D                  	LD		C,L
     548.  00:831B  16 01               	LD		D,1								;nº de filas
     549.  00:831D  1E 04               	LD		E,4								;nº de columnas
     550.  00:831F  C3 B8 82            	JP		pinta_array
     551.  00:8322                      	;~ CALL	pinta_array
     552.  00:8322                      fin_pinta_puerta_aba:
     553.  00:8322                      	;~ RET
     554.  00:8322                      
     555.  00:8322                      ;;=====================================================
     556.  00:8322                      ;;PINTA_PUERTA_ARR
     557.  00:8322                      ;;=====================================================	
     558.  00:8322                      ; función: 	pinta la puerta de arriba
     559.  00:8322                      ; entrada: 	array_puerta_arriba, wordaux2, wordaux1
     560.  00:8322                      ; salida: 	-
     561.  00:8322                      ; toca:		HL,BC, DE
     562.  00:8322                      pinta_puerta_arr:
     563.  00:8322  21 1A 8C            	LD		HL,array_puerta_arriba			;guardo puntero al array a pintar (como psar por referencia)
     564.  00:8325  22 ED 82            	LD		(wordaux2),HL					;en la variable wordaux2
     565.  00:8328  21 8E 18            	LD		HL,TILMAP + POSPUERARRI			;calcula posición en tilemap
     566.  00:832B  22 EB 82            	LD		(wordaux1),HL					;guarda valor pos tilemap en wordaux1
     567.  00:832E  44                  	LD		B,H								;coloca posición tilemap BC
     568.  00:832F  4D                  	LD		C,L
     569.  00:8330  16 05               	LD		D,5								;nº de filas
     570.  00:8332  1E 04               	LD		E,4								;nº de columnas
     571.  00:8334  C3 B8 82            	JP		pinta_array
     572.  00:8337                      	;~ CALL	pinta_array
     573.  00:8337                      fin_pinta_puerta_arr:
     574.  00:8337                      	;~ RET
     575.  00:8337                      
     576.  00:8337                      ;;=====================================================
     577.  00:8337                      ;;PINTA_PUERTA_DER
     578.  00:8337                      ;;=====================================================	
     579.  00:8337                      ; función: 	pinta la puerta de la derecha
     580.  00:8337                      ; entrada: 	array_puerta_derecha, wordaux2, wordaux1
     581.  00:8337                      ; salida: 	-
     582.  00:8337                      ; toca:		HL,BC, DE
     583.  00:8337                      pinta_puerta_der:
     584.  00:8337  21 2E 8C            	LD		HL,array_puerta_derecha			;guardo puntero al array a pintar (como psar por referencia)
     585.  00:833A  22 ED 82            	LD		(wordaux2),HL					;en la variable wordaux2
     586.  00:833D  21 FC 18            	LD		HL,TILMAP + POSPUERDERE			;calcula posición en tilemap
     587.  00:8340  22 EB 82            	LD		(wordaux1),HL					;guarda valor pos tilemap en wordaux1
     588.  00:8343  44                  	LD		B,H								;coloca posición tilemap BC
     589.  00:8344  4D                  	LD		C,L
     590.  00:8345  16 07               	LD		D,7								;nº de filas
     591.  00:8347  1E 03               	LD		E,3								;nº de columnas
     592.  00:8349  C3 B8 82            	JP		pinta_array
     593.  00:834C                      	;~ CALL	pinta_array
     594.  00:834C                      fin_pinta_puerta_der:
     595.  00:834C                      	;~ RET
     596.  00:834C                      	
     597.  00:834C                      ;;=====================================================
     598.  00:834C                      ;;PINTA_PUERTA_IZQ
     599.  00:834C                      ;;=====================================================	
     600.  00:834C                      ; función: 	pinta la puerta de la izquierda
     601.  00:834C                      ; entrada: 	array_puerta_izquierda, wordaux2, wordaux1
     602.  00:834C                      ; salida: 	-
     603.  00:834C                      ; toca:		HL,BC, DE
     604.  00:834C                      pinta_puerta_izq:
     605.  00:834C  21 47 8C            	LD		HL,array_puerta_izquierda		;guardo puntero al array a pintar (como psar por referencia)
     606.  00:834F  22 ED 82            	LD		(wordaux2),HL					;en la variable wordaux2
     607.  00:8352  21 E1 18            	LD		HL,TILMAP + POSPUERIZQU			;calcula posición en tilemap
     608.  00:8355  22 EB 82            	LD		(wordaux1),HL					;guarda valor pos tilemap en wordaux1
     609.  00:8358  44                  	LD		B,H								;coloca posición tilemap BC
     610.  00:8359  4D                  	LD		C,L
     611.  00:835A  16 07               	LD		D,7								;nº de filas
     612.  00:835C  1E 03               	LD		E,3								;nº de columnas
     613.  00:835E  C3 B8 82            	JP		pinta_array
     614.  00:8361                      	;~ CALL	pinta_array
     615.  00:8361                      fin_pinta_puerta_izq:
     616.  00:8361                      	;~ RET
     617.  00:8361                      
     618.  00:8361                      
     619.  00:8361                      
     620.  00:8361                      
     621.  00:8361                      
     622.  00:8361                      ;;=====================================================
     623.  00:8361                      ;;POSICIONA_EN_MAPA
     624.  00:8361                      ;;=====================================================	
     625.  00:8361                      ; función: 	en el mapa de marcadores de la derecha/abajo marca un cuadro en gris o con un muñeco
     626.  00:8361                      ;			según el valor de prota.posición pinta entrá un muñeco y por donde vaya pasando el prota
     627.  00:8361                      ;			quedará en gris
     628.  00:8361                      ; entrada: 	A=0 gris 1 - tile 0, A=1 muñeco - tile 19, prota.pos_mapy,prota.pos_mapx)
     629.  00:8361                      ; salida: 	-
     630.  00:8361                      ; toca:		todos
     631.  00:8361                      posiciona_en_mapa:
     632.  00:8361  F5                  	PUSH	AF		;almacenamos el tipo a pintar para cuando terminemos de calcular la coordenada
     633.  00:8362                      	
     634.  00:8362                      	;#0238 es la posición en mapa de tiles de la esquina superior izquierda del mapa (569 en decimal)
     635.  00:8362  21 38 1A            	LD		HL, TILMAP + POSMAPA;pos inicial
     636.  00:8365                      	
     637.  00:8365                      	;ahora se le calcula la fila a pintar ya que va de abajo a arriba y no como en el mapa + columna
     638.  00:8365                      .sumar_fila:
     639.  00:8365  3A AB 86            	LD		 A,(prota_pos_mapy)
     640.  00:8368  FE 01               	CP		 1
     641.  00:836A  28 2A               	JR		 Z, .fila_1
     642.  00:836C  3A AB 86            	LD		 A,(prota_pos_mapy)
     643.  00:836F  FE 02               	CP		 2
     644.  00:8371  28 2A               	JR		 Z, .fila_2
     645.  00:8373  3A AB 86            	LD		 A,(prota_pos_mapy)
     646.  00:8376  FE 03               	CP		 3
     647.  00:8378  28 2A               	JR		 Z, .fila_3
     648.  00:837A  3A AB 86            	LD		 A,(prota_pos_mapy)
     649.  00:837D  FE 04               	CP		 4
     650.  00:837F  28 2A               	JR		 Z, .fila_4
     651.  00:8381  3A AB 86            	LD		 A,(prota_pos_mapy)
     652.  00:8384  FE 05               	CP		 5
     653.  00:8386  28 2A               	JR		 Z, .fila_5
     654.  00:8388  3A AB 86            	LD		 A,(prota_pos_mapy)
     655.  00:838B  FE 06               	CP		 6
     656.  00:838D  28 2A               	JR		 Z, .sumar_columna
     657.  00:838F                      	;no consulto la 0 porque si no es ninguna de las anteriores es 0 y por tanto sería un jr fila_0
     658.  00:838F                      	
     659.  00:838F                      .fila_0:
     660.  00:838F  11 C0 00            	LD		DE, 192
     661.  00:8392  19                  	ADD		HL, DE			;nota: se que repito el ADD pero la otra opción es inicializar DE y ya tarda mucho la funicón (es por velicidad)
     662.  00:8393  C3 B9 83            	JP		.sumar_columna
     663.  00:8396                      .fila_1:
     664.  00:8396  11 A0 00            	LD		DE, 160
     665.  00:8399  19                  	ADD		HL, DE
     666.  00:839A  C3 B9 83            	JP		.sumar_columna
     667.  00:839D                      .fila_2:
     668.  00:839D  11 80 00            	LD		DE, 128
     669.  00:83A0  19                  	ADD		HL, DE
     670.  00:83A1  C3 B9 83            	JP		.sumar_columna
     671.  00:83A4                      .fila_3:
     672.  00:83A4  11 60 00            	LD		DE, 96
     673.  00:83A7  19                  	ADD		HL, DE
     674.  00:83A8  C3 B9 83            	JP		.sumar_columna
     675.  00:83AB                      .fila_4:
     676.  00:83AB  11 40 00            	LD		DE, 64
     677.  00:83AE  19                  	ADD		HL, DE
     678.  00:83AF  C3 B9 83            	JP		.sumar_columna
     679.  00:83B2                      .fila_5:
     680.  00:83B2  11 20 00            	LD		DE, 32
     681.  00:83B5  19                  	ADD		HL, DE
     682.  00:83B6  C3 B9 83            	JP		.sumar_columna
     683.  00:83B9                      .fila_6:
     684.  00:83B9                      	;pongo fila_6 por poner ya que si es la fila 6 equiv. a primera fila del mapa y por tanto no suma fila
     685.  00:83B9                      	
     686.  00:83B9                      	
     687.  00:83B9                      .sumar_columna:
     688.  00:83B9  3A AA 86            	LD 		 A, (prota_pos_mapx) ;POS X
     689.  00:83BC  16 00               	LD		 D, 0
     690.  00:83BE  5F                  	LD		 E, A
     691.  00:83BF  19                  	ADD		HL, DE
     692.  00:83C0                      	
     693.  00:83C0                      	;resultado en BC para usar en la función pinta_tile_suelto
     694.  00:83C0  44                  	LD		 B, H
     695.  00:83C1  4D                  	LD		 C, L
     696.  00:83C2                      	
     697.  00:83C2                      	;terminado de fijar la coordenada recuperamos a para ver el tipo
     698.  00:83C2  F1                  	POP		 AF
     699.  00:83C3  B7                  	OR		 A
     700.  00:83C4  CA CC 83            	JP		 Z, pinta_pos_mapa_vacio
     701.  00:83C7  16 13               	LD		 D, TILEMAPPROT
     702.  00:83C9  C3 CE 83            	JP		fin_pinta_pos_mapa
     703.  00:83CC                      pinta_pos_mapa_vacio:
     704.  00:83CC  16 09               	LD		 D, TILEMAPVACI				;********************* se puede hacer mejor o está bien usar push y pop ¿?¿?¿?
     705.  00:83CE                      
     706.  00:83CE                      fin_pinta_pos_mapa:
     707.  00:83CE  C3 ED 81            	JP		pinta_tile_suelto
     708.  00:83D1                      	;~ CALL	pinta_tile_suelto
     709.  00:83D1                      fin_posiciona_en_mapa:
     710.  00:83D1                      	;~ RET
     711.  00:83D1                      
     712.  00:83D1                      
     177   00:83D1                      	
     178   00:83D1                      	include "subr_sprites.asm"
       1.  00:83D1                      
       2.  00:83D1                      ;;=====================================================
       3.  00:83D1                      ;;SUBRUTINAS ENCARGADAS DE MANEJAR LOS SPRITES
       4.  00:83D1                      ;;=====================================================	
       5.  00:83D1                      
       6.  00:83D1                      
       7.  00:83D1                      ;; PREGUNTAR SI A FERNANDO SI ES MEJOR USAR LISTAS O ALGO PARA AHORRAR CÓDIGO
       8.  00:83D1                      
       9.  00:83D1                      
      10.  00:83D1                      ;;=====================================================
      11.  00:83D1                      ;;CARGA_PATRONES_SPRITES_NIVEL1
      12.  00:83D1                      ;;=====================================================	
      13.  00:83D1                      ; función: 	copia los patrones de los sprites que e van a usar en el nivel 1 en vram
      14.  00:83D1                      ; entrada: 	-
      15.  00:83D1                      ; salida: 	-
      16.  00:83D1                      ; toca: 	-
      17.  00:83D1                      carga_patrones_sprites_nivel1:
      18.  00:83D1  F5                  	PUSH	AF					;guardo copia de AF
      19.  00:83D2  D9                  	EXX							;guardo copia de BC,DE y HL
      20.  00:83D3                      	
      21.  00:83D3                      	;sprite punto de mira		(este no será necesario cargarlo en ningún otro nivel del juego, sólo el primero)
      22.  00:83D3  21 AD 86            	LD		HL,sprite_punto_mira_1
      23.  00:83D6  11 00 38            	LD		DE,#3800
      24.  00:83D9  01 20 00            	LD		BC,32				;32 bytes (sprites de 2 x 2)
      25.  00:83DC  CD 5C 00            	CALL	LDIRVM
      26.  00:83DF  21 CD 86            	LD		HL,sprite_punto_mira_2
      27.  00:83E2  11 20 38            	LD		DE,#3820
      28.  00:83E5  01 20 00            	LD		BC,32				;32 bytes (sprites de 2 x 2)
      29.  00:83E8  CD 5C 00            	CALL	LDIRVM
      30.  00:83EB                      	
      31.  00:83EB                      	;sprite sprite_punto_mira_1_mejorado
      32.  00:83EB  21 ED 86            	LD		HL,sprite_punto_mira_1_mejorado
      33.  00:83EE  11 40 38            	LD		DE,#3840
      34.  00:83F1  01 20 00            	LD		BC,32				;32 bytes (sprites de 2 x 2)
      35.  00:83F4  CD 5C 00            	CALL	LDIRVM
      36.  00:83F7  21 0D 87            	LD		HL,sprite_punto_mira_2_mejorado
      37.  00:83FA  11 60 38            	LD		DE,#3860
      38.  00:83FD  01 20 00            	LD		BC,32				;32 bytes (sprites de 2 x 2)
      39.  00:8400  CD 5C 00            	CALL	LDIRVM
      40.  00:8403                      
      41.  00:8403                      	;sprite sprite_reliquia
      42.  00:8403  21 2D 87            	LD		HL,sprite_reliquia
      43.  00:8406  11 80 38            	LD		DE,#3880
      44.  00:8409  01 20 00            	LD		BC,32				;32 bytes (sprites de 2 x 2)
      45.  00:840C  CD 5C 00            	CALL	LDIRVM
      46.  00:840F                      
      47.  00:840F                      	;sprite sprite_vida_extra
      48.  00:840F  21 2D 87            	LD		HL,sprite_reliquia
      49.  00:8412  11 A0 38            	LD		DE,#38A0
      50.  00:8415  01 20 00            	LD		BC,32				;32 bytes (sprites de 2 x 2)
      51.  00:8418  CD 5C 00            	CALL	LDIRVM
      52.  00:841B                      
      53.  00:841B                      	;sprite sprite_planta
      54.  00:841B  21 6D 87            	LD		HL,sprite_planta
      55.  00:841E  11 C0 38            	LD		DE,#38C0
      56.  00:8421  01 20 00            	LD		BC,32				;32 bytes (sprites de 2 x 2)
      57.  00:8424  CD 5C 00            	CALL	LDIRVM
      58.  00:8427                      	
      59.  00:8427                      	;sprite sprite_ballesta_mejorada
      60.  00:8427  21 8D 87            	LD		HL,sprite_ballesta_mejorada
      61.  00:842A  11 E0 38            	LD		DE,#38E0
      62.  00:842D  01 20 00            	LD		BC,32				;32 bytes (sprites de 2 x 2)
      63.  00:8430  CD 5C 00            	CALL	LDIRVM
      64.  00:8433                      
      65.  00:8433                      	;sprite sprite_ciempies
      66.  00:8433  21 AD 87            	LD		HL,sprite_ciempies1
      67.  00:8436  11 00 39            	LD		DE,#3900
      68.  00:8439  01 20 00            	LD		BC,32				;32 bytes (sprites de 2 x 2)
      69.  00:843C  CD 5C 00            	CALL	LDIRVM
      70.  00:843F  21 CD 87            	LD		HL,sprite_ciempies2
      71.  00:8442  11 20 39            	LD		DE,#3920
      72.  00:8445  01 20 00            	LD		BC,32				;32 bytes (sprites de 2 x 2)
      73.  00:8448  CD 5C 00            	CALL	LDIRVM		
      74.  00:844B                      
      75.  00:844B                      	;sprite sprite_arana
      76.  00:844B  21 ED 87            	LD		HL,sprite_arana1
      77.  00:844E  11 40 39            	LD		DE,#3940
      78.  00:8451  01 20 00            	LD		BC,32				;32 bytes (sprites de 2 x 2)
      79.  00:8454  CD 5C 00            	CALL	LDIRVM
      80.  00:8457  21 0D 88            	LD		HL,sprite_arana2
      81.  00:845A  11 60 39            	LD		DE,#3960
      82.  00:845D  01 20 00            	LD		BC,32				;32 bytes (sprites de 2 x 2)
      83.  00:8460  CD 5C 00            	CALL	LDIRVM	
      84.  00:8463                      
      85.  00:8463                      	;sprite sprite_serpiente
      86.  00:8463  21 2D 88            	LD		HL,sprite_serpiente1
      87.  00:8466  11 80 39            	LD		DE,#3980
      88.  00:8469  01 20 00            	LD		BC,32				;32 bytes (sprites de 2 x 2)
      89.  00:846C  CD 5C 00            	CALL	LDIRVM
      90.  00:846F  21 4D 88            	LD		HL,sprite_serpiente2
      91.  00:8472  11 A0 39            	LD		DE,#39A0
      92.  00:8475  01 20 00            	LD		BC,32				;32 bytes (sprites de 2 x 2)
      93.  00:8478  CD 5C 00            	CALL	LDIRVM	
      94.  00:847B                      
      95.  00:847B                      	;sprite sprite_murcielago
      96.  00:847B  21 6D 88            	LD		HL,sprite_murcielago1
      97.  00:847E  11 C0 39            	LD		DE,#39C0
      98.  00:8481  01 20 00            	LD		BC,32				;32 bytes (sprites de 2 x 2)
      99.  00:8484  CD 5C 00            	CALL	LDIRVM
     100.  00:8487  21 8D 88            	LD		HL,sprite_murcielago2
     101.  00:848A  11 E0 39            	LD		DE,#39E0
     102.  00:848D  01 20 00            	LD		BC,32				;32 bytes (sprites de 2 x 2)
     103.  00:8490  CD 5C 00            	CALL	LDIRVM
     104.  00:8493                      	
     105.  00:8493                      	;sprite sprite_explosion
     106.  00:8493  21 AD 88            	LD		HL,sprite_explosion
     107.  00:8496  11 20 3A            	LD		DE,#3A20
     108.  00:8499  01 20 00            	LD		BC,32				;32 bytes (sprites de 2 x 2)
     109.  00:849C  CD 5C 00            	CALL	LDIRVM
     110.  00:849F                      	
     111.  00:849F  D9                  	EXX							;recupero copia de BC,DE y HL
     112.  00:84A0  F1                  	POP		AF					;recupero copia de AF
     113.  00:84A1                      fin_carga_patrones_sprites:
     114.  00:84A1  C9                  	RET
     115.  00:84A2                      
     116.  00:84A2                      
     117.  00:84A2                      ;;=====================================================
     118.  00:84A2                      ;;ACTUALIZA_ARRAY_SPRITES_VRAM
     119.  00:84A2                      ;;=====================================================	
     120.  00:84A2                      ; función: 	copia el array con los valores de los sprites (pos, color, plano) en VRAM
     121.  00:84A2                      ; entrada: 	-
     122.  00:84A2                      ; salida: 	-
     123.  00:84A2                      ; toca: 	todos los registros. Como me interesa la velocidad, si necesito copiar de algo lo hago fuera
     124.  00:84A2                      render_sprites:
     125.  00:84A2                      	;volcando el array con toda la info de los sprites a la zona de atributos de sprites
     126.  00:84A2  21 5C 8C            	LD		HL,array_sprites
     127.  00:84A5  11 00 1B            	LD		DE,SPRART
     128.  00:84A8  01 80 00            	LD		BC,4 * 32				;32 sprites x 4 bytes controlando el sprite (Y, X, plano, color)
     129.  00:84AB  C3 5C 00            	JP		LDIRVM
     130.  00:84AE                      	;~ CALL	LDIRVM
     131.  00:84AE                      fin_actualiza_array_sprites_vram:
     132.  00:84AE                      	;~ RET
     133.  00:84AE                      
     134.  00:84AE                      
     135.  00:84AE                      ;;=====================================================
     136.  00:84AE                      ;;VUELCA_RESULTADO_PUNTOMIRA_ARRAY
     137.  00:84AE                      ;;=====================================================	
     138.  00:84AE                      ; función: 	coloca los valores del punto de mira en la variable array_sprites para ser volcados en VRAM
     139.  00:84AE                      ; entrada: 	array_sprites_pm, prota.XXXXX
     140.  00:84AE                      ; salida: 	-
     141.  00:84AE                      ; toca: 	-
     142.  00:84AE                      vuelca_resultado_puntomira_array:
     143.  00:84AE  DD 21 5C 8C         	LD		IX, array_sprites_pm
     144.  00:84B2                      	;posición y de los dos sprites que conforman el punto de mira
     145.  00:84B2  3A E9 8B            	LD		 A, (prota.posy)
     146.  00:84B5  DD 77 00            	LD		(IX  ), A
     147.  00:84B8  DD 77 04            	LD		(IX+4), A
     148.  00:84BB                      	;posición x de los dos sprites que conforman el punto de mira
     149.  00:84BB  3A E8 8B            	LD		 A, (prota.posx)
     150.  00:84BE  DD 77 01            	LD		(IX+1), A
     151.  00:84C1  DD 77 05            	LD		(IX+5), A
     152.  00:84C4                      	;plano
     153.  00:84C4  DD 36 02 00         	LD		(IX+2), 0
     154.  00:84C8  DD 36 06 04         	LD		(IX+6), 4	;al ser sprites de 16x16 hay que ir de 4 en 4
     155.  00:84CC                      	;color
     156.  00:84CC  3A EA 8B            	LD		 A, (prota.escena)
     157.  00:84CF  B7                  	OR		 A
     158.  00:84D0  C2 DC 84            	JP		NZ,.codigo_color_2
     159.  00:84D3                      .codigo_color_1:
     160.  00:84D3  DD 36 03 0F         	LD		(IX+3), COLBLANCO
     161.  00:84D7  DD 36 07 08         	LD		(IX+7), COLROJO
     162.  00:84DB  C9                  	RET
     163.  00:84DC                      .codigo_color_2:
     164.  00:84DC  DD 36 03 08         	LD		(IX+3), COLROJO
     165.  00:84E0  DD 36 07 0F         	LD		(IX+7), COLBLANCO
     166.  00:84E4  C9                  	RET
     167.  00:84E5                      fin_vuelca_resultado_puntomira_array:
     168.  00:84E5                      
     169.  00:84E5                      
     170.  00:84E5                      ;;=====================================================
     171.  00:84E5                      ;;CHECK_PLAYER
     172.  00:84E5                      ;;=====================================================	
     173.  00:84E5                      ; función: 	MIRA EL CONTROL Y APLICA LA LOGICA DE MOVIMIENTO DEL PROTAGONISTA
     174.  00:84E5                      ; entrada: 	-
     175.  00:84E5                      ; salida: 	-
     176.  00:84E5                      ; toca: 	A
     177.  00:84E5                      check_player:
     178.  00:84E5  CD 60 85            	CALL	update_controllers_status
     179.  00:84E8  B7                  	OR		 A
     180.  00:84E9  C8                  	RET		 Z						;si no se ha pulsado nada no se necesita mirar nada
     181.  00:84EA                      
     182.  00:84EA  CB 1F               	RR		 A
     183.  00:84EC  DC 05 85            	CALL	 C, mueve_arriba
     184.  00:84EF  CB 1F               	RR		 A
     185.  00:84F1  DC 21 85            	CALL	 C, mueve_abajo
     186.  00:84F4  CB 1F               	RR		 A
     187.  00:84F6  DC 30 85            	CALL	 C, mueve_izquierda
     188.  00:84F9  CB 1F               	RR		 A
     189.  00:84FB  DC 12 85            	CALL	 C, mueve_derecha
     190.  00:84FE                      	
     191.  00:84FE                      	;zona para mirar disparo Recibe A que tendrá 0000 0 0 X-letra M X-espacio 
     192.  00:84FE  CD 3D 85            	CALL	mira_disparo
     193.  00:8501                      	
     194.  00:8501  C3 AE 84            	JP		vuelca_resultado_puntomira_array
     195.  00:8504                      f;in_check_player:
     196.  00:8504  C9                  	RET
     197.  00:8505                      
     179   00:8505                      	
     180   00:8505                      	include "subr_teclado_joy.asm"
       1.  00:8505                      ;;=====================================================
       2.  00:8505                      ;;SUBRUTINAS QUE CAPTURN EL JOYSTICK Y TECLADO Y MUEVEN PUNTO DE MIRA
       3.  00:8505                      ;;=====================================================
       4.  00:8505                      
       5.  00:8505                      ;;=====================================================
       6.  00:8505                      ;;MUEVE_ARRIBA
       7.  00:8505                      ;;=====================================================	
       8.  00:8505                      ; función: 	decrementa y si se no sale de los límites el valor del punto de mira a la derecha
       9.  00:8505                      ; entrada: 	-
      10.  00:8505                      ; salida: 	-
      11.  00:8505                      ; toca: 	-
      12.  00:8505                      mueve_arriba:
      13.  00:8505  F5                  	PUSH		AF
      14.  00:8506                      	
      15.  00:8506  3A E9 8B            	LD		 	 A, (prota.posy)
      16.  00:8509  3D                  	DEC			 A
      17.  00:850A  CA 10 85            	JP			 Z,.no_decrementa_y
      18.  00:850D  32 E9 8B            	LD			(prota.posy), A
      19.  00:8510                      	
      20.  00:8510                      .no_decrementa_y:
      21.  00:8510  F1                  	POP			AF
      22.  00:8511                      fin_mueve_arriba:
      23.  00:8511  C9                  	RET
      24.  00:8512                      
      25.  00:8512                      
      26.  00:8512                      ;;=====================================================
      27.  00:8512                      ;;MUEVE_DERECHA
      28.  00:8512                      ;;=====================================================	
      29.  00:8512                      ; función: 	incrementa si se no sale de los límites el valor del punto de mira a la derecha
      30.  00:8512                      ; entrada: 	-
      31.  00:8512                      ; salida: 	-
      32.  00:8512                      ; toca: 	-
      33.  00:8512                      mueve_derecha:
      34.  00:8512  F5                  	PUSH		AF
      35.  00:8513                      	
      36.  00:8513  3A E8 8B            	LD		 	 A, (prota.posx)
      37.  00:8516  3C                  	INC			 A
      38.  00:8517  FE EF               	CP			 A, LIMPANTDER - 16
      39.  00:8519  CA 1F 85            	JP			 Z, .no_incrementa_x
      40.  00:851C  32 E8 8B            	LD			(prota.posx), A
      41.  00:851F                      	
      42.  00:851F                      .no_incrementa_x:
      43.  00:851F  F1                  	POP			AF
      44.  00:8520                      fin_mueve_derecha:
      45.  00:8520  C9                  	RET
      46.  00:8521                      
      47.  00:8521                      
      48.  00:8521                      ;;=====================================================
      49.  00:8521                      ;;MUEVE_ABAJO
      50.  00:8521                      ;;=====================================================	
      51.  00:8521                      ; función: 	incrementa y si se no sale de los límites el valor del punto de mira abajo
      52.  00:8521                      ; entrada: 	-
      53.  00:8521                      ; salida: 	-
      54.  00:8521                      ; toca: 	-
      55.  00:8521                      mueve_abajo:
      56.  00:8521  F5                  	PUSH		AF
      57.  00:8522                      	
      58.  00:8522  3A E9 8B            	LD		 	 A, (prota.posy)
      59.  00:8525  3C                  	INC			 A
      60.  00:8526  FE 70               	CP			 A, LIMPANTABA - 16
      61.  00:8528  CA 2E 85            	JP			 Z,.no_incrementa_y
      62.  00:852B  32 E9 8B            	LD			(prota.posy), A
      63.  00:852E                      	
      64.  00:852E                      .no_incrementa_y:
      65.  00:852E  F1                  	POP			AF
      66.  00:852F                      fin_mueve_abajo:
      67.  00:852F  C9                  	RET
      68.  00:8530                      	
      69.  00:8530                      	
      70.  00:8530                      ;;=====================================================
      71.  00:8530                      ;;MUEVE_IZQUIERDA
      72.  00:8530                      ;;=====================================================	
      73.  00:8530                      ; función: 	decrementa x si se no sale de los límites el valor del punto de mira a la izquierda
      74.  00:8530                      ; entrada: 	-
      75.  00:8530                      ; salida: 	-
      76.  00:8530                      ; toca: 	-
      77.  00:8530                      mueve_izquierda:
      78.  00:8530  F5                  	PUSH		AF
      79.  00:8531                      	
      80.  00:8531  3A E8 8B            	LD		 	 A, (prota.posx)
      81.  00:8534  3D                  	DEC			 A
      82.  00:8535                      ;	CP			 A, LIMPANTIZQ
      83.  00:8535  CA 3B 85            	JP			 Z,.no_decrementa_x
      84.  00:8538  32 E8 8B            	LD			(prota.posx), A
      85.  00:853B                      	
      86.  00:853B                      .no_decrementa_x:
      87.  00:853B  F1                  	POP			AF
      88.  00:853C                      fin_mueve_izquierda:
      89.  00:853C  C9                  	RET
      90.  00:853D                      
      91.  00:853D                      
      92.  00:853D                      
      93.  00:853D                      ;;=====================================================
      94.  00:853D                      ;;MIRA_DISPARO
      95.  00:853D                      ;;=====================================================	
      96.  00:853D                      ; función: 	Mira si se ha pulsado alguno de los dos disparos
      97.  00:853D                      ; entrada: 	A que tendrá 0000 0 0 X-letra M X-espacio 
      98.  00:853D                      ; salida: 	-
      99.  00:853D                      ; toca: 	A, B
     100.  00:853D                      mira_disparo:
     101.  00:853D                      .mira_boton_pulsado1:
     102.  00:853D  CB 1F               	RR		 A						;preparo en el carry si se ha pulsado botón 1
     103.  00:853F  D2 4B 85            	JP		 NC, .mira_boton_pulsado2					
     104.  00:8542  47                  	LD		 B, A					;copia A para usarlo después
     105.  00:8543                      	;se ha pulsado barra o boton 1
     106.  00:8543  3A EA 8B            	LD		 A, (prota.escena)
     107.  00:8546  2F                  	CPL		 
     108.  00:8547  32 EA 8B            	LD		(prota.escena), A
     109.  00:854A                      
     110.  00:854A  78                  	LD		 A, B
     111.  00:854B                      .mira_boton_pulsado2:
     112.  00:854B  CB 1F               	RR		 A
     113.  00:854D  D0                  	RET		 NC
     114.  00:854E                      	;se ha pulsado shift o boton 2
     115.  00:854E                      	
     116.  00:854E  3A A9 86            	LD		 A, (prota_reliquias)	;miro si le quedan reliquias
     117.  00:8551  B7                  	OR		 A
     118.  00:8552  C8                  	RET		 Z
     119.  00:8553                      	
     120.  00:8553                      	;actuaciones si se usa la reliquia botón 2 o M
     121.  00:8553  3A A9 86            	LD		 A, (prota_reliquias)
     122.  00:8556  3D                  	DEC		 A
     123.  00:8557  32 A9 86            	LD		(prota_reliquias), A
     124.  00:855A                      ;	LD		 A, RETARDOREL
     125.  00:855A  3E 01               	LD		 A, 1
     126.  00:855C  32 09 8C            	LD		(actualiza_reliquias_sn), A
     127.  00:855F                      fin_mira_disparo:
     128.  00:855F  C9                  	RET
     129.  00:8560                      
     130.  00:8560                      
     131.  00:8560                      ;;============================================================
     132.  00:8560                      ;;Código de D. Fernando García (BitVision) (al que siempre le estaré agradecido)
     133.  00:8560                      ;check_8th_keyboard_row
     134.  00:8560                      ;read_joy_0
     135.  00:8560                      ;check_8th_keyboard_row
     136.  00:8560                      ;check_4th_keyboard_row
     137.  00:8560                      ;;============================================================
     138.  00:8560                      ;;  usa constantes:
     139.  00:8560                      ;PSG_A  equ  0a0h  ;reg address
     140.  00:8560                      ;PSG_W  equ  0a1h  ;reg data WR
     141.  00:8560                      ;PSG_R  equ  0a2h  ;reg data
     142.  00:8560                      
     143.  00:8560                      ;;=====================================================
     144.  00:8560                      ;;update_controllers_status
     145.  00:8560                      ;;=====================================================	
     146.  00:8560                      ;depends on the next rountine
     147.  00:8560                      ;  returns
     148.  00:8560                      ;  a - 0P2TRLDU
     149.  00:8560                      
     150.  00:8560                      update_controllers_status:
     151.  00:8560  CD AB 85                 call  check_8th_keyboard_row
     152.  00:8563                      [4]  rrc    a
     152.  00:8563  CB 0F CB 0F CB 0F CB 0F 
     153.  00:856B  47                       ld    b,a    		;save for later  xxxTRDUL
     154.  00:856C                      
     155.  00:856C  E6 01                    and    #01    		;save L
     156.  00:856E  CB 27                    sla    a
     157.  00:8570  CB 27                    sla    a    		;now 00000L00
     158.  00:8572  4F                       ld    c,a    		;save for later
     159.  00:8573                      
     160.  00:8573  78                       ld    a,b    		;again we've got xxxTRDUL. I am interested on leaving 000000DU on a
     161.  00:8574  CB 3F                    srl    a
     162.  00:8576  E6 03                    and    00000011b
     163.  00:8578                      						;we've got 000000DU on a
     164.  00:8578  B1                       or    c    		;now we've got 00000LDU
     165.  00:8579  4F                       ld    c,a    		;save for later
     166.  00:857A                      
     167.  00:857A  78                       ld    a,b
     168.  00:857B  E6 18                    and    00011000b 	;we've got 000TR000
     169.  00:857D  B1                       or    c
     170.  00:857E                           ;finally    000TRLDU
     171.  00:857E                      
     172.  00:857E                           ;and    00000100   ;preserve just
     173.  00:857E  47                       ld    b,a    		;save for later
     174.  00:857F  CD B9 85                 call  check_4th_keyboard_row      ;check M & P
     175.  00:8582  F5                       push  af
     176.  00:8583  E6 04                    and    00000100b	;filter just M
     177.  00:8585  87                       add    a
     178.  00:8586  87                       add    a
     179.  00:8587  87                       add    a           ;shift 3th to 6th bit
     180.  00:8588  B0                       or    b           	;merge with previous
     181.  00:8589  47                       ld    b,a
     182.  00:858A                      
     183.  00:858A  CD 97 85                 call  read_joy_0
     184.  00:858D  E6 3F                    and    00111111b  	;we want just 002TRLDU  from joystick    (2 is second trigger)
     185.  00:858F  B0                       or    b      		;added 000TRLDU from keyboard
     186.  00:8590  47                       ld    b,a      	;save for later
     187.  00:8591  F1                       pop    af      	; let's check on P
     188.  00:8592                      
     189.  00:8592  E6 20                    and    00100000b
     190.  00:8594  87                       add    a      		;P status on 6th bit  ... so 0P2TRLDU
     191.  00:8595  B0                       or    b
     192.  00:8596                      
     193.  00:8596  C9                       ret
     194.  00:8597                      
     195.  00:8597                      
     196.  00:8597                      ;ret
     197.  00:8597                      ;  a -            xx2TRLDU
     198.  00:8597                      read_joy_0:
     199.  00:8597  F3                         di
     200.  00:8598  3E 0F                      ld    a,15
     201.  00:859A  D3 A0                      out    [PSG_A],a
     202.  00:859C  DB A2                      in    a,[PSG_R]
     203.  00:859E  E6 BF                      and    10111111b        ;joy0
     204.  00:85A0                      
     205.  00:85A0  D3 A1                      out    [PSG_W],a        ;set joy0
     206.  00:85A2                      
     207.  00:85A2  3E 0E                      ld    a,14
     208.  00:85A4  D3 A0                      out    [PSG_A],a
     209.  00:85A6  DB A2                      in    a,[PSG_R]
     210.  00:85A8                      
     211.  00:85A8  FB                         ei
     212.  00:85A9  2F                         cpl
     213.  00:85AA                      
     214.  00:85AA  C9                         ret
     215.  00:85AB                      
     216.  00:85AB                      
     217.  00:85AB                      ;ret
     218.  00:85AB                      ;  a -      RDULxxxT
     219.  00:85AB                      check_8th_keyboard_row:
     220.  00:85AB  F3                       di
     221.  00:85AC  DB AA                    in    a,(#aa)
     222.  00:85AE  E6 F0                    and    #f0
     223.  00:85B0  F6 08                    or    8
     224.  00:85B2  D3 AA                    out    (#aa),a
     225.  00:85B4  DB A9                    in    a,(#a9)
     226.  00:85B6  FB                       ei
     227.  00:85B7  2F                       cpl
     228.  00:85B8                      
     229.  00:85B8  C9                       ret
     230.  00:85B9                      
     231.  00:85B9                      
     232.  00:85B9                      ;ret
     233.  00:85B9                      ;  a -      xxxxxMxx
     234.  00:85B9                      check_4th_keyboard_row:
     235.  00:85B9  F3                       di
     236.  00:85BA  DB AA                    in    a,(#aa)
     237.  00:85BC  E6 F0                    and    #f0
     238.  00:85BE  F6 04                    or    4
     239.  00:85C0  D3 AA                    out    (#aa),a
     240.  00:85C2  DB A9                    in    a,(#a9)
     241.  00:85C4  FB                       ei
     242.  00:85C5  2F                       cpl
     243.  00:85C6                      
     244.  00:85C6  C9                       ret
     245.  00:85C7                      
     246.  00:85C7                      ;--------------------------------------------
     247.  00:85C7                      
     248.  00:85C7                      
     249.  00:85C7                      
     250.  00:85C7                      
     251.  00:85C7                      
     252.  00:85C7                      
     253.  00:85C7                      
     254.  00:85C7                      
     181   00:85C7                      	
     182   00:85C7                      
     183   00:85C7                      ;Este include lleva la rutina de descompresión de ROM/RAM a VRAM de pletter
     184   00:85C7                      ;Está adaptada de la original a sjasm
     185   00:85C7                      ;	HL = RAM/ROM source	; DE = VRAM destination
     186   00:85C7                      depack_VRAM:
     187   00:85C7                      	include "PL_VRAM_Depack_SJASM.asm"
       1.  00:85C7                      ;-----------------------------------------------------------
       2.  00:85C7                      ; Pletter v0.5b VRAM Depacker v1.1 - 16Kb version
       3.  00:85C7                      ; HL = RAM/ROM source ; DE = VRAM destination
       4.  00:85C7                      ;-----------------------------------------------------------
       5.  00:85C7  F3                  	di
       6.  00:85C8                      
       7.  00:85C8                      ; VRAM address setup
       8.  00:85C8  7B                  	ld	a,e
       9.  00:85C9  D3 99               	out	[099h],a
      10.  00:85CB  7A                  	ld	a,d
      11.  00:85CC  F6 40               	or	040h
      12.  00:85CE  D3 99               	out	[099h],a
      13.  00:85D0                      
      14.  00:85D0                      ; Initialization
      15.  00:85D0  7E                  	ld	a,[hl]
      16.  00:85D1  23                  	inc	hl
      17.  00:85D2  D9                  	exx
      18.  00:85D3  11 00 00            	ld	de,0
      19.  00:85D6  87                  	add	a,a
      20.  00:85D7  3C                  	inc	a
      21.  00:85D8  CB 13               	rl	e
      22.  00:85DA  87                  	add	a,a
      23.  00:85DB  CB 13               	rl	e
      24.  00:85DD  87                  	add	a,a
      25.  00:85DE  CB 13               	rl	e
      26.  00:85E0  CB 13               	rl	e
      27.  00:85E2  21 99 86            	ld	hl,modes
      28.  00:85E5  19                  	add	hl,de
      29.  00:85E6  5E                  	ld	e,[hl]
      30.  00:85E7  DD 6B               	ld	ixl,e
      31.  00:85E9  23                  	inc	hl
      32.  00:85EA  5E                  	ld	e,[hl]
      33.  00:85EB  DD 63               	ld	ixh,e
      34.  00:85ED  1E 01               	ld	e,1
      35.  00:85EF  D9                  	exx
      36.  00:85F0  FD 21 F9 85         	ld	iy,loop
      37.  00:85F4                      
      38.  00:85F4                      ; Main depack loop
      39.  00:85F4  0E 98               literal:ld	c,098h
      40.  00:85F6  ED A3               	outi
      41.  00:85F8  13                  	inc	de
      42.  00:85F9  87                  loop:	add	a,a
      43.  00:85FA  CC 8D 86              	call	z,getbit
      44.  00:85FD  30 F5               	jr	nc,literal
      45.  00:85FF                      
      46.  00:85FF                      ; Compressed data
      47.  00:85FF  D9                  	exx
      48.  00:8600  62                  	ld	h,d
      49.  00:8601  6B                  	ld	l,e
      50.  00:8602  87                  getlen: add	a,a
      51.  00:8603  CC 91 86            	call	z,getbitexx
      52.  00:8606  30 1D               	jr	nc,lenok
      53.  00:8608  87                  lus:	add	a,a
      54.  00:8609  CC 91 86            	call	z,getbitexx
      55.  00:860C  ED 6A               	adc	hl,hl
      56.  00:860E  D8                  	ret	c
      57.  00:860F  87                  	add	a,a
      58.  00:8610  CC 91 86            	call	z,getbitexx
      59.  00:8613  30 10               	jr	nc,lenok
      60.  00:8615  87                  	add	a,a
      61.  00:8616  CC 91 86            	call	z,getbitexx
      62.  00:8619  ED 6A               	adc	hl,hl
      63.  00:861B  DA 97 86            	jp	c,Depack_out
      64.  00:861E  87                  	add	a,a
      65.  00:861F  CC 91 86            	call	z,getbitexx
      66.  00:8622  DA 08 86            	jp	c,lus
      67.  00:8625  23                  lenok:  inc	hl
      68.  00:8626  D9                  	exx
      69.  00:8627  4E                  	ld	c,[hl]
      70.  00:8628  23                  	inc	hl
      71.  00:8629  06 00               	ld	b,0
      72.  00:862B  CB 79               	bit	7,c
      73.  00:862D  CA 60 86            	jp	z,offsok
      74.  00:8630  DD E9               	jp	ix
      75.  00:8632                      
      76.  00:8632  87                  mode7:  add	a,a
      77.  00:8633  CC 8D 86              	call	z,getbit
      78.  00:8636  CB 10               	rl	b
      79.  00:8638  87                  mode6:	add	a,a
      80.  00:8639  CC 8D 86              	call	z,getbit
      81.  00:863C  CB 10               	rl	b
      82.  00:863E  87                  mode5:  add	a,a
      83.  00:863F  CC 8D 86              	call	z,getbit
      84.  00:8642  CB 10               	rl	b
      85.  00:8644  87                  mode4:  add	a,a
      86.  00:8645  CC 8D 86              	call	z,getbit
      87.  00:8648  CB 10               	rl	b
      88.  00:864A  87                  mode3:  add	a,a
      89.  00:864B  CC 8D 86              	call	z,getbit
      90.  00:864E  CB 10               	rl	b
      91.  00:8650  87                  mode2:	add	a,a
      92.  00:8651  CC 8D 86              	call	z,getbit
      93.  00:8654  CB 10               	rl	b
      94.  00:8656  87                  	add	a,a
      95.  00:8657  CC 8D 86              	call	z,getbit
      96.  00:865A  30 04               	jr	nc,offsok
      97.  00:865C  B7                  	or	a
      98.  00:865D  04                  	inc	b
      99.  00:865E  CB B9               	res	7,c
     100.  00:8660  03                  offsok: inc	bc
     101.  00:8661  E5                  	push	hl
     102.  00:8662  D9                  	exx
     103.  00:8663  E5                  	push	hl
     104.  00:8664  D9                  	exx
     105.  00:8665  6B                  	ld	l,e
     106.  00:8666  62                  	ld	h,d
     107.  00:8667  ED 42               	sbc	hl,bc
     108.  00:8669  C1                  	pop	bc
     109.  00:866A  F5                  	push	af
     110.  00:866B  7D                  .loop:	ld	a,l
     111.  00:866C  D3 99               	out	[099h],a
     112.  00:866E  7C                  	ld	a,h
     113.  00:866F  00                  	nop                     ; VDP timing
     114.  00:8670  D3 99               	out	[099h],a
     115.  00:8672  00                  	nop                     ; VDP timing
     116.  00:8673  DB 98               	in	a,[098h]
     117.  00:8675  08                  	ex	af,af'
     118.  00:8676  7B                  	ld	a,e
     119.  00:8677  00                  	nop			; VDP timing
     120.  00:8678  D3 99               	out	[099h],a
     121.  00:867A  7A                  	ld	a,d
     122.  00:867B  F6 40               	or	040h
     123.  00:867D  D3 99               	out	[099h],a
     124.  00:867F  08                  	ex	af,af'
     125.  00:8680  00                  	nop			; VDP timing
     126.  00:8681  D3 98               	out	[098h],a
     127.  00:8683  13                  	inc	de
     128.  00:8684  ED A1               	cpi
     129.  00:8686  EA 6B 86            	jp	pe,.loop
     130.  00:8689  F1                  	pop	af
     131.  00:868A  E1                  	pop	hl
     132.  00:868B  FD E9               	jp	iy
     133.  00:868D                      
     134.  00:868D  7E                  getbit: ld	a,[hl]
     135.  00:868E  23                  	inc	hl
     136.  00:868F  17                  	rla
     137.  00:8690  C9                  	ret
     138.  00:8691                      
     139.  00:8691                      getbitexx:
     140.  00:8691  D9                  	exx
     141.  00:8692  7E                  	ld	a,[hl]
     142.  00:8693  23                  	inc	hl
     143.  00:8694  D9                  	exx
     144.  00:8695  17                  	rla
     145.  00:8696  C9                  	ret
     146.  00:8697                      
     147.  00:8697                      ; Depacker exit
     148.  00:8697                      Depack_out:
     149.  00:8697  FB                  	ei
     150.  00:8698  C9                  	ret
     151.  00:8699                      
     152.  00:8699                      modes:
     153.  00:8699  60 86               	dw	offsok
     154.  00:869B  50 86               	dw	mode2
     155.  00:869D  4A 86               	dw	mode3
     156.  00:869F  44 86               	dw	mode4
     157.  00:86A1  3E 86               	dw	mode5
     158.  00:86A3  38 86               	dw	mode6
     159.  00:86A5  32 86               	dw	mode7
     188   00:86A7                      
     189   00:86A7                      
     190   00:86A7                      	
     191   00:86A7                      ;;=====================================================
     192   00:86A7                      ;;DEFINICIÓN DE ESTRUCTURAS
     193   00:86A7                      ;;=====================================================		
     194   00:86A7                      	include "estructuras.asm"
       1.  00:86A7                      ;;=====================================================
       2.  00:86A7                      ;;DEFINICIÓN DE ESTRUCTURAS
       3.  00:86A7                      ;;=====================================================
       4.  00:86A7                      
       5.  00:86A7                      ;crear estructura
       6.  00:86A7                      ;variables globales del prota
       7.  00:86A7                      prota_nivel:			;nivel del castillo donde está 0-6
       8.  00:86A7  00                  			DB		0
       9.  00:86A8                      prota_vidas:
      10.  00:86A8  00                  			DB		0
      11.  00:86A9                      prota_reliquias:
      12.  00:86A9  03                  			DB		3
      13.  00:86AA                      prota_pos_mapx:
      14.  00:86AA  00                  			DB		0	;pos columna
      15.  00:86AB                      prota_pos_mapy:
      16.  00:86AB  00                  			DB		0	;pos fila
      17.  00:86AC                      prota_energia:
      18.  00:86AC  FA                  			DB		250
      19.  00:86AD                      
      20.  00:86AD                      	STRUCT ESTRUCTURA_PUNTOMIRA
      21.  00:86AD                    < posx			DB		100
      22.  00:86AD                    < posy			DB		100
      23.  00:86AD                    < escena			DB		0	;valores porsibles 0 (blanco+rojo en punto de mira) y NEG 0 (al revés)
      24.  00:86AD                    < velocidad		DB		0
      25.  00:86AD                    < boton2_pressed  DB		0
      26.  00:86AD                    < ; al final he decidido (ya que el punto de mira es el prota) que lo relacionado con el prota vaya en esta estructura
      27.  00:86AD                    < pm_aux1			DB		0	;para llegar a los 16 campos
      28.  00:86AD                    < pm_aux2			DB		0	;para llegar a los 16 campos
      29.  00:86AD                    < pm_aux3			DB		0	;para llegar a los 16 campos
      30.  00:86AD                    < pm_aux4			DB		0	;para llegar a los 16 campos
      31.  00:86AD                    < pm_aux5			DB		0	;para llegar a los 16 campos
      32.  00:86AD                    < pm_aux6			DB		0	;para llegar a los 16 campos
      33.  00:86AD                    < pm_aux7			DB		0	;para llegar a los 16 campos
      34.  00:86AD                    < pm_aux8			DB		0	;para llegar a los 16 campos
      35.  00:86AD                    < pm_aux9			DB		0	;para llegar a los 16 campos
      36.  00:86AD                    < pm_aux10		DB		0	;para llegar a los 16 campos
      37.  00:86AD                    < pm_aux11		DB		0	;para llegar a los 16 campos
      38.  00:86AD                    < 	ENDSTRUCT;ESTRUCTURA_PUNTOMIRA
      39.  00:86AD                      
      40.  00:86AD                      	
      41.  00:86AD                      	STRUCT ESTRUCTURA_ENEMIGO
      42.  00:86AD                    < tipo				DB		0	;(0 serpiente por ejemplo) #FF muerto o no existe
      43.  00:86AD                    < posx				DB		5
      44.  00:86AD                    < posy				DB		50
      45.  00:86AD                    < color				DB		5
      46.  00:86AD                    < escena				DB		0
      47.  00:86AD                    < contador_siguiente_escena	DB	0
      48.  00:86AD                    < reset_contador		DB		0
      49.  00:86AD                    < dano				DB		0	;daño
      50.  00:86AD                    < energia				DB		0	;energía del enemigo... si llega a 0 => existe <- 0
      51.  00:86AD                    < ;indica el nº de sprite a mostrar y si está compuesto por uno o dos sprites y si están en horizontal o vertical
      52.  00:86AD                    < ver_hor				DB		0
      53.  00:86AD                    < manejador_dibujo 	DW		0
      54.  00:86AD                    < en_aux3				DB		0
      55.  00:86AD                    < en_aux4				DB		0
      56.  00:86AD                    < 	ENDSTRUCT;ESTRUCTURA_ENEMIGO
      57.  00:86AD                      	
      58.  00:86AD                      	STRUCT ESTRUCTURA_EXTRA		;vidas extra, plantas de curación de energía, reliquias	
      59.  00:86AD                    < tipo				DB		0	;#FF muerto/usado o no existe
      60.  00:86AD                    < posx				DB		50
      61.  00:86AD                    < posy				DB		50
      62.  00:86AD                    < color				DB		5
      63.  00:86AD                    < contador			DB		0	;por si doy dos reliquias en vez de una, por ejemplo
      64.  00:86AD                    < en_aux1				DB		0	;para llegar a los 16 campos
      65.  00:86AD                    < en_aux2				DB		0
      66.  00:86AD                    < en_aux3				DB		0
      67.  00:86AD                    < en_aux4				DB		0
      68.  00:86AD                    < en_aux5				DB		0
      69.  00:86AD                    < en_aux6				DB		0
      70.  00:86AD                    < en_aux7				DB		0
      71.  00:86AD                    < en_aux8				DB		0
      72.  00:86AD                    < en_aux9				DB		0
      73.  00:86AD                    < en_aux10			DB		0
      74.  00:86AD                    < en_aux11			DB		0
      75.  00:86AD                    < 	ENDSTRUCT;ESTRUCTURA_EXTRA
      76.  00:86AD                      
      77.  00:86AD                      
      78.  00:86AD                      
      79.  00:86AD                      
      80.  00:86AD                      
      81.  00:86AD                      
      82.  00:86AD                      
     195   00:86AD                      	
     196   00:86AD                      ;;=====================================================
     197   00:86AD                      ;;DEFINICIÓN DE VARIABLES
     198   00:86AD                      ;;=====================================================		
     199   00:86AD                      	include "sprites.asm"
       1.  00:86AD                      ;;=====================================================
       2.  00:86AD                      ;;DEFINICIÓN DE SPRITES
       3.  00:86AD                      ;;=====================================================	
       4.  00:86AD                      sprites_pantantalla:
       5.  00:86AD                      
       6.  00:86AD                      sprite_punto_mira_1:	;color 8
       7.  00:86AD                      	db #FF,#FF,#C0,#C0,#C0,#C0,#C0,#C0
       7.  00:86AD  FF FF C0 C0 C0 C0 C0 C0 
       8.  00:86B5                      	db #C0,#C0,#C0,#C0,#C0,#C0,#FF,#FF
       8.  00:86B5  C0 C0 C0 C0 C0 C0 FF FF 
       9.  00:86BD                      	db #FF,#FF,#03,#03,#03,#03,#03,#03
       9.  00:86BD  FF FF 03 03 03 03 03 03 
      10.  00:86C5                      	db #03,#03,#03,#03,#03,#03,#FF,#FF
      10.  00:86C5  03 03 03 03 03 03 FF FF 
      11.  00:86CD                      	
      12.  00:86CD                      sprite_punto_mira_2: 	;color 15
      13.  00:86CD                      	db #00,#00,#00,#00,#0F,#0F,#0C,#0C
      13.  00:86CD  00 00 00 00 0F 0F 0C 0C 
      14.  00:86D5                      	db #0C,#0C,#0F,#0F,#00,#00,#00,#00
      14.  00:86D5  0C 0C 0F 0F 00 00 00 00 
      15.  00:86DD                      	db #00,#00,#00,#00,#F0,#F0,#30,#30
      15.  00:86DD  00 00 00 00 F0 F0 30 30 
      16.  00:86E5                      	db #30,#30,#F0,#F0,#00,#00,#00,#00
      16.  00:86E5  30 30 F0 F0 00 00 00 00 
      17.  00:86ED                      	
      18.  00:86ED                      sprite_punto_mira_1_mejorado:
      19.  00:86ED                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      19.  00:86ED  FF FF FF FF FF FF FF FF 
      20.  00:86F5                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      20.  00:86F5  FF FF FF FF FF FF FF FF 
      21.  00:86FD                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      21.  00:86FD  FF FF FF FF FF FF FF FF 
      22.  00:8705                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      22.  00:8705  FF FF FF FF FF FF FF FF 
      23.  00:870D                      
      24.  00:870D                      sprite_punto_mira_2_mejorado:
      25.  00:870D                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      25.  00:870D  FF FF FF FF FF FF FF FF 
      26.  00:8715                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      26.  00:8715  FF FF FF FF FF FF FF FF 
      27.  00:871D                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      27.  00:871D  FF FF FF FF FF FF FF FF 
      28.  00:8725                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      28.  00:8725  FF FF FF FF FF FF FF FF 
      29.  00:872D                      	
      30.  00:872D                      sprite_reliquia:
      31.  00:872D                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      31.  00:872D  FF FF FF FF FF FF FF FF 
      32.  00:8735                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      32.  00:8735  FF FF FF FF FF FF FF FF 
      33.  00:873D                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      33.  00:873D  FF FF FF FF FF FF FF FF 
      34.  00:8745                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      34.  00:8745  FF FF FF FF FF FF FF FF 
      35.  00:874D                      	
      36.  00:874D                      sprite_vida_extra:
      37.  00:874D                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      37.  00:874D  FF FF FF FF FF FF FF FF 
      38.  00:8755                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      38.  00:8755  FF FF FF FF FF FF FF FF 
      39.  00:875D                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      39.  00:875D  FF FF FF FF FF FF FF FF 
      40.  00:8765                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      40.  00:8765  FF FF FF FF FF FF FF FF 
      41.  00:876D                      	
      42.  00:876D                      sprite_planta:
      43.  00:876D                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      43.  00:876D  FF FF FF FF FF FF FF FF 
      44.  00:8775                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      44.  00:8775  FF FF FF FF FF FF FF FF 
      45.  00:877D                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      45.  00:877D  FF FF FF FF FF FF FF FF 
      46.  00:8785                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      46.  00:8785  FF FF FF FF FF FF FF FF 
      47.  00:878D                      	
      48.  00:878D                      sprite_ballesta_mejorada:
      49.  00:878D                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      49.  00:878D  FF FF FF FF FF FF FF FF 
      50.  00:8795                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      50.  00:8795  FF FF FF FF FF FF FF FF 
      51.  00:879D                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      51.  00:879D  FF FF FF FF FF FF FF FF 
      52.  00:87A5                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF	
      52.  00:87A5  FF FF FF FF FF FF FF FF 
      53.  00:87AD                      	
      54.  00:87AD                      sprite_ciempies1:
      55.  00:87AD                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      55.  00:87AD  FF FF FF FF FF FF FF FF 
      56.  00:87B5                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      56.  00:87B5  FF FF FF FF FF FF FF FF 
      57.  00:87BD                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      57.  00:87BD  FF FF FF FF FF FF FF FF 
      58.  00:87C5                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      58.  00:87C5  FF FF FF FF FF FF FF FF 
      59.  00:87CD                      	
      60.  00:87CD                      sprite_ciempies2:
      61.  00:87CD                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      61.  00:87CD  FF FF FF FF FF FF FF FF 
      62.  00:87D5                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      62.  00:87D5  FF FF FF FF FF FF FF FF 
      63.  00:87DD                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      63.  00:87DD  FF FF FF FF FF FF FF FF 
      64.  00:87E5                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      64.  00:87E5  FF FF FF FF FF FF FF FF 
      65.  00:87ED                      	
      66.  00:87ED                      sprite_arana1:
      67.  00:87ED                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      67.  00:87ED  FF FF FF FF FF FF FF FF 
      68.  00:87F5                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      68.  00:87F5  FF FF FF FF FF FF FF FF 
      69.  00:87FD                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      69.  00:87FD  FF FF FF FF FF FF FF FF 
      70.  00:8805                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      70.  00:8805  FF FF FF FF FF FF FF FF 
      71.  00:880D                      	
      72.  00:880D                      sprite_arana2:
      73.  00:880D                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      73.  00:880D  FF FF FF FF FF FF FF FF 
      74.  00:8815                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      74.  00:8815  FF FF FF FF FF FF FF FF 
      75.  00:881D                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      75.  00:881D  FF FF FF FF FF FF FF FF 
      76.  00:8825                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      76.  00:8825  FF FF FF FF FF FF FF FF 
      77.  00:882D                      	
      78.  00:882D                      sprite_serpiente1:
      79.  00:882D                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      79.  00:882D  FF FF FF FF FF FF FF FF 
      80.  00:8835                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      80.  00:8835  FF FF FF FF FF FF FF FF 
      81.  00:883D                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      81.  00:883D  FF FF FF FF FF FF FF FF 
      82.  00:8845                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      82.  00:8845  FF FF FF FF FF FF FF FF 
      83.  00:884D                      	
      84.  00:884D                      sprite_serpiente2:
      85.  00:884D                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      85.  00:884D  FF FF FF FF FF FF FF FF 
      86.  00:8855                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      86.  00:8855  FF FF FF FF FF FF FF FF 
      87.  00:885D                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      87.  00:885D  FF FF FF FF FF FF FF FF 
      88.  00:8865                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      88.  00:8865  FF FF FF FF FF FF FF FF 
      89.  00:886D                      	
      90.  00:886D                      sprite_murcielago1:
      91.  00:886D                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      91.  00:886D  FF FF FF FF FF FF FF FF 
      92.  00:8875                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      92.  00:8875  FF FF FF FF FF FF FF FF 
      93.  00:887D                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      93.  00:887D  FF FF FF FF FF FF FF FF 
      94.  00:8885                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      94.  00:8885  FF FF FF FF FF FF FF FF 
      95.  00:888D                      	
      96.  00:888D                      sprite_murcielago2:
      97.  00:888D                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      97.  00:888D  FF FF FF FF FF FF FF FF 
      98.  00:8895                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      98.  00:8895  FF FF FF FF FF FF FF FF 
      99.  00:889D                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      99.  00:889D  FF FF FF FF FF FF FF FF 
     100.  00:88A5                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF	
     100.  00:88A5  FF FF FF FF FF FF FF FF 
     101.  00:88AD                      
     102.  00:88AD                      sprite_explosion:
     103.  00:88AD                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     103.  00:88AD  FF FF FF FF FF FF FF FF 
     104.  00:88B5                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     104.  00:88B5  FF FF FF FF FF FF FF FF 
     105.  00:88BD                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     105.  00:88BD  FF FF FF FF FF FF FF FF 
     106.  00:88C5                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     106.  00:88C5  FF FF FF FF FF FF FF FF 
     107.  00:88CD                      	
     108.  00:88CD                      	
     109.  00:88CD                      	
     200   00:88CD                      	
     201   00:88CD                      	include "habitaciones.asm"
       1.  00:88CD                      ;;=====================================================
       2.  00:88CD                      ;;DEFINICIÓN DE HABITACIONES x NIVEL
       3.  00:88CD                      ;;=====================================================	
       4.  00:88CD                      
       5.  00:88CD                      ; sólo voy a usar 7x7 pero como los arrays son lineales y voy a trabajar con matrices
       6.  00:88CD                      ; me interesa que seande  8x8 aunque sólo trabaje con 7x7
       7.  00:88CD                      
       8.  00:88CD                      ; ojo... la primera linea corresponderá a la primera linea del castillo no a la última
       9.  00:88CD                      
      10.  00:88CD                      ;; definición de estructura de bits
      11.  00:88CD                      ;Tipo DB pero serán 2 bytes por habitación byte primero (habitaciones etc) + byte 2º. Los bytes 15 y 16 se usan para información extra
      12.  00:88CD                      ;los 7 primeros bits del byte 15 indican si se ha pasado/limpiado una habitación o no
      13.  00:88CD                      ;~ 0 - lleno o vacío (si ya se ha pasado)
      14.  00:88CD                      ;~ 0000 - nº puertas 1 arriba 1 derecha 1 abajo 1 izquierda
      15.  00:88CD                      ;~ 1 - hay reliquia?
      16.  00:88CD                      ;~ 1 - hay vida extra
      17.  00:88CD                      ;~ 1 - hay arma extra (durará 6 pantallas - sonido distinto)
      18.  00:88CD                      ;~ 1 - hay energía? (sobran bits ... se puede usar otro como carga energía +)
      19.  00:88CD                      ;~ 1 - es pantalla de mostruo fin de fase?
      20.  00:88CD                      ;~ 1 - es pantalla inicial (equivaldría a la puerta de un castillo)?
      21.  00:88CD                      ;~ 1 - es pantalla final?
      22.  00:88CD                      
      23.  00:88CD                      
      24.  00:88CD                      ;importante: el byte de la columna 15 indicará con 1 y 0 habitaciones por las que se haya pasado
      25.  00:88CD                      ;cuando se inicie la partida todos se pondrán a 0
      26.  00:88CD                      
      27.  00:88CD                      habitacion_actual:
      28.  00:88CD  00 00               	db  #00,#00		;habitación donde se encuentre el prota. Se mete en una varible par traer todos los datos de golpe y no buscrlos varias veces
      29.  00:88CF                      
      30.  00:88CF                      habitaciones_juego:
      31.  00:88CF                      habitaciones_nivel0:
      32.  00:88CF                      ;---------------------------------* habitación inicial
      33.  00:88CF                      	db  #00,#00,#01,#01,#02,#02,#03,#03,#04,#04,#05,#05,#06,#06,#FF,#00 ;primera fila
      33.  00:88CF  00 00 01 01 02 02 03 03 04 04 05 05 06 06 FF 00 
      34.  00:88DF                      	db  #17,#10,#11,#11,#12,#12,#13,#13,#14,#14,#15,#15,#16,#16,#FF,#00
      34.  00:88DF  17 10 11 11 12 12 13 13 14 14 15 15 16 16 FF 00 
      35.  00:88EF                      	db  #20,#20,#21,#21,#22,#22,#23,#23,#24,#24,#25,#25,#26,#26,#FF,#00
      35.  00:88EF  20 20 21 21 22 22 23 23 24 24 25 25 26 26 FF 00 
      36.  00:88FF                      	db  #30,#30,#31,#31,#32,#32,#33,#33,#34,#34,#35,#35,#36,#36,#FF,#00
      36.  00:88FF  30 30 31 31 32 32 33 33 34 34 35 35 36 36 FF 00 
      37.  00:890F                      	db  #40,#40,#41,#41,#42,#42,#43,#43,#44,#44,#45,#45,#46,#46,#FF,#00
      37.  00:890F  40 40 41 41 42 42 43 43 44 44 45 45 46 46 FF 00 
      38.  00:891F                      	db  #50,#50,#51,#51,#52,#52,#53,#53,#54,#54,#55,#55,#56,#56,#FF,#00
      38.  00:891F  50 50 51 51 52 52 53 53 54 54 55 55 56 56 FF 00 
      39.  00:892F                      	db  #60,#60,#61,#61,#62,#62,00001111b,#63,#64,#64,#65,#65,#66,#66,#FF,#00	;ultima fila
      39.  00:892F  60 60 61 61 62 62 0F 63 64 64 65 65 66 66 FF 00 
      40.  00:893F                      	
      41.  00:893F                      habitaciones_nivel1:
      42.  00:893F                      	db  #00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00 ;primera fila
      42.  00:893F  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
      43.  00:894F                      	db  #00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00
      43.  00:894F  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
      44.  00:895F                      	db  #00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00
      44.  00:895F  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
      45.  00:896F                      	db  #00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00
      45.  00:896F  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
      46.  00:897F                      	db  #00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00
      46.  00:897F  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
      47.  00:898F                      	db  #00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00
      47.  00:898F  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
      48.  00:899F                      	db  #00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00	;ultima fila
      48.  00:899F  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
      49.  00:89AF                      	
      50.  00:89AF                      habitaciones_nivel2:
      51.  00:89AF                      	db  #00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00 ;primera fila
      51.  00:89AF  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
      52.  00:89BF                      	db  #00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00
      52.  00:89BF  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
      53.  00:89CF                      	db  #00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00
      53.  00:89CF  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
      54.  00:89DF                      	db  #00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00
      54.  00:89DF  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
      55.  00:89EF                      	db  #00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00
      55.  00:89EF  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
      56.  00:89FF                      	db  #00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00
      56.  00:89FF  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
      57.  00:8A0F                      	db  #00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00	;ultima fila
      57.  00:8A0F  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
      58.  00:8A1F                      	
      59.  00:8A1F                      habitaciones_nivel3:
      60.  00:8A1F                      	db  #00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00 ;primera fila
      60.  00:8A1F  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
      61.  00:8A2F                      	db  #00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00
      61.  00:8A2F  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
      62.  00:8A3F                      	db  #00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00
      62.  00:8A3F  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
      63.  00:8A4F                      	db  #00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00
      63.  00:8A4F  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
      64.  00:8A5F                      	db  #00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00
      64.  00:8A5F  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
      65.  00:8A6F                      	db  #00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00
      65.  00:8A6F  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
      66.  00:8A7F                      	db  #00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00	;ultima fila
      66.  00:8A7F  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
      67.  00:8A8F                      	
      68.  00:8A8F                      habitaciones_nivel4:
      69.  00:8A8F                      	db  #00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00 ;primera fila
      69.  00:8A8F  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
      70.  00:8A9F                      	db  #00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00
      70.  00:8A9F  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
      71.  00:8AAF                      	db  #00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00
      71.  00:8AAF  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
      72.  00:8ABF                      	db  #00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00
      72.  00:8ABF  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
      73.  00:8ACF                      	db  #00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00
      73.  00:8ACF  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
      74.  00:8ADF                      	db  #00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00
      74.  00:8ADF  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
      75.  00:8AEF                      	db  #00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00	;ultima fila
      75.  00:8AEF  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
      76.  00:8AFF                      	
      77.  00:8AFF                      habitaciones_nivel5:
      78.  00:8AFF                      	db  #00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00 ;primera fila
      78.  00:8AFF  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
      79.  00:8B0F                      	db  #00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00
      79.  00:8B0F  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
      80.  00:8B1F                      	db  #00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00
      80.  00:8B1F  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
      81.  00:8B2F                      	db  #00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00
      81.  00:8B2F  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
      82.  00:8B3F                      	db  #00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00
      82.  00:8B3F  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
      83.  00:8B4F                      	db  #00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00
      83.  00:8B4F  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
      84.  00:8B5F                      	db  #00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00	;ultima fila
      84.  00:8B5F  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
      85.  00:8B6F                      	
      86.  00:8B6F                      habitaciones_nivel6:
      87.  00:8B6F                      	db  #6F,#6F,#01,#01,#02,#02,#03,#03,#04,#04,#05,#05,#06,#06,#FF,#00 ;primera fila
      87.  00:8B6F  6F 6F 01 01 02 02 03 03 04 04 05 05 06 06 FF 00 
      88.  00:8B7F                      	db  #17,#10,#11,#11,#12,#12,#13,#13,#14,#14,#15,#15,#16,#16,#FF,#00
      88.  00:8B7F  17 10 11 11 12 12 13 13 14 14 15 15 16 16 FF 00 
      89.  00:8B8F                      	db  #20,#20,#21,#21,#22,#22,#23,#23,#24,#24,#25,#25,#26,#26,#FF,#00
      89.  00:8B8F  20 20 21 21 22 22 23 23 24 24 25 25 26 26 FF 00 
      90.  00:8B9F                      	db  #30,#30,#31,#31,#32,#32,#33,#33,#34,#34,#35,#35,#36,#36,#FF,#00
      90.  00:8B9F  30 30 31 31 32 32 33 33 34 34 35 35 36 36 FF 00 
      91.  00:8BAF                      	db  #40,#40,#41,#41,#42,#42,#43,#43,#44,#44,#45,#45,#46,#46,#FF,#00
      91.  00:8BAF  40 40 41 41 42 42 43 43 44 44 45 45 46 46 FF 00 
      92.  00:8BBF                      	db  #50,#50,#51,#51,#52,#52,#53,#53,#54,#54,#55,#55,#56,#56,#FF,#00
      92.  00:8BBF  50 50 51 51 52 52 53 53 54 54 55 55 56 56 FF 00 
      93.  00:8BCF                      	db  #60,#60,#61,#61,#62,#62,#63,#63,#64,#64,#65,#65,#66,#66,#FF,#00	;ultima fila
      93.  00:8BCF  60 60 61 61 62 62 63 63 64 64 65 65 66 66 FF 00 
      94.  00:8BDF                      
      95.  00:8BDF                      
     202   00:8BDF                      	
     203   00:8BDF                      	include "variables.asm"
       1.  00:8BDF                      ;;=====================================================
       2.  00:8BDF                      ;;DEFINICIÓN DE VARIABLES
       3.  00:8BDF                      ;;=====================================================
       4.  00:8BDF                      
       5.  00:8BDF                      ;Colores base de la pantalla
       6.  00:8BDF                      color_base:
       7.  00:8BDF  02 01 01            			DB		COLVERDE,COLNEGRO,COLNEGRO
       8.  00:8BE2                      			
       9.  00:8BE2                      ;colores de pantalla cuando se tira bomba
      10.  00:8BE2                      color_bomba1:
      11.  00:8BE2  08 08 08            			DB		COLROJO,COLROJO,COLROJO
      12.  00:8BE5                      color_bomba2:
      13.  00:8BE5  06 06 06            			DB		COLROJOOSC,COLROJOOSC,COLROJOOSC
      14.  00:8BE8                      
      15.  00:8BE8                      ;definicion de variable del prota usando la estructura del punto de mira
      16.  00:8BE8                      prota:		ESTRUCTURA_PUNTOMIRA
      16.  00:8BE8  64 64 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
      17.  00:8BF8                      
      18.  00:8BF8                      ;array para pintar de golpe el marcador de vidas
      19.  00:8BF8                      array_aux_vidas: 		
      20.  00:8BF8                      			DB		0,0,0,0,0,0,0,0
      20.  00:8BF8  00 00 00 00 00 00 00 00 
      21.  00:8C00                      actualiza_vidas_sn:
      22.  00:8C00  00                  			DB		0 	;valor que indica si hay que actualizar el marcador de vidas 1 ó no 0
      23.  00:8C01                      
      24.  00:8C01                      ;array para pintar de golpe el marcador de reliquias
      25.  00:8C01                      array_aux_reliquias:	
      26.  00:8C01                      			DB		0,0,0,0,0,0,0,0
      26.  00:8C01  00 00 00 00 00 00 00 00 
      27.  00:8C09                      actualiza_reliquias_sn:
      28.  00:8C09  00                  			DB		0 	;valor que indica si hay que actualizar el marcador de reliquias no 0 y el valor 50 que si (luego juego con el 100 para hacer repeticiones)
      29.  00:8C0A                      
      30.  00:8C0A                      array_aux_energia:		;array para pintar de golpe el marcador de energía
      31.  00:8C0A                      			DB		16,0,0,0,0,0,0 ;el 16 primero es porque siempre estará pintado el cuadro primero rojo
      31.  00:8C0A  10 00 00 00 00 00 00 
      32.  00:8C11                      ultimo_pos_array_aux_energia:
      33.  00:8C11  00                  			DB		0			;el array completo es de 8 pero para posicionar sin niecesidad de cálculos  etiqueto este aparte
      34.  00:8C12                      			
      35.  00:8C12                      array_aux_mapa_limpiar:	;es por facilitar el reseteo del mapa (pinto 7 lineas en negro con bios) la otra opción es más larga en código y complicada aunque más rápida
      36.  00:8C12                      			DB		0,0,0,0,0,0,0
      36.  00:8C12  00 00 00 00 00 00 00 
      37.  00:8C19                      
      38.  00:8C19                      actualiza_puertas_sn:	;0 no 1 sí (se pone a 1 cuando se cambia de habitación y al terminar se vuelve a poner a 0)
      39.  00:8C19  00                  			DB		0 	;valor que indica si hay que actualizar las puertas de una pantalla (se crea porque sólo hay que actualizar si se cambia a de hab)
      40.  00:8C1A                      			
      41.  00:8C1A                      ;; nota importante: cada vez que se cambie de nivel se actualizará el contenido
      42.  00:8C1A                      ;; arrays con mapa de tiles de las puertas
      43.  00:8C1A                      array_puerta_arriba:
      44.  00:8C1A  03 01 01 03         array_puerta_arriba1:		DB	3,1,1,3
      45.  00:8C1E  01 01 01 01         array_puerta_arriba2:		DB	1,1,1,1
      46.  00:8C22  01 01 01 01         array_puerta_arriba3:		DB	1,1,1,1
      47.  00:8C26  01 01 01 01         array_puerta_arriba4:		DB	1,1,1,1
      48.  00:8C2A  01 01 01 01         array_puerta_arriba5:		DB	1,1,1,1
      49.  00:8C2E                      
      50.  00:8C2E                      array_puerta_derecha:
      51.  00:8C2E  01 03 03            array_puerta_derecha1:		DB	1,3,3
      52.  00:8C31  01 01 03            array_puerta_derecha2:		DB	1,1,3
      53.  00:8C34  01 01 01            array_puerta_derecha3:		DB	1,1,1
      54.  00:8C37  01 01 01            array_puerta_derecha4:		DB	1,1,1
      55.  00:8C3A  01 01 01            array_puerta_derecha5:		DB	1,1,1
      56.  00:8C3D  02 01 01            array_puerta_derecha6:		DB	2,1,1
      57.  00:8C40  04 02 01            array_puerta_derecha7:		DB	4,2,1
      58.  00:8C43                      	
      59.  00:8C43  01 01 01 01         array_puerta_abajo:			DB	1,1,1,1
      60.  00:8C47                      
      61.  00:8C47                      array_puerta_izquierda:
      62.  00:8C47  03 03 01            array_puerta_izquierda1:	DB	3,3,1
      63.  00:8C4A  03 01 01            array_puerta_izquierda2:	DB	3,1,1
      64.  00:8C4D  01 01 01            array_puerta_izquierda3:	DB	1,1,1
      65.  00:8C50  01 01 01            array_puerta_izquierda4:	DB	1,1,1
      66.  00:8C53  01 01 01            array_puerta_izquierda5:	DB	1,1,1
      67.  00:8C56  01 01 02            array_puerta_izquierda6:	DB	1,1,2
      68.  00:8C59  01 02 04            array_puerta_izquierda7:	DB	1,2,4
      69.  00:8C5C                      
      70.  00:8C5C                      
      71.  00:8C5C                      ;array de 4 bytes x 32 sprites posibles en pantalla que sobreescribirá la tabla de sprites actualizando VRAM
      72.  00:8C5C                      array_sprites:
      73.  00:8C5C  00 (8)              array_sprites_pm:				DS	2 * 4
      74.  00:8C64  00 (120)            array_sprites_enem:				DS	30 * 4
      75.  00:8CDC  00 (140)            lista_enemigos:					DS	10 * ESTRUCTURA_ENEMIGO
      76.  00:8D68                      ; puntero al array a pintar en VRAM
      77.  00:8D68  00 00               puntero_array_atrib_array_VRAM: DW	0	;ARRAYSPTRIES + 8
      78.  00:8D6A                      
      79.  00:8D6A                      
     204   00:8D6A                      
     205   00:8D6A                      
     206   00:8D6A                      	
     207   00:8D6A                      ;;=====================================================
     208   00:8D6A                      ;;DEFINICIÓN DE PANTALLAS
     209   00:8D6A                      ;;=====================================================		
     210   00:8D6A                      	include "pantallas.asm"
       1.  00:8D6A                      ;;=====================================================
       2.  00:8D6A                      ;;DEFINICIÓN DE PANTALLAS
       3.  00:8D6A                      ;;=====================================================		
       4.  00:8D6A                      
       5.  00:8D6A                      ; bancos 1 y 2 y de pantalla 1 (en realidad es una pantalla de pruebas)
       6.  00:8D6A                      tiles_patrones_pantalla11:	
       7.  00:8D6A  (0023)              tiles_patrones_pantalla12:	incbin "pan1_23.bank1.bin.chr.pletter"
       8.  00:8D8D                      tiles_color_pantalla11:		
       9.  00:8D8D  (0018)              tiles_color_pantalla12:		incbin "pan1_23.bank1.bin.clr.pletter"
      10.  00:8DA5  (001A)              tiles_mapa_pantalla11:		incbin "pan1_23.bank0.bin.map.pletter"
      11.  00:8DBF  (002A)              tiles_mapa_pantalla12:		incbin "pan1_23.bank1.bin.map.pletter"
      12.  00:8DE9                      
      13.  00:8DE9                      
      14.  00:8DE9                      
      15.  00:8DE9                      
      16.  00:8DE9                      
      17.  00:8DE9                      
      18.  00:8DE9                      ; 3º banco que es la parte de puntos, vidas, mapas, etc... es común
      19.  00:8DE9  (0146)              tiles_patrones_pantalla3:	incbin "pan_33.bin.chr.pletter"
      20.  00:8F2F  (0035)              tiles_color_pantalla3:		incbin "pan_33.bin.clr.pletter"
      21.  00:8F64  (006F)              tiles_mapa_pantalla3:		incbin "pan_33.bin.map.pletter"
      22.  00:8FD3                      
      23.  00:8FD3                      ;NOTA: FALTARÍAN PANTALLAS ESPECIALES (POR DEFINIR)
     211   00:8FD3                      	
     212   00:8FD3                      END:

    LABELS
-------------------------------------------------
00:000000D8 X GTTRIG
00:000000D5 X GTSTCK
00:0000F3DB   CLIKSW
00:0000013E X RDVDP
00:00000047   WRTVDP
00:0000005C   LDIRVM
00:00000059 X LDIRMV
00:0000005F   CHGMOD
00:00000041 X DISSCR
00:00000044 X ENASCR
00:00000062   CHGCLR
00:0000F3E9   FORCLR
00:0000F3EA   BAKCLR
00:0000F3EB   BDRCLR
00:000000C3   CLS
00:0000F3DF X RG0SAV
00:0000F3E0   RG1SAV
00:0000F3E1 X RG2SAV
00:0000F3E2 X RG3SAV
00:0000F3E3 X RG4SAV
00:0000F3E4 X RG5SAV
00:0000F3E5 X RG6SAV
00:0000F3E6 X RG7SAV
00:0000F3E7 X STATFL
00:00000099   REGEST
00:00000098   REGESCVDP
00:000000A0   PSG_A
00:000000A1   PSG_W
00:000000A2   PSG_R
00:00000000   CHRTBL
00:00001800   TILMAP
00:00001B00   SPRART
00:00002000   CLRTBL
00:00003800 X SPRTBL
00:00000001   SI
00:00000000 X NO
00:00000000 X COLTRASP
00:00000001   COLNEGRO
00:00000002   COLVERDE
00:00000003 X COLVERCLA
00:00000004 X COLAZULOSC
00:00000005 X COLAZULLA
00:00000006   COLROJOOSC
00:00000007 X COLCYAN
00:00000008   COLROJO
00:00000009 X COLROJOCLA
00:0000000A X COLAMAROSC
00:0000000B X COLAMARCLA
00:0000000C X COLVERDOSC
00:0000000D X COLMAGENTA
00:0000000E X COLGRIS
00:0000000F   COLBLANCO
00:000002F8   POSMAPLIN1
00:000002D8   POSMAPLIN2
00:000002B8   POSMAPLIN3
00:00000298   POSMAPLIN4
00:00000278   POSMAPLIN5
00:00000258   POSMAPLIN6
00:00000238   POSMAPLIN7
00:0000000D   POSCARAMAP
00:00000248   POSVIDAS
00:00000011   POSRELIMAP
00:000002C8   POSRELIQ
00:00000288   POSENERG
00:000002B4   POSNIVEL
00:00000238   POSMAPA
00:000001EE   POSPUERABAJ
00:0000008E   POSPUERARRI
00:000000FC   POSPUERDERE
00:000000E1   POSPUERIZQU
00:00000013   TILEMAPPROT
00:00000009   TILEMAPVACI
00:00000010   TILEMAPROJO
00:0000000F   TILEMAPAMAR
00:0000000E   TILEMAPVERD
00:00000008   NMAXVIDREL
00:00000007   NHABNIVEL
00:000000F8 X MAXENERGIA
00:000000D9   TILEENERG8
00:000000BA   TILEENERG7
00:0000009B   TILEENERG6
00:0000007C   TILEENERG5
00:0000005D   TILEENERG4
00:0000003E   TILEENERG3
00:0000001F   TILEENERG2
00:00000000   TILENEGRO
00:00000000 X LIMPANTIZQ
00:000000FF   LIMPANTDER
00:00000000 X LIMPANTARR
00:00000080   LIMPANTABA
00:00000006 X BASEMAPY
00:00000003 X BASEMAPX
00:00000001   RETARDOREL
00:00008000   START
00:00008023   loop_principal
00:0000802A X mira_pinta_puertas
00:00008036   fin_mira_pinta_puertas
00:00008036 X mira_pinta_vidas
00:0000803F   fin_mira_pinta_vidas
00:0000803F X mira_pinta_reliquias
00:0000804E   fin_mira_pinta_reliquias
00:00008057 X fin_programa_principal
00:00008058 X efecto_imagen_tira_reliquia
00:00008068   efecto_imagen_tira_reliquia.intercambia_color_fondo
00:00008073   efecto_imagen_tira_reliquia.otro_fondo
00:00008079 X fin_efecto_imagen_tira_reliquia
00:00008079   inicializa_variables_pruebas
00:000080A6 X fin_inicializa_variables_pruebas
00:000080A7   inicializa_niveles
00:000080B6   inicializa_niveles.bucle_borra_hab
00:000080BB X fin_iniciliza_niveles
00:000080BC   actualiza_marcador_vidas
00:000080C2   loop_marcador_caras_negro
00:000080C7 X fin_loop_marcador_caras_negro
00:000080CE   loop_marcador_caras
00:000080D3 X fin_loop_marcador_caras
00:000080D4 X fin_actualiza_marcador_vidas
00:000080D5   actualiza_marcador_reliquias
00:000080DA   loop_marcador_reliquias_negro
00:000080DF X fin_loop_marcador_reliquias_negro
00:000080E6   loop_marcador_reliquias
00:000080EB X fin_loop_marcador_reliquias
00:000080EB X fin_actualiza_marcador_reliquias
00:000080EC   localiza_info_habitacion
00:000080F9   localiza_info_habitacion.primer_producto
00:00008105   localiza_info_habitacion.segundo_producto
00:00008108 X localiza_info_habitacion.fin_seg_prod
00:0000810C   localiza_info_habitacion.no_suma_niveles_previos
00:0000811F   localiza_info_habitacion.situa_columna
00:00008131 X fin_localiza_info_habitacion
00:00008132   color_pantalla
00:00008143 X fin_color_pantalla
00:00008144   sub_preparapantalla
00:00008144 X elimina_clic
00:00008148 X fin_elimina_clic
00:00008148 X limpia_pantalla
00:0000814C X fin_limpia_pantalla
00:00008152 X screen2
00:00008157 X sprites_16_16
00:00008165 X fin_sub_preparapantalla
00:00008165   pinta_pantalla_completa
00:0000816B X fin_pinta_pantalla_completa
00:0000816C   pinta_parte_superior_pantalla
00:000081A2 X fin_pinta_parte_superior_pantalla
00:000081A3   pinta_parte_inferior_pantalla
00:000081BE X fin_pinta_parte_inferior_pantalla
00:000081BE   pinta_vidas
00:000081D0 X fin_pinta_vidas
00:000081D1   pinta_reliquias
00:000081DF X fin_pinta_reliquias
00:000081E0   pinta_nivel
00:000081EC X fin_pinta_nivel
00:000081ED   pinta_tile_suelto
00:000081FA X fin_pinta_tile_suelto
00:000081FB   mira_pinta_energia
00:00008201 X pinta_ener
00:00008201 X pinta_ener_tile_8
00:0000820D   pinta_ener_tile_8_negro
00:0000820E   pinta_ener_tile_7
00:00008218   pinta_ener_tile_7_negro
00:00008219   pinta_ener_tile_6
00:00008223   pinta_ener_tile_6_negro
00:00008224   pinta_ener_tile_5
00:0000822E   pinta_ener_tile_5_negro
00:0000822F   pinta_ener_tile_4
00:00008239   pinta_ener_tile_4_negro
00:0000823A   pinta_ener_tile_3
00:00008244   pinta_ener_tile_3_negro
00:00008245   pinta_ener_tile_2
00:0000824F   pinta_ener_tile_2_negro
00:00008250   fin_mira_pinta_energia
00:00008252   pinta_energia
00:00008260 X fin_pinta_energia
00:00008261   borra_mapa
00:000082B7 X fin_borra_mapa
00:000082B8   pinta_array
00:000082C6   pinta_array.pa_pinta_fila
00:000082C7   pinta_array.pa_pinta_columnas
00:000082EA X fin_pinta_array
00:000082EB   wordaux1
00:000082ED   wordaux2
00:000082EF   pinta_puertas
00:0000830C X fin_pinta_puertas
00:0000830D   pinta_puerta_aba
00:00008322 X fin_pinta_puerta_aba
00:00008322   pinta_puerta_arr
00:00008337 X fin_pinta_puerta_arr
00:00008337   pinta_puerta_der
00:0000834C X fin_pinta_puerta_der
00:0000834C   pinta_puerta_izq
00:00008361 X fin_pinta_puerta_izq
00:00008361   posiciona_en_mapa
00:00008365 X posiciona_en_mapa.sumar_fila
00:0000838F X posiciona_en_mapa.fila_0
00:00008396   posiciona_en_mapa.fila_1
00:0000839D   posiciona_en_mapa.fila_2
00:000083A4   posiciona_en_mapa.fila_3
00:000083AB   posiciona_en_mapa.fila_4
00:000083B2   posiciona_en_mapa.fila_5
00:000083B9 X posiciona_en_mapa.fila_6
00:000083B9   posiciona_en_mapa.sumar_columna
00:000083CC   pinta_pos_mapa_vacio
00:000083CE   fin_pinta_pos_mapa
00:000083D1 X fin_posiciona_en_mapa
00:000083D1   carga_patrones_sprites_nivel1
00:000084A1 X fin_carga_patrones_sprites
00:000084A2   render_sprites
00:000084AE X fin_actualiza_array_sprites_vram
00:000084AE   vuelca_resultado_puntomira_array
00:000084D3 X vuelca_resultado_puntomira_array.codigo_color_1
00:000084DC   vuelca_resultado_puntomira_array.codigo_color_2
00:000084E5 X fin_vuelca_resultado_puntomira_array
00:000084E5   check_player
00:00008504 X f
00:00008505   mueve_arriba
00:00008510   mueve_arriba.no_decrementa_y
00:00008511 X fin_mueve_arriba
00:00008512   mueve_derecha
00:0000851F   mueve_derecha.no_incrementa_x
00:00008520 X fin_mueve_derecha
00:00008521   mueve_abajo
00:0000852E   mueve_abajo.no_incrementa_y
00:0000852F X fin_mueve_abajo
00:00008530   mueve_izquierda
00:0000853B   mueve_izquierda.no_decrementa_x
00:0000853C X fin_mueve_izquierda
00:0000853D   mira_disparo
00:0000853D X mira_disparo.mira_boton_pulsado1
00:0000854B   mira_disparo.mira_boton_pulsado2
00:0000855F X fin_mira_disparo
00:00008560   update_controllers_status
00:00008597   read_joy_0
00:000085AB   check_8th_keyboard_row
00:000085B9   check_4th_keyboard_row
00:000085C7   depack_VRAM
00:000085F4   literal
00:000085F9   loop
00:00008602 X getlen
00:00008608   lus
00:00008625   lenok
00:00008632   mode7
00:00008638   mode6
00:0000863E   mode5
00:00008644   mode4
00:0000864A   mode3
00:00008650   mode2
00:00008660   offsok
00:0000866B   offsok.loop
00:0000868D   getbit
00:00008691   getbitexx
00:00008697   Depack_out
00:00008699   modes
00:000086A7   prota_nivel
00:000086A8   prota_vidas
00:000086A9   prota_reliquias
00:000086AA   prota_pos_mapx
00:000086AB   prota_pos_mapy
00:000086AC   prota_energia
00:00000000 X ESTRUCTURA_PUNTOMIRA.posx
00:00000001 X ESTRUCTURA_PUNTOMIRA.posy
00:00000002 X ESTRUCTURA_PUNTOMIRA.escena
00:00000003 X ESTRUCTURA_PUNTOMIRA.velocidad
00:00000004 X ESTRUCTURA_PUNTOMIRA.boton2_pressed
00:00000005 X ESTRUCTURA_PUNTOMIRA.pm_aux1
00:00000006 X ESTRUCTURA_PUNTOMIRA.pm_aux2
00:00000007 X ESTRUCTURA_PUNTOMIRA.pm_aux3
00:00000008 X ESTRUCTURA_PUNTOMIRA.pm_aux4
00:00000009 X ESTRUCTURA_PUNTOMIRA.pm_aux5
00:0000000A X ESTRUCTURA_PUNTOMIRA.pm_aux6
00:0000000B X ESTRUCTURA_PUNTOMIRA.pm_aux7
00:0000000C X ESTRUCTURA_PUNTOMIRA.pm_aux8
00:0000000D X ESTRUCTURA_PUNTOMIRA.pm_aux9
00:0000000E X ESTRUCTURA_PUNTOMIRA.pm_aux10
00:0000000F X ESTRUCTURA_PUNTOMIRA.pm_aux11
00:00000010 X ESTRUCTURA_PUNTOMIRA
00:00000000 X ESTRUCTURA_ENEMIGO.tipo
00:00000001 X ESTRUCTURA_ENEMIGO.posx
00:00000002 X ESTRUCTURA_ENEMIGO.posy
00:00000003 X ESTRUCTURA_ENEMIGO.color
00:00000004 X ESTRUCTURA_ENEMIGO.escena
00:00000005 X ESTRUCTURA_ENEMIGO.contador_siguiente_escena
00:00000006 X ESTRUCTURA_ENEMIGO.reset_contador
00:00000007 X ESTRUCTURA_ENEMIGO.dano
00:00000008 X ESTRUCTURA_ENEMIGO.energia
00:00000009 X ESTRUCTURA_ENEMIGO.ver_hor
00:0000000A X ESTRUCTURA_ENEMIGO.manejador_dibujo
00:0000000C X ESTRUCTURA_ENEMIGO.en_aux3
00:0000000D X ESTRUCTURA_ENEMIGO.en_aux4
00:0000000E   ESTRUCTURA_ENEMIGO
00:00000000 X ESTRUCTURA_EXTRA.tipo
00:00000001 X ESTRUCTURA_EXTRA.posx
00:00000002 X ESTRUCTURA_EXTRA.posy
00:00000003 X ESTRUCTURA_EXTRA.color
00:00000004 X ESTRUCTURA_EXTRA.contador
00:00000005 X ESTRUCTURA_EXTRA.en_aux1
00:00000006 X ESTRUCTURA_EXTRA.en_aux2
00:00000007 X ESTRUCTURA_EXTRA.en_aux3
00:00000008 X ESTRUCTURA_EXTRA.en_aux4
00:00000009 X ESTRUCTURA_EXTRA.en_aux5
00:0000000A X ESTRUCTURA_EXTRA.en_aux6
00:0000000B X ESTRUCTURA_EXTRA.en_aux7
00:0000000C X ESTRUCTURA_EXTRA.en_aux8
00:0000000D X ESTRUCTURA_EXTRA.en_aux9
00:0000000E X ESTRUCTURA_EXTRA.en_aux10
00:0000000F X ESTRUCTURA_EXTRA.en_aux11
00:00000010 X ESTRUCTURA_EXTRA
00:000086AD X sprites_pantantalla
00:000086AD   sprite_punto_mira_1
00:000086CD   sprite_punto_mira_2
00:000086ED   sprite_punto_mira_1_mejorado
00:0000870D   sprite_punto_mira_2_mejorado
00:0000872D   sprite_reliquia
00:0000874D X sprite_vida_extra
00:0000876D   sprite_planta
00:0000878D   sprite_ballesta_mejorada
00:000087AD   sprite_ciempies1
00:000087CD   sprite_ciempies2
00:000087ED   sprite_arana1
00:0000880D   sprite_arana2
00:0000882D   sprite_serpiente1
00:0000884D   sprite_serpiente2
00:0000886D   sprite_murcielago1
00:0000888D   sprite_murcielago2
00:000088AD   sprite_explosion
00:000088CD   habitacion_actual
00:000088CF   habitaciones_juego
00:000088CF X habitaciones_nivel0
00:0000893F X habitaciones_nivel1
00:000089AF X habitaciones_nivel2
00:00008A1F X habitaciones_nivel3
00:00008A8F X habitaciones_nivel4
00:00008AFF X habitaciones_nivel5
00:00008B6F X habitaciones_nivel6
00:00008BDF   color_base
00:00008BE2   color_bomba1
00:00008BE5   color_bomba2
00:00008BE8 X prota
00:00008BE8   prota.posx
00:00008BE9   prota.posy
00:00008BEA   prota.escena
00:00008BEB X prota.velocidad
00:00008BEC X prota.boton2_pressed
00:00008BED X prota.pm_aux1
00:00008BEE X prota.pm_aux2
00:00008BEF X prota.pm_aux3
00:00008BF0 X prota.pm_aux4
00:00008BF1 X prota.pm_aux5
00:00008BF2 X prota.pm_aux6
00:00008BF3 X prota.pm_aux7
00:00008BF4 X prota.pm_aux8
00:00008BF5 X prota.pm_aux9
00:00008BF6 X prota.pm_aux10
00:00008BF7 X prota.pm_aux11
00:00008BF8   array_aux_vidas
00:00008C00   actualiza_vidas_sn
00:00008C01   array_aux_reliquias
00:00008C09   actualiza_reliquias_sn
00:00008C0A   array_aux_energia
00:00008C11   ultimo_pos_array_aux_energia
00:00008C12   array_aux_mapa_limpiar
00:00008C19   actualiza_puertas_sn
00:00008C1A   array_puerta_arriba
00:00008C1A X array_puerta_arriba1
00:00008C1E X array_puerta_arriba2
00:00008C22 X array_puerta_arriba3
00:00008C26 X array_puerta_arriba4
00:00008C2A X array_puerta_arriba5
00:00008C2E   array_puerta_derecha
00:00008C2E X array_puerta_derecha1
00:00008C31 X array_puerta_derecha2
00:00008C34 X array_puerta_derecha3
00:00008C37 X array_puerta_derecha4
00:00008C3A X array_puerta_derecha5
00:00008C3D X array_puerta_derecha6
00:00008C40 X array_puerta_derecha7
00:00008C43   array_puerta_abajo
00:00008C47   array_puerta_izquierda
00:00008C47 X array_puerta_izquierda1
00:00008C4A X array_puerta_izquierda2
00:00008C4D X array_puerta_izquierda3
00:00008C50 X array_puerta_izquierda4
00:00008C53 X array_puerta_izquierda5
00:00008C56 X array_puerta_izquierda6
00:00008C59 X array_puerta_izquierda7
00:00008C5C   array_sprites
00:00008C5C   array_sprites_pm
00:00008C64 X array_sprites_enem
00:00008CDC X lista_enemigos
00:00008D68 X puntero_array_atrib_array_VRAM
00:00008D6A   tiles_patrones_pantalla11
00:00008D6A   tiles_patrones_pantalla12
00:00008D8D   tiles_color_pantalla11
00:00008D8D   tiles_color_pantalla12
00:00008DA5   tiles_mapa_pantalla11
00:00008DBF   tiles_mapa_pantalla12
00:00008DE9   tiles_patrones_pantalla3
00:00008F2F   tiles_color_pantalla3
00:00008F64   tiles_mapa_pantalla3
00:00008FD3   END


 Output: t4.out
-------------------------------------------------

 Page: 00
  Org: 00008000  Size: *  Used: 00000000

    No output

 Output: t4.bin
-------------------------------------------------

 Page: 00
  Org: 00008000  Size: *  Used: 00000FDA

   Address   Length Align   Label
   00008000    4058         START
