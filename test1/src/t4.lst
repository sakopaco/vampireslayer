Sjasm Z80 Assembler v0.42c - www.xl2s.tk             [2021.10.09 - 22:07:30]

t4.asm
Errors: 0

       1   00:0000                      	OUTPUT	"t4.bin"
       2   00:8000                      	
       3   00:8000                      ;;=====================================================
       4   00:8000                      ;;DEFINICIÓN DE CONSTANTES
       5   00:8000                      ;;=====================================================	
       6   00:8000                      	include "constantes.asm"
       1.  00:8000                      ;;=====================================================
       2.  00:8000                      ;; FICHERO constantes.asm
       3.  00:8000                      ;;=====================================================
       4.  00:8000                      
       5.  00:8000                      ;;ETIQUETAS/CONSTANTES BIOS TECLADO
       6.  00:8000  (00:00D8)           GTTRIG		equ		#00D8	;Returns current trigger status
       7.  00:8000  (00:00D5)           GTSTCK		equ		#00D5	;Returns the joystick/cursors status
       8.  00:8000  (00:F3DB)           CLIKSW		equ		#F3DB	;deshabilita el sonido de clic cuando se pulsa una tecla
       9.  00:8000                      
      10.  00:8000                      ;;ETIQUETAS/CONSTANTES BIOS VDP
      11.  00:8000  (00:013E)           RDVDP		equ		#013E	;lee registro status VDP
      12.  00:8000  (00:0047)           WRTVDP		equ		#0047	;escribe registros del VDP
      13.  00:8000  (00:005C)           LDIRVM		equ		#005C	;RAM/ROM -> VRAM
      14.  00:8000  (00:0059)           LDIRMV		equ		#0059	;VRAM -> RAM
      15.  00:8000  (00:005F)           CHGMOD		equ		#005F	;cambia modo pantalla (screen mode)
      16.  00:8000  (00:0041)           DISSCR  	equ		#0041	;desactiva pantanlla
      17.  00:8000  (00:0044)           ENASCR  	equ		#0044	;activa pantalla
      18.  00:8000  (00:0062)           CHGCLR  	equ		#0062	;cambia color de pantalla (toca A y direcciones)
      19.  00:8000  (00:F3E9)           FORCLR		equ		#F3E9	;zona memoria color foreground
      20.  00:8000  (00:F3EA)           BAKCLR  	equ		#F3EA	;zona memoria color background
      21.  00:8000  (00:F3EB)           BDRCLR 		equ		#F3EB	;zona memoria bordercolor
      22.  00:8000  (00:00C3)           CLS			equ		#00C3	;limpia pantalla (necesita A=0)
      23.  00:8000                      
      24.  00:8000                      ;;ETIQUETAS/CONSTANTES REGISTROS VDP
      25.  00:8000  (00:F3DF)           RG0SAV		equ		#F3DF	;Mirror of VDP register 0 (Basic: VDP(0))
      26.  00:8000  (00:F3E0)           RG1SAV		equ		#F3E0	;Mirror of VDP register 1 (Basic: VDP(1))
      27.  00:8000  (00:F3E1)           RG2SAV		equ		#F3E1	;Mirror of VDP register 2 (Basic: VDP(2))
      28.  00:8000  (00:F3E2)           RG3SAV		equ		#F3E2	;Mirror of VDP register 3 (Basic: VDP(3))
      29.  00:8000  (00:F3E3)           RG4SAV		equ		#F3E3	;Mirror of VDP register 4 (Basic: VDP(4))
      30.  00:8000  (00:F3E4)           RG5SAV		equ		#F3E4	;Mirror of VDP register 5 (Basic: VDP(5))
      31.  00:8000  (00:F3E5)           RG6SAV		equ		#F3E5	;Mirror of VDP register 6 (Basic: VDP(6))
      32.  00:8000  (00:F3E6)           RG7SAV		equ		#F3E6	;Mirror of VDP register 7 (Basic: VDP(7))
      33.  00:8000  (00:F3E7)           STATFL		equ		#F3E7	;Mirror of VDP(8) status register (S#0)
      34.  00:8000                      
      35.  00:8000  (00:0099)           REGEST		equ		#0099	;registro de estado para escribir directamente en VRAM
      36.  00:8000  (00:0098)           REGESCVDP	equ		#0098	;registro donde escribir valor para VRAM
      37.  00:8000                      
      38.  00:8000                      ;;ETIQUETAS/CONSTANTES REGISTROS PSG (PARA JOYSTICK)
      39.  00:8000  (00:00A0)           PSG_A  equ  0a0h  ;reg address
      40.  00:8000  (00:00A1)           PSG_W  equ  0a1h  ;reg data WR
      41.  00:8000  (00:00A2)           PSG_R  equ  0a2h  ;reg data
      42.  00:8000                      
      43.  00:8000                      
      44.  00:8000                      ;;ETIQUETAS DE ZONAS DE MEMORIA DE LA VPD (MSX1)
      45.  00:8000  (00:0000)           CHRTBL		equ		#0000
      46.  00:8000  (00:1800)           TILMAP		equ		#1800
      47.  00:8000  (00:1900)           TILMAPBANK1 equ		#1900
      48.  00:8000  (00:1B00)           SPRART		equ		#1B00
      49.  00:8000  (00:2000)           CLRTBL		equ		#2000
      50.  00:8000  (00:3800)           SPRTBL		equ		#3800
      51.  00:8000                      
      52.  00:8000                      
      53.  00:8000                      ;;ETIQUETAS ESTANDAR PARA DAR MÁS CLARIDAD AL CODIGO
      54.  00:8000  (00:0001)           SI			equ		1
      55.  00:8000  (00:0000)           NO			equ		0
      56.  00:8000  (00:0004)           LIMCADENCIA equ		4	;nº de veces que se ejecutará el disparo antes de ejecutar un disparo real (porque cuando se pulsa la tecl dispara 3 ó 4 veces de rápido que va)
      57.  00:8000                      ;hay que estudiar si 3 es un nº mejor
      58.  00:8000                      
      59.  00:8000                      
      60.  00:8000                      
      61.  00:8000                      ;;PALETA DE COLORES DEL MSX
      62.  00:8000  (00:0000)           COLTRASP	equ		0
      63.  00:8000  (00:0001)           COLNEGRO	equ		1
      64.  00:8000  (00:0002)           COLVERDE	equ		2
      65.  00:8000  (00:0003)           COLVERCLA	equ		3
      66.  00:8000  (00:0004)           COLAZULOSC	equ		4
      67.  00:8000  (00:0005)           COLAZULLA	equ		5
      68.  00:8000  (00:0006)           COLROJOOSC	equ		6
      69.  00:8000  (00:0007)           COLCYAN		equ		7
      70.  00:8000  (00:0008)           COLROJO		equ		8
      71.  00:8000  (00:0009)           COLROJOCLA	equ		9
      72.  00:8000  (00:000A)           COLAMAROSC	equ		10
      73.  00:8000  (00:000B)           COLAMARCLA	equ		11
      74.  00:8000  (00:000C)           COLVERDOSC	equ		12
      75.  00:8000  (00:000D)           COLMAGENTA	equ		13
      76.  00:8000  (00:000E)           COLGRIS		equ		14
      77.  00:8000  (00:000F)           COLBLANCO	equ		15
      78.  00:8000                      
      79.  00:8000                      
      80.  00:8000                      
      81.  00:8000                      ;;ETIQUETAS ESPECIFICAS PARA DAR MÁS CLARIDAD AL CODIGO (relacionadas con posiciones en mapa vdp)
      82.  00:8000  (00:02F8)           POSMAPLIN1  equ		#02F8
      83.  00:8000  (00:02D8)           POSMAPLIN2  equ		#02D8
      84.  00:8000  (00:02B8)           POSMAPLIN3  equ		#02B8
      85.  00:8000  (00:0298)           POSMAPLIN4  equ		#0298
      86.  00:8000  (00:0278)           POSMAPLIN5  equ		#0278
      87.  00:8000  (00:0258)           POSMAPLIN6  equ		#0258
      88.  00:8000  (00:0238)           POSMAPLIN7  equ		#0238
      89.  00:8000                      
      90.  00:8000  (00:000D)           POSCARAMAP	equ		#000D
      91.  00:8000  (00:0248)           POSVIDAS	equ		#0248
      92.  00:8000  (00:0011)           POSRELIMAP	equ		#0011
      93.  00:8000  (00:02C8)           POSRELIQ	equ		#02C8
      94.  00:8000  (00:0288)           POSENERG	equ		#0288
      95.  00:8000  (00:02B4)           POSNIVEL	equ		#02B4
      96.  00:8000  (00:0238)           POSMAPA		equ 	#0238
      97.  00:8000                      
      98.  00:8000  (00:01EE)           POSPUERABAJ equ		#01EE
      99.  00:8000  (00:008E)           POSPUERARRI equ		#008E
     100.  00:8000  (00:00FC)           POSPUERDERE equ		#00FC
     101.  00:8000  (00:00E1)           POSPUERIZQU equ		#00E1
     102.  00:8000                      
     103.  00:8000                      ;;POSICIONES DE LAS AYUDAS EN PANTALLA BANCO 1
     104.  00:8000  (00:00A3)           POSORACION	equ		163
     105.  00:8000  (00:00A7)           POSCRUZ		equ		167
     106.  00:8000  (00:00AB)           POSAGUA		equ		171
     107.  00:8000  (00:00AF)           POSARMAD	equ		175
     108.  00:8000  (00:00B3)           POSPLANTA	equ		179
     109.  00:8000  (00:00B6)           POSVIDAEXT	equ		182
     110.  00:8000  (00:00BB)           POSBALLES	equ		187
     111.  00:8000                      
     112.  00:8000                      ;;POSICIONES DE LAS AYUDAS EN PANTALLA PIXEL CENTRAL X
     113.  00:8000  (00:0020)           POSORACIONX	equ		32
     114.  00:8000  (00:0040)           POSCRUZX	equ		64
     115.  00:8000  (00:0060)           POSAGUAX	equ		96
     116.  00:8000  (00:0080)           POSARMADX	equ		128
     117.  00:8000  (00:00A0)           POSPLANTAX	equ		160
     118.  00:8000  (00:00C0)           POSVIDAEXTX	equ		192
     119.  00:8000  (00:00E0)           POSBALLESX	equ		224
     120.  00:8000                      
     121.  00:8000                      ;;POSICIONES DE LAS AYUDAS EN PANTALLA PIXEL CENTRAL Y
     122.  00:8000  (00:0070)           POSAYUDASY	equ		112	;se pone por poner porque las estructuras de ayudas ya se inicializan con este valor
     123.  00:8000                      
     124.  00:8000                      ;;ESTADO ESTRUCTURA
     125.  00:8000  (00:0000)           INACTIVA	equ		0
     126.  00:8000  (00:0001)           ACTIVA		equ		1
     127.  00:8000                      
     128.  00:8000                      ;;POSICIONES DE LAS ANTORCHAS
     129.  00:8000  (00:0088)           POSANTOR1	equ		136
     130.  00:8000  (00:0097)           POSANTOR2	equ		151
     131.  00:8000  (00:00C4)           MAPLLAMA1	equ		196
     132.  00:8000  (00:00C5)           MAPLLAMA2	equ		197
     133.  00:8000  (00:00FF)           RESETLLAMA	equ		255
     134.  00:8000                      
     135.  00:8000                      ;;POSICIONES DE LOS ESQUELETOS
     136.  00:8000  (00:0088)           POSESQUEL1	equ		136
     137.  00:8000  (00:0095)           POSESQUEL2	equ		149
     138.  00:8000  (00:00A9)           POSCALAVE1	equ		169
     139.  00:8000  (00:00B6)           POSCALAVE2	equ		182
     140.  00:8000  (00:0019)           RESETESQUEL	equ		25
     141.  00:8000  (00:0004)           RESETESCENAESQUEL 	equ	4	;hay 4 caras con las que el esqueleto cambia (se ha metido el 0 para facilitar código)
     142.  00:8000                      
     143.  00:8000                      ;;ETIQUETAS ESPECIFICAS PARA DAR MÁS CLARIDAD AL CODIGO (relacionadas con posiciones en en el banco de memoria)
     144.  00:8000  (00:0013)           TILEPROTAM  equ		19		;tile del prota para pintar en mapa
     145.  00:8000  (00:0009)           TILEGRISM	equ		9		;tile gris que representa vacio (por donde el prota va pasando)
     146.  00:8000  (00:0010)           TILEMAPROJO equ		16
     147.  00:8000  (00:000F)           TILEMAPAMAR equ		15
     148.  00:8000  (00:000E)           TILEMAPVERD equ		14
     149.  00:8000                      
     150.  00:8000                      
     151.  00:8000                      ;;ETIQUETAS ESPECIFICAS PARA DAR MÁS CLARIDAD AL CODIGO (generales)
     152.  00:8000  (00:0008)           NMAXVIDREL	equ		8		;el número máximo de vidas y de reliquias es de 8
     153.  00:8000  (00:0007)           NHABNIVEL	equ		7
     154.  00:8000  (00:00F8)           MAXENERGIA  equ		248
     155.  00:8000  (00:00D9)           TILEENERG8  equ		217
     156.  00:8000  (00:00BA)           TILEENERG7  equ		186
     157.  00:8000  (00:009B)           TILEENERG6  equ		155
     158.  00:8000  (00:007C)           TILEENERG5  equ		124
     159.  00:8000  (00:005D)           TILEENERG4  equ		93
     160.  00:8000  (00:003E)           TILEENERG3  equ		62
     161.  00:8000  (00:001F)           TILEENERG2  equ		31
     162.  00:8000  (00:0000)           TILENEGRO	equ		0
     163.  00:8000                      
     164.  00:8000                      ;limites
     165.  00:8000  (00:0000)           LIMPANTIZQ  equ		0
     166.  00:8000  (00:00FF)           LIMPANTDER  equ		255
     167.  00:8000  (00:0000)           LIMPANTARR  equ		0
     168.  00:8000  (00:0080)           LIMPANTABA  equ		128
     169.  00:8000                      
     170.  00:8000                      
     171.  00:8000                      ;matriz de 7x7 empieza en 0, y fila y x col, cuento desde esquina sup izq
     172.  00:8000  (00:0006)           BASEMAPY	equ		6
     173.  00:8000  (00:0003)           BASEMAPX	equ		3
     174.  00:8000                      
     175.  00:8000                      
     176.  00:8000                      
     177.  00:8000                      ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
     178.  00:8000                      ;; CONSTANTES PARA INTERRUPCIONES
     179.  00:8000                      ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
     180.  00:8000  (00:FD9A)           H.KEYI		equ     	#FD9A
     181.  00:8000  (00:FD9F)           H.TIMI	 	equ     	#FD9F
     182.  00:8000                      
     183.  00:8000                      
     184.  00:8000                      ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
     185.  00:8000                      ;; CONSTANTES PARA SONIDO 
     186.  00:8000                      ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
     187.  00:8000                      
     188.  00:8000  (F000)              	map		#f000
     189.  00:8000                      
     190.  00:8000                      ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;PT3 REPLAYER
     191.  00:8000  (00:F000)           PT3_SETUP:		#1	;set bit0 to 1, if you want to play without looping
     192.  00:8000                      					;bit7 is set each time, when loop point is passed
     193.  00:8000  (00:F001)           PT3_MODADDR:	#2
     194.  00:8000  (00:F003)           PT3_CrPsPtr:	#2
     195.  00:8000  (00:F005)           PT3_SAMPTRS:	#2
     196.  00:8000  (00:F007)           PT3_OrnPtrs:	#2
     197.  00:8000  (00:F009)           PT3_PDSP:		#2
     198.  00:8000  (00:F00B)           PT3_CSP:		#2
     199.  00:8000  (00:F00D)           PT3_PSP:		#2
     200.  00:8000  (00:F00F)           PT3_PrNote:		#1
     201.  00:8000  (00:F010)           PT3_PrSlide:	#2
     202.  00:8000  (00:F012)           PT3_AdInPtA:	#2
     203.  00:8000  (00:F014)           PT3_AdInPtB:	#2
     204.  00:8000  (00:F016)           PT3_AdInPtC:	#2
     205.  00:8000  (00:F018)           PT3_LPosPtr:	#2
     206.  00:8000  (00:F01A)           PT3_PatsPtr:	#2
     207.  00:8000  (00:F01C)           PT3_Delay:		#1
     208.  00:8000  (00:F01D)           PT3_AddToEn:	#1
     209.  00:8000  (00:F01E)           PT3_Env_Del:	#1
     210.  00:8000  (00:F01F)           PT3_ESldAdd:	#2
     211.  00:8000  (00:F021)           PT3_NTL3:		#2	; AND A / NOP (note table creator)
     212.  00:8000                      
     213.  00:8000  (00:F023)           VARS:			#0
     214.  00:8000                      
     215.  00:8000  (00:F023)           ChanA:			#29			;CHNPRM_Size
     216.  00:8000  (00:F040)           ChanB:			#29			;CHNPRM_Size
     217.  00:8000  (00:F05D)           ChanC:			#29			;CHNPRM_Size
     218.  00:8000                      
     219.  00:8000                      ;GlobalVars
     220.  00:8000  (00:F07A)           DelyCnt:		#1
     221.  00:8000  (00:F07B)           CurESld:		#2
     222.  00:8000  (00:F07D)           CurEDel:		#1
     223.  00:8000  (00:F07E)           Ns_Base_AddToNs:	#0
     224.  00:8000  (00:F07E)           Ns_Base:		#1
     225.  00:8000  (00:F07F)           AddToNs:		#1
     226.  00:8000                      
     227.  00:8000  (00:F080)           NT_:			#192	; Puntero a/tabla de frecuencias
     228.  00:8000                      
     229.  00:8000  (00:F140)           AYREGS:			#0
     230.  00:8000  (00:F140)           VT_:			#14
     231.  00:8000  (00:F14E)           EnvBase:		#2
     232.  00:8000  (00:F150)           VAR0END:		#0
     233.  00:8000                      
     234.  00:8000  (00:F150)           T1_:			#0		
     235.  00:8000  (00:F150)           T_NEW_1:		#0
     236.  00:8000  (00:F150)           T_OLD_1:		#24
     237.  00:8000  (00:F168)           T_OLD_2:		#24
     238.  00:8000  (00:F180)           T_NEW_3:		#0
     239.  00:8000  (00:F180)           T_OLD_3:		#2
     240.  00:8000  (00:F182)           T_OLD_0:		#0
     241.  00:8000  (00:F182)           T_NEW_0:		#24
     242.  00:8000  (00:F19A)           T_NEW_2:		#166
     243.  00:8000                      ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;PT3 REPLAYER END
     244.  00:8000                      
     245.  00:8000                      ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ayFX REPLAYER 
     246.  00:8000  (00:F240)           ayFX_MODE:		#1			; ayFX mode
     247.  00:8000  (00:F241)           ayFX_BANK:		#2			; Current ayFX Bank
     248.  00:8000  (00:F243)           ayFX_PRIORITY:	#1			; Current ayFX stream priotity
     249.  00:8000  (00:F244)           ayFX_POINTER:	#2			; Pointer to the current ayFX stream
     250.  00:8000  (00:F246)           ayFX_TONE:		#2			; Current tone of the ayFX stream
     251.  00:8000  (00:F248)           ayFX_NOISE:		#1			; Current noise of the ayFX stream
     252.  00:8000  (00:F249)           ayFX_VOLUME:	#1			; Current volume of the ayFX stream
     253.  00:8000  (00:F24A)           ayFX_CHANNEL:	#1			; PSG channel to play the ayFX stream
     254.  00:8000                      
     255.  00:8000                      	;IF (AYFXRELATIVE == 1 ) 
     256.  00:8000                      ;ayFX_VT:	ds	2			; ayFX relative volume table pointer
     257.  00:8000                      	;ENDIF
     258.  00:8000                      ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ayFX REPLAYER END
     259.  00:8000                      
     260.  00:8000                      
     261.  00:8000                      
       7   00:8000                      
       8   00:8000                      ;;=====================================================
       9   00:8000                      ;;DEFINICIÓN DE CABECERA DE ARCHIVO BIN
      10   00:8000                      ;;=====================================================		
      11   00:8000                      	include "cabecerabin.asm"
       1.  00:8000                      ;;=====================================================
       2.  00:8000                      ;; FICHERO cabecera.asm
       3.  00:8000                      ;;=====================================================
       4.  00:8000                      
       5.  00:8000                      ;;CABECERA FICHERO BIN
       6.  00:8000  FE                  	DB	#FE
       7.  00:8001  00 80               	DW	START
       8.  00:8003  EE BB               	DW	END
       9.  00:8005  00 80               	DW	START
      10.  00:8007                      
      11.  00:8007                      ;;INICIO CÓDIGO PROGRAMA	
      12.  00:8007                      	ORG	#8000
      13.  00:8000                      	
      12   00:8000                      	
      13   00:8000                      START:	
      14   00:8000                      	;inicializa pantalla y entonrno
      15   00:8000  CD 05 81            	CALL	sub_preparapantalla			;screen 2,2 sin click al pulsar tecla y color 16,1,1
      16   00:8003                      	
      17   00:8003                      	;inicializa variables para parametrizar funciones y que lo que se muestre sea variable (nº vidas, mapa, puertas, pantalla, etc...)
      18   00:8003  CD 45 80            	CALL	inicializa_variables_pruebas
      19   00:8006                      	
      20   00:8006                      	;inicializa los niveles por partida
      21   00:8006  CD 68 80            	CALL	inicializa_niveles			;no es necesario parametrizarlo según el nivel del usuario ya que se cargan todos
      22   00:8009                      	
      23   00:8009                      	;inicializa las estructuras de forma particular según ayuDa pero sin poner valores de posición
      24   00:8009  CD 4E 98            	CALL	inicializa_ayudas
      25   00:800C                      	
      26   00:800C                      	;inicializa las estructuras de las antorchas y esqueletos
      27   00:800C  CD B7 84            	CALL	inicializa_antorchas
      28   00:800F  CD D9 84            	CALL	inicializa_esqueletos
      29   00:8012                      	
      30   00:8012                      	;pinta la pantalla (la primera o algunas especiales se pintan completamente)
      31   00:8012  CD 26 81            	CALL	pinta_pantalla_completa 
      32   00:8015                      	
      33   00:8015                      	;carga sprites en memoria (SE HA RETRASADO HASTA PARAMETRIZAR LA CARGA DE PANTALLAS)
      34   00:8015  CD 2E 86            	CALL 	carga_patrones_sprites_nivel
      35   00:8018                      	
      36   00:8018                      	;funciones que modificarian el marcador si se produce un evento cuando toque y cuando se pinta la pantalla ya se mira
      37   00:8018                      	;una variable para ver si el array hay que actualizarlo en pantalla o no
      38   00:8018  CD 66 82            	CALL	pinta_vidas
      39   00:801B  CD 75 82            	CALL 	pinta_reliquias
      40   00:801E  CD 84 82            	CALL	pinta_nivel
      41   00:8021  CD 04 83            	CALL	borra_mapa
      42   00:8024  CD 5B 83            	CALL	pinta_puertas
      43   00:8027                      
      44   00:8027  3E 13               	LD		 A, TILEPROTAM
      45   00:8029  32 D9 A7            	LD		(elemento_pintar_mapa), A
      46   00:802C  CD E5 83            	CALL	posiciona_en_mapa		;se le pasa elemento_pintar_mapa (tile del prota) está el prota y prota.posx y posy
      47   00:802F                      		
      48   00:802F  CD AC 99            	CALL	pinta_ayudas_habitacion
      49   00:8032                      	
      50   00:8032  CD FB 84            	CALL	pinta_extra_fondo
      51   00:8035                      
      52   00:8035                      	;incializacion de replayer con interrupciones
      53   00:8035                      ;	CALL	inicializa_replayer_efectos_interrupciones
      54   00:8035                      
      55   00:8035                      loop_principal:
      56   00:8035  76                  	HALT							;espera VBLANK y sincroniza
      57   00:8036                      	
      58   00:8036  CD 46 86            	CALL	render_sprites			;actualiza array de sprites y los pinta en pantalla
      59   00:8039                      	
      60   00:8039  CD F5 82            	CALL	pinta_energia			;pinta la energia en pantalla
      61   00:803C                      	
      62   00:803C  CD 72 85            	CALL	actualiza_elementos_fondo
      63   00:803F                      
      64   00:803F  CD 89 86            	CALL	check_player			;MIRA EL CONTROL Y APLICA LA LOGICA DE MOVIMIENTO DEL PROTAGONISTA
      65   00:8042                      	
      66   00:8042  C3 35 80            	JP		loop_principal
      67   00:8045                      fin_programa_principal:
      68   00:8045                      	;RET
      69   00:8045                      
      70   00:8045                      
      71   00:8045                      
      72   00:8045                      
      73   00:8045                      
      74   00:8045                      ;;*******************************************************************
      75   00:8045                      ; sólo para hacer pruebas y pintar la parte de las vidas y demás
      76   00:8045                      inicializa_variables_pruebas:
      77   00:8045  3E 04               	LD		 A, 4
      78   00:8047  32 B5 A7            	LD		(prota_vidas),A
      79   00:804A                      
      80   00:804A  3E 04               	LD		 A, 4
      81   00:804C  32 B6 A7            	LD		(prota_reliquias), A
      82   00:804F                      
      83   00:804F  3E 64               	LD		 A, 100
      84   00:8051  32 B9 A7            	LD		(prota_energia), A
      85   00:8054                      
      86   00:8054                      	;ubico al prota dentro del nivel para obtener luego las habitaciones y enemigos que aparecerán
      87   00:8054                      	;será igual la posición inicial en todos los niveles
      88   00:8054                      	
      89   00:8054  3E 00               	LD		 A, 0				;los niveles (matrices) son 7 del 0 al 6
      90   00:8056  32 B4 A7            	LD		(prota_nivel), A	;nivel empieza en 0 para usar las posiciones ascii
      91   00:8059                      
      92   00:8059  3E 00               	LD		 A, 0				;los subniveles (filas) son 7 del 0 al 6
      93   00:805B  32 B8 A7            	LD		(prota_pos_mapy), A	;pos Y dentro del nivel (se empieza en 0)
      94   00:805E                      
      95   00:805E  3E 02               	LD		 A, 2				;columnas 7: del 0 al 6
      96   00:8060  32 B7 A7            	LD		(prota_pos_mapx), A	;pos X dentro del nivel (se empieza en 0)
      97   00:8063                      	
      98   00:8063  AF                  	XOR		 A
      99   00:8064  32 A9 A7            	LD		(prota.cadencia), A
     100   00:8067                      fin_inicializa_variables_pruebas:
     101   00:8067  C9                  	RET
     102   00:8068                      ;;************************************************************************
     103   00:8068                      
     104   00:8068                      
     105   00:8068                      
     106   00:8068                      
     107   00:8068                      
     108   00:8068                      
     109   00:8068                      
     110   00:8068                      
     111   00:8068                      
     112   00:8068                      ;;=====================================================
     113   00:8068                      ;;DEFINICIÓN DE SUBRUTINAS
     114   00:8068                      ;;=====================================================
     115   00:8068                      	include "subrutinas.asm"
       1.  00:8068                      ;;=====================================================
       2.  00:8068                      ;;DEFINICIÓN DE SUBRUTINAS
       3.  00:8068                      ;;=====================================================	
       4.  00:8068                      
       5.  00:8068                      
       6.  00:8068                      ;;=====================================================
       7.  00:8068                      ;;INICIALIZA_NIVELES
       8.  00:8068                      ;;=====================================================	
       9.  00:8068                      ; función: 	copia la plantilla de niveles (habitaciones_plantilla) en los niveles de trabajo para el juego (habitaciones_juego)
      10.  00:8068                      ; entrada: 	habitaciones_plantilla
      11.  00:8068                      ; salida: 	habitaciones_juego
      12.  00:8068                      ; toca: 	A, B, HL, DE
      13.  00:8068                      inicializa_niveles:
      14.  00:8068  AF                  		XOR		 A
      15.  00:8069  06 31               		LD		 B,   49				;7 filas por 7 niveles menos el primero que lo hago fuera del buble
      16.  00:806B  21 8B A4            		LD		HL,   habitaciones_juego;tambíen puntero a la primera fila del primer nivel
      17.  00:806E  11 0E 00            		LD		DE,   14				;14 bytes de habitaciones y 2 extras
      18.  00:8071  19                  		ADD		HL,   DE				;puntero al primero de los bytes extras
      19.  00:8072  77                  		LD		(HL), A					;0000000Xb si X=0 no se ha pasado por allí y si es 1 sí
      20.  00:8073  11 10 00            		LD		DE,   16				;desde las col 15 de una fila a la siguiente
      21.  00:8076                      .bucle_borra_hab:
      22.  00:8076  19                  		ADD		HL,   DE				;situo el puntero 16 bytes siguientes
      23.  00:8077  77                  		LD		(HL), A					;pongo su contenido a 0
      24.  00:8078  10 FC               		DJNZ	.bucle_borra_hab		;repito para poner todos a 0
      25.  00:807A                      fin_iniciliza_niveles:
      26.  00:807A  C9                  		RET
      27.  00:807B                      
      28.  00:807B                      
      29.  00:807B                      ;;=====================================================
      30.  00:807B                      ;;ACTUALIZA_MARCADOR_VIDAS
      31.  00:807B                      ;;=====================================================	
      32.  00:807B                      ; función:  actualiza el buffer de vidas
      33.  00:807B                      ; entrada: 	prota_vidas
      34.  00:807B                      ; salida: 	array_aux_vidas
      35.  00:807B                      ; toca:		A,B,HL
      36.  00:807B                      actualiza_marcador_vidas:
      37.  00:807B                      	;para no andar restando pongo todos los huecos a negro y luego en otro bucle las caras
      38.  00:807B                      	;1-pinto todo en blanco
      39.  00:807B  21 BA A7            	LD		HL,array_aux_vidas
      40.  00:807E  06 08               	LD		 B,NMAXVIDREL
      41.  00:8080                      loop_marcador_caras_negro:	;asignar espacios en negro
      42.  00:8080  36 00               	LD		(HL),0			;0 posición mapa tiles para nada (es transparente pero el fondo es negro)
      43.  00:8082  23                  	INC		HL
      44.  00:8083  10 FB               	DJNZ	loop_marcador_caras_negro
      45.  00:8085                      fin_loop_marcador_caras_negro:
      46.  00:8085                      	;2-pinto las caras según el n de vidas
      47.  00:8085  3A B5 A7            	LD		 A, (prota_vidas)
      48.  00:8088  B7                  	OR		 A
      49.  00:8089  C8                  	RET 	 Z
      50.  00:808A  47                  	LD		 B, A
      51.  00:808B  21 BA A7            	LD		HL, array_aux_vidas
      52.  00:808E                      loop_marcador_caras: ;asignar caras
      53.  00:808E  36 0D               	LD		(HL), POSCARAMAP	;13 posición mapa tiles para cara
      54.  00:8090  23                  	INC		HL
      55.  00:8091  10 FB               	DJNZ	loop_marcador_caras
      56.  00:8093                      fin_loop_marcador_caras:
      57.  00:8093                      fin_actualiza_marcador_vidas:
      58.  00:8093  C9                  	RET
      59.  00:8094                      
      60.  00:8094                      
      61.  00:8094                      ;;=====================================================
      62.  00:8094                      ;;ACTUALIZA_BUFFER_RELIQUIAS
      63.  00:8094                      ;;=====================================================	
      64.  00:8094                      ; función: 	actualiza buffer de reliquias
      65.  00:8094                      ; entrada: 	prota_reliquias
      66.  00:8094                      ; salida: 	array_aux_reliquias
      67.  00:8094                      ; toca:		A,B,HL
      68.  00:8094                      actualiza_buffer_reliquias:	
      69.  00:8094                      	;para no andar restando pongo todos los huecos a negro y luego en otro bucle las reliquias
      70.  00:8094                      	;1-pinto todo en blanco
      71.  00:8094  21 C2 A7            	LD		HL, array_aux_reliquias
      72.  00:8097  06 08               	LD		 B, NMAXVIDREL
      73.  00:8099  AF                  	XOR		 A
      74.  00:809A                      loop_buffer_reliquias_negro:	;asignar espacios en negro
      75.  00:809A  77                  	LD		(HL), A			;0 posición mapa tiles para nada (es transparente pero el fondo es negro)
      76.  00:809B  23                  	INC		HL
      77.  00:809C  10 FC               	DJNZ	loop_buffer_reliquias_negro
      78.  00:809E                      
      79.  00:809E                      	;2-pinto las cruces según el n de reliquias
      80.  00:809E  21 C2 A7            	LD		HL, array_aux_reliquias
      81.  00:80A1  3A B6 A7            	LD		 A, (prota_reliquias)
      82.  00:80A4  B7                  	OR		 A
      83.  00:80A5  C8                  	RET		 Z
      84.  00:80A6  47                  	LD		 B, A
      85.  00:80A7                      loop_buffer_reliquias: ;asignar reliquias
      86.  00:80A7  36 11               	LD		(HL), POSRELIMAP	;17 posición mapa tiles para reliquia
      87.  00:80A9  23                  	INC		HL
      88.  00:80AA  10 FB               	DJNZ	loop_buffer_reliquias
      89.  00:80AC                      fin_actualiza_buffer_reliquias:
      90.  00:80AC  C9                  	RET
      91.  00:80AD                      
      92.  00:80AD                      
      93.  00:80AD                      
      94.  00:80AD                      ;;=====================================================
      95.  00:80AD                      ;;LOCALIZA_INFO_HABITACION
      96.  00:80AD                      ;;=====================================================	
      97.  00:80AD                      ; función: 	busca las puertas que hay que pintar egún la posición del usuario y las pone en habitacion_actual
      98.  00:80AD                      ; entrada: 	prota.pos_mapy, prota.pos_mapx, prota_nivel habitaciones_juego
      99.  00:80AD                      ; salida: 	habitacion_actual
     100.  00:80AD                      ; toca:		todo
     101.  00:80AD                      ;ejemplo: nivel 4, posy 5 y posx 3
     102.  00:80AD                      ;3 + 5 x 8 + 4 x 49
     103.  00:80AD                      localiza_info_habitacion:
     104.  00:80AD                      ;primera posición: me coloco en la columna correcta
     105.  00:80AD  21 8B A4            	LD		HL, habitaciones_juego
     106.  00:80B0                      .situo_columna:	
     107.  00:80B0  3A B7 A7            	LD		 A, (prota_pos_mapx)
     108.  00:80B3  CB 27               	SLA		 A				;multiplico por dos ya que cada habitación va de dos en dos bytes
     109.  00:80B5  06 00               	LD		 B, 0
     110.  00:80B7  4F                  	LD		 C, A
     111.  00:80B8                      
     112.  00:80B8  09                  	ADD 	HL, BC			;sumo a la posición 0 la columnax2 en la que situarme
     113.  00:80B9                      	
     114.  00:80B9                      .situo_fila:
     115.  00:80B9  3A B8 A7            	LD		A, (prota_pos_mapy)
     116.  00:80BC  B7                  	OR	 	A
     117.  00:80BD  CA CA 80            	JP		Z, .situo_nivel	;si la fila es 0 no es necesario seguir operando en fila
     118.  00:80C0                      	
     119.  00:80C0  47                  	LD		B, A
     120.  00:80C1  AF                  	XOR		A
     121.  00:80C2                      .loop_suma_fila:
     122.  00:80C2  C6 10               	ADD		16				;cada fila tiene 16 bytes
     123.  00:80C4  10 FC               	DJNZ	.loop_suma_fila
     124.  00:80C6                      	
     125.  00:80C6  06 00               	LD		 B, 0
     126.  00:80C8  4F                  	LD		 C, A
     127.  00:80C9                      
     128.  00:80C9  09                  	ADD 	HL, BC			;sumo a la columna 16 x filas para situarme en la fila correcta
     129.  00:80CA                      
     130.  00:80CA                      .situo_nivel:
     131.  00:80CA  3A B4 A7            	LD		 A, (prota_nivel)
     132.  00:80CD  B7                  	OR	 	 A
     133.  00:80CE  CA DE 80            	JP		 Z, .actualiza_valiable_habitacion	;si el nivel es 0 al pasar por las anterirores ya estoy situado actualizo la variable y termino
     134.  00:80D1                      	
     135.  00:80D1  E5                  	PUSH	HL				;guardo el resultado intermedio
     136.  00:80D2                      	
     137.  00:80D2  47                  	LD		 B, A			;preparo la varible del bucle
     138.  00:80D3  11 70 00            	LD		DE, 112			;112 = 16x42 son los bytes de cada matriz-nivel
     139.  00:80D6  21 00 00            	LD		HL, 0
     140.  00:80D9                      .loop_suma_nivel:
     141.  00:80D9  19                  	ADD		HL, DE
     142.  00:80DA  10 FD               	DJNZ	.loop_suma_nivel
     143.  00:80DC                      	
     144.  00:80DC  D1                  	POP		DE				;devuelvo el resultado intermedio en DE que ya no lo necesito
     145.  00:80DD                      	
     146.  00:80DD  19                  	ADD		HL, DE			;sumo el resultado del nivel al resultado intermedio anterior
     147.  00:80DE                      	
     148.  00:80DE                      .actualiza_valiable_habitacion
     149.  00:80DE  7E                  	LD		 A, (HL)
     150.  00:80DF  32 89 A4            	LD		(habitacion_actual), A
     151.  00:80E2  23                  	INC		HL				;el byte de los extras está antes de donde se especifican las puertas
     152.  00:80E3  7E                  	LD		 A, (HL)
     153.  00:80E4  32 8A A4            	LD		(habitacion_extras), A
     154.  00:80E7                      fin_localiza_info_habitacion:
     155.  00:80E7  C9                  	RET
     156.  00:80E8                      
     157.  00:80E8                      
     158.  00:80E8                      	
     159.  00:80E8                      	
     160.  00:80E8                      	
     161.  00:80E8                      	
     162.  00:80E8                      	
     116   00:80E8                      	
     117   00:80E8                      	include "subr_general.asm"
       1.  00:80E8                      ;;=====================================================
       2.  00:80E8                      ;;DEFINICIÓN DE SUBRUTINAS GENERALES USABLES PARA CUALQUIER PROYECTO
       3.  00:80E8                      ;;=====================================================	
       4.  00:80E8                      
       5.  00:80E8                      ;;=====================================================
       6.  00:80E8                      ;;SUMA_A_BC
       7.  00:80E8                      ;;=====================================================	
       8.  00:80E8                      ; función: 	suma A a BC por si da más de 255
       9.  00:80E8                      ; entrada: 	A, BC
      10.  00:80E8                      ; salida: 	A + BC
      11.  00:80E8                      ; toca:		A, BC
      12.  00:80E8                      suma_A_BC:
      13.  00:80E8  81                  	ADD		 C
      14.  00:80E9  4F                  	LD		 C, A
      15.  00:80EA  88                  	ADC		 B
      16.  00:80EB  91                  	SUB		 C
      17.  00:80EC  47                  	LD		 B, A
      18.  00:80ED                      fin_suma_A_BC:
      19.  00:80ED  C9                  	RET
      20.  00:80EE                      	
      21.  00:80EE                      ;;=====================================================
      22.  00:80EE                      ;;SUMA_A_HL
      23.  00:80EE                      ;;=====================================================	
      24.  00:80EE                      ; función: 	suma A a BC por si da más de 255
      25.  00:80EE                      ; entrada: 	A, HL
      26.  00:80EE                      ; salida: 	A + HL
      27.  00:80EE                      ; toca:		A, HL
      28.  00:80EE                      suma_A_HL:
      29.  00:80EE  85                  	ADD		 L
      30.  00:80EF  6F                  	LD		 L, A
      31.  00:80F0  8C                  	ADC		 H
      32.  00:80F1  95                  	SUB		 L
      33.  00:80F2  67                  	LD		 H, A
      34.  00:80F3                      fin_suma_A_HL:
      35.  00:80F3  C9                  	RET
     118   00:80F4                      	
     119   00:80F4                      	include "subr_pintapantalla.asm"
       1.  00:80F4                      ;;=====================================================
       2.  00:80F4                      ;;DEFINICIÓN DE SUBRUTINAS
       3.  00:80F4                      ;;=====================================================	
       4.  00:80F4                      ;relacionadas con pintado en pantalla (y no sprites)
       5.  00:80F4                      
       6.  00:80F4                      
       7.  00:80F4                      ;;=====================================================
       8.  00:80F4                      ;;COLOR_PANTALLA
       9.  00:80F4                      ;;=====================================================	
      10.  00:80F4                      ; función: 	el equivalente en basic a color 15,1,1
      11.  00:80F4                      ; entrada: 	HL	que apunta a un array de bytes con 3 bytes FORCLR, BAKCLR y BDRCLR
      12.  00:80F4                      ; salida: 	-
      13.  00:80F4                      ; toca: 	todo
      14.  00:80F4                      color_pantalla:
      15.  00:80F4  7E                  	LD		 A, (HL)			;FORCLR 
      16.  00:80F5  32 E9 F3            	LD 		(FORCLR),A
      17.  00:80F8  23                  	INC		HL
      18.  00:80F9                      	
      19.  00:80F9  7E                  	LD		 A, (HL)			;BAKCLR
      20.  00:80FA  32 EA F3            	LD 		(BAKCLR),A
      21.  00:80FD  23                  	INC		HL
      22.  00:80FE                      	
      23.  00:80FE  7E                  	LD		 A, (HL)
      24.  00:80FF  32 EB F3            	LD 		(BDRCLR),A			;BDRCLR
      25.  00:8102  C3 62 00            	JP		CHGCLR 
      26.  00:8105                      fin_color_pantalla:
      27.  00:8105                      
      28.  00:8105                      
      29.  00:8105                      ;;=====================================================
      30.  00:8105                      ;;PREPARAPANTALLA
      31.  00:8105                      ;;=====================================================	
      32.  00:8105                      ; función: elimina clic cuando se pulsa tecla, cls, screen 2,2
      33.  00:8105                      ; entrada: -
      34.  00:8105                      ; salida: -
      35.  00:8105                      ; toca: si no son todos los regristros, casi todos
      36.  00:8105                      sub_preparapantalla:
      37.  00:8105                      	;toca A y Z
      38.  00:8105                      elimina_clic;
      39.  00:8105  AF                  	XOR		 A
      40.  00:8106  32 DB F3            	LD		(CLIKSW),A
      41.  00:8109                      fin_elimina_clic:
      42.  00:8109                      
      43.  00:8109                      	;toca A
      44.  00:8109                      limpia_pantalla:
      45.  00:8109  AF                  	XOR		 A
      46.  00:810A  CD C3 00            	CALL 	CLS
      47.  00:810D                      fin_limpia_pantalla:
      48.  00:810D                      
      49.  00:810D                      	;toca A y direcciones #F3E9/#F3EA/#F3EB, poner en HL array con 3 valores
      50.  00:810D  21 9B A7            	LD		HL, color_base
      51.  00:8110  CD F4 80            	CALL	color_pantalla
      52.  00:8113                      	
      53.  00:8113                      	;cambiamos a SCREEN 2,2 del BASIC
      54.  00:8113                      	;toca A
      55.  00:8113                      screen2:
      56.  00:8113  3E 02               	LD		 A, 2
      57.  00:8115  CD 5F 00            	CALL	CHGMOD			;selecciona screen 2
      58.  00:8118                      sprites_16_16:
      59.  00:8118  3A E0 F3            	LD		 A, (RG1SAV)
      60.  00:811B  F6 02               	OR		00000010b		;fuerza sprites de 16x16
      61.  00:811D  32 E0 F3            	LD		(RG1SAV), A		;no lo guardamos en la copia de variables del sistema
      62.  00:8120  47                  	LD		 B, A
      63.  00:8121  0E 01               	LD		 C, 1
      64.  00:8123  C3 47 00            	JP		WRTVDP			;opción alternativa de escribir las tres lineas siguientes
      65.  00:8126                      fin_sub_preparapantalla:
      66.  00:8126                      	
      67.  00:8126                      
      68.  00:8126                      ;;=====================================================
      69.  00:8126                      ;;PINTA_PANTALLA_COMPLETA
      70.  00:8126                      ;;=====================================================	
      71.  00:8126                      ; función: pinta el escenario, las 3 partes
      72.  00:8126                      ; entrada: -
      73.  00:8126                      ; salida: -
      74.  00:8126                      ; toca: si no son todos los regristros, casi todos
      75.  00:8126                      pinta_pantalla_completa:
      76.  00:8126  CD 2D 81            	CALL 	pinta_parte_superior_pantalla
      77.  00:8129                      	
      78.  00:8129  CD 4B 82            	CALL 	pinta_parte_inferior_pantalla	
      79.  00:812C                      fin_pinta_pantalla_completa:
      80.  00:812C  C9                  	RET
      81.  00:812D                      
      82.  00:812D                      
      83.  00:812D                      ;;=====================================================
      84.  00:812D                      ;;PINTA_PARTE_SUPERIOR_PANTALLA
      85.  00:812D                      ;;=====================================================	
      86.  00:812D                      ; función: pinta el escenario, los dos bancos superiores
      87.  00:812D                      ; entrada: -
      88.  00:812D                      ; salida: -
      89.  00:812D                      ; toca: si no son todos los regristros, casi todos
      90.  00:812D                      pinta_parte_superior_pantalla:
      91.  00:812D  3A B4 A7            	LD		 A, (prota_nivel)
      92.  00:8130  CA 5E 81            	JP		 Z, .carga_nivel_0
      93.  00:8133  3D                  	DEC		 A
      94.  00:8134  3A B4 A7            	LD		 A, (prota_nivel)
      95.  00:8137  CA 79 81            	JP		 Z, .carga_nivel_1
      96.  00:813A  3D                  	DEC		 A
      97.  00:813B  3A B4 A7            	LD		 A, (prota_nivel)
      98.  00:813E  CA 94 81            	JP		 Z, .carga_nivel_2
      99.  00:8141  3D                  	DEC		 A
     100.  00:8142  3A B4 A7            	LD		 A, (prota_nivel)
     101.  00:8145  CA AF 81            	JP		 Z, .carga_nivel_3
     102.  00:8148  3D                  	DEC		 A
     103.  00:8149  3A B4 A7            	LD		 A, (prota_nivel)
     104.  00:814C  CA CA 81            	JP		 Z, .carga_nivel_4
     105.  00:814F  3D                  	DEC		 A
     106.  00:8150  3A B4 A7            	LD		 A, (prota_nivel)
     107.  00:8153  CA E5 81            	JP		 Z, .carga_nivel_5
     108.  00:8156  3D                  	DEC		 A
     109.  00:8157  3A B4 A7            	LD		 A, (prota_nivel)
     110.  00:815A  CA 00 82            	JP		 Z, .carga_nivel_6
     111.  00:815D  3D                  	DEC		 A
     112.  00:815E                      	
     113.  00:815E                      .carga_nivel_0:
     114.  00:815E  21 2A AA            	LD		HL, tiles_patrones_nivel0
     115.  00:8161  22 45 82            	LD		(tiles_patrones), HL
     116.  00:8164  21 47 AC            	LD		HL, tiles_color_nivel0
     117.  00:8167  22 47 82            	LD		(tiles_colores), HL
     118.  00:816A  21 2A AA            	LD		HL, tiles_patrones_nivel0
     119.  00:816D  22 45 82            	LD		(tiles_patrones), HL
     120.  00:8170  21 B0 AC            	LD		HL, tiles_mapa_nivel0
     121.  00:8173  22 49 82            	LD		(tiles_mapa), HL
     122.  00:8176  C3 18 82            	JP		.fin_carga_niveles
     123.  00:8179                      
     124.  00:8179                      .carga_nivel_1:
     125.  00:8179  21 E5 AC            	LD		HL, tiles_patrones_nivel1
     126.  00:817C  22 45 82            	LD		(tiles_patrones), HL
     127.  00:817F  21 9A AE            	LD		HL, tiles_color_nivel1
     128.  00:8182  22 47 82            	LD		(tiles_colores), HL
     129.  00:8185  21 E5 AC            	LD		HL, tiles_patrones_nivel1
     130.  00:8188  22 45 82            	LD		(tiles_patrones), HL
     131.  00:818B  21 E1 AE            	LD		HL, tiles_mapa_nivel1
     132.  00:818E  22 49 82            	LD		(tiles_mapa), HL
     133.  00:8191  C3 18 82            	JP		.fin_carga_niveles
     134.  00:8194                      	
     135.  00:8194                      .carga_nivel_2:
     136.  00:8194  21 16 AF            	LD		HL, tiles_patrones_nivel2
     137.  00:8197  22 45 82            	LD		(tiles_patrones), HL
     138.  00:819A  21 CB B0            	LD		HL, tiles_color_nivel2
     139.  00:819D  22 47 82            	LD		(tiles_colores), HL
     140.  00:81A0  21 16 AF            	LD		HL, tiles_patrones_nivel2
     141.  00:81A3  22 45 82            	LD		(tiles_patrones), HL
     142.  00:81A6  21 12 B1            	LD		HL, tiles_mapa_nivel2
     143.  00:81A9  22 49 82            	LD		(tiles_mapa), HL
     144.  00:81AC  C3 18 82            	JP		.fin_carga_niveles
     145.  00:81AF                      	
     146.  00:81AF                      .carga_nivel_3:
     147.  00:81AF  21 47 B1            	LD		HL, tiles_patrones_nivel3
     148.  00:81B2  22 45 82            	LD		(tiles_patrones), HL
     149.  00:81B5  21 FC B2            	LD		HL, tiles_color_nivel3
     150.  00:81B8  22 47 82            	LD		(tiles_colores), HL
     151.  00:81BB  21 47 B1            	LD		HL, tiles_patrones_nivel3
     152.  00:81BE  22 45 82            	LD		(tiles_patrones), HL
     153.  00:81C1  21 43 B3            	LD		HL, tiles_mapa_nivel3
     154.  00:81C4  22 49 82            	LD		(tiles_mapa), HL
     155.  00:81C7  C3 18 82            	JP		.fin_carga_niveles
     156.  00:81CA                      	
     157.  00:81CA                      .carga_nivel_4:
     158.  00:81CA  21 78 B3            	LD		HL, tiles_patrones_nivel4
     159.  00:81CD  22 45 82            	LD		(tiles_patrones), HL
     160.  00:81D0  21 2D B5            	LD		HL, tiles_color_nivel4
     161.  00:81D3  22 47 82            	LD		(tiles_colores), HL
     162.  00:81D6  21 78 B3            	LD		HL, tiles_patrones_nivel4
     163.  00:81D9  22 45 82            	LD		(tiles_patrones), HL
     164.  00:81DC  21 74 B5            	LD		HL, tiles_mapa_nivel4
     165.  00:81DF  22 49 82            	LD		(tiles_mapa), HL
     166.  00:81E2  C3 18 82            	JP		.fin_carga_niveles
     167.  00:81E5                      	
     168.  00:81E5                      .carga_nivel_5:
     169.  00:81E5  21 A9 B5            	LD		HL, tiles_patrones_nivel5
     170.  00:81E8  22 45 82            	LD		(tiles_patrones), HL
     171.  00:81EB  21 5E B7            	LD		HL, tiles_color_nivel5
     172.  00:81EE  22 47 82            	LD		(tiles_colores), HL
     173.  00:81F1  21 A9 B5            	LD		HL, tiles_patrones_nivel5
     174.  00:81F4  22 45 82            	LD		(tiles_patrones), HL
     175.  00:81F7  21 A5 B7            	LD		HL, tiles_mapa_nivel5
     176.  00:81FA  22 49 82            	LD		(tiles_mapa), HL
     177.  00:81FD  C3 18 82            	JP		.fin_carga_niveles
     178.  00:8200                      	
     179.  00:8200                      .carga_nivel_6:
     180.  00:8200  21 DA B7            	LD		HL, tiles_patrones_nivel6
     181.  00:8203  22 45 82            	LD		(tiles_patrones), HL
     182.  00:8206  21 8F B9            	LD		HL, tiles_color_nivel6
     183.  00:8209  22 47 82            	LD		(tiles_colores), HL
     184.  00:820C  21 DA B7            	LD		HL, tiles_patrones_nivel6
     185.  00:820F  22 45 82            	LD		(tiles_patrones), HL
     186.  00:8212  21 D6 B9            	LD		HL, tiles_mapa_nivel6
     187.  00:8215  22 49 82            	LD		(tiles_mapa), HL
     188.  00:8218                      ;	JP		.fin_carga niveles			;no necesario
     189.  00:8218                      .fin_carga_niveles:
     190.  00:8218                      
     191.  00:8218                      	;cargando banco 1
     192.  00:8218                      	;cargamos los patrones
     193.  00:8218  2A 45 82            	LD		HL, (tiles_patrones)
     194.  00:821B  11 00 00            	LD		DE, CHRTBL
     195.  00:821E  CD 29 9A            	CALL	depack_VRAM
     196.  00:8221                      	;cargamos los colores de los patrones
     197.  00:8221  2A 47 82            	LD		HL, (tiles_colores)
     198.  00:8224  11 00 20            	LD		DE, CLRTBL
     199.  00:8227  CD 29 9A            	CALL	depack_VRAM
     200.  00:822A                      	
     201.  00:822A                      	;cargando banco 2
     202.  00:822A                      	;cargamos los patrones
     203.  00:822A  2A 45 82            	LD		HL, (tiles_patrones)
     204.  00:822D  11 00 08            	LD		DE, CHRTBL + #0800
     205.  00:8230  CD 29 9A            	CALL	depack_VRAM	
     206.  00:8233                      	;cargamos los colores de los patrones
     207.  00:8233  2A 47 82            	LD		HL, (tiles_colores)
     208.  00:8236  11 00 28            	LD		DE, CLRTBL + #0800
     209.  00:8239  CD 29 9A            	CALL	depack_VRAM
     210.  00:823C                      	
     211.  00:823C                      	;cargamos mapa de pantalla banco 1 y 2
     212.  00:823C  2A 49 82            	LD		HL, (tiles_mapa)
     213.  00:823F  11 00 18            	LD		DE, TILMAP
     214.  00:8242  C3 29 9A            	JP		depack_VRAM
     215.  00:8245                      fin_pinta_parte_superior_pantalla:
     216.  00:8245  00 00               tiles_patrones:		DW	0
     217.  00:8247  00 00               tiles_colores:		DW	0
     218.  00:8249  00 00               tiles_mapa:			DW	0
     219.  00:824B                      
     220.  00:824B                      
     221.  00:824B                      ;;=====================================================
     222.  00:824B                      ;;PINTA_PARTE_INFERIOR_PANTALLA
     223.  00:824B                      ;;=====================================================	
     224.  00:824B                      ; función: pinta la parte inferior del escenario que es común
     225.  00:824B                      ; entrada: -
     226.  00:824B                      ; salida: -
     227.  00:824B                      ; toca: si no son todos los regristros, casi todos
     228.  00:824B                      pinta_parte_inferior_pantalla:
     229.  00:824B                      	;cangando banco 3
     230.  00:824B                      	;cargamos los patrones
     231.  00:824B  21 0B BA            	LD		HL,tiles_patrones_marcador
     232.  00:824E  11 00 10            	LD		DE,CHRTBL + #1000
     233.  00:8251  CD 29 9A            	CALL	depack_VRAM	
     234.  00:8254                      	;cargamos mapa de pantalla
     235.  00:8254  21 8C BB            	LD		HL,tiles_mapa_marcador
     236.  00:8257  11 00 1A            	LD		DE,TILMAP + #0200
     237.  00:825A  CD 29 9A            	CALL	depack_VRAM
     238.  00:825D                      	;cargamos los colores de los patrones
     239.  00:825D  21 57 BB            	LD		HL,tiles_color_marcador
     240.  00:8260  11 00 30            	LD		DE,CLRTBL + #1000
     241.  00:8263  C3 29 9A            	JP		depack_VRAM
     242.  00:8266                      fin_pinta_parte_inferior_pantalla:
     243.  00:8266                      
     244.  00:8266                      
     245.  00:8266                      
     246.  00:8266                      ;;=====================================================
     247.  00:8266                      ;;PINTA_VIDAS
     248.  00:8266                      ;;=====================================================	
     249.  00:8266                      ; función: 	actualiza el mapa de tiles para que en el próximo refresco se pinten y actualiza_vidas
     250.  00:8266                      ; entrada: 	array_aux_vidas
     251.  00:8266                      ; salida: 	actualiza_vidas_sn
     252.  00:8266                      ; toca:		todo
     253.  00:8266                      pinta_vidas:
     254.  00:8266  CD 7B 80            	CALL	actualiza_marcador_vidas
     255.  00:8269                      	
     256.  00:8269  21 BA A7            	LD		HL, array_aux_vidas
     257.  00:826C  11 48 1A            	LD		DE, TILMAP + POSVIDAS 	;inicio posición en el mapa de tiles de las vidas
     258.  00:826F  01 08 00            	LD		BC, NMAXVIDREL			;hay 8 posiciones para vidas/reliquias o espacios en negro si no tiene 8 vidas/reliquias
     259.  00:8272  C3 5C 00            	JP		LDIRVM
     260.  00:8275                      fin_pinta_vidas:
     261.  00:8275                      	
     262.  00:8275                      	
     263.  00:8275                      
     264.  00:8275                      ;;=====================================================
     265.  00:8275                      ;;PINTA_RELIQUIAS
     266.  00:8275                      ;;=====================================================	
     267.  00:8275                      ; función: 	actualiza el mapa de tiles para que en el próximo refresco se pinten y actualiza_reliquias
     268.  00:8275                      ; entrada: 	array_aux_reliquias
     269.  00:8275                      ; salida: 	-
     270.  00:8275                      ; toca:		todo
     271.  00:8275                      pinta_reliquias:
     272.  00:8275  CD 94 80            	CALL	actualiza_buffer_reliquias
     273.  00:8278                      	
     274.  00:8278  21 C2 A7            	LD		HL, array_aux_reliquias
     275.  00:827B  11 C8 1A            	LD		DE, TILMAP + POSRELIQ 	;inicio posición en el mapa de tiles de las vidas
     276.  00:827E  01 08 00            	LD		BC, NMAXVIDREL			;hay 8 posiciones para vidas/reliquias o espacios en negro si no tiene 8 vidas/reliquias
     277.  00:8281  C3 5C 00            	JP		LDIRVM
     278.  00:8284                      fin_pinta_reliquias:
     279.  00:8284                      	
     280.  00:8284                      
     281.  00:8284                      
     282.  00:8284                      	
     283.  00:8284                      ;;=====================================================
     284.  00:8284                      ;;PINTA_NIVEL
     285.  00:8284                      ;;=====================================================	
     286.  00:8284                      ; función: 	actualiza el nivel en la parte de puntuación
     287.  00:8284                      ; entrada: 	prota_nivel
     288.  00:8284                      ; salida: 	-
     289.  00:8284                      ; toca:		HL,DE,BC
     290.  00:8284                      pinta_nivel:	
     291.  00:8284                      	;forma más avanzada sin llamada a la bios
     292.  00:8284  01 B4 1A            	LD		BC,TILMAP + POSNIVEL ;posición en el mapa de tiles del tile de nivel
     293.  00:8287  3A B4 A7            	LD		 A, (prota_nivel)	;seleccionando la pos del banco de tiles a poner en el mapa
     294.  00:828A  C6 30               	ADD		'0'	
     295.  00:828C  57                  	LD		 D, A
     296.  00:828D                      	
     297.  00:828D  C3 90 82            	JP		pinta_tile_suelto
     298.  00:8290                      fin_pinta_nivel:
     299.  00:8290                      
     300.  00:8290                      
     301.  00:8290                      
     302.  00:8290                      ;;=====================================================
     303.  00:8290                      ;;PINTA_TILE_SUELTO
     304.  00:8290                      ;;=====================================================	
     305.  00:8290                      ; función: 	pinta al tile que digamos en D, en la posición BC
     306.  00:8290                      ; entrada: 	BC (posición a pintar en el mapa),D (qué se va a pintar el esa posición)
     307.  00:8290                      ; salida: 	-
     308.  00:8290                      ; toca:		-
     309.  00:8290                      pinta_tile_suelto:
     310.  00:8290  DB 99               	IN		 A,(REGEST)		;leer registro de estado (recomendado)
     311.  00:8292  79                  	LD		 A,C			;primero byte bajo	
     312.  00:8293  D3 99               	OUT		(REGEST),A
     313.  00:8295  78                  	LD		 A,B			;después byte alto  ********************** preguntar a Fernando cómo que byte bajo es B
     314.  00:8296  F6 40               	OR		1000000b		;+64
     315.  00:8298  D3 99               	OUT		(REGEST),A
     316.  00:829A                      	
     317.  00:829A  7A                  	LD		A,D
     318.  00:829B  D3 98               	OUT		(REGESCVDP),A	;escribe A en VRAM en la posición indicada por los dos OUT anteriores
     319.  00:829D                      fin_pinta_tile_suelto:
     320.  00:829D  C9                  	RET
     321.  00:829E                      
     322.  00:829E                      
     323.  00:829E                      
     324.  00:829E                      
     325.  00:829E                      
     326.  00:829E                      ;;=====================================================
     327.  00:829E                      ;;MIRA_PINTA ENERGIA
     328.  00:829E                      ;;=====================================================	
     329.  00:829E                      ; función: 	actualiza el nivel de energia en la parte de puntuación
     330.  00:829E                      ; nota:		el cuadrado más bajo de ejergía siempre estará pintado... se obviará
     331.  00:829E                      ; entrada: 	prota.energia, array_aux_energia
     332.  00:829E                      ; salida: 	-
     333.  00:829E                      ; toca:		ninguno porque usa EXX
     334.  00:829E                      
     335.  00:829E                      ; nota importante... lo mismo interesa hacer esto con un array para comparar y un bucle
     336.  00:829E                      
     337.  00:829E                      mira_pinta_energia:
     338.  00:829E  D9                  	EXX							;por si acaso guardo el contenido de HL (si veo que no es necesario guardarlo lo quito) uso esto en vez de push por el nº ciclos
     339.  00:829F                      	
     340.  00:829F  3A B9 A7            	LD		 A,(prota_energia) 	;para las comparaciones A variable (actual) y B fijo (limites)
     341.  00:82A2                      
     342.  00:82A2  0E 00               	LD		 C,TILENEGRO		;para agilizar asignaciones en vez de un valor cte uso otro registro
     343.  00:82A4                      pinta_ener:
     344.  00:82A4                      pinta_ener_tile_8:
     345.  00:82A4  21 D1 A7            	LD		HL,ultimo_pos_array_aux_energia	;coloco puntero en array e iré decrementando
     346.  00:82A7  06 D9               	LD		 B,TILEENERG8
     347.  00:82A9  B8                  	CP		 B
     348.  00:82AA  38 04               	JR		C,pinta_ener_tile_8_negro
     349.  00:82AC  36 0E               	LD		(HL),TILEMAPVERD
     350.  00:82AE  18 01               	JR		pinta_ener_tile_7
     351.  00:82B0                      pinta_ener_tile_8_negro:
     352.  00:82B0  71                  	LD		(HL),C
     353.  00:82B1                      
     354.  00:82B1                      pinta_ener_tile_7:
     355.  00:82B1  2B                  	DEC		HL
     356.  00:82B2  06 BA               	LD		 B,TILEENERG7
     357.  00:82B4  B8                  	CP		 B
     358.  00:82B5  38 04               	JR		C,pinta_ener_tile_7_negro
     359.  00:82B7  36 0E               	LD		(HL),TILEMAPVERD
     360.  00:82B9  18 01               	JR		pinta_ener_tile_6
     361.  00:82BB                      pinta_ener_tile_7_negro:
     362.  00:82BB  71                  	LD		(HL),C
     363.  00:82BC                      
     364.  00:82BC                      pinta_ener_tile_6:
     365.  00:82BC  2B                  	DEC		HL
     366.  00:82BD  06 9B               	LD		 B,TILEENERG6
     367.  00:82BF  B8                  	CP		 B
     368.  00:82C0  38 04               	JR		C,pinta_ener_tile_6_negro
     369.  00:82C2  36 0E               	LD		(HL),14
     370.  00:82C4  18 01               	JR		pinta_ener_tile_5
     371.  00:82C6                      pinta_ener_tile_6_negro:
     372.  00:82C6  71                  	LD		(HL),C
     373.  00:82C7                      
     374.  00:82C7                      pinta_ener_tile_5:
     375.  00:82C7  2B                  	DEC		HL
     376.  00:82C8  06 7C               	LD		 B,TILEENERG5
     377.  00:82CA  B8                  	CP		 B
     378.  00:82CB  38 04               	JR		C,pinta_ener_tile_5_negro
     379.  00:82CD  36 0E               	LD		(HL),TILEMAPVERD
     380.  00:82CF  18 01               	JR		pinta_ener_tile_4
     381.  00:82D1                      pinta_ener_tile_5_negro:
     382.  00:82D1  71                  	LD		(HL),C
     383.  00:82D2                      
     384.  00:82D2                      pinta_ener_tile_4:
     385.  00:82D2  2B                  	DEC		HL
     386.  00:82D3  06 5D               	LD		 B,TILEENERG4
     387.  00:82D5  B8                  	CP		 B
     388.  00:82D6  38 04               	JR		C,pinta_ener_tile_4_negro
     389.  00:82D8  36 0F               	LD		(HL),TILEMAPAMAR
     390.  00:82DA  18 01               	JR		pinta_ener_tile_3
     391.  00:82DC                      pinta_ener_tile_4_negro:
     392.  00:82DC  71                  	LD		(HL),C
     393.  00:82DD                      	
     394.  00:82DD                      pinta_ener_tile_3:
     395.  00:82DD  2B                  	DEC		HL
     396.  00:82DE  06 3E               	LD		 B,TILEENERG3
     397.  00:82E0  B8                  	CP		 B
     398.  00:82E1  38 04               	JR		C,pinta_ener_tile_3_negro
     399.  00:82E3  36 0F               	LD		(HL),TILEMAPAMAR
     400.  00:82E5  18 01               	JR		pinta_ener_tile_2
     401.  00:82E7                      pinta_ener_tile_3_negro:
     402.  00:82E7  71                  	LD		(HL),C
     403.  00:82E8                      
     404.  00:82E8                      pinta_ener_tile_2:
     405.  00:82E8  2B                  	DEC		HL
     406.  00:82E9  06 1F               	LD		 B,TILEENERG2
     407.  00:82EB  B8                  	CP		 B
     408.  00:82EC  38 04               	JR		C,pinta_ener_tile_2_negro
     409.  00:82EE  36 10               	LD		(HL),TILEMAPROJO
     410.  00:82F0  18 01               	JR		fin_mira_pinta_energia		;siempre estará pintado el cuadro mínimo
     411.  00:82F2                      pinta_ener_tile_2_negro:
     412.  00:82F2  71                  	LD		(HL),C
     413.  00:82F3                      
     414.  00:82F3                      fin_mira_pinta_energia:
     415.  00:82F3  D9                  	EXX
     416.  00:82F4  C9                  	RET
     417.  00:82F5                      
     418.  00:82F5                      
     419.  00:82F5                      ;;=====================================================
     420.  00:82F5                      ;;PINTA_ENERGIA
     421.  00:82F5                      ;;=====================================================	
     422.  00:82F5                      ; función: 	actualiza el mapa de tiles para que en el próximo refresco se pinte la barra de energia actual
     423.  00:82F5                      ; entrada: 	array_aux_energia
     424.  00:82F5                      ; toca:		todo
     425.  00:82F5                      pinta_energia:
     426.  00:82F5  CD 9E 82            	CALL	mira_pinta_energia
     427.  00:82F8                      	
     428.  00:82F8  21 CA A7            	LD		HL, array_aux_energia
     429.  00:82FB  11 88 1A            	LD		DE, TILMAP + POSENERG 	;inicio posición en el mapa de tiles de las vidas
     430.  00:82FE  01 08 00            	LD		BC, NMAXVIDREL			;hay 8 posiciones para vidas/reliquias o espacios en negro si no tiene 8 vidas/reliquias
     431.  00:8301  C3 5C 00            	JP		LDIRVM
     432.  00:8304                      fin_pinta_energia:
     433.  00:8304                      
     434.  00:8304                      
     435.  00:8304                      
     436.  00:8304                      ;;=====================================================
     437.  00:8304                      ;;BORRA_MAPA
     438.  00:8304                      ;;=====================================================	
     439.  00:8304                      ; función: 	pone todas las habitaciones del mapa a negro (los tiles del mapa los rellena con un array a 0 - caracter en negro)
     440.  00:8304                      ; entrada: 	array_aux_mapa_limpiar
     441.  00:8304                      ; salida: 	-
     442.  00:8304                      ; toca:		AF
     443.  00:8304                      borra_mapa:
     444.  00:8304  D9                  	EXX
     445.  00:8305                      	
     446.  00:8305  21 D2 A7            	LD		HL,array_aux_mapa_limpiar
     447.  00:8308  11 F8 1A            	LD		DE,TILMAP + POSMAPLIN1 	;inicio posición en el mapa de tiles de la primera fila del mapa
     448.  00:830B  01 07 00            	LD		BC,NHABNIVEL			;cada nivel son 7 filas con 7 habitaciones "posibles"
     449.  00:830E  CD 5C 00            	CALL	LDIRVM
     450.  00:8311                      	
     451.  00:8311  21 D2 A7            	LD		HL,array_aux_mapa_limpiar
     452.  00:8314  11 D8 1A            	LD		DE,TILMAP + POSMAPLIN2
     453.  00:8317  01 07 00            	LD		BC,NHABNIVEL
     454.  00:831A  CD 5C 00            	CALL	LDIRVM
     455.  00:831D                      
     456.  00:831D  21 D2 A7            	LD		HL,array_aux_mapa_limpiar
     457.  00:8320  11 B8 1A            	LD		DE,TILMAP + POSMAPLIN3
     458.  00:8323  01 07 00            	LD		BC,NHABNIVEL
     459.  00:8326  CD 5C 00            	CALL	LDIRVM
     460.  00:8329                      
     461.  00:8329  21 D2 A7            	LD		HL,array_aux_mapa_limpiar	
     462.  00:832C  11 98 1A            	LD		DE,TILMAP + POSMAPLIN4
     463.  00:832F  01 07 00            	LD		BC,NHABNIVEL
     464.  00:8332  CD 5C 00            	CALL	LDIRVM
     465.  00:8335                      
     466.  00:8335  21 D2 A7            	LD		HL,array_aux_mapa_limpiar	
     467.  00:8338  11 78 1A            	LD		DE,TILMAP + POSMAPLIN5
     468.  00:833B  01 07 00            	LD		BC,NHABNIVEL
     469.  00:833E  CD 5C 00            	CALL	LDIRVM
     470.  00:8341                      
     471.  00:8341  21 D2 A7            	LD		HL,array_aux_mapa_limpiar	
     472.  00:8344  11 58 1A            	LD		DE,TILMAP + POSMAPLIN6
     473.  00:8347  01 07 00            	LD		BC,NHABNIVEL
     474.  00:834A  CD 5C 00            	CALL	LDIRVM
     475.  00:834D                      
     476.  00:834D  21 D2 A7            	LD		HL,array_aux_mapa_limpiar	
     477.  00:8350  11 38 1A            	LD		DE,TILMAP + POSMAPLIN7
     478.  00:8353  01 07 00            	LD		BC,NHABNIVEL
     479.  00:8356  CD 5C 00            	CALL	LDIRVM
     480.  00:8359                      	
     481.  00:8359  D9                  	EXX
     482.  00:835A                      fin_borra_mapa:
     483.  00:835A  C9                  	RET
     484.  00:835B                      
     485.  00:835B                      
     486.  00:835B                      
     487.  00:835B                      
     488.  00:835B                      
     489.  00:835B                      ;;=====================================================
     490.  00:835B                      ;;PINTA_PUERTAS
     491.  00:835B                      ;;=====================================================	
     492.  00:835B                      ; función: 	examina A y mira si tiene que pintar puertas de los lados, arriba o abrajo o las escaleras (o no)
     493.  00:835B                      ; entrada: 	habitacion_actual 1 escalera 1 puerta arriba 1 pu der 1 pu aba 1 pu izq (si es 0 pinta pared)
     494.  00:835B                      ; salida: 	-
     495.  00:835B                      ; toca:		todo
     496.  00:835B                      pinta_puertas:
     497.  00:835B  CD 2D 81            	CALL	pinta_parte_superior_pantalla	;pinta pasillo y paredes
     498.  00:835E                      
     499.  00:835E  CD AD 80            	CALL	localiza_info_habitacion	;busca qué puertas debe pintar y lo mete en habitación_actual
     500.  00:8361                      	
     501.  00:8361  3A 89 A4            	LD		 A, (habitacion_actual)		;se mete en A porque la función pide A y para no buscar el valor 4 veces
     502.  00:8364                      
     503.  00:8364                      ;	BIT		 4, A
     504.  00:8364                      ;	CALL	nz, pinta_escalera
     505.  00:8364                      
     506.  00:8364  CB 5F               	BIT		 3, A
     507.  00:8366  C4 94 83            	CALL	nz, pinta_puerta_arr
     508.  00:8369                      
     509.  00:8369  CB 57               	BIT		 2, A
     510.  00:836B  C4 AF 83            	CALL	nz, pinta_puerta_der
     511.  00:836E                      
     512.  00:836E  CB 4F               	BIT		 1, A
     513.  00:8370  C4 79 83            	CALL	nz, pinta_puerta_aba
     514.  00:8373                      	
     515.  00:8373  CB 47               	BIT		 0, A
     516.  00:8375  C4 CA 83            	CALL	nz, pinta_puerta_izq
     517.  00:8378                      fin_pinta_puertas:
     518.  00:8378  C9                  	RET
     519.  00:8379                      
     520.  00:8379                      
     521.  00:8379                      
     522.  00:8379                      
     523.  00:8379                      ;;=====================================================
     524.  00:8379                      ;;PINTA_PUERTA_ABA
     525.  00:8379                      ;;=====================================================	
     526.  00:8379                      ; función: 	pinta la puerta de abajo
     527.  00:8379                      ; entrada: 	array_puerta_abajo, wordaux2, wordaux1
     528.  00:8379                      ; salida: 	-
     529.  00:8379                      ; toca:		HL,BC, DE
     530.  00:8379                      pinta_puerta_aba:
     531.  00:8379  F5                  	PUSH	AF
     532.  00:837A                      	
     533.  00:837A  21 03 A8            	LD		HL, array_puerta_abajo			;guardo puntero al array a pintar (como pasar por referencia)
     534.  00:837D  22 B3 84            	LD		(wordaux2), HL					;en la variable wordaux2
     535.  00:8380  21 EE 19            	LD		HL, TILMAP + POSPUERABAJ		;calcula posición en tilemap
     536.  00:8383  22 B1 84            	LD		(wordaux1), HL					;guarda valor pos tilemap en wordaux1
     537.  00:8386                      
     538.  00:8386  3E 01               	LD		 A, 1							;nº de filas
     539.  00:8388  32 B5 84            	LD		(byteaux1), A
     540.  00:838B  3E 04               	LD		 A, 4							;nº de columnas
     541.  00:838D  32 B6 84            	LD		(byteaux2), A
     542.  00:8390                      	
     543.  00:8390  F1                  	POP		AF
     544.  00:8391                      	
     545.  00:8391  C3 71 84            	JP		pinta_array
     546.  00:8394                      fin_pinta_puerta_aba:
     547.  00:8394                      
     548.  00:8394                      ;;=====================================================
     549.  00:8394                      ;;PINTA_PUERTA_ARR
     550.  00:8394                      ;;=====================================================	
     551.  00:8394                      ; función: 	pinta la puerta de arriba
     552.  00:8394                      ; entrada: 	array_puerta_arriba, wordaux2, wordaux1
     553.  00:8394                      ; salida: 	-
     554.  00:8394                      ; toca:		HL,BC, DE
     555.  00:8394                      pinta_puerta_arr:
     556.  00:8394  F5                  	PUSH	AF
     557.  00:8395                      	
     558.  00:8395  21 DA A7            	LD		HL, array_puerta_arriba			;guardo puntero al array a pintar (como pasar por referencia)
     559.  00:8398  22 B3 84            	LD		(wordaux2), HL					;en la variable wordaux2
     560.  00:839B  21 8E 18            	LD		HL, TILMAP + POSPUERARRI		;calcula posición en tilemap
     561.  00:839E  22 B1 84            	LD		(wordaux1), HL					;guarda valor pos tilemap en wordaux1
     562.  00:83A1  3E 05               	LD		 A, 5							;nº de filas
     563.  00:83A3  32 B5 84            	LD		(byteaux1), A
     564.  00:83A6  3E 04               	LD		 A, 4							;nº de columnas
     565.  00:83A8  32 B6 84            	LD		(byteaux2), A
     566.  00:83AB                      	
     567.  00:83AB  F1                  	POP		AF
     568.  00:83AC                      	
     569.  00:83AC  C3 71 84            	JP		pinta_array
     570.  00:83AF                      fin_pinta_puerta_arr:
     571.  00:83AF                      
     572.  00:83AF                      
     573.  00:83AF                      ;;=====================================================
     574.  00:83AF                      ;;PINTA_PUERTA_DER
     575.  00:83AF                      ;;=====================================================	
     576.  00:83AF                      ; función: 	pinta la puerta de la derecha
     577.  00:83AF                      ; entrada: 	array_puerta_derecha, wordaux2, wordaux1
     578.  00:83AF                      ; salida: 	-
     579.  00:83AF                      ; toca:		HL,BC, DE
     580.  00:83AF                      pinta_puerta_der:
     581.  00:83AF  F5                  	PUSH	AF
     582.  00:83B0  21 EE A7            	LD		HL, array_puerta_derecha		;guardo puntero al array a pintar (como pasar por referencia)
     583.  00:83B3  22 B3 84            	LD		(wordaux2), HL					;en la variable wordaux2
     584.  00:83B6  21 FC 18            	LD		HL, TILMAP + POSPUERDERE		;calcula posición en tilemap
     585.  00:83B9  22 B1 84            	LD		(wordaux1), HL					;guarda valor pos tilemap en wordaux1
     586.  00:83BC                      
     587.  00:83BC  3E 07               	LD		 A, 7							;nº de filas
     588.  00:83BE  32 B5 84            	LD		(byteaux1), A
     589.  00:83C1  3E 03               	LD		 A, 3							;nº de columnas
     590.  00:83C3  32 B6 84            	LD		(byteaux2), A
     591.  00:83C6                      	
     592.  00:83C6  F1                  	POP		AF
     593.  00:83C7                      	
     594.  00:83C7  C3 71 84            	JP		pinta_array
     595.  00:83CA                      fin_pinta_puerta_der:
     596.  00:83CA                      	
     597.  00:83CA                      ;;=====================================================
     598.  00:83CA                      ;;PINTA_PUERTA_IZQ
     599.  00:83CA                      ;;=====================================================	
     600.  00:83CA                      ; función: 	pinta la puerta de la izquierda
     601.  00:83CA                      ; entrada: 	array_puerta_izquierda, wordaux2, wordaux1
     602.  00:83CA                      ; salida: 	-
     603.  00:83CA                      ; toca:		HL,BC, DE
     604.  00:83CA                      pinta_puerta_izq:
     605.  00:83CA  F5                  	PUSH	AF
     606.  00:83CB                      	
     607.  00:83CB  21 07 A8            	LD		HL, array_puerta_izquierda		;guardo puntero al array a pintar (como pasar por referencia)
     608.  00:83CE  22 B3 84            	LD		(wordaux2), HL					;en la variable wordaux2
     609.  00:83D1  21 E1 18            	LD		HL, TILMAP + POSPUERIZQU		;calcula posición en tilemap
     610.  00:83D4  22 B1 84            	LD		(wordaux1), HL					;guarda valor pos tilemap en wordaux1
     611.  00:83D7                      
     612.  00:83D7  3E 07               	LD		 A, 7							;nº de filas
     613.  00:83D9  32 B5 84            	LD		(byteaux1), A
     614.  00:83DC  3E 03               	LD		 A, 3							;nº de columnas
     615.  00:83DE  32 B6 84            	LD		(byteaux2), A
     616.  00:83E1                      	
     617.  00:83E1  F1                  	POP		AF
     618.  00:83E2                      	
     619.  00:83E2  C3 71 84            	JP		pinta_array
     620.  00:83E5                      fin_pinta_puerta_izq:
     621.  00:83E5                      
     622.  00:83E5                      
     623.  00:83E5                      ;;=====================================================
     624.  00:83E5                      ;;POSICIONA_EN_MAPA
     625.  00:83E5                      ;;=====================================================	
     626.  00:83E5                      ; función: 	en el mapa de marcadores de la derecha/abajo marca un cuadro en gris o con un muñeco
     627.  00:83E5                      ;			según el valor de prota.posición pinta entrá un muñeco y por donde vaya pasando el prota
     628.  00:83E5                      ;			quedará en gris
     629.  00:83E5                      ; entrada: 	elemento_pintar_mapa, prota_pos_mapy, prota_pos_mapx
     630.  00:83E5                      ; salida: 	-
     631.  00:83E5                      ; toca:		todos
     632.  00:83E5                      posiciona_en_mapa:
     633.  00:83E5                      	;#0238 es la posición en mapa de tiles de la esquina superior izquierda del mapa (569 en decimal)
     634.  00:83E5  21 38 1A            	LD		HL, TILMAP + POSMAPA;pos inicial
     635.  00:83E8                      	
     636.  00:83E8                      	;ahora se le calcula la fila a pintar ya que va de abajo a arriba y no como en el mapa + columna
     637.  00:83E8                      .sumar_fila:
     638.  00:83E8  3A B8 A7            	LD		 A, (prota_pos_mapy)
     639.  00:83EB  FE 01               	CP		 1
     640.  00:83ED  28 2A               	JR		 Z, .fila_1
     641.  00:83EF  3A B8 A7            	LD		 A, (prota_pos_mapy)
     642.  00:83F2  FE 02               	CP		 2
     643.  00:83F4  28 2A               	JR		 Z, .fila_2
     644.  00:83F6  3A B8 A7            	LD		 A, (prota_pos_mapy)
     645.  00:83F9  FE 03               	CP		 3
     646.  00:83FB  28 2A               	JR		 Z, .fila_3
     647.  00:83FD  3A B8 A7            	LD		 A, (prota_pos_mapy)
     648.  00:8400  FE 04               	CP		 4
     649.  00:8402  28 2A               	JR		 Z, .fila_4
     650.  00:8404  3A B8 A7            	LD		 A, (prota_pos_mapy)
     651.  00:8407  FE 05               	CP		 5
     652.  00:8409  28 2A               	JR		 Z, .fila_5
     653.  00:840B  3A B8 A7            	LD		 A, (prota_pos_mapy)
     654.  00:840E  FE 06               	CP		 6
     655.  00:8410  28 2A               	JR		 Z, .sumar_columna
     656.  00:8412                      	;no consulto la 0 porque si no es ninguna de las anteriores es 0 y por tanto sería un jr fila_0
     657.  00:8412                      	
     658.  00:8412                      .fila_0:
     659.  00:8412  11 C0 00            	LD		DE, 192
     660.  00:8415  19                  	ADD		HL, DE			;nota: se que repito el ADD pero la otra opción es inicializar DE y ya tarda mucho la funicón (es por velicidad)
     661.  00:8416  C3 3C 84            	JP		.sumar_columna
     662.  00:8419                      .fila_1:
     663.  00:8419  11 A0 00            	LD		DE, 160
     664.  00:841C  19                  	ADD		HL, DE
     665.  00:841D  C3 3C 84            	JP		.sumar_columna
     666.  00:8420                      .fila_2:
     667.  00:8420  11 80 00            	LD		DE, 128
     668.  00:8423  19                  	ADD		HL, DE
     669.  00:8424  C3 3C 84            	JP		.sumar_columna
     670.  00:8427                      .fila_3:
     671.  00:8427  11 60 00            	LD		DE, 96
     672.  00:842A  19                  	ADD		HL, DE
     673.  00:842B  C3 3C 84            	JP		.sumar_columna
     674.  00:842E                      .fila_4:
     675.  00:842E  11 40 00            	LD		DE, 64
     676.  00:8431  19                  	ADD		HL, DE
     677.  00:8432  C3 3C 84            	JP		.sumar_columna
     678.  00:8435                      .fila_5:
     679.  00:8435  11 20 00            	LD		DE, 32
     680.  00:8438  19                  	ADD		HL, DE
     681.  00:8439  C3 3C 84            	JP		.sumar_columna
     682.  00:843C                      .fila_6:
     683.  00:843C                      	;pongo fila_6 por poner ya que si es la fila 6 equiv. a primera fila del mapa y por tanto no suma fila
     684.  00:843C                      	
     685.  00:843C                      	
     686.  00:843C                      .sumar_columna:
     687.  00:843C  3A B7 A7            	LD 		 A, (prota_pos_mapx) ;POS X
     688.  00:843F  16 00               	LD		 D, 0
     689.  00:8441  5F                  	LD		 E, A
     690.  00:8442  19                  	ADD		HL, DE
     691.  00:8443                      	
     692.  00:8443                      	;resultado en BC para usar en la función pinta_tile_suelto
     693.  00:8443  44                  	LD		 B, H
     694.  00:8444  4D                  	LD		 C, L
     695.  00:8445                      	
     696.  00:8445                      	;terminado de fijar la coordenada recuperamos a para ver el tipo
     697.  00:8445  3A D9 A7            	LD		 A, (elemento_pintar_mapa)
     698.  00:8448  FE 09               	CP		 TILEGRISM
     699.  00:844A  CA 52 84            	JP		 Z, pinta_pos_mapa_vacio
     700.  00:844D  16 13               	LD		 D, TILEPROTAM
     701.  00:844F  C3 54 84            	JP		fin_pinta_pos_mapa
     702.  00:8452                      pinta_pos_mapa_vacio:
     703.  00:8452  16 09               	LD		 D, TILEGRISM	
     704.  00:8454                      
     705.  00:8454                      fin_pinta_pos_mapa:
     706.  00:8454  C3 90 82            	JP		pinta_tile_suelto
     707.  00:8457                      fin_posiciona_en_mapa:
     708.  00:8457                      
     709.  00:8457                      
     710.  00:8457                      
     711.  00:8457                      
     712.  00:8457                      ;;=====================================================
     713.  00:8457                      ;;EFECTO_IMAGEN_TIRA_RELIQUIA
     714.  00:8457                      ;;=====================================================	
     715.  00:8457                      ; función: 	hace que el fondo de la pantalla parpadee N veces
     716.  00:8457                      ; entrada: 	actualiza_reliquias_sn
     717.  00:8457                      ; salida: 	-
     718.  00:8457                      ; toca: 	todo
     719.  00:8457                      efecto_imagen_tira_reliquia:
     720.  00:8457  3E 14               	LD		 A, 20;RETARDOREL
     721.  00:8459  47                  	LD		 B, A
     722.  00:845A                      
     723.  00:845A                      .parpadea_fondo:
     724.  00:845A  C5                  	PUSH	BC
     725.  00:845B  21 9E A7            	LD		HL, color_bomba1
     726.  00:845E  CD F4 80            	CALL	color_pantalla
     727.  00:8461                      	
     728.  00:8461                      	;~ PUSH	BC
     729.  00:8461                      	;~ LD		 A, 255
     730.  00:8461                      	;~ LD		 B, A
     731.  00:8461                      ;~ .bucle_de_espera:
     732.  00:8461                      	;~ NOP
     733.  00:8461                      	;~ DJNZ	 .bucle_de_espera
     734.  00:8461                      	;~ POP		BC
     735.  00:8461  76                  	HALT
     736.  00:8462                      
     737.  00:8462                      	
     738.  00:8462  21 A1 A7            	LD		HL, color_bomba2
     739.  00:8465  CD F4 80            	CALL	color_pantalla
     740.  00:8468  C1                  	POP		BC
     741.  00:8469  10 EF               	DJNZ	.parpadea_fondo
     742.  00:846B                      	
     743.  00:846B  21 9B A7            	LD		HL, color_base
     744.  00:846E  C3 F4 80            	JP		color_pantalla
     745.  00:8471                      fin_efecto_imagen_tira_reliquia:
     746.  00:8471                      
     747.  00:8471                      
     748.  00:8471                      
     749.  00:8471                      
     750.  00:8471                      ;=====================================================
     751.  00:8471                      ;;PINTA_ARRAY
     752.  00:8471                      ;;=====================================================	
     753.  00:8471                      ;;funcion:  (pinta el mismo tile) se le pasa un array con posiciones de tiles y coordenadas x e y y los pinta en screen 2
     754.  00:8471                      ;;entrada:	wordaux1 (pos inicio sc2 donde pintar) y wordaux2 (puntero al array a pintar), BC (posición en tilemap) , D filas y E columnas
     755.  00:8471                      ;;salida:	-
     756.  00:8471                      ;;importante: necesita de una variable wordaux1 tipo WD (wordaux1: 	DW	0)
     757.  00:8471                      ;; ejemplo llamada:
     758.  00:8471                      	;~ LD		HL,array_tiles					;guardo puntero al array a pintar (como psar por referencia)
     759.  00:8471                      	;~ LD		(wordaux2),HL					;en la variable wordaux2
     760.  00:8471                      	;~ LD		HL,SC2MAP + 256 + 32			;calcula posición en tilemap
     761.  00:8471                      	;~ LD		(wordaux1),HL					;guarda valor pos tilemap en wordaux1
     762.  00:8471                      	;~ LD		B,H								;coloca posición tilemap BC
     763.  00:8471                      	;~ LD		C,L
     764.  00:8471                      	;~ LD		D,2								;nº de filas ahora byteaux1
     765.  00:8471                      	;~ LD		E,3								;nº de columnas ahora byteaux2
     766.  00:8471                      	;~ CALL	pinta_array
     767.  00:8471                      
     768.  00:8471                      pinta_array:
     769.  00:8471  08                  	EX		AF, AF'
     770.  00:8472                      	
     771.  00:8472  3A B5 84            	LD		 A, (byteaux1)
     772.  00:8475  57                  	LD		 D, A
     773.  00:8476  3A B6 84            	LD		 A, (byteaux2)
     774.  00:8479  5F                  	LD		 E, A
     775.  00:847A                      
     776.  00:847A                      	
     777.  00:847A  2A B1 84            	LD		HL, (wordaux1)
     778.  00:847D  44                  	LD		 B, H							;coloca posición tilemap BC
     779.  00:847E  4D                  	LD		 C, L
     780.  00:847F                      	
     781.  00:847F                      	;contamos con que la posición "global" en el tilemap está ya en BC
     782.  00:847F                      	;y el puntero al array a pintar en wordaux2 y la posición en tilemap sc2 en wordaux1
     783.  00:847F                      	;inicializa
     784.  00:847F  DB 99               	IN		 A,(REGEST)		;leer registro de estado (recomendado)
     785.  00:8481                      	
     786.  00:8481                      	;coloca puntero para pintar tile según BC
     787.  00:8481  79                  	LD		 A,C			;primero byte bajo	
     788.  00:8482  D3 99               	OUT		(REGEST),A
     789.  00:8484  78                  	LD		 A,B			;después byte alto  ********************** preguntar a Fernando cómo que byte bajo es B
     790.  00:8485  F6 40               	OR		1000000b		;+64
     791.  00:8487  D3 99               	OUT		(REGEST),A
     792.  00:8489                      
     793.  00:8489                      	
     794.  00:8489  2A B3 84            	LD		HL,(wordaux2)	;HL es lo que se pintará y le he pasado el puntero del array tilemap a pintar
     795.  00:848C                      .pa_pinta_fila:
     796.  00:848C  43                  	LD		 B,E
     797.  00:848D                      .pa_pinta_columnas: 		;finta la fila (pintando las columnas)
     798.  00:848D  7E                  	LD		 A,(HL)
     799.  00:848E  D3 98               	OUT		(REGESCVDP),A	;escribe A en VRAM en la posición indicada por los dos OUT anteriores
     800.  00:8490  23                  	INC		HL
     801.  00:8491  10 FA               	DJNZ	.pa_pinta_columnas
     802.  00:8493                      	
     803.  00:8493                      	;no es una solución elegante lo de repetir código pero queda claro
     804.  00:8493                      	;por si hay otra fila
     805.  00:8493  E5                  	PUSH	HL
     806.  00:8494  2A B1 84            	LD		HL,(wordaux1)
     807.  00:8497  01 20 00            	LD		BC,32
     808.  00:849A  09                  	ADD		HL,BC
     809.  00:849B  22 B1 84            	LD		(wordaux1),HL
     810.  00:849E  44                  	LD		B,H
     811.  00:849F  4D                  	LD		C,L
     812.  00:84A0  E1                  	POP		HL
     813.  00:84A1                      	
     814.  00:84A1  79                  	LD		 A,C			;primero byte bajo	
     815.  00:84A2  D3 99               	OUT		(REGEST),A
     816.  00:84A4  78                  	LD		 A,B			;después byte alto 
     817.  00:84A5  F6 40               	OR		1000000b		;+64
     818.  00:84A7  D3 99               	OUT		(REGEST),A
     819.  00:84A9                      	
     820.  00:84A9                      	;si hay otra fila repite
     821.  00:84A9  15                  	DEC		 D
     822.  00:84AA  7A                  	LD		 A,D		;¿hay otra fila?
     823.  00:84AB  B7                  	OR		 A
     824.  00:84AC  C4 8C 84            	CALL	NZ,.pa_pinta_fila
     825.  00:84AF                      	
     826.  00:84AF  08                  	EX		AF, AF'
     827.  00:84B0                      fin_pinta_array:
     828.  00:84B0  C9                  	RET
     829.  00:84B1                      ;;variables asocidas a la función pinta_array
     830.  00:84B1                      ;; por de pronto la dejo aquí
     831.  00:84B1  00 00               wordaux1:		DW	0	;almacena la posición en el tilemap 0 al 675
     832.  00:84B3  00 00               wordaux2:		DW	0	;almacena puntero a array de tiles (posiciones en realidad) a pintar (posiciones repetidas en los 2 primeros bancos)
     833.  00:84B5  00                  byteaux1:		DB	0	;nº filas Registro D
     834.  00:84B6  00                  byteaux2:		DB	0	;nº columnas Registro E
     835.  00:84B7                      
     836.  00:84B7                      
     837.  00:84B7                      
     838.  00:84B7                      
     839.  00:84B7                      ;;=====================================================
     840.  00:84B7                      ;;INICIALIZA_ANTORCHAS
     841.  00:84B7                      ;;=====================================================	
     842.  00:84B7                      ; función: 	inicializa las variables de estructuras de las antorchas
     843.  00:84B7                      ; entrada: 	antorchas, array_antorcha
     844.  00:84B7                      ; salida: 	
     845.  00:84B7                      ; toca:		HL, IX
     846.  00:84B7                      inicializa_antorchas:
     847.  00:84B7  DD 21 84 A8         	LD		IX, antorchas
     848.  00:84BB  DD 36 00 00         	LD		(IX), INACTIVA
     849.  00:84BF  21 8B A8            	LD		HL, array_antorcha
     850.  00:84C2  DD 74 01            	LD		(IX + 1), H
     851.  00:84C5  DD 75 02            	LD		(IX + 2), L
     852.  00:84C8  DD 36 03 88         	LD		(IX + 3), POSANTOR1
     853.  00:84CC  DD 36 04 97         	LD		(IX + 4), POSANTOR2
     854.  00:84D0  DD 36 05 00         	LD		(IX + 5), 0
     855.  00:84D4  DD 36 06 FF         	LD		(IX + 6), RESETLLAMA
     856.  00:84D8                      fin_inicializa_antorchas:
     857.  00:84D8  C9                  	RET
     858.  00:84D9                      
     859.  00:84D9                      
     860.  00:84D9                      ;;=====================================================
     861.  00:84D9                      ;;INICIALIZA_esqueletos
     862.  00:84D9                      ;;=====================================================	
     863.  00:84D9                      ; función: 	inicializa las variables de estructuras de los esqueletos
     864.  00:84D9                      ; entrada: 	esqueletos, array_esqueletos
     865.  00:84D9                      ; salida: 	
     866.  00:84D9                      ; toca:		HL, IX
     867.  00:84D9                      inicializa_esqueletos:
     868.  00:84D9  DD 21 8E A8         	LD		IX, esqueletos
     869.  00:84DD  DD 36 00 00         	LD		(IX), INACTIVA
     870.  00:84E1  21 95 A8            	LD		HL, array_esqueleto
     871.  00:84E4  DD 74 01            	LD		(IX + 1), H
     872.  00:84E7  DD 75 02            	LD		(IX + 2), L
     873.  00:84EA  DD 36 03 88         	LD		(IX + 3), POSESQUEL1
     874.  00:84EE  DD 36 04 95         	LD		(IX + 4), POSESQUEL2
     875.  00:84F2  DD 36 05 00         	LD		(IX + 5), 0
     876.  00:84F6  DD 36 06 19         	LD		(IX + 6), RESETESQUEL
     877.  00:84FA                      fin_inicializa_esqueletos:
     878.  00:84FA  C9                  	RET
     879.  00:84FB                      	
     880.  00:84FB                      	
     881.  00:84FB                      ;;=====================================================
     882.  00:84FB                      ;;PINTA_ANTORCHAS
     883.  00:84FB                      ;;=====================================================	
     884.  00:84FB                      ; función: 	pinta las antorchas con valores base
     885.  00:84FB                      ; entrada: 	antorchas, array_antorcha
     886.  00:84FB                      ; salida: 	
     887.  00:84FB                      ; toca:		HL
     888.  00:84FB                      pinta_extra_fondo:
     889.  00:84FB  DD 21 84 A8         	LD		IX, antorchas
     890.  00:84FF                      .examina_sihay_antorchas
     891.  00:84FF                      	;hay que pintarlas?
     892.  00:84FF  3A 8A A4            	LD		 A, (habitacion_extras)
     893.  00:8502  CB 47               	BIT		 0, A
     894.  00:8504  C2 0E 85            	JP		NZ, .hayantorchas			;si el bit 0 de extras es 0 no se pintan antorchas
     895.  00:8507  DD 36 00 00         	LD		(IX), INACTIVA
     896.  00:850B  C3 37 85            	JP		.examina_sihay_esqueletos
     897.  00:850E                      	
     898.  00:850E                      .hayantorchas:
     899.  00:850E  DD 36 00 01         	LD		(IX), ACTIVA
     900.  00:8512                      	;pinta antorcha izquierdda
     901.  00:8512  DD 66 01            	LD		 H, (IX + 1)
     902.  00:8515  DD 6E 02            	LD		 L, (IX + 2)
     903.  00:8518  22 B3 84            	LD		(wordaux2), HL				;guarda pos array en wordaux2
     904.  00:851B                      	
     905.  00:851B  21 88 18            	LD		HL, TILMAP + POSANTOR1		;calcula posición en tilemap
     906.  00:851E  22 B1 84            	LD		(wordaux1), HL				;guarda valor pos tilemap en wordaux1
     907.  00:8521                      
     908.  00:8521  3E 03               	LD		 A, 3						;nº de filas	
     909.  00:8523  32 B5 84            	LD		(byteaux1), A
     910.  00:8526  3E 01               	LD		 A, 1						;nº de columnas
     911.  00:8528  32 B6 84            	LD		(byteaux2), A				
     912.  00:852B                      	
     913.  00:852B  CD 71 84            	CALL	pinta_array
     914.  00:852E                      	
     915.  00:852E                      	;pinta antorcha derecha
     916.  00:852E  21 97 18            	LD		HL, TILMAP + POSANTOR2		;calcula posición en tilemap
     917.  00:8531  22 B1 84            	LD		(wordaux1), HL				;guarda valor pos tilemap en wordaux1
     918.  00:8534                      	
     919.  00:8534  C3 71 84            	JP		pinta_array 				;no ecesita CALL ya que la subrutina termina aquí
     920.  00:8537                      	
     921.  00:8537                      .examina_sihay_esqueletos
     922.  00:8537  DD 21 8E A8         	LD		IX, esqueletos
     923.  00:853B                      	;hay que pintarlos?
     924.  00:853B  3A 89 A4            	LD		 A, (habitacion_actual)
     925.  00:853E  CB 6F               	BIT		 5, A
     926.  00:8540  C2 48 85            	JP		NZ, .hayesqueletos			;si el bit 0 de extras es 0 no se pintan antorchas
     927.  00:8543  DD 36 00 00         	LD		(IX), INACTIVA
     928.  00:8547  C9                  	RET
     929.  00:8548                      
     930.  00:8548                      .hayesqueletos
     931.  00:8548  DD 36 00 01         	LD		(IX), ACTIVA
     932.  00:854C                      	;pinta antorcha izquierdda
     933.  00:854C  DD 66 01            	LD		 H, (IX + 1)
     934.  00:854F  DD 6E 02            	LD		 L, (IX + 2)
     935.  00:8552  22 B3 84            	LD		(wordaux2), HL				;guarda pos array en wordaux2
     936.  00:8555                      	
     937.  00:8555  21 88 18            	LD		HL, TILMAP + POSESQUEL1		;calcula posición en tilemap
     938.  00:8558  22 B1 84            	LD		(wordaux1), HL				;guarda valor pos tilemap en wordaux1
     939.  00:855B                      
     940.  00:855B  3E 04               	LD		 A, 4						;nº de filas	
     941.  00:855D  32 B5 84            	LD		(byteaux1), A
     942.  00:8560  3E 03               	LD		 A, 3						;nº de columnas
     943.  00:8562  32 B6 84            	LD		(byteaux2), A				
     944.  00:8565                      	
     945.  00:8565  CD 71 84            	CALL	pinta_array
     946.  00:8568                      	
     947.  00:8568                      	;pinta antorcha derecha
     948.  00:8568  21 95 18            	LD		HL, TILMAP + POSESQUEL2		;calcula posición en tilemap
     949.  00:856B  22 B1 84            	LD		(wordaux1), HL				;guarda valor pos tilemap en wordaux1
     950.  00:856E                      	
     951.  00:856E  C3 71 84            	JP		pinta_array 				;no ecesita CALL ya que la subrutina termina aquí
     952.  00:8571                      fin_pinta_extra_fondo:
     953.  00:8571  C9                  	RET
     954.  00:8572                      
     955.  00:8572                      
     956.  00:8572                      
     957.  00:8572                      ;;=====================================================
     958.  00:8572                      ;;ACTUALIZA_ELEMENTOS_FONDO
     959.  00:8572                      ;;=====================================================	
     960.  00:8572                      ; función: 	de los elementos que pueda haber en el fondo de la pared (pantalla) actualiza si procede
     961.  00:8572                      ;			actualmente: antorchas y a futuro esqueletos
     962.  00:8572                      ; entrada: 	
     963.  00:8572                      ; salida: 	
     964.  00:8572                      ; toca:		
     965.  00:8572                      actualiza_elementos_fondo:
     966.  00:8572                      .examina_antorchas:
     967.  00:8572  DD 21 84 A8         	LD		IX, antorchas
     968.  00:8576  DD 7E 00            	LD		 A, (IX)
     969.  00:8579  B7                  	OR		 A
     970.  00:857A  CA 80 85            	JP 	 	 Z, .examina_esqueletos
     971.  00:857D                      	
     972.  00:857D  C3 8D 85            	JP		flip_llamas_antorchas
     973.  00:8580                      .examina_esqueletos:
     974.  00:8580  DD 21 8E A8         	LD		IX, esqueletos
     975.  00:8584  DD 7E 00            	LD		 A, (IX)
     976.  00:8587  B7                  	OR		 A
     977.  00:8588  C8                  	RET	 	 Z
     978.  00:8589                      	
     979.  00:8589  C3 E4 85            	JP		flip_calavera_esqueletos
     980.  00:858C                      fin_actualiza_elementos_fondo:
     981.  00:858C  C9                  	RET
     982.  00:858D                      
     983.  00:858D                      
     984.  00:858D                      
     985.  00:858D                      ;;=====================================================
     986.  00:858D                      ;;FLIP_LLAMAS_ANTORCHAS
     987.  00:858D                      ;;=====================================================	
     988.  00:858D                      ; función: 	modifica las llamas de las antorchas con los tipos que hay
     989.  00:858D                      ; entrada: 	
     990.  00:858D                      ; salida: 	
     991.  00:858D                      ; toca:		
     992.  00:858D                      flip_llamas_antorchas:
     993.  00:858D  DD 21 84 A8         	LD		IX, antorchas
     994.  00:8591                      	;tiene que cambiar de llama?
     995.  00:8591  DD 7E 06            	LD		 A, (IX + 6)
     996.  00:8594  3D                  	DEC		 A
     997.  00:8595  DD 77 06            	LD		 (IX + 6), A
     998.  00:8598                      	;no
     999.  00:8598  C0                  	RET		NZ
    1000.  00:8599                      	;si
    1001.  00:8599  DD 36 06 FF         	LD		(IX + 6), RESETLLAMA	
    1002.  00:859D                      	
    1003.  00:859D                      	;qué llama toca?
    1004.  00:859D  DD 7E 05            	LD		 A, (IX + 5)
    1005.  00:85A0  B7                  	OR		 A
    1006.  00:85A1  CA C5 85            	JP		 Z, .llama_par
    1007.  00:85A4                      .llama_impar
    1008.  00:85A4                      	;cambio a llama par
    1009.  00:85A4  AF                   	XOR		 A
    1010.  00:85A5  DD 77 05            	LD		(IX + 5), A
    1011.  00:85A8                      	;pinto llamas
    1012.  00:85A8  01 00 18            	LD		BC, TILMAP
    1013.  00:85AB  3E 88               	LD		 A, POSANTOR1
    1014.  00:85AD  CD E8 80            	CALL	suma_A_BC
    1015.  00:85B0  16 C4               	LD		 D, MAPLLAMA1
    1016.  00:85B2  CD 90 82            	CALL	pinta_tile_suelto
    1017.  00:85B5                      	
    1018.  00:85B5  01 00 18            	LD		BC, TILMAP
    1019.  00:85B8  3E 97               	LD		 A, POSANTOR2
    1020.  00:85BA  CD E8 80            	CALL	suma_A_BC
    1021.  00:85BD  16 C5               	LD		 D, MAPLLAMA2
    1022.  00:85BF  CD 90 82            	CALL	pinta_tile_suelto	
    1023.  00:85C2  C3 E4 85            	JP		fin_flip_llamas_antorchas
    1024.  00:85C5                      .llama_par
    1025.  00:85C5                      	;cambio a llama par
    1026.  00:85C5  3E 01                	LD		 A, 1
    1027.  00:85C7  DD 77 05            	LD		(IX + 5), A
    1028.  00:85CA                      	;pinto llamas
    1029.  00:85CA  01 00 18            	LD		BC, TILMAP
    1030.  00:85CD  3E 88               	LD		 A, POSANTOR1
    1031.  00:85CF  CD E8 80            	CALL	suma_A_BC
    1032.  00:85D2  16 C5               	LD		 D, MAPLLAMA2
    1033.  00:85D4  CD 90 82            	CALL	pinta_tile_suelto
    1034.  00:85D7                      	
    1035.  00:85D7  01 00 18            	LD		BC, TILMAP
    1036.  00:85DA  3E 97               	LD		 A, POSANTOR2
    1037.  00:85DC  CD E8 80            	CALL	suma_A_BC
    1038.  00:85DF  16 C4               	LD		 D, MAPLLAMA1
    1039.  00:85E1  C3 90 82            	JP		pinta_tile_suelto
    1040.  00:85E4                      fin_flip_llamas_antorchas:
    1041.  00:85E4                      
    1042.  00:85E4                      
    1043.  00:85E4                      ;;=====================================================
    1044.  00:85E4                      ;;FLIP_CALAVERA_ESQUELETOS
    1045.  00:85E4                      ;;=====================================================	
    1046.  00:85E4                      ; función: 	modifica las calaveras de los esqueletos
    1047.  00:85E4                      ; entrada: 	
    1048.  00:85E4                      ; salida: 	
    1049.  00:85E4                      ; toca:		TODOS.... muy importante DE
    1050.  00:85E4                      flip_calavera_esqueletos:
    1051.  00:85E4  DD 21 8E A8         	LD		IX, esqueletos
    1052.  00:85E8                      	
    1053.  00:85E8                      	;tiene que cambiar de calavera?
    1054.  00:85E8  DD 7E 06            	LD		 A, (IX + ESTRUCTURA_ESQUELETO.cont_sig_escena)
    1055.  00:85EB  3D                  	DEC		 A
    1056.  00:85EC  DD 77 06            	LD		 (IX + ESTRUCTURA_ESQUELETO.cont_sig_escena), A
    1057.  00:85EF                      	;no
    1058.  00:85EF  C0                  	RET		NZ
    1059.  00:85F0                      	;si
    1060.  00:85F0  DD 36 06 19         	LD		(IX + ESTRUCTURA_ESQUELETO.cont_sig_escena), RESETESQUEL		;resetea contador de nueve escena
    1061.  00:85F4                      	
    1062.  00:85F4  CD 12 86            	CALL	actualiza_escena_calavera
    1063.  00:85F7                      
    1064.  00:85F7                      	;pinto calaveras
    1065.  00:85F7  01 00 18            	LD		BC, TILMAP
    1066.  00:85FA  3E A9               	LD		 A, POSCALAVE1
    1067.  00:85FC  CD E8 80            	CALL	suma_A_BC
    1068.  00:85FF  D5                  	PUSH	DE
    1069.  00:8600  56                  	LD		 D, (HL)
    1070.  00:8601  CD 90 82            	CALL	pinta_tile_suelto
    1071.  00:8604                      	
    1072.  00:8604  01 00 18            	LD		BC, TILMAP
    1073.  00:8607  3E B6               	LD		 A, POSCALAVE2
    1074.  00:8609  CD E8 80            	CALL	suma_A_BC
    1075.  00:860C  E1                  	POP		HL
    1076.  00:860D  56                  	LD		 D, (HL)
    1077.  00:860E  C3 90 82            	JP		pinta_tile_suelto	
    1078.  00:8611                      fin_flip_calavera_esqueletos:
    1079.  00:8611  00                  var_aux_calavera	DB	0;
    1080.  00:8612                      
    1081.  00:8612                      
    1082.  00:8612                      ;;=====================================================
    1083.  00:8612                      ;;ACTUALIZA_ESCENA_CALAVERA
    1084.  00:8612                      ;;=====================================================	
    1085.  00:8612                      ; función: 	modifica las siguiente calavera a mostrar
    1086.  00:8612                      ; entrada: 	
    1087.  00:8612                      ; salida: 	DE (iportante porque se usa fuera) y ESTRUCTURA_ESQUELETO.escena
    1088.  00:8612                      ; toca:		TODOS.... muy importante DE
    1089.  00:8612                      actualiza_escena_calavera:
    1090.  00:8612                      	;consulta_escena
    1091.  00:8612  DD 7E 05            	LD		 A, (IX + ESTRUCTURA_ESQUELETO.escena)
    1092.  00:8615  32 11 86            	LD		(var_aux_calavera), A
    1093.  00:8618  B7                  	OR		 A
    1094.  00:8619  C2 1E 86            	JP		 NZ, .decrementa_escenas
    1095.  00:861C  3E 04               	LD		 A, RESETESCENAESQUEL
    1096.  00:861E                      .decrementa_escenas
    1097.  00:861E  3D                  	DEC		 A
    1098.  00:861F                      .fin_consulta_escena
    1099.  00:861F  DD 77 05            	LD		 (IX + ESTRUCTURA_ESQUELETO.escena), A
    1100.  00:8622                      	
    1101.  00:8622  21 A1 A8            	LD		HL, lista_escenas_calavera
    1102.  00:8625  3A 11 86            	LD		 A, (var_aux_calavera)
    1103.  00:8628  CD EE 80            	CALL	suma_A_HL
    1104.  00:862B                      	
    1105.  00:862B  54                  	LD		 D, H
    1106.  00:862C  5D                  	LD		 E, L
    1107.  00:862D                      fin_actualiza_escena_calavera:
    1108.  00:862D  C9                  	RET
    1109.  00:862E                      
     120   00:862E                      	
     121   00:862E                      	include "subr_sprites.asm"
       1.  00:862E                      
       2.  00:862E                      ;;=====================================================
       3.  00:862E                      ;;SUBRUTINAS ENCARGADAS DE MANEJAR LOS SPRITES
       4.  00:862E                      ;;=====================================================	
       5.  00:862E                      
       6.  00:862E                      
       7.  00:862E                      ;; PREGUNTAR SI A FERNANDO SI ES MEJOR USAR LISTAS O ALGO PARA AHORRAR CÓDIGO
       8.  00:862E                      
       9.  00:862E                      
      10.  00:862E                      
      11.  00:862E                      
      12.  00:862E                      ;;=====================================================
      13.  00:862E                      ;;CARGA_PATRONES_SPRITES_NIVEL
      14.  00:862E                      ;;=====================================================	
      15.  00:862E                      ; función: 	examina el nivel y carga los patrones específicos necesarios
      16.  00:862E                      ; entrada: 	-
      17.  00:862E                      ; salida: 	-
      18.  00:862E                      ; toca: 	-
      19.  00:862E                      carga_patrones_sprites_nivel:
      20.  00:862E                      	
      21.  00:862E  CD 39 86            	CALL 	carga_patrones_nivel_comunes
      22.  00:8631                      	
      23.  00:8631                      	;carga atrones no comunes
      24.  00:8631  3A B4 A7            	LD		 A, (prota_nivel)
      25.  00:8634  B7                  	OR		 A
      26.  00:8635  CA 45 86            	JP		 Z, carga_patrones_sprites_nivel1
      27.  00:8638                      	
      28.  00:8638                      	
      29.  00:8638                      fin_carga_patrones_sprites_nivel:
      30.  00:8638  C9                  	RET		;dejo este ret de momento pero cuando la subrutina esté terminada sobrará
      31.  00:8639                      
      32.  00:8639                      	;RET comparo numeros con jp para incluir el RET con lo que el último ret me sobra
      33.  00:8639                      
      34.  00:8639                      ;;=====================================================
      35.  00:8639                      ;;CARGA_PATRONES_SPRITES_NIVEL_COMUNES
      36.  00:8639                      ;;=====================================================	
      37.  00:8639                      ; función: 	carga los patrones comunes en todos los niveles
      38.  00:8639                      ; entrada: 	-
      39.  00:8639                      ; salida: 	-
      40.  00:8639                      ; toca: 	-
      41.  00:8639                      carga_patrones_nivel_comunes:	
      42.  00:8639  21 09 9B            	LD		HL, sprites_comunes
      43.  00:863C  11 00 38            	LD		DE, SPRTBL
      44.  00:863F  01 C0 00            	LD		BC, fin_sprites_comunes-sprites_comunes
      45.  00:8642  C3 5C 00            	JP		LDIRVM
      46.  00:8645                      fin_carga_patrones_nivel_comunes:
      47.  00:8645                      
      48.  00:8645                      
      49.  00:8645                      ;;=====================================================
      50.  00:8645                      ;;CARGA_PATRONES_SPRITES_NIVEL1
      51.  00:8645                      ;;=====================================================	
      52.  00:8645                      ; función: 	copia los patrones de los sprites que e van a usar en el nivel 1 en vram
      53.  00:8645                      ; entrada: 	-
      54.  00:8645                      ; salida: 	-
      55.  00:8645                      ; toca: 	-
      56.  00:8645                      carga_patrones_sprites_nivel1:
      57.  00:8645                      
      58.  00:8645                      
      59.  00:8645                      	;~ ;sprite sprite_reliquia
      60.  00:8645                      	;~ LD		HL,sprite_reliquia
      61.  00:8645                      	;~ LD		DE,#3880
      62.  00:8645                      	;~ LD		BC,32				;32 bytes (sprites de 2 x 2)
      63.  00:8645                      	;~ CALL	LDIRVM
      64.  00:8645                      
      65.  00:8645                      fin_carga_patrones_sprites:
      66.  00:8645  C9                  	RET
      67.  00:8646                      
      68.  00:8646                      
      69.  00:8646                      ;;=====================================================
      70.  00:8646                      ;;ACTUALIZA_ARRAY_SPRITES_VRAM
      71.  00:8646                      ;;=====================================================	
      72.  00:8646                      ; función: 	copia el array con los valores de los sprites (pos, color, plano) en VRAM
      73.  00:8646                      ; entrada: 	-
      74.  00:8646                      ; salida: 	-
      75.  00:8646                      ; toca: 	todos los registros. Como me interesa la velocidad, si necesito copiar de algo lo hago fuera
      76.  00:8646                      render_sprites:
      77.  00:8646                      	;volcando el array con toda la info de los sprites a la zona de atributos de sprites
      78.  00:8646  21 1C A9            	LD		HL,array_sprites
      79.  00:8649  11 00 1B            	LD		DE,SPRART
      80.  00:864C  01 80 00            	LD		BC,4 * 32				;32 sprites x 4 bytes controlando el sprite (Y, X, plano, color)
      81.  00:864F  C3 5C 00            	JP		LDIRVM
      82.  00:8652                      fin_actualiza_array_sprites_vram:
      83.  00:8652                      
      84.  00:8652                      
      85.  00:8652                      ;;=====================================================
      86.  00:8652                      ;;VUELCA_RESULTADO_PUNTOMIRA_ARRAY
      87.  00:8652                      ;;=====================================================	
      88.  00:8652                      ; función: 	coloca los valores del punto de mira en la variable array_sprites para ser volcados en VRAM
      89.  00:8652                      ; entrada: 	array_sprites_pm, prota.XXXXX
      90.  00:8652                      ; salida: 	-
      91.  00:8652                      ; toca: 	-
      92.  00:8652                      vuelca_resultado_puntomira_array:
      93.  00:8652  DD 21 1C A9         	LD		IX, array_sprites_pm
      94.  00:8656                      	;posición y de los dos sprites que conforman el punto de mira
      95.  00:8656  3A A5 A7            	LD		 A, (prota.posy)
      96.  00:8659  DD 77 00            	LD		(IX  ), A
      97.  00:865C  DD 77 04            	LD		(IX+4), A
      98.  00:865F                      	;posición x de los dos sprites que conforman el punto de mira
      99.  00:865F  3A A4 A7            	LD		 A, (prota.posx)
     100.  00:8662  DD 77 01            	LD		(IX+1), A
     101.  00:8665  DD 77 05            	LD		(IX+5), A
     102.  00:8668                      	;plano
     103.  00:8668  DD 36 02 00         	LD		(IX+2), 0
     104.  00:866C  DD 36 06 04         	LD		(IX+6), 4	;al ser sprites de 16x16 hay que ir de 4 en 4
     105.  00:8670                      	;color
     106.  00:8670  3A A6 A7            	LD		 A, (prota.escena)
     107.  00:8673  B7                  	OR		 A
     108.  00:8674  C2 80 86            	JP		NZ,.codigo_color_2
     109.  00:8677                      .codigo_color_1:
     110.  00:8677  DD 36 03 0F         	LD		(IX+3), COLBLANCO
     111.  00:867B  DD 36 07 08         	LD		(IX+7), COLROJO
     112.  00:867F  C9                  	RET
     113.  00:8680                      .codigo_color_2:
     114.  00:8680  DD 36 03 08         	LD		(IX+3), COLROJO
     115.  00:8684  DD 36 07 0F         	LD		(IX+7), COLBLANCO
     116.  00:8688  C9                  	RET
     117.  00:8689                      fin_vuelca_resultado_puntomira_array:
     118.  00:8689                      
     119.  00:8689                      
     120.  00:8689                      ;;=====================================================
     121.  00:8689                      ;;CHECK_PLAYER
     122.  00:8689                      ;;=====================================================	
     123.  00:8689                      ; función: 	MIRA EL CONTROL Y APLICA LA LOGICA DE MOVIMIENTO DEL PROTAGONISTA
     124.  00:8689                      ; entrada: 	-
     125.  00:8689                      ; salida: 	-
     126.  00:8689                      ; toca: 	A
     127.  00:8689                      check_player:
     128.  00:8689  CD 28 87            	CALL	update_controllers_status
     129.  00:868C  B7                  	OR		 A
     130.  00:868D  C8                  	RET		 Z						;si no se ha pulsado nada no se necesita mirar nada
     131.  00:868E                      
     132.  00:868E  CB 1F               	RR		 A
     133.  00:8690  DC A9 86            	CALL	 C, mueve_arriba
     134.  00:8693  CB 1F               	RR		 A
     135.  00:8695  DC C5 86            	CALL	 C, mueve_abajo
     136.  00:8698  CB 1F               	RR		 A
     137.  00:869A  DC D4 86            	CALL	 C, mueve_izquierda
     138.  00:869D  CB 1F               	RR		 A
     139.  00:869F  DC B6 86            	CALL	 C, mueve_derecha
     140.  00:86A2                      	
     141.  00:86A2                      	;zona para mirar disparo Recibe A que tendrá 0000 0 0 X-letra M X-espacio 
     142.  00:86A2  CD E1 86            	CALL	mira_disparo
     143.  00:86A5                      	
     144.  00:86A5  C3 52 86            	JP		vuelca_resultado_puntomira_array
     145.  00:86A8                      f;in_check_player:
     146.  00:86A8  C9                  	RET
     147.  00:86A9                      
     122   00:86A9                      	
     123   00:86A9                      	include "subr_teclado_joy.asm"
       1.  00:86A9                      ;;=====================================================
       2.  00:86A9                      ;;SUBRUTINAS QUE CAPTURN EL JOYSTICK Y TECLADO Y MUEVEN PUNTO DE MIRA
       3.  00:86A9                      ;;=====================================================
       4.  00:86A9                      
       5.  00:86A9                      ;;=====================================================
       6.  00:86A9                      ;;MUEVE_ARRIBA
       7.  00:86A9                      ;;=====================================================	
       8.  00:86A9                      ; función: 	decrementa y si se no sale de los límites el valor del punto de mira a la derecha
       9.  00:86A9                      ; entrada: 	-
      10.  00:86A9                      ; salida: 	-
      11.  00:86A9                      ; toca: 	-
      12.  00:86A9                      mueve_arriba:
      13.  00:86A9  F5                  	PUSH		AF
      14.  00:86AA                      	
      15.  00:86AA  3A A5 A7            	LD		 	 A, (prota.posy)
      16.  00:86AD  3D                  	DEC			 A
      17.  00:86AE  CA B4 86            	JP			 Z,.no_decrementa_y
      18.  00:86B1  32 A5 A7            	LD			(prota.posy), A
      19.  00:86B4                      	
      20.  00:86B4                      .no_decrementa_y:
      21.  00:86B4  F1                  	POP			AF
      22.  00:86B5                      fin_mueve_arriba:
      23.  00:86B5  C9                  	RET
      24.  00:86B6                      
      25.  00:86B6                      
      26.  00:86B6                      ;;=====================================================
      27.  00:86B6                      ;;MUEVE_DERECHA
      28.  00:86B6                      ;;=====================================================	
      29.  00:86B6                      ; función: 	incrementa si se no sale de los límites el valor del punto de mira a la derecha
      30.  00:86B6                      ; entrada: 	-
      31.  00:86B6                      ; salida: 	-
      32.  00:86B6                      ; toca: 	-
      33.  00:86B6                      mueve_derecha:
      34.  00:86B6  F5                  	PUSH		AF
      35.  00:86B7                      	
      36.  00:86B7  3A A4 A7            	LD		 	 A, (prota.posx)
      37.  00:86BA  3C                  	INC			 A
      38.  00:86BB  FE EF               	CP			 A, LIMPANTDER - 16
      39.  00:86BD  CA C3 86            	JP			 Z, .no_incrementa_x
      40.  00:86C0  32 A4 A7            	LD			(prota.posx), A
      41.  00:86C3                      	
      42.  00:86C3                      .no_incrementa_x:
      43.  00:86C3  F1                  	POP			AF
      44.  00:86C4                      fin_mueve_derecha:
      45.  00:86C4  C9                  	RET
      46.  00:86C5                      
      47.  00:86C5                      
      48.  00:86C5                      ;;=====================================================
      49.  00:86C5                      ;;MUEVE_ABAJO
      50.  00:86C5                      ;;=====================================================	
      51.  00:86C5                      ; función: 	incrementa y si se no sale de los límites el valor del punto de mira abajo
      52.  00:86C5                      ; entrada: 	-
      53.  00:86C5                      ; salida: 	-
      54.  00:86C5                      ; toca: 	-
      55.  00:86C5                      mueve_abajo:
      56.  00:86C5  F5                  	PUSH		AF
      57.  00:86C6                      	
      58.  00:86C6  3A A5 A7            	LD		 	 A, (prota.posy)
      59.  00:86C9  3C                  	INC			 A
      60.  00:86CA  FE 70               	CP			 A, LIMPANTABA - 16
      61.  00:86CC  CA D2 86            	JP			 Z,.no_incrementa_y
      62.  00:86CF  32 A5 A7            	LD			(prota.posy), A
      63.  00:86D2                      	
      64.  00:86D2                      .no_incrementa_y:
      65.  00:86D2  F1                  	POP			AF
      66.  00:86D3                      fin_mueve_abajo:
      67.  00:86D3  C9                  	RET
      68.  00:86D4                      	
      69.  00:86D4                      	
      70.  00:86D4                      ;;=====================================================
      71.  00:86D4                      ;;MUEVE_IZQUIERDA
      72.  00:86D4                      ;;=====================================================	
      73.  00:86D4                      ; función: 	decrementa x si se no sale de los límites el valor del punto de mira a la izquierda
      74.  00:86D4                      ; entrada: 	-
      75.  00:86D4                      ; salida: 	-
      76.  00:86D4                      ; toca: 	-
      77.  00:86D4                      mueve_izquierda:
      78.  00:86D4  F5                  	PUSH		AF
      79.  00:86D5                      	
      80.  00:86D5  3A A4 A7            	LD		 	 A, (prota.posx)
      81.  00:86D8  3D                  	DEC			 A
      82.  00:86D9                      ;	CP			 A, LIMPANTIZQ
      83.  00:86D9  CA DF 86            	JP			 Z,.no_decrementa_x
      84.  00:86DC  32 A4 A7            	LD			(prota.posx), A
      85.  00:86DF                      	
      86.  00:86DF                      .no_decrementa_x:
      87.  00:86DF  F1                  	POP			AF
      88.  00:86E0                      fin_mueve_izquierda:
      89.  00:86E0  C9                  	RET
      90.  00:86E1                      
      91.  00:86E1                      
      92.  00:86E1                      
      93.  00:86E1                      ;;=====================================================
      94.  00:86E1                      ;;MIRA_DISPARO
      95.  00:86E1                      ;;=====================================================	
      96.  00:86E1                      ; función: 	Mira si se ha pulsado alguno de los dos disparos
      97.  00:86E1                      ; entrada: 	A que tendrá 0000 0 0 X-letra M X-espacio 
      98.  00:86E1                      ; salida: 	-
      99.  00:86E1                      ; toca: 	A, B
     100.  00:86E1                      mira_disparo:
     101.  00:86E1                      .mira_boton_pulsado1:
     102.  00:86E1  CB 1F               	RR		 A						;preparo en el carry si se ha pulsado botón 1
     103.  00:86E3  D2 0C 87            	JP		 NC, .mira_boton_pulsado2					
     104.  00:86E6  F5                  	PUSH	AF						;copia A para usarlo después
     105.  00:86E7                      	;se ha pulsado barra o boton 1
     106.  00:86E7  3A A9 A7            	LD		 A, (prota.cadencia)
     107.  00:86EA  B7                  	OR		 A
     108.  00:86EB  CA F9 86            	JP		 Z, .efectua_disparo	;toca efectuar disparo realmente porque se ha pulsado lo suficiente el disparo
     109.  00:86EE                      .no_efectua_disparo: ;IF
     110.  00:86EE  3D                  		DEC		 A
     111.  00:86EF  32 A9 A7            		LD		(prota.cadencia), A	;resto cadencia hasta próximo disparo "real" (no automático por haber pulsado una tecla e ir demasiado rápido)
     112.  00:86F2  AF                  		XOR		 A 
     113.  00:86F3  32 A6 A7            		LD		(prota.escena), A
     114.  00:86F6  C3 0B 87            		JP		.fin_mira_disparo1
     115.  00:86F9                      .efectua_disparo:	;ELSE
     116.  00:86F9                      		;cambio colores del sprite
     117.  00:86F9  3A A6 A7            		LD		 A, (prota.escena)
     118.  00:86FC  2F                  		CPL		 
     119.  00:86FD  32 A6 A7            		LD		(prota.escena), A
     120.  00:8700                      		;reseteo cadencia para el próximo disparo
     121.  00:8700  3E 04               		LD		 A, LIMCADENCIA						;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
     122.  00:8702  32 A9 A7            		LD		 (prota.cadencia), A				;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
     123.  00:8705                      		;ejecuto sonido								;; ajustar cadencia y que cuando el disparo sea efectivo se reseteen los colores
     124.  00:8705  AF                  		XOR		 A
     125.  00:8706  0E 01               		LD		 C, 1
     126.  00:8708  CD D0 8D            		CALL	ayFX_INIT	
     127.  00:870B                      .fin_mira_disparo1
     128.  00:870B                      
     129.  00:870B  F1                  	POP		AF
     130.  00:870C                      .mira_boton_pulsado2:
     131.  00:870C  CB 1F               	RR		 A
     132.  00:870E  D0                  	RET		 NC
     133.  00:870F                      	;se ha pulsado shift o boton 2
     134.  00:870F                      	
     135.  00:870F  3A B6 A7            	LD		 A, (prota_reliquias)	;miro si le quedan reliquias
     136.  00:8712  B7                  	OR		 A
     137.  00:8713  C8                  	RET		 Z						;si no le quedan salgo ya
     138.  00:8714                      	
     139.  00:8714                      	;actuaciones si se usa la reliquia botón 2 o M y quedn reliquias.. (antes ya se puso el valor en A)
     140.  00:8714  3A B6 A7            	LD		A, (prota_reliquias)
     141.  00:8717  3D                  	DEC		 A
     142.  00:8718  32 B6 A7            	LD		(prota_reliquias), A
     143.  00:871B                      	
     144.  00:871B  3E 01               	LD		 A, 1
     145.  00:871D  0E 01               	LD		 C, 1
     146.  00:871F  CD D0 8D            	CALL	ayFX_INIT
     147.  00:8722                      	
     148.  00:8722  CD 57 84            	CALL 	efecto_imagen_tira_reliquia
     149.  00:8725                      	
     150.  00:8725  C3 75 82            	JP		pinta_reliquias
     151.  00:8728                      fin_mira_disparo:
     152.  00:8728                      ;	RET		
     153.  00:8728                      
     154.  00:8728                      
     155.  00:8728                      ;;============================================================
     156.  00:8728                      ;;Código de D. Fernando García (BitVision) (al que siempre le estaré agradecido)
     157.  00:8728                      ;check_8th_keyboard_row
     158.  00:8728                      ;read_joy_0
     159.  00:8728                      ;check_8th_keyboard_row
     160.  00:8728                      ;check_4th_keyboard_row
     161.  00:8728                      ;;============================================================
     162.  00:8728                      ;;  usa constantes:
     163.  00:8728                      ;PSG_A  equ  0a0h  ;reg address
     164.  00:8728                      ;PSG_W  equ  0a1h  ;reg data WR
     165.  00:8728                      ;PSG_R  equ  0a2h  ;reg data
     166.  00:8728                      
     167.  00:8728                      ;;=====================================================
     168.  00:8728                      ;;update_controllers_status
     169.  00:8728                      ;;=====================================================	
     170.  00:8728                      ;depends on the next rountine
     171.  00:8728                      ;  returns
     172.  00:8728                      ;  a - 0P2TRLDU
     173.  00:8728                      
     174.  00:8728                      update_controllers_status:
     175.  00:8728  CD 73 87                 call  check_8th_keyboard_row
     176.  00:872B                      [4]  rrc    a
     176.  00:872B  CB 0F CB 0F CB 0F CB 0F 
     177.  00:8733  47                       ld    b,a    		;save for later  xxxTRDUL
     178.  00:8734                      
     179.  00:8734  E6 01                    and    #01    		;save L
     180.  00:8736  CB 27                    sla    a
     181.  00:8738  CB 27                    sla    a    		;now 00000L00
     182.  00:873A  4F                       ld    c,a    		;save for later
     183.  00:873B                      
     184.  00:873B  78                       ld    a,b    		;again we've got xxxTRDUL. I am interested on leaving 000000DU on a
     185.  00:873C  CB 3F                    srl    a
     186.  00:873E  E6 03                    and    00000011b
     187.  00:8740                      						;we've got 000000DU on a
     188.  00:8740  B1                       or    c    		;now we've got 00000LDU
     189.  00:8741  4F                       ld    c,a    		;save for later
     190.  00:8742                      
     191.  00:8742  78                       ld    a,b
     192.  00:8743  E6 18                    and    00011000b 	;we've got 000TR000
     193.  00:8745  B1                       or    c
     194.  00:8746                           ;finally    000TRLDU
     195.  00:8746                      
     196.  00:8746                           ;and    00000100   ;preserve just
     197.  00:8746  47                       ld    b,a    		;save for later
     198.  00:8747  CD 81 87                 call  check_4th_keyboard_row      ;check M & P
     199.  00:874A  F5                       push  af
     200.  00:874B  E6 04                    and    00000100b	;filter just M
     201.  00:874D  87                       add    a
     202.  00:874E  87                       add    a
     203.  00:874F  87                       add    a           ;shift 3th to 6th bit
     204.  00:8750  B0                       or    b           	;merge with previous
     205.  00:8751  47                       ld    b,a
     206.  00:8752                      
     207.  00:8752  CD 5F 87                 call  read_joy_0
     208.  00:8755  E6 3F                    and    00111111b  	;we want just 002TRLDU  from joystick    (2 is second trigger)
     209.  00:8757  B0                       or    b      		;added 000TRLDU from keyboard
     210.  00:8758  47                       ld    b,a      	;save for later
     211.  00:8759  F1                       pop    af      	; let's check on P
     212.  00:875A                      
     213.  00:875A  E6 20                    and    00100000b
     214.  00:875C  87                       add    a      		;P status on 6th bit  ... so 0P2TRLDU
     215.  00:875D  B0                       or    b
     216.  00:875E                      
     217.  00:875E  C9                       ret
     218.  00:875F                      
     219.  00:875F                      
     220.  00:875F                      ;ret
     221.  00:875F                      ;  a -            xx2TRLDU
     222.  00:875F                      read_joy_0:
     223.  00:875F  F3                         di
     224.  00:8760  3E 0F                      ld    a,15
     225.  00:8762  D3 A0                      out    [PSG_A],a
     226.  00:8764  DB A2                      in    a,[PSG_R]
     227.  00:8766  E6 BF                      and    10111111b        ;joy0
     228.  00:8768                      
     229.  00:8768  D3 A1                      out    [PSG_W],a        ;set joy0
     230.  00:876A                      
     231.  00:876A  3E 0E                      ld    a,14
     232.  00:876C  D3 A0                      out    [PSG_A],a
     233.  00:876E  DB A2                      in    a,[PSG_R]
     234.  00:8770                      
     235.  00:8770  FB                         ei
     236.  00:8771  2F                         cpl
     237.  00:8772                      
     238.  00:8772  C9                         ret
     239.  00:8773                      
     240.  00:8773                      
     241.  00:8773                      ;ret
     242.  00:8773                      ;  a -      RDULxxxT
     243.  00:8773                      check_8th_keyboard_row:
     244.  00:8773  F3                       di
     245.  00:8774  DB AA                    in    a,(#aa)
     246.  00:8776  E6 F0                    and    #f0
     247.  00:8778  F6 08                    or    8
     248.  00:877A  D3 AA                    out    (#aa),a
     249.  00:877C  DB A9                    in    a,(#a9)
     250.  00:877E  FB                       ei
     251.  00:877F  2F                       cpl
     252.  00:8780                      
     253.  00:8780  C9                       ret
     254.  00:8781                      
     255.  00:8781                      
     256.  00:8781                      ;ret
     257.  00:8781                      ;  a -      xxxxxMxx
     258.  00:8781                      check_4th_keyboard_row:
     259.  00:8781  F3                       di
     260.  00:8782  DB AA                    in    a,(#aa)
     261.  00:8784  E6 F0                    and    #f0
     262.  00:8786  F6 04                    or    4
     263.  00:8788  D3 AA                    out    (#aa),a
     264.  00:878A  DB A9                    in    a,(#a9)
     265.  00:878C  FB                       ei
     266.  00:878D  2F                       cpl
     267.  00:878E                      
     268.  00:878E  C9                       ret
     269.  00:878F                      
     270.  00:878F                      ;--------------------------------------------
     271.  00:878F                      
     272.  00:878F                      
     273.  00:878F                      
     274.  00:878F                      
     275.  00:878F                      
     276.  00:878F                      
     277.  00:878F                      
     278.  00:878F                      
     124   00:878F                      	
     125   00:878F                      	include "subr_sonido.asm"
       1.  00:878F                      
       2.  00:878F                      ;;=====================================================
       3.  00:878F                      ;;SUBRUTINAS PARA SONIDOS
       4.  00:878F                      ;;=====================================================	
       5.  00:878F                      
       6.  00:878F                      ;;=====================================================
       7.  00:878F                      ;;INICIALIZA_REPLAYER_EFECTOS_INTERRUPCIONES
       8.  00:878F                      ;;=====================================================	
       9.  00:878F                      ; función: 	inicializa: replayer de música, player de efectos e interrupciones
      10.  00:878F                      ; entrada: 	-
      11.  00:878F                      ; salida: 	-
      12.  00:878F                      ; toca: 	HL, A
      13.  00:878F                      inicializa_replayer_efectos_interrupciones:
      14.  00:878F  F3                  	DI
      15.  00:8790                      
      16.  00:8790                      	;inicializacion de replayer musical
      17.  00:8790  21 38 8E            	LD		HL, song-99			; hl <- initial address of module - 99
      18.  00:8793  CD CF 87            	CALL	PT3_INIT			; Inits PT3 player
      19.  00:8796                      		
      20.  00:8796                      	;inicializacion del reproductor de efectos sonoros
      21.  00:8796  21 03 98            	LD		HL, sfx_bank
      22.  00:8799  CD BE 8D            	CALL	ayFX_SETUP
      23.  00:879C                      	
      24.  00:879C                      	;Engancha nuestra rutina de servicio al gancha que deja preparado la BIOS cuando se termina de pintar la pantalla (50 o 60 veces por segundo)
      25.  00:879C  3E C3               	LD		A, #C3
      26.  00:879E  32 9F FD            	LD		[H.TIMI], A
      27.  00:87A1  21 A9 87            	LD		HL, subrutina_isr
      28.  00:87A4  22 A0 FD            	LD		[H.TIMI+1], HL
      29.  00:87A7                      	
      30.  00:87A7  FB                  	EI		;optimizacion:
      31.  00:87A8                      			;piensa que las dos ultimas lineas podrian haber sido: 
      32.  00:87A8                      			;ei						;primero ei
      33.  00:87A8                      			;ld		[H.TIMI+1],hl	;luego este ld
      34.  00:87A8                      									;PENSAR (y consultar ) PORQUE!!!!
      35.  00:87A8                      fin_inicializa_replayer_efectos_interrupciones:
      36.  00:87A8  C9                  	RET
      37.  00:87A9                      
      38.  00:87A9                      
      39.  00:87A9                      
      40.  00:87A9                      ;;=====================================================
      41.  00:87A9                      ;;NUESTRA_ISR
      42.  00:87A9                      ;;=====================================================	
      43.  00:87A9                      ; función: 	envía datos al PSG + toca un trozo de música + toca trozo de 
      44.  00:87A9                      ; entrada: 	-
      45.  00:87A9                      ; salida: 	-
      46.  00:87A9                      ; toca: 	HL, A
      47.  00:87A9                      subrutina_isr:
      48.  00:87A9  CD 14 8D            	CALL	PT3_ROUT			;envia los datos a los registros del PSG
      49.  00:87AC  CD 1C 8C            	CALL	PT3_PLAY			;calcula el siguiente 'trocito' de musica que sera enviado al proxima vez
      50.  00:87AF  C3 06 8E            	JP		ayFX_PLAY			;calcula el siguiente 'trocito' de efecto especial de sonido que sera enviado la proxima vez
      51.  00:87B2                      fin_subrutina_isr:
      52.  00:87B2                      	;RET
      53.  00:87B2                      
      54.  00:87B2                      
      55.  00:87B2                      
      56.  00:87B2                      ;;=====================================================
      57.  00:87B2                      ;;DEFINICIÓN DE SUBRUTINAS DE FERNANDO PARA COMPRESIÓN Y SONIDO
      58.  00:87B2                      ;;=====================================================
      59.  00:87B2                      subrutinas_sonido:
      60.  00:87B2                      	include	"PT3-ROM_sjasm.asm"
       1:  00:87B2                      		; --- PT3 REPLAYER WORKING ON ROM ---
       2:  00:87B2                      		; --- Can be assembled with asMSX ---
       3:  00:87B2                      		; --- ROM version: MSX-KUN        ---
       4:  00:87B2                      		; --- asMSX version 2: SapphiRe   ---
       5:  00:87B2                      
       6:  00:87B2                      ; Based on MSX full version of PT3 by Dioniso
       7:  00:87B2                      ;
       8:  00:87B2                      ; This version of the replayer can be used with any note table
       9:  00:87B2                      ; This version also allows the use of PT3 commands
      10:  00:87B2                      ; First 99 bytes of each PT3 module should be stripped off
      11:  00:87B2                      ;
      12:  00:87B2                      ; PLAY and PSG WRITE routines seperated to allow independent calls
      13:  00:87B2                      ;
      14:  00:87B2                      ; ROM LENGTH: 1549 bytes
      15:  00:87B2                      ; RAM LENGTH:  576 bytes
      16:  00:87B2                      
      17:  00:87B2                      
      18:  00:87B2                      
      19:  00:87B2                      ;SJASM version by BTV 2016
      20:  00:87B2                      
      21:  00:87B2                      
      22:  00:87B2                      		; --- CONSTANT VALUES DEFINITION ---
      23:  00:87B2                      
      24:  00:87B2                      ;ChannelsVars
      25:  00:87B2                      ;struc	CHNPRM
      26:  00:87B2                      ;reset group
      27:  00:87B2  (00:0000)           CHNPRM_PsInOr	equ 0	;RESB 1
      28:  00:87B2  (00:0001)           CHNPRM_PsInSm	equ 1	;RESB 1
      29:  00:87B2  (00:0002)           CHNPRM_CrAmSl	equ 2	;RESB 1
      30:  00:87B2  (00:0003)           CHNPRM_CrNsSl	equ 3	;RESB 1
      31:  00:87B2  (00:0004)           CHNPRM_CrEnSl	equ 4	;RESB 1
      32:  00:87B2  (00:0005)           CHNPRM_TSlCnt	equ 5	;RESB 1
      33:  00:87B2  (00:0006)           CHNPRM_CrTnSl	equ 6	;RESW 1
      34:  00:87B2  (00:0008)           CHNPRM_TnAcc	equ 8	;RESW 1
      35:  00:87B2  (00:000A)           CHNPRM_COnOff	equ 10	;RESB 1
      36:  00:87B2                      ;reset group
      37:  00:87B2                      
      38:  00:87B2  (00:000B)           CHNPRM_OnOffD	equ 11	;RESB 1
      39:  00:87B2                      
      40:  00:87B2                      ;IX for PTDECOD here [+12]
      41:  00:87B2  (00:000C)           CHNPRM_OffOnD	equ 12	;RESB 1
      42:  00:87B2  (00:000D)           CHNPRM_OrnPtr	equ 13	;RESW 1
      43:  00:87B2  (00:000F)           CHNPRM_SamPtr	equ 15	;RESW 1
      44:  00:87B2  (00:0011)           CHNPRM_NNtSkp	equ 17	;RESB 1
      45:  00:87B2  (00:0012)           CHNPRM_Note	equ 18	;RESB 1
      46:  00:87B2  (00:0013)           CHNPRM_SlToNt	equ 19	;RESB 1
      47:  00:87B2  (00:0014)           CHNPRM_Env_En	equ 20	;RESB 1
      48:  00:87B2  (00:0015)           CHNPRM_Flags	equ 21	;RESB 1
      49:  00:87B2                       ;Enabled - 0,SimpleGliss - 2
      50:  00:87B2  (00:0016)           CHNPRM_TnSlDl	equ 22	;RESB 1
      51:  00:87B2  (00:0017)           CHNPRM_TSlStp	equ 23	;RESW 1
      52:  00:87B2  (00:0019)           CHNPRM_TnDelt	equ 25	;RESW 1
      53:  00:87B2  (00:001B)           CHNPRM_NtSkCn	equ 27	;RESB 1
      54:  00:87B2  (00:001C)           CHNPRM_Volume	equ 28	;RESB 1
      55:  00:87B2  (00:001D)           CHNPRM_Size	equ 29	;RESB 1
      56:  00:87B2                      ;endstruc
      57:  00:87B2                      
      58:  00:87B2                      ;struc	AR
      59:  00:87B2  (00:0000)           AR_TonA		equ 0	;RESW 1
      60:  00:87B2  (00:0002)           AR_TonB		equ 2	;RESW 1
      61:  00:87B2  (00:0004)           AR_TonC		equ 4	;RESW 1
      62:  00:87B2  (00:0006)           AR_Noise	equ 6	;RESB 1
      63:  00:87B2  (00:0007)           AR_Mixer	equ 7	;RESB 1
      64:  00:87B2  (00:0008)           AR_AmplA	equ 8	;RESB 1
      65:  00:87B2  (00:0009)           AR_AmplB	equ 9	;RESB 1
      66:  00:87B2  (00:000A)           AR_AmplC	equ 10	;RESB 1
      67:  00:87B2  (00:000B)           AR_Env		equ 11	;RESW 1
      68:  00:87B2  (00:000D)           AR_EnvTp	equ 13	;RESB 1
      69:  00:87B2                      ;endstruc
      70:  00:87B2                      
      71:  00:87B2                      		; --- CODE STARTS HERE ---
      72:  00:87B2                      
      73:  00:87B2  21 00 F0            CHECKLP:	LD	HL,PT3_SETUP
      74:  00:87B5  CB FE               		SET	7,[HL]
      75:  00:87B7  CB 46               		BIT	0,[HL]
      76:  00:87B9  C8                  		RET	Z
      77:  00:87BA  E1                  		POP	HL
      78:  00:87BB  21 7A F0            		LD	HL,DelyCnt
      79:  00:87BE  34                  		INC	[HL]
      80:  00:87BF  21 3E F0            		LD	HL,ChanA+CHNPRM_NtSkCn
      81:  00:87C2  34                  		INC	[HL]
      82:  00:87C3  AF                  PT3_MUTE:	XOR	A
      83:  00:87C4  67                  		LD	H,A
      84:  00:87C5  6F                  		LD	L,A
      85:  00:87C6  32 48 F1            		LD	[AYREGS+AR_AmplA],A
      86:  00:87C9  22 49 F1            		LD	[AYREGS+AR_AmplB],HL
      87:  00:87CC  C3 15 8D            		JP	ROUT_A0
      88:  00:87CF                      
      89:  00:87CF                      PT3_INIT:	;HL - AddressOfModule - 100
      90:  00:87CF  22 01 F0            		LD [PT3_MODADDR],HL
      91:  00:87D2  E5                  		PUSH HL
      92:  00:87D3  11 64 00            		LD DE,100
      93:  00:87D6  19                  		ADD HL,DE
      94:  00:87D7  7E                  		LD A,[HL]
      95:  00:87D8  32 1C F0            		LD [PT3_Delay],A
      96:  00:87DB  E5                  		PUSH HL
      97:  00:87DC  DD E1               		POP IX
      98:  00:87DE  19                  		ADD HL,DE
      99:  00:87DF  22 03 F0            		LD [PT3_CrPsPtr],HL
     100:  00:87E2  DD 5E 02            		LD E,[IX+102-100]
     101:  00:87E5  19                  		ADD HL,DE
     102:  00:87E6  23                  		INC HL
     103:  00:87E7  22 18 F0            		LD [PT3_LPosPtr],HL
     104:  00:87EA  D1                  		POP DE
     105:  00:87EB  DD 6E 03            		LD L,[IX+103-100]
     106:  00:87EE  DD 66 04            		LD H,[IX+104-100]
     107:  00:87F1  19                  		ADD HL,DE
     108:  00:87F2  22 1A F0            		LD [PT3_PatsPtr],HL
     109:  00:87F5  21 A9 00            		LD HL,169
     110:  00:87F8  19                  		ADD HL,DE
     111:  00:87F9  22 07 F0            		LD [PT3_OrnPtrs],HL
     112:  00:87FC  21 69 00            		LD HL,105
     113:  00:87FF  19                  		ADD HL,DE
     114:  00:8800  22 05 F0            		LD [PT3_SAMPTRS],HL
     115:  00:8803  21 00 F0            		LD HL,PT3_SETUP
     116:  00:8806  CB BE               		RES 7,[HL]
     117:  00:8808                      
     118:  00:8808                      		; --- note table data depacker ---
     119:  00:8808                      		; Depacks first 12 tones of each tone table
     120:  00:8808                      
     121:  00:8808  11 89 8D            		LD DE,T_PACK
     122:  00:880B  01 B1 F1            		LD BC,T1_+(2*49)-1
     123:  00:880E  1A                  .TP_0:		LD A,[DE]
     124:  00:880F  13                  		INC DE
     125:  00:8810  FE 1E               		CP 15*2
     126:  00:8812  30 06               		JR NC,.TP_1
     127:  00:8814  67                  		LD H,A
     128:  00:8815  1A                  		LD A,[DE]
     129:  00:8816  6F                  		LD L,A
     130:  00:8817  13                  		INC DE
     131:  00:8818  18 07               		JR .TP_2
     132:  00:881A  D5                  .TP_1:		PUSH DE
     133:  00:881B  16 00               		LD D,0
     134:  00:881D  5F                  		LD E,A
     135:  00:881E  19                  		ADD HL,DE
     136:  00:881F  19                  		ADD HL,DE
     137:  00:8820  D1                  		POP DE
     138:  00:8821  7C                  .TP_2:		LD A,H
     139:  00:8822  02                  		LD [BC],A
     140:  00:8823  0B                  		DEC BC
     141:  00:8824  7D                  		LD A,L
     142:  00:8825  02                  		LD [BC],A
     143:  00:8826  0B                  		DEC BC
     144:  00:8827  D6 F0               		SUB $F0
     145:  00:8829  20 E3               		JR NZ,.TP_0
     146:  00:882B                      
     147:  00:882B                      		; --- INITIALIZE PT3 VARIABLES ---
     148:  00:882B  21 23 F0            		LD HL,VARS
     149:  00:882E  77                  		LD [HL],A
     150:  00:882F  11 24 F0            		LD DE,VARS+1
     151:  00:8832  01 2C 01            		LD BC,VAR0END-VARS-1
     152:  00:8835  ED B0               		LDIR
     153:  00:8837                      
     154:  00:8837  3C                  		INC A
     155:  00:8838  32 7A F0            		LD [DelyCnt],A
     156:  00:883B  21 01 F0            		LD HL,$F001 ;H - CHNPRM_Volume, L - CHNPRM_NtSkCn
     157:  00:883E  22 3E F0            		LD [ChanA+CHNPRM_NtSkCn],HL
     158:  00:8841  22 5B F0            		LD [ChanB+CHNPRM_NtSkCn],HL
     159:  00:8844  22 78 F0            		LD [ChanC+CHNPRM_NtSkCn],HL
     160:  00:8847                      
     161:  00:8847  21 85 8D            		LD HL,EMPTYSAMORN
     162:  00:884A  22 12 F0            		LD [PT3_AdInPtA],HL ;ptr to zero
     163:  00:884D  22 30 F0            		LD [ChanA+CHNPRM_OrnPtr],HL ;ornament 0 is "0,1,0"
     164:  00:8850  22 4D F0            		LD [ChanB+CHNPRM_OrnPtr],HL ;in all versions from
     165:  00:8853  22 6A F0            		LD [ChanC+CHNPRM_OrnPtr],HL ;3.xx to 3.6x and VTII
     166:  00:8856                      
     167:  00:8856  22 32 F0            		LD [ChanA+CHNPRM_SamPtr],HL ;S1 There is no default
     168:  00:8859  22 4F F0            		LD [ChanB+CHNPRM_SamPtr],HL ;S2 sample in PT3, so, you
     169:  00:885C  22 6C F0            		LD [ChanC+CHNPRM_SamPtr],HL ;S3 can comment S1,2,3; see
     170:  00:885F                      					    ;also EMPTYSAMORN comment
     171:  00:885F                      
     172:  00:885F                      		; --- NOTE TABLE CREATOR (c) Ivan Roshin, adapted by SapphiRe ---
     173:  00:885F  DD 7E FF            		LD A,[IX+99-100] ;TONE TABLE NUMBER
     174:  00:8862  17                  		RLA
     175:  00:8863  E6 07               		AND 7
     176:  00:8865  21 35 8D            		LD HL,NT_DATA
     177:  00:8868  D5                  		PUSH DE
     178:  00:8869  50                  		LD D,B		; ld d,0 (bc is 0000 after LDIR)
     179:  00:886A  87                  		ADD A,A
     180:  00:886B  5F                  		LD E,A
     181:  00:886C  19                  		ADD HL,DE	; hl -> init of correct note table data
     182:  00:886D  5E                  		LD E,[HL]
     183:  00:886E  23                  		INC HL
     184:  00:886F  CB 3B               		SRL E
     185:  00:8871  9F                  		SBC A,A
     186:  00:8872  E6 A7               		AND $A7			;$00 (NOP) or $A7 (AND A)
     187:  00:8874  32 21 F0            		LD [PT3_NTL3],A		; CORRECT INSTRUCTION, DEPENDS OF SELECTED TABLE
     188:  00:8877  3E C9               		LD A,$C9		; RET CODE
     189:  00:8879  32 22 F0            		LD [PT3_NTL3+1],A	; RET PLACED
     190:  00:887C  EB                  		EX DE,HL
     191:  00:887D  C1                  		POP BC ;BC=T1_
     192:  00:887E  09                  		ADD HL,BC
     193:  00:887F                      
     194:  00:887F  1A                  		LD A,[DE]                           
     195:  00:8880                      
     196:  00:8880  01 45 8D            		LD BC,T_
     197:  00:8883  81                  		ADD A,C
     198:  00:8884  4F                  		LD C,A
     199:  00:8885  88                  		ADC A,B
     200:  00:8886                      
     201:  00:8886  91                  		SUB C
     202:  00:8887  47                  		LD B,A
     203:  00:8888  C5                  		PUSH BC
     204:  00:8889  11 80 F0            		LD DE,NT_
     205:  00:888C  D5                  		PUSH DE
     206:  00:888D                      
     207:  00:888D  06 0C               		LD B,12
     208:  00:888F  C5                  .L1:		PUSH BC
     209:  00:8890  4E                  		LD C,[HL]
     210:  00:8891  23                  		INC HL
     211:  00:8892  E5                  		PUSH HL
     212:  00:8893  46                  		LD B,[HL]
     213:  00:8894                      
     214:  00:8894  D5                  		PUSH DE
     215:  00:8895  EB                  		EX DE,HL
     216:  00:8896  11 17 00            		LD DE,23
     217:  00:8899  DD 26 08            		db $DD,$26,$08	;LD XH,8
     218:  00:889C                      
     219:  00:889C  CB 38               .L2:		SRL B
     220:  00:889E  CB 19               		RR C
     221:  00:88A0  CD 21 F0            .L3:		CALL PT3_NTL3	;AND A or NOP
     222:  00:88A3  79                  		LD A,C
     223:  00:88A4  8A                  		ADC A,D	;=ADC 0
     224:  00:88A5  77                  		LD [HL],A
     225:  00:88A6  23                  		INC HL
     226:  00:88A7  78                  		LD A,B
     227:  00:88A8  8A                  		ADC A,D
     228:  00:88A9  77                  		LD [HL],A
     229:  00:88AA  19                  		ADD HL,DE
     230:  00:88AB  DD 25               		db $DD,$25	;DEC XH
     231:  00:88AD  20 ED               		JR NZ,.L2
     232:  00:88AF                      
     233:  00:88AF  D1                  		POP DE
     234:  00:88B0  13                  		INC DE
     235:  00:88B1  13                  		INC DE
     236:  00:88B2  E1                  		POP HL
     237:  00:88B3  23                  		INC HL
     238:  00:88B4  C1                  		POP BC
     239:  00:88B5  10 D8               		DJNZ .L1
     240:  00:88B7                      
     241:  00:88B7  E1                  		POP HL
     242:  00:88B8  D1                  		POP DE
     243:  00:88B9                      
     244:  00:88B9  7B                  		LD A,E
     245:  00:88BA  D5                  		PUSH DE
     246:  00:88BB  11 51 8D            		LD DE,TCOLD_1
     247:  00:88BE  BB                  		CP E
     248:  00:88BF  D1                  		POP DE
     249:  00:88C0  20 05               		JR NZ,.CORR_1
     250:  00:88C2  3E FD               		LD A,$FD
     251:  00:88C4  32 AE F0            		LD [NT_+$2E],A
     252:  00:88C7                      
     253:  00:88C7  1A                  .CORR_1:	LD A,[DE]
     254:  00:88C8  A7                  		AND A
     255:  00:88C9  28 11               		JR Z,.TC_EXIT
     256:  00:88CB  1F                  		RRA
     257:  00:88CC  F5                  		PUSH AF
     258:  00:88CD  87                  		ADD A,A
     259:  00:88CE  4F                  		LD C,A
     260:  00:88CF  09                  		ADD HL,BC
     261:  00:88D0  F1                  		POP AF
     262:  00:88D1  30 02               		JR NC,.CORR_2
     263:  00:88D3  35                  		DEC [HL]
     264:  00:88D4  35                  		DEC [HL]
     265:  00:88D5  34                  .CORR_2:	INC [HL]
     266:  00:88D6  A7                  		AND A
     267:  00:88D7  ED 42               		SBC HL,BC
     268:  00:88D9  13                  		INC DE
     269:  00:88DA  18 EB               		JR .CORR_1
     270:  00:88DC                      
     271:  00:88DC                      .TC_EXIT:	;POP AF
     272:  00:88DC                      
     273:  00:88DC                      		; --- CREATE PT3 VOLUME TABLE (c) Ivan Roshin, adapted by SapphiRe ---
     274:  00:88DC  21 11 00            		ld	hl,$11
     275:  00:88DF  54                  		ld	d,h
     276:  00:88E0  5C                  		ld	e,h
     277:  00:88E1  DD 21 50 F1         		ld	IX,VT_+16
     278:  00:88E5  06 0F               		ld	b,15
     279:  00:88E7  E5                  .INITV1:	push	hl
     280:  00:88E8  19                  		add	hl,de
     281:  00:88E9  EB                  		ex	de,hl
     282:  00:88EA  ED 62               		sbc	hl,hl
     283:  00:88EC  48                  		ld	c,b
     284:  00:88ED  06 10               		ld	b,16
     285:  00:88EF  7D                  .INITV2:	ld	a,l
     286:  00:88F0  17                  		rla
     287:  00:88F1  7C                  		ld	a,h
     288:  00:88F2  CE 00               		adc	a,0
     289:  00:88F4  DD 77 00            		ld	[ix],a
     290:  00:88F7  DD 23               		inc	ix
     291:  00:88F9  19                  		add	hl,de
     292:  00:88FA  10 F3               		djnz	.INITV2
     293:  00:88FC  E1                  		pop	hl
     294:  00:88FD  7B                  		ld	a,e
     295:  00:88FE  FE 77               		cp	$77
     296:  00:8900  20 01               		jr	nz,.INITV3
     297:  00:8902  1C                  		inc	e
     298:  00:8903  41                  .INITV3:	ld	b,c
     299:  00:8904  10 E1               		djnz	.INITV1
     300:  00:8906                      
     301:  00:8906  C9                  		RET
     302:  00:8907                      
     303:  00:8907                      		;pattern decoder
     304:  00:8907  DD 36 08 00         PD_OrSm:	LD [IX+(CHNPRM_Env_En-12)],0
     305:  00:890B  CD 91 8A            		CALL SETORN
     306:  00:890E  0A                  		LD A,[BC]
     307:  00:890F  03                  		INC BC
     308:  00:8910  0F                  		RRCA
     309:  00:8911                      
     310:  00:8911  87                  PD_SAM:		ADD A,A
     311:  00:8912  5F                  PD_SAM_:	LD E,A
     312:  00:8913  16 00               		LD D,0
     313:  00:8915  2A 05 F0            		LD HL,[PT3_SAMPTRS]
     314:  00:8918  19                  		ADD HL,DE
     315:  00:8919  5E                  		LD E,[HL]
     316:  00:891A  23                  		INC HL
     317:  00:891B  56                  		LD D,[HL]
     318:  00:891C  2A 01 F0            		LD HL,[PT3_MODADDR]
     319:  00:891F  19                  		ADD HL,DE
     320:  00:8920  DD 75 03            		LD [IX+(CHNPRM_SamPtr-12)],L
     321:  00:8923  DD 74 04            		LD [IX+(CHNPRM_SamPtr+1-12)],H
     322:  00:8926  18 41               		JR PD_LOOP
     323:  00:8928                      
     324:  00:8928  07                  PD_VOL:		RLCA
     325:  00:8929  07                  		RLCA
     326:  00:892A  07                  		RLCA
     327:  00:892B  07                  		RLCA
     328:  00:892C  DD 77 10            		LD [IX+(CHNPRM_Volume-12)],A
     329:  00:892F  18 3B               		JR PD_LP2
     330:  00:8931                      	
     331:  00:8931  DD 77 08            PD_EOff:	LD [IX+(CHNPRM_Env_En-12)],A
     332:  00:8934  DD 77 F4            		LD [IX+(CHNPRM_PsInOr-12)],A
     333:  00:8937  18 33               		JR PD_LP2
     334:  00:8939                      
     335:  00:8939  3D                  PD_SorE:	DEC A
     336:  00:893A  20 07               		JR NZ,PD_ENV
     337:  00:893C  0A                  		LD A,[BC]
     338:  00:893D  03                  		INC BC
     339:  00:893E  DD 77 05            		LD [IX+(CHNPRM_NNtSkp-12)],A
     340:  00:8941  18 29               		JR PD_LP2
     341:  00:8943                      
     342:  00:8943  CD 75 8A            PD_ENV:		CALL SETENV
     343:  00:8946  18 24               		JR PD_LP2
     344:  00:8948                      
     345:  00:8948  CD 91 8A            PD_ORN:		CALL SETORN
     346:  00:894B  18 1C               		JR PD_LOOP
     347:  00:894D                             
     348:  00:894D  DD 77 08            PD_ESAM:	LD [IX+(CHNPRM_Env_En-12)],A
     349:  00:8950  DD 77 F4            		LD [IX+(CHNPRM_PsInOr-12)],A
     350:  00:8953  C4 75 8A            		CALL NZ,SETENV
     351:  00:8956  0A                  		LD A,[BC]
     352:  00:8957  03                  		INC BC
     353:  00:8958  18 B8               		JR PD_SAM_
     354:  00:895A                      
     355:  00:895A  DD 7E 06            PTDECOD:	LD A,[IX+(CHNPRM_Note-12)]
     356:  00:895D  32 0F F0            		LD [PT3_PrNote],A
     357:  00:8960  DD 6E FA            		LD L,[IX+(CHNPRM_CrTnSl-12)]
     358:  00:8963  DD 66 FB            		LD H,[IX+(CHNPRM_CrTnSl+1-12)]
     359:  00:8966  22 10 F0            		LD [PT3_PrSlide],HL
     360:  00:8969                      
     361:  00:8969  11 10 20            PD_LOOP:	LD DE,$2010
     362:  00:896C  0A                  PD_LP2:		LD A,[BC]
     363:  00:896D  03                  		INC BC
     364:  00:896E  83                  		ADD A,E
     365:  00:896F  38 96               		JR C,PD_OrSm
     366:  00:8971  82                  		ADD A,D
     367:  00:8972  28 4A               		JR Z,PD_FIN
     368:  00:8974  38 9B               		JR C,PD_SAM
     369:  00:8976  83                  		ADD A,E
     370:  00:8977  28 25               		JR Z,PD_REL
     371:  00:8979  38 AD               		JR C,PD_VOL
     372:  00:897B  83                  		ADD A,E
     373:  00:897C  28 B3               		JR Z,PD_EOff
     374:  00:897E  38 B9               		JR C,PD_SorE
     375:  00:8980  C6 60               		ADD A,96
     376:  00:8982  38 20               		JR C,PD_NOTE
     377:  00:8984  83                  		ADD A,E
     378:  00:8985  38 C1               		JR C,PD_ORN
     379:  00:8987  82                  		ADD A,D
     380:  00:8988  38 0F               		JR C,PD_NOIS
     381:  00:898A  83                  		ADD A,E
     382:  00:898B  38 C0               		JR C,PD_ESAM
     383:  00:898D  87                  		ADD A,A
     384:  00:898E  5F                  		LD E,A
     385:  00:898F  21 CA 69            		LD HL,(SPCCOMS+$DF20) % 65536	; Adapted from original Speccy version (saves 6 bytes)
     386:  00:8992  19                  		ADD HL,DE
     387:  00:8993  5E                  		LD E,[HL]
     388:  00:8994  23                  		INC HL
     389:  00:8995  56                  		LD D,[HL]
     390:  00:8996  D5                  		PUSH DE
     391:  00:8997  18 D0               		JR PD_LOOP
     392:  00:8999                      
     393:  00:8999  32 7E F0            PD_NOIS:	LD [Ns_Base],A
     394:  00:899C  18 CE               		JR PD_LP2
     395:  00:899E                      
     396:  00:899E  DD CB 09 86         PD_REL:		RES 0,[IX+(CHNPRM_Flags-12)]
     397:  00:89A2  18 08               		JR PD_RES
     398:  00:89A4                      	
     399:  00:89A4  DD 77 06            PD_NOTE:	LD [IX+(CHNPRM_Note-12)],A
     400:  00:89A7  DD CB 09 C6         		SET 0,[IX+(CHNPRM_Flags-12)]
     401:  00:89AB  AF                  		XOR A
     402:  00:89AC                      
     403:  00:89AC  ED 73 09 F0         PD_RES:		LD [PT3_PDSP],SP
     404:  00:89B0  DD F9               		LD SP,IX
     405:  00:89B2  67                  		LD H,A
     406:  00:89B3  6F                  		LD L,A
     407:  00:89B4  E5                  		PUSH HL
     408:  00:89B5  E5                  		PUSH HL
     409:  00:89B6  E5                  		PUSH HL
     410:  00:89B7  E5                  		PUSH HL
     411:  00:89B8  E5                  		PUSH HL
     412:  00:89B9  E5                  		PUSH HL
     413:  00:89BA  ED 7B 09 F0         		LD SP,[PT3_PDSP]
     414:  00:89BE                      
     415:  00:89BE  DD 7E 05            PD_FIN:		LD A,[IX+(CHNPRM_NNtSkp-12)]
     416:  00:89C1  DD 77 0F            		LD [IX+(CHNPRM_NtSkCn-12)],A
     417:  00:89C4  C9                  		RET
     418:  00:89C5                      
     419:  00:89C5  DD CB 09 96         C_PORTM:	RES 2,[IX+(CHNPRM_Flags-12)]
     420:  00:89C9  0A                  		LD A,[BC]
     421:  00:89CA  03                  		INC BC
     422:  00:89CB                      		;SKIP PRECALCULATED TONE DELTA [BECAUSE
     423:  00:89CB                      		;CANNOT BE RIGHT AFTER PT3 COMPILATION]
     424:  00:89CB  03                  		INC BC
     425:  00:89CC  03                  		INC BC
     426:  00:89CD  DD 77 0A            		LD [IX+(CHNPRM_TnSlDl-12)],A
     427:  00:89D0  DD 77 F9            		LD [IX+(CHNPRM_TSlCnt-12)],A
     428:  00:89D3  11 80 F0            		LD DE,NT_
     429:  00:89D6  DD 7E 06            		LD A,[IX+(CHNPRM_Note-12)]
     430:  00:89D9  DD 77 07            		LD [IX+(CHNPRM_SlToNt-12)],A
     431:  00:89DC  87                  		ADD A,A
     432:  00:89DD  6F                  		LD L,A
     433:  00:89DE  26 00               		LD H,0
     434:  00:89E0  19                  		ADD HL,DE
     435:  00:89E1  7E                  		LD A,[HL]
     436:  00:89E2  23                  		INC HL
     437:  00:89E3  66                  		LD H,[HL]
     438:  00:89E4  6F                  		LD L,A
     439:  00:89E5  E5                  		PUSH HL
     440:  00:89E6  3A 0F F0            		LD A,[PT3_PrNote]
     441:  00:89E9  DD 77 06            		LD [IX+(CHNPRM_Note-12)],A
     442:  00:89EC  87                  		ADD A,A
     443:  00:89ED  6F                  		LD L,A
     444:  00:89EE  26 00               		LD H,0
     445:  00:89F0  19                  		ADD HL,DE
     446:  00:89F1  5E                  		LD E,[HL]
     447:  00:89F2  23                  		INC HL
     448:  00:89F3  56                  		LD D,[HL]
     449:  00:89F4  E1                  		POP HL
     450:  00:89F5  ED 52               		SBC HL,DE
     451:  00:89F7  DD 75 0D            		LD [IX+(CHNPRM_TnDelt-12)],L
     452:  00:89FA  DD 74 0E            		LD [IX+(CHNPRM_TnDelt+1-12)],H
     453:  00:89FD  ED 5B 10 F0         		LD DE,[PT3_PrSlide]
     454:  00:8A01  DD 73 FA            		LD [IX+(CHNPRM_CrTnSl-12)],E
     455:  00:8A04  DD 72 FB            		LD [IX+(CHNPRM_CrTnSl+1-12)],D
     456:  00:8A07  0A                  		LD A,[BC] ;SIGNED TONE STEP
     457:  00:8A08  03                  		INC BC
     458:  00:8A09  08                  		EX AF,AF'
     459:  00:8A0A  0A                  		LD A,[BC]
     460:  00:8A0B  03                  		INC BC
     461:  00:8A0C  A7                  		AND A
     462:  00:8A0D  28 01               		JR Z,.NOSIG
     463:  00:8A0F  EB                  		EX DE,HL
     464:  00:8A10  ED 52               .NOSIG:	SBC HL,DE
     465:  00:8A12  F2 1A 8A            		JP P,SET_STP
     466:  00:8A15  2F                  		CPL
     467:  00:8A16  08                  		EX AF,AF'
     468:  00:8A17  ED 44               		NEG
     469:  00:8A19  08                  		EX AF,AF'
     470:  00:8A1A  DD 77 0C            SET_STP:	LD [IX+(CHNPRM_TSlStp+1-12)],A
     471:  00:8A1D  08                  		EX AF,AF'
     472:  00:8A1E  DD 77 0B            		LD [IX+(CHNPRM_TSlStp-12)],A
     473:  00:8A21  DD 36 FE 00         		LD [IX+(CHNPRM_COnOff-12)],0
     474:  00:8A25  C9                  		RET
     475:  00:8A26                      
     476:  00:8A26  DD CB 09 D6         C_GLISS:	SET 2,[IX+(CHNPRM_Flags-12)]
     477:  00:8A2A  0A                  		LD A,[BC]
     478:  00:8A2B  03                  		INC BC
     479:  00:8A2C  DD 77 0A            		LD [IX+(CHNPRM_TnSlDl-12)],A
     480:  00:8A2F  DD 77 F9            		LD [IX+(CHNPRM_TSlCnt-12)],A
     481:  00:8A32  0A                  		LD A,[BC]
     482:  00:8A33  03                  		INC BC
     483:  00:8A34  08                  		EX AF,AF'
     484:  00:8A35  0A                  		LD A,[BC]
     485:  00:8A36  03                  		INC BC
     486:  00:8A37  18 E1               		JR SET_STP
     487:  00:8A39                      
     488:  00:8A39  0A                  C_SMPOS:	LD A,[BC]
     489:  00:8A3A  03                  		INC BC
     490:  00:8A3B  DD 77 F5            		LD [IX+(CHNPRM_PsInSm-12)],A
     491:  00:8A3E  C9                  		RET
     492:  00:8A3F                      
     493:  00:8A3F  0A                  C_ORPOS:	LD A,[BC]
     494:  00:8A40  03                  		INC BC
     495:  00:8A41  DD 77 F4            		LD [IX+(CHNPRM_PsInOr-12)],A
     496:  00:8A44  C9                  		RET
     497:  00:8A45                      
     498:  00:8A45  0A                  C_VIBRT:	LD A,[BC]
     499:  00:8A46  03                  		INC BC
     500:  00:8A47  DD 77 FF            		LD [IX+(CHNPRM_OnOffD-12)],A
     501:  00:8A4A  DD 77 FE            		LD [IX+(CHNPRM_COnOff-12)],A
     502:  00:8A4D  0A                  		LD A,[BC]
     503:  00:8A4E  03                  		INC BC
     504:  00:8A4F  DD 77 00            		LD [IX+(CHNPRM_OffOnD-12)],A
     505:  00:8A52  AF                  		XOR A
     506:  00:8A53  DD 77 F9            		LD [IX+(CHNPRM_TSlCnt-12)],A
     507:  00:8A56  DD 77 FA            		LD [IX+(CHNPRM_CrTnSl-12)],A
     508:  00:8A59  DD 77 FB            		LD [IX+(CHNPRM_CrTnSl+1-12)],A
     509:  00:8A5C  C9                  		RET
     510:  00:8A5D                      
     511:  00:8A5D  0A                  C_ENGLS:	LD A,[BC]
     512:  00:8A5E  03                  		INC BC
     513:  00:8A5F  32 1E F0            		LD [PT3_Env_Del],A
     514:  00:8A62  32 7D F0            		LD [CurEDel],A
     515:  00:8A65  0A                  		LD A,[BC]
     516:  00:8A66  03                  		INC BC
     517:  00:8A67  6F                  		LD L,A
     518:  00:8A68  0A                  		LD A,[BC]
     519:  00:8A69  03                  		INC BC
     520:  00:8A6A  67                  		LD H,A
     521:  00:8A6B  22 1F F0            		LD [PT3_ESldAdd],HL
     522:  00:8A6E  C9                  		RET
     523:  00:8A6F                      
     524:  00:8A6F  0A                  C_DELAY:	LD A,[BC]
     525:  00:8A70  03                  		INC BC
     526:  00:8A71  32 1C F0            		LD [PT3_Delay],A
     527:  00:8A74  C9                  		RET
     528:  00:8A75                      	
     529:  00:8A75  DD 73 08            SETENV:		LD [IX+(CHNPRM_Env_En-12)],E
     530:  00:8A78  32 4D F1            		LD [AYREGS+AR_EnvTp],A
     531:  00:8A7B  0A                  		LD A,[BC]
     532:  00:8A7C  03                  		INC BC
     533:  00:8A7D  67                  		LD H,A
     534:  00:8A7E  0A                  		LD A,[BC]
     535:  00:8A7F  03                  		INC BC
     536:  00:8A80  6F                  		LD L,A
     537:  00:8A81  22 4E F1            		LD [EnvBase],HL
     538:  00:8A84  AF                  		XOR A
     539:  00:8A85  DD 77 F4            		LD [IX+(CHNPRM_PsInOr-12)],A
     540:  00:8A88  32 7D F0            		LD [CurEDel],A
     541:  00:8A8B  67                  		LD H,A
     542:  00:8A8C  6F                  		LD L,A
     543:  00:8A8D  22 7B F0            		LD [CurESld],HL
     544:  00:8A90  C9                  C_NOP:		RET
     545:  00:8A91                      
     546:  00:8A91  87                  SETORN:		ADD A,A
     547:  00:8A92  5F                  		LD E,A
     548:  00:8A93  16 00               		LD D,0
     549:  00:8A95  DD 72 F4            		LD [IX+(CHNPRM_PsInOr-12)],D
     550:  00:8A98  2A 07 F0            		LD HL,[PT3_OrnPtrs]
     551:  00:8A9B  19                  		ADD HL,DE
     552:  00:8A9C  5E                  		LD E,[HL]
     553:  00:8A9D  23                  		INC HL
     554:  00:8A9E  56                  		LD D,[HL]
     555:  00:8A9F  2A 01 F0            		LD HL,[PT3_MODADDR]
     556:  00:8AA2  19                  		ADD HL,DE
     557:  00:8AA3  DD 75 01            		LD [IX+(CHNPRM_OrnPtr-12)],L
     558:  00:8AA6  DD 74 02            		LD [IX+(CHNPRM_OrnPtr+1-12)],H
     559:  00:8AA9  C9                  		RET
     560:  00:8AAA                      
     561:  00:8AAA                      		;ALL 16 ADDRESSES TO PROTECT FROM BROKEN PT3 MODULES
     562:  00:8AAA  90 8A               SPCCOMS:	dw C_NOP
     563:  00:8AAC  26 8A               		dw C_GLISS
     564:  00:8AAE  C5 89               		dw C_PORTM
     565:  00:8AB0  39 8A               		dw C_SMPOS
     566:  00:8AB2  3F 8A               		dw C_ORPOS
     567:  00:8AB4  45 8A               		dw C_VIBRT
     568:  00:8AB6  90 8A               		dw C_NOP
     569:  00:8AB8  90 8A               		dw C_NOP
     570:  00:8ABA  5D 8A               		dw C_ENGLS
     571:  00:8ABC  6F 8A               		dw C_DELAY
     572:  00:8ABE  90 8A               		dw C_NOP
     573:  00:8AC0  90 8A               		dw C_NOP
     574:  00:8AC2  90 8A               		dw C_NOP
     575:  00:8AC4  90 8A               		dw C_NOP
     576:  00:8AC6  90 8A               		dw C_NOP
     577:  00:8AC8  90 8A               		dw C_NOP
     578:  00:8ACA                      
     579:  00:8ACA  AF                  CHREGS:		XOR A
     580:  00:8ACB  32 4A F1            		LD [AYREGS+AR_AmplC],A
     581:  00:8ACE  DD CB 15 46         		BIT 0,[IX+CHNPRM_Flags]
     582:  00:8AD2  E5                  		PUSH HL
     583:  00:8AD3  CA F9 8B            		JP Z,.CH_EXIT
     584:  00:8AD6  ED 73 0B F0         		LD [PT3_CSP],SP
     585:  00:8ADA  DD 6E 0D            		LD L,[IX+CHNPRM_OrnPtr]
     586:  00:8ADD  DD 66 0E            		LD H,[IX+CHNPRM_OrnPtr+1]
     587:  00:8AE0  F9                  		LD SP,HL
     588:  00:8AE1  D1                  		POP DE
     589:  00:8AE2  67                  		LD H,A
     590:  00:8AE3  DD 7E 00            		LD A,[IX+CHNPRM_PsInOr]
     591:  00:8AE6  6F                  		LD L,A
     592:  00:8AE7  39                  		ADD HL,SP
     593:  00:8AE8  3C                  		INC A
     594:  00:8AE9  BA                  		CP D
     595:  00:8AEA  38 01               		JR C,.CH_ORPS
     596:  00:8AEC  7B                  		LD A,E
     597:  00:8AED  DD 77 00            .CH_ORPS:	LD [IX+CHNPRM_PsInOr],A
     598:  00:8AF0  DD 7E 12            		LD A,[IX+CHNPRM_Note]
     599:  00:8AF3  86                  		ADD A,[HL]
     600:  00:8AF4  F2 F8 8A            		JP P,.CH_NTP
     601:  00:8AF7  AF                  		XOR A
     602:  00:8AF8  FE 60               .CH_NTP:	CP 96
     603:  00:8AFA  38 02               		JR C,.CH_NOK
     604:  00:8AFC  3E 5F               		LD A,95
     605:  00:8AFE  87                  .CH_NOK:	ADD A,A
     606:  00:8AFF  08                  		EX AF,AF'
     607:  00:8B00  DD 6E 0F            		LD L,[IX+CHNPRM_SamPtr]
     608:  00:8B03  DD 66 10            		LD H,[IX+CHNPRM_SamPtr+1]
     609:  00:8B06  F9                  		LD SP,HL
     610:  00:8B07  D1                  		POP DE
     611:  00:8B08  26 00               		LD H,0
     612:  00:8B0A  DD 7E 01            		LD A,[IX+CHNPRM_PsInSm]
     613:  00:8B0D  47                  		LD B,A
     614:  00:8B0E  87                  		ADD A,A
     615:  00:8B0F  87                  		ADD A,A
     616:  00:8B10  6F                  		LD L,A
     617:  00:8B11  39                  		ADD HL,SP
     618:  00:8B12  F9                  		LD SP,HL
     619:  00:8B13  78                  		LD A,B
     620:  00:8B14  3C                  		INC A
     621:  00:8B15  BA                  		CP D
     622:  00:8B16  38 01               		JR C,.CH_SMPS
     623:  00:8B18  7B                  		LD A,E
     624:  00:8B19  DD 77 01            .CH_SMPS:	LD [IX+CHNPRM_PsInSm],A
     625:  00:8B1C  C1                  		POP BC
     626:  00:8B1D  E1                  		POP HL
     627:  00:8B1E  DD 5E 08            		LD E,[IX+CHNPRM_TnAcc]
     628:  00:8B21  DD 56 09            		LD D,[IX+CHNPRM_TnAcc+1]
     629:  00:8B24  19                  		ADD HL,DE
     630:  00:8B25  CB 70               		BIT 6,B
     631:  00:8B27  28 06               		JR Z,.CH_NOAC
     632:  00:8B29  DD 75 08            		LD [IX+CHNPRM_TnAcc],L
     633:  00:8B2C  DD 74 09            		LD [IX+CHNPRM_TnAcc+1],H
     634:  00:8B2F  EB                  .CH_NOAC:	EX DE,HL
     635:  00:8B30  08                  		EX AF,AF'
     636:  00:8B31  6F                  		LD L,A
     637:  00:8B32  26 00               		LD H,0
     638:  00:8B34  31 80 F0            		LD SP,NT_
     639:  00:8B37  39                  		ADD HL,SP
     640:  00:8B38  F9                  		LD SP,HL
     641:  00:8B39  E1                  		POP HL
     642:  00:8B3A  19                  		ADD HL,DE
     643:  00:8B3B  DD 5E 06            		LD E,[IX+CHNPRM_CrTnSl]
     644:  00:8B3E  DD 56 07            		LD D,[IX+CHNPRM_CrTnSl+1]
     645:  00:8B41  19                  		ADD HL,DE
     646:  00:8B42  ED 7B 0B F0         		LD SP,[PT3_CSP]
     647:  00:8B46  E3                  		EX [SP],HL
     648:  00:8B47  AF                  		XOR A
     649:  00:8B48  DD B6 05            		OR [IX+CHNPRM_TSlCnt]
     650:  00:8B4B  28 3E               		JR Z,.CH_AMP
     651:  00:8B4D  DD 35 05            		DEC [IX+CHNPRM_TSlCnt]
     652:  00:8B50  20 39               		JR NZ,.CH_AMP
     653:  00:8B52  DD 7E 16            		LD A,[IX+CHNPRM_TnSlDl]
     654:  00:8B55  DD 77 05            		LD [IX+CHNPRM_TSlCnt],A
     655:  00:8B58  DD 6E 17            		LD L,[IX+CHNPRM_TSlStp]
     656:  00:8B5B  DD 66 18            		LD H,[IX+CHNPRM_TSlStp+1]
     657:  00:8B5E  7C                  		LD A,H
     658:  00:8B5F  19                  		ADD HL,DE
     659:  00:8B60  DD 75 06            		LD [IX+CHNPRM_CrTnSl],L
     660:  00:8B63  DD 74 07            		LD [IX+CHNPRM_CrTnSl+1],H
     661:  00:8B66  DD CB 15 56         		BIT 2,[IX+CHNPRM_Flags]
     662:  00:8B6A  20 1F               		JR NZ,.CH_AMP
     663:  00:8B6C  DD 5E 19            		LD E,[IX+CHNPRM_TnDelt]
     664:  00:8B6F  DD 56 1A            		LD D,[IX+CHNPRM_TnDelt+1]
     665:  00:8B72  A7                  		AND A
     666:  00:8B73  28 01               		JR Z,.CH_STPP
     667:  00:8B75  EB                  		EX DE,HL
     668:  00:8B76  ED 52               .CH_STPP:	SBC HL,DE
     669:  00:8B78  FA 8B 8B            		JP M,.CH_AMP
     670:  00:8B7B  DD 7E 13            		LD A,[IX+CHNPRM_SlToNt]
     671:  00:8B7E  DD 77 12            		LD [IX+CHNPRM_Note],A
     672:  00:8B81  AF                  		XOR A
     673:  00:8B82  DD 77 05            		LD [IX+CHNPRM_TSlCnt],A
     674:  00:8B85  DD 77 06            		LD [IX+CHNPRM_CrTnSl],A
     675:  00:8B88  DD 77 07            		LD [IX+CHNPRM_CrTnSl+1],A
     676:  00:8B8B  DD 7E 02            .CH_AMP:	LD A,[IX+CHNPRM_CrAmSl]
     677:  00:8B8E  CB 79               		BIT 7,C
     678:  00:8B90  28 13               		JR Z,.CH_NOAM
     679:  00:8B92  CB 71               		BIT 6,C
     680:  00:8B94  28 07               		JR Z,.CH_AMIN
     681:  00:8B96  FE 0F               		CP 15
     682:  00:8B98  28 0B               		JR Z,.CH_NOAM
     683:  00:8B9A  3C                  		INC A
     684:  00:8B9B  18 05               		JR .CH_SVAM
     685:  00:8B9D  FE F1               .CH_AMIN:	CP -15
     686:  00:8B9F  28 04               		JR Z,.CH_NOAM
     687:  00:8BA1  3D                  		DEC A
     688:  00:8BA2  DD 77 02            .CH_SVAM:	LD [IX+CHNPRM_CrAmSl],A
     689:  00:8BA5  6F                  .CH_NOAM:	LD L,A
     690:  00:8BA6  78                  		LD A,B
     691:  00:8BA7  E6 0F               		AND 15
     692:  00:8BA9  85                  		ADD A,L
     693:  00:8BAA  F2 AE 8B            		JP P,.CH_APOS
     694:  00:8BAD  AF                  		XOR A
     695:  00:8BAE  FE 10               .CH_APOS:	CP 16
     696:  00:8BB0  38 02               		JR C,.CH_VOL
     697:  00:8BB2  3E 0F               		LD A,15
     698:  00:8BB4  DD B6 1C            .CH_VOL:	OR [IX+CHNPRM_Volume]
     699:  00:8BB7  6F                  		LD L,A
     700:  00:8BB8  26 00               		LD H,0
     701:  00:8BBA  11 40 F1            		LD DE,VT_
     702:  00:8BBD  19                  		ADD HL,DE
     703:  00:8BBE  7E                  		LD A,[HL]
     704:  00:8BBF  CB 41               .CH_ENV:	BIT 0,C
     705:  00:8BC1  20 03               		JR NZ,.CH_NOEN
     706:  00:8BC3  DD B6 14            		OR [IX+CHNPRM_Env_En]
     707:  00:8BC6  32 4A F1            .CH_NOEN:	LD [AYREGS+AR_AmplC],A
     708:  00:8BC9  CB 78               		BIT 7,B
     709:  00:8BCB  79                  		LD A,C
     710:  00:8BCC  28 19               		JR Z,.NO_ENSL
     711:  00:8BCE  17                  		RLA
     712:  00:8BCF  17                  		RLA
     713:  00:8BD0  CB 2F               		SRA A
     714:  00:8BD2  CB 2F               		SRA A
     715:  00:8BD4  CB 2F               		SRA A
     716:  00:8BD6  DD 86 04            		ADD A,[IX+CHNPRM_CrEnSl] ;SEE COMMENT BELOW
     717:  00:8BD9  CB 68               		BIT 5,B
     718:  00:8BDB  28 03               		JR Z,.NO_ENAC
     719:  00:8BDD  DD 77 04            		LD [IX+CHNPRM_CrEnSl],A
     720:  00:8BE0  21 1D F0            .NO_ENAC:	LD HL,PT3_AddToEn
     721:  00:8BE3  86                  		ADD A,[HL] ;BUG IN PT3 - NEED WORD HERE.
     722:  00:8BE4                      			   ;FIX IT IN NEXT VERSION?
     723:  00:8BE4  77                  		LD [HL],A
     724:  00:8BE5  18 0E               		JR .CH_MIX
     725:  00:8BE7  1F                  .NO_ENSL:	RRA
     726:  00:8BE8  DD 86 03            		ADD A,[IX+CHNPRM_CrNsSl]
     727:  00:8BEB  32 7F F0            		LD [AddToNs],A
     728:  00:8BEE  CB 68               		BIT 5,B
     729:  00:8BF0  28 03               		JR Z,.CH_MIX
     730:  00:8BF2  DD 77 03            		LD [IX+CHNPRM_CrNsSl],A
     731:  00:8BF5  78                  .CH_MIX:	LD A,B
     732:  00:8BF6  1F                  		RRA
     733:  00:8BF7  E6 48               		AND $48
     734:  00:8BF9  21 47 F1            .CH_EXIT:	LD HL,AYREGS+AR_Mixer
     735:  00:8BFC  B6                  		OR [HL]
     736:  00:8BFD  0F                  		RRCA
     737:  00:8BFE  77                  		LD [HL],A
     738:  00:8BFF  E1                  		POP HL
     739:  00:8C00  AF                  		XOR A
     740:  00:8C01  DD B6 0A            		OR [IX+CHNPRM_COnOff]
     741:  00:8C04  C8                  		RET Z
     742:  00:8C05  DD 35 0A            		DEC [IX+CHNPRM_COnOff]
     743:  00:8C08  C0                  		RET NZ
     744:  00:8C09  DD AE 15            		XOR [IX+CHNPRM_Flags]
     745:  00:8C0C  DD 77 15            		LD [IX+CHNPRM_Flags],A
     746:  00:8C0F  1F                  		RRA
     747:  00:8C10  DD 7E 0B            		LD A,[IX+CHNPRM_OnOffD]
     748:  00:8C13  38 03               		JR C,.CH_ONDL
     749:  00:8C15  DD 7E 0C            		LD A,[IX+CHNPRM_OffOnD]
     750:  00:8C18  DD 77 0A            .CH_ONDL:	LD [IX+CHNPRM_COnOff],A
     751:  00:8C1B  C9                  		RET
     752:  00:8C1C                      
     753:  00:8C1C  AF                  PT3_PLAY:	XOR A
     754:  00:8C1D  32 1D F0            		LD [PT3_AddToEn],A
     755:  00:8C20  32 47 F1            		LD [AYREGS+AR_Mixer],A
     756:  00:8C23  3D                  		DEC A
     757:  00:8C24  32 4D F1            		LD [AYREGS+AR_EnvTp],A
     758:  00:8C27  21 7A F0            		LD HL,DelyCnt
     759:  00:8C2A  35                  		DEC [HL]
     760:  00:8C2B  C2 B2 8C            		JP NZ,.PL2
     761:  00:8C2E  21 3E F0            		LD HL,ChanA+CHNPRM_NtSkCn
     762:  00:8C31  35                  		DEC [HL]
     763:  00:8C32  20 4E               		JR NZ,.PL1B
     764:  00:8C34  ED 4B 12 F0         		LD BC,[PT3_AdInPtA]
     765:  00:8C38  0A                  		LD A,[BC]
     766:  00:8C39  A7                  		AND A
     767:  00:8C3A  20 3B               		JR NZ,.PL1A
     768:  00:8C3C  57                  		LD D,A
     769:  00:8C3D  32 7E F0            		LD [Ns_Base],A
     770:  00:8C40  2A 03 F0            		LD HL,[PT3_CrPsPtr]
     771:  00:8C43  23                  		INC HL
     772:  00:8C44  7E                  		LD A,[HL]
     773:  00:8C45  3C                  		INC A
     774:  00:8C46  20 08               		JR NZ,.PLNLP
     775:  00:8C48  CD B2 87            		CALL CHECKLP
     776:  00:8C4B  2A 18 F0            		LD HL,[PT3_LPosPtr]
     777:  00:8C4E  7E                  		LD A,[HL]
     778:  00:8C4F  3C                  		INC A
     779:  00:8C50  22 03 F0            .PLNLP:	LD [PT3_CrPsPtr],HL
     780:  00:8C53  3D                  		DEC A
     781:  00:8C54  87                  		ADD A,A
     782:  00:8C55  5F                  		LD E,A
     783:  00:8C56  CB 12               		RL D
     784:  00:8C58  2A 1A F0            		LD HL,[PT3_PatsPtr]
     785:  00:8C5B  19                  		ADD HL,DE
     786:  00:8C5C  ED 5B 01 F0         		LD DE,[PT3_MODADDR]
     787:  00:8C60  ED 73 0D F0         		LD [PT3_PSP],SP
     788:  00:8C64  F9                  		LD SP,HL
     789:  00:8C65  E1                  		POP HL
     790:  00:8C66  19                  		ADD HL,DE
     791:  00:8C67  44                  		LD B,H
     792:  00:8C68  4D                  		LD C,L
     793:  00:8C69  E1                  		POP HL
     794:  00:8C6A  19                  		ADD HL,DE
     795:  00:8C6B  22 14 F0            		LD [PT3_AdInPtB],HL
     796:  00:8C6E  E1                  		POP HL
     797:  00:8C6F  19                  		ADD HL,DE
     798:  00:8C70  22 16 F0            		LD [PT3_AdInPtC],HL
     799:  00:8C73  ED 7B 0D F0         		LD SP,[PT3_PSP]
     800:  00:8C77                      
     801:  00:8C77  DD 21 2F F0         .PL1A:		LD IX,ChanA+12
     802:  00:8C7B  CD 5A 89            		CALL PTDECOD
     803:  00:8C7E  ED 43 12 F0         		LD [PT3_AdInPtA],BC
     804:  00:8C82                      
     805:  00:8C82  21 5B F0            .PL1B:		LD HL,ChanB+CHNPRM_NtSkCn
     806:  00:8C85  35                  		DEC [HL]
     807:  00:8C86  20 0F               		JR NZ,.PL1C
     808:  00:8C88  DD 21 4C F0         		LD IX,ChanB+12
     809:  00:8C8C  ED 4B 14 F0         		LD BC,[PT3_AdInPtB]
     810:  00:8C90  CD 5A 89            		CALL PTDECOD
     811:  00:8C93  ED 43 14 F0         		LD [PT3_AdInPtB],BC
     812:  00:8C97                      
     813:  00:8C97  21 78 F0            .PL1C:		LD HL,ChanC+CHNPRM_NtSkCn
     814:  00:8C9A  35                  		DEC [HL]
     815:  00:8C9B  20 0F               		JR NZ,.PL1D
     816:  00:8C9D  DD 21 69 F0         		LD IX,ChanC+12
     817:  00:8CA1  ED 4B 16 F0         		LD BC,[PT3_AdInPtC]
     818:  00:8CA5  CD 5A 89            		CALL PTDECOD
     819:  00:8CA8  ED 43 16 F0         		LD [PT3_AdInPtC],BC
     820:  00:8CAC                      
     821:  00:8CAC  3A 1C F0            .PL1D:		LD A,[PT3_Delay]
     822:  00:8CAF  32 7A F0            		LD [DelyCnt],A
     823:  00:8CB2                      
     824:  00:8CB2  DD 21 23 F0         .PL2:		LD IX,ChanA
     825:  00:8CB6  2A 40 F1            		LD HL,[AYREGS+AR_TonA]
     826:  00:8CB9  CD CA 8A            		CALL CHREGS
     827:  00:8CBC  22 40 F1            		LD [AYREGS+AR_TonA],HL
     828:  00:8CBF  3A 4A F1            		LD A,[AYREGS+AR_AmplC]
     829:  00:8CC2  32 48 F1            		LD [AYREGS+AR_AmplA],A
     830:  00:8CC5  DD 21 40 F0         		LD IX,ChanB
     831:  00:8CC9  2A 42 F1            		LD HL,[AYREGS+AR_TonB]
     832:  00:8CCC  CD CA 8A            		CALL CHREGS
     833:  00:8CCF  22 42 F1            		LD [AYREGS+AR_TonB],HL
     834:  00:8CD2  3A 4A F1            		LD A,[AYREGS+AR_AmplC]
     835:  00:8CD5  32 49 F1            		LD [AYREGS+AR_AmplB],A
     836:  00:8CD8  DD 21 5D F0         		LD IX,ChanC
     837:  00:8CDC  2A 44 F1            		LD HL,[AYREGS+AR_TonC]
     838:  00:8CDF  CD CA 8A            		CALL CHREGS
     839:  00:8CE2  22 44 F1            		LD [AYREGS+AR_TonC],HL
     840:  00:8CE5                      
     841:  00:8CE5  2A 7E F0            		LD HL,[Ns_Base_AddToNs]
     842:  00:8CE8  7C                  		LD A,H
     843:  00:8CE9  85                  		ADD A,L
     844:  00:8CEA  32 46 F1            		LD [AYREGS+AR_Noise],A
     845:  00:8CED                      
     846:  00:8CED  3A 1D F0            		LD A,[PT3_AddToEn]
     847:  00:8CF0  5F                  		LD E,A
     848:  00:8CF1  87                  		ADD A,A
     849:  00:8CF2  9F                  		SBC A,A
     850:  00:8CF3  57                  		LD D,A
     851:  00:8CF4  2A 4E F1            		LD HL,[EnvBase]
     852:  00:8CF7  19                  		ADD HL,DE
     853:  00:8CF8  ED 5B 7B F0         		LD DE,[CurESld]
     854:  00:8CFC  19                  		ADD HL,DE
     855:  00:8CFD  22 4B F1            		LD [AYREGS+AR_Env],HL
     856:  00:8D00                      
     857:  00:8D00  AF                  		XOR A
     858:  00:8D01  21 7D F0            		LD HL,CurEDel
     859:  00:8D04  B6                  		OR [HL]
     860:  00:8D05  C8                  		RET Z
     861:  00:8D06  35                  		DEC [HL]
     862:  00:8D07  C0                  		RET NZ
     863:  00:8D08  3A 1E F0            		LD A,[PT3_Env_Del]
     864:  00:8D0B  77                  		LD [HL],A
     865:  00:8D0C  2A 1F F0            		LD HL,[PT3_ESldAdd]
     866:  00:8D0F  19                  		ADD HL,DE
     867:  00:8D10  22 7B F0            		LD [CurESld],HL
     868:  00:8D13  C9                  		RET
     869:  00:8D14                      
     870:  00:8D14  AF                  PT3_ROUT:	XOR A
     871:  00:8D15                      	
     872:  00:8D15                      ROUT_A0:	; --- FIXES BITS 6 AND 7 OF MIXER ---
     873:  00:8D15  21 47 F1            		LD	HL,AYREGS+AR_Mixer
     874:  00:8D18  CB FE               		set	7,[hl]
     875:  00:8D1A  CB B6               		res	6,[hl]
     876:  00:8D1C                      
     877:  00:8D1C  0E A0               		LD C,$A0
     878:  00:8D1E  21 40 F1            		LD HL,AYREGS
     879:  00:8D21  ED 79               .LOUT:		OUT [C],A
     880:  00:8D23  0C                  		INC C
     881:  00:8D24  ED A3               		OUTI 
     882:  00:8D26  0D                  		DEC C
     883:  00:8D27  3C                  		INC A
     884:  00:8D28  FE 0D               		CP 13
     885:  00:8D2A  20 F5               		JR NZ,.LOUT
     886:  00:8D2C  ED 79               		OUT [C],A
     887:  00:8D2E  7E                  		LD A,[HL]
     888:  00:8D2F  A7                  		AND A
     889:  00:8D30  F8                  		RET M
     890:  00:8D31  0C                  		INC C
     891:  00:8D32  ED 79               		OUT [C],A
     892:  00:8D34  C9                  		RET
     893:  00:8D35                      
     894:  00:8D35  64                  NT_DATA:	db (T_NEW_0-T1_)*2
     895:  00:8D36  2A                  		db TCNEW_0-T_
     896:  00:8D37  65                  		db (T_OLD_0-T1_)*2+1
     897:  00:8D38  00                  		db TCOLD_0-T_
     898:  00:8D39  01                  		db (T_NEW_1-T1_)*2+1
     899:  00:8D3A  0C                  		db TCNEW_1-T_
     900:  00:8D3B  01                  		db (T_OLD_1-T1_)*2+1
     901:  00:8D3C  0C                  		db TCOLD_1-T_
     902:  00:8D3D  94                  		db (T_NEW_2-T1_)*2
     903:  00:8D3E  35                  		db TCNEW_2-T_
     904:  00:8D3F  30                  		db (T_OLD_2-T1_)*2
     905:  00:8D40  0E                  		db TCOLD_2-T_
     906:  00:8D41  60                  		db (T_NEW_3-T1_)*2
     907:  00:8D42  20                  		db TCNEW_3-T_
     908:  00:8D43  60                  		db (T_OLD_3-T1_)*2
     909:  00:8D44  21                  		db TCOLD_3-T_
     910:  00:8D45                      
     911:  00:8D45                      T_:
     912:  00:8D45                      
     913:  00:8D45                      TCOLD_0:	db $00+1,$04+1,$08+1,$0A+1,$0C+1,$0E+1,$12+1,$14+1
     913:  00:8D45  01 05 09 0B 0D 0F 13 15 
     914:  00:8D4D  19 25 3D 00         		db $18+1,$24+1,$3C+1,0
     915:  00:8D51                      TCNEW_1:	
     916:  00:8D51  5D 00               TCOLD_1:	db $5C+1,0
     917:  00:8D53                      TCOLD_2:	db $30+1,$36+1,$4C+1,$52+1,$5E+1,$70+1,$82,$8C,$9C
     917:  00:8D53  31 37 4D 53 5F 71 82 8C 9C 
     918:  00:8D5C                      		db $9E,$A0,$A6,$A8,$AA,$AC,$AE,$AE,0
     918:  00:8D5C  9E A0 A6 A8 AA AC AE AE 00 
     919:  00:8D65  57                  TCNEW_3:	db $56+1
     920:  00:8D66                      TCOLD_3:	db $1E+1,$22+1,$24+1,$28+1,$2C+1,$2E+1,$32+1,$BE+1,0
     920:  00:8D66  1F 23 25 29 2D 2F 33 BF 00 
     921:  00:8D6F                      TCNEW_0:	db $1C+1,$20+1,$22+1,$26+1,$2A+1,$2C+1,$30+1,$54+1
     921:  00:8D6F  1D 21 23 27 2B 2D 31 55 
     922:  00:8D77  BD BF 00            		db $BC+1,$BE+1,0
     923:  00:8D7A                      TCNEW_2:	db $1A+1,$20+1,$24+1,$28+1,$2A+1,$3A+1,$4C+1,$5E+1
     923:  00:8D7A  1B 21 25 29 2B 3B 4D 5F 
     924:  00:8D82  BB BD BF            		db $BA+1,$BC+1,$BE+1
     925:  00:8D85                      
     926:  00:8D85  00 01 00 90         EMPTYSAMORN: 	db 0,1,0,$90 ;delete $90 if you don't need default sample
     927:  00:8D89                      
     928:  00:8D89                      T_PACK:		; First 12 values of tone tables (packed)
     929:  00:8D89  0D                  		db ($06EC*2)/256
     930:  00:8D8A  D8                  		db #d8
     931:  00:8D8B  69                  		db $0755-$06EC
     932:  00:8D8C  70                  		db $07C5-$0755
     933:  00:8D8D  76                  		db $083B-$07C5
     934:  00:8D8E  7D                  		db $08B8-$083B
     935:  00:8D8F  85                  		db $093D-$08B8
     936:  00:8D90  8D                  		db $09CA-$093D
     937:  00:8D91  95                  		db $0A5F-$09CA
     938:  00:8D92  9D                  		db $0AFC-$0A5F
     939:  00:8D93  A8                  		db $0BA4-$0AFC
     940:  00:8D94  B1                  		db $0C55-$0BA4
     941:  00:8D95  BB                  		db $0D10-$0C55
     942:  00:8D96  0C                  		db ($066D*2)/256
     943:  00:8D97  DA                  		db #da
     944:  00:8D98  62                  		db $06CF-$066D
     945:  00:8D99  68                  		db $0737-$06CF
     946:  00:8D9A  6D                  		db $07A4-$0737
     947:  00:8D9B  75                  		db $0819-$07A4
     948:  00:8D9C  7B                  		db $0894-$0819
     949:  00:8D9D  83                  		db $0917-$0894
     950:  00:8D9E  8A                  		db $09A1-$0917
     951:  00:8D9F  92                  		db $0A33-$09A1
     952:  00:8DA0  9C                  		db $0ACF-$0A33
     953:  00:8DA1  A4                  		db $0B73-$0ACF
     954:  00:8DA2  AF                  		db $0C22-$0B73
     955:  00:8DA3  B8                  		db $0CDA-$0C22
     956:  00:8DA4  0E                  		db ($0704*2)/256
     957:  00:8DA5  08                  		db #08
     958:  00:8DA6  6A                  		db $076E-$0704
     959:  00:8DA7  72                  		db $07E0-$076E
     960:  00:8DA8  78                  		db $0858-$07E0
     961:  00:8DA9  7E                  		db $08D6-$0858
     962:  00:8DAA  86                  		db $095C-$08D6
     963:  00:8DAB  90                  		db $09EC-$095C
     964:  00:8DAC  96                  		db $0A82-$09EC
     965:  00:8DAD  A0                  		db $0B22-$0A82
     966:  00:8DAE  AA                  		db $0BCC-$0B22
     967:  00:8DAF  B4                  		db $0C80-$0BCC
     968:  00:8DB0  BE                  		db $0D3E-$0C80
     969:  00:8DB1  0F                  		db ($07E0*2)/256
     970:  00:8DB2  C0                  		db #c0
     971:  00:8DB3  78                  		db $0858-$07E0
     972:  00:8DB4  88                  		db $08E0-$0858
     973:  00:8DB5  80                  		db $0960-$08E0
     974:  00:8DB6  90                  		db $09F0-$0960
     975:  00:8DB7  98                  		db $0A88-$09F0
     976:  00:8DB8  A0                  		db $0B28-$0A88
     977:  00:8DB9  B0                  		db $0BD8-$0B28
     978:  00:8DBA  A8                  		db $0C80-$0BD8
     979:  00:8DBB  E0                  		db $0D60-$0C80
     980:  00:8DBC  B0                  		db $0E10-$0D60
     981:  00:8DBD  E8                  		db $0EF8-$0E10
      61.  00:8DBE                      	include "ayFX-ROM_sjasm.asm"
       1:  00:8DBE                      		; --- ayFX REPLAYER v1.31 ---
       2:  00:8DBE                      
       3:  00:8DBE                      		; --- v1.31	Fixed bug on previous version, only PSG channel C worked
       4:  00:8DBE                      		; --- v1.3	Fixed volume and Relative volume versions on the same file, conditional compilation
       5:  00:8DBE                      		; ---		Support for dynamic or fixed channel allocation
       6:  00:8DBE                      		; --- v1.2f/r	ayFX bank support
       7:  00:8DBE                      		; --- v1.11f/r	If a frame volume is zero then no AYREGS update
       8:  00:8DBE                      		; --- v1.1f/r	Fixed volume for all ayFX streams
       9:  00:8DBE                      		; --- v1.1	Explicit priority (as suggested by AR)
      10:  00:8DBE                      		; --- v1.0f	Bug fixed (error when using noise)
      11:  00:8DBE                      		; --- v1.0	Initial release
      12:  00:8DBE                      
      13:  00:8DBE                      		; --- DEFINE AYFXRELATIVE AS 0 FOR FIXED VOLUME VERSION ---
      14:  00:8DBE                      		; --- DEFINE AYFXRELATIVE AS 1 FOR RELATIVE VOLUME VERSION ---
      15:  00:8DBE  (00:0000)           AYFXRELATIVE equ 0
      16:  00:8DBE                      
      17:  00:8DBE                      ayFX_SETUP:	; ---          ayFX replayer setup          ---
      18:  00:8DBE                      		; --- INPUT: HL -> pointer to the ayFX bank ---
      19:  00:8DBE  22 41 F2            		ld	[ayFX_BANK],hl			; Current ayFX bank
      20:  00:8DC1  3E 01               		ld	a,1				; a:=0
      21:  00:8DC3  32 40 F2            		ld	[ayFX_MODE],a			; Initial mode: fixed channel
      22:  00:8DC6  3C                  		inc	a				; Starting channel (=1)
      23:  00:8DC7  32 4A F2            		ld	[ayFX_CHANNEL],a		; Updated
      24:  00:8DCA                      ayFX_END:	; --- End of an ayFX stream ---
      25:  00:8DCA  3E FF               		ld	a,255				; Lowest ayFX priority
      26:  00:8DCC  32 43 F2            		ld	[ayFX_PRIORITY],a		; Priority saved (not playing ayFX stream)
      27:  00:8DCF  C9                  		ret					; Return
      28:  00:8DD0                      
      29:  00:8DD0                      ayFX_INIT:	; ---     INIT A NEW ayFX STREAM     ---
      30:  00:8DD0                      		; --- INPUT: A -> sound to be played ---
      31:  00:8DD0                      		; ---        C -> sound priority     ---
      32:  00:8DD0  C5                  		push	bc				; Store bc in stack
      33:  00:8DD1  D5                  		push	de				; Store de in stack
      34:  00:8DD2  E5                  		push	hl				; Store hl in stack
      35:  00:8DD3                      		; --- Check if the index is in the bank ---
      36:  00:8DD3  47                  		ld	b,a				; b:=a (new ayFX stream index)
      37:  00:8DD4  2A 41 F2            		ld	hl,[ayFX_BANK]			; Current ayFX BANK
      38:  00:8DD7  7E                  		ld	a,[hl]				; Number of samples in the bank
      39:  00:8DD8  B7                  		or	a				; If zero (means 256 samples)...
      40:  00:8DD9  28 06               		jr	z,.CHECK_PRI			; ...goto .CHECK_PRI
      41:  00:8DDB                      		; The bank has less than 256 samples
      42:  00:8DDB  78                  		ld	a,b				; a:=b (new ayFX stream index)
      43:  00:8DDC  BE                  		cp	[hl]				; If new index is not in the bank...
      44:  00:8DDD  3E 02               		ld	a,2				; a:=2 (error 2: Sample not in the bank)
      45:  00:8DDF  30 21               		jr	nc,.INIT_END			; ...we can't init it
      46:  00:8DE1                      .CHECK_PRI:	; --- Check if the new priority is lower than the current one ---
      47:  00:8DE1                      		; ---   Remember: 0 = highest priority, 15 = lowest priority  ---
      48:  00:8DE1  78                  		ld	a,b				; a:=b (new ayFX stream index)
      49:  00:8DE2  3A 43 F2            		ld	a,[ayFX_PRIORITY]		; a:=Current ayFX stream priority
      50:  00:8DE5  B9                  		cp	c				; If new ayFX stream priority is lower than current one...
      51:  00:8DE6  3E 01               		ld	a,1				; a:=1 (error 1: A sample with higher priority is being played)
      52:  00:8DE8  38 18               		jr	c,.INIT_END			; ...we don't start the new ayFX stream
      53:  00:8DEA                      		; --- Set new priority ---
      54:  00:8DEA  79                  		ld	a,c				; a:=New priority
      55:  00:8DEB  E6 0F               		and	$0F				; We mask the priority
      56:  00:8DED  32 43 F2            		ld	[ayFX_PRIORITY],a		; new ayFX stream priority saved in RAM
      57:  00:8DF0                      
      58:  00:8DF0                      		IF ( AYFXRELATIVE == 1 )
      59:  00:8DF0                    ~ 			; --- Volume adjust using PT3 volume table ---
      60:  00:8DF0                    ~ 			ld	c,a				; c:=New priority (fixed)
      61:  00:8DF0                    ~ 			ld	a,15				; a:=15
      62:  00:8DF0                    ~ 			sub	c				; a:=15-New priority = relative volume
      63:  00:8DF0                    ~ 			jr	z,.INIT_NOSOUND		; If priority is 15 -> no sound output (volume is zero)
      64:  00:8DF0                    ~ 			add	a,a				; a:=a*2
      65:  00:8DF0                    ~ 			add	a,a				; a:=a*4
      66:  00:8DF0                    ~ 			add	a,a				; a:=a*8
      67:  00:8DF0                    ~ 			add	a,a				; a:=a*16
      68:  00:8DF0                    ~ 			ld	e,a				; e:=a
      69:  00:8DF0                    ~ 			ld	d,0				; de:=a
      70:  00:8DF0                    ~ 			ld	hl,VT_				; hl:=PT3 volume table
      71:  00:8DF0                    ~ 			add	hl,de				; hl is a pointer to the relative volume table
      72:  00:8DF0                    ~ 			ld	[ayFX_VT],hl			; Save pointer
      73:  00:8DF0                    ~ 		ENDIF
      74:  00:8DF0                      
      75:  00:8DF0                      		; --- Calculate the pointer to the new ayFX stream ---
      76:  00:8DF0  ED 5B 41 F2         		ld	de,[ayFX_BANK]			; de:=Current ayFX bank
      77:  00:8DF4  13                  		inc	de				; de points to the increments table of the bank
      78:  00:8DF5  68                  		ld	l,b				; l:=b (new ayFX stream index)
      79:  00:8DF6  26 00               		ld	h,0				; hl:=b (new ayFX stream index)
      80:  00:8DF8  29                  		add	hl,hl				; hl:=hl*2
      81:  00:8DF9  19                  		add	hl,de				; hl:=hl+de (hl points to the correct increment)
      82:  00:8DFA  5E                  		ld	e,[hl]				; e:=lower byte of the increment
      83:  00:8DFB  23                  		inc	hl				; hl points to the higher byte of the correct increment
      84:  00:8DFC  56                  		ld	d,[hl]				; de:=increment
      85:  00:8DFD  19                  		add	hl,de				; hl:=hl+de (hl points to the new ayFX stream)
      86:  00:8DFE  22 44 F2            		ld	[ayFX_POINTER],hl		; Pointer saved in RAM
      87:  00:8E01  AF                  		xor	a				; a:=0 (no errors)
      88:  00:8E02  E1                  .INIT_END:	pop	hl				; Retrieve hl from stack
      89:  00:8E03  D1                  		pop	de				; Retrieve de from stack
      90:  00:8E04  C1                  		pop	bc				; Retrieve bc from stack
      91:  00:8E05  C9                  		ret					; Return
      92:  00:8E06                      
      93:  00:8E06                      		IF ( AYFXRELATIVE == 1 )
      94:  00:8E06                    ~ .INIT_NOSOUND:	; --- Init a sample with relative volume zero -> no sound output ---
      95:  00:8E06                    ~ 			ld	a,255				; Lowest ayFX priority
      96:  00:8E06                    ~ 			ld	[ayFX_PRIORITY],a		; Priority saved (not playing ayFX stream)
      97:  00:8E06                    ~ 			jr	.INIT_END			; Jumps to .INIT_END
      98:  00:8E06                    ~ 		ENDIF
      99:  00:8E06                      
     100:  00:8E06                      ayFX_PLAY:	; --- PLAY A FRAME OF AN ayFX STREAM ---
     101:  00:8E06  3A 43 F2            		ld	a,[ayFX_PRIORITY]		; a:=Current ayFX stream priority
     102:  00:8E09  B7                  		or	a				; If priority has bit 7 on...
     103:  00:8E0A  F8                  		ret	m				; ...return
     104:  00:8E0B                      		; --- Calculate next ayFX channel (if needed) ---
     105:  00:8E0B  3A 40 F2            		ld	a,[ayFX_MODE]			; ayFX mode
     106:  00:8E0E  E6 01               		and	1				; If bit0=0 (fixed channel)...
     107:  00:8E10  28 08               		jr	z,.TAKECB			; ...skip channel changing
     108:  00:8E12  21 4A F2            		ld	hl,ayFX_CHANNEL			; Old ayFX playing channel
     109:  00:8E15  35                  		dec	[hl]				; New ayFX playing channel
     110:  00:8E16  20 02               		jr	nz,.TAKECB			; If not zero jump to .TAKECB
     111:  00:8E18  36 03               		ld	[hl],3				; If zero -> set channel 3
     112:  00:8E1A                      .TAKECB:	; --- Extract control byte from stream ---
     113:  00:8E1A  2A 44 F2            		ld	hl,[ayFX_POINTER]		; Pointer to the current ayFX stream
     114:  00:8E1D  4E                  		ld	c,[hl]				; c:=Control byte
     115:  00:8E1E  23                  		inc	hl				; Increment pointer
     116:  00:8E1F                      		; --- Check if there's new tone on stream ---
     117:  00:8E1F  CB 69               		bit	5,c				; If bit 5 c is off...
     118:  00:8E21  28 08               		jr	z,.CHECK_NN			; ...jump to .CHECK_NN (no new tone)
     119:  00:8E23                      		; --- Extract new tone from stream ---
     120:  00:8E23  5E                  		ld	e,[hl]				; e:=lower byte of new tone
     121:  00:8E24  23                  		inc	hl				; Increment pointer
     122:  00:8E25  56                  		ld	d,[hl]				; d:=higher byte of new tone
     123:  00:8E26  23                  		inc	hl				; Increment pointer
     124:  00:8E27  ED 53 46 F2         		ld	[ayFX_TONE],de			; ayFX tone updated
     125:  00:8E2B                      .CHECK_NN:	; --- Check if there's new noise on stream ---
     126:  00:8E2B  CB 71               		bit	6,c				; if bit 6 c is off...
     127:  00:8E2D  28 09               		jr	z,.SETPOINTER			; ...jump to .SETPOINTER (no new noise)
     128:  00:8E2F                      		; --- Extract new noise from stream ---
     129:  00:8E2F  7E                  		ld	a,[hl]				; a:=New noise
     130:  00:8E30  23                  		inc	hl				; Increment pointer
     131:  00:8E31  FE 20               		cp	$20				; If it's an illegal value of noise (used to mark end of stream)...
     132:  00:8E33  28 95               		jr.	z,ayFX_END			; ...jump to ayFX_END
     133:  00:8E35  32 48 F2            		ld	[ayFX_NOISE],a			; ayFX noise updated
     134:  00:8E38                      .SETPOINTER:	; --- Update ayFX pointer ---
     135:  00:8E38  22 44 F2            		ld	[ayFX_POINTER],hl		; Update ayFX stream pointer
     136:  00:8E3B                      		; --- Extract volume ---
     137:  00:8E3B  79                  		ld	a,c				; a:=Control byte
     138:  00:8E3C  E6 0F               		and	$0F				; lower nibble
     139:  00:8E3E                      
     140:  00:8E3E                      		IF ( AYFXRELATIVE == 1 )
     141:  00:8E3E                    ~ 			; --- Fix the volume using PT3 Volume Table ---
     142:  00:8E3E                    ~ 			ld	hl,[ayFX_VT]			; hl:=Pointer to relative volume table
     143:  00:8E3E                    ~ 			ld	e,a				; e:=a (ayFX volume)
     144:  00:8E3E                    ~ 			ld	d,0				; d:=0
     145:  00:8E3E                    ~ 			add	hl,de				; hl:=hl+de (hl points to the relative volume of this frame
     146:  00:8E3E                    ~ 			ld	a,[hl]				; a:=ayFX relative volume
     147:  00:8E3E                    ~ 			or	a				; If relative volume is zero...
     148:  00:8E3E                    ~ 		ENDIF
     149:  00:8E3E                      
     150:  00:8E3E  32 49 F2            		ld	[ayFX_VOLUME],a			; ayFX volume updated
     151:  00:8E41  C8                  		ret	z				; ...return (don't copy ayFX values in to AYREGS)
     152:  00:8E42                      		; -------------------------------------
     153:  00:8E42                      		; --- COPY ayFX VALUES IN TO AYREGS ---
     154:  00:8E42                      		; -------------------------------------
     155:  00:8E42                      		; --- Set noise channel ---
     156:  00:8E42  CB 79               		bit	7,c				; If noise is off...
     157:  00:8E44  20 06               		jr	nz,.SETMASKS			; ...jump to .SETMASKS
     158:  00:8E46  3A 48 F2            		ld	a,[ayFX_NOISE]			; ayFX noise value
     159:  00:8E49  32 46 F1            		ld	[AYREGS+6],a			; copied in to AYREGS (noise channel)
     160:  00:8E4C                      .SETMASKS:	; --- Set mixer masks ---
     161:  00:8E4C  79                  		ld	a,c				; a:=Control byte
     162:  00:8E4D  E6 90               		and	$90				; Only bits 7 and 4 (noise and tone mask for psg reg 7)
     163:  00:8E4F  FE 90               		cp	$90				; If no noise and no tone...
     164:  00:8E51  C8                  		ret	z				; ...return (don't copy ayFX values in to AYREGS)
     165:  00:8E52                      		; --- Copy ayFX values in to ARYREGS ---
     166:  00:8E52  0F                  		rrca					; Rotate a to the right (1 TIME)
     167:  00:8E53  0F                  		rrca					; Rotate a to the right (2 TIMES) (OR mask)
     168:  00:8E54  16 DB               		ld	d,$DB				; d:=Mask for psg mixer (AND mask)
     169:  00:8E56                      		; --- Dump to correct channel ---
     170:  00:8E56  21 4A F2            		ld	hl,ayFX_CHANNEL			; Next ayFX playing channel
     171:  00:8E59  46                  		ld	b,[hl]				; Channel counter
     172:  00:8E5A                      .CHK1:		; --- Check if playing channel was 1 ---
     173:  00:8E5A  10 0D               		djnz	.CHK2				; Decrement and jump if channel was not 1
     174:  00:8E5C                      .PLAY_C:	; --- Play ayFX stream on channel C ---
     175:  00:8E5C  CD 8B 8E            		call	.SETMIXER			; Set PSG mixer value (returning a=ayFX volume and hl=ayFX tone)
     176:  00:8E5F  32 4A F1            		ld	[AYREGS+10],a			; Volume copied in to AYREGS (channel C volume)
     177:  00:8E62  CB 51               		bit	2,c				; If tone is off...
     178:  00:8E64  C0                  		ret	nz				; ...return
     179:  00:8E65  22 44 F1            		ld	[AYREGS+4],hl			; copied in to AYREGS (channel C tone)
     180:  00:8E68  C9                  		ret					; Return
     181:  00:8E69                      .CHK2:		; --- Check if playing channel was 2 ---
     182:  00:8E69  CB 0A               		rrc	d				; Rotate right AND mask
     183:  00:8E6B  0F                  		rrca					; Rotate right OR mask
     184:  00:8E6C  10 0D               		djnz	.CHK3				; Decrement and jump if channel was not 2
     185:  00:8E6E                      .PLAY_B:	; --- Play ayFX stream on channel B ---
     186:  00:8E6E  CD 8B 8E            		call	.SETMIXER			; Set PSG mixer value (returning a=ayFX volume and hl=ayFX tone)
     187:  00:8E71  32 49 F1            		ld	[AYREGS+9],a			; Volume copied in to AYREGS (channel B volume)
     188:  00:8E74  CB 49               		bit	1,c				; If tone is off...
     189:  00:8E76  C0                  		ret	nz				; ...return
     190:  00:8E77  22 42 F1            		ld	[AYREGS+2],hl			; copied in to AYREGS (channel B tone)
     191:  00:8E7A  C9                  		ret					; Return
     192:  00:8E7B                      .CHK3:		; --- Check if playing channel was 3 ---
     193:  00:8E7B  CB 0A               		rrc	d				; Rotate right AND mask
     194:  00:8E7D  0F                  		rrca					; Rotate right OR mask
     195:  00:8E7E                      .PLAY_A:	; --- Play ayFX stream on channel A ---
     196:  00:8E7E  CD 8B 8E            		call	.SETMIXER			; Set PSG mixer value (returning a=ayFX volume and hl=ayFX tone)
     197:  00:8E81  32 48 F1            		ld	[AYREGS+8],a			; Volume copied in to AYREGS (channel A volume)
     198:  00:8E84  CB 41               		bit	0,c				; If tone is off...
     199:  00:8E86  C0                  		ret	nz				; ...return
     200:  00:8E87  22 40 F1            		ld	[AYREGS+0],hl			; copied in to AYREGS (channel A tone)
     201:  00:8E8A  C9                  		ret					; Return
     202:  00:8E8B                      .SETMIXER:	; --- Set PSG mixer value ---
     203:  00:8E8B  4F                  		ld	c,a				; c:=OR mask
     204:  00:8E8C  3A 47 F1            		ld	a,[AYREGS+7]			; a:=PSG mixer value
     205:  00:8E8F  A2                  		and	d				; AND mask
     206:  00:8E90  B1                  		or	c				; OR mask
     207:  00:8E91  32 47 F1            		ld	[AYREGS+7],a			; PSG mixer value updated
     208:  00:8E94  3A 49 F2            		ld	a,[ayFX_VOLUME]			; a:=ayFX volume value
     209:  00:8E97  2A 46 F2            		ld	hl,[ayFX_TONE]			; ayFX tone value
     210:  00:8E9A  C9                  		ret					; Return
     211:  00:8E9B                      
     212:  00:8E9B                      		IF ( AYFXRELATIVE == 1 )
     213:  00:8E9B                    ~ 			; --- UNCOMMENT THIS IF YOU DON'T USE THIS REPLAYER WITH PT3 REPLAYER ---
     214:  00:8E9B                    ~ 		;VT_:	.INCBIN	"VT.BIN"
     215:  00:8E9B                    ~ 			; --- UNCOMMENT THIS IF YOU DON'T USE THIS REPLAYER WITH PT3 REPLAYER ---
     216:  00:8E9B                    ~ 		ENDIF
      62.  00:8E9B                      	
      63.  00:8E9B                      	
      64.  00:8E9B                      
      65.  00:8E9B                      ;;=====================================================
      66.  00:8E9B                      ;;DEFINICIÓN DE CANTIONES Y EFECTOS DE SONIDO
      67.  00:8E9B                      ;;=====================================================		
      68.  00:8E9B                      song:
      69.  00:8E9B  (0968)              	incbin "bloodytears_castlevania.99"
      70.  00:9803                      	
      71.  00:9803                      sfx_bank:
      72.  00:9803  (004B)              	incbin "demo.afb"
      73.  00:984E                      
     126   00:984E                      	
     127   00:984E                      	include "subr_ayudas.asm"
       1.  00:984E                      ;;=====================================================
       2.  00:984E                      ;;SUBRUTINAS MANEJO DE OBJETOS AYUDA
       3.  00:984E                      ;;=====================================================	
       4.  00:984E                      
       5.  00:984E                      ;;=====================================================
       6.  00:984E                      ;;INICIALIZA_AYUDAS
       7.  00:984E                      ;;=====================================================	
       8.  00:984E                      ; función: 	inicializa las variables de estructuras de ayuda del array lista_ayudas
       9.  00:984E                      ; entrada: 	lista_ayudas
      10.  00:984E                      ; salida: 	lista_ayudas
      11.  00:984E                      inicializa_ayudas:
      12.  00:984E                      	;oración
      13.  00:984E  DD 21 A5 A8         	LD		IX, ayuda_oracion
      14.  00:9852  DD 36 00 00         	LD		(IX), INACTIVA			
      15.  00:9856  21 4C A8            	LD		HL, array_oracionon
      16.  00:9859  DD 74 01            	LD		(IX + 1), H
      17.  00:985C  DD 75 02            	LD		(IX + 2), L
      18.  00:985F  21 50 A8            	LD		HL, array_oracionoff
      19.  00:9862  DD 74 03            	LD		(IX + 3), H
      20.  00:9865  DD 75 04            	LD		(IX + 4), L
      21.  00:9868  DD 36 05 A3         	LD		(IX + 5), POSORACION
      22.  00:986C  DD 36 06 20         	LD		(IX + 6), POSORACIONX
      23.  00:9870                      ;	LD		(IX + 7), POSAYUDASY	;como es constante y no se cambia se puede inicializar la estructura con el valor y ahorramos tiempo
      24.  00:9870  21 22 9A            	LD		HL, accion_oracion
      25.  00:9873  DD 74 08            	LD		(IX + 8), H
      26.  00:9876  DD 75 09            	LD		(IX + 9), L
      27.  00:9879                      	
      28.  00:9879                      	;cruz
      29.  00:9879  DD 21 B6 A8         	LD		IX, ayuda_cruz
      30.  00:987D  DD 36 00 00         	LD		(IX), INACTIVA			
      31.  00:9881  21 54 A8            	LD		HL, array_cruzon
      32.  00:9884  DD 74 01            	LD		(IX + 1), H
      33.  00:9887  DD 75 02            	LD		(IX + 2), L
      34.  00:988A  21 58 A8            	LD		HL, array_cruzoff
      35.  00:988D  DD 74 03            	LD		(IX + 3), H
      36.  00:9890  DD 75 04            	LD		(IX + 4), L
      37.  00:9893  DD 36 05 A7         	LD		(IX + 5), POSCRUZ
      38.  00:9897  DD 36 06 40         	LD		(IX + 6), POSCRUZX
      39.  00:989B                      ;	LD		(IX + 7), POSAYUDASY	;como es constante y no se cambia se puede inicializar la estructura con el valor y ahorramos tiempo
      40.  00:989B  21 23 9A            	LD		HL, accion_cruz
      41.  00:989E  DD 74 08            	LD		(IX + 8), H
      42.  00:98A1  DD 75 09            	LD		(IX + 9), L
      43.  00:98A4                      	
      44.  00:98A4                      	;agua bendita
      45.  00:98A4  DD 21 C7 A8         	LD		IX, ayuda_aguabendita
      46.  00:98A8  DD 36 00 00         	LD		(IX), INACTIVA			
      47.  00:98AC  21 5C A8            	LD		HL, array_aguaon
      48.  00:98AF  DD 74 01            	LD		(IX + 1), H
      49.  00:98B2  DD 75 02            	LD		(IX + 2), L
      50.  00:98B5  21 60 A8            	LD		HL, array_aguaoff
      51.  00:98B8  DD 74 03            	LD		(IX + 3), H
      52.  00:98BB  DD 75 04            	LD		(IX + 4), L
      53.  00:98BE  DD 36 05 AB         	LD		(IX + 5), POSAGUA
      54.  00:98C2  DD 36 06 60         	LD		(IX + 6), POSAGUAX
      55.  00:98C6                      ;	LD		(IX + 7), POSAYUDASY	;como es constante y no se cambia se puede inicializar la estructura con el valor y ahorramos tiempo
      56.  00:98C6  21 24 9A            	LD		HL, accion_agua
      57.  00:98C9  DD 74 08            	LD		(IX + 8), H
      58.  00:98CC  DD 75 09            	LD		(IX + 9), L
      59.  00:98CF                      	
      60.  00:98CF                      	;armadura
      61.  00:98CF  DD 21 D8 A8         	LD		IX, ayuda_armadura
      62.  00:98D3  DD 36 00 00         	LD		(IX), INACTIVA			
      63.  00:98D7  21 64 A8            	LD		HL, array_armaduraon
      64.  00:98DA  DD 74 01            	LD		(IX + 1), H
      65.  00:98DD  DD 75 02            	LD		(IX + 2), L
      66.  00:98E0  21 68 A8            	LD		HL, array_armaduraoff
      67.  00:98E3  DD 74 03            	LD		(IX + 3), H
      68.  00:98E6  DD 75 04            	LD		(IX + 4), L
      69.  00:98E9  DD 36 05 AF         	LD		(IX + 5), POSARMAD
      70.  00:98ED  DD 36 06 80         	LD		(IX + 6), POSARMADX
      71.  00:98F1                      ;	LD		(IX + 7), POSAYUDASY	;como es constante y no se cambia se puede inicializar la estructura con el valor y ahorramos tiempo
      72.  00:98F1  21 25 9A            	LD		HL, accion_armadura
      73.  00:98F4  DD 74 08            	LD		(IX + 8), H
      74.  00:98F7  DD 75 09            	LD		(IX + 9), L
      75.  00:98FA                      	
      76.  00:98FA                      	;planta
      77.  00:98FA  DD 21 E9 A8         	LD		IX, ayuda_planta
      78.  00:98FE  DD 36 00 00         	LD		(IX), INACTIVA			
      79.  00:9902  21 6C A8            	LD		HL, array_plantaon
      80.  00:9905  DD 74 01            	LD		(IX + 1), H
      81.  00:9908  DD 75 02            	LD		(IX + 2), L
      82.  00:990B  21 70 A8            	LD		HL, array_plantaoff
      83.  00:990E  DD 74 03            	LD		(IX + 3), H
      84.  00:9911  DD 75 04            	LD		(IX + 4), L
      85.  00:9914  DD 36 05 B3         	LD		(IX + 5), POSPLANTA
      86.  00:9918  DD 36 06 A0         	LD		(IX + 6), POSPLANTAX
      87.  00:991C                      ;	LD		(IX + 7), POSAYUDASY	;como es constante y no se cambia se puede inicializar la estructura con el valor y ahorramos tiempo
      88.  00:991C  21 26 9A            	LD		HL, accion_planta
      89.  00:991F  DD 74 08            	LD		(IX + 8), H
      90.  00:9922  DD 75 09            	LD		(IX + 9), L
      91.  00:9925                      	
      92.  00:9925                      	;vida extra
      93.  00:9925  DD 21 FA A8         	LD		IX, ayuda_vidaextra
      94.  00:9929  DD 36 00 00         	LD		(IX), INACTIVA			
      95.  00:992D  21 74 A8            	LD		HL, array_extraon
      96.  00:9930  DD 74 01            	LD		(IX + 1), H
      97.  00:9933  DD 75 02            	LD		(IX + 2), L
      98.  00:9936  21 78 A8            	LD		HL, array_extraoff
      99.  00:9939  DD 74 03            	LD		(IX + 3), H
     100.  00:993C  DD 75 04            	LD		(IX + 4), L
     101.  00:993F  DD 36 05 B6         	LD		(IX + 5), POSVIDAEXT
     102.  00:9943  DD 36 06 C0         	LD		(IX + 6), POSVIDAEXTX
     103.  00:9947                      ;	LD		(IX + 7), POSAYUDASY	;como es constante y no se cambia se puede inicializar la estructura con el valor y ahorramos tiempo
     104.  00:9947  21 27 9A            	LD		HL, accion_vidaextra
     105.  00:994A  DD 74 08            	LD		(IX + 8), H
     106.  00:994D  DD 75 09            	LD		(IX + 9), L
     107.  00:9950                      	
     108.  00:9950                      	;ballesta
     109.  00:9950  DD 21 0B A9         	LD		IX, ayuda_ballesta
     110.  00:9954  DD 36 00 00         	LD		(IX), INACTIVA			
     111.  00:9958  21 7C A8            	LD		HL, array_ballestaon
     112.  00:995B  DD 74 01            	LD		(IX + 1), H
     113.  00:995E  DD 75 02            	LD		(IX + 2), L
     114.  00:9961  21 80 A8            	LD		HL, array_ballestaoff
     115.  00:9964  DD 74 03            	LD		(IX + 3), H
     116.  00:9967  DD 75 04            	LD		(IX + 4), L
     117.  00:996A  DD 36 05 BB         	LD		(IX + 5), POSBALLES
     118.  00:996E  DD 36 06 BB         	LD		(IX + 6), POSBALLES
     119.  00:9972                      ;	LD		(IX + 7), POSAYUDASY	;como es constante y no se cambia se puede inicializar la estructura con el valor y ahorramos tiempo
     120.  00:9972  21 28 9A            	LD		HL, accion_ballesta
     121.  00:9975  DD 74 08            	LD		(IX + 8), H
     122.  00:9978  DD 75 09            	LD		(IX + 9), L
     123.  00:997B                      fin_resetea_ayudas:
     124.  00:997B  C9                  	RET
     125.  00:997C                      
     126.  00:997C                      
     127.  00:997C                      ;;=====================================================
     128.  00:997C                      ;;PINTA_OBJ_AYUDA
     129.  00:997C                      ;;=====================================================	
     130.  00:997C                      ; función: 	pinta un objeto de tipo ayuda que se le pase por referencia IX y el tipo en A
     131.  00:997C                      ; entrada: 	IX - puntero a objeto a mostrar, A - si está on u off
     132.  00:997C                      ; salida: 	-
     133.  00:997C                      ; toca:		AF, HL, BC, DE
     134.  00:997C                      pinta_obj_ayuda:
     135.  00:997C                      	;se recibe objeto desde fuera, por ejmplo LD IX, ayuda_oracion
     136.  00:997C                      
     137.  00:997C  B7                  	OR		 A
     138.  00:997D  CA 8C 99            	JP		 Z,.dibujooff
     139.  00:9980                      .dibujoon:	
     140.  00:9980  DD 66 01            	LD		 H, (IX + 1)
     141.  00:9983  DD 6E 02            	LD		 L, (IX + 2)
     142.  00:9986  22 B3 84            	LD		(wordaux2), HL
     143.  00:9989  C3 95 99            	JP		.param_wordaux2
     144.  00:998C                      .dibujooff:
     145.  00:998C  DD 66 03            	LD		 H, (IX + 3)
     146.  00:998F  DD 6E 04            	LD		 L, (IX + 4)
     147.  00:9992  22 B3 84            	LD		(wordaux2), HL
     148.  00:9995                      
     149.  00:9995                      .param_wordaux2:	
     150.  00:9995  21 00 19            	LD		HL, TILMAP + 256	;calcula posición en tilemap + 256 por colocarse siempre en bank1
     151.  00:9998  DD 7E 05            	LD		 A, (IX + 5)
     152.  00:999B  CD EE 80            	CALL	suma_A_HL
     153.  00:999E  22 B1 84            	LD		(wordaux1), HL		;pongo el valor en wordaux1
     154.  00:99A1                      
     155.  00:99A1                      .filasycols:
     156.  00:99A1  3E 02               	LD		 A, 2				;equivale a LD	A,2 porque A ya valía 1
     157.  00:99A3  32 B5 84            	LD		(byteaux1), A	;nº de filas
     158.  00:99A6  32 B6 84            	LD		(byteaux2), A	;nº de columnas
     159.  00:99A9                      	
     160.  00:99A9  C3 71 84            	JP		pinta_array
     161.  00:99AC                      fin_pinta_obj_ayuda:
     162.  00:99AC                      
     163.  00:99AC                      
     164.  00:99AC                      ;;=====================================================
     165.  00:99AC                      ;;PINTA_AYUDAS_HABITACIÓN
     166.  00:99AC                      ;;=====================================================	
     167.  00:99AC                      ; función: 	examina el byte con las ayudas y pinta las que estén seleccionadas según variable habitacion_extras
     168.  00:99AC                      ; entrada: 	habitacion_extras
     169.  00:99AC                      ; salida: 	-
     170.  00:99AC                      pinta_ayudas_habitacion:
     171.  00:99AC                      .examina_oracion:
     172.  00:99AC  3A 8A A4            	LD		 A, (habitacion_extras)
     173.  00:99AF  CB 7F               	BIT		 7,A
     174.  00:99B1  CA BD 99            	JP		 Z,.examina_cruz
     175.  00:99B4  DD 21 A5 A8         	LD		IX, ayuda_oracion
     176.  00:99B8  3E 01               	LD		 A, ACTIVA
     177.  00:99BA  CD 7C 99            	CALL	pinta_obj_ayuda
     178.  00:99BD                      .examina_cruz:
     179.  00:99BD  3A 8A A4            	LD		 A, (habitacion_extras)
     180.  00:99C0  CB 77               	BIT		 6,A
     181.  00:99C2  CA CE 99            	JP		 Z,.examina_aguabendita
     182.  00:99C5  DD 21 B6 A8         	LD		IX, ayuda_cruz
     183.  00:99C9  3E 01               	LD		 A, ACTIVA
     184.  00:99CB  CD 7C 99            	CALL	pinta_obj_ayuda
     185.  00:99CE                      .examina_aguabendita:
     186.  00:99CE  3A 8A A4            	LD		 A, (habitacion_extras)
     187.  00:99D1  CB 6F               	BIT		 5,A
     188.  00:99D3  CA DF 99            	JP		 Z,.examina_armadura
     189.  00:99D6  DD 21 C7 A8         	LD		IX, ayuda_aguabendita
     190.  00:99DA  3E 01               	LD		 A, ACTIVA
     191.  00:99DC  CD 7C 99            	CALL	pinta_obj_ayuda
     192.  00:99DF                      .examina_armadura:
     193.  00:99DF  3A 8A A4            	LD		 A, (habitacion_extras)
     194.  00:99E2  CB 67               	BIT		 4,A
     195.  00:99E4  CA F0 99            	JP		 Z,.examina_planta
     196.  00:99E7  DD 21 D8 A8         	LD		IX, ayuda_armadura
     197.  00:99EB  3E 01               	LD		 A, ACTIVA
     198.  00:99ED  CD 7C 99            	CALL	pinta_obj_ayuda
     199.  00:99F0                      .examina_planta:
     200.  00:99F0  3A 8A A4            	LD		 A, (habitacion_extras)
     201.  00:99F3  CB 5F               	BIT		 3,A
     202.  00:99F5  CA 01 9A            	JP		 Z,.examina_vidaextra
     203.  00:99F8  DD 21 E9 A8         	LD		IX, ayuda_planta
     204.  00:99FC  3E 01               	LD		 A, ACTIVA
     205.  00:99FE  CD 7C 99            	CALL	pinta_obj_ayuda
     206.  00:9A01                      .examina_vidaextra:
     207.  00:9A01  3A 8A A4            	LD		 A, (habitacion_extras)
     208.  00:9A04  CB 57               	BIT		 2,A
     209.  00:9A06  CA 12 9A            	JP		 Z,.examina_ballesta
     210.  00:9A09  DD 21 FA A8         	LD		IX, ayuda_vidaextra
     211.  00:9A0D  3E 01               	LD		 A, ACTIVA
     212.  00:9A0F  CD 7C 99            	CALL	pinta_obj_ayuda
     213.  00:9A12                      .examina_ballesta:
     214.  00:9A12  3A 8A A4            	LD		 A, (habitacion_extras)
     215.  00:9A15  CB 4F               	BIT		 1,A
     216.  00:9A17  C8                  	RET		 Z
     217.  00:9A18  DD 21 0B A9         	LD		IX, ayuda_ballesta
     218.  00:9A1C  3E 01               	LD		 A, ACTIVA
     219.  00:9A1E  CD 7C 99            	CALL	pinta_obj_ayuda
     220.  00:9A21                      fin_pinta_ayudas_habitacion:
     221.  00:9A21  C9                  	RET
     222.  00:9A22                      
     223.  00:9A22                      
     224.  00:9A22                      
     225.  00:9A22                      ;;=====================================================
     226.  00:9A22                      ;;ACCION_ORACION
     227.  00:9A22                      ;;=====================================================	
     228.  00:9A22                      ; función: 	
     229.  00:9A22                      ; entrada: 	
     230.  00:9A22                      ; salida: 	-
     231.  00:9A22                      accion_oracion:
     232.  00:9A22                      fin_accion_oracion:
     233.  00:9A22  C9                  	RET
     234.  00:9A23                      	
     235.  00:9A23                      
     236.  00:9A23                      ;;=====================================================
     237.  00:9A23                      ;;ACCION_CRUZ
     238.  00:9A23                      ;;=====================================================	
     239.  00:9A23                      ; función: 	
     240.  00:9A23                      ; entrada: 	
     241.  00:9A23                      ; salida: 	-
     242.  00:9A23                      accion_cruz:
     243.  00:9A23                      fin_accion_cruz:
     244.  00:9A23  C9                  	RET
     245.  00:9A24                      
     246.  00:9A24                      
     247.  00:9A24                      ;;=====================================================
     248.  00:9A24                      ;;ACCION_AGUA
     249.  00:9A24                      ;;=====================================================	
     250.  00:9A24                      ; función: 	
     251.  00:9A24                      ; entrada: 	
     252.  00:9A24                      ; salida: 	-
     253.  00:9A24                      accion_agua:
     254.  00:9A24                      fin_accion_agua:
     255.  00:9A24  C9                  	RET
     256.  00:9A25                      
     257.  00:9A25                      
     258.  00:9A25                      ;;=====================================================
     259.  00:9A25                      ;;ACCION_ARMADURA
     260.  00:9A25                      ;;=====================================================	
     261.  00:9A25                      ; función: 	
     262.  00:9A25                      ; entrada: 	
     263.  00:9A25                      ; salida: 	-
     264.  00:9A25                      accion_armadura:
     265.  00:9A25                      fin_accion_armadura:
     266.  00:9A25  C9                  	RET
     267.  00:9A26                      
     268.  00:9A26                      
     269.  00:9A26                      ;;=====================================================
     270.  00:9A26                      ;;ACCION_PLANTA
     271.  00:9A26                      ;;=====================================================	
     272.  00:9A26                      ; función: 	
     273.  00:9A26                      ; entrada: 	
     274.  00:9A26                      ; salida: 	-
     275.  00:9A26                      accion_planta:
     276.  00:9A26                      fin_accion_planta:
     277.  00:9A26  C9                  	RET
     278.  00:9A27                      
     279.  00:9A27                      
     280.  00:9A27                      ;;=====================================================
     281.  00:9A27                      ;;ACCION_VIDAEXTRA
     282.  00:9A27                      ;;=====================================================	
     283.  00:9A27                      ; función: 	
     284.  00:9A27                      ; entrada: 	
     285.  00:9A27                      ; salida: 	-
     286.  00:9A27                      accion_vidaextra:
     287.  00:9A27                      fin_accion_vidaextra:
     288.  00:9A27  C9                  	RET
     289.  00:9A28                      
     290.  00:9A28                      
     291.  00:9A28                      ;;=====================================================
     292.  00:9A28                      ;;ACCION_BALLESTA
     293.  00:9A28                      ;;=====================================================	
     294.  00:9A28                      ; función: 	
     295.  00:9A28                      ; entrada: 	
     296.  00:9A28                      ; salida: 	-
     297.  00:9A28                      accion_ballesta:
     298.  00:9A28                      fin_accion_ballesta:
     299.  00:9A28  C9                  	RET
     300.  00:9A29                      
     301.  00:9A29                      
     128   00:9A29                      	
     129   00:9A29                      
     130   00:9A29                      ;;=====================================================
     131   00:9A29                      ;;DEFINICIÓN DE SUBRUTINAS DE FERNANDO PARA COMPRESIÓN Y SONIDO
     132   00:9A29                      ;;=====================================================
     133   00:9A29                      ;Este include lleva la rutina de descompresión de ROM/RAM a VRAM de pletter
     134   00:9A29                      ;Está adaptada de la original a sjasm
     135   00:9A29                      ;	HL = RAM/ROM source	; DE = VRAM destination
     136   00:9A29                      depack_VRAM:
     137   00:9A29                      	include "PL_VRAM_Depack_SJASM.asm"
       1.  00:9A29                      ;-----------------------------------------------------------
       2.  00:9A29                      ; Pletter v0.5b VRAM Depacker v1.1 - 16Kb version
       3.  00:9A29                      ; HL = RAM/ROM source ; DE = VRAM destination
       4.  00:9A29                      ;-----------------------------------------------------------
       5.  00:9A29  F3                  	di
       6.  00:9A2A                      
       7.  00:9A2A                      ; VRAM address setup
       8.  00:9A2A  7B                  	ld	a,e
       9.  00:9A2B  D3 99               	out	[099h],a
      10.  00:9A2D  7A                  	ld	a,d
      11.  00:9A2E  F6 40               	or	040h
      12.  00:9A30  D3 99               	out	[099h],a
      13.  00:9A32                      
      14.  00:9A32                      ; Initialization
      15.  00:9A32  7E                  	ld	a,[hl]
      16.  00:9A33  23                  	inc	hl
      17.  00:9A34  D9                  	exx
      18.  00:9A35  11 00 00            	ld	de,0
      19.  00:9A38  87                  	add	a,a
      20.  00:9A39  3C                  	inc	a
      21.  00:9A3A  CB 13               	rl	e
      22.  00:9A3C  87                  	add	a,a
      23.  00:9A3D  CB 13               	rl	e
      24.  00:9A3F  87                  	add	a,a
      25.  00:9A40  CB 13               	rl	e
      26.  00:9A42  CB 13               	rl	e
      27.  00:9A44  21 FB 9A            	ld	hl,modes
      28.  00:9A47  19                  	add	hl,de
      29.  00:9A48  5E                  	ld	e,[hl]
      30.  00:9A49  DD 6B               	ld	ixl,e
      31.  00:9A4B  23                  	inc	hl
      32.  00:9A4C  5E                  	ld	e,[hl]
      33.  00:9A4D  DD 63               	ld	ixh,e
      34.  00:9A4F  1E 01               	ld	e,1
      35.  00:9A51  D9                  	exx
      36.  00:9A52  FD 21 5B 9A         	ld	iy,loop
      37.  00:9A56                      
      38.  00:9A56                      ; Main depack loop
      39.  00:9A56  0E 98               literal:ld	c,098h
      40.  00:9A58  ED A3               	outi
      41.  00:9A5A  13                  	inc	de
      42.  00:9A5B  87                  loop:	add	a,a
      43.  00:9A5C  CC EF 9A              	call	z,getbit
      44.  00:9A5F  30 F5               	jr	nc,literal
      45.  00:9A61                      
      46.  00:9A61                      ; Compressed data
      47.  00:9A61  D9                  	exx
      48.  00:9A62  62                  	ld	h,d
      49.  00:9A63  6B                  	ld	l,e
      50.  00:9A64  87                  getlen: add	a,a
      51.  00:9A65  CC F3 9A            	call	z,getbitexx
      52.  00:9A68  30 1D               	jr	nc,lenok
      53.  00:9A6A  87                  lus:	add	a,a
      54.  00:9A6B  CC F3 9A            	call	z,getbitexx
      55.  00:9A6E  ED 6A               	adc	hl,hl
      56.  00:9A70  D8                  	ret	c
      57.  00:9A71  87                  	add	a,a
      58.  00:9A72  CC F3 9A            	call	z,getbitexx
      59.  00:9A75  30 10               	jr	nc,lenok
      60.  00:9A77  87                  	add	a,a
      61.  00:9A78  CC F3 9A            	call	z,getbitexx
      62.  00:9A7B  ED 6A               	adc	hl,hl
      63.  00:9A7D  DA F9 9A            	jp	c,Depack_out
      64.  00:9A80  87                  	add	a,a
      65.  00:9A81  CC F3 9A            	call	z,getbitexx
      66.  00:9A84  DA 6A 9A            	jp	c,lus
      67.  00:9A87  23                  lenok:  inc	hl
      68.  00:9A88  D9                  	exx
      69.  00:9A89  4E                  	ld	c,[hl]
      70.  00:9A8A  23                  	inc	hl
      71.  00:9A8B  06 00               	ld	b,0
      72.  00:9A8D  CB 79               	bit	7,c
      73.  00:9A8F  CA C2 9A            	jp	z,offsok
      74.  00:9A92  DD E9               	jp	ix
      75.  00:9A94                      
      76.  00:9A94  87                  mode7:  add	a,a
      77.  00:9A95  CC EF 9A              	call	z,getbit
      78.  00:9A98  CB 10               	rl	b
      79.  00:9A9A  87                  mode6:	add	a,a
      80.  00:9A9B  CC EF 9A              	call	z,getbit
      81.  00:9A9E  CB 10               	rl	b
      82.  00:9AA0  87                  mode5:  add	a,a
      83.  00:9AA1  CC EF 9A              	call	z,getbit
      84.  00:9AA4  CB 10               	rl	b
      85.  00:9AA6  87                  mode4:  add	a,a
      86.  00:9AA7  CC EF 9A              	call	z,getbit
      87.  00:9AAA  CB 10               	rl	b
      88.  00:9AAC  87                  mode3:  add	a,a
      89.  00:9AAD  CC EF 9A              	call	z,getbit
      90.  00:9AB0  CB 10               	rl	b
      91.  00:9AB2  87                  mode2:	add	a,a
      92.  00:9AB3  CC EF 9A              	call	z,getbit
      93.  00:9AB6  CB 10               	rl	b
      94.  00:9AB8  87                  	add	a,a
      95.  00:9AB9  CC EF 9A              	call	z,getbit
      96.  00:9ABC  30 04               	jr	nc,offsok
      97.  00:9ABE  B7                  	or	a
      98.  00:9ABF  04                  	inc	b
      99.  00:9AC0  CB B9               	res	7,c
     100.  00:9AC2  03                  offsok: inc	bc
     101.  00:9AC3  E5                  	push	hl
     102.  00:9AC4  D9                  	exx
     103.  00:9AC5  E5                  	push	hl
     104.  00:9AC6  D9                  	exx
     105.  00:9AC7  6B                  	ld	l,e
     106.  00:9AC8  62                  	ld	h,d
     107.  00:9AC9  ED 42               	sbc	hl,bc
     108.  00:9ACB  C1                  	pop	bc
     109.  00:9ACC  F5                  	push	af
     110.  00:9ACD  7D                  .loop:	ld	a,l
     111.  00:9ACE  D3 99               	out	[099h],a
     112.  00:9AD0  7C                  	ld	a,h
     113.  00:9AD1  00                  	nop                     ; VDP timing
     114.  00:9AD2  D3 99               	out	[099h],a
     115.  00:9AD4  00                  	nop                     ; VDP timing
     116.  00:9AD5  DB 98               	in	a,[098h]
     117.  00:9AD7  08                  	ex	af,af'
     118.  00:9AD8  7B                  	ld	a,e
     119.  00:9AD9  00                  	nop			; VDP timing
     120.  00:9ADA  D3 99               	out	[099h],a
     121.  00:9ADC  7A                  	ld	a,d
     122.  00:9ADD  F6 40               	or	040h
     123.  00:9ADF  D3 99               	out	[099h],a
     124.  00:9AE1  08                  	ex	af,af'
     125.  00:9AE2  00                  	nop			; VDP timing
     126.  00:9AE3  D3 98               	out	[098h],a
     127.  00:9AE5  13                  	inc	de
     128.  00:9AE6  ED A1               	cpi
     129.  00:9AE8  EA CD 9A            	jp	pe,.loop
     130.  00:9AEB  F1                  	pop	af
     131.  00:9AEC  E1                  	pop	hl
     132.  00:9AED  FD E9               	jp	iy
     133.  00:9AEF                      
     134.  00:9AEF  7E                  getbit: ld	a,[hl]
     135.  00:9AF0  23                  	inc	hl
     136.  00:9AF1  17                  	rla
     137.  00:9AF2  C9                  	ret
     138.  00:9AF3                      
     139.  00:9AF3                      getbitexx:
     140.  00:9AF3  D9                  	exx
     141.  00:9AF4  7E                  	ld	a,[hl]
     142.  00:9AF5  23                  	inc	hl
     143.  00:9AF6  D9                  	exx
     144.  00:9AF7  17                  	rla
     145.  00:9AF8  C9                  	ret
     146.  00:9AF9                      
     147.  00:9AF9                      ; Depacker exit
     148.  00:9AF9                      Depack_out:
     149.  00:9AF9  FB                  	ei
     150.  00:9AFA  C9                  	ret
     151.  00:9AFB                      
     152.  00:9AFB                      modes:
     153.  00:9AFB  C2 9A               	dw	offsok
     154.  00:9AFD  B2 9A               	dw	mode2
     155.  00:9AFF  AC 9A               	dw	mode3
     156.  00:9B01  A6 9A               	dw	mode4
     157.  00:9B03  A0 9A               	dw	mode5
     158.  00:9B05  9A 9A               	dw	mode6
     159.  00:9B07  94 9A               	dw	mode7
     138   00:9B09                      
     139   00:9B09                      
     140   00:9B09                      	
     141   00:9B09                      ;;=====================================================
     142   00:9B09                      ;;DEFINICIÓN DE ESTRUCTURAS
     143   00:9B09                      ;;=====================================================		
     144   00:9B09                      	include "estructuras.asm"
       1.  00:9B09                      ;;=====================================================
       2.  00:9B09                      ;;DEFINICIÓN DE ESTRUCTURAS
       3.  00:9B09                      ;;=====================================================
       4.  00:9B09                      
       5.  00:9B09                      ;crear estructura
       6.  00:9B09                      
       7.  00:9B09                      	STRUCT ESTRUCTURA_PUNTOMIRA
       8.  00:9B09                    < posx			DB		100
       9.  00:9B09                    < posy			DB		100
      10.  00:9B09                    < escena			DB		0	;valores porsibles 0 (blanco+rojo en punto de mira) y NEG 0 (al revés)
      11.  00:9B09                    < velocidad		DB		0
      12.  00:9B09                    < boton2_pressed  DB		0
      13.  00:9B09                    < cadencia		DB		5	;nº de veces que se ejecutará el disparo antes de ejecutar un disparo real (porque cuando se pulsa la tecl dispara 3 ó 4 veces de rápido que va)
      14.  00:9B09                    < ; al final he decidido (ya que el punto de mira es el prota) que lo relacionado con el prota vaya en esta estructura
      15.  00:9B09                    < pm_aux1			DB		0	;para llegar a los 16 campos
      16.  00:9B09                    < pm_aux2			DB		0	;para llegar a los 16 campos
      17.  00:9B09                    < pm_aux3			DB		0	;para llegar a los 16 campos
      18.  00:9B09                    < pm_aux4			DB		0	;para llegar a los 16 campos
      19.  00:9B09                    < pm_aux5			DB		0	;para llegar a los 16 campos
      20.  00:9B09                    < pm_aux6			DB		0	;para llegar a los 16 campos
      21.  00:9B09                    < pm_aux7			DB		0	;para llegar a los 16 campos
      22.  00:9B09                    < pm_aux8			DB		0	;para llegar a los 16 campos
      23.  00:9B09                    < pm_aux9			DB		0	;para llegar a los 16 campos
      24.  00:9B09                    < pm_aux10		DB		0	;para llegar a los 16 campos
      25.  00:9B09                    < 	ENDSTRUCT;ESTRUCTURA_PUNTOMIRA
      26.  00:9B09                      
      27.  00:9B09                      	
      28.  00:9B09                      	STRUCT ESTRUCTURA_ENEMIGO
      29.  00:9B09                    < tipo				DB		0	;(0 serpiente por ejemplo) #FF muerto o no existe
      30.  00:9B09                    < posx				DB		5
      31.  00:9B09                    < posy				DB		50
      32.  00:9B09                    < color				DB		5
      33.  00:9B09                    < escena				DB		0
      34.  00:9B09                    < contador_siguiente_escena	DB	0
      35.  00:9B09                    < reset_contador		DB		0
      36.  00:9B09                    < dano				DB		0	;daño
      37.  00:9B09                    < energia				DB		0	;energía del enemigo... si llega a 0 => existe <- 0
      38.  00:9B09                    < ;indica el nº de sprite a mostrar y si está compuesto por uno o dos sprites y si están en horizontal o vertical
      39.  00:9B09                    < ver_hor				DB		0
      40.  00:9B09                    < manejador_dibujo 	DW		0
      41.  00:9B09                    < en_aux3				DB		0
      42.  00:9B09                    < en_aux4				DB		0
      43.  00:9B09                    < 	ENDSTRUCT;ESTRUCTURA_ENEMIGO
      44.  00:9B09                      	
      45.  00:9B09                      	STRUCT ESTRUCTURA_AYUDA		;vidas extra, plantas de curación de energía, reliquias				
      46.  00:9B09                    < activo				DB		0	;0 no activo <>0 activo 											0
      47.  00:9B09                    < postilemem_nousado	DW		0	;pos en memoria ver array_ayudas de cómo se mostrarán (wordaux2)	1,2
      48.  00:9B09                    < postilemem_usado	DW		0	;pos en memoria ver array_ayudas de cómo se mostrarán (wordaux2)	3,4
      49.  00:9B09                    < pospantalla			DB		0	;pos en pantalla (memoria en el banco 1 se le suma 256 + TILEMAP) (wordaux1)	5
      50.  00:9B09                    < posx				DB		0	;pos del pixel central (esquina superior + 8x)						6
      51.  00:9B09                    < posy				DB		112	;pos del pixel central (esquina superior + 8y) (para toas igual)	7
      52.  00:9B09                    < puntero_accion		DW		0	;subrutina que indica la acción si se dispara en el objeto			8,9
      53.  00:9B09                    < ayu_aux1			DB		0	;relleno
      54.  00:9B09                    < ayu_aux2			DB		0	;relleno
      55.  00:9B09                    < ayu_aux3			DB		0	;relleno
      56.  00:9B09                    < ayu_aux4			DB		0	;relleno
      57.  00:9B09                    < ayu_aux5			DB		0	;relleno
      58.  00:9B09                    < ayu_aux6			DB		0	;relleno
      59.  00:9B09                    < ayu_aux7			DB		0	;relleno
      60.  00:9B09                    < 	ENDSTRUCT;ESTRUCTURA_AYUDA
      61.  00:9B09                      
      62.  00:9B09                      
      63.  00:9B09                      	STRUCT ESTRUCTURA_ANTORCHA
      64.  00:9B09                    < activo				DB		0	;0 no activa <>0 activo
      65.  00:9B09                    < postilemem_antor1	DW		0	;pos en memoria ver array_antorcha de cómo se mostrará (wordaux2)	1,2
      66.  00:9B09                    < pospantalla_antor1	DB		0	;pos en pantalla (memoria en el banco 1 se le suma 256 + TILEMAP) (wordaux1)	3
      67.  00:9B09                    < pospantalla_antor2	DB		0	;pos en pantalla (memoria en el banco 1 se le suma 256 + TILEMAP) (wordaux1)	4
      68.  00:9B09                    < escena				DB		0	;(va entre 0 y 1 - 0=>llama1 y llama2 o 1=>llama2 y llama1	7 - tiles 196 y 197)	5
      69.  00:9B09                    < cont_sig_escena		DB		10	;	6
      70.  00:9B09                    < 	ENDSTRUCT;ESTRUCTURA_ANTORCHA
      71.  00:9B09                      
      72.  00:9B09                      	STRUCT ESTRUCTURA_ESQUELETO
      73.  00:9B09                    < activo				DB		0	;0 no activa <>0 activo
      74.  00:9B09                    < postilemem_antor1	DW		0	;pos en memoria ver array_antorcha de cómo se mostrará (wordaux2)	1,2
      75.  00:9B09                    < pospantalla_esquel1	DB		0	;pos en pantalla (memoria en el banco 1 se le suma 256 + TILEMAP) (wordaux1)	3
      76.  00:9B09                    < pospantalla_esquel2	DB		0	;pos en pantalla (memoria en el banco 1 se le suma 256 + TILEMAP) (wordaux1)	4
      77.  00:9B09                    < escena				DB		0	;(va entre 0 y 4 - tiles 164, 165, 164, 166)	5
      78.  00:9B09                    < cont_sig_escena		DB		0	;	6
      79.  00:9B09                    < 	ENDSTRUCT;ESTRUCTURA_ESQUELETO
      80.  00:9B09                      
      81.  00:9B09                      
      82.  00:9B09                      
      83.  00:9B09                      
      84.  00:9B09                      
      85.  00:9B09                      
     145   00:9B09                      	
     146   00:9B09                      ;;=====================================================
     147   00:9B09                      ;;DEFINICIÓN DE VARIABLES
     148   00:9B09                      ;;=====================================================		
     149   00:9B09                      	include "sprites.asm"
       1.  00:9B09                      ;;=====================================================
       2.  00:9B09                      ;;DEFINICIÓN DE SPRITES
       3.  00:9B09                      ;;=====================================================	
       4.  00:9B09                      
       5.  00:9B09                      
       6.  00:9B09                      ;; NOTA:
       7.  00:9B09                      ;~ sprite_reliquia_oracion: on/off
       8.  00:9B09                      ;~ sprite_reliquia_cruz: on/off
       9.  00:9B09                      ;~ sprite_reliquia_agua: on/off
      10.  00:9B09                      ;~ sprite_peto: on/off
      11.  00:9B09                      ;~ sprite_planta: on/off
      12.  00:9B09                      ;~ sprite_vida_extra: on/off
      13.  00:9B09                      ;~ sprite_ballesta_mejorada: on/off
      14.  00:9B09                      
      15.  00:9B09                      ;~ iban a ser sprites pero por falta de recursos serán tiles
      16.  00:9B09                      
      17.  00:9B09                      
      18.  00:9B09                      sprites_pantantalla:
      19.  00:9B09                      
      20.  00:9B09                      ;; PARTE 1: SPRITES COMUNES
      21.  00:9B09                      
      22.  00:9B09                      sprites_comunes:
      23.  00:9B09                      sprite_punto_mira_1:	;color 8
      24.  00:9B09                      	db #FF,#FF,#C0,#C0,#C0,#C0,#C0,#C0
      24.  00:9B09  FF FF C0 C0 C0 C0 C0 C0 
      25.  00:9B11                      	db #C0,#C0,#C0,#C0,#C0,#C0,#FF,#FF
      25.  00:9B11  C0 C0 C0 C0 C0 C0 FF FF 
      26.  00:9B19                      	db #FF,#FF,#03,#03,#03,#03,#03,#03
      26.  00:9B19  FF FF 03 03 03 03 03 03 
      27.  00:9B21                      	db #03,#03,#03,#03,#03,#03,#FF,#FF
      27.  00:9B21  03 03 03 03 03 03 FF FF 
      28.  00:9B29                      	
      29.  00:9B29                      sprite_punto_mira_2: 	;color 15
      30.  00:9B29                      	db #00,#00,#00,#00,#0F,#0F,#0C,#0C
      30.  00:9B29  00 00 00 00 0F 0F 0C 0C 
      31.  00:9B31                      	db #0C,#0C,#0F,#0F,#00,#00,#00,#00
      31.  00:9B31  0C 0C 0F 0F 00 00 00 00 
      32.  00:9B39                      	db #00,#00,#00,#00,#F0,#F0,#30,#30
      32.  00:9B39  00 00 00 00 F0 F0 30 30 
      33.  00:9B41                      	db #30,#30,#F0,#F0,#00,#00,#00,#00
      33.  00:9B41  30 30 F0 F0 00 00 00 00 
      34.  00:9B49                      	
      35.  00:9B49                      sprite_punto_mira_1_mejorado:
      36.  00:9B49                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      36.  00:9B49  FF FF FF FF FF FF FF FF 
      37.  00:9B51                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      37.  00:9B51  FF FF FF FF FF FF FF FF 
      38.  00:9B59                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      38.  00:9B59  FF FF FF FF FF FF FF FF 
      39.  00:9B61                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      39.  00:9B61  FF FF FF FF FF FF FF FF 
      40.  00:9B69                      
      41.  00:9B69                      sprite_punto_mira_2_mejorado:
      42.  00:9B69                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      42.  00:9B69  FF FF FF FF FF FF FF FF 
      43.  00:9B71                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      43.  00:9B71  FF FF FF FF FF FF FF FF 
      44.  00:9B79                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      44.  00:9B79  FF FF FF FF FF FF FF FF 
      45.  00:9B81                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      45.  00:9B81  FF FF FF FF FF FF FF FF 
      46.  00:9B89                      	
      47.  00:9B89                      sprite_explosion_1:
      48.  00:9B89                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      48.  00:9B89  FF FF FF FF FF FF FF FF 
      49.  00:9B91                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      49.  00:9B91  FF FF FF FF FF FF FF FF 
      50.  00:9B99                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      50.  00:9B99  FF FF FF FF FF FF FF FF 
      51.  00:9BA1                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF	
      51.  00:9BA1  FF FF FF FF FF FF FF FF 
      52.  00:9BA9                      
      53.  00:9BA9                      sprite_explosion_2:
      54.  00:9BA9                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      54.  00:9BA9  FF FF FF FF FF FF FF FF 
      55.  00:9BB1                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      55.  00:9BB1  FF FF FF FF FF FF FF FF 
      56.  00:9BB9                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      56.  00:9BB9  FF FF FF FF FF FF FF FF 
      57.  00:9BC1                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF	
      57.  00:9BC1  FF FF FF FF FF FF FF FF 
      58.  00:9BC9                      fin_sprites_comunes:
      59.  00:9BC9                      
      60.  00:9BC9                      ;; PARTE 2: SPRITES NO COMUNES
      61.  00:9BC9                      
      62.  00:9BC9                      ;; ARAÑA
      63.  00:9BC9                      	
      64.  00:9BC9                      sprite_arana1_1:
      65.  00:9BC9                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      65.  00:9BC9  FF FF FF FF FF FF FF FF 
      66.  00:9BD1                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      66.  00:9BD1  FF FF FF FF FF FF FF FF 
      67.  00:9BD9                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      67.  00:9BD9  FF FF FF FF FF FF FF FF 
      68.  00:9BE1                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      68.  00:9BE1  FF FF FF FF FF FF FF FF 
      69.  00:9BE9                      	
      70.  00:9BE9                      sprite_arana1_2:
      71.  00:9BE9                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      71.  00:9BE9  FF FF FF FF FF FF FF FF 
      72.  00:9BF1                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      72.  00:9BF1  FF FF FF FF FF FF FF FF 
      73.  00:9BF9                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      73.  00:9BF9  FF FF FF FF FF FF FF FF 
      74.  00:9C01                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      74.  00:9C01  FF FF FF FF FF FF FF FF 
      75.  00:9C09                      
      76.  00:9C09                      ;; MURCIELAGO
      77.  00:9C09                      	
      78.  00:9C09                      sprite_murcielago1_1:
      79.  00:9C09                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      79.  00:9C09  FF FF FF FF FF FF FF FF 
      80.  00:9C11                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      80.  00:9C11  FF FF FF FF FF FF FF FF 
      81.  00:9C19                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      81.  00:9C19  FF FF FF FF FF FF FF FF 
      82.  00:9C21                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      82.  00:9C21  FF FF FF FF FF FF FF FF 
      83.  00:9C29                      	
      84.  00:9C29                      sprite_murcielago1_2:
      85.  00:9C29                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      85.  00:9C29  FF FF FF FF FF FF FF FF 
      86.  00:9C31                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      86.  00:9C31  FF FF FF FF FF FF FF FF 
      87.  00:9C39                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      87.  00:9C39  FF FF FF FF FF FF FF FF 
      88.  00:9C41                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF	
      88.  00:9C41  FF FF FF FF FF FF FF FF 
      89.  00:9C49                      
      90.  00:9C49                      ;; SERPIENTE
      91.  00:9C49                      
      92.  00:9C49                      sprite_serpiente1_1:
      93.  00:9C49                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      93.  00:9C49  FF FF FF FF FF FF FF FF 
      94.  00:9C51                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      94.  00:9C51  FF FF FF FF FF FF FF FF 
      95.  00:9C59                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      95.  00:9C59  FF FF FF FF FF FF FF FF 
      96.  00:9C61                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      96.  00:9C61  FF FF FF FF FF FF FF FF 
      97.  00:9C69                      	
      98.  00:9C69                      sprite_serpiente1_2:
      99.  00:9C69                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      99.  00:9C69  FF FF FF FF FF FF FF FF 
     100.  00:9C71                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     100.  00:9C71  FF FF FF FF FF FF FF FF 
     101.  00:9C79                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     101.  00:9C79  FF FF FF FF FF FF FF FF 
     102.  00:9C81                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     102.  00:9C81  FF FF FF FF FF FF FF FF 
     103.  00:9C89                      	
     104.  00:9C89                      sprite_serpiente2_1:
     105.  00:9C89                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     105.  00:9C89  FF FF FF FF FF FF FF FF 
     106.  00:9C91                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     106.  00:9C91  FF FF FF FF FF FF FF FF 
     107.  00:9C99                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     107.  00:9C99  FF FF FF FF FF FF FF FF 
     108.  00:9CA1                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     108.  00:9CA1  FF FF FF FF FF FF FF FF 
     109.  00:9CA9                      	
     110.  00:9CA9                      sprite_serpiente2_2:
     111.  00:9CA9                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     111.  00:9CA9  FF FF FF FF FF FF FF FF 
     112.  00:9CB1                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     112.  00:9CB1  FF FF FF FF FF FF FF FF 
     113.  00:9CB9                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     113.  00:9CB9  FF FF FF FF FF FF FF FF 
     114.  00:9CC1                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     114.  00:9CC1  FF FF FF FF FF FF FF FF 
     115.  00:9CC9                      
     116.  00:9CC9                      ;; ZOMBI
     117.  00:9CC9                      
     118.  00:9CC9                      sprite_zombi1_1_1:
     119.  00:9CC9                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     119.  00:9CC9  FF FF FF FF FF FF FF FF 
     120.  00:9CD1                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     120.  00:9CD1  FF FF FF FF FF FF FF FF 
     121.  00:9CD9                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     121.  00:9CD9  FF FF FF FF FF FF FF FF 
     122.  00:9CE1                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     122.  00:9CE1  FF FF FF FF FF FF FF FF 
     123.  00:9CE9                      
     124.  00:9CE9                      sprite_zombi1_2_1:
     125.  00:9CE9                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     125.  00:9CE9  FF FF FF FF FF FF FF FF 
     126.  00:9CF1                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     126.  00:9CF1  FF FF FF FF FF FF FF FF 
     127.  00:9CF9                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     127.  00:9CF9  FF FF FF FF FF FF FF FF 
     128.  00:9D01                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     128.  00:9D01  FF FF FF FF FF FF FF FF 
     129.  00:9D09                      	
     130.  00:9D09                      sprite_zombi1_3_1:
     131.  00:9D09                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     131.  00:9D09  FF FF FF FF FF FF FF FF 
     132.  00:9D11                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     132.  00:9D11  FF FF FF FF FF FF FF FF 
     133.  00:9D19                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     133.  00:9D19  FF FF FF FF FF FF FF FF 
     134.  00:9D21                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     134.  00:9D21  FF FF FF FF FF FF FF FF 
     135.  00:9D29                      	
     136.  00:9D29                      sprite_zombi1_4_1:
     137.  00:9D29                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     137.  00:9D29  FF FF FF FF FF FF FF FF 
     138.  00:9D31                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     138.  00:9D31  FF FF FF FF FF FF FF FF 
     139.  00:9D39                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     139.  00:9D39  FF FF FF FF FF FF FF FF 
     140.  00:9D41                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     140.  00:9D41  FF FF FF FF FF FF FF FF 
     141.  00:9D49                      	
     142.  00:9D49                      sprite_zombi1_1_2:
     143.  00:9D49                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     143.  00:9D49  FF FF FF FF FF FF FF FF 
     144.  00:9D51                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     144.  00:9D51  FF FF FF FF FF FF FF FF 
     145.  00:9D59                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     145.  00:9D59  FF FF FF FF FF FF FF FF 
     146.  00:9D61                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     146.  00:9D61  FF FF FF FF FF FF FF FF 
     147.  00:9D69                      
     148.  00:9D69                      sprite_zombi1_2_2:
     149.  00:9D69                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     149.  00:9D69  FF FF FF FF FF FF FF FF 
     150.  00:9D71                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     150.  00:9D71  FF FF FF FF FF FF FF FF 
     151.  00:9D79                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     151.  00:9D79  FF FF FF FF FF FF FF FF 
     152.  00:9D81                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     152.  00:9D81  FF FF FF FF FF FF FF FF 
     153.  00:9D89                      	
     154.  00:9D89                      sprite_zombi1_3_2:
     155.  00:9D89                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     155.  00:9D89  FF FF FF FF FF FF FF FF 
     156.  00:9D91                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     156.  00:9D91  FF FF FF FF FF FF FF FF 
     157.  00:9D99                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     157.  00:9D99  FF FF FF FF FF FF FF FF 
     158.  00:9DA1                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     158.  00:9DA1  FF FF FF FF FF FF FF FF 
     159.  00:9DA9                      	
     160.  00:9DA9                      sprite_zombi1_4_2:
     161.  00:9DA9                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     161.  00:9DA9  FF FF FF FF FF FF FF FF 
     162.  00:9DB1                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     162.  00:9DB1  FF FF FF FF FF FF FF FF 
     163.  00:9DB9                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     163.  00:9DB9  FF FF FF FF FF FF FF FF 
     164.  00:9DC1                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     164.  00:9DC1  FF FF FF FF FF FF FF FF 
     165.  00:9DC9                      	
     166.  00:9DC9                      sprite_zombi2_1_1:
     167.  00:9DC9                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     167.  00:9DC9  FF FF FF FF FF FF FF FF 
     168.  00:9DD1                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     168.  00:9DD1  FF FF FF FF FF FF FF FF 
     169.  00:9DD9                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     169.  00:9DD9  FF FF FF FF FF FF FF FF 
     170.  00:9DE1                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     170.  00:9DE1  FF FF FF FF FF FF FF FF 
     171.  00:9DE9                      
     172.  00:9DE9                      sprite_zombi2_2_1:
     173.  00:9DE9                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     173.  00:9DE9  FF FF FF FF FF FF FF FF 
     174.  00:9DF1                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     174.  00:9DF1  FF FF FF FF FF FF FF FF 
     175.  00:9DF9                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     175.  00:9DF9  FF FF FF FF FF FF FF FF 
     176.  00:9E01                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     176.  00:9E01  FF FF FF FF FF FF FF FF 
     177.  00:9E09                      	
     178.  00:9E09                      sprite_zombi2_3_1:
     179.  00:9E09                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     179.  00:9E09  FF FF FF FF FF FF FF FF 
     180.  00:9E11                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     180.  00:9E11  FF FF FF FF FF FF FF FF 
     181.  00:9E19                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     181.  00:9E19  FF FF FF FF FF FF FF FF 
     182.  00:9E21                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     182.  00:9E21  FF FF FF FF FF FF FF FF 
     183.  00:9E29                      	
     184.  00:9E29                      sprite_zombi2_4_1:
     185.  00:9E29                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     185.  00:9E29  FF FF FF FF FF FF FF FF 
     186.  00:9E31                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     186.  00:9E31  FF FF FF FF FF FF FF FF 
     187.  00:9E39                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     187.  00:9E39  FF FF FF FF FF FF FF FF 
     188.  00:9E41                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     188.  00:9E41  FF FF FF FF FF FF FF FF 
     189.  00:9E49                      	
     190.  00:9E49                      sprite_zombi2_1_2:
     191.  00:9E49                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     191.  00:9E49  FF FF FF FF FF FF FF FF 
     192.  00:9E51                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     192.  00:9E51  FF FF FF FF FF FF FF FF 
     193.  00:9E59                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     193.  00:9E59  FF FF FF FF FF FF FF FF 
     194.  00:9E61                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     194.  00:9E61  FF FF FF FF FF FF FF FF 
     195.  00:9E69                      
     196.  00:9E69                      sprite_zombi2_2_2:
     197.  00:9E69                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     197.  00:9E69  FF FF FF FF FF FF FF FF 
     198.  00:9E71                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     198.  00:9E71  FF FF FF FF FF FF FF FF 
     199.  00:9E79                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     199.  00:9E79  FF FF FF FF FF FF FF FF 
     200.  00:9E81                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     200.  00:9E81  FF FF FF FF FF FF FF FF 
     201.  00:9E89                      	
     202.  00:9E89                      sprite_zombi2_3_2:
     203.  00:9E89                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     203.  00:9E89  FF FF FF FF FF FF FF FF 
     204.  00:9E91                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     204.  00:9E91  FF FF FF FF FF FF FF FF 
     205.  00:9E99                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     205.  00:9E99  FF FF FF FF FF FF FF FF 
     206.  00:9EA1                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     206.  00:9EA1  FF FF FF FF FF FF FF FF 
     207.  00:9EA9                      	
     208.  00:9EA9                      sprite_zombi2_4_2:
     209.  00:9EA9                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     209.  00:9EA9  FF FF FF FF FF FF FF FF 
     210.  00:9EB1                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     210.  00:9EB1  FF FF FF FF FF FF FF FF 
     211.  00:9EB9                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     211.  00:9EB9  FF FF FF FF FF FF FF FF 
     212.  00:9EC1                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     212.  00:9EC1  FF FF FF FF FF FF FF FF 
     213.  00:9EC9                      	
     214.  00:9EC9                      ;; CABALLERO
     215.  00:9EC9                      
     216.  00:9EC9                      sprite_caballero1_1_1:
     217.  00:9EC9                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     217.  00:9EC9  FF FF FF FF FF FF FF FF 
     218.  00:9ED1                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     218.  00:9ED1  FF FF FF FF FF FF FF FF 
     219.  00:9ED9                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     219.  00:9ED9  FF FF FF FF FF FF FF FF 
     220.  00:9EE1                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     220.  00:9EE1  FF FF FF FF FF FF FF FF 
     221.  00:9EE9                      
     222.  00:9EE9                      sprite_caballero1_2_1:
     223.  00:9EE9                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     223.  00:9EE9  FF FF FF FF FF FF FF FF 
     224.  00:9EF1                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     224.  00:9EF1  FF FF FF FF FF FF FF FF 
     225.  00:9EF9                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     225.  00:9EF9  FF FF FF FF FF FF FF FF 
     226.  00:9F01                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     226.  00:9F01  FF FF FF FF FF FF FF FF 
     227.  00:9F09                      	
     228.  00:9F09                      sprite_caballero1_3_1:
     229.  00:9F09                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     229.  00:9F09  FF FF FF FF FF FF FF FF 
     230.  00:9F11                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     230.  00:9F11  FF FF FF FF FF FF FF FF 
     231.  00:9F19                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     231.  00:9F19  FF FF FF FF FF FF FF FF 
     232.  00:9F21                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     232.  00:9F21  FF FF FF FF FF FF FF FF 
     233.  00:9F29                      	
     234.  00:9F29                      sprite_caballero1_4_1:
     235.  00:9F29                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     235.  00:9F29  FF FF FF FF FF FF FF FF 
     236.  00:9F31                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     236.  00:9F31  FF FF FF FF FF FF FF FF 
     237.  00:9F39                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     237.  00:9F39  FF FF FF FF FF FF FF FF 
     238.  00:9F41                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     238.  00:9F41  FF FF FF FF FF FF FF FF 
     239.  00:9F49                      	
     240.  00:9F49                      sprite_caballero1_1_2:
     241.  00:9F49                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     241.  00:9F49  FF FF FF FF FF FF FF FF 
     242.  00:9F51                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     242.  00:9F51  FF FF FF FF FF FF FF FF 
     243.  00:9F59                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     243.  00:9F59  FF FF FF FF FF FF FF FF 
     244.  00:9F61                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     244.  00:9F61  FF FF FF FF FF FF FF FF 
     245.  00:9F69                      
     246.  00:9F69                      sprite_caballero1_2_2:
     247.  00:9F69                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     247.  00:9F69  FF FF FF FF FF FF FF FF 
     248.  00:9F71                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     248.  00:9F71  FF FF FF FF FF FF FF FF 
     249.  00:9F79                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     249.  00:9F79  FF FF FF FF FF FF FF FF 
     250.  00:9F81                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     250.  00:9F81  FF FF FF FF FF FF FF FF 
     251.  00:9F89                      	
     252.  00:9F89                      sprite_caballero1_3_2:
     253.  00:9F89                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     253.  00:9F89  FF FF FF FF FF FF FF FF 
     254.  00:9F91                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     254.  00:9F91  FF FF FF FF FF FF FF FF 
     255.  00:9F99                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     255.  00:9F99  FF FF FF FF FF FF FF FF 
     256.  00:9FA1                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     256.  00:9FA1  FF FF FF FF FF FF FF FF 
     257.  00:9FA9                      	
     258.  00:9FA9                      sprite_caballero1_4_2:
     259.  00:9FA9                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     259.  00:9FA9  FF FF FF FF FF FF FF FF 
     260.  00:9FB1                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     260.  00:9FB1  FF FF FF FF FF FF FF FF 
     261.  00:9FB9                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     261.  00:9FB9  FF FF FF FF FF FF FF FF 
     262.  00:9FC1                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     262.  00:9FC1  FF FF FF FF FF FF FF FF 
     263.  00:9FC9                      	
     264.  00:9FC9                      sprite_caballero2_1_1:
     265.  00:9FC9                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     265.  00:9FC9  FF FF FF FF FF FF FF FF 
     266.  00:9FD1                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     266.  00:9FD1  FF FF FF FF FF FF FF FF 
     267.  00:9FD9                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     267.  00:9FD9  FF FF FF FF FF FF FF FF 
     268.  00:9FE1                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     268.  00:9FE1  FF FF FF FF FF FF FF FF 
     269.  00:9FE9                      
     270.  00:9FE9                      sprite_caballero2_2_1:
     271.  00:9FE9                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     271.  00:9FE9  FF FF FF FF FF FF FF FF 
     272.  00:9FF1                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     272.  00:9FF1  FF FF FF FF FF FF FF FF 
     273.  00:9FF9                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     273.  00:9FF9  FF FF FF FF FF FF FF FF 
     274.  00:A001                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     274.  00:A001  FF FF FF FF FF FF FF FF 
     275.  00:A009                      	
     276.  00:A009                      sprite_caballero2_3_1:
     277.  00:A009                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     277.  00:A009  FF FF FF FF FF FF FF FF 
     278.  00:A011                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     278.  00:A011  FF FF FF FF FF FF FF FF 
     279.  00:A019                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     279.  00:A019  FF FF FF FF FF FF FF FF 
     280.  00:A021                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     280.  00:A021  FF FF FF FF FF FF FF FF 
     281.  00:A029                      	
     282.  00:A029                      sprite_caballero2_4_1:
     283.  00:A029                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     283.  00:A029  FF FF FF FF FF FF FF FF 
     284.  00:A031                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     284.  00:A031  FF FF FF FF FF FF FF FF 
     285.  00:A039                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     285.  00:A039  FF FF FF FF FF FF FF FF 
     286.  00:A041                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     286.  00:A041  FF FF FF FF FF FF FF FF 
     287.  00:A049                      	
     288.  00:A049                      sprite_caballero2_1_2:
     289.  00:A049                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     289.  00:A049  FF FF FF FF FF FF FF FF 
     290.  00:A051                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     290.  00:A051  FF FF FF FF FF FF FF FF 
     291.  00:A059                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     291.  00:A059  FF FF FF FF FF FF FF FF 
     292.  00:A061                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     292.  00:A061  FF FF FF FF FF FF FF FF 
     293.  00:A069                      
     294.  00:A069                      sprite_caballero2_2_2:
     295.  00:A069                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     295.  00:A069  FF FF FF FF FF FF FF FF 
     296.  00:A071                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     296.  00:A071  FF FF FF FF FF FF FF FF 
     297.  00:A079                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     297.  00:A079  FF FF FF FF FF FF FF FF 
     298.  00:A081                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     298.  00:A081  FF FF FF FF FF FF FF FF 
     299.  00:A089                      	
     300.  00:A089                      sprite_caballero2_3_2:
     301.  00:A089                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     301.  00:A089  FF FF FF FF FF FF FF FF 
     302.  00:A091                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     302.  00:A091  FF FF FF FF FF FF FF FF 
     303.  00:A099                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     303.  00:A099  FF FF FF FF FF FF FF FF 
     304.  00:A0A1                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     304.  00:A0A1  FF FF FF FF FF FF FF FF 
     305.  00:A0A9                      	
     306.  00:A0A9                      sprite_caballero2_4_2:
     307.  00:A0A9                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     307.  00:A0A9  FF FF FF FF FF FF FF FF 
     308.  00:A0B1                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     308.  00:A0B1  FF FF FF FF FF FF FF FF 
     309.  00:A0B9                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     309.  00:A0B9  FF FF FF FF FF FF FF FF 
     310.  00:A0C1                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     310.  00:A0C1  FF FF FF FF FF FF FF FF 
     311.  00:A0C9                      	
     312.  00:A0C9                      ;; LLAMA
     313.  00:A0C9                      
     314.  00:A0C9                      sprite_llama1_1:	
     315.  00:A0C9                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     315.  00:A0C9  FF FF FF FF FF FF FF FF 
     316.  00:A0D1                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     316.  00:A0D1  FF FF FF FF FF FF FF FF 
     317.  00:A0D9                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     317.  00:A0D9  FF FF FF FF FF FF FF FF 
     318.  00:A0E1                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     318.  00:A0E1  FF FF FF FF FF FF FF FF 
     319.  00:A0E9                      	
     320.  00:A0E9                      sprite_llama2_1:	
     321.  00:A0E9                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     321.  00:A0E9  FF FF FF FF FF FF FF FF 
     322.  00:A0F1                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     322.  00:A0F1  FF FF FF FF FF FF FF FF 
     323.  00:A0F9                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     323.  00:A0F9  FF FF FF FF FF FF FF FF 
     324.  00:A101                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF	
     324.  00:A101  FF FF FF FF FF FF FF FF 
     325.  00:A109                      	
     326.  00:A109                      sprite_llama1_2:	
     327.  00:A109                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     327.  00:A109  FF FF FF FF FF FF FF FF 
     328.  00:A111                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     328.  00:A111  FF FF FF FF FF FF FF FF 
     329.  00:A119                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     329.  00:A119  FF FF FF FF FF FF FF FF 
     330.  00:A121                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     330.  00:A121  FF FF FF FF FF FF FF FF 
     331.  00:A129                      	
     332.  00:A129                      sprite_llama2_2:	
     333.  00:A129                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     333.  00:A129  FF FF FF FF FF FF FF FF 
     334.  00:A131                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     334.  00:A131  FF FF FF FF FF FF FF FF 
     335.  00:A139                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     335.  00:A139  FF FF FF FF FF FF FF FF 
     336.  00:A141                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF			
     336.  00:A141  FF FF FF FF FF FF FF FF 
     337.  00:A149                      	
     338.  00:A149                      ;; FANTASMA
     339.  00:A149                      
     340.  00:A149                      sprite_fantasma1_1:
     341.  00:A149                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     341.  00:A149  FF FF FF FF FF FF FF FF 
     342.  00:A151                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     342.  00:A151  FF FF FF FF FF FF FF FF 
     343.  00:A159                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     343.  00:A159  FF FF FF FF FF FF FF FF 
     344.  00:A161                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     344.  00:A161  FF FF FF FF FF FF FF FF 
     345.  00:A169                      
     346.  00:A169                      sprite_fantasma2_1:
     347.  00:A169                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     347.  00:A169  FF FF FF FF FF FF FF FF 
     348.  00:A171                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     348.  00:A171  FF FF FF FF FF FF FF FF 
     349.  00:A179                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     349.  00:A179  FF FF FF FF FF FF FF FF 
     350.  00:A181                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     350.  00:A181  FF FF FF FF FF FF FF FF 
     351.  00:A189                      
     352.  00:A189                      sprite_fantasma1_2:
     353.  00:A189                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     353.  00:A189  FF FF FF FF FF FF FF FF 
     354.  00:A191                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     354.  00:A191  FF FF FF FF FF FF FF FF 
     355.  00:A199                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     355.  00:A199  FF FF FF FF FF FF FF FF 
     356.  00:A1A1                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     356.  00:A1A1  FF FF FF FF FF FF FF FF 
     357.  00:A1A9                      
     358.  00:A1A9                      sprite_fantasma2_2:
     359.  00:A1A9                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     359.  00:A1A9  FF FF FF FF FF FF FF FF 
     360.  00:A1B1                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     360.  00:A1B1  FF FF FF FF FF FF FF FF 
     361.  00:A1B9                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     361.  00:A1B9  FF FF FF FF FF FF FF FF 
     362.  00:A1C1                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF	
     362.  00:A1C1  FF FF FF FF FF FF FF FF 
     363.  00:A1C9                      	
     364.  00:A1C9                      ;; MAGIA
     365.  00:A1C9                      
     366.  00:A1C9                      sprite_magia1_1:
     367.  00:A1C9                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     367.  00:A1C9  FF FF FF FF FF FF FF FF 
     368.  00:A1D1                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     368.  00:A1D1  FF FF FF FF FF FF FF FF 
     369.  00:A1D9                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     369.  00:A1D9  FF FF FF FF FF FF FF FF 
     370.  00:A1E1                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     370.  00:A1E1  FF FF FF FF FF FF FF FF 
     371.  00:A1E9                      
     372.  00:A1E9                      sprite_magia2_1:
     373.  00:A1E9                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     373.  00:A1E9  FF FF FF FF FF FF FF FF 
     374.  00:A1F1                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     374.  00:A1F1  FF FF FF FF FF FF FF FF 
     375.  00:A1F9                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     375.  00:A1F9  FF FF FF FF FF FF FF FF 
     376.  00:A201                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     376.  00:A201  FF FF FF FF FF FF FF FF 
     377.  00:A209                      
     378.  00:A209                      sprite_magia1_2:
     379.  00:A209                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     379.  00:A209  FF FF FF FF FF FF FF FF 
     380.  00:A211                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     380.  00:A211  FF FF FF FF FF FF FF FF 
     381.  00:A219                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     381.  00:A219  FF FF FF FF FF FF FF FF 
     382.  00:A221                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     382.  00:A221  FF FF FF FF FF FF FF FF 
     383.  00:A229                      
     384.  00:A229                      sprite_magia2_2:
     385.  00:A229                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     385.  00:A229  FF FF FF FF FF FF FF FF 
     386.  00:A231                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     386.  00:A231  FF FF FF FF FF FF FF FF 
     387.  00:A239                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     387.  00:A239  FF FF FF FF FF FF FF FF 
     388.  00:A241                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF	
     388.  00:A241  FF FF FF FF FF FF FF FF 
     389.  00:A249                      	
     390.  00:A249                      	
     391.  00:A249                      ;; BEHOLDER
     392.  00:A249                      
     393.  00:A249                      sprite_beholder1_1:
     394.  00:A249                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     394.  00:A249  FF FF FF FF FF FF FF FF 
     395.  00:A251                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     395.  00:A251  FF FF FF FF FF FF FF FF 
     396.  00:A259                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     396.  00:A259  FF FF FF FF FF FF FF FF 
     397.  00:A261                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     397.  00:A261  FF FF FF FF FF FF FF FF 
     398.  00:A269                      
     399.  00:A269                      sprite_beholder2_1:
     400.  00:A269                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     400.  00:A269  FF FF FF FF FF FF FF FF 
     401.  00:A271                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     401.  00:A271  FF FF FF FF FF FF FF FF 
     402.  00:A279                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     402.  00:A279  FF FF FF FF FF FF FF FF 
     403.  00:A281                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     403.  00:A281  FF FF FF FF FF FF FF FF 
     404.  00:A289                      
     405.  00:A289                      sprite_beholder3_1:
     406.  00:A289                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     406.  00:A289  FF FF FF FF FF FF FF FF 
     407.  00:A291                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     407.  00:A291  FF FF FF FF FF FF FF FF 
     408.  00:A299                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     408.  00:A299  FF FF FF FF FF FF FF FF 
     409.  00:A2A1                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     409.  00:A2A1  FF FF FF FF FF FF FF FF 
     410.  00:A2A9                      
     411.  00:A2A9                      sprite_beholder4_1:
     412.  00:A2A9                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     412.  00:A2A9  FF FF FF FF FF FF FF FF 
     413.  00:A2B1                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     413.  00:A2B1  FF FF FF FF FF FF FF FF 
     414.  00:A2B9                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     414.  00:A2B9  FF FF FF FF FF FF FF FF 
     415.  00:A2C1                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF	
     415.  00:A2C1  FF FF FF FF FF FF FF FF 
     416.  00:A2C9                      	
     417.  00:A2C9                      sprite_beholder1_2:
     418.  00:A2C9                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     418.  00:A2C9  FF FF FF FF FF FF FF FF 
     419.  00:A2D1                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     419.  00:A2D1  FF FF FF FF FF FF FF FF 
     420.  00:A2D9                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     420.  00:A2D9  FF FF FF FF FF FF FF FF 
     421.  00:A2E1                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     421.  00:A2E1  FF FF FF FF FF FF FF FF 
     422.  00:A2E9                      
     423.  00:A2E9                      sprite_beholder2_2:
     424.  00:A2E9                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     424.  00:A2E9  FF FF FF FF FF FF FF FF 
     425.  00:A2F1                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     425.  00:A2F1  FF FF FF FF FF FF FF FF 
     426.  00:A2F9                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     426.  00:A2F9  FF FF FF FF FF FF FF FF 
     427.  00:A301                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     427.  00:A301  FF FF FF FF FF FF FF FF 
     428.  00:A309                      
     429.  00:A309                      sprite_beholder3_2:
     430.  00:A309                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     430.  00:A309  FF FF FF FF FF FF FF FF 
     431.  00:A311                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     431.  00:A311  FF FF FF FF FF FF FF FF 
     432.  00:A319                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     432.  00:A319  FF FF FF FF FF FF FF FF 
     433.  00:A321                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     433.  00:A321  FF FF FF FF FF FF FF FF 
     434.  00:A329                      
     435.  00:A329                      sprite_beholder4_2:
     436.  00:A329                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     436.  00:A329  FF FF FF FF FF FF FF FF 
     437.  00:A331                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     437.  00:A331  FF FF FF FF FF FF FF FF 
     438.  00:A339                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     438.  00:A339  FF FF FF FF FF FF FF FF 
     439.  00:A341                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF		
     439.  00:A341  FF FF FF FF FF FF FF FF 
     440.  00:A349                      	
     441.  00:A349                      ;; VAMPIRO
     442.  00:A349                      
     443.  00:A349                      sprite_vampiro1_1:
     444.  00:A349                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     444.  00:A349  FF FF FF FF FF FF FF FF 
     445.  00:A351                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     445.  00:A351  FF FF FF FF FF FF FF FF 
     446.  00:A359                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     446.  00:A359  FF FF FF FF FF FF FF FF 
     447.  00:A361                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     447.  00:A361  FF FF FF FF FF FF FF FF 
     448.  00:A369                      
     449.  00:A369                      sprite_vampiro2_1:
     450.  00:A369                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     450.  00:A369  FF FF FF FF FF FF FF FF 
     451.  00:A371                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     451.  00:A371  FF FF FF FF FF FF FF FF 
     452.  00:A379                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     452.  00:A379  FF FF FF FF FF FF FF FF 
     453.  00:A381                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     453.  00:A381  FF FF FF FF FF FF FF FF 
     454.  00:A389                      
     455.  00:A389                      sprite_vampiro1_2:
     456.  00:A389                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     456.  00:A389  FF FF FF FF FF FF FF FF 
     457.  00:A391                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     457.  00:A391  FF FF FF FF FF FF FF FF 
     458.  00:A399                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     458.  00:A399  FF FF FF FF FF FF FF FF 
     459.  00:A3A1                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     459.  00:A3A1  FF FF FF FF FF FF FF FF 
     460.  00:A3A9                      
     461.  00:A3A9                      sprite_vampiro2_2:
     462.  00:A3A9                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     462.  00:A3A9  FF FF FF FF FF FF FF FF 
     463.  00:A3B1                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     463.  00:A3B1  FF FF FF FF FF FF FF FF 
     464.  00:A3B9                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     464.  00:A3B9  FF FF FF FF FF FF FF FF 
     465.  00:A3C1                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     465.  00:A3C1  FF FF FF FF FF FF FF FF 
     466.  00:A3C9                      	
     467.  00:A3C9                      ;; MANOIZQ
     468.  00:A3C9                      
     469.  00:A3C9                      sprite_manoizq1:
     470.  00:A3C9                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     470.  00:A3C9  FF FF FF FF FF FF FF FF 
     471.  00:A3D1                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     471.  00:A3D1  FF FF FF FF FF FF FF FF 
     472.  00:A3D9                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     472.  00:A3D9  FF FF FF FF FF FF FF FF 
     473.  00:A3E1                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     473.  00:A3E1  FF FF FF FF FF FF FF FF 
     474.  00:A3E9                      	
     475.  00:A3E9                      sprite_manoizq2:
     476.  00:A3E9                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     476.  00:A3E9  FF FF FF FF FF FF FF FF 
     477.  00:A3F1                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     477.  00:A3F1  FF FF FF FF FF FF FF FF 
     478.  00:A3F9                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     478.  00:A3F9  FF FF FF FF FF FF FF FF 
     479.  00:A401                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     479.  00:A401  FF FF FF FF FF FF FF FF 
     480.  00:A409                      	
     481.  00:A409                      sprite_manoizq3:
     482.  00:A409                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     482.  00:A409  FF FF FF FF FF FF FF FF 
     483.  00:A411                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     483.  00:A411  FF FF FF FF FF FF FF FF 
     484.  00:A419                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     484.  00:A419  FF FF FF FF FF FF FF FF 
     485.  00:A421                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF	
     485.  00:A421  FF FF FF FF FF FF FF FF 
     486.  00:A429                      	
     487.  00:A429                      ;; MANODER
     488.  00:A429                      
     489.  00:A429                      sprite_manoder1:
     490.  00:A429                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     490.  00:A429  FF FF FF FF FF FF FF FF 
     491.  00:A431                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     491.  00:A431  FF FF FF FF FF FF FF FF 
     492.  00:A439                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     492.  00:A439  FF FF FF FF FF FF FF FF 
     493.  00:A441                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     493.  00:A441  FF FF FF FF FF FF FF FF 
     494.  00:A449                      	
     495.  00:A449                      sprite_manoder2:
     496.  00:A449                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     496.  00:A449  FF FF FF FF FF FF FF FF 
     497.  00:A451                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     497.  00:A451  FF FF FF FF FF FF FF FF 
     498.  00:A459                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     498.  00:A459  FF FF FF FF FF FF FF FF 
     499.  00:A461                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     499.  00:A461  FF FF FF FF FF FF FF FF 
     500.  00:A469                      	
     501.  00:A469                      sprite_manoder3:
     502.  00:A469                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     502.  00:A469  FF FF FF FF FF FF FF FF 
     503.  00:A471                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     503.  00:A471  FF FF FF FF FF FF FF FF 
     504.  00:A479                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     504.  00:A479  FF FF FF FF FF FF FF FF 
     505.  00:A481                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF		
     505.  00:A481  FF FF FF FF FF FF FF FF 
     506.  00:A489                      	
     507.  00:A489                      	
     508.  00:A489                      	
     509.  00:A489                      	
     510.  00:A489                      	
     511.  00:A489                      	
     512.  00:A489                      	
     513.  00:A489                      	
     514.  00:A489                      	
     515.  00:A489                      	
     516.  00:A489                      	
     517.  00:A489                      	
     518.  00:A489                      	
     519.  00:A489                      	
     520.  00:A489                      	
     521.  00:A489                      	
     522.  00:A489                      	
     523.  00:A489                      	
     524.  00:A489                      	
     525.  00:A489                      	
     526.  00:A489                      	
     527.  00:A489                      	
     528.  00:A489                      	
     150   00:A489                      	
     151   00:A489                      	include "habitaciones.asm"
       1.  00:A489                      ;;=====================================================
       2.  00:A489                      ;;DEFINICIÓN DE HABITACIONES x NIVEL
       3.  00:A489                      ;;=====================================================	
       4.  00:A489                      
       5.  00:A489                      ; sólo voy a usar 7x7 pero como los arrays son lineales y voy a trabajar con matrices
       6.  00:A489                      ; me interesa que seande  8x8 aunque sólo trabaje con 7x7
       7.  00:A489                      
       8.  00:A489                      ; ojo... la primera linea corresponderá a la primera linea del castillo no a la última
       9.  00:A489                      
      10.  00:A489                      ;; definición de estructura de bits
      11.  00:A489                      ;16 bits por habitación
      12.  00:A489                      
      13.  00:A489                      ;~ 7 - sin asignar
      14.  00:A489                      ;~ 6 - sin asignar
      15.  00:A489                      ;~ 5 - esqueletos
      16.  00:A489                      ;~ 4 - todos los enemigos muertos
      17.  00:A489                      ;~ 0,1,2,3 - nº puertas 1 arriba 1 derecha 1 abajo 1 izquierda
      18.  00:A489                      
      19.  00:A489                      ;~ 7 - oracion
      20.  00:A489                      ;~ 6 - cruz
      21.  00:A489                      ;~ 5 - agua bendita
      22.  00:A489                      ;~ 4 - armadura
      23.  00:A489                      ;~ 3 - planta
      24.  00:A489                      ;~ 2 - vida extra
      25.  00:A489                      ;~ 1 - ballesta
      26.  00:A489                      ;~ 0 - antorchas
      27.  00:A489                      
      28.  00:A489                      ;importante: el byte de la columna 15 indicará con 1 y 0 habitaciones por las que se haya pasado
      29.  00:A489                      ;cuando se inicie la partida todos se pondrán a 0
      30.  00:A489                      ;por ejemplo 01000000b se ha pasado por la hab. 2 de esa fila en el nivel que sea
      31.  00:A489                      
      32.  00:A489                      habitacion_actual:
      33.  00:A489  00                  	db  #00		;habitación donde se encuentre el prota. Se mete en una varible par traer todos los datos de golpe y no buscarlos varias veces
      34.  00:A48A                      habitacion_extras:
      35.  00:A48A  00                  	db	#00		;donde van las ayudas de una habitación
      36.  00:A48B                      
      37.  00:A48B                      
      38.  00:A48B                      habitaciones_juego:
      39.  00:A48B                      habitaciones_nivel0:
      40.  00:A48B                      	db  00000000b,#00,00000001b,#01,00101111b,00010100b,00000010b,#03,00001000b,#04,00001001b,#05,00001100b,#06,#FF,#00 ;primera fila
      40.  00:A48B  00 00 01 01 2F 14 02 03 08 04 09 05 0C 06 FF 00 
      41.  00:A49B                      	db  #17,#10,#11,#11,#12,#12,#13,#13,#14,#14,#15,#15,#16,#16,#FF,#00
      41.  00:A49B  17 10 11 11 12 12 13 13 14 14 15 15 16 16 FF 00 
      42.  00:A4AB                      	db  #20,#20,#21,#21,#22,#22,#23,#23,#24,#24,#25,#25,#26,#26,#FF,#00
      42.  00:A4AB  20 20 21 21 22 22 23 23 24 24 25 25 26 26 FF 00 
      43.  00:A4BB                      	db  #30,#30,#31,#31,#32,#32,#33,#33,#34,#34,#35,#35,#36,#36,#FF,#00
      43.  00:A4BB  30 30 31 31 32 32 33 33 34 34 35 35 36 36 FF 00 
      44.  00:A4CB                      	db  00000000b,#00,00000001b,#01,00001111b,#02,00000011b,#03,00001000b,#04,00001001b,#05,00001100b,#06,#FF,#00
      44.  00:A4CB  00 00 01 01 0F 02 03 03 08 04 09 05 0C 06 FF 00 
      45.  00:A4DB                      	db  #50,#50,#51,#51,#52,#52,#53,#53,#54,#54,#55,#55,#56,#56,#FF,#00
      45.  00:A4DB  50 50 51 51 52 52 53 53 54 54 55 55 56 56 FF 00 
      46.  00:A4EB                      	db  00000000b,#00,00000001b,#01,00001111b,#02,00000011b,#03,00001000b,#04,00001001b,#05,00001100b,#06,#FF,#00	;ultima fila
      46.  00:A4EB  00 00 01 01 0F 02 03 03 08 04 09 05 0C 06 FF 00 
      47.  00:A4FB                      	
      48.  00:A4FB                      habitaciones_nivel1:
      49.  00:A4FB                      	db  00000000b,#00,00000001b,#01,00000010b,#02,00000011b,#03,00001000b,#04,00001001b,#05,00001100b,#06,#FF,#00 ;primera fila
      49.  00:A4FB  00 00 01 01 02 02 03 03 08 04 09 05 0C 06 FF 00 
      50.  00:A50B                      	db  #17,#10,#11,#11,#12,#12,#13,#13,#14,#14,#15,#15,#16,#16,#FF,#00
      50.  00:A50B  17 10 11 11 12 12 13 13 14 14 15 15 16 16 FF 00 
      51.  00:A51B                      	db  #20,#20,#21,#21,#22,#22,#23,#23,#24,#24,#25,#25,#26,#26,#FF,#00
      51.  00:A51B  20 20 21 21 22 22 23 23 24 24 25 25 26 26 FF 00 
      52.  00:A52B                      	db  #30,#30,#31,#31,#32,#32,#33,#33,#34,#34,#35,#35,#36,#36,#FF,#00
      52.  00:A52B  30 30 31 31 32 32 33 33 34 34 35 35 36 36 FF 00 
      53.  00:A53B                      	db  00000000b,#00,00000001b,#01,00001111b,#02,00000011b,#03,00001000b,#04,00001001b,#05,00001100b,#06,#FF,#00
      53.  00:A53B  00 00 01 01 0F 02 03 03 08 04 09 05 0C 06 FF 00 
      54.  00:A54B                      	db  #50,#50,#51,#51,#52,#52,#53,#53,#54,#54,#55,#55,#56,#56,#FF,#00
      54.  00:A54B  50 50 51 51 52 52 53 53 54 54 55 55 56 56 FF 00 
      55.  00:A55B                      	db  00000000b,#00,00000001b,#01,00000010b,#02,00000011b,#03,00001000b,#04,00001001b,#05,00001100b,#06,#FF,#00	;ultima fila
      55.  00:A55B  00 00 01 01 02 02 03 03 08 04 09 05 0C 06 FF 00 
      56.  00:A56B                      	
      57.  00:A56B                      habitaciones_nivel2:
      58.  00:A56B                      	db  00000000b,#00,00000001b,#01,00000010b,#02,00000011b,#03,00001000b,#04,00001001b,#05,00001100b,#06,#FF,#00 ;primera fila
      58.  00:A56B  00 00 01 01 02 02 03 03 08 04 09 05 0C 06 FF 00 
      59.  00:A57B                      	db  #17,#10,#11,#11,#12,#12,#13,#13,#14,#14,#15,#15,#16,#16,#FF,#00
      59.  00:A57B  17 10 11 11 12 12 13 13 14 14 15 15 16 16 FF 00 
      60.  00:A58B                      	db  #20,#20,#21,#21,#22,#22,#23,#23,#24,#24,#25,#25,#26,#26,#FF,#00
      60.  00:A58B  20 20 21 21 22 22 23 23 24 24 25 25 26 26 FF 00 
      61.  00:A59B                      	db  #30,#30,#31,#31,#32,#32,#33,#33,#34,#34,#35,#35,#36,#36,#FF,#00
      61.  00:A59B  30 30 31 31 32 32 33 33 34 34 35 35 36 36 FF 00 
      62.  00:A5AB                      	db  00000000b,#00,00000001b,#01,00001111b,#02,00000011b,#03,00001000b,#04,00001001b,#05,00001100b,#06,#FF,#00
      62.  00:A5AB  00 00 01 01 0F 02 03 03 08 04 09 05 0C 06 FF 00 
      63.  00:A5BB                      	db  #50,#50,#51,#51,#52,#52,#53,#53,#54,#54,#55,#55,#56,#56,#FF,#00
      63.  00:A5BB  50 50 51 51 52 52 53 53 54 54 55 55 56 56 FF 00 
      64.  00:A5CB                      	db  00000000b,#00,00000001b,#01,00000010b,#02,00000011b,#03,00001000b,#04,00001001b,#05,00001100b,#06,#FF,#00	;ultima fila
      64.  00:A5CB  00 00 01 01 02 02 03 03 08 04 09 05 0C 06 FF 00 
      65.  00:A5DB                      	
      66.  00:A5DB                      habitaciones_nivel3:
      67.  00:A5DB                      	db  00000000b,#00,00000001b,#01,00000010b,#02,00000011b,#03,00001000b,#04,00001001b,#05,00001100b,#06,#FF,#00 ;primera fila
      67.  00:A5DB  00 00 01 01 02 02 03 03 08 04 09 05 0C 06 FF 00 
      68.  00:A5EB                      	db  #17,#10,#11,#11,#12,#12,#13,#13,#14,#14,#15,#15,#16,#16,#FF,#00
      68.  00:A5EB  17 10 11 11 12 12 13 13 14 14 15 15 16 16 FF 00 
      69.  00:A5FB                      	db  #20,#20,#21,#21,#22,#22,#23,#23,#24,#24,#25,#25,#26,#26,#FF,#00
      69.  00:A5FB  20 20 21 21 22 22 23 23 24 24 25 25 26 26 FF 00 
      70.  00:A60B                      	db  #30,#30,#31,#31,#32,#32,#33,#33,#34,#34,#35,#35,#36,#36,#FF,#00
      70.  00:A60B  30 30 31 31 32 32 33 33 34 34 35 35 36 36 FF 00 
      71.  00:A61B                      	db  00000000b,#00,00000001b,#01,00001111b,#02,00000011b,#03,00001000b,#04,00001001b,#05,00001100b,#06,#FF,#00
      71.  00:A61B  00 00 01 01 0F 02 03 03 08 04 09 05 0C 06 FF 00 
      72.  00:A62B                      	db  #50,#50,#51,#51,#52,#52,#53,#53,#54,#54,#55,#55,#56,#56,#FF,#00
      72.  00:A62B  50 50 51 51 52 52 53 53 54 54 55 55 56 56 FF 00 
      73.  00:A63B                      	db  00000000b,#00,00000001b,#01,00000010b,#02,00000011b,#03,00001000b,#04,00001001b,#05,00001100b,#06,#FF,#00	;ultima fila
      73.  00:A63B  00 00 01 01 02 02 03 03 08 04 09 05 0C 06 FF 00 
      74.  00:A64B                      	
      75.  00:A64B                      habitaciones_nivel4:
      76.  00:A64B                      	db  00000001b,#00,00000001b,#01,00000010b,#02,00000011b,#03,00001000b,#04,00001001b,#05,00001100b,#06,#FF,#00 ;primera fila
      76.  00:A64B  01 00 01 01 02 02 03 03 08 04 09 05 0C 06 FF 00 
      77.  00:A65B                      	db  #17,#10,#11,#11,#12,#12,#13,#13,#14,#14,#15,#15,#16,#16,#FF,#00
      77.  00:A65B  17 10 11 11 12 12 13 13 14 14 15 15 16 16 FF 00 
      78.  00:A66B                      	db  #20,#20,#21,#21,#22,#22,#23,#23,#24,#24,#25,#25,#26,#26,#FF,#00
      78.  00:A66B  20 20 21 21 22 22 23 23 24 24 25 25 26 26 FF 00 
      79.  00:A67B                      	db  #30,#30,#31,#31,#32,#32,#33,#33,#34,#34,#35,#35,#36,#36,#FF,#00
      79.  00:A67B  30 30 31 31 32 32 33 33 34 34 35 35 36 36 FF 00 
      80.  00:A68B                      	db  00000000b,#00,00000001b,#01,00001111b,#02,00000011b,#03,00001000b,#04,00001001b,#05,00001100b,#06,#FF,#00
      80.  00:A68B  00 00 01 01 0F 02 03 03 08 04 09 05 0C 06 FF 00 
      81.  00:A69B                      	db  #50,#50,#51,#51,#52,#52,#53,#53,#54,#54,#55,#55,#56,#56,#FF,#00
      81.  00:A69B  50 50 51 51 52 52 53 53 54 54 55 55 56 56 FF 00 
      82.  00:A6AB                      	db  00000000b,#00,00000001b,#01,00001111b,00001111b,00000011b,#03,00001000b,#04,00001001b,#05,00001100b,#06,#FF,#00	;ultima fila
      82.  00:A6AB  00 00 01 01 0F 0F 03 03 08 04 09 05 0C 06 FF 00 
      83.  00:A6BB                      	
      84.  00:A6BB                      habitaciones_nivel5:
      85.  00:A6BB                      	db  00000000b,#00,00000001b,#01,00000010b,#02,00000011b,#03,00001000b,#04,00001001b,#05,00001100b,#06,#FF,#00 ;primera fila
      85.  00:A6BB  00 00 01 01 02 02 03 03 08 04 09 05 0C 06 FF 00 
      86.  00:A6CB                      	db  #17,#10,#11,#11,#12,#12,#13,#13,#14,#14,#15,#15,#16,#16,#FF,#00
      86.  00:A6CB  17 10 11 11 12 12 13 13 14 14 15 15 16 16 FF 00 
      87.  00:A6DB                      	db  #20,#20,#21,#21,#22,#22,#23,#23,#24,#24,#25,#25,#26,#26,#FF,#00
      87.  00:A6DB  20 20 21 21 22 22 23 23 24 24 25 25 26 26 FF 00 
      88.  00:A6EB                      	db  #30,#30,#31,#31,#32,#32,#33,#33,#34,#34,#35,#35,#36,#36,#FF,#00
      88.  00:A6EB  30 30 31 31 32 32 33 33 34 34 35 35 36 36 FF 00 
      89.  00:A6FB                      	db  00000000b,#00,00000001b,#01,00001111b,#02,00000011b,#03,00001000b,#04,00001001b,#05,00001100b,#06,#FF,#00
      89.  00:A6FB  00 00 01 01 0F 02 03 03 08 04 09 05 0C 06 FF 00 
      90.  00:A70B                      	db  #50,#50,#51,#51,#52,#52,#53,#53,#54,#54,#55,#55,#56,#56,#FF,#00
      90.  00:A70B  50 50 51 51 52 52 53 53 54 54 55 55 56 56 FF 00 
      91.  00:A71B                      	db  00000000b,#00,00000001b,#01,00001010b,00001010b,00000011b,#03,00001000b,#04,00001001b,#05,00001100b,#06,#FF,#00	;ultima fila
      91.  00:A71B  00 00 01 01 0A 0A 03 03 08 04 09 05 0C 06 FF 00 
      92.  00:A72B                      	
      93.  00:A72B                      habitaciones_nivel6:
      94.  00:A72B                      	db  00000000b,#00,00000001b,#01,00000010b,#02,00000011b,#03,00001000b,#04,00001001b,#05,00001100b,#06,#FF,#00 ;primera fila
      94.  00:A72B  00 00 01 01 02 02 03 03 08 04 09 05 0C 06 FF 00 
      95.  00:A73B                      	db  #17,#10,#11,#11,#12,#12,#13,#13,#14,#14,#15,#15,#16,#16,#FF,#00
      95.  00:A73B  17 10 11 11 12 12 13 13 14 14 15 15 16 16 FF 00 
      96.  00:A74B                      	db  #20,#20,#21,#21,#22,#22,#23,#23,#24,#24,#25,#25,#26,#26,#FF,#00
      96.  00:A74B  20 20 21 21 22 22 23 23 24 24 25 25 26 26 FF 00 
      97.  00:A75B                      	db  #30,#30,#31,#31,#32,#32,#33,#33,#34,#34,#35,#35,#36,#36,#FF,#00
      97.  00:A75B  30 30 31 31 32 32 33 33 34 34 35 35 36 36 FF 00 
      98.  00:A76B                      	db  00000000b,#00,00000001b,#01,00001111b,#02,00000011b,#03,00001000b,#04,00001001b,#05,00001100b,#06,#FF,#00
      98.  00:A76B  00 00 01 01 0F 02 03 03 08 04 09 05 0C 06 FF 00 
      99.  00:A77B                      	db  #50,#50,#51,#51,#52,#52,#53,#53,#54,#54,#55,#55,#56,#56,#FF,#00
      99.  00:A77B  50 50 51 51 52 52 53 53 54 54 55 55 56 56 FF 00 
     100.  00:A78B                      	db  00000000b,#00,00000001b,10000000b,00001111b,#02,00000011b,#03,00001000b,#04,00001001b,#05,00001100b,#06,#FF,#00	;ultima fila
     100.  00:A78B  00 00 01 80 0F 02 03 03 08 04 09 05 0C 06 FF 00 
     101.  00:A79B                      
     102.  00:A79B                      
     103.  00:A79B                      
     152   00:A79B                      	
     153   00:A79B                      	include "variables.asm"
       1.  00:A79B                      ;;=====================================================
       2.  00:A79B                      ;;DEFINICIÓN DE VARIABLES
       3.  00:A79B                      ;;=====================================================
       4.  00:A79B                      
       5.  00:A79B                      ;Colores base de la pantalla
       6.  00:A79B                      color_base:
       7.  00:A79B  01 01 01            			DB		COLNEGRO,COLNEGRO,COLNEGRO	
       8.  00:A79E                      ;colores de pantalla cuando se tira bomba
       9.  00:A79E                      color_bomba1:
      10.  00:A79E  08 08 08            			DB		COLROJO,COLROJO,COLROJO
      11.  00:A7A1                      color_bomba2:
      12.  00:A7A1  06 06 06            			DB		COLROJOOSC,COLROJOOSC,COLROJOOSC
      13.  00:A7A4                      
      14.  00:A7A4                      ;definicion de variable del prota usando la estructura del punto de mira
      15.  00:A7A4                      prota:		ESTRUCTURA_PUNTOMIRA
      15.  00:A7A4  64 64 00 00 00 05 00 00 00 00 00 00 00 00 00 00 
      16.  00:A7B4                      ;variables globales del prota
      17.  00:A7B4                      prota_nivel:			;nivel del castillo donde está 0-6
      18.  00:A7B4  00                  			DB		0
      19.  00:A7B5                      prota_vidas:
      20.  00:A7B5  00                  			DB		0
      21.  00:A7B6                      prota_reliquias:
      22.  00:A7B6  03                  			DB		3
      23.  00:A7B7                      prota_pos_mapx:
      24.  00:A7B7  00                  			DB		0	;pos columna
      25.  00:A7B8                      prota_pos_mapy:
      26.  00:A7B8  00                  			DB		0	;pos fila
      27.  00:A7B9                      prota_energia:
      28.  00:A7B9  FA                  			DB		250
      29.  00:A7BA                      
      30.  00:A7BA                      ;array para pintar de golpe el marcador de vidas
      31.  00:A7BA                      array_aux_vidas: 		
      32.  00:A7BA                      			DB		0,0,0,0,0,0,0,0
      32.  00:A7BA  00 00 00 00 00 00 00 00 
      33.  00:A7C2                      
      34.  00:A7C2                      ;array para pintar de golpe el marcador de reliquias
      35.  00:A7C2                      array_aux_reliquias:	
      36.  00:A7C2                      			DB		0,0,0,0,0,0,0,0
      36.  00:A7C2  00 00 00 00 00 00 00 00 
      37.  00:A7CA                      
      38.  00:A7CA                      array_aux_energia:					;array para pintar de golpe el marcador de energía
      39.  00:A7CA                      			DB		16,0,0,0,0,0,0 	;el 16 primero es porque siempre estará pintado el cuadro primero rojo
      39.  00:A7CA  10 00 00 00 00 00 00 
      40.  00:A7D1                      ultimo_pos_array_aux_energia:
      41.  00:A7D1  00                  			DB		0				;el array completo es de 8 pero para posicionar sin niecesidad de cálculos  etiqueto este aparte
      42.  00:A7D2                      			
      43.  00:A7D2                      array_aux_mapa_limpiar:	;es por facilitar el reseteo del mapa (pinto 7 lineas en negro con bios) la otra opción es más larga en código y complicada aunque más rápida
      44.  00:A7D2                      			DB		0,0,0,0,0,0,0
      44.  00:A7D2  00 00 00 00 00 00 00 
      45.  00:A7D9                      elemento_pintar_mapa:
      46.  00:A7D9  00                  			DB		0	;TILEPROTAM = 19, ;TILEGRISM = 9
      47.  00:A7DA                      			
      48.  00:A7DA                      ;; nota importante: cada vez que se cambie de nivel se actualizará el contenido
      49.  00:A7DA                      ;; arrays con mapa de tiles de las puertas
      50.  00:A7DA                      array_puerta_arriba:
      51.  00:A7DA  03 01 01 03         array_puerta_arriba1:		DB	3,1,1,3
      52.  00:A7DE  01 01 01 01         array_puerta_arriba2:		DB	1,1,1,1
      53.  00:A7E2  01 01 01 01         array_puerta_arriba3:		DB	1,1,1,1
      54.  00:A7E6  01 01 01 01         array_puerta_arriba4:		DB	1,1,1,1
      55.  00:A7EA  01 01 01 01         array_puerta_arriba5:		DB	1,1,1,1
      56.  00:A7EE                      
      57.  00:A7EE                      array_puerta_derecha:
      58.  00:A7EE  01 03 03            array_puerta_derecha1:		DB	1,3,3
      59.  00:A7F1  01 01 03            array_puerta_derecha2:		DB	1,1,3
      60.  00:A7F4  01 01 01            array_puerta_derecha3:		DB	1,1,1
      61.  00:A7F7  01 01 01            array_puerta_derecha4:		DB	1,1,1
      62.  00:A7FA  01 01 01            array_puerta_derecha5:		DB	1,1,1
      63.  00:A7FD  02 01 01            array_puerta_derecha6:		DB	2,1,1
      64.  00:A800  04 02 01            array_puerta_derecha7:		DB	4,2,1
      65.  00:A803                      	
      66.  00:A803  01 01 01 01         array_puerta_abajo:			DB	1,1,1,1
      67.  00:A807                      
      68.  00:A807                      array_puerta_izquierda:
      69.  00:A807  03 03 01            array_puerta_izquierda1:	DB	3,3,1
      70.  00:A80A  03 01 01            array_puerta_izquierda2:	DB	3,1,1
      71.  00:A80D  01 01 01            array_puerta_izquierda3:	DB	1,1,1
      72.  00:A810  01 01 01            array_puerta_izquierda4:	DB	1,1,1
      73.  00:A813  01 01 01            array_puerta_izquierda5:	DB	1,1,1
      74.  00:A816  01 01 02            array_puerta_izquierda6:	DB	1,1,2
      75.  00:A819  01 02 04            array_puerta_izquierda7:	DB	1,2,4
      76.  00:A81C                      
      77.  00:A81C                      ;array con posiciones pseudoaleatorias de ayudas y extras (qué valor se escogerá con R 0-127 + and 00001111)
      78.  00:A81C                      ;+256 porque aparecerán todas en el banco1
      79.  00:A81C                      pos_ayudas:					DB	0,4,18,23,45,69,73,82,90,152,171,180,190,192,198,208
      79.  00:A81C  00 04 12 17 2D 45 49 52 5A 98 AB B4 BE C0 C6 D0 
      80.  00:A82C                      pos_ayudas_y:				DB	64,64,64,64,72,80,80,80,80,96,104,104,104,112,112,112
      80.  00:A82C  40 40 40 40 48 50 50 50 50 60 68 68 68 70 70 70 
      81.  00:A83C                      pos_ayudas_x:				DB	0,32,144,184,104,40,72,144,208,192,88,160,240,0,48,128
      81.  00:A83C  00 20 90 B8 68 28 48 90 D0 C0 58 A0 F0 00 30 80 
      82.  00:A84C                      
      83.  00:A84C                      
      84.  00:A84C                      ;array de ayudas
      85.  00:A84C                      ;posición dentro del bank1 (o 0 que son iguales) de los tiles de la ayuda (cómo en los sprites de 2x2)
      86.  00:A84C                      array_ayudas:
      87.  00:A84C  C8 CA               array_oracionon:			DB	200,202
      88.  00:A84E  C9 CB               array_oracionon1:			DB	201,203
      89.  00:A850  CC CE               array_oracionoff:			DB	204,206
      90.  00:A852  CD CF               array_oracionoff1:			DB	205,207
      91.  00:A854  D0 D2               array_cruzon:				DB	208,210
      92.  00:A856  D1 D3               array_cruzon1:				DB	209,211
      93.  00:A858  D4 D6               array_cruzoff:				DB	212,214
      94.  00:A85A  D5 D7               array_cruzoff1:				DB	213,215
      95.  00:A85C  D8 DA               array_aguaon:				DB	216,218
      96.  00:A85E  D9 DB               array_aguaon1:				DB	217,219
      97.  00:A860  DC DE               array_aguaoff:				DB	220,222
      98.  00:A862  DD DF               array_aguaoff1:				DB	221,223
      99.  00:A864  E0 E2               array_armaduraon:			DB	224,226
     100.  00:A866  E1 E3               array_armaduraon1:			DB	225,227
     101.  00:A868  E4 E6               array_armaduraoff:			DB	228,230
     102.  00:A86A  E5 E7               array_armaduraoff1:			DB	229,231
     103.  00:A86C  E8 EA               array_plantaon:				DB	232,234
     104.  00:A86E  E9 EB               array_plantaon1:			DB	233,235
     105.  00:A870  EC EE               array_plantaoff:			DB	236,238
     106.  00:A872  ED EF               array_plantaoff1:			DB	237,239
     107.  00:A874  F0 F2               array_extraon:				DB	240,242
     108.  00:A876  F1 F3               array_extraon1:				DB	241,243
     109.  00:A878  F4 F6               array_extraoff:				DB	244,246
     110.  00:A87A  F5 F7               array_extraoff1:			DB	245,247
     111.  00:A87C  F8 FA               array_ballestaon:			DB	248,250
     112.  00:A87E  F9 FB               array_ballestaon1:			DB	249,251
     113.  00:A880  FC FE               array_ballestaoff:			DB	252,254
     114.  00:A882  FD FF               array_ballestaoff1:			DB	253,255
     115.  00:A884                      
     116.  00:A884  00 (7)              antorchas:			DS		ESTRUCTURA_ANTORCHA
     117.  00:A88B  C5 C6 C7            array_antorcha:				DB	197,198,199	;fuego + madera1 + madera2
     118.  00:A88E                      
     119.  00:A88E  00 (7)              esqueletos:			DS		ESTRUCTURA_ESQUELETO
     120.  00:A895                      array_esqueleto:			DB	194, 0, 195, 160, 164, 161, 0, 163, 0, 193, 162, 192
     120.  00:A895  C2 00 C3 A0 A4 A1 00 A3 00 C1 A2 C0 
     121.  00:A8A1  A4 A5 A4 A6         lista_escenas_calavera:		DB	164, 165, 164, 166
     122.  00:A8A5                      
     123.  00:A8A5                      
     124.  00:A8A5                      lista_ayudas:
     125.  00:A8A5  00 (17)             ayuda_oracion:		DS		ESTRUCTURA_AYUDA		
     126.  00:A8B6  00 (17)             ayuda_cruz:			DS		ESTRUCTURA_AYUDA
     127.  00:A8C7  00 (17)             ayuda_aguabendita:	DS		ESTRUCTURA_AYUDA
     128.  00:A8D8  00 (17)             ayuda_armadura:		DS		ESTRUCTURA_AYUDA
     129.  00:A8E9  00 (17)             ayuda_planta:		DS		ESTRUCTURA_AYUDA
     130.  00:A8FA  00 (17)             ayuda_vidaextra		DS		ESTRUCTURA_AYUDA
     131.  00:A90B  00 (17)             ayuda_ballesta:		DS		ESTRUCTURA_AYUDA
     132.  00:A91C                      
     133.  00:A91C                      
     134.  00:A91C                      ;array de 4 bytes x 32 sprites posibles en pantalla que sobreescribirá la tabla de sprites actualizando VRAM
     135.  00:A91C                      array_sprites:
     136.  00:A91C  00 (8)              array_sprites_pm:				DS	2 * 4
     137.  00:A924  00 (120)            array_sprites_enem:				DS	30 * 4
     138.  00:A99C  00 (140)            lista_enemigos:					DS	10 * ESTRUCTURA_ENEMIGO
     139.  00:AA28                      ; puntero al array a pintar en VRAM
     140.  00:AA28  00 00               puntero_array_atrib_array_VRAM: DW	0	;ARRAYSPTRIES + 8
     141.  00:AA2A                      
     142.  00:AA2A                      
     143.  00:AA2A                      
     144.  00:AA2A                      
     145.  00:AA2A                      
     154   00:AA2A                      	
     155   00:AA2A                      ;;=====================================================
     156   00:AA2A                      ;;DEFINICIÓN DE PANTALLAS
     157   00:AA2A                      ;;=====================================================		
     158   00:AA2A                      	include "pantallas.asm"
       1.  00:AA2A                      ;;=====================================================
       2.  00:AA2A                      ;;DEFINICIÓN DE PANTALLAS
       3.  00:AA2A                      ;;=====================================================		
       4.  00:AA2A                      
       5.  00:AA2A                      ; bancos 1 y 2 y de pantalla 1 
       6.  00:AA2A                      ; se usa un banco común (en este caso el banco 1)
       7.  00:AA2A                      ; el mapa afecta al banco 1 y 2
       8.  00:AA2A  (021D)              tiles_patrones_nivel0:	incbin "pantallas/nivel0.bank1.til.bin.chr.plet5"
       9.  00:AC47  (0069)              tiles_color_nivel0:		incbin "pantallas/nivel0.bank1.til.bin.clr.plet5"
      10.  00:ACB0  (0035)              tiles_mapa_nivel0:		incbin "pantallas/nivel0.bank01.map.bin.plet5"
      11.  00:ACE5                      
      12.  00:ACE5  (01B5)              tiles_patrones_nivel1:	incbin "pantallas/nivel1.bank1.til.bin.chr.plet5"
      13.  00:AE9A  (0047)              tiles_color_nivel1:		incbin "pantallas/nivel1.bank1.til.bin.clr.plet5"
      14.  00:AEE1  (0035)              tiles_mapa_nivel1:		incbin "pantallas/nivel1.bank01.map.bin.plet5"
      15.  00:AF16                      
      16.  00:AF16  (01B5)              tiles_patrones_nivel2:	incbin "pantallas/nivel2.bank1.til.bin.chr.plet5"
      17.  00:B0CB  (0047)              tiles_color_nivel2:		incbin "pantallas/nivel2.bank1.til.bin.clr.plet5"
      18.  00:B112  (0035)              tiles_mapa_nivel2:		incbin "pantallas/nivel2.bank01.map.bin.plet5"
      19.  00:B147                      
      20.  00:B147  (01B5)              tiles_patrones_nivel3:	incbin "pantallas/nivel3.bank1.til.bin.chr.plet5"
      21.  00:B2FC  (0047)              tiles_color_nivel3:		incbin "pantallas/nivel3.bank1.til.bin.clr.plet5"
      22.  00:B343  (0035)              tiles_mapa_nivel3:		incbin "pantallas/nivel3.bank01.map.bin.plet5"
      23.  00:B378                      
      24.  00:B378  (01B5)              tiles_patrones_nivel4:	incbin "pantallas/nivel4.bank1.til.bin.chr.plet5"
      25.  00:B52D  (0047)              tiles_color_nivel4:		incbin "pantallas/nivel4.bank1.til.bin.clr.plet5"
      26.  00:B574  (0035)              tiles_mapa_nivel4:		incbin "pantallas/nivel4.bank01.map.bin.plet5"
      27.  00:B5A9                      
      28.  00:B5A9  (01B5)              tiles_patrones_nivel5:	incbin "pantallas/nivel5.bank1.til.bin.chr.plet5"
      29.  00:B75E  (0047)              tiles_color_nivel5:		incbin "pantallas/nivel5.bank1.til.bin.clr.plet5"
      30.  00:B7A5  (0035)              tiles_mapa_nivel5:		incbin "pantallas/nivel5.bank01.map.bin.plet5"
      31.  00:B7DA                      
      32.  00:B7DA  (01B5)              tiles_patrones_nivel6:	incbin "pantallas/nivel6.bank1.til.bin.chr.plet5"
      33.  00:B98F  (0047)              tiles_color_nivel6:		incbin "pantallas/nivel6.bank1.til.bin.clr.plet5"
      34.  00:B9D6  (0035)              tiles_mapa_nivel6:		incbin "pantallas/nivel6.bank01.map.bin.plet5"
      35.  00:BA0B                      
      36.  00:BA0B                      ; 3º banco que es la parte de puntos, vidas, mapas, etc... es común
      37.  00:BA0B  (014C)              tiles_patrones_marcador:	incbin "pantallas/marcador.til.bin.chr.plet5"
      38.  00:BB57  (0035)              tiles_color_marcador:		incbin "pantallas/marcador.til.bin.clr.plet5"
      39.  00:BB8C  (0062)              tiles_mapa_marcador:		incbin "pantallas/marcador.map.bin.plet5"
      40.  00:BBEE                      
      41.  00:BBEE                      ;NOTA: FALTARÍAN PANTALLAS ESPECIALES (POR DEFINIR)
     159   00:BBEE                      
     160   00:BBEE                      
     161   00:BBEE                      	
     162   00:BBEE                      END:

    LABELS
-------------------------------------------------
00:000000D8 X GTTRIG
00:000000D5 X GTSTCK
00:0000F3DB   CLIKSW
00:0000013E X RDVDP
00:00000047   WRTVDP
00:0000005C   LDIRVM
00:00000059 X LDIRMV
00:0000005F   CHGMOD
00:00000041 X DISSCR
00:00000044 X ENASCR
00:00000062   CHGCLR
00:0000F3E9   FORCLR
00:0000F3EA   BAKCLR
00:0000F3EB   BDRCLR
00:000000C3   CLS
00:0000F3DF X RG0SAV
00:0000F3E0   RG1SAV
00:0000F3E1 X RG2SAV
00:0000F3E2 X RG3SAV
00:0000F3E3 X RG4SAV
00:0000F3E4 X RG5SAV
00:0000F3E5 X RG6SAV
00:0000F3E6 X RG7SAV
00:0000F3E7 X STATFL
00:00000099   REGEST
00:00000098   REGESCVDP
00:000000A0   PSG_A
00:000000A1   PSG_W
00:000000A2   PSG_R
00:00000000   CHRTBL
00:00001800   TILMAP
00:00001900 X TILMAPBANK1
00:00001B00   SPRART
00:00002000   CLRTBL
00:00003800   SPRTBL
00:00000001 X SI
00:00000000 X NO
00:00000004   LIMCADENCIA
00:00000000 X COLTRASP
00:00000001   COLNEGRO
00:00000002 X COLVERDE
00:00000003 X COLVERCLA
00:00000004 X COLAZULOSC
00:00000005 X COLAZULLA
00:00000006   COLROJOOSC
00:00000007 X COLCYAN
00:00000008   COLROJO
00:00000009 X COLROJOCLA
00:0000000A X COLAMAROSC
00:0000000B X COLAMARCLA
00:0000000C X COLVERDOSC
00:0000000D X COLMAGENTA
00:0000000E X COLGRIS
00:0000000F   COLBLANCO
00:000002F8   POSMAPLIN1
00:000002D8   POSMAPLIN2
00:000002B8   POSMAPLIN3
00:00000298   POSMAPLIN4
00:00000278   POSMAPLIN5
00:00000258   POSMAPLIN6
00:00000238   POSMAPLIN7
00:0000000D   POSCARAMAP
00:00000248   POSVIDAS
00:00000011   POSRELIMAP
00:000002C8   POSRELIQ
00:00000288   POSENERG
00:000002B4   POSNIVEL
00:00000238   POSMAPA
00:000001EE   POSPUERABAJ
00:0000008E   POSPUERARRI
00:000000FC   POSPUERDERE
00:000000E1   POSPUERIZQU
00:000000A3   POSORACION
00:000000A7   POSCRUZ
00:000000AB   POSAGUA
00:000000AF   POSARMAD
00:000000B3   POSPLANTA
00:000000B6   POSVIDAEXT
00:000000BB   POSBALLES
00:00000020   POSORACIONX
00:00000040   POSCRUZX
00:00000060   POSAGUAX
00:00000080   POSARMADX
00:000000A0   POSPLANTAX
00:000000C0   POSVIDAEXTX
00:000000E0 X POSBALLESX
00:00000070 X POSAYUDASY
00:00000000   INACTIVA
00:00000001   ACTIVA
00:00000088   POSANTOR1
00:00000097   POSANTOR2
00:000000C4   MAPLLAMA1
00:000000C5   MAPLLAMA2
00:000000FF   RESETLLAMA
00:00000088   POSESQUEL1
00:00000095   POSESQUEL2
00:000000A9   POSCALAVE1
00:000000B6   POSCALAVE2
00:00000019   RESETESQUEL
00:00000004   RESETESCENAESQUEL
00:00000013   TILEPROTAM
00:00000009   TILEGRISM
00:00000010   TILEMAPROJO
00:0000000F   TILEMAPAMAR
00:0000000E   TILEMAPVERD
00:00000008   NMAXVIDREL
00:00000007   NHABNIVEL
00:000000F8 X MAXENERGIA
00:000000D9   TILEENERG8
00:000000BA   TILEENERG7
00:0000009B   TILEENERG6
00:0000007C   TILEENERG5
00:0000005D   TILEENERG4
00:0000003E   TILEENERG3
00:0000001F   TILEENERG2
00:00000000   TILENEGRO
00:00000000 X LIMPANTIZQ
00:000000FF   LIMPANTDER
00:00000000 X LIMPANTARR
00:00000080   LIMPANTABA
00:00000006 X BASEMAPY
00:00000003 X BASEMAPX
00:0000FD9A X H.KEYI
00:0000FD9F   H.TIMI
00:0000F000   PT3_SETUP
00:0000F001   PT3_MODADDR
00:0000F003   PT3_CrPsPtr
00:0000F005   PT3_SAMPTRS
00:0000F007   PT3_OrnPtrs
00:0000F009   PT3_PDSP
00:0000F00B   PT3_CSP
00:0000F00D   PT3_PSP
00:0000F00F   PT3_PrNote
00:0000F010   PT3_PrSlide
00:0000F012   PT3_AdInPtA
00:0000F014   PT3_AdInPtB
00:0000F016   PT3_AdInPtC
00:0000F018   PT3_LPosPtr
00:0000F01A   PT3_PatsPtr
00:0000F01C   PT3_Delay
00:0000F01D   PT3_AddToEn
00:0000F01E   PT3_Env_Del
00:0000F01F   PT3_ESldAdd
00:0000F021   PT3_NTL3
00:0000F023   VARS
00:0000F023   ChanA
00:0000F040   ChanB
00:0000F05D   ChanC
00:0000F07A   DelyCnt
00:0000F07B   CurESld
00:0000F07D   CurEDel
00:0000F07E   Ns_Base_AddToNs
00:0000F07E   Ns_Base
00:0000F07F   AddToNs
00:0000F080   NT_
00:0000F140   AYREGS
00:0000F140   VT_
00:0000F14E   EnvBase
00:0000F150   VAR0END
00:0000F150   T1_
00:0000F150   T_NEW_1
00:0000F150   T_OLD_1
00:0000F168   T_OLD_2
00:0000F180   T_NEW_3
00:0000F180   T_OLD_3
00:0000F182   T_OLD_0
00:0000F182   T_NEW_0
00:0000F19A   T_NEW_2
00:0000F240   ayFX_MODE
00:0000F241   ayFX_BANK
00:0000F243   ayFX_PRIORITY
00:0000F244   ayFX_POINTER
00:0000F246   ayFX_TONE
00:0000F248   ayFX_NOISE
00:0000F249   ayFX_VOLUME
00:0000F24A   ayFX_CHANNEL
00:00008000   START
00:00008035   loop_principal
00:00008045 X fin_programa_principal
00:00008045   inicializa_variables_pruebas
00:00008067 X fin_inicializa_variables_pruebas
00:00008068   inicializa_niveles
00:00008076   inicializa_niveles.bucle_borra_hab
00:0000807A X fin_iniciliza_niveles
00:0000807B   actualiza_marcador_vidas
00:00008080   loop_marcador_caras_negro
00:00008085 X fin_loop_marcador_caras_negro
00:0000808E   loop_marcador_caras
00:00008093 X fin_loop_marcador_caras
00:00008093 X fin_actualiza_marcador_vidas
00:00008094   actualiza_buffer_reliquias
00:0000809A   loop_buffer_reliquias_negro
00:000080A7   loop_buffer_reliquias
00:000080AC X fin_actualiza_buffer_reliquias
00:000080AD   localiza_info_habitacion
00:000080B0 X localiza_info_habitacion.situo_columna
00:000080B9 X localiza_info_habitacion.situo_fila
00:000080C2   localiza_info_habitacion.loop_suma_fila
00:000080CA   localiza_info_habitacion.situo_nivel
00:000080D9   localiza_info_habitacion.loop_suma_nivel
00:000080DE   localiza_info_habitacion.actualiza_valiable_habitacion
00:000080E7 X fin_localiza_info_habitacion
00:000080E8   suma_A_BC
00:000080ED X fin_suma_A_BC
00:000080EE   suma_A_HL
00:000080F3 X fin_suma_A_HL
00:000080F4   color_pantalla
00:00008105 X fin_color_pantalla
00:00008105   sub_preparapantalla
00:00008105 X elimina_clic
00:00008109 X fin_elimina_clic
00:00008109 X limpia_pantalla
00:0000810D X fin_limpia_pantalla
00:00008113 X screen2
00:00008118 X sprites_16_16
00:00008126 X fin_sub_preparapantalla
00:00008126   pinta_pantalla_completa
00:0000812C X fin_pinta_pantalla_completa
00:0000812D   pinta_parte_superior_pantalla
00:0000815E   pinta_parte_superior_pantalla.carga_nivel_0
00:00008179   pinta_parte_superior_pantalla.carga_nivel_1
00:00008194   pinta_parte_superior_pantalla.carga_nivel_2
00:000081AF   pinta_parte_superior_pantalla.carga_nivel_3
00:000081CA   pinta_parte_superior_pantalla.carga_nivel_4
00:000081E5   pinta_parte_superior_pantalla.carga_nivel_5
00:00008200   pinta_parte_superior_pantalla.carga_nivel_6
00:00008218   pinta_parte_superior_pantalla.fin_carga_niveles
00:00008245 X fin_pinta_parte_superior_pantalla
00:00008245   tiles_patrones
00:00008247   tiles_colores
00:00008249   tiles_mapa
00:0000824B   pinta_parte_inferior_pantalla
00:00008266 X fin_pinta_parte_inferior_pantalla
00:00008266   pinta_vidas
00:00008275 X fin_pinta_vidas
00:00008275   pinta_reliquias
00:00008284 X fin_pinta_reliquias
00:00008284   pinta_nivel
00:00008290 X fin_pinta_nivel
00:00008290   pinta_tile_suelto
00:0000829D X fin_pinta_tile_suelto
00:0000829E   mira_pinta_energia
00:000082A4 X pinta_ener
00:000082A4 X pinta_ener_tile_8
00:000082B0   pinta_ener_tile_8_negro
00:000082B1   pinta_ener_tile_7
00:000082BB   pinta_ener_tile_7_negro
00:000082BC   pinta_ener_tile_6
00:000082C6   pinta_ener_tile_6_negro
00:000082C7   pinta_ener_tile_5
00:000082D1   pinta_ener_tile_5_negro
00:000082D2   pinta_ener_tile_4
00:000082DC   pinta_ener_tile_4_negro
00:000082DD   pinta_ener_tile_3
00:000082E7   pinta_ener_tile_3_negro
00:000082E8   pinta_ener_tile_2
00:000082F2   pinta_ener_tile_2_negro
00:000082F3   fin_mira_pinta_energia
00:000082F5   pinta_energia
00:00008304 X fin_pinta_energia
00:00008304   borra_mapa
00:0000835A X fin_borra_mapa
00:0000835B   pinta_puertas
00:00008378 X fin_pinta_puertas
00:00008379   pinta_puerta_aba
00:00008394 X fin_pinta_puerta_aba
00:00008394   pinta_puerta_arr
00:000083AF X fin_pinta_puerta_arr
00:000083AF   pinta_puerta_der
00:000083CA X fin_pinta_puerta_der
00:000083CA   pinta_puerta_izq
00:000083E5 X fin_pinta_puerta_izq
00:000083E5   posiciona_en_mapa
00:000083E8 X posiciona_en_mapa.sumar_fila
00:00008412 X posiciona_en_mapa.fila_0
00:00008419   posiciona_en_mapa.fila_1
00:00008420   posiciona_en_mapa.fila_2
00:00008427   posiciona_en_mapa.fila_3
00:0000842E   posiciona_en_mapa.fila_4
00:00008435   posiciona_en_mapa.fila_5
00:0000843C X posiciona_en_mapa.fila_6
00:0000843C   posiciona_en_mapa.sumar_columna
00:00008452   pinta_pos_mapa_vacio
00:00008454   fin_pinta_pos_mapa
00:00008457 X fin_posiciona_en_mapa
00:00008457   efecto_imagen_tira_reliquia
00:0000845A   efecto_imagen_tira_reliquia.parpadea_fondo
00:00008471 X fin_efecto_imagen_tira_reliquia
00:00008471   pinta_array
00:0000848C   pinta_array.pa_pinta_fila
00:0000848D   pinta_array.pa_pinta_columnas
00:000084B0 X fin_pinta_array
00:000084B1   wordaux1
00:000084B3   wordaux2
00:000084B5   byteaux1
00:000084B6   byteaux2
00:000084B7   inicializa_antorchas
00:000084D8 X fin_inicializa_antorchas
00:000084D9   inicializa_esqueletos
00:000084FA X fin_inicializa_esqueletos
00:000084FB   pinta_extra_fondo
00:000084FF X pinta_extra_fondo.examina_sihay_antorchas
00:0000850E   pinta_extra_fondo.hayantorchas
00:00008537   pinta_extra_fondo.examina_sihay_esqueletos
00:00008548   pinta_extra_fondo.hayesqueletos
00:00008571 X fin_pinta_extra_fondo
00:00008572   actualiza_elementos_fondo
00:00008572 X actualiza_elementos_fondo.examina_antorchas
00:00008580   actualiza_elementos_fondo.examina_esqueletos
00:0000858C X fin_actualiza_elementos_fondo
00:0000858D   flip_llamas_antorchas
00:000085A4 X flip_llamas_antorchas.llama_impar
00:000085C5   flip_llamas_antorchas.llama_par
00:000085E4   fin_flip_llamas_antorchas
00:000085E4   flip_calavera_esqueletos
00:00008611 X fin_flip_calavera_esqueletos
00:00008611   var_aux_calavera
00:00008612   actualiza_escena_calavera
00:0000861E   actualiza_escena_calavera.decrementa_escenas
00:0000861F X actualiza_escena_calavera.fin_consulta_escena
00:0000862D X fin_actualiza_escena_calavera
00:0000862E   carga_patrones_sprites_nivel
00:00008638 X fin_carga_patrones_sprites_nivel
00:00008639   carga_patrones_nivel_comunes
00:00008645 X fin_carga_patrones_nivel_comunes
00:00008645   carga_patrones_sprites_nivel1
00:00008645 X fin_carga_patrones_sprites
00:00008646   render_sprites
00:00008652 X fin_actualiza_array_sprites_vram
00:00008652   vuelca_resultado_puntomira_array
00:00008677 X vuelca_resultado_puntomira_array.codigo_color_1
00:00008680   vuelca_resultado_puntomira_array.codigo_color_2
00:00008689 X fin_vuelca_resultado_puntomira_array
00:00008689   check_player
00:000086A8 X f
00:000086A9   mueve_arriba
00:000086B4   mueve_arriba.no_decrementa_y
00:000086B5 X fin_mueve_arriba
00:000086B6   mueve_derecha
00:000086C3   mueve_derecha.no_incrementa_x
00:000086C4 X fin_mueve_derecha
00:000086C5   mueve_abajo
00:000086D2   mueve_abajo.no_incrementa_y
00:000086D3 X fin_mueve_abajo
00:000086D4   mueve_izquierda
00:000086DF   mueve_izquierda.no_decrementa_x
00:000086E0 X fin_mueve_izquierda
00:000086E1   mira_disparo
00:000086E1 X mira_disparo.mira_boton_pulsado1
00:000086EE X mira_disparo.no_efectua_disparo
00:000086F9   mira_disparo.efectua_disparo
00:0000870B   mira_disparo.fin_mira_disparo1
00:0000870C   mira_disparo.mira_boton_pulsado2
00:00008728 X fin_mira_disparo
00:00008728   update_controllers_status
00:0000875F   read_joy_0
00:00008773   check_8th_keyboard_row
00:00008781   check_4th_keyboard_row
00:0000878F X inicializa_replayer_efectos_interrupciones
00:000087A8 X fin_inicializa_replayer_efectos_interrupciones
00:000087A9   subrutina_isr
00:000087B2 X fin_subrutina_isr
00:000087B2 X subrutinas_sonido
00:00000000   CHNPRM_PsInOr
00:00000001   CHNPRM_PsInSm
00:00000002   CHNPRM_CrAmSl
00:00000003   CHNPRM_CrNsSl
00:00000004   CHNPRM_CrEnSl
00:00000005   CHNPRM_TSlCnt
00:00000006   CHNPRM_CrTnSl
00:00000008   CHNPRM_TnAcc
00:0000000A   CHNPRM_COnOff
00:0000000B   CHNPRM_OnOffD
00:0000000C   CHNPRM_OffOnD
00:0000000D   CHNPRM_OrnPtr
00:0000000F   CHNPRM_SamPtr
00:00000011   CHNPRM_NNtSkp
00:00000012   CHNPRM_Note
00:00000013   CHNPRM_SlToNt
00:00000014   CHNPRM_Env_En
00:00000015   CHNPRM_Flags
00:00000016   CHNPRM_TnSlDl
00:00000017   CHNPRM_TSlStp
00:00000019   CHNPRM_TnDelt
00:0000001B   CHNPRM_NtSkCn
00:0000001C   CHNPRM_Volume
00:0000001D X CHNPRM_Size
00:00000000   AR_TonA
00:00000002   AR_TonB
00:00000004   AR_TonC
00:00000006   AR_Noise
00:00000007   AR_Mixer
00:00000008   AR_AmplA
00:00000009   AR_AmplB
00:0000000A   AR_AmplC
00:0000000B   AR_Env
00:0000000D   AR_EnvTp
00:000087B2   CHECKLP
00:000087C3 X PT3_MUTE
00:000087CF   PT3_INIT
00:0000880E   PT3_INIT.TP_0
00:0000881A   PT3_INIT.TP_1
00:00008821   PT3_INIT.TP_2
00:0000888F   PT3_INIT.L1
00:0000889C   PT3_INIT.L2
00:000088A0 X PT3_INIT.L3
00:000088C7   PT3_INIT.CORR_1
00:000088D5   PT3_INIT.CORR_2
00:000088DC   PT3_INIT.TC_EXIT
00:000088E7   PT3_INIT.INITV1
00:000088EF   PT3_INIT.INITV2
00:00008903   PT3_INIT.INITV3
00:00008907   PD_OrSm
00:00008911   PD_SAM
00:00008912   PD_SAM_
00:00008928   PD_VOL
00:00008931   PD_EOff
00:00008939   PD_SorE
00:00008943   PD_ENV
00:00008948   PD_ORN
00:0000894D   PD_ESAM
00:0000895A   PTDECOD
00:00008969   PD_LOOP
00:0000896C   PD_LP2
00:00008999   PD_NOIS
00:0000899E   PD_REL
00:000089A4   PD_NOTE
00:000089AC   PD_RES
00:000089BE   PD_FIN
00:000089C5   C_PORTM
00:00008A10   C_PORTM.NOSIG
00:00008A1A   SET_STP
00:00008A26   C_GLISS
00:00008A39   C_SMPOS
00:00008A3F   C_ORPOS
00:00008A45   C_VIBRT
00:00008A5D   C_ENGLS
00:00008A6F   C_DELAY
00:00008A75   SETENV
00:00008A90   C_NOP
00:00008A91   SETORN
00:00008AAA   SPCCOMS
00:00008ACA   CHREGS
00:00008AED   CHREGS.CH_ORPS
00:00008AF8   CHREGS.CH_NTP
00:00008AFE   CHREGS.CH_NOK
00:00008B19   CHREGS.CH_SMPS
00:00008B2F   CHREGS.CH_NOAC
00:00008B76   CHREGS.CH_STPP
00:00008B8B   CHREGS.CH_AMP
00:00008B9D   CHREGS.CH_AMIN
00:00008BA2   CHREGS.CH_SVAM
00:00008BA5   CHREGS.CH_NOAM
00:00008BAE   CHREGS.CH_APOS
00:00008BB4   CHREGS.CH_VOL
00:00008BBF X CHREGS.CH_ENV
00:00008BC6   CHREGS.CH_NOEN
00:00008BE0   CHREGS.NO_ENAC
00:00008BE7   CHREGS.NO_ENSL
00:00008BF5   CHREGS.CH_MIX
00:00008BF9   CHREGS.CH_EXIT
00:00008C18   CHREGS.CH_ONDL
00:00008C1C   PT3_PLAY
00:00008C50   PT3_PLAY.PLNLP
00:00008C77   PT3_PLAY.PL1A
00:00008C82   PT3_PLAY.PL1B
00:00008C97   PT3_PLAY.PL1C
00:00008CAC   PT3_PLAY.PL1D
00:00008CB2   PT3_PLAY.PL2
00:00008D14   PT3_ROUT
00:00008D15   ROUT_A0
00:00008D21   ROUT_A0.LOUT
00:00008D35   NT_DATA
00:00008D45   T_
00:00008D45   TCOLD_0
00:00008D51   TCNEW_1
00:00008D51   TCOLD_1
00:00008D53   TCOLD_2
00:00008D65   TCNEW_3
00:00008D66   TCOLD_3
00:00008D6F   TCNEW_0
00:00008D7A   TCNEW_2
00:00008D85   EMPTYSAMORN
00:00008D89   T_PACK
00:00000000 X AYFXRELATIVE
00:00008DBE   ayFX_SETUP
00:00008DCA   ayFX_END
00:00008DD0   ayFX_INIT
00:00008DE1   ayFX_INIT.CHECK_PRI
00:00008E02   ayFX_INIT.INIT_END
00:00008E06   ayFX_PLAY
00:00008E1A   ayFX_PLAY.TAKECB
00:00008E2B   ayFX_PLAY.CHECK_NN
00:00008E38   ayFX_PLAY.SETPOINTER
00:00008E4C   ayFX_PLAY.SETMASKS
00:00008E5A X ayFX_PLAY.CHK1
00:00008E5C X ayFX_PLAY.PLAY_C
00:00008E69   ayFX_PLAY.CHK2
00:00008E6E X ayFX_PLAY.PLAY_B
00:00008E7B   ayFX_PLAY.CHK3
00:00008E7E X ayFX_PLAY.PLAY_A
00:00008E8B   ayFX_PLAY.SETMIXER
00:00008E9B   song
00:00009803   sfx_bank
00:0000984E   inicializa_ayudas
00:0000997B X fin_resetea_ayudas
00:0000997C   pinta_obj_ayuda
00:00009980 X pinta_obj_ayuda.dibujoon
00:0000998C   pinta_obj_ayuda.dibujooff
00:00009995   pinta_obj_ayuda.param_wordaux2
00:000099A1 X pinta_obj_ayuda.filasycols
00:000099AC X fin_pinta_obj_ayuda
00:000099AC   pinta_ayudas_habitacion
00:000099AC X pinta_ayudas_habitacion.examina_oracion
00:000099BD   pinta_ayudas_habitacion.examina_cruz
00:000099CE   pinta_ayudas_habitacion.examina_aguabendita
00:000099DF   pinta_ayudas_habitacion.examina_armadura
00:000099F0   pinta_ayudas_habitacion.examina_planta
00:00009A01   pinta_ayudas_habitacion.examina_vidaextra
00:00009A12   pinta_ayudas_habitacion.examina_ballesta
00:00009A21 X fin_pinta_ayudas_habitacion
00:00009A22   accion_oracion
00:00009A22 X fin_accion_oracion
00:00009A23   accion_cruz
00:00009A23 X fin_accion_cruz
00:00009A24   accion_agua
00:00009A24 X fin_accion_agua
00:00009A25   accion_armadura
00:00009A25 X fin_accion_armadura
00:00009A26   accion_planta
00:00009A26 X fin_accion_planta
00:00009A27   accion_vidaextra
00:00009A27 X fin_accion_vidaextra
00:00009A28   accion_ballesta
00:00009A28 X fin_accion_ballesta
00:00009A29   depack_VRAM
00:00009A56   literal
00:00009A5B   loop
00:00009A64 X getlen
00:00009A6A   lus
00:00009A87   lenok
00:00009A94   mode7
00:00009A9A   mode6
00:00009AA0   mode5
00:00009AA6   mode4
00:00009AAC   mode3
00:00009AB2   mode2
00:00009AC2   offsok
00:00009ACD   offsok.loop
00:00009AEF   getbit
00:00009AF3   getbitexx
00:00009AF9   Depack_out
00:00009AFB   modes
00:00000000 X ESTRUCTURA_PUNTOMIRA.posx
00:00000001 X ESTRUCTURA_PUNTOMIRA.posy
00:00000002 X ESTRUCTURA_PUNTOMIRA.escena
00:00000003 X ESTRUCTURA_PUNTOMIRA.velocidad
00:00000004 X ESTRUCTURA_PUNTOMIRA.boton2_pressed
00:00000005 X ESTRUCTURA_PUNTOMIRA.cadencia
00:00000006 X ESTRUCTURA_PUNTOMIRA.pm_aux1
00:00000007 X ESTRUCTURA_PUNTOMIRA.pm_aux2
00:00000008 X ESTRUCTURA_PUNTOMIRA.pm_aux3
00:00000009 X ESTRUCTURA_PUNTOMIRA.pm_aux4
00:0000000A X ESTRUCTURA_PUNTOMIRA.pm_aux5
00:0000000B X ESTRUCTURA_PUNTOMIRA.pm_aux6
00:0000000C X ESTRUCTURA_PUNTOMIRA.pm_aux7
00:0000000D X ESTRUCTURA_PUNTOMIRA.pm_aux8
00:0000000E X ESTRUCTURA_PUNTOMIRA.pm_aux9
00:0000000F X ESTRUCTURA_PUNTOMIRA.pm_aux10
00:00000010 X ESTRUCTURA_PUNTOMIRA
00:00000000 X ESTRUCTURA_ENEMIGO.tipo
00:00000001 X ESTRUCTURA_ENEMIGO.posx
00:00000002 X ESTRUCTURA_ENEMIGO.posy
00:00000003 X ESTRUCTURA_ENEMIGO.color
00:00000004 X ESTRUCTURA_ENEMIGO.escena
00:00000005 X ESTRUCTURA_ENEMIGO.contador_siguiente_escena
00:00000006 X ESTRUCTURA_ENEMIGO.reset_contador
00:00000007 X ESTRUCTURA_ENEMIGO.dano
00:00000008 X ESTRUCTURA_ENEMIGO.energia
00:00000009 X ESTRUCTURA_ENEMIGO.ver_hor
00:0000000A X ESTRUCTURA_ENEMIGO.manejador_dibujo
00:0000000C X ESTRUCTURA_ENEMIGO.en_aux3
00:0000000D X ESTRUCTURA_ENEMIGO.en_aux4
00:0000000E   ESTRUCTURA_ENEMIGO
00:00000000 X ESTRUCTURA_AYUDA.activo
00:00000001 X ESTRUCTURA_AYUDA.postilemem_nousado
00:00000003 X ESTRUCTURA_AYUDA.postilemem_usado
00:00000005 X ESTRUCTURA_AYUDA.pospantalla
00:00000006 X ESTRUCTURA_AYUDA.posx
00:00000007 X ESTRUCTURA_AYUDA.posy
00:00000008 X ESTRUCTURA_AYUDA.puntero_accion
00:0000000A X ESTRUCTURA_AYUDA.ayu_aux1
00:0000000B X ESTRUCTURA_AYUDA.ayu_aux2
00:0000000C X ESTRUCTURA_AYUDA.ayu_aux3
00:0000000D X ESTRUCTURA_AYUDA.ayu_aux4
00:0000000E X ESTRUCTURA_AYUDA.ayu_aux5
00:0000000F X ESTRUCTURA_AYUDA.ayu_aux6
00:00000010 X ESTRUCTURA_AYUDA.ayu_aux7
00:00000011   ESTRUCTURA_AYUDA
00:00000000 X ESTRUCTURA_ANTORCHA.activo
00:00000001 X ESTRUCTURA_ANTORCHA.postilemem_antor1
00:00000003 X ESTRUCTURA_ANTORCHA.pospantalla_antor1
00:00000004 X ESTRUCTURA_ANTORCHA.pospantalla_antor2
00:00000005 X ESTRUCTURA_ANTORCHA.escena
00:00000006 X ESTRUCTURA_ANTORCHA.cont_sig_escena
00:00000007   ESTRUCTURA_ANTORCHA
00:00000000 X ESTRUCTURA_ESQUELETO.activo
00:00000001 X ESTRUCTURA_ESQUELETO.postilemem_antor1
00:00000003 X ESTRUCTURA_ESQUELETO.pospantalla_esquel1
00:00000004 X ESTRUCTURA_ESQUELETO.pospantalla_esquel2
00:00000005   ESTRUCTURA_ESQUELETO.escena
00:00000006   ESTRUCTURA_ESQUELETO.cont_sig_escena
00:00000007   ESTRUCTURA_ESQUELETO
00:00009B09 X sprites_pantantalla
00:00009B09   sprites_comunes
00:00009B09 X sprite_punto_mira_1
00:00009B29 X sprite_punto_mira_2
00:00009B49 X sprite_punto_mira_1_mejorado
00:00009B69 X sprite_punto_mira_2_mejorado
00:00009B89 X sprite_explosion_1
00:00009BA9 X sprite_explosion_2
00:00009BC9   fin_sprites_comunes
00:00009BC9 X sprite_arana1_1
00:00009BE9 X sprite_arana1_2
00:00009C09 X sprite_murcielago1_1
00:00009C29 X sprite_murcielago1_2
00:00009C49 X sprite_serpiente1_1
00:00009C69 X sprite_serpiente1_2
00:00009C89 X sprite_serpiente2_1
00:00009CA9 X sprite_serpiente2_2
00:00009CC9 X sprite_zombi1_1_1
00:00009CE9 X sprite_zombi1_2_1
00:00009D09 X sprite_zombi1_3_1
00:00009D29 X sprite_zombi1_4_1
00:00009D49 X sprite_zombi1_1_2
00:00009D69 X sprite_zombi1_2_2
00:00009D89 X sprite_zombi1_3_2
00:00009DA9 X sprite_zombi1_4_2
00:00009DC9 X sprite_zombi2_1_1
00:00009DE9 X sprite_zombi2_2_1
00:00009E09 X sprite_zombi2_3_1
00:00009E29 X sprite_zombi2_4_1
00:00009E49 X sprite_zombi2_1_2
00:00009E69 X sprite_zombi2_2_2
00:00009E89 X sprite_zombi2_3_2
00:00009EA9 X sprite_zombi2_4_2
00:00009EC9 X sprite_caballero1_1_1
00:00009EE9 X sprite_caballero1_2_1
00:00009F09 X sprite_caballero1_3_1
00:00009F29 X sprite_caballero1_4_1
00:00009F49 X sprite_caballero1_1_2
00:00009F69 X sprite_caballero1_2_2
00:00009F89 X sprite_caballero1_3_2
00:00009FA9 X sprite_caballero1_4_2
00:00009FC9 X sprite_caballero2_1_1
00:00009FE9 X sprite_caballero2_2_1
00:0000A009 X sprite_caballero2_3_1
00:0000A029 X sprite_caballero2_4_1
00:0000A049 X sprite_caballero2_1_2
00:0000A069 X sprite_caballero2_2_2
00:0000A089 X sprite_caballero2_3_2
00:0000A0A9 X sprite_caballero2_4_2
00:0000A0C9 X sprite_llama1_1
00:0000A0E9 X sprite_llama2_1
00:0000A109 X sprite_llama1_2
00:0000A129 X sprite_llama2_2
00:0000A149 X sprite_fantasma1_1
00:0000A169 X sprite_fantasma2_1
00:0000A189 X sprite_fantasma1_2
00:0000A1A9 X sprite_fantasma2_2
00:0000A1C9 X sprite_magia1_1
00:0000A1E9 X sprite_magia2_1
00:0000A209 X sprite_magia1_2
00:0000A229 X sprite_magia2_2
00:0000A249 X sprite_beholder1_1
00:0000A269 X sprite_beholder2_1
00:0000A289 X sprite_beholder3_1
00:0000A2A9 X sprite_beholder4_1
00:0000A2C9 X sprite_beholder1_2
00:0000A2E9 X sprite_beholder2_2
00:0000A309 X sprite_beholder3_2
00:0000A329 X sprite_beholder4_2
00:0000A349 X sprite_vampiro1_1
00:0000A369 X sprite_vampiro2_1
00:0000A389 X sprite_vampiro1_2
00:0000A3A9 X sprite_vampiro2_2
00:0000A3C9 X sprite_manoizq1
00:0000A3E9 X sprite_manoizq2
00:0000A409 X sprite_manoizq3
00:0000A429 X sprite_manoder1
00:0000A449 X sprite_manoder2
00:0000A469 X sprite_manoder3
00:0000A489   habitacion_actual
00:0000A48A   habitacion_extras
00:0000A48B   habitaciones_juego
00:0000A48B X habitaciones_nivel0
00:0000A4FB X habitaciones_nivel1
00:0000A56B X habitaciones_nivel2
00:0000A5DB X habitaciones_nivel3
00:0000A64B X habitaciones_nivel4
00:0000A6BB X habitaciones_nivel5
00:0000A72B X habitaciones_nivel6
00:0000A79B   color_base
00:0000A79E   color_bomba1
00:0000A7A1   color_bomba2
00:0000A7A4 X prota
00:0000A7A4   prota.posx
00:0000A7A5   prota.posy
00:0000A7A6   prota.escena
00:0000A7A7 X prota.velocidad
00:0000A7A8 X prota.boton2_pressed
00:0000A7A9   prota.cadencia
00:0000A7AA X prota.pm_aux1
00:0000A7AB X prota.pm_aux2
00:0000A7AC X prota.pm_aux3
00:0000A7AD X prota.pm_aux4
00:0000A7AE X prota.pm_aux5
00:0000A7AF X prota.pm_aux6
00:0000A7B0 X prota.pm_aux7
00:0000A7B1 X prota.pm_aux8
00:0000A7B2 X prota.pm_aux9
00:0000A7B3 X prota.pm_aux10
00:0000A7B4   prota_nivel
00:0000A7B5   prota_vidas
00:0000A7B6   prota_reliquias
00:0000A7B7   prota_pos_mapx
00:0000A7B8   prota_pos_mapy
00:0000A7B9   prota_energia
00:0000A7BA   array_aux_vidas
00:0000A7C2   array_aux_reliquias
00:0000A7CA   array_aux_energia
00:0000A7D1   ultimo_pos_array_aux_energia
00:0000A7D2   array_aux_mapa_limpiar
00:0000A7D9   elemento_pintar_mapa
00:0000A7DA   array_puerta_arriba
00:0000A7DA X array_puerta_arriba1
00:0000A7DE X array_puerta_arriba2
00:0000A7E2 X array_puerta_arriba3
00:0000A7E6 X array_puerta_arriba4
00:0000A7EA X array_puerta_arriba5
00:0000A7EE   array_puerta_derecha
00:0000A7EE X array_puerta_derecha1
00:0000A7F1 X array_puerta_derecha2
00:0000A7F4 X array_puerta_derecha3
00:0000A7F7 X array_puerta_derecha4
00:0000A7FA X array_puerta_derecha5
00:0000A7FD X array_puerta_derecha6
00:0000A800 X array_puerta_derecha7
00:0000A803   array_puerta_abajo
00:0000A807   array_puerta_izquierda
00:0000A807 X array_puerta_izquierda1
00:0000A80A X array_puerta_izquierda2
00:0000A80D X array_puerta_izquierda3
00:0000A810 X array_puerta_izquierda4
00:0000A813 X array_puerta_izquierda5
00:0000A816 X array_puerta_izquierda6
00:0000A819 X array_puerta_izquierda7
00:0000A81C X pos_ayudas
00:0000A82C X pos_ayudas_y
00:0000A83C X pos_ayudas_x
00:0000A84C X array_ayudas
00:0000A84C   array_oracionon
00:0000A84E X array_oracionon1
00:0000A850   array_oracionoff
00:0000A852 X array_oracionoff1
00:0000A854   array_cruzon
00:0000A856 X array_cruzon1
00:0000A858   array_cruzoff
00:0000A85A X array_cruzoff1
00:0000A85C   array_aguaon
00:0000A85E X array_aguaon1
00:0000A860   array_aguaoff
00:0000A862 X array_aguaoff1
00:0000A864   array_armaduraon
00:0000A866 X array_armaduraon1
00:0000A868   array_armaduraoff
00:0000A86A X array_armaduraoff1
00:0000A86C   array_plantaon
00:0000A86E X array_plantaon1
00:0000A870   array_plantaoff
00:0000A872 X array_plantaoff1
00:0000A874   array_extraon
00:0000A876 X array_extraon1
00:0000A878   array_extraoff
00:0000A87A X array_extraoff1
00:0000A87C   array_ballestaon
00:0000A87E X array_ballestaon1
00:0000A880   array_ballestaoff
00:0000A882 X array_ballestaoff1
00:0000A884   antorchas
00:0000A88B   array_antorcha
00:0000A88E   esqueletos
00:0000A895   array_esqueleto
00:0000A8A1   lista_escenas_calavera
00:0000A8A5 X lista_ayudas
00:0000A8A5   ayuda_oracion
00:0000A8B6   ayuda_cruz
00:0000A8C7   ayuda_aguabendita
00:0000A8D8   ayuda_armadura
00:0000A8E9   ayuda_planta
00:0000A8FA   ayuda_vidaextra
00:0000A90B   ayuda_ballesta
00:0000A91C   array_sprites
00:0000A91C   array_sprites_pm
00:0000A924 X array_sprites_enem
00:0000A99C X lista_enemigos
00:0000AA28 X puntero_array_atrib_array_VRAM
00:0000AA2A   tiles_patrones_nivel0
00:0000AC47   tiles_color_nivel0
00:0000ACB0   tiles_mapa_nivel0
00:0000ACE5   tiles_patrones_nivel1
00:0000AE9A   tiles_color_nivel1
00:0000AEE1   tiles_mapa_nivel1
00:0000AF16   tiles_patrones_nivel2
00:0000B0CB   tiles_color_nivel2
00:0000B112   tiles_mapa_nivel2
00:0000B147   tiles_patrones_nivel3
00:0000B2FC   tiles_color_nivel3
00:0000B343   tiles_mapa_nivel3
00:0000B378   tiles_patrones_nivel4
00:0000B52D   tiles_color_nivel4
00:0000B574   tiles_mapa_nivel4
00:0000B5A9   tiles_patrones_nivel5
00:0000B75E   tiles_color_nivel5
00:0000B7A5   tiles_mapa_nivel5
00:0000B7DA   tiles_patrones_nivel6
00:0000B98F   tiles_color_nivel6
00:0000B9D6   tiles_mapa_nivel6
00:0000BA0B   tiles_patrones_marcador
00:0000BB57   tiles_color_marcador
00:0000BB8C   tiles_mapa_marcador
00:0000BBEE   END


 Output: t4.out
-------------------------------------------------

 Page: 00
  Org: 00008000  Size: *  Used: 00000000

    No output

 Output: t4.bin
-------------------------------------------------

 Page: 00
  Org: 00008000  Size: *  Used: 00003BF5

   Address   Length Align   Label
   00008000   15349         START
