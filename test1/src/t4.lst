Sjasm Z80 Assembler v0.42c - www.xl2s.tk             [2021.11.27 - 19:21:01]

t4.asm
Errors: 0

       1   00:0000                      	OUTPUT	"t4.bin"
       2   00:8000                      	
       3   00:8000                      ;;=====================================================
       4   00:8000                      ;;DEFINICIÓN DE CONSTANTES
       5   00:8000                      ;;=====================================================	
       6   00:8000                      	include "constantes.asm"
       1.  00:8000                      ;;=====================================================
       2.  00:8000                      ;; FICHERO constantes.asm
       3.  00:8000                      ;;=====================================================
       4.  00:8000                      
       5.  00:8000                      ;;ETIQUETAS/CONSTANTES BIOS TECLADO
       6.  00:8000  (00:00D8)           GTTRIG		equ		#00D8	;Returns current trigger status
       7.  00:8000  (00:00D5)           GTSTCK		equ		#00D5	;Returns the joystick/cursors status
       8.  00:8000  (00:F3DB)           CLIKSW		equ		#F3DB	;deshabilita el sonido de clic cuando se pulsa una tecla
       9.  00:8000                      
      10.  00:8000                      ;;ETIQUETAS/CONSTANTES BIOS VDP
      11.  00:8000  (00:013E)           RDVDP		equ		#013E	;lee registro status VDP
      12.  00:8000  (00:0047)           WRTVDP		equ		#0047	;escribe registros del VDP
      13.  00:8000  (00:005C)           LDIRVM		equ		#005C	;RAM/ROM -> VRAM
      14.  00:8000  (00:0059)           LDIRMV		equ		#0059	;VRAM -> RAM
      15.  00:8000  (00:005F)           CHGMOD		equ		#005F	;cambia modo pantalla (screen mode)
      16.  00:8000  (00:0041)           DISSCR  	equ		#0041	;desactiva pantanlla
      17.  00:8000  (00:0044)           ENASCR  	equ		#0044	;activa pantalla
      18.  00:8000  (00:0062)           CHGCLR  	equ		#0062	;cambia color de pantalla (toca A y direcciones)
      19.  00:8000  (00:F3E9)           FORCLR		equ		#F3E9	;zona memoria color foreground
      20.  00:8000  (00:F3EA)           BAKCLR  	equ		#F3EA	;zona memoria color background
      21.  00:8000  (00:F3EB)           BDRCLR 		equ		#F3EB	;zona memoria bordercolor
      22.  00:8000  (00:00C3)           CLS			equ		#00C3	;limpia pantalla (necesita A=0)
      23.  00:8000                      
      24.  00:8000                      ;;ETIQUETAS/CONSTANTES REGISTROS VDP
      25.  00:8000  (00:F3DF)           RG0SAV		equ		#F3DF	;Mirror of VDP register 0 (Basic: VDP(0))
      26.  00:8000  (00:F3E0)           RG1SAV		equ		#F3E0	;Mirror of VDP register 1 (Basic: VDP(1))
      27.  00:8000  (00:F3E1)           RG2SAV		equ		#F3E1	;Mirror of VDP register 2 (Basic: VDP(2))
      28.  00:8000  (00:F3E2)           RG3SAV		equ		#F3E2	;Mirror of VDP register 3 (Basic: VDP(3))
      29.  00:8000  (00:F3E3)           RG4SAV		equ		#F3E3	;Mirror of VDP register 4 (Basic: VDP(4))
      30.  00:8000  (00:F3E4)           RG5SAV		equ		#F3E4	;Mirror of VDP register 5 (Basic: VDP(5))
      31.  00:8000  (00:F3E5)           RG6SAV		equ		#F3E5	;Mirror of VDP register 6 (Basic: VDP(6))
      32.  00:8000  (00:F3E6)           RG7SAV		equ		#F3E6	;Mirror of VDP register 7 (Basic: VDP(7))
      33.  00:8000  (00:F3E7)           STATFL		equ		#F3E7	;Mirror of VDP(8) status register (S#0)
      34.  00:8000                      
      35.  00:8000  (00:0099)           REGEST		equ		#0099	;registro de estado para escribir directamente en VRAM
      36.  00:8000  (00:0098)           REGESCVDP	equ		#0098	;registro donde escribir valor para VRAM
      37.  00:8000                      
      38.  00:8000                      ;;ETIQUETAS/CONSTANTES REGISTROS PSG (PARA JOYSTICK)
      39.  00:8000  (00:00A0)           PSG_A  equ  0a0h  ;reg address
      40.  00:8000  (00:00A1)           PSG_W  equ  0a1h  ;reg data WR
      41.  00:8000  (00:00A2)           PSG_R  equ  0a2h  ;reg data
      42.  00:8000                      
      43.  00:8000                      
      44.  00:8000                      ;;ETIQUETAS DE ZONAS DE MEMORIA DE LA VPD (MSX1)
      45.  00:8000  (00:0000)           CHRTBL		equ		#0000
      46.  00:8000  (00:1800)           TILMAP		equ		#1800
      47.  00:8000  (00:1B00)           SPRART		equ		#1B00
      48.  00:8000  (00:2000)           CLRTBL		equ		#2000
      49.  00:8000  (00:3800)           SPRTBL		equ		#3800
      50.  00:8000                      
      51.  00:8000                      
      52.  00:8000                      ;;ETIQUETAS ESTANDAR PARA DAR MÁS CLARIDAD AL CODIGO
      53.  00:8000  (00:0001)           SI			equ		1
      54.  00:8000  (00:0000)           NO			equ		0
      55.  00:8000  (00:0004)           LIMCADENCIA equ		4	;nº de veces que se ejecutará el disparo antes de ejecutar un disparo real (porque cuando se pulsa la tecl dispara 3 ó 4 veces de rápido que va)
      56.  00:8000                      ;hay que estudiar si 3 es un nº mejor
      57.  00:8000                      
      58.  00:8000                      
      59.  00:8000                      ;;PALETA DE COLORES DEL MSX
      60.  00:8000  (00:0000)           COLTRASP	equ		0
      61.  00:8000  (00:0001)           COLNEGRO	equ		1
      62.  00:8000  (00:0002)           COLVERDE	equ		2
      63.  00:8000  (00:0003)           COLVERCLA	equ		3
      64.  00:8000  (00:0004)           COLAZULOSC	equ		4
      65.  00:8000  (00:0005)           COLAZULLA	equ		5
      66.  00:8000  (00:0006)           COLROJOOSC	equ		6
      67.  00:8000  (00:0007)           COLCYAN		equ		7
      68.  00:8000  (00:0008)           COLROJO		equ		8
      69.  00:8000  (00:0009)           COLROJOCLA	equ		9
      70.  00:8000  (00:000A)           COLAMAROSC	equ		10
      71.  00:8000  (00:000B)           COLAMARCLA	equ		11
      72.  00:8000  (00:000C)           COLVERDOSC	equ		12
      73.  00:8000  (00:000D)           COLMAGENTA	equ		13
      74.  00:8000  (00:000E)           COLGRIS		equ		14
      75.  00:8000  (00:000F)           COLBLANCO	equ		15
      76.  00:8000                      
      77.  00:8000                      
      78.  00:8000                      ;;ETIQUETAS ESPECIFICAS PARA DAR MÁS CLARIDAD AL CODIGO (relacionadas con posiciones en mapa vdp)
      79.  00:8000  (00:02F8)           POSMAPLIN1  equ		#02F8
      80.  00:8000  (00:02D8)           POSMAPLIN2  equ		#02D8
      81.  00:8000  (00:02B8)           POSMAPLIN3  equ		#02B8
      82.  00:8000  (00:0298)           POSMAPLIN4  equ		#0298
      83.  00:8000  (00:0278)           POSMAPLIN5  equ		#0278
      84.  00:8000  (00:0258)           POSMAPLIN6  equ		#0258
      85.  00:8000  (00:0238)           POSMAPLIN7  equ		#0238
      86.  00:8000                      
      87.  00:8000  (00:000D)           POSCARAMAP	equ		#000D
      88.  00:8000  (00:0248)           POSVIDAS	equ		#0248
      89.  00:8000  (00:0011)           POSRELIMAP	equ		#0011
      90.  00:8000  (00:02C8)           POSRELIQ	equ		#02C8
      91.  00:8000  (00:0288)           POSENERG	equ		#0288
      92.  00:8000  (00:02B4)           POSNIVEL	equ		#02B4
      93.  00:8000  (00:0238)           POSMAPA		equ 	#0238
      94.  00:8000                      
      95.  00:8000  (00:01EE)           POSPUERABAJ equ		#01EE
      96.  00:8000  (00:008E)           POSPUERARRI equ		#008E
      97.  00:8000  (00:00FC)           POSPUERDERE equ		#00FC
      98.  00:8000  (00:00E1)           POSPUERIZQU equ		#00E1
      99.  00:8000  (00:006C)           POSESCALERA equ		#006C	;32 x 3 + columna
     100.  00:8000                      
     101.  00:8000                      ;;POSICIONES DE LAS AYUDAS EN PANTALLA BANCO 1
     102.  00:8000  (00:0146)           POSORACION	equ		#0146	;256 + 70
     103.  00:8000  (00:00A7)           POSCRUZ		equ		167
     104.  00:8000  (00:00AB)           POSAGUA		equ		171
     105.  00:8000  (00:00AF)           POSARMAD	equ		175
     106.  00:8000  (00:00B3)           POSPLANTA	equ		179
     107.  00:8000  (00:00B7)           POSVIDAEXT	equ		183
     108.  00:8000  (00:00BB)           POSBALLESTA	equ		187
     109.  00:8000                      
     110.  00:8000                      ;;POSICIONES DE LAS AYUDAS EN PANTALLA PIXEL CENTRAL
     111.  00:8000  (00:0070)           POSAYUDASY	equ		112	;quitar cuando ya no se use
     112.  00:8000                      
     113.  00:8000  (00:0038)           POSORACIONX	equ		56
     114.  00:8000  (00:0058)           POSORACIONY	equ		88
     115.  00:8000  (00:0040)           POSCRUZX	equ		64
     116.  00:8000  (00:0060)           POSAGUAX	equ		96
     117.  00:8000  (00:0080)           POSARMADX	equ		128
     118.  00:8000  (00:00A0)           POSPLANTAX	equ		160
     119.  00:8000  (00:00C0)           POSVIDAEXTX	equ		192
     120.  00:8000  (00:00E0)           POSBALLESTAX equ	224
     121.  00:8000                      
     122.  00:8000                      ;; TAMAÑO AYUDAS
     123.  00:8000  (00:0002)           ALTOAYUDA	equ		#02
     124.  00:8000  (00:0002)           ANCHOAYUDA	equ		#02
     125.  00:8000                      
     126.  00:8000                      ;; RADIOS DE DISPARO
     127.  00:8000  (00:0008)           RADIOAYUDAX equ		#08
     128.  00:8000  (00:0008)           RADIOAYUDAY equ		#08
     129.  00:8000                      
     130.  00:8000                      ;;POSICIÓN INICIAL DEL SPRITE DEL PUNTO DE MIRA
     131.  00:8000  (00:0078)           POSXPM		equ		120
     132.  00:8000  (00:006C)           POSYPM		equ		108
     133.  00:8000                      
     134.  00:8000                      ;;ESTADO ESTRUCTURA
     135.  00:8000  (00:0000)           INACTIVA	equ		0
     136.  00:8000  (00:0001)           ACTIVA		equ		1
     137.  00:8000  (00:0001)           HABTERMIN	equ		1
     138.  00:8000                      
     139.  00:8000                      ;;POSICIONES DE LAS ANTORCHAS
     140.  00:8000  (00:0088)           POSANTOR1	equ		136
     141.  00:8000  (00:0097)           POSANTOR2	equ		151
     142.  00:8000  (00:00C4)           MAPLLAMA1	equ		196
     143.  00:8000  (00:00C5)           MAPLLAMA2	equ		197
     144.  00:8000  (00:00FF)           RESETLLAMA	equ		255
     145.  00:8000                      
     146.  00:8000                      ;;POSICIONES DE LOS ESQUELETOS
     147.  00:8000  (00:0088)           POSESQUEL1	equ		136
     148.  00:8000  (00:0095)           POSESQUEL2	equ		149
     149.  00:8000  (00:00A9)           POSCALAVE1	equ		169
     150.  00:8000  (00:00B6)           POSCALAVE2	equ		182
     151.  00:8000  (00:0019)           RESETESQUEL	equ		25
     152.  00:8000  (00:0004)           RESETESCENAESQUEL 	equ	4	;hay 4 caras con las que el esqueleto cambia (se ha metido el 0 para facilitar código)
     153.  00:8000                      
     154.  00:8000                      ;;ETIQUETAS ESPECIFICAS PARA DAR MÁS CLARIDAD AL CODIGO (relacionadas con posiciones en en el banco de memoria)
     155.  00:8000  (00:0013)           TILEPROTAM  equ		19		;tile del prota para pintar en mapa
     156.  00:8000  (00:0009)           TILEGRISM	equ		9		;tile gris que representa vacio (por donde el prota va pasando)
     157.  00:8000  (00:0010)           TILEMAPROJO equ		16
     158.  00:8000  (00:000F)           TILEMAPAMAR equ		15
     159.  00:8000  (00:000E)           TILEMAPVERD equ		14
     160.  00:8000                      
     161.  00:8000                      
     162.  00:8000                      ;;ETIQUETAS ESPECIFICAS PARA DAR MÁS CLARIDAD AL CODIGO (generales)
     163.  00:8000  (00:0008)           NMAXVIDREL	equ		8		;el número máximo de vidas y de reliquias es de 8
     164.  00:8000  (00:0007)           NHABNIVEL	equ		7
     165.  00:8000  (00:00F8)           MAXENERGIA  equ		248
     166.  00:8000  (00:00D9)           TILEENERG8  equ		217
     167.  00:8000  (00:00BA)           TILEENERG7  equ		186
     168.  00:8000  (00:009B)           TILEENERG6  equ		155
     169.  00:8000  (00:007C)           TILEENERG5  equ		124
     170.  00:8000  (00:005D)           TILEENERG4  equ		93
     171.  00:8000  (00:003E)           TILEENERG3  equ		62
     172.  00:8000  (00:001F)           TILEENERG2  equ		31
     173.  00:8000  (00:0000)           TILENEGRO	equ		0
     174.  00:8000                      
     175.  00:8000                      ;limites
     176.  00:8000  (00:0000)           LIMPANTIZQ  equ		0
     177.  00:8000  (00:00FF)           LIMPANTDER  equ		255
     178.  00:8000  (00:0000)           LIMPANTARR  equ		0
     179.  00:8000  (00:0080)           LIMPANTABA  equ		128
     180.  00:8000                      
     181.  00:8000                      
     182.  00:8000                      ;matriz de 7x7 empieza en 0, y fila y x col, cuento desde esquina sup izq
     183.  00:8000  (00:0006)           BASEMAPY	equ		6
     184.  00:8000  (00:0003)           BASEMAPX	equ		3
     185.  00:8000                      
     186.  00:8000                      
     187.  00:8000                      
     188.  00:8000                      ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
     189.  00:8000                      ;; CONSTANTES PARA INTERRUPCIONES
     190.  00:8000                      ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
     191.  00:8000  (00:FD9A)           H.KEYI		equ     	#FD9A
     192.  00:8000  (00:FD9F)           H.TIMI	 	equ     	#FD9F
     193.  00:8000                      
     194.  00:8000                      
     195.  00:8000                      ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
     196.  00:8000                      ;; CONSTANTES PARA SONIDO 
     197.  00:8000                      ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
     198.  00:8000                      
     199.  00:8000  (F000)              	map		#f000
     200.  00:8000                      
     201.  00:8000                      ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;PT3 REPLAYER
     202.  00:8000  (00:F000)           PT3_SETUP:		#1	;set bit0 to 1, if you want to play without looping
     203.  00:8000                      					;bit7 is set each time, when loop point is passed
     204.  00:8000  (00:F001)           PT3_MODADDR:	#2
     205.  00:8000  (00:F003)           PT3_CrPsPtr:	#2
     206.  00:8000  (00:F005)           PT3_SAMPTRS:	#2
     207.  00:8000  (00:F007)           PT3_OrnPtrs:	#2
     208.  00:8000  (00:F009)           PT3_PDSP:		#2
     209.  00:8000  (00:F00B)           PT3_CSP:		#2
     210.  00:8000  (00:F00D)           PT3_PSP:		#2
     211.  00:8000  (00:F00F)           PT3_PrNote:		#1
     212.  00:8000  (00:F010)           PT3_PrSlide:	#2
     213.  00:8000  (00:F012)           PT3_AdInPtA:	#2
     214.  00:8000  (00:F014)           PT3_AdInPtB:	#2
     215.  00:8000  (00:F016)           PT3_AdInPtC:	#2
     216.  00:8000  (00:F018)           PT3_LPosPtr:	#2
     217.  00:8000  (00:F01A)           PT3_PatsPtr:	#2
     218.  00:8000  (00:F01C)           PT3_Delay:		#1
     219.  00:8000  (00:F01D)           PT3_AddToEn:	#1
     220.  00:8000  (00:F01E)           PT3_Env_Del:	#1
     221.  00:8000  (00:F01F)           PT3_ESldAdd:	#2
     222.  00:8000  (00:F021)           PT3_NTL3:		#2	; AND A / NOP (note table creator)
     223.  00:8000                      
     224.  00:8000  (00:F023)           VARS:			#0
     225.  00:8000                      
     226.  00:8000  (00:F023)           ChanA:			#29			;CHNPRM_Size
     227.  00:8000  (00:F040)           ChanB:			#29			;CHNPRM_Size
     228.  00:8000  (00:F05D)           ChanC:			#29			;CHNPRM_Size
     229.  00:8000                      
     230.  00:8000                      ;GlobalVars
     231.  00:8000  (00:F07A)           DelyCnt:		#1
     232.  00:8000  (00:F07B)           CurESld:		#2
     233.  00:8000  (00:F07D)           CurEDel:		#1
     234.  00:8000  (00:F07E)           Ns_Base_AddToNs:	#0
     235.  00:8000  (00:F07E)           Ns_Base:		#1
     236.  00:8000  (00:F07F)           AddToNs:		#1
     237.  00:8000                      
     238.  00:8000  (00:F080)           NT_:			#192	; Puntero a/tabla de frecuencias
     239.  00:8000                      
     240.  00:8000  (00:F140)           AYREGS:			#0
     241.  00:8000  (00:F140)           VT_:			#14
     242.  00:8000  (00:F14E)           EnvBase:		#2
     243.  00:8000  (00:F150)           VAR0END:		#0
     244.  00:8000                      
     245.  00:8000  (00:F150)           T1_:			#0		
     246.  00:8000  (00:F150)           T_NEW_1:		#0
     247.  00:8000  (00:F150)           T_OLD_1:		#24
     248.  00:8000  (00:F168)           T_OLD_2:		#24
     249.  00:8000  (00:F180)           T_NEW_3:		#0
     250.  00:8000  (00:F180)           T_OLD_3:		#2
     251.  00:8000  (00:F182)           T_OLD_0:		#0
     252.  00:8000  (00:F182)           T_NEW_0:		#24
     253.  00:8000  (00:F19A)           T_NEW_2:		#166
     254.  00:8000                      ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;PT3 REPLAYER END
     255.  00:8000                      
     256.  00:8000                      ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ayFX REPLAYER 
     257.  00:8000  (00:F240)           ayFX_MODE:		#1			; ayFX mode
     258.  00:8000  (00:F241)           ayFX_BANK:		#2			; Current ayFX Bank
     259.  00:8000  (00:F243)           ayFX_PRIORITY:	#1			; Current ayFX stream priotity
     260.  00:8000  (00:F244)           ayFX_POINTER:	#2			; Pointer to the current ayFX stream
     261.  00:8000  (00:F246)           ayFX_TONE:		#2			; Current tone of the ayFX stream
     262.  00:8000  (00:F248)           ayFX_NOISE:		#1			; Current noise of the ayFX stream
     263.  00:8000  (00:F249)           ayFX_VOLUME:	#1			; Current volume of the ayFX stream
     264.  00:8000  (00:F24A)           ayFX_CHANNEL:	#1			; PSG channel to play the ayFX stream
     265.  00:8000                      
     266.  00:8000                      	;IF (AYFXRELATIVE == 1 ) 
     267.  00:8000                      ;ayFX_VT:	ds	2			; ayFX relative volume table pointer
     268.  00:8000                      	;ENDIF
     269.  00:8000                      ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ayFX REPLAYER END
     270.  00:8000                      
     271.  00:8000                      
     272.  00:8000                      
     273.  00:8000                      
       7   00:8000                      
       8   00:8000                      ;;=====================================================
       9   00:8000                      ;;DEFINICIÓN DE CABECERA DE ARCHIVO BIN
      10   00:8000                      ;;=====================================================		
      11   00:8000                      	include "cabecerabin.asm"
       1.  00:8000                      ;;=====================================================
       2.  00:8000                      ;; FICHERO cabecera.asm
       3.  00:8000                      ;;=====================================================
       4.  00:8000                      
       5.  00:8000                      ;;CABECERA FICHERO BIN
       6.  00:8000  FE                  	DB	#FE
       7.  00:8001  00 80               	DW	START
       8.  00:8003  F8 BD               	DW	END
       9.  00:8005  00 80               	DW	START
      10.  00:8007                      
      11.  00:8007                      ;;INICIO CÓDIGO PROGRAMA	
      12.  00:8007                      	ORG	#8000
      13.  00:8000                      	
      12   00:8000                      	
      13   00:8000                      START:	
      14   00:8000                      	;inicializa pantalla y entonrno
      15   00:8000  CD DA 82            	CALL	sub_preparapantalla			;screen 2,2 sin click al pulsar tecla y color 16,1,1
      16   00:8003                      	
      17   00:8003                      	;inicializa variables para parametrizar funciones y que lo que se muestre sea variable (nº vidas, mapa, puertas, pantalla, etc...)
      18   00:8003  CD B2 80            	CALL	inicializa_variables_pruebas
      19   00:8006                      	
      20   00:8006                      	;inicializa los niveles por partida
      21   00:8006  CD D8 80            	CALL	inicializa_niveles			;no es necesario parametrizarlo según el nivel del usuario ya que se cargan todos
      22   00:8009                      
      23   00:8009                      	;inicializa los valores de cada puerta excepto si están activas o no (eso ocurre cuando se matan todos los enemigos de la hab. y sólo a las puertas que se muestren)
      24   00:8009  CD 72 88            	CALL	inicializa_puertas
      25   00:800C                      	
      26   00:800C                      	;inicializa las estructuras de forma particular según ayuda pero sin poner valores de posición
      27   00:800C  CD DB 9C            	CALL	inicializa_ayudas
      28   00:800F                      	
      29   00:800F                      	;inicializa las estructuras de las antorchas y esqueletos
      30   00:800F  CD 02 86            	CALL	inicializa_antorchas
      31   00:8012  CD 24 86            	CALL	inicializa_esqueletos
      32   00:8015                      	
      33   00:8015                      	;pinta la pantalla (la primera o algunas especiales se pintan completamente)
      34   00:8015  CD FB 82            	CALL	pinta_pantalla_completa
      35   00:8018                      	
      36   00:8018                      	;carga sprites en memoria (SE HA RETRASADO HASTA PARAMETRIZAR LA CARGA DE PANTALLAS)
      37   00:8018  CD 66 8A            	CALL 	carga_patrones_sprites_nivel
      38   00:801B                      	
      39   00:801B                      	;funciones que modificarian el marcador si se produce un evento cuando toque y cuando se pinta la pantalla ya se mira
      40   00:801B                      	;una variable para ver si el array hay que actualizarlo en pantalla o no
      41   00:801B  CD 3B 84            	CALL	pinta_vidas
      42   00:801E  CD 4A 84            	CALL 	pinta_reliquias
      43   00:8021  CD 59 84            	CALL	pinta_nivel
      44   00:8024  CD D9 84            	CALL	borra_mapa
      45   00:8027  CD 0C 89            	CALL	pinta_puertas
      46   00:802A                      
      47   00:802A  3E 13               	LD		 A, TILEPROTAM
      48   00:802C  32 F5 AA            	LD		(elemento_pintar_mapa), A
      49   00:802F  CD 30 85            	CALL	posiciona_en_mapa		;se le pasa elemento_pintar_mapa (tile del prota) está el prota y prota.posx y posy
      50   00:8032                      		
      51   00:8032  CD 18 9D            	CALL	pinta_ayudas_habitacion
      52   00:8035                      	
      53   00:8035  CD 46 86            	CALL	pinta_extra_fondo
      54   00:8038                      	
      55   00:8038                      	;esta función no va aquí sino en check colisiones pero se pone aquí para realizar pruebas
      56   00:8038  CD 6E 82            	CALL	terminada_habitacion_recorrida ;para cuando se maten todos los enemigos de la habitación
      57   00:803B                      
      58   00:803B                      	;incializacion de replayer con interrupciones
      59   00:803B                      ;	CALL	inicializa_replayer_efectos_interrupciones
      60   00:803B                      
      61   00:803B                      loop_principal:
      62   00:803B  76                  	HALT							;espera VBLANK y sincroniza
      63   00:803C                      	
      64   00:803C  CD 77 8A            	CALL	render_sprites			;actualiza array de sprites y los pinta en pantalla
      65   00:803F                      	
      66   00:803F  CD CA 84            	CALL	pinta_energia			;pinta la energia en pantalla
      67   00:8042                      	
      68   00:8042  CD BD 86            	CALL	actualiza_elementos_fondo
      69   00:8045                      
      70   00:8045  CD BA 8A            	CALL	check_player			;MIRA EL CONTROL Y APLICA LA LOGICA DE MOVIMIENTO DEL PROTAGONISTA
      71   00:8048                      	
      72   00:8048  C3 3B 80            	JP		loop_principal
      73   00:804B                      fin_programa_principal:
      74   00:804B                      	;no necesita RET
      75   00:804B                      
      76   00:804B                      
      77   00:804B                      ;;=====================================================
      78   00:804B                      ;;CHECK_COLISIONES_OBJETOS
      79   00:804B                      ;;=====================================================	
      80   00:804B                      ; función: 	revisa (con enemigos+ayudas o puertas según si la habitación ha sido recorrida o no) las variables para ver si se disparó sobre ellas
      81   00:804B                      ; entrada: 	is_habitacion_terminada
      82   00:804B                      ; salida: 	-
      83   00:804B                      ; toca:		HL,BC, DE
      84   00:804B                      check_colisiones_objetos:
      85   00:804B  F5                  	PUSH	AF
      86   00:804C                      	
      87   00:804C                      	;pantalla limpia?
      88   00:804C  3A A6 A7            	LD		 A, (is_habitacion_terminada)
      89   00:804F  F6 00               	OR		 0
      90   00:8051  CA 57 80            	JP		 Z, .habitacion_no_terminada
      91   00:8054                      	;SI 
      92   00:8054                      	;recorre puertas y sale
      93   00:8054  CD B5 89            		CALL	check_colisiones_puertas
      94   00:8057                      	;NO 
      95   00:8057                      .habitacion_no_terminada:
      96   00:8057                      	
      97   00:8057                      	;recorre ayudas
      98   00:8057  3A 82 9C            	LD		 A, (examina_ayudas_en_pantalla)
      99   00:805A  F6 00               	OR		 0
     100   00:805C  CA 62 80            	JP		 Z, .habitacion_sin_ayudas
     101   00:805F                      	;SI
     102   00:805F                      	;mira si hay colisiones con la ayuda que haya puntero_ayuda_actual
     103   00:805F  CD 64 80            		CALL	check_colision_ayudas
     104   00:8062                      	;NO
     105   00:8062                      .habitacion_sin_ayudas:
     106   00:8062                      	
     107   00:8062                      	;recorre enemigos
     108   00:8062                      
     109   00:8062                      fin_check_colisiones_objetos:	
     110   00:8062  F1                  	POP		AF
     111   00:8063  C9                  	RET
     112   00:8064                      
     113   00:8064                      
     114   00:8064                      ;;=====================================================
     115   00:8064                      ;;CHECK_COLISION_AYUDAS
     116   00:8064                      ;;=====================================================	
     117   00:8064                      ; función: 	revisa si ha habido disparo sobre la ayuda de pantalla
     118   00:8064                      ; entrada: 	puntero_ayuda_actual
     119   00:8064                      ; salida: 	-
     120   00:8064                      ; toca:		todo
     121   00:8064                      check_colision_ayudas:
     122   00:8064  DD 2A 83 9C         	LD 		IX, (puntero_ayuda_actual)
     123   00:8068  DD 7E 00            	LD		 A, (IX)
     124   00:806B  B7                  	OR		 A							;está activa la ayuda de pantalla?
     125   00:806C  CA 80 80            	JP		 Z, fin_check_colision_ayudas
     126   00:806F                      	;SI
     127   00:806F  CD 81 80            		CALL	check_colision_ayuda	;aquí ya es cosa de ver colisiones prota/puerta_izquierda
     128   00:8072                      		;recibe valor A
     129   00:8072  F6 00               		OR		 0						;hubo colisión?
     130   00:8074  C8                  		RET		 Z						;no hubo colisión por lo que sale
     131   00:8075                      		;hubo colisión
     132   00:8075                      		;EJECUTA ACCIÓN Y SALE DE LA RUTINA	
     133   00:8075  21 80 80            		LD		HL, fin_check_colision_ayudas ;se guarda dónde volver
     134   00:8078  E5                  		PUSH	HL
     135   00:8079  DD 6E 05            		LD		 L, (IX + ESTRUCTURA_AYUDA.accion)
     136   00:807C  DD 66 06            		LD		 H, (IX + ESTRUCTURA_AYUDA.accion + 1)
     137   00:807F  E9                  		JP		(HL)
     138   00:8080                      	;FINSI
     139   00:8080                      fin_check_colision_ayudas:
     140   00:8080  C9                  	RET
     141   00:8081                      	
     142   00:8081                      	
     143   00:8081                      
     144   00:8081                      
     145   00:8081                      ;;=====================================================
     146   00:8081                      ;;CHECK_COLISION_AYUDA
     147   00:8081                      ;;=====================================================	
     148   00:8081                      ; función: 	revisa la distancia con ayuda para ver si se disparó a la ayuda activa
     149   00:8081                      ; entrada: 	IX con el puntero a la puerta que se examina
     150   00:8081                      ; salida: 	A (0 no hay colisión con puerta / 1 sí la hay)
     151   00:8081                      ; toca:		HL,BC, DE
     152   00:8081                      check_colision_ayuda:
     153   00:8081                      .deteccioncolision_paso1:
     154   00:8081  FD 21 C0 AA         	LD		IY, prota	;IY punto de mira / IX puerta
     155   00:8085  FD 7E 01            	LD		 A, (IY + ESTRUCTURA_AYUDA.posx)
     156   00:8088  C6 08               	ADD		 8			;8-es fijo, offset del punto de mira ya que se mueve según la esquina superior izquierda y el centro del punto de mira está en el centro del sprite
     157   00:808A                      	
     158   00:808A                      	;ya tengo en A la coordenada X del centro del punto de mira					
     159   00:808A  DD 96 01            	SUB		(IX + ESTRUCTURA_AYUDA.posx)	;le resto el punto x en la puerta
     160   00:808D                      	
     161   00:808D  D2 92 80            	JP		NC, .deteccioncolision_paso2	;si no es negativo comparo con el radio
     162   00:8090                      
     163   00:8090  ED 44               	NEG										;si es negativo lo niego (valor absoluto)
     164   00:8092                      	
     165   00:8092                      .deteccioncolision_paso2:
     166   00:8092  DD BE 03            	CP		(IX + ESTRUCTURA_AYUDA.radiox)	;comparo con el radio X de la puerta
     167   00:8095                      	
     168   00:8095  DA 9A 80            	JP		 C, .deteccioncolision_paso3	;SI NC la distancia es >= por lo que sale y no es necesario verificar nada más
     169   00:8098                      	
     170   00:8098  AF                  	XOR		 A								;el resultado es falso y se guarda en A y ya no hay que seguir coprobando
     171   00:8099  C9                  	RET
     172   00:809A                      	
     173   00:809A                      .deteccioncolision_paso3:					;la distancia X es válida, comprobamos la distancia Y
     174   00:809A  FD 7E 02            	LD		 A, (IY + ESTRUCTURA_AYUDA.posy)
     175   00:809D  C6 08               	ADD		 8								;le sumo el offset del punto de mira (8 es fijo)
     176   00:809F                      
     177   00:809F                      	;ya tengo en A la coordenada Y del centro del punto de mira					
     178   00:809F  DD 96 02            	SUB		(IX + ESTRUCTURA_AYUDA.posy)	;le resto el punto y en la puerta
     179   00:80A2                      	
     180   00:80A2  D2 A7 80            	JP		NC, .deteccioncolision_paso4	;si no es negativo comparo con el radio
     181   00:80A5                      
     182   00:80A5  ED 44               	NEG										;si es negativo lo niego (valor absoluto)
     183   00:80A7                      
     184   00:80A7                      .deteccioncolision_paso4:
     185   00:80A7  DD BE 04            	CP		(IX + ESTRUCTURA_AYUDA.radioy)	;comparo con el radio Y de la puerta
     186   00:80AA                      
     187   00:80AA  DA AF 80            	JP		 C, .deteccioncolision_paso5	;SI NC la distancia es >= por lo que sale y no es necesario verificar nada más
     188   00:80AD                      	
     189   00:80AD  AF                  	XOR		 A								;el resultado es falso y se guarda en A un 0 y al ser la 2º comprobación salimos
     190   00:80AE  C9                  	RET
     191   00:80AF                      
     192   00:80AF                      .deteccioncolision_paso5:
     193   00:80AF  3E 01               	LD		 A, SI
     194   00:80B1                      fin_check_colision_ayuda:
     195   00:80B1  C9                  	RET
     196   00:80B2                      
     197   00:80B2                      
     198   00:80B2                      
     199   00:80B2                      
     200   00:80B2                      ;;*******************************************************************
     201   00:80B2                      ; sólo para hacer pruebas y pintar la parte de las vidas y demás
     202   00:80B2                      inicializa_variables_pruebas:
     203   00:80B2  3E 04               	LD		 A, 4
     204   00:80B4  32 D1 AA            	LD		(prota_vidas),A
     205   00:80B7                      
     206   00:80B7  3E 04               	LD		 A, 4
     207   00:80B9  32 D2 AA            	LD		(prota_reliquias), A
     208   00:80BC                      
     209   00:80BC  3E 64               	LD		 A, 100
     210   00:80BE  32 D5 AA            	LD		(prota_energia), A
     211   00:80C1                      
     212   00:80C1                      	;ubico al prota dentro del nivel para obtener luego las habitaciones y enemigos que aparecerán
     213   00:80C1                      	;será igual la posición inicial en todos los niveles
     214   00:80C1                      	
     215   00:80C1  3E 00               	LD		 A, 0				;los niveles (matrices) son 7 del 0 al 6
     216   00:80C3  32 D0 AA            	LD		(prota_nivel), A	;nivel empieza en 0 para usar las posiciones ascii
     217   00:80C6                      
     218   00:80C6  3E 00               	LD		 A, 0				;los subniveles (filas) son 7 del 0 al 6
     219   00:80C8  32 D4 AA            	LD		(prota_pos_mapy), A	;pos Y dentro del nivel (se empieza en 0)
     220   00:80CB                      
     221   00:80CB  3E 03               	LD		 A, 3				;columnas 7: del 0 al 6
     222   00:80CD  32 D3 AA            	LD		(prota_pos_mapx), A	;pos X dentro del nivel (se empieza en 0)
     223   00:80D0                      	
     224   00:80D0  AF                  	XOR		 A					;cadencia por defecto.. cuando se coja mejora en arma se puede variar
     225   00:80D1  32 C5 AA            	LD		(prota.cadencia), A
     226   00:80D4                      	
     227   00:80D4  32 A6 A7            	LD		(is_habitacion_terminada), A
     228   00:80D7                      fin_inicializa_variables_pruebas:
     229   00:80D7  C9                  	RET
     230   00:80D8                      ;;************************************************************************
     231   00:80D8                      
     232   00:80D8                      
     233   00:80D8                      
     234   00:80D8                      
     235   00:80D8                      
     236   00:80D8                      
     237   00:80D8                      
     238   00:80D8                      
     239   00:80D8                      
     240   00:80D8                      ;;=====================================================
     241   00:80D8                      ;;DEFINICIÓN DE SUBRUTINAS
     242   00:80D8                      ;;=====================================================
     243   00:80D8                      	include "subrutinas.asm"
       1.  00:80D8                      ;;=====================================================
       2.  00:80D8                      ;;DEFINICIÓN DE SUBRUTINAS
       3.  00:80D8                      ;;=====================================================	
       4.  00:80D8                      
       5.  00:80D8                      
       6.  00:80D8                      ;;=====================================================
       7.  00:80D8                      ;;INICIALIZA_NIVELES
       8.  00:80D8                      ;;=====================================================	
       9.  00:80D8                      ; función: 	pone el bit 4 de todas las habitaciones (byte habitacion_actual 0,2,4....) a 0
      10.  00:80D8                      ; entrada: 	habitaciones_plantilla
      11.  00:80D8                      ; salida: 	habitaciones_plantilla con los el bit 4 de los bites bytes impares a 0
      12.  00:80D8                      ; toca: 	habitaciones_plantilla, B
      13.  00:80D8                      
      14.  00:80D8                      
      15.  00:80D8                      ;ahora mismo se pondrá que se pueda navegar por cualquier habitación y sólo se controlarán las ayudas
      16.  00:80D8                      ;cuando ya haya enemigos se modificará para que el bit 4 a 0 todos los enemigos muerto y 1 hay enemigos vivos
      17.  00:80D8                      ;ayudas bit 6 1 hay ayudas y 0 no hay ayudas
      18.  00:80D8                      
      19.  00:80D8                      inicializa_niveles:
      20.  00:80D8  F5                  		PUSH		AF
      21.  00:80D9  C5                  		PUSH		BC
      22.  00:80DA  E5                  		PUSH		HL
      23.  00:80DB                      
      24.  00:80DB                      		;inicia habitación para decir si por esa habitación no se ha pasado
      25.  00:80DB                      		;el 4 bit a 0 indica que por esa habitacion no se ha pasado/no se han atado todos los enemigos
      26.  00:80DB                      		;el 6 bit a 1 indica que en esa habitación hay ayudas no utilizadas
      27.  00:80DB                      
      28.  00:80DB                      ;nivel 0 -----------------------------------------------------------------------
      29.  00:80DB  06 38               		LD			 B, 56	;la mitad de bytes del array de un nivel
      30.  00:80DD  21 A7 A7            		LD 			HL, habitaciones_nivel0	;puntero al byte de la habitación
      31.  00:80E0  DD 21 A7 A7         		LD			IX, habitaciones_nivel0
      32.  00:80E4  DD 23               		INC			IX						;el puntero IX apuntará siempre al byte de las ayudas
      33.  00:80E6                      .inicia_nivel_0:
      34.  00:80E6  4E                  		LD		 	 C, (HL)
      35.  00:80E7                      		;pongo habitación no terminada bit 4 habitación a 0
      36.  00:80E7  CB E1               		SET			 4, C	;***********************************************************************   ESTO HAY QUE PONERLO A 0 CUANDO HAYA ENEMIGOS
      37.  00:80E9                      		
      38.  00:80E9                      		;examino si hay ayudas en siguiente byte
      39.  00:80E9  DD 7E 00            		LD			 A, (IX)
      40.  00:80EC  E6 7E               		AND			1111110b
      41.  00:80EE  28 02               		JR			 Z, .no_tiene_ayuda_nivel0
      42.  00:80F0                      .si_tiene_ayuda_nivel0:
      43.  00:80F0  CB F1               		SET			 6, C
      44.  00:80F2                      .no_tiene_ayuda_nivel0:
      45.  00:80F2  CB B1               		RES			 6, C
      46.  00:80F4                      .fin_tiene_ayuda_nivel0:
      47.  00:80F4                      		
      48.  00:80F4  71                  		LD			(HL), C
      49.  00:80F5  23 23               [2]		INC			HL		;pongo puntero en la siguiente habitación (2 saltos)
      50.  00:80F7  DD 23 DD 23         [2]		INC			IX		;pongo puntero en la siguiente habitación (2 saltos)
      51.  00:80FB  10 E9               		DJNZ		.inicia_nivel_0
      52.  00:80FD                      
      53.  00:80FD                      ;nivel 1 -----------------------------------------------------------------------
      54.  00:80FD  06 38               		LD			 B, 56	;la mitad de bytes del array de un nivel
      55.  00:80FF  21 17 A8            		LD 			HL, habitaciones_nivel1	;puntero al byte de la habitación
      56.  00:8102  DD 21 17 A8         		LD			IX, habitaciones_nivel1
      57.  00:8106  DD 23               		INC			IX						;el puntero IX apuntará siempre al byte de las ayudas
      58.  00:8108                      .inicia_nivel_1:
      59.  00:8108  4E                  		LD		 	 C, (HL)
      60.  00:8109                      		;pongo habitación no terminada bit 4 habitación a 0
      61.  00:8109  CB E1               		SET			 4, C	;***********************************************************************   ESTO HAY QUE PONERLO A 0 CUANDO HAYA ENEMIGOS
      62.  00:810B                      		
      63.  00:810B                      		;examino si hay ayudas en siguiente byte
      64.  00:810B  DD 7E 00            		LD			 A, (IX)
      65.  00:810E  E6 7E               		AND			1111110b
      66.  00:8110  28 02               		JR			 Z, .no_tiene_ayuda_nivel1
      67.  00:8112                      .si_tiene_ayuda_nivel1:
      68.  00:8112  CB F1               		SET			 6, C
      69.  00:8114                      .no_tiene_ayuda_nivel1:
      70.  00:8114  CB B1               		RES			 6, C
      71.  00:8116                      .fin_tiene_ayuda_nivel1:
      72.  00:8116                      		
      73.  00:8116  71                  		LD			(HL), C
      74.  00:8117  23 23               [2]		INC			HL		;pongo puntero en la siguiente habitación (2 saltos)
      75.  00:8119  DD 23 DD 23         [2]		INC			IX		;pongo puntero en la siguiente habitación (2 saltos)
      76.  00:811D  10 E9               		DJNZ		.inicia_nivel_1
      77.  00:811F                      
      78.  00:811F                      ;nivel 2 -----------------------------------------------------------------------
      79.  00:811F  06 38               		LD			 B, 56	;la mitad de bytes del array de un nivel
      80.  00:8121  21 87 A8            		LD 			HL, habitaciones_nivel2	;puntero al byte de la habitación
      81.  00:8124  DD 21 87 A8         		LD			IX, habitaciones_nivel2
      82.  00:8128  DD 23               		INC			IX						;el puntero IX apuntará siempre al byte de las ayudas
      83.  00:812A                      .inicia_nivel_2:
      84.  00:812A  4E                  		LD		 	 C, (HL)
      85.  00:812B                      		;pongo habitación no terminada bit 4 habitación a 0
      86.  00:812B  CB E1               		SET			 4, C	;***********************************************************************   ESTO HAY QUE PONERLO A 0 CUANDO HAYA ENEMIGOS
      87.  00:812D                      		
      88.  00:812D                      		;examino si hay ayudas en siguiente byte
      89.  00:812D  DD 7E 00            		LD			 A, (IX)
      90.  00:8130  E6 7E               		AND			1111110b
      91.  00:8132  28 02               		JR			 Z, .no_tiene_ayuda_nivel2
      92.  00:8134                      .si_tiene_ayuda_nivel2:
      93.  00:8134  CB F1               		SET			 6, C
      94.  00:8136                      .no_tiene_ayuda_nivel2:
      95.  00:8136  CB B1               		RES			 6, C
      96.  00:8138                      .fin_tiene_ayuda_nivel2:
      97.  00:8138                      		
      98.  00:8138  71                  		LD			(HL), C
      99.  00:8139  23 23               [2]		INC			HL		;pongo puntero en la siguiente habitación (2 saltos)
     100.  00:813B  DD 23 DD 23         [2]		INC			IX		;pongo puntero en la siguiente habitación (2 saltos)
     101.  00:813F  10 E9               		DJNZ		.inicia_nivel_2
     102.  00:8141                      
     103.  00:8141                      ;nivel 3 -----------------------------------------------------------------------
     104.  00:8141  06 38               		LD			 B, 56	;la mitad de bytes del array de un nivel
     105.  00:8143  21 F7 A8            		LD 			HL, habitaciones_nivel3	;puntero al byte de la habitación
     106.  00:8146  DD 21 F7 A8         		LD			IX, habitaciones_nivel3
     107.  00:814A  DD 23               		INC			IX						;el puntero IX apuntará siempre al byte de las ayudas
     108.  00:814C                      .inicia_nivel_3:
     109.  00:814C  4E                  		LD		 	 C, (HL)
     110.  00:814D                      		;pongo habitación no terminada bit 4 habitación a 0
     111.  00:814D  CB E1               		SET			 4, C	;***********************************************************************   ESTO HAY QUE PONERLO A 0 CUANDO HAYA ENEMIGOS
     112.  00:814F                      		
     113.  00:814F                      		;examino si hay ayudas en siguiente byte
     114.  00:814F  DD 7E 00            		LD			 A, (IX)
     115.  00:8152  E6 7E               		AND			1111110b
     116.  00:8154  28 02               		JR			 Z, .no_tiene_ayuda_nivel3
     117.  00:8156                      .si_tiene_ayuda_nivel3:
     118.  00:8156  CB F1               		SET			 6, C
     119.  00:8158                      .no_tiene_ayuda_nivel3:
     120.  00:8158  CB B1               		RES			 6, C
     121.  00:815A                      .fin_tiene_ayuda_nivel3:
     122.  00:815A                      		
     123.  00:815A  71                  		LD			(HL), C
     124.  00:815B  23 23               [2]		INC			HL		;pongo puntero en la siguiente habitación (2 saltos)
     125.  00:815D  DD 23 DD 23         [2]		INC			IX		;pongo puntero en la siguiente habitación (2 saltos)
     126.  00:8161  10 E9               		DJNZ		.inicia_nivel_3
     127.  00:8163                      
     128.  00:8163                      ;nivel 4 -----------------------------------------------------------------------
     129.  00:8163  06 38               		LD			 B, 56	;la mitad de bytes del array de un nivel
     130.  00:8165  21 67 A9            		LD 			HL, habitaciones_nivel4	;puntero al byte de la habitación
     131.  00:8168  DD 21 67 A9         		LD			IX, habitaciones_nivel4
     132.  00:816C  DD 23               		INC			IX						;el puntero IX apuntará siempre al byte de las ayudas
     133.  00:816E                      .inicia_nivel_4:
     134.  00:816E  4E                  		LD		 	 C, (HL)
     135.  00:816F                      		;pongo habitación no terminada bit 4 habitación a 0
     136.  00:816F  CB E1               		SET			 4, C	;***********************************************************************   ESTO HAY QUE PONERLO A 0 CUANDO HAYA ENEMIGOS
     137.  00:8171                      		
     138.  00:8171                      		;examino si hay ayudas en siguiente byte
     139.  00:8171  DD 7E 00            		LD			 A, (IX)
     140.  00:8174  E6 7E               		AND			1111110b
     141.  00:8176  28 02               		JR			 Z, .no_tiene_ayuda_nivel4
     142.  00:8178                      .si_tiene_ayuda_nivel4:
     143.  00:8178  CB F1               		SET			 6, C
     144.  00:817A                      .no_tiene_ayuda_nivel4:
     145.  00:817A  CB B1               		RES			 6, C
     146.  00:817C                      .fin_tiene_ayuda_nivel4:
     147.  00:817C                      		
     148.  00:817C  71                  		LD			(HL), C
     149.  00:817D  23 23               [2]		INC			HL		;pongo puntero en la siguiente habitación (2 saltos)
     150.  00:817F  DD 23 DD 23         [2]		INC			IX		;pongo puntero en la siguiente habitación (2 saltos)
     151.  00:8183  10 E9               		DJNZ		.inicia_nivel_4
     152.  00:8185                      		
     153.  00:8185                      ;nivel 5 -----------------------------------------------------------------------
     154.  00:8185  06 38               		LD			 B, 56	;la mitad de bytes del array de un nivel
     155.  00:8187  21 D7 A9            		LD 			HL, habitaciones_nivel5	;puntero al byte de la habitación
     156.  00:818A  DD 21 D7 A9         		LD			IX, habitaciones_nivel5
     157.  00:818E  DD 23               		INC			IX						;el puntero IX apuntará siempre al byte de las ayudas
     158.  00:8190                      .inicia_nivel_5:
     159.  00:8190  4E                  		LD		 	 C, (HL)
     160.  00:8191                      		;pongo habitación no terminada bit 4 habitación a 0
     161.  00:8191  CB E1               		SET			 4, C	;***********************************************************************   ESTO HAY QUE PONERLO A 0 CUANDO HAYA ENEMIGOS
     162.  00:8193                      		
     163.  00:8193                      		;examino si hay ayudas en siguiente byte
     164.  00:8193  DD 7E 00            		LD			 A, (IX)
     165.  00:8196  E6 7E               		AND			1111110b
     166.  00:8198  28 02               		JR			 Z, .no_tiene_ayuda_nivel5
     167.  00:819A                      .si_tiene_ayuda_nivel5:
     168.  00:819A  CB F1               		SET			 6, C
     169.  00:819C                      .no_tiene_ayuda_nivel5:
     170.  00:819C  CB B1               		RES			 6, C
     171.  00:819E                      .fin_tiene_ayuda_nivel5:
     172.  00:819E                      		
     173.  00:819E  71                  		LD			(HL), C
     174.  00:819F  23 23               [2]		INC			HL		;pongo puntero en la siguiente habitación (2 saltos)
     175.  00:81A1  DD 23 DD 23         [2]		INC			IX		;pongo puntero en la siguiente habitación (2 saltos)
     176.  00:81A5  10 E9               		DJNZ		.inicia_nivel_5
     177.  00:81A7                      		
     178.  00:81A7                      ;nivel 6 -----------------------------------------------------------------------
     179.  00:81A7  06 38               		LD			 B, 56	;la mitad de bytes del array de un nivel
     180.  00:81A9  21 17 A8            		LD 			HL, habitaciones_nivel1	;puntero al byte de la habitación
     181.  00:81AC  DD 21 17 A8         		LD			IX, habitaciones_nivel1
     182.  00:81B0  DD 23               		INC			IX						;el puntero IX apuntará siempre al byte de las ayudas
     183.  00:81B2                      .inicia_nivel_6:
     184.  00:81B2  4E                  		LD		 	 C, (HL)
     185.  00:81B3                      		;pongo habitación no terminada bit 4 habitación a 0
     186.  00:81B3  CB E1               		SET			 4, C	;***********************************************************************   ESTO HAY QUE PONERLO A 0 CUANDO HAYA ENEMIGOS
     187.  00:81B5                      		
     188.  00:81B5                      		;examino si hay ayudas en siguiente byte
     189.  00:81B5  DD 7E 00            		LD			 A, (IX)
     190.  00:81B8  E6 7E               		AND			1111110b
     191.  00:81BA  28 02               		JR			 Z, .no_tiene_ayuda_nivel6
     192.  00:81BC                      .si_tiene_ayuda_nivel6:
     193.  00:81BC  CB F1               		SET			 6, C
     194.  00:81BE                      .no_tiene_ayuda_nivel6:
     195.  00:81BE  CB B1               		RES			 6, C
     196.  00:81C0                      .fin_tiene_ayuda_nivel6:
     197.  00:81C0                      		
     198.  00:81C0  71                  		LD			(HL), C
     199.  00:81C1  23 23               [2]		INC			HL		;pongo puntero en la siguiente habitación (2 saltos)
     200.  00:81C3  DD 23 DD 23         [2]		INC			IX		;pongo puntero en la siguiente habitación (2 saltos)
     201.  00:81C7  10 E9               		DJNZ		.inicia_nivel_6
     202.  00:81C9                      
     203.  00:81C9  E1                  		POP			HL
     204.  00:81CA  C1                  		POP			BC
     205.  00:81CB  F1                  		POP			AF
     206.  00:81CC                      fin_iniciliza_niveles:
     207.  00:81CC  C9                  		RET
     208.  00:81CD                      
     209.  00:81CD                      
     210.  00:81CD                      ;;=====================================================
     211.  00:81CD                      ;;ACTUALIZA_MARCADOR_VIDAS
     212.  00:81CD                      ;;=====================================================	
     213.  00:81CD                      ; función:  actualiza el buffer de vidas
     214.  00:81CD                      ; entrada: 	prota_vidas
     215.  00:81CD                      ; salida: 	array_aux_vidas
     216.  00:81CD                      ; toca:		A,B,HL
     217.  00:81CD                      actualiza_marcador_vidas:
     218.  00:81CD                      	;para no andar restando pongo todos los huecos a negro y luego en otro bucle las caras
     219.  00:81CD                      	;1-pinto todo en blanco
     220.  00:81CD  21 D6 AA            	LD		HL,array_aux_vidas
     221.  00:81D0  06 08               	LD		 B,NMAXVIDREL
     222.  00:81D2                      loop_marcador_caras_negro:	;asignar espacios en negro
     223.  00:81D2  36 00               	LD		(HL),0			;0 posición mapa tiles para nada (es transparente pero el fondo es negro)
     224.  00:81D4  23                  	INC		HL
     225.  00:81D5  10 FB               	DJNZ	loop_marcador_caras_negro
     226.  00:81D7                      fin_loop_marcador_caras_negro:
     227.  00:81D7                      	;2-pinto las caras según el n de vidas
     228.  00:81D7  3A D1 AA            	LD		 A, (prota_vidas)
     229.  00:81DA  B7                  	OR		 A
     230.  00:81DB  C8                  	RET 	 Z
     231.  00:81DC  47                  	LD		 B, A
     232.  00:81DD  21 D6 AA            	LD		HL, array_aux_vidas
     233.  00:81E0                      loop_marcador_caras: ;asignar caras
     234.  00:81E0  36 0D               	LD		(HL), POSCARAMAP	;13 posición mapa tiles para cara
     235.  00:81E2  23                  	INC		HL
     236.  00:81E3  10 FB               	DJNZ	loop_marcador_caras
     237.  00:81E5                      fin_loop_marcador_caras:
     238.  00:81E5                      fin_actualiza_marcador_vidas:
     239.  00:81E5  C9                  	RET
     240.  00:81E6                      
     241.  00:81E6                      
     242.  00:81E6                      ;;=====================================================
     243.  00:81E6                      ;;ACTUALIZA_BUFFER_RELIQUIAS
     244.  00:81E6                      ;;=====================================================	
     245.  00:81E6                      ; función: 	actualiza buffer de reliquias
     246.  00:81E6                      ; entrada: 	prota_reliquias
     247.  00:81E6                      ; salida: 	array_aux_reliquias
     248.  00:81E6                      ; toca:		A,B,HL
     249.  00:81E6                      actualiza_buffer_reliquias:	
     250.  00:81E6                      	;para no andar restando pongo todos los huecos a negro y luego en otro bucle las reliquias
     251.  00:81E6                      	;1-pinto todo en blanco
     252.  00:81E6  21 DE AA            	LD		HL, array_aux_reliquias
     253.  00:81E9  06 08               	LD		 B, NMAXVIDREL
     254.  00:81EB  AF                  	XOR		 A
     255.  00:81EC                      loop_buffer_reliquias_negro:	;asignar espacios en negro
     256.  00:81EC  77                  	LD		(HL), A			;0 posición mapa tiles para nada (es transparente pero el fondo es negro)
     257.  00:81ED  23                  	INC		HL
     258.  00:81EE  10 FC               	DJNZ	loop_buffer_reliquias_negro
     259.  00:81F0                      
     260.  00:81F0                      	;2-pinto las cruces según el n de reliquias
     261.  00:81F0  21 DE AA            	LD		HL, array_aux_reliquias
     262.  00:81F3  3A D2 AA            	LD		 A, (prota_reliquias)
     263.  00:81F6  B7                  	OR		 A
     264.  00:81F7  C8                  	RET		 Z
     265.  00:81F8  47                  	LD		 B, A
     266.  00:81F9                      loop_buffer_reliquias: ;asignar reliquias
     267.  00:81F9  36 11               	LD		(HL), POSRELIMAP	;17 posición mapa tiles para reliquia
     268.  00:81FB  23                  	INC		HL
     269.  00:81FC  10 FB               	DJNZ	loop_buffer_reliquias
     270.  00:81FE                      fin_actualiza_buffer_reliquias:
     271.  00:81FE  C9                  	RET
     272.  00:81FF                      
     273.  00:81FF                      
     274.  00:81FF                      
     275.  00:81FF                      ;;=====================================================
     276.  00:81FF                      ;;LOCALIZA_INFO_HABITACION
     277.  00:81FF                      ;;=====================================================	
     278.  00:81FF                      ; función: 	busca las puertas que hay que pintar egún la posición del usuario y las pone en habitacion_actual
     279.  00:81FF                      ; entrada: 	prota.pos_mapy, prota.pos_mapx, prota_nivel habitaciones_juego
     280.  00:81FF                      ; salida: 	habitacion_actual
     281.  00:81FF                      ; toca:		todo
     282.  00:81FF                      ;ejemplo: nivel 4, posy 5 y posx 3
     283.  00:81FF                      ;3 + 5 x 8 + 4 x 49
     284.  00:81FF                      localiza_info_habitacion:
     285.  00:81FF                      	;~ PUSH	AF
     286.  00:81FF                      	;~ PUSH	BC
     287.  00:81FF                      	;~ PUSH	DE
     288.  00:81FF  E5                  	PUSH	HL
     289.  00:8200                      
     290.  00:8200                      ;primera posición: me coloco en la columna correcta
     291.  00:8200  21 A7 A7            	LD		HL, habitaciones_juego
     292.  00:8203                      .situo_columna:	
     293.  00:8203  3A D3 AA            	LD		 A, (prota_pos_mapx)
     294.  00:8206  CB 27               	SLA		 A				;multiplico por dos ya que cada habitación va de dos en dos bytes
     295.  00:8208  06 00               	LD		 B, 0
     296.  00:820A  4F                  	LD		 C, A
     297.  00:820B  09                  	ADD 	HL, BC			;sumo a la posición 0 la columnax2 en la que situarme
     298.  00:820C                      	
     299.  00:820C                      .situo_fila:
     300.  00:820C  3A D4 AA            	LD		A, (prota_pos_mapy)
     301.  00:820F  B7                  	OR	 	A
     302.  00:8210  CA 1D 82            	JP		Z, .situo_nivel	;si la fila es 0 no es necesario seguir operando en fila
     303.  00:8213                      	
     304.  00:8213  47                  	LD		B, A
     305.  00:8214  AF                  	XOR		A
     306.  00:8215                      .loop_suma_fila:
     307.  00:8215  C6 10               	ADD		16				;cada fila tiene 16 bytes
     308.  00:8217  10 FC               	DJNZ	.loop_suma_fila
     309.  00:8219                      	
     310.  00:8219  06 00               	LD		 B, 0
     311.  00:821B  4F                  	LD		 C, A
     312.  00:821C                      
     313.  00:821C  09                  	ADD 	HL, BC			;sumo a la columna 16 x filas para situarme en la fila correcta
     314.  00:821D                      
     315.  00:821D                      .situo_nivel:
     316.  00:821D  3A D0 AA            	LD		 A, (prota_nivel)
     317.  00:8220  B7                  	OR	 	 A
     318.  00:8221  CA 31 82            	JP		 Z, .actualiza_variable_habitacion	;si el nivel es 0 al pasar por las anterirores ya estoy situado actualizo la variable y termino
     319.  00:8224                      	
     320.  00:8224  E5                  	PUSH	HL				;guardo el resultado intermedio
     321.  00:8225                      	
     322.  00:8225  47                  	LD		 B, A			;preparo la varible del bucle
     323.  00:8226  11 70 00            	LD		DE, 112			;112 = 16x42 son los bytes de cada matriz-nivel
     324.  00:8229  21 00 00            	LD		HL, 0
     325.  00:822C                      .loop_suma_nivel:
     326.  00:822C  19                  	ADD		HL, DE
     327.  00:822D  10 FD               	DJNZ	.loop_suma_nivel
     328.  00:822F                      	
     329.  00:822F  D1                  	POP		DE				;devuelvo el resultado intermedio en DE que ya no lo necesito
     330.  00:8230                      	
     331.  00:8230  19                  	ADD		HL, DE			;sumo el resultado del nivel al resultado intermedio anterior
     332.  00:8231                      	
     333.  00:8231                      .actualiza_variable_habitacion
     334.  00:8231  7E                  	LD		 A, (HL)
     335.  00:8232  32 A2 A7            	LD		(habitacion_actual), A
     336.  00:8235                      	
     337.  00:8235                      	;actualizo la variable habitacion_actual y su puntero para poder modificar por si se vuelve a pasar por ahí
     338.  00:8235  DD 21 A4 A7         	LD		IX, habitacion_actual_puntero
     339.  00:8239  DD 74 00            	LD		(IX), H
     340.  00:823C  DD 75 01            	LD		(IX + 1), L
     341.  00:823F                      	
     342.  00:823F                      	;actualizo la variable is_habitacion_terminada
     343.  00:823F  3A A2 A7            	LD		 A, (habitacion_actual)
     344.  00:8242  CB 67               	BIT		 4, A					;está terminada la habitación
     345.  00:8244  C2 4E 82            	JP		 NZ, .si_terminada
     346.  00:8247                      .no_terminada:						;pongo un 0 en is_habitacion_terminada
     347.  00:8247  AF                  	XOR		 A
     348.  00:8248  32 A6 A7            	LD		(is_habitacion_terminada), A
     349.  00:824B  C3 53 82            	JP		.fin_esta_terminada
     350.  00:824E                      .si_terminada:						;pongo un 1 en is_habitacion_terminada
     351.  00:824E  3E 01               	LD		 A, 1		
     352.  00:8250  32 A6 A7            	LD		(is_habitacion_terminada), A
     353.  00:8253                      .fin_esta_terminada:
     354.  00:8253                      	
     355.  00:8253                      	;actualizo la variable hay_ayudas
     356.  00:8253  3A A2 A7            	LD		 A, (habitacion_actual)
     357.  00:8256  CB 77               	BIT		 6, A							;pintar ayuda
     358.  00:8258  C2 63 82            	JP		 NZ, .no_mostrar_ayuda_activa	;0 no hay o ya se han cogido ayudas // 1 mostrar ayuda activa
     359.  00:825B                      .si_mostrar_ayuda_activa:							
     360.  00:825B  3E 01               	LD		 A, 1
     361.  00:825D  32 82 9C            	LD		(examina_ayudas_en_pantalla), A	
     362.  00:8260  C3 67 82            	JP		.fin_mostrar_ayuda_activa
     363.  00:8263                      .no_mostrar_ayuda_activa:
     364.  00:8263  AF                  	XOR		 A
     365.  00:8264  32 82 9C            	LD		(examina_ayudas_en_pantalla), A
     366.  00:8267                      .fin_mostrar_ayuda_activa:					;no restauro B en A porque ya no lo necesito
     367.  00:8267                      	
     368.  00:8267                      	;actualizo la variable habitacion_extras
     369.  00:8267  23                  	INC		HL				;el byte de los extras está antes de donde se especifican las puertas
     370.  00:8268  7E                  	LD		 A, (HL)
     371.  00:8269  32 A3 A7            	LD		(habitacion_extras), A
     372.  00:826C                      
     373.  00:826C  E1                  	POP		HL	
     374.  00:826D                      	;~ POP		DE
     375.  00:826D                      	;~ POP		BC
     376.  00:826D                      	;~ POP		AF
     377.  00:826D                      fin_localiza_info_habitacion:
     378.  00:826D  C9                  	RET
     379.  00:826E                      	
     380.  00:826E                      
     381.  00:826E                      ;;=====================================================
     382.  00:826E                      ;;TERMINADA_HABIACION_RECORRIDA
     383.  00:826E                      ;;=====================================================	
     384.  00:826E                      ; función: 	usando la variable prota_pos_mapx pone un 1 a donde apunta habitacion_recorrida (el array... byte 14 de 
     385.  00:826E                      ;			habitaciones recorridas en esa fila) para ver si uestra enemigos o no y permita pasar por puertas
     386.  00:826E                      ; entrada: 	prota_pos_mapx, habitacion_recorrida
     387.  00:826E                      ; salida: 	habitacion_recorrida (byte 14 de la fila de habitaciones) actualizada con OR A (en A la habitacion)
     388.  00:826E                      ; toca:		IX, HL, AF
     389.  00:826E                      terminada_habitacion_recorrida:
     390.  00:826E  21 A4 A7            		LD			HL, habitacion_actual_puntero
     391.  00:8271  7E                  		LD			 A, (HL)
     392.  00:8272  CB E7               		SET			 4, A
     393.  00:8274  77                  		LD			(HL), A
     394.  00:8275                      		
     395.  00:8275  3E 01               		LD			 A, HABTERMIN	;da igual qué bit mientras sea distinto de 0 pero se pone 1
     396.  00:8277  32 A6 A7            		LD			(is_habitacion_terminada), A
     397.  00:827A                      		
     398.  00:827A                      		;este trozo no sirve de nada pero ya e quedo más tranquilo si lo pongo, por ser exacto y completo
     399.  00:827A                      		;no sirve porque se cambiará de habitación y se perderá/actualizará el dato
     400.  00:827A  3A A2 A7            		LD			 A, (habitacion_actual)
     401.  00:827D  CB E7               		SET			 4, A
     402.  00:827F  32 A2 A7            		LD			(habitacion_actual), A
     403.  00:8282                      fin_terminada_habitacion_recorrida:
     404.  00:8282  C9                  		RET
     405.  00:8283                      
     406.  00:8283                      
     407.  00:8283                      
     408.  00:8283                      ;;=====================================================
     409.  00:8283                      ;;ENTRA_HABITACION												*no terminada
     410.  00:8283                      ;;=====================================================	
     411.  00:8283                      ; función: 	actualiza elementos en pantalla cuando hay cambios en habitación
     412.  00:8283                      ;			fondo
     413.  00:8283                      ;			puertas
     414.  00:8283                      ;			ayudas
     415.  00:8283                      ;			imagenes
     416.  00:8283                      ;			mapa inferior
     417.  00:8283                      ;			enemigos
     418.  00:8283                      ; entrada: 	prota_pos_mapy, prota_pos_mapy, prota_nivel
     419.  00:8283                      ; salida: 	
     420.  00:8283                      entra_habitacion:
     421.  00:8283  CD 02 83            		CALL	pinta_parte_superior_pantalla
     422.  00:8286  CD 0C 89            		CALL	pinta_puertas
     423.  00:8289  CD 46 86            		CALL	pinta_extra_fondo
     424.  00:828C  CD 18 9D            		CALL	pinta_ayudas_habitacion
     425.  00:828F                      	
     426.  00:828F  C3 92 82            		JP		pinta_heroe_mapa
     427.  00:8292                      fin_entra_habitacion:
     428.  00:8292                      
     429.  00:8292                      
     430.  00:8292                      ;;=====================================================
     431.  00:8292                      ;;PINTA_HEROE_MAPA
     432.  00:8292                      ;;PINTA_BLANCO_MAPA
     433.  00:8292                      ;;=====================================================	
     434.  00:8292                      ; función: 	pinta el iconito del heroe en el mapa o un espacio en blanco
     435.  00:8292                      ; entrada: 	
     436.  00:8292                      ; salida: 	
     437.  00:8292                      ; toca:		todo
     438.  00:8292                      pinta_heroe_mapa:
     439.  00:8292  3E 13               		LD		 A, TILEPROTAM
     440.  00:8294  32 F5 AA            		LD		(elemento_pintar_mapa), A
     441.  00:8297  C3 30 85            		JP		posiciona_en_mapa		;se le pasa elemento_pintar_mapa (tile del prota) está el prota y prota.posx y posy
     442.  00:829A                      fin_pinta_heroe_mapa:
     443.  00:829A                      pinta_blanco_mapa:
     444.  00:829A  3E 09               		LD		 A, TILEGRISM
     445.  00:829C  32 F5 AA            		LD		(elemento_pintar_mapa), A
     446.  00:829F  C3 30 85            		JP		posiciona_en_mapa		;se le pasa elemento_pintar_mapa (tile del prota) está el prota y prota.posx y posy
     447.  00:82A2                      fin_pinta_blanco_mapa:
     448.  00:82A2                      	
     449.  00:82A2                      	
     450.  00:82A2                      
     451.  00:82A2                      ;;=====================================================
     452.  00:82A2                      ;;CAMBIO_NIVEL
     453.  00:82A2                      ;;=====================================================	
     454.  00:82A2                      ; función: 	pinta el iconito del heroe en el mapa o un espacio en blanco
     455.  00:82A2                      ; entrada: 	
     456.  00:82A2                      ; salida: 	
     457.  00:82A2                      ; toca:		todo	
     458.  00:82A2                      cambio_nivel:
     459.  00:82A2                      	
     460.  00:82A2                      		;MIRAR CUANDO EL NIVEL SEA -1 (SE SALE DEL CASTILLO Y PUEDE QUE SEA POR TERMINAR JUEGO O SALIR ANTES DE TIEMPO)
     461.  00:82A2                      	
     462.  00:82A2                      ;		*****************************************************************************************************************************+
     463.  00:82A2  CD 59 84            		CALL		pinta_nivel
     464.  00:82A5                      	
     465.  00:82A5  CD D9 84            		CALL		borra_mapa	
     466.  00:82A8                      		
     467.  00:82A8                      fin_cabio_nivel:
     468.  00:82A8  C9                  		RET
     469.  00:82A9                      	
     470.  00:82A9                      	
     471.  00:82A9                      
     472.  00:82A9                      	
     473.  00:82A9                      	
     474.  00:82A9                      	
     244   00:82A9                      	
     245   00:82A9                      	include "subr_general.asm"
       1.  00:82A9                      ;;=====================================================
       2.  00:82A9                      ;;DEFINICIÓN DE SUBRUTINAS GENERALES USABLES PARA CUALQUIER PROYECTO
       3.  00:82A9                      ;;=====================================================	
       4.  00:82A9                      
       5.  00:82A9                      ;;=====================================================
       6.  00:82A9                      ;;SUMA_A_BC
       7.  00:82A9                      ;;=====================================================	
       8.  00:82A9                      ; función: 	suma A a BC por si da más de 255
       9.  00:82A9                      ; entrada: 	A, BC
      10.  00:82A9                      ; salida: 	A + BC
      11.  00:82A9                      ; toca:		A, BC
      12.  00:82A9                      suma_A_BC:
      13.  00:82A9  81                  	ADD		 C
      14.  00:82AA  4F                  	LD		 C, A
      15.  00:82AB  88                  	ADC		 B
      16.  00:82AC  91                  	SUB		 C
      17.  00:82AD  47                  	LD		 B, A
      18.  00:82AE                      fin_suma_A_BC:
      19.  00:82AE  C9                  	RET
      20.  00:82AF                      	
      21.  00:82AF                      ;;=====================================================
      22.  00:82AF                      ;;SUMA_A_HL
      23.  00:82AF                      ;;=====================================================	
      24.  00:82AF                      ; función: 	suma A a BC por si da más de 255
      25.  00:82AF                      ; entrada: 	A, HL
      26.  00:82AF                      ; salida: 	A + HL
      27.  00:82AF                      ; toca:		A, HL
      28.  00:82AF                      suma_A_HL:
      29.  00:82AF  85                  	ADD		 L
      30.  00:82B0  6F                  	LD		 L, A
      31.  00:82B1  8C                  	ADC		 H
      32.  00:82B2  95                  	SUB		 L
      33.  00:82B3  67                  	LD		 H, A
      34.  00:82B4                      fin_suma_A_HL:
      35.  00:82B4  C9                  	RET
      36.  00:82B5                      	
      37.  00:82B5                      	
      38.  00:82B5                      ;;=====================================================
      39.  00:82B5                      ;;TEST_OK
      40.  00:82B5                      ;;=====================================================	
      41.  00:82B5                      ; función: para pruebas.. cambia el color de fondo cuando se le llama
      42.  00:82B5                      test_OK:
      43.  00:82B5  F5                  	PUSH	AF
      44.  00:82B6                      	
      45.  00:82B6  3E 0F               	LD		 A, 15
      46.  00:82B8                      	
      47.  00:82B8  32 E9 F3            	LD 		(FORCLR), A
      48.  00:82BB  23                  	INC		HL
      49.  00:82BC                      	
      50.  00:82BC  32 EA F3            	LD 		(BAKCLR), A
      51.  00:82BF  23                  	INC		HL
      52.  00:82C0                      	
      53.  00:82C0  7E                  	LD		 A, (HL)
      54.  00:82C1  32 EB F3            	LD 		(BDRCLR), A
      55.  00:82C4                      	
      56.  00:82C4  CD 62 00            	CALL	CHGCLR 
      57.  00:82C7                      	
      58.  00:82C7  F1                  	POP		AF
      59.  00:82C8                      fin_test_OK:
      60.  00:82C8  C9                  	RET
     246   00:82C9                      	
     247   00:82C9                      	include "subr_pintapantalla.asm"
       1.  00:82C9                      ;;=====================================================
       2.  00:82C9                      ;;DEFINICIÓN DE SUBRUTINAS
       3.  00:82C9                      ;;=====================================================	
       4.  00:82C9                      ;relacionadas con pintado en pantalla (y no sprites)
       5.  00:82C9                      
       6.  00:82C9                      
       7.  00:82C9                      ;;=====================================================
       8.  00:82C9                      ;;COLOR_PANTALLA
       9.  00:82C9                      ;;=====================================================	
      10.  00:82C9                      ; función: 	el equivalente en basic a color 15,1,1
      11.  00:82C9                      ; entrada: 	HL	que apunta a un array de bytes con 3 bytes FORCLR, BAKCLR y BDRCLR
      12.  00:82C9                      ; salida: 	-
      13.  00:82C9                      ; toca: 	todo
      14.  00:82C9                      color_pantalla:
      15.  00:82C9  7E                  	LD		 A, (HL)			;FORCLR 
      16.  00:82CA  32 E9 F3            	LD 		(FORCLR),A
      17.  00:82CD  23                  	INC		HL
      18.  00:82CE                      	
      19.  00:82CE  7E                  	LD		 A, (HL)			;BAKCLR
      20.  00:82CF  32 EA F3            	LD 		(BAKCLR),A
      21.  00:82D2  23                  	INC		HL
      22.  00:82D3                      	
      23.  00:82D3  7E                  	LD		 A, (HL)
      24.  00:82D4  32 EB F3            	LD 		(BDRCLR),A			;BDRCLR
      25.  00:82D7  C3 62 00            	JP		CHGCLR 
      26.  00:82DA                      fin_color_pantalla:
      27.  00:82DA                      
      28.  00:82DA                      
      29.  00:82DA                      ;;=====================================================
      30.  00:82DA                      ;;PREPARAPANTALLA
      31.  00:82DA                      ;;=====================================================	
      32.  00:82DA                      ; función: elimina clic cuando se pulsa tecla, cls, screen 2,2
      33.  00:82DA                      ; entrada: -
      34.  00:82DA                      ; salida: -
      35.  00:82DA                      ; toca: si no son todos los regristros, casi todos
      36.  00:82DA                      sub_preparapantalla:
      37.  00:82DA                      	;toca A y Z
      38.  00:82DA                      elimina_clic;
      39.  00:82DA  AF                  	XOR		 A
      40.  00:82DB  32 DB F3            	LD		(CLIKSW),A
      41.  00:82DE                      fin_elimina_clic:
      42.  00:82DE                      
      43.  00:82DE                      	;toca A
      44.  00:82DE                      limpia_pantalla:
      45.  00:82DE  AF                  	XOR		 A
      46.  00:82DF  CD C3 00            	CALL 	CLS
      47.  00:82E2                      fin_limpia_pantalla:
      48.  00:82E2                      
      49.  00:82E2                      	;toca A y direcciones #F3E9/#F3EA/#F3EB, poner en HL array con 3 valores
      50.  00:82E2  21 B7 AA            	LD		HL, color_base
      51.  00:82E5  CD C9 82            	CALL	color_pantalla
      52.  00:82E8                      	
      53.  00:82E8                      	;cambiamos a SCREEN 2,2 del BASIC
      54.  00:82E8                      	;toca A
      55.  00:82E8                      screen2:
      56.  00:82E8  3E 02               	LD		 A, 2
      57.  00:82EA  CD 5F 00            	CALL	CHGMOD			;selecciona screen 2
      58.  00:82ED                      sprites_16_16:
      59.  00:82ED  3A E0 F3            	LD		 A, (RG1SAV)
      60.  00:82F0  F6 02               	OR		00000010b		;fuerza sprites de 16x16
      61.  00:82F2  32 E0 F3            	LD		(RG1SAV), A		;no lo guardamos en la copia de variables del sistema
      62.  00:82F5  47                  	LD		 B, A
      63.  00:82F6  0E 01               	LD		 C, 1
      64.  00:82F8  C3 47 00            	JP		WRTVDP			;opción alternativa de escribir las tres lineas siguientes
      65.  00:82FB                      fin_sub_preparapantalla:
      66.  00:82FB                      	
      67.  00:82FB                      
      68.  00:82FB                      ;;=====================================================
      69.  00:82FB                      ;;PINTA_PANTALLA_COMPLETA
      70.  00:82FB                      ;;=====================================================	
      71.  00:82FB                      ; función: pinta el escenario, las 3 partes
      72.  00:82FB                      ; entrada: -
      73.  00:82FB                      ; salida: -
      74.  00:82FB                      ; toca: si no son todos los regristros, casi todos
      75.  00:82FB                      pinta_pantalla_completa:
      76.  00:82FB  CD 02 83            	CALL 	pinta_parte_superior_pantalla
      77.  00:82FE                      	
      78.  00:82FE  CD 20 84            	CALL 	pinta_parte_inferior_pantalla	
      79.  00:8301                      fin_pinta_pantalla_completa:
      80.  00:8301  C9                  	RET
      81.  00:8302                      
      82.  00:8302                      
      83.  00:8302                      ;;=====================================================
      84.  00:8302                      ;;PINTA_PARTE_SUPERIOR_PANTALLA
      85.  00:8302                      ;;=====================================================	
      86.  00:8302                      ; función: pinta el escenario, los dos bancos superiores
      87.  00:8302                      ; entrada: -
      88.  00:8302                      ; salida: -
      89.  00:8302                      ; toca: si no son todos los regristros, casi todos
      90.  00:8302                      pinta_parte_superior_pantalla:
      91.  00:8302  3A D0 AA            	LD		 A, (prota_nivel)
      92.  00:8305  CA 33 83            	JP		 Z, .carga_nivel_0
      93.  00:8308  3D                  	DEC		 A
      94.  00:8309  3A D0 AA            	LD		 A, (prota_nivel)
      95.  00:830C  CA 4E 83            	JP		 Z, .carga_nivel_1
      96.  00:830F  3D                  	DEC		 A
      97.  00:8310  3A D0 AA            	LD		 A, (prota_nivel)
      98.  00:8313  CA 69 83            	JP		 Z, .carga_nivel_2
      99.  00:8316  3D                  	DEC		 A
     100.  00:8317  3A D0 AA            	LD		 A, (prota_nivel)
     101.  00:831A  CA 84 83            	JP		 Z, .carga_nivel_3
     102.  00:831D  3D                  	DEC		 A
     103.  00:831E  3A D0 AA            	LD		 A, (prota_nivel)
     104.  00:8321  CA 9F 83            	JP		 Z, .carga_nivel_4
     105.  00:8324  3D                  	DEC		 A
     106.  00:8325  3A D0 AA            	LD		 A, (prota_nivel)
     107.  00:8328  CA BA 83            	JP		 Z, .carga_nivel_5
     108.  00:832B  3D                  	DEC		 A
     109.  00:832C  3A D0 AA            	LD		 A, (prota_nivel)
     110.  00:832F  CA D5 83            	JP		 Z, .carga_nivel_6
     111.  00:8332  3D                  	DEC		 A
     112.  00:8333                      	
     113.  00:8333                      .carga_nivel_0:
     114.  00:8333  21 25 AC            	LD		HL, tiles_patrones_nivel0
     115.  00:8336  22 1A 84            	LD		(tiles_patrones), HL
     116.  00:8339  21 4F AE            	LD		HL, tiles_color_nivel0
     117.  00:833C  22 1C 84            	LD		(tiles_colores), HL
     118.  00:833F  21 25 AC            	LD		HL, tiles_patrones_nivel0
     119.  00:8342  22 1A 84            	LD		(tiles_patrones), HL
     120.  00:8345  21 BA AE            	LD		HL, tiles_mapa_nivel0
     121.  00:8348  22 1E 84            	LD		(tiles_mapa), HL
     122.  00:834B  C3 ED 83            	JP		.fin_carga_niveles
     123.  00:834E                      
     124.  00:834E                      .carga_nivel_1:
     125.  00:834E  21 EF AE            	LD		HL, tiles_patrones_nivel1
     126.  00:8351  22 1A 84            	LD		(tiles_patrones), HL
     127.  00:8354  21 A4 B0            	LD		HL, tiles_color_nivel1
     128.  00:8357  22 1C 84            	LD		(tiles_colores), HL
     129.  00:835A  21 EF AE            	LD		HL, tiles_patrones_nivel1
     130.  00:835D  22 1A 84            	LD		(tiles_patrones), HL
     131.  00:8360  21 EB B0            	LD		HL, tiles_mapa_nivel1
     132.  00:8363  22 1E 84            	LD		(tiles_mapa), HL
     133.  00:8366  C3 ED 83            	JP		.fin_carga_niveles
     134.  00:8369                      	
     135.  00:8369                      .carga_nivel_2:
     136.  00:8369  21 20 B1            	LD		HL, tiles_patrones_nivel2
     137.  00:836C  22 1A 84            	LD		(tiles_patrones), HL
     138.  00:836F  21 D5 B2            	LD		HL, tiles_color_nivel2
     139.  00:8372  22 1C 84            	LD		(tiles_colores), HL
     140.  00:8375  21 20 B1            	LD		HL, tiles_patrones_nivel2
     141.  00:8378  22 1A 84            	LD		(tiles_patrones), HL
     142.  00:837B  21 1C B3            	LD		HL, tiles_mapa_nivel2
     143.  00:837E  22 1E 84            	LD		(tiles_mapa), HL
     144.  00:8381  C3 ED 83            	JP		.fin_carga_niveles
     145.  00:8384                      	
     146.  00:8384                      .carga_nivel_3:
     147.  00:8384  21 51 B3            	LD		HL, tiles_patrones_nivel3
     148.  00:8387  22 1A 84            	LD		(tiles_patrones), HL
     149.  00:838A  21 06 B5            	LD		HL, tiles_color_nivel3
     150.  00:838D  22 1C 84            	LD		(tiles_colores), HL
     151.  00:8390  21 51 B3            	LD		HL, tiles_patrones_nivel3
     152.  00:8393  22 1A 84            	LD		(tiles_patrones), HL
     153.  00:8396  21 4D B5            	LD		HL, tiles_mapa_nivel3
     154.  00:8399  22 1E 84            	LD		(tiles_mapa), HL
     155.  00:839C  C3 ED 83            	JP		.fin_carga_niveles
     156.  00:839F                      	
     157.  00:839F                      .carga_nivel_4:
     158.  00:839F  21 82 B5            	LD		HL, tiles_patrones_nivel4
     159.  00:83A2  22 1A 84            	LD		(tiles_patrones), HL
     160.  00:83A5  21 37 B7            	LD		HL, tiles_color_nivel4
     161.  00:83A8  22 1C 84            	LD		(tiles_colores), HL
     162.  00:83AB  21 82 B5            	LD		HL, tiles_patrones_nivel4
     163.  00:83AE  22 1A 84            	LD		(tiles_patrones), HL
     164.  00:83B1  21 7E B7            	LD		HL, tiles_mapa_nivel4
     165.  00:83B4  22 1E 84            	LD		(tiles_mapa), HL
     166.  00:83B7  C3 ED 83            	JP		.fin_carga_niveles
     167.  00:83BA                      	
     168.  00:83BA                      .carga_nivel_5:
     169.  00:83BA  21 B3 B7            	LD		HL, tiles_patrones_nivel5
     170.  00:83BD  22 1A 84            	LD		(tiles_patrones), HL
     171.  00:83C0  21 68 B9            	LD		HL, tiles_color_nivel5
     172.  00:83C3  22 1C 84            	LD		(tiles_colores), HL
     173.  00:83C6  21 B3 B7            	LD		HL, tiles_patrones_nivel5
     174.  00:83C9  22 1A 84            	LD		(tiles_patrones), HL
     175.  00:83CC  21 AF B9            	LD		HL, tiles_mapa_nivel5
     176.  00:83CF  22 1E 84            	LD		(tiles_mapa), HL
     177.  00:83D2  C3 ED 83            	JP		.fin_carga_niveles
     178.  00:83D5                      	
     179.  00:83D5                      .carga_nivel_6:
     180.  00:83D5  21 E4 B9            	LD		HL, tiles_patrones_nivel6
     181.  00:83D8  22 1A 84            	LD		(tiles_patrones), HL
     182.  00:83DB  21 99 BB            	LD		HL, tiles_color_nivel6
     183.  00:83DE  22 1C 84            	LD		(tiles_colores), HL
     184.  00:83E1  21 E4 B9            	LD		HL, tiles_patrones_nivel6
     185.  00:83E4  22 1A 84            	LD		(tiles_patrones), HL
     186.  00:83E7  21 E0 BB            	LD		HL, tiles_mapa_nivel6
     187.  00:83EA  22 1E 84            	LD		(tiles_mapa), HL
     188.  00:83ED                      ;	JP		.fin_carga niveles			;no necesario
     189.  00:83ED                      .fin_carga_niveles:
     190.  00:83ED                      
     191.  00:83ED                      	;cargando banco 1
     192.  00:83ED                      	;cargamos los patrones
     193.  00:83ED  2A 1A 84            	LD		HL, (tiles_patrones)
     194.  00:83F0  11 00 00            	LD		DE, CHRTBL
     195.  00:83F3  CD 42 9D            	CALL	depack_VRAM
     196.  00:83F6                      	;cargamos los colores de los patrones
     197.  00:83F6  2A 1C 84            	LD		HL, (tiles_colores)
     198.  00:83F9  11 00 20            	LD		DE, CLRTBL
     199.  00:83FC  CD 42 9D            	CALL	depack_VRAM
     200.  00:83FF                      	
     201.  00:83FF                      	;cargando banco 2
     202.  00:83FF                      	;cargamos los patrones
     203.  00:83FF  2A 1A 84            	LD		HL, (tiles_patrones)
     204.  00:8402  11 00 08            	LD		DE, CHRTBL + #0800
     205.  00:8405  CD 42 9D            	CALL	depack_VRAM	
     206.  00:8408                      	;cargamos los colores de los patrones
     207.  00:8408  2A 1C 84            	LD		HL, (tiles_colores)
     208.  00:840B  11 00 28            	LD		DE, CLRTBL + #0800
     209.  00:840E  CD 42 9D            	CALL	depack_VRAM
     210.  00:8411                      	
     211.  00:8411                      	;cargamos mapa de pantalla banco 1 y 2
     212.  00:8411  2A 1E 84            	LD		HL, (tiles_mapa)
     213.  00:8414  11 00 18            	LD		DE, TILMAP
     214.  00:8417  C3 42 9D            	JP		depack_VRAM
     215.  00:841A                      fin_pinta_parte_superior_pantalla:
     216.  00:841A  00 00               tiles_patrones:		DW	0
     217.  00:841C  00 00               tiles_colores:		DW	0
     218.  00:841E  00 00               tiles_mapa:			DW	0
     219.  00:8420                      
     220.  00:8420                      
     221.  00:8420                      ;;=====================================================
     222.  00:8420                      ;;PINTA_PARTE_INFERIOR_PANTALLA
     223.  00:8420                      ;;=====================================================	
     224.  00:8420                      ; función: pinta la parte inferior del escenario que es común
     225.  00:8420                      ; entrada: -
     226.  00:8420                      ; salida: -
     227.  00:8420                      ; toca: si no son todos los regristros, casi todos
     228.  00:8420                      pinta_parte_inferior_pantalla:
     229.  00:8420                      	;cangando banco 3
     230.  00:8420                      	;cargamos los patrones
     231.  00:8420  21 15 BC            	LD		HL,tiles_patrones_marcador
     232.  00:8423  11 00 10            	LD		DE,CHRTBL + #1000
     233.  00:8426  CD 42 9D            	CALL	depack_VRAM	
     234.  00:8429                      	;cargamos mapa de pantalla
     235.  00:8429  21 96 BD            	LD		HL,tiles_mapa_marcador
     236.  00:842C  11 00 1A            	LD		DE,TILMAP + #0200
     237.  00:842F  CD 42 9D            	CALL	depack_VRAM
     238.  00:8432                      	;cargamos los colores de los patrones
     239.  00:8432  21 61 BD            	LD		HL,tiles_color_marcador
     240.  00:8435  11 00 30            	LD		DE,CLRTBL + #1000
     241.  00:8438  C3 42 9D            	JP		depack_VRAM
     242.  00:843B                      fin_pinta_parte_inferior_pantalla:
     243.  00:843B                      
     244.  00:843B                      
     245.  00:843B                      
     246.  00:843B                      ;;=====================================================
     247.  00:843B                      ;;PINTA_VIDAS
     248.  00:843B                      ;;=====================================================	
     249.  00:843B                      ; función: 	actualiza el mapa de tiles para que en el próximo refresco se pinten y actualiza_vidas
     250.  00:843B                      ; entrada: 	array_aux_vidas
     251.  00:843B                      ; salida: 	actualiza_vidas_sn
     252.  00:843B                      ; toca:		todo
     253.  00:843B                      pinta_vidas:
     254.  00:843B  CD CD 81            	CALL	actualiza_marcador_vidas
     255.  00:843E                      	
     256.  00:843E  21 D6 AA            	LD		HL, array_aux_vidas
     257.  00:8441  11 48 1A            	LD		DE, TILMAP + POSVIDAS 	;inicio posición en el mapa de tiles de las vidas
     258.  00:8444  01 08 00            	LD		BC, NMAXVIDREL			;hay 8 posiciones para vidas/reliquias o espacios en negro si no tiene 8 vidas/reliquias
     259.  00:8447  C3 5C 00            	JP		LDIRVM
     260.  00:844A                      fin_pinta_vidas:
     261.  00:844A                      	
     262.  00:844A                      	
     263.  00:844A                      
     264.  00:844A                      ;;=====================================================
     265.  00:844A                      ;;PINTA_RELIQUIAS
     266.  00:844A                      ;;=====================================================	
     267.  00:844A                      ; función: 	actualiza el mapa de tiles para que en el próximo refresco se pinten y actualiza_reliquias
     268.  00:844A                      ; entrada: 	array_aux_reliquias
     269.  00:844A                      ; salida: 	-
     270.  00:844A                      ; toca:		todo
     271.  00:844A                      pinta_reliquias:
     272.  00:844A  CD E6 81            	CALL	actualiza_buffer_reliquias
     273.  00:844D                      	
     274.  00:844D  21 DE AA            	LD		HL, array_aux_reliquias
     275.  00:8450  11 C8 1A            	LD		DE, TILMAP + POSRELIQ 	;inicio posición en el mapa de tiles de las vidas
     276.  00:8453  01 08 00            	LD		BC, NMAXVIDREL			;hay 8 posiciones para vidas/reliquias o espacios en negro si no tiene 8 vidas/reliquias
     277.  00:8456  C3 5C 00            	JP		LDIRVM
     278.  00:8459                      fin_pinta_reliquias:
     279.  00:8459                      	
     280.  00:8459                      
     281.  00:8459                      
     282.  00:8459                      	
     283.  00:8459                      ;;=====================================================
     284.  00:8459                      ;;PINTA_NIVEL
     285.  00:8459                      ;;=====================================================	
     286.  00:8459                      ; función: 	actualiza el nivel en la parte de puntuación
     287.  00:8459                      ; entrada: 	prota_nivel
     288.  00:8459                      ; salida: 	-
     289.  00:8459                      ; toca:		HL,DE,BC
     290.  00:8459                      pinta_nivel:
     291.  00:8459                      	;forma más avanzada sin llamada a la bios
     292.  00:8459  01 B4 1A            	LD		BC,TILMAP + POSNIVEL ;posición en el mapa de tiles del tile de nivel
     293.  00:845C  3A D0 AA            	LD		 A, (prota_nivel)	 ;seleccionando la pos del banco de tiles a poner en el mapa
     294.  00:845F  C6 30               	ADD		'0'	
     295.  00:8461  57                  	LD		 D, A
     296.  00:8462                      	
     297.  00:8462  C3 65 84            	JP		pinta_tile_suelto
     298.  00:8465                      fin_pinta_nivel:
     299.  00:8465                      
     300.  00:8465                      
     301.  00:8465                      
     302.  00:8465                      ;;=====================================================
     303.  00:8465                      ;;PINTA_TILE_SUELTO
     304.  00:8465                      ;;=====================================================	
     305.  00:8465                      ; función: 	pinta al tile que digamos en D, en la posición BC
     306.  00:8465                      ; entrada: 	BC (posición a pintar en el mapa),D (qué se va a pintar el esa posición)
     307.  00:8465                      ; salida: 	-
     308.  00:8465                      ; toca:		A
     309.  00:8465                      pinta_tile_suelto:	
     310.  00:8465  DB 99               	IN		 A,(REGEST)		;leer registro de estado (recomendado)
     311.  00:8467  79                  	LD		 A,C			;primero byte bajo	
     312.  00:8468  D3 99               	OUT		(REGEST),A
     313.  00:846A  78                  	LD		 A,B			;después byte alto  ********************** preguntar a Fernando cómo que byte bajo es B
     314.  00:846B  F6 40               	OR		1000000b		;+64
     315.  00:846D  D3 99               	OUT		(REGEST),A
     316.  00:846F                      	
     317.  00:846F  7A                  	LD		A,D
     318.  00:8470  D3 98               	OUT		(REGESCVDP),A	;escribe A en VRAM en la posición indicada por los dos OUT anteriores
     319.  00:8472                      fin_pinta_tile_suelto:
     320.  00:8472  C9                  	RET
     321.  00:8473                      
     322.  00:8473                      
     323.  00:8473                      
     324.  00:8473                      
     325.  00:8473                      
     326.  00:8473                      ;;=====================================================
     327.  00:8473                      ;;MIRA_PINTA ENERGIA
     328.  00:8473                      ;;=====================================================	
     329.  00:8473                      ; función: 	actualiza el nivel de energia en la parte de puntuación
     330.  00:8473                      ; nota:		el cuadrado más bajo de ejergía siempre estará pintado... se obviará
     331.  00:8473                      ; entrada: 	prota.energia, array_aux_energia
     332.  00:8473                      ; salida: 	-
     333.  00:8473                      ; toca:		ninguno porque usa EXX
     334.  00:8473                      
     335.  00:8473                      ; nota importante... lo mismo interesa hacer esto con un array para comparar y un bucle
     336.  00:8473                      
     337.  00:8473                      mira_pinta_energia:
     338.  00:8473  D9                  	EXX							;por si acaso guardo el contenido de HL (si veo que no es necesario guardarlo lo quito) uso esto en vez de push por el nº ciclos
     339.  00:8474                      	
     340.  00:8474  3A D5 AA            	LD		 A,(prota_energia) 	;para las comparaciones A variable (actual) y B fijo (limites)
     341.  00:8477                      
     342.  00:8477  0E 00               	LD		 C,TILENEGRO		;para agilizar asignaciones en vez de un valor cte uso otro registro
     343.  00:8479                      pinta_ener:
     344.  00:8479                      pinta_ener_tile_8:
     345.  00:8479  21 ED AA            	LD		HL,ultimo_pos_array_aux_energia	;coloco puntero en array e iré decrementando
     346.  00:847C  06 D9               	LD		 B,TILEENERG8
     347.  00:847E  B8                  	CP		 B
     348.  00:847F  38 04               	JR		C,pinta_ener_tile_8_negro
     349.  00:8481  36 0E               	LD		(HL),TILEMAPVERD
     350.  00:8483  18 01               	JR		pinta_ener_tile_7
     351.  00:8485                      pinta_ener_tile_8_negro:
     352.  00:8485  71                  	LD		(HL),C
     353.  00:8486                      
     354.  00:8486                      pinta_ener_tile_7:
     355.  00:8486  2B                  	DEC		HL
     356.  00:8487  06 BA               	LD		 B,TILEENERG7
     357.  00:8489  B8                  	CP		 B
     358.  00:848A  38 04               	JR		C,pinta_ener_tile_7_negro
     359.  00:848C  36 0E               	LD		(HL),TILEMAPVERD
     360.  00:848E  18 01               	JR		pinta_ener_tile_6
     361.  00:8490                      pinta_ener_tile_7_negro:
     362.  00:8490  71                  	LD		(HL),C
     363.  00:8491                      
     364.  00:8491                      pinta_ener_tile_6:
     365.  00:8491  2B                  	DEC		HL
     366.  00:8492  06 9B               	LD		 B,TILEENERG6
     367.  00:8494  B8                  	CP		 B
     368.  00:8495  38 04               	JR		C,pinta_ener_tile_6_negro
     369.  00:8497  36 0E               	LD		(HL),14
     370.  00:8499  18 01               	JR		pinta_ener_tile_5
     371.  00:849B                      pinta_ener_tile_6_negro:
     372.  00:849B  71                  	LD		(HL),C
     373.  00:849C                      
     374.  00:849C                      pinta_ener_tile_5:
     375.  00:849C  2B                  	DEC		HL
     376.  00:849D  06 7C               	LD		 B,TILEENERG5
     377.  00:849F  B8                  	CP		 B
     378.  00:84A0  38 04               	JR		C,pinta_ener_tile_5_negro
     379.  00:84A2  36 0E               	LD		(HL),TILEMAPVERD
     380.  00:84A4  18 01               	JR		pinta_ener_tile_4
     381.  00:84A6                      pinta_ener_tile_5_negro:
     382.  00:84A6  71                  	LD		(HL),C
     383.  00:84A7                      
     384.  00:84A7                      pinta_ener_tile_4:
     385.  00:84A7  2B                  	DEC		HL
     386.  00:84A8  06 5D               	LD		 B,TILEENERG4
     387.  00:84AA  B8                  	CP		 B
     388.  00:84AB  38 04               	JR		C,pinta_ener_tile_4_negro
     389.  00:84AD  36 0F               	LD		(HL),TILEMAPAMAR
     390.  00:84AF  18 01               	JR		pinta_ener_tile_3
     391.  00:84B1                      pinta_ener_tile_4_negro:
     392.  00:84B1  71                  	LD		(HL),C
     393.  00:84B2                      	
     394.  00:84B2                      pinta_ener_tile_3:
     395.  00:84B2  2B                  	DEC		HL
     396.  00:84B3  06 3E               	LD		 B,TILEENERG3
     397.  00:84B5  B8                  	CP		 B
     398.  00:84B6  38 04               	JR		C,pinta_ener_tile_3_negro
     399.  00:84B8  36 0F               	LD		(HL),TILEMAPAMAR
     400.  00:84BA  18 01               	JR		pinta_ener_tile_2
     401.  00:84BC                      pinta_ener_tile_3_negro:
     402.  00:84BC  71                  	LD		(HL),C
     403.  00:84BD                      
     404.  00:84BD                      pinta_ener_tile_2:
     405.  00:84BD  2B                  	DEC		HL
     406.  00:84BE  06 1F               	LD		 B,TILEENERG2
     407.  00:84C0  B8                  	CP		 B
     408.  00:84C1  38 04               	JR		C,pinta_ener_tile_2_negro
     409.  00:84C3  36 10               	LD		(HL),TILEMAPROJO
     410.  00:84C5  18 01               	JR		fin_mira_pinta_energia		;siempre estará pintado el cuadro mínimo
     411.  00:84C7                      pinta_ener_tile_2_negro:
     412.  00:84C7  71                  	LD		(HL),C
     413.  00:84C8                      
     414.  00:84C8                      fin_mira_pinta_energia:
     415.  00:84C8  D9                  	EXX
     416.  00:84C9  C9                  	RET
     417.  00:84CA                      
     418.  00:84CA                      
     419.  00:84CA                      ;;=====================================================
     420.  00:84CA                      ;;PINTA_ENERGIA
     421.  00:84CA                      ;;=====================================================	
     422.  00:84CA                      ; función: 	actualiza el mapa de tiles para que en el próximo refresco se pinte la barra de energia actual
     423.  00:84CA                      ; entrada: 	array_aux_energia
     424.  00:84CA                      ; toca:		todo
     425.  00:84CA                      pinta_energia:
     426.  00:84CA  CD 73 84            	CALL	mira_pinta_energia
     427.  00:84CD                      	
     428.  00:84CD  21 E6 AA            	LD		HL, array_aux_energia
     429.  00:84D0  11 88 1A            	LD		DE, TILMAP + POSENERG 	;inicio posición en el mapa de tiles de las vidas
     430.  00:84D3  01 08 00            	LD		BC, NMAXVIDREL			;hay 8 posiciones para vidas/reliquias o espacios en negro si no tiene 8 vidas/reliquias
     431.  00:84D6  C3 5C 00            	JP		LDIRVM
     432.  00:84D9                      fin_pinta_energia:
     433.  00:84D9                      
     434.  00:84D9                      
     435.  00:84D9                      
     436.  00:84D9                      ;;=====================================================
     437.  00:84D9                      ;;BORRA_MAPA
     438.  00:84D9                      ;;=====================================================	
     439.  00:84D9                      ; función: 	pone todas las habitaciones del mapa a negro (los tiles del mapa los rellena con un array a 0 - caracter en negro)
     440.  00:84D9                      ; entrada: 	array_aux_mapa_limpiar
     441.  00:84D9                      ; salida: 	-
     442.  00:84D9                      ; toca:		AF
     443.  00:84D9                      borra_mapa:
     444.  00:84D9  D9                  	EXX
     445.  00:84DA                      	
     446.  00:84DA  21 EE AA            	LD		HL,array_aux_mapa_limpiar
     447.  00:84DD  11 F8 1A            	LD		DE,TILMAP + POSMAPLIN1 	;inicio posición en el mapa de tiles de la primera fila del mapa
     448.  00:84E0  01 07 00            	LD		BC,NHABNIVEL			;cada nivel son 7 filas con 7 habitaciones "posibles"
     449.  00:84E3  CD 5C 00            	CALL	LDIRVM
     450.  00:84E6                      	
     451.  00:84E6  21 EE AA            	LD		HL,array_aux_mapa_limpiar
     452.  00:84E9  11 D8 1A            	LD		DE,TILMAP + POSMAPLIN2
     453.  00:84EC  01 07 00            	LD		BC,NHABNIVEL
     454.  00:84EF  CD 5C 00            	CALL	LDIRVM
     455.  00:84F2                      
     456.  00:84F2  21 EE AA            	LD		HL,array_aux_mapa_limpiar
     457.  00:84F5  11 B8 1A            	LD		DE,TILMAP + POSMAPLIN3
     458.  00:84F8  01 07 00            	LD		BC,NHABNIVEL
     459.  00:84FB  CD 5C 00            	CALL	LDIRVM
     460.  00:84FE                      
     461.  00:84FE  21 EE AA            	LD		HL,array_aux_mapa_limpiar	
     462.  00:8501  11 98 1A            	LD		DE,TILMAP + POSMAPLIN4
     463.  00:8504  01 07 00            	LD		BC,NHABNIVEL
     464.  00:8507  CD 5C 00            	CALL	LDIRVM
     465.  00:850A                      
     466.  00:850A  21 EE AA            	LD		HL,array_aux_mapa_limpiar	
     467.  00:850D  11 78 1A            	LD		DE,TILMAP + POSMAPLIN5
     468.  00:8510  01 07 00            	LD		BC,NHABNIVEL
     469.  00:8513  CD 5C 00            	CALL	LDIRVM
     470.  00:8516                      
     471.  00:8516  21 EE AA            	LD		HL,array_aux_mapa_limpiar	
     472.  00:8519  11 58 1A            	LD		DE,TILMAP + POSMAPLIN6
     473.  00:851C  01 07 00            	LD		BC,NHABNIVEL
     474.  00:851F  CD 5C 00            	CALL	LDIRVM
     475.  00:8522                      
     476.  00:8522  21 EE AA            	LD		HL,array_aux_mapa_limpiar	
     477.  00:8525  11 38 1A            	LD		DE,TILMAP + POSMAPLIN7
     478.  00:8528  01 07 00            	LD		BC,NHABNIVEL
     479.  00:852B  CD 5C 00            	CALL	LDIRVM
     480.  00:852E                      	
     481.  00:852E  D9                  	EXX
     482.  00:852F                      fin_borra_mapa:
     483.  00:852F  C9                  	RET
     484.  00:8530                      
     485.  00:8530                      
     486.  00:8530                      
     487.  00:8530                      
     488.  00:8530                      
     489.  00:8530                      
     490.  00:8530                      
     491.  00:8530                      ;;=====================================================
     492.  00:8530                      ;;POSICIONA_EN_MAPA
     493.  00:8530                      ;;=====================================================	
     494.  00:8530                      ; función: 	en el mapa de marcadores de la derecha/abajo marca un cuadro en gris o con un muñeco
     495.  00:8530                      ;			según el valor de prota.posición pinta entrá un muñeco y por donde vaya pasando el prota
     496.  00:8530                      ;			quedará en gris
     497.  00:8530                      ; entrada: 	elemento_pintar_mapa  A , prota_pos_mapy, prota_pos_mapx
     498.  00:8530                      ; salida: 	-
     499.  00:8530                      ; toca:		todos
     500.  00:8530                      posiciona_en_mapa:
     501.  00:8530                      	;#0238 es la posición en mapa de tiles de la esquina superior izquierda del mapa (569 en decimal)
     502.  00:8530  21 38 1A            	LD		HL, TILMAP + POSMAPA;pos inicial
     503.  00:8533                      	
     504.  00:8533                      	;ahora se le calcula la fila a pintar ya que va de abajo a arriba y no como en el mapa + columna
     505.  00:8533                      .sumar_fila:
     506.  00:8533  3A D4 AA            	LD		 A, (prota_pos_mapy)
     507.  00:8536  FE 01               	CP		 1
     508.  00:8538  28 2A               	JR		 Z, .fila_1
     509.  00:853A  3A D4 AA            	LD		 A, (prota_pos_mapy)
     510.  00:853D  FE 02               	CP		 2
     511.  00:853F  28 2A               	JR		 Z, .fila_2
     512.  00:8541  3A D4 AA            	LD		 A, (prota_pos_mapy)
     513.  00:8544  FE 03               	CP		 3
     514.  00:8546  28 2A               	JR		 Z, .fila_3
     515.  00:8548  3A D4 AA            	LD		 A, (prota_pos_mapy)
     516.  00:854B  FE 04               	CP		 4
     517.  00:854D  28 2A               	JR		 Z, .fila_4
     518.  00:854F  3A D4 AA            	LD		 A, (prota_pos_mapy)
     519.  00:8552  FE 05               	CP		 5
     520.  00:8554  28 2A               	JR		 Z, .fila_5
     521.  00:8556  3A D4 AA            	LD		 A, (prota_pos_mapy)
     522.  00:8559  FE 06               	CP		 6
     523.  00:855B  28 2A               	JR		 Z, .sumar_columna
     524.  00:855D                      	;no consulto la 0 porque si no es ninguna de las anteriores es 0 y por tanto sería un jr fila_0
     525.  00:855D                      	
     526.  00:855D                      .fila_0:
     527.  00:855D  11 C0 00            	LD		DE, 192
     528.  00:8560  19                  	ADD		HL, DE			;nota: se que repito el ADD pero la otra opción es inicializar DE y ya tarda mucho la funicón (es por velicidad)
     529.  00:8561  C3 87 85            	JP		.sumar_columna
     530.  00:8564                      .fila_1:
     531.  00:8564  11 A0 00            	LD		DE, 160
     532.  00:8567  19                  	ADD		HL, DE
     533.  00:8568  C3 87 85            	JP		.sumar_columna
     534.  00:856B                      .fila_2:
     535.  00:856B  11 80 00            	LD		DE, 128
     536.  00:856E  19                  	ADD		HL, DE
     537.  00:856F  C3 87 85            	JP		.sumar_columna
     538.  00:8572                      .fila_3:
     539.  00:8572  11 60 00            	LD		DE, 96
     540.  00:8575  19                  	ADD		HL, DE
     541.  00:8576  C3 87 85            	JP		.sumar_columna
     542.  00:8579                      .fila_4:
     543.  00:8579  11 40 00            	LD		DE, 64
     544.  00:857C  19                  	ADD		HL, DE
     545.  00:857D  C3 87 85            	JP		.sumar_columna
     546.  00:8580                      .fila_5:
     547.  00:8580  11 20 00            	LD		DE, 32
     548.  00:8583  19                  	ADD		HL, DE
     549.  00:8584  C3 87 85            	JP		.sumar_columna
     550.  00:8587                      .fila_6:
     551.  00:8587                      	;pongo fila_6 por poner ya que si es la fila 6 equiv. a primera fila del mapa y por tanto no suma fila
     552.  00:8587                      	
     553.  00:8587                      	
     554.  00:8587                      .sumar_columna:
     555.  00:8587  3A D3 AA            	LD 		 A, (prota_pos_mapx) ;POS X
     556.  00:858A  16 00               	LD		 D, 0
     557.  00:858C  5F                  	LD		 E, A
     558.  00:858D  19                  	ADD		HL, DE
     559.  00:858E                      	
     560.  00:858E                      	;resultado en BC para usar en la función pinta_tile_suelto
     561.  00:858E  44                  	LD		 B, H
     562.  00:858F  4D                  	LD		 C, L
     563.  00:8590                      	
     564.  00:8590                      	;terminado de fijar la coordenada recuperamos a para ver el tipo
     565.  00:8590  3A F5 AA            	LD		 A, (elemento_pintar_mapa)
     566.  00:8593  FE 09               	CP		 TILEGRISM
     567.  00:8595  CA 9D 85            	JP		 Z, pinta_pos_mapa_vacio
     568.  00:8598  16 13               	LD		 D, TILEPROTAM
     569.  00:859A  C3 9F 85            	JP		fin_pinta_pos_mapa
     570.  00:859D                      pinta_pos_mapa_vacio:
     571.  00:859D  16 09               	LD		 D, TILEGRISM	
     572.  00:859F                      
     573.  00:859F                      fin_pinta_pos_mapa:
     574.  00:859F  C3 65 84            	JP		pinta_tile_suelto
     575.  00:85A2                      fin_posiciona_en_mapa:
     576.  00:85A2                      
     577.  00:85A2                      
     578.  00:85A2                      
     579.  00:85A2                      
     580.  00:85A2                      ;;=====================================================
     581.  00:85A2                      ;;EFECTO_IMAGEN_TIRA_RELIQUIA
     582.  00:85A2                      ;;=====================================================	
     583.  00:85A2                      ; función: 	hace que el fondo de la pantalla parpadee N veces
     584.  00:85A2                      ; entrada: 	actualiza_reliquias_sn
     585.  00:85A2                      ; salida: 	-
     586.  00:85A2                      ; toca: 	todo
     587.  00:85A2                      efecto_imagen_tira_reliquia:
     588.  00:85A2  3E 14               	LD		 A, 20;RETARDOREL
     589.  00:85A4  47                  	LD		 B, A
     590.  00:85A5                      
     591.  00:85A5                      .parpadea_fondo:
     592.  00:85A5  C5                  	PUSH	BC
     593.  00:85A6  21 BA AA            	LD		HL, color_bomba1
     594.  00:85A9  CD C9 82            	CALL	color_pantalla
     595.  00:85AC                      	
     596.  00:85AC                      	;~ PUSH	BC
     597.  00:85AC                      	;~ LD		 A, 255
     598.  00:85AC                      	;~ LD		 B, A
     599.  00:85AC                      ;~ .bucle_de_espera:
     600.  00:85AC                      	;~ NOP
     601.  00:85AC                      	;~ DJNZ	 .bucle_de_espera
     602.  00:85AC                      	;~ POP		BC
     603.  00:85AC  76                  	HALT
     604.  00:85AD                      
     605.  00:85AD                      	
     606.  00:85AD  21 BD AA            	LD		HL, color_bomba2
     607.  00:85B0  CD C9 82            	CALL	color_pantalla
     608.  00:85B3  C1                  	POP		BC
     609.  00:85B4  10 EF               	DJNZ	.parpadea_fondo
     610.  00:85B6                      	
     611.  00:85B6  21 B7 AA            	LD		HL, color_base
     612.  00:85B9  C3 C9 82            	JP		color_pantalla
     613.  00:85BC                      fin_efecto_imagen_tira_reliquia:
     614.  00:85BC                      
     615.  00:85BC                      
     616.  00:85BC                      
     617.  00:85BC                      
     618.  00:85BC                      ;=====================================================
     619.  00:85BC                      ;;PINTA_ARRAY
     620.  00:85BC                      ;;=====================================================	
     621.  00:85BC                      ;;funcion:  (pinta el mismo tile) se le pasa un array con posiciones de tiles y coordenadas x e y y los pinta en screen 2
     622.  00:85BC                      ;;entrada:	wordaux1 (pos inicio sc2 donde pintar) y wordaux2 (puntero al array a pintar), BC (posición en tilemap) , D filas y E columnas
     623.  00:85BC                      ;;salida:	-
     624.  00:85BC                      ;;importante: necesita de una variable wordaux1 tipo WD (wordaux1: 	DW	0)
     625.  00:85BC                      ;; ejemplo llamada:
     626.  00:85BC                      	;~ LD		HL,array_tiles					;guardo puntero al array a pintar (como psar por referencia)
     627.  00:85BC                      	;~ LD		(wordaux2),HL					;en la variable wordaux2
     628.  00:85BC                      	;~ LD		HL,SC2MAP + 256 + 32			;calcula posición en tilemap
     629.  00:85BC                      	;~ LD		(wordaux1),HL					;guarda valor pos tilemap en wordaux1
     630.  00:85BC                      	;~ LD		B,H								;coloca posición tilemap BC
     631.  00:85BC                      	;~ LD		C,L
     632.  00:85BC                      	;~ LD		D,2								;nº de filas ahora byteaux1
     633.  00:85BC                      	;~ LD		E,3								;nº de columnas ahora byteaux2
     634.  00:85BC                      	;~ CALL	pinta_array
     635.  00:85BC                      
     636.  00:85BC                      pinta_array:
     637.  00:85BC  08                  	EX		AF, AF'
     638.  00:85BD                      	
     639.  00:85BD  3A 00 86            	LD		 A, (byteaux1)
     640.  00:85C0  57                  	LD		 D, A
     641.  00:85C1  3A 01 86            	LD		 A, (byteaux2)
     642.  00:85C4  5F                  	LD		 E, A
     643.  00:85C5                      	
     644.  00:85C5  2A FC 85            	LD		HL, (wordaux1)
     645.  00:85C8  44                  	LD		 B, H							;coloca posición tilemap BC
     646.  00:85C9  4D                  	LD		 C, L
     647.  00:85CA                      	
     648.  00:85CA                      	;contamos con que la posición "global" en el tilemap está ya en BC
     649.  00:85CA                      	;y el puntero al array a pintar en wordaux2 y la posición en tilemap sc2 en wordaux1
     650.  00:85CA                      	;inicializa
     651.  00:85CA  DB 99               	IN		 A,(REGEST)		;leer registro de estado (recomendado)
     652.  00:85CC                      	
     653.  00:85CC                      	;coloca puntero para pintar tile según BC
     654.  00:85CC  79                  	LD		 A,C			;primero byte bajo	
     655.  00:85CD  D3 99               	OUT		(REGEST),A
     656.  00:85CF  78                  	LD		 A,B			;después byte alto  ********************** preguntar a Fernando cómo que byte bajo es B
     657.  00:85D0  F6 40               	OR		1000000b		;+64
     658.  00:85D2  D3 99               	OUT		(REGEST),A
     659.  00:85D4                      
     660.  00:85D4                      	
     661.  00:85D4  2A FE 85            	LD		HL,(wordaux2)	;HL es lo que se pintará y le he pasado el puntero del array tilemap a pintar
     662.  00:85D7                      .pa_pinta_fila:
     663.  00:85D7  43                  	LD		 B,E
     664.  00:85D8                      .pa_pinta_columnas: 		;finta la fila (pintando las columnas)
     665.  00:85D8  7E                  	LD		 A,(HL)
     666.  00:85D9  D3 98               	OUT		(REGESCVDP),A	;escribe A en VRAM en la posición indicada por los dos OUT anteriores
     667.  00:85DB  23                  	INC		HL
     668.  00:85DC  10 FA               	DJNZ	.pa_pinta_columnas
     669.  00:85DE                      	
     670.  00:85DE                      	;no es una solución elegante lo de repetir código pero queda claro
     671.  00:85DE                      	;por si hay otra fila
     672.  00:85DE  E5                  	PUSH	HL
     673.  00:85DF  2A FC 85            	LD		HL,(wordaux1)
     674.  00:85E2  01 20 00            	LD		BC,32
     675.  00:85E5  09                  	ADD		HL,BC
     676.  00:85E6  22 FC 85            	LD		(wordaux1),HL
     677.  00:85E9  44                  	LD		B,H
     678.  00:85EA  4D                  	LD		C,L
     679.  00:85EB  E1                  	POP		HL
     680.  00:85EC                      	
     681.  00:85EC  79                  	LD		 A,C			;primero byte bajo	
     682.  00:85ED  D3 99               	OUT		(REGEST),A
     683.  00:85EF  78                  	LD		 A,B			;después byte alto 
     684.  00:85F0  F6 40               	OR		1000000b		;+64
     685.  00:85F2  D3 99               	OUT		(REGEST),A
     686.  00:85F4                      	
     687.  00:85F4                      	;si hay otra fila repite
     688.  00:85F4  15                  	DEC		 D
     689.  00:85F5  7A                  	LD		 A,D		;¿hay otra fila?
     690.  00:85F6  B7                  	OR		 A
     691.  00:85F7  C4 D7 85            	CALL	NZ,.pa_pinta_fila
     692.  00:85FA                      	
     693.  00:85FA  08                  	EX		AF, AF'
     694.  00:85FB                      fin_pinta_array:
     695.  00:85FB  C9                  	RET
     696.  00:85FC                      ;;variables asocidas a la función pinta_array
     697.  00:85FC                      ;; por de pronto la dejo aquí
     698.  00:85FC  00 00               wordaux1:		DW	0	;almacena la posición en el tilemap 0 al 675
     699.  00:85FE  00 00               wordaux2:		DW	0	;almacena puntero a array de tiles (posiciones en realidad) a pintar (posiciones repetidas en los 2 primeros bancos)
     700.  00:8600  00                  byteaux1:		DB	0	;nº filas Registro D
     701.  00:8601  00                  byteaux2:		DB	0	;nº columnas Registro E
     702.  00:8602                      
     703.  00:8602                      
     704.  00:8602                      
     705.  00:8602                      
     706.  00:8602                      ;;=====================================================
     707.  00:8602                      ;;INICIALIZA_ANTORCHAS
     708.  00:8602                      ;;=====================================================	
     709.  00:8602                      ; función: 	inicializa las variables de estructuras de las antorchas
     710.  00:8602                      ; entrada: 	antorchas, array_antorcha
     711.  00:8602                      ; salida: 	
     712.  00:8602                      ; toca:		HL, IX
     713.  00:8602                      inicializa_antorchas:
     714.  00:8602  DD 21 F6 AA         	LD		IX, antorchas
     715.  00:8606  DD 36 00 00         	LD		(IX), INACTIVA
     716.  00:860A  21 FD AA            	LD		HL, array_antorcha
     717.  00:860D  DD 74 01            	LD		(IX + 1), H
     718.  00:8610  DD 75 02            	LD		(IX + 2), L
     719.  00:8613  DD 36 03 88         	LD		(IX + 3), POSANTOR1
     720.  00:8617  DD 36 04 97         	LD		(IX + 4), POSANTOR2
     721.  00:861B  DD 36 05 00         	LD		(IX + 5), 0
     722.  00:861F  DD 36 06 FF         	LD		(IX + 6), RESETLLAMA
     723.  00:8623                      fin_inicializa_antorchas:
     724.  00:8623  C9                  	RET
     725.  00:8624                      
     726.  00:8624                      
     727.  00:8624                      ;;=====================================================
     728.  00:8624                      ;;INICIALIZA_esqueletos
     729.  00:8624                      ;;=====================================================	
     730.  00:8624                      ; función: 	inicializa las variables de estructuras de los esqueletos
     731.  00:8624                      ; entrada: 	esqueletos, array_esqueletos
     732.  00:8624                      ; salida: 	
     733.  00:8624                      ; toca:		HL, IX
     734.  00:8624                      inicializa_esqueletos:
     735.  00:8624  DD 21 00 AB         	LD		IX, esqueletos
     736.  00:8628  DD 36 00 00         	LD		(IX), INACTIVA
     737.  00:862C  21 07 AB            	LD		HL, array_esqueleto
     738.  00:862F  DD 74 01            	LD		(IX + 1), H
     739.  00:8632  DD 75 02            	LD		(IX + 2), L
     740.  00:8635  DD 36 03 88         	LD		(IX + 3), POSESQUEL1
     741.  00:8639  DD 36 04 95         	LD		(IX + 4), POSESQUEL2
     742.  00:863D  DD 36 05 00         	LD		(IX + 5), 0
     743.  00:8641  DD 36 06 19         	LD		(IX + 6), RESETESQUEL
     744.  00:8645                      fin_inicializa_esqueletos:
     745.  00:8645  C9                  	RET
     746.  00:8646                      	
     747.  00:8646                      
     748.  00:8646                      ;;=====================================================
     749.  00:8646                      ;;PINTA_ANTORCHAS
     750.  00:8646                      ;;=====================================================	
     751.  00:8646                      ; función: 	pinta las antorchas con valores base
     752.  00:8646                      ; entrada: 	antorchas, array_antorcha
     753.  00:8646                      ; salida: 	
     754.  00:8646                      ; toca:		HL
     755.  00:8646                      pinta_extra_fondo:
     756.  00:8646  DD 21 F6 AA         	LD		IX, antorchas
     757.  00:864A                      .examina_sihay_antorchas
     758.  00:864A                      	;hay que pintarlas?
     759.  00:864A  3A A3 A7            	LD		 A, (habitacion_extras)
     760.  00:864D  CB 47               	BIT		 0, A
     761.  00:864F  C2 59 86            	JP		NZ, .hayantorchas			;si el bit 0 de extras es 0 no se pintan antorchas
     762.  00:8652  DD 36 00 00         	LD		(IX), INACTIVA
     763.  00:8656  C3 82 86            	JP		.examina_sihay_esqueletos
     764.  00:8659                      	
     765.  00:8659                      .hayantorchas:
     766.  00:8659  DD 36 00 01         	LD		(IX), ACTIVA
     767.  00:865D                      	;pinta antorcha izquierdda
     768.  00:865D  DD 66 01            	LD		 H, (IX + 1)
     769.  00:8660  DD 6E 02            	LD		 L, (IX + 2)
     770.  00:8663  22 FE 85            	LD		(wordaux2), HL				;guarda pos array en wordaux2
     771.  00:8666                      	
     772.  00:8666  21 88 18            	LD		HL, TILMAP + POSANTOR1		;calcula posición en tilemap
     773.  00:8669  22 FC 85            	LD		(wordaux1), HL				;guarda valor pos tilemap en wordaux1
     774.  00:866C                      
     775.  00:866C  3E 03               	LD		 A, 3						;nº de filas	
     776.  00:866E  32 00 86            	LD		(byteaux1), A
     777.  00:8671  3E 01               	LD		 A, 1						;nº de columnas
     778.  00:8673  32 01 86            	LD		(byteaux2), A				
     779.  00:8676                      	
     780.  00:8676  CD BC 85            	CALL	pinta_array
     781.  00:8679                      	
     782.  00:8679                      	;pinta antorcha derecha
     783.  00:8679  21 97 18            	LD		HL, TILMAP + POSANTOR2		;calcula posición en tilemap
     784.  00:867C  22 FC 85            	LD		(wordaux1), HL				;guarda valor pos tilemap en wordaux1
     785.  00:867F                      	
     786.  00:867F  C3 BC 85            	JP		pinta_array 				;no ecesita CALL ya que la subrutina termina aquí
     787.  00:8682                      	
     788.  00:8682                      .examina_sihay_esqueletos
     789.  00:8682  DD 21 00 AB         	LD		IX, esqueletos
     790.  00:8686                      	;hay que pintarlos?
     791.  00:8686  3A A2 A7            	LD		 A, (habitacion_actual)
     792.  00:8689  CB 6F               	BIT		 5, A
     793.  00:868B  C2 93 86            	JP		NZ, .hayesqueletos			;si el bit 0 de extras es 0 no se pintan antorchas
     794.  00:868E  DD 36 00 00         	LD		(IX), INACTIVA
     795.  00:8692  C9                  	RET									;no hay que pintarlo. no hay que continuar
     796.  00:8693                      
     797.  00:8693                      .hayesqueletos
     798.  00:8693  DD 36 00 01         	LD		(IX), ACTIVA
     799.  00:8697                      	;pinta antorcha izquierdda
     800.  00:8697  DD 66 01            	LD		 H, (IX + 1)
     801.  00:869A  DD 6E 02            	LD		 L, (IX + 2)
     802.  00:869D  22 FE 85            	LD		(wordaux2), HL				;guarda pos array en wordaux2
     803.  00:86A0                      	
     804.  00:86A0  21 88 18            	LD		HL, TILMAP + POSESQUEL1		;calcula posición en tilemap
     805.  00:86A3  22 FC 85            	LD		(wordaux1), HL				;guarda valor pos tilemap en wordaux1
     806.  00:86A6                      
     807.  00:86A6  3E 04               	LD		 A, 4						;nº de filas	
     808.  00:86A8  32 00 86            	LD		(byteaux1), A
     809.  00:86AB  3E 03               	LD		 A, 3						;nº de columnas
     810.  00:86AD  32 01 86            	LD		(byteaux2), A				
     811.  00:86B0                      	
     812.  00:86B0  CD BC 85            	CALL	pinta_array
     813.  00:86B3                      	
     814.  00:86B3                      	;pinta antorcha derecha
     815.  00:86B3  21 95 18            	LD		HL, TILMAP + POSESQUEL2		;calcula posición en tilemap
     816.  00:86B6  22 FC 85            	LD		(wordaux1), HL				;guarda valor pos tilemap en wordaux1
     817.  00:86B9                      	
     818.  00:86B9  C3 BC 85            	JP		pinta_array 				;no ecesita CALL ya que la subrutina termina aquí
     819.  00:86BC                      fin_pinta_extra_fondo:
     820.  00:86BC  C9                  	RET
     821.  00:86BD                      
     822.  00:86BD                      
     823.  00:86BD                      
     824.  00:86BD                      ;;=====================================================
     825.  00:86BD                      ;;ACTUALIZA_ELEMENTOS_FONDO
     826.  00:86BD                      ;;=====================================================	
     827.  00:86BD                      ; función: 	de los elementos que pueda haber en el fondo de la pared (pantalla) actualiza si procede
     828.  00:86BD                      ;			actualmente: antorchas y a futuro esqueletos
     829.  00:86BD                      ; entrada: 	
     830.  00:86BD                      ; salida: 	
     831.  00:86BD                      ; toca:		A
     832.  00:86BD                      actualiza_elementos_fondo:
     833.  00:86BD                      .examina_antorchas:
     834.  00:86BD  DD 21 F6 AA         	LD		IX, antorchas
     835.  00:86C1  DD 7E 00            	LD		 A, (IX)
     836.  00:86C4  B7                  	OR		 A
     837.  00:86C5  CA CB 86            	JP 	 	 Z, .examina_esqueletos
     838.  00:86C8                      	
     839.  00:86C8  CD D7 86            	CALL	flip_llamas_antorchas
     840.  00:86CB                      .examina_esqueletos:
     841.  00:86CB  DD 21 00 AB         	LD		IX, esqueletos
     842.  00:86CF  DD 7E 00            	LD		 A, (IX)
     843.  00:86D2  B7                  	OR		 A
     844.  00:86D3  C8                  	RET	 	 Z
     845.  00:86D4                      	
     846.  00:86D4  C3 34 87            	JP		flip_calavera_esqueletos
     847.  00:86D7                      fin_actualiza_elementos_fondo:
     848.  00:86D7                      
     849.  00:86D7                      
     850.  00:86D7                      
     851.  00:86D7                      
     852.  00:86D7                      ;;=====================================================
     853.  00:86D7                      ;;FLIP_LLAMAS_ANTORCHAS
     854.  00:86D7                      ;;=====================================================	
     855.  00:86D7                      ; función: 	modifica las llamas de las antorchas con los tipos que hay
     856.  00:86D7                      ; entrada: 	
     857.  00:86D7                      ; salida: 	
     858.  00:86D7                      ; toca:		
     859.  00:86D7                      flip_llamas_antorchas:
     860.  00:86D7  DD 21 F6 AA         	LD		IX, antorchas
     861.  00:86DB                      	;tiene que cambiar de llama?
     862.  00:86DB  DD 7E 06            	LD		 A, (IX + 6)
     863.  00:86DE  3D                  	DEC		 A
     864.  00:86DF  DD 77 06            	LD		 (IX + 6), A
     865.  00:86E2                      	;no
     866.  00:86E2  C0                  	RET		NZ
     867.  00:86E3                      	;si
     868.  00:86E3  C5                  	PUSH	BC
     869.  00:86E4  D5                  	PUSH	DE
     870.  00:86E5                      	
     871.  00:86E5  DD 36 06 FF         	LD		(IX + 6), RESETLLAMA	
     872.  00:86E9                      	
     873.  00:86E9                      	;qué llama toca?
     874.  00:86E9  DD 7E 05            	LD		 A, (IX + 5)
     875.  00:86EC  B7                  	OR		 A
     876.  00:86ED  CA 11 87            	JP		 Z, .llama_par
     877.  00:86F0                      .llama_impar
     878.  00:86F0                      	;cambio a llama par
     879.  00:86F0  AF                   	XOR		 A
     880.  00:86F1  DD 77 05            	LD		(IX + 5), A
     881.  00:86F4                      	;pinto llamas
     882.  00:86F4  01 00 18            	LD		BC, TILMAP
     883.  00:86F7  3E 88               	LD		 A, POSANTOR1
     884.  00:86F9  CD A9 82            	CALL	suma_A_BC
     885.  00:86FC  16 C4               	LD		 D, MAPLLAMA1
     886.  00:86FE  CD 65 84            	CALL	pinta_tile_suelto
     887.  00:8701                      	
     888.  00:8701  01 00 18            	LD		BC, TILMAP
     889.  00:8704  3E 97               	LD		 A, POSANTOR2
     890.  00:8706  CD A9 82            	CALL	suma_A_BC
     891.  00:8709  16 C5               	LD		 D, MAPLLAMA2
     892.  00:870B  CD 65 84            	CALL	pinta_tile_suelto	
     893.  00:870E  C3 30 87            	JP		fin_flip_llamas_antorchas
     894.  00:8711                      	
     895.  00:8711                      .llama_par
     896.  00:8711                      	;cambio a llama par
     897.  00:8711  3E 01                	LD		 A, 1
     898.  00:8713  DD 77 05            	LD		(IX + 5), A
     899.  00:8716                      	;pinto llamas
     900.  00:8716  01 00 18            	LD		BC, TILMAP
     901.  00:8719  3E 88               	LD		 A, POSANTOR1
     902.  00:871B  CD A9 82            	CALL	suma_A_BC
     903.  00:871E  16 C5               	LD		 D, MAPLLAMA2
     904.  00:8720  CD 65 84            	CALL	pinta_tile_suelto
     905.  00:8723                      	
     906.  00:8723  01 00 18            	LD		BC, TILMAP
     907.  00:8726  3E 97               	LD		 A, POSANTOR2
     908.  00:8728  CD A9 82            	CALL	suma_A_BC
     909.  00:872B  16 C4               	LD		 D, MAPLLAMA1
     910.  00:872D  CD 65 84            	CALL	pinta_tile_suelto
     911.  00:8730                      
     912.  00:8730                      fin_flip_llamas_antorchas:
     913.  00:8730                      	;restauro los balores de los registros tocados antes
     914.  00:8730  D1                  	POP		DE
     915.  00:8731  C1                  	POP		BC
     916.  00:8732  F1                  	POP		AF
     917.  00:8733                      
     918.  00:8733  C9                  	RET
     919.  00:8734                      
     920.  00:8734                      
     921.  00:8734                      ;;=====================================================
     922.  00:8734                      ;;FLIP_CALAVERA_ESQUELETOS
     923.  00:8734                      ;;=====================================================	
     924.  00:8734                      ; función: 	modifica las calaveras de los esqueletos
     925.  00:8734                      ; entrada: 	
     926.  00:8734                      ; salida: 	
     927.  00:8734                      ; toca:		TODOS.... muy importante DE
     928.  00:8734                      flip_calavera_esqueletos:
     929.  00:8734  DD 21 00 AB         	LD		IX, esqueletos
     930.  00:8738                      	
     931.  00:8738                      	;tiene que cambiar de calavera?
     932.  00:8738  DD 7E 06            	LD		 A, (IX + ESTRUCTURA_ESQUELETO.cont_sig_escena)
     933.  00:873B  3D                  	DEC		 A
     934.  00:873C  DD 77 06            	LD		 (IX + ESTRUCTURA_ESQUELETO.cont_sig_escena), A
     935.  00:873F                      	;no
     936.  00:873F  C0                  	RET		NZ
     937.  00:8740                      	;si
     938.  00:8740  DD 36 06 19         	LD		(IX + ESTRUCTURA_ESQUELETO.cont_sig_escena), RESETESQUEL		;resetea contador de nueve escena
     939.  00:8744                      	
     940.  00:8744  CD 62 87            	CALL	actualiza_escena_calavera
     941.  00:8747                      
     942.  00:8747                      	;pinto calaveras
     943.  00:8747  01 00 18            	LD		BC, TILMAP
     944.  00:874A  3E A9               	LD		 A, POSCALAVE1
     945.  00:874C  CD A9 82            	CALL	suma_A_BC
     946.  00:874F  D5                  	PUSH	DE
     947.  00:8750  56                  	LD		 D, (HL)
     948.  00:8751  CD 65 84            	CALL	pinta_tile_suelto
     949.  00:8754                      	
     950.  00:8754  01 00 18            	LD		BC, TILMAP
     951.  00:8757  3E B6               	LD		 A, POSCALAVE2
     952.  00:8759  CD A9 82            	CALL	suma_A_BC
     953.  00:875C  E1                  	POP		HL
     954.  00:875D  56                  	LD		 D, (HL)
     955.  00:875E  C3 65 84            	JP		pinta_tile_suelto	
     956.  00:8761                      fin_flip_calavera_esqueletos:
     957.  00:8761  00                  var_aux_calavera	DB	0;
     958.  00:8762                      
     959.  00:8762                      
     960.  00:8762                      ;;=====================================================
     961.  00:8762                      ;;ACTUALIZA_ESCENA_CALAVERA
     962.  00:8762                      ;;=====================================================	
     963.  00:8762                      ; función: 	modifica las siguiente calavera a mostrar
     964.  00:8762                      ; entrada: 	
     965.  00:8762                      ; salida: 	DE (iportante porque se usa fuera) y ESTRUCTURA_ESQUELETO.escena
     966.  00:8762                      ; toca:		TODOS.... muy importante DE
     967.  00:8762                      actualiza_escena_calavera:
     968.  00:8762                      	;consulta_escena
     969.  00:8762  DD 7E 05            	LD		 A, (IX + ESTRUCTURA_ESQUELETO.escena)
     970.  00:8765  32 61 87            	LD		(var_aux_calavera), A
     971.  00:8768  B7                  	OR		 A
     972.  00:8769  C2 6E 87            	JP		 NZ, .decrementa_escenas
     973.  00:876C  3E 04               	LD		 A, RESETESCENAESQUEL
     974.  00:876E                      .decrementa_escenas
     975.  00:876E  3D                  	DEC		 A
     976.  00:876F                      .fin_consulta_escena
     977.  00:876F  DD 77 05            	LD		 (IX + ESTRUCTURA_ESQUELETO.escena), A
     978.  00:8772                      	
     979.  00:8772  21 13 AB            	LD		HL, lista_escenas_calavera
     980.  00:8775  3A 61 87            	LD		 A, (var_aux_calavera)
     981.  00:8778  CD AF 82            	CALL	suma_A_HL
     982.  00:877B                      	
     983.  00:877B  54                  	LD		 D, H
     984.  00:877C  5D                  	LD		 E, L
     985.  00:877D                      fin_actualiza_escena_calavera:
     986.  00:877D  C9                  	RET
     987.  00:877E                      
     248   00:877E                      	
     249   00:877E                      	include "subr_puertas.asm"
       1.  00:877E                      ;;=====================================================
       2.  00:877E                      ;;SUBRUTINAS RELACIONADAS CON LAS PUERTAS
       3.  00:877E                      ;;=====================================================
       4.  00:877E                      
       5.  00:877E                      
       6.  00:877E                      ;;=====================================================
       7.  00:877E                      ;;VARIABLES
       8.  00:877E                      ;;=====================================================
       9.  00:877E                      
      10.  00:877E                      ;; arrays con mapa de tiles de las puertas
      11.  00:877E                      array_puerta_arriba:
      12.  00:877E  03 01 01 03         	DB	3,1,1,3
      13.  00:8782  01 01 01 01         	DB	1,1,1,1
      14.  00:8786  01 01 01 01         	DB	1,1,1,1
      15.  00:878A  01 01 01 01         	DB	1,1,1,1
      16.  00:878E  01 01 01 01         	DB	1,1,1,1
      17.  00:8792                      
      18.  00:8792                      array_puerta_derecha:
      19.  00:8792  01 03 03            	DB	1,3,3
      20.  00:8795  01 01 03            	DB	1,1,3
      21.  00:8798  01 01 01            	DB	1,1,1
      22.  00:879B  01 01 01            	DB	1,1,1
      23.  00:879E  01 01 01            	DB	1,1,1
      24.  00:87A1  02 01 01            	DB	2,1,1
      25.  00:87A4  04 02 01            	DB	4,2,1
      26.  00:87A7                      	
      27.  00:87A7                      array_puerta_abajo:			
      28.  00:87A7  01 01 01 01         	DB	1,1,1,1
      29.  00:87AB                      
      30.  00:87AB                      array_puerta_izquierda:
      31.  00:87AB  03 03 01            	DB	3,3,1
      32.  00:87AE  03 01 01            	DB	3,1,1
      33.  00:87B1  01 01 01            	DB	1,1,1
      34.  00:87B4  01 01 01            	DB	1,1,1
      35.  00:87B7  01 01 01            	DB	1,1,1
      36.  00:87BA  01 01 02            	DB	1,1,2
      37.  00:87BD  01 02 04            	DB	1,2,4
      38.  00:87C0                      
      39.  00:87C0                      array_escalera:
      40.  00:87C0                      	DB	5,5,5,5,5,5,5,5
      40.  00:87C0  05 05 05 05 05 05 05 05 
      41.  00:87C8                      	DB	5,0,0,0,1,1,1,5
      41.  00:87C8  05 00 00 00 01 01 01 05 
      42.  00:87D0                      	DB	5,0,0,0,1,1,1,5
      42.  00:87D0  05 00 00 00 01 01 01 05 
      43.  00:87D8                      	DB	5,0,0,6,6,6,6,5
      43.  00:87D8  05 00 00 06 06 06 06 05 
      44.  00:87E0                      	DB	5,0,6,6,6,6,6,5
      44.  00:87E0  05 00 06 06 06 06 06 05 
      45.  00:87E8                      	DB	5,6,6,6,6,6,6,5
      45.  00:87E8  05 06 06 06 06 06 06 05 
      46.  00:87F0                      
      47.  00:87F0                      
      48.  00:87F0                      
      49.  00:87F0                      lista_puertas:
      50.  00:87F0  00 (13)             puerta_arriba:		DS		ESTRUCTURA_PUERTA
      51.  00:87FD  00 (13)             puerta_derecha:		DS		ESTRUCTURA_PUERTA
      52.  00:880A  00 (13)             puerta_abajo:		DS		ESTRUCTURA_PUERTA
      53.  00:8817  00 (13)             puerta_izquierda:	DS		ESTRUCTURA_PUERTA
      54.  00:8824  00 (13)             puerta_escalera:	DS		ESTRUCTURA_PUERTA
      55.  00:8831                      
      56.  00:8831                      datos_puertas:
      57.  00:8831                      datos_puerta_escalera:
      58.  00:8831  00                  					DB		#00;0		; 0 no activa <>0 activo
      59.  00:8832  80                  					DB		#80;128		;punto x de la puerta para cuando se dispare encima
      60.  00:8833  30                  					DB		#30;48		;punto y de la puerta para cuando se dispare encima
      61.  00:8834  20                  					DB		#20;32		;radio x de la puerta para cuando se dispare encima
      62.  00:8835  18                  					DB		#18;24		;radio y de la puerta para cuando se dispare encima
      63.  00:8836  AC 88               					DW		accion_puerta_arriba;función para acción de cada tipo de puerta
      64.  00:8838  C0 87               					DW		array_escalera		;puntero al array con los tiles de las puertas
      65.  00:883A  6C 18               					DW		TILMAP + POSESCALERA
      66.  00:883C  06                  					DB		6			;alto/filas
      67.  00:883D  08                  					DB		8			;ancho/columnas
      68.  00:883E                      
      69.  00:883E                      datos_puerta_arriba:
      70.  00:883E  00                  					DB		#00;0		;0 no activa <>0 activo
      71.  00:883F  80                  					DB		#80;128		;punto x de la puerta para cuando se dispare encima
      72.  00:8840  34                  					DB		#34;52		;punto y de la puerta para cuando se dispare encima
      73.  00:8841  10                  					DB		#10;16		;radio x de la puerta para cuando se dispare encima
      74.  00:8842  14                  					DB		#14;20		;radio y de la puerta para cuando se dispare encima
      75.  00:8843  AC 88               					DW		accion_puerta_arriba	;función para acción de cada tipo de puerta
      76.  00:8845  7E 87               					DW		array_puerta_arriba		;puntero al array con los tiles de las puertas
      77.  00:8847  8E 18               					DW		TILMAP + POSPUERARRI
      78.  00:8849  05                  					DB		5			;alto/filas
      79.  00:884A  04                  					DB		4			;ancho/columnas
      80.  00:884B                      
      81.  00:884B                      datos_puerta_derecha:
      82.  00:884B  00                  					DB		#00;0		;0 no activa <>0 activo
      83.  00:884C  EC                  					DB		#EC;236		;punto x de la puerta para cuando se dispare encima
      84.  00:884D  54                  					DB		#54;84		;punto y de la puerta para cuando se dispare encima
      85.  00:884E  0C                  					DB		#0C;12		;radio x de la puerta para cuando se dispare encima
      86.  00:884F  14                  					DB		#14;20		;radio y de la puerta para cuando se dispare encima
      87.  00:8850  CF 88               					DW		accion_puerta_derecha	;función para acción de cada tipo de puerta
      88.  00:8852  92 87               					DW		array_puerta_derecha	;puntero al array con los tiles de las puertas
      89.  00:8854  FC 18               					DW		TILMAP + POSPUERDERE
      90.  00:8856  07                  					DB		7			;alto/filas
      91.  00:8857  03                  					DB		3			;ancho/columnas
      92.  00:8858                      					
      93.  00:8858                      datos_puerta_abajo:
      94.  00:8858  00                  					DB		#00;0		;0 no activa <>0 activo
      95.  00:8859  80                  					DB		#80;128		;punto x de la puerta para cuando se dispare encima
      96.  00:885A  7C                  					DB		#7C;124		;punto y de la puerta para cuando se dispare encima
      97.  00:885B  05                  					DB		#05;5		;radio x de la puerta para cuando se dispare encima  **********************************
      98.  00:885C  10                  					DB		#10;16		;radio y de la puerta para cuando se dispare encima
      99.  00:885D  DC 88               					DW		accion_puerta_abajo		;función para acción de cada tipo de puerta
     100.  00:885F  A7 87               					DW		array_puerta_abajo		;puntero al array con los tiles de las puertas
     101.  00:8861  EE 19               					DW		TILMAP + POSPUERABAJ
     102.  00:8863  01                  					DB		1			;alto/filas
     103.  00:8864  04                  					DB		4			;ancho/columnas
     104.  00:8865                      
     105.  00:8865                      datos_puerta_izquierda:
     106.  00:8865  00                  					DB		#00;0		;0 no activa <>0 activo
     107.  00:8866  18                  					DB		#18;24		;punto x de la puerta para cuando se dispare encima
     108.  00:8867  54                  					DB		#54;84		;punto y de la puerta para cuando se dispare encima
     109.  00:8868  0C                  					DB		#0C;12		;radio x de la puerta para cuando se dispare encima
     110.  00:8869  14                  					DB		#14;20		;radio y de la puerta para cuando se dispare encima
     111.  00:886A  FF 88               					DW		accion_puerta_izquierda	;función para acción de cada tipo de puerta
     112.  00:886C  AB 87               					DW		array_puerta_izquierda	;puntero al array con los tiles de las puertas
     113.  00:886E  E1 18               					DW		TILMAP + POSPUERIZQU
     114.  00:8870  07                  					DB		7			;alto/filas
     115.  00:8871  03                  					DB		3			;ancho/columnas
     116.  00:8872                      
     117.  00:8872                      
     118.  00:8872                      
     119.  00:8872                      ;;=====================================================
     120.  00:8872                      ;;SUBRUTINAS
     121.  00:8872                      ;;=====================================================
     122.  00:8872                      
     123.  00:8872                      
     124.  00:8872                      ;;=====================================================
     125.  00:8872                      ;;INICIALIZA_PUERTAS
     126.  00:8872                      ;;=====================================================	
     127.  00:8872                      ; función: 	inicializa las variables de estructuras de ayuda del array lista_puertas
     128.  00:8872                      ; entrada: 	*********************datos_delasdistintasayudas, variable estructura_ayuda_ayudaquesea
     129.  00:8872                      ; salida: 	lista_ayudas
     130.  00:8872                      ; toca:		-
     131.  00:8872                      inicializa_puertas:
     132.  00:8872  E5                  	PUSH	HL
     133.  00:8873  C5                  	PUSH	BC
     134.  00:8874  D5                  	PUSH	DE
     135.  00:8875                      	
     136.  00:8875                      	;inicializa puerta escalera
     137.  00:8875  21 31 88            	LD		HL, datos_puerta_escalera	;origen
     138.  00:8878  11 24 88            	LD		DE, puerta_escalera			;destino
     139.  00:887B  CD A6 88            	CALL	carga_datos_puerta
     140.  00:887E                      
     141.  00:887E                      	;inicializa puerta arriba
     142.  00:887E  21 3E 88            	LD		HL, datos_puerta_arriba		;origen
     143.  00:8881  11 F0 87            	LD		DE, puerta_arriba			;destino
     144.  00:8884  CD A6 88            	CALL	carga_datos_puerta
     145.  00:8887                      	
     146.  00:8887                      	;inicializa puerta derecha
     147.  00:8887  21 4B 88            	LD		HL, datos_puerta_derecha	;origen
     148.  00:888A  11 FD 87            	LD		DE, puerta_derecha			;destino
     149.  00:888D  CD A6 88            	CALL	carga_datos_puerta
     150.  00:8890                      	
     151.  00:8890                      	;inicializa puerta abajo
     152.  00:8890  21 58 88            	LD		HL, datos_puerta_abajo		;origen
     153.  00:8893  11 0A 88            	LD		DE, puerta_abajo			;destino
     154.  00:8896  CD A6 88            	CALL	carga_datos_puerta
     155.  00:8899                      	
     156.  00:8899                      	;inicializa puerta izquierda
     157.  00:8899  21 65 88            	LD		HL, datos_puerta_izquierda	;origen
     158.  00:889C  11 17 88            	LD		DE, puerta_izquierda		;destino
     159.  00:889F  CD A6 88            	CALL	carga_datos_puerta
     160.  00:88A2                      	
     161.  00:88A2  D1                  	POP		DE
     162.  00:88A3  C1                  	POP		BC
     163.  00:88A4  E1                  	POP		HL
     164.  00:88A5                      fin_inicializa_puertas:
     165.  00:88A5  C9                  	RET
     166.  00:88A6                      
     167.  00:88A6                      
     168.  00:88A6                      
     169.  00:88A6                      ;;=====================================================
     170.  00:88A6                      ;;CARGA_DATOS_PUERTA
     171.  00:88A6                      ;;=====================================================	
     172.  00:88A6                      ; función: 	carga los datos de la puerta de una variable con los datos de la puerta
     173.  00:88A6                      ; entrada
     174.  00:88A6                      ;  hl: origen de datos
     175.  00:88A6                      ;  de: destino de datos
     176.  00:88A6                      ; salida: 	-
     177.  00:88A6                      ; toca:		HL, DE, BC
     178.  00:88A6                      carga_datos_puerta:
     179.  00:88A6  01 0D 00            	LD		BC, ESTRUCTURA_PUERTA ;bytes a mover (el nombre de la estructura equivale al tamaño de la estructura en bytes)
     180.  00:88A9  ED B0               	LDIR
     181.  00:88AB                      fin_carga_datos_puerta:
     182.  00:88AB  C9                  	RET
     183.  00:88AC                      
     184.  00:88AC                      ;;=====================================================
     185.  00:88AC                      ;;ACCION_PUERTA_ARRIBA
     186.  00:88AC                      ;;=====================================================	
     187.  00:88AC                      ; función: 	
     188.  00:88AC                      ; entrada: 	
     189.  00:88AC                      ; salida: 	
     190.  00:88AC                      accion_puerta_arriba:
     191.  00:88AC  CD 9A 82            	CALL	pinta_blanco_mapa
     192.  00:88AF                      	
     193.  00:88AF  3A D4 AA            	LD		 A, (prota_pos_mapy)
     194.  00:88B2  3C                  	INC		 A
     195.  00:88B3                      	
     196.  00:88B3  FE 07               	CP		 7
     197.  00:88B5  C2 C9 88            	JP		NZ, .no_cambia_nivel
     198.  00:88B8                      .si_cambia_nivel:	
     199.  00:88B8                      	;aquí hay que poner texto de cambio de nivel  ;***************************************************************
     200.  00:88B8                      
     201.  00:88B8                      	;reseteo fila
     202.  00:88B8  AF                  	XOR		 A
     203.  00:88B9  32 D4 AA            	LD		(prota_pos_mapy), A
     204.  00:88BC                      	;incremento nivel
     205.  00:88BC  3A D0 AA            	LD		 A, (prota_nivel)
     206.  00:88BF  3C                  	INC		 A
     207.  00:88C0  32 D0 AA            	LD		(prota_nivel), A
     208.  00:88C3                      	;reflejo en pantalla cambio de nivel
     209.  00:88C3  CD A2 82            	CALL	cambio_nivel
     210.  00:88C6  C3 CC 88            	JP		.fin_cambia_nivel
     211.  00:88C9                      .no_cambia_nivel:
     212.  00:88C9  32 D4 AA            	LD		 (prota_pos_mapy), A
     213.  00:88CC                      .fin_cambia_nivel:
     214.  00:88CC  C3 83 82            	JP		entra_habitacion
     215.  00:88CF                      fin_accion_puerta_arriba:
     216.  00:88CF                      
     217.  00:88CF                      
     218.  00:88CF                      ;;=====================================================
     219.  00:88CF                      ;;ACCION_PUERTA_DERECHA
     220.  00:88CF                      ;;=====================================================	
     221.  00:88CF                      ; función: 	
     222.  00:88CF                      ; entrada: 	
     223.  00:88CF                      ; salida: 	
     224.  00:88CF                      accion_puerta_derecha:
     225.  00:88CF  CD 9A 82            	CALL	pinta_blanco_mapa
     226.  00:88D2                      	
     227.  00:88D2  3A D3 AA            	LD		 A, (prota_pos_mapx)
     228.  00:88D5  3C                  	INC		 A
     229.  00:88D6  32 D3 AA            	LD		 (prota_pos_mapx), A
     230.  00:88D9                      
     231.  00:88D9  C3 83 82            	JP		entra_habitacion
     232.  00:88DC                      fin_accion_puerta_derecha:
     233.  00:88DC                      	
     234.  00:88DC                      
     235.  00:88DC                      ;;=====================================================
     236.  00:88DC                      ;;ACCION_PUERTA_ABAJO
     237.  00:88DC                      ;;=====================================================	
     238.  00:88DC                      ; función: 	
     239.  00:88DC                      ; entrada: 	
     240.  00:88DC                      ; salida: 	
     241.  00:88DC                      accion_puerta_abajo:
     242.  00:88DC  CD 9A 82            	CALL	pinta_blanco_mapa
     243.  00:88DF                      	
     244.  00:88DF  3A D4 AA            	LD		 A, (prota_pos_mapy)
     245.  00:88E2  3D                  	DEC		 A
     246.  00:88E3                      	;~ OR		 A
     247.  00:88E3                      	;~ JP		NC, .no_cambia_nivel				;no entiendo por qué no funciona... preguntar fernando
     248.  00:88E3  FE FF               	CP		-1
     249.  00:88E5  20 12               	JR		NZ, .no_cambia_nivel
     250.  00:88E7                      .si_cambia_nivel:	
     251.  00:88E7                      	;aquí hay que poner texto de cambio de nivel  ;***************************************************************
     252.  00:88E7                      
     253.  00:88E7                      	;reseteo fila
     254.  00:88E7  3E 06               	LD		 A, 6
     255.  00:88E9  32 D4 AA            	LD		(prota_pos_mapy), A
     256.  00:88EC                      	;decremento nivel
     257.  00:88EC  3A D0 AA            	LD		 A, (prota_nivel)
     258.  00:88EF  3D                  	DEC		 A
     259.  00:88F0  32 D0 AA            	LD		(prota_nivel), A
     260.  00:88F3                      	;reflejo en pantalla cambio de nivel
     261.  00:88F3  CD A2 82            	CALL	cambio_nivel
     262.  00:88F6  C3 FC 88            	JP		.fin_cambia_nivel
     263.  00:88F9                      .no_cambia_nivel:
     264.  00:88F9  32 D4 AA            	LD		 (prota_pos_mapy), A
     265.  00:88FC                      .fin_cambia_nivel:
     266.  00:88FC  C3 83 82            	JP		entra_habitacion
     267.  00:88FF                      fin_accion_puerta_abajo:
     268.  00:88FF                      	
     269.  00:88FF                      	
     270.  00:88FF                      ;;=====================================================
     271.  00:88FF                      ;;ACCION_PUERTA_IZQUIERDA
     272.  00:88FF                      ;;=====================================================	
     273.  00:88FF                      ; función: 	
     274.  00:88FF                      ; entrada: 	
     275.  00:88FF                      ; salida: 	
     276.  00:88FF                      accion_puerta_izquierda:
     277.  00:88FF  CD 9A 82            	CALL	pinta_blanco_mapa
     278.  00:8902                      
     279.  00:8902  3A D3 AA            	LD		 A, (prota_pos_mapx)
     280.  00:8905  3D                  	DEC		 A
     281.  00:8906  32 D3 AA            	LD		 (prota_pos_mapx), A
     282.  00:8909                      
     283.  00:8909  C3 83 82            	JP		entra_habitacion
     284.  00:890C                      fin_accion_puerta_izquierda:
     285.  00:890C                      	
     286.  00:890C                      
     287.  00:890C                      ;;=====================================================
     288.  00:890C                      ;;PINTA_PUERTAS
     289.  00:890C                      ;;=====================================================	
     290.  00:890C                      ; función: 	examina A y mira si tiene que pintar puertas de los lados, arriba o abrajo o las escaleras (o no)
     291.  00:890C                      ; entrada: 	habitacion_actual 1 escalera 1 puerta arriba 1 pu der 1 pu aba 1 pu izq (si es 0 pinta pared)
     292.  00:890C                      ; salida: 	-
     293.  00:890C                      ; toca:		todo
     294.  00:890C                      pinta_puertas:
     295.  00:890C  CD FF 81            	CALL	localiza_info_habitacion	;busca qué puertas debe pintar y lo mete en habitación_actual
     296.  00:890F                      
     297.  00:890F  CD 45 8A            	CALL	desactiva_todas_puertas
     298.  00:8912                      
     299.  00:8912                      	;examina puerta arrba
     300.  00:8912  3A A2 A7            	LD		 A, (habitacion_actual)
     301.  00:8915  CB 5F               	BIT		 3, A					
     302.  00:8917  CA 25 89            	JP		 Z, .fin_puerta_arriba		;tiene puerta arriba?
     303.  00:891A  CD 69 89            		CALL	pinta_puerta_arr		;pinto puerta ;si es de la fila 7 los datos de la pueta de arriba serán los de una escalera
     304.  00:891D  DD 21 F0 87         		LD		IX, puerta_arriba		
     305.  00:8921  DD 36 00 01         		LD		(IX), 1					;activo puerta
     306.  00:8925                      .fin_puerta_arriba:
     307.  00:8925                      
     308.  00:8925                      	;examina puerta derecha
     309.  00:8925  3A A2 A7            	LD		 A, (habitacion_actual)
     310.  00:8928  CB 57               	BIT		 2, A
     311.  00:892A  CA 38 89            	JP		 Z, .fin_puerta_derecha		;tiene puerta derecha?
     312.  00:892D  CD 82 89            		CALL	pinta_puerta_der		;pinto puerta
     313.  00:8930  DD 21 FD 87         		LD		IX, puerta_derecha
     314.  00:8934  DD 36 00 01         		LD		(IX), 1					;activo puerta
     315.  00:8938                      .fin_puerta_derecha:
     316.  00:8938                      
     317.  00:8938                      	;examina puerta abajo
     318.  00:8938  3A A2 A7            	LD		 A, (habitacion_actual)
     319.  00:893B  CB 4F               	BIT		 1, A
     320.  00:893D  CA 4B 89            	JP		 Z, .fin_puerta_abajo		;tiene puerta derecha?
     321.  00:8940  CD 5F 89            		CALL	pinta_puerta_aba		;pinto puerta
     322.  00:8943  DD 21 0A 88         		LD		IX, puerta_abajo	
     323.  00:8947  DD 36 00 01         		LD		(IX), 1					;activo puerta
     324.  00:894B                      .fin_puerta_abajo:
     325.  00:894B                      
     326.  00:894B                      	;examina puerta izquierda
     327.  00:894B  3A A2 A7            	LD		 A, (habitacion_actual)
     328.  00:894E  CB 47               	BIT		 0, A
     329.  00:8950  CA 5E 89            	JP		 Z, fin_pinta_puertas		;tiene puerta derecha?
     330.  00:8953  CD 8C 89            		CALL	pinta_puerta_izq		;pinto puerta
     331.  00:8956  DD 21 17 88         		LD		IX, puerta_izquierda	
     332.  00:895A  DD 36 00 01         		LD		(IX), 1					;activo puerta
     333.  00:895E                      fin_pinta_puertas:
     334.  00:895E  C9                  	RET
     335.  00:895F                      
     336.  00:895F                      
     337.  00:895F                      ;;=====================================================
     338.  00:895F                      ;;PINTA_PUERTA_ABA
     339.  00:895F                      ;;=====================================================	
     340.  00:895F                      ; función: 	pinta la puerta de abajo
     341.  00:895F                      ; entrada: 	puerta_abajo
     342.  00:895F                      ; salida: 	-
     343.  00:895F                      ; toca:		A, HL,BC, DE
     344.  00:895F                      pinta_puerta_aba:
     345.  00:895F  DD 21 0A 88         	LD		IX, puerta_abajo
     346.  00:8963  CD 96 89            	CALL	actualiza_variables_pinta_array
     347.  00:8966                      		
     348.  00:8966  C3 BC 85            	JP		pinta_array
     349.  00:8969                      fin_pinta_puerta_aba:
     350.  00:8969                      
     351.  00:8969                      
     352.  00:8969                      ;;=====================================================
     353.  00:8969                      ;;PINTA_PUERTA_ARR
     354.  00:8969                      ;;=====================================================	
     355.  00:8969                      ; función: 	pinta la puerta de arriba
     356.  00:8969                      ; entrada: 	puerta_arriba
     357.  00:8969                      ; salida: 	-
     358.  00:8969                      ; toca:		IX
     359.  00:8969                      pinta_puerta_arr:
     360.  00:8969  3A D4 AA            	LD		 A, (prota_pos_mapy)
     361.  00:896C  FE 06               	CP		 6								;en la fila 6 la única puerta arriba será una escalera
     362.  00:896E  C2 78 89            	JP		NZ, .pinta_puerta_normal
     363.  00:8971                      .pinta_puerta_escalera
     364.  00:8971  DD 21 24 88         		LD		IX, puerta_escalera
     365.  00:8975  C3 7C 89            		JP		.fin_si
     366.  00:8978                      .pinta_puerta_normal
     367.  00:8978  DD 21 F0 87         		LD		IX, puerta_arriba	
     368.  00:897C                      .fin_si
     369.  00:897C  CD 96 89            	CALL	actualiza_variables_pinta_array
     370.  00:897F  C3 BC 85            	JP		pinta_array
     371.  00:8982                      fin_pinta_puerta_arr:
     372.  00:8982                      
     373.  00:8982                      
     374.  00:8982                      ;;=====================================================
     375.  00:8982                      ;;PINTA_PUERTA_DER
     376.  00:8982                      ;;=====================================================	
     377.  00:8982                      ; función: 	pinta la puerta de la derecha
     378.  00:8982                      ; entrada: 	puerta_derecha
     379.  00:8982                      ; salida: 	-
     380.  00:8982                      ; toca:		HL,BC, DE
     381.  00:8982                      pinta_puerta_der:
     382.  00:8982  DD 21 FD 87         	LD		IX, puerta_derecha
     383.  00:8986  CD 96 89            	CALL	actualiza_variables_pinta_array
     384.  00:8989                      	
     385.  00:8989  C3 BC 85            	JP		pinta_array
     386.  00:898C                      fin_pinta_puerta_der:
     387.  00:898C                      
     388.  00:898C                      	
     389.  00:898C                      ;;=====================================================
     390.  00:898C                      ;;PINTA_PUERTA_IZQ
     391.  00:898C                      ;;=====================================================	
     392.  00:898C                      ; función: 	pinta la puerta de la izquierda
     393.  00:898C                      ; entrada: 	puerta_izquierda
     394.  00:898C                      ; salida: 	-
     395.  00:898C                      ; toca:		HL,BC, DE
     396.  00:898C                      pinta_puerta_izq:
     397.  00:898C  DD 21 17 88         	LD		IX, puerta_izquierda
     398.  00:8990  CD 96 89            	CALL	actualiza_variables_pinta_array
     399.  00:8993                      	
     400.  00:8993  C3 BC 85            	JP		pinta_array
     401.  00:8996                      fin_pinta_puerta_izq:
     402.  00:8996                      
     403.  00:8996                      
     404.  00:8996                      ;;=====================================================
     405.  00:8996                      ;;FIN_ACTUALIZA_VARIABLES_PINTA_ARRAY
     406.  00:8996                      ;;=====================================================	
     407.  00:8996                      ; función: 	como el código es el mismo en esta subrutia se actualizan los valores de wordaux2, wordaux1, byteaux1, byteaux2
     408.  00:8996                      ; entrada: 	IX apuntando a la estructura de una puerta
     409.  00:8996                      ; salida: 	-
     410.  00:8996                      ; toca:		A,HL,BC, DE
     411.  00:8996                      actualiza_variables_pinta_array:
     412.  00:8996  DD 6E 07            	LD		 L, (IX + ESTRUCTURA_PUERTA.tiles_puerta)	;guardo puntero al array a pintar (como pasar por referencia)
     413.  00:8999  DD 66 08            	LD		 H, (IX + ESTRUCTURA_PUERTA.tiles_puerta + 1)
     414.  00:899C  22 FE 85            	LD		(wordaux2), HL						;en la variable wordaux2
     415.  00:899F                      	
     416.  00:899F  DD 6E 09            	LD		 L, (IX + ESTRUCTURA_PUERTA.pos_en_tilemap)	;guardo puntero al array a pintar (como pasar por referencia)
     417.  00:89A2  DD 66 0A            	LD		 H, (IX + ESTRUCTURA_PUERTA.pos_en_tilemap + 1)
     418.  00:89A5  22 FC 85            	LD		(wordaux1), HL						;guarda valor pos tilemap en wordaux1
     419.  00:89A8                      	
     420.  00:89A8  DD 7E 0B            	LD		 A, (IX + ESTRUCTURA_PUERTA.alto)	;nº de filas
     421.  00:89AB  32 00 86            	LD		(byteaux1), A
     422.  00:89AE                      	
     423.  00:89AE  DD 7E 0C            	LD		 A, (IX + ESTRUCTURA_PUERTA.ancho)	;nº de columnas
     424.  00:89B1  32 01 86            	LD		(byteaux2), A
     425.  00:89B4                      fin_actualiza_variables_pinta_array:
     426.  00:89B4  C9                  	RET
     427.  00:89B5                      
     428.  00:89B5                      
     429.  00:89B5                      
     430.  00:89B5                      ;;=====================================================
     431.  00:89B5                      ;;CHECK_COLISIONES_PUERTAS
     432.  00:89B5                      ;;=====================================================	
     433.  00:89B5                      ; función: 	examina si se ha disparado sobre ua puerta activa, si es así, ejecuta la acción correspondiente
     434.  00:89B5                      ; entrada: 	puerta_arriba, puerta_derecha, puerta_abajo, puerta_izquierda
     435.  00:89B5                      ; salida: 	-
     436.  00:89B5                      ; toca:		todo
     437.  00:89B5                      check_colisiones_puertas:
     438.  00:89B5                      .examina_puerta_arriba:
     439.  00:89B5  DD 21 F0 87         	LD		IX, puerta_arriba
     440.  00:89B9  DD 7E 00            	LD		 A, (IX)
     441.  00:89BC  B7                  	OR		 A							;está activa esta puerta?
     442.  00:89BD  CA CB 89            	JP		 Z, .examina_puerta_derecha
     443.  00:89C0                      	
     444.  00:89C0  CD 14 8A            	CALL	check_colision_puerta		;aquí ya es cosa de ver colisiones prota/puerta_izquierda
     445.  00:89C3                      	;recibe valor A
     446.  00:89C3  F6 00               	OR		 0							;hubo colisión?
     447.  00:89C5  CA CB 89            	JP		 Z, .examina_puerta_derecha	;no hubo colisión por lo que examina puerta siguiente
     448.  00:89C8                      	;hubo colisión
     449.  00:89C8                      	;EJECUTA ACCIÓN Y SALE DE LA RUTINA	
     450.  00:89C8  C3 08 8A            	JP		.ejecuta_accion_y_sale
     451.  00:89CB                      	
     452.  00:89CB                      .examina_puerta_derecha:
     453.  00:89CB  DD 21 FD 87         	LD		IX, puerta_derecha
     454.  00:89CF  DD 7E 00            	LD		 A, (IX)
     455.  00:89D2  B7                  	OR		 A							;está activa esta puerta?
     456.  00:89D3  CA E1 89            	JP		 Z, .examina_puerta_abajo
     457.  00:89D6  CD 14 8A            	CALL	check_colision_puerta		;aquí ya es cosa de ver colisiones prota/puerta_derecha
     458.  00:89D9                      	;recibe valor
     459.  00:89D9  F6 00               	OR		 0							;hubo colisión?
     460.  00:89DB  CA E1 89            	JP		 Z, .examina_puerta_abajo	;no hubo colisión por lo que examina puerta siguiente
     461.  00:89DE                      	;hubo colisión
     462.  00:89DE                      	;EJECUTA ACCIÓN Y SALE DE LA RUTINA
     463.  00:89DE  C3 08 8A            	JP		.ejecuta_accion_y_sale
     464.  00:89E1                      	
     465.  00:89E1                      .examina_puerta_abajo:
     466.  00:89E1  DD 21 0A 88         	LD		IX, puerta_abajo
     467.  00:89E5  DD 7E 00            	LD		 A, (IX)
     468.  00:89E8  B7                  	OR		 A							;está activa esta puerta?
     469.  00:89E9  CA F7 89            	JP		 Z, .examina_puerta_izquierda
     470.  00:89EC  CD 14 8A            	CALL	check_colision_puerta		;aquí ya es cosa de ver colisiones prota/puerta_izquierda
     471.  00:89EF                      	
     472.  00:89EF  F6 00               	OR		 0							;hubo colisión?
     473.  00:89F1  CA F7 89            	JP		 Z, .examina_puerta_izquierda;no hubo colisión por lo que examina puerta siguiente
     474.  00:89F4                      	;hubo colisión
     475.  00:89F4                      	;EJECUTA ACCIÓN Y SALE DE LA RUTINA
     476.  00:89F4  C3 08 8A            	JP		.ejecuta_accion_y_sale
     477.  00:89F7                      	
     478.  00:89F7                      .examina_puerta_izquierda:
     479.  00:89F7  DD 21 17 88         	LD		IX, puerta_izquierda
     480.  00:89FB  DD 7E 00            	LD		 A, (IX)
     481.  00:89FE  B7                  	OR		 A							;está activa esta puerta?
     482.  00:89FF  CA 13 8A            	JP		 Z, fin_check_colisiones_puertas
     483.  00:8A02  CD 14 8A            	CALL	check_colision_puerta		;aquí ya es cosa de ver colisiones prota/puerta_izquierda
     484.  00:8A05                      	
     485.  00:8A05  F6 00               	OR		 0							;hubo colisión?
     486.  00:8A07  C8                  	RET		 Z							;es la última puerta a mirar, si no hubo colisión salimos
     487.  00:8A08                      	;hubo colisión
     488.  00:8A08                      	;EJECUTA ACCIÓN Y SALE DE LA RUTINA
     489.  00:8A08                      	;JP		.ejecuta_accion_y_sale ;no necesaria
     490.  00:8A08                      
     491.  00:8A08                      .ejecuta_accion_y_sale
     492.  00:8A08  21 13 8A            	LD		HL, fin_check_colisiones_puertas ;se guarda dónde volver
     493.  00:8A0B  E5                  	PUSH	HL
     494.  00:8A0C                      	
     495.  00:8A0C  DD 6E 05            	LD		 L, (IX + ESTRUCTURA_PUERTA.accion)
     496.  00:8A0F  DD 66 06            	LD		 H, (IX + ESTRUCTURA_PUERTA.accion + 1)
     497.  00:8A12  E9                  	JP		(HL)
     498.  00:8A13                      fin_check_colisiones_puertas:
     499.  00:8A13  C9                  	RET
     500.  00:8A14                      
     501.  00:8A14                      
     502.  00:8A14                      ;;=====================================================
     503.  00:8A14                      ;;CHECK_COLISION_PUERTA
     504.  00:8A14                      ;;=====================================================	
     505.  00:8A14                      ; función: 	revisa (con enemigos+ayudas o puertas según si la habitación ha sido recorrida o no) las variables para ver si se disparó sobre ellas
     506.  00:8A14                      ; entrada: 	IX con el puntero a la puerta que se examina
     507.  00:8A14                      ; salida: 	A (0 no hay colisión con puerta / 1 sí la hay)
     508.  00:8A14                      ; toca:		HL,BC, DE
     509.  00:8A14                      check_colision_puerta:
     510.  00:8A14                      .deteccioncolision_paso1:
     511.  00:8A14  FD 21 C0 AA         	LD		IY, prota	;IY punto de mira / IX puerta
     512.  00:8A18  FD 7E 00            	LD		 A, (IY + ESTRUCTURA_PUNTOMIRA.posx)
     513.  00:8A1B  C6 08               	ADD		 8			;8-es fijo, offset del punto de mira ya que se mueve según la esquina superior izquierda y el centro del punto de mira está en el centro del sprite
     514.  00:8A1D                      	
     515.  00:8A1D                      	;ya tengo en A la coordenada X del centro del punto de mira					
     516.  00:8A1D  DD 96 01            	SUB		(IX + ESTRUCTURA_PUERTA.posx)	;le resto el punto x en la puerta
     517.  00:8A20                      	
     518.  00:8A20  D2 25 8A            	JP		NC, .deteccioncolision_paso2	;si no es negativo comparo con el radio
     519.  00:8A23                      
     520.  00:8A23  ED 44               	NEG										;si es negativo lo niego (valor absoluto)
     521.  00:8A25                      	
     522.  00:8A25                      .deteccioncolision_paso2:
     523.  00:8A25  DD BE 03            	CP		(IX + ESTRUCTURA_PUERTA.radiox)	;comparo con el radio X de la puerta
     524.  00:8A28                      	
     525.  00:8A28  DA 2D 8A            	JP		 C, .deteccioncolision_paso3	;SI NC la distancia es >= por lo que sale y no es necesario verificar nada más
     526.  00:8A2B                      	
     527.  00:8A2B  AF                  	XOR		 A								;el resultado es falso y se guarda en A y ya no hay que seguir coprobando
     528.  00:8A2C  C9                  	RET
     529.  00:8A2D                      	
     530.  00:8A2D                      .deteccioncolision_paso3:					;la distancia X es válida, comprobamos la distancia Y
     531.  00:8A2D  FD 7E 01            	LD		 A, (IY + ESTRUCTURA_PUNTOMIRA.posy)
     532.  00:8A30  C6 08               	ADD		 8								;le sumo el offset del punto de mira (8 es fijo)
     533.  00:8A32                      
     534.  00:8A32                      	;ya tengo en A la coordenada Y del centro del punto de mira					
     535.  00:8A32  DD 96 02            	SUB		(IX + ESTRUCTURA_PUERTA.posy)	;le resto el punto y en la puerta
     536.  00:8A35                      	
     537.  00:8A35  D2 3A 8A            	JP		NC, .deteccioncolision_paso4	;si no es negativo comparo con el radio
     538.  00:8A38                      
     539.  00:8A38  ED 44               	NEG										;si es negativo lo niego (valor absoluto)
     540.  00:8A3A                      
     541.  00:8A3A                      .deteccioncolision_paso4:
     542.  00:8A3A  DD BE 04            	CP		(IX + ESTRUCTURA_PUERTA.radioy)	;comparo con el radio Y de la puerta
     543.  00:8A3D                      
     544.  00:8A3D  DA 42 8A            	JP		 C, .deteccioncolision_paso5	;SI NC la distancia es >= por lo que sale y no es necesario verificar nada más
     545.  00:8A40                      	
     546.  00:8A40  AF                  	XOR		 A								;el resultado es falso y se guarda en A un 0 y al ser la 2º comprobación salimos
     547.  00:8A41  C9                  	RET
     548.  00:8A42                      
     549.  00:8A42                      .deteccioncolision_paso5:
     550.  00:8A42  3E 01               	LD		 A, SI
     551.  00:8A44                      fin_check_colision_puerta:
     552.  00:8A44  C9                  	RET
     553.  00:8A45                      
     554.  00:8A45                      
     555.  00:8A45                      
     556.  00:8A45                      
     557.  00:8A45                      	
     558.  00:8A45                      ;;=====================================================
     559.  00:8A45                      ;;DESACTIVA_TODAS_PUERTAS
     560.  00:8A45                      ;;=====================================================	
     561.  00:8A45                      ; función: 	desactiva todas las puertas (es más rápido todas que mirar cuál estaba activa en la habitación aanterior) y ya se activarán las que se muestren
     562.  00:8A45                      ; entrada: 	puerta_arriba, puerta_derecha, puerta_abajo, puerta_izquierda
     563.  00:8A45                      ; salida: 	las estructuras de la puertas (entrada) con el valor activo a 0 (PUERTAINACT)
     564.  00:8A45                      ; toca:		IX
     565.  00:8A45                      desactiva_todas_puertas:
     566.  00:8A45  DD 21 F0 87         	LD		IX, puerta_arriba		;desactivo_puerta arriba
     567.  00:8A49  DD 36 00 00         	LD		(IX), INACTIVA
     568.  00:8A4D  DD 21 FD 87         	LD		IX, puerta_derecha		;desactivo_puerta derecha
     569.  00:8A51  DD 36 00 00         	LD		(IX), INACTIVA
     570.  00:8A55  DD 21 0A 88         	LD		IX, puerta_abajo		;desactivo_puerta abajo
     571.  00:8A59  DD 36 00 00         	LD		(IX), INACTIVA
     572.  00:8A5D  DD 21 17 88         	LD		IX, puerta_izquierda	;desactivo_puerta izquierda
     573.  00:8A61  DD 36 00 00         	LD		(IX), INACTIVA
     574.  00:8A65                      fin_desactiva_todas_puertas:
     575.  00:8A65  C9                  	RET
     576.  00:8A66                      
     250   00:8A66                      	
     251   00:8A66                      	include "subr_sprites.asm"
       1.  00:8A66                      
       2.  00:8A66                      ;;=====================================================
       3.  00:8A66                      ;;SUBRUTINAS ENCARGADAS DE MANEJAR LOS SPRITES
       4.  00:8A66                      ;;=====================================================	
       5.  00:8A66                      
       6.  00:8A66                      
       7.  00:8A66                      ;; PREGUNTAR SI A FERNANDO SI ES MEJOR USAR LISTAS O ALGO PARA AHORRAR CÓDIGO
       8.  00:8A66                      
       9.  00:8A66                      
      10.  00:8A66                      
      11.  00:8A66                      
      12.  00:8A66                      ;;=====================================================
      13.  00:8A66                      ;;CARGA_PATRONES_SPRITES_NIVEL
      14.  00:8A66                      ;;=====================================================	
      15.  00:8A66                      ; función: 	examina el nivel y carga los patrones específicos necesarios
      16.  00:8A66                      ; entrada: 	-
      17.  00:8A66                      ; salida: 	-
      18.  00:8A66                      ; toca: 	-
      19.  00:8A66                      carga_patrones_sprites_nivel:
      20.  00:8A66  CD 6A 8A            	CALL 	carga_patrones_nivel_comunes
      21.  00:8A69                      	
      22.  00:8A69  C9                  	RET		;*********************
      23.  00:8A6A                      	
      24.  00:8A6A                      	
      25.  00:8A6A                      	;POR AHORA ES TODO COMÚN ... CUANDO EL JUGADOR SE MUEVA LOS PATRONES SERÁN DEPENDIENDO DEL NIVEL
      26.  00:8A6A                      	; O NO Y LO QUE SE HACE ES PERSONALIZAR LA PANTALLA USANDO LOS MISMOS PATRONES PERO PINTANDO DISTINTOS
      27.  00:8A6A                      	; EN DISTINTOS SITIOS SEGÚN NIVEL
      28.  00:8A6A                      	
      29.  00:8A6A                      	;~ ;carga patrones no comunes
      30.  00:8A6A                      	;~ LD		 A, (prota_nivel)
      31.  00:8A6A                      	;~ OR		 A
      32.  00:8A6A                      	;~ JP		 Z, carga_patrones_sprites_nivel donde esté el prota
      33.  00:8A6A                      fin_carga_patrones_sprites_nivel:
      34.  00:8A6A                      
      35.  00:8A6A                      
      36.  00:8A6A                      ;;=====================================================
      37.  00:8A6A                      ;;CARGA_PATRONES_SPRITES_NIVEL_COMUNES
      38.  00:8A6A                      ;;=====================================================	
      39.  00:8A6A                      ; función: 	carga los patrones comunes en todos los niveles
      40.  00:8A6A                      ; entrada: 	-
      41.  00:8A6A                      ; salida: 	-
      42.  00:8A6A                      ; toca: 	-
      43.  00:8A6A                      carga_patrones_nivel_comunes:	
      44.  00:8A6A  21 22 9E            	LD		HL, sprites_comunes
      45.  00:8A6D  11 00 38            	LD		DE, SPRTBL
      46.  00:8A70  01 C0 00            	LD		BC, fin_sprites_comunes-sprites_comunes
      47.  00:8A73  C3 5C 00            	JP		LDIRVM
      48.  00:8A76                      fin_carga_patrones_nivel_comunes:
      49.  00:8A76                      
      50.  00:8A76                      
      51.  00:8A76                      ;;=====================================================
      52.  00:8A76                      ;;CARGA_PATRONES_SPRITES_NIVEL1
      53.  00:8A76                      ;;=====================================================	
      54.  00:8A76                      ; función: 	copia los patrones de los sprites que e van a usar en el nivel 1 en vram
      55.  00:8A76                      ; entrada: 	-
      56.  00:8A76                      ; salida: 	-
      57.  00:8A76                      ; toca: 	-
      58.  00:8A76                      carga_patrones_sprites_nivel1:
      59.  00:8A76                      
      60.  00:8A76                      	;~ ;sprite sprite_reliquia
      61.  00:8A76                      	;~ LD		HL,sprite_reliquia
      62.  00:8A76                      	;~ LD		DE,#3880
      63.  00:8A76                      	;~ LD		BC,32				;32 bytes (sprites de 2 x 2)
      64.  00:8A76                      	;~ CALL	LDIRVM
      65.  00:8A76                      
      66.  00:8A76                      fin_carga_patrones_sprites:
      67.  00:8A76  C9                  	RET
      68.  00:8A77                      
      69.  00:8A77                      
      70.  00:8A77                      ;;=====================================================
      71.  00:8A77                      ;;ACTUALIZA_ARRAY_SPRITES_VRAM
      72.  00:8A77                      ;;=====================================================	
      73.  00:8A77                      ; función: 	copia el array con los valores de los sprites (pos, color, plano) en VRAM
      74.  00:8A77                      ; entrada: 	-
      75.  00:8A77                      ; salida: 	-
      76.  00:8A77                      ; toca: 	todos los registros. Como me interesa la velocidad, si necesito copiar de algo lo hago fuera
      77.  00:8A77                      render_sprites:
      78.  00:8A77                      	;volcando el array con toda la info de los sprites a la zona de atributos de sprites
      79.  00:8A77  21 17 AB            	LD		HL,array_sprites
      80.  00:8A7A  11 00 1B            	LD		DE,SPRART
      81.  00:8A7D  01 80 00            	LD		BC,4 * 32				;32 sprites x 4 bytes controlando el sprite (Y, X, plano, color)
      82.  00:8A80  C3 5C 00            	JP		LDIRVM
      83.  00:8A83                      fin_actualiza_array_sprites_vram:
      84.  00:8A83                      
      85.  00:8A83                      
      86.  00:8A83                      ;;=====================================================
      87.  00:8A83                      ;;VUELCA_RESULTADO_PUNTOMIRA_ARRAY
      88.  00:8A83                      ;;=====================================================	
      89.  00:8A83                      ; función: 	coloca los valores del punto de mira en la variable array_sprites para ser volcados en VRAM
      90.  00:8A83                      ; entrada: 	array_sprites_pm, prota.XXXXX
      91.  00:8A83                      ; salida: 	-
      92.  00:8A83                      ; toca: 	-
      93.  00:8A83                      vuelca_resultado_puntomira_array:
      94.  00:8A83  DD 21 17 AB         	LD		IX, array_sprites_pm
      95.  00:8A87                      	;posición y de los dos sprites que conforman el punto de mira
      96.  00:8A87  3A C1 AA            	LD		 A, (prota.posy)
      97.  00:8A8A  DD 77 00            	LD		(IX  ), A
      98.  00:8A8D  DD 77 04            	LD		(IX+4), A
      99.  00:8A90                      	;posición x de los dos sprites que conforman el punto de mira
     100.  00:8A90  3A C0 AA            	LD		 A, (prota.posx)
     101.  00:8A93  DD 77 01            	LD		(IX+1), A
     102.  00:8A96  DD 77 05            	LD		(IX+5), A
     103.  00:8A99                      	;plano
     104.  00:8A99  DD 36 02 00         	LD		(IX+2), 0
     105.  00:8A9D  DD 36 06 04         	LD		(IX+6), 4	;al ser sprites de 16x16 hay que ir de 4 en 4
     106.  00:8AA1                      	;color
     107.  00:8AA1  3A C2 AA            	LD		 A, (prota.escena)
     108.  00:8AA4  B7                  	OR		 A
     109.  00:8AA5  C2 B1 8A            	JP		NZ,.codigo_color_2
     110.  00:8AA8                      .codigo_color_1:
     111.  00:8AA8  DD 36 03 0F         	LD		(IX+3), COLBLANCO
     112.  00:8AAC  DD 36 07 08         	LD		(IX+7), COLROJO
     113.  00:8AB0  C9                  	RET
     114.  00:8AB1                      .codigo_color_2:
     115.  00:8AB1  DD 36 03 08         	LD		(IX+3), COLROJO
     116.  00:8AB5  DD 36 07 0F         	LD		(IX+7), COLBLANCO
     117.  00:8AB9  C9                  	RET
     118.  00:8ABA                      fin_vuelca_resultado_puntomira_array:
     119.  00:8ABA                      
     120.  00:8ABA                      
     121.  00:8ABA                      ;;=====================================================
     122.  00:8ABA                      ;;CHECK_PLAYER
     123.  00:8ABA                      ;;=====================================================	
     124.  00:8ABA                      ; función: 	MIRA EL CONTROL Y APLICA LA LOGICA DE MOVIMIENTO DEL PROTAGONISTA
     125.  00:8ABA                      ; entrada: 	-
     126.  00:8ABA                      ; salida: 	-
     127.  00:8ABA                      ; toca: 	A
     128.  00:8ABA                      check_player:
     129.  00:8ABA  CD 5C 8B            	CALL	update_controllers_status
     130.  00:8ABD  B7                  	OR		 A
     131.  00:8ABE  C8                  	RET		 Z						;si no se ha pulsado nada no se necesita mirar nada
     132.  00:8ABF                      
     133.  00:8ABF  CB 1F               	RR		 A
     134.  00:8AC1  DC DA 8A            	CALL	 C, mueve_arriba
     135.  00:8AC4  CB 1F               	RR		 A
     136.  00:8AC6  DC F6 8A            	CALL	 C, mueve_abajo
     137.  00:8AC9  CB 1F               	RR		 A
     138.  00:8ACB  DC 05 8B            	CALL	 C, mueve_izquierda
     139.  00:8ACE  CB 1F               	RR		 A
     140.  00:8AD0  DC E7 8A            	CALL	 C, mueve_derecha
     141.  00:8AD3                      	
     142.  00:8AD3                      	;zona para mirar disparo Recibe A que tendrá 0000 0 0 X-letra M X-espacio 
     143.  00:8AD3  CD 12 8B            	CALL	mira_disparo
     144.  00:8AD6                      
     145.  00:8AD6  C3 83 8A            	JP		vuelca_resultado_puntomira_array
     146.  00:8AD9                      f;in_check_player:
     147.  00:8AD9  C9                  	RET
     148.  00:8ADA                      
     252   00:8ADA                      	
     253   00:8ADA                      	include "subr_teclado_joy.asm"
       1.  00:8ADA                      ;;=====================================================
       2.  00:8ADA                      ;;SUBRUTINAS QUE CAPTURAN EL JOYSTICK Y TECLADO Y MUEVEN PUNTO DE MIRA
       3.  00:8ADA                      ;;=====================================================
       4.  00:8ADA                      
       5.  00:8ADA                      ;;=====================================================
       6.  00:8ADA                      ;;MUEVE_ARRIBA
       7.  00:8ADA                      ;;=====================================================	
       8.  00:8ADA                      ; función: 	decrementa y si se no sale de los límites el valor del punto de mira a la derecha
       9.  00:8ADA                      ; entrada: 	-
      10.  00:8ADA                      ; salida: 	-
      11.  00:8ADA                      ; toca: 	-
      12.  00:8ADA                      mueve_arriba:
      13.  00:8ADA  F5                  	PUSH		AF
      14.  00:8ADB                      	
      15.  00:8ADB  3A C1 AA            	LD		 	 A, (prota.posy)
      16.  00:8ADE  3D                  	DEC			 A
      17.  00:8ADF  CA E5 8A            	JP			 Z,.no_decrementa_y
      18.  00:8AE2  32 C1 AA            	LD			(prota.posy), A
      19.  00:8AE5                      	
      20.  00:8AE5                      .no_decrementa_y:
      21.  00:8AE5  F1                  	POP			AF
      22.  00:8AE6                      fin_mueve_arriba:
      23.  00:8AE6  C9                  	RET
      24.  00:8AE7                      
      25.  00:8AE7                      
      26.  00:8AE7                      ;;=====================================================
      27.  00:8AE7                      ;;MUEVE_DERECHA
      28.  00:8AE7                      ;;=====================================================	
      29.  00:8AE7                      ; función: 	incrementa si se no sale de los límites el valor del punto de mira a la derecha
      30.  00:8AE7                      ; entrada: 	-
      31.  00:8AE7                      ; salida: 	-
      32.  00:8AE7                      ; toca: 	-
      33.  00:8AE7                      mueve_derecha:
      34.  00:8AE7  F5                  	PUSH		AF
      35.  00:8AE8                      	
      36.  00:8AE8  3A C0 AA            	LD		 	 A, (prota.posx)
      37.  00:8AEB  3C                  	INC			 A
      38.  00:8AEC  FE EF               	CP			 A, LIMPANTDER - 16
      39.  00:8AEE  CA F4 8A            	JP			 Z, .no_incrementa_x
      40.  00:8AF1  32 C0 AA            	LD			(prota.posx), A
      41.  00:8AF4                      	
      42.  00:8AF4                      .no_incrementa_x:
      43.  00:8AF4  F1                  	POP			AF
      44.  00:8AF5                      fin_mueve_derecha:
      45.  00:8AF5  C9                  	RET
      46.  00:8AF6                      
      47.  00:8AF6                      
      48.  00:8AF6                      ;;=====================================================
      49.  00:8AF6                      ;;MUEVE_ABAJO
      50.  00:8AF6                      ;;=====================================================	
      51.  00:8AF6                      ; función: 	incrementa y si se no sale de los límites el valor del punto de mira abajo
      52.  00:8AF6                      ; entrada: 	-
      53.  00:8AF6                      ; salida: 	-
      54.  00:8AF6                      ; toca: 	-
      55.  00:8AF6                      mueve_abajo:
      56.  00:8AF6  F5                  	PUSH		AF
      57.  00:8AF7                      	
      58.  00:8AF7  3A C1 AA            	LD		 	 A, (prota.posy)
      59.  00:8AFA  3C                  	INC			 A
      60.  00:8AFB  FE 70               	CP			 A, LIMPANTABA - 16
      61.  00:8AFD  CA 03 8B            	JP			 Z,.no_incrementa_y
      62.  00:8B00  32 C1 AA            	LD			(prota.posy), A
      63.  00:8B03                      	
      64.  00:8B03                      .no_incrementa_y:
      65.  00:8B03  F1                  	POP			AF
      66.  00:8B04                      fin_mueve_abajo:
      67.  00:8B04  C9                  	RET
      68.  00:8B05                      	
      69.  00:8B05                      	
      70.  00:8B05                      ;;=====================================================
      71.  00:8B05                      ;;MUEVE_IZQUIERDA
      72.  00:8B05                      ;;=====================================================	
      73.  00:8B05                      ; función: 	decrementa x si se no sale de los límites el valor del punto de mira a la izquierda
      74.  00:8B05                      ; entrada: 	-
      75.  00:8B05                      ; salida: 	-
      76.  00:8B05                      ; toca: 	-
      77.  00:8B05                      mueve_izquierda:
      78.  00:8B05  F5                  	PUSH		AF
      79.  00:8B06                      	
      80.  00:8B06  3A C0 AA            	LD		 	 A, (prota.posx)
      81.  00:8B09  3D                  	DEC			 A
      82.  00:8B0A                      ;	CP			 A, LIMPANTIZQ 			;no es necesario ya que es cero (Z)
      83.  00:8B0A  CA 10 8B            	JP			 Z,.no_decrementa_x
      84.  00:8B0D  32 C0 AA            	LD			(prota.posx), A
      85.  00:8B10                      	
      86.  00:8B10                      .no_decrementa_x:
      87.  00:8B10  F1                  	POP			AF
      88.  00:8B11                      fin_mueve_izquierda:
      89.  00:8B11  C9                  	RET
      90.  00:8B12                      
      91.  00:8B12                      
      92.  00:8B12                      
      93.  00:8B12                      ;;=====================================================
      94.  00:8B12                      ;;MIRA_DISPARO
      95.  00:8B12                      ;;=====================================================	
      96.  00:8B12                      ; función: 	Mira si se ha pulsado alguno de los dos disparos
      97.  00:8B12                      ; entrada: 	A que tendrá 0000 0 0 X-letra M X-espacio 
      98.  00:8B12                      ; salida: 	-
      99.  00:8B12                      ; toca: 	A, B
     100.  00:8B12                      mira_disparo:
     101.  00:8B12                      .mira_boton_pulsado1:
     102.  00:8B12  CB 1F               	RR		 A						;preparo en el carry si se ha pulsado botón 1
     103.  00:8B14  D2 40 8B            	JP		 NC, .mira_boton_pulsado2					
     104.  00:8B17  F5                  	PUSH	AF						;copia A para usarlo después
     105.  00:8B18                      	;se ha pulsado barra o boton 1
     106.  00:8B18  3A C5 AA            	LD		 A, (prota.cadencia)
     107.  00:8B1B  B7                  	OR		 A
     108.  00:8B1C  CA 2A 8B            	JP		 Z, .efectua_disparo	;toca efectuar disparo realmente porque se ha pulsado lo suficiente el disparo
     109.  00:8B1F                      .no_efectua_disparo: ;IF
     110.  00:8B1F  3D                  		DEC		 A
     111.  00:8B20  32 C5 AA            		LD		(prota.cadencia), A	;resto cadencia hasta próximo disparo "real" (no automático por haber pulsado una tecla e ir demasiado rápido)
     112.  00:8B23  AF                  		XOR		 A 
     113.  00:8B24  32 C2 AA            		LD		(prota.escena), A
     114.  00:8B27  C3 3F 8B            		JP		.fin_mira_disparo1
     115.  00:8B2A                      .efectua_disparo:	;ELSE
     116.  00:8B2A                      		;cambio colores del sprite
     117.  00:8B2A  3A C2 AA            		LD		 A, (prota.escena)
     118.  00:8B2D  2F                  		CPL		 
     119.  00:8B2E  32 C2 AA            		LD		(prota.escena), A
     120.  00:8B31                      		;reseteo cadencia para el próximo disparo
     121.  00:8B31  3E 04               		LD		 A, LIMCADENCIA				;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
     122.  00:8B33  32 C5 AA            		LD		 (prota.cadencia), A		;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
     123.  00:8B36                      		
     124.  00:8B36                      		;ejecuto sonido						;; ajustar cadencia y que cuando el disparo sea efectivo se reseteen los colores
     125.  00:8B36  AF                  		XOR		 A
     126.  00:8B37  0E 01               		LD		 C, 1
     127.  00:8B39  CD 04 92            		CALL	ayFX_INIT
     128.  00:8B3C                      		
     129.  00:8B3C                      		;examino si el disparo le dió a algo activo
     130.  00:8B3C  CD 4B 80            		CALL	check_colisiones_objetos	;revisa las colisiones con puertas, ayudas y enemigos
     131.  00:8B3F                      		
     132.  00:8B3F                      .fin_mira_disparo1
     133.  00:8B3F  F1                  	POP		AF
     134.  00:8B40                      
     135.  00:8B40                      .mira_boton_pulsado2:
     136.  00:8B40  CB 1F               	RR		 A
     137.  00:8B42  D0                  	RET		 NC
     138.  00:8B43                      	;se ha pulsado shift o boton 2
     139.  00:8B43                      	
     140.  00:8B43  3A D2 AA            	LD		 A, (prota_reliquias)	;miro si le quedan reliquias
     141.  00:8B46  B7                  	OR		 A
     142.  00:8B47  C8                  	RET		 Z						;si no le quedan salgo ya
     143.  00:8B48                      	
     144.  00:8B48                      	;actuaciones si se usa la reliquia botón 2 o M y quedn reliquias.. (antes ya se puso el valor en A)
     145.  00:8B48  3A D2 AA            	LD		A, (prota_reliquias)
     146.  00:8B4B  3D                  	DEC		 A
     147.  00:8B4C  32 D2 AA            	LD		(prota_reliquias), A
     148.  00:8B4F                      	
     149.  00:8B4F  3E 01               	LD		 A, 1
     150.  00:8B51  0E 01               	LD		 C, 1
     151.  00:8B53  CD 04 92            	CALL	ayFX_INIT
     152.  00:8B56                      	
     153.  00:8B56  CD A2 85            	CALL 	efecto_imagen_tira_reliquia
     154.  00:8B59                      	
     155.  00:8B59  C3 4A 84            	JP		pinta_reliquias
     156.  00:8B5C                      fin_mira_disparo:
     157.  00:8B5C                      ;	RET		
     158.  00:8B5C                      
     159.  00:8B5C                      
     160.  00:8B5C                      ;;============================================================
     161.  00:8B5C                      ;;Código de D. Fernando García (BitVision) (al que siempre le estaré agradecido)
     162.  00:8B5C                      ;check_8th_keyboard_row
     163.  00:8B5C                      ;read_joy_0
     164.  00:8B5C                      ;check_8th_keyboard_row
     165.  00:8B5C                      ;check_4th_keyboard_row
     166.  00:8B5C                      ;;============================================================
     167.  00:8B5C                      ;;  usa constantes:
     168.  00:8B5C                      ;PSG_A  equ  0a0h  ;reg address
     169.  00:8B5C                      ;PSG_W  equ  0a1h  ;reg data WR
     170.  00:8B5C                      ;PSG_R  equ  0a2h  ;reg data
     171.  00:8B5C                      
     172.  00:8B5C                      ;;=====================================================
     173.  00:8B5C                      ;;update_controllers_status
     174.  00:8B5C                      ;;=====================================================	
     175.  00:8B5C                      ;depends on the next rountine
     176.  00:8B5C                      ;  returns
     177.  00:8B5C                      ;  a - 0P2TRLDU
     178.  00:8B5C                      
     179.  00:8B5C                      update_controllers_status:
     180.  00:8B5C  CD A7 8B                 call  check_8th_keyboard_row
     181.  00:8B5F                      [4]  rrc    a
     181.  00:8B5F  CB 0F CB 0F CB 0F CB 0F 
     182.  00:8B67  47                       ld    b,a    		;save for later  xxxTRDUL
     183.  00:8B68                      
     184.  00:8B68  E6 01                    and    #01    		;save L
     185.  00:8B6A  CB 27                    sla    a
     186.  00:8B6C  CB 27                    sla    a    		;now 00000L00
     187.  00:8B6E  4F                       ld    c,a    		;save for later
     188.  00:8B6F                      
     189.  00:8B6F  78                       ld    a,b    		;again we've got xxxTRDUL. I am interested on leaving 000000DU on a
     190.  00:8B70  CB 3F                    srl    a
     191.  00:8B72  E6 03                    and    00000011b
     192.  00:8B74                      						;we've got 000000DU on a
     193.  00:8B74  B1                       or    c    		;now we've got 00000LDU
     194.  00:8B75  4F                       ld    c,a    		;save for later
     195.  00:8B76                      
     196.  00:8B76  78                       ld    a,b
     197.  00:8B77  E6 18                    and    00011000b 	;we've got 000TR000
     198.  00:8B79  B1                       or    c
     199.  00:8B7A                           ;finally    000TRLDU
     200.  00:8B7A                      
     201.  00:8B7A                           ;and    00000100   ;preserve just
     202.  00:8B7A  47                       ld    b,a    		;save for later
     203.  00:8B7B  CD B5 8B                 call  check_4th_keyboard_row      ;check M & P
     204.  00:8B7E  F5                       push  af
     205.  00:8B7F  E6 04                    and    00000100b	;filter just M
     206.  00:8B81  87                       add    a
     207.  00:8B82  87                       add    a
     208.  00:8B83  87                       add    a           ;shift 3th to 6th bit
     209.  00:8B84  B0                       or    b           	;merge with previous
     210.  00:8B85  47                       ld    b,a
     211.  00:8B86                      
     212.  00:8B86  CD 93 8B                 call  read_joy_0
     213.  00:8B89  E6 3F                    and    00111111b  	;we want just 002TRLDU  from joystick    (2 is second trigger)
     214.  00:8B8B  B0                       or    b      		;added 000TRLDU from keyboard
     215.  00:8B8C  47                       ld    b,a      	;save for later
     216.  00:8B8D  F1                       pop    af      	; let's check on P
     217.  00:8B8E                      
     218.  00:8B8E  E6 20                    and    00100000b
     219.  00:8B90  87                       add    a      		;P status on 6th bit  ... so 0P2TRLDU
     220.  00:8B91  B0                       or    b
     221.  00:8B92                      
     222.  00:8B92  C9                       ret
     223.  00:8B93                      
     224.  00:8B93                      
     225.  00:8B93                      ;ret
     226.  00:8B93                      ;  a -            xx2TRLDU
     227.  00:8B93                      read_joy_0:
     228.  00:8B93  F3                         di
     229.  00:8B94  3E 0F                      ld    a,15
     230.  00:8B96  D3 A0                      out    [PSG_A],a
     231.  00:8B98  DB A2                      in    a,[PSG_R]
     232.  00:8B9A  E6 BF                      and    10111111b        ;joy0
     233.  00:8B9C                      
     234.  00:8B9C  D3 A1                      out    [PSG_W],a        ;set joy0
     235.  00:8B9E                      
     236.  00:8B9E  3E 0E                      ld    a,14
     237.  00:8BA0  D3 A0                      out    [PSG_A],a
     238.  00:8BA2  DB A2                      in    a,[PSG_R]
     239.  00:8BA4                      
     240.  00:8BA4  FB                         ei
     241.  00:8BA5  2F                         cpl
     242.  00:8BA6                      
     243.  00:8BA6  C9                         ret
     244.  00:8BA7                      
     245.  00:8BA7                      
     246.  00:8BA7                      ;ret
     247.  00:8BA7                      ;  a -      RDULxxxT
     248.  00:8BA7                      check_8th_keyboard_row:
     249.  00:8BA7  F3                       di
     250.  00:8BA8  DB AA                    in    a,(#aa)
     251.  00:8BAA  E6 F0                    and    #f0
     252.  00:8BAC  F6 08                    or    8
     253.  00:8BAE  D3 AA                    out    (#aa),a
     254.  00:8BB0  DB A9                    in    a,(#a9)
     255.  00:8BB2  FB                       ei
     256.  00:8BB3  2F                       cpl
     257.  00:8BB4                      
     258.  00:8BB4  C9                       ret
     259.  00:8BB5                      
     260.  00:8BB5                      
     261.  00:8BB5                      ;ret
     262.  00:8BB5                      ;  a -      xxxxxMxx
     263.  00:8BB5                      check_4th_keyboard_row:
     264.  00:8BB5  F3                       di
     265.  00:8BB6  DB AA                    in    a,(#aa)
     266.  00:8BB8  E6 F0                    and    #f0
     267.  00:8BBA  F6 04                    or    4
     268.  00:8BBC  D3 AA                    out    (#aa),a
     269.  00:8BBE  DB A9                    in    a,(#a9)
     270.  00:8BC0  FB                       ei
     271.  00:8BC1  2F                       cpl
     272.  00:8BC2                      
     273.  00:8BC2  C9                       ret
     274.  00:8BC3                      
     275.  00:8BC3                      ;--------------------------------------------
     276.  00:8BC3                      
     277.  00:8BC3                      
     278.  00:8BC3                      
     279.  00:8BC3                      
     280.  00:8BC3                      
     281.  00:8BC3                      
     282.  00:8BC3                      
     283.  00:8BC3                      
     254   00:8BC3                      	
     255   00:8BC3                      	include "subr_sonido.asm"
       1.  00:8BC3                      
       2.  00:8BC3                      ;;=====================================================
       3.  00:8BC3                      ;;SUBRUTINAS PARA SONIDOS
       4.  00:8BC3                      ;;=====================================================	
       5.  00:8BC3                      
       6.  00:8BC3                      ;;=====================================================
       7.  00:8BC3                      ;;INICIALIZA_REPLAYER_EFECTOS_INTERRUPCIONES
       8.  00:8BC3                      ;;=====================================================	
       9.  00:8BC3                      ; función: 	inicializa: replayer de música, player de efectos e interrupciones
      10.  00:8BC3                      ; entrada: 	-
      11.  00:8BC3                      ; salida: 	-
      12.  00:8BC3                      ; toca: 	HL, A
      13.  00:8BC3                      inicializa_replayer_efectos_interrupciones:
      14.  00:8BC3  F3                  	DI
      15.  00:8BC4                      
      16.  00:8BC4                      	;inicializacion de replayer musical
      17.  00:8BC4  21 6C 92            	LD		HL, song-99			; hl <- initial address of module - 99
      18.  00:8BC7  CD 03 8C            	CALL	PT3_INIT			; Inits PT3 player
      19.  00:8BCA                      		
      20.  00:8BCA                      	;inicializacion del reproductor de efectos sonoros
      21.  00:8BCA  21 37 9C            	LD		HL, sfx_bank
      22.  00:8BCD  CD F2 91            	CALL	ayFX_SETUP
      23.  00:8BD0                      	
      24.  00:8BD0                      	;Engancha nuestra rutina de servicio al gancha que deja preparado la BIOS cuando se termina de pintar la pantalla (50 o 60 veces por segundo)
      25.  00:8BD0  3E C3               	LD		A, #C3
      26.  00:8BD2  32 9F FD            	LD		[H.TIMI], A
      27.  00:8BD5  21 DD 8B            	LD		HL, subrutina_isr
      28.  00:8BD8  22 A0 FD            	LD		[H.TIMI+1], HL
      29.  00:8BDB                      	
      30.  00:8BDB  FB                  	EI		;optimizacion:
      31.  00:8BDC                      			;piensa que las dos ultimas lineas podrian haber sido: 
      32.  00:8BDC                      			;ei						;primero ei
      33.  00:8BDC                      			;ld		[H.TIMI+1],hl	;luego este ld
      34.  00:8BDC                      									;PENSAR (y consultar ) PORQUE!!!!
      35.  00:8BDC                      fin_inicializa_replayer_efectos_interrupciones:
      36.  00:8BDC  C9                  	RET
      37.  00:8BDD                      
      38.  00:8BDD                      
      39.  00:8BDD                      
      40.  00:8BDD                      ;;=====================================================
      41.  00:8BDD                      ;;NUESTRA_ISR
      42.  00:8BDD                      ;;=====================================================	
      43.  00:8BDD                      ; función: 	envía datos al PSG + toca un trozo de música + toca trozo de 
      44.  00:8BDD                      ; entrada: 	-
      45.  00:8BDD                      ; salida: 	-
      46.  00:8BDD                      ; toca: 	HL, A
      47.  00:8BDD                      subrutina_isr:
      48.  00:8BDD  CD 48 91            	CALL	PT3_ROUT			;envia los datos a los registros del PSG
      49.  00:8BE0  CD 50 90            	CALL	PT3_PLAY			;calcula el siguiente 'trocito' de musica que sera enviado al proxima vez
      50.  00:8BE3  C3 3A 92            	JP		ayFX_PLAY			;calcula el siguiente 'trocito' de efecto especial de sonido que sera enviado la proxima vez
      51.  00:8BE6                      fin_subrutina_isr:
      52.  00:8BE6                      	;RET
      53.  00:8BE6                      
      54.  00:8BE6                      
      55.  00:8BE6                      
      56.  00:8BE6                      ;;=====================================================
      57.  00:8BE6                      ;;DEFINICIÓN DE SUBRUTINAS DE FERNANDO PARA COMPRESIÓN Y SONIDO
      58.  00:8BE6                      ;;=====================================================
      59.  00:8BE6                      subrutinas_sonido:
      60.  00:8BE6                      	include	"PT3-ROM_sjasm.asm"
       1:  00:8BE6                      		; --- PT3 REPLAYER WORKING ON ROM ---
       2:  00:8BE6                      		; --- Can be assembled with asMSX ---
       3:  00:8BE6                      		; --- ROM version: MSX-KUN        ---
       4:  00:8BE6                      		; --- asMSX version 2: SapphiRe   ---
       5:  00:8BE6                      
       6:  00:8BE6                      ; Based on MSX full version of PT3 by Dioniso
       7:  00:8BE6                      ;
       8:  00:8BE6                      ; This version of the replayer can be used with any note table
       9:  00:8BE6                      ; This version also allows the use of PT3 commands
      10:  00:8BE6                      ; First 99 bytes of each PT3 module should be stripped off
      11:  00:8BE6                      ;
      12:  00:8BE6                      ; PLAY and PSG WRITE routines seperated to allow independent calls
      13:  00:8BE6                      ;
      14:  00:8BE6                      ; ROM LENGTH: 1549 bytes
      15:  00:8BE6                      ; RAM LENGTH:  576 bytes
      16:  00:8BE6                      
      17:  00:8BE6                      
      18:  00:8BE6                      
      19:  00:8BE6                      ;SJASM version by BTV 2016
      20:  00:8BE6                      
      21:  00:8BE6                      
      22:  00:8BE6                      		; --- CONSTANT VALUES DEFINITION ---
      23:  00:8BE6                      
      24:  00:8BE6                      ;ChannelsVars
      25:  00:8BE6                      ;struc	CHNPRM
      26:  00:8BE6                      ;reset group
      27:  00:8BE6  (00:0000)           CHNPRM_PsInOr	equ 0	;RESB 1
      28:  00:8BE6  (00:0001)           CHNPRM_PsInSm	equ 1	;RESB 1
      29:  00:8BE6  (00:0002)           CHNPRM_CrAmSl	equ 2	;RESB 1
      30:  00:8BE6  (00:0003)           CHNPRM_CrNsSl	equ 3	;RESB 1
      31:  00:8BE6  (00:0004)           CHNPRM_CrEnSl	equ 4	;RESB 1
      32:  00:8BE6  (00:0005)           CHNPRM_TSlCnt	equ 5	;RESB 1
      33:  00:8BE6  (00:0006)           CHNPRM_CrTnSl	equ 6	;RESW 1
      34:  00:8BE6  (00:0008)           CHNPRM_TnAcc	equ 8	;RESW 1
      35:  00:8BE6  (00:000A)           CHNPRM_COnOff	equ 10	;RESB 1
      36:  00:8BE6                      ;reset group
      37:  00:8BE6                      
      38:  00:8BE6  (00:000B)           CHNPRM_OnOffD	equ 11	;RESB 1
      39:  00:8BE6                      
      40:  00:8BE6                      ;IX for PTDECOD here [+12]
      41:  00:8BE6  (00:000C)           CHNPRM_OffOnD	equ 12	;RESB 1
      42:  00:8BE6  (00:000D)           CHNPRM_OrnPtr	equ 13	;RESW 1
      43:  00:8BE6  (00:000F)           CHNPRM_SamPtr	equ 15	;RESW 1
      44:  00:8BE6  (00:0011)           CHNPRM_NNtSkp	equ 17	;RESB 1
      45:  00:8BE6  (00:0012)           CHNPRM_Note	equ 18	;RESB 1
      46:  00:8BE6  (00:0013)           CHNPRM_SlToNt	equ 19	;RESB 1
      47:  00:8BE6  (00:0014)           CHNPRM_Env_En	equ 20	;RESB 1
      48:  00:8BE6  (00:0015)           CHNPRM_Flags	equ 21	;RESB 1
      49:  00:8BE6                       ;Enabled - 0,SimpleGliss - 2
      50:  00:8BE6  (00:0016)           CHNPRM_TnSlDl	equ 22	;RESB 1
      51:  00:8BE6  (00:0017)           CHNPRM_TSlStp	equ 23	;RESW 1
      52:  00:8BE6  (00:0019)           CHNPRM_TnDelt	equ 25	;RESW 1
      53:  00:8BE6  (00:001B)           CHNPRM_NtSkCn	equ 27	;RESB 1
      54:  00:8BE6  (00:001C)           CHNPRM_Volume	equ 28	;RESB 1
      55:  00:8BE6  (00:001D)           CHNPRM_Size	equ 29	;RESB 1
      56:  00:8BE6                      ;endstruc
      57:  00:8BE6                      
      58:  00:8BE6                      ;struc	AR
      59:  00:8BE6  (00:0000)           AR_TonA		equ 0	;RESW 1
      60:  00:8BE6  (00:0002)           AR_TonB		equ 2	;RESW 1
      61:  00:8BE6  (00:0004)           AR_TonC		equ 4	;RESW 1
      62:  00:8BE6  (00:0006)           AR_Noise	equ 6	;RESB 1
      63:  00:8BE6  (00:0007)           AR_Mixer	equ 7	;RESB 1
      64:  00:8BE6  (00:0008)           AR_AmplA	equ 8	;RESB 1
      65:  00:8BE6  (00:0009)           AR_AmplB	equ 9	;RESB 1
      66:  00:8BE6  (00:000A)           AR_AmplC	equ 10	;RESB 1
      67:  00:8BE6  (00:000B)           AR_Env		equ 11	;RESW 1
      68:  00:8BE6  (00:000D)           AR_EnvTp	equ 13	;RESB 1
      69:  00:8BE6                      ;endstruc
      70:  00:8BE6                      
      71:  00:8BE6                      		; --- CODE STARTS HERE ---
      72:  00:8BE6                      
      73:  00:8BE6  21 00 F0            CHECKLP:	LD	HL,PT3_SETUP
      74:  00:8BE9  CB FE               		SET	7,[HL]
      75:  00:8BEB  CB 46               		BIT	0,[HL]
      76:  00:8BED  C8                  		RET	Z
      77:  00:8BEE  E1                  		POP	HL
      78:  00:8BEF  21 7A F0            		LD	HL,DelyCnt
      79:  00:8BF2  34                  		INC	[HL]
      80:  00:8BF3  21 3E F0            		LD	HL,ChanA+CHNPRM_NtSkCn
      81:  00:8BF6  34                  		INC	[HL]
      82:  00:8BF7  AF                  PT3_MUTE:	XOR	A
      83:  00:8BF8  67                  		LD	H,A
      84:  00:8BF9  6F                  		LD	L,A
      85:  00:8BFA  32 48 F1            		LD	[AYREGS+AR_AmplA],A
      86:  00:8BFD  22 49 F1            		LD	[AYREGS+AR_AmplB],HL
      87:  00:8C00  C3 49 91            		JP	ROUT_A0
      88:  00:8C03                      
      89:  00:8C03                      PT3_INIT:	;HL - AddressOfModule - 100
      90:  00:8C03  22 01 F0            		LD [PT3_MODADDR],HL
      91:  00:8C06  E5                  		PUSH HL
      92:  00:8C07  11 64 00            		LD DE,100
      93:  00:8C0A  19                  		ADD HL,DE
      94:  00:8C0B  7E                  		LD A,[HL]
      95:  00:8C0C  32 1C F0            		LD [PT3_Delay],A
      96:  00:8C0F  E5                  		PUSH HL
      97:  00:8C10  DD E1               		POP IX
      98:  00:8C12  19                  		ADD HL,DE
      99:  00:8C13  22 03 F0            		LD [PT3_CrPsPtr],HL
     100:  00:8C16  DD 5E 02            		LD E,[IX+102-100]
     101:  00:8C19  19                  		ADD HL,DE
     102:  00:8C1A  23                  		INC HL
     103:  00:8C1B  22 18 F0            		LD [PT3_LPosPtr],HL
     104:  00:8C1E  D1                  		POP DE
     105:  00:8C1F  DD 6E 03            		LD L,[IX+103-100]
     106:  00:8C22  DD 66 04            		LD H,[IX+104-100]
     107:  00:8C25  19                  		ADD HL,DE
     108:  00:8C26  22 1A F0            		LD [PT3_PatsPtr],HL
     109:  00:8C29  21 A9 00            		LD HL,169
     110:  00:8C2C  19                  		ADD HL,DE
     111:  00:8C2D  22 07 F0            		LD [PT3_OrnPtrs],HL
     112:  00:8C30  21 69 00            		LD HL,105
     113:  00:8C33  19                  		ADD HL,DE
     114:  00:8C34  22 05 F0            		LD [PT3_SAMPTRS],HL
     115:  00:8C37  21 00 F0            		LD HL,PT3_SETUP
     116:  00:8C3A  CB BE               		RES 7,[HL]
     117:  00:8C3C                      
     118:  00:8C3C                      		; --- note table data depacker ---
     119:  00:8C3C                      		; Depacks first 12 tones of each tone table
     120:  00:8C3C                      
     121:  00:8C3C  11 BD 91            		LD DE,T_PACK
     122:  00:8C3F  01 B1 F1            		LD BC,T1_+(2*49)-1
     123:  00:8C42  1A                  .TP_0:		LD A,[DE]
     124:  00:8C43  13                  		INC DE
     125:  00:8C44  FE 1E               		CP 15*2
     126:  00:8C46  30 06               		JR NC,.TP_1
     127:  00:8C48  67                  		LD H,A
     128:  00:8C49  1A                  		LD A,[DE]
     129:  00:8C4A  6F                  		LD L,A
     130:  00:8C4B  13                  		INC DE
     131:  00:8C4C  18 07               		JR .TP_2
     132:  00:8C4E  D5                  .TP_1:		PUSH DE
     133:  00:8C4F  16 00               		LD D,0
     134:  00:8C51  5F                  		LD E,A
     135:  00:8C52  19                  		ADD HL,DE
     136:  00:8C53  19                  		ADD HL,DE
     137:  00:8C54  D1                  		POP DE
     138:  00:8C55  7C                  .TP_2:		LD A,H
     139:  00:8C56  02                  		LD [BC],A
     140:  00:8C57  0B                  		DEC BC
     141:  00:8C58  7D                  		LD A,L
     142:  00:8C59  02                  		LD [BC],A
     143:  00:8C5A  0B                  		DEC BC
     144:  00:8C5B  D6 F0               		SUB $F0
     145:  00:8C5D  20 E3               		JR NZ,.TP_0
     146:  00:8C5F                      
     147:  00:8C5F                      		; --- INITIALIZE PT3 VARIABLES ---
     148:  00:8C5F  21 23 F0            		LD HL,VARS
     149:  00:8C62  77                  		LD [HL],A
     150:  00:8C63  11 24 F0            		LD DE,VARS+1
     151:  00:8C66  01 2C 01            		LD BC,VAR0END-VARS-1
     152:  00:8C69  ED B0               		LDIR
     153:  00:8C6B                      
     154:  00:8C6B  3C                  		INC A
     155:  00:8C6C  32 7A F0            		LD [DelyCnt],A
     156:  00:8C6F  21 01 F0            		LD HL,$F001 ;H - CHNPRM_Volume, L - CHNPRM_NtSkCn
     157:  00:8C72  22 3E F0            		LD [ChanA+CHNPRM_NtSkCn],HL
     158:  00:8C75  22 5B F0            		LD [ChanB+CHNPRM_NtSkCn],HL
     159:  00:8C78  22 78 F0            		LD [ChanC+CHNPRM_NtSkCn],HL
     160:  00:8C7B                      
     161:  00:8C7B  21 B9 91            		LD HL,EMPTYSAMORN
     162:  00:8C7E  22 12 F0            		LD [PT3_AdInPtA],HL ;ptr to zero
     163:  00:8C81  22 30 F0            		LD [ChanA+CHNPRM_OrnPtr],HL ;ornament 0 is "0,1,0"
     164:  00:8C84  22 4D F0            		LD [ChanB+CHNPRM_OrnPtr],HL ;in all versions from
     165:  00:8C87  22 6A F0            		LD [ChanC+CHNPRM_OrnPtr],HL ;3.xx to 3.6x and VTII
     166:  00:8C8A                      
     167:  00:8C8A  22 32 F0            		LD [ChanA+CHNPRM_SamPtr],HL ;S1 There is no default
     168:  00:8C8D  22 4F F0            		LD [ChanB+CHNPRM_SamPtr],HL ;S2 sample in PT3, so, you
     169:  00:8C90  22 6C F0            		LD [ChanC+CHNPRM_SamPtr],HL ;S3 can comment S1,2,3; see
     170:  00:8C93                      					    ;also EMPTYSAMORN comment
     171:  00:8C93                      
     172:  00:8C93                      		; --- NOTE TABLE CREATOR (c) Ivan Roshin, adapted by SapphiRe ---
     173:  00:8C93  DD 7E FF            		LD A,[IX+99-100] ;TONE TABLE NUMBER
     174:  00:8C96  17                  		RLA
     175:  00:8C97  E6 07               		AND 7
     176:  00:8C99  21 69 91            		LD HL,NT_DATA
     177:  00:8C9C  D5                  		PUSH DE
     178:  00:8C9D  50                  		LD D,B		; ld d,0 (bc is 0000 after LDIR)
     179:  00:8C9E  87                  		ADD A,A
     180:  00:8C9F  5F                  		LD E,A
     181:  00:8CA0  19                  		ADD HL,DE	; hl -> init of correct note table data
     182:  00:8CA1  5E                  		LD E,[HL]
     183:  00:8CA2  23                  		INC HL
     184:  00:8CA3  CB 3B               		SRL E
     185:  00:8CA5  9F                  		SBC A,A
     186:  00:8CA6  E6 A7               		AND $A7			;$00 (NOP) or $A7 (AND A)
     187:  00:8CA8  32 21 F0            		LD [PT3_NTL3],A		; CORRECT INSTRUCTION, DEPENDS OF SELECTED TABLE
     188:  00:8CAB  3E C9               		LD A,$C9		; RET CODE
     189:  00:8CAD  32 22 F0            		LD [PT3_NTL3+1],A	; RET PLACED
     190:  00:8CB0  EB                  		EX DE,HL
     191:  00:8CB1  C1                  		POP BC ;BC=T1_
     192:  00:8CB2  09                  		ADD HL,BC
     193:  00:8CB3                      
     194:  00:8CB3  1A                  		LD A,[DE]                           
     195:  00:8CB4                      
     196:  00:8CB4  01 79 91            		LD BC,T_
     197:  00:8CB7  81                  		ADD A,C
     198:  00:8CB8  4F                  		LD C,A
     199:  00:8CB9  88                  		ADC A,B
     200:  00:8CBA                      
     201:  00:8CBA  91                  		SUB C
     202:  00:8CBB  47                  		LD B,A
     203:  00:8CBC  C5                  		PUSH BC
     204:  00:8CBD  11 80 F0            		LD DE,NT_
     205:  00:8CC0  D5                  		PUSH DE
     206:  00:8CC1                      
     207:  00:8CC1  06 0C               		LD B,12
     208:  00:8CC3  C5                  .L1:		PUSH BC
     209:  00:8CC4  4E                  		LD C,[HL]
     210:  00:8CC5  23                  		INC HL
     211:  00:8CC6  E5                  		PUSH HL
     212:  00:8CC7  46                  		LD B,[HL]
     213:  00:8CC8                      
     214:  00:8CC8  D5                  		PUSH DE
     215:  00:8CC9  EB                  		EX DE,HL
     216:  00:8CCA  11 17 00            		LD DE,23
     217:  00:8CCD  DD 26 08            		db $DD,$26,$08	;LD XH,8
     218:  00:8CD0                      
     219:  00:8CD0  CB 38               .L2:		SRL B
     220:  00:8CD2  CB 19               		RR C
     221:  00:8CD4  CD 21 F0            .L3:		CALL PT3_NTL3	;AND A or NOP
     222:  00:8CD7  79                  		LD A,C
     223:  00:8CD8  8A                  		ADC A,D	;=ADC 0
     224:  00:8CD9  77                  		LD [HL],A
     225:  00:8CDA  23                  		INC HL
     226:  00:8CDB  78                  		LD A,B
     227:  00:8CDC  8A                  		ADC A,D
     228:  00:8CDD  77                  		LD [HL],A
     229:  00:8CDE  19                  		ADD HL,DE
     230:  00:8CDF  DD 25               		db $DD,$25	;DEC XH
     231:  00:8CE1  20 ED               		JR NZ,.L2
     232:  00:8CE3                      
     233:  00:8CE3  D1                  		POP DE
     234:  00:8CE4  13                  		INC DE
     235:  00:8CE5  13                  		INC DE
     236:  00:8CE6  E1                  		POP HL
     237:  00:8CE7  23                  		INC HL
     238:  00:8CE8  C1                  		POP BC
     239:  00:8CE9  10 D8               		DJNZ .L1
     240:  00:8CEB                      
     241:  00:8CEB  E1                  		POP HL
     242:  00:8CEC  D1                  		POP DE
     243:  00:8CED                      
     244:  00:8CED  7B                  		LD A,E
     245:  00:8CEE  D5                  		PUSH DE
     246:  00:8CEF  11 85 91            		LD DE,TCOLD_1
     247:  00:8CF2  BB                  		CP E
     248:  00:8CF3  D1                  		POP DE
     249:  00:8CF4  20 05               		JR NZ,.CORR_1
     250:  00:8CF6  3E FD               		LD A,$FD
     251:  00:8CF8  32 AE F0            		LD [NT_+$2E],A
     252:  00:8CFB                      
     253:  00:8CFB  1A                  .CORR_1:	LD A,[DE]
     254:  00:8CFC  A7                  		AND A
     255:  00:8CFD  28 11               		JR Z,.TC_EXIT
     256:  00:8CFF  1F                  		RRA
     257:  00:8D00  F5                  		PUSH AF
     258:  00:8D01  87                  		ADD A,A
     259:  00:8D02  4F                  		LD C,A
     260:  00:8D03  09                  		ADD HL,BC
     261:  00:8D04  F1                  		POP AF
     262:  00:8D05  30 02               		JR NC,.CORR_2
     263:  00:8D07  35                  		DEC [HL]
     264:  00:8D08  35                  		DEC [HL]
     265:  00:8D09  34                  .CORR_2:	INC [HL]
     266:  00:8D0A  A7                  		AND A
     267:  00:8D0B  ED 42               		SBC HL,BC
     268:  00:8D0D  13                  		INC DE
     269:  00:8D0E  18 EB               		JR .CORR_1
     270:  00:8D10                      
     271:  00:8D10                      .TC_EXIT:	;POP AF
     272:  00:8D10                      
     273:  00:8D10                      		; --- CREATE PT3 VOLUME TABLE (c) Ivan Roshin, adapted by SapphiRe ---
     274:  00:8D10  21 11 00            		ld	hl,$11
     275:  00:8D13  54                  		ld	d,h
     276:  00:8D14  5C                  		ld	e,h
     277:  00:8D15  DD 21 50 F1         		ld	IX,VT_+16
     278:  00:8D19  06 0F               		ld	b,15
     279:  00:8D1B  E5                  .INITV1:	push	hl
     280:  00:8D1C  19                  		add	hl,de
     281:  00:8D1D  EB                  		ex	de,hl
     282:  00:8D1E  ED 62               		sbc	hl,hl
     283:  00:8D20  48                  		ld	c,b
     284:  00:8D21  06 10               		ld	b,16
     285:  00:8D23  7D                  .INITV2:	ld	a,l
     286:  00:8D24  17                  		rla
     287:  00:8D25  7C                  		ld	a,h
     288:  00:8D26  CE 00               		adc	a,0
     289:  00:8D28  DD 77 00            		ld	[ix],a
     290:  00:8D2B  DD 23               		inc	ix
     291:  00:8D2D  19                  		add	hl,de
     292:  00:8D2E  10 F3               		djnz	.INITV2
     293:  00:8D30  E1                  		pop	hl
     294:  00:8D31  7B                  		ld	a,e
     295:  00:8D32  FE 77               		cp	$77
     296:  00:8D34  20 01               		jr	nz,.INITV3
     297:  00:8D36  1C                  		inc	e
     298:  00:8D37  41                  .INITV3:	ld	b,c
     299:  00:8D38  10 E1               		djnz	.INITV1
     300:  00:8D3A                      
     301:  00:8D3A  C9                  		RET
     302:  00:8D3B                      
     303:  00:8D3B                      		;pattern decoder
     304:  00:8D3B  DD 36 08 00         PD_OrSm:	LD [IX+(CHNPRM_Env_En-12)],0
     305:  00:8D3F  CD C5 8E            		CALL SETORN
     306:  00:8D42  0A                  		LD A,[BC]
     307:  00:8D43  03                  		INC BC
     308:  00:8D44  0F                  		RRCA
     309:  00:8D45                      
     310:  00:8D45  87                  PD_SAM:		ADD A,A
     311:  00:8D46  5F                  PD_SAM_:	LD E,A
     312:  00:8D47  16 00               		LD D,0
     313:  00:8D49  2A 05 F0            		LD HL,[PT3_SAMPTRS]
     314:  00:8D4C  19                  		ADD HL,DE
     315:  00:8D4D  5E                  		LD E,[HL]
     316:  00:8D4E  23                  		INC HL
     317:  00:8D4F  56                  		LD D,[HL]
     318:  00:8D50  2A 01 F0            		LD HL,[PT3_MODADDR]
     319:  00:8D53  19                  		ADD HL,DE
     320:  00:8D54  DD 75 03            		LD [IX+(CHNPRM_SamPtr-12)],L
     321:  00:8D57  DD 74 04            		LD [IX+(CHNPRM_SamPtr+1-12)],H
     322:  00:8D5A  18 41               		JR PD_LOOP
     323:  00:8D5C                      
     324:  00:8D5C  07                  PD_VOL:		RLCA
     325:  00:8D5D  07                  		RLCA
     326:  00:8D5E  07                  		RLCA
     327:  00:8D5F  07                  		RLCA
     328:  00:8D60  DD 77 10            		LD [IX+(CHNPRM_Volume-12)],A
     329:  00:8D63  18 3B               		JR PD_LP2
     330:  00:8D65                      	
     331:  00:8D65  DD 77 08            PD_EOff:	LD [IX+(CHNPRM_Env_En-12)],A
     332:  00:8D68  DD 77 F4            		LD [IX+(CHNPRM_PsInOr-12)],A
     333:  00:8D6B  18 33               		JR PD_LP2
     334:  00:8D6D                      
     335:  00:8D6D  3D                  PD_SorE:	DEC A
     336:  00:8D6E  20 07               		JR NZ,PD_ENV
     337:  00:8D70  0A                  		LD A,[BC]
     338:  00:8D71  03                  		INC BC
     339:  00:8D72  DD 77 05            		LD [IX+(CHNPRM_NNtSkp-12)],A
     340:  00:8D75  18 29               		JR PD_LP2
     341:  00:8D77                      
     342:  00:8D77  CD A9 8E            PD_ENV:		CALL SETENV
     343:  00:8D7A  18 24               		JR PD_LP2
     344:  00:8D7C                      
     345:  00:8D7C  CD C5 8E            PD_ORN:		CALL SETORN
     346:  00:8D7F  18 1C               		JR PD_LOOP
     347:  00:8D81                             
     348:  00:8D81  DD 77 08            PD_ESAM:	LD [IX+(CHNPRM_Env_En-12)],A
     349:  00:8D84  DD 77 F4            		LD [IX+(CHNPRM_PsInOr-12)],A
     350:  00:8D87  C4 A9 8E            		CALL NZ,SETENV
     351:  00:8D8A  0A                  		LD A,[BC]
     352:  00:8D8B  03                  		INC BC
     353:  00:8D8C  18 B8               		JR PD_SAM_
     354:  00:8D8E                      
     355:  00:8D8E  DD 7E 06            PTDECOD:	LD A,[IX+(CHNPRM_Note-12)]
     356:  00:8D91  32 0F F0            		LD [PT3_PrNote],A
     357:  00:8D94  DD 6E FA            		LD L,[IX+(CHNPRM_CrTnSl-12)]
     358:  00:8D97  DD 66 FB            		LD H,[IX+(CHNPRM_CrTnSl+1-12)]
     359:  00:8D9A  22 10 F0            		LD [PT3_PrSlide],HL
     360:  00:8D9D                      
     361:  00:8D9D  11 10 20            PD_LOOP:	LD DE,$2010
     362:  00:8DA0  0A                  PD_LP2:		LD A,[BC]
     363:  00:8DA1  03                  		INC BC
     364:  00:8DA2  83                  		ADD A,E
     365:  00:8DA3  38 96               		JR C,PD_OrSm
     366:  00:8DA5  82                  		ADD A,D
     367:  00:8DA6  28 4A               		JR Z,PD_FIN
     368:  00:8DA8  38 9B               		JR C,PD_SAM
     369:  00:8DAA  83                  		ADD A,E
     370:  00:8DAB  28 25               		JR Z,PD_REL
     371:  00:8DAD  38 AD               		JR C,PD_VOL
     372:  00:8DAF  83                  		ADD A,E
     373:  00:8DB0  28 B3               		JR Z,PD_EOff
     374:  00:8DB2  38 B9               		JR C,PD_SorE
     375:  00:8DB4  C6 60               		ADD A,96
     376:  00:8DB6  38 20               		JR C,PD_NOTE
     377:  00:8DB8  83                  		ADD A,E
     378:  00:8DB9  38 C1               		JR C,PD_ORN
     379:  00:8DBB  82                  		ADD A,D
     380:  00:8DBC  38 0F               		JR C,PD_NOIS
     381:  00:8DBE  83                  		ADD A,E
     382:  00:8DBF  38 C0               		JR C,PD_ESAM
     383:  00:8DC1  87                  		ADD A,A
     384:  00:8DC2  5F                  		LD E,A
     385:  00:8DC3  21 FE 6D            		LD HL,(SPCCOMS+$DF20) % 65536	; Adapted from original Speccy version (saves 6 bytes)
     386:  00:8DC6  19                  		ADD HL,DE
     387:  00:8DC7  5E                  		LD E,[HL]
     388:  00:8DC8  23                  		INC HL
     389:  00:8DC9  56                  		LD D,[HL]
     390:  00:8DCA  D5                  		PUSH DE
     391:  00:8DCB  18 D0               		JR PD_LOOP
     392:  00:8DCD                      
     393:  00:8DCD  32 7E F0            PD_NOIS:	LD [Ns_Base],A
     394:  00:8DD0  18 CE               		JR PD_LP2
     395:  00:8DD2                      
     396:  00:8DD2  DD CB 09 86         PD_REL:		RES 0,[IX+(CHNPRM_Flags-12)]
     397:  00:8DD6  18 08               		JR PD_RES
     398:  00:8DD8                      	
     399:  00:8DD8  DD 77 06            PD_NOTE:	LD [IX+(CHNPRM_Note-12)],A
     400:  00:8DDB  DD CB 09 C6         		SET 0,[IX+(CHNPRM_Flags-12)]
     401:  00:8DDF  AF                  		XOR A
     402:  00:8DE0                      
     403:  00:8DE0  ED 73 09 F0         PD_RES:		LD [PT3_PDSP],SP
     404:  00:8DE4  DD F9               		LD SP,IX
     405:  00:8DE6  67                  		LD H,A
     406:  00:8DE7  6F                  		LD L,A
     407:  00:8DE8  E5                  		PUSH HL
     408:  00:8DE9  E5                  		PUSH HL
     409:  00:8DEA  E5                  		PUSH HL
     410:  00:8DEB  E5                  		PUSH HL
     411:  00:8DEC  E5                  		PUSH HL
     412:  00:8DED  E5                  		PUSH HL
     413:  00:8DEE  ED 7B 09 F0         		LD SP,[PT3_PDSP]
     414:  00:8DF2                      
     415:  00:8DF2  DD 7E 05            PD_FIN:		LD A,[IX+(CHNPRM_NNtSkp-12)]
     416:  00:8DF5  DD 77 0F            		LD [IX+(CHNPRM_NtSkCn-12)],A
     417:  00:8DF8  C9                  		RET
     418:  00:8DF9                      
     419:  00:8DF9  DD CB 09 96         C_PORTM:	RES 2,[IX+(CHNPRM_Flags-12)]
     420:  00:8DFD  0A                  		LD A,[BC]
     421:  00:8DFE  03                  		INC BC
     422:  00:8DFF                      		;SKIP PRECALCULATED TONE DELTA [BECAUSE
     423:  00:8DFF                      		;CANNOT BE RIGHT AFTER PT3 COMPILATION]
     424:  00:8DFF  03                  		INC BC
     425:  00:8E00  03                  		INC BC
     426:  00:8E01  DD 77 0A            		LD [IX+(CHNPRM_TnSlDl-12)],A
     427:  00:8E04  DD 77 F9            		LD [IX+(CHNPRM_TSlCnt-12)],A
     428:  00:8E07  11 80 F0            		LD DE,NT_
     429:  00:8E0A  DD 7E 06            		LD A,[IX+(CHNPRM_Note-12)]
     430:  00:8E0D  DD 77 07            		LD [IX+(CHNPRM_SlToNt-12)],A
     431:  00:8E10  87                  		ADD A,A
     432:  00:8E11  6F                  		LD L,A
     433:  00:8E12  26 00               		LD H,0
     434:  00:8E14  19                  		ADD HL,DE
     435:  00:8E15  7E                  		LD A,[HL]
     436:  00:8E16  23                  		INC HL
     437:  00:8E17  66                  		LD H,[HL]
     438:  00:8E18  6F                  		LD L,A
     439:  00:8E19  E5                  		PUSH HL
     440:  00:8E1A  3A 0F F0            		LD A,[PT3_PrNote]
     441:  00:8E1D  DD 77 06            		LD [IX+(CHNPRM_Note-12)],A
     442:  00:8E20  87                  		ADD A,A
     443:  00:8E21  6F                  		LD L,A
     444:  00:8E22  26 00               		LD H,0
     445:  00:8E24  19                  		ADD HL,DE
     446:  00:8E25  5E                  		LD E,[HL]
     447:  00:8E26  23                  		INC HL
     448:  00:8E27  56                  		LD D,[HL]
     449:  00:8E28  E1                  		POP HL
     450:  00:8E29  ED 52               		SBC HL,DE
     451:  00:8E2B  DD 75 0D            		LD [IX+(CHNPRM_TnDelt-12)],L
     452:  00:8E2E  DD 74 0E            		LD [IX+(CHNPRM_TnDelt+1-12)],H
     453:  00:8E31  ED 5B 10 F0         		LD DE,[PT3_PrSlide]
     454:  00:8E35  DD 73 FA            		LD [IX+(CHNPRM_CrTnSl-12)],E
     455:  00:8E38  DD 72 FB            		LD [IX+(CHNPRM_CrTnSl+1-12)],D
     456:  00:8E3B  0A                  		LD A,[BC] ;SIGNED TONE STEP
     457:  00:8E3C  03                  		INC BC
     458:  00:8E3D  08                  		EX AF,AF'
     459:  00:8E3E  0A                  		LD A,[BC]
     460:  00:8E3F  03                  		INC BC
     461:  00:8E40  A7                  		AND A
     462:  00:8E41  28 01               		JR Z,.NOSIG
     463:  00:8E43  EB                  		EX DE,HL
     464:  00:8E44  ED 52               .NOSIG:	SBC HL,DE
     465:  00:8E46  F2 4E 8E            		JP P,SET_STP
     466:  00:8E49  2F                  		CPL
     467:  00:8E4A  08                  		EX AF,AF'
     468:  00:8E4B  ED 44               		NEG
     469:  00:8E4D  08                  		EX AF,AF'
     470:  00:8E4E  DD 77 0C            SET_STP:	LD [IX+(CHNPRM_TSlStp+1-12)],A
     471:  00:8E51  08                  		EX AF,AF'
     472:  00:8E52  DD 77 0B            		LD [IX+(CHNPRM_TSlStp-12)],A
     473:  00:8E55  DD 36 FE 00         		LD [IX+(CHNPRM_COnOff-12)],0
     474:  00:8E59  C9                  		RET
     475:  00:8E5A                      
     476:  00:8E5A  DD CB 09 D6         C_GLISS:	SET 2,[IX+(CHNPRM_Flags-12)]
     477:  00:8E5E  0A                  		LD A,[BC]
     478:  00:8E5F  03                  		INC BC
     479:  00:8E60  DD 77 0A            		LD [IX+(CHNPRM_TnSlDl-12)],A
     480:  00:8E63  DD 77 F9            		LD [IX+(CHNPRM_TSlCnt-12)],A
     481:  00:8E66  0A                  		LD A,[BC]
     482:  00:8E67  03                  		INC BC
     483:  00:8E68  08                  		EX AF,AF'
     484:  00:8E69  0A                  		LD A,[BC]
     485:  00:8E6A  03                  		INC BC
     486:  00:8E6B  18 E1               		JR SET_STP
     487:  00:8E6D                      
     488:  00:8E6D  0A                  C_SMPOS:	LD A,[BC]
     489:  00:8E6E  03                  		INC BC
     490:  00:8E6F  DD 77 F5            		LD [IX+(CHNPRM_PsInSm-12)],A
     491:  00:8E72  C9                  		RET
     492:  00:8E73                      
     493:  00:8E73  0A                  C_ORPOS:	LD A,[BC]
     494:  00:8E74  03                  		INC BC
     495:  00:8E75  DD 77 F4            		LD [IX+(CHNPRM_PsInOr-12)],A
     496:  00:8E78  C9                  		RET
     497:  00:8E79                      
     498:  00:8E79  0A                  C_VIBRT:	LD A,[BC]
     499:  00:8E7A  03                  		INC BC
     500:  00:8E7B  DD 77 FF            		LD [IX+(CHNPRM_OnOffD-12)],A
     501:  00:8E7E  DD 77 FE            		LD [IX+(CHNPRM_COnOff-12)],A
     502:  00:8E81  0A                  		LD A,[BC]
     503:  00:8E82  03                  		INC BC
     504:  00:8E83  DD 77 00            		LD [IX+(CHNPRM_OffOnD-12)],A
     505:  00:8E86  AF                  		XOR A
     506:  00:8E87  DD 77 F9            		LD [IX+(CHNPRM_TSlCnt-12)],A
     507:  00:8E8A  DD 77 FA            		LD [IX+(CHNPRM_CrTnSl-12)],A
     508:  00:8E8D  DD 77 FB            		LD [IX+(CHNPRM_CrTnSl+1-12)],A
     509:  00:8E90  C9                  		RET
     510:  00:8E91                      
     511:  00:8E91  0A                  C_ENGLS:	LD A,[BC]
     512:  00:8E92  03                  		INC BC
     513:  00:8E93  32 1E F0            		LD [PT3_Env_Del],A
     514:  00:8E96  32 7D F0            		LD [CurEDel],A
     515:  00:8E99  0A                  		LD A,[BC]
     516:  00:8E9A  03                  		INC BC
     517:  00:8E9B  6F                  		LD L,A
     518:  00:8E9C  0A                  		LD A,[BC]
     519:  00:8E9D  03                  		INC BC
     520:  00:8E9E  67                  		LD H,A
     521:  00:8E9F  22 1F F0            		LD [PT3_ESldAdd],HL
     522:  00:8EA2  C9                  		RET
     523:  00:8EA3                      
     524:  00:8EA3  0A                  C_DELAY:	LD A,[BC]
     525:  00:8EA4  03                  		INC BC
     526:  00:8EA5  32 1C F0            		LD [PT3_Delay],A
     527:  00:8EA8  C9                  		RET
     528:  00:8EA9                      	
     529:  00:8EA9  DD 73 08            SETENV:		LD [IX+(CHNPRM_Env_En-12)],E
     530:  00:8EAC  32 4D F1            		LD [AYREGS+AR_EnvTp],A
     531:  00:8EAF  0A                  		LD A,[BC]
     532:  00:8EB0  03                  		INC BC
     533:  00:8EB1  67                  		LD H,A
     534:  00:8EB2  0A                  		LD A,[BC]
     535:  00:8EB3  03                  		INC BC
     536:  00:8EB4  6F                  		LD L,A
     537:  00:8EB5  22 4E F1            		LD [EnvBase],HL
     538:  00:8EB8  AF                  		XOR A
     539:  00:8EB9  DD 77 F4            		LD [IX+(CHNPRM_PsInOr-12)],A
     540:  00:8EBC  32 7D F0            		LD [CurEDel],A
     541:  00:8EBF  67                  		LD H,A
     542:  00:8EC0  6F                  		LD L,A
     543:  00:8EC1  22 7B F0            		LD [CurESld],HL
     544:  00:8EC4  C9                  C_NOP:		RET
     545:  00:8EC5                      
     546:  00:8EC5  87                  SETORN:		ADD A,A
     547:  00:8EC6  5F                  		LD E,A
     548:  00:8EC7  16 00               		LD D,0
     549:  00:8EC9  DD 72 F4            		LD [IX+(CHNPRM_PsInOr-12)],D
     550:  00:8ECC  2A 07 F0            		LD HL,[PT3_OrnPtrs]
     551:  00:8ECF  19                  		ADD HL,DE
     552:  00:8ED0  5E                  		LD E,[HL]
     553:  00:8ED1  23                  		INC HL
     554:  00:8ED2  56                  		LD D,[HL]
     555:  00:8ED3  2A 01 F0            		LD HL,[PT3_MODADDR]
     556:  00:8ED6  19                  		ADD HL,DE
     557:  00:8ED7  DD 75 01            		LD [IX+(CHNPRM_OrnPtr-12)],L
     558:  00:8EDA  DD 74 02            		LD [IX+(CHNPRM_OrnPtr+1-12)],H
     559:  00:8EDD  C9                  		RET
     560:  00:8EDE                      
     561:  00:8EDE                      		;ALL 16 ADDRESSES TO PROTECT FROM BROKEN PT3 MODULES
     562:  00:8EDE  C4 8E               SPCCOMS:	dw C_NOP
     563:  00:8EE0  5A 8E               		dw C_GLISS
     564:  00:8EE2  F9 8D               		dw C_PORTM
     565:  00:8EE4  6D 8E               		dw C_SMPOS
     566:  00:8EE6  73 8E               		dw C_ORPOS
     567:  00:8EE8  79 8E               		dw C_VIBRT
     568:  00:8EEA  C4 8E               		dw C_NOP
     569:  00:8EEC  C4 8E               		dw C_NOP
     570:  00:8EEE  91 8E               		dw C_ENGLS
     571:  00:8EF0  A3 8E               		dw C_DELAY
     572:  00:8EF2  C4 8E               		dw C_NOP
     573:  00:8EF4  C4 8E               		dw C_NOP
     574:  00:8EF6  C4 8E               		dw C_NOP
     575:  00:8EF8  C4 8E               		dw C_NOP
     576:  00:8EFA  C4 8E               		dw C_NOP
     577:  00:8EFC  C4 8E               		dw C_NOP
     578:  00:8EFE                      
     579:  00:8EFE  AF                  CHREGS:		XOR A
     580:  00:8EFF  32 4A F1            		LD [AYREGS+AR_AmplC],A
     581:  00:8F02  DD CB 15 46         		BIT 0,[IX+CHNPRM_Flags]
     582:  00:8F06  E5                  		PUSH HL
     583:  00:8F07  CA 2D 90            		JP Z,.CH_EXIT
     584:  00:8F0A  ED 73 0B F0         		LD [PT3_CSP],SP
     585:  00:8F0E  DD 6E 0D            		LD L,[IX+CHNPRM_OrnPtr]
     586:  00:8F11  DD 66 0E            		LD H,[IX+CHNPRM_OrnPtr+1]
     587:  00:8F14  F9                  		LD SP,HL
     588:  00:8F15  D1                  		POP DE
     589:  00:8F16  67                  		LD H,A
     590:  00:8F17  DD 7E 00            		LD A,[IX+CHNPRM_PsInOr]
     591:  00:8F1A  6F                  		LD L,A
     592:  00:8F1B  39                  		ADD HL,SP
     593:  00:8F1C  3C                  		INC A
     594:  00:8F1D  BA                  		CP D
     595:  00:8F1E  38 01               		JR C,.CH_ORPS
     596:  00:8F20  7B                  		LD A,E
     597:  00:8F21  DD 77 00            .CH_ORPS:	LD [IX+CHNPRM_PsInOr],A
     598:  00:8F24  DD 7E 12            		LD A,[IX+CHNPRM_Note]
     599:  00:8F27  86                  		ADD A,[HL]
     600:  00:8F28  F2 2C 8F            		JP P,.CH_NTP
     601:  00:8F2B  AF                  		XOR A
     602:  00:8F2C  FE 60               .CH_NTP:	CP 96
     603:  00:8F2E  38 02               		JR C,.CH_NOK
     604:  00:8F30  3E 5F               		LD A,95
     605:  00:8F32  87                  .CH_NOK:	ADD A,A
     606:  00:8F33  08                  		EX AF,AF'
     607:  00:8F34  DD 6E 0F            		LD L,[IX+CHNPRM_SamPtr]
     608:  00:8F37  DD 66 10            		LD H,[IX+CHNPRM_SamPtr+1]
     609:  00:8F3A  F9                  		LD SP,HL
     610:  00:8F3B  D1                  		POP DE
     611:  00:8F3C  26 00               		LD H,0
     612:  00:8F3E  DD 7E 01            		LD A,[IX+CHNPRM_PsInSm]
     613:  00:8F41  47                  		LD B,A
     614:  00:8F42  87                  		ADD A,A
     615:  00:8F43  87                  		ADD A,A
     616:  00:8F44  6F                  		LD L,A
     617:  00:8F45  39                  		ADD HL,SP
     618:  00:8F46  F9                  		LD SP,HL
     619:  00:8F47  78                  		LD A,B
     620:  00:8F48  3C                  		INC A
     621:  00:8F49  BA                  		CP D
     622:  00:8F4A  38 01               		JR C,.CH_SMPS
     623:  00:8F4C  7B                  		LD A,E
     624:  00:8F4D  DD 77 01            .CH_SMPS:	LD [IX+CHNPRM_PsInSm],A
     625:  00:8F50  C1                  		POP BC
     626:  00:8F51  E1                  		POP HL
     627:  00:8F52  DD 5E 08            		LD E,[IX+CHNPRM_TnAcc]
     628:  00:8F55  DD 56 09            		LD D,[IX+CHNPRM_TnAcc+1]
     629:  00:8F58  19                  		ADD HL,DE
     630:  00:8F59  CB 70               		BIT 6,B
     631:  00:8F5B  28 06               		JR Z,.CH_NOAC
     632:  00:8F5D  DD 75 08            		LD [IX+CHNPRM_TnAcc],L
     633:  00:8F60  DD 74 09            		LD [IX+CHNPRM_TnAcc+1],H
     634:  00:8F63  EB                  .CH_NOAC:	EX DE,HL
     635:  00:8F64  08                  		EX AF,AF'
     636:  00:8F65  6F                  		LD L,A
     637:  00:8F66  26 00               		LD H,0
     638:  00:8F68  31 80 F0            		LD SP,NT_
     639:  00:8F6B  39                  		ADD HL,SP
     640:  00:8F6C  F9                  		LD SP,HL
     641:  00:8F6D  E1                  		POP HL
     642:  00:8F6E  19                  		ADD HL,DE
     643:  00:8F6F  DD 5E 06            		LD E,[IX+CHNPRM_CrTnSl]
     644:  00:8F72  DD 56 07            		LD D,[IX+CHNPRM_CrTnSl+1]
     645:  00:8F75  19                  		ADD HL,DE
     646:  00:8F76  ED 7B 0B F0         		LD SP,[PT3_CSP]
     647:  00:8F7A  E3                  		EX [SP],HL
     648:  00:8F7B  AF                  		XOR A
     649:  00:8F7C  DD B6 05            		OR [IX+CHNPRM_TSlCnt]
     650:  00:8F7F  28 3E               		JR Z,.CH_AMP
     651:  00:8F81  DD 35 05            		DEC [IX+CHNPRM_TSlCnt]
     652:  00:8F84  20 39               		JR NZ,.CH_AMP
     653:  00:8F86  DD 7E 16            		LD A,[IX+CHNPRM_TnSlDl]
     654:  00:8F89  DD 77 05            		LD [IX+CHNPRM_TSlCnt],A
     655:  00:8F8C  DD 6E 17            		LD L,[IX+CHNPRM_TSlStp]
     656:  00:8F8F  DD 66 18            		LD H,[IX+CHNPRM_TSlStp+1]
     657:  00:8F92  7C                  		LD A,H
     658:  00:8F93  19                  		ADD HL,DE
     659:  00:8F94  DD 75 06            		LD [IX+CHNPRM_CrTnSl],L
     660:  00:8F97  DD 74 07            		LD [IX+CHNPRM_CrTnSl+1],H
     661:  00:8F9A  DD CB 15 56         		BIT 2,[IX+CHNPRM_Flags]
     662:  00:8F9E  20 1F               		JR NZ,.CH_AMP
     663:  00:8FA0  DD 5E 19            		LD E,[IX+CHNPRM_TnDelt]
     664:  00:8FA3  DD 56 1A            		LD D,[IX+CHNPRM_TnDelt+1]
     665:  00:8FA6  A7                  		AND A
     666:  00:8FA7  28 01               		JR Z,.CH_STPP
     667:  00:8FA9  EB                  		EX DE,HL
     668:  00:8FAA  ED 52               .CH_STPP:	SBC HL,DE
     669:  00:8FAC  FA BF 8F            		JP M,.CH_AMP
     670:  00:8FAF  DD 7E 13            		LD A,[IX+CHNPRM_SlToNt]
     671:  00:8FB2  DD 77 12            		LD [IX+CHNPRM_Note],A
     672:  00:8FB5  AF                  		XOR A
     673:  00:8FB6  DD 77 05            		LD [IX+CHNPRM_TSlCnt],A
     674:  00:8FB9  DD 77 06            		LD [IX+CHNPRM_CrTnSl],A
     675:  00:8FBC  DD 77 07            		LD [IX+CHNPRM_CrTnSl+1],A
     676:  00:8FBF  DD 7E 02            .CH_AMP:	LD A,[IX+CHNPRM_CrAmSl]
     677:  00:8FC2  CB 79               		BIT 7,C
     678:  00:8FC4  28 13               		JR Z,.CH_NOAM
     679:  00:8FC6  CB 71               		BIT 6,C
     680:  00:8FC8  28 07               		JR Z,.CH_AMIN
     681:  00:8FCA  FE 0F               		CP 15
     682:  00:8FCC  28 0B               		JR Z,.CH_NOAM
     683:  00:8FCE  3C                  		INC A
     684:  00:8FCF  18 05               		JR .CH_SVAM
     685:  00:8FD1  FE F1               .CH_AMIN:	CP -15
     686:  00:8FD3  28 04               		JR Z,.CH_NOAM
     687:  00:8FD5  3D                  		DEC A
     688:  00:8FD6  DD 77 02            .CH_SVAM:	LD [IX+CHNPRM_CrAmSl],A
     689:  00:8FD9  6F                  .CH_NOAM:	LD L,A
     690:  00:8FDA  78                  		LD A,B
     691:  00:8FDB  E6 0F               		AND 15
     692:  00:8FDD  85                  		ADD A,L
     693:  00:8FDE  F2 E2 8F            		JP P,.CH_APOS
     694:  00:8FE1  AF                  		XOR A
     695:  00:8FE2  FE 10               .CH_APOS:	CP 16
     696:  00:8FE4  38 02               		JR C,.CH_VOL
     697:  00:8FE6  3E 0F               		LD A,15
     698:  00:8FE8  DD B6 1C            .CH_VOL:	OR [IX+CHNPRM_Volume]
     699:  00:8FEB  6F                  		LD L,A
     700:  00:8FEC  26 00               		LD H,0
     701:  00:8FEE  11 40 F1            		LD DE,VT_
     702:  00:8FF1  19                  		ADD HL,DE
     703:  00:8FF2  7E                  		LD A,[HL]
     704:  00:8FF3  CB 41               .CH_ENV:	BIT 0,C
     705:  00:8FF5  20 03               		JR NZ,.CH_NOEN
     706:  00:8FF7  DD B6 14            		OR [IX+CHNPRM_Env_En]
     707:  00:8FFA  32 4A F1            .CH_NOEN:	LD [AYREGS+AR_AmplC],A
     708:  00:8FFD  CB 78               		BIT 7,B
     709:  00:8FFF  79                  		LD A,C
     710:  00:9000  28 19               		JR Z,.NO_ENSL
     711:  00:9002  17                  		RLA
     712:  00:9003  17                  		RLA
     713:  00:9004  CB 2F               		SRA A
     714:  00:9006  CB 2F               		SRA A
     715:  00:9008  CB 2F               		SRA A
     716:  00:900A  DD 86 04            		ADD A,[IX+CHNPRM_CrEnSl] ;SEE COMMENT BELOW
     717:  00:900D  CB 68               		BIT 5,B
     718:  00:900F  28 03               		JR Z,.NO_ENAC
     719:  00:9011  DD 77 04            		LD [IX+CHNPRM_CrEnSl],A
     720:  00:9014  21 1D F0            .NO_ENAC:	LD HL,PT3_AddToEn
     721:  00:9017  86                  		ADD A,[HL] ;BUG IN PT3 - NEED WORD HERE.
     722:  00:9018                      			   ;FIX IT IN NEXT VERSION?
     723:  00:9018  77                  		LD [HL],A
     724:  00:9019  18 0E               		JR .CH_MIX
     725:  00:901B  1F                  .NO_ENSL:	RRA
     726:  00:901C  DD 86 03            		ADD A,[IX+CHNPRM_CrNsSl]
     727:  00:901F  32 7F F0            		LD [AddToNs],A
     728:  00:9022  CB 68               		BIT 5,B
     729:  00:9024  28 03               		JR Z,.CH_MIX
     730:  00:9026  DD 77 03            		LD [IX+CHNPRM_CrNsSl],A
     731:  00:9029  78                  .CH_MIX:	LD A,B
     732:  00:902A  1F                  		RRA
     733:  00:902B  E6 48               		AND $48
     734:  00:902D  21 47 F1            .CH_EXIT:	LD HL,AYREGS+AR_Mixer
     735:  00:9030  B6                  		OR [HL]
     736:  00:9031  0F                  		RRCA
     737:  00:9032  77                  		LD [HL],A
     738:  00:9033  E1                  		POP HL
     739:  00:9034  AF                  		XOR A
     740:  00:9035  DD B6 0A            		OR [IX+CHNPRM_COnOff]
     741:  00:9038  C8                  		RET Z
     742:  00:9039  DD 35 0A            		DEC [IX+CHNPRM_COnOff]
     743:  00:903C  C0                  		RET NZ
     744:  00:903D  DD AE 15            		XOR [IX+CHNPRM_Flags]
     745:  00:9040  DD 77 15            		LD [IX+CHNPRM_Flags],A
     746:  00:9043  1F                  		RRA
     747:  00:9044  DD 7E 0B            		LD A,[IX+CHNPRM_OnOffD]
     748:  00:9047  38 03               		JR C,.CH_ONDL
     749:  00:9049  DD 7E 0C            		LD A,[IX+CHNPRM_OffOnD]
     750:  00:904C  DD 77 0A            .CH_ONDL:	LD [IX+CHNPRM_COnOff],A
     751:  00:904F  C9                  		RET
     752:  00:9050                      
     753:  00:9050  AF                  PT3_PLAY:	XOR A
     754:  00:9051  32 1D F0            		LD [PT3_AddToEn],A
     755:  00:9054  32 47 F1            		LD [AYREGS+AR_Mixer],A
     756:  00:9057  3D                  		DEC A
     757:  00:9058  32 4D F1            		LD [AYREGS+AR_EnvTp],A
     758:  00:905B  21 7A F0            		LD HL,DelyCnt
     759:  00:905E  35                  		DEC [HL]
     760:  00:905F  C2 E6 90            		JP NZ,.PL2
     761:  00:9062  21 3E F0            		LD HL,ChanA+CHNPRM_NtSkCn
     762:  00:9065  35                  		DEC [HL]
     763:  00:9066  20 4E               		JR NZ,.PL1B
     764:  00:9068  ED 4B 12 F0         		LD BC,[PT3_AdInPtA]
     765:  00:906C  0A                  		LD A,[BC]
     766:  00:906D  A7                  		AND A
     767:  00:906E  20 3B               		JR NZ,.PL1A
     768:  00:9070  57                  		LD D,A
     769:  00:9071  32 7E F0            		LD [Ns_Base],A
     770:  00:9074  2A 03 F0            		LD HL,[PT3_CrPsPtr]
     771:  00:9077  23                  		INC HL
     772:  00:9078  7E                  		LD A,[HL]
     773:  00:9079  3C                  		INC A
     774:  00:907A  20 08               		JR NZ,.PLNLP
     775:  00:907C  CD E6 8B            		CALL CHECKLP
     776:  00:907F  2A 18 F0            		LD HL,[PT3_LPosPtr]
     777:  00:9082  7E                  		LD A,[HL]
     778:  00:9083  3C                  		INC A
     779:  00:9084  22 03 F0            .PLNLP:	LD [PT3_CrPsPtr],HL
     780:  00:9087  3D                  		DEC A
     781:  00:9088  87                  		ADD A,A
     782:  00:9089  5F                  		LD E,A
     783:  00:908A  CB 12               		RL D
     784:  00:908C  2A 1A F0            		LD HL,[PT3_PatsPtr]
     785:  00:908F  19                  		ADD HL,DE
     786:  00:9090  ED 5B 01 F0         		LD DE,[PT3_MODADDR]
     787:  00:9094  ED 73 0D F0         		LD [PT3_PSP],SP
     788:  00:9098  F9                  		LD SP,HL
     789:  00:9099  E1                  		POP HL
     790:  00:909A  19                  		ADD HL,DE
     791:  00:909B  44                  		LD B,H
     792:  00:909C  4D                  		LD C,L
     793:  00:909D  E1                  		POP HL
     794:  00:909E  19                  		ADD HL,DE
     795:  00:909F  22 14 F0            		LD [PT3_AdInPtB],HL
     796:  00:90A2  E1                  		POP HL
     797:  00:90A3  19                  		ADD HL,DE
     798:  00:90A4  22 16 F0            		LD [PT3_AdInPtC],HL
     799:  00:90A7  ED 7B 0D F0         		LD SP,[PT3_PSP]
     800:  00:90AB                      
     801:  00:90AB  DD 21 2F F0         .PL1A:		LD IX,ChanA+12
     802:  00:90AF  CD 8E 8D            		CALL PTDECOD
     803:  00:90B2  ED 43 12 F0         		LD [PT3_AdInPtA],BC
     804:  00:90B6                      
     805:  00:90B6  21 5B F0            .PL1B:		LD HL,ChanB+CHNPRM_NtSkCn
     806:  00:90B9  35                  		DEC [HL]
     807:  00:90BA  20 0F               		JR NZ,.PL1C
     808:  00:90BC  DD 21 4C F0         		LD IX,ChanB+12
     809:  00:90C0  ED 4B 14 F0         		LD BC,[PT3_AdInPtB]
     810:  00:90C4  CD 8E 8D            		CALL PTDECOD
     811:  00:90C7  ED 43 14 F0         		LD [PT3_AdInPtB],BC
     812:  00:90CB                      
     813:  00:90CB  21 78 F0            .PL1C:		LD HL,ChanC+CHNPRM_NtSkCn
     814:  00:90CE  35                  		DEC [HL]
     815:  00:90CF  20 0F               		JR NZ,.PL1D
     816:  00:90D1  DD 21 69 F0         		LD IX,ChanC+12
     817:  00:90D5  ED 4B 16 F0         		LD BC,[PT3_AdInPtC]
     818:  00:90D9  CD 8E 8D            		CALL PTDECOD
     819:  00:90DC  ED 43 16 F0         		LD [PT3_AdInPtC],BC
     820:  00:90E0                      
     821:  00:90E0  3A 1C F0            .PL1D:		LD A,[PT3_Delay]
     822:  00:90E3  32 7A F0            		LD [DelyCnt],A
     823:  00:90E6                      
     824:  00:90E6  DD 21 23 F0         .PL2:		LD IX,ChanA
     825:  00:90EA  2A 40 F1            		LD HL,[AYREGS+AR_TonA]
     826:  00:90ED  CD FE 8E            		CALL CHREGS
     827:  00:90F0  22 40 F1            		LD [AYREGS+AR_TonA],HL
     828:  00:90F3  3A 4A F1            		LD A,[AYREGS+AR_AmplC]
     829:  00:90F6  32 48 F1            		LD [AYREGS+AR_AmplA],A
     830:  00:90F9  DD 21 40 F0         		LD IX,ChanB
     831:  00:90FD  2A 42 F1            		LD HL,[AYREGS+AR_TonB]
     832:  00:9100  CD FE 8E            		CALL CHREGS
     833:  00:9103  22 42 F1            		LD [AYREGS+AR_TonB],HL
     834:  00:9106  3A 4A F1            		LD A,[AYREGS+AR_AmplC]
     835:  00:9109  32 49 F1            		LD [AYREGS+AR_AmplB],A
     836:  00:910C  DD 21 5D F0         		LD IX,ChanC
     837:  00:9110  2A 44 F1            		LD HL,[AYREGS+AR_TonC]
     838:  00:9113  CD FE 8E            		CALL CHREGS
     839:  00:9116  22 44 F1            		LD [AYREGS+AR_TonC],HL
     840:  00:9119                      
     841:  00:9119  2A 7E F0            		LD HL,[Ns_Base_AddToNs]
     842:  00:911C  7C                  		LD A,H
     843:  00:911D  85                  		ADD A,L
     844:  00:911E  32 46 F1            		LD [AYREGS+AR_Noise],A
     845:  00:9121                      
     846:  00:9121  3A 1D F0            		LD A,[PT3_AddToEn]
     847:  00:9124  5F                  		LD E,A
     848:  00:9125  87                  		ADD A,A
     849:  00:9126  9F                  		SBC A,A
     850:  00:9127  57                  		LD D,A
     851:  00:9128  2A 4E F1            		LD HL,[EnvBase]
     852:  00:912B  19                  		ADD HL,DE
     853:  00:912C  ED 5B 7B F0         		LD DE,[CurESld]
     854:  00:9130  19                  		ADD HL,DE
     855:  00:9131  22 4B F1            		LD [AYREGS+AR_Env],HL
     856:  00:9134                      
     857:  00:9134  AF                  		XOR A
     858:  00:9135  21 7D F0            		LD HL,CurEDel
     859:  00:9138  B6                  		OR [HL]
     860:  00:9139  C8                  		RET Z
     861:  00:913A  35                  		DEC [HL]
     862:  00:913B  C0                  		RET NZ
     863:  00:913C  3A 1E F0            		LD A,[PT3_Env_Del]
     864:  00:913F  77                  		LD [HL],A
     865:  00:9140  2A 1F F0            		LD HL,[PT3_ESldAdd]
     866:  00:9143  19                  		ADD HL,DE
     867:  00:9144  22 7B F0            		LD [CurESld],HL
     868:  00:9147  C9                  		RET
     869:  00:9148                      
     870:  00:9148  AF                  PT3_ROUT:	XOR A
     871:  00:9149                      	
     872:  00:9149                      ROUT_A0:	; --- FIXES BITS 6 AND 7 OF MIXER ---
     873:  00:9149  21 47 F1            		LD	HL,AYREGS+AR_Mixer
     874:  00:914C  CB FE               		set	7,[hl]
     875:  00:914E  CB B6               		res	6,[hl]
     876:  00:9150                      
     877:  00:9150  0E A0               		LD C,$A0
     878:  00:9152  21 40 F1            		LD HL,AYREGS
     879:  00:9155  ED 79               .LOUT:		OUT [C],A
     880:  00:9157  0C                  		INC C
     881:  00:9158  ED A3               		OUTI 
     882:  00:915A  0D                  		DEC C
     883:  00:915B  3C                  		INC A
     884:  00:915C  FE 0D               		CP 13
     885:  00:915E  20 F5               		JR NZ,.LOUT
     886:  00:9160  ED 79               		OUT [C],A
     887:  00:9162  7E                  		LD A,[HL]
     888:  00:9163  A7                  		AND A
     889:  00:9164  F8                  		RET M
     890:  00:9165  0C                  		INC C
     891:  00:9166  ED 79               		OUT [C],A
     892:  00:9168  C9                  		RET
     893:  00:9169                      
     894:  00:9169  64                  NT_DATA:	db (T_NEW_0-T1_)*2
     895:  00:916A  2A                  		db TCNEW_0-T_
     896:  00:916B  65                  		db (T_OLD_0-T1_)*2+1
     897:  00:916C  00                  		db TCOLD_0-T_
     898:  00:916D  01                  		db (T_NEW_1-T1_)*2+1
     899:  00:916E  0C                  		db TCNEW_1-T_
     900:  00:916F  01                  		db (T_OLD_1-T1_)*2+1
     901:  00:9170  0C                  		db TCOLD_1-T_
     902:  00:9171  94                  		db (T_NEW_2-T1_)*2
     903:  00:9172  35                  		db TCNEW_2-T_
     904:  00:9173  30                  		db (T_OLD_2-T1_)*2
     905:  00:9174  0E                  		db TCOLD_2-T_
     906:  00:9175  60                  		db (T_NEW_3-T1_)*2
     907:  00:9176  20                  		db TCNEW_3-T_
     908:  00:9177  60                  		db (T_OLD_3-T1_)*2
     909:  00:9178  21                  		db TCOLD_3-T_
     910:  00:9179                      
     911:  00:9179                      T_:
     912:  00:9179                      
     913:  00:9179                      TCOLD_0:	db $00+1,$04+1,$08+1,$0A+1,$0C+1,$0E+1,$12+1,$14+1
     913:  00:9179  01 05 09 0B 0D 0F 13 15 
     914:  00:9181  19 25 3D 00         		db $18+1,$24+1,$3C+1,0
     915:  00:9185                      TCNEW_1:	
     916:  00:9185  5D 00               TCOLD_1:	db $5C+1,0
     917:  00:9187                      TCOLD_2:	db $30+1,$36+1,$4C+1,$52+1,$5E+1,$70+1,$82,$8C,$9C
     917:  00:9187  31 37 4D 53 5F 71 82 8C 9C 
     918:  00:9190                      		db $9E,$A0,$A6,$A8,$AA,$AC,$AE,$AE,0
     918:  00:9190  9E A0 A6 A8 AA AC AE AE 00 
     919:  00:9199  57                  TCNEW_3:	db $56+1
     920:  00:919A                      TCOLD_3:	db $1E+1,$22+1,$24+1,$28+1,$2C+1,$2E+1,$32+1,$BE+1,0
     920:  00:919A  1F 23 25 29 2D 2F 33 BF 00 
     921:  00:91A3                      TCNEW_0:	db $1C+1,$20+1,$22+1,$26+1,$2A+1,$2C+1,$30+1,$54+1
     921:  00:91A3  1D 21 23 27 2B 2D 31 55 
     922:  00:91AB  BD BF 00            		db $BC+1,$BE+1,0
     923:  00:91AE                      TCNEW_2:	db $1A+1,$20+1,$24+1,$28+1,$2A+1,$3A+1,$4C+1,$5E+1
     923:  00:91AE  1B 21 25 29 2B 3B 4D 5F 
     924:  00:91B6  BB BD BF            		db $BA+1,$BC+1,$BE+1
     925:  00:91B9                      
     926:  00:91B9  00 01 00 90         EMPTYSAMORN: 	db 0,1,0,$90 ;delete $90 if you don't need default sample
     927:  00:91BD                      
     928:  00:91BD                      T_PACK:		; First 12 values of tone tables (packed)
     929:  00:91BD  0D                  		db ($06EC*2)/256
     930:  00:91BE  D8                  		db #d8
     931:  00:91BF  69                  		db $0755-$06EC
     932:  00:91C0  70                  		db $07C5-$0755
     933:  00:91C1  76                  		db $083B-$07C5
     934:  00:91C2  7D                  		db $08B8-$083B
     935:  00:91C3  85                  		db $093D-$08B8
     936:  00:91C4  8D                  		db $09CA-$093D
     937:  00:91C5  95                  		db $0A5F-$09CA
     938:  00:91C6  9D                  		db $0AFC-$0A5F
     939:  00:91C7  A8                  		db $0BA4-$0AFC
     940:  00:91C8  B1                  		db $0C55-$0BA4
     941:  00:91C9  BB                  		db $0D10-$0C55
     942:  00:91CA  0C                  		db ($066D*2)/256
     943:  00:91CB  DA                  		db #da
     944:  00:91CC  62                  		db $06CF-$066D
     945:  00:91CD  68                  		db $0737-$06CF
     946:  00:91CE  6D                  		db $07A4-$0737
     947:  00:91CF  75                  		db $0819-$07A4
     948:  00:91D0  7B                  		db $0894-$0819
     949:  00:91D1  83                  		db $0917-$0894
     950:  00:91D2  8A                  		db $09A1-$0917
     951:  00:91D3  92                  		db $0A33-$09A1
     952:  00:91D4  9C                  		db $0ACF-$0A33
     953:  00:91D5  A4                  		db $0B73-$0ACF
     954:  00:91D6  AF                  		db $0C22-$0B73
     955:  00:91D7  B8                  		db $0CDA-$0C22
     956:  00:91D8  0E                  		db ($0704*2)/256
     957:  00:91D9  08                  		db #08
     958:  00:91DA  6A                  		db $076E-$0704
     959:  00:91DB  72                  		db $07E0-$076E
     960:  00:91DC  78                  		db $0858-$07E0
     961:  00:91DD  7E                  		db $08D6-$0858
     962:  00:91DE  86                  		db $095C-$08D6
     963:  00:91DF  90                  		db $09EC-$095C
     964:  00:91E0  96                  		db $0A82-$09EC
     965:  00:91E1  A0                  		db $0B22-$0A82
     966:  00:91E2  AA                  		db $0BCC-$0B22
     967:  00:91E3  B4                  		db $0C80-$0BCC
     968:  00:91E4  BE                  		db $0D3E-$0C80
     969:  00:91E5  0F                  		db ($07E0*2)/256
     970:  00:91E6  C0                  		db #c0
     971:  00:91E7  78                  		db $0858-$07E0
     972:  00:91E8  88                  		db $08E0-$0858
     973:  00:91E9  80                  		db $0960-$08E0
     974:  00:91EA  90                  		db $09F0-$0960
     975:  00:91EB  98                  		db $0A88-$09F0
     976:  00:91EC  A0                  		db $0B28-$0A88
     977:  00:91ED  B0                  		db $0BD8-$0B28
     978:  00:91EE  A8                  		db $0C80-$0BD8
     979:  00:91EF  E0                  		db $0D60-$0C80
     980:  00:91F0  B0                  		db $0E10-$0D60
     981:  00:91F1  E8                  		db $0EF8-$0E10
      61.  00:91F2                      	include "ayFX-ROM_sjasm.asm"
       1:  00:91F2                      		; --- ayFX REPLAYER v1.31 ---
       2:  00:91F2                      
       3:  00:91F2                      		; --- v1.31	Fixed bug on previous version, only PSG channel C worked
       4:  00:91F2                      		; --- v1.3	Fixed volume and Relative volume versions on the same file, conditional compilation
       5:  00:91F2                      		; ---		Support for dynamic or fixed channel allocation
       6:  00:91F2                      		; --- v1.2f/r	ayFX bank support
       7:  00:91F2                      		; --- v1.11f/r	If a frame volume is zero then no AYREGS update
       8:  00:91F2                      		; --- v1.1f/r	Fixed volume for all ayFX streams
       9:  00:91F2                      		; --- v1.1	Explicit priority (as suggested by AR)
      10:  00:91F2                      		; --- v1.0f	Bug fixed (error when using noise)
      11:  00:91F2                      		; --- v1.0	Initial release
      12:  00:91F2                      
      13:  00:91F2                      		; --- DEFINE AYFXRELATIVE AS 0 FOR FIXED VOLUME VERSION ---
      14:  00:91F2                      		; --- DEFINE AYFXRELATIVE AS 1 FOR RELATIVE VOLUME VERSION ---
      15:  00:91F2  (00:0000)           AYFXRELATIVE equ 0
      16:  00:91F2                      
      17:  00:91F2                      ayFX_SETUP:	; ---          ayFX replayer setup          ---
      18:  00:91F2                      		; --- INPUT: HL -> pointer to the ayFX bank ---
      19:  00:91F2  22 41 F2            		ld	[ayFX_BANK],hl			; Current ayFX bank
      20:  00:91F5  3E 01               		ld	a,1				; a:=0
      21:  00:91F7  32 40 F2            		ld	[ayFX_MODE],a			; Initial mode: fixed channel
      22:  00:91FA  3C                  		inc	a				; Starting channel (=1)
      23:  00:91FB  32 4A F2            		ld	[ayFX_CHANNEL],a		; Updated
      24:  00:91FE                      ayFX_END:	; --- End of an ayFX stream ---
      25:  00:91FE  3E FF               		ld	a,255				; Lowest ayFX priority
      26:  00:9200  32 43 F2            		ld	[ayFX_PRIORITY],a		; Priority saved (not playing ayFX stream)
      27:  00:9203  C9                  		ret					; Return
      28:  00:9204                      
      29:  00:9204                      ayFX_INIT:	; ---     INIT A NEW ayFX STREAM     ---
      30:  00:9204                      		; --- INPUT: A -> sound to be played ---
      31:  00:9204                      		; ---        C -> sound priority     ---
      32:  00:9204  C5                  		push	bc				; Store bc in stack
      33:  00:9205  D5                  		push	de				; Store de in stack
      34:  00:9206  E5                  		push	hl				; Store hl in stack
      35:  00:9207                      		; --- Check if the index is in the bank ---
      36:  00:9207  47                  		ld	b,a				; b:=a (new ayFX stream index)
      37:  00:9208  2A 41 F2            		ld	hl,[ayFX_BANK]			; Current ayFX BANK
      38:  00:920B  7E                  		ld	a,[hl]				; Number of samples in the bank
      39:  00:920C  B7                  		or	a				; If zero (means 256 samples)...
      40:  00:920D  28 06               		jr	z,.CHECK_PRI			; ...goto .CHECK_PRI
      41:  00:920F                      		; The bank has less than 256 samples
      42:  00:920F  78                  		ld	a,b				; a:=b (new ayFX stream index)
      43:  00:9210  BE                  		cp	[hl]				; If new index is not in the bank...
      44:  00:9211  3E 02               		ld	a,2				; a:=2 (error 2: Sample not in the bank)
      45:  00:9213  30 21               		jr	nc,.INIT_END			; ...we can't init it
      46:  00:9215                      .CHECK_PRI:	; --- Check if the new priority is lower than the current one ---
      47:  00:9215                      		; ---   Remember: 0 = highest priority, 15 = lowest priority  ---
      48:  00:9215  78                  		ld	a,b				; a:=b (new ayFX stream index)
      49:  00:9216  3A 43 F2            		ld	a,[ayFX_PRIORITY]		; a:=Current ayFX stream priority
      50:  00:9219  B9                  		cp	c				; If new ayFX stream priority is lower than current one...
      51:  00:921A  3E 01               		ld	a,1				; a:=1 (error 1: A sample with higher priority is being played)
      52:  00:921C  38 18               		jr	c,.INIT_END			; ...we don't start the new ayFX stream
      53:  00:921E                      		; --- Set new priority ---
      54:  00:921E  79                  		ld	a,c				; a:=New priority
      55:  00:921F  E6 0F               		and	$0F				; We mask the priority
      56:  00:9221  32 43 F2            		ld	[ayFX_PRIORITY],a		; new ayFX stream priority saved in RAM
      57:  00:9224                      
      58:  00:9224                      		IF ( AYFXRELATIVE == 1 )
      59:  00:9224                    ~ 			; --- Volume adjust using PT3 volume table ---
      60:  00:9224                    ~ 			ld	c,a				; c:=New priority (fixed)
      61:  00:9224                    ~ 			ld	a,15				; a:=15
      62:  00:9224                    ~ 			sub	c				; a:=15-New priority = relative volume
      63:  00:9224                    ~ 			jr	z,.INIT_NOSOUND		; If priority is 15 -> no sound output (volume is zero)
      64:  00:9224                    ~ 			add	a,a				; a:=a*2
      65:  00:9224                    ~ 			add	a,a				; a:=a*4
      66:  00:9224                    ~ 			add	a,a				; a:=a*8
      67:  00:9224                    ~ 			add	a,a				; a:=a*16
      68:  00:9224                    ~ 			ld	e,a				; e:=a
      69:  00:9224                    ~ 			ld	d,0				; de:=a
      70:  00:9224                    ~ 			ld	hl,VT_				; hl:=PT3 volume table
      71:  00:9224                    ~ 			add	hl,de				; hl is a pointer to the relative volume table
      72:  00:9224                    ~ 			ld	[ayFX_VT],hl			; Save pointer
      73:  00:9224                    ~ 		ENDIF
      74:  00:9224                      
      75:  00:9224                      		; --- Calculate the pointer to the new ayFX stream ---
      76:  00:9224  ED 5B 41 F2         		ld	de,[ayFX_BANK]			; de:=Current ayFX bank
      77:  00:9228  13                  		inc	de				; de points to the increments table of the bank
      78:  00:9229  68                  		ld	l,b				; l:=b (new ayFX stream index)
      79:  00:922A  26 00               		ld	h,0				; hl:=b (new ayFX stream index)
      80:  00:922C  29                  		add	hl,hl				; hl:=hl*2
      81:  00:922D  19                  		add	hl,de				; hl:=hl+de (hl points to the correct increment)
      82:  00:922E  5E                  		ld	e,[hl]				; e:=lower byte of the increment
      83:  00:922F  23                  		inc	hl				; hl points to the higher byte of the correct increment
      84:  00:9230  56                  		ld	d,[hl]				; de:=increment
      85:  00:9231  19                  		add	hl,de				; hl:=hl+de (hl points to the new ayFX stream)
      86:  00:9232  22 44 F2            		ld	[ayFX_POINTER],hl		; Pointer saved in RAM
      87:  00:9235  AF                  		xor	a				; a:=0 (no errors)
      88:  00:9236  E1                  .INIT_END:	pop	hl				; Retrieve hl from stack
      89:  00:9237  D1                  		pop	de				; Retrieve de from stack
      90:  00:9238  C1                  		pop	bc				; Retrieve bc from stack
      91:  00:9239  C9                  		ret					; Return
      92:  00:923A                      
      93:  00:923A                      		IF ( AYFXRELATIVE == 1 )
      94:  00:923A                    ~ .INIT_NOSOUND:	; --- Init a sample with relative volume zero -> no sound output ---
      95:  00:923A                    ~ 			ld	a,255				; Lowest ayFX priority
      96:  00:923A                    ~ 			ld	[ayFX_PRIORITY],a		; Priority saved (not playing ayFX stream)
      97:  00:923A                    ~ 			jr	.INIT_END			; Jumps to .INIT_END
      98:  00:923A                    ~ 		ENDIF
      99:  00:923A                      
     100:  00:923A                      ayFX_PLAY:	; --- PLAY A FRAME OF AN ayFX STREAM ---
     101:  00:923A  3A 43 F2            		ld	a,[ayFX_PRIORITY]		; a:=Current ayFX stream priority
     102:  00:923D  B7                  		or	a				; If priority has bit 7 on...
     103:  00:923E  F8                  		ret	m				; ...return
     104:  00:923F                      		; --- Calculate next ayFX channel (if needed) ---
     105:  00:923F  3A 40 F2            		ld	a,[ayFX_MODE]			; ayFX mode
     106:  00:9242  E6 01               		and	1				; If bit0=0 (fixed channel)...
     107:  00:9244  28 08               		jr	z,.TAKECB			; ...skip channel changing
     108:  00:9246  21 4A F2            		ld	hl,ayFX_CHANNEL			; Old ayFX playing channel
     109:  00:9249  35                  		dec	[hl]				; New ayFX playing channel
     110:  00:924A  20 02               		jr	nz,.TAKECB			; If not zero jump to .TAKECB
     111:  00:924C  36 03               		ld	[hl],3				; If zero -> set channel 3
     112:  00:924E                      .TAKECB:	; --- Extract control byte from stream ---
     113:  00:924E  2A 44 F2            		ld	hl,[ayFX_POINTER]		; Pointer to the current ayFX stream
     114:  00:9251  4E                  		ld	c,[hl]				; c:=Control byte
     115:  00:9252  23                  		inc	hl				; Increment pointer
     116:  00:9253                      		; --- Check if there's new tone on stream ---
     117:  00:9253  CB 69               		bit	5,c				; If bit 5 c is off...
     118:  00:9255  28 08               		jr	z,.CHECK_NN			; ...jump to .CHECK_NN (no new tone)
     119:  00:9257                      		; --- Extract new tone from stream ---
     120:  00:9257  5E                  		ld	e,[hl]				; e:=lower byte of new tone
     121:  00:9258  23                  		inc	hl				; Increment pointer
     122:  00:9259  56                  		ld	d,[hl]				; d:=higher byte of new tone
     123:  00:925A  23                  		inc	hl				; Increment pointer
     124:  00:925B  ED 53 46 F2         		ld	[ayFX_TONE],de			; ayFX tone updated
     125:  00:925F                      .CHECK_NN:	; --- Check if there's new noise on stream ---
     126:  00:925F  CB 71               		bit	6,c				; if bit 6 c is off...
     127:  00:9261  28 09               		jr	z,.SETPOINTER			; ...jump to .SETPOINTER (no new noise)
     128:  00:9263                      		; --- Extract new noise from stream ---
     129:  00:9263  7E                  		ld	a,[hl]				; a:=New noise
     130:  00:9264  23                  		inc	hl				; Increment pointer
     131:  00:9265  FE 20               		cp	$20				; If it's an illegal value of noise (used to mark end of stream)...
     132:  00:9267  28 95               		jr.	z,ayFX_END			; ...jump to ayFX_END
     133:  00:9269  32 48 F2            		ld	[ayFX_NOISE],a			; ayFX noise updated
     134:  00:926C                      .SETPOINTER:	; --- Update ayFX pointer ---
     135:  00:926C  22 44 F2            		ld	[ayFX_POINTER],hl		; Update ayFX stream pointer
     136:  00:926F                      		; --- Extract volume ---
     137:  00:926F  79                  		ld	a,c				; a:=Control byte
     138:  00:9270  E6 0F               		and	$0F				; lower nibble
     139:  00:9272                      
     140:  00:9272                      		IF ( AYFXRELATIVE == 1 )
     141:  00:9272                    ~ 			; --- Fix the volume using PT3 Volume Table ---
     142:  00:9272                    ~ 			ld	hl,[ayFX_VT]			; hl:=Pointer to relative volume table
     143:  00:9272                    ~ 			ld	e,a				; e:=a (ayFX volume)
     144:  00:9272                    ~ 			ld	d,0				; d:=0
     145:  00:9272                    ~ 			add	hl,de				; hl:=hl+de (hl points to the relative volume of this frame
     146:  00:9272                    ~ 			ld	a,[hl]				; a:=ayFX relative volume
     147:  00:9272                    ~ 			or	a				; If relative volume is zero...
     148:  00:9272                    ~ 		ENDIF
     149:  00:9272                      
     150:  00:9272  32 49 F2            		ld	[ayFX_VOLUME],a			; ayFX volume updated
     151:  00:9275  C8                  		ret	z				; ...return (don't copy ayFX values in to AYREGS)
     152:  00:9276                      		; -------------------------------------
     153:  00:9276                      		; --- COPY ayFX VALUES IN TO AYREGS ---
     154:  00:9276                      		; -------------------------------------
     155:  00:9276                      		; --- Set noise channel ---
     156:  00:9276  CB 79               		bit	7,c				; If noise is off...
     157:  00:9278  20 06               		jr	nz,.SETMASKS			; ...jump to .SETMASKS
     158:  00:927A  3A 48 F2            		ld	a,[ayFX_NOISE]			; ayFX noise value
     159:  00:927D  32 46 F1            		ld	[AYREGS+6],a			; copied in to AYREGS (noise channel)
     160:  00:9280                      .SETMASKS:	; --- Set mixer masks ---
     161:  00:9280  79                  		ld	a,c				; a:=Control byte
     162:  00:9281  E6 90               		and	$90				; Only bits 7 and 4 (noise and tone mask for psg reg 7)
     163:  00:9283  FE 90               		cp	$90				; If no noise and no tone...
     164:  00:9285  C8                  		ret	z				; ...return (don't copy ayFX values in to AYREGS)
     165:  00:9286                      		; --- Copy ayFX values in to ARYREGS ---
     166:  00:9286  0F                  		rrca					; Rotate a to the right (1 TIME)
     167:  00:9287  0F                  		rrca					; Rotate a to the right (2 TIMES) (OR mask)
     168:  00:9288  16 DB               		ld	d,$DB				; d:=Mask for psg mixer (AND mask)
     169:  00:928A                      		; --- Dump to correct channel ---
     170:  00:928A  21 4A F2            		ld	hl,ayFX_CHANNEL			; Next ayFX playing channel
     171:  00:928D  46                  		ld	b,[hl]				; Channel counter
     172:  00:928E                      .CHK1:		; --- Check if playing channel was 1 ---
     173:  00:928E  10 0D               		djnz	.CHK2				; Decrement and jump if channel was not 1
     174:  00:9290                      .PLAY_C:	; --- Play ayFX stream on channel C ---
     175:  00:9290  CD BF 92            		call	.SETMIXER			; Set PSG mixer value (returning a=ayFX volume and hl=ayFX tone)
     176:  00:9293  32 4A F1            		ld	[AYREGS+10],a			; Volume copied in to AYREGS (channel C volume)
     177:  00:9296  CB 51               		bit	2,c				; If tone is off...
     178:  00:9298  C0                  		ret	nz				; ...return
     179:  00:9299  22 44 F1            		ld	[AYREGS+4],hl			; copied in to AYREGS (channel C tone)
     180:  00:929C  C9                  		ret					; Return
     181:  00:929D                      .CHK2:		; --- Check if playing channel was 2 ---
     182:  00:929D  CB 0A               		rrc	d				; Rotate right AND mask
     183:  00:929F  0F                  		rrca					; Rotate right OR mask
     184:  00:92A0  10 0D               		djnz	.CHK3				; Decrement and jump if channel was not 2
     185:  00:92A2                      .PLAY_B:	; --- Play ayFX stream on channel B ---
     186:  00:92A2  CD BF 92            		call	.SETMIXER			; Set PSG mixer value (returning a=ayFX volume and hl=ayFX tone)
     187:  00:92A5  32 49 F1            		ld	[AYREGS+9],a			; Volume copied in to AYREGS (channel B volume)
     188:  00:92A8  CB 49               		bit	1,c				; If tone is off...
     189:  00:92AA  C0                  		ret	nz				; ...return
     190:  00:92AB  22 42 F1            		ld	[AYREGS+2],hl			; copied in to AYREGS (channel B tone)
     191:  00:92AE  C9                  		ret					; Return
     192:  00:92AF                      .CHK3:		; --- Check if playing channel was 3 ---
     193:  00:92AF  CB 0A               		rrc	d				; Rotate right AND mask
     194:  00:92B1  0F                  		rrca					; Rotate right OR mask
     195:  00:92B2                      .PLAY_A:	; --- Play ayFX stream on channel A ---
     196:  00:92B2  CD BF 92            		call	.SETMIXER			; Set PSG mixer value (returning a=ayFX volume and hl=ayFX tone)
     197:  00:92B5  32 48 F1            		ld	[AYREGS+8],a			; Volume copied in to AYREGS (channel A volume)
     198:  00:92B8  CB 41               		bit	0,c				; If tone is off...
     199:  00:92BA  C0                  		ret	nz				; ...return
     200:  00:92BB  22 40 F1            		ld	[AYREGS+0],hl			; copied in to AYREGS (channel A tone)
     201:  00:92BE  C9                  		ret					; Return
     202:  00:92BF                      .SETMIXER:	; --- Set PSG mixer value ---
     203:  00:92BF  4F                  		ld	c,a				; c:=OR mask
     204:  00:92C0  3A 47 F1            		ld	a,[AYREGS+7]			; a:=PSG mixer value
     205:  00:92C3  A2                  		and	d				; AND mask
     206:  00:92C4  B1                  		or	c				; OR mask
     207:  00:92C5  32 47 F1            		ld	[AYREGS+7],a			; PSG mixer value updated
     208:  00:92C8  3A 49 F2            		ld	a,[ayFX_VOLUME]			; a:=ayFX volume value
     209:  00:92CB  2A 46 F2            		ld	hl,[ayFX_TONE]			; ayFX tone value
     210:  00:92CE  C9                  		ret					; Return
     211:  00:92CF                      
     212:  00:92CF                      		IF ( AYFXRELATIVE == 1 )
     213:  00:92CF                    ~ 			; --- UNCOMMENT THIS IF YOU DON'T USE THIS REPLAYER WITH PT3 REPLAYER ---
     214:  00:92CF                    ~ 		;VT_:	.INCBIN	"VT.BIN"
     215:  00:92CF                    ~ 			; --- UNCOMMENT THIS IF YOU DON'T USE THIS REPLAYER WITH PT3 REPLAYER ---
     216:  00:92CF                    ~ 		ENDIF
      62.  00:92CF                      	
      63.  00:92CF                      	
      64.  00:92CF                      
      65.  00:92CF                      ;;=====================================================
      66.  00:92CF                      ;;DEFINICIÓN DE CANTIONES Y EFECTOS DE SONIDO
      67.  00:92CF                      ;;=====================================================		
      68.  00:92CF                      song:
      69.  00:92CF  (0968)              	incbin "bloodytears_castlevania.99"
      70.  00:9C37                      	
      71.  00:9C37                      sfx_bank:
      72.  00:9C37  (004B)              	incbin "demo.afb"
      73.  00:9C82                      
     256   00:9C82                      	
     257   00:9C82                      	include "subr_ayudas.asm"
       1.  00:9C82                      ;;=====================================================
       2.  00:9C82                      ;;SUBRUTINAS MANEJO DE OBJETOS AYUDA
       3.  00:9C82                      ;;=====================================================	
       4.  00:9C82                      
       5.  00:9C82                      ;;=====================================================
       6.  00:9C82                      ;;VARIABLES
       7.  00:9C82                      ;;=====================================================
       8.  00:9C82                      
       9.  00:9C82  00                  examina_ayudas_en_pantalla:		DB	0		;variable que se actualiza cuando cambiemos de habitación para no mirar el bit de habitación cada vez
      10.  00:9C83  00 00               puntero_ayuda_actual:			DW	0		;puntero a ayda que se muestra en pantalla (sólo se muestra una a la vez)
      11.  00:9C85                      
      12.  00:9C85                      ;array de ayudas
      13.  00:9C85                      ;posición dentro del bank1 (o 0 que son iguales) de los tiles de la ayuda (cómo en los sprites de 2x2)
      14.  00:9C85                      array_ayudas:
      15.  00:9C85  C8 CA               array_oracionon:			DB	200,202
      16.  00:9C87  C9 CB               array_oracionon1:			DB	201,203
      17.  00:9C89  CC CE               array_oracionoff:			DB	204,206
      18.  00:9C8B  CD CF               array_oracionoff1:			DB	205,207
      19.  00:9C8D  D0 D2               array_cruzon:				DB	208,210
      20.  00:9C8F  D1 D3               array_cruzon1:				DB	209,211
      21.  00:9C91  D4 D6               array_cruzoff:				DB	212,214
      22.  00:9C93  D5 D7               array_cruzoff1:				DB	213,215
      23.  00:9C95  D8 DA               array_aguaon:				DB	216,218
      24.  00:9C97  D9 DB               array_aguaon1:				DB	217,219
      25.  00:9C99  DC DE               array_aguaoff:				DB	220,222
      26.  00:9C9B  DD DF               array_aguaoff1:				DB	221,223
      27.  00:9C9D  E0 E2               array_armaduraon:			DB	224,226
      28.  00:9C9F  E1 E3               array_armaduraon1:			DB	225,227
      29.  00:9CA1  E4 E6               array_armaduraoff:			DB	228,230
      30.  00:9CA3  E5 E7               array_armaduraoff1:			DB	229,231
      31.  00:9CA5  E8 EA               array_plantaon:				DB	232,234
      32.  00:9CA7  E9 EB               array_plantaon1:			DB	233,235
      33.  00:9CA9  EC EE               array_plantaoff:			DB	236,238
      34.  00:9CAB  ED EF               array_plantaoff1:			DB	237,239
      35.  00:9CAD  F0 F2               array_extraon:				DB	240,242
      36.  00:9CAF  F1 F3               array_extraon1:				DB	241,243
      37.  00:9CB1  F4 F6               array_extraoff:				DB	244,246
      38.  00:9CB3  F5 F7               array_extraoff1:			DB	245,247
      39.  00:9CB5  F8 FA               array_ballestaon:			DB	248,250
      40.  00:9CB7  F9 FB               array_ballestaon1:			DB	249,251
      41.  00:9CB9  FC FE               array_ballestaoff:			DB	252,254
      42.  00:9CBB  FD FF               array_ballestaoff1:			DB	253,255
      43.  00:9CBD                      
      44.  00:9CBD                      
      45.  00:9CBD                      lista_ayudas:
      46.  00:9CBD  00 (15)             ayuda_oracion:		DS		ESTRUCTURA_AYUDA		
      47.  00:9CCC                      ;~ ayuda_cruz:			DS		ESTRUCTURA_AYUDA
      48.  00:9CCC                      ;~ ayuda_aguabendita:	DS		ESTRUCTURA_AYUDA
      49.  00:9CCC                      ;~ ayuda_armadura:		DS		ESTRUCTURA_AYUDA
      50.  00:9CCC                      ;~ ayuda_planta:		DS		ESTRUCTURA_AYUDA
      51.  00:9CCC                      ;~ ayuda_vidaextra		DS		ESTRUCTURA_AYUDA
      52.  00:9CCC                      ;~ ayuda_ballesta:		DS		ESTRUCTURA_AYUDA
      53.  00:9CCC                      
      54.  00:9CCC                      ;datos ayudas
      55.  00:9CCC                      
      56.  00:9CCC                      ;hay que repasar todos los posoracionx y posayudasy ***********************************
      57.  00:9CCC                      
      58.  00:9CCC                      datos_oracion:			
      59.  00:9CCC  00                  				DB		INACTIVA		;0 no activa <>0 activo (y muestra tiles ayudaoff)
      60.  00:9CCD  38                  				DB		POSORACIONX		;punto x de la ayuda para cuando se dispare encima
      61.  00:9CCE  58                  				DB		POSORACIONY		;punto y de la ayuda para cuando se dispare encima
      62.  00:9CCF  08                  				DB		RADIOAYUDAX		;radio x de la ayuda para cuando se dispare encima
      63.  00:9CD0  08                  				DB		RADIOAYUDAY		;radio y de la ayuda para cuando se dispare encima
      64.  00:9CD1  38 9D               				DW		accion_oracion	;función para acción de cada tipo de ayuda
      65.  00:9CD3  85 9C               				DW		array_oracionon	;puntero al array con los tiles de las ayudas sin usar para wordaux2
      66.  00:9CD5  89 9C               				DW		array_oracionoff;puntero al array con los tiles de las ayudas sin usar para wordaux2
      67.  00:9CD7  46 19               				DW		TILMAP + POSORACION ;calcula posición en tilemap para wordaux1
      68.  00:9CD9  02                  				DB		ALTOAYUDA		;alto en tiles del dibujo de la puerta (filas)
      69.  00:9CDA  02                  				DB		ANCHOAYUDA		;ancho en tiles del dibujo de la puerta (columnas)
      70.  00:9CDB                      					
      71.  00:9CDB                      ;~ datos_cruz:			
      72.  00:9CDB                      				;~ DB		0				;0 no activa <>0 activo (y muestra tiles ayudaoff)
      73.  00:9CDB                      				;~ DB		POSCRUZX		;punto x de la ayuda para cuando se dispare encima
      74.  00:9CDB                      				;~ DB		POSAYUDASY		;punto y de la ayuda para cuando se dispare encima
      75.  00:9CDB                      				;~ DB		8				;radio x de la ayuda para cuando se dispare encima
      76.  00:9CDB                      				;~ DB		8				;radio y de la ayuda para cuando se dispare encima
      77.  00:9CDB                      				;~ DW		accion_oracion	;función para acción de cada tipo de ayuda
      78.  00:9CDB                      				;~ DW		array_oracionon	;puntero al array con los tiles de las ayudas sin usar para wordaux2
      79.  00:9CDB                      				;~ DW		array_oracionoff;puntero al array con los tiles de las ayudas sin usar para wordaux2
      80.  00:9CDB                      				;~ DW		TILMAP + POSORACION ;calcula posición en tilemap para wordaux1
      81.  00:9CDB                      				;~ DB		2				;alto en tiles del dibujo de la puerta (filas)
      82.  00:9CDB                      				;~ DB		2				;ancho en tiles del dibujo de la puerta (columnas)
      83.  00:9CDB                      
      84.  00:9CDB                      				
      85.  00:9CDB                      ;~ datos_cruz:
      86.  00:9CDB                      				;~ DB    	0				;0 no activo <>0 activo															0
      87.  00:9CDB                      				;~ DW		array_cruzon	;pos en memoria ver array_ayudas de cómo se mostrarán (wordaux2)				1,2
      88.  00:9CDB                      				;~ DW		array_cruzoff	;pos en memoria ver array_ayudas de cómo se mostrarán (wordaux2)				3,4
      89.  00:9CDB                      				;~ DB		POSCRUZ			;pos en pantalla (memoria en el banco 1 se le suma 256 + TILEMAP) (wordaux1)	5
      90.  00:9CDB                      				;~ DB		POSCRUZX		;pos del pixel central (esquina superior + 8x)									6
      91.  00:9CDB                      				;~ DB		POSAYUDASY		;pos del pixel central (esquina superior + 8y) (para toas igual)				7
      92.  00:9CDB                      				;~ DW		accion_cruz		;subrutina que indica la acción si se dispara en el objeto						8,9 
      93.  00:9CDB                      				
      94.  00:9CDB                      				;~ DB    	0				;0 no activo <>0 activo															0
      95.  00:9CDB                      				;~ DW		array_cruzon	;pos en memoria ver array_ayudas de cómo se mostrarán (wordaux2)				1,2
      96.  00:9CDB                      				;~ DW		array_cruzoff	;pos en memoria ver array_ayudas de cómo se mostrarán (wordaux2)				3,4
      97.  00:9CDB                      				;~ DB		167			;pos en pantalla (memoria en el banco 1 se le suma 256 + TILEMAP) (wordaux1)	5
      98.  00:9CDB                      				;~ DB		64		;pos del pixel central (esquina superior + 8x)									6
      99.  00:9CDB                      				;~ DB		112		;pos del pixel central (esquina superior + 8y) (para toas igual)				7
     100.  00:9CDB                      				;~ DW		accion_cruz		;subrutina que indica la acción si se dispara en el objeto						8,9 
     101.  00:9CDB                      				
     102.  00:9CDB                      ;~ datos_aguabendita:
     103.  00:9CDB                      				;~ DB    	0				;0 no activo <>0 activo															0
     104.  00:9CDB                      				;~ DW		array_aguaon	;pos en memoria ver array_ayudas de cómo se mostrarán (wordaux2)				1,2
     105.  00:9CDB                      				;~ DW		array_aguaoff	;pos en memoria ver array_ayudas de cómo se mostrarán (wordaux2)				3,4
     106.  00:9CDB                      				;~ DB		POSAGUA			;pos en pantalla (memoria en el banco 1 se le suma 256 + TILEMAP) (wordaux1)	5
     107.  00:9CDB                      				;~ DB		POSAGUAX		;pos del pixel central (esquina superior + 8x)									6
     108.  00:9CDB                      				;~ DB		POSAYUDASY		;pos del pixel central (esquina superior + 8y) (para toas igual)				7
     109.  00:9CDB                      				;~ DW		accion_agua		;subrutina que indica la acción si se dispara en el objeto						8,9
     110.  00:9CDB                      				;~ DB		0	;relleno																		10-16    
     111.  00:9CDB                      				;~ DB		0	;relleno																		10-16    
     112.  00:9CDB                      				;~ DB		0	;relleno																		10-16    
     113.  00:9CDB                      				;~ DB		0	;relleno																		10-16    
     114.  00:9CDB                      				;~ DB		0	;relleno																		10-16    
     115.  00:9CDB                      				;~ DB		0	;relleno																		10-16   
     116.  00:9CDB                      				;~ DB		0	;relleno																		10-16    
     117.  00:9CDB                      ;~ datos_armadura:
     118.  00:9CDB                      				;~ DB    	0				;0 no activo <>0 activo															0
     119.  00:9CDB                      				;~ DW		array_armaduraon;pos en memoria ver array_ayudas de cómo se mostrarán (wordaux2)				1,2
     120.  00:9CDB                      				;~ DW		array_armaduraoff;pos en memoria ver array_ayudas de cómo se mostrarán (wordaux2)				3,4
     121.  00:9CDB                      				;~ DB		POSARMAD		;pos en pantalla (memoria en el banco 1 se le suma 256 + TILEMAP) (wordaux1)	5
     122.  00:9CDB                      				;~ DB		POSARMADX		;pos del pixel central (esquina superior + 8x)									6
     123.  00:9CDB                      				;~ DB		POSAYUDASY		;pos del pixel central (esquina superior + 8y) (para toas igual)				7
     124.  00:9CDB                      				;~ DW		accion_armadura	;subrutina que indica la acción si se dispara en el objeto						8,9
     125.  00:9CDB                      				;~ DB		0	;relleno																		10-16    
     126.  00:9CDB                      				;~ DB		0	;relleno																		10-16    
     127.  00:9CDB                      				;~ DB		0	;relleno																		10-16    
     128.  00:9CDB                      				;~ DB		0	;relleno																		10-16    
     129.  00:9CDB                      				;~ DB		0	;relleno																		10-16    
     130.  00:9CDB                      				;~ DB		0	;relleno																		10-16   
     131.  00:9CDB                      				;~ DB		0	;relleno																		10-16    
     132.  00:9CDB                      ;~ datos_planta:
     133.  00:9CDB                      				;~ DB    	0				;0 no activo <>0 activo															0
     134.  00:9CDB                      				;~ DW		array_plantaon	;pos en memoria ver array_ayudas de cómo se mostrarán (wordaux2)				1,2
     135.  00:9CDB                      				;~ DW		array_plantaoff	;pos en memoria ver array_ayudas de cómo se mostrarán (wordaux2)				3,4
     136.  00:9CDB                      				;~ DB		POSPLANTA		;pos en pantalla (memoria en el banco 1 se le suma 256 + TILEMAP) (wordaux1)	5
     137.  00:9CDB                      				;~ DB		POSPLANTAX		;pos del pixel central (esquina superior + 8x)									6
     138.  00:9CDB                      				;~ DB		POSAYUDASY		;pos del pixel central (esquina superior + 8y) (para toas igual)				7
     139.  00:9CDB                      				;~ DW		accion_planta	;subrutina que indica la acción si se dispara en el objeto						8,9
     140.  00:9CDB                      				;~ DB		0	;relleno																		10-16    
     141.  00:9CDB                      				;~ DB		0	;relleno																		10-16    
     142.  00:9CDB                      				;~ DB		0	;relleno																		10-16    
     143.  00:9CDB                      				;~ DB		0	;relleno																		10-16    
     144.  00:9CDB                      				;~ DB		0	;relleno																		10-16    
     145.  00:9CDB                      				;~ DB		0	;relleno																		10-16   
     146.  00:9CDB                      				;~ DB		0	;relleno																		10-16     
     147.  00:9CDB                      ;~ datos_vidaextra:
     148.  00:9CDB                      				;~ DB    	0				;0 no activo <>0 activo															0
     149.  00:9CDB                      				;~ DW		array_extraon	;pos en memoria ver array_ayudas de cómo se mostrarán (wordaux2)				1,2
     150.  00:9CDB                      				;~ DW		array_extraoff	;pos en memoria ver array_ayudas de cómo se mostrarán (wordaux2)				3,4
     151.  00:9CDB                      				;~ DB		POSVIDAEXT		;pos en pantalla (memoria en el banco 1 se le suma 256 + TILEMAP) (wordaux1)	5
     152.  00:9CDB                      				;~ DB		POSVIDAEXTX		;pos del pixel central (esquina superior + 8x)									6
     153.  00:9CDB                      				;~ DB		POSAYUDASY		;pos del pixel central (esquina superior + 8y) (para toas igual)				7
     154.  00:9CDB                      				;~ DW		accion_vidaextra;subrutina que indica la acción si se dispara en el objeto						8,9
     155.  00:9CDB                      				;~ DB		0	;relleno																		10-16    
     156.  00:9CDB                      				;~ DB		0	;relleno																		10-16    
     157.  00:9CDB                      				;~ DB		0	;relleno																		10-16    
     158.  00:9CDB                      				;~ DB		0	;relleno																		10-16    
     159.  00:9CDB                      				;~ DB		0	;relleno																		10-16    
     160.  00:9CDB                      				;~ DB		0	;relleno																		10-16   
     161.  00:9CDB                      				;~ DB		0	;relleno																		10-16     
     162.  00:9CDB                      ;~ datos_ballesta:
     163.  00:9CDB                      				;~ DB    	0				;0 no activo <>0 activo															0
     164.  00:9CDB                      				;~ DW		array_ballestaon;pos en memoria ver array_ayudas de cómo se mostrarán (wordaux2)				1,2
     165.  00:9CDB                      				;~ DW		array_ballestaoff;pos en memoria ver array_ayudas de cómo se mostrarán (wordaux2)				3,4
     166.  00:9CDB                      				;~ DB		POSBALLESTA		;pos en pantalla (memoria en el banco 1 se le suma 256 + TILEMAP) (wordaux1)	5
     167.  00:9CDB                      				;~ DB		POSBALLESTAX	;pos del pixel central (esquina superior + 8x)									6
     168.  00:9CDB                      				;~ DB		POSAYUDASY		;pos del pixel central (esquina superior + 8y) (para toas igual)				7
     169.  00:9CDB                      				;~ DW		accion_oracion	;subrutina que indica la acción si se dispara en el objeto						8,9
     170.  00:9CDB                      				;~ DB		0	;relleno																		10-16    
     171.  00:9CDB                      				;~ DB		0	;relleno																		10-16    
     172.  00:9CDB                      				;~ DB		0	;relleno																		10-16    
     173.  00:9CDB                      				;~ DB		0	;relleno																		10-16    
     174.  00:9CDB                      				;~ DB		0	;relleno																		10-16    
     175.  00:9CDB                      				;~ DB		0	;relleno																		10-16   
     176.  00:9CDB                      				;~ DB		0	;relleno																		10-16      
     177.  00:9CDB                      
     178.  00:9CDB                      
     179.  00:9CDB                      
     180.  00:9CDB                      
     181.  00:9CDB                      ;;=====================================================
     182.  00:9CDB                      ;;INICIALIZA_AYUDAS
     183.  00:9CDB                      ;;=====================================================	
     184.  00:9CDB                      ; función: 	inicializa las variables de estructuras de ayuda del array lista_ayudas
     185.  00:9CDB                      ; entrada: 	datos_delasdistintasayudas, variable estructura_ayuda_ayudaquesea
     186.  00:9CDB                      ; salida: 	lista_ayudas
     187.  00:9CDB                      ; toca:		HL, DE, BC
     188.  00:9CDB                      inicializa_ayudas:
     189.  00:9CDB                      	;oracion
     190.  00:9CDB  21 CC 9C            	LD		HL, datos_oracion
     191.  00:9CDE  11 BD 9C            	LD		DE, ayuda_oracion
     192.  00:9CE1  CD E5 9C            	CALL	carga_datos_ayuda
     193.  00:9CE4                      
     194.  00:9CE4                      
     195.  00:9CE4                      	;~ ;oración
     196.  00:9CE4                      	;~ LD		IX, ayuda_oracion
     197.  00:9CE4                      	;~ LD		(IX + 0), INACTIVA			
     198.  00:9CE4                      	;~ LD		HL, array_oracionon
     199.  00:9CE4                      	;~ LD		(IX + 1), H
     200.  00:9CE4                      	;~ LD		(IX + 2), L
     201.  00:9CE4                      	;~ LD		HL, array_oracionoff
     202.  00:9CE4                      	;~ LD		(IX + 3), H
     203.  00:9CE4                      	;~ LD		(IX + 4), L
     204.  00:9CE4                      	;~ LD		(IX + 5), POSORACION
     205.  00:9CE4                      	;~ LD		(IX + 6), POSORACIONX
     206.  00:9CE4                      	;~ LD		(IX + 7), POSAYUDASY	
     207.  00:9CE4                      	;~ LD		HL, accion_oracion
     208.  00:9CE4                      	;~ LD		(IX + 8), H
     209.  00:9CE4                      	;~ LD		(IX + 9), L
     210.  00:9CE4                      	
     211.  00:9CE4                      	;~ ;cruz
     212.  00:9CE4                      	;~ LD		HL, datos_cruz
     213.  00:9CE4                      	;~ LD		DE, ayuda_cruz
     214.  00:9CE4                      	;~ LD		BC, 16;#ESTRUCTURA_AYUDA ;equivale a 16.. el tamaño de la estructura en bytes
     215.  00:9CE4                      	;~ LDIR
     216.  00:9CE4                      	
     217.  00:9CE4                      	;~ ;agua bendita
     218.  00:9CE4                      	;~ LD		HL, datos_aguabendita
     219.  00:9CE4                      	;~ LD		DE, ayuda_aguabendita
     220.  00:9CE4                      	;~ CALL	carga_datos_ayuda
     221.  00:9CE4                      		
     222.  00:9CE4                      	;~ ;armadura
     223.  00:9CE4                      	;~ LD		HL, datos_armadura
     224.  00:9CE4                      	;~ LD		DE, ayuda_armadura
     225.  00:9CE4                      	;~ CALL	carga_datos_ayuda
     226.  00:9CE4                      		
     227.  00:9CE4                      	;~ ;planta
     228.  00:9CE4                      	;~ LD		HL, datos_planta
     229.  00:9CE4                      	;~ LD		DE, ayuda_planta
     230.  00:9CE4                      	;~ CALL	carga_datos_ayuda
     231.  00:9CE4                      		
     232.  00:9CE4                      	;~ ;vida extra
     233.  00:9CE4                      	;~ LD		HL, datos_vidaextra
     234.  00:9CE4                      	;~ LD		DE, ayuda_vidaextra
     235.  00:9CE4                      	;~ CALL	carga_datos_ayuda
     236.  00:9CE4                      		
     237.  00:9CE4                      	;~ ;ballesta
     238.  00:9CE4                      	;~ LD		HL, datos_ballesta
     239.  00:9CE4                      	;~ LD		DE, ayuda_ballesta
     240.  00:9CE4                      	;~ CALL	carga_datos_ayuda
     241.  00:9CE4                      fin_inicializa_ayudas:
     242.  00:9CE4  C9                  	RET
     243.  00:9CE5                      	
     244.  00:9CE5                      
     245.  00:9CE5                      ;;=====================================================
     246.  00:9CE5                      ;;CARGA_DATOS_AYUDA
     247.  00:9CE5                      ;;=====================================================	
     248.  00:9CE5                      ; función: 	carga los datos de la ayuda de una variable dentro de la variable estructura (más carga y espacio que rellenar a pelo desde IX en adelante pero más simple)
     249.  00:9CE5                      ;entrada
     250.  00:9CE5                      ;  hl: origen de datos
     251.  00:9CE5                      ;  de: destino de datos
     252.  00:9CE5                      ; salida: 	-
     253.  00:9CE5                      ; toca:		HL, DE, BC
     254.  00:9CE5                      carga_datos_ayuda:
     255.  00:9CE5  01 0F 00            	LD		BC, 15;ESTRUCTURA_AYUDA ;equivale a 16.. el tamaño de la estructura en bytes
     256.  00:9CE8  ED B0               	LDIR
     257.  00:9CEA                      fin_carga_datos_ayuda:
     258.  00:9CEA  C9                  	RET
     259.  00:9CEB                      
     260.  00:9CEB                      
     261.  00:9CEB                      
     262.  00:9CEB                      ;;=====================================================
     263.  00:9CEB                      ;;PINTA_OBJ_AYUDA
     264.  00:9CEB                      ;;=====================================================	
     265.  00:9CEB                      ; función: 	pinta un objeto de tipo ayuda que se le pase por referencia IX y el tipo en A
     266.  00:9CEB                      ; entrada: 	IX - puntero a objeto a mostrar, A - si está on u off
     267.  00:9CEB                      ; salida: 	-
     268.  00:9CEB                      ; toca:		AF, HL, BC, DE
     269.  00:9CEB                      pinta_obj_ayuda:
     270.  00:9CEB                      	;se recibe objeto desde fuera, por ejmplo LD IX, ayuda_oracion
     271.  00:9CEB                      
     272.  00:9CEB                      	;si A=1 dibujo on (si 0 off)
     273.  00:9CEB  B7                  	OR		 A
     274.  00:9CEC  C2 FB 9C            	JP		 NZ,.dibujooff
     275.  00:9CEF                      .dibujoon:	
     276.  00:9CEF  DD 6E 09            		LD		 L, (IX + ESTRUCTURA_AYUDA.tiles_ayudaoff)
     277.  00:9CF2  DD 66 0A            		LD		 H, (IX + ESTRUCTURA_AYUDA.tiles_ayudaoff + 1)
     278.  00:9CF5  22 FE 85            		LD		(wordaux2), HL	;pongo el valor en wordaux2
     279.  00:9CF8  C3 04 9D            		JP		.param_wordaux2
     280.  00:9CFB                      .dibujooff:
     281.  00:9CFB  DD 6E 07            		LD		 L, (IX + ESTRUCTURA_AYUDA.tiles_ayudaon)
     282.  00:9CFE  DD 66 08            		LD		 H, (IX + ESTRUCTURA_AYUDA.tiles_ayudaon + 1)
     283.  00:9D01  22 FE 85            		LD		(wordaux2), HL	;pongo el valor en wordaux2
     284.  00:9D04                      ;fin si
     285.  00:9D04                      .param_wordaux2:	
     286.  00:9D04  DD 6E 0B            	LD		 L, (IX + ESTRUCTURA_AYUDA.pos_en_tilemap)
     287.  00:9D07  DD 66 0C            	LD		 H, (IX + ESTRUCTURA_AYUDA.pos_en_tilemap + 1)
     288.  00:9D0A  22 FC 85            	LD		(wordaux1), HL		;pongo el valor en wordaux1
     289.  00:9D0D                      
     290.  00:9D0D                      .filasycols:
     291.  00:9D0D  3E 02               	LD		 A, 2
     292.  00:9D0F                      	;se comenta para ahorrar tiempo (y porque habría que pasarlo previamente a A cuando siempre es 2)
     293.  00:9D0F                      	;~ LD		(byteaux1), (IX + ESTRUCTURA_AYUDA.alto);nº de filas
     294.  00:9D0F                      	;~ LD		(byteaux2), (IX + ESTRUCTURA_AYUDA.alto);nº de columnas
     295.  00:9D0F  32 00 86            	LD		(byteaux1), A		;nº de filas
     296.  00:9D12  32 01 86            	LD		(byteaux2), A		;nº de columnas
     297.  00:9D15                      	
     298.  00:9D15  C3 BC 85            	JP		pinta_array
     299.  00:9D18                      fin_pinta_obj_ayuda:
     300.  00:9D18                      
     301.  00:9D18                      
     302.  00:9D18                      ;;=====================================================
     303.  00:9D18                      ;;PINTA_AYUDAS_HABITACIÓN
     304.  00:9D18                      ;;=====================================================	
     305.  00:9D18                      ; función: 	examina el byte con las ayudas y pinta las que estén seleccionadas según variable habitacion_extras
     306.  00:9D18                      ; entrada: 	habitacion_extras
     307.  00:9D18                      ; salida: 	-
     308.  00:9D18                      pinta_ayudas_habitacion:
     309.  00:9D18  3A 82 9C            	LD		 A, (examina_ayudas_en_pantalla)
     310.  00:9D1B  B7                  	OR		 A
     311.  00:9D1C  C8                  	RET		 Z								;0 ya no hay ayudas activas (se actualiza cuando se usa la ayuda)
     312.  00:9D1D                      	
     313.  00:9D1D                      .examina_oracion:
     314.  00:9D1D  3A A3 A7            	LD		 A, (habitacion_extras)
     315.  00:9D20  CB 7F               	BIT		 7, A
     316.  00:9D22  CA 37 9D            	JP		 Z, fin_pinta_ayudas_habitacion	;despues .examina_cruz
     317.  00:9D25                      	
     318.  00:9D25  DD 21 BD 9C         	LD		IX, ayuda_oracion
     319.  00:9D29                      	;------
     320.  00:9D29                      	;estas 3 lineas es para almacenar un puntero a la ayuda actual de la habitación y no tener que recorrer todas para ver cuál está activa
     321.  00:9D29  DD 6E 00            	LD		 L, (IX)
     322.  00:9D2C  DD 66 01            	LD		 H, (IX + 1)
     323.  00:9D2F  22 83 9C            	LD		(puntero_ayuda_actual), HL
     324.  00:9D32                      	;--------	
     325.  00:9D32  3E 01               	LD		 A, ACTIVA
     326.  00:9D34  CD EB 9C            	CALL	pinta_obj_ayuda
     327.  00:9D37                      .fin_examina_oracion:	
     328.  00:9D37                      	
     329.  00:9D37                      ;~ .examina_cruz:
     330.  00:9D37                      	;~ LD		 A, (habitacion_extras)
     331.  00:9D37                      	;~ BIT		 6,A
     332.  00:9D37                      	;~ JP		 Z,.examina_aguabendita
     333.  00:9D37                      	;~ LD		IX, ayuda_cruz
     334.  00:9D37                      	;~ LD		 A, ACTIVA
     335.  00:9D37                      	;~ CALL	pinta_obj_ayuda
     336.  00:9D37                      ;~ .examina_aguabendita:
     337.  00:9D37                      	;~ LD		 A, (habitacion_extras)
     338.  00:9D37                      	;~ BIT		 5,A
     339.  00:9D37                      	;~ JP		 Z,.examina_armadura
     340.  00:9D37                      	;~ LD		IX, ayuda_aguabendita
     341.  00:9D37                      	;~ LD		 A, ACTIVA
     342.  00:9D37                      	;~ CALL	pinta_obj_ayuda
     343.  00:9D37                      ;~ .examina_armadura:
     344.  00:9D37                      	;~ LD		 A, (habitacion_extras)
     345.  00:9D37                      	;~ BIT		 4,A
     346.  00:9D37                      	;~ JP		 Z,.examina_planta
     347.  00:9D37                      	;~ LD		IX, ayuda_armadura
     348.  00:9D37                      	;~ LD		 A, ACTIVA
     349.  00:9D37                      	;~ CALL	pinta_obj_ayuda
     350.  00:9D37                      ;~ .examina_planta:
     351.  00:9D37                      	;~ LD		 A, (habitacion_extras)
     352.  00:9D37                      	;~ BIT		 3,A
     353.  00:9D37                      	;~ JP		 Z,.examina_vidaextra
     354.  00:9D37                      	;~ LD		IX, ayuda_planta
     355.  00:9D37                      	;~ LD		 A, ACTIVA
     356.  00:9D37                      	;~ CALL	pinta_obj_ayuda
     357.  00:9D37                      ;~ .examina_vidaextra:
     358.  00:9D37                      	;~ LD		 A, (habitacion_extras)
     359.  00:9D37                      	;~ BIT		 2,A
     360.  00:9D37                      	;~ JP		 Z,.examina_ballesta
     361.  00:9D37                      	;~ LD		IX, ayuda_vidaextra
     362.  00:9D37                      	;~ LD		 A, ACTIVA
     363.  00:9D37                      	;~ CALL	pinta_obj_ayuda
     364.  00:9D37                      ;~ .examina_ballesta:
     365.  00:9D37                      	;~ LD		 A, (habitacion_extras)
     366.  00:9D37                      	;~ BIT		 1,A
     367.  00:9D37                      	;~ RET		 Z
     368.  00:9D37                      	;~ LD		IX, ayuda_ballesta
     369.  00:9D37                      	;~ LD		 A, ACTIVA
     370.  00:9D37                      	;~ CALL	pinta_obj_ayuda
     371.  00:9D37                      fin_pinta_ayudas_habitacion:
     372.  00:9D37  C9                  	RET
     373.  00:9D38                      
     374.  00:9D38                      
     375.  00:9D38                      
     376.  00:9D38                      ;;=====================================================
     377.  00:9D38                      ;;ACCION_ORACION
     378.  00:9D38                      ;;=====================================================	
     379.  00:9D38                      ; función: 	
     380.  00:9D38                      ; entrada: 	
     381.  00:9D38                      ; salida: 	-
     382.  00:9D38                      accion_oracion:
     383.  00:9D38  CD B5 82            	CALL		test_OK
     384.  00:9D3B                      fin_accion_oracion:
     385.  00:9D3B  C9                  	RET
     386.  00:9D3C                      	
     387.  00:9D3C                      
     388.  00:9D3C                      ;;=====================================================
     389.  00:9D3C                      ;;ACCION_CRUZ
     390.  00:9D3C                      ;;=====================================================	
     391.  00:9D3C                      ; función: 	
     392.  00:9D3C                      ; entrada: 	
     393.  00:9D3C                      ; salida: 	-
     394.  00:9D3C                      accion_cruz:
     395.  00:9D3C                      fin_accion_cruz:
     396.  00:9D3C  C9                  	RET
     397.  00:9D3D                      
     398.  00:9D3D                      
     399.  00:9D3D                      ;;=====================================================
     400.  00:9D3D                      ;;ACCION_AGUA
     401.  00:9D3D                      ;;=====================================================	
     402.  00:9D3D                      ; función: 	
     403.  00:9D3D                      ; entrada: 	
     404.  00:9D3D                      ; salida: 	-
     405.  00:9D3D                      accion_agua:
     406.  00:9D3D                      fin_accion_agua:
     407.  00:9D3D  C9                  	RET
     408.  00:9D3E                      
     409.  00:9D3E                      
     410.  00:9D3E                      ;;=====================================================
     411.  00:9D3E                      ;;ACCION_ARMADURA
     412.  00:9D3E                      ;;=====================================================	
     413.  00:9D3E                      ; función: 	
     414.  00:9D3E                      ; entrada: 	
     415.  00:9D3E                      ; salida: 	-
     416.  00:9D3E                      accion_armadura:
     417.  00:9D3E                      fin_accion_armadura:
     418.  00:9D3E  C9                  	RET
     419.  00:9D3F                      
     420.  00:9D3F                      
     421.  00:9D3F                      ;;=====================================================
     422.  00:9D3F                      ;;ACCION_PLANTA
     423.  00:9D3F                      ;;=====================================================	
     424.  00:9D3F                      ; función: 	
     425.  00:9D3F                      ; entrada: 	
     426.  00:9D3F                      ; salida: 	-
     427.  00:9D3F                      accion_planta:
     428.  00:9D3F                      fin_accion_planta:
     429.  00:9D3F  C9                  	RET
     430.  00:9D40                      
     431.  00:9D40                      
     432.  00:9D40                      ;;=====================================================
     433.  00:9D40                      ;;ACCION_VIDAEXTRA
     434.  00:9D40                      ;;=====================================================	
     435.  00:9D40                      ; función: 	
     436.  00:9D40                      ; entrada: 	
     437.  00:9D40                      ; salida: 	-
     438.  00:9D40                      accion_vidaextra:
     439.  00:9D40                      fin_accion_vidaextra:
     440.  00:9D40  C9                  	RET
     441.  00:9D41                      
     442.  00:9D41                      
     443.  00:9D41                      ;;=====================================================
     444.  00:9D41                      ;;ACCION_BALLESTA
     445.  00:9D41                      ;;=====================================================	
     446.  00:9D41                      ; función: 	
     447.  00:9D41                      ; entrada: 	
     448.  00:9D41                      ; salida: 	-
     449.  00:9D41                      accion_ballesta:
     450.  00:9D41                      fin_accion_ballesta:
     451.  00:9D41  C9                  	RET
     452.  00:9D42                      
     453.  00:9D42                      
     258   00:9D42                      	
     259   00:9D42                      
     260   00:9D42                      ;;=====================================================
     261   00:9D42                      ;;DEFINICIÓN DE SUBRUTINAS DE FERNANDO PARA COMPRESIÓN Y SONIDO
     262   00:9D42                      ;;=====================================================
     263   00:9D42                      ;Este include lleva la rutina de descompresión de ROM/RAM a VRAM de pletter
     264   00:9D42                      ;Está adaptada de la original a sjasm
     265   00:9D42                      ;	HL = RAM/ROM source	; DE = VRAM destination
     266   00:9D42                      depack_VRAM:
     267   00:9D42                      	include "PL_VRAM_Depack_SJASM.asm"
       1.  00:9D42                      ;-----------------------------------------------------------
       2.  00:9D42                      ; Pletter v0.5b VRAM Depacker v1.1 - 16Kb version
       3.  00:9D42                      ; HL = RAM/ROM source ; DE = VRAM destination
       4.  00:9D42                      ;-----------------------------------------------------------
       5.  00:9D42  F3                  	di
       6.  00:9D43                      
       7.  00:9D43                      ; VRAM address setup
       8.  00:9D43  7B                  	ld	a,e
       9.  00:9D44  D3 99               	out	[099h],a
      10.  00:9D46  7A                  	ld	a,d
      11.  00:9D47  F6 40               	or	040h
      12.  00:9D49  D3 99               	out	[099h],a
      13.  00:9D4B                      
      14.  00:9D4B                      ; Initialization
      15.  00:9D4B  7E                  	ld	a,[hl]
      16.  00:9D4C  23                  	inc	hl
      17.  00:9D4D  D9                  	exx
      18.  00:9D4E  11 00 00            	ld	de,0
      19.  00:9D51  87                  	add	a,a
      20.  00:9D52  3C                  	inc	a
      21.  00:9D53  CB 13               	rl	e
      22.  00:9D55  87                  	add	a,a
      23.  00:9D56  CB 13               	rl	e
      24.  00:9D58  87                  	add	a,a
      25.  00:9D59  CB 13               	rl	e
      26.  00:9D5B  CB 13               	rl	e
      27.  00:9D5D  21 14 9E            	ld	hl,modes
      28.  00:9D60  19                  	add	hl,de
      29.  00:9D61  5E                  	ld	e,[hl]
      30.  00:9D62  DD 6B               	ld	ixl,e
      31.  00:9D64  23                  	inc	hl
      32.  00:9D65  5E                  	ld	e,[hl]
      33.  00:9D66  DD 63               	ld	ixh,e
      34.  00:9D68  1E 01               	ld	e,1
      35.  00:9D6A  D9                  	exx
      36.  00:9D6B  FD 21 74 9D         	ld	iy,loop
      37.  00:9D6F                      
      38.  00:9D6F                      ; Main depack loop
      39.  00:9D6F  0E 98               literal:ld	c,098h
      40.  00:9D71  ED A3               	outi
      41.  00:9D73  13                  	inc	de
      42.  00:9D74  87                  loop:	add	a,a
      43.  00:9D75  CC 08 9E              	call	z,getbit
      44.  00:9D78  30 F5               	jr	nc,literal
      45.  00:9D7A                      
      46.  00:9D7A                      ; Compressed data
      47.  00:9D7A  D9                  	exx
      48.  00:9D7B  62                  	ld	h,d
      49.  00:9D7C  6B                  	ld	l,e
      50.  00:9D7D  87                  getlen: add	a,a
      51.  00:9D7E  CC 0C 9E            	call	z,getbitexx
      52.  00:9D81  30 1D               	jr	nc,lenok
      53.  00:9D83  87                  lus:	add	a,a
      54.  00:9D84  CC 0C 9E            	call	z,getbitexx
      55.  00:9D87  ED 6A               	adc	hl,hl
      56.  00:9D89  D8                  	ret	c
      57.  00:9D8A  87                  	add	a,a
      58.  00:9D8B  CC 0C 9E            	call	z,getbitexx
      59.  00:9D8E  30 10               	jr	nc,lenok
      60.  00:9D90  87                  	add	a,a
      61.  00:9D91  CC 0C 9E            	call	z,getbitexx
      62.  00:9D94  ED 6A               	adc	hl,hl
      63.  00:9D96  DA 12 9E            	jp	c,Depack_out
      64.  00:9D99  87                  	add	a,a
      65.  00:9D9A  CC 0C 9E            	call	z,getbitexx
      66.  00:9D9D  DA 83 9D            	jp	c,lus
      67.  00:9DA0  23                  lenok:  inc	hl
      68.  00:9DA1  D9                  	exx
      69.  00:9DA2  4E                  	ld	c,[hl]
      70.  00:9DA3  23                  	inc	hl
      71.  00:9DA4  06 00               	ld	b,0
      72.  00:9DA6  CB 79               	bit	7,c
      73.  00:9DA8  CA DB 9D            	jp	z,offsok
      74.  00:9DAB  DD E9               	jp	ix
      75.  00:9DAD                      
      76.  00:9DAD  87                  mode7:  add	a,a
      77.  00:9DAE  CC 08 9E              	call	z,getbit
      78.  00:9DB1  CB 10               	rl	b
      79.  00:9DB3  87                  mode6:	add	a,a
      80.  00:9DB4  CC 08 9E              	call	z,getbit
      81.  00:9DB7  CB 10               	rl	b
      82.  00:9DB9  87                  mode5:  add	a,a
      83.  00:9DBA  CC 08 9E              	call	z,getbit
      84.  00:9DBD  CB 10               	rl	b
      85.  00:9DBF  87                  mode4:  add	a,a
      86.  00:9DC0  CC 08 9E              	call	z,getbit
      87.  00:9DC3  CB 10               	rl	b
      88.  00:9DC5  87                  mode3:  add	a,a
      89.  00:9DC6  CC 08 9E              	call	z,getbit
      90.  00:9DC9  CB 10               	rl	b
      91.  00:9DCB  87                  mode2:	add	a,a
      92.  00:9DCC  CC 08 9E              	call	z,getbit
      93.  00:9DCF  CB 10               	rl	b
      94.  00:9DD1  87                  	add	a,a
      95.  00:9DD2  CC 08 9E              	call	z,getbit
      96.  00:9DD5  30 04               	jr	nc,offsok
      97.  00:9DD7  B7                  	or	a
      98.  00:9DD8  04                  	inc	b
      99.  00:9DD9  CB B9               	res	7,c
     100.  00:9DDB  03                  offsok: inc	bc
     101.  00:9DDC  E5                  	push	hl
     102.  00:9DDD  D9                  	exx
     103.  00:9DDE  E5                  	push	hl
     104.  00:9DDF  D9                  	exx
     105.  00:9DE0  6B                  	ld	l,e
     106.  00:9DE1  62                  	ld	h,d
     107.  00:9DE2  ED 42               	sbc	hl,bc
     108.  00:9DE4  C1                  	pop	bc
     109.  00:9DE5  F5                  	push	af
     110.  00:9DE6  7D                  .loop:	ld	a,l
     111.  00:9DE7  D3 99               	out	[099h],a
     112.  00:9DE9  7C                  	ld	a,h
     113.  00:9DEA  00                  	nop                     ; VDP timing
     114.  00:9DEB  D3 99               	out	[099h],a
     115.  00:9DED  00                  	nop                     ; VDP timing
     116.  00:9DEE  DB 98               	in	a,[098h]
     117.  00:9DF0  08                  	ex	af,af'
     118.  00:9DF1  7B                  	ld	a,e
     119.  00:9DF2  00                  	nop			; VDP timing
     120.  00:9DF3  D3 99               	out	[099h],a
     121.  00:9DF5  7A                  	ld	a,d
     122.  00:9DF6  F6 40               	or	040h
     123.  00:9DF8  D3 99               	out	[099h],a
     124.  00:9DFA  08                  	ex	af,af'
     125.  00:9DFB  00                  	nop			; VDP timing
     126.  00:9DFC  D3 98               	out	[098h],a
     127.  00:9DFE  13                  	inc	de
     128.  00:9DFF  ED A1               	cpi
     129.  00:9E01  EA E6 9D            	jp	pe,.loop
     130.  00:9E04  F1                  	pop	af
     131.  00:9E05  E1                  	pop	hl
     132.  00:9E06  FD E9               	jp	iy
     133.  00:9E08                      
     134.  00:9E08  7E                  getbit: ld	a,[hl]
     135.  00:9E09  23                  	inc	hl
     136.  00:9E0A  17                  	rla
     137.  00:9E0B  C9                  	ret
     138.  00:9E0C                      
     139.  00:9E0C                      getbitexx:
     140.  00:9E0C  D9                  	exx
     141.  00:9E0D  7E                  	ld	a,[hl]
     142.  00:9E0E  23                  	inc	hl
     143.  00:9E0F  D9                  	exx
     144.  00:9E10  17                  	rla
     145.  00:9E11  C9                  	ret
     146.  00:9E12                      
     147.  00:9E12                      ; Depacker exit
     148.  00:9E12                      Depack_out:
     149.  00:9E12  FB                  	ei
     150.  00:9E13  C9                  	ret
     151.  00:9E14                      
     152.  00:9E14                      modes:
     153.  00:9E14  DB 9D               	dw	offsok
     154.  00:9E16  CB 9D               	dw	mode2
     155.  00:9E18  C5 9D               	dw	mode3
     156.  00:9E1A  BF 9D               	dw	mode4
     157.  00:9E1C  B9 9D               	dw	mode5
     158.  00:9E1E  B3 9D               	dw	mode6
     159.  00:9E20  AD 9D               	dw	mode7
     268   00:9E22                      
     269   00:9E22                      
     270   00:9E22                      	
     271   00:9E22                      ;;=====================================================
     272   00:9E22                      ;;DEFINICIÓN DE ESTRUCTURAS
     273   00:9E22                      ;;=====================================================		
     274   00:9E22                      	include "estructuras.asm"
       1.  00:9E22                      ;;=====================================================
       2.  00:9E22                      ;;DEFINICIÓN DE ESTRUCTURAS
       3.  00:9E22                      ;;=====================================================
       4.  00:9E22                      
       5.  00:9E22                      ;crear estructura
       6.  00:9E22                      
       7.  00:9E22                      	STRUCT ESTRUCTURA_PUNTOMIRA
       8.  00:9E22                    < posx			DB		POSXPM
       9.  00:9E22                    < posy			DB		POSYPM
      10.  00:9E22                    < escena			DB		0	;valores porsibles 0 (blanco+rojo en punto de mira) y NEG 0 (al revés)
      11.  00:9E22                    < velocidad		DB		0
      12.  00:9E22                    < boton2_pressed  DB		0
      13.  00:9E22                    < cadencia		DB		5	;nº de veces que se ejecutará el disparo antes de ejecutar un disparo real (porque cuando se pulsa la tecl dispara 3 ó 4 veces de rápido que va)
      14.  00:9E22                    < ; al final he decidido (ya que el punto de mira es el prota) que lo relacionado con el prota vaya en esta estructura
      15.  00:9E22                    < pm_aux1			DB		0	;para llegar a los 16 campos
      16.  00:9E22                    < pm_aux2			DB		0	;para llegar a los 16 campos
      17.  00:9E22                    < pm_aux3			DB		0	;para llegar a los 16 campos
      18.  00:9E22                    < pm_aux4			DB		0	;para llegar a los 16 campos
      19.  00:9E22                    < pm_aux5			DB		0	;para llegar a los 16 campos
      20.  00:9E22                    < pm_aux6			DB		0	;para llegar a los 16 campos
      21.  00:9E22                    < pm_aux7			DB		0	;para llegar a los 16 campos
      22.  00:9E22                    < pm_aux8			DB		0	;para llegar a los 16 campos
      23.  00:9E22                    < pm_aux9			DB		0	;para llegar a los 16 campos
      24.  00:9E22                    < pm_aux10		DB		0	;para llegar a los 16 campos
      25.  00:9E22                    < 	ENDSTRUCT;ESTRUCTURA_PUNTOMIRA
      26.  00:9E22                      
      27.  00:9E22                      
      28.  00:9E22                      
      29.  00:9E22                      	STRUCT ESTRUCTURA_ANTORCHA
      30.  00:9E22                    < activo				DB		0	;0 no activa <>0 activo
      31.  00:9E22                    < postilemem_antor1	DW		0	;pos en memoria ver array_antorcha de cómo se mostrará (wordaux2)	1,2
      32.  00:9E22                    < pospantalla_antor1	DB		0	;pos en pantalla (memoria en el banco 1 se le suma 256 + TILEMAP) (wordaux1)	3
      33.  00:9E22                    < pospantalla_antor2	DB		0	;pos en pantalla (memoria en el banco 1 se le suma 256 + TILEMAP) (wordaux1)	4
      34.  00:9E22                    < escena				DB		0	;(va entre 0 y 1 - 0=>llama1 y llama2 o 1=>llama2 y llama1	7 - tiles 196 y 197)	5
      35.  00:9E22                    < cont_sig_escena		DB		10	;	6
      36.  00:9E22                    < 	ENDSTRUCT;ESTRUCTURA_ANTORCHA
      37.  00:9E22                      
      38.  00:9E22                      	STRUCT ESTRUCTURA_ESQUELETO
      39.  00:9E22                    < activo				DB		0	;0 no activa <>0 activo
      40.  00:9E22                    < postilemem_antor1	DW		0	;pos en memoria ver array_antorcha de cómo se mostrará (wordaux2)	1,2
      41.  00:9E22                    < pospantalla_esquel1	DB		0	;pos en pantalla (memoria en el banco 1 se le suma 256 + TILEMAP) (wordaux1)	3
      42.  00:9E22                    < pospantalla_esquel2	DB		0	;pos en pantalla (memoria en el banco 1 se le suma 256 + TILEMAP) (wordaux1)	4
      43.  00:9E22                    < escena				DB		0	;(va entre 0 y 4 - tiles 164, 165, 164, 166)	5
      44.  00:9E22                    < cont_sig_escena		DB		0	;	6
      45.  00:9E22                    < 	ENDSTRUCT;ESTRUCTURA_ESQUELETO
      46.  00:9E22                      	
      47.  00:9E22                      
      48.  00:9E22                      	STRUCT ESTRUCTURA_ENEMIGO
      49.  00:9E22                    < tipo				DB		0	;(0 serpiente por ejemplo) #FF muerto o no existe
      50.  00:9E22                    < posx				DB		5
      51.  00:9E22                    < posy				DB		50
      52.  00:9E22                    < color				DB		5
      53.  00:9E22                    < escena				DB		0
      54.  00:9E22                    < contador_siguiente_escena	DB	0
      55.  00:9E22                    < reset_contador		DB		0
      56.  00:9E22                    < dano				DB		0	;daño
      57.  00:9E22                    < energia				DB		0	;energía del enemigo... si llega a 0 => existe <- 0
      58.  00:9E22                    < ;indica el nº de sprite a mostrar y si está compuesto por uno o dos sprites y si están en horizontal o vertical
      59.  00:9E22                    < ver_hor				DB		0
      60.  00:9E22                    < manejador_dibujo 	DW		0
      61.  00:9E22                    < en_aux3				DB		0
      62.  00:9E22                    < en_aux4				DB		0
      63.  00:9E22                    < 	ENDSTRUCT;ESTRUCTURA_ENEMIGO
      64.  00:9E22                      	
      65.  00:9E22                      	;~ STRUCT ESTRUCTURA_AYUDA		;vidas extra, plantas de curación de energía, reliquias				
      66.  00:9E22                      ;~ activo				DB		0	;0 no activo <>0 activo 											0
      67.  00:9E22                      ;~ postilemem_nousado	DW		0	;pos en memoria ver array_ayudas de cómo se mostrarán (wordaux2)	1,2
      68.  00:9E22                      ;~ postilemem_usado	DW		0	;pos en memoria ver array_ayudas de cómo se mostrarán (wordaux2)	3,4
      69.  00:9E22                      ;~ pospantalla			DB		0	;pos en pantalla (memoria en el banco 1 se le suma 256 + TILEMAP) (wordaux1)	5
      70.  00:9E22                      ;~ posx				DB		0	;pos del pixel central (esquina superior + 8x)						6
      71.  00:9E22                      ;~ posy				DB		112	;pos del pixel central (esquina superior + 8y) (para toas igual)	7
      72.  00:9E22                      ;~ puntero_accion		DW		0	;subrutina que indica la acción si se dispara en el objeto			8,9
      73.  00:9E22                      	;~ ENDSTRUCT;ESTRUCTURA_AYUDA
      74.  00:9E22                      
      75.  00:9E22                      	STRUCT ESTRUCTURA_AYUDA	
      76.  00:9E22                    < activa				DB		0	;0 no activa <>0 activo (y muestra tiles ayudaoff)
      77.  00:9E22                    < posx				DB		0	;punto x de la ayuda para cuando se dispare encima
      78.  00:9E22                    < posy				DB		112	;punto y de la ayuda para cuando se dispare encima
      79.  00:9E22                    < radiox				DB		0	;radio x de la ayuda para cuando se dispare encima
      80.  00:9E22                    < radioy				DB		0	;radio y de la ayuda para cuando se dispare encima
      81.  00:9E22                    < accion				DW		0	;función para acción de cada tipo de ayuda
      82.  00:9E22                    < tiles_ayudaon		DW		0	;puntero al array con los tiles de las ayudas sin usar para wordaux2
      83.  00:9E22                    < tiles_ayudaoff		DW		0	;puntero al array con los tiles de las ayudas sin usar para wordaux2
      84.  00:9E22                    < pos_en_tilemap		DW		0	;calcula posición en tilemap para wordaux1
      85.  00:9E22                    < alto				DB		2	;alto en tiles del dibujo de la puerta (filas)
      86.  00:9E22                    < ancho				DB		2	;ancho en tiles del dibujo de la puerta (columnas)
      87.  00:9E22                    < 	ENDSTRUCT;ESTRUCTURA_PUERTA
      88.  00:9E22                      
      89.  00:9E22                      	STRUCT ESTRUCTURA_PUERTA	;también servirá para la escalera
      90.  00:9E22                    < activa				DB		0	;0 no activa <>0 activo
      91.  00:9E22                    < posx				DB		0	;punto x de la puerta para cuando se dispare encima
      92.  00:9E22                    < posy				DB		0	;punto y de la puerta para cuando se dispare encima
      93.  00:9E22                    < radiox				DB		0	;radio x de la puerta para cuando se dispare encima
      94.  00:9E22                    < radioy				DB		0	;radio y de la puerta para cuando se dispare encima
      95.  00:9E22                    < accion				DW		0	;función para acción de cada tipo de puerta
      96.  00:9E22                    < tiles_puerta		DW		0	;puntero al array con los tiles de las puertas para wordaux2
      97.  00:9E22                    < pos_en_tilemap		DW		0	;calcula posición en tilemap para wordaux1
      98.  00:9E22                    < alto				DB		0	;alto en tiles del dibujo de la puerta (filas)
      99.  00:9E22                    < ancho				DB		0	;ancho en tiles del dibujo de la puerta (columnas)
     100.  00:9E22                    < 	ENDSTRUCT;ESTRUCTURA_PUERTA
     101.  00:9E22                      
     102.  00:9E22                      
     103.  00:9E22                      
     104.  00:9E22                      
     105.  00:9E22                      
     106.  00:9E22                      
     275   00:9E22                      	
     276   00:9E22                      ;;=====================================================
     277   00:9E22                      ;;DEFINICIÓN DE VARIABLES
     278   00:9E22                      ;;=====================================================		
     279   00:9E22                      	include "sprites.asm"
       1.  00:9E22                      ;;=====================================================
       2.  00:9E22                      ;;DEFINICIÓN DE SPRITES
       3.  00:9E22                      ;;=====================================================	
       4.  00:9E22                      
       5.  00:9E22                      
       6.  00:9E22                      ;; NOTA:
       7.  00:9E22                      ;~ sprite_reliquia_oracion: on/off
       8.  00:9E22                      ;~ sprite_reliquia_cruz: on/off
       9.  00:9E22                      ;~ sprite_reliquia_agua: on/off
      10.  00:9E22                      ;~ sprite_peto: on/off
      11.  00:9E22                      ;~ sprite_planta: on/off
      12.  00:9E22                      ;~ sprite_vida_extra: on/off
      13.  00:9E22                      ;~ sprite_ballesta_mejorada: on/off
      14.  00:9E22                      
      15.  00:9E22                      ;~ iban a ser sprites pero por falta de recursos serán tiles
      16.  00:9E22                      
      17.  00:9E22                      
      18.  00:9E22                      sprites_pantantalla:
      19.  00:9E22                      
      20.  00:9E22                      ;; PARTE 1: SPRITES COMUNES
      21.  00:9E22                      
      22.  00:9E22                      sprites_comunes:
      23.  00:9E22                      sprite_punto_mira_1:	;color 8
      24.  00:9E22                      	db #FF,#FF,#C0,#C0,#C0,#C0,#C0,#C0
      24.  00:9E22  FF FF C0 C0 C0 C0 C0 C0 
      25.  00:9E2A                      	db #C0,#C0,#C0,#C0,#C0,#C0,#FF,#FF
      25.  00:9E2A  C0 C0 C0 C0 C0 C0 FF FF 
      26.  00:9E32                      	db #FF,#FF,#03,#03,#03,#03,#03,#03
      26.  00:9E32  FF FF 03 03 03 03 03 03 
      27.  00:9E3A                      	db #03,#03,#03,#03,#03,#03,#FF,#FF
      27.  00:9E3A  03 03 03 03 03 03 FF FF 
      28.  00:9E42                      	
      29.  00:9E42                      sprite_punto_mira_2: 	;color 15
      30.  00:9E42                      	db #00,#00,#00,#00,#0F,#0F,#0C,#0C
      30.  00:9E42  00 00 00 00 0F 0F 0C 0C 
      31.  00:9E4A                      	db #0C,#0C,#0F,#0F,#00,#00,#00,#00
      31.  00:9E4A  0C 0C 0F 0F 00 00 00 00 
      32.  00:9E52                      	db #00,#00,#00,#00,#F0,#F0,#30,#30
      32.  00:9E52  00 00 00 00 F0 F0 30 30 
      33.  00:9E5A                      	db #30,#30,#F0,#F0,#00,#00,#00,#00
      33.  00:9E5A  30 30 F0 F0 00 00 00 00 
      34.  00:9E62                      	
      35.  00:9E62                      sprite_punto_mira_1_mejorado:
      36.  00:9E62                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      36.  00:9E62  FF FF FF FF FF FF FF FF 
      37.  00:9E6A                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      37.  00:9E6A  FF FF FF FF FF FF FF FF 
      38.  00:9E72                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      38.  00:9E72  FF FF FF FF FF FF FF FF 
      39.  00:9E7A                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      39.  00:9E7A  FF FF FF FF FF FF FF FF 
      40.  00:9E82                      
      41.  00:9E82                      sprite_punto_mira_2_mejorado:
      42.  00:9E82                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      42.  00:9E82  FF FF FF FF FF FF FF FF 
      43.  00:9E8A                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      43.  00:9E8A  FF FF FF FF FF FF FF FF 
      44.  00:9E92                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      44.  00:9E92  FF FF FF FF FF FF FF FF 
      45.  00:9E9A                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      45.  00:9E9A  FF FF FF FF FF FF FF FF 
      46.  00:9EA2                      	
      47.  00:9EA2                      sprite_explosion_1:
      48.  00:9EA2                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      48.  00:9EA2  FF FF FF FF FF FF FF FF 
      49.  00:9EAA                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      49.  00:9EAA  FF FF FF FF FF FF FF FF 
      50.  00:9EB2                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      50.  00:9EB2  FF FF FF FF FF FF FF FF 
      51.  00:9EBA                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF	
      51.  00:9EBA  FF FF FF FF FF FF FF FF 
      52.  00:9EC2                      
      53.  00:9EC2                      sprite_explosion_2:
      54.  00:9EC2                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      54.  00:9EC2  FF FF FF FF FF FF FF FF 
      55.  00:9ECA                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      55.  00:9ECA  FF FF FF FF FF FF FF FF 
      56.  00:9ED2                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      56.  00:9ED2  FF FF FF FF FF FF FF FF 
      57.  00:9EDA                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF	
      57.  00:9EDA  FF FF FF FF FF FF FF FF 
      58.  00:9EE2                      fin_sprites_comunes:
      59.  00:9EE2                      
      60.  00:9EE2                      ;; PARTE 2: SPRITES NO COMUNES
      61.  00:9EE2                      
      62.  00:9EE2                      ;; ARAÑA
      63.  00:9EE2                      	
      64.  00:9EE2                      sprite_arana1_1:
      65.  00:9EE2                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      65.  00:9EE2  FF FF FF FF FF FF FF FF 
      66.  00:9EEA                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      66.  00:9EEA  FF FF FF FF FF FF FF FF 
      67.  00:9EF2                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      67.  00:9EF2  FF FF FF FF FF FF FF FF 
      68.  00:9EFA                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      68.  00:9EFA  FF FF FF FF FF FF FF FF 
      69.  00:9F02                      	
      70.  00:9F02                      sprite_arana1_2:
      71.  00:9F02                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      71.  00:9F02  FF FF FF FF FF FF FF FF 
      72.  00:9F0A                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      72.  00:9F0A  FF FF FF FF FF FF FF FF 
      73.  00:9F12                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      73.  00:9F12  FF FF FF FF FF FF FF FF 
      74.  00:9F1A                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      74.  00:9F1A  FF FF FF FF FF FF FF FF 
      75.  00:9F22                      
      76.  00:9F22                      ;; MURCIELAGO
      77.  00:9F22                      	
      78.  00:9F22                      sprite_murcielago1_1:
      79.  00:9F22                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      79.  00:9F22  FF FF FF FF FF FF FF FF 
      80.  00:9F2A                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      80.  00:9F2A  FF FF FF FF FF FF FF FF 
      81.  00:9F32                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      81.  00:9F32  FF FF FF FF FF FF FF FF 
      82.  00:9F3A                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      82.  00:9F3A  FF FF FF FF FF FF FF FF 
      83.  00:9F42                      	
      84.  00:9F42                      sprite_murcielago1_2:
      85.  00:9F42                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      85.  00:9F42  FF FF FF FF FF FF FF FF 
      86.  00:9F4A                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      86.  00:9F4A  FF FF FF FF FF FF FF FF 
      87.  00:9F52                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      87.  00:9F52  FF FF FF FF FF FF FF FF 
      88.  00:9F5A                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF	
      88.  00:9F5A  FF FF FF FF FF FF FF FF 
      89.  00:9F62                      
      90.  00:9F62                      ;; SERPIENTE
      91.  00:9F62                      
      92.  00:9F62                      sprite_serpiente1_1:
      93.  00:9F62                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      93.  00:9F62  FF FF FF FF FF FF FF FF 
      94.  00:9F6A                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      94.  00:9F6A  FF FF FF FF FF FF FF FF 
      95.  00:9F72                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      95.  00:9F72  FF FF FF FF FF FF FF FF 
      96.  00:9F7A                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      96.  00:9F7A  FF FF FF FF FF FF FF FF 
      97.  00:9F82                      	
      98.  00:9F82                      sprite_serpiente1_2:
      99.  00:9F82                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      99.  00:9F82  FF FF FF FF FF FF FF FF 
     100.  00:9F8A                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     100.  00:9F8A  FF FF FF FF FF FF FF FF 
     101.  00:9F92                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     101.  00:9F92  FF FF FF FF FF FF FF FF 
     102.  00:9F9A                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     102.  00:9F9A  FF FF FF FF FF FF FF FF 
     103.  00:9FA2                      	
     104.  00:9FA2                      sprite_serpiente2_1:
     105.  00:9FA2                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     105.  00:9FA2  FF FF FF FF FF FF FF FF 
     106.  00:9FAA                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     106.  00:9FAA  FF FF FF FF FF FF FF FF 
     107.  00:9FB2                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     107.  00:9FB2  FF FF FF FF FF FF FF FF 
     108.  00:9FBA                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     108.  00:9FBA  FF FF FF FF FF FF FF FF 
     109.  00:9FC2                      	
     110.  00:9FC2                      sprite_serpiente2_2:
     111.  00:9FC2                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     111.  00:9FC2  FF FF FF FF FF FF FF FF 
     112.  00:9FCA                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     112.  00:9FCA  FF FF FF FF FF FF FF FF 
     113.  00:9FD2                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     113.  00:9FD2  FF FF FF FF FF FF FF FF 
     114.  00:9FDA                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     114.  00:9FDA  FF FF FF FF FF FF FF FF 
     115.  00:9FE2                      
     116.  00:9FE2                      ;; ZOMBI
     117.  00:9FE2                      
     118.  00:9FE2                      sprite_zombi1_1_1:
     119.  00:9FE2                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     119.  00:9FE2  FF FF FF FF FF FF FF FF 
     120.  00:9FEA                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     120.  00:9FEA  FF FF FF FF FF FF FF FF 
     121.  00:9FF2                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     121.  00:9FF2  FF FF FF FF FF FF FF FF 
     122.  00:9FFA                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     122.  00:9FFA  FF FF FF FF FF FF FF FF 
     123.  00:A002                      
     124.  00:A002                      sprite_zombi1_2_1:
     125.  00:A002                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     125.  00:A002  FF FF FF FF FF FF FF FF 
     126.  00:A00A                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     126.  00:A00A  FF FF FF FF FF FF FF FF 
     127.  00:A012                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     127.  00:A012  FF FF FF FF FF FF FF FF 
     128.  00:A01A                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     128.  00:A01A  FF FF FF FF FF FF FF FF 
     129.  00:A022                      	
     130.  00:A022                      sprite_zombi1_3_1:
     131.  00:A022                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     131.  00:A022  FF FF FF FF FF FF FF FF 
     132.  00:A02A                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     132.  00:A02A  FF FF FF FF FF FF FF FF 
     133.  00:A032                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     133.  00:A032  FF FF FF FF FF FF FF FF 
     134.  00:A03A                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     134.  00:A03A  FF FF FF FF FF FF FF FF 
     135.  00:A042                      	
     136.  00:A042                      sprite_zombi1_4_1:
     137.  00:A042                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     137.  00:A042  FF FF FF FF FF FF FF FF 
     138.  00:A04A                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     138.  00:A04A  FF FF FF FF FF FF FF FF 
     139.  00:A052                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     139.  00:A052  FF FF FF FF FF FF FF FF 
     140.  00:A05A                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     140.  00:A05A  FF FF FF FF FF FF FF FF 
     141.  00:A062                      	
     142.  00:A062                      sprite_zombi1_1_2:
     143.  00:A062                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     143.  00:A062  FF FF FF FF FF FF FF FF 
     144.  00:A06A                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     144.  00:A06A  FF FF FF FF FF FF FF FF 
     145.  00:A072                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     145.  00:A072  FF FF FF FF FF FF FF FF 
     146.  00:A07A                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     146.  00:A07A  FF FF FF FF FF FF FF FF 
     147.  00:A082                      
     148.  00:A082                      sprite_zombi1_2_2:
     149.  00:A082                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     149.  00:A082  FF FF FF FF FF FF FF FF 
     150.  00:A08A                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     150.  00:A08A  FF FF FF FF FF FF FF FF 
     151.  00:A092                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     151.  00:A092  FF FF FF FF FF FF FF FF 
     152.  00:A09A                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     152.  00:A09A  FF FF FF FF FF FF FF FF 
     153.  00:A0A2                      	
     154.  00:A0A2                      sprite_zombi1_3_2:
     155.  00:A0A2                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     155.  00:A0A2  FF FF FF FF FF FF FF FF 
     156.  00:A0AA                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     156.  00:A0AA  FF FF FF FF FF FF FF FF 
     157.  00:A0B2                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     157.  00:A0B2  FF FF FF FF FF FF FF FF 
     158.  00:A0BA                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     158.  00:A0BA  FF FF FF FF FF FF FF FF 
     159.  00:A0C2                      	
     160.  00:A0C2                      sprite_zombi1_4_2:
     161.  00:A0C2                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     161.  00:A0C2  FF FF FF FF FF FF FF FF 
     162.  00:A0CA                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     162.  00:A0CA  FF FF FF FF FF FF FF FF 
     163.  00:A0D2                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     163.  00:A0D2  FF FF FF FF FF FF FF FF 
     164.  00:A0DA                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     164.  00:A0DA  FF FF FF FF FF FF FF FF 
     165.  00:A0E2                      	
     166.  00:A0E2                      sprite_zombi2_1_1:
     167.  00:A0E2                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     167.  00:A0E2  FF FF FF FF FF FF FF FF 
     168.  00:A0EA                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     168.  00:A0EA  FF FF FF FF FF FF FF FF 
     169.  00:A0F2                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     169.  00:A0F2  FF FF FF FF FF FF FF FF 
     170.  00:A0FA                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     170.  00:A0FA  FF FF FF FF FF FF FF FF 
     171.  00:A102                      
     172.  00:A102                      sprite_zombi2_2_1:
     173.  00:A102                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     173.  00:A102  FF FF FF FF FF FF FF FF 
     174.  00:A10A                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     174.  00:A10A  FF FF FF FF FF FF FF FF 
     175.  00:A112                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     175.  00:A112  FF FF FF FF FF FF FF FF 
     176.  00:A11A                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     176.  00:A11A  FF FF FF FF FF FF FF FF 
     177.  00:A122                      	
     178.  00:A122                      sprite_zombi2_3_1:
     179.  00:A122                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     179.  00:A122  FF FF FF FF FF FF FF FF 
     180.  00:A12A                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     180.  00:A12A  FF FF FF FF FF FF FF FF 
     181.  00:A132                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     181.  00:A132  FF FF FF FF FF FF FF FF 
     182.  00:A13A                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     182.  00:A13A  FF FF FF FF FF FF FF FF 
     183.  00:A142                      	
     184.  00:A142                      sprite_zombi2_4_1:
     185.  00:A142                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     185.  00:A142  FF FF FF FF FF FF FF FF 
     186.  00:A14A                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     186.  00:A14A  FF FF FF FF FF FF FF FF 
     187.  00:A152                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     187.  00:A152  FF FF FF FF FF FF FF FF 
     188.  00:A15A                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     188.  00:A15A  FF FF FF FF FF FF FF FF 
     189.  00:A162                      	
     190.  00:A162                      sprite_zombi2_1_2:
     191.  00:A162                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     191.  00:A162  FF FF FF FF FF FF FF FF 
     192.  00:A16A                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     192.  00:A16A  FF FF FF FF FF FF FF FF 
     193.  00:A172                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     193.  00:A172  FF FF FF FF FF FF FF FF 
     194.  00:A17A                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     194.  00:A17A  FF FF FF FF FF FF FF FF 
     195.  00:A182                      
     196.  00:A182                      sprite_zombi2_2_2:
     197.  00:A182                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     197.  00:A182  FF FF FF FF FF FF FF FF 
     198.  00:A18A                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     198.  00:A18A  FF FF FF FF FF FF FF FF 
     199.  00:A192                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     199.  00:A192  FF FF FF FF FF FF FF FF 
     200.  00:A19A                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     200.  00:A19A  FF FF FF FF FF FF FF FF 
     201.  00:A1A2                      	
     202.  00:A1A2                      sprite_zombi2_3_2:
     203.  00:A1A2                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     203.  00:A1A2  FF FF FF FF FF FF FF FF 
     204.  00:A1AA                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     204.  00:A1AA  FF FF FF FF FF FF FF FF 
     205.  00:A1B2                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     205.  00:A1B2  FF FF FF FF FF FF FF FF 
     206.  00:A1BA                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     206.  00:A1BA  FF FF FF FF FF FF FF FF 
     207.  00:A1C2                      	
     208.  00:A1C2                      sprite_zombi2_4_2:
     209.  00:A1C2                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     209.  00:A1C2  FF FF FF FF FF FF FF FF 
     210.  00:A1CA                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     210.  00:A1CA  FF FF FF FF FF FF FF FF 
     211.  00:A1D2                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     211.  00:A1D2  FF FF FF FF FF FF FF FF 
     212.  00:A1DA                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     212.  00:A1DA  FF FF FF FF FF FF FF FF 
     213.  00:A1E2                      	
     214.  00:A1E2                      ;; CABALLERO
     215.  00:A1E2                      
     216.  00:A1E2                      sprite_caballero1_1_1:
     217.  00:A1E2                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     217.  00:A1E2  FF FF FF FF FF FF FF FF 
     218.  00:A1EA                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     218.  00:A1EA  FF FF FF FF FF FF FF FF 
     219.  00:A1F2                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     219.  00:A1F2  FF FF FF FF FF FF FF FF 
     220.  00:A1FA                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     220.  00:A1FA  FF FF FF FF FF FF FF FF 
     221.  00:A202                      
     222.  00:A202                      sprite_caballero1_2_1:
     223.  00:A202                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     223.  00:A202  FF FF FF FF FF FF FF FF 
     224.  00:A20A                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     224.  00:A20A  FF FF FF FF FF FF FF FF 
     225.  00:A212                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     225.  00:A212  FF FF FF FF FF FF FF FF 
     226.  00:A21A                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     226.  00:A21A  FF FF FF FF FF FF FF FF 
     227.  00:A222                      	
     228.  00:A222                      sprite_caballero1_3_1:
     229.  00:A222                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     229.  00:A222  FF FF FF FF FF FF FF FF 
     230.  00:A22A                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     230.  00:A22A  FF FF FF FF FF FF FF FF 
     231.  00:A232                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     231.  00:A232  FF FF FF FF FF FF FF FF 
     232.  00:A23A                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     232.  00:A23A  FF FF FF FF FF FF FF FF 
     233.  00:A242                      	
     234.  00:A242                      sprite_caballero1_4_1:
     235.  00:A242                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     235.  00:A242  FF FF FF FF FF FF FF FF 
     236.  00:A24A                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     236.  00:A24A  FF FF FF FF FF FF FF FF 
     237.  00:A252                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     237.  00:A252  FF FF FF FF FF FF FF FF 
     238.  00:A25A                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     238.  00:A25A  FF FF FF FF FF FF FF FF 
     239.  00:A262                      	
     240.  00:A262                      sprite_caballero1_1_2:
     241.  00:A262                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     241.  00:A262  FF FF FF FF FF FF FF FF 
     242.  00:A26A                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     242.  00:A26A  FF FF FF FF FF FF FF FF 
     243.  00:A272                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     243.  00:A272  FF FF FF FF FF FF FF FF 
     244.  00:A27A                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     244.  00:A27A  FF FF FF FF FF FF FF FF 
     245.  00:A282                      
     246.  00:A282                      sprite_caballero1_2_2:
     247.  00:A282                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     247.  00:A282  FF FF FF FF FF FF FF FF 
     248.  00:A28A                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     248.  00:A28A  FF FF FF FF FF FF FF FF 
     249.  00:A292                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     249.  00:A292  FF FF FF FF FF FF FF FF 
     250.  00:A29A                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     250.  00:A29A  FF FF FF FF FF FF FF FF 
     251.  00:A2A2                      	
     252.  00:A2A2                      sprite_caballero1_3_2:
     253.  00:A2A2                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     253.  00:A2A2  FF FF FF FF FF FF FF FF 
     254.  00:A2AA                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     254.  00:A2AA  FF FF FF FF FF FF FF FF 
     255.  00:A2B2                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     255.  00:A2B2  FF FF FF FF FF FF FF FF 
     256.  00:A2BA                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     256.  00:A2BA  FF FF FF FF FF FF FF FF 
     257.  00:A2C2                      	
     258.  00:A2C2                      sprite_caballero1_4_2:
     259.  00:A2C2                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     259.  00:A2C2  FF FF FF FF FF FF FF FF 
     260.  00:A2CA                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     260.  00:A2CA  FF FF FF FF FF FF FF FF 
     261.  00:A2D2                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     261.  00:A2D2  FF FF FF FF FF FF FF FF 
     262.  00:A2DA                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     262.  00:A2DA  FF FF FF FF FF FF FF FF 
     263.  00:A2E2                      	
     264.  00:A2E2                      sprite_caballero2_1_1:
     265.  00:A2E2                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     265.  00:A2E2  FF FF FF FF FF FF FF FF 
     266.  00:A2EA                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     266.  00:A2EA  FF FF FF FF FF FF FF FF 
     267.  00:A2F2                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     267.  00:A2F2  FF FF FF FF FF FF FF FF 
     268.  00:A2FA                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     268.  00:A2FA  FF FF FF FF FF FF FF FF 
     269.  00:A302                      
     270.  00:A302                      sprite_caballero2_2_1:
     271.  00:A302                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     271.  00:A302  FF FF FF FF FF FF FF FF 
     272.  00:A30A                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     272.  00:A30A  FF FF FF FF FF FF FF FF 
     273.  00:A312                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     273.  00:A312  FF FF FF FF FF FF FF FF 
     274.  00:A31A                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     274.  00:A31A  FF FF FF FF FF FF FF FF 
     275.  00:A322                      	
     276.  00:A322                      sprite_caballero2_3_1:
     277.  00:A322                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     277.  00:A322  FF FF FF FF FF FF FF FF 
     278.  00:A32A                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     278.  00:A32A  FF FF FF FF FF FF FF FF 
     279.  00:A332                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     279.  00:A332  FF FF FF FF FF FF FF FF 
     280.  00:A33A                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     280.  00:A33A  FF FF FF FF FF FF FF FF 
     281.  00:A342                      	
     282.  00:A342                      sprite_caballero2_4_1:
     283.  00:A342                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     283.  00:A342  FF FF FF FF FF FF FF FF 
     284.  00:A34A                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     284.  00:A34A  FF FF FF FF FF FF FF FF 
     285.  00:A352                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     285.  00:A352  FF FF FF FF FF FF FF FF 
     286.  00:A35A                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     286.  00:A35A  FF FF FF FF FF FF FF FF 
     287.  00:A362                      	
     288.  00:A362                      sprite_caballero2_1_2:
     289.  00:A362                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     289.  00:A362  FF FF FF FF FF FF FF FF 
     290.  00:A36A                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     290.  00:A36A  FF FF FF FF FF FF FF FF 
     291.  00:A372                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     291.  00:A372  FF FF FF FF FF FF FF FF 
     292.  00:A37A                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     292.  00:A37A  FF FF FF FF FF FF FF FF 
     293.  00:A382                      
     294.  00:A382                      sprite_caballero2_2_2:
     295.  00:A382                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     295.  00:A382  FF FF FF FF FF FF FF FF 
     296.  00:A38A                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     296.  00:A38A  FF FF FF FF FF FF FF FF 
     297.  00:A392                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     297.  00:A392  FF FF FF FF FF FF FF FF 
     298.  00:A39A                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     298.  00:A39A  FF FF FF FF FF FF FF FF 
     299.  00:A3A2                      	
     300.  00:A3A2                      sprite_caballero2_3_2:
     301.  00:A3A2                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     301.  00:A3A2  FF FF FF FF FF FF FF FF 
     302.  00:A3AA                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     302.  00:A3AA  FF FF FF FF FF FF FF FF 
     303.  00:A3B2                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     303.  00:A3B2  FF FF FF FF FF FF FF FF 
     304.  00:A3BA                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     304.  00:A3BA  FF FF FF FF FF FF FF FF 
     305.  00:A3C2                      	
     306.  00:A3C2                      sprite_caballero2_4_2:
     307.  00:A3C2                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     307.  00:A3C2  FF FF FF FF FF FF FF FF 
     308.  00:A3CA                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     308.  00:A3CA  FF FF FF FF FF FF FF FF 
     309.  00:A3D2                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     309.  00:A3D2  FF FF FF FF FF FF FF FF 
     310.  00:A3DA                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     310.  00:A3DA  FF FF FF FF FF FF FF FF 
     311.  00:A3E2                      	
     312.  00:A3E2                      ;; LLAMA
     313.  00:A3E2                      
     314.  00:A3E2                      sprite_llama1_1:	
     315.  00:A3E2                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     315.  00:A3E2  FF FF FF FF FF FF FF FF 
     316.  00:A3EA                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     316.  00:A3EA  FF FF FF FF FF FF FF FF 
     317.  00:A3F2                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     317.  00:A3F2  FF FF FF FF FF FF FF FF 
     318.  00:A3FA                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     318.  00:A3FA  FF FF FF FF FF FF FF FF 
     319.  00:A402                      	
     320.  00:A402                      sprite_llama2_1:	
     321.  00:A402                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     321.  00:A402  FF FF FF FF FF FF FF FF 
     322.  00:A40A                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     322.  00:A40A  FF FF FF FF FF FF FF FF 
     323.  00:A412                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     323.  00:A412  FF FF FF FF FF FF FF FF 
     324.  00:A41A                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF	
     324.  00:A41A  FF FF FF FF FF FF FF FF 
     325.  00:A422                      	
     326.  00:A422                      sprite_llama1_2:	
     327.  00:A422                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     327.  00:A422  FF FF FF FF FF FF FF FF 
     328.  00:A42A                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     328.  00:A42A  FF FF FF FF FF FF FF FF 
     329.  00:A432                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     329.  00:A432  FF FF FF FF FF FF FF FF 
     330.  00:A43A                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     330.  00:A43A  FF FF FF FF FF FF FF FF 
     331.  00:A442                      	
     332.  00:A442                      sprite_llama2_2:	
     333.  00:A442                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     333.  00:A442  FF FF FF FF FF FF FF FF 
     334.  00:A44A                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     334.  00:A44A  FF FF FF FF FF FF FF FF 
     335.  00:A452                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     335.  00:A452  FF FF FF FF FF FF FF FF 
     336.  00:A45A                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF			
     336.  00:A45A  FF FF FF FF FF FF FF FF 
     337.  00:A462                      	
     338.  00:A462                      ;; FANTASMA
     339.  00:A462                      
     340.  00:A462                      sprite_fantasma1_1:
     341.  00:A462                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     341.  00:A462  FF FF FF FF FF FF FF FF 
     342.  00:A46A                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     342.  00:A46A  FF FF FF FF FF FF FF FF 
     343.  00:A472                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     343.  00:A472  FF FF FF FF FF FF FF FF 
     344.  00:A47A                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     344.  00:A47A  FF FF FF FF FF FF FF FF 
     345.  00:A482                      
     346.  00:A482                      sprite_fantasma2_1:
     347.  00:A482                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     347.  00:A482  FF FF FF FF FF FF FF FF 
     348.  00:A48A                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     348.  00:A48A  FF FF FF FF FF FF FF FF 
     349.  00:A492                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     349.  00:A492  FF FF FF FF FF FF FF FF 
     350.  00:A49A                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     350.  00:A49A  FF FF FF FF FF FF FF FF 
     351.  00:A4A2                      
     352.  00:A4A2                      sprite_fantasma1_2:
     353.  00:A4A2                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     353.  00:A4A2  FF FF FF FF FF FF FF FF 
     354.  00:A4AA                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     354.  00:A4AA  FF FF FF FF FF FF FF FF 
     355.  00:A4B2                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     355.  00:A4B2  FF FF FF FF FF FF FF FF 
     356.  00:A4BA                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     356.  00:A4BA  FF FF FF FF FF FF FF FF 
     357.  00:A4C2                      
     358.  00:A4C2                      sprite_fantasma2_2:
     359.  00:A4C2                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     359.  00:A4C2  FF FF FF FF FF FF FF FF 
     360.  00:A4CA                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     360.  00:A4CA  FF FF FF FF FF FF FF FF 
     361.  00:A4D2                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     361.  00:A4D2  FF FF FF FF FF FF FF FF 
     362.  00:A4DA                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF	
     362.  00:A4DA  FF FF FF FF FF FF FF FF 
     363.  00:A4E2                      	
     364.  00:A4E2                      ;; MAGIA
     365.  00:A4E2                      
     366.  00:A4E2                      sprite_magia1_1:
     367.  00:A4E2                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     367.  00:A4E2  FF FF FF FF FF FF FF FF 
     368.  00:A4EA                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     368.  00:A4EA  FF FF FF FF FF FF FF FF 
     369.  00:A4F2                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     369.  00:A4F2  FF FF FF FF FF FF FF FF 
     370.  00:A4FA                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     370.  00:A4FA  FF FF FF FF FF FF FF FF 
     371.  00:A502                      
     372.  00:A502                      sprite_magia2_1:
     373.  00:A502                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     373.  00:A502  FF FF FF FF FF FF FF FF 
     374.  00:A50A                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     374.  00:A50A  FF FF FF FF FF FF FF FF 
     375.  00:A512                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     375.  00:A512  FF FF FF FF FF FF FF FF 
     376.  00:A51A                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     376.  00:A51A  FF FF FF FF FF FF FF FF 
     377.  00:A522                      
     378.  00:A522                      sprite_magia1_2:
     379.  00:A522                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     379.  00:A522  FF FF FF FF FF FF FF FF 
     380.  00:A52A                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     380.  00:A52A  FF FF FF FF FF FF FF FF 
     381.  00:A532                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     381.  00:A532  FF FF FF FF FF FF FF FF 
     382.  00:A53A                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     382.  00:A53A  FF FF FF FF FF FF FF FF 
     383.  00:A542                      
     384.  00:A542                      sprite_magia2_2:
     385.  00:A542                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     385.  00:A542  FF FF FF FF FF FF FF FF 
     386.  00:A54A                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     386.  00:A54A  FF FF FF FF FF FF FF FF 
     387.  00:A552                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     387.  00:A552  FF FF FF FF FF FF FF FF 
     388.  00:A55A                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF	
     388.  00:A55A  FF FF FF FF FF FF FF FF 
     389.  00:A562                      	
     390.  00:A562                      	
     391.  00:A562                      ;; BEHOLDER
     392.  00:A562                      
     393.  00:A562                      sprite_beholder1_1:
     394.  00:A562                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     394.  00:A562  FF FF FF FF FF FF FF FF 
     395.  00:A56A                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     395.  00:A56A  FF FF FF FF FF FF FF FF 
     396.  00:A572                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     396.  00:A572  FF FF FF FF FF FF FF FF 
     397.  00:A57A                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     397.  00:A57A  FF FF FF FF FF FF FF FF 
     398.  00:A582                      
     399.  00:A582                      sprite_beholder2_1:
     400.  00:A582                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     400.  00:A582  FF FF FF FF FF FF FF FF 
     401.  00:A58A                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     401.  00:A58A  FF FF FF FF FF FF FF FF 
     402.  00:A592                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     402.  00:A592  FF FF FF FF FF FF FF FF 
     403.  00:A59A                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     403.  00:A59A  FF FF FF FF FF FF FF FF 
     404.  00:A5A2                      
     405.  00:A5A2                      sprite_beholder3_1:
     406.  00:A5A2                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     406.  00:A5A2  FF FF FF FF FF FF FF FF 
     407.  00:A5AA                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     407.  00:A5AA  FF FF FF FF FF FF FF FF 
     408.  00:A5B2                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     408.  00:A5B2  FF FF FF FF FF FF FF FF 
     409.  00:A5BA                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     409.  00:A5BA  FF FF FF FF FF FF FF FF 
     410.  00:A5C2                      
     411.  00:A5C2                      sprite_beholder4_1:
     412.  00:A5C2                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     412.  00:A5C2  FF FF FF FF FF FF FF FF 
     413.  00:A5CA                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     413.  00:A5CA  FF FF FF FF FF FF FF FF 
     414.  00:A5D2                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     414.  00:A5D2  FF FF FF FF FF FF FF FF 
     415.  00:A5DA                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF	
     415.  00:A5DA  FF FF FF FF FF FF FF FF 
     416.  00:A5E2                      	
     417.  00:A5E2                      sprite_beholder1_2:
     418.  00:A5E2                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     418.  00:A5E2  FF FF FF FF FF FF FF FF 
     419.  00:A5EA                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     419.  00:A5EA  FF FF FF FF FF FF FF FF 
     420.  00:A5F2                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     420.  00:A5F2  FF FF FF FF FF FF FF FF 
     421.  00:A5FA                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     421.  00:A5FA  FF FF FF FF FF FF FF FF 
     422.  00:A602                      
     423.  00:A602                      sprite_beholder2_2:
     424.  00:A602                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     424.  00:A602  FF FF FF FF FF FF FF FF 
     425.  00:A60A                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     425.  00:A60A  FF FF FF FF FF FF FF FF 
     426.  00:A612                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     426.  00:A612  FF FF FF FF FF FF FF FF 
     427.  00:A61A                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     427.  00:A61A  FF FF FF FF FF FF FF FF 
     428.  00:A622                      
     429.  00:A622                      sprite_beholder3_2:
     430.  00:A622                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     430.  00:A622  FF FF FF FF FF FF FF FF 
     431.  00:A62A                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     431.  00:A62A  FF FF FF FF FF FF FF FF 
     432.  00:A632                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     432.  00:A632  FF FF FF FF FF FF FF FF 
     433.  00:A63A                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     433.  00:A63A  FF FF FF FF FF FF FF FF 
     434.  00:A642                      
     435.  00:A642                      sprite_beholder4_2:
     436.  00:A642                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     436.  00:A642  FF FF FF FF FF FF FF FF 
     437.  00:A64A                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     437.  00:A64A  FF FF FF FF FF FF FF FF 
     438.  00:A652                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     438.  00:A652  FF FF FF FF FF FF FF FF 
     439.  00:A65A                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF		
     439.  00:A65A  FF FF FF FF FF FF FF FF 
     440.  00:A662                      	
     441.  00:A662                      ;; VAMPIRO
     442.  00:A662                      
     443.  00:A662                      sprite_vampiro1_1:
     444.  00:A662                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     444.  00:A662  FF FF FF FF FF FF FF FF 
     445.  00:A66A                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     445.  00:A66A  FF FF FF FF FF FF FF FF 
     446.  00:A672                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     446.  00:A672  FF FF FF FF FF FF FF FF 
     447.  00:A67A                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     447.  00:A67A  FF FF FF FF FF FF FF FF 
     448.  00:A682                      
     449.  00:A682                      sprite_vampiro2_1:
     450.  00:A682                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     450.  00:A682  FF FF FF FF FF FF FF FF 
     451.  00:A68A                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     451.  00:A68A  FF FF FF FF FF FF FF FF 
     452.  00:A692                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     452.  00:A692  FF FF FF FF FF FF FF FF 
     453.  00:A69A                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     453.  00:A69A  FF FF FF FF FF FF FF FF 
     454.  00:A6A2                      
     455.  00:A6A2                      sprite_vampiro1_2:
     456.  00:A6A2                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     456.  00:A6A2  FF FF FF FF FF FF FF FF 
     457.  00:A6AA                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     457.  00:A6AA  FF FF FF FF FF FF FF FF 
     458.  00:A6B2                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     458.  00:A6B2  FF FF FF FF FF FF FF FF 
     459.  00:A6BA                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     459.  00:A6BA  FF FF FF FF FF FF FF FF 
     460.  00:A6C2                      
     461.  00:A6C2                      sprite_vampiro2_2:
     462.  00:A6C2                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     462.  00:A6C2  FF FF FF FF FF FF FF FF 
     463.  00:A6CA                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     463.  00:A6CA  FF FF FF FF FF FF FF FF 
     464.  00:A6D2                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     464.  00:A6D2  FF FF FF FF FF FF FF FF 
     465.  00:A6DA                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     465.  00:A6DA  FF FF FF FF FF FF FF FF 
     466.  00:A6E2                      	
     467.  00:A6E2                      ;; MANOIZQ
     468.  00:A6E2                      
     469.  00:A6E2                      sprite_manoizq1:
     470.  00:A6E2                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     470.  00:A6E2  FF FF FF FF FF FF FF FF 
     471.  00:A6EA                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     471.  00:A6EA  FF FF FF FF FF FF FF FF 
     472.  00:A6F2                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     472.  00:A6F2  FF FF FF FF FF FF FF FF 
     473.  00:A6FA                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     473.  00:A6FA  FF FF FF FF FF FF FF FF 
     474.  00:A702                      	
     475.  00:A702                      sprite_manoizq2:
     476.  00:A702                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     476.  00:A702  FF FF FF FF FF FF FF FF 
     477.  00:A70A                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     477.  00:A70A  FF FF FF FF FF FF FF FF 
     478.  00:A712                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     478.  00:A712  FF FF FF FF FF FF FF FF 
     479.  00:A71A                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     479.  00:A71A  FF FF FF FF FF FF FF FF 
     480.  00:A722                      	
     481.  00:A722                      sprite_manoizq3:
     482.  00:A722                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     482.  00:A722  FF FF FF FF FF FF FF FF 
     483.  00:A72A                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     483.  00:A72A  FF FF FF FF FF FF FF FF 
     484.  00:A732                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     484.  00:A732  FF FF FF FF FF FF FF FF 
     485.  00:A73A                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF	
     485.  00:A73A  FF FF FF FF FF FF FF FF 
     486.  00:A742                      	
     487.  00:A742                      ;; MANODER
     488.  00:A742                      
     489.  00:A742                      sprite_manoder1:
     490.  00:A742                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     490.  00:A742  FF FF FF FF FF FF FF FF 
     491.  00:A74A                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     491.  00:A74A  FF FF FF FF FF FF FF FF 
     492.  00:A752                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     492.  00:A752  FF FF FF FF FF FF FF FF 
     493.  00:A75A                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     493.  00:A75A  FF FF FF FF FF FF FF FF 
     494.  00:A762                      	
     495.  00:A762                      sprite_manoder2:
     496.  00:A762                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     496.  00:A762  FF FF FF FF FF FF FF FF 
     497.  00:A76A                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     497.  00:A76A  FF FF FF FF FF FF FF FF 
     498.  00:A772                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     498.  00:A772  FF FF FF FF FF FF FF FF 
     499.  00:A77A                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     499.  00:A77A  FF FF FF FF FF FF FF FF 
     500.  00:A782                      	
     501.  00:A782                      sprite_manoder3:
     502.  00:A782                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     502.  00:A782  FF FF FF FF FF FF FF FF 
     503.  00:A78A                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     503.  00:A78A  FF FF FF FF FF FF FF FF 
     504.  00:A792                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     504.  00:A792  FF FF FF FF FF FF FF FF 
     505.  00:A79A                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF		
     505.  00:A79A  FF FF FF FF FF FF FF FF 
     506.  00:A7A2                      	
     507.  00:A7A2                      	
     508.  00:A7A2                      	
     509.  00:A7A2                      	
     510.  00:A7A2                      	
     511.  00:A7A2                      	
     512.  00:A7A2                      	
     513.  00:A7A2                      	
     514.  00:A7A2                      	
     515.  00:A7A2                      	
     516.  00:A7A2                      	
     517.  00:A7A2                      	
     518.  00:A7A2                      	
     519.  00:A7A2                      	
     520.  00:A7A2                      	
     521.  00:A7A2                      	
     522.  00:A7A2                      	
     523.  00:A7A2                      	
     524.  00:A7A2                      	
     525.  00:A7A2                      	
     526.  00:A7A2                      	
     527.  00:A7A2                      	
     528.  00:A7A2                      	
     280   00:A7A2                      	
     281   00:A7A2                      	include "habitaciones.asm"
       1.  00:A7A2                      ;;=====================================================
       2.  00:A7A2                      ;;DEFINICIÓN DE HABITACIONES x NIVEL
       3.  00:A7A2                      ;;=====================================================	
       4.  00:A7A2                      
       5.  00:A7A2                      ; sólo voy a usar 7x7 pero como los arrays son lineales y voy a trabajar con matrices
       6.  00:A7A2                      ; me interesa que seande  8x8 aunque sólo trabaje con 7x7
       7.  00:A7A2                      
       8.  00:A7A2                      ; ojo... la primera linea corresponderá a la primera linea del castillo no a la última
       9.  00:A7A2                      
      10.  00:A7A2                      ;; definición de estructura de bits
      11.  00:A7A2                      ;16 bits por habitación
      12.  00:A7A2                      
      13.  00:A7A2                      ;NOTA: no es necesario asignar un bit para la puerta de arriba ya que en las habitaciones de la fila 7 sólo habrá una puerta que será una escalera
      14.  00:A7A2                      ;1º byte
      15.  00:A7A2                      ;~ 7 - sin asignar
      16.  00:A7A2                      ;~ 6 - si 1 => ayudas usadas 0 => ayudas no usuadas (se inicializan al empezar la partida)
      17.  00:A7A2                      ;~ 5 - esqueletos
      18.  00:A7A2                      ;~ 4 - todos los enemigos muertos 0 no y 1 ó <>0 => toca la variable "is_habitacion_terminada" (se inicializan al empezar la partida)
      19.  00:A7A2                      ;~ 0,1,2,3 - nº puertas 1 arriba 1 derecha 1 abajo 1 izquierda
      20.  00:A7A2                      ;2º byte
      21.  00:A7A2                      ;~ 7 - oracion
      22.  00:A7A2                      ;~ 6 - cruz
      23.  00:A7A2                      ;~ 5 - agua bendita
      24.  00:A7A2                      ;~ 4 - armadura
      25.  00:A7A2                      ;~ 3 - planta
      26.  00:A7A2                      ;~ 2 - vida extra
      27.  00:A7A2                      ;~ 1 - ballesta
      28.  00:A7A2                      ;~ 0 - antorchas
      29.  00:A7A2                      
      30.  00:A7A2                      ;importante: el byte de la columna 15 indicará con 1 y 0 habitaciones por las que se haya pasado
      31.  00:A7A2                      ;cuando se inicie la partida todos se pondrán a 0
      32.  00:A7A2                      ;por ejemplo 01000000b se ha pasado por la hab. 2 de esa fila en el nivel que sea
      33.  00:A7A2                      
      34.  00:A7A2                      habitacion_actual:
      35.  00:A7A2  00                  	db  0		;habitación donde se encuentre el prota. Se mete en una varible par traer todos los datos de golpe y no buscarlos varias veces
      36.  00:A7A3                      habitacion_extras:
      37.  00:A7A3  00                  	db	0		;donde van las ayudas de una habitación
      38.  00:A7A4                      habitacion_actual_puntero;
      39.  00:A7A4  00 00               	dw	0		;puntero para actualizar la habitación cuando se maten todos los enemigos
      40.  00:A7A6                      is_habitacion_terminada:
      41.  00:A7A6  00                  	db	0		;variable para consultar más rápido si se ha pasado (<>0 si se ha pasado y 0 no se ha pasado)
      42.  00:A7A7                      
      43.  00:A7A7                      
      44.  00:A7A7                      habitaciones_juego:
      45.  00:A7A7                      habitaciones_nivel0:
      46.  00:A7A7                      			;0		0'		   1        1'         2         2'         3        3'        4         4'       5         5'        6         6'
      47.  00:A7A7                      	db 00000000b,00000000b,00000000b,00000000b,00000000b,00000000b,00001010b,10000000b,00000000b,00000000b,00000000b,00000000b,00000000b,00000000b,#00,#00 ;nivel 0 fila 1
      47.  00:A7A7  00 00 00 00 00 00 0A 80 00 00 00 00 00 00 00 00 
      48.  00:A7B7                      	db 00000000b,00000000b,00001100b,00000000b,00000101b,00000000b,00001111b,00000000b,00000101b,00000000b,00001001b,00000000b,00000000b,00000000b,#00,#00 
      48.  00:A7B7  00 00 0C 00 05 00 0F 00 05 00 09 00 00 00 00 00 
      49.  00:A7C7                      	db 00000000b,00000000b,00001010b,00000000b,00000000b,00000000b,00001010b,00000000b,00000000b,00000000b,00001010b,00000000b,00000000b,00000000b,#00,#00 
      49.  00:A7C7  00 00 0A 00 00 00 0A 00 00 00 0A 00 00 00 00 00 
      50.  00:A7D7                      	db 00000000b,00000000b,00001010b,00000000b,00000000b,00000000b,00000010b,00000000b,00000000b,00000000b,00001010b,00000000b,00000000b,00000000b,#00,#00 
      50.  00:A7D7  00 00 0A 00 00 00 02 00 00 00 0A 00 00 00 00 00 
      51.  00:A7E7                      	db 00000000b,00000000b,00001110b,00000000b,00000001b,00000000b,00000000b,00000000b,00000100b,00000000b,00001011b,00000000b,00000000b,00000000b,#00,#00 
      51.  00:A7E7  00 00 0E 00 01 00 00 00 04 00 0B 00 00 00 00 00 
      52.  00:A7F7                      	db 00000000b,00000000b,00000110b,00000000b,00000101b,00000000b,00001101b,00000000b,00000101b,00000000b,00000011b,00000000b,00000000b,00000000b,#00,#00 
      52.  00:A7F7  00 00 06 00 05 00 0D 00 05 00 03 00 00 00 00 00 
      53.  00:A807                      	db 00000000b,00000000b,00000000b,00000000b,00000000b,00000000b,00001010b,10000000b,00000000b,00000000b,00000000b,00000000b,00000000b,00000000b,#00,#00 ;nivel 0 fila 7
      53.  00:A807  00 00 00 00 00 00 0A 80 00 00 00 00 00 00 00 00 
      54.  00:A817                      	
      55.  00:A817                      habitaciones_nivel1:
      56.  00:A817                      	db  00000000b,#C0,00000000b,#C0,00000000b,#00,00011010b,#00,00010000b,#C0,00000000b,#C0,00000000b,#C0,#00,#00 	;primera fila
      56.  00:A817  00 C0 00 C0 00 00 1A 00 10 C0 00 C0 00 C0 00 00 
      57.  00:A827                      	db  00000000b,#C0,00011100b,#C0,00011101b,#00,00011111b,#00,00011101b,#C0,00011001b,#C0,00000000b,#C0,#00,#00
      57.  00:A827  00 C0 1C C0 1D 00 1F 00 1D C0 19 C0 00 C0 00 00 
      58.  00:A837                      	db  00000000b,#C0,00011110b,#C0,00011111b,#00,00011111b,#00,00011111b,#C0,00011011b,#C0,00000000b,#C0,#00,#00
      58.  00:A837  00 C0 1E C0 1F 00 1F 00 1F C0 1B C0 00 C0 00 00 
      59.  00:A847                      	db  00000000b,#C0,00011010b,#C0,00011010b,#00,00010010b,#00,00011010b,#C0,00011010b,#C0,00000000b,#C0,#00,#00
      59.  00:A847  00 C0 1A C0 1A 00 12 00 1A C0 1A C0 00 C0 00 00 
      60.  00:A857                      	db  00000000b,#C0,00011010b,#C0,00011110b,#C0,00010101b,#C0,00011011b,#C0,00011010b,#C0,00000000b,#C0,#00,#00
      60.  00:A857  00 C0 1A C0 1E C0 15 C0 1B C0 1A C0 00 C0 00 00 
      61.  00:A867                      	db  00000000b,#C0,00010110b,#C0,00010111b,#C0,00011101b,#C0,00010111b,#C0,00010011b,#C0,00000000b,#C0,#00,#00
      61.  00:A867  00 C0 16 C0 17 C0 1D C0 17 C0 13 C0 00 C0 00 00 
      62.  00:A877                      	db  00000000b,#C0,00000000b,#C0,00000000b,#C0,00011010b,#C0,00011000b,#C0,00000000b,#C0,00000000b,#C0,#00,#00	;última fila
      62.  00:A877  00 C0 00 C0 00 C0 1A C0 18 C0 00 C0 00 C0 00 00 
      63.  00:A887                      	
      64.  00:A887                      habitaciones_nivel2:
      65.  00:A887                      	db  00000000b,#C0,00000000b,#C0,00000000b,#00,00011010b,#00,00010000b,#C0,00000000b,#C0,00000000b,#C0,#00,#00 	;primera fila
      65.  00:A887  00 C0 00 C0 00 00 1A 00 10 C0 00 C0 00 C0 00 00 
      66.  00:A897                      	db  00000000b,#C0,00011100b,#C0,00011101b,#00,00011111b,#00,00011101b,#C0,00011001b,#C0,00000000b,#C0,#00,#00
      66.  00:A897  00 C0 1C C0 1D 00 1F 00 1D C0 19 C0 00 C0 00 00 
      67.  00:A8A7                      	db  00000000b,#C0,00011110b,#C0,00011111b,#00,00011111b,#00,00011111b,#C0,00011011b,#C0,00000000b,#C0,#00,#00
      67.  00:A8A7  00 C0 1E C0 1F 00 1F 00 1F C0 1B C0 00 C0 00 00 
      68.  00:A8B7                      	db  00000000b,#C0,00011010b,#C0,00011010b,#00,00010010b,#00,00011010b,#C0,00011010b,#C0,00000000b,#C0,#00,#00
      68.  00:A8B7  00 C0 1A C0 1A 00 12 00 1A C0 1A C0 00 C0 00 00 
      69.  00:A8C7                      	db  00000000b,#C0,00011010b,#C0,00011110b,#C0,00010101b,#C0,00011011b,#C0,00011010b,#C0,00000000b,#C0,#00,#00
      69.  00:A8C7  00 C0 1A C0 1E C0 15 C0 1B C0 1A C0 00 C0 00 00 
      70.  00:A8D7                      	db  00000000b,#C0,00010110b,#C0,00010111b,#C0,00011101b,#C0,00010111b,#C0,00010011b,#C0,00000000b,#C0,#00,#00
      70.  00:A8D7  00 C0 16 C0 17 C0 1D C0 17 C0 13 C0 00 C0 00 00 
      71.  00:A8E7                      	db  00000000b,#C0,00000000b,#C0,00000000b,#C0,00011010b,#C0,00011000b,#C0,00000000b,#C0,00000000b,#C0,#00,#00	;última fila
      71.  00:A8E7  00 C0 00 C0 00 C0 1A C0 18 C0 00 C0 00 C0 00 00 
      72.  00:A8F7                      	
      73.  00:A8F7                      habitaciones_nivel3:
      74.  00:A8F7                      	db  00000000b,#C0,00000000b,#C0,00000000b,#00,00011010b,#00,00010000b,#C0,00000000b,#C0,00000000b,#C0,#00,#00 	;primera fila
      74.  00:A8F7  00 C0 00 C0 00 00 1A 00 10 C0 00 C0 00 C0 00 00 
      75.  00:A907                      	db  00000000b,#C0,00011100b,#C0,00011101b,#00,00011111b,#00,00011101b,#C0,00011001b,#C0,00000000b,#C0,#00,#00
      75.  00:A907  00 C0 1C C0 1D 00 1F 00 1D C0 19 C0 00 C0 00 00 
      76.  00:A917                      	db  00000000b,#C0,00011110b,#C0,00011111b,#00,00011111b,#00,00011111b,#C0,00011011b,#C0,00000000b,#C0,#00,#00
      76.  00:A917  00 C0 1E C0 1F 00 1F 00 1F C0 1B C0 00 C0 00 00 
      77.  00:A927                      	db  00000000b,#C0,00011010b,#C0,00011010b,#00,00010010b,#00,00011010b,#C0,00011010b,#C0,00000000b,#C0,#00,#00
      77.  00:A927  00 C0 1A C0 1A 00 12 00 1A C0 1A C0 00 C0 00 00 
      78.  00:A937                      	db  00000000b,#C0,00011010b,#C0,00011110b,#C0,00010101b,#C0,00011011b,#C0,00011010b,#C0,00000000b,#C0,#00,#00
      78.  00:A937  00 C0 1A C0 1E C0 15 C0 1B C0 1A C0 00 C0 00 00 
      79.  00:A947                      	db  00000000b,#C0,00010110b,#C0,00010111b,#C0,00011101b,#C0,00010111b,#C0,00010011b,#C0,00000000b,#C0,#00,#00
      79.  00:A947  00 C0 16 C0 17 C0 1D C0 17 C0 13 C0 00 C0 00 00 
      80.  00:A957                      	db  00000000b,#C0,00000000b,#C0,00000000b,#C0,00011010b,#C0,00011000b,#C0,00000000b,#C0,00000000b,#C0,#00,#00	;última fila
      80.  00:A957  00 C0 00 C0 00 C0 1A C0 18 C0 00 C0 00 C0 00 00 
      81.  00:A967                      	
      82.  00:A967                      habitaciones_nivel4:
      83.  00:A967                      	db  00000000b,#C0,00000000b,#C0,00000000b,#00,00011010b,#00,00010000b,#C0,00000000b,#C0,00000000b,#C0,#00,#00 	;primera fila
      83.  00:A967  00 C0 00 C0 00 00 1A 00 10 C0 00 C0 00 C0 00 00 
      84.  00:A977                      	db  00000000b,#C0,00011100b,#C0,00011101b,#00,00011111b,#00,00011101b,#C0,00011001b,#C0,00000000b,#C0,#00,#00
      84.  00:A977  00 C0 1C C0 1D 00 1F 00 1D C0 19 C0 00 C0 00 00 
      85.  00:A987                      	db  00000000b,#C0,00011110b,#C0,00011111b,#00,00011111b,#00,00011111b,#C0,00011011b,#C0,00000000b,#C0,#00,#00
      85.  00:A987  00 C0 1E C0 1F 00 1F 00 1F C0 1B C0 00 C0 00 00 
      86.  00:A997                      	db  00000000b,#C0,00011010b,#C0,00011010b,#00,00010010b,#00,00011010b,#C0,00011010b,#C0,00000000b,#C0,#00,#00
      86.  00:A997  00 C0 1A C0 1A 00 12 00 1A C0 1A C0 00 C0 00 00 
      87.  00:A9A7                      	db  00000000b,#C0,00011010b,#C0,00011110b,#C0,00010101b,#C0,00011011b,#C0,00011010b,#C0,00000000b,#C0,#00,#00
      87.  00:A9A7  00 C0 1A C0 1E C0 15 C0 1B C0 1A C0 00 C0 00 00 
      88.  00:A9B7                      	db  00000000b,#C0,00010110b,#C0,00010111b,#C0,00011101b,#C0,00010111b,#C0,00010011b,#C0,00000000b,#C0,#00,#00
      88.  00:A9B7  00 C0 16 C0 17 C0 1D C0 17 C0 13 C0 00 C0 00 00 
      89.  00:A9C7                      	db  00000000b,#C0,00000000b,#C0,00000000b,#C0,00011010b,#C0,00011000b,#C0,00000000b,#C0,00000000b,#C0,#00,#00	;última fila
      89.  00:A9C7  00 C0 00 C0 00 C0 1A C0 18 C0 00 C0 00 C0 00 00 
      90.  00:A9D7                      	
      91.  00:A9D7                      habitaciones_nivel5:
      92.  00:A9D7                      	db  00000000b,#C0,00000000b,#C0,00000000b,#00,00011010b,#00,00010000b,#C0,00000000b,#C0,00000000b,#C0,#00,#00 	;primera fila
      92.  00:A9D7  00 C0 00 C0 00 00 1A 00 10 C0 00 C0 00 C0 00 00 
      93.  00:A9E7                      	db  00000000b,#C0,00011100b,#C0,00011101b,#00,00011111b,#00,00011101b,#C0,00011001b,#C0,00000000b,#C0,#00,#00
      93.  00:A9E7  00 C0 1C C0 1D 00 1F 00 1D C0 19 C0 00 C0 00 00 
      94.  00:A9F7                      	db  00000000b,#C0,00011110b,#C0,00011111b,#00,00011111b,#00,00011111b,#C0,00011011b,#C0,00000000b,#C0,#00,#00
      94.  00:A9F7  00 C0 1E C0 1F 00 1F 00 1F C0 1B C0 00 C0 00 00 
      95.  00:AA07                      	db  00000000b,#C0,00011010b,#C0,00011010b,#00,00010010b,#00,00011010b,#C0,00011010b,#C0,00000000b,#C0,#00,#00
      95.  00:AA07  00 C0 1A C0 1A 00 12 00 1A C0 1A C0 00 C0 00 00 
      96.  00:AA17                      	db  00000000b,#C0,00011010b,#C0,00011110b,#C0,00010101b,#C0,00011011b,#C0,00011010b,#C0,00000000b,#C0,#00,#00
      96.  00:AA17  00 C0 1A C0 1E C0 15 C0 1B C0 1A C0 00 C0 00 00 
      97.  00:AA27                      	db  00000000b,#C0,00010110b,#C0,00010111b,#C0,00011101b,#C0,00010111b,#C0,00010011b,#C0,00000000b,#C0,#00,#00
      97.  00:AA27  00 C0 16 C0 17 C0 1D C0 17 C0 13 C0 00 C0 00 00 
      98.  00:AA37                      	db  00000000b,#C0,00000000b,#C0,00000000b,#C0,00011010b,#C0,00011000b,#C0,00000000b,#C0,00000000b,#C0,#00,#00	;última fila
      98.  00:AA37  00 C0 00 C0 00 C0 1A C0 18 C0 00 C0 00 C0 00 00 
      99.  00:AA47                      	
     100.  00:AA47                      habitaciones_nivel6:
     101.  00:AA47                      	db  00000000b,#C0,00000000b,#C0,00000000b,#00,00011010b,#00,00010000b,#C0,00000000b,#C0,00000000b,#C0,#00,#00 	;primera fila
     101.  00:AA47  00 C0 00 C0 00 00 1A 00 10 C0 00 C0 00 C0 00 00 
     102.  00:AA57                      	db  00000000b,#C0,00011100b,#C0,00011101b,#00,00011111b,#00,00011101b,#C0,00011001b,#C0,00000000b,#C0,#00,#00
     102.  00:AA57  00 C0 1C C0 1D 00 1F 00 1D C0 19 C0 00 C0 00 00 
     103.  00:AA67                      	db  00000000b,#C0,00011110b,#C0,00011111b,#00,00011111b,#00,00011111b,#C0,00011011b,#C0,00000000b,#C0,#00,#00
     103.  00:AA67  00 C0 1E C0 1F 00 1F 00 1F C0 1B C0 00 C0 00 00 
     104.  00:AA77                      	db  00000000b,#C0,00011010b,#C0,00011010b,#00,00010010b,#00,00011010b,#C0,00011010b,#C0,00000000b,#C0,#00,#00
     104.  00:AA77  00 C0 1A C0 1A 00 12 00 1A C0 1A C0 00 C0 00 00 
     105.  00:AA87                      	db  00000000b,#C0,00011010b,#C0,00011110b,#C0,00010101b,#C0,00011011b,#C0,00011010b,#C0,00000000b,#C0,#00,#00
     105.  00:AA87  00 C0 1A C0 1E C0 15 C0 1B C0 1A C0 00 C0 00 00 
     106.  00:AA97                      	db  00000000b,#C0,00010110b,#C0,00010111b,#C0,00011101b,#C0,00010111b,#C0,00010011b,#C0,00000000b,#C0,#00,#00
     106.  00:AA97  00 C0 16 C0 17 C0 1D C0 17 C0 13 C0 00 C0 00 00 
     107.  00:AAA7                      	db  00000000b,#C0,00000000b,#C0,00000000b,#C0,00011010b,#C0,00011000b,#C0,00000000b,#C0,00000000b,#C0,#00,#00	;última fila
     107.  00:AAA7  00 C0 00 C0 00 C0 1A C0 18 C0 00 C0 00 C0 00 00 
     108.  00:AAB7                      
     109.  00:AAB7                      
     282   00:AAB7                      	
     283   00:AAB7                      	include "variables.asm"
       1.  00:AAB7                      ;;=====================================================
       2.  00:AAB7                      ;;DEFINICIÓN DE VARIABLES
       3.  00:AAB7                      ;;=====================================================
       4.  00:AAB7                      
       5.  00:AAB7                      ;Colores base de la pantalla
       6.  00:AAB7                      color_base:
       7.  00:AAB7  01 01 01            			DB		COLNEGRO,COLNEGRO,COLNEGRO	
       8.  00:AABA                      ;colores de pantalla cuando se tira bomba
       9.  00:AABA                      color_bomba1:
      10.  00:AABA  08 08 08            			DB		COLROJO,COLROJO,COLROJO
      11.  00:AABD                      color_bomba2:
      12.  00:AABD  06 06 06            			DB		COLROJOOSC,COLROJOOSC,COLROJOOSC
      13.  00:AAC0                      
      14.  00:AAC0                      ;definicion de variable del prota usando la estructura del punto de mira
      15.  00:AAC0                      prota:		ESTRUCTURA_PUNTOMIRA
      15.  00:AAC0  78 6C 00 00 00 05 00 00 00 00 00 00 00 00 00 00 
      16.  00:AAD0                      ;variables globales del prota
      17.  00:AAD0                      prota_nivel:			;nivel del castillo donde está 0-6
      18.  00:AAD0  00                  			DB		0
      19.  00:AAD1                      prota_vidas:
      20.  00:AAD1  00                  			DB		0
      21.  00:AAD2                      prota_reliquias:
      22.  00:AAD2  03                  			DB		3
      23.  00:AAD3                      prota_pos_mapx:
      24.  00:AAD3  00                  			DB		0	;pos columna
      25.  00:AAD4                      prota_pos_mapy:
      26.  00:AAD4  00                  			DB		0	;pos fila
      27.  00:AAD5                      prota_energia:
      28.  00:AAD5  FA                  			DB		250
      29.  00:AAD6                      
      30.  00:AAD6                      ;array para pintar de golpe el marcador de vidas
      31.  00:AAD6                      array_aux_vidas: 		
      32.  00:AAD6                      			DB		0,0,0,0,0,0,0,0
      32.  00:AAD6  00 00 00 00 00 00 00 00 
      33.  00:AADE                      
      34.  00:AADE                      ;array para pintar de golpe el marcador de reliquias
      35.  00:AADE                      array_aux_reliquias:	
      36.  00:AADE                      			DB		0,0,0,0,0,0,0,0
      36.  00:AADE  00 00 00 00 00 00 00 00 
      37.  00:AAE6                      
      38.  00:AAE6                      array_aux_energia:					;array para pintar de golpe el marcador de energía
      39.  00:AAE6                      			DB		16,0,0,0,0,0,0 	;el 16 primero es porque siempre estará pintado el cuadro primero rojo
      39.  00:AAE6  10 00 00 00 00 00 00 
      40.  00:AAED                      ultimo_pos_array_aux_energia:
      41.  00:AAED  00                  			DB		0				;el array completo es de 8 pero para posicionar sin niecesidad de cálculos  etiqueto este aparte
      42.  00:AAEE                      			
      43.  00:AAEE                      array_aux_mapa_limpiar:	;es por facilitar el reseteo del mapa (pinto 7 lineas en negro con bios) la otra opción es más larga en código y complicada aunque más rápida
      44.  00:AAEE                      			DB		0,0,0,0,0,0,0
      44.  00:AAEE  00 00 00 00 00 00 00 
      45.  00:AAF5                      elemento_pintar_mapa:
      46.  00:AAF5  00                  			DB		0	;TILEPROTAM = 19, ;TILEGRISM = 9
      47.  00:AAF6                      			
      48.  00:AAF6                      ;; nota importante: cada vez que se cambie de nivel se actualizará el contenido
      49.  00:AAF6                      
      50.  00:AAF6                      
      51.  00:AAF6                      
      52.  00:AAF6  00 (7)              antorchas:			DS		ESTRUCTURA_ANTORCHA
      53.  00:AAFD  C5 C6 C7            array_antorcha:				DB	197,198,199	;fuego + madera1 + madera2
      54.  00:AB00                      
      55.  00:AB00  00 (7)              esqueletos:			DS		ESTRUCTURA_ESQUELETO
      56.  00:AB07                      array_esqueleto:			DB	194, 0, 195, 160, 164, 161, 0, 163, 0, 193, 162, 192
      56.  00:AB07  C2 00 C3 A0 A4 A1 00 A3 00 C1 A2 C0 
      57.  00:AB13  A4 A5 A4 A6         lista_escenas_calavera:		DB	164, 165, 164, 166
      58.  00:AB17                      
      59.  00:AB17                      
      60.  00:AB17                      
      61.  00:AB17                      
      62.  00:AB17                      ;array de 4 bytes x 32 sprites posibles en pantalla que sobreescribirá la tabla de sprites actualizando VRAM
      63.  00:AB17                      array_sprites:
      64.  00:AB17  00 (8)              array_sprites_pm:				DS	2 * 4
      65.  00:AB1F  00 (120)            array_sprites_enem:				DS	30 * 4
      66.  00:AB97  00 (140)            lista_enemigos:					DS	10 * ESTRUCTURA_ENEMIGO
      67.  00:AC23                      ; puntero al array a pintar en VRAM
      68.  00:AC23  00 00               puntero_array_atrib_array_VRAM: DW	0	;ARRAYSPTRIES + 8
      69.  00:AC25                      
      70.  00:AC25                      
      71.  00:AC25                      
      72.  00:AC25                      
      73.  00:AC25                      
     284   00:AC25                      	
     285   00:AC25                      ;;=====================================================
     286   00:AC25                      ;;DEFINICIÓN DE PANTALLAS
     287   00:AC25                      ;;=====================================================		
     288   00:AC25                      	include "pantallas.asm"
       1.  00:AC25                      ;;=====================================================
       2.  00:AC25                      ;;DEFINICIÓN DE PANTALLAS
       3.  00:AC25                      ;;=====================================================		
       4.  00:AC25                      
       5.  00:AC25                      ; bancos 1 y 2 y de pantalla 1 
       6.  00:AC25                      ; se usa un banco común (en este caso el banco 1)
       7.  00:AC25                      ; el mapa afecta al banco 1 y 2
       8.  00:AC25  (022A)              tiles_patrones_nivel0:	incbin "pantallas/nivel0.bank1.til.bin.chr.plet5"
       9.  00:AE4F  (006B)              tiles_color_nivel0:		incbin "pantallas/nivel0.bank1.til.bin.clr.plet5"
      10.  00:AEBA  (0035)              tiles_mapa_nivel0:		incbin "pantallas/nivel0.bank01.map.bin.plet5"
      11.  00:AEEF                      
      12.  00:AEEF  (01B5)              tiles_patrones_nivel1:	incbin "pantallas/nivel1.bank1.til.bin.chr.plet5"
      13.  00:B0A4  (0047)              tiles_color_nivel1:		incbin "pantallas/nivel1.bank1.til.bin.clr.plet5"
      14.  00:B0EB  (0035)              tiles_mapa_nivel1:		incbin "pantallas/nivel1.bank01.map.bin.plet5"
      15.  00:B120                      
      16.  00:B120  (01B5)              tiles_patrones_nivel2:	incbin "pantallas/nivel2.bank1.til.bin.chr.plet5"
      17.  00:B2D5  (0047)              tiles_color_nivel2:		incbin "pantallas/nivel2.bank1.til.bin.clr.plet5"
      18.  00:B31C  (0035)              tiles_mapa_nivel2:		incbin "pantallas/nivel2.bank01.map.bin.plet5"
      19.  00:B351                      
      20.  00:B351  (01B5)              tiles_patrones_nivel3:	incbin "pantallas/nivel3.bank1.til.bin.chr.plet5"
      21.  00:B506  (0047)              tiles_color_nivel3:		incbin "pantallas/nivel3.bank1.til.bin.clr.plet5"
      22.  00:B54D  (0035)              tiles_mapa_nivel3:		incbin "pantallas/nivel3.bank01.map.bin.plet5"
      23.  00:B582                      
      24.  00:B582  (01B5)              tiles_patrones_nivel4:	incbin "pantallas/nivel4.bank1.til.bin.chr.plet5"
      25.  00:B737  (0047)              tiles_color_nivel4:		incbin "pantallas/nivel4.bank1.til.bin.clr.plet5"
      26.  00:B77E  (0035)              tiles_mapa_nivel4:		incbin "pantallas/nivel4.bank01.map.bin.plet5"
      27.  00:B7B3                      
      28.  00:B7B3  (01B5)              tiles_patrones_nivel5:	incbin "pantallas/nivel5.bank1.til.bin.chr.plet5"
      29.  00:B968  (0047)              tiles_color_nivel5:		incbin "pantallas/nivel5.bank1.til.bin.clr.plet5"
      30.  00:B9AF  (0035)              tiles_mapa_nivel5:		incbin "pantallas/nivel5.bank01.map.bin.plet5"
      31.  00:B9E4                      
      32.  00:B9E4  (01B5)              tiles_patrones_nivel6:	incbin "pantallas/nivel6.bank1.til.bin.chr.plet5"
      33.  00:BB99  (0047)              tiles_color_nivel6:		incbin "pantallas/nivel6.bank1.til.bin.clr.plet5"
      34.  00:BBE0  (0035)              tiles_mapa_nivel6:		incbin "pantallas/nivel6.bank01.map.bin.plet5"
      35.  00:BC15                      
      36.  00:BC15                      ; 3º banco que es la parte de puntos, vidas, mapas, etc... es común
      37.  00:BC15  (014C)              tiles_patrones_marcador:	incbin "pantallas/marcador.til.bin.chr.plet5"
      38.  00:BD61  (0035)              tiles_color_marcador:		incbin "pantallas/marcador.til.bin.clr.plet5"
      39.  00:BD96  (0062)              tiles_mapa_marcador:		incbin "pantallas/marcador.map.bin.plet5"
      40.  00:BDF8                      
      41.  00:BDF8                      ;NOTA: FALTARÍAN PANTALLAS ESPECIALES (POR DEFINIR)
      42.  00:BDF8                      ; INICIO
      43.  00:BDF8                      ; GAME OVER
      44.  00:BDF8                      ; HUIDA
      45.  00:BDF8                      ; 2 FINAL BUENO
      46.  00:BDF8                      ; 1 FINAL MALO
     289   00:BDF8                      
     290   00:BDF8                      END:

    LABELS
-------------------------------------------------
00:000000D8 X GTTRIG
00:000000D5 X GTSTCK
00:0000F3DB   CLIKSW
00:0000013E X RDVDP
00:00000047   WRTVDP
00:0000005C   LDIRVM
00:00000059 X LDIRMV
00:0000005F   CHGMOD
00:00000041 X DISSCR
00:00000044 X ENASCR
00:00000062   CHGCLR
00:0000F3E9   FORCLR
00:0000F3EA   BAKCLR
00:0000F3EB   BDRCLR
00:000000C3   CLS
00:0000F3DF X RG0SAV
00:0000F3E0   RG1SAV
00:0000F3E1 X RG2SAV
00:0000F3E2 X RG3SAV
00:0000F3E3 X RG4SAV
00:0000F3E4 X RG5SAV
00:0000F3E5 X RG6SAV
00:0000F3E6 X RG7SAV
00:0000F3E7 X STATFL
00:00000099   REGEST
00:00000098   REGESCVDP
00:000000A0   PSG_A
00:000000A1   PSG_W
00:000000A2   PSG_R
00:00000000   CHRTBL
00:00001800   TILMAP
00:00001B00   SPRART
00:00002000   CLRTBL
00:00003800   SPRTBL
00:00000001   SI
00:00000000 X NO
00:00000004   LIMCADENCIA
00:00000000 X COLTRASP
00:00000001   COLNEGRO
00:00000002 X COLVERDE
00:00000003 X COLVERCLA
00:00000004 X COLAZULOSC
00:00000005 X COLAZULLA
00:00000006   COLROJOOSC
00:00000007 X COLCYAN
00:00000008   COLROJO
00:00000009 X COLROJOCLA
00:0000000A X COLAMAROSC
00:0000000B X COLAMARCLA
00:0000000C X COLVERDOSC
00:0000000D X COLMAGENTA
00:0000000E X COLGRIS
00:0000000F   COLBLANCO
00:000002F8   POSMAPLIN1
00:000002D8   POSMAPLIN2
00:000002B8   POSMAPLIN3
00:00000298   POSMAPLIN4
00:00000278   POSMAPLIN5
00:00000258   POSMAPLIN6
00:00000238   POSMAPLIN7
00:0000000D   POSCARAMAP
00:00000248   POSVIDAS
00:00000011   POSRELIMAP
00:000002C8   POSRELIQ
00:00000288   POSENERG
00:000002B4   POSNIVEL
00:00000238   POSMAPA
00:000001EE   POSPUERABAJ
00:0000008E   POSPUERARRI
00:000000FC   POSPUERDERE
00:000000E1   POSPUERIZQU
00:0000006C   POSESCALERA
00:00000146   POSORACION
00:000000A7 X POSCRUZ
00:000000AB X POSAGUA
00:000000AF X POSARMAD
00:000000B3 X POSPLANTA
00:000000B7 X POSVIDAEXT
00:000000BB X POSBALLESTA
00:00000070 X POSAYUDASY
00:00000038   POSORACIONX
00:00000058   POSORACIONY
00:00000040 X POSCRUZX
00:00000060 X POSAGUAX
00:00000080 X POSARMADX
00:000000A0 X POSPLANTAX
00:000000C0 X POSVIDAEXTX
00:000000E0 X POSBALLESTAX
00:00000002   ALTOAYUDA
00:00000002   ANCHOAYUDA
00:00000008   RADIOAYUDAX
00:00000008   RADIOAYUDAY
00:00000078 X POSXPM
00:0000006C X POSYPM
00:00000000   INACTIVA
00:00000001   ACTIVA
00:00000001   HABTERMIN
00:00000088   POSANTOR1
00:00000097   POSANTOR2
00:000000C4   MAPLLAMA1
00:000000C5   MAPLLAMA2
00:000000FF   RESETLLAMA
00:00000088   POSESQUEL1
00:00000095   POSESQUEL2
00:000000A9   POSCALAVE1
00:000000B6   POSCALAVE2
00:00000019   RESETESQUEL
00:00000004   RESETESCENAESQUEL
00:00000013   TILEPROTAM
00:00000009   TILEGRISM
00:00000010   TILEMAPROJO
00:0000000F   TILEMAPAMAR
00:0000000E   TILEMAPVERD
00:00000008   NMAXVIDREL
00:00000007   NHABNIVEL
00:000000F8 X MAXENERGIA
00:000000D9   TILEENERG8
00:000000BA   TILEENERG7
00:0000009B   TILEENERG6
00:0000007C   TILEENERG5
00:0000005D   TILEENERG4
00:0000003E   TILEENERG3
00:0000001F   TILEENERG2
00:00000000   TILENEGRO
00:00000000 X LIMPANTIZQ
00:000000FF   LIMPANTDER
00:00000000 X LIMPANTARR
00:00000080   LIMPANTABA
00:00000006 X BASEMAPY
00:00000003 X BASEMAPX
00:0000FD9A X H.KEYI
00:0000FD9F   H.TIMI
00:0000F000   PT3_SETUP
00:0000F001   PT3_MODADDR
00:0000F003   PT3_CrPsPtr
00:0000F005   PT3_SAMPTRS
00:0000F007   PT3_OrnPtrs
00:0000F009   PT3_PDSP
00:0000F00B   PT3_CSP
00:0000F00D   PT3_PSP
00:0000F00F   PT3_PrNote
00:0000F010   PT3_PrSlide
00:0000F012   PT3_AdInPtA
00:0000F014   PT3_AdInPtB
00:0000F016   PT3_AdInPtC
00:0000F018   PT3_LPosPtr
00:0000F01A   PT3_PatsPtr
00:0000F01C   PT3_Delay
00:0000F01D   PT3_AddToEn
00:0000F01E   PT3_Env_Del
00:0000F01F   PT3_ESldAdd
00:0000F021   PT3_NTL3
00:0000F023   VARS
00:0000F023   ChanA
00:0000F040   ChanB
00:0000F05D   ChanC
00:0000F07A   DelyCnt
00:0000F07B   CurESld
00:0000F07D   CurEDel
00:0000F07E   Ns_Base_AddToNs
00:0000F07E   Ns_Base
00:0000F07F   AddToNs
00:0000F080   NT_
00:0000F140   AYREGS
00:0000F140   VT_
00:0000F14E   EnvBase
00:0000F150   VAR0END
00:0000F150   T1_
00:0000F150   T_NEW_1
00:0000F150   T_OLD_1
00:0000F168   T_OLD_2
00:0000F180   T_NEW_3
00:0000F180   T_OLD_3
00:0000F182   T_OLD_0
00:0000F182   T_NEW_0
00:0000F19A   T_NEW_2
00:0000F240   ayFX_MODE
00:0000F241   ayFX_BANK
00:0000F243   ayFX_PRIORITY
00:0000F244   ayFX_POINTER
00:0000F246   ayFX_TONE
00:0000F248   ayFX_NOISE
00:0000F249   ayFX_VOLUME
00:0000F24A   ayFX_CHANNEL
00:00008000   START
00:0000803B   loop_principal
00:0000804B X fin_programa_principal
00:0000804B   check_colisiones_objetos
00:00008057   check_colisiones_objetos.habitacion_no_terminada
00:00008062   check_colisiones_objetos.habitacion_sin_ayudas
00:00008062 X fin_check_colisiones_objetos
00:00008064   check_colision_ayudas
00:00008080   fin_check_colision_ayudas
00:00008081   check_colision_ayuda
00:00008081 X check_colision_ayuda.deteccioncolision_paso1
00:00008092   check_colision_ayuda.deteccioncolision_paso2
00:0000809A   check_colision_ayuda.deteccioncolision_paso3
00:000080A7   check_colision_ayuda.deteccioncolision_paso4
00:000080AF   check_colision_ayuda.deteccioncolision_paso5
00:000080B1 X fin_check_colision_ayuda
00:000080B2   inicializa_variables_pruebas
00:000080D7 X fin_inicializa_variables_pruebas
00:000080D8   inicializa_niveles
00:000080E6   inicializa_niveles.inicia_nivel_0
00:000080F0 X inicializa_niveles.si_tiene_ayuda_nivel0
00:000080F2   inicializa_niveles.no_tiene_ayuda_nivel0
00:000080F4 X inicializa_niveles.fin_tiene_ayuda_nivel0
00:00008108   inicializa_niveles.inicia_nivel_1
00:00008112 X inicializa_niveles.si_tiene_ayuda_nivel1
00:00008114   inicializa_niveles.no_tiene_ayuda_nivel1
00:00008116 X inicializa_niveles.fin_tiene_ayuda_nivel1
00:0000812A   inicializa_niveles.inicia_nivel_2
00:00008134 X inicializa_niveles.si_tiene_ayuda_nivel2
00:00008136   inicializa_niveles.no_tiene_ayuda_nivel2
00:00008138 X inicializa_niveles.fin_tiene_ayuda_nivel2
00:0000814C   inicializa_niveles.inicia_nivel_3
00:00008156 X inicializa_niveles.si_tiene_ayuda_nivel3
00:00008158   inicializa_niveles.no_tiene_ayuda_nivel3
00:0000815A X inicializa_niveles.fin_tiene_ayuda_nivel3
00:0000816E   inicializa_niveles.inicia_nivel_4
00:00008178 X inicializa_niveles.si_tiene_ayuda_nivel4
00:0000817A   inicializa_niveles.no_tiene_ayuda_nivel4
00:0000817C X inicializa_niveles.fin_tiene_ayuda_nivel4
00:00008190   inicializa_niveles.inicia_nivel_5
00:0000819A X inicializa_niveles.si_tiene_ayuda_nivel5
00:0000819C   inicializa_niveles.no_tiene_ayuda_nivel5
00:0000819E X inicializa_niveles.fin_tiene_ayuda_nivel5
00:000081B2   inicializa_niveles.inicia_nivel_6
00:000081BC X inicializa_niveles.si_tiene_ayuda_nivel6
00:000081BE   inicializa_niveles.no_tiene_ayuda_nivel6
00:000081C0 X inicializa_niveles.fin_tiene_ayuda_nivel6
00:000081CC X fin_iniciliza_niveles
00:000081CD   actualiza_marcador_vidas
00:000081D2   loop_marcador_caras_negro
00:000081D7 X fin_loop_marcador_caras_negro
00:000081E0   loop_marcador_caras
00:000081E5 X fin_loop_marcador_caras
00:000081E5 X fin_actualiza_marcador_vidas
00:000081E6   actualiza_buffer_reliquias
00:000081EC   loop_buffer_reliquias_negro
00:000081F9   loop_buffer_reliquias
00:000081FE X fin_actualiza_buffer_reliquias
00:000081FF   localiza_info_habitacion
00:00008203 X localiza_info_habitacion.situo_columna
00:0000820C X localiza_info_habitacion.situo_fila
00:00008215   localiza_info_habitacion.loop_suma_fila
00:0000821D   localiza_info_habitacion.situo_nivel
00:0000822C   localiza_info_habitacion.loop_suma_nivel
00:00008231   localiza_info_habitacion.actualiza_variable_habitacion
00:00008247 X localiza_info_habitacion.no_terminada
00:0000824E   localiza_info_habitacion.si_terminada
00:00008253   localiza_info_habitacion.fin_esta_terminada
00:0000825B X localiza_info_habitacion.si_mostrar_ayuda_activa
00:00008263   localiza_info_habitacion.no_mostrar_ayuda_activa
00:00008267   localiza_info_habitacion.fin_mostrar_ayuda_activa
00:0000826D X fin_localiza_info_habitacion
00:0000826E   terminada_habitacion_recorrida
00:00008282 X fin_terminada_habitacion_recorrida
00:00008283   entra_habitacion
00:00008292 X fin_entra_habitacion
00:00008292   pinta_heroe_mapa
00:0000829A X fin_pinta_heroe_mapa
00:0000829A   pinta_blanco_mapa
00:000082A2 X fin_pinta_blanco_mapa
00:000082A2   cambio_nivel
00:000082A8 X fin_cabio_nivel
00:000082A9   suma_A_BC
00:000082AE X fin_suma_A_BC
00:000082AF   suma_A_HL
00:000082B4 X fin_suma_A_HL
00:000082B5   test_OK
00:000082C8 X fin_test_OK
00:000082C9   color_pantalla
00:000082DA X fin_color_pantalla
00:000082DA   sub_preparapantalla
00:000082DA X elimina_clic
00:000082DE X fin_elimina_clic
00:000082DE X limpia_pantalla
00:000082E2 X fin_limpia_pantalla
00:000082E8 X screen2
00:000082ED X sprites_16_16
00:000082FB X fin_sub_preparapantalla
00:000082FB   pinta_pantalla_completa
00:00008301 X fin_pinta_pantalla_completa
00:00008302   pinta_parte_superior_pantalla
00:00008333   pinta_parte_superior_pantalla.carga_nivel_0
00:0000834E   pinta_parte_superior_pantalla.carga_nivel_1
00:00008369   pinta_parte_superior_pantalla.carga_nivel_2
00:00008384   pinta_parte_superior_pantalla.carga_nivel_3
00:0000839F   pinta_parte_superior_pantalla.carga_nivel_4
00:000083BA   pinta_parte_superior_pantalla.carga_nivel_5
00:000083D5   pinta_parte_superior_pantalla.carga_nivel_6
00:000083ED   pinta_parte_superior_pantalla.fin_carga_niveles
00:0000841A X fin_pinta_parte_superior_pantalla
00:0000841A   tiles_patrones
00:0000841C   tiles_colores
00:0000841E   tiles_mapa
00:00008420   pinta_parte_inferior_pantalla
00:0000843B X fin_pinta_parte_inferior_pantalla
00:0000843B   pinta_vidas
00:0000844A X fin_pinta_vidas
00:0000844A   pinta_reliquias
00:00008459 X fin_pinta_reliquias
00:00008459   pinta_nivel
00:00008465 X fin_pinta_nivel
00:00008465   pinta_tile_suelto
00:00008472 X fin_pinta_tile_suelto
00:00008473   mira_pinta_energia
00:00008479 X pinta_ener
00:00008479 X pinta_ener_tile_8
00:00008485   pinta_ener_tile_8_negro
00:00008486   pinta_ener_tile_7
00:00008490   pinta_ener_tile_7_negro
00:00008491   pinta_ener_tile_6
00:0000849B   pinta_ener_tile_6_negro
00:0000849C   pinta_ener_tile_5
00:000084A6   pinta_ener_tile_5_negro
00:000084A7   pinta_ener_tile_4
00:000084B1   pinta_ener_tile_4_negro
00:000084B2   pinta_ener_tile_3
00:000084BC   pinta_ener_tile_3_negro
00:000084BD   pinta_ener_tile_2
00:000084C7   pinta_ener_tile_2_negro
00:000084C8   fin_mira_pinta_energia
00:000084CA   pinta_energia
00:000084D9 X fin_pinta_energia
00:000084D9   borra_mapa
00:0000852F X fin_borra_mapa
00:00008530   posiciona_en_mapa
00:00008533 X posiciona_en_mapa.sumar_fila
00:0000855D X posiciona_en_mapa.fila_0
00:00008564   posiciona_en_mapa.fila_1
00:0000856B   posiciona_en_mapa.fila_2
00:00008572   posiciona_en_mapa.fila_3
00:00008579   posiciona_en_mapa.fila_4
00:00008580   posiciona_en_mapa.fila_5
00:00008587 X posiciona_en_mapa.fila_6
00:00008587   posiciona_en_mapa.sumar_columna
00:0000859D   pinta_pos_mapa_vacio
00:0000859F   fin_pinta_pos_mapa
00:000085A2 X fin_posiciona_en_mapa
00:000085A2   efecto_imagen_tira_reliquia
00:000085A5   efecto_imagen_tira_reliquia.parpadea_fondo
00:000085BC X fin_efecto_imagen_tira_reliquia
00:000085BC   pinta_array
00:000085D7   pinta_array.pa_pinta_fila
00:000085D8   pinta_array.pa_pinta_columnas
00:000085FB X fin_pinta_array
00:000085FC   wordaux1
00:000085FE   wordaux2
00:00008600   byteaux1
00:00008601   byteaux2
00:00008602   inicializa_antorchas
00:00008623 X fin_inicializa_antorchas
00:00008624   inicializa_esqueletos
00:00008645 X fin_inicializa_esqueletos
00:00008646   pinta_extra_fondo
00:0000864A X pinta_extra_fondo.examina_sihay_antorchas
00:00008659   pinta_extra_fondo.hayantorchas
00:00008682   pinta_extra_fondo.examina_sihay_esqueletos
00:00008693   pinta_extra_fondo.hayesqueletos
00:000086BC X fin_pinta_extra_fondo
00:000086BD   actualiza_elementos_fondo
00:000086BD X actualiza_elementos_fondo.examina_antorchas
00:000086CB   actualiza_elementos_fondo.examina_esqueletos
00:000086D7 X fin_actualiza_elementos_fondo
00:000086D7   flip_llamas_antorchas
00:000086F0 X flip_llamas_antorchas.llama_impar
00:00008711   flip_llamas_antorchas.llama_par
00:00008730   fin_flip_llamas_antorchas
00:00008734   flip_calavera_esqueletos
00:00008761 X fin_flip_calavera_esqueletos
00:00008761   var_aux_calavera
00:00008762   actualiza_escena_calavera
00:0000876E   actualiza_escena_calavera.decrementa_escenas
00:0000876F X actualiza_escena_calavera.fin_consulta_escena
00:0000877D X fin_actualiza_escena_calavera
00:0000877E   array_puerta_arriba
00:00008792   array_puerta_derecha
00:000087A7   array_puerta_abajo
00:000087AB   array_puerta_izquierda
00:000087C0   array_escalera
00:000087F0 X lista_puertas
00:000087F0   puerta_arriba
00:000087FD   puerta_derecha
00:0000880A   puerta_abajo
00:00008817   puerta_izquierda
00:00008824   puerta_escalera
00:00008831 X datos_puertas
00:00008831   datos_puerta_escalera
00:0000883E   datos_puerta_arriba
00:0000884B   datos_puerta_derecha
00:00008858   datos_puerta_abajo
00:00008865   datos_puerta_izquierda
00:00008872   inicializa_puertas
00:000088A5 X fin_inicializa_puertas
00:000088A6   carga_datos_puerta
00:000088AB X fin_carga_datos_puerta
00:000088AC   accion_puerta_arriba
00:000088B8 X accion_puerta_arriba.si_cambia_nivel
00:000088C9   accion_puerta_arriba.no_cambia_nivel
00:000088CC   accion_puerta_arriba.fin_cambia_nivel
00:000088CF X fin_accion_puerta_arriba
00:000088CF   accion_puerta_derecha
00:000088DC X fin_accion_puerta_derecha
00:000088DC   accion_puerta_abajo
00:000088E7 X accion_puerta_abajo.si_cambia_nivel
00:000088F9   accion_puerta_abajo.no_cambia_nivel
00:000088FC   accion_puerta_abajo.fin_cambia_nivel
00:000088FF X fin_accion_puerta_abajo
00:000088FF   accion_puerta_izquierda
00:0000890C X fin_accion_puerta_izquierda
00:0000890C   pinta_puertas
00:00008925   pinta_puertas.fin_puerta_arriba
00:00008938   pinta_puertas.fin_puerta_derecha
00:0000894B   pinta_puertas.fin_puerta_abajo
00:0000895E   fin_pinta_puertas
00:0000895F   pinta_puerta_aba
00:00008969 X fin_pinta_puerta_aba
00:00008969   pinta_puerta_arr
00:00008971 X pinta_puerta_arr.pinta_puerta_escalera
00:00008978   pinta_puerta_arr.pinta_puerta_normal
00:0000897C   pinta_puerta_arr.fin_si
00:00008982 X fin_pinta_puerta_arr
00:00008982   pinta_puerta_der
00:0000898C X fin_pinta_puerta_der
00:0000898C   pinta_puerta_izq
00:00008996 X fin_pinta_puerta_izq
00:00008996   actualiza_variables_pinta_array
00:000089B4 X fin_actualiza_variables_pinta_array
00:000089B5   check_colisiones_puertas
00:000089B5 X check_colisiones_puertas.examina_puerta_arriba
00:000089CB   check_colisiones_puertas.examina_puerta_derecha
00:000089E1   check_colisiones_puertas.examina_puerta_abajo
00:000089F7   check_colisiones_puertas.examina_puerta_izquierda
00:00008A08   check_colisiones_puertas.ejecuta_accion_y_sale
00:00008A13   fin_check_colisiones_puertas
00:00008A14   check_colision_puerta
00:00008A14 X check_colision_puerta.deteccioncolision_paso1
00:00008A25   check_colision_puerta.deteccioncolision_paso2
00:00008A2D   check_colision_puerta.deteccioncolision_paso3
00:00008A3A   check_colision_puerta.deteccioncolision_paso4
00:00008A42   check_colision_puerta.deteccioncolision_paso5
00:00008A44 X fin_check_colision_puerta
00:00008A45   desactiva_todas_puertas
00:00008A65 X fin_desactiva_todas_puertas
00:00008A66   carga_patrones_sprites_nivel
00:00008A6A X fin_carga_patrones_sprites_nivel
00:00008A6A   carga_patrones_nivel_comunes
00:00008A76 X fin_carga_patrones_nivel_comunes
00:00008A76 X carga_patrones_sprites_nivel1
00:00008A76 X fin_carga_patrones_sprites
00:00008A77   render_sprites
00:00008A83 X fin_actualiza_array_sprites_vram
00:00008A83   vuelca_resultado_puntomira_array
00:00008AA8 X vuelca_resultado_puntomira_array.codigo_color_1
00:00008AB1   vuelca_resultado_puntomira_array.codigo_color_2
00:00008ABA X fin_vuelca_resultado_puntomira_array
00:00008ABA   check_player
00:00008AD9 X f
00:00008ADA   mueve_arriba
00:00008AE5   mueve_arriba.no_decrementa_y
00:00008AE6 X fin_mueve_arriba
00:00008AE7   mueve_derecha
00:00008AF4   mueve_derecha.no_incrementa_x
00:00008AF5 X fin_mueve_derecha
00:00008AF6   mueve_abajo
00:00008B03   mueve_abajo.no_incrementa_y
00:00008B04 X fin_mueve_abajo
00:00008B05   mueve_izquierda
00:00008B10   mueve_izquierda.no_decrementa_x
00:00008B11 X fin_mueve_izquierda
00:00008B12   mira_disparo
00:00008B12 X mira_disparo.mira_boton_pulsado1
00:00008B1F X mira_disparo.no_efectua_disparo
00:00008B2A   mira_disparo.efectua_disparo
00:00008B3F   mira_disparo.fin_mira_disparo1
00:00008B40   mira_disparo.mira_boton_pulsado2
00:00008B5C X fin_mira_disparo
00:00008B5C   update_controllers_status
00:00008B93   read_joy_0
00:00008BA7   check_8th_keyboard_row
00:00008BB5   check_4th_keyboard_row
00:00008BC3 X inicializa_replayer_efectos_interrupciones
00:00008BDC X fin_inicializa_replayer_efectos_interrupciones
00:00008BDD   subrutina_isr
00:00008BE6 X fin_subrutina_isr
00:00008BE6 X subrutinas_sonido
00:00000000   CHNPRM_PsInOr
00:00000001   CHNPRM_PsInSm
00:00000002   CHNPRM_CrAmSl
00:00000003   CHNPRM_CrNsSl
00:00000004   CHNPRM_CrEnSl
00:00000005   CHNPRM_TSlCnt
00:00000006   CHNPRM_CrTnSl
00:00000008   CHNPRM_TnAcc
00:0000000A   CHNPRM_COnOff
00:0000000B   CHNPRM_OnOffD
00:0000000C   CHNPRM_OffOnD
00:0000000D   CHNPRM_OrnPtr
00:0000000F   CHNPRM_SamPtr
00:00000011   CHNPRM_NNtSkp
00:00000012   CHNPRM_Note
00:00000013   CHNPRM_SlToNt
00:00000014   CHNPRM_Env_En
00:00000015   CHNPRM_Flags
00:00000016   CHNPRM_TnSlDl
00:00000017   CHNPRM_TSlStp
00:00000019   CHNPRM_TnDelt
00:0000001B   CHNPRM_NtSkCn
00:0000001C   CHNPRM_Volume
00:0000001D X CHNPRM_Size
00:00000000   AR_TonA
00:00000002   AR_TonB
00:00000004   AR_TonC
00:00000006   AR_Noise
00:00000007   AR_Mixer
00:00000008   AR_AmplA
00:00000009   AR_AmplB
00:0000000A   AR_AmplC
00:0000000B   AR_Env
00:0000000D   AR_EnvTp
00:00008BE6   CHECKLP
00:00008BF7 X PT3_MUTE
00:00008C03   PT3_INIT
00:00008C42   PT3_INIT.TP_0
00:00008C4E   PT3_INIT.TP_1
00:00008C55   PT3_INIT.TP_2
00:00008CC3   PT3_INIT.L1
00:00008CD0   PT3_INIT.L2
00:00008CD4 X PT3_INIT.L3
00:00008CFB   PT3_INIT.CORR_1
00:00008D09   PT3_INIT.CORR_2
00:00008D10   PT3_INIT.TC_EXIT
00:00008D1B   PT3_INIT.INITV1
00:00008D23   PT3_INIT.INITV2
00:00008D37   PT3_INIT.INITV3
00:00008D3B   PD_OrSm
00:00008D45   PD_SAM
00:00008D46   PD_SAM_
00:00008D5C   PD_VOL
00:00008D65   PD_EOff
00:00008D6D   PD_SorE
00:00008D77   PD_ENV
00:00008D7C   PD_ORN
00:00008D81   PD_ESAM
00:00008D8E   PTDECOD
00:00008D9D   PD_LOOP
00:00008DA0   PD_LP2
00:00008DCD   PD_NOIS
00:00008DD2   PD_REL
00:00008DD8   PD_NOTE
00:00008DE0   PD_RES
00:00008DF2   PD_FIN
00:00008DF9   C_PORTM
00:00008E44   C_PORTM.NOSIG
00:00008E4E   SET_STP
00:00008E5A   C_GLISS
00:00008E6D   C_SMPOS
00:00008E73   C_ORPOS
00:00008E79   C_VIBRT
00:00008E91   C_ENGLS
00:00008EA3   C_DELAY
00:00008EA9   SETENV
00:00008EC4   C_NOP
00:00008EC5   SETORN
00:00008EDE   SPCCOMS
00:00008EFE   CHREGS
00:00008F21   CHREGS.CH_ORPS
00:00008F2C   CHREGS.CH_NTP
00:00008F32   CHREGS.CH_NOK
00:00008F4D   CHREGS.CH_SMPS
00:00008F63   CHREGS.CH_NOAC
00:00008FAA   CHREGS.CH_STPP
00:00008FBF   CHREGS.CH_AMP
00:00008FD1   CHREGS.CH_AMIN
00:00008FD6   CHREGS.CH_SVAM
00:00008FD9   CHREGS.CH_NOAM
00:00008FE2   CHREGS.CH_APOS
00:00008FE8   CHREGS.CH_VOL
00:00008FF3 X CHREGS.CH_ENV
00:00008FFA   CHREGS.CH_NOEN
00:00009014   CHREGS.NO_ENAC
00:0000901B   CHREGS.NO_ENSL
00:00009029   CHREGS.CH_MIX
00:0000902D   CHREGS.CH_EXIT
00:0000904C   CHREGS.CH_ONDL
00:00009050   PT3_PLAY
00:00009084   PT3_PLAY.PLNLP
00:000090AB   PT3_PLAY.PL1A
00:000090B6   PT3_PLAY.PL1B
00:000090CB   PT3_PLAY.PL1C
00:000090E0   PT3_PLAY.PL1D
00:000090E6   PT3_PLAY.PL2
00:00009148   PT3_ROUT
00:00009149   ROUT_A0
00:00009155   ROUT_A0.LOUT
00:00009169   NT_DATA
00:00009179   T_
00:00009179   TCOLD_0
00:00009185   TCNEW_1
00:00009185   TCOLD_1
00:00009187   TCOLD_2
00:00009199   TCNEW_3
00:0000919A   TCOLD_3
00:000091A3   TCNEW_0
00:000091AE   TCNEW_2
00:000091B9   EMPTYSAMORN
00:000091BD   T_PACK
00:00000000 X AYFXRELATIVE
00:000091F2   ayFX_SETUP
00:000091FE   ayFX_END
00:00009204   ayFX_INIT
00:00009215   ayFX_INIT.CHECK_PRI
00:00009236   ayFX_INIT.INIT_END
00:0000923A   ayFX_PLAY
00:0000924E   ayFX_PLAY.TAKECB
00:0000925F   ayFX_PLAY.CHECK_NN
00:0000926C   ayFX_PLAY.SETPOINTER
00:00009280   ayFX_PLAY.SETMASKS
00:0000928E X ayFX_PLAY.CHK1
00:00009290 X ayFX_PLAY.PLAY_C
00:0000929D   ayFX_PLAY.CHK2
00:000092A2 X ayFX_PLAY.PLAY_B
00:000092AF   ayFX_PLAY.CHK3
00:000092B2 X ayFX_PLAY.PLAY_A
00:000092BF   ayFX_PLAY.SETMIXER
00:000092CF   song
00:00009C37   sfx_bank
00:00009C82   examina_ayudas_en_pantalla
00:00009C83   puntero_ayuda_actual
00:00009C85 X array_ayudas
00:00009C85   array_oracionon
00:00009C87 X array_oracionon1
00:00009C89   array_oracionoff
00:00009C8B X array_oracionoff1
00:00009C8D X array_cruzon
00:00009C8F X array_cruzon1
00:00009C91 X array_cruzoff
00:00009C93 X array_cruzoff1
00:00009C95 X array_aguaon
00:00009C97 X array_aguaon1
00:00009C99 X array_aguaoff
00:00009C9B X array_aguaoff1
00:00009C9D X array_armaduraon
00:00009C9F X array_armaduraon1
00:00009CA1 X array_armaduraoff
00:00009CA3 X array_armaduraoff1
00:00009CA5 X array_plantaon
00:00009CA7 X array_plantaon1
00:00009CA9 X array_plantaoff
00:00009CAB X array_plantaoff1
00:00009CAD X array_extraon
00:00009CAF X array_extraon1
00:00009CB1 X array_extraoff
00:00009CB3 X array_extraoff1
00:00009CB5 X array_ballestaon
00:00009CB7 X array_ballestaon1
00:00009CB9 X array_ballestaoff
00:00009CBB X array_ballestaoff1
00:00009CBD X lista_ayudas
00:00009CBD   ayuda_oracion
00:00009CCC   datos_oracion
00:00009CDB   inicializa_ayudas
00:00009CE4 X fin_inicializa_ayudas
00:00009CE5   carga_datos_ayuda
00:00009CEA X fin_carga_datos_ayuda
00:00009CEB   pinta_obj_ayuda
00:00009CEF X pinta_obj_ayuda.dibujoon
00:00009CFB   pinta_obj_ayuda.dibujooff
00:00009D04   pinta_obj_ayuda.param_wordaux2
00:00009D0D X pinta_obj_ayuda.filasycols
00:00009D18 X fin_pinta_obj_ayuda
00:00009D18   pinta_ayudas_habitacion
00:00009D1D X pinta_ayudas_habitacion.examina_oracion
00:00009D37 X pinta_ayudas_habitacion.fin_examina_oracion
00:00009D37   fin_pinta_ayudas_habitacion
00:00009D38   accion_oracion
00:00009D3B X fin_accion_oracion
00:00009D3C X accion_cruz
00:00009D3C X fin_accion_cruz
00:00009D3D X accion_agua
00:00009D3D X fin_accion_agua
00:00009D3E X accion_armadura
00:00009D3E X fin_accion_armadura
00:00009D3F X accion_planta
00:00009D3F X fin_accion_planta
00:00009D40 X accion_vidaextra
00:00009D40 X fin_accion_vidaextra
00:00009D41 X accion_ballesta
00:00009D41 X fin_accion_ballesta
00:00009D42   depack_VRAM
00:00009D6F   literal
00:00009D74   loop
00:00009D7D X getlen
00:00009D83   lus
00:00009DA0   lenok
00:00009DAD   mode7
00:00009DB3   mode6
00:00009DB9   mode5
00:00009DBF   mode4
00:00009DC5   mode3
00:00009DCB   mode2
00:00009DDB   offsok
00:00009DE6   offsok.loop
00:00009E08   getbit
00:00009E0C   getbitexx
00:00009E12   Depack_out
00:00009E14   modes
00:00000000   ESTRUCTURA_PUNTOMIRA.posx
00:00000001   ESTRUCTURA_PUNTOMIRA.posy
00:00000002 X ESTRUCTURA_PUNTOMIRA.escena
00:00000003 X ESTRUCTURA_PUNTOMIRA.velocidad
00:00000004 X ESTRUCTURA_PUNTOMIRA.boton2_pressed
00:00000005 X ESTRUCTURA_PUNTOMIRA.cadencia
00:00000006 X ESTRUCTURA_PUNTOMIRA.pm_aux1
00:00000007 X ESTRUCTURA_PUNTOMIRA.pm_aux2
00:00000008 X ESTRUCTURA_PUNTOMIRA.pm_aux3
00:00000009 X ESTRUCTURA_PUNTOMIRA.pm_aux4
00:0000000A X ESTRUCTURA_PUNTOMIRA.pm_aux5
00:0000000B X ESTRUCTURA_PUNTOMIRA.pm_aux6
00:0000000C X ESTRUCTURA_PUNTOMIRA.pm_aux7
00:0000000D X ESTRUCTURA_PUNTOMIRA.pm_aux8
00:0000000E X ESTRUCTURA_PUNTOMIRA.pm_aux9
00:0000000F X ESTRUCTURA_PUNTOMIRA.pm_aux10
00:00000010 X ESTRUCTURA_PUNTOMIRA
00:00000000 X ESTRUCTURA_ANTORCHA.activo
00:00000001 X ESTRUCTURA_ANTORCHA.postilemem_antor1
00:00000003 X ESTRUCTURA_ANTORCHA.pospantalla_antor1
00:00000004 X ESTRUCTURA_ANTORCHA.pospantalla_antor2
00:00000005 X ESTRUCTURA_ANTORCHA.escena
00:00000006 X ESTRUCTURA_ANTORCHA.cont_sig_escena
00:00000007   ESTRUCTURA_ANTORCHA
00:00000000 X ESTRUCTURA_ESQUELETO.activo
00:00000001 X ESTRUCTURA_ESQUELETO.postilemem_antor1
00:00000003 X ESTRUCTURA_ESQUELETO.pospantalla_esquel1
00:00000004 X ESTRUCTURA_ESQUELETO.pospantalla_esquel2
00:00000005   ESTRUCTURA_ESQUELETO.escena
00:00000006   ESTRUCTURA_ESQUELETO.cont_sig_escena
00:00000007   ESTRUCTURA_ESQUELETO
00:00000000 X ESTRUCTURA_ENEMIGO.tipo
00:00000001 X ESTRUCTURA_ENEMIGO.posx
00:00000002 X ESTRUCTURA_ENEMIGO.posy
00:00000003 X ESTRUCTURA_ENEMIGO.color
00:00000004 X ESTRUCTURA_ENEMIGO.escena
00:00000005 X ESTRUCTURA_ENEMIGO.contador_siguiente_escena
00:00000006 X ESTRUCTURA_ENEMIGO.reset_contador
00:00000007 X ESTRUCTURA_ENEMIGO.dano
00:00000008 X ESTRUCTURA_ENEMIGO.energia
00:00000009 X ESTRUCTURA_ENEMIGO.ver_hor
00:0000000A X ESTRUCTURA_ENEMIGO.manejador_dibujo
00:0000000C X ESTRUCTURA_ENEMIGO.en_aux3
00:0000000D X ESTRUCTURA_ENEMIGO.en_aux4
00:0000000E   ESTRUCTURA_ENEMIGO
00:00000000 X ESTRUCTURA_AYUDA.activa
00:00000001   ESTRUCTURA_AYUDA.posx
00:00000002   ESTRUCTURA_AYUDA.posy
00:00000003   ESTRUCTURA_AYUDA.radiox
00:00000004   ESTRUCTURA_AYUDA.radioy
00:00000005   ESTRUCTURA_AYUDA.accion
00:00000007   ESTRUCTURA_AYUDA.tiles_ayudaon
00:00000009   ESTRUCTURA_AYUDA.tiles_ayudaoff
00:0000000B   ESTRUCTURA_AYUDA.pos_en_tilemap
00:0000000D X ESTRUCTURA_AYUDA.alto
00:0000000E X ESTRUCTURA_AYUDA.ancho
00:0000000F   ESTRUCTURA_AYUDA
00:00000000 X ESTRUCTURA_PUERTA.activa
00:00000001   ESTRUCTURA_PUERTA.posx
00:00000002   ESTRUCTURA_PUERTA.posy
00:00000003   ESTRUCTURA_PUERTA.radiox
00:00000004   ESTRUCTURA_PUERTA.radioy
00:00000005   ESTRUCTURA_PUERTA.accion
00:00000007   ESTRUCTURA_PUERTA.tiles_puerta
00:00000009   ESTRUCTURA_PUERTA.pos_en_tilemap
00:0000000B   ESTRUCTURA_PUERTA.alto
00:0000000C   ESTRUCTURA_PUERTA.ancho
00:0000000D   ESTRUCTURA_PUERTA
00:00009E22 X sprites_pantantalla
00:00009E22   sprites_comunes
00:00009E22 X sprite_punto_mira_1
00:00009E42 X sprite_punto_mira_2
00:00009E62 X sprite_punto_mira_1_mejorado
00:00009E82 X sprite_punto_mira_2_mejorado
00:00009EA2 X sprite_explosion_1
00:00009EC2 X sprite_explosion_2
00:00009EE2   fin_sprites_comunes
00:00009EE2 X sprite_arana1_1
00:00009F02 X sprite_arana1_2
00:00009F22 X sprite_murcielago1_1
00:00009F42 X sprite_murcielago1_2
00:00009F62 X sprite_serpiente1_1
00:00009F82 X sprite_serpiente1_2
00:00009FA2 X sprite_serpiente2_1
00:00009FC2 X sprite_serpiente2_2
00:00009FE2 X sprite_zombi1_1_1
00:0000A002 X sprite_zombi1_2_1
00:0000A022 X sprite_zombi1_3_1
00:0000A042 X sprite_zombi1_4_1
00:0000A062 X sprite_zombi1_1_2
00:0000A082 X sprite_zombi1_2_2
00:0000A0A2 X sprite_zombi1_3_2
00:0000A0C2 X sprite_zombi1_4_2
00:0000A0E2 X sprite_zombi2_1_1
00:0000A102 X sprite_zombi2_2_1
00:0000A122 X sprite_zombi2_3_1
00:0000A142 X sprite_zombi2_4_1
00:0000A162 X sprite_zombi2_1_2
00:0000A182 X sprite_zombi2_2_2
00:0000A1A2 X sprite_zombi2_3_2
00:0000A1C2 X sprite_zombi2_4_2
00:0000A1E2 X sprite_caballero1_1_1
00:0000A202 X sprite_caballero1_2_1
00:0000A222 X sprite_caballero1_3_1
00:0000A242 X sprite_caballero1_4_1
00:0000A262 X sprite_caballero1_1_2
00:0000A282 X sprite_caballero1_2_2
00:0000A2A2 X sprite_caballero1_3_2
00:0000A2C2 X sprite_caballero1_4_2
00:0000A2E2 X sprite_caballero2_1_1
00:0000A302 X sprite_caballero2_2_1
00:0000A322 X sprite_caballero2_3_1
00:0000A342 X sprite_caballero2_4_1
00:0000A362 X sprite_caballero2_1_2
00:0000A382 X sprite_caballero2_2_2
00:0000A3A2 X sprite_caballero2_3_2
00:0000A3C2 X sprite_caballero2_4_2
00:0000A3E2 X sprite_llama1_1
00:0000A402 X sprite_llama2_1
00:0000A422 X sprite_llama1_2
00:0000A442 X sprite_llama2_2
00:0000A462 X sprite_fantasma1_1
00:0000A482 X sprite_fantasma2_1
00:0000A4A2 X sprite_fantasma1_2
00:0000A4C2 X sprite_fantasma2_2
00:0000A4E2 X sprite_magia1_1
00:0000A502 X sprite_magia2_1
00:0000A522 X sprite_magia1_2
00:0000A542 X sprite_magia2_2
00:0000A562 X sprite_beholder1_1
00:0000A582 X sprite_beholder2_1
00:0000A5A2 X sprite_beholder3_1
00:0000A5C2 X sprite_beholder4_1
00:0000A5E2 X sprite_beholder1_2
00:0000A602 X sprite_beholder2_2
00:0000A622 X sprite_beholder3_2
00:0000A642 X sprite_beholder4_2
00:0000A662 X sprite_vampiro1_1
00:0000A682 X sprite_vampiro2_1
00:0000A6A2 X sprite_vampiro1_2
00:0000A6C2 X sprite_vampiro2_2
00:0000A6E2 X sprite_manoizq1
00:0000A702 X sprite_manoizq2
00:0000A722 X sprite_manoizq3
00:0000A742 X sprite_manoder1
00:0000A762 X sprite_manoder2
00:0000A782 X sprite_manoder3
00:0000A7A2   habitacion_actual
00:0000A7A3   habitacion_extras
00:0000A7A4   habitacion_actual_puntero
00:0000A7A6   is_habitacion_terminada
00:0000A7A7   habitaciones_juego
00:0000A7A7   habitaciones_nivel0
00:0000A817   habitaciones_nivel1
00:0000A887   habitaciones_nivel2
00:0000A8F7   habitaciones_nivel3
00:0000A967   habitaciones_nivel4
00:0000A9D7   habitaciones_nivel5
00:0000AA47 X habitaciones_nivel6
00:0000AAB7   color_base
00:0000AABA   color_bomba1
00:0000AABD   color_bomba2
00:0000AAC0   prota
00:0000AAC0   prota.posx
00:0000AAC1   prota.posy
00:0000AAC2   prota.escena
00:0000AAC3 X prota.velocidad
00:0000AAC4 X prota.boton2_pressed
00:0000AAC5   prota.cadencia
00:0000AAC6 X prota.pm_aux1
00:0000AAC7 X prota.pm_aux2
00:0000AAC8 X prota.pm_aux3
00:0000AAC9 X prota.pm_aux4
00:0000AACA X prota.pm_aux5
00:0000AACB X prota.pm_aux6
00:0000AACC X prota.pm_aux7
00:0000AACD X prota.pm_aux8
00:0000AACE X prota.pm_aux9
00:0000AACF X prota.pm_aux10
00:0000AAD0   prota_nivel
00:0000AAD1   prota_vidas
00:0000AAD2   prota_reliquias
00:0000AAD3   prota_pos_mapx
00:0000AAD4   prota_pos_mapy
00:0000AAD5   prota_energia
00:0000AAD6   array_aux_vidas
00:0000AADE   array_aux_reliquias
00:0000AAE6   array_aux_energia
00:0000AAED   ultimo_pos_array_aux_energia
00:0000AAEE   array_aux_mapa_limpiar
00:0000AAF5   elemento_pintar_mapa
00:0000AAF6   antorchas
00:0000AAFD   array_antorcha
00:0000AB00   esqueletos
00:0000AB07   array_esqueleto
00:0000AB13   lista_escenas_calavera
00:0000AB17   array_sprites
00:0000AB17   array_sprites_pm
00:0000AB1F X array_sprites_enem
00:0000AB97 X lista_enemigos
00:0000AC23 X puntero_array_atrib_array_VRAM
00:0000AC25   tiles_patrones_nivel0
00:0000AE4F   tiles_color_nivel0
00:0000AEBA   tiles_mapa_nivel0
00:0000AEEF   tiles_patrones_nivel1
00:0000B0A4   tiles_color_nivel1
00:0000B0EB   tiles_mapa_nivel1
00:0000B120   tiles_patrones_nivel2
00:0000B2D5   tiles_color_nivel2
00:0000B31C   tiles_mapa_nivel2
00:0000B351   tiles_patrones_nivel3
00:0000B506   tiles_color_nivel3
00:0000B54D   tiles_mapa_nivel3
00:0000B582   tiles_patrones_nivel4
00:0000B737   tiles_color_nivel4
00:0000B77E   tiles_mapa_nivel4
00:0000B7B3   tiles_patrones_nivel5
00:0000B968   tiles_color_nivel5
00:0000B9AF   tiles_mapa_nivel5
00:0000B9E4   tiles_patrones_nivel6
00:0000BB99   tiles_color_nivel6
00:0000BBE0   tiles_mapa_nivel6
00:0000BC15   tiles_patrones_marcador
00:0000BD61   tiles_color_marcador
00:0000BD96   tiles_mapa_marcador
00:0000BDF8   END


 Output: t4.out
-------------------------------------------------

 Page: 00
  Org: 00008000  Size: *  Used: 00000000

    No output

 Output: t4.bin
-------------------------------------------------

 Page: 00
  Org: 00008000  Size: *  Used: 00003DFF

   Address   Length Align   Label
   00008000   15871         START
