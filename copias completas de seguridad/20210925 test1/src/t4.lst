Sjasm Z80 Assembler v0.42c - www.xl2s.tk             [2021.09.25 - 13:39:42]

t4.asm
Errors: 0

       1   00:0000                      	OUTPUT	"t4.bin"
       2   00:8000                      	
       3   00:8000                      ;;=====================================================
       4   00:8000                      ;;DEFINICIÓN DE CONSTANTES
       5   00:8000                      ;;=====================================================	
       6   00:8000                      	include "constantes.asm"
       1.  00:8000                      ;;=====================================================
       2.  00:8000                      ;; FICHERO constantes.asm
       3.  00:8000                      ;;=====================================================
       4.  00:8000                      
       5.  00:8000                      ;;ETIQUETAS/CONSTANTES BIOS TECLADO
       6.  00:8000  (00:00D8)           GTTRIG		equ		#00D8	;Returns current trigger status
       7.  00:8000  (00:00D5)           GTSTCK		equ		#00D5	;Returns the joystick/cursors status
       8.  00:8000  (00:F3DB)           CLIKSW		equ		#F3DB	;deshabilita el sonido de clic cuando se pulsa una tecla
       9.  00:8000                      
      10.  00:8000                      ;;ETIQUETAS/CONSTANTES BIOS VDP
      11.  00:8000  (00:013E)           RDVDP		equ		#013E	;lee registro status VDP
      12.  00:8000  (00:0047)           WRTVDP		equ		#0047	;escribe registros del VDP
      13.  00:8000  (00:005C)           LDIRVM		equ		#005C	;RAM/ROM -> VRAM
      14.  00:8000  (00:0059)           LDIRMV		equ		#0059	;VRAM -> RAM
      15.  00:8000  (00:005F)           CHGMOD		equ		#005F	;cambia modo pantalla (screen mode)
      16.  00:8000  (00:0041)           DISSCR  	equ		#0041	;desactiva pantanlla
      17.  00:8000  (00:0044)           ENASCR  	equ		#0044	;activa pantalla
      18.  00:8000  (00:0062)           CHGCLR  	equ		#0062	;cambia color de pantalla (toca A y direcciones)
      19.  00:8000  (00:F3E9)           FORCLR		equ		#F3E9	;zona memoria color foreground
      20.  00:8000  (00:F3EA)           BAKCLR  	equ		#F3EA	;zona memoria color background
      21.  00:8000  (00:F3EB)           BDRCLR 		equ		#F3EB	;zona memoria bordercolor
      22.  00:8000  (00:00C3)           CLS			equ		#00C3	;limpia pantalla (necesita A=0)
      23.  00:8000                      
      24.  00:8000                      ;;ETIQUETAS/CONSTANTES REGISTROS VDP
      25.  00:8000  (00:F3DF)           RG0SAV		equ		#F3DF	;Mirror of VDP register 0 (Basic: VDP(0))
      26.  00:8000  (00:F3E0)           RG1SAV		equ		#F3E0	;Mirror of VDP register 1 (Basic: VDP(1))
      27.  00:8000  (00:F3E1)           RG2SAV		equ		#F3E1	;Mirror of VDP register 2 (Basic: VDP(2))
      28.  00:8000  (00:F3E2)           RG3SAV		equ		#F3E2	;Mirror of VDP register 3 (Basic: VDP(3))
      29.  00:8000  (00:F3E3)           RG4SAV		equ		#F3E3	;Mirror of VDP register 4 (Basic: VDP(4))
      30.  00:8000  (00:F3E4)           RG5SAV		equ		#F3E4	;Mirror of VDP register 5 (Basic: VDP(5))
      31.  00:8000  (00:F3E5)           RG6SAV		equ		#F3E5	;Mirror of VDP register 6 (Basic: VDP(6))
      32.  00:8000  (00:F3E6)           RG7SAV		equ		#F3E6	;Mirror of VDP register 7 (Basic: VDP(7))
      33.  00:8000  (00:F3E7)           STATFL		equ		#F3E7	;Mirror of VDP(8) status register (S#0)
      34.  00:8000                      
      35.  00:8000  (00:0099)           REGEST		equ		#0099	;registro de estado para escribir directamente en VRAM
      36.  00:8000  (00:0098)           REGESCVDP	equ		#0098	;registro donde escribir valor para VRAM
      37.  00:8000                      
      38.  00:8000                      ;;ETIQUETAS/CONSTANTES REGISTROS PSG (PARA JOYSTICK)
      39.  00:8000  (00:00A0)           PSG_A  equ  0a0h  ;reg address
      40.  00:8000  (00:00A1)           PSG_W  equ  0a1h  ;reg data WR
      41.  00:8000  (00:00A2)           PSG_R  equ  0a2h  ;reg data
      42.  00:8000                      
      43.  00:8000                      
      44.  00:8000                      ;;ETIQUETAS DE ZONAS DE MEMORIA DE LA VPD (MSX1)
      45.  00:8000  (00:0000)           CHRTBL		equ		#0000
      46.  00:8000  (00:1800)           TILMAP		equ		#1800
      47.  00:8000  (00:1900)           TILMAPBANK1 equ		#1900
      48.  00:8000  (00:1B00)           SPRART		equ		#1B00
      49.  00:8000  (00:2000)           CLRTBL		equ		#2000
      50.  00:8000  (00:3800)           SPRTBL		equ		#3800
      51.  00:8000                      
      52.  00:8000                      
      53.  00:8000                      ;;ETIQUETAS ESTANDAR PARA DAR MÁS CLARIDAD AL CODIGO
      54.  00:8000  (00:0001)           SI			equ		1
      55.  00:8000  (00:0000)           NO			equ		0
      56.  00:8000  (00:0004)           LIMCADENCIA equ		4	;nº de veces que se ejecutará el disparo antes de ejecutar un disparo real (porque cuando se pulsa la tecl dispara 3 ó 4 veces de rápido que va)
      57.  00:8000                      ;hay que estudiar si 3 es un nº mejor
      58.  00:8000                      
      59.  00:8000                      
      60.  00:8000                      
      61.  00:8000                      ;;PALETA DE COLORES DEL MSX
      62.  00:8000  (00:0000)           COLTRASP	equ		0
      63.  00:8000  (00:0001)           COLNEGRO	equ		1
      64.  00:8000  (00:0002)           COLVERDE	equ		2
      65.  00:8000  (00:0003)           COLVERCLA	equ		3
      66.  00:8000  (00:0004)           COLAZULOSC	equ		4
      67.  00:8000  (00:0005)           COLAZULLA	equ		5
      68.  00:8000  (00:0006)           COLROJOOSC	equ		6
      69.  00:8000  (00:0007)           COLCYAN		equ		7
      70.  00:8000  (00:0008)           COLROJO		equ		8
      71.  00:8000  (00:0009)           COLROJOCLA	equ		9
      72.  00:8000  (00:000A)           COLAMAROSC	equ		10
      73.  00:8000  (00:000B)           COLAMARCLA	equ		11
      74.  00:8000  (00:000C)           COLVERDOSC	equ		12
      75.  00:8000  (00:000D)           COLMAGENTA	equ		13
      76.  00:8000  (00:000E)           COLGRIS		equ		14
      77.  00:8000  (00:000F)           COLBLANCO	equ		15
      78.  00:8000                      
      79.  00:8000                      
      80.  00:8000                      
      81.  00:8000                      ;;ETIQUETAS ESPECIFICAS PARA DAR MÁS CLARIDAD AL CODIGO (relacionadas con posiciones en mapa vdp)
      82.  00:8000  (00:02F8)           POSMAPLIN1  equ		#02F8
      83.  00:8000  (00:02D8)           POSMAPLIN2  equ		#02D8
      84.  00:8000  (00:02B8)           POSMAPLIN3  equ		#02B8
      85.  00:8000  (00:0298)           POSMAPLIN4  equ		#0298
      86.  00:8000  (00:0278)           POSMAPLIN5  equ		#0278
      87.  00:8000  (00:0258)           POSMAPLIN6  equ		#0258
      88.  00:8000  (00:0238)           POSMAPLIN7  equ		#0238
      89.  00:8000                      
      90.  00:8000  (00:000D)           POSCARAMAP	equ		#000D
      91.  00:8000  (00:0248)           POSVIDAS	equ		#0248
      92.  00:8000  (00:0011)           POSRELIMAP	equ		#0011
      93.  00:8000  (00:02C8)           POSRELIQ	equ		#02C8
      94.  00:8000  (00:0288)           POSENERG	equ		#0288
      95.  00:8000  (00:02B4)           POSNIVEL	equ		#02B4
      96.  00:8000  (00:0238)           POSMAPA		equ 	#0238
      97.  00:8000                      
      98.  00:8000  (00:01EE)           POSPUERABAJ equ		#01EE
      99.  00:8000  (00:008E)           POSPUERARRI equ		#008E
     100.  00:8000  (00:00FC)           POSPUERDERE equ		#00FC
     101.  00:8000  (00:00E1)           POSPUERIZQU equ		#00E1
     102.  00:8000                      
     103.  00:8000  (00:0000)           ORACIONON	equ		0
     104.  00:8000  (00:0004)           ORACIONOFF  equ		4
     105.  00:8000  (00:0008)           CRUZON		equ		8
     106.  00:8000  (00:000C)           CRUZOFF		equ		12
     107.  00:8000  (00:0010)           AGUAON		equ		16
     108.  00:8000  (00:0014)           AGUAOFF		equ		20
     109.  00:8000  (00:0018)           ARMADON		equ		24
     110.  00:8000  (00:001C)           ARMADOFF	equ		28
     111.  00:8000  (00:0020)           PLANTAON	equ		32
     112.  00:8000  (00:0024)           PLANTAOFF	equ		36
     113.  00:8000  (00:0028)           VIDAEXTON	equ		40
     114.  00:8000  (00:002C)           VIDAEXTOFF	equ		44
     115.  00:8000  (00:0030)           BALLESON	equ		48
     116.  00:8000  (00:0034)           BALLESOFF	equ		52
     117.  00:8000  (00:0000)           INACTIVO	equ		0
     118.  00:8000  (00:0001)           ACTIVO		equ		1
     119.  00:8000                      
     120.  00:8000                      ;;ETIQUETAS ESPECIFICAS PARA DAR MÁS CLARIDAD AL CODIGO (relacionadas con posiciones en en el banco de memoria)
     121.  00:8000  (00:0013)           TILEPROTAM  equ		19		;tile del prota para pintar en mapa
     122.  00:8000  (00:0009)           TILEGRISM	equ		9		;tile gris que representa vacio (por donde el prota va pasando)
     123.  00:8000  (00:0010)           TILEMAPROJO equ		16
     124.  00:8000  (00:000F)           TILEMAPAMAR equ		15
     125.  00:8000  (00:000E)           TILEMAPVERD equ		14
     126.  00:8000                      
     127.  00:8000                      
     128.  00:8000                      ;;ETIQUETAS ESPECIFICAS PARA DAR MÁS CLARIDAD AL CODIGO (generales)
     129.  00:8000  (00:0008)           NMAXVIDREL	equ		8		;el número máximo de vidas y de reliquias es de 8
     130.  00:8000  (00:0007)           NHABNIVEL	equ		7
     131.  00:8000  (00:00F8)           MAXENERGIA  equ		248
     132.  00:8000  (00:00D9)           TILEENERG8  equ		217
     133.  00:8000  (00:00BA)           TILEENERG7  equ		186
     134.  00:8000  (00:009B)           TILEENERG6  equ		155
     135.  00:8000  (00:007C)           TILEENERG5  equ		124
     136.  00:8000  (00:005D)           TILEENERG4  equ		93
     137.  00:8000  (00:003E)           TILEENERG3  equ		62
     138.  00:8000  (00:001F)           TILEENERG2  equ		31
     139.  00:8000  (00:0000)           TILENEGRO	equ		0
     140.  00:8000                      
     141.  00:8000                      ;limites
     142.  00:8000  (00:0000)           LIMPANTIZQ  equ		0
     143.  00:8000  (00:00FF)           LIMPANTDER  equ		255
     144.  00:8000  (00:0000)           LIMPANTARR  equ		0
     145.  00:8000  (00:0080)           LIMPANTABA  equ		128
     146.  00:8000                      
     147.  00:8000                      
     148.  00:8000                      ;matriz de 7x7 empieza en 0, y fila y x col, cuento desde esquina sup izq
     149.  00:8000  (00:0006)           BASEMAPY	equ		6
     150.  00:8000  (00:0003)           BASEMAPX	equ		3
     151.  00:8000                      
     152.  00:8000                      
     153.  00:8000                      
     154.  00:8000                      ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
     155.  00:8000                      ;; CONSTANTES PARA INTERRUPCIONES
     156.  00:8000                      ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
     157.  00:8000  (00:FD9A)           H.KEYI		equ     	#FD9A
     158.  00:8000  (00:FD9F)           H.TIMI	 	equ     	#FD9F
     159.  00:8000                      
     160.  00:8000                      
     161.  00:8000                      ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
     162.  00:8000                      ;; CONSTANTES PARA SONIDO 
     163.  00:8000                      ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
     164.  00:8000                      
     165.  00:8000  (F000)              	map		#f000
     166.  00:8000                      
     167.  00:8000                      ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;PT3 REPLAYER
     168.  00:8000  (00:F000)           PT3_SETUP:		#1	;set bit0 to 1, if you want to play without looping
     169.  00:8000                      					;bit7 is set each time, when loop point is passed
     170.  00:8000  (00:F001)           PT3_MODADDR:	#2
     171.  00:8000  (00:F003)           PT3_CrPsPtr:	#2
     172.  00:8000  (00:F005)           PT3_SAMPTRS:	#2
     173.  00:8000  (00:F007)           PT3_OrnPtrs:	#2
     174.  00:8000  (00:F009)           PT3_PDSP:		#2
     175.  00:8000  (00:F00B)           PT3_CSP:		#2
     176.  00:8000  (00:F00D)           PT3_PSP:		#2
     177.  00:8000  (00:F00F)           PT3_PrNote:		#1
     178.  00:8000  (00:F010)           PT3_PrSlide:	#2
     179.  00:8000  (00:F012)           PT3_AdInPtA:	#2
     180.  00:8000  (00:F014)           PT3_AdInPtB:	#2
     181.  00:8000  (00:F016)           PT3_AdInPtC:	#2
     182.  00:8000  (00:F018)           PT3_LPosPtr:	#2
     183.  00:8000  (00:F01A)           PT3_PatsPtr:	#2
     184.  00:8000  (00:F01C)           PT3_Delay:		#1
     185.  00:8000  (00:F01D)           PT3_AddToEn:	#1
     186.  00:8000  (00:F01E)           PT3_Env_Del:	#1
     187.  00:8000  (00:F01F)           PT3_ESldAdd:	#2
     188.  00:8000  (00:F021)           PT3_NTL3:		#2	; AND A / NOP (note table creator)
     189.  00:8000                      
     190.  00:8000  (00:F023)           VARS:			#0
     191.  00:8000                      
     192.  00:8000  (00:F023)           ChanA:			#29			;CHNPRM_Size
     193.  00:8000  (00:F040)           ChanB:			#29			;CHNPRM_Size
     194.  00:8000  (00:F05D)           ChanC:			#29			;CHNPRM_Size
     195.  00:8000                      
     196.  00:8000                      ;GlobalVars
     197.  00:8000  (00:F07A)           DelyCnt:		#1
     198.  00:8000  (00:F07B)           CurESld:		#2
     199.  00:8000  (00:F07D)           CurEDel:		#1
     200.  00:8000  (00:F07E)           Ns_Base_AddToNs:	#0
     201.  00:8000  (00:F07E)           Ns_Base:		#1
     202.  00:8000  (00:F07F)           AddToNs:		#1
     203.  00:8000                      
     204.  00:8000  (00:F080)           NT_:			#192	; Puntero a/tabla de frecuencias
     205.  00:8000                      
     206.  00:8000  (00:F140)           AYREGS:			#0
     207.  00:8000  (00:F140)           VT_:			#14
     208.  00:8000  (00:F14E)           EnvBase:		#2
     209.  00:8000  (00:F150)           VAR0END:		#0
     210.  00:8000                      
     211.  00:8000  (00:F150)           T1_:			#0		
     212.  00:8000  (00:F150)           T_NEW_1:		#0
     213.  00:8000  (00:F150)           T_OLD_1:		#24
     214.  00:8000  (00:F168)           T_OLD_2:		#24
     215.  00:8000  (00:F180)           T_NEW_3:		#0
     216.  00:8000  (00:F180)           T_OLD_3:		#2
     217.  00:8000  (00:F182)           T_OLD_0:		#0
     218.  00:8000  (00:F182)           T_NEW_0:		#24
     219.  00:8000  (00:F19A)           T_NEW_2:		#166
     220.  00:8000                      ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;PT3 REPLAYER END
     221.  00:8000                      
     222.  00:8000                      ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ayFX REPLAYER 
     223.  00:8000  (00:F240)           ayFX_MODE:		#1			; ayFX mode
     224.  00:8000  (00:F241)           ayFX_BANK:		#2			; Current ayFX Bank
     225.  00:8000  (00:F243)           ayFX_PRIORITY:	#1			; Current ayFX stream priotity
     226.  00:8000  (00:F244)           ayFX_POINTER:	#2			; Pointer to the current ayFX stream
     227.  00:8000  (00:F246)           ayFX_TONE:		#2			; Current tone of the ayFX stream
     228.  00:8000  (00:F248)           ayFX_NOISE:		#1			; Current noise of the ayFX stream
     229.  00:8000  (00:F249)           ayFX_VOLUME:	#1			; Current volume of the ayFX stream
     230.  00:8000  (00:F24A)           ayFX_CHANNEL:	#1			; PSG channel to play the ayFX stream
     231.  00:8000                      
     232.  00:8000                      	;IF (AYFXRELATIVE == 1 ) 
     233.  00:8000                      ;ayFX_VT:	ds	2			; ayFX relative volume table pointer
     234.  00:8000                      	;ENDIF
     235.  00:8000                      ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ayFX REPLAYER END
     236.  00:8000                      
     237.  00:8000                      
     238.  00:8000                      
       7   00:8000                      
       8   00:8000                      ;;=====================================================
       9   00:8000                      ;;DEFINICIÓN DE CABECERA DE ARCHIVO BIN
      10   00:8000                      ;;=====================================================		
      11   00:8000                      	include "cabecerabin.asm"
       1.  00:8000                      ;;=====================================================
       2.  00:8000                      ;; FICHERO cabecera.asm
       3.  00:8000                      ;;=====================================================
       4.  00:8000                      
       5.  00:8000                      ;;CABECERA FICHERO BIN
       6.  00:8000  FE                  	DB	#FE
       7.  00:8001  00 80               	DW	START
       8.  00:8003  72 B9               	DW	END
       9.  00:8005  00 80               	DW	START
      10.  00:8007                      
      11.  00:8007                      ;;INICIO CÓDIGO PROGRAMA	
      12.  00:8007                      	ORG	#8000
      13.  00:8000                      	
      12   00:8000                      	
      13   00:8000                      START:	
      14   00:8000                      	;inicializa pantalla y entonrno
      15   00:8000  CD FA 80            	CALL	sub_preparapantalla			;screen 2,2 sin click al pulsar tecla y color 16,1,1
      16   00:8003                      	
      17   00:8003                      	;inicializa variables para parametrizar funciones y que lo que se muestre sea variable (nº vidas, mapa, puertas, pantalla, etc...)
      18   00:8003  CD 40 80            	CALL	inicializa_variables_pruebas
      19   00:8006                      	
      20   00:8006                      	;inicializa los niveles por partida
      21   00:8006  CD 63 80            	CALL	inicializa_niveles			;no es necesario parametrizarlo según el nivel del usuario ya que se cargan todos
      22   00:8009                      	
      23   00:8009                      	;inicializa las estructuras de forma particular según ayua pero sin poner valores de posición
      24   00:8009  CD CC 96            	CALL	resetea_ayudas
      25   00:800C                      	
      26   00:800C                      	;pinta la pantalla (la primera o algunas especiales se pintan completamente)
      27   00:800C  CD 1B 81            	CALL	pinta_pantalla_completa 
      28   00:800F                      	
      29   00:800F                      	;carga sprites en memoria (SE HA RETRASADO HASTA PARAMETRIZAR LA CARGA DE PANTALLAS)
      30   00:800F  CD AC 84            	CALL 	carga_patrones_sprites_nivel
      31   00:8012                      	
      32   00:8012                      	;funciones que modificarian el marcador si se produce un evento cuando toque y cuando se pinta la pantalla ya se mira
      33   00:8012                      	;una variable para ver si el array hay que actualizarlo en pantalla o no
      34   00:8012  CD 5B 82            	CALL	pinta_vidas
      35   00:8015  CD 6A 82            	CALL 	pinta_reliquias
      36   00:8018  CD 79 82            	CALL	pinta_nivel
      37   00:801B  CD F9 82            	CALL	borra_mapa
      38   00:801E  CD 50 83            	CALL	pinta_puertas
      39   00:8021                      
      40   00:8021  3E 13               	LD		 A, TILEPROTAM
      41   00:8023  32 0F A6            	LD		(elemento_pintar_mapa), A
      42   00:8026  CD DA 83            	CALL	posiciona_en_mapa		;se le pasa elemento_pintar_mapa (tile del prota) está el prota y prota.poxx y posy
      43   00:8029                      	
      44   00:8029                      
      45   00:8029                      
      46   00:8029  CD 7C 97            	CALL	inicializa_ayudas
      47   00:802C                      
      48   00:802C                      	
      49   00:802C  DD 21 BA A6         	LD		IX, ayuda_oracion
      50   00:8030  CD E0 97            	CALL	activaycalcula_posicion_ayuda
      51   00:8033                      	
      52   00:8033                      
      53   00:8033                      
      54   00:8033                      ;CALL	actualiza_ayudas
      55   00:8033                      
      56   00:8033                      	;incializacion de replayer con interrupciones
      57   00:8033                      ;	CALL	inicializa_replayer_efectos_interrupciones
      58   00:8033                      
      59   00:8033                      loop_principal:
      60   00:8033  76                  	HALT							;espera VBLANK y sincroniza
      61   00:8034                      	
      62   00:8034  CD C4 84            	CALL	render_sprites			;actualiza array de sprites y los pinta en pantalla
      63   00:8037                      	
      64   00:8037  CD EA 82            	CALL	pinta_energia			;pinta la energia en pantalla
      65   00:803A                      
      66   00:803A  CD 07 85            	CALL	check_player			;MIRA EL CONTROL Y APLICA LA LOGICA DE MOVIMIENTO DEL PROTAGONISTA
      67   00:803D                      	
      68   00:803D  C3 33 80            	JP		loop_principal
      69   00:8040                      fin_programa_principal:
      70   00:8040                      	;RET
      71   00:8040                      
      72   00:8040                      
      73   00:8040                      
      74   00:8040                      
      75   00:8040                      
      76   00:8040                      ;;*******************************************************************
      77   00:8040                      ; sólo para hacer pruebas y pintar la parte de las vidas y demás
      78   00:8040                      inicializa_variables_pruebas:
      79   00:8040  3E 04               	LD		 A, 4
      80   00:8042  32 EB A5            	LD		(prota_vidas),A
      81   00:8045                      
      82   00:8045  3E 04               	LD		 A, 4
      83   00:8047  32 EC A5            	LD		(prota_reliquias), A
      84   00:804A                      
      85   00:804A  3E 64               	LD		 A, 100
      86   00:804C  32 EF A5            	LD		(prota_energia), A
      87   00:804F                      
      88   00:804F                      	;ubico al prota dentro del nivel para obtener luego las habitaciones y enemigos que aparecerán
      89   00:804F                      	;será igual la posición inicial en todos los niveles
      90   00:804F                      	
      91   00:804F  3E 00               	LD		 A, 0				;los niveles (matrices) son 7 del 0 al 6
      92   00:8051  32 EA A5            	LD		(prota_nivel), A	;nivel empieza en 0 para usar las posiciones ascii
      93   00:8054                      
      94   00:8054  3E 00               	LD		 A, 0				;los subniveles (filas) son 7 del 0 al 6
      95   00:8056  32 EE A5            	LD		(prota_pos_mapy), A	;pos Y dentro del nivel (se empieza en 0)
      96   00:8059                      
      97   00:8059  3E 02               	LD		 A, 2				;columnas 7: del 0 al 6
      98   00:805B  32 ED A5            	LD		(prota_pos_mapx), A	;pos X dentro del nivel (se empieza en 0)
      99   00:805E                      	
     100   00:805E  AF                  	XOR		 A
     101   00:805F  32 DF A5            	LD		(prota.cadencia), A
     102   00:8062                      fin_inicializa_variables_pruebas:
     103   00:8062  C9                  	RET
     104   00:8063                      ;;************************************************************************
     105   00:8063                      
     106   00:8063                      
     107   00:8063                      
     108   00:8063                      
     109   00:8063                      
     110   00:8063                      
     111   00:8063                      
     112   00:8063                      
     113   00:8063                      
     114   00:8063                      ;;=====================================================
     115   00:8063                      ;;DEFINICIÓN DE SUBRUTINAS
     116   00:8063                      ;;=====================================================
     117   00:8063                      	include "subrutinas.asm"
       1.  00:8063                      ;;=====================================================
       2.  00:8063                      ;;DEFINICIÓN DE SUBRUTINAS
       3.  00:8063                      ;;=====================================================	
       4.  00:8063                      
       5.  00:8063                      
       6.  00:8063                      ;;=====================================================
       7.  00:8063                      ;;INICIALIZA_NIVELES
       8.  00:8063                      ;;=====================================================	
       9.  00:8063                      ; función: 	copia la plantilla de niveles (habitaciones_plantilla) en los niveles de trabajo para el juego (habitaciones_juego)
      10.  00:8063                      ; entrada: 	habitaciones_plantilla
      11.  00:8063                      ; salida: 	habitaciones_juego
      12.  00:8063                      ; toca: 	A, B, HL, DE
      13.  00:8063                      inicializa_niveles:
      14.  00:8063  AF                  		XOR		 A
      15.  00:8064  06 31               		LD		 B,   49				;7 filas por 7 niveles menos el primero que lo hago fuera del buble
      16.  00:8066  21 C1 A2            		LD		HL,   habitaciones_juego;tambíen puntero a la primera fila del primer nivel
      17.  00:8069  11 0E 00            		LD		DE,   14				;14 bytes de habitaciones y 2 extras
      18.  00:806C  19                  		ADD		HL,   DE				;puntero al primero de los bytes extras
      19.  00:806D  77                  		LD		(HL), A					;0000000Xb si X=0 no se ha pasado por allí y si es 1 sí
      20.  00:806E  11 10 00            		LD		DE,   16				;desde las col 15 de una fila a la siguiente
      21.  00:8071                      .bucle_borra_hab:
      22.  00:8071  19                  		ADD		HL,   DE				;situo el puntero 16 bytes siguientes
      23.  00:8072  77                  		LD		(HL), A					;pongo su contenido a 0
      24.  00:8073  10 FC               		DJNZ	.bucle_borra_hab		;repito para poner todos a 0
      25.  00:8075                      fin_iniciliza_niveles:
      26.  00:8075  C9                  		RET
      27.  00:8076                      
      28.  00:8076                      
      29.  00:8076                      ;;=====================================================
      30.  00:8076                      ;;ACTUALIZA_MARCADOR_VIDAS
      31.  00:8076                      ;;=====================================================	
      32.  00:8076                      ; función:  actualiza el buffer de vidas
      33.  00:8076                      ; entrada: 	prota_vidas
      34.  00:8076                      ; salida: 	array_aux_vidas
      35.  00:8076                      ; toca:		A,B,HL
      36.  00:8076                      actualiza_marcador_vidas:
      37.  00:8076                      	;para no andar restando pongo todos los huecos a negro y luego en otro bucle las caras
      38.  00:8076                      	;1-pinto todo en blanco
      39.  00:8076  21 F0 A5            	LD		HL,array_aux_vidas
      40.  00:8079  06 08               	LD		 B,NMAXVIDREL
      41.  00:807B                      loop_marcador_caras_negro:	;asignar espacios en negro
      42.  00:807B  36 00               	LD		(HL),0			;0 posición mapa tiles para nada (es transparente pero el fondo es negro)
      43.  00:807D  23                  	INC		HL
      44.  00:807E  10 FB               	DJNZ	loop_marcador_caras_negro
      45.  00:8080                      fin_loop_marcador_caras_negro:
      46.  00:8080                      	;2-pinto las caras según el n de vidas
      47.  00:8080  3A EB A5            	LD		 A, (prota_vidas)
      48.  00:8083  B7                  	OR		 A
      49.  00:8084  C8                  	RET 	 Z
      50.  00:8085  47                  	LD		 B, A
      51.  00:8086  21 F0 A5            	LD		HL, array_aux_vidas
      52.  00:8089                      loop_marcador_caras: ;asignar caras
      53.  00:8089  36 0D               	LD		(HL), POSCARAMAP	;13 posición mapa tiles para cara
      54.  00:808B  23                  	INC		HL
      55.  00:808C  10 FB               	DJNZ	loop_marcador_caras
      56.  00:808E                      fin_loop_marcador_caras:
      57.  00:808E                      fin_actualiza_marcador_vidas:
      58.  00:808E  C9                  	RET
      59.  00:808F                      
      60.  00:808F                      
      61.  00:808F                      ;;=====================================================
      62.  00:808F                      ;;ACTUALIZA_BUFFER_RELIQUIAS
      63.  00:808F                      ;;=====================================================	
      64.  00:808F                      ; función: 	actualiza buffer de reliquias
      65.  00:808F                      ; entrada: 	prota_reliquias
      66.  00:808F                      ; salida: 	array_aux_reliquias
      67.  00:808F                      ; toca:		A,B,HL
      68.  00:808F                      actualiza_buffer_reliquias:	
      69.  00:808F                      	;para no andar restando pongo todos los huecos a negro y luego en otro bucle las reliquias
      70.  00:808F                      	;1-pinto todo en blanco
      71.  00:808F  21 F8 A5            	LD		HL, array_aux_reliquias
      72.  00:8092  06 08               	LD		 B, NMAXVIDREL
      73.  00:8094  AF                  	XOR		 A
      74.  00:8095                      loop_buffer_reliquias_negro:	;asignar espacios en negro
      75.  00:8095  77                  	LD		(HL), A			;0 posición mapa tiles para nada (es transparente pero el fondo es negro)
      76.  00:8096  23                  	INC		HL
      77.  00:8097  10 FC               	DJNZ	loop_buffer_reliquias_negro
      78.  00:8099                      
      79.  00:8099                      	;2-pinto las cruces según el n de reliquias
      80.  00:8099  21 F8 A5            	LD		HL, array_aux_reliquias
      81.  00:809C  3A EC A5            	LD		 A, (prota_reliquias)
      82.  00:809F  B7                  	OR		 A
      83.  00:80A0  C8                  	RET		 Z
      84.  00:80A1  47                  	LD		 B, A
      85.  00:80A2                      loop_buffer_reliquias: ;asignar reliquias
      86.  00:80A2  36 11               	LD		(HL), POSRELIMAP	;17 posición mapa tiles para reliquia
      87.  00:80A4  23                  	INC		HL
      88.  00:80A5  10 FB               	DJNZ	loop_buffer_reliquias
      89.  00:80A7                      fin_actualiza_buffer_reliquias:
      90.  00:80A7  C9                  	RET
      91.  00:80A8                      
      92.  00:80A8                      
      93.  00:80A8                      
      94.  00:80A8                      ;;=====================================================
      95.  00:80A8                      ;;LOCALIZA_INFO_HABITACION
      96.  00:80A8                      ;;=====================================================	
      97.  00:80A8                      ; función: 	busca las puertas que hay que pintar egún la posición del usuario y las pone en habitacion_actual
      98.  00:80A8                      ; entrada: 	prota.pos_mapy, prota.pos_mapx, prota_nivel habitaciones_juego
      99.  00:80A8                      ; salida: 	habitacion_actual
     100.  00:80A8                      ; toca:		todo
     101.  00:80A8                      ;ejemplo: nivel 4, posy 5 y posx 3
     102.  00:80A8                      ;3 + 5 x 8 + 4 x 49
     103.  00:80A8                      localiza_info_habitacion:
     104.  00:80A8                      ;primera posición: me coloco en la columna correcta
     105.  00:80A8  21 C1 A2            	LD		HL, habitaciones_juego
     106.  00:80AB                      .situo_columna:	
     107.  00:80AB  3A ED A5            	LD		 A, (prota_pos_mapx)
     108.  00:80AE  CB 27               	SLA		 A				;multiplico por dos ya que cada habitación va de dos en dos bytes
     109.  00:80B0  06 00               	LD		 B, 0
     110.  00:80B2  4F                  	LD		 C, A
     111.  00:80B3                      
     112.  00:80B3  09                  	ADD 	HL, BC			;sumo a la posición 0 la columnax2 en la que situarme
     113.  00:80B4                      	
     114.  00:80B4                      .situo_fila:
     115.  00:80B4  3A EE A5            	LD		A, (prota_pos_mapy)
     116.  00:80B7  B7                  	OR	 	A
     117.  00:80B8  CA C5 80            	JP		Z, .situo_nivel	;si la fila es 0 no es necesario seguir operando en fila
     118.  00:80BB                      	
     119.  00:80BB  47                  	LD		B, A
     120.  00:80BC  AF                  	XOR		A
     121.  00:80BD                      .loop_suma_fila:
     122.  00:80BD  C6 10               	ADD		16				;cada fila tiene 16 bytes
     123.  00:80BF  10 FC               	DJNZ	.loop_suma_fila
     124.  00:80C1                      	
     125.  00:80C1  06 00               	LD		 B, 0
     126.  00:80C3  4F                  	LD		 C, A
     127.  00:80C4                      
     128.  00:80C4  09                  	ADD 	HL, BC			;sumo a la columna 16 x filas para situarme en la fila correcta
     129.  00:80C5                      
     130.  00:80C5                      .situo_nivel:
     131.  00:80C5  3A EA A5            	LD		 A, (prota_nivel)
     132.  00:80C8  B7                  	OR	 	 A
     133.  00:80C9  CA D9 80            	JP		 Z, .actualiza_valiable_habitacion	;si el nivel es 0 al pasar por las anterirores ya estoy situado actualizo la variable y termino
     134.  00:80CC                      	
     135.  00:80CC  E5                  	PUSH	HL				;guardo el resultado intermedio
     136.  00:80CD                      	
     137.  00:80CD  47                  	LD		 B, A			;preparo la varible del bucle
     138.  00:80CE  11 70 00            	LD		DE, 112			;112 = 16x42 son los bytes de cada matriz-nivel
     139.  00:80D1  21 00 00            	LD		HL, 0
     140.  00:80D4                      .loop_suma_nivel:
     141.  00:80D4  19                  	ADD		HL, DE
     142.  00:80D5  10 FD               	DJNZ	.loop_suma_nivel
     143.  00:80D7                      	
     144.  00:80D7  D1                  	POP		DE				;devuelvo el resultado intermedio en DE que ya no lo necesito
     145.  00:80D8                      	
     146.  00:80D8  19                  	ADD		HL, DE			;sumo el resultado del nivel al resultado intermedio anterior
     147.  00:80D9                      	
     148.  00:80D9                      .actualiza_valiable_habitacion
     149.  00:80D9  7E                  	LD		 A, (HL)
     150.  00:80DA  32 BF A2            	LD		(habitacion_actual), A
     151.  00:80DD  23                  	INC		HL				;el byte de los extras está antes de donde se especifican las puertas
     152.  00:80DE  7E                  	LD		 A, (HL)
     153.  00:80DF  32 C0 A2            	LD		(habitacion_extras), A
     154.  00:80E2                      fin_localiza_info_habitacion:
     155.  00:80E2  C9                  	RET
     156.  00:80E3                      
     157.  00:80E3                      
     158.  00:80E3                      	
     159.  00:80E3                      	
     160.  00:80E3                      	
     161.  00:80E3                      	
     162.  00:80E3                      	
     118   00:80E3                      	
     119   00:80E3                      	include "subr_general.asm"
       1.  00:80E3                      ;;=====================================================
       2.  00:80E3                      ;;DEFINICIÓN DE SUBRUTINAS GENERALES USABLES PARA CUALQUIER PROYECTO
       3.  00:80E3                      ;;=====================================================	
       4.  00:80E3                      
       5.  00:80E3                      ;;=====================================================
       6.  00:80E3                      ;;SUMA_A_BC
       7.  00:80E3                      ;;=====================================================	
       8.  00:80E3                      ; función: 	suma A a BC por si da más de 255
       9.  00:80E3                      ; entrada: 	A, BC
      10.  00:80E3                      ; salida: 	A + BC
      11.  00:80E3                      ; toca:		A, BC
      12.  00:80E3                      suma_A_BC:
      13.  00:80E3  81                  	ADD		 C
      14.  00:80E4  4F                  	LD		 C, A
      15.  00:80E5  88                  	ADC		 B
      16.  00:80E6  91                  	SUB		 C
      17.  00:80E7  47                  	LD		 B, A
      18.  00:80E8                      fin_suma_A_BC:
      19.  00:80E8  C9                  	RET
     120   00:80E9                      	
     121   00:80E9                      	include "subr_pintapantalla.asm"
       1.  00:80E9                      ;;=====================================================
       2.  00:80E9                      ;;DEFINICIÓN DE SUBRUTINAS
       3.  00:80E9                      ;;=====================================================	
       4.  00:80E9                      ;relacionadas con pintado en pantalla (y no sprites)
       5.  00:80E9                      
       6.  00:80E9                      
       7.  00:80E9                      ;;=====================================================
       8.  00:80E9                      ;;COLOR_PANTALLA
       9.  00:80E9                      ;;=====================================================	
      10.  00:80E9                      ; función: 	el equivalente en basic a color 15,1,1
      11.  00:80E9                      ; entrada: 	HL	que apunta a un array de bytes con 3 bytes FORCLR, BAKCLR y BDRCLR
      12.  00:80E9                      ; salida: 	-
      13.  00:80E9                      ; toca: 	todo
      14.  00:80E9                      color_pantalla:
      15.  00:80E9  7E                  	LD		 A, (HL)			;FORCLR 
      16.  00:80EA  32 E9 F3            	LD 		(FORCLR),A
      17.  00:80ED  23                  	INC		HL
      18.  00:80EE                      	
      19.  00:80EE  7E                  	LD		 A, (HL)			;BAKCLR
      20.  00:80EF  32 EA F3            	LD 		(BAKCLR),A
      21.  00:80F2  23                  	INC		HL
      22.  00:80F3                      	
      23.  00:80F3  7E                  	LD		 A, (HL)
      24.  00:80F4  32 EB F3            	LD 		(BDRCLR),A			;BDRCLR
      25.  00:80F7  C3 62 00            	JP		CHGCLR 
      26.  00:80FA                      fin_color_pantalla:
      27.  00:80FA                      
      28.  00:80FA                      
      29.  00:80FA                      ;;=====================================================
      30.  00:80FA                      ;;PREPARAPANTALLA
      31.  00:80FA                      ;;=====================================================	
      32.  00:80FA                      ; función: elimina clic cuando se pulsa tecla, cls, screen 2,2
      33.  00:80FA                      ; entrada: -
      34.  00:80FA                      ; salida: -
      35.  00:80FA                      ; toca: si no son todos los regristros, casi todos
      36.  00:80FA                      sub_preparapantalla:
      37.  00:80FA                      	;toca A y Z
      38.  00:80FA                      elimina_clic;
      39.  00:80FA  AF                  	XOR		 A
      40.  00:80FB  32 DB F3            	LD		(CLIKSW),A
      41.  00:80FE                      fin_elimina_clic:
      42.  00:80FE                      
      43.  00:80FE                      	;toca A
      44.  00:80FE                      limpia_pantalla:
      45.  00:80FE  AF                  	XOR		 A
      46.  00:80FF  CD C3 00            	CALL 	CLS
      47.  00:8102                      fin_limpia_pantalla:
      48.  00:8102                      
      49.  00:8102                      	;toca A y direcciones #F3E9/#F3EA/#F3EB, poner en HL array con 3 valores
      50.  00:8102  21 D1 A5            	LD		HL, color_base
      51.  00:8105  CD E9 80            	CALL	color_pantalla
      52.  00:8108                      	
      53.  00:8108                      	;cambiamos a SCREEN 2,2 del BASIC
      54.  00:8108                      	;toca A
      55.  00:8108                      screen2:
      56.  00:8108  3E 02               	LD		 A, 2
      57.  00:810A  CD 5F 00            	CALL	CHGMOD			;selecciona screen 2
      58.  00:810D                      sprites_16_16:
      59.  00:810D  3A E0 F3            	LD		 A, (RG1SAV)
      60.  00:8110  F6 02               	OR		00000010b		;fuerza sprites de 16x16
      61.  00:8112  32 E0 F3            	LD		(RG1SAV), A		;no lo guardamos en la copia de variables del sistema
      62.  00:8115  47                  	LD		 B, A
      63.  00:8116  0E 01               	LD		 C, 1
      64.  00:8118  C3 47 00            	JP		WRTVDP			;opción alternativa de escribir las tres lineas siguientes
      65.  00:811B                      fin_sub_preparapantalla:
      66.  00:811B                      	
      67.  00:811B                      
      68.  00:811B                      ;;=====================================================
      69.  00:811B                      ;;PINTA_PANTALLA_COMPLETA
      70.  00:811B                      ;;=====================================================	
      71.  00:811B                      ; función: pinta el escenario, las 3 partes
      72.  00:811B                      ; entrada: -
      73.  00:811B                      ; salida: -
      74.  00:811B                      ; toca: si no son todos los regristros, casi todos
      75.  00:811B                      pinta_pantalla_completa:
      76.  00:811B  CD 22 81            	CALL 	pinta_parte_superior_pantalla
      77.  00:811E                      	
      78.  00:811E  CD 40 82            	CALL 	pinta_parte_inferior_pantalla	
      79.  00:8121                      fin_pinta_pantalla_completa:
      80.  00:8121  C9                  	RET
      81.  00:8122                      
      82.  00:8122                      
      83.  00:8122                      ;;=====================================================
      84.  00:8122                      ;;PINTA_PARTE_SUPERIOR_PANTALLA
      85.  00:8122                      ;;=====================================================	
      86.  00:8122                      ; función: pinta el escenario, los dos bancos superiores
      87.  00:8122                      ; entrada: -
      88.  00:8122                      ; salida: -
      89.  00:8122                      ; toca: si no son todos los regristros, casi todos
      90.  00:8122                      pinta_parte_superior_pantalla:
      91.  00:8122  3A EA A5            	LD		 A, (prota_nivel)
      92.  00:8125  CA 53 81            	JP		 Z, .carga_nivel_0
      93.  00:8128  3D                  	DEC		 A
      94.  00:8129  3A EA A5            	LD		 A, (prota_nivel)
      95.  00:812C  CA 6E 81            	JP		 Z, .carga_nivel_1
      96.  00:812F  3D                  	DEC		 A
      97.  00:8130  3A EA A5            	LD		 A, (prota_nivel)
      98.  00:8133  CA 89 81            	JP		 Z, .carga_nivel_2
      99.  00:8136  3D                  	DEC		 A
     100.  00:8137  3A EA A5            	LD		 A, (prota_nivel)
     101.  00:813A  CA A4 81            	JP		 Z, .carga_nivel_3
     102.  00:813D  3D                  	DEC		 A
     103.  00:813E  3A EA A5            	LD		 A, (prota_nivel)
     104.  00:8141  CA BF 81            	JP		 Z, .carga_nivel_4
     105.  00:8144  3D                  	DEC		 A
     106.  00:8145  3A EA A5            	LD		 A, (prota_nivel)
     107.  00:8148  CA DA 81            	JP		 Z, .carga_nivel_5
     108.  00:814B  3D                  	DEC		 A
     109.  00:814C  3A EA A5            	LD		 A, (prota_nivel)
     110.  00:814F  CA F5 81            	JP		 Z, .carga_nivel_6
     111.  00:8152  3D                  	DEC		 A
     112.  00:8153                      	
     113.  00:8153                      .carga_nivel_0:
     114.  00:8153  21 38 A8            	LD		HL, tiles_patrones_nivel0
     115.  00:8156  22 3A 82            	LD		(tiles_patrones), HL
     116.  00:8159  21 ED A9            	LD		HL, tiles_color_nivel0
     117.  00:815C  22 3C 82            	LD		(tiles_colores), HL
     118.  00:815F  21 38 A8            	LD		HL, tiles_patrones_nivel0
     119.  00:8162  22 3A 82            	LD		(tiles_patrones), HL
     120.  00:8165  21 34 AA            	LD		HL, tiles_mapa_nivel0
     121.  00:8168  22 3E 82            	LD		(tiles_mapa), HL
     122.  00:816B  C3 0D 82            	JP		.fin_carga_niveles
     123.  00:816E                      
     124.  00:816E                      .carga_nivel_1:
     125.  00:816E  21 69 AA            	LD		HL, tiles_patrones_nivel1
     126.  00:8171  22 3A 82            	LD		(tiles_patrones), HL
     127.  00:8174  21 1E AC            	LD		HL, tiles_color_nivel1
     128.  00:8177  22 3C 82            	LD		(tiles_colores), HL
     129.  00:817A  21 69 AA            	LD		HL, tiles_patrones_nivel1
     130.  00:817D  22 3A 82            	LD		(tiles_patrones), HL
     131.  00:8180  21 65 AC            	LD		HL, tiles_mapa_nivel1
     132.  00:8183  22 3E 82            	LD		(tiles_mapa), HL
     133.  00:8186  C3 0D 82            	JP		.fin_carga_niveles
     134.  00:8189                      	
     135.  00:8189                      .carga_nivel_2:
     136.  00:8189  21 9A AC            	LD		HL, tiles_patrones_nivel2
     137.  00:818C  22 3A 82            	LD		(tiles_patrones), HL
     138.  00:818F  21 4F AE            	LD		HL, tiles_color_nivel2
     139.  00:8192  22 3C 82            	LD		(tiles_colores), HL
     140.  00:8195  21 9A AC            	LD		HL, tiles_patrones_nivel2
     141.  00:8198  22 3A 82            	LD		(tiles_patrones), HL
     142.  00:819B  21 96 AE            	LD		HL, tiles_mapa_nivel2
     143.  00:819E  22 3E 82            	LD		(tiles_mapa), HL
     144.  00:81A1  C3 0D 82            	JP		.fin_carga_niveles
     145.  00:81A4                      	
     146.  00:81A4                      .carga_nivel_3:
     147.  00:81A4  21 CB AE            	LD		HL, tiles_patrones_nivel3
     148.  00:81A7  22 3A 82            	LD		(tiles_patrones), HL
     149.  00:81AA  21 80 B0            	LD		HL, tiles_color_nivel3
     150.  00:81AD  22 3C 82            	LD		(tiles_colores), HL
     151.  00:81B0  21 CB AE            	LD		HL, tiles_patrones_nivel3
     152.  00:81B3  22 3A 82            	LD		(tiles_patrones), HL
     153.  00:81B6  21 C7 B0            	LD		HL, tiles_mapa_nivel3
     154.  00:81B9  22 3E 82            	LD		(tiles_mapa), HL
     155.  00:81BC  C3 0D 82            	JP		.fin_carga_niveles
     156.  00:81BF                      	
     157.  00:81BF                      .carga_nivel_4:
     158.  00:81BF  21 FC B0            	LD		HL, tiles_patrones_nivel4
     159.  00:81C2  22 3A 82            	LD		(tiles_patrones), HL
     160.  00:81C5  21 B1 B2            	LD		HL, tiles_color_nivel4
     161.  00:81C8  22 3C 82            	LD		(tiles_colores), HL
     162.  00:81CB  21 FC B0            	LD		HL, tiles_patrones_nivel4
     163.  00:81CE  22 3A 82            	LD		(tiles_patrones), HL
     164.  00:81D1  21 F8 B2            	LD		HL, tiles_mapa_nivel4
     165.  00:81D4  22 3E 82            	LD		(tiles_mapa), HL
     166.  00:81D7  C3 0D 82            	JP		.fin_carga_niveles
     167.  00:81DA                      	
     168.  00:81DA                      .carga_nivel_5:
     169.  00:81DA  21 2D B3            	LD		HL, tiles_patrones_nivel5
     170.  00:81DD  22 3A 82            	LD		(tiles_patrones), HL
     171.  00:81E0  21 E2 B4            	LD		HL, tiles_color_nivel5
     172.  00:81E3  22 3C 82            	LD		(tiles_colores), HL
     173.  00:81E6  21 2D B3            	LD		HL, tiles_patrones_nivel5
     174.  00:81E9  22 3A 82            	LD		(tiles_patrones), HL
     175.  00:81EC  21 29 B5            	LD		HL, tiles_mapa_nivel5
     176.  00:81EF  22 3E 82            	LD		(tiles_mapa), HL
     177.  00:81F2  C3 0D 82            	JP		.fin_carga_niveles
     178.  00:81F5                      	
     179.  00:81F5                      .carga_nivel_6:
     180.  00:81F5  21 5E B5            	LD		HL, tiles_patrones_nivel6
     181.  00:81F8  22 3A 82            	LD		(tiles_patrones), HL
     182.  00:81FB  21 13 B7            	LD		HL, tiles_color_nivel6
     183.  00:81FE  22 3C 82            	LD		(tiles_colores), HL
     184.  00:8201  21 5E B5            	LD		HL, tiles_patrones_nivel6
     185.  00:8204  22 3A 82            	LD		(tiles_patrones), HL
     186.  00:8207  21 5A B7            	LD		HL, tiles_mapa_nivel6
     187.  00:820A  22 3E 82            	LD		(tiles_mapa), HL
     188.  00:820D                      ;	JP		.fin_carga niveles			;no necesario
     189.  00:820D                      .fin_carga_niveles:
     190.  00:820D                      
     191.  00:820D                      	;cargando banco 1
     192.  00:820D                      	;cargamos los patrones
     193.  00:820D  2A 3A 82            	LD		HL, (tiles_patrones)
     194.  00:8210  11 00 00            	LD		DE, CHRTBL
     195.  00:8213  CD 5F 98            	CALL	depack_VRAM
     196.  00:8216                      	;cargamos los colores de los patrones
     197.  00:8216  2A 3C 82            	LD		HL, (tiles_colores)
     198.  00:8219  11 00 20            	LD		DE, CLRTBL
     199.  00:821C  CD 5F 98            	CALL	depack_VRAM
     200.  00:821F                      	
     201.  00:821F                      	;cargando banco 2
     202.  00:821F                      	;cargamos los patrones
     203.  00:821F  2A 3A 82            	LD		HL, (tiles_patrones)
     204.  00:8222  11 00 08            	LD		DE, CHRTBL + #0800
     205.  00:8225  CD 5F 98            	CALL	depack_VRAM	
     206.  00:8228                      	;cargamos los colores de los patrones
     207.  00:8228  2A 3C 82            	LD		HL, (tiles_colores)
     208.  00:822B  11 00 28            	LD		DE, CLRTBL + #0800
     209.  00:822E  CD 5F 98            	CALL	depack_VRAM
     210.  00:8231                      	
     211.  00:8231                      	;cargamos mapa de pantalla banco 1 y 2
     212.  00:8231  2A 3E 82            	LD		HL, (tiles_mapa)
     213.  00:8234  11 00 18            	LD		DE, TILMAP
     214.  00:8237  C3 5F 98            	JP		depack_VRAM
     215.  00:823A                      fin_pinta_parte_superior_pantalla:
     216.  00:823A  00 00               tiles_patrones:		DW	0
     217.  00:823C  00 00               tiles_colores:		DW	0
     218.  00:823E  00 00               tiles_mapa:			DW	0
     219.  00:8240                      
     220.  00:8240                      
     221.  00:8240                      ;;=====================================================
     222.  00:8240                      ;;PINTA_PARTE_INFERIOR_PANTALLA
     223.  00:8240                      ;;=====================================================	
     224.  00:8240                      ; función: pinta la parte inferior del escenario que es común
     225.  00:8240                      ; entrada: -
     226.  00:8240                      ; salida: -
     227.  00:8240                      ; toca: si no son todos los regristros, casi todos
     228.  00:8240                      pinta_parte_inferior_pantalla:
     229.  00:8240                      	;cangando banco 3
     230.  00:8240                      	;cargamos los patrones
     231.  00:8240  21 8F B7            	LD		HL,tiles_patrones_marcador
     232.  00:8243  11 00 10            	LD		DE,CHRTBL + #1000
     233.  00:8246  CD 5F 98            	CALL	depack_VRAM	
     234.  00:8249                      	;cargamos mapa de pantalla
     235.  00:8249  21 10 B9            	LD		HL,tiles_mapa_marcador
     236.  00:824C  11 00 1A            	LD		DE,TILMAP + #0200
     237.  00:824F  CD 5F 98            	CALL	depack_VRAM
     238.  00:8252                      	;cargamos los colores de los patrones
     239.  00:8252  21 DB B8            	LD		HL,tiles_color_marcador
     240.  00:8255  11 00 30            	LD		DE,CLRTBL + #1000
     241.  00:8258  C3 5F 98            	JP		depack_VRAM
     242.  00:825B                      fin_pinta_parte_inferior_pantalla:
     243.  00:825B                      
     244.  00:825B                      
     245.  00:825B                      
     246.  00:825B                      ;;=====================================================
     247.  00:825B                      ;;PINTA_VIDAS
     248.  00:825B                      ;;=====================================================	
     249.  00:825B                      ; función: 	actualiza el mapa de tiles para que en el próximo refresco se pinten y actualiza_vidas
     250.  00:825B                      ; entrada: 	array_aux_vidas
     251.  00:825B                      ; salida: 	actualiza_vidas_sn
     252.  00:825B                      ; toca:		todo
     253.  00:825B                      pinta_vidas:
     254.  00:825B  CD 76 80            	CALL	actualiza_marcador_vidas
     255.  00:825E                      	
     256.  00:825E  21 F0 A5            	LD		HL, array_aux_vidas
     257.  00:8261  11 48 1A            	LD		DE, TILMAP + POSVIDAS 	;inicio posición en el mapa de tiles de las vidas
     258.  00:8264  01 08 00            	LD		BC, NMAXVIDREL			;hay 8 posiciones para vidas/reliquias o espacios en negro si no tiene 8 vidas/reliquias
     259.  00:8267  C3 5C 00            	JP		LDIRVM
     260.  00:826A                      fin_pinta_vidas:
     261.  00:826A                      	
     262.  00:826A                      	
     263.  00:826A                      
     264.  00:826A                      ;;=====================================================
     265.  00:826A                      ;;PINTA_RELIQUIAS
     266.  00:826A                      ;;=====================================================	
     267.  00:826A                      ; función: 	actualiza el mapa de tiles para que en el próximo refresco se pinten y actualiza_reliquias
     268.  00:826A                      ; entrada: 	array_aux_reliquias
     269.  00:826A                      ; salida: 	-
     270.  00:826A                      ; toca:		todo
     271.  00:826A                      pinta_reliquias:
     272.  00:826A  CD 8F 80            	CALL	actualiza_buffer_reliquias
     273.  00:826D                      	
     274.  00:826D  21 F8 A5            	LD		HL, array_aux_reliquias
     275.  00:8270  11 C8 1A            	LD		DE, TILMAP + POSRELIQ 	;inicio posición en el mapa de tiles de las vidas
     276.  00:8273  01 08 00            	LD		BC, NMAXVIDREL			;hay 8 posiciones para vidas/reliquias o espacios en negro si no tiene 8 vidas/reliquias
     277.  00:8276  C3 5C 00            	JP		LDIRVM
     278.  00:8279                      fin_pinta_reliquias:
     279.  00:8279                      	
     280.  00:8279                      
     281.  00:8279                      
     282.  00:8279                      	
     283.  00:8279                      ;;=====================================================
     284.  00:8279                      ;;PINTA_NIVEL
     285.  00:8279                      ;;=====================================================	
     286.  00:8279                      ; función: 	actualiza el nivel en la parte de puntuación
     287.  00:8279                      ; entrada: 	prota_nivel
     288.  00:8279                      ; salida: 	-
     289.  00:8279                      ; toca:		HL,DE,BC
     290.  00:8279                      pinta_nivel:	
     291.  00:8279                      	;forma más avanzada sin llamada a la bios
     292.  00:8279  01 B4 1A            	LD		BC,TILMAP + POSNIVEL ;posición en el mapa de tiles del tile de nivel
     293.  00:827C  3A EA A5            	LD		 A, (prota_nivel)	;seleccionando la pos del banco de tiles a poner en el mapa
     294.  00:827F  C6 30               	ADD		'0'	
     295.  00:8281  57                  	LD		 D, A
     296.  00:8282                      	
     297.  00:8282  C3 85 82            	JP		pinta_tile_suelto
     298.  00:8285                      fin_pinta_nivel:
     299.  00:8285                      
     300.  00:8285                      
     301.  00:8285                      
     302.  00:8285                      ;;=====================================================
     303.  00:8285                      ;;PINTA_TILE_SUELTO
     304.  00:8285                      ;;=====================================================	
     305.  00:8285                      ; función: 	pinta al tile que digamos en D, en la posición BC
     306.  00:8285                      ; entrada: 	BC (posición a pintar en el mapa),D (qué se va a pintar el esa posición)
     307.  00:8285                      ; salida: 	-
     308.  00:8285                      ; toca:		-
     309.  00:8285                      pinta_tile_suelto:
     310.  00:8285  DB 99               	IN		 A,(REGEST)		;leer registro de estado (recomendado)
     311.  00:8287  79                  	LD		 A,C			;primero byte bajo	
     312.  00:8288  D3 99               	OUT		(REGEST),A
     313.  00:828A  78                  	LD		 A,B			;después byte alto  ********************** preguntar a Fernando cómo que byte bajo es B
     314.  00:828B  F6 40               	OR		1000000b		;+64
     315.  00:828D  D3 99               	OUT		(REGEST),A
     316.  00:828F                      	
     317.  00:828F  7A                  	LD		A,D
     318.  00:8290  D3 98               	OUT		(REGESCVDP),A	;escribe A en VRAM en la posición indicada por los dos OUT anteriores
     319.  00:8292                      fin_pinta_tile_suelto:
     320.  00:8292  C9                  	RET
     321.  00:8293                      
     322.  00:8293                      
     323.  00:8293                      
     324.  00:8293                      
     325.  00:8293                      
     326.  00:8293                      ;;=====================================================
     327.  00:8293                      ;;MIRA_PINTA ENERGIA
     328.  00:8293                      ;;=====================================================	
     329.  00:8293                      ; función: 	actualiza el nivel de energia en la parte de puntuación
     330.  00:8293                      ; nota:		el cuadrado más bajo de ejergía siempre estará pintado... se obviará
     331.  00:8293                      ; entrada: 	prota.energia, array_aux_energia
     332.  00:8293                      ; salida: 	-
     333.  00:8293                      ; toca:		ninguno porque usa EXX
     334.  00:8293                      
     335.  00:8293                      ; nota importante... lo mismo interesa hacer esto con un array para comparar y un bucle
     336.  00:8293                      
     337.  00:8293                      mira_pinta_energia:
     338.  00:8293  D9                  	EXX							;por si acaso guardo el contenido de HL (si veo que no es necesario guardarlo lo quito) uso esto en vez de push por el nº ciclos
     339.  00:8294                      	
     340.  00:8294  3A EF A5            	LD		 A,(prota_energia) 	;para las comparaciones A variable (actual) y B fijo (limites)
     341.  00:8297                      
     342.  00:8297  0E 00               	LD		 C,TILENEGRO		;para agilizar asignaciones en vez de un valor cte uso otro registro
     343.  00:8299                      pinta_ener:
     344.  00:8299                      pinta_ener_tile_8:
     345.  00:8299  21 07 A6            	LD		HL,ultimo_pos_array_aux_energia	;coloco puntero en array e iré decrementando
     346.  00:829C  06 D9               	LD		 B,TILEENERG8
     347.  00:829E  B8                  	CP		 B
     348.  00:829F  38 04               	JR		C,pinta_ener_tile_8_negro
     349.  00:82A1  36 0E               	LD		(HL),TILEMAPVERD
     350.  00:82A3  18 01               	JR		pinta_ener_tile_7
     351.  00:82A5                      pinta_ener_tile_8_negro:
     352.  00:82A5  71                  	LD		(HL),C
     353.  00:82A6                      
     354.  00:82A6                      pinta_ener_tile_7:
     355.  00:82A6  2B                  	DEC		HL
     356.  00:82A7  06 BA               	LD		 B,TILEENERG7
     357.  00:82A9  B8                  	CP		 B
     358.  00:82AA  38 04               	JR		C,pinta_ener_tile_7_negro
     359.  00:82AC  36 0E               	LD		(HL),TILEMAPVERD
     360.  00:82AE  18 01               	JR		pinta_ener_tile_6
     361.  00:82B0                      pinta_ener_tile_7_negro:
     362.  00:82B0  71                  	LD		(HL),C
     363.  00:82B1                      
     364.  00:82B1                      pinta_ener_tile_6:
     365.  00:82B1  2B                  	DEC		HL
     366.  00:82B2  06 9B               	LD		 B,TILEENERG6
     367.  00:82B4  B8                  	CP		 B
     368.  00:82B5  38 04               	JR		C,pinta_ener_tile_6_negro
     369.  00:82B7  36 0E               	LD		(HL),14
     370.  00:82B9  18 01               	JR		pinta_ener_tile_5
     371.  00:82BB                      pinta_ener_tile_6_negro:
     372.  00:82BB  71                  	LD		(HL),C
     373.  00:82BC                      
     374.  00:82BC                      pinta_ener_tile_5:
     375.  00:82BC  2B                  	DEC		HL
     376.  00:82BD  06 7C               	LD		 B,TILEENERG5
     377.  00:82BF  B8                  	CP		 B
     378.  00:82C0  38 04               	JR		C,pinta_ener_tile_5_negro
     379.  00:82C2  36 0E               	LD		(HL),TILEMAPVERD
     380.  00:82C4  18 01               	JR		pinta_ener_tile_4
     381.  00:82C6                      pinta_ener_tile_5_negro:
     382.  00:82C6  71                  	LD		(HL),C
     383.  00:82C7                      
     384.  00:82C7                      pinta_ener_tile_4:
     385.  00:82C7  2B                  	DEC		HL
     386.  00:82C8  06 5D               	LD		 B,TILEENERG4
     387.  00:82CA  B8                  	CP		 B
     388.  00:82CB  38 04               	JR		C,pinta_ener_tile_4_negro
     389.  00:82CD  36 0F               	LD		(HL),TILEMAPAMAR
     390.  00:82CF  18 01               	JR		pinta_ener_tile_3
     391.  00:82D1                      pinta_ener_tile_4_negro:
     392.  00:82D1  71                  	LD		(HL),C
     393.  00:82D2                      	
     394.  00:82D2                      pinta_ener_tile_3:
     395.  00:82D2  2B                  	DEC		HL
     396.  00:82D3  06 3E               	LD		 B,TILEENERG3
     397.  00:82D5  B8                  	CP		 B
     398.  00:82D6  38 04               	JR		C,pinta_ener_tile_3_negro
     399.  00:82D8  36 0F               	LD		(HL),TILEMAPAMAR
     400.  00:82DA  18 01               	JR		pinta_ener_tile_2
     401.  00:82DC                      pinta_ener_tile_3_negro:
     402.  00:82DC  71                  	LD		(HL),C
     403.  00:82DD                      
     404.  00:82DD                      pinta_ener_tile_2:
     405.  00:82DD  2B                  	DEC		HL
     406.  00:82DE  06 1F               	LD		 B,TILEENERG2
     407.  00:82E0  B8                  	CP		 B
     408.  00:82E1  38 04               	JR		C,pinta_ener_tile_2_negro
     409.  00:82E3  36 10               	LD		(HL),TILEMAPROJO
     410.  00:82E5  18 01               	JR		fin_mira_pinta_energia		;siempre estará pintado el cuadro mínimo
     411.  00:82E7                      pinta_ener_tile_2_negro:
     412.  00:82E7  71                  	LD		(HL),C
     413.  00:82E8                      
     414.  00:82E8                      fin_mira_pinta_energia:
     415.  00:82E8  D9                  	EXX
     416.  00:82E9  C9                  	RET
     417.  00:82EA                      
     418.  00:82EA                      
     419.  00:82EA                      ;;=====================================================
     420.  00:82EA                      ;;PINTA_ENERGIA
     421.  00:82EA                      ;;=====================================================	
     422.  00:82EA                      ; función: 	actualiza el mapa de tiles para que en el próximo refresco se pinte la barra de energia actual
     423.  00:82EA                      ; entrada: 	array_aux_energia
     424.  00:82EA                      ; toca:		todo
     425.  00:82EA                      pinta_energia:
     426.  00:82EA  CD 93 82            	CALL	mira_pinta_energia
     427.  00:82ED                      	
     428.  00:82ED  21 00 A6            	LD		HL, array_aux_energia
     429.  00:82F0  11 88 1A            	LD		DE, TILMAP + POSENERG 	;inicio posición en el mapa de tiles de las vidas
     430.  00:82F3  01 08 00            	LD		BC, NMAXVIDREL			;hay 8 posiciones para vidas/reliquias o espacios en negro si no tiene 8 vidas/reliquias
     431.  00:82F6  C3 5C 00            	JP		LDIRVM
     432.  00:82F9                      fin_pinta_energia:
     433.  00:82F9                      
     434.  00:82F9                      
     435.  00:82F9                      
     436.  00:82F9                      ;;=====================================================
     437.  00:82F9                      ;;BORRA_MAPA
     438.  00:82F9                      ;;=====================================================	
     439.  00:82F9                      ; función: 	pone todas las habitaciones del mapa a negro (los tiles del mapa los rellena con un array a 0 - caracter en negro)
     440.  00:82F9                      ; entrada: 	array_aux_mapa_limpiar
     441.  00:82F9                      ; salida: 	-
     442.  00:82F9                      ; toca:		AF
     443.  00:82F9                      borra_mapa:
     444.  00:82F9  D9                  	EXX
     445.  00:82FA                      	
     446.  00:82FA  21 08 A6            	LD		HL,array_aux_mapa_limpiar
     447.  00:82FD  11 F8 1A            	LD		DE,TILMAP + POSMAPLIN1 	;inicio posición en el mapa de tiles de la primera fila del mapa
     448.  00:8300  01 07 00            	LD		BC,NHABNIVEL			;cada nivel son 7 filas con 7 habitaciones "posibles"
     449.  00:8303  CD 5C 00            	CALL	LDIRVM
     450.  00:8306                      	
     451.  00:8306  21 08 A6            	LD		HL,array_aux_mapa_limpiar
     452.  00:8309  11 D8 1A            	LD		DE,TILMAP + POSMAPLIN2
     453.  00:830C  01 07 00            	LD		BC,NHABNIVEL
     454.  00:830F  CD 5C 00            	CALL	LDIRVM
     455.  00:8312                      
     456.  00:8312  21 08 A6            	LD		HL,array_aux_mapa_limpiar
     457.  00:8315  11 B8 1A            	LD		DE,TILMAP + POSMAPLIN3
     458.  00:8318  01 07 00            	LD		BC,NHABNIVEL
     459.  00:831B  CD 5C 00            	CALL	LDIRVM
     460.  00:831E                      
     461.  00:831E  21 08 A6            	LD		HL,array_aux_mapa_limpiar	
     462.  00:8321  11 98 1A            	LD		DE,TILMAP + POSMAPLIN4
     463.  00:8324  01 07 00            	LD		BC,NHABNIVEL
     464.  00:8327  CD 5C 00            	CALL	LDIRVM
     465.  00:832A                      
     466.  00:832A  21 08 A6            	LD		HL,array_aux_mapa_limpiar	
     467.  00:832D  11 78 1A            	LD		DE,TILMAP + POSMAPLIN5
     468.  00:8330  01 07 00            	LD		BC,NHABNIVEL
     469.  00:8333  CD 5C 00            	CALL	LDIRVM
     470.  00:8336                      
     471.  00:8336  21 08 A6            	LD		HL,array_aux_mapa_limpiar	
     472.  00:8339  11 58 1A            	LD		DE,TILMAP + POSMAPLIN6
     473.  00:833C  01 07 00            	LD		BC,NHABNIVEL
     474.  00:833F  CD 5C 00            	CALL	LDIRVM
     475.  00:8342                      
     476.  00:8342  21 08 A6            	LD		HL,array_aux_mapa_limpiar	
     477.  00:8345  11 38 1A            	LD		DE,TILMAP + POSMAPLIN7
     478.  00:8348  01 07 00            	LD		BC,NHABNIVEL
     479.  00:834B  CD 5C 00            	CALL	LDIRVM
     480.  00:834E                      	
     481.  00:834E  D9                  	EXX
     482.  00:834F                      fin_borra_mapa:
     483.  00:834F  C9                  	RET
     484.  00:8350                      
     485.  00:8350                      
     486.  00:8350                      
     487.  00:8350                      
     488.  00:8350                      
     489.  00:8350                      ;;=====================================================
     490.  00:8350                      ;;PINTA_PUERTAS
     491.  00:8350                      ;;=====================================================	
     492.  00:8350                      ; función: 	examina A y mira si tiene que pintar puertas de los lados, arriba o abrajo o las escaleras (o no)
     493.  00:8350                      ; entrada: 	habitacion_actual 1 escalera 1 puerta arriba 1 pu der 1 pu aba 1 pu izq (si es 0 pinta pared)
     494.  00:8350                      ; salida: 	-
     495.  00:8350                      ; toca:		todo
     496.  00:8350                      pinta_puertas:
     497.  00:8350  CD 22 81            	CALL	pinta_parte_superior_pantalla	;pinta pasillo y paredes
     498.  00:8353                      
     499.  00:8353  CD A8 80            	CALL	localiza_info_habitacion	;busca qué puertas debe pintar y lo mete en habitación_actual
     500.  00:8356                      	
     501.  00:8356  3A BF A2            	LD		 A, (habitacion_actual)		;se mete en A porque la función pide A y para no buscar el valor 4 veces
     502.  00:8359                      
     503.  00:8359                      ;	BIT		 4, A
     504.  00:8359                      ;	CALL	nz, pinta_escalera
     505.  00:8359                      
     506.  00:8359  CB 5F               	BIT		 3, A
     507.  00:835B  C4 89 83            	CALL	nz, pinta_puerta_arr
     508.  00:835E                      
     509.  00:835E  CB 57               	BIT		 2, A
     510.  00:8360  C4 A4 83            	CALL	nz, pinta_puerta_der
     511.  00:8363                      
     512.  00:8363  CB 4F               	BIT		 1, A
     513.  00:8365  C4 6E 83            	CALL	nz, pinta_puerta_aba
     514.  00:8368                      	
     515.  00:8368  CB 47               	BIT		 0, A
     516.  00:836A  C4 BF 83            	CALL	nz, pinta_puerta_izq
     517.  00:836D                      fin_pinta_puertas:
     518.  00:836D  C9                  	RET
     519.  00:836E                      
     520.  00:836E                      
     521.  00:836E                      
     522.  00:836E                      
     523.  00:836E                      ;;=====================================================
     524.  00:836E                      ;;PINTA_PUERTA_ABA
     525.  00:836E                      ;;=====================================================	
     526.  00:836E                      ; función: 	pinta la puerta de abajo
     527.  00:836E                      ; entrada: 	array_puerta_abajo, wordaux2, wordaux1
     528.  00:836E                      ; salida: 	-
     529.  00:836E                      ; toca:		HL,BC, DE
     530.  00:836E                      pinta_puerta_aba:
     531.  00:836E  F5                  	PUSH	AF
     532.  00:836F                      	
     533.  00:836F  21 39 A6            	LD		HL, array_puerta_abajo			;guardo puntero al array a pintar (como pasar por referencia)
     534.  00:8372  22 A8 84            	LD		(wordaux2), HL					;en la variable wordaux2
     535.  00:8375  21 EE 19            	LD		HL, TILMAP + POSPUERABAJ		;calcula posición en tilemap
     536.  00:8378  22 A6 84            	LD		(wordaux1), HL					;guarda valor pos tilemap en wordaux1
     537.  00:837B                      
     538.  00:837B  3E 01               	LD		 A, 1							;nº de filas
     539.  00:837D  32 AA 84            	LD		(byteaux1), A
     540.  00:8380  3E 04               	LD		 A, 4							;nº de columnas
     541.  00:8382  32 AB 84            	LD		(byteaux2), A
     542.  00:8385                      	
     543.  00:8385  F1                  	POP		AF
     544.  00:8386                      	
     545.  00:8386  C3 66 84            	JP		pinta_array
     546.  00:8389                      fin_pinta_puerta_aba:
     547.  00:8389                      
     548.  00:8389                      ;;=====================================================
     549.  00:8389                      ;;PINTA_PUERTA_ARR
     550.  00:8389                      ;;=====================================================	
     551.  00:8389                      ; función: 	pinta la puerta de arriba
     552.  00:8389                      ; entrada: 	array_puerta_arriba, wordaux2, wordaux1
     553.  00:8389                      ; salida: 	-
     554.  00:8389                      ; toca:		HL,BC, DE
     555.  00:8389                      pinta_puerta_arr:
     556.  00:8389  F5                  	PUSH	AF
     557.  00:838A                      	
     558.  00:838A  21 10 A6            	LD		HL, array_puerta_arriba			;guardo puntero al array a pintar (como pasar por referencia)
     559.  00:838D  22 A8 84            	LD		(wordaux2), HL					;en la variable wordaux2
     560.  00:8390  21 8E 18            	LD		HL, TILMAP + POSPUERARRI		;calcula posición en tilemap
     561.  00:8393  22 A6 84            	LD		(wordaux1), HL					;guarda valor pos tilemap en wordaux1
     562.  00:8396  3E 05               	LD		 A, 5							;nº de filas
     563.  00:8398  32 AA 84            	LD		(byteaux1), A
     564.  00:839B  3E 04               	LD		 A, 4							;nº de columnas
     565.  00:839D  32 AB 84            	LD		(byteaux2), A
     566.  00:83A0                      	
     567.  00:83A0  F1                  	POP		AF
     568.  00:83A1                      	
     569.  00:83A1  C3 66 84            	JP		pinta_array
     570.  00:83A4                      fin_pinta_puerta_arr:
     571.  00:83A4                      
     572.  00:83A4                      
     573.  00:83A4                      ;;=====================================================
     574.  00:83A4                      ;;PINTA_PUERTA_DER
     575.  00:83A4                      ;;=====================================================	
     576.  00:83A4                      ; función: 	pinta la puerta de la derecha
     577.  00:83A4                      ; entrada: 	array_puerta_derecha, wordaux2, wordaux1
     578.  00:83A4                      ; salida: 	-
     579.  00:83A4                      ; toca:		HL,BC, DE
     580.  00:83A4                      pinta_puerta_der:
     581.  00:83A4  F5                  	PUSH	AF
     582.  00:83A5  21 24 A6            	LD		HL, array_puerta_derecha		;guardo puntero al array a pintar (como pasar por referencia)
     583.  00:83A8  22 A8 84            	LD		(wordaux2), HL					;en la variable wordaux2
     584.  00:83AB  21 FC 18            	LD		HL, TILMAP + POSPUERDERE		;calcula posición en tilemap
     585.  00:83AE  22 A6 84            	LD		(wordaux1), HL					;guarda valor pos tilemap en wordaux1
     586.  00:83B1                      
     587.  00:83B1  3E 07               	LD		 A, 7							;nº de filas
     588.  00:83B3  32 AA 84            	LD		(byteaux1), A
     589.  00:83B6  3E 03               	LD		 A, 3							;nº de columnas
     590.  00:83B8  32 AB 84            	LD		(byteaux2), A
     591.  00:83BB                      	
     592.  00:83BB  F1                  	POP		AF
     593.  00:83BC                      	
     594.  00:83BC  C3 66 84            	JP		pinta_array
     595.  00:83BF                      fin_pinta_puerta_der:
     596.  00:83BF                      	
     597.  00:83BF                      ;;=====================================================
     598.  00:83BF                      ;;PINTA_PUERTA_IZQ
     599.  00:83BF                      ;;=====================================================	
     600.  00:83BF                      ; función: 	pinta la puerta de la izquierda
     601.  00:83BF                      ; entrada: 	array_puerta_izquierda, wordaux2, wordaux1
     602.  00:83BF                      ; salida: 	-
     603.  00:83BF                      ; toca:		HL,BC, DE
     604.  00:83BF                      pinta_puerta_izq:
     605.  00:83BF  F5                  	PUSH	AF
     606.  00:83C0                      	
     607.  00:83C0  21 3D A6            	LD		HL, array_puerta_izquierda		;guardo puntero al array a pintar (como pasar por referencia)
     608.  00:83C3  22 A8 84            	LD		(wordaux2), HL					;en la variable wordaux2
     609.  00:83C6  21 E1 18            	LD		HL, TILMAP + POSPUERIZQU		;calcula posición en tilemap
     610.  00:83C9  22 A6 84            	LD		(wordaux1), HL					;guarda valor pos tilemap en wordaux1
     611.  00:83CC                      
     612.  00:83CC  3E 07               	LD		 A, 7							;nº de filas
     613.  00:83CE  32 AA 84            	LD		(byteaux1), A
     614.  00:83D1  3E 03               	LD		 A, 3							;nº de columnas
     615.  00:83D3  32 AB 84            	LD		(byteaux2), A
     616.  00:83D6                      	
     617.  00:83D6  F1                  	POP		AF
     618.  00:83D7                      	
     619.  00:83D7  C3 66 84            	JP		pinta_array
     620.  00:83DA                      fin_pinta_puerta_izq:
     621.  00:83DA                      
     622.  00:83DA                      
     623.  00:83DA                      ;;=====================================================
     624.  00:83DA                      ;;POSICIONA_EN_MAPA
     625.  00:83DA                      ;;=====================================================	
     626.  00:83DA                      ; función: 	en el mapa de marcadores de la derecha/abajo marca un cuadro en gris o con un muñeco
     627.  00:83DA                      ;			según el valor de prota.posición pinta entrá un muñeco y por donde vaya pasando el prota
     628.  00:83DA                      ;			quedará en gris
     629.  00:83DA                      ; entrada: 	elemento_pintar_mapa, prota_pos_mapy, prota_pos_mapx
     630.  00:83DA                      ; salida: 	-
     631.  00:83DA                      ; toca:		todos
     632.  00:83DA                      posiciona_en_mapa:
     633.  00:83DA                      	;#0238 es la posición en mapa de tiles de la esquina superior izquierda del mapa (569 en decimal)
     634.  00:83DA  21 38 1A            	LD		HL, TILMAP + POSMAPA;pos inicial
     635.  00:83DD                      	
     636.  00:83DD                      	;ahora se le calcula la fila a pintar ya que va de abajo a arriba y no como en el mapa + columna
     637.  00:83DD                      .sumar_fila:
     638.  00:83DD  3A EE A5            	LD		 A, (prota_pos_mapy)
     639.  00:83E0  FE 01               	CP		 1
     640.  00:83E2  28 2A               	JR		 Z, .fila_1
     641.  00:83E4  3A EE A5            	LD		 A, (prota_pos_mapy)
     642.  00:83E7  FE 02               	CP		 2
     643.  00:83E9  28 2A               	JR		 Z, .fila_2
     644.  00:83EB  3A EE A5            	LD		 A, (prota_pos_mapy)
     645.  00:83EE  FE 03               	CP		 3
     646.  00:83F0  28 2A               	JR		 Z, .fila_3
     647.  00:83F2  3A EE A5            	LD		 A, (prota_pos_mapy)
     648.  00:83F5  FE 04               	CP		 4
     649.  00:83F7  28 2A               	JR		 Z, .fila_4
     650.  00:83F9  3A EE A5            	LD		 A, (prota_pos_mapy)
     651.  00:83FC  FE 05               	CP		 5
     652.  00:83FE  28 2A               	JR		 Z, .fila_5
     653.  00:8400  3A EE A5            	LD		 A, (prota_pos_mapy)
     654.  00:8403  FE 06               	CP		 6
     655.  00:8405  28 2A               	JR		 Z, .sumar_columna
     656.  00:8407                      	;no consulto la 0 porque si no es ninguna de las anteriores es 0 y por tanto sería un jr fila_0
     657.  00:8407                      	
     658.  00:8407                      .fila_0:
     659.  00:8407  11 C0 00            	LD		DE, 192
     660.  00:840A  19                  	ADD		HL, DE			;nota: se que repito el ADD pero la otra opción es inicializar DE y ya tarda mucho la funicón (es por velicidad)
     661.  00:840B  C3 31 84            	JP		.sumar_columna
     662.  00:840E                      .fila_1:
     663.  00:840E  11 A0 00            	LD		DE, 160
     664.  00:8411  19                  	ADD		HL, DE
     665.  00:8412  C3 31 84            	JP		.sumar_columna
     666.  00:8415                      .fila_2:
     667.  00:8415  11 80 00            	LD		DE, 128
     668.  00:8418  19                  	ADD		HL, DE
     669.  00:8419  C3 31 84            	JP		.sumar_columna
     670.  00:841C                      .fila_3:
     671.  00:841C  11 60 00            	LD		DE, 96
     672.  00:841F  19                  	ADD		HL, DE
     673.  00:8420  C3 31 84            	JP		.sumar_columna
     674.  00:8423                      .fila_4:
     675.  00:8423  11 40 00            	LD		DE, 64
     676.  00:8426  19                  	ADD		HL, DE
     677.  00:8427  C3 31 84            	JP		.sumar_columna
     678.  00:842A                      .fila_5:
     679.  00:842A  11 20 00            	LD		DE, 32
     680.  00:842D  19                  	ADD		HL, DE
     681.  00:842E  C3 31 84            	JP		.sumar_columna
     682.  00:8431                      .fila_6:
     683.  00:8431                      	;pongo fila_6 por poner ya que si es la fila 6 equiv. a primera fila del mapa y por tanto no suma fila
     684.  00:8431                      	
     685.  00:8431                      	
     686.  00:8431                      .sumar_columna:
     687.  00:8431  3A ED A5            	LD 		 A, (prota_pos_mapx) ;POS X
     688.  00:8434  16 00               	LD		 D, 0
     689.  00:8436  5F                  	LD		 E, A
     690.  00:8437  19                  	ADD		HL, DE
     691.  00:8438                      	
     692.  00:8438                      	;resultado en BC para usar en la función pinta_tile_suelto
     693.  00:8438  44                  	LD		 B, H
     694.  00:8439  4D                  	LD		 C, L
     695.  00:843A                      	
     696.  00:843A                      	;terminado de fijar la coordenada recuperamos a para ver el tipo
     697.  00:843A  3A 0F A6            	LD		 A, (elemento_pintar_mapa)
     698.  00:843D  FE 09               	CP		 TILEGRISM
     699.  00:843F  CA 47 84            	JP		 Z, pinta_pos_mapa_vacio
     700.  00:8442  16 13               	LD		 D, TILEPROTAM
     701.  00:8444  C3 49 84            	JP		fin_pinta_pos_mapa
     702.  00:8447                      pinta_pos_mapa_vacio:
     703.  00:8447  16 09               	LD		 D, TILEGRISM	
     704.  00:8449                      
     705.  00:8449                      fin_pinta_pos_mapa:
     706.  00:8449  C3 85 82            	JP		pinta_tile_suelto
     707.  00:844C                      fin_posiciona_en_mapa:
     708.  00:844C                      
     709.  00:844C                      
     710.  00:844C                      
     711.  00:844C                      
     712.  00:844C                      ;;=====================================================
     713.  00:844C                      ;;EFECTO_IMAGEN_TIRA_RELIQUIA
     714.  00:844C                      ;;=====================================================	
     715.  00:844C                      ; función: 	hace que el fondo de la pantalla parpadee N veces
     716.  00:844C                      ; entrada: 	actualiza_reliquias_sn
     717.  00:844C                      ; salida: 	-
     718.  00:844C                      ; toca: 	todo
     719.  00:844C                      efecto_imagen_tira_reliquia:
     720.  00:844C  3E 14               	LD		 A, 20;RETARDOREL
     721.  00:844E  47                  	LD		 B, A
     722.  00:844F                      
     723.  00:844F                      .parpadea_fondo:
     724.  00:844F  C5                  	PUSH	BC
     725.  00:8450  21 D4 A5            	LD		HL, color_bomba1
     726.  00:8453  CD E9 80            	CALL	color_pantalla
     727.  00:8456                      	
     728.  00:8456                      	;~ PUSH	BC
     729.  00:8456                      	;~ LD		 A, 255
     730.  00:8456                      	;~ LD		 B, A
     731.  00:8456                      ;~ .bucle_de_espera:
     732.  00:8456                      	;~ NOP
     733.  00:8456                      	;~ DJNZ	 .bucle_de_espera
     734.  00:8456                      	;~ POP		BC
     735.  00:8456  76                  	HALT
     736.  00:8457                      
     737.  00:8457                      	
     738.  00:8457  21 D7 A5            	LD		HL, color_bomba2
     739.  00:845A  CD E9 80            	CALL	color_pantalla
     740.  00:845D  C1                  	POP		BC
     741.  00:845E  10 EF               	DJNZ	.parpadea_fondo
     742.  00:8460                      	
     743.  00:8460  21 D1 A5            	LD		HL, color_base
     744.  00:8463  C3 E9 80            	JP		color_pantalla
     745.  00:8466                      fin_efecto_imagen_tira_reliquia:
     746.  00:8466                      
     747.  00:8466                      
     748.  00:8466                      
     749.  00:8466                      
     750.  00:8466                      ;=====================================================
     751.  00:8466                      ;;PINTA_ARRAY
     752.  00:8466                      ;;=====================================================	
     753.  00:8466                      ;;funcion:  (pinta el mismo tile) se le pasa un array con posiciones de tiles y coordenadas x e y y los pinta en screen 2
     754.  00:8466                      ;;entrada:	wordaux1 (pos inicio sc2 donde pintar) y wordaux2 (puntero al array a pintar), BC (posición en tilemap) , D filas y E columnas
     755.  00:8466                      ;;salida:	-
     756.  00:8466                      ;;importante: necesita de una variable wordaux1 tipo WD (wordaux1: 	DW	0)
     757.  00:8466                      ;; ejemplo llamada:
     758.  00:8466                      	;~ LD		HL,array_tiles					;guardo puntero al array a pintar (como psar por referencia)
     759.  00:8466                      	;~ LD		(wordaux2),HL					;en la variable wordaux2
     760.  00:8466                      	;~ LD		HL,SC2MAP + 256 + 32			;calcula posición en tilemap
     761.  00:8466                      	;~ LD		(wordaux1),HL					;guarda valor pos tilemap en wordaux1
     762.  00:8466                      	;~ LD		B,H								;coloca posición tilemap BC
     763.  00:8466                      	;~ LD		C,L
     764.  00:8466                      	;~ LD		D,2								;nº de filas ahora byteaux1
     765.  00:8466                      	;~ LD		E,3								;nº de columnas ahora byteaux2
     766.  00:8466                      	;~ CALL	pinta_array
     767.  00:8466                      
     768.  00:8466                      pinta_array:
     769.  00:8466  08                  	EX		AF, AF'
     770.  00:8467                      	
     771.  00:8467  3A AA 84            	LD		 A, (byteaux1)
     772.  00:846A  57                  	LD		 D, A
     773.  00:846B  3A AB 84            	LD		 A, (byteaux2)
     774.  00:846E  5F                  	LD		 E, A
     775.  00:846F                      
     776.  00:846F                      	
     777.  00:846F  2A A6 84            	LD		HL, (wordaux1)
     778.  00:8472  44                  	LD		 B, H							;coloca posición tilemap BC
     779.  00:8473  4D                  	LD		 C, L
     780.  00:8474                      	
     781.  00:8474                      	;contamos con que la posición "global" en el tilemap está ya en BC
     782.  00:8474                      	;y el puntero al array a pintar en wordaux2 y la posición en tilemap sc2 en wordaux1
     783.  00:8474                      	;inicializa
     784.  00:8474  DB 99               	IN		 A,(REGEST)		;leer registro de estado (recomendado)
     785.  00:8476                      	
     786.  00:8476                      	;coloca puntero para pintar tile según BC
     787.  00:8476  79                  	LD		 A,C			;primero byte bajo	
     788.  00:8477  D3 99               	OUT		(REGEST),A
     789.  00:8479  78                  	LD		 A,B			;después byte alto  ********************** preguntar a Fernando cómo que byte bajo es B
     790.  00:847A  F6 40               	OR		1000000b		;+64
     791.  00:847C  D3 99               	OUT		(REGEST),A
     792.  00:847E                      
     793.  00:847E                      	
     794.  00:847E  2A A8 84            	LD		HL,(wordaux2)	;HL es lo que se pintará y le he pasado el puntero del array tilemap a pintar
     795.  00:8481                      .pa_pinta_fila:
     796.  00:8481  43                  	LD		 B,E
     797.  00:8482                      .pa_pinta_columnas: 		;finta la fila (pintando las columnas)
     798.  00:8482  7E                  	LD		 A,(HL)
     799.  00:8483  D3 98               	OUT		(REGESCVDP),A	;escribe A en VRAM en la posición indicada por los dos OUT anteriores
     800.  00:8485  23                  	INC		HL
     801.  00:8486  10 FA               	DJNZ	.pa_pinta_columnas
     802.  00:8488                      	
     803.  00:8488                      	;no es una solución elegante lo de repetir código pero queda claro
     804.  00:8488                      	;por si hay otra fila
     805.  00:8488  E5                  	PUSH	HL
     806.  00:8489  2A A6 84            	LD		HL,(wordaux1)
     807.  00:848C  01 20 00            	LD		BC,32
     808.  00:848F  09                  	ADD		HL,BC
     809.  00:8490  22 A6 84            	LD		(wordaux1),HL
     810.  00:8493  44                  	LD		B,H
     811.  00:8494  4D                  	LD		C,L
     812.  00:8495  E1                  	POP		HL
     813.  00:8496                      	
     814.  00:8496  79                  	LD		 A,C			;primero byte bajo	
     815.  00:8497  D3 99               	OUT		(REGEST),A
     816.  00:8499  78                  	LD		 A,B			;después byte alto 
     817.  00:849A  F6 40               	OR		1000000b		;+64
     818.  00:849C  D3 99               	OUT		(REGEST),A
     819.  00:849E                      	
     820.  00:849E                      	;si hay otra fila repite
     821.  00:849E  15                  	DEC		 D
     822.  00:849F  7A                  	LD		 A,D		;¿hay otra fila?
     823.  00:84A0  B7                  	OR		 A
     824.  00:84A1  C4 81 84            	CALL	NZ,.pa_pinta_fila
     825.  00:84A4                      	
     826.  00:84A4  08                  	EX		AF, AF'
     827.  00:84A5                      fin_pinta_array:
     828.  00:84A5  C9                  	RET
     829.  00:84A6                      ;;variables asocidas a la función pinta_array
     830.  00:84A6                      ;; por de pronto la dejo aquí
     831.  00:84A6  00 00               wordaux1:		DW	0	;almacena la posición en el tilemap 0 al 675
     832.  00:84A8  00 00               wordaux2:		DW	0	;almacena puntero a array de tiles (posiciones en realidad) a pintar (posiciones repetidas en los 2 primeros bancos)
     833.  00:84AA  00                  byteaux1:		DB	0	;nº filas Registro D
     834.  00:84AB  00                  byteaux2:		DB	0	;nº columnas Registro E
     835.  00:84AC                      
     836.  00:84AC                      
     122   00:84AC                      	
     123   00:84AC                      	include "subr_sprites.asm"
       1.  00:84AC                      
       2.  00:84AC                      ;;=====================================================
       3.  00:84AC                      ;;SUBRUTINAS ENCARGADAS DE MANEJAR LOS SPRITES
       4.  00:84AC                      ;;=====================================================	
       5.  00:84AC                      
       6.  00:84AC                      
       7.  00:84AC                      ;; PREGUNTAR SI A FERNANDO SI ES MEJOR USAR LISTAS O ALGO PARA AHORRAR CÓDIGO
       8.  00:84AC                      
       9.  00:84AC                      
      10.  00:84AC                      
      11.  00:84AC                      
      12.  00:84AC                      ;;=====================================================
      13.  00:84AC                      ;;CARGA_PATRONES_SPRITES_NIVEL
      14.  00:84AC                      ;;=====================================================	
      15.  00:84AC                      ; función: 	examina el nivel y carga los patrones específicos necesarios
      16.  00:84AC                      ; entrada: 	-
      17.  00:84AC                      ; salida: 	-
      18.  00:84AC                      ; toca: 	-
      19.  00:84AC                      carga_patrones_sprites_nivel:
      20.  00:84AC                      	
      21.  00:84AC  CD B7 84            	CALL 	carga_patrones_nivel_comunes
      22.  00:84AF                      	
      23.  00:84AF                      	;carga atrones no comunes
      24.  00:84AF  3A EA A5            	LD		 A, (prota_nivel)
      25.  00:84B2  B7                  	OR		 A
      26.  00:84B3  CA C3 84            	JP		 Z, carga_patrones_sprites_nivel1
      27.  00:84B6                      	
      28.  00:84B6                      	
      29.  00:84B6                      fin_carga_patrones_sprites_nivel:
      30.  00:84B6  C9                  	RET		;dejo este ret de momento pero cuando la subrutina esté terminada sobrará
      31.  00:84B7                      
      32.  00:84B7                      	;RET comparo numeros con jp para incluir el RET con lo que el último ret me sobra
      33.  00:84B7                      
      34.  00:84B7                      ;;=====================================================
      35.  00:84B7                      ;;CARGA_PATRONES_SPRITES_NIVEL_COMUNES
      36.  00:84B7                      ;;=====================================================	
      37.  00:84B7                      ; función: 	carga los patrones comunes en todos los niveles
      38.  00:84B7                      ; entrada: 	-
      39.  00:84B7                      ; salida: 	-
      40.  00:84B7                      ; toca: 	-
      41.  00:84B7                      carga_patrones_nivel_comunes:	
      42.  00:84B7  21 3F 99            	LD		HL, sprites_comunes
      43.  00:84BA  11 00 38            	LD		DE, SPRTBL
      44.  00:84BD  01 C0 00            	LD		BC, fin_sprites_comunes-sprites_comunes
      45.  00:84C0  C3 5C 00            	JP		LDIRVM
      46.  00:84C3                      fin_carga_patrones_nivel_comunes:
      47.  00:84C3                      
      48.  00:84C3                      
      49.  00:84C3                      ;;=====================================================
      50.  00:84C3                      ;;CARGA_PATRONES_SPRITES_NIVEL1
      51.  00:84C3                      ;;=====================================================	
      52.  00:84C3                      ; función: 	copia los patrones de los sprites que e van a usar en el nivel 1 en vram
      53.  00:84C3                      ; entrada: 	-
      54.  00:84C3                      ; salida: 	-
      55.  00:84C3                      ; toca: 	-
      56.  00:84C3                      carga_patrones_sprites_nivel1:
      57.  00:84C3                      
      58.  00:84C3                      
      59.  00:84C3                      	;~ ;sprite sprite_reliquia
      60.  00:84C3                      	;~ LD		HL,sprite_reliquia
      61.  00:84C3                      	;~ LD		DE,#3880
      62.  00:84C3                      	;~ LD		BC,32				;32 bytes (sprites de 2 x 2)
      63.  00:84C3                      	;~ CALL	LDIRVM
      64.  00:84C3                      
      65.  00:84C3                      fin_carga_patrones_sprites:
      66.  00:84C3  C9                  	RET
      67.  00:84C4                      
      68.  00:84C4                      
      69.  00:84C4                      ;;=====================================================
      70.  00:84C4                      ;;ACTUALIZA_ARRAY_SPRITES_VRAM
      71.  00:84C4                      ;;=====================================================	
      72.  00:84C4                      ; función: 	copia el array con los valores de los sprites (pos, color, plano) en VRAM
      73.  00:84C4                      ; entrada: 	-
      74.  00:84C4                      ; salida: 	-
      75.  00:84C4                      ; toca: 	todos los registros. Como me interesa la velocidad, si necesito copiar de algo lo hago fuera
      76.  00:84C4                      render_sprites:
      77.  00:84C4                      	;volcando el array con toda la info de los sprites a la zona de atributos de sprites
      78.  00:84C4  21 2A A7            	LD		HL,array_sprites
      79.  00:84C7  11 00 1B            	LD		DE,SPRART
      80.  00:84CA  01 80 00            	LD		BC,4 * 32				;32 sprites x 4 bytes controlando el sprite (Y, X, plano, color)
      81.  00:84CD  C3 5C 00            	JP		LDIRVM
      82.  00:84D0                      fin_actualiza_array_sprites_vram:
      83.  00:84D0                      
      84.  00:84D0                      
      85.  00:84D0                      ;;=====================================================
      86.  00:84D0                      ;;VUELCA_RESULTADO_PUNTOMIRA_ARRAY
      87.  00:84D0                      ;;=====================================================	
      88.  00:84D0                      ; función: 	coloca los valores del punto de mira en la variable array_sprites para ser volcados en VRAM
      89.  00:84D0                      ; entrada: 	array_sprites_pm, prota.XXXXX
      90.  00:84D0                      ; salida: 	-
      91.  00:84D0                      ; toca: 	-
      92.  00:84D0                      vuelca_resultado_puntomira_array:
      93.  00:84D0  DD 21 2A A7         	LD		IX, array_sprites_pm
      94.  00:84D4                      	;posición y de los dos sprites que conforman el punto de mira
      95.  00:84D4  3A DB A5            	LD		 A, (prota.posy)
      96.  00:84D7  DD 77 00            	LD		(IX  ), A
      97.  00:84DA  DD 77 04            	LD		(IX+4), A
      98.  00:84DD                      	;posición x de los dos sprites que conforman el punto de mira
      99.  00:84DD  3A DA A5            	LD		 A, (prota.posx)
     100.  00:84E0  DD 77 01            	LD		(IX+1), A
     101.  00:84E3  DD 77 05            	LD		(IX+5), A
     102.  00:84E6                      	;plano
     103.  00:84E6  DD 36 02 00         	LD		(IX+2), 0
     104.  00:84EA  DD 36 06 04         	LD		(IX+6), 4	;al ser sprites de 16x16 hay que ir de 4 en 4
     105.  00:84EE                      	;color
     106.  00:84EE  3A DC A5            	LD		 A, (prota.escena)
     107.  00:84F1  B7                  	OR		 A
     108.  00:84F2  C2 FE 84            	JP		NZ,.codigo_color_2
     109.  00:84F5                      .codigo_color_1:
     110.  00:84F5  DD 36 03 0F         	LD		(IX+3), COLBLANCO
     111.  00:84F9  DD 36 07 08         	LD		(IX+7), COLROJO
     112.  00:84FD  C9                  	RET
     113.  00:84FE                      .codigo_color_2:
     114.  00:84FE  DD 36 03 08         	LD		(IX+3), COLROJO
     115.  00:8502  DD 36 07 0F         	LD		(IX+7), COLBLANCO
     116.  00:8506  C9                  	RET
     117.  00:8507                      fin_vuelca_resultado_puntomira_array:
     118.  00:8507                      
     119.  00:8507                      
     120.  00:8507                      ;;=====================================================
     121.  00:8507                      ;;CHECK_PLAYER
     122.  00:8507                      ;;=====================================================	
     123.  00:8507                      ; función: 	MIRA EL CONTROL Y APLICA LA LOGICA DE MOVIMIENTO DEL PROTAGONISTA
     124.  00:8507                      ; entrada: 	-
     125.  00:8507                      ; salida: 	-
     126.  00:8507                      ; toca: 	A
     127.  00:8507                      check_player:
     128.  00:8507  CD A6 85            	CALL	update_controllers_status
     129.  00:850A  B7                  	OR		 A
     130.  00:850B  C8                  	RET		 Z						;si no se ha pulsado nada no se necesita mirar nada
     131.  00:850C                      
     132.  00:850C  CB 1F               	RR		 A
     133.  00:850E  DC 27 85            	CALL	 C, mueve_arriba
     134.  00:8511  CB 1F               	RR		 A
     135.  00:8513  DC 43 85            	CALL	 C, mueve_abajo
     136.  00:8516  CB 1F               	RR		 A
     137.  00:8518  DC 52 85            	CALL	 C, mueve_izquierda
     138.  00:851B  CB 1F               	RR		 A
     139.  00:851D  DC 34 85            	CALL	 C, mueve_derecha
     140.  00:8520                      	
     141.  00:8520                      	;zona para mirar disparo Recibe A que tendrá 0000 0 0 X-letra M X-espacio 
     142.  00:8520  CD 5F 85            	CALL	mira_disparo
     143.  00:8523                      	
     144.  00:8523  C3 D0 84            	JP		vuelca_resultado_puntomira_array
     145.  00:8526                      f;in_check_player:
     146.  00:8526  C9                  	RET
     147.  00:8527                      
     124   00:8527                      	
     125   00:8527                      	include "subr_teclado_joy.asm"
       1.  00:8527                      ;;=====================================================
       2.  00:8527                      ;;SUBRUTINAS QUE CAPTURN EL JOYSTICK Y TECLADO Y MUEVEN PUNTO DE MIRA
       3.  00:8527                      ;;=====================================================
       4.  00:8527                      
       5.  00:8527                      ;;=====================================================
       6.  00:8527                      ;;MUEVE_ARRIBA
       7.  00:8527                      ;;=====================================================	
       8.  00:8527                      ; función: 	decrementa y si se no sale de los límites el valor del punto de mira a la derecha
       9.  00:8527                      ; entrada: 	-
      10.  00:8527                      ; salida: 	-
      11.  00:8527                      ; toca: 	-
      12.  00:8527                      mueve_arriba:
      13.  00:8527  F5                  	PUSH		AF
      14.  00:8528                      	
      15.  00:8528  3A DB A5            	LD		 	 A, (prota.posy)
      16.  00:852B  3D                  	DEC			 A
      17.  00:852C  CA 32 85            	JP			 Z,.no_decrementa_y
      18.  00:852F  32 DB A5            	LD			(prota.posy), A
      19.  00:8532                      	
      20.  00:8532                      .no_decrementa_y:
      21.  00:8532  F1                  	POP			AF
      22.  00:8533                      fin_mueve_arriba:
      23.  00:8533  C9                  	RET
      24.  00:8534                      
      25.  00:8534                      
      26.  00:8534                      ;;=====================================================
      27.  00:8534                      ;;MUEVE_DERECHA
      28.  00:8534                      ;;=====================================================	
      29.  00:8534                      ; función: 	incrementa si se no sale de los límites el valor del punto de mira a la derecha
      30.  00:8534                      ; entrada: 	-
      31.  00:8534                      ; salida: 	-
      32.  00:8534                      ; toca: 	-
      33.  00:8534                      mueve_derecha:
      34.  00:8534  F5                  	PUSH		AF
      35.  00:8535                      	
      36.  00:8535  3A DA A5            	LD		 	 A, (prota.posx)
      37.  00:8538  3C                  	INC			 A
      38.  00:8539  FE EF               	CP			 A, LIMPANTDER - 16
      39.  00:853B  CA 41 85            	JP			 Z, .no_incrementa_x
      40.  00:853E  32 DA A5            	LD			(prota.posx), A
      41.  00:8541                      	
      42.  00:8541                      .no_incrementa_x:
      43.  00:8541  F1                  	POP			AF
      44.  00:8542                      fin_mueve_derecha:
      45.  00:8542  C9                  	RET
      46.  00:8543                      
      47.  00:8543                      
      48.  00:8543                      ;;=====================================================
      49.  00:8543                      ;;MUEVE_ABAJO
      50.  00:8543                      ;;=====================================================	
      51.  00:8543                      ; función: 	incrementa y si se no sale de los límites el valor del punto de mira abajo
      52.  00:8543                      ; entrada: 	-
      53.  00:8543                      ; salida: 	-
      54.  00:8543                      ; toca: 	-
      55.  00:8543                      mueve_abajo:
      56.  00:8543  F5                  	PUSH		AF
      57.  00:8544                      	
      58.  00:8544  3A DB A5            	LD		 	 A, (prota.posy)
      59.  00:8547  3C                  	INC			 A
      60.  00:8548  FE 70               	CP			 A, LIMPANTABA - 16
      61.  00:854A  CA 50 85            	JP			 Z,.no_incrementa_y
      62.  00:854D  32 DB A5            	LD			(prota.posy), A
      63.  00:8550                      	
      64.  00:8550                      .no_incrementa_y:
      65.  00:8550  F1                  	POP			AF
      66.  00:8551                      fin_mueve_abajo:
      67.  00:8551  C9                  	RET
      68.  00:8552                      	
      69.  00:8552                      	
      70.  00:8552                      ;;=====================================================
      71.  00:8552                      ;;MUEVE_IZQUIERDA
      72.  00:8552                      ;;=====================================================	
      73.  00:8552                      ; función: 	decrementa x si se no sale de los límites el valor del punto de mira a la izquierda
      74.  00:8552                      ; entrada: 	-
      75.  00:8552                      ; salida: 	-
      76.  00:8552                      ; toca: 	-
      77.  00:8552                      mueve_izquierda:
      78.  00:8552  F5                  	PUSH		AF
      79.  00:8553                      	
      80.  00:8553  3A DA A5            	LD		 	 A, (prota.posx)
      81.  00:8556  3D                  	DEC			 A
      82.  00:8557                      ;	CP			 A, LIMPANTIZQ
      83.  00:8557  CA 5D 85            	JP			 Z,.no_decrementa_x
      84.  00:855A  32 DA A5            	LD			(prota.posx), A
      85.  00:855D                      	
      86.  00:855D                      .no_decrementa_x:
      87.  00:855D  F1                  	POP			AF
      88.  00:855E                      fin_mueve_izquierda:
      89.  00:855E  C9                  	RET
      90.  00:855F                      
      91.  00:855F                      
      92.  00:855F                      
      93.  00:855F                      ;;=====================================================
      94.  00:855F                      ;;MIRA_DISPARO
      95.  00:855F                      ;;=====================================================	
      96.  00:855F                      ; función: 	Mira si se ha pulsado alguno de los dos disparos
      97.  00:855F                      ; entrada: 	A que tendrá 0000 0 0 X-letra M X-espacio 
      98.  00:855F                      ; salida: 	-
      99.  00:855F                      ; toca: 	A, B
     100.  00:855F                      mira_disparo:
     101.  00:855F                      .mira_boton_pulsado1:
     102.  00:855F  CB 1F               	RR		 A						;preparo en el carry si se ha pulsado botón 1
     103.  00:8561  D2 8A 85            	JP		 NC, .mira_boton_pulsado2					
     104.  00:8564  F5                  	PUSH	AF						;copia A para usarlo después
     105.  00:8565                      	;se ha pulsado barra o boton 1
     106.  00:8565  3A DF A5            	LD		 A, (prota.cadencia)
     107.  00:8568  B7                  	OR		 A
     108.  00:8569  CA 77 85            	JP		 Z, .efectua_disparo	;toca efectuar disparo realmente porque se ha pulsado lo suficiente el disparo
     109.  00:856C                      .no_efectua_disparo: ;IF
     110.  00:856C  3D                  		DEC		 A
     111.  00:856D  32 DF A5            		LD		(prota.cadencia), A	;resto cadencia hasta próximo disparo "real" (no automático por haber pulsado una tecla e ir demasiado rápido)
     112.  00:8570  AF                  		XOR		 A 
     113.  00:8571  32 DC A5            		LD		(prota.escena), A
     114.  00:8574  C3 89 85            		JP		.fin_mira_disparo1
     115.  00:8577                      .efectua_disparo:	;ELSE
     116.  00:8577                      		;cambio colores del sprite
     117.  00:8577  3A DC A5            		LD		 A, (prota.escena)
     118.  00:857A  2F                  		CPL		 
     119.  00:857B  32 DC A5            		LD		(prota.escena), A
     120.  00:857E                      		;reseteo cadencia para el próximo disparo
     121.  00:857E  3E 04               		LD		 A, LIMCADENCIA						;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
     122.  00:8580  32 DF A5            		LD		 (prota.cadencia), A				;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
     123.  00:8583                      		;ejecuto sonido								;; ajustar cadencia y que cuando el disparo sea efectivo se reseteen los colores
     124.  00:8583  AF                  		XOR		 A
     125.  00:8584  0E 01               		LD		 C, 1
     126.  00:8586  CD 4E 8C            		CALL	ayFX_INIT	
     127.  00:8589                      .fin_mira_disparo1
     128.  00:8589                      
     129.  00:8589  F1                  	POP		AF
     130.  00:858A                      .mira_boton_pulsado2:
     131.  00:858A  CB 1F               	RR		 A
     132.  00:858C  D0                  	RET		 NC
     133.  00:858D                      	;se ha pulsado shift o boton 2
     134.  00:858D                      	
     135.  00:858D  3A EC A5            	LD		 A, (prota_reliquias)	;miro si le quedan reliquias
     136.  00:8590  B7                  	OR		 A
     137.  00:8591  C8                  	RET		 Z						;si no le quedan salgo ya
     138.  00:8592                      	
     139.  00:8592                      	;actuaciones si se usa la reliquia botón 2 o M y quedn reliquias.. (antes ya se puso el valor en A)
     140.  00:8592  3A EC A5            	LD		A, (prota_reliquias)
     141.  00:8595  3D                  	DEC		 A
     142.  00:8596  32 EC A5            	LD		(prota_reliquias), A
     143.  00:8599                      	
     144.  00:8599  3E 01               	LD		 A, 1
     145.  00:859B  0E 01               	LD		 C, 1
     146.  00:859D  CD 4E 8C            	CALL	ayFX_INIT
     147.  00:85A0                      	
     148.  00:85A0  CD 4C 84            	CALL 	efecto_imagen_tira_reliquia
     149.  00:85A3                      	
     150.  00:85A3  C3 6A 82            	JP		pinta_reliquias
     151.  00:85A6                      fin_mira_disparo:
     152.  00:85A6                      ;	RET		
     153.  00:85A6                      
     154.  00:85A6                      
     155.  00:85A6                      ;;============================================================
     156.  00:85A6                      ;;Código de D. Fernando García (BitVision) (al que siempre le estaré agradecido)
     157.  00:85A6                      ;check_8th_keyboard_row
     158.  00:85A6                      ;read_joy_0
     159.  00:85A6                      ;check_8th_keyboard_row
     160.  00:85A6                      ;check_4th_keyboard_row
     161.  00:85A6                      ;;============================================================
     162.  00:85A6                      ;;  usa constantes:
     163.  00:85A6                      ;PSG_A  equ  0a0h  ;reg address
     164.  00:85A6                      ;PSG_W  equ  0a1h  ;reg data WR
     165.  00:85A6                      ;PSG_R  equ  0a2h  ;reg data
     166.  00:85A6                      
     167.  00:85A6                      ;;=====================================================
     168.  00:85A6                      ;;update_controllers_status
     169.  00:85A6                      ;;=====================================================	
     170.  00:85A6                      ;depends on the next rountine
     171.  00:85A6                      ;  returns
     172.  00:85A6                      ;  a - 0P2TRLDU
     173.  00:85A6                      
     174.  00:85A6                      update_controllers_status:
     175.  00:85A6  CD F1 85                 call  check_8th_keyboard_row
     176.  00:85A9                      [4]  rrc    a
     176.  00:85A9  CB 0F CB 0F CB 0F CB 0F 
     177.  00:85B1  47                       ld    b,a    		;save for later  xxxTRDUL
     178.  00:85B2                      
     179.  00:85B2  E6 01                    and    #01    		;save L
     180.  00:85B4  CB 27                    sla    a
     181.  00:85B6  CB 27                    sla    a    		;now 00000L00
     182.  00:85B8  4F                       ld    c,a    		;save for later
     183.  00:85B9                      
     184.  00:85B9  78                       ld    a,b    		;again we've got xxxTRDUL. I am interested on leaving 000000DU on a
     185.  00:85BA  CB 3F                    srl    a
     186.  00:85BC  E6 03                    and    00000011b
     187.  00:85BE                      						;we've got 000000DU on a
     188.  00:85BE  B1                       or    c    		;now we've got 00000LDU
     189.  00:85BF  4F                       ld    c,a    		;save for later
     190.  00:85C0                      
     191.  00:85C0  78                       ld    a,b
     192.  00:85C1  E6 18                    and    00011000b 	;we've got 000TR000
     193.  00:85C3  B1                       or    c
     194.  00:85C4                           ;finally    000TRLDU
     195.  00:85C4                      
     196.  00:85C4                           ;and    00000100   ;preserve just
     197.  00:85C4  47                       ld    b,a    		;save for later
     198.  00:85C5  CD FF 85                 call  check_4th_keyboard_row      ;check M & P
     199.  00:85C8  F5                       push  af
     200.  00:85C9  E6 04                    and    00000100b	;filter just M
     201.  00:85CB  87                       add    a
     202.  00:85CC  87                       add    a
     203.  00:85CD  87                       add    a           ;shift 3th to 6th bit
     204.  00:85CE  B0                       or    b           	;merge with previous
     205.  00:85CF  47                       ld    b,a
     206.  00:85D0                      
     207.  00:85D0  CD DD 85                 call  read_joy_0
     208.  00:85D3  E6 3F                    and    00111111b  	;we want just 002TRLDU  from joystick    (2 is second trigger)
     209.  00:85D5  B0                       or    b      		;added 000TRLDU from keyboard
     210.  00:85D6  47                       ld    b,a      	;save for later
     211.  00:85D7  F1                       pop    af      	; let's check on P
     212.  00:85D8                      
     213.  00:85D8  E6 20                    and    00100000b
     214.  00:85DA  87                       add    a      		;P status on 6th bit  ... so 0P2TRLDU
     215.  00:85DB  B0                       or    b
     216.  00:85DC                      
     217.  00:85DC  C9                       ret
     218.  00:85DD                      
     219.  00:85DD                      
     220.  00:85DD                      ;ret
     221.  00:85DD                      ;  a -            xx2TRLDU
     222.  00:85DD                      read_joy_0:
     223.  00:85DD  F3                         di
     224.  00:85DE  3E 0F                      ld    a,15
     225.  00:85E0  D3 A0                      out    [PSG_A],a
     226.  00:85E2  DB A2                      in    a,[PSG_R]
     227.  00:85E4  E6 BF                      and    10111111b        ;joy0
     228.  00:85E6                      
     229.  00:85E6  D3 A1                      out    [PSG_W],a        ;set joy0
     230.  00:85E8                      
     231.  00:85E8  3E 0E                      ld    a,14
     232.  00:85EA  D3 A0                      out    [PSG_A],a
     233.  00:85EC  DB A2                      in    a,[PSG_R]
     234.  00:85EE                      
     235.  00:85EE  FB                         ei
     236.  00:85EF  2F                         cpl
     237.  00:85F0                      
     238.  00:85F0  C9                         ret
     239.  00:85F1                      
     240.  00:85F1                      
     241.  00:85F1                      ;ret
     242.  00:85F1                      ;  a -      RDULxxxT
     243.  00:85F1                      check_8th_keyboard_row:
     244.  00:85F1  F3                       di
     245.  00:85F2  DB AA                    in    a,(#aa)
     246.  00:85F4  E6 F0                    and    #f0
     247.  00:85F6  F6 08                    or    8
     248.  00:85F8  D3 AA                    out    (#aa),a
     249.  00:85FA  DB A9                    in    a,(#a9)
     250.  00:85FC  FB                       ei
     251.  00:85FD  2F                       cpl
     252.  00:85FE                      
     253.  00:85FE  C9                       ret
     254.  00:85FF                      
     255.  00:85FF                      
     256.  00:85FF                      ;ret
     257.  00:85FF                      ;  a -      xxxxxMxx
     258.  00:85FF                      check_4th_keyboard_row:
     259.  00:85FF  F3                       di
     260.  00:8600  DB AA                    in    a,(#aa)
     261.  00:8602  E6 F0                    and    #f0
     262.  00:8604  F6 04                    or    4
     263.  00:8606  D3 AA                    out    (#aa),a
     264.  00:8608  DB A9                    in    a,(#a9)
     265.  00:860A  FB                       ei
     266.  00:860B  2F                       cpl
     267.  00:860C                      
     268.  00:860C  C9                       ret
     269.  00:860D                      
     270.  00:860D                      ;--------------------------------------------
     271.  00:860D                      
     272.  00:860D                      
     273.  00:860D                      
     274.  00:860D                      
     275.  00:860D                      
     276.  00:860D                      
     277.  00:860D                      
     278.  00:860D                      
     126   00:860D                      	
     127   00:860D                      	include "subr_sonido.asm"
       1.  00:860D                      
       2.  00:860D                      ;;=====================================================
       3.  00:860D                      ;;SUBRUTINAS PARA SONIDOS
       4.  00:860D                      ;;=====================================================	
       5.  00:860D                      
       6.  00:860D                      ;;=====================================================
       7.  00:860D                      ;;INICIALIZA_REPLAYER_EFECTOS_INTERRUPCIONES
       8.  00:860D                      ;;=====================================================	
       9.  00:860D                      ; función: 	inicializa: replayer de música, player de efectos e interrupciones
      10.  00:860D                      ; entrada: 	-
      11.  00:860D                      ; salida: 	-
      12.  00:860D                      ; toca: 	HL, A
      13.  00:860D                      inicializa_replayer_efectos_interrupciones:
      14.  00:860D  F3                  	DI
      15.  00:860E                      
      16.  00:860E                      	;inicializacion de replayer musical
      17.  00:860E  21 B6 8C            	LD		HL, song-99			; hl <- initial address of module - 99
      18.  00:8611  CD 4D 86            	CALL	PT3_INIT			; Inits PT3 player
      19.  00:8614                      		
      20.  00:8614                      	;inicializacion del reproductor de efectos sonoros
      21.  00:8614  21 81 96            	LD		HL, sfx_bank
      22.  00:8617  CD 3C 8C            	CALL	ayFX_SETUP
      23.  00:861A                      	
      24.  00:861A                      	;Engancha nuestra rutina de servicio al gancha que deja preparado la BIOS cuando se termina de pintar la pantalla (50 o 60 veces por segundo)
      25.  00:861A  3E C3               	LD		A, #C3
      26.  00:861C  32 9F FD            	LD		[H.TIMI], A
      27.  00:861F  21 27 86            	LD		HL, subrutina_isr
      28.  00:8622  22 A0 FD            	LD		[H.TIMI+1], HL
      29.  00:8625                      	
      30.  00:8625  FB                  	EI		;optimizacion:
      31.  00:8626                      			;piensa que las dos ultimas lineas podrian haber sido: 
      32.  00:8626                      			;ei						;primero ei
      33.  00:8626                      			;ld		[H.TIMI+1],hl	;luego este ld
      34.  00:8626                      									;PENSAR (y consultar ) PORQUE!!!!
      35.  00:8626                      fin_inicializa_replayer_efectos_interrupciones:
      36.  00:8626  C9                  	RET
      37.  00:8627                      
      38.  00:8627                      
      39.  00:8627                      
      40.  00:8627                      ;;=====================================================
      41.  00:8627                      ;;NUESTRA_ISR
      42.  00:8627                      ;;=====================================================	
      43.  00:8627                      ; función: 	envía datos al PSG + toca un trozo de música + toca trozo de 
      44.  00:8627                      ; entrada: 	-
      45.  00:8627                      ; salida: 	-
      46.  00:8627                      ; toca: 	HL, A
      47.  00:8627                      subrutina_isr:
      48.  00:8627  CD 92 8B            	CALL	PT3_ROUT			;envia los datos a los registros del PSG
      49.  00:862A  CD 9A 8A            	CALL	PT3_PLAY			;calcula el siguiente 'trocito' de musica que sera enviado al proxima vez
      50.  00:862D  C3 84 8C            	JP		ayFX_PLAY			;calcula el siguiente 'trocito' de efecto especial de sonido que sera enviado la proxima vez
      51.  00:8630                      fin_subrutina_isr:
      52.  00:8630                      	;RET
      53.  00:8630                      
      54.  00:8630                      
      55.  00:8630                      
      56.  00:8630                      ;;=====================================================
      57.  00:8630                      ;;DEFINICIÓN DE SUBRUTINAS DE FERNANDO PARA COMPRESIÓN Y SONIDO
      58.  00:8630                      ;;=====================================================
      59.  00:8630                      subrutinas_sonido:
      60.  00:8630                      	include	"PT3-ROM_sjasm.asm"
       1:  00:8630                      		; --- PT3 REPLAYER WORKING ON ROM ---
       2:  00:8630                      		; --- Can be assembled with asMSX ---
       3:  00:8630                      		; --- ROM version: MSX-KUN        ---
       4:  00:8630                      		; --- asMSX version 2: SapphiRe   ---
       5:  00:8630                      
       6:  00:8630                      ; Based on MSX full version of PT3 by Dioniso
       7:  00:8630                      ;
       8:  00:8630                      ; This version of the replayer can be used with any note table
       9:  00:8630                      ; This version also allows the use of PT3 commands
      10:  00:8630                      ; First 99 bytes of each PT3 module should be stripped off
      11:  00:8630                      ;
      12:  00:8630                      ; PLAY and PSG WRITE routines seperated to allow independent calls
      13:  00:8630                      ;
      14:  00:8630                      ; ROM LENGTH: 1549 bytes
      15:  00:8630                      ; RAM LENGTH:  576 bytes
      16:  00:8630                      
      17:  00:8630                      
      18:  00:8630                      
      19:  00:8630                      ;SJASM version by BTV 2016
      20:  00:8630                      
      21:  00:8630                      
      22:  00:8630                      		; --- CONSTANT VALUES DEFINITION ---
      23:  00:8630                      
      24:  00:8630                      ;ChannelsVars
      25:  00:8630                      ;struc	CHNPRM
      26:  00:8630                      ;reset group
      27:  00:8630  (00:0000)           CHNPRM_PsInOr	equ 0	;RESB 1
      28:  00:8630  (00:0001)           CHNPRM_PsInSm	equ 1	;RESB 1
      29:  00:8630  (00:0002)           CHNPRM_CrAmSl	equ 2	;RESB 1
      30:  00:8630  (00:0003)           CHNPRM_CrNsSl	equ 3	;RESB 1
      31:  00:8630  (00:0004)           CHNPRM_CrEnSl	equ 4	;RESB 1
      32:  00:8630  (00:0005)           CHNPRM_TSlCnt	equ 5	;RESB 1
      33:  00:8630  (00:0006)           CHNPRM_CrTnSl	equ 6	;RESW 1
      34:  00:8630  (00:0008)           CHNPRM_TnAcc	equ 8	;RESW 1
      35:  00:8630  (00:000A)           CHNPRM_COnOff	equ 10	;RESB 1
      36:  00:8630                      ;reset group
      37:  00:8630                      
      38:  00:8630  (00:000B)           CHNPRM_OnOffD	equ 11	;RESB 1
      39:  00:8630                      
      40:  00:8630                      ;IX for PTDECOD here [+12]
      41:  00:8630  (00:000C)           CHNPRM_OffOnD	equ 12	;RESB 1
      42:  00:8630  (00:000D)           CHNPRM_OrnPtr	equ 13	;RESW 1
      43:  00:8630  (00:000F)           CHNPRM_SamPtr	equ 15	;RESW 1
      44:  00:8630  (00:0011)           CHNPRM_NNtSkp	equ 17	;RESB 1
      45:  00:8630  (00:0012)           CHNPRM_Note	equ 18	;RESB 1
      46:  00:8630  (00:0013)           CHNPRM_SlToNt	equ 19	;RESB 1
      47:  00:8630  (00:0014)           CHNPRM_Env_En	equ 20	;RESB 1
      48:  00:8630  (00:0015)           CHNPRM_Flags	equ 21	;RESB 1
      49:  00:8630                       ;Enabled - 0,SimpleGliss - 2
      50:  00:8630  (00:0016)           CHNPRM_TnSlDl	equ 22	;RESB 1
      51:  00:8630  (00:0017)           CHNPRM_TSlStp	equ 23	;RESW 1
      52:  00:8630  (00:0019)           CHNPRM_TnDelt	equ 25	;RESW 1
      53:  00:8630  (00:001B)           CHNPRM_NtSkCn	equ 27	;RESB 1
      54:  00:8630  (00:001C)           CHNPRM_Volume	equ 28	;RESB 1
      55:  00:8630  (00:001D)           CHNPRM_Size	equ 29	;RESB 1
      56:  00:8630                      ;endstruc
      57:  00:8630                      
      58:  00:8630                      ;struc	AR
      59:  00:8630  (00:0000)           AR_TonA		equ 0	;RESW 1
      60:  00:8630  (00:0002)           AR_TonB		equ 2	;RESW 1
      61:  00:8630  (00:0004)           AR_TonC		equ 4	;RESW 1
      62:  00:8630  (00:0006)           AR_Noise	equ 6	;RESB 1
      63:  00:8630  (00:0007)           AR_Mixer	equ 7	;RESB 1
      64:  00:8630  (00:0008)           AR_AmplA	equ 8	;RESB 1
      65:  00:8630  (00:0009)           AR_AmplB	equ 9	;RESB 1
      66:  00:8630  (00:000A)           AR_AmplC	equ 10	;RESB 1
      67:  00:8630  (00:000B)           AR_Env		equ 11	;RESW 1
      68:  00:8630  (00:000D)           AR_EnvTp	equ 13	;RESB 1
      69:  00:8630                      ;endstruc
      70:  00:8630                      
      71:  00:8630                      		; --- CODE STARTS HERE ---
      72:  00:8630                      
      73:  00:8630  21 00 F0            CHECKLP:	LD	HL,PT3_SETUP
      74:  00:8633  CB FE               		SET	7,[HL]
      75:  00:8635  CB 46               		BIT	0,[HL]
      76:  00:8637  C8                  		RET	Z
      77:  00:8638  E1                  		POP	HL
      78:  00:8639  21 7A F0            		LD	HL,DelyCnt
      79:  00:863C  34                  		INC	[HL]
      80:  00:863D  21 3E F0            		LD	HL,ChanA+CHNPRM_NtSkCn
      81:  00:8640  34                  		INC	[HL]
      82:  00:8641  AF                  PT3_MUTE:	XOR	A
      83:  00:8642  67                  		LD	H,A
      84:  00:8643  6F                  		LD	L,A
      85:  00:8644  32 48 F1            		LD	[AYREGS+AR_AmplA],A
      86:  00:8647  22 49 F1            		LD	[AYREGS+AR_AmplB],HL
      87:  00:864A  C3 93 8B            		JP	ROUT_A0
      88:  00:864D                      
      89:  00:864D                      PT3_INIT:	;HL - AddressOfModule - 100
      90:  00:864D  22 01 F0            		LD [PT3_MODADDR],HL
      91:  00:8650  E5                  		PUSH HL
      92:  00:8651  11 64 00            		LD DE,100
      93:  00:8654  19                  		ADD HL,DE
      94:  00:8655  7E                  		LD A,[HL]
      95:  00:8656  32 1C F0            		LD [PT3_Delay],A
      96:  00:8659  E5                  		PUSH HL
      97:  00:865A  DD E1               		POP IX
      98:  00:865C  19                  		ADD HL,DE
      99:  00:865D  22 03 F0            		LD [PT3_CrPsPtr],HL
     100:  00:8660  DD 5E 02            		LD E,[IX+102-100]
     101:  00:8663  19                  		ADD HL,DE
     102:  00:8664  23                  		INC HL
     103:  00:8665  22 18 F0            		LD [PT3_LPosPtr],HL
     104:  00:8668  D1                  		POP DE
     105:  00:8669  DD 6E 03            		LD L,[IX+103-100]
     106:  00:866C  DD 66 04            		LD H,[IX+104-100]
     107:  00:866F  19                  		ADD HL,DE
     108:  00:8670  22 1A F0            		LD [PT3_PatsPtr],HL
     109:  00:8673  21 A9 00            		LD HL,169
     110:  00:8676  19                  		ADD HL,DE
     111:  00:8677  22 07 F0            		LD [PT3_OrnPtrs],HL
     112:  00:867A  21 69 00            		LD HL,105
     113:  00:867D  19                  		ADD HL,DE
     114:  00:867E  22 05 F0            		LD [PT3_SAMPTRS],HL
     115:  00:8681  21 00 F0            		LD HL,PT3_SETUP
     116:  00:8684  CB BE               		RES 7,[HL]
     117:  00:8686                      
     118:  00:8686                      		; --- note table data depacker ---
     119:  00:8686                      		; Depacks first 12 tones of each tone table
     120:  00:8686                      
     121:  00:8686  11 07 8C            		LD DE,T_PACK
     122:  00:8689  01 B1 F1            		LD BC,T1_+(2*49)-1
     123:  00:868C  1A                  .TP_0:		LD A,[DE]
     124:  00:868D  13                  		INC DE
     125:  00:868E  FE 1E               		CP 15*2
     126:  00:8690  30 06               		JR NC,.TP_1
     127:  00:8692  67                  		LD H,A
     128:  00:8693  1A                  		LD A,[DE]
     129:  00:8694  6F                  		LD L,A
     130:  00:8695  13                  		INC DE
     131:  00:8696  18 07               		JR .TP_2
     132:  00:8698  D5                  .TP_1:		PUSH DE
     133:  00:8699  16 00               		LD D,0
     134:  00:869B  5F                  		LD E,A
     135:  00:869C  19                  		ADD HL,DE
     136:  00:869D  19                  		ADD HL,DE
     137:  00:869E  D1                  		POP DE
     138:  00:869F  7C                  .TP_2:		LD A,H
     139:  00:86A0  02                  		LD [BC],A
     140:  00:86A1  0B                  		DEC BC
     141:  00:86A2  7D                  		LD A,L
     142:  00:86A3  02                  		LD [BC],A
     143:  00:86A4  0B                  		DEC BC
     144:  00:86A5  D6 F0               		SUB $F0
     145:  00:86A7  20 E3               		JR NZ,.TP_0
     146:  00:86A9                      
     147:  00:86A9                      		; --- INITIALIZE PT3 VARIABLES ---
     148:  00:86A9  21 23 F0            		LD HL,VARS
     149:  00:86AC  77                  		LD [HL],A
     150:  00:86AD  11 24 F0            		LD DE,VARS+1
     151:  00:86B0  01 2C 01            		LD BC,VAR0END-VARS-1
     152:  00:86B3  ED B0               		LDIR
     153:  00:86B5                      
     154:  00:86B5  3C                  		INC A
     155:  00:86B6  32 7A F0            		LD [DelyCnt],A
     156:  00:86B9  21 01 F0            		LD HL,$F001 ;H - CHNPRM_Volume, L - CHNPRM_NtSkCn
     157:  00:86BC  22 3E F0            		LD [ChanA+CHNPRM_NtSkCn],HL
     158:  00:86BF  22 5B F0            		LD [ChanB+CHNPRM_NtSkCn],HL
     159:  00:86C2  22 78 F0            		LD [ChanC+CHNPRM_NtSkCn],HL
     160:  00:86C5                      
     161:  00:86C5  21 03 8C            		LD HL,EMPTYSAMORN
     162:  00:86C8  22 12 F0            		LD [PT3_AdInPtA],HL ;ptr to zero
     163:  00:86CB  22 30 F0            		LD [ChanA+CHNPRM_OrnPtr],HL ;ornament 0 is "0,1,0"
     164:  00:86CE  22 4D F0            		LD [ChanB+CHNPRM_OrnPtr],HL ;in all versions from
     165:  00:86D1  22 6A F0            		LD [ChanC+CHNPRM_OrnPtr],HL ;3.xx to 3.6x and VTII
     166:  00:86D4                      
     167:  00:86D4  22 32 F0            		LD [ChanA+CHNPRM_SamPtr],HL ;S1 There is no default
     168:  00:86D7  22 4F F0            		LD [ChanB+CHNPRM_SamPtr],HL ;S2 sample in PT3, so, you
     169:  00:86DA  22 6C F0            		LD [ChanC+CHNPRM_SamPtr],HL ;S3 can comment S1,2,3; see
     170:  00:86DD                      					    ;also EMPTYSAMORN comment
     171:  00:86DD                      
     172:  00:86DD                      		; --- NOTE TABLE CREATOR (c) Ivan Roshin, adapted by SapphiRe ---
     173:  00:86DD  DD 7E FF            		LD A,[IX+99-100] ;TONE TABLE NUMBER
     174:  00:86E0  17                  		RLA
     175:  00:86E1  E6 07               		AND 7
     176:  00:86E3  21 B3 8B            		LD HL,NT_DATA
     177:  00:86E6  D5                  		PUSH DE
     178:  00:86E7  50                  		LD D,B		; ld d,0 (bc is 0000 after LDIR)
     179:  00:86E8  87                  		ADD A,A
     180:  00:86E9  5F                  		LD E,A
     181:  00:86EA  19                  		ADD HL,DE	; hl -> init of correct note table data
     182:  00:86EB  5E                  		LD E,[HL]
     183:  00:86EC  23                  		INC HL
     184:  00:86ED  CB 3B               		SRL E
     185:  00:86EF  9F                  		SBC A,A
     186:  00:86F0  E6 A7               		AND $A7			;$00 (NOP) or $A7 (AND A)
     187:  00:86F2  32 21 F0            		LD [PT3_NTL3],A		; CORRECT INSTRUCTION, DEPENDS OF SELECTED TABLE
     188:  00:86F5  3E C9               		LD A,$C9		; RET CODE
     189:  00:86F7  32 22 F0            		LD [PT3_NTL3+1],A	; RET PLACED
     190:  00:86FA  EB                  		EX DE,HL
     191:  00:86FB  C1                  		POP BC ;BC=T1_
     192:  00:86FC  09                  		ADD HL,BC
     193:  00:86FD                      
     194:  00:86FD  1A                  		LD A,[DE]                           
     195:  00:86FE                      
     196:  00:86FE  01 C3 8B            		LD BC,T_
     197:  00:8701  81                  		ADD A,C
     198:  00:8702  4F                  		LD C,A
     199:  00:8703  88                  		ADC A,B
     200:  00:8704                      
     201:  00:8704  91                  		SUB C
     202:  00:8705  47                  		LD B,A
     203:  00:8706  C5                  		PUSH BC
     204:  00:8707  11 80 F0            		LD DE,NT_
     205:  00:870A  D5                  		PUSH DE
     206:  00:870B                      
     207:  00:870B  06 0C               		LD B,12
     208:  00:870D  C5                  .L1:		PUSH BC
     209:  00:870E  4E                  		LD C,[HL]
     210:  00:870F  23                  		INC HL
     211:  00:8710  E5                  		PUSH HL
     212:  00:8711  46                  		LD B,[HL]
     213:  00:8712                      
     214:  00:8712  D5                  		PUSH DE
     215:  00:8713  EB                  		EX DE,HL
     216:  00:8714  11 17 00            		LD DE,23
     217:  00:8717  DD 26 08            		db $DD,$26,$08	;LD XH,8
     218:  00:871A                      
     219:  00:871A  CB 38               .L2:		SRL B
     220:  00:871C  CB 19               		RR C
     221:  00:871E  CD 21 F0            .L3:		CALL PT3_NTL3	;AND A or NOP
     222:  00:8721  79                  		LD A,C
     223:  00:8722  8A                  		ADC A,D	;=ADC 0
     224:  00:8723  77                  		LD [HL],A
     225:  00:8724  23                  		INC HL
     226:  00:8725  78                  		LD A,B
     227:  00:8726  8A                  		ADC A,D
     228:  00:8727  77                  		LD [HL],A
     229:  00:8728  19                  		ADD HL,DE
     230:  00:8729  DD 25               		db $DD,$25	;DEC XH
     231:  00:872B  20 ED               		JR NZ,.L2
     232:  00:872D                      
     233:  00:872D  D1                  		POP DE
     234:  00:872E  13                  		INC DE
     235:  00:872F  13                  		INC DE
     236:  00:8730  E1                  		POP HL
     237:  00:8731  23                  		INC HL
     238:  00:8732  C1                  		POP BC
     239:  00:8733  10 D8               		DJNZ .L1
     240:  00:8735                      
     241:  00:8735  E1                  		POP HL
     242:  00:8736  D1                  		POP DE
     243:  00:8737                      
     244:  00:8737  7B                  		LD A,E
     245:  00:8738  D5                  		PUSH DE
     246:  00:8739  11 CF 8B            		LD DE,TCOLD_1
     247:  00:873C  BB                  		CP E
     248:  00:873D  D1                  		POP DE
     249:  00:873E  20 05               		JR NZ,.CORR_1
     250:  00:8740  3E FD               		LD A,$FD
     251:  00:8742  32 AE F0            		LD [NT_+$2E],A
     252:  00:8745                      
     253:  00:8745  1A                  .CORR_1:	LD A,[DE]
     254:  00:8746  A7                  		AND A
     255:  00:8747  28 11               		JR Z,.TC_EXIT
     256:  00:8749  1F                  		RRA
     257:  00:874A  F5                  		PUSH AF
     258:  00:874B  87                  		ADD A,A
     259:  00:874C  4F                  		LD C,A
     260:  00:874D  09                  		ADD HL,BC
     261:  00:874E  F1                  		POP AF
     262:  00:874F  30 02               		JR NC,.CORR_2
     263:  00:8751  35                  		DEC [HL]
     264:  00:8752  35                  		DEC [HL]
     265:  00:8753  34                  .CORR_2:	INC [HL]
     266:  00:8754  A7                  		AND A
     267:  00:8755  ED 42               		SBC HL,BC
     268:  00:8757  13                  		INC DE
     269:  00:8758  18 EB               		JR .CORR_1
     270:  00:875A                      
     271:  00:875A                      .TC_EXIT:	;POP AF
     272:  00:875A                      
     273:  00:875A                      		; --- CREATE PT3 VOLUME TABLE (c) Ivan Roshin, adapted by SapphiRe ---
     274:  00:875A  21 11 00            		ld	hl,$11
     275:  00:875D  54                  		ld	d,h
     276:  00:875E  5C                  		ld	e,h
     277:  00:875F  DD 21 50 F1         		ld	IX,VT_+16
     278:  00:8763  06 0F               		ld	b,15
     279:  00:8765  E5                  .INITV1:	push	hl
     280:  00:8766  19                  		add	hl,de
     281:  00:8767  EB                  		ex	de,hl
     282:  00:8768  ED 62               		sbc	hl,hl
     283:  00:876A  48                  		ld	c,b
     284:  00:876B  06 10               		ld	b,16
     285:  00:876D  7D                  .INITV2:	ld	a,l
     286:  00:876E  17                  		rla
     287:  00:876F  7C                  		ld	a,h
     288:  00:8770  CE 00               		adc	a,0
     289:  00:8772  DD 77 00            		ld	[ix],a
     290:  00:8775  DD 23               		inc	ix
     291:  00:8777  19                  		add	hl,de
     292:  00:8778  10 F3               		djnz	.INITV2
     293:  00:877A  E1                  		pop	hl
     294:  00:877B  7B                  		ld	a,e
     295:  00:877C  FE 77               		cp	$77
     296:  00:877E  20 01               		jr	nz,.INITV3
     297:  00:8780  1C                  		inc	e
     298:  00:8781  41                  .INITV3:	ld	b,c
     299:  00:8782  10 E1               		djnz	.INITV1
     300:  00:8784                      
     301:  00:8784  C9                  		RET
     302:  00:8785                      
     303:  00:8785                      		;pattern decoder
     304:  00:8785  DD 36 08 00         PD_OrSm:	LD [IX+(CHNPRM_Env_En-12)],0
     305:  00:8789  CD 0F 89            		CALL SETORN
     306:  00:878C  0A                  		LD A,[BC]
     307:  00:878D  03                  		INC BC
     308:  00:878E  0F                  		RRCA
     309:  00:878F                      
     310:  00:878F  87                  PD_SAM:		ADD A,A
     311:  00:8790  5F                  PD_SAM_:	LD E,A
     312:  00:8791  16 00               		LD D,0
     313:  00:8793  2A 05 F0            		LD HL,[PT3_SAMPTRS]
     314:  00:8796  19                  		ADD HL,DE
     315:  00:8797  5E                  		LD E,[HL]
     316:  00:8798  23                  		INC HL
     317:  00:8799  56                  		LD D,[HL]
     318:  00:879A  2A 01 F0            		LD HL,[PT3_MODADDR]
     319:  00:879D  19                  		ADD HL,DE
     320:  00:879E  DD 75 03            		LD [IX+(CHNPRM_SamPtr-12)],L
     321:  00:87A1  DD 74 04            		LD [IX+(CHNPRM_SamPtr+1-12)],H
     322:  00:87A4  18 41               		JR PD_LOOP
     323:  00:87A6                      
     324:  00:87A6  07                  PD_VOL:		RLCA
     325:  00:87A7  07                  		RLCA
     326:  00:87A8  07                  		RLCA
     327:  00:87A9  07                  		RLCA
     328:  00:87AA  DD 77 10            		LD [IX+(CHNPRM_Volume-12)],A
     329:  00:87AD  18 3B               		JR PD_LP2
     330:  00:87AF                      	
     331:  00:87AF  DD 77 08            PD_EOff:	LD [IX+(CHNPRM_Env_En-12)],A
     332:  00:87B2  DD 77 F4            		LD [IX+(CHNPRM_PsInOr-12)],A
     333:  00:87B5  18 33               		JR PD_LP2
     334:  00:87B7                      
     335:  00:87B7  3D                  PD_SorE:	DEC A
     336:  00:87B8  20 07               		JR NZ,PD_ENV
     337:  00:87BA  0A                  		LD A,[BC]
     338:  00:87BB  03                  		INC BC
     339:  00:87BC  DD 77 05            		LD [IX+(CHNPRM_NNtSkp-12)],A
     340:  00:87BF  18 29               		JR PD_LP2
     341:  00:87C1                      
     342:  00:87C1  CD F3 88            PD_ENV:		CALL SETENV
     343:  00:87C4  18 24               		JR PD_LP2
     344:  00:87C6                      
     345:  00:87C6  CD 0F 89            PD_ORN:		CALL SETORN
     346:  00:87C9  18 1C               		JR PD_LOOP
     347:  00:87CB                             
     348:  00:87CB  DD 77 08            PD_ESAM:	LD [IX+(CHNPRM_Env_En-12)],A
     349:  00:87CE  DD 77 F4            		LD [IX+(CHNPRM_PsInOr-12)],A
     350:  00:87D1  C4 F3 88            		CALL NZ,SETENV
     351:  00:87D4  0A                  		LD A,[BC]
     352:  00:87D5  03                  		INC BC
     353:  00:87D6  18 B8               		JR PD_SAM_
     354:  00:87D8                      
     355:  00:87D8  DD 7E 06            PTDECOD:	LD A,[IX+(CHNPRM_Note-12)]
     356:  00:87DB  32 0F F0            		LD [PT3_PrNote],A
     357:  00:87DE  DD 6E FA            		LD L,[IX+(CHNPRM_CrTnSl-12)]
     358:  00:87E1  DD 66 FB            		LD H,[IX+(CHNPRM_CrTnSl+1-12)]
     359:  00:87E4  22 10 F0            		LD [PT3_PrSlide],HL
     360:  00:87E7                      
     361:  00:87E7  11 10 20            PD_LOOP:	LD DE,$2010
     362:  00:87EA  0A                  PD_LP2:		LD A,[BC]
     363:  00:87EB  03                  		INC BC
     364:  00:87EC  83                  		ADD A,E
     365:  00:87ED  38 96               		JR C,PD_OrSm
     366:  00:87EF  82                  		ADD A,D
     367:  00:87F0  28 4A               		JR Z,PD_FIN
     368:  00:87F2  38 9B               		JR C,PD_SAM
     369:  00:87F4  83                  		ADD A,E
     370:  00:87F5  28 25               		JR Z,PD_REL
     371:  00:87F7  38 AD               		JR C,PD_VOL
     372:  00:87F9  83                  		ADD A,E
     373:  00:87FA  28 B3               		JR Z,PD_EOff
     374:  00:87FC  38 B9               		JR C,PD_SorE
     375:  00:87FE  C6 60               		ADD A,96
     376:  00:8800  38 20               		JR C,PD_NOTE
     377:  00:8802  83                  		ADD A,E
     378:  00:8803  38 C1               		JR C,PD_ORN
     379:  00:8805  82                  		ADD A,D
     380:  00:8806  38 0F               		JR C,PD_NOIS
     381:  00:8808  83                  		ADD A,E
     382:  00:8809  38 C0               		JR C,PD_ESAM
     383:  00:880B  87                  		ADD A,A
     384:  00:880C  5F                  		LD E,A
     385:  00:880D  21 48 68            		LD HL,(SPCCOMS+$DF20) % 65536	; Adapted from original Speccy version (saves 6 bytes)
     386:  00:8810  19                  		ADD HL,DE
     387:  00:8811  5E                  		LD E,[HL]
     388:  00:8812  23                  		INC HL
     389:  00:8813  56                  		LD D,[HL]
     390:  00:8814  D5                  		PUSH DE
     391:  00:8815  18 D0               		JR PD_LOOP
     392:  00:8817                      
     393:  00:8817  32 7E F0            PD_NOIS:	LD [Ns_Base],A
     394:  00:881A  18 CE               		JR PD_LP2
     395:  00:881C                      
     396:  00:881C  DD CB 09 86         PD_REL:		RES 0,[IX+(CHNPRM_Flags-12)]
     397:  00:8820  18 08               		JR PD_RES
     398:  00:8822                      	
     399:  00:8822  DD 77 06            PD_NOTE:	LD [IX+(CHNPRM_Note-12)],A
     400:  00:8825  DD CB 09 C6         		SET 0,[IX+(CHNPRM_Flags-12)]
     401:  00:8829  AF                  		XOR A
     402:  00:882A                      
     403:  00:882A  ED 73 09 F0         PD_RES:		LD [PT3_PDSP],SP
     404:  00:882E  DD F9               		LD SP,IX
     405:  00:8830  67                  		LD H,A
     406:  00:8831  6F                  		LD L,A
     407:  00:8832  E5                  		PUSH HL
     408:  00:8833  E5                  		PUSH HL
     409:  00:8834  E5                  		PUSH HL
     410:  00:8835  E5                  		PUSH HL
     411:  00:8836  E5                  		PUSH HL
     412:  00:8837  E5                  		PUSH HL
     413:  00:8838  ED 7B 09 F0         		LD SP,[PT3_PDSP]
     414:  00:883C                      
     415:  00:883C  DD 7E 05            PD_FIN:		LD A,[IX+(CHNPRM_NNtSkp-12)]
     416:  00:883F  DD 77 0F            		LD [IX+(CHNPRM_NtSkCn-12)],A
     417:  00:8842  C9                  		RET
     418:  00:8843                      
     419:  00:8843  DD CB 09 96         C_PORTM:	RES 2,[IX+(CHNPRM_Flags-12)]
     420:  00:8847  0A                  		LD A,[BC]
     421:  00:8848  03                  		INC BC
     422:  00:8849                      		;SKIP PRECALCULATED TONE DELTA [BECAUSE
     423:  00:8849                      		;CANNOT BE RIGHT AFTER PT3 COMPILATION]
     424:  00:8849  03                  		INC BC
     425:  00:884A  03                  		INC BC
     426:  00:884B  DD 77 0A            		LD [IX+(CHNPRM_TnSlDl-12)],A
     427:  00:884E  DD 77 F9            		LD [IX+(CHNPRM_TSlCnt-12)],A
     428:  00:8851  11 80 F0            		LD DE,NT_
     429:  00:8854  DD 7E 06            		LD A,[IX+(CHNPRM_Note-12)]
     430:  00:8857  DD 77 07            		LD [IX+(CHNPRM_SlToNt-12)],A
     431:  00:885A  87                  		ADD A,A
     432:  00:885B  6F                  		LD L,A
     433:  00:885C  26 00               		LD H,0
     434:  00:885E  19                  		ADD HL,DE
     435:  00:885F  7E                  		LD A,[HL]
     436:  00:8860  23                  		INC HL
     437:  00:8861  66                  		LD H,[HL]
     438:  00:8862  6F                  		LD L,A
     439:  00:8863  E5                  		PUSH HL
     440:  00:8864  3A 0F F0            		LD A,[PT3_PrNote]
     441:  00:8867  DD 77 06            		LD [IX+(CHNPRM_Note-12)],A
     442:  00:886A  87                  		ADD A,A
     443:  00:886B  6F                  		LD L,A
     444:  00:886C  26 00               		LD H,0
     445:  00:886E  19                  		ADD HL,DE
     446:  00:886F  5E                  		LD E,[HL]
     447:  00:8870  23                  		INC HL
     448:  00:8871  56                  		LD D,[HL]
     449:  00:8872  E1                  		POP HL
     450:  00:8873  ED 52               		SBC HL,DE
     451:  00:8875  DD 75 0D            		LD [IX+(CHNPRM_TnDelt-12)],L
     452:  00:8878  DD 74 0E            		LD [IX+(CHNPRM_TnDelt+1-12)],H
     453:  00:887B  ED 5B 10 F0         		LD DE,[PT3_PrSlide]
     454:  00:887F  DD 73 FA            		LD [IX+(CHNPRM_CrTnSl-12)],E
     455:  00:8882  DD 72 FB            		LD [IX+(CHNPRM_CrTnSl+1-12)],D
     456:  00:8885  0A                  		LD A,[BC] ;SIGNED TONE STEP
     457:  00:8886  03                  		INC BC
     458:  00:8887  08                  		EX AF,AF'
     459:  00:8888  0A                  		LD A,[BC]
     460:  00:8889  03                  		INC BC
     461:  00:888A  A7                  		AND A
     462:  00:888B  28 01               		JR Z,.NOSIG
     463:  00:888D  EB                  		EX DE,HL
     464:  00:888E  ED 52               .NOSIG:	SBC HL,DE
     465:  00:8890  F2 98 88            		JP P,SET_STP
     466:  00:8893  2F                  		CPL
     467:  00:8894  08                  		EX AF,AF'
     468:  00:8895  ED 44               		NEG
     469:  00:8897  08                  		EX AF,AF'
     470:  00:8898  DD 77 0C            SET_STP:	LD [IX+(CHNPRM_TSlStp+1-12)],A
     471:  00:889B  08                  		EX AF,AF'
     472:  00:889C  DD 77 0B            		LD [IX+(CHNPRM_TSlStp-12)],A
     473:  00:889F  DD 36 FE 00         		LD [IX+(CHNPRM_COnOff-12)],0
     474:  00:88A3  C9                  		RET
     475:  00:88A4                      
     476:  00:88A4  DD CB 09 D6         C_GLISS:	SET 2,[IX+(CHNPRM_Flags-12)]
     477:  00:88A8  0A                  		LD A,[BC]
     478:  00:88A9  03                  		INC BC
     479:  00:88AA  DD 77 0A            		LD [IX+(CHNPRM_TnSlDl-12)],A
     480:  00:88AD  DD 77 F9            		LD [IX+(CHNPRM_TSlCnt-12)],A
     481:  00:88B0  0A                  		LD A,[BC]
     482:  00:88B1  03                  		INC BC
     483:  00:88B2  08                  		EX AF,AF'
     484:  00:88B3  0A                  		LD A,[BC]
     485:  00:88B4  03                  		INC BC
     486:  00:88B5  18 E1               		JR SET_STP
     487:  00:88B7                      
     488:  00:88B7  0A                  C_SMPOS:	LD A,[BC]
     489:  00:88B8  03                  		INC BC
     490:  00:88B9  DD 77 F5            		LD [IX+(CHNPRM_PsInSm-12)],A
     491:  00:88BC  C9                  		RET
     492:  00:88BD                      
     493:  00:88BD  0A                  C_ORPOS:	LD A,[BC]
     494:  00:88BE  03                  		INC BC
     495:  00:88BF  DD 77 F4            		LD [IX+(CHNPRM_PsInOr-12)],A
     496:  00:88C2  C9                  		RET
     497:  00:88C3                      
     498:  00:88C3  0A                  C_VIBRT:	LD A,[BC]
     499:  00:88C4  03                  		INC BC
     500:  00:88C5  DD 77 FF            		LD [IX+(CHNPRM_OnOffD-12)],A
     501:  00:88C8  DD 77 FE            		LD [IX+(CHNPRM_COnOff-12)],A
     502:  00:88CB  0A                  		LD A,[BC]
     503:  00:88CC  03                  		INC BC
     504:  00:88CD  DD 77 00            		LD [IX+(CHNPRM_OffOnD-12)],A
     505:  00:88D0  AF                  		XOR A
     506:  00:88D1  DD 77 F9            		LD [IX+(CHNPRM_TSlCnt-12)],A
     507:  00:88D4  DD 77 FA            		LD [IX+(CHNPRM_CrTnSl-12)],A
     508:  00:88D7  DD 77 FB            		LD [IX+(CHNPRM_CrTnSl+1-12)],A
     509:  00:88DA  C9                  		RET
     510:  00:88DB                      
     511:  00:88DB  0A                  C_ENGLS:	LD A,[BC]
     512:  00:88DC  03                  		INC BC
     513:  00:88DD  32 1E F0            		LD [PT3_Env_Del],A
     514:  00:88E0  32 7D F0            		LD [CurEDel],A
     515:  00:88E3  0A                  		LD A,[BC]
     516:  00:88E4  03                  		INC BC
     517:  00:88E5  6F                  		LD L,A
     518:  00:88E6  0A                  		LD A,[BC]
     519:  00:88E7  03                  		INC BC
     520:  00:88E8  67                  		LD H,A
     521:  00:88E9  22 1F F0            		LD [PT3_ESldAdd],HL
     522:  00:88EC  C9                  		RET
     523:  00:88ED                      
     524:  00:88ED  0A                  C_DELAY:	LD A,[BC]
     525:  00:88EE  03                  		INC BC
     526:  00:88EF  32 1C F0            		LD [PT3_Delay],A
     527:  00:88F2  C9                  		RET
     528:  00:88F3                      	
     529:  00:88F3  DD 73 08            SETENV:		LD [IX+(CHNPRM_Env_En-12)],E
     530:  00:88F6  32 4D F1            		LD [AYREGS+AR_EnvTp],A
     531:  00:88F9  0A                  		LD A,[BC]
     532:  00:88FA  03                  		INC BC
     533:  00:88FB  67                  		LD H,A
     534:  00:88FC  0A                  		LD A,[BC]
     535:  00:88FD  03                  		INC BC
     536:  00:88FE  6F                  		LD L,A
     537:  00:88FF  22 4E F1            		LD [EnvBase],HL
     538:  00:8902  AF                  		XOR A
     539:  00:8903  DD 77 F4            		LD [IX+(CHNPRM_PsInOr-12)],A
     540:  00:8906  32 7D F0            		LD [CurEDel],A
     541:  00:8909  67                  		LD H,A
     542:  00:890A  6F                  		LD L,A
     543:  00:890B  22 7B F0            		LD [CurESld],HL
     544:  00:890E  C9                  C_NOP:		RET
     545:  00:890F                      
     546:  00:890F  87                  SETORN:		ADD A,A
     547:  00:8910  5F                  		LD E,A
     548:  00:8911  16 00               		LD D,0
     549:  00:8913  DD 72 F4            		LD [IX+(CHNPRM_PsInOr-12)],D
     550:  00:8916  2A 07 F0            		LD HL,[PT3_OrnPtrs]
     551:  00:8919  19                  		ADD HL,DE
     552:  00:891A  5E                  		LD E,[HL]
     553:  00:891B  23                  		INC HL
     554:  00:891C  56                  		LD D,[HL]
     555:  00:891D  2A 01 F0            		LD HL,[PT3_MODADDR]
     556:  00:8920  19                  		ADD HL,DE
     557:  00:8921  DD 75 01            		LD [IX+(CHNPRM_OrnPtr-12)],L
     558:  00:8924  DD 74 02            		LD [IX+(CHNPRM_OrnPtr+1-12)],H
     559:  00:8927  C9                  		RET
     560:  00:8928                      
     561:  00:8928                      		;ALL 16 ADDRESSES TO PROTECT FROM BROKEN PT3 MODULES
     562:  00:8928  0E 89               SPCCOMS:	dw C_NOP
     563:  00:892A  A4 88               		dw C_GLISS
     564:  00:892C  43 88               		dw C_PORTM
     565:  00:892E  B7 88               		dw C_SMPOS
     566:  00:8930  BD 88               		dw C_ORPOS
     567:  00:8932  C3 88               		dw C_VIBRT
     568:  00:8934  0E 89               		dw C_NOP
     569:  00:8936  0E 89               		dw C_NOP
     570:  00:8938  DB 88               		dw C_ENGLS
     571:  00:893A  ED 88               		dw C_DELAY
     572:  00:893C  0E 89               		dw C_NOP
     573:  00:893E  0E 89               		dw C_NOP
     574:  00:8940  0E 89               		dw C_NOP
     575:  00:8942  0E 89               		dw C_NOP
     576:  00:8944  0E 89               		dw C_NOP
     577:  00:8946  0E 89               		dw C_NOP
     578:  00:8948                      
     579:  00:8948  AF                  CHREGS:		XOR A
     580:  00:8949  32 4A F1            		LD [AYREGS+AR_AmplC],A
     581:  00:894C  DD CB 15 46         		BIT 0,[IX+CHNPRM_Flags]
     582:  00:8950  E5                  		PUSH HL
     583:  00:8951  CA 77 8A            		JP Z,.CH_EXIT
     584:  00:8954  ED 73 0B F0         		LD [PT3_CSP],SP
     585:  00:8958  DD 6E 0D            		LD L,[IX+CHNPRM_OrnPtr]
     586:  00:895B  DD 66 0E            		LD H,[IX+CHNPRM_OrnPtr+1]
     587:  00:895E  F9                  		LD SP,HL
     588:  00:895F  D1                  		POP DE
     589:  00:8960  67                  		LD H,A
     590:  00:8961  DD 7E 00            		LD A,[IX+CHNPRM_PsInOr]
     591:  00:8964  6F                  		LD L,A
     592:  00:8965  39                  		ADD HL,SP
     593:  00:8966  3C                  		INC A
     594:  00:8967  BA                  		CP D
     595:  00:8968  38 01               		JR C,.CH_ORPS
     596:  00:896A  7B                  		LD A,E
     597:  00:896B  DD 77 00            .CH_ORPS:	LD [IX+CHNPRM_PsInOr],A
     598:  00:896E  DD 7E 12            		LD A,[IX+CHNPRM_Note]
     599:  00:8971  86                  		ADD A,[HL]
     600:  00:8972  F2 76 89            		JP P,.CH_NTP
     601:  00:8975  AF                  		XOR A
     602:  00:8976  FE 60               .CH_NTP:	CP 96
     603:  00:8978  38 02               		JR C,.CH_NOK
     604:  00:897A  3E 5F               		LD A,95
     605:  00:897C  87                  .CH_NOK:	ADD A,A
     606:  00:897D  08                  		EX AF,AF'
     607:  00:897E  DD 6E 0F            		LD L,[IX+CHNPRM_SamPtr]
     608:  00:8981  DD 66 10            		LD H,[IX+CHNPRM_SamPtr+1]
     609:  00:8984  F9                  		LD SP,HL
     610:  00:8985  D1                  		POP DE
     611:  00:8986  26 00               		LD H,0
     612:  00:8988  DD 7E 01            		LD A,[IX+CHNPRM_PsInSm]
     613:  00:898B  47                  		LD B,A
     614:  00:898C  87                  		ADD A,A
     615:  00:898D  87                  		ADD A,A
     616:  00:898E  6F                  		LD L,A
     617:  00:898F  39                  		ADD HL,SP
     618:  00:8990  F9                  		LD SP,HL
     619:  00:8991  78                  		LD A,B
     620:  00:8992  3C                  		INC A
     621:  00:8993  BA                  		CP D
     622:  00:8994  38 01               		JR C,.CH_SMPS
     623:  00:8996  7B                  		LD A,E
     624:  00:8997  DD 77 01            .CH_SMPS:	LD [IX+CHNPRM_PsInSm],A
     625:  00:899A  C1                  		POP BC
     626:  00:899B  E1                  		POP HL
     627:  00:899C  DD 5E 08            		LD E,[IX+CHNPRM_TnAcc]
     628:  00:899F  DD 56 09            		LD D,[IX+CHNPRM_TnAcc+1]
     629:  00:89A2  19                  		ADD HL,DE
     630:  00:89A3  CB 70               		BIT 6,B
     631:  00:89A5  28 06               		JR Z,.CH_NOAC
     632:  00:89A7  DD 75 08            		LD [IX+CHNPRM_TnAcc],L
     633:  00:89AA  DD 74 09            		LD [IX+CHNPRM_TnAcc+1],H
     634:  00:89AD  EB                  .CH_NOAC:	EX DE,HL
     635:  00:89AE  08                  		EX AF,AF'
     636:  00:89AF  6F                  		LD L,A
     637:  00:89B0  26 00               		LD H,0
     638:  00:89B2  31 80 F0            		LD SP,NT_
     639:  00:89B5  39                  		ADD HL,SP
     640:  00:89B6  F9                  		LD SP,HL
     641:  00:89B7  E1                  		POP HL
     642:  00:89B8  19                  		ADD HL,DE
     643:  00:89B9  DD 5E 06            		LD E,[IX+CHNPRM_CrTnSl]
     644:  00:89BC  DD 56 07            		LD D,[IX+CHNPRM_CrTnSl+1]
     645:  00:89BF  19                  		ADD HL,DE
     646:  00:89C0  ED 7B 0B F0         		LD SP,[PT3_CSP]
     647:  00:89C4  E3                  		EX [SP],HL
     648:  00:89C5  AF                  		XOR A
     649:  00:89C6  DD B6 05            		OR [IX+CHNPRM_TSlCnt]
     650:  00:89C9  28 3E               		JR Z,.CH_AMP
     651:  00:89CB  DD 35 05            		DEC [IX+CHNPRM_TSlCnt]
     652:  00:89CE  20 39               		JR NZ,.CH_AMP
     653:  00:89D0  DD 7E 16            		LD A,[IX+CHNPRM_TnSlDl]
     654:  00:89D3  DD 77 05            		LD [IX+CHNPRM_TSlCnt],A
     655:  00:89D6  DD 6E 17            		LD L,[IX+CHNPRM_TSlStp]
     656:  00:89D9  DD 66 18            		LD H,[IX+CHNPRM_TSlStp+1]
     657:  00:89DC  7C                  		LD A,H
     658:  00:89DD  19                  		ADD HL,DE
     659:  00:89DE  DD 75 06            		LD [IX+CHNPRM_CrTnSl],L
     660:  00:89E1  DD 74 07            		LD [IX+CHNPRM_CrTnSl+1],H
     661:  00:89E4  DD CB 15 56         		BIT 2,[IX+CHNPRM_Flags]
     662:  00:89E8  20 1F               		JR NZ,.CH_AMP
     663:  00:89EA  DD 5E 19            		LD E,[IX+CHNPRM_TnDelt]
     664:  00:89ED  DD 56 1A            		LD D,[IX+CHNPRM_TnDelt+1]
     665:  00:89F0  A7                  		AND A
     666:  00:89F1  28 01               		JR Z,.CH_STPP
     667:  00:89F3  EB                  		EX DE,HL
     668:  00:89F4  ED 52               .CH_STPP:	SBC HL,DE
     669:  00:89F6  FA 09 8A            		JP M,.CH_AMP
     670:  00:89F9  DD 7E 13            		LD A,[IX+CHNPRM_SlToNt]
     671:  00:89FC  DD 77 12            		LD [IX+CHNPRM_Note],A
     672:  00:89FF  AF                  		XOR A
     673:  00:8A00  DD 77 05            		LD [IX+CHNPRM_TSlCnt],A
     674:  00:8A03  DD 77 06            		LD [IX+CHNPRM_CrTnSl],A
     675:  00:8A06  DD 77 07            		LD [IX+CHNPRM_CrTnSl+1],A
     676:  00:8A09  DD 7E 02            .CH_AMP:	LD A,[IX+CHNPRM_CrAmSl]
     677:  00:8A0C  CB 79               		BIT 7,C
     678:  00:8A0E  28 13               		JR Z,.CH_NOAM
     679:  00:8A10  CB 71               		BIT 6,C
     680:  00:8A12  28 07               		JR Z,.CH_AMIN
     681:  00:8A14  FE 0F               		CP 15
     682:  00:8A16  28 0B               		JR Z,.CH_NOAM
     683:  00:8A18  3C                  		INC A
     684:  00:8A19  18 05               		JR .CH_SVAM
     685:  00:8A1B  FE F1               .CH_AMIN:	CP -15
     686:  00:8A1D  28 04               		JR Z,.CH_NOAM
     687:  00:8A1F  3D                  		DEC A
     688:  00:8A20  DD 77 02            .CH_SVAM:	LD [IX+CHNPRM_CrAmSl],A
     689:  00:8A23  6F                  .CH_NOAM:	LD L,A
     690:  00:8A24  78                  		LD A,B
     691:  00:8A25  E6 0F               		AND 15
     692:  00:8A27  85                  		ADD A,L
     693:  00:8A28  F2 2C 8A            		JP P,.CH_APOS
     694:  00:8A2B  AF                  		XOR A
     695:  00:8A2C  FE 10               .CH_APOS:	CP 16
     696:  00:8A2E  38 02               		JR C,.CH_VOL
     697:  00:8A30  3E 0F               		LD A,15
     698:  00:8A32  DD B6 1C            .CH_VOL:	OR [IX+CHNPRM_Volume]
     699:  00:8A35  6F                  		LD L,A
     700:  00:8A36  26 00               		LD H,0
     701:  00:8A38  11 40 F1            		LD DE,VT_
     702:  00:8A3B  19                  		ADD HL,DE
     703:  00:8A3C  7E                  		LD A,[HL]
     704:  00:8A3D  CB 41               .CH_ENV:	BIT 0,C
     705:  00:8A3F  20 03               		JR NZ,.CH_NOEN
     706:  00:8A41  DD B6 14            		OR [IX+CHNPRM_Env_En]
     707:  00:8A44  32 4A F1            .CH_NOEN:	LD [AYREGS+AR_AmplC],A
     708:  00:8A47  CB 78               		BIT 7,B
     709:  00:8A49  79                  		LD A,C
     710:  00:8A4A  28 19               		JR Z,.NO_ENSL
     711:  00:8A4C  17                  		RLA
     712:  00:8A4D  17                  		RLA
     713:  00:8A4E  CB 2F               		SRA A
     714:  00:8A50  CB 2F               		SRA A
     715:  00:8A52  CB 2F               		SRA A
     716:  00:8A54  DD 86 04            		ADD A,[IX+CHNPRM_CrEnSl] ;SEE COMMENT BELOW
     717:  00:8A57  CB 68               		BIT 5,B
     718:  00:8A59  28 03               		JR Z,.NO_ENAC
     719:  00:8A5B  DD 77 04            		LD [IX+CHNPRM_CrEnSl],A
     720:  00:8A5E  21 1D F0            .NO_ENAC:	LD HL,PT3_AddToEn
     721:  00:8A61  86                  		ADD A,[HL] ;BUG IN PT3 - NEED WORD HERE.
     722:  00:8A62                      			   ;FIX IT IN NEXT VERSION?
     723:  00:8A62  77                  		LD [HL],A
     724:  00:8A63  18 0E               		JR .CH_MIX
     725:  00:8A65  1F                  .NO_ENSL:	RRA
     726:  00:8A66  DD 86 03            		ADD A,[IX+CHNPRM_CrNsSl]
     727:  00:8A69  32 7F F0            		LD [AddToNs],A
     728:  00:8A6C  CB 68               		BIT 5,B
     729:  00:8A6E  28 03               		JR Z,.CH_MIX
     730:  00:8A70  DD 77 03            		LD [IX+CHNPRM_CrNsSl],A
     731:  00:8A73  78                  .CH_MIX:	LD A,B
     732:  00:8A74  1F                  		RRA
     733:  00:8A75  E6 48               		AND $48
     734:  00:8A77  21 47 F1            .CH_EXIT:	LD HL,AYREGS+AR_Mixer
     735:  00:8A7A  B6                  		OR [HL]
     736:  00:8A7B  0F                  		RRCA
     737:  00:8A7C  77                  		LD [HL],A
     738:  00:8A7D  E1                  		POP HL
     739:  00:8A7E  AF                  		XOR A
     740:  00:8A7F  DD B6 0A            		OR [IX+CHNPRM_COnOff]
     741:  00:8A82  C8                  		RET Z
     742:  00:8A83  DD 35 0A            		DEC [IX+CHNPRM_COnOff]
     743:  00:8A86  C0                  		RET NZ
     744:  00:8A87  DD AE 15            		XOR [IX+CHNPRM_Flags]
     745:  00:8A8A  DD 77 15            		LD [IX+CHNPRM_Flags],A
     746:  00:8A8D  1F                  		RRA
     747:  00:8A8E  DD 7E 0B            		LD A,[IX+CHNPRM_OnOffD]
     748:  00:8A91  38 03               		JR C,.CH_ONDL
     749:  00:8A93  DD 7E 0C            		LD A,[IX+CHNPRM_OffOnD]
     750:  00:8A96  DD 77 0A            .CH_ONDL:	LD [IX+CHNPRM_COnOff],A
     751:  00:8A99  C9                  		RET
     752:  00:8A9A                      
     753:  00:8A9A  AF                  PT3_PLAY:	XOR A
     754:  00:8A9B  32 1D F0            		LD [PT3_AddToEn],A
     755:  00:8A9E  32 47 F1            		LD [AYREGS+AR_Mixer],A
     756:  00:8AA1  3D                  		DEC A
     757:  00:8AA2  32 4D F1            		LD [AYREGS+AR_EnvTp],A
     758:  00:8AA5  21 7A F0            		LD HL,DelyCnt
     759:  00:8AA8  35                  		DEC [HL]
     760:  00:8AA9  C2 30 8B            		JP NZ,.PL2
     761:  00:8AAC  21 3E F0            		LD HL,ChanA+CHNPRM_NtSkCn
     762:  00:8AAF  35                  		DEC [HL]
     763:  00:8AB0  20 4E               		JR NZ,.PL1B
     764:  00:8AB2  ED 4B 12 F0         		LD BC,[PT3_AdInPtA]
     765:  00:8AB6  0A                  		LD A,[BC]
     766:  00:8AB7  A7                  		AND A
     767:  00:8AB8  20 3B               		JR NZ,.PL1A
     768:  00:8ABA  57                  		LD D,A
     769:  00:8ABB  32 7E F0            		LD [Ns_Base],A
     770:  00:8ABE  2A 03 F0            		LD HL,[PT3_CrPsPtr]
     771:  00:8AC1  23                  		INC HL
     772:  00:8AC2  7E                  		LD A,[HL]
     773:  00:8AC3  3C                  		INC A
     774:  00:8AC4  20 08               		JR NZ,.PLNLP
     775:  00:8AC6  CD 30 86            		CALL CHECKLP
     776:  00:8AC9  2A 18 F0            		LD HL,[PT3_LPosPtr]
     777:  00:8ACC  7E                  		LD A,[HL]
     778:  00:8ACD  3C                  		INC A
     779:  00:8ACE  22 03 F0            .PLNLP:	LD [PT3_CrPsPtr],HL
     780:  00:8AD1  3D                  		DEC A
     781:  00:8AD2  87                  		ADD A,A
     782:  00:8AD3  5F                  		LD E,A
     783:  00:8AD4  CB 12               		RL D
     784:  00:8AD6  2A 1A F0            		LD HL,[PT3_PatsPtr]
     785:  00:8AD9  19                  		ADD HL,DE
     786:  00:8ADA  ED 5B 01 F0         		LD DE,[PT3_MODADDR]
     787:  00:8ADE  ED 73 0D F0         		LD [PT3_PSP],SP
     788:  00:8AE2  F9                  		LD SP,HL
     789:  00:8AE3  E1                  		POP HL
     790:  00:8AE4  19                  		ADD HL,DE
     791:  00:8AE5  44                  		LD B,H
     792:  00:8AE6  4D                  		LD C,L
     793:  00:8AE7  E1                  		POP HL
     794:  00:8AE8  19                  		ADD HL,DE
     795:  00:8AE9  22 14 F0            		LD [PT3_AdInPtB],HL
     796:  00:8AEC  E1                  		POP HL
     797:  00:8AED  19                  		ADD HL,DE
     798:  00:8AEE  22 16 F0            		LD [PT3_AdInPtC],HL
     799:  00:8AF1  ED 7B 0D F0         		LD SP,[PT3_PSP]
     800:  00:8AF5                      
     801:  00:8AF5  DD 21 2F F0         .PL1A:		LD IX,ChanA+12
     802:  00:8AF9  CD D8 87            		CALL PTDECOD
     803:  00:8AFC  ED 43 12 F0         		LD [PT3_AdInPtA],BC
     804:  00:8B00                      
     805:  00:8B00  21 5B F0            .PL1B:		LD HL,ChanB+CHNPRM_NtSkCn
     806:  00:8B03  35                  		DEC [HL]
     807:  00:8B04  20 0F               		JR NZ,.PL1C
     808:  00:8B06  DD 21 4C F0         		LD IX,ChanB+12
     809:  00:8B0A  ED 4B 14 F0         		LD BC,[PT3_AdInPtB]
     810:  00:8B0E  CD D8 87            		CALL PTDECOD
     811:  00:8B11  ED 43 14 F0         		LD [PT3_AdInPtB],BC
     812:  00:8B15                      
     813:  00:8B15  21 78 F0            .PL1C:		LD HL,ChanC+CHNPRM_NtSkCn
     814:  00:8B18  35                  		DEC [HL]
     815:  00:8B19  20 0F               		JR NZ,.PL1D
     816:  00:8B1B  DD 21 69 F0         		LD IX,ChanC+12
     817:  00:8B1F  ED 4B 16 F0         		LD BC,[PT3_AdInPtC]
     818:  00:8B23  CD D8 87            		CALL PTDECOD
     819:  00:8B26  ED 43 16 F0         		LD [PT3_AdInPtC],BC
     820:  00:8B2A                      
     821:  00:8B2A  3A 1C F0            .PL1D:		LD A,[PT3_Delay]
     822:  00:8B2D  32 7A F0            		LD [DelyCnt],A
     823:  00:8B30                      
     824:  00:8B30  DD 21 23 F0         .PL2:		LD IX,ChanA
     825:  00:8B34  2A 40 F1            		LD HL,[AYREGS+AR_TonA]
     826:  00:8B37  CD 48 89            		CALL CHREGS
     827:  00:8B3A  22 40 F1            		LD [AYREGS+AR_TonA],HL
     828:  00:8B3D  3A 4A F1            		LD A,[AYREGS+AR_AmplC]
     829:  00:8B40  32 48 F1            		LD [AYREGS+AR_AmplA],A
     830:  00:8B43  DD 21 40 F0         		LD IX,ChanB
     831:  00:8B47  2A 42 F1            		LD HL,[AYREGS+AR_TonB]
     832:  00:8B4A  CD 48 89            		CALL CHREGS
     833:  00:8B4D  22 42 F1            		LD [AYREGS+AR_TonB],HL
     834:  00:8B50  3A 4A F1            		LD A,[AYREGS+AR_AmplC]
     835:  00:8B53  32 49 F1            		LD [AYREGS+AR_AmplB],A
     836:  00:8B56  DD 21 5D F0         		LD IX,ChanC
     837:  00:8B5A  2A 44 F1            		LD HL,[AYREGS+AR_TonC]
     838:  00:8B5D  CD 48 89            		CALL CHREGS
     839:  00:8B60  22 44 F1            		LD [AYREGS+AR_TonC],HL
     840:  00:8B63                      
     841:  00:8B63  2A 7E F0            		LD HL,[Ns_Base_AddToNs]
     842:  00:8B66  7C                  		LD A,H
     843:  00:8B67  85                  		ADD A,L
     844:  00:8B68  32 46 F1            		LD [AYREGS+AR_Noise],A
     845:  00:8B6B                      
     846:  00:8B6B  3A 1D F0            		LD A,[PT3_AddToEn]
     847:  00:8B6E  5F                  		LD E,A
     848:  00:8B6F  87                  		ADD A,A
     849:  00:8B70  9F                  		SBC A,A
     850:  00:8B71  57                  		LD D,A
     851:  00:8B72  2A 4E F1            		LD HL,[EnvBase]
     852:  00:8B75  19                  		ADD HL,DE
     853:  00:8B76  ED 5B 7B F0         		LD DE,[CurESld]
     854:  00:8B7A  19                  		ADD HL,DE
     855:  00:8B7B  22 4B F1            		LD [AYREGS+AR_Env],HL
     856:  00:8B7E                      
     857:  00:8B7E  AF                  		XOR A
     858:  00:8B7F  21 7D F0            		LD HL,CurEDel
     859:  00:8B82  B6                  		OR [HL]
     860:  00:8B83  C8                  		RET Z
     861:  00:8B84  35                  		DEC [HL]
     862:  00:8B85  C0                  		RET NZ
     863:  00:8B86  3A 1E F0            		LD A,[PT3_Env_Del]
     864:  00:8B89  77                  		LD [HL],A
     865:  00:8B8A  2A 1F F0            		LD HL,[PT3_ESldAdd]
     866:  00:8B8D  19                  		ADD HL,DE
     867:  00:8B8E  22 7B F0            		LD [CurESld],HL
     868:  00:8B91  C9                  		RET
     869:  00:8B92                      
     870:  00:8B92  AF                  PT3_ROUT:	XOR A
     871:  00:8B93                      	
     872:  00:8B93                      ROUT_A0:	; --- FIXES BITS 6 AND 7 OF MIXER ---
     873:  00:8B93  21 47 F1            		LD	HL,AYREGS+AR_Mixer
     874:  00:8B96  CB FE               		set	7,[hl]
     875:  00:8B98  CB B6               		res	6,[hl]
     876:  00:8B9A                      
     877:  00:8B9A  0E A0               		LD C,$A0
     878:  00:8B9C  21 40 F1            		LD HL,AYREGS
     879:  00:8B9F  ED 79               .LOUT:		OUT [C],A
     880:  00:8BA1  0C                  		INC C
     881:  00:8BA2  ED A3               		OUTI 
     882:  00:8BA4  0D                  		DEC C
     883:  00:8BA5  3C                  		INC A
     884:  00:8BA6  FE 0D               		CP 13
     885:  00:8BA8  20 F5               		JR NZ,.LOUT
     886:  00:8BAA  ED 79               		OUT [C],A
     887:  00:8BAC  7E                  		LD A,[HL]
     888:  00:8BAD  A7                  		AND A
     889:  00:8BAE  F8                  		RET M
     890:  00:8BAF  0C                  		INC C
     891:  00:8BB0  ED 79               		OUT [C],A
     892:  00:8BB2  C9                  		RET
     893:  00:8BB3                      
     894:  00:8BB3  64                  NT_DATA:	db (T_NEW_0-T1_)*2
     895:  00:8BB4  2A                  		db TCNEW_0-T_
     896:  00:8BB5  65                  		db (T_OLD_0-T1_)*2+1
     897:  00:8BB6  00                  		db TCOLD_0-T_
     898:  00:8BB7  01                  		db (T_NEW_1-T1_)*2+1
     899:  00:8BB8  0C                  		db TCNEW_1-T_
     900:  00:8BB9  01                  		db (T_OLD_1-T1_)*2+1
     901:  00:8BBA  0C                  		db TCOLD_1-T_
     902:  00:8BBB  94                  		db (T_NEW_2-T1_)*2
     903:  00:8BBC  35                  		db TCNEW_2-T_
     904:  00:8BBD  30                  		db (T_OLD_2-T1_)*2
     905:  00:8BBE  0E                  		db TCOLD_2-T_
     906:  00:8BBF  60                  		db (T_NEW_3-T1_)*2
     907:  00:8BC0  20                  		db TCNEW_3-T_
     908:  00:8BC1  60                  		db (T_OLD_3-T1_)*2
     909:  00:8BC2  21                  		db TCOLD_3-T_
     910:  00:8BC3                      
     911:  00:8BC3                      T_:
     912:  00:8BC3                      
     913:  00:8BC3                      TCOLD_0:	db $00+1,$04+1,$08+1,$0A+1,$0C+1,$0E+1,$12+1,$14+1
     913:  00:8BC3  01 05 09 0B 0D 0F 13 15 
     914:  00:8BCB  19 25 3D 00         		db $18+1,$24+1,$3C+1,0
     915:  00:8BCF                      TCNEW_1:	
     916:  00:8BCF  5D 00               TCOLD_1:	db $5C+1,0
     917:  00:8BD1                      TCOLD_2:	db $30+1,$36+1,$4C+1,$52+1,$5E+1,$70+1,$82,$8C,$9C
     917:  00:8BD1  31 37 4D 53 5F 71 82 8C 9C 
     918:  00:8BDA                      		db $9E,$A0,$A6,$A8,$AA,$AC,$AE,$AE,0
     918:  00:8BDA  9E A0 A6 A8 AA AC AE AE 00 
     919:  00:8BE3  57                  TCNEW_3:	db $56+1
     920:  00:8BE4                      TCOLD_3:	db $1E+1,$22+1,$24+1,$28+1,$2C+1,$2E+1,$32+1,$BE+1,0
     920:  00:8BE4  1F 23 25 29 2D 2F 33 BF 00 
     921:  00:8BED                      TCNEW_0:	db $1C+1,$20+1,$22+1,$26+1,$2A+1,$2C+1,$30+1,$54+1
     921:  00:8BED  1D 21 23 27 2B 2D 31 55 
     922:  00:8BF5  BD BF 00            		db $BC+1,$BE+1,0
     923:  00:8BF8                      TCNEW_2:	db $1A+1,$20+1,$24+1,$28+1,$2A+1,$3A+1,$4C+1,$5E+1
     923:  00:8BF8  1B 21 25 29 2B 3B 4D 5F 
     924:  00:8C00  BB BD BF            		db $BA+1,$BC+1,$BE+1
     925:  00:8C03                      
     926:  00:8C03  00 01 00 90         EMPTYSAMORN: 	db 0,1,0,$90 ;delete $90 if you don't need default sample
     927:  00:8C07                      
     928:  00:8C07                      T_PACK:		; First 12 values of tone tables (packed)
     929:  00:8C07  0D                  		db ($06EC*2)/256
     930:  00:8C08  D8                  		db #d8
     931:  00:8C09  69                  		db $0755-$06EC
     932:  00:8C0A  70                  		db $07C5-$0755
     933:  00:8C0B  76                  		db $083B-$07C5
     934:  00:8C0C  7D                  		db $08B8-$083B
     935:  00:8C0D  85                  		db $093D-$08B8
     936:  00:8C0E  8D                  		db $09CA-$093D
     937:  00:8C0F  95                  		db $0A5F-$09CA
     938:  00:8C10  9D                  		db $0AFC-$0A5F
     939:  00:8C11  A8                  		db $0BA4-$0AFC
     940:  00:8C12  B1                  		db $0C55-$0BA4
     941:  00:8C13  BB                  		db $0D10-$0C55
     942:  00:8C14  0C                  		db ($066D*2)/256
     943:  00:8C15  DA                  		db #da
     944:  00:8C16  62                  		db $06CF-$066D
     945:  00:8C17  68                  		db $0737-$06CF
     946:  00:8C18  6D                  		db $07A4-$0737
     947:  00:8C19  75                  		db $0819-$07A4
     948:  00:8C1A  7B                  		db $0894-$0819
     949:  00:8C1B  83                  		db $0917-$0894
     950:  00:8C1C  8A                  		db $09A1-$0917
     951:  00:8C1D  92                  		db $0A33-$09A1
     952:  00:8C1E  9C                  		db $0ACF-$0A33
     953:  00:8C1F  A4                  		db $0B73-$0ACF
     954:  00:8C20  AF                  		db $0C22-$0B73
     955:  00:8C21  B8                  		db $0CDA-$0C22
     956:  00:8C22  0E                  		db ($0704*2)/256
     957:  00:8C23  08                  		db #08
     958:  00:8C24  6A                  		db $076E-$0704
     959:  00:8C25  72                  		db $07E0-$076E
     960:  00:8C26  78                  		db $0858-$07E0
     961:  00:8C27  7E                  		db $08D6-$0858
     962:  00:8C28  86                  		db $095C-$08D6
     963:  00:8C29  90                  		db $09EC-$095C
     964:  00:8C2A  96                  		db $0A82-$09EC
     965:  00:8C2B  A0                  		db $0B22-$0A82
     966:  00:8C2C  AA                  		db $0BCC-$0B22
     967:  00:8C2D  B4                  		db $0C80-$0BCC
     968:  00:8C2E  BE                  		db $0D3E-$0C80
     969:  00:8C2F  0F                  		db ($07E0*2)/256
     970:  00:8C30  C0                  		db #c0
     971:  00:8C31  78                  		db $0858-$07E0
     972:  00:8C32  88                  		db $08E0-$0858
     973:  00:8C33  80                  		db $0960-$08E0
     974:  00:8C34  90                  		db $09F0-$0960
     975:  00:8C35  98                  		db $0A88-$09F0
     976:  00:8C36  A0                  		db $0B28-$0A88
     977:  00:8C37  B0                  		db $0BD8-$0B28
     978:  00:8C38  A8                  		db $0C80-$0BD8
     979:  00:8C39  E0                  		db $0D60-$0C80
     980:  00:8C3A  B0                  		db $0E10-$0D60
     981:  00:8C3B  E8                  		db $0EF8-$0E10
      61.  00:8C3C                      	include "ayFX-ROM_sjasm.asm"
       1:  00:8C3C                      		; --- ayFX REPLAYER v1.31 ---
       2:  00:8C3C                      
       3:  00:8C3C                      		; --- v1.31	Fixed bug on previous version, only PSG channel C worked
       4:  00:8C3C                      		; --- v1.3	Fixed volume and Relative volume versions on the same file, conditional compilation
       5:  00:8C3C                      		; ---		Support for dynamic or fixed channel allocation
       6:  00:8C3C                      		; --- v1.2f/r	ayFX bank support
       7:  00:8C3C                      		; --- v1.11f/r	If a frame volume is zero then no AYREGS update
       8:  00:8C3C                      		; --- v1.1f/r	Fixed volume for all ayFX streams
       9:  00:8C3C                      		; --- v1.1	Explicit priority (as suggested by AR)
      10:  00:8C3C                      		; --- v1.0f	Bug fixed (error when using noise)
      11:  00:8C3C                      		; --- v1.0	Initial release
      12:  00:8C3C                      
      13:  00:8C3C                      		; --- DEFINE AYFXRELATIVE AS 0 FOR FIXED VOLUME VERSION ---
      14:  00:8C3C                      		; --- DEFINE AYFXRELATIVE AS 1 FOR RELATIVE VOLUME VERSION ---
      15:  00:8C3C  (00:0000)           AYFXRELATIVE equ 0
      16:  00:8C3C                      
      17:  00:8C3C                      ayFX_SETUP:	; ---          ayFX replayer setup          ---
      18:  00:8C3C                      		; --- INPUT: HL -> pointer to the ayFX bank ---
      19:  00:8C3C  22 41 F2            		ld	[ayFX_BANK],hl			; Current ayFX bank
      20:  00:8C3F  3E 01               		ld	a,1				; a:=0
      21:  00:8C41  32 40 F2            		ld	[ayFX_MODE],a			; Initial mode: fixed channel
      22:  00:8C44  3C                  		inc	a				; Starting channel (=1)
      23:  00:8C45  32 4A F2            		ld	[ayFX_CHANNEL],a		; Updated
      24:  00:8C48                      ayFX_END:	; --- End of an ayFX stream ---
      25:  00:8C48  3E FF               		ld	a,255				; Lowest ayFX priority
      26:  00:8C4A  32 43 F2            		ld	[ayFX_PRIORITY],a		; Priority saved (not playing ayFX stream)
      27:  00:8C4D  C9                  		ret					; Return
      28:  00:8C4E                      
      29:  00:8C4E                      ayFX_INIT:	; ---     INIT A NEW ayFX STREAM     ---
      30:  00:8C4E                      		; --- INPUT: A -> sound to be played ---
      31:  00:8C4E                      		; ---        C -> sound priority     ---
      32:  00:8C4E  C5                  		push	bc				; Store bc in stack
      33:  00:8C4F  D5                  		push	de				; Store de in stack
      34:  00:8C50  E5                  		push	hl				; Store hl in stack
      35:  00:8C51                      		; --- Check if the index is in the bank ---
      36:  00:8C51  47                  		ld	b,a				; b:=a (new ayFX stream index)
      37:  00:8C52  2A 41 F2            		ld	hl,[ayFX_BANK]			; Current ayFX BANK
      38:  00:8C55  7E                  		ld	a,[hl]				; Number of samples in the bank
      39:  00:8C56  B7                  		or	a				; If zero (means 256 samples)...
      40:  00:8C57  28 06               		jr	z,.CHECK_PRI			; ...goto .CHECK_PRI
      41:  00:8C59                      		; The bank has less than 256 samples
      42:  00:8C59  78                  		ld	a,b				; a:=b (new ayFX stream index)
      43:  00:8C5A  BE                  		cp	[hl]				; If new index is not in the bank...
      44:  00:8C5B  3E 02               		ld	a,2				; a:=2 (error 2: Sample not in the bank)
      45:  00:8C5D  30 21               		jr	nc,.INIT_END			; ...we can't init it
      46:  00:8C5F                      .CHECK_PRI:	; --- Check if the new priority is lower than the current one ---
      47:  00:8C5F                      		; ---   Remember: 0 = highest priority, 15 = lowest priority  ---
      48:  00:8C5F  78                  		ld	a,b				; a:=b (new ayFX stream index)
      49:  00:8C60  3A 43 F2            		ld	a,[ayFX_PRIORITY]		; a:=Current ayFX stream priority
      50:  00:8C63  B9                  		cp	c				; If new ayFX stream priority is lower than current one...
      51:  00:8C64  3E 01               		ld	a,1				; a:=1 (error 1: A sample with higher priority is being played)
      52:  00:8C66  38 18               		jr	c,.INIT_END			; ...we don't start the new ayFX stream
      53:  00:8C68                      		; --- Set new priority ---
      54:  00:8C68  79                  		ld	a,c				; a:=New priority
      55:  00:8C69  E6 0F               		and	$0F				; We mask the priority
      56:  00:8C6B  32 43 F2            		ld	[ayFX_PRIORITY],a		; new ayFX stream priority saved in RAM
      57:  00:8C6E                      
      58:  00:8C6E                      		IF ( AYFXRELATIVE == 1 )
      59:  00:8C6E                    ~ 			; --- Volume adjust using PT3 volume table ---
      60:  00:8C6E                    ~ 			ld	c,a				; c:=New priority (fixed)
      61:  00:8C6E                    ~ 			ld	a,15				; a:=15
      62:  00:8C6E                    ~ 			sub	c				; a:=15-New priority = relative volume
      63:  00:8C6E                    ~ 			jr	z,.INIT_NOSOUND		; If priority is 15 -> no sound output (volume is zero)
      64:  00:8C6E                    ~ 			add	a,a				; a:=a*2
      65:  00:8C6E                    ~ 			add	a,a				; a:=a*4
      66:  00:8C6E                    ~ 			add	a,a				; a:=a*8
      67:  00:8C6E                    ~ 			add	a,a				; a:=a*16
      68:  00:8C6E                    ~ 			ld	e,a				; e:=a
      69:  00:8C6E                    ~ 			ld	d,0				; de:=a
      70:  00:8C6E                    ~ 			ld	hl,VT_				; hl:=PT3 volume table
      71:  00:8C6E                    ~ 			add	hl,de				; hl is a pointer to the relative volume table
      72:  00:8C6E                    ~ 			ld	[ayFX_VT],hl			; Save pointer
      73:  00:8C6E                    ~ 		ENDIF
      74:  00:8C6E                      
      75:  00:8C6E                      		; --- Calculate the pointer to the new ayFX stream ---
      76:  00:8C6E  ED 5B 41 F2         		ld	de,[ayFX_BANK]			; de:=Current ayFX bank
      77:  00:8C72  13                  		inc	de				; de points to the increments table of the bank
      78:  00:8C73  68                  		ld	l,b				; l:=b (new ayFX stream index)
      79:  00:8C74  26 00               		ld	h,0				; hl:=b (new ayFX stream index)
      80:  00:8C76  29                  		add	hl,hl				; hl:=hl*2
      81:  00:8C77  19                  		add	hl,de				; hl:=hl+de (hl points to the correct increment)
      82:  00:8C78  5E                  		ld	e,[hl]				; e:=lower byte of the increment
      83:  00:8C79  23                  		inc	hl				; hl points to the higher byte of the correct increment
      84:  00:8C7A  56                  		ld	d,[hl]				; de:=increment
      85:  00:8C7B  19                  		add	hl,de				; hl:=hl+de (hl points to the new ayFX stream)
      86:  00:8C7C  22 44 F2            		ld	[ayFX_POINTER],hl		; Pointer saved in RAM
      87:  00:8C7F  AF                  		xor	a				; a:=0 (no errors)
      88:  00:8C80  E1                  .INIT_END:	pop	hl				; Retrieve hl from stack
      89:  00:8C81  D1                  		pop	de				; Retrieve de from stack
      90:  00:8C82  C1                  		pop	bc				; Retrieve bc from stack
      91:  00:8C83  C9                  		ret					; Return
      92:  00:8C84                      
      93:  00:8C84                      		IF ( AYFXRELATIVE == 1 )
      94:  00:8C84                    ~ .INIT_NOSOUND:	; --- Init a sample with relative volume zero -> no sound output ---
      95:  00:8C84                    ~ 			ld	a,255				; Lowest ayFX priority
      96:  00:8C84                    ~ 			ld	[ayFX_PRIORITY],a		; Priority saved (not playing ayFX stream)
      97:  00:8C84                    ~ 			jr	.INIT_END			; Jumps to .INIT_END
      98:  00:8C84                    ~ 		ENDIF
      99:  00:8C84                      
     100:  00:8C84                      ayFX_PLAY:	; --- PLAY A FRAME OF AN ayFX STREAM ---
     101:  00:8C84  3A 43 F2            		ld	a,[ayFX_PRIORITY]		; a:=Current ayFX stream priority
     102:  00:8C87  B7                  		or	a				; If priority has bit 7 on...
     103:  00:8C88  F8                  		ret	m				; ...return
     104:  00:8C89                      		; --- Calculate next ayFX channel (if needed) ---
     105:  00:8C89  3A 40 F2            		ld	a,[ayFX_MODE]			; ayFX mode
     106:  00:8C8C  E6 01               		and	1				; If bit0=0 (fixed channel)...
     107:  00:8C8E  28 08               		jr	z,.TAKECB			; ...skip channel changing
     108:  00:8C90  21 4A F2            		ld	hl,ayFX_CHANNEL			; Old ayFX playing channel
     109:  00:8C93  35                  		dec	[hl]				; New ayFX playing channel
     110:  00:8C94  20 02               		jr	nz,.TAKECB			; If not zero jump to .TAKECB
     111:  00:8C96  36 03               		ld	[hl],3				; If zero -> set channel 3
     112:  00:8C98                      .TAKECB:	; --- Extract control byte from stream ---
     113:  00:8C98  2A 44 F2            		ld	hl,[ayFX_POINTER]		; Pointer to the current ayFX stream
     114:  00:8C9B  4E                  		ld	c,[hl]				; c:=Control byte
     115:  00:8C9C  23                  		inc	hl				; Increment pointer
     116:  00:8C9D                      		; --- Check if there's new tone on stream ---
     117:  00:8C9D  CB 69               		bit	5,c				; If bit 5 c is off...
     118:  00:8C9F  28 08               		jr	z,.CHECK_NN			; ...jump to .CHECK_NN (no new tone)
     119:  00:8CA1                      		; --- Extract new tone from stream ---
     120:  00:8CA1  5E                  		ld	e,[hl]				; e:=lower byte of new tone
     121:  00:8CA2  23                  		inc	hl				; Increment pointer
     122:  00:8CA3  56                  		ld	d,[hl]				; d:=higher byte of new tone
     123:  00:8CA4  23                  		inc	hl				; Increment pointer
     124:  00:8CA5  ED 53 46 F2         		ld	[ayFX_TONE],de			; ayFX tone updated
     125:  00:8CA9                      .CHECK_NN:	; --- Check if there's new noise on stream ---
     126:  00:8CA9  CB 71               		bit	6,c				; if bit 6 c is off...
     127:  00:8CAB  28 09               		jr	z,.SETPOINTER			; ...jump to .SETPOINTER (no new noise)
     128:  00:8CAD                      		; --- Extract new noise from stream ---
     129:  00:8CAD  7E                  		ld	a,[hl]				; a:=New noise
     130:  00:8CAE  23                  		inc	hl				; Increment pointer
     131:  00:8CAF  FE 20               		cp	$20				; If it's an illegal value of noise (used to mark end of stream)...
     132:  00:8CB1  28 95               		jr.	z,ayFX_END			; ...jump to ayFX_END
     133:  00:8CB3  32 48 F2            		ld	[ayFX_NOISE],a			; ayFX noise updated
     134:  00:8CB6                      .SETPOINTER:	; --- Update ayFX pointer ---
     135:  00:8CB6  22 44 F2            		ld	[ayFX_POINTER],hl		; Update ayFX stream pointer
     136:  00:8CB9                      		; --- Extract volume ---
     137:  00:8CB9  79                  		ld	a,c				; a:=Control byte
     138:  00:8CBA  E6 0F               		and	$0F				; lower nibble
     139:  00:8CBC                      
     140:  00:8CBC                      		IF ( AYFXRELATIVE == 1 )
     141:  00:8CBC                    ~ 			; --- Fix the volume using PT3 Volume Table ---
     142:  00:8CBC                    ~ 			ld	hl,[ayFX_VT]			; hl:=Pointer to relative volume table
     143:  00:8CBC                    ~ 			ld	e,a				; e:=a (ayFX volume)
     144:  00:8CBC                    ~ 			ld	d,0				; d:=0
     145:  00:8CBC                    ~ 			add	hl,de				; hl:=hl+de (hl points to the relative volume of this frame
     146:  00:8CBC                    ~ 			ld	a,[hl]				; a:=ayFX relative volume
     147:  00:8CBC                    ~ 			or	a				; If relative volume is zero...
     148:  00:8CBC                    ~ 		ENDIF
     149:  00:8CBC                      
     150:  00:8CBC  32 49 F2            		ld	[ayFX_VOLUME],a			; ayFX volume updated
     151:  00:8CBF  C8                  		ret	z				; ...return (don't copy ayFX values in to AYREGS)
     152:  00:8CC0                      		; -------------------------------------
     153:  00:8CC0                      		; --- COPY ayFX VALUES IN TO AYREGS ---
     154:  00:8CC0                      		; -------------------------------------
     155:  00:8CC0                      		; --- Set noise channel ---
     156:  00:8CC0  CB 79               		bit	7,c				; If noise is off...
     157:  00:8CC2  20 06               		jr	nz,.SETMASKS			; ...jump to .SETMASKS
     158:  00:8CC4  3A 48 F2            		ld	a,[ayFX_NOISE]			; ayFX noise value
     159:  00:8CC7  32 46 F1            		ld	[AYREGS+6],a			; copied in to AYREGS (noise channel)
     160:  00:8CCA                      .SETMASKS:	; --- Set mixer masks ---
     161:  00:8CCA  79                  		ld	a,c				; a:=Control byte
     162:  00:8CCB  E6 90               		and	$90				; Only bits 7 and 4 (noise and tone mask for psg reg 7)
     163:  00:8CCD  FE 90               		cp	$90				; If no noise and no tone...
     164:  00:8CCF  C8                  		ret	z				; ...return (don't copy ayFX values in to AYREGS)
     165:  00:8CD0                      		; --- Copy ayFX values in to ARYREGS ---
     166:  00:8CD0  0F                  		rrca					; Rotate a to the right (1 TIME)
     167:  00:8CD1  0F                  		rrca					; Rotate a to the right (2 TIMES) (OR mask)
     168:  00:8CD2  16 DB               		ld	d,$DB				; d:=Mask for psg mixer (AND mask)
     169:  00:8CD4                      		; --- Dump to correct channel ---
     170:  00:8CD4  21 4A F2            		ld	hl,ayFX_CHANNEL			; Next ayFX playing channel
     171:  00:8CD7  46                  		ld	b,[hl]				; Channel counter
     172:  00:8CD8                      .CHK1:		; --- Check if playing channel was 1 ---
     173:  00:8CD8  10 0D               		djnz	.CHK2				; Decrement and jump if channel was not 1
     174:  00:8CDA                      .PLAY_C:	; --- Play ayFX stream on channel C ---
     175:  00:8CDA  CD 09 8D            		call	.SETMIXER			; Set PSG mixer value (returning a=ayFX volume and hl=ayFX tone)
     176:  00:8CDD  32 4A F1            		ld	[AYREGS+10],a			; Volume copied in to AYREGS (channel C volume)
     177:  00:8CE0  CB 51               		bit	2,c				; If tone is off...
     178:  00:8CE2  C0                  		ret	nz				; ...return
     179:  00:8CE3  22 44 F1            		ld	[AYREGS+4],hl			; copied in to AYREGS (channel C tone)
     180:  00:8CE6  C9                  		ret					; Return
     181:  00:8CE7                      .CHK2:		; --- Check if playing channel was 2 ---
     182:  00:8CE7  CB 0A               		rrc	d				; Rotate right AND mask
     183:  00:8CE9  0F                  		rrca					; Rotate right OR mask
     184:  00:8CEA  10 0D               		djnz	.CHK3				; Decrement and jump if channel was not 2
     185:  00:8CEC                      .PLAY_B:	; --- Play ayFX stream on channel B ---
     186:  00:8CEC  CD 09 8D            		call	.SETMIXER			; Set PSG mixer value (returning a=ayFX volume and hl=ayFX tone)
     187:  00:8CEF  32 49 F1            		ld	[AYREGS+9],a			; Volume copied in to AYREGS (channel B volume)
     188:  00:8CF2  CB 49               		bit	1,c				; If tone is off...
     189:  00:8CF4  C0                  		ret	nz				; ...return
     190:  00:8CF5  22 42 F1            		ld	[AYREGS+2],hl			; copied in to AYREGS (channel B tone)
     191:  00:8CF8  C9                  		ret					; Return
     192:  00:8CF9                      .CHK3:		; --- Check if playing channel was 3 ---
     193:  00:8CF9  CB 0A               		rrc	d				; Rotate right AND mask
     194:  00:8CFB  0F                  		rrca					; Rotate right OR mask
     195:  00:8CFC                      .PLAY_A:	; --- Play ayFX stream on channel A ---
     196:  00:8CFC  CD 09 8D            		call	.SETMIXER			; Set PSG mixer value (returning a=ayFX volume and hl=ayFX tone)
     197:  00:8CFF  32 48 F1            		ld	[AYREGS+8],a			; Volume copied in to AYREGS (channel A volume)
     198:  00:8D02  CB 41               		bit	0,c				; If tone is off...
     199:  00:8D04  C0                  		ret	nz				; ...return
     200:  00:8D05  22 40 F1            		ld	[AYREGS+0],hl			; copied in to AYREGS (channel A tone)
     201:  00:8D08  C9                  		ret					; Return
     202:  00:8D09                      .SETMIXER:	; --- Set PSG mixer value ---
     203:  00:8D09  4F                  		ld	c,a				; c:=OR mask
     204:  00:8D0A  3A 47 F1            		ld	a,[AYREGS+7]			; a:=PSG mixer value
     205:  00:8D0D  A2                  		and	d				; AND mask
     206:  00:8D0E  B1                  		or	c				; OR mask
     207:  00:8D0F  32 47 F1            		ld	[AYREGS+7],a			; PSG mixer value updated
     208:  00:8D12  3A 49 F2            		ld	a,[ayFX_VOLUME]			; a:=ayFX volume value
     209:  00:8D15  2A 46 F2            		ld	hl,[ayFX_TONE]			; ayFX tone value
     210:  00:8D18  C9                  		ret					; Return
     211:  00:8D19                      
     212:  00:8D19                      		IF ( AYFXRELATIVE == 1 )
     213:  00:8D19                    ~ 			; --- UNCOMMENT THIS IF YOU DON'T USE THIS REPLAYER WITH PT3 REPLAYER ---
     214:  00:8D19                    ~ 		;VT_:	.INCBIN	"VT.BIN"
     215:  00:8D19                    ~ 			; --- UNCOMMENT THIS IF YOU DON'T USE THIS REPLAYER WITH PT3 REPLAYER ---
     216:  00:8D19                    ~ 		ENDIF
      62.  00:8D19                      	
      63.  00:8D19                      	
      64.  00:8D19                      
      65.  00:8D19                      ;;=====================================================
      66.  00:8D19                      ;;DEFINICIÓN DE CANTIONES Y EFECTOS DE SONIDO
      67.  00:8D19                      ;;=====================================================		
      68.  00:8D19                      song:
      69.  00:8D19  (0968)              	incbin "bloodytears_castlevania.99"
      70.  00:9681                      	
      71.  00:9681                      sfx_bank:
      72.  00:9681  (004B)              	incbin "demo.afb"
      73.  00:96CC                      
     128   00:96CC                      	
     129   00:96CC                      	include "subr_ayudas.asm"
       1.  00:96CC                      ;;=====================================================
       2.  00:96CC                      ;;SUBRUTINAS MANEJO DE OBJETOS AYUDA
       3.  00:96CC                      ;;=====================================================	
       4.  00:96CC                      
       5.  00:96CC                      ;;=====================================================
       6.  00:96CC                      ;;RESETEA AYUDAS
       7.  00:96CC                      ;;=====================================================	
       8.  00:96CC                      ; función: 	inicializa las variables de estructuras de ayuda del array lista_ayudas
       9.  00:96CC                      ; entrada: 	lista_ayudas
      10.  00:96CC                      ; salida: 	lista_ayudas
      11.  00:96CC                      resetea_ayudas:
      12.  00:96CC                      	;oración
      13.  00:96CC  DD 21 BA A6         	LD		IX, ayuda_oracion
      14.  00:96D0  DD 36 00 00         	LD		(IX), INACTIVO
      15.  00:96D4  DD 36 01 00         	LD		(IX + 1), ORACIONON
      16.  00:96D8  DD 36 02 04         	LD		(IX + 2), ORACIONOFF
      17.  00:96DC  21 58 98            	LD		HL, accion_oracion
      18.  00:96DF  DD 74 09            	LD		(IX + 9), H
      19.  00:96E2  DD 75 0A            	LD		(IX + 10), L
      20.  00:96E5                      	
      21.  00:96E5                      	;cruz
      22.  00:96E5  DD 21 CA A6         	LD		IX, ayuda_cruz
      23.  00:96E9  DD 36 00 00         	LD		(IX), INACTIVO
      24.  00:96ED  DD 36 01 08         	LD		(IX + 1), CRUZON
      25.  00:96F1  DD 36 02 0C         	LD		(IX + 2), CRUZOFF
      26.  00:96F5  21 59 98            	LD		HL, accion_cruz
      27.  00:96F8  DD 74 09            	LD		(IX + 9), H
      28.  00:96FB  DD 75 0A            	LD		(IX + 10), L
      29.  00:96FE                      	
      30.  00:96FE                      	;agua bendita
      31.  00:96FE  DD 21 DA A6         	LD		IX, ayuda_aguabendita
      32.  00:9702  DD 36 00 00         	LD		(IX), INACTIVO
      33.  00:9706  DD 36 01 10         	LD		(IX + 1), AGUAON
      34.  00:970A  DD 36 02 14         	LD		(IX + 2), AGUAOFF
      35.  00:970E  21 5A 98            	LD		HL, accion_agua
      36.  00:9711  DD 74 09            	LD		(IX + 9), H
      37.  00:9714  DD 75 0A            	LD		(IX + 10), L
      38.  00:9717                      	
      39.  00:9717                      	;armadura
      40.  00:9717  DD 21 EA A6         	LD		IX, ayuda_armadura
      41.  00:971B  DD 36 00 00         	LD		(IX), INACTIVO
      42.  00:971F  DD 36 01 18         	LD		(IX + 1), ARMADON
      43.  00:9723  DD 36 02 1C         	LD		(IX + 2), ARMADOFF
      44.  00:9727  21 5A 98            	LD		HL, accion_agua
      45.  00:972A  DD 74 09            	LD		(IX + 9), H
      46.  00:972D  DD 75 0A            	LD		(IX + 10), L
      47.  00:9730                      	
      48.  00:9730                      	;planta
      49.  00:9730  DD 21 FA A6         	LD		IX, ayuda_planta
      50.  00:9734  DD 36 00 00         	LD		(IX), INACTIVO
      51.  00:9738  DD 36 01 20         	LD		(IX + 1), PLANTAON
      52.  00:973C  DD 36 02 24         	LD		(IX + 2), PLANTAOFF
      53.  00:9740  21 5C 98            	LD		HL, accion_planta
      54.  00:9743  DD 74 09            	LD		(IX + 9), H
      55.  00:9746  DD 75 0A            	LD		(IX + 10), L
      56.  00:9749                      	
      57.  00:9749                      	;vida extra
      58.  00:9749  DD 21 0A A7         	LD		IX, ayuda_vidaextra
      59.  00:974D  DD 36 00 00         	LD		(IX), INACTIVO
      60.  00:9751  DD 36 01 28         	LD		(IX + 1), VIDAEXTON
      61.  00:9755  DD 36 02 2C         	LD		(IX + 2), VIDAEXTOFF
      62.  00:9759  21 5D 98            	LD		HL, accion_vidaextra
      63.  00:975C  DD 74 09            	LD		(IX + 9), H
      64.  00:975F  DD 75 0A            	LD		(IX + 10), L
      65.  00:9762                      	
      66.  00:9762                      	;ballesta
      67.  00:9762  DD 21 1A A7         	LD		IX, ayuda_ballesta
      68.  00:9766  DD 36 00 00         	LD		(IX), INACTIVO
      69.  00:976A  DD 36 01 30         	LD		(IX + 1), BALLESON
      70.  00:976E  DD 36 02 34         	LD		(IX + 2), BALLESOFF
      71.  00:9772  21 5E 98            	LD		HL, accion_ballesta
      72.  00:9775  DD 74 09            	LD		(IX + 9), H
      73.  00:9778  DD 75 0A            	LD		(IX + 10), L	
      74.  00:977B                      fin_resetea_ayudas:
      75.  00:977B  C9                  	RET
      76.  00:977C                      
      77.  00:977C                      
      78.  00:977C                      ;;=====================================================
      79.  00:977C                      ;;INICIALIZA_AYUDAS
      80.  00:977C                      ;;=====================================================	
      81.  00:977C                      ; función: 	inicializa las estructuras de las ayudas
      82.  00:977C                      ; entrada: 	
      83.  00:977C                      ; salida: 	-
      84.  00:977C                      ; toca:		todo
      85.  00:977C                      inicializa_ayudas:
      86.  00:977C                      	;busca objetos a incluir y actualiza sus variables/estructura
      87.  00:977C  3A C0 A2            	LD		 A, (habitacion_extras)
      88.  00:977F                      	
      89.  00:977F                      .examina_ayudas:
      90.  00:977F                      .examina_ballesta:
      91.  00:977F  CB 7F               	BIT		 7, A
      92.  00:9781  CA 8D 97            	JP		 Z, .examina_vidaextra
      93.  00:9784  DD 21 1A A7         	LD		IX, ayuda_ballesta
      94.  00:9788  08                  	EX		AF, AF'
      95.  00:9789  CD E0 97            	CALL	activaycalcula_posicion_ayuda
      96.  00:978C  08                  	EX		AF, AF'
      97.  00:978D                      .examina_vidaextra:
      98.  00:978D  CB 77               	BIT		 6, A
      99.  00:978F  CA A7 97            	JP		 Z, .examina_armadura
     100.  00:9792  DD 21 0A A7         	LD		IX, ayuda_vidaextra
     101.  00:9796  08                  	EX		AF, AF'
     102.  00:9797  CD E0 97            	CALL	activaycalcula_posicion_ayuda
     103.  00:979A  08                  	EX		AF, AF'
     104.  00:979B                      .examina_planta:
     105.  00:979B  CB 6F               	BIT		 5, A
     106.  00:979D  CA A7 97            	JP		 Z, .examina_armadura
     107.  00:97A0  DD 21 FA A6         	LD		IX, ayuda_planta
     108.  00:97A4  CD E0 97            	CALL	activaycalcula_posicion_ayuda
     109.  00:97A7                      .examina_armadura:
     110.  00:97A7  CB 6F               	BIT		 5, A
     111.  00:97A9  CC B5 97            	CALL	 Z, .examina_agua
     112.  00:97AC  DD 21 EA A6         	LD		IX, ayuda_armadura
     113.  00:97B0  08                  	EX		AF, AF'
     114.  00:97B1  CD E0 97            	CALL	activaycalcula_posicion_ayuda
     115.  00:97B4  08                  	EX		AF, AF'
     116.  00:97B5                      .examina_agua:
     117.  00:97B5  CB 67               	BIT		 4, A
     118.  00:97B7  CA C3 97            	JP		 Z, .examina_cruz
     119.  00:97BA  DD 21 DA A6         	LD		IX, ayuda_aguabendita
     120.  00:97BE  08                  	EX		AF, AF'
     121.  00:97BF  CD E0 97            	CALL	activaycalcula_posicion_ayuda
     122.  00:97C2  08                  	EX		AF, AF'
     123.  00:97C3                      .examina_cruz:
     124.  00:97C3  CB 5F               	BIT		 3, A
     125.  00:97C5  CA D1 97            	JP		 Z, .examina_oracion
     126.  00:97C8  DD 21 CA A6         	LD		IX, ayuda_cruz
     127.  00:97CC  08                  	EX		AF, AF'
     128.  00:97CD  CD E0 97            	CALL	activaycalcula_posicion_ayuda
     129.  00:97D0  08                  	EX		AF, AF'
     130.  00:97D1                      .examina_oracion:
     131.  00:97D1  CB 57               	BIT		 2, A
     132.  00:97D3  CA DF 97            	JP		 Z, .fin_examina_ayudas
     133.  00:97D6  DD 21 BA A6         	LD		IX, ayuda_oracion
     134.  00:97DA  08                  	EX		AF, AF'
     135.  00:97DB  CD E0 97            	CALL	activaycalcula_posicion_ayuda	;no se necesita un CALL ya que es la última
     136.  00:97DE  08                  	EX		AF, AF'
     137.  00:97DF                      .fin_examina_ayudas:	
     138.  00:97DF                      fin_inicializa_ayudas:
     139.  00:97DF  C9                  	RET
     140.  00:97E0                      
     141.  00:97E0                      
     142.  00:97E0                      ;;=====================================================
     143.  00:97E0                      ;;ACTIVA Y CALCULA_POSICION_AYUDA
     144.  00:97E0                      ;;=====================================================	
     145.  00:97E0                      ; función: 	actualiza los valores de la estructura (pos_tile, posx y posy)
     146.  00:97E0                      ; entrada: 	B, constante a sumar al array_ayudas que indica 1º tile de ayuda a pintar
     147.  00:97E0                      ; salida: 	-
     148.  00:97E0                      activaycalcula_posicion_ayuda:
     149.  00:97E0  DD 36 00 01         	LD		(IX), ACTIVO
     150.  00:97E4                      	
     151.  00:97E4                      	;1) se busca en la VRAM la primera pos de los tiles a pintar
     152.  00:97E4  DD 7E 01            	LD		A, (IX + 1)
     153.  00:97E7  01 82 A6            	LD		BC, array_ayudas
     154.  00:97EA  CD E3 80            	CALL 	suma_A_BC
     155.  00:97ED                      	
     156.  00:97ED                      	;coloca pos array objeto a pintar en la variable de la estructura
     157.  00:97ED  DD 70 03            	LD		(IX + 3), B
     158.  00:97F0  DD 71 04            	LD		(IX + 4), C
     159.  00:97F3                      	
     160.  00:97F3                      	;2) ahora se calcula la posición dentro del tilemap en la pantalla y las posiciones x e y
     161.  00:97F3                      	
     162.  00:97F3  21 00 19            	LD		HL, TILMAP + 256	;calcula posición en tilemap + 256 por colocarse siempre en bank1
     163.  00:97F6                      	
     164.  00:97F6  ED 5F               	LD		 A, R				;obtengo un valor "random" entre 0 y 255
     165.  00:97F8  E6 0F               	AND		00001111b			;me quedo con los 4 bits menos signif. y obtengo entre 0 y 15 (tamaño del array pos_ayudas)
     166.  00:97FA  5F                  	LD		 E, A				;copia de seguridad de A
     167.  00:97FB  D5                  	PUSH	DE
     168.  00:97FC  01 52 A6            	LD		BC, pos_ayudas		;puntero a inicio de array pos_ayudas
     169.  00:97FF  CD E3 80            	CALL 	suma_A_BC			;tengo en BC la pos de memoria de pos_ayudas
     170.  00:9802                      	
     171.  00:9802  0A                  	LD		 A, (BC)			;tengo en A la posición dentro del bank1 
     172.  00:9803  16 00               	LD		 D, 0
     173.  00:9805  5F                  	LD		 E, A
     174.  00:9806  19                  	ADD		HL, DE				;le sumo a HL la posción de inicio de tilemap + 256 + dónde colocar el objeto
     175.  00:9807                      	
     176.  00:9807  DD 74 05            	LD		(IX + 5), H
     177.  00:980A  DD 75 06            	LD		(IX + 6), L
     178.  00:980D                      	
     179.  00:980D                      	;recuperamos el valor de A (posición en el array)
     180.  00:980D  D1                  	POP		DE
     181.  00:980E                      	
     182.  00:980E                      	; obtenemos el valor dentro del array pos_ayudas_y
     183.  00:980E  21 62 A6            	LD		HL, pos_ayudas_y
     184.  00:9811  19                  	ADD		HL, DE
     185.  00:9812  7E                  	LD		 A, (HL)
     186.  00:9813  DD 77 07            	LD		(IX + 7), A
     187.  00:9816                      	; obtenemos el valor dentro del array pos_ayudas_x
     188.  00:9816  21 72 A6            	LD		HL, pos_ayudas_x
     189.  00:9819  19                  	ADD		HL, DE
     190.  00:981A  7E                  	LD		 A, (HL)
     191.  00:981B  DD 77 08            	LD		(IX + 8), A	
     192.  00:981E                      	
     193.  00:981E                      	; Esta sería la forma de pintar aunque no lo pinta... hay que depurar
     194.  00:981E  DD 66 03            	LD		 H, (IX + 3)
     195.  00:9821  DD 6E 04            	LD		 L, (IX + 4)
     196.  00:9824  22 A8 84            	LD		(wordaux2), HL
     197.  00:9827  DD 66 07            	LD		 H, (IX + 7)
     198.  00:982A  DD 6E 08            	LD		 L, (IX + 8)
     199.  00:982D  22 A6 84            	LD		(wordaux1), HL
     200.  00:9830  3E 02               	LD		 A, 2
     201.  00:9832  32 AA 84            	LD		(byteaux1), A
     202.  00:9835  32 AB 84            	LD		(byteaux2), A
     203.  00:9838  C3 3B 98            	JP		pinta_obj_ayuda
     204.  00:983B                      fin_activaycalcula_posicion_ayuda:
     205.  00:983B                      ;; por de pronto la dejo aquí
     206.  00:983B                      ;~ wordaux1:		DW	0	;almacena la posición en el tilemap 0 al 675
     207.  00:983B                      ;~ wordaux2:		DW	0	;almacena puntero a array de tiles (posiciones en realidad) a pintar (posiciones repetidas en los 2 primeros bancos)
     208.  00:983B                      ;~ byteaux1:		DB	0	;nº filas Registro D
     209.  00:983B                      ;~ byteaux2:		DB	0	;nº columnas Registro E
     210.  00:983B                      
     211.  00:983B                      
     212.  00:983B                      
     213.  00:983B                      
     214.  00:983B                      ;;=====================================================
     215.  00:983B                      ;;PINTA_OBJ_AYUDA
     216.  00:983B                      ;;=====================================================	
     217.  00:983B                      ; función: 	pinta un objeto de tipo ayuda que se le pase por referencia IX
     218.  00:983B                      ; entrada: 	IX - puntero a objeto a mostrar
     219.  00:983B                      ; salida: 	-
     220.  00:983B                      ; toca:		AF, HL, BC, DE
     221.  00:983B                      pinta_obj_ayuda:
     222.  00:983B  DD 66 03            	LD		 H, (IX+3)
     223.  00:983E  DD 6E 04            	LD		 L, (IX+4)
     224.  00:9841  22 A6 84            	LD		(wordaux1), HL
     225.  00:9844                      	
     226.  00:9844  DD 66 05            	LD		 H, (IX+5)
     227.  00:9847  DD 6E 06            	LD		 L, (IX+6)
     228.  00:984A  22 A6 84            	LD		(wordaux1), HL
     229.  00:984D                      		
     230.  00:984D  3E 02               	LD		 A, 2			;no se guarda en la estructura (siempre son de 2x2)
     231.  00:984F  32 AA 84            	LD		(byteaux1), A	;nº de filas
     232.  00:9852  32 AB 84            	LD		(byteaux2), A	;nº de columnas
     233.  00:9855                      
     234.  00:9855  C3 66 84            	JP		pinta_array
     235.  00:9858                      fin_pinta_obj_ayuda:
     236.  00:9858                      
     237.  00:9858                      	
     238.  00:9858                      ;~ pinta_obj_ayuda:
     239.  00:9858                      	;~ ;se recibe objeto an A desde fuera, por ejmplo LD		 A, CRUZOFF
     240.  00:9858                      	;~ LD		BC, array_ayudas
     241.  00:9858                      	;~ CALL 	suma_A_BC
     242.  00:9858                      	
     243.  00:9858                      	;~ ;coloca pos array objeto a pintar en 
     244.  00:9858                      	;~ LD		(wordaux2), BC
     245.  00:9858                      	
     246.  00:9858                      	;~ LD		HL, TILMAP + 256	;calcula posición en tilemap + 256 por colocarse siempre en bank1
     247.  00:9858                      	
     248.  00:9858                      	;~ LD		 A, R				;obtengo un valor "random" entre 0 y 255
     249.  00:9858                      	;~ AND		00001111b			;me quedo con los 4 bits menos signif. y obtengo entre 0 y 15 (tamaño del array pos_ayudas)
     250.  00:9858                      	;~ LD		BC, pos_ayudas		;puntero a inicio de array pos_ayudas
     251.  00:9858                      	;~ CALL 	suma_A_BC			;tengo en BC la pos de memoria de pos_ayudas
     252.  00:9858                      	
     253.  00:9858                      	;~ LD		 A, (BC)			;tengo en A la posición dentro del bank1 
     254.  00:9858                      	;~ LD		 D, 0
     255.  00:9858                      	;~ LD		 E, A
     256.  00:9858                      	;~ ADD		HL, DE				;le sumo a HL la posción de inicio de tilemap + 256 + dónde colocar el objeto
     257.  00:9858                      
     258.  00:9858                      	;~ LD		(wordaux1), HL		;pongo el valor en wordaux1
     259.  00:9858                      		
     260.  00:9858                      	;~ LD		 A, 2				;nº de filas
     261.  00:9858                      	;~ LD		(byteaux1), A	
     262.  00:9858                      	;~ LD		 A, 2				;nº de columnas
     263.  00:9858                      	;~ LD		(byteaux2), A
     264.  00:9858                      
     265.  00:9858                      	;~ JP		pinta_array
     266.  00:9858                      ;~ fin_pinta_obj_ayuda:
     267.  00:9858                      	;~ RET
     268.  00:9858                      ;~ objeto_pintar:		DB		0
     269.  00:9858                      
     270.  00:9858                      
     271.  00:9858                      
     272.  00:9858                      
     273.  00:9858                      ;;=====================================================
     274.  00:9858                      ;;ACCION_ORACION
     275.  00:9858                      ;;=====================================================	
     276.  00:9858                      ; función: 	
     277.  00:9858                      ; entrada: 	
     278.  00:9858                      ; salida: 	-
     279.  00:9858                      accion_oracion:
     280.  00:9858                      fin_accion_oracion:
     281.  00:9858  C9                  	RET
     282.  00:9859                      	
     283.  00:9859                      
     284.  00:9859                      ;;=====================================================
     285.  00:9859                      ;;ACCION_CRUZ
     286.  00:9859                      ;;=====================================================	
     287.  00:9859                      ; función: 	
     288.  00:9859                      ; entrada: 	
     289.  00:9859                      ; salida: 	-
     290.  00:9859                      accion_cruz:
     291.  00:9859                      fin_accion_cruz:
     292.  00:9859  C9                  	RET
     293.  00:985A                      
     294.  00:985A                      
     295.  00:985A                      ;;=====================================================
     296.  00:985A                      ;;ACCION_AGUA
     297.  00:985A                      ;;=====================================================	
     298.  00:985A                      ; función: 	
     299.  00:985A                      ; entrada: 	
     300.  00:985A                      ; salida: 	-
     301.  00:985A                      accion_agua:
     302.  00:985A                      fin_accion_agua:
     303.  00:985A  C9                  	RET
     304.  00:985B                      
     305.  00:985B                      
     306.  00:985B                      ;;=====================================================
     307.  00:985B                      ;;ACCION_ARMADURA
     308.  00:985B                      ;;=====================================================	
     309.  00:985B                      ; función: 	
     310.  00:985B                      ; entrada: 	
     311.  00:985B                      ; salida: 	-
     312.  00:985B                      accion_armadura:
     313.  00:985B                      fin_accion_armadura:
     314.  00:985B  C9                  	RET
     315.  00:985C                      
     316.  00:985C                      
     317.  00:985C                      ;;=====================================================
     318.  00:985C                      ;;ACCION_PLANTA
     319.  00:985C                      ;;=====================================================	
     320.  00:985C                      ; función: 	
     321.  00:985C                      ; entrada: 	
     322.  00:985C                      ; salida: 	-
     323.  00:985C                      accion_planta:
     324.  00:985C                      fin_accion_planta:
     325.  00:985C  C9                  	RET
     326.  00:985D                      
     327.  00:985D                      
     328.  00:985D                      ;;=====================================================
     329.  00:985D                      ;;ACCION_VIDAEXTRA
     330.  00:985D                      ;;=====================================================	
     331.  00:985D                      ; función: 	
     332.  00:985D                      ; entrada: 	
     333.  00:985D                      ; salida: 	-
     334.  00:985D                      accion_vidaextra:
     335.  00:985D                      fin_accion_vidaextra:
     336.  00:985D  C9                  	RET
     337.  00:985E                      
     338.  00:985E                      
     339.  00:985E                      
     340.  00:985E                      
     341.  00:985E                      ;;=====================================================
     342.  00:985E                      ;;ACCION_VIDAEXTRA
     343.  00:985E                      ;;=====================================================	
     344.  00:985E                      ; función: 	
     345.  00:985E                      ; entrada: 	
     346.  00:985E                      ; salida: 	-
     347.  00:985E                      accion_ballesta:
     348.  00:985E                      fin_accion_ballesta:
     349.  00:985E  C9                  	RET
     350.  00:985F                      
     130   00:985F                      	
     131   00:985F                      
     132   00:985F                      ;;=====================================================
     133   00:985F                      ;;DEFINICIÓN DE SUBRUTINAS DE FERNANDO PARA COMPRESIÓN Y SONIDO
     134   00:985F                      ;;=====================================================
     135   00:985F                      ;Este include lleva la rutina de descompresión de ROM/RAM a VRAM de pletter
     136   00:985F                      ;Está adaptada de la original a sjasm
     137   00:985F                      ;	HL = RAM/ROM source	; DE = VRAM destination
     138   00:985F                      depack_VRAM:
     139   00:985F                      	include "PL_VRAM_Depack_SJASM.asm"
       1.  00:985F                      ;-----------------------------------------------------------
       2.  00:985F                      ; Pletter v0.5b VRAM Depacker v1.1 - 16Kb version
       3.  00:985F                      ; HL = RAM/ROM source ; DE = VRAM destination
       4.  00:985F                      ;-----------------------------------------------------------
       5.  00:985F  F3                  	di
       6.  00:9860                      
       7.  00:9860                      ; VRAM address setup
       8.  00:9860  7B                  	ld	a,e
       9.  00:9861  D3 99               	out	[099h],a
      10.  00:9863  7A                  	ld	a,d
      11.  00:9864  F6 40               	or	040h
      12.  00:9866  D3 99               	out	[099h],a
      13.  00:9868                      
      14.  00:9868                      ; Initialization
      15.  00:9868  7E                  	ld	a,[hl]
      16.  00:9869  23                  	inc	hl
      17.  00:986A  D9                  	exx
      18.  00:986B  11 00 00            	ld	de,0
      19.  00:986E  87                  	add	a,a
      20.  00:986F  3C                  	inc	a
      21.  00:9870  CB 13               	rl	e
      22.  00:9872  87                  	add	a,a
      23.  00:9873  CB 13               	rl	e
      24.  00:9875  87                  	add	a,a
      25.  00:9876  CB 13               	rl	e
      26.  00:9878  CB 13               	rl	e
      27.  00:987A  21 31 99            	ld	hl,modes
      28.  00:987D  19                  	add	hl,de
      29.  00:987E  5E                  	ld	e,[hl]
      30.  00:987F  DD 6B               	ld	ixl,e
      31.  00:9881  23                  	inc	hl
      32.  00:9882  5E                  	ld	e,[hl]
      33.  00:9883  DD 63               	ld	ixh,e
      34.  00:9885  1E 01               	ld	e,1
      35.  00:9887  D9                  	exx
      36.  00:9888  FD 21 91 98         	ld	iy,loop
      37.  00:988C                      
      38.  00:988C                      ; Main depack loop
      39.  00:988C  0E 98               literal:ld	c,098h
      40.  00:988E  ED A3               	outi
      41.  00:9890  13                  	inc	de
      42.  00:9891  87                  loop:	add	a,a
      43.  00:9892  CC 25 99              	call	z,getbit
      44.  00:9895  30 F5               	jr	nc,literal
      45.  00:9897                      
      46.  00:9897                      ; Compressed data
      47.  00:9897  D9                  	exx
      48.  00:9898  62                  	ld	h,d
      49.  00:9899  6B                  	ld	l,e
      50.  00:989A  87                  getlen: add	a,a
      51.  00:989B  CC 29 99            	call	z,getbitexx
      52.  00:989E  30 1D               	jr	nc,lenok
      53.  00:98A0  87                  lus:	add	a,a
      54.  00:98A1  CC 29 99            	call	z,getbitexx
      55.  00:98A4  ED 6A               	adc	hl,hl
      56.  00:98A6  D8                  	ret	c
      57.  00:98A7  87                  	add	a,a
      58.  00:98A8  CC 29 99            	call	z,getbitexx
      59.  00:98AB  30 10               	jr	nc,lenok
      60.  00:98AD  87                  	add	a,a
      61.  00:98AE  CC 29 99            	call	z,getbitexx
      62.  00:98B1  ED 6A               	adc	hl,hl
      63.  00:98B3  DA 2F 99            	jp	c,Depack_out
      64.  00:98B6  87                  	add	a,a
      65.  00:98B7  CC 29 99            	call	z,getbitexx
      66.  00:98BA  DA A0 98            	jp	c,lus
      67.  00:98BD  23                  lenok:  inc	hl
      68.  00:98BE  D9                  	exx
      69.  00:98BF  4E                  	ld	c,[hl]
      70.  00:98C0  23                  	inc	hl
      71.  00:98C1  06 00               	ld	b,0
      72.  00:98C3  CB 79               	bit	7,c
      73.  00:98C5  CA F8 98            	jp	z,offsok
      74.  00:98C8  DD E9               	jp	ix
      75.  00:98CA                      
      76.  00:98CA  87                  mode7:  add	a,a
      77.  00:98CB  CC 25 99              	call	z,getbit
      78.  00:98CE  CB 10               	rl	b
      79.  00:98D0  87                  mode6:	add	a,a
      80.  00:98D1  CC 25 99              	call	z,getbit
      81.  00:98D4  CB 10               	rl	b
      82.  00:98D6  87                  mode5:  add	a,a
      83.  00:98D7  CC 25 99              	call	z,getbit
      84.  00:98DA  CB 10               	rl	b
      85.  00:98DC  87                  mode4:  add	a,a
      86.  00:98DD  CC 25 99              	call	z,getbit
      87.  00:98E0  CB 10               	rl	b
      88.  00:98E2  87                  mode3:  add	a,a
      89.  00:98E3  CC 25 99              	call	z,getbit
      90.  00:98E6  CB 10               	rl	b
      91.  00:98E8  87                  mode2:	add	a,a
      92.  00:98E9  CC 25 99              	call	z,getbit
      93.  00:98EC  CB 10               	rl	b
      94.  00:98EE  87                  	add	a,a
      95.  00:98EF  CC 25 99              	call	z,getbit
      96.  00:98F2  30 04               	jr	nc,offsok
      97.  00:98F4  B7                  	or	a
      98.  00:98F5  04                  	inc	b
      99.  00:98F6  CB B9               	res	7,c
     100.  00:98F8  03                  offsok: inc	bc
     101.  00:98F9  E5                  	push	hl
     102.  00:98FA  D9                  	exx
     103.  00:98FB  E5                  	push	hl
     104.  00:98FC  D9                  	exx
     105.  00:98FD  6B                  	ld	l,e
     106.  00:98FE  62                  	ld	h,d
     107.  00:98FF  ED 42               	sbc	hl,bc
     108.  00:9901  C1                  	pop	bc
     109.  00:9902  F5                  	push	af
     110.  00:9903  7D                  .loop:	ld	a,l
     111.  00:9904  D3 99               	out	[099h],a
     112.  00:9906  7C                  	ld	a,h
     113.  00:9907  00                  	nop                     ; VDP timing
     114.  00:9908  D3 99               	out	[099h],a
     115.  00:990A  00                  	nop                     ; VDP timing
     116.  00:990B  DB 98               	in	a,[098h]
     117.  00:990D  08                  	ex	af,af'
     118.  00:990E  7B                  	ld	a,e
     119.  00:990F  00                  	nop			; VDP timing
     120.  00:9910  D3 99               	out	[099h],a
     121.  00:9912  7A                  	ld	a,d
     122.  00:9913  F6 40               	or	040h
     123.  00:9915  D3 99               	out	[099h],a
     124.  00:9917  08                  	ex	af,af'
     125.  00:9918  00                  	nop			; VDP timing
     126.  00:9919  D3 98               	out	[098h],a
     127.  00:991B  13                  	inc	de
     128.  00:991C  ED A1               	cpi
     129.  00:991E  EA 03 99            	jp	pe,.loop
     130.  00:9921  F1                  	pop	af
     131.  00:9922  E1                  	pop	hl
     132.  00:9923  FD E9               	jp	iy
     133.  00:9925                      
     134.  00:9925  7E                  getbit: ld	a,[hl]
     135.  00:9926  23                  	inc	hl
     136.  00:9927  17                  	rla
     137.  00:9928  C9                  	ret
     138.  00:9929                      
     139.  00:9929                      getbitexx:
     140.  00:9929  D9                  	exx
     141.  00:992A  7E                  	ld	a,[hl]
     142.  00:992B  23                  	inc	hl
     143.  00:992C  D9                  	exx
     144.  00:992D  17                  	rla
     145.  00:992E  C9                  	ret
     146.  00:992F                      
     147.  00:992F                      ; Depacker exit
     148.  00:992F                      Depack_out:
     149.  00:992F  FB                  	ei
     150.  00:9930  C9                  	ret
     151.  00:9931                      
     152.  00:9931                      modes:
     153.  00:9931  F8 98               	dw	offsok
     154.  00:9933  E8 98               	dw	mode2
     155.  00:9935  E2 98               	dw	mode3
     156.  00:9937  DC 98               	dw	mode4
     157.  00:9939  D6 98               	dw	mode5
     158.  00:993B  D0 98               	dw	mode6
     159.  00:993D  CA 98               	dw	mode7
     140   00:993F                      
     141   00:993F                      
     142   00:993F                      	
     143   00:993F                      ;;=====================================================
     144   00:993F                      ;;DEFINICIÓN DE ESTRUCTURAS
     145   00:993F                      ;;=====================================================		
     146   00:993F                      	include "estructuras.asm"
       1.  00:993F                      ;;=====================================================
       2.  00:993F                      ;;DEFINICIÓN DE ESTRUCTURAS
       3.  00:993F                      ;;=====================================================
       4.  00:993F                      
       5.  00:993F                      ;crear estructura
       6.  00:993F                      
       7.  00:993F                      	STRUCT ESTRUCTURA_PUNTOMIRA
       8.  00:993F                    < posx			DB		100
       9.  00:993F                    < posy			DB		100
      10.  00:993F                    < escena			DB		0	;valores porsibles 0 (blanco+rojo en punto de mira) y NEG 0 (al revés)
      11.  00:993F                    < velocidad		DB		0
      12.  00:993F                    < boton2_pressed  DB		0
      13.  00:993F                    < cadencia		DB		5	;nº de veces que se ejecutará el disparo antes de ejecutar un disparo real (porque cuando se pulsa la tecl dispara 3 ó 4 veces de rápido que va)
      14.  00:993F                    < ; al final he decidido (ya que el punto de mira es el prota) que lo relacionado con el prota vaya en esta estructura
      15.  00:993F                    < pm_aux1			DB		0	;para llegar a los 16 campos
      16.  00:993F                    < pm_aux2			DB		0	;para llegar a los 16 campos
      17.  00:993F                    < pm_aux3			DB		0	;para llegar a los 16 campos
      18.  00:993F                    < pm_aux4			DB		0	;para llegar a los 16 campos
      19.  00:993F                    < pm_aux5			DB		0	;para llegar a los 16 campos
      20.  00:993F                    < pm_aux6			DB		0	;para llegar a los 16 campos
      21.  00:993F                    < pm_aux7			DB		0	;para llegar a los 16 campos
      22.  00:993F                    < pm_aux8			DB		0	;para llegar a los 16 campos
      23.  00:993F                    < pm_aux9			DB		0	;para llegar a los 16 campos
      24.  00:993F                    < pm_aux10		DB		0	;para llegar a los 16 campos
      25.  00:993F                    < 	ENDSTRUCT;ESTRUCTURA_PUNTOMIRA
      26.  00:993F                      
      27.  00:993F                      	
      28.  00:993F                      	STRUCT ESTRUCTURA_ENEMIGO
      29.  00:993F                    < tipo				DB		0	;(0 serpiente por ejemplo) #FF muerto o no existe
      30.  00:993F                    < posx				DB		5
      31.  00:993F                    < posy				DB		50
      32.  00:993F                    < color				DB		5
      33.  00:993F                    < escena				DB		0
      34.  00:993F                    < contador_siguiente_escena	DB	0
      35.  00:993F                    < reset_contador		DB		0
      36.  00:993F                    < dano				DB		0	;daño
      37.  00:993F                    < energia				DB		0	;energía del enemigo... si llega a 0 => existe <- 0
      38.  00:993F                    < ;indica el nº de sprite a mostrar y si está compuesto por uno o dos sprites y si están en horizontal o vertical
      39.  00:993F                    < ver_hor				DB		0
      40.  00:993F                    < manejador_dibujo 	DW		0
      41.  00:993F                    < en_aux3				DB		0
      42.  00:993F                    < en_aux4				DB		0
      43.  00:993F                    < 	ENDSTRUCT;ESTRUCTURA_ENEMIGO
      44.  00:993F                      	
      45.  00:993F                      	STRUCT ESTRUCTURA_AYUDA		;vidas extra, plantas de curación de energía, reliquias	
      46.  00:993F                    < activo				DB		0	;0 no activo <>0 activo 
      47.  00:993F                    < tipo				DB		0	;ver constantes 
      48.  00:993F                    < tipousado			DB		0	;es tipo + 4
      49.  00:993F                    < postile				DW		0	;(wordaux1)como tiene algo de aleatoriedad se guarda para dibujar los tiles de usado ;almacena la posición en el tilemap 0 al 675
      50.  00:993F                    < pospantalla			DW		0	;(wordaux2)pos dentro de la pantalla (en el banco 1)
      51.  00:993F                    < posx				DB		0
      52.  00:993F                    < posy				DB		0
      53.  00:993F                    < puntero_accion		DW		0	;subrutina que indica la acción si se dispara en el objeto
      54.  00:993F                    < ayu_aux1			DB		0	;relleno
      55.  00:993F                    < ayu_aux2			DB		0	;relleno
      56.  00:993F                    < ayu_aux3			DB		0	;relleno
      57.  00:993F                    < ayu_aux4			DB		0	;relleno
      58.  00:993F                    < ayu_aux5			DB		0	;relleno
      59.  00:993F                    < 	ENDSTRUCT;ESTRUCTURA_AYUDA
      60.  00:993F                      
      61.  00:993F                      
      62.  00:993F                      
      63.  00:993F                      
      64.  00:993F                      
      65.  00:993F                      
      66.  00:993F                      
     147   00:993F                      	
     148   00:993F                      ;;=====================================================
     149   00:993F                      ;;DEFINICIÓN DE VARIABLES
     150   00:993F                      ;;=====================================================		
     151   00:993F                      	include "sprites.asm"
       1.  00:993F                      ;;=====================================================
       2.  00:993F                      ;;DEFINICIÓN DE SPRITES
       3.  00:993F                      ;;=====================================================	
       4.  00:993F                      
       5.  00:993F                      
       6.  00:993F                      ;; NOTA:
       7.  00:993F                      ;~ sprite_reliquia_oracion: on/off
       8.  00:993F                      ;~ sprite_reliquia_cruz: on/off
       9.  00:993F                      ;~ sprite_reliquia_agua: on/off
      10.  00:993F                      ;~ sprite_peto: on/off
      11.  00:993F                      ;~ sprite_planta: on/off
      12.  00:993F                      ;~ sprite_vida_extra: on/off
      13.  00:993F                      ;~ sprite_ballesta_mejorada: on/off
      14.  00:993F                      
      15.  00:993F                      ;~ iban a ser sprites pero por falta de recursos serán tiles
      16.  00:993F                      
      17.  00:993F                      
      18.  00:993F                      sprites_pantantalla:
      19.  00:993F                      
      20.  00:993F                      ;; PARTE 1: SPRITES COMUNES
      21.  00:993F                      
      22.  00:993F                      sprites_comunes:
      23.  00:993F                      sprite_punto_mira_1:	;color 8
      24.  00:993F                      	db #FF,#FF,#C0,#C0,#C0,#C0,#C0,#C0
      24.  00:993F  FF FF C0 C0 C0 C0 C0 C0 
      25.  00:9947                      	db #C0,#C0,#C0,#C0,#C0,#C0,#FF,#FF
      25.  00:9947  C0 C0 C0 C0 C0 C0 FF FF 
      26.  00:994F                      	db #FF,#FF,#03,#03,#03,#03,#03,#03
      26.  00:994F  FF FF 03 03 03 03 03 03 
      27.  00:9957                      	db #03,#03,#03,#03,#03,#03,#FF,#FF
      27.  00:9957  03 03 03 03 03 03 FF FF 
      28.  00:995F                      	
      29.  00:995F                      sprite_punto_mira_2: 	;color 15
      30.  00:995F                      	db #00,#00,#00,#00,#0F,#0F,#0C,#0C
      30.  00:995F  00 00 00 00 0F 0F 0C 0C 
      31.  00:9967                      	db #0C,#0C,#0F,#0F,#00,#00,#00,#00
      31.  00:9967  0C 0C 0F 0F 00 00 00 00 
      32.  00:996F                      	db #00,#00,#00,#00,#F0,#F0,#30,#30
      32.  00:996F  00 00 00 00 F0 F0 30 30 
      33.  00:9977                      	db #30,#30,#F0,#F0,#00,#00,#00,#00
      33.  00:9977  30 30 F0 F0 00 00 00 00 
      34.  00:997F                      	
      35.  00:997F                      sprite_punto_mira_1_mejorado:
      36.  00:997F                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      36.  00:997F  FF FF FF FF FF FF FF FF 
      37.  00:9987                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      37.  00:9987  FF FF FF FF FF FF FF FF 
      38.  00:998F                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      38.  00:998F  FF FF FF FF FF FF FF FF 
      39.  00:9997                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      39.  00:9997  FF FF FF FF FF FF FF FF 
      40.  00:999F                      
      41.  00:999F                      sprite_punto_mira_2_mejorado:
      42.  00:999F                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      42.  00:999F  FF FF FF FF FF FF FF FF 
      43.  00:99A7                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      43.  00:99A7  FF FF FF FF FF FF FF FF 
      44.  00:99AF                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      44.  00:99AF  FF FF FF FF FF FF FF FF 
      45.  00:99B7                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      45.  00:99B7  FF FF FF FF FF FF FF FF 
      46.  00:99BF                      	
      47.  00:99BF                      sprite_explosion_1:
      48.  00:99BF                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      48.  00:99BF  FF FF FF FF FF FF FF FF 
      49.  00:99C7                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      49.  00:99C7  FF FF FF FF FF FF FF FF 
      50.  00:99CF                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      50.  00:99CF  FF FF FF FF FF FF FF FF 
      51.  00:99D7                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF	
      51.  00:99D7  FF FF FF FF FF FF FF FF 
      52.  00:99DF                      
      53.  00:99DF                      sprite_explosion_2:
      54.  00:99DF                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      54.  00:99DF  FF FF FF FF FF FF FF FF 
      55.  00:99E7                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      55.  00:99E7  FF FF FF FF FF FF FF FF 
      56.  00:99EF                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      56.  00:99EF  FF FF FF FF FF FF FF FF 
      57.  00:99F7                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF	
      57.  00:99F7  FF FF FF FF FF FF FF FF 
      58.  00:99FF                      fin_sprites_comunes:
      59.  00:99FF                      
      60.  00:99FF                      ;; PARTE 2: SPRITES NO COMUNES
      61.  00:99FF                      
      62.  00:99FF                      ;; ARAÑA
      63.  00:99FF                      	
      64.  00:99FF                      sprite_arana1_1:
      65.  00:99FF                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      65.  00:99FF  FF FF FF FF FF FF FF FF 
      66.  00:9A07                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      66.  00:9A07  FF FF FF FF FF FF FF FF 
      67.  00:9A0F                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      67.  00:9A0F  FF FF FF FF FF FF FF FF 
      68.  00:9A17                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      68.  00:9A17  FF FF FF FF FF FF FF FF 
      69.  00:9A1F                      	
      70.  00:9A1F                      sprite_arana1_2:
      71.  00:9A1F                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      71.  00:9A1F  FF FF FF FF FF FF FF FF 
      72.  00:9A27                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      72.  00:9A27  FF FF FF FF FF FF FF FF 
      73.  00:9A2F                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      73.  00:9A2F  FF FF FF FF FF FF FF FF 
      74.  00:9A37                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      74.  00:9A37  FF FF FF FF FF FF FF FF 
      75.  00:9A3F                      
      76.  00:9A3F                      ;; MURCIELAGO
      77.  00:9A3F                      	
      78.  00:9A3F                      sprite_murcielago1_1:
      79.  00:9A3F                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      79.  00:9A3F  FF FF FF FF FF FF FF FF 
      80.  00:9A47                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      80.  00:9A47  FF FF FF FF FF FF FF FF 
      81.  00:9A4F                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      81.  00:9A4F  FF FF FF FF FF FF FF FF 
      82.  00:9A57                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      82.  00:9A57  FF FF FF FF FF FF FF FF 
      83.  00:9A5F                      	
      84.  00:9A5F                      sprite_murcielago1_2:
      85.  00:9A5F                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      85.  00:9A5F  FF FF FF FF FF FF FF FF 
      86.  00:9A67                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      86.  00:9A67  FF FF FF FF FF FF FF FF 
      87.  00:9A6F                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      87.  00:9A6F  FF FF FF FF FF FF FF FF 
      88.  00:9A77                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF	
      88.  00:9A77  FF FF FF FF FF FF FF FF 
      89.  00:9A7F                      
      90.  00:9A7F                      ;; SERPIENTE
      91.  00:9A7F                      
      92.  00:9A7F                      sprite_serpiente1_1:
      93.  00:9A7F                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      93.  00:9A7F  FF FF FF FF FF FF FF FF 
      94.  00:9A87                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      94.  00:9A87  FF FF FF FF FF FF FF FF 
      95.  00:9A8F                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      95.  00:9A8F  FF FF FF FF FF FF FF FF 
      96.  00:9A97                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      96.  00:9A97  FF FF FF FF FF FF FF FF 
      97.  00:9A9F                      	
      98.  00:9A9F                      sprite_serpiente1_2:
      99.  00:9A9F                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      99.  00:9A9F  FF FF FF FF FF FF FF FF 
     100.  00:9AA7                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     100.  00:9AA7  FF FF FF FF FF FF FF FF 
     101.  00:9AAF                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     101.  00:9AAF  FF FF FF FF FF FF FF FF 
     102.  00:9AB7                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     102.  00:9AB7  FF FF FF FF FF FF FF FF 
     103.  00:9ABF                      	
     104.  00:9ABF                      sprite_serpiente2_1:
     105.  00:9ABF                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     105.  00:9ABF  FF FF FF FF FF FF FF FF 
     106.  00:9AC7                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     106.  00:9AC7  FF FF FF FF FF FF FF FF 
     107.  00:9ACF                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     107.  00:9ACF  FF FF FF FF FF FF FF FF 
     108.  00:9AD7                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     108.  00:9AD7  FF FF FF FF FF FF FF FF 
     109.  00:9ADF                      	
     110.  00:9ADF                      sprite_serpiente2_2:
     111.  00:9ADF                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     111.  00:9ADF  FF FF FF FF FF FF FF FF 
     112.  00:9AE7                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     112.  00:9AE7  FF FF FF FF FF FF FF FF 
     113.  00:9AEF                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     113.  00:9AEF  FF FF FF FF FF FF FF FF 
     114.  00:9AF7                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     114.  00:9AF7  FF FF FF FF FF FF FF FF 
     115.  00:9AFF                      
     116.  00:9AFF                      ;; ZOMBI
     117.  00:9AFF                      
     118.  00:9AFF                      sprite_zombi1_1_1:
     119.  00:9AFF                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     119.  00:9AFF  FF FF FF FF FF FF FF FF 
     120.  00:9B07                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     120.  00:9B07  FF FF FF FF FF FF FF FF 
     121.  00:9B0F                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     121.  00:9B0F  FF FF FF FF FF FF FF FF 
     122.  00:9B17                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     122.  00:9B17  FF FF FF FF FF FF FF FF 
     123.  00:9B1F                      
     124.  00:9B1F                      sprite_zombi1_2_1:
     125.  00:9B1F                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     125.  00:9B1F  FF FF FF FF FF FF FF FF 
     126.  00:9B27                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     126.  00:9B27  FF FF FF FF FF FF FF FF 
     127.  00:9B2F                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     127.  00:9B2F  FF FF FF FF FF FF FF FF 
     128.  00:9B37                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     128.  00:9B37  FF FF FF FF FF FF FF FF 
     129.  00:9B3F                      	
     130.  00:9B3F                      sprite_zombi1_3_1:
     131.  00:9B3F                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     131.  00:9B3F  FF FF FF FF FF FF FF FF 
     132.  00:9B47                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     132.  00:9B47  FF FF FF FF FF FF FF FF 
     133.  00:9B4F                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     133.  00:9B4F  FF FF FF FF FF FF FF FF 
     134.  00:9B57                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     134.  00:9B57  FF FF FF FF FF FF FF FF 
     135.  00:9B5F                      	
     136.  00:9B5F                      sprite_zombi1_4_1:
     137.  00:9B5F                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     137.  00:9B5F  FF FF FF FF FF FF FF FF 
     138.  00:9B67                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     138.  00:9B67  FF FF FF FF FF FF FF FF 
     139.  00:9B6F                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     139.  00:9B6F  FF FF FF FF FF FF FF FF 
     140.  00:9B77                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     140.  00:9B77  FF FF FF FF FF FF FF FF 
     141.  00:9B7F                      	
     142.  00:9B7F                      sprite_zombi1_1_2:
     143.  00:9B7F                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     143.  00:9B7F  FF FF FF FF FF FF FF FF 
     144.  00:9B87                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     144.  00:9B87  FF FF FF FF FF FF FF FF 
     145.  00:9B8F                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     145.  00:9B8F  FF FF FF FF FF FF FF FF 
     146.  00:9B97                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     146.  00:9B97  FF FF FF FF FF FF FF FF 
     147.  00:9B9F                      
     148.  00:9B9F                      sprite_zombi1_2_2:
     149.  00:9B9F                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     149.  00:9B9F  FF FF FF FF FF FF FF FF 
     150.  00:9BA7                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     150.  00:9BA7  FF FF FF FF FF FF FF FF 
     151.  00:9BAF                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     151.  00:9BAF  FF FF FF FF FF FF FF FF 
     152.  00:9BB7                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     152.  00:9BB7  FF FF FF FF FF FF FF FF 
     153.  00:9BBF                      	
     154.  00:9BBF                      sprite_zombi1_3_2:
     155.  00:9BBF                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     155.  00:9BBF  FF FF FF FF FF FF FF FF 
     156.  00:9BC7                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     156.  00:9BC7  FF FF FF FF FF FF FF FF 
     157.  00:9BCF                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     157.  00:9BCF  FF FF FF FF FF FF FF FF 
     158.  00:9BD7                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     158.  00:9BD7  FF FF FF FF FF FF FF FF 
     159.  00:9BDF                      	
     160.  00:9BDF                      sprite_zombi1_4_2:
     161.  00:9BDF                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     161.  00:9BDF  FF FF FF FF FF FF FF FF 
     162.  00:9BE7                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     162.  00:9BE7  FF FF FF FF FF FF FF FF 
     163.  00:9BEF                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     163.  00:9BEF  FF FF FF FF FF FF FF FF 
     164.  00:9BF7                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     164.  00:9BF7  FF FF FF FF FF FF FF FF 
     165.  00:9BFF                      	
     166.  00:9BFF                      sprite_zombi2_1_1:
     167.  00:9BFF                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     167.  00:9BFF  FF FF FF FF FF FF FF FF 
     168.  00:9C07                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     168.  00:9C07  FF FF FF FF FF FF FF FF 
     169.  00:9C0F                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     169.  00:9C0F  FF FF FF FF FF FF FF FF 
     170.  00:9C17                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     170.  00:9C17  FF FF FF FF FF FF FF FF 
     171.  00:9C1F                      
     172.  00:9C1F                      sprite_zombi2_2_1:
     173.  00:9C1F                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     173.  00:9C1F  FF FF FF FF FF FF FF FF 
     174.  00:9C27                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     174.  00:9C27  FF FF FF FF FF FF FF FF 
     175.  00:9C2F                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     175.  00:9C2F  FF FF FF FF FF FF FF FF 
     176.  00:9C37                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     176.  00:9C37  FF FF FF FF FF FF FF FF 
     177.  00:9C3F                      	
     178.  00:9C3F                      sprite_zombi2_3_1:
     179.  00:9C3F                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     179.  00:9C3F  FF FF FF FF FF FF FF FF 
     180.  00:9C47                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     180.  00:9C47  FF FF FF FF FF FF FF FF 
     181.  00:9C4F                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     181.  00:9C4F  FF FF FF FF FF FF FF FF 
     182.  00:9C57                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     182.  00:9C57  FF FF FF FF FF FF FF FF 
     183.  00:9C5F                      	
     184.  00:9C5F                      sprite_zombi2_4_1:
     185.  00:9C5F                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     185.  00:9C5F  FF FF FF FF FF FF FF FF 
     186.  00:9C67                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     186.  00:9C67  FF FF FF FF FF FF FF FF 
     187.  00:9C6F                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     187.  00:9C6F  FF FF FF FF FF FF FF FF 
     188.  00:9C77                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     188.  00:9C77  FF FF FF FF FF FF FF FF 
     189.  00:9C7F                      	
     190.  00:9C7F                      sprite_zombi2_1_2:
     191.  00:9C7F                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     191.  00:9C7F  FF FF FF FF FF FF FF FF 
     192.  00:9C87                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     192.  00:9C87  FF FF FF FF FF FF FF FF 
     193.  00:9C8F                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     193.  00:9C8F  FF FF FF FF FF FF FF FF 
     194.  00:9C97                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     194.  00:9C97  FF FF FF FF FF FF FF FF 
     195.  00:9C9F                      
     196.  00:9C9F                      sprite_zombi2_2_2:
     197.  00:9C9F                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     197.  00:9C9F  FF FF FF FF FF FF FF FF 
     198.  00:9CA7                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     198.  00:9CA7  FF FF FF FF FF FF FF FF 
     199.  00:9CAF                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     199.  00:9CAF  FF FF FF FF FF FF FF FF 
     200.  00:9CB7                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     200.  00:9CB7  FF FF FF FF FF FF FF FF 
     201.  00:9CBF                      	
     202.  00:9CBF                      sprite_zombi2_3_2:
     203.  00:9CBF                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     203.  00:9CBF  FF FF FF FF FF FF FF FF 
     204.  00:9CC7                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     204.  00:9CC7  FF FF FF FF FF FF FF FF 
     205.  00:9CCF                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     205.  00:9CCF  FF FF FF FF FF FF FF FF 
     206.  00:9CD7                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     206.  00:9CD7  FF FF FF FF FF FF FF FF 
     207.  00:9CDF                      	
     208.  00:9CDF                      sprite_zombi2_4_2:
     209.  00:9CDF                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     209.  00:9CDF  FF FF FF FF FF FF FF FF 
     210.  00:9CE7                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     210.  00:9CE7  FF FF FF FF FF FF FF FF 
     211.  00:9CEF                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     211.  00:9CEF  FF FF FF FF FF FF FF FF 
     212.  00:9CF7                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     212.  00:9CF7  FF FF FF FF FF FF FF FF 
     213.  00:9CFF                      	
     214.  00:9CFF                      ;; CABALLERO
     215.  00:9CFF                      
     216.  00:9CFF                      sprite_caballero1_1_1:
     217.  00:9CFF                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     217.  00:9CFF  FF FF FF FF FF FF FF FF 
     218.  00:9D07                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     218.  00:9D07  FF FF FF FF FF FF FF FF 
     219.  00:9D0F                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     219.  00:9D0F  FF FF FF FF FF FF FF FF 
     220.  00:9D17                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     220.  00:9D17  FF FF FF FF FF FF FF FF 
     221.  00:9D1F                      
     222.  00:9D1F                      sprite_caballero1_2_1:
     223.  00:9D1F                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     223.  00:9D1F  FF FF FF FF FF FF FF FF 
     224.  00:9D27                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     224.  00:9D27  FF FF FF FF FF FF FF FF 
     225.  00:9D2F                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     225.  00:9D2F  FF FF FF FF FF FF FF FF 
     226.  00:9D37                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     226.  00:9D37  FF FF FF FF FF FF FF FF 
     227.  00:9D3F                      	
     228.  00:9D3F                      sprite_caballero1_3_1:
     229.  00:9D3F                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     229.  00:9D3F  FF FF FF FF FF FF FF FF 
     230.  00:9D47                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     230.  00:9D47  FF FF FF FF FF FF FF FF 
     231.  00:9D4F                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     231.  00:9D4F  FF FF FF FF FF FF FF FF 
     232.  00:9D57                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     232.  00:9D57  FF FF FF FF FF FF FF FF 
     233.  00:9D5F                      	
     234.  00:9D5F                      sprite_caballero1_4_1:
     235.  00:9D5F                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     235.  00:9D5F  FF FF FF FF FF FF FF FF 
     236.  00:9D67                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     236.  00:9D67  FF FF FF FF FF FF FF FF 
     237.  00:9D6F                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     237.  00:9D6F  FF FF FF FF FF FF FF FF 
     238.  00:9D77                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     238.  00:9D77  FF FF FF FF FF FF FF FF 
     239.  00:9D7F                      	
     240.  00:9D7F                      sprite_caballero1_1_2:
     241.  00:9D7F                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     241.  00:9D7F  FF FF FF FF FF FF FF FF 
     242.  00:9D87                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     242.  00:9D87  FF FF FF FF FF FF FF FF 
     243.  00:9D8F                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     243.  00:9D8F  FF FF FF FF FF FF FF FF 
     244.  00:9D97                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     244.  00:9D97  FF FF FF FF FF FF FF FF 
     245.  00:9D9F                      
     246.  00:9D9F                      sprite_caballero1_2_2:
     247.  00:9D9F                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     247.  00:9D9F  FF FF FF FF FF FF FF FF 
     248.  00:9DA7                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     248.  00:9DA7  FF FF FF FF FF FF FF FF 
     249.  00:9DAF                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     249.  00:9DAF  FF FF FF FF FF FF FF FF 
     250.  00:9DB7                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     250.  00:9DB7  FF FF FF FF FF FF FF FF 
     251.  00:9DBF                      	
     252.  00:9DBF                      sprite_caballero1_3_2:
     253.  00:9DBF                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     253.  00:9DBF  FF FF FF FF FF FF FF FF 
     254.  00:9DC7                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     254.  00:9DC7  FF FF FF FF FF FF FF FF 
     255.  00:9DCF                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     255.  00:9DCF  FF FF FF FF FF FF FF FF 
     256.  00:9DD7                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     256.  00:9DD7  FF FF FF FF FF FF FF FF 
     257.  00:9DDF                      	
     258.  00:9DDF                      sprite_caballero1_4_2:
     259.  00:9DDF                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     259.  00:9DDF  FF FF FF FF FF FF FF FF 
     260.  00:9DE7                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     260.  00:9DE7  FF FF FF FF FF FF FF FF 
     261.  00:9DEF                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     261.  00:9DEF  FF FF FF FF FF FF FF FF 
     262.  00:9DF7                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     262.  00:9DF7  FF FF FF FF FF FF FF FF 
     263.  00:9DFF                      	
     264.  00:9DFF                      sprite_caballero2_1_1:
     265.  00:9DFF                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     265.  00:9DFF  FF FF FF FF FF FF FF FF 
     266.  00:9E07                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     266.  00:9E07  FF FF FF FF FF FF FF FF 
     267.  00:9E0F                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     267.  00:9E0F  FF FF FF FF FF FF FF FF 
     268.  00:9E17                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     268.  00:9E17  FF FF FF FF FF FF FF FF 
     269.  00:9E1F                      
     270.  00:9E1F                      sprite_caballero2_2_1:
     271.  00:9E1F                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     271.  00:9E1F  FF FF FF FF FF FF FF FF 
     272.  00:9E27                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     272.  00:9E27  FF FF FF FF FF FF FF FF 
     273.  00:9E2F                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     273.  00:9E2F  FF FF FF FF FF FF FF FF 
     274.  00:9E37                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     274.  00:9E37  FF FF FF FF FF FF FF FF 
     275.  00:9E3F                      	
     276.  00:9E3F                      sprite_caballero2_3_1:
     277.  00:9E3F                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     277.  00:9E3F  FF FF FF FF FF FF FF FF 
     278.  00:9E47                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     278.  00:9E47  FF FF FF FF FF FF FF FF 
     279.  00:9E4F                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     279.  00:9E4F  FF FF FF FF FF FF FF FF 
     280.  00:9E57                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     280.  00:9E57  FF FF FF FF FF FF FF FF 
     281.  00:9E5F                      	
     282.  00:9E5F                      sprite_caballero2_4_1:
     283.  00:9E5F                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     283.  00:9E5F  FF FF FF FF FF FF FF FF 
     284.  00:9E67                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     284.  00:9E67  FF FF FF FF FF FF FF FF 
     285.  00:9E6F                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     285.  00:9E6F  FF FF FF FF FF FF FF FF 
     286.  00:9E77                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     286.  00:9E77  FF FF FF FF FF FF FF FF 
     287.  00:9E7F                      	
     288.  00:9E7F                      sprite_caballero2_1_2:
     289.  00:9E7F                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     289.  00:9E7F  FF FF FF FF FF FF FF FF 
     290.  00:9E87                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     290.  00:9E87  FF FF FF FF FF FF FF FF 
     291.  00:9E8F                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     291.  00:9E8F  FF FF FF FF FF FF FF FF 
     292.  00:9E97                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     292.  00:9E97  FF FF FF FF FF FF FF FF 
     293.  00:9E9F                      
     294.  00:9E9F                      sprite_caballero2_2_2:
     295.  00:9E9F                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     295.  00:9E9F  FF FF FF FF FF FF FF FF 
     296.  00:9EA7                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     296.  00:9EA7  FF FF FF FF FF FF FF FF 
     297.  00:9EAF                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     297.  00:9EAF  FF FF FF FF FF FF FF FF 
     298.  00:9EB7                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     298.  00:9EB7  FF FF FF FF FF FF FF FF 
     299.  00:9EBF                      	
     300.  00:9EBF                      sprite_caballero2_3_2:
     301.  00:9EBF                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     301.  00:9EBF  FF FF FF FF FF FF FF FF 
     302.  00:9EC7                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     302.  00:9EC7  FF FF FF FF FF FF FF FF 
     303.  00:9ECF                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     303.  00:9ECF  FF FF FF FF FF FF FF FF 
     304.  00:9ED7                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     304.  00:9ED7  FF FF FF FF FF FF FF FF 
     305.  00:9EDF                      	
     306.  00:9EDF                      sprite_caballero2_4_2:
     307.  00:9EDF                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     307.  00:9EDF  FF FF FF FF FF FF FF FF 
     308.  00:9EE7                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     308.  00:9EE7  FF FF FF FF FF FF FF FF 
     309.  00:9EEF                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     309.  00:9EEF  FF FF FF FF FF FF FF FF 
     310.  00:9EF7                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     310.  00:9EF7  FF FF FF FF FF FF FF FF 
     311.  00:9EFF                      	
     312.  00:9EFF                      ;; LLAMA
     313.  00:9EFF                      
     314.  00:9EFF                      sprite_llama1_1:	
     315.  00:9EFF                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     315.  00:9EFF  FF FF FF FF FF FF FF FF 
     316.  00:9F07                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     316.  00:9F07  FF FF FF FF FF FF FF FF 
     317.  00:9F0F                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     317.  00:9F0F  FF FF FF FF FF FF FF FF 
     318.  00:9F17                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     318.  00:9F17  FF FF FF FF FF FF FF FF 
     319.  00:9F1F                      	
     320.  00:9F1F                      sprite_llama2_1:	
     321.  00:9F1F                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     321.  00:9F1F  FF FF FF FF FF FF FF FF 
     322.  00:9F27                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     322.  00:9F27  FF FF FF FF FF FF FF FF 
     323.  00:9F2F                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     323.  00:9F2F  FF FF FF FF FF FF FF FF 
     324.  00:9F37                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF	
     324.  00:9F37  FF FF FF FF FF FF FF FF 
     325.  00:9F3F                      	
     326.  00:9F3F                      sprite_llama1_2:	
     327.  00:9F3F                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     327.  00:9F3F  FF FF FF FF FF FF FF FF 
     328.  00:9F47                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     328.  00:9F47  FF FF FF FF FF FF FF FF 
     329.  00:9F4F                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     329.  00:9F4F  FF FF FF FF FF FF FF FF 
     330.  00:9F57                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     330.  00:9F57  FF FF FF FF FF FF FF FF 
     331.  00:9F5F                      	
     332.  00:9F5F                      sprite_llama2_2:	
     333.  00:9F5F                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     333.  00:9F5F  FF FF FF FF FF FF FF FF 
     334.  00:9F67                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     334.  00:9F67  FF FF FF FF FF FF FF FF 
     335.  00:9F6F                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     335.  00:9F6F  FF FF FF FF FF FF FF FF 
     336.  00:9F77                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF			
     336.  00:9F77  FF FF FF FF FF FF FF FF 
     337.  00:9F7F                      	
     338.  00:9F7F                      ;; FANTASMA
     339.  00:9F7F                      
     340.  00:9F7F                      sprite_fantasma1_1:
     341.  00:9F7F                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     341.  00:9F7F  FF FF FF FF FF FF FF FF 
     342.  00:9F87                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     342.  00:9F87  FF FF FF FF FF FF FF FF 
     343.  00:9F8F                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     343.  00:9F8F  FF FF FF FF FF FF FF FF 
     344.  00:9F97                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     344.  00:9F97  FF FF FF FF FF FF FF FF 
     345.  00:9F9F                      
     346.  00:9F9F                      sprite_fantasma2_1:
     347.  00:9F9F                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     347.  00:9F9F  FF FF FF FF FF FF FF FF 
     348.  00:9FA7                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     348.  00:9FA7  FF FF FF FF FF FF FF FF 
     349.  00:9FAF                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     349.  00:9FAF  FF FF FF FF FF FF FF FF 
     350.  00:9FB7                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     350.  00:9FB7  FF FF FF FF FF FF FF FF 
     351.  00:9FBF                      
     352.  00:9FBF                      sprite_fantasma1_2:
     353.  00:9FBF                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     353.  00:9FBF  FF FF FF FF FF FF FF FF 
     354.  00:9FC7                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     354.  00:9FC7  FF FF FF FF FF FF FF FF 
     355.  00:9FCF                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     355.  00:9FCF  FF FF FF FF FF FF FF FF 
     356.  00:9FD7                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     356.  00:9FD7  FF FF FF FF FF FF FF FF 
     357.  00:9FDF                      
     358.  00:9FDF                      sprite_fantasma2_2:
     359.  00:9FDF                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     359.  00:9FDF  FF FF FF FF FF FF FF FF 
     360.  00:9FE7                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     360.  00:9FE7  FF FF FF FF FF FF FF FF 
     361.  00:9FEF                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     361.  00:9FEF  FF FF FF FF FF FF FF FF 
     362.  00:9FF7                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF	
     362.  00:9FF7  FF FF FF FF FF FF FF FF 
     363.  00:9FFF                      	
     364.  00:9FFF                      ;; MAGIA
     365.  00:9FFF                      
     366.  00:9FFF                      sprite_magia1_1:
     367.  00:9FFF                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     367.  00:9FFF  FF FF FF FF FF FF FF FF 
     368.  00:A007                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     368.  00:A007  FF FF FF FF FF FF FF FF 
     369.  00:A00F                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     369.  00:A00F  FF FF FF FF FF FF FF FF 
     370.  00:A017                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     370.  00:A017  FF FF FF FF FF FF FF FF 
     371.  00:A01F                      
     372.  00:A01F                      sprite_magia2_1:
     373.  00:A01F                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     373.  00:A01F  FF FF FF FF FF FF FF FF 
     374.  00:A027                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     374.  00:A027  FF FF FF FF FF FF FF FF 
     375.  00:A02F                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     375.  00:A02F  FF FF FF FF FF FF FF FF 
     376.  00:A037                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     376.  00:A037  FF FF FF FF FF FF FF FF 
     377.  00:A03F                      
     378.  00:A03F                      sprite_magia1_2:
     379.  00:A03F                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     379.  00:A03F  FF FF FF FF FF FF FF FF 
     380.  00:A047                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     380.  00:A047  FF FF FF FF FF FF FF FF 
     381.  00:A04F                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     381.  00:A04F  FF FF FF FF FF FF FF FF 
     382.  00:A057                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     382.  00:A057  FF FF FF FF FF FF FF FF 
     383.  00:A05F                      
     384.  00:A05F                      sprite_magia2_2:
     385.  00:A05F                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     385.  00:A05F  FF FF FF FF FF FF FF FF 
     386.  00:A067                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     386.  00:A067  FF FF FF FF FF FF FF FF 
     387.  00:A06F                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     387.  00:A06F  FF FF FF FF FF FF FF FF 
     388.  00:A077                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF	
     388.  00:A077  FF FF FF FF FF FF FF FF 
     389.  00:A07F                      	
     390.  00:A07F                      	
     391.  00:A07F                      ;; BEHOLDER
     392.  00:A07F                      
     393.  00:A07F                      sprite_beholder1_1:
     394.  00:A07F                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     394.  00:A07F  FF FF FF FF FF FF FF FF 
     395.  00:A087                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     395.  00:A087  FF FF FF FF FF FF FF FF 
     396.  00:A08F                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     396.  00:A08F  FF FF FF FF FF FF FF FF 
     397.  00:A097                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     397.  00:A097  FF FF FF FF FF FF FF FF 
     398.  00:A09F                      
     399.  00:A09F                      sprite_beholder2_1:
     400.  00:A09F                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     400.  00:A09F  FF FF FF FF FF FF FF FF 
     401.  00:A0A7                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     401.  00:A0A7  FF FF FF FF FF FF FF FF 
     402.  00:A0AF                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     402.  00:A0AF  FF FF FF FF FF FF FF FF 
     403.  00:A0B7                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     403.  00:A0B7  FF FF FF FF FF FF FF FF 
     404.  00:A0BF                      
     405.  00:A0BF                      sprite_beholder3_1:
     406.  00:A0BF                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     406.  00:A0BF  FF FF FF FF FF FF FF FF 
     407.  00:A0C7                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     407.  00:A0C7  FF FF FF FF FF FF FF FF 
     408.  00:A0CF                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     408.  00:A0CF  FF FF FF FF FF FF FF FF 
     409.  00:A0D7                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     409.  00:A0D7  FF FF FF FF FF FF FF FF 
     410.  00:A0DF                      
     411.  00:A0DF                      sprite_beholder4_1:
     412.  00:A0DF                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     412.  00:A0DF  FF FF FF FF FF FF FF FF 
     413.  00:A0E7                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     413.  00:A0E7  FF FF FF FF FF FF FF FF 
     414.  00:A0EF                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     414.  00:A0EF  FF FF FF FF FF FF FF FF 
     415.  00:A0F7                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF	
     415.  00:A0F7  FF FF FF FF FF FF FF FF 
     416.  00:A0FF                      	
     417.  00:A0FF                      sprite_beholder1_2:
     418.  00:A0FF                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     418.  00:A0FF  FF FF FF FF FF FF FF FF 
     419.  00:A107                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     419.  00:A107  FF FF FF FF FF FF FF FF 
     420.  00:A10F                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     420.  00:A10F  FF FF FF FF FF FF FF FF 
     421.  00:A117                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     421.  00:A117  FF FF FF FF FF FF FF FF 
     422.  00:A11F                      
     423.  00:A11F                      sprite_beholder2_2:
     424.  00:A11F                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     424.  00:A11F  FF FF FF FF FF FF FF FF 
     425.  00:A127                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     425.  00:A127  FF FF FF FF FF FF FF FF 
     426.  00:A12F                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     426.  00:A12F  FF FF FF FF FF FF FF FF 
     427.  00:A137                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     427.  00:A137  FF FF FF FF FF FF FF FF 
     428.  00:A13F                      
     429.  00:A13F                      sprite_beholder3_2:
     430.  00:A13F                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     430.  00:A13F  FF FF FF FF FF FF FF FF 
     431.  00:A147                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     431.  00:A147  FF FF FF FF FF FF FF FF 
     432.  00:A14F                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     432.  00:A14F  FF FF FF FF FF FF FF FF 
     433.  00:A157                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     433.  00:A157  FF FF FF FF FF FF FF FF 
     434.  00:A15F                      
     435.  00:A15F                      sprite_beholder4_2:
     436.  00:A15F                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     436.  00:A15F  FF FF FF FF FF FF FF FF 
     437.  00:A167                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     437.  00:A167  FF FF FF FF FF FF FF FF 
     438.  00:A16F                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     438.  00:A16F  FF FF FF FF FF FF FF FF 
     439.  00:A177                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF		
     439.  00:A177  FF FF FF FF FF FF FF FF 
     440.  00:A17F                      	
     441.  00:A17F                      ;; VAMPIRO
     442.  00:A17F                      
     443.  00:A17F                      sprite_vampiro1_1:
     444.  00:A17F                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     444.  00:A17F  FF FF FF FF FF FF FF FF 
     445.  00:A187                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     445.  00:A187  FF FF FF FF FF FF FF FF 
     446.  00:A18F                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     446.  00:A18F  FF FF FF FF FF FF FF FF 
     447.  00:A197                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     447.  00:A197  FF FF FF FF FF FF FF FF 
     448.  00:A19F                      
     449.  00:A19F                      sprite_vampiro2_1:
     450.  00:A19F                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     450.  00:A19F  FF FF FF FF FF FF FF FF 
     451.  00:A1A7                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     451.  00:A1A7  FF FF FF FF FF FF FF FF 
     452.  00:A1AF                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     452.  00:A1AF  FF FF FF FF FF FF FF FF 
     453.  00:A1B7                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     453.  00:A1B7  FF FF FF FF FF FF FF FF 
     454.  00:A1BF                      
     455.  00:A1BF                      sprite_vampiro1_2:
     456.  00:A1BF                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     456.  00:A1BF  FF FF FF FF FF FF FF FF 
     457.  00:A1C7                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     457.  00:A1C7  FF FF FF FF FF FF FF FF 
     458.  00:A1CF                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     458.  00:A1CF  FF FF FF FF FF FF FF FF 
     459.  00:A1D7                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     459.  00:A1D7  FF FF FF FF FF FF FF FF 
     460.  00:A1DF                      
     461.  00:A1DF                      sprite_vampiro2_2:
     462.  00:A1DF                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     462.  00:A1DF  FF FF FF FF FF FF FF FF 
     463.  00:A1E7                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     463.  00:A1E7  FF FF FF FF FF FF FF FF 
     464.  00:A1EF                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     464.  00:A1EF  FF FF FF FF FF FF FF FF 
     465.  00:A1F7                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     465.  00:A1F7  FF FF FF FF FF FF FF FF 
     466.  00:A1FF                      	
     467.  00:A1FF                      ;; MANOIZQ
     468.  00:A1FF                      
     469.  00:A1FF                      sprite_manoizq1:
     470.  00:A1FF                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     470.  00:A1FF  FF FF FF FF FF FF FF FF 
     471.  00:A207                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     471.  00:A207  FF FF FF FF FF FF FF FF 
     472.  00:A20F                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     472.  00:A20F  FF FF FF FF FF FF FF FF 
     473.  00:A217                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     473.  00:A217  FF FF FF FF FF FF FF FF 
     474.  00:A21F                      	
     475.  00:A21F                      sprite_manoizq2:
     476.  00:A21F                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     476.  00:A21F  FF FF FF FF FF FF FF FF 
     477.  00:A227                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     477.  00:A227  FF FF FF FF FF FF FF FF 
     478.  00:A22F                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     478.  00:A22F  FF FF FF FF FF FF FF FF 
     479.  00:A237                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     479.  00:A237  FF FF FF FF FF FF FF FF 
     480.  00:A23F                      	
     481.  00:A23F                      sprite_manoizq3:
     482.  00:A23F                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     482.  00:A23F  FF FF FF FF FF FF FF FF 
     483.  00:A247                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     483.  00:A247  FF FF FF FF FF FF FF FF 
     484.  00:A24F                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     484.  00:A24F  FF FF FF FF FF FF FF FF 
     485.  00:A257                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF	
     485.  00:A257  FF FF FF FF FF FF FF FF 
     486.  00:A25F                      	
     487.  00:A25F                      ;; MANODER
     488.  00:A25F                      
     489.  00:A25F                      sprite_manoder1:
     490.  00:A25F                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     490.  00:A25F  FF FF FF FF FF FF FF FF 
     491.  00:A267                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     491.  00:A267  FF FF FF FF FF FF FF FF 
     492.  00:A26F                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     492.  00:A26F  FF FF FF FF FF FF FF FF 
     493.  00:A277                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     493.  00:A277  FF FF FF FF FF FF FF FF 
     494.  00:A27F                      	
     495.  00:A27F                      sprite_manoder2:
     496.  00:A27F                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     496.  00:A27F  FF FF FF FF FF FF FF FF 
     497.  00:A287                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     497.  00:A287  FF FF FF FF FF FF FF FF 
     498.  00:A28F                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     498.  00:A28F  FF FF FF FF FF FF FF FF 
     499.  00:A297                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     499.  00:A297  FF FF FF FF FF FF FF FF 
     500.  00:A29F                      	
     501.  00:A29F                      sprite_manoder3:
     502.  00:A29F                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     502.  00:A29F  FF FF FF FF FF FF FF FF 
     503.  00:A2A7                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     503.  00:A2A7  FF FF FF FF FF FF FF FF 
     504.  00:A2AF                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     504.  00:A2AF  FF FF FF FF FF FF FF FF 
     505.  00:A2B7                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF		
     505.  00:A2B7  FF FF FF FF FF FF FF FF 
     506.  00:A2BF                      	
     507.  00:A2BF                      	
     508.  00:A2BF                      	
     509.  00:A2BF                      	
     510.  00:A2BF                      	
     511.  00:A2BF                      	
     512.  00:A2BF                      	
     513.  00:A2BF                      	
     514.  00:A2BF                      	
     515.  00:A2BF                      	
     516.  00:A2BF                      	
     517.  00:A2BF                      	
     518.  00:A2BF                      	
     519.  00:A2BF                      	
     520.  00:A2BF                      	
     521.  00:A2BF                      	
     522.  00:A2BF                      	
     523.  00:A2BF                      	
     524.  00:A2BF                      	
     525.  00:A2BF                      	
     526.  00:A2BF                      	
     527.  00:A2BF                      	
     528.  00:A2BF                      	
     152   00:A2BF                      	
     153   00:A2BF                      	include "habitaciones.asm"
       1.  00:A2BF                      ;;=====================================================
       2.  00:A2BF                      ;;DEFINICIÓN DE HABITACIONES x NIVEL
       3.  00:A2BF                      ;;=====================================================	
       4.  00:A2BF                      
       5.  00:A2BF                      ; sólo voy a usar 7x7 pero como los arrays son lineales y voy a trabajar con matrices
       6.  00:A2BF                      ; me interesa que seande  8x8 aunque sólo trabaje con 7x7
       7.  00:A2BF                      
       8.  00:A2BF                      ; ojo... la primera linea corresponderá a la primera linea del castillo no a la última
       9.  00:A2BF                      
      10.  00:A2BF                      ;; definición de estructura de bits
      11.  00:A2BF                      ;16 bits por habitación
      12.  00:A2BF                      
      13.  00:A2BF                      ;~ 7 - sin asignar
      14.  00:A2BF                      ;~ 6 - sin asignar
      15.  00:A2BF                      ;~ 5 - sin asignar
      16.  00:A2BF                      ;~ 4 - sin asignar
      17.  00:A2BF                      ;~ 0,1,2,3 - nº puertas 1 arriba 1 derecha 1 abajo 1 izquierda
      18.  00:A2BF                      
      19.  00:A2BF                      ;~ 7 - oracion
      20.  00:A2BF                      ;~ 6 - cruz
      21.  00:A2BF                      ;~ 5 - agua bendita
      22.  00:A2BF                      ;~ 4 - armadura
      23.  00:A2BF                      ;~ 3 - planta
      24.  00:A2BF                      ;~ 2 - vida extra
      25.  00:A2BF                      ;~ 1 - ballesta
      26.  00:A2BF                      ;~ 0 - sin asignar
      27.  00:A2BF                      
      28.  00:A2BF                      ;importante: el byte de la columna 15 indicará con 1 y 0 habitaciones por las que se haya pasado
      29.  00:A2BF                      ;cuando se inicie la partida todos se pondrán a 0
      30.  00:A2BF                      ;por ejemplo 01000000b se ha pasado por la hab. 2 de esa fila en el nivel que sea
      31.  00:A2BF                      
      32.  00:A2BF                      habitacion_actual:
      33.  00:A2BF  00                  	db  #00		;habitación donde se encuentre el prota. Se mete en una varible par traer todos los datos de golpe y no buscarlos varias veces
      34.  00:A2C0                      habitacion_extras:
      35.  00:A2C0  00                  	db	#00		;donde van las ayudas de una habitación
      36.  00:A2C1                      
      37.  00:A2C1                      
      38.  00:A2C1                      habitaciones_juego:
      39.  00:A2C1                      habitaciones_nivel0:
      40.  00:A2C1                      	db  00000000b,#00,00000001b,#01,00001111b,10000000b,00000011b,#03,00001000b,#04,00001001b,#05,00001100b,#06,#FF,#00 ;primera fila
      40.  00:A2C1  00 00 01 01 0F 80 03 03 08 04 09 05 0C 06 FF 00 
      41.  00:A2D1                      	db  #17,#10,#11,#11,#12,#12,#13,#13,#14,#14,#15,#15,#16,#16,#FF,#00
      41.  00:A2D1  17 10 11 11 12 12 13 13 14 14 15 15 16 16 FF 00 
      42.  00:A2E1                      	db  #20,#20,#21,#21,#22,#22,#23,#23,#24,#24,#25,#25,#26,#26,#FF,#00
      42.  00:A2E1  20 20 21 21 22 22 23 23 24 24 25 25 26 26 FF 00 
      43.  00:A2F1                      	db  #30,#30,#31,#31,#32,#32,#33,#33,#34,#34,#35,#35,#36,#36,#FF,#00
      43.  00:A2F1  30 30 31 31 32 32 33 33 34 34 35 35 36 36 FF 00 
      44.  00:A301                      	db  00000000b,#00,00000001b,#01,00001111b,#02,00000011b,#03,00001000b,#04,00001001b,#05,00001100b,#06,#FF,#00
      44.  00:A301  00 00 01 01 0F 02 03 03 08 04 09 05 0C 06 FF 00 
      45.  00:A311                      	db  #50,#50,#51,#51,#52,#52,#53,#53,#54,#54,#55,#55,#56,#56,#FF,#00
      45.  00:A311  50 50 51 51 52 52 53 53 54 54 55 55 56 56 FF 00 
      46.  00:A321                      	db  00000000b,#00,00000001b,#01,00001111b,#02,00000011b,#03,00001000b,#04,00001001b,#05,00001100b,#06,#FF,#00	;ultima fila
      46.  00:A321  00 00 01 01 0F 02 03 03 08 04 09 05 0C 06 FF 00 
      47.  00:A331                      	
      48.  00:A331                      habitaciones_nivel1:
      49.  00:A331                      	db  00000000b,#00,00000001b,#01,00000010b,#02,00000011b,#03,00001000b,#04,00001001b,#05,00001100b,#06,#FF,#00 ;primera fila
      49.  00:A331  00 00 01 01 02 02 03 03 08 04 09 05 0C 06 FF 00 
      50.  00:A341                      	db  #17,#10,#11,#11,#12,#12,#13,#13,#14,#14,#15,#15,#16,#16,#FF,#00
      50.  00:A341  17 10 11 11 12 12 13 13 14 14 15 15 16 16 FF 00 
      51.  00:A351                      	db  #20,#20,#21,#21,#22,#22,#23,#23,#24,#24,#25,#25,#26,#26,#FF,#00
      51.  00:A351  20 20 21 21 22 22 23 23 24 24 25 25 26 26 FF 00 
      52.  00:A361                      	db  #30,#30,#31,#31,#32,#32,#33,#33,#34,#34,#35,#35,#36,#36,#FF,#00
      52.  00:A361  30 30 31 31 32 32 33 33 34 34 35 35 36 36 FF 00 
      53.  00:A371                      	db  00000000b,#00,00000001b,#01,00001111b,#02,00000011b,#03,00001000b,#04,00001001b,#05,00001100b,#06,#FF,#00
      53.  00:A371  00 00 01 01 0F 02 03 03 08 04 09 05 0C 06 FF 00 
      54.  00:A381                      	db  #50,#50,#51,#51,#52,#52,#53,#53,#54,#54,#55,#55,#56,#56,#FF,#00
      54.  00:A381  50 50 51 51 52 52 53 53 54 54 55 55 56 56 FF 00 
      55.  00:A391                      	db  00000000b,#00,00000001b,#01,00000010b,#02,00000011b,#03,00001000b,#04,00001001b,#05,00001100b,#06,#FF,#00	;ultima fila
      55.  00:A391  00 00 01 01 02 02 03 03 08 04 09 05 0C 06 FF 00 
      56.  00:A3A1                      	
      57.  00:A3A1                      habitaciones_nivel2:
      58.  00:A3A1                      	db  00000000b,#00,00000001b,#01,00000010b,#02,00000011b,#03,00001000b,#04,00001001b,#05,00001100b,#06,#FF,#00 ;primera fila
      58.  00:A3A1  00 00 01 01 02 02 03 03 08 04 09 05 0C 06 FF 00 
      59.  00:A3B1                      	db  #17,#10,#11,#11,#12,#12,#13,#13,#14,#14,#15,#15,#16,#16,#FF,#00
      59.  00:A3B1  17 10 11 11 12 12 13 13 14 14 15 15 16 16 FF 00 
      60.  00:A3C1                      	db  #20,#20,#21,#21,#22,#22,#23,#23,#24,#24,#25,#25,#26,#26,#FF,#00
      60.  00:A3C1  20 20 21 21 22 22 23 23 24 24 25 25 26 26 FF 00 
      61.  00:A3D1                      	db  #30,#30,#31,#31,#32,#32,#33,#33,#34,#34,#35,#35,#36,#36,#FF,#00
      61.  00:A3D1  30 30 31 31 32 32 33 33 34 34 35 35 36 36 FF 00 
      62.  00:A3E1                      	db  00000000b,#00,00000001b,#01,00001111b,#02,00000011b,#03,00001000b,#04,00001001b,#05,00001100b,#06,#FF,#00
      62.  00:A3E1  00 00 01 01 0F 02 03 03 08 04 09 05 0C 06 FF 00 
      63.  00:A3F1                      	db  #50,#50,#51,#51,#52,#52,#53,#53,#54,#54,#55,#55,#56,#56,#FF,#00
      63.  00:A3F1  50 50 51 51 52 52 53 53 54 54 55 55 56 56 FF 00 
      64.  00:A401                      	db  00000000b,#00,00000001b,#01,00000010b,#02,00000011b,#03,00001000b,#04,00001001b,#05,00001100b,#06,#FF,#00	;ultima fila
      64.  00:A401  00 00 01 01 02 02 03 03 08 04 09 05 0C 06 FF 00 
      65.  00:A411                      	
      66.  00:A411                      habitaciones_nivel3:
      67.  00:A411                      	db  00000000b,#00,00000001b,#01,00000010b,#02,00000011b,#03,00001000b,#04,00001001b,#05,00001100b,#06,#FF,#00 ;primera fila
      67.  00:A411  00 00 01 01 02 02 03 03 08 04 09 05 0C 06 FF 00 
      68.  00:A421                      	db  #17,#10,#11,#11,#12,#12,#13,#13,#14,#14,#15,#15,#16,#16,#FF,#00
      68.  00:A421  17 10 11 11 12 12 13 13 14 14 15 15 16 16 FF 00 
      69.  00:A431                      	db  #20,#20,#21,#21,#22,#22,#23,#23,#24,#24,#25,#25,#26,#26,#FF,#00
      69.  00:A431  20 20 21 21 22 22 23 23 24 24 25 25 26 26 FF 00 
      70.  00:A441                      	db  #30,#30,#31,#31,#32,#32,#33,#33,#34,#34,#35,#35,#36,#36,#FF,#00
      70.  00:A441  30 30 31 31 32 32 33 33 34 34 35 35 36 36 FF 00 
      71.  00:A451                      	db  00000000b,#00,00000001b,#01,00001111b,#02,00000011b,#03,00001000b,#04,00001001b,#05,00001100b,#06,#FF,#00
      71.  00:A451  00 00 01 01 0F 02 03 03 08 04 09 05 0C 06 FF 00 
      72.  00:A461                      	db  #50,#50,#51,#51,#52,#52,#53,#53,#54,#54,#55,#55,#56,#56,#FF,#00
      72.  00:A461  50 50 51 51 52 52 53 53 54 54 55 55 56 56 FF 00 
      73.  00:A471                      	db  00000000b,#00,00000001b,#01,00000010b,#02,00000011b,#03,00001000b,#04,00001001b,#05,00001100b,#06,#FF,#00	;ultima fila
      73.  00:A471  00 00 01 01 02 02 03 03 08 04 09 05 0C 06 FF 00 
      74.  00:A481                      	
      75.  00:A481                      habitaciones_nivel4:
      76.  00:A481                      	db  00000001b,#00,00000001b,#01,00000010b,#02,00000011b,#03,00001000b,#04,00001001b,#05,00001100b,#06,#FF,#00 ;primera fila
      76.  00:A481  01 00 01 01 02 02 03 03 08 04 09 05 0C 06 FF 00 
      77.  00:A491                      	db  #17,#10,#11,#11,#12,#12,#13,#13,#14,#14,#15,#15,#16,#16,#FF,#00
      77.  00:A491  17 10 11 11 12 12 13 13 14 14 15 15 16 16 FF 00 
      78.  00:A4A1                      	db  #20,#20,#21,#21,#22,#22,#23,#23,#24,#24,#25,#25,#26,#26,#FF,#00
      78.  00:A4A1  20 20 21 21 22 22 23 23 24 24 25 25 26 26 FF 00 
      79.  00:A4B1                      	db  #30,#30,#31,#31,#32,#32,#33,#33,#34,#34,#35,#35,#36,#36,#FF,#00
      79.  00:A4B1  30 30 31 31 32 32 33 33 34 34 35 35 36 36 FF 00 
      80.  00:A4C1                      	db  00000000b,#00,00000001b,#01,00001111b,#02,00000011b,#03,00001000b,#04,00001001b,#05,00001100b,#06,#FF,#00
      80.  00:A4C1  00 00 01 01 0F 02 03 03 08 04 09 05 0C 06 FF 00 
      81.  00:A4D1                      	db  #50,#50,#51,#51,#52,#52,#53,#53,#54,#54,#55,#55,#56,#56,#FF,#00
      81.  00:A4D1  50 50 51 51 52 52 53 53 54 54 55 55 56 56 FF 00 
      82.  00:A4E1                      	db  00000000b,#00,00000001b,#01,00001111b,00001111b,00000011b,#03,00001000b,#04,00001001b,#05,00001100b,#06,#FF,#00	;ultima fila
      82.  00:A4E1  00 00 01 01 0F 0F 03 03 08 04 09 05 0C 06 FF 00 
      83.  00:A4F1                      	
      84.  00:A4F1                      habitaciones_nivel5:
      85.  00:A4F1                      	db  00000000b,#00,00000001b,#01,00000010b,#02,00000011b,#03,00001000b,#04,00001001b,#05,00001100b,#06,#FF,#00 ;primera fila
      85.  00:A4F1  00 00 01 01 02 02 03 03 08 04 09 05 0C 06 FF 00 
      86.  00:A501                      	db  #17,#10,#11,#11,#12,#12,#13,#13,#14,#14,#15,#15,#16,#16,#FF,#00
      86.  00:A501  17 10 11 11 12 12 13 13 14 14 15 15 16 16 FF 00 
      87.  00:A511                      	db  #20,#20,#21,#21,#22,#22,#23,#23,#24,#24,#25,#25,#26,#26,#FF,#00
      87.  00:A511  20 20 21 21 22 22 23 23 24 24 25 25 26 26 FF 00 
      88.  00:A521                      	db  #30,#30,#31,#31,#32,#32,#33,#33,#34,#34,#35,#35,#36,#36,#FF,#00
      88.  00:A521  30 30 31 31 32 32 33 33 34 34 35 35 36 36 FF 00 
      89.  00:A531                      	db  00000000b,#00,00000001b,#01,00001111b,#02,00000011b,#03,00001000b,#04,00001001b,#05,00001100b,#06,#FF,#00
      89.  00:A531  00 00 01 01 0F 02 03 03 08 04 09 05 0C 06 FF 00 
      90.  00:A541                      	db  #50,#50,#51,#51,#52,#52,#53,#53,#54,#54,#55,#55,#56,#56,#FF,#00
      90.  00:A541  50 50 51 51 52 52 53 53 54 54 55 55 56 56 FF 00 
      91.  00:A551                      	db  00000000b,#00,00000001b,#01,00001010b,00001010b,00000011b,#03,00001000b,#04,00001001b,#05,00001100b,#06,#FF,#00	;ultima fila
      91.  00:A551  00 00 01 01 0A 0A 03 03 08 04 09 05 0C 06 FF 00 
      92.  00:A561                      	
      93.  00:A561                      habitaciones_nivel6:
      94.  00:A561                      	db  00000000b,#00,00000001b,#01,00000010b,#02,00000011b,#03,00001000b,#04,00001001b,#05,00001100b,#06,#FF,#00 ;primera fila
      94.  00:A561  00 00 01 01 02 02 03 03 08 04 09 05 0C 06 FF 00 
      95.  00:A571                      	db  #17,#10,#11,#11,#12,#12,#13,#13,#14,#14,#15,#15,#16,#16,#FF,#00
      95.  00:A571  17 10 11 11 12 12 13 13 14 14 15 15 16 16 FF 00 
      96.  00:A581                      	db  #20,#20,#21,#21,#22,#22,#23,#23,#24,#24,#25,#25,#26,#26,#FF,#00
      96.  00:A581  20 20 21 21 22 22 23 23 24 24 25 25 26 26 FF 00 
      97.  00:A591                      	db  #30,#30,#31,#31,#32,#32,#33,#33,#34,#34,#35,#35,#36,#36,#FF,#00
      97.  00:A591  30 30 31 31 32 32 33 33 34 34 35 35 36 36 FF 00 
      98.  00:A5A1                      	db  00000000b,#00,00000001b,#01,00001111b,#02,00000011b,#03,00001000b,#04,00001001b,#05,00001100b,#06,#FF,#00
      98.  00:A5A1  00 00 01 01 0F 02 03 03 08 04 09 05 0C 06 FF 00 
      99.  00:A5B1                      	db  #50,#50,#51,#51,#52,#52,#53,#53,#54,#54,#55,#55,#56,#56,#FF,#00
      99.  00:A5B1  50 50 51 51 52 52 53 53 54 54 55 55 56 56 FF 00 
     100.  00:A5C1                      	db  00000000b,#00,00000001b,10000000b,00001111b,#02,00000011b,#03,00001000b,#04,00001001b,#05,00001100b,#06,#FF,#00	;ultima fila
     100.  00:A5C1  00 00 01 80 0F 02 03 03 08 04 09 05 0C 06 FF 00 
     101.  00:A5D1                      
     102.  00:A5D1                      
     103.  00:A5D1                      
     154   00:A5D1                      	
     155   00:A5D1                      	include "variables.asm"
       1.  00:A5D1                      ;;=====================================================
       2.  00:A5D1                      ;;DEFINICIÓN DE VARIABLES
       3.  00:A5D1                      ;;=====================================================
       4.  00:A5D1                      
       5.  00:A5D1                      ;Colores base de la pantalla
       6.  00:A5D1                      color_base:
       7.  00:A5D1  01 01 01            			DB		COLNEGRO,COLNEGRO,COLNEGRO	
       8.  00:A5D4                      ;colores de pantalla cuando se tira bomba
       9.  00:A5D4                      color_bomba1:
      10.  00:A5D4  08 08 08            			DB		COLROJO,COLROJO,COLROJO
      11.  00:A5D7                      color_bomba2:
      12.  00:A5D7  06 06 06            			DB		COLROJOOSC,COLROJOOSC,COLROJOOSC
      13.  00:A5DA                      
      14.  00:A5DA                      ;definicion de variable del prota usando la estructura del punto de mira
      15.  00:A5DA                      prota:		ESTRUCTURA_PUNTOMIRA
      15.  00:A5DA  64 64 00 00 00 05 00 00 00 00 00 00 00 00 00 00 
      16.  00:A5EA                      ;variables globales del prota
      17.  00:A5EA                      prota_nivel:			;nivel del castillo donde está 0-6
      18.  00:A5EA  00                  			DB		0
      19.  00:A5EB                      prota_vidas:
      20.  00:A5EB  00                  			DB		0
      21.  00:A5EC                      prota_reliquias:
      22.  00:A5EC  03                  			DB		3
      23.  00:A5ED                      prota_pos_mapx:
      24.  00:A5ED  00                  			DB		0	;pos columna
      25.  00:A5EE                      prota_pos_mapy:
      26.  00:A5EE  00                  			DB		0	;pos fila
      27.  00:A5EF                      prota_energia:
      28.  00:A5EF  FA                  			DB		250
      29.  00:A5F0                      
      30.  00:A5F0                      ;array para pintar de golpe el marcador de vidas
      31.  00:A5F0                      array_aux_vidas: 		
      32.  00:A5F0                      			DB		0,0,0,0,0,0,0,0
      32.  00:A5F0  00 00 00 00 00 00 00 00 
      33.  00:A5F8                      
      34.  00:A5F8                      ;array para pintar de golpe el marcador de reliquias
      35.  00:A5F8                      array_aux_reliquias:	
      36.  00:A5F8                      			DB		0,0,0,0,0,0,0,0
      36.  00:A5F8  00 00 00 00 00 00 00 00 
      37.  00:A600                      
      38.  00:A600                      array_aux_energia:					;array para pintar de golpe el marcador de energía
      39.  00:A600                      			DB		16,0,0,0,0,0,0 	;el 16 primero es porque siempre estará pintado el cuadro primero rojo
      39.  00:A600  10 00 00 00 00 00 00 
      40.  00:A607                      ultimo_pos_array_aux_energia:
      41.  00:A607  00                  			DB		0				;el array completo es de 8 pero para posicionar sin niecesidad de cálculos  etiqueto este aparte
      42.  00:A608                      			
      43.  00:A608                      array_aux_mapa_limpiar:	;es por facilitar el reseteo del mapa (pinto 7 lineas en negro con bios) la otra opción es más larga en código y complicada aunque más rápida
      44.  00:A608                      			DB		0,0,0,0,0,0,0
      44.  00:A608  00 00 00 00 00 00 00 
      45.  00:A60F                      elemento_pintar_mapa:
      46.  00:A60F  00                  			DB		0	;TILEPROTAM = 19, ;TILEGRISM = 9
      47.  00:A610                      			
      48.  00:A610                      ;; nota importante: cada vez que se cambie de nivel se actualizará el contenido
      49.  00:A610                      ;; arrays con mapa de tiles de las puertas
      50.  00:A610                      array_puerta_arriba:
      51.  00:A610  03 01 01 03         array_puerta_arriba1:		DB	3,1,1,3
      52.  00:A614  01 01 01 01         array_puerta_arriba2:		DB	1,1,1,1
      53.  00:A618  01 01 01 01         array_puerta_arriba3:		DB	1,1,1,1
      54.  00:A61C  01 01 01 01         array_puerta_arriba4:		DB	1,1,1,1
      55.  00:A620  01 01 01 01         array_puerta_arriba5:		DB	1,1,1,1
      56.  00:A624                      
      57.  00:A624                      array_puerta_derecha:
      58.  00:A624  01 03 03            array_puerta_derecha1:		DB	1,3,3
      59.  00:A627  01 01 03            array_puerta_derecha2:		DB	1,1,3
      60.  00:A62A  01 01 01            array_puerta_derecha3:		DB	1,1,1
      61.  00:A62D  01 01 01            array_puerta_derecha4:		DB	1,1,1
      62.  00:A630  01 01 01            array_puerta_derecha5:		DB	1,1,1
      63.  00:A633  02 01 01            array_puerta_derecha6:		DB	2,1,1
      64.  00:A636  04 02 01            array_puerta_derecha7:		DB	4,2,1
      65.  00:A639                      	
      66.  00:A639  01 01 01 01         array_puerta_abajo:			DB	1,1,1,1
      67.  00:A63D                      
      68.  00:A63D                      array_puerta_izquierda:
      69.  00:A63D  03 03 01            array_puerta_izquierda1:	DB	3,3,1
      70.  00:A640  03 01 01            array_puerta_izquierda2:	DB	3,1,1
      71.  00:A643  01 01 01            array_puerta_izquierda3:	DB	1,1,1
      72.  00:A646  01 01 01            array_puerta_izquierda4:	DB	1,1,1
      73.  00:A649  01 01 01            array_puerta_izquierda5:	DB	1,1,1
      74.  00:A64C  01 01 02            array_puerta_izquierda6:	DB	1,1,2
      75.  00:A64F  01 02 04            array_puerta_izquierda7:	DB	1,2,4
      76.  00:A652                      
      77.  00:A652                      ;array con posiciones pseudoaleatorias de ayudas y extras (qué valor se escogerá con R 0-127 + and 00001111)
      78.  00:A652                      ;+256 porque aparecerán todas en el banco1
      79.  00:A652                      pos_ayudas:					DB	0,4,18,23,45,69,73,82,90,152,171,180,190,192,198,208
      79.  00:A652  00 04 12 17 2D 45 49 52 5A 98 AB B4 BE C0 C6 D0 
      80.  00:A662                      pos_ayudas_y:				DB	64,64,64,64,72,80,80,80,80,96,104,104,104,112,112,112
      80.  00:A662  40 40 40 40 48 50 50 50 50 60 68 68 68 70 70 70 
      81.  00:A672                      pos_ayudas_x:				DB	0,32,144,184,104,40,72,144,208,192,88,160,240,0,48,128
      81.  00:A672  00 20 90 B8 68 28 48 90 D0 C0 58 A0 F0 00 30 80 
      82.  00:A682                      
      83.  00:A682                      
      84.  00:A682                      ;array de ayudas
      85.  00:A682                      ;posición dentro del bank1 (o 0 que son iguales) de los tiles de la ayuda (cómo en los sprites de 2x2)
      86.  00:A682                      array_ayudas:
      87.  00:A682  C8 CA               array_oracionon:			DB	200,202
      88.  00:A684  C9 CB               array_oracionon1:			DB	201,203
      89.  00:A686  CC CE               array_oracionoff:			DB	204,206
      90.  00:A688  CD CF               array_oracionoff1:			DB	205,207
      91.  00:A68A  D0 D2               array_cruzon:				DB	208,210
      92.  00:A68C  D1 D3               array_cruzon1:				DB	209,211
      93.  00:A68E  D4 D6               array_cruzoff:				DB	212,214
      94.  00:A690  D5 D7               array_cruzoff1:				DB	213,215
      95.  00:A692  D8 DA               array_aguaon:				DB	216,218
      96.  00:A694  D9 DB               array_aguaon1:				DB	217,219
      97.  00:A696  DC DE               array_aguaoff:				DB	220,222
      98.  00:A698  DD DF               array_aguaoff1:				DB	221,223
      99.  00:A69A  E0 E2               array_armaduraon:			DB	224,226
     100.  00:A69C  E1 E3               array_armaduraon1:			DB	225,227
     101.  00:A69E  E4 E6               array_armaduraoff:			DB	228,230
     102.  00:A6A0  E5 E7               array_armaduraoff1:			DB	229,231
     103.  00:A6A2  E8 EA               array_plantaon:				DB	232,234
     104.  00:A6A4  E9 EB               array_plantaon1:			DB	233,235
     105.  00:A6A6  EC EE               array_plantaoff:			DB	236,238
     106.  00:A6A8  ED EF               array_plantaoff1:			DB	237,239
     107.  00:A6AA  F0 F2               array_extraon:				DB	240,242
     108.  00:A6AC  F1 F3               array_extraon1:				DB	241,243
     109.  00:A6AE  F4 F6               array_extraoff:				DB	244,246
     110.  00:A6B0  F5 F7               array_extraoff1:			DB	245,247
     111.  00:A6B2  F8 FA               array_ballestaon:			DB	248,250
     112.  00:A6B4  F9 FB               array_ballestaon1:			DB	249,251
     113.  00:A6B6  FC FE               array_ballestaoff:			DB	252,254
     114.  00:A6B8  FD FF               array_ballestaoff1:			DB	253,255
     115.  00:A6BA                      
     116.  00:A6BA                      lista_ayudas:
     117.  00:A6BA  00 (16)             ayuda_oracion:		DS		ESTRUCTURA_AYUDA		
     118.  00:A6CA  00 (16)             ayuda_cruz:			DS		ESTRUCTURA_AYUDA
     119.  00:A6DA  00 (16)             ayuda_aguabendita:	DS		ESTRUCTURA_AYUDA
     120.  00:A6EA  00 (16)             ayuda_armadura:		DS		ESTRUCTURA_AYUDA
     121.  00:A6FA  00 (16)             ayuda_planta:		DS		ESTRUCTURA_AYUDA
     122.  00:A70A  00 (16)             ayuda_vidaextra		DS		ESTRUCTURA_AYUDA
     123.  00:A71A  00 (16)             ayuda_ballesta:		DS		ESTRUCTURA_AYUDA
     124.  00:A72A                      
     125.  00:A72A                      
     126.  00:A72A                      ;array de 4 bytes x 32 sprites posibles en pantalla que sobreescribirá la tabla de sprites actualizando VRAM
     127.  00:A72A                      array_sprites:
     128.  00:A72A  00 (8)              array_sprites_pm:				DS	2 * 4
     129.  00:A732  00 (120)            array_sprites_enem:				DS	30 * 4
     130.  00:A7AA  00 (140)            lista_enemigos:					DS	10 * ESTRUCTURA_ENEMIGO
     131.  00:A836                      ; puntero al array a pintar en VRAM
     132.  00:A836  00 00               puntero_array_atrib_array_VRAM: DW	0	;ARRAYSPTRIES + 8
     133.  00:A838                      
     134.  00:A838                      
     135.  00:A838                      
     136.  00:A838                      
     137.  00:A838                      
     156   00:A838                      	
     157   00:A838                      ;;=====================================================
     158   00:A838                      ;;DEFINICIÓN DE PANTALLAS
     159   00:A838                      ;;=====================================================		
     160   00:A838                      	include "pantallas.asm"
       1.  00:A838                      ;;=====================================================
       2.  00:A838                      ;;DEFINICIÓN DE PANTALLAS
       3.  00:A838                      ;;=====================================================		
       4.  00:A838                      
       5.  00:A838                      ; bancos 1 y 2 y de pantalla 1 
       6.  00:A838                      ; se usa un banco común (en este caso el banco 1)
       7.  00:A838                      ; el mapa afecta al banco 1 y 2
       8.  00:A838  (01B5)              tiles_patrones_nivel0:	incbin "pantallas/nivel0.bank1.til.bin.chr.plet5"
       9.  00:A9ED  (0047)              tiles_color_nivel0:		incbin "pantallas/nivel0.bank1.til.bin.clr.plet5"
      10.  00:AA34  (0035)              tiles_mapa_nivel0:		incbin "pantallas/nivel0.bank01.map.bin.plet5"
      11.  00:AA69                      
      12.  00:AA69  (01B5)              tiles_patrones_nivel1:	incbin "pantallas/nivel1.bank1.til.bin.chr.plet5"
      13.  00:AC1E  (0047)              tiles_color_nivel1:		incbin "pantallas/nivel1.bank1.til.bin.clr.plet5"
      14.  00:AC65  (0035)              tiles_mapa_nivel1:		incbin "pantallas/nivel1.bank01.map.bin.plet5"
      15.  00:AC9A                      
      16.  00:AC9A  (01B5)              tiles_patrones_nivel2:	incbin "pantallas/nivel2.bank1.til.bin.chr.plet5"
      17.  00:AE4F  (0047)              tiles_color_nivel2:		incbin "pantallas/nivel2.bank1.til.bin.clr.plet5"
      18.  00:AE96  (0035)              tiles_mapa_nivel2:		incbin "pantallas/nivel2.bank01.map.bin.plet5"
      19.  00:AECB                      
      20.  00:AECB  (01B5)              tiles_patrones_nivel3:	incbin "pantallas/nivel3.bank1.til.bin.chr.plet5"
      21.  00:B080  (0047)              tiles_color_nivel3:		incbin "pantallas/nivel3.bank1.til.bin.clr.plet5"
      22.  00:B0C7  (0035)              tiles_mapa_nivel3:		incbin "pantallas/nivel3.bank01.map.bin.plet5"
      23.  00:B0FC                      
      24.  00:B0FC  (01B5)              tiles_patrones_nivel4:	incbin "pantallas/nivel4.bank1.til.bin.chr.plet5"
      25.  00:B2B1  (0047)              tiles_color_nivel4:		incbin "pantallas/nivel4.bank1.til.bin.clr.plet5"
      26.  00:B2F8  (0035)              tiles_mapa_nivel4:		incbin "pantallas/nivel4.bank01.map.bin.plet5"
      27.  00:B32D                      
      28.  00:B32D  (01B5)              tiles_patrones_nivel5:	incbin "pantallas/nivel5.bank1.til.bin.chr.plet5"
      29.  00:B4E2  (0047)              tiles_color_nivel5:		incbin "pantallas/nivel5.bank1.til.bin.clr.plet5"
      30.  00:B529  (0035)              tiles_mapa_nivel5:		incbin "pantallas/nivel5.bank01.map.bin.plet5"
      31.  00:B55E                      
      32.  00:B55E  (01B5)              tiles_patrones_nivel6:	incbin "pantallas/nivel6.bank1.til.bin.chr.plet5"
      33.  00:B713  (0047)              tiles_color_nivel6:		incbin "pantallas/nivel6.bank1.til.bin.clr.plet5"
      34.  00:B75A  (0035)              tiles_mapa_nivel6:		incbin "pantallas/nivel6.bank01.map.bin.plet5"
      35.  00:B78F                      
      36.  00:B78F                      ; 3º banco que es la parte de puntos, vidas, mapas, etc... es común
      37.  00:B78F  (014C)              tiles_patrones_marcador:	incbin "pantallas/marcador.til.bin.chr.plet5"
      38.  00:B8DB  (0035)              tiles_color_marcador:		incbin "pantallas/marcador.til.bin.clr.plet5"
      39.  00:B910  (0062)              tiles_mapa_marcador:		incbin "pantallas/marcador.map.bin.plet5"
      40.  00:B972                      
      41.  00:B972                      ;NOTA: FALTARÍAN PANTALLAS ESPECIALES (POR DEFINIR)
     161   00:B972                      
     162   00:B972                      
     163   00:B972                      	
     164   00:B972                      END:

    LABELS
-------------------------------------------------
00:000000D8 X GTTRIG
00:000000D5 X GTSTCK
00:0000F3DB   CLIKSW
00:0000013E X RDVDP
00:00000047   WRTVDP
00:0000005C   LDIRVM
00:00000059 X LDIRMV
00:0000005F   CHGMOD
00:00000041 X DISSCR
00:00000044 X ENASCR
00:00000062   CHGCLR
00:0000F3E9   FORCLR
00:0000F3EA   BAKCLR
00:0000F3EB   BDRCLR
00:000000C3   CLS
00:0000F3DF X RG0SAV
00:0000F3E0   RG1SAV
00:0000F3E1 X RG2SAV
00:0000F3E2 X RG3SAV
00:0000F3E3 X RG4SAV
00:0000F3E4 X RG5SAV
00:0000F3E5 X RG6SAV
00:0000F3E6 X RG7SAV
00:0000F3E7 X STATFL
00:00000099   REGEST
00:00000098   REGESCVDP
00:000000A0   PSG_A
00:000000A1   PSG_W
00:000000A2   PSG_R
00:00000000   CHRTBL
00:00001800   TILMAP
00:00001900 X TILMAPBANK1
00:00001B00   SPRART
00:00002000   CLRTBL
00:00003800   SPRTBL
00:00000001 X SI
00:00000000 X NO
00:00000004   LIMCADENCIA
00:00000000 X COLTRASP
00:00000001   COLNEGRO
00:00000002 X COLVERDE
00:00000003 X COLVERCLA
00:00000004 X COLAZULOSC
00:00000005 X COLAZULLA
00:00000006   COLROJOOSC
00:00000007 X COLCYAN
00:00000008   COLROJO
00:00000009 X COLROJOCLA
00:0000000A X COLAMAROSC
00:0000000B X COLAMARCLA
00:0000000C X COLVERDOSC
00:0000000D X COLMAGENTA
00:0000000E X COLGRIS
00:0000000F   COLBLANCO
00:000002F8   POSMAPLIN1
00:000002D8   POSMAPLIN2
00:000002B8   POSMAPLIN3
00:00000298   POSMAPLIN4
00:00000278   POSMAPLIN5
00:00000258   POSMAPLIN6
00:00000238   POSMAPLIN7
00:0000000D   POSCARAMAP
00:00000248   POSVIDAS
00:00000011   POSRELIMAP
00:000002C8   POSRELIQ
00:00000288   POSENERG
00:000002B4   POSNIVEL
00:00000238   POSMAPA
00:000001EE   POSPUERABAJ
00:0000008E   POSPUERARRI
00:000000FC   POSPUERDERE
00:000000E1   POSPUERIZQU
00:00000000   ORACIONON
00:00000004   ORACIONOFF
00:00000008   CRUZON
00:0000000C   CRUZOFF
00:00000010   AGUAON
00:00000014   AGUAOFF
00:00000018   ARMADON
00:0000001C   ARMADOFF
00:00000020   PLANTAON
00:00000024   PLANTAOFF
00:00000028   VIDAEXTON
00:0000002C   VIDAEXTOFF
00:00000030   BALLESON
00:00000034   BALLESOFF
00:00000000   INACTIVO
00:00000001   ACTIVO
00:00000013   TILEPROTAM
00:00000009   TILEGRISM
00:00000010   TILEMAPROJO
00:0000000F   TILEMAPAMAR
00:0000000E   TILEMAPVERD
00:00000008   NMAXVIDREL
00:00000007   NHABNIVEL
00:000000F8 X MAXENERGIA
00:000000D9   TILEENERG8
00:000000BA   TILEENERG7
00:0000009B   TILEENERG6
00:0000007C   TILEENERG5
00:0000005D   TILEENERG4
00:0000003E   TILEENERG3
00:0000001F   TILEENERG2
00:00000000   TILENEGRO
00:00000000 X LIMPANTIZQ
00:000000FF   LIMPANTDER
00:00000000 X LIMPANTARR
00:00000080   LIMPANTABA
00:00000006 X BASEMAPY
00:00000003 X BASEMAPX
00:0000FD9A X H.KEYI
00:0000FD9F   H.TIMI
00:0000F000   PT3_SETUP
00:0000F001   PT3_MODADDR
00:0000F003   PT3_CrPsPtr
00:0000F005   PT3_SAMPTRS
00:0000F007   PT3_OrnPtrs
00:0000F009   PT3_PDSP
00:0000F00B   PT3_CSP
00:0000F00D   PT3_PSP
00:0000F00F   PT3_PrNote
00:0000F010   PT3_PrSlide
00:0000F012   PT3_AdInPtA
00:0000F014   PT3_AdInPtB
00:0000F016   PT3_AdInPtC
00:0000F018   PT3_LPosPtr
00:0000F01A   PT3_PatsPtr
00:0000F01C   PT3_Delay
00:0000F01D   PT3_AddToEn
00:0000F01E   PT3_Env_Del
00:0000F01F   PT3_ESldAdd
00:0000F021   PT3_NTL3
00:0000F023   VARS
00:0000F023   ChanA
00:0000F040   ChanB
00:0000F05D   ChanC
00:0000F07A   DelyCnt
00:0000F07B   CurESld
00:0000F07D   CurEDel
00:0000F07E   Ns_Base_AddToNs
00:0000F07E   Ns_Base
00:0000F07F   AddToNs
00:0000F080   NT_
00:0000F140   AYREGS
00:0000F140   VT_
00:0000F14E   EnvBase
00:0000F150   VAR0END
00:0000F150   T1_
00:0000F150   T_NEW_1
00:0000F150   T_OLD_1
00:0000F168   T_OLD_2
00:0000F180   T_NEW_3
00:0000F180   T_OLD_3
00:0000F182   T_OLD_0
00:0000F182   T_NEW_0
00:0000F19A   T_NEW_2
00:0000F240   ayFX_MODE
00:0000F241   ayFX_BANK
00:0000F243   ayFX_PRIORITY
00:0000F244   ayFX_POINTER
00:0000F246   ayFX_TONE
00:0000F248   ayFX_NOISE
00:0000F249   ayFX_VOLUME
00:0000F24A   ayFX_CHANNEL
00:00008000   START
00:00008033   loop_principal
00:00008040 X fin_programa_principal
00:00008040   inicializa_variables_pruebas
00:00008062 X fin_inicializa_variables_pruebas
00:00008063   inicializa_niveles
00:00008071   inicializa_niveles.bucle_borra_hab
00:00008075 X fin_iniciliza_niveles
00:00008076   actualiza_marcador_vidas
00:0000807B   loop_marcador_caras_negro
00:00008080 X fin_loop_marcador_caras_negro
00:00008089   loop_marcador_caras
00:0000808E X fin_loop_marcador_caras
00:0000808E X fin_actualiza_marcador_vidas
00:0000808F   actualiza_buffer_reliquias
00:00008095   loop_buffer_reliquias_negro
00:000080A2   loop_buffer_reliquias
00:000080A7 X fin_actualiza_buffer_reliquias
00:000080A8   localiza_info_habitacion
00:000080AB X localiza_info_habitacion.situo_columna
00:000080B4 X localiza_info_habitacion.situo_fila
00:000080BD   localiza_info_habitacion.loop_suma_fila
00:000080C5   localiza_info_habitacion.situo_nivel
00:000080D4   localiza_info_habitacion.loop_suma_nivel
00:000080D9   localiza_info_habitacion.actualiza_valiable_habitacion
00:000080E2 X fin_localiza_info_habitacion
00:000080E3   suma_A_BC
00:000080E8 X fin_suma_A_BC
00:000080E9   color_pantalla
00:000080FA X fin_color_pantalla
00:000080FA   sub_preparapantalla
00:000080FA X elimina_clic
00:000080FE X fin_elimina_clic
00:000080FE X limpia_pantalla
00:00008102 X fin_limpia_pantalla
00:00008108 X screen2
00:0000810D X sprites_16_16
00:0000811B X fin_sub_preparapantalla
00:0000811B   pinta_pantalla_completa
00:00008121 X fin_pinta_pantalla_completa
00:00008122   pinta_parte_superior_pantalla
00:00008153   pinta_parte_superior_pantalla.carga_nivel_0
00:0000816E   pinta_parte_superior_pantalla.carga_nivel_1
00:00008189   pinta_parte_superior_pantalla.carga_nivel_2
00:000081A4   pinta_parte_superior_pantalla.carga_nivel_3
00:000081BF   pinta_parte_superior_pantalla.carga_nivel_4
00:000081DA   pinta_parte_superior_pantalla.carga_nivel_5
00:000081F5   pinta_parte_superior_pantalla.carga_nivel_6
00:0000820D   pinta_parte_superior_pantalla.fin_carga_niveles
00:0000823A X fin_pinta_parte_superior_pantalla
00:0000823A   tiles_patrones
00:0000823C   tiles_colores
00:0000823E   tiles_mapa
00:00008240   pinta_parte_inferior_pantalla
00:0000825B X fin_pinta_parte_inferior_pantalla
00:0000825B   pinta_vidas
00:0000826A X fin_pinta_vidas
00:0000826A   pinta_reliquias
00:00008279 X fin_pinta_reliquias
00:00008279   pinta_nivel
00:00008285 X fin_pinta_nivel
00:00008285   pinta_tile_suelto
00:00008292 X fin_pinta_tile_suelto
00:00008293   mira_pinta_energia
00:00008299 X pinta_ener
00:00008299 X pinta_ener_tile_8
00:000082A5   pinta_ener_tile_8_negro
00:000082A6   pinta_ener_tile_7
00:000082B0   pinta_ener_tile_7_negro
00:000082B1   pinta_ener_tile_6
00:000082BB   pinta_ener_tile_6_negro
00:000082BC   pinta_ener_tile_5
00:000082C6   pinta_ener_tile_5_negro
00:000082C7   pinta_ener_tile_4
00:000082D1   pinta_ener_tile_4_negro
00:000082D2   pinta_ener_tile_3
00:000082DC   pinta_ener_tile_3_negro
00:000082DD   pinta_ener_tile_2
00:000082E7   pinta_ener_tile_2_negro
00:000082E8   fin_mira_pinta_energia
00:000082EA   pinta_energia
00:000082F9 X fin_pinta_energia
00:000082F9   borra_mapa
00:0000834F X fin_borra_mapa
00:00008350   pinta_puertas
00:0000836D X fin_pinta_puertas
00:0000836E   pinta_puerta_aba
00:00008389 X fin_pinta_puerta_aba
00:00008389   pinta_puerta_arr
00:000083A4 X fin_pinta_puerta_arr
00:000083A4   pinta_puerta_der
00:000083BF X fin_pinta_puerta_der
00:000083BF   pinta_puerta_izq
00:000083DA X fin_pinta_puerta_izq
00:000083DA   posiciona_en_mapa
00:000083DD X posiciona_en_mapa.sumar_fila
00:00008407 X posiciona_en_mapa.fila_0
00:0000840E   posiciona_en_mapa.fila_1
00:00008415   posiciona_en_mapa.fila_2
00:0000841C   posiciona_en_mapa.fila_3
00:00008423   posiciona_en_mapa.fila_4
00:0000842A   posiciona_en_mapa.fila_5
00:00008431 X posiciona_en_mapa.fila_6
00:00008431   posiciona_en_mapa.sumar_columna
00:00008447   pinta_pos_mapa_vacio
00:00008449   fin_pinta_pos_mapa
00:0000844C X fin_posiciona_en_mapa
00:0000844C   efecto_imagen_tira_reliquia
00:0000844F   efecto_imagen_tira_reliquia.parpadea_fondo
00:00008466 X fin_efecto_imagen_tira_reliquia
00:00008466   pinta_array
00:00008481   pinta_array.pa_pinta_fila
00:00008482   pinta_array.pa_pinta_columnas
00:000084A5 X fin_pinta_array
00:000084A6   wordaux1
00:000084A8   wordaux2
00:000084AA   byteaux1
00:000084AB   byteaux2
00:000084AC   carga_patrones_sprites_nivel
00:000084B6 X fin_carga_patrones_sprites_nivel
00:000084B7   carga_patrones_nivel_comunes
00:000084C3 X fin_carga_patrones_nivel_comunes
00:000084C3   carga_patrones_sprites_nivel1
00:000084C3 X fin_carga_patrones_sprites
00:000084C4   render_sprites
00:000084D0 X fin_actualiza_array_sprites_vram
00:000084D0   vuelca_resultado_puntomira_array
00:000084F5 X vuelca_resultado_puntomira_array.codigo_color_1
00:000084FE   vuelca_resultado_puntomira_array.codigo_color_2
00:00008507 X fin_vuelca_resultado_puntomira_array
00:00008507   check_player
00:00008526 X f
00:00008527   mueve_arriba
00:00008532   mueve_arriba.no_decrementa_y
00:00008533 X fin_mueve_arriba
00:00008534   mueve_derecha
00:00008541   mueve_derecha.no_incrementa_x
00:00008542 X fin_mueve_derecha
00:00008543   mueve_abajo
00:00008550   mueve_abajo.no_incrementa_y
00:00008551 X fin_mueve_abajo
00:00008552   mueve_izquierda
00:0000855D   mueve_izquierda.no_decrementa_x
00:0000855E X fin_mueve_izquierda
00:0000855F   mira_disparo
00:0000855F X mira_disparo.mira_boton_pulsado1
00:0000856C X mira_disparo.no_efectua_disparo
00:00008577   mira_disparo.efectua_disparo
00:00008589   mira_disparo.fin_mira_disparo1
00:0000858A   mira_disparo.mira_boton_pulsado2
00:000085A6 X fin_mira_disparo
00:000085A6   update_controllers_status
00:000085DD   read_joy_0
00:000085F1   check_8th_keyboard_row
00:000085FF   check_4th_keyboard_row
00:0000860D X inicializa_replayer_efectos_interrupciones
00:00008626 X fin_inicializa_replayer_efectos_interrupciones
00:00008627   subrutina_isr
00:00008630 X fin_subrutina_isr
00:00008630 X subrutinas_sonido
00:00000000   CHNPRM_PsInOr
00:00000001   CHNPRM_PsInSm
00:00000002   CHNPRM_CrAmSl
00:00000003   CHNPRM_CrNsSl
00:00000004   CHNPRM_CrEnSl
00:00000005   CHNPRM_TSlCnt
00:00000006   CHNPRM_CrTnSl
00:00000008   CHNPRM_TnAcc
00:0000000A   CHNPRM_COnOff
00:0000000B   CHNPRM_OnOffD
00:0000000C   CHNPRM_OffOnD
00:0000000D   CHNPRM_OrnPtr
00:0000000F   CHNPRM_SamPtr
00:00000011   CHNPRM_NNtSkp
00:00000012   CHNPRM_Note
00:00000013   CHNPRM_SlToNt
00:00000014   CHNPRM_Env_En
00:00000015   CHNPRM_Flags
00:00000016   CHNPRM_TnSlDl
00:00000017   CHNPRM_TSlStp
00:00000019   CHNPRM_TnDelt
00:0000001B   CHNPRM_NtSkCn
00:0000001C   CHNPRM_Volume
00:0000001D X CHNPRM_Size
00:00000000   AR_TonA
00:00000002   AR_TonB
00:00000004   AR_TonC
00:00000006   AR_Noise
00:00000007   AR_Mixer
00:00000008   AR_AmplA
00:00000009   AR_AmplB
00:0000000A   AR_AmplC
00:0000000B   AR_Env
00:0000000D   AR_EnvTp
00:00008630   CHECKLP
00:00008641 X PT3_MUTE
00:0000864D   PT3_INIT
00:0000868C   PT3_INIT.TP_0
00:00008698   PT3_INIT.TP_1
00:0000869F   PT3_INIT.TP_2
00:0000870D   PT3_INIT.L1
00:0000871A   PT3_INIT.L2
00:0000871E X PT3_INIT.L3
00:00008745   PT3_INIT.CORR_1
00:00008753   PT3_INIT.CORR_2
00:0000875A   PT3_INIT.TC_EXIT
00:00008765   PT3_INIT.INITV1
00:0000876D   PT3_INIT.INITV2
00:00008781   PT3_INIT.INITV3
00:00008785   PD_OrSm
00:0000878F   PD_SAM
00:00008790   PD_SAM_
00:000087A6   PD_VOL
00:000087AF   PD_EOff
00:000087B7   PD_SorE
00:000087C1   PD_ENV
00:000087C6   PD_ORN
00:000087CB   PD_ESAM
00:000087D8   PTDECOD
00:000087E7   PD_LOOP
00:000087EA   PD_LP2
00:00008817   PD_NOIS
00:0000881C   PD_REL
00:00008822   PD_NOTE
00:0000882A   PD_RES
00:0000883C   PD_FIN
00:00008843   C_PORTM
00:0000888E   C_PORTM.NOSIG
00:00008898   SET_STP
00:000088A4   C_GLISS
00:000088B7   C_SMPOS
00:000088BD   C_ORPOS
00:000088C3   C_VIBRT
00:000088DB   C_ENGLS
00:000088ED   C_DELAY
00:000088F3   SETENV
00:0000890E   C_NOP
00:0000890F   SETORN
00:00008928   SPCCOMS
00:00008948   CHREGS
00:0000896B   CHREGS.CH_ORPS
00:00008976   CHREGS.CH_NTP
00:0000897C   CHREGS.CH_NOK
00:00008997   CHREGS.CH_SMPS
00:000089AD   CHREGS.CH_NOAC
00:000089F4   CHREGS.CH_STPP
00:00008A09   CHREGS.CH_AMP
00:00008A1B   CHREGS.CH_AMIN
00:00008A20   CHREGS.CH_SVAM
00:00008A23   CHREGS.CH_NOAM
00:00008A2C   CHREGS.CH_APOS
00:00008A32   CHREGS.CH_VOL
00:00008A3D X CHREGS.CH_ENV
00:00008A44   CHREGS.CH_NOEN
00:00008A5E   CHREGS.NO_ENAC
00:00008A65   CHREGS.NO_ENSL
00:00008A73   CHREGS.CH_MIX
00:00008A77   CHREGS.CH_EXIT
00:00008A96   CHREGS.CH_ONDL
00:00008A9A   PT3_PLAY
00:00008ACE   PT3_PLAY.PLNLP
00:00008AF5   PT3_PLAY.PL1A
00:00008B00   PT3_PLAY.PL1B
00:00008B15   PT3_PLAY.PL1C
00:00008B2A   PT3_PLAY.PL1D
00:00008B30   PT3_PLAY.PL2
00:00008B92   PT3_ROUT
00:00008B93   ROUT_A0
00:00008B9F   ROUT_A0.LOUT
00:00008BB3   NT_DATA
00:00008BC3   T_
00:00008BC3   TCOLD_0
00:00008BCF   TCNEW_1
00:00008BCF   TCOLD_1
00:00008BD1   TCOLD_2
00:00008BE3   TCNEW_3
00:00008BE4   TCOLD_3
00:00008BED   TCNEW_0
00:00008BF8   TCNEW_2
00:00008C03   EMPTYSAMORN
00:00008C07   T_PACK
00:00000000 X AYFXRELATIVE
00:00008C3C   ayFX_SETUP
00:00008C48   ayFX_END
00:00008C4E   ayFX_INIT
00:00008C5F   ayFX_INIT.CHECK_PRI
00:00008C80   ayFX_INIT.INIT_END
00:00008C84   ayFX_PLAY
00:00008C98   ayFX_PLAY.TAKECB
00:00008CA9   ayFX_PLAY.CHECK_NN
00:00008CB6   ayFX_PLAY.SETPOINTER
00:00008CCA   ayFX_PLAY.SETMASKS
00:00008CD8 X ayFX_PLAY.CHK1
00:00008CDA X ayFX_PLAY.PLAY_C
00:00008CE7   ayFX_PLAY.CHK2
00:00008CEC X ayFX_PLAY.PLAY_B
00:00008CF9   ayFX_PLAY.CHK3
00:00008CFC X ayFX_PLAY.PLAY_A
00:00008D09   ayFX_PLAY.SETMIXER
00:00008D19   song
00:00009681   sfx_bank
00:000096CC   resetea_ayudas
00:0000977B X fin_resetea_ayudas
00:0000977C   inicializa_ayudas
00:0000977F X inicializa_ayudas.examina_ayudas
00:0000977F X inicializa_ayudas.examina_ballesta
00:0000978D   inicializa_ayudas.examina_vidaextra
00:0000979B X inicializa_ayudas.examina_planta
00:000097A7   inicializa_ayudas.examina_armadura
00:000097B5   inicializa_ayudas.examina_agua
00:000097C3   inicializa_ayudas.examina_cruz
00:000097D1   inicializa_ayudas.examina_oracion
00:000097DF   inicializa_ayudas.fin_examina_ayudas
00:000097DF X fin_inicializa_ayudas
00:000097E0   activaycalcula_posicion_ayuda
00:0000983B X fin_activaycalcula_posicion_ayuda
00:0000983B   pinta_obj_ayuda
00:00009858 X fin_pinta_obj_ayuda
00:00009858   accion_oracion
00:00009858 X fin_accion_oracion
00:00009859   accion_cruz
00:00009859 X fin_accion_cruz
00:0000985A   accion_agua
00:0000985A X fin_accion_agua
00:0000985B X accion_armadura
00:0000985B X fin_accion_armadura
00:0000985C   accion_planta
00:0000985C X fin_accion_planta
00:0000985D   accion_vidaextra
00:0000985D X fin_accion_vidaextra
00:0000985E   accion_ballesta
00:0000985E X fin_accion_ballesta
00:0000985F   depack_VRAM
00:0000988C   literal
00:00009891   loop
00:0000989A X getlen
00:000098A0   lus
00:000098BD   lenok
00:000098CA   mode7
00:000098D0   mode6
00:000098D6   mode5
00:000098DC   mode4
00:000098E2   mode3
00:000098E8   mode2
00:000098F8   offsok
00:00009903   offsok.loop
00:00009925   getbit
00:00009929   getbitexx
00:0000992F   Depack_out
00:00009931   modes
00:00000000 X ESTRUCTURA_PUNTOMIRA.posx
00:00000001 X ESTRUCTURA_PUNTOMIRA.posy
00:00000002 X ESTRUCTURA_PUNTOMIRA.escena
00:00000003 X ESTRUCTURA_PUNTOMIRA.velocidad
00:00000004 X ESTRUCTURA_PUNTOMIRA.boton2_pressed
00:00000005 X ESTRUCTURA_PUNTOMIRA.cadencia
00:00000006 X ESTRUCTURA_PUNTOMIRA.pm_aux1
00:00000007 X ESTRUCTURA_PUNTOMIRA.pm_aux2
00:00000008 X ESTRUCTURA_PUNTOMIRA.pm_aux3
00:00000009 X ESTRUCTURA_PUNTOMIRA.pm_aux4
00:0000000A X ESTRUCTURA_PUNTOMIRA.pm_aux5
00:0000000B X ESTRUCTURA_PUNTOMIRA.pm_aux6
00:0000000C X ESTRUCTURA_PUNTOMIRA.pm_aux7
00:0000000D X ESTRUCTURA_PUNTOMIRA.pm_aux8
00:0000000E X ESTRUCTURA_PUNTOMIRA.pm_aux9
00:0000000F X ESTRUCTURA_PUNTOMIRA.pm_aux10
00:00000010 X ESTRUCTURA_PUNTOMIRA
00:00000000 X ESTRUCTURA_ENEMIGO.tipo
00:00000001 X ESTRUCTURA_ENEMIGO.posx
00:00000002 X ESTRUCTURA_ENEMIGO.posy
00:00000003 X ESTRUCTURA_ENEMIGO.color
00:00000004 X ESTRUCTURA_ENEMIGO.escena
00:00000005 X ESTRUCTURA_ENEMIGO.contador_siguiente_escena
00:00000006 X ESTRUCTURA_ENEMIGO.reset_contador
00:00000007 X ESTRUCTURA_ENEMIGO.dano
00:00000008 X ESTRUCTURA_ENEMIGO.energia
00:00000009 X ESTRUCTURA_ENEMIGO.ver_hor
00:0000000A X ESTRUCTURA_ENEMIGO.manejador_dibujo
00:0000000C X ESTRUCTURA_ENEMIGO.en_aux3
00:0000000D X ESTRUCTURA_ENEMIGO.en_aux4
00:0000000E   ESTRUCTURA_ENEMIGO
00:00000000 X ESTRUCTURA_AYUDA.activo
00:00000001 X ESTRUCTURA_AYUDA.tipo
00:00000002 X ESTRUCTURA_AYUDA.tipousado
00:00000003 X ESTRUCTURA_AYUDA.postile
00:00000005 X ESTRUCTURA_AYUDA.pospantalla
00:00000007 X ESTRUCTURA_AYUDA.posx
00:00000008 X ESTRUCTURA_AYUDA.posy
00:00000009 X ESTRUCTURA_AYUDA.puntero_accion
00:0000000B X ESTRUCTURA_AYUDA.ayu_aux1
00:0000000C X ESTRUCTURA_AYUDA.ayu_aux2
00:0000000D X ESTRUCTURA_AYUDA.ayu_aux3
00:0000000E X ESTRUCTURA_AYUDA.ayu_aux4
00:0000000F X ESTRUCTURA_AYUDA.ayu_aux5
00:00000010   ESTRUCTURA_AYUDA
00:0000993F X sprites_pantantalla
00:0000993F   sprites_comunes
00:0000993F X sprite_punto_mira_1
00:0000995F X sprite_punto_mira_2
00:0000997F X sprite_punto_mira_1_mejorado
00:0000999F X sprite_punto_mira_2_mejorado
00:000099BF X sprite_explosion_1
00:000099DF X sprite_explosion_2
00:000099FF   fin_sprites_comunes
00:000099FF X sprite_arana1_1
00:00009A1F X sprite_arana1_2
00:00009A3F X sprite_murcielago1_1
00:00009A5F X sprite_murcielago1_2
00:00009A7F X sprite_serpiente1_1
00:00009A9F X sprite_serpiente1_2
00:00009ABF X sprite_serpiente2_1
00:00009ADF X sprite_serpiente2_2
00:00009AFF X sprite_zombi1_1_1
00:00009B1F X sprite_zombi1_2_1
00:00009B3F X sprite_zombi1_3_1
00:00009B5F X sprite_zombi1_4_1
00:00009B7F X sprite_zombi1_1_2
00:00009B9F X sprite_zombi1_2_2
00:00009BBF X sprite_zombi1_3_2
00:00009BDF X sprite_zombi1_4_2
00:00009BFF X sprite_zombi2_1_1
00:00009C1F X sprite_zombi2_2_1
00:00009C3F X sprite_zombi2_3_1
00:00009C5F X sprite_zombi2_4_1
00:00009C7F X sprite_zombi2_1_2
00:00009C9F X sprite_zombi2_2_2
00:00009CBF X sprite_zombi2_3_2
00:00009CDF X sprite_zombi2_4_2
00:00009CFF X sprite_caballero1_1_1
00:00009D1F X sprite_caballero1_2_1
00:00009D3F X sprite_caballero1_3_1
00:00009D5F X sprite_caballero1_4_1
00:00009D7F X sprite_caballero1_1_2
00:00009D9F X sprite_caballero1_2_2
00:00009DBF X sprite_caballero1_3_2
00:00009DDF X sprite_caballero1_4_2
00:00009DFF X sprite_caballero2_1_1
00:00009E1F X sprite_caballero2_2_1
00:00009E3F X sprite_caballero2_3_1
00:00009E5F X sprite_caballero2_4_1
00:00009E7F X sprite_caballero2_1_2
00:00009E9F X sprite_caballero2_2_2
00:00009EBF X sprite_caballero2_3_2
00:00009EDF X sprite_caballero2_4_2
00:00009EFF X sprite_llama1_1
00:00009F1F X sprite_llama2_1
00:00009F3F X sprite_llama1_2
00:00009F5F X sprite_llama2_2
00:00009F7F X sprite_fantasma1_1
00:00009F9F X sprite_fantasma2_1
00:00009FBF X sprite_fantasma1_2
00:00009FDF X sprite_fantasma2_2
00:00009FFF X sprite_magia1_1
00:0000A01F X sprite_magia2_1
00:0000A03F X sprite_magia1_2
00:0000A05F X sprite_magia2_2
00:0000A07F X sprite_beholder1_1
00:0000A09F X sprite_beholder2_1
00:0000A0BF X sprite_beholder3_1
00:0000A0DF X sprite_beholder4_1
00:0000A0FF X sprite_beholder1_2
00:0000A11F X sprite_beholder2_2
00:0000A13F X sprite_beholder3_2
00:0000A15F X sprite_beholder4_2
00:0000A17F X sprite_vampiro1_1
00:0000A19F X sprite_vampiro2_1
00:0000A1BF X sprite_vampiro1_2
00:0000A1DF X sprite_vampiro2_2
00:0000A1FF X sprite_manoizq1
00:0000A21F X sprite_manoizq2
00:0000A23F X sprite_manoizq3
00:0000A25F X sprite_manoder1
00:0000A27F X sprite_manoder2
00:0000A29F X sprite_manoder3
00:0000A2BF   habitacion_actual
00:0000A2C0   habitacion_extras
00:0000A2C1   habitaciones_juego
00:0000A2C1 X habitaciones_nivel0
00:0000A331 X habitaciones_nivel1
00:0000A3A1 X habitaciones_nivel2
00:0000A411 X habitaciones_nivel3
00:0000A481 X habitaciones_nivel4
00:0000A4F1 X habitaciones_nivel5
00:0000A561 X habitaciones_nivel6
00:0000A5D1   color_base
00:0000A5D4   color_bomba1
00:0000A5D7   color_bomba2
00:0000A5DA X prota
00:0000A5DA   prota.posx
00:0000A5DB   prota.posy
00:0000A5DC   prota.escena
00:0000A5DD X prota.velocidad
00:0000A5DE X prota.boton2_pressed
00:0000A5DF   prota.cadencia
00:0000A5E0 X prota.pm_aux1
00:0000A5E1 X prota.pm_aux2
00:0000A5E2 X prota.pm_aux3
00:0000A5E3 X prota.pm_aux4
00:0000A5E4 X prota.pm_aux5
00:0000A5E5 X prota.pm_aux6
00:0000A5E6 X prota.pm_aux7
00:0000A5E7 X prota.pm_aux8
00:0000A5E8 X prota.pm_aux9
00:0000A5E9 X prota.pm_aux10
00:0000A5EA   prota_nivel
00:0000A5EB   prota_vidas
00:0000A5EC   prota_reliquias
00:0000A5ED   prota_pos_mapx
00:0000A5EE   prota_pos_mapy
00:0000A5EF   prota_energia
00:0000A5F0   array_aux_vidas
00:0000A5F8   array_aux_reliquias
00:0000A600   array_aux_energia
00:0000A607   ultimo_pos_array_aux_energia
00:0000A608   array_aux_mapa_limpiar
00:0000A60F   elemento_pintar_mapa
00:0000A610   array_puerta_arriba
00:0000A610 X array_puerta_arriba1
00:0000A614 X array_puerta_arriba2
00:0000A618 X array_puerta_arriba3
00:0000A61C X array_puerta_arriba4
00:0000A620 X array_puerta_arriba5
00:0000A624   array_puerta_derecha
00:0000A624 X array_puerta_derecha1
00:0000A627 X array_puerta_derecha2
00:0000A62A X array_puerta_derecha3
00:0000A62D X array_puerta_derecha4
00:0000A630 X array_puerta_derecha5
00:0000A633 X array_puerta_derecha6
00:0000A636 X array_puerta_derecha7
00:0000A639   array_puerta_abajo
00:0000A63D   array_puerta_izquierda
00:0000A63D X array_puerta_izquierda1
00:0000A640 X array_puerta_izquierda2
00:0000A643 X array_puerta_izquierda3
00:0000A646 X array_puerta_izquierda4
00:0000A649 X array_puerta_izquierda5
00:0000A64C X array_puerta_izquierda6
00:0000A64F X array_puerta_izquierda7
00:0000A652   pos_ayudas
00:0000A662   pos_ayudas_y
00:0000A672   pos_ayudas_x
00:0000A682   array_ayudas
00:0000A682 X array_oracionon
00:0000A684 X array_oracionon1
00:0000A686 X array_oracionoff
00:0000A688 X array_oracionoff1
00:0000A68A X array_cruzon
00:0000A68C X array_cruzon1
00:0000A68E X array_cruzoff
00:0000A690 X array_cruzoff1
00:0000A692 X array_aguaon
00:0000A694 X array_aguaon1
00:0000A696 X array_aguaoff
00:0000A698 X array_aguaoff1
00:0000A69A X array_armaduraon
00:0000A69C X array_armaduraon1
00:0000A69E X array_armaduraoff
00:0000A6A0 X array_armaduraoff1
00:0000A6A2 X array_plantaon
00:0000A6A4 X array_plantaon1
00:0000A6A6 X array_plantaoff
00:0000A6A8 X array_plantaoff1
00:0000A6AA X array_extraon
00:0000A6AC X array_extraon1
00:0000A6AE X array_extraoff
00:0000A6B0 X array_extraoff1
00:0000A6B2 X array_ballestaon
00:0000A6B4 X array_ballestaon1
00:0000A6B6 X array_ballestaoff
00:0000A6B8 X array_ballestaoff1
00:0000A6BA X lista_ayudas
00:0000A6BA   ayuda_oracion
00:0000A6CA   ayuda_cruz
00:0000A6DA   ayuda_aguabendita
00:0000A6EA   ayuda_armadura
00:0000A6FA   ayuda_planta
00:0000A70A   ayuda_vidaextra
00:0000A71A   ayuda_ballesta
00:0000A72A   array_sprites
00:0000A72A   array_sprites_pm
00:0000A732 X array_sprites_enem
00:0000A7AA X lista_enemigos
00:0000A836 X puntero_array_atrib_array_VRAM
00:0000A838   tiles_patrones_nivel0
00:0000A9ED   tiles_color_nivel0
00:0000AA34   tiles_mapa_nivel0
00:0000AA69   tiles_patrones_nivel1
00:0000AC1E   tiles_color_nivel1
00:0000AC65   tiles_mapa_nivel1
00:0000AC9A   tiles_patrones_nivel2
00:0000AE4F   tiles_color_nivel2
00:0000AE96   tiles_mapa_nivel2
00:0000AECB   tiles_patrones_nivel3
00:0000B080   tiles_color_nivel3
00:0000B0C7   tiles_mapa_nivel3
00:0000B0FC   tiles_patrones_nivel4
00:0000B2B1   tiles_color_nivel4
00:0000B2F8   tiles_mapa_nivel4
00:0000B32D   tiles_patrones_nivel5
00:0000B4E2   tiles_color_nivel5
00:0000B529   tiles_mapa_nivel5
00:0000B55E   tiles_patrones_nivel6
00:0000B713   tiles_color_nivel6
00:0000B75A   tiles_mapa_nivel6
00:0000B78F   tiles_patrones_marcador
00:0000B8DB   tiles_color_marcador
00:0000B910   tiles_mapa_marcador
00:0000B972   END


 Output: t4.out
-------------------------------------------------

 Page: 00
  Org: 00008000  Size: *  Used: 00000000

    No output

 Output: t4.bin
-------------------------------------------------

 Page: 00
  Org: 00008000  Size: *  Used: 00003979

   Address   Length Align   Label
   00008000   14713         START
