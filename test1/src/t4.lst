Sjasm Z80 Assembler v0.42c - www.xl2s.tk             [2021.10.13 - 21:19:21]

t4.asm
Errors: 0

       1   00:0000                      	OUTPUT	"t4.bin"
       2   00:8000                      	
       3   00:8000                      ;;=====================================================
       4   00:8000                      ;;DEFINICIÓN DE CONSTANTES
       5   00:8000                      ;;=====================================================	
       6   00:8000                      	include "constantes.asm"
       1.  00:8000                      ;;=====================================================
       2.  00:8000                      ;; FICHERO constantes.asm
       3.  00:8000                      ;;=====================================================
       4.  00:8000                      
       5.  00:8000                      ;;ETIQUETAS/CONSTANTES BIOS TECLADO
       6.  00:8000  (00:00D8)           GTTRIG		equ		#00D8	;Returns current trigger status
       7.  00:8000  (00:00D5)           GTSTCK		equ		#00D5	;Returns the joystick/cursors status
       8.  00:8000  (00:F3DB)           CLIKSW		equ		#F3DB	;deshabilita el sonido de clic cuando se pulsa una tecla
       9.  00:8000                      
      10.  00:8000                      ;;ETIQUETAS/CONSTANTES BIOS VDP
      11.  00:8000  (00:013E)           RDVDP		equ		#013E	;lee registro status VDP
      12.  00:8000  (00:0047)           WRTVDP		equ		#0047	;escribe registros del VDP
      13.  00:8000  (00:005C)           LDIRVM		equ		#005C	;RAM/ROM -> VRAM
      14.  00:8000  (00:0059)           LDIRMV		equ		#0059	;VRAM -> RAM
      15.  00:8000  (00:005F)           CHGMOD		equ		#005F	;cambia modo pantalla (screen mode)
      16.  00:8000  (00:0041)           DISSCR  	equ		#0041	;desactiva pantanlla
      17.  00:8000  (00:0044)           ENASCR  	equ		#0044	;activa pantalla
      18.  00:8000  (00:0062)           CHGCLR  	equ		#0062	;cambia color de pantalla (toca A y direcciones)
      19.  00:8000  (00:F3E9)           FORCLR		equ		#F3E9	;zona memoria color foreground
      20.  00:8000  (00:F3EA)           BAKCLR  	equ		#F3EA	;zona memoria color background
      21.  00:8000  (00:F3EB)           BDRCLR 		equ		#F3EB	;zona memoria bordercolor
      22.  00:8000  (00:00C3)           CLS			equ		#00C3	;limpia pantalla (necesita A=0)
      23.  00:8000                      
      24.  00:8000                      ;;ETIQUETAS/CONSTANTES REGISTROS VDP
      25.  00:8000  (00:F3DF)           RG0SAV		equ		#F3DF	;Mirror of VDP register 0 (Basic: VDP(0))
      26.  00:8000  (00:F3E0)           RG1SAV		equ		#F3E0	;Mirror of VDP register 1 (Basic: VDP(1))
      27.  00:8000  (00:F3E1)           RG2SAV		equ		#F3E1	;Mirror of VDP register 2 (Basic: VDP(2))
      28.  00:8000  (00:F3E2)           RG3SAV		equ		#F3E2	;Mirror of VDP register 3 (Basic: VDP(3))
      29.  00:8000  (00:F3E3)           RG4SAV		equ		#F3E3	;Mirror of VDP register 4 (Basic: VDP(4))
      30.  00:8000  (00:F3E4)           RG5SAV		equ		#F3E4	;Mirror of VDP register 5 (Basic: VDP(5))
      31.  00:8000  (00:F3E5)           RG6SAV		equ		#F3E5	;Mirror of VDP register 6 (Basic: VDP(6))
      32.  00:8000  (00:F3E6)           RG7SAV		equ		#F3E6	;Mirror of VDP register 7 (Basic: VDP(7))
      33.  00:8000  (00:F3E7)           STATFL		equ		#F3E7	;Mirror of VDP(8) status register (S#0)
      34.  00:8000                      
      35.  00:8000  (00:0099)           REGEST		equ		#0099	;registro de estado para escribir directamente en VRAM
      36.  00:8000  (00:0098)           REGESCVDP	equ		#0098	;registro donde escribir valor para VRAM
      37.  00:8000                      
      38.  00:8000                      ;;ETIQUETAS/CONSTANTES REGISTROS PSG (PARA JOYSTICK)
      39.  00:8000  (00:00A0)           PSG_A  equ  0a0h  ;reg address
      40.  00:8000  (00:00A1)           PSG_W  equ  0a1h  ;reg data WR
      41.  00:8000  (00:00A2)           PSG_R  equ  0a2h  ;reg data
      42.  00:8000                      
      43.  00:8000                      
      44.  00:8000                      ;;ETIQUETAS DE ZONAS DE MEMORIA DE LA VPD (MSX1)
      45.  00:8000  (00:0000)           CHRTBL		equ		#0000
      46.  00:8000  (00:1800)           TILMAP		equ		#1800
      47.  00:8000  (00:1900)           TILMAPBANK1 equ		#1900
      48.  00:8000  (00:1B00)           SPRART		equ		#1B00
      49.  00:8000  (00:2000)           CLRTBL		equ		#2000
      50.  00:8000  (00:3800)           SPRTBL		equ		#3800
      51.  00:8000                      
      52.  00:8000                      
      53.  00:8000                      ;;ETIQUETAS ESTANDAR PARA DAR MÁS CLARIDAD AL CODIGO
      54.  00:8000  (00:0001)           SI			equ		1
      55.  00:8000  (00:0000)           NO			equ		0
      56.  00:8000  (00:0004)           LIMCADENCIA equ		4	;nº de veces que se ejecutará el disparo antes de ejecutar un disparo real (porque cuando se pulsa la tecl dispara 3 ó 4 veces de rápido que va)
      57.  00:8000                      ;hay que estudiar si 3 es un nº mejor
      58.  00:8000                      
      59.  00:8000                      
      60.  00:8000                      
      61.  00:8000                      ;;PALETA DE COLORES DEL MSX
      62.  00:8000  (00:0000)           COLTRASP	equ		0
      63.  00:8000  (00:0001)           COLNEGRO	equ		1
      64.  00:8000  (00:0002)           COLVERDE	equ		2
      65.  00:8000  (00:0003)           COLVERCLA	equ		3
      66.  00:8000  (00:0004)           COLAZULOSC	equ		4
      67.  00:8000  (00:0005)           COLAZULLA	equ		5
      68.  00:8000  (00:0006)           COLROJOOSC	equ		6
      69.  00:8000  (00:0007)           COLCYAN		equ		7
      70.  00:8000  (00:0008)           COLROJO		equ		8
      71.  00:8000  (00:0009)           COLROJOCLA	equ		9
      72.  00:8000  (00:000A)           COLAMAROSC	equ		10
      73.  00:8000  (00:000B)           COLAMARCLA	equ		11
      74.  00:8000  (00:000C)           COLVERDOSC	equ		12
      75.  00:8000  (00:000D)           COLMAGENTA	equ		13
      76.  00:8000  (00:000E)           COLGRIS		equ		14
      77.  00:8000  (00:000F)           COLBLANCO	equ		15
      78.  00:8000                      
      79.  00:8000                      
      80.  00:8000                      
      81.  00:8000                      ;;ETIQUETAS ESPECIFICAS PARA DAR MÁS CLARIDAD AL CODIGO (relacionadas con posiciones en mapa vdp)
      82.  00:8000  (00:02F8)           POSMAPLIN1  equ		#02F8
      83.  00:8000  (00:02D8)           POSMAPLIN2  equ		#02D8
      84.  00:8000  (00:02B8)           POSMAPLIN3  equ		#02B8
      85.  00:8000  (00:0298)           POSMAPLIN4  equ		#0298
      86.  00:8000  (00:0278)           POSMAPLIN5  equ		#0278
      87.  00:8000  (00:0258)           POSMAPLIN6  equ		#0258
      88.  00:8000  (00:0238)           POSMAPLIN7  equ		#0238
      89.  00:8000                      
      90.  00:8000  (00:000D)           POSCARAMAP	equ		#000D
      91.  00:8000  (00:0248)           POSVIDAS	equ		#0248
      92.  00:8000  (00:0011)           POSRELIMAP	equ		#0011
      93.  00:8000  (00:02C8)           POSRELIQ	equ		#02C8
      94.  00:8000  (00:0288)           POSENERG	equ		#0288
      95.  00:8000  (00:02B4)           POSNIVEL	equ		#02B4
      96.  00:8000  (00:0238)           POSMAPA		equ 	#0238
      97.  00:8000                      
      98.  00:8000  (00:01EE)           POSPUERABAJ equ		#01EE
      99.  00:8000  (00:008E)           POSPUERARRI equ		#008E
     100.  00:8000  (00:00FC)           POSPUERDERE equ		#00FC
     101.  00:8000  (00:00E1)           POSPUERIZQU equ		#00E1
     102.  00:8000                      
     103.  00:8000                      ;;POSICIONES DE LAS AYUDAS EN PANTALLA BANCO 1
     104.  00:8000  (00:00A3)           POSORACION	equ		163
     105.  00:8000  (00:00A7)           POSCRUZ		equ		167
     106.  00:8000  (00:00AB)           POSAGUA		equ		171
     107.  00:8000  (00:00AF)           POSARMAD	equ		175
     108.  00:8000  (00:00B3)           POSPLANTA	equ		179
     109.  00:8000  (00:00B7)           POSVIDAEXT	equ		183
     110.  00:8000  (00:00BB)           POSBALLESTA	equ		187
     111.  00:8000                      
     112.  00:8000                      ;;POSICIONES DE LAS AYUDAS EN PANTALLA PIXEL CENTRAL X
     113.  00:8000  (00:0020)           POSORACIONX	equ		32
     114.  00:8000  (00:0040)           POSCRUZX	equ		64
     115.  00:8000  (00:0060)           POSAGUAX	equ		96
     116.  00:8000  (00:0080)           POSARMADX	equ		128
     117.  00:8000  (00:00A0)           POSPLANTAX	equ		160
     118.  00:8000  (00:00C0)           POSVIDAEXTX	equ		192
     119.  00:8000  (00:00E0)           POSBALLESTAX equ	224
     120.  00:8000                      
     121.  00:8000                      ;;POSICIONES DE LAS AYUDAS EN PANTALLA PIXEL CENTRAL Y
     122.  00:8000  (00:0070)           POSAYUDASY	equ		112	;se pone por poner porque las estructuras de ayudas ya se inicializan con este valor
     123.  00:8000                      
     124.  00:8000                      ;;ESTADO ESTRUCTURA
     125.  00:8000  (00:0000)           INACTIVA	equ		0
     126.  00:8000  (00:0001)           ACTIVA		equ		1
     127.  00:8000                      
     128.  00:8000                      ;;POSICIONES DE LAS ANTORCHAS
     129.  00:8000  (00:0088)           POSANTOR1	equ		136
     130.  00:8000  (00:0097)           POSANTOR2	equ		151
     131.  00:8000  (00:00C4)           MAPLLAMA1	equ		196
     132.  00:8000  (00:00C5)           MAPLLAMA2	equ		197
     133.  00:8000  (00:00FF)           RESETLLAMA	equ		255
     134.  00:8000                      
     135.  00:8000                      ;;POSICIONES DE LOS ESQUELETOS
     136.  00:8000  (00:0088)           POSESQUEL1	equ		136
     137.  00:8000  (00:0095)           POSESQUEL2	equ		149
     138.  00:8000  (00:00A9)           POSCALAVE1	equ		169
     139.  00:8000  (00:00B6)           POSCALAVE2	equ		182
     140.  00:8000  (00:0019)           RESETESQUEL	equ		25
     141.  00:8000  (00:0004)           RESETESCENAESQUEL 	equ	4	;hay 4 caras con las que el esqueleto cambia (se ha metido el 0 para facilitar código)
     142.  00:8000                      
     143.  00:8000                      ;;ETIQUETAS ESPECIFICAS PARA DAR MÁS CLARIDAD AL CODIGO (relacionadas con posiciones en en el banco de memoria)
     144.  00:8000  (00:0013)           TILEPROTAM  equ		19		;tile del prota para pintar en mapa
     145.  00:8000  (00:0009)           TILEGRISM	equ		9		;tile gris que representa vacio (por donde el prota va pasando)
     146.  00:8000  (00:0010)           TILEMAPROJO equ		16
     147.  00:8000  (00:000F)           TILEMAPAMAR equ		15
     148.  00:8000  (00:000E)           TILEMAPVERD equ		14
     149.  00:8000                      
     150.  00:8000                      
     151.  00:8000                      ;;ETIQUETAS ESPECIFICAS PARA DAR MÁS CLARIDAD AL CODIGO (generales)
     152.  00:8000  (00:0008)           NMAXVIDREL	equ		8		;el número máximo de vidas y de reliquias es de 8
     153.  00:8000  (00:0007)           NHABNIVEL	equ		7
     154.  00:8000  (00:00F8)           MAXENERGIA  equ		248
     155.  00:8000  (00:00D9)           TILEENERG8  equ		217
     156.  00:8000  (00:00BA)           TILEENERG7  equ		186
     157.  00:8000  (00:009B)           TILEENERG6  equ		155
     158.  00:8000  (00:007C)           TILEENERG5  equ		124
     159.  00:8000  (00:005D)           TILEENERG4  equ		93
     160.  00:8000  (00:003E)           TILEENERG3  equ		62
     161.  00:8000  (00:001F)           TILEENERG2  equ		31
     162.  00:8000  (00:0000)           TILENEGRO	equ		0
     163.  00:8000                      
     164.  00:8000                      ;limites
     165.  00:8000  (00:0000)           LIMPANTIZQ  equ		0
     166.  00:8000  (00:00FF)           LIMPANTDER  equ		255
     167.  00:8000  (00:0000)           LIMPANTARR  equ		0
     168.  00:8000  (00:0080)           LIMPANTABA  equ		128
     169.  00:8000                      
     170.  00:8000                      
     171.  00:8000                      ;matriz de 7x7 empieza en 0, y fila y x col, cuento desde esquina sup izq
     172.  00:8000  (00:0006)           BASEMAPY	equ		6
     173.  00:8000  (00:0003)           BASEMAPX	equ		3
     174.  00:8000                      
     175.  00:8000                      
     176.  00:8000                      
     177.  00:8000                      ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
     178.  00:8000                      ;; CONSTANTES PARA INTERRUPCIONES
     179.  00:8000                      ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
     180.  00:8000  (00:FD9A)           H.KEYI		equ     	#FD9A
     181.  00:8000  (00:FD9F)           H.TIMI	 	equ     	#FD9F
     182.  00:8000                      
     183.  00:8000                      
     184.  00:8000                      ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
     185.  00:8000                      ;; CONSTANTES PARA SONIDO 
     186.  00:8000                      ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
     187.  00:8000                      
     188.  00:8000  (F000)              	map		#f000
     189.  00:8000                      
     190.  00:8000                      ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;PT3 REPLAYER
     191.  00:8000  (00:F000)           PT3_SETUP:		#1	;set bit0 to 1, if you want to play without looping
     192.  00:8000                      					;bit7 is set each time, when loop point is passed
     193.  00:8000  (00:F001)           PT3_MODADDR:	#2
     194.  00:8000  (00:F003)           PT3_CrPsPtr:	#2
     195.  00:8000  (00:F005)           PT3_SAMPTRS:	#2
     196.  00:8000  (00:F007)           PT3_OrnPtrs:	#2
     197.  00:8000  (00:F009)           PT3_PDSP:		#2
     198.  00:8000  (00:F00B)           PT3_CSP:		#2
     199.  00:8000  (00:F00D)           PT3_PSP:		#2
     200.  00:8000  (00:F00F)           PT3_PrNote:		#1
     201.  00:8000  (00:F010)           PT3_PrSlide:	#2
     202.  00:8000  (00:F012)           PT3_AdInPtA:	#2
     203.  00:8000  (00:F014)           PT3_AdInPtB:	#2
     204.  00:8000  (00:F016)           PT3_AdInPtC:	#2
     205.  00:8000  (00:F018)           PT3_LPosPtr:	#2
     206.  00:8000  (00:F01A)           PT3_PatsPtr:	#2
     207.  00:8000  (00:F01C)           PT3_Delay:		#1
     208.  00:8000  (00:F01D)           PT3_AddToEn:	#1
     209.  00:8000  (00:F01E)           PT3_Env_Del:	#1
     210.  00:8000  (00:F01F)           PT3_ESldAdd:	#2
     211.  00:8000  (00:F021)           PT3_NTL3:		#2	; AND A / NOP (note table creator)
     212.  00:8000                      
     213.  00:8000  (00:F023)           VARS:			#0
     214.  00:8000                      
     215.  00:8000  (00:F023)           ChanA:			#29			;CHNPRM_Size
     216.  00:8000  (00:F040)           ChanB:			#29			;CHNPRM_Size
     217.  00:8000  (00:F05D)           ChanC:			#29			;CHNPRM_Size
     218.  00:8000                      
     219.  00:8000                      ;GlobalVars
     220.  00:8000  (00:F07A)           DelyCnt:		#1
     221.  00:8000  (00:F07B)           CurESld:		#2
     222.  00:8000  (00:F07D)           CurEDel:		#1
     223.  00:8000  (00:F07E)           Ns_Base_AddToNs:	#0
     224.  00:8000  (00:F07E)           Ns_Base:		#1
     225.  00:8000  (00:F07F)           AddToNs:		#1
     226.  00:8000                      
     227.  00:8000  (00:F080)           NT_:			#192	; Puntero a/tabla de frecuencias
     228.  00:8000                      
     229.  00:8000  (00:F140)           AYREGS:			#0
     230.  00:8000  (00:F140)           VT_:			#14
     231.  00:8000  (00:F14E)           EnvBase:		#2
     232.  00:8000  (00:F150)           VAR0END:		#0
     233.  00:8000                      
     234.  00:8000  (00:F150)           T1_:			#0		
     235.  00:8000  (00:F150)           T_NEW_1:		#0
     236.  00:8000  (00:F150)           T_OLD_1:		#24
     237.  00:8000  (00:F168)           T_OLD_2:		#24
     238.  00:8000  (00:F180)           T_NEW_3:		#0
     239.  00:8000  (00:F180)           T_OLD_3:		#2
     240.  00:8000  (00:F182)           T_OLD_0:		#0
     241.  00:8000  (00:F182)           T_NEW_0:		#24
     242.  00:8000  (00:F19A)           T_NEW_2:		#166
     243.  00:8000                      ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;PT3 REPLAYER END
     244.  00:8000                      
     245.  00:8000                      ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ayFX REPLAYER 
     246.  00:8000  (00:F240)           ayFX_MODE:		#1			; ayFX mode
     247.  00:8000  (00:F241)           ayFX_BANK:		#2			; Current ayFX Bank
     248.  00:8000  (00:F243)           ayFX_PRIORITY:	#1			; Current ayFX stream priotity
     249.  00:8000  (00:F244)           ayFX_POINTER:	#2			; Pointer to the current ayFX stream
     250.  00:8000  (00:F246)           ayFX_TONE:		#2			; Current tone of the ayFX stream
     251.  00:8000  (00:F248)           ayFX_NOISE:		#1			; Current noise of the ayFX stream
     252.  00:8000  (00:F249)           ayFX_VOLUME:	#1			; Current volume of the ayFX stream
     253.  00:8000  (00:F24A)           ayFX_CHANNEL:	#1			; PSG channel to play the ayFX stream
     254.  00:8000                      
     255.  00:8000                      	;IF (AYFXRELATIVE == 1 ) 
     256.  00:8000                      ;ayFX_VT:	ds	2			; ayFX relative volume table pointer
     257.  00:8000                      	;ENDIF
     258.  00:8000                      ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ayFX REPLAYER END
     259.  00:8000                      
     260.  00:8000                      
     261.  00:8000                      
       7   00:8000                      
       8   00:8000                      ;;=====================================================
       9   00:8000                      ;;DEFINICIÓN DE CABECERA DE ARCHIVO BIN
      10   00:8000                      ;;=====================================================		
      11   00:8000                      	include "cabecerabin.asm"
       1.  00:8000                      ;;=====================================================
       2.  00:8000                      ;; FICHERO cabecera.asm
       3.  00:8000                      ;;=====================================================
       4.  00:8000                      
       5.  00:8000                      ;;CABECERA FICHERO BIN
       6.  00:8000  FE                  	DB	#FE
       7.  00:8001  00 80               	DW	START
       8.  00:8003  77 BB               	DW	END
       9.  00:8005  00 80               	DW	START
      10.  00:8007                      
      11.  00:8007                      ;;INICIO CÓDIGO PROGRAMA	
      12.  00:8007                      	ORG	#8000
      13.  00:8000                      	
      12   00:8000                      	
      13   00:8000                      START:	
      14   00:8000                      	;inicializa pantalla y entonrno
      15   00:8000  CD 22 81            	CALL	sub_preparapantalla			;screen 2,2 sin click al pulsar tecla y color 16,1,1
      16   00:8003                      	
      17   00:8003                      	;inicializa variables para parametrizar funciones y que lo que se muestre sea variable (nº vidas, mapa, puertas, pantalla, etc...)
      18   00:8003  CD 49 80            	CALL	inicializa_variables_pruebas
      19   00:8006                      	
      20   00:8006                      	;inicializa los niveles por partida
      21   00:8006  CD 6C 80            	CALL	inicializa_niveles			;no es necesario parametrizarlo según el nivel del usuario ya que se cargan todos
      22   00:8009                      	
      23   00:8009                      	;inicializa las estructuras de forma particular según ayuDa pero sin poner valores de posición
      24   00:8009  CD 64 98            	CALL	inicializa_ayudas
      25   00:800C                      	
      26   00:800C                      	;inicializa las estructuras de las antorchas y esqueletos
      27   00:800C  CD D4 84            	CALL	inicializa_antorchas
      28   00:800F  CD F6 84            	CALL	inicializa_esqueletos
      29   00:8012                      	
      30   00:8012                      	;pinta la pantalla (la primera o algunas especiales se pintan completamente)
      31   00:8012  CD 43 81            	CALL	pinta_pantalla_completa 
      32   00:8015                      	
      33   00:8015                      	;carga sprites en memoria (SE HA RETRASADO HASTA PARAMETRIZAR LA CARGA DE PANTALLAS)
      34   00:8015  CD 4B 86            	CALL 	carga_patrones_sprites_nivel
      35   00:8018                      	
      36   00:8018                      	;funciones que modificarian el marcador si se produce un evento cuando toque y cuando se pinta la pantalla ya se mira
      37   00:8018                      	;una variable para ver si el array hay que actualizarlo en pantalla o no
      38   00:8018  CD 83 82            	CALL	pinta_vidas
      39   00:801B  CD 92 82            	CALL 	pinta_reliquias
      40   00:801E  CD A1 82            	CALL	pinta_nivel
      41   00:8021  CD 21 83            	CALL	borra_mapa
      42   00:8024  CD 78 83            	CALL	pinta_puertas
      43   00:8027                      
      44   00:8027  3E 13               	LD		 A, TILEPROTAM
      45   00:8029  32 30 A7            	LD		(elemento_pintar_mapa), A
      46   00:802C  CD 02 84            	CALL	posiciona_en_mapa		;se le pasa elemento_pintar_mapa (tile del prota) está el prota y prota.posx y posy
      47   00:802F                      		
      48   00:802F  CD 02 99            	CALL	pinta_ayudas_habitacion
      49   00:8032                      	
      50   00:8032  CD 18 85            	CALL	pinta_extra_fondo
      51   00:8035                      
      52   00:8035                      	;incializacion de replayer con interrupciones
      53   00:8035                      ;	CALL	inicializa_replayer_efectos_interrupciones
      54   00:8035                      
      55   00:8035                      loop_principal:
      56   00:8035  76                  	HALT							;espera VBLANK y sincroniza
      57   00:8036                      	
      58   00:8036  CD 5C 86            	CALL	render_sprites			;actualiza array de sprites y los pinta en pantalla
      59   00:8039                      	
      60   00:8039  CD 12 83            	CALL	pinta_energia			;pinta la energia en pantalla
      61   00:803C                      	
      62   00:803C  CD 8F 85            	CALL	actualiza_elementos_fondo
      63   00:803F                      
      64   00:803F  CD 9F 86            	CALL	check_player			;MIRA EL CONTROL Y APLICA LA LOGICA DE MOVIMIENTO DEL PROTAGONISTA
      65   00:8042                      	
      66   00:8042  CD 48 80            	CALL	check_colisiones		;revisa las colisiones con puertas, ayudas y enemigos
      67   00:8045                      	
      68   00:8045  C3 35 80            	JP		loop_principal
      69   00:8048                      fin_programa_principal:
      70   00:8048                      	;RET
      71   00:8048                      
      72   00:8048                      
      73   00:8048                      
      74   00:8048                      
      75   00:8048                      check_colisiones:
      76   00:8048                      	;pantalla limpia?
      77   00:8048                      	
      78   00:8048                      	;SI 
      79   00:8048                      	;recorre puertas y sale
      80   00:8048                      	;NO 
      81   00:8048                      	;recorre ayudas
      82   00:8048                      	;recorre enemigos
      83   00:8048                      fin_check_colisiones:
      84   00:8048  C9                  	RET
      85   00:8049                      
      86   00:8049                      
      87   00:8049                      
      88   00:8049                      
      89   00:8049                      
      90   00:8049                      ;;*******************************************************************
      91   00:8049                      ; sólo para hacer pruebas y pintar la parte de las vidas y demás
      92   00:8049                      inicializa_variables_pruebas:
      93   00:8049  3E 04               	LD		 A, 4
      94   00:804B  32 0C A7            	LD		(prota_vidas),A
      95   00:804E                      
      96   00:804E  3E 04               	LD		 A, 4
      97   00:8050  32 0D A7            	LD		(prota_reliquias), A
      98   00:8053                      
      99   00:8053  3E 64               	LD		 A, 100
     100   00:8055  32 10 A7            	LD		(prota_energia), A
     101   00:8058                      
     102   00:8058                      	;ubico al prota dentro del nivel para obtener luego las habitaciones y enemigos que aparecerán
     103   00:8058                      	;será igual la posición inicial en todos los niveles
     104   00:8058                      	
     105   00:8058  3E 00               	LD		 A, 0				;los niveles (matrices) son 7 del 0 al 6
     106   00:805A  32 0B A7            	LD		(prota_nivel), A	;nivel empieza en 0 para usar las posiciones ascii
     107   00:805D                      
     108   00:805D  3E 00               	LD		 A, 0				;los subniveles (filas) son 7 del 0 al 6
     109   00:805F  32 0F A7            	LD		(prota_pos_mapy), A	;pos Y dentro del nivel (se empieza en 0)
     110   00:8062                      
     111   00:8062  3E 02               	LD		 A, 2				;columnas 7: del 0 al 6
     112   00:8064  32 0E A7            	LD		(prota_pos_mapx), A	;pos X dentro del nivel (se empieza en 0)
     113   00:8067                      	
     114   00:8067  AF                  	XOR		 A
     115   00:8068  32 00 A7            	LD		(prota.cadencia), A
     116   00:806B                      fin_inicializa_variables_pruebas:
     117   00:806B  C9                  	RET
     118   00:806C                      ;;************************************************************************
     119   00:806C                      
     120   00:806C                      
     121   00:806C                      
     122   00:806C                      
     123   00:806C                      
     124   00:806C                      
     125   00:806C                      
     126   00:806C                      
     127   00:806C                      
     128   00:806C                      ;;=====================================================
     129   00:806C                      ;;DEFINICIÓN DE SUBRUTINAS
     130   00:806C                      ;;=====================================================
     131   00:806C                      	include "subrutinas.asm"
       1.  00:806C                      ;;=====================================================
       2.  00:806C                      ;;DEFINICIÓN DE SUBRUTINAS
       3.  00:806C                      ;;=====================================================	
       4.  00:806C                      
       5.  00:806C                      
       6.  00:806C                      ;;=====================================================
       7.  00:806C                      ;;INICIALIZA_NIVELES
       8.  00:806C                      ;;=====================================================	
       9.  00:806C                      ; función: 	copia la plantilla de niveles (habitaciones_plantilla) en los niveles de trabajo para el juego (habitaciones_juego)
      10.  00:806C                      ; entrada: 	habitaciones_plantilla
      11.  00:806C                      ; salida: 	habitaciones_juego
      12.  00:806C                      ; toca: 	A, B, HL, DE
      13.  00:806C                      inicializa_niveles:
      14.  00:806C  AF                  		XOR		 A
      15.  00:806D  06 31               		LD		 B,   49				;7 filas por 7 niveles menos el primero que lo hago fuera del buble
      16.  00:806F  21 E2 A3            		LD		HL,   habitaciones_juego;tambíen puntero a la primera fila del primer nivel
      17.  00:8072  11 0E 00            		LD		DE,   14				;14 bytes de habitaciones y 2 extras
      18.  00:8075  19                  		ADD		HL,   DE				;puntero al primero de los bytes extras
      19.  00:8076  77                  		LD		(HL), A					;0000000Xb si X=0 no se ha pasado por allí y si es 1 sí
      20.  00:8077  11 10 00            		LD		DE,   16				;desde las col 15 de una fila a la siguiente
      21.  00:807A                      .bucle_borra_hab:
      22.  00:807A  19                  		ADD		HL,   DE				;situo el puntero 16 bytes siguientes
      23.  00:807B  77                  		LD		(HL), A					;pongo su contenido a 0
      24.  00:807C  10 FC               		DJNZ	.bucle_borra_hab		;repito para poner todos a 0
      25.  00:807E                      fin_iniciliza_niveles:
      26.  00:807E  C9                  		RET
      27.  00:807F                      
      28.  00:807F                      
      29.  00:807F                      ;;=====================================================
      30.  00:807F                      ;;ACTUALIZA_MARCADOR_VIDAS
      31.  00:807F                      ;;=====================================================	
      32.  00:807F                      ; función:  actualiza el buffer de vidas
      33.  00:807F                      ; entrada: 	prota_vidas
      34.  00:807F                      ; salida: 	array_aux_vidas
      35.  00:807F                      ; toca:		A,B,HL
      36.  00:807F                      actualiza_marcador_vidas:
      37.  00:807F                      	;para no andar restando pongo todos los huecos a negro y luego en otro bucle las caras
      38.  00:807F                      	;1-pinto todo en blanco
      39.  00:807F  21 11 A7            	LD		HL,array_aux_vidas
      40.  00:8082  06 08               	LD		 B,NMAXVIDREL
      41.  00:8084                      loop_marcador_caras_negro:	;asignar espacios en negro
      42.  00:8084  36 00               	LD		(HL),0			;0 posición mapa tiles para nada (es transparente pero el fondo es negro)
      43.  00:8086  23                  	INC		HL
      44.  00:8087  10 FB               	DJNZ	loop_marcador_caras_negro
      45.  00:8089                      fin_loop_marcador_caras_negro:
      46.  00:8089                      	;2-pinto las caras según el n de vidas
      47.  00:8089  3A 0C A7            	LD		 A, (prota_vidas)
      48.  00:808C  B7                  	OR		 A
      49.  00:808D  C8                  	RET 	 Z
      50.  00:808E  47                  	LD		 B, A
      51.  00:808F  21 11 A7            	LD		HL, array_aux_vidas
      52.  00:8092                      loop_marcador_caras: ;asignar caras
      53.  00:8092  36 0D               	LD		(HL), POSCARAMAP	;13 posición mapa tiles para cara
      54.  00:8094  23                  	INC		HL
      55.  00:8095  10 FB               	DJNZ	loop_marcador_caras
      56.  00:8097                      fin_loop_marcador_caras:
      57.  00:8097                      fin_actualiza_marcador_vidas:
      58.  00:8097  C9                  	RET
      59.  00:8098                      
      60.  00:8098                      
      61.  00:8098                      ;;=====================================================
      62.  00:8098                      ;;ACTUALIZA_BUFFER_RELIQUIAS
      63.  00:8098                      ;;=====================================================	
      64.  00:8098                      ; función: 	actualiza buffer de reliquias
      65.  00:8098                      ; entrada: 	prota_reliquias
      66.  00:8098                      ; salida: 	array_aux_reliquias
      67.  00:8098                      ; toca:		A,B,HL
      68.  00:8098                      actualiza_buffer_reliquias:	
      69.  00:8098                      	;para no andar restando pongo todos los huecos a negro y luego en otro bucle las reliquias
      70.  00:8098                      	;1-pinto todo en blanco
      71.  00:8098  21 19 A7            	LD		HL, array_aux_reliquias
      72.  00:809B  06 08               	LD		 B, NMAXVIDREL
      73.  00:809D  AF                  	XOR		 A
      74.  00:809E                      loop_buffer_reliquias_negro:	;asignar espacios en negro
      75.  00:809E  77                  	LD		(HL), A			;0 posición mapa tiles para nada (es transparente pero el fondo es negro)
      76.  00:809F  23                  	INC		HL
      77.  00:80A0  10 FC               	DJNZ	loop_buffer_reliquias_negro
      78.  00:80A2                      
      79.  00:80A2                      	;2-pinto las cruces según el n de reliquias
      80.  00:80A2  21 19 A7            	LD		HL, array_aux_reliquias
      81.  00:80A5  3A 0D A7            	LD		 A, (prota_reliquias)
      82.  00:80A8  B7                  	OR		 A
      83.  00:80A9  C8                  	RET		 Z
      84.  00:80AA  47                  	LD		 B, A
      85.  00:80AB                      loop_buffer_reliquias: ;asignar reliquias
      86.  00:80AB  36 11               	LD		(HL), POSRELIMAP	;17 posición mapa tiles para reliquia
      87.  00:80AD  23                  	INC		HL
      88.  00:80AE  10 FB               	DJNZ	loop_buffer_reliquias
      89.  00:80B0                      fin_actualiza_buffer_reliquias:
      90.  00:80B0  C9                  	RET
      91.  00:80B1                      
      92.  00:80B1                      
      93.  00:80B1                      
      94.  00:80B1                      ;;=====================================================
      95.  00:80B1                      ;;LOCALIZA_INFO_HABITACION
      96.  00:80B1                      ;;=====================================================	
      97.  00:80B1                      ; función: 	busca las puertas que hay que pintar egún la posición del usuario y las pone en habitacion_actual
      98.  00:80B1                      ; entrada: 	prota.pos_mapy, prota.pos_mapx, prota_nivel habitaciones_juego
      99.  00:80B1                      ; salida: 	habitacion_actual
     100.  00:80B1                      ; toca:		todo
     101.  00:80B1                      ;ejemplo: nivel 4, posy 5 y posx 3
     102.  00:80B1                      ;3 + 5 x 8 + 4 x 49
     103.  00:80B1                      localiza_info_habitacion:
     104.  00:80B1                      ;primera posición: me coloco en la columna correcta
     105.  00:80B1  21 E2 A3            	LD		HL, habitaciones_juego
     106.  00:80B4                      .situo_columna:	
     107.  00:80B4  3A 0E A7            	LD		 A, (prota_pos_mapx)
     108.  00:80B7  CB 27               	SLA		 A				;multiplico por dos ya que cada habitación va de dos en dos bytes
     109.  00:80B9  06 00               	LD		 B, 0
     110.  00:80BB  4F                  	LD		 C, A
     111.  00:80BC  09                  	ADD 	HL, BC			;sumo a la posición 0 la columnax2 en la que situarme
     112.  00:80BD                      	
     113.  00:80BD                      .situo_fila:
     114.  00:80BD  3A 0F A7            	LD		A, (prota_pos_mapy)
     115.  00:80C0  B7                  	OR	 	A
     116.  00:80C1  CA CE 80            	JP		Z, .situo_nivel	;si la fila es 0 no es necesario seguir operando en fila
     117.  00:80C4                      	
     118.  00:80C4  47                  	LD		B, A
     119.  00:80C5  AF                  	XOR		A
     120.  00:80C6                      .loop_suma_fila:
     121.  00:80C6  C6 10               	ADD		16				;cada fila tiene 16 bytes
     122.  00:80C8  10 FC               	DJNZ	.loop_suma_fila
     123.  00:80CA                      	
     124.  00:80CA  06 00               	LD		 B, 0
     125.  00:80CC  4F                  	LD		 C, A
     126.  00:80CD                      
     127.  00:80CD  09                  	ADD 	HL, BC			;sumo a la columna 16 x filas para situarme en la fila correcta
     128.  00:80CE                      
     129.  00:80CE                      .situo_nivel:
     130.  00:80CE  3A 0B A7            	LD		 A, (prota_nivel)
     131.  00:80D1  B7                  	OR	 	 A
     132.  00:80D2  CA E2 80            	JP		 Z, .actualiza_variable_habitacion	;si el nivel es 0 al pasar por las anterirores ya estoy situado actualizo la variable y termino
     133.  00:80D5                      	
     134.  00:80D5  E5                  	PUSH	HL				;guardo el resultado intermedio
     135.  00:80D6                      	
     136.  00:80D6  47                  	LD		 B, A			;preparo la varible del bucle
     137.  00:80D7  11 70 00            	LD		DE, 112			;112 = 16x42 son los bytes de cada matriz-nivel
     138.  00:80DA  21 00 00            	LD		HL, 0
     139.  00:80DD                      .loop_suma_nivel:
     140.  00:80DD  19                  	ADD		HL, DE
     141.  00:80DE  10 FD               	DJNZ	.loop_suma_nivel
     142.  00:80E0                      	
     143.  00:80E0  D1                  	POP		DE				;devuelvo el resultado intermedio en DE que ya no lo necesito
     144.  00:80E1                      	
     145.  00:80E1  19                  	ADD		HL, DE			;sumo el resultado del nivel al resultado intermedio anterior
     146.  00:80E2                      	
     147.  00:80E2                      .actualiza_variable_habitacion
     148.  00:80E2                      	;actualizo la variable habitacion_actual
     149.  00:80E2  7E                  	LD		 A, (HL)
     150.  00:80E3  32 DF A3            	LD		(habitacion_actual), A
     151.  00:80E6                      	
     152.  00:80E6                      	;actualizo la variable habitacion_extras
     153.  00:80E6  23                  	INC		HL				;el byte de los extras está antes de donde se especifican las puertas
     154.  00:80E7  7E                  	LD		 A, (HL)
     155.  00:80E8  32 E0 A3            	LD		(habitacion_extras), A
     156.  00:80EB                      	
     157.  00:80EB                      	;guardo puntero a habitacion_actual
     158.  00:80EB  2B                  	DEC		HL
     159.  00:80EC  E5                  	PUSH	HL
     160.  00:80ED                      	
     161.  00:80ED                      	;actualizo la variable habitacion_recorrida
     162.  00:80ED  3A 0E A7            	LD		 A, (prota_pos_mapx)
     163.  00:80F0  87                  	ADD		 A	;************ doblo SRL
     164.  00:80F1                      	
     165.  00:80F1                      	
     166.  00:80F1  47                  	LD		 B, A
     167.  00:80F2  3E 0F               	LD		 A, 15
     168.  00:80F4  90                  	SUB		 B
     169.  00:80F5  47                  	LD		 B, A
     170.  00:80F6                      	
     171.  00:80F6                      	;en B tengo cuanto bytes tengo que incrementar el puntero HL para llegar al byte 15 de la fila del array
     172.  00:80F6  E1                  	POP		HL	;recupero HL
     173.  00:80F7                      	;LD		 A, 10
     174.  00:80F7                      	;CALL	suma_A_HL
     175.  00:80F7  23                  	INC		HL
     176.  00:80F8  23                  	INC		HL
     177.  00:80F9  23                  	INC		HL
     178.  00:80FA  23                  	INC		HL
     179.  00:80FB  23                  	INC		HL
     180.  00:80FC  23                  	INC		HL
     181.  00:80FD  23                  	INC		HL
     182.  00:80FE  23                  	INC		HL
     183.  00:80FF  23                  	INC		HL
     184.  00:8100                      	
     185.  00:8100                      
     186.  00:8100                      ;~ .siguiente_HL
     187.  00:8100                      	;~ INC		HL
     188.  00:8100                      	;~ DJNZ	.siguiente_HL
     189.  00:8100                      	
     190.  00:8100                      		
     191.  00:8100  7E                  	LD		 A, (HL)
     192.  00:8101  32 E1 A3            	LD		(habitacion_recorrida), A
     193.  00:8104                      	
     194.  00:8104                      	
     195.  00:8104                      	
     196.  00:8104                      fin_localiza_info_habitacion:
     197.  00:8104  C9                  	RET
     198.  00:8105                      
     199.  00:8105                      
     200.  00:8105                      	
     201.  00:8105                      	
     202.  00:8105                      	
     203.  00:8105                      	
     204.  00:8105                      	
     132   00:8105                      	
     133   00:8105                      	include "subr_general.asm"
       1.  00:8105                      ;;=====================================================
       2.  00:8105                      ;;DEFINICIÓN DE SUBRUTINAS GENERALES USABLES PARA CUALQUIER PROYECTO
       3.  00:8105                      ;;=====================================================	
       4.  00:8105                      
       5.  00:8105                      ;;=====================================================
       6.  00:8105                      ;;SUMA_A_BC
       7.  00:8105                      ;;=====================================================	
       8.  00:8105                      ; función: 	suma A a BC por si da más de 255
       9.  00:8105                      ; entrada: 	A, BC
      10.  00:8105                      ; salida: 	A + BC
      11.  00:8105                      ; toca:		A, BC
      12.  00:8105                      suma_A_BC:
      13.  00:8105  81                  	ADD		 C
      14.  00:8106  4F                  	LD		 C, A
      15.  00:8107  88                  	ADC		 B
      16.  00:8108  91                  	SUB		 C
      17.  00:8109  47                  	LD		 B, A
      18.  00:810A                      fin_suma_A_BC:
      19.  00:810A  C9                  	RET
      20.  00:810B                      	
      21.  00:810B                      ;;=====================================================
      22.  00:810B                      ;;SUMA_A_HL
      23.  00:810B                      ;;=====================================================	
      24.  00:810B                      ; función: 	suma A a BC por si da más de 255
      25.  00:810B                      ; entrada: 	A, HL
      26.  00:810B                      ; salida: 	A + HL
      27.  00:810B                      ; toca:		A, HL
      28.  00:810B                      suma_A_HL:
      29.  00:810B  85                  	ADD		 L
      30.  00:810C  6F                  	LD		 L, A
      31.  00:810D  8C                  	ADC		 H
      32.  00:810E  95                  	SUB		 L
      33.  00:810F  67                  	LD		 H, A
      34.  00:8110                      fin_suma_A_HL:
      35.  00:8110  C9                  	RET
     134   00:8111                      	
     135   00:8111                      	include "subr_pintapantalla.asm"
       1.  00:8111                      ;;=====================================================
       2.  00:8111                      ;;DEFINICIÓN DE SUBRUTINAS
       3.  00:8111                      ;;=====================================================	
       4.  00:8111                      ;relacionadas con pintado en pantalla (y no sprites)
       5.  00:8111                      
       6.  00:8111                      
       7.  00:8111                      ;;=====================================================
       8.  00:8111                      ;;COLOR_PANTALLA
       9.  00:8111                      ;;=====================================================	
      10.  00:8111                      ; función: 	el equivalente en basic a color 15,1,1
      11.  00:8111                      ; entrada: 	HL	que apunta a un array de bytes con 3 bytes FORCLR, BAKCLR y BDRCLR
      12.  00:8111                      ; salida: 	-
      13.  00:8111                      ; toca: 	todo
      14.  00:8111                      color_pantalla:
      15.  00:8111  7E                  	LD		 A, (HL)			;FORCLR 
      16.  00:8112  32 E9 F3            	LD 		(FORCLR),A
      17.  00:8115  23                  	INC		HL
      18.  00:8116                      	
      19.  00:8116  7E                  	LD		 A, (HL)			;BAKCLR
      20.  00:8117  32 EA F3            	LD 		(BAKCLR),A
      21.  00:811A  23                  	INC		HL
      22.  00:811B                      	
      23.  00:811B  7E                  	LD		 A, (HL)
      24.  00:811C  32 EB F3            	LD 		(BDRCLR),A			;BDRCLR
      25.  00:811F  C3 62 00            	JP		CHGCLR 
      26.  00:8122                      fin_color_pantalla:
      27.  00:8122                      
      28.  00:8122                      
      29.  00:8122                      ;;=====================================================
      30.  00:8122                      ;;PREPARAPANTALLA
      31.  00:8122                      ;;=====================================================	
      32.  00:8122                      ; función: elimina clic cuando se pulsa tecla, cls, screen 2,2
      33.  00:8122                      ; entrada: -
      34.  00:8122                      ; salida: -
      35.  00:8122                      ; toca: si no son todos los regristros, casi todos
      36.  00:8122                      sub_preparapantalla:
      37.  00:8122                      	;toca A y Z
      38.  00:8122                      elimina_clic;
      39.  00:8122  AF                  	XOR		 A
      40.  00:8123  32 DB F3            	LD		(CLIKSW),A
      41.  00:8126                      fin_elimina_clic:
      42.  00:8126                      
      43.  00:8126                      	;toca A
      44.  00:8126                      limpia_pantalla:
      45.  00:8126  AF                  	XOR		 A
      46.  00:8127  CD C3 00            	CALL 	CLS
      47.  00:812A                      fin_limpia_pantalla:
      48.  00:812A                      
      49.  00:812A                      	;toca A y direcciones #F3E9/#F3EA/#F3EB, poner en HL array con 3 valores
      50.  00:812A  21 F2 A6            	LD		HL, color_base
      51.  00:812D  CD 11 81            	CALL	color_pantalla
      52.  00:8130                      	
      53.  00:8130                      	;cambiamos a SCREEN 2,2 del BASIC
      54.  00:8130                      	;toca A
      55.  00:8130                      screen2:
      56.  00:8130  3E 02               	LD		 A, 2
      57.  00:8132  CD 5F 00            	CALL	CHGMOD			;selecciona screen 2
      58.  00:8135                      sprites_16_16:
      59.  00:8135  3A E0 F3            	LD		 A, (RG1SAV)
      60.  00:8138  F6 02               	OR		00000010b		;fuerza sprites de 16x16
      61.  00:813A  32 E0 F3            	LD		(RG1SAV), A		;no lo guardamos en la copia de variables del sistema
      62.  00:813D  47                  	LD		 B, A
      63.  00:813E  0E 01               	LD		 C, 1
      64.  00:8140  C3 47 00            	JP		WRTVDP			;opción alternativa de escribir las tres lineas siguientes
      65.  00:8143                      fin_sub_preparapantalla:
      66.  00:8143                      	
      67.  00:8143                      
      68.  00:8143                      ;;=====================================================
      69.  00:8143                      ;;PINTA_PANTALLA_COMPLETA
      70.  00:8143                      ;;=====================================================	
      71.  00:8143                      ; función: pinta el escenario, las 3 partes
      72.  00:8143                      ; entrada: -
      73.  00:8143                      ; salida: -
      74.  00:8143                      ; toca: si no son todos los regristros, casi todos
      75.  00:8143                      pinta_pantalla_completa:
      76.  00:8143  CD 4A 81            	CALL 	pinta_parte_superior_pantalla
      77.  00:8146                      	
      78.  00:8146  CD 68 82            	CALL 	pinta_parte_inferior_pantalla	
      79.  00:8149                      fin_pinta_pantalla_completa:
      80.  00:8149  C9                  	RET
      81.  00:814A                      
      82.  00:814A                      
      83.  00:814A                      ;;=====================================================
      84.  00:814A                      ;;PINTA_PARTE_SUPERIOR_PANTALLA
      85.  00:814A                      ;;=====================================================	
      86.  00:814A                      ; función: pinta el escenario, los dos bancos superiores
      87.  00:814A                      ; entrada: -
      88.  00:814A                      ; salida: -
      89.  00:814A                      ; toca: si no son todos los regristros, casi todos
      90.  00:814A                      pinta_parte_superior_pantalla:
      91.  00:814A  3A 0B A7            	LD		 A, (prota_nivel)
      92.  00:814D  CA 7B 81            	JP		 Z, .carga_nivel_0
      93.  00:8150  3D                  	DEC		 A
      94.  00:8151  3A 0B A7            	LD		 A, (prota_nivel)
      95.  00:8154  CA 96 81            	JP		 Z, .carga_nivel_1
      96.  00:8157  3D                  	DEC		 A
      97.  00:8158  3A 0B A7            	LD		 A, (prota_nivel)
      98.  00:815B  CA B1 81            	JP		 Z, .carga_nivel_2
      99.  00:815E  3D                  	DEC		 A
     100.  00:815F  3A 0B A7            	LD		 A, (prota_nivel)
     101.  00:8162  CA CC 81            	JP		 Z, .carga_nivel_3
     102.  00:8165  3D                  	DEC		 A
     103.  00:8166  3A 0B A7            	LD		 A, (prota_nivel)
     104.  00:8169  CA E7 81            	JP		 Z, .carga_nivel_4
     105.  00:816C  3D                  	DEC		 A
     106.  00:816D  3A 0B A7            	LD		 A, (prota_nivel)
     107.  00:8170  CA 02 82            	JP		 Z, .carga_nivel_5
     108.  00:8173  3D                  	DEC		 A
     109.  00:8174  3A 0B A7            	LD		 A, (prota_nivel)
     110.  00:8177  CA 1D 82            	JP		 Z, .carga_nivel_6
     111.  00:817A  3D                  	DEC		 A
     112.  00:817B                      	
     113.  00:817B                      .carga_nivel_0:
     114.  00:817B  21 B3 A9            	LD		HL, tiles_patrones_nivel0
     115.  00:817E  22 62 82            	LD		(tiles_patrones), HL
     116.  00:8181  21 D0 AB            	LD		HL, tiles_color_nivel0
     117.  00:8184  22 64 82            	LD		(tiles_colores), HL
     118.  00:8187  21 B3 A9            	LD		HL, tiles_patrones_nivel0
     119.  00:818A  22 62 82            	LD		(tiles_patrones), HL
     120.  00:818D  21 39 AC            	LD		HL, tiles_mapa_nivel0
     121.  00:8190  22 66 82            	LD		(tiles_mapa), HL
     122.  00:8193  C3 35 82            	JP		.fin_carga_niveles
     123.  00:8196                      
     124.  00:8196                      .carga_nivel_1:
     125.  00:8196  21 6E AC            	LD		HL, tiles_patrones_nivel1
     126.  00:8199  22 62 82            	LD		(tiles_patrones), HL
     127.  00:819C  21 23 AE            	LD		HL, tiles_color_nivel1
     128.  00:819F  22 64 82            	LD		(tiles_colores), HL
     129.  00:81A2  21 6E AC            	LD		HL, tiles_patrones_nivel1
     130.  00:81A5  22 62 82            	LD		(tiles_patrones), HL
     131.  00:81A8  21 6A AE            	LD		HL, tiles_mapa_nivel1
     132.  00:81AB  22 66 82            	LD		(tiles_mapa), HL
     133.  00:81AE  C3 35 82            	JP		.fin_carga_niveles
     134.  00:81B1                      	
     135.  00:81B1                      .carga_nivel_2:
     136.  00:81B1  21 9F AE            	LD		HL, tiles_patrones_nivel2
     137.  00:81B4  22 62 82            	LD		(tiles_patrones), HL
     138.  00:81B7  21 54 B0            	LD		HL, tiles_color_nivel2
     139.  00:81BA  22 64 82            	LD		(tiles_colores), HL
     140.  00:81BD  21 9F AE            	LD		HL, tiles_patrones_nivel2
     141.  00:81C0  22 62 82            	LD		(tiles_patrones), HL
     142.  00:81C3  21 9B B0            	LD		HL, tiles_mapa_nivel2
     143.  00:81C6  22 66 82            	LD		(tiles_mapa), HL
     144.  00:81C9  C3 35 82            	JP		.fin_carga_niveles
     145.  00:81CC                      	
     146.  00:81CC                      .carga_nivel_3:
     147.  00:81CC  21 D0 B0            	LD		HL, tiles_patrones_nivel3
     148.  00:81CF  22 62 82            	LD		(tiles_patrones), HL
     149.  00:81D2  21 85 B2            	LD		HL, tiles_color_nivel3
     150.  00:81D5  22 64 82            	LD		(tiles_colores), HL
     151.  00:81D8  21 D0 B0            	LD		HL, tiles_patrones_nivel3
     152.  00:81DB  22 62 82            	LD		(tiles_patrones), HL
     153.  00:81DE  21 CC B2            	LD		HL, tiles_mapa_nivel3
     154.  00:81E1  22 66 82            	LD		(tiles_mapa), HL
     155.  00:81E4  C3 35 82            	JP		.fin_carga_niveles
     156.  00:81E7                      	
     157.  00:81E7                      .carga_nivel_4:
     158.  00:81E7  21 01 B3            	LD		HL, tiles_patrones_nivel4
     159.  00:81EA  22 62 82            	LD		(tiles_patrones), HL
     160.  00:81ED  21 B6 B4            	LD		HL, tiles_color_nivel4
     161.  00:81F0  22 64 82            	LD		(tiles_colores), HL
     162.  00:81F3  21 01 B3            	LD		HL, tiles_patrones_nivel4
     163.  00:81F6  22 62 82            	LD		(tiles_patrones), HL
     164.  00:81F9  21 FD B4            	LD		HL, tiles_mapa_nivel4
     165.  00:81FC  22 66 82            	LD		(tiles_mapa), HL
     166.  00:81FF  C3 35 82            	JP		.fin_carga_niveles
     167.  00:8202                      	
     168.  00:8202                      .carga_nivel_5:
     169.  00:8202  21 32 B5            	LD		HL, tiles_patrones_nivel5
     170.  00:8205  22 62 82            	LD		(tiles_patrones), HL
     171.  00:8208  21 E7 B6            	LD		HL, tiles_color_nivel5
     172.  00:820B  22 64 82            	LD		(tiles_colores), HL
     173.  00:820E  21 32 B5            	LD		HL, tiles_patrones_nivel5
     174.  00:8211  22 62 82            	LD		(tiles_patrones), HL
     175.  00:8214  21 2E B7            	LD		HL, tiles_mapa_nivel5
     176.  00:8217  22 66 82            	LD		(tiles_mapa), HL
     177.  00:821A  C3 35 82            	JP		.fin_carga_niveles
     178.  00:821D                      	
     179.  00:821D                      .carga_nivel_6:
     180.  00:821D  21 63 B7            	LD		HL, tiles_patrones_nivel6
     181.  00:8220  22 62 82            	LD		(tiles_patrones), HL
     182.  00:8223  21 18 B9            	LD		HL, tiles_color_nivel6
     183.  00:8226  22 64 82            	LD		(tiles_colores), HL
     184.  00:8229  21 63 B7            	LD		HL, tiles_patrones_nivel6
     185.  00:822C  22 62 82            	LD		(tiles_patrones), HL
     186.  00:822F  21 5F B9            	LD		HL, tiles_mapa_nivel6
     187.  00:8232  22 66 82            	LD		(tiles_mapa), HL
     188.  00:8235                      ;	JP		.fin_carga niveles			;no necesario
     189.  00:8235                      .fin_carga_niveles:
     190.  00:8235                      
     191.  00:8235                      	;cargando banco 1
     192.  00:8235                      	;cargamos los patrones
     193.  00:8235  2A 62 82            	LD		HL, (tiles_patrones)
     194.  00:8238  11 00 00            	LD		DE, CHRTBL
     195.  00:823B  CD 7F 99            	CALL	depack_VRAM
     196.  00:823E                      	;cargamos los colores de los patrones
     197.  00:823E  2A 64 82            	LD		HL, (tiles_colores)
     198.  00:8241  11 00 20            	LD		DE, CLRTBL
     199.  00:8244  CD 7F 99            	CALL	depack_VRAM
     200.  00:8247                      	
     201.  00:8247                      	;cargando banco 2
     202.  00:8247                      	;cargamos los patrones
     203.  00:8247  2A 62 82            	LD		HL, (tiles_patrones)
     204.  00:824A  11 00 08            	LD		DE, CHRTBL + #0800
     205.  00:824D  CD 7F 99            	CALL	depack_VRAM	
     206.  00:8250                      	;cargamos los colores de los patrones
     207.  00:8250  2A 64 82            	LD		HL, (tiles_colores)
     208.  00:8253  11 00 28            	LD		DE, CLRTBL + #0800
     209.  00:8256  CD 7F 99            	CALL	depack_VRAM
     210.  00:8259                      	
     211.  00:8259                      	;cargamos mapa de pantalla banco 1 y 2
     212.  00:8259  2A 66 82            	LD		HL, (tiles_mapa)
     213.  00:825C  11 00 18            	LD		DE, TILMAP
     214.  00:825F  C3 7F 99            	JP		depack_VRAM
     215.  00:8262                      fin_pinta_parte_superior_pantalla:
     216.  00:8262  00 00               tiles_patrones:		DW	0
     217.  00:8264  00 00               tiles_colores:		DW	0
     218.  00:8266  00 00               tiles_mapa:			DW	0
     219.  00:8268                      
     220.  00:8268                      
     221.  00:8268                      ;;=====================================================
     222.  00:8268                      ;;PINTA_PARTE_INFERIOR_PANTALLA
     223.  00:8268                      ;;=====================================================	
     224.  00:8268                      ; función: pinta la parte inferior del escenario que es común
     225.  00:8268                      ; entrada: -
     226.  00:8268                      ; salida: -
     227.  00:8268                      ; toca: si no son todos los regristros, casi todos
     228.  00:8268                      pinta_parte_inferior_pantalla:
     229.  00:8268                      	;cangando banco 3
     230.  00:8268                      	;cargamos los patrones
     231.  00:8268  21 94 B9            	LD		HL,tiles_patrones_marcador
     232.  00:826B  11 00 10            	LD		DE,CHRTBL + #1000
     233.  00:826E  CD 7F 99            	CALL	depack_VRAM	
     234.  00:8271                      	;cargamos mapa de pantalla
     235.  00:8271  21 15 BB            	LD		HL,tiles_mapa_marcador
     236.  00:8274  11 00 1A            	LD		DE,TILMAP + #0200
     237.  00:8277  CD 7F 99            	CALL	depack_VRAM
     238.  00:827A                      	;cargamos los colores de los patrones
     239.  00:827A  21 E0 BA            	LD		HL,tiles_color_marcador
     240.  00:827D  11 00 30            	LD		DE,CLRTBL + #1000
     241.  00:8280  C3 7F 99            	JP		depack_VRAM
     242.  00:8283                      fin_pinta_parte_inferior_pantalla:
     243.  00:8283                      
     244.  00:8283                      
     245.  00:8283                      
     246.  00:8283                      ;;=====================================================
     247.  00:8283                      ;;PINTA_VIDAS
     248.  00:8283                      ;;=====================================================	
     249.  00:8283                      ; función: 	actualiza el mapa de tiles para que en el próximo refresco se pinten y actualiza_vidas
     250.  00:8283                      ; entrada: 	array_aux_vidas
     251.  00:8283                      ; salida: 	actualiza_vidas_sn
     252.  00:8283                      ; toca:		todo
     253.  00:8283                      pinta_vidas:
     254.  00:8283  CD 7F 80            	CALL	actualiza_marcador_vidas
     255.  00:8286                      	
     256.  00:8286  21 11 A7            	LD		HL, array_aux_vidas
     257.  00:8289  11 48 1A            	LD		DE, TILMAP + POSVIDAS 	;inicio posición en el mapa de tiles de las vidas
     258.  00:828C  01 08 00            	LD		BC, NMAXVIDREL			;hay 8 posiciones para vidas/reliquias o espacios en negro si no tiene 8 vidas/reliquias
     259.  00:828F  C3 5C 00            	JP		LDIRVM
     260.  00:8292                      fin_pinta_vidas:
     261.  00:8292                      	
     262.  00:8292                      	
     263.  00:8292                      
     264.  00:8292                      ;;=====================================================
     265.  00:8292                      ;;PINTA_RELIQUIAS
     266.  00:8292                      ;;=====================================================	
     267.  00:8292                      ; función: 	actualiza el mapa de tiles para que en el próximo refresco se pinten y actualiza_reliquias
     268.  00:8292                      ; entrada: 	array_aux_reliquias
     269.  00:8292                      ; salida: 	-
     270.  00:8292                      ; toca:		todo
     271.  00:8292                      pinta_reliquias:
     272.  00:8292  CD 98 80            	CALL	actualiza_buffer_reliquias
     273.  00:8295                      	
     274.  00:8295  21 19 A7            	LD		HL, array_aux_reliquias
     275.  00:8298  11 C8 1A            	LD		DE, TILMAP + POSRELIQ 	;inicio posición en el mapa de tiles de las vidas
     276.  00:829B  01 08 00            	LD		BC, NMAXVIDREL			;hay 8 posiciones para vidas/reliquias o espacios en negro si no tiene 8 vidas/reliquias
     277.  00:829E  C3 5C 00            	JP		LDIRVM
     278.  00:82A1                      fin_pinta_reliquias:
     279.  00:82A1                      	
     280.  00:82A1                      
     281.  00:82A1                      
     282.  00:82A1                      	
     283.  00:82A1                      ;;=====================================================
     284.  00:82A1                      ;;PINTA_NIVEL
     285.  00:82A1                      ;;=====================================================	
     286.  00:82A1                      ; función: 	actualiza el nivel en la parte de puntuación
     287.  00:82A1                      ; entrada: 	prota_nivel
     288.  00:82A1                      ; salida: 	-
     289.  00:82A1                      ; toca:		HL,DE,BC
     290.  00:82A1                      pinta_nivel:	
     291.  00:82A1                      	;forma más avanzada sin llamada a la bios
     292.  00:82A1  01 B4 1A            	LD		BC,TILMAP + POSNIVEL ;posición en el mapa de tiles del tile de nivel
     293.  00:82A4  3A 0B A7            	LD		 A, (prota_nivel)	;seleccionando la pos del banco de tiles a poner en el mapa
     294.  00:82A7  C6 30               	ADD		'0'	
     295.  00:82A9  57                  	LD		 D, A
     296.  00:82AA                      	
     297.  00:82AA  C3 AD 82            	JP		pinta_tile_suelto
     298.  00:82AD                      fin_pinta_nivel:
     299.  00:82AD                      
     300.  00:82AD                      
     301.  00:82AD                      
     302.  00:82AD                      ;;=====================================================
     303.  00:82AD                      ;;PINTA_TILE_SUELTO
     304.  00:82AD                      ;;=====================================================	
     305.  00:82AD                      ; función: 	pinta al tile que digamos en D, en la posición BC
     306.  00:82AD                      ; entrada: 	BC (posición a pintar en el mapa),D (qué se va a pintar el esa posición)
     307.  00:82AD                      ; salida: 	-
     308.  00:82AD                      ; toca:		-
     309.  00:82AD                      pinta_tile_suelto:
     310.  00:82AD  DB 99               	IN		 A,(REGEST)		;leer registro de estado (recomendado)
     311.  00:82AF  79                  	LD		 A,C			;primero byte bajo	
     312.  00:82B0  D3 99               	OUT		(REGEST),A
     313.  00:82B2  78                  	LD		 A,B			;después byte alto  ********************** preguntar a Fernando cómo que byte bajo es B
     314.  00:82B3  F6 40               	OR		1000000b		;+64
     315.  00:82B5  D3 99               	OUT		(REGEST),A
     316.  00:82B7                      	
     317.  00:82B7  7A                  	LD		A,D
     318.  00:82B8  D3 98               	OUT		(REGESCVDP),A	;escribe A en VRAM en la posición indicada por los dos OUT anteriores
     319.  00:82BA                      fin_pinta_tile_suelto:
     320.  00:82BA  C9                  	RET
     321.  00:82BB                      
     322.  00:82BB                      
     323.  00:82BB                      
     324.  00:82BB                      
     325.  00:82BB                      
     326.  00:82BB                      ;;=====================================================
     327.  00:82BB                      ;;MIRA_PINTA ENERGIA
     328.  00:82BB                      ;;=====================================================	
     329.  00:82BB                      ; función: 	actualiza el nivel de energia en la parte de puntuación
     330.  00:82BB                      ; nota:		el cuadrado más bajo de ejergía siempre estará pintado... se obviará
     331.  00:82BB                      ; entrada: 	prota.energia, array_aux_energia
     332.  00:82BB                      ; salida: 	-
     333.  00:82BB                      ; toca:		ninguno porque usa EXX
     334.  00:82BB                      
     335.  00:82BB                      ; nota importante... lo mismo interesa hacer esto con un array para comparar y un bucle
     336.  00:82BB                      
     337.  00:82BB                      mira_pinta_energia:
     338.  00:82BB  D9                  	EXX							;por si acaso guardo el contenido de HL (si veo que no es necesario guardarlo lo quito) uso esto en vez de push por el nº ciclos
     339.  00:82BC                      	
     340.  00:82BC  3A 10 A7            	LD		 A,(prota_energia) 	;para las comparaciones A variable (actual) y B fijo (limites)
     341.  00:82BF                      
     342.  00:82BF  0E 00               	LD		 C,TILENEGRO		;para agilizar asignaciones en vez de un valor cte uso otro registro
     343.  00:82C1                      pinta_ener:
     344.  00:82C1                      pinta_ener_tile_8:
     345.  00:82C1  21 28 A7            	LD		HL,ultimo_pos_array_aux_energia	;coloco puntero en array e iré decrementando
     346.  00:82C4  06 D9               	LD		 B,TILEENERG8
     347.  00:82C6  B8                  	CP		 B
     348.  00:82C7  38 04               	JR		C,pinta_ener_tile_8_negro
     349.  00:82C9  36 0E               	LD		(HL),TILEMAPVERD
     350.  00:82CB  18 01               	JR		pinta_ener_tile_7
     351.  00:82CD                      pinta_ener_tile_8_negro:
     352.  00:82CD  71                  	LD		(HL),C
     353.  00:82CE                      
     354.  00:82CE                      pinta_ener_tile_7:
     355.  00:82CE  2B                  	DEC		HL
     356.  00:82CF  06 BA               	LD		 B,TILEENERG7
     357.  00:82D1  B8                  	CP		 B
     358.  00:82D2  38 04               	JR		C,pinta_ener_tile_7_negro
     359.  00:82D4  36 0E               	LD		(HL),TILEMAPVERD
     360.  00:82D6  18 01               	JR		pinta_ener_tile_6
     361.  00:82D8                      pinta_ener_tile_7_negro:
     362.  00:82D8  71                  	LD		(HL),C
     363.  00:82D9                      
     364.  00:82D9                      pinta_ener_tile_6:
     365.  00:82D9  2B                  	DEC		HL
     366.  00:82DA  06 9B               	LD		 B,TILEENERG6
     367.  00:82DC  B8                  	CP		 B
     368.  00:82DD  38 04               	JR		C,pinta_ener_tile_6_negro
     369.  00:82DF  36 0E               	LD		(HL),14
     370.  00:82E1  18 01               	JR		pinta_ener_tile_5
     371.  00:82E3                      pinta_ener_tile_6_negro:
     372.  00:82E3  71                  	LD		(HL),C
     373.  00:82E4                      
     374.  00:82E4                      pinta_ener_tile_5:
     375.  00:82E4  2B                  	DEC		HL
     376.  00:82E5  06 7C               	LD		 B,TILEENERG5
     377.  00:82E7  B8                  	CP		 B
     378.  00:82E8  38 04               	JR		C,pinta_ener_tile_5_negro
     379.  00:82EA  36 0E               	LD		(HL),TILEMAPVERD
     380.  00:82EC  18 01               	JR		pinta_ener_tile_4
     381.  00:82EE                      pinta_ener_tile_5_negro:
     382.  00:82EE  71                  	LD		(HL),C
     383.  00:82EF                      
     384.  00:82EF                      pinta_ener_tile_4:
     385.  00:82EF  2B                  	DEC		HL
     386.  00:82F0  06 5D               	LD		 B,TILEENERG4
     387.  00:82F2  B8                  	CP		 B
     388.  00:82F3  38 04               	JR		C,pinta_ener_tile_4_negro
     389.  00:82F5  36 0F               	LD		(HL),TILEMAPAMAR
     390.  00:82F7  18 01               	JR		pinta_ener_tile_3
     391.  00:82F9                      pinta_ener_tile_4_negro:
     392.  00:82F9  71                  	LD		(HL),C
     393.  00:82FA                      	
     394.  00:82FA                      pinta_ener_tile_3:
     395.  00:82FA  2B                  	DEC		HL
     396.  00:82FB  06 3E               	LD		 B,TILEENERG3
     397.  00:82FD  B8                  	CP		 B
     398.  00:82FE  38 04               	JR		C,pinta_ener_tile_3_negro
     399.  00:8300  36 0F               	LD		(HL),TILEMAPAMAR
     400.  00:8302  18 01               	JR		pinta_ener_tile_2
     401.  00:8304                      pinta_ener_tile_3_negro:
     402.  00:8304  71                  	LD		(HL),C
     403.  00:8305                      
     404.  00:8305                      pinta_ener_tile_2:
     405.  00:8305  2B                  	DEC		HL
     406.  00:8306  06 1F               	LD		 B,TILEENERG2
     407.  00:8308  B8                  	CP		 B
     408.  00:8309  38 04               	JR		C,pinta_ener_tile_2_negro
     409.  00:830B  36 10               	LD		(HL),TILEMAPROJO
     410.  00:830D  18 01               	JR		fin_mira_pinta_energia		;siempre estará pintado el cuadro mínimo
     411.  00:830F                      pinta_ener_tile_2_negro:
     412.  00:830F  71                  	LD		(HL),C
     413.  00:8310                      
     414.  00:8310                      fin_mira_pinta_energia:
     415.  00:8310  D9                  	EXX
     416.  00:8311  C9                  	RET
     417.  00:8312                      
     418.  00:8312                      
     419.  00:8312                      ;;=====================================================
     420.  00:8312                      ;;PINTA_ENERGIA
     421.  00:8312                      ;;=====================================================	
     422.  00:8312                      ; función: 	actualiza el mapa de tiles para que en el próximo refresco se pinte la barra de energia actual
     423.  00:8312                      ; entrada: 	array_aux_energia
     424.  00:8312                      ; toca:		todo
     425.  00:8312                      pinta_energia:
     426.  00:8312  CD BB 82            	CALL	mira_pinta_energia
     427.  00:8315                      	
     428.  00:8315  21 21 A7            	LD		HL, array_aux_energia
     429.  00:8318  11 88 1A            	LD		DE, TILMAP + POSENERG 	;inicio posición en el mapa de tiles de las vidas
     430.  00:831B  01 08 00            	LD		BC, NMAXVIDREL			;hay 8 posiciones para vidas/reliquias o espacios en negro si no tiene 8 vidas/reliquias
     431.  00:831E  C3 5C 00            	JP		LDIRVM
     432.  00:8321                      fin_pinta_energia:
     433.  00:8321                      
     434.  00:8321                      
     435.  00:8321                      
     436.  00:8321                      ;;=====================================================
     437.  00:8321                      ;;BORRA_MAPA
     438.  00:8321                      ;;=====================================================	
     439.  00:8321                      ; función: 	pone todas las habitaciones del mapa a negro (los tiles del mapa los rellena con un array a 0 - caracter en negro)
     440.  00:8321                      ; entrada: 	array_aux_mapa_limpiar
     441.  00:8321                      ; salida: 	-
     442.  00:8321                      ; toca:		AF
     443.  00:8321                      borra_mapa:
     444.  00:8321  D9                  	EXX
     445.  00:8322                      	
     446.  00:8322  21 29 A7            	LD		HL,array_aux_mapa_limpiar
     447.  00:8325  11 F8 1A            	LD		DE,TILMAP + POSMAPLIN1 	;inicio posición en el mapa de tiles de la primera fila del mapa
     448.  00:8328  01 07 00            	LD		BC,NHABNIVEL			;cada nivel son 7 filas con 7 habitaciones "posibles"
     449.  00:832B  CD 5C 00            	CALL	LDIRVM
     450.  00:832E                      	
     451.  00:832E  21 29 A7            	LD		HL,array_aux_mapa_limpiar
     452.  00:8331  11 D8 1A            	LD		DE,TILMAP + POSMAPLIN2
     453.  00:8334  01 07 00            	LD		BC,NHABNIVEL
     454.  00:8337  CD 5C 00            	CALL	LDIRVM
     455.  00:833A                      
     456.  00:833A  21 29 A7            	LD		HL,array_aux_mapa_limpiar
     457.  00:833D  11 B8 1A            	LD		DE,TILMAP + POSMAPLIN3
     458.  00:8340  01 07 00            	LD		BC,NHABNIVEL
     459.  00:8343  CD 5C 00            	CALL	LDIRVM
     460.  00:8346                      
     461.  00:8346  21 29 A7            	LD		HL,array_aux_mapa_limpiar	
     462.  00:8349  11 98 1A            	LD		DE,TILMAP + POSMAPLIN4
     463.  00:834C  01 07 00            	LD		BC,NHABNIVEL
     464.  00:834F  CD 5C 00            	CALL	LDIRVM
     465.  00:8352                      
     466.  00:8352  21 29 A7            	LD		HL,array_aux_mapa_limpiar	
     467.  00:8355  11 78 1A            	LD		DE,TILMAP + POSMAPLIN5
     468.  00:8358  01 07 00            	LD		BC,NHABNIVEL
     469.  00:835B  CD 5C 00            	CALL	LDIRVM
     470.  00:835E                      
     471.  00:835E  21 29 A7            	LD		HL,array_aux_mapa_limpiar	
     472.  00:8361  11 58 1A            	LD		DE,TILMAP + POSMAPLIN6
     473.  00:8364  01 07 00            	LD		BC,NHABNIVEL
     474.  00:8367  CD 5C 00            	CALL	LDIRVM
     475.  00:836A                      
     476.  00:836A  21 29 A7            	LD		HL,array_aux_mapa_limpiar	
     477.  00:836D  11 38 1A            	LD		DE,TILMAP + POSMAPLIN7
     478.  00:8370  01 07 00            	LD		BC,NHABNIVEL
     479.  00:8373  CD 5C 00            	CALL	LDIRVM
     480.  00:8376                      	
     481.  00:8376  D9                  	EXX
     482.  00:8377                      fin_borra_mapa:
     483.  00:8377  C9                  	RET
     484.  00:8378                      
     485.  00:8378                      
     486.  00:8378                      
     487.  00:8378                      
     488.  00:8378                      
     489.  00:8378                      ;;=====================================================
     490.  00:8378                      ;;PINTA_PUERTAS
     491.  00:8378                      ;;=====================================================	
     492.  00:8378                      ; función: 	examina A y mira si tiene que pintar puertas de los lados, arriba o abrajo o las escaleras (o no)
     493.  00:8378                      ; entrada: 	habitacion_actual 1 escalera 1 puerta arriba 1 pu der 1 pu aba 1 pu izq (si es 0 pinta pared)
     494.  00:8378                      ; salida: 	-
     495.  00:8378                      ; toca:		todo
     496.  00:8378                      pinta_puertas:
     497.  00:8378  CD 4A 81            	CALL	pinta_parte_superior_pantalla	;pinta pasillo y paredes
     498.  00:837B                      
     499.  00:837B  CD B1 80            	CALL	localiza_info_habitacion	;busca qué puertas debe pintar y lo mete en habitación_actual
     500.  00:837E                      	
     501.  00:837E  3A DF A3            	LD		 A, (habitacion_actual)		;se mete en A porque la función pide A y para no buscar el valor 4 veces
     502.  00:8381                      
     503.  00:8381                      ;	BIT		 4, A
     504.  00:8381                      ;	CALL	nz, pinta_escalera
     505.  00:8381                      
     506.  00:8381  CB 5F               	BIT		 3, A
     507.  00:8383  C4 B1 83            	CALL	nz, pinta_puerta_arr
     508.  00:8386                      
     509.  00:8386  CB 57               	BIT		 2, A
     510.  00:8388  C4 CC 83            	CALL	nz, pinta_puerta_der
     511.  00:838B                      
     512.  00:838B  CB 4F               	BIT		 1, A
     513.  00:838D  C4 96 83            	CALL	nz, pinta_puerta_aba
     514.  00:8390                      	
     515.  00:8390  CB 47               	BIT		 0, A
     516.  00:8392  C4 E7 83            	CALL	nz, pinta_puerta_izq
     517.  00:8395                      fin_pinta_puertas:
     518.  00:8395  C9                  	RET
     519.  00:8396                      
     520.  00:8396                      
     521.  00:8396                      
     522.  00:8396                      
     523.  00:8396                      ;;=====================================================
     524.  00:8396                      ;;PINTA_PUERTA_ABA
     525.  00:8396                      ;;=====================================================	
     526.  00:8396                      ; función: 	pinta la puerta de abajo
     527.  00:8396                      ; entrada: 	array_puerta_abajo, wordaux2, wordaux1
     528.  00:8396                      ; salida: 	-
     529.  00:8396                      ; toca:		HL,BC, DE
     530.  00:8396                      pinta_puerta_aba:
     531.  00:8396  F5                  	PUSH	AF
     532.  00:8397                      	
     533.  00:8397  21 5A A7            	LD		HL, array_puerta_abajo			;guardo puntero al array a pintar (como pasar por referencia)
     534.  00:839A  22 D0 84            	LD		(wordaux2), HL					;en la variable wordaux2
     535.  00:839D  21 EE 19            	LD		HL, TILMAP + POSPUERABAJ		;calcula posición en tilemap
     536.  00:83A0  22 CE 84            	LD		(wordaux1), HL					;guarda valor pos tilemap en wordaux1
     537.  00:83A3                      
     538.  00:83A3  3E 01               	LD		 A, 1							;nº de filas
     539.  00:83A5  32 D2 84            	LD		(byteaux1), A
     540.  00:83A8  3E 04               	LD		 A, 4							;nº de columnas
     541.  00:83AA  32 D3 84            	LD		(byteaux2), A
     542.  00:83AD                      	
     543.  00:83AD  F1                  	POP		AF
     544.  00:83AE                      	
     545.  00:83AE  C3 8E 84            	JP		pinta_array
     546.  00:83B1                      fin_pinta_puerta_aba:
     547.  00:83B1                      
     548.  00:83B1                      ;;=====================================================
     549.  00:83B1                      ;;PINTA_PUERTA_ARR
     550.  00:83B1                      ;;=====================================================	
     551.  00:83B1                      ; función: 	pinta la puerta de arriba
     552.  00:83B1                      ; entrada: 	array_puerta_arriba, wordaux2, wordaux1
     553.  00:83B1                      ; salida: 	-
     554.  00:83B1                      ; toca:		HL,BC, DE
     555.  00:83B1                      pinta_puerta_arr:
     556.  00:83B1  F5                  	PUSH	AF
     557.  00:83B2                      	
     558.  00:83B2  21 31 A7            	LD		HL, array_puerta_arriba			;guardo puntero al array a pintar (como pasar por referencia)
     559.  00:83B5  22 D0 84            	LD		(wordaux2), HL					;en la variable wordaux2
     560.  00:83B8  21 8E 18            	LD		HL, TILMAP + POSPUERARRI		;calcula posición en tilemap
     561.  00:83BB  22 CE 84            	LD		(wordaux1), HL					;guarda valor pos tilemap en wordaux1
     562.  00:83BE  3E 05               	LD		 A, 5							;nº de filas
     563.  00:83C0  32 D2 84            	LD		(byteaux1), A
     564.  00:83C3  3E 04               	LD		 A, 4							;nº de columnas
     565.  00:83C5  32 D3 84            	LD		(byteaux2), A
     566.  00:83C8                      	
     567.  00:83C8  F1                  	POP		AF
     568.  00:83C9                      	
     569.  00:83C9  C3 8E 84            	JP		pinta_array
     570.  00:83CC                      fin_pinta_puerta_arr:
     571.  00:83CC                      
     572.  00:83CC                      
     573.  00:83CC                      ;;=====================================================
     574.  00:83CC                      ;;PINTA_PUERTA_DER
     575.  00:83CC                      ;;=====================================================	
     576.  00:83CC                      ; función: 	pinta la puerta de la derecha
     577.  00:83CC                      ; entrada: 	array_puerta_derecha, wordaux2, wordaux1
     578.  00:83CC                      ; salida: 	-
     579.  00:83CC                      ; toca:		HL,BC, DE
     580.  00:83CC                      pinta_puerta_der:
     581.  00:83CC  F5                  	PUSH	AF
     582.  00:83CD  21 45 A7            	LD		HL, array_puerta_derecha		;guardo puntero al array a pintar (como pasar por referencia)
     583.  00:83D0  22 D0 84            	LD		(wordaux2), HL					;en la variable wordaux2
     584.  00:83D3  21 FC 18            	LD		HL, TILMAP + POSPUERDERE		;calcula posición en tilemap
     585.  00:83D6  22 CE 84            	LD		(wordaux1), HL					;guarda valor pos tilemap en wordaux1
     586.  00:83D9                      
     587.  00:83D9  3E 07               	LD		 A, 7							;nº de filas
     588.  00:83DB  32 D2 84            	LD		(byteaux1), A
     589.  00:83DE  3E 03               	LD		 A, 3							;nº de columnas
     590.  00:83E0  32 D3 84            	LD		(byteaux2), A
     591.  00:83E3                      	
     592.  00:83E3  F1                  	POP		AF
     593.  00:83E4                      	
     594.  00:83E4  C3 8E 84            	JP		pinta_array
     595.  00:83E7                      fin_pinta_puerta_der:
     596.  00:83E7                      	
     597.  00:83E7                      ;;=====================================================
     598.  00:83E7                      ;;PINTA_PUERTA_IZQ
     599.  00:83E7                      ;;=====================================================	
     600.  00:83E7                      ; función: 	pinta la puerta de la izquierda
     601.  00:83E7                      ; entrada: 	array_puerta_izquierda, wordaux2, wordaux1
     602.  00:83E7                      ; salida: 	-
     603.  00:83E7                      ; toca:		HL,BC, DE
     604.  00:83E7                      pinta_puerta_izq:
     605.  00:83E7  F5                  	PUSH	AF
     606.  00:83E8                      	
     607.  00:83E8  21 5E A7            	LD		HL, array_puerta_izquierda		;guardo puntero al array a pintar (como pasar por referencia)
     608.  00:83EB  22 D0 84            	LD		(wordaux2), HL					;en la variable wordaux2
     609.  00:83EE  21 E1 18            	LD		HL, TILMAP + POSPUERIZQU		;calcula posición en tilemap
     610.  00:83F1  22 CE 84            	LD		(wordaux1), HL					;guarda valor pos tilemap en wordaux1
     611.  00:83F4                      
     612.  00:83F4  3E 07               	LD		 A, 7							;nº de filas
     613.  00:83F6  32 D2 84            	LD		(byteaux1), A
     614.  00:83F9  3E 03               	LD		 A, 3							;nº de columnas
     615.  00:83FB  32 D3 84            	LD		(byteaux2), A
     616.  00:83FE                      	
     617.  00:83FE  F1                  	POP		AF
     618.  00:83FF                      	
     619.  00:83FF  C3 8E 84            	JP		pinta_array
     620.  00:8402                      fin_pinta_puerta_izq:
     621.  00:8402                      
     622.  00:8402                      
     623.  00:8402                      ;;=====================================================
     624.  00:8402                      ;;POSICIONA_EN_MAPA
     625.  00:8402                      ;;=====================================================	
     626.  00:8402                      ; función: 	en el mapa de marcadores de la derecha/abajo marca un cuadro en gris o con un muñeco
     627.  00:8402                      ;			según el valor de prota.posición pinta entrá un muñeco y por donde vaya pasando el prota
     628.  00:8402                      ;			quedará en gris
     629.  00:8402                      ; entrada: 	elemento_pintar_mapa, prota_pos_mapy, prota_pos_mapx
     630.  00:8402                      ; salida: 	-
     631.  00:8402                      ; toca:		todos
     632.  00:8402                      posiciona_en_mapa:
     633.  00:8402                      	;#0238 es la posición en mapa de tiles de la esquina superior izquierda del mapa (569 en decimal)
     634.  00:8402  21 38 1A            	LD		HL, TILMAP + POSMAPA;pos inicial
     635.  00:8405                      	
     636.  00:8405                      	;ahora se le calcula la fila a pintar ya que va de abajo a arriba y no como en el mapa + columna
     637.  00:8405                      .sumar_fila:
     638.  00:8405  3A 0F A7            	LD		 A, (prota_pos_mapy)
     639.  00:8408  FE 01               	CP		 1
     640.  00:840A  28 2A               	JR		 Z, .fila_1
     641.  00:840C  3A 0F A7            	LD		 A, (prota_pos_mapy)
     642.  00:840F  FE 02               	CP		 2
     643.  00:8411  28 2A               	JR		 Z, .fila_2
     644.  00:8413  3A 0F A7            	LD		 A, (prota_pos_mapy)
     645.  00:8416  FE 03               	CP		 3
     646.  00:8418  28 2A               	JR		 Z, .fila_3
     647.  00:841A  3A 0F A7            	LD		 A, (prota_pos_mapy)
     648.  00:841D  FE 04               	CP		 4
     649.  00:841F  28 2A               	JR		 Z, .fila_4
     650.  00:8421  3A 0F A7            	LD		 A, (prota_pos_mapy)
     651.  00:8424  FE 05               	CP		 5
     652.  00:8426  28 2A               	JR		 Z, .fila_5
     653.  00:8428  3A 0F A7            	LD		 A, (prota_pos_mapy)
     654.  00:842B  FE 06               	CP		 6
     655.  00:842D  28 2A               	JR		 Z, .sumar_columna
     656.  00:842F                      	;no consulto la 0 porque si no es ninguna de las anteriores es 0 y por tanto sería un jr fila_0
     657.  00:842F                      	
     658.  00:842F                      .fila_0:
     659.  00:842F  11 C0 00            	LD		DE, 192
     660.  00:8432  19                  	ADD		HL, DE			;nota: se que repito el ADD pero la otra opción es inicializar DE y ya tarda mucho la funicón (es por velicidad)
     661.  00:8433  C3 59 84            	JP		.sumar_columna
     662.  00:8436                      .fila_1:
     663.  00:8436  11 A0 00            	LD		DE, 160
     664.  00:8439  19                  	ADD		HL, DE
     665.  00:843A  C3 59 84            	JP		.sumar_columna
     666.  00:843D                      .fila_2:
     667.  00:843D  11 80 00            	LD		DE, 128
     668.  00:8440  19                  	ADD		HL, DE
     669.  00:8441  C3 59 84            	JP		.sumar_columna
     670.  00:8444                      .fila_3:
     671.  00:8444  11 60 00            	LD		DE, 96
     672.  00:8447  19                  	ADD		HL, DE
     673.  00:8448  C3 59 84            	JP		.sumar_columna
     674.  00:844B                      .fila_4:
     675.  00:844B  11 40 00            	LD		DE, 64
     676.  00:844E  19                  	ADD		HL, DE
     677.  00:844F  C3 59 84            	JP		.sumar_columna
     678.  00:8452                      .fila_5:
     679.  00:8452  11 20 00            	LD		DE, 32
     680.  00:8455  19                  	ADD		HL, DE
     681.  00:8456  C3 59 84            	JP		.sumar_columna
     682.  00:8459                      .fila_6:
     683.  00:8459                      	;pongo fila_6 por poner ya que si es la fila 6 equiv. a primera fila del mapa y por tanto no suma fila
     684.  00:8459                      	
     685.  00:8459                      	
     686.  00:8459                      .sumar_columna:
     687.  00:8459  3A 0E A7            	LD 		 A, (prota_pos_mapx) ;POS X
     688.  00:845C  16 00               	LD		 D, 0
     689.  00:845E  5F                  	LD		 E, A
     690.  00:845F  19                  	ADD		HL, DE
     691.  00:8460                      	
     692.  00:8460                      	;resultado en BC para usar en la función pinta_tile_suelto
     693.  00:8460  44                  	LD		 B, H
     694.  00:8461  4D                  	LD		 C, L
     695.  00:8462                      	
     696.  00:8462                      	;terminado de fijar la coordenada recuperamos a para ver el tipo
     697.  00:8462  3A 30 A7            	LD		 A, (elemento_pintar_mapa)
     698.  00:8465  FE 09               	CP		 TILEGRISM
     699.  00:8467  CA 6F 84            	JP		 Z, pinta_pos_mapa_vacio
     700.  00:846A  16 13               	LD		 D, TILEPROTAM
     701.  00:846C  C3 71 84            	JP		fin_pinta_pos_mapa
     702.  00:846F                      pinta_pos_mapa_vacio:
     703.  00:846F  16 09               	LD		 D, TILEGRISM	
     704.  00:8471                      
     705.  00:8471                      fin_pinta_pos_mapa:
     706.  00:8471  C3 AD 82            	JP		pinta_tile_suelto
     707.  00:8474                      fin_posiciona_en_mapa:
     708.  00:8474                      
     709.  00:8474                      
     710.  00:8474                      
     711.  00:8474                      
     712.  00:8474                      ;;=====================================================
     713.  00:8474                      ;;EFECTO_IMAGEN_TIRA_RELIQUIA
     714.  00:8474                      ;;=====================================================	
     715.  00:8474                      ; función: 	hace que el fondo de la pantalla parpadee N veces
     716.  00:8474                      ; entrada: 	actualiza_reliquias_sn
     717.  00:8474                      ; salida: 	-
     718.  00:8474                      ; toca: 	todo
     719.  00:8474                      efecto_imagen_tira_reliquia:
     720.  00:8474  3E 14               	LD		 A, 20;RETARDOREL
     721.  00:8476  47                  	LD		 B, A
     722.  00:8477                      
     723.  00:8477                      .parpadea_fondo:
     724.  00:8477  C5                  	PUSH	BC
     725.  00:8478  21 F5 A6            	LD		HL, color_bomba1
     726.  00:847B  CD 11 81            	CALL	color_pantalla
     727.  00:847E                      	
     728.  00:847E                      	;~ PUSH	BC
     729.  00:847E                      	;~ LD		 A, 255
     730.  00:847E                      	;~ LD		 B, A
     731.  00:847E                      ;~ .bucle_de_espera:
     732.  00:847E                      	;~ NOP
     733.  00:847E                      	;~ DJNZ	 .bucle_de_espera
     734.  00:847E                      	;~ POP		BC
     735.  00:847E  76                  	HALT
     736.  00:847F                      
     737.  00:847F                      	
     738.  00:847F  21 F8 A6            	LD		HL, color_bomba2
     739.  00:8482  CD 11 81            	CALL	color_pantalla
     740.  00:8485  C1                  	POP		BC
     741.  00:8486  10 EF               	DJNZ	.parpadea_fondo
     742.  00:8488                      	
     743.  00:8488  21 F2 A6            	LD		HL, color_base
     744.  00:848B  C3 11 81            	JP		color_pantalla
     745.  00:848E                      fin_efecto_imagen_tira_reliquia:
     746.  00:848E                      
     747.  00:848E                      
     748.  00:848E                      
     749.  00:848E                      
     750.  00:848E                      ;=====================================================
     751.  00:848E                      ;;PINTA_ARRAY
     752.  00:848E                      ;;=====================================================	
     753.  00:848E                      ;;funcion:  (pinta el mismo tile) se le pasa un array con posiciones de tiles y coordenadas x e y y los pinta en screen 2
     754.  00:848E                      ;;entrada:	wordaux1 (pos inicio sc2 donde pintar) y wordaux2 (puntero al array a pintar), BC (posición en tilemap) , D filas y E columnas
     755.  00:848E                      ;;salida:	-
     756.  00:848E                      ;;importante: necesita de una variable wordaux1 tipo WD (wordaux1: 	DW	0)
     757.  00:848E                      ;; ejemplo llamada:
     758.  00:848E                      	;~ LD		HL,array_tiles					;guardo puntero al array a pintar (como psar por referencia)
     759.  00:848E                      	;~ LD		(wordaux2),HL					;en la variable wordaux2
     760.  00:848E                      	;~ LD		HL,SC2MAP + 256 + 32			;calcula posición en tilemap
     761.  00:848E                      	;~ LD		(wordaux1),HL					;guarda valor pos tilemap en wordaux1
     762.  00:848E                      	;~ LD		B,H								;coloca posición tilemap BC
     763.  00:848E                      	;~ LD		C,L
     764.  00:848E                      	;~ LD		D,2								;nº de filas ahora byteaux1
     765.  00:848E                      	;~ LD		E,3								;nº de columnas ahora byteaux2
     766.  00:848E                      	;~ CALL	pinta_array
     767.  00:848E                      
     768.  00:848E                      pinta_array:
     769.  00:848E  08                  	EX		AF, AF'
     770.  00:848F                      	
     771.  00:848F  3A D2 84            	LD		 A, (byteaux1)
     772.  00:8492  57                  	LD		 D, A
     773.  00:8493  3A D3 84            	LD		 A, (byteaux2)
     774.  00:8496  5F                  	LD		 E, A
     775.  00:8497                      
     776.  00:8497                      	
     777.  00:8497  2A CE 84            	LD		HL, (wordaux1)
     778.  00:849A  44                  	LD		 B, H							;coloca posición tilemap BC
     779.  00:849B  4D                  	LD		 C, L
     780.  00:849C                      	
     781.  00:849C                      	;contamos con que la posición "global" en el tilemap está ya en BC
     782.  00:849C                      	;y el puntero al array a pintar en wordaux2 y la posición en tilemap sc2 en wordaux1
     783.  00:849C                      	;inicializa
     784.  00:849C  DB 99               	IN		 A,(REGEST)		;leer registro de estado (recomendado)
     785.  00:849E                      	
     786.  00:849E                      	;coloca puntero para pintar tile según BC
     787.  00:849E  79                  	LD		 A,C			;primero byte bajo	
     788.  00:849F  D3 99               	OUT		(REGEST),A
     789.  00:84A1  78                  	LD		 A,B			;después byte alto  ********************** preguntar a Fernando cómo que byte bajo es B
     790.  00:84A2  F6 40               	OR		1000000b		;+64
     791.  00:84A4  D3 99               	OUT		(REGEST),A
     792.  00:84A6                      
     793.  00:84A6                      	
     794.  00:84A6  2A D0 84            	LD		HL,(wordaux2)	;HL es lo que se pintará y le he pasado el puntero del array tilemap a pintar
     795.  00:84A9                      .pa_pinta_fila:
     796.  00:84A9  43                  	LD		 B,E
     797.  00:84AA                      .pa_pinta_columnas: 		;finta la fila (pintando las columnas)
     798.  00:84AA  7E                  	LD		 A,(HL)
     799.  00:84AB  D3 98               	OUT		(REGESCVDP),A	;escribe A en VRAM en la posición indicada por los dos OUT anteriores
     800.  00:84AD  23                  	INC		HL
     801.  00:84AE  10 FA               	DJNZ	.pa_pinta_columnas
     802.  00:84B0                      	
     803.  00:84B0                      	;no es una solución elegante lo de repetir código pero queda claro
     804.  00:84B0                      	;por si hay otra fila
     805.  00:84B0  E5                  	PUSH	HL
     806.  00:84B1  2A CE 84            	LD		HL,(wordaux1)
     807.  00:84B4  01 20 00            	LD		BC,32
     808.  00:84B7  09                  	ADD		HL,BC
     809.  00:84B8  22 CE 84            	LD		(wordaux1),HL
     810.  00:84BB  44                  	LD		B,H
     811.  00:84BC  4D                  	LD		C,L
     812.  00:84BD  E1                  	POP		HL
     813.  00:84BE                      	
     814.  00:84BE  79                  	LD		 A,C			;primero byte bajo	
     815.  00:84BF  D3 99               	OUT		(REGEST),A
     816.  00:84C1  78                  	LD		 A,B			;después byte alto 
     817.  00:84C2  F6 40               	OR		1000000b		;+64
     818.  00:84C4  D3 99               	OUT		(REGEST),A
     819.  00:84C6                      	
     820.  00:84C6                      	;si hay otra fila repite
     821.  00:84C6  15                  	DEC		 D
     822.  00:84C7  7A                  	LD		 A,D		;¿hay otra fila?
     823.  00:84C8  B7                  	OR		 A
     824.  00:84C9  C4 A9 84            	CALL	NZ,.pa_pinta_fila
     825.  00:84CC                      	
     826.  00:84CC  08                  	EX		AF, AF'
     827.  00:84CD                      fin_pinta_array:
     828.  00:84CD  C9                  	RET
     829.  00:84CE                      ;;variables asocidas a la función pinta_array
     830.  00:84CE                      ;; por de pronto la dejo aquí
     831.  00:84CE  00 00               wordaux1:		DW	0	;almacena la posición en el tilemap 0 al 675
     832.  00:84D0  00 00               wordaux2:		DW	0	;almacena puntero a array de tiles (posiciones en realidad) a pintar (posiciones repetidas en los 2 primeros bancos)
     833.  00:84D2  00                  byteaux1:		DB	0	;nº filas Registro D
     834.  00:84D3  00                  byteaux2:		DB	0	;nº columnas Registro E
     835.  00:84D4                      
     836.  00:84D4                      
     837.  00:84D4                      
     838.  00:84D4                      
     839.  00:84D4                      ;;=====================================================
     840.  00:84D4                      ;;INICIALIZA_ANTORCHAS
     841.  00:84D4                      ;;=====================================================	
     842.  00:84D4                      ; función: 	inicializa las variables de estructuras de las antorchas
     843.  00:84D4                      ; entrada: 	antorchas, array_antorcha
     844.  00:84D4                      ; salida: 	
     845.  00:84D4                      ; toca:		HL, IX
     846.  00:84D4                      inicializa_antorchas:
     847.  00:84D4  DD 21 84 A8         	LD		IX, antorchas
     848.  00:84D8  DD 36 00 00         	LD		(IX), INACTIVA
     849.  00:84DC  21 8B A8            	LD		HL, array_antorcha
     850.  00:84DF  DD 74 01            	LD		(IX + 1), H
     851.  00:84E2  DD 75 02            	LD		(IX + 2), L
     852.  00:84E5  DD 36 03 88         	LD		(IX + 3), POSANTOR1
     853.  00:84E9  DD 36 04 97         	LD		(IX + 4), POSANTOR2
     854.  00:84ED  DD 36 05 00         	LD		(IX + 5), 0
     855.  00:84F1  DD 36 06 FF         	LD		(IX + 6), RESETLLAMA
     856.  00:84F5                      fin_inicializa_antorchas:
     857.  00:84F5  C9                  	RET
     858.  00:84F6                      
     859.  00:84F6                      
     860.  00:84F6                      ;;=====================================================
     861.  00:84F6                      ;;INICIALIZA_esqueletos
     862.  00:84F6                      ;;=====================================================	
     863.  00:84F6                      ; función: 	inicializa las variables de estructuras de los esqueletos
     864.  00:84F6                      ; entrada: 	esqueletos, array_esqueletos
     865.  00:84F6                      ; salida: 	
     866.  00:84F6                      ; toca:		HL, IX
     867.  00:84F6                      inicializa_esqueletos:
     868.  00:84F6  DD 21 8E A8         	LD		IX, esqueletos
     869.  00:84FA  DD 36 00 00         	LD		(IX), INACTIVA
     870.  00:84FE  21 95 A8            	LD		HL, array_esqueleto
     871.  00:8501  DD 74 01            	LD		(IX + 1), H
     872.  00:8504  DD 75 02            	LD		(IX + 2), L
     873.  00:8507  DD 36 03 88         	LD		(IX + 3), POSESQUEL1
     874.  00:850B  DD 36 04 95         	LD		(IX + 4), POSESQUEL2
     875.  00:850F  DD 36 05 00         	LD		(IX + 5), 0
     876.  00:8513  DD 36 06 19         	LD		(IX + 6), RESETESQUEL
     877.  00:8517                      fin_inicializa_esqueletos:
     878.  00:8517  C9                  	RET
     879.  00:8518                      	
     880.  00:8518                      	
     881.  00:8518                      ;;=====================================================
     882.  00:8518                      ;;PINTA_ANTORCHAS
     883.  00:8518                      ;;=====================================================	
     884.  00:8518                      ; función: 	pinta las antorchas con valores base
     885.  00:8518                      ; entrada: 	antorchas, array_antorcha
     886.  00:8518                      ; salida: 	
     887.  00:8518                      ; toca:		HL
     888.  00:8518                      pinta_extra_fondo:
     889.  00:8518  DD 21 84 A8         	LD		IX, antorchas
     890.  00:851C                      .examina_sihay_antorchas
     891.  00:851C                      	;hay que pintarlas?
     892.  00:851C  3A E0 A3            	LD		 A, (habitacion_extras)
     893.  00:851F  CB 47               	BIT		 0, A
     894.  00:8521  C2 2B 85            	JP		NZ, .hayantorchas			;si el bit 0 de extras es 0 no se pintan antorchas
     895.  00:8524  DD 36 00 00         	LD		(IX), INACTIVA
     896.  00:8528  C3 54 85            	JP		.examina_sihay_esqueletos
     897.  00:852B                      	
     898.  00:852B                      .hayantorchas:
     899.  00:852B  DD 36 00 01         	LD		(IX), ACTIVA
     900.  00:852F                      	;pinta antorcha izquierdda
     901.  00:852F  DD 66 01            	LD		 H, (IX + 1)
     902.  00:8532  DD 6E 02            	LD		 L, (IX + 2)
     903.  00:8535  22 D0 84            	LD		(wordaux2), HL				;guarda pos array en wordaux2
     904.  00:8538                      	
     905.  00:8538  21 88 18            	LD		HL, TILMAP + POSANTOR1		;calcula posición en tilemap
     906.  00:853B  22 CE 84            	LD		(wordaux1), HL				;guarda valor pos tilemap en wordaux1
     907.  00:853E                      
     908.  00:853E  3E 03               	LD		 A, 3						;nº de filas	
     909.  00:8540  32 D2 84            	LD		(byteaux1), A
     910.  00:8543  3E 01               	LD		 A, 1						;nº de columnas
     911.  00:8545  32 D3 84            	LD		(byteaux2), A				
     912.  00:8548                      	
     913.  00:8548  CD 8E 84            	CALL	pinta_array
     914.  00:854B                      	
     915.  00:854B                      	;pinta antorcha derecha
     916.  00:854B  21 97 18            	LD		HL, TILMAP + POSANTOR2		;calcula posición en tilemap
     917.  00:854E  22 CE 84            	LD		(wordaux1), HL				;guarda valor pos tilemap en wordaux1
     918.  00:8551                      	
     919.  00:8551  C3 8E 84            	JP		pinta_array 				;no ecesita CALL ya que la subrutina termina aquí
     920.  00:8554                      	
     921.  00:8554                      .examina_sihay_esqueletos
     922.  00:8554  DD 21 8E A8         	LD		IX, esqueletos
     923.  00:8558                      	;hay que pintarlos?
     924.  00:8558  3A DF A3            	LD		 A, (habitacion_actual)
     925.  00:855B  CB 6F               	BIT		 5, A
     926.  00:855D  C2 65 85            	JP		NZ, .hayesqueletos			;si el bit 0 de extras es 0 no se pintan antorchas
     927.  00:8560  DD 36 00 00         	LD		(IX), INACTIVA
     928.  00:8564  C9                  	RET
     929.  00:8565                      
     930.  00:8565                      .hayesqueletos
     931.  00:8565  DD 36 00 01         	LD		(IX), ACTIVA
     932.  00:8569                      	;pinta antorcha izquierdda
     933.  00:8569  DD 66 01            	LD		 H, (IX + 1)
     934.  00:856C  DD 6E 02            	LD		 L, (IX + 2)
     935.  00:856F  22 D0 84            	LD		(wordaux2), HL				;guarda pos array en wordaux2
     936.  00:8572                      	
     937.  00:8572  21 88 18            	LD		HL, TILMAP + POSESQUEL1		;calcula posición en tilemap
     938.  00:8575  22 CE 84            	LD		(wordaux1), HL				;guarda valor pos tilemap en wordaux1
     939.  00:8578                      
     940.  00:8578  3E 04               	LD		 A, 4						;nº de filas	
     941.  00:857A  32 D2 84            	LD		(byteaux1), A
     942.  00:857D  3E 03               	LD		 A, 3						;nº de columnas
     943.  00:857F  32 D3 84            	LD		(byteaux2), A				
     944.  00:8582                      	
     945.  00:8582  CD 8E 84            	CALL	pinta_array
     946.  00:8585                      	
     947.  00:8585                      	;pinta antorcha derecha
     948.  00:8585  21 95 18            	LD		HL, TILMAP + POSESQUEL2		;calcula posición en tilemap
     949.  00:8588  22 CE 84            	LD		(wordaux1), HL				;guarda valor pos tilemap en wordaux1
     950.  00:858B                      	
     951.  00:858B  C3 8E 84            	JP		pinta_array 				;no ecesita CALL ya que la subrutina termina aquí
     952.  00:858E                      fin_pinta_extra_fondo:
     953.  00:858E  C9                  	RET
     954.  00:858F                      
     955.  00:858F                      
     956.  00:858F                      
     957.  00:858F                      ;;=====================================================
     958.  00:858F                      ;;ACTUALIZA_ELEMENTOS_FONDO
     959.  00:858F                      ;;=====================================================	
     960.  00:858F                      ; función: 	de los elementos que pueda haber en el fondo de la pared (pantalla) actualiza si procede
     961.  00:858F                      ;			actualmente: antorchas y a futuro esqueletos
     962.  00:858F                      ; entrada: 	
     963.  00:858F                      ; salida: 	
     964.  00:858F                      ; toca:		
     965.  00:858F                      actualiza_elementos_fondo:
     966.  00:858F                      .examina_antorchas:
     967.  00:858F  DD 21 84 A8         	LD		IX, antorchas
     968.  00:8593  DD 7E 00            	LD		 A, (IX)
     969.  00:8596  B7                  	OR		 A
     970.  00:8597  CA 9D 85            	JP 	 	 Z, .examina_esqueletos
     971.  00:859A                      	
     972.  00:859A  C3 AA 85            	JP		flip_llamas_antorchas
     973.  00:859D                      .examina_esqueletos:
     974.  00:859D  DD 21 8E A8         	LD		IX, esqueletos
     975.  00:85A1  DD 7E 00            	LD		 A, (IX)
     976.  00:85A4  B7                  	OR		 A
     977.  00:85A5  C8                  	RET	 	 Z
     978.  00:85A6                      	
     979.  00:85A6  C3 01 86            	JP		flip_calavera_esqueletos
     980.  00:85A9                      fin_actualiza_elementos_fondo:
     981.  00:85A9  C9                  	RET
     982.  00:85AA                      
     983.  00:85AA                      
     984.  00:85AA                      
     985.  00:85AA                      ;;=====================================================
     986.  00:85AA                      ;;FLIP_LLAMAS_ANTORCHAS
     987.  00:85AA                      ;;=====================================================	
     988.  00:85AA                      ; función: 	modifica las llamas de las antorchas con los tipos que hay
     989.  00:85AA                      ; entrada: 	
     990.  00:85AA                      ; salida: 	
     991.  00:85AA                      ; toca:		
     992.  00:85AA                      flip_llamas_antorchas:
     993.  00:85AA  DD 21 84 A8         	LD		IX, antorchas
     994.  00:85AE                      	;tiene que cambiar de llama?
     995.  00:85AE  DD 7E 06            	LD		 A, (IX + 6)
     996.  00:85B1  3D                  	DEC		 A
     997.  00:85B2  DD 77 06            	LD		 (IX + 6), A
     998.  00:85B5                      	;no
     999.  00:85B5  C0                  	RET		NZ
    1000.  00:85B6                      	;si
    1001.  00:85B6  DD 36 06 FF         	LD		(IX + 6), RESETLLAMA	
    1002.  00:85BA                      	
    1003.  00:85BA                      	;qué llama toca?
    1004.  00:85BA  DD 7E 05            	LD		 A, (IX + 5)
    1005.  00:85BD  B7                  	OR		 A
    1006.  00:85BE  CA E2 85            	JP		 Z, .llama_par
    1007.  00:85C1                      .llama_impar
    1008.  00:85C1                      	;cambio a llama par
    1009.  00:85C1  AF                   	XOR		 A
    1010.  00:85C2  DD 77 05            	LD		(IX + 5), A
    1011.  00:85C5                      	;pinto llamas
    1012.  00:85C5  01 00 18            	LD		BC, TILMAP
    1013.  00:85C8  3E 88               	LD		 A, POSANTOR1
    1014.  00:85CA  CD 05 81            	CALL	suma_A_BC
    1015.  00:85CD  16 C4               	LD		 D, MAPLLAMA1
    1016.  00:85CF  CD AD 82            	CALL	pinta_tile_suelto
    1017.  00:85D2                      	
    1018.  00:85D2  01 00 18            	LD		BC, TILMAP
    1019.  00:85D5  3E 97               	LD		 A, POSANTOR2
    1020.  00:85D7  CD 05 81            	CALL	suma_A_BC
    1021.  00:85DA  16 C5               	LD		 D, MAPLLAMA2
    1022.  00:85DC  CD AD 82            	CALL	pinta_tile_suelto	
    1023.  00:85DF  C3 01 86            	JP		fin_flip_llamas_antorchas
    1024.  00:85E2                      .llama_par
    1025.  00:85E2                      	;cambio a llama par
    1026.  00:85E2  3E 01                	LD		 A, 1
    1027.  00:85E4  DD 77 05            	LD		(IX + 5), A
    1028.  00:85E7                      	;pinto llamas
    1029.  00:85E7  01 00 18            	LD		BC, TILMAP
    1030.  00:85EA  3E 88               	LD		 A, POSANTOR1
    1031.  00:85EC  CD 05 81            	CALL	suma_A_BC
    1032.  00:85EF  16 C5               	LD		 D, MAPLLAMA2
    1033.  00:85F1  CD AD 82            	CALL	pinta_tile_suelto
    1034.  00:85F4                      	
    1035.  00:85F4  01 00 18            	LD		BC, TILMAP
    1036.  00:85F7  3E 97               	LD		 A, POSANTOR2
    1037.  00:85F9  CD 05 81            	CALL	suma_A_BC
    1038.  00:85FC  16 C4               	LD		 D, MAPLLAMA1
    1039.  00:85FE  C3 AD 82            	JP		pinta_tile_suelto
    1040.  00:8601                      fin_flip_llamas_antorchas:
    1041.  00:8601                      
    1042.  00:8601                      
    1043.  00:8601                      ;;=====================================================
    1044.  00:8601                      ;;FLIP_CALAVERA_ESQUELETOS
    1045.  00:8601                      ;;=====================================================	
    1046.  00:8601                      ; función: 	modifica las calaveras de los esqueletos
    1047.  00:8601                      ; entrada: 	
    1048.  00:8601                      ; salida: 	
    1049.  00:8601                      ; toca:		TODOS.... muy importante DE
    1050.  00:8601                      flip_calavera_esqueletos:
    1051.  00:8601  DD 21 8E A8         	LD		IX, esqueletos
    1052.  00:8605                      	
    1053.  00:8605                      	;tiene que cambiar de calavera?
    1054.  00:8605  DD 7E 06            	LD		 A, (IX + ESTRUCTURA_ESQUELETO.cont_sig_escena)
    1055.  00:8608  3D                  	DEC		 A
    1056.  00:8609  DD 77 06            	LD		 (IX + ESTRUCTURA_ESQUELETO.cont_sig_escena), A
    1057.  00:860C                      	;no
    1058.  00:860C  C0                  	RET		NZ
    1059.  00:860D                      	;si
    1060.  00:860D  DD 36 06 19         	LD		(IX + ESTRUCTURA_ESQUELETO.cont_sig_escena), RESETESQUEL		;resetea contador de nueve escena
    1061.  00:8611                      	
    1062.  00:8611  CD 2F 86            	CALL	actualiza_escena_calavera
    1063.  00:8614                      
    1064.  00:8614                      	;pinto calaveras
    1065.  00:8614  01 00 18            	LD		BC, TILMAP
    1066.  00:8617  3E A9               	LD		 A, POSCALAVE1
    1067.  00:8619  CD 05 81            	CALL	suma_A_BC
    1068.  00:861C  D5                  	PUSH	DE
    1069.  00:861D  56                  	LD		 D, (HL)
    1070.  00:861E  CD AD 82            	CALL	pinta_tile_suelto
    1071.  00:8621                      	
    1072.  00:8621  01 00 18            	LD		BC, TILMAP
    1073.  00:8624  3E B6               	LD		 A, POSCALAVE2
    1074.  00:8626  CD 05 81            	CALL	suma_A_BC
    1075.  00:8629  E1                  	POP		HL
    1076.  00:862A  56                  	LD		 D, (HL)
    1077.  00:862B  C3 AD 82            	JP		pinta_tile_suelto	
    1078.  00:862E                      fin_flip_calavera_esqueletos:
    1079.  00:862E  00                  var_aux_calavera	DB	0;
    1080.  00:862F                      
    1081.  00:862F                      
    1082.  00:862F                      ;;=====================================================
    1083.  00:862F                      ;;ACTUALIZA_ESCENA_CALAVERA
    1084.  00:862F                      ;;=====================================================	
    1085.  00:862F                      ; función: 	modifica las siguiente calavera a mostrar
    1086.  00:862F                      ; entrada: 	
    1087.  00:862F                      ; salida: 	DE (iportante porque se usa fuera) y ESTRUCTURA_ESQUELETO.escena
    1088.  00:862F                      ; toca:		TODOS.... muy importante DE
    1089.  00:862F                      actualiza_escena_calavera:
    1090.  00:862F                      	;consulta_escena
    1091.  00:862F  DD 7E 05            	LD		 A, (IX + ESTRUCTURA_ESQUELETO.escena)
    1092.  00:8632  32 2E 86            	LD		(var_aux_calavera), A
    1093.  00:8635  B7                  	OR		 A
    1094.  00:8636  C2 3B 86            	JP		 NZ, .decrementa_escenas
    1095.  00:8639  3E 04               	LD		 A, RESETESCENAESQUEL
    1096.  00:863B                      .decrementa_escenas
    1097.  00:863B  3D                  	DEC		 A
    1098.  00:863C                      .fin_consulta_escena
    1099.  00:863C  DD 77 05            	LD		 (IX + ESTRUCTURA_ESQUELETO.escena), A
    1100.  00:863F                      	
    1101.  00:863F  21 A1 A8            	LD		HL, lista_escenas_calavera
    1102.  00:8642  3A 2E 86            	LD		 A, (var_aux_calavera)
    1103.  00:8645  CD 0B 81            	CALL	suma_A_HL
    1104.  00:8648                      	
    1105.  00:8648  54                  	LD		 D, H
    1106.  00:8649  5D                  	LD		 E, L
    1107.  00:864A                      fin_actualiza_escena_calavera:
    1108.  00:864A  C9                  	RET
    1109.  00:864B                      
     136   00:864B                      	
     137   00:864B                      	include "subr_sprites.asm"
       1.  00:864B                      
       2.  00:864B                      ;;=====================================================
       3.  00:864B                      ;;SUBRUTINAS ENCARGADAS DE MANEJAR LOS SPRITES
       4.  00:864B                      ;;=====================================================	
       5.  00:864B                      
       6.  00:864B                      
       7.  00:864B                      ;; PREGUNTAR SI A FERNANDO SI ES MEJOR USAR LISTAS O ALGO PARA AHORRAR CÓDIGO
       8.  00:864B                      
       9.  00:864B                      
      10.  00:864B                      
      11.  00:864B                      
      12.  00:864B                      ;;=====================================================
      13.  00:864B                      ;;CARGA_PATRONES_SPRITES_NIVEL
      14.  00:864B                      ;;=====================================================	
      15.  00:864B                      ; función: 	examina el nivel y carga los patrones específicos necesarios
      16.  00:864B                      ; entrada: 	-
      17.  00:864B                      ; salida: 	-
      18.  00:864B                      ; toca: 	-
      19.  00:864B                      carga_patrones_sprites_nivel:
      20.  00:864B  CD 4F 86            	CALL 	carga_patrones_nivel_comunes
      21.  00:864E                      	
      22.  00:864E  C9                  	RET		;*********************
      23.  00:864F                      	
      24.  00:864F                      	
      25.  00:864F                      	
      26.  00:864F                      	;~ ;carga patrones no comunes
      27.  00:864F                      	;~ LD		 A, (prota_nivel)
      28.  00:864F                      	;~ OR		 A
      29.  00:864F                      	;~ JP		 Z, carga_patrones_sprites_nivel donde esté el prota
      30.  00:864F                      fin_carga_patrones_sprites_nivel:
      31.  00:864F                      
      32.  00:864F                      
      33.  00:864F                      ;;=====================================================
      34.  00:864F                      ;;CARGA_PATRONES_SPRITES_NIVEL_COMUNES
      35.  00:864F                      ;;=====================================================	
      36.  00:864F                      ; función: 	carga los patrones comunes en todos los niveles
      37.  00:864F                      ; entrada: 	-
      38.  00:864F                      ; salida: 	-
      39.  00:864F                      ; toca: 	-
      40.  00:864F                      carga_patrones_nivel_comunes:	
      41.  00:864F  21 5F 9A            	LD		HL, sprites_comunes
      42.  00:8652  11 00 38            	LD		DE, SPRTBL
      43.  00:8655  01 C0 00            	LD		BC, fin_sprites_comunes-sprites_comunes
      44.  00:8658  C3 5C 00            	JP		LDIRVM
      45.  00:865B                      fin_carga_patrones_nivel_comunes:
      46.  00:865B                      
      47.  00:865B                      
      48.  00:865B                      ;;=====================================================
      49.  00:865B                      ;;CARGA_PATRONES_SPRITES_NIVEL1
      50.  00:865B                      ;;=====================================================	
      51.  00:865B                      ; función: 	copia los patrones de los sprites que e van a usar en el nivel 1 en vram
      52.  00:865B                      ; entrada: 	-
      53.  00:865B                      ; salida: 	-
      54.  00:865B                      ; toca: 	-
      55.  00:865B                      carga_patrones_sprites_nivel1:
      56.  00:865B                      
      57.  00:865B                      	;~ ;sprite sprite_reliquia
      58.  00:865B                      	;~ LD		HL,sprite_reliquia
      59.  00:865B                      	;~ LD		DE,#3880
      60.  00:865B                      	;~ LD		BC,32				;32 bytes (sprites de 2 x 2)
      61.  00:865B                      	;~ CALL	LDIRVM
      62.  00:865B                      
      63.  00:865B                      fin_carga_patrones_sprites:
      64.  00:865B  C9                  	RET
      65.  00:865C                      
      66.  00:865C                      
      67.  00:865C                      ;;=====================================================
      68.  00:865C                      ;;ACTUALIZA_ARRAY_SPRITES_VRAM
      69.  00:865C                      ;;=====================================================	
      70.  00:865C                      ; función: 	copia el array con los valores de los sprites (pos, color, plano) en VRAM
      71.  00:865C                      ; entrada: 	-
      72.  00:865C                      ; salida: 	-
      73.  00:865C                      ; toca: 	todos los registros. Como me interesa la velocidad, si necesito copiar de algo lo hago fuera
      74.  00:865C                      render_sprites:
      75.  00:865C                      	;volcando el array con toda la info de los sprites a la zona de atributos de sprites
      76.  00:865C  21 A5 A8            	LD		HL,array_sprites
      77.  00:865F  11 00 1B            	LD		DE,SPRART
      78.  00:8662  01 80 00            	LD		BC,4 * 32				;32 sprites x 4 bytes controlando el sprite (Y, X, plano, color)
      79.  00:8665  C3 5C 00            	JP		LDIRVM
      80.  00:8668                      fin_actualiza_array_sprites_vram:
      81.  00:8668                      
      82.  00:8668                      
      83.  00:8668                      ;;=====================================================
      84.  00:8668                      ;;VUELCA_RESULTADO_PUNTOMIRA_ARRAY
      85.  00:8668                      ;;=====================================================	
      86.  00:8668                      ; función: 	coloca los valores del punto de mira en la variable array_sprites para ser volcados en VRAM
      87.  00:8668                      ; entrada: 	array_sprites_pm, prota.XXXXX
      88.  00:8668                      ; salida: 	-
      89.  00:8668                      ; toca: 	-
      90.  00:8668                      vuelca_resultado_puntomira_array:
      91.  00:8668  DD 21 A5 A8         	LD		IX, array_sprites_pm
      92.  00:866C                      	;posición y de los dos sprites que conforman el punto de mira
      93.  00:866C  3A FC A6            	LD		 A, (prota.posy)
      94.  00:866F  DD 77 00            	LD		(IX  ), A
      95.  00:8672  DD 77 04            	LD		(IX+4), A
      96.  00:8675                      	;posición x de los dos sprites que conforman el punto de mira
      97.  00:8675  3A FB A6            	LD		 A, (prota.posx)
      98.  00:8678  DD 77 01            	LD		(IX+1), A
      99.  00:867B  DD 77 05            	LD		(IX+5), A
     100.  00:867E                      	;plano
     101.  00:867E  DD 36 02 00         	LD		(IX+2), 0
     102.  00:8682  DD 36 06 04         	LD		(IX+6), 4	;al ser sprites de 16x16 hay que ir de 4 en 4
     103.  00:8686                      	;color
     104.  00:8686  3A FD A6            	LD		 A, (prota.escena)
     105.  00:8689  B7                  	OR		 A
     106.  00:868A  C2 96 86            	JP		NZ,.codigo_color_2
     107.  00:868D                      .codigo_color_1:
     108.  00:868D  DD 36 03 0F         	LD		(IX+3), COLBLANCO
     109.  00:8691  DD 36 07 08         	LD		(IX+7), COLROJO
     110.  00:8695  C9                  	RET
     111.  00:8696                      .codigo_color_2:
     112.  00:8696  DD 36 03 08         	LD		(IX+3), COLROJO
     113.  00:869A  DD 36 07 0F         	LD		(IX+7), COLBLANCO
     114.  00:869E  C9                  	RET
     115.  00:869F                      fin_vuelca_resultado_puntomira_array:
     116.  00:869F                      
     117.  00:869F                      
     118.  00:869F                      ;;=====================================================
     119.  00:869F                      ;;CHECK_PLAYER
     120.  00:869F                      ;;=====================================================	
     121.  00:869F                      ; función: 	MIRA EL CONTROL Y APLICA LA LOGICA DE MOVIMIENTO DEL PROTAGONISTA
     122.  00:869F                      ; entrada: 	-
     123.  00:869F                      ; salida: 	-
     124.  00:869F                      ; toca: 	A
     125.  00:869F                      check_player:
     126.  00:869F  CD 3E 87            	CALL	update_controllers_status
     127.  00:86A2  B7                  	OR		 A
     128.  00:86A3  C8                  	RET		 Z						;si no se ha pulsado nada no se necesita mirar nada
     129.  00:86A4                      
     130.  00:86A4  CB 1F               	RR		 A
     131.  00:86A6  DC BF 86            	CALL	 C, mueve_arriba
     132.  00:86A9  CB 1F               	RR		 A
     133.  00:86AB  DC DB 86            	CALL	 C, mueve_abajo
     134.  00:86AE  CB 1F               	RR		 A
     135.  00:86B0  DC EA 86            	CALL	 C, mueve_izquierda
     136.  00:86B3  CB 1F               	RR		 A
     137.  00:86B5  DC CC 86            	CALL	 C, mueve_derecha
     138.  00:86B8                      	
     139.  00:86B8                      	;zona para mirar disparo Recibe A que tendrá 0000 0 0 X-letra M X-espacio 
     140.  00:86B8  CD F7 86            	CALL	mira_disparo
     141.  00:86BB                      	
     142.  00:86BB  C3 68 86            	JP		vuelca_resultado_puntomira_array
     143.  00:86BE                      f;in_check_player:
     144.  00:86BE  C9                  	RET
     145.  00:86BF                      
     138   00:86BF                      	
     139   00:86BF                      	include "subr_teclado_joy.asm"
       1.  00:86BF                      ;;=====================================================
       2.  00:86BF                      ;;SUBRUTINAS QUE CAPTURN EL JOYSTICK Y TECLADO Y MUEVEN PUNTO DE MIRA
       3.  00:86BF                      ;;=====================================================
       4.  00:86BF                      
       5.  00:86BF                      ;;=====================================================
       6.  00:86BF                      ;;MUEVE_ARRIBA
       7.  00:86BF                      ;;=====================================================	
       8.  00:86BF                      ; función: 	decrementa y si se no sale de los límites el valor del punto de mira a la derecha
       9.  00:86BF                      ; entrada: 	-
      10.  00:86BF                      ; salida: 	-
      11.  00:86BF                      ; toca: 	-
      12.  00:86BF                      mueve_arriba:
      13.  00:86BF  F5                  	PUSH		AF
      14.  00:86C0                      	
      15.  00:86C0  3A FC A6            	LD		 	 A, (prota.posy)
      16.  00:86C3  3D                  	DEC			 A
      17.  00:86C4  CA CA 86            	JP			 Z,.no_decrementa_y
      18.  00:86C7  32 FC A6            	LD			(prota.posy), A
      19.  00:86CA                      	
      20.  00:86CA                      .no_decrementa_y:
      21.  00:86CA  F1                  	POP			AF
      22.  00:86CB                      fin_mueve_arriba:
      23.  00:86CB  C9                  	RET
      24.  00:86CC                      
      25.  00:86CC                      
      26.  00:86CC                      ;;=====================================================
      27.  00:86CC                      ;;MUEVE_DERECHA
      28.  00:86CC                      ;;=====================================================	
      29.  00:86CC                      ; función: 	incrementa si se no sale de los límites el valor del punto de mira a la derecha
      30.  00:86CC                      ; entrada: 	-
      31.  00:86CC                      ; salida: 	-
      32.  00:86CC                      ; toca: 	-
      33.  00:86CC                      mueve_derecha:
      34.  00:86CC  F5                  	PUSH		AF
      35.  00:86CD                      	
      36.  00:86CD  3A FB A6            	LD		 	 A, (prota.posx)
      37.  00:86D0  3C                  	INC			 A
      38.  00:86D1  FE EF               	CP			 A, LIMPANTDER - 16
      39.  00:86D3  CA D9 86            	JP			 Z, .no_incrementa_x
      40.  00:86D6  32 FB A6            	LD			(prota.posx), A
      41.  00:86D9                      	
      42.  00:86D9                      .no_incrementa_x:
      43.  00:86D9  F1                  	POP			AF
      44.  00:86DA                      fin_mueve_derecha:
      45.  00:86DA  C9                  	RET
      46.  00:86DB                      
      47.  00:86DB                      
      48.  00:86DB                      ;;=====================================================
      49.  00:86DB                      ;;MUEVE_ABAJO
      50.  00:86DB                      ;;=====================================================	
      51.  00:86DB                      ; función: 	incrementa y si se no sale de los límites el valor del punto de mira abajo
      52.  00:86DB                      ; entrada: 	-
      53.  00:86DB                      ; salida: 	-
      54.  00:86DB                      ; toca: 	-
      55.  00:86DB                      mueve_abajo:
      56.  00:86DB  F5                  	PUSH		AF
      57.  00:86DC                      	
      58.  00:86DC  3A FC A6            	LD		 	 A, (prota.posy)
      59.  00:86DF  3C                  	INC			 A
      60.  00:86E0  FE 70               	CP			 A, LIMPANTABA - 16
      61.  00:86E2  CA E8 86            	JP			 Z,.no_incrementa_y
      62.  00:86E5  32 FC A6            	LD			(prota.posy), A
      63.  00:86E8                      	
      64.  00:86E8                      .no_incrementa_y:
      65.  00:86E8  F1                  	POP			AF
      66.  00:86E9                      fin_mueve_abajo:
      67.  00:86E9  C9                  	RET
      68.  00:86EA                      	
      69.  00:86EA                      	
      70.  00:86EA                      ;;=====================================================
      71.  00:86EA                      ;;MUEVE_IZQUIERDA
      72.  00:86EA                      ;;=====================================================	
      73.  00:86EA                      ; función: 	decrementa x si se no sale de los límites el valor del punto de mira a la izquierda
      74.  00:86EA                      ; entrada: 	-
      75.  00:86EA                      ; salida: 	-
      76.  00:86EA                      ; toca: 	-
      77.  00:86EA                      mueve_izquierda:
      78.  00:86EA  F5                  	PUSH		AF
      79.  00:86EB                      	
      80.  00:86EB  3A FB A6            	LD		 	 A, (prota.posx)
      81.  00:86EE  3D                  	DEC			 A
      82.  00:86EF                      ;	CP			 A, LIMPANTIZQ
      83.  00:86EF  CA F5 86            	JP			 Z,.no_decrementa_x
      84.  00:86F2  32 FB A6            	LD			(prota.posx), A
      85.  00:86F5                      	
      86.  00:86F5                      .no_decrementa_x:
      87.  00:86F5  F1                  	POP			AF
      88.  00:86F6                      fin_mueve_izquierda:
      89.  00:86F6  C9                  	RET
      90.  00:86F7                      
      91.  00:86F7                      
      92.  00:86F7                      
      93.  00:86F7                      ;;=====================================================
      94.  00:86F7                      ;;MIRA_DISPARO
      95.  00:86F7                      ;;=====================================================	
      96.  00:86F7                      ; función: 	Mira si se ha pulsado alguno de los dos disparos
      97.  00:86F7                      ; entrada: 	A que tendrá 0000 0 0 X-letra M X-espacio 
      98.  00:86F7                      ; salida: 	-
      99.  00:86F7                      ; toca: 	A, B
     100.  00:86F7                      mira_disparo:
     101.  00:86F7                      .mira_boton_pulsado1:
     102.  00:86F7  CB 1F               	RR		 A						;preparo en el carry si se ha pulsado botón 1
     103.  00:86F9  D2 22 87            	JP		 NC, .mira_boton_pulsado2					
     104.  00:86FC  F5                  	PUSH	AF						;copia A para usarlo después
     105.  00:86FD                      	;se ha pulsado barra o boton 1
     106.  00:86FD  3A 00 A7            	LD		 A, (prota.cadencia)
     107.  00:8700  B7                  	OR		 A
     108.  00:8701  CA 0F 87            	JP		 Z, .efectua_disparo	;toca efectuar disparo realmente porque se ha pulsado lo suficiente el disparo
     109.  00:8704                      .no_efectua_disparo: ;IF
     110.  00:8704  3D                  		DEC		 A
     111.  00:8705  32 00 A7            		LD		(prota.cadencia), A	;resto cadencia hasta próximo disparo "real" (no automático por haber pulsado una tecla e ir demasiado rápido)
     112.  00:8708  AF                  		XOR		 A 
     113.  00:8709  32 FD A6            		LD		(prota.escena), A
     114.  00:870C  C3 21 87            		JP		.fin_mira_disparo1
     115.  00:870F                      .efectua_disparo:	;ELSE
     116.  00:870F                      		;cambio colores del sprite
     117.  00:870F  3A FD A6            		LD		 A, (prota.escena)
     118.  00:8712  2F                  		CPL		 
     119.  00:8713  32 FD A6            		LD		(prota.escena), A
     120.  00:8716                      		;reseteo cadencia para el próximo disparo
     121.  00:8716  3E 04               		LD		 A, LIMCADENCIA						;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
     122.  00:8718  32 00 A7            		LD		 (prota.cadencia), A				;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
     123.  00:871B                      		;ejecuto sonido								;; ajustar cadencia y que cuando el disparo sea efectivo se reseteen los colores
     124.  00:871B  AF                  		XOR		 A
     125.  00:871C  0E 01               		LD		 C, 1
     126.  00:871E  CD E6 8D            		CALL	ayFX_INIT	
     127.  00:8721                      .fin_mira_disparo1
     128.  00:8721                      
     129.  00:8721  F1                  	POP		AF
     130.  00:8722                      .mira_boton_pulsado2:
     131.  00:8722  CB 1F               	RR		 A
     132.  00:8724  D0                  	RET		 NC
     133.  00:8725                      	;se ha pulsado shift o boton 2
     134.  00:8725                      	
     135.  00:8725  3A 0D A7            	LD		 A, (prota_reliquias)	;miro si le quedan reliquias
     136.  00:8728  B7                  	OR		 A
     137.  00:8729  C8                  	RET		 Z						;si no le quedan salgo ya
     138.  00:872A                      	
     139.  00:872A                      	;actuaciones si se usa la reliquia botón 2 o M y quedn reliquias.. (antes ya se puso el valor en A)
     140.  00:872A  3A 0D A7            	LD		A, (prota_reliquias)
     141.  00:872D  3D                  	DEC		 A
     142.  00:872E  32 0D A7            	LD		(prota_reliquias), A
     143.  00:8731                      	
     144.  00:8731  3E 01               	LD		 A, 1
     145.  00:8733  0E 01               	LD		 C, 1
     146.  00:8735  CD E6 8D            	CALL	ayFX_INIT
     147.  00:8738                      	
     148.  00:8738  CD 74 84            	CALL 	efecto_imagen_tira_reliquia
     149.  00:873B                      	
     150.  00:873B  C3 92 82            	JP		pinta_reliquias
     151.  00:873E                      fin_mira_disparo:
     152.  00:873E                      ;	RET		
     153.  00:873E                      
     154.  00:873E                      
     155.  00:873E                      ;;============================================================
     156.  00:873E                      ;;Código de D. Fernando García (BitVision) (al que siempre le estaré agradecido)
     157.  00:873E                      ;check_8th_keyboard_row
     158.  00:873E                      ;read_joy_0
     159.  00:873E                      ;check_8th_keyboard_row
     160.  00:873E                      ;check_4th_keyboard_row
     161.  00:873E                      ;;============================================================
     162.  00:873E                      ;;  usa constantes:
     163.  00:873E                      ;PSG_A  equ  0a0h  ;reg address
     164.  00:873E                      ;PSG_W  equ  0a1h  ;reg data WR
     165.  00:873E                      ;PSG_R  equ  0a2h  ;reg data
     166.  00:873E                      
     167.  00:873E                      ;;=====================================================
     168.  00:873E                      ;;update_controllers_status
     169.  00:873E                      ;;=====================================================	
     170.  00:873E                      ;depends on the next rountine
     171.  00:873E                      ;  returns
     172.  00:873E                      ;  a - 0P2TRLDU
     173.  00:873E                      
     174.  00:873E                      update_controllers_status:
     175.  00:873E  CD 89 87                 call  check_8th_keyboard_row
     176.  00:8741                      [4]  rrc    a
     176.  00:8741  CB 0F CB 0F CB 0F CB 0F 
     177.  00:8749  47                       ld    b,a    		;save for later  xxxTRDUL
     178.  00:874A                      
     179.  00:874A  E6 01                    and    #01    		;save L
     180.  00:874C  CB 27                    sla    a
     181.  00:874E  CB 27                    sla    a    		;now 00000L00
     182.  00:8750  4F                       ld    c,a    		;save for later
     183.  00:8751                      
     184.  00:8751  78                       ld    a,b    		;again we've got xxxTRDUL. I am interested on leaving 000000DU on a
     185.  00:8752  CB 3F                    srl    a
     186.  00:8754  E6 03                    and    00000011b
     187.  00:8756                      						;we've got 000000DU on a
     188.  00:8756  B1                       or    c    		;now we've got 00000LDU
     189.  00:8757  4F                       ld    c,a    		;save for later
     190.  00:8758                      
     191.  00:8758  78                       ld    a,b
     192.  00:8759  E6 18                    and    00011000b 	;we've got 000TR000
     193.  00:875B  B1                       or    c
     194.  00:875C                           ;finally    000TRLDU
     195.  00:875C                      
     196.  00:875C                           ;and    00000100   ;preserve just
     197.  00:875C  47                       ld    b,a    		;save for later
     198.  00:875D  CD 97 87                 call  check_4th_keyboard_row      ;check M & P
     199.  00:8760  F5                       push  af
     200.  00:8761  E6 04                    and    00000100b	;filter just M
     201.  00:8763  87                       add    a
     202.  00:8764  87                       add    a
     203.  00:8765  87                       add    a           ;shift 3th to 6th bit
     204.  00:8766  B0                       or    b           	;merge with previous
     205.  00:8767  47                       ld    b,a
     206.  00:8768                      
     207.  00:8768  CD 75 87                 call  read_joy_0
     208.  00:876B  E6 3F                    and    00111111b  	;we want just 002TRLDU  from joystick    (2 is second trigger)
     209.  00:876D  B0                       or    b      		;added 000TRLDU from keyboard
     210.  00:876E  47                       ld    b,a      	;save for later
     211.  00:876F  F1                       pop    af      	; let's check on P
     212.  00:8770                      
     213.  00:8770  E6 20                    and    00100000b
     214.  00:8772  87                       add    a      		;P status on 6th bit  ... so 0P2TRLDU
     215.  00:8773  B0                       or    b
     216.  00:8774                      
     217.  00:8774  C9                       ret
     218.  00:8775                      
     219.  00:8775                      
     220.  00:8775                      ;ret
     221.  00:8775                      ;  a -            xx2TRLDU
     222.  00:8775                      read_joy_0:
     223.  00:8775  F3                         di
     224.  00:8776  3E 0F                      ld    a,15
     225.  00:8778  D3 A0                      out    [PSG_A],a
     226.  00:877A  DB A2                      in    a,[PSG_R]
     227.  00:877C  E6 BF                      and    10111111b        ;joy0
     228.  00:877E                      
     229.  00:877E  D3 A1                      out    [PSG_W],a        ;set joy0
     230.  00:8780                      
     231.  00:8780  3E 0E                      ld    a,14
     232.  00:8782  D3 A0                      out    [PSG_A],a
     233.  00:8784  DB A2                      in    a,[PSG_R]
     234.  00:8786                      
     235.  00:8786  FB                         ei
     236.  00:8787  2F                         cpl
     237.  00:8788                      
     238.  00:8788  C9                         ret
     239.  00:8789                      
     240.  00:8789                      
     241.  00:8789                      ;ret
     242.  00:8789                      ;  a -      RDULxxxT
     243.  00:8789                      check_8th_keyboard_row:
     244.  00:8789  F3                       di
     245.  00:878A  DB AA                    in    a,(#aa)
     246.  00:878C  E6 F0                    and    #f0
     247.  00:878E  F6 08                    or    8
     248.  00:8790  D3 AA                    out    (#aa),a
     249.  00:8792  DB A9                    in    a,(#a9)
     250.  00:8794  FB                       ei
     251.  00:8795  2F                       cpl
     252.  00:8796                      
     253.  00:8796  C9                       ret
     254.  00:8797                      
     255.  00:8797                      
     256.  00:8797                      ;ret
     257.  00:8797                      ;  a -      xxxxxMxx
     258.  00:8797                      check_4th_keyboard_row:
     259.  00:8797  F3                       di
     260.  00:8798  DB AA                    in    a,(#aa)
     261.  00:879A  E6 F0                    and    #f0
     262.  00:879C  F6 04                    or    4
     263.  00:879E  D3 AA                    out    (#aa),a
     264.  00:87A0  DB A9                    in    a,(#a9)
     265.  00:87A2  FB                       ei
     266.  00:87A3  2F                       cpl
     267.  00:87A4                      
     268.  00:87A4  C9                       ret
     269.  00:87A5                      
     270.  00:87A5                      ;--------------------------------------------
     271.  00:87A5                      
     272.  00:87A5                      
     273.  00:87A5                      
     274.  00:87A5                      
     275.  00:87A5                      
     276.  00:87A5                      
     277.  00:87A5                      
     278.  00:87A5                      
     140   00:87A5                      	
     141   00:87A5                      	include "subr_sonido.asm"
       1.  00:87A5                      
       2.  00:87A5                      ;;=====================================================
       3.  00:87A5                      ;;SUBRUTINAS PARA SONIDOS
       4.  00:87A5                      ;;=====================================================	
       5.  00:87A5                      
       6.  00:87A5                      ;;=====================================================
       7.  00:87A5                      ;;INICIALIZA_REPLAYER_EFECTOS_INTERRUPCIONES
       8.  00:87A5                      ;;=====================================================	
       9.  00:87A5                      ; función: 	inicializa: replayer de música, player de efectos e interrupciones
      10.  00:87A5                      ; entrada: 	-
      11.  00:87A5                      ; salida: 	-
      12.  00:87A5                      ; toca: 	HL, A
      13.  00:87A5                      inicializa_replayer_efectos_interrupciones:
      14.  00:87A5  F3                  	DI
      15.  00:87A6                      
      16.  00:87A6                      	;inicializacion de replayer musical
      17.  00:87A6  21 4E 8E            	LD		HL, song-99			; hl <- initial address of module - 99
      18.  00:87A9  CD E5 87            	CALL	PT3_INIT			; Inits PT3 player
      19.  00:87AC                      		
      20.  00:87AC                      	;inicializacion del reproductor de efectos sonoros
      21.  00:87AC  21 19 98            	LD		HL, sfx_bank
      22.  00:87AF  CD D4 8D            	CALL	ayFX_SETUP
      23.  00:87B2                      	
      24.  00:87B2                      	;Engancha nuestra rutina de servicio al gancha que deja preparado la BIOS cuando se termina de pintar la pantalla (50 o 60 veces por segundo)
      25.  00:87B2  3E C3               	LD		A, #C3
      26.  00:87B4  32 9F FD            	LD		[H.TIMI], A
      27.  00:87B7  21 BF 87            	LD		HL, subrutina_isr
      28.  00:87BA  22 A0 FD            	LD		[H.TIMI+1], HL
      29.  00:87BD                      	
      30.  00:87BD  FB                  	EI		;optimizacion:
      31.  00:87BE                      			;piensa que las dos ultimas lineas podrian haber sido: 
      32.  00:87BE                      			;ei						;primero ei
      33.  00:87BE                      			;ld		[H.TIMI+1],hl	;luego este ld
      34.  00:87BE                      									;PENSAR (y consultar ) PORQUE!!!!
      35.  00:87BE                      fin_inicializa_replayer_efectos_interrupciones:
      36.  00:87BE  C9                  	RET
      37.  00:87BF                      
      38.  00:87BF                      
      39.  00:87BF                      
      40.  00:87BF                      ;;=====================================================
      41.  00:87BF                      ;;NUESTRA_ISR
      42.  00:87BF                      ;;=====================================================	
      43.  00:87BF                      ; función: 	envía datos al PSG + toca un trozo de música + toca trozo de 
      44.  00:87BF                      ; entrada: 	-
      45.  00:87BF                      ; salida: 	-
      46.  00:87BF                      ; toca: 	HL, A
      47.  00:87BF                      subrutina_isr:
      48.  00:87BF  CD 2A 8D            	CALL	PT3_ROUT			;envia los datos a los registros del PSG
      49.  00:87C2  CD 32 8C            	CALL	PT3_PLAY			;calcula el siguiente 'trocito' de musica que sera enviado al proxima vez
      50.  00:87C5  C3 1C 8E            	JP		ayFX_PLAY			;calcula el siguiente 'trocito' de efecto especial de sonido que sera enviado la proxima vez
      51.  00:87C8                      fin_subrutina_isr:
      52.  00:87C8                      	;RET
      53.  00:87C8                      
      54.  00:87C8                      
      55.  00:87C8                      
      56.  00:87C8                      ;;=====================================================
      57.  00:87C8                      ;;DEFINICIÓN DE SUBRUTINAS DE FERNANDO PARA COMPRESIÓN Y SONIDO
      58.  00:87C8                      ;;=====================================================
      59.  00:87C8                      subrutinas_sonido:
      60.  00:87C8                      	include	"PT3-ROM_sjasm.asm"
       1:  00:87C8                      		; --- PT3 REPLAYER WORKING ON ROM ---
       2:  00:87C8                      		; --- Can be assembled with asMSX ---
       3:  00:87C8                      		; --- ROM version: MSX-KUN        ---
       4:  00:87C8                      		; --- asMSX version 2: SapphiRe   ---
       5:  00:87C8                      
       6:  00:87C8                      ; Based on MSX full version of PT3 by Dioniso
       7:  00:87C8                      ;
       8:  00:87C8                      ; This version of the replayer can be used with any note table
       9:  00:87C8                      ; This version also allows the use of PT3 commands
      10:  00:87C8                      ; First 99 bytes of each PT3 module should be stripped off
      11:  00:87C8                      ;
      12:  00:87C8                      ; PLAY and PSG WRITE routines seperated to allow independent calls
      13:  00:87C8                      ;
      14:  00:87C8                      ; ROM LENGTH: 1549 bytes
      15:  00:87C8                      ; RAM LENGTH:  576 bytes
      16:  00:87C8                      
      17:  00:87C8                      
      18:  00:87C8                      
      19:  00:87C8                      ;SJASM version by BTV 2016
      20:  00:87C8                      
      21:  00:87C8                      
      22:  00:87C8                      		; --- CONSTANT VALUES DEFINITION ---
      23:  00:87C8                      
      24:  00:87C8                      ;ChannelsVars
      25:  00:87C8                      ;struc	CHNPRM
      26:  00:87C8                      ;reset group
      27:  00:87C8  (00:0000)           CHNPRM_PsInOr	equ 0	;RESB 1
      28:  00:87C8  (00:0001)           CHNPRM_PsInSm	equ 1	;RESB 1
      29:  00:87C8  (00:0002)           CHNPRM_CrAmSl	equ 2	;RESB 1
      30:  00:87C8  (00:0003)           CHNPRM_CrNsSl	equ 3	;RESB 1
      31:  00:87C8  (00:0004)           CHNPRM_CrEnSl	equ 4	;RESB 1
      32:  00:87C8  (00:0005)           CHNPRM_TSlCnt	equ 5	;RESB 1
      33:  00:87C8  (00:0006)           CHNPRM_CrTnSl	equ 6	;RESW 1
      34:  00:87C8  (00:0008)           CHNPRM_TnAcc	equ 8	;RESW 1
      35:  00:87C8  (00:000A)           CHNPRM_COnOff	equ 10	;RESB 1
      36:  00:87C8                      ;reset group
      37:  00:87C8                      
      38:  00:87C8  (00:000B)           CHNPRM_OnOffD	equ 11	;RESB 1
      39:  00:87C8                      
      40:  00:87C8                      ;IX for PTDECOD here [+12]
      41:  00:87C8  (00:000C)           CHNPRM_OffOnD	equ 12	;RESB 1
      42:  00:87C8  (00:000D)           CHNPRM_OrnPtr	equ 13	;RESW 1
      43:  00:87C8  (00:000F)           CHNPRM_SamPtr	equ 15	;RESW 1
      44:  00:87C8  (00:0011)           CHNPRM_NNtSkp	equ 17	;RESB 1
      45:  00:87C8  (00:0012)           CHNPRM_Note	equ 18	;RESB 1
      46:  00:87C8  (00:0013)           CHNPRM_SlToNt	equ 19	;RESB 1
      47:  00:87C8  (00:0014)           CHNPRM_Env_En	equ 20	;RESB 1
      48:  00:87C8  (00:0015)           CHNPRM_Flags	equ 21	;RESB 1
      49:  00:87C8                       ;Enabled - 0,SimpleGliss - 2
      50:  00:87C8  (00:0016)           CHNPRM_TnSlDl	equ 22	;RESB 1
      51:  00:87C8  (00:0017)           CHNPRM_TSlStp	equ 23	;RESW 1
      52:  00:87C8  (00:0019)           CHNPRM_TnDelt	equ 25	;RESW 1
      53:  00:87C8  (00:001B)           CHNPRM_NtSkCn	equ 27	;RESB 1
      54:  00:87C8  (00:001C)           CHNPRM_Volume	equ 28	;RESB 1
      55:  00:87C8  (00:001D)           CHNPRM_Size	equ 29	;RESB 1
      56:  00:87C8                      ;endstruc
      57:  00:87C8                      
      58:  00:87C8                      ;struc	AR
      59:  00:87C8  (00:0000)           AR_TonA		equ 0	;RESW 1
      60:  00:87C8  (00:0002)           AR_TonB		equ 2	;RESW 1
      61:  00:87C8  (00:0004)           AR_TonC		equ 4	;RESW 1
      62:  00:87C8  (00:0006)           AR_Noise	equ 6	;RESB 1
      63:  00:87C8  (00:0007)           AR_Mixer	equ 7	;RESB 1
      64:  00:87C8  (00:0008)           AR_AmplA	equ 8	;RESB 1
      65:  00:87C8  (00:0009)           AR_AmplB	equ 9	;RESB 1
      66:  00:87C8  (00:000A)           AR_AmplC	equ 10	;RESB 1
      67:  00:87C8  (00:000B)           AR_Env		equ 11	;RESW 1
      68:  00:87C8  (00:000D)           AR_EnvTp	equ 13	;RESB 1
      69:  00:87C8                      ;endstruc
      70:  00:87C8                      
      71:  00:87C8                      		; --- CODE STARTS HERE ---
      72:  00:87C8                      
      73:  00:87C8  21 00 F0            CHECKLP:	LD	HL,PT3_SETUP
      74:  00:87CB  CB FE               		SET	7,[HL]
      75:  00:87CD  CB 46               		BIT	0,[HL]
      76:  00:87CF  C8                  		RET	Z
      77:  00:87D0  E1                  		POP	HL
      78:  00:87D1  21 7A F0            		LD	HL,DelyCnt
      79:  00:87D4  34                  		INC	[HL]
      80:  00:87D5  21 3E F0            		LD	HL,ChanA+CHNPRM_NtSkCn
      81:  00:87D8  34                  		INC	[HL]
      82:  00:87D9  AF                  PT3_MUTE:	XOR	A
      83:  00:87DA  67                  		LD	H,A
      84:  00:87DB  6F                  		LD	L,A
      85:  00:87DC  32 48 F1            		LD	[AYREGS+AR_AmplA],A
      86:  00:87DF  22 49 F1            		LD	[AYREGS+AR_AmplB],HL
      87:  00:87E2  C3 2B 8D            		JP	ROUT_A0
      88:  00:87E5                      
      89:  00:87E5                      PT3_INIT:	;HL - AddressOfModule - 100
      90:  00:87E5  22 01 F0            		LD [PT3_MODADDR],HL
      91:  00:87E8  E5                  		PUSH HL
      92:  00:87E9  11 64 00            		LD DE,100
      93:  00:87EC  19                  		ADD HL,DE
      94:  00:87ED  7E                  		LD A,[HL]
      95:  00:87EE  32 1C F0            		LD [PT3_Delay],A
      96:  00:87F1  E5                  		PUSH HL
      97:  00:87F2  DD E1               		POP IX
      98:  00:87F4  19                  		ADD HL,DE
      99:  00:87F5  22 03 F0            		LD [PT3_CrPsPtr],HL
     100:  00:87F8  DD 5E 02            		LD E,[IX+102-100]
     101:  00:87FB  19                  		ADD HL,DE
     102:  00:87FC  23                  		INC HL
     103:  00:87FD  22 18 F0            		LD [PT3_LPosPtr],HL
     104:  00:8800  D1                  		POP DE
     105:  00:8801  DD 6E 03            		LD L,[IX+103-100]
     106:  00:8804  DD 66 04            		LD H,[IX+104-100]
     107:  00:8807  19                  		ADD HL,DE
     108:  00:8808  22 1A F0            		LD [PT3_PatsPtr],HL
     109:  00:880B  21 A9 00            		LD HL,169
     110:  00:880E  19                  		ADD HL,DE
     111:  00:880F  22 07 F0            		LD [PT3_OrnPtrs],HL
     112:  00:8812  21 69 00            		LD HL,105
     113:  00:8815  19                  		ADD HL,DE
     114:  00:8816  22 05 F0            		LD [PT3_SAMPTRS],HL
     115:  00:8819  21 00 F0            		LD HL,PT3_SETUP
     116:  00:881C  CB BE               		RES 7,[HL]
     117:  00:881E                      
     118:  00:881E                      		; --- note table data depacker ---
     119:  00:881E                      		; Depacks first 12 tones of each tone table
     120:  00:881E                      
     121:  00:881E  11 9F 8D            		LD DE,T_PACK
     122:  00:8821  01 B1 F1            		LD BC,T1_+(2*49)-1
     123:  00:8824  1A                  .TP_0:		LD A,[DE]
     124:  00:8825  13                  		INC DE
     125:  00:8826  FE 1E               		CP 15*2
     126:  00:8828  30 06               		JR NC,.TP_1
     127:  00:882A  67                  		LD H,A
     128:  00:882B  1A                  		LD A,[DE]
     129:  00:882C  6F                  		LD L,A
     130:  00:882D  13                  		INC DE
     131:  00:882E  18 07               		JR .TP_2
     132:  00:8830  D5                  .TP_1:		PUSH DE
     133:  00:8831  16 00               		LD D,0
     134:  00:8833  5F                  		LD E,A
     135:  00:8834  19                  		ADD HL,DE
     136:  00:8835  19                  		ADD HL,DE
     137:  00:8836  D1                  		POP DE
     138:  00:8837  7C                  .TP_2:		LD A,H
     139:  00:8838  02                  		LD [BC],A
     140:  00:8839  0B                  		DEC BC
     141:  00:883A  7D                  		LD A,L
     142:  00:883B  02                  		LD [BC],A
     143:  00:883C  0B                  		DEC BC
     144:  00:883D  D6 F0               		SUB $F0
     145:  00:883F  20 E3               		JR NZ,.TP_0
     146:  00:8841                      
     147:  00:8841                      		; --- INITIALIZE PT3 VARIABLES ---
     148:  00:8841  21 23 F0            		LD HL,VARS
     149:  00:8844  77                  		LD [HL],A
     150:  00:8845  11 24 F0            		LD DE,VARS+1
     151:  00:8848  01 2C 01            		LD BC,VAR0END-VARS-1
     152:  00:884B  ED B0               		LDIR
     153:  00:884D                      
     154:  00:884D  3C                  		INC A
     155:  00:884E  32 7A F0            		LD [DelyCnt],A
     156:  00:8851  21 01 F0            		LD HL,$F001 ;H - CHNPRM_Volume, L - CHNPRM_NtSkCn
     157:  00:8854  22 3E F0            		LD [ChanA+CHNPRM_NtSkCn],HL
     158:  00:8857  22 5B F0            		LD [ChanB+CHNPRM_NtSkCn],HL
     159:  00:885A  22 78 F0            		LD [ChanC+CHNPRM_NtSkCn],HL
     160:  00:885D                      
     161:  00:885D  21 9B 8D            		LD HL,EMPTYSAMORN
     162:  00:8860  22 12 F0            		LD [PT3_AdInPtA],HL ;ptr to zero
     163:  00:8863  22 30 F0            		LD [ChanA+CHNPRM_OrnPtr],HL ;ornament 0 is "0,1,0"
     164:  00:8866  22 4D F0            		LD [ChanB+CHNPRM_OrnPtr],HL ;in all versions from
     165:  00:8869  22 6A F0            		LD [ChanC+CHNPRM_OrnPtr],HL ;3.xx to 3.6x and VTII
     166:  00:886C                      
     167:  00:886C  22 32 F0            		LD [ChanA+CHNPRM_SamPtr],HL ;S1 There is no default
     168:  00:886F  22 4F F0            		LD [ChanB+CHNPRM_SamPtr],HL ;S2 sample in PT3, so, you
     169:  00:8872  22 6C F0            		LD [ChanC+CHNPRM_SamPtr],HL ;S3 can comment S1,2,3; see
     170:  00:8875                      					    ;also EMPTYSAMORN comment
     171:  00:8875                      
     172:  00:8875                      		; --- NOTE TABLE CREATOR (c) Ivan Roshin, adapted by SapphiRe ---
     173:  00:8875  DD 7E FF            		LD A,[IX+99-100] ;TONE TABLE NUMBER
     174:  00:8878  17                  		RLA
     175:  00:8879  E6 07               		AND 7
     176:  00:887B  21 4B 8D            		LD HL,NT_DATA
     177:  00:887E  D5                  		PUSH DE
     178:  00:887F  50                  		LD D,B		; ld d,0 (bc is 0000 after LDIR)
     179:  00:8880  87                  		ADD A,A
     180:  00:8881  5F                  		LD E,A
     181:  00:8882  19                  		ADD HL,DE	; hl -> init of correct note table data
     182:  00:8883  5E                  		LD E,[HL]
     183:  00:8884  23                  		INC HL
     184:  00:8885  CB 3B               		SRL E
     185:  00:8887  9F                  		SBC A,A
     186:  00:8888  E6 A7               		AND $A7			;$00 (NOP) or $A7 (AND A)
     187:  00:888A  32 21 F0            		LD [PT3_NTL3],A		; CORRECT INSTRUCTION, DEPENDS OF SELECTED TABLE
     188:  00:888D  3E C9               		LD A,$C9		; RET CODE
     189:  00:888F  32 22 F0            		LD [PT3_NTL3+1],A	; RET PLACED
     190:  00:8892  EB                  		EX DE,HL
     191:  00:8893  C1                  		POP BC ;BC=T1_
     192:  00:8894  09                  		ADD HL,BC
     193:  00:8895                      
     194:  00:8895  1A                  		LD A,[DE]                           
     195:  00:8896                      
     196:  00:8896  01 5B 8D            		LD BC,T_
     197:  00:8899  81                  		ADD A,C
     198:  00:889A  4F                  		LD C,A
     199:  00:889B  88                  		ADC A,B
     200:  00:889C                      
     201:  00:889C  91                  		SUB C
     202:  00:889D  47                  		LD B,A
     203:  00:889E  C5                  		PUSH BC
     204:  00:889F  11 80 F0            		LD DE,NT_
     205:  00:88A2  D5                  		PUSH DE
     206:  00:88A3                      
     207:  00:88A3  06 0C               		LD B,12
     208:  00:88A5  C5                  .L1:		PUSH BC
     209:  00:88A6  4E                  		LD C,[HL]
     210:  00:88A7  23                  		INC HL
     211:  00:88A8  E5                  		PUSH HL
     212:  00:88A9  46                  		LD B,[HL]
     213:  00:88AA                      
     214:  00:88AA  D5                  		PUSH DE
     215:  00:88AB  EB                  		EX DE,HL
     216:  00:88AC  11 17 00            		LD DE,23
     217:  00:88AF  DD 26 08            		db $DD,$26,$08	;LD XH,8
     218:  00:88B2                      
     219:  00:88B2  CB 38               .L2:		SRL B
     220:  00:88B4  CB 19               		RR C
     221:  00:88B6  CD 21 F0            .L3:		CALL PT3_NTL3	;AND A or NOP
     222:  00:88B9  79                  		LD A,C
     223:  00:88BA  8A                  		ADC A,D	;=ADC 0
     224:  00:88BB  77                  		LD [HL],A
     225:  00:88BC  23                  		INC HL
     226:  00:88BD  78                  		LD A,B
     227:  00:88BE  8A                  		ADC A,D
     228:  00:88BF  77                  		LD [HL],A
     229:  00:88C0  19                  		ADD HL,DE
     230:  00:88C1  DD 25               		db $DD,$25	;DEC XH
     231:  00:88C3  20 ED               		JR NZ,.L2
     232:  00:88C5                      
     233:  00:88C5  D1                  		POP DE
     234:  00:88C6  13                  		INC DE
     235:  00:88C7  13                  		INC DE
     236:  00:88C8  E1                  		POP HL
     237:  00:88C9  23                  		INC HL
     238:  00:88CA  C1                  		POP BC
     239:  00:88CB  10 D8               		DJNZ .L1
     240:  00:88CD                      
     241:  00:88CD  E1                  		POP HL
     242:  00:88CE  D1                  		POP DE
     243:  00:88CF                      
     244:  00:88CF  7B                  		LD A,E
     245:  00:88D0  D5                  		PUSH DE
     246:  00:88D1  11 67 8D            		LD DE,TCOLD_1
     247:  00:88D4  BB                  		CP E
     248:  00:88D5  D1                  		POP DE
     249:  00:88D6  20 05               		JR NZ,.CORR_1
     250:  00:88D8  3E FD               		LD A,$FD
     251:  00:88DA  32 AE F0            		LD [NT_+$2E],A
     252:  00:88DD                      
     253:  00:88DD  1A                  .CORR_1:	LD A,[DE]
     254:  00:88DE  A7                  		AND A
     255:  00:88DF  28 11               		JR Z,.TC_EXIT
     256:  00:88E1  1F                  		RRA
     257:  00:88E2  F5                  		PUSH AF
     258:  00:88E3  87                  		ADD A,A
     259:  00:88E4  4F                  		LD C,A
     260:  00:88E5  09                  		ADD HL,BC
     261:  00:88E6  F1                  		POP AF
     262:  00:88E7  30 02               		JR NC,.CORR_2
     263:  00:88E9  35                  		DEC [HL]
     264:  00:88EA  35                  		DEC [HL]
     265:  00:88EB  34                  .CORR_2:	INC [HL]
     266:  00:88EC  A7                  		AND A
     267:  00:88ED  ED 42               		SBC HL,BC
     268:  00:88EF  13                  		INC DE
     269:  00:88F0  18 EB               		JR .CORR_1
     270:  00:88F2                      
     271:  00:88F2                      .TC_EXIT:	;POP AF
     272:  00:88F2                      
     273:  00:88F2                      		; --- CREATE PT3 VOLUME TABLE (c) Ivan Roshin, adapted by SapphiRe ---
     274:  00:88F2  21 11 00            		ld	hl,$11
     275:  00:88F5  54                  		ld	d,h
     276:  00:88F6  5C                  		ld	e,h
     277:  00:88F7  DD 21 50 F1         		ld	IX,VT_+16
     278:  00:88FB  06 0F               		ld	b,15
     279:  00:88FD  E5                  .INITV1:	push	hl
     280:  00:88FE  19                  		add	hl,de
     281:  00:88FF  EB                  		ex	de,hl
     282:  00:8900  ED 62               		sbc	hl,hl
     283:  00:8902  48                  		ld	c,b
     284:  00:8903  06 10               		ld	b,16
     285:  00:8905  7D                  .INITV2:	ld	a,l
     286:  00:8906  17                  		rla
     287:  00:8907  7C                  		ld	a,h
     288:  00:8908  CE 00               		adc	a,0
     289:  00:890A  DD 77 00            		ld	[ix],a
     290:  00:890D  DD 23               		inc	ix
     291:  00:890F  19                  		add	hl,de
     292:  00:8910  10 F3               		djnz	.INITV2
     293:  00:8912  E1                  		pop	hl
     294:  00:8913  7B                  		ld	a,e
     295:  00:8914  FE 77               		cp	$77
     296:  00:8916  20 01               		jr	nz,.INITV3
     297:  00:8918  1C                  		inc	e
     298:  00:8919  41                  .INITV3:	ld	b,c
     299:  00:891A  10 E1               		djnz	.INITV1
     300:  00:891C                      
     301:  00:891C  C9                  		RET
     302:  00:891D                      
     303:  00:891D                      		;pattern decoder
     304:  00:891D  DD 36 08 00         PD_OrSm:	LD [IX+(CHNPRM_Env_En-12)],0
     305:  00:8921  CD A7 8A            		CALL SETORN
     306:  00:8924  0A                  		LD A,[BC]
     307:  00:8925  03                  		INC BC
     308:  00:8926  0F                  		RRCA
     309:  00:8927                      
     310:  00:8927  87                  PD_SAM:		ADD A,A
     311:  00:8928  5F                  PD_SAM_:	LD E,A
     312:  00:8929  16 00               		LD D,0
     313:  00:892B  2A 05 F0            		LD HL,[PT3_SAMPTRS]
     314:  00:892E  19                  		ADD HL,DE
     315:  00:892F  5E                  		LD E,[HL]
     316:  00:8930  23                  		INC HL
     317:  00:8931  56                  		LD D,[HL]
     318:  00:8932  2A 01 F0            		LD HL,[PT3_MODADDR]
     319:  00:8935  19                  		ADD HL,DE
     320:  00:8936  DD 75 03            		LD [IX+(CHNPRM_SamPtr-12)],L
     321:  00:8939  DD 74 04            		LD [IX+(CHNPRM_SamPtr+1-12)],H
     322:  00:893C  18 41               		JR PD_LOOP
     323:  00:893E                      
     324:  00:893E  07                  PD_VOL:		RLCA
     325:  00:893F  07                  		RLCA
     326:  00:8940  07                  		RLCA
     327:  00:8941  07                  		RLCA
     328:  00:8942  DD 77 10            		LD [IX+(CHNPRM_Volume-12)],A
     329:  00:8945  18 3B               		JR PD_LP2
     330:  00:8947                      	
     331:  00:8947  DD 77 08            PD_EOff:	LD [IX+(CHNPRM_Env_En-12)],A
     332:  00:894A  DD 77 F4            		LD [IX+(CHNPRM_PsInOr-12)],A
     333:  00:894D  18 33               		JR PD_LP2
     334:  00:894F                      
     335:  00:894F  3D                  PD_SorE:	DEC A
     336:  00:8950  20 07               		JR NZ,PD_ENV
     337:  00:8952  0A                  		LD A,[BC]
     338:  00:8953  03                  		INC BC
     339:  00:8954  DD 77 05            		LD [IX+(CHNPRM_NNtSkp-12)],A
     340:  00:8957  18 29               		JR PD_LP2
     341:  00:8959                      
     342:  00:8959  CD 8B 8A            PD_ENV:		CALL SETENV
     343:  00:895C  18 24               		JR PD_LP2
     344:  00:895E                      
     345:  00:895E  CD A7 8A            PD_ORN:		CALL SETORN
     346:  00:8961  18 1C               		JR PD_LOOP
     347:  00:8963                             
     348:  00:8963  DD 77 08            PD_ESAM:	LD [IX+(CHNPRM_Env_En-12)],A
     349:  00:8966  DD 77 F4            		LD [IX+(CHNPRM_PsInOr-12)],A
     350:  00:8969  C4 8B 8A            		CALL NZ,SETENV
     351:  00:896C  0A                  		LD A,[BC]
     352:  00:896D  03                  		INC BC
     353:  00:896E  18 B8               		JR PD_SAM_
     354:  00:8970                      
     355:  00:8970  DD 7E 06            PTDECOD:	LD A,[IX+(CHNPRM_Note-12)]
     356:  00:8973  32 0F F0            		LD [PT3_PrNote],A
     357:  00:8976  DD 6E FA            		LD L,[IX+(CHNPRM_CrTnSl-12)]
     358:  00:8979  DD 66 FB            		LD H,[IX+(CHNPRM_CrTnSl+1-12)]
     359:  00:897C  22 10 F0            		LD [PT3_PrSlide],HL
     360:  00:897F                      
     361:  00:897F  11 10 20            PD_LOOP:	LD DE,$2010
     362:  00:8982  0A                  PD_LP2:		LD A,[BC]
     363:  00:8983  03                  		INC BC
     364:  00:8984  83                  		ADD A,E
     365:  00:8985  38 96               		JR C,PD_OrSm
     366:  00:8987  82                  		ADD A,D
     367:  00:8988  28 4A               		JR Z,PD_FIN
     368:  00:898A  38 9B               		JR C,PD_SAM
     369:  00:898C  83                  		ADD A,E
     370:  00:898D  28 25               		JR Z,PD_REL
     371:  00:898F  38 AD               		JR C,PD_VOL
     372:  00:8991  83                  		ADD A,E
     373:  00:8992  28 B3               		JR Z,PD_EOff
     374:  00:8994  38 B9               		JR C,PD_SorE
     375:  00:8996  C6 60               		ADD A,96
     376:  00:8998  38 20               		JR C,PD_NOTE
     377:  00:899A  83                  		ADD A,E
     378:  00:899B  38 C1               		JR C,PD_ORN
     379:  00:899D  82                  		ADD A,D
     380:  00:899E  38 0F               		JR C,PD_NOIS
     381:  00:89A0  83                  		ADD A,E
     382:  00:89A1  38 C0               		JR C,PD_ESAM
     383:  00:89A3  87                  		ADD A,A
     384:  00:89A4  5F                  		LD E,A
     385:  00:89A5  21 E0 69            		LD HL,(SPCCOMS+$DF20) % 65536	; Adapted from original Speccy version (saves 6 bytes)
     386:  00:89A8  19                  		ADD HL,DE
     387:  00:89A9  5E                  		LD E,[HL]
     388:  00:89AA  23                  		INC HL
     389:  00:89AB  56                  		LD D,[HL]
     390:  00:89AC  D5                  		PUSH DE
     391:  00:89AD  18 D0               		JR PD_LOOP
     392:  00:89AF                      
     393:  00:89AF  32 7E F0            PD_NOIS:	LD [Ns_Base],A
     394:  00:89B2  18 CE               		JR PD_LP2
     395:  00:89B4                      
     396:  00:89B4  DD CB 09 86         PD_REL:		RES 0,[IX+(CHNPRM_Flags-12)]
     397:  00:89B8  18 08               		JR PD_RES
     398:  00:89BA                      	
     399:  00:89BA  DD 77 06            PD_NOTE:	LD [IX+(CHNPRM_Note-12)],A
     400:  00:89BD  DD CB 09 C6         		SET 0,[IX+(CHNPRM_Flags-12)]
     401:  00:89C1  AF                  		XOR A
     402:  00:89C2                      
     403:  00:89C2  ED 73 09 F0         PD_RES:		LD [PT3_PDSP],SP
     404:  00:89C6  DD F9               		LD SP,IX
     405:  00:89C8  67                  		LD H,A
     406:  00:89C9  6F                  		LD L,A
     407:  00:89CA  E5                  		PUSH HL
     408:  00:89CB  E5                  		PUSH HL
     409:  00:89CC  E5                  		PUSH HL
     410:  00:89CD  E5                  		PUSH HL
     411:  00:89CE  E5                  		PUSH HL
     412:  00:89CF  E5                  		PUSH HL
     413:  00:89D0  ED 7B 09 F0         		LD SP,[PT3_PDSP]
     414:  00:89D4                      
     415:  00:89D4  DD 7E 05            PD_FIN:		LD A,[IX+(CHNPRM_NNtSkp-12)]
     416:  00:89D7  DD 77 0F            		LD [IX+(CHNPRM_NtSkCn-12)],A
     417:  00:89DA  C9                  		RET
     418:  00:89DB                      
     419:  00:89DB  DD CB 09 96         C_PORTM:	RES 2,[IX+(CHNPRM_Flags-12)]
     420:  00:89DF  0A                  		LD A,[BC]
     421:  00:89E0  03                  		INC BC
     422:  00:89E1                      		;SKIP PRECALCULATED TONE DELTA [BECAUSE
     423:  00:89E1                      		;CANNOT BE RIGHT AFTER PT3 COMPILATION]
     424:  00:89E1  03                  		INC BC
     425:  00:89E2  03                  		INC BC
     426:  00:89E3  DD 77 0A            		LD [IX+(CHNPRM_TnSlDl-12)],A
     427:  00:89E6  DD 77 F9            		LD [IX+(CHNPRM_TSlCnt-12)],A
     428:  00:89E9  11 80 F0            		LD DE,NT_
     429:  00:89EC  DD 7E 06            		LD A,[IX+(CHNPRM_Note-12)]
     430:  00:89EF  DD 77 07            		LD [IX+(CHNPRM_SlToNt-12)],A
     431:  00:89F2  87                  		ADD A,A
     432:  00:89F3  6F                  		LD L,A
     433:  00:89F4  26 00               		LD H,0
     434:  00:89F6  19                  		ADD HL,DE
     435:  00:89F7  7E                  		LD A,[HL]
     436:  00:89F8  23                  		INC HL
     437:  00:89F9  66                  		LD H,[HL]
     438:  00:89FA  6F                  		LD L,A
     439:  00:89FB  E5                  		PUSH HL
     440:  00:89FC  3A 0F F0            		LD A,[PT3_PrNote]
     441:  00:89FF  DD 77 06            		LD [IX+(CHNPRM_Note-12)],A
     442:  00:8A02  87                  		ADD A,A
     443:  00:8A03  6F                  		LD L,A
     444:  00:8A04  26 00               		LD H,0
     445:  00:8A06  19                  		ADD HL,DE
     446:  00:8A07  5E                  		LD E,[HL]
     447:  00:8A08  23                  		INC HL
     448:  00:8A09  56                  		LD D,[HL]
     449:  00:8A0A  E1                  		POP HL
     450:  00:8A0B  ED 52               		SBC HL,DE
     451:  00:8A0D  DD 75 0D            		LD [IX+(CHNPRM_TnDelt-12)],L
     452:  00:8A10  DD 74 0E            		LD [IX+(CHNPRM_TnDelt+1-12)],H
     453:  00:8A13  ED 5B 10 F0         		LD DE,[PT3_PrSlide]
     454:  00:8A17  DD 73 FA            		LD [IX+(CHNPRM_CrTnSl-12)],E
     455:  00:8A1A  DD 72 FB            		LD [IX+(CHNPRM_CrTnSl+1-12)],D
     456:  00:8A1D  0A                  		LD A,[BC] ;SIGNED TONE STEP
     457:  00:8A1E  03                  		INC BC
     458:  00:8A1F  08                  		EX AF,AF'
     459:  00:8A20  0A                  		LD A,[BC]
     460:  00:8A21  03                  		INC BC
     461:  00:8A22  A7                  		AND A
     462:  00:8A23  28 01               		JR Z,.NOSIG
     463:  00:8A25  EB                  		EX DE,HL
     464:  00:8A26  ED 52               .NOSIG:	SBC HL,DE
     465:  00:8A28  F2 30 8A            		JP P,SET_STP
     466:  00:8A2B  2F                  		CPL
     467:  00:8A2C  08                  		EX AF,AF'
     468:  00:8A2D  ED 44               		NEG
     469:  00:8A2F  08                  		EX AF,AF'
     470:  00:8A30  DD 77 0C            SET_STP:	LD [IX+(CHNPRM_TSlStp+1-12)],A
     471:  00:8A33  08                  		EX AF,AF'
     472:  00:8A34  DD 77 0B            		LD [IX+(CHNPRM_TSlStp-12)],A
     473:  00:8A37  DD 36 FE 00         		LD [IX+(CHNPRM_COnOff-12)],0
     474:  00:8A3B  C9                  		RET
     475:  00:8A3C                      
     476:  00:8A3C  DD CB 09 D6         C_GLISS:	SET 2,[IX+(CHNPRM_Flags-12)]
     477:  00:8A40  0A                  		LD A,[BC]
     478:  00:8A41  03                  		INC BC
     479:  00:8A42  DD 77 0A            		LD [IX+(CHNPRM_TnSlDl-12)],A
     480:  00:8A45  DD 77 F9            		LD [IX+(CHNPRM_TSlCnt-12)],A
     481:  00:8A48  0A                  		LD A,[BC]
     482:  00:8A49  03                  		INC BC
     483:  00:8A4A  08                  		EX AF,AF'
     484:  00:8A4B  0A                  		LD A,[BC]
     485:  00:8A4C  03                  		INC BC
     486:  00:8A4D  18 E1               		JR SET_STP
     487:  00:8A4F                      
     488:  00:8A4F  0A                  C_SMPOS:	LD A,[BC]
     489:  00:8A50  03                  		INC BC
     490:  00:8A51  DD 77 F5            		LD [IX+(CHNPRM_PsInSm-12)],A
     491:  00:8A54  C9                  		RET
     492:  00:8A55                      
     493:  00:8A55  0A                  C_ORPOS:	LD A,[BC]
     494:  00:8A56  03                  		INC BC
     495:  00:8A57  DD 77 F4            		LD [IX+(CHNPRM_PsInOr-12)],A
     496:  00:8A5A  C9                  		RET
     497:  00:8A5B                      
     498:  00:8A5B  0A                  C_VIBRT:	LD A,[BC]
     499:  00:8A5C  03                  		INC BC
     500:  00:8A5D  DD 77 FF            		LD [IX+(CHNPRM_OnOffD-12)],A
     501:  00:8A60  DD 77 FE            		LD [IX+(CHNPRM_COnOff-12)],A
     502:  00:8A63  0A                  		LD A,[BC]
     503:  00:8A64  03                  		INC BC
     504:  00:8A65  DD 77 00            		LD [IX+(CHNPRM_OffOnD-12)],A
     505:  00:8A68  AF                  		XOR A
     506:  00:8A69  DD 77 F9            		LD [IX+(CHNPRM_TSlCnt-12)],A
     507:  00:8A6C  DD 77 FA            		LD [IX+(CHNPRM_CrTnSl-12)],A
     508:  00:8A6F  DD 77 FB            		LD [IX+(CHNPRM_CrTnSl+1-12)],A
     509:  00:8A72  C9                  		RET
     510:  00:8A73                      
     511:  00:8A73  0A                  C_ENGLS:	LD A,[BC]
     512:  00:8A74  03                  		INC BC
     513:  00:8A75  32 1E F0            		LD [PT3_Env_Del],A
     514:  00:8A78  32 7D F0            		LD [CurEDel],A
     515:  00:8A7B  0A                  		LD A,[BC]
     516:  00:8A7C  03                  		INC BC
     517:  00:8A7D  6F                  		LD L,A
     518:  00:8A7E  0A                  		LD A,[BC]
     519:  00:8A7F  03                  		INC BC
     520:  00:8A80  67                  		LD H,A
     521:  00:8A81  22 1F F0            		LD [PT3_ESldAdd],HL
     522:  00:8A84  C9                  		RET
     523:  00:8A85                      
     524:  00:8A85  0A                  C_DELAY:	LD A,[BC]
     525:  00:8A86  03                  		INC BC
     526:  00:8A87  32 1C F0            		LD [PT3_Delay],A
     527:  00:8A8A  C9                  		RET
     528:  00:8A8B                      	
     529:  00:8A8B  DD 73 08            SETENV:		LD [IX+(CHNPRM_Env_En-12)],E
     530:  00:8A8E  32 4D F1            		LD [AYREGS+AR_EnvTp],A
     531:  00:8A91  0A                  		LD A,[BC]
     532:  00:8A92  03                  		INC BC
     533:  00:8A93  67                  		LD H,A
     534:  00:8A94  0A                  		LD A,[BC]
     535:  00:8A95  03                  		INC BC
     536:  00:8A96  6F                  		LD L,A
     537:  00:8A97  22 4E F1            		LD [EnvBase],HL
     538:  00:8A9A  AF                  		XOR A
     539:  00:8A9B  DD 77 F4            		LD [IX+(CHNPRM_PsInOr-12)],A
     540:  00:8A9E  32 7D F0            		LD [CurEDel],A
     541:  00:8AA1  67                  		LD H,A
     542:  00:8AA2  6F                  		LD L,A
     543:  00:8AA3  22 7B F0            		LD [CurESld],HL
     544:  00:8AA6  C9                  C_NOP:		RET
     545:  00:8AA7                      
     546:  00:8AA7  87                  SETORN:		ADD A,A
     547:  00:8AA8  5F                  		LD E,A
     548:  00:8AA9  16 00               		LD D,0
     549:  00:8AAB  DD 72 F4            		LD [IX+(CHNPRM_PsInOr-12)],D
     550:  00:8AAE  2A 07 F0            		LD HL,[PT3_OrnPtrs]
     551:  00:8AB1  19                  		ADD HL,DE
     552:  00:8AB2  5E                  		LD E,[HL]
     553:  00:8AB3  23                  		INC HL
     554:  00:8AB4  56                  		LD D,[HL]
     555:  00:8AB5  2A 01 F0            		LD HL,[PT3_MODADDR]
     556:  00:8AB8  19                  		ADD HL,DE
     557:  00:8AB9  DD 75 01            		LD [IX+(CHNPRM_OrnPtr-12)],L
     558:  00:8ABC  DD 74 02            		LD [IX+(CHNPRM_OrnPtr+1-12)],H
     559:  00:8ABF  C9                  		RET
     560:  00:8AC0                      
     561:  00:8AC0                      		;ALL 16 ADDRESSES TO PROTECT FROM BROKEN PT3 MODULES
     562:  00:8AC0  A6 8A               SPCCOMS:	dw C_NOP
     563:  00:8AC2  3C 8A               		dw C_GLISS
     564:  00:8AC4  DB 89               		dw C_PORTM
     565:  00:8AC6  4F 8A               		dw C_SMPOS
     566:  00:8AC8  55 8A               		dw C_ORPOS
     567:  00:8ACA  5B 8A               		dw C_VIBRT
     568:  00:8ACC  A6 8A               		dw C_NOP
     569:  00:8ACE  A6 8A               		dw C_NOP
     570:  00:8AD0  73 8A               		dw C_ENGLS
     571:  00:8AD2  85 8A               		dw C_DELAY
     572:  00:8AD4  A6 8A               		dw C_NOP
     573:  00:8AD6  A6 8A               		dw C_NOP
     574:  00:8AD8  A6 8A               		dw C_NOP
     575:  00:8ADA  A6 8A               		dw C_NOP
     576:  00:8ADC  A6 8A               		dw C_NOP
     577:  00:8ADE  A6 8A               		dw C_NOP
     578:  00:8AE0                      
     579:  00:8AE0  AF                  CHREGS:		XOR A
     580:  00:8AE1  32 4A F1            		LD [AYREGS+AR_AmplC],A
     581:  00:8AE4  DD CB 15 46         		BIT 0,[IX+CHNPRM_Flags]
     582:  00:8AE8  E5                  		PUSH HL
     583:  00:8AE9  CA 0F 8C            		JP Z,.CH_EXIT
     584:  00:8AEC  ED 73 0B F0         		LD [PT3_CSP],SP
     585:  00:8AF0  DD 6E 0D            		LD L,[IX+CHNPRM_OrnPtr]
     586:  00:8AF3  DD 66 0E            		LD H,[IX+CHNPRM_OrnPtr+1]
     587:  00:8AF6  F9                  		LD SP,HL
     588:  00:8AF7  D1                  		POP DE
     589:  00:8AF8  67                  		LD H,A
     590:  00:8AF9  DD 7E 00            		LD A,[IX+CHNPRM_PsInOr]
     591:  00:8AFC  6F                  		LD L,A
     592:  00:8AFD  39                  		ADD HL,SP
     593:  00:8AFE  3C                  		INC A
     594:  00:8AFF  BA                  		CP D
     595:  00:8B00  38 01               		JR C,.CH_ORPS
     596:  00:8B02  7B                  		LD A,E
     597:  00:8B03  DD 77 00            .CH_ORPS:	LD [IX+CHNPRM_PsInOr],A
     598:  00:8B06  DD 7E 12            		LD A,[IX+CHNPRM_Note]
     599:  00:8B09  86                  		ADD A,[HL]
     600:  00:8B0A  F2 0E 8B            		JP P,.CH_NTP
     601:  00:8B0D  AF                  		XOR A
     602:  00:8B0E  FE 60               .CH_NTP:	CP 96
     603:  00:8B10  38 02               		JR C,.CH_NOK
     604:  00:8B12  3E 5F               		LD A,95
     605:  00:8B14  87                  .CH_NOK:	ADD A,A
     606:  00:8B15  08                  		EX AF,AF'
     607:  00:8B16  DD 6E 0F            		LD L,[IX+CHNPRM_SamPtr]
     608:  00:8B19  DD 66 10            		LD H,[IX+CHNPRM_SamPtr+1]
     609:  00:8B1C  F9                  		LD SP,HL
     610:  00:8B1D  D1                  		POP DE
     611:  00:8B1E  26 00               		LD H,0
     612:  00:8B20  DD 7E 01            		LD A,[IX+CHNPRM_PsInSm]
     613:  00:8B23  47                  		LD B,A
     614:  00:8B24  87                  		ADD A,A
     615:  00:8B25  87                  		ADD A,A
     616:  00:8B26  6F                  		LD L,A
     617:  00:8B27  39                  		ADD HL,SP
     618:  00:8B28  F9                  		LD SP,HL
     619:  00:8B29  78                  		LD A,B
     620:  00:8B2A  3C                  		INC A
     621:  00:8B2B  BA                  		CP D
     622:  00:8B2C  38 01               		JR C,.CH_SMPS
     623:  00:8B2E  7B                  		LD A,E
     624:  00:8B2F  DD 77 01            .CH_SMPS:	LD [IX+CHNPRM_PsInSm],A
     625:  00:8B32  C1                  		POP BC
     626:  00:8B33  E1                  		POP HL
     627:  00:8B34  DD 5E 08            		LD E,[IX+CHNPRM_TnAcc]
     628:  00:8B37  DD 56 09            		LD D,[IX+CHNPRM_TnAcc+1]
     629:  00:8B3A  19                  		ADD HL,DE
     630:  00:8B3B  CB 70               		BIT 6,B
     631:  00:8B3D  28 06               		JR Z,.CH_NOAC
     632:  00:8B3F  DD 75 08            		LD [IX+CHNPRM_TnAcc],L
     633:  00:8B42  DD 74 09            		LD [IX+CHNPRM_TnAcc+1],H
     634:  00:8B45  EB                  .CH_NOAC:	EX DE,HL
     635:  00:8B46  08                  		EX AF,AF'
     636:  00:8B47  6F                  		LD L,A
     637:  00:8B48  26 00               		LD H,0
     638:  00:8B4A  31 80 F0            		LD SP,NT_
     639:  00:8B4D  39                  		ADD HL,SP
     640:  00:8B4E  F9                  		LD SP,HL
     641:  00:8B4F  E1                  		POP HL
     642:  00:8B50  19                  		ADD HL,DE
     643:  00:8B51  DD 5E 06            		LD E,[IX+CHNPRM_CrTnSl]
     644:  00:8B54  DD 56 07            		LD D,[IX+CHNPRM_CrTnSl+1]
     645:  00:8B57  19                  		ADD HL,DE
     646:  00:8B58  ED 7B 0B F0         		LD SP,[PT3_CSP]
     647:  00:8B5C  E3                  		EX [SP],HL
     648:  00:8B5D  AF                  		XOR A
     649:  00:8B5E  DD B6 05            		OR [IX+CHNPRM_TSlCnt]
     650:  00:8B61  28 3E               		JR Z,.CH_AMP
     651:  00:8B63  DD 35 05            		DEC [IX+CHNPRM_TSlCnt]
     652:  00:8B66  20 39               		JR NZ,.CH_AMP
     653:  00:8B68  DD 7E 16            		LD A,[IX+CHNPRM_TnSlDl]
     654:  00:8B6B  DD 77 05            		LD [IX+CHNPRM_TSlCnt],A
     655:  00:8B6E  DD 6E 17            		LD L,[IX+CHNPRM_TSlStp]
     656:  00:8B71  DD 66 18            		LD H,[IX+CHNPRM_TSlStp+1]
     657:  00:8B74  7C                  		LD A,H
     658:  00:8B75  19                  		ADD HL,DE
     659:  00:8B76  DD 75 06            		LD [IX+CHNPRM_CrTnSl],L
     660:  00:8B79  DD 74 07            		LD [IX+CHNPRM_CrTnSl+1],H
     661:  00:8B7C  DD CB 15 56         		BIT 2,[IX+CHNPRM_Flags]
     662:  00:8B80  20 1F               		JR NZ,.CH_AMP
     663:  00:8B82  DD 5E 19            		LD E,[IX+CHNPRM_TnDelt]
     664:  00:8B85  DD 56 1A            		LD D,[IX+CHNPRM_TnDelt+1]
     665:  00:8B88  A7                  		AND A
     666:  00:8B89  28 01               		JR Z,.CH_STPP
     667:  00:8B8B  EB                  		EX DE,HL
     668:  00:8B8C  ED 52               .CH_STPP:	SBC HL,DE
     669:  00:8B8E  FA A1 8B            		JP M,.CH_AMP
     670:  00:8B91  DD 7E 13            		LD A,[IX+CHNPRM_SlToNt]
     671:  00:8B94  DD 77 12            		LD [IX+CHNPRM_Note],A
     672:  00:8B97  AF                  		XOR A
     673:  00:8B98  DD 77 05            		LD [IX+CHNPRM_TSlCnt],A
     674:  00:8B9B  DD 77 06            		LD [IX+CHNPRM_CrTnSl],A
     675:  00:8B9E  DD 77 07            		LD [IX+CHNPRM_CrTnSl+1],A
     676:  00:8BA1  DD 7E 02            .CH_AMP:	LD A,[IX+CHNPRM_CrAmSl]
     677:  00:8BA4  CB 79               		BIT 7,C
     678:  00:8BA6  28 13               		JR Z,.CH_NOAM
     679:  00:8BA8  CB 71               		BIT 6,C
     680:  00:8BAA  28 07               		JR Z,.CH_AMIN
     681:  00:8BAC  FE 0F               		CP 15
     682:  00:8BAE  28 0B               		JR Z,.CH_NOAM
     683:  00:8BB0  3C                  		INC A
     684:  00:8BB1  18 05               		JR .CH_SVAM
     685:  00:8BB3  FE F1               .CH_AMIN:	CP -15
     686:  00:8BB5  28 04               		JR Z,.CH_NOAM
     687:  00:8BB7  3D                  		DEC A
     688:  00:8BB8  DD 77 02            .CH_SVAM:	LD [IX+CHNPRM_CrAmSl],A
     689:  00:8BBB  6F                  .CH_NOAM:	LD L,A
     690:  00:8BBC  78                  		LD A,B
     691:  00:8BBD  E6 0F               		AND 15
     692:  00:8BBF  85                  		ADD A,L
     693:  00:8BC0  F2 C4 8B            		JP P,.CH_APOS
     694:  00:8BC3  AF                  		XOR A
     695:  00:8BC4  FE 10               .CH_APOS:	CP 16
     696:  00:8BC6  38 02               		JR C,.CH_VOL
     697:  00:8BC8  3E 0F               		LD A,15
     698:  00:8BCA  DD B6 1C            .CH_VOL:	OR [IX+CHNPRM_Volume]
     699:  00:8BCD  6F                  		LD L,A
     700:  00:8BCE  26 00               		LD H,0
     701:  00:8BD0  11 40 F1            		LD DE,VT_
     702:  00:8BD3  19                  		ADD HL,DE
     703:  00:8BD4  7E                  		LD A,[HL]
     704:  00:8BD5  CB 41               .CH_ENV:	BIT 0,C
     705:  00:8BD7  20 03               		JR NZ,.CH_NOEN
     706:  00:8BD9  DD B6 14            		OR [IX+CHNPRM_Env_En]
     707:  00:8BDC  32 4A F1            .CH_NOEN:	LD [AYREGS+AR_AmplC],A
     708:  00:8BDF  CB 78               		BIT 7,B
     709:  00:8BE1  79                  		LD A,C
     710:  00:8BE2  28 19               		JR Z,.NO_ENSL
     711:  00:8BE4  17                  		RLA
     712:  00:8BE5  17                  		RLA
     713:  00:8BE6  CB 2F               		SRA A
     714:  00:8BE8  CB 2F               		SRA A
     715:  00:8BEA  CB 2F               		SRA A
     716:  00:8BEC  DD 86 04            		ADD A,[IX+CHNPRM_CrEnSl] ;SEE COMMENT BELOW
     717:  00:8BEF  CB 68               		BIT 5,B
     718:  00:8BF1  28 03               		JR Z,.NO_ENAC
     719:  00:8BF3  DD 77 04            		LD [IX+CHNPRM_CrEnSl],A
     720:  00:8BF6  21 1D F0            .NO_ENAC:	LD HL,PT3_AddToEn
     721:  00:8BF9  86                  		ADD A,[HL] ;BUG IN PT3 - NEED WORD HERE.
     722:  00:8BFA                      			   ;FIX IT IN NEXT VERSION?
     723:  00:8BFA  77                  		LD [HL],A
     724:  00:8BFB  18 0E               		JR .CH_MIX
     725:  00:8BFD  1F                  .NO_ENSL:	RRA
     726:  00:8BFE  DD 86 03            		ADD A,[IX+CHNPRM_CrNsSl]
     727:  00:8C01  32 7F F0            		LD [AddToNs],A
     728:  00:8C04  CB 68               		BIT 5,B
     729:  00:8C06  28 03               		JR Z,.CH_MIX
     730:  00:8C08  DD 77 03            		LD [IX+CHNPRM_CrNsSl],A
     731:  00:8C0B  78                  .CH_MIX:	LD A,B
     732:  00:8C0C  1F                  		RRA
     733:  00:8C0D  E6 48               		AND $48
     734:  00:8C0F  21 47 F1            .CH_EXIT:	LD HL,AYREGS+AR_Mixer
     735:  00:8C12  B6                  		OR [HL]
     736:  00:8C13  0F                  		RRCA
     737:  00:8C14  77                  		LD [HL],A
     738:  00:8C15  E1                  		POP HL
     739:  00:8C16  AF                  		XOR A
     740:  00:8C17  DD B6 0A            		OR [IX+CHNPRM_COnOff]
     741:  00:8C1A  C8                  		RET Z
     742:  00:8C1B  DD 35 0A            		DEC [IX+CHNPRM_COnOff]
     743:  00:8C1E  C0                  		RET NZ
     744:  00:8C1F  DD AE 15            		XOR [IX+CHNPRM_Flags]
     745:  00:8C22  DD 77 15            		LD [IX+CHNPRM_Flags],A
     746:  00:8C25  1F                  		RRA
     747:  00:8C26  DD 7E 0B            		LD A,[IX+CHNPRM_OnOffD]
     748:  00:8C29  38 03               		JR C,.CH_ONDL
     749:  00:8C2B  DD 7E 0C            		LD A,[IX+CHNPRM_OffOnD]
     750:  00:8C2E  DD 77 0A            .CH_ONDL:	LD [IX+CHNPRM_COnOff],A
     751:  00:8C31  C9                  		RET
     752:  00:8C32                      
     753:  00:8C32  AF                  PT3_PLAY:	XOR A
     754:  00:8C33  32 1D F0            		LD [PT3_AddToEn],A
     755:  00:8C36  32 47 F1            		LD [AYREGS+AR_Mixer],A
     756:  00:8C39  3D                  		DEC A
     757:  00:8C3A  32 4D F1            		LD [AYREGS+AR_EnvTp],A
     758:  00:8C3D  21 7A F0            		LD HL,DelyCnt
     759:  00:8C40  35                  		DEC [HL]
     760:  00:8C41  C2 C8 8C            		JP NZ,.PL2
     761:  00:8C44  21 3E F0            		LD HL,ChanA+CHNPRM_NtSkCn
     762:  00:8C47  35                  		DEC [HL]
     763:  00:8C48  20 4E               		JR NZ,.PL1B
     764:  00:8C4A  ED 4B 12 F0         		LD BC,[PT3_AdInPtA]
     765:  00:8C4E  0A                  		LD A,[BC]
     766:  00:8C4F  A7                  		AND A
     767:  00:8C50  20 3B               		JR NZ,.PL1A
     768:  00:8C52  57                  		LD D,A
     769:  00:8C53  32 7E F0            		LD [Ns_Base],A
     770:  00:8C56  2A 03 F0            		LD HL,[PT3_CrPsPtr]
     771:  00:8C59  23                  		INC HL
     772:  00:8C5A  7E                  		LD A,[HL]
     773:  00:8C5B  3C                  		INC A
     774:  00:8C5C  20 08               		JR NZ,.PLNLP
     775:  00:8C5E  CD C8 87            		CALL CHECKLP
     776:  00:8C61  2A 18 F0            		LD HL,[PT3_LPosPtr]
     777:  00:8C64  7E                  		LD A,[HL]
     778:  00:8C65  3C                  		INC A
     779:  00:8C66  22 03 F0            .PLNLP:	LD [PT3_CrPsPtr],HL
     780:  00:8C69  3D                  		DEC A
     781:  00:8C6A  87                  		ADD A,A
     782:  00:8C6B  5F                  		LD E,A
     783:  00:8C6C  CB 12               		RL D
     784:  00:8C6E  2A 1A F0            		LD HL,[PT3_PatsPtr]
     785:  00:8C71  19                  		ADD HL,DE
     786:  00:8C72  ED 5B 01 F0         		LD DE,[PT3_MODADDR]
     787:  00:8C76  ED 73 0D F0         		LD [PT3_PSP],SP
     788:  00:8C7A  F9                  		LD SP,HL
     789:  00:8C7B  E1                  		POP HL
     790:  00:8C7C  19                  		ADD HL,DE
     791:  00:8C7D  44                  		LD B,H
     792:  00:8C7E  4D                  		LD C,L
     793:  00:8C7F  E1                  		POP HL
     794:  00:8C80  19                  		ADD HL,DE
     795:  00:8C81  22 14 F0            		LD [PT3_AdInPtB],HL
     796:  00:8C84  E1                  		POP HL
     797:  00:8C85  19                  		ADD HL,DE
     798:  00:8C86  22 16 F0            		LD [PT3_AdInPtC],HL
     799:  00:8C89  ED 7B 0D F0         		LD SP,[PT3_PSP]
     800:  00:8C8D                      
     801:  00:8C8D  DD 21 2F F0         .PL1A:		LD IX,ChanA+12
     802:  00:8C91  CD 70 89            		CALL PTDECOD
     803:  00:8C94  ED 43 12 F0         		LD [PT3_AdInPtA],BC
     804:  00:8C98                      
     805:  00:8C98  21 5B F0            .PL1B:		LD HL,ChanB+CHNPRM_NtSkCn
     806:  00:8C9B  35                  		DEC [HL]
     807:  00:8C9C  20 0F               		JR NZ,.PL1C
     808:  00:8C9E  DD 21 4C F0         		LD IX,ChanB+12
     809:  00:8CA2  ED 4B 14 F0         		LD BC,[PT3_AdInPtB]
     810:  00:8CA6  CD 70 89            		CALL PTDECOD
     811:  00:8CA9  ED 43 14 F0         		LD [PT3_AdInPtB],BC
     812:  00:8CAD                      
     813:  00:8CAD  21 78 F0            .PL1C:		LD HL,ChanC+CHNPRM_NtSkCn
     814:  00:8CB0  35                  		DEC [HL]
     815:  00:8CB1  20 0F               		JR NZ,.PL1D
     816:  00:8CB3  DD 21 69 F0         		LD IX,ChanC+12
     817:  00:8CB7  ED 4B 16 F0         		LD BC,[PT3_AdInPtC]
     818:  00:8CBB  CD 70 89            		CALL PTDECOD
     819:  00:8CBE  ED 43 16 F0         		LD [PT3_AdInPtC],BC
     820:  00:8CC2                      
     821:  00:8CC2  3A 1C F0            .PL1D:		LD A,[PT3_Delay]
     822:  00:8CC5  32 7A F0            		LD [DelyCnt],A
     823:  00:8CC8                      
     824:  00:8CC8  DD 21 23 F0         .PL2:		LD IX,ChanA
     825:  00:8CCC  2A 40 F1            		LD HL,[AYREGS+AR_TonA]
     826:  00:8CCF  CD E0 8A            		CALL CHREGS
     827:  00:8CD2  22 40 F1            		LD [AYREGS+AR_TonA],HL
     828:  00:8CD5  3A 4A F1            		LD A,[AYREGS+AR_AmplC]
     829:  00:8CD8  32 48 F1            		LD [AYREGS+AR_AmplA],A
     830:  00:8CDB  DD 21 40 F0         		LD IX,ChanB
     831:  00:8CDF  2A 42 F1            		LD HL,[AYREGS+AR_TonB]
     832:  00:8CE2  CD E0 8A            		CALL CHREGS
     833:  00:8CE5  22 42 F1            		LD [AYREGS+AR_TonB],HL
     834:  00:8CE8  3A 4A F1            		LD A,[AYREGS+AR_AmplC]
     835:  00:8CEB  32 49 F1            		LD [AYREGS+AR_AmplB],A
     836:  00:8CEE  DD 21 5D F0         		LD IX,ChanC
     837:  00:8CF2  2A 44 F1            		LD HL,[AYREGS+AR_TonC]
     838:  00:8CF5  CD E0 8A            		CALL CHREGS
     839:  00:8CF8  22 44 F1            		LD [AYREGS+AR_TonC],HL
     840:  00:8CFB                      
     841:  00:8CFB  2A 7E F0            		LD HL,[Ns_Base_AddToNs]
     842:  00:8CFE  7C                  		LD A,H
     843:  00:8CFF  85                  		ADD A,L
     844:  00:8D00  32 46 F1            		LD [AYREGS+AR_Noise],A
     845:  00:8D03                      
     846:  00:8D03  3A 1D F0            		LD A,[PT3_AddToEn]
     847:  00:8D06  5F                  		LD E,A
     848:  00:8D07  87                  		ADD A,A
     849:  00:8D08  9F                  		SBC A,A
     850:  00:8D09  57                  		LD D,A
     851:  00:8D0A  2A 4E F1            		LD HL,[EnvBase]
     852:  00:8D0D  19                  		ADD HL,DE
     853:  00:8D0E  ED 5B 7B F0         		LD DE,[CurESld]
     854:  00:8D12  19                  		ADD HL,DE
     855:  00:8D13  22 4B F1            		LD [AYREGS+AR_Env],HL
     856:  00:8D16                      
     857:  00:8D16  AF                  		XOR A
     858:  00:8D17  21 7D F0            		LD HL,CurEDel
     859:  00:8D1A  B6                  		OR [HL]
     860:  00:8D1B  C8                  		RET Z
     861:  00:8D1C  35                  		DEC [HL]
     862:  00:8D1D  C0                  		RET NZ
     863:  00:8D1E  3A 1E F0            		LD A,[PT3_Env_Del]
     864:  00:8D21  77                  		LD [HL],A
     865:  00:8D22  2A 1F F0            		LD HL,[PT3_ESldAdd]
     866:  00:8D25  19                  		ADD HL,DE
     867:  00:8D26  22 7B F0            		LD [CurESld],HL
     868:  00:8D29  C9                  		RET
     869:  00:8D2A                      
     870:  00:8D2A  AF                  PT3_ROUT:	XOR A
     871:  00:8D2B                      	
     872:  00:8D2B                      ROUT_A0:	; --- FIXES BITS 6 AND 7 OF MIXER ---
     873:  00:8D2B  21 47 F1            		LD	HL,AYREGS+AR_Mixer
     874:  00:8D2E  CB FE               		set	7,[hl]
     875:  00:8D30  CB B6               		res	6,[hl]
     876:  00:8D32                      
     877:  00:8D32  0E A0               		LD C,$A0
     878:  00:8D34  21 40 F1            		LD HL,AYREGS
     879:  00:8D37  ED 79               .LOUT:		OUT [C],A
     880:  00:8D39  0C                  		INC C
     881:  00:8D3A  ED A3               		OUTI 
     882:  00:8D3C  0D                  		DEC C
     883:  00:8D3D  3C                  		INC A
     884:  00:8D3E  FE 0D               		CP 13
     885:  00:8D40  20 F5               		JR NZ,.LOUT
     886:  00:8D42  ED 79               		OUT [C],A
     887:  00:8D44  7E                  		LD A,[HL]
     888:  00:8D45  A7                  		AND A
     889:  00:8D46  F8                  		RET M
     890:  00:8D47  0C                  		INC C
     891:  00:8D48  ED 79               		OUT [C],A
     892:  00:8D4A  C9                  		RET
     893:  00:8D4B                      
     894:  00:8D4B  64                  NT_DATA:	db (T_NEW_0-T1_)*2
     895:  00:8D4C  2A                  		db TCNEW_0-T_
     896:  00:8D4D  65                  		db (T_OLD_0-T1_)*2+1
     897:  00:8D4E  00                  		db TCOLD_0-T_
     898:  00:8D4F  01                  		db (T_NEW_1-T1_)*2+1
     899:  00:8D50  0C                  		db TCNEW_1-T_
     900:  00:8D51  01                  		db (T_OLD_1-T1_)*2+1
     901:  00:8D52  0C                  		db TCOLD_1-T_
     902:  00:8D53  94                  		db (T_NEW_2-T1_)*2
     903:  00:8D54  35                  		db TCNEW_2-T_
     904:  00:8D55  30                  		db (T_OLD_2-T1_)*2
     905:  00:8D56  0E                  		db TCOLD_2-T_
     906:  00:8D57  60                  		db (T_NEW_3-T1_)*2
     907:  00:8D58  20                  		db TCNEW_3-T_
     908:  00:8D59  60                  		db (T_OLD_3-T1_)*2
     909:  00:8D5A  21                  		db TCOLD_3-T_
     910:  00:8D5B                      
     911:  00:8D5B                      T_:
     912:  00:8D5B                      
     913:  00:8D5B                      TCOLD_0:	db $00+1,$04+1,$08+1,$0A+1,$0C+1,$0E+1,$12+1,$14+1
     913:  00:8D5B  01 05 09 0B 0D 0F 13 15 
     914:  00:8D63  19 25 3D 00         		db $18+1,$24+1,$3C+1,0
     915:  00:8D67                      TCNEW_1:	
     916:  00:8D67  5D 00               TCOLD_1:	db $5C+1,0
     917:  00:8D69                      TCOLD_2:	db $30+1,$36+1,$4C+1,$52+1,$5E+1,$70+1,$82,$8C,$9C
     917:  00:8D69  31 37 4D 53 5F 71 82 8C 9C 
     918:  00:8D72                      		db $9E,$A0,$A6,$A8,$AA,$AC,$AE,$AE,0
     918:  00:8D72  9E A0 A6 A8 AA AC AE AE 00 
     919:  00:8D7B  57                  TCNEW_3:	db $56+1
     920:  00:8D7C                      TCOLD_3:	db $1E+1,$22+1,$24+1,$28+1,$2C+1,$2E+1,$32+1,$BE+1,0
     920:  00:8D7C  1F 23 25 29 2D 2F 33 BF 00 
     921:  00:8D85                      TCNEW_0:	db $1C+1,$20+1,$22+1,$26+1,$2A+1,$2C+1,$30+1,$54+1
     921:  00:8D85  1D 21 23 27 2B 2D 31 55 
     922:  00:8D8D  BD BF 00            		db $BC+1,$BE+1,0
     923:  00:8D90                      TCNEW_2:	db $1A+1,$20+1,$24+1,$28+1,$2A+1,$3A+1,$4C+1,$5E+1
     923:  00:8D90  1B 21 25 29 2B 3B 4D 5F 
     924:  00:8D98  BB BD BF            		db $BA+1,$BC+1,$BE+1
     925:  00:8D9B                      
     926:  00:8D9B  00 01 00 90         EMPTYSAMORN: 	db 0,1,0,$90 ;delete $90 if you don't need default sample
     927:  00:8D9F                      
     928:  00:8D9F                      T_PACK:		; First 12 values of tone tables (packed)
     929:  00:8D9F  0D                  		db ($06EC*2)/256
     930:  00:8DA0  D8                  		db #d8
     931:  00:8DA1  69                  		db $0755-$06EC
     932:  00:8DA2  70                  		db $07C5-$0755
     933:  00:8DA3  76                  		db $083B-$07C5
     934:  00:8DA4  7D                  		db $08B8-$083B
     935:  00:8DA5  85                  		db $093D-$08B8
     936:  00:8DA6  8D                  		db $09CA-$093D
     937:  00:8DA7  95                  		db $0A5F-$09CA
     938:  00:8DA8  9D                  		db $0AFC-$0A5F
     939:  00:8DA9  A8                  		db $0BA4-$0AFC
     940:  00:8DAA  B1                  		db $0C55-$0BA4
     941:  00:8DAB  BB                  		db $0D10-$0C55
     942:  00:8DAC  0C                  		db ($066D*2)/256
     943:  00:8DAD  DA                  		db #da
     944:  00:8DAE  62                  		db $06CF-$066D
     945:  00:8DAF  68                  		db $0737-$06CF
     946:  00:8DB0  6D                  		db $07A4-$0737
     947:  00:8DB1  75                  		db $0819-$07A4
     948:  00:8DB2  7B                  		db $0894-$0819
     949:  00:8DB3  83                  		db $0917-$0894
     950:  00:8DB4  8A                  		db $09A1-$0917
     951:  00:8DB5  92                  		db $0A33-$09A1
     952:  00:8DB6  9C                  		db $0ACF-$0A33
     953:  00:8DB7  A4                  		db $0B73-$0ACF
     954:  00:8DB8  AF                  		db $0C22-$0B73
     955:  00:8DB9  B8                  		db $0CDA-$0C22
     956:  00:8DBA  0E                  		db ($0704*2)/256
     957:  00:8DBB  08                  		db #08
     958:  00:8DBC  6A                  		db $076E-$0704
     959:  00:8DBD  72                  		db $07E0-$076E
     960:  00:8DBE  78                  		db $0858-$07E0
     961:  00:8DBF  7E                  		db $08D6-$0858
     962:  00:8DC0  86                  		db $095C-$08D6
     963:  00:8DC1  90                  		db $09EC-$095C
     964:  00:8DC2  96                  		db $0A82-$09EC
     965:  00:8DC3  A0                  		db $0B22-$0A82
     966:  00:8DC4  AA                  		db $0BCC-$0B22
     967:  00:8DC5  B4                  		db $0C80-$0BCC
     968:  00:8DC6  BE                  		db $0D3E-$0C80
     969:  00:8DC7  0F                  		db ($07E0*2)/256
     970:  00:8DC8  C0                  		db #c0
     971:  00:8DC9  78                  		db $0858-$07E0
     972:  00:8DCA  88                  		db $08E0-$0858
     973:  00:8DCB  80                  		db $0960-$08E0
     974:  00:8DCC  90                  		db $09F0-$0960
     975:  00:8DCD  98                  		db $0A88-$09F0
     976:  00:8DCE  A0                  		db $0B28-$0A88
     977:  00:8DCF  B0                  		db $0BD8-$0B28
     978:  00:8DD0  A8                  		db $0C80-$0BD8
     979:  00:8DD1  E0                  		db $0D60-$0C80
     980:  00:8DD2  B0                  		db $0E10-$0D60
     981:  00:8DD3  E8                  		db $0EF8-$0E10
      61.  00:8DD4                      	include "ayFX-ROM_sjasm.asm"
       1:  00:8DD4                      		; --- ayFX REPLAYER v1.31 ---
       2:  00:8DD4                      
       3:  00:8DD4                      		; --- v1.31	Fixed bug on previous version, only PSG channel C worked
       4:  00:8DD4                      		; --- v1.3	Fixed volume and Relative volume versions on the same file, conditional compilation
       5:  00:8DD4                      		; ---		Support for dynamic or fixed channel allocation
       6:  00:8DD4                      		; --- v1.2f/r	ayFX bank support
       7:  00:8DD4                      		; --- v1.11f/r	If a frame volume is zero then no AYREGS update
       8:  00:8DD4                      		; --- v1.1f/r	Fixed volume for all ayFX streams
       9:  00:8DD4                      		; --- v1.1	Explicit priority (as suggested by AR)
      10:  00:8DD4                      		; --- v1.0f	Bug fixed (error when using noise)
      11:  00:8DD4                      		; --- v1.0	Initial release
      12:  00:8DD4                      
      13:  00:8DD4                      		; --- DEFINE AYFXRELATIVE AS 0 FOR FIXED VOLUME VERSION ---
      14:  00:8DD4                      		; --- DEFINE AYFXRELATIVE AS 1 FOR RELATIVE VOLUME VERSION ---
      15:  00:8DD4  (00:0000)           AYFXRELATIVE equ 0
      16:  00:8DD4                      
      17:  00:8DD4                      ayFX_SETUP:	; ---          ayFX replayer setup          ---
      18:  00:8DD4                      		; --- INPUT: HL -> pointer to the ayFX bank ---
      19:  00:8DD4  22 41 F2            		ld	[ayFX_BANK],hl			; Current ayFX bank
      20:  00:8DD7  3E 01               		ld	a,1				; a:=0
      21:  00:8DD9  32 40 F2            		ld	[ayFX_MODE],a			; Initial mode: fixed channel
      22:  00:8DDC  3C                  		inc	a				; Starting channel (=1)
      23:  00:8DDD  32 4A F2            		ld	[ayFX_CHANNEL],a		; Updated
      24:  00:8DE0                      ayFX_END:	; --- End of an ayFX stream ---
      25:  00:8DE0  3E FF               		ld	a,255				; Lowest ayFX priority
      26:  00:8DE2  32 43 F2            		ld	[ayFX_PRIORITY],a		; Priority saved (not playing ayFX stream)
      27:  00:8DE5  C9                  		ret					; Return
      28:  00:8DE6                      
      29:  00:8DE6                      ayFX_INIT:	; ---     INIT A NEW ayFX STREAM     ---
      30:  00:8DE6                      		; --- INPUT: A -> sound to be played ---
      31:  00:8DE6                      		; ---        C -> sound priority     ---
      32:  00:8DE6  C5                  		push	bc				; Store bc in stack
      33:  00:8DE7  D5                  		push	de				; Store de in stack
      34:  00:8DE8  E5                  		push	hl				; Store hl in stack
      35:  00:8DE9                      		; --- Check if the index is in the bank ---
      36:  00:8DE9  47                  		ld	b,a				; b:=a (new ayFX stream index)
      37:  00:8DEA  2A 41 F2            		ld	hl,[ayFX_BANK]			; Current ayFX BANK
      38:  00:8DED  7E                  		ld	a,[hl]				; Number of samples in the bank
      39:  00:8DEE  B7                  		or	a				; If zero (means 256 samples)...
      40:  00:8DEF  28 06               		jr	z,.CHECK_PRI			; ...goto .CHECK_PRI
      41:  00:8DF1                      		; The bank has less than 256 samples
      42:  00:8DF1  78                  		ld	a,b				; a:=b (new ayFX stream index)
      43:  00:8DF2  BE                  		cp	[hl]				; If new index is not in the bank...
      44:  00:8DF3  3E 02               		ld	a,2				; a:=2 (error 2: Sample not in the bank)
      45:  00:8DF5  30 21               		jr	nc,.INIT_END			; ...we can't init it
      46:  00:8DF7                      .CHECK_PRI:	; --- Check if the new priority is lower than the current one ---
      47:  00:8DF7                      		; ---   Remember: 0 = highest priority, 15 = lowest priority  ---
      48:  00:8DF7  78                  		ld	a,b				; a:=b (new ayFX stream index)
      49:  00:8DF8  3A 43 F2            		ld	a,[ayFX_PRIORITY]		; a:=Current ayFX stream priority
      50:  00:8DFB  B9                  		cp	c				; If new ayFX stream priority is lower than current one...
      51:  00:8DFC  3E 01               		ld	a,1				; a:=1 (error 1: A sample with higher priority is being played)
      52:  00:8DFE  38 18               		jr	c,.INIT_END			; ...we don't start the new ayFX stream
      53:  00:8E00                      		; --- Set new priority ---
      54:  00:8E00  79                  		ld	a,c				; a:=New priority
      55:  00:8E01  E6 0F               		and	$0F				; We mask the priority
      56:  00:8E03  32 43 F2            		ld	[ayFX_PRIORITY],a		; new ayFX stream priority saved in RAM
      57:  00:8E06                      
      58:  00:8E06                      		IF ( AYFXRELATIVE == 1 )
      59:  00:8E06                    ~ 			; --- Volume adjust using PT3 volume table ---
      60:  00:8E06                    ~ 			ld	c,a				; c:=New priority (fixed)
      61:  00:8E06                    ~ 			ld	a,15				; a:=15
      62:  00:8E06                    ~ 			sub	c				; a:=15-New priority = relative volume
      63:  00:8E06                    ~ 			jr	z,.INIT_NOSOUND		; If priority is 15 -> no sound output (volume is zero)
      64:  00:8E06                    ~ 			add	a,a				; a:=a*2
      65:  00:8E06                    ~ 			add	a,a				; a:=a*4
      66:  00:8E06                    ~ 			add	a,a				; a:=a*8
      67:  00:8E06                    ~ 			add	a,a				; a:=a*16
      68:  00:8E06                    ~ 			ld	e,a				; e:=a
      69:  00:8E06                    ~ 			ld	d,0				; de:=a
      70:  00:8E06                    ~ 			ld	hl,VT_				; hl:=PT3 volume table
      71:  00:8E06                    ~ 			add	hl,de				; hl is a pointer to the relative volume table
      72:  00:8E06                    ~ 			ld	[ayFX_VT],hl			; Save pointer
      73:  00:8E06                    ~ 		ENDIF
      74:  00:8E06                      
      75:  00:8E06                      		; --- Calculate the pointer to the new ayFX stream ---
      76:  00:8E06  ED 5B 41 F2         		ld	de,[ayFX_BANK]			; de:=Current ayFX bank
      77:  00:8E0A  13                  		inc	de				; de points to the increments table of the bank
      78:  00:8E0B  68                  		ld	l,b				; l:=b (new ayFX stream index)
      79:  00:8E0C  26 00               		ld	h,0				; hl:=b (new ayFX stream index)
      80:  00:8E0E  29                  		add	hl,hl				; hl:=hl*2
      81:  00:8E0F  19                  		add	hl,de				; hl:=hl+de (hl points to the correct increment)
      82:  00:8E10  5E                  		ld	e,[hl]				; e:=lower byte of the increment
      83:  00:8E11  23                  		inc	hl				; hl points to the higher byte of the correct increment
      84:  00:8E12  56                  		ld	d,[hl]				; de:=increment
      85:  00:8E13  19                  		add	hl,de				; hl:=hl+de (hl points to the new ayFX stream)
      86:  00:8E14  22 44 F2            		ld	[ayFX_POINTER],hl		; Pointer saved in RAM
      87:  00:8E17  AF                  		xor	a				; a:=0 (no errors)
      88:  00:8E18  E1                  .INIT_END:	pop	hl				; Retrieve hl from stack
      89:  00:8E19  D1                  		pop	de				; Retrieve de from stack
      90:  00:8E1A  C1                  		pop	bc				; Retrieve bc from stack
      91:  00:8E1B  C9                  		ret					; Return
      92:  00:8E1C                      
      93:  00:8E1C                      		IF ( AYFXRELATIVE == 1 )
      94:  00:8E1C                    ~ .INIT_NOSOUND:	; --- Init a sample with relative volume zero -> no sound output ---
      95:  00:8E1C                    ~ 			ld	a,255				; Lowest ayFX priority
      96:  00:8E1C                    ~ 			ld	[ayFX_PRIORITY],a		; Priority saved (not playing ayFX stream)
      97:  00:8E1C                    ~ 			jr	.INIT_END			; Jumps to .INIT_END
      98:  00:8E1C                    ~ 		ENDIF
      99:  00:8E1C                      
     100:  00:8E1C                      ayFX_PLAY:	; --- PLAY A FRAME OF AN ayFX STREAM ---
     101:  00:8E1C  3A 43 F2            		ld	a,[ayFX_PRIORITY]		; a:=Current ayFX stream priority
     102:  00:8E1F  B7                  		or	a				; If priority has bit 7 on...
     103:  00:8E20  F8                  		ret	m				; ...return
     104:  00:8E21                      		; --- Calculate next ayFX channel (if needed) ---
     105:  00:8E21  3A 40 F2            		ld	a,[ayFX_MODE]			; ayFX mode
     106:  00:8E24  E6 01               		and	1				; If bit0=0 (fixed channel)...
     107:  00:8E26  28 08               		jr	z,.TAKECB			; ...skip channel changing
     108:  00:8E28  21 4A F2            		ld	hl,ayFX_CHANNEL			; Old ayFX playing channel
     109:  00:8E2B  35                  		dec	[hl]				; New ayFX playing channel
     110:  00:8E2C  20 02               		jr	nz,.TAKECB			; If not zero jump to .TAKECB
     111:  00:8E2E  36 03               		ld	[hl],3				; If zero -> set channel 3
     112:  00:8E30                      .TAKECB:	; --- Extract control byte from stream ---
     113:  00:8E30  2A 44 F2            		ld	hl,[ayFX_POINTER]		; Pointer to the current ayFX stream
     114:  00:8E33  4E                  		ld	c,[hl]				; c:=Control byte
     115:  00:8E34  23                  		inc	hl				; Increment pointer
     116:  00:8E35                      		; --- Check if there's new tone on stream ---
     117:  00:8E35  CB 69               		bit	5,c				; If bit 5 c is off...
     118:  00:8E37  28 08               		jr	z,.CHECK_NN			; ...jump to .CHECK_NN (no new tone)
     119:  00:8E39                      		; --- Extract new tone from stream ---
     120:  00:8E39  5E                  		ld	e,[hl]				; e:=lower byte of new tone
     121:  00:8E3A  23                  		inc	hl				; Increment pointer
     122:  00:8E3B  56                  		ld	d,[hl]				; d:=higher byte of new tone
     123:  00:8E3C  23                  		inc	hl				; Increment pointer
     124:  00:8E3D  ED 53 46 F2         		ld	[ayFX_TONE],de			; ayFX tone updated
     125:  00:8E41                      .CHECK_NN:	; --- Check if there's new noise on stream ---
     126:  00:8E41  CB 71               		bit	6,c				; if bit 6 c is off...
     127:  00:8E43  28 09               		jr	z,.SETPOINTER			; ...jump to .SETPOINTER (no new noise)
     128:  00:8E45                      		; --- Extract new noise from stream ---
     129:  00:8E45  7E                  		ld	a,[hl]				; a:=New noise
     130:  00:8E46  23                  		inc	hl				; Increment pointer
     131:  00:8E47  FE 20               		cp	$20				; If it's an illegal value of noise (used to mark end of stream)...
     132:  00:8E49  28 95               		jr.	z,ayFX_END			; ...jump to ayFX_END
     133:  00:8E4B  32 48 F2            		ld	[ayFX_NOISE],a			; ayFX noise updated
     134:  00:8E4E                      .SETPOINTER:	; --- Update ayFX pointer ---
     135:  00:8E4E  22 44 F2            		ld	[ayFX_POINTER],hl		; Update ayFX stream pointer
     136:  00:8E51                      		; --- Extract volume ---
     137:  00:8E51  79                  		ld	a,c				; a:=Control byte
     138:  00:8E52  E6 0F               		and	$0F				; lower nibble
     139:  00:8E54                      
     140:  00:8E54                      		IF ( AYFXRELATIVE == 1 )
     141:  00:8E54                    ~ 			; --- Fix the volume using PT3 Volume Table ---
     142:  00:8E54                    ~ 			ld	hl,[ayFX_VT]			; hl:=Pointer to relative volume table
     143:  00:8E54                    ~ 			ld	e,a				; e:=a (ayFX volume)
     144:  00:8E54                    ~ 			ld	d,0				; d:=0
     145:  00:8E54                    ~ 			add	hl,de				; hl:=hl+de (hl points to the relative volume of this frame
     146:  00:8E54                    ~ 			ld	a,[hl]				; a:=ayFX relative volume
     147:  00:8E54                    ~ 			or	a				; If relative volume is zero...
     148:  00:8E54                    ~ 		ENDIF
     149:  00:8E54                      
     150:  00:8E54  32 49 F2            		ld	[ayFX_VOLUME],a			; ayFX volume updated
     151:  00:8E57  C8                  		ret	z				; ...return (don't copy ayFX values in to AYREGS)
     152:  00:8E58                      		; -------------------------------------
     153:  00:8E58                      		; --- COPY ayFX VALUES IN TO AYREGS ---
     154:  00:8E58                      		; -------------------------------------
     155:  00:8E58                      		; --- Set noise channel ---
     156:  00:8E58  CB 79               		bit	7,c				; If noise is off...
     157:  00:8E5A  20 06               		jr	nz,.SETMASKS			; ...jump to .SETMASKS
     158:  00:8E5C  3A 48 F2            		ld	a,[ayFX_NOISE]			; ayFX noise value
     159:  00:8E5F  32 46 F1            		ld	[AYREGS+6],a			; copied in to AYREGS (noise channel)
     160:  00:8E62                      .SETMASKS:	; --- Set mixer masks ---
     161:  00:8E62  79                  		ld	a,c				; a:=Control byte
     162:  00:8E63  E6 90               		and	$90				; Only bits 7 and 4 (noise and tone mask for psg reg 7)
     163:  00:8E65  FE 90               		cp	$90				; If no noise and no tone...
     164:  00:8E67  C8                  		ret	z				; ...return (don't copy ayFX values in to AYREGS)
     165:  00:8E68                      		; --- Copy ayFX values in to ARYREGS ---
     166:  00:8E68  0F                  		rrca					; Rotate a to the right (1 TIME)
     167:  00:8E69  0F                  		rrca					; Rotate a to the right (2 TIMES) (OR mask)
     168:  00:8E6A  16 DB               		ld	d,$DB				; d:=Mask for psg mixer (AND mask)
     169:  00:8E6C                      		; --- Dump to correct channel ---
     170:  00:8E6C  21 4A F2            		ld	hl,ayFX_CHANNEL			; Next ayFX playing channel
     171:  00:8E6F  46                  		ld	b,[hl]				; Channel counter
     172:  00:8E70                      .CHK1:		; --- Check if playing channel was 1 ---
     173:  00:8E70  10 0D               		djnz	.CHK2				; Decrement and jump if channel was not 1
     174:  00:8E72                      .PLAY_C:	; --- Play ayFX stream on channel C ---
     175:  00:8E72  CD A1 8E            		call	.SETMIXER			; Set PSG mixer value (returning a=ayFX volume and hl=ayFX tone)
     176:  00:8E75  32 4A F1            		ld	[AYREGS+10],a			; Volume copied in to AYREGS (channel C volume)
     177:  00:8E78  CB 51               		bit	2,c				; If tone is off...
     178:  00:8E7A  C0                  		ret	nz				; ...return
     179:  00:8E7B  22 44 F1            		ld	[AYREGS+4],hl			; copied in to AYREGS (channel C tone)
     180:  00:8E7E  C9                  		ret					; Return
     181:  00:8E7F                      .CHK2:		; --- Check if playing channel was 2 ---
     182:  00:8E7F  CB 0A               		rrc	d				; Rotate right AND mask
     183:  00:8E81  0F                  		rrca					; Rotate right OR mask
     184:  00:8E82  10 0D               		djnz	.CHK3				; Decrement and jump if channel was not 2
     185:  00:8E84                      .PLAY_B:	; --- Play ayFX stream on channel B ---
     186:  00:8E84  CD A1 8E            		call	.SETMIXER			; Set PSG mixer value (returning a=ayFX volume and hl=ayFX tone)
     187:  00:8E87  32 49 F1            		ld	[AYREGS+9],a			; Volume copied in to AYREGS (channel B volume)
     188:  00:8E8A  CB 49               		bit	1,c				; If tone is off...
     189:  00:8E8C  C0                  		ret	nz				; ...return
     190:  00:8E8D  22 42 F1            		ld	[AYREGS+2],hl			; copied in to AYREGS (channel B tone)
     191:  00:8E90  C9                  		ret					; Return
     192:  00:8E91                      .CHK3:		; --- Check if playing channel was 3 ---
     193:  00:8E91  CB 0A               		rrc	d				; Rotate right AND mask
     194:  00:8E93  0F                  		rrca					; Rotate right OR mask
     195:  00:8E94                      .PLAY_A:	; --- Play ayFX stream on channel A ---
     196:  00:8E94  CD A1 8E            		call	.SETMIXER			; Set PSG mixer value (returning a=ayFX volume and hl=ayFX tone)
     197:  00:8E97  32 48 F1            		ld	[AYREGS+8],a			; Volume copied in to AYREGS (channel A volume)
     198:  00:8E9A  CB 41               		bit	0,c				; If tone is off...
     199:  00:8E9C  C0                  		ret	nz				; ...return
     200:  00:8E9D  22 40 F1            		ld	[AYREGS+0],hl			; copied in to AYREGS (channel A tone)
     201:  00:8EA0  C9                  		ret					; Return
     202:  00:8EA1                      .SETMIXER:	; --- Set PSG mixer value ---
     203:  00:8EA1  4F                  		ld	c,a				; c:=OR mask
     204:  00:8EA2  3A 47 F1            		ld	a,[AYREGS+7]			; a:=PSG mixer value
     205:  00:8EA5  A2                  		and	d				; AND mask
     206:  00:8EA6  B1                  		or	c				; OR mask
     207:  00:8EA7  32 47 F1            		ld	[AYREGS+7],a			; PSG mixer value updated
     208:  00:8EAA  3A 49 F2            		ld	a,[ayFX_VOLUME]			; a:=ayFX volume value
     209:  00:8EAD  2A 46 F2            		ld	hl,[ayFX_TONE]			; ayFX tone value
     210:  00:8EB0  C9                  		ret					; Return
     211:  00:8EB1                      
     212:  00:8EB1                      		IF ( AYFXRELATIVE == 1 )
     213:  00:8EB1                    ~ 			; --- UNCOMMENT THIS IF YOU DON'T USE THIS REPLAYER WITH PT3 REPLAYER ---
     214:  00:8EB1                    ~ 		;VT_:	.INCBIN	"VT.BIN"
     215:  00:8EB1                    ~ 			; --- UNCOMMENT THIS IF YOU DON'T USE THIS REPLAYER WITH PT3 REPLAYER ---
     216:  00:8EB1                    ~ 		ENDIF
      62.  00:8EB1                      	
      63.  00:8EB1                      	
      64.  00:8EB1                      
      65.  00:8EB1                      ;;=====================================================
      66.  00:8EB1                      ;;DEFINICIÓN DE CANTIONES Y EFECTOS DE SONIDO
      67.  00:8EB1                      ;;=====================================================		
      68.  00:8EB1                      song:
      69.  00:8EB1  (0968)              	incbin "bloodytears_castlevania.99"
      70.  00:9819                      	
      71.  00:9819                      sfx_bank:
      72.  00:9819  (004B)              	incbin "demo.afb"
      73.  00:9864                      
     142   00:9864                      	
     143   00:9864                      	include "subr_ayudas.asm"
       1.  00:9864                      ;;=====================================================
       2.  00:9864                      ;;SUBRUTINAS MANEJO DE OBJETOS AYUDA
       3.  00:9864                      ;;=====================================================	
       4.  00:9864                      
       5.  00:9864                      ;;=====================================================
       6.  00:9864                      ;;INICIALIZA_AYUDAS
       7.  00:9864                      ;;=====================================================	
       8.  00:9864                      ; función: 	inicializa las variables de estructuras de ayuda del array lista_ayudas
       9.  00:9864                      ; entrada: 	datos_delasdistintasayudas, variable estructura_ayuda_ayudaquesea
      10.  00:9864                      ; salida: 	lista_ayudas
      11.  00:9864                      ; toca:		HL, DE, BC
      12.  00:9864                      inicializa_ayudas:
      13.  00:9864                      	;oración
      14.  00:9864  DD 21 73 A7         	LD		IX, ayuda_oracion
      15.  00:9868  DD 36 00 00         	LD		(IX + 0), INACTIVA			
      16.  00:986C  21 4C A8            	LD		HL, array_oracionon
      17.  00:986F  DD 74 01            	LD		(IX + 1), H
      18.  00:9872  DD 75 02            	LD		(IX + 2), L
      19.  00:9875  21 50 A8            	LD		HL, array_oracionoff
      20.  00:9878  DD 74 03            	LD		(IX + 3), H
      21.  00:987B  DD 75 04            	LD		(IX + 4), L
      22.  00:987E  DD 36 05 A3         	LD		(IX + 5), POSORACION
      23.  00:9882  DD 36 06 20         	LD		(IX + 6), POSORACIONX
      24.  00:9886  DD 36 07 70         	LD		(IX + 7), POSAYUDASY	;como es constante y no se cambia se puede inicializar la estructura con el valor y ahorramos tiempo
      25.  00:988A  21 78 99            	LD		HL, accion_oracion
      26.  00:988D  DD 74 08            	LD		(IX + 8), H
      27.  00:9890  DD 75 09            	LD		(IX + 9), L
      28.  00:9893                      	
      29.  00:9893                      	;cruz
      30.  00:9893  21 ED A7            	LD		HL, datos_cruz
      31.  00:9896  11 83 A7            	LD		DE, ayuda_cruz
      32.  00:9899  01 10 00            	LD		BC, 16;#ESTRUCTURA_AYUDA ;equivale a 16.. el tamaño de la estructura en bytes
      33.  00:989C  ED B0               	LDIR
      34.  00:989E                      	
      35.  00:989E                      	;agua bendita
      36.  00:989E  21 F7 A7            	LD		HL, datos_aguabendita
      37.  00:98A1  11 93 A7            	LD		DE, ayuda_aguabendita
      38.  00:98A4  CD CC 98            	CALL	carga_datos_ayuda
      39.  00:98A7                      		
      40.  00:98A7                      	;armadura
      41.  00:98A7  21 08 A8            	LD		HL, datos_armadura
      42.  00:98AA  11 A3 A7            	LD		DE, ayuda_armadura
      43.  00:98AD  CD CC 98            	CALL	carga_datos_ayuda
      44.  00:98B0                      		
      45.  00:98B0                      	;planta
      46.  00:98B0  21 19 A8            	LD		HL, datos_planta
      47.  00:98B3  11 B3 A7            	LD		DE, ayuda_planta
      48.  00:98B6  CD CC 98            	CALL	carga_datos_ayuda
      49.  00:98B9                      		
      50.  00:98B9                      	;vida extra
      51.  00:98B9  21 2A A8            	LD		HL, datos_vidaextra
      52.  00:98BC  11 C3 A7            	LD		DE, ayuda_vidaextra
      53.  00:98BF  CD CC 98            	CALL	carga_datos_ayuda
      54.  00:98C2                      		
      55.  00:98C2                      	;ballesta
      56.  00:98C2  21 3B A8            	LD		HL, datos_ballesta
      57.  00:98C5  11 D3 A7            	LD		DE, ayuda_ballesta
      58.  00:98C8  CD CC 98            	CALL	carga_datos_ayuda
      59.  00:98CB                      fin_resetea_ayudas:
      60.  00:98CB  C9                  	RET
      61.  00:98CC                      	
      62.  00:98CC                      
      63.  00:98CC                      ;;=====================================================
      64.  00:98CC                      ;;CARGA_DATOS_AYUDA
      65.  00:98CC                      ;;=====================================================	
      66.  00:98CC                      ; función: 	carga los datos de la ayuda de una variable dentro de la variable estructura (más carga y espacio que rellenar a pelo desde IX en adelante pero más simple)
      67.  00:98CC                      ;entrada
      68.  00:98CC                      ;  hl: origen de datos
      69.  00:98CC                      ;  de: destino de datos
      70.  00:98CC                      ; salida: 	-
      71.  00:98CC                      ; toca:		HL, DE, BC
      72.  00:98CC                      carga_datos_ayuda:
      73.  00:98CC  01 10 00            	LD		BC, 16;#ESTRUCTURA_AYUDA ;equivale a 16.. el tamaño de la estructura en bytes
      74.  00:98CF  ED B0               	LDIR
      75.  00:98D1                      fin_carga_datos_ayuda:
      76.  00:98D1  C9                  	RET
      77.  00:98D2                      
      78.  00:98D2                      
      79.  00:98D2                      
      80.  00:98D2                      ;;=====================================================
      81.  00:98D2                      ;;PINTA_OBJ_AYUDA
      82.  00:98D2                      ;;=====================================================	
      83.  00:98D2                      ; función: 	pinta un objeto de tipo ayuda que se le pase por referencia IX y el tipo en A
      84.  00:98D2                      ; entrada: 	IX - puntero a objeto a mostrar, A - si está on u off
      85.  00:98D2                      ; salida: 	-
      86.  00:98D2                      ; toca:		AF, HL, BC, DE
      87.  00:98D2                      pinta_obj_ayuda:
      88.  00:98D2                      	;se recibe objeto desde fuera, por ejmplo LD IX, ayuda_oracion
      89.  00:98D2                      
      90.  00:98D2  B7                  	OR		 A
      91.  00:98D3  CA E2 98            	JP		 Z,.dibujooff
      92.  00:98D6                      .dibujoon:	
      93.  00:98D6  DD 66 01            	LD		 H, (IX + 1)
      94.  00:98D9  DD 6E 02            	LD		 L, (IX + 2)
      95.  00:98DC  22 D0 84            	LD		(wordaux2), HL
      96.  00:98DF  C3 EB 98            	JP		.param_wordaux2
      97.  00:98E2                      .dibujooff:
      98.  00:98E2  DD 66 03            	LD		 H, (IX + 3)
      99.  00:98E5  DD 6E 04            	LD		 L, (IX + 4)
     100.  00:98E8  22 D0 84            	LD		(wordaux2), HL
     101.  00:98EB                      
     102.  00:98EB                      .param_wordaux2:	
     103.  00:98EB  21 00 19            	LD		HL, TILMAP + 256	;calcula posición en tilemap + 256 por colocarse siempre en bank1
     104.  00:98EE  DD 7E 05            	LD		 A, (IX + 5)
     105.  00:98F1  CD 0B 81            	CALL	suma_A_HL
     106.  00:98F4  22 CE 84            	LD		(wordaux1), HL		;pongo el valor en wordaux1
     107.  00:98F7                      
     108.  00:98F7                      .filasycols:
     109.  00:98F7  3E 02               	LD		 A, 2				;equivale a LD	A,2 porque A ya valía 1
     110.  00:98F9  32 D2 84            	LD		(byteaux1), A	;nº de filas
     111.  00:98FC  32 D3 84            	LD		(byteaux2), A	;nº de columnas
     112.  00:98FF                      	
     113.  00:98FF  C3 8E 84            	JP		pinta_array
     114.  00:9902                      fin_pinta_obj_ayuda:
     115.  00:9902                      
     116.  00:9902                      
     117.  00:9902                      ;;=====================================================
     118.  00:9902                      ;;PINTA_AYUDAS_HABITACIÓN
     119.  00:9902                      ;;=====================================================	
     120.  00:9902                      ; función: 	examina el byte con las ayudas y pinta las que estén seleccionadas según variable habitacion_extras
     121.  00:9902                      ; entrada: 	habitacion_extras
     122.  00:9902                      ; salida: 	-
     123.  00:9902                      pinta_ayudas_habitacion:
     124.  00:9902                      .examina_oracion:
     125.  00:9902  3A E0 A3            	LD		 A, (habitacion_extras)
     126.  00:9905  CB 7F               	BIT		 7,A
     127.  00:9907  CA 13 99            	JP		 Z,.examina_cruz
     128.  00:990A  DD 21 73 A7         	LD		IX, ayuda_oracion
     129.  00:990E  3E 01               	LD		 A, ACTIVA
     130.  00:9910  CD D2 98            	CALL	pinta_obj_ayuda
     131.  00:9913                      .examina_cruz:
     132.  00:9913  3A E0 A3            	LD		 A, (habitacion_extras)
     133.  00:9916  CB 77               	BIT		 6,A
     134.  00:9918  CA 24 99            	JP		 Z,.examina_aguabendita
     135.  00:991B  DD 21 83 A7         	LD		IX, ayuda_cruz
     136.  00:991F  3E 01               	LD		 A, ACTIVA
     137.  00:9921  CD D2 98            	CALL	pinta_obj_ayuda
     138.  00:9924                      .examina_aguabendita:
     139.  00:9924  3A E0 A3            	LD		 A, (habitacion_extras)
     140.  00:9927  CB 6F               	BIT		 5,A
     141.  00:9929  CA 35 99            	JP		 Z,.examina_armadura
     142.  00:992C  DD 21 93 A7         	LD		IX, ayuda_aguabendita
     143.  00:9930  3E 01               	LD		 A, ACTIVA
     144.  00:9932  CD D2 98            	CALL	pinta_obj_ayuda
     145.  00:9935                      .examina_armadura:
     146.  00:9935  3A E0 A3            	LD		 A, (habitacion_extras)
     147.  00:9938  CB 67               	BIT		 4,A
     148.  00:993A  CA 46 99            	JP		 Z,.examina_planta
     149.  00:993D  DD 21 A3 A7         	LD		IX, ayuda_armadura
     150.  00:9941  3E 01               	LD		 A, ACTIVA
     151.  00:9943  CD D2 98            	CALL	pinta_obj_ayuda
     152.  00:9946                      .examina_planta:
     153.  00:9946  3A E0 A3            	LD		 A, (habitacion_extras)
     154.  00:9949  CB 5F               	BIT		 3,A
     155.  00:994B  CA 57 99            	JP		 Z,.examina_vidaextra
     156.  00:994E  DD 21 B3 A7         	LD		IX, ayuda_planta
     157.  00:9952  3E 01               	LD		 A, ACTIVA
     158.  00:9954  CD D2 98            	CALL	pinta_obj_ayuda
     159.  00:9957                      .examina_vidaextra:
     160.  00:9957  3A E0 A3            	LD		 A, (habitacion_extras)
     161.  00:995A  CB 57               	BIT		 2,A
     162.  00:995C  CA 68 99            	JP		 Z,.examina_ballesta
     163.  00:995F  DD 21 C3 A7         	LD		IX, ayuda_vidaextra
     164.  00:9963  3E 01               	LD		 A, ACTIVA
     165.  00:9965  CD D2 98            	CALL	pinta_obj_ayuda
     166.  00:9968                      .examina_ballesta:
     167.  00:9968  3A E0 A3            	LD		 A, (habitacion_extras)
     168.  00:996B  CB 4F               	BIT		 1,A
     169.  00:996D  C8                  	RET		 Z
     170.  00:996E  DD 21 D3 A7         	LD		IX, ayuda_ballesta
     171.  00:9972  3E 01               	LD		 A, ACTIVA
     172.  00:9974  CD D2 98            	CALL	pinta_obj_ayuda
     173.  00:9977                      fin_pinta_ayudas_habitacion:
     174.  00:9977  C9                  	RET
     175.  00:9978                      
     176.  00:9978                      
     177.  00:9978                      
     178.  00:9978                      ;;=====================================================
     179.  00:9978                      ;;ACCION_ORACION
     180.  00:9978                      ;;=====================================================	
     181.  00:9978                      ; función: 	
     182.  00:9978                      ; entrada: 	
     183.  00:9978                      ; salida: 	-
     184.  00:9978                      accion_oracion:
     185.  00:9978                      fin_accion_oracion:
     186.  00:9978  C9                  	RET
     187.  00:9979                      	
     188.  00:9979                      
     189.  00:9979                      ;;=====================================================
     190.  00:9979                      ;;ACCION_CRUZ
     191.  00:9979                      ;;=====================================================	
     192.  00:9979                      ; función: 	
     193.  00:9979                      ; entrada: 	
     194.  00:9979                      ; salida: 	-
     195.  00:9979                      accion_cruz:
     196.  00:9979                      fin_accion_cruz:
     197.  00:9979  C9                  	RET
     198.  00:997A                      
     199.  00:997A                      
     200.  00:997A                      ;;=====================================================
     201.  00:997A                      ;;ACCION_AGUA
     202.  00:997A                      ;;=====================================================	
     203.  00:997A                      ; función: 	
     204.  00:997A                      ; entrada: 	
     205.  00:997A                      ; salida: 	-
     206.  00:997A                      accion_agua:
     207.  00:997A                      fin_accion_agua:
     208.  00:997A  C9                  	RET
     209.  00:997B                      
     210.  00:997B                      
     211.  00:997B                      ;;=====================================================
     212.  00:997B                      ;;ACCION_ARMADURA
     213.  00:997B                      ;;=====================================================	
     214.  00:997B                      ; función: 	
     215.  00:997B                      ; entrada: 	
     216.  00:997B                      ; salida: 	-
     217.  00:997B                      accion_armadura:
     218.  00:997B                      fin_accion_armadura:
     219.  00:997B  C9                  	RET
     220.  00:997C                      
     221.  00:997C                      
     222.  00:997C                      ;;=====================================================
     223.  00:997C                      ;;ACCION_PLANTA
     224.  00:997C                      ;;=====================================================	
     225.  00:997C                      ; función: 	
     226.  00:997C                      ; entrada: 	
     227.  00:997C                      ; salida: 	-
     228.  00:997C                      accion_planta:
     229.  00:997C                      fin_accion_planta:
     230.  00:997C  C9                  	RET
     231.  00:997D                      
     232.  00:997D                      
     233.  00:997D                      ;;=====================================================
     234.  00:997D                      ;;ACCION_VIDAEXTRA
     235.  00:997D                      ;;=====================================================	
     236.  00:997D                      ; función: 	
     237.  00:997D                      ; entrada: 	
     238.  00:997D                      ; salida: 	-
     239.  00:997D                      accion_vidaextra:
     240.  00:997D                      fin_accion_vidaextra:
     241.  00:997D  C9                  	RET
     242.  00:997E                      
     243.  00:997E                      
     244.  00:997E                      ;;=====================================================
     245.  00:997E                      ;;ACCION_BALLESTA
     246.  00:997E                      ;;=====================================================	
     247.  00:997E                      ; función: 	
     248.  00:997E                      ; entrada: 	
     249.  00:997E                      ; salida: 	-
     250.  00:997E                      accion_ballesta:
     251.  00:997E                      fin_accion_ballesta:
     252.  00:997E  C9                  	RET
     253.  00:997F                      
     254.  00:997F                      
     144   00:997F                      	
     145   00:997F                      
     146   00:997F                      ;;=====================================================
     147   00:997F                      ;;DEFINICIÓN DE SUBRUTINAS DE FERNANDO PARA COMPRESIÓN Y SONIDO
     148   00:997F                      ;;=====================================================
     149   00:997F                      ;Este include lleva la rutina de descompresión de ROM/RAM a VRAM de pletter
     150   00:997F                      ;Está adaptada de la original a sjasm
     151   00:997F                      ;	HL = RAM/ROM source	; DE = VRAM destination
     152   00:997F                      depack_VRAM:
     153   00:997F                      	include "PL_VRAM_Depack_SJASM.asm"
       1.  00:997F                      ;-----------------------------------------------------------
       2.  00:997F                      ; Pletter v0.5b VRAM Depacker v1.1 - 16Kb version
       3.  00:997F                      ; HL = RAM/ROM source ; DE = VRAM destination
       4.  00:997F                      ;-----------------------------------------------------------
       5.  00:997F  F3                  	di
       6.  00:9980                      
       7.  00:9980                      ; VRAM address setup
       8.  00:9980  7B                  	ld	a,e
       9.  00:9981  D3 99               	out	[099h],a
      10.  00:9983  7A                  	ld	a,d
      11.  00:9984  F6 40               	or	040h
      12.  00:9986  D3 99               	out	[099h],a
      13.  00:9988                      
      14.  00:9988                      ; Initialization
      15.  00:9988  7E                  	ld	a,[hl]
      16.  00:9989  23                  	inc	hl
      17.  00:998A  D9                  	exx
      18.  00:998B  11 00 00            	ld	de,0
      19.  00:998E  87                  	add	a,a
      20.  00:998F  3C                  	inc	a
      21.  00:9990  CB 13               	rl	e
      22.  00:9992  87                  	add	a,a
      23.  00:9993  CB 13               	rl	e
      24.  00:9995  87                  	add	a,a
      25.  00:9996  CB 13               	rl	e
      26.  00:9998  CB 13               	rl	e
      27.  00:999A  21 51 9A            	ld	hl,modes
      28.  00:999D  19                  	add	hl,de
      29.  00:999E  5E                  	ld	e,[hl]
      30.  00:999F  DD 6B               	ld	ixl,e
      31.  00:99A1  23                  	inc	hl
      32.  00:99A2  5E                  	ld	e,[hl]
      33.  00:99A3  DD 63               	ld	ixh,e
      34.  00:99A5  1E 01               	ld	e,1
      35.  00:99A7  D9                  	exx
      36.  00:99A8  FD 21 B1 99         	ld	iy,loop
      37.  00:99AC                      
      38.  00:99AC                      ; Main depack loop
      39.  00:99AC  0E 98               literal:ld	c,098h
      40.  00:99AE  ED A3               	outi
      41.  00:99B0  13                  	inc	de
      42.  00:99B1  87                  loop:	add	a,a
      43.  00:99B2  CC 45 9A              	call	z,getbit
      44.  00:99B5  30 F5               	jr	nc,literal
      45.  00:99B7                      
      46.  00:99B7                      ; Compressed data
      47.  00:99B7  D9                  	exx
      48.  00:99B8  62                  	ld	h,d
      49.  00:99B9  6B                  	ld	l,e
      50.  00:99BA  87                  getlen: add	a,a
      51.  00:99BB  CC 49 9A            	call	z,getbitexx
      52.  00:99BE  30 1D               	jr	nc,lenok
      53.  00:99C0  87                  lus:	add	a,a
      54.  00:99C1  CC 49 9A            	call	z,getbitexx
      55.  00:99C4  ED 6A               	adc	hl,hl
      56.  00:99C6  D8                  	ret	c
      57.  00:99C7  87                  	add	a,a
      58.  00:99C8  CC 49 9A            	call	z,getbitexx
      59.  00:99CB  30 10               	jr	nc,lenok
      60.  00:99CD  87                  	add	a,a
      61.  00:99CE  CC 49 9A            	call	z,getbitexx
      62.  00:99D1  ED 6A               	adc	hl,hl
      63.  00:99D3  DA 4F 9A            	jp	c,Depack_out
      64.  00:99D6  87                  	add	a,a
      65.  00:99D7  CC 49 9A            	call	z,getbitexx
      66.  00:99DA  DA C0 99            	jp	c,lus
      67.  00:99DD  23                  lenok:  inc	hl
      68.  00:99DE  D9                  	exx
      69.  00:99DF  4E                  	ld	c,[hl]
      70.  00:99E0  23                  	inc	hl
      71.  00:99E1  06 00               	ld	b,0
      72.  00:99E3  CB 79               	bit	7,c
      73.  00:99E5  CA 18 9A            	jp	z,offsok
      74.  00:99E8  DD E9               	jp	ix
      75.  00:99EA                      
      76.  00:99EA  87                  mode7:  add	a,a
      77.  00:99EB  CC 45 9A              	call	z,getbit
      78.  00:99EE  CB 10               	rl	b
      79.  00:99F0  87                  mode6:	add	a,a
      80.  00:99F1  CC 45 9A              	call	z,getbit
      81.  00:99F4  CB 10               	rl	b
      82.  00:99F6  87                  mode5:  add	a,a
      83.  00:99F7  CC 45 9A              	call	z,getbit
      84.  00:99FA  CB 10               	rl	b
      85.  00:99FC  87                  mode4:  add	a,a
      86.  00:99FD  CC 45 9A              	call	z,getbit
      87.  00:9A00  CB 10               	rl	b
      88.  00:9A02  87                  mode3:  add	a,a
      89.  00:9A03  CC 45 9A              	call	z,getbit
      90.  00:9A06  CB 10               	rl	b
      91.  00:9A08  87                  mode2:	add	a,a
      92.  00:9A09  CC 45 9A              	call	z,getbit
      93.  00:9A0C  CB 10               	rl	b
      94.  00:9A0E  87                  	add	a,a
      95.  00:9A0F  CC 45 9A              	call	z,getbit
      96.  00:9A12  30 04               	jr	nc,offsok
      97.  00:9A14  B7                  	or	a
      98.  00:9A15  04                  	inc	b
      99.  00:9A16  CB B9               	res	7,c
     100.  00:9A18  03                  offsok: inc	bc
     101.  00:9A19  E5                  	push	hl
     102.  00:9A1A  D9                  	exx
     103.  00:9A1B  E5                  	push	hl
     104.  00:9A1C  D9                  	exx
     105.  00:9A1D  6B                  	ld	l,e
     106.  00:9A1E  62                  	ld	h,d
     107.  00:9A1F  ED 42               	sbc	hl,bc
     108.  00:9A21  C1                  	pop	bc
     109.  00:9A22  F5                  	push	af
     110.  00:9A23  7D                  .loop:	ld	a,l
     111.  00:9A24  D3 99               	out	[099h],a
     112.  00:9A26  7C                  	ld	a,h
     113.  00:9A27  00                  	nop                     ; VDP timing
     114.  00:9A28  D3 99               	out	[099h],a
     115.  00:9A2A  00                  	nop                     ; VDP timing
     116.  00:9A2B  DB 98               	in	a,[098h]
     117.  00:9A2D  08                  	ex	af,af'
     118.  00:9A2E  7B                  	ld	a,e
     119.  00:9A2F  00                  	nop			; VDP timing
     120.  00:9A30  D3 99               	out	[099h],a
     121.  00:9A32  7A                  	ld	a,d
     122.  00:9A33  F6 40               	or	040h
     123.  00:9A35  D3 99               	out	[099h],a
     124.  00:9A37  08                  	ex	af,af'
     125.  00:9A38  00                  	nop			; VDP timing
     126.  00:9A39  D3 98               	out	[098h],a
     127.  00:9A3B  13                  	inc	de
     128.  00:9A3C  ED A1               	cpi
     129.  00:9A3E  EA 23 9A            	jp	pe,.loop
     130.  00:9A41  F1                  	pop	af
     131.  00:9A42  E1                  	pop	hl
     132.  00:9A43  FD E9               	jp	iy
     133.  00:9A45                      
     134.  00:9A45  7E                  getbit: ld	a,[hl]
     135.  00:9A46  23                  	inc	hl
     136.  00:9A47  17                  	rla
     137.  00:9A48  C9                  	ret
     138.  00:9A49                      
     139.  00:9A49                      getbitexx:
     140.  00:9A49  D9                  	exx
     141.  00:9A4A  7E                  	ld	a,[hl]
     142.  00:9A4B  23                  	inc	hl
     143.  00:9A4C  D9                  	exx
     144.  00:9A4D  17                  	rla
     145.  00:9A4E  C9                  	ret
     146.  00:9A4F                      
     147.  00:9A4F                      ; Depacker exit
     148.  00:9A4F                      Depack_out:
     149.  00:9A4F  FB                  	ei
     150.  00:9A50  C9                  	ret
     151.  00:9A51                      
     152.  00:9A51                      modes:
     153.  00:9A51  18 9A               	dw	offsok
     154.  00:9A53  08 9A               	dw	mode2
     155.  00:9A55  02 9A               	dw	mode3
     156.  00:9A57  FC 99               	dw	mode4
     157.  00:9A59  F6 99               	dw	mode5
     158.  00:9A5B  F0 99               	dw	mode6
     159.  00:9A5D  EA 99               	dw	mode7
     154   00:9A5F                      
     155   00:9A5F                      
     156   00:9A5F                      	
     157   00:9A5F                      ;;=====================================================
     158   00:9A5F                      ;;DEFINICIÓN DE ESTRUCTURAS
     159   00:9A5F                      ;;=====================================================		
     160   00:9A5F                      	include "estructuras.asm"
       1.  00:9A5F                      ;;=====================================================
       2.  00:9A5F                      ;;DEFINICIÓN DE ESTRUCTURAS
       3.  00:9A5F                      ;;=====================================================
       4.  00:9A5F                      
       5.  00:9A5F                      ;crear estructura
       6.  00:9A5F                      
       7.  00:9A5F                      	STRUCT ESTRUCTURA_PUNTOMIRA
       8.  00:9A5F                    < posx			DB		100
       9.  00:9A5F                    < posy			DB		100
      10.  00:9A5F                    < escena			DB		0	;valores porsibles 0 (blanco+rojo en punto de mira) y NEG 0 (al revés)
      11.  00:9A5F                    < velocidad		DB		0
      12.  00:9A5F                    < boton2_pressed  DB		0
      13.  00:9A5F                    < cadencia		DB		5	;nº de veces que se ejecutará el disparo antes de ejecutar un disparo real (porque cuando se pulsa la tecl dispara 3 ó 4 veces de rápido que va)
      14.  00:9A5F                    < ; al final he decidido (ya que el punto de mira es el prota) que lo relacionado con el prota vaya en esta estructura
      15.  00:9A5F                    < pm_aux1			DB		0	;para llegar a los 16 campos
      16.  00:9A5F                    < pm_aux2			DB		0	;para llegar a los 16 campos
      17.  00:9A5F                    < pm_aux3			DB		0	;para llegar a los 16 campos
      18.  00:9A5F                    < pm_aux4			DB		0	;para llegar a los 16 campos
      19.  00:9A5F                    < pm_aux5			DB		0	;para llegar a los 16 campos
      20.  00:9A5F                    < pm_aux6			DB		0	;para llegar a los 16 campos
      21.  00:9A5F                    < pm_aux7			DB		0	;para llegar a los 16 campos
      22.  00:9A5F                    < pm_aux8			DB		0	;para llegar a los 16 campos
      23.  00:9A5F                    < pm_aux9			DB		0	;para llegar a los 16 campos
      24.  00:9A5F                    < pm_aux10		DB		0	;para llegar a los 16 campos
      25.  00:9A5F                    < 	ENDSTRUCT;ESTRUCTURA_PUNTOMIRA
      26.  00:9A5F                      
      27.  00:9A5F                      	
      28.  00:9A5F                      	STRUCT ESTRUCTURA_ENEMIGO
      29.  00:9A5F                    < tipo				DB		0	;(0 serpiente por ejemplo) #FF muerto o no existe
      30.  00:9A5F                    < posx				DB		5
      31.  00:9A5F                    < posy				DB		50
      32.  00:9A5F                    < color				DB		5
      33.  00:9A5F                    < escena				DB		0
      34.  00:9A5F                    < contador_siguiente_escena	DB	0
      35.  00:9A5F                    < reset_contador		DB		0
      36.  00:9A5F                    < dano				DB		0	;daño
      37.  00:9A5F                    < energia				DB		0	;energía del enemigo... si llega a 0 => existe <- 0
      38.  00:9A5F                    < ;indica el nº de sprite a mostrar y si está compuesto por uno o dos sprites y si están en horizontal o vertical
      39.  00:9A5F                    < ver_hor				DB		0
      40.  00:9A5F                    < manejador_dibujo 	DW		0
      41.  00:9A5F                    < en_aux3				DB		0
      42.  00:9A5F                    < en_aux4				DB		0
      43.  00:9A5F                    < 	ENDSTRUCT;ESTRUCTURA_ENEMIGO
      44.  00:9A5F                      	
      45.  00:9A5F                      	STRUCT ESTRUCTURA_AYUDA		;vidas extra, plantas de curación de energía, reliquias				
      46.  00:9A5F                    < activo				DB		0	;0 no activo <>0 activo 											0
      47.  00:9A5F                    < postilemem_nousado	DW		0	;pos en memoria ver array_ayudas de cómo se mostrarán (wordaux2)	1,2
      48.  00:9A5F                    < postilemem_usado	DW		0	;pos en memoria ver array_ayudas de cómo se mostrarán (wordaux2)	3,4
      49.  00:9A5F                    < pospantalla			DB		0	;pos en pantalla (memoria en el banco 1 se le suma 256 + TILEMAP) (wordaux1)	5
      50.  00:9A5F                    < posx				DB		0	;pos del pixel central (esquina superior + 8x)						6
      51.  00:9A5F                    < posy				DB		112	;pos del pixel central (esquina superior + 8y) (para toas igual)	7
      52.  00:9A5F                    < puntero_accion		DW		0	;subrutina que indica la acción si se dispara en el objeto			8,9
      53.  00:9A5F                    < ayu_aux1			DB		0	;relleno
      54.  00:9A5F                    < ayu_aux2			DB		0	;relleno
      55.  00:9A5F                    < ayu_aux3			DB		0	;relleno
      56.  00:9A5F                    < ayu_aux4			DB		0	;relleno
      57.  00:9A5F                    < ayu_aux5			DB		0	;relleno
      58.  00:9A5F                    < ayu_aux6			DB		0	;relleno
      59.  00:9A5F                    < 	ENDSTRUCT;ESTRUCTURA_AYUDA
      60.  00:9A5F                      
      61.  00:9A5F                      
      62.  00:9A5F                      	STRUCT ESTRUCTURA_ANTORCHA
      63.  00:9A5F                    < activo				DB		0	;0 no activa <>0 activo
      64.  00:9A5F                    < postilemem_antor1	DW		0	;pos en memoria ver array_antorcha de cómo se mostrará (wordaux2)	1,2
      65.  00:9A5F                    < pospantalla_antor1	DB		0	;pos en pantalla (memoria en el banco 1 se le suma 256 + TILEMAP) (wordaux1)	3
      66.  00:9A5F                    < pospantalla_antor2	DB		0	;pos en pantalla (memoria en el banco 1 se le suma 256 + TILEMAP) (wordaux1)	4
      67.  00:9A5F                    < escena				DB		0	;(va entre 0 y 1 - 0=>llama1 y llama2 o 1=>llama2 y llama1	7 - tiles 196 y 197)	5
      68.  00:9A5F                    < cont_sig_escena		DB		10	;	6
      69.  00:9A5F                    < 	ENDSTRUCT;ESTRUCTURA_ANTORCHA
      70.  00:9A5F                      
      71.  00:9A5F                      	STRUCT ESTRUCTURA_ESQUELETO
      72.  00:9A5F                    < activo				DB		0	;0 no activa <>0 activo
      73.  00:9A5F                    < postilemem_antor1	DW		0	;pos en memoria ver array_antorcha de cómo se mostrará (wordaux2)	1,2
      74.  00:9A5F                    < pospantalla_esquel1	DB		0	;pos en pantalla (memoria en el banco 1 se le suma 256 + TILEMAP) (wordaux1)	3
      75.  00:9A5F                    < pospantalla_esquel2	DB		0	;pos en pantalla (memoria en el banco 1 se le suma 256 + TILEMAP) (wordaux1)	4
      76.  00:9A5F                    < escena				DB		0	;(va entre 0 y 4 - tiles 164, 165, 164, 166)	5
      77.  00:9A5F                    < cont_sig_escena		DB		0	;	6
      78.  00:9A5F                    < 	ENDSTRUCT;ESTRUCTURA_ESQUELETO
      79.  00:9A5F                      
      80.  00:9A5F                      
      81.  00:9A5F                      
      82.  00:9A5F                      
      83.  00:9A5F                      
      84.  00:9A5F                      
     161   00:9A5F                      	
     162   00:9A5F                      ;;=====================================================
     163   00:9A5F                      ;;DEFINICIÓN DE VARIABLES
     164   00:9A5F                      ;;=====================================================		
     165   00:9A5F                      	include "sprites.asm"
       1.  00:9A5F                      ;;=====================================================
       2.  00:9A5F                      ;;DEFINICIÓN DE SPRITES
       3.  00:9A5F                      ;;=====================================================	
       4.  00:9A5F                      
       5.  00:9A5F                      
       6.  00:9A5F                      ;; NOTA:
       7.  00:9A5F                      ;~ sprite_reliquia_oracion: on/off
       8.  00:9A5F                      ;~ sprite_reliquia_cruz: on/off
       9.  00:9A5F                      ;~ sprite_reliquia_agua: on/off
      10.  00:9A5F                      ;~ sprite_peto: on/off
      11.  00:9A5F                      ;~ sprite_planta: on/off
      12.  00:9A5F                      ;~ sprite_vida_extra: on/off
      13.  00:9A5F                      ;~ sprite_ballesta_mejorada: on/off
      14.  00:9A5F                      
      15.  00:9A5F                      ;~ iban a ser sprites pero por falta de recursos serán tiles
      16.  00:9A5F                      
      17.  00:9A5F                      
      18.  00:9A5F                      sprites_pantantalla:
      19.  00:9A5F                      
      20.  00:9A5F                      ;; PARTE 1: SPRITES COMUNES
      21.  00:9A5F                      
      22.  00:9A5F                      sprites_comunes:
      23.  00:9A5F                      sprite_punto_mira_1:	;color 8
      24.  00:9A5F                      	db #FF,#FF,#C0,#C0,#C0,#C0,#C0,#C0
      24.  00:9A5F  FF FF C0 C0 C0 C0 C0 C0 
      25.  00:9A67                      	db #C0,#C0,#C0,#C0,#C0,#C0,#FF,#FF
      25.  00:9A67  C0 C0 C0 C0 C0 C0 FF FF 
      26.  00:9A6F                      	db #FF,#FF,#03,#03,#03,#03,#03,#03
      26.  00:9A6F  FF FF 03 03 03 03 03 03 
      27.  00:9A77                      	db #03,#03,#03,#03,#03,#03,#FF,#FF
      27.  00:9A77  03 03 03 03 03 03 FF FF 
      28.  00:9A7F                      	
      29.  00:9A7F                      sprite_punto_mira_2: 	;color 15
      30.  00:9A7F                      	db #00,#00,#00,#00,#0F,#0F,#0C,#0C
      30.  00:9A7F  00 00 00 00 0F 0F 0C 0C 
      31.  00:9A87                      	db #0C,#0C,#0F,#0F,#00,#00,#00,#00
      31.  00:9A87  0C 0C 0F 0F 00 00 00 00 
      32.  00:9A8F                      	db #00,#00,#00,#00,#F0,#F0,#30,#30
      32.  00:9A8F  00 00 00 00 F0 F0 30 30 
      33.  00:9A97                      	db #30,#30,#F0,#F0,#00,#00,#00,#00
      33.  00:9A97  30 30 F0 F0 00 00 00 00 
      34.  00:9A9F                      	
      35.  00:9A9F                      sprite_punto_mira_1_mejorado:
      36.  00:9A9F                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      36.  00:9A9F  FF FF FF FF FF FF FF FF 
      37.  00:9AA7                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      37.  00:9AA7  FF FF FF FF FF FF FF FF 
      38.  00:9AAF                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      38.  00:9AAF  FF FF FF FF FF FF FF FF 
      39.  00:9AB7                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      39.  00:9AB7  FF FF FF FF FF FF FF FF 
      40.  00:9ABF                      
      41.  00:9ABF                      sprite_punto_mira_2_mejorado:
      42.  00:9ABF                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      42.  00:9ABF  FF FF FF FF FF FF FF FF 
      43.  00:9AC7                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      43.  00:9AC7  FF FF FF FF FF FF FF FF 
      44.  00:9ACF                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      44.  00:9ACF  FF FF FF FF FF FF FF FF 
      45.  00:9AD7                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      45.  00:9AD7  FF FF FF FF FF FF FF FF 
      46.  00:9ADF                      	
      47.  00:9ADF                      sprite_explosion_1:
      48.  00:9ADF                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      48.  00:9ADF  FF FF FF FF FF FF FF FF 
      49.  00:9AE7                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      49.  00:9AE7  FF FF FF FF FF FF FF FF 
      50.  00:9AEF                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      50.  00:9AEF  FF FF FF FF FF FF FF FF 
      51.  00:9AF7                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF	
      51.  00:9AF7  FF FF FF FF FF FF FF FF 
      52.  00:9AFF                      
      53.  00:9AFF                      sprite_explosion_2:
      54.  00:9AFF                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      54.  00:9AFF  FF FF FF FF FF FF FF FF 
      55.  00:9B07                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      55.  00:9B07  FF FF FF FF FF FF FF FF 
      56.  00:9B0F                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      56.  00:9B0F  FF FF FF FF FF FF FF FF 
      57.  00:9B17                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF	
      57.  00:9B17  FF FF FF FF FF FF FF FF 
      58.  00:9B1F                      fin_sprites_comunes:
      59.  00:9B1F                      
      60.  00:9B1F                      ;; PARTE 2: SPRITES NO COMUNES
      61.  00:9B1F                      
      62.  00:9B1F                      ;; ARAÑA
      63.  00:9B1F                      	
      64.  00:9B1F                      sprite_arana1_1:
      65.  00:9B1F                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      65.  00:9B1F  FF FF FF FF FF FF FF FF 
      66.  00:9B27                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      66.  00:9B27  FF FF FF FF FF FF FF FF 
      67.  00:9B2F                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      67.  00:9B2F  FF FF FF FF FF FF FF FF 
      68.  00:9B37                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      68.  00:9B37  FF FF FF FF FF FF FF FF 
      69.  00:9B3F                      	
      70.  00:9B3F                      sprite_arana1_2:
      71.  00:9B3F                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      71.  00:9B3F  FF FF FF FF FF FF FF FF 
      72.  00:9B47                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      72.  00:9B47  FF FF FF FF FF FF FF FF 
      73.  00:9B4F                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      73.  00:9B4F  FF FF FF FF FF FF FF FF 
      74.  00:9B57                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      74.  00:9B57  FF FF FF FF FF FF FF FF 
      75.  00:9B5F                      
      76.  00:9B5F                      ;; MURCIELAGO
      77.  00:9B5F                      	
      78.  00:9B5F                      sprite_murcielago1_1:
      79.  00:9B5F                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      79.  00:9B5F  FF FF FF FF FF FF FF FF 
      80.  00:9B67                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      80.  00:9B67  FF FF FF FF FF FF FF FF 
      81.  00:9B6F                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      81.  00:9B6F  FF FF FF FF FF FF FF FF 
      82.  00:9B77                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      82.  00:9B77  FF FF FF FF FF FF FF FF 
      83.  00:9B7F                      	
      84.  00:9B7F                      sprite_murcielago1_2:
      85.  00:9B7F                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      85.  00:9B7F  FF FF FF FF FF FF FF FF 
      86.  00:9B87                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      86.  00:9B87  FF FF FF FF FF FF FF FF 
      87.  00:9B8F                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      87.  00:9B8F  FF FF FF FF FF FF FF FF 
      88.  00:9B97                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF	
      88.  00:9B97  FF FF FF FF FF FF FF FF 
      89.  00:9B9F                      
      90.  00:9B9F                      ;; SERPIENTE
      91.  00:9B9F                      
      92.  00:9B9F                      sprite_serpiente1_1:
      93.  00:9B9F                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      93.  00:9B9F  FF FF FF FF FF FF FF FF 
      94.  00:9BA7                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      94.  00:9BA7  FF FF FF FF FF FF FF FF 
      95.  00:9BAF                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      95.  00:9BAF  FF FF FF FF FF FF FF FF 
      96.  00:9BB7                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      96.  00:9BB7  FF FF FF FF FF FF FF FF 
      97.  00:9BBF                      	
      98.  00:9BBF                      sprite_serpiente1_2:
      99.  00:9BBF                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      99.  00:9BBF  FF FF FF FF FF FF FF FF 
     100.  00:9BC7                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     100.  00:9BC7  FF FF FF FF FF FF FF FF 
     101.  00:9BCF                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     101.  00:9BCF  FF FF FF FF FF FF FF FF 
     102.  00:9BD7                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     102.  00:9BD7  FF FF FF FF FF FF FF FF 
     103.  00:9BDF                      	
     104.  00:9BDF                      sprite_serpiente2_1:
     105.  00:9BDF                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     105.  00:9BDF  FF FF FF FF FF FF FF FF 
     106.  00:9BE7                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     106.  00:9BE7  FF FF FF FF FF FF FF FF 
     107.  00:9BEF                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     107.  00:9BEF  FF FF FF FF FF FF FF FF 
     108.  00:9BF7                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     108.  00:9BF7  FF FF FF FF FF FF FF FF 
     109.  00:9BFF                      	
     110.  00:9BFF                      sprite_serpiente2_2:
     111.  00:9BFF                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     111.  00:9BFF  FF FF FF FF FF FF FF FF 
     112.  00:9C07                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     112.  00:9C07  FF FF FF FF FF FF FF FF 
     113.  00:9C0F                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     113.  00:9C0F  FF FF FF FF FF FF FF FF 
     114.  00:9C17                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     114.  00:9C17  FF FF FF FF FF FF FF FF 
     115.  00:9C1F                      
     116.  00:9C1F                      ;; ZOMBI
     117.  00:9C1F                      
     118.  00:9C1F                      sprite_zombi1_1_1:
     119.  00:9C1F                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     119.  00:9C1F  FF FF FF FF FF FF FF FF 
     120.  00:9C27                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     120.  00:9C27  FF FF FF FF FF FF FF FF 
     121.  00:9C2F                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     121.  00:9C2F  FF FF FF FF FF FF FF FF 
     122.  00:9C37                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     122.  00:9C37  FF FF FF FF FF FF FF FF 
     123.  00:9C3F                      
     124.  00:9C3F                      sprite_zombi1_2_1:
     125.  00:9C3F                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     125.  00:9C3F  FF FF FF FF FF FF FF FF 
     126.  00:9C47                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     126.  00:9C47  FF FF FF FF FF FF FF FF 
     127.  00:9C4F                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     127.  00:9C4F  FF FF FF FF FF FF FF FF 
     128.  00:9C57                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     128.  00:9C57  FF FF FF FF FF FF FF FF 
     129.  00:9C5F                      	
     130.  00:9C5F                      sprite_zombi1_3_1:
     131.  00:9C5F                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     131.  00:9C5F  FF FF FF FF FF FF FF FF 
     132.  00:9C67                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     132.  00:9C67  FF FF FF FF FF FF FF FF 
     133.  00:9C6F                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     133.  00:9C6F  FF FF FF FF FF FF FF FF 
     134.  00:9C77                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     134.  00:9C77  FF FF FF FF FF FF FF FF 
     135.  00:9C7F                      	
     136.  00:9C7F                      sprite_zombi1_4_1:
     137.  00:9C7F                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     137.  00:9C7F  FF FF FF FF FF FF FF FF 
     138.  00:9C87                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     138.  00:9C87  FF FF FF FF FF FF FF FF 
     139.  00:9C8F                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     139.  00:9C8F  FF FF FF FF FF FF FF FF 
     140.  00:9C97                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     140.  00:9C97  FF FF FF FF FF FF FF FF 
     141.  00:9C9F                      	
     142.  00:9C9F                      sprite_zombi1_1_2:
     143.  00:9C9F                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     143.  00:9C9F  FF FF FF FF FF FF FF FF 
     144.  00:9CA7                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     144.  00:9CA7  FF FF FF FF FF FF FF FF 
     145.  00:9CAF                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     145.  00:9CAF  FF FF FF FF FF FF FF FF 
     146.  00:9CB7                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     146.  00:9CB7  FF FF FF FF FF FF FF FF 
     147.  00:9CBF                      
     148.  00:9CBF                      sprite_zombi1_2_2:
     149.  00:9CBF                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     149.  00:9CBF  FF FF FF FF FF FF FF FF 
     150.  00:9CC7                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     150.  00:9CC7  FF FF FF FF FF FF FF FF 
     151.  00:9CCF                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     151.  00:9CCF  FF FF FF FF FF FF FF FF 
     152.  00:9CD7                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     152.  00:9CD7  FF FF FF FF FF FF FF FF 
     153.  00:9CDF                      	
     154.  00:9CDF                      sprite_zombi1_3_2:
     155.  00:9CDF                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     155.  00:9CDF  FF FF FF FF FF FF FF FF 
     156.  00:9CE7                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     156.  00:9CE7  FF FF FF FF FF FF FF FF 
     157.  00:9CEF                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     157.  00:9CEF  FF FF FF FF FF FF FF FF 
     158.  00:9CF7                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     158.  00:9CF7  FF FF FF FF FF FF FF FF 
     159.  00:9CFF                      	
     160.  00:9CFF                      sprite_zombi1_4_2:
     161.  00:9CFF                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     161.  00:9CFF  FF FF FF FF FF FF FF FF 
     162.  00:9D07                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     162.  00:9D07  FF FF FF FF FF FF FF FF 
     163.  00:9D0F                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     163.  00:9D0F  FF FF FF FF FF FF FF FF 
     164.  00:9D17                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     164.  00:9D17  FF FF FF FF FF FF FF FF 
     165.  00:9D1F                      	
     166.  00:9D1F                      sprite_zombi2_1_1:
     167.  00:9D1F                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     167.  00:9D1F  FF FF FF FF FF FF FF FF 
     168.  00:9D27                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     168.  00:9D27  FF FF FF FF FF FF FF FF 
     169.  00:9D2F                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     169.  00:9D2F  FF FF FF FF FF FF FF FF 
     170.  00:9D37                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     170.  00:9D37  FF FF FF FF FF FF FF FF 
     171.  00:9D3F                      
     172.  00:9D3F                      sprite_zombi2_2_1:
     173.  00:9D3F                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     173.  00:9D3F  FF FF FF FF FF FF FF FF 
     174.  00:9D47                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     174.  00:9D47  FF FF FF FF FF FF FF FF 
     175.  00:9D4F                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     175.  00:9D4F  FF FF FF FF FF FF FF FF 
     176.  00:9D57                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     176.  00:9D57  FF FF FF FF FF FF FF FF 
     177.  00:9D5F                      	
     178.  00:9D5F                      sprite_zombi2_3_1:
     179.  00:9D5F                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     179.  00:9D5F  FF FF FF FF FF FF FF FF 
     180.  00:9D67                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     180.  00:9D67  FF FF FF FF FF FF FF FF 
     181.  00:9D6F                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     181.  00:9D6F  FF FF FF FF FF FF FF FF 
     182.  00:9D77                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     182.  00:9D77  FF FF FF FF FF FF FF FF 
     183.  00:9D7F                      	
     184.  00:9D7F                      sprite_zombi2_4_1:
     185.  00:9D7F                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     185.  00:9D7F  FF FF FF FF FF FF FF FF 
     186.  00:9D87                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     186.  00:9D87  FF FF FF FF FF FF FF FF 
     187.  00:9D8F                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     187.  00:9D8F  FF FF FF FF FF FF FF FF 
     188.  00:9D97                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     188.  00:9D97  FF FF FF FF FF FF FF FF 
     189.  00:9D9F                      	
     190.  00:9D9F                      sprite_zombi2_1_2:
     191.  00:9D9F                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     191.  00:9D9F  FF FF FF FF FF FF FF FF 
     192.  00:9DA7                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     192.  00:9DA7  FF FF FF FF FF FF FF FF 
     193.  00:9DAF                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     193.  00:9DAF  FF FF FF FF FF FF FF FF 
     194.  00:9DB7                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     194.  00:9DB7  FF FF FF FF FF FF FF FF 
     195.  00:9DBF                      
     196.  00:9DBF                      sprite_zombi2_2_2:
     197.  00:9DBF                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     197.  00:9DBF  FF FF FF FF FF FF FF FF 
     198.  00:9DC7                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     198.  00:9DC7  FF FF FF FF FF FF FF FF 
     199.  00:9DCF                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     199.  00:9DCF  FF FF FF FF FF FF FF FF 
     200.  00:9DD7                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     200.  00:9DD7  FF FF FF FF FF FF FF FF 
     201.  00:9DDF                      	
     202.  00:9DDF                      sprite_zombi2_3_2:
     203.  00:9DDF                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     203.  00:9DDF  FF FF FF FF FF FF FF FF 
     204.  00:9DE7                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     204.  00:9DE7  FF FF FF FF FF FF FF FF 
     205.  00:9DEF                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     205.  00:9DEF  FF FF FF FF FF FF FF FF 
     206.  00:9DF7                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     206.  00:9DF7  FF FF FF FF FF FF FF FF 
     207.  00:9DFF                      	
     208.  00:9DFF                      sprite_zombi2_4_2:
     209.  00:9DFF                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     209.  00:9DFF  FF FF FF FF FF FF FF FF 
     210.  00:9E07                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     210.  00:9E07  FF FF FF FF FF FF FF FF 
     211.  00:9E0F                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     211.  00:9E0F  FF FF FF FF FF FF FF FF 
     212.  00:9E17                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     212.  00:9E17  FF FF FF FF FF FF FF FF 
     213.  00:9E1F                      	
     214.  00:9E1F                      ;; CABALLERO
     215.  00:9E1F                      
     216.  00:9E1F                      sprite_caballero1_1_1:
     217.  00:9E1F                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     217.  00:9E1F  FF FF FF FF FF FF FF FF 
     218.  00:9E27                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     218.  00:9E27  FF FF FF FF FF FF FF FF 
     219.  00:9E2F                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     219.  00:9E2F  FF FF FF FF FF FF FF FF 
     220.  00:9E37                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     220.  00:9E37  FF FF FF FF FF FF FF FF 
     221.  00:9E3F                      
     222.  00:9E3F                      sprite_caballero1_2_1:
     223.  00:9E3F                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     223.  00:9E3F  FF FF FF FF FF FF FF FF 
     224.  00:9E47                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     224.  00:9E47  FF FF FF FF FF FF FF FF 
     225.  00:9E4F                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     225.  00:9E4F  FF FF FF FF FF FF FF FF 
     226.  00:9E57                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     226.  00:9E57  FF FF FF FF FF FF FF FF 
     227.  00:9E5F                      	
     228.  00:9E5F                      sprite_caballero1_3_1:
     229.  00:9E5F                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     229.  00:9E5F  FF FF FF FF FF FF FF FF 
     230.  00:9E67                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     230.  00:9E67  FF FF FF FF FF FF FF FF 
     231.  00:9E6F                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     231.  00:9E6F  FF FF FF FF FF FF FF FF 
     232.  00:9E77                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     232.  00:9E77  FF FF FF FF FF FF FF FF 
     233.  00:9E7F                      	
     234.  00:9E7F                      sprite_caballero1_4_1:
     235.  00:9E7F                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     235.  00:9E7F  FF FF FF FF FF FF FF FF 
     236.  00:9E87                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     236.  00:9E87  FF FF FF FF FF FF FF FF 
     237.  00:9E8F                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     237.  00:9E8F  FF FF FF FF FF FF FF FF 
     238.  00:9E97                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     238.  00:9E97  FF FF FF FF FF FF FF FF 
     239.  00:9E9F                      	
     240.  00:9E9F                      sprite_caballero1_1_2:
     241.  00:9E9F                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     241.  00:9E9F  FF FF FF FF FF FF FF FF 
     242.  00:9EA7                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     242.  00:9EA7  FF FF FF FF FF FF FF FF 
     243.  00:9EAF                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     243.  00:9EAF  FF FF FF FF FF FF FF FF 
     244.  00:9EB7                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     244.  00:9EB7  FF FF FF FF FF FF FF FF 
     245.  00:9EBF                      
     246.  00:9EBF                      sprite_caballero1_2_2:
     247.  00:9EBF                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     247.  00:9EBF  FF FF FF FF FF FF FF FF 
     248.  00:9EC7                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     248.  00:9EC7  FF FF FF FF FF FF FF FF 
     249.  00:9ECF                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     249.  00:9ECF  FF FF FF FF FF FF FF FF 
     250.  00:9ED7                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     250.  00:9ED7  FF FF FF FF FF FF FF FF 
     251.  00:9EDF                      	
     252.  00:9EDF                      sprite_caballero1_3_2:
     253.  00:9EDF                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     253.  00:9EDF  FF FF FF FF FF FF FF FF 
     254.  00:9EE7                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     254.  00:9EE7  FF FF FF FF FF FF FF FF 
     255.  00:9EEF                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     255.  00:9EEF  FF FF FF FF FF FF FF FF 
     256.  00:9EF7                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     256.  00:9EF7  FF FF FF FF FF FF FF FF 
     257.  00:9EFF                      	
     258.  00:9EFF                      sprite_caballero1_4_2:
     259.  00:9EFF                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     259.  00:9EFF  FF FF FF FF FF FF FF FF 
     260.  00:9F07                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     260.  00:9F07  FF FF FF FF FF FF FF FF 
     261.  00:9F0F                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     261.  00:9F0F  FF FF FF FF FF FF FF FF 
     262.  00:9F17                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     262.  00:9F17  FF FF FF FF FF FF FF FF 
     263.  00:9F1F                      	
     264.  00:9F1F                      sprite_caballero2_1_1:
     265.  00:9F1F                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     265.  00:9F1F  FF FF FF FF FF FF FF FF 
     266.  00:9F27                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     266.  00:9F27  FF FF FF FF FF FF FF FF 
     267.  00:9F2F                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     267.  00:9F2F  FF FF FF FF FF FF FF FF 
     268.  00:9F37                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     268.  00:9F37  FF FF FF FF FF FF FF FF 
     269.  00:9F3F                      
     270.  00:9F3F                      sprite_caballero2_2_1:
     271.  00:9F3F                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     271.  00:9F3F  FF FF FF FF FF FF FF FF 
     272.  00:9F47                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     272.  00:9F47  FF FF FF FF FF FF FF FF 
     273.  00:9F4F                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     273.  00:9F4F  FF FF FF FF FF FF FF FF 
     274.  00:9F57                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     274.  00:9F57  FF FF FF FF FF FF FF FF 
     275.  00:9F5F                      	
     276.  00:9F5F                      sprite_caballero2_3_1:
     277.  00:9F5F                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     277.  00:9F5F  FF FF FF FF FF FF FF FF 
     278.  00:9F67                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     278.  00:9F67  FF FF FF FF FF FF FF FF 
     279.  00:9F6F                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     279.  00:9F6F  FF FF FF FF FF FF FF FF 
     280.  00:9F77                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     280.  00:9F77  FF FF FF FF FF FF FF FF 
     281.  00:9F7F                      	
     282.  00:9F7F                      sprite_caballero2_4_1:
     283.  00:9F7F                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     283.  00:9F7F  FF FF FF FF FF FF FF FF 
     284.  00:9F87                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     284.  00:9F87  FF FF FF FF FF FF FF FF 
     285.  00:9F8F                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     285.  00:9F8F  FF FF FF FF FF FF FF FF 
     286.  00:9F97                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     286.  00:9F97  FF FF FF FF FF FF FF FF 
     287.  00:9F9F                      	
     288.  00:9F9F                      sprite_caballero2_1_2:
     289.  00:9F9F                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     289.  00:9F9F  FF FF FF FF FF FF FF FF 
     290.  00:9FA7                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     290.  00:9FA7  FF FF FF FF FF FF FF FF 
     291.  00:9FAF                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     291.  00:9FAF  FF FF FF FF FF FF FF FF 
     292.  00:9FB7                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     292.  00:9FB7  FF FF FF FF FF FF FF FF 
     293.  00:9FBF                      
     294.  00:9FBF                      sprite_caballero2_2_2:
     295.  00:9FBF                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     295.  00:9FBF  FF FF FF FF FF FF FF FF 
     296.  00:9FC7                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     296.  00:9FC7  FF FF FF FF FF FF FF FF 
     297.  00:9FCF                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     297.  00:9FCF  FF FF FF FF FF FF FF FF 
     298.  00:9FD7                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     298.  00:9FD7  FF FF FF FF FF FF FF FF 
     299.  00:9FDF                      	
     300.  00:9FDF                      sprite_caballero2_3_2:
     301.  00:9FDF                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     301.  00:9FDF  FF FF FF FF FF FF FF FF 
     302.  00:9FE7                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     302.  00:9FE7  FF FF FF FF FF FF FF FF 
     303.  00:9FEF                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     303.  00:9FEF  FF FF FF FF FF FF FF FF 
     304.  00:9FF7                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     304.  00:9FF7  FF FF FF FF FF FF FF FF 
     305.  00:9FFF                      	
     306.  00:9FFF                      sprite_caballero2_4_2:
     307.  00:9FFF                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     307.  00:9FFF  FF FF FF FF FF FF FF FF 
     308.  00:A007                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     308.  00:A007  FF FF FF FF FF FF FF FF 
     309.  00:A00F                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     309.  00:A00F  FF FF FF FF FF FF FF FF 
     310.  00:A017                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     310.  00:A017  FF FF FF FF FF FF FF FF 
     311.  00:A01F                      	
     312.  00:A01F                      ;; LLAMA
     313.  00:A01F                      
     314.  00:A01F                      sprite_llama1_1:	
     315.  00:A01F                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     315.  00:A01F  FF FF FF FF FF FF FF FF 
     316.  00:A027                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     316.  00:A027  FF FF FF FF FF FF FF FF 
     317.  00:A02F                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     317.  00:A02F  FF FF FF FF FF FF FF FF 
     318.  00:A037                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     318.  00:A037  FF FF FF FF FF FF FF FF 
     319.  00:A03F                      	
     320.  00:A03F                      sprite_llama2_1:	
     321.  00:A03F                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     321.  00:A03F  FF FF FF FF FF FF FF FF 
     322.  00:A047                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     322.  00:A047  FF FF FF FF FF FF FF FF 
     323.  00:A04F                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     323.  00:A04F  FF FF FF FF FF FF FF FF 
     324.  00:A057                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF	
     324.  00:A057  FF FF FF FF FF FF FF FF 
     325.  00:A05F                      	
     326.  00:A05F                      sprite_llama1_2:	
     327.  00:A05F                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     327.  00:A05F  FF FF FF FF FF FF FF FF 
     328.  00:A067                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     328.  00:A067  FF FF FF FF FF FF FF FF 
     329.  00:A06F                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     329.  00:A06F  FF FF FF FF FF FF FF FF 
     330.  00:A077                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     330.  00:A077  FF FF FF FF FF FF FF FF 
     331.  00:A07F                      	
     332.  00:A07F                      sprite_llama2_2:	
     333.  00:A07F                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     333.  00:A07F  FF FF FF FF FF FF FF FF 
     334.  00:A087                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     334.  00:A087  FF FF FF FF FF FF FF FF 
     335.  00:A08F                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     335.  00:A08F  FF FF FF FF FF FF FF FF 
     336.  00:A097                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF			
     336.  00:A097  FF FF FF FF FF FF FF FF 
     337.  00:A09F                      	
     338.  00:A09F                      ;; FANTASMA
     339.  00:A09F                      
     340.  00:A09F                      sprite_fantasma1_1:
     341.  00:A09F                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     341.  00:A09F  FF FF FF FF FF FF FF FF 
     342.  00:A0A7                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     342.  00:A0A7  FF FF FF FF FF FF FF FF 
     343.  00:A0AF                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     343.  00:A0AF  FF FF FF FF FF FF FF FF 
     344.  00:A0B7                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     344.  00:A0B7  FF FF FF FF FF FF FF FF 
     345.  00:A0BF                      
     346.  00:A0BF                      sprite_fantasma2_1:
     347.  00:A0BF                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     347.  00:A0BF  FF FF FF FF FF FF FF FF 
     348.  00:A0C7                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     348.  00:A0C7  FF FF FF FF FF FF FF FF 
     349.  00:A0CF                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     349.  00:A0CF  FF FF FF FF FF FF FF FF 
     350.  00:A0D7                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     350.  00:A0D7  FF FF FF FF FF FF FF FF 
     351.  00:A0DF                      
     352.  00:A0DF                      sprite_fantasma1_2:
     353.  00:A0DF                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     353.  00:A0DF  FF FF FF FF FF FF FF FF 
     354.  00:A0E7                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     354.  00:A0E7  FF FF FF FF FF FF FF FF 
     355.  00:A0EF                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     355.  00:A0EF  FF FF FF FF FF FF FF FF 
     356.  00:A0F7                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     356.  00:A0F7  FF FF FF FF FF FF FF FF 
     357.  00:A0FF                      
     358.  00:A0FF                      sprite_fantasma2_2:
     359.  00:A0FF                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     359.  00:A0FF  FF FF FF FF FF FF FF FF 
     360.  00:A107                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     360.  00:A107  FF FF FF FF FF FF FF FF 
     361.  00:A10F                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     361.  00:A10F  FF FF FF FF FF FF FF FF 
     362.  00:A117                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF	
     362.  00:A117  FF FF FF FF FF FF FF FF 
     363.  00:A11F                      	
     364.  00:A11F                      ;; MAGIA
     365.  00:A11F                      
     366.  00:A11F                      sprite_magia1_1:
     367.  00:A11F                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     367.  00:A11F  FF FF FF FF FF FF FF FF 
     368.  00:A127                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     368.  00:A127  FF FF FF FF FF FF FF FF 
     369.  00:A12F                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     369.  00:A12F  FF FF FF FF FF FF FF FF 
     370.  00:A137                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     370.  00:A137  FF FF FF FF FF FF FF FF 
     371.  00:A13F                      
     372.  00:A13F                      sprite_magia2_1:
     373.  00:A13F                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     373.  00:A13F  FF FF FF FF FF FF FF FF 
     374.  00:A147                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     374.  00:A147  FF FF FF FF FF FF FF FF 
     375.  00:A14F                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     375.  00:A14F  FF FF FF FF FF FF FF FF 
     376.  00:A157                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     376.  00:A157  FF FF FF FF FF FF FF FF 
     377.  00:A15F                      
     378.  00:A15F                      sprite_magia1_2:
     379.  00:A15F                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     379.  00:A15F  FF FF FF FF FF FF FF FF 
     380.  00:A167                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     380.  00:A167  FF FF FF FF FF FF FF FF 
     381.  00:A16F                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     381.  00:A16F  FF FF FF FF FF FF FF FF 
     382.  00:A177                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     382.  00:A177  FF FF FF FF FF FF FF FF 
     383.  00:A17F                      
     384.  00:A17F                      sprite_magia2_2:
     385.  00:A17F                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     385.  00:A17F  FF FF FF FF FF FF FF FF 
     386.  00:A187                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     386.  00:A187  FF FF FF FF FF FF FF FF 
     387.  00:A18F                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     387.  00:A18F  FF FF FF FF FF FF FF FF 
     388.  00:A197                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF	
     388.  00:A197  FF FF FF FF FF FF FF FF 
     389.  00:A19F                      	
     390.  00:A19F                      	
     391.  00:A19F                      ;; BEHOLDER
     392.  00:A19F                      
     393.  00:A19F                      sprite_beholder1_1:
     394.  00:A19F                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     394.  00:A19F  FF FF FF FF FF FF FF FF 
     395.  00:A1A7                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     395.  00:A1A7  FF FF FF FF FF FF FF FF 
     396.  00:A1AF                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     396.  00:A1AF  FF FF FF FF FF FF FF FF 
     397.  00:A1B7                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     397.  00:A1B7  FF FF FF FF FF FF FF FF 
     398.  00:A1BF                      
     399.  00:A1BF                      sprite_beholder2_1:
     400.  00:A1BF                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     400.  00:A1BF  FF FF FF FF FF FF FF FF 
     401.  00:A1C7                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     401.  00:A1C7  FF FF FF FF FF FF FF FF 
     402.  00:A1CF                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     402.  00:A1CF  FF FF FF FF FF FF FF FF 
     403.  00:A1D7                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     403.  00:A1D7  FF FF FF FF FF FF FF FF 
     404.  00:A1DF                      
     405.  00:A1DF                      sprite_beholder3_1:
     406.  00:A1DF                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     406.  00:A1DF  FF FF FF FF FF FF FF FF 
     407.  00:A1E7                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     407.  00:A1E7  FF FF FF FF FF FF FF FF 
     408.  00:A1EF                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     408.  00:A1EF  FF FF FF FF FF FF FF FF 
     409.  00:A1F7                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     409.  00:A1F7  FF FF FF FF FF FF FF FF 
     410.  00:A1FF                      
     411.  00:A1FF                      sprite_beholder4_1:
     412.  00:A1FF                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     412.  00:A1FF  FF FF FF FF FF FF FF FF 
     413.  00:A207                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     413.  00:A207  FF FF FF FF FF FF FF FF 
     414.  00:A20F                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     414.  00:A20F  FF FF FF FF FF FF FF FF 
     415.  00:A217                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF	
     415.  00:A217  FF FF FF FF FF FF FF FF 
     416.  00:A21F                      	
     417.  00:A21F                      sprite_beholder1_2:
     418.  00:A21F                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     418.  00:A21F  FF FF FF FF FF FF FF FF 
     419.  00:A227                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     419.  00:A227  FF FF FF FF FF FF FF FF 
     420.  00:A22F                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     420.  00:A22F  FF FF FF FF FF FF FF FF 
     421.  00:A237                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     421.  00:A237  FF FF FF FF FF FF FF FF 
     422.  00:A23F                      
     423.  00:A23F                      sprite_beholder2_2:
     424.  00:A23F                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     424.  00:A23F  FF FF FF FF FF FF FF FF 
     425.  00:A247                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     425.  00:A247  FF FF FF FF FF FF FF FF 
     426.  00:A24F                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     426.  00:A24F  FF FF FF FF FF FF FF FF 
     427.  00:A257                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     427.  00:A257  FF FF FF FF FF FF FF FF 
     428.  00:A25F                      
     429.  00:A25F                      sprite_beholder3_2:
     430.  00:A25F                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     430.  00:A25F  FF FF FF FF FF FF FF FF 
     431.  00:A267                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     431.  00:A267  FF FF FF FF FF FF FF FF 
     432.  00:A26F                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     432.  00:A26F  FF FF FF FF FF FF FF FF 
     433.  00:A277                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     433.  00:A277  FF FF FF FF FF FF FF FF 
     434.  00:A27F                      
     435.  00:A27F                      sprite_beholder4_2:
     436.  00:A27F                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     436.  00:A27F  FF FF FF FF FF FF FF FF 
     437.  00:A287                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     437.  00:A287  FF FF FF FF FF FF FF FF 
     438.  00:A28F                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     438.  00:A28F  FF FF FF FF FF FF FF FF 
     439.  00:A297                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF		
     439.  00:A297  FF FF FF FF FF FF FF FF 
     440.  00:A29F                      	
     441.  00:A29F                      ;; VAMPIRO
     442.  00:A29F                      
     443.  00:A29F                      sprite_vampiro1_1:
     444.  00:A29F                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     444.  00:A29F  FF FF FF FF FF FF FF FF 
     445.  00:A2A7                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     445.  00:A2A7  FF FF FF FF FF FF FF FF 
     446.  00:A2AF                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     446.  00:A2AF  FF FF FF FF FF FF FF FF 
     447.  00:A2B7                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     447.  00:A2B7  FF FF FF FF FF FF FF FF 
     448.  00:A2BF                      
     449.  00:A2BF                      sprite_vampiro2_1:
     450.  00:A2BF                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     450.  00:A2BF  FF FF FF FF FF FF FF FF 
     451.  00:A2C7                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     451.  00:A2C7  FF FF FF FF FF FF FF FF 
     452.  00:A2CF                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     452.  00:A2CF  FF FF FF FF FF FF FF FF 
     453.  00:A2D7                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     453.  00:A2D7  FF FF FF FF FF FF FF FF 
     454.  00:A2DF                      
     455.  00:A2DF                      sprite_vampiro1_2:
     456.  00:A2DF                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     456.  00:A2DF  FF FF FF FF FF FF FF FF 
     457.  00:A2E7                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     457.  00:A2E7  FF FF FF FF FF FF FF FF 
     458.  00:A2EF                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     458.  00:A2EF  FF FF FF FF FF FF FF FF 
     459.  00:A2F7                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     459.  00:A2F7  FF FF FF FF FF FF FF FF 
     460.  00:A2FF                      
     461.  00:A2FF                      sprite_vampiro2_2:
     462.  00:A2FF                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     462.  00:A2FF  FF FF FF FF FF FF FF FF 
     463.  00:A307                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     463.  00:A307  FF FF FF FF FF FF FF FF 
     464.  00:A30F                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     464.  00:A30F  FF FF FF FF FF FF FF FF 
     465.  00:A317                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     465.  00:A317  FF FF FF FF FF FF FF FF 
     466.  00:A31F                      	
     467.  00:A31F                      ;; MANOIZQ
     468.  00:A31F                      
     469.  00:A31F                      sprite_manoizq1:
     470.  00:A31F                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     470.  00:A31F  FF FF FF FF FF FF FF FF 
     471.  00:A327                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     471.  00:A327  FF FF FF FF FF FF FF FF 
     472.  00:A32F                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     472.  00:A32F  FF FF FF FF FF FF FF FF 
     473.  00:A337                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     473.  00:A337  FF FF FF FF FF FF FF FF 
     474.  00:A33F                      	
     475.  00:A33F                      sprite_manoizq2:
     476.  00:A33F                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     476.  00:A33F  FF FF FF FF FF FF FF FF 
     477.  00:A347                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     477.  00:A347  FF FF FF FF FF FF FF FF 
     478.  00:A34F                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     478.  00:A34F  FF FF FF FF FF FF FF FF 
     479.  00:A357                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     479.  00:A357  FF FF FF FF FF FF FF FF 
     480.  00:A35F                      	
     481.  00:A35F                      sprite_manoizq3:
     482.  00:A35F                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     482.  00:A35F  FF FF FF FF FF FF FF FF 
     483.  00:A367                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     483.  00:A367  FF FF FF FF FF FF FF FF 
     484.  00:A36F                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     484.  00:A36F  FF FF FF FF FF FF FF FF 
     485.  00:A377                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF	
     485.  00:A377  FF FF FF FF FF FF FF FF 
     486.  00:A37F                      	
     487.  00:A37F                      ;; MANODER
     488.  00:A37F                      
     489.  00:A37F                      sprite_manoder1:
     490.  00:A37F                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     490.  00:A37F  FF FF FF FF FF FF FF FF 
     491.  00:A387                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     491.  00:A387  FF FF FF FF FF FF FF FF 
     492.  00:A38F                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     492.  00:A38F  FF FF FF FF FF FF FF FF 
     493.  00:A397                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     493.  00:A397  FF FF FF FF FF FF FF FF 
     494.  00:A39F                      	
     495.  00:A39F                      sprite_manoder2:
     496.  00:A39F                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     496.  00:A39F  FF FF FF FF FF FF FF FF 
     497.  00:A3A7                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     497.  00:A3A7  FF FF FF FF FF FF FF FF 
     498.  00:A3AF                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     498.  00:A3AF  FF FF FF FF FF FF FF FF 
     499.  00:A3B7                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     499.  00:A3B7  FF FF FF FF FF FF FF FF 
     500.  00:A3BF                      	
     501.  00:A3BF                      sprite_manoder3:
     502.  00:A3BF                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     502.  00:A3BF  FF FF FF FF FF FF FF FF 
     503.  00:A3C7                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     503.  00:A3C7  FF FF FF FF FF FF FF FF 
     504.  00:A3CF                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     504.  00:A3CF  FF FF FF FF FF FF FF FF 
     505.  00:A3D7                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF		
     505.  00:A3D7  FF FF FF FF FF FF FF FF 
     506.  00:A3DF                      	
     507.  00:A3DF                      	
     508.  00:A3DF                      	
     509.  00:A3DF                      	
     510.  00:A3DF                      	
     511.  00:A3DF                      	
     512.  00:A3DF                      	
     513.  00:A3DF                      	
     514.  00:A3DF                      	
     515.  00:A3DF                      	
     516.  00:A3DF                      	
     517.  00:A3DF                      	
     518.  00:A3DF                      	
     519.  00:A3DF                      	
     520.  00:A3DF                      	
     521.  00:A3DF                      	
     522.  00:A3DF                      	
     523.  00:A3DF                      	
     524.  00:A3DF                      	
     525.  00:A3DF                      	
     526.  00:A3DF                      	
     527.  00:A3DF                      	
     528.  00:A3DF                      	
     166   00:A3DF                      	
     167   00:A3DF                      	include "habitaciones.asm"
       1.  00:A3DF                      ;;=====================================================
       2.  00:A3DF                      ;;DEFINICIÓN DE HABITACIONES x NIVEL
       3.  00:A3DF                      ;;=====================================================	
       4.  00:A3DF                      
       5.  00:A3DF                      ; sólo voy a usar 7x7 pero como los arrays son lineales y voy a trabajar con matrices
       6.  00:A3DF                      ; me interesa que seande  8x8 aunque sólo trabaje con 7x7
       7.  00:A3DF                      
       8.  00:A3DF                      ; ojo... la primera linea corresponderá a la primera linea del castillo no a la última
       9.  00:A3DF                      
      10.  00:A3DF                      ;; definición de estructura de bits
      11.  00:A3DF                      ;16 bits por habitación
      12.  00:A3DF                      
      13.  00:A3DF                      ;~ 7 - sin asignar
      14.  00:A3DF                      ;~ 6 - sin asignar
      15.  00:A3DF                      ;~ 5 - esqueletos
      16.  00:A3DF                      ;~ 4 - todos los enemigos muertos
      17.  00:A3DF                      ;~ 0,1,2,3 - nº puertas 1 arriba 1 derecha 1 abajo 1 izquierda
      18.  00:A3DF                      
      19.  00:A3DF                      ;~ 7 - oracion
      20.  00:A3DF                      ;~ 6 - cruz
      21.  00:A3DF                      ;~ 5 - agua bendita
      22.  00:A3DF                      ;~ 4 - armadura
      23.  00:A3DF                      ;~ 3 - planta
      24.  00:A3DF                      ;~ 2 - vida extra
      25.  00:A3DF                      ;~ 1 - ballesta
      26.  00:A3DF                      ;~ 0 - antorchas
      27.  00:A3DF                      
      28.  00:A3DF                      ;importante: el byte de la columna 15 indicará con 1 y 0 habitaciones por las que se haya pasado
      29.  00:A3DF                      ;cuando se inicie la partida todos se pondrán a 0
      30.  00:A3DF                      ;por ejemplo 01000000b se ha pasado por la hab. 2 de esa fila en el nivel que sea
      31.  00:A3DF                      
      32.  00:A3DF                      habitacion_actual:
      33.  00:A3DF  00                  	db  0		;habitación donde se encuentre el prota. Se mete en una varible par traer todos los datos de golpe y no buscarlos varias veces
      34.  00:A3E0                      habitacion_extras:
      35.  00:A3E0  00                  	db	0		;donde van las ayudas de una habitación
      36.  00:A3E1                      habitacion_recorrida;
      37.  00:A3E1  00                  	db	0		;byte de la columna 15 indicará con 1 y 0 habitaciones por las que se haya pasado
      38.  00:A3E2                      
      39.  00:A3E2                      
      40.  00:A3E2                      habitaciones_juego:
      41.  00:A3E2                      habitaciones_nivel0:
      42.  00:A3E2                      	db  00000000b,#00,00000001b,#01,00001111b,11000001b,00000010b,#03,00001000b,#04,00001001b,#05,00001100b,#06,00010001b,#CD ;primera fila
      42.  00:A3E2  00 00 01 01 0F C1 02 03 08 04 09 05 0C 06 11 CD 
      43.  00:A3F2                      	db  #17,#10,#11,#11,#12,#12,#13,#13,#14,#14,#15,#15,#16,#16,#FF,#00
      43.  00:A3F2  17 10 11 11 12 12 13 13 14 14 15 15 16 16 FF 00 
      44.  00:A402                      	db  #20,#20,#21,#21,#22,#22,#23,#23,#24,#24,#25,#25,#26,#26,#FF,#00
      44.  00:A402  20 20 21 21 22 22 23 23 24 24 25 25 26 26 FF 00 
      45.  00:A412                      	db  #30,#30,#31,#31,#32,#32,#33,#33,#34,#34,#35,#35,#36,#36,#FF,#00
      45.  00:A412  30 30 31 31 32 32 33 33 34 34 35 35 36 36 FF 00 
      46.  00:A422                      	db  00000000b,#00,00000001b,#01,00001111b,#02,00000011b,#03,00001000b,#04,00001001b,#05,00001100b,#06,#FF,#00
      46.  00:A422  00 00 01 01 0F 02 03 03 08 04 09 05 0C 06 FF 00 
      47.  00:A432                      	db  #50,#50,#51,#51,#52,#52,#53,#53,#54,#54,#55,#55,#56,#56,#FF,#00
      47.  00:A432  50 50 51 51 52 52 53 53 54 54 55 55 56 56 FF 00 
      48.  00:A442                      	db  00000000b,#00,00000001b,#01,00001111b,#02,00000011b,#03,00001000b,#04,00001001b,#05,00001100b,#06,#FF,#00	;ultima fila
      48.  00:A442  00 00 01 01 0F 02 03 03 08 04 09 05 0C 06 FF 00 
      49.  00:A452                      	
      50.  00:A452                      habitaciones_nivel1:
      51.  00:A452                      	db  00000000b,#00,00000001b,#01,00000010b,#02,00000011b,#03,00001000b,#04,00001001b,#05,00001100b,#06,#FF,#00 ;primera fila
      51.  00:A452  00 00 01 01 02 02 03 03 08 04 09 05 0C 06 FF 00 
      52.  00:A462                      	db  #17,#10,#11,#11,#12,#12,#13,#13,#14,#14,#15,#15,#16,#16,#FF,#00
      52.  00:A462  17 10 11 11 12 12 13 13 14 14 15 15 16 16 FF 00 
      53.  00:A472                      	db  #20,#20,#21,#21,#22,#22,#23,#23,#24,#24,#25,#25,#26,#26,#FF,#00
      53.  00:A472  20 20 21 21 22 22 23 23 24 24 25 25 26 26 FF 00 
      54.  00:A482                      	db  #30,#30,#31,#31,#32,#32,#33,#33,#34,#34,#35,#35,#36,#36,#FF,#00
      54.  00:A482  30 30 31 31 32 32 33 33 34 34 35 35 36 36 FF 00 
      55.  00:A492                      	db  00000000b,#00,00000001b,#01,00001111b,#02,00000011b,#03,00001000b,#04,00001001b,#05,00001100b,#06,#FF,#00
      55.  00:A492  00 00 01 01 0F 02 03 03 08 04 09 05 0C 06 FF 00 
      56.  00:A4A2                      	db  #50,#50,#51,#51,#52,#52,#53,#53,#54,#54,#55,#55,#56,#56,#FF,#00
      56.  00:A4A2  50 50 51 51 52 52 53 53 54 54 55 55 56 56 FF 00 
      57.  00:A4B2                      	db  00000000b,#00,00000001b,#01,00000010b,#02,00000011b,#03,00001000b,#04,00001001b,#05,00001100b,#06,#FF,#00	;ultima fila
      57.  00:A4B2  00 00 01 01 02 02 03 03 08 04 09 05 0C 06 FF 00 
      58.  00:A4C2                      	
      59.  00:A4C2                      habitaciones_nivel2:
      60.  00:A4C2                      	db  00000000b,#00,00000001b,#01,00000010b,#02,00000011b,#03,00001000b,#04,00001001b,#05,00001100b,#06,#FF,#00 ;primera fila
      60.  00:A4C2  00 00 01 01 02 02 03 03 08 04 09 05 0C 06 FF 00 
      61.  00:A4D2                      	db  #17,#10,#11,#11,#12,#12,#13,#13,#14,#14,#15,#15,#16,#16,#FF,#00
      61.  00:A4D2  17 10 11 11 12 12 13 13 14 14 15 15 16 16 FF 00 
      62.  00:A4E2                      	db  #20,#20,#21,#21,#22,#22,#23,#23,#24,#24,#25,#25,#26,#26,#FF,#00
      62.  00:A4E2  20 20 21 21 22 22 23 23 24 24 25 25 26 26 FF 00 
      63.  00:A4F2                      	db  #30,#30,#31,#31,#32,#32,#33,#33,#34,#34,#35,#35,#36,#36,#FF,#00
      63.  00:A4F2  30 30 31 31 32 32 33 33 34 34 35 35 36 36 FF 00 
      64.  00:A502                      	db  00000000b,#00,00000001b,#01,00001111b,#02,00000011b,#03,00001000b,#04,00001001b,#05,00001100b,#06,#FF,#00
      64.  00:A502  00 00 01 01 0F 02 03 03 08 04 09 05 0C 06 FF 00 
      65.  00:A512                      	db  #50,#50,#51,#51,#52,#52,#53,#53,#54,#54,#55,#55,#56,#56,#FF,#00
      65.  00:A512  50 50 51 51 52 52 53 53 54 54 55 55 56 56 FF 00 
      66.  00:A522                      	db  00000000b,#00,00000001b,#01,00000010b,#02,00000011b,#03,00001000b,#04,00001001b,#05,00001100b,#06,#FF,#00	;ultima fila
      66.  00:A522  00 00 01 01 02 02 03 03 08 04 09 05 0C 06 FF 00 
      67.  00:A532                      	
      68.  00:A532                      habitaciones_nivel3:
      69.  00:A532                      	db  00000000b,#00,00000001b,#01,00000010b,#02,00000011b,#03,00001000b,#04,00001001b,#05,00001100b,#06,#FF,#00 ;primera fila
      69.  00:A532  00 00 01 01 02 02 03 03 08 04 09 05 0C 06 FF 00 
      70.  00:A542                      	db  #17,#10,#11,#11,#12,#12,#13,#13,#14,#14,#15,#15,#16,#16,#FF,#00
      70.  00:A542  17 10 11 11 12 12 13 13 14 14 15 15 16 16 FF 00 
      71.  00:A552                      	db  #20,#20,#21,#21,#22,#22,#23,#23,#24,#24,#25,#25,#26,#26,#FF,#00
      71.  00:A552  20 20 21 21 22 22 23 23 24 24 25 25 26 26 FF 00 
      72.  00:A562                      	db  #30,#30,#31,#31,#32,#32,#33,#33,#34,#34,#35,#35,#36,#36,#FF,#00
      72.  00:A562  30 30 31 31 32 32 33 33 34 34 35 35 36 36 FF 00 
      73.  00:A572                      	db  00000000b,#00,00000001b,#01,00001111b,#02,00000011b,#03,00001000b,#04,00001001b,#05,00001100b,#06,#FF,#00
      73.  00:A572  00 00 01 01 0F 02 03 03 08 04 09 05 0C 06 FF 00 
      74.  00:A582                      	db  #50,#50,#51,#51,#52,#52,#53,#53,#54,#54,#55,#55,#56,#56,#FF,#00
      74.  00:A582  50 50 51 51 52 52 53 53 54 54 55 55 56 56 FF 00 
      75.  00:A592                      	db  00000000b,#00,00000001b,#01,00000010b,#02,00000011b,#03,00001000b,#04,00001001b,#05,00001100b,#06,#FF,#00	;ultima fila
      75.  00:A592  00 00 01 01 02 02 03 03 08 04 09 05 0C 06 FF 00 
      76.  00:A5A2                      	
      77.  00:A5A2                      habitaciones_nivel4:
      78.  00:A5A2                      	db  00000001b,#00,00000001b,#01,00000010b,#02,00000011b,#03,00001000b,#04,00001001b,#05,00001100b,#06,#FF,#00 ;primera fila
      78.  00:A5A2  01 00 01 01 02 02 03 03 08 04 09 05 0C 06 FF 00 
      79.  00:A5B2                      	db  #17,#10,#11,#11,#12,#12,#13,#13,#14,#14,#15,#15,#16,#16,#FF,#00
      79.  00:A5B2  17 10 11 11 12 12 13 13 14 14 15 15 16 16 FF 00 
      80.  00:A5C2                      	db  #20,#20,#21,#21,#22,#22,#23,#23,#24,#24,#25,#25,#26,#26,#FF,#00
      80.  00:A5C2  20 20 21 21 22 22 23 23 24 24 25 25 26 26 FF 00 
      81.  00:A5D2                      	db  #30,#30,#31,#31,#32,#32,#33,#33,#34,#34,#35,#35,#36,#36,#FF,#00
      81.  00:A5D2  30 30 31 31 32 32 33 33 34 34 35 35 36 36 FF 00 
      82.  00:A5E2                      	db  00000000b,#00,00000001b,#01,00001111b,#02,00000011b,#03,00001000b,#04,00001001b,#05,00001100b,#06,#FF,#00
      82.  00:A5E2  00 00 01 01 0F 02 03 03 08 04 09 05 0C 06 FF 00 
      83.  00:A5F2                      	db  #50,#50,#51,#51,#52,#52,#53,#53,#54,#54,#55,#55,#56,#56,#FF,#00
      83.  00:A5F2  50 50 51 51 52 52 53 53 54 54 55 55 56 56 FF 00 
      84.  00:A602                      	db  00000000b,#00,00000001b,#01,00001111b,00001111b,00000011b,#03,00001000b,#04,00001001b,#05,00001100b,#06,#FF,#00	;ultima fila
      84.  00:A602  00 00 01 01 0F 0F 03 03 08 04 09 05 0C 06 FF 00 
      85.  00:A612                      	
      86.  00:A612                      habitaciones_nivel5:
      87.  00:A612                      	db  00000000b,#00,00000001b,#01,00000010b,#02,00000011b,#03,00001000b,#04,00001001b,#05,00001100b,#06,#FF,#00 ;primera fila
      87.  00:A612  00 00 01 01 02 02 03 03 08 04 09 05 0C 06 FF 00 
      88.  00:A622                      	db  #17,#10,#11,#11,#12,#12,#13,#13,#14,#14,#15,#15,#16,#16,#FF,#00
      88.  00:A622  17 10 11 11 12 12 13 13 14 14 15 15 16 16 FF 00 
      89.  00:A632                      	db  #20,#20,#21,#21,#22,#22,#23,#23,#24,#24,#25,#25,#26,#26,#FF,#00
      89.  00:A632  20 20 21 21 22 22 23 23 24 24 25 25 26 26 FF 00 
      90.  00:A642                      	db  #30,#30,#31,#31,#32,#32,#33,#33,#34,#34,#35,#35,#36,#36,#FF,#00
      90.  00:A642  30 30 31 31 32 32 33 33 34 34 35 35 36 36 FF 00 
      91.  00:A652                      	db  00000000b,#00,00000001b,#01,00001111b,#02,00000011b,#03,00001000b,#04,00001001b,#05,00001100b,#06,#FF,#00
      91.  00:A652  00 00 01 01 0F 02 03 03 08 04 09 05 0C 06 FF 00 
      92.  00:A662                      	db  #50,#50,#51,#51,#52,#52,#53,#53,#54,#54,#55,#55,#56,#56,#FF,#00
      92.  00:A662  50 50 51 51 52 52 53 53 54 54 55 55 56 56 FF 00 
      93.  00:A672                      	db  00000000b,#00,00000001b,#01,00001010b,00001010b,00000011b,#03,00001000b,#04,00001001b,#05,00001100b,#06,#FF,#00	;ultima fila
      93.  00:A672  00 00 01 01 0A 0A 03 03 08 04 09 05 0C 06 FF 00 
      94.  00:A682                      	
      95.  00:A682                      habitaciones_nivel6:
      96.  00:A682                      	db  00000000b,#00,00000001b,#01,00000010b,#02,00000011b,#03,00001000b,#04,00001001b,#05,00001100b,#06,#FF,#00 ;primera fila
      96.  00:A682  00 00 01 01 02 02 03 03 08 04 09 05 0C 06 FF 00 
      97.  00:A692                      	db  #17,#10,#11,#11,#12,#12,#13,#13,#14,#14,#15,#15,#16,#16,#FF,#00
      97.  00:A692  17 10 11 11 12 12 13 13 14 14 15 15 16 16 FF 00 
      98.  00:A6A2                      	db  #20,#20,#21,#21,#22,#22,#23,#23,#24,#24,#25,#25,#26,#26,#FF,#00
      98.  00:A6A2  20 20 21 21 22 22 23 23 24 24 25 25 26 26 FF 00 
      99.  00:A6B2                      	db  #30,#30,#31,#31,#32,#32,#33,#33,#34,#34,#35,#35,#36,#36,#FF,#00
      99.  00:A6B2  30 30 31 31 32 32 33 33 34 34 35 35 36 36 FF 00 
     100.  00:A6C2                      	db  00000000b,#00,00000001b,#01,00001111b,#02,00000011b,#03,00001000b,#04,00001001b,#05,00001100b,#06,#FF,#00
     100.  00:A6C2  00 00 01 01 0F 02 03 03 08 04 09 05 0C 06 FF 00 
     101.  00:A6D2                      	db  #50,#50,#51,#51,#52,#52,#53,#53,#54,#54,#55,#55,#56,#56,#FF,#00
     101.  00:A6D2  50 50 51 51 52 52 53 53 54 54 55 55 56 56 FF 00 
     102.  00:A6E2                      	db  00000000b,#00,00000001b,10000000b,00001111b,#02,00000011b,#03,00001000b,#04,00001001b,#05,00001100b,#06,#FF,#00	;ultima fila
     102.  00:A6E2  00 00 01 80 0F 02 03 03 08 04 09 05 0C 06 FF 00 
     103.  00:A6F2                      
     104.  00:A6F2                      
     105.  00:A6F2                      
     168   00:A6F2                      	
     169   00:A6F2                      	include "variables.asm"
       1.  00:A6F2                      ;;=====================================================
       2.  00:A6F2                      ;;DEFINICIÓN DE VARIABLES
       3.  00:A6F2                      ;;=====================================================
       4.  00:A6F2                      
       5.  00:A6F2                      ;Colores base de la pantalla
       6.  00:A6F2                      color_base:
       7.  00:A6F2  01 01 01            			DB		COLNEGRO,COLNEGRO,COLNEGRO	
       8.  00:A6F5                      ;colores de pantalla cuando se tira bomba
       9.  00:A6F5                      color_bomba1:
      10.  00:A6F5  08 08 08            			DB		COLROJO,COLROJO,COLROJO
      11.  00:A6F8                      color_bomba2:
      12.  00:A6F8  06 06 06            			DB		COLROJOOSC,COLROJOOSC,COLROJOOSC
      13.  00:A6FB                      
      14.  00:A6FB                      ;definicion de variable del prota usando la estructura del punto de mira
      15.  00:A6FB                      prota:		ESTRUCTURA_PUNTOMIRA
      15.  00:A6FB  64 64 00 00 00 05 00 00 00 00 00 00 00 00 00 00 
      16.  00:A70B                      ;variables globales del prota
      17.  00:A70B                      prota_nivel:			;nivel del castillo donde está 0-6
      18.  00:A70B  00                  			DB		0
      19.  00:A70C                      prota_vidas:
      20.  00:A70C  00                  			DB		0
      21.  00:A70D                      prota_reliquias:
      22.  00:A70D  03                  			DB		3
      23.  00:A70E                      prota_pos_mapx:
      24.  00:A70E  00                  			DB		0	;pos columna
      25.  00:A70F                      prota_pos_mapy:
      26.  00:A70F  00                  			DB		0	;pos fila
      27.  00:A710                      prota_energia:
      28.  00:A710  FA                  			DB		250
      29.  00:A711                      
      30.  00:A711                      ;array para pintar de golpe el marcador de vidas
      31.  00:A711                      array_aux_vidas: 		
      32.  00:A711                      			DB		0,0,0,0,0,0,0,0
      32.  00:A711  00 00 00 00 00 00 00 00 
      33.  00:A719                      
      34.  00:A719                      ;array para pintar de golpe el marcador de reliquias
      35.  00:A719                      array_aux_reliquias:	
      36.  00:A719                      			DB		0,0,0,0,0,0,0,0
      36.  00:A719  00 00 00 00 00 00 00 00 
      37.  00:A721                      
      38.  00:A721                      array_aux_energia:					;array para pintar de golpe el marcador de energía
      39.  00:A721                      			DB		16,0,0,0,0,0,0 	;el 16 primero es porque siempre estará pintado el cuadro primero rojo
      39.  00:A721  10 00 00 00 00 00 00 
      40.  00:A728                      ultimo_pos_array_aux_energia:
      41.  00:A728  00                  			DB		0				;el array completo es de 8 pero para posicionar sin niecesidad de cálculos  etiqueto este aparte
      42.  00:A729                      			
      43.  00:A729                      array_aux_mapa_limpiar:	;es por facilitar el reseteo del mapa (pinto 7 lineas en negro con bios) la otra opción es más larga en código y complicada aunque más rápida
      44.  00:A729                      			DB		0,0,0,0,0,0,0
      44.  00:A729  00 00 00 00 00 00 00 
      45.  00:A730                      elemento_pintar_mapa:
      46.  00:A730  00                  			DB		0	;TILEPROTAM = 19, ;TILEGRISM = 9
      47.  00:A731                      			
      48.  00:A731                      ;; nota importante: cada vez que se cambie de nivel se actualizará el contenido
      49.  00:A731                      ;; arrays con mapa de tiles de las puertas
      50.  00:A731                      array_puerta_arriba:
      51.  00:A731  03 01 01 03         array_puerta_arriba1:		DB	3,1,1,3
      52.  00:A735  01 01 01 01         array_puerta_arriba2:		DB	1,1,1,1
      53.  00:A739  01 01 01 01         array_puerta_arriba3:		DB	1,1,1,1
      54.  00:A73D  01 01 01 01         array_puerta_arriba4:		DB	1,1,1,1
      55.  00:A741  01 01 01 01         array_puerta_arriba5:		DB	1,1,1,1
      56.  00:A745                      
      57.  00:A745                      array_puerta_derecha:
      58.  00:A745  01 03 03            array_puerta_derecha1:		DB	1,3,3
      59.  00:A748  01 01 03            array_puerta_derecha2:		DB	1,1,3
      60.  00:A74B  01 01 01            array_puerta_derecha3:		DB	1,1,1
      61.  00:A74E  01 01 01            array_puerta_derecha4:		DB	1,1,1
      62.  00:A751  01 01 01            array_puerta_derecha5:		DB	1,1,1
      63.  00:A754  02 01 01            array_puerta_derecha6:		DB	2,1,1
      64.  00:A757  04 02 01            array_puerta_derecha7:		DB	4,2,1
      65.  00:A75A                      	
      66.  00:A75A  01 01 01 01         array_puerta_abajo:			DB	1,1,1,1
      67.  00:A75E                      
      68.  00:A75E                      array_puerta_izquierda:
      69.  00:A75E  03 03 01            array_puerta_izquierda1:	DB	3,3,1
      70.  00:A761  03 01 01            array_puerta_izquierda2:	DB	3,1,1
      71.  00:A764  01 01 01            array_puerta_izquierda3:	DB	1,1,1
      72.  00:A767  01 01 01            array_puerta_izquierda4:	DB	1,1,1
      73.  00:A76A  01 01 01            array_puerta_izquierda5:	DB	1,1,1
      74.  00:A76D  01 01 02            array_puerta_izquierda6:	DB	1,1,2
      75.  00:A770  01 02 04            array_puerta_izquierda7:	DB	1,2,4
      76.  00:A773                      
      77.  00:A773                      
      78.  00:A773                      
      79.  00:A773                      lista_ayudas:
      80.  00:A773  00 (16)             ayuda_oracion:		DS		ESTRUCTURA_AYUDA		
      81.  00:A783  00 (16)             ayuda_cruz:			DS		ESTRUCTURA_AYUDA
      82.  00:A793  00 (16)             ayuda_aguabendita:	DS		ESTRUCTURA_AYUDA
      83.  00:A7A3  00 (16)             ayuda_armadura:		DS		ESTRUCTURA_AYUDA
      84.  00:A7B3  00 (16)             ayuda_planta:		DS		ESTRUCTURA_AYUDA
      85.  00:A7C3  00 (16)             ayuda_vidaextra		DS		ESTRUCTURA_AYUDA
      86.  00:A7D3  00 (16)             ayuda_ballesta:		DS		ESTRUCTURA_AYUDA
      87.  00:A7E3                      
      88.  00:A7E3                      ;datos ayudas
      89.  00:A7E3                      datos_oracion:
      90.  00:A7E3  00                  				DB    	0				;0 no activo <>0 activo															0
      91.  00:A7E4  4C A8               				DW		array_oracionon	;pos en memoria ver array_ayudas de cómo se mostrarán (wordaux2)				1,2
      92.  00:A7E6  50 A8               				DW		array_oracionoff;pos en memoria ver array_ayudas de cómo se mostrarán (wordaux2)				3,4
      93.  00:A7E8  A3                  				DB		POSORACION		;pos en pantalla (memoria en el banco 1 se le suma 256 + TILEMAP) (wordaux1)	5
      94.  00:A7E9  20                  				DB		POSORACIONX		;pos del pixel central (esquina superior + 8x)									6
      95.  00:A7EA  70                  				DB		POSAYUDASY		;pos del pixel central (esquina superior + 8y) (para toas igual)				7
      96.  00:A7EB  78 99               				DW		accion_oracion	;subrutina que indica la acción si se dispara en el objeto						8,9
      97.  00:A7ED                      datos_cruz:
      98.  00:A7ED                      				;~ DB    	0				;0 no activo <>0 activo															0
      99.  00:A7ED                      				;~ DW		array_cruzon	;pos en memoria ver array_ayudas de cómo se mostrarán (wordaux2)				1,2
     100.  00:A7ED                      				;~ DW		array_cruzoff	;pos en memoria ver array_ayudas de cómo se mostrarán (wordaux2)				3,4
     101.  00:A7ED                      				;~ DB		POSCRUZ			;pos en pantalla (memoria en el banco 1 se le suma 256 + TILEMAP) (wordaux1)	5
     102.  00:A7ED                      				;~ DB		POSCRUZX		;pos del pixel central (esquina superior + 8x)									6
     103.  00:A7ED                      				;~ DB		POSAYUDASY		;pos del pixel central (esquina superior + 8y) (para toas igual)				7
     104.  00:A7ED                      				;~ DW		accion_cruz		;subrutina que indica la acción si se dispara en el objeto						8,9 
     105.  00:A7ED                      				
     106.  00:A7ED  00                  				DB    	0				;0 no activo <>0 activo															0
     107.  00:A7EE  54 A8               				DW		array_cruzon	;pos en memoria ver array_ayudas de cómo se mostrarán (wordaux2)				1,2
     108.  00:A7F0  58 A8               				DW		array_cruzoff	;pos en memoria ver array_ayudas de cómo se mostrarán (wordaux2)				3,4
     109.  00:A7F2  A7                  				DB		167			;pos en pantalla (memoria en el banco 1 se le suma 256 + TILEMAP) (wordaux1)	5
     110.  00:A7F3  40                  				DB		64		;pos del pixel central (esquina superior + 8x)									6
     111.  00:A7F4  70                  				DB		112		;pos del pixel central (esquina superior + 8y) (para toas igual)				7
     112.  00:A7F5  79 99               				DW		accion_cruz		;subrutina que indica la acción si se dispara en el objeto						8,9 
     113.  00:A7F7                      				
     114.  00:A7F7                      datos_aguabendita:
     115.  00:A7F7  00                  				DB    	0				;0 no activo <>0 activo															0
     116.  00:A7F8  5C A8               				DW		array_aguaon	;pos en memoria ver array_ayudas de cómo se mostrarán (wordaux2)				1,2
     117.  00:A7FA  60 A8               				DW		array_aguaoff	;pos en memoria ver array_ayudas de cómo se mostrarán (wordaux2)				3,4
     118.  00:A7FC  AB                  				DB		POSAGUA			;pos en pantalla (memoria en el banco 1 se le suma 256 + TILEMAP) (wordaux1)	5
     119.  00:A7FD  60                  				DB		POSAGUAX		;pos del pixel central (esquina superior + 8x)									6
     120.  00:A7FE  70                  				DB		POSAYUDASY		;pos del pixel central (esquina superior + 8y) (para toas igual)				7
     121.  00:A7FF  7A 99               				DW		accion_agua		;subrutina que indica la acción si se dispara en el objeto						8,9
     122.  00:A801  00                  				DB		0	;relleno																		10-16    
     123.  00:A802  00                  				DB		0	;relleno																		10-16    
     124.  00:A803  00                  				DB		0	;relleno																		10-16    
     125.  00:A804  00                  				DB		0	;relleno																		10-16    
     126.  00:A805  00                  				DB		0	;relleno																		10-16    
     127.  00:A806  00                  				DB		0	;relleno																		10-16   
     128.  00:A807  00                  				DB		0	;relleno																		10-16    
     129.  00:A808                      datos_armadura:
     130.  00:A808  00                  				DB    	0				;0 no activo <>0 activo															0
     131.  00:A809  64 A8               				DW		array_armaduraon;pos en memoria ver array_ayudas de cómo se mostrarán (wordaux2)				1,2
     132.  00:A80B  68 A8               				DW		array_armaduraoff;pos en memoria ver array_ayudas de cómo se mostrarán (wordaux2)				3,4
     133.  00:A80D  AF                  				DB		POSARMAD		;pos en pantalla (memoria en el banco 1 se le suma 256 + TILEMAP) (wordaux1)	5
     134.  00:A80E  80                  				DB		POSARMADX		;pos del pixel central (esquina superior + 8x)									6
     135.  00:A80F  70                  				DB		POSAYUDASY		;pos del pixel central (esquina superior + 8y) (para toas igual)				7
     136.  00:A810  7B 99               				DW		accion_armadura	;subrutina que indica la acción si se dispara en el objeto						8,9
     137.  00:A812  00                  				DB		0	;relleno																		10-16    
     138.  00:A813  00                  				DB		0	;relleno																		10-16    
     139.  00:A814  00                  				DB		0	;relleno																		10-16    
     140.  00:A815  00                  				DB		0	;relleno																		10-16    
     141.  00:A816  00                  				DB		0	;relleno																		10-16    
     142.  00:A817  00                  				DB		0	;relleno																		10-16   
     143.  00:A818  00                  				DB		0	;relleno																		10-16    
     144.  00:A819                      datos_planta:
     145.  00:A819  00                  				DB    	0				;0 no activo <>0 activo															0
     146.  00:A81A  6C A8               				DW		array_plantaon	;pos en memoria ver array_ayudas de cómo se mostrarán (wordaux2)				1,2
     147.  00:A81C  70 A8               				DW		array_plantaoff	;pos en memoria ver array_ayudas de cómo se mostrarán (wordaux2)				3,4
     148.  00:A81E  B3                  				DB		POSPLANTA		;pos en pantalla (memoria en el banco 1 se le suma 256 + TILEMAP) (wordaux1)	5
     149.  00:A81F  A0                  				DB		POSPLANTAX		;pos del pixel central (esquina superior + 8x)									6
     150.  00:A820  70                  				DB		POSAYUDASY		;pos del pixel central (esquina superior + 8y) (para toas igual)				7
     151.  00:A821  7C 99               				DW		accion_planta	;subrutina que indica la acción si se dispara en el objeto						8,9
     152.  00:A823  00                  				DB		0	;relleno																		10-16    
     153.  00:A824  00                  				DB		0	;relleno																		10-16    
     154.  00:A825  00                  				DB		0	;relleno																		10-16    
     155.  00:A826  00                  				DB		0	;relleno																		10-16    
     156.  00:A827  00                  				DB		0	;relleno																		10-16    
     157.  00:A828  00                  				DB		0	;relleno																		10-16   
     158.  00:A829  00                  				DB		0	;relleno																		10-16     
     159.  00:A82A                      datos_vidaextra:
     160.  00:A82A  00                  				DB    	0				;0 no activo <>0 activo															0
     161.  00:A82B  74 A8               				DW		array_extraon	;pos en memoria ver array_ayudas de cómo se mostrarán (wordaux2)				1,2
     162.  00:A82D  78 A8               				DW		array_extraoff	;pos en memoria ver array_ayudas de cómo se mostrarán (wordaux2)				3,4
     163.  00:A82F  B7                  				DB		POSVIDAEXT		;pos en pantalla (memoria en el banco 1 se le suma 256 + TILEMAP) (wordaux1)	5
     164.  00:A830  C0                  				DB		POSVIDAEXTX		;pos del pixel central (esquina superior + 8x)									6
     165.  00:A831  70                  				DB		POSAYUDASY		;pos del pixel central (esquina superior + 8y) (para toas igual)				7
     166.  00:A832  7D 99               				DW		accion_vidaextra;subrutina que indica la acción si se dispara en el objeto						8,9
     167.  00:A834  00                  				DB		0	;relleno																		10-16    
     168.  00:A835  00                  				DB		0	;relleno																		10-16    
     169.  00:A836  00                  				DB		0	;relleno																		10-16    
     170.  00:A837  00                  				DB		0	;relleno																		10-16    
     171.  00:A838  00                  				DB		0	;relleno																		10-16    
     172.  00:A839  00                  				DB		0	;relleno																		10-16   
     173.  00:A83A  00                  				DB		0	;relleno																		10-16     
     174.  00:A83B                      datos_ballesta:
     175.  00:A83B  00                  				DB    	0				;0 no activo <>0 activo															0
     176.  00:A83C  7C A8               				DW		array_ballestaon;pos en memoria ver array_ayudas de cómo se mostrarán (wordaux2)				1,2
     177.  00:A83E  80 A8               				DW		array_ballestaoff;pos en memoria ver array_ayudas de cómo se mostrarán (wordaux2)				3,4
     178.  00:A840  BB                  				DB		POSBALLESTA		;pos en pantalla (memoria en el banco 1 se le suma 256 + TILEMAP) (wordaux1)	5
     179.  00:A841  E0                  				DB		POSBALLESTAX	;pos del pixel central (esquina superior + 8x)									6
     180.  00:A842  70                  				DB		POSAYUDASY		;pos del pixel central (esquina superior + 8y) (para toas igual)				7
     181.  00:A843  78 99               				DW		accion_oracion	;subrutina que indica la acción si se dispara en el objeto						8,9
     182.  00:A845  00                  				DB		0	;relleno																		10-16    
     183.  00:A846  00                  				DB		0	;relleno																		10-16    
     184.  00:A847  00                  				DB		0	;relleno																		10-16    
     185.  00:A848  00                  				DB		0	;relleno																		10-16    
     186.  00:A849  00                  				DB		0	;relleno																		10-16    
     187.  00:A84A  00                  				DB		0	;relleno																		10-16   
     188.  00:A84B  00                  				DB		0	;relleno																		10-16      
     189.  00:A84C                      
     190.  00:A84C                      
     191.  00:A84C                      
     192.  00:A84C                      
     193.  00:A84C                      
     194.  00:A84C                      ;array de ayudas
     195.  00:A84C                      ;posición dentro del bank1 (o 0 que son iguales) de los tiles de la ayuda (cómo en los sprites de 2x2)
     196.  00:A84C                      array_ayudas:
     197.  00:A84C  C8 CA               array_oracionon:			DB	200,202
     198.  00:A84E  C9 CB               array_oracionon1:			DB	201,203
     199.  00:A850  CC CE               array_oracionoff:			DB	204,206
     200.  00:A852  CD CF               array_oracionoff1:			DB	205,207
     201.  00:A854  D0 D2               array_cruzon:				DB	208,210
     202.  00:A856  D1 D3               array_cruzon1:				DB	209,211
     203.  00:A858  D4 D6               array_cruzoff:				DB	212,214
     204.  00:A85A  D5 D7               array_cruzoff1:				DB	213,215
     205.  00:A85C  D8 DA               array_aguaon:				DB	216,218
     206.  00:A85E  D9 DB               array_aguaon1:				DB	217,219
     207.  00:A860  DC DE               array_aguaoff:				DB	220,222
     208.  00:A862  DD DF               array_aguaoff1:				DB	221,223
     209.  00:A864  E0 E2               array_armaduraon:			DB	224,226
     210.  00:A866  E1 E3               array_armaduraon1:			DB	225,227
     211.  00:A868  E4 E6               array_armaduraoff:			DB	228,230
     212.  00:A86A  E5 E7               array_armaduraoff1:			DB	229,231
     213.  00:A86C  E8 EA               array_plantaon:				DB	232,234
     214.  00:A86E  E9 EB               array_plantaon1:			DB	233,235
     215.  00:A870  EC EE               array_plantaoff:			DB	236,238
     216.  00:A872  ED EF               array_plantaoff1:			DB	237,239
     217.  00:A874  F0 F2               array_extraon:				DB	240,242
     218.  00:A876  F1 F3               array_extraon1:				DB	241,243
     219.  00:A878  F4 F6               array_extraoff:				DB	244,246
     220.  00:A87A  F5 F7               array_extraoff1:			DB	245,247
     221.  00:A87C  F8 FA               array_ballestaon:			DB	248,250
     222.  00:A87E  F9 FB               array_ballestaon1:			DB	249,251
     223.  00:A880  FC FE               array_ballestaoff:			DB	252,254
     224.  00:A882  FD FF               array_ballestaoff1:			DB	253,255
     225.  00:A884                      
     226.  00:A884  00 (7)              antorchas:			DS		ESTRUCTURA_ANTORCHA
     227.  00:A88B  C5 C6 C7            array_antorcha:				DB	197,198,199	;fuego + madera1 + madera2
     228.  00:A88E                      
     229.  00:A88E  00 (7)              esqueletos:			DS		ESTRUCTURA_ESQUELETO
     230.  00:A895                      array_esqueleto:			DB	194, 0, 195, 160, 164, 161, 0, 163, 0, 193, 162, 192
     230.  00:A895  C2 00 C3 A0 A4 A1 00 A3 00 C1 A2 C0 
     231.  00:A8A1  A4 A5 A4 A6         lista_escenas_calavera:		DB	164, 165, 164, 166
     232.  00:A8A5                      
     233.  00:A8A5                      
     234.  00:A8A5                      
     235.  00:A8A5                      
     236.  00:A8A5                      ;array de 4 bytes x 32 sprites posibles en pantalla que sobreescribirá la tabla de sprites actualizando VRAM
     237.  00:A8A5                      array_sprites:
     238.  00:A8A5  00 (8)              array_sprites_pm:				DS	2 * 4
     239.  00:A8AD  00 (120)            array_sprites_enem:				DS	30 * 4
     240.  00:A925  00 (140)            lista_enemigos:					DS	10 * ESTRUCTURA_ENEMIGO
     241.  00:A9B1                      ; puntero al array a pintar en VRAM
     242.  00:A9B1  00 00               puntero_array_atrib_array_VRAM: DW	0	;ARRAYSPTRIES + 8
     243.  00:A9B3                      
     244.  00:A9B3                      
     245.  00:A9B3                      
     246.  00:A9B3                      
     247.  00:A9B3                      
     170   00:A9B3                      	
     171   00:A9B3                      ;;=====================================================
     172   00:A9B3                      ;;DEFINICIÓN DE PANTALLAS
     173   00:A9B3                      ;;=====================================================		
     174   00:A9B3                      	include "pantallas.asm"
       1.  00:A9B3                      ;;=====================================================
       2.  00:A9B3                      ;;DEFINICIÓN DE PANTALLAS
       3.  00:A9B3                      ;;=====================================================		
       4.  00:A9B3                      
       5.  00:A9B3                      ; bancos 1 y 2 y de pantalla 1 
       6.  00:A9B3                      ; se usa un banco común (en este caso el banco 1)
       7.  00:A9B3                      ; el mapa afecta al banco 1 y 2
       8.  00:A9B3  (021D)              tiles_patrones_nivel0:	incbin "pantallas/nivel0.bank1.til.bin.chr.plet5"
       9.  00:ABD0  (0069)              tiles_color_nivel0:		incbin "pantallas/nivel0.bank1.til.bin.clr.plet5"
      10.  00:AC39  (0035)              tiles_mapa_nivel0:		incbin "pantallas/nivel0.bank01.map.bin.plet5"
      11.  00:AC6E                      
      12.  00:AC6E  (01B5)              tiles_patrones_nivel1:	incbin "pantallas/nivel1.bank1.til.bin.chr.plet5"
      13.  00:AE23  (0047)              tiles_color_nivel1:		incbin "pantallas/nivel1.bank1.til.bin.clr.plet5"
      14.  00:AE6A  (0035)              tiles_mapa_nivel1:		incbin "pantallas/nivel1.bank01.map.bin.plet5"
      15.  00:AE9F                      
      16.  00:AE9F  (01B5)              tiles_patrones_nivel2:	incbin "pantallas/nivel2.bank1.til.bin.chr.plet5"
      17.  00:B054  (0047)              tiles_color_nivel2:		incbin "pantallas/nivel2.bank1.til.bin.clr.plet5"
      18.  00:B09B  (0035)              tiles_mapa_nivel2:		incbin "pantallas/nivel2.bank01.map.bin.plet5"
      19.  00:B0D0                      
      20.  00:B0D0  (01B5)              tiles_patrones_nivel3:	incbin "pantallas/nivel3.bank1.til.bin.chr.plet5"
      21.  00:B285  (0047)              tiles_color_nivel3:		incbin "pantallas/nivel3.bank1.til.bin.clr.plet5"
      22.  00:B2CC  (0035)              tiles_mapa_nivel3:		incbin "pantallas/nivel3.bank01.map.bin.plet5"
      23.  00:B301                      
      24.  00:B301  (01B5)              tiles_patrones_nivel4:	incbin "pantallas/nivel4.bank1.til.bin.chr.plet5"
      25.  00:B4B6  (0047)              tiles_color_nivel4:		incbin "pantallas/nivel4.bank1.til.bin.clr.plet5"
      26.  00:B4FD  (0035)              tiles_mapa_nivel4:		incbin "pantallas/nivel4.bank01.map.bin.plet5"
      27.  00:B532                      
      28.  00:B532  (01B5)              tiles_patrones_nivel5:	incbin "pantallas/nivel5.bank1.til.bin.chr.plet5"
      29.  00:B6E7  (0047)              tiles_color_nivel5:		incbin "pantallas/nivel5.bank1.til.bin.clr.plet5"
      30.  00:B72E  (0035)              tiles_mapa_nivel5:		incbin "pantallas/nivel5.bank01.map.bin.plet5"
      31.  00:B763                      
      32.  00:B763  (01B5)              tiles_patrones_nivel6:	incbin "pantallas/nivel6.bank1.til.bin.chr.plet5"
      33.  00:B918  (0047)              tiles_color_nivel6:		incbin "pantallas/nivel6.bank1.til.bin.clr.plet5"
      34.  00:B95F  (0035)              tiles_mapa_nivel6:		incbin "pantallas/nivel6.bank01.map.bin.plet5"
      35.  00:B994                      
      36.  00:B994                      ; 3º banco que es la parte de puntos, vidas, mapas, etc... es común
      37.  00:B994  (014C)              tiles_patrones_marcador:	incbin "pantallas/marcador.til.bin.chr.plet5"
      38.  00:BAE0  (0035)              tiles_color_marcador:		incbin "pantallas/marcador.til.bin.clr.plet5"
      39.  00:BB15  (0062)              tiles_mapa_marcador:		incbin "pantallas/marcador.map.bin.plet5"
      40.  00:BB77                      
      41.  00:BB77                      ;NOTA: FALTARÍAN PANTALLAS ESPECIALES (POR DEFINIR)
     175   00:BB77                      
     176   00:BB77                      
     177   00:BB77                      	
     178   00:BB77                      END:

    LABELS
-------------------------------------------------
00:000000D8 X GTTRIG
00:000000D5 X GTSTCK
00:0000F3DB   CLIKSW
00:0000013E X RDVDP
00:00000047   WRTVDP
00:0000005C   LDIRVM
00:00000059 X LDIRMV
00:0000005F   CHGMOD
00:00000041 X DISSCR
00:00000044 X ENASCR
00:00000062   CHGCLR
00:0000F3E9   FORCLR
00:0000F3EA   BAKCLR
00:0000F3EB   BDRCLR
00:000000C3   CLS
00:0000F3DF X RG0SAV
00:0000F3E0   RG1SAV
00:0000F3E1 X RG2SAV
00:0000F3E2 X RG3SAV
00:0000F3E3 X RG4SAV
00:0000F3E4 X RG5SAV
00:0000F3E5 X RG6SAV
00:0000F3E6 X RG7SAV
00:0000F3E7 X STATFL
00:00000099   REGEST
00:00000098   REGESCVDP
00:000000A0   PSG_A
00:000000A1   PSG_W
00:000000A2   PSG_R
00:00000000   CHRTBL
00:00001800   TILMAP
00:00001900 X TILMAPBANK1
00:00001B00   SPRART
00:00002000   CLRTBL
00:00003800   SPRTBL
00:00000001 X SI
00:00000000 X NO
00:00000004   LIMCADENCIA
00:00000000 X COLTRASP
00:00000001   COLNEGRO
00:00000002 X COLVERDE
00:00000003 X COLVERCLA
00:00000004 X COLAZULOSC
00:00000005 X COLAZULLA
00:00000006   COLROJOOSC
00:00000007 X COLCYAN
00:00000008   COLROJO
00:00000009 X COLROJOCLA
00:0000000A X COLAMAROSC
00:0000000B X COLAMARCLA
00:0000000C X COLVERDOSC
00:0000000D X COLMAGENTA
00:0000000E X COLGRIS
00:0000000F   COLBLANCO
00:000002F8   POSMAPLIN1
00:000002D8   POSMAPLIN2
00:000002B8   POSMAPLIN3
00:00000298   POSMAPLIN4
00:00000278   POSMAPLIN5
00:00000258   POSMAPLIN6
00:00000238   POSMAPLIN7
00:0000000D   POSCARAMAP
00:00000248   POSVIDAS
00:00000011   POSRELIMAP
00:000002C8   POSRELIQ
00:00000288   POSENERG
00:000002B4   POSNIVEL
00:00000238   POSMAPA
00:000001EE   POSPUERABAJ
00:0000008E   POSPUERARRI
00:000000FC   POSPUERDERE
00:000000E1   POSPUERIZQU
00:000000A3   POSORACION
00:000000A7 X POSCRUZ
00:000000AB   POSAGUA
00:000000AF   POSARMAD
00:000000B3   POSPLANTA
00:000000B7   POSVIDAEXT
00:000000BB   POSBALLESTA
00:00000020   POSORACIONX
00:00000040 X POSCRUZX
00:00000060   POSAGUAX
00:00000080   POSARMADX
00:000000A0   POSPLANTAX
00:000000C0   POSVIDAEXTX
00:000000E0   POSBALLESTAX
00:00000070   POSAYUDASY
00:00000000   INACTIVA
00:00000001   ACTIVA
00:00000088   POSANTOR1
00:00000097   POSANTOR2
00:000000C4   MAPLLAMA1
00:000000C5   MAPLLAMA2
00:000000FF   RESETLLAMA
00:00000088   POSESQUEL1
00:00000095   POSESQUEL2
00:000000A9   POSCALAVE1
00:000000B6   POSCALAVE2
00:00000019   RESETESQUEL
00:00000004   RESETESCENAESQUEL
00:00000013   TILEPROTAM
00:00000009   TILEGRISM
00:00000010   TILEMAPROJO
00:0000000F   TILEMAPAMAR
00:0000000E   TILEMAPVERD
00:00000008   NMAXVIDREL
00:00000007   NHABNIVEL
00:000000F8 X MAXENERGIA
00:000000D9   TILEENERG8
00:000000BA   TILEENERG7
00:0000009B   TILEENERG6
00:0000007C   TILEENERG5
00:0000005D   TILEENERG4
00:0000003E   TILEENERG3
00:0000001F   TILEENERG2
00:00000000   TILENEGRO
00:00000000 X LIMPANTIZQ
00:000000FF   LIMPANTDER
00:00000000 X LIMPANTARR
00:00000080   LIMPANTABA
00:00000006 X BASEMAPY
00:00000003 X BASEMAPX
00:0000FD9A X H.KEYI
00:0000FD9F   H.TIMI
00:0000F000   PT3_SETUP
00:0000F001   PT3_MODADDR
00:0000F003   PT3_CrPsPtr
00:0000F005   PT3_SAMPTRS
00:0000F007   PT3_OrnPtrs
00:0000F009   PT3_PDSP
00:0000F00B   PT3_CSP
00:0000F00D   PT3_PSP
00:0000F00F   PT3_PrNote
00:0000F010   PT3_PrSlide
00:0000F012   PT3_AdInPtA
00:0000F014   PT3_AdInPtB
00:0000F016   PT3_AdInPtC
00:0000F018   PT3_LPosPtr
00:0000F01A   PT3_PatsPtr
00:0000F01C   PT3_Delay
00:0000F01D   PT3_AddToEn
00:0000F01E   PT3_Env_Del
00:0000F01F   PT3_ESldAdd
00:0000F021   PT3_NTL3
00:0000F023   VARS
00:0000F023   ChanA
00:0000F040   ChanB
00:0000F05D   ChanC
00:0000F07A   DelyCnt
00:0000F07B   CurESld
00:0000F07D   CurEDel
00:0000F07E   Ns_Base_AddToNs
00:0000F07E   Ns_Base
00:0000F07F   AddToNs
00:0000F080   NT_
00:0000F140   AYREGS
00:0000F140   VT_
00:0000F14E   EnvBase
00:0000F150   VAR0END
00:0000F150   T1_
00:0000F150   T_NEW_1
00:0000F150   T_OLD_1
00:0000F168   T_OLD_2
00:0000F180   T_NEW_3
00:0000F180   T_OLD_3
00:0000F182   T_OLD_0
00:0000F182   T_NEW_0
00:0000F19A   T_NEW_2
00:0000F240   ayFX_MODE
00:0000F241   ayFX_BANK
00:0000F243   ayFX_PRIORITY
00:0000F244   ayFX_POINTER
00:0000F246   ayFX_TONE
00:0000F248   ayFX_NOISE
00:0000F249   ayFX_VOLUME
00:0000F24A   ayFX_CHANNEL
00:00008000   START
00:00008035   loop_principal
00:00008048 X fin_programa_principal
00:00008048   check_colisiones
00:00008048 X fin_check_colisiones
00:00008049   inicializa_variables_pruebas
00:0000806B X fin_inicializa_variables_pruebas
00:0000806C   inicializa_niveles
00:0000807A   inicializa_niveles.bucle_borra_hab
00:0000807E X fin_iniciliza_niveles
00:0000807F   actualiza_marcador_vidas
00:00008084   loop_marcador_caras_negro
00:00008089 X fin_loop_marcador_caras_negro
00:00008092   loop_marcador_caras
00:00008097 X fin_loop_marcador_caras
00:00008097 X fin_actualiza_marcador_vidas
00:00008098   actualiza_buffer_reliquias
00:0000809E   loop_buffer_reliquias_negro
00:000080AB   loop_buffer_reliquias
00:000080B0 X fin_actualiza_buffer_reliquias
00:000080B1   localiza_info_habitacion
00:000080B4 X localiza_info_habitacion.situo_columna
00:000080BD X localiza_info_habitacion.situo_fila
00:000080C6   localiza_info_habitacion.loop_suma_fila
00:000080CE   localiza_info_habitacion.situo_nivel
00:000080DD   localiza_info_habitacion.loop_suma_nivel
00:000080E2   localiza_info_habitacion.actualiza_variable_habitacion
00:00008104 X fin_localiza_info_habitacion
00:00008105   suma_A_BC
00:0000810A X fin_suma_A_BC
00:0000810B   suma_A_HL
00:00008110 X fin_suma_A_HL
00:00008111   color_pantalla
00:00008122 X fin_color_pantalla
00:00008122   sub_preparapantalla
00:00008122 X elimina_clic
00:00008126 X fin_elimina_clic
00:00008126 X limpia_pantalla
00:0000812A X fin_limpia_pantalla
00:00008130 X screen2
00:00008135 X sprites_16_16
00:00008143 X fin_sub_preparapantalla
00:00008143   pinta_pantalla_completa
00:00008149 X fin_pinta_pantalla_completa
00:0000814A   pinta_parte_superior_pantalla
00:0000817B   pinta_parte_superior_pantalla.carga_nivel_0
00:00008196   pinta_parte_superior_pantalla.carga_nivel_1
00:000081B1   pinta_parte_superior_pantalla.carga_nivel_2
00:000081CC   pinta_parte_superior_pantalla.carga_nivel_3
00:000081E7   pinta_parte_superior_pantalla.carga_nivel_4
00:00008202   pinta_parte_superior_pantalla.carga_nivel_5
00:0000821D   pinta_parte_superior_pantalla.carga_nivel_6
00:00008235   pinta_parte_superior_pantalla.fin_carga_niveles
00:00008262 X fin_pinta_parte_superior_pantalla
00:00008262   tiles_patrones
00:00008264   tiles_colores
00:00008266   tiles_mapa
00:00008268   pinta_parte_inferior_pantalla
00:00008283 X fin_pinta_parte_inferior_pantalla
00:00008283   pinta_vidas
00:00008292 X fin_pinta_vidas
00:00008292   pinta_reliquias
00:000082A1 X fin_pinta_reliquias
00:000082A1   pinta_nivel
00:000082AD X fin_pinta_nivel
00:000082AD   pinta_tile_suelto
00:000082BA X fin_pinta_tile_suelto
00:000082BB   mira_pinta_energia
00:000082C1 X pinta_ener
00:000082C1 X pinta_ener_tile_8
00:000082CD   pinta_ener_tile_8_negro
00:000082CE   pinta_ener_tile_7
00:000082D8   pinta_ener_tile_7_negro
00:000082D9   pinta_ener_tile_6
00:000082E3   pinta_ener_tile_6_negro
00:000082E4   pinta_ener_tile_5
00:000082EE   pinta_ener_tile_5_negro
00:000082EF   pinta_ener_tile_4
00:000082F9   pinta_ener_tile_4_negro
00:000082FA   pinta_ener_tile_3
00:00008304   pinta_ener_tile_3_negro
00:00008305   pinta_ener_tile_2
00:0000830F   pinta_ener_tile_2_negro
00:00008310   fin_mira_pinta_energia
00:00008312   pinta_energia
00:00008321 X fin_pinta_energia
00:00008321   borra_mapa
00:00008377 X fin_borra_mapa
00:00008378   pinta_puertas
00:00008395 X fin_pinta_puertas
00:00008396   pinta_puerta_aba
00:000083B1 X fin_pinta_puerta_aba
00:000083B1   pinta_puerta_arr
00:000083CC X fin_pinta_puerta_arr
00:000083CC   pinta_puerta_der
00:000083E7 X fin_pinta_puerta_der
00:000083E7   pinta_puerta_izq
00:00008402 X fin_pinta_puerta_izq
00:00008402   posiciona_en_mapa
00:00008405 X posiciona_en_mapa.sumar_fila
00:0000842F X posiciona_en_mapa.fila_0
00:00008436   posiciona_en_mapa.fila_1
00:0000843D   posiciona_en_mapa.fila_2
00:00008444   posiciona_en_mapa.fila_3
00:0000844B   posiciona_en_mapa.fila_4
00:00008452   posiciona_en_mapa.fila_5
00:00008459 X posiciona_en_mapa.fila_6
00:00008459   posiciona_en_mapa.sumar_columna
00:0000846F   pinta_pos_mapa_vacio
00:00008471   fin_pinta_pos_mapa
00:00008474 X fin_posiciona_en_mapa
00:00008474   efecto_imagen_tira_reliquia
00:00008477   efecto_imagen_tira_reliquia.parpadea_fondo
00:0000848E X fin_efecto_imagen_tira_reliquia
00:0000848E   pinta_array
00:000084A9   pinta_array.pa_pinta_fila
00:000084AA   pinta_array.pa_pinta_columnas
00:000084CD X fin_pinta_array
00:000084CE   wordaux1
00:000084D0   wordaux2
00:000084D2   byteaux1
00:000084D3   byteaux2
00:000084D4   inicializa_antorchas
00:000084F5 X fin_inicializa_antorchas
00:000084F6   inicializa_esqueletos
00:00008517 X fin_inicializa_esqueletos
00:00008518   pinta_extra_fondo
00:0000851C X pinta_extra_fondo.examina_sihay_antorchas
00:0000852B   pinta_extra_fondo.hayantorchas
00:00008554   pinta_extra_fondo.examina_sihay_esqueletos
00:00008565   pinta_extra_fondo.hayesqueletos
00:0000858E X fin_pinta_extra_fondo
00:0000858F   actualiza_elementos_fondo
00:0000858F X actualiza_elementos_fondo.examina_antorchas
00:0000859D   actualiza_elementos_fondo.examina_esqueletos
00:000085A9 X fin_actualiza_elementos_fondo
00:000085AA   flip_llamas_antorchas
00:000085C1 X flip_llamas_antorchas.llama_impar
00:000085E2   flip_llamas_antorchas.llama_par
00:00008601   fin_flip_llamas_antorchas
00:00008601   flip_calavera_esqueletos
00:0000862E X fin_flip_calavera_esqueletos
00:0000862E   var_aux_calavera
00:0000862F   actualiza_escena_calavera
00:0000863B   actualiza_escena_calavera.decrementa_escenas
00:0000863C X actualiza_escena_calavera.fin_consulta_escena
00:0000864A X fin_actualiza_escena_calavera
00:0000864B   carga_patrones_sprites_nivel
00:0000864F X fin_carga_patrones_sprites_nivel
00:0000864F   carga_patrones_nivel_comunes
00:0000865B X fin_carga_patrones_nivel_comunes
00:0000865B X carga_patrones_sprites_nivel1
00:0000865B X fin_carga_patrones_sprites
00:0000865C   render_sprites
00:00008668 X fin_actualiza_array_sprites_vram
00:00008668   vuelca_resultado_puntomira_array
00:0000868D X vuelca_resultado_puntomira_array.codigo_color_1
00:00008696   vuelca_resultado_puntomira_array.codigo_color_2
00:0000869F X fin_vuelca_resultado_puntomira_array
00:0000869F   check_player
00:000086BE X f
00:000086BF   mueve_arriba
00:000086CA   mueve_arriba.no_decrementa_y
00:000086CB X fin_mueve_arriba
00:000086CC   mueve_derecha
00:000086D9   mueve_derecha.no_incrementa_x
00:000086DA X fin_mueve_derecha
00:000086DB   mueve_abajo
00:000086E8   mueve_abajo.no_incrementa_y
00:000086E9 X fin_mueve_abajo
00:000086EA   mueve_izquierda
00:000086F5   mueve_izquierda.no_decrementa_x
00:000086F6 X fin_mueve_izquierda
00:000086F7   mira_disparo
00:000086F7 X mira_disparo.mira_boton_pulsado1
00:00008704 X mira_disparo.no_efectua_disparo
00:0000870F   mira_disparo.efectua_disparo
00:00008721   mira_disparo.fin_mira_disparo1
00:00008722   mira_disparo.mira_boton_pulsado2
00:0000873E X fin_mira_disparo
00:0000873E   update_controllers_status
00:00008775   read_joy_0
00:00008789   check_8th_keyboard_row
00:00008797   check_4th_keyboard_row
00:000087A5 X inicializa_replayer_efectos_interrupciones
00:000087BE X fin_inicializa_replayer_efectos_interrupciones
00:000087BF   subrutina_isr
00:000087C8 X fin_subrutina_isr
00:000087C8 X subrutinas_sonido
00:00000000   CHNPRM_PsInOr
00:00000001   CHNPRM_PsInSm
00:00000002   CHNPRM_CrAmSl
00:00000003   CHNPRM_CrNsSl
00:00000004   CHNPRM_CrEnSl
00:00000005   CHNPRM_TSlCnt
00:00000006   CHNPRM_CrTnSl
00:00000008   CHNPRM_TnAcc
00:0000000A   CHNPRM_COnOff
00:0000000B   CHNPRM_OnOffD
00:0000000C   CHNPRM_OffOnD
00:0000000D   CHNPRM_OrnPtr
00:0000000F   CHNPRM_SamPtr
00:00000011   CHNPRM_NNtSkp
00:00000012   CHNPRM_Note
00:00000013   CHNPRM_SlToNt
00:00000014   CHNPRM_Env_En
00:00000015   CHNPRM_Flags
00:00000016   CHNPRM_TnSlDl
00:00000017   CHNPRM_TSlStp
00:00000019   CHNPRM_TnDelt
00:0000001B   CHNPRM_NtSkCn
00:0000001C   CHNPRM_Volume
00:0000001D X CHNPRM_Size
00:00000000   AR_TonA
00:00000002   AR_TonB
00:00000004   AR_TonC
00:00000006   AR_Noise
00:00000007   AR_Mixer
00:00000008   AR_AmplA
00:00000009   AR_AmplB
00:0000000A   AR_AmplC
00:0000000B   AR_Env
00:0000000D   AR_EnvTp
00:000087C8   CHECKLP
00:000087D9 X PT3_MUTE
00:000087E5   PT3_INIT
00:00008824   PT3_INIT.TP_0
00:00008830   PT3_INIT.TP_1
00:00008837   PT3_INIT.TP_2
00:000088A5   PT3_INIT.L1
00:000088B2   PT3_INIT.L2
00:000088B6 X PT3_INIT.L3
00:000088DD   PT3_INIT.CORR_1
00:000088EB   PT3_INIT.CORR_2
00:000088F2   PT3_INIT.TC_EXIT
00:000088FD   PT3_INIT.INITV1
00:00008905   PT3_INIT.INITV2
00:00008919   PT3_INIT.INITV3
00:0000891D   PD_OrSm
00:00008927   PD_SAM
00:00008928   PD_SAM_
00:0000893E   PD_VOL
00:00008947   PD_EOff
00:0000894F   PD_SorE
00:00008959   PD_ENV
00:0000895E   PD_ORN
00:00008963   PD_ESAM
00:00008970   PTDECOD
00:0000897F   PD_LOOP
00:00008982   PD_LP2
00:000089AF   PD_NOIS
00:000089B4   PD_REL
00:000089BA   PD_NOTE
00:000089C2   PD_RES
00:000089D4   PD_FIN
00:000089DB   C_PORTM
00:00008A26   C_PORTM.NOSIG
00:00008A30   SET_STP
00:00008A3C   C_GLISS
00:00008A4F   C_SMPOS
00:00008A55   C_ORPOS
00:00008A5B   C_VIBRT
00:00008A73   C_ENGLS
00:00008A85   C_DELAY
00:00008A8B   SETENV
00:00008AA6   C_NOP
00:00008AA7   SETORN
00:00008AC0   SPCCOMS
00:00008AE0   CHREGS
00:00008B03   CHREGS.CH_ORPS
00:00008B0E   CHREGS.CH_NTP
00:00008B14   CHREGS.CH_NOK
00:00008B2F   CHREGS.CH_SMPS
00:00008B45   CHREGS.CH_NOAC
00:00008B8C   CHREGS.CH_STPP
00:00008BA1   CHREGS.CH_AMP
00:00008BB3   CHREGS.CH_AMIN
00:00008BB8   CHREGS.CH_SVAM
00:00008BBB   CHREGS.CH_NOAM
00:00008BC4   CHREGS.CH_APOS
00:00008BCA   CHREGS.CH_VOL
00:00008BD5 X CHREGS.CH_ENV
00:00008BDC   CHREGS.CH_NOEN
00:00008BF6   CHREGS.NO_ENAC
00:00008BFD   CHREGS.NO_ENSL
00:00008C0B   CHREGS.CH_MIX
00:00008C0F   CHREGS.CH_EXIT
00:00008C2E   CHREGS.CH_ONDL
00:00008C32   PT3_PLAY
00:00008C66   PT3_PLAY.PLNLP
00:00008C8D   PT3_PLAY.PL1A
00:00008C98   PT3_PLAY.PL1B
00:00008CAD   PT3_PLAY.PL1C
00:00008CC2   PT3_PLAY.PL1D
00:00008CC8   PT3_PLAY.PL2
00:00008D2A   PT3_ROUT
00:00008D2B   ROUT_A0
00:00008D37   ROUT_A0.LOUT
00:00008D4B   NT_DATA
00:00008D5B   T_
00:00008D5B   TCOLD_0
00:00008D67   TCNEW_1
00:00008D67   TCOLD_1
00:00008D69   TCOLD_2
00:00008D7B   TCNEW_3
00:00008D7C   TCOLD_3
00:00008D85   TCNEW_0
00:00008D90   TCNEW_2
00:00008D9B   EMPTYSAMORN
00:00008D9F   T_PACK
00:00000000 X AYFXRELATIVE
00:00008DD4   ayFX_SETUP
00:00008DE0   ayFX_END
00:00008DE6   ayFX_INIT
00:00008DF7   ayFX_INIT.CHECK_PRI
00:00008E18   ayFX_INIT.INIT_END
00:00008E1C   ayFX_PLAY
00:00008E30   ayFX_PLAY.TAKECB
00:00008E41   ayFX_PLAY.CHECK_NN
00:00008E4E   ayFX_PLAY.SETPOINTER
00:00008E62   ayFX_PLAY.SETMASKS
00:00008E70 X ayFX_PLAY.CHK1
00:00008E72 X ayFX_PLAY.PLAY_C
00:00008E7F   ayFX_PLAY.CHK2
00:00008E84 X ayFX_PLAY.PLAY_B
00:00008E91   ayFX_PLAY.CHK3
00:00008E94 X ayFX_PLAY.PLAY_A
00:00008EA1   ayFX_PLAY.SETMIXER
00:00008EB1   song
00:00009819   sfx_bank
00:00009864   inicializa_ayudas
00:000098CB X fin_resetea_ayudas
00:000098CC   carga_datos_ayuda
00:000098D1 X fin_carga_datos_ayuda
00:000098D2   pinta_obj_ayuda
00:000098D6 X pinta_obj_ayuda.dibujoon
00:000098E2   pinta_obj_ayuda.dibujooff
00:000098EB   pinta_obj_ayuda.param_wordaux2
00:000098F7 X pinta_obj_ayuda.filasycols
00:00009902 X fin_pinta_obj_ayuda
00:00009902   pinta_ayudas_habitacion
00:00009902 X pinta_ayudas_habitacion.examina_oracion
00:00009913   pinta_ayudas_habitacion.examina_cruz
00:00009924   pinta_ayudas_habitacion.examina_aguabendita
00:00009935   pinta_ayudas_habitacion.examina_armadura
00:00009946   pinta_ayudas_habitacion.examina_planta
00:00009957   pinta_ayudas_habitacion.examina_vidaextra
00:00009968   pinta_ayudas_habitacion.examina_ballesta
00:00009977 X fin_pinta_ayudas_habitacion
00:00009978   accion_oracion
00:00009978 X fin_accion_oracion
00:00009979   accion_cruz
00:00009979 X fin_accion_cruz
00:0000997A   accion_agua
00:0000997A X fin_accion_agua
00:0000997B   accion_armadura
00:0000997B X fin_accion_armadura
00:0000997C   accion_planta
00:0000997C X fin_accion_planta
00:0000997D   accion_vidaextra
00:0000997D X fin_accion_vidaextra
00:0000997E X accion_ballesta
00:0000997E X fin_accion_ballesta
00:0000997F   depack_VRAM
00:000099AC   literal
00:000099B1   loop
00:000099BA X getlen
00:000099C0   lus
00:000099DD   lenok
00:000099EA   mode7
00:000099F0   mode6
00:000099F6   mode5
00:000099FC   mode4
00:00009A02   mode3
00:00009A08   mode2
00:00009A18   offsok
00:00009A23   offsok.loop
00:00009A45   getbit
00:00009A49   getbitexx
00:00009A4F   Depack_out
00:00009A51   modes
00:00000000 X ESTRUCTURA_PUNTOMIRA.posx
00:00000001 X ESTRUCTURA_PUNTOMIRA.posy
00:00000002 X ESTRUCTURA_PUNTOMIRA.escena
00:00000003 X ESTRUCTURA_PUNTOMIRA.velocidad
00:00000004 X ESTRUCTURA_PUNTOMIRA.boton2_pressed
00:00000005 X ESTRUCTURA_PUNTOMIRA.cadencia
00:00000006 X ESTRUCTURA_PUNTOMIRA.pm_aux1
00:00000007 X ESTRUCTURA_PUNTOMIRA.pm_aux2
00:00000008 X ESTRUCTURA_PUNTOMIRA.pm_aux3
00:00000009 X ESTRUCTURA_PUNTOMIRA.pm_aux4
00:0000000A X ESTRUCTURA_PUNTOMIRA.pm_aux5
00:0000000B X ESTRUCTURA_PUNTOMIRA.pm_aux6
00:0000000C X ESTRUCTURA_PUNTOMIRA.pm_aux7
00:0000000D X ESTRUCTURA_PUNTOMIRA.pm_aux8
00:0000000E X ESTRUCTURA_PUNTOMIRA.pm_aux9
00:0000000F X ESTRUCTURA_PUNTOMIRA.pm_aux10
00:00000010 X ESTRUCTURA_PUNTOMIRA
00:00000000 X ESTRUCTURA_ENEMIGO.tipo
00:00000001 X ESTRUCTURA_ENEMIGO.posx
00:00000002 X ESTRUCTURA_ENEMIGO.posy
00:00000003 X ESTRUCTURA_ENEMIGO.color
00:00000004 X ESTRUCTURA_ENEMIGO.escena
00:00000005 X ESTRUCTURA_ENEMIGO.contador_siguiente_escena
00:00000006 X ESTRUCTURA_ENEMIGO.reset_contador
00:00000007 X ESTRUCTURA_ENEMIGO.dano
00:00000008 X ESTRUCTURA_ENEMIGO.energia
00:00000009 X ESTRUCTURA_ENEMIGO.ver_hor
00:0000000A X ESTRUCTURA_ENEMIGO.manejador_dibujo
00:0000000C X ESTRUCTURA_ENEMIGO.en_aux3
00:0000000D X ESTRUCTURA_ENEMIGO.en_aux4
00:0000000E   ESTRUCTURA_ENEMIGO
00:00000000 X ESTRUCTURA_AYUDA.activo
00:00000001 X ESTRUCTURA_AYUDA.postilemem_nousado
00:00000003 X ESTRUCTURA_AYUDA.postilemem_usado
00:00000005 X ESTRUCTURA_AYUDA.pospantalla
00:00000006 X ESTRUCTURA_AYUDA.posx
00:00000007 X ESTRUCTURA_AYUDA.posy
00:00000008 X ESTRUCTURA_AYUDA.puntero_accion
00:0000000A X ESTRUCTURA_AYUDA.ayu_aux1
00:0000000B X ESTRUCTURA_AYUDA.ayu_aux2
00:0000000C X ESTRUCTURA_AYUDA.ayu_aux3
00:0000000D X ESTRUCTURA_AYUDA.ayu_aux4
00:0000000E X ESTRUCTURA_AYUDA.ayu_aux5
00:0000000F X ESTRUCTURA_AYUDA.ayu_aux6
00:00000010   ESTRUCTURA_AYUDA
00:00000000 X ESTRUCTURA_ANTORCHA.activo
00:00000001 X ESTRUCTURA_ANTORCHA.postilemem_antor1
00:00000003 X ESTRUCTURA_ANTORCHA.pospantalla_antor1
00:00000004 X ESTRUCTURA_ANTORCHA.pospantalla_antor2
00:00000005 X ESTRUCTURA_ANTORCHA.escena
00:00000006 X ESTRUCTURA_ANTORCHA.cont_sig_escena
00:00000007   ESTRUCTURA_ANTORCHA
00:00000000 X ESTRUCTURA_ESQUELETO.activo
00:00000001 X ESTRUCTURA_ESQUELETO.postilemem_antor1
00:00000003 X ESTRUCTURA_ESQUELETO.pospantalla_esquel1
00:00000004 X ESTRUCTURA_ESQUELETO.pospantalla_esquel2
00:00000005   ESTRUCTURA_ESQUELETO.escena
00:00000006   ESTRUCTURA_ESQUELETO.cont_sig_escena
00:00000007   ESTRUCTURA_ESQUELETO
00:00009A5F X sprites_pantantalla
00:00009A5F   sprites_comunes
00:00009A5F X sprite_punto_mira_1
00:00009A7F X sprite_punto_mira_2
00:00009A9F X sprite_punto_mira_1_mejorado
00:00009ABF X sprite_punto_mira_2_mejorado
00:00009ADF X sprite_explosion_1
00:00009AFF X sprite_explosion_2
00:00009B1F   fin_sprites_comunes
00:00009B1F X sprite_arana1_1
00:00009B3F X sprite_arana1_2
00:00009B5F X sprite_murcielago1_1
00:00009B7F X sprite_murcielago1_2
00:00009B9F X sprite_serpiente1_1
00:00009BBF X sprite_serpiente1_2
00:00009BDF X sprite_serpiente2_1
00:00009BFF X sprite_serpiente2_2
00:00009C1F X sprite_zombi1_1_1
00:00009C3F X sprite_zombi1_2_1
00:00009C5F X sprite_zombi1_3_1
00:00009C7F X sprite_zombi1_4_1
00:00009C9F X sprite_zombi1_1_2
00:00009CBF X sprite_zombi1_2_2
00:00009CDF X sprite_zombi1_3_2
00:00009CFF X sprite_zombi1_4_2
00:00009D1F X sprite_zombi2_1_1
00:00009D3F X sprite_zombi2_2_1
00:00009D5F X sprite_zombi2_3_1
00:00009D7F X sprite_zombi2_4_1
00:00009D9F X sprite_zombi2_1_2
00:00009DBF X sprite_zombi2_2_2
00:00009DDF X sprite_zombi2_3_2
00:00009DFF X sprite_zombi2_4_2
00:00009E1F X sprite_caballero1_1_1
00:00009E3F X sprite_caballero1_2_1
00:00009E5F X sprite_caballero1_3_1
00:00009E7F X sprite_caballero1_4_1
00:00009E9F X sprite_caballero1_1_2
00:00009EBF X sprite_caballero1_2_2
00:00009EDF X sprite_caballero1_3_2
00:00009EFF X sprite_caballero1_4_2
00:00009F1F X sprite_caballero2_1_1
00:00009F3F X sprite_caballero2_2_1
00:00009F5F X sprite_caballero2_3_1
00:00009F7F X sprite_caballero2_4_1
00:00009F9F X sprite_caballero2_1_2
00:00009FBF X sprite_caballero2_2_2
00:00009FDF X sprite_caballero2_3_2
00:00009FFF X sprite_caballero2_4_2
00:0000A01F X sprite_llama1_1
00:0000A03F X sprite_llama2_1
00:0000A05F X sprite_llama1_2
00:0000A07F X sprite_llama2_2
00:0000A09F X sprite_fantasma1_1
00:0000A0BF X sprite_fantasma2_1
00:0000A0DF X sprite_fantasma1_2
00:0000A0FF X sprite_fantasma2_2
00:0000A11F X sprite_magia1_1
00:0000A13F X sprite_magia2_1
00:0000A15F X sprite_magia1_2
00:0000A17F X sprite_magia2_2
00:0000A19F X sprite_beholder1_1
00:0000A1BF X sprite_beholder2_1
00:0000A1DF X sprite_beholder3_1
00:0000A1FF X sprite_beholder4_1
00:0000A21F X sprite_beholder1_2
00:0000A23F X sprite_beholder2_2
00:0000A25F X sprite_beholder3_2
00:0000A27F X sprite_beholder4_2
00:0000A29F X sprite_vampiro1_1
00:0000A2BF X sprite_vampiro2_1
00:0000A2DF X sprite_vampiro1_2
00:0000A2FF X sprite_vampiro2_2
00:0000A31F X sprite_manoizq1
00:0000A33F X sprite_manoizq2
00:0000A35F X sprite_manoizq3
00:0000A37F X sprite_manoder1
00:0000A39F X sprite_manoder2
00:0000A3BF X sprite_manoder3
00:0000A3DF   habitacion_actual
00:0000A3E0   habitacion_extras
00:0000A3E1   habitacion_recorrida
00:0000A3E2   habitaciones_juego
00:0000A3E2 X habitaciones_nivel0
00:0000A452 X habitaciones_nivel1
00:0000A4C2 X habitaciones_nivel2
00:0000A532 X habitaciones_nivel3
00:0000A5A2 X habitaciones_nivel4
00:0000A612 X habitaciones_nivel5
00:0000A682 X habitaciones_nivel6
00:0000A6F2   color_base
00:0000A6F5   color_bomba1
00:0000A6F8   color_bomba2
00:0000A6FB X prota
00:0000A6FB   prota.posx
00:0000A6FC   prota.posy
00:0000A6FD   prota.escena
00:0000A6FE X prota.velocidad
00:0000A6FF X prota.boton2_pressed
00:0000A700   prota.cadencia
00:0000A701 X prota.pm_aux1
00:0000A702 X prota.pm_aux2
00:0000A703 X prota.pm_aux3
00:0000A704 X prota.pm_aux4
00:0000A705 X prota.pm_aux5
00:0000A706 X prota.pm_aux6
00:0000A707 X prota.pm_aux7
00:0000A708 X prota.pm_aux8
00:0000A709 X prota.pm_aux9
00:0000A70A X prota.pm_aux10
00:0000A70B   prota_nivel
00:0000A70C   prota_vidas
00:0000A70D   prota_reliquias
00:0000A70E   prota_pos_mapx
00:0000A70F   prota_pos_mapy
00:0000A710   prota_energia
00:0000A711   array_aux_vidas
00:0000A719   array_aux_reliquias
00:0000A721   array_aux_energia
00:0000A728   ultimo_pos_array_aux_energia
00:0000A729   array_aux_mapa_limpiar
00:0000A730   elemento_pintar_mapa
00:0000A731   array_puerta_arriba
00:0000A731 X array_puerta_arriba1
00:0000A735 X array_puerta_arriba2
00:0000A739 X array_puerta_arriba3
00:0000A73D X array_puerta_arriba4
00:0000A741 X array_puerta_arriba5
00:0000A745   array_puerta_derecha
00:0000A745 X array_puerta_derecha1
00:0000A748 X array_puerta_derecha2
00:0000A74B X array_puerta_derecha3
00:0000A74E X array_puerta_derecha4
00:0000A751 X array_puerta_derecha5
00:0000A754 X array_puerta_derecha6
00:0000A757 X array_puerta_derecha7
00:0000A75A   array_puerta_abajo
00:0000A75E   array_puerta_izquierda
00:0000A75E X array_puerta_izquierda1
00:0000A761 X array_puerta_izquierda2
00:0000A764 X array_puerta_izquierda3
00:0000A767 X array_puerta_izquierda4
00:0000A76A X array_puerta_izquierda5
00:0000A76D X array_puerta_izquierda6
00:0000A770 X array_puerta_izquierda7
00:0000A773 X lista_ayudas
00:0000A773   ayuda_oracion
00:0000A783   ayuda_cruz
00:0000A793   ayuda_aguabendita
00:0000A7A3   ayuda_armadura
00:0000A7B3   ayuda_planta
00:0000A7C3   ayuda_vidaextra
00:0000A7D3   ayuda_ballesta
00:0000A7E3 X datos_oracion
00:0000A7ED   datos_cruz
00:0000A7F7   datos_aguabendita
00:0000A808   datos_armadura
00:0000A819   datos_planta
00:0000A82A   datos_vidaextra
00:0000A83B   datos_ballesta
00:0000A84C X array_ayudas
00:0000A84C   array_oracionon
00:0000A84E X array_oracionon1
00:0000A850   array_oracionoff
00:0000A852 X array_oracionoff1
00:0000A854   array_cruzon
00:0000A856 X array_cruzon1
00:0000A858   array_cruzoff
00:0000A85A X array_cruzoff1
00:0000A85C   array_aguaon
00:0000A85E X array_aguaon1
00:0000A860   array_aguaoff
00:0000A862 X array_aguaoff1
00:0000A864   array_armaduraon
00:0000A866 X array_armaduraon1
00:0000A868   array_armaduraoff
00:0000A86A X array_armaduraoff1
00:0000A86C   array_plantaon
00:0000A86E X array_plantaon1
00:0000A870   array_plantaoff
00:0000A872 X array_plantaoff1
00:0000A874   array_extraon
00:0000A876 X array_extraon1
00:0000A878   array_extraoff
00:0000A87A X array_extraoff1
00:0000A87C   array_ballestaon
00:0000A87E X array_ballestaon1
00:0000A880   array_ballestaoff
00:0000A882 X array_ballestaoff1
00:0000A884   antorchas
00:0000A88B   array_antorcha
00:0000A88E   esqueletos
00:0000A895   array_esqueleto
00:0000A8A1   lista_escenas_calavera
00:0000A8A5   array_sprites
00:0000A8A5   array_sprites_pm
00:0000A8AD X array_sprites_enem
00:0000A925 X lista_enemigos
00:0000A9B1 X puntero_array_atrib_array_VRAM
00:0000A9B3   tiles_patrones_nivel0
00:0000ABD0   tiles_color_nivel0
00:0000AC39   tiles_mapa_nivel0
00:0000AC6E   tiles_patrones_nivel1
00:0000AE23   tiles_color_nivel1
00:0000AE6A   tiles_mapa_nivel1
00:0000AE9F   tiles_patrones_nivel2
00:0000B054   tiles_color_nivel2
00:0000B09B   tiles_mapa_nivel2
00:0000B0D0   tiles_patrones_nivel3
00:0000B285   tiles_color_nivel3
00:0000B2CC   tiles_mapa_nivel3
00:0000B301   tiles_patrones_nivel4
00:0000B4B6   tiles_color_nivel4
00:0000B4FD   tiles_mapa_nivel4
00:0000B532   tiles_patrones_nivel5
00:0000B6E7   tiles_color_nivel5
00:0000B72E   tiles_mapa_nivel5
00:0000B763   tiles_patrones_nivel6
00:0000B918   tiles_color_nivel6
00:0000B95F   tiles_mapa_nivel6
00:0000B994   tiles_patrones_marcador
00:0000BAE0   tiles_color_marcador
00:0000BB15   tiles_mapa_marcador
00:0000BB77   END


 Output: t4.out
-------------------------------------------------

 Page: 00
  Org: 00008000  Size: *  Used: 00000000

    No output

 Output: t4.bin
-------------------------------------------------

 Page: 00
  Org: 00008000  Size: *  Used: 00003B7E

   Address   Length Align   Label
   00008000   15230         START
