Sjasm Z80 Assembler v0.42c - www.xl2s.tk             [2021.11.17 - 20:51:18]

t4.asm
Errors: 0

       1   00:0000                      	OUTPUT	"t4.bin"
       2   00:8000                      	
       3   00:8000                      ;;=====================================================
       4   00:8000                      ;;DEFINICIÓN DE CONSTANTES
       5   00:8000                      ;;=====================================================	
       6   00:8000                      	include "constantes.asm"
       1.  00:8000                      ;;=====================================================
       2.  00:8000                      ;; FICHERO constantes.asm
       3.  00:8000                      ;;=====================================================
       4.  00:8000                      
       5.  00:8000                      ;;ETIQUETAS/CONSTANTES BIOS TECLADO
       6.  00:8000  (00:00D8)           GTTRIG		equ		#00D8	;Returns current trigger status
       7.  00:8000  (00:00D5)           GTSTCK		equ		#00D5	;Returns the joystick/cursors status
       8.  00:8000  (00:F3DB)           CLIKSW		equ		#F3DB	;deshabilita el sonido de clic cuando se pulsa una tecla
       9.  00:8000                      
      10.  00:8000                      ;;ETIQUETAS/CONSTANTES BIOS VDP
      11.  00:8000  (00:013E)           RDVDP		equ		#013E	;lee registro status VDP
      12.  00:8000  (00:0047)           WRTVDP		equ		#0047	;escribe registros del VDP
      13.  00:8000  (00:005C)           LDIRVM		equ		#005C	;RAM/ROM -> VRAM
      14.  00:8000  (00:0059)           LDIRMV		equ		#0059	;VRAM -> RAM
      15.  00:8000  (00:005F)           CHGMOD		equ		#005F	;cambia modo pantalla (screen mode)
      16.  00:8000  (00:0041)           DISSCR  	equ		#0041	;desactiva pantanlla
      17.  00:8000  (00:0044)           ENASCR  	equ		#0044	;activa pantalla
      18.  00:8000  (00:0062)           CHGCLR  	equ		#0062	;cambia color de pantalla (toca A y direcciones)
      19.  00:8000  (00:F3E9)           FORCLR		equ		#F3E9	;zona memoria color foreground
      20.  00:8000  (00:F3EA)           BAKCLR  	equ		#F3EA	;zona memoria color background
      21.  00:8000  (00:F3EB)           BDRCLR 		equ		#F3EB	;zona memoria bordercolor
      22.  00:8000  (00:00C3)           CLS			equ		#00C3	;limpia pantalla (necesita A=0)
      23.  00:8000                      
      24.  00:8000                      ;;ETIQUETAS/CONSTANTES REGISTROS VDP
      25.  00:8000  (00:F3DF)           RG0SAV		equ		#F3DF	;Mirror of VDP register 0 (Basic: VDP(0))
      26.  00:8000  (00:F3E0)           RG1SAV		equ		#F3E0	;Mirror of VDP register 1 (Basic: VDP(1))
      27.  00:8000  (00:F3E1)           RG2SAV		equ		#F3E1	;Mirror of VDP register 2 (Basic: VDP(2))
      28.  00:8000  (00:F3E2)           RG3SAV		equ		#F3E2	;Mirror of VDP register 3 (Basic: VDP(3))
      29.  00:8000  (00:F3E3)           RG4SAV		equ		#F3E3	;Mirror of VDP register 4 (Basic: VDP(4))
      30.  00:8000  (00:F3E4)           RG5SAV		equ		#F3E4	;Mirror of VDP register 5 (Basic: VDP(5))
      31.  00:8000  (00:F3E5)           RG6SAV		equ		#F3E5	;Mirror of VDP register 6 (Basic: VDP(6))
      32.  00:8000  (00:F3E6)           RG7SAV		equ		#F3E6	;Mirror of VDP register 7 (Basic: VDP(7))
      33.  00:8000  (00:F3E7)           STATFL		equ		#F3E7	;Mirror of VDP(8) status register (S#0)
      34.  00:8000                      
      35.  00:8000  (00:0099)           REGEST		equ		#0099	;registro de estado para escribir directamente en VRAM
      36.  00:8000  (00:0098)           REGESCVDP	equ		#0098	;registro donde escribir valor para VRAM
      37.  00:8000                      
      38.  00:8000                      ;;ETIQUETAS/CONSTANTES REGISTROS PSG (PARA JOYSTICK)
      39.  00:8000  (00:00A0)           PSG_A  equ  0a0h  ;reg address
      40.  00:8000  (00:00A1)           PSG_W  equ  0a1h  ;reg data WR
      41.  00:8000  (00:00A2)           PSG_R  equ  0a2h  ;reg data
      42.  00:8000                      
      43.  00:8000                      
      44.  00:8000                      ;;ETIQUETAS DE ZONAS DE MEMORIA DE LA VPD (MSX1)
      45.  00:8000  (00:0000)           CHRTBL		equ		#0000
      46.  00:8000  (00:1800)           TILMAP		equ		#1800
      47.  00:8000  (00:1B00)           SPRART		equ		#1B00
      48.  00:8000  (00:2000)           CLRTBL		equ		#2000
      49.  00:8000  (00:3800)           SPRTBL		equ		#3800
      50.  00:8000                      
      51.  00:8000                      
      52.  00:8000                      ;;ETIQUETAS ESTANDAR PARA DAR MÁS CLARIDAD AL CODIGO
      53.  00:8000  (00:0001)           SI			equ		1
      54.  00:8000  (00:0000)           NO			equ		0
      55.  00:8000  (00:0004)           LIMCADENCIA equ		4	;nº de veces que se ejecutará el disparo antes de ejecutar un disparo real (porque cuando se pulsa la tecl dispara 3 ó 4 veces de rápido que va)
      56.  00:8000                      ;hay que estudiar si 3 es un nº mejor
      57.  00:8000                      
      58.  00:8000                      
      59.  00:8000                      ;;PALETA DE COLORES DEL MSX
      60.  00:8000  (00:0000)           COLTRASP	equ		0
      61.  00:8000  (00:0001)           COLNEGRO	equ		1
      62.  00:8000  (00:0002)           COLVERDE	equ		2
      63.  00:8000  (00:0003)           COLVERCLA	equ		3
      64.  00:8000  (00:0004)           COLAZULOSC	equ		4
      65.  00:8000  (00:0005)           COLAZULLA	equ		5
      66.  00:8000  (00:0006)           COLROJOOSC	equ		6
      67.  00:8000  (00:0007)           COLCYAN		equ		7
      68.  00:8000  (00:0008)           COLROJO		equ		8
      69.  00:8000  (00:0009)           COLROJOCLA	equ		9
      70.  00:8000  (00:000A)           COLAMAROSC	equ		10
      71.  00:8000  (00:000B)           COLAMARCLA	equ		11
      72.  00:8000  (00:000C)           COLVERDOSC	equ		12
      73.  00:8000  (00:000D)           COLMAGENTA	equ		13
      74.  00:8000  (00:000E)           COLGRIS		equ		14
      75.  00:8000  (00:000F)           COLBLANCO	equ		15
      76.  00:8000                      
      77.  00:8000                      
      78.  00:8000                      ;;ETIQUETAS ESPECIFICAS PARA DAR MÁS CLARIDAD AL CODIGO (relacionadas con posiciones en mapa vdp)
      79.  00:8000  (00:02F8)           POSMAPLIN1  equ		#02F8
      80.  00:8000  (00:02D8)           POSMAPLIN2  equ		#02D8
      81.  00:8000  (00:02B8)           POSMAPLIN3  equ		#02B8
      82.  00:8000  (00:0298)           POSMAPLIN4  equ		#0298
      83.  00:8000  (00:0278)           POSMAPLIN5  equ		#0278
      84.  00:8000  (00:0258)           POSMAPLIN6  equ		#0258
      85.  00:8000  (00:0238)           POSMAPLIN7  equ		#0238
      86.  00:8000                      
      87.  00:8000  (00:000D)           POSCARAMAP	equ		#000D
      88.  00:8000  (00:0248)           POSVIDAS	equ		#0248
      89.  00:8000  (00:0011)           POSRELIMAP	equ		#0011
      90.  00:8000  (00:02C8)           POSRELIQ	equ		#02C8
      91.  00:8000  (00:0288)           POSENERG	equ		#0288
      92.  00:8000  (00:02B4)           POSNIVEL	equ		#02B4
      93.  00:8000  (00:0238)           POSMAPA		equ 	#0238
      94.  00:8000                      
      95.  00:8000  (00:01EE)           POSPUERABAJ equ		#01EE
      96.  00:8000  (00:008E)           POSPUERARRI equ		#008E
      97.  00:8000  (00:00FC)           POSPUERDERE equ		#00FC
      98.  00:8000  (00:00E1)           POSPUERIZQU equ		#00E1
      99.  00:8000  (00:006C)           POSESCALERA equ		#006C	;32 x 3 + columna
     100.  00:8000                      
     101.  00:8000                      ;;POSICIONES DE LAS AYUDAS EN PANTALLA BANCO 1
     102.  00:8000  (00:0146)           POSORACION	equ		#0146	;256 + 70
     103.  00:8000  (00:00A7)           POSCRUZ		equ		167
     104.  00:8000  (00:00AB)           POSAGUA		equ		171
     105.  00:8000  (00:00AF)           POSARMAD	equ		175
     106.  00:8000  (00:00B3)           POSPLANTA	equ		179
     107.  00:8000  (00:00B7)           POSVIDAEXT	equ		183
     108.  00:8000  (00:00BB)           POSBALLESTA	equ		187
     109.  00:8000                      
     110.  00:8000                      ;;POSICIONES DE LAS AYUDAS EN PANTALLA PIXEL CENTRAL X
     111.  00:8000  (00:0020)           POSORACIONX	equ		32
     112.  00:8000  (00:0040)           POSCRUZX	equ		64
     113.  00:8000  (00:0060)           POSAGUAX	equ		96
     114.  00:8000  (00:0080)           POSARMADX	equ		128
     115.  00:8000  (00:00A0)           POSPLANTAX	equ		160
     116.  00:8000  (00:00C0)           POSVIDAEXTX	equ		192
     117.  00:8000  (00:00E0)           POSBALLESTAX equ	224
     118.  00:8000                      
     119.  00:8000                      ;; TAMAÑO AYUDAS
     120.  00:8000  (00:0002)           ALTOAYUDA	equ		#02
     121.  00:8000  (00:0002)           ANCHOAYUDA	equ		#02
     122.  00:8000                      
     123.  00:8000                      ;; RADIOS DE DISPARO
     124.  00:8000  (00:0008)           RADIOAYUDAX equ		#08
     125.  00:8000  (00:0008)           RADIOAYUDAY equ		#08
     126.  00:8000                      
     127.  00:8000                      ;;POSICIONES DE LAS AYUDAS EN PANTALLA PIXEL CENTRAL Y
     128.  00:8000  (00:0020)           POSORACIONY	equ		32
     129.  00:8000  (00:0070)           POSAYUDASY	equ		112	;se pone por poner porque las estructuras de ayudas ya se inicializan con este valor
     130.  00:8000                      
     131.  00:8000                      ;;POSICIÓN INICIAL DEL SPRITE DEL PUNTO DE MIRA
     132.  00:8000  (00:0078)           POSXPM		equ		120
     133.  00:8000  (00:006C)           POSYPM		equ		108
     134.  00:8000                      
     135.  00:8000                      ;;ESTADO ESTRUCTURA
     136.  00:8000  (00:0000)           INACTIVA	equ		0
     137.  00:8000  (00:0001)           ACTIVA		equ		1
     138.  00:8000  (00:0001)           HABTERMIN	equ		1
     139.  00:8000                      
     140.  00:8000                      ;;POSICIONES DE LAS ANTORCHAS
     141.  00:8000  (00:0088)           POSANTOR1	equ		136
     142.  00:8000  (00:0097)           POSANTOR2	equ		151
     143.  00:8000  (00:00C4)           MAPLLAMA1	equ		196
     144.  00:8000  (00:00C5)           MAPLLAMA2	equ		197
     145.  00:8000  (00:00FF)           RESETLLAMA	equ		255
     146.  00:8000                      
     147.  00:8000                      ;;POSICIONES DE LOS ESQUELETOS
     148.  00:8000  (00:0088)           POSESQUEL1	equ		136
     149.  00:8000  (00:0095)           POSESQUEL2	equ		149
     150.  00:8000  (00:00A9)           POSCALAVE1	equ		169
     151.  00:8000  (00:00B6)           POSCALAVE2	equ		182
     152.  00:8000  (00:0019)           RESETESQUEL	equ		25
     153.  00:8000  (00:0004)           RESETESCENAESQUEL 	equ	4	;hay 4 caras con las que el esqueleto cambia (se ha metido el 0 para facilitar código)
     154.  00:8000                      
     155.  00:8000                      ;;ETIQUETAS ESPECIFICAS PARA DAR MÁS CLARIDAD AL CODIGO (relacionadas con posiciones en en el banco de memoria)
     156.  00:8000  (00:0013)           TILEPROTAM  equ		19		;tile del prota para pintar en mapa
     157.  00:8000  (00:0009)           TILEGRISM	equ		9		;tile gris que representa vacio (por donde el prota va pasando)
     158.  00:8000  (00:0010)           TILEMAPROJO equ		16
     159.  00:8000  (00:000F)           TILEMAPAMAR equ		15
     160.  00:8000  (00:000E)           TILEMAPVERD equ		14
     161.  00:8000                      
     162.  00:8000                      
     163.  00:8000                      ;;ETIQUETAS ESPECIFICAS PARA DAR MÁS CLARIDAD AL CODIGO (generales)
     164.  00:8000  (00:0008)           NMAXVIDREL	equ		8		;el número máximo de vidas y de reliquias es de 8
     165.  00:8000  (00:0007)           NHABNIVEL	equ		7
     166.  00:8000  (00:00F8)           MAXENERGIA  equ		248
     167.  00:8000  (00:00D9)           TILEENERG8  equ		217
     168.  00:8000  (00:00BA)           TILEENERG7  equ		186
     169.  00:8000  (00:009B)           TILEENERG6  equ		155
     170.  00:8000  (00:007C)           TILEENERG5  equ		124
     171.  00:8000  (00:005D)           TILEENERG4  equ		93
     172.  00:8000  (00:003E)           TILEENERG3  equ		62
     173.  00:8000  (00:001F)           TILEENERG2  equ		31
     174.  00:8000  (00:0000)           TILENEGRO	equ		0
     175.  00:8000                      
     176.  00:8000                      ;limites
     177.  00:8000  (00:0000)           LIMPANTIZQ  equ		0
     178.  00:8000  (00:00FF)           LIMPANTDER  equ		255
     179.  00:8000  (00:0000)           LIMPANTARR  equ		0
     180.  00:8000  (00:0080)           LIMPANTABA  equ		128
     181.  00:8000                      
     182.  00:8000                      
     183.  00:8000                      ;matriz de 7x7 empieza en 0, y fila y x col, cuento desde esquina sup izq
     184.  00:8000  (00:0006)           BASEMAPY	equ		6
     185.  00:8000  (00:0003)           BASEMAPX	equ		3
     186.  00:8000                      
     187.  00:8000                      
     188.  00:8000                      
     189.  00:8000                      ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
     190.  00:8000                      ;; CONSTANTES PARA INTERRUPCIONES
     191.  00:8000                      ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
     192.  00:8000  (00:FD9A)           H.KEYI		equ     	#FD9A
     193.  00:8000  (00:FD9F)           H.TIMI	 	equ     	#FD9F
     194.  00:8000                      
     195.  00:8000                      
     196.  00:8000                      ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
     197.  00:8000                      ;; CONSTANTES PARA SONIDO 
     198.  00:8000                      ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
     199.  00:8000                      
     200.  00:8000  (F000)              	map		#f000
     201.  00:8000                      
     202.  00:8000                      ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;PT3 REPLAYER
     203.  00:8000  (00:F000)           PT3_SETUP:		#1	;set bit0 to 1, if you want to play without looping
     204.  00:8000                      					;bit7 is set each time, when loop point is passed
     205.  00:8000  (00:F001)           PT3_MODADDR:	#2
     206.  00:8000  (00:F003)           PT3_CrPsPtr:	#2
     207.  00:8000  (00:F005)           PT3_SAMPTRS:	#2
     208.  00:8000  (00:F007)           PT3_OrnPtrs:	#2
     209.  00:8000  (00:F009)           PT3_PDSP:		#2
     210.  00:8000  (00:F00B)           PT3_CSP:		#2
     211.  00:8000  (00:F00D)           PT3_PSP:		#2
     212.  00:8000  (00:F00F)           PT3_PrNote:		#1
     213.  00:8000  (00:F010)           PT3_PrSlide:	#2
     214.  00:8000  (00:F012)           PT3_AdInPtA:	#2
     215.  00:8000  (00:F014)           PT3_AdInPtB:	#2
     216.  00:8000  (00:F016)           PT3_AdInPtC:	#2
     217.  00:8000  (00:F018)           PT3_LPosPtr:	#2
     218.  00:8000  (00:F01A)           PT3_PatsPtr:	#2
     219.  00:8000  (00:F01C)           PT3_Delay:		#1
     220.  00:8000  (00:F01D)           PT3_AddToEn:	#1
     221.  00:8000  (00:F01E)           PT3_Env_Del:	#1
     222.  00:8000  (00:F01F)           PT3_ESldAdd:	#2
     223.  00:8000  (00:F021)           PT3_NTL3:		#2	; AND A / NOP (note table creator)
     224.  00:8000                      
     225.  00:8000  (00:F023)           VARS:			#0
     226.  00:8000                      
     227.  00:8000  (00:F023)           ChanA:			#29			;CHNPRM_Size
     228.  00:8000  (00:F040)           ChanB:			#29			;CHNPRM_Size
     229.  00:8000  (00:F05D)           ChanC:			#29			;CHNPRM_Size
     230.  00:8000                      
     231.  00:8000                      ;GlobalVars
     232.  00:8000  (00:F07A)           DelyCnt:		#1
     233.  00:8000  (00:F07B)           CurESld:		#2
     234.  00:8000  (00:F07D)           CurEDel:		#1
     235.  00:8000  (00:F07E)           Ns_Base_AddToNs:	#0
     236.  00:8000  (00:F07E)           Ns_Base:		#1
     237.  00:8000  (00:F07F)           AddToNs:		#1
     238.  00:8000                      
     239.  00:8000  (00:F080)           NT_:			#192	; Puntero a/tabla de frecuencias
     240.  00:8000                      
     241.  00:8000  (00:F140)           AYREGS:			#0
     242.  00:8000  (00:F140)           VT_:			#14
     243.  00:8000  (00:F14E)           EnvBase:		#2
     244.  00:8000  (00:F150)           VAR0END:		#0
     245.  00:8000                      
     246.  00:8000  (00:F150)           T1_:			#0		
     247.  00:8000  (00:F150)           T_NEW_1:		#0
     248.  00:8000  (00:F150)           T_OLD_1:		#24
     249.  00:8000  (00:F168)           T_OLD_2:		#24
     250.  00:8000  (00:F180)           T_NEW_3:		#0
     251.  00:8000  (00:F180)           T_OLD_3:		#2
     252.  00:8000  (00:F182)           T_OLD_0:		#0
     253.  00:8000  (00:F182)           T_NEW_0:		#24
     254.  00:8000  (00:F19A)           T_NEW_2:		#166
     255.  00:8000                      ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;PT3 REPLAYER END
     256.  00:8000                      
     257.  00:8000                      ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ayFX REPLAYER 
     258.  00:8000  (00:F240)           ayFX_MODE:		#1			; ayFX mode
     259.  00:8000  (00:F241)           ayFX_BANK:		#2			; Current ayFX Bank
     260.  00:8000  (00:F243)           ayFX_PRIORITY:	#1			; Current ayFX stream priotity
     261.  00:8000  (00:F244)           ayFX_POINTER:	#2			; Pointer to the current ayFX stream
     262.  00:8000  (00:F246)           ayFX_TONE:		#2			; Current tone of the ayFX stream
     263.  00:8000  (00:F248)           ayFX_NOISE:		#1			; Current noise of the ayFX stream
     264.  00:8000  (00:F249)           ayFX_VOLUME:	#1			; Current volume of the ayFX stream
     265.  00:8000  (00:F24A)           ayFX_CHANNEL:	#1			; PSG channel to play the ayFX stream
     266.  00:8000                      
     267.  00:8000                      	;IF (AYFXRELATIVE == 1 ) 
     268.  00:8000                      ;ayFX_VT:	ds	2			; ayFX relative volume table pointer
     269.  00:8000                      	;ENDIF
     270.  00:8000                      ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ayFX REPLAYER END
     271.  00:8000                      
     272.  00:8000                      
     273.  00:8000                      
     274.  00:8000                      
       7   00:8000                      
       8   00:8000                      ;;=====================================================
       9   00:8000                      ;;DEFINICIÓN DE CABECERA DE ARCHIVO BIN
      10   00:8000                      ;;=====================================================		
      11   00:8000                      	include "cabecerabin.asm"
       1.  00:8000                      ;;=====================================================
       2.  00:8000                      ;; FICHERO cabecera.asm
       3.  00:8000                      ;;=====================================================
       4.  00:8000                      
       5.  00:8000                      ;;CABECERA FICHERO BIN
       6.  00:8000  FE                  	DB	#FE
       7.  00:8001  00 80               	DW	START
       8.  00:8003  DE BC               	DW	END
       9.  00:8005  00 80               	DW	START
      10.  00:8007                      
      11.  00:8007                      ;;INICIO CÓDIGO PROGRAMA	
      12.  00:8007                      	ORG	#8000
      13.  00:8000                      	
      12   00:8000                      	
      13   00:8000                      START:	
      14   00:8000                      	;inicializa pantalla y entonrno
      15   00:8000  CD D4 81            	CALL	sub_preparapantalla			;screen 2,2 sin click al pulsar tecla y color 16,1,1
      16   00:8003                      	
      17   00:8003                      	;inicializa variables para parametrizar funciones y que lo que se muestre sea variable (nº vidas, mapa, puertas, pantalla, etc...)
      18   00:8003  CD 59 80            	CALL	inicializa_variables_pruebas
      19   00:8006                      	
      20   00:8006                      ;***************************************************
      21   00:8006                      	;inicializa los niveles por partida
      22   00:8006                      ;	CALL	inicializa_niveles			;no es necesario parametrizarlo según el nivel del usuario ya que se cargan todos
      23   00:8006                      ;************** quitarlo cuando pueda navegar por habitaciones y esté más avanzado el proyecto
      24   00:8006                      
      25   00:8006                      	;inicializa los valores de cada puerta excepto si están activas o no (eso ocurre cuando se matan todos los enemigos de la hab. y sólo a las puertas que se muestren)
      26   00:8006  CD 6C 87            	CALL	inicializa_puertas
      27   00:8009                      	
      28   00:8009                      	;inicializa las estructuras de forma particular según ayuda pero sin poner valores de posición
      29   00:8009  CD D2 9B            	CALL	inicializa_ayudas
      30   00:800C                      	
      31   00:800C                      	;inicializa las estructuras de las antorchas y esqueletos
      32   00:800C  CD FC 84            	CALL	inicializa_antorchas
      33   00:800F  CD 1E 85            	CALL	inicializa_esqueletos
      34   00:8012                      	
      35   00:8012                      	;pinta la pantalla (la primera o algunas especiales se pintan completamente)
      36   00:8012  CD F5 81            	CALL	pinta_pantalla_completa
      37   00:8015                      	
      38   00:8015                      	;carga sprites en memoria (SE HA RETRASADO HASTA PARAMETRIZAR LA CARGA DE PANTALLAS)
      39   00:8015  CD 60 89            	CALL 	carga_patrones_sprites_nivel
      40   00:8018                      	
      41   00:8018                      	;funciones que modificarian el marcador si se produce un evento cuando toque y cuando se pinta la pantalla ya se mira
      42   00:8018                      	;una variable para ver si el array hay que actualizarlo en pantalla o no
      43   00:8018  CD 35 83            	CALL	pinta_vidas
      44   00:801B  CD 44 83            	CALL 	pinta_reliquias
      45   00:801E  CD 53 83            	CALL	pinta_nivel
      46   00:8021  CD D3 83            	CALL	borra_mapa
      47   00:8024  CD 06 88            	CALL	pinta_puertas
      48   00:8027                      
      49   00:8027  3E 13               	LD		 A, TILEPROTAM
      50   00:8029  32 DB A9            	LD		(elemento_pintar_mapa), A
      51   00:802C  CD 2A 84            	CALL	posiciona_en_mapa		;se le pasa elemento_pintar_mapa (tile del prota) está el prota y prota.posx y posy
      52   00:802F                      		
      53   00:802F  CD 0F 9C            	CALL	pinta_ayudas_habitacion
      54   00:8032                      	
      55   00:8032  CD 40 85            	CALL	pinta_extra_fondo
      56   00:8035                      	
      57   00:8035                      	;esta función no va aquí sino en check colisiones pero se pone aquí para realizar pruebas
      58   00:8035  CD 68 81            	CALL	terminada_habitacion_recorrida ;para cuando se maten todos los enemigos de la habitación
      59   00:8038                      
      60   00:8038                      	;incializacion de replayer con interrupciones
      61   00:8038                      ;	CALL	inicializa_replayer_efectos_interrupciones
      62   00:8038                      
      63   00:8038                      loop_principal:
      64   00:8038  76                  	HALT							;espera VBLANK y sincroniza
      65   00:8039                      	
      66   00:8039  CD 71 89            	CALL	render_sprites			;actualiza array de sprites y los pinta en pantalla
      67   00:803C                      	
      68   00:803C  CD C4 83            	CALL	pinta_energia			;pinta la energia en pantalla
      69   00:803F                      	
      70   00:803F  CD B7 85            	CALL	actualiza_elementos_fondo
      71   00:8042                      
      72   00:8042  CD B4 89            	CALL	check_player			;MIRA EL CONTROL Y APLICA LA LOGICA DE MOVIMIENTO DEL PROTAGONISTA
      73   00:8045                      	
      74   00:8045  C3 38 80            	JP		loop_principal
      75   00:8048                      fin_programa_principal:
      76   00:8048                      	;no necesita RET
      77   00:8048                      
      78   00:8048                      
      79   00:8048                      ;;=====================================================
      80   00:8048                      ;;CHECK_COLISIONES_OBJETOS
      81   00:8048                      ;;=====================================================	
      82   00:8048                      ; función: 	revisa (con enemigos+ayudas o puertas según si la habitación ha sido recorrida o no) las variables para ver si se disparó sobre ellas
      83   00:8048                      ; entrada: 	is_habitacion_terminada
      84   00:8048                      ; salida: 	-
      85   00:8048                      ; toca:		HL,BC, DE
      86   00:8048                      check_colisiones_objetos:
      87   00:8048                      
      88   00:8048                      ;;;		parece que funciona pero hayq que seguir depurando
      89   00:8048                      
      90   00:8048  F5                  	PUSH	AF
      91   00:8049                      	
      92   00:8049                      	;pantalla limpia?
      93   00:8049  3A 8C A6            	LD		 A, (is_habitacion_terminada)
      94   00:804C  F6 00               	OR		 0
      95   00:804E  CA 57 80            	JP		 Z, .habitacion_no_terminada
      96   00:8051                      	;SI 
      97   00:8051                      	;recorre puertas y sale
      98   00:8051  CD AF 88            		CALL	check_colisiones_puertas
      99   00:8054                      		
     100   00:8054  C3 57 80            		JP		fin_check_colisiones_objetos	
     101   00:8057                      	;NO 
     102   00:8057                      .habitacion_no_terminada:
     103   00:8057                      	;recorre ayudas
     104   00:8057                      	;recorre enemigos
     105   00:8057                      
     106   00:8057                      
     107   00:8057                      fin_check_colisiones_objetos:	
     108   00:8057  F1                  	POP		AF
     109   00:8058  C9                  	RET
     110   00:8059                      
     111   00:8059                      
     112   00:8059                      
     113   00:8059                      
     114   00:8059                      
     115   00:8059                      
     116   00:8059                      
     117   00:8059                      ;;*******************************************************************
     118   00:8059                      ; sólo para hacer pruebas y pintar la parte de las vidas y demás
     119   00:8059                      inicializa_variables_pruebas:
     120   00:8059  3E 04               	LD		 A, 4
     121   00:805B  32 B7 A9            	LD		(prota_vidas),A
     122   00:805E                      
     123   00:805E  3E 04               	LD		 A, 4
     124   00:8060  32 B8 A9            	LD		(prota_reliquias), A
     125   00:8063                      
     126   00:8063  3E 64               	LD		 A, 100
     127   00:8065  32 BB A9            	LD		(prota_energia), A
     128   00:8068                      
     129   00:8068                      	;ubico al prota dentro del nivel para obtener luego las habitaciones y enemigos que aparecerán
     130   00:8068                      	;será igual la posición inicial en todos los niveles
     131   00:8068                      	
     132   00:8068  3E 00               	LD		 A, 0				;los niveles (matrices) son 7 del 0 al 6
     133   00:806A  32 B6 A9            	LD		(prota_nivel), A	;nivel empieza en 0 para usar las posiciones ascii
     134   00:806D                      
     135   00:806D  3E 00               	LD		 A, 0				;los subniveles (filas) son 7 del 0 al 6
     136   00:806F  32 BA A9            	LD		(prota_pos_mapy), A	;pos Y dentro del nivel (se empieza en 0)
     137   00:8072                      
     138   00:8072  3E 03               	LD		 A, 3				;columnas 7: del 0 al 6
     139   00:8074  32 B9 A9            	LD		(prota_pos_mapx), A	;pos X dentro del nivel (se empieza en 0)
     140   00:8077                      	
     141   00:8077  AF                  	XOR		 A					;cadencia por defecto.. cuando se coja mejora en arma se puede variar
     142   00:8078  32 AB A9            	LD		(prota.cadencia), A
     143   00:807B                      	
     144   00:807B  32 8C A6            	LD		(is_habitacion_terminada), A
     145   00:807E                      fin_inicializa_variables_pruebas:
     146   00:807E  C9                  	RET
     147   00:807F                      ;;************************************************************************
     148   00:807F                      
     149   00:807F                      
     150   00:807F                      
     151   00:807F                      
     152   00:807F                      
     153   00:807F                      
     154   00:807F                      
     155   00:807F                      
     156   00:807F                      
     157   00:807F                      ;;=====================================================
     158   00:807F                      ;;DEFINICIÓN DE SUBRUTINAS
     159   00:807F                      ;;=====================================================
     160   00:807F                      	include "subrutinas.asm"
       1.  00:807F                      ;;=====================================================
       2.  00:807F                      ;;DEFINICIÓN DE SUBRUTINAS
       3.  00:807F                      ;;=====================================================	
       4.  00:807F                      
       5.  00:807F                      
       6.  00:807F                      ;;=====================================================
       7.  00:807F                      ;;INICIALIZA_NIVELES
       8.  00:807F                      ;;=====================================================	
       9.  00:807F                      ; función: 	pone el bit 4 de todas las habitaciones (byte habitacion_actual 0,2,4....) a 0
      10.  00:807F                      ; entrada: 	habitaciones_plantilla
      11.  00:807F                      ; salida: 	habitaciones_plantilla con los el bit 4 de los bites bytes impares a 0
      12.  00:807F                      ; toca: 	habitaciones_plantilla, B
      13.  00:807F                      inicializa_niveles:
      14.  00:807F  F5                  		PUSH		AF
      15.  00:8080  C5                  		PUSH		BC
      16.  00:8081  E5                  		PUSH		HL
      17.  00:8082                      		
      18.  00:8082  06 38               		LD			 B, 56		;la mitad de bytes del array de un nivel
      19.  00:8084  21 8D A6            		LD 			HL, habitaciones_nivel0
      20.  00:8087                      .inicia_nivel_0
      21.  00:8087  7E                  		LD		 	 A, (HL)
      22.  00:8088  CB E7               		SET			 4, A 		;el 4 bit a 0 indica que por esa habitacion no se ha pasado/no se han atado todos los enemigos
      23.  00:808A  77                  		LD			(HL), A
      24.  00:808B  23 23               [2]		INC			HL
      25.  00:808D  10 F8               		DJNZ		.inicia_nivel_0
      26.  00:808F                      
      27.  00:808F  06 38               		LD			 B, 56		;la mitad de bytes del array de un nivel
      28.  00:8091  21 FD A6            		LD 			HL, habitaciones_nivel1
      29.  00:8094                      .inicia_nivel_1
      30.  00:8094  7E                  		LD		 	 A, (HL)
      31.  00:8095  CB E7               		SET			 4, A 		;el 4 bit a 0 indica que por esa habitacion no se ha pasado/no se han atado todos los enemigos
      32.  00:8097  77                  		LD			(HL), A
      33.  00:8098  23 23               [2]		INC			HL
      34.  00:809A  10 F8               		DJNZ		.inicia_nivel_1
      35.  00:809C                      
      36.  00:809C  06 38               		LD			 B, 56		;la mitad de bytes del array de un nivel
      37.  00:809E  21 6D A7            		LD 			HL, habitaciones_nivel2
      38.  00:80A1                      .inicia_nivel_2
      39.  00:80A1  7E                  		LD		 	 A, (HL)
      40.  00:80A2  CB E7               		SET			 4, A 		;el 4 bit a 0 indica que por esa habitacion no se ha pasado/no se han atado todos los enemigos
      41.  00:80A4  77                  		LD			(HL), A
      42.  00:80A5  23 23               [2]		INC			HL
      43.  00:80A7  10 F8               		DJNZ		.inicia_nivel_2
      44.  00:80A9                      
      45.  00:80A9  06 38               		LD			 B, 56		;la mitad de bytes del array de un nivel
      46.  00:80AB  21 DD A7            		LD 			HL, habitaciones_nivel3
      47.  00:80AE                      .inicia_nivel_3
      48.  00:80AE  7E                  		LD		 	 A, (HL)
      49.  00:80AF  CB E7               		SET			 4, A 		;el 4 bit a 0 indica que por esa habitacion no se ha pasado/no se han atado todos los enemigos
      50.  00:80B1  77                  		LD			(HL), A
      51.  00:80B2  23 23               [2]		INC			HL
      52.  00:80B4  10 F8               		DJNZ		.inicia_nivel_3
      53.  00:80B6                      
      54.  00:80B6  06 38               		LD			 B, 56		;la mitad de bytes del array de un nivel
      55.  00:80B8  21 4D A8            		LD 			HL, habitaciones_nivel4
      56.  00:80BB                      .inicia_nivel_4
      57.  00:80BB  7E                  		LD		 	 A, (HL)
      58.  00:80BC  CB E7               		SET			 4, A 		;el 4 bit a 0 indica que por esa habitacion no se ha pasado/no se han atado todos los enemigos
      59.  00:80BE  77                  		LD			(HL), A
      60.  00:80BF  23 23               [2]		INC			HL
      61.  00:80C1  10 F8               		DJNZ		.inicia_nivel_4
      62.  00:80C3                      
      63.  00:80C3  06 38               		LD			 B, 56		;la mitad de bytes del array de un nivel
      64.  00:80C5  21 BD A8            		LD 			HL, habitaciones_nivel5
      65.  00:80C8                      .inicia_nivel_5
      66.  00:80C8  7E                  		LD		 	 A, (HL)
      67.  00:80C9  CB E7               		SET			 4, A 		;el 4 bit a 0 indica que por esa habitacion no se ha pasado/no se han atado todos los enemigos
      68.  00:80CB  77                  		LD			(HL), A
      69.  00:80CC  23 23               [2]		INC			HL
      70.  00:80CE  10 F8               		DJNZ		.inicia_nivel_5
      71.  00:80D0                      
      72.  00:80D0  06 38               		LD			 B, 56		;la mitad de bytes del array de un nivel
      73.  00:80D2  21 2D A9            		LD 			HL, habitaciones_nivel6
      74.  00:80D5                      .inicia_nivel_6
      75.  00:80D5  7E                  		LD		 	 A, (HL)
      76.  00:80D6  CB E7               		SET			 4, A 		;el 4 bit a 0 indica que por esa habitacion no se ha pasado/no se han atado todos los enemigos
      77.  00:80D8  77                  		LD			(HL), A
      78.  00:80D9  23 23               [2]		INC			HL
      79.  00:80DB  10 F8               		DJNZ		.inicia_nivel_6
      80.  00:80DD                      
      81.  00:80DD  E1                  		POP			HL
      82.  00:80DE  C1                  		POP			BC
      83.  00:80DF  F1                  		POP			AF
      84.  00:80E0                      fin_iniciliza_niveles:
      85.  00:80E0  C9                  		RET
      86.  00:80E1                      
      87.  00:80E1                      
      88.  00:80E1                      ;;=====================================================
      89.  00:80E1                      ;;ACTUALIZA_MARCADOR_VIDAS
      90.  00:80E1                      ;;=====================================================	
      91.  00:80E1                      ; función:  actualiza el buffer de vidas
      92.  00:80E1                      ; entrada: 	prota_vidas
      93.  00:80E1                      ; salida: 	array_aux_vidas
      94.  00:80E1                      ; toca:		A,B,HL
      95.  00:80E1                      actualiza_marcador_vidas:
      96.  00:80E1                      	;para no andar restando pongo todos los huecos a negro y luego en otro bucle las caras
      97.  00:80E1                      	;1-pinto todo en blanco
      98.  00:80E1  21 BC A9            	LD		HL,array_aux_vidas
      99.  00:80E4  06 08               	LD		 B,NMAXVIDREL
     100.  00:80E6                      loop_marcador_caras_negro:	;asignar espacios en negro
     101.  00:80E6  36 00               	LD		(HL),0			;0 posición mapa tiles para nada (es transparente pero el fondo es negro)
     102.  00:80E8  23                  	INC		HL
     103.  00:80E9  10 FB               	DJNZ	loop_marcador_caras_negro
     104.  00:80EB                      fin_loop_marcador_caras_negro:
     105.  00:80EB                      	;2-pinto las caras según el n de vidas
     106.  00:80EB  3A B7 A9            	LD		 A, (prota_vidas)
     107.  00:80EE  B7                  	OR		 A
     108.  00:80EF  C8                  	RET 	 Z
     109.  00:80F0  47                  	LD		 B, A
     110.  00:80F1  21 BC A9            	LD		HL, array_aux_vidas
     111.  00:80F4                      loop_marcador_caras: ;asignar caras
     112.  00:80F4  36 0D               	LD		(HL), POSCARAMAP	;13 posición mapa tiles para cara
     113.  00:80F6  23                  	INC		HL
     114.  00:80F7  10 FB               	DJNZ	loop_marcador_caras
     115.  00:80F9                      fin_loop_marcador_caras:
     116.  00:80F9                      fin_actualiza_marcador_vidas:
     117.  00:80F9  C9                  	RET
     118.  00:80FA                      
     119.  00:80FA                      
     120.  00:80FA                      ;;=====================================================
     121.  00:80FA                      ;;ACTUALIZA_BUFFER_RELIQUIAS
     122.  00:80FA                      ;;=====================================================	
     123.  00:80FA                      ; función: 	actualiza buffer de reliquias
     124.  00:80FA                      ; entrada: 	prota_reliquias
     125.  00:80FA                      ; salida: 	array_aux_reliquias
     126.  00:80FA                      ; toca:		A,B,HL
     127.  00:80FA                      actualiza_buffer_reliquias:	
     128.  00:80FA                      	;para no andar restando pongo todos los huecos a negro y luego en otro bucle las reliquias
     129.  00:80FA                      	;1-pinto todo en blanco
     130.  00:80FA  21 C4 A9            	LD		HL, array_aux_reliquias
     131.  00:80FD  06 08               	LD		 B, NMAXVIDREL
     132.  00:80FF  AF                  	XOR		 A
     133.  00:8100                      loop_buffer_reliquias_negro:	;asignar espacios en negro
     134.  00:8100  77                  	LD		(HL), A			;0 posición mapa tiles para nada (es transparente pero el fondo es negro)
     135.  00:8101  23                  	INC		HL
     136.  00:8102  10 FC               	DJNZ	loop_buffer_reliquias_negro
     137.  00:8104                      
     138.  00:8104                      	;2-pinto las cruces según el n de reliquias
     139.  00:8104  21 C4 A9            	LD		HL, array_aux_reliquias
     140.  00:8107  3A B8 A9            	LD		 A, (prota_reliquias)
     141.  00:810A  B7                  	OR		 A
     142.  00:810B  C8                  	RET		 Z
     143.  00:810C  47                  	LD		 B, A
     144.  00:810D                      loop_buffer_reliquias: ;asignar reliquias
     145.  00:810D  36 11               	LD		(HL), POSRELIMAP	;17 posición mapa tiles para reliquia
     146.  00:810F  23                  	INC		HL
     147.  00:8110  10 FB               	DJNZ	loop_buffer_reliquias
     148.  00:8112                      fin_actualiza_buffer_reliquias:
     149.  00:8112  C9                  	RET
     150.  00:8113                      
     151.  00:8113                      
     152.  00:8113                      
     153.  00:8113                      ;;=====================================================
     154.  00:8113                      ;;LOCALIZA_INFO_HABITACION
     155.  00:8113                      ;;=====================================================	
     156.  00:8113                      ; función: 	busca las puertas que hay que pintar egún la posición del usuario y las pone en habitacion_actual
     157.  00:8113                      ; entrada: 	prota.pos_mapy, prota.pos_mapx, prota_nivel habitaciones_juego
     158.  00:8113                      ; salida: 	habitacion_actual
     159.  00:8113                      ; toca:		todo
     160.  00:8113                      ;ejemplo: nivel 4, posy 5 y posx 3
     161.  00:8113                      ;3 + 5 x 8 + 4 x 49
     162.  00:8113                      localiza_info_habitacion:
     163.  00:8113                      	;~ PUSH	AF
     164.  00:8113                      	;~ PUSH	BC
     165.  00:8113                      	;~ PUSH	DE
     166.  00:8113                      	;~ PUSH	HL
     167.  00:8113                      
     168.  00:8113                      ;primera posición: me coloco en la columna correcta
     169.  00:8113  21 8D A6            	LD		HL, habitaciones_juego
     170.  00:8116                      .situo_columna:	
     171.  00:8116  3A B9 A9            	LD		 A, (prota_pos_mapx)
     172.  00:8119  CB 27               	SLA		 A				;multiplico por dos ya que cada habitación va de dos en dos bytes
     173.  00:811B  06 00               	LD		 B, 0
     174.  00:811D  4F                  	LD		 C, A
     175.  00:811E  09                  	ADD 	HL, BC			;sumo a la posición 0 la columnax2 en la que situarme
     176.  00:811F                      	
     177.  00:811F                      .situo_fila:
     178.  00:811F  3A BA A9            	LD		A, (prota_pos_mapy)
     179.  00:8122  B7                  	OR	 	A
     180.  00:8123  CA 30 81            	JP		Z, .situo_nivel	;si la fila es 0 no es necesario seguir operando en fila
     181.  00:8126                      	
     182.  00:8126  47                  	LD		B, A
     183.  00:8127  AF                  	XOR		A
     184.  00:8128                      .loop_suma_fila:
     185.  00:8128  C6 10               	ADD		16				;cada fila tiene 16 bytes
     186.  00:812A  10 FC               	DJNZ	.loop_suma_fila
     187.  00:812C                      	
     188.  00:812C  06 00               	LD		 B, 0
     189.  00:812E  4F                  	LD		 C, A
     190.  00:812F                      
     191.  00:812F  09                  	ADD 	HL, BC			;sumo a la columna 16 x filas para situarme en la fila correcta
     192.  00:8130                      
     193.  00:8130                      .situo_nivel:
     194.  00:8130  3A B6 A9            	LD		 A, (prota_nivel)
     195.  00:8133  B7                  	OR	 	 A
     196.  00:8134  CA 44 81            	JP		 Z, .actualiza_variable_habitacion	;si el nivel es 0 al pasar por las anterirores ya estoy situado actualizo la variable y termino
     197.  00:8137                      	
     198.  00:8137  E5                  	PUSH	HL				;guardo el resultado intermedio
     199.  00:8138                      	
     200.  00:8138  47                  	LD		 B, A			;preparo la varible del bucle
     201.  00:8139  11 70 00            	LD		DE, 112			;112 = 16x42 son los bytes de cada matriz-nivel
     202.  00:813C  21 00 00            	LD		HL, 0
     203.  00:813F                      .loop_suma_nivel:
     204.  00:813F  19                  	ADD		HL, DE
     205.  00:8140  10 FD               	DJNZ	.loop_suma_nivel
     206.  00:8142                      	
     207.  00:8142  D1                  	POP		DE				;devuelvo el resultado intermedio en DE que ya no lo necesito
     208.  00:8143                      	
     209.  00:8143  19                  	ADD		HL, DE			;sumo el resultado del nivel al resultado intermedio anterior
     210.  00:8144                      	
     211.  00:8144                      .actualiza_variable_habitacion
     212.  00:8144  7E                  	LD		 A, (HL)
     213.  00:8145  32 88 A6            	LD		(habitacion_actual), A
     214.  00:8148                      	
     215.  00:8148                      	;actualizo la variable habitacion_actual y su puntero para poder modificar por si se vuelve a pasar por ahí
     216.  00:8148  DD 21 8A A6         	LD		IX, habitacion_actual_puntero
     217.  00:814C  DD 74 00            	LD		(IX), H
     218.  00:814F  DD 75 01            	LD		(IX + 1), L
     219.  00:8152                      	
     220.  00:8152                      	;actualizo la variable is_habitacion_terminada
     221.  00:8152  3A 88 A6            	LD		 A, (habitacion_actual)
     222.  00:8155  E6 10               	AND		00010000b					;me interresa sólo el bit 4 (si la habitación ha sido recorrida)
     223.  00:8157                      [4]	SRA		 A
     223.  00:8157  CB 2F CB 2F CB 2F CB 2F 
     224.  00:815F  32 8C A6            	LD		(is_habitacion_terminada), A
     225.  00:8162                      	
     226.  00:8162                      	;actualizo la variable habitacion_extras
     227.  00:8162  23                  	INC		HL				;el byte de los extras está antes de donde se especifican las puertas
     228.  00:8163  7E                  	LD		 A, (HL)
     229.  00:8164  32 89 A6            	LD		(habitacion_extras), A
     230.  00:8167                      
     231.  00:8167                      	;~ POP		HL	
     232.  00:8167                      	;~ POP		DE
     233.  00:8167                      	;~ POP		BC
     234.  00:8167                      	;~ POP		AF
     235.  00:8167                      fin_localiza_info_habitacion:
     236.  00:8167  C9                  	RET
     237.  00:8168                      	
     238.  00:8168                      
     239.  00:8168                      ;;=====================================================
     240.  00:8168                      ;;TERMINADA_HABIACION_RECORRIDA
     241.  00:8168                      ;;=====================================================	
     242.  00:8168                      ; función: 	usando la variable prota_pos_mapx pone un 1 a donde apunta habitacion_recorrida (el array... byte 14 de 
     243.  00:8168                      ;			habitaciones recorridas en esa fila) para ver si uestra enemigos o no y permita pasar por puertas
     244.  00:8168                      ; entrada: 	prota_pos_mapx, habitacion_recorrida
     245.  00:8168                      ; salida: 	habitacion_recorrida (byte 14 de la fila de habitaciones) actualizada con OR A (en A la habitacion)
     246.  00:8168                      ; toca:		IX, HL, AF
     247.  00:8168                      terminada_habitacion_recorrida:
     248.  00:8168  21 8A A6            		LD			HL, habitacion_actual_puntero
     249.  00:816B  7E                  		LD			 A, (HL)
     250.  00:816C  CB E7               		SET			 4, A
     251.  00:816E  77                  		LD			(HL), A
     252.  00:816F                      		
     253.  00:816F  3E 01               		LD			 A, HABTERMIN	;da igual qué bit mientras sea distinto de 0 pero se pone 1
     254.  00:8171  32 8C A6            		LD			(is_habitacion_terminada), A
     255.  00:8174                      		
     256.  00:8174                      		;este trozo no sirve de nada pero ya e quedo más tranquilo si lo pongo, por ser exacto y completo
     257.  00:8174                      		;no sirve porque se cambiará de habitación y se perderá/actualizará el dato
     258.  00:8174  3A 88 A6            		LD			 A, (habitacion_actual)
     259.  00:8177  CB E7               		SET			 4, A
     260.  00:8179  32 88 A6            		LD			(habitacion_actual), A
     261.  00:817C                      fin_terminada_habitacion_recorrida:
     262.  00:817C  C9                  		RET
     263.  00:817D                      
     264.  00:817D                      
     265.  00:817D                      
     266.  00:817D                      ;;=====================================================
     267.  00:817D                      ;;ENTRA_HABITACION												*no terminada
     268.  00:817D                      ;;=====================================================	
     269.  00:817D                      ; función: 	actualiza elementos en pantalla cuando hay cambios en habitación
     270.  00:817D                      ;			fondo
     271.  00:817D                      ;			puertas
     272.  00:817D                      ;			ayudas
     273.  00:817D                      ;			imagenes
     274.  00:817D                      ;			mapa inferior
     275.  00:817D                      ;			enemigos
     276.  00:817D                      ; entrada: 	prota_pos_mapy, prota_pos_mapy, prota_nivel
     277.  00:817D                      ; salida: 	
     278.  00:817D                      entra_habitacion:
     279.  00:817D  CD FC 81            		CALL	pinta_parte_superior_pantalla
     280.  00:8180  CD 06 88            		CALL	pinta_puertas
     281.  00:8183  CD 40 85            		CALL	pinta_extra_fondo
     282.  00:8186  CD 0F 9C            		CALL	pinta_ayudas_habitacion
     283.  00:8189                      	
     284.  00:8189  C3 8C 81            		JP		pinta_heroe_mapa
     285.  00:818C                      fin_entra_habitacion:
     286.  00:818C                      
     287.  00:818C                      
     288.  00:818C                      ;;=====================================================
     289.  00:818C                      ;;PINTA_HEROE_MAPA
     290.  00:818C                      ;;PINTA_BLANCO_MAPA
     291.  00:818C                      ;;=====================================================	
     292.  00:818C                      ; función: 	pinta el iconito del heroe en el mapa o un espacio en blanco
     293.  00:818C                      ; entrada: 	
     294.  00:818C                      ; salida: 	
     295.  00:818C                      ; toca:		todo
     296.  00:818C                      pinta_heroe_mapa:
     297.  00:818C  3E 13               		LD		 A, TILEPROTAM
     298.  00:818E  32 DB A9            		LD		(elemento_pintar_mapa), A
     299.  00:8191  C3 2A 84            		JP		posiciona_en_mapa		;se le pasa elemento_pintar_mapa (tile del prota) está el prota y prota.posx y posy
     300.  00:8194                      fin_pinta_heroe_mapa:
     301.  00:8194                      pinta_blanco_mapa:
     302.  00:8194  3E 09               		LD		 A, TILEGRISM
     303.  00:8196  32 DB A9            		LD		(elemento_pintar_mapa), A
     304.  00:8199  C3 2A 84            		JP		posiciona_en_mapa		;se le pasa elemento_pintar_mapa (tile del prota) está el prota y prota.posx y posy
     305.  00:819C                      fin_pinta_blanco_mapa:
     306.  00:819C                      	
     307.  00:819C                      	
     308.  00:819C                      
     309.  00:819C                      ;;=====================================================
     310.  00:819C                      ;;CAMBIO_NIVEL
     311.  00:819C                      ;;=====================================================	
     312.  00:819C                      ; función: 	pinta el iconito del heroe en el mapa o un espacio en blanco
     313.  00:819C                      ; entrada: 	
     314.  00:819C                      ; salida: 	
     315.  00:819C                      ; toca:		todo	
     316.  00:819C                      cambio_nivel:
     317.  00:819C                      	
     318.  00:819C                      		;MIRAR CUANDO EL NIVEL SEA -1 (SE SALE DEL CASTILLO Y PUEDE QUE SEA POR TERMINAR JUEGO O SALIR ANTES DE TIEMPO)
     319.  00:819C                      	
     320.  00:819C                      ;		*****************************************************************************************************************************+
     321.  00:819C  CD 53 83            		CALL		pinta_nivel
     322.  00:819F                      	
     323.  00:819F  CD D3 83            		CALL		borra_mapa	
     324.  00:81A2                      		
     325.  00:81A2                      fin_cabio_nivel:
     326.  00:81A2  C9                  		RET
     327.  00:81A3                      	
     328.  00:81A3                      	
     329.  00:81A3                      	
     330.  00:81A3                      	
     331.  00:81A3                      	
     332.  00:81A3                      	
     333.  00:81A3                      	
     161   00:81A3                      	
     162   00:81A3                      	include "subr_general.asm"
       1.  00:81A3                      ;;=====================================================
       2.  00:81A3                      ;;DEFINICIÓN DE SUBRUTINAS GENERALES USABLES PARA CUALQUIER PROYECTO
       3.  00:81A3                      ;;=====================================================	
       4.  00:81A3                      
       5.  00:81A3                      ;;=====================================================
       6.  00:81A3                      ;;SUMA_A_BC
       7.  00:81A3                      ;;=====================================================	
       8.  00:81A3                      ; función: 	suma A a BC por si da más de 255
       9.  00:81A3                      ; entrada: 	A, BC
      10.  00:81A3                      ; salida: 	A + BC
      11.  00:81A3                      ; toca:		A, BC
      12.  00:81A3                      suma_A_BC:
      13.  00:81A3  81                  	ADD		 C
      14.  00:81A4  4F                  	LD		 C, A
      15.  00:81A5  88                  	ADC		 B
      16.  00:81A6  91                  	SUB		 C
      17.  00:81A7  47                  	LD		 B, A
      18.  00:81A8                      fin_suma_A_BC:
      19.  00:81A8  C9                  	RET
      20.  00:81A9                      	
      21.  00:81A9                      ;;=====================================================
      22.  00:81A9                      ;;SUMA_A_HL
      23.  00:81A9                      ;;=====================================================	
      24.  00:81A9                      ; función: 	suma A a BC por si da más de 255
      25.  00:81A9                      ; entrada: 	A, HL
      26.  00:81A9                      ; salida: 	A + HL
      27.  00:81A9                      ; toca:		A, HL
      28.  00:81A9                      suma_A_HL:
      29.  00:81A9  85                  	ADD		 L
      30.  00:81AA  6F                  	LD		 L, A
      31.  00:81AB  8C                  	ADC		 H
      32.  00:81AC  95                  	SUB		 L
      33.  00:81AD  67                  	LD		 H, A
      34.  00:81AE                      fin_suma_A_HL:
      35.  00:81AE  C9                  	RET
      36.  00:81AF                      	
      37.  00:81AF                      	
      38.  00:81AF                      ;;=====================================================
      39.  00:81AF                      ;;TEST_OK
      40.  00:81AF                      ;;=====================================================	
      41.  00:81AF                      ; función: para pruebas.. cambia el color de fondo cuando se le llama
      42.  00:81AF                      test_OK:
      43.  00:81AF  F5                  	PUSH	AF
      44.  00:81B0                      	
      45.  00:81B0  3E 0F               	LD		 A, 15
      46.  00:81B2                      	
      47.  00:81B2  32 E9 F3            	LD 		(FORCLR), A
      48.  00:81B5  23                  	INC		HL
      49.  00:81B6                      	
      50.  00:81B6  32 EA F3            	LD 		(BAKCLR), A
      51.  00:81B9  23                  	INC		HL
      52.  00:81BA                      	
      53.  00:81BA  7E                  	LD		 A, (HL)
      54.  00:81BB  32 EB F3            	LD 		(BDRCLR), A
      55.  00:81BE                      	
      56.  00:81BE  CD 62 00            	CALL	CHGCLR 
      57.  00:81C1                      	
      58.  00:81C1  F1                  	POP		AF
      59.  00:81C2                      fin_test_OK:
      60.  00:81C2  C9                  	RET
     163   00:81C3                      	
     164   00:81C3                      	include "subr_pintapantalla.asm"
       1.  00:81C3                      ;;=====================================================
       2.  00:81C3                      ;;DEFINICIÓN DE SUBRUTINAS
       3.  00:81C3                      ;;=====================================================	
       4.  00:81C3                      ;relacionadas con pintado en pantalla (y no sprites)
       5.  00:81C3                      
       6.  00:81C3                      
       7.  00:81C3                      ;;=====================================================
       8.  00:81C3                      ;;COLOR_PANTALLA
       9.  00:81C3                      ;;=====================================================	
      10.  00:81C3                      ; función: 	el equivalente en basic a color 15,1,1
      11.  00:81C3                      ; entrada: 	HL	que apunta a un array de bytes con 3 bytes FORCLR, BAKCLR y BDRCLR
      12.  00:81C3                      ; salida: 	-
      13.  00:81C3                      ; toca: 	todo
      14.  00:81C3                      color_pantalla:
      15.  00:81C3  7E                  	LD		 A, (HL)			;FORCLR 
      16.  00:81C4  32 E9 F3            	LD 		(FORCLR),A
      17.  00:81C7  23                  	INC		HL
      18.  00:81C8                      	
      19.  00:81C8  7E                  	LD		 A, (HL)			;BAKCLR
      20.  00:81C9  32 EA F3            	LD 		(BAKCLR),A
      21.  00:81CC  23                  	INC		HL
      22.  00:81CD                      	
      23.  00:81CD  7E                  	LD		 A, (HL)
      24.  00:81CE  32 EB F3            	LD 		(BDRCLR),A			;BDRCLR
      25.  00:81D1  C3 62 00            	JP		CHGCLR 
      26.  00:81D4                      fin_color_pantalla:
      27.  00:81D4                      
      28.  00:81D4                      
      29.  00:81D4                      ;;=====================================================
      30.  00:81D4                      ;;PREPARAPANTALLA
      31.  00:81D4                      ;;=====================================================	
      32.  00:81D4                      ; función: elimina clic cuando se pulsa tecla, cls, screen 2,2
      33.  00:81D4                      ; entrada: -
      34.  00:81D4                      ; salida: -
      35.  00:81D4                      ; toca: si no son todos los regristros, casi todos
      36.  00:81D4                      sub_preparapantalla:
      37.  00:81D4                      	;toca A y Z
      38.  00:81D4                      elimina_clic;
      39.  00:81D4  AF                  	XOR		 A
      40.  00:81D5  32 DB F3            	LD		(CLIKSW),A
      41.  00:81D8                      fin_elimina_clic:
      42.  00:81D8                      
      43.  00:81D8                      	;toca A
      44.  00:81D8                      limpia_pantalla:
      45.  00:81D8  AF                  	XOR		 A
      46.  00:81D9  CD C3 00            	CALL 	CLS
      47.  00:81DC                      fin_limpia_pantalla:
      48.  00:81DC                      
      49.  00:81DC                      	;toca A y direcciones #F3E9/#F3EA/#F3EB, poner en HL array con 3 valores
      50.  00:81DC  21 9D A9            	LD		HL, color_base
      51.  00:81DF  CD C3 81            	CALL	color_pantalla
      52.  00:81E2                      	
      53.  00:81E2                      	;cambiamos a SCREEN 2,2 del BASIC
      54.  00:81E2                      	;toca A
      55.  00:81E2                      screen2:
      56.  00:81E2  3E 02               	LD		 A, 2
      57.  00:81E4  CD 5F 00            	CALL	CHGMOD			;selecciona screen 2
      58.  00:81E7                      sprites_16_16:
      59.  00:81E7  3A E0 F3            	LD		 A, (RG1SAV)
      60.  00:81EA  F6 02               	OR		00000010b		;fuerza sprites de 16x16
      61.  00:81EC  32 E0 F3            	LD		(RG1SAV), A		;no lo guardamos en la copia de variables del sistema
      62.  00:81EF  47                  	LD		 B, A
      63.  00:81F0  0E 01               	LD		 C, 1
      64.  00:81F2  C3 47 00            	JP		WRTVDP			;opción alternativa de escribir las tres lineas siguientes
      65.  00:81F5                      fin_sub_preparapantalla:
      66.  00:81F5                      	
      67.  00:81F5                      
      68.  00:81F5                      ;;=====================================================
      69.  00:81F5                      ;;PINTA_PANTALLA_COMPLETA
      70.  00:81F5                      ;;=====================================================	
      71.  00:81F5                      ; función: pinta el escenario, las 3 partes
      72.  00:81F5                      ; entrada: -
      73.  00:81F5                      ; salida: -
      74.  00:81F5                      ; toca: si no son todos los regristros, casi todos
      75.  00:81F5                      pinta_pantalla_completa:
      76.  00:81F5  CD FC 81            	CALL 	pinta_parte_superior_pantalla
      77.  00:81F8                      	
      78.  00:81F8  CD 1A 83            	CALL 	pinta_parte_inferior_pantalla	
      79.  00:81FB                      fin_pinta_pantalla_completa:
      80.  00:81FB  C9                  	RET
      81.  00:81FC                      
      82.  00:81FC                      
      83.  00:81FC                      ;;=====================================================
      84.  00:81FC                      ;;PINTA_PARTE_SUPERIOR_PANTALLA
      85.  00:81FC                      ;;=====================================================	
      86.  00:81FC                      ; función: pinta el escenario, los dos bancos superiores
      87.  00:81FC                      ; entrada: -
      88.  00:81FC                      ; salida: -
      89.  00:81FC                      ; toca: si no son todos los regristros, casi todos
      90.  00:81FC                      pinta_parte_superior_pantalla:
      91.  00:81FC  3A B6 A9            	LD		 A, (prota_nivel)
      92.  00:81FF  CA 2D 82            	JP		 Z, .carga_nivel_0
      93.  00:8202  3D                  	DEC		 A
      94.  00:8203  3A B6 A9            	LD		 A, (prota_nivel)
      95.  00:8206  CA 48 82            	JP		 Z, .carga_nivel_1
      96.  00:8209  3D                  	DEC		 A
      97.  00:820A  3A B6 A9            	LD		 A, (prota_nivel)
      98.  00:820D  CA 63 82            	JP		 Z, .carga_nivel_2
      99.  00:8210  3D                  	DEC		 A
     100.  00:8211  3A B6 A9            	LD		 A, (prota_nivel)
     101.  00:8214  CA 7E 82            	JP		 Z, .carga_nivel_3
     102.  00:8217  3D                  	DEC		 A
     103.  00:8218  3A B6 A9            	LD		 A, (prota_nivel)
     104.  00:821B  CA 99 82            	JP		 Z, .carga_nivel_4
     105.  00:821E  3D                  	DEC		 A
     106.  00:821F  3A B6 A9            	LD		 A, (prota_nivel)
     107.  00:8222  CA B4 82            	JP		 Z, .carga_nivel_5
     108.  00:8225  3D                  	DEC		 A
     109.  00:8226  3A B6 A9            	LD		 A, (prota_nivel)
     110.  00:8229  CA CF 82            	JP		 Z, .carga_nivel_6
     111.  00:822C  3D                  	DEC		 A
     112.  00:822D                      	
     113.  00:822D                      .carga_nivel_0:
     114.  00:822D  21 0B AB            	LD		HL, tiles_patrones_nivel0
     115.  00:8230  22 14 83            	LD		(tiles_patrones), HL
     116.  00:8233  21 35 AD            	LD		HL, tiles_color_nivel0
     117.  00:8236  22 16 83            	LD		(tiles_colores), HL
     118.  00:8239  21 0B AB            	LD		HL, tiles_patrones_nivel0
     119.  00:823C  22 14 83            	LD		(tiles_patrones), HL
     120.  00:823F  21 A0 AD            	LD		HL, tiles_mapa_nivel0
     121.  00:8242  22 18 83            	LD		(tiles_mapa), HL
     122.  00:8245  C3 E7 82            	JP		.fin_carga_niveles
     123.  00:8248                      
     124.  00:8248                      .carga_nivel_1:
     125.  00:8248  21 D5 AD            	LD		HL, tiles_patrones_nivel1
     126.  00:824B  22 14 83            	LD		(tiles_patrones), HL
     127.  00:824E  21 8A AF            	LD		HL, tiles_color_nivel1
     128.  00:8251  22 16 83            	LD		(tiles_colores), HL
     129.  00:8254  21 D5 AD            	LD		HL, tiles_patrones_nivel1
     130.  00:8257  22 14 83            	LD		(tiles_patrones), HL
     131.  00:825A  21 D1 AF            	LD		HL, tiles_mapa_nivel1
     132.  00:825D  22 18 83            	LD		(tiles_mapa), HL
     133.  00:8260  C3 E7 82            	JP		.fin_carga_niveles
     134.  00:8263                      	
     135.  00:8263                      .carga_nivel_2:
     136.  00:8263  21 06 B0            	LD		HL, tiles_patrones_nivel2
     137.  00:8266  22 14 83            	LD		(tiles_patrones), HL
     138.  00:8269  21 BB B1            	LD		HL, tiles_color_nivel2
     139.  00:826C  22 16 83            	LD		(tiles_colores), HL
     140.  00:826F  21 06 B0            	LD		HL, tiles_patrones_nivel2
     141.  00:8272  22 14 83            	LD		(tiles_patrones), HL
     142.  00:8275  21 02 B2            	LD		HL, tiles_mapa_nivel2
     143.  00:8278  22 18 83            	LD		(tiles_mapa), HL
     144.  00:827B  C3 E7 82            	JP		.fin_carga_niveles
     145.  00:827E                      	
     146.  00:827E                      .carga_nivel_3:
     147.  00:827E  21 37 B2            	LD		HL, tiles_patrones_nivel3
     148.  00:8281  22 14 83            	LD		(tiles_patrones), HL
     149.  00:8284  21 EC B3            	LD		HL, tiles_color_nivel3
     150.  00:8287  22 16 83            	LD		(tiles_colores), HL
     151.  00:828A  21 37 B2            	LD		HL, tiles_patrones_nivel3
     152.  00:828D  22 14 83            	LD		(tiles_patrones), HL
     153.  00:8290  21 33 B4            	LD		HL, tiles_mapa_nivel3
     154.  00:8293  22 18 83            	LD		(tiles_mapa), HL
     155.  00:8296  C3 E7 82            	JP		.fin_carga_niveles
     156.  00:8299                      	
     157.  00:8299                      .carga_nivel_4:
     158.  00:8299  21 68 B4            	LD		HL, tiles_patrones_nivel4
     159.  00:829C  22 14 83            	LD		(tiles_patrones), HL
     160.  00:829F  21 1D B6            	LD		HL, tiles_color_nivel4
     161.  00:82A2  22 16 83            	LD		(tiles_colores), HL
     162.  00:82A5  21 68 B4            	LD		HL, tiles_patrones_nivel4
     163.  00:82A8  22 14 83            	LD		(tiles_patrones), HL
     164.  00:82AB  21 64 B6            	LD		HL, tiles_mapa_nivel4
     165.  00:82AE  22 18 83            	LD		(tiles_mapa), HL
     166.  00:82B1  C3 E7 82            	JP		.fin_carga_niveles
     167.  00:82B4                      	
     168.  00:82B4                      .carga_nivel_5:
     169.  00:82B4  21 99 B6            	LD		HL, tiles_patrones_nivel5
     170.  00:82B7  22 14 83            	LD		(tiles_patrones), HL
     171.  00:82BA  21 4E B8            	LD		HL, tiles_color_nivel5
     172.  00:82BD  22 16 83            	LD		(tiles_colores), HL
     173.  00:82C0  21 99 B6            	LD		HL, tiles_patrones_nivel5
     174.  00:82C3  22 14 83            	LD		(tiles_patrones), HL
     175.  00:82C6  21 95 B8            	LD		HL, tiles_mapa_nivel5
     176.  00:82C9  22 18 83            	LD		(tiles_mapa), HL
     177.  00:82CC  C3 E7 82            	JP		.fin_carga_niveles
     178.  00:82CF                      	
     179.  00:82CF                      .carga_nivel_6:
     180.  00:82CF  21 CA B8            	LD		HL, tiles_patrones_nivel6
     181.  00:82D2  22 14 83            	LD		(tiles_patrones), HL
     182.  00:82D5  21 7F BA            	LD		HL, tiles_color_nivel6
     183.  00:82D8  22 16 83            	LD		(tiles_colores), HL
     184.  00:82DB  21 CA B8            	LD		HL, tiles_patrones_nivel6
     185.  00:82DE  22 14 83            	LD		(tiles_patrones), HL
     186.  00:82E1  21 C6 BA            	LD		HL, tiles_mapa_nivel6
     187.  00:82E4  22 18 83            	LD		(tiles_mapa), HL
     188.  00:82E7                      ;	JP		.fin_carga niveles			;no necesario
     189.  00:82E7                      .fin_carga_niveles:
     190.  00:82E7                      
     191.  00:82E7                      	;cargando banco 1
     192.  00:82E7                      	;cargamos los patrones
     193.  00:82E7  2A 14 83            	LD		HL, (tiles_patrones)
     194.  00:82EA  11 00 00            	LD		DE, CHRTBL
     195.  00:82ED  CD 28 9C            	CALL	depack_VRAM
     196.  00:82F0                      	;cargamos los colores de los patrones
     197.  00:82F0  2A 16 83            	LD		HL, (tiles_colores)
     198.  00:82F3  11 00 20            	LD		DE, CLRTBL
     199.  00:82F6  CD 28 9C            	CALL	depack_VRAM
     200.  00:82F9                      	
     201.  00:82F9                      	;cargando banco 2
     202.  00:82F9                      	;cargamos los patrones
     203.  00:82F9  2A 14 83            	LD		HL, (tiles_patrones)
     204.  00:82FC  11 00 08            	LD		DE, CHRTBL + #0800
     205.  00:82FF  CD 28 9C            	CALL	depack_VRAM	
     206.  00:8302                      	;cargamos los colores de los patrones
     207.  00:8302  2A 16 83            	LD		HL, (tiles_colores)
     208.  00:8305  11 00 28            	LD		DE, CLRTBL + #0800
     209.  00:8308  CD 28 9C            	CALL	depack_VRAM
     210.  00:830B                      	
     211.  00:830B                      	;cargamos mapa de pantalla banco 1 y 2
     212.  00:830B  2A 18 83            	LD		HL, (tiles_mapa)
     213.  00:830E  11 00 18            	LD		DE, TILMAP
     214.  00:8311  C3 28 9C            	JP		depack_VRAM
     215.  00:8314                      fin_pinta_parte_superior_pantalla:
     216.  00:8314  00 00               tiles_patrones:		DW	0
     217.  00:8316  00 00               tiles_colores:		DW	0
     218.  00:8318  00 00               tiles_mapa:			DW	0
     219.  00:831A                      
     220.  00:831A                      
     221.  00:831A                      ;;=====================================================
     222.  00:831A                      ;;PINTA_PARTE_INFERIOR_PANTALLA
     223.  00:831A                      ;;=====================================================	
     224.  00:831A                      ; función: pinta la parte inferior del escenario que es común
     225.  00:831A                      ; entrada: -
     226.  00:831A                      ; salida: -
     227.  00:831A                      ; toca: si no son todos los regristros, casi todos
     228.  00:831A                      pinta_parte_inferior_pantalla:
     229.  00:831A                      	;cangando banco 3
     230.  00:831A                      	;cargamos los patrones
     231.  00:831A  21 FB BA            	LD		HL,tiles_patrones_marcador
     232.  00:831D  11 00 10            	LD		DE,CHRTBL + #1000
     233.  00:8320  CD 28 9C            	CALL	depack_VRAM	
     234.  00:8323                      	;cargamos mapa de pantalla
     235.  00:8323  21 7C BC            	LD		HL,tiles_mapa_marcador
     236.  00:8326  11 00 1A            	LD		DE,TILMAP + #0200
     237.  00:8329  CD 28 9C            	CALL	depack_VRAM
     238.  00:832C                      	;cargamos los colores de los patrones
     239.  00:832C  21 47 BC            	LD		HL,tiles_color_marcador
     240.  00:832F  11 00 30            	LD		DE,CLRTBL + #1000
     241.  00:8332  C3 28 9C            	JP		depack_VRAM
     242.  00:8335                      fin_pinta_parte_inferior_pantalla:
     243.  00:8335                      
     244.  00:8335                      
     245.  00:8335                      
     246.  00:8335                      ;;=====================================================
     247.  00:8335                      ;;PINTA_VIDAS
     248.  00:8335                      ;;=====================================================	
     249.  00:8335                      ; función: 	actualiza el mapa de tiles para que en el próximo refresco se pinten y actualiza_vidas
     250.  00:8335                      ; entrada: 	array_aux_vidas
     251.  00:8335                      ; salida: 	actualiza_vidas_sn
     252.  00:8335                      ; toca:		todo
     253.  00:8335                      pinta_vidas:
     254.  00:8335  CD E1 80            	CALL	actualiza_marcador_vidas
     255.  00:8338                      	
     256.  00:8338  21 BC A9            	LD		HL, array_aux_vidas
     257.  00:833B  11 48 1A            	LD		DE, TILMAP + POSVIDAS 	;inicio posición en el mapa de tiles de las vidas
     258.  00:833E  01 08 00            	LD		BC, NMAXVIDREL			;hay 8 posiciones para vidas/reliquias o espacios en negro si no tiene 8 vidas/reliquias
     259.  00:8341  C3 5C 00            	JP		LDIRVM
     260.  00:8344                      fin_pinta_vidas:
     261.  00:8344                      	
     262.  00:8344                      	
     263.  00:8344                      
     264.  00:8344                      ;;=====================================================
     265.  00:8344                      ;;PINTA_RELIQUIAS
     266.  00:8344                      ;;=====================================================	
     267.  00:8344                      ; función: 	actualiza el mapa de tiles para que en el próximo refresco se pinten y actualiza_reliquias
     268.  00:8344                      ; entrada: 	array_aux_reliquias
     269.  00:8344                      ; salida: 	-
     270.  00:8344                      ; toca:		todo
     271.  00:8344                      pinta_reliquias:
     272.  00:8344  CD FA 80            	CALL	actualiza_buffer_reliquias
     273.  00:8347                      	
     274.  00:8347  21 C4 A9            	LD		HL, array_aux_reliquias
     275.  00:834A  11 C8 1A            	LD		DE, TILMAP + POSRELIQ 	;inicio posición en el mapa de tiles de las vidas
     276.  00:834D  01 08 00            	LD		BC, NMAXVIDREL			;hay 8 posiciones para vidas/reliquias o espacios en negro si no tiene 8 vidas/reliquias
     277.  00:8350  C3 5C 00            	JP		LDIRVM
     278.  00:8353                      fin_pinta_reliquias:
     279.  00:8353                      	
     280.  00:8353                      
     281.  00:8353                      
     282.  00:8353                      	
     283.  00:8353                      ;;=====================================================
     284.  00:8353                      ;;PINTA_NIVEL
     285.  00:8353                      ;;=====================================================	
     286.  00:8353                      ; función: 	actualiza el nivel en la parte de puntuación
     287.  00:8353                      ; entrada: 	prota_nivel
     288.  00:8353                      ; salida: 	-
     289.  00:8353                      ; toca:		HL,DE,BC
     290.  00:8353                      pinta_nivel:
     291.  00:8353                      	;forma más avanzada sin llamada a la bios
     292.  00:8353  01 B4 1A            	LD		BC,TILMAP + POSNIVEL ;posición en el mapa de tiles del tile de nivel
     293.  00:8356  3A B6 A9            	LD		 A, (prota_nivel)	 ;seleccionando la pos del banco de tiles a poner en el mapa
     294.  00:8359  C6 30               	ADD		'0'	
     295.  00:835B  57                  	LD		 D, A
     296.  00:835C                      	
     297.  00:835C  C3 5F 83            	JP		pinta_tile_suelto
     298.  00:835F                      fin_pinta_nivel:
     299.  00:835F                      
     300.  00:835F                      
     301.  00:835F                      
     302.  00:835F                      ;;=====================================================
     303.  00:835F                      ;;PINTA_TILE_SUELTO
     304.  00:835F                      ;;=====================================================	
     305.  00:835F                      ; función: 	pinta al tile que digamos en D, en la posición BC
     306.  00:835F                      ; entrada: 	BC (posición a pintar en el mapa),D (qué se va a pintar el esa posición)
     307.  00:835F                      ; salida: 	-
     308.  00:835F                      ; toca:		A
     309.  00:835F                      pinta_tile_suelto:	
     310.  00:835F  DB 99               	IN		 A,(REGEST)		;leer registro de estado (recomendado)
     311.  00:8361  79                  	LD		 A,C			;primero byte bajo	
     312.  00:8362  D3 99               	OUT		(REGEST),A
     313.  00:8364  78                  	LD		 A,B			;después byte alto  ********************** preguntar a Fernando cómo que byte bajo es B
     314.  00:8365  F6 40               	OR		1000000b		;+64
     315.  00:8367  D3 99               	OUT		(REGEST),A
     316.  00:8369                      	
     317.  00:8369  7A                  	LD		A,D
     318.  00:836A  D3 98               	OUT		(REGESCVDP),A	;escribe A en VRAM en la posición indicada por los dos OUT anteriores
     319.  00:836C                      fin_pinta_tile_suelto:
     320.  00:836C  C9                  	RET
     321.  00:836D                      
     322.  00:836D                      
     323.  00:836D                      
     324.  00:836D                      
     325.  00:836D                      
     326.  00:836D                      ;;=====================================================
     327.  00:836D                      ;;MIRA_PINTA ENERGIA
     328.  00:836D                      ;;=====================================================	
     329.  00:836D                      ; función: 	actualiza el nivel de energia en la parte de puntuación
     330.  00:836D                      ; nota:		el cuadrado más bajo de ejergía siempre estará pintado... se obviará
     331.  00:836D                      ; entrada: 	prota.energia, array_aux_energia
     332.  00:836D                      ; salida: 	-
     333.  00:836D                      ; toca:		ninguno porque usa EXX
     334.  00:836D                      
     335.  00:836D                      ; nota importante... lo mismo interesa hacer esto con un array para comparar y un bucle
     336.  00:836D                      
     337.  00:836D                      mira_pinta_energia:
     338.  00:836D  D9                  	EXX							;por si acaso guardo el contenido de HL (si veo que no es necesario guardarlo lo quito) uso esto en vez de push por el nº ciclos
     339.  00:836E                      	
     340.  00:836E  3A BB A9            	LD		 A,(prota_energia) 	;para las comparaciones A variable (actual) y B fijo (limites)
     341.  00:8371                      
     342.  00:8371  0E 00               	LD		 C,TILENEGRO		;para agilizar asignaciones en vez de un valor cte uso otro registro
     343.  00:8373                      pinta_ener:
     344.  00:8373                      pinta_ener_tile_8:
     345.  00:8373  21 D3 A9            	LD		HL,ultimo_pos_array_aux_energia	;coloco puntero en array e iré decrementando
     346.  00:8376  06 D9               	LD		 B,TILEENERG8
     347.  00:8378  B8                  	CP		 B
     348.  00:8379  38 04               	JR		C,pinta_ener_tile_8_negro
     349.  00:837B  36 0E               	LD		(HL),TILEMAPVERD
     350.  00:837D  18 01               	JR		pinta_ener_tile_7
     351.  00:837F                      pinta_ener_tile_8_negro:
     352.  00:837F  71                  	LD		(HL),C
     353.  00:8380                      
     354.  00:8380                      pinta_ener_tile_7:
     355.  00:8380  2B                  	DEC		HL
     356.  00:8381  06 BA               	LD		 B,TILEENERG7
     357.  00:8383  B8                  	CP		 B
     358.  00:8384  38 04               	JR		C,pinta_ener_tile_7_negro
     359.  00:8386  36 0E               	LD		(HL),TILEMAPVERD
     360.  00:8388  18 01               	JR		pinta_ener_tile_6
     361.  00:838A                      pinta_ener_tile_7_negro:
     362.  00:838A  71                  	LD		(HL),C
     363.  00:838B                      
     364.  00:838B                      pinta_ener_tile_6:
     365.  00:838B  2B                  	DEC		HL
     366.  00:838C  06 9B               	LD		 B,TILEENERG6
     367.  00:838E  B8                  	CP		 B
     368.  00:838F  38 04               	JR		C,pinta_ener_tile_6_negro
     369.  00:8391  36 0E               	LD		(HL),14
     370.  00:8393  18 01               	JR		pinta_ener_tile_5
     371.  00:8395                      pinta_ener_tile_6_negro:
     372.  00:8395  71                  	LD		(HL),C
     373.  00:8396                      
     374.  00:8396                      pinta_ener_tile_5:
     375.  00:8396  2B                  	DEC		HL
     376.  00:8397  06 7C               	LD		 B,TILEENERG5
     377.  00:8399  B8                  	CP		 B
     378.  00:839A  38 04               	JR		C,pinta_ener_tile_5_negro
     379.  00:839C  36 0E               	LD		(HL),TILEMAPVERD
     380.  00:839E  18 01               	JR		pinta_ener_tile_4
     381.  00:83A0                      pinta_ener_tile_5_negro:
     382.  00:83A0  71                  	LD		(HL),C
     383.  00:83A1                      
     384.  00:83A1                      pinta_ener_tile_4:
     385.  00:83A1  2B                  	DEC		HL
     386.  00:83A2  06 5D               	LD		 B,TILEENERG4
     387.  00:83A4  B8                  	CP		 B
     388.  00:83A5  38 04               	JR		C,pinta_ener_tile_4_negro
     389.  00:83A7  36 0F               	LD		(HL),TILEMAPAMAR
     390.  00:83A9  18 01               	JR		pinta_ener_tile_3
     391.  00:83AB                      pinta_ener_tile_4_negro:
     392.  00:83AB  71                  	LD		(HL),C
     393.  00:83AC                      	
     394.  00:83AC                      pinta_ener_tile_3:
     395.  00:83AC  2B                  	DEC		HL
     396.  00:83AD  06 3E               	LD		 B,TILEENERG3
     397.  00:83AF  B8                  	CP		 B
     398.  00:83B0  38 04               	JR		C,pinta_ener_tile_3_negro
     399.  00:83B2  36 0F               	LD		(HL),TILEMAPAMAR
     400.  00:83B4  18 01               	JR		pinta_ener_tile_2
     401.  00:83B6                      pinta_ener_tile_3_negro:
     402.  00:83B6  71                  	LD		(HL),C
     403.  00:83B7                      
     404.  00:83B7                      pinta_ener_tile_2:
     405.  00:83B7  2B                  	DEC		HL
     406.  00:83B8  06 1F               	LD		 B,TILEENERG2
     407.  00:83BA  B8                  	CP		 B
     408.  00:83BB  38 04               	JR		C,pinta_ener_tile_2_negro
     409.  00:83BD  36 10               	LD		(HL),TILEMAPROJO
     410.  00:83BF  18 01               	JR		fin_mira_pinta_energia		;siempre estará pintado el cuadro mínimo
     411.  00:83C1                      pinta_ener_tile_2_negro:
     412.  00:83C1  71                  	LD		(HL),C
     413.  00:83C2                      
     414.  00:83C2                      fin_mira_pinta_energia:
     415.  00:83C2  D9                  	EXX
     416.  00:83C3  C9                  	RET
     417.  00:83C4                      
     418.  00:83C4                      
     419.  00:83C4                      ;;=====================================================
     420.  00:83C4                      ;;PINTA_ENERGIA
     421.  00:83C4                      ;;=====================================================	
     422.  00:83C4                      ; función: 	actualiza el mapa de tiles para que en el próximo refresco se pinte la barra de energia actual
     423.  00:83C4                      ; entrada: 	array_aux_energia
     424.  00:83C4                      ; toca:		todo
     425.  00:83C4                      pinta_energia:
     426.  00:83C4  CD 6D 83            	CALL	mira_pinta_energia
     427.  00:83C7                      	
     428.  00:83C7  21 CC A9            	LD		HL, array_aux_energia
     429.  00:83CA  11 88 1A            	LD		DE, TILMAP + POSENERG 	;inicio posición en el mapa de tiles de las vidas
     430.  00:83CD  01 08 00            	LD		BC, NMAXVIDREL			;hay 8 posiciones para vidas/reliquias o espacios en negro si no tiene 8 vidas/reliquias
     431.  00:83D0  C3 5C 00            	JP		LDIRVM
     432.  00:83D3                      fin_pinta_energia:
     433.  00:83D3                      
     434.  00:83D3                      
     435.  00:83D3                      
     436.  00:83D3                      ;;=====================================================
     437.  00:83D3                      ;;BORRA_MAPA
     438.  00:83D3                      ;;=====================================================	
     439.  00:83D3                      ; función: 	pone todas las habitaciones del mapa a negro (los tiles del mapa los rellena con un array a 0 - caracter en negro)
     440.  00:83D3                      ; entrada: 	array_aux_mapa_limpiar
     441.  00:83D3                      ; salida: 	-
     442.  00:83D3                      ; toca:		AF
     443.  00:83D3                      borra_mapa:
     444.  00:83D3  D9                  	EXX
     445.  00:83D4                      	
     446.  00:83D4  21 D4 A9            	LD		HL,array_aux_mapa_limpiar
     447.  00:83D7  11 F8 1A            	LD		DE,TILMAP + POSMAPLIN1 	;inicio posición en el mapa de tiles de la primera fila del mapa
     448.  00:83DA  01 07 00            	LD		BC,NHABNIVEL			;cada nivel son 7 filas con 7 habitaciones "posibles"
     449.  00:83DD  CD 5C 00            	CALL	LDIRVM
     450.  00:83E0                      	
     451.  00:83E0  21 D4 A9            	LD		HL,array_aux_mapa_limpiar
     452.  00:83E3  11 D8 1A            	LD		DE,TILMAP + POSMAPLIN2
     453.  00:83E6  01 07 00            	LD		BC,NHABNIVEL
     454.  00:83E9  CD 5C 00            	CALL	LDIRVM
     455.  00:83EC                      
     456.  00:83EC  21 D4 A9            	LD		HL,array_aux_mapa_limpiar
     457.  00:83EF  11 B8 1A            	LD		DE,TILMAP + POSMAPLIN3
     458.  00:83F2  01 07 00            	LD		BC,NHABNIVEL
     459.  00:83F5  CD 5C 00            	CALL	LDIRVM
     460.  00:83F8                      
     461.  00:83F8  21 D4 A9            	LD		HL,array_aux_mapa_limpiar	
     462.  00:83FB  11 98 1A            	LD		DE,TILMAP + POSMAPLIN4
     463.  00:83FE  01 07 00            	LD		BC,NHABNIVEL
     464.  00:8401  CD 5C 00            	CALL	LDIRVM
     465.  00:8404                      
     466.  00:8404  21 D4 A9            	LD		HL,array_aux_mapa_limpiar	
     467.  00:8407  11 78 1A            	LD		DE,TILMAP + POSMAPLIN5
     468.  00:840A  01 07 00            	LD		BC,NHABNIVEL
     469.  00:840D  CD 5C 00            	CALL	LDIRVM
     470.  00:8410                      
     471.  00:8410  21 D4 A9            	LD		HL,array_aux_mapa_limpiar	
     472.  00:8413  11 58 1A            	LD		DE,TILMAP + POSMAPLIN6
     473.  00:8416  01 07 00            	LD		BC,NHABNIVEL
     474.  00:8419  CD 5C 00            	CALL	LDIRVM
     475.  00:841C                      
     476.  00:841C  21 D4 A9            	LD		HL,array_aux_mapa_limpiar	
     477.  00:841F  11 38 1A            	LD		DE,TILMAP + POSMAPLIN7
     478.  00:8422  01 07 00            	LD		BC,NHABNIVEL
     479.  00:8425  CD 5C 00            	CALL	LDIRVM
     480.  00:8428                      	
     481.  00:8428  D9                  	EXX
     482.  00:8429                      fin_borra_mapa:
     483.  00:8429  C9                  	RET
     484.  00:842A                      
     485.  00:842A                      
     486.  00:842A                      
     487.  00:842A                      
     488.  00:842A                      
     489.  00:842A                      
     490.  00:842A                      
     491.  00:842A                      ;;=====================================================
     492.  00:842A                      ;;POSICIONA_EN_MAPA
     493.  00:842A                      ;;=====================================================	
     494.  00:842A                      ; función: 	en el mapa de marcadores de la derecha/abajo marca un cuadro en gris o con un muñeco
     495.  00:842A                      ;			según el valor de prota.posición pinta entrá un muñeco y por donde vaya pasando el prota
     496.  00:842A                      ;			quedará en gris
     497.  00:842A                      ; entrada: 	elemento_pintar_mapa  A , prota_pos_mapy, prota_pos_mapx
     498.  00:842A                      ; salida: 	-
     499.  00:842A                      ; toca:		todos
     500.  00:842A                      posiciona_en_mapa:
     501.  00:842A                      	;#0238 es la posición en mapa de tiles de la esquina superior izquierda del mapa (569 en decimal)
     502.  00:842A  21 38 1A            	LD		HL, TILMAP + POSMAPA;pos inicial
     503.  00:842D                      	
     504.  00:842D                      	;ahora se le calcula la fila a pintar ya que va de abajo a arriba y no como en el mapa + columna
     505.  00:842D                      .sumar_fila:
     506.  00:842D  3A BA A9            	LD		 A, (prota_pos_mapy)
     507.  00:8430  FE 01               	CP		 1
     508.  00:8432  28 2A               	JR		 Z, .fila_1
     509.  00:8434  3A BA A9            	LD		 A, (prota_pos_mapy)
     510.  00:8437  FE 02               	CP		 2
     511.  00:8439  28 2A               	JR		 Z, .fila_2
     512.  00:843B  3A BA A9            	LD		 A, (prota_pos_mapy)
     513.  00:843E  FE 03               	CP		 3
     514.  00:8440  28 2A               	JR		 Z, .fila_3
     515.  00:8442  3A BA A9            	LD		 A, (prota_pos_mapy)
     516.  00:8445  FE 04               	CP		 4
     517.  00:8447  28 2A               	JR		 Z, .fila_4
     518.  00:8449  3A BA A9            	LD		 A, (prota_pos_mapy)
     519.  00:844C  FE 05               	CP		 5
     520.  00:844E  28 2A               	JR		 Z, .fila_5
     521.  00:8450  3A BA A9            	LD		 A, (prota_pos_mapy)
     522.  00:8453  FE 06               	CP		 6
     523.  00:8455  28 2A               	JR		 Z, .sumar_columna
     524.  00:8457                      	;no consulto la 0 porque si no es ninguna de las anteriores es 0 y por tanto sería un jr fila_0
     525.  00:8457                      	
     526.  00:8457                      .fila_0:
     527.  00:8457  11 C0 00            	LD		DE, 192
     528.  00:845A  19                  	ADD		HL, DE			;nota: se que repito el ADD pero la otra opción es inicializar DE y ya tarda mucho la funicón (es por velicidad)
     529.  00:845B  C3 81 84            	JP		.sumar_columna
     530.  00:845E                      .fila_1:
     531.  00:845E  11 A0 00            	LD		DE, 160
     532.  00:8461  19                  	ADD		HL, DE
     533.  00:8462  C3 81 84            	JP		.sumar_columna
     534.  00:8465                      .fila_2:
     535.  00:8465  11 80 00            	LD		DE, 128
     536.  00:8468  19                  	ADD		HL, DE
     537.  00:8469  C3 81 84            	JP		.sumar_columna
     538.  00:846C                      .fila_3:
     539.  00:846C  11 60 00            	LD		DE, 96
     540.  00:846F  19                  	ADD		HL, DE
     541.  00:8470  C3 81 84            	JP		.sumar_columna
     542.  00:8473                      .fila_4:
     543.  00:8473  11 40 00            	LD		DE, 64
     544.  00:8476  19                  	ADD		HL, DE
     545.  00:8477  C3 81 84            	JP		.sumar_columna
     546.  00:847A                      .fila_5:
     547.  00:847A  11 20 00            	LD		DE, 32
     548.  00:847D  19                  	ADD		HL, DE
     549.  00:847E  C3 81 84            	JP		.sumar_columna
     550.  00:8481                      .fila_6:
     551.  00:8481                      	;pongo fila_6 por poner ya que si es la fila 6 equiv. a primera fila del mapa y por tanto no suma fila
     552.  00:8481                      	
     553.  00:8481                      	
     554.  00:8481                      .sumar_columna:
     555.  00:8481  3A B9 A9            	LD 		 A, (prota_pos_mapx) ;POS X
     556.  00:8484  16 00               	LD		 D, 0
     557.  00:8486  5F                  	LD		 E, A
     558.  00:8487  19                  	ADD		HL, DE
     559.  00:8488                      	
     560.  00:8488                      	;resultado en BC para usar en la función pinta_tile_suelto
     561.  00:8488  44                  	LD		 B, H
     562.  00:8489  4D                  	LD		 C, L
     563.  00:848A                      	
     564.  00:848A                      	;terminado de fijar la coordenada recuperamos a para ver el tipo
     565.  00:848A  3A DB A9            	LD		 A, (elemento_pintar_mapa)
     566.  00:848D  FE 09               	CP		 TILEGRISM
     567.  00:848F  CA 97 84            	JP		 Z, pinta_pos_mapa_vacio
     568.  00:8492  16 13               	LD		 D, TILEPROTAM
     569.  00:8494  C3 99 84            	JP		fin_pinta_pos_mapa
     570.  00:8497                      pinta_pos_mapa_vacio:
     571.  00:8497  16 09               	LD		 D, TILEGRISM	
     572.  00:8499                      
     573.  00:8499                      fin_pinta_pos_mapa:
     574.  00:8499  C3 5F 83            	JP		pinta_tile_suelto
     575.  00:849C                      fin_posiciona_en_mapa:
     576.  00:849C                      
     577.  00:849C                      
     578.  00:849C                      
     579.  00:849C                      
     580.  00:849C                      ;;=====================================================
     581.  00:849C                      ;;EFECTO_IMAGEN_TIRA_RELIQUIA
     582.  00:849C                      ;;=====================================================	
     583.  00:849C                      ; función: 	hace que el fondo de la pantalla parpadee N veces
     584.  00:849C                      ; entrada: 	actualiza_reliquias_sn
     585.  00:849C                      ; salida: 	-
     586.  00:849C                      ; toca: 	todo
     587.  00:849C                      efecto_imagen_tira_reliquia:
     588.  00:849C  3E 14               	LD		 A, 20;RETARDOREL
     589.  00:849E  47                  	LD		 B, A
     590.  00:849F                      
     591.  00:849F                      .parpadea_fondo:
     592.  00:849F  C5                  	PUSH	BC
     593.  00:84A0  21 A0 A9            	LD		HL, color_bomba1
     594.  00:84A3  CD C3 81            	CALL	color_pantalla
     595.  00:84A6                      	
     596.  00:84A6                      	;~ PUSH	BC
     597.  00:84A6                      	;~ LD		 A, 255
     598.  00:84A6                      	;~ LD		 B, A
     599.  00:84A6                      ;~ .bucle_de_espera:
     600.  00:84A6                      	;~ NOP
     601.  00:84A6                      	;~ DJNZ	 .bucle_de_espera
     602.  00:84A6                      	;~ POP		BC
     603.  00:84A6  76                  	HALT
     604.  00:84A7                      
     605.  00:84A7                      	
     606.  00:84A7  21 A3 A9            	LD		HL, color_bomba2
     607.  00:84AA  CD C3 81            	CALL	color_pantalla
     608.  00:84AD  C1                  	POP		BC
     609.  00:84AE  10 EF               	DJNZ	.parpadea_fondo
     610.  00:84B0                      	
     611.  00:84B0  21 9D A9            	LD		HL, color_base
     612.  00:84B3  C3 C3 81            	JP		color_pantalla
     613.  00:84B6                      fin_efecto_imagen_tira_reliquia:
     614.  00:84B6                      
     615.  00:84B6                      
     616.  00:84B6                      
     617.  00:84B6                      
     618.  00:84B6                      ;=====================================================
     619.  00:84B6                      ;;PINTA_ARRAY
     620.  00:84B6                      ;;=====================================================	
     621.  00:84B6                      ;;funcion:  (pinta el mismo tile) se le pasa un array con posiciones de tiles y coordenadas x e y y los pinta en screen 2
     622.  00:84B6                      ;;entrada:	wordaux1 (pos inicio sc2 donde pintar) y wordaux2 (puntero al array a pintar), BC (posición en tilemap) , D filas y E columnas
     623.  00:84B6                      ;;salida:	-
     624.  00:84B6                      ;;importante: necesita de una variable wordaux1 tipo WD (wordaux1: 	DW	0)
     625.  00:84B6                      ;; ejemplo llamada:
     626.  00:84B6                      	;~ LD		HL,array_tiles					;guardo puntero al array a pintar (como psar por referencia)
     627.  00:84B6                      	;~ LD		(wordaux2),HL					;en la variable wordaux2
     628.  00:84B6                      	;~ LD		HL,SC2MAP + 256 + 32			;calcula posición en tilemap
     629.  00:84B6                      	;~ LD		(wordaux1),HL					;guarda valor pos tilemap en wordaux1
     630.  00:84B6                      	;~ LD		B,H								;coloca posición tilemap BC
     631.  00:84B6                      	;~ LD		C,L
     632.  00:84B6                      	;~ LD		D,2								;nº de filas ahora byteaux1
     633.  00:84B6                      	;~ LD		E,3								;nº de columnas ahora byteaux2
     634.  00:84B6                      	;~ CALL	pinta_array
     635.  00:84B6                      
     636.  00:84B6                      pinta_array:
     637.  00:84B6  08                  	EX		AF, AF'
     638.  00:84B7                      	
     639.  00:84B7  3A FA 84            	LD		 A, (byteaux1)
     640.  00:84BA  57                  	LD		 D, A
     641.  00:84BB  3A FB 84            	LD		 A, (byteaux2)
     642.  00:84BE  5F                  	LD		 E, A
     643.  00:84BF                      	
     644.  00:84BF  2A F6 84            	LD		HL, (wordaux1)
     645.  00:84C2  44                  	LD		 B, H							;coloca posición tilemap BC
     646.  00:84C3  4D                  	LD		 C, L
     647.  00:84C4                      	
     648.  00:84C4                      	;contamos con que la posición "global" en el tilemap está ya en BC
     649.  00:84C4                      	;y el puntero al array a pintar en wordaux2 y la posición en tilemap sc2 en wordaux1
     650.  00:84C4                      	;inicializa
     651.  00:84C4  DB 99               	IN		 A,(REGEST)		;leer registro de estado (recomendado)
     652.  00:84C6                      	
     653.  00:84C6                      	;coloca puntero para pintar tile según BC
     654.  00:84C6  79                  	LD		 A,C			;primero byte bajo	
     655.  00:84C7  D3 99               	OUT		(REGEST),A
     656.  00:84C9  78                  	LD		 A,B			;después byte alto  ********************** preguntar a Fernando cómo que byte bajo es B
     657.  00:84CA  F6 40               	OR		1000000b		;+64
     658.  00:84CC  D3 99               	OUT		(REGEST),A
     659.  00:84CE                      
     660.  00:84CE                      	
     661.  00:84CE  2A F8 84            	LD		HL,(wordaux2)	;HL es lo que se pintará y le he pasado el puntero del array tilemap a pintar
     662.  00:84D1                      .pa_pinta_fila:
     663.  00:84D1  43                  	LD		 B,E
     664.  00:84D2                      .pa_pinta_columnas: 		;finta la fila (pintando las columnas)
     665.  00:84D2  7E                  	LD		 A,(HL)
     666.  00:84D3  D3 98               	OUT		(REGESCVDP),A	;escribe A en VRAM en la posición indicada por los dos OUT anteriores
     667.  00:84D5  23                  	INC		HL
     668.  00:84D6  10 FA               	DJNZ	.pa_pinta_columnas
     669.  00:84D8                      	
     670.  00:84D8                      	;no es una solución elegante lo de repetir código pero queda claro
     671.  00:84D8                      	;por si hay otra fila
     672.  00:84D8  E5                  	PUSH	HL
     673.  00:84D9  2A F6 84            	LD		HL,(wordaux1)
     674.  00:84DC  01 20 00            	LD		BC,32
     675.  00:84DF  09                  	ADD		HL,BC
     676.  00:84E0  22 F6 84            	LD		(wordaux1),HL
     677.  00:84E3  44                  	LD		B,H
     678.  00:84E4  4D                  	LD		C,L
     679.  00:84E5  E1                  	POP		HL
     680.  00:84E6                      	
     681.  00:84E6  79                  	LD		 A,C			;primero byte bajo	
     682.  00:84E7  D3 99               	OUT		(REGEST),A
     683.  00:84E9  78                  	LD		 A,B			;después byte alto 
     684.  00:84EA  F6 40               	OR		1000000b		;+64
     685.  00:84EC  D3 99               	OUT		(REGEST),A
     686.  00:84EE                      	
     687.  00:84EE                      	;si hay otra fila repite
     688.  00:84EE  15                  	DEC		 D
     689.  00:84EF  7A                  	LD		 A,D		;¿hay otra fila?
     690.  00:84F0  B7                  	OR		 A
     691.  00:84F1  C4 D1 84            	CALL	NZ,.pa_pinta_fila
     692.  00:84F4                      	
     693.  00:84F4  08                  	EX		AF, AF'
     694.  00:84F5                      fin_pinta_array:
     695.  00:84F5  C9                  	RET
     696.  00:84F6                      ;;variables asocidas a la función pinta_array
     697.  00:84F6                      ;; por de pronto la dejo aquí
     698.  00:84F6  00 00               wordaux1:		DW	0	;almacena la posición en el tilemap 0 al 675
     699.  00:84F8  00 00               wordaux2:		DW	0	;almacena puntero a array de tiles (posiciones en realidad) a pintar (posiciones repetidas en los 2 primeros bancos)
     700.  00:84FA  00                  byteaux1:		DB	0	;nº filas Registro D
     701.  00:84FB  00                  byteaux2:		DB	0	;nº columnas Registro E
     702.  00:84FC                      
     703.  00:84FC                      
     704.  00:84FC                      
     705.  00:84FC                      
     706.  00:84FC                      ;;=====================================================
     707.  00:84FC                      ;;INICIALIZA_ANTORCHAS
     708.  00:84FC                      ;;=====================================================	
     709.  00:84FC                      ; función: 	inicializa las variables de estructuras de las antorchas
     710.  00:84FC                      ; entrada: 	antorchas, array_antorcha
     711.  00:84FC                      ; salida: 	
     712.  00:84FC                      ; toca:		HL, IX
     713.  00:84FC                      inicializa_antorchas:
     714.  00:84FC  DD 21 DC A9         	LD		IX, antorchas
     715.  00:8500  DD 36 00 00         	LD		(IX), INACTIVA
     716.  00:8504  21 E3 A9            	LD		HL, array_antorcha
     717.  00:8507  DD 74 01            	LD		(IX + 1), H
     718.  00:850A  DD 75 02            	LD		(IX + 2), L
     719.  00:850D  DD 36 03 88         	LD		(IX + 3), POSANTOR1
     720.  00:8511  DD 36 04 97         	LD		(IX + 4), POSANTOR2
     721.  00:8515  DD 36 05 00         	LD		(IX + 5), 0
     722.  00:8519  DD 36 06 FF         	LD		(IX + 6), RESETLLAMA
     723.  00:851D                      fin_inicializa_antorchas:
     724.  00:851D  C9                  	RET
     725.  00:851E                      
     726.  00:851E                      
     727.  00:851E                      ;;=====================================================
     728.  00:851E                      ;;INICIALIZA_esqueletos
     729.  00:851E                      ;;=====================================================	
     730.  00:851E                      ; función: 	inicializa las variables de estructuras de los esqueletos
     731.  00:851E                      ; entrada: 	esqueletos, array_esqueletos
     732.  00:851E                      ; salida: 	
     733.  00:851E                      ; toca:		HL, IX
     734.  00:851E                      inicializa_esqueletos:
     735.  00:851E  DD 21 E6 A9         	LD		IX, esqueletos
     736.  00:8522  DD 36 00 00         	LD		(IX), INACTIVA
     737.  00:8526  21 ED A9            	LD		HL, array_esqueleto
     738.  00:8529  DD 74 01            	LD		(IX + 1), H
     739.  00:852C  DD 75 02            	LD		(IX + 2), L
     740.  00:852F  DD 36 03 88         	LD		(IX + 3), POSESQUEL1
     741.  00:8533  DD 36 04 95         	LD		(IX + 4), POSESQUEL2
     742.  00:8537  DD 36 05 00         	LD		(IX + 5), 0
     743.  00:853B  DD 36 06 19         	LD		(IX + 6), RESETESQUEL
     744.  00:853F                      fin_inicializa_esqueletos:
     745.  00:853F  C9                  	RET
     746.  00:8540                      	
     747.  00:8540                      
     748.  00:8540                      ;;=====================================================
     749.  00:8540                      ;;PINTA_ANTORCHAS
     750.  00:8540                      ;;=====================================================	
     751.  00:8540                      ; función: 	pinta las antorchas con valores base
     752.  00:8540                      ; entrada: 	antorchas, array_antorcha
     753.  00:8540                      ; salida: 	
     754.  00:8540                      ; toca:		HL
     755.  00:8540                      pinta_extra_fondo:
     756.  00:8540  DD 21 DC A9         	LD		IX, antorchas
     757.  00:8544                      .examina_sihay_antorchas
     758.  00:8544                      	;hay que pintarlas?
     759.  00:8544  3A 89 A6            	LD		 A, (habitacion_extras)
     760.  00:8547  CB 47               	BIT		 0, A
     761.  00:8549  C2 53 85            	JP		NZ, .hayantorchas			;si el bit 0 de extras es 0 no se pintan antorchas
     762.  00:854C  DD 36 00 00         	LD		(IX), INACTIVA
     763.  00:8550  C3 7C 85            	JP		.examina_sihay_esqueletos
     764.  00:8553                      	
     765.  00:8553                      .hayantorchas:
     766.  00:8553  DD 36 00 01         	LD		(IX), ACTIVA
     767.  00:8557                      	;pinta antorcha izquierdda
     768.  00:8557  DD 66 01            	LD		 H, (IX + 1)
     769.  00:855A  DD 6E 02            	LD		 L, (IX + 2)
     770.  00:855D  22 F8 84            	LD		(wordaux2), HL				;guarda pos array en wordaux2
     771.  00:8560                      	
     772.  00:8560  21 88 18            	LD		HL, TILMAP + POSANTOR1		;calcula posición en tilemap
     773.  00:8563  22 F6 84            	LD		(wordaux1), HL				;guarda valor pos tilemap en wordaux1
     774.  00:8566                      
     775.  00:8566  3E 03               	LD		 A, 3						;nº de filas	
     776.  00:8568  32 FA 84            	LD		(byteaux1), A
     777.  00:856B  3E 01               	LD		 A, 1						;nº de columnas
     778.  00:856D  32 FB 84            	LD		(byteaux2), A				
     779.  00:8570                      	
     780.  00:8570  CD B6 84            	CALL	pinta_array
     781.  00:8573                      	
     782.  00:8573                      	;pinta antorcha derecha
     783.  00:8573  21 97 18            	LD		HL, TILMAP + POSANTOR2		;calcula posición en tilemap
     784.  00:8576  22 F6 84            	LD		(wordaux1), HL				;guarda valor pos tilemap en wordaux1
     785.  00:8579                      	
     786.  00:8579  C3 B6 84            	JP		pinta_array 				;no ecesita CALL ya que la subrutina termina aquí
     787.  00:857C                      	
     788.  00:857C                      .examina_sihay_esqueletos
     789.  00:857C  DD 21 E6 A9         	LD		IX, esqueletos
     790.  00:8580                      	;hay que pintarlos?
     791.  00:8580  3A 88 A6            	LD		 A, (habitacion_actual)
     792.  00:8583  CB 6F               	BIT		 5, A
     793.  00:8585  C2 8D 85            	JP		NZ, .hayesqueletos			;si el bit 0 de extras es 0 no se pintan antorchas
     794.  00:8588  DD 36 00 00         	LD		(IX), INACTIVA
     795.  00:858C  C9                  	RET									;no hay que pintarlo. no hay que continuar
     796.  00:858D                      
     797.  00:858D                      .hayesqueletos
     798.  00:858D  DD 36 00 01         	LD		(IX), ACTIVA
     799.  00:8591                      	;pinta antorcha izquierdda
     800.  00:8591  DD 66 01            	LD		 H, (IX + 1)
     801.  00:8594  DD 6E 02            	LD		 L, (IX + 2)
     802.  00:8597  22 F8 84            	LD		(wordaux2), HL				;guarda pos array en wordaux2
     803.  00:859A                      	
     804.  00:859A  21 88 18            	LD		HL, TILMAP + POSESQUEL1		;calcula posición en tilemap
     805.  00:859D  22 F6 84            	LD		(wordaux1), HL				;guarda valor pos tilemap en wordaux1
     806.  00:85A0                      
     807.  00:85A0  3E 04               	LD		 A, 4						;nº de filas	
     808.  00:85A2  32 FA 84            	LD		(byteaux1), A
     809.  00:85A5  3E 03               	LD		 A, 3						;nº de columnas
     810.  00:85A7  32 FB 84            	LD		(byteaux2), A				
     811.  00:85AA                      	
     812.  00:85AA  CD B6 84            	CALL	pinta_array
     813.  00:85AD                      	
     814.  00:85AD                      	;pinta antorcha derecha
     815.  00:85AD  21 95 18            	LD		HL, TILMAP + POSESQUEL2		;calcula posición en tilemap
     816.  00:85B0  22 F6 84            	LD		(wordaux1), HL				;guarda valor pos tilemap en wordaux1
     817.  00:85B3                      	
     818.  00:85B3  C3 B6 84            	JP		pinta_array 				;no ecesita CALL ya que la subrutina termina aquí
     819.  00:85B6                      fin_pinta_extra_fondo:
     820.  00:85B6  C9                  	RET
     821.  00:85B7                      
     822.  00:85B7                      
     823.  00:85B7                      
     824.  00:85B7                      ;;=====================================================
     825.  00:85B7                      ;;ACTUALIZA_ELEMENTOS_FONDO
     826.  00:85B7                      ;;=====================================================	
     827.  00:85B7                      ; función: 	de los elementos que pueda haber en el fondo de la pared (pantalla) actualiza si procede
     828.  00:85B7                      ;			actualmente: antorchas y a futuro esqueletos
     829.  00:85B7                      ; entrada: 	
     830.  00:85B7                      ; salida: 	
     831.  00:85B7                      ; toca:		A
     832.  00:85B7                      actualiza_elementos_fondo:
     833.  00:85B7                      .examina_antorchas:
     834.  00:85B7  DD 21 DC A9         	LD		IX, antorchas
     835.  00:85BB  DD 7E 00            	LD		 A, (IX)
     836.  00:85BE  B7                  	OR		 A
     837.  00:85BF  CA C5 85            	JP 	 	 Z, .examina_esqueletos
     838.  00:85C2                      	
     839.  00:85C2  CD D1 85            	CALL	flip_llamas_antorchas
     840.  00:85C5                      .examina_esqueletos:
     841.  00:85C5  DD 21 E6 A9         	LD		IX, esqueletos
     842.  00:85C9  DD 7E 00            	LD		 A, (IX)
     843.  00:85CC  B7                  	OR		 A
     844.  00:85CD  C8                  	RET	 	 Z
     845.  00:85CE                      	
     846.  00:85CE  C3 2E 86            	JP		flip_calavera_esqueletos
     847.  00:85D1                      fin_actualiza_elementos_fondo:
     848.  00:85D1                      
     849.  00:85D1                      
     850.  00:85D1                      
     851.  00:85D1                      
     852.  00:85D1                      ;;=====================================================
     853.  00:85D1                      ;;FLIP_LLAMAS_ANTORCHAS
     854.  00:85D1                      ;;=====================================================	
     855.  00:85D1                      ; función: 	modifica las llamas de las antorchas con los tipos que hay
     856.  00:85D1                      ; entrada: 	
     857.  00:85D1                      ; salida: 	
     858.  00:85D1                      ; toca:		
     859.  00:85D1                      flip_llamas_antorchas:
     860.  00:85D1  DD 21 DC A9         	LD		IX, antorchas
     861.  00:85D5                      	;tiene que cambiar de llama?
     862.  00:85D5  DD 7E 06            	LD		 A, (IX + 6)
     863.  00:85D8  3D                  	DEC		 A
     864.  00:85D9  DD 77 06            	LD		 (IX + 6), A
     865.  00:85DC                      	;no
     866.  00:85DC  C0                  	RET		NZ
     867.  00:85DD                      	;si
     868.  00:85DD  C5                  	PUSH	BC
     869.  00:85DE  D5                  	PUSH	DE
     870.  00:85DF                      	
     871.  00:85DF  DD 36 06 FF         	LD		(IX + 6), RESETLLAMA	
     872.  00:85E3                      	
     873.  00:85E3                      	;qué llama toca?
     874.  00:85E3  DD 7E 05            	LD		 A, (IX + 5)
     875.  00:85E6  B7                  	OR		 A
     876.  00:85E7  CA 0B 86            	JP		 Z, .llama_par
     877.  00:85EA                      .llama_impar
     878.  00:85EA                      	;cambio a llama par
     879.  00:85EA  AF                   	XOR		 A
     880.  00:85EB  DD 77 05            	LD		(IX + 5), A
     881.  00:85EE                      	;pinto llamas
     882.  00:85EE  01 00 18            	LD		BC, TILMAP
     883.  00:85F1  3E 88               	LD		 A, POSANTOR1
     884.  00:85F3  CD A3 81            	CALL	suma_A_BC
     885.  00:85F6  16 C4               	LD		 D, MAPLLAMA1
     886.  00:85F8  CD 5F 83            	CALL	pinta_tile_suelto
     887.  00:85FB                      	
     888.  00:85FB  01 00 18            	LD		BC, TILMAP
     889.  00:85FE  3E 97               	LD		 A, POSANTOR2
     890.  00:8600  CD A3 81            	CALL	suma_A_BC
     891.  00:8603  16 C5               	LD		 D, MAPLLAMA2
     892.  00:8605  CD 5F 83            	CALL	pinta_tile_suelto	
     893.  00:8608  C3 2A 86            	JP		fin_flip_llamas_antorchas
     894.  00:860B                      	
     895.  00:860B                      .llama_par
     896.  00:860B                      	;cambio a llama par
     897.  00:860B  3E 01                	LD		 A, 1
     898.  00:860D  DD 77 05            	LD		(IX + 5), A
     899.  00:8610                      	;pinto llamas
     900.  00:8610  01 00 18            	LD		BC, TILMAP
     901.  00:8613  3E 88               	LD		 A, POSANTOR1
     902.  00:8615  CD A3 81            	CALL	suma_A_BC
     903.  00:8618  16 C5               	LD		 D, MAPLLAMA2
     904.  00:861A  CD 5F 83            	CALL	pinta_tile_suelto
     905.  00:861D                      	
     906.  00:861D  01 00 18            	LD		BC, TILMAP
     907.  00:8620  3E 97               	LD		 A, POSANTOR2
     908.  00:8622  CD A3 81            	CALL	suma_A_BC
     909.  00:8625  16 C4               	LD		 D, MAPLLAMA1
     910.  00:8627  CD 5F 83            	CALL	pinta_tile_suelto
     911.  00:862A                      
     912.  00:862A                      fin_flip_llamas_antorchas:
     913.  00:862A                      	;restauro los balores de los registros tocados antes
     914.  00:862A  D1                  	POP		DE
     915.  00:862B  C1                  	POP		BC
     916.  00:862C  F1                  	POP		AF
     917.  00:862D                      
     918.  00:862D  C9                  	RET
     919.  00:862E                      
     920.  00:862E                      
     921.  00:862E                      ;;=====================================================
     922.  00:862E                      ;;FLIP_CALAVERA_ESQUELETOS
     923.  00:862E                      ;;=====================================================	
     924.  00:862E                      ; función: 	modifica las calaveras de los esqueletos
     925.  00:862E                      ; entrada: 	
     926.  00:862E                      ; salida: 	
     927.  00:862E                      ; toca:		TODOS.... muy importante DE
     928.  00:862E                      flip_calavera_esqueletos:
     929.  00:862E  DD 21 E6 A9         	LD		IX, esqueletos
     930.  00:8632                      	
     931.  00:8632                      	;tiene que cambiar de calavera?
     932.  00:8632  DD 7E 06            	LD		 A, (IX + ESTRUCTURA_ESQUELETO.cont_sig_escena)
     933.  00:8635  3D                  	DEC		 A
     934.  00:8636  DD 77 06            	LD		 (IX + ESTRUCTURA_ESQUELETO.cont_sig_escena), A
     935.  00:8639                      	;no
     936.  00:8639  C0                  	RET		NZ
     937.  00:863A                      	;si
     938.  00:863A  DD 36 06 19         	LD		(IX + ESTRUCTURA_ESQUELETO.cont_sig_escena), RESETESQUEL		;resetea contador de nueve escena
     939.  00:863E                      	
     940.  00:863E  CD 5C 86            	CALL	actualiza_escena_calavera
     941.  00:8641                      
     942.  00:8641                      	;pinto calaveras
     943.  00:8641  01 00 18            	LD		BC, TILMAP
     944.  00:8644  3E A9               	LD		 A, POSCALAVE1
     945.  00:8646  CD A3 81            	CALL	suma_A_BC
     946.  00:8649  D5                  	PUSH	DE
     947.  00:864A  56                  	LD		 D, (HL)
     948.  00:864B  CD 5F 83            	CALL	pinta_tile_suelto
     949.  00:864E                      	
     950.  00:864E  01 00 18            	LD		BC, TILMAP
     951.  00:8651  3E B6               	LD		 A, POSCALAVE2
     952.  00:8653  CD A3 81            	CALL	suma_A_BC
     953.  00:8656  E1                  	POP		HL
     954.  00:8657  56                  	LD		 D, (HL)
     955.  00:8658  C3 5F 83            	JP		pinta_tile_suelto	
     956.  00:865B                      fin_flip_calavera_esqueletos:
     957.  00:865B  00                  var_aux_calavera	DB	0;
     958.  00:865C                      
     959.  00:865C                      
     960.  00:865C                      ;;=====================================================
     961.  00:865C                      ;;ACTUALIZA_ESCENA_CALAVERA
     962.  00:865C                      ;;=====================================================	
     963.  00:865C                      ; función: 	modifica las siguiente calavera a mostrar
     964.  00:865C                      ; entrada: 	
     965.  00:865C                      ; salida: 	DE (iportante porque se usa fuera) y ESTRUCTURA_ESQUELETO.escena
     966.  00:865C                      ; toca:		TODOS.... muy importante DE
     967.  00:865C                      actualiza_escena_calavera:
     968.  00:865C                      	;consulta_escena
     969.  00:865C  DD 7E 05            	LD		 A, (IX + ESTRUCTURA_ESQUELETO.escena)
     970.  00:865F  32 5B 86            	LD		(var_aux_calavera), A
     971.  00:8662  B7                  	OR		 A
     972.  00:8663  C2 68 86            	JP		 NZ, .decrementa_escenas
     973.  00:8666  3E 04               	LD		 A, RESETESCENAESQUEL
     974.  00:8668                      .decrementa_escenas
     975.  00:8668  3D                  	DEC		 A
     976.  00:8669                      .fin_consulta_escena
     977.  00:8669  DD 77 05            	LD		 (IX + ESTRUCTURA_ESQUELETO.escena), A
     978.  00:866C                      	
     979.  00:866C  21 F9 A9            	LD		HL, lista_escenas_calavera
     980.  00:866F  3A 5B 86            	LD		 A, (var_aux_calavera)
     981.  00:8672  CD A9 81            	CALL	suma_A_HL
     982.  00:8675                      	
     983.  00:8675  54                  	LD		 D, H
     984.  00:8676  5D                  	LD		 E, L
     985.  00:8677                      fin_actualiza_escena_calavera:
     986.  00:8677  C9                  	RET
     987.  00:8678                      
     165   00:8678                      	
     166   00:8678                      	include "subr_puertas.asm"
       1.  00:8678                      ;;=====================================================
       2.  00:8678                      ;;SUBRUTINAS RELACIONADAS CON LAS PUERTAS
       3.  00:8678                      ;;=====================================================
       4.  00:8678                      
       5.  00:8678                      
       6.  00:8678                      ;;=====================================================
       7.  00:8678                      ;;VARIABLES
       8.  00:8678                      ;;=====================================================
       9.  00:8678                      
      10.  00:8678                      ;; arrays con mapa de tiles de las puertas
      11.  00:8678                      array_puerta_arriba:
      12.  00:8678  03 01 01 03         	DB	3,1,1,3
      13.  00:867C  01 01 01 01         	DB	1,1,1,1
      14.  00:8680  01 01 01 01         	DB	1,1,1,1
      15.  00:8684  01 01 01 01         	DB	1,1,1,1
      16.  00:8688  01 01 01 01         	DB	1,1,1,1
      17.  00:868C                      
      18.  00:868C                      array_puerta_derecha:
      19.  00:868C  01 03 03            	DB	1,3,3
      20.  00:868F  01 01 03            	DB	1,1,3
      21.  00:8692  01 01 01            	DB	1,1,1
      22.  00:8695  01 01 01            	DB	1,1,1
      23.  00:8698  01 01 01            	DB	1,1,1
      24.  00:869B  02 01 01            	DB	2,1,1
      25.  00:869E  04 02 01            	DB	4,2,1
      26.  00:86A1                      	
      27.  00:86A1                      array_puerta_abajo:			
      28.  00:86A1  01 01 01 01         	DB	1,1,1,1
      29.  00:86A5                      
      30.  00:86A5                      array_puerta_izquierda:
      31.  00:86A5  03 03 01            	DB	3,3,1
      32.  00:86A8  03 01 01            	DB	3,1,1
      33.  00:86AB  01 01 01            	DB	1,1,1
      34.  00:86AE  01 01 01            	DB	1,1,1
      35.  00:86B1  01 01 01            	DB	1,1,1
      36.  00:86B4  01 01 02            	DB	1,1,2
      37.  00:86B7  01 02 04            	DB	1,2,4
      38.  00:86BA                      
      39.  00:86BA                      array_escalera:
      40.  00:86BA                      	DB	5,5,5,5,5,5,5,5
      40.  00:86BA  05 05 05 05 05 05 05 05 
      41.  00:86C2                      	DB	5,0,0,0,1,1,1,5
      41.  00:86C2  05 00 00 00 01 01 01 05 
      42.  00:86CA                      	DB	5,0,0,0,1,1,1,5
      42.  00:86CA  05 00 00 00 01 01 01 05 
      43.  00:86D2                      	DB	5,0,0,6,6,6,6,5
      43.  00:86D2  05 00 00 06 06 06 06 05 
      44.  00:86DA                      	DB	5,0,6,6,6,6,6,5
      44.  00:86DA  05 00 06 06 06 06 06 05 
      45.  00:86E2                      	DB	5,6,6,6,6,6,6,5
      45.  00:86E2  05 06 06 06 06 06 06 05 
      46.  00:86EA                      
      47.  00:86EA                      
      48.  00:86EA                      
      49.  00:86EA                      lista_puertas:
      50.  00:86EA  00 (13)             puerta_arriba:		DS		ESTRUCTURA_PUERTA
      51.  00:86F7  00 (13)             puerta_derecha:		DS		ESTRUCTURA_PUERTA
      52.  00:8704  00 (13)             puerta_abajo:		DS		ESTRUCTURA_PUERTA
      53.  00:8711  00 (13)             puerta_izquierda:	DS		ESTRUCTURA_PUERTA
      54.  00:871E  00 (13)             puerta_escalera:	DS		ESTRUCTURA_PUERTA
      55.  00:872B                      
      56.  00:872B                      datos_puertas:
      57.  00:872B                      datos_puerta_escalera:
      58.  00:872B  00                  					DB		#00;0		; 0 no activa <>0 activo
      59.  00:872C  80                  					DB		#80;128		;punto x de la puerta para cuando se dispare encima
      60.  00:872D  30                  					DB		#30;48		;punto y de la puerta para cuando se dispare encima
      61.  00:872E  20                  					DB		#20;32		;radio x de la puerta para cuando se dispare encima
      62.  00:872F  18                  					DB		#18;24		;radio y de la puerta para cuando se dispare encima
      63.  00:8730  A6 87               					DW		accion_puerta_arriba;función para acción de cada tipo de puerta
      64.  00:8732  BA 86               					DW		array_escalera		;puntero al array con los tiles de las puertas
      65.  00:8734  6C 18               					DW		TILMAP + POSESCALERA
      66.  00:8736  06                  					DB		6			;alto/filas
      67.  00:8737  08                  					DB		8			;ancho/columnas
      68.  00:8738                      
      69.  00:8738                      datos_puerta_arriba:
      70.  00:8738  00                  					DB		#00;0		;0 no activa <>0 activo
      71.  00:8739  80                  					DB		#80;128		;punto x de la puerta para cuando se dispare encima
      72.  00:873A  34                  					DB		#34;52		;punto y de la puerta para cuando se dispare encima
      73.  00:873B  10                  					DB		#10;16		;radio x de la puerta para cuando se dispare encima
      74.  00:873C  14                  					DB		#14;20		;radio y de la puerta para cuando se dispare encima
      75.  00:873D  A6 87               					DW		accion_puerta_arriba	;función para acción de cada tipo de puerta
      76.  00:873F  78 86               					DW		array_puerta_arriba		;puntero al array con los tiles de las puertas
      77.  00:8741  8E 18               					DW		TILMAP + POSPUERARRI
      78.  00:8743  05                  					DB		5			;alto/filas
      79.  00:8744  04                  					DB		4			;ancho/columnas
      80.  00:8745                      
      81.  00:8745                      datos_puerta_derecha:
      82.  00:8745  00                  					DB		#00;0		;0 no activa <>0 activo
      83.  00:8746  EC                  					DB		#EC;236		;punto x de la puerta para cuando se dispare encima
      84.  00:8747  54                  					DB		#54;84		;punto y de la puerta para cuando se dispare encima
      85.  00:8748  0C                  					DB		#0C;12		;radio x de la puerta para cuando se dispare encima
      86.  00:8749  14                  					DB		#14;20		;radio y de la puerta para cuando se dispare encima
      87.  00:874A  C9 87               					DW		accion_puerta_derecha	;función para acción de cada tipo de puerta
      88.  00:874C  8C 86               					DW		array_puerta_derecha	;puntero al array con los tiles de las puertas
      89.  00:874E  FC 18               					DW		TILMAP + POSPUERDERE
      90.  00:8750  07                  					DB		7			;alto/filas
      91.  00:8751  03                  					DB		3			;ancho/columnas
      92.  00:8752                      					
      93.  00:8752                      datos_puerta_abajo:
      94.  00:8752  00                  					DB		#00;0		;0 no activa <>0 activo
      95.  00:8753  80                  					DB		#80;128		;punto x de la puerta para cuando se dispare encima
      96.  00:8754  7C                  					DB		#7C;124		;punto y de la puerta para cuando se dispare encima
      97.  00:8755  05                  					DB		#05;5		;radio x de la puerta para cuando se dispare encima  **********************************
      98.  00:8756  10                  					DB		#10;16		;radio y de la puerta para cuando se dispare encima
      99.  00:8757  D6 87               					DW		accion_puerta_abajo		;función para acción de cada tipo de puerta
     100.  00:8759  A1 86               					DW		array_puerta_abajo		;puntero al array con los tiles de las puertas
     101.  00:875B  EE 19               					DW		TILMAP + POSPUERABAJ
     102.  00:875D  01                  					DB		1			;alto/filas
     103.  00:875E  04                  					DB		4			;ancho/columnas
     104.  00:875F                      
     105.  00:875F                      datos_puerta_izquierda:
     106.  00:875F  00                  					DB		#00;0		;0 no activa <>0 activo
     107.  00:8760  18                  					DB		#18;24		;punto x de la puerta para cuando se dispare encima
     108.  00:8761  54                  					DB		#54;84		;punto y de la puerta para cuando se dispare encima
     109.  00:8762  0C                  					DB		#0C;12		;radio x de la puerta para cuando se dispare encima
     110.  00:8763  14                  					DB		#14;20		;radio y de la puerta para cuando se dispare encima
     111.  00:8764  F9 87               					DW		accion_puerta_izquierda	;función para acción de cada tipo de puerta
     112.  00:8766  A5 86               					DW		array_puerta_izquierda	;puntero al array con los tiles de las puertas
     113.  00:8768  E1 18               					DW		TILMAP + POSPUERIZQU
     114.  00:876A  07                  					DB		7			;alto/filas
     115.  00:876B  03                  					DB		3			;ancho/columnas
     116.  00:876C                      
     117.  00:876C                      
     118.  00:876C                      
     119.  00:876C                      ;;=====================================================
     120.  00:876C                      ;;SUBRUTINAS
     121.  00:876C                      ;;=====================================================
     122.  00:876C                      
     123.  00:876C                      
     124.  00:876C                      ;;=====================================================
     125.  00:876C                      ;;INICIALIZA_PUERTAS
     126.  00:876C                      ;;=====================================================	
     127.  00:876C                      ; función: 	inicializa las variables de estructuras de ayuda del array lista_puertas
     128.  00:876C                      ; entrada: 	*********************datos_delasdistintasayudas, variable estructura_ayuda_ayudaquesea
     129.  00:876C                      ; salida: 	lista_ayudas
     130.  00:876C                      ; toca:		-
     131.  00:876C                      inicializa_puertas:
     132.  00:876C  E5                  	PUSH	HL
     133.  00:876D  C5                  	PUSH	BC
     134.  00:876E  D5                  	PUSH	DE
     135.  00:876F                      	
     136.  00:876F                      	;inicializa puerta escalera
     137.  00:876F  21 2B 87            	LD		HL, datos_puerta_escalera	;origen
     138.  00:8772  11 1E 87            	LD		DE, puerta_escalera			;destino
     139.  00:8775  CD A0 87            	CALL	carga_datos_puerta
     140.  00:8778                      
     141.  00:8778                      	;inicializa puerta arriba
     142.  00:8778  21 38 87            	LD		HL, datos_puerta_arriba		;origen
     143.  00:877B  11 EA 86            	LD		DE, puerta_arriba			;destino
     144.  00:877E  CD A0 87            	CALL	carga_datos_puerta
     145.  00:8781                      	
     146.  00:8781                      	;inicializa puerta derecha
     147.  00:8781  21 45 87            	LD		HL, datos_puerta_derecha	;origen
     148.  00:8784  11 F7 86            	LD		DE, puerta_derecha			;destino
     149.  00:8787  CD A0 87            	CALL	carga_datos_puerta
     150.  00:878A                      	
     151.  00:878A                      	;inicializa puerta abajo
     152.  00:878A  21 52 87            	LD		HL, datos_puerta_abajo		;origen
     153.  00:878D  11 04 87            	LD		DE, puerta_abajo			;destino
     154.  00:8790  CD A0 87            	CALL	carga_datos_puerta
     155.  00:8793                      	
     156.  00:8793                      	;inicializa puerta izquierda
     157.  00:8793  21 5F 87            	LD		HL, datos_puerta_izquierda	;origen
     158.  00:8796  11 11 87            	LD		DE, puerta_izquierda		;destino
     159.  00:8799  CD A0 87            	CALL	carga_datos_puerta
     160.  00:879C                      	
     161.  00:879C  D1                  	POP		DE
     162.  00:879D  C1                  	POP		BC
     163.  00:879E  E1                  	POP		HL
     164.  00:879F                      fin_inicializa_puertas:
     165.  00:879F  C9                  	RET
     166.  00:87A0                      
     167.  00:87A0                      
     168.  00:87A0                      
     169.  00:87A0                      ;;=====================================================
     170.  00:87A0                      ;;CARGA_DATOS_PUERTA
     171.  00:87A0                      ;;=====================================================	
     172.  00:87A0                      ; función: 	carga los datos de la puerta de una variable con los datos de la puerta
     173.  00:87A0                      ; entrada
     174.  00:87A0                      ;  hl: origen de datos
     175.  00:87A0                      ;  de: destino de datos
     176.  00:87A0                      ; salida: 	-
     177.  00:87A0                      ; toca:		HL, DE, BC
     178.  00:87A0                      carga_datos_puerta:
     179.  00:87A0  01 0D 00            	LD		BC, ESTRUCTURA_PUERTA ;bytes a mover (el nombre de la estructura equivale al tamaño de la estructura en bytes)
     180.  00:87A3  ED B0               	LDIR
     181.  00:87A5                      fin_carga_datos_puerta:
     182.  00:87A5  C9                  	RET
     183.  00:87A6                      
     184.  00:87A6                      ;;=====================================================
     185.  00:87A6                      ;;ACCION_PUERTA_ARRIBA
     186.  00:87A6                      ;;=====================================================	
     187.  00:87A6                      ; función: 	
     188.  00:87A6                      ; entrada: 	
     189.  00:87A6                      ; salida: 	
     190.  00:87A6                      accion_puerta_arriba:
     191.  00:87A6  CD 94 81            	CALL	pinta_blanco_mapa
     192.  00:87A9                      	
     193.  00:87A9  3A BA A9            	LD		 A, (prota_pos_mapy)
     194.  00:87AC  3C                  	INC		 A
     195.  00:87AD                      	
     196.  00:87AD  FE 07               	CP		 7
     197.  00:87AF  C2 C3 87            	JP		NZ, .no_cambia_nivel
     198.  00:87B2                      .si_cambia_nivel:	
     199.  00:87B2                      	;aquí hay que poner texto de cambio de nivel  ;***************************************************************
     200.  00:87B2                      
     201.  00:87B2                      	;reseteo fila
     202.  00:87B2  AF                  	XOR		 A
     203.  00:87B3  32 BA A9            	LD		(prota_pos_mapy), A
     204.  00:87B6                      	;incremento nivel
     205.  00:87B6  3A B6 A9            	LD		 A, (prota_nivel)
     206.  00:87B9  3C                  	INC		 A
     207.  00:87BA  32 B6 A9            	LD		(prota_nivel), A
     208.  00:87BD                      	;reflejo en pantalla cambio de nivel
     209.  00:87BD  CD 9C 81            	CALL	cambio_nivel
     210.  00:87C0  C3 C6 87            	JP		.fin_cambia_nivel
     211.  00:87C3                      .no_cambia_nivel:
     212.  00:87C3  32 BA A9            	LD		 (prota_pos_mapy), A
     213.  00:87C6                      .fin_cambia_nivel:
     214.  00:87C6  C3 7D 81            	JP		entra_habitacion
     215.  00:87C9                      fin_accion_puerta_arriba:
     216.  00:87C9                      
     217.  00:87C9                      
     218.  00:87C9                      ;;=====================================================
     219.  00:87C9                      ;;ACCION_PUERTA_DERECHA
     220.  00:87C9                      ;;=====================================================	
     221.  00:87C9                      ; función: 	
     222.  00:87C9                      ; entrada: 	
     223.  00:87C9                      ; salida: 	
     224.  00:87C9                      accion_puerta_derecha:
     225.  00:87C9  CD 94 81            	CALL	pinta_blanco_mapa
     226.  00:87CC                      	
     227.  00:87CC  3A B9 A9            	LD		 A, (prota_pos_mapx)
     228.  00:87CF  3C                  	INC		 A
     229.  00:87D0  32 B9 A9            	LD		 (prota_pos_mapx), A
     230.  00:87D3                      
     231.  00:87D3  C3 7D 81            	JP		entra_habitacion
     232.  00:87D6                      fin_accion_puerta_derecha:
     233.  00:87D6                      	
     234.  00:87D6                      
     235.  00:87D6                      ;;=====================================================
     236.  00:87D6                      ;;ACCION_PUERTA_ABAJO
     237.  00:87D6                      ;;=====================================================	
     238.  00:87D6                      ; función: 	
     239.  00:87D6                      ; entrada: 	
     240.  00:87D6                      ; salida: 	
     241.  00:87D6                      accion_puerta_abajo:
     242.  00:87D6  CD 94 81            	CALL	pinta_blanco_mapa
     243.  00:87D9                      	
     244.  00:87D9  3A BA A9            	LD		 A, (prota_pos_mapy)
     245.  00:87DC  3D                  	DEC		 A
     246.  00:87DD                      	;~ OR		 A
     247.  00:87DD                      	;~ JP		NC, .no_cambia_nivel				;no entiendo por qué no funciona... preguntar fernando
     248.  00:87DD  FE FF               	CP		-1
     249.  00:87DF  20 12               	JR		NZ, .no_cambia_nivel
     250.  00:87E1                      .si_cambia_nivel:	
     251.  00:87E1                      	;aquí hay que poner texto de cambio de nivel  ;***************************************************************
     252.  00:87E1                      
     253.  00:87E1                      	;reseteo fila
     254.  00:87E1  3E 06               	LD		 A, 6
     255.  00:87E3  32 BA A9            	LD		(prota_pos_mapy), A
     256.  00:87E6                      	;decremento nivel
     257.  00:87E6  3A B6 A9            	LD		 A, (prota_nivel)
     258.  00:87E9  3D                  	DEC		 A
     259.  00:87EA  32 B6 A9            	LD		(prota_nivel), A
     260.  00:87ED                      	;reflejo en pantalla cambio de nivel
     261.  00:87ED  CD 9C 81            	CALL	cambio_nivel
     262.  00:87F0  C3 F6 87            	JP		.fin_cambia_nivel
     263.  00:87F3                      .no_cambia_nivel:
     264.  00:87F3  32 BA A9            	LD		 (prota_pos_mapy), A
     265.  00:87F6                      .fin_cambia_nivel:
     266.  00:87F6  C3 7D 81            	JP		entra_habitacion
     267.  00:87F9                      fin_accion_puerta_abajo:
     268.  00:87F9                      	
     269.  00:87F9                      	
     270.  00:87F9                      ;;=====================================================
     271.  00:87F9                      ;;ACCION_PUERTA_IZQUIERDA
     272.  00:87F9                      ;;=====================================================	
     273.  00:87F9                      ; función: 	
     274.  00:87F9                      ; entrada: 	
     275.  00:87F9                      ; salida: 	
     276.  00:87F9                      accion_puerta_izquierda:
     277.  00:87F9  CD 94 81            	CALL	pinta_blanco_mapa
     278.  00:87FC                      
     279.  00:87FC  3A B9 A9            	LD		 A, (prota_pos_mapx)
     280.  00:87FF  3D                  	DEC		 A
     281.  00:8800  32 B9 A9            	LD		 (prota_pos_mapx), A
     282.  00:8803                      
     283.  00:8803  C3 7D 81            	JP		entra_habitacion
     284.  00:8806                      fin_accion_puerta_izquierda:
     285.  00:8806                      	
     286.  00:8806                      
     287.  00:8806                      ;;=====================================================
     288.  00:8806                      ;;PINTA_PUERTAS
     289.  00:8806                      ;;=====================================================	
     290.  00:8806                      ; función: 	examina A y mira si tiene que pintar puertas de los lados, arriba o abrajo o las escaleras (o no)
     291.  00:8806                      ; entrada: 	habitacion_actual 1 escalera 1 puerta arriba 1 pu der 1 pu aba 1 pu izq (si es 0 pinta pared)
     292.  00:8806                      ; salida: 	-
     293.  00:8806                      ; toca:		todo
     294.  00:8806                      pinta_puertas:
     295.  00:8806  CD 13 81            	CALL	localiza_info_habitacion	;busca qué puertas debe pintar y lo mete en habitación_actual
     296.  00:8809                      
     297.  00:8809  CD 3F 89            	CALL	desactiva_todas_puertas
     298.  00:880C                      
     299.  00:880C                      	;examina puerta arrba
     300.  00:880C  3A 88 A6            	LD		 A, (habitacion_actual)
     301.  00:880F  CB 5F               	BIT		 3, A					
     302.  00:8811  CA 1F 88            	JP		 Z, .fin_puerta_arriba		;tiene puerta arriba?
     303.  00:8814  CD 63 88            		CALL	pinta_puerta_arr		;pinto puerta ;si es de la fila 7 los datos de la pueta de arriba serán los de una escalera
     304.  00:8817  DD 21 EA 86         		LD		IX, puerta_arriba		
     305.  00:881B  DD 36 00 01         		LD		(IX), 1					;activo puerta
     306.  00:881F                      .fin_puerta_arriba:
     307.  00:881F                      
     308.  00:881F                      	;examina puerta derecha
     309.  00:881F  3A 88 A6            	LD		 A, (habitacion_actual)
     310.  00:8822  CB 57               	BIT		 2, A
     311.  00:8824  CA 32 88            	JP		 Z, .fin_puerta_derecha		;tiene puerta derecha?
     312.  00:8827  CD 7C 88            		CALL	pinta_puerta_der		;pinto puerta
     313.  00:882A  DD 21 F7 86         		LD		IX, puerta_derecha
     314.  00:882E  DD 36 00 01         		LD		(IX), 1					;activo puerta
     315.  00:8832                      .fin_puerta_derecha:
     316.  00:8832                      
     317.  00:8832                      	;examina puerta abajo
     318.  00:8832  3A 88 A6            	LD		 A, (habitacion_actual)
     319.  00:8835  CB 4F               	BIT		 1, A
     320.  00:8837  CA 45 88            	JP		 Z, .fin_puerta_abajo		;tiene puerta derecha?
     321.  00:883A  CD 59 88            		CALL	pinta_puerta_aba		;pinto puerta
     322.  00:883D  DD 21 04 87         		LD		IX, puerta_abajo	
     323.  00:8841  DD 36 00 01         		LD		(IX), 1					;activo puerta
     324.  00:8845                      .fin_puerta_abajo:
     325.  00:8845                      
     326.  00:8845                      	;examina puerta izquierda
     327.  00:8845  3A 88 A6            	LD		 A, (habitacion_actual)
     328.  00:8848  CB 47               	BIT		 0, A
     329.  00:884A  CA 58 88            	JP		 Z, fin_pinta_puertas		;tiene puerta derecha?
     330.  00:884D  CD 86 88            		CALL	pinta_puerta_izq		;pinto puerta
     331.  00:8850  DD 21 11 87         		LD		IX, puerta_izquierda	
     332.  00:8854  DD 36 00 01         		LD		(IX), 1					;activo puerta
     333.  00:8858                      fin_pinta_puertas:
     334.  00:8858  C9                  	RET
     335.  00:8859                      
     336.  00:8859                      
     337.  00:8859                      ;;=====================================================
     338.  00:8859                      ;;PINTA_PUERTA_ABA
     339.  00:8859                      ;;=====================================================	
     340.  00:8859                      ; función: 	pinta la puerta de abajo
     341.  00:8859                      ; entrada: 	puerta_abajo
     342.  00:8859                      ; salida: 	-
     343.  00:8859                      ; toca:		A, HL,BC, DE
     344.  00:8859                      pinta_puerta_aba:
     345.  00:8859  DD 21 04 87         	LD		IX, puerta_abajo
     346.  00:885D  CD 90 88            	CALL	actualiza_variables_pinta_array
     347.  00:8860                      		
     348.  00:8860  C3 B6 84            	JP		pinta_array
     349.  00:8863                      fin_pinta_puerta_aba:
     350.  00:8863                      
     351.  00:8863                      
     352.  00:8863                      ;;=====================================================
     353.  00:8863                      ;;PINTA_PUERTA_ARR
     354.  00:8863                      ;;=====================================================	
     355.  00:8863                      ; función: 	pinta la puerta de arriba
     356.  00:8863                      ; entrada: 	puerta_arriba
     357.  00:8863                      ; salida: 	-
     358.  00:8863                      ; toca:		IX
     359.  00:8863                      pinta_puerta_arr:
     360.  00:8863  3A BA A9            	LD		 A, (prota_pos_mapy)
     361.  00:8866  FE 06               	CP		 6								;en la fila 6 la única puerta arriba será una escalera
     362.  00:8868  C2 72 88            	JP		NZ, .pinta_puerta_normal
     363.  00:886B                      .pinta_puerta_escalera
     364.  00:886B  DD 21 1E 87         		LD		IX, puerta_escalera
     365.  00:886F  C3 76 88            		JP		.fin_si
     366.  00:8872                      .pinta_puerta_normal
     367.  00:8872  DD 21 EA 86         		LD		IX, puerta_arriba	
     368.  00:8876                      .fin_si
     369.  00:8876  CD 90 88            	CALL	actualiza_variables_pinta_array
     370.  00:8879  C3 B6 84            	JP		pinta_array
     371.  00:887C                      fin_pinta_puerta_arr:
     372.  00:887C                      
     373.  00:887C                      
     374.  00:887C                      ;;=====================================================
     375.  00:887C                      ;;PINTA_PUERTA_DER
     376.  00:887C                      ;;=====================================================	
     377.  00:887C                      ; función: 	pinta la puerta de la derecha
     378.  00:887C                      ; entrada: 	puerta_derecha
     379.  00:887C                      ; salida: 	-
     380.  00:887C                      ; toca:		HL,BC, DE
     381.  00:887C                      pinta_puerta_der:
     382.  00:887C  DD 21 F7 86         	LD		IX, puerta_derecha
     383.  00:8880  CD 90 88            	CALL	actualiza_variables_pinta_array
     384.  00:8883                      	
     385.  00:8883  C3 B6 84            	JP		pinta_array
     386.  00:8886                      fin_pinta_puerta_der:
     387.  00:8886                      
     388.  00:8886                      	
     389.  00:8886                      ;;=====================================================
     390.  00:8886                      ;;PINTA_PUERTA_IZQ
     391.  00:8886                      ;;=====================================================	
     392.  00:8886                      ; función: 	pinta la puerta de la izquierda
     393.  00:8886                      ; entrada: 	puerta_izquierda
     394.  00:8886                      ; salida: 	-
     395.  00:8886                      ; toca:		HL,BC, DE
     396.  00:8886                      pinta_puerta_izq:
     397.  00:8886  DD 21 11 87         	LD		IX, puerta_izquierda
     398.  00:888A  CD 90 88            	CALL	actualiza_variables_pinta_array
     399.  00:888D                      	
     400.  00:888D  C3 B6 84            	JP		pinta_array
     401.  00:8890                      fin_pinta_puerta_izq:
     402.  00:8890                      
     403.  00:8890                      
     404.  00:8890                      ;;=====================================================
     405.  00:8890                      ;;FIN_ACTUALIZA_VARIABLES_PINTA_ARRAY
     406.  00:8890                      ;;=====================================================	
     407.  00:8890                      ; función: 	como el código es el mismo en esta subrutia se actualizan los valores de wordaux2, wordaux1, byteaux1, byteaux2
     408.  00:8890                      ; entrada: 	IX apuntando a la estructura de una puerta
     409.  00:8890                      ; salida: 	-
     410.  00:8890                      ; toca:		A,HL,BC, DE
     411.  00:8890                      actualiza_variables_pinta_array:
     412.  00:8890  DD 6E 07            	LD		 L, (IX + ESTRUCTURA_PUERTA.tiles_puerta)	;guardo puntero al array a pintar (como pasar por referencia)
     413.  00:8893  DD 66 08            	LD		 H, (IX + ESTRUCTURA_PUERTA.tiles_puerta + 1)
     414.  00:8896  22 F8 84            	LD		(wordaux2), HL						;en la variable wordaux2
     415.  00:8899                      	
     416.  00:8899  DD 6E 09            	LD		 L, (IX + ESTRUCTURA_PUERTA.pos_en_tilemap)	;guardo puntero al array a pintar (como pasar por referencia)
     417.  00:889C  DD 66 0A            	LD		 H, (IX + ESTRUCTURA_PUERTA.pos_en_tilemap + 1)
     418.  00:889F  22 F6 84            	LD		(wordaux1), HL						;guarda valor pos tilemap en wordaux1
     419.  00:88A2                      	
     420.  00:88A2  DD 7E 0B            	LD		 A, (IX + ESTRUCTURA_PUERTA.alto)	;nº de filas
     421.  00:88A5  32 FA 84            	LD		(byteaux1), A
     422.  00:88A8                      	
     423.  00:88A8  DD 7E 0C            	LD		 A, (IX + ESTRUCTURA_PUERTA.ancho)	;nº de columnas
     424.  00:88AB  32 FB 84            	LD		(byteaux2), A
     425.  00:88AE                      fin_actualiza_variables_pinta_array:
     426.  00:88AE  C9                  	RET
     427.  00:88AF                      
     428.  00:88AF                      
     429.  00:88AF                      
     430.  00:88AF                      ;;=====================================================
     431.  00:88AF                      ;;CHECK_COLISIONES_PUERTAS
     432.  00:88AF                      ;;=====================================================	
     433.  00:88AF                      ; función: 	examina si se ha disparado sobre ua puerta activa, si es así, ejecuta la acción correspondiente
     434.  00:88AF                      ; entrada: 	puerta_arriba, puerta_derecha, puerta_abajo, puerta_izquierda
     435.  00:88AF                      ; salida: 	-
     436.  00:88AF                      ; toca:		todo
     437.  00:88AF                      check_colisiones_puertas:
     438.  00:88AF                      .examina_puerta_arriba:
     439.  00:88AF  DD 21 EA 86         	LD		IX, puerta_arriba
     440.  00:88B3  DD 7E 00            	LD		 A, (IX)
     441.  00:88B6  B7                  	OR		 A							;está activa esta puerta?
     442.  00:88B7  CA C5 88            	JP		 Z, .examina_puerta_derecha
     443.  00:88BA                      	
     444.  00:88BA  CD 0E 89            	CALL	check_colision_puerta		;aquí ya es cosa de ver colisiones prota/puerta_izquierda
     445.  00:88BD                      	;recibe valor A
     446.  00:88BD  F6 00               	OR		 0							;hubo colisión?
     447.  00:88BF  CA C5 88            	JP		 Z, .examina_puerta_derecha	;no hubo colisión por lo que examina puerta siguiente
     448.  00:88C2                      	;hubo colisión
     449.  00:88C2                      	;EJECUTA ACCIÓN Y SALE DE LA RUTINA	
     450.  00:88C2  C3 02 89            	JP		.ejecuta_accion_y_sale
     451.  00:88C5                      	
     452.  00:88C5                      .examina_puerta_derecha:
     453.  00:88C5  DD 21 F7 86         	LD		IX, puerta_derecha
     454.  00:88C9  DD 7E 00            	LD		 A, (IX)
     455.  00:88CC  B7                  	OR		 A							;está activa esta puerta?
     456.  00:88CD  CA DB 88            	JP		 Z, .examina_puerta_abajo
     457.  00:88D0  CD 0E 89            	CALL	check_colision_puerta		;aquí ya es cosa de ver colisiones prota/puerta_derecha
     458.  00:88D3                      	;recibe valor
     459.  00:88D3  F6 00               	OR		 0							;hubo colisión?
     460.  00:88D5  CA DB 88            	JP		 Z, .examina_puerta_abajo	;no hubo colisión por lo que examina puerta siguiente
     461.  00:88D8                      	;hubo colisión
     462.  00:88D8                      	;EJECUTA ACCIÓN Y SALE DE LA RUTINA
     463.  00:88D8  C3 02 89            	JP		.ejecuta_accion_y_sale
     464.  00:88DB                      	
     465.  00:88DB                      .examina_puerta_abajo:
     466.  00:88DB  DD 21 04 87         	LD		IX, puerta_abajo
     467.  00:88DF  DD 7E 00            	LD		 A, (IX)
     468.  00:88E2  B7                  	OR		 A							;está activa esta puerta?
     469.  00:88E3  CA F1 88            	JP		 Z, .examina_puerta_izquierda
     470.  00:88E6  CD 0E 89            	CALL	check_colision_puerta		;aquí ya es cosa de ver colisiones prota/puerta_izquierda
     471.  00:88E9                      	
     472.  00:88E9  F6 00               	OR		 0							;hubo colisión?
     473.  00:88EB  CA F1 88            	JP		 Z, .examina_puerta_izquierda;no hubo colisión por lo que examina puerta siguiente
     474.  00:88EE                      	;hubo colisión
     475.  00:88EE                      	;EJECUTA ACCIÓN Y SALE DE LA RUTINA
     476.  00:88EE  C3 02 89            	JP		.ejecuta_accion_y_sale
     477.  00:88F1                      	
     478.  00:88F1                      .examina_puerta_izquierda:
     479.  00:88F1  DD 21 11 87         	LD		IX, puerta_izquierda
     480.  00:88F5  DD 7E 00            	LD		 A, (IX)
     481.  00:88F8  B7                  	OR		 A							;está activa esta puerta?
     482.  00:88F9  CA 0D 89            	JP		 Z, fin_check_colisiones_puertas
     483.  00:88FC  CD 0E 89            	CALL	check_colision_puerta		;aquí ya es cosa de ver colisiones prota/puerta_izquierda
     484.  00:88FF                      	
     485.  00:88FF  F6 00               	OR		 0							;hubo colisión?
     486.  00:8901  C8                  	RET		 Z							;es la última puerta a mirar, si no hubo colisión salimos
     487.  00:8902                      	;hubo colisión
     488.  00:8902                      	;EJECUTA ACCIÓN Y SALE DE LA RUTINA
     489.  00:8902                      	;JP		.ejecuta_accion_y_sale ;no necesaria
     490.  00:8902                      
     491.  00:8902                      .ejecuta_accion_y_sale
     492.  00:8902  21 0D 89            	LD		HL, fin_check_colisiones_puertas ;se guarda dónde volver
     493.  00:8905  E5                  	PUSH	HL
     494.  00:8906                      	
     495.  00:8906  DD 6E 05            	LD		 L, (IX + ESTRUCTURA_PUERTA.accion)
     496.  00:8909  DD 66 06            	LD		 H, (IX + ESTRUCTURA_PUERTA.accion + 1)
     497.  00:890C  E9                  	JP		(HL)
     498.  00:890D                      fin_check_colisiones_puertas:
     499.  00:890D  C9                  	RET
     500.  00:890E                      
     501.  00:890E                      
     502.  00:890E                      ;;=====================================================
     503.  00:890E                      ;;CHECK_COLISION_PUERTA
     504.  00:890E                      ;;=====================================================	
     505.  00:890E                      ; función: 	revisa (con enemigos+ayudas o puertas según si la habitación ha sido recorrida o no) las variables para ver si se disparó sobre ellas
     506.  00:890E                      ; entrada: 	IX con el puntero a la puerta que se examina
     507.  00:890E                      ; salida: 	A (0 no hay colisión con puerta / 1 sí la hay)
     508.  00:890E                      ; toca:		HL,BC, DE
     509.  00:890E                      check_colision_puerta:
     510.  00:890E                      .deteccioncolision_paso1:
     511.  00:890E  FD 21 A6 A9         	LD		IY, prota	;IY punto de mira / IX puerta
     512.  00:8912  FD 7E 00            	LD		 A, (IY + ESTRUCTURA_PUNTOMIRA.posx)
     513.  00:8915  C6 08               	ADD		 8			;8-es fijo, offset del punto de mira ya que se mueve según la esquina superior izquierda y el centro del punto de mira está en el centro del sprite
     514.  00:8917                      	
     515.  00:8917                      	;ya tengo en A la coordenada X del centro del punto de mira					
     516.  00:8917  DD 96 01            	SUB		(IX + ESTRUCTURA_PUERTA.posx)	;le resto el punto x en la puerta
     517.  00:891A                      	
     518.  00:891A  D2 1F 89            	JP		NC, .deteccioncolision_paso2	;si no es negativo comparo con el radio
     519.  00:891D                      
     520.  00:891D  ED 44               	NEG										;si es negativo lo niego (valor absoluto)
     521.  00:891F                      	
     522.  00:891F                      .deteccioncolision_paso2:
     523.  00:891F  DD BE 03            	CP		(IX + ESTRUCTURA_PUERTA.radiox)	;comparo con el radio X de la puerta
     524.  00:8922                      	
     525.  00:8922  DA 27 89            	JP		 C, .deteccioncolision_paso3	;SI NC la distancia es >= por lo que sale y no es necesario verificar nada más
     526.  00:8925                      	
     527.  00:8925  AF                  	XOR		 A								;el resultado es falso y se guarda en A y ya no hay que seguir coprobando
     528.  00:8926  C9                  	RET
     529.  00:8927                      	
     530.  00:8927                      .deteccioncolision_paso3:					;la distancia X es válida, comprobamos la distancia Y
     531.  00:8927  FD 7E 01            	LD		 A, (IY + ESTRUCTURA_PUNTOMIRA.posy)
     532.  00:892A  C6 08               	ADD		 8								;le sumo el offset del punto de mira (8 es fijo)
     533.  00:892C                      
     534.  00:892C                      	;ya tengo en A la coordenada Y del centro del punto de mira					
     535.  00:892C  DD 96 02            	SUB		(IX + ESTRUCTURA_PUERTA.posy)	;le resto el punto y en la puerta
     536.  00:892F                      	
     537.  00:892F  D2 34 89            	JP		NC, .deteccioncolision_paso4	;si no es negativo comparo con el radio
     538.  00:8932                      
     539.  00:8932  ED 44               	NEG										;si es negativo lo niego (valor absoluto)
     540.  00:8934                      
     541.  00:8934                      .deteccioncolision_paso4:
     542.  00:8934  DD BE 04            	CP		(IX + ESTRUCTURA_PUERTA.radioy)	;comparo con el radio Y de la puerta
     543.  00:8937                      
     544.  00:8937  DA 3C 89            	JP		 C, .deteccioncolision_paso5	;SI NC la distancia es >= por lo que sale y no es necesario verificar nada más
     545.  00:893A                      	
     546.  00:893A  AF                  	XOR		 A								;el resultado es falso y se guarda en A un 0 y al ser la 2º comprobación salimos
     547.  00:893B  C9                  	RET
     548.  00:893C                      
     549.  00:893C                      .deteccioncolision_paso5:
     550.  00:893C  3E 01               	LD		 A, SI
     551.  00:893E                      fin_check_colision_puerta:
     552.  00:893E  C9                  	RET
     553.  00:893F                      
     554.  00:893F                      
     555.  00:893F                      
     556.  00:893F                      
     557.  00:893F                      	
     558.  00:893F                      ;;=====================================================
     559.  00:893F                      ;;DESACTIVA_TODAS_PUERTAS
     560.  00:893F                      ;;=====================================================	
     561.  00:893F                      ; función: 	desactiva todas las puertas (es más rápido todas que mirar cuál estaba activa en la habitación aanterior) y ya se activarán las que se muestren
     562.  00:893F                      ; entrada: 	puerta_arriba, puerta_derecha, puerta_abajo, puerta_izquierda
     563.  00:893F                      ; salida: 	las estructuras de la puertas (entrada) con el valor activo a 0 (PUERTAINACT)
     564.  00:893F                      ; toca:		IX
     565.  00:893F                      desactiva_todas_puertas:
     566.  00:893F  DD 21 EA 86         	LD		IX, puerta_arriba		;desactivo_puerta arriba
     567.  00:8943  DD 36 00 00         	LD		(IX), INACTIVA
     568.  00:8947  DD 21 F7 86         	LD		IX, puerta_derecha		;desactivo_puerta derecha
     569.  00:894B  DD 36 00 00         	LD		(IX), INACTIVA
     570.  00:894F  DD 21 04 87         	LD		IX, puerta_abajo		;desactivo_puerta abajo
     571.  00:8953  DD 36 00 00         	LD		(IX), INACTIVA
     572.  00:8957  DD 21 11 87         	LD		IX, puerta_izquierda	;desactivo_puerta izquierda
     573.  00:895B  DD 36 00 00         	LD		(IX), INACTIVA
     574.  00:895F                      fin_desactiva_todas_puertas:
     575.  00:895F  C9                  	RET
     576.  00:8960                      
     167   00:8960                      	
     168   00:8960                      	include "subr_sprites.asm"
       1.  00:8960                      
       2.  00:8960                      ;;=====================================================
       3.  00:8960                      ;;SUBRUTINAS ENCARGADAS DE MANEJAR LOS SPRITES
       4.  00:8960                      ;;=====================================================	
       5.  00:8960                      
       6.  00:8960                      
       7.  00:8960                      ;; PREGUNTAR SI A FERNANDO SI ES MEJOR USAR LISTAS O ALGO PARA AHORRAR CÓDIGO
       8.  00:8960                      
       9.  00:8960                      
      10.  00:8960                      
      11.  00:8960                      
      12.  00:8960                      ;;=====================================================
      13.  00:8960                      ;;CARGA_PATRONES_SPRITES_NIVEL
      14.  00:8960                      ;;=====================================================	
      15.  00:8960                      ; función: 	examina el nivel y carga los patrones específicos necesarios
      16.  00:8960                      ; entrada: 	-
      17.  00:8960                      ; salida: 	-
      18.  00:8960                      ; toca: 	-
      19.  00:8960                      carga_patrones_sprites_nivel:
      20.  00:8960  CD 64 89            	CALL 	carga_patrones_nivel_comunes
      21.  00:8963                      	
      22.  00:8963  C9                  	RET		;*********************
      23.  00:8964                      	
      24.  00:8964                      	
      25.  00:8964                      	;POR AHORA ES TODO COMÚN ... CUANDO EL JUGADOR SE MUEVA LOS PATRONES SERÁN DEPENDIENDO DEL NIVEL
      26.  00:8964                      	; O NO Y LO QUE SE HACE ES PERSONALIZAR LA PANTALLA USANDO LOS MISMOS PATRONES PERO PINTANDO DISTINTOS
      27.  00:8964                      	; EN DISTINTOS SITIOS SEGÚN NIVEL
      28.  00:8964                      	
      29.  00:8964                      	;~ ;carga patrones no comunes
      30.  00:8964                      	;~ LD		 A, (prota_nivel)
      31.  00:8964                      	;~ OR		 A
      32.  00:8964                      	;~ JP		 Z, carga_patrones_sprites_nivel donde esté el prota
      33.  00:8964                      fin_carga_patrones_sprites_nivel:
      34.  00:8964                      
      35.  00:8964                      
      36.  00:8964                      ;;=====================================================
      37.  00:8964                      ;;CARGA_PATRONES_SPRITES_NIVEL_COMUNES
      38.  00:8964                      ;;=====================================================	
      39.  00:8964                      ; función: 	carga los patrones comunes en todos los niveles
      40.  00:8964                      ; entrada: 	-
      41.  00:8964                      ; salida: 	-
      42.  00:8964                      ; toca: 	-
      43.  00:8964                      carga_patrones_nivel_comunes:	
      44.  00:8964  21 08 9D            	LD		HL, sprites_comunes
      45.  00:8967  11 00 38            	LD		DE, SPRTBL
      46.  00:896A  01 C0 00            	LD		BC, fin_sprites_comunes-sprites_comunes
      47.  00:896D  C3 5C 00            	JP		LDIRVM
      48.  00:8970                      fin_carga_patrones_nivel_comunes:
      49.  00:8970                      
      50.  00:8970                      
      51.  00:8970                      ;;=====================================================
      52.  00:8970                      ;;CARGA_PATRONES_SPRITES_NIVEL1
      53.  00:8970                      ;;=====================================================	
      54.  00:8970                      ; función: 	copia los patrones de los sprites que e van a usar en el nivel 1 en vram
      55.  00:8970                      ; entrada: 	-
      56.  00:8970                      ; salida: 	-
      57.  00:8970                      ; toca: 	-
      58.  00:8970                      carga_patrones_sprites_nivel1:
      59.  00:8970                      
      60.  00:8970                      	;~ ;sprite sprite_reliquia
      61.  00:8970                      	;~ LD		HL,sprite_reliquia
      62.  00:8970                      	;~ LD		DE,#3880
      63.  00:8970                      	;~ LD		BC,32				;32 bytes (sprites de 2 x 2)
      64.  00:8970                      	;~ CALL	LDIRVM
      65.  00:8970                      
      66.  00:8970                      fin_carga_patrones_sprites:
      67.  00:8970  C9                  	RET
      68.  00:8971                      
      69.  00:8971                      
      70.  00:8971                      ;;=====================================================
      71.  00:8971                      ;;ACTUALIZA_ARRAY_SPRITES_VRAM
      72.  00:8971                      ;;=====================================================	
      73.  00:8971                      ; función: 	copia el array con los valores de los sprites (pos, color, plano) en VRAM
      74.  00:8971                      ; entrada: 	-
      75.  00:8971                      ; salida: 	-
      76.  00:8971                      ; toca: 	todos los registros. Como me interesa la velocidad, si necesito copiar de algo lo hago fuera
      77.  00:8971                      render_sprites:
      78.  00:8971                      	;volcando el array con toda la info de los sprites a la zona de atributos de sprites
      79.  00:8971  21 FD A9            	LD		HL,array_sprites
      80.  00:8974  11 00 1B            	LD		DE,SPRART
      81.  00:8977  01 80 00            	LD		BC,4 * 32				;32 sprites x 4 bytes controlando el sprite (Y, X, plano, color)
      82.  00:897A  C3 5C 00            	JP		LDIRVM
      83.  00:897D                      fin_actualiza_array_sprites_vram:
      84.  00:897D                      
      85.  00:897D                      
      86.  00:897D                      ;;=====================================================
      87.  00:897D                      ;;VUELCA_RESULTADO_PUNTOMIRA_ARRAY
      88.  00:897D                      ;;=====================================================	
      89.  00:897D                      ; función: 	coloca los valores del punto de mira en la variable array_sprites para ser volcados en VRAM
      90.  00:897D                      ; entrada: 	array_sprites_pm, prota.XXXXX
      91.  00:897D                      ; salida: 	-
      92.  00:897D                      ; toca: 	-
      93.  00:897D                      vuelca_resultado_puntomira_array:
      94.  00:897D  DD 21 FD A9         	LD		IX, array_sprites_pm
      95.  00:8981                      	;posición y de los dos sprites que conforman el punto de mira
      96.  00:8981  3A A7 A9            	LD		 A, (prota.posy)
      97.  00:8984  DD 77 00            	LD		(IX  ), A
      98.  00:8987  DD 77 04            	LD		(IX+4), A
      99.  00:898A                      	;posición x de los dos sprites que conforman el punto de mira
     100.  00:898A  3A A6 A9            	LD		 A, (prota.posx)
     101.  00:898D  DD 77 01            	LD		(IX+1), A
     102.  00:8990  DD 77 05            	LD		(IX+5), A
     103.  00:8993                      	;plano
     104.  00:8993  DD 36 02 00         	LD		(IX+2), 0
     105.  00:8997  DD 36 06 04         	LD		(IX+6), 4	;al ser sprites de 16x16 hay que ir de 4 en 4
     106.  00:899B                      	;color
     107.  00:899B  3A A8 A9            	LD		 A, (prota.escena)
     108.  00:899E  B7                  	OR		 A
     109.  00:899F  C2 AB 89            	JP		NZ,.codigo_color_2
     110.  00:89A2                      .codigo_color_1:
     111.  00:89A2  DD 36 03 0F         	LD		(IX+3), COLBLANCO
     112.  00:89A6  DD 36 07 08         	LD		(IX+7), COLROJO
     113.  00:89AA  C9                  	RET
     114.  00:89AB                      .codigo_color_2:
     115.  00:89AB  DD 36 03 08         	LD		(IX+3), COLROJO
     116.  00:89AF  DD 36 07 0F         	LD		(IX+7), COLBLANCO
     117.  00:89B3  C9                  	RET
     118.  00:89B4                      fin_vuelca_resultado_puntomira_array:
     119.  00:89B4                      
     120.  00:89B4                      
     121.  00:89B4                      ;;=====================================================
     122.  00:89B4                      ;;CHECK_PLAYER
     123.  00:89B4                      ;;=====================================================	
     124.  00:89B4                      ; función: 	MIRA EL CONTROL Y APLICA LA LOGICA DE MOVIMIENTO DEL PROTAGONISTA
     125.  00:89B4                      ; entrada: 	-
     126.  00:89B4                      ; salida: 	-
     127.  00:89B4                      ; toca: 	A
     128.  00:89B4                      check_player:
     129.  00:89B4  CD 56 8A            	CALL	update_controllers_status
     130.  00:89B7  B7                  	OR		 A
     131.  00:89B8  C8                  	RET		 Z						;si no se ha pulsado nada no se necesita mirar nada
     132.  00:89B9                      
     133.  00:89B9  CB 1F               	RR		 A
     134.  00:89BB  DC D4 89            	CALL	 C, mueve_arriba
     135.  00:89BE  CB 1F               	RR		 A
     136.  00:89C0  DC F0 89            	CALL	 C, mueve_abajo
     137.  00:89C3  CB 1F               	RR		 A
     138.  00:89C5  DC FF 89            	CALL	 C, mueve_izquierda
     139.  00:89C8  CB 1F               	RR		 A
     140.  00:89CA  DC E1 89            	CALL	 C, mueve_derecha
     141.  00:89CD                      	
     142.  00:89CD                      	;zona para mirar disparo Recibe A que tendrá 0000 0 0 X-letra M X-espacio 
     143.  00:89CD  CD 0C 8A            	CALL	mira_disparo
     144.  00:89D0                      
     145.  00:89D0  C3 7D 89            	JP		vuelca_resultado_puntomira_array
     146.  00:89D3                      f;in_check_player:
     147.  00:89D3  C9                  	RET
     148.  00:89D4                      
     169   00:89D4                      	
     170   00:89D4                      	include "subr_teclado_joy.asm"
       1.  00:89D4                      ;;=====================================================
       2.  00:89D4                      ;;SUBRUTINAS QUE CAPTURAN EL JOYSTICK Y TECLADO Y MUEVEN PUNTO DE MIRA
       3.  00:89D4                      ;;=====================================================
       4.  00:89D4                      
       5.  00:89D4                      ;;=====================================================
       6.  00:89D4                      ;;MUEVE_ARRIBA
       7.  00:89D4                      ;;=====================================================	
       8.  00:89D4                      ; función: 	decrementa y si se no sale de los límites el valor del punto de mira a la derecha
       9.  00:89D4                      ; entrada: 	-
      10.  00:89D4                      ; salida: 	-
      11.  00:89D4                      ; toca: 	-
      12.  00:89D4                      mueve_arriba:
      13.  00:89D4  F5                  	PUSH		AF
      14.  00:89D5                      	
      15.  00:89D5  3A A7 A9            	LD		 	 A, (prota.posy)
      16.  00:89D8  3D                  	DEC			 A
      17.  00:89D9  CA DF 89            	JP			 Z,.no_decrementa_y
      18.  00:89DC  32 A7 A9            	LD			(prota.posy), A
      19.  00:89DF                      	
      20.  00:89DF                      .no_decrementa_y:
      21.  00:89DF  F1                  	POP			AF
      22.  00:89E0                      fin_mueve_arriba:
      23.  00:89E0  C9                  	RET
      24.  00:89E1                      
      25.  00:89E1                      
      26.  00:89E1                      ;;=====================================================
      27.  00:89E1                      ;;MUEVE_DERECHA
      28.  00:89E1                      ;;=====================================================	
      29.  00:89E1                      ; función: 	incrementa si se no sale de los límites el valor del punto de mira a la derecha
      30.  00:89E1                      ; entrada: 	-
      31.  00:89E1                      ; salida: 	-
      32.  00:89E1                      ; toca: 	-
      33.  00:89E1                      mueve_derecha:
      34.  00:89E1  F5                  	PUSH		AF
      35.  00:89E2                      	
      36.  00:89E2  3A A6 A9            	LD		 	 A, (prota.posx)
      37.  00:89E5  3C                  	INC			 A
      38.  00:89E6  FE EF               	CP			 A, LIMPANTDER - 16
      39.  00:89E8  CA EE 89            	JP			 Z, .no_incrementa_x
      40.  00:89EB  32 A6 A9            	LD			(prota.posx), A
      41.  00:89EE                      	
      42.  00:89EE                      .no_incrementa_x:
      43.  00:89EE  F1                  	POP			AF
      44.  00:89EF                      fin_mueve_derecha:
      45.  00:89EF  C9                  	RET
      46.  00:89F0                      
      47.  00:89F0                      
      48.  00:89F0                      ;;=====================================================
      49.  00:89F0                      ;;MUEVE_ABAJO
      50.  00:89F0                      ;;=====================================================	
      51.  00:89F0                      ; función: 	incrementa y si se no sale de los límites el valor del punto de mira abajo
      52.  00:89F0                      ; entrada: 	-
      53.  00:89F0                      ; salida: 	-
      54.  00:89F0                      ; toca: 	-
      55.  00:89F0                      mueve_abajo:
      56.  00:89F0  F5                  	PUSH		AF
      57.  00:89F1                      	
      58.  00:89F1  3A A7 A9            	LD		 	 A, (prota.posy)
      59.  00:89F4  3C                  	INC			 A
      60.  00:89F5  FE 70               	CP			 A, LIMPANTABA - 16
      61.  00:89F7  CA FD 89            	JP			 Z,.no_incrementa_y
      62.  00:89FA  32 A7 A9            	LD			(prota.posy), A
      63.  00:89FD                      	
      64.  00:89FD                      .no_incrementa_y:
      65.  00:89FD  F1                  	POP			AF
      66.  00:89FE                      fin_mueve_abajo:
      67.  00:89FE  C9                  	RET
      68.  00:89FF                      	
      69.  00:89FF                      	
      70.  00:89FF                      ;;=====================================================
      71.  00:89FF                      ;;MUEVE_IZQUIERDA
      72.  00:89FF                      ;;=====================================================	
      73.  00:89FF                      ; función: 	decrementa x si se no sale de los límites el valor del punto de mira a la izquierda
      74.  00:89FF                      ; entrada: 	-
      75.  00:89FF                      ; salida: 	-
      76.  00:89FF                      ; toca: 	-
      77.  00:89FF                      mueve_izquierda:
      78.  00:89FF  F5                  	PUSH		AF
      79.  00:8A00                      	
      80.  00:8A00  3A A6 A9            	LD		 	 A, (prota.posx)
      81.  00:8A03  3D                  	DEC			 A
      82.  00:8A04                      ;	CP			 A, LIMPANTIZQ 			;no es necesario ya que es cero (Z)
      83.  00:8A04  CA 0A 8A            	JP			 Z,.no_decrementa_x
      84.  00:8A07  32 A6 A9            	LD			(prota.posx), A
      85.  00:8A0A                      	
      86.  00:8A0A                      .no_decrementa_x:
      87.  00:8A0A  F1                  	POP			AF
      88.  00:8A0B                      fin_mueve_izquierda:
      89.  00:8A0B  C9                  	RET
      90.  00:8A0C                      
      91.  00:8A0C                      
      92.  00:8A0C                      
      93.  00:8A0C                      ;;=====================================================
      94.  00:8A0C                      ;;MIRA_DISPARO
      95.  00:8A0C                      ;;=====================================================	
      96.  00:8A0C                      ; función: 	Mira si se ha pulsado alguno de los dos disparos
      97.  00:8A0C                      ; entrada: 	A que tendrá 0000 0 0 X-letra M X-espacio 
      98.  00:8A0C                      ; salida: 	-
      99.  00:8A0C                      ; toca: 	A, B
     100.  00:8A0C                      mira_disparo:
     101.  00:8A0C                      .mira_boton_pulsado1:
     102.  00:8A0C  CB 1F               	RR		 A						;preparo en el carry si se ha pulsado botón 1
     103.  00:8A0E  D2 3A 8A            	JP		 NC, .mira_boton_pulsado2					
     104.  00:8A11  F5                  	PUSH	AF						;copia A para usarlo después
     105.  00:8A12                      	;se ha pulsado barra o boton 1
     106.  00:8A12  3A AB A9            	LD		 A, (prota.cadencia)
     107.  00:8A15  B7                  	OR		 A
     108.  00:8A16  CA 24 8A            	JP		 Z, .efectua_disparo	;toca efectuar disparo realmente porque se ha pulsado lo suficiente el disparo
     109.  00:8A19                      .no_efectua_disparo: ;IF
     110.  00:8A19  3D                  		DEC		 A
     111.  00:8A1A  32 AB A9            		LD		(prota.cadencia), A	;resto cadencia hasta próximo disparo "real" (no automático por haber pulsado una tecla e ir demasiado rápido)
     112.  00:8A1D  AF                  		XOR		 A 
     113.  00:8A1E  32 A8 A9            		LD		(prota.escena), A
     114.  00:8A21  C3 39 8A            		JP		.fin_mira_disparo1
     115.  00:8A24                      .efectua_disparo:	;ELSE
     116.  00:8A24                      		;cambio colores del sprite
     117.  00:8A24  3A A8 A9            		LD		 A, (prota.escena)
     118.  00:8A27  2F                  		CPL		 
     119.  00:8A28  32 A8 A9            		LD		(prota.escena), A
     120.  00:8A2B                      		;reseteo cadencia para el próximo disparo
     121.  00:8A2B  3E 04               		LD		 A, LIMCADENCIA				;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
     122.  00:8A2D  32 AB A9            		LD		 (prota.cadencia), A		;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
     123.  00:8A30                      		
     124.  00:8A30                      		;ejecuto sonido						;; ajustar cadencia y que cuando el disparo sea efectivo se reseteen los colores
     125.  00:8A30  AF                  		XOR		 A
     126.  00:8A31  0E 01               		LD		 C, 1
     127.  00:8A33  CD FE 90            		CALL	ayFX_INIT
     128.  00:8A36                      		
     129.  00:8A36                      		;examino si el disparo le dió a algo activo
     130.  00:8A36  CD 48 80            		CALL	check_colisiones_objetos	;revisa las colisiones con puertas, ayudas y enemigos
     131.  00:8A39                      		
     132.  00:8A39                      .fin_mira_disparo1
     133.  00:8A39  F1                  	POP		AF
     134.  00:8A3A                      
     135.  00:8A3A                      .mira_boton_pulsado2:
     136.  00:8A3A  CB 1F               	RR		 A
     137.  00:8A3C  D0                  	RET		 NC
     138.  00:8A3D                      	;se ha pulsado shift o boton 2
     139.  00:8A3D                      	
     140.  00:8A3D  3A B8 A9            	LD		 A, (prota_reliquias)	;miro si le quedan reliquias
     141.  00:8A40  B7                  	OR		 A
     142.  00:8A41  C8                  	RET		 Z						;si no le quedan salgo ya
     143.  00:8A42                      	
     144.  00:8A42                      	;actuaciones si se usa la reliquia botón 2 o M y quedn reliquias.. (antes ya se puso el valor en A)
     145.  00:8A42  3A B8 A9            	LD		A, (prota_reliquias)
     146.  00:8A45  3D                  	DEC		 A
     147.  00:8A46  32 B8 A9            	LD		(prota_reliquias), A
     148.  00:8A49                      	
     149.  00:8A49  3E 01               	LD		 A, 1
     150.  00:8A4B  0E 01               	LD		 C, 1
     151.  00:8A4D  CD FE 90            	CALL	ayFX_INIT
     152.  00:8A50                      	
     153.  00:8A50  CD 9C 84            	CALL 	efecto_imagen_tira_reliquia
     154.  00:8A53                      	
     155.  00:8A53  C3 44 83            	JP		pinta_reliquias
     156.  00:8A56                      fin_mira_disparo:
     157.  00:8A56                      ;	RET		
     158.  00:8A56                      
     159.  00:8A56                      
     160.  00:8A56                      ;;============================================================
     161.  00:8A56                      ;;Código de D. Fernando García (BitVision) (al que siempre le estaré agradecido)
     162.  00:8A56                      ;check_8th_keyboard_row
     163.  00:8A56                      ;read_joy_0
     164.  00:8A56                      ;check_8th_keyboard_row
     165.  00:8A56                      ;check_4th_keyboard_row
     166.  00:8A56                      ;;============================================================
     167.  00:8A56                      ;;  usa constantes:
     168.  00:8A56                      ;PSG_A  equ  0a0h  ;reg address
     169.  00:8A56                      ;PSG_W  equ  0a1h  ;reg data WR
     170.  00:8A56                      ;PSG_R  equ  0a2h  ;reg data
     171.  00:8A56                      
     172.  00:8A56                      ;;=====================================================
     173.  00:8A56                      ;;update_controllers_status
     174.  00:8A56                      ;;=====================================================	
     175.  00:8A56                      ;depends on the next rountine
     176.  00:8A56                      ;  returns
     177.  00:8A56                      ;  a - 0P2TRLDU
     178.  00:8A56                      
     179.  00:8A56                      update_controllers_status:
     180.  00:8A56  CD A1 8A                 call  check_8th_keyboard_row
     181.  00:8A59                      [4]  rrc    a
     181.  00:8A59  CB 0F CB 0F CB 0F CB 0F 
     182.  00:8A61  47                       ld    b,a    		;save for later  xxxTRDUL
     183.  00:8A62                      
     184.  00:8A62  E6 01                    and    #01    		;save L
     185.  00:8A64  CB 27                    sla    a
     186.  00:8A66  CB 27                    sla    a    		;now 00000L00
     187.  00:8A68  4F                       ld    c,a    		;save for later
     188.  00:8A69                      
     189.  00:8A69  78                       ld    a,b    		;again we've got xxxTRDUL. I am interested on leaving 000000DU on a
     190.  00:8A6A  CB 3F                    srl    a
     191.  00:8A6C  E6 03                    and    00000011b
     192.  00:8A6E                      						;we've got 000000DU on a
     193.  00:8A6E  B1                       or    c    		;now we've got 00000LDU
     194.  00:8A6F  4F                       ld    c,a    		;save for later
     195.  00:8A70                      
     196.  00:8A70  78                       ld    a,b
     197.  00:8A71  E6 18                    and    00011000b 	;we've got 000TR000
     198.  00:8A73  B1                       or    c
     199.  00:8A74                           ;finally    000TRLDU
     200.  00:8A74                      
     201.  00:8A74                           ;and    00000100   ;preserve just
     202.  00:8A74  47                       ld    b,a    		;save for later
     203.  00:8A75  CD AF 8A                 call  check_4th_keyboard_row      ;check M & P
     204.  00:8A78  F5                       push  af
     205.  00:8A79  E6 04                    and    00000100b	;filter just M
     206.  00:8A7B  87                       add    a
     207.  00:8A7C  87                       add    a
     208.  00:8A7D  87                       add    a           ;shift 3th to 6th bit
     209.  00:8A7E  B0                       or    b           	;merge with previous
     210.  00:8A7F  47                       ld    b,a
     211.  00:8A80                      
     212.  00:8A80  CD 8D 8A                 call  read_joy_0
     213.  00:8A83  E6 3F                    and    00111111b  	;we want just 002TRLDU  from joystick    (2 is second trigger)
     214.  00:8A85  B0                       or    b      		;added 000TRLDU from keyboard
     215.  00:8A86  47                       ld    b,a      	;save for later
     216.  00:8A87  F1                       pop    af      	; let's check on P
     217.  00:8A88                      
     218.  00:8A88  E6 20                    and    00100000b
     219.  00:8A8A  87                       add    a      		;P status on 6th bit  ... so 0P2TRLDU
     220.  00:8A8B  B0                       or    b
     221.  00:8A8C                      
     222.  00:8A8C  C9                       ret
     223.  00:8A8D                      
     224.  00:8A8D                      
     225.  00:8A8D                      ;ret
     226.  00:8A8D                      ;  a -            xx2TRLDU
     227.  00:8A8D                      read_joy_0:
     228.  00:8A8D  F3                         di
     229.  00:8A8E  3E 0F                      ld    a,15
     230.  00:8A90  D3 A0                      out    [PSG_A],a
     231.  00:8A92  DB A2                      in    a,[PSG_R]
     232.  00:8A94  E6 BF                      and    10111111b        ;joy0
     233.  00:8A96                      
     234.  00:8A96  D3 A1                      out    [PSG_W],a        ;set joy0
     235.  00:8A98                      
     236.  00:8A98  3E 0E                      ld    a,14
     237.  00:8A9A  D3 A0                      out    [PSG_A],a
     238.  00:8A9C  DB A2                      in    a,[PSG_R]
     239.  00:8A9E                      
     240.  00:8A9E  FB                         ei
     241.  00:8A9F  2F                         cpl
     242.  00:8AA0                      
     243.  00:8AA0  C9                         ret
     244.  00:8AA1                      
     245.  00:8AA1                      
     246.  00:8AA1                      ;ret
     247.  00:8AA1                      ;  a -      RDULxxxT
     248.  00:8AA1                      check_8th_keyboard_row:
     249.  00:8AA1  F3                       di
     250.  00:8AA2  DB AA                    in    a,(#aa)
     251.  00:8AA4  E6 F0                    and    #f0
     252.  00:8AA6  F6 08                    or    8
     253.  00:8AA8  D3 AA                    out    (#aa),a
     254.  00:8AAA  DB A9                    in    a,(#a9)
     255.  00:8AAC  FB                       ei
     256.  00:8AAD  2F                       cpl
     257.  00:8AAE                      
     258.  00:8AAE  C9                       ret
     259.  00:8AAF                      
     260.  00:8AAF                      
     261.  00:8AAF                      ;ret
     262.  00:8AAF                      ;  a -      xxxxxMxx
     263.  00:8AAF                      check_4th_keyboard_row:
     264.  00:8AAF  F3                       di
     265.  00:8AB0  DB AA                    in    a,(#aa)
     266.  00:8AB2  E6 F0                    and    #f0
     267.  00:8AB4  F6 04                    or    4
     268.  00:8AB6  D3 AA                    out    (#aa),a
     269.  00:8AB8  DB A9                    in    a,(#a9)
     270.  00:8ABA  FB                       ei
     271.  00:8ABB  2F                       cpl
     272.  00:8ABC                      
     273.  00:8ABC  C9                       ret
     274.  00:8ABD                      
     275.  00:8ABD                      ;--------------------------------------------
     276.  00:8ABD                      
     277.  00:8ABD                      
     278.  00:8ABD                      
     279.  00:8ABD                      
     280.  00:8ABD                      
     281.  00:8ABD                      
     282.  00:8ABD                      
     283.  00:8ABD                      
     171   00:8ABD                      	
     172   00:8ABD                      	include "subr_sonido.asm"
       1.  00:8ABD                      
       2.  00:8ABD                      ;;=====================================================
       3.  00:8ABD                      ;;SUBRUTINAS PARA SONIDOS
       4.  00:8ABD                      ;;=====================================================	
       5.  00:8ABD                      
       6.  00:8ABD                      ;;=====================================================
       7.  00:8ABD                      ;;INICIALIZA_REPLAYER_EFECTOS_INTERRUPCIONES
       8.  00:8ABD                      ;;=====================================================	
       9.  00:8ABD                      ; función: 	inicializa: replayer de música, player de efectos e interrupciones
      10.  00:8ABD                      ; entrada: 	-
      11.  00:8ABD                      ; salida: 	-
      12.  00:8ABD                      ; toca: 	HL, A
      13.  00:8ABD                      inicializa_replayer_efectos_interrupciones:
      14.  00:8ABD  F3                  	DI
      15.  00:8ABE                      
      16.  00:8ABE                      	;inicializacion de replayer musical
      17.  00:8ABE  21 66 91            	LD		HL, song-99			; hl <- initial address of module - 99
      18.  00:8AC1  CD FD 8A            	CALL	PT3_INIT			; Inits PT3 player
      19.  00:8AC4                      		
      20.  00:8AC4                      	;inicializacion del reproductor de efectos sonoros
      21.  00:8AC4  21 31 9B            	LD		HL, sfx_bank
      22.  00:8AC7  CD EC 90            	CALL	ayFX_SETUP
      23.  00:8ACA                      	
      24.  00:8ACA                      	;Engancha nuestra rutina de servicio al gancha que deja preparado la BIOS cuando se termina de pintar la pantalla (50 o 60 veces por segundo)
      25.  00:8ACA  3E C3               	LD		A, #C3
      26.  00:8ACC  32 9F FD            	LD		[H.TIMI], A
      27.  00:8ACF  21 D7 8A            	LD		HL, subrutina_isr
      28.  00:8AD2  22 A0 FD            	LD		[H.TIMI+1], HL
      29.  00:8AD5                      	
      30.  00:8AD5  FB                  	EI		;optimizacion:
      31.  00:8AD6                      			;piensa que las dos ultimas lineas podrian haber sido: 
      32.  00:8AD6                      			;ei						;primero ei
      33.  00:8AD6                      			;ld		[H.TIMI+1],hl	;luego este ld
      34.  00:8AD6                      									;PENSAR (y consultar ) PORQUE!!!!
      35.  00:8AD6                      fin_inicializa_replayer_efectos_interrupciones:
      36.  00:8AD6  C9                  	RET
      37.  00:8AD7                      
      38.  00:8AD7                      
      39.  00:8AD7                      
      40.  00:8AD7                      ;;=====================================================
      41.  00:8AD7                      ;;NUESTRA_ISR
      42.  00:8AD7                      ;;=====================================================	
      43.  00:8AD7                      ; función: 	envía datos al PSG + toca un trozo de música + toca trozo de 
      44.  00:8AD7                      ; entrada: 	-
      45.  00:8AD7                      ; salida: 	-
      46.  00:8AD7                      ; toca: 	HL, A
      47.  00:8AD7                      subrutina_isr:
      48.  00:8AD7  CD 42 90            	CALL	PT3_ROUT			;envia los datos a los registros del PSG
      49.  00:8ADA  CD 4A 8F            	CALL	PT3_PLAY			;calcula el siguiente 'trocito' de musica que sera enviado al proxima vez
      50.  00:8ADD  C3 34 91            	JP		ayFX_PLAY			;calcula el siguiente 'trocito' de efecto especial de sonido que sera enviado la proxima vez
      51.  00:8AE0                      fin_subrutina_isr:
      52.  00:8AE0                      	;RET
      53.  00:8AE0                      
      54.  00:8AE0                      
      55.  00:8AE0                      
      56.  00:8AE0                      ;;=====================================================
      57.  00:8AE0                      ;;DEFINICIÓN DE SUBRUTINAS DE FERNANDO PARA COMPRESIÓN Y SONIDO
      58.  00:8AE0                      ;;=====================================================
      59.  00:8AE0                      subrutinas_sonido:
      60.  00:8AE0                      	include	"PT3-ROM_sjasm.asm"
       1:  00:8AE0                      		; --- PT3 REPLAYER WORKING ON ROM ---
       2:  00:8AE0                      		; --- Can be assembled with asMSX ---
       3:  00:8AE0                      		; --- ROM version: MSX-KUN        ---
       4:  00:8AE0                      		; --- asMSX version 2: SapphiRe   ---
       5:  00:8AE0                      
       6:  00:8AE0                      ; Based on MSX full version of PT3 by Dioniso
       7:  00:8AE0                      ;
       8:  00:8AE0                      ; This version of the replayer can be used with any note table
       9:  00:8AE0                      ; This version also allows the use of PT3 commands
      10:  00:8AE0                      ; First 99 bytes of each PT3 module should be stripped off
      11:  00:8AE0                      ;
      12:  00:8AE0                      ; PLAY and PSG WRITE routines seperated to allow independent calls
      13:  00:8AE0                      ;
      14:  00:8AE0                      ; ROM LENGTH: 1549 bytes
      15:  00:8AE0                      ; RAM LENGTH:  576 bytes
      16:  00:8AE0                      
      17:  00:8AE0                      
      18:  00:8AE0                      
      19:  00:8AE0                      ;SJASM version by BTV 2016
      20:  00:8AE0                      
      21:  00:8AE0                      
      22:  00:8AE0                      		; --- CONSTANT VALUES DEFINITION ---
      23:  00:8AE0                      
      24:  00:8AE0                      ;ChannelsVars
      25:  00:8AE0                      ;struc	CHNPRM
      26:  00:8AE0                      ;reset group
      27:  00:8AE0  (00:0000)           CHNPRM_PsInOr	equ 0	;RESB 1
      28:  00:8AE0  (00:0001)           CHNPRM_PsInSm	equ 1	;RESB 1
      29:  00:8AE0  (00:0002)           CHNPRM_CrAmSl	equ 2	;RESB 1
      30:  00:8AE0  (00:0003)           CHNPRM_CrNsSl	equ 3	;RESB 1
      31:  00:8AE0  (00:0004)           CHNPRM_CrEnSl	equ 4	;RESB 1
      32:  00:8AE0  (00:0005)           CHNPRM_TSlCnt	equ 5	;RESB 1
      33:  00:8AE0  (00:0006)           CHNPRM_CrTnSl	equ 6	;RESW 1
      34:  00:8AE0  (00:0008)           CHNPRM_TnAcc	equ 8	;RESW 1
      35:  00:8AE0  (00:000A)           CHNPRM_COnOff	equ 10	;RESB 1
      36:  00:8AE0                      ;reset group
      37:  00:8AE0                      
      38:  00:8AE0  (00:000B)           CHNPRM_OnOffD	equ 11	;RESB 1
      39:  00:8AE0                      
      40:  00:8AE0                      ;IX for PTDECOD here [+12]
      41:  00:8AE0  (00:000C)           CHNPRM_OffOnD	equ 12	;RESB 1
      42:  00:8AE0  (00:000D)           CHNPRM_OrnPtr	equ 13	;RESW 1
      43:  00:8AE0  (00:000F)           CHNPRM_SamPtr	equ 15	;RESW 1
      44:  00:8AE0  (00:0011)           CHNPRM_NNtSkp	equ 17	;RESB 1
      45:  00:8AE0  (00:0012)           CHNPRM_Note	equ 18	;RESB 1
      46:  00:8AE0  (00:0013)           CHNPRM_SlToNt	equ 19	;RESB 1
      47:  00:8AE0  (00:0014)           CHNPRM_Env_En	equ 20	;RESB 1
      48:  00:8AE0  (00:0015)           CHNPRM_Flags	equ 21	;RESB 1
      49:  00:8AE0                       ;Enabled - 0,SimpleGliss - 2
      50:  00:8AE0  (00:0016)           CHNPRM_TnSlDl	equ 22	;RESB 1
      51:  00:8AE0  (00:0017)           CHNPRM_TSlStp	equ 23	;RESW 1
      52:  00:8AE0  (00:0019)           CHNPRM_TnDelt	equ 25	;RESW 1
      53:  00:8AE0  (00:001B)           CHNPRM_NtSkCn	equ 27	;RESB 1
      54:  00:8AE0  (00:001C)           CHNPRM_Volume	equ 28	;RESB 1
      55:  00:8AE0  (00:001D)           CHNPRM_Size	equ 29	;RESB 1
      56:  00:8AE0                      ;endstruc
      57:  00:8AE0                      
      58:  00:8AE0                      ;struc	AR
      59:  00:8AE0  (00:0000)           AR_TonA		equ 0	;RESW 1
      60:  00:8AE0  (00:0002)           AR_TonB		equ 2	;RESW 1
      61:  00:8AE0  (00:0004)           AR_TonC		equ 4	;RESW 1
      62:  00:8AE0  (00:0006)           AR_Noise	equ 6	;RESB 1
      63:  00:8AE0  (00:0007)           AR_Mixer	equ 7	;RESB 1
      64:  00:8AE0  (00:0008)           AR_AmplA	equ 8	;RESB 1
      65:  00:8AE0  (00:0009)           AR_AmplB	equ 9	;RESB 1
      66:  00:8AE0  (00:000A)           AR_AmplC	equ 10	;RESB 1
      67:  00:8AE0  (00:000B)           AR_Env		equ 11	;RESW 1
      68:  00:8AE0  (00:000D)           AR_EnvTp	equ 13	;RESB 1
      69:  00:8AE0                      ;endstruc
      70:  00:8AE0                      
      71:  00:8AE0                      		; --- CODE STARTS HERE ---
      72:  00:8AE0                      
      73:  00:8AE0  21 00 F0            CHECKLP:	LD	HL,PT3_SETUP
      74:  00:8AE3  CB FE               		SET	7,[HL]
      75:  00:8AE5  CB 46               		BIT	0,[HL]
      76:  00:8AE7  C8                  		RET	Z
      77:  00:8AE8  E1                  		POP	HL
      78:  00:8AE9  21 7A F0            		LD	HL,DelyCnt
      79:  00:8AEC  34                  		INC	[HL]
      80:  00:8AED  21 3E F0            		LD	HL,ChanA+CHNPRM_NtSkCn
      81:  00:8AF0  34                  		INC	[HL]
      82:  00:8AF1  AF                  PT3_MUTE:	XOR	A
      83:  00:8AF2  67                  		LD	H,A
      84:  00:8AF3  6F                  		LD	L,A
      85:  00:8AF4  32 48 F1            		LD	[AYREGS+AR_AmplA],A
      86:  00:8AF7  22 49 F1            		LD	[AYREGS+AR_AmplB],HL
      87:  00:8AFA  C3 43 90            		JP	ROUT_A0
      88:  00:8AFD                      
      89:  00:8AFD                      PT3_INIT:	;HL - AddressOfModule - 100
      90:  00:8AFD  22 01 F0            		LD [PT3_MODADDR],HL
      91:  00:8B00  E5                  		PUSH HL
      92:  00:8B01  11 64 00            		LD DE,100
      93:  00:8B04  19                  		ADD HL,DE
      94:  00:8B05  7E                  		LD A,[HL]
      95:  00:8B06  32 1C F0            		LD [PT3_Delay],A
      96:  00:8B09  E5                  		PUSH HL
      97:  00:8B0A  DD E1               		POP IX
      98:  00:8B0C  19                  		ADD HL,DE
      99:  00:8B0D  22 03 F0            		LD [PT3_CrPsPtr],HL
     100:  00:8B10  DD 5E 02            		LD E,[IX+102-100]
     101:  00:8B13  19                  		ADD HL,DE
     102:  00:8B14  23                  		INC HL
     103:  00:8B15  22 18 F0            		LD [PT3_LPosPtr],HL
     104:  00:8B18  D1                  		POP DE
     105:  00:8B19  DD 6E 03            		LD L,[IX+103-100]
     106:  00:8B1C  DD 66 04            		LD H,[IX+104-100]
     107:  00:8B1F  19                  		ADD HL,DE
     108:  00:8B20  22 1A F0            		LD [PT3_PatsPtr],HL
     109:  00:8B23  21 A9 00            		LD HL,169
     110:  00:8B26  19                  		ADD HL,DE
     111:  00:8B27  22 07 F0            		LD [PT3_OrnPtrs],HL
     112:  00:8B2A  21 69 00            		LD HL,105
     113:  00:8B2D  19                  		ADD HL,DE
     114:  00:8B2E  22 05 F0            		LD [PT3_SAMPTRS],HL
     115:  00:8B31  21 00 F0            		LD HL,PT3_SETUP
     116:  00:8B34  CB BE               		RES 7,[HL]
     117:  00:8B36                      
     118:  00:8B36                      		; --- note table data depacker ---
     119:  00:8B36                      		; Depacks first 12 tones of each tone table
     120:  00:8B36                      
     121:  00:8B36  11 B7 90            		LD DE,T_PACK
     122:  00:8B39  01 B1 F1            		LD BC,T1_+(2*49)-1
     123:  00:8B3C  1A                  .TP_0:		LD A,[DE]
     124:  00:8B3D  13                  		INC DE
     125:  00:8B3E  FE 1E               		CP 15*2
     126:  00:8B40  30 06               		JR NC,.TP_1
     127:  00:8B42  67                  		LD H,A
     128:  00:8B43  1A                  		LD A,[DE]
     129:  00:8B44  6F                  		LD L,A
     130:  00:8B45  13                  		INC DE
     131:  00:8B46  18 07               		JR .TP_2
     132:  00:8B48  D5                  .TP_1:		PUSH DE
     133:  00:8B49  16 00               		LD D,0
     134:  00:8B4B  5F                  		LD E,A
     135:  00:8B4C  19                  		ADD HL,DE
     136:  00:8B4D  19                  		ADD HL,DE
     137:  00:8B4E  D1                  		POP DE
     138:  00:8B4F  7C                  .TP_2:		LD A,H
     139:  00:8B50  02                  		LD [BC],A
     140:  00:8B51  0B                  		DEC BC
     141:  00:8B52  7D                  		LD A,L
     142:  00:8B53  02                  		LD [BC],A
     143:  00:8B54  0B                  		DEC BC
     144:  00:8B55  D6 F0               		SUB $F0
     145:  00:8B57  20 E3               		JR NZ,.TP_0
     146:  00:8B59                      
     147:  00:8B59                      		; --- INITIALIZE PT3 VARIABLES ---
     148:  00:8B59  21 23 F0            		LD HL,VARS
     149:  00:8B5C  77                  		LD [HL],A
     150:  00:8B5D  11 24 F0            		LD DE,VARS+1
     151:  00:8B60  01 2C 01            		LD BC,VAR0END-VARS-1
     152:  00:8B63  ED B0               		LDIR
     153:  00:8B65                      
     154:  00:8B65  3C                  		INC A
     155:  00:8B66  32 7A F0            		LD [DelyCnt],A
     156:  00:8B69  21 01 F0            		LD HL,$F001 ;H - CHNPRM_Volume, L - CHNPRM_NtSkCn
     157:  00:8B6C  22 3E F0            		LD [ChanA+CHNPRM_NtSkCn],HL
     158:  00:8B6F  22 5B F0            		LD [ChanB+CHNPRM_NtSkCn],HL
     159:  00:8B72  22 78 F0            		LD [ChanC+CHNPRM_NtSkCn],HL
     160:  00:8B75                      
     161:  00:8B75  21 B3 90            		LD HL,EMPTYSAMORN
     162:  00:8B78  22 12 F0            		LD [PT3_AdInPtA],HL ;ptr to zero
     163:  00:8B7B  22 30 F0            		LD [ChanA+CHNPRM_OrnPtr],HL ;ornament 0 is "0,1,0"
     164:  00:8B7E  22 4D F0            		LD [ChanB+CHNPRM_OrnPtr],HL ;in all versions from
     165:  00:8B81  22 6A F0            		LD [ChanC+CHNPRM_OrnPtr],HL ;3.xx to 3.6x and VTII
     166:  00:8B84                      
     167:  00:8B84  22 32 F0            		LD [ChanA+CHNPRM_SamPtr],HL ;S1 There is no default
     168:  00:8B87  22 4F F0            		LD [ChanB+CHNPRM_SamPtr],HL ;S2 sample in PT3, so, you
     169:  00:8B8A  22 6C F0            		LD [ChanC+CHNPRM_SamPtr],HL ;S3 can comment S1,2,3; see
     170:  00:8B8D                      					    ;also EMPTYSAMORN comment
     171:  00:8B8D                      
     172:  00:8B8D                      		; --- NOTE TABLE CREATOR (c) Ivan Roshin, adapted by SapphiRe ---
     173:  00:8B8D  DD 7E FF            		LD A,[IX+99-100] ;TONE TABLE NUMBER
     174:  00:8B90  17                  		RLA
     175:  00:8B91  E6 07               		AND 7
     176:  00:8B93  21 63 90            		LD HL,NT_DATA
     177:  00:8B96  D5                  		PUSH DE
     178:  00:8B97  50                  		LD D,B		; ld d,0 (bc is 0000 after LDIR)
     179:  00:8B98  87                  		ADD A,A
     180:  00:8B99  5F                  		LD E,A
     181:  00:8B9A  19                  		ADD HL,DE	; hl -> init of correct note table data
     182:  00:8B9B  5E                  		LD E,[HL]
     183:  00:8B9C  23                  		INC HL
     184:  00:8B9D  CB 3B               		SRL E
     185:  00:8B9F  9F                  		SBC A,A
     186:  00:8BA0  E6 A7               		AND $A7			;$00 (NOP) or $A7 (AND A)
     187:  00:8BA2  32 21 F0            		LD [PT3_NTL3],A		; CORRECT INSTRUCTION, DEPENDS OF SELECTED TABLE
     188:  00:8BA5  3E C9               		LD A,$C9		; RET CODE
     189:  00:8BA7  32 22 F0            		LD [PT3_NTL3+1],A	; RET PLACED
     190:  00:8BAA  EB                  		EX DE,HL
     191:  00:8BAB  C1                  		POP BC ;BC=T1_
     192:  00:8BAC  09                  		ADD HL,BC
     193:  00:8BAD                      
     194:  00:8BAD  1A                  		LD A,[DE]                           
     195:  00:8BAE                      
     196:  00:8BAE  01 73 90            		LD BC,T_
     197:  00:8BB1  81                  		ADD A,C
     198:  00:8BB2  4F                  		LD C,A
     199:  00:8BB3  88                  		ADC A,B
     200:  00:8BB4                      
     201:  00:8BB4  91                  		SUB C
     202:  00:8BB5  47                  		LD B,A
     203:  00:8BB6  C5                  		PUSH BC
     204:  00:8BB7  11 80 F0            		LD DE,NT_
     205:  00:8BBA  D5                  		PUSH DE
     206:  00:8BBB                      
     207:  00:8BBB  06 0C               		LD B,12
     208:  00:8BBD  C5                  .L1:		PUSH BC
     209:  00:8BBE  4E                  		LD C,[HL]
     210:  00:8BBF  23                  		INC HL
     211:  00:8BC0  E5                  		PUSH HL
     212:  00:8BC1  46                  		LD B,[HL]
     213:  00:8BC2                      
     214:  00:8BC2  D5                  		PUSH DE
     215:  00:8BC3  EB                  		EX DE,HL
     216:  00:8BC4  11 17 00            		LD DE,23
     217:  00:8BC7  DD 26 08            		db $DD,$26,$08	;LD XH,8
     218:  00:8BCA                      
     219:  00:8BCA  CB 38               .L2:		SRL B
     220:  00:8BCC  CB 19               		RR C
     221:  00:8BCE  CD 21 F0            .L3:		CALL PT3_NTL3	;AND A or NOP
     222:  00:8BD1  79                  		LD A,C
     223:  00:8BD2  8A                  		ADC A,D	;=ADC 0
     224:  00:8BD3  77                  		LD [HL],A
     225:  00:8BD4  23                  		INC HL
     226:  00:8BD5  78                  		LD A,B
     227:  00:8BD6  8A                  		ADC A,D
     228:  00:8BD7  77                  		LD [HL],A
     229:  00:8BD8  19                  		ADD HL,DE
     230:  00:8BD9  DD 25               		db $DD,$25	;DEC XH
     231:  00:8BDB  20 ED               		JR NZ,.L2
     232:  00:8BDD                      
     233:  00:8BDD  D1                  		POP DE
     234:  00:8BDE  13                  		INC DE
     235:  00:8BDF  13                  		INC DE
     236:  00:8BE0  E1                  		POP HL
     237:  00:8BE1  23                  		INC HL
     238:  00:8BE2  C1                  		POP BC
     239:  00:8BE3  10 D8               		DJNZ .L1
     240:  00:8BE5                      
     241:  00:8BE5  E1                  		POP HL
     242:  00:8BE6  D1                  		POP DE
     243:  00:8BE7                      
     244:  00:8BE7  7B                  		LD A,E
     245:  00:8BE8  D5                  		PUSH DE
     246:  00:8BE9  11 7F 90            		LD DE,TCOLD_1
     247:  00:8BEC  BB                  		CP E
     248:  00:8BED  D1                  		POP DE
     249:  00:8BEE  20 05               		JR NZ,.CORR_1
     250:  00:8BF0  3E FD               		LD A,$FD
     251:  00:8BF2  32 AE F0            		LD [NT_+$2E],A
     252:  00:8BF5                      
     253:  00:8BF5  1A                  .CORR_1:	LD A,[DE]
     254:  00:8BF6  A7                  		AND A
     255:  00:8BF7  28 11               		JR Z,.TC_EXIT
     256:  00:8BF9  1F                  		RRA
     257:  00:8BFA  F5                  		PUSH AF
     258:  00:8BFB  87                  		ADD A,A
     259:  00:8BFC  4F                  		LD C,A
     260:  00:8BFD  09                  		ADD HL,BC
     261:  00:8BFE  F1                  		POP AF
     262:  00:8BFF  30 02               		JR NC,.CORR_2
     263:  00:8C01  35                  		DEC [HL]
     264:  00:8C02  35                  		DEC [HL]
     265:  00:8C03  34                  .CORR_2:	INC [HL]
     266:  00:8C04  A7                  		AND A
     267:  00:8C05  ED 42               		SBC HL,BC
     268:  00:8C07  13                  		INC DE
     269:  00:8C08  18 EB               		JR .CORR_1
     270:  00:8C0A                      
     271:  00:8C0A                      .TC_EXIT:	;POP AF
     272:  00:8C0A                      
     273:  00:8C0A                      		; --- CREATE PT3 VOLUME TABLE (c) Ivan Roshin, adapted by SapphiRe ---
     274:  00:8C0A  21 11 00            		ld	hl,$11
     275:  00:8C0D  54                  		ld	d,h
     276:  00:8C0E  5C                  		ld	e,h
     277:  00:8C0F  DD 21 50 F1         		ld	IX,VT_+16
     278:  00:8C13  06 0F               		ld	b,15
     279:  00:8C15  E5                  .INITV1:	push	hl
     280:  00:8C16  19                  		add	hl,de
     281:  00:8C17  EB                  		ex	de,hl
     282:  00:8C18  ED 62               		sbc	hl,hl
     283:  00:8C1A  48                  		ld	c,b
     284:  00:8C1B  06 10               		ld	b,16
     285:  00:8C1D  7D                  .INITV2:	ld	a,l
     286:  00:8C1E  17                  		rla
     287:  00:8C1F  7C                  		ld	a,h
     288:  00:8C20  CE 00               		adc	a,0
     289:  00:8C22  DD 77 00            		ld	[ix],a
     290:  00:8C25  DD 23               		inc	ix
     291:  00:8C27  19                  		add	hl,de
     292:  00:8C28  10 F3               		djnz	.INITV2
     293:  00:8C2A  E1                  		pop	hl
     294:  00:8C2B  7B                  		ld	a,e
     295:  00:8C2C  FE 77               		cp	$77
     296:  00:8C2E  20 01               		jr	nz,.INITV3
     297:  00:8C30  1C                  		inc	e
     298:  00:8C31  41                  .INITV3:	ld	b,c
     299:  00:8C32  10 E1               		djnz	.INITV1
     300:  00:8C34                      
     301:  00:8C34  C9                  		RET
     302:  00:8C35                      
     303:  00:8C35                      		;pattern decoder
     304:  00:8C35  DD 36 08 00         PD_OrSm:	LD [IX+(CHNPRM_Env_En-12)],0
     305:  00:8C39  CD BF 8D            		CALL SETORN
     306:  00:8C3C  0A                  		LD A,[BC]
     307:  00:8C3D  03                  		INC BC
     308:  00:8C3E  0F                  		RRCA
     309:  00:8C3F                      
     310:  00:8C3F  87                  PD_SAM:		ADD A,A
     311:  00:8C40  5F                  PD_SAM_:	LD E,A
     312:  00:8C41  16 00               		LD D,0
     313:  00:8C43  2A 05 F0            		LD HL,[PT3_SAMPTRS]
     314:  00:8C46  19                  		ADD HL,DE
     315:  00:8C47  5E                  		LD E,[HL]
     316:  00:8C48  23                  		INC HL
     317:  00:8C49  56                  		LD D,[HL]
     318:  00:8C4A  2A 01 F0            		LD HL,[PT3_MODADDR]
     319:  00:8C4D  19                  		ADD HL,DE
     320:  00:8C4E  DD 75 03            		LD [IX+(CHNPRM_SamPtr-12)],L
     321:  00:8C51  DD 74 04            		LD [IX+(CHNPRM_SamPtr+1-12)],H
     322:  00:8C54  18 41               		JR PD_LOOP
     323:  00:8C56                      
     324:  00:8C56  07                  PD_VOL:		RLCA
     325:  00:8C57  07                  		RLCA
     326:  00:8C58  07                  		RLCA
     327:  00:8C59  07                  		RLCA
     328:  00:8C5A  DD 77 10            		LD [IX+(CHNPRM_Volume-12)],A
     329:  00:8C5D  18 3B               		JR PD_LP2
     330:  00:8C5F                      	
     331:  00:8C5F  DD 77 08            PD_EOff:	LD [IX+(CHNPRM_Env_En-12)],A
     332:  00:8C62  DD 77 F4            		LD [IX+(CHNPRM_PsInOr-12)],A
     333:  00:8C65  18 33               		JR PD_LP2
     334:  00:8C67                      
     335:  00:8C67  3D                  PD_SorE:	DEC A
     336:  00:8C68  20 07               		JR NZ,PD_ENV
     337:  00:8C6A  0A                  		LD A,[BC]
     338:  00:8C6B  03                  		INC BC
     339:  00:8C6C  DD 77 05            		LD [IX+(CHNPRM_NNtSkp-12)],A
     340:  00:8C6F  18 29               		JR PD_LP2
     341:  00:8C71                      
     342:  00:8C71  CD A3 8D            PD_ENV:		CALL SETENV
     343:  00:8C74  18 24               		JR PD_LP2
     344:  00:8C76                      
     345:  00:8C76  CD BF 8D            PD_ORN:		CALL SETORN
     346:  00:8C79  18 1C               		JR PD_LOOP
     347:  00:8C7B                             
     348:  00:8C7B  DD 77 08            PD_ESAM:	LD [IX+(CHNPRM_Env_En-12)],A
     349:  00:8C7E  DD 77 F4            		LD [IX+(CHNPRM_PsInOr-12)],A
     350:  00:8C81  C4 A3 8D            		CALL NZ,SETENV
     351:  00:8C84  0A                  		LD A,[BC]
     352:  00:8C85  03                  		INC BC
     353:  00:8C86  18 B8               		JR PD_SAM_
     354:  00:8C88                      
     355:  00:8C88  DD 7E 06            PTDECOD:	LD A,[IX+(CHNPRM_Note-12)]
     356:  00:8C8B  32 0F F0            		LD [PT3_PrNote],A
     357:  00:8C8E  DD 6E FA            		LD L,[IX+(CHNPRM_CrTnSl-12)]
     358:  00:8C91  DD 66 FB            		LD H,[IX+(CHNPRM_CrTnSl+1-12)]
     359:  00:8C94  22 10 F0            		LD [PT3_PrSlide],HL
     360:  00:8C97                      
     361:  00:8C97  11 10 20            PD_LOOP:	LD DE,$2010
     362:  00:8C9A  0A                  PD_LP2:		LD A,[BC]
     363:  00:8C9B  03                  		INC BC
     364:  00:8C9C  83                  		ADD A,E
     365:  00:8C9D  38 96               		JR C,PD_OrSm
     366:  00:8C9F  82                  		ADD A,D
     367:  00:8CA0  28 4A               		JR Z,PD_FIN
     368:  00:8CA2  38 9B               		JR C,PD_SAM
     369:  00:8CA4  83                  		ADD A,E
     370:  00:8CA5  28 25               		JR Z,PD_REL
     371:  00:8CA7  38 AD               		JR C,PD_VOL
     372:  00:8CA9  83                  		ADD A,E
     373:  00:8CAA  28 B3               		JR Z,PD_EOff
     374:  00:8CAC  38 B9               		JR C,PD_SorE
     375:  00:8CAE  C6 60               		ADD A,96
     376:  00:8CB0  38 20               		JR C,PD_NOTE
     377:  00:8CB2  83                  		ADD A,E
     378:  00:8CB3  38 C1               		JR C,PD_ORN
     379:  00:8CB5  82                  		ADD A,D
     380:  00:8CB6  38 0F               		JR C,PD_NOIS
     381:  00:8CB8  83                  		ADD A,E
     382:  00:8CB9  38 C0               		JR C,PD_ESAM
     383:  00:8CBB  87                  		ADD A,A
     384:  00:8CBC  5F                  		LD E,A
     385:  00:8CBD  21 F8 6C            		LD HL,(SPCCOMS+$DF20) % 65536	; Adapted from original Speccy version (saves 6 bytes)
     386:  00:8CC0  19                  		ADD HL,DE
     387:  00:8CC1  5E                  		LD E,[HL]
     388:  00:8CC2  23                  		INC HL
     389:  00:8CC3  56                  		LD D,[HL]
     390:  00:8CC4  D5                  		PUSH DE
     391:  00:8CC5  18 D0               		JR PD_LOOP
     392:  00:8CC7                      
     393:  00:8CC7  32 7E F0            PD_NOIS:	LD [Ns_Base],A
     394:  00:8CCA  18 CE               		JR PD_LP2
     395:  00:8CCC                      
     396:  00:8CCC  DD CB 09 86         PD_REL:		RES 0,[IX+(CHNPRM_Flags-12)]
     397:  00:8CD0  18 08               		JR PD_RES
     398:  00:8CD2                      	
     399:  00:8CD2  DD 77 06            PD_NOTE:	LD [IX+(CHNPRM_Note-12)],A
     400:  00:8CD5  DD CB 09 C6         		SET 0,[IX+(CHNPRM_Flags-12)]
     401:  00:8CD9  AF                  		XOR A
     402:  00:8CDA                      
     403:  00:8CDA  ED 73 09 F0         PD_RES:		LD [PT3_PDSP],SP
     404:  00:8CDE  DD F9               		LD SP,IX
     405:  00:8CE0  67                  		LD H,A
     406:  00:8CE1  6F                  		LD L,A
     407:  00:8CE2  E5                  		PUSH HL
     408:  00:8CE3  E5                  		PUSH HL
     409:  00:8CE4  E5                  		PUSH HL
     410:  00:8CE5  E5                  		PUSH HL
     411:  00:8CE6  E5                  		PUSH HL
     412:  00:8CE7  E5                  		PUSH HL
     413:  00:8CE8  ED 7B 09 F0         		LD SP,[PT3_PDSP]
     414:  00:8CEC                      
     415:  00:8CEC  DD 7E 05            PD_FIN:		LD A,[IX+(CHNPRM_NNtSkp-12)]
     416:  00:8CEF  DD 77 0F            		LD [IX+(CHNPRM_NtSkCn-12)],A
     417:  00:8CF2  C9                  		RET
     418:  00:8CF3                      
     419:  00:8CF3  DD CB 09 96         C_PORTM:	RES 2,[IX+(CHNPRM_Flags-12)]
     420:  00:8CF7  0A                  		LD A,[BC]
     421:  00:8CF8  03                  		INC BC
     422:  00:8CF9                      		;SKIP PRECALCULATED TONE DELTA [BECAUSE
     423:  00:8CF9                      		;CANNOT BE RIGHT AFTER PT3 COMPILATION]
     424:  00:8CF9  03                  		INC BC
     425:  00:8CFA  03                  		INC BC
     426:  00:8CFB  DD 77 0A            		LD [IX+(CHNPRM_TnSlDl-12)],A
     427:  00:8CFE  DD 77 F9            		LD [IX+(CHNPRM_TSlCnt-12)],A
     428:  00:8D01  11 80 F0            		LD DE,NT_
     429:  00:8D04  DD 7E 06            		LD A,[IX+(CHNPRM_Note-12)]
     430:  00:8D07  DD 77 07            		LD [IX+(CHNPRM_SlToNt-12)],A
     431:  00:8D0A  87                  		ADD A,A
     432:  00:8D0B  6F                  		LD L,A
     433:  00:8D0C  26 00               		LD H,0
     434:  00:8D0E  19                  		ADD HL,DE
     435:  00:8D0F  7E                  		LD A,[HL]
     436:  00:8D10  23                  		INC HL
     437:  00:8D11  66                  		LD H,[HL]
     438:  00:8D12  6F                  		LD L,A
     439:  00:8D13  E5                  		PUSH HL
     440:  00:8D14  3A 0F F0            		LD A,[PT3_PrNote]
     441:  00:8D17  DD 77 06            		LD [IX+(CHNPRM_Note-12)],A
     442:  00:8D1A  87                  		ADD A,A
     443:  00:8D1B  6F                  		LD L,A
     444:  00:8D1C  26 00               		LD H,0
     445:  00:8D1E  19                  		ADD HL,DE
     446:  00:8D1F  5E                  		LD E,[HL]
     447:  00:8D20  23                  		INC HL
     448:  00:8D21  56                  		LD D,[HL]
     449:  00:8D22  E1                  		POP HL
     450:  00:8D23  ED 52               		SBC HL,DE
     451:  00:8D25  DD 75 0D            		LD [IX+(CHNPRM_TnDelt-12)],L
     452:  00:8D28  DD 74 0E            		LD [IX+(CHNPRM_TnDelt+1-12)],H
     453:  00:8D2B  ED 5B 10 F0         		LD DE,[PT3_PrSlide]
     454:  00:8D2F  DD 73 FA            		LD [IX+(CHNPRM_CrTnSl-12)],E
     455:  00:8D32  DD 72 FB            		LD [IX+(CHNPRM_CrTnSl+1-12)],D
     456:  00:8D35  0A                  		LD A,[BC] ;SIGNED TONE STEP
     457:  00:8D36  03                  		INC BC
     458:  00:8D37  08                  		EX AF,AF'
     459:  00:8D38  0A                  		LD A,[BC]
     460:  00:8D39  03                  		INC BC
     461:  00:8D3A  A7                  		AND A
     462:  00:8D3B  28 01               		JR Z,.NOSIG
     463:  00:8D3D  EB                  		EX DE,HL
     464:  00:8D3E  ED 52               .NOSIG:	SBC HL,DE
     465:  00:8D40  F2 48 8D            		JP P,SET_STP
     466:  00:8D43  2F                  		CPL
     467:  00:8D44  08                  		EX AF,AF'
     468:  00:8D45  ED 44               		NEG
     469:  00:8D47  08                  		EX AF,AF'
     470:  00:8D48  DD 77 0C            SET_STP:	LD [IX+(CHNPRM_TSlStp+1-12)],A
     471:  00:8D4B  08                  		EX AF,AF'
     472:  00:8D4C  DD 77 0B            		LD [IX+(CHNPRM_TSlStp-12)],A
     473:  00:8D4F  DD 36 FE 00         		LD [IX+(CHNPRM_COnOff-12)],0
     474:  00:8D53  C9                  		RET
     475:  00:8D54                      
     476:  00:8D54  DD CB 09 D6         C_GLISS:	SET 2,[IX+(CHNPRM_Flags-12)]
     477:  00:8D58  0A                  		LD A,[BC]
     478:  00:8D59  03                  		INC BC
     479:  00:8D5A  DD 77 0A            		LD [IX+(CHNPRM_TnSlDl-12)],A
     480:  00:8D5D  DD 77 F9            		LD [IX+(CHNPRM_TSlCnt-12)],A
     481:  00:8D60  0A                  		LD A,[BC]
     482:  00:8D61  03                  		INC BC
     483:  00:8D62  08                  		EX AF,AF'
     484:  00:8D63  0A                  		LD A,[BC]
     485:  00:8D64  03                  		INC BC
     486:  00:8D65  18 E1               		JR SET_STP
     487:  00:8D67                      
     488:  00:8D67  0A                  C_SMPOS:	LD A,[BC]
     489:  00:8D68  03                  		INC BC
     490:  00:8D69  DD 77 F5            		LD [IX+(CHNPRM_PsInSm-12)],A
     491:  00:8D6C  C9                  		RET
     492:  00:8D6D                      
     493:  00:8D6D  0A                  C_ORPOS:	LD A,[BC]
     494:  00:8D6E  03                  		INC BC
     495:  00:8D6F  DD 77 F4            		LD [IX+(CHNPRM_PsInOr-12)],A
     496:  00:8D72  C9                  		RET
     497:  00:8D73                      
     498:  00:8D73  0A                  C_VIBRT:	LD A,[BC]
     499:  00:8D74  03                  		INC BC
     500:  00:8D75  DD 77 FF            		LD [IX+(CHNPRM_OnOffD-12)],A
     501:  00:8D78  DD 77 FE            		LD [IX+(CHNPRM_COnOff-12)],A
     502:  00:8D7B  0A                  		LD A,[BC]
     503:  00:8D7C  03                  		INC BC
     504:  00:8D7D  DD 77 00            		LD [IX+(CHNPRM_OffOnD-12)],A
     505:  00:8D80  AF                  		XOR A
     506:  00:8D81  DD 77 F9            		LD [IX+(CHNPRM_TSlCnt-12)],A
     507:  00:8D84  DD 77 FA            		LD [IX+(CHNPRM_CrTnSl-12)],A
     508:  00:8D87  DD 77 FB            		LD [IX+(CHNPRM_CrTnSl+1-12)],A
     509:  00:8D8A  C9                  		RET
     510:  00:8D8B                      
     511:  00:8D8B  0A                  C_ENGLS:	LD A,[BC]
     512:  00:8D8C  03                  		INC BC
     513:  00:8D8D  32 1E F0            		LD [PT3_Env_Del],A
     514:  00:8D90  32 7D F0            		LD [CurEDel],A
     515:  00:8D93  0A                  		LD A,[BC]
     516:  00:8D94  03                  		INC BC
     517:  00:8D95  6F                  		LD L,A
     518:  00:8D96  0A                  		LD A,[BC]
     519:  00:8D97  03                  		INC BC
     520:  00:8D98  67                  		LD H,A
     521:  00:8D99  22 1F F0            		LD [PT3_ESldAdd],HL
     522:  00:8D9C  C9                  		RET
     523:  00:8D9D                      
     524:  00:8D9D  0A                  C_DELAY:	LD A,[BC]
     525:  00:8D9E  03                  		INC BC
     526:  00:8D9F  32 1C F0            		LD [PT3_Delay],A
     527:  00:8DA2  C9                  		RET
     528:  00:8DA3                      	
     529:  00:8DA3  DD 73 08            SETENV:		LD [IX+(CHNPRM_Env_En-12)],E
     530:  00:8DA6  32 4D F1            		LD [AYREGS+AR_EnvTp],A
     531:  00:8DA9  0A                  		LD A,[BC]
     532:  00:8DAA  03                  		INC BC
     533:  00:8DAB  67                  		LD H,A
     534:  00:8DAC  0A                  		LD A,[BC]
     535:  00:8DAD  03                  		INC BC
     536:  00:8DAE  6F                  		LD L,A
     537:  00:8DAF  22 4E F1            		LD [EnvBase],HL
     538:  00:8DB2  AF                  		XOR A
     539:  00:8DB3  DD 77 F4            		LD [IX+(CHNPRM_PsInOr-12)],A
     540:  00:8DB6  32 7D F0            		LD [CurEDel],A
     541:  00:8DB9  67                  		LD H,A
     542:  00:8DBA  6F                  		LD L,A
     543:  00:8DBB  22 7B F0            		LD [CurESld],HL
     544:  00:8DBE  C9                  C_NOP:		RET
     545:  00:8DBF                      
     546:  00:8DBF  87                  SETORN:		ADD A,A
     547:  00:8DC0  5F                  		LD E,A
     548:  00:8DC1  16 00               		LD D,0
     549:  00:8DC3  DD 72 F4            		LD [IX+(CHNPRM_PsInOr-12)],D
     550:  00:8DC6  2A 07 F0            		LD HL,[PT3_OrnPtrs]
     551:  00:8DC9  19                  		ADD HL,DE
     552:  00:8DCA  5E                  		LD E,[HL]
     553:  00:8DCB  23                  		INC HL
     554:  00:8DCC  56                  		LD D,[HL]
     555:  00:8DCD  2A 01 F0            		LD HL,[PT3_MODADDR]
     556:  00:8DD0  19                  		ADD HL,DE
     557:  00:8DD1  DD 75 01            		LD [IX+(CHNPRM_OrnPtr-12)],L
     558:  00:8DD4  DD 74 02            		LD [IX+(CHNPRM_OrnPtr+1-12)],H
     559:  00:8DD7  C9                  		RET
     560:  00:8DD8                      
     561:  00:8DD8                      		;ALL 16 ADDRESSES TO PROTECT FROM BROKEN PT3 MODULES
     562:  00:8DD8  BE 8D               SPCCOMS:	dw C_NOP
     563:  00:8DDA  54 8D               		dw C_GLISS
     564:  00:8DDC  F3 8C               		dw C_PORTM
     565:  00:8DDE  67 8D               		dw C_SMPOS
     566:  00:8DE0  6D 8D               		dw C_ORPOS
     567:  00:8DE2  73 8D               		dw C_VIBRT
     568:  00:8DE4  BE 8D               		dw C_NOP
     569:  00:8DE6  BE 8D               		dw C_NOP
     570:  00:8DE8  8B 8D               		dw C_ENGLS
     571:  00:8DEA  9D 8D               		dw C_DELAY
     572:  00:8DEC  BE 8D               		dw C_NOP
     573:  00:8DEE  BE 8D               		dw C_NOP
     574:  00:8DF0  BE 8D               		dw C_NOP
     575:  00:8DF2  BE 8D               		dw C_NOP
     576:  00:8DF4  BE 8D               		dw C_NOP
     577:  00:8DF6  BE 8D               		dw C_NOP
     578:  00:8DF8                      
     579:  00:8DF8  AF                  CHREGS:		XOR A
     580:  00:8DF9  32 4A F1            		LD [AYREGS+AR_AmplC],A
     581:  00:8DFC  DD CB 15 46         		BIT 0,[IX+CHNPRM_Flags]
     582:  00:8E00  E5                  		PUSH HL
     583:  00:8E01  CA 27 8F            		JP Z,.CH_EXIT
     584:  00:8E04  ED 73 0B F0         		LD [PT3_CSP],SP
     585:  00:8E08  DD 6E 0D            		LD L,[IX+CHNPRM_OrnPtr]
     586:  00:8E0B  DD 66 0E            		LD H,[IX+CHNPRM_OrnPtr+1]
     587:  00:8E0E  F9                  		LD SP,HL
     588:  00:8E0F  D1                  		POP DE
     589:  00:8E10  67                  		LD H,A
     590:  00:8E11  DD 7E 00            		LD A,[IX+CHNPRM_PsInOr]
     591:  00:8E14  6F                  		LD L,A
     592:  00:8E15  39                  		ADD HL,SP
     593:  00:8E16  3C                  		INC A
     594:  00:8E17  BA                  		CP D
     595:  00:8E18  38 01               		JR C,.CH_ORPS
     596:  00:8E1A  7B                  		LD A,E
     597:  00:8E1B  DD 77 00            .CH_ORPS:	LD [IX+CHNPRM_PsInOr],A
     598:  00:8E1E  DD 7E 12            		LD A,[IX+CHNPRM_Note]
     599:  00:8E21  86                  		ADD A,[HL]
     600:  00:8E22  F2 26 8E            		JP P,.CH_NTP
     601:  00:8E25  AF                  		XOR A
     602:  00:8E26  FE 60               .CH_NTP:	CP 96
     603:  00:8E28  38 02               		JR C,.CH_NOK
     604:  00:8E2A  3E 5F               		LD A,95
     605:  00:8E2C  87                  .CH_NOK:	ADD A,A
     606:  00:8E2D  08                  		EX AF,AF'
     607:  00:8E2E  DD 6E 0F            		LD L,[IX+CHNPRM_SamPtr]
     608:  00:8E31  DD 66 10            		LD H,[IX+CHNPRM_SamPtr+1]
     609:  00:8E34  F9                  		LD SP,HL
     610:  00:8E35  D1                  		POP DE
     611:  00:8E36  26 00               		LD H,0
     612:  00:8E38  DD 7E 01            		LD A,[IX+CHNPRM_PsInSm]
     613:  00:8E3B  47                  		LD B,A
     614:  00:8E3C  87                  		ADD A,A
     615:  00:8E3D  87                  		ADD A,A
     616:  00:8E3E  6F                  		LD L,A
     617:  00:8E3F  39                  		ADD HL,SP
     618:  00:8E40  F9                  		LD SP,HL
     619:  00:8E41  78                  		LD A,B
     620:  00:8E42  3C                  		INC A
     621:  00:8E43  BA                  		CP D
     622:  00:8E44  38 01               		JR C,.CH_SMPS
     623:  00:8E46  7B                  		LD A,E
     624:  00:8E47  DD 77 01            .CH_SMPS:	LD [IX+CHNPRM_PsInSm],A
     625:  00:8E4A  C1                  		POP BC
     626:  00:8E4B  E1                  		POP HL
     627:  00:8E4C  DD 5E 08            		LD E,[IX+CHNPRM_TnAcc]
     628:  00:8E4F  DD 56 09            		LD D,[IX+CHNPRM_TnAcc+1]
     629:  00:8E52  19                  		ADD HL,DE
     630:  00:8E53  CB 70               		BIT 6,B
     631:  00:8E55  28 06               		JR Z,.CH_NOAC
     632:  00:8E57  DD 75 08            		LD [IX+CHNPRM_TnAcc],L
     633:  00:8E5A  DD 74 09            		LD [IX+CHNPRM_TnAcc+1],H
     634:  00:8E5D  EB                  .CH_NOAC:	EX DE,HL
     635:  00:8E5E  08                  		EX AF,AF'
     636:  00:8E5F  6F                  		LD L,A
     637:  00:8E60  26 00               		LD H,0
     638:  00:8E62  31 80 F0            		LD SP,NT_
     639:  00:8E65  39                  		ADD HL,SP
     640:  00:8E66  F9                  		LD SP,HL
     641:  00:8E67  E1                  		POP HL
     642:  00:8E68  19                  		ADD HL,DE
     643:  00:8E69  DD 5E 06            		LD E,[IX+CHNPRM_CrTnSl]
     644:  00:8E6C  DD 56 07            		LD D,[IX+CHNPRM_CrTnSl+1]
     645:  00:8E6F  19                  		ADD HL,DE
     646:  00:8E70  ED 7B 0B F0         		LD SP,[PT3_CSP]
     647:  00:8E74  E3                  		EX [SP],HL
     648:  00:8E75  AF                  		XOR A
     649:  00:8E76  DD B6 05            		OR [IX+CHNPRM_TSlCnt]
     650:  00:8E79  28 3E               		JR Z,.CH_AMP
     651:  00:8E7B  DD 35 05            		DEC [IX+CHNPRM_TSlCnt]
     652:  00:8E7E  20 39               		JR NZ,.CH_AMP
     653:  00:8E80  DD 7E 16            		LD A,[IX+CHNPRM_TnSlDl]
     654:  00:8E83  DD 77 05            		LD [IX+CHNPRM_TSlCnt],A
     655:  00:8E86  DD 6E 17            		LD L,[IX+CHNPRM_TSlStp]
     656:  00:8E89  DD 66 18            		LD H,[IX+CHNPRM_TSlStp+1]
     657:  00:8E8C  7C                  		LD A,H
     658:  00:8E8D  19                  		ADD HL,DE
     659:  00:8E8E  DD 75 06            		LD [IX+CHNPRM_CrTnSl],L
     660:  00:8E91  DD 74 07            		LD [IX+CHNPRM_CrTnSl+1],H
     661:  00:8E94  DD CB 15 56         		BIT 2,[IX+CHNPRM_Flags]
     662:  00:8E98  20 1F               		JR NZ,.CH_AMP
     663:  00:8E9A  DD 5E 19            		LD E,[IX+CHNPRM_TnDelt]
     664:  00:8E9D  DD 56 1A            		LD D,[IX+CHNPRM_TnDelt+1]
     665:  00:8EA0  A7                  		AND A
     666:  00:8EA1  28 01               		JR Z,.CH_STPP
     667:  00:8EA3  EB                  		EX DE,HL
     668:  00:8EA4  ED 52               .CH_STPP:	SBC HL,DE
     669:  00:8EA6  FA B9 8E            		JP M,.CH_AMP
     670:  00:8EA9  DD 7E 13            		LD A,[IX+CHNPRM_SlToNt]
     671:  00:8EAC  DD 77 12            		LD [IX+CHNPRM_Note],A
     672:  00:8EAF  AF                  		XOR A
     673:  00:8EB0  DD 77 05            		LD [IX+CHNPRM_TSlCnt],A
     674:  00:8EB3  DD 77 06            		LD [IX+CHNPRM_CrTnSl],A
     675:  00:8EB6  DD 77 07            		LD [IX+CHNPRM_CrTnSl+1],A
     676:  00:8EB9  DD 7E 02            .CH_AMP:	LD A,[IX+CHNPRM_CrAmSl]
     677:  00:8EBC  CB 79               		BIT 7,C
     678:  00:8EBE  28 13               		JR Z,.CH_NOAM
     679:  00:8EC0  CB 71               		BIT 6,C
     680:  00:8EC2  28 07               		JR Z,.CH_AMIN
     681:  00:8EC4  FE 0F               		CP 15
     682:  00:8EC6  28 0B               		JR Z,.CH_NOAM
     683:  00:8EC8  3C                  		INC A
     684:  00:8EC9  18 05               		JR .CH_SVAM
     685:  00:8ECB  FE F1               .CH_AMIN:	CP -15
     686:  00:8ECD  28 04               		JR Z,.CH_NOAM
     687:  00:8ECF  3D                  		DEC A
     688:  00:8ED0  DD 77 02            .CH_SVAM:	LD [IX+CHNPRM_CrAmSl],A
     689:  00:8ED3  6F                  .CH_NOAM:	LD L,A
     690:  00:8ED4  78                  		LD A,B
     691:  00:8ED5  E6 0F               		AND 15
     692:  00:8ED7  85                  		ADD A,L
     693:  00:8ED8  F2 DC 8E            		JP P,.CH_APOS
     694:  00:8EDB  AF                  		XOR A
     695:  00:8EDC  FE 10               .CH_APOS:	CP 16
     696:  00:8EDE  38 02               		JR C,.CH_VOL
     697:  00:8EE0  3E 0F               		LD A,15
     698:  00:8EE2  DD B6 1C            .CH_VOL:	OR [IX+CHNPRM_Volume]
     699:  00:8EE5  6F                  		LD L,A
     700:  00:8EE6  26 00               		LD H,0
     701:  00:8EE8  11 40 F1            		LD DE,VT_
     702:  00:8EEB  19                  		ADD HL,DE
     703:  00:8EEC  7E                  		LD A,[HL]
     704:  00:8EED  CB 41               .CH_ENV:	BIT 0,C
     705:  00:8EEF  20 03               		JR NZ,.CH_NOEN
     706:  00:8EF1  DD B6 14            		OR [IX+CHNPRM_Env_En]
     707:  00:8EF4  32 4A F1            .CH_NOEN:	LD [AYREGS+AR_AmplC],A
     708:  00:8EF7  CB 78               		BIT 7,B
     709:  00:8EF9  79                  		LD A,C
     710:  00:8EFA  28 19               		JR Z,.NO_ENSL
     711:  00:8EFC  17                  		RLA
     712:  00:8EFD  17                  		RLA
     713:  00:8EFE  CB 2F               		SRA A
     714:  00:8F00  CB 2F               		SRA A
     715:  00:8F02  CB 2F               		SRA A
     716:  00:8F04  DD 86 04            		ADD A,[IX+CHNPRM_CrEnSl] ;SEE COMMENT BELOW
     717:  00:8F07  CB 68               		BIT 5,B
     718:  00:8F09  28 03               		JR Z,.NO_ENAC
     719:  00:8F0B  DD 77 04            		LD [IX+CHNPRM_CrEnSl],A
     720:  00:8F0E  21 1D F0            .NO_ENAC:	LD HL,PT3_AddToEn
     721:  00:8F11  86                  		ADD A,[HL] ;BUG IN PT3 - NEED WORD HERE.
     722:  00:8F12                      			   ;FIX IT IN NEXT VERSION?
     723:  00:8F12  77                  		LD [HL],A
     724:  00:8F13  18 0E               		JR .CH_MIX
     725:  00:8F15  1F                  .NO_ENSL:	RRA
     726:  00:8F16  DD 86 03            		ADD A,[IX+CHNPRM_CrNsSl]
     727:  00:8F19  32 7F F0            		LD [AddToNs],A
     728:  00:8F1C  CB 68               		BIT 5,B
     729:  00:8F1E  28 03               		JR Z,.CH_MIX
     730:  00:8F20  DD 77 03            		LD [IX+CHNPRM_CrNsSl],A
     731:  00:8F23  78                  .CH_MIX:	LD A,B
     732:  00:8F24  1F                  		RRA
     733:  00:8F25  E6 48               		AND $48
     734:  00:8F27  21 47 F1            .CH_EXIT:	LD HL,AYREGS+AR_Mixer
     735:  00:8F2A  B6                  		OR [HL]
     736:  00:8F2B  0F                  		RRCA
     737:  00:8F2C  77                  		LD [HL],A
     738:  00:8F2D  E1                  		POP HL
     739:  00:8F2E  AF                  		XOR A
     740:  00:8F2F  DD B6 0A            		OR [IX+CHNPRM_COnOff]
     741:  00:8F32  C8                  		RET Z
     742:  00:8F33  DD 35 0A            		DEC [IX+CHNPRM_COnOff]
     743:  00:8F36  C0                  		RET NZ
     744:  00:8F37  DD AE 15            		XOR [IX+CHNPRM_Flags]
     745:  00:8F3A  DD 77 15            		LD [IX+CHNPRM_Flags],A
     746:  00:8F3D  1F                  		RRA
     747:  00:8F3E  DD 7E 0B            		LD A,[IX+CHNPRM_OnOffD]
     748:  00:8F41  38 03               		JR C,.CH_ONDL
     749:  00:8F43  DD 7E 0C            		LD A,[IX+CHNPRM_OffOnD]
     750:  00:8F46  DD 77 0A            .CH_ONDL:	LD [IX+CHNPRM_COnOff],A
     751:  00:8F49  C9                  		RET
     752:  00:8F4A                      
     753:  00:8F4A  AF                  PT3_PLAY:	XOR A
     754:  00:8F4B  32 1D F0            		LD [PT3_AddToEn],A
     755:  00:8F4E  32 47 F1            		LD [AYREGS+AR_Mixer],A
     756:  00:8F51  3D                  		DEC A
     757:  00:8F52  32 4D F1            		LD [AYREGS+AR_EnvTp],A
     758:  00:8F55  21 7A F0            		LD HL,DelyCnt
     759:  00:8F58  35                  		DEC [HL]
     760:  00:8F59  C2 E0 8F            		JP NZ,.PL2
     761:  00:8F5C  21 3E F0            		LD HL,ChanA+CHNPRM_NtSkCn
     762:  00:8F5F  35                  		DEC [HL]
     763:  00:8F60  20 4E               		JR NZ,.PL1B
     764:  00:8F62  ED 4B 12 F0         		LD BC,[PT3_AdInPtA]
     765:  00:8F66  0A                  		LD A,[BC]
     766:  00:8F67  A7                  		AND A
     767:  00:8F68  20 3B               		JR NZ,.PL1A
     768:  00:8F6A  57                  		LD D,A
     769:  00:8F6B  32 7E F0            		LD [Ns_Base],A
     770:  00:8F6E  2A 03 F0            		LD HL,[PT3_CrPsPtr]
     771:  00:8F71  23                  		INC HL
     772:  00:8F72  7E                  		LD A,[HL]
     773:  00:8F73  3C                  		INC A
     774:  00:8F74  20 08               		JR NZ,.PLNLP
     775:  00:8F76  CD E0 8A            		CALL CHECKLP
     776:  00:8F79  2A 18 F0            		LD HL,[PT3_LPosPtr]
     777:  00:8F7C  7E                  		LD A,[HL]
     778:  00:8F7D  3C                  		INC A
     779:  00:8F7E  22 03 F0            .PLNLP:	LD [PT3_CrPsPtr],HL
     780:  00:8F81  3D                  		DEC A
     781:  00:8F82  87                  		ADD A,A
     782:  00:8F83  5F                  		LD E,A
     783:  00:8F84  CB 12               		RL D
     784:  00:8F86  2A 1A F0            		LD HL,[PT3_PatsPtr]
     785:  00:8F89  19                  		ADD HL,DE
     786:  00:8F8A  ED 5B 01 F0         		LD DE,[PT3_MODADDR]
     787:  00:8F8E  ED 73 0D F0         		LD [PT3_PSP],SP
     788:  00:8F92  F9                  		LD SP,HL
     789:  00:8F93  E1                  		POP HL
     790:  00:8F94  19                  		ADD HL,DE
     791:  00:8F95  44                  		LD B,H
     792:  00:8F96  4D                  		LD C,L
     793:  00:8F97  E1                  		POP HL
     794:  00:8F98  19                  		ADD HL,DE
     795:  00:8F99  22 14 F0            		LD [PT3_AdInPtB],HL
     796:  00:8F9C  E1                  		POP HL
     797:  00:8F9D  19                  		ADD HL,DE
     798:  00:8F9E  22 16 F0            		LD [PT3_AdInPtC],HL
     799:  00:8FA1  ED 7B 0D F0         		LD SP,[PT3_PSP]
     800:  00:8FA5                      
     801:  00:8FA5  DD 21 2F F0         .PL1A:		LD IX,ChanA+12
     802:  00:8FA9  CD 88 8C            		CALL PTDECOD
     803:  00:8FAC  ED 43 12 F0         		LD [PT3_AdInPtA],BC
     804:  00:8FB0                      
     805:  00:8FB0  21 5B F0            .PL1B:		LD HL,ChanB+CHNPRM_NtSkCn
     806:  00:8FB3  35                  		DEC [HL]
     807:  00:8FB4  20 0F               		JR NZ,.PL1C
     808:  00:8FB6  DD 21 4C F0         		LD IX,ChanB+12
     809:  00:8FBA  ED 4B 14 F0         		LD BC,[PT3_AdInPtB]
     810:  00:8FBE  CD 88 8C            		CALL PTDECOD
     811:  00:8FC1  ED 43 14 F0         		LD [PT3_AdInPtB],BC
     812:  00:8FC5                      
     813:  00:8FC5  21 78 F0            .PL1C:		LD HL,ChanC+CHNPRM_NtSkCn
     814:  00:8FC8  35                  		DEC [HL]
     815:  00:8FC9  20 0F               		JR NZ,.PL1D
     816:  00:8FCB  DD 21 69 F0         		LD IX,ChanC+12
     817:  00:8FCF  ED 4B 16 F0         		LD BC,[PT3_AdInPtC]
     818:  00:8FD3  CD 88 8C            		CALL PTDECOD
     819:  00:8FD6  ED 43 16 F0         		LD [PT3_AdInPtC],BC
     820:  00:8FDA                      
     821:  00:8FDA  3A 1C F0            .PL1D:		LD A,[PT3_Delay]
     822:  00:8FDD  32 7A F0            		LD [DelyCnt],A
     823:  00:8FE0                      
     824:  00:8FE0  DD 21 23 F0         .PL2:		LD IX,ChanA
     825:  00:8FE4  2A 40 F1            		LD HL,[AYREGS+AR_TonA]
     826:  00:8FE7  CD F8 8D            		CALL CHREGS
     827:  00:8FEA  22 40 F1            		LD [AYREGS+AR_TonA],HL
     828:  00:8FED  3A 4A F1            		LD A,[AYREGS+AR_AmplC]
     829:  00:8FF0  32 48 F1            		LD [AYREGS+AR_AmplA],A
     830:  00:8FF3  DD 21 40 F0         		LD IX,ChanB
     831:  00:8FF7  2A 42 F1            		LD HL,[AYREGS+AR_TonB]
     832:  00:8FFA  CD F8 8D            		CALL CHREGS
     833:  00:8FFD  22 42 F1            		LD [AYREGS+AR_TonB],HL
     834:  00:9000  3A 4A F1            		LD A,[AYREGS+AR_AmplC]
     835:  00:9003  32 49 F1            		LD [AYREGS+AR_AmplB],A
     836:  00:9006  DD 21 5D F0         		LD IX,ChanC
     837:  00:900A  2A 44 F1            		LD HL,[AYREGS+AR_TonC]
     838:  00:900D  CD F8 8D            		CALL CHREGS
     839:  00:9010  22 44 F1            		LD [AYREGS+AR_TonC],HL
     840:  00:9013                      
     841:  00:9013  2A 7E F0            		LD HL,[Ns_Base_AddToNs]
     842:  00:9016  7C                  		LD A,H
     843:  00:9017  85                  		ADD A,L
     844:  00:9018  32 46 F1            		LD [AYREGS+AR_Noise],A
     845:  00:901B                      
     846:  00:901B  3A 1D F0            		LD A,[PT3_AddToEn]
     847:  00:901E  5F                  		LD E,A
     848:  00:901F  87                  		ADD A,A
     849:  00:9020  9F                  		SBC A,A
     850:  00:9021  57                  		LD D,A
     851:  00:9022  2A 4E F1            		LD HL,[EnvBase]
     852:  00:9025  19                  		ADD HL,DE
     853:  00:9026  ED 5B 7B F0         		LD DE,[CurESld]
     854:  00:902A  19                  		ADD HL,DE
     855:  00:902B  22 4B F1            		LD [AYREGS+AR_Env],HL
     856:  00:902E                      
     857:  00:902E  AF                  		XOR A
     858:  00:902F  21 7D F0            		LD HL,CurEDel
     859:  00:9032  B6                  		OR [HL]
     860:  00:9033  C8                  		RET Z
     861:  00:9034  35                  		DEC [HL]
     862:  00:9035  C0                  		RET NZ
     863:  00:9036  3A 1E F0            		LD A,[PT3_Env_Del]
     864:  00:9039  77                  		LD [HL],A
     865:  00:903A  2A 1F F0            		LD HL,[PT3_ESldAdd]
     866:  00:903D  19                  		ADD HL,DE
     867:  00:903E  22 7B F0            		LD [CurESld],HL
     868:  00:9041  C9                  		RET
     869:  00:9042                      
     870:  00:9042  AF                  PT3_ROUT:	XOR A
     871:  00:9043                      	
     872:  00:9043                      ROUT_A0:	; --- FIXES BITS 6 AND 7 OF MIXER ---
     873:  00:9043  21 47 F1            		LD	HL,AYREGS+AR_Mixer
     874:  00:9046  CB FE               		set	7,[hl]
     875:  00:9048  CB B6               		res	6,[hl]
     876:  00:904A                      
     877:  00:904A  0E A0               		LD C,$A0
     878:  00:904C  21 40 F1            		LD HL,AYREGS
     879:  00:904F  ED 79               .LOUT:		OUT [C],A
     880:  00:9051  0C                  		INC C
     881:  00:9052  ED A3               		OUTI 
     882:  00:9054  0D                  		DEC C
     883:  00:9055  3C                  		INC A
     884:  00:9056  FE 0D               		CP 13
     885:  00:9058  20 F5               		JR NZ,.LOUT
     886:  00:905A  ED 79               		OUT [C],A
     887:  00:905C  7E                  		LD A,[HL]
     888:  00:905D  A7                  		AND A
     889:  00:905E  F8                  		RET M
     890:  00:905F  0C                  		INC C
     891:  00:9060  ED 79               		OUT [C],A
     892:  00:9062  C9                  		RET
     893:  00:9063                      
     894:  00:9063  64                  NT_DATA:	db (T_NEW_0-T1_)*2
     895:  00:9064  2A                  		db TCNEW_0-T_
     896:  00:9065  65                  		db (T_OLD_0-T1_)*2+1
     897:  00:9066  00                  		db TCOLD_0-T_
     898:  00:9067  01                  		db (T_NEW_1-T1_)*2+1
     899:  00:9068  0C                  		db TCNEW_1-T_
     900:  00:9069  01                  		db (T_OLD_1-T1_)*2+1
     901:  00:906A  0C                  		db TCOLD_1-T_
     902:  00:906B  94                  		db (T_NEW_2-T1_)*2
     903:  00:906C  35                  		db TCNEW_2-T_
     904:  00:906D  30                  		db (T_OLD_2-T1_)*2
     905:  00:906E  0E                  		db TCOLD_2-T_
     906:  00:906F  60                  		db (T_NEW_3-T1_)*2
     907:  00:9070  20                  		db TCNEW_3-T_
     908:  00:9071  60                  		db (T_OLD_3-T1_)*2
     909:  00:9072  21                  		db TCOLD_3-T_
     910:  00:9073                      
     911:  00:9073                      T_:
     912:  00:9073                      
     913:  00:9073                      TCOLD_0:	db $00+1,$04+1,$08+1,$0A+1,$0C+1,$0E+1,$12+1,$14+1
     913:  00:9073  01 05 09 0B 0D 0F 13 15 
     914:  00:907B  19 25 3D 00         		db $18+1,$24+1,$3C+1,0
     915:  00:907F                      TCNEW_1:	
     916:  00:907F  5D 00               TCOLD_1:	db $5C+1,0
     917:  00:9081                      TCOLD_2:	db $30+1,$36+1,$4C+1,$52+1,$5E+1,$70+1,$82,$8C,$9C
     917:  00:9081  31 37 4D 53 5F 71 82 8C 9C 
     918:  00:908A                      		db $9E,$A0,$A6,$A8,$AA,$AC,$AE,$AE,0
     918:  00:908A  9E A0 A6 A8 AA AC AE AE 00 
     919:  00:9093  57                  TCNEW_3:	db $56+1
     920:  00:9094                      TCOLD_3:	db $1E+1,$22+1,$24+1,$28+1,$2C+1,$2E+1,$32+1,$BE+1,0
     920:  00:9094  1F 23 25 29 2D 2F 33 BF 00 
     921:  00:909D                      TCNEW_0:	db $1C+1,$20+1,$22+1,$26+1,$2A+1,$2C+1,$30+1,$54+1
     921:  00:909D  1D 21 23 27 2B 2D 31 55 
     922:  00:90A5  BD BF 00            		db $BC+1,$BE+1,0
     923:  00:90A8                      TCNEW_2:	db $1A+1,$20+1,$24+1,$28+1,$2A+1,$3A+1,$4C+1,$5E+1
     923:  00:90A8  1B 21 25 29 2B 3B 4D 5F 
     924:  00:90B0  BB BD BF            		db $BA+1,$BC+1,$BE+1
     925:  00:90B3                      
     926:  00:90B3  00 01 00 90         EMPTYSAMORN: 	db 0,1,0,$90 ;delete $90 if you don't need default sample
     927:  00:90B7                      
     928:  00:90B7                      T_PACK:		; First 12 values of tone tables (packed)
     929:  00:90B7  0D                  		db ($06EC*2)/256
     930:  00:90B8  D8                  		db #d8
     931:  00:90B9  69                  		db $0755-$06EC
     932:  00:90BA  70                  		db $07C5-$0755
     933:  00:90BB  76                  		db $083B-$07C5
     934:  00:90BC  7D                  		db $08B8-$083B
     935:  00:90BD  85                  		db $093D-$08B8
     936:  00:90BE  8D                  		db $09CA-$093D
     937:  00:90BF  95                  		db $0A5F-$09CA
     938:  00:90C0  9D                  		db $0AFC-$0A5F
     939:  00:90C1  A8                  		db $0BA4-$0AFC
     940:  00:90C2  B1                  		db $0C55-$0BA4
     941:  00:90C3  BB                  		db $0D10-$0C55
     942:  00:90C4  0C                  		db ($066D*2)/256
     943:  00:90C5  DA                  		db #da
     944:  00:90C6  62                  		db $06CF-$066D
     945:  00:90C7  68                  		db $0737-$06CF
     946:  00:90C8  6D                  		db $07A4-$0737
     947:  00:90C9  75                  		db $0819-$07A4
     948:  00:90CA  7B                  		db $0894-$0819
     949:  00:90CB  83                  		db $0917-$0894
     950:  00:90CC  8A                  		db $09A1-$0917
     951:  00:90CD  92                  		db $0A33-$09A1
     952:  00:90CE  9C                  		db $0ACF-$0A33
     953:  00:90CF  A4                  		db $0B73-$0ACF
     954:  00:90D0  AF                  		db $0C22-$0B73
     955:  00:90D1  B8                  		db $0CDA-$0C22
     956:  00:90D2  0E                  		db ($0704*2)/256
     957:  00:90D3  08                  		db #08
     958:  00:90D4  6A                  		db $076E-$0704
     959:  00:90D5  72                  		db $07E0-$076E
     960:  00:90D6  78                  		db $0858-$07E0
     961:  00:90D7  7E                  		db $08D6-$0858
     962:  00:90D8  86                  		db $095C-$08D6
     963:  00:90D9  90                  		db $09EC-$095C
     964:  00:90DA  96                  		db $0A82-$09EC
     965:  00:90DB  A0                  		db $0B22-$0A82
     966:  00:90DC  AA                  		db $0BCC-$0B22
     967:  00:90DD  B4                  		db $0C80-$0BCC
     968:  00:90DE  BE                  		db $0D3E-$0C80
     969:  00:90DF  0F                  		db ($07E0*2)/256
     970:  00:90E0  C0                  		db #c0
     971:  00:90E1  78                  		db $0858-$07E0
     972:  00:90E2  88                  		db $08E0-$0858
     973:  00:90E3  80                  		db $0960-$08E0
     974:  00:90E4  90                  		db $09F0-$0960
     975:  00:90E5  98                  		db $0A88-$09F0
     976:  00:90E6  A0                  		db $0B28-$0A88
     977:  00:90E7  B0                  		db $0BD8-$0B28
     978:  00:90E8  A8                  		db $0C80-$0BD8
     979:  00:90E9  E0                  		db $0D60-$0C80
     980:  00:90EA  B0                  		db $0E10-$0D60
     981:  00:90EB  E8                  		db $0EF8-$0E10
      61.  00:90EC                      	include "ayFX-ROM_sjasm.asm"
       1:  00:90EC                      		; --- ayFX REPLAYER v1.31 ---
       2:  00:90EC                      
       3:  00:90EC                      		; --- v1.31	Fixed bug on previous version, only PSG channel C worked
       4:  00:90EC                      		; --- v1.3	Fixed volume and Relative volume versions on the same file, conditional compilation
       5:  00:90EC                      		; ---		Support for dynamic or fixed channel allocation
       6:  00:90EC                      		; --- v1.2f/r	ayFX bank support
       7:  00:90EC                      		; --- v1.11f/r	If a frame volume is zero then no AYREGS update
       8:  00:90EC                      		; --- v1.1f/r	Fixed volume for all ayFX streams
       9:  00:90EC                      		; --- v1.1	Explicit priority (as suggested by AR)
      10:  00:90EC                      		; --- v1.0f	Bug fixed (error when using noise)
      11:  00:90EC                      		; --- v1.0	Initial release
      12:  00:90EC                      
      13:  00:90EC                      		; --- DEFINE AYFXRELATIVE AS 0 FOR FIXED VOLUME VERSION ---
      14:  00:90EC                      		; --- DEFINE AYFXRELATIVE AS 1 FOR RELATIVE VOLUME VERSION ---
      15:  00:90EC  (00:0000)           AYFXRELATIVE equ 0
      16:  00:90EC                      
      17:  00:90EC                      ayFX_SETUP:	; ---          ayFX replayer setup          ---
      18:  00:90EC                      		; --- INPUT: HL -> pointer to the ayFX bank ---
      19:  00:90EC  22 41 F2            		ld	[ayFX_BANK],hl			; Current ayFX bank
      20:  00:90EF  3E 01               		ld	a,1				; a:=0
      21:  00:90F1  32 40 F2            		ld	[ayFX_MODE],a			; Initial mode: fixed channel
      22:  00:90F4  3C                  		inc	a				; Starting channel (=1)
      23:  00:90F5  32 4A F2            		ld	[ayFX_CHANNEL],a		; Updated
      24:  00:90F8                      ayFX_END:	; --- End of an ayFX stream ---
      25:  00:90F8  3E FF               		ld	a,255				; Lowest ayFX priority
      26:  00:90FA  32 43 F2            		ld	[ayFX_PRIORITY],a		; Priority saved (not playing ayFX stream)
      27:  00:90FD  C9                  		ret					; Return
      28:  00:90FE                      
      29:  00:90FE                      ayFX_INIT:	; ---     INIT A NEW ayFX STREAM     ---
      30:  00:90FE                      		; --- INPUT: A -> sound to be played ---
      31:  00:90FE                      		; ---        C -> sound priority     ---
      32:  00:90FE  C5                  		push	bc				; Store bc in stack
      33:  00:90FF  D5                  		push	de				; Store de in stack
      34:  00:9100  E5                  		push	hl				; Store hl in stack
      35:  00:9101                      		; --- Check if the index is in the bank ---
      36:  00:9101  47                  		ld	b,a				; b:=a (new ayFX stream index)
      37:  00:9102  2A 41 F2            		ld	hl,[ayFX_BANK]			; Current ayFX BANK
      38:  00:9105  7E                  		ld	a,[hl]				; Number of samples in the bank
      39:  00:9106  B7                  		or	a				; If zero (means 256 samples)...
      40:  00:9107  28 06               		jr	z,.CHECK_PRI			; ...goto .CHECK_PRI
      41:  00:9109                      		; The bank has less than 256 samples
      42:  00:9109  78                  		ld	a,b				; a:=b (new ayFX stream index)
      43:  00:910A  BE                  		cp	[hl]				; If new index is not in the bank...
      44:  00:910B  3E 02               		ld	a,2				; a:=2 (error 2: Sample not in the bank)
      45:  00:910D  30 21               		jr	nc,.INIT_END			; ...we can't init it
      46:  00:910F                      .CHECK_PRI:	; --- Check if the new priority is lower than the current one ---
      47:  00:910F                      		; ---   Remember: 0 = highest priority, 15 = lowest priority  ---
      48:  00:910F  78                  		ld	a,b				; a:=b (new ayFX stream index)
      49:  00:9110  3A 43 F2            		ld	a,[ayFX_PRIORITY]		; a:=Current ayFX stream priority
      50:  00:9113  B9                  		cp	c				; If new ayFX stream priority is lower than current one...
      51:  00:9114  3E 01               		ld	a,1				; a:=1 (error 1: A sample with higher priority is being played)
      52:  00:9116  38 18               		jr	c,.INIT_END			; ...we don't start the new ayFX stream
      53:  00:9118                      		; --- Set new priority ---
      54:  00:9118  79                  		ld	a,c				; a:=New priority
      55:  00:9119  E6 0F               		and	$0F				; We mask the priority
      56:  00:911B  32 43 F2            		ld	[ayFX_PRIORITY],a		; new ayFX stream priority saved in RAM
      57:  00:911E                      
      58:  00:911E                      		IF ( AYFXRELATIVE == 1 )
      59:  00:911E                    ~ 			; --- Volume adjust using PT3 volume table ---
      60:  00:911E                    ~ 			ld	c,a				; c:=New priority (fixed)
      61:  00:911E                    ~ 			ld	a,15				; a:=15
      62:  00:911E                    ~ 			sub	c				; a:=15-New priority = relative volume
      63:  00:911E                    ~ 			jr	z,.INIT_NOSOUND		; If priority is 15 -> no sound output (volume is zero)
      64:  00:911E                    ~ 			add	a,a				; a:=a*2
      65:  00:911E                    ~ 			add	a,a				; a:=a*4
      66:  00:911E                    ~ 			add	a,a				; a:=a*8
      67:  00:911E                    ~ 			add	a,a				; a:=a*16
      68:  00:911E                    ~ 			ld	e,a				; e:=a
      69:  00:911E                    ~ 			ld	d,0				; de:=a
      70:  00:911E                    ~ 			ld	hl,VT_				; hl:=PT3 volume table
      71:  00:911E                    ~ 			add	hl,de				; hl is a pointer to the relative volume table
      72:  00:911E                    ~ 			ld	[ayFX_VT],hl			; Save pointer
      73:  00:911E                    ~ 		ENDIF
      74:  00:911E                      
      75:  00:911E                      		; --- Calculate the pointer to the new ayFX stream ---
      76:  00:911E  ED 5B 41 F2         		ld	de,[ayFX_BANK]			; de:=Current ayFX bank
      77:  00:9122  13                  		inc	de				; de points to the increments table of the bank
      78:  00:9123  68                  		ld	l,b				; l:=b (new ayFX stream index)
      79:  00:9124  26 00               		ld	h,0				; hl:=b (new ayFX stream index)
      80:  00:9126  29                  		add	hl,hl				; hl:=hl*2
      81:  00:9127  19                  		add	hl,de				; hl:=hl+de (hl points to the correct increment)
      82:  00:9128  5E                  		ld	e,[hl]				; e:=lower byte of the increment
      83:  00:9129  23                  		inc	hl				; hl points to the higher byte of the correct increment
      84:  00:912A  56                  		ld	d,[hl]				; de:=increment
      85:  00:912B  19                  		add	hl,de				; hl:=hl+de (hl points to the new ayFX stream)
      86:  00:912C  22 44 F2            		ld	[ayFX_POINTER],hl		; Pointer saved in RAM
      87:  00:912F  AF                  		xor	a				; a:=0 (no errors)
      88:  00:9130  E1                  .INIT_END:	pop	hl				; Retrieve hl from stack
      89:  00:9131  D1                  		pop	de				; Retrieve de from stack
      90:  00:9132  C1                  		pop	bc				; Retrieve bc from stack
      91:  00:9133  C9                  		ret					; Return
      92:  00:9134                      
      93:  00:9134                      		IF ( AYFXRELATIVE == 1 )
      94:  00:9134                    ~ .INIT_NOSOUND:	; --- Init a sample with relative volume zero -> no sound output ---
      95:  00:9134                    ~ 			ld	a,255				; Lowest ayFX priority
      96:  00:9134                    ~ 			ld	[ayFX_PRIORITY],a		; Priority saved (not playing ayFX stream)
      97:  00:9134                    ~ 			jr	.INIT_END			; Jumps to .INIT_END
      98:  00:9134                    ~ 		ENDIF
      99:  00:9134                      
     100:  00:9134                      ayFX_PLAY:	; --- PLAY A FRAME OF AN ayFX STREAM ---
     101:  00:9134  3A 43 F2            		ld	a,[ayFX_PRIORITY]		; a:=Current ayFX stream priority
     102:  00:9137  B7                  		or	a				; If priority has bit 7 on...
     103:  00:9138  F8                  		ret	m				; ...return
     104:  00:9139                      		; --- Calculate next ayFX channel (if needed) ---
     105:  00:9139  3A 40 F2            		ld	a,[ayFX_MODE]			; ayFX mode
     106:  00:913C  E6 01               		and	1				; If bit0=0 (fixed channel)...
     107:  00:913E  28 08               		jr	z,.TAKECB			; ...skip channel changing
     108:  00:9140  21 4A F2            		ld	hl,ayFX_CHANNEL			; Old ayFX playing channel
     109:  00:9143  35                  		dec	[hl]				; New ayFX playing channel
     110:  00:9144  20 02               		jr	nz,.TAKECB			; If not zero jump to .TAKECB
     111:  00:9146  36 03               		ld	[hl],3				; If zero -> set channel 3
     112:  00:9148                      .TAKECB:	; --- Extract control byte from stream ---
     113:  00:9148  2A 44 F2            		ld	hl,[ayFX_POINTER]		; Pointer to the current ayFX stream
     114:  00:914B  4E                  		ld	c,[hl]				; c:=Control byte
     115:  00:914C  23                  		inc	hl				; Increment pointer
     116:  00:914D                      		; --- Check if there's new tone on stream ---
     117:  00:914D  CB 69               		bit	5,c				; If bit 5 c is off...
     118:  00:914F  28 08               		jr	z,.CHECK_NN			; ...jump to .CHECK_NN (no new tone)
     119:  00:9151                      		; --- Extract new tone from stream ---
     120:  00:9151  5E                  		ld	e,[hl]				; e:=lower byte of new tone
     121:  00:9152  23                  		inc	hl				; Increment pointer
     122:  00:9153  56                  		ld	d,[hl]				; d:=higher byte of new tone
     123:  00:9154  23                  		inc	hl				; Increment pointer
     124:  00:9155  ED 53 46 F2         		ld	[ayFX_TONE],de			; ayFX tone updated
     125:  00:9159                      .CHECK_NN:	; --- Check if there's new noise on stream ---
     126:  00:9159  CB 71               		bit	6,c				; if bit 6 c is off...
     127:  00:915B  28 09               		jr	z,.SETPOINTER			; ...jump to .SETPOINTER (no new noise)
     128:  00:915D                      		; --- Extract new noise from stream ---
     129:  00:915D  7E                  		ld	a,[hl]				; a:=New noise
     130:  00:915E  23                  		inc	hl				; Increment pointer
     131:  00:915F  FE 20               		cp	$20				; If it's an illegal value of noise (used to mark end of stream)...
     132:  00:9161  28 95               		jr.	z,ayFX_END			; ...jump to ayFX_END
     133:  00:9163  32 48 F2            		ld	[ayFX_NOISE],a			; ayFX noise updated
     134:  00:9166                      .SETPOINTER:	; --- Update ayFX pointer ---
     135:  00:9166  22 44 F2            		ld	[ayFX_POINTER],hl		; Update ayFX stream pointer
     136:  00:9169                      		; --- Extract volume ---
     137:  00:9169  79                  		ld	a,c				; a:=Control byte
     138:  00:916A  E6 0F               		and	$0F				; lower nibble
     139:  00:916C                      
     140:  00:916C                      		IF ( AYFXRELATIVE == 1 )
     141:  00:916C                    ~ 			; --- Fix the volume using PT3 Volume Table ---
     142:  00:916C                    ~ 			ld	hl,[ayFX_VT]			; hl:=Pointer to relative volume table
     143:  00:916C                    ~ 			ld	e,a				; e:=a (ayFX volume)
     144:  00:916C                    ~ 			ld	d,0				; d:=0
     145:  00:916C                    ~ 			add	hl,de				; hl:=hl+de (hl points to the relative volume of this frame
     146:  00:916C                    ~ 			ld	a,[hl]				; a:=ayFX relative volume
     147:  00:916C                    ~ 			or	a				; If relative volume is zero...
     148:  00:916C                    ~ 		ENDIF
     149:  00:916C                      
     150:  00:916C  32 49 F2            		ld	[ayFX_VOLUME],a			; ayFX volume updated
     151:  00:916F  C8                  		ret	z				; ...return (don't copy ayFX values in to AYREGS)
     152:  00:9170                      		; -------------------------------------
     153:  00:9170                      		; --- COPY ayFX VALUES IN TO AYREGS ---
     154:  00:9170                      		; -------------------------------------
     155:  00:9170                      		; --- Set noise channel ---
     156:  00:9170  CB 79               		bit	7,c				; If noise is off...
     157:  00:9172  20 06               		jr	nz,.SETMASKS			; ...jump to .SETMASKS
     158:  00:9174  3A 48 F2            		ld	a,[ayFX_NOISE]			; ayFX noise value
     159:  00:9177  32 46 F1            		ld	[AYREGS+6],a			; copied in to AYREGS (noise channel)
     160:  00:917A                      .SETMASKS:	; --- Set mixer masks ---
     161:  00:917A  79                  		ld	a,c				; a:=Control byte
     162:  00:917B  E6 90               		and	$90				; Only bits 7 and 4 (noise and tone mask for psg reg 7)
     163:  00:917D  FE 90               		cp	$90				; If no noise and no tone...
     164:  00:917F  C8                  		ret	z				; ...return (don't copy ayFX values in to AYREGS)
     165:  00:9180                      		; --- Copy ayFX values in to ARYREGS ---
     166:  00:9180  0F                  		rrca					; Rotate a to the right (1 TIME)
     167:  00:9181  0F                  		rrca					; Rotate a to the right (2 TIMES) (OR mask)
     168:  00:9182  16 DB               		ld	d,$DB				; d:=Mask for psg mixer (AND mask)
     169:  00:9184                      		; --- Dump to correct channel ---
     170:  00:9184  21 4A F2            		ld	hl,ayFX_CHANNEL			; Next ayFX playing channel
     171:  00:9187  46                  		ld	b,[hl]				; Channel counter
     172:  00:9188                      .CHK1:		; --- Check if playing channel was 1 ---
     173:  00:9188  10 0D               		djnz	.CHK2				; Decrement and jump if channel was not 1
     174:  00:918A                      .PLAY_C:	; --- Play ayFX stream on channel C ---
     175:  00:918A  CD B9 91            		call	.SETMIXER			; Set PSG mixer value (returning a=ayFX volume and hl=ayFX tone)
     176:  00:918D  32 4A F1            		ld	[AYREGS+10],a			; Volume copied in to AYREGS (channel C volume)
     177:  00:9190  CB 51               		bit	2,c				; If tone is off...
     178:  00:9192  C0                  		ret	nz				; ...return
     179:  00:9193  22 44 F1            		ld	[AYREGS+4],hl			; copied in to AYREGS (channel C tone)
     180:  00:9196  C9                  		ret					; Return
     181:  00:9197                      .CHK2:		; --- Check if playing channel was 2 ---
     182:  00:9197  CB 0A               		rrc	d				; Rotate right AND mask
     183:  00:9199  0F                  		rrca					; Rotate right OR mask
     184:  00:919A  10 0D               		djnz	.CHK3				; Decrement and jump if channel was not 2
     185:  00:919C                      .PLAY_B:	; --- Play ayFX stream on channel B ---
     186:  00:919C  CD B9 91            		call	.SETMIXER			; Set PSG mixer value (returning a=ayFX volume and hl=ayFX tone)
     187:  00:919F  32 49 F1            		ld	[AYREGS+9],a			; Volume copied in to AYREGS (channel B volume)
     188:  00:91A2  CB 49               		bit	1,c				; If tone is off...
     189:  00:91A4  C0                  		ret	nz				; ...return
     190:  00:91A5  22 42 F1            		ld	[AYREGS+2],hl			; copied in to AYREGS (channel B tone)
     191:  00:91A8  C9                  		ret					; Return
     192:  00:91A9                      .CHK3:		; --- Check if playing channel was 3 ---
     193:  00:91A9  CB 0A               		rrc	d				; Rotate right AND mask
     194:  00:91AB  0F                  		rrca					; Rotate right OR mask
     195:  00:91AC                      .PLAY_A:	; --- Play ayFX stream on channel A ---
     196:  00:91AC  CD B9 91            		call	.SETMIXER			; Set PSG mixer value (returning a=ayFX volume and hl=ayFX tone)
     197:  00:91AF  32 48 F1            		ld	[AYREGS+8],a			; Volume copied in to AYREGS (channel A volume)
     198:  00:91B2  CB 41               		bit	0,c				; If tone is off...
     199:  00:91B4  C0                  		ret	nz				; ...return
     200:  00:91B5  22 40 F1            		ld	[AYREGS+0],hl			; copied in to AYREGS (channel A tone)
     201:  00:91B8  C9                  		ret					; Return
     202:  00:91B9                      .SETMIXER:	; --- Set PSG mixer value ---
     203:  00:91B9  4F                  		ld	c,a				; c:=OR mask
     204:  00:91BA  3A 47 F1            		ld	a,[AYREGS+7]			; a:=PSG mixer value
     205:  00:91BD  A2                  		and	d				; AND mask
     206:  00:91BE  B1                  		or	c				; OR mask
     207:  00:91BF  32 47 F1            		ld	[AYREGS+7],a			; PSG mixer value updated
     208:  00:91C2  3A 49 F2            		ld	a,[ayFX_VOLUME]			; a:=ayFX volume value
     209:  00:91C5  2A 46 F2            		ld	hl,[ayFX_TONE]			; ayFX tone value
     210:  00:91C8  C9                  		ret					; Return
     211:  00:91C9                      
     212:  00:91C9                      		IF ( AYFXRELATIVE == 1 )
     213:  00:91C9                    ~ 			; --- UNCOMMENT THIS IF YOU DON'T USE THIS REPLAYER WITH PT3 REPLAYER ---
     214:  00:91C9                    ~ 		;VT_:	.INCBIN	"VT.BIN"
     215:  00:91C9                    ~ 			; --- UNCOMMENT THIS IF YOU DON'T USE THIS REPLAYER WITH PT3 REPLAYER ---
     216:  00:91C9                    ~ 		ENDIF
      62.  00:91C9                      	
      63.  00:91C9                      	
      64.  00:91C9                      
      65.  00:91C9                      ;;=====================================================
      66.  00:91C9                      ;;DEFINICIÓN DE CANTIONES Y EFECTOS DE SONIDO
      67.  00:91C9                      ;;=====================================================		
      68.  00:91C9                      song:
      69.  00:91C9  (0968)              	incbin "bloodytears_castlevania.99"
      70.  00:9B31                      	
      71.  00:9B31                      sfx_bank:
      72.  00:9B31  (004B)              	incbin "demo.afb"
      73.  00:9B7C                      
     173   00:9B7C                      	
     174   00:9B7C                      	include "subr_ayudas.asm"
       1.  00:9B7C                      ;;=====================================================
       2.  00:9B7C                      ;;SUBRUTINAS MANEJO DE OBJETOS AYUDA
       3.  00:9B7C                      ;;=====================================================	
       4.  00:9B7C                      
       5.  00:9B7C                      ;;=====================================================
       6.  00:9B7C                      ;;VARIABLES
       7.  00:9B7C                      ;;=====================================================
       8.  00:9B7C                      
       9.  00:9B7C                      ;array de ayudas
      10.  00:9B7C                      ;posición dentro del bank1 (o 0 que son iguales) de los tiles de la ayuda (cómo en los sprites de 2x2)
      11.  00:9B7C                      array_ayudas:
      12.  00:9B7C  C8 CA               array_oracionon:			DB	200,202
      13.  00:9B7E  C9 CB               array_oracionon1:			DB	201,203
      14.  00:9B80  CC CE               array_oracionoff:			DB	204,206
      15.  00:9B82  CD CF               array_oracionoff1:			DB	205,207
      16.  00:9B84  D0 D2               array_cruzon:				DB	208,210
      17.  00:9B86  D1 D3               array_cruzon1:				DB	209,211
      18.  00:9B88  D4 D6               array_cruzoff:				DB	212,214
      19.  00:9B8A  D5 D7               array_cruzoff1:				DB	213,215
      20.  00:9B8C  D8 DA               array_aguaon:				DB	216,218
      21.  00:9B8E  D9 DB               array_aguaon1:				DB	217,219
      22.  00:9B90  DC DE               array_aguaoff:				DB	220,222
      23.  00:9B92  DD DF               array_aguaoff1:				DB	221,223
      24.  00:9B94  E0 E2               array_armaduraon:			DB	224,226
      25.  00:9B96  E1 E3               array_armaduraon1:			DB	225,227
      26.  00:9B98  E4 E6               array_armaduraoff:			DB	228,230
      27.  00:9B9A  E5 E7               array_armaduraoff1:			DB	229,231
      28.  00:9B9C  E8 EA               array_plantaon:				DB	232,234
      29.  00:9B9E  E9 EB               array_plantaon1:			DB	233,235
      30.  00:9BA0  EC EE               array_plantaoff:			DB	236,238
      31.  00:9BA2  ED EF               array_plantaoff1:			DB	237,239
      32.  00:9BA4  F0 F2               array_extraon:				DB	240,242
      33.  00:9BA6  F1 F3               array_extraon1:				DB	241,243
      34.  00:9BA8  F4 F6               array_extraoff:				DB	244,246
      35.  00:9BAA  F5 F7               array_extraoff1:			DB	245,247
      36.  00:9BAC  F8 FA               array_ballestaon:			DB	248,250
      37.  00:9BAE  F9 FB               array_ballestaon1:			DB	249,251
      38.  00:9BB0  FC FE               array_ballestaoff:			DB	252,254
      39.  00:9BB2  FD FF               array_ballestaoff1:			DB	253,255
      40.  00:9BB4                      
      41.  00:9BB4                      
      42.  00:9BB4                      lista_ayudas:
      43.  00:9BB4  00 (15)             ayuda_oracion:		DS		ESTRUCTURA_AYUDA		
      44.  00:9BC3                      ;~ ayuda_cruz:			DS		ESTRUCTURA_AYUDA
      45.  00:9BC3                      ;~ ayuda_aguabendita:	DS		ESTRUCTURA_AYUDA
      46.  00:9BC3                      ;~ ayuda_armadura:		DS		ESTRUCTURA_AYUDA
      47.  00:9BC3                      ;~ ayuda_planta:		DS		ESTRUCTURA_AYUDA
      48.  00:9BC3                      ;~ ayuda_vidaextra		DS		ESTRUCTURA_AYUDA
      49.  00:9BC3                      ;~ ayuda_ballesta:		DS		ESTRUCTURA_AYUDA
      50.  00:9BC3                      
      51.  00:9BC3                      ;datos ayudas
      52.  00:9BC3                      
      53.  00:9BC3                      ;hay que repasar todos los posoracionx y posayudasy ***********************************
      54.  00:9BC3                      
      55.  00:9BC3                      datos_oracion:			
      56.  00:9BC3  00                  				DB		INACTIVA		;0 no activa <>0 activo (y muestra tiles ayudaoff)
      57.  00:9BC4  20                  				DB		POSORACIONX		;punto x de la ayuda para cuando se dispare encima
      58.  00:9BC5  20                  				DB		POSORACIONY		;punto y de la ayuda para cuando se dispare encima
      59.  00:9BC6  08                  				DB		RADIOAYUDAX		;radio x de la ayuda para cuando se dispare encima
      60.  00:9BC7  08                  				DB		RADIOAYUDAY		;radio y de la ayuda para cuando se dispare encima
      61.  00:9BC8  21 9C               				DW		accion_oracion	;función para acción de cada tipo de ayuda
      62.  00:9BCA  7C 9B               				DW		array_oracionon	;puntero al array con los tiles de las ayudas sin usar para wordaux2
      63.  00:9BCC  80 9B               				DW		array_oracionoff;puntero al array con los tiles de las ayudas sin usar para wordaux2
      64.  00:9BCE  46 19               				DW		TILMAP + POSORACION ;calcula posición en tilemap para wordaux1
      65.  00:9BD0  02                  				DB		ALTOAYUDA		;alto en tiles del dibujo de la puerta (filas)
      66.  00:9BD1  02                  				DB		ANCHOAYUDA		;ancho en tiles del dibujo de la puerta (columnas)
      67.  00:9BD2                      					
      68.  00:9BD2                      ;~ datos_cruz:			
      69.  00:9BD2                      				;~ DB		0				;0 no activa <>0 activo (y muestra tiles ayudaoff)
      70.  00:9BD2                      				;~ DB		POSCRUZX		;punto x de la ayuda para cuando se dispare encima
      71.  00:9BD2                      				;~ DB		POSAYUDASY		;punto y de la ayuda para cuando se dispare encima
      72.  00:9BD2                      				;~ DB		8				;radio x de la ayuda para cuando se dispare encima
      73.  00:9BD2                      				;~ DB		8				;radio y de la ayuda para cuando se dispare encima
      74.  00:9BD2                      				;~ DW		accion_oracion	;función para acción de cada tipo de ayuda
      75.  00:9BD2                      				;~ DW		array_oracionon	;puntero al array con los tiles de las ayudas sin usar para wordaux2
      76.  00:9BD2                      				;~ DW		array_oracionoff;puntero al array con los tiles de las ayudas sin usar para wordaux2
      77.  00:9BD2                      				;~ DW		TILMAP + POSORACION ;calcula posición en tilemap para wordaux1
      78.  00:9BD2                      				;~ DB		2				;alto en tiles del dibujo de la puerta (filas)
      79.  00:9BD2                      				;~ DB		2				;ancho en tiles del dibujo de la puerta (columnas)
      80.  00:9BD2                      
      81.  00:9BD2                      				
      82.  00:9BD2                      ;~ datos_cruz:
      83.  00:9BD2                      				;~ DB    	0				;0 no activo <>0 activo															0
      84.  00:9BD2                      				;~ DW		array_cruzon	;pos en memoria ver array_ayudas de cómo se mostrarán (wordaux2)				1,2
      85.  00:9BD2                      				;~ DW		array_cruzoff	;pos en memoria ver array_ayudas de cómo se mostrarán (wordaux2)				3,4
      86.  00:9BD2                      				;~ DB		POSCRUZ			;pos en pantalla (memoria en el banco 1 se le suma 256 + TILEMAP) (wordaux1)	5
      87.  00:9BD2                      				;~ DB		POSCRUZX		;pos del pixel central (esquina superior + 8x)									6
      88.  00:9BD2                      				;~ DB		POSAYUDASY		;pos del pixel central (esquina superior + 8y) (para toas igual)				7
      89.  00:9BD2                      				;~ DW		accion_cruz		;subrutina que indica la acción si se dispara en el objeto						8,9 
      90.  00:9BD2                      				
      91.  00:9BD2                      				;~ DB    	0				;0 no activo <>0 activo															0
      92.  00:9BD2                      				;~ DW		array_cruzon	;pos en memoria ver array_ayudas de cómo se mostrarán (wordaux2)				1,2
      93.  00:9BD2                      				;~ DW		array_cruzoff	;pos en memoria ver array_ayudas de cómo se mostrarán (wordaux2)				3,4
      94.  00:9BD2                      				;~ DB		167			;pos en pantalla (memoria en el banco 1 se le suma 256 + TILEMAP) (wordaux1)	5
      95.  00:9BD2                      				;~ DB		64		;pos del pixel central (esquina superior + 8x)									6
      96.  00:9BD2                      				;~ DB		112		;pos del pixel central (esquina superior + 8y) (para toas igual)				7
      97.  00:9BD2                      				;~ DW		accion_cruz		;subrutina que indica la acción si se dispara en el objeto						8,9 
      98.  00:9BD2                      				
      99.  00:9BD2                      ;~ datos_aguabendita:
     100.  00:9BD2                      				;~ DB    	0				;0 no activo <>0 activo															0
     101.  00:9BD2                      				;~ DW		array_aguaon	;pos en memoria ver array_ayudas de cómo se mostrarán (wordaux2)				1,2
     102.  00:9BD2                      				;~ DW		array_aguaoff	;pos en memoria ver array_ayudas de cómo se mostrarán (wordaux2)				3,4
     103.  00:9BD2                      				;~ DB		POSAGUA			;pos en pantalla (memoria en el banco 1 se le suma 256 + TILEMAP) (wordaux1)	5
     104.  00:9BD2                      				;~ DB		POSAGUAX		;pos del pixel central (esquina superior + 8x)									6
     105.  00:9BD2                      				;~ DB		POSAYUDASY		;pos del pixel central (esquina superior + 8y) (para toas igual)				7
     106.  00:9BD2                      				;~ DW		accion_agua		;subrutina que indica la acción si se dispara en el objeto						8,9
     107.  00:9BD2                      				;~ DB		0	;relleno																		10-16    
     108.  00:9BD2                      				;~ DB		0	;relleno																		10-16    
     109.  00:9BD2                      				;~ DB		0	;relleno																		10-16    
     110.  00:9BD2                      				;~ DB		0	;relleno																		10-16    
     111.  00:9BD2                      				;~ DB		0	;relleno																		10-16    
     112.  00:9BD2                      				;~ DB		0	;relleno																		10-16   
     113.  00:9BD2                      				;~ DB		0	;relleno																		10-16    
     114.  00:9BD2                      ;~ datos_armadura:
     115.  00:9BD2                      				;~ DB    	0				;0 no activo <>0 activo															0
     116.  00:9BD2                      				;~ DW		array_armaduraon;pos en memoria ver array_ayudas de cómo se mostrarán (wordaux2)				1,2
     117.  00:9BD2                      				;~ DW		array_armaduraoff;pos en memoria ver array_ayudas de cómo se mostrarán (wordaux2)				3,4
     118.  00:9BD2                      				;~ DB		POSARMAD		;pos en pantalla (memoria en el banco 1 se le suma 256 + TILEMAP) (wordaux1)	5
     119.  00:9BD2                      				;~ DB		POSARMADX		;pos del pixel central (esquina superior + 8x)									6
     120.  00:9BD2                      				;~ DB		POSAYUDASY		;pos del pixel central (esquina superior + 8y) (para toas igual)				7
     121.  00:9BD2                      				;~ DW		accion_armadura	;subrutina que indica la acción si se dispara en el objeto						8,9
     122.  00:9BD2                      				;~ DB		0	;relleno																		10-16    
     123.  00:9BD2                      				;~ DB		0	;relleno																		10-16    
     124.  00:9BD2                      				;~ DB		0	;relleno																		10-16    
     125.  00:9BD2                      				;~ DB		0	;relleno																		10-16    
     126.  00:9BD2                      				;~ DB		0	;relleno																		10-16    
     127.  00:9BD2                      				;~ DB		0	;relleno																		10-16   
     128.  00:9BD2                      				;~ DB		0	;relleno																		10-16    
     129.  00:9BD2                      ;~ datos_planta:
     130.  00:9BD2                      				;~ DB    	0				;0 no activo <>0 activo															0
     131.  00:9BD2                      				;~ DW		array_plantaon	;pos en memoria ver array_ayudas de cómo se mostrarán (wordaux2)				1,2
     132.  00:9BD2                      				;~ DW		array_plantaoff	;pos en memoria ver array_ayudas de cómo se mostrarán (wordaux2)				3,4
     133.  00:9BD2                      				;~ DB		POSPLANTA		;pos en pantalla (memoria en el banco 1 se le suma 256 + TILEMAP) (wordaux1)	5
     134.  00:9BD2                      				;~ DB		POSPLANTAX		;pos del pixel central (esquina superior + 8x)									6
     135.  00:9BD2                      				;~ DB		POSAYUDASY		;pos del pixel central (esquina superior + 8y) (para toas igual)				7
     136.  00:9BD2                      				;~ DW		accion_planta	;subrutina que indica la acción si se dispara en el objeto						8,9
     137.  00:9BD2                      				;~ DB		0	;relleno																		10-16    
     138.  00:9BD2                      				;~ DB		0	;relleno																		10-16    
     139.  00:9BD2                      				;~ DB		0	;relleno																		10-16    
     140.  00:9BD2                      				;~ DB		0	;relleno																		10-16    
     141.  00:9BD2                      				;~ DB		0	;relleno																		10-16    
     142.  00:9BD2                      				;~ DB		0	;relleno																		10-16   
     143.  00:9BD2                      				;~ DB		0	;relleno																		10-16     
     144.  00:9BD2                      ;~ datos_vidaextra:
     145.  00:9BD2                      				;~ DB    	0				;0 no activo <>0 activo															0
     146.  00:9BD2                      				;~ DW		array_extraon	;pos en memoria ver array_ayudas de cómo se mostrarán (wordaux2)				1,2
     147.  00:9BD2                      				;~ DW		array_extraoff	;pos en memoria ver array_ayudas de cómo se mostrarán (wordaux2)				3,4
     148.  00:9BD2                      				;~ DB		POSVIDAEXT		;pos en pantalla (memoria en el banco 1 se le suma 256 + TILEMAP) (wordaux1)	5
     149.  00:9BD2                      				;~ DB		POSVIDAEXTX		;pos del pixel central (esquina superior + 8x)									6
     150.  00:9BD2                      				;~ DB		POSAYUDASY		;pos del pixel central (esquina superior + 8y) (para toas igual)				7
     151.  00:9BD2                      				;~ DW		accion_vidaextra;subrutina que indica la acción si se dispara en el objeto						8,9
     152.  00:9BD2                      				;~ DB		0	;relleno																		10-16    
     153.  00:9BD2                      				;~ DB		0	;relleno																		10-16    
     154.  00:9BD2                      				;~ DB		0	;relleno																		10-16    
     155.  00:9BD2                      				;~ DB		0	;relleno																		10-16    
     156.  00:9BD2                      				;~ DB		0	;relleno																		10-16    
     157.  00:9BD2                      				;~ DB		0	;relleno																		10-16   
     158.  00:9BD2                      				;~ DB		0	;relleno																		10-16     
     159.  00:9BD2                      ;~ datos_ballesta:
     160.  00:9BD2                      				;~ DB    	0				;0 no activo <>0 activo															0
     161.  00:9BD2                      				;~ DW		array_ballestaon;pos en memoria ver array_ayudas de cómo se mostrarán (wordaux2)				1,2
     162.  00:9BD2                      				;~ DW		array_ballestaoff;pos en memoria ver array_ayudas de cómo se mostrarán (wordaux2)				3,4
     163.  00:9BD2                      				;~ DB		POSBALLESTA		;pos en pantalla (memoria en el banco 1 se le suma 256 + TILEMAP) (wordaux1)	5
     164.  00:9BD2                      				;~ DB		POSBALLESTAX	;pos del pixel central (esquina superior + 8x)									6
     165.  00:9BD2                      				;~ DB		POSAYUDASY		;pos del pixel central (esquina superior + 8y) (para toas igual)				7
     166.  00:9BD2                      				;~ DW		accion_oracion	;subrutina que indica la acción si se dispara en el objeto						8,9
     167.  00:9BD2                      				;~ DB		0	;relleno																		10-16    
     168.  00:9BD2                      				;~ DB		0	;relleno																		10-16    
     169.  00:9BD2                      				;~ DB		0	;relleno																		10-16    
     170.  00:9BD2                      				;~ DB		0	;relleno																		10-16    
     171.  00:9BD2                      				;~ DB		0	;relleno																		10-16    
     172.  00:9BD2                      				;~ DB		0	;relleno																		10-16   
     173.  00:9BD2                      				;~ DB		0	;relleno																		10-16      
     174.  00:9BD2                      
     175.  00:9BD2                      
     176.  00:9BD2                      
     177.  00:9BD2                      
     178.  00:9BD2                      
     179.  00:9BD2                      
     180.  00:9BD2                      
     181.  00:9BD2                      ;;=====================================================
     182.  00:9BD2                      ;;INICIALIZA_AYUDAS
     183.  00:9BD2                      ;;=====================================================	
     184.  00:9BD2                      ; función: 	inicializa las variables de estructuras de ayuda del array lista_ayudas
     185.  00:9BD2                      ; entrada: 	datos_delasdistintasayudas, variable estructura_ayuda_ayudaquesea
     186.  00:9BD2                      ; salida: 	lista_ayudas
     187.  00:9BD2                      ; toca:		HL, DE, BC
     188.  00:9BD2                      inicializa_ayudas:
     189.  00:9BD2                      	;oracion
     190.  00:9BD2  21 C3 9B            	LD		HL, datos_oracion
     191.  00:9BD5  11 B4 9B            	LD		DE, ayuda_oracion
     192.  00:9BD8  CD DC 9B            	CALL	carga_datos_ayuda
     193.  00:9BDB                      
     194.  00:9BDB                      
     195.  00:9BDB                      	;~ ;oración
     196.  00:9BDB                      	;~ LD		IX, ayuda_oracion
     197.  00:9BDB                      	;~ LD		(IX + 0), INACTIVA			
     198.  00:9BDB                      	;~ LD		HL, array_oracionon
     199.  00:9BDB                      	;~ LD		(IX + 1), H
     200.  00:9BDB                      	;~ LD		(IX + 2), L
     201.  00:9BDB                      	;~ LD		HL, array_oracionoff
     202.  00:9BDB                      	;~ LD		(IX + 3), H
     203.  00:9BDB                      	;~ LD		(IX + 4), L
     204.  00:9BDB                      	;~ LD		(IX + 5), POSORACION
     205.  00:9BDB                      	;~ LD		(IX + 6), POSORACIONX
     206.  00:9BDB                      	;~ LD		(IX + 7), POSAYUDASY	
     207.  00:9BDB                      	;~ LD		HL, accion_oracion
     208.  00:9BDB                      	;~ LD		(IX + 8), H
     209.  00:9BDB                      	;~ LD		(IX + 9), L
     210.  00:9BDB                      	
     211.  00:9BDB                      	;~ ;cruz
     212.  00:9BDB                      	;~ LD		HL, datos_cruz
     213.  00:9BDB                      	;~ LD		DE, ayuda_cruz
     214.  00:9BDB                      	;~ LD		BC, 16;#ESTRUCTURA_AYUDA ;equivale a 16.. el tamaño de la estructura en bytes
     215.  00:9BDB                      	;~ LDIR
     216.  00:9BDB                      	
     217.  00:9BDB                      	;~ ;agua bendita
     218.  00:9BDB                      	;~ LD		HL, datos_aguabendita
     219.  00:9BDB                      	;~ LD		DE, ayuda_aguabendita
     220.  00:9BDB                      	;~ CALL	carga_datos_ayuda
     221.  00:9BDB                      		
     222.  00:9BDB                      	;~ ;armadura
     223.  00:9BDB                      	;~ LD		HL, datos_armadura
     224.  00:9BDB                      	;~ LD		DE, ayuda_armadura
     225.  00:9BDB                      	;~ CALL	carga_datos_ayuda
     226.  00:9BDB                      		
     227.  00:9BDB                      	;~ ;planta
     228.  00:9BDB                      	;~ LD		HL, datos_planta
     229.  00:9BDB                      	;~ LD		DE, ayuda_planta
     230.  00:9BDB                      	;~ CALL	carga_datos_ayuda
     231.  00:9BDB                      		
     232.  00:9BDB                      	;~ ;vida extra
     233.  00:9BDB                      	;~ LD		HL, datos_vidaextra
     234.  00:9BDB                      	;~ LD		DE, ayuda_vidaextra
     235.  00:9BDB                      	;~ CALL	carga_datos_ayuda
     236.  00:9BDB                      		
     237.  00:9BDB                      	;~ ;ballesta
     238.  00:9BDB                      	;~ LD		HL, datos_ballesta
     239.  00:9BDB                      	;~ LD		DE, ayuda_ballesta
     240.  00:9BDB                      	;~ CALL	carga_datos_ayuda
     241.  00:9BDB                      fin_inicializa_ayudas:
     242.  00:9BDB  C9                  	RET
     243.  00:9BDC                      	
     244.  00:9BDC                      
     245.  00:9BDC                      ;;=====================================================
     246.  00:9BDC                      ;;CARGA_DATOS_AYUDA
     247.  00:9BDC                      ;;=====================================================	
     248.  00:9BDC                      ; función: 	carga los datos de la ayuda de una variable dentro de la variable estructura (más carga y espacio que rellenar a pelo desde IX en adelante pero más simple)
     249.  00:9BDC                      ;entrada
     250.  00:9BDC                      ;  hl: origen de datos
     251.  00:9BDC                      ;  de: destino de datos
     252.  00:9BDC                      ; salida: 	-
     253.  00:9BDC                      ; toca:		HL, DE, BC
     254.  00:9BDC                      carga_datos_ayuda:
     255.  00:9BDC  01 0F 00            	LD		BC, 15;ESTRUCTURA_AYUDA ;equivale a 16.. el tamaño de la estructura en bytes
     256.  00:9BDF  ED B0               	LDIR
     257.  00:9BE1                      fin_carga_datos_ayuda:
     258.  00:9BE1  C9                  	RET
     259.  00:9BE2                      
     260.  00:9BE2                      
     261.  00:9BE2                      
     262.  00:9BE2                      ;;=====================================================
     263.  00:9BE2                      ;;PINTA_OBJ_AYUDA
     264.  00:9BE2                      ;;=====================================================	
     265.  00:9BE2                      ; función: 	pinta un objeto de tipo ayuda que se le pase por referencia IX y el tipo en A
     266.  00:9BE2                      ; entrada: 	IX - puntero a objeto a mostrar, A - si está on u off
     267.  00:9BE2                      ; salida: 	-
     268.  00:9BE2                      ; toca:		AF, HL, BC, DE
     269.  00:9BE2                      pinta_obj_ayuda:
     270.  00:9BE2                      	;se recibe objeto desde fuera, por ejmplo LD IX, ayuda_oracion
     271.  00:9BE2                      
     272.  00:9BE2                      	;si A=1 dibujo on (si 0 off)
     273.  00:9BE2  B7                  	OR		 A
     274.  00:9BE3  CA F2 9B            	JP		 Z,.dibujooff
     275.  00:9BE6                      .dibujoon:	
     276.  00:9BE6  DD 6E 07            		LD		 L, (IX + ESTRUCTURA_AYUDA.tiles_ayudaon)
     277.  00:9BE9  DD 66 08            		LD		 H, (IX + ESTRUCTURA_AYUDA.tiles_ayudaon + 1)
     278.  00:9BEC  22 F8 84            		LD		(wordaux2), HL	;pongo el valor en wordaux2
     279.  00:9BEF  C3 FB 9B            		JP		.param_wordaux2
     280.  00:9BF2                      .dibujooff:
     281.  00:9BF2  DD 6E 09            		LD		 L, (IX + ESTRUCTURA_AYUDA.tiles_ayudaoff)
     282.  00:9BF5  DD 66 0A            		LD		 H, (IX + ESTRUCTURA_AYUDA.tiles_ayudaoff + 1)
     283.  00:9BF8  22 F8 84            		LD		(wordaux2), HL	;pongo el valor en wordaux2
     284.  00:9BFB                      ;fin si
     285.  00:9BFB                      .param_wordaux2:	
     286.  00:9BFB  DD 6E 0B            	LD		 L, (IX + ESTRUCTURA_AYUDA.pos_en_tilemap)
     287.  00:9BFE  DD 66 0C            	LD		 H, (IX + ESTRUCTURA_AYUDA.pos_en_tilemap + 1)
     288.  00:9C01  22 F6 84            	LD		(wordaux1), HL		;pongo el valor en wordaux1
     289.  00:9C04                      
     290.  00:9C04                      .filasycols:
     291.  00:9C04  3E 02               	LD		 A, 2
     292.  00:9C06                      	;se comenta para ahorrar tiempo (y porque habría que pasarlo previamente a A cuando siempre es 2)
     293.  00:9C06                      	;~ LD		(byteaux1), (IX + ESTRUCTURA_AYUDA.alto);nº de filas
     294.  00:9C06                      	;~ LD		(byteaux2), (IX + ESTRUCTURA_AYUDA.alto);nº de columnas
     295.  00:9C06  32 FA 84            	LD		(byteaux1), A		;nº de filas
     296.  00:9C09  32 FB 84            	LD		(byteaux2), A		;nº de columnas
     297.  00:9C0C                      	
     298.  00:9C0C  C3 B6 84            	JP		pinta_array
     299.  00:9C0F                      fin_pinta_obj_ayuda:
     300.  00:9C0F                      
     301.  00:9C0F                      
     302.  00:9C0F                      ;;=====================================================
     303.  00:9C0F                      ;;PINTA_AYUDAS_HABITACIÓN
     304.  00:9C0F                      ;;=====================================================	
     305.  00:9C0F                      ; función: 	examina el byte con las ayudas y pinta las que estén seleccionadas según variable habitacion_extras
     306.  00:9C0F                      ; entrada: 	habitacion_extras
     307.  00:9C0F                      ; salida: 	-
     308.  00:9C0F                      pinta_ayudas_habitacion:
     309.  00:9C0F                      .examina_oracion:
     310.  00:9C0F  3A 89 A6            	LD		 A, (habitacion_extras)
     311.  00:9C12  CB 7F               	BIT		 7,A
     312.  00:9C14  CA 20 9C            	JP		 Z,fin_pinta_ayudas_habitacion;.examina_cruz
     313.  00:9C17  DD 21 B4 9B         	LD		IX, ayuda_oracion
     314.  00:9C1B  3E 01               	LD		 A, ACTIVA
     315.  00:9C1D  CD E2 9B            	CALL	pinta_obj_ayuda
     316.  00:9C20                      ;~ .examina_cruz:
     317.  00:9C20                      	;~ LD		 A, (habitacion_extras)
     318.  00:9C20                      	;~ BIT		 6,A
     319.  00:9C20                      	;~ JP		 Z,.examina_aguabendita
     320.  00:9C20                      	;~ LD		IX, ayuda_cruz
     321.  00:9C20                      	;~ LD		 A, ACTIVA
     322.  00:9C20                      	;~ CALL	pinta_obj_ayuda
     323.  00:9C20                      ;~ .examina_aguabendita:
     324.  00:9C20                      	;~ LD		 A, (habitacion_extras)
     325.  00:9C20                      	;~ BIT		 5,A
     326.  00:9C20                      	;~ JP		 Z,.examina_armadura
     327.  00:9C20                      	;~ LD		IX, ayuda_aguabendita
     328.  00:9C20                      	;~ LD		 A, ACTIVA
     329.  00:9C20                      	;~ CALL	pinta_obj_ayuda
     330.  00:9C20                      ;~ .examina_armadura:
     331.  00:9C20                      	;~ LD		 A, (habitacion_extras)
     332.  00:9C20                      	;~ BIT		 4,A
     333.  00:9C20                      	;~ JP		 Z,.examina_planta
     334.  00:9C20                      	;~ LD		IX, ayuda_armadura
     335.  00:9C20                      	;~ LD		 A, ACTIVA
     336.  00:9C20                      	;~ CALL	pinta_obj_ayuda
     337.  00:9C20                      ;~ .examina_planta:
     338.  00:9C20                      	;~ LD		 A, (habitacion_extras)
     339.  00:9C20                      	;~ BIT		 3,A
     340.  00:9C20                      	;~ JP		 Z,.examina_vidaextra
     341.  00:9C20                      	;~ LD		IX, ayuda_planta
     342.  00:9C20                      	;~ LD		 A, ACTIVA
     343.  00:9C20                      	;~ CALL	pinta_obj_ayuda
     344.  00:9C20                      ;~ .examina_vidaextra:
     345.  00:9C20                      	;~ LD		 A, (habitacion_extras)
     346.  00:9C20                      	;~ BIT		 2,A
     347.  00:9C20                      	;~ JP		 Z,.examina_ballesta
     348.  00:9C20                      	;~ LD		IX, ayuda_vidaextra
     349.  00:9C20                      	;~ LD		 A, ACTIVA
     350.  00:9C20                      	;~ CALL	pinta_obj_ayuda
     351.  00:9C20                      ;~ .examina_ballesta:
     352.  00:9C20                      	;~ LD		 A, (habitacion_extras)
     353.  00:9C20                      	;~ BIT		 1,A
     354.  00:9C20                      	;~ RET		 Z
     355.  00:9C20                      	;~ LD		IX, ayuda_ballesta
     356.  00:9C20                      	;~ LD		 A, ACTIVA
     357.  00:9C20                      	;~ CALL	pinta_obj_ayuda
     358.  00:9C20                      fin_pinta_ayudas_habitacion:
     359.  00:9C20  C9                  	RET
     360.  00:9C21                      
     361.  00:9C21                      
     362.  00:9C21                      
     363.  00:9C21                      ;;=====================================================
     364.  00:9C21                      ;;ACCION_ORACION
     365.  00:9C21                      ;;=====================================================	
     366.  00:9C21                      ; función: 	
     367.  00:9C21                      ; entrada: 	
     368.  00:9C21                      ; salida: 	-
     369.  00:9C21                      accion_oracion:
     370.  00:9C21                      fin_accion_oracion:
     371.  00:9C21  C9                  	RET
     372.  00:9C22                      	
     373.  00:9C22                      
     374.  00:9C22                      ;;=====================================================
     375.  00:9C22                      ;;ACCION_CRUZ
     376.  00:9C22                      ;;=====================================================	
     377.  00:9C22                      ; función: 	
     378.  00:9C22                      ; entrada: 	
     379.  00:9C22                      ; salida: 	-
     380.  00:9C22                      accion_cruz:
     381.  00:9C22                      fin_accion_cruz:
     382.  00:9C22  C9                  	RET
     383.  00:9C23                      
     384.  00:9C23                      
     385.  00:9C23                      ;;=====================================================
     386.  00:9C23                      ;;ACCION_AGUA
     387.  00:9C23                      ;;=====================================================	
     388.  00:9C23                      ; función: 	
     389.  00:9C23                      ; entrada: 	
     390.  00:9C23                      ; salida: 	-
     391.  00:9C23                      accion_agua:
     392.  00:9C23                      fin_accion_agua:
     393.  00:9C23  C9                  	RET
     394.  00:9C24                      
     395.  00:9C24                      
     396.  00:9C24                      ;;=====================================================
     397.  00:9C24                      ;;ACCION_ARMADURA
     398.  00:9C24                      ;;=====================================================	
     399.  00:9C24                      ; función: 	
     400.  00:9C24                      ; entrada: 	
     401.  00:9C24                      ; salida: 	-
     402.  00:9C24                      accion_armadura:
     403.  00:9C24                      fin_accion_armadura:
     404.  00:9C24  C9                  	RET
     405.  00:9C25                      
     406.  00:9C25                      
     407.  00:9C25                      ;;=====================================================
     408.  00:9C25                      ;;ACCION_PLANTA
     409.  00:9C25                      ;;=====================================================	
     410.  00:9C25                      ; función: 	
     411.  00:9C25                      ; entrada: 	
     412.  00:9C25                      ; salida: 	-
     413.  00:9C25                      accion_planta:
     414.  00:9C25                      fin_accion_planta:
     415.  00:9C25  C9                  	RET
     416.  00:9C26                      
     417.  00:9C26                      
     418.  00:9C26                      ;;=====================================================
     419.  00:9C26                      ;;ACCION_VIDAEXTRA
     420.  00:9C26                      ;;=====================================================	
     421.  00:9C26                      ; función: 	
     422.  00:9C26                      ; entrada: 	
     423.  00:9C26                      ; salida: 	-
     424.  00:9C26                      accion_vidaextra:
     425.  00:9C26                      fin_accion_vidaextra:
     426.  00:9C26  C9                  	RET
     427.  00:9C27                      
     428.  00:9C27                      
     429.  00:9C27                      ;;=====================================================
     430.  00:9C27                      ;;ACCION_BALLESTA
     431.  00:9C27                      ;;=====================================================	
     432.  00:9C27                      ; función: 	
     433.  00:9C27                      ; entrada: 	
     434.  00:9C27                      ; salida: 	-
     435.  00:9C27                      accion_ballesta:
     436.  00:9C27                      fin_accion_ballesta:
     437.  00:9C27  C9                  	RET
     438.  00:9C28                      
     439.  00:9C28                      
     175   00:9C28                      	
     176   00:9C28                      
     177   00:9C28                      ;;=====================================================
     178   00:9C28                      ;;DEFINICIÓN DE SUBRUTINAS DE FERNANDO PARA COMPRESIÓN Y SONIDO
     179   00:9C28                      ;;=====================================================
     180   00:9C28                      ;Este include lleva la rutina de descompresión de ROM/RAM a VRAM de pletter
     181   00:9C28                      ;Está adaptada de la original a sjasm
     182   00:9C28                      ;	HL = RAM/ROM source	; DE = VRAM destination
     183   00:9C28                      depack_VRAM:
     184   00:9C28                      	include "PL_VRAM_Depack_SJASM.asm"
       1.  00:9C28                      ;-----------------------------------------------------------
       2.  00:9C28                      ; Pletter v0.5b VRAM Depacker v1.1 - 16Kb version
       3.  00:9C28                      ; HL = RAM/ROM source ; DE = VRAM destination
       4.  00:9C28                      ;-----------------------------------------------------------
       5.  00:9C28  F3                  	di
       6.  00:9C29                      
       7.  00:9C29                      ; VRAM address setup
       8.  00:9C29  7B                  	ld	a,e
       9.  00:9C2A  D3 99               	out	[099h],a
      10.  00:9C2C  7A                  	ld	a,d
      11.  00:9C2D  F6 40               	or	040h
      12.  00:9C2F  D3 99               	out	[099h],a
      13.  00:9C31                      
      14.  00:9C31                      ; Initialization
      15.  00:9C31  7E                  	ld	a,[hl]
      16.  00:9C32  23                  	inc	hl
      17.  00:9C33  D9                  	exx
      18.  00:9C34  11 00 00            	ld	de,0
      19.  00:9C37  87                  	add	a,a
      20.  00:9C38  3C                  	inc	a
      21.  00:9C39  CB 13               	rl	e
      22.  00:9C3B  87                  	add	a,a
      23.  00:9C3C  CB 13               	rl	e
      24.  00:9C3E  87                  	add	a,a
      25.  00:9C3F  CB 13               	rl	e
      26.  00:9C41  CB 13               	rl	e
      27.  00:9C43  21 FA 9C            	ld	hl,modes
      28.  00:9C46  19                  	add	hl,de
      29.  00:9C47  5E                  	ld	e,[hl]
      30.  00:9C48  DD 6B               	ld	ixl,e
      31.  00:9C4A  23                  	inc	hl
      32.  00:9C4B  5E                  	ld	e,[hl]
      33.  00:9C4C  DD 63               	ld	ixh,e
      34.  00:9C4E  1E 01               	ld	e,1
      35.  00:9C50  D9                  	exx
      36.  00:9C51  FD 21 5A 9C         	ld	iy,loop
      37.  00:9C55                      
      38.  00:9C55                      ; Main depack loop
      39.  00:9C55  0E 98               literal:ld	c,098h
      40.  00:9C57  ED A3               	outi
      41.  00:9C59  13                  	inc	de
      42.  00:9C5A  87                  loop:	add	a,a
      43.  00:9C5B  CC EE 9C              	call	z,getbit
      44.  00:9C5E  30 F5               	jr	nc,literal
      45.  00:9C60                      
      46.  00:9C60                      ; Compressed data
      47.  00:9C60  D9                  	exx
      48.  00:9C61  62                  	ld	h,d
      49.  00:9C62  6B                  	ld	l,e
      50.  00:9C63  87                  getlen: add	a,a
      51.  00:9C64  CC F2 9C            	call	z,getbitexx
      52.  00:9C67  30 1D               	jr	nc,lenok
      53.  00:9C69  87                  lus:	add	a,a
      54.  00:9C6A  CC F2 9C            	call	z,getbitexx
      55.  00:9C6D  ED 6A               	adc	hl,hl
      56.  00:9C6F  D8                  	ret	c
      57.  00:9C70  87                  	add	a,a
      58.  00:9C71  CC F2 9C            	call	z,getbitexx
      59.  00:9C74  30 10               	jr	nc,lenok
      60.  00:9C76  87                  	add	a,a
      61.  00:9C77  CC F2 9C            	call	z,getbitexx
      62.  00:9C7A  ED 6A               	adc	hl,hl
      63.  00:9C7C  DA F8 9C            	jp	c,Depack_out
      64.  00:9C7F  87                  	add	a,a
      65.  00:9C80  CC F2 9C            	call	z,getbitexx
      66.  00:9C83  DA 69 9C            	jp	c,lus
      67.  00:9C86  23                  lenok:  inc	hl
      68.  00:9C87  D9                  	exx
      69.  00:9C88  4E                  	ld	c,[hl]
      70.  00:9C89  23                  	inc	hl
      71.  00:9C8A  06 00               	ld	b,0
      72.  00:9C8C  CB 79               	bit	7,c
      73.  00:9C8E  CA C1 9C            	jp	z,offsok
      74.  00:9C91  DD E9               	jp	ix
      75.  00:9C93                      
      76.  00:9C93  87                  mode7:  add	a,a
      77.  00:9C94  CC EE 9C              	call	z,getbit
      78.  00:9C97  CB 10               	rl	b
      79.  00:9C99  87                  mode6:	add	a,a
      80.  00:9C9A  CC EE 9C              	call	z,getbit
      81.  00:9C9D  CB 10               	rl	b
      82.  00:9C9F  87                  mode5:  add	a,a
      83.  00:9CA0  CC EE 9C              	call	z,getbit
      84.  00:9CA3  CB 10               	rl	b
      85.  00:9CA5  87                  mode4:  add	a,a
      86.  00:9CA6  CC EE 9C              	call	z,getbit
      87.  00:9CA9  CB 10               	rl	b
      88.  00:9CAB  87                  mode3:  add	a,a
      89.  00:9CAC  CC EE 9C              	call	z,getbit
      90.  00:9CAF  CB 10               	rl	b
      91.  00:9CB1  87                  mode2:	add	a,a
      92.  00:9CB2  CC EE 9C              	call	z,getbit
      93.  00:9CB5  CB 10               	rl	b
      94.  00:9CB7  87                  	add	a,a
      95.  00:9CB8  CC EE 9C              	call	z,getbit
      96.  00:9CBB  30 04               	jr	nc,offsok
      97.  00:9CBD  B7                  	or	a
      98.  00:9CBE  04                  	inc	b
      99.  00:9CBF  CB B9               	res	7,c
     100.  00:9CC1  03                  offsok: inc	bc
     101.  00:9CC2  E5                  	push	hl
     102.  00:9CC3  D9                  	exx
     103.  00:9CC4  E5                  	push	hl
     104.  00:9CC5  D9                  	exx
     105.  00:9CC6  6B                  	ld	l,e
     106.  00:9CC7  62                  	ld	h,d
     107.  00:9CC8  ED 42               	sbc	hl,bc
     108.  00:9CCA  C1                  	pop	bc
     109.  00:9CCB  F5                  	push	af
     110.  00:9CCC  7D                  .loop:	ld	a,l
     111.  00:9CCD  D3 99               	out	[099h],a
     112.  00:9CCF  7C                  	ld	a,h
     113.  00:9CD0  00                  	nop                     ; VDP timing
     114.  00:9CD1  D3 99               	out	[099h],a
     115.  00:9CD3  00                  	nop                     ; VDP timing
     116.  00:9CD4  DB 98               	in	a,[098h]
     117.  00:9CD6  08                  	ex	af,af'
     118.  00:9CD7  7B                  	ld	a,e
     119.  00:9CD8  00                  	nop			; VDP timing
     120.  00:9CD9  D3 99               	out	[099h],a
     121.  00:9CDB  7A                  	ld	a,d
     122.  00:9CDC  F6 40               	or	040h
     123.  00:9CDE  D3 99               	out	[099h],a
     124.  00:9CE0  08                  	ex	af,af'
     125.  00:9CE1  00                  	nop			; VDP timing
     126.  00:9CE2  D3 98               	out	[098h],a
     127.  00:9CE4  13                  	inc	de
     128.  00:9CE5  ED A1               	cpi
     129.  00:9CE7  EA CC 9C            	jp	pe,.loop
     130.  00:9CEA  F1                  	pop	af
     131.  00:9CEB  E1                  	pop	hl
     132.  00:9CEC  FD E9               	jp	iy
     133.  00:9CEE                      
     134.  00:9CEE  7E                  getbit: ld	a,[hl]
     135.  00:9CEF  23                  	inc	hl
     136.  00:9CF0  17                  	rla
     137.  00:9CF1  C9                  	ret
     138.  00:9CF2                      
     139.  00:9CF2                      getbitexx:
     140.  00:9CF2  D9                  	exx
     141.  00:9CF3  7E                  	ld	a,[hl]
     142.  00:9CF4  23                  	inc	hl
     143.  00:9CF5  D9                  	exx
     144.  00:9CF6  17                  	rla
     145.  00:9CF7  C9                  	ret
     146.  00:9CF8                      
     147.  00:9CF8                      ; Depacker exit
     148.  00:9CF8                      Depack_out:
     149.  00:9CF8  FB                  	ei
     150.  00:9CF9  C9                  	ret
     151.  00:9CFA                      
     152.  00:9CFA                      modes:
     153.  00:9CFA  C1 9C               	dw	offsok
     154.  00:9CFC  B1 9C               	dw	mode2
     155.  00:9CFE  AB 9C               	dw	mode3
     156.  00:9D00  A5 9C               	dw	mode4
     157.  00:9D02  9F 9C               	dw	mode5
     158.  00:9D04  99 9C               	dw	mode6
     159.  00:9D06  93 9C               	dw	mode7
     185   00:9D08                      
     186   00:9D08                      
     187   00:9D08                      	
     188   00:9D08                      ;;=====================================================
     189   00:9D08                      ;;DEFINICIÓN DE ESTRUCTURAS
     190   00:9D08                      ;;=====================================================		
     191   00:9D08                      	include "estructuras.asm"
       1.  00:9D08                      ;;=====================================================
       2.  00:9D08                      ;;DEFINICIÓN DE ESTRUCTURAS
       3.  00:9D08                      ;;=====================================================
       4.  00:9D08                      
       5.  00:9D08                      ;crear estructura
       6.  00:9D08                      
       7.  00:9D08                      	STRUCT ESTRUCTURA_PUNTOMIRA
       8.  00:9D08                    < posx			DB		POSXPM
       9.  00:9D08                    < posy			DB		POSYPM
      10.  00:9D08                    < escena			DB		0	;valores porsibles 0 (blanco+rojo en punto de mira) y NEG 0 (al revés)
      11.  00:9D08                    < velocidad		DB		0
      12.  00:9D08                    < boton2_pressed  DB		0
      13.  00:9D08                    < cadencia		DB		5	;nº de veces que se ejecutará el disparo antes de ejecutar un disparo real (porque cuando se pulsa la tecl dispara 3 ó 4 veces de rápido que va)
      14.  00:9D08                    < ; al final he decidido (ya que el punto de mira es el prota) que lo relacionado con el prota vaya en esta estructura
      15.  00:9D08                    < pm_aux1			DB		0	;para llegar a los 16 campos
      16.  00:9D08                    < pm_aux2			DB		0	;para llegar a los 16 campos
      17.  00:9D08                    < pm_aux3			DB		0	;para llegar a los 16 campos
      18.  00:9D08                    < pm_aux4			DB		0	;para llegar a los 16 campos
      19.  00:9D08                    < pm_aux5			DB		0	;para llegar a los 16 campos
      20.  00:9D08                    < pm_aux6			DB		0	;para llegar a los 16 campos
      21.  00:9D08                    < pm_aux7			DB		0	;para llegar a los 16 campos
      22.  00:9D08                    < pm_aux8			DB		0	;para llegar a los 16 campos
      23.  00:9D08                    < pm_aux9			DB		0	;para llegar a los 16 campos
      24.  00:9D08                    < pm_aux10		DB		0	;para llegar a los 16 campos
      25.  00:9D08                    < 	ENDSTRUCT;ESTRUCTURA_PUNTOMIRA
      26.  00:9D08                      
      27.  00:9D08                      
      28.  00:9D08                      
      29.  00:9D08                      	STRUCT ESTRUCTURA_ANTORCHA
      30.  00:9D08                    < activo				DB		0	;0 no activa <>0 activo
      31.  00:9D08                    < postilemem_antor1	DW		0	;pos en memoria ver array_antorcha de cómo se mostrará (wordaux2)	1,2
      32.  00:9D08                    < pospantalla_antor1	DB		0	;pos en pantalla (memoria en el banco 1 se le suma 256 + TILEMAP) (wordaux1)	3
      33.  00:9D08                    < pospantalla_antor2	DB		0	;pos en pantalla (memoria en el banco 1 se le suma 256 + TILEMAP) (wordaux1)	4
      34.  00:9D08                    < escena				DB		0	;(va entre 0 y 1 - 0=>llama1 y llama2 o 1=>llama2 y llama1	7 - tiles 196 y 197)	5
      35.  00:9D08                    < cont_sig_escena		DB		10	;	6
      36.  00:9D08                    < 	ENDSTRUCT;ESTRUCTURA_ANTORCHA
      37.  00:9D08                      
      38.  00:9D08                      	STRUCT ESTRUCTURA_ESQUELETO
      39.  00:9D08                    < activo				DB		0	;0 no activa <>0 activo
      40.  00:9D08                    < postilemem_antor1	DW		0	;pos en memoria ver array_antorcha de cómo se mostrará (wordaux2)	1,2
      41.  00:9D08                    < pospantalla_esquel1	DB		0	;pos en pantalla (memoria en el banco 1 se le suma 256 + TILEMAP) (wordaux1)	3
      42.  00:9D08                    < pospantalla_esquel2	DB		0	;pos en pantalla (memoria en el banco 1 se le suma 256 + TILEMAP) (wordaux1)	4
      43.  00:9D08                    < escena				DB		0	;(va entre 0 y 4 - tiles 164, 165, 164, 166)	5
      44.  00:9D08                    < cont_sig_escena		DB		0	;	6
      45.  00:9D08                    < 	ENDSTRUCT;ESTRUCTURA_ESQUELETO
      46.  00:9D08                      	
      47.  00:9D08                      
      48.  00:9D08                      	STRUCT ESTRUCTURA_ENEMIGO
      49.  00:9D08                    < tipo				DB		0	;(0 serpiente por ejemplo) #FF muerto o no existe
      50.  00:9D08                    < posx				DB		5
      51.  00:9D08                    < posy				DB		50
      52.  00:9D08                    < color				DB		5
      53.  00:9D08                    < escena				DB		0
      54.  00:9D08                    < contador_siguiente_escena	DB	0
      55.  00:9D08                    < reset_contador		DB		0
      56.  00:9D08                    < dano				DB		0	;daño
      57.  00:9D08                    < energia				DB		0	;energía del enemigo... si llega a 0 => existe <- 0
      58.  00:9D08                    < ;indica el nº de sprite a mostrar y si está compuesto por uno o dos sprites y si están en horizontal o vertical
      59.  00:9D08                    < ver_hor				DB		0
      60.  00:9D08                    < manejador_dibujo 	DW		0
      61.  00:9D08                    < en_aux3				DB		0
      62.  00:9D08                    < en_aux4				DB		0
      63.  00:9D08                    < 	ENDSTRUCT;ESTRUCTURA_ENEMIGO
      64.  00:9D08                      	
      65.  00:9D08                      	;~ STRUCT ESTRUCTURA_AYUDA		;vidas extra, plantas de curación de energía, reliquias				
      66.  00:9D08                      ;~ activo				DB		0	;0 no activo <>0 activo 											0
      67.  00:9D08                      ;~ postilemem_nousado	DW		0	;pos en memoria ver array_ayudas de cómo se mostrarán (wordaux2)	1,2
      68.  00:9D08                      ;~ postilemem_usado	DW		0	;pos en memoria ver array_ayudas de cómo se mostrarán (wordaux2)	3,4
      69.  00:9D08                      ;~ pospantalla			DB		0	;pos en pantalla (memoria en el banco 1 se le suma 256 + TILEMAP) (wordaux1)	5
      70.  00:9D08                      ;~ posx				DB		0	;pos del pixel central (esquina superior + 8x)						6
      71.  00:9D08                      ;~ posy				DB		112	;pos del pixel central (esquina superior + 8y) (para toas igual)	7
      72.  00:9D08                      ;~ puntero_accion		DW		0	;subrutina que indica la acción si se dispara en el objeto			8,9
      73.  00:9D08                      	;~ ENDSTRUCT;ESTRUCTURA_AYUDA
      74.  00:9D08                      
      75.  00:9D08                      	STRUCT ESTRUCTURA_AYUDA	
      76.  00:9D08                    < activa				DB		0	;0 no activa <>0 activo (y muestra tiles ayudaoff)
      77.  00:9D08                    < posx				DB		0	;punto x de la ayuda para cuando se dispare encima
      78.  00:9D08                    < posy				DB		112	;punto y de la ayuda para cuando se dispare encima
      79.  00:9D08                    < radiox				DB		0	;radio x de la ayuda para cuando se dispare encima
      80.  00:9D08                    < radioy				DB		0	;radio y de la ayuda para cuando se dispare encima
      81.  00:9D08                    < accion				DW		0	;función para acción de cada tipo de ayuda
      82.  00:9D08                    < tiles_ayudaon		DW		0	;puntero al array con los tiles de las ayudas sin usar para wordaux2
      83.  00:9D08                    < tiles_ayudaoff		DW		0	;puntero al array con los tiles de las ayudas sin usar para wordaux2
      84.  00:9D08                    < pos_en_tilemap		DW		0	;calcula posición en tilemap para wordaux1
      85.  00:9D08                    < alto				DB		2	;alto en tiles del dibujo de la puerta (filas)
      86.  00:9D08                    < ancho				DB		2	;ancho en tiles del dibujo de la puerta (columnas)
      87.  00:9D08                    < 	ENDSTRUCT;ESTRUCTURA_PUERTA
      88.  00:9D08                      
      89.  00:9D08                      	STRUCT ESTRUCTURA_PUERTA	;también servirá para la escalera
      90.  00:9D08                    < activa				DB		0	;0 no activa <>0 activo
      91.  00:9D08                    < posx				DB		0	;punto x de la puerta para cuando se dispare encima
      92.  00:9D08                    < posy				DB		0	;punto y de la puerta para cuando se dispare encima
      93.  00:9D08                    < radiox				DB		0	;radio x de la puerta para cuando se dispare encima
      94.  00:9D08                    < radioy				DB		0	;radio y de la puerta para cuando se dispare encima
      95.  00:9D08                    < accion				DW		0	;función para acción de cada tipo de puerta
      96.  00:9D08                    < tiles_puerta		DW		0	;puntero al array con los tiles de las puertas para wordaux2
      97.  00:9D08                    < pos_en_tilemap		DW		0	;calcula posición en tilemap para wordaux1
      98.  00:9D08                    < alto				DB		0	;alto en tiles del dibujo de la puerta (filas)
      99.  00:9D08                    < ancho				DB		0	;ancho en tiles del dibujo de la puerta (columnas)
     100.  00:9D08                    < 	ENDSTRUCT;ESTRUCTURA_PUERTA
     101.  00:9D08                      
     102.  00:9D08                      
     103.  00:9D08                      
     104.  00:9D08                      
     105.  00:9D08                      
     106.  00:9D08                      
     192   00:9D08                      	
     193   00:9D08                      ;;=====================================================
     194   00:9D08                      ;;DEFINICIÓN DE VARIABLES
     195   00:9D08                      ;;=====================================================		
     196   00:9D08                      	include "sprites.asm"
       1.  00:9D08                      ;;=====================================================
       2.  00:9D08                      ;;DEFINICIÓN DE SPRITES
       3.  00:9D08                      ;;=====================================================	
       4.  00:9D08                      
       5.  00:9D08                      
       6.  00:9D08                      ;; NOTA:
       7.  00:9D08                      ;~ sprite_reliquia_oracion: on/off
       8.  00:9D08                      ;~ sprite_reliquia_cruz: on/off
       9.  00:9D08                      ;~ sprite_reliquia_agua: on/off
      10.  00:9D08                      ;~ sprite_peto: on/off
      11.  00:9D08                      ;~ sprite_planta: on/off
      12.  00:9D08                      ;~ sprite_vida_extra: on/off
      13.  00:9D08                      ;~ sprite_ballesta_mejorada: on/off
      14.  00:9D08                      
      15.  00:9D08                      ;~ iban a ser sprites pero por falta de recursos serán tiles
      16.  00:9D08                      
      17.  00:9D08                      
      18.  00:9D08                      sprites_pantantalla:
      19.  00:9D08                      
      20.  00:9D08                      ;; PARTE 1: SPRITES COMUNES
      21.  00:9D08                      
      22.  00:9D08                      sprites_comunes:
      23.  00:9D08                      sprite_punto_mira_1:	;color 8
      24.  00:9D08                      	db #FF,#FF,#C0,#C0,#C0,#C0,#C0,#C0
      24.  00:9D08  FF FF C0 C0 C0 C0 C0 C0 
      25.  00:9D10                      	db #C0,#C0,#C0,#C0,#C0,#C0,#FF,#FF
      25.  00:9D10  C0 C0 C0 C0 C0 C0 FF FF 
      26.  00:9D18                      	db #FF,#FF,#03,#03,#03,#03,#03,#03
      26.  00:9D18  FF FF 03 03 03 03 03 03 
      27.  00:9D20                      	db #03,#03,#03,#03,#03,#03,#FF,#FF
      27.  00:9D20  03 03 03 03 03 03 FF FF 
      28.  00:9D28                      	
      29.  00:9D28                      sprite_punto_mira_2: 	;color 15
      30.  00:9D28                      	db #00,#00,#00,#00,#0F,#0F,#0C,#0C
      30.  00:9D28  00 00 00 00 0F 0F 0C 0C 
      31.  00:9D30                      	db #0C,#0C,#0F,#0F,#00,#00,#00,#00
      31.  00:9D30  0C 0C 0F 0F 00 00 00 00 
      32.  00:9D38                      	db #00,#00,#00,#00,#F0,#F0,#30,#30
      32.  00:9D38  00 00 00 00 F0 F0 30 30 
      33.  00:9D40                      	db #30,#30,#F0,#F0,#00,#00,#00,#00
      33.  00:9D40  30 30 F0 F0 00 00 00 00 
      34.  00:9D48                      	
      35.  00:9D48                      sprite_punto_mira_1_mejorado:
      36.  00:9D48                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      36.  00:9D48  FF FF FF FF FF FF FF FF 
      37.  00:9D50                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      37.  00:9D50  FF FF FF FF FF FF FF FF 
      38.  00:9D58                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      38.  00:9D58  FF FF FF FF FF FF FF FF 
      39.  00:9D60                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      39.  00:9D60  FF FF FF FF FF FF FF FF 
      40.  00:9D68                      
      41.  00:9D68                      sprite_punto_mira_2_mejorado:
      42.  00:9D68                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      42.  00:9D68  FF FF FF FF FF FF FF FF 
      43.  00:9D70                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      43.  00:9D70  FF FF FF FF FF FF FF FF 
      44.  00:9D78                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      44.  00:9D78  FF FF FF FF FF FF FF FF 
      45.  00:9D80                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      45.  00:9D80  FF FF FF FF FF FF FF FF 
      46.  00:9D88                      	
      47.  00:9D88                      sprite_explosion_1:
      48.  00:9D88                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      48.  00:9D88  FF FF FF FF FF FF FF FF 
      49.  00:9D90                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      49.  00:9D90  FF FF FF FF FF FF FF FF 
      50.  00:9D98                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      50.  00:9D98  FF FF FF FF FF FF FF FF 
      51.  00:9DA0                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF	
      51.  00:9DA0  FF FF FF FF FF FF FF FF 
      52.  00:9DA8                      
      53.  00:9DA8                      sprite_explosion_2:
      54.  00:9DA8                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      54.  00:9DA8  FF FF FF FF FF FF FF FF 
      55.  00:9DB0                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      55.  00:9DB0  FF FF FF FF FF FF FF FF 
      56.  00:9DB8                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      56.  00:9DB8  FF FF FF FF FF FF FF FF 
      57.  00:9DC0                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF	
      57.  00:9DC0  FF FF FF FF FF FF FF FF 
      58.  00:9DC8                      fin_sprites_comunes:
      59.  00:9DC8                      
      60.  00:9DC8                      ;; PARTE 2: SPRITES NO COMUNES
      61.  00:9DC8                      
      62.  00:9DC8                      ;; ARAÑA
      63.  00:9DC8                      	
      64.  00:9DC8                      sprite_arana1_1:
      65.  00:9DC8                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      65.  00:9DC8  FF FF FF FF FF FF FF FF 
      66.  00:9DD0                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      66.  00:9DD0  FF FF FF FF FF FF FF FF 
      67.  00:9DD8                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      67.  00:9DD8  FF FF FF FF FF FF FF FF 
      68.  00:9DE0                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      68.  00:9DE0  FF FF FF FF FF FF FF FF 
      69.  00:9DE8                      	
      70.  00:9DE8                      sprite_arana1_2:
      71.  00:9DE8                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      71.  00:9DE8  FF FF FF FF FF FF FF FF 
      72.  00:9DF0                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      72.  00:9DF0  FF FF FF FF FF FF FF FF 
      73.  00:9DF8                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      73.  00:9DF8  FF FF FF FF FF FF FF FF 
      74.  00:9E00                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      74.  00:9E00  FF FF FF FF FF FF FF FF 
      75.  00:9E08                      
      76.  00:9E08                      ;; MURCIELAGO
      77.  00:9E08                      	
      78.  00:9E08                      sprite_murcielago1_1:
      79.  00:9E08                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      79.  00:9E08  FF FF FF FF FF FF FF FF 
      80.  00:9E10                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      80.  00:9E10  FF FF FF FF FF FF FF FF 
      81.  00:9E18                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      81.  00:9E18  FF FF FF FF FF FF FF FF 
      82.  00:9E20                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      82.  00:9E20  FF FF FF FF FF FF FF FF 
      83.  00:9E28                      	
      84.  00:9E28                      sprite_murcielago1_2:
      85.  00:9E28                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      85.  00:9E28  FF FF FF FF FF FF FF FF 
      86.  00:9E30                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      86.  00:9E30  FF FF FF FF FF FF FF FF 
      87.  00:9E38                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      87.  00:9E38  FF FF FF FF FF FF FF FF 
      88.  00:9E40                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF	
      88.  00:9E40  FF FF FF FF FF FF FF FF 
      89.  00:9E48                      
      90.  00:9E48                      ;; SERPIENTE
      91.  00:9E48                      
      92.  00:9E48                      sprite_serpiente1_1:
      93.  00:9E48                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      93.  00:9E48  FF FF FF FF FF FF FF FF 
      94.  00:9E50                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      94.  00:9E50  FF FF FF FF FF FF FF FF 
      95.  00:9E58                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      95.  00:9E58  FF FF FF FF FF FF FF FF 
      96.  00:9E60                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      96.  00:9E60  FF FF FF FF FF FF FF FF 
      97.  00:9E68                      	
      98.  00:9E68                      sprite_serpiente1_2:
      99.  00:9E68                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      99.  00:9E68  FF FF FF FF FF FF FF FF 
     100.  00:9E70                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     100.  00:9E70  FF FF FF FF FF FF FF FF 
     101.  00:9E78                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     101.  00:9E78  FF FF FF FF FF FF FF FF 
     102.  00:9E80                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     102.  00:9E80  FF FF FF FF FF FF FF FF 
     103.  00:9E88                      	
     104.  00:9E88                      sprite_serpiente2_1:
     105.  00:9E88                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     105.  00:9E88  FF FF FF FF FF FF FF FF 
     106.  00:9E90                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     106.  00:9E90  FF FF FF FF FF FF FF FF 
     107.  00:9E98                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     107.  00:9E98  FF FF FF FF FF FF FF FF 
     108.  00:9EA0                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     108.  00:9EA0  FF FF FF FF FF FF FF FF 
     109.  00:9EA8                      	
     110.  00:9EA8                      sprite_serpiente2_2:
     111.  00:9EA8                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     111.  00:9EA8  FF FF FF FF FF FF FF FF 
     112.  00:9EB0                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     112.  00:9EB0  FF FF FF FF FF FF FF FF 
     113.  00:9EB8                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     113.  00:9EB8  FF FF FF FF FF FF FF FF 
     114.  00:9EC0                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     114.  00:9EC0  FF FF FF FF FF FF FF FF 
     115.  00:9EC8                      
     116.  00:9EC8                      ;; ZOMBI
     117.  00:9EC8                      
     118.  00:9EC8                      sprite_zombi1_1_1:
     119.  00:9EC8                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     119.  00:9EC8  FF FF FF FF FF FF FF FF 
     120.  00:9ED0                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     120.  00:9ED0  FF FF FF FF FF FF FF FF 
     121.  00:9ED8                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     121.  00:9ED8  FF FF FF FF FF FF FF FF 
     122.  00:9EE0                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     122.  00:9EE0  FF FF FF FF FF FF FF FF 
     123.  00:9EE8                      
     124.  00:9EE8                      sprite_zombi1_2_1:
     125.  00:9EE8                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     125.  00:9EE8  FF FF FF FF FF FF FF FF 
     126.  00:9EF0                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     126.  00:9EF0  FF FF FF FF FF FF FF FF 
     127.  00:9EF8                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     127.  00:9EF8  FF FF FF FF FF FF FF FF 
     128.  00:9F00                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     128.  00:9F00  FF FF FF FF FF FF FF FF 
     129.  00:9F08                      	
     130.  00:9F08                      sprite_zombi1_3_1:
     131.  00:9F08                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     131.  00:9F08  FF FF FF FF FF FF FF FF 
     132.  00:9F10                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     132.  00:9F10  FF FF FF FF FF FF FF FF 
     133.  00:9F18                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     133.  00:9F18  FF FF FF FF FF FF FF FF 
     134.  00:9F20                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     134.  00:9F20  FF FF FF FF FF FF FF FF 
     135.  00:9F28                      	
     136.  00:9F28                      sprite_zombi1_4_1:
     137.  00:9F28                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     137.  00:9F28  FF FF FF FF FF FF FF FF 
     138.  00:9F30                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     138.  00:9F30  FF FF FF FF FF FF FF FF 
     139.  00:9F38                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     139.  00:9F38  FF FF FF FF FF FF FF FF 
     140.  00:9F40                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     140.  00:9F40  FF FF FF FF FF FF FF FF 
     141.  00:9F48                      	
     142.  00:9F48                      sprite_zombi1_1_2:
     143.  00:9F48                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     143.  00:9F48  FF FF FF FF FF FF FF FF 
     144.  00:9F50                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     144.  00:9F50  FF FF FF FF FF FF FF FF 
     145.  00:9F58                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     145.  00:9F58  FF FF FF FF FF FF FF FF 
     146.  00:9F60                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     146.  00:9F60  FF FF FF FF FF FF FF FF 
     147.  00:9F68                      
     148.  00:9F68                      sprite_zombi1_2_2:
     149.  00:9F68                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     149.  00:9F68  FF FF FF FF FF FF FF FF 
     150.  00:9F70                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     150.  00:9F70  FF FF FF FF FF FF FF FF 
     151.  00:9F78                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     151.  00:9F78  FF FF FF FF FF FF FF FF 
     152.  00:9F80                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     152.  00:9F80  FF FF FF FF FF FF FF FF 
     153.  00:9F88                      	
     154.  00:9F88                      sprite_zombi1_3_2:
     155.  00:9F88                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     155.  00:9F88  FF FF FF FF FF FF FF FF 
     156.  00:9F90                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     156.  00:9F90  FF FF FF FF FF FF FF FF 
     157.  00:9F98                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     157.  00:9F98  FF FF FF FF FF FF FF FF 
     158.  00:9FA0                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     158.  00:9FA0  FF FF FF FF FF FF FF FF 
     159.  00:9FA8                      	
     160.  00:9FA8                      sprite_zombi1_4_2:
     161.  00:9FA8                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     161.  00:9FA8  FF FF FF FF FF FF FF FF 
     162.  00:9FB0                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     162.  00:9FB0  FF FF FF FF FF FF FF FF 
     163.  00:9FB8                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     163.  00:9FB8  FF FF FF FF FF FF FF FF 
     164.  00:9FC0                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     164.  00:9FC0  FF FF FF FF FF FF FF FF 
     165.  00:9FC8                      	
     166.  00:9FC8                      sprite_zombi2_1_1:
     167.  00:9FC8                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     167.  00:9FC8  FF FF FF FF FF FF FF FF 
     168.  00:9FD0                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     168.  00:9FD0  FF FF FF FF FF FF FF FF 
     169.  00:9FD8                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     169.  00:9FD8  FF FF FF FF FF FF FF FF 
     170.  00:9FE0                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     170.  00:9FE0  FF FF FF FF FF FF FF FF 
     171.  00:9FE8                      
     172.  00:9FE8                      sprite_zombi2_2_1:
     173.  00:9FE8                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     173.  00:9FE8  FF FF FF FF FF FF FF FF 
     174.  00:9FF0                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     174.  00:9FF0  FF FF FF FF FF FF FF FF 
     175.  00:9FF8                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     175.  00:9FF8  FF FF FF FF FF FF FF FF 
     176.  00:A000                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     176.  00:A000  FF FF FF FF FF FF FF FF 
     177.  00:A008                      	
     178.  00:A008                      sprite_zombi2_3_1:
     179.  00:A008                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     179.  00:A008  FF FF FF FF FF FF FF FF 
     180.  00:A010                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     180.  00:A010  FF FF FF FF FF FF FF FF 
     181.  00:A018                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     181.  00:A018  FF FF FF FF FF FF FF FF 
     182.  00:A020                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     182.  00:A020  FF FF FF FF FF FF FF FF 
     183.  00:A028                      	
     184.  00:A028                      sprite_zombi2_4_1:
     185.  00:A028                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     185.  00:A028  FF FF FF FF FF FF FF FF 
     186.  00:A030                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     186.  00:A030  FF FF FF FF FF FF FF FF 
     187.  00:A038                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     187.  00:A038  FF FF FF FF FF FF FF FF 
     188.  00:A040                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     188.  00:A040  FF FF FF FF FF FF FF FF 
     189.  00:A048                      	
     190.  00:A048                      sprite_zombi2_1_2:
     191.  00:A048                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     191.  00:A048  FF FF FF FF FF FF FF FF 
     192.  00:A050                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     192.  00:A050  FF FF FF FF FF FF FF FF 
     193.  00:A058                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     193.  00:A058  FF FF FF FF FF FF FF FF 
     194.  00:A060                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     194.  00:A060  FF FF FF FF FF FF FF FF 
     195.  00:A068                      
     196.  00:A068                      sprite_zombi2_2_2:
     197.  00:A068                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     197.  00:A068  FF FF FF FF FF FF FF FF 
     198.  00:A070                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     198.  00:A070  FF FF FF FF FF FF FF FF 
     199.  00:A078                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     199.  00:A078  FF FF FF FF FF FF FF FF 
     200.  00:A080                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     200.  00:A080  FF FF FF FF FF FF FF FF 
     201.  00:A088                      	
     202.  00:A088                      sprite_zombi2_3_2:
     203.  00:A088                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     203.  00:A088  FF FF FF FF FF FF FF FF 
     204.  00:A090                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     204.  00:A090  FF FF FF FF FF FF FF FF 
     205.  00:A098                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     205.  00:A098  FF FF FF FF FF FF FF FF 
     206.  00:A0A0                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     206.  00:A0A0  FF FF FF FF FF FF FF FF 
     207.  00:A0A8                      	
     208.  00:A0A8                      sprite_zombi2_4_2:
     209.  00:A0A8                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     209.  00:A0A8  FF FF FF FF FF FF FF FF 
     210.  00:A0B0                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     210.  00:A0B0  FF FF FF FF FF FF FF FF 
     211.  00:A0B8                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     211.  00:A0B8  FF FF FF FF FF FF FF FF 
     212.  00:A0C0                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     212.  00:A0C0  FF FF FF FF FF FF FF FF 
     213.  00:A0C8                      	
     214.  00:A0C8                      ;; CABALLERO
     215.  00:A0C8                      
     216.  00:A0C8                      sprite_caballero1_1_1:
     217.  00:A0C8                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     217.  00:A0C8  FF FF FF FF FF FF FF FF 
     218.  00:A0D0                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     218.  00:A0D0  FF FF FF FF FF FF FF FF 
     219.  00:A0D8                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     219.  00:A0D8  FF FF FF FF FF FF FF FF 
     220.  00:A0E0                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     220.  00:A0E0  FF FF FF FF FF FF FF FF 
     221.  00:A0E8                      
     222.  00:A0E8                      sprite_caballero1_2_1:
     223.  00:A0E8                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     223.  00:A0E8  FF FF FF FF FF FF FF FF 
     224.  00:A0F0                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     224.  00:A0F0  FF FF FF FF FF FF FF FF 
     225.  00:A0F8                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     225.  00:A0F8  FF FF FF FF FF FF FF FF 
     226.  00:A100                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     226.  00:A100  FF FF FF FF FF FF FF FF 
     227.  00:A108                      	
     228.  00:A108                      sprite_caballero1_3_1:
     229.  00:A108                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     229.  00:A108  FF FF FF FF FF FF FF FF 
     230.  00:A110                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     230.  00:A110  FF FF FF FF FF FF FF FF 
     231.  00:A118                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     231.  00:A118  FF FF FF FF FF FF FF FF 
     232.  00:A120                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     232.  00:A120  FF FF FF FF FF FF FF FF 
     233.  00:A128                      	
     234.  00:A128                      sprite_caballero1_4_1:
     235.  00:A128                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     235.  00:A128  FF FF FF FF FF FF FF FF 
     236.  00:A130                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     236.  00:A130  FF FF FF FF FF FF FF FF 
     237.  00:A138                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     237.  00:A138  FF FF FF FF FF FF FF FF 
     238.  00:A140                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     238.  00:A140  FF FF FF FF FF FF FF FF 
     239.  00:A148                      	
     240.  00:A148                      sprite_caballero1_1_2:
     241.  00:A148                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     241.  00:A148  FF FF FF FF FF FF FF FF 
     242.  00:A150                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     242.  00:A150  FF FF FF FF FF FF FF FF 
     243.  00:A158                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     243.  00:A158  FF FF FF FF FF FF FF FF 
     244.  00:A160                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     244.  00:A160  FF FF FF FF FF FF FF FF 
     245.  00:A168                      
     246.  00:A168                      sprite_caballero1_2_2:
     247.  00:A168                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     247.  00:A168  FF FF FF FF FF FF FF FF 
     248.  00:A170                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     248.  00:A170  FF FF FF FF FF FF FF FF 
     249.  00:A178                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     249.  00:A178  FF FF FF FF FF FF FF FF 
     250.  00:A180                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     250.  00:A180  FF FF FF FF FF FF FF FF 
     251.  00:A188                      	
     252.  00:A188                      sprite_caballero1_3_2:
     253.  00:A188                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     253.  00:A188  FF FF FF FF FF FF FF FF 
     254.  00:A190                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     254.  00:A190  FF FF FF FF FF FF FF FF 
     255.  00:A198                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     255.  00:A198  FF FF FF FF FF FF FF FF 
     256.  00:A1A0                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     256.  00:A1A0  FF FF FF FF FF FF FF FF 
     257.  00:A1A8                      	
     258.  00:A1A8                      sprite_caballero1_4_2:
     259.  00:A1A8                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     259.  00:A1A8  FF FF FF FF FF FF FF FF 
     260.  00:A1B0                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     260.  00:A1B0  FF FF FF FF FF FF FF FF 
     261.  00:A1B8                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     261.  00:A1B8  FF FF FF FF FF FF FF FF 
     262.  00:A1C0                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     262.  00:A1C0  FF FF FF FF FF FF FF FF 
     263.  00:A1C8                      	
     264.  00:A1C8                      sprite_caballero2_1_1:
     265.  00:A1C8                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     265.  00:A1C8  FF FF FF FF FF FF FF FF 
     266.  00:A1D0                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     266.  00:A1D0  FF FF FF FF FF FF FF FF 
     267.  00:A1D8                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     267.  00:A1D8  FF FF FF FF FF FF FF FF 
     268.  00:A1E0                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     268.  00:A1E0  FF FF FF FF FF FF FF FF 
     269.  00:A1E8                      
     270.  00:A1E8                      sprite_caballero2_2_1:
     271.  00:A1E8                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     271.  00:A1E8  FF FF FF FF FF FF FF FF 
     272.  00:A1F0                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     272.  00:A1F0  FF FF FF FF FF FF FF FF 
     273.  00:A1F8                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     273.  00:A1F8  FF FF FF FF FF FF FF FF 
     274.  00:A200                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     274.  00:A200  FF FF FF FF FF FF FF FF 
     275.  00:A208                      	
     276.  00:A208                      sprite_caballero2_3_1:
     277.  00:A208                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     277.  00:A208  FF FF FF FF FF FF FF FF 
     278.  00:A210                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     278.  00:A210  FF FF FF FF FF FF FF FF 
     279.  00:A218                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     279.  00:A218  FF FF FF FF FF FF FF FF 
     280.  00:A220                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     280.  00:A220  FF FF FF FF FF FF FF FF 
     281.  00:A228                      	
     282.  00:A228                      sprite_caballero2_4_1:
     283.  00:A228                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     283.  00:A228  FF FF FF FF FF FF FF FF 
     284.  00:A230                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     284.  00:A230  FF FF FF FF FF FF FF FF 
     285.  00:A238                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     285.  00:A238  FF FF FF FF FF FF FF FF 
     286.  00:A240                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     286.  00:A240  FF FF FF FF FF FF FF FF 
     287.  00:A248                      	
     288.  00:A248                      sprite_caballero2_1_2:
     289.  00:A248                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     289.  00:A248  FF FF FF FF FF FF FF FF 
     290.  00:A250                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     290.  00:A250  FF FF FF FF FF FF FF FF 
     291.  00:A258                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     291.  00:A258  FF FF FF FF FF FF FF FF 
     292.  00:A260                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     292.  00:A260  FF FF FF FF FF FF FF FF 
     293.  00:A268                      
     294.  00:A268                      sprite_caballero2_2_2:
     295.  00:A268                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     295.  00:A268  FF FF FF FF FF FF FF FF 
     296.  00:A270                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     296.  00:A270  FF FF FF FF FF FF FF FF 
     297.  00:A278                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     297.  00:A278  FF FF FF FF FF FF FF FF 
     298.  00:A280                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     298.  00:A280  FF FF FF FF FF FF FF FF 
     299.  00:A288                      	
     300.  00:A288                      sprite_caballero2_3_2:
     301.  00:A288                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     301.  00:A288  FF FF FF FF FF FF FF FF 
     302.  00:A290                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     302.  00:A290  FF FF FF FF FF FF FF FF 
     303.  00:A298                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     303.  00:A298  FF FF FF FF FF FF FF FF 
     304.  00:A2A0                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     304.  00:A2A0  FF FF FF FF FF FF FF FF 
     305.  00:A2A8                      	
     306.  00:A2A8                      sprite_caballero2_4_2:
     307.  00:A2A8                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     307.  00:A2A8  FF FF FF FF FF FF FF FF 
     308.  00:A2B0                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     308.  00:A2B0  FF FF FF FF FF FF FF FF 
     309.  00:A2B8                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     309.  00:A2B8  FF FF FF FF FF FF FF FF 
     310.  00:A2C0                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     310.  00:A2C0  FF FF FF FF FF FF FF FF 
     311.  00:A2C8                      	
     312.  00:A2C8                      ;; LLAMA
     313.  00:A2C8                      
     314.  00:A2C8                      sprite_llama1_1:	
     315.  00:A2C8                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     315.  00:A2C8  FF FF FF FF FF FF FF FF 
     316.  00:A2D0                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     316.  00:A2D0  FF FF FF FF FF FF FF FF 
     317.  00:A2D8                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     317.  00:A2D8  FF FF FF FF FF FF FF FF 
     318.  00:A2E0                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     318.  00:A2E0  FF FF FF FF FF FF FF FF 
     319.  00:A2E8                      	
     320.  00:A2E8                      sprite_llama2_1:	
     321.  00:A2E8                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     321.  00:A2E8  FF FF FF FF FF FF FF FF 
     322.  00:A2F0                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     322.  00:A2F0  FF FF FF FF FF FF FF FF 
     323.  00:A2F8                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     323.  00:A2F8  FF FF FF FF FF FF FF FF 
     324.  00:A300                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF	
     324.  00:A300  FF FF FF FF FF FF FF FF 
     325.  00:A308                      	
     326.  00:A308                      sprite_llama1_2:	
     327.  00:A308                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     327.  00:A308  FF FF FF FF FF FF FF FF 
     328.  00:A310                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     328.  00:A310  FF FF FF FF FF FF FF FF 
     329.  00:A318                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     329.  00:A318  FF FF FF FF FF FF FF FF 
     330.  00:A320                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     330.  00:A320  FF FF FF FF FF FF FF FF 
     331.  00:A328                      	
     332.  00:A328                      sprite_llama2_2:	
     333.  00:A328                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     333.  00:A328  FF FF FF FF FF FF FF FF 
     334.  00:A330                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     334.  00:A330  FF FF FF FF FF FF FF FF 
     335.  00:A338                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     335.  00:A338  FF FF FF FF FF FF FF FF 
     336.  00:A340                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF			
     336.  00:A340  FF FF FF FF FF FF FF FF 
     337.  00:A348                      	
     338.  00:A348                      ;; FANTASMA
     339.  00:A348                      
     340.  00:A348                      sprite_fantasma1_1:
     341.  00:A348                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     341.  00:A348  FF FF FF FF FF FF FF FF 
     342.  00:A350                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     342.  00:A350  FF FF FF FF FF FF FF FF 
     343.  00:A358                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     343.  00:A358  FF FF FF FF FF FF FF FF 
     344.  00:A360                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     344.  00:A360  FF FF FF FF FF FF FF FF 
     345.  00:A368                      
     346.  00:A368                      sprite_fantasma2_1:
     347.  00:A368                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     347.  00:A368  FF FF FF FF FF FF FF FF 
     348.  00:A370                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     348.  00:A370  FF FF FF FF FF FF FF FF 
     349.  00:A378                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     349.  00:A378  FF FF FF FF FF FF FF FF 
     350.  00:A380                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     350.  00:A380  FF FF FF FF FF FF FF FF 
     351.  00:A388                      
     352.  00:A388                      sprite_fantasma1_2:
     353.  00:A388                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     353.  00:A388  FF FF FF FF FF FF FF FF 
     354.  00:A390                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     354.  00:A390  FF FF FF FF FF FF FF FF 
     355.  00:A398                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     355.  00:A398  FF FF FF FF FF FF FF FF 
     356.  00:A3A0                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     356.  00:A3A0  FF FF FF FF FF FF FF FF 
     357.  00:A3A8                      
     358.  00:A3A8                      sprite_fantasma2_2:
     359.  00:A3A8                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     359.  00:A3A8  FF FF FF FF FF FF FF FF 
     360.  00:A3B0                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     360.  00:A3B0  FF FF FF FF FF FF FF FF 
     361.  00:A3B8                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     361.  00:A3B8  FF FF FF FF FF FF FF FF 
     362.  00:A3C0                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF	
     362.  00:A3C0  FF FF FF FF FF FF FF FF 
     363.  00:A3C8                      	
     364.  00:A3C8                      ;; MAGIA
     365.  00:A3C8                      
     366.  00:A3C8                      sprite_magia1_1:
     367.  00:A3C8                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     367.  00:A3C8  FF FF FF FF FF FF FF FF 
     368.  00:A3D0                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     368.  00:A3D0  FF FF FF FF FF FF FF FF 
     369.  00:A3D8                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     369.  00:A3D8  FF FF FF FF FF FF FF FF 
     370.  00:A3E0                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     370.  00:A3E0  FF FF FF FF FF FF FF FF 
     371.  00:A3E8                      
     372.  00:A3E8                      sprite_magia2_1:
     373.  00:A3E8                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     373.  00:A3E8  FF FF FF FF FF FF FF FF 
     374.  00:A3F0                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     374.  00:A3F0  FF FF FF FF FF FF FF FF 
     375.  00:A3F8                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     375.  00:A3F8  FF FF FF FF FF FF FF FF 
     376.  00:A400                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     376.  00:A400  FF FF FF FF FF FF FF FF 
     377.  00:A408                      
     378.  00:A408                      sprite_magia1_2:
     379.  00:A408                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     379.  00:A408  FF FF FF FF FF FF FF FF 
     380.  00:A410                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     380.  00:A410  FF FF FF FF FF FF FF FF 
     381.  00:A418                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     381.  00:A418  FF FF FF FF FF FF FF FF 
     382.  00:A420                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     382.  00:A420  FF FF FF FF FF FF FF FF 
     383.  00:A428                      
     384.  00:A428                      sprite_magia2_2:
     385.  00:A428                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     385.  00:A428  FF FF FF FF FF FF FF FF 
     386.  00:A430                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     386.  00:A430  FF FF FF FF FF FF FF FF 
     387.  00:A438                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     387.  00:A438  FF FF FF FF FF FF FF FF 
     388.  00:A440                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF	
     388.  00:A440  FF FF FF FF FF FF FF FF 
     389.  00:A448                      	
     390.  00:A448                      	
     391.  00:A448                      ;; BEHOLDER
     392.  00:A448                      
     393.  00:A448                      sprite_beholder1_1:
     394.  00:A448                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     394.  00:A448  FF FF FF FF FF FF FF FF 
     395.  00:A450                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     395.  00:A450  FF FF FF FF FF FF FF FF 
     396.  00:A458                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     396.  00:A458  FF FF FF FF FF FF FF FF 
     397.  00:A460                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     397.  00:A460  FF FF FF FF FF FF FF FF 
     398.  00:A468                      
     399.  00:A468                      sprite_beholder2_1:
     400.  00:A468                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     400.  00:A468  FF FF FF FF FF FF FF FF 
     401.  00:A470                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     401.  00:A470  FF FF FF FF FF FF FF FF 
     402.  00:A478                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     402.  00:A478  FF FF FF FF FF FF FF FF 
     403.  00:A480                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     403.  00:A480  FF FF FF FF FF FF FF FF 
     404.  00:A488                      
     405.  00:A488                      sprite_beholder3_1:
     406.  00:A488                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     406.  00:A488  FF FF FF FF FF FF FF FF 
     407.  00:A490                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     407.  00:A490  FF FF FF FF FF FF FF FF 
     408.  00:A498                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     408.  00:A498  FF FF FF FF FF FF FF FF 
     409.  00:A4A0                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     409.  00:A4A0  FF FF FF FF FF FF FF FF 
     410.  00:A4A8                      
     411.  00:A4A8                      sprite_beholder4_1:
     412.  00:A4A8                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     412.  00:A4A8  FF FF FF FF FF FF FF FF 
     413.  00:A4B0                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     413.  00:A4B0  FF FF FF FF FF FF FF FF 
     414.  00:A4B8                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     414.  00:A4B8  FF FF FF FF FF FF FF FF 
     415.  00:A4C0                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF	
     415.  00:A4C0  FF FF FF FF FF FF FF FF 
     416.  00:A4C8                      	
     417.  00:A4C8                      sprite_beholder1_2:
     418.  00:A4C8                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     418.  00:A4C8  FF FF FF FF FF FF FF FF 
     419.  00:A4D0                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     419.  00:A4D0  FF FF FF FF FF FF FF FF 
     420.  00:A4D8                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     420.  00:A4D8  FF FF FF FF FF FF FF FF 
     421.  00:A4E0                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     421.  00:A4E0  FF FF FF FF FF FF FF FF 
     422.  00:A4E8                      
     423.  00:A4E8                      sprite_beholder2_2:
     424.  00:A4E8                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     424.  00:A4E8  FF FF FF FF FF FF FF FF 
     425.  00:A4F0                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     425.  00:A4F0  FF FF FF FF FF FF FF FF 
     426.  00:A4F8                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     426.  00:A4F8  FF FF FF FF FF FF FF FF 
     427.  00:A500                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     427.  00:A500  FF FF FF FF FF FF FF FF 
     428.  00:A508                      
     429.  00:A508                      sprite_beholder3_2:
     430.  00:A508                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     430.  00:A508  FF FF FF FF FF FF FF FF 
     431.  00:A510                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     431.  00:A510  FF FF FF FF FF FF FF FF 
     432.  00:A518                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     432.  00:A518  FF FF FF FF FF FF FF FF 
     433.  00:A520                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     433.  00:A520  FF FF FF FF FF FF FF FF 
     434.  00:A528                      
     435.  00:A528                      sprite_beholder4_2:
     436.  00:A528                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     436.  00:A528  FF FF FF FF FF FF FF FF 
     437.  00:A530                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     437.  00:A530  FF FF FF FF FF FF FF FF 
     438.  00:A538                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     438.  00:A538  FF FF FF FF FF FF FF FF 
     439.  00:A540                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF		
     439.  00:A540  FF FF FF FF FF FF FF FF 
     440.  00:A548                      	
     441.  00:A548                      ;; VAMPIRO
     442.  00:A548                      
     443.  00:A548                      sprite_vampiro1_1:
     444.  00:A548                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     444.  00:A548  FF FF FF FF FF FF FF FF 
     445.  00:A550                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     445.  00:A550  FF FF FF FF FF FF FF FF 
     446.  00:A558                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     446.  00:A558  FF FF FF FF FF FF FF FF 
     447.  00:A560                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     447.  00:A560  FF FF FF FF FF FF FF FF 
     448.  00:A568                      
     449.  00:A568                      sprite_vampiro2_1:
     450.  00:A568                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     450.  00:A568  FF FF FF FF FF FF FF FF 
     451.  00:A570                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     451.  00:A570  FF FF FF FF FF FF FF FF 
     452.  00:A578                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     452.  00:A578  FF FF FF FF FF FF FF FF 
     453.  00:A580                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     453.  00:A580  FF FF FF FF FF FF FF FF 
     454.  00:A588                      
     455.  00:A588                      sprite_vampiro1_2:
     456.  00:A588                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     456.  00:A588  FF FF FF FF FF FF FF FF 
     457.  00:A590                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     457.  00:A590  FF FF FF FF FF FF FF FF 
     458.  00:A598                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     458.  00:A598  FF FF FF FF FF FF FF FF 
     459.  00:A5A0                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     459.  00:A5A0  FF FF FF FF FF FF FF FF 
     460.  00:A5A8                      
     461.  00:A5A8                      sprite_vampiro2_2:
     462.  00:A5A8                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     462.  00:A5A8  FF FF FF FF FF FF FF FF 
     463.  00:A5B0                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     463.  00:A5B0  FF FF FF FF FF FF FF FF 
     464.  00:A5B8                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     464.  00:A5B8  FF FF FF FF FF FF FF FF 
     465.  00:A5C0                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     465.  00:A5C0  FF FF FF FF FF FF FF FF 
     466.  00:A5C8                      	
     467.  00:A5C8                      ;; MANOIZQ
     468.  00:A5C8                      
     469.  00:A5C8                      sprite_manoizq1:
     470.  00:A5C8                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     470.  00:A5C8  FF FF FF FF FF FF FF FF 
     471.  00:A5D0                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     471.  00:A5D0  FF FF FF FF FF FF FF FF 
     472.  00:A5D8                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     472.  00:A5D8  FF FF FF FF FF FF FF FF 
     473.  00:A5E0                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     473.  00:A5E0  FF FF FF FF FF FF FF FF 
     474.  00:A5E8                      	
     475.  00:A5E8                      sprite_manoizq2:
     476.  00:A5E8                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     476.  00:A5E8  FF FF FF FF FF FF FF FF 
     477.  00:A5F0                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     477.  00:A5F0  FF FF FF FF FF FF FF FF 
     478.  00:A5F8                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     478.  00:A5F8  FF FF FF FF FF FF FF FF 
     479.  00:A600                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     479.  00:A600  FF FF FF FF FF FF FF FF 
     480.  00:A608                      	
     481.  00:A608                      sprite_manoizq3:
     482.  00:A608                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     482.  00:A608  FF FF FF FF FF FF FF FF 
     483.  00:A610                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     483.  00:A610  FF FF FF FF FF FF FF FF 
     484.  00:A618                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     484.  00:A618  FF FF FF FF FF FF FF FF 
     485.  00:A620                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF	
     485.  00:A620  FF FF FF FF FF FF FF FF 
     486.  00:A628                      	
     487.  00:A628                      ;; MANODER
     488.  00:A628                      
     489.  00:A628                      sprite_manoder1:
     490.  00:A628                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     490.  00:A628  FF FF FF FF FF FF FF FF 
     491.  00:A630                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     491.  00:A630  FF FF FF FF FF FF FF FF 
     492.  00:A638                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     492.  00:A638  FF FF FF FF FF FF FF FF 
     493.  00:A640                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     493.  00:A640  FF FF FF FF FF FF FF FF 
     494.  00:A648                      	
     495.  00:A648                      sprite_manoder2:
     496.  00:A648                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     496.  00:A648  FF FF FF FF FF FF FF FF 
     497.  00:A650                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     497.  00:A650  FF FF FF FF FF FF FF FF 
     498.  00:A658                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     498.  00:A658  FF FF FF FF FF FF FF FF 
     499.  00:A660                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     499.  00:A660  FF FF FF FF FF FF FF FF 
     500.  00:A668                      	
     501.  00:A668                      sprite_manoder3:
     502.  00:A668                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     502.  00:A668  FF FF FF FF FF FF FF FF 
     503.  00:A670                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     503.  00:A670  FF FF FF FF FF FF FF FF 
     504.  00:A678                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     504.  00:A678  FF FF FF FF FF FF FF FF 
     505.  00:A680                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF		
     505.  00:A680  FF FF FF FF FF FF FF FF 
     506.  00:A688                      	
     507.  00:A688                      	
     508.  00:A688                      	
     509.  00:A688                      	
     510.  00:A688                      	
     511.  00:A688                      	
     512.  00:A688                      	
     513.  00:A688                      	
     514.  00:A688                      	
     515.  00:A688                      	
     516.  00:A688                      	
     517.  00:A688                      	
     518.  00:A688                      	
     519.  00:A688                      	
     520.  00:A688                      	
     521.  00:A688                      	
     522.  00:A688                      	
     523.  00:A688                      	
     524.  00:A688                      	
     525.  00:A688                      	
     526.  00:A688                      	
     527.  00:A688                      	
     528.  00:A688                      	
     197   00:A688                      	
     198   00:A688                      	include "habitaciones.asm"
       1.  00:A688                      ;;=====================================================
       2.  00:A688                      ;;DEFINICIÓN DE HABITACIONES x NIVEL
       3.  00:A688                      ;;=====================================================	
       4.  00:A688                      
       5.  00:A688                      ; sólo voy a usar 7x7 pero como los arrays son lineales y voy a trabajar con matrices
       6.  00:A688                      ; me interesa que seande  8x8 aunque sólo trabaje con 7x7
       7.  00:A688                      
       8.  00:A688                      ; ojo... la primera linea corresponderá a la primera linea del castillo no a la última
       9.  00:A688                      
      10.  00:A688                      ;; definición de estructura de bits
      11.  00:A688                      ;16 bits por habitación
      12.  00:A688                      
      13.  00:A688                      ;NOTA: no es necesario asignar un bit para la puerta de arriba ya que en las habitaciones de la fila 7 sólo habrá una puerta que será una escalera
      14.  00:A688                      
      15.  00:A688                      ;~ 7 - sin asignar
      16.  00:A688                      ;~ 6 - sin asignar
      17.  00:A688                      ;~ 5 - esqueletos
      18.  00:A688                      ;~ 4 - todos los enemigos muertos 0 no y 1 ó <>0 => toca la variable "is_habitacion_terminada"
      19.  00:A688                      ;~ 0,1,2,3 - nº puertas 1 arriba 1 derecha 1 abajo 1 izquierda
      20.  00:A688                      
      21.  00:A688                      ;~ 7 - oracion
      22.  00:A688                      ;~ 6 - cruz
      23.  00:A688                      ;~ 5 - agua bendita
      24.  00:A688                      ;~ 4 - armadura
      25.  00:A688                      ;~ 3 - planta
      26.  00:A688                      ;~ 2 - vida extra
      27.  00:A688                      ;~ 1 - ballesta
      28.  00:A688                      ;~ 0 - antorchas
      29.  00:A688                      
      30.  00:A688                      ;importante: el byte de la columna 15 indicará con 1 y 0 habitaciones por las que se haya pasado
      31.  00:A688                      ;cuando se inicie la partida todos se pondrán a 0
      32.  00:A688                      ;por ejemplo 01000000b se ha pasado por la hab. 2 de esa fila en el nivel que sea
      33.  00:A688                      
      34.  00:A688                      habitacion_actual:
      35.  00:A688  00                  	db  0		;habitación donde se encuentre el prota. Se mete en una varible par traer todos los datos de golpe y no buscarlos varias veces
      36.  00:A689                      habitacion_extras:
      37.  00:A689  00                  	db	0		;donde van las ayudas de una habitación
      38.  00:A68A                      habitacion_actual_puntero;
      39.  00:A68A  00 00               	dw	0		;puntero para actualizar la habitación cuando se maten todos los enemigos
      40.  00:A68C                      is_habitacion_terminada:
      41.  00:A68C  00                  	db	0		;variable para consultar más rápido si se ha pasado (<>0 si se ha pasado y 0 no se ha pasado)
      42.  00:A68D                      
      43.  00:A68D                      
      44.  00:A68D                      habitaciones_juego:
      45.  00:A68D                      habitaciones_nivel0:
      46.  00:A68D                      	db  00000000b,#C0,00000000b,#C0,00000000b,#01,00001010b,11111110b,00010000b,#C0,00000000b,#C0,00000000b,#C0,#00,#00 	;primera fila
      46.  00:A68D  00 C0 00 C0 00 01 0A FE 10 C0 00 C0 00 C0 00 00 
      47.  00:A69D                      	db  00000000b,#C0,00011100b,#C0,00011101b,#01,00011111b,#00,00011101b,#C0,00011001b,#C0,00000000b,#C0,#00,#00
      47.  00:A69D  00 C0 1C C0 1D 01 1F 00 1D C0 19 C0 00 C0 00 00 
      48.  00:A6AD                      	db  00000000b,#C0,00011110b,#C0,00011111b,#00,00011111b,#00,00011111b,#C0,00011011b,#C0,00000000b,#C0,#00,#00
      48.  00:A6AD  00 C0 1E C0 1F 00 1F 00 1F C0 1B C0 00 C0 00 00 
      49.  00:A6BD                      	db  00000000b,#C0,00011010b,#C0,00011010b,#00,00010010b,#00,00011010b,#C0,00011010b,#C0,00000000b,#C0,#00,#00
      49.  00:A6BD  00 C0 1A C0 1A 00 12 00 1A C0 1A C0 00 C0 00 00 
      50.  00:A6CD                      	db  00000000b,#C0,00011010b,#C0,00011110b,#C0,00010101b,#C0,00011011b,#C0,00011010b,#C0,00000000b,#C0,#00,#00
      50.  00:A6CD  00 C0 1A C0 1E C0 15 C0 1B C0 1A C0 00 C0 00 00 
      51.  00:A6DD                      	db  00000000b,#C0,00010110b,#C0,00010111b,#C0,00011101b,#C0,00010111b,#C0,00010011b,#C0,00000000b,#C0,#00,#00
      51.  00:A6DD  00 C0 16 C0 17 C0 1D C0 17 C0 13 C0 00 C0 00 00 
      52.  00:A6ED                      	db  00000000b,#C0,00000000b,#C0,00000000b,#C0,00111010b,#C0,00011000b,#C0,00000000b,#C0,00000000b,#C0,#00,#00	;última fila
      52.  00:A6ED  00 C0 00 C0 00 C0 3A C0 18 C0 00 C0 00 C0 00 00 
      53.  00:A6FD                      	
      54.  00:A6FD                      habitaciones_nivel1:
      55.  00:A6FD                      	db  00000000b,#C0,00000000b,#C0,00000000b,#00,00011010b,#00,00010000b,#C0,00000000b,#C0,00000000b,#C0,#00,#00 	;primera fila
      55.  00:A6FD  00 C0 00 C0 00 00 1A 00 10 C0 00 C0 00 C0 00 00 
      56.  00:A70D                      	db  00000000b,#C0,00011100b,#C0,00011101b,#00,00011111b,#00,00011101b,#C0,00011001b,#C0,00000000b,#C0,#00,#00
      56.  00:A70D  00 C0 1C C0 1D 00 1F 00 1D C0 19 C0 00 C0 00 00 
      57.  00:A71D                      	db  00000000b,#C0,00011110b,#C0,00011111b,#00,00011111b,#00,00011111b,#C0,00011011b,#C0,00000000b,#C0,#00,#00
      57.  00:A71D  00 C0 1E C0 1F 00 1F 00 1F C0 1B C0 00 C0 00 00 
      58.  00:A72D                      	db  00000000b,#C0,00011010b,#C0,00011010b,#00,00010010b,#00,00011010b,#C0,00011010b,#C0,00000000b,#C0,#00,#00
      58.  00:A72D  00 C0 1A C0 1A 00 12 00 1A C0 1A C0 00 C0 00 00 
      59.  00:A73D                      	db  00000000b,#C0,00011010b,#C0,00011110b,#C0,00010101b,#C0,00011011b,#C0,00011010b,#C0,00000000b,#C0,#00,#00
      59.  00:A73D  00 C0 1A C0 1E C0 15 C0 1B C0 1A C0 00 C0 00 00 
      60.  00:A74D                      	db  00000000b,#C0,00010110b,#C0,00010111b,#C0,00011101b,#C0,00010111b,#C0,00010011b,#C0,00000000b,#C0,#00,#00
      60.  00:A74D  00 C0 16 C0 17 C0 1D C0 17 C0 13 C0 00 C0 00 00 
      61.  00:A75D                      	db  00000000b,#C0,00000000b,#C0,00000000b,#C0,00011010b,#C0,00011000b,#C0,00000000b,#C0,00000000b,#C0,#00,#00	;última fila
      61.  00:A75D  00 C0 00 C0 00 C0 1A C0 18 C0 00 C0 00 C0 00 00 
      62.  00:A76D                      	
      63.  00:A76D                      habitaciones_nivel2:
      64.  00:A76D                      	db  00000000b,#C0,00000000b,#C0,00000000b,#00,00011010b,#00,00010000b,#C0,00000000b,#C0,00000000b,#C0,#00,#00 	;primera fila
      64.  00:A76D  00 C0 00 C0 00 00 1A 00 10 C0 00 C0 00 C0 00 00 
      65.  00:A77D                      	db  00000000b,#C0,00011100b,#C0,00011101b,#00,00011111b,#00,00011101b,#C0,00011001b,#C0,00000000b,#C0,#00,#00
      65.  00:A77D  00 C0 1C C0 1D 00 1F 00 1D C0 19 C0 00 C0 00 00 
      66.  00:A78D                      	db  00000000b,#C0,00011110b,#C0,00011111b,#00,00011111b,#00,00011111b,#C0,00011011b,#C0,00000000b,#C0,#00,#00
      66.  00:A78D  00 C0 1E C0 1F 00 1F 00 1F C0 1B C0 00 C0 00 00 
      67.  00:A79D                      	db  00000000b,#C0,00011010b,#C0,00011010b,#00,00010010b,#00,00011010b,#C0,00011010b,#C0,00000000b,#C0,#00,#00
      67.  00:A79D  00 C0 1A C0 1A 00 12 00 1A C0 1A C0 00 C0 00 00 
      68.  00:A7AD                      	db  00000000b,#C0,00011010b,#C0,00011110b,#C0,00010101b,#C0,00011011b,#C0,00011010b,#C0,00000000b,#C0,#00,#00
      68.  00:A7AD  00 C0 1A C0 1E C0 15 C0 1B C0 1A C0 00 C0 00 00 
      69.  00:A7BD                      	db  00000000b,#C0,00010110b,#C0,00010111b,#C0,00011101b,#C0,00010111b,#C0,00010011b,#C0,00000000b,#C0,#00,#00
      69.  00:A7BD  00 C0 16 C0 17 C0 1D C0 17 C0 13 C0 00 C0 00 00 
      70.  00:A7CD                      	db  00000000b,#C0,00000000b,#C0,00000000b,#C0,00011010b,#C0,00011000b,#C0,00000000b,#C0,00000000b,#C0,#00,#00	;última fila
      70.  00:A7CD  00 C0 00 C0 00 C0 1A C0 18 C0 00 C0 00 C0 00 00 
      71.  00:A7DD                      	
      72.  00:A7DD                      habitaciones_nivel3:
      73.  00:A7DD                      	db  00000000b,#C0,00000000b,#C0,00000000b,#00,00011010b,#00,00010000b,#C0,00000000b,#C0,00000000b,#C0,#00,#00 	;primera fila
      73.  00:A7DD  00 C0 00 C0 00 00 1A 00 10 C0 00 C0 00 C0 00 00 
      74.  00:A7ED                      	db  00000000b,#C0,00011100b,#C0,00011101b,#00,00011111b,#00,00011101b,#C0,00011001b,#C0,00000000b,#C0,#00,#00
      74.  00:A7ED  00 C0 1C C0 1D 00 1F 00 1D C0 19 C0 00 C0 00 00 
      75.  00:A7FD                      	db  00000000b,#C0,00011110b,#C0,00011111b,#00,00011111b,#00,00011111b,#C0,00011011b,#C0,00000000b,#C0,#00,#00
      75.  00:A7FD  00 C0 1E C0 1F 00 1F 00 1F C0 1B C0 00 C0 00 00 
      76.  00:A80D                      	db  00000000b,#C0,00011010b,#C0,00011010b,#00,00010010b,#00,00011010b,#C0,00011010b,#C0,00000000b,#C0,#00,#00
      76.  00:A80D  00 C0 1A C0 1A 00 12 00 1A C0 1A C0 00 C0 00 00 
      77.  00:A81D                      	db  00000000b,#C0,00011010b,#C0,00011110b,#C0,00010101b,#C0,00011011b,#C0,00011010b,#C0,00000000b,#C0,#00,#00
      77.  00:A81D  00 C0 1A C0 1E C0 15 C0 1B C0 1A C0 00 C0 00 00 
      78.  00:A82D                      	db  00000000b,#C0,00010110b,#C0,00010111b,#C0,00011101b,#C0,00010111b,#C0,00010011b,#C0,00000000b,#C0,#00,#00
      78.  00:A82D  00 C0 16 C0 17 C0 1D C0 17 C0 13 C0 00 C0 00 00 
      79.  00:A83D                      	db  00000000b,#C0,00000000b,#C0,00000000b,#C0,00011010b,#C0,00011000b,#C0,00000000b,#C0,00000000b,#C0,#00,#00	;última fila
      79.  00:A83D  00 C0 00 C0 00 C0 1A C0 18 C0 00 C0 00 C0 00 00 
      80.  00:A84D                      	
      81.  00:A84D                      habitaciones_nivel4:
      82.  00:A84D                      	db  00000000b,#C0,00000000b,#C0,00000000b,#00,00011010b,#00,00010000b,#C0,00000000b,#C0,00000000b,#C0,#00,#00 	;primera fila
      82.  00:A84D  00 C0 00 C0 00 00 1A 00 10 C0 00 C0 00 C0 00 00 
      83.  00:A85D                      	db  00000000b,#C0,00011100b,#C0,00011101b,#00,00011111b,#00,00011101b,#C0,00011001b,#C0,00000000b,#C0,#00,#00
      83.  00:A85D  00 C0 1C C0 1D 00 1F 00 1D C0 19 C0 00 C0 00 00 
      84.  00:A86D                      	db  00000000b,#C0,00011110b,#C0,00011111b,#00,00011111b,#00,00011111b,#C0,00011011b,#C0,00000000b,#C0,#00,#00
      84.  00:A86D  00 C0 1E C0 1F 00 1F 00 1F C0 1B C0 00 C0 00 00 
      85.  00:A87D                      	db  00000000b,#C0,00011010b,#C0,00011010b,#00,00010010b,#00,00011010b,#C0,00011010b,#C0,00000000b,#C0,#00,#00
      85.  00:A87D  00 C0 1A C0 1A 00 12 00 1A C0 1A C0 00 C0 00 00 
      86.  00:A88D                      	db  00000000b,#C0,00011010b,#C0,00011110b,#C0,00010101b,#C0,00011011b,#C0,00011010b,#C0,00000000b,#C0,#00,#00
      86.  00:A88D  00 C0 1A C0 1E C0 15 C0 1B C0 1A C0 00 C0 00 00 
      87.  00:A89D                      	db  00000000b,#C0,00010110b,#C0,00010111b,#C0,00011101b,#C0,00010111b,#C0,00010011b,#C0,00000000b,#C0,#00,#00
      87.  00:A89D  00 C0 16 C0 17 C0 1D C0 17 C0 13 C0 00 C0 00 00 
      88.  00:A8AD                      	db  00000000b,#C0,00000000b,#C0,00000000b,#C0,00011010b,#C0,00011000b,#C0,00000000b,#C0,00000000b,#C0,#00,#00	;última fila
      88.  00:A8AD  00 C0 00 C0 00 C0 1A C0 18 C0 00 C0 00 C0 00 00 
      89.  00:A8BD                      	
      90.  00:A8BD                      habitaciones_nivel5:
      91.  00:A8BD                      	db  00000000b,#C0,00000000b,#C0,00000000b,#00,00011010b,#00,00010000b,#C0,00000000b,#C0,00000000b,#C0,#00,#00 	;primera fila
      91.  00:A8BD  00 C0 00 C0 00 00 1A 00 10 C0 00 C0 00 C0 00 00 
      92.  00:A8CD                      	db  00000000b,#C0,00011100b,#C0,00011101b,#00,00011111b,#00,00011101b,#C0,00011001b,#C0,00000000b,#C0,#00,#00
      92.  00:A8CD  00 C0 1C C0 1D 00 1F 00 1D C0 19 C0 00 C0 00 00 
      93.  00:A8DD                      	db  00000000b,#C0,00011110b,#C0,00011111b,#00,00011111b,#00,00011111b,#C0,00011011b,#C0,00000000b,#C0,#00,#00
      93.  00:A8DD  00 C0 1E C0 1F 00 1F 00 1F C0 1B C0 00 C0 00 00 
      94.  00:A8ED                      	db  00000000b,#C0,00011010b,#C0,00011010b,#00,00010010b,#00,00011010b,#C0,00011010b,#C0,00000000b,#C0,#00,#00
      94.  00:A8ED  00 C0 1A C0 1A 00 12 00 1A C0 1A C0 00 C0 00 00 
      95.  00:A8FD                      	db  00000000b,#C0,00011010b,#C0,00011110b,#C0,00010101b,#C0,00011011b,#C0,00011010b,#C0,00000000b,#C0,#00,#00
      95.  00:A8FD  00 C0 1A C0 1E C0 15 C0 1B C0 1A C0 00 C0 00 00 
      96.  00:A90D                      	db  00000000b,#C0,00010110b,#C0,00010111b,#C0,00011101b,#C0,00010111b,#C0,00010011b,#C0,00000000b,#C0,#00,#00
      96.  00:A90D  00 C0 16 C0 17 C0 1D C0 17 C0 13 C0 00 C0 00 00 
      97.  00:A91D                      	db  00000000b,#C0,00000000b,#C0,00000000b,#C0,00011010b,#C0,00011000b,#C0,00000000b,#C0,00000000b,#C0,#00,#00	;última fila
      97.  00:A91D  00 C0 00 C0 00 C0 1A C0 18 C0 00 C0 00 C0 00 00 
      98.  00:A92D                      	
      99.  00:A92D                      habitaciones_nivel6:
     100.  00:A92D                      	db  00000000b,#C0,00000000b,#C0,00000000b,#00,00011010b,#00,00010000b,#C0,00000000b,#C0,00000000b,#C0,#00,#00 	;primera fila
     100.  00:A92D  00 C0 00 C0 00 00 1A 00 10 C0 00 C0 00 C0 00 00 
     101.  00:A93D                      	db  00000000b,#C0,00011100b,#C0,00011101b,#00,00011111b,#00,00011101b,#C0,00011001b,#C0,00000000b,#C0,#00,#00
     101.  00:A93D  00 C0 1C C0 1D 00 1F 00 1D C0 19 C0 00 C0 00 00 
     102.  00:A94D                      	db  00000000b,#C0,00011110b,#C0,00011111b,#00,00011111b,#00,00011111b,#C0,00011011b,#C0,00000000b,#C0,#00,#00
     102.  00:A94D  00 C0 1E C0 1F 00 1F 00 1F C0 1B C0 00 C0 00 00 
     103.  00:A95D                      	db  00000000b,#C0,00011010b,#C0,00011010b,#00,00010010b,#00,00011010b,#C0,00011010b,#C0,00000000b,#C0,#00,#00
     103.  00:A95D  00 C0 1A C0 1A 00 12 00 1A C0 1A C0 00 C0 00 00 
     104.  00:A96D                      	db  00000000b,#C0,00011010b,#C0,00011110b,#C0,00010101b,#C0,00011011b,#C0,00011010b,#C0,00000000b,#C0,#00,#00
     104.  00:A96D  00 C0 1A C0 1E C0 15 C0 1B C0 1A C0 00 C0 00 00 
     105.  00:A97D                      	db  00000000b,#C0,00010110b,#C0,00010111b,#C0,00011101b,#C0,00010111b,#C0,00010011b,#C0,00000000b,#C0,#00,#00
     105.  00:A97D  00 C0 16 C0 17 C0 1D C0 17 C0 13 C0 00 C0 00 00 
     106.  00:A98D                      	db  00000000b,#C0,00000000b,#C0,00000000b,#C0,00011010b,#C0,00011000b,#C0,00000000b,#C0,00000000b,#C0,#00,#00	;última fila
     106.  00:A98D  00 C0 00 C0 00 C0 1A C0 18 C0 00 C0 00 C0 00 00 
     107.  00:A99D                      
     108.  00:A99D                      
     199   00:A99D                      	
     200   00:A99D                      	include "variables.asm"
       1.  00:A99D                      ;;=====================================================
       2.  00:A99D                      ;;DEFINICIÓN DE VARIABLES
       3.  00:A99D                      ;;=====================================================
       4.  00:A99D                      
       5.  00:A99D                      ;Colores base de la pantalla
       6.  00:A99D                      color_base:
       7.  00:A99D  01 01 01            			DB		COLNEGRO,COLNEGRO,COLNEGRO	
       8.  00:A9A0                      ;colores de pantalla cuando se tira bomba
       9.  00:A9A0                      color_bomba1:
      10.  00:A9A0  08 08 08            			DB		COLROJO,COLROJO,COLROJO
      11.  00:A9A3                      color_bomba2:
      12.  00:A9A3  06 06 06            			DB		COLROJOOSC,COLROJOOSC,COLROJOOSC
      13.  00:A9A6                      
      14.  00:A9A6                      ;definicion de variable del prota usando la estructura del punto de mira
      15.  00:A9A6                      prota:		ESTRUCTURA_PUNTOMIRA
      15.  00:A9A6  78 6C 00 00 00 05 00 00 00 00 00 00 00 00 00 00 
      16.  00:A9B6                      ;variables globales del prota
      17.  00:A9B6                      prota_nivel:			;nivel del castillo donde está 0-6
      18.  00:A9B6  00                  			DB		0
      19.  00:A9B7                      prota_vidas:
      20.  00:A9B7  00                  			DB		0
      21.  00:A9B8                      prota_reliquias:
      22.  00:A9B8  03                  			DB		3
      23.  00:A9B9                      prota_pos_mapx:
      24.  00:A9B9  00                  			DB		0	;pos columna
      25.  00:A9BA                      prota_pos_mapy:
      26.  00:A9BA  00                  			DB		0	;pos fila
      27.  00:A9BB                      prota_energia:
      28.  00:A9BB  FA                  			DB		250
      29.  00:A9BC                      
      30.  00:A9BC                      ;array para pintar de golpe el marcador de vidas
      31.  00:A9BC                      array_aux_vidas: 		
      32.  00:A9BC                      			DB		0,0,0,0,0,0,0,0
      32.  00:A9BC  00 00 00 00 00 00 00 00 
      33.  00:A9C4                      
      34.  00:A9C4                      ;array para pintar de golpe el marcador de reliquias
      35.  00:A9C4                      array_aux_reliquias:	
      36.  00:A9C4                      			DB		0,0,0,0,0,0,0,0
      36.  00:A9C4  00 00 00 00 00 00 00 00 
      37.  00:A9CC                      
      38.  00:A9CC                      array_aux_energia:					;array para pintar de golpe el marcador de energía
      39.  00:A9CC                      			DB		16,0,0,0,0,0,0 	;el 16 primero es porque siempre estará pintado el cuadro primero rojo
      39.  00:A9CC  10 00 00 00 00 00 00 
      40.  00:A9D3                      ultimo_pos_array_aux_energia:
      41.  00:A9D3  00                  			DB		0				;el array completo es de 8 pero para posicionar sin niecesidad de cálculos  etiqueto este aparte
      42.  00:A9D4                      			
      43.  00:A9D4                      array_aux_mapa_limpiar:	;es por facilitar el reseteo del mapa (pinto 7 lineas en negro con bios) la otra opción es más larga en código y complicada aunque más rápida
      44.  00:A9D4                      			DB		0,0,0,0,0,0,0
      44.  00:A9D4  00 00 00 00 00 00 00 
      45.  00:A9DB                      elemento_pintar_mapa:
      46.  00:A9DB  00                  			DB		0	;TILEPROTAM = 19, ;TILEGRISM = 9
      47.  00:A9DC                      			
      48.  00:A9DC                      ;; nota importante: cada vez que se cambie de nivel se actualizará el contenido
      49.  00:A9DC                      
      50.  00:A9DC                      
      51.  00:A9DC                      
      52.  00:A9DC  00 (7)              antorchas:			DS		ESTRUCTURA_ANTORCHA
      53.  00:A9E3  C5 C6 C7            array_antorcha:				DB	197,198,199	;fuego + madera1 + madera2
      54.  00:A9E6                      
      55.  00:A9E6  00 (7)              esqueletos:			DS		ESTRUCTURA_ESQUELETO
      56.  00:A9ED                      array_esqueleto:			DB	194, 0, 195, 160, 164, 161, 0, 163, 0, 193, 162, 192
      56.  00:A9ED  C2 00 C3 A0 A4 A1 00 A3 00 C1 A2 C0 
      57.  00:A9F9  A4 A5 A4 A6         lista_escenas_calavera:		DB	164, 165, 164, 166
      58.  00:A9FD                      
      59.  00:A9FD                      
      60.  00:A9FD                      
      61.  00:A9FD                      
      62.  00:A9FD                      ;array de 4 bytes x 32 sprites posibles en pantalla que sobreescribirá la tabla de sprites actualizando VRAM
      63.  00:A9FD                      array_sprites:
      64.  00:A9FD  00 (8)              array_sprites_pm:				DS	2 * 4
      65.  00:AA05  00 (120)            array_sprites_enem:				DS	30 * 4
      66.  00:AA7D  00 (140)            lista_enemigos:					DS	10 * ESTRUCTURA_ENEMIGO
      67.  00:AB09                      ; puntero al array a pintar en VRAM
      68.  00:AB09  00 00               puntero_array_atrib_array_VRAM: DW	0	;ARRAYSPTRIES + 8
      69.  00:AB0B                      
      70.  00:AB0B                      
      71.  00:AB0B                      
      72.  00:AB0B                      
      73.  00:AB0B                      
     201   00:AB0B                      	
     202   00:AB0B                      ;;=====================================================
     203   00:AB0B                      ;;DEFINICIÓN DE PANTALLAS
     204   00:AB0B                      ;;=====================================================		
     205   00:AB0B                      	include "pantallas.asm"
       1.  00:AB0B                      ;;=====================================================
       2.  00:AB0B                      ;;DEFINICIÓN DE PANTALLAS
       3.  00:AB0B                      ;;=====================================================		
       4.  00:AB0B                      
       5.  00:AB0B                      ; bancos 1 y 2 y de pantalla 1 
       6.  00:AB0B                      ; se usa un banco común (en este caso el banco 1)
       7.  00:AB0B                      ; el mapa afecta al banco 1 y 2
       8.  00:AB0B  (022A)              tiles_patrones_nivel0:	incbin "pantallas/nivel0.bank1.til.bin.chr.plet5"
       9.  00:AD35  (006B)              tiles_color_nivel0:		incbin "pantallas/nivel0.bank1.til.bin.clr.plet5"
      10.  00:ADA0  (0035)              tiles_mapa_nivel0:		incbin "pantallas/nivel0.bank01.map.bin.plet5"
      11.  00:ADD5                      
      12.  00:ADD5  (01B5)              tiles_patrones_nivel1:	incbin "pantallas/nivel1.bank1.til.bin.chr.plet5"
      13.  00:AF8A  (0047)              tiles_color_nivel1:		incbin "pantallas/nivel1.bank1.til.bin.clr.plet5"
      14.  00:AFD1  (0035)              tiles_mapa_nivel1:		incbin "pantallas/nivel1.bank01.map.bin.plet5"
      15.  00:B006                      
      16.  00:B006  (01B5)              tiles_patrones_nivel2:	incbin "pantallas/nivel2.bank1.til.bin.chr.plet5"
      17.  00:B1BB  (0047)              tiles_color_nivel2:		incbin "pantallas/nivel2.bank1.til.bin.clr.plet5"
      18.  00:B202  (0035)              tiles_mapa_nivel2:		incbin "pantallas/nivel2.bank01.map.bin.plet5"
      19.  00:B237                      
      20.  00:B237  (01B5)              tiles_patrones_nivel3:	incbin "pantallas/nivel3.bank1.til.bin.chr.plet5"
      21.  00:B3EC  (0047)              tiles_color_nivel3:		incbin "pantallas/nivel3.bank1.til.bin.clr.plet5"
      22.  00:B433  (0035)              tiles_mapa_nivel3:		incbin "pantallas/nivel3.bank01.map.bin.plet5"
      23.  00:B468                      
      24.  00:B468  (01B5)              tiles_patrones_nivel4:	incbin "pantallas/nivel4.bank1.til.bin.chr.plet5"
      25.  00:B61D  (0047)              tiles_color_nivel4:		incbin "pantallas/nivel4.bank1.til.bin.clr.plet5"
      26.  00:B664  (0035)              tiles_mapa_nivel4:		incbin "pantallas/nivel4.bank01.map.bin.plet5"
      27.  00:B699                      
      28.  00:B699  (01B5)              tiles_patrones_nivel5:	incbin "pantallas/nivel5.bank1.til.bin.chr.plet5"
      29.  00:B84E  (0047)              tiles_color_nivel5:		incbin "pantallas/nivel5.bank1.til.bin.clr.plet5"
      30.  00:B895  (0035)              tiles_mapa_nivel5:		incbin "pantallas/nivel5.bank01.map.bin.plet5"
      31.  00:B8CA                      
      32.  00:B8CA  (01B5)              tiles_patrones_nivel6:	incbin "pantallas/nivel6.bank1.til.bin.chr.plet5"
      33.  00:BA7F  (0047)              tiles_color_nivel6:		incbin "pantallas/nivel6.bank1.til.bin.clr.plet5"
      34.  00:BAC6  (0035)              tiles_mapa_nivel6:		incbin "pantallas/nivel6.bank01.map.bin.plet5"
      35.  00:BAFB                      
      36.  00:BAFB                      ; 3º banco que es la parte de puntos, vidas, mapas, etc... es común
      37.  00:BAFB  (014C)              tiles_patrones_marcador:	incbin "pantallas/marcador.til.bin.chr.plet5"
      38.  00:BC47  (0035)              tiles_color_marcador:		incbin "pantallas/marcador.til.bin.clr.plet5"
      39.  00:BC7C  (0062)              tiles_mapa_marcador:		incbin "pantallas/marcador.map.bin.plet5"
      40.  00:BCDE                      
      41.  00:BCDE                      ;NOTA: FALTARÍAN PANTALLAS ESPECIALES (POR DEFINIR)
      42.  00:BCDE                      ; INICIO
      43.  00:BCDE                      ; GAME OVER
      44.  00:BCDE                      ; HUIDA
      45.  00:BCDE                      ; 2 FINAL BUENO
      46.  00:BCDE                      ; 1 FINAL MALO
     206   00:BCDE                      
     207   00:BCDE                      END:

    LABELS
-------------------------------------------------
00:000000D8 X GTTRIG
00:000000D5 X GTSTCK
00:0000F3DB   CLIKSW
00:0000013E X RDVDP
00:00000047   WRTVDP
00:0000005C   LDIRVM
00:00000059 X LDIRMV
00:0000005F   CHGMOD
00:00000041 X DISSCR
00:00000044 X ENASCR
00:00000062   CHGCLR
00:0000F3E9   FORCLR
00:0000F3EA   BAKCLR
00:0000F3EB   BDRCLR
00:000000C3   CLS
00:0000F3DF X RG0SAV
00:0000F3E0   RG1SAV
00:0000F3E1 X RG2SAV
00:0000F3E2 X RG3SAV
00:0000F3E3 X RG4SAV
00:0000F3E4 X RG5SAV
00:0000F3E5 X RG6SAV
00:0000F3E6 X RG7SAV
00:0000F3E7 X STATFL
00:00000099   REGEST
00:00000098   REGESCVDP
00:000000A0   PSG_A
00:000000A1   PSG_W
00:000000A2   PSG_R
00:00000000   CHRTBL
00:00001800   TILMAP
00:00001B00   SPRART
00:00002000   CLRTBL
00:00003800   SPRTBL
00:00000001   SI
00:00000000 X NO
00:00000004   LIMCADENCIA
00:00000000 X COLTRASP
00:00000001   COLNEGRO
00:00000002 X COLVERDE
00:00000003 X COLVERCLA
00:00000004 X COLAZULOSC
00:00000005 X COLAZULLA
00:00000006   COLROJOOSC
00:00000007 X COLCYAN
00:00000008   COLROJO
00:00000009 X COLROJOCLA
00:0000000A X COLAMAROSC
00:0000000B X COLAMARCLA
00:0000000C X COLVERDOSC
00:0000000D X COLMAGENTA
00:0000000E X COLGRIS
00:0000000F   COLBLANCO
00:000002F8   POSMAPLIN1
00:000002D8   POSMAPLIN2
00:000002B8   POSMAPLIN3
00:00000298   POSMAPLIN4
00:00000278   POSMAPLIN5
00:00000258   POSMAPLIN6
00:00000238   POSMAPLIN7
00:0000000D   POSCARAMAP
00:00000248   POSVIDAS
00:00000011   POSRELIMAP
00:000002C8   POSRELIQ
00:00000288   POSENERG
00:000002B4   POSNIVEL
00:00000238   POSMAPA
00:000001EE   POSPUERABAJ
00:0000008E   POSPUERARRI
00:000000FC   POSPUERDERE
00:000000E1   POSPUERIZQU
00:0000006C   POSESCALERA
00:00000146   POSORACION
00:000000A7 X POSCRUZ
00:000000AB X POSAGUA
00:000000AF X POSARMAD
00:000000B3 X POSPLANTA
00:000000B7 X POSVIDAEXT
00:000000BB X POSBALLESTA
00:00000020   POSORACIONX
00:00000040 X POSCRUZX
00:00000060 X POSAGUAX
00:00000080 X POSARMADX
00:000000A0 X POSPLANTAX
00:000000C0 X POSVIDAEXTX
00:000000E0 X POSBALLESTAX
00:00000002   ALTOAYUDA
00:00000002   ANCHOAYUDA
00:00000008   RADIOAYUDAX
00:00000008   RADIOAYUDAY
00:00000020   POSORACIONY
00:00000070 X POSAYUDASY
00:00000078 X POSXPM
00:0000006C X POSYPM
00:00000000   INACTIVA
00:00000001   ACTIVA
00:00000001   HABTERMIN
00:00000088   POSANTOR1
00:00000097   POSANTOR2
00:000000C4   MAPLLAMA1
00:000000C5   MAPLLAMA2
00:000000FF   RESETLLAMA
00:00000088   POSESQUEL1
00:00000095   POSESQUEL2
00:000000A9   POSCALAVE1
00:000000B6   POSCALAVE2
00:00000019   RESETESQUEL
00:00000004   RESETESCENAESQUEL
00:00000013   TILEPROTAM
00:00000009   TILEGRISM
00:00000010   TILEMAPROJO
00:0000000F   TILEMAPAMAR
00:0000000E   TILEMAPVERD
00:00000008   NMAXVIDREL
00:00000007   NHABNIVEL
00:000000F8 X MAXENERGIA
00:000000D9   TILEENERG8
00:000000BA   TILEENERG7
00:0000009B   TILEENERG6
00:0000007C   TILEENERG5
00:0000005D   TILEENERG4
00:0000003E   TILEENERG3
00:0000001F   TILEENERG2
00:00000000   TILENEGRO
00:00000000 X LIMPANTIZQ
00:000000FF   LIMPANTDER
00:00000000 X LIMPANTARR
00:00000080   LIMPANTABA
00:00000006 X BASEMAPY
00:00000003 X BASEMAPX
00:0000FD9A X H.KEYI
00:0000FD9F   H.TIMI
00:0000F000   PT3_SETUP
00:0000F001   PT3_MODADDR
00:0000F003   PT3_CrPsPtr
00:0000F005   PT3_SAMPTRS
00:0000F007   PT3_OrnPtrs
00:0000F009   PT3_PDSP
00:0000F00B   PT3_CSP
00:0000F00D   PT3_PSP
00:0000F00F   PT3_PrNote
00:0000F010   PT3_PrSlide
00:0000F012   PT3_AdInPtA
00:0000F014   PT3_AdInPtB
00:0000F016   PT3_AdInPtC
00:0000F018   PT3_LPosPtr
00:0000F01A   PT3_PatsPtr
00:0000F01C   PT3_Delay
00:0000F01D   PT3_AddToEn
00:0000F01E   PT3_Env_Del
00:0000F01F   PT3_ESldAdd
00:0000F021   PT3_NTL3
00:0000F023   VARS
00:0000F023   ChanA
00:0000F040   ChanB
00:0000F05D   ChanC
00:0000F07A   DelyCnt
00:0000F07B   CurESld
00:0000F07D   CurEDel
00:0000F07E   Ns_Base_AddToNs
00:0000F07E   Ns_Base
00:0000F07F   AddToNs
00:0000F080   NT_
00:0000F140   AYREGS
00:0000F140   VT_
00:0000F14E   EnvBase
00:0000F150   VAR0END
00:0000F150   T1_
00:0000F150   T_NEW_1
00:0000F150   T_OLD_1
00:0000F168   T_OLD_2
00:0000F180   T_NEW_3
00:0000F180   T_OLD_3
00:0000F182   T_OLD_0
00:0000F182   T_NEW_0
00:0000F19A   T_NEW_2
00:0000F240   ayFX_MODE
00:0000F241   ayFX_BANK
00:0000F243   ayFX_PRIORITY
00:0000F244   ayFX_POINTER
00:0000F246   ayFX_TONE
00:0000F248   ayFX_NOISE
00:0000F249   ayFX_VOLUME
00:0000F24A   ayFX_CHANNEL
00:00008000   START
00:00008038   loop_principal
00:00008048 X fin_programa_principal
00:00008048   check_colisiones_objetos
00:00008057   check_colisiones_objetos.habitacion_no_terminada
00:00008057   fin_check_colisiones_objetos
00:00008059   inicializa_variables_pruebas
00:0000807E X fin_inicializa_variables_pruebas
00:0000807F X inicializa_niveles
00:00008087   inicializa_niveles.inicia_nivel_0
00:00008094   inicializa_niveles.inicia_nivel_1
00:000080A1   inicializa_niveles.inicia_nivel_2
00:000080AE   inicializa_niveles.inicia_nivel_3
00:000080BB   inicializa_niveles.inicia_nivel_4
00:000080C8   inicializa_niveles.inicia_nivel_5
00:000080D5   inicializa_niveles.inicia_nivel_6
00:000080E0 X fin_iniciliza_niveles
00:000080E1   actualiza_marcador_vidas
00:000080E6   loop_marcador_caras_negro
00:000080EB X fin_loop_marcador_caras_negro
00:000080F4   loop_marcador_caras
00:000080F9 X fin_loop_marcador_caras
00:000080F9 X fin_actualiza_marcador_vidas
00:000080FA   actualiza_buffer_reliquias
00:00008100   loop_buffer_reliquias_negro
00:0000810D   loop_buffer_reliquias
00:00008112 X fin_actualiza_buffer_reliquias
00:00008113   localiza_info_habitacion
00:00008116 X localiza_info_habitacion.situo_columna
00:0000811F X localiza_info_habitacion.situo_fila
00:00008128   localiza_info_habitacion.loop_suma_fila
00:00008130   localiza_info_habitacion.situo_nivel
00:0000813F   localiza_info_habitacion.loop_suma_nivel
00:00008144   localiza_info_habitacion.actualiza_variable_habitacion
00:00008167 X fin_localiza_info_habitacion
00:00008168   terminada_habitacion_recorrida
00:0000817C X fin_terminada_habitacion_recorrida
00:0000817D   entra_habitacion
00:0000818C X fin_entra_habitacion
00:0000818C   pinta_heroe_mapa
00:00008194 X fin_pinta_heroe_mapa
00:00008194   pinta_blanco_mapa
00:0000819C X fin_pinta_blanco_mapa
00:0000819C   cambio_nivel
00:000081A2 X fin_cabio_nivel
00:000081A3   suma_A_BC
00:000081A8 X fin_suma_A_BC
00:000081A9   suma_A_HL
00:000081AE X fin_suma_A_HL
00:000081AF X test_OK
00:000081C2 X fin_test_OK
00:000081C3   color_pantalla
00:000081D4 X fin_color_pantalla
00:000081D4   sub_preparapantalla
00:000081D4 X elimina_clic
00:000081D8 X fin_elimina_clic
00:000081D8 X limpia_pantalla
00:000081DC X fin_limpia_pantalla
00:000081E2 X screen2
00:000081E7 X sprites_16_16
00:000081F5 X fin_sub_preparapantalla
00:000081F5   pinta_pantalla_completa
00:000081FB X fin_pinta_pantalla_completa
00:000081FC   pinta_parte_superior_pantalla
00:0000822D   pinta_parte_superior_pantalla.carga_nivel_0
00:00008248   pinta_parte_superior_pantalla.carga_nivel_1
00:00008263   pinta_parte_superior_pantalla.carga_nivel_2
00:0000827E   pinta_parte_superior_pantalla.carga_nivel_3
00:00008299   pinta_parte_superior_pantalla.carga_nivel_4
00:000082B4   pinta_parte_superior_pantalla.carga_nivel_5
00:000082CF   pinta_parte_superior_pantalla.carga_nivel_6
00:000082E7   pinta_parte_superior_pantalla.fin_carga_niveles
00:00008314 X fin_pinta_parte_superior_pantalla
00:00008314   tiles_patrones
00:00008316   tiles_colores
00:00008318   tiles_mapa
00:0000831A   pinta_parte_inferior_pantalla
00:00008335 X fin_pinta_parte_inferior_pantalla
00:00008335   pinta_vidas
00:00008344 X fin_pinta_vidas
00:00008344   pinta_reliquias
00:00008353 X fin_pinta_reliquias
00:00008353   pinta_nivel
00:0000835F X fin_pinta_nivel
00:0000835F   pinta_tile_suelto
00:0000836C X fin_pinta_tile_suelto
00:0000836D   mira_pinta_energia
00:00008373 X pinta_ener
00:00008373 X pinta_ener_tile_8
00:0000837F   pinta_ener_tile_8_negro
00:00008380   pinta_ener_tile_7
00:0000838A   pinta_ener_tile_7_negro
00:0000838B   pinta_ener_tile_6
00:00008395   pinta_ener_tile_6_negro
00:00008396   pinta_ener_tile_5
00:000083A0   pinta_ener_tile_5_negro
00:000083A1   pinta_ener_tile_4
00:000083AB   pinta_ener_tile_4_negro
00:000083AC   pinta_ener_tile_3
00:000083B6   pinta_ener_tile_3_negro
00:000083B7   pinta_ener_tile_2
00:000083C1   pinta_ener_tile_2_negro
00:000083C2   fin_mira_pinta_energia
00:000083C4   pinta_energia
00:000083D3 X fin_pinta_energia
00:000083D3   borra_mapa
00:00008429 X fin_borra_mapa
00:0000842A   posiciona_en_mapa
00:0000842D X posiciona_en_mapa.sumar_fila
00:00008457 X posiciona_en_mapa.fila_0
00:0000845E   posiciona_en_mapa.fila_1
00:00008465   posiciona_en_mapa.fila_2
00:0000846C   posiciona_en_mapa.fila_3
00:00008473   posiciona_en_mapa.fila_4
00:0000847A   posiciona_en_mapa.fila_5
00:00008481 X posiciona_en_mapa.fila_6
00:00008481   posiciona_en_mapa.sumar_columna
00:00008497   pinta_pos_mapa_vacio
00:00008499   fin_pinta_pos_mapa
00:0000849C X fin_posiciona_en_mapa
00:0000849C   efecto_imagen_tira_reliquia
00:0000849F   efecto_imagen_tira_reliquia.parpadea_fondo
00:000084B6 X fin_efecto_imagen_tira_reliquia
00:000084B6   pinta_array
00:000084D1   pinta_array.pa_pinta_fila
00:000084D2   pinta_array.pa_pinta_columnas
00:000084F5 X fin_pinta_array
00:000084F6   wordaux1
00:000084F8   wordaux2
00:000084FA   byteaux1
00:000084FB   byteaux2
00:000084FC   inicializa_antorchas
00:0000851D X fin_inicializa_antorchas
00:0000851E   inicializa_esqueletos
00:0000853F X fin_inicializa_esqueletos
00:00008540   pinta_extra_fondo
00:00008544 X pinta_extra_fondo.examina_sihay_antorchas
00:00008553   pinta_extra_fondo.hayantorchas
00:0000857C   pinta_extra_fondo.examina_sihay_esqueletos
00:0000858D   pinta_extra_fondo.hayesqueletos
00:000085B6 X fin_pinta_extra_fondo
00:000085B7   actualiza_elementos_fondo
00:000085B7 X actualiza_elementos_fondo.examina_antorchas
00:000085C5   actualiza_elementos_fondo.examina_esqueletos
00:000085D1 X fin_actualiza_elementos_fondo
00:000085D1   flip_llamas_antorchas
00:000085EA X flip_llamas_antorchas.llama_impar
00:0000860B   flip_llamas_antorchas.llama_par
00:0000862A   fin_flip_llamas_antorchas
00:0000862E   flip_calavera_esqueletos
00:0000865B X fin_flip_calavera_esqueletos
00:0000865B   var_aux_calavera
00:0000865C   actualiza_escena_calavera
00:00008668   actualiza_escena_calavera.decrementa_escenas
00:00008669 X actualiza_escena_calavera.fin_consulta_escena
00:00008677 X fin_actualiza_escena_calavera
00:00008678   array_puerta_arriba
00:0000868C   array_puerta_derecha
00:000086A1   array_puerta_abajo
00:000086A5   array_puerta_izquierda
00:000086BA   array_escalera
00:000086EA X lista_puertas
00:000086EA   puerta_arriba
00:000086F7   puerta_derecha
00:00008704   puerta_abajo
00:00008711   puerta_izquierda
00:0000871E   puerta_escalera
00:0000872B X datos_puertas
00:0000872B   datos_puerta_escalera
00:00008738   datos_puerta_arriba
00:00008745   datos_puerta_derecha
00:00008752   datos_puerta_abajo
00:0000875F   datos_puerta_izquierda
00:0000876C   inicializa_puertas
00:0000879F X fin_inicializa_puertas
00:000087A0   carga_datos_puerta
00:000087A5 X fin_carga_datos_puerta
00:000087A6   accion_puerta_arriba
00:000087B2 X accion_puerta_arriba.si_cambia_nivel
00:000087C3   accion_puerta_arriba.no_cambia_nivel
00:000087C6   accion_puerta_arriba.fin_cambia_nivel
00:000087C9 X fin_accion_puerta_arriba
00:000087C9   accion_puerta_derecha
00:000087D6 X fin_accion_puerta_derecha
00:000087D6   accion_puerta_abajo
00:000087E1 X accion_puerta_abajo.si_cambia_nivel
00:000087F3   accion_puerta_abajo.no_cambia_nivel
00:000087F6   accion_puerta_abajo.fin_cambia_nivel
00:000087F9 X fin_accion_puerta_abajo
00:000087F9   accion_puerta_izquierda
00:00008806 X fin_accion_puerta_izquierda
00:00008806   pinta_puertas
00:0000881F   pinta_puertas.fin_puerta_arriba
00:00008832   pinta_puertas.fin_puerta_derecha
00:00008845   pinta_puertas.fin_puerta_abajo
00:00008858   fin_pinta_puertas
00:00008859   pinta_puerta_aba
00:00008863 X fin_pinta_puerta_aba
00:00008863   pinta_puerta_arr
00:0000886B X pinta_puerta_arr.pinta_puerta_escalera
00:00008872   pinta_puerta_arr.pinta_puerta_normal
00:00008876   pinta_puerta_arr.fin_si
00:0000887C X fin_pinta_puerta_arr
00:0000887C   pinta_puerta_der
00:00008886 X fin_pinta_puerta_der
00:00008886   pinta_puerta_izq
00:00008890 X fin_pinta_puerta_izq
00:00008890   actualiza_variables_pinta_array
00:000088AE X fin_actualiza_variables_pinta_array
00:000088AF   check_colisiones_puertas
00:000088AF X check_colisiones_puertas.examina_puerta_arriba
00:000088C5   check_colisiones_puertas.examina_puerta_derecha
00:000088DB   check_colisiones_puertas.examina_puerta_abajo
00:000088F1   check_colisiones_puertas.examina_puerta_izquierda
00:00008902   check_colisiones_puertas.ejecuta_accion_y_sale
00:0000890D   fin_check_colisiones_puertas
00:0000890E   check_colision_puerta
00:0000890E X check_colision_puerta.deteccioncolision_paso1
00:0000891F   check_colision_puerta.deteccioncolision_paso2
00:00008927   check_colision_puerta.deteccioncolision_paso3
00:00008934   check_colision_puerta.deteccioncolision_paso4
00:0000893C   check_colision_puerta.deteccioncolision_paso5
00:0000893E X fin_check_colision_puerta
00:0000893F   desactiva_todas_puertas
00:0000895F X fin_desactiva_todas_puertas
00:00008960   carga_patrones_sprites_nivel
00:00008964 X fin_carga_patrones_sprites_nivel
00:00008964   carga_patrones_nivel_comunes
00:00008970 X fin_carga_patrones_nivel_comunes
00:00008970 X carga_patrones_sprites_nivel1
00:00008970 X fin_carga_patrones_sprites
00:00008971   render_sprites
00:0000897D X fin_actualiza_array_sprites_vram
00:0000897D   vuelca_resultado_puntomira_array
00:000089A2 X vuelca_resultado_puntomira_array.codigo_color_1
00:000089AB   vuelca_resultado_puntomira_array.codigo_color_2
00:000089B4 X fin_vuelca_resultado_puntomira_array
00:000089B4   check_player
00:000089D3 X f
00:000089D4   mueve_arriba
00:000089DF   mueve_arriba.no_decrementa_y
00:000089E0 X fin_mueve_arriba
00:000089E1   mueve_derecha
00:000089EE   mueve_derecha.no_incrementa_x
00:000089EF X fin_mueve_derecha
00:000089F0   mueve_abajo
00:000089FD   mueve_abajo.no_incrementa_y
00:000089FE X fin_mueve_abajo
00:000089FF   mueve_izquierda
00:00008A0A   mueve_izquierda.no_decrementa_x
00:00008A0B X fin_mueve_izquierda
00:00008A0C   mira_disparo
00:00008A0C X mira_disparo.mira_boton_pulsado1
00:00008A19 X mira_disparo.no_efectua_disparo
00:00008A24   mira_disparo.efectua_disparo
00:00008A39   mira_disparo.fin_mira_disparo1
00:00008A3A   mira_disparo.mira_boton_pulsado2
00:00008A56 X fin_mira_disparo
00:00008A56   update_controllers_status
00:00008A8D   read_joy_0
00:00008AA1   check_8th_keyboard_row
00:00008AAF   check_4th_keyboard_row
00:00008ABD X inicializa_replayer_efectos_interrupciones
00:00008AD6 X fin_inicializa_replayer_efectos_interrupciones
00:00008AD7   subrutina_isr
00:00008AE0 X fin_subrutina_isr
00:00008AE0 X subrutinas_sonido
00:00000000   CHNPRM_PsInOr
00:00000001   CHNPRM_PsInSm
00:00000002   CHNPRM_CrAmSl
00:00000003   CHNPRM_CrNsSl
00:00000004   CHNPRM_CrEnSl
00:00000005   CHNPRM_TSlCnt
00:00000006   CHNPRM_CrTnSl
00:00000008   CHNPRM_TnAcc
00:0000000A   CHNPRM_COnOff
00:0000000B   CHNPRM_OnOffD
00:0000000C   CHNPRM_OffOnD
00:0000000D   CHNPRM_OrnPtr
00:0000000F   CHNPRM_SamPtr
00:00000011   CHNPRM_NNtSkp
00:00000012   CHNPRM_Note
00:00000013   CHNPRM_SlToNt
00:00000014   CHNPRM_Env_En
00:00000015   CHNPRM_Flags
00:00000016   CHNPRM_TnSlDl
00:00000017   CHNPRM_TSlStp
00:00000019   CHNPRM_TnDelt
00:0000001B   CHNPRM_NtSkCn
00:0000001C   CHNPRM_Volume
00:0000001D X CHNPRM_Size
00:00000000   AR_TonA
00:00000002   AR_TonB
00:00000004   AR_TonC
00:00000006   AR_Noise
00:00000007   AR_Mixer
00:00000008   AR_AmplA
00:00000009   AR_AmplB
00:0000000A   AR_AmplC
00:0000000B   AR_Env
00:0000000D   AR_EnvTp
00:00008AE0   CHECKLP
00:00008AF1 X PT3_MUTE
00:00008AFD   PT3_INIT
00:00008B3C   PT3_INIT.TP_0
00:00008B48   PT3_INIT.TP_1
00:00008B4F   PT3_INIT.TP_2
00:00008BBD   PT3_INIT.L1
00:00008BCA   PT3_INIT.L2
00:00008BCE X PT3_INIT.L3
00:00008BF5   PT3_INIT.CORR_1
00:00008C03   PT3_INIT.CORR_2
00:00008C0A   PT3_INIT.TC_EXIT
00:00008C15   PT3_INIT.INITV1
00:00008C1D   PT3_INIT.INITV2
00:00008C31   PT3_INIT.INITV3
00:00008C35   PD_OrSm
00:00008C3F   PD_SAM
00:00008C40   PD_SAM_
00:00008C56   PD_VOL
00:00008C5F   PD_EOff
00:00008C67   PD_SorE
00:00008C71   PD_ENV
00:00008C76   PD_ORN
00:00008C7B   PD_ESAM
00:00008C88   PTDECOD
00:00008C97   PD_LOOP
00:00008C9A   PD_LP2
00:00008CC7   PD_NOIS
00:00008CCC   PD_REL
00:00008CD2   PD_NOTE
00:00008CDA   PD_RES
00:00008CEC   PD_FIN
00:00008CF3   C_PORTM
00:00008D3E   C_PORTM.NOSIG
00:00008D48   SET_STP
00:00008D54   C_GLISS
00:00008D67   C_SMPOS
00:00008D6D   C_ORPOS
00:00008D73   C_VIBRT
00:00008D8B   C_ENGLS
00:00008D9D   C_DELAY
00:00008DA3   SETENV
00:00008DBE   C_NOP
00:00008DBF   SETORN
00:00008DD8   SPCCOMS
00:00008DF8   CHREGS
00:00008E1B   CHREGS.CH_ORPS
00:00008E26   CHREGS.CH_NTP
00:00008E2C   CHREGS.CH_NOK
00:00008E47   CHREGS.CH_SMPS
00:00008E5D   CHREGS.CH_NOAC
00:00008EA4   CHREGS.CH_STPP
00:00008EB9   CHREGS.CH_AMP
00:00008ECB   CHREGS.CH_AMIN
00:00008ED0   CHREGS.CH_SVAM
00:00008ED3   CHREGS.CH_NOAM
00:00008EDC   CHREGS.CH_APOS
00:00008EE2   CHREGS.CH_VOL
00:00008EED X CHREGS.CH_ENV
00:00008EF4   CHREGS.CH_NOEN
00:00008F0E   CHREGS.NO_ENAC
00:00008F15   CHREGS.NO_ENSL
00:00008F23   CHREGS.CH_MIX
00:00008F27   CHREGS.CH_EXIT
00:00008F46   CHREGS.CH_ONDL
00:00008F4A   PT3_PLAY
00:00008F7E   PT3_PLAY.PLNLP
00:00008FA5   PT3_PLAY.PL1A
00:00008FB0   PT3_PLAY.PL1B
00:00008FC5   PT3_PLAY.PL1C
00:00008FDA   PT3_PLAY.PL1D
00:00008FE0   PT3_PLAY.PL2
00:00009042   PT3_ROUT
00:00009043   ROUT_A0
00:0000904F   ROUT_A0.LOUT
00:00009063   NT_DATA
00:00009073   T_
00:00009073   TCOLD_0
00:0000907F   TCNEW_1
00:0000907F   TCOLD_1
00:00009081   TCOLD_2
00:00009093   TCNEW_3
00:00009094   TCOLD_3
00:0000909D   TCNEW_0
00:000090A8   TCNEW_2
00:000090B3   EMPTYSAMORN
00:000090B7   T_PACK
00:00000000 X AYFXRELATIVE
00:000090EC   ayFX_SETUP
00:000090F8   ayFX_END
00:000090FE   ayFX_INIT
00:0000910F   ayFX_INIT.CHECK_PRI
00:00009130   ayFX_INIT.INIT_END
00:00009134   ayFX_PLAY
00:00009148   ayFX_PLAY.TAKECB
00:00009159   ayFX_PLAY.CHECK_NN
00:00009166   ayFX_PLAY.SETPOINTER
00:0000917A   ayFX_PLAY.SETMASKS
00:00009188 X ayFX_PLAY.CHK1
00:0000918A X ayFX_PLAY.PLAY_C
00:00009197   ayFX_PLAY.CHK2
00:0000919C X ayFX_PLAY.PLAY_B
00:000091A9   ayFX_PLAY.CHK3
00:000091AC X ayFX_PLAY.PLAY_A
00:000091B9   ayFX_PLAY.SETMIXER
00:000091C9   song
00:00009B31   sfx_bank
00:00009B7C X array_ayudas
00:00009B7C   array_oracionon
00:00009B7E X array_oracionon1
00:00009B80   array_oracionoff
00:00009B82 X array_oracionoff1
00:00009B84 X array_cruzon
00:00009B86 X array_cruzon1
00:00009B88 X array_cruzoff
00:00009B8A X array_cruzoff1
00:00009B8C X array_aguaon
00:00009B8E X array_aguaon1
00:00009B90 X array_aguaoff
00:00009B92 X array_aguaoff1
00:00009B94 X array_armaduraon
00:00009B96 X array_armaduraon1
00:00009B98 X array_armaduraoff
00:00009B9A X array_armaduraoff1
00:00009B9C X array_plantaon
00:00009B9E X array_plantaon1
00:00009BA0 X array_plantaoff
00:00009BA2 X array_plantaoff1
00:00009BA4 X array_extraon
00:00009BA6 X array_extraon1
00:00009BA8 X array_extraoff
00:00009BAA X array_extraoff1
00:00009BAC X array_ballestaon
00:00009BAE X array_ballestaon1
00:00009BB0 X array_ballestaoff
00:00009BB2 X array_ballestaoff1
00:00009BB4 X lista_ayudas
00:00009BB4   ayuda_oracion
00:00009BC3   datos_oracion
00:00009BD2   inicializa_ayudas
00:00009BDB X fin_inicializa_ayudas
00:00009BDC   carga_datos_ayuda
00:00009BE1 X fin_carga_datos_ayuda
00:00009BE2   pinta_obj_ayuda
00:00009BE6 X pinta_obj_ayuda.dibujoon
00:00009BF2   pinta_obj_ayuda.dibujooff
00:00009BFB   pinta_obj_ayuda.param_wordaux2
00:00009C04 X pinta_obj_ayuda.filasycols
00:00009C0F X fin_pinta_obj_ayuda
00:00009C0F   pinta_ayudas_habitacion
00:00009C0F X pinta_ayudas_habitacion.examina_oracion
00:00009C20   fin_pinta_ayudas_habitacion
00:00009C21   accion_oracion
00:00009C21 X fin_accion_oracion
00:00009C22 X accion_cruz
00:00009C22 X fin_accion_cruz
00:00009C23 X accion_agua
00:00009C23 X fin_accion_agua
00:00009C24 X accion_armadura
00:00009C24 X fin_accion_armadura
00:00009C25 X accion_planta
00:00009C25 X fin_accion_planta
00:00009C26 X accion_vidaextra
00:00009C26 X fin_accion_vidaextra
00:00009C27 X accion_ballesta
00:00009C27 X fin_accion_ballesta
00:00009C28   depack_VRAM
00:00009C55   literal
00:00009C5A   loop
00:00009C63 X getlen
00:00009C69   lus
00:00009C86   lenok
00:00009C93   mode7
00:00009C99   mode6
00:00009C9F   mode5
00:00009CA5   mode4
00:00009CAB   mode3
00:00009CB1   mode2
00:00009CC1   offsok
00:00009CCC   offsok.loop
00:00009CEE   getbit
00:00009CF2   getbitexx
00:00009CF8   Depack_out
00:00009CFA   modes
00:00000000   ESTRUCTURA_PUNTOMIRA.posx
00:00000001   ESTRUCTURA_PUNTOMIRA.posy
00:00000002 X ESTRUCTURA_PUNTOMIRA.escena
00:00000003 X ESTRUCTURA_PUNTOMIRA.velocidad
00:00000004 X ESTRUCTURA_PUNTOMIRA.boton2_pressed
00:00000005 X ESTRUCTURA_PUNTOMIRA.cadencia
00:00000006 X ESTRUCTURA_PUNTOMIRA.pm_aux1
00:00000007 X ESTRUCTURA_PUNTOMIRA.pm_aux2
00:00000008 X ESTRUCTURA_PUNTOMIRA.pm_aux3
00:00000009 X ESTRUCTURA_PUNTOMIRA.pm_aux4
00:0000000A X ESTRUCTURA_PUNTOMIRA.pm_aux5
00:0000000B X ESTRUCTURA_PUNTOMIRA.pm_aux6
00:0000000C X ESTRUCTURA_PUNTOMIRA.pm_aux7
00:0000000D X ESTRUCTURA_PUNTOMIRA.pm_aux8
00:0000000E X ESTRUCTURA_PUNTOMIRA.pm_aux9
00:0000000F X ESTRUCTURA_PUNTOMIRA.pm_aux10
00:00000010 X ESTRUCTURA_PUNTOMIRA
00:00000000 X ESTRUCTURA_ANTORCHA.activo
00:00000001 X ESTRUCTURA_ANTORCHA.postilemem_antor1
00:00000003 X ESTRUCTURA_ANTORCHA.pospantalla_antor1
00:00000004 X ESTRUCTURA_ANTORCHA.pospantalla_antor2
00:00000005 X ESTRUCTURA_ANTORCHA.escena
00:00000006 X ESTRUCTURA_ANTORCHA.cont_sig_escena
00:00000007   ESTRUCTURA_ANTORCHA
00:00000000 X ESTRUCTURA_ESQUELETO.activo
00:00000001 X ESTRUCTURA_ESQUELETO.postilemem_antor1
00:00000003 X ESTRUCTURA_ESQUELETO.pospantalla_esquel1
00:00000004 X ESTRUCTURA_ESQUELETO.pospantalla_esquel2
00:00000005   ESTRUCTURA_ESQUELETO.escena
00:00000006   ESTRUCTURA_ESQUELETO.cont_sig_escena
00:00000007   ESTRUCTURA_ESQUELETO
00:00000000 X ESTRUCTURA_ENEMIGO.tipo
00:00000001 X ESTRUCTURA_ENEMIGO.posx
00:00000002 X ESTRUCTURA_ENEMIGO.posy
00:00000003 X ESTRUCTURA_ENEMIGO.color
00:00000004 X ESTRUCTURA_ENEMIGO.escena
00:00000005 X ESTRUCTURA_ENEMIGO.contador_siguiente_escena
00:00000006 X ESTRUCTURA_ENEMIGO.reset_contador
00:00000007 X ESTRUCTURA_ENEMIGO.dano
00:00000008 X ESTRUCTURA_ENEMIGO.energia
00:00000009 X ESTRUCTURA_ENEMIGO.ver_hor
00:0000000A X ESTRUCTURA_ENEMIGO.manejador_dibujo
00:0000000C X ESTRUCTURA_ENEMIGO.en_aux3
00:0000000D X ESTRUCTURA_ENEMIGO.en_aux4
00:0000000E   ESTRUCTURA_ENEMIGO
00:00000000 X ESTRUCTURA_AYUDA.activa
00:00000001 X ESTRUCTURA_AYUDA.posx
00:00000002 X ESTRUCTURA_AYUDA.posy
00:00000003 X ESTRUCTURA_AYUDA.radiox
00:00000004 X ESTRUCTURA_AYUDA.radioy
00:00000005 X ESTRUCTURA_AYUDA.accion
00:00000007   ESTRUCTURA_AYUDA.tiles_ayudaon
00:00000009   ESTRUCTURA_AYUDA.tiles_ayudaoff
00:0000000B   ESTRUCTURA_AYUDA.pos_en_tilemap
00:0000000D X ESTRUCTURA_AYUDA.alto
00:0000000E X ESTRUCTURA_AYUDA.ancho
00:0000000F   ESTRUCTURA_AYUDA
00:00000000 X ESTRUCTURA_PUERTA.activa
00:00000001   ESTRUCTURA_PUERTA.posx
00:00000002   ESTRUCTURA_PUERTA.posy
00:00000003   ESTRUCTURA_PUERTA.radiox
00:00000004   ESTRUCTURA_PUERTA.radioy
00:00000005   ESTRUCTURA_PUERTA.accion
00:00000007   ESTRUCTURA_PUERTA.tiles_puerta
00:00000009   ESTRUCTURA_PUERTA.pos_en_tilemap
00:0000000B   ESTRUCTURA_PUERTA.alto
00:0000000C   ESTRUCTURA_PUERTA.ancho
00:0000000D   ESTRUCTURA_PUERTA
00:00009D08 X sprites_pantantalla
00:00009D08   sprites_comunes
00:00009D08 X sprite_punto_mira_1
00:00009D28 X sprite_punto_mira_2
00:00009D48 X sprite_punto_mira_1_mejorado
00:00009D68 X sprite_punto_mira_2_mejorado
00:00009D88 X sprite_explosion_1
00:00009DA8 X sprite_explosion_2
00:00009DC8   fin_sprites_comunes
00:00009DC8 X sprite_arana1_1
00:00009DE8 X sprite_arana1_2
00:00009E08 X sprite_murcielago1_1
00:00009E28 X sprite_murcielago1_2
00:00009E48 X sprite_serpiente1_1
00:00009E68 X sprite_serpiente1_2
00:00009E88 X sprite_serpiente2_1
00:00009EA8 X sprite_serpiente2_2
00:00009EC8 X sprite_zombi1_1_1
00:00009EE8 X sprite_zombi1_2_1
00:00009F08 X sprite_zombi1_3_1
00:00009F28 X sprite_zombi1_4_1
00:00009F48 X sprite_zombi1_1_2
00:00009F68 X sprite_zombi1_2_2
00:00009F88 X sprite_zombi1_3_2
00:00009FA8 X sprite_zombi1_4_2
00:00009FC8 X sprite_zombi2_1_1
00:00009FE8 X sprite_zombi2_2_1
00:0000A008 X sprite_zombi2_3_1
00:0000A028 X sprite_zombi2_4_1
00:0000A048 X sprite_zombi2_1_2
00:0000A068 X sprite_zombi2_2_2
00:0000A088 X sprite_zombi2_3_2
00:0000A0A8 X sprite_zombi2_4_2
00:0000A0C8 X sprite_caballero1_1_1
00:0000A0E8 X sprite_caballero1_2_1
00:0000A108 X sprite_caballero1_3_1
00:0000A128 X sprite_caballero1_4_1
00:0000A148 X sprite_caballero1_1_2
00:0000A168 X sprite_caballero1_2_2
00:0000A188 X sprite_caballero1_3_2
00:0000A1A8 X sprite_caballero1_4_2
00:0000A1C8 X sprite_caballero2_1_1
00:0000A1E8 X sprite_caballero2_2_1
00:0000A208 X sprite_caballero2_3_1
00:0000A228 X sprite_caballero2_4_1
00:0000A248 X sprite_caballero2_1_2
00:0000A268 X sprite_caballero2_2_2
00:0000A288 X sprite_caballero2_3_2
00:0000A2A8 X sprite_caballero2_4_2
00:0000A2C8 X sprite_llama1_1
00:0000A2E8 X sprite_llama2_1
00:0000A308 X sprite_llama1_2
00:0000A328 X sprite_llama2_2
00:0000A348 X sprite_fantasma1_1
00:0000A368 X sprite_fantasma2_1
00:0000A388 X sprite_fantasma1_2
00:0000A3A8 X sprite_fantasma2_2
00:0000A3C8 X sprite_magia1_1
00:0000A3E8 X sprite_magia2_1
00:0000A408 X sprite_magia1_2
00:0000A428 X sprite_magia2_2
00:0000A448 X sprite_beholder1_1
00:0000A468 X sprite_beholder2_1
00:0000A488 X sprite_beholder3_1
00:0000A4A8 X sprite_beholder4_1
00:0000A4C8 X sprite_beholder1_2
00:0000A4E8 X sprite_beholder2_2
00:0000A508 X sprite_beholder3_2
00:0000A528 X sprite_beholder4_2
00:0000A548 X sprite_vampiro1_1
00:0000A568 X sprite_vampiro2_1
00:0000A588 X sprite_vampiro1_2
00:0000A5A8 X sprite_vampiro2_2
00:0000A5C8 X sprite_manoizq1
00:0000A5E8 X sprite_manoizq2
00:0000A608 X sprite_manoizq3
00:0000A628 X sprite_manoder1
00:0000A648 X sprite_manoder2
00:0000A668 X sprite_manoder3
00:0000A688   habitacion_actual
00:0000A689   habitacion_extras
00:0000A68A   habitacion_actual_puntero
00:0000A68C   is_habitacion_terminada
00:0000A68D   habitaciones_juego
00:0000A68D   habitaciones_nivel0
00:0000A6FD   habitaciones_nivel1
00:0000A76D   habitaciones_nivel2
00:0000A7DD   habitaciones_nivel3
00:0000A84D   habitaciones_nivel4
00:0000A8BD   habitaciones_nivel5
00:0000A92D   habitaciones_nivel6
00:0000A99D   color_base
00:0000A9A0   color_bomba1
00:0000A9A3   color_bomba2
00:0000A9A6   prota
00:0000A9A6   prota.posx
00:0000A9A7   prota.posy
00:0000A9A8   prota.escena
00:0000A9A9 X prota.velocidad
00:0000A9AA X prota.boton2_pressed
00:0000A9AB   prota.cadencia
00:0000A9AC X prota.pm_aux1
00:0000A9AD X prota.pm_aux2
00:0000A9AE X prota.pm_aux3
00:0000A9AF X prota.pm_aux4
00:0000A9B0 X prota.pm_aux5
00:0000A9B1 X prota.pm_aux6
00:0000A9B2 X prota.pm_aux7
00:0000A9B3 X prota.pm_aux8
00:0000A9B4 X prota.pm_aux9
00:0000A9B5 X prota.pm_aux10
00:0000A9B6   prota_nivel
00:0000A9B7   prota_vidas
00:0000A9B8   prota_reliquias
00:0000A9B9   prota_pos_mapx
00:0000A9BA   prota_pos_mapy
00:0000A9BB   prota_energia
00:0000A9BC   array_aux_vidas
00:0000A9C4   array_aux_reliquias
00:0000A9CC   array_aux_energia
00:0000A9D3   ultimo_pos_array_aux_energia
00:0000A9D4   array_aux_mapa_limpiar
00:0000A9DB   elemento_pintar_mapa
00:0000A9DC   antorchas
00:0000A9E3   array_antorcha
00:0000A9E6   esqueletos
00:0000A9ED   array_esqueleto
00:0000A9F9   lista_escenas_calavera
00:0000A9FD   array_sprites
00:0000A9FD   array_sprites_pm
00:0000AA05 X array_sprites_enem
00:0000AA7D X lista_enemigos
00:0000AB09 X puntero_array_atrib_array_VRAM
00:0000AB0B   tiles_patrones_nivel0
00:0000AD35   tiles_color_nivel0
00:0000ADA0   tiles_mapa_nivel0
00:0000ADD5   tiles_patrones_nivel1
00:0000AF8A   tiles_color_nivel1
00:0000AFD1   tiles_mapa_nivel1
00:0000B006   tiles_patrones_nivel2
00:0000B1BB   tiles_color_nivel2
00:0000B202   tiles_mapa_nivel2
00:0000B237   tiles_patrones_nivel3
00:0000B3EC   tiles_color_nivel3
00:0000B433   tiles_mapa_nivel3
00:0000B468   tiles_patrones_nivel4
00:0000B61D   tiles_color_nivel4
00:0000B664   tiles_mapa_nivel4
00:0000B699   tiles_patrones_nivel5
00:0000B84E   tiles_color_nivel5
00:0000B895   tiles_mapa_nivel5
00:0000B8CA   tiles_patrones_nivel6
00:0000BA7F   tiles_color_nivel6
00:0000BAC6   tiles_mapa_nivel6
00:0000BAFB   tiles_patrones_marcador
00:0000BC47   tiles_color_marcador
00:0000BC7C   tiles_mapa_marcador
00:0000BCDE   END


 Output: t4.out
-------------------------------------------------

 Page: 00
  Org: 00008000  Size: *  Used: 00000000

    No output

 Output: t4.bin
-------------------------------------------------

 Page: 00
  Org: 00008000  Size: *  Used: 00003CE5

   Address   Length Align   Label
   00008000   15589         START
