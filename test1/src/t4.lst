Sjasm Z80 Assembler v0.42c - www.xl2s.tk             [2021.10.27 - 20:20:46]

t4.asm
Errors: 0

       1   00:0000                      	OUTPUT	"t4.bin"
       2   00:8000                      	
       3   00:8000                      ;;=====================================================
       4   00:8000                      ;;DEFINICIÓN DE CONSTANTES
       5   00:8000                      ;;=====================================================	
       6   00:8000                      	include "constantes.asm"
       1.  00:8000                      ;;=====================================================
       2.  00:8000                      ;; FICHERO constantes.asm
       3.  00:8000                      ;;=====================================================
       4.  00:8000                      
       5.  00:8000                      ;;ETIQUETAS/CONSTANTES BIOS TECLADO
       6.  00:8000  (00:00D8)           GTTRIG		equ		#00D8	;Returns current trigger status
       7.  00:8000  (00:00D5)           GTSTCK		equ		#00D5	;Returns the joystick/cursors status
       8.  00:8000  (00:F3DB)           CLIKSW		equ		#F3DB	;deshabilita el sonido de clic cuando se pulsa una tecla
       9.  00:8000                      
      10.  00:8000                      ;;ETIQUETAS/CONSTANTES BIOS VDP
      11.  00:8000  (00:013E)           RDVDP		equ		#013E	;lee registro status VDP
      12.  00:8000  (00:0047)           WRTVDP		equ		#0047	;escribe registros del VDP
      13.  00:8000  (00:005C)           LDIRVM		equ		#005C	;RAM/ROM -> VRAM
      14.  00:8000  (00:0059)           LDIRMV		equ		#0059	;VRAM -> RAM
      15.  00:8000  (00:005F)           CHGMOD		equ		#005F	;cambia modo pantalla (screen mode)
      16.  00:8000  (00:0041)           DISSCR  	equ		#0041	;desactiva pantanlla
      17.  00:8000  (00:0044)           ENASCR  	equ		#0044	;activa pantalla
      18.  00:8000  (00:0062)           CHGCLR  	equ		#0062	;cambia color de pantalla (toca A y direcciones)
      19.  00:8000  (00:F3E9)           FORCLR		equ		#F3E9	;zona memoria color foreground
      20.  00:8000  (00:F3EA)           BAKCLR  	equ		#F3EA	;zona memoria color background
      21.  00:8000  (00:F3EB)           BDRCLR 		equ		#F3EB	;zona memoria bordercolor
      22.  00:8000  (00:00C3)           CLS			equ		#00C3	;limpia pantalla (necesita A=0)
      23.  00:8000                      
      24.  00:8000                      ;;ETIQUETAS/CONSTANTES REGISTROS VDP
      25.  00:8000  (00:F3DF)           RG0SAV		equ		#F3DF	;Mirror of VDP register 0 (Basic: VDP(0))
      26.  00:8000  (00:F3E0)           RG1SAV		equ		#F3E0	;Mirror of VDP register 1 (Basic: VDP(1))
      27.  00:8000  (00:F3E1)           RG2SAV		equ		#F3E1	;Mirror of VDP register 2 (Basic: VDP(2))
      28.  00:8000  (00:F3E2)           RG3SAV		equ		#F3E2	;Mirror of VDP register 3 (Basic: VDP(3))
      29.  00:8000  (00:F3E3)           RG4SAV		equ		#F3E3	;Mirror of VDP register 4 (Basic: VDP(4))
      30.  00:8000  (00:F3E4)           RG5SAV		equ		#F3E4	;Mirror of VDP register 5 (Basic: VDP(5))
      31.  00:8000  (00:F3E5)           RG6SAV		equ		#F3E5	;Mirror of VDP register 6 (Basic: VDP(6))
      32.  00:8000  (00:F3E6)           RG7SAV		equ		#F3E6	;Mirror of VDP register 7 (Basic: VDP(7))
      33.  00:8000  (00:F3E7)           STATFL		equ		#F3E7	;Mirror of VDP(8) status register (S#0)
      34.  00:8000                      
      35.  00:8000  (00:0099)           REGEST		equ		#0099	;registro de estado para escribir directamente en VRAM
      36.  00:8000  (00:0098)           REGESCVDP	equ		#0098	;registro donde escribir valor para VRAM
      37.  00:8000                      
      38.  00:8000                      ;;ETIQUETAS/CONSTANTES REGISTROS PSG (PARA JOYSTICK)
      39.  00:8000  (00:00A0)           PSG_A  equ  0a0h  ;reg address
      40.  00:8000  (00:00A1)           PSG_W  equ  0a1h  ;reg data WR
      41.  00:8000  (00:00A2)           PSG_R  equ  0a2h  ;reg data
      42.  00:8000                      
      43.  00:8000                      
      44.  00:8000                      ;;ETIQUETAS DE ZONAS DE MEMORIA DE LA VPD (MSX1)
      45.  00:8000  (00:0000)           CHRTBL		equ		#0000
      46.  00:8000  (00:1800)           TILMAP		equ		#1800
      47.  00:8000  (00:1B00)           SPRART		equ		#1B00
      48.  00:8000  (00:2000)           CLRTBL		equ		#2000
      49.  00:8000  (00:3800)           SPRTBL		equ		#3800
      50.  00:8000                      
      51.  00:8000                      
      52.  00:8000                      ;;ETIQUETAS ESTANDAR PARA DAR MÁS CLARIDAD AL CODIGO
      53.  00:8000  (00:0001)           SI			equ		1
      54.  00:8000  (00:0000)           NO			equ		0
      55.  00:8000  (00:0001)           PUERTAACTIV equ		1
      56.  00:8000  (00:0004)           LIMCADENCIA equ		4	;nº de veces que se ejecutará el disparo antes de ejecutar un disparo real (porque cuando se pulsa la tecl dispara 3 ó 4 veces de rápido que va)
      57.  00:8000                      ;hay que estudiar si 3 es un nº mejor
      58.  00:8000                      
      59.  00:8000                      
      60.  00:8000                      ;;PALETA DE COLORES DEL MSX
      61.  00:8000  (00:0000)           COLTRASP	equ		0
      62.  00:8000  (00:0001)           COLNEGRO	equ		1
      63.  00:8000  (00:0002)           COLVERDE	equ		2
      64.  00:8000  (00:0003)           COLVERCLA	equ		3
      65.  00:8000  (00:0004)           COLAZULOSC	equ		4
      66.  00:8000  (00:0005)           COLAZULLA	equ		5
      67.  00:8000  (00:0006)           COLROJOOSC	equ		6
      68.  00:8000  (00:0007)           COLCYAN		equ		7
      69.  00:8000  (00:0008)           COLROJO		equ		8
      70.  00:8000  (00:0009)           COLROJOCLA	equ		9
      71.  00:8000  (00:000A)           COLAMAROSC	equ		10
      72.  00:8000  (00:000B)           COLAMARCLA	equ		11
      73.  00:8000  (00:000C)           COLVERDOSC	equ		12
      74.  00:8000  (00:000D)           COLMAGENTA	equ		13
      75.  00:8000  (00:000E)           COLGRIS		equ		14
      76.  00:8000  (00:000F)           COLBLANCO	equ		15
      77.  00:8000                      
      78.  00:8000                      
      79.  00:8000                      ;;ETIQUETAS ESPECIFICAS PARA DAR MÁS CLARIDAD AL CODIGO (relacionadas con posiciones en mapa vdp)
      80.  00:8000  (00:02F8)           POSMAPLIN1  equ		#02F8
      81.  00:8000  (00:02D8)           POSMAPLIN2  equ		#02D8
      82.  00:8000  (00:02B8)           POSMAPLIN3  equ		#02B8
      83.  00:8000  (00:0298)           POSMAPLIN4  equ		#0298
      84.  00:8000  (00:0278)           POSMAPLIN5  equ		#0278
      85.  00:8000  (00:0258)           POSMAPLIN6  equ		#0258
      86.  00:8000  (00:0238)           POSMAPLIN7  equ		#0238
      87.  00:8000                      
      88.  00:8000  (00:000D)           POSCARAMAP	equ		#000D
      89.  00:8000  (00:0248)           POSVIDAS	equ		#0248
      90.  00:8000  (00:0011)           POSRELIMAP	equ		#0011
      91.  00:8000  (00:02C8)           POSRELIQ	equ		#02C8
      92.  00:8000  (00:0288)           POSENERG	equ		#0288
      93.  00:8000  (00:02B4)           POSNIVEL	equ		#02B4
      94.  00:8000  (00:0238)           POSMAPA		equ 	#0238
      95.  00:8000                      
      96.  00:8000  (00:01EE)           POSPUERABAJ equ		#01EE
      97.  00:8000  (00:008E)           POSPUERARRI equ		#008E
      98.  00:8000  (00:00FC)           POSPUERDERE equ		#00FC
      99.  00:8000  (00:00E1)           POSPUERIZQU equ		#00E1
     100.  00:8000  (00:006C)           POSESCALERA equ		#006C	;32 x 3 + columna
     101.  00:8000                      
     102.  00:8000                      ;;POSICIONES DE LAS AYUDAS EN PANTALLA BANCO 1
     103.  00:8000  (00:00A3)           POSORACION	equ		163
     104.  00:8000  (00:00A7)           POSCRUZ		equ		167
     105.  00:8000  (00:00AB)           POSAGUA		equ		171
     106.  00:8000  (00:00AF)           POSARMAD	equ		175
     107.  00:8000  (00:00B3)           POSPLANTA	equ		179
     108.  00:8000  (00:00B7)           POSVIDAEXT	equ		183
     109.  00:8000  (00:00BB)           POSBALLESTA	equ		187
     110.  00:8000                      
     111.  00:8000                      ;;POSICIONES DE LAS AYUDAS EN PANTALLA PIXEL CENTRAL X
     112.  00:8000  (00:0020)           POSORACIONX	equ		32
     113.  00:8000  (00:0040)           POSCRUZX	equ		64
     114.  00:8000  (00:0060)           POSAGUAX	equ		96
     115.  00:8000  (00:0080)           POSARMADX	equ		128
     116.  00:8000  (00:00A0)           POSPLANTAX	equ		160
     117.  00:8000  (00:00C0)           POSVIDAEXTX	equ		192
     118.  00:8000  (00:00E0)           POSBALLESTAX equ	224
     119.  00:8000                      
     120.  00:8000                      ;;POSICIONES DE LAS AYUDAS EN PANTALLA PIXEL CENTRAL Y
     121.  00:8000  (00:0070)           POSAYUDASY	equ		112	;se pone por poner porque las estructuras de ayudas ya se inicializan con este valor
     122.  00:8000                      
     123.  00:8000                      ;;POSICIÓN INICIAL DEL SPRITE DEL PUNTO DE MIRA
     124.  00:8000  (00:0078)           POSXPM		equ		120
     125.  00:8000  (00:006C)           POSYPM		equ		108
     126.  00:8000                      
     127.  00:8000                      ;;ESTADO ESTRUCTURA
     128.  00:8000  (00:0000)           INACTIVA	equ		0
     129.  00:8000  (00:0001)           ACTIVA		equ		1
     130.  00:8000  (00:0001)           HABTERMIN	equ		1
     131.  00:8000                      
     132.  00:8000                      ;;POSICIONES DE LAS ANTORCHAS
     133.  00:8000  (00:0088)           POSANTOR1	equ		136
     134.  00:8000  (00:0097)           POSANTOR2	equ		151
     135.  00:8000  (00:00C4)           MAPLLAMA1	equ		196
     136.  00:8000  (00:00C5)           MAPLLAMA2	equ		197
     137.  00:8000  (00:00FF)           RESETLLAMA	equ		255
     138.  00:8000                      
     139.  00:8000                      ;;POSICIONES DE LOS ESQUELETOS
     140.  00:8000  (00:0088)           POSESQUEL1	equ		136
     141.  00:8000  (00:0095)           POSESQUEL2	equ		149
     142.  00:8000  (00:00A9)           POSCALAVE1	equ		169
     143.  00:8000  (00:00B6)           POSCALAVE2	equ		182
     144.  00:8000  (00:0019)           RESETESQUEL	equ		25
     145.  00:8000  (00:0004)           RESETESCENAESQUEL 	equ	4	;hay 4 caras con las que el esqueleto cambia (se ha metido el 0 para facilitar código)
     146.  00:8000                      
     147.  00:8000                      ;;ETIQUETAS ESPECIFICAS PARA DAR MÁS CLARIDAD AL CODIGO (relacionadas con posiciones en en el banco de memoria)
     148.  00:8000  (00:0013)           TILEPROTAM  equ		19		;tile del prota para pintar en mapa
     149.  00:8000  (00:0009)           TILEGRISM	equ		9		;tile gris que representa vacio (por donde el prota va pasando)
     150.  00:8000  (00:0010)           TILEMAPROJO equ		16
     151.  00:8000  (00:000F)           TILEMAPAMAR equ		15
     152.  00:8000  (00:000E)           TILEMAPVERD equ		14
     153.  00:8000                      
     154.  00:8000                      
     155.  00:8000                      ;;ETIQUETAS ESPECIFICAS PARA DAR MÁS CLARIDAD AL CODIGO (generales)
     156.  00:8000  (00:0008)           NMAXVIDREL	equ		8		;el número máximo de vidas y de reliquias es de 8
     157.  00:8000  (00:0007)           NHABNIVEL	equ		7
     158.  00:8000  (00:00F8)           MAXENERGIA  equ		248
     159.  00:8000  (00:00D9)           TILEENERG8  equ		217
     160.  00:8000  (00:00BA)           TILEENERG7  equ		186
     161.  00:8000  (00:009B)           TILEENERG6  equ		155
     162.  00:8000  (00:007C)           TILEENERG5  equ		124
     163.  00:8000  (00:005D)           TILEENERG4  equ		93
     164.  00:8000  (00:003E)           TILEENERG3  equ		62
     165.  00:8000  (00:001F)           TILEENERG2  equ		31
     166.  00:8000  (00:0000)           TILENEGRO	equ		0
     167.  00:8000                      
     168.  00:8000                      ;limites
     169.  00:8000  (00:0000)           LIMPANTIZQ  equ		0
     170.  00:8000  (00:00FF)           LIMPANTDER  equ		255
     171.  00:8000  (00:0000)           LIMPANTARR  equ		0
     172.  00:8000  (00:0080)           LIMPANTABA  equ		128
     173.  00:8000                      
     174.  00:8000                      
     175.  00:8000                      ;matriz de 7x7 empieza en 0, y fila y x col, cuento desde esquina sup izq
     176.  00:8000  (00:0006)           BASEMAPY	equ		6
     177.  00:8000  (00:0003)           BASEMAPX	equ		3
     178.  00:8000                      
     179.  00:8000                      
     180.  00:8000                      
     181.  00:8000                      ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
     182.  00:8000                      ;; CONSTANTES PARA INTERRUPCIONES
     183.  00:8000                      ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
     184.  00:8000  (00:FD9A)           H.KEYI		equ     	#FD9A
     185.  00:8000  (00:FD9F)           H.TIMI	 	equ     	#FD9F
     186.  00:8000                      
     187.  00:8000                      
     188.  00:8000                      ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
     189.  00:8000                      ;; CONSTANTES PARA SONIDO 
     190.  00:8000                      ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
     191.  00:8000                      
     192.  00:8000  (F000)              	map		#f000
     193.  00:8000                      
     194.  00:8000                      ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;PT3 REPLAYER
     195.  00:8000  (00:F000)           PT3_SETUP:		#1	;set bit0 to 1, if you want to play without looping
     196.  00:8000                      					;bit7 is set each time, when loop point is passed
     197.  00:8000  (00:F001)           PT3_MODADDR:	#2
     198.  00:8000  (00:F003)           PT3_CrPsPtr:	#2
     199.  00:8000  (00:F005)           PT3_SAMPTRS:	#2
     200.  00:8000  (00:F007)           PT3_OrnPtrs:	#2
     201.  00:8000  (00:F009)           PT3_PDSP:		#2
     202.  00:8000  (00:F00B)           PT3_CSP:		#2
     203.  00:8000  (00:F00D)           PT3_PSP:		#2
     204.  00:8000  (00:F00F)           PT3_PrNote:		#1
     205.  00:8000  (00:F010)           PT3_PrSlide:	#2
     206.  00:8000  (00:F012)           PT3_AdInPtA:	#2
     207.  00:8000  (00:F014)           PT3_AdInPtB:	#2
     208.  00:8000  (00:F016)           PT3_AdInPtC:	#2
     209.  00:8000  (00:F018)           PT3_LPosPtr:	#2
     210.  00:8000  (00:F01A)           PT3_PatsPtr:	#2
     211.  00:8000  (00:F01C)           PT3_Delay:		#1
     212.  00:8000  (00:F01D)           PT3_AddToEn:	#1
     213.  00:8000  (00:F01E)           PT3_Env_Del:	#1
     214.  00:8000  (00:F01F)           PT3_ESldAdd:	#2
     215.  00:8000  (00:F021)           PT3_NTL3:		#2	; AND A / NOP (note table creator)
     216.  00:8000                      
     217.  00:8000  (00:F023)           VARS:			#0
     218.  00:8000                      
     219.  00:8000  (00:F023)           ChanA:			#29			;CHNPRM_Size
     220.  00:8000  (00:F040)           ChanB:			#29			;CHNPRM_Size
     221.  00:8000  (00:F05D)           ChanC:			#29			;CHNPRM_Size
     222.  00:8000                      
     223.  00:8000                      ;GlobalVars
     224.  00:8000  (00:F07A)           DelyCnt:		#1
     225.  00:8000  (00:F07B)           CurESld:		#2
     226.  00:8000  (00:F07D)           CurEDel:		#1
     227.  00:8000  (00:F07E)           Ns_Base_AddToNs:	#0
     228.  00:8000  (00:F07E)           Ns_Base:		#1
     229.  00:8000  (00:F07F)           AddToNs:		#1
     230.  00:8000                      
     231.  00:8000  (00:F080)           NT_:			#192	; Puntero a/tabla de frecuencias
     232.  00:8000                      
     233.  00:8000  (00:F140)           AYREGS:			#0
     234.  00:8000  (00:F140)           VT_:			#14
     235.  00:8000  (00:F14E)           EnvBase:		#2
     236.  00:8000  (00:F150)           VAR0END:		#0
     237.  00:8000                      
     238.  00:8000  (00:F150)           T1_:			#0		
     239.  00:8000  (00:F150)           T_NEW_1:		#0
     240.  00:8000  (00:F150)           T_OLD_1:		#24
     241.  00:8000  (00:F168)           T_OLD_2:		#24
     242.  00:8000  (00:F180)           T_NEW_3:		#0
     243.  00:8000  (00:F180)           T_OLD_3:		#2
     244.  00:8000  (00:F182)           T_OLD_0:		#0
     245.  00:8000  (00:F182)           T_NEW_0:		#24
     246.  00:8000  (00:F19A)           T_NEW_2:		#166
     247.  00:8000                      ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;PT3 REPLAYER END
     248.  00:8000                      
     249.  00:8000                      ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ayFX REPLAYER 
     250.  00:8000  (00:F240)           ayFX_MODE:		#1			; ayFX mode
     251.  00:8000  (00:F241)           ayFX_BANK:		#2			; Current ayFX Bank
     252.  00:8000  (00:F243)           ayFX_PRIORITY:	#1			; Current ayFX stream priotity
     253.  00:8000  (00:F244)           ayFX_POINTER:	#2			; Pointer to the current ayFX stream
     254.  00:8000  (00:F246)           ayFX_TONE:		#2			; Current tone of the ayFX stream
     255.  00:8000  (00:F248)           ayFX_NOISE:		#1			; Current noise of the ayFX stream
     256.  00:8000  (00:F249)           ayFX_VOLUME:	#1			; Current volume of the ayFX stream
     257.  00:8000  (00:F24A)           ayFX_CHANNEL:	#1			; PSG channel to play the ayFX stream
     258.  00:8000                      
     259.  00:8000                      	;IF (AYFXRELATIVE == 1 ) 
     260.  00:8000                      ;ayFX_VT:	ds	2			; ayFX relative volume table pointer
     261.  00:8000                      	;ENDIF
     262.  00:8000                      ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ayFX REPLAYER END
     263.  00:8000                      
     264.  00:8000                      
     265.  00:8000                      
       7   00:8000                      
       8   00:8000                      ;;=====================================================
       9   00:8000                      ;;DEFINICIÓN DE CABECERA DE ARCHIVO BIN
      10   00:8000                      ;;=====================================================		
      11   00:8000                      	include "cabecerabin.asm"
       1.  00:8000                      ;;=====================================================
       2.  00:8000                      ;; FICHERO cabecera.asm
       3.  00:8000                      ;;=====================================================
       4.  00:8000                      
       5.  00:8000                      ;;CABECERA FICHERO BIN
       6.  00:8000  FE                  	DB	#FE
       7.  00:8001  00 80               	DW	START
       8.  00:8003  EE BD               	DW	END
       9.  00:8005  00 80               	DW	START
      10.  00:8007                      
      11.  00:8007                      ;;INICIO CÓDIGO PROGRAMA	
      12.  00:8007                      	ORG	#8000
      13.  00:8000                      	
      12   00:8000                      	
      13   00:8000                      START:	
      14   00:8000                      	;inicializa pantalla y entonrno
      15   00:8000  CD 54 82            	CALL	sub_preparapantalla			;screen 2,2 sin click al pulsar tecla y color 16,1,1
      16   00:8003                      	
      17   00:8003                      	;inicializa variables para parametrizar funciones y que lo que se muestre sea variable (nº vidas, mapa, puertas, pantalla, etc...)
      18   00:8003  CD F9 80            	CALL	inicializa_variables_pruebas
      19   00:8006                      	
      20   00:8006                      ;***************************************************
      21   00:8006                      	;inicializa los niveles por partida
      22   00:8006                      ;	CALL	inicializa_niveles			;no es necesario parametrizarlo según el nivel del usuario ya que se cargan todos
      23   00:8006                      ;************** quitarlo cuando pueda navegar por habitaciones y esté más avanzado el proyecto
      24   00:8006                      
      25   00:8006                      	;inicializa los valores de cada puerta excepto si están activas o no (eso ocurre cuando se matan todos los enemigos de la hab. y sólo a las puertas que se muestren)
      26   00:8006  CD DF 87            	CALL	inicializa_puertas
      27   00:8009                      	
      28   00:8009                      	;inicializa las estructuras de forma particular según ayuda pero sin poner valores de posición
      29   00:8009  CD 0C 9B            	CALL	inicializa_ayudas
      30   00:800C                      	
      31   00:800C                      	;inicializa las estructuras de las antorchas y esqueletos
      32   00:800C  CD 7C 85            	CALL	inicializa_antorchas
      33   00:800F  CD 9E 85            	CALL	inicializa_esqueletos
      34   00:8012                      	
      35   00:8012                      	;pinta la pantalla (la primera o algunas especiales se pintan completamente)
      36   00:8012  CD 75 82            	CALL	pinta_pantalla_completa
      37   00:8015                      	
      38   00:8015                      	;carga sprites en memoria (SE HA RETRASADO HASTA PARAMETRIZAR LA CARGA DE PANTALLAS)
      39   00:8015  CD F3 88            	CALL 	carga_patrones_sprites_nivel
      40   00:8018                      	
      41   00:8018                      	;funciones que modificarian el marcador si se produce un evento cuando toque y cuando se pinta la pantalla ya se mira
      42   00:8018                      	;una variable para ver si el array hay que actualizarlo en pantalla o no
      43   00:8018  CD B5 83            	CALL	pinta_vidas
      44   00:801B  CD C4 83            	CALL 	pinta_reliquias
      45   00:801E  CD D3 83            	CALL	pinta_nivel
      46   00:8021  CD 53 84            	CALL	borra_mapa
      47   00:8024  CD 48 88            	CALL	pinta_puertas
      48   00:8027                      
      49   00:8027  3E 13               	LD		 A, TILEPROTAM
      50   00:8029  32 DA A9            	LD		(elemento_pintar_mapa), A
      51   00:802C  CD AA 84            	CALL	posiciona_en_mapa		;se le pasa elemento_pintar_mapa (tile del prota) está el prota y prota.posx y posy
      52   00:802F                      		
      53   00:802F  CD AA 9B            	CALL	pinta_ayudas_habitacion
      54   00:8032                      	
      55   00:8032  CD C0 85            	CALL	pinta_extra_fondo
      56   00:8035                      	
      57   00:8035                      	;esta función no va aquí sino en check colisiones pero se pone aquí para realizar pruebas
      58   00:8035  CD 08 82            	CALL	terminada_habitacion_recorrida ;para cuando se maten todos los enemigos de la habitación
      59   00:8038                      
      60   00:8038                      	;incializacion de replayer con interrupciones
      61   00:8038                      ;	CALL	inicializa_replayer_efectos_interrupciones
      62   00:8038                      
      63   00:8038                      loop_principal:
      64   00:8038  76                  	HALT							;espera VBLANK y sincroniza
      65   00:8039                      	
      66   00:8039  CD 04 89            	CALL	render_sprites			;actualiza array de sprites y los pinta en pantalla
      67   00:803C                      	
      68   00:803C  CD 44 84            	CALL	pinta_energia			;pinta la energia en pantalla
      69   00:803F                      	
      70   00:803F  CD 37 86            	CALL	actualiza_elementos_fondo
      71   00:8042                      
      72   00:8042  CD 47 89            	CALL	check_player			;MIRA EL CONTROL Y APLICA LA LOGICA DE MOVIMIENTO DEL PROTAGONISTA
      73   00:8045                      	
      74   00:8045  C3 38 80            	JP		loop_principal
      75   00:8048                      fin_programa_principal:
      76   00:8048                      	;no necesita RET
      77   00:8048                      
      78   00:8048                      ;;=====================================================
      79   00:8048                      ;;CHECK_COLISIONES_OBJETOS
      80   00:8048                      ;;=====================================================	
      81   00:8048                      ; función: 	revisa (con enemigos+ayudas o puertas según si la habitación ha sido recorrida o no) las variables para ver si se disparó sobre ellas
      82   00:8048                      ; entrada: 	is_habitacion_terminada
      83   00:8048                      ; salida: 	-
      84   00:8048                      ; toca:		HL,BC, DE
      85   00:8048                      check_colisiones_objetos:
      86   00:8048                      
      87   00:8048                      
      88   00:8048                      ;*************************************+ esto hay que depurarlo
      89   00:8048                      
      90   00:8048  F5                  	PUSH	AF
      91   00:8049                      	
      92   00:8049                      	;pantalla limpia?
      93   00:8049  3A 8B A6            	LD		 A, (is_habitacion_terminada)
      94   00:804C  F6 00               	OR		 0
      95   00:804E  CA 5A 80            	JP		 Z, .habitacion_no_terminada
      96   00:8051                      	;SI 
      97   00:8051                      	;recorre puertas y sale
      98   00:8051  CD 5C 80            		CALL	check_colisiones_puertas
      99   00:8054                      		
     100   00:8054  CD E5 80            		CALL test_OK	;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;,  FLAG DE PASO
     101   00:8057                      		
     102   00:8057                      		
     103   00:8057  C3 5B 80            		JP		fin_check_colisiones_objetos	
     104   00:805A                      	;NO 
     105   00:805A                      .habitacion_no_terminada:
     106   00:805A                      	;recorre ayudas
     107   00:805A                      	;recorre enemigos
     108   00:805A                      	
     109   00:805A  F1                  	POP		AF
     110   00:805B                      fin_check_colisiones_objetos:
     111   00:805B  C9                  	RET
     112   00:805C                      
     113   00:805C                      
     114   00:805C                      ;;che
     115   00:805C                      check_colisiones_puertas:
     116   00:805C                      .examina_puerta_arriba:
     117   00:805C  DD 21 6A 87         	LD		IX, puerta_arriba
     118   00:8060  DD 7E 00            	LD		 A, (IX)
     119   00:8063  B7                  	OR		 A							;está activa esta puerta?
     120   00:8064  CA 7A 80            	JP		 Z, .examina_puerta_derecha
     121   00:8067  CD B4 80            	CALL	check_colision_puerta		;aquí ya es cosa de ver colisiones prota/puerta_izquierda
     122   00:806A                      	;recibe valor A
     123   00:806A  F6 00               	OR		 0							;hubo colisión?
     124   00:806C  CA 7A 80            	JP		 Z, .examina_puerta_derecha	;no hubo colisión por lo que examina puerta siguiente
     125   00:806F                      	;hubo colisión
     126   00:806F                      	;EJECUTA ACCIÓN Y SALE DE LA RUTINA
     127   00:806F  21 B3 80            	LD		HL, fin_check_colisiones_puertas ;se guarda dónde volver
     128   00:8072  E5                  	PUSH	HL
     129   00:8073                      	
     130   00:8073  DD 6E 05            	LD		 L, (IX + ESTRUCTURA_PUERTA.accion)
     131   00:8076  DD 66 06            	LD		 H, (IX + ESTRUCTURA_PUERTA.accion + 1)
     132   00:8079  E9                  	JP		(HL)
     133   00:807A                      
     134   00:807A                      
     135   00:807A                      .examina_puerta_derecha:
     136   00:807A  DD 21 77 87         	LD		IX, puerta_derecha
     137   00:807E  DD 7E 00            	LD		 A, (IX)
     138   00:8081  B7                  	OR		 A							;está activa esta puerta?
     139   00:8082  CA 8E 80            	JP		 Z, .examina_puerta_abajo
     140   00:8085  CD B4 80            	CALL	check_colision_puerta		;aquí ya es cosa de ver colisiones prota/puerta_izquierda
     141   00:8088                      	
     142   00:8088  F6 00               	OR		 0							;hubo colisión?
     143   00:808A  CA 8E 80            	JP		 Z, .examina_puerta_abajo	;no hubo colisión por lo que examina puerta siguiente
     144   00:808D                      	;hubo colisión
     145   00:808D                      	;EJECUTA ACCIÓN Y SALE DE LA RUTINA
     146   00:808D                      	
     147   00:808D  C9                  	RET
     148   00:808E                      
     149   00:808E                      .examina_puerta_abajo:
     150   00:808E  DD 21 84 87         	LD		IX, puerta_abajo
     151   00:8092  DD 7E 00            	LD		 A, (IX)
     152   00:8095  B7                  	OR		 A							;está activa esta puerta?
     153   00:8096  CA A2 80            	JP		 Z, .examina_puerta_izquierda
     154   00:8099  CD B4 80            	CALL	check_colision_puerta		;aquí ya es cosa de ver colisiones prota/puerta_izquierda
     155   00:809C                      	
     156   00:809C  F6 00               	OR		 0							;hubo colisión?
     157   00:809E  CA A2 80            	JP		 Z, .examina_puerta_izquierda;no hubo colisión por lo que examina puerta siguiente
     158   00:80A1                      	;hubo colisión
     159   00:80A1                      	;EJECUTA ACCIÓN Y SALE DE LA RUTINA
     160   00:80A1                      	
     161   00:80A1  C9                  	RET
     162   00:80A2                      
     163   00:80A2                      .examina_puerta_izquierda:
     164   00:80A2  DD 21 84 87         	LD		IX, puerta_abajo
     165   00:80A6  DD 7E 00            	LD		 A, (IX)
     166   00:80A9  B7                  	OR		 A							;está activa esta puerta?
     167   00:80AA  CA A2 80            	JP		 Z, .examina_puerta_izquierda
     168   00:80AD  CD B4 80            	CALL	check_colision_puerta		;aquí ya es cosa de ver colisiones prota/puerta_izquierda
     169   00:80B0                      	
     170   00:80B0  F6 00               	OR		 0							;hubo colisión?
     171   00:80B2  C8                  	RET		 Z							;es la última puerta a mirar, si no hubo colisión salimos
     172   00:80B3                      	;hubo colisión
     173   00:80B3                      	;EJECUTA ACCIÓN Y SALE DE LA RUTINA
     174   00:80B3                      	
     175   00:80B3                      fin_check_colisiones_puertas:
     176   00:80B3  C9                  	RET
     177   00:80B4                      
     178   00:80B4                      
     179   00:80B4                      ;;=====================================================
     180   00:80B4                      ;;CHECK_COLISION_PUERTA
     181   00:80B4                      ;;=====================================================	
     182   00:80B4                      ; función: 	revisa (con enemigos+ayudas o puertas según si la habitación ha sido recorrida o no) las variables para ver si se disparó sobre ellas
     183   00:80B4                      ; entrada: 	IX con el puntero a la puerta que se examina
     184   00:80B4                      ; salida: 	A (0 no hay colisión con puerta / 1 sí la hay)
     185   00:80B4                      ; toca:		HL,BC, DE
     186   00:80B4                      check_colision_puerta:
     187   00:80B4                      .deteccioncolision_paso1:
     188   00:80B4  FD 21 A5 A9         	LD		IY, prota	;IY punto de mira / IX puerta
     189   00:80B8  FD 7E 00            	LD		 A, (IY + ESTRUCTURA_PUNTOMIRA.posx)
     190   00:80BB  C6 08               	ADD		 8			;8-es fijo, offset del punto de mira ya que se mueve según la esquina superior izquierda y el centro del punto de mira está en el centro del sprite
     191   00:80BD                      	
     192   00:80BD                      	;ya tengo en A la coordenada X del centro del punto de mira					
     193   00:80BD  DD 96 01            	SUB		(IX + ESTRUCTURA_PUERTA.posx)	;le resto el punto x en la puerta
     194   00:80C0                      	
     195   00:80C0  D2 C5 80            	JP		NC, .deteccioncolision_paso2	;si no es negativo comparo con el radio
     196   00:80C3                      
     197   00:80C3  ED 44               	NEG										;si es negativo lo niego (valor absoluto)
     198   00:80C5                      	
     199   00:80C5                      .deteccioncolision_paso2:
     200   00:80C5  DD BE 03            	CP		(IX + ESTRUCTURA_PUERTA.radiox)	;comparo con el radio X de la puerta
     201   00:80C8                      	
     202   00:80C8  DA CD 80            	JP		 C, .deteccioncolision_paso3	;SI NC la distancia es >= por lo que sale y no es necesario verificar nada más
     203   00:80CB                      	
     204   00:80CB  AF                  	XOR		 A								;el resultado es falso y se guarda en A y ya no hay que seguir coprobando
     205   00:80CC  C9                  	RET
     206   00:80CD                      	
     207   00:80CD                      .deteccioncolision_paso3:					;la distancia X es válida, comprobamos la distancia Y
     208   00:80CD  FD 7E 00            	LD		 A, (IY + ESTRUCTURA_PUNTOMIRA.posx)
     209   00:80D0  C6 08               	ADD		 8								;le sumo el offset del punto de mira (8 es fijo)
     210   00:80D2                      
     211   00:80D2                      	;ya tengo en A la coordenada Y del centro del punto de mira					
     212   00:80D2  DD 96 02            	SUB		(IX + ESTRUCTURA_PUERTA.posy)	;le resto el punto y en la puerta
     213   00:80D5                      	
     214   00:80D5  D2 DA 80            	JP		NC, .deteccioncolision_paso4	;si no es negativo comparo con el radio
     215   00:80D8                      
     216   00:80D8  ED 44               	NEG										;si es negativo lo niego (valor absoluto)
     217   00:80DA                      
     218   00:80DA                      .deteccioncolision_paso4:
     219   00:80DA  DD BE 04            	CP		(IX + ESTRUCTURA_PUERTA.radioy)	;comparo con el radio Y de la puerta
     220   00:80DD                      
     221   00:80DD  DA E2 80            	JP		 C, .deteccioncolision_paso5	;SI NC la distancia es >= por lo que sale y no es necesario verificar nada más
     222   00:80E0                      	
     223   00:80E0  AF                  	XOR		 A								;el resultado es falso y se guarda en A y ya no hay que seguir coprobando
     224   00:80E1  C9                  	RET
     225   00:80E2                      
     226   00:80E2                      .deteccioncolision_paso5:
     227   00:80E2  3E 01               	LD		 A, SI
     228   00:80E4                      fin_check_colision_puerta:
     229   00:80E4  C9                  	RET
     230   00:80E5                      
     231   00:80E5                      
     232   00:80E5                      
     233   00:80E5                      ;; FLAG PARA PRUEBAS 
     234   00:80E5                      test_OK:
     235   00:80E5  F5                  	PUSH	AF
     236   00:80E6                      	
     237   00:80E6  3E 0F               	LD		 A, 15
     238   00:80E8                      	
     239   00:80E8  32 E9 F3            	LD 		(FORCLR), A
     240   00:80EB  23                  	INC		HL
     241   00:80EC                      	
     242   00:80EC  32 EA F3            	LD 		(BAKCLR), A
     243   00:80EF  23                  	INC		HL
     244   00:80F0                      	
     245   00:80F0  7E                  	LD		 A, (HL)
     246   00:80F1  32 EB F3            	LD 		(BDRCLR), A
     247   00:80F4                      	
     248   00:80F4  CD 62 00            	CALL	CHGCLR 
     249   00:80F7                      	
     250   00:80F7  F1                  	POP		AF
     251   00:80F8                      fin_test_OK:
     252   00:80F8  C9                  	RET
     253   00:80F9                      
     254   00:80F9                      
     255   00:80F9                      
     256   00:80F9                      ;;*******************************************************************
     257   00:80F9                      ; sólo para hacer pruebas y pintar la parte de las vidas y demás
     258   00:80F9                      inicializa_variables_pruebas:
     259   00:80F9  3E 04               	LD		 A, 4
     260   00:80FB  32 B6 A9            	LD		(prota_vidas),A
     261   00:80FE                      
     262   00:80FE  3E 04               	LD		 A, 4
     263   00:8100  32 B7 A9            	LD		(prota_reliquias), A
     264   00:8103                      
     265   00:8103  3E 64               	LD		 A, 100
     266   00:8105  32 BA A9            	LD		(prota_energia), A
     267   00:8108                      
     268   00:8108                      	;ubico al prota dentro del nivel para obtener luego las habitaciones y enemigos que aparecerán
     269   00:8108                      	;será igual la posición inicial en todos los niveles
     270   00:8108                      	
     271   00:8108  3E 00               	LD		 A, 0				;los niveles (matrices) son 7 del 0 al 6
     272   00:810A  32 B5 A9            	LD		(prota_nivel), A	;nivel empieza en 0 para usar las posiciones ascii
     273   00:810D                      
     274   00:810D  3E 01               	LD		 A, 1				;los subniveles (filas) son 7 del 0 al 6
     275   00:810F  32 B9 A9            	LD		(prota_pos_mapy), A	;pos Y dentro del nivel (se empieza en 0)
     276   00:8112                      
     277   00:8112  3E 03               	LD		 A, 3				;columnas 7: del 0 al 6
     278   00:8114  32 B8 A9            	LD		(prota_pos_mapx), A	;pos X dentro del nivel (se empieza en 0)
     279   00:8117                      	
     280   00:8117  AF                  	XOR		 A
     281   00:8118  32 AA A9            	LD		(prota.cadencia), A
     282   00:811B                      	
     283   00:811B  32 8B A6            	LD		(is_habitacion_terminada), A
     284   00:811E                      fin_inicializa_variables_pruebas:
     285   00:811E  C9                  	RET
     286   00:811F                      ;;************************************************************************
     287   00:811F                      
     288   00:811F                      
     289   00:811F                      
     290   00:811F                      
     291   00:811F                      
     292   00:811F                      
     293   00:811F                      
     294   00:811F                      
     295   00:811F                      
     296   00:811F                      ;;=====================================================
     297   00:811F                      ;;DEFINICIÓN DE SUBRUTINAS
     298   00:811F                      ;;=====================================================
     299   00:811F                      	include "subrutinas.asm"
       1.  00:811F                      ;;=====================================================
       2.  00:811F                      ;;DEFINICIÓN DE SUBRUTINAS
       3.  00:811F                      ;;=====================================================	
       4.  00:811F                      
       5.  00:811F                      
       6.  00:811F                      ;;=====================================================
       7.  00:811F                      ;;INICIALIZA_NIVELES
       8.  00:811F                      ;;=====================================================	
       9.  00:811F                      ; función: 	pone el bit 4 de todas las habitaciones (byte habitacion_actual 0,2,4....) a 0
      10.  00:811F                      ; entrada: 	habitaciones_plantilla
      11.  00:811F                      ; salida: 	habitaciones_plantilla con los el bit 4 de los bites bytes impares a 0
      12.  00:811F                      ; toca: 	habitaciones_plantilla, B
      13.  00:811F                      inicializa_niveles:
      14.  00:811F  F5                  		PUSH		AF
      15.  00:8120  C5                  		PUSH		BC
      16.  00:8121  E5                  		PUSH		HL
      17.  00:8122                      		
      18.  00:8122  06 38               		LD			 B, 56		;la mitad de bytes del array de un nivel
      19.  00:8124  21 8C A6            		LD 			HL, habitaciones_nivel0
      20.  00:8127                      .inicia_nivel_0
      21.  00:8127  7E                  		LD		 	 A, (HL)
      22.  00:8128  CB E7               		SET			 4, A 		;el 4 bit a 0 indica que por esa habitacion no se ha pasado/no se han atado todos los enemigos
      23.  00:812A  77                  		LD			(HL), A
      24.  00:812B  23 23               [2]		INC			HL
      25.  00:812D  10 F8               		DJNZ		.inicia_nivel_0
      26.  00:812F                      
      27.  00:812F  06 38               		LD			 B, 56		;la mitad de bytes del array de un nivel
      28.  00:8131  21 FC A6            		LD 			HL, habitaciones_nivel1
      29.  00:8134                      .inicia_nivel_1
      30.  00:8134  7E                  		LD		 	 A, (HL)
      31.  00:8135  CB E7               		SET			 4, A 		;el 4 bit a 0 indica que por esa habitacion no se ha pasado/no se han atado todos los enemigos
      32.  00:8137  77                  		LD			(HL), A
      33.  00:8138  23 23               [2]		INC			HL
      34.  00:813A  10 F8               		DJNZ		.inicia_nivel_1
      35.  00:813C                      
      36.  00:813C  06 38               		LD			 B, 56		;la mitad de bytes del array de un nivel
      37.  00:813E  21 6C A7            		LD 			HL, habitaciones_nivel2
      38.  00:8141                      .inicia_nivel_2
      39.  00:8141  7E                  		LD		 	 A, (HL)
      40.  00:8142  CB E7               		SET			 4, A 		;el 4 bit a 0 indica que por esa habitacion no se ha pasado/no se han atado todos los enemigos
      41.  00:8144  77                  		LD			(HL), A
      42.  00:8145  23 23               [2]		INC			HL
      43.  00:8147  10 F8               		DJNZ		.inicia_nivel_2
      44.  00:8149                      
      45.  00:8149  06 38               		LD			 B, 56		;la mitad de bytes del array de un nivel
      46.  00:814B  21 DC A7            		LD 			HL, habitaciones_nivel3
      47.  00:814E                      .inicia_nivel_3
      48.  00:814E  7E                  		LD		 	 A, (HL)
      49.  00:814F  CB E7               		SET			 4, A 		;el 4 bit a 0 indica que por esa habitacion no se ha pasado/no se han atado todos los enemigos
      50.  00:8151  77                  		LD			(HL), A
      51.  00:8152  23 23               [2]		INC			HL
      52.  00:8154  10 F8               		DJNZ		.inicia_nivel_3
      53.  00:8156                      
      54.  00:8156  06 38               		LD			 B, 56		;la mitad de bytes del array de un nivel
      55.  00:8158  21 4C A8            		LD 			HL, habitaciones_nivel4
      56.  00:815B                      .inicia_nivel_4
      57.  00:815B  7E                  		LD		 	 A, (HL)
      58.  00:815C  CB E7               		SET			 4, A 		;el 4 bit a 0 indica que por esa habitacion no se ha pasado/no se han atado todos los enemigos
      59.  00:815E  77                  		LD			(HL), A
      60.  00:815F  23 23               [2]		INC			HL
      61.  00:8161  10 F8               		DJNZ		.inicia_nivel_4
      62.  00:8163                      
      63.  00:8163  06 38               		LD			 B, 56		;la mitad de bytes del array de un nivel
      64.  00:8165  21 BC A8            		LD 			HL, habitaciones_nivel5
      65.  00:8168                      .inicia_nivel_5
      66.  00:8168  7E                  		LD		 	 A, (HL)
      67.  00:8169  CB E7               		SET			 4, A 		;el 4 bit a 0 indica que por esa habitacion no se ha pasado/no se han atado todos los enemigos
      68.  00:816B  77                  		LD			(HL), A
      69.  00:816C  23 23               [2]		INC			HL
      70.  00:816E  10 F8               		DJNZ		.inicia_nivel_5
      71.  00:8170                      
      72.  00:8170  06 38               		LD			 B, 56		;la mitad de bytes del array de un nivel
      73.  00:8172  21 2C A9            		LD 			HL, habitaciones_nivel6
      74.  00:8175                      .inicia_nivel_6
      75.  00:8175  7E                  		LD		 	 A, (HL)
      76.  00:8176  CB E7               		SET			 4, A 		;el 4 bit a 0 indica que por esa habitacion no se ha pasado/no se han atado todos los enemigos
      77.  00:8178  77                  		LD			(HL), A
      78.  00:8179  23 23               [2]		INC			HL
      79.  00:817B  10 F8               		DJNZ		.inicia_nivel_6
      80.  00:817D                      
      81.  00:817D  E1                  		POP			HL
      82.  00:817E  C1                  		POP			BC
      83.  00:817F  F1                  		POP			AF
      84.  00:8180                      fin_iniciliza_niveles:
      85.  00:8180  C9                  		RET
      86.  00:8181                      
      87.  00:8181                      
      88.  00:8181                      ;;=====================================================
      89.  00:8181                      ;;ACTUALIZA_MARCADOR_VIDAS
      90.  00:8181                      ;;=====================================================	
      91.  00:8181                      ; función:  actualiza el buffer de vidas
      92.  00:8181                      ; entrada: 	prota_vidas
      93.  00:8181                      ; salida: 	array_aux_vidas
      94.  00:8181                      ; toca:		A,B,HL
      95.  00:8181                      actualiza_marcador_vidas:
      96.  00:8181                      	;para no andar restando pongo todos los huecos a negro y luego en otro bucle las caras
      97.  00:8181                      	;1-pinto todo en blanco
      98.  00:8181  21 BB A9            	LD		HL,array_aux_vidas
      99.  00:8184  06 08               	LD		 B,NMAXVIDREL
     100.  00:8186                      loop_marcador_caras_negro:	;asignar espacios en negro
     101.  00:8186  36 00               	LD		(HL),0			;0 posición mapa tiles para nada (es transparente pero el fondo es negro)
     102.  00:8188  23                  	INC		HL
     103.  00:8189  10 FB               	DJNZ	loop_marcador_caras_negro
     104.  00:818B                      fin_loop_marcador_caras_negro:
     105.  00:818B                      	;2-pinto las caras según el n de vidas
     106.  00:818B  3A B6 A9            	LD		 A, (prota_vidas)
     107.  00:818E  B7                  	OR		 A
     108.  00:818F  C8                  	RET 	 Z
     109.  00:8190  47                  	LD		 B, A
     110.  00:8191  21 BB A9            	LD		HL, array_aux_vidas
     111.  00:8194                      loop_marcador_caras: ;asignar caras
     112.  00:8194  36 0D               	LD		(HL), POSCARAMAP	;13 posición mapa tiles para cara
     113.  00:8196  23                  	INC		HL
     114.  00:8197  10 FB               	DJNZ	loop_marcador_caras
     115.  00:8199                      fin_loop_marcador_caras:
     116.  00:8199                      fin_actualiza_marcador_vidas:
     117.  00:8199  C9                  	RET
     118.  00:819A                      
     119.  00:819A                      
     120.  00:819A                      ;;=====================================================
     121.  00:819A                      ;;ACTUALIZA_BUFFER_RELIQUIAS
     122.  00:819A                      ;;=====================================================	
     123.  00:819A                      ; función: 	actualiza buffer de reliquias
     124.  00:819A                      ; entrada: 	prota_reliquias
     125.  00:819A                      ; salida: 	array_aux_reliquias
     126.  00:819A                      ; toca:		A,B,HL
     127.  00:819A                      actualiza_buffer_reliquias:	
     128.  00:819A                      	;para no andar restando pongo todos los huecos a negro y luego en otro bucle las reliquias
     129.  00:819A                      	;1-pinto todo en blanco
     130.  00:819A  21 C3 A9            	LD		HL, array_aux_reliquias
     131.  00:819D  06 08               	LD		 B, NMAXVIDREL
     132.  00:819F  AF                  	XOR		 A
     133.  00:81A0                      loop_buffer_reliquias_negro:	;asignar espacios en negro
     134.  00:81A0  77                  	LD		(HL), A			;0 posición mapa tiles para nada (es transparente pero el fondo es negro)
     135.  00:81A1  23                  	INC		HL
     136.  00:81A2  10 FC               	DJNZ	loop_buffer_reliquias_negro
     137.  00:81A4                      
     138.  00:81A4                      	;2-pinto las cruces según el n de reliquias
     139.  00:81A4  21 C3 A9            	LD		HL, array_aux_reliquias
     140.  00:81A7  3A B7 A9            	LD		 A, (prota_reliquias)
     141.  00:81AA  B7                  	OR		 A
     142.  00:81AB  C8                  	RET		 Z
     143.  00:81AC  47                  	LD		 B, A
     144.  00:81AD                      loop_buffer_reliquias: ;asignar reliquias
     145.  00:81AD  36 11               	LD		(HL), POSRELIMAP	;17 posición mapa tiles para reliquia
     146.  00:81AF  23                  	INC		HL
     147.  00:81B0  10 FB               	DJNZ	loop_buffer_reliquias
     148.  00:81B2                      fin_actualiza_buffer_reliquias:
     149.  00:81B2  C9                  	RET
     150.  00:81B3                      
     151.  00:81B3                      
     152.  00:81B3                      
     153.  00:81B3                      ;;=====================================================
     154.  00:81B3                      ;;LOCALIZA_INFO_HABITACION
     155.  00:81B3                      ;;=====================================================	
     156.  00:81B3                      ; función: 	busca las puertas que hay que pintar egún la posición del usuario y las pone en habitacion_actual
     157.  00:81B3                      ; entrada: 	prota.pos_mapy, prota.pos_mapx, prota_nivel habitaciones_juego
     158.  00:81B3                      ; salida: 	habitacion_actual
     159.  00:81B3                      ; toca:		todo
     160.  00:81B3                      ;ejemplo: nivel 4, posy 5 y posx 3
     161.  00:81B3                      ;3 + 5 x 8 + 4 x 49
     162.  00:81B3                      localiza_info_habitacion:
     163.  00:81B3                      	;~ PUSH	AF
     164.  00:81B3                      	;~ PUSH	BC
     165.  00:81B3                      	;~ PUSH	DE
     166.  00:81B3                      	;~ PUSH	HL
     167.  00:81B3                      
     168.  00:81B3                      ;primera posición: me coloco en la columna correcta
     169.  00:81B3  21 8C A6            	LD		HL, habitaciones_juego
     170.  00:81B6                      .situo_columna:	
     171.  00:81B6  3A B8 A9            	LD		 A, (prota_pos_mapx)
     172.  00:81B9  CB 27               	SLA		 A				;multiplico por dos ya que cada habitación va de dos en dos bytes
     173.  00:81BB  06 00               	LD		 B, 0
     174.  00:81BD  4F                  	LD		 C, A
     175.  00:81BE  09                  	ADD 	HL, BC			;sumo a la posición 0 la columnax2 en la que situarme
     176.  00:81BF                      	
     177.  00:81BF                      .situo_fila:
     178.  00:81BF  3A B9 A9            	LD		A, (prota_pos_mapy)
     179.  00:81C2  B7                  	OR	 	A
     180.  00:81C3  CA D0 81            	JP		Z, .situo_nivel	;si la fila es 0 no es necesario seguir operando en fila
     181.  00:81C6                      	
     182.  00:81C6  47                  	LD		B, A
     183.  00:81C7  AF                  	XOR		A
     184.  00:81C8                      .loop_suma_fila:
     185.  00:81C8  C6 10               	ADD		16				;cada fila tiene 16 bytes
     186.  00:81CA  10 FC               	DJNZ	.loop_suma_fila
     187.  00:81CC                      	
     188.  00:81CC  06 00               	LD		 B, 0
     189.  00:81CE  4F                  	LD		 C, A
     190.  00:81CF                      
     191.  00:81CF  09                  	ADD 	HL, BC			;sumo a la columna 16 x filas para situarme en la fila correcta
     192.  00:81D0                      
     193.  00:81D0                      .situo_nivel:
     194.  00:81D0  3A B5 A9            	LD		 A, (prota_nivel)
     195.  00:81D3  B7                  	OR	 	 A
     196.  00:81D4  CA E4 81            	JP		 Z, .actualiza_variable_habitacion	;si el nivel es 0 al pasar por las anterirores ya estoy situado actualizo la variable y termino
     197.  00:81D7                      	
     198.  00:81D7  E5                  	PUSH	HL				;guardo el resultado intermedio
     199.  00:81D8                      	
     200.  00:81D8  47                  	LD		 B, A			;preparo la varible del bucle
     201.  00:81D9  11 70 00            	LD		DE, 112			;112 = 16x42 son los bytes de cada matriz-nivel
     202.  00:81DC  21 00 00            	LD		HL, 0
     203.  00:81DF                      .loop_suma_nivel:
     204.  00:81DF  19                  	ADD		HL, DE
     205.  00:81E0  10 FD               	DJNZ	.loop_suma_nivel
     206.  00:81E2                      	
     207.  00:81E2  D1                  	POP		DE				;devuelvo el resultado intermedio en DE que ya no lo necesito
     208.  00:81E3                      	
     209.  00:81E3  19                  	ADD		HL, DE			;sumo el resultado del nivel al resultado intermedio anterior
     210.  00:81E4                      	
     211.  00:81E4                      .actualiza_variable_habitacion
     212.  00:81E4  7E                  	LD		 A, (HL)
     213.  00:81E5  32 87 A6            	LD		(habitacion_actual), A
     214.  00:81E8                      	
     215.  00:81E8                      	;actualizo la variable habitacion_actual y su puntero para poder modificar por si se vuelve a pasar por ahí
     216.  00:81E8  DD 21 89 A6         	LD		IX, habitacion_actual_puntero
     217.  00:81EC  DD 74 00            	LD		(IX), H
     218.  00:81EF  DD 75 01            	LD		(IX + 1), L
     219.  00:81F2                      	
     220.  00:81F2                      	;actualizo la variable is_habitacion_terminada
     221.  00:81F2  3A 87 A6            	LD		 A, (habitacion_actual)
     222.  00:81F5  E6 10               	AND		00010000b					;me interresa sólo el bit 4 (si la habitación ha sido recorrida)
     223.  00:81F7                      [4]	SRA		 A
     223.  00:81F7  CB 2F CB 2F CB 2F CB 2F 
     224.  00:81FF  32 8B A6            	LD		(is_habitacion_terminada), A
     225.  00:8202                      	
     226.  00:8202                      	;actualizo la variable habitacion_extras
     227.  00:8202  23                  	INC		HL				;el byte de los extras está antes de donde se especifican las puertas
     228.  00:8203  7E                  	LD		 A, (HL)
     229.  00:8204  32 88 A6            	LD		(habitacion_extras), A
     230.  00:8207                      
     231.  00:8207                      	;~ POP		HL	
     232.  00:8207                      	;~ POP		DE
     233.  00:8207                      	;~ POP		BC
     234.  00:8207                      	;~ POP		AF
     235.  00:8207                      fin_localiza_info_habitacion:
     236.  00:8207  C9                  	RET
     237.  00:8208                      	
     238.  00:8208                      
     239.  00:8208                      ;;=====================================================
     240.  00:8208                      ;;TERMINADA_HABIACION_RECORRIDA
     241.  00:8208                      ;;=====================================================	
     242.  00:8208                      ; función: 	usando la variable prota_pos_mapx pone un 1 a donde apunta habitacion_recorrida (el array... byte 14 de 
     243.  00:8208                      ;			habitaciones recorridas en esa fila) para ver si uestra enemigos o no y permita pasar por puertas
     244.  00:8208                      ; entrada: 	prota_pos_mapx, habitacion_recorrida
     245.  00:8208                      ; salida: 	habitacion_recorrida (byte 14 de la fila de habitaciones) actualizada con OR A (en A la habitacion)
     246.  00:8208                      ; toca:		IX, HL, AF
     247.  00:8208                      terminada_habitacion_recorrida:
     248.  00:8208  21 89 A6            		LD			HL, habitacion_actual_puntero
     249.  00:820B  7E                  		LD			 A, (HL)
     250.  00:820C  CB E7               		SET			 4, A
     251.  00:820E  77                  		LD			(HL), A
     252.  00:820F                      		
     253.  00:820F  3E 01               		LD			 A, HABTERMIN	;da igual qué bit mientras sea distinto de 0 pero se pone 1
     254.  00:8211  32 8B A6            		LD			(is_habitacion_terminada), A
     255.  00:8214                      		
     256.  00:8214                      		;este trozo no sirve de nada pero ya e quedo más tranquilo si lo pongo, por ser exacto y completo
     257.  00:8214                      		;no sirve porque se cambiará de habitación y se perderá/actualizará el dato
     258.  00:8214  3A 87 A6            		LD			 A, (habitacion_actual)
     259.  00:8217  CB E7               		SET			 4, A
     260.  00:8219  32 87 A6            		LD			(habitacion_actual), A
     261.  00:821C                      		
     262.  00:821C  3E 01               		LD			 A, 1					;1 es puerta activa y 0 no activa
     263.  00:821E  47                  		LD			 B, A
     264.  00:821F  C3 B6 88            		JP			activa_desactiva_puertas;se la pasa B que para activar necesita 1
     265.  00:8222                      fin_terminada_habitacion_recorrida:
     266.  00:8222                      
     267.  00:8222                      
     268.  00:8222                      
     269.  00:8222                      ;;=====================================================
     270.  00:8222                      ;;CAMBIO_HABITACION												*no terminada
     271.  00:8222                      ;;=====================================================	
     272.  00:8222                      ; función: 	actualiza elementos en pantalla cuando hay cambios en habitación
     273.  00:8222                      ;			fondo
     274.  00:8222                      ;			puertas
     275.  00:8222                      ;			ayudas
     276.  00:8222                      ;			imagenes
     277.  00:8222                      ;			mapa inferior
     278.  00:8222                      ;			enemigos
     279.  00:8222                      ; entrada: 	prota_pos_mapy, prota_pos_mapy, prota_nivel
     280.  00:8222                      ; salida: 	
     281.  00:8222                      cambio_habitacion:
     282.  00:8222  CD 75 82            		CALL	pinta_pantalla_completa
     283.  00:8225  CD AA 9B            		CALL	pinta_ayudas_habitacion
     284.  00:8228  CD C0 85            		CALL	pinta_extra_fondo
     285.  00:822B  CD 48 88            		CALL	pinta_puertas
     286.  00:822E                      	
     287.  00:822E  3E 13               		LD		 A, TILEPROTAM
     288.  00:8230  32 DA A9            		LD		(elemento_pintar_mapa), A
     289.  00:8233  CD AA 84            		CALL	posiciona_en_mapa		;se le pasa elemento_pintar_mapa (tile del prota) está el prota y prota.posx y posy
     290.  00:8236                      fin_cambio_habitacion:
     291.  00:8236  C9                  		RET
     292.  00:8237                      	
     293.  00:8237                      	
     294.  00:8237                      	
     295.  00:8237                      	
     296.  00:8237                      	
     297.  00:8237                      	
     298.  00:8237                      	
     299.  00:8237                      	
     300.  00:8237                      	
     301.  00:8237                      	
     302.  00:8237                      	
     303.  00:8237                      	
     304.  00:8237                      	
     305.  00:8237                      	
     306.  00:8237                      	
     307.  00:8237                      	
     300   00:8237                      	
     301   00:8237                      	include "subr_general.asm"
       1.  00:8237                      ;;=====================================================
       2.  00:8237                      ;;DEFINICIÓN DE SUBRUTINAS GENERALES USABLES PARA CUALQUIER PROYECTO
       3.  00:8237                      ;;=====================================================	
       4.  00:8237                      
       5.  00:8237                      ;;=====================================================
       6.  00:8237                      ;;SUMA_A_BC
       7.  00:8237                      ;;=====================================================	
       8.  00:8237                      ; función: 	suma A a BC por si da más de 255
       9.  00:8237                      ; entrada: 	A, BC
      10.  00:8237                      ; salida: 	A + BC
      11.  00:8237                      ; toca:		A, BC
      12.  00:8237                      suma_A_BC:
      13.  00:8237  81                  	ADD		 C
      14.  00:8238  4F                  	LD		 C, A
      15.  00:8239  88                  	ADC		 B
      16.  00:823A  91                  	SUB		 C
      17.  00:823B  47                  	LD		 B, A
      18.  00:823C                      fin_suma_A_BC:
      19.  00:823C  C9                  	RET
      20.  00:823D                      	
      21.  00:823D                      ;;=====================================================
      22.  00:823D                      ;;SUMA_A_HL
      23.  00:823D                      ;;=====================================================	
      24.  00:823D                      ; función: 	suma A a BC por si da más de 255
      25.  00:823D                      ; entrada: 	A, HL
      26.  00:823D                      ; salida: 	A + HL
      27.  00:823D                      ; toca:		A, HL
      28.  00:823D                      suma_A_HL:
      29.  00:823D  85                  	ADD		 L
      30.  00:823E  6F                  	LD		 L, A
      31.  00:823F  8C                  	ADC		 H
      32.  00:8240  95                  	SUB		 L
      33.  00:8241  67                  	LD		 H, A
      34.  00:8242                      fin_suma_A_HL:
      35.  00:8242  C9                  	RET
     302   00:8243                      	
     303   00:8243                      	include "subr_pintapantalla.asm"
       1.  00:8243                      ;;=====================================================
       2.  00:8243                      ;;DEFINICIÓN DE SUBRUTINAS
       3.  00:8243                      ;;=====================================================	
       4.  00:8243                      ;relacionadas con pintado en pantalla (y no sprites)
       5.  00:8243                      
       6.  00:8243                      
       7.  00:8243                      ;;=====================================================
       8.  00:8243                      ;;COLOR_PANTALLA
       9.  00:8243                      ;;=====================================================	
      10.  00:8243                      ; función: 	el equivalente en basic a color 15,1,1
      11.  00:8243                      ; entrada: 	HL	que apunta a un array de bytes con 3 bytes FORCLR, BAKCLR y BDRCLR
      12.  00:8243                      ; salida: 	-
      13.  00:8243                      ; toca: 	todo
      14.  00:8243                      color_pantalla:
      15.  00:8243  7E                  	LD		 A, (HL)			;FORCLR 
      16.  00:8244  32 E9 F3            	LD 		(FORCLR),A
      17.  00:8247  23                  	INC		HL
      18.  00:8248                      	
      19.  00:8248  7E                  	LD		 A, (HL)			;BAKCLR
      20.  00:8249  32 EA F3            	LD 		(BAKCLR),A
      21.  00:824C  23                  	INC		HL
      22.  00:824D                      	
      23.  00:824D  7E                  	LD		 A, (HL)
      24.  00:824E  32 EB F3            	LD 		(BDRCLR),A			;BDRCLR
      25.  00:8251  C3 62 00            	JP		CHGCLR 
      26.  00:8254                      fin_color_pantalla:
      27.  00:8254                      
      28.  00:8254                      
      29.  00:8254                      ;;=====================================================
      30.  00:8254                      ;;PREPARAPANTALLA
      31.  00:8254                      ;;=====================================================	
      32.  00:8254                      ; función: elimina clic cuando se pulsa tecla, cls, screen 2,2
      33.  00:8254                      ; entrada: -
      34.  00:8254                      ; salida: -
      35.  00:8254                      ; toca: si no son todos los regristros, casi todos
      36.  00:8254                      sub_preparapantalla:
      37.  00:8254                      	;toca A y Z
      38.  00:8254                      elimina_clic;
      39.  00:8254  AF                  	XOR		 A
      40.  00:8255  32 DB F3            	LD		(CLIKSW),A
      41.  00:8258                      fin_elimina_clic:
      42.  00:8258                      
      43.  00:8258                      	;toca A
      44.  00:8258                      limpia_pantalla:
      45.  00:8258  AF                  	XOR		 A
      46.  00:8259  CD C3 00            	CALL 	CLS
      47.  00:825C                      fin_limpia_pantalla:
      48.  00:825C                      
      49.  00:825C                      	;toca A y direcciones #F3E9/#F3EA/#F3EB, poner en HL array con 3 valores
      50.  00:825C  21 9C A9            	LD		HL, color_base
      51.  00:825F  CD 43 82            	CALL	color_pantalla
      52.  00:8262                      	
      53.  00:8262                      	;cambiamos a SCREEN 2,2 del BASIC
      54.  00:8262                      	;toca A
      55.  00:8262                      screen2:
      56.  00:8262  3E 02               	LD		 A, 2
      57.  00:8264  CD 5F 00            	CALL	CHGMOD			;selecciona screen 2
      58.  00:8267                      sprites_16_16:
      59.  00:8267  3A E0 F3            	LD		 A, (RG1SAV)
      60.  00:826A  F6 02               	OR		00000010b		;fuerza sprites de 16x16
      61.  00:826C  32 E0 F3            	LD		(RG1SAV), A		;no lo guardamos en la copia de variables del sistema
      62.  00:826F  47                  	LD		 B, A
      63.  00:8270  0E 01               	LD		 C, 1
      64.  00:8272  C3 47 00            	JP		WRTVDP			;opción alternativa de escribir las tres lineas siguientes
      65.  00:8275                      fin_sub_preparapantalla:
      66.  00:8275                      	
      67.  00:8275                      
      68.  00:8275                      ;;=====================================================
      69.  00:8275                      ;;PINTA_PANTALLA_COMPLETA
      70.  00:8275                      ;;=====================================================	
      71.  00:8275                      ; función: pinta el escenario, las 3 partes
      72.  00:8275                      ; entrada: -
      73.  00:8275                      ; salida: -
      74.  00:8275                      ; toca: si no son todos los regristros, casi todos
      75.  00:8275                      pinta_pantalla_completa:
      76.  00:8275  CD 7C 82            	CALL 	pinta_parte_superior_pantalla
      77.  00:8278                      	
      78.  00:8278  CD 9A 83            	CALL 	pinta_parte_inferior_pantalla	
      79.  00:827B                      fin_pinta_pantalla_completa:
      80.  00:827B  C9                  	RET
      81.  00:827C                      
      82.  00:827C                      
      83.  00:827C                      ;;=====================================================
      84.  00:827C                      ;;PINTA_PARTE_SUPERIOR_PANTALLA
      85.  00:827C                      ;;=====================================================	
      86.  00:827C                      ; función: pinta el escenario, los dos bancos superiores
      87.  00:827C                      ; entrada: -
      88.  00:827C                      ; salida: -
      89.  00:827C                      ; toca: si no son todos los regristros, casi todos
      90.  00:827C                      pinta_parte_superior_pantalla:
      91.  00:827C  3A B5 A9            	LD		 A, (prota_nivel)
      92.  00:827F  CA AD 82            	JP		 Z, .carga_nivel_0
      93.  00:8282  3D                  	DEC		 A
      94.  00:8283  3A B5 A9            	LD		 A, (prota_nivel)
      95.  00:8286  CA C8 82            	JP		 Z, .carga_nivel_1
      96.  00:8289  3D                  	DEC		 A
      97.  00:828A  3A B5 A9            	LD		 A, (prota_nivel)
      98.  00:828D  CA E3 82            	JP		 Z, .carga_nivel_2
      99.  00:8290  3D                  	DEC		 A
     100.  00:8291  3A B5 A9            	LD		 A, (prota_nivel)
     101.  00:8294  CA FE 82            	JP		 Z, .carga_nivel_3
     102.  00:8297  3D                  	DEC		 A
     103.  00:8298  3A B5 A9            	LD		 A, (prota_nivel)
     104.  00:829B  CA 19 83            	JP		 Z, .carga_nivel_4
     105.  00:829E  3D                  	DEC		 A
     106.  00:829F  3A B5 A9            	LD		 A, (prota_nivel)
     107.  00:82A2  CA 34 83            	JP		 Z, .carga_nivel_5
     108.  00:82A5  3D                  	DEC		 A
     109.  00:82A6  3A B5 A9            	LD		 A, (prota_nivel)
     110.  00:82A9  CA 4F 83            	JP		 Z, .carga_nivel_6
     111.  00:82AC  3D                  	DEC		 A
     112.  00:82AD                      	
     113.  00:82AD                      .carga_nivel_0:
     114.  00:82AD  21 1B AC            	LD		HL, tiles_patrones_nivel0
     115.  00:82B0  22 94 83            	LD		(tiles_patrones), HL
     116.  00:82B3  21 45 AE            	LD		HL, tiles_color_nivel0
     117.  00:82B6  22 96 83            	LD		(tiles_colores), HL
     118.  00:82B9  21 1B AC            	LD		HL, tiles_patrones_nivel0
     119.  00:82BC  22 94 83            	LD		(tiles_patrones), HL
     120.  00:82BF  21 B0 AE            	LD		HL, tiles_mapa_nivel0
     121.  00:82C2  22 98 83            	LD		(tiles_mapa), HL
     122.  00:82C5  C3 67 83            	JP		.fin_carga_niveles
     123.  00:82C8                      
     124.  00:82C8                      .carga_nivel_1:
     125.  00:82C8  21 E5 AE            	LD		HL, tiles_patrones_nivel1
     126.  00:82CB  22 94 83            	LD		(tiles_patrones), HL
     127.  00:82CE  21 9A B0            	LD		HL, tiles_color_nivel1
     128.  00:82D1  22 96 83            	LD		(tiles_colores), HL
     129.  00:82D4  21 E5 AE            	LD		HL, tiles_patrones_nivel1
     130.  00:82D7  22 94 83            	LD		(tiles_patrones), HL
     131.  00:82DA  21 E1 B0            	LD		HL, tiles_mapa_nivel1
     132.  00:82DD  22 98 83            	LD		(tiles_mapa), HL
     133.  00:82E0  C3 67 83            	JP		.fin_carga_niveles
     134.  00:82E3                      	
     135.  00:82E3                      .carga_nivel_2:
     136.  00:82E3  21 16 B1            	LD		HL, tiles_patrones_nivel2
     137.  00:82E6  22 94 83            	LD		(tiles_patrones), HL
     138.  00:82E9  21 CB B2            	LD		HL, tiles_color_nivel2
     139.  00:82EC  22 96 83            	LD		(tiles_colores), HL
     140.  00:82EF  21 16 B1            	LD		HL, tiles_patrones_nivel2
     141.  00:82F2  22 94 83            	LD		(tiles_patrones), HL
     142.  00:82F5  21 12 B3            	LD		HL, tiles_mapa_nivel2
     143.  00:82F8  22 98 83            	LD		(tiles_mapa), HL
     144.  00:82FB  C3 67 83            	JP		.fin_carga_niveles
     145.  00:82FE                      	
     146.  00:82FE                      .carga_nivel_3:
     147.  00:82FE  21 47 B3            	LD		HL, tiles_patrones_nivel3
     148.  00:8301  22 94 83            	LD		(tiles_patrones), HL
     149.  00:8304  21 FC B4            	LD		HL, tiles_color_nivel3
     150.  00:8307  22 96 83            	LD		(tiles_colores), HL
     151.  00:830A  21 47 B3            	LD		HL, tiles_patrones_nivel3
     152.  00:830D  22 94 83            	LD		(tiles_patrones), HL
     153.  00:8310  21 43 B5            	LD		HL, tiles_mapa_nivel3
     154.  00:8313  22 98 83            	LD		(tiles_mapa), HL
     155.  00:8316  C3 67 83            	JP		.fin_carga_niveles
     156.  00:8319                      	
     157.  00:8319                      .carga_nivel_4:
     158.  00:8319  21 78 B5            	LD		HL, tiles_patrones_nivel4
     159.  00:831C  22 94 83            	LD		(tiles_patrones), HL
     160.  00:831F  21 2D B7            	LD		HL, tiles_color_nivel4
     161.  00:8322  22 96 83            	LD		(tiles_colores), HL
     162.  00:8325  21 78 B5            	LD		HL, tiles_patrones_nivel4
     163.  00:8328  22 94 83            	LD		(tiles_patrones), HL
     164.  00:832B  21 74 B7            	LD		HL, tiles_mapa_nivel4
     165.  00:832E  22 98 83            	LD		(tiles_mapa), HL
     166.  00:8331  C3 67 83            	JP		.fin_carga_niveles
     167.  00:8334                      	
     168.  00:8334                      .carga_nivel_5:
     169.  00:8334  21 A9 B7            	LD		HL, tiles_patrones_nivel5
     170.  00:8337  22 94 83            	LD		(tiles_patrones), HL
     171.  00:833A  21 5E B9            	LD		HL, tiles_color_nivel5
     172.  00:833D  22 96 83            	LD		(tiles_colores), HL
     173.  00:8340  21 A9 B7            	LD		HL, tiles_patrones_nivel5
     174.  00:8343  22 94 83            	LD		(tiles_patrones), HL
     175.  00:8346  21 A5 B9            	LD		HL, tiles_mapa_nivel5
     176.  00:8349  22 98 83            	LD		(tiles_mapa), HL
     177.  00:834C  C3 67 83            	JP		.fin_carga_niveles
     178.  00:834F                      	
     179.  00:834F                      .carga_nivel_6:
     180.  00:834F  21 DA B9            	LD		HL, tiles_patrones_nivel6
     181.  00:8352  22 94 83            	LD		(tiles_patrones), HL
     182.  00:8355  21 8F BB            	LD		HL, tiles_color_nivel6
     183.  00:8358  22 96 83            	LD		(tiles_colores), HL
     184.  00:835B  21 DA B9            	LD		HL, tiles_patrones_nivel6
     185.  00:835E  22 94 83            	LD		(tiles_patrones), HL
     186.  00:8361  21 D6 BB            	LD		HL, tiles_mapa_nivel6
     187.  00:8364  22 98 83            	LD		(tiles_mapa), HL
     188.  00:8367                      ;	JP		.fin_carga niveles			;no necesario
     189.  00:8367                      .fin_carga_niveles:
     190.  00:8367                      
     191.  00:8367                      	;cargando banco 1
     192.  00:8367                      	;cargamos los patrones
     193.  00:8367  2A 94 83            	LD		HL, (tiles_patrones)
     194.  00:836A  11 00 00            	LD		DE, CHRTBL
     195.  00:836D  CD 27 9C            	CALL	depack_VRAM
     196.  00:8370                      	;cargamos los colores de los patrones
     197.  00:8370  2A 96 83            	LD		HL, (tiles_colores)
     198.  00:8373  11 00 20            	LD		DE, CLRTBL
     199.  00:8376  CD 27 9C            	CALL	depack_VRAM
     200.  00:8379                      	
     201.  00:8379                      	;cargando banco 2
     202.  00:8379                      	;cargamos los patrones
     203.  00:8379  2A 94 83            	LD		HL, (tiles_patrones)
     204.  00:837C  11 00 08            	LD		DE, CHRTBL + #0800
     205.  00:837F  CD 27 9C            	CALL	depack_VRAM	
     206.  00:8382                      	;cargamos los colores de los patrones
     207.  00:8382  2A 96 83            	LD		HL, (tiles_colores)
     208.  00:8385  11 00 28            	LD		DE, CLRTBL + #0800
     209.  00:8388  CD 27 9C            	CALL	depack_VRAM
     210.  00:838B                      	
     211.  00:838B                      	;cargamos mapa de pantalla banco 1 y 2
     212.  00:838B  2A 98 83            	LD		HL, (tiles_mapa)
     213.  00:838E  11 00 18            	LD		DE, TILMAP
     214.  00:8391  C3 27 9C            	JP		depack_VRAM
     215.  00:8394                      fin_pinta_parte_superior_pantalla:
     216.  00:8394  00 00               tiles_patrones:		DW	0
     217.  00:8396  00 00               tiles_colores:		DW	0
     218.  00:8398  00 00               tiles_mapa:			DW	0
     219.  00:839A                      
     220.  00:839A                      
     221.  00:839A                      ;;=====================================================
     222.  00:839A                      ;;PINTA_PARTE_INFERIOR_PANTALLA
     223.  00:839A                      ;;=====================================================	
     224.  00:839A                      ; función: pinta la parte inferior del escenario que es común
     225.  00:839A                      ; entrada: -
     226.  00:839A                      ; salida: -
     227.  00:839A                      ; toca: si no son todos los regristros, casi todos
     228.  00:839A                      pinta_parte_inferior_pantalla:
     229.  00:839A                      	;cangando banco 3
     230.  00:839A                      	;cargamos los patrones
     231.  00:839A  21 0B BC            	LD		HL,tiles_patrones_marcador
     232.  00:839D  11 00 10            	LD		DE,CHRTBL + #1000
     233.  00:83A0  CD 27 9C            	CALL	depack_VRAM	
     234.  00:83A3                      	;cargamos mapa de pantalla
     235.  00:83A3  21 8C BD            	LD		HL,tiles_mapa_marcador
     236.  00:83A6  11 00 1A            	LD		DE,TILMAP + #0200
     237.  00:83A9  CD 27 9C            	CALL	depack_VRAM
     238.  00:83AC                      	;cargamos los colores de los patrones
     239.  00:83AC  21 57 BD            	LD		HL,tiles_color_marcador
     240.  00:83AF  11 00 30            	LD		DE,CLRTBL + #1000
     241.  00:83B2  C3 27 9C            	JP		depack_VRAM
     242.  00:83B5                      fin_pinta_parte_inferior_pantalla:
     243.  00:83B5                      
     244.  00:83B5                      
     245.  00:83B5                      
     246.  00:83B5                      ;;=====================================================
     247.  00:83B5                      ;;PINTA_VIDAS
     248.  00:83B5                      ;;=====================================================	
     249.  00:83B5                      ; función: 	actualiza el mapa de tiles para que en el próximo refresco se pinten y actualiza_vidas
     250.  00:83B5                      ; entrada: 	array_aux_vidas
     251.  00:83B5                      ; salida: 	actualiza_vidas_sn
     252.  00:83B5                      ; toca:		todo
     253.  00:83B5                      pinta_vidas:
     254.  00:83B5  CD 81 81            	CALL	actualiza_marcador_vidas
     255.  00:83B8                      	
     256.  00:83B8  21 BB A9            	LD		HL, array_aux_vidas
     257.  00:83BB  11 48 1A            	LD		DE, TILMAP + POSVIDAS 	;inicio posición en el mapa de tiles de las vidas
     258.  00:83BE  01 08 00            	LD		BC, NMAXVIDREL			;hay 8 posiciones para vidas/reliquias o espacios en negro si no tiene 8 vidas/reliquias
     259.  00:83C1  C3 5C 00            	JP		LDIRVM
     260.  00:83C4                      fin_pinta_vidas:
     261.  00:83C4                      	
     262.  00:83C4                      	
     263.  00:83C4                      
     264.  00:83C4                      ;;=====================================================
     265.  00:83C4                      ;;PINTA_RELIQUIAS
     266.  00:83C4                      ;;=====================================================	
     267.  00:83C4                      ; función: 	actualiza el mapa de tiles para que en el próximo refresco se pinten y actualiza_reliquias
     268.  00:83C4                      ; entrada: 	array_aux_reliquias
     269.  00:83C4                      ; salida: 	-
     270.  00:83C4                      ; toca:		todo
     271.  00:83C4                      pinta_reliquias:
     272.  00:83C4  CD 9A 81            	CALL	actualiza_buffer_reliquias
     273.  00:83C7                      	
     274.  00:83C7  21 C3 A9            	LD		HL, array_aux_reliquias
     275.  00:83CA  11 C8 1A            	LD		DE, TILMAP + POSRELIQ 	;inicio posición en el mapa de tiles de las vidas
     276.  00:83CD  01 08 00            	LD		BC, NMAXVIDREL			;hay 8 posiciones para vidas/reliquias o espacios en negro si no tiene 8 vidas/reliquias
     277.  00:83D0  C3 5C 00            	JP		LDIRVM
     278.  00:83D3                      fin_pinta_reliquias:
     279.  00:83D3                      	
     280.  00:83D3                      
     281.  00:83D3                      
     282.  00:83D3                      	
     283.  00:83D3                      ;;=====================================================
     284.  00:83D3                      ;;PINTA_NIVEL
     285.  00:83D3                      ;;=====================================================	
     286.  00:83D3                      ; función: 	actualiza el nivel en la parte de puntuación
     287.  00:83D3                      ; entrada: 	prota_nivel
     288.  00:83D3                      ; salida: 	-
     289.  00:83D3                      ; toca:		HL,DE,BC
     290.  00:83D3                      pinta_nivel:	
     291.  00:83D3                      	;forma más avanzada sin llamada a la bios
     292.  00:83D3  01 B4 1A            	LD		BC,TILMAP + POSNIVEL ;posición en el mapa de tiles del tile de nivel
     293.  00:83D6  3A B5 A9            	LD		 A, (prota_nivel)	 ;seleccionando la pos del banco de tiles a poner en el mapa
     294.  00:83D9  C6 30               	ADD		'0'	
     295.  00:83DB  57                  	LD		 D, A
     296.  00:83DC                      	
     297.  00:83DC  C3 DF 83            	JP		pinta_tile_suelto
     298.  00:83DF                      fin_pinta_nivel:
     299.  00:83DF                      
     300.  00:83DF                      
     301.  00:83DF                      
     302.  00:83DF                      ;;=====================================================
     303.  00:83DF                      ;;PINTA_TILE_SUELTO
     304.  00:83DF                      ;;=====================================================	
     305.  00:83DF                      ; función: 	pinta al tile que digamos en D, en la posición BC
     306.  00:83DF                      ; entrada: 	BC (posición a pintar en el mapa),D (qué se va a pintar el esa posición)
     307.  00:83DF                      ; salida: 	-
     308.  00:83DF                      ; toca:		-
     309.  00:83DF                      pinta_tile_suelto:	
     310.  00:83DF  DB 99               	IN		 A,(REGEST)		;leer registro de estado (recomendado)
     311.  00:83E1  79                  	LD		 A,C			;primero byte bajo	
     312.  00:83E2  D3 99               	OUT		(REGEST),A
     313.  00:83E4  78                  	LD		 A,B			;después byte alto  ********************** preguntar a Fernando cómo que byte bajo es B
     314.  00:83E5  F6 40               	OR		1000000b		;+64
     315.  00:83E7  D3 99               	OUT		(REGEST),A
     316.  00:83E9                      	
     317.  00:83E9  7A                  	LD		A,D
     318.  00:83EA  D3 98               	OUT		(REGESCVDP),A	;escribe A en VRAM en la posición indicada por los dos OUT anteriores
     319.  00:83EC                      fin_pinta_tile_suelto:
     320.  00:83EC  C9                  	RET
     321.  00:83ED                      
     322.  00:83ED                      
     323.  00:83ED                      
     324.  00:83ED                      
     325.  00:83ED                      
     326.  00:83ED                      ;;=====================================================
     327.  00:83ED                      ;;MIRA_PINTA ENERGIA
     328.  00:83ED                      ;;=====================================================	
     329.  00:83ED                      ; función: 	actualiza el nivel de energia en la parte de puntuación
     330.  00:83ED                      ; nota:		el cuadrado más bajo de ejergía siempre estará pintado... se obviará
     331.  00:83ED                      ; entrada: 	prota.energia, array_aux_energia
     332.  00:83ED                      ; salida: 	-
     333.  00:83ED                      ; toca:		ninguno porque usa EXX
     334.  00:83ED                      
     335.  00:83ED                      ; nota importante... lo mismo interesa hacer esto con un array para comparar y un bucle
     336.  00:83ED                      
     337.  00:83ED                      mira_pinta_energia:
     338.  00:83ED  D9                  	EXX							;por si acaso guardo el contenido de HL (si veo que no es necesario guardarlo lo quito) uso esto en vez de push por el nº ciclos
     339.  00:83EE                      	
     340.  00:83EE  3A BA A9            	LD		 A,(prota_energia) 	;para las comparaciones A variable (actual) y B fijo (limites)
     341.  00:83F1                      
     342.  00:83F1  0E 00               	LD		 C,TILENEGRO		;para agilizar asignaciones en vez de un valor cte uso otro registro
     343.  00:83F3                      pinta_ener:
     344.  00:83F3                      pinta_ener_tile_8:
     345.  00:83F3  21 D2 A9            	LD		HL,ultimo_pos_array_aux_energia	;coloco puntero en array e iré decrementando
     346.  00:83F6  06 D9               	LD		 B,TILEENERG8
     347.  00:83F8  B8                  	CP		 B
     348.  00:83F9  38 04               	JR		C,pinta_ener_tile_8_negro
     349.  00:83FB  36 0E               	LD		(HL),TILEMAPVERD
     350.  00:83FD  18 01               	JR		pinta_ener_tile_7
     351.  00:83FF                      pinta_ener_tile_8_negro:
     352.  00:83FF  71                  	LD		(HL),C
     353.  00:8400                      
     354.  00:8400                      pinta_ener_tile_7:
     355.  00:8400  2B                  	DEC		HL
     356.  00:8401  06 BA               	LD		 B,TILEENERG7
     357.  00:8403  B8                  	CP		 B
     358.  00:8404  38 04               	JR		C,pinta_ener_tile_7_negro
     359.  00:8406  36 0E               	LD		(HL),TILEMAPVERD
     360.  00:8408  18 01               	JR		pinta_ener_tile_6
     361.  00:840A                      pinta_ener_tile_7_negro:
     362.  00:840A  71                  	LD		(HL),C
     363.  00:840B                      
     364.  00:840B                      pinta_ener_tile_6:
     365.  00:840B  2B                  	DEC		HL
     366.  00:840C  06 9B               	LD		 B,TILEENERG6
     367.  00:840E  B8                  	CP		 B
     368.  00:840F  38 04               	JR		C,pinta_ener_tile_6_negro
     369.  00:8411  36 0E               	LD		(HL),14
     370.  00:8413  18 01               	JR		pinta_ener_tile_5
     371.  00:8415                      pinta_ener_tile_6_negro:
     372.  00:8415  71                  	LD		(HL),C
     373.  00:8416                      
     374.  00:8416                      pinta_ener_tile_5:
     375.  00:8416  2B                  	DEC		HL
     376.  00:8417  06 7C               	LD		 B,TILEENERG5
     377.  00:8419  B8                  	CP		 B
     378.  00:841A  38 04               	JR		C,pinta_ener_tile_5_negro
     379.  00:841C  36 0E               	LD		(HL),TILEMAPVERD
     380.  00:841E  18 01               	JR		pinta_ener_tile_4
     381.  00:8420                      pinta_ener_tile_5_negro:
     382.  00:8420  71                  	LD		(HL),C
     383.  00:8421                      
     384.  00:8421                      pinta_ener_tile_4:
     385.  00:8421  2B                  	DEC		HL
     386.  00:8422  06 5D               	LD		 B,TILEENERG4
     387.  00:8424  B8                  	CP		 B
     388.  00:8425  38 04               	JR		C,pinta_ener_tile_4_negro
     389.  00:8427  36 0F               	LD		(HL),TILEMAPAMAR
     390.  00:8429  18 01               	JR		pinta_ener_tile_3
     391.  00:842B                      pinta_ener_tile_4_negro:
     392.  00:842B  71                  	LD		(HL),C
     393.  00:842C                      	
     394.  00:842C                      pinta_ener_tile_3:
     395.  00:842C  2B                  	DEC		HL
     396.  00:842D  06 3E               	LD		 B,TILEENERG3
     397.  00:842F  B8                  	CP		 B
     398.  00:8430  38 04               	JR		C,pinta_ener_tile_3_negro
     399.  00:8432  36 0F               	LD		(HL),TILEMAPAMAR
     400.  00:8434  18 01               	JR		pinta_ener_tile_2
     401.  00:8436                      pinta_ener_tile_3_negro:
     402.  00:8436  71                  	LD		(HL),C
     403.  00:8437                      
     404.  00:8437                      pinta_ener_tile_2:
     405.  00:8437  2B                  	DEC		HL
     406.  00:8438  06 1F               	LD		 B,TILEENERG2
     407.  00:843A  B8                  	CP		 B
     408.  00:843B  38 04               	JR		C,pinta_ener_tile_2_negro
     409.  00:843D  36 10               	LD		(HL),TILEMAPROJO
     410.  00:843F  18 01               	JR		fin_mira_pinta_energia		;siempre estará pintado el cuadro mínimo
     411.  00:8441                      pinta_ener_tile_2_negro:
     412.  00:8441  71                  	LD		(HL),C
     413.  00:8442                      
     414.  00:8442                      fin_mira_pinta_energia:
     415.  00:8442  D9                  	EXX
     416.  00:8443  C9                  	RET
     417.  00:8444                      
     418.  00:8444                      
     419.  00:8444                      ;;=====================================================
     420.  00:8444                      ;;PINTA_ENERGIA
     421.  00:8444                      ;;=====================================================	
     422.  00:8444                      ; función: 	actualiza el mapa de tiles para que en el próximo refresco se pinte la barra de energia actual
     423.  00:8444                      ; entrada: 	array_aux_energia
     424.  00:8444                      ; toca:		todo
     425.  00:8444                      pinta_energia:
     426.  00:8444  CD ED 83            	CALL	mira_pinta_energia
     427.  00:8447                      	
     428.  00:8447  21 CB A9            	LD		HL, array_aux_energia
     429.  00:844A  11 88 1A            	LD		DE, TILMAP + POSENERG 	;inicio posición en el mapa de tiles de las vidas
     430.  00:844D  01 08 00            	LD		BC, NMAXVIDREL			;hay 8 posiciones para vidas/reliquias o espacios en negro si no tiene 8 vidas/reliquias
     431.  00:8450  C3 5C 00            	JP		LDIRVM
     432.  00:8453                      fin_pinta_energia:
     433.  00:8453                      
     434.  00:8453                      
     435.  00:8453                      
     436.  00:8453                      ;;=====================================================
     437.  00:8453                      ;;BORRA_MAPA
     438.  00:8453                      ;;=====================================================	
     439.  00:8453                      ; función: 	pone todas las habitaciones del mapa a negro (los tiles del mapa los rellena con un array a 0 - caracter en negro)
     440.  00:8453                      ; entrada: 	array_aux_mapa_limpiar
     441.  00:8453                      ; salida: 	-
     442.  00:8453                      ; toca:		AF
     443.  00:8453                      borra_mapa:
     444.  00:8453  D9                  	EXX
     445.  00:8454                      	
     446.  00:8454  21 D3 A9            	LD		HL,array_aux_mapa_limpiar
     447.  00:8457  11 F8 1A            	LD		DE,TILMAP + POSMAPLIN1 	;inicio posición en el mapa de tiles de la primera fila del mapa
     448.  00:845A  01 07 00            	LD		BC,NHABNIVEL			;cada nivel son 7 filas con 7 habitaciones "posibles"
     449.  00:845D  CD 5C 00            	CALL	LDIRVM
     450.  00:8460                      	
     451.  00:8460  21 D3 A9            	LD		HL,array_aux_mapa_limpiar
     452.  00:8463  11 D8 1A            	LD		DE,TILMAP + POSMAPLIN2
     453.  00:8466  01 07 00            	LD		BC,NHABNIVEL
     454.  00:8469  CD 5C 00            	CALL	LDIRVM
     455.  00:846C                      
     456.  00:846C  21 D3 A9            	LD		HL,array_aux_mapa_limpiar
     457.  00:846F  11 B8 1A            	LD		DE,TILMAP + POSMAPLIN3
     458.  00:8472  01 07 00            	LD		BC,NHABNIVEL
     459.  00:8475  CD 5C 00            	CALL	LDIRVM
     460.  00:8478                      
     461.  00:8478  21 D3 A9            	LD		HL,array_aux_mapa_limpiar	
     462.  00:847B  11 98 1A            	LD		DE,TILMAP + POSMAPLIN4
     463.  00:847E  01 07 00            	LD		BC,NHABNIVEL
     464.  00:8481  CD 5C 00            	CALL	LDIRVM
     465.  00:8484                      
     466.  00:8484  21 D3 A9            	LD		HL,array_aux_mapa_limpiar	
     467.  00:8487  11 78 1A            	LD		DE,TILMAP + POSMAPLIN5
     468.  00:848A  01 07 00            	LD		BC,NHABNIVEL
     469.  00:848D  CD 5C 00            	CALL	LDIRVM
     470.  00:8490                      
     471.  00:8490  21 D3 A9            	LD		HL,array_aux_mapa_limpiar	
     472.  00:8493  11 58 1A            	LD		DE,TILMAP + POSMAPLIN6
     473.  00:8496  01 07 00            	LD		BC,NHABNIVEL
     474.  00:8499  CD 5C 00            	CALL	LDIRVM
     475.  00:849C                      
     476.  00:849C  21 D3 A9            	LD		HL,array_aux_mapa_limpiar	
     477.  00:849F  11 38 1A            	LD		DE,TILMAP + POSMAPLIN7
     478.  00:84A2  01 07 00            	LD		BC,NHABNIVEL
     479.  00:84A5  CD 5C 00            	CALL	LDIRVM
     480.  00:84A8                      	
     481.  00:84A8  D9                  	EXX
     482.  00:84A9                      fin_borra_mapa:
     483.  00:84A9  C9                  	RET
     484.  00:84AA                      
     485.  00:84AA                      
     486.  00:84AA                      
     487.  00:84AA                      
     488.  00:84AA                      
     489.  00:84AA                      
     490.  00:84AA                      
     491.  00:84AA                      ;;=====================================================
     492.  00:84AA                      ;;POSICIONA_EN_MAPA
     493.  00:84AA                      ;;=====================================================	
     494.  00:84AA                      ; función: 	en el mapa de marcadores de la derecha/abajo marca un cuadro en gris o con un muñeco
     495.  00:84AA                      ;			según el valor de prota.posición pinta entrá un muñeco y por donde vaya pasando el prota
     496.  00:84AA                      ;			quedará en gris
     497.  00:84AA                      ; entrada: 	elemento_pintar_mapa, prota_pos_mapy, prota_pos_mapx
     498.  00:84AA                      ; salida: 	-
     499.  00:84AA                      ; toca:		todos
     500.  00:84AA                      posiciona_en_mapa:
     501.  00:84AA                      	;#0238 es la posición en mapa de tiles de la esquina superior izquierda del mapa (569 en decimal)
     502.  00:84AA  21 38 1A            	LD		HL, TILMAP + POSMAPA;pos inicial
     503.  00:84AD                      	
     504.  00:84AD                      	;ahora se le calcula la fila a pintar ya que va de abajo a arriba y no como en el mapa + columna
     505.  00:84AD                      .sumar_fila:
     506.  00:84AD  3A B9 A9            	LD		 A, (prota_pos_mapy)
     507.  00:84B0  FE 01               	CP		 1
     508.  00:84B2  28 2A               	JR		 Z, .fila_1
     509.  00:84B4  3A B9 A9            	LD		 A, (prota_pos_mapy)
     510.  00:84B7  FE 02               	CP		 2
     511.  00:84B9  28 2A               	JR		 Z, .fila_2
     512.  00:84BB  3A B9 A9            	LD		 A, (prota_pos_mapy)
     513.  00:84BE  FE 03               	CP		 3
     514.  00:84C0  28 2A               	JR		 Z, .fila_3
     515.  00:84C2  3A B9 A9            	LD		 A, (prota_pos_mapy)
     516.  00:84C5  FE 04               	CP		 4
     517.  00:84C7  28 2A               	JR		 Z, .fila_4
     518.  00:84C9  3A B9 A9            	LD		 A, (prota_pos_mapy)
     519.  00:84CC  FE 05               	CP		 5
     520.  00:84CE  28 2A               	JR		 Z, .fila_5
     521.  00:84D0  3A B9 A9            	LD		 A, (prota_pos_mapy)
     522.  00:84D3  FE 06               	CP		 6
     523.  00:84D5  28 2A               	JR		 Z, .sumar_columna
     524.  00:84D7                      	;no consulto la 0 porque si no es ninguna de las anteriores es 0 y por tanto sería un jr fila_0
     525.  00:84D7                      	
     526.  00:84D7                      .fila_0:
     527.  00:84D7  11 C0 00            	LD		DE, 192
     528.  00:84DA  19                  	ADD		HL, DE			;nota: se que repito el ADD pero la otra opción es inicializar DE y ya tarda mucho la funicón (es por velicidad)
     529.  00:84DB  C3 01 85            	JP		.sumar_columna
     530.  00:84DE                      .fila_1:
     531.  00:84DE  11 A0 00            	LD		DE, 160
     532.  00:84E1  19                  	ADD		HL, DE
     533.  00:84E2  C3 01 85            	JP		.sumar_columna
     534.  00:84E5                      .fila_2:
     535.  00:84E5  11 80 00            	LD		DE, 128
     536.  00:84E8  19                  	ADD		HL, DE
     537.  00:84E9  C3 01 85            	JP		.sumar_columna
     538.  00:84EC                      .fila_3:
     539.  00:84EC  11 60 00            	LD		DE, 96
     540.  00:84EF  19                  	ADD		HL, DE
     541.  00:84F0  C3 01 85            	JP		.sumar_columna
     542.  00:84F3                      .fila_4:
     543.  00:84F3  11 40 00            	LD		DE, 64
     544.  00:84F6  19                  	ADD		HL, DE
     545.  00:84F7  C3 01 85            	JP		.sumar_columna
     546.  00:84FA                      .fila_5:
     547.  00:84FA  11 20 00            	LD		DE, 32
     548.  00:84FD  19                  	ADD		HL, DE
     549.  00:84FE  C3 01 85            	JP		.sumar_columna
     550.  00:8501                      .fila_6:
     551.  00:8501                      	;pongo fila_6 por poner ya que si es la fila 6 equiv. a primera fila del mapa y por tanto no suma fila
     552.  00:8501                      	
     553.  00:8501                      	
     554.  00:8501                      .sumar_columna:
     555.  00:8501  3A B8 A9            	LD 		 A, (prota_pos_mapx) ;POS X
     556.  00:8504  16 00               	LD		 D, 0
     557.  00:8506  5F                  	LD		 E, A
     558.  00:8507  19                  	ADD		HL, DE
     559.  00:8508                      	
     560.  00:8508                      	;resultado en BC para usar en la función pinta_tile_suelto
     561.  00:8508  44                  	LD		 B, H
     562.  00:8509  4D                  	LD		 C, L
     563.  00:850A                      	
     564.  00:850A                      	;terminado de fijar la coordenada recuperamos a para ver el tipo
     565.  00:850A  3A DA A9            	LD		 A, (elemento_pintar_mapa)
     566.  00:850D  FE 09               	CP		 TILEGRISM
     567.  00:850F  CA 17 85            	JP		 Z, pinta_pos_mapa_vacio
     568.  00:8512  16 13               	LD		 D, TILEPROTAM
     569.  00:8514  C3 19 85            	JP		fin_pinta_pos_mapa
     570.  00:8517                      pinta_pos_mapa_vacio:
     571.  00:8517  16 09               	LD		 D, TILEGRISM	
     572.  00:8519                      
     573.  00:8519                      fin_pinta_pos_mapa:
     574.  00:8519  C3 DF 83            	JP		pinta_tile_suelto
     575.  00:851C                      fin_posiciona_en_mapa:
     576.  00:851C                      
     577.  00:851C                      
     578.  00:851C                      
     579.  00:851C                      
     580.  00:851C                      ;;=====================================================
     581.  00:851C                      ;;EFECTO_IMAGEN_TIRA_RELIQUIA
     582.  00:851C                      ;;=====================================================	
     583.  00:851C                      ; función: 	hace que el fondo de la pantalla parpadee N veces
     584.  00:851C                      ; entrada: 	actualiza_reliquias_sn
     585.  00:851C                      ; salida: 	-
     586.  00:851C                      ; toca: 	todo
     587.  00:851C                      efecto_imagen_tira_reliquia:
     588.  00:851C  3E 14               	LD		 A, 20;RETARDOREL
     589.  00:851E  47                  	LD		 B, A
     590.  00:851F                      
     591.  00:851F                      .parpadea_fondo:
     592.  00:851F  C5                  	PUSH	BC
     593.  00:8520  21 9F A9            	LD		HL, color_bomba1
     594.  00:8523  CD 43 82            	CALL	color_pantalla
     595.  00:8526                      	
     596.  00:8526                      	;~ PUSH	BC
     597.  00:8526                      	;~ LD		 A, 255
     598.  00:8526                      	;~ LD		 B, A
     599.  00:8526                      ;~ .bucle_de_espera:
     600.  00:8526                      	;~ NOP
     601.  00:8526                      	;~ DJNZ	 .bucle_de_espera
     602.  00:8526                      	;~ POP		BC
     603.  00:8526  76                  	HALT
     604.  00:8527                      
     605.  00:8527                      	
     606.  00:8527  21 A2 A9            	LD		HL, color_bomba2
     607.  00:852A  CD 43 82            	CALL	color_pantalla
     608.  00:852D  C1                  	POP		BC
     609.  00:852E  10 EF               	DJNZ	.parpadea_fondo
     610.  00:8530                      	
     611.  00:8530  21 9C A9            	LD		HL, color_base
     612.  00:8533  C3 43 82            	JP		color_pantalla
     613.  00:8536                      fin_efecto_imagen_tira_reliquia:
     614.  00:8536                      
     615.  00:8536                      
     616.  00:8536                      
     617.  00:8536                      
     618.  00:8536                      ;=====================================================
     619.  00:8536                      ;;PINTA_ARRAY
     620.  00:8536                      ;;=====================================================	
     621.  00:8536                      ;;funcion:  (pinta el mismo tile) se le pasa un array con posiciones de tiles y coordenadas x e y y los pinta en screen 2
     622.  00:8536                      ;;entrada:	wordaux1 (pos inicio sc2 donde pintar) y wordaux2 (puntero al array a pintar), BC (posición en tilemap) , D filas y E columnas
     623.  00:8536                      ;;salida:	-
     624.  00:8536                      ;;importante: necesita de una variable wordaux1 tipo WD (wordaux1: 	DW	0)
     625.  00:8536                      ;; ejemplo llamada:
     626.  00:8536                      	;~ LD		HL,array_tiles					;guardo puntero al array a pintar (como psar por referencia)
     627.  00:8536                      	;~ LD		(wordaux2),HL					;en la variable wordaux2
     628.  00:8536                      	;~ LD		HL,SC2MAP + 256 + 32			;calcula posición en tilemap
     629.  00:8536                      	;~ LD		(wordaux1),HL					;guarda valor pos tilemap en wordaux1
     630.  00:8536                      	;~ LD		B,H								;coloca posición tilemap BC
     631.  00:8536                      	;~ LD		C,L
     632.  00:8536                      	;~ LD		D,2								;nº de filas ahora byteaux1
     633.  00:8536                      	;~ LD		E,3								;nº de columnas ahora byteaux2
     634.  00:8536                      	;~ CALL	pinta_array
     635.  00:8536                      
     636.  00:8536                      pinta_array:
     637.  00:8536  08                  	EX		AF, AF'
     638.  00:8537                      	
     639.  00:8537  3A 7A 85            	LD		 A, (byteaux1)
     640.  00:853A  57                  	LD		 D, A
     641.  00:853B  3A 7B 85            	LD		 A, (byteaux2)
     642.  00:853E  5F                  	LD		 E, A
     643.  00:853F                      	
     644.  00:853F  2A 76 85            	LD		HL, (wordaux1)
     645.  00:8542  44                  	LD		 B, H							;coloca posición tilemap BC
     646.  00:8543  4D                  	LD		 C, L
     647.  00:8544                      	
     648.  00:8544                      	;contamos con que la posición "global" en el tilemap está ya en BC
     649.  00:8544                      	;y el puntero al array a pintar en wordaux2 y la posición en tilemap sc2 en wordaux1
     650.  00:8544                      	;inicializa
     651.  00:8544  DB 99               	IN		 A,(REGEST)		;leer registro de estado (recomendado)
     652.  00:8546                      	
     653.  00:8546                      	;coloca puntero para pintar tile según BC
     654.  00:8546  79                  	LD		 A,C			;primero byte bajo	
     655.  00:8547  D3 99               	OUT		(REGEST),A
     656.  00:8549  78                  	LD		 A,B			;después byte alto  ********************** preguntar a Fernando cómo que byte bajo es B
     657.  00:854A  F6 40               	OR		1000000b		;+64
     658.  00:854C  D3 99               	OUT		(REGEST),A
     659.  00:854E                      
     660.  00:854E                      	
     661.  00:854E  2A 78 85            	LD		HL,(wordaux2)	;HL es lo que se pintará y le he pasado el puntero del array tilemap a pintar
     662.  00:8551                      .pa_pinta_fila:
     663.  00:8551  43                  	LD		 B,E
     664.  00:8552                      .pa_pinta_columnas: 		;finta la fila (pintando las columnas)
     665.  00:8552  7E                  	LD		 A,(HL)
     666.  00:8553  D3 98               	OUT		(REGESCVDP),A	;escribe A en VRAM en la posición indicada por los dos OUT anteriores
     667.  00:8555  23                  	INC		HL
     668.  00:8556  10 FA               	DJNZ	.pa_pinta_columnas
     669.  00:8558                      	
     670.  00:8558                      	;no es una solución elegante lo de repetir código pero queda claro
     671.  00:8558                      	;por si hay otra fila
     672.  00:8558  E5                  	PUSH	HL
     673.  00:8559  2A 76 85            	LD		HL,(wordaux1)
     674.  00:855C  01 20 00            	LD		BC,32
     675.  00:855F  09                  	ADD		HL,BC
     676.  00:8560  22 76 85            	LD		(wordaux1),HL
     677.  00:8563  44                  	LD		B,H
     678.  00:8564  4D                  	LD		C,L
     679.  00:8565  E1                  	POP		HL
     680.  00:8566                      	
     681.  00:8566  79                  	LD		 A,C			;primero byte bajo	
     682.  00:8567  D3 99               	OUT		(REGEST),A
     683.  00:8569  78                  	LD		 A,B			;después byte alto 
     684.  00:856A  F6 40               	OR		1000000b		;+64
     685.  00:856C  D3 99               	OUT		(REGEST),A
     686.  00:856E                      	
     687.  00:856E                      	;si hay otra fila repite
     688.  00:856E  15                  	DEC		 D
     689.  00:856F  7A                  	LD		 A,D		;¿hay otra fila?
     690.  00:8570  B7                  	OR		 A
     691.  00:8571  C4 51 85            	CALL	NZ,.pa_pinta_fila
     692.  00:8574                      	
     693.  00:8574  08                  	EX		AF, AF'
     694.  00:8575                      fin_pinta_array:
     695.  00:8575  C9                  	RET
     696.  00:8576                      ;;variables asocidas a la función pinta_array
     697.  00:8576                      ;; por de pronto la dejo aquí
     698.  00:8576  00 00               wordaux1:		DW	0	;almacena la posición en el tilemap 0 al 675
     699.  00:8578  00 00               wordaux2:		DW	0	;almacena puntero a array de tiles (posiciones en realidad) a pintar (posiciones repetidas en los 2 primeros bancos)
     700.  00:857A  00                  byteaux1:		DB	0	;nº filas Registro D
     701.  00:857B  00                  byteaux2:		DB	0	;nº columnas Registro E
     702.  00:857C                      
     703.  00:857C                      
     704.  00:857C                      
     705.  00:857C                      
     706.  00:857C                      ;;=====================================================
     707.  00:857C                      ;;INICIALIZA_ANTORCHAS
     708.  00:857C                      ;;=====================================================	
     709.  00:857C                      ; función: 	inicializa las variables de estructuras de las antorchas
     710.  00:857C                      ; entrada: 	antorchas, array_antorcha
     711.  00:857C                      ; salida: 	
     712.  00:857C                      ; toca:		HL, IX
     713.  00:857C                      inicializa_antorchas:
     714.  00:857C  DD 21 EC AA         	LD		IX, antorchas
     715.  00:8580  DD 36 00 00         	LD		(IX), INACTIVA
     716.  00:8584  21 F3 AA            	LD		HL, array_antorcha
     717.  00:8587  DD 74 01            	LD		(IX + 1), H
     718.  00:858A  DD 75 02            	LD		(IX + 2), L
     719.  00:858D  DD 36 03 88         	LD		(IX + 3), POSANTOR1
     720.  00:8591  DD 36 04 97         	LD		(IX + 4), POSANTOR2
     721.  00:8595  DD 36 05 00         	LD		(IX + 5), 0
     722.  00:8599  DD 36 06 FF         	LD		(IX + 6), RESETLLAMA
     723.  00:859D                      fin_inicializa_antorchas:
     724.  00:859D  C9                  	RET
     725.  00:859E                      
     726.  00:859E                      
     727.  00:859E                      ;;=====================================================
     728.  00:859E                      ;;INICIALIZA_esqueletos
     729.  00:859E                      ;;=====================================================	
     730.  00:859E                      ; función: 	inicializa las variables de estructuras de los esqueletos
     731.  00:859E                      ; entrada: 	esqueletos, array_esqueletos
     732.  00:859E                      ; salida: 	
     733.  00:859E                      ; toca:		HL, IX
     734.  00:859E                      inicializa_esqueletos:
     735.  00:859E  DD 21 F6 AA         	LD		IX, esqueletos
     736.  00:85A2  DD 36 00 00         	LD		(IX), INACTIVA
     737.  00:85A6  21 FD AA            	LD		HL, array_esqueleto
     738.  00:85A9  DD 74 01            	LD		(IX + 1), H
     739.  00:85AC  DD 75 02            	LD		(IX + 2), L
     740.  00:85AF  DD 36 03 88         	LD		(IX + 3), POSESQUEL1
     741.  00:85B3  DD 36 04 95         	LD		(IX + 4), POSESQUEL2
     742.  00:85B7  DD 36 05 00         	LD		(IX + 5), 0
     743.  00:85BB  DD 36 06 19         	LD		(IX + 6), RESETESQUEL
     744.  00:85BF                      fin_inicializa_esqueletos:
     745.  00:85BF  C9                  	RET
     746.  00:85C0                      	
     747.  00:85C0                      
     748.  00:85C0                      ;;=====================================================
     749.  00:85C0                      ;;PINTA_ANTORCHAS
     750.  00:85C0                      ;;=====================================================	
     751.  00:85C0                      ; función: 	pinta las antorchas con valores base
     752.  00:85C0                      ; entrada: 	antorchas, array_antorcha
     753.  00:85C0                      ; salida: 	
     754.  00:85C0                      ; toca:		HL
     755.  00:85C0                      pinta_extra_fondo:
     756.  00:85C0  DD 21 EC AA         	LD		IX, antorchas
     757.  00:85C4                      .examina_sihay_antorchas
     758.  00:85C4                      	;hay que pintarlas?
     759.  00:85C4  3A 88 A6            	LD		 A, (habitacion_extras)
     760.  00:85C7  CB 47               	BIT		 0, A
     761.  00:85C9  C2 D3 85            	JP		NZ, .hayantorchas			;si el bit 0 de extras es 0 no se pintan antorchas
     762.  00:85CC  DD 36 00 00         	LD		(IX), INACTIVA
     763.  00:85D0  C3 FC 85            	JP		.examina_sihay_esqueletos
     764.  00:85D3                      	
     765.  00:85D3                      .hayantorchas:
     766.  00:85D3  DD 36 00 01         	LD		(IX), ACTIVA
     767.  00:85D7                      	;pinta antorcha izquierdda
     768.  00:85D7  DD 66 01            	LD		 H, (IX + 1)
     769.  00:85DA  DD 6E 02            	LD		 L, (IX + 2)
     770.  00:85DD  22 78 85            	LD		(wordaux2), HL				;guarda pos array en wordaux2
     771.  00:85E0                      	
     772.  00:85E0  21 88 18            	LD		HL, TILMAP + POSANTOR1		;calcula posición en tilemap
     773.  00:85E3  22 76 85            	LD		(wordaux1), HL				;guarda valor pos tilemap en wordaux1
     774.  00:85E6                      
     775.  00:85E6  3E 03               	LD		 A, 3						;nº de filas	
     776.  00:85E8  32 7A 85            	LD		(byteaux1), A
     777.  00:85EB  3E 01               	LD		 A, 1						;nº de columnas
     778.  00:85ED  32 7B 85            	LD		(byteaux2), A				
     779.  00:85F0                      	
     780.  00:85F0  CD 36 85            	CALL	pinta_array
     781.  00:85F3                      	
     782.  00:85F3                      	;pinta antorcha derecha
     783.  00:85F3  21 97 18            	LD		HL, TILMAP + POSANTOR2		;calcula posición en tilemap
     784.  00:85F6  22 76 85            	LD		(wordaux1), HL				;guarda valor pos tilemap en wordaux1
     785.  00:85F9                      	
     786.  00:85F9  C3 36 85            	JP		pinta_array 				;no ecesita CALL ya que la subrutina termina aquí
     787.  00:85FC                      	
     788.  00:85FC                      .examina_sihay_esqueletos
     789.  00:85FC  DD 21 F6 AA         	LD		IX, esqueletos
     790.  00:8600                      	;hay que pintarlos?
     791.  00:8600  3A 87 A6            	LD		 A, (habitacion_actual)
     792.  00:8603  CB 6F               	BIT		 5, A
     793.  00:8605  C2 0D 86            	JP		NZ, .hayesqueletos			;si el bit 0 de extras es 0 no se pintan antorchas
     794.  00:8608  DD 36 00 00         	LD		(IX), INACTIVA
     795.  00:860C  C9                  	RET									;no hay que pintarlo. no hay que continuar
     796.  00:860D                      
     797.  00:860D                      .hayesqueletos
     798.  00:860D  DD 36 00 01         	LD		(IX), ACTIVA
     799.  00:8611                      	;pinta antorcha izquierdda
     800.  00:8611  DD 66 01            	LD		 H, (IX + 1)
     801.  00:8614  DD 6E 02            	LD		 L, (IX + 2)
     802.  00:8617  22 78 85            	LD		(wordaux2), HL				;guarda pos array en wordaux2
     803.  00:861A                      	
     804.  00:861A  21 88 18            	LD		HL, TILMAP + POSESQUEL1		;calcula posición en tilemap
     805.  00:861D  22 76 85            	LD		(wordaux1), HL				;guarda valor pos tilemap en wordaux1
     806.  00:8620                      
     807.  00:8620  3E 04               	LD		 A, 4						;nº de filas	
     808.  00:8622  32 7A 85            	LD		(byteaux1), A
     809.  00:8625  3E 03               	LD		 A, 3						;nº de columnas
     810.  00:8627  32 7B 85            	LD		(byteaux2), A				
     811.  00:862A                      	
     812.  00:862A  CD 36 85            	CALL	pinta_array
     813.  00:862D                      	
     814.  00:862D                      	;pinta antorcha derecha
     815.  00:862D  21 95 18            	LD		HL, TILMAP + POSESQUEL2		;calcula posición en tilemap
     816.  00:8630  22 76 85            	LD		(wordaux1), HL				;guarda valor pos tilemap en wordaux1
     817.  00:8633                      	
     818.  00:8633  C3 36 85            	JP		pinta_array 				;no ecesita CALL ya que la subrutina termina aquí
     819.  00:8636                      fin_pinta_extra_fondo:
     820.  00:8636  C9                  	RET
     821.  00:8637                      
     822.  00:8637                      
     823.  00:8637                      
     824.  00:8637                      ;;=====================================================
     825.  00:8637                      ;;ACTUALIZA_ELEMENTOS_FONDO
     826.  00:8637                      ;;=====================================================	
     827.  00:8637                      ; función: 	de los elementos que pueda haber en el fondo de la pared (pantalla) actualiza si procede
     828.  00:8637                      ;			actualmente: antorchas y a futuro esqueletos
     829.  00:8637                      ; entrada: 	
     830.  00:8637                      ; salida: 	
     831.  00:8637                      ; toca:		A
     832.  00:8637                      actualiza_elementos_fondo:
     833.  00:8637                      .examina_antorchas:
     834.  00:8637  DD 21 EC AA         	LD		IX, antorchas
     835.  00:863B  DD 7E 00            	LD		 A, (IX)
     836.  00:863E  B7                  	OR		 A
     837.  00:863F  CA 45 86            	JP 	 	 Z, .examina_esqueletos
     838.  00:8642                      	
     839.  00:8642  CD 51 86            	CALL	flip_llamas_antorchas
     840.  00:8645                      .examina_esqueletos:
     841.  00:8645  DD 21 F6 AA         	LD		IX, esqueletos
     842.  00:8649  DD 7E 00            	LD		 A, (IX)
     843.  00:864C  B7                  	OR		 A
     844.  00:864D  C8                  	RET	 	 Z
     845.  00:864E                      	
     846.  00:864E  C3 AE 86            	JP		flip_calavera_esqueletos
     847.  00:8651                      fin_actualiza_elementos_fondo:
     848.  00:8651                      
     849.  00:8651                      
     850.  00:8651                      
     851.  00:8651                      
     852.  00:8651                      ;;=====================================================
     853.  00:8651                      ;;FLIP_LLAMAS_ANTORCHAS
     854.  00:8651                      ;;=====================================================	
     855.  00:8651                      ; función: 	modifica las llamas de las antorchas con los tipos que hay
     856.  00:8651                      ; entrada: 	
     857.  00:8651                      ; salida: 	
     858.  00:8651                      ; toca:		
     859.  00:8651                      flip_llamas_antorchas:
     860.  00:8651  DD 21 EC AA         	LD		IX, antorchas
     861.  00:8655                      	;tiene que cambiar de llama?
     862.  00:8655  DD 7E 06            	LD		 A, (IX + 6)
     863.  00:8658  3D                  	DEC		 A
     864.  00:8659  DD 77 06            	LD		 (IX + 6), A
     865.  00:865C                      	;no
     866.  00:865C  C0                  	RET		NZ
     867.  00:865D                      	;si
     868.  00:865D  C5                  	PUSH	BC
     869.  00:865E  D5                  	PUSH	DE
     870.  00:865F                      	
     871.  00:865F  DD 36 06 FF         	LD		(IX + 6), RESETLLAMA	
     872.  00:8663                      	
     873.  00:8663                      	;qué llama toca?
     874.  00:8663  DD 7E 05            	LD		 A, (IX + 5)
     875.  00:8666  B7                  	OR		 A
     876.  00:8667  CA 8B 86            	JP		 Z, .llama_par
     877.  00:866A                      .llama_impar
     878.  00:866A                      	;cambio a llama par
     879.  00:866A  AF                   	XOR		 A
     880.  00:866B  DD 77 05            	LD		(IX + 5), A
     881.  00:866E                      	;pinto llamas
     882.  00:866E  01 00 18            	LD		BC, TILMAP
     883.  00:8671  3E 88               	LD		 A, POSANTOR1
     884.  00:8673  CD 37 82            	CALL	suma_A_BC
     885.  00:8676  16 C4               	LD		 D, MAPLLAMA1
     886.  00:8678  CD DF 83            	CALL	pinta_tile_suelto
     887.  00:867B                      	
     888.  00:867B  01 00 18            	LD		BC, TILMAP
     889.  00:867E  3E 97               	LD		 A, POSANTOR2
     890.  00:8680  CD 37 82            	CALL	suma_A_BC
     891.  00:8683  16 C5               	LD		 D, MAPLLAMA2
     892.  00:8685  CD DF 83            	CALL	pinta_tile_suelto	
     893.  00:8688  C3 AA 86            	JP		fin_flip_llamas_antorchas
     894.  00:868B                      	
     895.  00:868B                      .llama_par
     896.  00:868B                      	;cambio a llama par
     897.  00:868B  3E 01                	LD		 A, 1
     898.  00:868D  DD 77 05            	LD		(IX + 5), A
     899.  00:8690                      	;pinto llamas
     900.  00:8690  01 00 18            	LD		BC, TILMAP
     901.  00:8693  3E 88               	LD		 A, POSANTOR1
     902.  00:8695  CD 37 82            	CALL	suma_A_BC
     903.  00:8698  16 C5               	LD		 D, MAPLLAMA2
     904.  00:869A  CD DF 83            	CALL	pinta_tile_suelto
     905.  00:869D                      	
     906.  00:869D  01 00 18            	LD		BC, TILMAP
     907.  00:86A0  3E 97               	LD		 A, POSANTOR2
     908.  00:86A2  CD 37 82            	CALL	suma_A_BC
     909.  00:86A5  16 C4               	LD		 D, MAPLLAMA1
     910.  00:86A7  CD DF 83            	CALL	pinta_tile_suelto
     911.  00:86AA                      
     912.  00:86AA                      fin_flip_llamas_antorchas:
     913.  00:86AA                      	;restauro los balores de los registros tocados antes
     914.  00:86AA  D1                  	POP		DE
     915.  00:86AB  C1                  	POP		BC
     916.  00:86AC  F1                  	POP		AF
     917.  00:86AD                      
     918.  00:86AD  C9                  	RET
     919.  00:86AE                      
     920.  00:86AE                      
     921.  00:86AE                      ;;=====================================================
     922.  00:86AE                      ;;FLIP_CALAVERA_ESQUELETOS
     923.  00:86AE                      ;;=====================================================	
     924.  00:86AE                      ; función: 	modifica las calaveras de los esqueletos
     925.  00:86AE                      ; entrada: 	
     926.  00:86AE                      ; salida: 	
     927.  00:86AE                      ; toca:		TODOS.... muy importante DE
     928.  00:86AE                      flip_calavera_esqueletos:
     929.  00:86AE  DD 21 F6 AA         	LD		IX, esqueletos
     930.  00:86B2                      	
     931.  00:86B2                      	;tiene que cambiar de calavera?
     932.  00:86B2  DD 7E 06            	LD		 A, (IX + ESTRUCTURA_ESQUELETO.cont_sig_escena)
     933.  00:86B5  3D                  	DEC		 A
     934.  00:86B6  DD 77 06            	LD		 (IX + ESTRUCTURA_ESQUELETO.cont_sig_escena), A
     935.  00:86B9                      	;no
     936.  00:86B9  C0                  	RET		NZ
     937.  00:86BA                      	;si
     938.  00:86BA  DD 36 06 19         	LD		(IX + ESTRUCTURA_ESQUELETO.cont_sig_escena), RESETESQUEL		;resetea contador de nueve escena
     939.  00:86BE                      	
     940.  00:86BE  CD DC 86            	CALL	actualiza_escena_calavera
     941.  00:86C1                      
     942.  00:86C1                      	;pinto calaveras
     943.  00:86C1  01 00 18            	LD		BC, TILMAP
     944.  00:86C4  3E A9               	LD		 A, POSCALAVE1
     945.  00:86C6  CD 37 82            	CALL	suma_A_BC
     946.  00:86C9  D5                  	PUSH	DE
     947.  00:86CA  56                  	LD		 D, (HL)
     948.  00:86CB  CD DF 83            	CALL	pinta_tile_suelto
     949.  00:86CE                      	
     950.  00:86CE  01 00 18            	LD		BC, TILMAP
     951.  00:86D1  3E B6               	LD		 A, POSCALAVE2
     952.  00:86D3  CD 37 82            	CALL	suma_A_BC
     953.  00:86D6  E1                  	POP		HL
     954.  00:86D7  56                  	LD		 D, (HL)
     955.  00:86D8  C3 DF 83            	JP		pinta_tile_suelto	
     956.  00:86DB                      fin_flip_calavera_esqueletos:
     957.  00:86DB  00                  var_aux_calavera	DB	0;
     958.  00:86DC                      
     959.  00:86DC                      
     960.  00:86DC                      ;;=====================================================
     961.  00:86DC                      ;;ACTUALIZA_ESCENA_CALAVERA
     962.  00:86DC                      ;;=====================================================	
     963.  00:86DC                      ; función: 	modifica las siguiente calavera a mostrar
     964.  00:86DC                      ; entrada: 	
     965.  00:86DC                      ; salida: 	DE (iportante porque se usa fuera) y ESTRUCTURA_ESQUELETO.escena
     966.  00:86DC                      ; toca:		TODOS.... muy importante DE
     967.  00:86DC                      actualiza_escena_calavera:
     968.  00:86DC                      	;consulta_escena
     969.  00:86DC  DD 7E 05            	LD		 A, (IX + ESTRUCTURA_ESQUELETO.escena)
     970.  00:86DF  32 DB 86            	LD		(var_aux_calavera), A
     971.  00:86E2  B7                  	OR		 A
     972.  00:86E3  C2 E8 86            	JP		 NZ, .decrementa_escenas
     973.  00:86E6  3E 04               	LD		 A, RESETESCENAESQUEL
     974.  00:86E8                      .decrementa_escenas
     975.  00:86E8  3D                  	DEC		 A
     976.  00:86E9                      .fin_consulta_escena
     977.  00:86E9  DD 77 05            	LD		 (IX + ESTRUCTURA_ESQUELETO.escena), A
     978.  00:86EC                      	
     979.  00:86EC  21 09 AB            	LD		HL, lista_escenas_calavera
     980.  00:86EF  3A DB 86            	LD		 A, (var_aux_calavera)
     981.  00:86F2  CD 3D 82            	CALL	suma_A_HL
     982.  00:86F5                      	
     983.  00:86F5  54                  	LD		 D, H
     984.  00:86F6  5D                  	LD		 E, L
     985.  00:86F7                      fin_actualiza_escena_calavera:
     986.  00:86F7  C9                  	RET
     987.  00:86F8                      
     304   00:86F8                      	
     305   00:86F8                      	include "subr_puertas.asm"
       1.  00:86F8                      ;;=====================================================
       2.  00:86F8                      ;;SUBRUTINAS RELACIONADAS CON LAS PUERTAS
       3.  00:86F8                      ;;=====================================================
       4.  00:86F8                      
       5.  00:86F8                      
       6.  00:86F8                      ;;=====================================================
       7.  00:86F8                      ;;VARIABLES
       8.  00:86F8                      ;;=====================================================
       9.  00:86F8                      
      10.  00:86F8                      ;; arrays con mapa de tiles de las puertas
      11.  00:86F8                      array_puerta_arriba:
      12.  00:86F8  03 01 01 03         	DB	3,1,1,3
      13.  00:86FC  01 01 01 01         	DB	1,1,1,1
      14.  00:8700  01 01 01 01         	DB	1,1,1,1
      15.  00:8704  01 01 01 01         	DB	1,1,1,1
      16.  00:8708  01 01 01 01         	DB	1,1,1,1
      17.  00:870C                      
      18.  00:870C                      array_puerta_derecha:
      19.  00:870C  01 03 03            	DB	1,3,3
      20.  00:870F  01 01 03            	DB	1,1,3
      21.  00:8712  01 01 01            	DB	1,1,1
      22.  00:8715  01 01 01            	DB	1,1,1
      23.  00:8718  01 01 01            	DB	1,1,1
      24.  00:871B  02 01 01            	DB	2,1,1
      25.  00:871E  04 02 01            	DB	4,2,1
      26.  00:8721                      	
      27.  00:8721                      array_puerta_abajo:			
      28.  00:8721  01 01 01 01         	DB	1,1,1,1
      29.  00:8725                      
      30.  00:8725                      array_puerta_izquierda:
      31.  00:8725  03 03 01            	DB	3,3,1
      32.  00:8728  03 01 01            	DB	3,1,1
      33.  00:872B  01 01 01            	DB	1,1,1
      34.  00:872E  01 01 01            	DB	1,1,1
      35.  00:8731  01 01 01            	DB	1,1,1
      36.  00:8734  01 01 02            	DB	1,1,2
      37.  00:8737  01 02 04            	DB	1,2,4
      38.  00:873A                      
      39.  00:873A                      array_escalera:
      40.  00:873A                      	DB	5,5,5,5,5,5,5,5
      40.  00:873A  05 05 05 05 05 05 05 05 
      41.  00:8742                      	DB	5,0,0,0,1,1,1,5
      41.  00:8742  05 00 00 00 01 01 01 05 
      42.  00:874A                      	DB	5,0,0,0,1,1,1,5
      42.  00:874A  05 00 00 00 01 01 01 05 
      43.  00:8752                      	DB	5,0,0,6,6,6,6,5
      43.  00:8752  05 00 00 06 06 06 06 05 
      44.  00:875A                      	DB	5,0,6,6,6,6,6,5
      44.  00:875A  05 00 06 06 06 06 06 05 
      45.  00:8762                      	DB	5,6,6,6,6,6,6,5
      45.  00:8762  05 06 06 06 06 06 06 05 
      46.  00:876A                      
      47.  00:876A                      
      48.  00:876A                      
      49.  00:876A                      lista_puertas:
      50.  00:876A  00 (13)             puerta_arriba:		DS		ESTRUCTURA_PUERTA
      51.  00:8777  00 (13)             puerta_derecha:		DS		ESTRUCTURA_PUERTA
      52.  00:8784  00 (13)             puerta_abajo:		DS		ESTRUCTURA_PUERTA
      53.  00:8791  00 (13)             puerta_izquierda:	DS		ESTRUCTURA_PUERTA
      54.  00:879E                      
      55.  00:879E                      datos_puertas:
      56.  00:879E                      datos_escalera:
      57.  00:879E  00                  					DB		#00;0		; 0 no activa <>0 activo
      58.  00:879F  80                  					DB		#80;128		;punto x de la puerta para cuando se dispare encima
      59.  00:87A0  30                  					DB		#30;48		;punto y de la puerta para cuando se dispare encima
      60.  00:87A1  20                  					DB		#20;32		;radio x de la puerta para cuando se dispare encima
      61.  00:87A2  18                  					DB		#18;24		;radio y de la puerta para cuando se dispare encima
      62.  00:87A3  1E 88               					DW		accion_puerta_arriba;función para acción de cada tipo de puerta
      63.  00:87A5  3A 87               					DW		array_escalera		;puntero al array con los tiles de las puertas
      64.  00:87A7  6C 18               					DW		TILMAP + POSESCALERA
      65.  00:87A9  06                  					DB		6			;alto/filas
      66.  00:87AA  08                  					DB		8			;ancho/columnas
      67.  00:87AB                      
      68.  00:87AB                      datos_puerta_arriba:
      69.  00:87AB  00                  					DB		#00;0		;0 no activa <>0 activo
      70.  00:87AC  80                  					DB		#80;128		;punto x de la puerta para cuando se dispare encima
      71.  00:87AD  34                  					DB		#34;52		;punto y de la puerta para cuando se dispare encima
      72.  00:87AE  10                  					DB		#10;16		;radio x de la puerta para cuando se dispare encima
      73.  00:87AF  14                  					DB		#14;20		;radio y de la puerta para cuando se dispare encima
      74.  00:87B0  1E 88               					DW		accion_puerta_arriba	;función para acción de cada tipo de puerta
      75.  00:87B2  F8 86               					DW		array_puerta_arriba		;puntero al array con los tiles de las puertas
      76.  00:87B4  8E 18               					DW		TILMAP + POSPUERARRI
      77.  00:87B6  05                  					DB		5			;alto/filas
      78.  00:87B7  04                  					DB		4			;ancho/columnas
      79.  00:87B8                      
      80.  00:87B8                      datos_puerta_derecha:
      81.  00:87B8  00                  					DB		#00;0		;0 no activa <>0 activo
      82.  00:87B9  EC                  					DB		#EC;236		;punto x de la puerta para cuando se dispare encima
      83.  00:87BA  54                  					DB		#54;84		;punto y de la puerta para cuando se dispare encima
      84.  00:87BB  0C                  					DB		#0C;12		;radio x de la puerta para cuando se dispare encima
      85.  00:87BC  14                  					DB		#14;20		;radio y de la puerta para cuando se dispare encima
      86.  00:87BD  1E 88               					DW		accion_puerta_arriba	;función para acción de cada tipo de puerta
      87.  00:87BF  0C 87               					DW		array_puerta_derecha	;puntero al array con los tiles de las puertas
      88.  00:87C1  FC 18               					DW		TILMAP + POSPUERDERE
      89.  00:87C3  07                  					DB		7			;alto/filas
      90.  00:87C4  03                  					DB		3			;ancho/columnas
      91.  00:87C5                      					
      92.  00:87C5                      datos_puerta_abajo:
      93.  00:87C5  00                  					DB		#00;0		;0 no activa <>0 activo
      94.  00:87C6  80                  					DB		#80;128		;punto x de la puerta para cuando se dispare encima
      95.  00:87C7  7C                  					DB		#7C;124		;punto y de la puerta para cuando se dispare encima
      96.  00:87C8  05                  					DB		#05;5		;radio x de la puerta para cuando se dispare encima
      97.  00:87C9  10                  					DB		#10;16		;radio y de la puerta para cuando se dispare encima
      98.  00:87CA  1E 88               					DW		accion_puerta_arriba	;función para acción de cada tipo de puerta
      99.  00:87CC  21 87               					DW		array_puerta_abajo		;puntero al array con los tiles de las puertas
     100.  00:87CE  EE 19               					DW		TILMAP + POSPUERABAJ
     101.  00:87D0  01                  					DB		1			;alto/filas
     102.  00:87D1  04                  					DB		4			;ancho/columnas
     103.  00:87D2                      
     104.  00:87D2                      datos_puerta_izquierda:
     105.  00:87D2  00                  					DB		#00;0		;0 no activa <>0 activo
     106.  00:87D3  18                  					DB		#18;24		;punto x de la puerta para cuando se dispare encima
     107.  00:87D4  54                  					DB		#54;84		;punto y de la puerta para cuando se dispare encima
     108.  00:87D5  0C                  					DB		#0C;12		;radio x de la puerta para cuando se dispare encima
     109.  00:87D6  14                  					DB		#14;20		;radio y de la puerta para cuando se dispare encima
     110.  00:87D7  1E 88               					DW		accion_puerta_arriba	;función para acción de cada tipo de puerta
     111.  00:87D9  25 87               					DW		array_puerta_izquierda	;puntero al array con los tiles de las puertas
     112.  00:87DB  E1 18               					DW		TILMAP + POSPUERIZQU
     113.  00:87DD  07                  					DB		7			;alto/filas
     114.  00:87DE  03                  					DB		3			;ancho/columnas
     115.  00:87DF                      
     116.  00:87DF                      
     117.  00:87DF                      
     118.  00:87DF                      ;;=====================================================
     119.  00:87DF                      ;;SUBRUTINAS
     120.  00:87DF                      ;;=====================================================
     121.  00:87DF                      
     122.  00:87DF                      
     123.  00:87DF                      ;;=====================================================
     124.  00:87DF                      ;;INICIALIZA_PUERTAS
     125.  00:87DF                      ;;=====================================================	
     126.  00:87DF                      ; función: 	inicializa las variables de estructuras de ayuda del array lista_puertas
     127.  00:87DF                      ; entrada: 	*********************datos_delasdistintasayudas, variable estructura_ayuda_ayudaquesea
     128.  00:87DF                      ; salida: 	lista_ayudas
     129.  00:87DF                      ; toca:		-
     130.  00:87DF                      inicializa_puertas:
     131.  00:87DF  E5                  	PUSH	HL
     132.  00:87E0  C5                  	PUSH	BC
     133.  00:87E1  D5                  	PUSH	DE
     134.  00:87E2                      	
     135.  00:87E2                      	;inicializa puerta arriba
     136.  00:87E2  3A B9 A9            	LD		 A, (prota_pos_mapy)
     137.  00:87E5  FE 06               	CP		 6
     138.  00:87E7  CA F0 87            	JP		 Z,.pinta_escalera			;de tener que pintar algo arriba, se pinta escalera (fila 6) o puerta (fila <> 6)
     139.  00:87EA  21 AB 87            		LD		HL, datos_puerta_arriba	;origen
     140.  00:87ED  C3 F3 87            		JP		.cotinuamos_pintando_escalera_arriba
     141.  00:87F0                      .pinta_escalera
     142.  00:87F0  21 9E 87            		LD		HL, datos_escalera		;origen
     143.  00:87F3                      .cotinuamos_pintando_escalera_arriba
     144.  00:87F3  11 6A 87            	LD		DE, puerta_arriba			;destino
     145.  00:87F6  CD 18 88            	CALL	carga_datos_puerta
     146.  00:87F9                      	
     147.  00:87F9                      	;inicializa puerta derecha
     148.  00:87F9  21 B8 87            	LD		HL, datos_puerta_derecha	;origen
     149.  00:87FC  11 77 87            	LD		DE, puerta_derecha			;destino
     150.  00:87FF  CD 18 88            	CALL	carga_datos_puerta
     151.  00:8802                      	
     152.  00:8802                      	;inicializa puerta abajo
     153.  00:8802  21 C5 87            	LD		HL, datos_puerta_abajo		;origen
     154.  00:8805  11 84 87            	LD		DE, puerta_abajo			;destino
     155.  00:8808  CD 18 88            	CALL	carga_datos_puerta
     156.  00:880B                      	
     157.  00:880B                      	;inicializa puerta izquierda
     158.  00:880B  21 D2 87            	LD		HL, datos_puerta_izquierda	;origen
     159.  00:880E  11 91 87            	LD		DE, puerta_izquierda		;destino
     160.  00:8811  CD 18 88            	CALL	carga_datos_puerta
     161.  00:8814                      	
     162.  00:8814  D1                  	POP		DE
     163.  00:8815  C1                  	POP		BC
     164.  00:8816  E1                  	POP		HL
     165.  00:8817                      fin_inicializa_puertas:
     166.  00:8817  C9                  	RET
     167.  00:8818                      
     168.  00:8818                      
     169.  00:8818                      
     170.  00:8818                      ;;=====================================================
     171.  00:8818                      ;;CARGA_DATOS_PUERTA
     172.  00:8818                      ;;=====================================================	
     173.  00:8818                      ; función: 	carga los datos de la puerta de una variable con los datos de la puerta
     174.  00:8818                      ; entrada
     175.  00:8818                      ;  hl: origen de datos
     176.  00:8818                      ;  de: destino de datos
     177.  00:8818                      ; salida: 	-
     178.  00:8818                      ; toca:		HL, DE, BC
     179.  00:8818                      carga_datos_puerta:
     180.  00:8818  01 0D 00            	LD		BC, ESTRUCTURA_PUERTA ;bytes a mover (el nombre de la estructura equivale al tamaño de la estructura en bytes)
     181.  00:881B  ED B0               	LDIR
     182.  00:881D                      fin_carga_datos_puerta:
     183.  00:881D  C9                  	RET
     184.  00:881E                      
     185.  00:881E                      ;;=====================================================
     186.  00:881E                      ;;ACCION_PUERTA_ARRIBA
     187.  00:881E                      ;;=====================================================	
     188.  00:881E                      ; función: 	
     189.  00:881E                      ; entrada: 	
     190.  00:881E                      ; salida: 	
     191.  00:881E                      accion_puerta_arriba:
     192.  00:881E  21 B9 A9            	LD		 HL, prota_pos_mapy
     193.  00:8821  34                  	INC		 (HL)
     194.  00:8822                      
     195.  00:8822  CD 22 82            	CALL	cambio_habitacion
     196.  00:8825                      fin_accion_puerta_arriba:
     197.  00:8825  C9                  	RET
     198.  00:8826                      
     199.  00:8826                      
     200.  00:8826                      ;;=====================================================
     201.  00:8826                      ;;ACCION_PUERTA_DERECHA
     202.  00:8826                      ;;=====================================================	
     203.  00:8826                      ; función: 	
     204.  00:8826                      ; entrada: 	
     205.  00:8826                      ; salida: 	
     206.  00:8826                      accion_puerta_derecha:
     207.  00:8826  21 B8 A9            	LD		 HL, prota_pos_mapx
     208.  00:8829  34                  	INC		 (HL)
     209.  00:882A                      
     210.  00:882A  CD 22 82            	CALL	cambio_habitacion
     211.  00:882D                      fin_accion_puerta_derecha:
     212.  00:882D  C9                  	RET
     213.  00:882E                      	
     214.  00:882E                      
     215.  00:882E                      ;;=====================================================
     216.  00:882E                      ;;ACCION_PUERTA_ABAJO
     217.  00:882E                      ;;=====================================================	
     218.  00:882E                      ; función: 	
     219.  00:882E                      ; entrada: 	
     220.  00:882E                      ; salida: 	
     221.  00:882E                      accion_puerta_abajo:
     222.  00:882E                      
     223.  00:882E                      ;* examina si es la primera habitación para efecto de retirarse del juego
     224.  00:882E                      
     225.  00:882E  3A B9 A9            	LD		 A, (prota_pos_mapy)
     226.  00:8831  B7                  	OR		 A
     227.  00:8832  20 04               	JR		NZ, .decrementa_solo_habitacion
     228.  00:8834                      .decrementa_nivel
     229.  00:8834  2A B5 A9            	LD		HL, (prota_nivel)
     230.  00:8837  2B                  	DEC		HL
     231.  00:8838                      .decrementa_solo_habitacion
     232.  00:8838  21 B9 A9            	LD		HL, prota_pos_mapy
     233.  00:883B  35                  	DEC		(HL)
     234.  00:883C                      
     235.  00:883C  CD 22 82            	CALL	cambio_habitacion
     236.  00:883F                      fin_accion_puerta_abajo:
     237.  00:883F  C9                  	RET
     238.  00:8840                      	
     239.  00:8840                      	
     240.  00:8840                      ;;=====================================================
     241.  00:8840                      ;;ACCION_PUERTA_IZQUIERDA
     242.  00:8840                      ;;=====================================================	
     243.  00:8840                      ; función: 	
     244.  00:8840                      ; entrada: 	
     245.  00:8840                      ; salida: 	
     246.  00:8840                      accion_puerta_izquierda:
     247.  00:8840  21 B8 A9            	LD		 HL, prota_pos_mapx
     248.  00:8843  35                  	DEC		 (HL)
     249.  00:8844                      
     250.  00:8844  CD 22 82            	CALL	cambio_habitacion
     251.  00:8847                      fin_accion_puerta_izquierda:
     252.  00:8847  C9                  	RET
     253.  00:8848                      	
     254.  00:8848                      
     255.  00:8848                      ;;=====================================================
     256.  00:8848                      ;;PINTA_PUERTAS
     257.  00:8848                      ;;=====================================================	
     258.  00:8848                      ; función: 	examina A y mira si tiene que pintar puertas de los lados, arriba o abrajo o las escaleras (o no)
     259.  00:8848                      ; entrada: 	habitacion_actual 1 escalera 1 puerta arriba 1 pu der 1 pu aba 1 pu izq (si es 0 pinta pared)
     260.  00:8848                      ; salida: 	-
     261.  00:8848                      ; toca:		todo
     262.  00:8848                      pinta_puertas:
     263.  00:8848  CD 7C 82            	CALL	pinta_parte_superior_pantalla	;pinta pasillo y paredes
     264.  00:884B                      
     265.  00:884B  CD B3 81            	CALL	localiza_info_habitacion	;busca qué puertas debe pintar y lo mete en habitación_actual
     266.  00:884E                      	
     267.  00:884E  3A 87 A6            	LD		 A, (habitacion_actual)
     268.  00:8851  CB 5F               	BIT		 3, A
     269.  00:8853  C4 79 88            	CALL	nz, pinta_puerta_arr		;si es de la fila 7 los datos de la pueta de arriba serán los de una escalera
     270.  00:8856                      
     271.  00:8856  3A 87 A6            	LD		 A, (habitacion_actual)
     272.  00:8859  CB 57               	BIT		 2, A
     273.  00:885B  C4 83 88            	CALL	nz, pinta_puerta_der
     274.  00:885E                      
     275.  00:885E  3A 87 A6            	LD		 A, (habitacion_actual)
     276.  00:8861  CB 4F               	BIT		 1, A
     277.  00:8863  C4 6F 88            	CALL	nz, pinta_puerta_aba
     278.  00:8866                      
     279.  00:8866  3A 87 A6            	LD		 A, (habitacion_actual)
     280.  00:8869  CB 47               	BIT		 0, A
     281.  00:886B  C4 8D 88            	CALL	nz, pinta_puerta_izq
     282.  00:886E                      fin_pinta_puertas:
     283.  00:886E  C9                  	RET
     284.  00:886F                      
     285.  00:886F                      
     286.  00:886F                      ;;=====================================================
     287.  00:886F                      ;;PINTA_PUERTA_ABA
     288.  00:886F                      ;;=====================================================	
     289.  00:886F                      ; función: 	pinta la puerta de abajo
     290.  00:886F                      ; entrada: 	puerta_abajo
     291.  00:886F                      ; salida: 	-
     292.  00:886F                      ; toca:		A, HL,BC, DE
     293.  00:886F                      pinta_puerta_aba:
     294.  00:886F  DD 21 84 87         	LD		IX, puerta_abajo
     295.  00:8873  CD 97 88            	CALL	actualiza_variables_pinta_array
     296.  00:8876                      		
     297.  00:8876  C3 36 85            	JP		pinta_array
     298.  00:8879                      fin_pinta_puerta_aba:
     299.  00:8879                      
     300.  00:8879                      
     301.  00:8879                      ;;=====================================================
     302.  00:8879                      ;;PINTA_PUERTA_ARR
     303.  00:8879                      ;;=====================================================	
     304.  00:8879                      ; función: 	pinta la puerta de arriba
     305.  00:8879                      ; entrada: 	puerta_arriba
     306.  00:8879                      ; salida: 	-
     307.  00:8879                      ; toca:		IX
     308.  00:8879                      pinta_puerta_arr:
     309.  00:8879  DD 21 6A 87         	LD		IX, puerta_arriba
     310.  00:887D  CD 97 88            	CALL	actualiza_variables_pinta_array
     311.  00:8880                      	
     312.  00:8880  C3 36 85            	JP		pinta_array
     313.  00:8883                      fin_pinta_puerta_arr:
     314.  00:8883                      
     315.  00:8883                      
     316.  00:8883                      ;;=====================================================
     317.  00:8883                      ;;PINTA_PUERTA_DER
     318.  00:8883                      ;;=====================================================	
     319.  00:8883                      ; función: 	pinta la puerta de la derecha
     320.  00:8883                      ; entrada: 	puerta_derecha
     321.  00:8883                      ; salida: 	-
     322.  00:8883                      ; toca:		HL,BC, DE
     323.  00:8883                      pinta_puerta_der:
     324.  00:8883  DD 21 77 87         	LD		IX, puerta_derecha
     325.  00:8887  CD 97 88            	CALL	actualiza_variables_pinta_array
     326.  00:888A                      	
     327.  00:888A  C3 36 85            	JP		pinta_array
     328.  00:888D                      fin_pinta_puerta_der:
     329.  00:888D                      
     330.  00:888D                      	
     331.  00:888D                      ;;=====================================================
     332.  00:888D                      ;;PINTA_PUERTA_IZQ
     333.  00:888D                      ;;=====================================================	
     334.  00:888D                      ; función: 	pinta la puerta de la izquierda
     335.  00:888D                      ; entrada: 	puerta_izquierda
     336.  00:888D                      ; salida: 	-
     337.  00:888D                      ; toca:		HL,BC, DE
     338.  00:888D                      pinta_puerta_izq:
     339.  00:888D  DD 21 91 87         	LD		IX, puerta_izquierda
     340.  00:8891  CD 97 88            	CALL	actualiza_variables_pinta_array
     341.  00:8894                      	
     342.  00:8894  C3 36 85            	JP		pinta_array
     343.  00:8897                      fin_pinta_puerta_izq:
     344.  00:8897                      
     345.  00:8897                      
     346.  00:8897                      ;;=====================================================
     347.  00:8897                      ;;FIN_ACTUALIZA_VARIABLES_PINTA_ARRAY
     348.  00:8897                      ;;=====================================================	
     349.  00:8897                      ; función: 	como el código es el mismo en esta subrutia se actualizan los valores de wordaux2, wordaux1, byteaux1, byteaux2
     350.  00:8897                      ; entrada: 	IX apuntando a la estructura de una puerta
     351.  00:8897                      ; salida: 	-
     352.  00:8897                      ; toca:		A,HL,BC, DE
     353.  00:8897                      actualiza_variables_pinta_array:
     354.  00:8897  DD 6E 07            	LD		 L, (IX + ESTRUCTURA_PUERTA.tiles_puerta)	;guardo puntero al array a pintar (como pasar por referencia)
     355.  00:889A  DD 66 08            	LD		 H, (IX + ESTRUCTURA_PUERTA.tiles_puerta + 1)
     356.  00:889D  22 78 85            	LD		(wordaux2), HL						;en la variable wordaux2
     357.  00:88A0                      	
     358.  00:88A0  DD 6E 09            	LD		 L, (IX + ESTRUCTURA_PUERTA.pos_en_tilemap)	;guardo puntero al array a pintar (como pasar por referencia)
     359.  00:88A3  DD 66 0A            	LD		 H, (IX + ESTRUCTURA_PUERTA.pos_en_tilemap + 1)
     360.  00:88A6  22 76 85            	LD		(wordaux1), HL						;guarda valor pos tilemap en wordaux1
     361.  00:88A9                      	
     362.  00:88A9  DD 7E 0B            	LD		 A, (IX + ESTRUCTURA_PUERTA.alto)	;nº de filas
     363.  00:88AC  32 7A 85            	LD		(byteaux1), A
     364.  00:88AF                      	
     365.  00:88AF  DD 7E 0C            	LD		 A, (IX + ESTRUCTURA_PUERTA.ancho)	;nº de columnas
     366.  00:88B2  32 7B 85            	LD		(byteaux2), A
     367.  00:88B5                      fin_actualiza_variables_pinta_array:
     368.  00:88B5  C9                  	RET
     369.  00:88B6                      
     370.  00:88B6                      
     371.  00:88B6                      ;;=====================================================
     372.  00:88B6                      ;;ACTIVA_DESACTIVA_PUERTAS
     373.  00:88B6                      ;;=====================================================	
     374.  00:88B6                      ; función: 	coloca todas las puertas que haya pintadas en la habitación como activas o inactivas según B
     375.  00:88B6                      ; entrada: 	IX apuntando a la estructura de una puerta, habitacion_actual, B con 0 para desactivar las puertas indicadas en habitación actual o 1 para activarlas
     376.  00:88B6                      ; salida: 	-
     377.  00:88B6                      ; toca:		A, IX, B
     378.  00:88B6                      activa_desactiva_puertas:
     379.  00:88B6                      .mira_puerta_arriba	
     380.  00:88B6  3A 87 A6            	LD		 A, (habitacion_actual)
     381.  00:88B9  CB 5F               	BIT		 3, A
     382.  00:88BB  CA C5 88            	JP		 Z, .mira_puerta_derecha
     383.  00:88BE  DD 21 6A 87         	LD		IX, puerta_arriba
     384.  00:88C2  DD 70 00            	LD		(IX + ESTRUCTURA_PUERTA.activa), B
     385.  00:88C5                      
     386.  00:88C5                      .mira_puerta_derecha
     387.  00:88C5  3A 87 A6            	LD		 A, (habitacion_actual)
     388.  00:88C8  CB 57               	BIT		 2, A
     389.  00:88CA  CA D4 88            	JP		 Z, .mira_puerta_abajo
     390.  00:88CD  DD 21 6A 87         	LD		IX, puerta_arriba
     391.  00:88D1  DD 70 00            	LD		(IX + ESTRUCTURA_PUERTA.activa), B
     392.  00:88D4                      	
     393.  00:88D4                      .mira_puerta_abajo
     394.  00:88D4  3A 87 A6            	LD		 A, (habitacion_actual)
     395.  00:88D7  CB 4F               	BIT		 1, A
     396.  00:88D9  CA E3 88            	JP		 Z, .mira_puerta_izquierda
     397.  00:88DC  DD 21 6A 87         	LD		IX, puerta_arriba
     398.  00:88E0  DD 70 00            	LD		(IX + ESTRUCTURA_PUERTA.activa), B
     399.  00:88E3                      
     400.  00:88E3                      .mira_puerta_izquierda
     401.  00:88E3  3A 87 A6            	LD		 A, (habitacion_actual)
     402.  00:88E6  CB 47               	BIT		 0, A
     403.  00:88E8  CA F2 88            	JP		 Z, fin_activa_desactiva_puertas
     404.  00:88EB  DD 21 6A 87         	LD		IX, puerta_arriba
     405.  00:88EF  DD 70 00            	LD		(IX + ESTRUCTURA_PUERTA.activa), B
     406.  00:88F2                      fin_activa_desactiva_puertas:
     407.  00:88F2  C9                  	RET
     408.  00:88F3                      
     409.  00:88F3                      
     410.  00:88F3                      
     411.  00:88F3                      
     412.  00:88F3                      
     306   00:88F3                      	
     307   00:88F3                      	include "subr_sprites.asm"
       1.  00:88F3                      
       2.  00:88F3                      ;;=====================================================
       3.  00:88F3                      ;;SUBRUTINAS ENCARGADAS DE MANEJAR LOS SPRITES
       4.  00:88F3                      ;;=====================================================	
       5.  00:88F3                      
       6.  00:88F3                      
       7.  00:88F3                      ;; PREGUNTAR SI A FERNANDO SI ES MEJOR USAR LISTAS O ALGO PARA AHORRAR CÓDIGO
       8.  00:88F3                      
       9.  00:88F3                      
      10.  00:88F3                      
      11.  00:88F3                      
      12.  00:88F3                      ;;=====================================================
      13.  00:88F3                      ;;CARGA_PATRONES_SPRITES_NIVEL
      14.  00:88F3                      ;;=====================================================	
      15.  00:88F3                      ; función: 	examina el nivel y carga los patrones específicos necesarios
      16.  00:88F3                      ; entrada: 	-
      17.  00:88F3                      ; salida: 	-
      18.  00:88F3                      ; toca: 	-
      19.  00:88F3                      carga_patrones_sprites_nivel:
      20.  00:88F3  CD F7 88            	CALL 	carga_patrones_nivel_comunes
      21.  00:88F6                      	
      22.  00:88F6  C9                  	RET		;*********************
      23.  00:88F7                      	
      24.  00:88F7                      	
      25.  00:88F7                      	;POR AHORA ES TODO COMÚN ... CUANDO EL JUGADOR SE MUEVA LOS PATRONES SERÁN DEPENDIENDO DEL NIVEL
      26.  00:88F7                      	; O NO Y LO QUE SE HACE ES PERSONALIZAR LA PANTALLA USANDO LOS MISMOS PATRONES PERO PINTANDO DISTINTOS
      27.  00:88F7                      	; EN DISTINTOS SITIOS SEGÚN NIVEL
      28.  00:88F7                      	
      29.  00:88F7                      	;~ ;carga patrones no comunes
      30.  00:88F7                      	;~ LD		 A, (prota_nivel)
      31.  00:88F7                      	;~ OR		 A
      32.  00:88F7                      	;~ JP		 Z, carga_patrones_sprites_nivel donde esté el prota
      33.  00:88F7                      fin_carga_patrones_sprites_nivel:
      34.  00:88F7                      
      35.  00:88F7                      
      36.  00:88F7                      ;;=====================================================
      37.  00:88F7                      ;;CARGA_PATRONES_SPRITES_NIVEL_COMUNES
      38.  00:88F7                      ;;=====================================================	
      39.  00:88F7                      ; función: 	carga los patrones comunes en todos los niveles
      40.  00:88F7                      ; entrada: 	-
      41.  00:88F7                      ; salida: 	-
      42.  00:88F7                      ; toca: 	-
      43.  00:88F7                      carga_patrones_nivel_comunes:	
      44.  00:88F7  21 07 9D            	LD		HL, sprites_comunes
      45.  00:88FA  11 00 38            	LD		DE, SPRTBL
      46.  00:88FD  01 C0 00            	LD		BC, fin_sprites_comunes-sprites_comunes
      47.  00:8900  C3 5C 00            	JP		LDIRVM
      48.  00:8903                      fin_carga_patrones_nivel_comunes:
      49.  00:8903                      
      50.  00:8903                      
      51.  00:8903                      ;;=====================================================
      52.  00:8903                      ;;CARGA_PATRONES_SPRITES_NIVEL1
      53.  00:8903                      ;;=====================================================	
      54.  00:8903                      ; función: 	copia los patrones de los sprites que e van a usar en el nivel 1 en vram
      55.  00:8903                      ; entrada: 	-
      56.  00:8903                      ; salida: 	-
      57.  00:8903                      ; toca: 	-
      58.  00:8903                      carga_patrones_sprites_nivel1:
      59.  00:8903                      
      60.  00:8903                      	;~ ;sprite sprite_reliquia
      61.  00:8903                      	;~ LD		HL,sprite_reliquia
      62.  00:8903                      	;~ LD		DE,#3880
      63.  00:8903                      	;~ LD		BC,32				;32 bytes (sprites de 2 x 2)
      64.  00:8903                      	;~ CALL	LDIRVM
      65.  00:8903                      
      66.  00:8903                      fin_carga_patrones_sprites:
      67.  00:8903  C9                  	RET
      68.  00:8904                      
      69.  00:8904                      
      70.  00:8904                      ;;=====================================================
      71.  00:8904                      ;;ACTUALIZA_ARRAY_SPRITES_VRAM
      72.  00:8904                      ;;=====================================================	
      73.  00:8904                      ; función: 	copia el array con los valores de los sprites (pos, color, plano) en VRAM
      74.  00:8904                      ; entrada: 	-
      75.  00:8904                      ; salida: 	-
      76.  00:8904                      ; toca: 	todos los registros. Como me interesa la velocidad, si necesito copiar de algo lo hago fuera
      77.  00:8904                      render_sprites:
      78.  00:8904                      	;volcando el array con toda la info de los sprites a la zona de atributos de sprites
      79.  00:8904  21 0D AB            	LD		HL,array_sprites
      80.  00:8907  11 00 1B            	LD		DE,SPRART
      81.  00:890A  01 80 00            	LD		BC,4 * 32				;32 sprites x 4 bytes controlando el sprite (Y, X, plano, color)
      82.  00:890D  C3 5C 00            	JP		LDIRVM
      83.  00:8910                      fin_actualiza_array_sprites_vram:
      84.  00:8910                      
      85.  00:8910                      
      86.  00:8910                      ;;=====================================================
      87.  00:8910                      ;;VUELCA_RESULTADO_PUNTOMIRA_ARRAY
      88.  00:8910                      ;;=====================================================	
      89.  00:8910                      ; función: 	coloca los valores del punto de mira en la variable array_sprites para ser volcados en VRAM
      90.  00:8910                      ; entrada: 	array_sprites_pm, prota.XXXXX
      91.  00:8910                      ; salida: 	-
      92.  00:8910                      ; toca: 	-
      93.  00:8910                      vuelca_resultado_puntomira_array:
      94.  00:8910  DD 21 0D AB         	LD		IX, array_sprites_pm
      95.  00:8914                      	;posición y de los dos sprites que conforman el punto de mira
      96.  00:8914  3A A6 A9            	LD		 A, (prota.posy)
      97.  00:8917  DD 77 00            	LD		(IX  ), A
      98.  00:891A  DD 77 04            	LD		(IX+4), A
      99.  00:891D                      	;posición x de los dos sprites que conforman el punto de mira
     100.  00:891D  3A A5 A9            	LD		 A, (prota.posx)
     101.  00:8920  DD 77 01            	LD		(IX+1), A
     102.  00:8923  DD 77 05            	LD		(IX+5), A
     103.  00:8926                      	;plano
     104.  00:8926  DD 36 02 00         	LD		(IX+2), 0
     105.  00:892A  DD 36 06 04         	LD		(IX+6), 4	;al ser sprites de 16x16 hay que ir de 4 en 4
     106.  00:892E                      	;color
     107.  00:892E  3A A7 A9            	LD		 A, (prota.escena)
     108.  00:8931  B7                  	OR		 A
     109.  00:8932  C2 3E 89            	JP		NZ,.codigo_color_2
     110.  00:8935                      .codigo_color_1:
     111.  00:8935  DD 36 03 0F         	LD		(IX+3), COLBLANCO
     112.  00:8939  DD 36 07 08         	LD		(IX+7), COLROJO
     113.  00:893D  C9                  	RET
     114.  00:893E                      .codigo_color_2:
     115.  00:893E  DD 36 03 08         	LD		(IX+3), COLROJO
     116.  00:8942  DD 36 07 0F         	LD		(IX+7), COLBLANCO
     117.  00:8946  C9                  	RET
     118.  00:8947                      fin_vuelca_resultado_puntomira_array:
     119.  00:8947                      
     120.  00:8947                      
     121.  00:8947                      ;;=====================================================
     122.  00:8947                      ;;CHECK_PLAYER
     123.  00:8947                      ;;=====================================================	
     124.  00:8947                      ; función: 	MIRA EL CONTROL Y APLICA LA LOGICA DE MOVIMIENTO DEL PROTAGONISTA
     125.  00:8947                      ; entrada: 	-
     126.  00:8947                      ; salida: 	-
     127.  00:8947                      ; toca: 	A
     128.  00:8947                      check_player:
     129.  00:8947  CD E6 89            	CALL	update_controllers_status
     130.  00:894A  B7                  	OR		 A
     131.  00:894B  C8                  	RET		 Z						;si no se ha pulsado nada no se necesita mirar nada
     132.  00:894C                      
     133.  00:894C  CB 1F               	RR		 A
     134.  00:894E  DC 67 89            	CALL	 C, mueve_arriba
     135.  00:8951  CB 1F               	RR		 A
     136.  00:8953  DC 83 89            	CALL	 C, mueve_abajo
     137.  00:8956  CB 1F               	RR		 A
     138.  00:8958  DC 92 89            	CALL	 C, mueve_izquierda
     139.  00:895B  CB 1F               	RR		 A
     140.  00:895D  DC 74 89            	CALL	 C, mueve_derecha
     141.  00:8960                      	
     142.  00:8960                      	;zona para mirar disparo Recibe A que tendrá 0000 0 0 X-letra M X-espacio 
     143.  00:8960  CD 9F 89            	CALL	mira_disparo
     144.  00:8963                      
     145.  00:8963  C3 10 89            	JP		vuelca_resultado_puntomira_array
     146.  00:8966                      f;in_check_player:
     147.  00:8966  C9                  	RET
     148.  00:8967                      
     308   00:8967                      	
     309   00:8967                      	include "subr_teclado_joy.asm"
       1.  00:8967                      ;;=====================================================
       2.  00:8967                      ;;SUBRUTINAS QUE CAPTURAN EL JOYSTICK Y TECLADO Y MUEVEN PUNTO DE MIRA
       3.  00:8967                      ;;=====================================================
       4.  00:8967                      
       5.  00:8967                      ;;=====================================================
       6.  00:8967                      ;;MUEVE_ARRIBA
       7.  00:8967                      ;;=====================================================	
       8.  00:8967                      ; función: 	decrementa y si se no sale de los límites el valor del punto de mira a la derecha
       9.  00:8967                      ; entrada: 	-
      10.  00:8967                      ; salida: 	-
      11.  00:8967                      ; toca: 	-
      12.  00:8967                      mueve_arriba:
      13.  00:8967  F5                  	PUSH		AF
      14.  00:8968                      	
      15.  00:8968  3A A6 A9            	LD		 	 A, (prota.posy)
      16.  00:896B  3D                  	DEC			 A
      17.  00:896C  CA 72 89            	JP			 Z,.no_decrementa_y
      18.  00:896F  32 A6 A9            	LD			(prota.posy), A
      19.  00:8972                      	
      20.  00:8972                      .no_decrementa_y:
      21.  00:8972  F1                  	POP			AF
      22.  00:8973                      fin_mueve_arriba:
      23.  00:8973  C9                  	RET
      24.  00:8974                      
      25.  00:8974                      
      26.  00:8974                      ;;=====================================================
      27.  00:8974                      ;;MUEVE_DERECHA
      28.  00:8974                      ;;=====================================================	
      29.  00:8974                      ; función: 	incrementa si se no sale de los límites el valor del punto de mira a la derecha
      30.  00:8974                      ; entrada: 	-
      31.  00:8974                      ; salida: 	-
      32.  00:8974                      ; toca: 	-
      33.  00:8974                      mueve_derecha:
      34.  00:8974  F5                  	PUSH		AF
      35.  00:8975                      	
      36.  00:8975  3A A5 A9            	LD		 	 A, (prota.posx)
      37.  00:8978  3C                  	INC			 A
      38.  00:8979  FE EF               	CP			 A, LIMPANTDER - 16
      39.  00:897B  CA 81 89            	JP			 Z, .no_incrementa_x
      40.  00:897E  32 A5 A9            	LD			(prota.posx), A
      41.  00:8981                      	
      42.  00:8981                      .no_incrementa_x:
      43.  00:8981  F1                  	POP			AF
      44.  00:8982                      fin_mueve_derecha:
      45.  00:8982  C9                  	RET
      46.  00:8983                      
      47.  00:8983                      
      48.  00:8983                      ;;=====================================================
      49.  00:8983                      ;;MUEVE_ABAJO
      50.  00:8983                      ;;=====================================================	
      51.  00:8983                      ; función: 	incrementa y si se no sale de los límites el valor del punto de mira abajo
      52.  00:8983                      ; entrada: 	-
      53.  00:8983                      ; salida: 	-
      54.  00:8983                      ; toca: 	-
      55.  00:8983                      mueve_abajo:
      56.  00:8983  F5                  	PUSH		AF
      57.  00:8984                      	
      58.  00:8984  3A A6 A9            	LD		 	 A, (prota.posy)
      59.  00:8987  3C                  	INC			 A
      60.  00:8988  FE 70               	CP			 A, LIMPANTABA - 16
      61.  00:898A  CA 90 89            	JP			 Z,.no_incrementa_y
      62.  00:898D  32 A6 A9            	LD			(prota.posy), A
      63.  00:8990                      	
      64.  00:8990                      .no_incrementa_y:
      65.  00:8990  F1                  	POP			AF
      66.  00:8991                      fin_mueve_abajo:
      67.  00:8991  C9                  	RET
      68.  00:8992                      	
      69.  00:8992                      	
      70.  00:8992                      ;;=====================================================
      71.  00:8992                      ;;MUEVE_IZQUIERDA
      72.  00:8992                      ;;=====================================================	
      73.  00:8992                      ; función: 	decrementa x si se no sale de los límites el valor del punto de mira a la izquierda
      74.  00:8992                      ; entrada: 	-
      75.  00:8992                      ; salida: 	-
      76.  00:8992                      ; toca: 	-
      77.  00:8992                      mueve_izquierda:
      78.  00:8992  F5                  	PUSH		AF
      79.  00:8993                      	
      80.  00:8993  3A A5 A9            	LD		 	 A, (prota.posx)
      81.  00:8996  3D                  	DEC			 A
      82.  00:8997                      ;	CP			 A, LIMPANTIZQ
      83.  00:8997  CA 9D 89            	JP			 Z,.no_decrementa_x
      84.  00:899A  32 A5 A9            	LD			(prota.posx), A
      85.  00:899D                      	
      86.  00:899D                      .no_decrementa_x:
      87.  00:899D  F1                  	POP			AF
      88.  00:899E                      fin_mueve_izquierda:
      89.  00:899E  C9                  	RET
      90.  00:899F                      
      91.  00:899F                      
      92.  00:899F                      
      93.  00:899F                      ;;=====================================================
      94.  00:899F                      ;;MIRA_DISPARO
      95.  00:899F                      ;;=====================================================	
      96.  00:899F                      ; función: 	Mira si se ha pulsado alguno de los dos disparos
      97.  00:899F                      ; entrada: 	A que tendrá 0000 0 0 X-letra M X-espacio 
      98.  00:899F                      ; salida: 	-
      99.  00:899F                      ; toca: 	A, B
     100.  00:899F                      mira_disparo:
     101.  00:899F                      .mira_boton_pulsado1:
     102.  00:899F  CB 1F               	RR		 A						;preparo en el carry si se ha pulsado botón 1
     103.  00:89A1  D2 CA 89            	JP		 NC, .mira_boton_pulsado2					
     104.  00:89A4  F5                  	PUSH	AF						;copia A para usarlo después
     105.  00:89A5                      	;se ha pulsado barra o boton 1
     106.  00:89A5  3A AA A9            	LD		 A, (prota.cadencia)
     107.  00:89A8  B7                  	OR		 A
     108.  00:89A9  CA B7 89            	JP		 Z, .efectua_disparo	;toca efectuar disparo realmente porque se ha pulsado lo suficiente el disparo
     109.  00:89AC                      .no_efectua_disparo: ;IF
     110.  00:89AC  3D                  		DEC		 A
     111.  00:89AD  32 AA A9            		LD		(prota.cadencia), A	;resto cadencia hasta próximo disparo "real" (no automático por haber pulsado una tecla e ir demasiado rápido)
     112.  00:89B0  AF                  		XOR		 A 
     113.  00:89B1  32 A7 A9            		LD		(prota.escena), A
     114.  00:89B4  C3 C9 89            		JP		.fin_mira_disparo1
     115.  00:89B7                      .efectua_disparo:	;ELSE
     116.  00:89B7                      		;cambio colores del sprite
     117.  00:89B7  3A A7 A9            		LD		 A, (prota.escena)
     118.  00:89BA  2F                  		CPL		 
     119.  00:89BB  32 A7 A9            		LD		(prota.escena), A
     120.  00:89BE                      		;reseteo cadencia para el próximo disparo
     121.  00:89BE  3E 04               		LD		 A, LIMCADENCIA				;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
     122.  00:89C0  32 AA A9            		LD		 (prota.cadencia), A		;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
     123.  00:89C3                      		
     124.  00:89C3                      		;ejecuto sonido						;; ajustar cadencia y que cuando el disparo sea efectivo se reseteen los colores
     125.  00:89C3  AF                  		XOR		 A
     126.  00:89C4  0E 01               		LD		 C, 1
     127.  00:89C6  CD 8E 90            		CALL	ayFX_INIT
     128.  00:89C9                      		
     129.  00:89C9                      		;examino si el disparo le dió a algo activo
     130.  00:89C9                      ;		CALL	check_colisiones_objetos	;revisa las colisiones con puertas, ayudas y enemigos
     131.  00:89C9                      		
     132.  00:89C9                      .fin_mira_disparo1
     133.  00:89C9  F1                  	POP		AF
     134.  00:89CA                      
     135.  00:89CA                      .mira_boton_pulsado2:
     136.  00:89CA  CB 1F               	RR		 A
     137.  00:89CC  D0                  	RET		 NC
     138.  00:89CD                      	;se ha pulsado shift o boton 2
     139.  00:89CD                      	
     140.  00:89CD  3A B7 A9            	LD		 A, (prota_reliquias)	;miro si le quedan reliquias
     141.  00:89D0  B7                  	OR		 A
     142.  00:89D1  C8                  	RET		 Z						;si no le quedan salgo ya
     143.  00:89D2                      	
     144.  00:89D2                      	;actuaciones si se usa la reliquia botón 2 o M y quedn reliquias.. (antes ya se puso el valor en A)
     145.  00:89D2  3A B7 A9            	LD		A, (prota_reliquias)
     146.  00:89D5  3D                  	DEC		 A
     147.  00:89D6  32 B7 A9            	LD		(prota_reliquias), A
     148.  00:89D9                      	
     149.  00:89D9  3E 01               	LD		 A, 1
     150.  00:89DB  0E 01               	LD		 C, 1
     151.  00:89DD  CD 8E 90            	CALL	ayFX_INIT
     152.  00:89E0                      	
     153.  00:89E0  CD 1C 85            	CALL 	efecto_imagen_tira_reliquia
     154.  00:89E3                      	
     155.  00:89E3  C3 C4 83            	JP		pinta_reliquias
     156.  00:89E6                      fin_mira_disparo:
     157.  00:89E6                      ;	RET		
     158.  00:89E6                      
     159.  00:89E6                      
     160.  00:89E6                      ;;============================================================
     161.  00:89E6                      ;;Código de D. Fernando García (BitVision) (al que siempre le estaré agradecido)
     162.  00:89E6                      ;check_8th_keyboard_row
     163.  00:89E6                      ;read_joy_0
     164.  00:89E6                      ;check_8th_keyboard_row
     165.  00:89E6                      ;check_4th_keyboard_row
     166.  00:89E6                      ;;============================================================
     167.  00:89E6                      ;;  usa constantes:
     168.  00:89E6                      ;PSG_A  equ  0a0h  ;reg address
     169.  00:89E6                      ;PSG_W  equ  0a1h  ;reg data WR
     170.  00:89E6                      ;PSG_R  equ  0a2h  ;reg data
     171.  00:89E6                      
     172.  00:89E6                      ;;=====================================================
     173.  00:89E6                      ;;update_controllers_status
     174.  00:89E6                      ;;=====================================================	
     175.  00:89E6                      ;depends on the next rountine
     176.  00:89E6                      ;  returns
     177.  00:89E6                      ;  a - 0P2TRLDU
     178.  00:89E6                      
     179.  00:89E6                      update_controllers_status:
     180.  00:89E6  CD 31 8A                 call  check_8th_keyboard_row
     181.  00:89E9                      [4]  rrc    a
     181.  00:89E9  CB 0F CB 0F CB 0F CB 0F 
     182.  00:89F1  47                       ld    b,a    		;save for later  xxxTRDUL
     183.  00:89F2                      
     184.  00:89F2  E6 01                    and    #01    		;save L
     185.  00:89F4  CB 27                    sla    a
     186.  00:89F6  CB 27                    sla    a    		;now 00000L00
     187.  00:89F8  4F                       ld    c,a    		;save for later
     188.  00:89F9                      
     189.  00:89F9  78                       ld    a,b    		;again we've got xxxTRDUL. I am interested on leaving 000000DU on a
     190.  00:89FA  CB 3F                    srl    a
     191.  00:89FC  E6 03                    and    00000011b
     192.  00:89FE                      						;we've got 000000DU on a
     193.  00:89FE  B1                       or    c    		;now we've got 00000LDU
     194.  00:89FF  4F                       ld    c,a    		;save for later
     195.  00:8A00                      
     196.  00:8A00  78                       ld    a,b
     197.  00:8A01  E6 18                    and    00011000b 	;we've got 000TR000
     198.  00:8A03  B1                       or    c
     199.  00:8A04                           ;finally    000TRLDU
     200.  00:8A04                      
     201.  00:8A04                           ;and    00000100   ;preserve just
     202.  00:8A04  47                       ld    b,a    		;save for later
     203.  00:8A05  CD 3F 8A                 call  check_4th_keyboard_row      ;check M & P
     204.  00:8A08  F5                       push  af
     205.  00:8A09  E6 04                    and    00000100b	;filter just M
     206.  00:8A0B  87                       add    a
     207.  00:8A0C  87                       add    a
     208.  00:8A0D  87                       add    a           ;shift 3th to 6th bit
     209.  00:8A0E  B0                       or    b           	;merge with previous
     210.  00:8A0F  47                       ld    b,a
     211.  00:8A10                      
     212.  00:8A10  CD 1D 8A                 call  read_joy_0
     213.  00:8A13  E6 3F                    and    00111111b  	;we want just 002TRLDU  from joystick    (2 is second trigger)
     214.  00:8A15  B0                       or    b      		;added 000TRLDU from keyboard
     215.  00:8A16  47                       ld    b,a      	;save for later
     216.  00:8A17  F1                       pop    af      	; let's check on P
     217.  00:8A18                      
     218.  00:8A18  E6 20                    and    00100000b
     219.  00:8A1A  87                       add    a      		;P status on 6th bit  ... so 0P2TRLDU
     220.  00:8A1B  B0                       or    b
     221.  00:8A1C                      
     222.  00:8A1C  C9                       ret
     223.  00:8A1D                      
     224.  00:8A1D                      
     225.  00:8A1D                      ;ret
     226.  00:8A1D                      ;  a -            xx2TRLDU
     227.  00:8A1D                      read_joy_0:
     228.  00:8A1D  F3                         di
     229.  00:8A1E  3E 0F                      ld    a,15
     230.  00:8A20  D3 A0                      out    [PSG_A],a
     231.  00:8A22  DB A2                      in    a,[PSG_R]
     232.  00:8A24  E6 BF                      and    10111111b        ;joy0
     233.  00:8A26                      
     234.  00:8A26  D3 A1                      out    [PSG_W],a        ;set joy0
     235.  00:8A28                      
     236.  00:8A28  3E 0E                      ld    a,14
     237.  00:8A2A  D3 A0                      out    [PSG_A],a
     238.  00:8A2C  DB A2                      in    a,[PSG_R]
     239.  00:8A2E                      
     240.  00:8A2E  FB                         ei
     241.  00:8A2F  2F                         cpl
     242.  00:8A30                      
     243.  00:8A30  C9                         ret
     244.  00:8A31                      
     245.  00:8A31                      
     246.  00:8A31                      ;ret
     247.  00:8A31                      ;  a -      RDULxxxT
     248.  00:8A31                      check_8th_keyboard_row:
     249.  00:8A31  F3                       di
     250.  00:8A32  DB AA                    in    a,(#aa)
     251.  00:8A34  E6 F0                    and    #f0
     252.  00:8A36  F6 08                    or    8
     253.  00:8A38  D3 AA                    out    (#aa),a
     254.  00:8A3A  DB A9                    in    a,(#a9)
     255.  00:8A3C  FB                       ei
     256.  00:8A3D  2F                       cpl
     257.  00:8A3E                      
     258.  00:8A3E  C9                       ret
     259.  00:8A3F                      
     260.  00:8A3F                      
     261.  00:8A3F                      ;ret
     262.  00:8A3F                      ;  a -      xxxxxMxx
     263.  00:8A3F                      check_4th_keyboard_row:
     264.  00:8A3F  F3                       di
     265.  00:8A40  DB AA                    in    a,(#aa)
     266.  00:8A42  E6 F0                    and    #f0
     267.  00:8A44  F6 04                    or    4
     268.  00:8A46  D3 AA                    out    (#aa),a
     269.  00:8A48  DB A9                    in    a,(#a9)
     270.  00:8A4A  FB                       ei
     271.  00:8A4B  2F                       cpl
     272.  00:8A4C                      
     273.  00:8A4C  C9                       ret
     274.  00:8A4D                      
     275.  00:8A4D                      ;--------------------------------------------
     276.  00:8A4D                      
     277.  00:8A4D                      
     278.  00:8A4D                      
     279.  00:8A4D                      
     280.  00:8A4D                      
     281.  00:8A4D                      
     282.  00:8A4D                      
     283.  00:8A4D                      
     310   00:8A4D                      	
     311   00:8A4D                      	include "subr_sonido.asm"
       1.  00:8A4D                      
       2.  00:8A4D                      ;;=====================================================
       3.  00:8A4D                      ;;SUBRUTINAS PARA SONIDOS
       4.  00:8A4D                      ;;=====================================================	
       5.  00:8A4D                      
       6.  00:8A4D                      ;;=====================================================
       7.  00:8A4D                      ;;INICIALIZA_REPLAYER_EFECTOS_INTERRUPCIONES
       8.  00:8A4D                      ;;=====================================================	
       9.  00:8A4D                      ; función: 	inicializa: replayer de música, player de efectos e interrupciones
      10.  00:8A4D                      ; entrada: 	-
      11.  00:8A4D                      ; salida: 	-
      12.  00:8A4D                      ; toca: 	HL, A
      13.  00:8A4D                      inicializa_replayer_efectos_interrupciones:
      14.  00:8A4D  F3                  	DI
      15.  00:8A4E                      
      16.  00:8A4E                      	;inicializacion de replayer musical
      17.  00:8A4E  21 F6 90            	LD		HL, song-99			; hl <- initial address of module - 99
      18.  00:8A51  CD 8D 8A            	CALL	PT3_INIT			; Inits PT3 player
      19.  00:8A54                      		
      20.  00:8A54                      	;inicializacion del reproductor de efectos sonoros
      21.  00:8A54  21 C1 9A            	LD		HL, sfx_bank
      22.  00:8A57  CD 7C 90            	CALL	ayFX_SETUP
      23.  00:8A5A                      	
      24.  00:8A5A                      	;Engancha nuestra rutina de servicio al gancha que deja preparado la BIOS cuando se termina de pintar la pantalla (50 o 60 veces por segundo)
      25.  00:8A5A  3E C3               	LD		A, #C3
      26.  00:8A5C  32 9F FD            	LD		[H.TIMI], A
      27.  00:8A5F  21 67 8A            	LD		HL, subrutina_isr
      28.  00:8A62  22 A0 FD            	LD		[H.TIMI+1], HL
      29.  00:8A65                      	
      30.  00:8A65  FB                  	EI		;optimizacion:
      31.  00:8A66                      			;piensa que las dos ultimas lineas podrian haber sido: 
      32.  00:8A66                      			;ei						;primero ei
      33.  00:8A66                      			;ld		[H.TIMI+1],hl	;luego este ld
      34.  00:8A66                      									;PENSAR (y consultar ) PORQUE!!!!
      35.  00:8A66                      fin_inicializa_replayer_efectos_interrupciones:
      36.  00:8A66  C9                  	RET
      37.  00:8A67                      
      38.  00:8A67                      
      39.  00:8A67                      
      40.  00:8A67                      ;;=====================================================
      41.  00:8A67                      ;;NUESTRA_ISR
      42.  00:8A67                      ;;=====================================================	
      43.  00:8A67                      ; función: 	envía datos al PSG + toca un trozo de música + toca trozo de 
      44.  00:8A67                      ; entrada: 	-
      45.  00:8A67                      ; salida: 	-
      46.  00:8A67                      ; toca: 	HL, A
      47.  00:8A67                      subrutina_isr:
      48.  00:8A67  CD D2 8F            	CALL	PT3_ROUT			;envia los datos a los registros del PSG
      49.  00:8A6A  CD DA 8E            	CALL	PT3_PLAY			;calcula el siguiente 'trocito' de musica que sera enviado al proxima vez
      50.  00:8A6D  C3 C4 90            	JP		ayFX_PLAY			;calcula el siguiente 'trocito' de efecto especial de sonido que sera enviado la proxima vez
      51.  00:8A70                      fin_subrutina_isr:
      52.  00:8A70                      	;RET
      53.  00:8A70                      
      54.  00:8A70                      
      55.  00:8A70                      
      56.  00:8A70                      ;;=====================================================
      57.  00:8A70                      ;;DEFINICIÓN DE SUBRUTINAS DE FERNANDO PARA COMPRESIÓN Y SONIDO
      58.  00:8A70                      ;;=====================================================
      59.  00:8A70                      subrutinas_sonido:
      60.  00:8A70                      	include	"PT3-ROM_sjasm.asm"
       1:  00:8A70                      		; --- PT3 REPLAYER WORKING ON ROM ---
       2:  00:8A70                      		; --- Can be assembled with asMSX ---
       3:  00:8A70                      		; --- ROM version: MSX-KUN        ---
       4:  00:8A70                      		; --- asMSX version 2: SapphiRe   ---
       5:  00:8A70                      
       6:  00:8A70                      ; Based on MSX full version of PT3 by Dioniso
       7:  00:8A70                      ;
       8:  00:8A70                      ; This version of the replayer can be used with any note table
       9:  00:8A70                      ; This version also allows the use of PT3 commands
      10:  00:8A70                      ; First 99 bytes of each PT3 module should be stripped off
      11:  00:8A70                      ;
      12:  00:8A70                      ; PLAY and PSG WRITE routines seperated to allow independent calls
      13:  00:8A70                      ;
      14:  00:8A70                      ; ROM LENGTH: 1549 bytes
      15:  00:8A70                      ; RAM LENGTH:  576 bytes
      16:  00:8A70                      
      17:  00:8A70                      
      18:  00:8A70                      
      19:  00:8A70                      ;SJASM version by BTV 2016
      20:  00:8A70                      
      21:  00:8A70                      
      22:  00:8A70                      		; --- CONSTANT VALUES DEFINITION ---
      23:  00:8A70                      
      24:  00:8A70                      ;ChannelsVars
      25:  00:8A70                      ;struc	CHNPRM
      26:  00:8A70                      ;reset group
      27:  00:8A70  (00:0000)           CHNPRM_PsInOr	equ 0	;RESB 1
      28:  00:8A70  (00:0001)           CHNPRM_PsInSm	equ 1	;RESB 1
      29:  00:8A70  (00:0002)           CHNPRM_CrAmSl	equ 2	;RESB 1
      30:  00:8A70  (00:0003)           CHNPRM_CrNsSl	equ 3	;RESB 1
      31:  00:8A70  (00:0004)           CHNPRM_CrEnSl	equ 4	;RESB 1
      32:  00:8A70  (00:0005)           CHNPRM_TSlCnt	equ 5	;RESB 1
      33:  00:8A70  (00:0006)           CHNPRM_CrTnSl	equ 6	;RESW 1
      34:  00:8A70  (00:0008)           CHNPRM_TnAcc	equ 8	;RESW 1
      35:  00:8A70  (00:000A)           CHNPRM_COnOff	equ 10	;RESB 1
      36:  00:8A70                      ;reset group
      37:  00:8A70                      
      38:  00:8A70  (00:000B)           CHNPRM_OnOffD	equ 11	;RESB 1
      39:  00:8A70                      
      40:  00:8A70                      ;IX for PTDECOD here [+12]
      41:  00:8A70  (00:000C)           CHNPRM_OffOnD	equ 12	;RESB 1
      42:  00:8A70  (00:000D)           CHNPRM_OrnPtr	equ 13	;RESW 1
      43:  00:8A70  (00:000F)           CHNPRM_SamPtr	equ 15	;RESW 1
      44:  00:8A70  (00:0011)           CHNPRM_NNtSkp	equ 17	;RESB 1
      45:  00:8A70  (00:0012)           CHNPRM_Note	equ 18	;RESB 1
      46:  00:8A70  (00:0013)           CHNPRM_SlToNt	equ 19	;RESB 1
      47:  00:8A70  (00:0014)           CHNPRM_Env_En	equ 20	;RESB 1
      48:  00:8A70  (00:0015)           CHNPRM_Flags	equ 21	;RESB 1
      49:  00:8A70                       ;Enabled - 0,SimpleGliss - 2
      50:  00:8A70  (00:0016)           CHNPRM_TnSlDl	equ 22	;RESB 1
      51:  00:8A70  (00:0017)           CHNPRM_TSlStp	equ 23	;RESW 1
      52:  00:8A70  (00:0019)           CHNPRM_TnDelt	equ 25	;RESW 1
      53:  00:8A70  (00:001B)           CHNPRM_NtSkCn	equ 27	;RESB 1
      54:  00:8A70  (00:001C)           CHNPRM_Volume	equ 28	;RESB 1
      55:  00:8A70  (00:001D)           CHNPRM_Size	equ 29	;RESB 1
      56:  00:8A70                      ;endstruc
      57:  00:8A70                      
      58:  00:8A70                      ;struc	AR
      59:  00:8A70  (00:0000)           AR_TonA		equ 0	;RESW 1
      60:  00:8A70  (00:0002)           AR_TonB		equ 2	;RESW 1
      61:  00:8A70  (00:0004)           AR_TonC		equ 4	;RESW 1
      62:  00:8A70  (00:0006)           AR_Noise	equ 6	;RESB 1
      63:  00:8A70  (00:0007)           AR_Mixer	equ 7	;RESB 1
      64:  00:8A70  (00:0008)           AR_AmplA	equ 8	;RESB 1
      65:  00:8A70  (00:0009)           AR_AmplB	equ 9	;RESB 1
      66:  00:8A70  (00:000A)           AR_AmplC	equ 10	;RESB 1
      67:  00:8A70  (00:000B)           AR_Env		equ 11	;RESW 1
      68:  00:8A70  (00:000D)           AR_EnvTp	equ 13	;RESB 1
      69:  00:8A70                      ;endstruc
      70:  00:8A70                      
      71:  00:8A70                      		; --- CODE STARTS HERE ---
      72:  00:8A70                      
      73:  00:8A70  21 00 F0            CHECKLP:	LD	HL,PT3_SETUP
      74:  00:8A73  CB FE               		SET	7,[HL]
      75:  00:8A75  CB 46               		BIT	0,[HL]
      76:  00:8A77  C8                  		RET	Z
      77:  00:8A78  E1                  		POP	HL
      78:  00:8A79  21 7A F0            		LD	HL,DelyCnt
      79:  00:8A7C  34                  		INC	[HL]
      80:  00:8A7D  21 3E F0            		LD	HL,ChanA+CHNPRM_NtSkCn
      81:  00:8A80  34                  		INC	[HL]
      82:  00:8A81  AF                  PT3_MUTE:	XOR	A
      83:  00:8A82  67                  		LD	H,A
      84:  00:8A83  6F                  		LD	L,A
      85:  00:8A84  32 48 F1            		LD	[AYREGS+AR_AmplA],A
      86:  00:8A87  22 49 F1            		LD	[AYREGS+AR_AmplB],HL
      87:  00:8A8A  C3 D3 8F            		JP	ROUT_A0
      88:  00:8A8D                      
      89:  00:8A8D                      PT3_INIT:	;HL - AddressOfModule - 100
      90:  00:8A8D  22 01 F0            		LD [PT3_MODADDR],HL
      91:  00:8A90  E5                  		PUSH HL
      92:  00:8A91  11 64 00            		LD DE,100
      93:  00:8A94  19                  		ADD HL,DE
      94:  00:8A95  7E                  		LD A,[HL]
      95:  00:8A96  32 1C F0            		LD [PT3_Delay],A
      96:  00:8A99  E5                  		PUSH HL
      97:  00:8A9A  DD E1               		POP IX
      98:  00:8A9C  19                  		ADD HL,DE
      99:  00:8A9D  22 03 F0            		LD [PT3_CrPsPtr],HL
     100:  00:8AA0  DD 5E 02            		LD E,[IX+102-100]
     101:  00:8AA3  19                  		ADD HL,DE
     102:  00:8AA4  23                  		INC HL
     103:  00:8AA5  22 18 F0            		LD [PT3_LPosPtr],HL
     104:  00:8AA8  D1                  		POP DE
     105:  00:8AA9  DD 6E 03            		LD L,[IX+103-100]
     106:  00:8AAC  DD 66 04            		LD H,[IX+104-100]
     107:  00:8AAF  19                  		ADD HL,DE
     108:  00:8AB0  22 1A F0            		LD [PT3_PatsPtr],HL
     109:  00:8AB3  21 A9 00            		LD HL,169
     110:  00:8AB6  19                  		ADD HL,DE
     111:  00:8AB7  22 07 F0            		LD [PT3_OrnPtrs],HL
     112:  00:8ABA  21 69 00            		LD HL,105
     113:  00:8ABD  19                  		ADD HL,DE
     114:  00:8ABE  22 05 F0            		LD [PT3_SAMPTRS],HL
     115:  00:8AC1  21 00 F0            		LD HL,PT3_SETUP
     116:  00:8AC4  CB BE               		RES 7,[HL]
     117:  00:8AC6                      
     118:  00:8AC6                      		; --- note table data depacker ---
     119:  00:8AC6                      		; Depacks first 12 tones of each tone table
     120:  00:8AC6                      
     121:  00:8AC6  11 47 90            		LD DE,T_PACK
     122:  00:8AC9  01 B1 F1            		LD BC,T1_+(2*49)-1
     123:  00:8ACC  1A                  .TP_0:		LD A,[DE]
     124:  00:8ACD  13                  		INC DE
     125:  00:8ACE  FE 1E               		CP 15*2
     126:  00:8AD0  30 06               		JR NC,.TP_1
     127:  00:8AD2  67                  		LD H,A
     128:  00:8AD3  1A                  		LD A,[DE]
     129:  00:8AD4  6F                  		LD L,A
     130:  00:8AD5  13                  		INC DE
     131:  00:8AD6  18 07               		JR .TP_2
     132:  00:8AD8  D5                  .TP_1:		PUSH DE
     133:  00:8AD9  16 00               		LD D,0
     134:  00:8ADB  5F                  		LD E,A
     135:  00:8ADC  19                  		ADD HL,DE
     136:  00:8ADD  19                  		ADD HL,DE
     137:  00:8ADE  D1                  		POP DE
     138:  00:8ADF  7C                  .TP_2:		LD A,H
     139:  00:8AE0  02                  		LD [BC],A
     140:  00:8AE1  0B                  		DEC BC
     141:  00:8AE2  7D                  		LD A,L
     142:  00:8AE3  02                  		LD [BC],A
     143:  00:8AE4  0B                  		DEC BC
     144:  00:8AE5  D6 F0               		SUB $F0
     145:  00:8AE7  20 E3               		JR NZ,.TP_0
     146:  00:8AE9                      
     147:  00:8AE9                      		; --- INITIALIZE PT3 VARIABLES ---
     148:  00:8AE9  21 23 F0            		LD HL,VARS
     149:  00:8AEC  77                  		LD [HL],A
     150:  00:8AED  11 24 F0            		LD DE,VARS+1
     151:  00:8AF0  01 2C 01            		LD BC,VAR0END-VARS-1
     152:  00:8AF3  ED B0               		LDIR
     153:  00:8AF5                      
     154:  00:8AF5  3C                  		INC A
     155:  00:8AF6  32 7A F0            		LD [DelyCnt],A
     156:  00:8AF9  21 01 F0            		LD HL,$F001 ;H - CHNPRM_Volume, L - CHNPRM_NtSkCn
     157:  00:8AFC  22 3E F0            		LD [ChanA+CHNPRM_NtSkCn],HL
     158:  00:8AFF  22 5B F0            		LD [ChanB+CHNPRM_NtSkCn],HL
     159:  00:8B02  22 78 F0            		LD [ChanC+CHNPRM_NtSkCn],HL
     160:  00:8B05                      
     161:  00:8B05  21 43 90            		LD HL,EMPTYSAMORN
     162:  00:8B08  22 12 F0            		LD [PT3_AdInPtA],HL ;ptr to zero
     163:  00:8B0B  22 30 F0            		LD [ChanA+CHNPRM_OrnPtr],HL ;ornament 0 is "0,1,0"
     164:  00:8B0E  22 4D F0            		LD [ChanB+CHNPRM_OrnPtr],HL ;in all versions from
     165:  00:8B11  22 6A F0            		LD [ChanC+CHNPRM_OrnPtr],HL ;3.xx to 3.6x and VTII
     166:  00:8B14                      
     167:  00:8B14  22 32 F0            		LD [ChanA+CHNPRM_SamPtr],HL ;S1 There is no default
     168:  00:8B17  22 4F F0            		LD [ChanB+CHNPRM_SamPtr],HL ;S2 sample in PT3, so, you
     169:  00:8B1A  22 6C F0            		LD [ChanC+CHNPRM_SamPtr],HL ;S3 can comment S1,2,3; see
     170:  00:8B1D                      					    ;also EMPTYSAMORN comment
     171:  00:8B1D                      
     172:  00:8B1D                      		; --- NOTE TABLE CREATOR (c) Ivan Roshin, adapted by SapphiRe ---
     173:  00:8B1D  DD 7E FF            		LD A,[IX+99-100] ;TONE TABLE NUMBER
     174:  00:8B20  17                  		RLA
     175:  00:8B21  E6 07               		AND 7
     176:  00:8B23  21 F3 8F            		LD HL,NT_DATA
     177:  00:8B26  D5                  		PUSH DE
     178:  00:8B27  50                  		LD D,B		; ld d,0 (bc is 0000 after LDIR)
     179:  00:8B28  87                  		ADD A,A
     180:  00:8B29  5F                  		LD E,A
     181:  00:8B2A  19                  		ADD HL,DE	; hl -> init of correct note table data
     182:  00:8B2B  5E                  		LD E,[HL]
     183:  00:8B2C  23                  		INC HL
     184:  00:8B2D  CB 3B               		SRL E
     185:  00:8B2F  9F                  		SBC A,A
     186:  00:8B30  E6 A7               		AND $A7			;$00 (NOP) or $A7 (AND A)
     187:  00:8B32  32 21 F0            		LD [PT3_NTL3],A		; CORRECT INSTRUCTION, DEPENDS OF SELECTED TABLE
     188:  00:8B35  3E C9               		LD A,$C9		; RET CODE
     189:  00:8B37  32 22 F0            		LD [PT3_NTL3+1],A	; RET PLACED
     190:  00:8B3A  EB                  		EX DE,HL
     191:  00:8B3B  C1                  		POP BC ;BC=T1_
     192:  00:8B3C  09                  		ADD HL,BC
     193:  00:8B3D                      
     194:  00:8B3D  1A                  		LD A,[DE]                           
     195:  00:8B3E                      
     196:  00:8B3E  01 03 90            		LD BC,T_
     197:  00:8B41  81                  		ADD A,C
     198:  00:8B42  4F                  		LD C,A
     199:  00:8B43  88                  		ADC A,B
     200:  00:8B44                      
     201:  00:8B44  91                  		SUB C
     202:  00:8B45  47                  		LD B,A
     203:  00:8B46  C5                  		PUSH BC
     204:  00:8B47  11 80 F0            		LD DE,NT_
     205:  00:8B4A  D5                  		PUSH DE
     206:  00:8B4B                      
     207:  00:8B4B  06 0C               		LD B,12
     208:  00:8B4D  C5                  .L1:		PUSH BC
     209:  00:8B4E  4E                  		LD C,[HL]
     210:  00:8B4F  23                  		INC HL
     211:  00:8B50  E5                  		PUSH HL
     212:  00:8B51  46                  		LD B,[HL]
     213:  00:8B52                      
     214:  00:8B52  D5                  		PUSH DE
     215:  00:8B53  EB                  		EX DE,HL
     216:  00:8B54  11 17 00            		LD DE,23
     217:  00:8B57  DD 26 08            		db $DD,$26,$08	;LD XH,8
     218:  00:8B5A                      
     219:  00:8B5A  CB 38               .L2:		SRL B
     220:  00:8B5C  CB 19               		RR C
     221:  00:8B5E  CD 21 F0            .L3:		CALL PT3_NTL3	;AND A or NOP
     222:  00:8B61  79                  		LD A,C
     223:  00:8B62  8A                  		ADC A,D	;=ADC 0
     224:  00:8B63  77                  		LD [HL],A
     225:  00:8B64  23                  		INC HL
     226:  00:8B65  78                  		LD A,B
     227:  00:8B66  8A                  		ADC A,D
     228:  00:8B67  77                  		LD [HL],A
     229:  00:8B68  19                  		ADD HL,DE
     230:  00:8B69  DD 25               		db $DD,$25	;DEC XH
     231:  00:8B6B  20 ED               		JR NZ,.L2
     232:  00:8B6D                      
     233:  00:8B6D  D1                  		POP DE
     234:  00:8B6E  13                  		INC DE
     235:  00:8B6F  13                  		INC DE
     236:  00:8B70  E1                  		POP HL
     237:  00:8B71  23                  		INC HL
     238:  00:8B72  C1                  		POP BC
     239:  00:8B73  10 D8               		DJNZ .L1
     240:  00:8B75                      
     241:  00:8B75  E1                  		POP HL
     242:  00:8B76  D1                  		POP DE
     243:  00:8B77                      
     244:  00:8B77  7B                  		LD A,E
     245:  00:8B78  D5                  		PUSH DE
     246:  00:8B79  11 0F 90            		LD DE,TCOLD_1
     247:  00:8B7C  BB                  		CP E
     248:  00:8B7D  D1                  		POP DE
     249:  00:8B7E  20 05               		JR NZ,.CORR_1
     250:  00:8B80  3E FD               		LD A,$FD
     251:  00:8B82  32 AE F0            		LD [NT_+$2E],A
     252:  00:8B85                      
     253:  00:8B85  1A                  .CORR_1:	LD A,[DE]
     254:  00:8B86  A7                  		AND A
     255:  00:8B87  28 11               		JR Z,.TC_EXIT
     256:  00:8B89  1F                  		RRA
     257:  00:8B8A  F5                  		PUSH AF
     258:  00:8B8B  87                  		ADD A,A
     259:  00:8B8C  4F                  		LD C,A
     260:  00:8B8D  09                  		ADD HL,BC
     261:  00:8B8E  F1                  		POP AF
     262:  00:8B8F  30 02               		JR NC,.CORR_2
     263:  00:8B91  35                  		DEC [HL]
     264:  00:8B92  35                  		DEC [HL]
     265:  00:8B93  34                  .CORR_2:	INC [HL]
     266:  00:8B94  A7                  		AND A
     267:  00:8B95  ED 42               		SBC HL,BC
     268:  00:8B97  13                  		INC DE
     269:  00:8B98  18 EB               		JR .CORR_1
     270:  00:8B9A                      
     271:  00:8B9A                      .TC_EXIT:	;POP AF
     272:  00:8B9A                      
     273:  00:8B9A                      		; --- CREATE PT3 VOLUME TABLE (c) Ivan Roshin, adapted by SapphiRe ---
     274:  00:8B9A  21 11 00            		ld	hl,$11
     275:  00:8B9D  54                  		ld	d,h
     276:  00:8B9E  5C                  		ld	e,h
     277:  00:8B9F  DD 21 50 F1         		ld	IX,VT_+16
     278:  00:8BA3  06 0F               		ld	b,15
     279:  00:8BA5  E5                  .INITV1:	push	hl
     280:  00:8BA6  19                  		add	hl,de
     281:  00:8BA7  EB                  		ex	de,hl
     282:  00:8BA8  ED 62               		sbc	hl,hl
     283:  00:8BAA  48                  		ld	c,b
     284:  00:8BAB  06 10               		ld	b,16
     285:  00:8BAD  7D                  .INITV2:	ld	a,l
     286:  00:8BAE  17                  		rla
     287:  00:8BAF  7C                  		ld	a,h
     288:  00:8BB0  CE 00               		adc	a,0
     289:  00:8BB2  DD 77 00            		ld	[ix],a
     290:  00:8BB5  DD 23               		inc	ix
     291:  00:8BB7  19                  		add	hl,de
     292:  00:8BB8  10 F3               		djnz	.INITV2
     293:  00:8BBA  E1                  		pop	hl
     294:  00:8BBB  7B                  		ld	a,e
     295:  00:8BBC  FE 77               		cp	$77
     296:  00:8BBE  20 01               		jr	nz,.INITV3
     297:  00:8BC0  1C                  		inc	e
     298:  00:8BC1  41                  .INITV3:	ld	b,c
     299:  00:8BC2  10 E1               		djnz	.INITV1
     300:  00:8BC4                      
     301:  00:8BC4  C9                  		RET
     302:  00:8BC5                      
     303:  00:8BC5                      		;pattern decoder
     304:  00:8BC5  DD 36 08 00         PD_OrSm:	LD [IX+(CHNPRM_Env_En-12)],0
     305:  00:8BC9  CD 4F 8D            		CALL SETORN
     306:  00:8BCC  0A                  		LD A,[BC]
     307:  00:8BCD  03                  		INC BC
     308:  00:8BCE  0F                  		RRCA
     309:  00:8BCF                      
     310:  00:8BCF  87                  PD_SAM:		ADD A,A
     311:  00:8BD0  5F                  PD_SAM_:	LD E,A
     312:  00:8BD1  16 00               		LD D,0
     313:  00:8BD3  2A 05 F0            		LD HL,[PT3_SAMPTRS]
     314:  00:8BD6  19                  		ADD HL,DE
     315:  00:8BD7  5E                  		LD E,[HL]
     316:  00:8BD8  23                  		INC HL
     317:  00:8BD9  56                  		LD D,[HL]
     318:  00:8BDA  2A 01 F0            		LD HL,[PT3_MODADDR]
     319:  00:8BDD  19                  		ADD HL,DE
     320:  00:8BDE  DD 75 03            		LD [IX+(CHNPRM_SamPtr-12)],L
     321:  00:8BE1  DD 74 04            		LD [IX+(CHNPRM_SamPtr+1-12)],H
     322:  00:8BE4  18 41               		JR PD_LOOP
     323:  00:8BE6                      
     324:  00:8BE6  07                  PD_VOL:		RLCA
     325:  00:8BE7  07                  		RLCA
     326:  00:8BE8  07                  		RLCA
     327:  00:8BE9  07                  		RLCA
     328:  00:8BEA  DD 77 10            		LD [IX+(CHNPRM_Volume-12)],A
     329:  00:8BED  18 3B               		JR PD_LP2
     330:  00:8BEF                      	
     331:  00:8BEF  DD 77 08            PD_EOff:	LD [IX+(CHNPRM_Env_En-12)],A
     332:  00:8BF2  DD 77 F4            		LD [IX+(CHNPRM_PsInOr-12)],A
     333:  00:8BF5  18 33               		JR PD_LP2
     334:  00:8BF7                      
     335:  00:8BF7  3D                  PD_SorE:	DEC A
     336:  00:8BF8  20 07               		JR NZ,PD_ENV
     337:  00:8BFA  0A                  		LD A,[BC]
     338:  00:8BFB  03                  		INC BC
     339:  00:8BFC  DD 77 05            		LD [IX+(CHNPRM_NNtSkp-12)],A
     340:  00:8BFF  18 29               		JR PD_LP2
     341:  00:8C01                      
     342:  00:8C01  CD 33 8D            PD_ENV:		CALL SETENV
     343:  00:8C04  18 24               		JR PD_LP2
     344:  00:8C06                      
     345:  00:8C06  CD 4F 8D            PD_ORN:		CALL SETORN
     346:  00:8C09  18 1C               		JR PD_LOOP
     347:  00:8C0B                             
     348:  00:8C0B  DD 77 08            PD_ESAM:	LD [IX+(CHNPRM_Env_En-12)],A
     349:  00:8C0E  DD 77 F4            		LD [IX+(CHNPRM_PsInOr-12)],A
     350:  00:8C11  C4 33 8D            		CALL NZ,SETENV
     351:  00:8C14  0A                  		LD A,[BC]
     352:  00:8C15  03                  		INC BC
     353:  00:8C16  18 B8               		JR PD_SAM_
     354:  00:8C18                      
     355:  00:8C18  DD 7E 06            PTDECOD:	LD A,[IX+(CHNPRM_Note-12)]
     356:  00:8C1B  32 0F F0            		LD [PT3_PrNote],A
     357:  00:8C1E  DD 6E FA            		LD L,[IX+(CHNPRM_CrTnSl-12)]
     358:  00:8C21  DD 66 FB            		LD H,[IX+(CHNPRM_CrTnSl+1-12)]
     359:  00:8C24  22 10 F0            		LD [PT3_PrSlide],HL
     360:  00:8C27                      
     361:  00:8C27  11 10 20            PD_LOOP:	LD DE,$2010
     362:  00:8C2A  0A                  PD_LP2:		LD A,[BC]
     363:  00:8C2B  03                  		INC BC
     364:  00:8C2C  83                  		ADD A,E
     365:  00:8C2D  38 96               		JR C,PD_OrSm
     366:  00:8C2F  82                  		ADD A,D
     367:  00:8C30  28 4A               		JR Z,PD_FIN
     368:  00:8C32  38 9B               		JR C,PD_SAM
     369:  00:8C34  83                  		ADD A,E
     370:  00:8C35  28 25               		JR Z,PD_REL
     371:  00:8C37  38 AD               		JR C,PD_VOL
     372:  00:8C39  83                  		ADD A,E
     373:  00:8C3A  28 B3               		JR Z,PD_EOff
     374:  00:8C3C  38 B9               		JR C,PD_SorE
     375:  00:8C3E  C6 60               		ADD A,96
     376:  00:8C40  38 20               		JR C,PD_NOTE
     377:  00:8C42  83                  		ADD A,E
     378:  00:8C43  38 C1               		JR C,PD_ORN
     379:  00:8C45  82                  		ADD A,D
     380:  00:8C46  38 0F               		JR C,PD_NOIS
     381:  00:8C48  83                  		ADD A,E
     382:  00:8C49  38 C0               		JR C,PD_ESAM
     383:  00:8C4B  87                  		ADD A,A
     384:  00:8C4C  5F                  		LD E,A
     385:  00:8C4D  21 88 6C            		LD HL,(SPCCOMS+$DF20) % 65536	; Adapted from original Speccy version (saves 6 bytes)
     386:  00:8C50  19                  		ADD HL,DE
     387:  00:8C51  5E                  		LD E,[HL]
     388:  00:8C52  23                  		INC HL
     389:  00:8C53  56                  		LD D,[HL]
     390:  00:8C54  D5                  		PUSH DE
     391:  00:8C55  18 D0               		JR PD_LOOP
     392:  00:8C57                      
     393:  00:8C57  32 7E F0            PD_NOIS:	LD [Ns_Base],A
     394:  00:8C5A  18 CE               		JR PD_LP2
     395:  00:8C5C                      
     396:  00:8C5C  DD CB 09 86         PD_REL:		RES 0,[IX+(CHNPRM_Flags-12)]
     397:  00:8C60  18 08               		JR PD_RES
     398:  00:8C62                      	
     399:  00:8C62  DD 77 06            PD_NOTE:	LD [IX+(CHNPRM_Note-12)],A
     400:  00:8C65  DD CB 09 C6         		SET 0,[IX+(CHNPRM_Flags-12)]
     401:  00:8C69  AF                  		XOR A
     402:  00:8C6A                      
     403:  00:8C6A  ED 73 09 F0         PD_RES:		LD [PT3_PDSP],SP
     404:  00:8C6E  DD F9               		LD SP,IX
     405:  00:8C70  67                  		LD H,A
     406:  00:8C71  6F                  		LD L,A
     407:  00:8C72  E5                  		PUSH HL
     408:  00:8C73  E5                  		PUSH HL
     409:  00:8C74  E5                  		PUSH HL
     410:  00:8C75  E5                  		PUSH HL
     411:  00:8C76  E5                  		PUSH HL
     412:  00:8C77  E5                  		PUSH HL
     413:  00:8C78  ED 7B 09 F0         		LD SP,[PT3_PDSP]
     414:  00:8C7C                      
     415:  00:8C7C  DD 7E 05            PD_FIN:		LD A,[IX+(CHNPRM_NNtSkp-12)]
     416:  00:8C7F  DD 77 0F            		LD [IX+(CHNPRM_NtSkCn-12)],A
     417:  00:8C82  C9                  		RET
     418:  00:8C83                      
     419:  00:8C83  DD CB 09 96         C_PORTM:	RES 2,[IX+(CHNPRM_Flags-12)]
     420:  00:8C87  0A                  		LD A,[BC]
     421:  00:8C88  03                  		INC BC
     422:  00:8C89                      		;SKIP PRECALCULATED TONE DELTA [BECAUSE
     423:  00:8C89                      		;CANNOT BE RIGHT AFTER PT3 COMPILATION]
     424:  00:8C89  03                  		INC BC
     425:  00:8C8A  03                  		INC BC
     426:  00:8C8B  DD 77 0A            		LD [IX+(CHNPRM_TnSlDl-12)],A
     427:  00:8C8E  DD 77 F9            		LD [IX+(CHNPRM_TSlCnt-12)],A
     428:  00:8C91  11 80 F0            		LD DE,NT_
     429:  00:8C94  DD 7E 06            		LD A,[IX+(CHNPRM_Note-12)]
     430:  00:8C97  DD 77 07            		LD [IX+(CHNPRM_SlToNt-12)],A
     431:  00:8C9A  87                  		ADD A,A
     432:  00:8C9B  6F                  		LD L,A
     433:  00:8C9C  26 00               		LD H,0
     434:  00:8C9E  19                  		ADD HL,DE
     435:  00:8C9F  7E                  		LD A,[HL]
     436:  00:8CA0  23                  		INC HL
     437:  00:8CA1  66                  		LD H,[HL]
     438:  00:8CA2  6F                  		LD L,A
     439:  00:8CA3  E5                  		PUSH HL
     440:  00:8CA4  3A 0F F0            		LD A,[PT3_PrNote]
     441:  00:8CA7  DD 77 06            		LD [IX+(CHNPRM_Note-12)],A
     442:  00:8CAA  87                  		ADD A,A
     443:  00:8CAB  6F                  		LD L,A
     444:  00:8CAC  26 00               		LD H,0
     445:  00:8CAE  19                  		ADD HL,DE
     446:  00:8CAF  5E                  		LD E,[HL]
     447:  00:8CB0  23                  		INC HL
     448:  00:8CB1  56                  		LD D,[HL]
     449:  00:8CB2  E1                  		POP HL
     450:  00:8CB3  ED 52               		SBC HL,DE
     451:  00:8CB5  DD 75 0D            		LD [IX+(CHNPRM_TnDelt-12)],L
     452:  00:8CB8  DD 74 0E            		LD [IX+(CHNPRM_TnDelt+1-12)],H
     453:  00:8CBB  ED 5B 10 F0         		LD DE,[PT3_PrSlide]
     454:  00:8CBF  DD 73 FA            		LD [IX+(CHNPRM_CrTnSl-12)],E
     455:  00:8CC2  DD 72 FB            		LD [IX+(CHNPRM_CrTnSl+1-12)],D
     456:  00:8CC5  0A                  		LD A,[BC] ;SIGNED TONE STEP
     457:  00:8CC6  03                  		INC BC
     458:  00:8CC7  08                  		EX AF,AF'
     459:  00:8CC8  0A                  		LD A,[BC]
     460:  00:8CC9  03                  		INC BC
     461:  00:8CCA  A7                  		AND A
     462:  00:8CCB  28 01               		JR Z,.NOSIG
     463:  00:8CCD  EB                  		EX DE,HL
     464:  00:8CCE  ED 52               .NOSIG:	SBC HL,DE
     465:  00:8CD0  F2 D8 8C            		JP P,SET_STP
     466:  00:8CD3  2F                  		CPL
     467:  00:8CD4  08                  		EX AF,AF'
     468:  00:8CD5  ED 44               		NEG
     469:  00:8CD7  08                  		EX AF,AF'
     470:  00:8CD8  DD 77 0C            SET_STP:	LD [IX+(CHNPRM_TSlStp+1-12)],A
     471:  00:8CDB  08                  		EX AF,AF'
     472:  00:8CDC  DD 77 0B            		LD [IX+(CHNPRM_TSlStp-12)],A
     473:  00:8CDF  DD 36 FE 00         		LD [IX+(CHNPRM_COnOff-12)],0
     474:  00:8CE3  C9                  		RET
     475:  00:8CE4                      
     476:  00:8CE4  DD CB 09 D6         C_GLISS:	SET 2,[IX+(CHNPRM_Flags-12)]
     477:  00:8CE8  0A                  		LD A,[BC]
     478:  00:8CE9  03                  		INC BC
     479:  00:8CEA  DD 77 0A            		LD [IX+(CHNPRM_TnSlDl-12)],A
     480:  00:8CED  DD 77 F9            		LD [IX+(CHNPRM_TSlCnt-12)],A
     481:  00:8CF0  0A                  		LD A,[BC]
     482:  00:8CF1  03                  		INC BC
     483:  00:8CF2  08                  		EX AF,AF'
     484:  00:8CF3  0A                  		LD A,[BC]
     485:  00:8CF4  03                  		INC BC
     486:  00:8CF5  18 E1               		JR SET_STP
     487:  00:8CF7                      
     488:  00:8CF7  0A                  C_SMPOS:	LD A,[BC]
     489:  00:8CF8  03                  		INC BC
     490:  00:8CF9  DD 77 F5            		LD [IX+(CHNPRM_PsInSm-12)],A
     491:  00:8CFC  C9                  		RET
     492:  00:8CFD                      
     493:  00:8CFD  0A                  C_ORPOS:	LD A,[BC]
     494:  00:8CFE  03                  		INC BC
     495:  00:8CFF  DD 77 F4            		LD [IX+(CHNPRM_PsInOr-12)],A
     496:  00:8D02  C9                  		RET
     497:  00:8D03                      
     498:  00:8D03  0A                  C_VIBRT:	LD A,[BC]
     499:  00:8D04  03                  		INC BC
     500:  00:8D05  DD 77 FF            		LD [IX+(CHNPRM_OnOffD-12)],A
     501:  00:8D08  DD 77 FE            		LD [IX+(CHNPRM_COnOff-12)],A
     502:  00:8D0B  0A                  		LD A,[BC]
     503:  00:8D0C  03                  		INC BC
     504:  00:8D0D  DD 77 00            		LD [IX+(CHNPRM_OffOnD-12)],A
     505:  00:8D10  AF                  		XOR A
     506:  00:8D11  DD 77 F9            		LD [IX+(CHNPRM_TSlCnt-12)],A
     507:  00:8D14  DD 77 FA            		LD [IX+(CHNPRM_CrTnSl-12)],A
     508:  00:8D17  DD 77 FB            		LD [IX+(CHNPRM_CrTnSl+1-12)],A
     509:  00:8D1A  C9                  		RET
     510:  00:8D1B                      
     511:  00:8D1B  0A                  C_ENGLS:	LD A,[BC]
     512:  00:8D1C  03                  		INC BC
     513:  00:8D1D  32 1E F0            		LD [PT3_Env_Del],A
     514:  00:8D20  32 7D F0            		LD [CurEDel],A
     515:  00:8D23  0A                  		LD A,[BC]
     516:  00:8D24  03                  		INC BC
     517:  00:8D25  6F                  		LD L,A
     518:  00:8D26  0A                  		LD A,[BC]
     519:  00:8D27  03                  		INC BC
     520:  00:8D28  67                  		LD H,A
     521:  00:8D29  22 1F F0            		LD [PT3_ESldAdd],HL
     522:  00:8D2C  C9                  		RET
     523:  00:8D2D                      
     524:  00:8D2D  0A                  C_DELAY:	LD A,[BC]
     525:  00:8D2E  03                  		INC BC
     526:  00:8D2F  32 1C F0            		LD [PT3_Delay],A
     527:  00:8D32  C9                  		RET
     528:  00:8D33                      	
     529:  00:8D33  DD 73 08            SETENV:		LD [IX+(CHNPRM_Env_En-12)],E
     530:  00:8D36  32 4D F1            		LD [AYREGS+AR_EnvTp],A
     531:  00:8D39  0A                  		LD A,[BC]
     532:  00:8D3A  03                  		INC BC
     533:  00:8D3B  67                  		LD H,A
     534:  00:8D3C  0A                  		LD A,[BC]
     535:  00:8D3D  03                  		INC BC
     536:  00:8D3E  6F                  		LD L,A
     537:  00:8D3F  22 4E F1            		LD [EnvBase],HL
     538:  00:8D42  AF                  		XOR A
     539:  00:8D43  DD 77 F4            		LD [IX+(CHNPRM_PsInOr-12)],A
     540:  00:8D46  32 7D F0            		LD [CurEDel],A
     541:  00:8D49  67                  		LD H,A
     542:  00:8D4A  6F                  		LD L,A
     543:  00:8D4B  22 7B F0            		LD [CurESld],HL
     544:  00:8D4E  C9                  C_NOP:		RET
     545:  00:8D4F                      
     546:  00:8D4F  87                  SETORN:		ADD A,A
     547:  00:8D50  5F                  		LD E,A
     548:  00:8D51  16 00               		LD D,0
     549:  00:8D53  DD 72 F4            		LD [IX+(CHNPRM_PsInOr-12)],D
     550:  00:8D56  2A 07 F0            		LD HL,[PT3_OrnPtrs]
     551:  00:8D59  19                  		ADD HL,DE
     552:  00:8D5A  5E                  		LD E,[HL]
     553:  00:8D5B  23                  		INC HL
     554:  00:8D5C  56                  		LD D,[HL]
     555:  00:8D5D  2A 01 F0            		LD HL,[PT3_MODADDR]
     556:  00:8D60  19                  		ADD HL,DE
     557:  00:8D61  DD 75 01            		LD [IX+(CHNPRM_OrnPtr-12)],L
     558:  00:8D64  DD 74 02            		LD [IX+(CHNPRM_OrnPtr+1-12)],H
     559:  00:8D67  C9                  		RET
     560:  00:8D68                      
     561:  00:8D68                      		;ALL 16 ADDRESSES TO PROTECT FROM BROKEN PT3 MODULES
     562:  00:8D68  4E 8D               SPCCOMS:	dw C_NOP
     563:  00:8D6A  E4 8C               		dw C_GLISS
     564:  00:8D6C  83 8C               		dw C_PORTM
     565:  00:8D6E  F7 8C               		dw C_SMPOS
     566:  00:8D70  FD 8C               		dw C_ORPOS
     567:  00:8D72  03 8D               		dw C_VIBRT
     568:  00:8D74  4E 8D               		dw C_NOP
     569:  00:8D76  4E 8D               		dw C_NOP
     570:  00:8D78  1B 8D               		dw C_ENGLS
     571:  00:8D7A  2D 8D               		dw C_DELAY
     572:  00:8D7C  4E 8D               		dw C_NOP
     573:  00:8D7E  4E 8D               		dw C_NOP
     574:  00:8D80  4E 8D               		dw C_NOP
     575:  00:8D82  4E 8D               		dw C_NOP
     576:  00:8D84  4E 8D               		dw C_NOP
     577:  00:8D86  4E 8D               		dw C_NOP
     578:  00:8D88                      
     579:  00:8D88  AF                  CHREGS:		XOR A
     580:  00:8D89  32 4A F1            		LD [AYREGS+AR_AmplC],A
     581:  00:8D8C  DD CB 15 46         		BIT 0,[IX+CHNPRM_Flags]
     582:  00:8D90  E5                  		PUSH HL
     583:  00:8D91  CA B7 8E            		JP Z,.CH_EXIT
     584:  00:8D94  ED 73 0B F0         		LD [PT3_CSP],SP
     585:  00:8D98  DD 6E 0D            		LD L,[IX+CHNPRM_OrnPtr]
     586:  00:8D9B  DD 66 0E            		LD H,[IX+CHNPRM_OrnPtr+1]
     587:  00:8D9E  F9                  		LD SP,HL
     588:  00:8D9F  D1                  		POP DE
     589:  00:8DA0  67                  		LD H,A
     590:  00:8DA1  DD 7E 00            		LD A,[IX+CHNPRM_PsInOr]
     591:  00:8DA4  6F                  		LD L,A
     592:  00:8DA5  39                  		ADD HL,SP
     593:  00:8DA6  3C                  		INC A
     594:  00:8DA7  BA                  		CP D
     595:  00:8DA8  38 01               		JR C,.CH_ORPS
     596:  00:8DAA  7B                  		LD A,E
     597:  00:8DAB  DD 77 00            .CH_ORPS:	LD [IX+CHNPRM_PsInOr],A
     598:  00:8DAE  DD 7E 12            		LD A,[IX+CHNPRM_Note]
     599:  00:8DB1  86                  		ADD A,[HL]
     600:  00:8DB2  F2 B6 8D            		JP P,.CH_NTP
     601:  00:8DB5  AF                  		XOR A
     602:  00:8DB6  FE 60               .CH_NTP:	CP 96
     603:  00:8DB8  38 02               		JR C,.CH_NOK
     604:  00:8DBA  3E 5F               		LD A,95
     605:  00:8DBC  87                  .CH_NOK:	ADD A,A
     606:  00:8DBD  08                  		EX AF,AF'
     607:  00:8DBE  DD 6E 0F            		LD L,[IX+CHNPRM_SamPtr]
     608:  00:8DC1  DD 66 10            		LD H,[IX+CHNPRM_SamPtr+1]
     609:  00:8DC4  F9                  		LD SP,HL
     610:  00:8DC5  D1                  		POP DE
     611:  00:8DC6  26 00               		LD H,0
     612:  00:8DC8  DD 7E 01            		LD A,[IX+CHNPRM_PsInSm]
     613:  00:8DCB  47                  		LD B,A
     614:  00:8DCC  87                  		ADD A,A
     615:  00:8DCD  87                  		ADD A,A
     616:  00:8DCE  6F                  		LD L,A
     617:  00:8DCF  39                  		ADD HL,SP
     618:  00:8DD0  F9                  		LD SP,HL
     619:  00:8DD1  78                  		LD A,B
     620:  00:8DD2  3C                  		INC A
     621:  00:8DD3  BA                  		CP D
     622:  00:8DD4  38 01               		JR C,.CH_SMPS
     623:  00:8DD6  7B                  		LD A,E
     624:  00:8DD7  DD 77 01            .CH_SMPS:	LD [IX+CHNPRM_PsInSm],A
     625:  00:8DDA  C1                  		POP BC
     626:  00:8DDB  E1                  		POP HL
     627:  00:8DDC  DD 5E 08            		LD E,[IX+CHNPRM_TnAcc]
     628:  00:8DDF  DD 56 09            		LD D,[IX+CHNPRM_TnAcc+1]
     629:  00:8DE2  19                  		ADD HL,DE
     630:  00:8DE3  CB 70               		BIT 6,B
     631:  00:8DE5  28 06               		JR Z,.CH_NOAC
     632:  00:8DE7  DD 75 08            		LD [IX+CHNPRM_TnAcc],L
     633:  00:8DEA  DD 74 09            		LD [IX+CHNPRM_TnAcc+1],H
     634:  00:8DED  EB                  .CH_NOAC:	EX DE,HL
     635:  00:8DEE  08                  		EX AF,AF'
     636:  00:8DEF  6F                  		LD L,A
     637:  00:8DF0  26 00               		LD H,0
     638:  00:8DF2  31 80 F0            		LD SP,NT_
     639:  00:8DF5  39                  		ADD HL,SP
     640:  00:8DF6  F9                  		LD SP,HL
     641:  00:8DF7  E1                  		POP HL
     642:  00:8DF8  19                  		ADD HL,DE
     643:  00:8DF9  DD 5E 06            		LD E,[IX+CHNPRM_CrTnSl]
     644:  00:8DFC  DD 56 07            		LD D,[IX+CHNPRM_CrTnSl+1]
     645:  00:8DFF  19                  		ADD HL,DE
     646:  00:8E00  ED 7B 0B F0         		LD SP,[PT3_CSP]
     647:  00:8E04  E3                  		EX [SP],HL
     648:  00:8E05  AF                  		XOR A
     649:  00:8E06  DD B6 05            		OR [IX+CHNPRM_TSlCnt]
     650:  00:8E09  28 3E               		JR Z,.CH_AMP
     651:  00:8E0B  DD 35 05            		DEC [IX+CHNPRM_TSlCnt]
     652:  00:8E0E  20 39               		JR NZ,.CH_AMP
     653:  00:8E10  DD 7E 16            		LD A,[IX+CHNPRM_TnSlDl]
     654:  00:8E13  DD 77 05            		LD [IX+CHNPRM_TSlCnt],A
     655:  00:8E16  DD 6E 17            		LD L,[IX+CHNPRM_TSlStp]
     656:  00:8E19  DD 66 18            		LD H,[IX+CHNPRM_TSlStp+1]
     657:  00:8E1C  7C                  		LD A,H
     658:  00:8E1D  19                  		ADD HL,DE
     659:  00:8E1E  DD 75 06            		LD [IX+CHNPRM_CrTnSl],L
     660:  00:8E21  DD 74 07            		LD [IX+CHNPRM_CrTnSl+1],H
     661:  00:8E24  DD CB 15 56         		BIT 2,[IX+CHNPRM_Flags]
     662:  00:8E28  20 1F               		JR NZ,.CH_AMP
     663:  00:8E2A  DD 5E 19            		LD E,[IX+CHNPRM_TnDelt]
     664:  00:8E2D  DD 56 1A            		LD D,[IX+CHNPRM_TnDelt+1]
     665:  00:8E30  A7                  		AND A
     666:  00:8E31  28 01               		JR Z,.CH_STPP
     667:  00:8E33  EB                  		EX DE,HL
     668:  00:8E34  ED 52               .CH_STPP:	SBC HL,DE
     669:  00:8E36  FA 49 8E            		JP M,.CH_AMP
     670:  00:8E39  DD 7E 13            		LD A,[IX+CHNPRM_SlToNt]
     671:  00:8E3C  DD 77 12            		LD [IX+CHNPRM_Note],A
     672:  00:8E3F  AF                  		XOR A
     673:  00:8E40  DD 77 05            		LD [IX+CHNPRM_TSlCnt],A
     674:  00:8E43  DD 77 06            		LD [IX+CHNPRM_CrTnSl],A
     675:  00:8E46  DD 77 07            		LD [IX+CHNPRM_CrTnSl+1],A
     676:  00:8E49  DD 7E 02            .CH_AMP:	LD A,[IX+CHNPRM_CrAmSl]
     677:  00:8E4C  CB 79               		BIT 7,C
     678:  00:8E4E  28 13               		JR Z,.CH_NOAM
     679:  00:8E50  CB 71               		BIT 6,C
     680:  00:8E52  28 07               		JR Z,.CH_AMIN
     681:  00:8E54  FE 0F               		CP 15
     682:  00:8E56  28 0B               		JR Z,.CH_NOAM
     683:  00:8E58  3C                  		INC A
     684:  00:8E59  18 05               		JR .CH_SVAM
     685:  00:8E5B  FE F1               .CH_AMIN:	CP -15
     686:  00:8E5D  28 04               		JR Z,.CH_NOAM
     687:  00:8E5F  3D                  		DEC A
     688:  00:8E60  DD 77 02            .CH_SVAM:	LD [IX+CHNPRM_CrAmSl],A
     689:  00:8E63  6F                  .CH_NOAM:	LD L,A
     690:  00:8E64  78                  		LD A,B
     691:  00:8E65  E6 0F               		AND 15
     692:  00:8E67  85                  		ADD A,L
     693:  00:8E68  F2 6C 8E            		JP P,.CH_APOS
     694:  00:8E6B  AF                  		XOR A
     695:  00:8E6C  FE 10               .CH_APOS:	CP 16
     696:  00:8E6E  38 02               		JR C,.CH_VOL
     697:  00:8E70  3E 0F               		LD A,15
     698:  00:8E72  DD B6 1C            .CH_VOL:	OR [IX+CHNPRM_Volume]
     699:  00:8E75  6F                  		LD L,A
     700:  00:8E76  26 00               		LD H,0
     701:  00:8E78  11 40 F1            		LD DE,VT_
     702:  00:8E7B  19                  		ADD HL,DE
     703:  00:8E7C  7E                  		LD A,[HL]
     704:  00:8E7D  CB 41               .CH_ENV:	BIT 0,C
     705:  00:8E7F  20 03               		JR NZ,.CH_NOEN
     706:  00:8E81  DD B6 14            		OR [IX+CHNPRM_Env_En]
     707:  00:8E84  32 4A F1            .CH_NOEN:	LD [AYREGS+AR_AmplC],A
     708:  00:8E87  CB 78               		BIT 7,B
     709:  00:8E89  79                  		LD A,C
     710:  00:8E8A  28 19               		JR Z,.NO_ENSL
     711:  00:8E8C  17                  		RLA
     712:  00:8E8D  17                  		RLA
     713:  00:8E8E  CB 2F               		SRA A
     714:  00:8E90  CB 2F               		SRA A
     715:  00:8E92  CB 2F               		SRA A
     716:  00:8E94  DD 86 04            		ADD A,[IX+CHNPRM_CrEnSl] ;SEE COMMENT BELOW
     717:  00:8E97  CB 68               		BIT 5,B
     718:  00:8E99  28 03               		JR Z,.NO_ENAC
     719:  00:8E9B  DD 77 04            		LD [IX+CHNPRM_CrEnSl],A
     720:  00:8E9E  21 1D F0            .NO_ENAC:	LD HL,PT3_AddToEn
     721:  00:8EA1  86                  		ADD A,[HL] ;BUG IN PT3 - NEED WORD HERE.
     722:  00:8EA2                      			   ;FIX IT IN NEXT VERSION?
     723:  00:8EA2  77                  		LD [HL],A
     724:  00:8EA3  18 0E               		JR .CH_MIX
     725:  00:8EA5  1F                  .NO_ENSL:	RRA
     726:  00:8EA6  DD 86 03            		ADD A,[IX+CHNPRM_CrNsSl]
     727:  00:8EA9  32 7F F0            		LD [AddToNs],A
     728:  00:8EAC  CB 68               		BIT 5,B
     729:  00:8EAE  28 03               		JR Z,.CH_MIX
     730:  00:8EB0  DD 77 03            		LD [IX+CHNPRM_CrNsSl],A
     731:  00:8EB3  78                  .CH_MIX:	LD A,B
     732:  00:8EB4  1F                  		RRA
     733:  00:8EB5  E6 48               		AND $48
     734:  00:8EB7  21 47 F1            .CH_EXIT:	LD HL,AYREGS+AR_Mixer
     735:  00:8EBA  B6                  		OR [HL]
     736:  00:8EBB  0F                  		RRCA
     737:  00:8EBC  77                  		LD [HL],A
     738:  00:8EBD  E1                  		POP HL
     739:  00:8EBE  AF                  		XOR A
     740:  00:8EBF  DD B6 0A            		OR [IX+CHNPRM_COnOff]
     741:  00:8EC2  C8                  		RET Z
     742:  00:8EC3  DD 35 0A            		DEC [IX+CHNPRM_COnOff]
     743:  00:8EC6  C0                  		RET NZ
     744:  00:8EC7  DD AE 15            		XOR [IX+CHNPRM_Flags]
     745:  00:8ECA  DD 77 15            		LD [IX+CHNPRM_Flags],A
     746:  00:8ECD  1F                  		RRA
     747:  00:8ECE  DD 7E 0B            		LD A,[IX+CHNPRM_OnOffD]
     748:  00:8ED1  38 03               		JR C,.CH_ONDL
     749:  00:8ED3  DD 7E 0C            		LD A,[IX+CHNPRM_OffOnD]
     750:  00:8ED6  DD 77 0A            .CH_ONDL:	LD [IX+CHNPRM_COnOff],A
     751:  00:8ED9  C9                  		RET
     752:  00:8EDA                      
     753:  00:8EDA  AF                  PT3_PLAY:	XOR A
     754:  00:8EDB  32 1D F0            		LD [PT3_AddToEn],A
     755:  00:8EDE  32 47 F1            		LD [AYREGS+AR_Mixer],A
     756:  00:8EE1  3D                  		DEC A
     757:  00:8EE2  32 4D F1            		LD [AYREGS+AR_EnvTp],A
     758:  00:8EE5  21 7A F0            		LD HL,DelyCnt
     759:  00:8EE8  35                  		DEC [HL]
     760:  00:8EE9  C2 70 8F            		JP NZ,.PL2
     761:  00:8EEC  21 3E F0            		LD HL,ChanA+CHNPRM_NtSkCn
     762:  00:8EEF  35                  		DEC [HL]
     763:  00:8EF0  20 4E               		JR NZ,.PL1B
     764:  00:8EF2  ED 4B 12 F0         		LD BC,[PT3_AdInPtA]
     765:  00:8EF6  0A                  		LD A,[BC]
     766:  00:8EF7  A7                  		AND A
     767:  00:8EF8  20 3B               		JR NZ,.PL1A
     768:  00:8EFA  57                  		LD D,A
     769:  00:8EFB  32 7E F0            		LD [Ns_Base],A
     770:  00:8EFE  2A 03 F0            		LD HL,[PT3_CrPsPtr]
     771:  00:8F01  23                  		INC HL
     772:  00:8F02  7E                  		LD A,[HL]
     773:  00:8F03  3C                  		INC A
     774:  00:8F04  20 08               		JR NZ,.PLNLP
     775:  00:8F06  CD 70 8A            		CALL CHECKLP
     776:  00:8F09  2A 18 F0            		LD HL,[PT3_LPosPtr]
     777:  00:8F0C  7E                  		LD A,[HL]
     778:  00:8F0D  3C                  		INC A
     779:  00:8F0E  22 03 F0            .PLNLP:	LD [PT3_CrPsPtr],HL
     780:  00:8F11  3D                  		DEC A
     781:  00:8F12  87                  		ADD A,A
     782:  00:8F13  5F                  		LD E,A
     783:  00:8F14  CB 12               		RL D
     784:  00:8F16  2A 1A F0            		LD HL,[PT3_PatsPtr]
     785:  00:8F19  19                  		ADD HL,DE
     786:  00:8F1A  ED 5B 01 F0         		LD DE,[PT3_MODADDR]
     787:  00:8F1E  ED 73 0D F0         		LD [PT3_PSP],SP
     788:  00:8F22  F9                  		LD SP,HL
     789:  00:8F23  E1                  		POP HL
     790:  00:8F24  19                  		ADD HL,DE
     791:  00:8F25  44                  		LD B,H
     792:  00:8F26  4D                  		LD C,L
     793:  00:8F27  E1                  		POP HL
     794:  00:8F28  19                  		ADD HL,DE
     795:  00:8F29  22 14 F0            		LD [PT3_AdInPtB],HL
     796:  00:8F2C  E1                  		POP HL
     797:  00:8F2D  19                  		ADD HL,DE
     798:  00:8F2E  22 16 F0            		LD [PT3_AdInPtC],HL
     799:  00:8F31  ED 7B 0D F0         		LD SP,[PT3_PSP]
     800:  00:8F35                      
     801:  00:8F35  DD 21 2F F0         .PL1A:		LD IX,ChanA+12
     802:  00:8F39  CD 18 8C            		CALL PTDECOD
     803:  00:8F3C  ED 43 12 F0         		LD [PT3_AdInPtA],BC
     804:  00:8F40                      
     805:  00:8F40  21 5B F0            .PL1B:		LD HL,ChanB+CHNPRM_NtSkCn
     806:  00:8F43  35                  		DEC [HL]
     807:  00:8F44  20 0F               		JR NZ,.PL1C
     808:  00:8F46  DD 21 4C F0         		LD IX,ChanB+12
     809:  00:8F4A  ED 4B 14 F0         		LD BC,[PT3_AdInPtB]
     810:  00:8F4E  CD 18 8C            		CALL PTDECOD
     811:  00:8F51  ED 43 14 F0         		LD [PT3_AdInPtB],BC
     812:  00:8F55                      
     813:  00:8F55  21 78 F0            .PL1C:		LD HL,ChanC+CHNPRM_NtSkCn
     814:  00:8F58  35                  		DEC [HL]
     815:  00:8F59  20 0F               		JR NZ,.PL1D
     816:  00:8F5B  DD 21 69 F0         		LD IX,ChanC+12
     817:  00:8F5F  ED 4B 16 F0         		LD BC,[PT3_AdInPtC]
     818:  00:8F63  CD 18 8C            		CALL PTDECOD
     819:  00:8F66  ED 43 16 F0         		LD [PT3_AdInPtC],BC
     820:  00:8F6A                      
     821:  00:8F6A  3A 1C F0            .PL1D:		LD A,[PT3_Delay]
     822:  00:8F6D  32 7A F0            		LD [DelyCnt],A
     823:  00:8F70                      
     824:  00:8F70  DD 21 23 F0         .PL2:		LD IX,ChanA
     825:  00:8F74  2A 40 F1            		LD HL,[AYREGS+AR_TonA]
     826:  00:8F77  CD 88 8D            		CALL CHREGS
     827:  00:8F7A  22 40 F1            		LD [AYREGS+AR_TonA],HL
     828:  00:8F7D  3A 4A F1            		LD A,[AYREGS+AR_AmplC]
     829:  00:8F80  32 48 F1            		LD [AYREGS+AR_AmplA],A
     830:  00:8F83  DD 21 40 F0         		LD IX,ChanB
     831:  00:8F87  2A 42 F1            		LD HL,[AYREGS+AR_TonB]
     832:  00:8F8A  CD 88 8D            		CALL CHREGS
     833:  00:8F8D  22 42 F1            		LD [AYREGS+AR_TonB],HL
     834:  00:8F90  3A 4A F1            		LD A,[AYREGS+AR_AmplC]
     835:  00:8F93  32 49 F1            		LD [AYREGS+AR_AmplB],A
     836:  00:8F96  DD 21 5D F0         		LD IX,ChanC
     837:  00:8F9A  2A 44 F1            		LD HL,[AYREGS+AR_TonC]
     838:  00:8F9D  CD 88 8D            		CALL CHREGS
     839:  00:8FA0  22 44 F1            		LD [AYREGS+AR_TonC],HL
     840:  00:8FA3                      
     841:  00:8FA3  2A 7E F0            		LD HL,[Ns_Base_AddToNs]
     842:  00:8FA6  7C                  		LD A,H
     843:  00:8FA7  85                  		ADD A,L
     844:  00:8FA8  32 46 F1            		LD [AYREGS+AR_Noise],A
     845:  00:8FAB                      
     846:  00:8FAB  3A 1D F0            		LD A,[PT3_AddToEn]
     847:  00:8FAE  5F                  		LD E,A
     848:  00:8FAF  87                  		ADD A,A
     849:  00:8FB0  9F                  		SBC A,A
     850:  00:8FB1  57                  		LD D,A
     851:  00:8FB2  2A 4E F1            		LD HL,[EnvBase]
     852:  00:8FB5  19                  		ADD HL,DE
     853:  00:8FB6  ED 5B 7B F0         		LD DE,[CurESld]
     854:  00:8FBA  19                  		ADD HL,DE
     855:  00:8FBB  22 4B F1            		LD [AYREGS+AR_Env],HL
     856:  00:8FBE                      
     857:  00:8FBE  AF                  		XOR A
     858:  00:8FBF  21 7D F0            		LD HL,CurEDel
     859:  00:8FC2  B6                  		OR [HL]
     860:  00:8FC3  C8                  		RET Z
     861:  00:8FC4  35                  		DEC [HL]
     862:  00:8FC5  C0                  		RET NZ
     863:  00:8FC6  3A 1E F0            		LD A,[PT3_Env_Del]
     864:  00:8FC9  77                  		LD [HL],A
     865:  00:8FCA  2A 1F F0            		LD HL,[PT3_ESldAdd]
     866:  00:8FCD  19                  		ADD HL,DE
     867:  00:8FCE  22 7B F0            		LD [CurESld],HL
     868:  00:8FD1  C9                  		RET
     869:  00:8FD2                      
     870:  00:8FD2  AF                  PT3_ROUT:	XOR A
     871:  00:8FD3                      	
     872:  00:8FD3                      ROUT_A0:	; --- FIXES BITS 6 AND 7 OF MIXER ---
     873:  00:8FD3  21 47 F1            		LD	HL,AYREGS+AR_Mixer
     874:  00:8FD6  CB FE               		set	7,[hl]
     875:  00:8FD8  CB B6               		res	6,[hl]
     876:  00:8FDA                      
     877:  00:8FDA  0E A0               		LD C,$A0
     878:  00:8FDC  21 40 F1            		LD HL,AYREGS
     879:  00:8FDF  ED 79               .LOUT:		OUT [C],A
     880:  00:8FE1  0C                  		INC C
     881:  00:8FE2  ED A3               		OUTI 
     882:  00:8FE4  0D                  		DEC C
     883:  00:8FE5  3C                  		INC A
     884:  00:8FE6  FE 0D               		CP 13
     885:  00:8FE8  20 F5               		JR NZ,.LOUT
     886:  00:8FEA  ED 79               		OUT [C],A
     887:  00:8FEC  7E                  		LD A,[HL]
     888:  00:8FED  A7                  		AND A
     889:  00:8FEE  F8                  		RET M
     890:  00:8FEF  0C                  		INC C
     891:  00:8FF0  ED 79               		OUT [C],A
     892:  00:8FF2  C9                  		RET
     893:  00:8FF3                      
     894:  00:8FF3  64                  NT_DATA:	db (T_NEW_0-T1_)*2
     895:  00:8FF4  2A                  		db TCNEW_0-T_
     896:  00:8FF5  65                  		db (T_OLD_0-T1_)*2+1
     897:  00:8FF6  00                  		db TCOLD_0-T_
     898:  00:8FF7  01                  		db (T_NEW_1-T1_)*2+1
     899:  00:8FF8  0C                  		db TCNEW_1-T_
     900:  00:8FF9  01                  		db (T_OLD_1-T1_)*2+1
     901:  00:8FFA  0C                  		db TCOLD_1-T_
     902:  00:8FFB  94                  		db (T_NEW_2-T1_)*2
     903:  00:8FFC  35                  		db TCNEW_2-T_
     904:  00:8FFD  30                  		db (T_OLD_2-T1_)*2
     905:  00:8FFE  0E                  		db TCOLD_2-T_
     906:  00:8FFF  60                  		db (T_NEW_3-T1_)*2
     907:  00:9000  20                  		db TCNEW_3-T_
     908:  00:9001  60                  		db (T_OLD_3-T1_)*2
     909:  00:9002  21                  		db TCOLD_3-T_
     910:  00:9003                      
     911:  00:9003                      T_:
     912:  00:9003                      
     913:  00:9003                      TCOLD_0:	db $00+1,$04+1,$08+1,$0A+1,$0C+1,$0E+1,$12+1,$14+1
     913:  00:9003  01 05 09 0B 0D 0F 13 15 
     914:  00:900B  19 25 3D 00         		db $18+1,$24+1,$3C+1,0
     915:  00:900F                      TCNEW_1:	
     916:  00:900F  5D 00               TCOLD_1:	db $5C+1,0
     917:  00:9011                      TCOLD_2:	db $30+1,$36+1,$4C+1,$52+1,$5E+1,$70+1,$82,$8C,$9C
     917:  00:9011  31 37 4D 53 5F 71 82 8C 9C 
     918:  00:901A                      		db $9E,$A0,$A6,$A8,$AA,$AC,$AE,$AE,0
     918:  00:901A  9E A0 A6 A8 AA AC AE AE 00 
     919:  00:9023  57                  TCNEW_3:	db $56+1
     920:  00:9024                      TCOLD_3:	db $1E+1,$22+1,$24+1,$28+1,$2C+1,$2E+1,$32+1,$BE+1,0
     920:  00:9024  1F 23 25 29 2D 2F 33 BF 00 
     921:  00:902D                      TCNEW_0:	db $1C+1,$20+1,$22+1,$26+1,$2A+1,$2C+1,$30+1,$54+1
     921:  00:902D  1D 21 23 27 2B 2D 31 55 
     922:  00:9035  BD BF 00            		db $BC+1,$BE+1,0
     923:  00:9038                      TCNEW_2:	db $1A+1,$20+1,$24+1,$28+1,$2A+1,$3A+1,$4C+1,$5E+1
     923:  00:9038  1B 21 25 29 2B 3B 4D 5F 
     924:  00:9040  BB BD BF            		db $BA+1,$BC+1,$BE+1
     925:  00:9043                      
     926:  00:9043  00 01 00 90         EMPTYSAMORN: 	db 0,1,0,$90 ;delete $90 if you don't need default sample
     927:  00:9047                      
     928:  00:9047                      T_PACK:		; First 12 values of tone tables (packed)
     929:  00:9047  0D                  		db ($06EC*2)/256
     930:  00:9048  D8                  		db #d8
     931:  00:9049  69                  		db $0755-$06EC
     932:  00:904A  70                  		db $07C5-$0755
     933:  00:904B  76                  		db $083B-$07C5
     934:  00:904C  7D                  		db $08B8-$083B
     935:  00:904D  85                  		db $093D-$08B8
     936:  00:904E  8D                  		db $09CA-$093D
     937:  00:904F  95                  		db $0A5F-$09CA
     938:  00:9050  9D                  		db $0AFC-$0A5F
     939:  00:9051  A8                  		db $0BA4-$0AFC
     940:  00:9052  B1                  		db $0C55-$0BA4
     941:  00:9053  BB                  		db $0D10-$0C55
     942:  00:9054  0C                  		db ($066D*2)/256
     943:  00:9055  DA                  		db #da
     944:  00:9056  62                  		db $06CF-$066D
     945:  00:9057  68                  		db $0737-$06CF
     946:  00:9058  6D                  		db $07A4-$0737
     947:  00:9059  75                  		db $0819-$07A4
     948:  00:905A  7B                  		db $0894-$0819
     949:  00:905B  83                  		db $0917-$0894
     950:  00:905C  8A                  		db $09A1-$0917
     951:  00:905D  92                  		db $0A33-$09A1
     952:  00:905E  9C                  		db $0ACF-$0A33
     953:  00:905F  A4                  		db $0B73-$0ACF
     954:  00:9060  AF                  		db $0C22-$0B73
     955:  00:9061  B8                  		db $0CDA-$0C22
     956:  00:9062  0E                  		db ($0704*2)/256
     957:  00:9063  08                  		db #08
     958:  00:9064  6A                  		db $076E-$0704
     959:  00:9065  72                  		db $07E0-$076E
     960:  00:9066  78                  		db $0858-$07E0
     961:  00:9067  7E                  		db $08D6-$0858
     962:  00:9068  86                  		db $095C-$08D6
     963:  00:9069  90                  		db $09EC-$095C
     964:  00:906A  96                  		db $0A82-$09EC
     965:  00:906B  A0                  		db $0B22-$0A82
     966:  00:906C  AA                  		db $0BCC-$0B22
     967:  00:906D  B4                  		db $0C80-$0BCC
     968:  00:906E  BE                  		db $0D3E-$0C80
     969:  00:906F  0F                  		db ($07E0*2)/256
     970:  00:9070  C0                  		db #c0
     971:  00:9071  78                  		db $0858-$07E0
     972:  00:9072  88                  		db $08E0-$0858
     973:  00:9073  80                  		db $0960-$08E0
     974:  00:9074  90                  		db $09F0-$0960
     975:  00:9075  98                  		db $0A88-$09F0
     976:  00:9076  A0                  		db $0B28-$0A88
     977:  00:9077  B0                  		db $0BD8-$0B28
     978:  00:9078  A8                  		db $0C80-$0BD8
     979:  00:9079  E0                  		db $0D60-$0C80
     980:  00:907A  B0                  		db $0E10-$0D60
     981:  00:907B  E8                  		db $0EF8-$0E10
      61.  00:907C                      	include "ayFX-ROM_sjasm.asm"
       1:  00:907C                      		; --- ayFX REPLAYER v1.31 ---
       2:  00:907C                      
       3:  00:907C                      		; --- v1.31	Fixed bug on previous version, only PSG channel C worked
       4:  00:907C                      		; --- v1.3	Fixed volume and Relative volume versions on the same file, conditional compilation
       5:  00:907C                      		; ---		Support for dynamic or fixed channel allocation
       6:  00:907C                      		; --- v1.2f/r	ayFX bank support
       7:  00:907C                      		; --- v1.11f/r	If a frame volume is zero then no AYREGS update
       8:  00:907C                      		; --- v1.1f/r	Fixed volume for all ayFX streams
       9:  00:907C                      		; --- v1.1	Explicit priority (as suggested by AR)
      10:  00:907C                      		; --- v1.0f	Bug fixed (error when using noise)
      11:  00:907C                      		; --- v1.0	Initial release
      12:  00:907C                      
      13:  00:907C                      		; --- DEFINE AYFXRELATIVE AS 0 FOR FIXED VOLUME VERSION ---
      14:  00:907C                      		; --- DEFINE AYFXRELATIVE AS 1 FOR RELATIVE VOLUME VERSION ---
      15:  00:907C  (00:0000)           AYFXRELATIVE equ 0
      16:  00:907C                      
      17:  00:907C                      ayFX_SETUP:	; ---          ayFX replayer setup          ---
      18:  00:907C                      		; --- INPUT: HL -> pointer to the ayFX bank ---
      19:  00:907C  22 41 F2            		ld	[ayFX_BANK],hl			; Current ayFX bank
      20:  00:907F  3E 01               		ld	a,1				; a:=0
      21:  00:9081  32 40 F2            		ld	[ayFX_MODE],a			; Initial mode: fixed channel
      22:  00:9084  3C                  		inc	a				; Starting channel (=1)
      23:  00:9085  32 4A F2            		ld	[ayFX_CHANNEL],a		; Updated
      24:  00:9088                      ayFX_END:	; --- End of an ayFX stream ---
      25:  00:9088  3E FF               		ld	a,255				; Lowest ayFX priority
      26:  00:908A  32 43 F2            		ld	[ayFX_PRIORITY],a		; Priority saved (not playing ayFX stream)
      27:  00:908D  C9                  		ret					; Return
      28:  00:908E                      
      29:  00:908E                      ayFX_INIT:	; ---     INIT A NEW ayFX STREAM     ---
      30:  00:908E                      		; --- INPUT: A -> sound to be played ---
      31:  00:908E                      		; ---        C -> sound priority     ---
      32:  00:908E  C5                  		push	bc				; Store bc in stack
      33:  00:908F  D5                  		push	de				; Store de in stack
      34:  00:9090  E5                  		push	hl				; Store hl in stack
      35:  00:9091                      		; --- Check if the index is in the bank ---
      36:  00:9091  47                  		ld	b,a				; b:=a (new ayFX stream index)
      37:  00:9092  2A 41 F2            		ld	hl,[ayFX_BANK]			; Current ayFX BANK
      38:  00:9095  7E                  		ld	a,[hl]				; Number of samples in the bank
      39:  00:9096  B7                  		or	a				; If zero (means 256 samples)...
      40:  00:9097  28 06               		jr	z,.CHECK_PRI			; ...goto .CHECK_PRI
      41:  00:9099                      		; The bank has less than 256 samples
      42:  00:9099  78                  		ld	a,b				; a:=b (new ayFX stream index)
      43:  00:909A  BE                  		cp	[hl]				; If new index is not in the bank...
      44:  00:909B  3E 02               		ld	a,2				; a:=2 (error 2: Sample not in the bank)
      45:  00:909D  30 21               		jr	nc,.INIT_END			; ...we can't init it
      46:  00:909F                      .CHECK_PRI:	; --- Check if the new priority is lower than the current one ---
      47:  00:909F                      		; ---   Remember: 0 = highest priority, 15 = lowest priority  ---
      48:  00:909F  78                  		ld	a,b				; a:=b (new ayFX stream index)
      49:  00:90A0  3A 43 F2            		ld	a,[ayFX_PRIORITY]		; a:=Current ayFX stream priority
      50:  00:90A3  B9                  		cp	c				; If new ayFX stream priority is lower than current one...
      51:  00:90A4  3E 01               		ld	a,1				; a:=1 (error 1: A sample with higher priority is being played)
      52:  00:90A6  38 18               		jr	c,.INIT_END			; ...we don't start the new ayFX stream
      53:  00:90A8                      		; --- Set new priority ---
      54:  00:90A8  79                  		ld	a,c				; a:=New priority
      55:  00:90A9  E6 0F               		and	$0F				; We mask the priority
      56:  00:90AB  32 43 F2            		ld	[ayFX_PRIORITY],a		; new ayFX stream priority saved in RAM
      57:  00:90AE                      
      58:  00:90AE                      		IF ( AYFXRELATIVE == 1 )
      59:  00:90AE                    ~ 			; --- Volume adjust using PT3 volume table ---
      60:  00:90AE                    ~ 			ld	c,a				; c:=New priority (fixed)
      61:  00:90AE                    ~ 			ld	a,15				; a:=15
      62:  00:90AE                    ~ 			sub	c				; a:=15-New priority = relative volume
      63:  00:90AE                    ~ 			jr	z,.INIT_NOSOUND		; If priority is 15 -> no sound output (volume is zero)
      64:  00:90AE                    ~ 			add	a,a				; a:=a*2
      65:  00:90AE                    ~ 			add	a,a				; a:=a*4
      66:  00:90AE                    ~ 			add	a,a				; a:=a*8
      67:  00:90AE                    ~ 			add	a,a				; a:=a*16
      68:  00:90AE                    ~ 			ld	e,a				; e:=a
      69:  00:90AE                    ~ 			ld	d,0				; de:=a
      70:  00:90AE                    ~ 			ld	hl,VT_				; hl:=PT3 volume table
      71:  00:90AE                    ~ 			add	hl,de				; hl is a pointer to the relative volume table
      72:  00:90AE                    ~ 			ld	[ayFX_VT],hl			; Save pointer
      73:  00:90AE                    ~ 		ENDIF
      74:  00:90AE                      
      75:  00:90AE                      		; --- Calculate the pointer to the new ayFX stream ---
      76:  00:90AE  ED 5B 41 F2         		ld	de,[ayFX_BANK]			; de:=Current ayFX bank
      77:  00:90B2  13                  		inc	de				; de points to the increments table of the bank
      78:  00:90B3  68                  		ld	l,b				; l:=b (new ayFX stream index)
      79:  00:90B4  26 00               		ld	h,0				; hl:=b (new ayFX stream index)
      80:  00:90B6  29                  		add	hl,hl				; hl:=hl*2
      81:  00:90B7  19                  		add	hl,de				; hl:=hl+de (hl points to the correct increment)
      82:  00:90B8  5E                  		ld	e,[hl]				; e:=lower byte of the increment
      83:  00:90B9  23                  		inc	hl				; hl points to the higher byte of the correct increment
      84:  00:90BA  56                  		ld	d,[hl]				; de:=increment
      85:  00:90BB  19                  		add	hl,de				; hl:=hl+de (hl points to the new ayFX stream)
      86:  00:90BC  22 44 F2            		ld	[ayFX_POINTER],hl		; Pointer saved in RAM
      87:  00:90BF  AF                  		xor	a				; a:=0 (no errors)
      88:  00:90C0  E1                  .INIT_END:	pop	hl				; Retrieve hl from stack
      89:  00:90C1  D1                  		pop	de				; Retrieve de from stack
      90:  00:90C2  C1                  		pop	bc				; Retrieve bc from stack
      91:  00:90C3  C9                  		ret					; Return
      92:  00:90C4                      
      93:  00:90C4                      		IF ( AYFXRELATIVE == 1 )
      94:  00:90C4                    ~ .INIT_NOSOUND:	; --- Init a sample with relative volume zero -> no sound output ---
      95:  00:90C4                    ~ 			ld	a,255				; Lowest ayFX priority
      96:  00:90C4                    ~ 			ld	[ayFX_PRIORITY],a		; Priority saved (not playing ayFX stream)
      97:  00:90C4                    ~ 			jr	.INIT_END			; Jumps to .INIT_END
      98:  00:90C4                    ~ 		ENDIF
      99:  00:90C4                      
     100:  00:90C4                      ayFX_PLAY:	; --- PLAY A FRAME OF AN ayFX STREAM ---
     101:  00:90C4  3A 43 F2            		ld	a,[ayFX_PRIORITY]		; a:=Current ayFX stream priority
     102:  00:90C7  B7                  		or	a				; If priority has bit 7 on...
     103:  00:90C8  F8                  		ret	m				; ...return
     104:  00:90C9                      		; --- Calculate next ayFX channel (if needed) ---
     105:  00:90C9  3A 40 F2            		ld	a,[ayFX_MODE]			; ayFX mode
     106:  00:90CC  E6 01               		and	1				; If bit0=0 (fixed channel)...
     107:  00:90CE  28 08               		jr	z,.TAKECB			; ...skip channel changing
     108:  00:90D0  21 4A F2            		ld	hl,ayFX_CHANNEL			; Old ayFX playing channel
     109:  00:90D3  35                  		dec	[hl]				; New ayFX playing channel
     110:  00:90D4  20 02               		jr	nz,.TAKECB			; If not zero jump to .TAKECB
     111:  00:90D6  36 03               		ld	[hl],3				; If zero -> set channel 3
     112:  00:90D8                      .TAKECB:	; --- Extract control byte from stream ---
     113:  00:90D8  2A 44 F2            		ld	hl,[ayFX_POINTER]		; Pointer to the current ayFX stream
     114:  00:90DB  4E                  		ld	c,[hl]				; c:=Control byte
     115:  00:90DC  23                  		inc	hl				; Increment pointer
     116:  00:90DD                      		; --- Check if there's new tone on stream ---
     117:  00:90DD  CB 69               		bit	5,c				; If bit 5 c is off...
     118:  00:90DF  28 08               		jr	z,.CHECK_NN			; ...jump to .CHECK_NN (no new tone)
     119:  00:90E1                      		; --- Extract new tone from stream ---
     120:  00:90E1  5E                  		ld	e,[hl]				; e:=lower byte of new tone
     121:  00:90E2  23                  		inc	hl				; Increment pointer
     122:  00:90E3  56                  		ld	d,[hl]				; d:=higher byte of new tone
     123:  00:90E4  23                  		inc	hl				; Increment pointer
     124:  00:90E5  ED 53 46 F2         		ld	[ayFX_TONE],de			; ayFX tone updated
     125:  00:90E9                      .CHECK_NN:	; --- Check if there's new noise on stream ---
     126:  00:90E9  CB 71               		bit	6,c				; if bit 6 c is off...
     127:  00:90EB  28 09               		jr	z,.SETPOINTER			; ...jump to .SETPOINTER (no new noise)
     128:  00:90ED                      		; --- Extract new noise from stream ---
     129:  00:90ED  7E                  		ld	a,[hl]				; a:=New noise
     130:  00:90EE  23                  		inc	hl				; Increment pointer
     131:  00:90EF  FE 20               		cp	$20				; If it's an illegal value of noise (used to mark end of stream)...
     132:  00:90F1  28 95               		jr.	z,ayFX_END			; ...jump to ayFX_END
     133:  00:90F3  32 48 F2            		ld	[ayFX_NOISE],a			; ayFX noise updated
     134:  00:90F6                      .SETPOINTER:	; --- Update ayFX pointer ---
     135:  00:90F6  22 44 F2            		ld	[ayFX_POINTER],hl		; Update ayFX stream pointer
     136:  00:90F9                      		; --- Extract volume ---
     137:  00:90F9  79                  		ld	a,c				; a:=Control byte
     138:  00:90FA  E6 0F               		and	$0F				; lower nibble
     139:  00:90FC                      
     140:  00:90FC                      		IF ( AYFXRELATIVE == 1 )
     141:  00:90FC                    ~ 			; --- Fix the volume using PT3 Volume Table ---
     142:  00:90FC                    ~ 			ld	hl,[ayFX_VT]			; hl:=Pointer to relative volume table
     143:  00:90FC                    ~ 			ld	e,a				; e:=a (ayFX volume)
     144:  00:90FC                    ~ 			ld	d,0				; d:=0
     145:  00:90FC                    ~ 			add	hl,de				; hl:=hl+de (hl points to the relative volume of this frame
     146:  00:90FC                    ~ 			ld	a,[hl]				; a:=ayFX relative volume
     147:  00:90FC                    ~ 			or	a				; If relative volume is zero...
     148:  00:90FC                    ~ 		ENDIF
     149:  00:90FC                      
     150:  00:90FC  32 49 F2            		ld	[ayFX_VOLUME],a			; ayFX volume updated
     151:  00:90FF  C8                  		ret	z				; ...return (don't copy ayFX values in to AYREGS)
     152:  00:9100                      		; -------------------------------------
     153:  00:9100                      		; --- COPY ayFX VALUES IN TO AYREGS ---
     154:  00:9100                      		; -------------------------------------
     155:  00:9100                      		; --- Set noise channel ---
     156:  00:9100  CB 79               		bit	7,c				; If noise is off...
     157:  00:9102  20 06               		jr	nz,.SETMASKS			; ...jump to .SETMASKS
     158:  00:9104  3A 48 F2            		ld	a,[ayFX_NOISE]			; ayFX noise value
     159:  00:9107  32 46 F1            		ld	[AYREGS+6],a			; copied in to AYREGS (noise channel)
     160:  00:910A                      .SETMASKS:	; --- Set mixer masks ---
     161:  00:910A  79                  		ld	a,c				; a:=Control byte
     162:  00:910B  E6 90               		and	$90				; Only bits 7 and 4 (noise and tone mask for psg reg 7)
     163:  00:910D  FE 90               		cp	$90				; If no noise and no tone...
     164:  00:910F  C8                  		ret	z				; ...return (don't copy ayFX values in to AYREGS)
     165:  00:9110                      		; --- Copy ayFX values in to ARYREGS ---
     166:  00:9110  0F                  		rrca					; Rotate a to the right (1 TIME)
     167:  00:9111  0F                  		rrca					; Rotate a to the right (2 TIMES) (OR mask)
     168:  00:9112  16 DB               		ld	d,$DB				; d:=Mask for psg mixer (AND mask)
     169:  00:9114                      		; --- Dump to correct channel ---
     170:  00:9114  21 4A F2            		ld	hl,ayFX_CHANNEL			; Next ayFX playing channel
     171:  00:9117  46                  		ld	b,[hl]				; Channel counter
     172:  00:9118                      .CHK1:		; --- Check if playing channel was 1 ---
     173:  00:9118  10 0D               		djnz	.CHK2				; Decrement and jump if channel was not 1
     174:  00:911A                      .PLAY_C:	; --- Play ayFX stream on channel C ---
     175:  00:911A  CD 49 91            		call	.SETMIXER			; Set PSG mixer value (returning a=ayFX volume and hl=ayFX tone)
     176:  00:911D  32 4A F1            		ld	[AYREGS+10],a			; Volume copied in to AYREGS (channel C volume)
     177:  00:9120  CB 51               		bit	2,c				; If tone is off...
     178:  00:9122  C0                  		ret	nz				; ...return
     179:  00:9123  22 44 F1            		ld	[AYREGS+4],hl			; copied in to AYREGS (channel C tone)
     180:  00:9126  C9                  		ret					; Return
     181:  00:9127                      .CHK2:		; --- Check if playing channel was 2 ---
     182:  00:9127  CB 0A               		rrc	d				; Rotate right AND mask
     183:  00:9129  0F                  		rrca					; Rotate right OR mask
     184:  00:912A  10 0D               		djnz	.CHK3				; Decrement and jump if channel was not 2
     185:  00:912C                      .PLAY_B:	; --- Play ayFX stream on channel B ---
     186:  00:912C  CD 49 91            		call	.SETMIXER			; Set PSG mixer value (returning a=ayFX volume and hl=ayFX tone)
     187:  00:912F  32 49 F1            		ld	[AYREGS+9],a			; Volume copied in to AYREGS (channel B volume)
     188:  00:9132  CB 49               		bit	1,c				; If tone is off...
     189:  00:9134  C0                  		ret	nz				; ...return
     190:  00:9135  22 42 F1            		ld	[AYREGS+2],hl			; copied in to AYREGS (channel B tone)
     191:  00:9138  C9                  		ret					; Return
     192:  00:9139                      .CHK3:		; --- Check if playing channel was 3 ---
     193:  00:9139  CB 0A               		rrc	d				; Rotate right AND mask
     194:  00:913B  0F                  		rrca					; Rotate right OR mask
     195:  00:913C                      .PLAY_A:	; --- Play ayFX stream on channel A ---
     196:  00:913C  CD 49 91            		call	.SETMIXER			; Set PSG mixer value (returning a=ayFX volume and hl=ayFX tone)
     197:  00:913F  32 48 F1            		ld	[AYREGS+8],a			; Volume copied in to AYREGS (channel A volume)
     198:  00:9142  CB 41               		bit	0,c				; If tone is off...
     199:  00:9144  C0                  		ret	nz				; ...return
     200:  00:9145  22 40 F1            		ld	[AYREGS+0],hl			; copied in to AYREGS (channel A tone)
     201:  00:9148  C9                  		ret					; Return
     202:  00:9149                      .SETMIXER:	; --- Set PSG mixer value ---
     203:  00:9149  4F                  		ld	c,a				; c:=OR mask
     204:  00:914A  3A 47 F1            		ld	a,[AYREGS+7]			; a:=PSG mixer value
     205:  00:914D  A2                  		and	d				; AND mask
     206:  00:914E  B1                  		or	c				; OR mask
     207:  00:914F  32 47 F1            		ld	[AYREGS+7],a			; PSG mixer value updated
     208:  00:9152  3A 49 F2            		ld	a,[ayFX_VOLUME]			; a:=ayFX volume value
     209:  00:9155  2A 46 F2            		ld	hl,[ayFX_TONE]			; ayFX tone value
     210:  00:9158  C9                  		ret					; Return
     211:  00:9159                      
     212:  00:9159                      		IF ( AYFXRELATIVE == 1 )
     213:  00:9159                    ~ 			; --- UNCOMMENT THIS IF YOU DON'T USE THIS REPLAYER WITH PT3 REPLAYER ---
     214:  00:9159                    ~ 		;VT_:	.INCBIN	"VT.BIN"
     215:  00:9159                    ~ 			; --- UNCOMMENT THIS IF YOU DON'T USE THIS REPLAYER WITH PT3 REPLAYER ---
     216:  00:9159                    ~ 		ENDIF
      62.  00:9159                      	
      63.  00:9159                      	
      64.  00:9159                      
      65.  00:9159                      ;;=====================================================
      66.  00:9159                      ;;DEFINICIÓN DE CANTIONES Y EFECTOS DE SONIDO
      67.  00:9159                      ;;=====================================================		
      68.  00:9159                      song:
      69.  00:9159  (0968)              	incbin "bloodytears_castlevania.99"
      70.  00:9AC1                      	
      71.  00:9AC1                      sfx_bank:
      72.  00:9AC1  (004B)              	incbin "demo.afb"
      73.  00:9B0C                      
     312   00:9B0C                      	
     313   00:9B0C                      	include "subr_ayudas.asm"
       1.  00:9B0C                      ;;=====================================================
       2.  00:9B0C                      ;;SUBRUTINAS MANEJO DE OBJETOS AYUDA
       3.  00:9B0C                      ;;=====================================================	
       4.  00:9B0C                      
       5.  00:9B0C                      ;;=====================================================
       6.  00:9B0C                      ;;INICIALIZA_AYUDAS
       7.  00:9B0C                      ;;=====================================================	
       8.  00:9B0C                      ; función: 	inicializa las variables de estructuras de ayuda del array lista_ayudas
       9.  00:9B0C                      ; entrada: 	datos_delasdistintasayudas, variable estructura_ayuda_ayudaquesea
      10.  00:9B0C                      ; salida: 	lista_ayudas
      11.  00:9B0C                      ; toca:		HL, DE, BC
      12.  00:9B0C                      inicializa_ayudas:
      13.  00:9B0C                      	;oración
      14.  00:9B0C  DD 21 DB A9         	LD		IX, ayuda_oracion
      15.  00:9B10  DD 36 00 00         	LD		(IX + 0), INACTIVA			
      16.  00:9B14  21 B4 AA            	LD		HL, array_oracionon
      17.  00:9B17  DD 74 01            	LD		(IX + 1), H
      18.  00:9B1A  DD 75 02            	LD		(IX + 2), L
      19.  00:9B1D  21 B8 AA            	LD		HL, array_oracionoff
      20.  00:9B20  DD 74 03            	LD		(IX + 3), H
      21.  00:9B23  DD 75 04            	LD		(IX + 4), L
      22.  00:9B26  DD 36 05 A3         	LD		(IX + 5), POSORACION
      23.  00:9B2A  DD 36 06 20         	LD		(IX + 6), POSORACIONX
      24.  00:9B2E  DD 36 07 70         	LD		(IX + 7), POSAYUDASY	
      25.  00:9B32  21 20 9C            	LD		HL, accion_oracion
      26.  00:9B35  DD 74 08            	LD		(IX + 8), H
      27.  00:9B38  DD 75 09            	LD		(IX + 9), L
      28.  00:9B3B                      	
      29.  00:9B3B                      	;cruz
      30.  00:9B3B  21 55 AA            	LD		HL, datos_cruz
      31.  00:9B3E  11 EB A9            	LD		DE, ayuda_cruz
      32.  00:9B41  01 10 00            	LD		BC, 16;#ESTRUCTURA_AYUDA ;equivale a 16.. el tamaño de la estructura en bytes
      33.  00:9B44  ED B0               	LDIR
      34.  00:9B46                      	
      35.  00:9B46                      	;agua bendita
      36.  00:9B46  21 5F AA            	LD		HL, datos_aguabendita
      37.  00:9B49  11 FB A9            	LD		DE, ayuda_aguabendita
      38.  00:9B4C  CD 74 9B            	CALL	carga_datos_ayuda
      39.  00:9B4F                      		
      40.  00:9B4F                      	;armadura
      41.  00:9B4F  21 70 AA            	LD		HL, datos_armadura
      42.  00:9B52  11 0B AA            	LD		DE, ayuda_armadura
      43.  00:9B55  CD 74 9B            	CALL	carga_datos_ayuda
      44.  00:9B58                      		
      45.  00:9B58                      	;planta
      46.  00:9B58  21 81 AA            	LD		HL, datos_planta
      47.  00:9B5B  11 1B AA            	LD		DE, ayuda_planta
      48.  00:9B5E  CD 74 9B            	CALL	carga_datos_ayuda
      49.  00:9B61                      		
      50.  00:9B61                      	;vida extra
      51.  00:9B61  21 92 AA            	LD		HL, datos_vidaextra
      52.  00:9B64  11 2B AA            	LD		DE, ayuda_vidaextra
      53.  00:9B67  CD 74 9B            	CALL	carga_datos_ayuda
      54.  00:9B6A                      		
      55.  00:9B6A                      	;ballesta
      56.  00:9B6A  21 A3 AA            	LD		HL, datos_ballesta
      57.  00:9B6D  11 3B AA            	LD		DE, ayuda_ballesta
      58.  00:9B70  CD 74 9B            	CALL	carga_datos_ayuda
      59.  00:9B73                      fin_resetea_ayudas:
      60.  00:9B73  C9                  	RET
      61.  00:9B74                      	
      62.  00:9B74                      
      63.  00:9B74                      ;;=====================================================
      64.  00:9B74                      ;;CARGA_DATOS_AYUDA
      65.  00:9B74                      ;;=====================================================	
      66.  00:9B74                      ; función: 	carga los datos de la ayuda de una variable dentro de la variable estructura (más carga y espacio que rellenar a pelo desde IX en adelante pero más simple)
      67.  00:9B74                      ;entrada
      68.  00:9B74                      ;  hl: origen de datos
      69.  00:9B74                      ;  de: destino de datos
      70.  00:9B74                      ; salida: 	-
      71.  00:9B74                      ; toca:		HL, DE, BC
      72.  00:9B74                      carga_datos_ayuda:
      73.  00:9B74  01 10 00            	LD		BC, 16;ESTRUCTURA_AYUDA ;equivale a 16.. el tamaño de la estructura en bytes
      74.  00:9B77  ED B0               	LDIR
      75.  00:9B79                      fin_carga_datos_ayuda:
      76.  00:9B79  C9                  	RET
      77.  00:9B7A                      
      78.  00:9B7A                      
      79.  00:9B7A                      
      80.  00:9B7A                      ;;=====================================================
      81.  00:9B7A                      ;;PINTA_OBJ_AYUDA
      82.  00:9B7A                      ;;=====================================================	
      83.  00:9B7A                      ; función: 	pinta un objeto de tipo ayuda que se le pase por referencia IX y el tipo en A
      84.  00:9B7A                      ; entrada: 	IX - puntero a objeto a mostrar, A - si está on u off
      85.  00:9B7A                      ; salida: 	-
      86.  00:9B7A                      ; toca:		AF, HL, BC, DE
      87.  00:9B7A                      pinta_obj_ayuda:
      88.  00:9B7A                      	;se recibe objeto desde fuera, por ejmplo LD IX, ayuda_oracion
      89.  00:9B7A                      
      90.  00:9B7A  B7                  	OR		 A
      91.  00:9B7B  CA 8A 9B            	JP		 Z,.dibujooff
      92.  00:9B7E                      .dibujoon:	
      93.  00:9B7E  DD 66 01            	LD		 H, (IX + 1)
      94.  00:9B81  DD 6E 02            	LD		 L, (IX + 2)
      95.  00:9B84  22 78 85            	LD		(wordaux2), HL
      96.  00:9B87  C3 93 9B            	JP		.param_wordaux2
      97.  00:9B8A                      .dibujooff:
      98.  00:9B8A  DD 66 03            	LD		 H, (IX + 3)
      99.  00:9B8D  DD 6E 04            	LD		 L, (IX + 4)
     100.  00:9B90  22 78 85            	LD		(wordaux2), HL
     101.  00:9B93                      
     102.  00:9B93                      .param_wordaux2:	
     103.  00:9B93  21 00 19            	LD		HL, TILMAP + 256	;calcula posición en tilemap + 256 por colocarse siempre en bank1
     104.  00:9B96  DD 7E 05            	LD		 A, (IX + 5)
     105.  00:9B99  CD 3D 82            	CALL	suma_A_HL
     106.  00:9B9C  22 76 85            	LD		(wordaux1), HL		;pongo el valor en wordaux1
     107.  00:9B9F                      
     108.  00:9B9F                      .filasycols:
     109.  00:9B9F  3E 02               	LD		 A, 2				;equivale a LD	A,2 porque A ya valía 1
     110.  00:9BA1  32 7A 85            	LD		(byteaux1), A	;nº de filas
     111.  00:9BA4  32 7B 85            	LD		(byteaux2), A	;nº de columnas
     112.  00:9BA7                      	
     113.  00:9BA7  C3 36 85            	JP		pinta_array
     114.  00:9BAA                      fin_pinta_obj_ayuda:
     115.  00:9BAA                      
     116.  00:9BAA                      
     117.  00:9BAA                      ;;=====================================================
     118.  00:9BAA                      ;;PINTA_AYUDAS_HABITACIÓN
     119.  00:9BAA                      ;;=====================================================	
     120.  00:9BAA                      ; función: 	examina el byte con las ayudas y pinta las que estén seleccionadas según variable habitacion_extras
     121.  00:9BAA                      ; entrada: 	habitacion_extras
     122.  00:9BAA                      ; salida: 	-
     123.  00:9BAA                      pinta_ayudas_habitacion:
     124.  00:9BAA                      .examina_oracion:
     125.  00:9BAA  3A 88 A6            	LD		 A, (habitacion_extras)
     126.  00:9BAD  CB 7F               	BIT		 7,A
     127.  00:9BAF  CA BB 9B            	JP		 Z,.examina_cruz
     128.  00:9BB2  DD 21 DB A9         	LD		IX, ayuda_oracion
     129.  00:9BB6  3E 01               	LD		 A, ACTIVA
     130.  00:9BB8  CD 7A 9B            	CALL	pinta_obj_ayuda
     131.  00:9BBB                      .examina_cruz:
     132.  00:9BBB  3A 88 A6            	LD		 A, (habitacion_extras)
     133.  00:9BBE  CB 77               	BIT		 6,A
     134.  00:9BC0  CA CC 9B            	JP		 Z,.examina_aguabendita
     135.  00:9BC3  DD 21 EB A9         	LD		IX, ayuda_cruz
     136.  00:9BC7  3E 01               	LD		 A, ACTIVA
     137.  00:9BC9  CD 7A 9B            	CALL	pinta_obj_ayuda
     138.  00:9BCC                      .examina_aguabendita:
     139.  00:9BCC  3A 88 A6            	LD		 A, (habitacion_extras)
     140.  00:9BCF  CB 6F               	BIT		 5,A
     141.  00:9BD1  CA DD 9B            	JP		 Z,.examina_armadura
     142.  00:9BD4  DD 21 FB A9         	LD		IX, ayuda_aguabendita
     143.  00:9BD8  3E 01               	LD		 A, ACTIVA
     144.  00:9BDA  CD 7A 9B            	CALL	pinta_obj_ayuda
     145.  00:9BDD                      .examina_armadura:
     146.  00:9BDD  3A 88 A6            	LD		 A, (habitacion_extras)
     147.  00:9BE0  CB 67               	BIT		 4,A
     148.  00:9BE2  CA EE 9B            	JP		 Z,.examina_planta
     149.  00:9BE5  DD 21 0B AA         	LD		IX, ayuda_armadura
     150.  00:9BE9  3E 01               	LD		 A, ACTIVA
     151.  00:9BEB  CD 7A 9B            	CALL	pinta_obj_ayuda
     152.  00:9BEE                      .examina_planta:
     153.  00:9BEE  3A 88 A6            	LD		 A, (habitacion_extras)
     154.  00:9BF1  CB 5F               	BIT		 3,A
     155.  00:9BF3  CA FF 9B            	JP		 Z,.examina_vidaextra
     156.  00:9BF6  DD 21 1B AA         	LD		IX, ayuda_planta
     157.  00:9BFA  3E 01               	LD		 A, ACTIVA
     158.  00:9BFC  CD 7A 9B            	CALL	pinta_obj_ayuda
     159.  00:9BFF                      .examina_vidaextra:
     160.  00:9BFF  3A 88 A6            	LD		 A, (habitacion_extras)
     161.  00:9C02  CB 57               	BIT		 2,A
     162.  00:9C04  CA 10 9C            	JP		 Z,.examina_ballesta
     163.  00:9C07  DD 21 2B AA         	LD		IX, ayuda_vidaextra
     164.  00:9C0B  3E 01               	LD		 A, ACTIVA
     165.  00:9C0D  CD 7A 9B            	CALL	pinta_obj_ayuda
     166.  00:9C10                      .examina_ballesta:
     167.  00:9C10  3A 88 A6            	LD		 A, (habitacion_extras)
     168.  00:9C13  CB 4F               	BIT		 1,A
     169.  00:9C15  C8                  	RET		 Z
     170.  00:9C16  DD 21 3B AA         	LD		IX, ayuda_ballesta
     171.  00:9C1A  3E 01               	LD		 A, ACTIVA
     172.  00:9C1C  CD 7A 9B            	CALL	pinta_obj_ayuda
     173.  00:9C1F                      fin_pinta_ayudas_habitacion:
     174.  00:9C1F  C9                  	RET
     175.  00:9C20                      
     176.  00:9C20                      
     177.  00:9C20                      
     178.  00:9C20                      ;;=====================================================
     179.  00:9C20                      ;;ACCION_ORACION
     180.  00:9C20                      ;;=====================================================	
     181.  00:9C20                      ; función: 	
     182.  00:9C20                      ; entrada: 	
     183.  00:9C20                      ; salida: 	-
     184.  00:9C20                      accion_oracion:
     185.  00:9C20                      fin_accion_oracion:
     186.  00:9C20  C9                  	RET
     187.  00:9C21                      	
     188.  00:9C21                      
     189.  00:9C21                      ;;=====================================================
     190.  00:9C21                      ;;ACCION_CRUZ
     191.  00:9C21                      ;;=====================================================	
     192.  00:9C21                      ; función: 	
     193.  00:9C21                      ; entrada: 	
     194.  00:9C21                      ; salida: 	-
     195.  00:9C21                      accion_cruz:
     196.  00:9C21                      fin_accion_cruz:
     197.  00:9C21  C9                  	RET
     198.  00:9C22                      
     199.  00:9C22                      
     200.  00:9C22                      ;;=====================================================
     201.  00:9C22                      ;;ACCION_AGUA
     202.  00:9C22                      ;;=====================================================	
     203.  00:9C22                      ; función: 	
     204.  00:9C22                      ; entrada: 	
     205.  00:9C22                      ; salida: 	-
     206.  00:9C22                      accion_agua:
     207.  00:9C22                      fin_accion_agua:
     208.  00:9C22  C9                  	RET
     209.  00:9C23                      
     210.  00:9C23                      
     211.  00:9C23                      ;;=====================================================
     212.  00:9C23                      ;;ACCION_ARMADURA
     213.  00:9C23                      ;;=====================================================	
     214.  00:9C23                      ; función: 	
     215.  00:9C23                      ; entrada: 	
     216.  00:9C23                      ; salida: 	-
     217.  00:9C23                      accion_armadura:
     218.  00:9C23                      fin_accion_armadura:
     219.  00:9C23  C9                  	RET
     220.  00:9C24                      
     221.  00:9C24                      
     222.  00:9C24                      ;;=====================================================
     223.  00:9C24                      ;;ACCION_PLANTA
     224.  00:9C24                      ;;=====================================================	
     225.  00:9C24                      ; función: 	
     226.  00:9C24                      ; entrada: 	
     227.  00:9C24                      ; salida: 	-
     228.  00:9C24                      accion_planta:
     229.  00:9C24                      fin_accion_planta:
     230.  00:9C24  C9                  	RET
     231.  00:9C25                      
     232.  00:9C25                      
     233.  00:9C25                      ;;=====================================================
     234.  00:9C25                      ;;ACCION_VIDAEXTRA
     235.  00:9C25                      ;;=====================================================	
     236.  00:9C25                      ; función: 	
     237.  00:9C25                      ; entrada: 	
     238.  00:9C25                      ; salida: 	-
     239.  00:9C25                      accion_vidaextra:
     240.  00:9C25                      fin_accion_vidaextra:
     241.  00:9C25  C9                  	RET
     242.  00:9C26                      
     243.  00:9C26                      
     244.  00:9C26                      ;;=====================================================
     245.  00:9C26                      ;;ACCION_BALLESTA
     246.  00:9C26                      ;;=====================================================	
     247.  00:9C26                      ; función: 	
     248.  00:9C26                      ; entrada: 	
     249.  00:9C26                      ; salida: 	-
     250.  00:9C26                      accion_ballesta:
     251.  00:9C26                      fin_accion_ballesta:
     252.  00:9C26  C9                  	RET
     253.  00:9C27                      
     254.  00:9C27                      
     314   00:9C27                      	
     315   00:9C27                      
     316   00:9C27                      ;;=====================================================
     317   00:9C27                      ;;DEFINICIÓN DE SUBRUTINAS DE FERNANDO PARA COMPRESIÓN Y SONIDO
     318   00:9C27                      ;;=====================================================
     319   00:9C27                      ;Este include lleva la rutina de descompresión de ROM/RAM a VRAM de pletter
     320   00:9C27                      ;Está adaptada de la original a sjasm
     321   00:9C27                      ;	HL = RAM/ROM source	; DE = VRAM destination
     322   00:9C27                      depack_VRAM:
     323   00:9C27                      	include "PL_VRAM_Depack_SJASM.asm"
       1.  00:9C27                      ;-----------------------------------------------------------
       2.  00:9C27                      ; Pletter v0.5b VRAM Depacker v1.1 - 16Kb version
       3.  00:9C27                      ; HL = RAM/ROM source ; DE = VRAM destination
       4.  00:9C27                      ;-----------------------------------------------------------
       5.  00:9C27  F3                  	di
       6.  00:9C28                      
       7.  00:9C28                      ; VRAM address setup
       8.  00:9C28  7B                  	ld	a,e
       9.  00:9C29  D3 99               	out	[099h],a
      10.  00:9C2B  7A                  	ld	a,d
      11.  00:9C2C  F6 40               	or	040h
      12.  00:9C2E  D3 99               	out	[099h],a
      13.  00:9C30                      
      14.  00:9C30                      ; Initialization
      15.  00:9C30  7E                  	ld	a,[hl]
      16.  00:9C31  23                  	inc	hl
      17.  00:9C32  D9                  	exx
      18.  00:9C33  11 00 00            	ld	de,0
      19.  00:9C36  87                  	add	a,a
      20.  00:9C37  3C                  	inc	a
      21.  00:9C38  CB 13               	rl	e
      22.  00:9C3A  87                  	add	a,a
      23.  00:9C3B  CB 13               	rl	e
      24.  00:9C3D  87                  	add	a,a
      25.  00:9C3E  CB 13               	rl	e
      26.  00:9C40  CB 13               	rl	e
      27.  00:9C42  21 F9 9C            	ld	hl,modes
      28.  00:9C45  19                  	add	hl,de
      29.  00:9C46  5E                  	ld	e,[hl]
      30.  00:9C47  DD 6B               	ld	ixl,e
      31.  00:9C49  23                  	inc	hl
      32.  00:9C4A  5E                  	ld	e,[hl]
      33.  00:9C4B  DD 63               	ld	ixh,e
      34.  00:9C4D  1E 01               	ld	e,1
      35.  00:9C4F  D9                  	exx
      36.  00:9C50  FD 21 59 9C         	ld	iy,loop
      37.  00:9C54                      
      38.  00:9C54                      ; Main depack loop
      39.  00:9C54  0E 98               literal:ld	c,098h
      40.  00:9C56  ED A3               	outi
      41.  00:9C58  13                  	inc	de
      42.  00:9C59  87                  loop:	add	a,a
      43.  00:9C5A  CC ED 9C              	call	z,getbit
      44.  00:9C5D  30 F5               	jr	nc,literal
      45.  00:9C5F                      
      46.  00:9C5F                      ; Compressed data
      47.  00:9C5F  D9                  	exx
      48.  00:9C60  62                  	ld	h,d
      49.  00:9C61  6B                  	ld	l,e
      50.  00:9C62  87                  getlen: add	a,a
      51.  00:9C63  CC F1 9C            	call	z,getbitexx
      52.  00:9C66  30 1D               	jr	nc,lenok
      53.  00:9C68  87                  lus:	add	a,a
      54.  00:9C69  CC F1 9C            	call	z,getbitexx
      55.  00:9C6C  ED 6A               	adc	hl,hl
      56.  00:9C6E  D8                  	ret	c
      57.  00:9C6F  87                  	add	a,a
      58.  00:9C70  CC F1 9C            	call	z,getbitexx
      59.  00:9C73  30 10               	jr	nc,lenok
      60.  00:9C75  87                  	add	a,a
      61.  00:9C76  CC F1 9C            	call	z,getbitexx
      62.  00:9C79  ED 6A               	adc	hl,hl
      63.  00:9C7B  DA F7 9C            	jp	c,Depack_out
      64.  00:9C7E  87                  	add	a,a
      65.  00:9C7F  CC F1 9C            	call	z,getbitexx
      66.  00:9C82  DA 68 9C            	jp	c,lus
      67.  00:9C85  23                  lenok:  inc	hl
      68.  00:9C86  D9                  	exx
      69.  00:9C87  4E                  	ld	c,[hl]
      70.  00:9C88  23                  	inc	hl
      71.  00:9C89  06 00               	ld	b,0
      72.  00:9C8B  CB 79               	bit	7,c
      73.  00:9C8D  CA C0 9C            	jp	z,offsok
      74.  00:9C90  DD E9               	jp	ix
      75.  00:9C92                      
      76.  00:9C92  87                  mode7:  add	a,a
      77.  00:9C93  CC ED 9C              	call	z,getbit
      78.  00:9C96  CB 10               	rl	b
      79.  00:9C98  87                  mode6:	add	a,a
      80.  00:9C99  CC ED 9C              	call	z,getbit
      81.  00:9C9C  CB 10               	rl	b
      82.  00:9C9E  87                  mode5:  add	a,a
      83.  00:9C9F  CC ED 9C              	call	z,getbit
      84.  00:9CA2  CB 10               	rl	b
      85.  00:9CA4  87                  mode4:  add	a,a
      86.  00:9CA5  CC ED 9C              	call	z,getbit
      87.  00:9CA8  CB 10               	rl	b
      88.  00:9CAA  87                  mode3:  add	a,a
      89.  00:9CAB  CC ED 9C              	call	z,getbit
      90.  00:9CAE  CB 10               	rl	b
      91.  00:9CB0  87                  mode2:	add	a,a
      92.  00:9CB1  CC ED 9C              	call	z,getbit
      93.  00:9CB4  CB 10               	rl	b
      94.  00:9CB6  87                  	add	a,a
      95.  00:9CB7  CC ED 9C              	call	z,getbit
      96.  00:9CBA  30 04               	jr	nc,offsok
      97.  00:9CBC  B7                  	or	a
      98.  00:9CBD  04                  	inc	b
      99.  00:9CBE  CB B9               	res	7,c
     100.  00:9CC0  03                  offsok: inc	bc
     101.  00:9CC1  E5                  	push	hl
     102.  00:9CC2  D9                  	exx
     103.  00:9CC3  E5                  	push	hl
     104.  00:9CC4  D9                  	exx
     105.  00:9CC5  6B                  	ld	l,e
     106.  00:9CC6  62                  	ld	h,d
     107.  00:9CC7  ED 42               	sbc	hl,bc
     108.  00:9CC9  C1                  	pop	bc
     109.  00:9CCA  F5                  	push	af
     110.  00:9CCB  7D                  .loop:	ld	a,l
     111.  00:9CCC  D3 99               	out	[099h],a
     112.  00:9CCE  7C                  	ld	a,h
     113.  00:9CCF  00                  	nop                     ; VDP timing
     114.  00:9CD0  D3 99               	out	[099h],a
     115.  00:9CD2  00                  	nop                     ; VDP timing
     116.  00:9CD3  DB 98               	in	a,[098h]
     117.  00:9CD5  08                  	ex	af,af'
     118.  00:9CD6  7B                  	ld	a,e
     119.  00:9CD7  00                  	nop			; VDP timing
     120.  00:9CD8  D3 99               	out	[099h],a
     121.  00:9CDA  7A                  	ld	a,d
     122.  00:9CDB  F6 40               	or	040h
     123.  00:9CDD  D3 99               	out	[099h],a
     124.  00:9CDF  08                  	ex	af,af'
     125.  00:9CE0  00                  	nop			; VDP timing
     126.  00:9CE1  D3 98               	out	[098h],a
     127.  00:9CE3  13                  	inc	de
     128.  00:9CE4  ED A1               	cpi
     129.  00:9CE6  EA CB 9C            	jp	pe,.loop
     130.  00:9CE9  F1                  	pop	af
     131.  00:9CEA  E1                  	pop	hl
     132.  00:9CEB  FD E9               	jp	iy
     133.  00:9CED                      
     134.  00:9CED  7E                  getbit: ld	a,[hl]
     135.  00:9CEE  23                  	inc	hl
     136.  00:9CEF  17                  	rla
     137.  00:9CF0  C9                  	ret
     138.  00:9CF1                      
     139.  00:9CF1                      getbitexx:
     140.  00:9CF1  D9                  	exx
     141.  00:9CF2  7E                  	ld	a,[hl]
     142.  00:9CF3  23                  	inc	hl
     143.  00:9CF4  D9                  	exx
     144.  00:9CF5  17                  	rla
     145.  00:9CF6  C9                  	ret
     146.  00:9CF7                      
     147.  00:9CF7                      ; Depacker exit
     148.  00:9CF7                      Depack_out:
     149.  00:9CF7  FB                  	ei
     150.  00:9CF8  C9                  	ret
     151.  00:9CF9                      
     152.  00:9CF9                      modes:
     153.  00:9CF9  C0 9C               	dw	offsok
     154.  00:9CFB  B0 9C               	dw	mode2
     155.  00:9CFD  AA 9C               	dw	mode3
     156.  00:9CFF  A4 9C               	dw	mode4
     157.  00:9D01  9E 9C               	dw	mode5
     158.  00:9D03  98 9C               	dw	mode6
     159.  00:9D05  92 9C               	dw	mode7
     324   00:9D07                      
     325   00:9D07                      
     326   00:9D07                      	
     327   00:9D07                      ;;=====================================================
     328   00:9D07                      ;;DEFINICIÓN DE ESTRUCTURAS
     329   00:9D07                      ;;=====================================================		
     330   00:9D07                      	include "estructuras.asm"
       1.  00:9D07                      ;;=====================================================
       2.  00:9D07                      ;;DEFINICIÓN DE ESTRUCTURAS
       3.  00:9D07                      ;;=====================================================
       4.  00:9D07                      
       5.  00:9D07                      ;crear estructura
       6.  00:9D07                      
       7.  00:9D07                      	STRUCT ESTRUCTURA_PUNTOMIRA
       8.  00:9D07                    < posx			DB		POSXPM
       9.  00:9D07                    < posy			DB		POSYPM
      10.  00:9D07                    < escena			DB		0	;valores porsibles 0 (blanco+rojo en punto de mira) y NEG 0 (al revés)
      11.  00:9D07                    < velocidad		DB		0
      12.  00:9D07                    < boton2_pressed  DB		0
      13.  00:9D07                    < cadencia		DB		5	;nº de veces que se ejecutará el disparo antes de ejecutar un disparo real (porque cuando se pulsa la tecl dispara 3 ó 4 veces de rápido que va)
      14.  00:9D07                    < ; al final he decidido (ya que el punto de mira es el prota) que lo relacionado con el prota vaya en esta estructura
      15.  00:9D07                    < pm_aux1			DB		0	;para llegar a los 16 campos
      16.  00:9D07                    < pm_aux2			DB		0	;para llegar a los 16 campos
      17.  00:9D07                    < pm_aux3			DB		0	;para llegar a los 16 campos
      18.  00:9D07                    < pm_aux4			DB		0	;para llegar a los 16 campos
      19.  00:9D07                    < pm_aux5			DB		0	;para llegar a los 16 campos
      20.  00:9D07                    < pm_aux6			DB		0	;para llegar a los 16 campos
      21.  00:9D07                    < pm_aux7			DB		0	;para llegar a los 16 campos
      22.  00:9D07                    < pm_aux8			DB		0	;para llegar a los 16 campos
      23.  00:9D07                    < pm_aux9			DB		0	;para llegar a los 16 campos
      24.  00:9D07                    < pm_aux10		DB		0	;para llegar a los 16 campos
      25.  00:9D07                    < 	ENDSTRUCT;ESTRUCTURA_PUNTOMIRA
      26.  00:9D07                      
      27.  00:9D07                      	
      28.  00:9D07                      	STRUCT ESTRUCTURA_ENEMIGO
      29.  00:9D07                    < tipo				DB		0	;(0 serpiente por ejemplo) #FF muerto o no existe
      30.  00:9D07                    < posx				DB		5
      31.  00:9D07                    < posy				DB		50
      32.  00:9D07                    < color				DB		5
      33.  00:9D07                    < escena				DB		0
      34.  00:9D07                    < contador_siguiente_escena	DB	0
      35.  00:9D07                    < reset_contador		DB		0
      36.  00:9D07                    < dano				DB		0	;daño
      37.  00:9D07                    < energia				DB		0	;energía del enemigo... si llega a 0 => existe <- 0
      38.  00:9D07                    < ;indica el nº de sprite a mostrar y si está compuesto por uno o dos sprites y si están en horizontal o vertical
      39.  00:9D07                    < ver_hor				DB		0
      40.  00:9D07                    < manejador_dibujo 	DW		0
      41.  00:9D07                    < en_aux3				DB		0
      42.  00:9D07                    < en_aux4				DB		0
      43.  00:9D07                    < 	ENDSTRUCT;ESTRUCTURA_ENEMIGO
      44.  00:9D07                      	
      45.  00:9D07                      	STRUCT ESTRUCTURA_AYUDA		;vidas extra, plantas de curación de energía, reliquias				
      46.  00:9D07                    < activo				DB		0	;0 no activo <>0 activo 											0
      47.  00:9D07                    < postilemem_nousado	DW		0	;pos en memoria ver array_ayudas de cómo se mostrarán (wordaux2)	1,2
      48.  00:9D07                    < postilemem_usado	DW		0	;pos en memoria ver array_ayudas de cómo se mostrarán (wordaux2)	3,4
      49.  00:9D07                    < pospantalla			DB		0	;pos en pantalla (memoria en el banco 1 se le suma 256 + TILEMAP) (wordaux1)	5
      50.  00:9D07                    < posx				DB		0	;pos del pixel central (esquina superior + 8x)						6
      51.  00:9D07                    < posy				DB		112	;pos del pixel central (esquina superior + 8y) (para toas igual)	7
      52.  00:9D07                    < puntero_accion		DW		0	;subrutina que indica la acción si se dispara en el objeto			8,9
      53.  00:9D07                    < ayu_aux1			DB		0	;relleno
      54.  00:9D07                    < ayu_aux2			DB		0	;relleno
      55.  00:9D07                    < ayu_aux3			DB		0	;relleno
      56.  00:9D07                    < ayu_aux4			DB		0	;relleno
      57.  00:9D07                    < ayu_aux5			DB		0	;relleno
      58.  00:9D07                    < ayu_aux6			DB		0	;relleno
      59.  00:9D07                    < 	ENDSTRUCT;ESTRUCTURA_AYUDA
      60.  00:9D07                      
      61.  00:9D07                      
      62.  00:9D07                      	STRUCT ESTRUCTURA_ANTORCHA
      63.  00:9D07                    < activo				DB		0	;0 no activa <>0 activo
      64.  00:9D07                    < postilemem_antor1	DW		0	;pos en memoria ver array_antorcha de cómo se mostrará (wordaux2)	1,2
      65.  00:9D07                    < pospantalla_antor1	DB		0	;pos en pantalla (memoria en el banco 1 se le suma 256 + TILEMAP) (wordaux1)	3
      66.  00:9D07                    < pospantalla_antor2	DB		0	;pos en pantalla (memoria en el banco 1 se le suma 256 + TILEMAP) (wordaux1)	4
      67.  00:9D07                    < escena				DB		0	;(va entre 0 y 1 - 0=>llama1 y llama2 o 1=>llama2 y llama1	7 - tiles 196 y 197)	5
      68.  00:9D07                    < cont_sig_escena		DB		10	;	6
      69.  00:9D07                    < 	ENDSTRUCT;ESTRUCTURA_ANTORCHA
      70.  00:9D07                      
      71.  00:9D07                      	STRUCT ESTRUCTURA_ESQUELETO
      72.  00:9D07                    < activo				DB		0	;0 no activa <>0 activo
      73.  00:9D07                    < postilemem_antor1	DW		0	;pos en memoria ver array_antorcha de cómo se mostrará (wordaux2)	1,2
      74.  00:9D07                    < pospantalla_esquel1	DB		0	;pos en pantalla (memoria en el banco 1 se le suma 256 + TILEMAP) (wordaux1)	3
      75.  00:9D07                    < pospantalla_esquel2	DB		0	;pos en pantalla (memoria en el banco 1 se le suma 256 + TILEMAP) (wordaux1)	4
      76.  00:9D07                    < escena				DB		0	;(va entre 0 y 4 - tiles 164, 165, 164, 166)	5
      77.  00:9D07                    < cont_sig_escena		DB		0	;	6
      78.  00:9D07                    < 	ENDSTRUCT;ESTRUCTURA_ESQUELETO
      79.  00:9D07                      	
      80.  00:9D07                      	STRUCT ESTRUCTURA_PUERTA	;también servirá para la escalera
      81.  00:9D07                    < activa				DB		0	;0 no activa <>0 activo
      82.  00:9D07                    < posx				DB		0	;punto x de la puerta para cuando se dispare encima
      83.  00:9D07                    < posy				DB		0	;punto y de la puerta para cuando se dispare encima
      84.  00:9D07                    < radiox				DB		0	;radio x de la puerta para cuando se dispare encima
      85.  00:9D07                    < radioy				DB		0	;radio y de la puerta para cuando se dispare encima
      86.  00:9D07                    < accion				DW		0	;función para acción de cada tipo de puerta
      87.  00:9D07                    < tiles_puerta		DW		0	;puntero al array con los tiles de las puertas para wordaux2
      88.  00:9D07                    < pos_en_tilemap		DW		0	;calcula posición en tilemap para wordaux1
      89.  00:9D07                    < alto				DB		0	;alto en tiles del dibujo de la puerta (filas)
      90.  00:9D07                    < ancho				DB		0	;ancho en tiles del dibujo de la puerta (columnas)
      91.  00:9D07                    < 	ENDSTRUCT;ESTRUCTURA_PUERTA
      92.  00:9D07                      
      93.  00:9D07                      
      94.  00:9D07                      
      95.  00:9D07                      
      96.  00:9D07                      
      97.  00:9D07                      
     331   00:9D07                      	
     332   00:9D07                      ;;=====================================================
     333   00:9D07                      ;;DEFINICIÓN DE VARIABLES
     334   00:9D07                      ;;=====================================================		
     335   00:9D07                      	include "sprites.asm"
       1.  00:9D07                      ;;=====================================================
       2.  00:9D07                      ;;DEFINICIÓN DE SPRITES
       3.  00:9D07                      ;;=====================================================	
       4.  00:9D07                      
       5.  00:9D07                      
       6.  00:9D07                      ;; NOTA:
       7.  00:9D07                      ;~ sprite_reliquia_oracion: on/off
       8.  00:9D07                      ;~ sprite_reliquia_cruz: on/off
       9.  00:9D07                      ;~ sprite_reliquia_agua: on/off
      10.  00:9D07                      ;~ sprite_peto: on/off
      11.  00:9D07                      ;~ sprite_planta: on/off
      12.  00:9D07                      ;~ sprite_vida_extra: on/off
      13.  00:9D07                      ;~ sprite_ballesta_mejorada: on/off
      14.  00:9D07                      
      15.  00:9D07                      ;~ iban a ser sprites pero por falta de recursos serán tiles
      16.  00:9D07                      
      17.  00:9D07                      
      18.  00:9D07                      sprites_pantantalla:
      19.  00:9D07                      
      20.  00:9D07                      ;; PARTE 1: SPRITES COMUNES
      21.  00:9D07                      
      22.  00:9D07                      sprites_comunes:
      23.  00:9D07                      sprite_punto_mira_1:	;color 8
      24.  00:9D07                      	db #FF,#FF,#C0,#C0,#C0,#C0,#C0,#C0
      24.  00:9D07  FF FF C0 C0 C0 C0 C0 C0 
      25.  00:9D0F                      	db #C0,#C0,#C0,#C0,#C0,#C0,#FF,#FF
      25.  00:9D0F  C0 C0 C0 C0 C0 C0 FF FF 
      26.  00:9D17                      	db #FF,#FF,#03,#03,#03,#03,#03,#03
      26.  00:9D17  FF FF 03 03 03 03 03 03 
      27.  00:9D1F                      	db #03,#03,#03,#03,#03,#03,#FF,#FF
      27.  00:9D1F  03 03 03 03 03 03 FF FF 
      28.  00:9D27                      	
      29.  00:9D27                      sprite_punto_mira_2: 	;color 15
      30.  00:9D27                      	db #00,#00,#00,#00,#0F,#0F,#0C,#0C
      30.  00:9D27  00 00 00 00 0F 0F 0C 0C 
      31.  00:9D2F                      	db #0C,#0C,#0F,#0F,#00,#00,#00,#00
      31.  00:9D2F  0C 0C 0F 0F 00 00 00 00 
      32.  00:9D37                      	db #00,#00,#00,#00,#F0,#F0,#30,#30
      32.  00:9D37  00 00 00 00 F0 F0 30 30 
      33.  00:9D3F                      	db #30,#30,#F0,#F0,#00,#00,#00,#00
      33.  00:9D3F  30 30 F0 F0 00 00 00 00 
      34.  00:9D47                      	
      35.  00:9D47                      sprite_punto_mira_1_mejorado:
      36.  00:9D47                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      36.  00:9D47  FF FF FF FF FF FF FF FF 
      37.  00:9D4F                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      37.  00:9D4F  FF FF FF FF FF FF FF FF 
      38.  00:9D57                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      38.  00:9D57  FF FF FF FF FF FF FF FF 
      39.  00:9D5F                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      39.  00:9D5F  FF FF FF FF FF FF FF FF 
      40.  00:9D67                      
      41.  00:9D67                      sprite_punto_mira_2_mejorado:
      42.  00:9D67                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      42.  00:9D67  FF FF FF FF FF FF FF FF 
      43.  00:9D6F                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      43.  00:9D6F  FF FF FF FF FF FF FF FF 
      44.  00:9D77                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      44.  00:9D77  FF FF FF FF FF FF FF FF 
      45.  00:9D7F                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      45.  00:9D7F  FF FF FF FF FF FF FF FF 
      46.  00:9D87                      	
      47.  00:9D87                      sprite_explosion_1:
      48.  00:9D87                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      48.  00:9D87  FF FF FF FF FF FF FF FF 
      49.  00:9D8F                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      49.  00:9D8F  FF FF FF FF FF FF FF FF 
      50.  00:9D97                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      50.  00:9D97  FF FF FF FF FF FF FF FF 
      51.  00:9D9F                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF	
      51.  00:9D9F  FF FF FF FF FF FF FF FF 
      52.  00:9DA7                      
      53.  00:9DA7                      sprite_explosion_2:
      54.  00:9DA7                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      54.  00:9DA7  FF FF FF FF FF FF FF FF 
      55.  00:9DAF                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      55.  00:9DAF  FF FF FF FF FF FF FF FF 
      56.  00:9DB7                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      56.  00:9DB7  FF FF FF FF FF FF FF FF 
      57.  00:9DBF                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF	
      57.  00:9DBF  FF FF FF FF FF FF FF FF 
      58.  00:9DC7                      fin_sprites_comunes:
      59.  00:9DC7                      
      60.  00:9DC7                      ;; PARTE 2: SPRITES NO COMUNES
      61.  00:9DC7                      
      62.  00:9DC7                      ;; ARAÑA
      63.  00:9DC7                      	
      64.  00:9DC7                      sprite_arana1_1:
      65.  00:9DC7                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      65.  00:9DC7  FF FF FF FF FF FF FF FF 
      66.  00:9DCF                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      66.  00:9DCF  FF FF FF FF FF FF FF FF 
      67.  00:9DD7                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      67.  00:9DD7  FF FF FF FF FF FF FF FF 
      68.  00:9DDF                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      68.  00:9DDF  FF FF FF FF FF FF FF FF 
      69.  00:9DE7                      	
      70.  00:9DE7                      sprite_arana1_2:
      71.  00:9DE7                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      71.  00:9DE7  FF FF FF FF FF FF FF FF 
      72.  00:9DEF                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      72.  00:9DEF  FF FF FF FF FF FF FF FF 
      73.  00:9DF7                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      73.  00:9DF7  FF FF FF FF FF FF FF FF 
      74.  00:9DFF                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      74.  00:9DFF  FF FF FF FF FF FF FF FF 
      75.  00:9E07                      
      76.  00:9E07                      ;; MURCIELAGO
      77.  00:9E07                      	
      78.  00:9E07                      sprite_murcielago1_1:
      79.  00:9E07                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      79.  00:9E07  FF FF FF FF FF FF FF FF 
      80.  00:9E0F                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      80.  00:9E0F  FF FF FF FF FF FF FF FF 
      81.  00:9E17                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      81.  00:9E17  FF FF FF FF FF FF FF FF 
      82.  00:9E1F                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      82.  00:9E1F  FF FF FF FF FF FF FF FF 
      83.  00:9E27                      	
      84.  00:9E27                      sprite_murcielago1_2:
      85.  00:9E27                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      85.  00:9E27  FF FF FF FF FF FF FF FF 
      86.  00:9E2F                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      86.  00:9E2F  FF FF FF FF FF FF FF FF 
      87.  00:9E37                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      87.  00:9E37  FF FF FF FF FF FF FF FF 
      88.  00:9E3F                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF	
      88.  00:9E3F  FF FF FF FF FF FF FF FF 
      89.  00:9E47                      
      90.  00:9E47                      ;; SERPIENTE
      91.  00:9E47                      
      92.  00:9E47                      sprite_serpiente1_1:
      93.  00:9E47                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      93.  00:9E47  FF FF FF FF FF FF FF FF 
      94.  00:9E4F                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      94.  00:9E4F  FF FF FF FF FF FF FF FF 
      95.  00:9E57                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      95.  00:9E57  FF FF FF FF FF FF FF FF 
      96.  00:9E5F                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      96.  00:9E5F  FF FF FF FF FF FF FF FF 
      97.  00:9E67                      	
      98.  00:9E67                      sprite_serpiente1_2:
      99.  00:9E67                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      99.  00:9E67  FF FF FF FF FF FF FF FF 
     100.  00:9E6F                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     100.  00:9E6F  FF FF FF FF FF FF FF FF 
     101.  00:9E77                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     101.  00:9E77  FF FF FF FF FF FF FF FF 
     102.  00:9E7F                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     102.  00:9E7F  FF FF FF FF FF FF FF FF 
     103.  00:9E87                      	
     104.  00:9E87                      sprite_serpiente2_1:
     105.  00:9E87                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     105.  00:9E87  FF FF FF FF FF FF FF FF 
     106.  00:9E8F                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     106.  00:9E8F  FF FF FF FF FF FF FF FF 
     107.  00:9E97                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     107.  00:9E97  FF FF FF FF FF FF FF FF 
     108.  00:9E9F                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     108.  00:9E9F  FF FF FF FF FF FF FF FF 
     109.  00:9EA7                      	
     110.  00:9EA7                      sprite_serpiente2_2:
     111.  00:9EA7                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     111.  00:9EA7  FF FF FF FF FF FF FF FF 
     112.  00:9EAF                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     112.  00:9EAF  FF FF FF FF FF FF FF FF 
     113.  00:9EB7                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     113.  00:9EB7  FF FF FF FF FF FF FF FF 
     114.  00:9EBF                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     114.  00:9EBF  FF FF FF FF FF FF FF FF 
     115.  00:9EC7                      
     116.  00:9EC7                      ;; ZOMBI
     117.  00:9EC7                      
     118.  00:9EC7                      sprite_zombi1_1_1:
     119.  00:9EC7                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     119.  00:9EC7  FF FF FF FF FF FF FF FF 
     120.  00:9ECF                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     120.  00:9ECF  FF FF FF FF FF FF FF FF 
     121.  00:9ED7                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     121.  00:9ED7  FF FF FF FF FF FF FF FF 
     122.  00:9EDF                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     122.  00:9EDF  FF FF FF FF FF FF FF FF 
     123.  00:9EE7                      
     124.  00:9EE7                      sprite_zombi1_2_1:
     125.  00:9EE7                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     125.  00:9EE7  FF FF FF FF FF FF FF FF 
     126.  00:9EEF                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     126.  00:9EEF  FF FF FF FF FF FF FF FF 
     127.  00:9EF7                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     127.  00:9EF7  FF FF FF FF FF FF FF FF 
     128.  00:9EFF                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     128.  00:9EFF  FF FF FF FF FF FF FF FF 
     129.  00:9F07                      	
     130.  00:9F07                      sprite_zombi1_3_1:
     131.  00:9F07                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     131.  00:9F07  FF FF FF FF FF FF FF FF 
     132.  00:9F0F                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     132.  00:9F0F  FF FF FF FF FF FF FF FF 
     133.  00:9F17                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     133.  00:9F17  FF FF FF FF FF FF FF FF 
     134.  00:9F1F                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     134.  00:9F1F  FF FF FF FF FF FF FF FF 
     135.  00:9F27                      	
     136.  00:9F27                      sprite_zombi1_4_1:
     137.  00:9F27                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     137.  00:9F27  FF FF FF FF FF FF FF FF 
     138.  00:9F2F                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     138.  00:9F2F  FF FF FF FF FF FF FF FF 
     139.  00:9F37                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     139.  00:9F37  FF FF FF FF FF FF FF FF 
     140.  00:9F3F                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     140.  00:9F3F  FF FF FF FF FF FF FF FF 
     141.  00:9F47                      	
     142.  00:9F47                      sprite_zombi1_1_2:
     143.  00:9F47                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     143.  00:9F47  FF FF FF FF FF FF FF FF 
     144.  00:9F4F                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     144.  00:9F4F  FF FF FF FF FF FF FF FF 
     145.  00:9F57                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     145.  00:9F57  FF FF FF FF FF FF FF FF 
     146.  00:9F5F                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     146.  00:9F5F  FF FF FF FF FF FF FF FF 
     147.  00:9F67                      
     148.  00:9F67                      sprite_zombi1_2_2:
     149.  00:9F67                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     149.  00:9F67  FF FF FF FF FF FF FF FF 
     150.  00:9F6F                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     150.  00:9F6F  FF FF FF FF FF FF FF FF 
     151.  00:9F77                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     151.  00:9F77  FF FF FF FF FF FF FF FF 
     152.  00:9F7F                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     152.  00:9F7F  FF FF FF FF FF FF FF FF 
     153.  00:9F87                      	
     154.  00:9F87                      sprite_zombi1_3_2:
     155.  00:9F87                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     155.  00:9F87  FF FF FF FF FF FF FF FF 
     156.  00:9F8F                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     156.  00:9F8F  FF FF FF FF FF FF FF FF 
     157.  00:9F97                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     157.  00:9F97  FF FF FF FF FF FF FF FF 
     158.  00:9F9F                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     158.  00:9F9F  FF FF FF FF FF FF FF FF 
     159.  00:9FA7                      	
     160.  00:9FA7                      sprite_zombi1_4_2:
     161.  00:9FA7                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     161.  00:9FA7  FF FF FF FF FF FF FF FF 
     162.  00:9FAF                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     162.  00:9FAF  FF FF FF FF FF FF FF FF 
     163.  00:9FB7                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     163.  00:9FB7  FF FF FF FF FF FF FF FF 
     164.  00:9FBF                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     164.  00:9FBF  FF FF FF FF FF FF FF FF 
     165.  00:9FC7                      	
     166.  00:9FC7                      sprite_zombi2_1_1:
     167.  00:9FC7                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     167.  00:9FC7  FF FF FF FF FF FF FF FF 
     168.  00:9FCF                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     168.  00:9FCF  FF FF FF FF FF FF FF FF 
     169.  00:9FD7                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     169.  00:9FD7  FF FF FF FF FF FF FF FF 
     170.  00:9FDF                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     170.  00:9FDF  FF FF FF FF FF FF FF FF 
     171.  00:9FE7                      
     172.  00:9FE7                      sprite_zombi2_2_1:
     173.  00:9FE7                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     173.  00:9FE7  FF FF FF FF FF FF FF FF 
     174.  00:9FEF                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     174.  00:9FEF  FF FF FF FF FF FF FF FF 
     175.  00:9FF7                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     175.  00:9FF7  FF FF FF FF FF FF FF FF 
     176.  00:9FFF                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     176.  00:9FFF  FF FF FF FF FF FF FF FF 
     177.  00:A007                      	
     178.  00:A007                      sprite_zombi2_3_1:
     179.  00:A007                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     179.  00:A007  FF FF FF FF FF FF FF FF 
     180.  00:A00F                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     180.  00:A00F  FF FF FF FF FF FF FF FF 
     181.  00:A017                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     181.  00:A017  FF FF FF FF FF FF FF FF 
     182.  00:A01F                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     182.  00:A01F  FF FF FF FF FF FF FF FF 
     183.  00:A027                      	
     184.  00:A027                      sprite_zombi2_4_1:
     185.  00:A027                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     185.  00:A027  FF FF FF FF FF FF FF FF 
     186.  00:A02F                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     186.  00:A02F  FF FF FF FF FF FF FF FF 
     187.  00:A037                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     187.  00:A037  FF FF FF FF FF FF FF FF 
     188.  00:A03F                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     188.  00:A03F  FF FF FF FF FF FF FF FF 
     189.  00:A047                      	
     190.  00:A047                      sprite_zombi2_1_2:
     191.  00:A047                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     191.  00:A047  FF FF FF FF FF FF FF FF 
     192.  00:A04F                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     192.  00:A04F  FF FF FF FF FF FF FF FF 
     193.  00:A057                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     193.  00:A057  FF FF FF FF FF FF FF FF 
     194.  00:A05F                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     194.  00:A05F  FF FF FF FF FF FF FF FF 
     195.  00:A067                      
     196.  00:A067                      sprite_zombi2_2_2:
     197.  00:A067                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     197.  00:A067  FF FF FF FF FF FF FF FF 
     198.  00:A06F                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     198.  00:A06F  FF FF FF FF FF FF FF FF 
     199.  00:A077                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     199.  00:A077  FF FF FF FF FF FF FF FF 
     200.  00:A07F                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     200.  00:A07F  FF FF FF FF FF FF FF FF 
     201.  00:A087                      	
     202.  00:A087                      sprite_zombi2_3_2:
     203.  00:A087                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     203.  00:A087  FF FF FF FF FF FF FF FF 
     204.  00:A08F                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     204.  00:A08F  FF FF FF FF FF FF FF FF 
     205.  00:A097                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     205.  00:A097  FF FF FF FF FF FF FF FF 
     206.  00:A09F                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     206.  00:A09F  FF FF FF FF FF FF FF FF 
     207.  00:A0A7                      	
     208.  00:A0A7                      sprite_zombi2_4_2:
     209.  00:A0A7                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     209.  00:A0A7  FF FF FF FF FF FF FF FF 
     210.  00:A0AF                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     210.  00:A0AF  FF FF FF FF FF FF FF FF 
     211.  00:A0B7                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     211.  00:A0B7  FF FF FF FF FF FF FF FF 
     212.  00:A0BF                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     212.  00:A0BF  FF FF FF FF FF FF FF FF 
     213.  00:A0C7                      	
     214.  00:A0C7                      ;; CABALLERO
     215.  00:A0C7                      
     216.  00:A0C7                      sprite_caballero1_1_1:
     217.  00:A0C7                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     217.  00:A0C7  FF FF FF FF FF FF FF FF 
     218.  00:A0CF                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     218.  00:A0CF  FF FF FF FF FF FF FF FF 
     219.  00:A0D7                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     219.  00:A0D7  FF FF FF FF FF FF FF FF 
     220.  00:A0DF                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     220.  00:A0DF  FF FF FF FF FF FF FF FF 
     221.  00:A0E7                      
     222.  00:A0E7                      sprite_caballero1_2_1:
     223.  00:A0E7                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     223.  00:A0E7  FF FF FF FF FF FF FF FF 
     224.  00:A0EF                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     224.  00:A0EF  FF FF FF FF FF FF FF FF 
     225.  00:A0F7                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     225.  00:A0F7  FF FF FF FF FF FF FF FF 
     226.  00:A0FF                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     226.  00:A0FF  FF FF FF FF FF FF FF FF 
     227.  00:A107                      	
     228.  00:A107                      sprite_caballero1_3_1:
     229.  00:A107                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     229.  00:A107  FF FF FF FF FF FF FF FF 
     230.  00:A10F                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     230.  00:A10F  FF FF FF FF FF FF FF FF 
     231.  00:A117                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     231.  00:A117  FF FF FF FF FF FF FF FF 
     232.  00:A11F                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     232.  00:A11F  FF FF FF FF FF FF FF FF 
     233.  00:A127                      	
     234.  00:A127                      sprite_caballero1_4_1:
     235.  00:A127                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     235.  00:A127  FF FF FF FF FF FF FF FF 
     236.  00:A12F                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     236.  00:A12F  FF FF FF FF FF FF FF FF 
     237.  00:A137                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     237.  00:A137  FF FF FF FF FF FF FF FF 
     238.  00:A13F                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     238.  00:A13F  FF FF FF FF FF FF FF FF 
     239.  00:A147                      	
     240.  00:A147                      sprite_caballero1_1_2:
     241.  00:A147                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     241.  00:A147  FF FF FF FF FF FF FF FF 
     242.  00:A14F                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     242.  00:A14F  FF FF FF FF FF FF FF FF 
     243.  00:A157                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     243.  00:A157  FF FF FF FF FF FF FF FF 
     244.  00:A15F                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     244.  00:A15F  FF FF FF FF FF FF FF FF 
     245.  00:A167                      
     246.  00:A167                      sprite_caballero1_2_2:
     247.  00:A167                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     247.  00:A167  FF FF FF FF FF FF FF FF 
     248.  00:A16F                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     248.  00:A16F  FF FF FF FF FF FF FF FF 
     249.  00:A177                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     249.  00:A177  FF FF FF FF FF FF FF FF 
     250.  00:A17F                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     250.  00:A17F  FF FF FF FF FF FF FF FF 
     251.  00:A187                      	
     252.  00:A187                      sprite_caballero1_3_2:
     253.  00:A187                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     253.  00:A187  FF FF FF FF FF FF FF FF 
     254.  00:A18F                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     254.  00:A18F  FF FF FF FF FF FF FF FF 
     255.  00:A197                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     255.  00:A197  FF FF FF FF FF FF FF FF 
     256.  00:A19F                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     256.  00:A19F  FF FF FF FF FF FF FF FF 
     257.  00:A1A7                      	
     258.  00:A1A7                      sprite_caballero1_4_2:
     259.  00:A1A7                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     259.  00:A1A7  FF FF FF FF FF FF FF FF 
     260.  00:A1AF                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     260.  00:A1AF  FF FF FF FF FF FF FF FF 
     261.  00:A1B7                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     261.  00:A1B7  FF FF FF FF FF FF FF FF 
     262.  00:A1BF                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     262.  00:A1BF  FF FF FF FF FF FF FF FF 
     263.  00:A1C7                      	
     264.  00:A1C7                      sprite_caballero2_1_1:
     265.  00:A1C7                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     265.  00:A1C7  FF FF FF FF FF FF FF FF 
     266.  00:A1CF                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     266.  00:A1CF  FF FF FF FF FF FF FF FF 
     267.  00:A1D7                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     267.  00:A1D7  FF FF FF FF FF FF FF FF 
     268.  00:A1DF                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     268.  00:A1DF  FF FF FF FF FF FF FF FF 
     269.  00:A1E7                      
     270.  00:A1E7                      sprite_caballero2_2_1:
     271.  00:A1E7                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     271.  00:A1E7  FF FF FF FF FF FF FF FF 
     272.  00:A1EF                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     272.  00:A1EF  FF FF FF FF FF FF FF FF 
     273.  00:A1F7                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     273.  00:A1F7  FF FF FF FF FF FF FF FF 
     274.  00:A1FF                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     274.  00:A1FF  FF FF FF FF FF FF FF FF 
     275.  00:A207                      	
     276.  00:A207                      sprite_caballero2_3_1:
     277.  00:A207                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     277.  00:A207  FF FF FF FF FF FF FF FF 
     278.  00:A20F                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     278.  00:A20F  FF FF FF FF FF FF FF FF 
     279.  00:A217                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     279.  00:A217  FF FF FF FF FF FF FF FF 
     280.  00:A21F                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     280.  00:A21F  FF FF FF FF FF FF FF FF 
     281.  00:A227                      	
     282.  00:A227                      sprite_caballero2_4_1:
     283.  00:A227                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     283.  00:A227  FF FF FF FF FF FF FF FF 
     284.  00:A22F                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     284.  00:A22F  FF FF FF FF FF FF FF FF 
     285.  00:A237                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     285.  00:A237  FF FF FF FF FF FF FF FF 
     286.  00:A23F                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     286.  00:A23F  FF FF FF FF FF FF FF FF 
     287.  00:A247                      	
     288.  00:A247                      sprite_caballero2_1_2:
     289.  00:A247                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     289.  00:A247  FF FF FF FF FF FF FF FF 
     290.  00:A24F                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     290.  00:A24F  FF FF FF FF FF FF FF FF 
     291.  00:A257                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     291.  00:A257  FF FF FF FF FF FF FF FF 
     292.  00:A25F                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     292.  00:A25F  FF FF FF FF FF FF FF FF 
     293.  00:A267                      
     294.  00:A267                      sprite_caballero2_2_2:
     295.  00:A267                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     295.  00:A267  FF FF FF FF FF FF FF FF 
     296.  00:A26F                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     296.  00:A26F  FF FF FF FF FF FF FF FF 
     297.  00:A277                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     297.  00:A277  FF FF FF FF FF FF FF FF 
     298.  00:A27F                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     298.  00:A27F  FF FF FF FF FF FF FF FF 
     299.  00:A287                      	
     300.  00:A287                      sprite_caballero2_3_2:
     301.  00:A287                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     301.  00:A287  FF FF FF FF FF FF FF FF 
     302.  00:A28F                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     302.  00:A28F  FF FF FF FF FF FF FF FF 
     303.  00:A297                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     303.  00:A297  FF FF FF FF FF FF FF FF 
     304.  00:A29F                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     304.  00:A29F  FF FF FF FF FF FF FF FF 
     305.  00:A2A7                      	
     306.  00:A2A7                      sprite_caballero2_4_2:
     307.  00:A2A7                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     307.  00:A2A7  FF FF FF FF FF FF FF FF 
     308.  00:A2AF                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     308.  00:A2AF  FF FF FF FF FF FF FF FF 
     309.  00:A2B7                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     309.  00:A2B7  FF FF FF FF FF FF FF FF 
     310.  00:A2BF                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     310.  00:A2BF  FF FF FF FF FF FF FF FF 
     311.  00:A2C7                      	
     312.  00:A2C7                      ;; LLAMA
     313.  00:A2C7                      
     314.  00:A2C7                      sprite_llama1_1:	
     315.  00:A2C7                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     315.  00:A2C7  FF FF FF FF FF FF FF FF 
     316.  00:A2CF                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     316.  00:A2CF  FF FF FF FF FF FF FF FF 
     317.  00:A2D7                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     317.  00:A2D7  FF FF FF FF FF FF FF FF 
     318.  00:A2DF                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     318.  00:A2DF  FF FF FF FF FF FF FF FF 
     319.  00:A2E7                      	
     320.  00:A2E7                      sprite_llama2_1:	
     321.  00:A2E7                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     321.  00:A2E7  FF FF FF FF FF FF FF FF 
     322.  00:A2EF                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     322.  00:A2EF  FF FF FF FF FF FF FF FF 
     323.  00:A2F7                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     323.  00:A2F7  FF FF FF FF FF FF FF FF 
     324.  00:A2FF                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF	
     324.  00:A2FF  FF FF FF FF FF FF FF FF 
     325.  00:A307                      	
     326.  00:A307                      sprite_llama1_2:	
     327.  00:A307                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     327.  00:A307  FF FF FF FF FF FF FF FF 
     328.  00:A30F                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     328.  00:A30F  FF FF FF FF FF FF FF FF 
     329.  00:A317                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     329.  00:A317  FF FF FF FF FF FF FF FF 
     330.  00:A31F                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     330.  00:A31F  FF FF FF FF FF FF FF FF 
     331.  00:A327                      	
     332.  00:A327                      sprite_llama2_2:	
     333.  00:A327                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     333.  00:A327  FF FF FF FF FF FF FF FF 
     334.  00:A32F                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     334.  00:A32F  FF FF FF FF FF FF FF FF 
     335.  00:A337                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     335.  00:A337  FF FF FF FF FF FF FF FF 
     336.  00:A33F                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF			
     336.  00:A33F  FF FF FF FF FF FF FF FF 
     337.  00:A347                      	
     338.  00:A347                      ;; FANTASMA
     339.  00:A347                      
     340.  00:A347                      sprite_fantasma1_1:
     341.  00:A347                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     341.  00:A347  FF FF FF FF FF FF FF FF 
     342.  00:A34F                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     342.  00:A34F  FF FF FF FF FF FF FF FF 
     343.  00:A357                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     343.  00:A357  FF FF FF FF FF FF FF FF 
     344.  00:A35F                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     344.  00:A35F  FF FF FF FF FF FF FF FF 
     345.  00:A367                      
     346.  00:A367                      sprite_fantasma2_1:
     347.  00:A367                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     347.  00:A367  FF FF FF FF FF FF FF FF 
     348.  00:A36F                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     348.  00:A36F  FF FF FF FF FF FF FF FF 
     349.  00:A377                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     349.  00:A377  FF FF FF FF FF FF FF FF 
     350.  00:A37F                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     350.  00:A37F  FF FF FF FF FF FF FF FF 
     351.  00:A387                      
     352.  00:A387                      sprite_fantasma1_2:
     353.  00:A387                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     353.  00:A387  FF FF FF FF FF FF FF FF 
     354.  00:A38F                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     354.  00:A38F  FF FF FF FF FF FF FF FF 
     355.  00:A397                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     355.  00:A397  FF FF FF FF FF FF FF FF 
     356.  00:A39F                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     356.  00:A39F  FF FF FF FF FF FF FF FF 
     357.  00:A3A7                      
     358.  00:A3A7                      sprite_fantasma2_2:
     359.  00:A3A7                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     359.  00:A3A7  FF FF FF FF FF FF FF FF 
     360.  00:A3AF                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     360.  00:A3AF  FF FF FF FF FF FF FF FF 
     361.  00:A3B7                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     361.  00:A3B7  FF FF FF FF FF FF FF FF 
     362.  00:A3BF                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF	
     362.  00:A3BF  FF FF FF FF FF FF FF FF 
     363.  00:A3C7                      	
     364.  00:A3C7                      ;; MAGIA
     365.  00:A3C7                      
     366.  00:A3C7                      sprite_magia1_1:
     367.  00:A3C7                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     367.  00:A3C7  FF FF FF FF FF FF FF FF 
     368.  00:A3CF                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     368.  00:A3CF  FF FF FF FF FF FF FF FF 
     369.  00:A3D7                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     369.  00:A3D7  FF FF FF FF FF FF FF FF 
     370.  00:A3DF                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     370.  00:A3DF  FF FF FF FF FF FF FF FF 
     371.  00:A3E7                      
     372.  00:A3E7                      sprite_magia2_1:
     373.  00:A3E7                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     373.  00:A3E7  FF FF FF FF FF FF FF FF 
     374.  00:A3EF                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     374.  00:A3EF  FF FF FF FF FF FF FF FF 
     375.  00:A3F7                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     375.  00:A3F7  FF FF FF FF FF FF FF FF 
     376.  00:A3FF                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     376.  00:A3FF  FF FF FF FF FF FF FF FF 
     377.  00:A407                      
     378.  00:A407                      sprite_magia1_2:
     379.  00:A407                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     379.  00:A407  FF FF FF FF FF FF FF FF 
     380.  00:A40F                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     380.  00:A40F  FF FF FF FF FF FF FF FF 
     381.  00:A417                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     381.  00:A417  FF FF FF FF FF FF FF FF 
     382.  00:A41F                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     382.  00:A41F  FF FF FF FF FF FF FF FF 
     383.  00:A427                      
     384.  00:A427                      sprite_magia2_2:
     385.  00:A427                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     385.  00:A427  FF FF FF FF FF FF FF FF 
     386.  00:A42F                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     386.  00:A42F  FF FF FF FF FF FF FF FF 
     387.  00:A437                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     387.  00:A437  FF FF FF FF FF FF FF FF 
     388.  00:A43F                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF	
     388.  00:A43F  FF FF FF FF FF FF FF FF 
     389.  00:A447                      	
     390.  00:A447                      	
     391.  00:A447                      ;; BEHOLDER
     392.  00:A447                      
     393.  00:A447                      sprite_beholder1_1:
     394.  00:A447                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     394.  00:A447  FF FF FF FF FF FF FF FF 
     395.  00:A44F                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     395.  00:A44F  FF FF FF FF FF FF FF FF 
     396.  00:A457                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     396.  00:A457  FF FF FF FF FF FF FF FF 
     397.  00:A45F                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     397.  00:A45F  FF FF FF FF FF FF FF FF 
     398.  00:A467                      
     399.  00:A467                      sprite_beholder2_1:
     400.  00:A467                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     400.  00:A467  FF FF FF FF FF FF FF FF 
     401.  00:A46F                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     401.  00:A46F  FF FF FF FF FF FF FF FF 
     402.  00:A477                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     402.  00:A477  FF FF FF FF FF FF FF FF 
     403.  00:A47F                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     403.  00:A47F  FF FF FF FF FF FF FF FF 
     404.  00:A487                      
     405.  00:A487                      sprite_beholder3_1:
     406.  00:A487                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     406.  00:A487  FF FF FF FF FF FF FF FF 
     407.  00:A48F                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     407.  00:A48F  FF FF FF FF FF FF FF FF 
     408.  00:A497                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     408.  00:A497  FF FF FF FF FF FF FF FF 
     409.  00:A49F                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     409.  00:A49F  FF FF FF FF FF FF FF FF 
     410.  00:A4A7                      
     411.  00:A4A7                      sprite_beholder4_1:
     412.  00:A4A7                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     412.  00:A4A7  FF FF FF FF FF FF FF FF 
     413.  00:A4AF                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     413.  00:A4AF  FF FF FF FF FF FF FF FF 
     414.  00:A4B7                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     414.  00:A4B7  FF FF FF FF FF FF FF FF 
     415.  00:A4BF                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF	
     415.  00:A4BF  FF FF FF FF FF FF FF FF 
     416.  00:A4C7                      	
     417.  00:A4C7                      sprite_beholder1_2:
     418.  00:A4C7                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     418.  00:A4C7  FF FF FF FF FF FF FF FF 
     419.  00:A4CF                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     419.  00:A4CF  FF FF FF FF FF FF FF FF 
     420.  00:A4D7                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     420.  00:A4D7  FF FF FF FF FF FF FF FF 
     421.  00:A4DF                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     421.  00:A4DF  FF FF FF FF FF FF FF FF 
     422.  00:A4E7                      
     423.  00:A4E7                      sprite_beholder2_2:
     424.  00:A4E7                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     424.  00:A4E7  FF FF FF FF FF FF FF FF 
     425.  00:A4EF                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     425.  00:A4EF  FF FF FF FF FF FF FF FF 
     426.  00:A4F7                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     426.  00:A4F7  FF FF FF FF FF FF FF FF 
     427.  00:A4FF                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     427.  00:A4FF  FF FF FF FF FF FF FF FF 
     428.  00:A507                      
     429.  00:A507                      sprite_beholder3_2:
     430.  00:A507                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     430.  00:A507  FF FF FF FF FF FF FF FF 
     431.  00:A50F                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     431.  00:A50F  FF FF FF FF FF FF FF FF 
     432.  00:A517                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     432.  00:A517  FF FF FF FF FF FF FF FF 
     433.  00:A51F                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     433.  00:A51F  FF FF FF FF FF FF FF FF 
     434.  00:A527                      
     435.  00:A527                      sprite_beholder4_2:
     436.  00:A527                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     436.  00:A527  FF FF FF FF FF FF FF FF 
     437.  00:A52F                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     437.  00:A52F  FF FF FF FF FF FF FF FF 
     438.  00:A537                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     438.  00:A537  FF FF FF FF FF FF FF FF 
     439.  00:A53F                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF		
     439.  00:A53F  FF FF FF FF FF FF FF FF 
     440.  00:A547                      	
     441.  00:A547                      ;; VAMPIRO
     442.  00:A547                      
     443.  00:A547                      sprite_vampiro1_1:
     444.  00:A547                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     444.  00:A547  FF FF FF FF FF FF FF FF 
     445.  00:A54F                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     445.  00:A54F  FF FF FF FF FF FF FF FF 
     446.  00:A557                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     446.  00:A557  FF FF FF FF FF FF FF FF 
     447.  00:A55F                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     447.  00:A55F  FF FF FF FF FF FF FF FF 
     448.  00:A567                      
     449.  00:A567                      sprite_vampiro2_1:
     450.  00:A567                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     450.  00:A567  FF FF FF FF FF FF FF FF 
     451.  00:A56F                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     451.  00:A56F  FF FF FF FF FF FF FF FF 
     452.  00:A577                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     452.  00:A577  FF FF FF FF FF FF FF FF 
     453.  00:A57F                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     453.  00:A57F  FF FF FF FF FF FF FF FF 
     454.  00:A587                      
     455.  00:A587                      sprite_vampiro1_2:
     456.  00:A587                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     456.  00:A587  FF FF FF FF FF FF FF FF 
     457.  00:A58F                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     457.  00:A58F  FF FF FF FF FF FF FF FF 
     458.  00:A597                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     458.  00:A597  FF FF FF FF FF FF FF FF 
     459.  00:A59F                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     459.  00:A59F  FF FF FF FF FF FF FF FF 
     460.  00:A5A7                      
     461.  00:A5A7                      sprite_vampiro2_2:
     462.  00:A5A7                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     462.  00:A5A7  FF FF FF FF FF FF FF FF 
     463.  00:A5AF                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     463.  00:A5AF  FF FF FF FF FF FF FF FF 
     464.  00:A5B7                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     464.  00:A5B7  FF FF FF FF FF FF FF FF 
     465.  00:A5BF                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     465.  00:A5BF  FF FF FF FF FF FF FF FF 
     466.  00:A5C7                      	
     467.  00:A5C7                      ;; MANOIZQ
     468.  00:A5C7                      
     469.  00:A5C7                      sprite_manoizq1:
     470.  00:A5C7                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     470.  00:A5C7  FF FF FF FF FF FF FF FF 
     471.  00:A5CF                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     471.  00:A5CF  FF FF FF FF FF FF FF FF 
     472.  00:A5D7                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     472.  00:A5D7  FF FF FF FF FF FF FF FF 
     473.  00:A5DF                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     473.  00:A5DF  FF FF FF FF FF FF FF FF 
     474.  00:A5E7                      	
     475.  00:A5E7                      sprite_manoizq2:
     476.  00:A5E7                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     476.  00:A5E7  FF FF FF FF FF FF FF FF 
     477.  00:A5EF                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     477.  00:A5EF  FF FF FF FF FF FF FF FF 
     478.  00:A5F7                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     478.  00:A5F7  FF FF FF FF FF FF FF FF 
     479.  00:A5FF                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     479.  00:A5FF  FF FF FF FF FF FF FF FF 
     480.  00:A607                      	
     481.  00:A607                      sprite_manoizq3:
     482.  00:A607                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     482.  00:A607  FF FF FF FF FF FF FF FF 
     483.  00:A60F                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     483.  00:A60F  FF FF FF FF FF FF FF FF 
     484.  00:A617                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     484.  00:A617  FF FF FF FF FF FF FF FF 
     485.  00:A61F                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF	
     485.  00:A61F  FF FF FF FF FF FF FF FF 
     486.  00:A627                      	
     487.  00:A627                      ;; MANODER
     488.  00:A627                      
     489.  00:A627                      sprite_manoder1:
     490.  00:A627                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     490.  00:A627  FF FF FF FF FF FF FF FF 
     491.  00:A62F                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     491.  00:A62F  FF FF FF FF FF FF FF FF 
     492.  00:A637                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     492.  00:A637  FF FF FF FF FF FF FF FF 
     493.  00:A63F                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     493.  00:A63F  FF FF FF FF FF FF FF FF 
     494.  00:A647                      	
     495.  00:A647                      sprite_manoder2:
     496.  00:A647                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     496.  00:A647  FF FF FF FF FF FF FF FF 
     497.  00:A64F                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     497.  00:A64F  FF FF FF FF FF FF FF FF 
     498.  00:A657                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     498.  00:A657  FF FF FF FF FF FF FF FF 
     499.  00:A65F                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     499.  00:A65F  FF FF FF FF FF FF FF FF 
     500.  00:A667                      	
     501.  00:A667                      sprite_manoder3:
     502.  00:A667                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     502.  00:A667  FF FF FF FF FF FF FF FF 
     503.  00:A66F                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     503.  00:A66F  FF FF FF FF FF FF FF FF 
     504.  00:A677                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     504.  00:A677  FF FF FF FF FF FF FF FF 
     505.  00:A67F                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF		
     505.  00:A67F  FF FF FF FF FF FF FF FF 
     506.  00:A687                      	
     507.  00:A687                      	
     508.  00:A687                      	
     509.  00:A687                      	
     510.  00:A687                      	
     511.  00:A687                      	
     512.  00:A687                      	
     513.  00:A687                      	
     514.  00:A687                      	
     515.  00:A687                      	
     516.  00:A687                      	
     517.  00:A687                      	
     518.  00:A687                      	
     519.  00:A687                      	
     520.  00:A687                      	
     521.  00:A687                      	
     522.  00:A687                      	
     523.  00:A687                      	
     524.  00:A687                      	
     525.  00:A687                      	
     526.  00:A687                      	
     527.  00:A687                      	
     528.  00:A687                      	
     336   00:A687                      	
     337   00:A687                      	include "habitaciones.asm"
       1.  00:A687                      ;;=====================================================
       2.  00:A687                      ;;DEFINICIÓN DE HABITACIONES x NIVEL
       3.  00:A687                      ;;=====================================================	
       4.  00:A687                      
       5.  00:A687                      ; sólo voy a usar 7x7 pero como los arrays son lineales y voy a trabajar con matrices
       6.  00:A687                      ; me interesa que seande  8x8 aunque sólo trabaje con 7x7
       7.  00:A687                      
       8.  00:A687                      ; ojo... la primera linea corresponderá a la primera linea del castillo no a la última
       9.  00:A687                      
      10.  00:A687                      ;; definición de estructura de bits
      11.  00:A687                      ;16 bits por habitación
      12.  00:A687                      
      13.  00:A687                      ;NOTA: no es necesario asignar un bit para la puerta de arriba ya que en las habitaciones de la fila 7 sólo habrá una puerta que será una escalera
      14.  00:A687                      
      15.  00:A687                      ;~ 7 - sin asignar
      16.  00:A687                      ;~ 6 - sin asignar
      17.  00:A687                      ;~ 5 - esqueletos
      18.  00:A687                      ;~ 4 - todos los enemigos muertos 0 no y 1 ó <>0 => toca la variable "is_habitacion_terminada"
      19.  00:A687                      ;~ 0,1,2,3 - nº puertas 1 arriba 1 derecha 1 abajo 1 izquierda
      20.  00:A687                      
      21.  00:A687                      ;~ 7 - oracion
      22.  00:A687                      ;~ 6 - cruz
      23.  00:A687                      ;~ 5 - agua bendita
      24.  00:A687                      ;~ 4 - armadura
      25.  00:A687                      ;~ 3 - planta
      26.  00:A687                      ;~ 2 - vida extra
      27.  00:A687                      ;~ 1 - ballesta
      28.  00:A687                      ;~ 0 - antorchas
      29.  00:A687                      
      30.  00:A687                      ;importante: el byte de la columna 15 indicará con 1 y 0 habitaciones por las que se haya pasado
      31.  00:A687                      ;cuando se inicie la partida todos se pondrán a 0
      32.  00:A687                      ;por ejemplo 01000000b se ha pasado por la hab. 2 de esa fila en el nivel que sea
      33.  00:A687                      
      34.  00:A687                      habitacion_actual:
      35.  00:A687  00                  	db  0		;habitación donde se encuentre el prota. Se mete en una varible par traer todos los datos de golpe y no buscarlos varias veces
      36.  00:A688                      habitacion_extras:
      37.  00:A688  00                  	db	0		;donde van las ayudas de una habitación
      38.  00:A689                      habitacion_actual_puntero;
      39.  00:A689  00 00               	dw	0		;puntero para actualizar la habitación cuando se maten todos los enemigos
      40.  00:A68B                      is_habitacion_terminada:
      41.  00:A68B  00                  	db	0		;variable para consultar más rápido si se ha pasado (<>0 si se ha pasado y 0 no se ha pasado)
      42.  00:A68C                      
      43.  00:A68C                      
      44.  00:A68C                      habitaciones_juego:
      45.  00:A68C                      habitaciones_nivel0:
      46.  00:A68C                      	db  00000000b,#C0,00000000b,#C0,00000000b,#C0,00001010b,#C0,00000000b,#C0,00000000b,#C0,00000000b,#C0,#00,#00 	;primera fila
      46.  00:A68C  00 C0 00 C0 00 C0 0A C0 00 C0 00 C0 00 C0 00 00 
      47.  00:A69C                      	db  00000000b,#C0,00001100b,#C0,00001101b,#C0,00001111b,#C0,00001101b,#C0,00001001b,#C0,00000000b,#C0,#00,#00
      47.  00:A69C  00 C0 0C C0 0D C0 0F C0 0D C0 09 C0 00 C0 00 00 
      48.  00:A6AC                      	db  00000000b,#C0,00001110b,#C0,00001111b,#C0,00001111b,#C0,00001111b,#C0,00001011b,#C0,00000000b,#C0,#00,#00
      48.  00:A6AC  00 C0 0E C0 0F C0 0F C0 0F C0 0B C0 00 C0 00 00 
      49.  00:A6BC                      	db  00000000b,#C0,00001010b,#C0,00001010b,#C0,00000010b,#C0,00001010b,#C0,00001010b,#C0,00000000b,#C0,#00,#00
      49.  00:A6BC  00 C0 0A C0 0A C0 02 C0 0A C0 0A C0 00 C0 00 00 
      50.  00:A6CC                      	db  00000000b,#C0,00001010b,#C0,00001110b,#C0,00000101b,#C0,00001011b,#C0,00001010b,#C0,00000000b,#C0,#00,#00
      50.  00:A6CC  00 C0 0A C0 0E C0 05 C0 0B C0 0A C0 00 C0 00 00 
      51.  00:A6DC                      	db  00000000b,#C0,00000110b,#C0,00000111b,#C0,00001101b,#C0,00000111b,#C0,00000011b,#C0,00000000b,#C0,#00,#00
      51.  00:A6DC  00 C0 06 C0 07 C0 0D C0 07 C0 03 C0 00 C0 00 00 
      52.  00:A6EC                      	db  00000000b,#C0,00000000b,#C0,00000000b,#C0,00001010b,#C0,00001000b,#C0,00000000b,#C0,00000000b,#C0,#00,#00	;última fila
      52.  00:A6EC  00 C0 00 C0 00 C0 0A C0 08 C0 00 C0 00 C0 00 00 
      53.  00:A6FC                      	
      54.  00:A6FC                      habitaciones_nivel1:
      55.  00:A6FC                      	db  00000000b,#C0,00000000b,#C0,00000000b,#C0,00001000b,#C0,00001000b,#C0,00000000b,#C0,00000000b,#C0,#00,#00 	;primera fila
      55.  00:A6FC  00 C0 00 C0 00 C0 08 C0 08 C0 00 C0 00 C0 00 00 
      56.  00:A70C                      	db  00000000b,#C0,00001100b,#C0,00001101b,#C0,00001111b,#C0,00001101b,#C0,00001001b,#C0,00000000b,#C0,#00,#00
      56.  00:A70C  00 C0 0C C0 0D C0 0F C0 0D C0 09 C0 00 C0 00 00 
      57.  00:A71C                      	db  00000000b,#C0,00001110b,#C0,00001111b,#C0,00001111b,#C0,00001111b,#C0,00001011b,#C0,00000000b,#C0,#00,#00
      57.  00:A71C  00 C0 0E C0 0F C0 0F C0 0F C0 0B C0 00 C0 00 00 
      58.  00:A72C                      	db  00000000b,#C0,00001010b,#C0,00001010b,#C0,00000010b,#C0,00001010b,#C0,00001010b,#C0,00000000b,#C0,#00,#00
      58.  00:A72C  00 C0 0A C0 0A C0 02 C0 0A C0 0A C0 00 C0 00 00 
      59.  00:A73C                      	db  00000000b,#C0,00001010b,#C0,00001110b,#C0,00000101b,#C0,00001011b,#C0,00001010b,#C0,00000000b,#C0,#00,#00
      59.  00:A73C  00 C0 0A C0 0E C0 05 C0 0B C0 0A C0 00 C0 00 00 
      60.  00:A74C                      	db  00000000b,#C0,00000110b,#C0,00000111b,#C0,00001101b,#C0,00000111b,#C0,00000011b,#C0,00000000b,#C0,#00,#00
      60.  00:A74C  00 C0 06 C0 07 C0 0D C0 07 C0 03 C0 00 C0 00 00 
      61.  00:A75C                      	db  00000000b,#C0,00000000b,#C0,00000000b,#C0,00001010b,#C0,00001000b,#C0,00000000b,#C0,00000000b,#C0,#00,#00	;última fila
      61.  00:A75C  00 C0 00 C0 00 C0 0A C0 08 C0 00 C0 00 C0 00 00 
      62.  00:A76C                      	
      63.  00:A76C                      habitaciones_nivel2:
      64.  00:A76C                      	db  00000000b,#00,00000001b,#01,00000010b,#02,00000011b,#03,00001000b,#04,00001001b,#05,00001100b,#06,#FF,#00 ;primera fila
      64.  00:A76C  00 00 01 01 02 02 03 03 08 04 09 05 0C 06 FF 00 
      65.  00:A77C                      	db  #17,#10,#11,#11,#12,#12,#13,#13,#14,#14,#15,#15,#16,#16,#FF,#00
      65.  00:A77C  17 10 11 11 12 12 13 13 14 14 15 15 16 16 FF 00 
      66.  00:A78C                      	db  #20,#20,#21,#21,#22,#22,#23,#23,#24,#24,#25,#25,#26,#26,#FF,#00
      66.  00:A78C  20 20 21 21 22 22 23 23 24 24 25 25 26 26 FF 00 
      67.  00:A79C                      	db  #30,#30,#31,#31,#32,#32,#33,#33,#34,#34,#35,#35,#36,#36,#FF,#00
      67.  00:A79C  30 30 31 31 32 32 33 33 34 34 35 35 36 36 FF 00 
      68.  00:A7AC                      	db  00000000b,#00,00000001b,#01,00001111b,#02,00000011b,#03,00001000b,#04,00001001b,#05,00001100b,#06,#FF,#00
      68.  00:A7AC  00 00 01 01 0F 02 03 03 08 04 09 05 0C 06 FF 00 
      69.  00:A7BC                      	db  #50,#50,#51,#51,#52,#52,#53,#53,#54,#54,#55,#55,#56,#56,#FF,#00
      69.  00:A7BC  50 50 51 51 52 52 53 53 54 54 55 55 56 56 FF 00 
      70.  00:A7CC                      	db  00000000b,#00,00000001b,#01,00000010b,#02,00000011b,#03,00001000b,#04,00001001b,#05,00001100b,#06,#FF,#00	;ultima fila
      70.  00:A7CC  00 00 01 01 02 02 03 03 08 04 09 05 0C 06 FF 00 
      71.  00:A7DC                      	
      72.  00:A7DC                      habitaciones_nivel3:
      73.  00:A7DC                      	db  00000000b,#00,00000001b,#01,00000010b,#02,00000011b,#03,00001000b,#04,00001001b,#05,00001100b,#06,#FF,#00 ;primera fila
      73.  00:A7DC  00 00 01 01 02 02 03 03 08 04 09 05 0C 06 FF 00 
      74.  00:A7EC                      	db  #17,#10,#11,#11,#12,#12,#13,#13,#14,#14,#15,#15,#16,#16,#FF,#00
      74.  00:A7EC  17 10 11 11 12 12 13 13 14 14 15 15 16 16 FF 00 
      75.  00:A7FC                      	db  #20,#20,#21,#21,#22,#22,#23,#23,#24,#24,#25,#25,#26,#26,#FF,#00
      75.  00:A7FC  20 20 21 21 22 22 23 23 24 24 25 25 26 26 FF 00 
      76.  00:A80C                      	db  #30,#30,#31,#31,#32,#32,#33,#33,#34,#34,#35,#35,#36,#36,#FF,#00
      76.  00:A80C  30 30 31 31 32 32 33 33 34 34 35 35 36 36 FF 00 
      77.  00:A81C                      	db  00000000b,#00,00000001b,#01,00001111b,#02,00000011b,#03,00001000b,#04,00001001b,#05,00001100b,#06,#FF,#00
      77.  00:A81C  00 00 01 01 0F 02 03 03 08 04 09 05 0C 06 FF 00 
      78.  00:A82C                      	db  #50,#50,#51,#51,#52,#52,#53,#53,#54,#54,#55,#55,#56,#56,#FF,#00
      78.  00:A82C  50 50 51 51 52 52 53 53 54 54 55 55 56 56 FF 00 
      79.  00:A83C                      	db  00000000b,#00,00000001b,#01,00000010b,#02,00000011b,#03,00001000b,#04,00001001b,#05,00001100b,#06,#FF,#00	;ultima fila
      79.  00:A83C  00 00 01 01 02 02 03 03 08 04 09 05 0C 06 FF 00 
      80.  00:A84C                      	
      81.  00:A84C                      habitaciones_nivel4:
      82.  00:A84C                      	db  00000001b,#00,00000001b,#01,00000010b,#02,00000011b,#03,00001000b,#04,00001001b,#05,00001100b,#06,#FF,#00 ;primera fila
      82.  00:A84C  01 00 01 01 02 02 03 03 08 04 09 05 0C 06 FF 00 
      83.  00:A85C                      	db  #17,#10,#11,#11,#12,#12,#13,#13,#14,#14,#15,#15,#16,#16,#FF,#00
      83.  00:A85C  17 10 11 11 12 12 13 13 14 14 15 15 16 16 FF 00 
      84.  00:A86C                      	db  #20,#20,#21,#21,#22,#22,#23,#23,#24,#24,#25,#25,#26,#26,#FF,#00
      84.  00:A86C  20 20 21 21 22 22 23 23 24 24 25 25 26 26 FF 00 
      85.  00:A87C                      	db  #30,#30,#31,#31,#32,#32,#33,#33,#34,#34,#35,#35,#36,#36,#FF,#00
      85.  00:A87C  30 30 31 31 32 32 33 33 34 34 35 35 36 36 FF 00 
      86.  00:A88C                      	db  00000000b,#00,00000001b,#01,00001111b,#02,00000011b,#03,00001000b,#04,00001001b,#05,00001100b,#06,#FF,#00
      86.  00:A88C  00 00 01 01 0F 02 03 03 08 04 09 05 0C 06 FF 00 
      87.  00:A89C                      	db  #50,#50,#51,#51,#52,#52,#53,#53,#54,#54,#55,#55,#56,#56,#FF,#00
      87.  00:A89C  50 50 51 51 52 52 53 53 54 54 55 55 56 56 FF 00 
      88.  00:A8AC                      	db  00000000b,#00,00000001b,#01,00001111b,00001111b,00000011b,#03,00001000b,#04,00001001b,#05,00001100b,#06,#FF,#00	;ultima fila
      88.  00:A8AC  00 00 01 01 0F 0F 03 03 08 04 09 05 0C 06 FF 00 
      89.  00:A8BC                      	
      90.  00:A8BC                      habitaciones_nivel5:
      91.  00:A8BC                      	db  00000000b,#00,00000001b,#01,00000010b,#02,00000011b,#03,00001000b,#04,00001001b,#05,00001100b,#06,#FF,#00 ;primera fila
      91.  00:A8BC  00 00 01 01 02 02 03 03 08 04 09 05 0C 06 FF 00 
      92.  00:A8CC                      	db  #17,#10,#11,#11,#12,#12,#13,#13,#14,#14,#15,#15,#16,#16,#FF,#00
      92.  00:A8CC  17 10 11 11 12 12 13 13 14 14 15 15 16 16 FF 00 
      93.  00:A8DC                      	db  #20,#20,#21,#21,#22,#22,#23,#23,#24,#24,#25,#25,#26,#26,#FF,#00
      93.  00:A8DC  20 20 21 21 22 22 23 23 24 24 25 25 26 26 FF 00 
      94.  00:A8EC                      	db  #30,#30,#31,#31,#32,#32,#33,#33,#34,#34,#35,#35,#36,#36,#FF,#00
      94.  00:A8EC  30 30 31 31 32 32 33 33 34 34 35 35 36 36 FF 00 
      95.  00:A8FC                      	db  00000000b,#00,00000001b,#01,00001111b,#02,00000011b,#03,00001000b,#04,00001001b,#05,00001100b,#06,#FF,#00
      95.  00:A8FC  00 00 01 01 0F 02 03 03 08 04 09 05 0C 06 FF 00 
      96.  00:A90C                      	db  #50,#50,#51,#51,#52,#52,#53,#53,#54,#54,#55,#55,#56,#56,#FF,#00
      96.  00:A90C  50 50 51 51 52 52 53 53 54 54 55 55 56 56 FF 00 
      97.  00:A91C                      	db  00000000b,#00,00000001b,#01,00001010b,00001010b,00000011b,#03,00001000b,#04,00001001b,#05,00001100b,#06,#FF,#00	;ultima fila
      97.  00:A91C  00 00 01 01 0A 0A 03 03 08 04 09 05 0C 06 FF 00 
      98.  00:A92C                      	
      99.  00:A92C                      habitaciones_nivel6:
     100.  00:A92C                      	db  00000000b,#00,00000001b,#01,00000010b,#02,00000011b,#03,00001000b,#04,00001001b,#05,00001100b,#06,#FF,#00 ;primera fila
     100.  00:A92C  00 00 01 01 02 02 03 03 08 04 09 05 0C 06 FF 00 
     101.  00:A93C                      	db  #17,#10,#11,#11,#12,#12,#13,#13,#14,#14,#15,#15,#16,#16,#FF,#00
     101.  00:A93C  17 10 11 11 12 12 13 13 14 14 15 15 16 16 FF 00 
     102.  00:A94C                      	db  #20,#20,#21,#21,#22,#22,#23,#23,#24,#24,#25,#25,#26,#26,#FF,#00
     102.  00:A94C  20 20 21 21 22 22 23 23 24 24 25 25 26 26 FF 00 
     103.  00:A95C                      	db  #30,#30,#31,#31,#32,#32,#33,#33,#34,#34,#35,#35,#36,#36,#FF,#00
     103.  00:A95C  30 30 31 31 32 32 33 33 34 34 35 35 36 36 FF 00 
     104.  00:A96C                      	db  00000000b,#00,00000001b,#01,00001111b,#02,00000011b,#03,00001000b,#04,00001001b,#05,00001100b,#06,#FF,#00
     104.  00:A96C  00 00 01 01 0F 02 03 03 08 04 09 05 0C 06 FF 00 
     105.  00:A97C                      	db  #50,#50,#51,#51,#52,#52,#53,#53,#54,#54,#55,#55,#56,#56,#FF,#00
     105.  00:A97C  50 50 51 51 52 52 53 53 54 54 55 55 56 56 FF 00 
     106.  00:A98C                      	db  00000000b,#00,00000001b,10000000b,00001111b,#02,00000011b,#03,00001000b,#04,00001001b,#05,00001100b,#06,#FF,#00	;ultima fila
     106.  00:A98C  00 00 01 80 0F 02 03 03 08 04 09 05 0C 06 FF 00 
     107.  00:A99C                      
     108.  00:A99C                      
     338   00:A99C                      	
     339   00:A99C                      	include "variables.asm"
       1.  00:A99C                      ;;=====================================================
       2.  00:A99C                      ;;DEFINICIÓN DE VARIABLES
       3.  00:A99C                      ;;=====================================================
       4.  00:A99C                      
       5.  00:A99C                      ;Colores base de la pantalla
       6.  00:A99C                      color_base:
       7.  00:A99C  01 01 01            			DB		COLNEGRO,COLNEGRO,COLNEGRO	
       8.  00:A99F                      ;colores de pantalla cuando se tira bomba
       9.  00:A99F                      color_bomba1:
      10.  00:A99F  08 08 08            			DB		COLROJO,COLROJO,COLROJO
      11.  00:A9A2                      color_bomba2:
      12.  00:A9A2  06 06 06            			DB		COLROJOOSC,COLROJOOSC,COLROJOOSC
      13.  00:A9A5                      
      14.  00:A9A5                      ;definicion de variable del prota usando la estructura del punto de mira
      15.  00:A9A5                      prota:		ESTRUCTURA_PUNTOMIRA
      15.  00:A9A5  78 6C 00 00 00 05 00 00 00 00 00 00 00 00 00 00 
      16.  00:A9B5                      ;variables globales del prota
      17.  00:A9B5                      prota_nivel:			;nivel del castillo donde está 0-6
      18.  00:A9B5  00                  			DB		0
      19.  00:A9B6                      prota_vidas:
      20.  00:A9B6  00                  			DB		0
      21.  00:A9B7                      prota_reliquias:
      22.  00:A9B7  03                  			DB		3
      23.  00:A9B8                      prota_pos_mapx:
      24.  00:A9B8  00                  			DB		0	;pos columna
      25.  00:A9B9                      prota_pos_mapy:
      26.  00:A9B9  00                  			DB		0	;pos fila
      27.  00:A9BA                      prota_energia:
      28.  00:A9BA  FA                  			DB		250
      29.  00:A9BB                      
      30.  00:A9BB                      ;array para pintar de golpe el marcador de vidas
      31.  00:A9BB                      array_aux_vidas: 		
      32.  00:A9BB                      			DB		0,0,0,0,0,0,0,0
      32.  00:A9BB  00 00 00 00 00 00 00 00 
      33.  00:A9C3                      
      34.  00:A9C3                      ;array para pintar de golpe el marcador de reliquias
      35.  00:A9C3                      array_aux_reliquias:	
      36.  00:A9C3                      			DB		0,0,0,0,0,0,0,0
      36.  00:A9C3  00 00 00 00 00 00 00 00 
      37.  00:A9CB                      
      38.  00:A9CB                      array_aux_energia:					;array para pintar de golpe el marcador de energía
      39.  00:A9CB                      			DB		16,0,0,0,0,0,0 	;el 16 primero es porque siempre estará pintado el cuadro primero rojo
      39.  00:A9CB  10 00 00 00 00 00 00 
      40.  00:A9D2                      ultimo_pos_array_aux_energia:
      41.  00:A9D2  00                  			DB		0				;el array completo es de 8 pero para posicionar sin niecesidad de cálculos  etiqueto este aparte
      42.  00:A9D3                      			
      43.  00:A9D3                      array_aux_mapa_limpiar:	;es por facilitar el reseteo del mapa (pinto 7 lineas en negro con bios) la otra opción es más larga en código y complicada aunque más rápida
      44.  00:A9D3                      			DB		0,0,0,0,0,0,0
      44.  00:A9D3  00 00 00 00 00 00 00 
      45.  00:A9DA                      elemento_pintar_mapa:
      46.  00:A9DA  00                  			DB		0	;TILEPROTAM = 19, ;TILEGRISM = 9
      47.  00:A9DB                      			
      48.  00:A9DB                      ;; nota importante: cada vez que se cambie de nivel se actualizará el contenido
      49.  00:A9DB                      
      50.  00:A9DB                      
      51.  00:A9DB                      lista_ayudas:
      52.  00:A9DB  00 (16)             ayuda_oracion:		DS		ESTRUCTURA_AYUDA		
      53.  00:A9EB  00 (16)             ayuda_cruz:			DS		ESTRUCTURA_AYUDA
      54.  00:A9FB  00 (16)             ayuda_aguabendita:	DS		ESTRUCTURA_AYUDA
      55.  00:AA0B  00 (16)             ayuda_armadura:		DS		ESTRUCTURA_AYUDA
      56.  00:AA1B  00 (16)             ayuda_planta:		DS		ESTRUCTURA_AYUDA
      57.  00:AA2B  00 (16)             ayuda_vidaextra		DS		ESTRUCTURA_AYUDA
      58.  00:AA3B  00 (16)             ayuda_ballesta:		DS		ESTRUCTURA_AYUDA
      59.  00:AA4B                      
      60.  00:AA4B                      ;datos ayudas
      61.  00:AA4B                      datos_oracion:
      62.  00:AA4B  00                  				DB    	0				;0 no activo <>0 activo															0
      63.  00:AA4C  B4 AA               				DW		array_oracionon	;pos en memoria ver array_ayudas de cómo se mostrarán (wordaux2)				1,2
      64.  00:AA4E  B8 AA               				DW		array_oracionoff;pos en memoria ver array_ayudas de cómo se mostrarán (wordaux2)				3,4
      65.  00:AA50  A3                  				DB		POSORACION		;pos en pantalla (memoria en el banco 1 se le suma 256 + TILEMAP) (wordaux1)	5
      66.  00:AA51  20                  				DB		POSORACIONX		;pos del pixel central (esquina superior + 8x)									6
      67.  00:AA52  70                  				DB		POSAYUDASY		;pos del pixel central (esquina superior + 8y) (para toas igual)				7
      68.  00:AA53  20 9C               				DW		accion_oracion	;subrutina que indica la acción si se dispara en el objeto						8,9
      69.  00:AA55                      datos_cruz:
      70.  00:AA55                      				;~ DB    	0				;0 no activo <>0 activo															0
      71.  00:AA55                      				;~ DW		array_cruzon	;pos en memoria ver array_ayudas de cómo se mostrarán (wordaux2)				1,2
      72.  00:AA55                      				;~ DW		array_cruzoff	;pos en memoria ver array_ayudas de cómo se mostrarán (wordaux2)				3,4
      73.  00:AA55                      				;~ DB		POSCRUZ			;pos en pantalla (memoria en el banco 1 se le suma 256 + TILEMAP) (wordaux1)	5
      74.  00:AA55                      				;~ DB		POSCRUZX		;pos del pixel central (esquina superior + 8x)									6
      75.  00:AA55                      				;~ DB		POSAYUDASY		;pos del pixel central (esquina superior + 8y) (para toas igual)				7
      76.  00:AA55                      				;~ DW		accion_cruz		;subrutina que indica la acción si se dispara en el objeto						8,9 
      77.  00:AA55                      				
      78.  00:AA55  00                  				DB    	0				;0 no activo <>0 activo															0
      79.  00:AA56  BC AA               				DW		array_cruzon	;pos en memoria ver array_ayudas de cómo se mostrarán (wordaux2)				1,2
      80.  00:AA58  C0 AA               				DW		array_cruzoff	;pos en memoria ver array_ayudas de cómo se mostrarán (wordaux2)				3,4
      81.  00:AA5A  A7                  				DB		167			;pos en pantalla (memoria en el banco 1 se le suma 256 + TILEMAP) (wordaux1)	5
      82.  00:AA5B  40                  				DB		64		;pos del pixel central (esquina superior + 8x)									6
      83.  00:AA5C  70                  				DB		112		;pos del pixel central (esquina superior + 8y) (para toas igual)				7
      84.  00:AA5D  21 9C               				DW		accion_cruz		;subrutina que indica la acción si se dispara en el objeto						8,9 
      85.  00:AA5F                      				
      86.  00:AA5F                      datos_aguabendita:
      87.  00:AA5F  00                  				DB    	0				;0 no activo <>0 activo															0
      88.  00:AA60  C4 AA               				DW		array_aguaon	;pos en memoria ver array_ayudas de cómo se mostrarán (wordaux2)				1,2
      89.  00:AA62  C8 AA               				DW		array_aguaoff	;pos en memoria ver array_ayudas de cómo se mostrarán (wordaux2)				3,4
      90.  00:AA64  AB                  				DB		POSAGUA			;pos en pantalla (memoria en el banco 1 se le suma 256 + TILEMAP) (wordaux1)	5
      91.  00:AA65  60                  				DB		POSAGUAX		;pos del pixel central (esquina superior + 8x)									6
      92.  00:AA66  70                  				DB		POSAYUDASY		;pos del pixel central (esquina superior + 8y) (para toas igual)				7
      93.  00:AA67  22 9C               				DW		accion_agua		;subrutina que indica la acción si se dispara en el objeto						8,9
      94.  00:AA69  00                  				DB		0	;relleno																		10-16    
      95.  00:AA6A  00                  				DB		0	;relleno																		10-16    
      96.  00:AA6B  00                  				DB		0	;relleno																		10-16    
      97.  00:AA6C  00                  				DB		0	;relleno																		10-16    
      98.  00:AA6D  00                  				DB		0	;relleno																		10-16    
      99.  00:AA6E  00                  				DB		0	;relleno																		10-16   
     100.  00:AA6F  00                  				DB		0	;relleno																		10-16    
     101.  00:AA70                      datos_armadura:
     102.  00:AA70  00                  				DB    	0				;0 no activo <>0 activo															0
     103.  00:AA71  CC AA               				DW		array_armaduraon;pos en memoria ver array_ayudas de cómo se mostrarán (wordaux2)				1,2
     104.  00:AA73  D0 AA               				DW		array_armaduraoff;pos en memoria ver array_ayudas de cómo se mostrarán (wordaux2)				3,4
     105.  00:AA75  AF                  				DB		POSARMAD		;pos en pantalla (memoria en el banco 1 se le suma 256 + TILEMAP) (wordaux1)	5
     106.  00:AA76  80                  				DB		POSARMADX		;pos del pixel central (esquina superior + 8x)									6
     107.  00:AA77  70                  				DB		POSAYUDASY		;pos del pixel central (esquina superior + 8y) (para toas igual)				7
     108.  00:AA78  23 9C               				DW		accion_armadura	;subrutina que indica la acción si se dispara en el objeto						8,9
     109.  00:AA7A  00                  				DB		0	;relleno																		10-16    
     110.  00:AA7B  00                  				DB		0	;relleno																		10-16    
     111.  00:AA7C  00                  				DB		0	;relleno																		10-16    
     112.  00:AA7D  00                  				DB		0	;relleno																		10-16    
     113.  00:AA7E  00                  				DB		0	;relleno																		10-16    
     114.  00:AA7F  00                  				DB		0	;relleno																		10-16   
     115.  00:AA80  00                  				DB		0	;relleno																		10-16    
     116.  00:AA81                      datos_planta:
     117.  00:AA81  00                  				DB    	0				;0 no activo <>0 activo															0
     118.  00:AA82  D4 AA               				DW		array_plantaon	;pos en memoria ver array_ayudas de cómo se mostrarán (wordaux2)				1,2
     119.  00:AA84  D8 AA               				DW		array_plantaoff	;pos en memoria ver array_ayudas de cómo se mostrarán (wordaux2)				3,4
     120.  00:AA86  B3                  				DB		POSPLANTA		;pos en pantalla (memoria en el banco 1 se le suma 256 + TILEMAP) (wordaux1)	5
     121.  00:AA87  A0                  				DB		POSPLANTAX		;pos del pixel central (esquina superior + 8x)									6
     122.  00:AA88  70                  				DB		POSAYUDASY		;pos del pixel central (esquina superior + 8y) (para toas igual)				7
     123.  00:AA89  24 9C               				DW		accion_planta	;subrutina que indica la acción si se dispara en el objeto						8,9
     124.  00:AA8B  00                  				DB		0	;relleno																		10-16    
     125.  00:AA8C  00                  				DB		0	;relleno																		10-16    
     126.  00:AA8D  00                  				DB		0	;relleno																		10-16    
     127.  00:AA8E  00                  				DB		0	;relleno																		10-16    
     128.  00:AA8F  00                  				DB		0	;relleno																		10-16    
     129.  00:AA90  00                  				DB		0	;relleno																		10-16   
     130.  00:AA91  00                  				DB		0	;relleno																		10-16     
     131.  00:AA92                      datos_vidaextra:
     132.  00:AA92  00                  				DB    	0				;0 no activo <>0 activo															0
     133.  00:AA93  DC AA               				DW		array_extraon	;pos en memoria ver array_ayudas de cómo se mostrarán (wordaux2)				1,2
     134.  00:AA95  E0 AA               				DW		array_extraoff	;pos en memoria ver array_ayudas de cómo se mostrarán (wordaux2)				3,4
     135.  00:AA97  B7                  				DB		POSVIDAEXT		;pos en pantalla (memoria en el banco 1 se le suma 256 + TILEMAP) (wordaux1)	5
     136.  00:AA98  C0                  				DB		POSVIDAEXTX		;pos del pixel central (esquina superior + 8x)									6
     137.  00:AA99  70                  				DB		POSAYUDASY		;pos del pixel central (esquina superior + 8y) (para toas igual)				7
     138.  00:AA9A  25 9C               				DW		accion_vidaextra;subrutina que indica la acción si se dispara en el objeto						8,9
     139.  00:AA9C  00                  				DB		0	;relleno																		10-16    
     140.  00:AA9D  00                  				DB		0	;relleno																		10-16    
     141.  00:AA9E  00                  				DB		0	;relleno																		10-16    
     142.  00:AA9F  00                  				DB		0	;relleno																		10-16    
     143.  00:AAA0  00                  				DB		0	;relleno																		10-16    
     144.  00:AAA1  00                  				DB		0	;relleno																		10-16   
     145.  00:AAA2  00                  				DB		0	;relleno																		10-16     
     146.  00:AAA3                      datos_ballesta:
     147.  00:AAA3  00                  				DB    	0				;0 no activo <>0 activo															0
     148.  00:AAA4  E4 AA               				DW		array_ballestaon;pos en memoria ver array_ayudas de cómo se mostrarán (wordaux2)				1,2
     149.  00:AAA6  E8 AA               				DW		array_ballestaoff;pos en memoria ver array_ayudas de cómo se mostrarán (wordaux2)				3,4
     150.  00:AAA8  BB                  				DB		POSBALLESTA		;pos en pantalla (memoria en el banco 1 se le suma 256 + TILEMAP) (wordaux1)	5
     151.  00:AAA9  E0                  				DB		POSBALLESTAX	;pos del pixel central (esquina superior + 8x)									6
     152.  00:AAAA  70                  				DB		POSAYUDASY		;pos del pixel central (esquina superior + 8y) (para toas igual)				7
     153.  00:AAAB  20 9C               				DW		accion_oracion	;subrutina que indica la acción si se dispara en el objeto						8,9
     154.  00:AAAD  00                  				DB		0	;relleno																		10-16    
     155.  00:AAAE  00                  				DB		0	;relleno																		10-16    
     156.  00:AAAF  00                  				DB		0	;relleno																		10-16    
     157.  00:AAB0  00                  				DB		0	;relleno																		10-16    
     158.  00:AAB1  00                  				DB		0	;relleno																		10-16    
     159.  00:AAB2  00                  				DB		0	;relleno																		10-16   
     160.  00:AAB3  00                  				DB		0	;relleno																		10-16      
     161.  00:AAB4                      
     162.  00:AAB4                      
     163.  00:AAB4                      
     164.  00:AAB4                      
     165.  00:AAB4                      
     166.  00:AAB4                      ;array de ayudas
     167.  00:AAB4                      ;posición dentro del bank1 (o 0 que son iguales) de los tiles de la ayuda (cómo en los sprites de 2x2)
     168.  00:AAB4                      array_ayudas:
     169.  00:AAB4  C8 CA               array_oracionon:			DB	200,202
     170.  00:AAB6  C9 CB               array_oracionon1:			DB	201,203
     171.  00:AAB8  CC CE               array_oracionoff:			DB	204,206
     172.  00:AABA  CD CF               array_oracionoff1:			DB	205,207
     173.  00:AABC  D0 D2               array_cruzon:				DB	208,210
     174.  00:AABE  D1 D3               array_cruzon1:				DB	209,211
     175.  00:AAC0  D4 D6               array_cruzoff:				DB	212,214
     176.  00:AAC2  D5 D7               array_cruzoff1:				DB	213,215
     177.  00:AAC4  D8 DA               array_aguaon:				DB	216,218
     178.  00:AAC6  D9 DB               array_aguaon1:				DB	217,219
     179.  00:AAC8  DC DE               array_aguaoff:				DB	220,222
     180.  00:AACA  DD DF               array_aguaoff1:				DB	221,223
     181.  00:AACC  E0 E2               array_armaduraon:			DB	224,226
     182.  00:AACE  E1 E3               array_armaduraon1:			DB	225,227
     183.  00:AAD0  E4 E6               array_armaduraoff:			DB	228,230
     184.  00:AAD2  E5 E7               array_armaduraoff1:			DB	229,231
     185.  00:AAD4  E8 EA               array_plantaon:				DB	232,234
     186.  00:AAD6  E9 EB               array_plantaon1:			DB	233,235
     187.  00:AAD8  EC EE               array_plantaoff:			DB	236,238
     188.  00:AADA  ED EF               array_plantaoff1:			DB	237,239
     189.  00:AADC  F0 F2               array_extraon:				DB	240,242
     190.  00:AADE  F1 F3               array_extraon1:				DB	241,243
     191.  00:AAE0  F4 F6               array_extraoff:				DB	244,246
     192.  00:AAE2  F5 F7               array_extraoff1:			DB	245,247
     193.  00:AAE4  F8 FA               array_ballestaon:			DB	248,250
     194.  00:AAE6  F9 FB               array_ballestaon1:			DB	249,251
     195.  00:AAE8  FC FE               array_ballestaoff:			DB	252,254
     196.  00:AAEA  FD FF               array_ballestaoff1:			DB	253,255
     197.  00:AAEC                      
     198.  00:AAEC  00 (7)              antorchas:			DS		ESTRUCTURA_ANTORCHA
     199.  00:AAF3  C5 C6 C7            array_antorcha:				DB	197,198,199	;fuego + madera1 + madera2
     200.  00:AAF6                      
     201.  00:AAF6  00 (7)              esqueletos:			DS		ESTRUCTURA_ESQUELETO
     202.  00:AAFD                      array_esqueleto:			DB	194, 0, 195, 160, 164, 161, 0, 163, 0, 193, 162, 192
     202.  00:AAFD  C2 00 C3 A0 A4 A1 00 A3 00 C1 A2 C0 
     203.  00:AB09  A4 A5 A4 A6         lista_escenas_calavera:		DB	164, 165, 164, 166
     204.  00:AB0D                      
     205.  00:AB0D                      
     206.  00:AB0D                      
     207.  00:AB0D                      
     208.  00:AB0D                      ;array de 4 bytes x 32 sprites posibles en pantalla que sobreescribirá la tabla de sprites actualizando VRAM
     209.  00:AB0D                      array_sprites:
     210.  00:AB0D  00 (8)              array_sprites_pm:				DS	2 * 4
     211.  00:AB15  00 (120)            array_sprites_enem:				DS	30 * 4
     212.  00:AB8D  00 (140)            lista_enemigos:					DS	10 * ESTRUCTURA_ENEMIGO
     213.  00:AC19                      ; puntero al array a pintar en VRAM
     214.  00:AC19  00 00               puntero_array_atrib_array_VRAM: DW	0	;ARRAYSPTRIES + 8
     215.  00:AC1B                      
     216.  00:AC1B                      
     217.  00:AC1B                      
     218.  00:AC1B                      
     219.  00:AC1B                      
     340   00:AC1B                      	
     341   00:AC1B                      ;;=====================================================
     342   00:AC1B                      ;;DEFINICIÓN DE PANTALLAS
     343   00:AC1B                      ;;=====================================================		
     344   00:AC1B                      	include "pantallas.asm"
       1.  00:AC1B                      ;;=====================================================
       2.  00:AC1B                      ;;DEFINICIÓN DE PANTALLAS
       3.  00:AC1B                      ;;=====================================================		
       4.  00:AC1B                      
       5.  00:AC1B                      ; bancos 1 y 2 y de pantalla 1 
       6.  00:AC1B                      ; se usa un banco común (en este caso el banco 1)
       7.  00:AC1B                      ; el mapa afecta al banco 1 y 2
       8.  00:AC1B  (022A)              tiles_patrones_nivel0:	incbin "pantallas/nivel0.bank1.til.bin.chr.plet5"
       9.  00:AE45  (006B)              tiles_color_nivel0:		incbin "pantallas/nivel0.bank1.til.bin.clr.plet5"
      10.  00:AEB0  (0035)              tiles_mapa_nivel0:		incbin "pantallas/nivel0.bank01.map.bin.plet5"
      11.  00:AEE5                      
      12.  00:AEE5  (01B5)              tiles_patrones_nivel1:	incbin "pantallas/nivel1.bank1.til.bin.chr.plet5"
      13.  00:B09A  (0047)              tiles_color_nivel1:		incbin "pantallas/nivel1.bank1.til.bin.clr.plet5"
      14.  00:B0E1  (0035)              tiles_mapa_nivel1:		incbin "pantallas/nivel1.bank01.map.bin.plet5"
      15.  00:B116                      
      16.  00:B116  (01B5)              tiles_patrones_nivel2:	incbin "pantallas/nivel2.bank1.til.bin.chr.plet5"
      17.  00:B2CB  (0047)              tiles_color_nivel2:		incbin "pantallas/nivel2.bank1.til.bin.clr.plet5"
      18.  00:B312  (0035)              tiles_mapa_nivel2:		incbin "pantallas/nivel2.bank01.map.bin.plet5"
      19.  00:B347                      
      20.  00:B347  (01B5)              tiles_patrones_nivel3:	incbin "pantallas/nivel3.bank1.til.bin.chr.plet5"
      21.  00:B4FC  (0047)              tiles_color_nivel3:		incbin "pantallas/nivel3.bank1.til.bin.clr.plet5"
      22.  00:B543  (0035)              tiles_mapa_nivel3:		incbin "pantallas/nivel3.bank01.map.bin.plet5"
      23.  00:B578                      
      24.  00:B578  (01B5)              tiles_patrones_nivel4:	incbin "pantallas/nivel4.bank1.til.bin.chr.plet5"
      25.  00:B72D  (0047)              tiles_color_nivel4:		incbin "pantallas/nivel4.bank1.til.bin.clr.plet5"
      26.  00:B774  (0035)              tiles_mapa_nivel4:		incbin "pantallas/nivel4.bank01.map.bin.plet5"
      27.  00:B7A9                      
      28.  00:B7A9  (01B5)              tiles_patrones_nivel5:	incbin "pantallas/nivel5.bank1.til.bin.chr.plet5"
      29.  00:B95E  (0047)              tiles_color_nivel5:		incbin "pantallas/nivel5.bank1.til.bin.clr.plet5"
      30.  00:B9A5  (0035)              tiles_mapa_nivel5:		incbin "pantallas/nivel5.bank01.map.bin.plet5"
      31.  00:B9DA                      
      32.  00:B9DA  (01B5)              tiles_patrones_nivel6:	incbin "pantallas/nivel6.bank1.til.bin.chr.plet5"
      33.  00:BB8F  (0047)              tiles_color_nivel6:		incbin "pantallas/nivel6.bank1.til.bin.clr.plet5"
      34.  00:BBD6  (0035)              tiles_mapa_nivel6:		incbin "pantallas/nivel6.bank01.map.bin.plet5"
      35.  00:BC0B                      
      36.  00:BC0B                      ; 3º banco que es la parte de puntos, vidas, mapas, etc... es común
      37.  00:BC0B  (014C)              tiles_patrones_marcador:	incbin "pantallas/marcador.til.bin.chr.plet5"
      38.  00:BD57  (0035)              tiles_color_marcador:		incbin "pantallas/marcador.til.bin.clr.plet5"
      39.  00:BD8C  (0062)              tiles_mapa_marcador:		incbin "pantallas/marcador.map.bin.plet5"
      40.  00:BDEE                      
      41.  00:BDEE                      ;NOTA: FALTARÍAN PANTALLAS ESPECIALES (POR DEFINIR)
      42.  00:BDEE                      ; INICIO
      43.  00:BDEE                      ; GAME OVER
      44.  00:BDEE                      ; HUIDA
      45.  00:BDEE                      ; 2 FINAL BUENO
      46.  00:BDEE                      ; 1 FINAL MALO
     345   00:BDEE                      
     346   00:BDEE                      END:

    LABELS
-------------------------------------------------
00:000000D8 X GTTRIG
00:000000D5 X GTSTCK
00:0000F3DB   CLIKSW
00:0000013E X RDVDP
00:00000047   WRTVDP
00:0000005C   LDIRVM
00:00000059 X LDIRMV
00:0000005F   CHGMOD
00:00000041 X DISSCR
00:00000044 X ENASCR
00:00000062   CHGCLR
00:0000F3E9   FORCLR
00:0000F3EA   BAKCLR
00:0000F3EB   BDRCLR
00:000000C3   CLS
00:0000F3DF X RG0SAV
00:0000F3E0   RG1SAV
00:0000F3E1 X RG2SAV
00:0000F3E2 X RG3SAV
00:0000F3E3 X RG4SAV
00:0000F3E4 X RG5SAV
00:0000F3E5 X RG6SAV
00:0000F3E6 X RG7SAV
00:0000F3E7 X STATFL
00:00000099   REGEST
00:00000098   REGESCVDP
00:000000A0   PSG_A
00:000000A1   PSG_W
00:000000A2   PSG_R
00:00000000   CHRTBL
00:00001800   TILMAP
00:00001B00   SPRART
00:00002000   CLRTBL
00:00003800   SPRTBL
00:00000001   SI
00:00000000 X NO
00:00000001 X PUERTAACTIV
00:00000004   LIMCADENCIA
00:00000000 X COLTRASP
00:00000001   COLNEGRO
00:00000002 X COLVERDE
00:00000003 X COLVERCLA
00:00000004 X COLAZULOSC
00:00000005 X COLAZULLA
00:00000006   COLROJOOSC
00:00000007 X COLCYAN
00:00000008   COLROJO
00:00000009 X COLROJOCLA
00:0000000A X COLAMAROSC
00:0000000B X COLAMARCLA
00:0000000C X COLVERDOSC
00:0000000D X COLMAGENTA
00:0000000E X COLGRIS
00:0000000F   COLBLANCO
00:000002F8   POSMAPLIN1
00:000002D8   POSMAPLIN2
00:000002B8   POSMAPLIN3
00:00000298   POSMAPLIN4
00:00000278   POSMAPLIN5
00:00000258   POSMAPLIN6
00:00000238   POSMAPLIN7
00:0000000D   POSCARAMAP
00:00000248   POSVIDAS
00:00000011   POSRELIMAP
00:000002C8   POSRELIQ
00:00000288   POSENERG
00:000002B4   POSNIVEL
00:00000238   POSMAPA
00:000001EE   POSPUERABAJ
00:0000008E   POSPUERARRI
00:000000FC   POSPUERDERE
00:000000E1   POSPUERIZQU
00:0000006C   POSESCALERA
00:000000A3   POSORACION
00:000000A7 X POSCRUZ
00:000000AB   POSAGUA
00:000000AF   POSARMAD
00:000000B3   POSPLANTA
00:000000B7   POSVIDAEXT
00:000000BB   POSBALLESTA
00:00000020   POSORACIONX
00:00000040 X POSCRUZX
00:00000060   POSAGUAX
00:00000080   POSARMADX
00:000000A0   POSPLANTAX
00:000000C0   POSVIDAEXTX
00:000000E0   POSBALLESTAX
00:00000070   POSAYUDASY
00:00000078 X POSXPM
00:0000006C X POSYPM
00:00000000   INACTIVA
00:00000001   ACTIVA
00:00000001   HABTERMIN
00:00000088   POSANTOR1
00:00000097   POSANTOR2
00:000000C4   MAPLLAMA1
00:000000C5   MAPLLAMA2
00:000000FF   RESETLLAMA
00:00000088   POSESQUEL1
00:00000095   POSESQUEL2
00:000000A9   POSCALAVE1
00:000000B6   POSCALAVE2
00:00000019   RESETESQUEL
00:00000004   RESETESCENAESQUEL
00:00000013   TILEPROTAM
00:00000009   TILEGRISM
00:00000010   TILEMAPROJO
00:0000000F   TILEMAPAMAR
00:0000000E   TILEMAPVERD
00:00000008   NMAXVIDREL
00:00000007   NHABNIVEL
00:000000F8 X MAXENERGIA
00:000000D9   TILEENERG8
00:000000BA   TILEENERG7
00:0000009B   TILEENERG6
00:0000007C   TILEENERG5
00:0000005D   TILEENERG4
00:0000003E   TILEENERG3
00:0000001F   TILEENERG2
00:00000000   TILENEGRO
00:00000000 X LIMPANTIZQ
00:000000FF   LIMPANTDER
00:00000000 X LIMPANTARR
00:00000080   LIMPANTABA
00:00000006 X BASEMAPY
00:00000003 X BASEMAPX
00:0000FD9A X H.KEYI
00:0000FD9F   H.TIMI
00:0000F000   PT3_SETUP
00:0000F001   PT3_MODADDR
00:0000F003   PT3_CrPsPtr
00:0000F005   PT3_SAMPTRS
00:0000F007   PT3_OrnPtrs
00:0000F009   PT3_PDSP
00:0000F00B   PT3_CSP
00:0000F00D   PT3_PSP
00:0000F00F   PT3_PrNote
00:0000F010   PT3_PrSlide
00:0000F012   PT3_AdInPtA
00:0000F014   PT3_AdInPtB
00:0000F016   PT3_AdInPtC
00:0000F018   PT3_LPosPtr
00:0000F01A   PT3_PatsPtr
00:0000F01C   PT3_Delay
00:0000F01D   PT3_AddToEn
00:0000F01E   PT3_Env_Del
00:0000F01F   PT3_ESldAdd
00:0000F021   PT3_NTL3
00:0000F023   VARS
00:0000F023   ChanA
00:0000F040   ChanB
00:0000F05D   ChanC
00:0000F07A   DelyCnt
00:0000F07B   CurESld
00:0000F07D   CurEDel
00:0000F07E   Ns_Base_AddToNs
00:0000F07E   Ns_Base
00:0000F07F   AddToNs
00:0000F080   NT_
00:0000F140   AYREGS
00:0000F140   VT_
00:0000F14E   EnvBase
00:0000F150   VAR0END
00:0000F150   T1_
00:0000F150   T_NEW_1
00:0000F150   T_OLD_1
00:0000F168   T_OLD_2
00:0000F180   T_NEW_3
00:0000F180   T_OLD_3
00:0000F182   T_OLD_0
00:0000F182   T_NEW_0
00:0000F19A   T_NEW_2
00:0000F240   ayFX_MODE
00:0000F241   ayFX_BANK
00:0000F243   ayFX_PRIORITY
00:0000F244   ayFX_POINTER
00:0000F246   ayFX_TONE
00:0000F248   ayFX_NOISE
00:0000F249   ayFX_VOLUME
00:0000F24A   ayFX_CHANNEL
00:00008000   START
00:00008038   loop_principal
00:00008048 X fin_programa_principal
00:00008048 X check_colisiones_objetos
00:0000805A   check_colisiones_objetos.habitacion_no_terminada
00:0000805B   fin_check_colisiones_objetos
00:0000805C   check_colisiones_puertas
00:0000805C X check_colisiones_puertas.examina_puerta_arriba
00:0000807A   check_colisiones_puertas.examina_puerta_derecha
00:0000808E   check_colisiones_puertas.examina_puerta_abajo
00:000080A2   check_colisiones_puertas.examina_puerta_izquierda
00:000080B3   fin_check_colisiones_puertas
00:000080B4   check_colision_puerta
00:000080B4 X check_colision_puerta.deteccioncolision_paso1
00:000080C5   check_colision_puerta.deteccioncolision_paso2
00:000080CD   check_colision_puerta.deteccioncolision_paso3
00:000080DA   check_colision_puerta.deteccioncolision_paso4
00:000080E2   check_colision_puerta.deteccioncolision_paso5
00:000080E4 X fin_check_colision_puerta
00:000080E5   test_OK
00:000080F8 X fin_test_OK
00:000080F9   inicializa_variables_pruebas
00:0000811E X fin_inicializa_variables_pruebas
00:0000811F X inicializa_niveles
00:00008127   inicializa_niveles.inicia_nivel_0
00:00008134   inicializa_niveles.inicia_nivel_1
00:00008141   inicializa_niveles.inicia_nivel_2
00:0000814E   inicializa_niveles.inicia_nivel_3
00:0000815B   inicializa_niveles.inicia_nivel_4
00:00008168   inicializa_niveles.inicia_nivel_5
00:00008175   inicializa_niveles.inicia_nivel_6
00:00008180 X fin_iniciliza_niveles
00:00008181   actualiza_marcador_vidas
00:00008186   loop_marcador_caras_negro
00:0000818B X fin_loop_marcador_caras_negro
00:00008194   loop_marcador_caras
00:00008199 X fin_loop_marcador_caras
00:00008199 X fin_actualiza_marcador_vidas
00:0000819A   actualiza_buffer_reliquias
00:000081A0   loop_buffer_reliquias_negro
00:000081AD   loop_buffer_reliquias
00:000081B2 X fin_actualiza_buffer_reliquias
00:000081B3   localiza_info_habitacion
00:000081B6 X localiza_info_habitacion.situo_columna
00:000081BF X localiza_info_habitacion.situo_fila
00:000081C8   localiza_info_habitacion.loop_suma_fila
00:000081D0   localiza_info_habitacion.situo_nivel
00:000081DF   localiza_info_habitacion.loop_suma_nivel
00:000081E4   localiza_info_habitacion.actualiza_variable_habitacion
00:00008207 X fin_localiza_info_habitacion
00:00008208   terminada_habitacion_recorrida
00:00008222 X fin_terminada_habitacion_recorrida
00:00008222   cambio_habitacion
00:00008236 X fin_cambio_habitacion
00:00008237   suma_A_BC
00:0000823C X fin_suma_A_BC
00:0000823D   suma_A_HL
00:00008242 X fin_suma_A_HL
00:00008243   color_pantalla
00:00008254 X fin_color_pantalla
00:00008254   sub_preparapantalla
00:00008254 X elimina_clic
00:00008258 X fin_elimina_clic
00:00008258 X limpia_pantalla
00:0000825C X fin_limpia_pantalla
00:00008262 X screen2
00:00008267 X sprites_16_16
00:00008275 X fin_sub_preparapantalla
00:00008275   pinta_pantalla_completa
00:0000827B X fin_pinta_pantalla_completa
00:0000827C   pinta_parte_superior_pantalla
00:000082AD   pinta_parte_superior_pantalla.carga_nivel_0
00:000082C8   pinta_parte_superior_pantalla.carga_nivel_1
00:000082E3   pinta_parte_superior_pantalla.carga_nivel_2
00:000082FE   pinta_parte_superior_pantalla.carga_nivel_3
00:00008319   pinta_parte_superior_pantalla.carga_nivel_4
00:00008334   pinta_parte_superior_pantalla.carga_nivel_5
00:0000834F   pinta_parte_superior_pantalla.carga_nivel_6
00:00008367   pinta_parte_superior_pantalla.fin_carga_niveles
00:00008394 X fin_pinta_parte_superior_pantalla
00:00008394   tiles_patrones
00:00008396   tiles_colores
00:00008398   tiles_mapa
00:0000839A   pinta_parte_inferior_pantalla
00:000083B5 X fin_pinta_parte_inferior_pantalla
00:000083B5   pinta_vidas
00:000083C4 X fin_pinta_vidas
00:000083C4   pinta_reliquias
00:000083D3 X fin_pinta_reliquias
00:000083D3   pinta_nivel
00:000083DF X fin_pinta_nivel
00:000083DF   pinta_tile_suelto
00:000083EC X fin_pinta_tile_suelto
00:000083ED   mira_pinta_energia
00:000083F3 X pinta_ener
00:000083F3 X pinta_ener_tile_8
00:000083FF   pinta_ener_tile_8_negro
00:00008400   pinta_ener_tile_7
00:0000840A   pinta_ener_tile_7_negro
00:0000840B   pinta_ener_tile_6
00:00008415   pinta_ener_tile_6_negro
00:00008416   pinta_ener_tile_5
00:00008420   pinta_ener_tile_5_negro
00:00008421   pinta_ener_tile_4
00:0000842B   pinta_ener_tile_4_negro
00:0000842C   pinta_ener_tile_3
00:00008436   pinta_ener_tile_3_negro
00:00008437   pinta_ener_tile_2
00:00008441   pinta_ener_tile_2_negro
00:00008442   fin_mira_pinta_energia
00:00008444   pinta_energia
00:00008453 X fin_pinta_energia
00:00008453   borra_mapa
00:000084A9 X fin_borra_mapa
00:000084AA   posiciona_en_mapa
00:000084AD X posiciona_en_mapa.sumar_fila
00:000084D7 X posiciona_en_mapa.fila_0
00:000084DE   posiciona_en_mapa.fila_1
00:000084E5   posiciona_en_mapa.fila_2
00:000084EC   posiciona_en_mapa.fila_3
00:000084F3   posiciona_en_mapa.fila_4
00:000084FA   posiciona_en_mapa.fila_5
00:00008501 X posiciona_en_mapa.fila_6
00:00008501   posiciona_en_mapa.sumar_columna
00:00008517   pinta_pos_mapa_vacio
00:00008519   fin_pinta_pos_mapa
00:0000851C X fin_posiciona_en_mapa
00:0000851C   efecto_imagen_tira_reliquia
00:0000851F   efecto_imagen_tira_reliquia.parpadea_fondo
00:00008536 X fin_efecto_imagen_tira_reliquia
00:00008536   pinta_array
00:00008551   pinta_array.pa_pinta_fila
00:00008552   pinta_array.pa_pinta_columnas
00:00008575 X fin_pinta_array
00:00008576   wordaux1
00:00008578   wordaux2
00:0000857A   byteaux1
00:0000857B   byteaux2
00:0000857C   inicializa_antorchas
00:0000859D X fin_inicializa_antorchas
00:0000859E   inicializa_esqueletos
00:000085BF X fin_inicializa_esqueletos
00:000085C0   pinta_extra_fondo
00:000085C4 X pinta_extra_fondo.examina_sihay_antorchas
00:000085D3   pinta_extra_fondo.hayantorchas
00:000085FC   pinta_extra_fondo.examina_sihay_esqueletos
00:0000860D   pinta_extra_fondo.hayesqueletos
00:00008636 X fin_pinta_extra_fondo
00:00008637   actualiza_elementos_fondo
00:00008637 X actualiza_elementos_fondo.examina_antorchas
00:00008645   actualiza_elementos_fondo.examina_esqueletos
00:00008651 X fin_actualiza_elementos_fondo
00:00008651   flip_llamas_antorchas
00:0000866A X flip_llamas_antorchas.llama_impar
00:0000868B   flip_llamas_antorchas.llama_par
00:000086AA   fin_flip_llamas_antorchas
00:000086AE   flip_calavera_esqueletos
00:000086DB X fin_flip_calavera_esqueletos
00:000086DB   var_aux_calavera
00:000086DC   actualiza_escena_calavera
00:000086E8   actualiza_escena_calavera.decrementa_escenas
00:000086E9 X actualiza_escena_calavera.fin_consulta_escena
00:000086F7 X fin_actualiza_escena_calavera
00:000086F8   array_puerta_arriba
00:0000870C   array_puerta_derecha
00:00008721   array_puerta_abajo
00:00008725   array_puerta_izquierda
00:0000873A   array_escalera
00:0000876A X lista_puertas
00:0000876A   puerta_arriba
00:00008777   puerta_derecha
00:00008784   puerta_abajo
00:00008791   puerta_izquierda
00:0000879E X datos_puertas
00:0000879E   datos_escalera
00:000087AB   datos_puerta_arriba
00:000087B8   datos_puerta_derecha
00:000087C5   datos_puerta_abajo
00:000087D2   datos_puerta_izquierda
00:000087DF   inicializa_puertas
00:000087F0   inicializa_puertas.pinta_escalera
00:000087F3   inicializa_puertas.cotinuamos_pintando_escalera_arriba
00:00008817 X fin_inicializa_puertas
00:00008818   carga_datos_puerta
00:0000881D X fin_carga_datos_puerta
00:0000881E   accion_puerta_arriba
00:00008825 X fin_accion_puerta_arriba
00:00008826 X accion_puerta_derecha
00:0000882D X fin_accion_puerta_derecha
00:0000882E X accion_puerta_abajo
00:00008834 X accion_puerta_abajo.decrementa_nivel
00:00008838   accion_puerta_abajo.decrementa_solo_habitacion
00:0000883F X fin_accion_puerta_abajo
00:00008840 X accion_puerta_izquierda
00:00008847 X fin_accion_puerta_izquierda
00:00008848   pinta_puertas
00:0000886E X fin_pinta_puertas
00:0000886F   pinta_puerta_aba
00:00008879 X fin_pinta_puerta_aba
00:00008879   pinta_puerta_arr
00:00008883 X fin_pinta_puerta_arr
00:00008883   pinta_puerta_der
00:0000888D X fin_pinta_puerta_der
00:0000888D   pinta_puerta_izq
00:00008897 X fin_pinta_puerta_izq
00:00008897   actualiza_variables_pinta_array
00:000088B5 X fin_actualiza_variables_pinta_array
00:000088B6   activa_desactiva_puertas
00:000088B6 X activa_desactiva_puertas.mira_puerta_arriba
00:000088C5   activa_desactiva_puertas.mira_puerta_derecha
00:000088D4   activa_desactiva_puertas.mira_puerta_abajo
00:000088E3   activa_desactiva_puertas.mira_puerta_izquierda
00:000088F2   fin_activa_desactiva_puertas
00:000088F3   carga_patrones_sprites_nivel
00:000088F7 X fin_carga_patrones_sprites_nivel
00:000088F7   carga_patrones_nivel_comunes
00:00008903 X fin_carga_patrones_nivel_comunes
00:00008903 X carga_patrones_sprites_nivel1
00:00008903 X fin_carga_patrones_sprites
00:00008904   render_sprites
00:00008910 X fin_actualiza_array_sprites_vram
00:00008910   vuelca_resultado_puntomira_array
00:00008935 X vuelca_resultado_puntomira_array.codigo_color_1
00:0000893E   vuelca_resultado_puntomira_array.codigo_color_2
00:00008947 X fin_vuelca_resultado_puntomira_array
00:00008947   check_player
00:00008966 X f
00:00008967   mueve_arriba
00:00008972   mueve_arriba.no_decrementa_y
00:00008973 X fin_mueve_arriba
00:00008974   mueve_derecha
00:00008981   mueve_derecha.no_incrementa_x
00:00008982 X fin_mueve_derecha
00:00008983   mueve_abajo
00:00008990   mueve_abajo.no_incrementa_y
00:00008991 X fin_mueve_abajo
00:00008992   mueve_izquierda
00:0000899D   mueve_izquierda.no_decrementa_x
00:0000899E X fin_mueve_izquierda
00:0000899F   mira_disparo
00:0000899F X mira_disparo.mira_boton_pulsado1
00:000089AC X mira_disparo.no_efectua_disparo
00:000089B7   mira_disparo.efectua_disparo
00:000089C9   mira_disparo.fin_mira_disparo1
00:000089CA   mira_disparo.mira_boton_pulsado2
00:000089E6 X fin_mira_disparo
00:000089E6   update_controllers_status
00:00008A1D   read_joy_0
00:00008A31   check_8th_keyboard_row
00:00008A3F   check_4th_keyboard_row
00:00008A4D X inicializa_replayer_efectos_interrupciones
00:00008A66 X fin_inicializa_replayer_efectos_interrupciones
00:00008A67   subrutina_isr
00:00008A70 X fin_subrutina_isr
00:00008A70 X subrutinas_sonido
00:00000000   CHNPRM_PsInOr
00:00000001   CHNPRM_PsInSm
00:00000002   CHNPRM_CrAmSl
00:00000003   CHNPRM_CrNsSl
00:00000004   CHNPRM_CrEnSl
00:00000005   CHNPRM_TSlCnt
00:00000006   CHNPRM_CrTnSl
00:00000008   CHNPRM_TnAcc
00:0000000A   CHNPRM_COnOff
00:0000000B   CHNPRM_OnOffD
00:0000000C   CHNPRM_OffOnD
00:0000000D   CHNPRM_OrnPtr
00:0000000F   CHNPRM_SamPtr
00:00000011   CHNPRM_NNtSkp
00:00000012   CHNPRM_Note
00:00000013   CHNPRM_SlToNt
00:00000014   CHNPRM_Env_En
00:00000015   CHNPRM_Flags
00:00000016   CHNPRM_TnSlDl
00:00000017   CHNPRM_TSlStp
00:00000019   CHNPRM_TnDelt
00:0000001B   CHNPRM_NtSkCn
00:0000001C   CHNPRM_Volume
00:0000001D X CHNPRM_Size
00:00000000   AR_TonA
00:00000002   AR_TonB
00:00000004   AR_TonC
00:00000006   AR_Noise
00:00000007   AR_Mixer
00:00000008   AR_AmplA
00:00000009   AR_AmplB
00:0000000A   AR_AmplC
00:0000000B   AR_Env
00:0000000D   AR_EnvTp
00:00008A70   CHECKLP
00:00008A81 X PT3_MUTE
00:00008A8D   PT3_INIT
00:00008ACC   PT3_INIT.TP_0
00:00008AD8   PT3_INIT.TP_1
00:00008ADF   PT3_INIT.TP_2
00:00008B4D   PT3_INIT.L1
00:00008B5A   PT3_INIT.L2
00:00008B5E X PT3_INIT.L3
00:00008B85   PT3_INIT.CORR_1
00:00008B93   PT3_INIT.CORR_2
00:00008B9A   PT3_INIT.TC_EXIT
00:00008BA5   PT3_INIT.INITV1
00:00008BAD   PT3_INIT.INITV2
00:00008BC1   PT3_INIT.INITV3
00:00008BC5   PD_OrSm
00:00008BCF   PD_SAM
00:00008BD0   PD_SAM_
00:00008BE6   PD_VOL
00:00008BEF   PD_EOff
00:00008BF7   PD_SorE
00:00008C01   PD_ENV
00:00008C06   PD_ORN
00:00008C0B   PD_ESAM
00:00008C18   PTDECOD
00:00008C27   PD_LOOP
00:00008C2A   PD_LP2
00:00008C57   PD_NOIS
00:00008C5C   PD_REL
00:00008C62   PD_NOTE
00:00008C6A   PD_RES
00:00008C7C   PD_FIN
00:00008C83   C_PORTM
00:00008CCE   C_PORTM.NOSIG
00:00008CD8   SET_STP
00:00008CE4   C_GLISS
00:00008CF7   C_SMPOS
00:00008CFD   C_ORPOS
00:00008D03   C_VIBRT
00:00008D1B   C_ENGLS
00:00008D2D   C_DELAY
00:00008D33   SETENV
00:00008D4E   C_NOP
00:00008D4F   SETORN
00:00008D68   SPCCOMS
00:00008D88   CHREGS
00:00008DAB   CHREGS.CH_ORPS
00:00008DB6   CHREGS.CH_NTP
00:00008DBC   CHREGS.CH_NOK
00:00008DD7   CHREGS.CH_SMPS
00:00008DED   CHREGS.CH_NOAC
00:00008E34   CHREGS.CH_STPP
00:00008E49   CHREGS.CH_AMP
00:00008E5B   CHREGS.CH_AMIN
00:00008E60   CHREGS.CH_SVAM
00:00008E63   CHREGS.CH_NOAM
00:00008E6C   CHREGS.CH_APOS
00:00008E72   CHREGS.CH_VOL
00:00008E7D X CHREGS.CH_ENV
00:00008E84   CHREGS.CH_NOEN
00:00008E9E   CHREGS.NO_ENAC
00:00008EA5   CHREGS.NO_ENSL
00:00008EB3   CHREGS.CH_MIX
00:00008EB7   CHREGS.CH_EXIT
00:00008ED6   CHREGS.CH_ONDL
00:00008EDA   PT3_PLAY
00:00008F0E   PT3_PLAY.PLNLP
00:00008F35   PT3_PLAY.PL1A
00:00008F40   PT3_PLAY.PL1B
00:00008F55   PT3_PLAY.PL1C
00:00008F6A   PT3_PLAY.PL1D
00:00008F70   PT3_PLAY.PL2
00:00008FD2   PT3_ROUT
00:00008FD3   ROUT_A0
00:00008FDF   ROUT_A0.LOUT
00:00008FF3   NT_DATA
00:00009003   T_
00:00009003   TCOLD_0
00:0000900F   TCNEW_1
00:0000900F   TCOLD_1
00:00009011   TCOLD_2
00:00009023   TCNEW_3
00:00009024   TCOLD_3
00:0000902D   TCNEW_0
00:00009038   TCNEW_2
00:00009043   EMPTYSAMORN
00:00009047   T_PACK
00:00000000 X AYFXRELATIVE
00:0000907C   ayFX_SETUP
00:00009088   ayFX_END
00:0000908E   ayFX_INIT
00:0000909F   ayFX_INIT.CHECK_PRI
00:000090C0   ayFX_INIT.INIT_END
00:000090C4   ayFX_PLAY
00:000090D8   ayFX_PLAY.TAKECB
00:000090E9   ayFX_PLAY.CHECK_NN
00:000090F6   ayFX_PLAY.SETPOINTER
00:0000910A   ayFX_PLAY.SETMASKS
00:00009118 X ayFX_PLAY.CHK1
00:0000911A X ayFX_PLAY.PLAY_C
00:00009127   ayFX_PLAY.CHK2
00:0000912C X ayFX_PLAY.PLAY_B
00:00009139   ayFX_PLAY.CHK3
00:0000913C X ayFX_PLAY.PLAY_A
00:00009149   ayFX_PLAY.SETMIXER
00:00009159   song
00:00009AC1   sfx_bank
00:00009B0C   inicializa_ayudas
00:00009B73 X fin_resetea_ayudas
00:00009B74   carga_datos_ayuda
00:00009B79 X fin_carga_datos_ayuda
00:00009B7A   pinta_obj_ayuda
00:00009B7E X pinta_obj_ayuda.dibujoon
00:00009B8A   pinta_obj_ayuda.dibujooff
00:00009B93   pinta_obj_ayuda.param_wordaux2
00:00009B9F X pinta_obj_ayuda.filasycols
00:00009BAA X fin_pinta_obj_ayuda
00:00009BAA   pinta_ayudas_habitacion
00:00009BAA X pinta_ayudas_habitacion.examina_oracion
00:00009BBB   pinta_ayudas_habitacion.examina_cruz
00:00009BCC   pinta_ayudas_habitacion.examina_aguabendita
00:00009BDD   pinta_ayudas_habitacion.examina_armadura
00:00009BEE   pinta_ayudas_habitacion.examina_planta
00:00009BFF   pinta_ayudas_habitacion.examina_vidaextra
00:00009C10   pinta_ayudas_habitacion.examina_ballesta
00:00009C1F X fin_pinta_ayudas_habitacion
00:00009C20   accion_oracion
00:00009C20 X fin_accion_oracion
00:00009C21   accion_cruz
00:00009C21 X fin_accion_cruz
00:00009C22   accion_agua
00:00009C22 X fin_accion_agua
00:00009C23   accion_armadura
00:00009C23 X fin_accion_armadura
00:00009C24   accion_planta
00:00009C24 X fin_accion_planta
00:00009C25   accion_vidaextra
00:00009C25 X fin_accion_vidaextra
00:00009C26 X accion_ballesta
00:00009C26 X fin_accion_ballesta
00:00009C27   depack_VRAM
00:00009C54   literal
00:00009C59   loop
00:00009C62 X getlen
00:00009C68   lus
00:00009C85   lenok
00:00009C92   mode7
00:00009C98   mode6
00:00009C9E   mode5
00:00009CA4   mode4
00:00009CAA   mode3
00:00009CB0   mode2
00:00009CC0   offsok
00:00009CCB   offsok.loop
00:00009CED   getbit
00:00009CF1   getbitexx
00:00009CF7   Depack_out
00:00009CF9   modes
00:00000000   ESTRUCTURA_PUNTOMIRA.posx
00:00000001 X ESTRUCTURA_PUNTOMIRA.posy
00:00000002 X ESTRUCTURA_PUNTOMIRA.escena
00:00000003 X ESTRUCTURA_PUNTOMIRA.velocidad
00:00000004 X ESTRUCTURA_PUNTOMIRA.boton2_pressed
00:00000005 X ESTRUCTURA_PUNTOMIRA.cadencia
00:00000006 X ESTRUCTURA_PUNTOMIRA.pm_aux1
00:00000007 X ESTRUCTURA_PUNTOMIRA.pm_aux2
00:00000008 X ESTRUCTURA_PUNTOMIRA.pm_aux3
00:00000009 X ESTRUCTURA_PUNTOMIRA.pm_aux4
00:0000000A X ESTRUCTURA_PUNTOMIRA.pm_aux5
00:0000000B X ESTRUCTURA_PUNTOMIRA.pm_aux6
00:0000000C X ESTRUCTURA_PUNTOMIRA.pm_aux7
00:0000000D X ESTRUCTURA_PUNTOMIRA.pm_aux8
00:0000000E X ESTRUCTURA_PUNTOMIRA.pm_aux9
00:0000000F X ESTRUCTURA_PUNTOMIRA.pm_aux10
00:00000010 X ESTRUCTURA_PUNTOMIRA
00:00000000 X ESTRUCTURA_ENEMIGO.tipo
00:00000001 X ESTRUCTURA_ENEMIGO.posx
00:00000002 X ESTRUCTURA_ENEMIGO.posy
00:00000003 X ESTRUCTURA_ENEMIGO.color
00:00000004 X ESTRUCTURA_ENEMIGO.escena
00:00000005 X ESTRUCTURA_ENEMIGO.contador_siguiente_escena
00:00000006 X ESTRUCTURA_ENEMIGO.reset_contador
00:00000007 X ESTRUCTURA_ENEMIGO.dano
00:00000008 X ESTRUCTURA_ENEMIGO.energia
00:00000009 X ESTRUCTURA_ENEMIGO.ver_hor
00:0000000A X ESTRUCTURA_ENEMIGO.manejador_dibujo
00:0000000C X ESTRUCTURA_ENEMIGO.en_aux3
00:0000000D X ESTRUCTURA_ENEMIGO.en_aux4
00:0000000E   ESTRUCTURA_ENEMIGO
00:00000000 X ESTRUCTURA_AYUDA.activo
00:00000001 X ESTRUCTURA_AYUDA.postilemem_nousado
00:00000003 X ESTRUCTURA_AYUDA.postilemem_usado
00:00000005 X ESTRUCTURA_AYUDA.pospantalla
00:00000006 X ESTRUCTURA_AYUDA.posx
00:00000007 X ESTRUCTURA_AYUDA.posy
00:00000008 X ESTRUCTURA_AYUDA.puntero_accion
00:0000000A X ESTRUCTURA_AYUDA.ayu_aux1
00:0000000B X ESTRUCTURA_AYUDA.ayu_aux2
00:0000000C X ESTRUCTURA_AYUDA.ayu_aux3
00:0000000D X ESTRUCTURA_AYUDA.ayu_aux4
00:0000000E X ESTRUCTURA_AYUDA.ayu_aux5
00:0000000F X ESTRUCTURA_AYUDA.ayu_aux6
00:00000010   ESTRUCTURA_AYUDA
00:00000000 X ESTRUCTURA_ANTORCHA.activo
00:00000001 X ESTRUCTURA_ANTORCHA.postilemem_antor1
00:00000003 X ESTRUCTURA_ANTORCHA.pospantalla_antor1
00:00000004 X ESTRUCTURA_ANTORCHA.pospantalla_antor2
00:00000005 X ESTRUCTURA_ANTORCHA.escena
00:00000006 X ESTRUCTURA_ANTORCHA.cont_sig_escena
00:00000007   ESTRUCTURA_ANTORCHA
00:00000000 X ESTRUCTURA_ESQUELETO.activo
00:00000001 X ESTRUCTURA_ESQUELETO.postilemem_antor1
00:00000003 X ESTRUCTURA_ESQUELETO.pospantalla_esquel1
00:00000004 X ESTRUCTURA_ESQUELETO.pospantalla_esquel2
00:00000005   ESTRUCTURA_ESQUELETO.escena
00:00000006   ESTRUCTURA_ESQUELETO.cont_sig_escena
00:00000007   ESTRUCTURA_ESQUELETO
00:00000000   ESTRUCTURA_PUERTA.activa
00:00000001   ESTRUCTURA_PUERTA.posx
00:00000002   ESTRUCTURA_PUERTA.posy
00:00000003   ESTRUCTURA_PUERTA.radiox
00:00000004   ESTRUCTURA_PUERTA.radioy
00:00000005   ESTRUCTURA_PUERTA.accion
00:00000007   ESTRUCTURA_PUERTA.tiles_puerta
00:00000009   ESTRUCTURA_PUERTA.pos_en_tilemap
00:0000000B   ESTRUCTURA_PUERTA.alto
00:0000000C   ESTRUCTURA_PUERTA.ancho
00:0000000D   ESTRUCTURA_PUERTA
00:00009D07 X sprites_pantantalla
00:00009D07   sprites_comunes
00:00009D07 X sprite_punto_mira_1
00:00009D27 X sprite_punto_mira_2
00:00009D47 X sprite_punto_mira_1_mejorado
00:00009D67 X sprite_punto_mira_2_mejorado
00:00009D87 X sprite_explosion_1
00:00009DA7 X sprite_explosion_2
00:00009DC7   fin_sprites_comunes
00:00009DC7 X sprite_arana1_1
00:00009DE7 X sprite_arana1_2
00:00009E07 X sprite_murcielago1_1
00:00009E27 X sprite_murcielago1_2
00:00009E47 X sprite_serpiente1_1
00:00009E67 X sprite_serpiente1_2
00:00009E87 X sprite_serpiente2_1
00:00009EA7 X sprite_serpiente2_2
00:00009EC7 X sprite_zombi1_1_1
00:00009EE7 X sprite_zombi1_2_1
00:00009F07 X sprite_zombi1_3_1
00:00009F27 X sprite_zombi1_4_1
00:00009F47 X sprite_zombi1_1_2
00:00009F67 X sprite_zombi1_2_2
00:00009F87 X sprite_zombi1_3_2
00:00009FA7 X sprite_zombi1_4_2
00:00009FC7 X sprite_zombi2_1_1
00:00009FE7 X sprite_zombi2_2_1
00:0000A007 X sprite_zombi2_3_1
00:0000A027 X sprite_zombi2_4_1
00:0000A047 X sprite_zombi2_1_2
00:0000A067 X sprite_zombi2_2_2
00:0000A087 X sprite_zombi2_3_2
00:0000A0A7 X sprite_zombi2_4_2
00:0000A0C7 X sprite_caballero1_1_1
00:0000A0E7 X sprite_caballero1_2_1
00:0000A107 X sprite_caballero1_3_1
00:0000A127 X sprite_caballero1_4_1
00:0000A147 X sprite_caballero1_1_2
00:0000A167 X sprite_caballero1_2_2
00:0000A187 X sprite_caballero1_3_2
00:0000A1A7 X sprite_caballero1_4_2
00:0000A1C7 X sprite_caballero2_1_1
00:0000A1E7 X sprite_caballero2_2_1
00:0000A207 X sprite_caballero2_3_1
00:0000A227 X sprite_caballero2_4_1
00:0000A247 X sprite_caballero2_1_2
00:0000A267 X sprite_caballero2_2_2
00:0000A287 X sprite_caballero2_3_2
00:0000A2A7 X sprite_caballero2_4_2
00:0000A2C7 X sprite_llama1_1
00:0000A2E7 X sprite_llama2_1
00:0000A307 X sprite_llama1_2
00:0000A327 X sprite_llama2_2
00:0000A347 X sprite_fantasma1_1
00:0000A367 X sprite_fantasma2_1
00:0000A387 X sprite_fantasma1_2
00:0000A3A7 X sprite_fantasma2_2
00:0000A3C7 X sprite_magia1_1
00:0000A3E7 X sprite_magia2_1
00:0000A407 X sprite_magia1_2
00:0000A427 X sprite_magia2_2
00:0000A447 X sprite_beholder1_1
00:0000A467 X sprite_beholder2_1
00:0000A487 X sprite_beholder3_1
00:0000A4A7 X sprite_beholder4_1
00:0000A4C7 X sprite_beholder1_2
00:0000A4E7 X sprite_beholder2_2
00:0000A507 X sprite_beholder3_2
00:0000A527 X sprite_beholder4_2
00:0000A547 X sprite_vampiro1_1
00:0000A567 X sprite_vampiro2_1
00:0000A587 X sprite_vampiro1_2
00:0000A5A7 X sprite_vampiro2_2
00:0000A5C7 X sprite_manoizq1
00:0000A5E7 X sprite_manoizq2
00:0000A607 X sprite_manoizq3
00:0000A627 X sprite_manoder1
00:0000A647 X sprite_manoder2
00:0000A667 X sprite_manoder3
00:0000A687   habitacion_actual
00:0000A688   habitacion_extras
00:0000A689   habitacion_actual_puntero
00:0000A68B   is_habitacion_terminada
00:0000A68C   habitaciones_juego
00:0000A68C   habitaciones_nivel0
00:0000A6FC   habitaciones_nivel1
00:0000A76C   habitaciones_nivel2
00:0000A7DC   habitaciones_nivel3
00:0000A84C   habitaciones_nivel4
00:0000A8BC   habitaciones_nivel5
00:0000A92C   habitaciones_nivel6
00:0000A99C   color_base
00:0000A99F   color_bomba1
00:0000A9A2   color_bomba2
00:0000A9A5   prota
00:0000A9A5   prota.posx
00:0000A9A6   prota.posy
00:0000A9A7   prota.escena
00:0000A9A8 X prota.velocidad
00:0000A9A9 X prota.boton2_pressed
00:0000A9AA   prota.cadencia
00:0000A9AB X prota.pm_aux1
00:0000A9AC X prota.pm_aux2
00:0000A9AD X prota.pm_aux3
00:0000A9AE X prota.pm_aux4
00:0000A9AF X prota.pm_aux5
00:0000A9B0 X prota.pm_aux6
00:0000A9B1 X prota.pm_aux7
00:0000A9B2 X prota.pm_aux8
00:0000A9B3 X prota.pm_aux9
00:0000A9B4 X prota.pm_aux10
00:0000A9B5   prota_nivel
00:0000A9B6   prota_vidas
00:0000A9B7   prota_reliquias
00:0000A9B8   prota_pos_mapx
00:0000A9B9   prota_pos_mapy
00:0000A9BA   prota_energia
00:0000A9BB   array_aux_vidas
00:0000A9C3   array_aux_reliquias
00:0000A9CB   array_aux_energia
00:0000A9D2   ultimo_pos_array_aux_energia
00:0000A9D3   array_aux_mapa_limpiar
00:0000A9DA   elemento_pintar_mapa
00:0000A9DB X lista_ayudas
00:0000A9DB   ayuda_oracion
00:0000A9EB   ayuda_cruz
00:0000A9FB   ayuda_aguabendita
00:0000AA0B   ayuda_armadura
00:0000AA1B   ayuda_planta
00:0000AA2B   ayuda_vidaextra
00:0000AA3B   ayuda_ballesta
00:0000AA4B X datos_oracion
00:0000AA55   datos_cruz
00:0000AA5F   datos_aguabendita
00:0000AA70   datos_armadura
00:0000AA81   datos_planta
00:0000AA92   datos_vidaextra
00:0000AAA3   datos_ballesta
00:0000AAB4 X array_ayudas
00:0000AAB4   array_oracionon
00:0000AAB6 X array_oracionon1
00:0000AAB8   array_oracionoff
00:0000AABA X array_oracionoff1
00:0000AABC   array_cruzon
00:0000AABE X array_cruzon1
00:0000AAC0   array_cruzoff
00:0000AAC2 X array_cruzoff1
00:0000AAC4   array_aguaon
00:0000AAC6 X array_aguaon1
00:0000AAC8   array_aguaoff
00:0000AACA X array_aguaoff1
00:0000AACC   array_armaduraon
00:0000AACE X array_armaduraon1
00:0000AAD0   array_armaduraoff
00:0000AAD2 X array_armaduraoff1
00:0000AAD4   array_plantaon
00:0000AAD6 X array_plantaon1
00:0000AAD8   array_plantaoff
00:0000AADA X array_plantaoff1
00:0000AADC   array_extraon
00:0000AADE X array_extraon1
00:0000AAE0   array_extraoff
00:0000AAE2 X array_extraoff1
00:0000AAE4   array_ballestaon
00:0000AAE6 X array_ballestaon1
00:0000AAE8   array_ballestaoff
00:0000AAEA X array_ballestaoff1
00:0000AAEC   antorchas
00:0000AAF3   array_antorcha
00:0000AAF6   esqueletos
00:0000AAFD   array_esqueleto
00:0000AB09   lista_escenas_calavera
00:0000AB0D   array_sprites
00:0000AB0D   array_sprites_pm
00:0000AB15 X array_sprites_enem
00:0000AB8D X lista_enemigos
00:0000AC19 X puntero_array_atrib_array_VRAM
00:0000AC1B   tiles_patrones_nivel0
00:0000AE45   tiles_color_nivel0
00:0000AEB0   tiles_mapa_nivel0
00:0000AEE5   tiles_patrones_nivel1
00:0000B09A   tiles_color_nivel1
00:0000B0E1   tiles_mapa_nivel1
00:0000B116   tiles_patrones_nivel2
00:0000B2CB   tiles_color_nivel2
00:0000B312   tiles_mapa_nivel2
00:0000B347   tiles_patrones_nivel3
00:0000B4FC   tiles_color_nivel3
00:0000B543   tiles_mapa_nivel3
00:0000B578   tiles_patrones_nivel4
00:0000B72D   tiles_color_nivel4
00:0000B774   tiles_mapa_nivel4
00:0000B7A9   tiles_patrones_nivel5
00:0000B95E   tiles_color_nivel5
00:0000B9A5   tiles_mapa_nivel5
00:0000B9DA   tiles_patrones_nivel6
00:0000BB8F   tiles_color_nivel6
00:0000BBD6   tiles_mapa_nivel6
00:0000BC0B   tiles_patrones_marcador
00:0000BD57   tiles_color_marcador
00:0000BD8C   tiles_mapa_marcador
00:0000BDEE   END


 Output: t4.out
-------------------------------------------------

 Page: 00
  Org: 00008000  Size: *  Used: 00000000

    No output

 Output: t4.bin
-------------------------------------------------

 Page: 00
  Org: 00008000  Size: *  Used: 00003DF5

   Address   Length Align   Label
   00008000   15861         START
