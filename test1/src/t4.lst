Sjasm Z80 Assembler v0.42c - www.xl2s.tk             [2021.09.14 - 17:35:35]

t4.asm
Errors: 0

       1   00:0000                      	OUTPUT	"t4.bin"
       2   00:8000                      	
       3   00:8000                      ;;=====================================================
       4   00:8000                      ;;DEFINICIÓN DE CONSTANTES
       5   00:8000                      ;;=====================================================	
       6   00:8000                      	include "constantes.asm"
       1.  00:8000                      ;;=====================================================
       2.  00:8000                      ;; FICHERO constantes.asm
       3.  00:8000                      ;;=====================================================
       4.  00:8000                      
       5.  00:8000                      ;;ETIQUETAS/CONSTANTES BIOS TECLADO
       6.  00:8000  (00:00D8)           GTTRIG		equ		#00D8	;Returns current trigger status
       7.  00:8000  (00:00D5)           GTSTCK		equ		#00D5	;Returns the joystick/cursors status
       8.  00:8000  (00:F3DB)           CLIKSW		equ		#F3DB	;deshabilita el sonido de clic cuando se pulsa una tecla
       9.  00:8000                      
      10.  00:8000                      ;;ETIQUETAS/CONSTANTES BIOS VDP
      11.  00:8000  (00:013E)           RDVDP		equ		#013E	;lee registro status VDP
      12.  00:8000  (00:0047)           WRTVDP		equ		#0047	;escribe registros del VDP
      13.  00:8000  (00:005C)           LDIRVM		equ		#005C	;RAM/ROM -> VRAM
      14.  00:8000  (00:0059)           LDIRMV		equ		#0059	;VRAM -> RAM
      15.  00:8000  (00:005F)           CHGMOD		equ		#005F	;cambia modo pantalla (screen mode)
      16.  00:8000  (00:0041)           DISSCR  	equ		#0041	;desactiva pantanlla
      17.  00:8000  (00:0044)           ENASCR  	equ		#0044	;activa pantalla
      18.  00:8000  (00:0062)           CHGCLR  	equ		#0062	;cambia color de pantalla (toca A y direcciones)
      19.  00:8000  (00:F3E9)           FORCLR		equ		#F3E9	;zona memoria color foreground
      20.  00:8000  (00:F3EA)           BAKCLR  	equ		#F3EA	;zona memoria color background
      21.  00:8000  (00:F3EB)           BDRCLR 		equ		#F3EB	;zona memoria bordercolor
      22.  00:8000  (00:00C3)           CLS			equ		#00C3	;limpia pantalla (necesita A=0)
      23.  00:8000                      
      24.  00:8000                      ;;ETIQUETAS/CONSTANTES REGISTROS VDP
      25.  00:8000  (00:F3DF)           RG0SAV		equ		#F3DF	;Mirror of VDP register 0 (Basic: VDP(0))
      26.  00:8000  (00:F3E0)           RG1SAV		equ		#F3E0	;Mirror of VDP register 1 (Basic: VDP(1))
      27.  00:8000  (00:F3E1)           RG2SAV		equ		#F3E1	;Mirror of VDP register 2 (Basic: VDP(2))
      28.  00:8000  (00:F3E2)           RG3SAV		equ		#F3E2	;Mirror of VDP register 3 (Basic: VDP(3))
      29.  00:8000  (00:F3E3)           RG4SAV		equ		#F3E3	;Mirror of VDP register 4 (Basic: VDP(4))
      30.  00:8000  (00:F3E4)           RG5SAV		equ		#F3E4	;Mirror of VDP register 5 (Basic: VDP(5))
      31.  00:8000  (00:F3E5)           RG6SAV		equ		#F3E5	;Mirror of VDP register 6 (Basic: VDP(6))
      32.  00:8000  (00:F3E6)           RG7SAV		equ		#F3E6	;Mirror of VDP register 7 (Basic: VDP(7))
      33.  00:8000  (00:F3E7)           STATFL		equ		#F3E7	;Mirror of VDP(8) status register (S#0)
      34.  00:8000                      
      35.  00:8000  (00:0099)           REGEST		equ		#0099	;registro de estado para escribir directamente en VRAM
      36.  00:8000  (00:0098)           REGESCVDP	equ		#0098	;registro donde escribir valor para VRAM
      37.  00:8000                      
      38.  00:8000                      ;;ETIQUETAS/CONSTANTES REGISTROS PSG (PARA JOYSTICK)
      39.  00:8000  (00:00A0)           PSG_A  equ  0a0h  ;reg address
      40.  00:8000  (00:00A1)           PSG_W  equ  0a1h  ;reg data WR
      41.  00:8000  (00:00A2)           PSG_R  equ  0a2h  ;reg data
      42.  00:8000                      
      43.  00:8000                      
      44.  00:8000                      ;;ETIQUETAS DE ZONAS DE MEMORIA DE LA VPD (MSX1)
      45.  00:8000  (00:0000)           CHRTBL		equ		#0000
      46.  00:8000  (00:1800)           TILMAP		equ		#1800
      47.  00:8000  (00:1900)           TILMAPBANK1 equ		#1900
      48.  00:8000  (00:1B00)           SPRART		equ		#1B00
      49.  00:8000  (00:2000)           CLRTBL		equ		#2000
      50.  00:8000  (00:3800)           SPRTBL		equ		#3800
      51.  00:8000                      
      52.  00:8000                      
      53.  00:8000                      ;;ETIQUETAS ESTANDAR PARA DAR MÁS CLARIDAD AL CODIGO
      54.  00:8000  (00:0001)           SI			equ		1
      55.  00:8000  (00:0000)           NO			equ		0
      56.  00:8000  (00:0004)           LIMCADENCIA equ		4	;nº de veces que se ejecutará el disparo antes de ejecutar un disparo real (porque cuando se pulsa la tecl dispara 3 ó 4 veces de rápido que va)
      57.  00:8000                      ;hay que estudiar si 3 es un nº mejor
      58.  00:8000                      
      59.  00:8000                      
      60.  00:8000                      
      61.  00:8000                      ;;PALETA DE COLORES DEL MSX
      62.  00:8000  (00:0000)           COLTRASP	equ		0
      63.  00:8000  (00:0001)           COLNEGRO	equ		1
      64.  00:8000  (00:0002)           COLVERDE	equ		2
      65.  00:8000  (00:0003)           COLVERCLA	equ		3
      66.  00:8000  (00:0004)           COLAZULOSC	equ		4
      67.  00:8000  (00:0005)           COLAZULLA	equ		5
      68.  00:8000  (00:0006)           COLROJOOSC	equ		6
      69.  00:8000  (00:0007)           COLCYAN		equ		7
      70.  00:8000  (00:0008)           COLROJO		equ		8
      71.  00:8000  (00:0009)           COLROJOCLA	equ		9
      72.  00:8000  (00:000A)           COLAMAROSC	equ		10
      73.  00:8000  (00:000B)           COLAMARCLA	equ		11
      74.  00:8000  (00:000C)           COLVERDOSC	equ		12
      75.  00:8000  (00:000D)           COLMAGENTA	equ		13
      76.  00:8000  (00:000E)           COLGRIS		equ		14
      77.  00:8000  (00:000F)           COLBLANCO	equ		15
      78.  00:8000                      
      79.  00:8000                      
      80.  00:8000                      
      81.  00:8000                      ;;ETIQUETAS ESPECIFICAS PARA DAR MÁS CLARIDAD AL CODIGO (relacionadas con posiciones en mapa vdp)
      82.  00:8000  (00:02F8)           POSMAPLIN1  equ		#02F8
      83.  00:8000  (00:02D8)           POSMAPLIN2  equ		#02D8
      84.  00:8000  (00:02B8)           POSMAPLIN3  equ		#02B8
      85.  00:8000  (00:0298)           POSMAPLIN4  equ		#0298
      86.  00:8000  (00:0278)           POSMAPLIN5  equ		#0278
      87.  00:8000  (00:0258)           POSMAPLIN6  equ		#0258
      88.  00:8000  (00:0238)           POSMAPLIN7  equ		#0238
      89.  00:8000                      
      90.  00:8000  (00:000D)           POSCARAMAP	equ		#000D
      91.  00:8000  (00:0248)           POSVIDAS	equ		#0248
      92.  00:8000  (00:0011)           POSRELIMAP	equ		#0011
      93.  00:8000  (00:02C8)           POSRELIQ	equ		#02C8
      94.  00:8000  (00:0288)           POSENERG	equ		#0288
      95.  00:8000  (00:02B4)           POSNIVEL	equ		#02B4
      96.  00:8000  (00:0238)           POSMAPA		equ 	#0238
      97.  00:8000                      
      98.  00:8000  (00:01EE)           POSPUERABAJ equ		#01EE
      99.  00:8000  (00:008E)           POSPUERARRI equ		#008E
     100.  00:8000  (00:00FC)           POSPUERDERE equ		#00FC
     101.  00:8000  (00:00E1)           POSPUERIZQU equ		#00E1
     102.  00:8000                      
     103.  00:8000  (00:0000)           ORACIONON	equ		0
     104.  00:8000  (00:0004)           ORACIONOFF  equ		4
     105.  00:8000  (00:0008)           CRUZON		equ		8
     106.  00:8000  (00:000C)           CRUZOFF		equ		12
     107.  00:8000  (00:0010)           AGUAON		equ		16
     108.  00:8000  (00:0014)           AGUAOFF		equ		20
     109.  00:8000  (00:0018)           ARMADON		equ		24
     110.  00:8000  (00:001C)           ARMADOFF	equ		28
     111.  00:8000  (00:0020)           PLANTAON	equ		32
     112.  00:8000  (00:0024)           PLANTAOFF	equ		36
     113.  00:8000  (00:0028)           VIDAEXTON	equ		40
     114.  00:8000  (00:002C)           VIDAEXTOFF	equ		44
     115.  00:8000  (00:0030)           BALLESON	equ		48
     116.  00:8000  (00:0034)           BALLESOFF	equ		52
     117.  00:8000  (00:0000)           INACTIVO	equ		0
     118.  00:8000  (00:0001)           ACTIVO		equ		1
     119.  00:8000                      
     120.  00:8000                      ;;ETIQUETAS ESPECIFICAS PARA DAR MÁS CLARIDAD AL CODIGO (relacionadas con posiciones en en el banco de memoria)
     121.  00:8000  (00:0013)           TILEPROTAM  equ		19		;tile del prota para pintar en mapa
     122.  00:8000  (00:0009)           TILEGRISM	equ		9		;tile gris que representa vacio (por donde el prota va pasando)
     123.  00:8000  (00:0010)           TILEMAPROJO equ		16
     124.  00:8000  (00:000F)           TILEMAPAMAR equ		15
     125.  00:8000  (00:000E)           TILEMAPVERD equ		14
     126.  00:8000                      
     127.  00:8000                      
     128.  00:8000                      ;;ETIQUETAS ESPECIFICAS PARA DAR MÁS CLARIDAD AL CODIGO (generales)
     129.  00:8000  (00:0008)           NMAXVIDREL	equ		8		;el número máximo de vidas y de reliquias es de 8
     130.  00:8000  (00:0007)           NHABNIVEL	equ		7
     131.  00:8000  (00:00F8)           MAXENERGIA  equ		248
     132.  00:8000  (00:00D9)           TILEENERG8  equ		217
     133.  00:8000  (00:00BA)           TILEENERG7  equ		186
     134.  00:8000  (00:009B)           TILEENERG6  equ		155
     135.  00:8000  (00:007C)           TILEENERG5  equ		124
     136.  00:8000  (00:005D)           TILEENERG4  equ		93
     137.  00:8000  (00:003E)           TILEENERG3  equ		62
     138.  00:8000  (00:001F)           TILEENERG2  equ		31
     139.  00:8000  (00:0000)           TILENEGRO	equ		0
     140.  00:8000                      
     141.  00:8000                      ;limites
     142.  00:8000  (00:0000)           LIMPANTIZQ  equ		0
     143.  00:8000  (00:00FF)           LIMPANTDER  equ		255
     144.  00:8000  (00:0000)           LIMPANTARR  equ		0
     145.  00:8000  (00:0080)           LIMPANTABA  equ		128
     146.  00:8000                      
     147.  00:8000                      
     148.  00:8000                      ;matriz de 7x7 empieza en 0, y fila y x col, cuento desde esquina sup izq
     149.  00:8000  (00:0006)           BASEMAPY	equ		6
     150.  00:8000  (00:0003)           BASEMAPX	equ		3
     151.  00:8000                      
     152.  00:8000                      
     153.  00:8000                      
     154.  00:8000                      ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
     155.  00:8000                      ;; CONSTANTES PARA INTERRUPCIONES
     156.  00:8000                      ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
     157.  00:8000  (00:FD9A)           H.KEYI		equ     	#FD9A
     158.  00:8000  (00:FD9F)           H.TIMI	 	equ     	#FD9F
     159.  00:8000                      
     160.  00:8000                      
     161.  00:8000                      ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
     162.  00:8000                      ;; CONSTANTES PARA SONIDO 
     163.  00:8000                      ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
     164.  00:8000                      
     165.  00:8000  (F000)              	map		#f000
     166.  00:8000                      
     167.  00:8000                      ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;PT3 REPLAYER
     168.  00:8000  (00:F000)           PT3_SETUP:		#1	;set bit0 to 1, if you want to play without looping
     169.  00:8000                      					;bit7 is set each time, when loop point is passed
     170.  00:8000  (00:F001)           PT3_MODADDR:	#2
     171.  00:8000  (00:F003)           PT3_CrPsPtr:	#2
     172.  00:8000  (00:F005)           PT3_SAMPTRS:	#2
     173.  00:8000  (00:F007)           PT3_OrnPtrs:	#2
     174.  00:8000  (00:F009)           PT3_PDSP:		#2
     175.  00:8000  (00:F00B)           PT3_CSP:		#2
     176.  00:8000  (00:F00D)           PT3_PSP:		#2
     177.  00:8000  (00:F00F)           PT3_PrNote:		#1
     178.  00:8000  (00:F010)           PT3_PrSlide:	#2
     179.  00:8000  (00:F012)           PT3_AdInPtA:	#2
     180.  00:8000  (00:F014)           PT3_AdInPtB:	#2
     181.  00:8000  (00:F016)           PT3_AdInPtC:	#2
     182.  00:8000  (00:F018)           PT3_LPosPtr:	#2
     183.  00:8000  (00:F01A)           PT3_PatsPtr:	#2
     184.  00:8000  (00:F01C)           PT3_Delay:		#1
     185.  00:8000  (00:F01D)           PT3_AddToEn:	#1
     186.  00:8000  (00:F01E)           PT3_Env_Del:	#1
     187.  00:8000  (00:F01F)           PT3_ESldAdd:	#2
     188.  00:8000  (00:F021)           PT3_NTL3:		#2	; AND A / NOP (note table creator)
     189.  00:8000                      
     190.  00:8000  (00:F023)           VARS:			#0
     191.  00:8000                      
     192.  00:8000  (00:F023)           ChanA:			#29			;CHNPRM_Size
     193.  00:8000  (00:F040)           ChanB:			#29			;CHNPRM_Size
     194.  00:8000  (00:F05D)           ChanC:			#29			;CHNPRM_Size
     195.  00:8000                      
     196.  00:8000                      ;GlobalVars
     197.  00:8000  (00:F07A)           DelyCnt:		#1
     198.  00:8000  (00:F07B)           CurESld:		#2
     199.  00:8000  (00:F07D)           CurEDel:		#1
     200.  00:8000  (00:F07E)           Ns_Base_AddToNs:	#0
     201.  00:8000  (00:F07E)           Ns_Base:		#1
     202.  00:8000  (00:F07F)           AddToNs:		#1
     203.  00:8000                      
     204.  00:8000  (00:F080)           NT_:			#192	; Puntero a/tabla de frecuencias
     205.  00:8000                      
     206.  00:8000  (00:F140)           AYREGS:			#0
     207.  00:8000  (00:F140)           VT_:			#14
     208.  00:8000  (00:F14E)           EnvBase:		#2
     209.  00:8000  (00:F150)           VAR0END:		#0
     210.  00:8000                      
     211.  00:8000  (00:F150)           T1_:			#0		
     212.  00:8000  (00:F150)           T_NEW_1:		#0
     213.  00:8000  (00:F150)           T_OLD_1:		#24
     214.  00:8000  (00:F168)           T_OLD_2:		#24
     215.  00:8000  (00:F180)           T_NEW_3:		#0
     216.  00:8000  (00:F180)           T_OLD_3:		#2
     217.  00:8000  (00:F182)           T_OLD_0:		#0
     218.  00:8000  (00:F182)           T_NEW_0:		#24
     219.  00:8000  (00:F19A)           T_NEW_2:		#166
     220.  00:8000                      ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;PT3 REPLAYER END
     221.  00:8000                      
     222.  00:8000                      ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ayFX REPLAYER 
     223.  00:8000  (00:F240)           ayFX_MODE:		#1			; ayFX mode
     224.  00:8000  (00:F241)           ayFX_BANK:		#2			; Current ayFX Bank
     225.  00:8000  (00:F243)           ayFX_PRIORITY:	#1			; Current ayFX stream priotity
     226.  00:8000  (00:F244)           ayFX_POINTER:	#2			; Pointer to the current ayFX stream
     227.  00:8000  (00:F246)           ayFX_TONE:		#2			; Current tone of the ayFX stream
     228.  00:8000  (00:F248)           ayFX_NOISE:		#1			; Current noise of the ayFX stream
     229.  00:8000  (00:F249)           ayFX_VOLUME:	#1			; Current volume of the ayFX stream
     230.  00:8000  (00:F24A)           ayFX_CHANNEL:	#1			; PSG channel to play the ayFX stream
     231.  00:8000                      
     232.  00:8000                      	;IF (AYFXRELATIVE == 1 ) 
     233.  00:8000                      ;ayFX_VT:	ds	2			; ayFX relative volume table pointer
     234.  00:8000                      	;ENDIF
     235.  00:8000                      ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ayFX REPLAYER END
     236.  00:8000                      
     237.  00:8000                      
     238.  00:8000                      
       7   00:8000                      
       8   00:8000                      ;;=====================================================
       9   00:8000                      ;;DEFINICIÓN DE CABECERA DE ARCHIVO BIN
      10   00:8000                      ;;=====================================================		
      11   00:8000                      	include "cabecerabin.asm"
       1.  00:8000                      ;;=====================================================
       2.  00:8000                      ;; FICHERO cabecera.asm
       3.  00:8000                      ;;=====================================================
       4.  00:8000                      
       5.  00:8000                      ;;CABECERA FICHERO BIN
       6.  00:8000  FE                  	DB	#FE
       7.  00:8001  00 80               	DW	START
       8.  00:8003  B7 B8               	DW	END
       9.  00:8005  00 80               	DW	START
      10.  00:8007                      
      11.  00:8007                      ;;INICIO CÓDIGO PROGRAMA	
      12.  00:8007                      	ORG	#8000
      13.  00:8000                      	
      12   00:8000                      	
      13   00:8000                      START:	
      14   00:8000                      	;inicializa pantalla y entonrno
      15   00:8000  CD F3 80            	CALL	sub_preparapantalla			;screen 2,2 sin click al pulsar tecla y color 16,1,1
      16   00:8003                      	
      17   00:8003                      	;inicializa variables para parametrizar funciones y que lo que se muestre sea variable (nº vidas, mapa, puertas, pantalla, etc...)
      18   00:8003  CD 39 80            	CALL	inicializa_variables_pruebas
      19   00:8006                      	
      20   00:8006                      	;inicializa los niveles por partida
      21   00:8006  CD 5C 80            	CALL	inicializa_niveles			;no es necesario parametrizarlo según el nivel del usuario ya que se cargan todos
      22   00:8009                      	
      23   00:8009                      	;inicializa las estructuras de forma particular según ayua pero sin poner valores de posición
      24   00:8009  CD C5 96            	CALL	resetea_ayudas
      25   00:800C                      	
      26   00:800C                      	;pinta la pantalla (la primera o algunas especiales se pintan completamente)
      27   00:800C  CD 14 81            	CALL	pinta_pantalla_completa 
      28   00:800F                      	
      29   00:800F                      	;carga sprites en memoria (SE HA RETRASADO HASTA PARAMETRIZAR LA CARGA DE PANTALLAS)
      30   00:800F  CD A5 84            	CALL 	carga_patrones_sprites_nivel
      31   00:8012                      	
      32   00:8012                      	;funciones que modificarian el marcador si se produce un evento cuando toque y cuando se pinta la pantalla ya se mira
      33   00:8012                      	;una variable para ver si el array hay que actualizarlo en pantalla o no
      34   00:8012  CD 54 82            	CALL	pinta_vidas
      35   00:8015  CD 63 82            	CALL 	pinta_reliquias
      36   00:8018  CD 72 82            	CALL	pinta_nivel
      37   00:801B  CD F2 82            	CALL	borra_mapa
      38   00:801E  CD 49 83            	CALL	pinta_puertas
      39   00:8021                      
      40   00:8021  3E 13               	LD		 A, TILEPROTAM
      41   00:8023  32 AC A5            	LD		(elemento_pintar_mapa), A
      42   00:8026  CD D3 83            	CALL	posiciona_en_mapa		;se le pasa elemento_pintar_mapa (tile del prota) está el prota y prota.poxx y posy
      43   00:8029                      	
      44   00:8029  CD 5D 97            	CALL	inicializa_ayudas
      45   00:802C                      	
      46   00:802C                      
      47   00:802C                      	
      48   00:802C                      	;incializacion de replayer con interrupciones
      49   00:802C                      ;	CALL	inicializa_replayer_efectos_interrupciones
      50   00:802C                      
      51   00:802C                      loop_principal:
      52   00:802C  76                  	HALT							;espera VBLANK y sincroniza
      53   00:802D                      	
      54   00:802D  CD BD 84            	CALL	render_sprites			;actualiza array de sprites y los pinta en pantalla
      55   00:8030                      	
      56   00:8030  CD E3 82            	CALL	pinta_energia			;pinta la energia en pantalla
      57   00:8033                      
      58   00:8033  CD 00 85            	CALL	check_player			;MIRA EL CONTROL Y APLICA LA LOGICA DE MOVIMIENTO DEL PROTAGONISTA
      59   00:8036                      	
      60   00:8036  C3 2C 80            	JP		loop_principal
      61   00:8039                      fin_programa_principal:
      62   00:8039                      	;RET
      63   00:8039                      
      64   00:8039                      
      65   00:8039                      
      66   00:8039                      
      67   00:8039                      
      68   00:8039                      ;;*******************************************************************
      69   00:8039                      ; sólo para hacer pruebas y pintar la parte de las vidas y demás
      70   00:8039                      inicializa_variables_pruebas:
      71   00:8039  3E 04               	LD		 A, 4
      72   00:803B  32 88 A5            	LD		(prota_vidas),A
      73   00:803E                      
      74   00:803E  3E 04               	LD		 A, 4
      75   00:8040  32 89 A5            	LD		(prota_reliquias), A
      76   00:8043                      
      77   00:8043  3E 64               	LD		 A, 100
      78   00:8045  32 8C A5            	LD		(prota_energia), A
      79   00:8048                      
      80   00:8048                      	;ubico al prota dentro del nivel para obtener luego las habitaciones y enemigos que aparecerán
      81   00:8048                      	;será igual la posición inicial en todos los niveles
      82   00:8048                      	
      83   00:8048  3E 00               	LD		 A, 0				;los niveles (matrices) son 7 del 0 al 6
      84   00:804A  32 87 A5            	LD		(prota_nivel), A	;nivel empieza en 0 para usar las posiciones ascii
      85   00:804D                      
      86   00:804D  3E 00               	LD		 A, 0				;los subniveles (filas) son 7 del 0 al 6
      87   00:804F  32 8B A5            	LD		(prota_pos_mapy), A	;pos Y dentro del nivel (se empieza en 0)
      88   00:8052                      
      89   00:8052  3E 02               	LD		 A, 2				;columnas 7: del 0 al 6
      90   00:8054  32 8A A5            	LD		(prota_pos_mapx), A	;pos X dentro del nivel (se empieza en 0)
      91   00:8057                      	
      92   00:8057  AF                  	XOR		 A
      93   00:8058  32 7C A5            	LD		(prota.cadencia), A
      94   00:805B                      fin_inicializa_variables_pruebas:
      95   00:805B  C9                  	RET
      96   00:805C                      ;;************************************************************************
      97   00:805C                      
      98   00:805C                      
      99   00:805C                      
     100   00:805C                      
     101   00:805C                      
     102   00:805C                      
     103   00:805C                      
     104   00:805C                      
     105   00:805C                      
     106   00:805C                      ;;=====================================================
     107   00:805C                      ;;DEFINICIÓN DE SUBRUTINAS
     108   00:805C                      ;;=====================================================
     109   00:805C                      	include "subrutinas.asm"
       1.  00:805C                      ;;=====================================================
       2.  00:805C                      ;;DEFINICIÓN DE SUBRUTINAS
       3.  00:805C                      ;;=====================================================	
       4.  00:805C                      
       5.  00:805C                      
       6.  00:805C                      ;;=====================================================
       7.  00:805C                      ;;INICIALIZA_NIVELES
       8.  00:805C                      ;;=====================================================	
       9.  00:805C                      ; función: 	copia la plantilla de niveles (habitaciones_plantilla) en los niveles de trabajo para el juego (habitaciones_juego)
      10.  00:805C                      ; entrada: 	habitaciones_plantilla
      11.  00:805C                      ; salida: 	habitaciones_juego
      12.  00:805C                      ; toca: 	A, B, HL, DE
      13.  00:805C                      inicializa_niveles:
      14.  00:805C  AF                  		XOR		 A
      15.  00:805D  06 31               		LD		 B,   49				;7 filas por 7 niveles menos el primero que lo hago fuera del buble
      16.  00:805F  21 5E A2            		LD		HL,   habitaciones_juego;tambíen puntero a la primera fila del primer nivel
      17.  00:8062  11 0E 00            		LD		DE,   14				;14 bytes de habitaciones y 2 extras
      18.  00:8065  19                  		ADD		HL,   DE				;puntero al primero de los bytes extras
      19.  00:8066  77                  		LD		(HL), A					;0000000Xb si X=0 no se ha pasado por allí y si es 1 sí
      20.  00:8067  11 10 00            		LD		DE,   16				;desde las col 15 de una fila a la siguiente
      21.  00:806A                      .bucle_borra_hab:
      22.  00:806A  19                  		ADD		HL,   DE				;situo el puntero 16 bytes siguientes
      23.  00:806B  77                  		LD		(HL), A					;pongo su contenido a 0
      24.  00:806C  10 FC               		DJNZ	.bucle_borra_hab		;repito para poner todos a 0
      25.  00:806E                      fin_iniciliza_niveles:
      26.  00:806E  C9                  		RET
      27.  00:806F                      
      28.  00:806F                      
      29.  00:806F                      ;;=====================================================
      30.  00:806F                      ;;ACTUALIZA_MARCADOR_VIDAS
      31.  00:806F                      ;;=====================================================	
      32.  00:806F                      ; función:  actualiza el buffer de vidas
      33.  00:806F                      ; entrada: 	prota_vidas
      34.  00:806F                      ; salida: 	array_aux_vidas
      35.  00:806F                      ; toca:		A,B,HL
      36.  00:806F                      actualiza_marcador_vidas:
      37.  00:806F                      	;para no andar restando pongo todos los huecos a negro y luego en otro bucle las caras
      38.  00:806F                      	;1-pinto todo en blanco
      39.  00:806F  21 8D A5            	LD		HL,array_aux_vidas
      40.  00:8072  06 08               	LD		 B,NMAXVIDREL
      41.  00:8074                      loop_marcador_caras_negro:	;asignar espacios en negro
      42.  00:8074  36 00               	LD		(HL),0			;0 posición mapa tiles para nada (es transparente pero el fondo es negro)
      43.  00:8076  23                  	INC		HL
      44.  00:8077  10 FB               	DJNZ	loop_marcador_caras_negro
      45.  00:8079                      fin_loop_marcador_caras_negro:
      46.  00:8079                      	;2-pinto las caras según el n de vidas
      47.  00:8079  3A 88 A5            	LD		 A, (prota_vidas)
      48.  00:807C  B7                  	OR		 A
      49.  00:807D  C8                  	RET 	 Z
      50.  00:807E  47                  	LD		 B, A
      51.  00:807F  21 8D A5            	LD		HL, array_aux_vidas
      52.  00:8082                      loop_marcador_caras: ;asignar caras
      53.  00:8082  36 0D               	LD		(HL), POSCARAMAP	;13 posición mapa tiles para cara
      54.  00:8084  23                  	INC		HL
      55.  00:8085  10 FB               	DJNZ	loop_marcador_caras
      56.  00:8087                      fin_loop_marcador_caras:
      57.  00:8087                      fin_actualiza_marcador_vidas:
      58.  00:8087  C9                  	RET
      59.  00:8088                      
      60.  00:8088                      
      61.  00:8088                      ;;=====================================================
      62.  00:8088                      ;;ACTUALIZA_BUFFER_RELIQUIAS
      63.  00:8088                      ;;=====================================================	
      64.  00:8088                      ; función: 	actualiza buffer de reliquias
      65.  00:8088                      ; entrada: 	prota_reliquias
      66.  00:8088                      ; salida: 	array_aux_reliquias
      67.  00:8088                      ; toca:		A,B,HL
      68.  00:8088                      actualiza_buffer_reliquias:	
      69.  00:8088                      	;para no andar restando pongo todos los huecos a negro y luego en otro bucle las reliquias
      70.  00:8088                      	;1-pinto todo en blanco
      71.  00:8088  21 95 A5            	LD		HL, array_aux_reliquias
      72.  00:808B  06 08               	LD		 B, NMAXVIDREL
      73.  00:808D  AF                  	XOR		 A
      74.  00:808E                      loop_buffer_reliquias_negro:	;asignar espacios en negro
      75.  00:808E  77                  	LD		(HL), A			;0 posición mapa tiles para nada (es transparente pero el fondo es negro)
      76.  00:808F  23                  	INC		HL
      77.  00:8090  10 FC               	DJNZ	loop_buffer_reliquias_negro
      78.  00:8092                      
      79.  00:8092                      	;2-pinto las cruces según el n de reliquias
      80.  00:8092  21 95 A5            	LD		HL, array_aux_reliquias
      81.  00:8095  3A 89 A5            	LD		 A, (prota_reliquias)
      82.  00:8098  B7                  	OR		 A
      83.  00:8099  C8                  	RET		 Z
      84.  00:809A  47                  	LD		 B, A
      85.  00:809B                      loop_buffer_reliquias: ;asignar reliquias
      86.  00:809B  36 11               	LD		(HL), POSRELIMAP	;17 posición mapa tiles para reliquia
      87.  00:809D  23                  	INC		HL
      88.  00:809E  10 FB               	DJNZ	loop_buffer_reliquias
      89.  00:80A0                      fin_actualiza_buffer_reliquias:
      90.  00:80A0  C9                  	RET
      91.  00:80A1                      
      92.  00:80A1                      
      93.  00:80A1                      
      94.  00:80A1                      ;;=====================================================
      95.  00:80A1                      ;;LOCALIZA_INFO_HABITACION
      96.  00:80A1                      ;;=====================================================	
      97.  00:80A1                      ; función: 	busca las puertas que hay que pintar egún la posición del usuario y las pone en habitacion_actual
      98.  00:80A1                      ; entrada: 	prota.pos_mapy, prota.pos_mapx, prota_nivel habitaciones_juego
      99.  00:80A1                      ; salida: 	habitacion_actual
     100.  00:80A1                      ; toca:		todo
     101.  00:80A1                      ;ejemplo: nivel 4, posy 5 y posx 3
     102.  00:80A1                      ;3 + 5 x 8 + 4 x 49
     103.  00:80A1                      localiza_info_habitacion:
     104.  00:80A1                      ;primera posición: me coloco en la columna correcta
     105.  00:80A1  21 5E A2            	LD		HL, habitaciones_juego
     106.  00:80A4                      .situo_columna:	
     107.  00:80A4  3A 8A A5            	LD		 A, (prota_pos_mapx)
     108.  00:80A7  CB 27               	SLA		 A				;multiplico por dos ya que cada habitación va de dos en dos bytes
     109.  00:80A9  06 00               	LD		 B, 0
     110.  00:80AB  4F                  	LD		 C, A
     111.  00:80AC                      
     112.  00:80AC  09                  	ADD 	HL, BC			;sumo a la posición 0 la columnax2 en la que situarme
     113.  00:80AD                      	
     114.  00:80AD                      .situo_fila:
     115.  00:80AD  3A 8B A5            	LD		A, (prota_pos_mapy)
     116.  00:80B0  B7                  	OR	 	A
     117.  00:80B1  CA BE 80            	JP		Z, .situo_nivel	;si la fila es 0 no es necesario seguir operando en fila
     118.  00:80B4                      	
     119.  00:80B4  47                  	LD		B, A
     120.  00:80B5  AF                  	XOR		A
     121.  00:80B6                      .loop_suma_fila:
     122.  00:80B6  C6 10               	ADD		16				;cada fila tiene 16 bytes
     123.  00:80B8  10 FC               	DJNZ	.loop_suma_fila
     124.  00:80BA                      	
     125.  00:80BA  06 00               	LD		 B, 0
     126.  00:80BC  4F                  	LD		 C, A
     127.  00:80BD                      
     128.  00:80BD  09                  	ADD 	HL, BC			;sumo a la columna 16 x filas para situarme en la fila correcta
     129.  00:80BE                      
     130.  00:80BE                      .situo_nivel:
     131.  00:80BE  3A 87 A5            	LD		 A, (prota_nivel)
     132.  00:80C1  B7                  	OR	 	 A
     133.  00:80C2  CA D2 80            	JP		 Z, .actualiza_valiable_habitacion	;si el nivel es 0 al pasar por las anterirores ya estoy situado actualizo la variable y termino
     134.  00:80C5                      	
     135.  00:80C5  E5                  	PUSH	HL				;guardo el resultado intermedio
     136.  00:80C6                      	
     137.  00:80C6  47                  	LD		 B, A			;preparo la varible del bucle
     138.  00:80C7  11 70 00            	LD		DE, 112			;112 = 16x42 son los bytes de cada matriz-nivel
     139.  00:80CA  21 00 00            	LD		HL, 0
     140.  00:80CD                      .loop_suma_nivel:
     141.  00:80CD  19                  	ADD		HL, DE
     142.  00:80CE  10 FD               	DJNZ	.loop_suma_nivel
     143.  00:80D0                      	
     144.  00:80D0  D1                  	POP		DE				;devuelvo el resultado intermedio en DE que ya no lo necesito
     145.  00:80D1                      	
     146.  00:80D1  19                  	ADD		HL, DE			;sumo el resultado del nivel al resultado intermedio anterior
     147.  00:80D2                      	
     148.  00:80D2                      .actualiza_valiable_habitacion
     149.  00:80D2  7E                  	LD		 A, (HL)
     150.  00:80D3  32 5C A2            	LD		(habitacion_actual), A
     151.  00:80D6  23                  	INC		HL				;el byte de los extras está antes de donde se especifican las puertas
     152.  00:80D7  7E                  	LD		 A, (HL)
     153.  00:80D8  32 5D A2            	LD		(habitacion_extras), A
     154.  00:80DB                      fin_localiza_info_habitacion:
     155.  00:80DB  C9                  	RET
     156.  00:80DC                      
     157.  00:80DC                      
     158.  00:80DC                      	
     159.  00:80DC                      	
     160.  00:80DC                      	
     161.  00:80DC                      	
     162.  00:80DC                      	
     110   00:80DC                      	
     111   00:80DC                      	include "subr_general.asm"
       1.  00:80DC                      ;;=====================================================
       2.  00:80DC                      ;;DEFINICIÓN DE SUBRUTINAS GENERALES USABLES PARA CUALQUIER PROYECTO
       3.  00:80DC                      ;;=====================================================	
       4.  00:80DC                      
       5.  00:80DC                      ;;=====================================================
       6.  00:80DC                      ;;SUMA_A_BC
       7.  00:80DC                      ;;=====================================================	
       8.  00:80DC                      ; función: 	suma A a BC por si da más de 255
       9.  00:80DC                      ; entrada: 	A, BC
      10.  00:80DC                      ; salida: 	A + BC
      11.  00:80DC                      ; toca:		A, BC
      12.  00:80DC                      suma_A_BC:
      13.  00:80DC  81                  	ADD		 C
      14.  00:80DD  4F                  	LD		 C, A
      15.  00:80DE  88                  	ADC		 B
      16.  00:80DF  91                  	SUB		 C
      17.  00:80E0  47                  	LD		 B, A
      18.  00:80E1                      fin_suma_A_BC:
      19.  00:80E1  C9                  	RET
     112   00:80E2                      	
     113   00:80E2                      	include "subr_pintapantalla.asm"
       1.  00:80E2                      ;;=====================================================
       2.  00:80E2                      ;;DEFINICIÓN DE SUBRUTINAS
       3.  00:80E2                      ;;=====================================================	
       4.  00:80E2                      ;relacionadas con pintado en pantalla (y no sprites)
       5.  00:80E2                      
       6.  00:80E2                      
       7.  00:80E2                      ;;=====================================================
       8.  00:80E2                      ;;COLOR_PANTALLA
       9.  00:80E2                      ;;=====================================================	
      10.  00:80E2                      ; función: 	el equivalente en basic a color 15,1,1
      11.  00:80E2                      ; entrada: 	HL	que apunta a un array de bytes con 3 bytes FORCLR, BAKCLR y BDRCLR
      12.  00:80E2                      ; salida: 	-
      13.  00:80E2                      ; toca: 	todo
      14.  00:80E2                      color_pantalla:
      15.  00:80E2  7E                  	LD		 A, (HL)			;FORCLR 
      16.  00:80E3  32 E9 F3            	LD 		(FORCLR),A
      17.  00:80E6  23                  	INC		HL
      18.  00:80E7                      	
      19.  00:80E7  7E                  	LD		 A, (HL)			;BAKCLR
      20.  00:80E8  32 EA F3            	LD 		(BAKCLR),A
      21.  00:80EB  23                  	INC		HL
      22.  00:80EC                      	
      23.  00:80EC  7E                  	LD		 A, (HL)
      24.  00:80ED  32 EB F3            	LD 		(BDRCLR),A			;BDRCLR
      25.  00:80F0  C3 62 00            	JP		CHGCLR 
      26.  00:80F3                      fin_color_pantalla:
      27.  00:80F3                      
      28.  00:80F3                      
      29.  00:80F3                      ;;=====================================================
      30.  00:80F3                      ;;PREPARAPANTALLA
      31.  00:80F3                      ;;=====================================================	
      32.  00:80F3                      ; función: elimina clic cuando se pulsa tecla, cls, screen 2,2
      33.  00:80F3                      ; entrada: -
      34.  00:80F3                      ; salida: -
      35.  00:80F3                      ; toca: si no son todos los regristros, casi todos
      36.  00:80F3                      sub_preparapantalla:
      37.  00:80F3                      	;toca A y Z
      38.  00:80F3                      elimina_clic;
      39.  00:80F3  AF                  	XOR		 A
      40.  00:80F4  32 DB F3            	LD		(CLIKSW),A
      41.  00:80F7                      fin_elimina_clic:
      42.  00:80F7                      
      43.  00:80F7                      	;toca A
      44.  00:80F7                      limpia_pantalla:
      45.  00:80F7  AF                  	XOR		 A
      46.  00:80F8  CD C3 00            	CALL 	CLS
      47.  00:80FB                      fin_limpia_pantalla:
      48.  00:80FB                      
      49.  00:80FB                      	;toca A y direcciones #F3E9/#F3EA/#F3EB, poner en HL array con 3 valores
      50.  00:80FB  21 6E A5            	LD		HL, color_base
      51.  00:80FE  CD E2 80            	CALL	color_pantalla
      52.  00:8101                      	
      53.  00:8101                      	;cambiamos a SCREEN 2,2 del BASIC
      54.  00:8101                      	;toca A
      55.  00:8101                      screen2:
      56.  00:8101  3E 02               	LD		 A, 2
      57.  00:8103  CD 5F 00            	CALL	CHGMOD			;selecciona screen 2
      58.  00:8106                      sprites_16_16:
      59.  00:8106  3A E0 F3            	LD		 A, (RG1SAV)
      60.  00:8109  F6 02               	OR		00000010b		;fuerza sprites de 16x16
      61.  00:810B  32 E0 F3            	LD		(RG1SAV), A		;no lo guardamos en la copia de variables del sistema
      62.  00:810E  47                  	LD		 B, A
      63.  00:810F  0E 01               	LD		 C, 1
      64.  00:8111  C3 47 00            	JP		WRTVDP			;opción alternativa de escribir las tres lineas siguientes
      65.  00:8114                      fin_sub_preparapantalla:
      66.  00:8114                      	
      67.  00:8114                      
      68.  00:8114                      ;;=====================================================
      69.  00:8114                      ;;PINTA_PANTALLA_COMPLETA
      70.  00:8114                      ;;=====================================================	
      71.  00:8114                      ; función: pinta el escenario, las 3 partes
      72.  00:8114                      ; entrada: -
      73.  00:8114                      ; salida: -
      74.  00:8114                      ; toca: si no son todos los regristros, casi todos
      75.  00:8114                      pinta_pantalla_completa:
      76.  00:8114  CD 1B 81            	CALL 	pinta_parte_superior_pantalla
      77.  00:8117                      	
      78.  00:8117  CD 39 82            	CALL 	pinta_parte_inferior_pantalla	
      79.  00:811A                      fin_pinta_pantalla_completa:
      80.  00:811A  C9                  	RET
      81.  00:811B                      
      82.  00:811B                      
      83.  00:811B                      ;;=====================================================
      84.  00:811B                      ;;PINTA_PARTE_SUPERIOR_PANTALLA
      85.  00:811B                      ;;=====================================================	
      86.  00:811B                      ; función: pinta el escenario, los dos bancos superiores
      87.  00:811B                      ; entrada: -
      88.  00:811B                      ; salida: -
      89.  00:811B                      ; toca: si no son todos los regristros, casi todos
      90.  00:811B                      pinta_parte_superior_pantalla:
      91.  00:811B  3A 87 A5            	LD		 A, (prota_nivel)
      92.  00:811E  CA 4C 81            	JP		 Z, .carga_nivel_0
      93.  00:8121  3D                  	DEC		 A
      94.  00:8122  3A 87 A5            	LD		 A, (prota_nivel)
      95.  00:8125  CA 67 81            	JP		 Z, .carga_nivel_1
      96.  00:8128  3D                  	DEC		 A
      97.  00:8129  3A 87 A5            	LD		 A, (prota_nivel)
      98.  00:812C  CA 82 81            	JP		 Z, .carga_nivel_2
      99.  00:812F  3D                  	DEC		 A
     100.  00:8130  3A 87 A5            	LD		 A, (prota_nivel)
     101.  00:8133  CA 9D 81            	JP		 Z, .carga_nivel_3
     102.  00:8136  3D                  	DEC		 A
     103.  00:8137  3A 87 A5            	LD		 A, (prota_nivel)
     104.  00:813A  CA B8 81            	JP		 Z, .carga_nivel_4
     105.  00:813D  3D                  	DEC		 A
     106.  00:813E  3A 87 A5            	LD		 A, (prota_nivel)
     107.  00:8141  CA D3 81            	JP		 Z, .carga_nivel_5
     108.  00:8144  3D                  	DEC		 A
     109.  00:8145  3A 87 A5            	LD		 A, (prota_nivel)
     110.  00:8148  CA EE 81            	JP		 Z, .carga_nivel_6
     111.  00:814B  3D                  	DEC		 A
     112.  00:814C                      	
     113.  00:814C                      .carga_nivel_0:
     114.  00:814C  21 7D A7            	LD		HL, tiles_patrones_nivel0
     115.  00:814F  22 33 82            	LD		(tiles_patrones), HL
     116.  00:8152  21 32 A9            	LD		HL, tiles_color_nivel0
     117.  00:8155  22 35 82            	LD		(tiles_colores), HL
     118.  00:8158  21 7D A7            	LD		HL, tiles_patrones_nivel0
     119.  00:815B  22 33 82            	LD		(tiles_patrones), HL
     120.  00:815E  21 79 A9            	LD		HL, tiles_mapa_nivel0
     121.  00:8161  22 37 82            	LD		(tiles_mapa), HL
     122.  00:8164  C3 06 82            	JP		.fin_carga_niveles
     123.  00:8167                      
     124.  00:8167                      .carga_nivel_1:
     125.  00:8167  21 AE A9            	LD		HL, tiles_patrones_nivel1
     126.  00:816A  22 33 82            	LD		(tiles_patrones), HL
     127.  00:816D  21 63 AB            	LD		HL, tiles_color_nivel1
     128.  00:8170  22 35 82            	LD		(tiles_colores), HL
     129.  00:8173  21 AE A9            	LD		HL, tiles_patrones_nivel1
     130.  00:8176  22 33 82            	LD		(tiles_patrones), HL
     131.  00:8179  21 AA AB            	LD		HL, tiles_mapa_nivel1
     132.  00:817C  22 37 82            	LD		(tiles_mapa), HL
     133.  00:817F  C3 06 82            	JP		.fin_carga_niveles
     134.  00:8182                      	
     135.  00:8182                      .carga_nivel_2:
     136.  00:8182  21 DF AB            	LD		HL, tiles_patrones_nivel2
     137.  00:8185  22 33 82            	LD		(tiles_patrones), HL
     138.  00:8188  21 94 AD            	LD		HL, tiles_color_nivel2
     139.  00:818B  22 35 82            	LD		(tiles_colores), HL
     140.  00:818E  21 DF AB            	LD		HL, tiles_patrones_nivel2
     141.  00:8191  22 33 82            	LD		(tiles_patrones), HL
     142.  00:8194  21 DB AD            	LD		HL, tiles_mapa_nivel2
     143.  00:8197  22 37 82            	LD		(tiles_mapa), HL
     144.  00:819A  C3 06 82            	JP		.fin_carga_niveles
     145.  00:819D                      	
     146.  00:819D                      .carga_nivel_3:
     147.  00:819D  21 10 AE            	LD		HL, tiles_patrones_nivel3
     148.  00:81A0  22 33 82            	LD		(tiles_patrones), HL
     149.  00:81A3  21 C5 AF            	LD		HL, tiles_color_nivel3
     150.  00:81A6  22 35 82            	LD		(tiles_colores), HL
     151.  00:81A9  21 10 AE            	LD		HL, tiles_patrones_nivel3
     152.  00:81AC  22 33 82            	LD		(tiles_patrones), HL
     153.  00:81AF  21 0C B0            	LD		HL, tiles_mapa_nivel3
     154.  00:81B2  22 37 82            	LD		(tiles_mapa), HL
     155.  00:81B5  C3 06 82            	JP		.fin_carga_niveles
     156.  00:81B8                      	
     157.  00:81B8                      .carga_nivel_4:
     158.  00:81B8  21 41 B0            	LD		HL, tiles_patrones_nivel4
     159.  00:81BB  22 33 82            	LD		(tiles_patrones), HL
     160.  00:81BE  21 F6 B1            	LD		HL, tiles_color_nivel4
     161.  00:81C1  22 35 82            	LD		(tiles_colores), HL
     162.  00:81C4  21 41 B0            	LD		HL, tiles_patrones_nivel4
     163.  00:81C7  22 33 82            	LD		(tiles_patrones), HL
     164.  00:81CA  21 3D B2            	LD		HL, tiles_mapa_nivel4
     165.  00:81CD  22 37 82            	LD		(tiles_mapa), HL
     166.  00:81D0  C3 06 82            	JP		.fin_carga_niveles
     167.  00:81D3                      	
     168.  00:81D3                      .carga_nivel_5:
     169.  00:81D3  21 72 B2            	LD		HL, tiles_patrones_nivel5
     170.  00:81D6  22 33 82            	LD		(tiles_patrones), HL
     171.  00:81D9  21 27 B4            	LD		HL, tiles_color_nivel5
     172.  00:81DC  22 35 82            	LD		(tiles_colores), HL
     173.  00:81DF  21 72 B2            	LD		HL, tiles_patrones_nivel5
     174.  00:81E2  22 33 82            	LD		(tiles_patrones), HL
     175.  00:81E5  21 6E B4            	LD		HL, tiles_mapa_nivel5
     176.  00:81E8  22 37 82            	LD		(tiles_mapa), HL
     177.  00:81EB  C3 06 82            	JP		.fin_carga_niveles
     178.  00:81EE                      	
     179.  00:81EE                      .carga_nivel_6:
     180.  00:81EE  21 A3 B4            	LD		HL, tiles_patrones_nivel6
     181.  00:81F1  22 33 82            	LD		(tiles_patrones), HL
     182.  00:81F4  21 58 B6            	LD		HL, tiles_color_nivel6
     183.  00:81F7  22 35 82            	LD		(tiles_colores), HL
     184.  00:81FA  21 A3 B4            	LD		HL, tiles_patrones_nivel6
     185.  00:81FD  22 33 82            	LD		(tiles_patrones), HL
     186.  00:8200  21 9F B6            	LD		HL, tiles_mapa_nivel6
     187.  00:8203  22 37 82            	LD		(tiles_mapa), HL
     188.  00:8206                      ;	JP		.fin_carga niveles			;no necesario
     189.  00:8206                      .fin_carga_niveles:
     190.  00:8206                      
     191.  00:8206                      	;cargando banco 1
     192.  00:8206                      	;cargamos los patrones
     193.  00:8206  2A 33 82            	LD		HL, (tiles_patrones)
     194.  00:8209  11 00 00            	LD		DE, CHRTBL
     195.  00:820C  CD FC 97            	CALL	depack_VRAM
     196.  00:820F                      	;cargamos los colores de los patrones
     197.  00:820F  2A 35 82            	LD		HL, (tiles_colores)
     198.  00:8212  11 00 20            	LD		DE, CLRTBL
     199.  00:8215  CD FC 97            	CALL	depack_VRAM
     200.  00:8218                      	
     201.  00:8218                      	;cargando banco 2
     202.  00:8218                      	;cargamos los patrones
     203.  00:8218  2A 33 82            	LD		HL, (tiles_patrones)
     204.  00:821B  11 00 08            	LD		DE, CHRTBL + #0800
     205.  00:821E  CD FC 97            	CALL	depack_VRAM	
     206.  00:8221                      	;cargamos los colores de los patrones
     207.  00:8221  2A 35 82            	LD		HL, (tiles_colores)
     208.  00:8224  11 00 28            	LD		DE, CLRTBL + #0800
     209.  00:8227  CD FC 97            	CALL	depack_VRAM
     210.  00:822A                      	
     211.  00:822A                      	;cargamos mapa de pantalla banco 1 y 2
     212.  00:822A  2A 37 82            	LD		HL, (tiles_mapa)
     213.  00:822D  11 00 18            	LD		DE, TILMAP
     214.  00:8230  C3 FC 97            	JP		depack_VRAM
     215.  00:8233                      fin_pinta_parte_superior_pantalla:
     216.  00:8233  00 00               tiles_patrones:		DW	0
     217.  00:8235  00 00               tiles_colores:		DW	0
     218.  00:8237  00 00               tiles_mapa:			DW	0
     219.  00:8239                      
     220.  00:8239                      
     221.  00:8239                      ;;=====================================================
     222.  00:8239                      ;;PINTA_PARTE_INFERIOR_PANTALLA
     223.  00:8239                      ;;=====================================================	
     224.  00:8239                      ; función: pinta la parte inferior del escenario que es común
     225.  00:8239                      ; entrada: -
     226.  00:8239                      ; salida: -
     227.  00:8239                      ; toca: si no son todos los regristros, casi todos
     228.  00:8239                      pinta_parte_inferior_pantalla:
     229.  00:8239                      	;cangando banco 3
     230.  00:8239                      	;cargamos los patrones
     231.  00:8239  21 D4 B6            	LD		HL,tiles_patrones_marcador
     232.  00:823C  11 00 10            	LD		DE,CHRTBL + #1000
     233.  00:823F  CD FC 97            	CALL	depack_VRAM	
     234.  00:8242                      	;cargamos mapa de pantalla
     235.  00:8242  21 55 B8            	LD		HL,tiles_mapa_marcador
     236.  00:8245  11 00 1A            	LD		DE,TILMAP + #0200
     237.  00:8248  CD FC 97            	CALL	depack_VRAM
     238.  00:824B                      	;cargamos los colores de los patrones
     239.  00:824B  21 20 B8            	LD		HL,tiles_color_marcador
     240.  00:824E  11 00 30            	LD		DE,CLRTBL + #1000
     241.  00:8251  C3 FC 97            	JP		depack_VRAM
     242.  00:8254                      fin_pinta_parte_inferior_pantalla:
     243.  00:8254                      
     244.  00:8254                      
     245.  00:8254                      
     246.  00:8254                      ;;=====================================================
     247.  00:8254                      ;;PINTA_VIDAS
     248.  00:8254                      ;;=====================================================	
     249.  00:8254                      ; función: 	actualiza el mapa de tiles para que en el próximo refresco se pinten y actualiza_vidas
     250.  00:8254                      ; entrada: 	array_aux_vidas
     251.  00:8254                      ; salida: 	actualiza_vidas_sn
     252.  00:8254                      ; toca:		todo
     253.  00:8254                      pinta_vidas:
     254.  00:8254  CD 6F 80            	CALL	actualiza_marcador_vidas
     255.  00:8257                      	
     256.  00:8257  21 8D A5            	LD		HL, array_aux_vidas
     257.  00:825A  11 48 1A            	LD		DE, TILMAP + POSVIDAS 	;inicio posición en el mapa de tiles de las vidas
     258.  00:825D  01 08 00            	LD		BC, NMAXVIDREL			;hay 8 posiciones para vidas/reliquias o espacios en negro si no tiene 8 vidas/reliquias
     259.  00:8260  C3 5C 00            	JP		LDIRVM
     260.  00:8263                      fin_pinta_vidas:
     261.  00:8263                      	
     262.  00:8263                      	
     263.  00:8263                      
     264.  00:8263                      ;;=====================================================
     265.  00:8263                      ;;PINTA_RELIQUIAS
     266.  00:8263                      ;;=====================================================	
     267.  00:8263                      ; función: 	actualiza el mapa de tiles para que en el próximo refresco se pinten y actualiza_reliquias
     268.  00:8263                      ; entrada: 	array_aux_reliquias
     269.  00:8263                      ; salida: 	-
     270.  00:8263                      ; toca:		todo
     271.  00:8263                      pinta_reliquias:
     272.  00:8263  CD 88 80            	CALL	actualiza_buffer_reliquias
     273.  00:8266                      	
     274.  00:8266  21 95 A5            	LD		HL, array_aux_reliquias
     275.  00:8269  11 C8 1A            	LD		DE, TILMAP + POSRELIQ 	;inicio posición en el mapa de tiles de las vidas
     276.  00:826C  01 08 00            	LD		BC, NMAXVIDREL			;hay 8 posiciones para vidas/reliquias o espacios en negro si no tiene 8 vidas/reliquias
     277.  00:826F  C3 5C 00            	JP		LDIRVM
     278.  00:8272                      fin_pinta_reliquias:
     279.  00:8272                      	
     280.  00:8272                      
     281.  00:8272                      
     282.  00:8272                      	
     283.  00:8272                      ;;=====================================================
     284.  00:8272                      ;;PINTA_NIVEL
     285.  00:8272                      ;;=====================================================	
     286.  00:8272                      ; función: 	actualiza el nivel en la parte de puntuación
     287.  00:8272                      ; entrada: 	prota_nivel
     288.  00:8272                      ; salida: 	-
     289.  00:8272                      ; toca:		HL,DE,BC
     290.  00:8272                      pinta_nivel:	
     291.  00:8272                      	;forma más avanzada sin llamada a la bios
     292.  00:8272  01 B4 1A            	LD		BC,TILMAP + POSNIVEL ;posición en el mapa de tiles del tile de nivel
     293.  00:8275  3A 87 A5            	LD		 A, (prota_nivel)	;seleccionando la pos del banco de tiles a poner en el mapa
     294.  00:8278  C6 30               	ADD		'0'	
     295.  00:827A  57                  	LD		 D, A
     296.  00:827B                      	
     297.  00:827B  C3 7E 82            	JP		pinta_tile_suelto
     298.  00:827E                      fin_pinta_nivel:
     299.  00:827E                      
     300.  00:827E                      
     301.  00:827E                      
     302.  00:827E                      ;;=====================================================
     303.  00:827E                      ;;PINTA_TILE_SUELTO
     304.  00:827E                      ;;=====================================================	
     305.  00:827E                      ; función: 	pinta al tile que digamos en D, en la posición BC
     306.  00:827E                      ; entrada: 	BC (posición a pintar en el mapa),D (qué se va a pintar el esa posición)
     307.  00:827E                      ; salida: 	-
     308.  00:827E                      ; toca:		-
     309.  00:827E                      pinta_tile_suelto:
     310.  00:827E  DB 99               	IN		 A,(REGEST)		;leer registro de estado (recomendado)
     311.  00:8280  79                  	LD		 A,C			;primero byte bajo	
     312.  00:8281  D3 99               	OUT		(REGEST),A
     313.  00:8283  78                  	LD		 A,B			;después byte alto  ********************** preguntar a Fernando cómo que byte bajo es B
     314.  00:8284  F6 40               	OR		1000000b		;+64
     315.  00:8286  D3 99               	OUT		(REGEST),A
     316.  00:8288                      	
     317.  00:8288  7A                  	LD		A,D
     318.  00:8289  D3 98               	OUT		(REGESCVDP),A	;escribe A en VRAM en la posición indicada por los dos OUT anteriores
     319.  00:828B                      fin_pinta_tile_suelto:
     320.  00:828B  C9                  	RET
     321.  00:828C                      
     322.  00:828C                      
     323.  00:828C                      
     324.  00:828C                      
     325.  00:828C                      
     326.  00:828C                      ;;=====================================================
     327.  00:828C                      ;;MIRA_PINTA ENERGIA
     328.  00:828C                      ;;=====================================================	
     329.  00:828C                      ; función: 	actualiza el nivel de energia en la parte de puntuación
     330.  00:828C                      ; nota:		el cuadrado más bajo de ejergía siempre estará pintado... se obviará
     331.  00:828C                      ; entrada: 	prota.energia, array_aux_energia
     332.  00:828C                      ; salida: 	-
     333.  00:828C                      ; toca:		ninguno porque usa EXX
     334.  00:828C                      
     335.  00:828C                      ; nota importante... lo mismo interesa hacer esto con un array para comparar y un bucle
     336.  00:828C                      
     337.  00:828C                      mira_pinta_energia:
     338.  00:828C  D9                  	EXX							;por si acaso guardo el contenido de HL (si veo que no es necesario guardarlo lo quito) uso esto en vez de push por el nº ciclos
     339.  00:828D                      	
     340.  00:828D  3A 8C A5            	LD		 A,(prota_energia) 	;para las comparaciones A variable (actual) y B fijo (limites)
     341.  00:8290                      
     342.  00:8290  0E 00               	LD		 C,TILENEGRO		;para agilizar asignaciones en vez de un valor cte uso otro registro
     343.  00:8292                      pinta_ener:
     344.  00:8292                      pinta_ener_tile_8:
     345.  00:8292  21 A4 A5            	LD		HL,ultimo_pos_array_aux_energia	;coloco puntero en array e iré decrementando
     346.  00:8295  06 D9               	LD		 B,TILEENERG8
     347.  00:8297  B8                  	CP		 B
     348.  00:8298  38 04               	JR		C,pinta_ener_tile_8_negro
     349.  00:829A  36 0E               	LD		(HL),TILEMAPVERD
     350.  00:829C  18 01               	JR		pinta_ener_tile_7
     351.  00:829E                      pinta_ener_tile_8_negro:
     352.  00:829E  71                  	LD		(HL),C
     353.  00:829F                      
     354.  00:829F                      pinta_ener_tile_7:
     355.  00:829F  2B                  	DEC		HL
     356.  00:82A0  06 BA               	LD		 B,TILEENERG7
     357.  00:82A2  B8                  	CP		 B
     358.  00:82A3  38 04               	JR		C,pinta_ener_tile_7_negro
     359.  00:82A5  36 0E               	LD		(HL),TILEMAPVERD
     360.  00:82A7  18 01               	JR		pinta_ener_tile_6
     361.  00:82A9                      pinta_ener_tile_7_negro:
     362.  00:82A9  71                  	LD		(HL),C
     363.  00:82AA                      
     364.  00:82AA                      pinta_ener_tile_6:
     365.  00:82AA  2B                  	DEC		HL
     366.  00:82AB  06 9B               	LD		 B,TILEENERG6
     367.  00:82AD  B8                  	CP		 B
     368.  00:82AE  38 04               	JR		C,pinta_ener_tile_6_negro
     369.  00:82B0  36 0E               	LD		(HL),14
     370.  00:82B2  18 01               	JR		pinta_ener_tile_5
     371.  00:82B4                      pinta_ener_tile_6_negro:
     372.  00:82B4  71                  	LD		(HL),C
     373.  00:82B5                      
     374.  00:82B5                      pinta_ener_tile_5:
     375.  00:82B5  2B                  	DEC		HL
     376.  00:82B6  06 7C               	LD		 B,TILEENERG5
     377.  00:82B8  B8                  	CP		 B
     378.  00:82B9  38 04               	JR		C,pinta_ener_tile_5_negro
     379.  00:82BB  36 0E               	LD		(HL),TILEMAPVERD
     380.  00:82BD  18 01               	JR		pinta_ener_tile_4
     381.  00:82BF                      pinta_ener_tile_5_negro:
     382.  00:82BF  71                  	LD		(HL),C
     383.  00:82C0                      
     384.  00:82C0                      pinta_ener_tile_4:
     385.  00:82C0  2B                  	DEC		HL
     386.  00:82C1  06 5D               	LD		 B,TILEENERG4
     387.  00:82C3  B8                  	CP		 B
     388.  00:82C4  38 04               	JR		C,pinta_ener_tile_4_negro
     389.  00:82C6  36 0F               	LD		(HL),TILEMAPAMAR
     390.  00:82C8  18 01               	JR		pinta_ener_tile_3
     391.  00:82CA                      pinta_ener_tile_4_negro:
     392.  00:82CA  71                  	LD		(HL),C
     393.  00:82CB                      	
     394.  00:82CB                      pinta_ener_tile_3:
     395.  00:82CB  2B                  	DEC		HL
     396.  00:82CC  06 3E               	LD		 B,TILEENERG3
     397.  00:82CE  B8                  	CP		 B
     398.  00:82CF  38 04               	JR		C,pinta_ener_tile_3_negro
     399.  00:82D1  36 0F               	LD		(HL),TILEMAPAMAR
     400.  00:82D3  18 01               	JR		pinta_ener_tile_2
     401.  00:82D5                      pinta_ener_tile_3_negro:
     402.  00:82D5  71                  	LD		(HL),C
     403.  00:82D6                      
     404.  00:82D6                      pinta_ener_tile_2:
     405.  00:82D6  2B                  	DEC		HL
     406.  00:82D7  06 1F               	LD		 B,TILEENERG2
     407.  00:82D9  B8                  	CP		 B
     408.  00:82DA  38 04               	JR		C,pinta_ener_tile_2_negro
     409.  00:82DC  36 10               	LD		(HL),TILEMAPROJO
     410.  00:82DE  18 01               	JR		fin_mira_pinta_energia		;siempre estará pintado el cuadro mínimo
     411.  00:82E0                      pinta_ener_tile_2_negro:
     412.  00:82E0  71                  	LD		(HL),C
     413.  00:82E1                      
     414.  00:82E1                      fin_mira_pinta_energia:
     415.  00:82E1  D9                  	EXX
     416.  00:82E2  C9                  	RET
     417.  00:82E3                      
     418.  00:82E3                      
     419.  00:82E3                      ;;=====================================================
     420.  00:82E3                      ;;PINTA_ENERGIA
     421.  00:82E3                      ;;=====================================================	
     422.  00:82E3                      ; función: 	actualiza el mapa de tiles para que en el próximo refresco se pinte la barra de energia actual
     423.  00:82E3                      ; entrada: 	array_aux_energia
     424.  00:82E3                      ; toca:		todo
     425.  00:82E3                      pinta_energia:
     426.  00:82E3  CD 8C 82            	CALL	mira_pinta_energia
     427.  00:82E6                      	
     428.  00:82E6  21 9D A5            	LD		HL, array_aux_energia
     429.  00:82E9  11 88 1A            	LD		DE, TILMAP + POSENERG 	;inicio posición en el mapa de tiles de las vidas
     430.  00:82EC  01 08 00            	LD		BC, NMAXVIDREL			;hay 8 posiciones para vidas/reliquias o espacios en negro si no tiene 8 vidas/reliquias
     431.  00:82EF  C3 5C 00            	JP		LDIRVM
     432.  00:82F2                      fin_pinta_energia:
     433.  00:82F2                      
     434.  00:82F2                      
     435.  00:82F2                      
     436.  00:82F2                      ;;=====================================================
     437.  00:82F2                      ;;BORRA_MAPA
     438.  00:82F2                      ;;=====================================================	
     439.  00:82F2                      ; función: 	pone todas las habitaciones del mapa a negro (los tiles del mapa los rellena con un array a 0 - caracter en negro)
     440.  00:82F2                      ; entrada: 	array_aux_mapa_limpiar
     441.  00:82F2                      ; salida: 	-
     442.  00:82F2                      ; toca:		AF
     443.  00:82F2                      borra_mapa:
     444.  00:82F2  D9                  	EXX
     445.  00:82F3                      	
     446.  00:82F3  21 A5 A5            	LD		HL,array_aux_mapa_limpiar
     447.  00:82F6  11 F8 1A            	LD		DE,TILMAP + POSMAPLIN1 	;inicio posición en el mapa de tiles de la primera fila del mapa
     448.  00:82F9  01 07 00            	LD		BC,NHABNIVEL			;cada nivel son 7 filas con 7 habitaciones "posibles"
     449.  00:82FC  CD 5C 00            	CALL	LDIRVM
     450.  00:82FF                      	
     451.  00:82FF  21 A5 A5            	LD		HL,array_aux_mapa_limpiar
     452.  00:8302  11 D8 1A            	LD		DE,TILMAP + POSMAPLIN2
     453.  00:8305  01 07 00            	LD		BC,NHABNIVEL
     454.  00:8308  CD 5C 00            	CALL	LDIRVM
     455.  00:830B                      
     456.  00:830B  21 A5 A5            	LD		HL,array_aux_mapa_limpiar
     457.  00:830E  11 B8 1A            	LD		DE,TILMAP + POSMAPLIN3
     458.  00:8311  01 07 00            	LD		BC,NHABNIVEL
     459.  00:8314  CD 5C 00            	CALL	LDIRVM
     460.  00:8317                      
     461.  00:8317  21 A5 A5            	LD		HL,array_aux_mapa_limpiar	
     462.  00:831A  11 98 1A            	LD		DE,TILMAP + POSMAPLIN4
     463.  00:831D  01 07 00            	LD		BC,NHABNIVEL
     464.  00:8320  CD 5C 00            	CALL	LDIRVM
     465.  00:8323                      
     466.  00:8323  21 A5 A5            	LD		HL,array_aux_mapa_limpiar	
     467.  00:8326  11 78 1A            	LD		DE,TILMAP + POSMAPLIN5
     468.  00:8329  01 07 00            	LD		BC,NHABNIVEL
     469.  00:832C  CD 5C 00            	CALL	LDIRVM
     470.  00:832F                      
     471.  00:832F  21 A5 A5            	LD		HL,array_aux_mapa_limpiar	
     472.  00:8332  11 58 1A            	LD		DE,TILMAP + POSMAPLIN6
     473.  00:8335  01 07 00            	LD		BC,NHABNIVEL
     474.  00:8338  CD 5C 00            	CALL	LDIRVM
     475.  00:833B                      
     476.  00:833B  21 A5 A5            	LD		HL,array_aux_mapa_limpiar	
     477.  00:833E  11 38 1A            	LD		DE,TILMAP + POSMAPLIN7
     478.  00:8341  01 07 00            	LD		BC,NHABNIVEL
     479.  00:8344  CD 5C 00            	CALL	LDIRVM
     480.  00:8347                      	
     481.  00:8347  D9                  	EXX
     482.  00:8348                      fin_borra_mapa:
     483.  00:8348  C9                  	RET
     484.  00:8349                      
     485.  00:8349                      
     486.  00:8349                      
     487.  00:8349                      
     488.  00:8349                      
     489.  00:8349                      ;;=====================================================
     490.  00:8349                      ;;PINTA_PUERTAS
     491.  00:8349                      ;;=====================================================	
     492.  00:8349                      ; función: 	examina A y mira si tiene que pintar puertas de los lados, arriba o abrajo o las escaleras (o no)
     493.  00:8349                      ; entrada: 	habitacion_actual 1 escalera 1 puerta arriba 1 pu der 1 pu aba 1 pu izq (si es 0 pinta pared)
     494.  00:8349                      ; salida: 	-
     495.  00:8349                      ; toca:		todo
     496.  00:8349                      pinta_puertas:
     497.  00:8349  CD 1B 81            	CALL	pinta_parte_superior_pantalla	;pinta pasillo y paredes
     498.  00:834C                      
     499.  00:834C  CD A1 80            	CALL	localiza_info_habitacion	;busca qué puertas debe pintar y lo mete en habitación_actual
     500.  00:834F                      	
     501.  00:834F  3A 5C A2            	LD		 A, (habitacion_actual)		;se mete en A porque la función pide A y para no buscar el valor 4 veces
     502.  00:8352                      
     503.  00:8352                      ;	BIT		 4, A
     504.  00:8352                      ;	CALL	nz, pinta_escalera
     505.  00:8352                      
     506.  00:8352  CB 5F               	BIT		 3, A
     507.  00:8354  C4 82 83            	CALL	nz, pinta_puerta_arr
     508.  00:8357                      
     509.  00:8357  CB 57               	BIT		 2, A
     510.  00:8359  C4 9D 83            	CALL	nz, pinta_puerta_der
     511.  00:835C                      
     512.  00:835C  CB 4F               	BIT		 1, A
     513.  00:835E  C4 67 83            	CALL	nz, pinta_puerta_aba
     514.  00:8361                      	
     515.  00:8361  CB 47               	BIT		 0, A
     516.  00:8363  C4 B8 83            	CALL	nz, pinta_puerta_izq
     517.  00:8366                      fin_pinta_puertas:
     518.  00:8366  C9                  	RET
     519.  00:8367                      
     520.  00:8367                      
     521.  00:8367                      
     522.  00:8367                      
     523.  00:8367                      ;;=====================================================
     524.  00:8367                      ;;PINTA_PUERTA_ABA
     525.  00:8367                      ;;=====================================================	
     526.  00:8367                      ; función: 	pinta la puerta de abajo
     527.  00:8367                      ; entrada: 	array_puerta_abajo, wordaux2, wordaux1
     528.  00:8367                      ; salida: 	-
     529.  00:8367                      ; toca:		HL,BC, DE
     530.  00:8367                      pinta_puerta_aba:
     531.  00:8367  F5                  	PUSH	AF
     532.  00:8368                      	
     533.  00:8368  21 D6 A5            	LD		HL, array_puerta_abajo			;guardo puntero al array a pintar (como pasar por referencia)
     534.  00:836B  22 A1 84            	LD		(wordaux2), HL					;en la variable wordaux2
     535.  00:836E  21 EE 19            	LD		HL, TILMAP + POSPUERABAJ		;calcula posición en tilemap
     536.  00:8371  22 9F 84            	LD		(wordaux1), HL					;guarda valor pos tilemap en wordaux1
     537.  00:8374                      
     538.  00:8374  3E 01               	LD		 A, 1							;nº de filas
     539.  00:8376  32 A3 84            	LD		(byteaux1), A
     540.  00:8379  3E 04               	LD		 A, 4							;nº de columnas
     541.  00:837B  32 A4 84            	LD		(byteaux2), A
     542.  00:837E                      	
     543.  00:837E  F1                  	POP		AF
     544.  00:837F                      	
     545.  00:837F  C3 5F 84            	JP		pinta_array
     546.  00:8382                      fin_pinta_puerta_aba:
     547.  00:8382                      
     548.  00:8382                      ;;=====================================================
     549.  00:8382                      ;;PINTA_PUERTA_ARR
     550.  00:8382                      ;;=====================================================	
     551.  00:8382                      ; función: 	pinta la puerta de arriba
     552.  00:8382                      ; entrada: 	array_puerta_arriba, wordaux2, wordaux1
     553.  00:8382                      ; salida: 	-
     554.  00:8382                      ; toca:		HL,BC, DE
     555.  00:8382                      pinta_puerta_arr:
     556.  00:8382  F5                  	PUSH	AF
     557.  00:8383                      	
     558.  00:8383  21 AD A5            	LD		HL, array_puerta_arriba			;guardo puntero al array a pintar (como pasar por referencia)
     559.  00:8386  22 A1 84            	LD		(wordaux2), HL					;en la variable wordaux2
     560.  00:8389  21 8E 18            	LD		HL, TILMAP + POSPUERARRI		;calcula posición en tilemap
     561.  00:838C  22 9F 84            	LD		(wordaux1), HL					;guarda valor pos tilemap en wordaux1
     562.  00:838F  3E 05               	LD		 A, 5							;nº de filas
     563.  00:8391  32 A3 84            	LD		(byteaux1), A
     564.  00:8394  3E 04               	LD		 A, 4							;nº de columnas
     565.  00:8396  32 A4 84            	LD		(byteaux2), A
     566.  00:8399                      	
     567.  00:8399  F1                  	POP		AF
     568.  00:839A                      	
     569.  00:839A  C3 5F 84            	JP		pinta_array
     570.  00:839D                      fin_pinta_puerta_arr:
     571.  00:839D                      
     572.  00:839D                      
     573.  00:839D                      ;;=====================================================
     574.  00:839D                      ;;PINTA_PUERTA_DER
     575.  00:839D                      ;;=====================================================	
     576.  00:839D                      ; función: 	pinta la puerta de la derecha
     577.  00:839D                      ; entrada: 	array_puerta_derecha, wordaux2, wordaux1
     578.  00:839D                      ; salida: 	-
     579.  00:839D                      ; toca:		HL,BC, DE
     580.  00:839D                      pinta_puerta_der:
     581.  00:839D  F5                  	PUSH	AF
     582.  00:839E  21 C1 A5            	LD		HL, array_puerta_derecha		;guardo puntero al array a pintar (como pasar por referencia)
     583.  00:83A1  22 A1 84            	LD		(wordaux2), HL					;en la variable wordaux2
     584.  00:83A4  21 FC 18            	LD		HL, TILMAP + POSPUERDERE		;calcula posición en tilemap
     585.  00:83A7  22 9F 84            	LD		(wordaux1), HL					;guarda valor pos tilemap en wordaux1
     586.  00:83AA                      
     587.  00:83AA  3E 07               	LD		 A, 7							;nº de filas
     588.  00:83AC  32 A3 84            	LD		(byteaux1), A
     589.  00:83AF  3E 03               	LD		 A, 3							;nº de columnas
     590.  00:83B1  32 A4 84            	LD		(byteaux2), A
     591.  00:83B4                      	
     592.  00:83B4  F1                  	POP		AF
     593.  00:83B5                      	
     594.  00:83B5  C3 5F 84            	JP		pinta_array
     595.  00:83B8                      fin_pinta_puerta_der:
     596.  00:83B8                      	
     597.  00:83B8                      ;;=====================================================
     598.  00:83B8                      ;;PINTA_PUERTA_IZQ
     599.  00:83B8                      ;;=====================================================	
     600.  00:83B8                      ; función: 	pinta la puerta de la izquierda
     601.  00:83B8                      ; entrada: 	array_puerta_izquierda, wordaux2, wordaux1
     602.  00:83B8                      ; salida: 	-
     603.  00:83B8                      ; toca:		HL,BC, DE
     604.  00:83B8                      pinta_puerta_izq:
     605.  00:83B8  F5                  	PUSH	AF
     606.  00:83B9                      	
     607.  00:83B9  21 DA A5            	LD		HL, array_puerta_izquierda		;guardo puntero al array a pintar (como pasar por referencia)
     608.  00:83BC  22 A1 84            	LD		(wordaux2), HL					;en la variable wordaux2
     609.  00:83BF  21 E1 18            	LD		HL, TILMAP + POSPUERIZQU		;calcula posición en tilemap
     610.  00:83C2  22 9F 84            	LD		(wordaux1), HL					;guarda valor pos tilemap en wordaux1
     611.  00:83C5                      
     612.  00:83C5  3E 07               	LD		 A, 7							;nº de filas
     613.  00:83C7  32 A3 84            	LD		(byteaux1), A
     614.  00:83CA  3E 03               	LD		 A, 3							;nº de columnas
     615.  00:83CC  32 A4 84            	LD		(byteaux2), A
     616.  00:83CF                      	
     617.  00:83CF  F1                  	POP		AF
     618.  00:83D0                      	
     619.  00:83D0  C3 5F 84            	JP		pinta_array
     620.  00:83D3                      fin_pinta_puerta_izq:
     621.  00:83D3                      
     622.  00:83D3                      
     623.  00:83D3                      ;;=====================================================
     624.  00:83D3                      ;;POSICIONA_EN_MAPA
     625.  00:83D3                      ;;=====================================================	
     626.  00:83D3                      ; función: 	en el mapa de marcadores de la derecha/abajo marca un cuadro en gris o con un muñeco
     627.  00:83D3                      ;			según el valor de prota.posición pinta entrá un muñeco y por donde vaya pasando el prota
     628.  00:83D3                      ;			quedará en gris
     629.  00:83D3                      ; entrada: 	elemento_pintar_mapa, prota_pos_mapy, prota_pos_mapx
     630.  00:83D3                      ; salida: 	-
     631.  00:83D3                      ; toca:		todos
     632.  00:83D3                      posiciona_en_mapa:
     633.  00:83D3                      	;#0238 es la posición en mapa de tiles de la esquina superior izquierda del mapa (569 en decimal)
     634.  00:83D3  21 38 1A            	LD		HL, TILMAP + POSMAPA;pos inicial
     635.  00:83D6                      	
     636.  00:83D6                      	;ahora se le calcula la fila a pintar ya que va de abajo a arriba y no como en el mapa + columna
     637.  00:83D6                      .sumar_fila:
     638.  00:83D6  3A 8B A5            	LD		 A, (prota_pos_mapy)
     639.  00:83D9  FE 01               	CP		 1
     640.  00:83DB  28 2A               	JR		 Z, .fila_1
     641.  00:83DD  3A 8B A5            	LD		 A, (prota_pos_mapy)
     642.  00:83E0  FE 02               	CP		 2
     643.  00:83E2  28 2A               	JR		 Z, .fila_2
     644.  00:83E4  3A 8B A5            	LD		 A, (prota_pos_mapy)
     645.  00:83E7  FE 03               	CP		 3
     646.  00:83E9  28 2A               	JR		 Z, .fila_3
     647.  00:83EB  3A 8B A5            	LD		 A, (prota_pos_mapy)
     648.  00:83EE  FE 04               	CP		 4
     649.  00:83F0  28 2A               	JR		 Z, .fila_4
     650.  00:83F2  3A 8B A5            	LD		 A, (prota_pos_mapy)
     651.  00:83F5  FE 05               	CP		 5
     652.  00:83F7  28 2A               	JR		 Z, .fila_5
     653.  00:83F9  3A 8B A5            	LD		 A, (prota_pos_mapy)
     654.  00:83FC  FE 06               	CP		 6
     655.  00:83FE  28 2A               	JR		 Z, .sumar_columna
     656.  00:8400                      	;no consulto la 0 porque si no es ninguna de las anteriores es 0 y por tanto sería un jr fila_0
     657.  00:8400                      	
     658.  00:8400                      .fila_0:
     659.  00:8400  11 C0 00            	LD		DE, 192
     660.  00:8403  19                  	ADD		HL, DE			;nota: se que repito el ADD pero la otra opción es inicializar DE y ya tarda mucho la funicón (es por velicidad)
     661.  00:8404  C3 2A 84            	JP		.sumar_columna
     662.  00:8407                      .fila_1:
     663.  00:8407  11 A0 00            	LD		DE, 160
     664.  00:840A  19                  	ADD		HL, DE
     665.  00:840B  C3 2A 84            	JP		.sumar_columna
     666.  00:840E                      .fila_2:
     667.  00:840E  11 80 00            	LD		DE, 128
     668.  00:8411  19                  	ADD		HL, DE
     669.  00:8412  C3 2A 84            	JP		.sumar_columna
     670.  00:8415                      .fila_3:
     671.  00:8415  11 60 00            	LD		DE, 96
     672.  00:8418  19                  	ADD		HL, DE
     673.  00:8419  C3 2A 84            	JP		.sumar_columna
     674.  00:841C                      .fila_4:
     675.  00:841C  11 40 00            	LD		DE, 64
     676.  00:841F  19                  	ADD		HL, DE
     677.  00:8420  C3 2A 84            	JP		.sumar_columna
     678.  00:8423                      .fila_5:
     679.  00:8423  11 20 00            	LD		DE, 32
     680.  00:8426  19                  	ADD		HL, DE
     681.  00:8427  C3 2A 84            	JP		.sumar_columna
     682.  00:842A                      .fila_6:
     683.  00:842A                      	;pongo fila_6 por poner ya que si es la fila 6 equiv. a primera fila del mapa y por tanto no suma fila
     684.  00:842A                      	
     685.  00:842A                      	
     686.  00:842A                      .sumar_columna:
     687.  00:842A  3A 8A A5            	LD 		 A, (prota_pos_mapx) ;POS X
     688.  00:842D  16 00               	LD		 D, 0
     689.  00:842F  5F                  	LD		 E, A
     690.  00:8430  19                  	ADD		HL, DE
     691.  00:8431                      	
     692.  00:8431                      	;resultado en BC para usar en la función pinta_tile_suelto
     693.  00:8431  44                  	LD		 B, H
     694.  00:8432  4D                  	LD		 C, L
     695.  00:8433                      	
     696.  00:8433                      	;terminado de fijar la coordenada recuperamos a para ver el tipo
     697.  00:8433  3A AC A5            	LD		 A, (elemento_pintar_mapa)
     698.  00:8436  FE 09               	CP		 TILEGRISM
     699.  00:8438  CA 40 84            	JP		 Z, pinta_pos_mapa_vacio
     700.  00:843B  16 13               	LD		 D, TILEPROTAM
     701.  00:843D  C3 42 84            	JP		fin_pinta_pos_mapa
     702.  00:8440                      pinta_pos_mapa_vacio:
     703.  00:8440  16 09               	LD		 D, TILEGRISM	
     704.  00:8442                      
     705.  00:8442                      fin_pinta_pos_mapa:
     706.  00:8442  C3 7E 82            	JP		pinta_tile_suelto
     707.  00:8445                      fin_posiciona_en_mapa:
     708.  00:8445                      
     709.  00:8445                      
     710.  00:8445                      
     711.  00:8445                      
     712.  00:8445                      ;;=====================================================
     713.  00:8445                      ;;EFECTO_IMAGEN_TIRA_RELIQUIA
     714.  00:8445                      ;;=====================================================	
     715.  00:8445                      ; función: 	hace que el fondo de la pantalla parpadee N veces
     716.  00:8445                      ; entrada: 	actualiza_reliquias_sn
     717.  00:8445                      ; salida: 	-
     718.  00:8445                      ; toca: 	todo
     719.  00:8445                      efecto_imagen_tira_reliquia:
     720.  00:8445  3E 14               	LD		 A, 20;RETARDOREL
     721.  00:8447  47                  	LD		 B, A
     722.  00:8448                      
     723.  00:8448                      .parpadea_fondo:
     724.  00:8448  C5                  	PUSH	BC
     725.  00:8449  21 71 A5            	LD		HL, color_bomba1
     726.  00:844C  CD E2 80            	CALL	color_pantalla
     727.  00:844F                      	
     728.  00:844F                      	;~ PUSH	BC
     729.  00:844F                      	;~ LD		 A, 255
     730.  00:844F                      	;~ LD		 B, A
     731.  00:844F                      ;~ .bucle_de_espera:
     732.  00:844F                      	;~ NOP
     733.  00:844F                      	;~ DJNZ	 .bucle_de_espera
     734.  00:844F                      	;~ POP		BC
     735.  00:844F  76                  	HALT
     736.  00:8450                      
     737.  00:8450                      	
     738.  00:8450  21 74 A5            	LD		HL, color_bomba2
     739.  00:8453  CD E2 80            	CALL	color_pantalla
     740.  00:8456  C1                  	POP		BC
     741.  00:8457  10 EF               	DJNZ	.parpadea_fondo
     742.  00:8459                      	
     743.  00:8459  21 6E A5            	LD		HL, color_base
     744.  00:845C  C3 E2 80            	JP		color_pantalla
     745.  00:845F                      fin_efecto_imagen_tira_reliquia:
     746.  00:845F                      
     747.  00:845F                      
     748.  00:845F                      
     749.  00:845F                      
     750.  00:845F                      ;=====================================================
     751.  00:845F                      ;;PINTA_ARRAY
     752.  00:845F                      ;;=====================================================	
     753.  00:845F                      ;;funcion:  (pinta el mismo tile) se le pasa un array con posiciones de tiles y coordenadas x e y y los pinta en screen 2
     754.  00:845F                      ;;entrada:	wordaux1 (pos inicio sc2 donde pintar) y wordaux2 (puntero al array a pintar), BC (posición en tilemap) , D filas y E columnas
     755.  00:845F                      ;;salida:	-
     756.  00:845F                      ;;importante: necesita de una variable wordaux1 tipo WD (wordaux1: 	DW	0)
     757.  00:845F                      ;; ejemplo llamada:
     758.  00:845F                      	;~ LD		HL,array_tiles					;guardo puntero al array a pintar (como psar por referencia)
     759.  00:845F                      	;~ LD		(wordaux2),HL					;en la variable wordaux2
     760.  00:845F                      	;~ LD		HL,SC2MAP + 256 + 32			;calcula posición en tilemap
     761.  00:845F                      	;~ LD		(wordaux1),HL					;guarda valor pos tilemap en wordaux1
     762.  00:845F                      	;~ LD		B,H								;coloca posición tilemap BC
     763.  00:845F                      	;~ LD		C,L
     764.  00:845F                      	;~ LD		D,2								;nº de filas ahora byteaux1
     765.  00:845F                      	;~ LD		E,3								;nº de columnas ahora byteaux2
     766.  00:845F                      	;~ CALL	pinta_array
     767.  00:845F                      
     768.  00:845F                      pinta_array:
     769.  00:845F  08                  	EX		AF, AF'
     770.  00:8460                      	
     771.  00:8460  3A A3 84            	LD		 A, (byteaux1)
     772.  00:8463  57                  	LD		 D, A
     773.  00:8464  3A A4 84            	LD		 A, (byteaux2)
     774.  00:8467  5F                  	LD		 E, A
     775.  00:8468                      
     776.  00:8468                      	
     777.  00:8468  2A 9F 84            	LD		HL, (wordaux1)
     778.  00:846B  44                  	LD		 B, H							;coloca posición tilemap BC
     779.  00:846C  4D                  	LD		 C, L
     780.  00:846D                      	
     781.  00:846D                      	;contamos con que la posición "global" en el tilemap está ya en BC
     782.  00:846D                      	;y el puntero al array a pintar en wordaux2 y la posición en tilemap sc2 en wordaux1
     783.  00:846D                      	;inicializa
     784.  00:846D  DB 99               	IN		 A,(REGEST)		;leer registro de estado (recomendado)
     785.  00:846F                      	
     786.  00:846F                      	;coloca puntero para pintar tile según BC
     787.  00:846F  79                  	LD		 A,C			;primero byte bajo	
     788.  00:8470  D3 99               	OUT		(REGEST),A
     789.  00:8472  78                  	LD		 A,B			;después byte alto  ********************** preguntar a Fernando cómo que byte bajo es B
     790.  00:8473  F6 40               	OR		1000000b		;+64
     791.  00:8475  D3 99               	OUT		(REGEST),A
     792.  00:8477                      
     793.  00:8477                      	
     794.  00:8477  2A A1 84            	LD		HL,(wordaux2)	;HL es lo que se pintará y le he pasado el puntero del array tilemap a pintar
     795.  00:847A                      .pa_pinta_fila:
     796.  00:847A  43                  	LD		 B,E
     797.  00:847B                      .pa_pinta_columnas: 		;finta la fila (pintando las columnas)
     798.  00:847B  7E                  	LD		 A,(HL)
     799.  00:847C  D3 98               	OUT		(REGESCVDP),A	;escribe A en VRAM en la posición indicada por los dos OUT anteriores
     800.  00:847E  23                  	INC		HL
     801.  00:847F  10 FA               	DJNZ	.pa_pinta_columnas
     802.  00:8481                      	
     803.  00:8481                      	;no es una solución elegante lo de repetir código pero queda claro
     804.  00:8481                      	;por si hay otra fila
     805.  00:8481  E5                  	PUSH	HL
     806.  00:8482  2A 9F 84            	LD		HL,(wordaux1)
     807.  00:8485  01 20 00            	LD		BC,32
     808.  00:8488  09                  	ADD		HL,BC
     809.  00:8489  22 9F 84            	LD		(wordaux1),HL
     810.  00:848C  44                  	LD		B,H
     811.  00:848D  4D                  	LD		C,L
     812.  00:848E  E1                  	POP		HL
     813.  00:848F                      	
     814.  00:848F  79                  	LD		 A,C			;primero byte bajo	
     815.  00:8490  D3 99               	OUT		(REGEST),A
     816.  00:8492  78                  	LD		 A,B			;después byte alto 
     817.  00:8493  F6 40               	OR		1000000b		;+64
     818.  00:8495  D3 99               	OUT		(REGEST),A
     819.  00:8497                      	
     820.  00:8497                      	;si hay otra fila repite
     821.  00:8497  15                  	DEC		 D
     822.  00:8498  7A                  	LD		 A,D		;¿hay otra fila?
     823.  00:8499  B7                  	OR		 A
     824.  00:849A  C4 7A 84            	CALL	NZ,.pa_pinta_fila
     825.  00:849D                      	
     826.  00:849D  08                  	EX		AF, AF'
     827.  00:849E                      fin_pinta_array:
     828.  00:849E  C9                  	RET
     829.  00:849F                      ;;variables asocidas a la función pinta_array
     830.  00:849F                      ;; por de pronto la dejo aquí
     831.  00:849F  00 00               wordaux1:		DW	0	;almacena la posición en el tilemap 0 al 675
     832.  00:84A1  00 00               wordaux2:		DW	0	;almacena puntero a array de tiles (posiciones en realidad) a pintar (posiciones repetidas en los 3 bancos)
     833.  00:84A3  00                  byteaux1:		DB	0	;nº filas Registro D
     834.  00:84A4  00                  byteaux2:		DB	0	;nº columnas Registro E
     835.  00:84A5                      
     836.  00:84A5                      
     114   00:84A5                      	
     115   00:84A5                      	include "subr_sprites.asm"
       1.  00:84A5                      
       2.  00:84A5                      ;;=====================================================
       3.  00:84A5                      ;;SUBRUTINAS ENCARGADAS DE MANEJAR LOS SPRITES
       4.  00:84A5                      ;;=====================================================	
       5.  00:84A5                      
       6.  00:84A5                      
       7.  00:84A5                      ;; PREGUNTAR SI A FERNANDO SI ES MEJOR USAR LISTAS O ALGO PARA AHORRAR CÓDIGO
       8.  00:84A5                      
       9.  00:84A5                      
      10.  00:84A5                      
      11.  00:84A5                      
      12.  00:84A5                      ;;=====================================================
      13.  00:84A5                      ;;CARGA_PATRONES_SPRITES_NIVEL
      14.  00:84A5                      ;;=====================================================	
      15.  00:84A5                      ; función: 	examina el nivel y carga los patrones específicos necesarios
      16.  00:84A5                      ; entrada: 	-
      17.  00:84A5                      ; salida: 	-
      18.  00:84A5                      ; toca: 	-
      19.  00:84A5                      carga_patrones_sprites_nivel:
      20.  00:84A5                      	
      21.  00:84A5  CD B0 84            	CALL 	carga_patrones_nivel_comunes
      22.  00:84A8                      	
      23.  00:84A8                      	;carga atrones no comunes
      24.  00:84A8  3A 87 A5            	LD		 A, (prota_nivel)
      25.  00:84AB  B7                  	OR		 A
      26.  00:84AC  CA BC 84            	JP		 Z, carga_patrones_sprites_nivel1
      27.  00:84AF                      	
      28.  00:84AF                      	
      29.  00:84AF                      fin_carga_patrones_sprites_nivel:
      30.  00:84AF  C9                  	RET		;dejo este ret de momento pero cuando la subrutina esté terminada sobrará
      31.  00:84B0                      
      32.  00:84B0                      	;RET comparo numeros con jp para incluir el RET con lo que el último ret me sobra
      33.  00:84B0                      
      34.  00:84B0                      ;;=====================================================
      35.  00:84B0                      ;;CARGA_PATRONES_SPRITES_NIVEL_COMUNES
      36.  00:84B0                      ;;=====================================================	
      37.  00:84B0                      ; función: 	carga los patrones comunes en todos los niveles
      38.  00:84B0                      ; entrada: 	-
      39.  00:84B0                      ; salida: 	-
      40.  00:84B0                      ; toca: 	-
      41.  00:84B0                      carga_patrones_nivel_comunes:	
      42.  00:84B0  21 DC 98            	LD		HL, sprites_comunes
      43.  00:84B3  11 00 38            	LD		DE, SPRTBL
      44.  00:84B6  01 C0 00            	LD		BC, fin_sprites_comunes-sprites_comunes
      45.  00:84B9  C3 5C 00            	JP		LDIRVM
      46.  00:84BC                      fin_carga_patrones_nivel_comunes:
      47.  00:84BC                      
      48.  00:84BC                      
      49.  00:84BC                      ;;=====================================================
      50.  00:84BC                      ;;CARGA_PATRONES_SPRITES_NIVEL1
      51.  00:84BC                      ;;=====================================================	
      52.  00:84BC                      ; función: 	copia los patrones de los sprites que e van a usar en el nivel 1 en vram
      53.  00:84BC                      ; entrada: 	-
      54.  00:84BC                      ; salida: 	-
      55.  00:84BC                      ; toca: 	-
      56.  00:84BC                      carga_patrones_sprites_nivel1:
      57.  00:84BC                      
      58.  00:84BC                      
      59.  00:84BC                      	;~ ;sprite sprite_reliquia
      60.  00:84BC                      	;~ LD		HL,sprite_reliquia
      61.  00:84BC                      	;~ LD		DE,#3880
      62.  00:84BC                      	;~ LD		BC,32				;32 bytes (sprites de 2 x 2)
      63.  00:84BC                      	;~ CALL	LDIRVM
      64.  00:84BC                      
      65.  00:84BC                      fin_carga_patrones_sprites:
      66.  00:84BC  C9                  	RET
      67.  00:84BD                      
      68.  00:84BD                      
      69.  00:84BD                      ;;=====================================================
      70.  00:84BD                      ;;ACTUALIZA_ARRAY_SPRITES_VRAM
      71.  00:84BD                      ;;=====================================================	
      72.  00:84BD                      ; función: 	copia el array con los valores de los sprites (pos, color, plano) en VRAM
      73.  00:84BD                      ; entrada: 	-
      74.  00:84BD                      ; salida: 	-
      75.  00:84BD                      ; toca: 	todos los registros. Como me interesa la velocidad, si necesito copiar de algo lo hago fuera
      76.  00:84BD                      render_sprites:
      77.  00:84BD                      	;volcando el array con toda la info de los sprites a la zona de atributos de sprites
      78.  00:84BD  21 6F A6            	LD		HL,array_sprites
      79.  00:84C0  11 00 1B            	LD		DE,SPRART
      80.  00:84C3  01 80 00            	LD		BC,4 * 32				;32 sprites x 4 bytes controlando el sprite (Y, X, plano, color)
      81.  00:84C6  C3 5C 00            	JP		LDIRVM
      82.  00:84C9                      fin_actualiza_array_sprites_vram:
      83.  00:84C9                      
      84.  00:84C9                      
      85.  00:84C9                      ;;=====================================================
      86.  00:84C9                      ;;VUELCA_RESULTADO_PUNTOMIRA_ARRAY
      87.  00:84C9                      ;;=====================================================	
      88.  00:84C9                      ; función: 	coloca los valores del punto de mira en la variable array_sprites para ser volcados en VRAM
      89.  00:84C9                      ; entrada: 	array_sprites_pm, prota.XXXXX
      90.  00:84C9                      ; salida: 	-
      91.  00:84C9                      ; toca: 	-
      92.  00:84C9                      vuelca_resultado_puntomira_array:
      93.  00:84C9  DD 21 6F A6         	LD		IX, array_sprites_pm
      94.  00:84CD                      	;posición y de los dos sprites que conforman el punto de mira
      95.  00:84CD  3A 78 A5            	LD		 A, (prota.posy)
      96.  00:84D0  DD 77 00            	LD		(IX  ), A
      97.  00:84D3  DD 77 04            	LD		(IX+4), A
      98.  00:84D6                      	;posición x de los dos sprites que conforman el punto de mira
      99.  00:84D6  3A 77 A5            	LD		 A, (prota.posx)
     100.  00:84D9  DD 77 01            	LD		(IX+1), A
     101.  00:84DC  DD 77 05            	LD		(IX+5), A
     102.  00:84DF                      	;plano
     103.  00:84DF  DD 36 02 00         	LD		(IX+2), 0
     104.  00:84E3  DD 36 06 04         	LD		(IX+6), 4	;al ser sprites de 16x16 hay que ir de 4 en 4
     105.  00:84E7                      	;color
     106.  00:84E7  3A 79 A5            	LD		 A, (prota.escena)
     107.  00:84EA  B7                  	OR		 A
     108.  00:84EB  C2 F7 84            	JP		NZ,.codigo_color_2
     109.  00:84EE                      .codigo_color_1:
     110.  00:84EE  DD 36 03 0F         	LD		(IX+3), COLBLANCO
     111.  00:84F2  DD 36 07 08         	LD		(IX+7), COLROJO
     112.  00:84F6  C9                  	RET
     113.  00:84F7                      .codigo_color_2:
     114.  00:84F7  DD 36 03 08         	LD		(IX+3), COLROJO
     115.  00:84FB  DD 36 07 0F         	LD		(IX+7), COLBLANCO
     116.  00:84FF  C9                  	RET
     117.  00:8500                      fin_vuelca_resultado_puntomira_array:
     118.  00:8500                      
     119.  00:8500                      
     120.  00:8500                      ;;=====================================================
     121.  00:8500                      ;;CHECK_PLAYER
     122.  00:8500                      ;;=====================================================	
     123.  00:8500                      ; función: 	MIRA EL CONTROL Y APLICA LA LOGICA DE MOVIMIENTO DEL PROTAGONISTA
     124.  00:8500                      ; entrada: 	-
     125.  00:8500                      ; salida: 	-
     126.  00:8500                      ; toca: 	A
     127.  00:8500                      check_player:
     128.  00:8500  CD 9F 85            	CALL	update_controllers_status
     129.  00:8503  B7                  	OR		 A
     130.  00:8504  C8                  	RET		 Z						;si no se ha pulsado nada no se necesita mirar nada
     131.  00:8505                      
     132.  00:8505  CB 1F               	RR		 A
     133.  00:8507  DC 20 85            	CALL	 C, mueve_arriba
     134.  00:850A  CB 1F               	RR		 A
     135.  00:850C  DC 3C 85            	CALL	 C, mueve_abajo
     136.  00:850F  CB 1F               	RR		 A
     137.  00:8511  DC 4B 85            	CALL	 C, mueve_izquierda
     138.  00:8514  CB 1F               	RR		 A
     139.  00:8516  DC 2D 85            	CALL	 C, mueve_derecha
     140.  00:8519                      	
     141.  00:8519                      	;zona para mirar disparo Recibe A que tendrá 0000 0 0 X-letra M X-espacio 
     142.  00:8519  CD 58 85            	CALL	mira_disparo
     143.  00:851C                      	
     144.  00:851C  C3 C9 84            	JP		vuelca_resultado_puntomira_array
     145.  00:851F                      f;in_check_player:
     146.  00:851F  C9                  	RET
     147.  00:8520                      
     116   00:8520                      	
     117   00:8520                      	include "subr_teclado_joy.asm"
       1.  00:8520                      ;;=====================================================
       2.  00:8520                      ;;SUBRUTINAS QUE CAPTURN EL JOYSTICK Y TECLADO Y MUEVEN PUNTO DE MIRA
       3.  00:8520                      ;;=====================================================
       4.  00:8520                      
       5.  00:8520                      ;;=====================================================
       6.  00:8520                      ;;MUEVE_ARRIBA
       7.  00:8520                      ;;=====================================================	
       8.  00:8520                      ; función: 	decrementa y si se no sale de los límites el valor del punto de mira a la derecha
       9.  00:8520                      ; entrada: 	-
      10.  00:8520                      ; salida: 	-
      11.  00:8520                      ; toca: 	-
      12.  00:8520                      mueve_arriba:
      13.  00:8520  F5                  	PUSH		AF
      14.  00:8521                      	
      15.  00:8521  3A 78 A5            	LD		 	 A, (prota.posy)
      16.  00:8524  3D                  	DEC			 A
      17.  00:8525  CA 2B 85            	JP			 Z,.no_decrementa_y
      18.  00:8528  32 78 A5            	LD			(prota.posy), A
      19.  00:852B                      	
      20.  00:852B                      .no_decrementa_y:
      21.  00:852B  F1                  	POP			AF
      22.  00:852C                      fin_mueve_arriba:
      23.  00:852C  C9                  	RET
      24.  00:852D                      
      25.  00:852D                      
      26.  00:852D                      ;;=====================================================
      27.  00:852D                      ;;MUEVE_DERECHA
      28.  00:852D                      ;;=====================================================	
      29.  00:852D                      ; función: 	incrementa si se no sale de los límites el valor del punto de mira a la derecha
      30.  00:852D                      ; entrada: 	-
      31.  00:852D                      ; salida: 	-
      32.  00:852D                      ; toca: 	-
      33.  00:852D                      mueve_derecha:
      34.  00:852D  F5                  	PUSH		AF
      35.  00:852E                      	
      36.  00:852E  3A 77 A5            	LD		 	 A, (prota.posx)
      37.  00:8531  3C                  	INC			 A
      38.  00:8532  FE EF               	CP			 A, LIMPANTDER - 16
      39.  00:8534  CA 3A 85            	JP			 Z, .no_incrementa_x
      40.  00:8537  32 77 A5            	LD			(prota.posx), A
      41.  00:853A                      	
      42.  00:853A                      .no_incrementa_x:
      43.  00:853A  F1                  	POP			AF
      44.  00:853B                      fin_mueve_derecha:
      45.  00:853B  C9                  	RET
      46.  00:853C                      
      47.  00:853C                      
      48.  00:853C                      ;;=====================================================
      49.  00:853C                      ;;MUEVE_ABAJO
      50.  00:853C                      ;;=====================================================	
      51.  00:853C                      ; función: 	incrementa y si se no sale de los límites el valor del punto de mira abajo
      52.  00:853C                      ; entrada: 	-
      53.  00:853C                      ; salida: 	-
      54.  00:853C                      ; toca: 	-
      55.  00:853C                      mueve_abajo:
      56.  00:853C  F5                  	PUSH		AF
      57.  00:853D                      	
      58.  00:853D  3A 78 A5            	LD		 	 A, (prota.posy)
      59.  00:8540  3C                  	INC			 A
      60.  00:8541  FE 70               	CP			 A, LIMPANTABA - 16
      61.  00:8543  CA 49 85            	JP			 Z,.no_incrementa_y
      62.  00:8546  32 78 A5            	LD			(prota.posy), A
      63.  00:8549                      	
      64.  00:8549                      .no_incrementa_y:
      65.  00:8549  F1                  	POP			AF
      66.  00:854A                      fin_mueve_abajo:
      67.  00:854A  C9                  	RET
      68.  00:854B                      	
      69.  00:854B                      	
      70.  00:854B                      ;;=====================================================
      71.  00:854B                      ;;MUEVE_IZQUIERDA
      72.  00:854B                      ;;=====================================================	
      73.  00:854B                      ; función: 	decrementa x si se no sale de los límites el valor del punto de mira a la izquierda
      74.  00:854B                      ; entrada: 	-
      75.  00:854B                      ; salida: 	-
      76.  00:854B                      ; toca: 	-
      77.  00:854B                      mueve_izquierda:
      78.  00:854B  F5                  	PUSH		AF
      79.  00:854C                      	
      80.  00:854C  3A 77 A5            	LD		 	 A, (prota.posx)
      81.  00:854F  3D                  	DEC			 A
      82.  00:8550                      ;	CP			 A, LIMPANTIZQ
      83.  00:8550  CA 56 85            	JP			 Z,.no_decrementa_x
      84.  00:8553  32 77 A5            	LD			(prota.posx), A
      85.  00:8556                      	
      86.  00:8556                      .no_decrementa_x:
      87.  00:8556  F1                  	POP			AF
      88.  00:8557                      fin_mueve_izquierda:
      89.  00:8557  C9                  	RET
      90.  00:8558                      
      91.  00:8558                      
      92.  00:8558                      
      93.  00:8558                      ;;=====================================================
      94.  00:8558                      ;;MIRA_DISPARO
      95.  00:8558                      ;;=====================================================	
      96.  00:8558                      ; función: 	Mira si se ha pulsado alguno de los dos disparos
      97.  00:8558                      ; entrada: 	A que tendrá 0000 0 0 X-letra M X-espacio 
      98.  00:8558                      ; salida: 	-
      99.  00:8558                      ; toca: 	A, B
     100.  00:8558                      mira_disparo:
     101.  00:8558                      .mira_boton_pulsado1:
     102.  00:8558  CB 1F               	RR		 A						;preparo en el carry si se ha pulsado botón 1
     103.  00:855A  D2 83 85            	JP		 NC, .mira_boton_pulsado2					
     104.  00:855D  F5                  	PUSH	AF						;copia A para usarlo después
     105.  00:855E                      	;se ha pulsado barra o boton 1
     106.  00:855E  3A 7C A5            	LD		 A, (prota.cadencia)
     107.  00:8561  B7                  	OR		 A
     108.  00:8562  CA 70 85            	JP		 Z, .efectua_disparo	;toca efectuar disparo realmente porque se ha pulsado lo suficiente el disparo
     109.  00:8565                      .no_efectua_disparo: ;IF
     110.  00:8565  3D                  		DEC		 A
     111.  00:8566  32 7C A5            		LD		(prota.cadencia), A	;resto cadencia hasta próximo disparo "real" (no automático por haber pulsado una tecla e ir demasiado rápido)
     112.  00:8569  AF                  		XOR		 A 
     113.  00:856A  32 79 A5            		LD		(prota.escena), A
     114.  00:856D  C3 82 85            		JP		.fin_mira_disparo1
     115.  00:8570                      .efectua_disparo:	;ELSE
     116.  00:8570                      		;cambio colores del sprite
     117.  00:8570  3A 79 A5            		LD		 A, (prota.escena)
     118.  00:8573  2F                  		CPL		 
     119.  00:8574  32 79 A5            		LD		(prota.escena), A
     120.  00:8577                      		;reseteo cadencia para el próximo disparo
     121.  00:8577  3E 04               		LD		 A, LIMCADENCIA						;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
     122.  00:8579  32 7C A5            		LD		 (prota.cadencia), A				;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
     123.  00:857C                      		;ejecuto sonido								;; ajustar cadencia y que cuando el disparo sea efectivo se reseteen los colores
     124.  00:857C  AF                  		XOR		 A
     125.  00:857D  0E 01               		LD		 C, 1
     126.  00:857F  CD 47 8C            		CALL	ayFX_INIT	
     127.  00:8582                      .fin_mira_disparo1
     128.  00:8582                      
     129.  00:8582  F1                  	POP		AF
     130.  00:8583                      .mira_boton_pulsado2:
     131.  00:8583  CB 1F               	RR		 A
     132.  00:8585  D0                  	RET		 NC
     133.  00:8586                      	;se ha pulsado shift o boton 2
     134.  00:8586                      	
     135.  00:8586  3A 89 A5            	LD		 A, (prota_reliquias)	;miro si le quedan reliquias
     136.  00:8589  B7                  	OR		 A
     137.  00:858A  C8                  	RET		 Z						;si no le quedan salgo ya
     138.  00:858B                      	
     139.  00:858B                      	;actuaciones si se usa la reliquia botón 2 o M y quedn reliquias.. (antes ya se puso el valor en A)
     140.  00:858B  3A 89 A5            	LD		A, (prota_reliquias)
     141.  00:858E  3D                  	DEC		 A
     142.  00:858F  32 89 A5            	LD		(prota_reliquias), A
     143.  00:8592                      	
     144.  00:8592  3E 01               	LD		 A, 1
     145.  00:8594  0E 01               	LD		 C, 1
     146.  00:8596  CD 47 8C            	CALL	ayFX_INIT
     147.  00:8599                      	
     148.  00:8599  CD 45 84            	CALL 	efecto_imagen_tira_reliquia
     149.  00:859C                      	
     150.  00:859C  C3 63 82            	JP		pinta_reliquias
     151.  00:859F                      fin_mira_disparo:
     152.  00:859F                      ;	RET		
     153.  00:859F                      
     154.  00:859F                      
     155.  00:859F                      ;;============================================================
     156.  00:859F                      ;;Código de D. Fernando García (BitVision) (al que siempre le estaré agradecido)
     157.  00:859F                      ;check_8th_keyboard_row
     158.  00:859F                      ;read_joy_0
     159.  00:859F                      ;check_8th_keyboard_row
     160.  00:859F                      ;check_4th_keyboard_row
     161.  00:859F                      ;;============================================================
     162.  00:859F                      ;;  usa constantes:
     163.  00:859F                      ;PSG_A  equ  0a0h  ;reg address
     164.  00:859F                      ;PSG_W  equ  0a1h  ;reg data WR
     165.  00:859F                      ;PSG_R  equ  0a2h  ;reg data
     166.  00:859F                      
     167.  00:859F                      ;;=====================================================
     168.  00:859F                      ;;update_controllers_status
     169.  00:859F                      ;;=====================================================	
     170.  00:859F                      ;depends on the next rountine
     171.  00:859F                      ;  returns
     172.  00:859F                      ;  a - 0P2TRLDU
     173.  00:859F                      
     174.  00:859F                      update_controllers_status:
     175.  00:859F  CD EA 85                 call  check_8th_keyboard_row
     176.  00:85A2                      [4]  rrc    a
     176.  00:85A2  CB 0F CB 0F CB 0F CB 0F 
     177.  00:85AA  47                       ld    b,a    		;save for later  xxxTRDUL
     178.  00:85AB                      
     179.  00:85AB  E6 01                    and    #01    		;save L
     180.  00:85AD  CB 27                    sla    a
     181.  00:85AF  CB 27                    sla    a    		;now 00000L00
     182.  00:85B1  4F                       ld    c,a    		;save for later
     183.  00:85B2                      
     184.  00:85B2  78                       ld    a,b    		;again we've got xxxTRDUL. I am interested on leaving 000000DU on a
     185.  00:85B3  CB 3F                    srl    a
     186.  00:85B5  E6 03                    and    00000011b
     187.  00:85B7                      						;we've got 000000DU on a
     188.  00:85B7  B1                       or    c    		;now we've got 00000LDU
     189.  00:85B8  4F                       ld    c,a    		;save for later
     190.  00:85B9                      
     191.  00:85B9  78                       ld    a,b
     192.  00:85BA  E6 18                    and    00011000b 	;we've got 000TR000
     193.  00:85BC  B1                       or    c
     194.  00:85BD                           ;finally    000TRLDU
     195.  00:85BD                      
     196.  00:85BD                           ;and    00000100   ;preserve just
     197.  00:85BD  47                       ld    b,a    		;save for later
     198.  00:85BE  CD F8 85                 call  check_4th_keyboard_row      ;check M & P
     199.  00:85C1  F5                       push  af
     200.  00:85C2  E6 04                    and    00000100b	;filter just M
     201.  00:85C4  87                       add    a
     202.  00:85C5  87                       add    a
     203.  00:85C6  87                       add    a           ;shift 3th to 6th bit
     204.  00:85C7  B0                       or    b           	;merge with previous
     205.  00:85C8  47                       ld    b,a
     206.  00:85C9                      
     207.  00:85C9  CD D6 85                 call  read_joy_0
     208.  00:85CC  E6 3F                    and    00111111b  	;we want just 002TRLDU  from joystick    (2 is second trigger)
     209.  00:85CE  B0                       or    b      		;added 000TRLDU from keyboard
     210.  00:85CF  47                       ld    b,a      	;save for later
     211.  00:85D0  F1                       pop    af      	; let's check on P
     212.  00:85D1                      
     213.  00:85D1  E6 20                    and    00100000b
     214.  00:85D3  87                       add    a      		;P status on 6th bit  ... so 0P2TRLDU
     215.  00:85D4  B0                       or    b
     216.  00:85D5                      
     217.  00:85D5  C9                       ret
     218.  00:85D6                      
     219.  00:85D6                      
     220.  00:85D6                      ;ret
     221.  00:85D6                      ;  a -            xx2TRLDU
     222.  00:85D6                      read_joy_0:
     223.  00:85D6  F3                         di
     224.  00:85D7  3E 0F                      ld    a,15
     225.  00:85D9  D3 A0                      out    [PSG_A],a
     226.  00:85DB  DB A2                      in    a,[PSG_R]
     227.  00:85DD  E6 BF                      and    10111111b        ;joy0
     228.  00:85DF                      
     229.  00:85DF  D3 A1                      out    [PSG_W],a        ;set joy0
     230.  00:85E1                      
     231.  00:85E1  3E 0E                      ld    a,14
     232.  00:85E3  D3 A0                      out    [PSG_A],a
     233.  00:85E5  DB A2                      in    a,[PSG_R]
     234.  00:85E7                      
     235.  00:85E7  FB                         ei
     236.  00:85E8  2F                         cpl
     237.  00:85E9                      
     238.  00:85E9  C9                         ret
     239.  00:85EA                      
     240.  00:85EA                      
     241.  00:85EA                      ;ret
     242.  00:85EA                      ;  a -      RDULxxxT
     243.  00:85EA                      check_8th_keyboard_row:
     244.  00:85EA  F3                       di
     245.  00:85EB  DB AA                    in    a,(#aa)
     246.  00:85ED  E6 F0                    and    #f0
     247.  00:85EF  F6 08                    or    8
     248.  00:85F1  D3 AA                    out    (#aa),a
     249.  00:85F3  DB A9                    in    a,(#a9)
     250.  00:85F5  FB                       ei
     251.  00:85F6  2F                       cpl
     252.  00:85F7                      
     253.  00:85F7  C9                       ret
     254.  00:85F8                      
     255.  00:85F8                      
     256.  00:85F8                      ;ret
     257.  00:85F8                      ;  a -      xxxxxMxx
     258.  00:85F8                      check_4th_keyboard_row:
     259.  00:85F8  F3                       di
     260.  00:85F9  DB AA                    in    a,(#aa)
     261.  00:85FB  E6 F0                    and    #f0
     262.  00:85FD  F6 04                    or    4
     263.  00:85FF  D3 AA                    out    (#aa),a
     264.  00:8601  DB A9                    in    a,(#a9)
     265.  00:8603  FB                       ei
     266.  00:8604  2F                       cpl
     267.  00:8605                      
     268.  00:8605  C9                       ret
     269.  00:8606                      
     270.  00:8606                      ;--------------------------------------------
     271.  00:8606                      
     272.  00:8606                      
     273.  00:8606                      
     274.  00:8606                      
     275.  00:8606                      
     276.  00:8606                      
     277.  00:8606                      
     278.  00:8606                      
     118   00:8606                      	
     119   00:8606                      	include "subr_sonido.asm"
       1.  00:8606                      
       2.  00:8606                      ;;=====================================================
       3.  00:8606                      ;;SUBRUTINAS PARA SONIDOS
       4.  00:8606                      ;;=====================================================	
       5.  00:8606                      
       6.  00:8606                      ;;=====================================================
       7.  00:8606                      ;;INICIALIZA_REPLAYER_EFECTOS_INTERRUPCIONES
       8.  00:8606                      ;;=====================================================	
       9.  00:8606                      ; función: 	inicializa: replayer de música, player de efectos e interrupciones
      10.  00:8606                      ; entrada: 	-
      11.  00:8606                      ; salida: 	-
      12.  00:8606                      ; toca: 	HL, A
      13.  00:8606                      inicializa_replayer_efectos_interrupciones:
      14.  00:8606  F3                  	DI
      15.  00:8607                      
      16.  00:8607                      	;inicializacion de replayer musical
      17.  00:8607  21 AF 8C            	LD		HL, song-99			; hl <- initial address of module - 99
      18.  00:860A  CD 46 86            	CALL	PT3_INIT			; Inits PT3 player
      19.  00:860D                      		
      20.  00:860D                      	;inicializacion del reproductor de efectos sonoros
      21.  00:860D  21 7A 96            	LD		HL, sfx_bank
      22.  00:8610  CD 35 8C            	CALL	ayFX_SETUP
      23.  00:8613                      	
      24.  00:8613                      	;Engancha nuestra rutina de servicio al gancha que deja preparado la BIOS cuando se termina de pintar la pantalla (50 o 60 veces por segundo)
      25.  00:8613  3E C3               	LD		A, #C3
      26.  00:8615  32 9F FD            	LD		[H.TIMI], A
      27.  00:8618  21 20 86            	LD		HL, subrutina_isr
      28.  00:861B  22 A0 FD            	LD		[H.TIMI+1], HL
      29.  00:861E                      	
      30.  00:861E  FB                  	EI		;optimizacion:
      31.  00:861F                      			;piensa que las dos ultimas lineas podrian haber sido: 
      32.  00:861F                      			;ei						;primero ei
      33.  00:861F                      			;ld		[H.TIMI+1],hl	;luego este ld
      34.  00:861F                      									;PENSAR (y consultar ) PORQUE!!!!
      35.  00:861F                      fin_inicializa_replayer_efectos_interrupciones:
      36.  00:861F  C9                  	RET
      37.  00:8620                      
      38.  00:8620                      
      39.  00:8620                      
      40.  00:8620                      ;;=====================================================
      41.  00:8620                      ;;NUESTRA_ISR
      42.  00:8620                      ;;=====================================================	
      43.  00:8620                      ; función: 	envía datos al PSG + toca un trozo de música + toca trozo de 
      44.  00:8620                      ; entrada: 	-
      45.  00:8620                      ; salida: 	-
      46.  00:8620                      ; toca: 	HL, A
      47.  00:8620                      subrutina_isr:
      48.  00:8620  CD 8B 8B            	CALL	PT3_ROUT			;envia los datos a los registros del PSG
      49.  00:8623  CD 93 8A            	CALL	PT3_PLAY			;calcula el siguiente 'trocito' de musica que sera enviado al proxima vez
      50.  00:8626  C3 7D 8C            	JP		ayFX_PLAY			;calcula el siguiente 'trocito' de efecto especial de sonido que sera enviado la proxima vez
      51.  00:8629                      fin_subrutina_isr:
      52.  00:8629                      	;RET
      53.  00:8629                      
      54.  00:8629                      
      55.  00:8629                      
      56.  00:8629                      ;;=====================================================
      57.  00:8629                      ;;DEFINICIÓN DE SUBRUTINAS DE FERNANDO PARA COMPRESIÓN Y SONIDO
      58.  00:8629                      ;;=====================================================
      59.  00:8629                      subrutinas_sonido:
      60.  00:8629                      	include	"PT3-ROM_sjasm.asm"
       1:  00:8629                      		; --- PT3 REPLAYER WORKING ON ROM ---
       2:  00:8629                      		; --- Can be assembled with asMSX ---
       3:  00:8629                      		; --- ROM version: MSX-KUN        ---
       4:  00:8629                      		; --- asMSX version 2: SapphiRe   ---
       5:  00:8629                      
       6:  00:8629                      ; Based on MSX full version of PT3 by Dioniso
       7:  00:8629                      ;
       8:  00:8629                      ; This version of the replayer can be used with any note table
       9:  00:8629                      ; This version also allows the use of PT3 commands
      10:  00:8629                      ; First 99 bytes of each PT3 module should be stripped off
      11:  00:8629                      ;
      12:  00:8629                      ; PLAY and PSG WRITE routines seperated to allow independent calls
      13:  00:8629                      ;
      14:  00:8629                      ; ROM LENGTH: 1549 bytes
      15:  00:8629                      ; RAM LENGTH:  576 bytes
      16:  00:8629                      
      17:  00:8629                      
      18:  00:8629                      
      19:  00:8629                      ;SJASM version by BTV 2016
      20:  00:8629                      
      21:  00:8629                      
      22:  00:8629                      		; --- CONSTANT VALUES DEFINITION ---
      23:  00:8629                      
      24:  00:8629                      ;ChannelsVars
      25:  00:8629                      ;struc	CHNPRM
      26:  00:8629                      ;reset group
      27:  00:8629  (00:0000)           CHNPRM_PsInOr	equ 0	;RESB 1
      28:  00:8629  (00:0001)           CHNPRM_PsInSm	equ 1	;RESB 1
      29:  00:8629  (00:0002)           CHNPRM_CrAmSl	equ 2	;RESB 1
      30:  00:8629  (00:0003)           CHNPRM_CrNsSl	equ 3	;RESB 1
      31:  00:8629  (00:0004)           CHNPRM_CrEnSl	equ 4	;RESB 1
      32:  00:8629  (00:0005)           CHNPRM_TSlCnt	equ 5	;RESB 1
      33:  00:8629  (00:0006)           CHNPRM_CrTnSl	equ 6	;RESW 1
      34:  00:8629  (00:0008)           CHNPRM_TnAcc	equ 8	;RESW 1
      35:  00:8629  (00:000A)           CHNPRM_COnOff	equ 10	;RESB 1
      36:  00:8629                      ;reset group
      37:  00:8629                      
      38:  00:8629  (00:000B)           CHNPRM_OnOffD	equ 11	;RESB 1
      39:  00:8629                      
      40:  00:8629                      ;IX for PTDECOD here [+12]
      41:  00:8629  (00:000C)           CHNPRM_OffOnD	equ 12	;RESB 1
      42:  00:8629  (00:000D)           CHNPRM_OrnPtr	equ 13	;RESW 1
      43:  00:8629  (00:000F)           CHNPRM_SamPtr	equ 15	;RESW 1
      44:  00:8629  (00:0011)           CHNPRM_NNtSkp	equ 17	;RESB 1
      45:  00:8629  (00:0012)           CHNPRM_Note	equ 18	;RESB 1
      46:  00:8629  (00:0013)           CHNPRM_SlToNt	equ 19	;RESB 1
      47:  00:8629  (00:0014)           CHNPRM_Env_En	equ 20	;RESB 1
      48:  00:8629  (00:0015)           CHNPRM_Flags	equ 21	;RESB 1
      49:  00:8629                       ;Enabled - 0,SimpleGliss - 2
      50:  00:8629  (00:0016)           CHNPRM_TnSlDl	equ 22	;RESB 1
      51:  00:8629  (00:0017)           CHNPRM_TSlStp	equ 23	;RESW 1
      52:  00:8629  (00:0019)           CHNPRM_TnDelt	equ 25	;RESW 1
      53:  00:8629  (00:001B)           CHNPRM_NtSkCn	equ 27	;RESB 1
      54:  00:8629  (00:001C)           CHNPRM_Volume	equ 28	;RESB 1
      55:  00:8629  (00:001D)           CHNPRM_Size	equ 29	;RESB 1
      56:  00:8629                      ;endstruc
      57:  00:8629                      
      58:  00:8629                      ;struc	AR
      59:  00:8629  (00:0000)           AR_TonA		equ 0	;RESW 1
      60:  00:8629  (00:0002)           AR_TonB		equ 2	;RESW 1
      61:  00:8629  (00:0004)           AR_TonC		equ 4	;RESW 1
      62:  00:8629  (00:0006)           AR_Noise	equ 6	;RESB 1
      63:  00:8629  (00:0007)           AR_Mixer	equ 7	;RESB 1
      64:  00:8629  (00:0008)           AR_AmplA	equ 8	;RESB 1
      65:  00:8629  (00:0009)           AR_AmplB	equ 9	;RESB 1
      66:  00:8629  (00:000A)           AR_AmplC	equ 10	;RESB 1
      67:  00:8629  (00:000B)           AR_Env		equ 11	;RESW 1
      68:  00:8629  (00:000D)           AR_EnvTp	equ 13	;RESB 1
      69:  00:8629                      ;endstruc
      70:  00:8629                      
      71:  00:8629                      		; --- CODE STARTS HERE ---
      72:  00:8629                      
      73:  00:8629  21 00 F0            CHECKLP:	LD	HL,PT3_SETUP
      74:  00:862C  CB FE               		SET	7,[HL]
      75:  00:862E  CB 46               		BIT	0,[HL]
      76:  00:8630  C8                  		RET	Z
      77:  00:8631  E1                  		POP	HL
      78:  00:8632  21 7A F0            		LD	HL,DelyCnt
      79:  00:8635  34                  		INC	[HL]
      80:  00:8636  21 3E F0            		LD	HL,ChanA+CHNPRM_NtSkCn
      81:  00:8639  34                  		INC	[HL]
      82:  00:863A  AF                  PT3_MUTE:	XOR	A
      83:  00:863B  67                  		LD	H,A
      84:  00:863C  6F                  		LD	L,A
      85:  00:863D  32 48 F1            		LD	[AYREGS+AR_AmplA],A
      86:  00:8640  22 49 F1            		LD	[AYREGS+AR_AmplB],HL
      87:  00:8643  C3 8C 8B            		JP	ROUT_A0
      88:  00:8646                      
      89:  00:8646                      PT3_INIT:	;HL - AddressOfModule - 100
      90:  00:8646  22 01 F0            		LD [PT3_MODADDR],HL
      91:  00:8649  E5                  		PUSH HL
      92:  00:864A  11 64 00            		LD DE,100
      93:  00:864D  19                  		ADD HL,DE
      94:  00:864E  7E                  		LD A,[HL]
      95:  00:864F  32 1C F0            		LD [PT3_Delay],A
      96:  00:8652  E5                  		PUSH HL
      97:  00:8653  DD E1               		POP IX
      98:  00:8655  19                  		ADD HL,DE
      99:  00:8656  22 03 F0            		LD [PT3_CrPsPtr],HL
     100:  00:8659  DD 5E 02            		LD E,[IX+102-100]
     101:  00:865C  19                  		ADD HL,DE
     102:  00:865D  23                  		INC HL
     103:  00:865E  22 18 F0            		LD [PT3_LPosPtr],HL
     104:  00:8661  D1                  		POP DE
     105:  00:8662  DD 6E 03            		LD L,[IX+103-100]
     106:  00:8665  DD 66 04            		LD H,[IX+104-100]
     107:  00:8668  19                  		ADD HL,DE
     108:  00:8669  22 1A F0            		LD [PT3_PatsPtr],HL
     109:  00:866C  21 A9 00            		LD HL,169
     110:  00:866F  19                  		ADD HL,DE
     111:  00:8670  22 07 F0            		LD [PT3_OrnPtrs],HL
     112:  00:8673  21 69 00            		LD HL,105
     113:  00:8676  19                  		ADD HL,DE
     114:  00:8677  22 05 F0            		LD [PT3_SAMPTRS],HL
     115:  00:867A  21 00 F0            		LD HL,PT3_SETUP
     116:  00:867D  CB BE               		RES 7,[HL]
     117:  00:867F                      
     118:  00:867F                      		; --- note table data depacker ---
     119:  00:867F                      		; Depacks first 12 tones of each tone table
     120:  00:867F                      
     121:  00:867F  11 00 8C            		LD DE,T_PACK
     122:  00:8682  01 B1 F1            		LD BC,T1_+(2*49)-1
     123:  00:8685  1A                  .TP_0:		LD A,[DE]
     124:  00:8686  13                  		INC DE
     125:  00:8687  FE 1E               		CP 15*2
     126:  00:8689  30 06               		JR NC,.TP_1
     127:  00:868B  67                  		LD H,A
     128:  00:868C  1A                  		LD A,[DE]
     129:  00:868D  6F                  		LD L,A
     130:  00:868E  13                  		INC DE
     131:  00:868F  18 07               		JR .TP_2
     132:  00:8691  D5                  .TP_1:		PUSH DE
     133:  00:8692  16 00               		LD D,0
     134:  00:8694  5F                  		LD E,A
     135:  00:8695  19                  		ADD HL,DE
     136:  00:8696  19                  		ADD HL,DE
     137:  00:8697  D1                  		POP DE
     138:  00:8698  7C                  .TP_2:		LD A,H
     139:  00:8699  02                  		LD [BC],A
     140:  00:869A  0B                  		DEC BC
     141:  00:869B  7D                  		LD A,L
     142:  00:869C  02                  		LD [BC],A
     143:  00:869D  0B                  		DEC BC
     144:  00:869E  D6 F0               		SUB $F0
     145:  00:86A0  20 E3               		JR NZ,.TP_0
     146:  00:86A2                      
     147:  00:86A2                      		; --- INITIALIZE PT3 VARIABLES ---
     148:  00:86A2  21 23 F0            		LD HL,VARS
     149:  00:86A5  77                  		LD [HL],A
     150:  00:86A6  11 24 F0            		LD DE,VARS+1
     151:  00:86A9  01 2C 01            		LD BC,VAR0END-VARS-1
     152:  00:86AC  ED B0               		LDIR
     153:  00:86AE                      
     154:  00:86AE  3C                  		INC A
     155:  00:86AF  32 7A F0            		LD [DelyCnt],A
     156:  00:86B2  21 01 F0            		LD HL,$F001 ;H - CHNPRM_Volume, L - CHNPRM_NtSkCn
     157:  00:86B5  22 3E F0            		LD [ChanA+CHNPRM_NtSkCn],HL
     158:  00:86B8  22 5B F0            		LD [ChanB+CHNPRM_NtSkCn],HL
     159:  00:86BB  22 78 F0            		LD [ChanC+CHNPRM_NtSkCn],HL
     160:  00:86BE                      
     161:  00:86BE  21 FC 8B            		LD HL,EMPTYSAMORN
     162:  00:86C1  22 12 F0            		LD [PT3_AdInPtA],HL ;ptr to zero
     163:  00:86C4  22 30 F0            		LD [ChanA+CHNPRM_OrnPtr],HL ;ornament 0 is "0,1,0"
     164:  00:86C7  22 4D F0            		LD [ChanB+CHNPRM_OrnPtr],HL ;in all versions from
     165:  00:86CA  22 6A F0            		LD [ChanC+CHNPRM_OrnPtr],HL ;3.xx to 3.6x and VTII
     166:  00:86CD                      
     167:  00:86CD  22 32 F0            		LD [ChanA+CHNPRM_SamPtr],HL ;S1 There is no default
     168:  00:86D0  22 4F F0            		LD [ChanB+CHNPRM_SamPtr],HL ;S2 sample in PT3, so, you
     169:  00:86D3  22 6C F0            		LD [ChanC+CHNPRM_SamPtr],HL ;S3 can comment S1,2,3; see
     170:  00:86D6                      					    ;also EMPTYSAMORN comment
     171:  00:86D6                      
     172:  00:86D6                      		; --- NOTE TABLE CREATOR (c) Ivan Roshin, adapted by SapphiRe ---
     173:  00:86D6  DD 7E FF            		LD A,[IX+99-100] ;TONE TABLE NUMBER
     174:  00:86D9  17                  		RLA
     175:  00:86DA  E6 07               		AND 7
     176:  00:86DC  21 AC 8B            		LD HL,NT_DATA
     177:  00:86DF  D5                  		PUSH DE
     178:  00:86E0  50                  		LD D,B		; ld d,0 (bc is 0000 after LDIR)
     179:  00:86E1  87                  		ADD A,A
     180:  00:86E2  5F                  		LD E,A
     181:  00:86E3  19                  		ADD HL,DE	; hl -> init of correct note table data
     182:  00:86E4  5E                  		LD E,[HL]
     183:  00:86E5  23                  		INC HL
     184:  00:86E6  CB 3B               		SRL E
     185:  00:86E8  9F                  		SBC A,A
     186:  00:86E9  E6 A7               		AND $A7			;$00 (NOP) or $A7 (AND A)
     187:  00:86EB  32 21 F0            		LD [PT3_NTL3],A		; CORRECT INSTRUCTION, DEPENDS OF SELECTED TABLE
     188:  00:86EE  3E C9               		LD A,$C9		; RET CODE
     189:  00:86F0  32 22 F0            		LD [PT3_NTL3+1],A	; RET PLACED
     190:  00:86F3  EB                  		EX DE,HL
     191:  00:86F4  C1                  		POP BC ;BC=T1_
     192:  00:86F5  09                  		ADD HL,BC
     193:  00:86F6                      
     194:  00:86F6  1A                  		LD A,[DE]                           
     195:  00:86F7                      
     196:  00:86F7  01 BC 8B            		LD BC,T_
     197:  00:86FA  81                  		ADD A,C
     198:  00:86FB  4F                  		LD C,A
     199:  00:86FC  88                  		ADC A,B
     200:  00:86FD                      
     201:  00:86FD  91                  		SUB C
     202:  00:86FE  47                  		LD B,A
     203:  00:86FF  C5                  		PUSH BC
     204:  00:8700  11 80 F0            		LD DE,NT_
     205:  00:8703  D5                  		PUSH DE
     206:  00:8704                      
     207:  00:8704  06 0C               		LD B,12
     208:  00:8706  C5                  .L1:		PUSH BC
     209:  00:8707  4E                  		LD C,[HL]
     210:  00:8708  23                  		INC HL
     211:  00:8709  E5                  		PUSH HL
     212:  00:870A  46                  		LD B,[HL]
     213:  00:870B                      
     214:  00:870B  D5                  		PUSH DE
     215:  00:870C  EB                  		EX DE,HL
     216:  00:870D  11 17 00            		LD DE,23
     217:  00:8710  DD 26 08            		db $DD,$26,$08	;LD XH,8
     218:  00:8713                      
     219:  00:8713  CB 38               .L2:		SRL B
     220:  00:8715  CB 19               		RR C
     221:  00:8717  CD 21 F0            .L3:		CALL PT3_NTL3	;AND A or NOP
     222:  00:871A  79                  		LD A,C
     223:  00:871B  8A                  		ADC A,D	;=ADC 0
     224:  00:871C  77                  		LD [HL],A
     225:  00:871D  23                  		INC HL
     226:  00:871E  78                  		LD A,B
     227:  00:871F  8A                  		ADC A,D
     228:  00:8720  77                  		LD [HL],A
     229:  00:8721  19                  		ADD HL,DE
     230:  00:8722  DD 25               		db $DD,$25	;DEC XH
     231:  00:8724  20 ED               		JR NZ,.L2
     232:  00:8726                      
     233:  00:8726  D1                  		POP DE
     234:  00:8727  13                  		INC DE
     235:  00:8728  13                  		INC DE
     236:  00:8729  E1                  		POP HL
     237:  00:872A  23                  		INC HL
     238:  00:872B  C1                  		POP BC
     239:  00:872C  10 D8               		DJNZ .L1
     240:  00:872E                      
     241:  00:872E  E1                  		POP HL
     242:  00:872F  D1                  		POP DE
     243:  00:8730                      
     244:  00:8730  7B                  		LD A,E
     245:  00:8731  D5                  		PUSH DE
     246:  00:8732  11 C8 8B            		LD DE,TCOLD_1
     247:  00:8735  BB                  		CP E
     248:  00:8736  D1                  		POP DE
     249:  00:8737  20 05               		JR NZ,.CORR_1
     250:  00:8739  3E FD               		LD A,$FD
     251:  00:873B  32 AE F0            		LD [NT_+$2E],A
     252:  00:873E                      
     253:  00:873E  1A                  .CORR_1:	LD A,[DE]
     254:  00:873F  A7                  		AND A
     255:  00:8740  28 11               		JR Z,.TC_EXIT
     256:  00:8742  1F                  		RRA
     257:  00:8743  F5                  		PUSH AF
     258:  00:8744  87                  		ADD A,A
     259:  00:8745  4F                  		LD C,A
     260:  00:8746  09                  		ADD HL,BC
     261:  00:8747  F1                  		POP AF
     262:  00:8748  30 02               		JR NC,.CORR_2
     263:  00:874A  35                  		DEC [HL]
     264:  00:874B  35                  		DEC [HL]
     265:  00:874C  34                  .CORR_2:	INC [HL]
     266:  00:874D  A7                  		AND A
     267:  00:874E  ED 42               		SBC HL,BC
     268:  00:8750  13                  		INC DE
     269:  00:8751  18 EB               		JR .CORR_1
     270:  00:8753                      
     271:  00:8753                      .TC_EXIT:	;POP AF
     272:  00:8753                      
     273:  00:8753                      		; --- CREATE PT3 VOLUME TABLE (c) Ivan Roshin, adapted by SapphiRe ---
     274:  00:8753  21 11 00            		ld	hl,$11
     275:  00:8756  54                  		ld	d,h
     276:  00:8757  5C                  		ld	e,h
     277:  00:8758  DD 21 50 F1         		ld	IX,VT_+16
     278:  00:875C  06 0F               		ld	b,15
     279:  00:875E  E5                  .INITV1:	push	hl
     280:  00:875F  19                  		add	hl,de
     281:  00:8760  EB                  		ex	de,hl
     282:  00:8761  ED 62               		sbc	hl,hl
     283:  00:8763  48                  		ld	c,b
     284:  00:8764  06 10               		ld	b,16
     285:  00:8766  7D                  .INITV2:	ld	a,l
     286:  00:8767  17                  		rla
     287:  00:8768  7C                  		ld	a,h
     288:  00:8769  CE 00               		adc	a,0
     289:  00:876B  DD 77 00            		ld	[ix],a
     290:  00:876E  DD 23               		inc	ix
     291:  00:8770  19                  		add	hl,de
     292:  00:8771  10 F3               		djnz	.INITV2
     293:  00:8773  E1                  		pop	hl
     294:  00:8774  7B                  		ld	a,e
     295:  00:8775  FE 77               		cp	$77
     296:  00:8777  20 01               		jr	nz,.INITV3
     297:  00:8779  1C                  		inc	e
     298:  00:877A  41                  .INITV3:	ld	b,c
     299:  00:877B  10 E1               		djnz	.INITV1
     300:  00:877D                      
     301:  00:877D  C9                  		RET
     302:  00:877E                      
     303:  00:877E                      		;pattern decoder
     304:  00:877E  DD 36 08 00         PD_OrSm:	LD [IX+(CHNPRM_Env_En-12)],0
     305:  00:8782  CD 08 89            		CALL SETORN
     306:  00:8785  0A                  		LD A,[BC]
     307:  00:8786  03                  		INC BC
     308:  00:8787  0F                  		RRCA
     309:  00:8788                      
     310:  00:8788  87                  PD_SAM:		ADD A,A
     311:  00:8789  5F                  PD_SAM_:	LD E,A
     312:  00:878A  16 00               		LD D,0
     313:  00:878C  2A 05 F0            		LD HL,[PT3_SAMPTRS]
     314:  00:878F  19                  		ADD HL,DE
     315:  00:8790  5E                  		LD E,[HL]
     316:  00:8791  23                  		INC HL
     317:  00:8792  56                  		LD D,[HL]
     318:  00:8793  2A 01 F0            		LD HL,[PT3_MODADDR]
     319:  00:8796  19                  		ADD HL,DE
     320:  00:8797  DD 75 03            		LD [IX+(CHNPRM_SamPtr-12)],L
     321:  00:879A  DD 74 04            		LD [IX+(CHNPRM_SamPtr+1-12)],H
     322:  00:879D  18 41               		JR PD_LOOP
     323:  00:879F                      
     324:  00:879F  07                  PD_VOL:		RLCA
     325:  00:87A0  07                  		RLCA
     326:  00:87A1  07                  		RLCA
     327:  00:87A2  07                  		RLCA
     328:  00:87A3  DD 77 10            		LD [IX+(CHNPRM_Volume-12)],A
     329:  00:87A6  18 3B               		JR PD_LP2
     330:  00:87A8                      	
     331:  00:87A8  DD 77 08            PD_EOff:	LD [IX+(CHNPRM_Env_En-12)],A
     332:  00:87AB  DD 77 F4            		LD [IX+(CHNPRM_PsInOr-12)],A
     333:  00:87AE  18 33               		JR PD_LP2
     334:  00:87B0                      
     335:  00:87B0  3D                  PD_SorE:	DEC A
     336:  00:87B1  20 07               		JR NZ,PD_ENV
     337:  00:87B3  0A                  		LD A,[BC]
     338:  00:87B4  03                  		INC BC
     339:  00:87B5  DD 77 05            		LD [IX+(CHNPRM_NNtSkp-12)],A
     340:  00:87B8  18 29               		JR PD_LP2
     341:  00:87BA                      
     342:  00:87BA  CD EC 88            PD_ENV:		CALL SETENV
     343:  00:87BD  18 24               		JR PD_LP2
     344:  00:87BF                      
     345:  00:87BF  CD 08 89            PD_ORN:		CALL SETORN
     346:  00:87C2  18 1C               		JR PD_LOOP
     347:  00:87C4                             
     348:  00:87C4  DD 77 08            PD_ESAM:	LD [IX+(CHNPRM_Env_En-12)],A
     349:  00:87C7  DD 77 F4            		LD [IX+(CHNPRM_PsInOr-12)],A
     350:  00:87CA  C4 EC 88            		CALL NZ,SETENV
     351:  00:87CD  0A                  		LD A,[BC]
     352:  00:87CE  03                  		INC BC
     353:  00:87CF  18 B8               		JR PD_SAM_
     354:  00:87D1                      
     355:  00:87D1  DD 7E 06            PTDECOD:	LD A,[IX+(CHNPRM_Note-12)]
     356:  00:87D4  32 0F F0            		LD [PT3_PrNote],A
     357:  00:87D7  DD 6E FA            		LD L,[IX+(CHNPRM_CrTnSl-12)]
     358:  00:87DA  DD 66 FB            		LD H,[IX+(CHNPRM_CrTnSl+1-12)]
     359:  00:87DD  22 10 F0            		LD [PT3_PrSlide],HL
     360:  00:87E0                      
     361:  00:87E0  11 10 20            PD_LOOP:	LD DE,$2010
     362:  00:87E3  0A                  PD_LP2:		LD A,[BC]
     363:  00:87E4  03                  		INC BC
     364:  00:87E5  83                  		ADD A,E
     365:  00:87E6  38 96               		JR C,PD_OrSm
     366:  00:87E8  82                  		ADD A,D
     367:  00:87E9  28 4A               		JR Z,PD_FIN
     368:  00:87EB  38 9B               		JR C,PD_SAM
     369:  00:87ED  83                  		ADD A,E
     370:  00:87EE  28 25               		JR Z,PD_REL
     371:  00:87F0  38 AD               		JR C,PD_VOL
     372:  00:87F2  83                  		ADD A,E
     373:  00:87F3  28 B3               		JR Z,PD_EOff
     374:  00:87F5  38 B9               		JR C,PD_SorE
     375:  00:87F7  C6 60               		ADD A,96
     376:  00:87F9  38 20               		JR C,PD_NOTE
     377:  00:87FB  83                  		ADD A,E
     378:  00:87FC  38 C1               		JR C,PD_ORN
     379:  00:87FE  82                  		ADD A,D
     380:  00:87FF  38 0F               		JR C,PD_NOIS
     381:  00:8801  83                  		ADD A,E
     382:  00:8802  38 C0               		JR C,PD_ESAM
     383:  00:8804  87                  		ADD A,A
     384:  00:8805  5F                  		LD E,A
     385:  00:8806  21 41 68            		LD HL,(SPCCOMS+$DF20) % 65536	; Adapted from original Speccy version (saves 6 bytes)
     386:  00:8809  19                  		ADD HL,DE
     387:  00:880A  5E                  		LD E,[HL]
     388:  00:880B  23                  		INC HL
     389:  00:880C  56                  		LD D,[HL]
     390:  00:880D  D5                  		PUSH DE
     391:  00:880E  18 D0               		JR PD_LOOP
     392:  00:8810                      
     393:  00:8810  32 7E F0            PD_NOIS:	LD [Ns_Base],A
     394:  00:8813  18 CE               		JR PD_LP2
     395:  00:8815                      
     396:  00:8815  DD CB 09 86         PD_REL:		RES 0,[IX+(CHNPRM_Flags-12)]
     397:  00:8819  18 08               		JR PD_RES
     398:  00:881B                      	
     399:  00:881B  DD 77 06            PD_NOTE:	LD [IX+(CHNPRM_Note-12)],A
     400:  00:881E  DD CB 09 C6         		SET 0,[IX+(CHNPRM_Flags-12)]
     401:  00:8822  AF                  		XOR A
     402:  00:8823                      
     403:  00:8823  ED 73 09 F0         PD_RES:		LD [PT3_PDSP],SP
     404:  00:8827  DD F9               		LD SP,IX
     405:  00:8829  67                  		LD H,A
     406:  00:882A  6F                  		LD L,A
     407:  00:882B  E5                  		PUSH HL
     408:  00:882C  E5                  		PUSH HL
     409:  00:882D  E5                  		PUSH HL
     410:  00:882E  E5                  		PUSH HL
     411:  00:882F  E5                  		PUSH HL
     412:  00:8830  E5                  		PUSH HL
     413:  00:8831  ED 7B 09 F0         		LD SP,[PT3_PDSP]
     414:  00:8835                      
     415:  00:8835  DD 7E 05            PD_FIN:		LD A,[IX+(CHNPRM_NNtSkp-12)]
     416:  00:8838  DD 77 0F            		LD [IX+(CHNPRM_NtSkCn-12)],A
     417:  00:883B  C9                  		RET
     418:  00:883C                      
     419:  00:883C  DD CB 09 96         C_PORTM:	RES 2,[IX+(CHNPRM_Flags-12)]
     420:  00:8840  0A                  		LD A,[BC]
     421:  00:8841  03                  		INC BC
     422:  00:8842                      		;SKIP PRECALCULATED TONE DELTA [BECAUSE
     423:  00:8842                      		;CANNOT BE RIGHT AFTER PT3 COMPILATION]
     424:  00:8842  03                  		INC BC
     425:  00:8843  03                  		INC BC
     426:  00:8844  DD 77 0A            		LD [IX+(CHNPRM_TnSlDl-12)],A
     427:  00:8847  DD 77 F9            		LD [IX+(CHNPRM_TSlCnt-12)],A
     428:  00:884A  11 80 F0            		LD DE,NT_
     429:  00:884D  DD 7E 06            		LD A,[IX+(CHNPRM_Note-12)]
     430:  00:8850  DD 77 07            		LD [IX+(CHNPRM_SlToNt-12)],A
     431:  00:8853  87                  		ADD A,A
     432:  00:8854  6F                  		LD L,A
     433:  00:8855  26 00               		LD H,0
     434:  00:8857  19                  		ADD HL,DE
     435:  00:8858  7E                  		LD A,[HL]
     436:  00:8859  23                  		INC HL
     437:  00:885A  66                  		LD H,[HL]
     438:  00:885B  6F                  		LD L,A
     439:  00:885C  E5                  		PUSH HL
     440:  00:885D  3A 0F F0            		LD A,[PT3_PrNote]
     441:  00:8860  DD 77 06            		LD [IX+(CHNPRM_Note-12)],A
     442:  00:8863  87                  		ADD A,A
     443:  00:8864  6F                  		LD L,A
     444:  00:8865  26 00               		LD H,0
     445:  00:8867  19                  		ADD HL,DE
     446:  00:8868  5E                  		LD E,[HL]
     447:  00:8869  23                  		INC HL
     448:  00:886A  56                  		LD D,[HL]
     449:  00:886B  E1                  		POP HL
     450:  00:886C  ED 52               		SBC HL,DE
     451:  00:886E  DD 75 0D            		LD [IX+(CHNPRM_TnDelt-12)],L
     452:  00:8871  DD 74 0E            		LD [IX+(CHNPRM_TnDelt+1-12)],H
     453:  00:8874  ED 5B 10 F0         		LD DE,[PT3_PrSlide]
     454:  00:8878  DD 73 FA            		LD [IX+(CHNPRM_CrTnSl-12)],E
     455:  00:887B  DD 72 FB            		LD [IX+(CHNPRM_CrTnSl+1-12)],D
     456:  00:887E  0A                  		LD A,[BC] ;SIGNED TONE STEP
     457:  00:887F  03                  		INC BC
     458:  00:8880  08                  		EX AF,AF'
     459:  00:8881  0A                  		LD A,[BC]
     460:  00:8882  03                  		INC BC
     461:  00:8883  A7                  		AND A
     462:  00:8884  28 01               		JR Z,.NOSIG
     463:  00:8886  EB                  		EX DE,HL
     464:  00:8887  ED 52               .NOSIG:	SBC HL,DE
     465:  00:8889  F2 91 88            		JP P,SET_STP
     466:  00:888C  2F                  		CPL
     467:  00:888D  08                  		EX AF,AF'
     468:  00:888E  ED 44               		NEG
     469:  00:8890  08                  		EX AF,AF'
     470:  00:8891  DD 77 0C            SET_STP:	LD [IX+(CHNPRM_TSlStp+1-12)],A
     471:  00:8894  08                  		EX AF,AF'
     472:  00:8895  DD 77 0B            		LD [IX+(CHNPRM_TSlStp-12)],A
     473:  00:8898  DD 36 FE 00         		LD [IX+(CHNPRM_COnOff-12)],0
     474:  00:889C  C9                  		RET
     475:  00:889D                      
     476:  00:889D  DD CB 09 D6         C_GLISS:	SET 2,[IX+(CHNPRM_Flags-12)]
     477:  00:88A1  0A                  		LD A,[BC]
     478:  00:88A2  03                  		INC BC
     479:  00:88A3  DD 77 0A            		LD [IX+(CHNPRM_TnSlDl-12)],A
     480:  00:88A6  DD 77 F9            		LD [IX+(CHNPRM_TSlCnt-12)],A
     481:  00:88A9  0A                  		LD A,[BC]
     482:  00:88AA  03                  		INC BC
     483:  00:88AB  08                  		EX AF,AF'
     484:  00:88AC  0A                  		LD A,[BC]
     485:  00:88AD  03                  		INC BC
     486:  00:88AE  18 E1               		JR SET_STP
     487:  00:88B0                      
     488:  00:88B0  0A                  C_SMPOS:	LD A,[BC]
     489:  00:88B1  03                  		INC BC
     490:  00:88B2  DD 77 F5            		LD [IX+(CHNPRM_PsInSm-12)],A
     491:  00:88B5  C9                  		RET
     492:  00:88B6                      
     493:  00:88B6  0A                  C_ORPOS:	LD A,[BC]
     494:  00:88B7  03                  		INC BC
     495:  00:88B8  DD 77 F4            		LD [IX+(CHNPRM_PsInOr-12)],A
     496:  00:88BB  C9                  		RET
     497:  00:88BC                      
     498:  00:88BC  0A                  C_VIBRT:	LD A,[BC]
     499:  00:88BD  03                  		INC BC
     500:  00:88BE  DD 77 FF            		LD [IX+(CHNPRM_OnOffD-12)],A
     501:  00:88C1  DD 77 FE            		LD [IX+(CHNPRM_COnOff-12)],A
     502:  00:88C4  0A                  		LD A,[BC]
     503:  00:88C5  03                  		INC BC
     504:  00:88C6  DD 77 00            		LD [IX+(CHNPRM_OffOnD-12)],A
     505:  00:88C9  AF                  		XOR A
     506:  00:88CA  DD 77 F9            		LD [IX+(CHNPRM_TSlCnt-12)],A
     507:  00:88CD  DD 77 FA            		LD [IX+(CHNPRM_CrTnSl-12)],A
     508:  00:88D0  DD 77 FB            		LD [IX+(CHNPRM_CrTnSl+1-12)],A
     509:  00:88D3  C9                  		RET
     510:  00:88D4                      
     511:  00:88D4  0A                  C_ENGLS:	LD A,[BC]
     512:  00:88D5  03                  		INC BC
     513:  00:88D6  32 1E F0            		LD [PT3_Env_Del],A
     514:  00:88D9  32 7D F0            		LD [CurEDel],A
     515:  00:88DC  0A                  		LD A,[BC]
     516:  00:88DD  03                  		INC BC
     517:  00:88DE  6F                  		LD L,A
     518:  00:88DF  0A                  		LD A,[BC]
     519:  00:88E0  03                  		INC BC
     520:  00:88E1  67                  		LD H,A
     521:  00:88E2  22 1F F0            		LD [PT3_ESldAdd],HL
     522:  00:88E5  C9                  		RET
     523:  00:88E6                      
     524:  00:88E6  0A                  C_DELAY:	LD A,[BC]
     525:  00:88E7  03                  		INC BC
     526:  00:88E8  32 1C F0            		LD [PT3_Delay],A
     527:  00:88EB  C9                  		RET
     528:  00:88EC                      	
     529:  00:88EC  DD 73 08            SETENV:		LD [IX+(CHNPRM_Env_En-12)],E
     530:  00:88EF  32 4D F1            		LD [AYREGS+AR_EnvTp],A
     531:  00:88F2  0A                  		LD A,[BC]
     532:  00:88F3  03                  		INC BC
     533:  00:88F4  67                  		LD H,A
     534:  00:88F5  0A                  		LD A,[BC]
     535:  00:88F6  03                  		INC BC
     536:  00:88F7  6F                  		LD L,A
     537:  00:88F8  22 4E F1            		LD [EnvBase],HL
     538:  00:88FB  AF                  		XOR A
     539:  00:88FC  DD 77 F4            		LD [IX+(CHNPRM_PsInOr-12)],A
     540:  00:88FF  32 7D F0            		LD [CurEDel],A
     541:  00:8902  67                  		LD H,A
     542:  00:8903  6F                  		LD L,A
     543:  00:8904  22 7B F0            		LD [CurESld],HL
     544:  00:8907  C9                  C_NOP:		RET
     545:  00:8908                      
     546:  00:8908  87                  SETORN:		ADD A,A
     547:  00:8909  5F                  		LD E,A
     548:  00:890A  16 00               		LD D,0
     549:  00:890C  DD 72 F4            		LD [IX+(CHNPRM_PsInOr-12)],D
     550:  00:890F  2A 07 F0            		LD HL,[PT3_OrnPtrs]
     551:  00:8912  19                  		ADD HL,DE
     552:  00:8913  5E                  		LD E,[HL]
     553:  00:8914  23                  		INC HL
     554:  00:8915  56                  		LD D,[HL]
     555:  00:8916  2A 01 F0            		LD HL,[PT3_MODADDR]
     556:  00:8919  19                  		ADD HL,DE
     557:  00:891A  DD 75 01            		LD [IX+(CHNPRM_OrnPtr-12)],L
     558:  00:891D  DD 74 02            		LD [IX+(CHNPRM_OrnPtr+1-12)],H
     559:  00:8920  C9                  		RET
     560:  00:8921                      
     561:  00:8921                      		;ALL 16 ADDRESSES TO PROTECT FROM BROKEN PT3 MODULES
     562:  00:8921  07 89               SPCCOMS:	dw C_NOP
     563:  00:8923  9D 88               		dw C_GLISS
     564:  00:8925  3C 88               		dw C_PORTM
     565:  00:8927  B0 88               		dw C_SMPOS
     566:  00:8929  B6 88               		dw C_ORPOS
     567:  00:892B  BC 88               		dw C_VIBRT
     568:  00:892D  07 89               		dw C_NOP
     569:  00:892F  07 89               		dw C_NOP
     570:  00:8931  D4 88               		dw C_ENGLS
     571:  00:8933  E6 88               		dw C_DELAY
     572:  00:8935  07 89               		dw C_NOP
     573:  00:8937  07 89               		dw C_NOP
     574:  00:8939  07 89               		dw C_NOP
     575:  00:893B  07 89               		dw C_NOP
     576:  00:893D  07 89               		dw C_NOP
     577:  00:893F  07 89               		dw C_NOP
     578:  00:8941                      
     579:  00:8941  AF                  CHREGS:		XOR A
     580:  00:8942  32 4A F1            		LD [AYREGS+AR_AmplC],A
     581:  00:8945  DD CB 15 46         		BIT 0,[IX+CHNPRM_Flags]
     582:  00:8949  E5                  		PUSH HL
     583:  00:894A  CA 70 8A            		JP Z,.CH_EXIT
     584:  00:894D  ED 73 0B F0         		LD [PT3_CSP],SP
     585:  00:8951  DD 6E 0D            		LD L,[IX+CHNPRM_OrnPtr]
     586:  00:8954  DD 66 0E            		LD H,[IX+CHNPRM_OrnPtr+1]
     587:  00:8957  F9                  		LD SP,HL
     588:  00:8958  D1                  		POP DE
     589:  00:8959  67                  		LD H,A
     590:  00:895A  DD 7E 00            		LD A,[IX+CHNPRM_PsInOr]
     591:  00:895D  6F                  		LD L,A
     592:  00:895E  39                  		ADD HL,SP
     593:  00:895F  3C                  		INC A
     594:  00:8960  BA                  		CP D
     595:  00:8961  38 01               		JR C,.CH_ORPS
     596:  00:8963  7B                  		LD A,E
     597:  00:8964  DD 77 00            .CH_ORPS:	LD [IX+CHNPRM_PsInOr],A
     598:  00:8967  DD 7E 12            		LD A,[IX+CHNPRM_Note]
     599:  00:896A  86                  		ADD A,[HL]
     600:  00:896B  F2 6F 89            		JP P,.CH_NTP
     601:  00:896E  AF                  		XOR A
     602:  00:896F  FE 60               .CH_NTP:	CP 96
     603:  00:8971  38 02               		JR C,.CH_NOK
     604:  00:8973  3E 5F               		LD A,95
     605:  00:8975  87                  .CH_NOK:	ADD A,A
     606:  00:8976  08                  		EX AF,AF'
     607:  00:8977  DD 6E 0F            		LD L,[IX+CHNPRM_SamPtr]
     608:  00:897A  DD 66 10            		LD H,[IX+CHNPRM_SamPtr+1]
     609:  00:897D  F9                  		LD SP,HL
     610:  00:897E  D1                  		POP DE
     611:  00:897F  26 00               		LD H,0
     612:  00:8981  DD 7E 01            		LD A,[IX+CHNPRM_PsInSm]
     613:  00:8984  47                  		LD B,A
     614:  00:8985  87                  		ADD A,A
     615:  00:8986  87                  		ADD A,A
     616:  00:8987  6F                  		LD L,A
     617:  00:8988  39                  		ADD HL,SP
     618:  00:8989  F9                  		LD SP,HL
     619:  00:898A  78                  		LD A,B
     620:  00:898B  3C                  		INC A
     621:  00:898C  BA                  		CP D
     622:  00:898D  38 01               		JR C,.CH_SMPS
     623:  00:898F  7B                  		LD A,E
     624:  00:8990  DD 77 01            .CH_SMPS:	LD [IX+CHNPRM_PsInSm],A
     625:  00:8993  C1                  		POP BC
     626:  00:8994  E1                  		POP HL
     627:  00:8995  DD 5E 08            		LD E,[IX+CHNPRM_TnAcc]
     628:  00:8998  DD 56 09            		LD D,[IX+CHNPRM_TnAcc+1]
     629:  00:899B  19                  		ADD HL,DE
     630:  00:899C  CB 70               		BIT 6,B
     631:  00:899E  28 06               		JR Z,.CH_NOAC
     632:  00:89A0  DD 75 08            		LD [IX+CHNPRM_TnAcc],L
     633:  00:89A3  DD 74 09            		LD [IX+CHNPRM_TnAcc+1],H
     634:  00:89A6  EB                  .CH_NOAC:	EX DE,HL
     635:  00:89A7  08                  		EX AF,AF'
     636:  00:89A8  6F                  		LD L,A
     637:  00:89A9  26 00               		LD H,0
     638:  00:89AB  31 80 F0            		LD SP,NT_
     639:  00:89AE  39                  		ADD HL,SP
     640:  00:89AF  F9                  		LD SP,HL
     641:  00:89B0  E1                  		POP HL
     642:  00:89B1  19                  		ADD HL,DE
     643:  00:89B2  DD 5E 06            		LD E,[IX+CHNPRM_CrTnSl]
     644:  00:89B5  DD 56 07            		LD D,[IX+CHNPRM_CrTnSl+1]
     645:  00:89B8  19                  		ADD HL,DE
     646:  00:89B9  ED 7B 0B F0         		LD SP,[PT3_CSP]
     647:  00:89BD  E3                  		EX [SP],HL
     648:  00:89BE  AF                  		XOR A
     649:  00:89BF  DD B6 05            		OR [IX+CHNPRM_TSlCnt]
     650:  00:89C2  28 3E               		JR Z,.CH_AMP
     651:  00:89C4  DD 35 05            		DEC [IX+CHNPRM_TSlCnt]
     652:  00:89C7  20 39               		JR NZ,.CH_AMP
     653:  00:89C9  DD 7E 16            		LD A,[IX+CHNPRM_TnSlDl]
     654:  00:89CC  DD 77 05            		LD [IX+CHNPRM_TSlCnt],A
     655:  00:89CF  DD 6E 17            		LD L,[IX+CHNPRM_TSlStp]
     656:  00:89D2  DD 66 18            		LD H,[IX+CHNPRM_TSlStp+1]
     657:  00:89D5  7C                  		LD A,H
     658:  00:89D6  19                  		ADD HL,DE
     659:  00:89D7  DD 75 06            		LD [IX+CHNPRM_CrTnSl],L
     660:  00:89DA  DD 74 07            		LD [IX+CHNPRM_CrTnSl+1],H
     661:  00:89DD  DD CB 15 56         		BIT 2,[IX+CHNPRM_Flags]
     662:  00:89E1  20 1F               		JR NZ,.CH_AMP
     663:  00:89E3  DD 5E 19            		LD E,[IX+CHNPRM_TnDelt]
     664:  00:89E6  DD 56 1A            		LD D,[IX+CHNPRM_TnDelt+1]
     665:  00:89E9  A7                  		AND A
     666:  00:89EA  28 01               		JR Z,.CH_STPP
     667:  00:89EC  EB                  		EX DE,HL
     668:  00:89ED  ED 52               .CH_STPP:	SBC HL,DE
     669:  00:89EF  FA 02 8A            		JP M,.CH_AMP
     670:  00:89F2  DD 7E 13            		LD A,[IX+CHNPRM_SlToNt]
     671:  00:89F5  DD 77 12            		LD [IX+CHNPRM_Note],A
     672:  00:89F8  AF                  		XOR A
     673:  00:89F9  DD 77 05            		LD [IX+CHNPRM_TSlCnt],A
     674:  00:89FC  DD 77 06            		LD [IX+CHNPRM_CrTnSl],A
     675:  00:89FF  DD 77 07            		LD [IX+CHNPRM_CrTnSl+1],A
     676:  00:8A02  DD 7E 02            .CH_AMP:	LD A,[IX+CHNPRM_CrAmSl]
     677:  00:8A05  CB 79               		BIT 7,C
     678:  00:8A07  28 13               		JR Z,.CH_NOAM
     679:  00:8A09  CB 71               		BIT 6,C
     680:  00:8A0B  28 07               		JR Z,.CH_AMIN
     681:  00:8A0D  FE 0F               		CP 15
     682:  00:8A0F  28 0B               		JR Z,.CH_NOAM
     683:  00:8A11  3C                  		INC A
     684:  00:8A12  18 05               		JR .CH_SVAM
     685:  00:8A14  FE F1               .CH_AMIN:	CP -15
     686:  00:8A16  28 04               		JR Z,.CH_NOAM
     687:  00:8A18  3D                  		DEC A
     688:  00:8A19  DD 77 02            .CH_SVAM:	LD [IX+CHNPRM_CrAmSl],A
     689:  00:8A1C  6F                  .CH_NOAM:	LD L,A
     690:  00:8A1D  78                  		LD A,B
     691:  00:8A1E  E6 0F               		AND 15
     692:  00:8A20  85                  		ADD A,L
     693:  00:8A21  F2 25 8A            		JP P,.CH_APOS
     694:  00:8A24  AF                  		XOR A
     695:  00:8A25  FE 10               .CH_APOS:	CP 16
     696:  00:8A27  38 02               		JR C,.CH_VOL
     697:  00:8A29  3E 0F               		LD A,15
     698:  00:8A2B  DD B6 1C            .CH_VOL:	OR [IX+CHNPRM_Volume]
     699:  00:8A2E  6F                  		LD L,A
     700:  00:8A2F  26 00               		LD H,0
     701:  00:8A31  11 40 F1            		LD DE,VT_
     702:  00:8A34  19                  		ADD HL,DE
     703:  00:8A35  7E                  		LD A,[HL]
     704:  00:8A36  CB 41               .CH_ENV:	BIT 0,C
     705:  00:8A38  20 03               		JR NZ,.CH_NOEN
     706:  00:8A3A  DD B6 14            		OR [IX+CHNPRM_Env_En]
     707:  00:8A3D  32 4A F1            .CH_NOEN:	LD [AYREGS+AR_AmplC],A
     708:  00:8A40  CB 78               		BIT 7,B
     709:  00:8A42  79                  		LD A,C
     710:  00:8A43  28 19               		JR Z,.NO_ENSL
     711:  00:8A45  17                  		RLA
     712:  00:8A46  17                  		RLA
     713:  00:8A47  CB 2F               		SRA A
     714:  00:8A49  CB 2F               		SRA A
     715:  00:8A4B  CB 2F               		SRA A
     716:  00:8A4D  DD 86 04            		ADD A,[IX+CHNPRM_CrEnSl] ;SEE COMMENT BELOW
     717:  00:8A50  CB 68               		BIT 5,B
     718:  00:8A52  28 03               		JR Z,.NO_ENAC
     719:  00:8A54  DD 77 04            		LD [IX+CHNPRM_CrEnSl],A
     720:  00:8A57  21 1D F0            .NO_ENAC:	LD HL,PT3_AddToEn
     721:  00:8A5A  86                  		ADD A,[HL] ;BUG IN PT3 - NEED WORD HERE.
     722:  00:8A5B                      			   ;FIX IT IN NEXT VERSION?
     723:  00:8A5B  77                  		LD [HL],A
     724:  00:8A5C  18 0E               		JR .CH_MIX
     725:  00:8A5E  1F                  .NO_ENSL:	RRA
     726:  00:8A5F  DD 86 03            		ADD A,[IX+CHNPRM_CrNsSl]
     727:  00:8A62  32 7F F0            		LD [AddToNs],A
     728:  00:8A65  CB 68               		BIT 5,B
     729:  00:8A67  28 03               		JR Z,.CH_MIX
     730:  00:8A69  DD 77 03            		LD [IX+CHNPRM_CrNsSl],A
     731:  00:8A6C  78                  .CH_MIX:	LD A,B
     732:  00:8A6D  1F                  		RRA
     733:  00:8A6E  E6 48               		AND $48
     734:  00:8A70  21 47 F1            .CH_EXIT:	LD HL,AYREGS+AR_Mixer
     735:  00:8A73  B6                  		OR [HL]
     736:  00:8A74  0F                  		RRCA
     737:  00:8A75  77                  		LD [HL],A
     738:  00:8A76  E1                  		POP HL
     739:  00:8A77  AF                  		XOR A
     740:  00:8A78  DD B6 0A            		OR [IX+CHNPRM_COnOff]
     741:  00:8A7B  C8                  		RET Z
     742:  00:8A7C  DD 35 0A            		DEC [IX+CHNPRM_COnOff]
     743:  00:8A7F  C0                  		RET NZ
     744:  00:8A80  DD AE 15            		XOR [IX+CHNPRM_Flags]
     745:  00:8A83  DD 77 15            		LD [IX+CHNPRM_Flags],A
     746:  00:8A86  1F                  		RRA
     747:  00:8A87  DD 7E 0B            		LD A,[IX+CHNPRM_OnOffD]
     748:  00:8A8A  38 03               		JR C,.CH_ONDL
     749:  00:8A8C  DD 7E 0C            		LD A,[IX+CHNPRM_OffOnD]
     750:  00:8A8F  DD 77 0A            .CH_ONDL:	LD [IX+CHNPRM_COnOff],A
     751:  00:8A92  C9                  		RET
     752:  00:8A93                      
     753:  00:8A93  AF                  PT3_PLAY:	XOR A
     754:  00:8A94  32 1D F0            		LD [PT3_AddToEn],A
     755:  00:8A97  32 47 F1            		LD [AYREGS+AR_Mixer],A
     756:  00:8A9A  3D                  		DEC A
     757:  00:8A9B  32 4D F1            		LD [AYREGS+AR_EnvTp],A
     758:  00:8A9E  21 7A F0            		LD HL,DelyCnt
     759:  00:8AA1  35                  		DEC [HL]
     760:  00:8AA2  C2 29 8B            		JP NZ,.PL2
     761:  00:8AA5  21 3E F0            		LD HL,ChanA+CHNPRM_NtSkCn
     762:  00:8AA8  35                  		DEC [HL]
     763:  00:8AA9  20 4E               		JR NZ,.PL1B
     764:  00:8AAB  ED 4B 12 F0         		LD BC,[PT3_AdInPtA]
     765:  00:8AAF  0A                  		LD A,[BC]
     766:  00:8AB0  A7                  		AND A
     767:  00:8AB1  20 3B               		JR NZ,.PL1A
     768:  00:8AB3  57                  		LD D,A
     769:  00:8AB4  32 7E F0            		LD [Ns_Base],A
     770:  00:8AB7  2A 03 F0            		LD HL,[PT3_CrPsPtr]
     771:  00:8ABA  23                  		INC HL
     772:  00:8ABB  7E                  		LD A,[HL]
     773:  00:8ABC  3C                  		INC A
     774:  00:8ABD  20 08               		JR NZ,.PLNLP
     775:  00:8ABF  CD 29 86            		CALL CHECKLP
     776:  00:8AC2  2A 18 F0            		LD HL,[PT3_LPosPtr]
     777:  00:8AC5  7E                  		LD A,[HL]
     778:  00:8AC6  3C                  		INC A
     779:  00:8AC7  22 03 F0            .PLNLP:	LD [PT3_CrPsPtr],HL
     780:  00:8ACA  3D                  		DEC A
     781:  00:8ACB  87                  		ADD A,A
     782:  00:8ACC  5F                  		LD E,A
     783:  00:8ACD  CB 12               		RL D
     784:  00:8ACF  2A 1A F0            		LD HL,[PT3_PatsPtr]
     785:  00:8AD2  19                  		ADD HL,DE
     786:  00:8AD3  ED 5B 01 F0         		LD DE,[PT3_MODADDR]
     787:  00:8AD7  ED 73 0D F0         		LD [PT3_PSP],SP
     788:  00:8ADB  F9                  		LD SP,HL
     789:  00:8ADC  E1                  		POP HL
     790:  00:8ADD  19                  		ADD HL,DE
     791:  00:8ADE  44                  		LD B,H
     792:  00:8ADF  4D                  		LD C,L
     793:  00:8AE0  E1                  		POP HL
     794:  00:8AE1  19                  		ADD HL,DE
     795:  00:8AE2  22 14 F0            		LD [PT3_AdInPtB],HL
     796:  00:8AE5  E1                  		POP HL
     797:  00:8AE6  19                  		ADD HL,DE
     798:  00:8AE7  22 16 F0            		LD [PT3_AdInPtC],HL
     799:  00:8AEA  ED 7B 0D F0         		LD SP,[PT3_PSP]
     800:  00:8AEE                      
     801:  00:8AEE  DD 21 2F F0         .PL1A:		LD IX,ChanA+12
     802:  00:8AF2  CD D1 87            		CALL PTDECOD
     803:  00:8AF5  ED 43 12 F0         		LD [PT3_AdInPtA],BC
     804:  00:8AF9                      
     805:  00:8AF9  21 5B F0            .PL1B:		LD HL,ChanB+CHNPRM_NtSkCn
     806:  00:8AFC  35                  		DEC [HL]
     807:  00:8AFD  20 0F               		JR NZ,.PL1C
     808:  00:8AFF  DD 21 4C F0         		LD IX,ChanB+12
     809:  00:8B03  ED 4B 14 F0         		LD BC,[PT3_AdInPtB]
     810:  00:8B07  CD D1 87            		CALL PTDECOD
     811:  00:8B0A  ED 43 14 F0         		LD [PT3_AdInPtB],BC
     812:  00:8B0E                      
     813:  00:8B0E  21 78 F0            .PL1C:		LD HL,ChanC+CHNPRM_NtSkCn
     814:  00:8B11  35                  		DEC [HL]
     815:  00:8B12  20 0F               		JR NZ,.PL1D
     816:  00:8B14  DD 21 69 F0         		LD IX,ChanC+12
     817:  00:8B18  ED 4B 16 F0         		LD BC,[PT3_AdInPtC]
     818:  00:8B1C  CD D1 87            		CALL PTDECOD
     819:  00:8B1F  ED 43 16 F0         		LD [PT3_AdInPtC],BC
     820:  00:8B23                      
     821:  00:8B23  3A 1C F0            .PL1D:		LD A,[PT3_Delay]
     822:  00:8B26  32 7A F0            		LD [DelyCnt],A
     823:  00:8B29                      
     824:  00:8B29  DD 21 23 F0         .PL2:		LD IX,ChanA
     825:  00:8B2D  2A 40 F1            		LD HL,[AYREGS+AR_TonA]
     826:  00:8B30  CD 41 89            		CALL CHREGS
     827:  00:8B33  22 40 F1            		LD [AYREGS+AR_TonA],HL
     828:  00:8B36  3A 4A F1            		LD A,[AYREGS+AR_AmplC]
     829:  00:8B39  32 48 F1            		LD [AYREGS+AR_AmplA],A
     830:  00:8B3C  DD 21 40 F0         		LD IX,ChanB
     831:  00:8B40  2A 42 F1            		LD HL,[AYREGS+AR_TonB]
     832:  00:8B43  CD 41 89            		CALL CHREGS
     833:  00:8B46  22 42 F1            		LD [AYREGS+AR_TonB],HL
     834:  00:8B49  3A 4A F1            		LD A,[AYREGS+AR_AmplC]
     835:  00:8B4C  32 49 F1            		LD [AYREGS+AR_AmplB],A
     836:  00:8B4F  DD 21 5D F0         		LD IX,ChanC
     837:  00:8B53  2A 44 F1            		LD HL,[AYREGS+AR_TonC]
     838:  00:8B56  CD 41 89            		CALL CHREGS
     839:  00:8B59  22 44 F1            		LD [AYREGS+AR_TonC],HL
     840:  00:8B5C                      
     841:  00:8B5C  2A 7E F0            		LD HL,[Ns_Base_AddToNs]
     842:  00:8B5F  7C                  		LD A,H
     843:  00:8B60  85                  		ADD A,L
     844:  00:8B61  32 46 F1            		LD [AYREGS+AR_Noise],A
     845:  00:8B64                      
     846:  00:8B64  3A 1D F0            		LD A,[PT3_AddToEn]
     847:  00:8B67  5F                  		LD E,A
     848:  00:8B68  87                  		ADD A,A
     849:  00:8B69  9F                  		SBC A,A
     850:  00:8B6A  57                  		LD D,A
     851:  00:8B6B  2A 4E F1            		LD HL,[EnvBase]
     852:  00:8B6E  19                  		ADD HL,DE
     853:  00:8B6F  ED 5B 7B F0         		LD DE,[CurESld]
     854:  00:8B73  19                  		ADD HL,DE
     855:  00:8B74  22 4B F1            		LD [AYREGS+AR_Env],HL
     856:  00:8B77                      
     857:  00:8B77  AF                  		XOR A
     858:  00:8B78  21 7D F0            		LD HL,CurEDel
     859:  00:8B7B  B6                  		OR [HL]
     860:  00:8B7C  C8                  		RET Z
     861:  00:8B7D  35                  		DEC [HL]
     862:  00:8B7E  C0                  		RET NZ
     863:  00:8B7F  3A 1E F0            		LD A,[PT3_Env_Del]
     864:  00:8B82  77                  		LD [HL],A
     865:  00:8B83  2A 1F F0            		LD HL,[PT3_ESldAdd]
     866:  00:8B86  19                  		ADD HL,DE
     867:  00:8B87  22 7B F0            		LD [CurESld],HL
     868:  00:8B8A  C9                  		RET
     869:  00:8B8B                      
     870:  00:8B8B  AF                  PT3_ROUT:	XOR A
     871:  00:8B8C                      	
     872:  00:8B8C                      ROUT_A0:	; --- FIXES BITS 6 AND 7 OF MIXER ---
     873:  00:8B8C  21 47 F1            		LD	HL,AYREGS+AR_Mixer
     874:  00:8B8F  CB FE               		set	7,[hl]
     875:  00:8B91  CB B6               		res	6,[hl]
     876:  00:8B93                      
     877:  00:8B93  0E A0               		LD C,$A0
     878:  00:8B95  21 40 F1            		LD HL,AYREGS
     879:  00:8B98  ED 79               .LOUT:		OUT [C],A
     880:  00:8B9A  0C                  		INC C
     881:  00:8B9B  ED A3               		OUTI 
     882:  00:8B9D  0D                  		DEC C
     883:  00:8B9E  3C                  		INC A
     884:  00:8B9F  FE 0D               		CP 13
     885:  00:8BA1  20 F5               		JR NZ,.LOUT
     886:  00:8BA3  ED 79               		OUT [C],A
     887:  00:8BA5  7E                  		LD A,[HL]
     888:  00:8BA6  A7                  		AND A
     889:  00:8BA7  F8                  		RET M
     890:  00:8BA8  0C                  		INC C
     891:  00:8BA9  ED 79               		OUT [C],A
     892:  00:8BAB  C9                  		RET
     893:  00:8BAC                      
     894:  00:8BAC  64                  NT_DATA:	db (T_NEW_0-T1_)*2
     895:  00:8BAD  2A                  		db TCNEW_0-T_
     896:  00:8BAE  65                  		db (T_OLD_0-T1_)*2+1
     897:  00:8BAF  00                  		db TCOLD_0-T_
     898:  00:8BB0  01                  		db (T_NEW_1-T1_)*2+1
     899:  00:8BB1  0C                  		db TCNEW_1-T_
     900:  00:8BB2  01                  		db (T_OLD_1-T1_)*2+1
     901:  00:8BB3  0C                  		db TCOLD_1-T_
     902:  00:8BB4  94                  		db (T_NEW_2-T1_)*2
     903:  00:8BB5  35                  		db TCNEW_2-T_
     904:  00:8BB6  30                  		db (T_OLD_2-T1_)*2
     905:  00:8BB7  0E                  		db TCOLD_2-T_
     906:  00:8BB8  60                  		db (T_NEW_3-T1_)*2
     907:  00:8BB9  20                  		db TCNEW_3-T_
     908:  00:8BBA  60                  		db (T_OLD_3-T1_)*2
     909:  00:8BBB  21                  		db TCOLD_3-T_
     910:  00:8BBC                      
     911:  00:8BBC                      T_:
     912:  00:8BBC                      
     913:  00:8BBC                      TCOLD_0:	db $00+1,$04+1,$08+1,$0A+1,$0C+1,$0E+1,$12+1,$14+1
     913:  00:8BBC  01 05 09 0B 0D 0F 13 15 
     914:  00:8BC4  19 25 3D 00         		db $18+1,$24+1,$3C+1,0
     915:  00:8BC8                      TCNEW_1:	
     916:  00:8BC8  5D 00               TCOLD_1:	db $5C+1,0
     917:  00:8BCA                      TCOLD_2:	db $30+1,$36+1,$4C+1,$52+1,$5E+1,$70+1,$82,$8C,$9C
     917:  00:8BCA  31 37 4D 53 5F 71 82 8C 9C 
     918:  00:8BD3                      		db $9E,$A0,$A6,$A8,$AA,$AC,$AE,$AE,0
     918:  00:8BD3  9E A0 A6 A8 AA AC AE AE 00 
     919:  00:8BDC  57                  TCNEW_3:	db $56+1
     920:  00:8BDD                      TCOLD_3:	db $1E+1,$22+1,$24+1,$28+1,$2C+1,$2E+1,$32+1,$BE+1,0
     920:  00:8BDD  1F 23 25 29 2D 2F 33 BF 00 
     921:  00:8BE6                      TCNEW_0:	db $1C+1,$20+1,$22+1,$26+1,$2A+1,$2C+1,$30+1,$54+1
     921:  00:8BE6  1D 21 23 27 2B 2D 31 55 
     922:  00:8BEE  BD BF 00            		db $BC+1,$BE+1,0
     923:  00:8BF1                      TCNEW_2:	db $1A+1,$20+1,$24+1,$28+1,$2A+1,$3A+1,$4C+1,$5E+1
     923:  00:8BF1  1B 21 25 29 2B 3B 4D 5F 
     924:  00:8BF9  BB BD BF            		db $BA+1,$BC+1,$BE+1
     925:  00:8BFC                      
     926:  00:8BFC  00 01 00 90         EMPTYSAMORN: 	db 0,1,0,$90 ;delete $90 if you don't need default sample
     927:  00:8C00                      
     928:  00:8C00                      T_PACK:		; First 12 values of tone tables (packed)
     929:  00:8C00  0D                  		db ($06EC*2)/256
     930:  00:8C01  D8                  		db #d8
     931:  00:8C02  69                  		db $0755-$06EC
     932:  00:8C03  70                  		db $07C5-$0755
     933:  00:8C04  76                  		db $083B-$07C5
     934:  00:8C05  7D                  		db $08B8-$083B
     935:  00:8C06  85                  		db $093D-$08B8
     936:  00:8C07  8D                  		db $09CA-$093D
     937:  00:8C08  95                  		db $0A5F-$09CA
     938:  00:8C09  9D                  		db $0AFC-$0A5F
     939:  00:8C0A  A8                  		db $0BA4-$0AFC
     940:  00:8C0B  B1                  		db $0C55-$0BA4
     941:  00:8C0C  BB                  		db $0D10-$0C55
     942:  00:8C0D  0C                  		db ($066D*2)/256
     943:  00:8C0E  DA                  		db #da
     944:  00:8C0F  62                  		db $06CF-$066D
     945:  00:8C10  68                  		db $0737-$06CF
     946:  00:8C11  6D                  		db $07A4-$0737
     947:  00:8C12  75                  		db $0819-$07A4
     948:  00:8C13  7B                  		db $0894-$0819
     949:  00:8C14  83                  		db $0917-$0894
     950:  00:8C15  8A                  		db $09A1-$0917
     951:  00:8C16  92                  		db $0A33-$09A1
     952:  00:8C17  9C                  		db $0ACF-$0A33
     953:  00:8C18  A4                  		db $0B73-$0ACF
     954:  00:8C19  AF                  		db $0C22-$0B73
     955:  00:8C1A  B8                  		db $0CDA-$0C22
     956:  00:8C1B  0E                  		db ($0704*2)/256
     957:  00:8C1C  08                  		db #08
     958:  00:8C1D  6A                  		db $076E-$0704
     959:  00:8C1E  72                  		db $07E0-$076E
     960:  00:8C1F  78                  		db $0858-$07E0
     961:  00:8C20  7E                  		db $08D6-$0858
     962:  00:8C21  86                  		db $095C-$08D6
     963:  00:8C22  90                  		db $09EC-$095C
     964:  00:8C23  96                  		db $0A82-$09EC
     965:  00:8C24  A0                  		db $0B22-$0A82
     966:  00:8C25  AA                  		db $0BCC-$0B22
     967:  00:8C26  B4                  		db $0C80-$0BCC
     968:  00:8C27  BE                  		db $0D3E-$0C80
     969:  00:8C28  0F                  		db ($07E0*2)/256
     970:  00:8C29  C0                  		db #c0
     971:  00:8C2A  78                  		db $0858-$07E0
     972:  00:8C2B  88                  		db $08E0-$0858
     973:  00:8C2C  80                  		db $0960-$08E0
     974:  00:8C2D  90                  		db $09F0-$0960
     975:  00:8C2E  98                  		db $0A88-$09F0
     976:  00:8C2F  A0                  		db $0B28-$0A88
     977:  00:8C30  B0                  		db $0BD8-$0B28
     978:  00:8C31  A8                  		db $0C80-$0BD8
     979:  00:8C32  E0                  		db $0D60-$0C80
     980:  00:8C33  B0                  		db $0E10-$0D60
     981:  00:8C34  E8                  		db $0EF8-$0E10
      61.  00:8C35                      	include "ayFX-ROM_sjasm.asm"
       1:  00:8C35                      		; --- ayFX REPLAYER v1.31 ---
       2:  00:8C35                      
       3:  00:8C35                      		; --- v1.31	Fixed bug on previous version, only PSG channel C worked
       4:  00:8C35                      		; --- v1.3	Fixed volume and Relative volume versions on the same file, conditional compilation
       5:  00:8C35                      		; ---		Support for dynamic or fixed channel allocation
       6:  00:8C35                      		; --- v1.2f/r	ayFX bank support
       7:  00:8C35                      		; --- v1.11f/r	If a frame volume is zero then no AYREGS update
       8:  00:8C35                      		; --- v1.1f/r	Fixed volume for all ayFX streams
       9:  00:8C35                      		; --- v1.1	Explicit priority (as suggested by AR)
      10:  00:8C35                      		; --- v1.0f	Bug fixed (error when using noise)
      11:  00:8C35                      		; --- v1.0	Initial release
      12:  00:8C35                      
      13:  00:8C35                      		; --- DEFINE AYFXRELATIVE AS 0 FOR FIXED VOLUME VERSION ---
      14:  00:8C35                      		; --- DEFINE AYFXRELATIVE AS 1 FOR RELATIVE VOLUME VERSION ---
      15:  00:8C35  (00:0000)           AYFXRELATIVE equ 0
      16:  00:8C35                      
      17:  00:8C35                      ayFX_SETUP:	; ---          ayFX replayer setup          ---
      18:  00:8C35                      		; --- INPUT: HL -> pointer to the ayFX bank ---
      19:  00:8C35  22 41 F2            		ld	[ayFX_BANK],hl			; Current ayFX bank
      20:  00:8C38  3E 01               		ld	a,1				; a:=0
      21:  00:8C3A  32 40 F2            		ld	[ayFX_MODE],a			; Initial mode: fixed channel
      22:  00:8C3D  3C                  		inc	a				; Starting channel (=1)
      23:  00:8C3E  32 4A F2            		ld	[ayFX_CHANNEL],a		; Updated
      24:  00:8C41                      ayFX_END:	; --- End of an ayFX stream ---
      25:  00:8C41  3E FF               		ld	a,255				; Lowest ayFX priority
      26:  00:8C43  32 43 F2            		ld	[ayFX_PRIORITY],a		; Priority saved (not playing ayFX stream)
      27:  00:8C46  C9                  		ret					; Return
      28:  00:8C47                      
      29:  00:8C47                      ayFX_INIT:	; ---     INIT A NEW ayFX STREAM     ---
      30:  00:8C47                      		; --- INPUT: A -> sound to be played ---
      31:  00:8C47                      		; ---        C -> sound priority     ---
      32:  00:8C47  C5                  		push	bc				; Store bc in stack
      33:  00:8C48  D5                  		push	de				; Store de in stack
      34:  00:8C49  E5                  		push	hl				; Store hl in stack
      35:  00:8C4A                      		; --- Check if the index is in the bank ---
      36:  00:8C4A  47                  		ld	b,a				; b:=a (new ayFX stream index)
      37:  00:8C4B  2A 41 F2            		ld	hl,[ayFX_BANK]			; Current ayFX BANK
      38:  00:8C4E  7E                  		ld	a,[hl]				; Number of samples in the bank
      39:  00:8C4F  B7                  		or	a				; If zero (means 256 samples)...
      40:  00:8C50  28 06               		jr	z,.CHECK_PRI			; ...goto .CHECK_PRI
      41:  00:8C52                      		; The bank has less than 256 samples
      42:  00:8C52  78                  		ld	a,b				; a:=b (new ayFX stream index)
      43:  00:8C53  BE                  		cp	[hl]				; If new index is not in the bank...
      44:  00:8C54  3E 02               		ld	a,2				; a:=2 (error 2: Sample not in the bank)
      45:  00:8C56  30 21               		jr	nc,.INIT_END			; ...we can't init it
      46:  00:8C58                      .CHECK_PRI:	; --- Check if the new priority is lower than the current one ---
      47:  00:8C58                      		; ---   Remember: 0 = highest priority, 15 = lowest priority  ---
      48:  00:8C58  78                  		ld	a,b				; a:=b (new ayFX stream index)
      49:  00:8C59  3A 43 F2            		ld	a,[ayFX_PRIORITY]		; a:=Current ayFX stream priority
      50:  00:8C5C  B9                  		cp	c				; If new ayFX stream priority is lower than current one...
      51:  00:8C5D  3E 01               		ld	a,1				; a:=1 (error 1: A sample with higher priority is being played)
      52:  00:8C5F  38 18               		jr	c,.INIT_END			; ...we don't start the new ayFX stream
      53:  00:8C61                      		; --- Set new priority ---
      54:  00:8C61  79                  		ld	a,c				; a:=New priority
      55:  00:8C62  E6 0F               		and	$0F				; We mask the priority
      56:  00:8C64  32 43 F2            		ld	[ayFX_PRIORITY],a		; new ayFX stream priority saved in RAM
      57:  00:8C67                      
      58:  00:8C67                      		IF ( AYFXRELATIVE == 1 )
      59:  00:8C67                    ~ 			; --- Volume adjust using PT3 volume table ---
      60:  00:8C67                    ~ 			ld	c,a				; c:=New priority (fixed)
      61:  00:8C67                    ~ 			ld	a,15				; a:=15
      62:  00:8C67                    ~ 			sub	c				; a:=15-New priority = relative volume
      63:  00:8C67                    ~ 			jr	z,.INIT_NOSOUND		; If priority is 15 -> no sound output (volume is zero)
      64:  00:8C67                    ~ 			add	a,a				; a:=a*2
      65:  00:8C67                    ~ 			add	a,a				; a:=a*4
      66:  00:8C67                    ~ 			add	a,a				; a:=a*8
      67:  00:8C67                    ~ 			add	a,a				; a:=a*16
      68:  00:8C67                    ~ 			ld	e,a				; e:=a
      69:  00:8C67                    ~ 			ld	d,0				; de:=a
      70:  00:8C67                    ~ 			ld	hl,VT_				; hl:=PT3 volume table
      71:  00:8C67                    ~ 			add	hl,de				; hl is a pointer to the relative volume table
      72:  00:8C67                    ~ 			ld	[ayFX_VT],hl			; Save pointer
      73:  00:8C67                    ~ 		ENDIF
      74:  00:8C67                      
      75:  00:8C67                      		; --- Calculate the pointer to the new ayFX stream ---
      76:  00:8C67  ED 5B 41 F2         		ld	de,[ayFX_BANK]			; de:=Current ayFX bank
      77:  00:8C6B  13                  		inc	de				; de points to the increments table of the bank
      78:  00:8C6C  68                  		ld	l,b				; l:=b (new ayFX stream index)
      79:  00:8C6D  26 00               		ld	h,0				; hl:=b (new ayFX stream index)
      80:  00:8C6F  29                  		add	hl,hl				; hl:=hl*2
      81:  00:8C70  19                  		add	hl,de				; hl:=hl+de (hl points to the correct increment)
      82:  00:8C71  5E                  		ld	e,[hl]				; e:=lower byte of the increment
      83:  00:8C72  23                  		inc	hl				; hl points to the higher byte of the correct increment
      84:  00:8C73  56                  		ld	d,[hl]				; de:=increment
      85:  00:8C74  19                  		add	hl,de				; hl:=hl+de (hl points to the new ayFX stream)
      86:  00:8C75  22 44 F2            		ld	[ayFX_POINTER],hl		; Pointer saved in RAM
      87:  00:8C78  AF                  		xor	a				; a:=0 (no errors)
      88:  00:8C79  E1                  .INIT_END:	pop	hl				; Retrieve hl from stack
      89:  00:8C7A  D1                  		pop	de				; Retrieve de from stack
      90:  00:8C7B  C1                  		pop	bc				; Retrieve bc from stack
      91:  00:8C7C  C9                  		ret					; Return
      92:  00:8C7D                      
      93:  00:8C7D                      		IF ( AYFXRELATIVE == 1 )
      94:  00:8C7D                    ~ .INIT_NOSOUND:	; --- Init a sample with relative volume zero -> no sound output ---
      95:  00:8C7D                    ~ 			ld	a,255				; Lowest ayFX priority
      96:  00:8C7D                    ~ 			ld	[ayFX_PRIORITY],a		; Priority saved (not playing ayFX stream)
      97:  00:8C7D                    ~ 			jr	.INIT_END			; Jumps to .INIT_END
      98:  00:8C7D                    ~ 		ENDIF
      99:  00:8C7D                      
     100:  00:8C7D                      ayFX_PLAY:	; --- PLAY A FRAME OF AN ayFX STREAM ---
     101:  00:8C7D  3A 43 F2            		ld	a,[ayFX_PRIORITY]		; a:=Current ayFX stream priority
     102:  00:8C80  B7                  		or	a				; If priority has bit 7 on...
     103:  00:8C81  F8                  		ret	m				; ...return
     104:  00:8C82                      		; --- Calculate next ayFX channel (if needed) ---
     105:  00:8C82  3A 40 F2            		ld	a,[ayFX_MODE]			; ayFX mode
     106:  00:8C85  E6 01               		and	1				; If bit0=0 (fixed channel)...
     107:  00:8C87  28 08               		jr	z,.TAKECB			; ...skip channel changing
     108:  00:8C89  21 4A F2            		ld	hl,ayFX_CHANNEL			; Old ayFX playing channel
     109:  00:8C8C  35                  		dec	[hl]				; New ayFX playing channel
     110:  00:8C8D  20 02               		jr	nz,.TAKECB			; If not zero jump to .TAKECB
     111:  00:8C8F  36 03               		ld	[hl],3				; If zero -> set channel 3
     112:  00:8C91                      .TAKECB:	; --- Extract control byte from stream ---
     113:  00:8C91  2A 44 F2            		ld	hl,[ayFX_POINTER]		; Pointer to the current ayFX stream
     114:  00:8C94  4E                  		ld	c,[hl]				; c:=Control byte
     115:  00:8C95  23                  		inc	hl				; Increment pointer
     116:  00:8C96                      		; --- Check if there's new tone on stream ---
     117:  00:8C96  CB 69               		bit	5,c				; If bit 5 c is off...
     118:  00:8C98  28 08               		jr	z,.CHECK_NN			; ...jump to .CHECK_NN (no new tone)
     119:  00:8C9A                      		; --- Extract new tone from stream ---
     120:  00:8C9A  5E                  		ld	e,[hl]				; e:=lower byte of new tone
     121:  00:8C9B  23                  		inc	hl				; Increment pointer
     122:  00:8C9C  56                  		ld	d,[hl]				; d:=higher byte of new tone
     123:  00:8C9D  23                  		inc	hl				; Increment pointer
     124:  00:8C9E  ED 53 46 F2         		ld	[ayFX_TONE],de			; ayFX tone updated
     125:  00:8CA2                      .CHECK_NN:	; --- Check if there's new noise on stream ---
     126:  00:8CA2  CB 71               		bit	6,c				; if bit 6 c is off...
     127:  00:8CA4  28 09               		jr	z,.SETPOINTER			; ...jump to .SETPOINTER (no new noise)
     128:  00:8CA6                      		; --- Extract new noise from stream ---
     129:  00:8CA6  7E                  		ld	a,[hl]				; a:=New noise
     130:  00:8CA7  23                  		inc	hl				; Increment pointer
     131:  00:8CA8  FE 20               		cp	$20				; If it's an illegal value of noise (used to mark end of stream)...
     132:  00:8CAA  28 95               		jr.	z,ayFX_END			; ...jump to ayFX_END
     133:  00:8CAC  32 48 F2            		ld	[ayFX_NOISE],a			; ayFX noise updated
     134:  00:8CAF                      .SETPOINTER:	; --- Update ayFX pointer ---
     135:  00:8CAF  22 44 F2            		ld	[ayFX_POINTER],hl		; Update ayFX stream pointer
     136:  00:8CB2                      		; --- Extract volume ---
     137:  00:8CB2  79                  		ld	a,c				; a:=Control byte
     138:  00:8CB3  E6 0F               		and	$0F				; lower nibble
     139:  00:8CB5                      
     140:  00:8CB5                      		IF ( AYFXRELATIVE == 1 )
     141:  00:8CB5                    ~ 			; --- Fix the volume using PT3 Volume Table ---
     142:  00:8CB5                    ~ 			ld	hl,[ayFX_VT]			; hl:=Pointer to relative volume table
     143:  00:8CB5                    ~ 			ld	e,a				; e:=a (ayFX volume)
     144:  00:8CB5                    ~ 			ld	d,0				; d:=0
     145:  00:8CB5                    ~ 			add	hl,de				; hl:=hl+de (hl points to the relative volume of this frame
     146:  00:8CB5                    ~ 			ld	a,[hl]				; a:=ayFX relative volume
     147:  00:8CB5                    ~ 			or	a				; If relative volume is zero...
     148:  00:8CB5                    ~ 		ENDIF
     149:  00:8CB5                      
     150:  00:8CB5  32 49 F2            		ld	[ayFX_VOLUME],a			; ayFX volume updated
     151:  00:8CB8  C8                  		ret	z				; ...return (don't copy ayFX values in to AYREGS)
     152:  00:8CB9                      		; -------------------------------------
     153:  00:8CB9                      		; --- COPY ayFX VALUES IN TO AYREGS ---
     154:  00:8CB9                      		; -------------------------------------
     155:  00:8CB9                      		; --- Set noise channel ---
     156:  00:8CB9  CB 79               		bit	7,c				; If noise is off...
     157:  00:8CBB  20 06               		jr	nz,.SETMASKS			; ...jump to .SETMASKS
     158:  00:8CBD  3A 48 F2            		ld	a,[ayFX_NOISE]			; ayFX noise value
     159:  00:8CC0  32 46 F1            		ld	[AYREGS+6],a			; copied in to AYREGS (noise channel)
     160:  00:8CC3                      .SETMASKS:	; --- Set mixer masks ---
     161:  00:8CC3  79                  		ld	a,c				; a:=Control byte
     162:  00:8CC4  E6 90               		and	$90				; Only bits 7 and 4 (noise and tone mask for psg reg 7)
     163:  00:8CC6  FE 90               		cp	$90				; If no noise and no tone...
     164:  00:8CC8  C8                  		ret	z				; ...return (don't copy ayFX values in to AYREGS)
     165:  00:8CC9                      		; --- Copy ayFX values in to ARYREGS ---
     166:  00:8CC9  0F                  		rrca					; Rotate a to the right (1 TIME)
     167:  00:8CCA  0F                  		rrca					; Rotate a to the right (2 TIMES) (OR mask)
     168:  00:8CCB  16 DB               		ld	d,$DB				; d:=Mask for psg mixer (AND mask)
     169:  00:8CCD                      		; --- Dump to correct channel ---
     170:  00:8CCD  21 4A F2            		ld	hl,ayFX_CHANNEL			; Next ayFX playing channel
     171:  00:8CD0  46                  		ld	b,[hl]				; Channel counter
     172:  00:8CD1                      .CHK1:		; --- Check if playing channel was 1 ---
     173:  00:8CD1  10 0D               		djnz	.CHK2				; Decrement and jump if channel was not 1
     174:  00:8CD3                      .PLAY_C:	; --- Play ayFX stream on channel C ---
     175:  00:8CD3  CD 02 8D            		call	.SETMIXER			; Set PSG mixer value (returning a=ayFX volume and hl=ayFX tone)
     176:  00:8CD6  32 4A F1            		ld	[AYREGS+10],a			; Volume copied in to AYREGS (channel C volume)
     177:  00:8CD9  CB 51               		bit	2,c				; If tone is off...
     178:  00:8CDB  C0                  		ret	nz				; ...return
     179:  00:8CDC  22 44 F1            		ld	[AYREGS+4],hl			; copied in to AYREGS (channel C tone)
     180:  00:8CDF  C9                  		ret					; Return
     181:  00:8CE0                      .CHK2:		; --- Check if playing channel was 2 ---
     182:  00:8CE0  CB 0A               		rrc	d				; Rotate right AND mask
     183:  00:8CE2  0F                  		rrca					; Rotate right OR mask
     184:  00:8CE3  10 0D               		djnz	.CHK3				; Decrement and jump if channel was not 2
     185:  00:8CE5                      .PLAY_B:	; --- Play ayFX stream on channel B ---
     186:  00:8CE5  CD 02 8D            		call	.SETMIXER			; Set PSG mixer value (returning a=ayFX volume and hl=ayFX tone)
     187:  00:8CE8  32 49 F1            		ld	[AYREGS+9],a			; Volume copied in to AYREGS (channel B volume)
     188:  00:8CEB  CB 49               		bit	1,c				; If tone is off...
     189:  00:8CED  C0                  		ret	nz				; ...return
     190:  00:8CEE  22 42 F1            		ld	[AYREGS+2],hl			; copied in to AYREGS (channel B tone)
     191:  00:8CF1  C9                  		ret					; Return
     192:  00:8CF2                      .CHK3:		; --- Check if playing channel was 3 ---
     193:  00:8CF2  CB 0A               		rrc	d				; Rotate right AND mask
     194:  00:8CF4  0F                  		rrca					; Rotate right OR mask
     195:  00:8CF5                      .PLAY_A:	; --- Play ayFX stream on channel A ---
     196:  00:8CF5  CD 02 8D            		call	.SETMIXER			; Set PSG mixer value (returning a=ayFX volume and hl=ayFX tone)
     197:  00:8CF8  32 48 F1            		ld	[AYREGS+8],a			; Volume copied in to AYREGS (channel A volume)
     198:  00:8CFB  CB 41               		bit	0,c				; If tone is off...
     199:  00:8CFD  C0                  		ret	nz				; ...return
     200:  00:8CFE  22 40 F1            		ld	[AYREGS+0],hl			; copied in to AYREGS (channel A tone)
     201:  00:8D01  C9                  		ret					; Return
     202:  00:8D02                      .SETMIXER:	; --- Set PSG mixer value ---
     203:  00:8D02  4F                  		ld	c,a				; c:=OR mask
     204:  00:8D03  3A 47 F1            		ld	a,[AYREGS+7]			; a:=PSG mixer value
     205:  00:8D06  A2                  		and	d				; AND mask
     206:  00:8D07  B1                  		or	c				; OR mask
     207:  00:8D08  32 47 F1            		ld	[AYREGS+7],a			; PSG mixer value updated
     208:  00:8D0B  3A 49 F2            		ld	a,[ayFX_VOLUME]			; a:=ayFX volume value
     209:  00:8D0E  2A 46 F2            		ld	hl,[ayFX_TONE]			; ayFX tone value
     210:  00:8D11  C9                  		ret					; Return
     211:  00:8D12                      
     212:  00:8D12                      		IF ( AYFXRELATIVE == 1 )
     213:  00:8D12                    ~ 			; --- UNCOMMENT THIS IF YOU DON'T USE THIS REPLAYER WITH PT3 REPLAYER ---
     214:  00:8D12                    ~ 		;VT_:	.INCBIN	"VT.BIN"
     215:  00:8D12                    ~ 			; --- UNCOMMENT THIS IF YOU DON'T USE THIS REPLAYER WITH PT3 REPLAYER ---
     216:  00:8D12                    ~ 		ENDIF
      62.  00:8D12                      	
      63.  00:8D12                      	
      64.  00:8D12                      
      65.  00:8D12                      ;;=====================================================
      66.  00:8D12                      ;;DEFINICIÓN DE CANTIONES Y EFECTOS DE SONIDO
      67.  00:8D12                      ;;=====================================================		
      68.  00:8D12                      song:
      69.  00:8D12  (0968)              	incbin "bloodytears_castlevania.99"
      70.  00:967A                      	
      71.  00:967A                      sfx_bank:
      72.  00:967A  (004B)              	incbin "demo.afb"
      73.  00:96C5                      
     120   00:96C5                      	
     121   00:96C5                      	include "subr_ayudas.asm"
       1.  00:96C5                      ;;=====================================================
       2.  00:96C5                      ;;SUBRUTINAS MANEJO DE OBJETOS AYUDA
       3.  00:96C5                      ;;=====================================================	
       4.  00:96C5                      
       5.  00:96C5                      
       6.  00:96C5                      
       7.  00:96C5                      
       8.  00:96C5                      ;;=====================================================
       9.  00:96C5                      ;;RESETEA AYUDAS
      10.  00:96C5                      ;;=====================================================	
      11.  00:96C5                      ; función: 	inicializa las variables de estructuras de ayuda del array lista_ayudas
      12.  00:96C5                      ; entrada: 	lista_ayudas
      13.  00:96C5                      ; salida: 	lista_ayudas
      14.  00:96C5                      resetea_ayudas:
      15.  00:96C5  DD 21 37 A6         	LD		IX, lista_ayudas
      16.  00:96C9                      	;oración
      17.  00:96C9  DD 36 00 00         	LD		(IX + 0), INACTIVO
      18.  00:96CD  DD 36 01 00         	LD		(IX + 1), ORACIONON
      19.  00:96D1  DD 36 02 04         	LD		(IX + 2), ORACIONOFF
      20.  00:96D5  21 F5 97            	LD		HL, accion_oracion
      21.  00:96D8  DD 74 06            	LD		(IX + 6), H
      22.  00:96DB  DD 75 07            	LD		(IX + 7), L
      23.  00:96DE                      	;cruz
      24.  00:96DE  DD 36 08 00         	LD		(IX + 8), INACTIVO
      25.  00:96E2  DD 36 09 08         	LD		(IX + 9), CRUZON
      26.  00:96E6  DD 36 0A 0C         	LD		(IX + 10), CRUZOFF
      27.  00:96EA  21 F6 97            	LD		HL, accion_cruz
      28.  00:96ED  DD 74 0E            	LD		(IX + 14), H
      29.  00:96F0  DD 75 0F            	LD		(IX + 15), L
      30.  00:96F3                      	;agua bendita
      31.  00:96F3  DD 36 10 00         	LD		(IX + 16), INACTIVO
      32.  00:96F7  DD 36 11 10         	LD		(IX + 17), AGUAON
      33.  00:96FB  DD 36 12 14         	LD		(IX + 18), AGUAOFF
      34.  00:96FF  21 F7 97            	LD		HL, accion_agua
      35.  00:9702  DD 74 16            	LD		(IX + 22), H
      36.  00:9705  DD 75 17            	LD		(IX + 23), L
      37.  00:9708                      	;armadura
      38.  00:9708  DD 36 18 00         	LD		(IX + 24), INACTIVO
      39.  00:970C  DD 36 19 18         	LD		(IX + 25), ARMADON
      40.  00:9710  DD 36 1A 1C         	LD		(IX + 26), ARMADOFF
      41.  00:9714  21 F7 97            	LD		HL, accion_agua
      42.  00:9717  DD 74 1E            	LD		(IX + 30), H
      43.  00:971A  DD 75 1F            	LD		(IX + 31), L
      44.  00:971D                      	;planta
      45.  00:971D  DD 36 20 00         	LD		(IX + 32), INACTIVO
      46.  00:9721  DD 36 21 20         	LD		(IX + 33), PLANTAON
      47.  00:9725  DD 36 22 24         	LD		(IX + 34), PLANTAOFF
      48.  00:9729  21 F9 97            	LD		HL, accion_planta
      49.  00:972C  DD 74 26            	LD		(IX + 38), H
      50.  00:972F  DD 75 27            	LD		(IX + 39), L
      51.  00:9732                      	;vida extra
      52.  00:9732  DD 36 28 00         	LD		(IX + 40), INACTIVO
      53.  00:9736  DD 36 29 28         	LD		(IX + 41), VIDAEXTON
      54.  00:973A  DD 36 2A 2C         	LD		(IX + 42), VIDAEXTOFF
      55.  00:973E  21 FA 97            	LD		HL, accion_vidaextra
      56.  00:9741  DD 74 2E            	LD		(IX + 46), H
      57.  00:9744  DD 75 2F            	LD		(IX + 47), L
      58.  00:9747                      	;ballesta
      59.  00:9747  DD 36 30 00         	LD		(IX + 48), INACTIVO
      60.  00:974B  DD 36 31 30         	LD		(IX + 49), BALLESON
      61.  00:974F  DD 36 32 34         	LD		(IX + 50), BALLESOFF
      62.  00:9753  21 FB 97            	LD		HL, accion_ballesta
      63.  00:9756  DD 74 36            	LD		(IX + 54), H
      64.  00:9759  DD 75 37            	LD		(IX + 55), L	
      65.  00:975C                      fin_resetea_ayudas:
      66.  00:975C  C9                  	RET
      67.  00:975D                      
      68.  00:975D                      
      69.  00:975D                      
      70.  00:975D                      
      71.  00:975D                      
      72.  00:975D                      ;;=====================================================
      73.  00:975D                      ;;INICIALIZA_AYUDAS
      74.  00:975D                      ;;=====================================================	
      75.  00:975D                      ; función: 	inicializa las estructuras de las ayudas
      76.  00:975D                      ; entrada: 	
      77.  00:975D                      ; salida: 	-
      78.  00:975D                      ; toca:		todo
      79.  00:975D                      inicializa_ayudas:
      80.  00:975D                      	;busca objetos a incluir y actualiza sus variables/estructura
      81.  00:975D  3A 5D A2            	LD		 A, (habitacion_extras)
      82.  00:9760                      	
      83.  00:9760                      .examina_ayudas:
      84.  00:9760                      .examina_ballesta:
      85.  00:9760  CB 7F               	BIT		 7, A
      86.  00:9762  CA 70 97            	JP		 Z, .examina_vidaextra
      87.  00:9765  DD 21 67 A6         	LD		IX, ayuda_ballesta
      88.  00:9769  06 30               	LD		 B, BALLESON
      89.  00:976B  08                  	EX		AF, AF'
      90.  00:976C  CD C1 97            	CALL	calcula_posicion_ayuda
      91.  00:976F  08                  	EX		AF, AF'
      92.  00:9770                      .examina_vidaextra:
      93.  00:9770  CB 77               	BIT		 6, A
      94.  00:9772  CA 8A 97            	JP		 Z, .examina_armadura
      95.  00:9775  DD 21 5F A6         	LD		IX, ayuda_vidaextra
      96.  00:9779  08                  	EX		AF, AF'
      97.  00:977A  CD C1 97            	CALL	calcula_posicion_ayuda
      98.  00:977D  08                  	EX		AF, AF'
      99.  00:977E                      .examina_planta:
     100.  00:977E  CB 6F               	BIT		 5, A
     101.  00:9780  CA 8A 97            	JP		 Z, .examina_armadura
     102.  00:9783  DD 21 57 A6         	LD		IX, ayuda_planta
     103.  00:9787  CD C1 97            	CALL	calcula_posicion_ayuda
     104.  00:978A                      .examina_armadura:
     105.  00:978A  CB 6F               	BIT		 5, A
     106.  00:978C  CC 98 97            	CALL	 Z, .examina_agua
     107.  00:978F  DD 21 4F A6         	LD		IX, ayuda_armadura
     108.  00:9793  08                  	EX		AF, AF'
     109.  00:9794  CD C1 97            	CALL	calcula_posicion_ayuda
     110.  00:9797  08                  	EX		AF, AF'
     111.  00:9798                      .examina_agua:
     112.  00:9798  CB 67               	BIT		 4, A
     113.  00:979A  CA A6 97            	JP		 Z, .examina_cruz
     114.  00:979D  DD 21 47 A6         	LD		IX, ayuda_aguabendita
     115.  00:97A1  08                  	EX		AF, AF'
     116.  00:97A2  CD C1 97            	CALL	calcula_posicion_ayuda
     117.  00:97A5  08                  	EX		AF, AF'
     118.  00:97A6                      .examina_cruz:
     119.  00:97A6  CB 5F               	BIT		 3, A
     120.  00:97A8  CA B4 97            	JP		 Z, .examina_oracion
     121.  00:97AB  DD 21 3F A6         	LD		IX, ayuda_cruz
     122.  00:97AF  08                  	EX		AF, AF'
     123.  00:97B0  CD C1 97            	CALL	calcula_posicion_ayuda
     124.  00:97B3  08                  	EX		AF, AF'
     125.  00:97B4                      .examina_oracion:
     126.  00:97B4  CB 57               	BIT		 2, A
     127.  00:97B6  CA C0 97            	JP		 Z, .fin_examina_ayudas
     128.  00:97B9  DD 21 37 A6         	LD		IX, ayuda_oracion
     129.  00:97BD                      	;EX		AF, AF'					;no se necesita preservar ya que es la última
     130.  00:97BD  C3 C1 97            	JP		calcula_posicion_ayuda	;no se necesita un CALL ya que es la última
     131.  00:97C0                      .fin_examina_ayudas:	
     132.  00:97C0                      fin_inicializa_ayudas:
     133.  00:97C0  C9                  	RET
     134.  00:97C1                      
     135.  00:97C1                      
     136.  00:97C1                      
     137.  00:97C1                      ;;=====================================================
     138.  00:97C1                      ;;CALCULA_POSICION_AYUDA
     139.  00:97C1                      ;;=====================================================	
     140.  00:97C1                      ; función: 	actualiza los valores de la estructura (pos_tile, posx y posy)
     141.  00:97C1                      ; entrada: 	
     142.  00:97C1                      ; salida: 	-
     143.  00:97C1                      calcula_posicion_ayuda:
     144.  00:97C1                      
     145.  00:97C1  DD 36 00 01         	LD		(IX), ACTIVO		;activa el objeto con un valor distinto de 0
     146.  00:97C5                      	
     147.  00:97C5                      	;se recibe objeto an A desde fuera, por ejmplo LD		 A, CRUZOFF
     148.  00:97C5  78                  	LD		A, B
     149.  00:97C6  01 FF A5            	LD		BC, array_ayudas
     150.  00:97C9  CD DC 80            	CALL 	suma_A_BC
     151.  00:97CC                      	
     152.  00:97CC                      	;coloca pos array objeto a pintar en 
     153.  00:97CC  ED 43 A1 84         	LD		(wordaux2), BC
     154.  00:97D0                      ;	LD		 A, ORACIONON
     155.  00:97D0                      ;	CALL	pinta_obj_ayuda
     156.  00:97D0                      
     157.  00:97D0                      fin_calcula_posicion_ayuda:
     158.  00:97D0  C9                  	RET
     159.  00:97D1                      
     160.  00:97D1                      
     161.  00:97D1                      
     162.  00:97D1                      
     163.  00:97D1                      
     164.  00:97D1                      ;;=====================================================
     165.  00:97D1                      ;;PINTA_OBJ_AYUDA
     166.  00:97D1                      ;;=====================================================	
     167.  00:97D1                      ; función: 	
     168.  00:97D1                      ; entrada: 	A - objeto a mostrar
     169.  00:97D1                      ; salida: 	-
     170.  00:97D1                      ; toca:		AF, HL, BC, DE
     171.  00:97D1                      pinta_obj_ayuda:
     172.  00:97D1                      
     173.  00:97D1                      	
     174.  00:97D1  21 00 19            	LD		HL, TILMAP + 256	;calcula posición en tilemap + 256 por colocarse siempre en bank1
     175.  00:97D4                      	
     176.  00:97D4  ED 5F               	LD		 A, R				;obtengo un valor "random" entre 0 y 255
     177.  00:97D6  E6 0F               	AND		00001111b			;me quedo con los 4 bits menos signif. y obtengo entre 0 y 15 (tamaño del array pos_ayudas)
     178.  00:97D8  01 EF A5            	LD		BC, pos_ayudas		;puntero a inicio de array pos_ayudas
     179.  00:97DB  CD DC 80            	CALL 	suma_A_BC			;tengo en BC la pos de memoria de pos_ayudas
     180.  00:97DE                      	
     181.  00:97DE  0A                  	LD		 A, (BC)			;tengo en A la posición dentro del bank1 
     182.  00:97DF  16 00               	LD		 D, 0
     183.  00:97E1  5F                  	LD		 E, A
     184.  00:97E2  19                  	ADD		HL, DE				;le sumo a HL la posción de inicio de tilemap + 256 + dónde colocar el objeto
     185.  00:97E3                      
     186.  00:97E3  22 9F 84            	LD		(wordaux1), HL		;pongo el valor en wordaux1
     187.  00:97E6                      		
     188.  00:97E6  3E 02               	LD		 A, 2				;nº de filas
     189.  00:97E8  32 A3 84            	LD		(byteaux1), A	
     190.  00:97EB  3E 02               	LD		 A, 2				;nº de columnas
     191.  00:97ED  32 A4 84            	LD		(byteaux2), A
     192.  00:97F0                      
     193.  00:97F0  C3 5F 84            	JP		pinta_array
     194.  00:97F3                      fin_pinta_obj_ayuda:
     195.  00:97F3  C9                  	RET
     196.  00:97F4  00                  objeto_pintar:		DB		0
     197.  00:97F5                      	
     198.  00:97F5                      
     199.  00:97F5                      
     200.  00:97F5                      
     201.  00:97F5                      ;;=====================================================
     202.  00:97F5                      ;;ACCION_ORACION
     203.  00:97F5                      ;;=====================================================	
     204.  00:97F5                      ; función: 	
     205.  00:97F5                      ; entrada: 	
     206.  00:97F5                      ; salida: 	-
     207.  00:97F5                      accion_oracion:
     208.  00:97F5                      fin_accion_oracion:
     209.  00:97F5  C9                  	RET
     210.  00:97F6                      	
     211.  00:97F6                      
     212.  00:97F6                      ;;=====================================================
     213.  00:97F6                      ;;ACCION_CRUZ
     214.  00:97F6                      ;;=====================================================	
     215.  00:97F6                      ; función: 	
     216.  00:97F6                      ; entrada: 	
     217.  00:97F6                      ; salida: 	-
     218.  00:97F6                      accion_cruz:
     219.  00:97F6                      fin_accion_cruz:
     220.  00:97F6  C9                  	RET
     221.  00:97F7                      
     222.  00:97F7                      
     223.  00:97F7                      ;;=====================================================
     224.  00:97F7                      ;;ACCION_AGUA
     225.  00:97F7                      ;;=====================================================	
     226.  00:97F7                      ; función: 	
     227.  00:97F7                      ; entrada: 	
     228.  00:97F7                      ; salida: 	-
     229.  00:97F7                      accion_agua:
     230.  00:97F7                      fin_accion_agua:
     231.  00:97F7  C9                  	RET
     232.  00:97F8                      
     233.  00:97F8                      
     234.  00:97F8                      ;;=====================================================
     235.  00:97F8                      ;;ACCION_ARMADURA
     236.  00:97F8                      ;;=====================================================	
     237.  00:97F8                      ; función: 	
     238.  00:97F8                      ; entrada: 	
     239.  00:97F8                      ; salida: 	-
     240.  00:97F8                      accion_armadura:
     241.  00:97F8                      fin_accion_armadura:
     242.  00:97F8  C9                  	RET
     243.  00:97F9                      
     244.  00:97F9                      
     245.  00:97F9                      ;;=====================================================
     246.  00:97F9                      ;;ACCION_PLANTA
     247.  00:97F9                      ;;=====================================================	
     248.  00:97F9                      ; función: 	
     249.  00:97F9                      ; entrada: 	
     250.  00:97F9                      ; salida: 	-
     251.  00:97F9                      accion_planta:
     252.  00:97F9                      fin_accion_planta:
     253.  00:97F9  C9                  	RET
     254.  00:97FA                      
     255.  00:97FA                      
     256.  00:97FA                      ;;=====================================================
     257.  00:97FA                      ;;ACCION_VIDAEXTRA
     258.  00:97FA                      ;;=====================================================	
     259.  00:97FA                      ; función: 	
     260.  00:97FA                      ; entrada: 	
     261.  00:97FA                      ; salida: 	-
     262.  00:97FA                      accion_vidaextra:
     263.  00:97FA                      fin_accion_vidaextra:
     264.  00:97FA  C9                  	RET
     265.  00:97FB                      
     266.  00:97FB                      
     267.  00:97FB                      
     268.  00:97FB                      
     269.  00:97FB                      ;;=====================================================
     270.  00:97FB                      ;;ACCION_VIDAEXTRA
     271.  00:97FB                      ;;=====================================================	
     272.  00:97FB                      ; función: 	
     273.  00:97FB                      ; entrada: 	
     274.  00:97FB                      ; salida: 	-
     275.  00:97FB                      accion_ballesta:
     276.  00:97FB                      fin_accion_ballesta:
     277.  00:97FB  C9                  	RET
     278.  00:97FC                      
     122   00:97FC                      	
     123   00:97FC                      
     124   00:97FC                      ;;=====================================================
     125   00:97FC                      ;;DEFINICIÓN DE SUBRUTINAS DE FERNANDO PARA COMPRESIÓN Y SONIDO
     126   00:97FC                      ;;=====================================================
     127   00:97FC                      ;Este include lleva la rutina de descompresión de ROM/RAM a VRAM de pletter
     128   00:97FC                      ;Está adaptada de la original a sjasm
     129   00:97FC                      ;	HL = RAM/ROM source	; DE = VRAM destination
     130   00:97FC                      depack_VRAM:
     131   00:97FC                      	include "PL_VRAM_Depack_SJASM.asm"
       1.  00:97FC                      ;-----------------------------------------------------------
       2.  00:97FC                      ; Pletter v0.5b VRAM Depacker v1.1 - 16Kb version
       3.  00:97FC                      ; HL = RAM/ROM source ; DE = VRAM destination
       4.  00:97FC                      ;-----------------------------------------------------------
       5.  00:97FC  F3                  	di
       6.  00:97FD                      
       7.  00:97FD                      ; VRAM address setup
       8.  00:97FD  7B                  	ld	a,e
       9.  00:97FE  D3 99               	out	[099h],a
      10.  00:9800  7A                  	ld	a,d
      11.  00:9801  F6 40               	or	040h
      12.  00:9803  D3 99               	out	[099h],a
      13.  00:9805                      
      14.  00:9805                      ; Initialization
      15.  00:9805  7E                  	ld	a,[hl]
      16.  00:9806  23                  	inc	hl
      17.  00:9807  D9                  	exx
      18.  00:9808  11 00 00            	ld	de,0
      19.  00:980B  87                  	add	a,a
      20.  00:980C  3C                  	inc	a
      21.  00:980D  CB 13               	rl	e
      22.  00:980F  87                  	add	a,a
      23.  00:9810  CB 13               	rl	e
      24.  00:9812  87                  	add	a,a
      25.  00:9813  CB 13               	rl	e
      26.  00:9815  CB 13               	rl	e
      27.  00:9817  21 CE 98            	ld	hl,modes
      28.  00:981A  19                  	add	hl,de
      29.  00:981B  5E                  	ld	e,[hl]
      30.  00:981C  DD 6B               	ld	ixl,e
      31.  00:981E  23                  	inc	hl
      32.  00:981F  5E                  	ld	e,[hl]
      33.  00:9820  DD 63               	ld	ixh,e
      34.  00:9822  1E 01               	ld	e,1
      35.  00:9824  D9                  	exx
      36.  00:9825  FD 21 2E 98         	ld	iy,loop
      37.  00:9829                      
      38.  00:9829                      ; Main depack loop
      39.  00:9829  0E 98               literal:ld	c,098h
      40.  00:982B  ED A3               	outi
      41.  00:982D  13                  	inc	de
      42.  00:982E  87                  loop:	add	a,a
      43.  00:982F  CC C2 98              	call	z,getbit
      44.  00:9832  30 F5               	jr	nc,literal
      45.  00:9834                      
      46.  00:9834                      ; Compressed data
      47.  00:9834  D9                  	exx
      48.  00:9835  62                  	ld	h,d
      49.  00:9836  6B                  	ld	l,e
      50.  00:9837  87                  getlen: add	a,a
      51.  00:9838  CC C6 98            	call	z,getbitexx
      52.  00:983B  30 1D               	jr	nc,lenok
      53.  00:983D  87                  lus:	add	a,a
      54.  00:983E  CC C6 98            	call	z,getbitexx
      55.  00:9841  ED 6A               	adc	hl,hl
      56.  00:9843  D8                  	ret	c
      57.  00:9844  87                  	add	a,a
      58.  00:9845  CC C6 98            	call	z,getbitexx
      59.  00:9848  30 10               	jr	nc,lenok
      60.  00:984A  87                  	add	a,a
      61.  00:984B  CC C6 98            	call	z,getbitexx
      62.  00:984E  ED 6A               	adc	hl,hl
      63.  00:9850  DA CC 98            	jp	c,Depack_out
      64.  00:9853  87                  	add	a,a
      65.  00:9854  CC C6 98            	call	z,getbitexx
      66.  00:9857  DA 3D 98            	jp	c,lus
      67.  00:985A  23                  lenok:  inc	hl
      68.  00:985B  D9                  	exx
      69.  00:985C  4E                  	ld	c,[hl]
      70.  00:985D  23                  	inc	hl
      71.  00:985E  06 00               	ld	b,0
      72.  00:9860  CB 79               	bit	7,c
      73.  00:9862  CA 95 98            	jp	z,offsok
      74.  00:9865  DD E9               	jp	ix
      75.  00:9867                      
      76.  00:9867  87                  mode7:  add	a,a
      77.  00:9868  CC C2 98              	call	z,getbit
      78.  00:986B  CB 10               	rl	b
      79.  00:986D  87                  mode6:	add	a,a
      80.  00:986E  CC C2 98              	call	z,getbit
      81.  00:9871  CB 10               	rl	b
      82.  00:9873  87                  mode5:  add	a,a
      83.  00:9874  CC C2 98              	call	z,getbit
      84.  00:9877  CB 10               	rl	b
      85.  00:9879  87                  mode4:  add	a,a
      86.  00:987A  CC C2 98              	call	z,getbit
      87.  00:987D  CB 10               	rl	b
      88.  00:987F  87                  mode3:  add	a,a
      89.  00:9880  CC C2 98              	call	z,getbit
      90.  00:9883  CB 10               	rl	b
      91.  00:9885  87                  mode2:	add	a,a
      92.  00:9886  CC C2 98              	call	z,getbit
      93.  00:9889  CB 10               	rl	b
      94.  00:988B  87                  	add	a,a
      95.  00:988C  CC C2 98              	call	z,getbit
      96.  00:988F  30 04               	jr	nc,offsok
      97.  00:9891  B7                  	or	a
      98.  00:9892  04                  	inc	b
      99.  00:9893  CB B9               	res	7,c
     100.  00:9895  03                  offsok: inc	bc
     101.  00:9896  E5                  	push	hl
     102.  00:9897  D9                  	exx
     103.  00:9898  E5                  	push	hl
     104.  00:9899  D9                  	exx
     105.  00:989A  6B                  	ld	l,e
     106.  00:989B  62                  	ld	h,d
     107.  00:989C  ED 42               	sbc	hl,bc
     108.  00:989E  C1                  	pop	bc
     109.  00:989F  F5                  	push	af
     110.  00:98A0  7D                  .loop:	ld	a,l
     111.  00:98A1  D3 99               	out	[099h],a
     112.  00:98A3  7C                  	ld	a,h
     113.  00:98A4  00                  	nop                     ; VDP timing
     114.  00:98A5  D3 99               	out	[099h],a
     115.  00:98A7  00                  	nop                     ; VDP timing
     116.  00:98A8  DB 98               	in	a,[098h]
     117.  00:98AA  08                  	ex	af,af'
     118.  00:98AB  7B                  	ld	a,e
     119.  00:98AC  00                  	nop			; VDP timing
     120.  00:98AD  D3 99               	out	[099h],a
     121.  00:98AF  7A                  	ld	a,d
     122.  00:98B0  F6 40               	or	040h
     123.  00:98B2  D3 99               	out	[099h],a
     124.  00:98B4  08                  	ex	af,af'
     125.  00:98B5  00                  	nop			; VDP timing
     126.  00:98B6  D3 98               	out	[098h],a
     127.  00:98B8  13                  	inc	de
     128.  00:98B9  ED A1               	cpi
     129.  00:98BB  EA A0 98            	jp	pe,.loop
     130.  00:98BE  F1                  	pop	af
     131.  00:98BF  E1                  	pop	hl
     132.  00:98C0  FD E9               	jp	iy
     133.  00:98C2                      
     134.  00:98C2  7E                  getbit: ld	a,[hl]
     135.  00:98C3  23                  	inc	hl
     136.  00:98C4  17                  	rla
     137.  00:98C5  C9                  	ret
     138.  00:98C6                      
     139.  00:98C6                      getbitexx:
     140.  00:98C6  D9                  	exx
     141.  00:98C7  7E                  	ld	a,[hl]
     142.  00:98C8  23                  	inc	hl
     143.  00:98C9  D9                  	exx
     144.  00:98CA  17                  	rla
     145.  00:98CB  C9                  	ret
     146.  00:98CC                      
     147.  00:98CC                      ; Depacker exit
     148.  00:98CC                      Depack_out:
     149.  00:98CC  FB                  	ei
     150.  00:98CD  C9                  	ret
     151.  00:98CE                      
     152.  00:98CE                      modes:
     153.  00:98CE  95 98               	dw	offsok
     154.  00:98D0  85 98               	dw	mode2
     155.  00:98D2  7F 98               	dw	mode3
     156.  00:98D4  79 98               	dw	mode4
     157.  00:98D6  73 98               	dw	mode5
     158.  00:98D8  6D 98               	dw	mode6
     159.  00:98DA  67 98               	dw	mode7
     132   00:98DC                      
     133   00:98DC                      
     134   00:98DC                      	
     135   00:98DC                      ;;=====================================================
     136   00:98DC                      ;;DEFINICIÓN DE ESTRUCTURAS
     137   00:98DC                      ;;=====================================================		
     138   00:98DC                      	include "estructuras.asm"
       1.  00:98DC                      ;;=====================================================
       2.  00:98DC                      ;;DEFINICIÓN DE ESTRUCTURAS
       3.  00:98DC                      ;;=====================================================
       4.  00:98DC                      
       5.  00:98DC                      ;crear estructura
       6.  00:98DC                      
       7.  00:98DC                      	STRUCT ESTRUCTURA_PUNTOMIRA
       8.  00:98DC                    < posx			DB		100
       9.  00:98DC                    < posy			DB		100
      10.  00:98DC                    < escena			DB		0	;valores porsibles 0 (blanco+rojo en punto de mira) y NEG 0 (al revés)
      11.  00:98DC                    < velocidad		DB		0
      12.  00:98DC                    < boton2_pressed  DB		0
      13.  00:98DC                    < cadencia		DB		5	;nº de veces que se ejecutará el disparo antes de ejecutar un disparo real (porque cuando se pulsa la tecl dispara 3 ó 4 veces de rápido que va)
      14.  00:98DC                    < ; al final he decidido (ya que el punto de mira es el prota) que lo relacionado con el prota vaya en esta estructura
      15.  00:98DC                    < pm_aux1			DB		0	;para llegar a los 16 campos
      16.  00:98DC                    < pm_aux2			DB		0	;para llegar a los 16 campos
      17.  00:98DC                    < pm_aux3			DB		0	;para llegar a los 16 campos
      18.  00:98DC                    < pm_aux4			DB		0	;para llegar a los 16 campos
      19.  00:98DC                    < pm_aux5			DB		0	;para llegar a los 16 campos
      20.  00:98DC                    < pm_aux6			DB		0	;para llegar a los 16 campos
      21.  00:98DC                    < pm_aux7			DB		0	;para llegar a los 16 campos
      22.  00:98DC                    < pm_aux8			DB		0	;para llegar a los 16 campos
      23.  00:98DC                    < pm_aux9			DB		0	;para llegar a los 16 campos
      24.  00:98DC                    < pm_aux10		DB		0	;para llegar a los 16 campos
      25.  00:98DC                    < 	ENDSTRUCT;ESTRUCTURA_PUNTOMIRA
      26.  00:98DC                      
      27.  00:98DC                      	
      28.  00:98DC                      	STRUCT ESTRUCTURA_ENEMIGO
      29.  00:98DC                    < tipo				DB		0	;(0 serpiente por ejemplo) #FF muerto o no existe
      30.  00:98DC                    < posx				DB		5
      31.  00:98DC                    < posy				DB		50
      32.  00:98DC                    < color				DB		5
      33.  00:98DC                    < escena				DB		0
      34.  00:98DC                    < contador_siguiente_escena	DB	0
      35.  00:98DC                    < reset_contador		DB		0
      36.  00:98DC                    < dano				DB		0	;daño
      37.  00:98DC                    < energia				DB		0	;energía del enemigo... si llega a 0 => existe <- 0
      38.  00:98DC                    < ;indica el nº de sprite a mostrar y si está compuesto por uno o dos sprites y si están en horizontal o vertical
      39.  00:98DC                    < ver_hor				DB		0
      40.  00:98DC                    < manejador_dibujo 	DW		0
      41.  00:98DC                    < en_aux3				DB		0
      42.  00:98DC                    < en_aux4				DB		0
      43.  00:98DC                    < 	ENDSTRUCT;ESTRUCTURA_ENEMIGO
      44.  00:98DC                      	
      45.  00:98DC                      	STRUCT ESTRUCTURA_AYUDA		;vidas extra, plantas de curación de energía, reliquias	
      46.  00:98DC                    < activo				DB		0	;0 no activo <>0 activo 
      47.  00:98DC                    < tipo				DB		0	;ver constantes 
      48.  00:98DC                    < tipousado			DB		0	;es tipo + 4
      49.  00:98DC                    < postile				DB		0	;como tiene algo de aleatoriedad se guarda para dibujar los tiles de usado
      50.  00:98DC                    < posx				DB		0
      51.  00:98DC                    < posy				DB		0
      52.  00:98DC                    < puntero_accion		DW		0	;subrutina que indica la acción si se dispara en el objeto
      53.  00:98DC                    < 	ENDSTRUCT;ESTRUCTURA_AYUDA
      54.  00:98DC                      
      55.  00:98DC                      
      56.  00:98DC                      
      57.  00:98DC                      
      58.  00:98DC                      
      59.  00:98DC                      
      60.  00:98DC                      
     139   00:98DC                      	
     140   00:98DC                      ;;=====================================================
     141   00:98DC                      ;;DEFINICIÓN DE VARIABLES
     142   00:98DC                      ;;=====================================================		
     143   00:98DC                      	include "sprites.asm"
       1.  00:98DC                      ;;=====================================================
       2.  00:98DC                      ;;DEFINICIÓN DE SPRITES
       3.  00:98DC                      ;;=====================================================	
       4.  00:98DC                      
       5.  00:98DC                      
       6.  00:98DC                      ;; NOTA:
       7.  00:98DC                      ;~ sprite_reliquia_oracion: on/off
       8.  00:98DC                      ;~ sprite_reliquia_cruz: on/off
       9.  00:98DC                      ;~ sprite_reliquia_agua: on/off
      10.  00:98DC                      ;~ sprite_peto: on/off
      11.  00:98DC                      ;~ sprite_planta: on/off
      12.  00:98DC                      ;~ sprite_vida_extra: on/off
      13.  00:98DC                      ;~ sprite_ballesta_mejorada: on/off
      14.  00:98DC                      
      15.  00:98DC                      ;~ iban a ser sprites pero por falta de recursos serán tiles
      16.  00:98DC                      
      17.  00:98DC                      
      18.  00:98DC                      sprites_pantantalla:
      19.  00:98DC                      
      20.  00:98DC                      ;; PARTE 1: SPRITES COMUNES
      21.  00:98DC                      
      22.  00:98DC                      sprites_comunes:
      23.  00:98DC                      sprite_punto_mira_1:	;color 8
      24.  00:98DC                      	db #FF,#FF,#C0,#C0,#C0,#C0,#C0,#C0
      24.  00:98DC  FF FF C0 C0 C0 C0 C0 C0 
      25.  00:98E4                      	db #C0,#C0,#C0,#C0,#C0,#C0,#FF,#FF
      25.  00:98E4  C0 C0 C0 C0 C0 C0 FF FF 
      26.  00:98EC                      	db #FF,#FF,#03,#03,#03,#03,#03,#03
      26.  00:98EC  FF FF 03 03 03 03 03 03 
      27.  00:98F4                      	db #03,#03,#03,#03,#03,#03,#FF,#FF
      27.  00:98F4  03 03 03 03 03 03 FF FF 
      28.  00:98FC                      	
      29.  00:98FC                      sprite_punto_mira_2: 	;color 15
      30.  00:98FC                      	db #00,#00,#00,#00,#0F,#0F,#0C,#0C
      30.  00:98FC  00 00 00 00 0F 0F 0C 0C 
      31.  00:9904                      	db #0C,#0C,#0F,#0F,#00,#00,#00,#00
      31.  00:9904  0C 0C 0F 0F 00 00 00 00 
      32.  00:990C                      	db #00,#00,#00,#00,#F0,#F0,#30,#30
      32.  00:990C  00 00 00 00 F0 F0 30 30 
      33.  00:9914                      	db #30,#30,#F0,#F0,#00,#00,#00,#00
      33.  00:9914  30 30 F0 F0 00 00 00 00 
      34.  00:991C                      	
      35.  00:991C                      sprite_punto_mira_1_mejorado:
      36.  00:991C                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      36.  00:991C  FF FF FF FF FF FF FF FF 
      37.  00:9924                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      37.  00:9924  FF FF FF FF FF FF FF FF 
      38.  00:992C                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      38.  00:992C  FF FF FF FF FF FF FF FF 
      39.  00:9934                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      39.  00:9934  FF FF FF FF FF FF FF FF 
      40.  00:993C                      
      41.  00:993C                      sprite_punto_mira_2_mejorado:
      42.  00:993C                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      42.  00:993C  FF FF FF FF FF FF FF FF 
      43.  00:9944                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      43.  00:9944  FF FF FF FF FF FF FF FF 
      44.  00:994C                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      44.  00:994C  FF FF FF FF FF FF FF FF 
      45.  00:9954                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      45.  00:9954  FF FF FF FF FF FF FF FF 
      46.  00:995C                      	
      47.  00:995C                      sprite_explosion_1:
      48.  00:995C                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      48.  00:995C  FF FF FF FF FF FF FF FF 
      49.  00:9964                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      49.  00:9964  FF FF FF FF FF FF FF FF 
      50.  00:996C                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      50.  00:996C  FF FF FF FF FF FF FF FF 
      51.  00:9974                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF	
      51.  00:9974  FF FF FF FF FF FF FF FF 
      52.  00:997C                      
      53.  00:997C                      sprite_explosion_2:
      54.  00:997C                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      54.  00:997C  FF FF FF FF FF FF FF FF 
      55.  00:9984                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      55.  00:9984  FF FF FF FF FF FF FF FF 
      56.  00:998C                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      56.  00:998C  FF FF FF FF FF FF FF FF 
      57.  00:9994                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF	
      57.  00:9994  FF FF FF FF FF FF FF FF 
      58.  00:999C                      fin_sprites_comunes:
      59.  00:999C                      
      60.  00:999C                      ;; PARTE 2: SPRITES NO COMUNES
      61.  00:999C                      
      62.  00:999C                      ;; ARAÑA
      63.  00:999C                      	
      64.  00:999C                      sprite_arana1_1:
      65.  00:999C                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      65.  00:999C  FF FF FF FF FF FF FF FF 
      66.  00:99A4                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      66.  00:99A4  FF FF FF FF FF FF FF FF 
      67.  00:99AC                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      67.  00:99AC  FF FF FF FF FF FF FF FF 
      68.  00:99B4                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      68.  00:99B4  FF FF FF FF FF FF FF FF 
      69.  00:99BC                      	
      70.  00:99BC                      sprite_arana1_2:
      71.  00:99BC                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      71.  00:99BC  FF FF FF FF FF FF FF FF 
      72.  00:99C4                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      72.  00:99C4  FF FF FF FF FF FF FF FF 
      73.  00:99CC                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      73.  00:99CC  FF FF FF FF FF FF FF FF 
      74.  00:99D4                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      74.  00:99D4  FF FF FF FF FF FF FF FF 
      75.  00:99DC                      
      76.  00:99DC                      ;; MURCIELAGO
      77.  00:99DC                      	
      78.  00:99DC                      sprite_murcielago1_1:
      79.  00:99DC                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      79.  00:99DC  FF FF FF FF FF FF FF FF 
      80.  00:99E4                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      80.  00:99E4  FF FF FF FF FF FF FF FF 
      81.  00:99EC                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      81.  00:99EC  FF FF FF FF FF FF FF FF 
      82.  00:99F4                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      82.  00:99F4  FF FF FF FF FF FF FF FF 
      83.  00:99FC                      	
      84.  00:99FC                      sprite_murcielago1_2:
      85.  00:99FC                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      85.  00:99FC  FF FF FF FF FF FF FF FF 
      86.  00:9A04                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      86.  00:9A04  FF FF FF FF FF FF FF FF 
      87.  00:9A0C                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      87.  00:9A0C  FF FF FF FF FF FF FF FF 
      88.  00:9A14                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF	
      88.  00:9A14  FF FF FF FF FF FF FF FF 
      89.  00:9A1C                      
      90.  00:9A1C                      ;; SERPIENTE
      91.  00:9A1C                      
      92.  00:9A1C                      sprite_serpiente1_1:
      93.  00:9A1C                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      93.  00:9A1C  FF FF FF FF FF FF FF FF 
      94.  00:9A24                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      94.  00:9A24  FF FF FF FF FF FF FF FF 
      95.  00:9A2C                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      95.  00:9A2C  FF FF FF FF FF FF FF FF 
      96.  00:9A34                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      96.  00:9A34  FF FF FF FF FF FF FF FF 
      97.  00:9A3C                      	
      98.  00:9A3C                      sprite_serpiente1_2:
      99.  00:9A3C                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      99.  00:9A3C  FF FF FF FF FF FF FF FF 
     100.  00:9A44                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     100.  00:9A44  FF FF FF FF FF FF FF FF 
     101.  00:9A4C                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     101.  00:9A4C  FF FF FF FF FF FF FF FF 
     102.  00:9A54                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     102.  00:9A54  FF FF FF FF FF FF FF FF 
     103.  00:9A5C                      	
     104.  00:9A5C                      sprite_serpiente2_1:
     105.  00:9A5C                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     105.  00:9A5C  FF FF FF FF FF FF FF FF 
     106.  00:9A64                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     106.  00:9A64  FF FF FF FF FF FF FF FF 
     107.  00:9A6C                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     107.  00:9A6C  FF FF FF FF FF FF FF FF 
     108.  00:9A74                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     108.  00:9A74  FF FF FF FF FF FF FF FF 
     109.  00:9A7C                      	
     110.  00:9A7C                      sprite_serpiente2_2:
     111.  00:9A7C                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     111.  00:9A7C  FF FF FF FF FF FF FF FF 
     112.  00:9A84                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     112.  00:9A84  FF FF FF FF FF FF FF FF 
     113.  00:9A8C                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     113.  00:9A8C  FF FF FF FF FF FF FF FF 
     114.  00:9A94                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     114.  00:9A94  FF FF FF FF FF FF FF FF 
     115.  00:9A9C                      
     116.  00:9A9C                      ;; ZOMBI
     117.  00:9A9C                      
     118.  00:9A9C                      sprite_zombi1_1_1:
     119.  00:9A9C                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     119.  00:9A9C  FF FF FF FF FF FF FF FF 
     120.  00:9AA4                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     120.  00:9AA4  FF FF FF FF FF FF FF FF 
     121.  00:9AAC                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     121.  00:9AAC  FF FF FF FF FF FF FF FF 
     122.  00:9AB4                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     122.  00:9AB4  FF FF FF FF FF FF FF FF 
     123.  00:9ABC                      
     124.  00:9ABC                      sprite_zombi1_2_1:
     125.  00:9ABC                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     125.  00:9ABC  FF FF FF FF FF FF FF FF 
     126.  00:9AC4                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     126.  00:9AC4  FF FF FF FF FF FF FF FF 
     127.  00:9ACC                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     127.  00:9ACC  FF FF FF FF FF FF FF FF 
     128.  00:9AD4                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     128.  00:9AD4  FF FF FF FF FF FF FF FF 
     129.  00:9ADC                      	
     130.  00:9ADC                      sprite_zombi1_3_1:
     131.  00:9ADC                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     131.  00:9ADC  FF FF FF FF FF FF FF FF 
     132.  00:9AE4                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     132.  00:9AE4  FF FF FF FF FF FF FF FF 
     133.  00:9AEC                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     133.  00:9AEC  FF FF FF FF FF FF FF FF 
     134.  00:9AF4                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     134.  00:9AF4  FF FF FF FF FF FF FF FF 
     135.  00:9AFC                      	
     136.  00:9AFC                      sprite_zombi1_4_1:
     137.  00:9AFC                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     137.  00:9AFC  FF FF FF FF FF FF FF FF 
     138.  00:9B04                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     138.  00:9B04  FF FF FF FF FF FF FF FF 
     139.  00:9B0C                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     139.  00:9B0C  FF FF FF FF FF FF FF FF 
     140.  00:9B14                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     140.  00:9B14  FF FF FF FF FF FF FF FF 
     141.  00:9B1C                      	
     142.  00:9B1C                      sprite_zombi1_1_2:
     143.  00:9B1C                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     143.  00:9B1C  FF FF FF FF FF FF FF FF 
     144.  00:9B24                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     144.  00:9B24  FF FF FF FF FF FF FF FF 
     145.  00:9B2C                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     145.  00:9B2C  FF FF FF FF FF FF FF FF 
     146.  00:9B34                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     146.  00:9B34  FF FF FF FF FF FF FF FF 
     147.  00:9B3C                      
     148.  00:9B3C                      sprite_zombi1_2_2:
     149.  00:9B3C                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     149.  00:9B3C  FF FF FF FF FF FF FF FF 
     150.  00:9B44                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     150.  00:9B44  FF FF FF FF FF FF FF FF 
     151.  00:9B4C                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     151.  00:9B4C  FF FF FF FF FF FF FF FF 
     152.  00:9B54                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     152.  00:9B54  FF FF FF FF FF FF FF FF 
     153.  00:9B5C                      	
     154.  00:9B5C                      sprite_zombi1_3_2:
     155.  00:9B5C                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     155.  00:9B5C  FF FF FF FF FF FF FF FF 
     156.  00:9B64                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     156.  00:9B64  FF FF FF FF FF FF FF FF 
     157.  00:9B6C                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     157.  00:9B6C  FF FF FF FF FF FF FF FF 
     158.  00:9B74                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     158.  00:9B74  FF FF FF FF FF FF FF FF 
     159.  00:9B7C                      	
     160.  00:9B7C                      sprite_zombi1_4_2:
     161.  00:9B7C                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     161.  00:9B7C  FF FF FF FF FF FF FF FF 
     162.  00:9B84                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     162.  00:9B84  FF FF FF FF FF FF FF FF 
     163.  00:9B8C                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     163.  00:9B8C  FF FF FF FF FF FF FF FF 
     164.  00:9B94                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     164.  00:9B94  FF FF FF FF FF FF FF FF 
     165.  00:9B9C                      	
     166.  00:9B9C                      sprite_zombi2_1_1:
     167.  00:9B9C                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     167.  00:9B9C  FF FF FF FF FF FF FF FF 
     168.  00:9BA4                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     168.  00:9BA4  FF FF FF FF FF FF FF FF 
     169.  00:9BAC                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     169.  00:9BAC  FF FF FF FF FF FF FF FF 
     170.  00:9BB4                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     170.  00:9BB4  FF FF FF FF FF FF FF FF 
     171.  00:9BBC                      
     172.  00:9BBC                      sprite_zombi2_2_1:
     173.  00:9BBC                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     173.  00:9BBC  FF FF FF FF FF FF FF FF 
     174.  00:9BC4                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     174.  00:9BC4  FF FF FF FF FF FF FF FF 
     175.  00:9BCC                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     175.  00:9BCC  FF FF FF FF FF FF FF FF 
     176.  00:9BD4                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     176.  00:9BD4  FF FF FF FF FF FF FF FF 
     177.  00:9BDC                      	
     178.  00:9BDC                      sprite_zombi2_3_1:
     179.  00:9BDC                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     179.  00:9BDC  FF FF FF FF FF FF FF FF 
     180.  00:9BE4                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     180.  00:9BE4  FF FF FF FF FF FF FF FF 
     181.  00:9BEC                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     181.  00:9BEC  FF FF FF FF FF FF FF FF 
     182.  00:9BF4                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     182.  00:9BF4  FF FF FF FF FF FF FF FF 
     183.  00:9BFC                      	
     184.  00:9BFC                      sprite_zombi2_4_1:
     185.  00:9BFC                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     185.  00:9BFC  FF FF FF FF FF FF FF FF 
     186.  00:9C04                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     186.  00:9C04  FF FF FF FF FF FF FF FF 
     187.  00:9C0C                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     187.  00:9C0C  FF FF FF FF FF FF FF FF 
     188.  00:9C14                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     188.  00:9C14  FF FF FF FF FF FF FF FF 
     189.  00:9C1C                      	
     190.  00:9C1C                      sprite_zombi2_1_2:
     191.  00:9C1C                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     191.  00:9C1C  FF FF FF FF FF FF FF FF 
     192.  00:9C24                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     192.  00:9C24  FF FF FF FF FF FF FF FF 
     193.  00:9C2C                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     193.  00:9C2C  FF FF FF FF FF FF FF FF 
     194.  00:9C34                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     194.  00:9C34  FF FF FF FF FF FF FF FF 
     195.  00:9C3C                      
     196.  00:9C3C                      sprite_zombi2_2_2:
     197.  00:9C3C                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     197.  00:9C3C  FF FF FF FF FF FF FF FF 
     198.  00:9C44                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     198.  00:9C44  FF FF FF FF FF FF FF FF 
     199.  00:9C4C                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     199.  00:9C4C  FF FF FF FF FF FF FF FF 
     200.  00:9C54                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     200.  00:9C54  FF FF FF FF FF FF FF FF 
     201.  00:9C5C                      	
     202.  00:9C5C                      sprite_zombi2_3_2:
     203.  00:9C5C                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     203.  00:9C5C  FF FF FF FF FF FF FF FF 
     204.  00:9C64                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     204.  00:9C64  FF FF FF FF FF FF FF FF 
     205.  00:9C6C                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     205.  00:9C6C  FF FF FF FF FF FF FF FF 
     206.  00:9C74                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     206.  00:9C74  FF FF FF FF FF FF FF FF 
     207.  00:9C7C                      	
     208.  00:9C7C                      sprite_zombi2_4_2:
     209.  00:9C7C                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     209.  00:9C7C  FF FF FF FF FF FF FF FF 
     210.  00:9C84                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     210.  00:9C84  FF FF FF FF FF FF FF FF 
     211.  00:9C8C                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     211.  00:9C8C  FF FF FF FF FF FF FF FF 
     212.  00:9C94                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     212.  00:9C94  FF FF FF FF FF FF FF FF 
     213.  00:9C9C                      	
     214.  00:9C9C                      ;; CABALLERO
     215.  00:9C9C                      
     216.  00:9C9C                      sprite_caballero1_1_1:
     217.  00:9C9C                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     217.  00:9C9C  FF FF FF FF FF FF FF FF 
     218.  00:9CA4                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     218.  00:9CA4  FF FF FF FF FF FF FF FF 
     219.  00:9CAC                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     219.  00:9CAC  FF FF FF FF FF FF FF FF 
     220.  00:9CB4                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     220.  00:9CB4  FF FF FF FF FF FF FF FF 
     221.  00:9CBC                      
     222.  00:9CBC                      sprite_caballero1_2_1:
     223.  00:9CBC                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     223.  00:9CBC  FF FF FF FF FF FF FF FF 
     224.  00:9CC4                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     224.  00:9CC4  FF FF FF FF FF FF FF FF 
     225.  00:9CCC                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     225.  00:9CCC  FF FF FF FF FF FF FF FF 
     226.  00:9CD4                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     226.  00:9CD4  FF FF FF FF FF FF FF FF 
     227.  00:9CDC                      	
     228.  00:9CDC                      sprite_caballero1_3_1:
     229.  00:9CDC                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     229.  00:9CDC  FF FF FF FF FF FF FF FF 
     230.  00:9CE4                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     230.  00:9CE4  FF FF FF FF FF FF FF FF 
     231.  00:9CEC                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     231.  00:9CEC  FF FF FF FF FF FF FF FF 
     232.  00:9CF4                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     232.  00:9CF4  FF FF FF FF FF FF FF FF 
     233.  00:9CFC                      	
     234.  00:9CFC                      sprite_caballero1_4_1:
     235.  00:9CFC                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     235.  00:9CFC  FF FF FF FF FF FF FF FF 
     236.  00:9D04                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     236.  00:9D04  FF FF FF FF FF FF FF FF 
     237.  00:9D0C                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     237.  00:9D0C  FF FF FF FF FF FF FF FF 
     238.  00:9D14                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     238.  00:9D14  FF FF FF FF FF FF FF FF 
     239.  00:9D1C                      	
     240.  00:9D1C                      sprite_caballero1_1_2:
     241.  00:9D1C                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     241.  00:9D1C  FF FF FF FF FF FF FF FF 
     242.  00:9D24                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     242.  00:9D24  FF FF FF FF FF FF FF FF 
     243.  00:9D2C                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     243.  00:9D2C  FF FF FF FF FF FF FF FF 
     244.  00:9D34                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     244.  00:9D34  FF FF FF FF FF FF FF FF 
     245.  00:9D3C                      
     246.  00:9D3C                      sprite_caballero1_2_2:
     247.  00:9D3C                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     247.  00:9D3C  FF FF FF FF FF FF FF FF 
     248.  00:9D44                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     248.  00:9D44  FF FF FF FF FF FF FF FF 
     249.  00:9D4C                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     249.  00:9D4C  FF FF FF FF FF FF FF FF 
     250.  00:9D54                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     250.  00:9D54  FF FF FF FF FF FF FF FF 
     251.  00:9D5C                      	
     252.  00:9D5C                      sprite_caballero1_3_2:
     253.  00:9D5C                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     253.  00:9D5C  FF FF FF FF FF FF FF FF 
     254.  00:9D64                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     254.  00:9D64  FF FF FF FF FF FF FF FF 
     255.  00:9D6C                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     255.  00:9D6C  FF FF FF FF FF FF FF FF 
     256.  00:9D74                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     256.  00:9D74  FF FF FF FF FF FF FF FF 
     257.  00:9D7C                      	
     258.  00:9D7C                      sprite_caballero1_4_2:
     259.  00:9D7C                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     259.  00:9D7C  FF FF FF FF FF FF FF FF 
     260.  00:9D84                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     260.  00:9D84  FF FF FF FF FF FF FF FF 
     261.  00:9D8C                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     261.  00:9D8C  FF FF FF FF FF FF FF FF 
     262.  00:9D94                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     262.  00:9D94  FF FF FF FF FF FF FF FF 
     263.  00:9D9C                      	
     264.  00:9D9C                      sprite_caballero2_1_1:
     265.  00:9D9C                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     265.  00:9D9C  FF FF FF FF FF FF FF FF 
     266.  00:9DA4                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     266.  00:9DA4  FF FF FF FF FF FF FF FF 
     267.  00:9DAC                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     267.  00:9DAC  FF FF FF FF FF FF FF FF 
     268.  00:9DB4                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     268.  00:9DB4  FF FF FF FF FF FF FF FF 
     269.  00:9DBC                      
     270.  00:9DBC                      sprite_caballero2_2_1:
     271.  00:9DBC                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     271.  00:9DBC  FF FF FF FF FF FF FF FF 
     272.  00:9DC4                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     272.  00:9DC4  FF FF FF FF FF FF FF FF 
     273.  00:9DCC                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     273.  00:9DCC  FF FF FF FF FF FF FF FF 
     274.  00:9DD4                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     274.  00:9DD4  FF FF FF FF FF FF FF FF 
     275.  00:9DDC                      	
     276.  00:9DDC                      sprite_caballero2_3_1:
     277.  00:9DDC                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     277.  00:9DDC  FF FF FF FF FF FF FF FF 
     278.  00:9DE4                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     278.  00:9DE4  FF FF FF FF FF FF FF FF 
     279.  00:9DEC                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     279.  00:9DEC  FF FF FF FF FF FF FF FF 
     280.  00:9DF4                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     280.  00:9DF4  FF FF FF FF FF FF FF FF 
     281.  00:9DFC                      	
     282.  00:9DFC                      sprite_caballero2_4_1:
     283.  00:9DFC                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     283.  00:9DFC  FF FF FF FF FF FF FF FF 
     284.  00:9E04                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     284.  00:9E04  FF FF FF FF FF FF FF FF 
     285.  00:9E0C                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     285.  00:9E0C  FF FF FF FF FF FF FF FF 
     286.  00:9E14                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     286.  00:9E14  FF FF FF FF FF FF FF FF 
     287.  00:9E1C                      	
     288.  00:9E1C                      sprite_caballero2_1_2:
     289.  00:9E1C                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     289.  00:9E1C  FF FF FF FF FF FF FF FF 
     290.  00:9E24                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     290.  00:9E24  FF FF FF FF FF FF FF FF 
     291.  00:9E2C                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     291.  00:9E2C  FF FF FF FF FF FF FF FF 
     292.  00:9E34                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     292.  00:9E34  FF FF FF FF FF FF FF FF 
     293.  00:9E3C                      
     294.  00:9E3C                      sprite_caballero2_2_2:
     295.  00:9E3C                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     295.  00:9E3C  FF FF FF FF FF FF FF FF 
     296.  00:9E44                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     296.  00:9E44  FF FF FF FF FF FF FF FF 
     297.  00:9E4C                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     297.  00:9E4C  FF FF FF FF FF FF FF FF 
     298.  00:9E54                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     298.  00:9E54  FF FF FF FF FF FF FF FF 
     299.  00:9E5C                      	
     300.  00:9E5C                      sprite_caballero2_3_2:
     301.  00:9E5C                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     301.  00:9E5C  FF FF FF FF FF FF FF FF 
     302.  00:9E64                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     302.  00:9E64  FF FF FF FF FF FF FF FF 
     303.  00:9E6C                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     303.  00:9E6C  FF FF FF FF FF FF FF FF 
     304.  00:9E74                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     304.  00:9E74  FF FF FF FF FF FF FF FF 
     305.  00:9E7C                      	
     306.  00:9E7C                      sprite_caballero2_4_2:
     307.  00:9E7C                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     307.  00:9E7C  FF FF FF FF FF FF FF FF 
     308.  00:9E84                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     308.  00:9E84  FF FF FF FF FF FF FF FF 
     309.  00:9E8C                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     309.  00:9E8C  FF FF FF FF FF FF FF FF 
     310.  00:9E94                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     310.  00:9E94  FF FF FF FF FF FF FF FF 
     311.  00:9E9C                      	
     312.  00:9E9C                      ;; LLAMA
     313.  00:9E9C                      
     314.  00:9E9C                      sprite_llama1_1:	
     315.  00:9E9C                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     315.  00:9E9C  FF FF FF FF FF FF FF FF 
     316.  00:9EA4                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     316.  00:9EA4  FF FF FF FF FF FF FF FF 
     317.  00:9EAC                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     317.  00:9EAC  FF FF FF FF FF FF FF FF 
     318.  00:9EB4                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     318.  00:9EB4  FF FF FF FF FF FF FF FF 
     319.  00:9EBC                      	
     320.  00:9EBC                      sprite_llama2_1:	
     321.  00:9EBC                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     321.  00:9EBC  FF FF FF FF FF FF FF FF 
     322.  00:9EC4                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     322.  00:9EC4  FF FF FF FF FF FF FF FF 
     323.  00:9ECC                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     323.  00:9ECC  FF FF FF FF FF FF FF FF 
     324.  00:9ED4                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF	
     324.  00:9ED4  FF FF FF FF FF FF FF FF 
     325.  00:9EDC                      	
     326.  00:9EDC                      sprite_llama1_2:	
     327.  00:9EDC                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     327.  00:9EDC  FF FF FF FF FF FF FF FF 
     328.  00:9EE4                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     328.  00:9EE4  FF FF FF FF FF FF FF FF 
     329.  00:9EEC                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     329.  00:9EEC  FF FF FF FF FF FF FF FF 
     330.  00:9EF4                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     330.  00:9EF4  FF FF FF FF FF FF FF FF 
     331.  00:9EFC                      	
     332.  00:9EFC                      sprite_llama2_2:	
     333.  00:9EFC                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     333.  00:9EFC  FF FF FF FF FF FF FF FF 
     334.  00:9F04                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     334.  00:9F04  FF FF FF FF FF FF FF FF 
     335.  00:9F0C                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     335.  00:9F0C  FF FF FF FF FF FF FF FF 
     336.  00:9F14                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF			
     336.  00:9F14  FF FF FF FF FF FF FF FF 
     337.  00:9F1C                      	
     338.  00:9F1C                      ;; FANTASMA
     339.  00:9F1C                      
     340.  00:9F1C                      sprite_fantasma1_1:
     341.  00:9F1C                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     341.  00:9F1C  FF FF FF FF FF FF FF FF 
     342.  00:9F24                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     342.  00:9F24  FF FF FF FF FF FF FF FF 
     343.  00:9F2C                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     343.  00:9F2C  FF FF FF FF FF FF FF FF 
     344.  00:9F34                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     344.  00:9F34  FF FF FF FF FF FF FF FF 
     345.  00:9F3C                      
     346.  00:9F3C                      sprite_fantasma2_1:
     347.  00:9F3C                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     347.  00:9F3C  FF FF FF FF FF FF FF FF 
     348.  00:9F44                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     348.  00:9F44  FF FF FF FF FF FF FF FF 
     349.  00:9F4C                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     349.  00:9F4C  FF FF FF FF FF FF FF FF 
     350.  00:9F54                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     350.  00:9F54  FF FF FF FF FF FF FF FF 
     351.  00:9F5C                      
     352.  00:9F5C                      sprite_fantasma1_2:
     353.  00:9F5C                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     353.  00:9F5C  FF FF FF FF FF FF FF FF 
     354.  00:9F64                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     354.  00:9F64  FF FF FF FF FF FF FF FF 
     355.  00:9F6C                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     355.  00:9F6C  FF FF FF FF FF FF FF FF 
     356.  00:9F74                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     356.  00:9F74  FF FF FF FF FF FF FF FF 
     357.  00:9F7C                      
     358.  00:9F7C                      sprite_fantasma2_2:
     359.  00:9F7C                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     359.  00:9F7C  FF FF FF FF FF FF FF FF 
     360.  00:9F84                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     360.  00:9F84  FF FF FF FF FF FF FF FF 
     361.  00:9F8C                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     361.  00:9F8C  FF FF FF FF FF FF FF FF 
     362.  00:9F94                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF	
     362.  00:9F94  FF FF FF FF FF FF FF FF 
     363.  00:9F9C                      	
     364.  00:9F9C                      ;; MAGIA
     365.  00:9F9C                      
     366.  00:9F9C                      sprite_magia1_1:
     367.  00:9F9C                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     367.  00:9F9C  FF FF FF FF FF FF FF FF 
     368.  00:9FA4                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     368.  00:9FA4  FF FF FF FF FF FF FF FF 
     369.  00:9FAC                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     369.  00:9FAC  FF FF FF FF FF FF FF FF 
     370.  00:9FB4                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     370.  00:9FB4  FF FF FF FF FF FF FF FF 
     371.  00:9FBC                      
     372.  00:9FBC                      sprite_magia2_1:
     373.  00:9FBC                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     373.  00:9FBC  FF FF FF FF FF FF FF FF 
     374.  00:9FC4                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     374.  00:9FC4  FF FF FF FF FF FF FF FF 
     375.  00:9FCC                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     375.  00:9FCC  FF FF FF FF FF FF FF FF 
     376.  00:9FD4                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     376.  00:9FD4  FF FF FF FF FF FF FF FF 
     377.  00:9FDC                      
     378.  00:9FDC                      sprite_magia1_2:
     379.  00:9FDC                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     379.  00:9FDC  FF FF FF FF FF FF FF FF 
     380.  00:9FE4                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     380.  00:9FE4  FF FF FF FF FF FF FF FF 
     381.  00:9FEC                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     381.  00:9FEC  FF FF FF FF FF FF FF FF 
     382.  00:9FF4                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     382.  00:9FF4  FF FF FF FF FF FF FF FF 
     383.  00:9FFC                      
     384.  00:9FFC                      sprite_magia2_2:
     385.  00:9FFC                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     385.  00:9FFC  FF FF FF FF FF FF FF FF 
     386.  00:A004                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     386.  00:A004  FF FF FF FF FF FF FF FF 
     387.  00:A00C                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     387.  00:A00C  FF FF FF FF FF FF FF FF 
     388.  00:A014                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF	
     388.  00:A014  FF FF FF FF FF FF FF FF 
     389.  00:A01C                      	
     390.  00:A01C                      	
     391.  00:A01C                      ;; BEHOLDER
     392.  00:A01C                      
     393.  00:A01C                      sprite_beholder1_1:
     394.  00:A01C                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     394.  00:A01C  FF FF FF FF FF FF FF FF 
     395.  00:A024                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     395.  00:A024  FF FF FF FF FF FF FF FF 
     396.  00:A02C                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     396.  00:A02C  FF FF FF FF FF FF FF FF 
     397.  00:A034                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     397.  00:A034  FF FF FF FF FF FF FF FF 
     398.  00:A03C                      
     399.  00:A03C                      sprite_beholder2_1:
     400.  00:A03C                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     400.  00:A03C  FF FF FF FF FF FF FF FF 
     401.  00:A044                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     401.  00:A044  FF FF FF FF FF FF FF FF 
     402.  00:A04C                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     402.  00:A04C  FF FF FF FF FF FF FF FF 
     403.  00:A054                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     403.  00:A054  FF FF FF FF FF FF FF FF 
     404.  00:A05C                      
     405.  00:A05C                      sprite_beholder3_1:
     406.  00:A05C                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     406.  00:A05C  FF FF FF FF FF FF FF FF 
     407.  00:A064                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     407.  00:A064  FF FF FF FF FF FF FF FF 
     408.  00:A06C                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     408.  00:A06C  FF FF FF FF FF FF FF FF 
     409.  00:A074                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     409.  00:A074  FF FF FF FF FF FF FF FF 
     410.  00:A07C                      
     411.  00:A07C                      sprite_beholder4_1:
     412.  00:A07C                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     412.  00:A07C  FF FF FF FF FF FF FF FF 
     413.  00:A084                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     413.  00:A084  FF FF FF FF FF FF FF FF 
     414.  00:A08C                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     414.  00:A08C  FF FF FF FF FF FF FF FF 
     415.  00:A094                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF	
     415.  00:A094  FF FF FF FF FF FF FF FF 
     416.  00:A09C                      	
     417.  00:A09C                      sprite_beholder1_2:
     418.  00:A09C                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     418.  00:A09C  FF FF FF FF FF FF FF FF 
     419.  00:A0A4                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     419.  00:A0A4  FF FF FF FF FF FF FF FF 
     420.  00:A0AC                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     420.  00:A0AC  FF FF FF FF FF FF FF FF 
     421.  00:A0B4                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     421.  00:A0B4  FF FF FF FF FF FF FF FF 
     422.  00:A0BC                      
     423.  00:A0BC                      sprite_beholder2_2:
     424.  00:A0BC                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     424.  00:A0BC  FF FF FF FF FF FF FF FF 
     425.  00:A0C4                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     425.  00:A0C4  FF FF FF FF FF FF FF FF 
     426.  00:A0CC                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     426.  00:A0CC  FF FF FF FF FF FF FF FF 
     427.  00:A0D4                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     427.  00:A0D4  FF FF FF FF FF FF FF FF 
     428.  00:A0DC                      
     429.  00:A0DC                      sprite_beholder3_2:
     430.  00:A0DC                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     430.  00:A0DC  FF FF FF FF FF FF FF FF 
     431.  00:A0E4                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     431.  00:A0E4  FF FF FF FF FF FF FF FF 
     432.  00:A0EC                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     432.  00:A0EC  FF FF FF FF FF FF FF FF 
     433.  00:A0F4                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     433.  00:A0F4  FF FF FF FF FF FF FF FF 
     434.  00:A0FC                      
     435.  00:A0FC                      sprite_beholder4_2:
     436.  00:A0FC                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     436.  00:A0FC  FF FF FF FF FF FF FF FF 
     437.  00:A104                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     437.  00:A104  FF FF FF FF FF FF FF FF 
     438.  00:A10C                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     438.  00:A10C  FF FF FF FF FF FF FF FF 
     439.  00:A114                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF		
     439.  00:A114  FF FF FF FF FF FF FF FF 
     440.  00:A11C                      	
     441.  00:A11C                      ;; VAMPIRO
     442.  00:A11C                      
     443.  00:A11C                      sprite_vampiro1_1:
     444.  00:A11C                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     444.  00:A11C  FF FF FF FF FF FF FF FF 
     445.  00:A124                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     445.  00:A124  FF FF FF FF FF FF FF FF 
     446.  00:A12C                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     446.  00:A12C  FF FF FF FF FF FF FF FF 
     447.  00:A134                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     447.  00:A134  FF FF FF FF FF FF FF FF 
     448.  00:A13C                      
     449.  00:A13C                      sprite_vampiro2_1:
     450.  00:A13C                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     450.  00:A13C  FF FF FF FF FF FF FF FF 
     451.  00:A144                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     451.  00:A144  FF FF FF FF FF FF FF FF 
     452.  00:A14C                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     452.  00:A14C  FF FF FF FF FF FF FF FF 
     453.  00:A154                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     453.  00:A154  FF FF FF FF FF FF FF FF 
     454.  00:A15C                      
     455.  00:A15C                      sprite_vampiro1_2:
     456.  00:A15C                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     456.  00:A15C  FF FF FF FF FF FF FF FF 
     457.  00:A164                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     457.  00:A164  FF FF FF FF FF FF FF FF 
     458.  00:A16C                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     458.  00:A16C  FF FF FF FF FF FF FF FF 
     459.  00:A174                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     459.  00:A174  FF FF FF FF FF FF FF FF 
     460.  00:A17C                      
     461.  00:A17C                      sprite_vampiro2_2:
     462.  00:A17C                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     462.  00:A17C  FF FF FF FF FF FF FF FF 
     463.  00:A184                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     463.  00:A184  FF FF FF FF FF FF FF FF 
     464.  00:A18C                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     464.  00:A18C  FF FF FF FF FF FF FF FF 
     465.  00:A194                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     465.  00:A194  FF FF FF FF FF FF FF FF 
     466.  00:A19C                      	
     467.  00:A19C                      ;; MANOIZQ
     468.  00:A19C                      
     469.  00:A19C                      sprite_manoizq1:
     470.  00:A19C                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     470.  00:A19C  FF FF FF FF FF FF FF FF 
     471.  00:A1A4                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     471.  00:A1A4  FF FF FF FF FF FF FF FF 
     472.  00:A1AC                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     472.  00:A1AC  FF FF FF FF FF FF FF FF 
     473.  00:A1B4                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     473.  00:A1B4  FF FF FF FF FF FF FF FF 
     474.  00:A1BC                      	
     475.  00:A1BC                      sprite_manoizq2:
     476.  00:A1BC                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     476.  00:A1BC  FF FF FF FF FF FF FF FF 
     477.  00:A1C4                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     477.  00:A1C4  FF FF FF FF FF FF FF FF 
     478.  00:A1CC                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     478.  00:A1CC  FF FF FF FF FF FF FF FF 
     479.  00:A1D4                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     479.  00:A1D4  FF FF FF FF FF FF FF FF 
     480.  00:A1DC                      	
     481.  00:A1DC                      sprite_manoizq3:
     482.  00:A1DC                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     482.  00:A1DC  FF FF FF FF FF FF FF FF 
     483.  00:A1E4                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     483.  00:A1E4  FF FF FF FF FF FF FF FF 
     484.  00:A1EC                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     484.  00:A1EC  FF FF FF FF FF FF FF FF 
     485.  00:A1F4                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF	
     485.  00:A1F4  FF FF FF FF FF FF FF FF 
     486.  00:A1FC                      	
     487.  00:A1FC                      ;; MANODER
     488.  00:A1FC                      
     489.  00:A1FC                      sprite_manoder1:
     490.  00:A1FC                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     490.  00:A1FC  FF FF FF FF FF FF FF FF 
     491.  00:A204                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     491.  00:A204  FF FF FF FF FF FF FF FF 
     492.  00:A20C                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     492.  00:A20C  FF FF FF FF FF FF FF FF 
     493.  00:A214                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     493.  00:A214  FF FF FF FF FF FF FF FF 
     494.  00:A21C                      	
     495.  00:A21C                      sprite_manoder2:
     496.  00:A21C                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     496.  00:A21C  FF FF FF FF FF FF FF FF 
     497.  00:A224                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     497.  00:A224  FF FF FF FF FF FF FF FF 
     498.  00:A22C                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     498.  00:A22C  FF FF FF FF FF FF FF FF 
     499.  00:A234                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     499.  00:A234  FF FF FF FF FF FF FF FF 
     500.  00:A23C                      	
     501.  00:A23C                      sprite_manoder3:
     502.  00:A23C                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     502.  00:A23C  FF FF FF FF FF FF FF FF 
     503.  00:A244                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     503.  00:A244  FF FF FF FF FF FF FF FF 
     504.  00:A24C                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     504.  00:A24C  FF FF FF FF FF FF FF FF 
     505.  00:A254                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF		
     505.  00:A254  FF FF FF FF FF FF FF FF 
     506.  00:A25C                      	
     507.  00:A25C                      	
     508.  00:A25C                      	
     509.  00:A25C                      	
     510.  00:A25C                      	
     511.  00:A25C                      	
     512.  00:A25C                      	
     513.  00:A25C                      	
     514.  00:A25C                      	
     515.  00:A25C                      	
     516.  00:A25C                      	
     517.  00:A25C                      	
     518.  00:A25C                      	
     519.  00:A25C                      	
     520.  00:A25C                      	
     521.  00:A25C                      	
     522.  00:A25C                      	
     523.  00:A25C                      	
     524.  00:A25C                      	
     525.  00:A25C                      	
     526.  00:A25C                      	
     527.  00:A25C                      	
     528.  00:A25C                      	
     144   00:A25C                      	
     145   00:A25C                      	include "habitaciones.asm"
       1.  00:A25C                      ;;=====================================================
       2.  00:A25C                      ;;DEFINICIÓN DE HABITACIONES x NIVEL
       3.  00:A25C                      ;;=====================================================	
       4.  00:A25C                      
       5.  00:A25C                      ; sólo voy a usar 7x7 pero como los arrays son lineales y voy a trabajar con matrices
       6.  00:A25C                      ; me interesa que seande  8x8 aunque sólo trabaje con 7x7
       7.  00:A25C                      
       8.  00:A25C                      ; ojo... la primera linea corresponderá a la primera linea del castillo no a la última
       9.  00:A25C                      
      10.  00:A25C                      ;; definición de estructura de bits
      11.  00:A25C                      ;16 bits por habitación
      12.  00:A25C                      
      13.  00:A25C                      ;~ 7 - sin asignar
      14.  00:A25C                      ;~ 6 - sin asignar
      15.  00:A25C                      ;~ 5 - sin asignar
      16.  00:A25C                      ;~ 4 - sin asignar
      17.  00:A25C                      ;~ 0,1,2,3 - nº puertas 1 arriba 1 derecha 1 abajo 1 izquierda
      18.  00:A25C                      
      19.  00:A25C                      ;~ 15 - oracion
      20.  00:A25C                      ;~ 14 - cruz
      21.  00:A25C                      ;~ 13 - agua bendita
      22.  00:A25C                      ;~ 12 - armadura
      23.  00:A25C                      ;~ 11 - planta
      24.  00:A25C                      ;~ 10 - vida extra
      25.  00:A25C                      ;~ 9  - ballesta
      26.  00:A25C                      ;~ 8  - sin asignar
      27.  00:A25C                      
      28.  00:A25C                      ;importante: el byte de la columna 15 indicará con 1 y 0 habitaciones por las que se haya pasado
      29.  00:A25C                      ;cuando se inicie la partida todos se pondrán a 0
      30.  00:A25C                      ;por ejemplo 01000000b se ha pasado por la hab. 2 de esa fila en el nivel que sea
      31.  00:A25C                      
      32.  00:A25C                      habitacion_actual:
      33.  00:A25C  00                  	db  #00		;habitación donde se encuentre el prota. Se mete en una varible par traer todos los datos de golpe y no buscarlos varias veces
      34.  00:A25D                      habitacion_extras:
      35.  00:A25D  00                  	db	#00		;donde van las ayudas de una habitación
      36.  00:A25E                      
      37.  00:A25E                      
      38.  00:A25E                      habitaciones_juego:
      39.  00:A25E                      habitaciones_nivel0:
      40.  00:A25E                      	db  00000000b,#00,00000001b,#01,00001001b,10000000b,00000011b,#03,00001000b,#04,00001001b,#05,00001100b,#06,#FF,#00 ;primera fila
      40.  00:A25E  00 00 01 01 09 80 03 03 08 04 09 05 0C 06 FF 00 
      41.  00:A26E                      	db  #17,#10,#11,#11,#12,#12,#13,#13,#14,#14,#15,#15,#16,#16,#FF,#00
      41.  00:A26E  17 10 11 11 12 12 13 13 14 14 15 15 16 16 FF 00 
      42.  00:A27E                      	db  #20,#20,#21,#21,#22,#22,#23,#23,#24,#24,#25,#25,#26,#26,#FF,#00
      42.  00:A27E  20 20 21 21 22 22 23 23 24 24 25 25 26 26 FF 00 
      43.  00:A28E                      	db  #30,#30,#31,#31,#32,#32,#33,#33,#34,#34,#35,#35,#36,#36,#FF,#00
      43.  00:A28E  30 30 31 31 32 32 33 33 34 34 35 35 36 36 FF 00 
      44.  00:A29E                      	db  00000000b,#00,00000001b,#01,00001111b,#02,00000011b,#03,00001000b,#04,00001001b,#05,00001100b,#06,#FF,#00
      44.  00:A29E  00 00 01 01 0F 02 03 03 08 04 09 05 0C 06 FF 00 
      45.  00:A2AE                      	db  #50,#50,#51,#51,#52,#52,#53,#53,#54,#54,#55,#55,#56,#56,#FF,#00
      45.  00:A2AE  50 50 51 51 52 52 53 53 54 54 55 55 56 56 FF 00 
      46.  00:A2BE                      	db  00000000b,#00,00000001b,#01,00001111b,#02,00000011b,#03,00001000b,#04,00001001b,#05,00001100b,#06,#FF,#00	;ultima fila
      46.  00:A2BE  00 00 01 01 0F 02 03 03 08 04 09 05 0C 06 FF 00 
      47.  00:A2CE                      	
      48.  00:A2CE                      habitaciones_nivel1:
      49.  00:A2CE                      	db  00000000b,#00,00000001b,#01,00000010b,#02,00000011b,#03,00001000b,#04,00001001b,#05,00001100b,#06,#FF,#00 ;primera fila
      49.  00:A2CE  00 00 01 01 02 02 03 03 08 04 09 05 0C 06 FF 00 
      50.  00:A2DE                      	db  #17,#10,#11,#11,#12,#12,#13,#13,#14,#14,#15,#15,#16,#16,#FF,#00
      50.  00:A2DE  17 10 11 11 12 12 13 13 14 14 15 15 16 16 FF 00 
      51.  00:A2EE                      	db  #20,#20,#21,#21,#22,#22,#23,#23,#24,#24,#25,#25,#26,#26,#FF,#00
      51.  00:A2EE  20 20 21 21 22 22 23 23 24 24 25 25 26 26 FF 00 
      52.  00:A2FE                      	db  #30,#30,#31,#31,#32,#32,#33,#33,#34,#34,#35,#35,#36,#36,#FF,#00
      52.  00:A2FE  30 30 31 31 32 32 33 33 34 34 35 35 36 36 FF 00 
      53.  00:A30E                      	db  00000000b,#00,00000001b,#01,00001111b,#02,00000011b,#03,00001000b,#04,00001001b,#05,00001100b,#06,#FF,#00
      53.  00:A30E  00 00 01 01 0F 02 03 03 08 04 09 05 0C 06 FF 00 
      54.  00:A31E                      	db  #50,#50,#51,#51,#52,#52,#53,#53,#54,#54,#55,#55,#56,#56,#FF,#00
      54.  00:A31E  50 50 51 51 52 52 53 53 54 54 55 55 56 56 FF 00 
      55.  00:A32E                      	db  00000000b,#00,00000001b,#01,00000010b,#02,00000011b,#03,00001000b,#04,00001001b,#05,00001100b,#06,#FF,#00	;ultima fila
      55.  00:A32E  00 00 01 01 02 02 03 03 08 04 09 05 0C 06 FF 00 
      56.  00:A33E                      	
      57.  00:A33E                      habitaciones_nivel2:
      58.  00:A33E                      	db  00000000b,#00,00000001b,#01,00000010b,#02,00000011b,#03,00001000b,#04,00001001b,#05,00001100b,#06,#FF,#00 ;primera fila
      58.  00:A33E  00 00 01 01 02 02 03 03 08 04 09 05 0C 06 FF 00 
      59.  00:A34E                      	db  #17,#10,#11,#11,#12,#12,#13,#13,#14,#14,#15,#15,#16,#16,#FF,#00
      59.  00:A34E  17 10 11 11 12 12 13 13 14 14 15 15 16 16 FF 00 
      60.  00:A35E                      	db  #20,#20,#21,#21,#22,#22,#23,#23,#24,#24,#25,#25,#26,#26,#FF,#00
      60.  00:A35E  20 20 21 21 22 22 23 23 24 24 25 25 26 26 FF 00 
      61.  00:A36E                      	db  #30,#30,#31,#31,#32,#32,#33,#33,#34,#34,#35,#35,#36,#36,#FF,#00
      61.  00:A36E  30 30 31 31 32 32 33 33 34 34 35 35 36 36 FF 00 
      62.  00:A37E                      	db  00000000b,#00,00000001b,#01,00001111b,#02,00000011b,#03,00001000b,#04,00001001b,#05,00001100b,#06,#FF,#00
      62.  00:A37E  00 00 01 01 0F 02 03 03 08 04 09 05 0C 06 FF 00 
      63.  00:A38E                      	db  #50,#50,#51,#51,#52,#52,#53,#53,#54,#54,#55,#55,#56,#56,#FF,#00
      63.  00:A38E  50 50 51 51 52 52 53 53 54 54 55 55 56 56 FF 00 
      64.  00:A39E                      	db  00000000b,#00,00000001b,#01,00000010b,#02,00000011b,#03,00001000b,#04,00001001b,#05,00001100b,#06,#FF,#00	;ultima fila
      64.  00:A39E  00 00 01 01 02 02 03 03 08 04 09 05 0C 06 FF 00 
      65.  00:A3AE                      	
      66.  00:A3AE                      habitaciones_nivel3:
      67.  00:A3AE                      	db  00000000b,#00,00000001b,#01,00000010b,#02,00000011b,#03,00001000b,#04,00001001b,#05,00001100b,#06,#FF,#00 ;primera fila
      67.  00:A3AE  00 00 01 01 02 02 03 03 08 04 09 05 0C 06 FF 00 
      68.  00:A3BE                      	db  #17,#10,#11,#11,#12,#12,#13,#13,#14,#14,#15,#15,#16,#16,#FF,#00
      68.  00:A3BE  17 10 11 11 12 12 13 13 14 14 15 15 16 16 FF 00 
      69.  00:A3CE                      	db  #20,#20,#21,#21,#22,#22,#23,#23,#24,#24,#25,#25,#26,#26,#FF,#00
      69.  00:A3CE  20 20 21 21 22 22 23 23 24 24 25 25 26 26 FF 00 
      70.  00:A3DE                      	db  #30,#30,#31,#31,#32,#32,#33,#33,#34,#34,#35,#35,#36,#36,#FF,#00
      70.  00:A3DE  30 30 31 31 32 32 33 33 34 34 35 35 36 36 FF 00 
      71.  00:A3EE                      	db  00000000b,#00,00000001b,#01,00001111b,#02,00000011b,#03,00001000b,#04,00001001b,#05,00001100b,#06,#FF,#00
      71.  00:A3EE  00 00 01 01 0F 02 03 03 08 04 09 05 0C 06 FF 00 
      72.  00:A3FE                      	db  #50,#50,#51,#51,#52,#52,#53,#53,#54,#54,#55,#55,#56,#56,#FF,#00
      72.  00:A3FE  50 50 51 51 52 52 53 53 54 54 55 55 56 56 FF 00 
      73.  00:A40E                      	db  00000000b,#00,00000001b,#01,00000010b,#02,00000011b,#03,00001000b,#04,00001001b,#05,00001100b,#06,#FF,#00	;ultima fila
      73.  00:A40E  00 00 01 01 02 02 03 03 08 04 09 05 0C 06 FF 00 
      74.  00:A41E                      	
      75.  00:A41E                      habitaciones_nivel4:
      76.  00:A41E                      	db  00000001b,#00,00000001b,#01,00000010b,#02,00000011b,#03,00001000b,#04,00001001b,#05,00001100b,#06,#FF,#00 ;primera fila
      76.  00:A41E  01 00 01 01 02 02 03 03 08 04 09 05 0C 06 FF 00 
      77.  00:A42E                      	db  #17,#10,#11,#11,#12,#12,#13,#13,#14,#14,#15,#15,#16,#16,#FF,#00
      77.  00:A42E  17 10 11 11 12 12 13 13 14 14 15 15 16 16 FF 00 
      78.  00:A43E                      	db  #20,#20,#21,#21,#22,#22,#23,#23,#24,#24,#25,#25,#26,#26,#FF,#00
      78.  00:A43E  20 20 21 21 22 22 23 23 24 24 25 25 26 26 FF 00 
      79.  00:A44E                      	db  #30,#30,#31,#31,#32,#32,#33,#33,#34,#34,#35,#35,#36,#36,#FF,#00
      79.  00:A44E  30 30 31 31 32 32 33 33 34 34 35 35 36 36 FF 00 
      80.  00:A45E                      	db  00000000b,#00,00000001b,#01,00001111b,#02,00000011b,#03,00001000b,#04,00001001b,#05,00001100b,#06,#FF,#00
      80.  00:A45E  00 00 01 01 0F 02 03 03 08 04 09 05 0C 06 FF 00 
      81.  00:A46E                      	db  #50,#50,#51,#51,#52,#52,#53,#53,#54,#54,#55,#55,#56,#56,#FF,#00
      81.  00:A46E  50 50 51 51 52 52 53 53 54 54 55 55 56 56 FF 00 
      82.  00:A47E                      	db  00000000b,#00,00000001b,#01,00001111b,00001111b,00000011b,#03,00001000b,#04,00001001b,#05,00001100b,#06,#FF,#00	;ultima fila
      82.  00:A47E  00 00 01 01 0F 0F 03 03 08 04 09 05 0C 06 FF 00 
      83.  00:A48E                      	
      84.  00:A48E                      habitaciones_nivel5:
      85.  00:A48E                      	db  00000000b,#00,00000001b,#01,00000010b,#02,00000011b,#03,00001000b,#04,00001001b,#05,00001100b,#06,#FF,#00 ;primera fila
      85.  00:A48E  00 00 01 01 02 02 03 03 08 04 09 05 0C 06 FF 00 
      86.  00:A49E                      	db  #17,#10,#11,#11,#12,#12,#13,#13,#14,#14,#15,#15,#16,#16,#FF,#00
      86.  00:A49E  17 10 11 11 12 12 13 13 14 14 15 15 16 16 FF 00 
      87.  00:A4AE                      	db  #20,#20,#21,#21,#22,#22,#23,#23,#24,#24,#25,#25,#26,#26,#FF,#00
      87.  00:A4AE  20 20 21 21 22 22 23 23 24 24 25 25 26 26 FF 00 
      88.  00:A4BE                      	db  #30,#30,#31,#31,#32,#32,#33,#33,#34,#34,#35,#35,#36,#36,#FF,#00
      88.  00:A4BE  30 30 31 31 32 32 33 33 34 34 35 35 36 36 FF 00 
      89.  00:A4CE                      	db  00000000b,#00,00000001b,#01,00001111b,#02,00000011b,#03,00001000b,#04,00001001b,#05,00001100b,#06,#FF,#00
      89.  00:A4CE  00 00 01 01 0F 02 03 03 08 04 09 05 0C 06 FF 00 
      90.  00:A4DE                      	db  #50,#50,#51,#51,#52,#52,#53,#53,#54,#54,#55,#55,#56,#56,#FF,#00
      90.  00:A4DE  50 50 51 51 52 52 53 53 54 54 55 55 56 56 FF 00 
      91.  00:A4EE                      	db  00000000b,#00,00000001b,#01,00001010b,00001010b,00000011b,#03,00001000b,#04,00001001b,#05,00001100b,#06,#FF,#00	;ultima fila
      91.  00:A4EE  00 00 01 01 0A 0A 03 03 08 04 09 05 0C 06 FF 00 
      92.  00:A4FE                      	
      93.  00:A4FE                      habitaciones_nivel6:
      94.  00:A4FE                      	db  00000000b,#00,00000001b,#01,00000010b,#02,00000011b,#03,00001000b,#04,00001001b,#05,00001100b,#06,#FF,#00 ;primera fila
      94.  00:A4FE  00 00 01 01 02 02 03 03 08 04 09 05 0C 06 FF 00 
      95.  00:A50E                      	db  #17,#10,#11,#11,#12,#12,#13,#13,#14,#14,#15,#15,#16,#16,#FF,#00
      95.  00:A50E  17 10 11 11 12 12 13 13 14 14 15 15 16 16 FF 00 
      96.  00:A51E                      	db  #20,#20,#21,#21,#22,#22,#23,#23,#24,#24,#25,#25,#26,#26,#FF,#00
      96.  00:A51E  20 20 21 21 22 22 23 23 24 24 25 25 26 26 FF 00 
      97.  00:A52E                      	db  #30,#30,#31,#31,#32,#32,#33,#33,#34,#34,#35,#35,#36,#36,#FF,#00
      97.  00:A52E  30 30 31 31 32 32 33 33 34 34 35 35 36 36 FF 00 
      98.  00:A53E                      	db  00000000b,#00,00000001b,#01,00001111b,#02,00000011b,#03,00001000b,#04,00001001b,#05,00001100b,#06,#FF,#00
      98.  00:A53E  00 00 01 01 0F 02 03 03 08 04 09 05 0C 06 FF 00 
      99.  00:A54E                      	db  #50,#50,#51,#51,#52,#52,#53,#53,#54,#54,#55,#55,#56,#56,#FF,#00
      99.  00:A54E  50 50 51 51 52 52 53 53 54 54 55 55 56 56 FF 00 
     100.  00:A55E                      	db  00000000b,#00,00000001b,10000000b,00001111b,#02,00000011b,#03,00001000b,#04,00001001b,#05,00001100b,#06,#FF,#00	;ultima fila
     100.  00:A55E  00 00 01 80 0F 02 03 03 08 04 09 05 0C 06 FF 00 
     101.  00:A56E                      
     102.  00:A56E                      
     103.  00:A56E                      
     146   00:A56E                      	
     147   00:A56E                      	include "variables.asm"
       1.  00:A56E                      ;;=====================================================
       2.  00:A56E                      ;;DEFINICIÓN DE VARIABLES
       3.  00:A56E                      ;;=====================================================
       4.  00:A56E                      
       5.  00:A56E                      ;Colores base de la pantalla
       6.  00:A56E                      color_base:
       7.  00:A56E  01 01 01            			DB		COLNEGRO,COLNEGRO,COLNEGRO	
       8.  00:A571                      ;colores de pantalla cuando se tira bomba
       9.  00:A571                      color_bomba1:
      10.  00:A571  08 08 08            			DB		COLROJO,COLROJO,COLROJO
      11.  00:A574                      color_bomba2:
      12.  00:A574  06 06 06            			DB		COLROJOOSC,COLROJOOSC,COLROJOOSC
      13.  00:A577                      
      14.  00:A577                      ;definicion de variable del prota usando la estructura del punto de mira
      15.  00:A577                      prota:		ESTRUCTURA_PUNTOMIRA
      15.  00:A577  64 64 00 00 00 05 00 00 00 00 00 00 00 00 00 00 
      16.  00:A587                      ;variables globales del prota
      17.  00:A587                      prota_nivel:			;nivel del castillo donde está 0-6
      18.  00:A587  00                  			DB		0
      19.  00:A588                      prota_vidas:
      20.  00:A588  00                  			DB		0
      21.  00:A589                      prota_reliquias:
      22.  00:A589  03                  			DB		3
      23.  00:A58A                      prota_pos_mapx:
      24.  00:A58A  00                  			DB		0	;pos columna
      25.  00:A58B                      prota_pos_mapy:
      26.  00:A58B  00                  			DB		0	;pos fila
      27.  00:A58C                      prota_energia:
      28.  00:A58C  FA                  			DB		250
      29.  00:A58D                      
      30.  00:A58D                      ;array para pintar de golpe el marcador de vidas
      31.  00:A58D                      array_aux_vidas: 		
      32.  00:A58D                      			DB		0,0,0,0,0,0,0,0
      32.  00:A58D  00 00 00 00 00 00 00 00 
      33.  00:A595                      
      34.  00:A595                      ;array para pintar de golpe el marcador de reliquias
      35.  00:A595                      array_aux_reliquias:	
      36.  00:A595                      			DB		0,0,0,0,0,0,0,0
      36.  00:A595  00 00 00 00 00 00 00 00 
      37.  00:A59D                      
      38.  00:A59D                      array_aux_energia:					;array para pintar de golpe el marcador de energía
      39.  00:A59D                      			DB		16,0,0,0,0,0,0 	;el 16 primero es porque siempre estará pintado el cuadro primero rojo
      39.  00:A59D  10 00 00 00 00 00 00 
      40.  00:A5A4                      ultimo_pos_array_aux_energia:
      41.  00:A5A4  00                  			DB		0				;el array completo es de 8 pero para posicionar sin niecesidad de cálculos  etiqueto este aparte
      42.  00:A5A5                      			
      43.  00:A5A5                      array_aux_mapa_limpiar:	;es por facilitar el reseteo del mapa (pinto 7 lineas en negro con bios) la otra opción es más larga en código y complicada aunque más rápida
      44.  00:A5A5                      			DB		0,0,0,0,0,0,0
      44.  00:A5A5  00 00 00 00 00 00 00 
      45.  00:A5AC                      elemento_pintar_mapa:
      46.  00:A5AC  00                  			DB		0	;TILEPROTAM = 19, ;TILEGRISM = 9
      47.  00:A5AD                      			
      48.  00:A5AD                      ;; nota importante: cada vez que se cambie de nivel se actualizará el contenido
      49.  00:A5AD                      ;; arrays con mapa de tiles de las puertas
      50.  00:A5AD                      array_puerta_arriba:
      51.  00:A5AD  03 01 01 03         array_puerta_arriba1:		DB	3,1,1,3
      52.  00:A5B1  01 01 01 01         array_puerta_arriba2:		DB	1,1,1,1
      53.  00:A5B5  01 01 01 01         array_puerta_arriba3:		DB	1,1,1,1
      54.  00:A5B9  01 01 01 01         array_puerta_arriba4:		DB	1,1,1,1
      55.  00:A5BD  01 01 01 01         array_puerta_arriba5:		DB	1,1,1,1
      56.  00:A5C1                      
      57.  00:A5C1                      array_puerta_derecha:
      58.  00:A5C1  01 03 03            array_puerta_derecha1:		DB	1,3,3
      59.  00:A5C4  01 01 03            array_puerta_derecha2:		DB	1,1,3
      60.  00:A5C7  01 01 01            array_puerta_derecha3:		DB	1,1,1
      61.  00:A5CA  01 01 01            array_puerta_derecha4:		DB	1,1,1
      62.  00:A5CD  01 01 01            array_puerta_derecha5:		DB	1,1,1
      63.  00:A5D0  02 01 01            array_puerta_derecha6:		DB	2,1,1
      64.  00:A5D3  04 02 01            array_puerta_derecha7:		DB	4,2,1
      65.  00:A5D6                      	
      66.  00:A5D6  01 01 01 01         array_puerta_abajo:			DB	1,1,1,1
      67.  00:A5DA                      
      68.  00:A5DA                      array_puerta_izquierda:
      69.  00:A5DA  03 03 01            array_puerta_izquierda1:	DB	3,3,1
      70.  00:A5DD  03 01 01            array_puerta_izquierda2:	DB	3,1,1
      71.  00:A5E0  01 01 01            array_puerta_izquierda3:	DB	1,1,1
      72.  00:A5E3  01 01 01            array_puerta_izquierda4:	DB	1,1,1
      73.  00:A5E6  01 01 01            array_puerta_izquierda5:	DB	1,1,1
      74.  00:A5E9  01 01 02            array_puerta_izquierda6:	DB	1,1,2
      75.  00:A5EC  01 02 04            array_puerta_izquierda7:	DB	1,2,4
      76.  00:A5EF                      
      77.  00:A5EF                      ;array con posiciones pseudoaleatorias de ayudas y extras (qué valor se escogerá con R 0-127 + and 00001111)
      78.  00:A5EF                      ;+256 porque aparecerán todas en el banco1
      79.  00:A5EF                      pos_ayudas:					DB	0,4,18,23,45,69,73,82,90,152,171,180,190,192,198,208
      79.  00:A5EF  00 04 12 17 2D 45 49 52 5A 98 AB B4 BE C0 C6 D0 
      80.  00:A5FF                      
      81.  00:A5FF                      ;array de ayudas
      82.  00:A5FF                      ;posición dentro del bank1 (o 0 que son iguales) de los tiles de la ayuda (cómo en los sprites de 2x2)
      83.  00:A5FF                      array_ayudas:
      84.  00:A5FF  C8 CA               array_oracionon:			DB	200,202
      85.  00:A601  C9 CB               array_oracionon1:			DB	201,203
      86.  00:A603  CC CE               array_oracionoff:			DB	204,206
      87.  00:A605  CD CF               array_oracionoff1:			DB	205,207
      88.  00:A607  D0 D2               array_cruzon:				DB	208,210
      89.  00:A609  D1 D3               array_cruzon1:				DB	209,211
      90.  00:A60B  D4 D6               array_cruzoff:				DB	212,214
      91.  00:A60D  D5 D7               array_cruzoff1:				DB	213,215
      92.  00:A60F  D8 DA               array_aguaon:				DB	216,218
      93.  00:A611  D9 DB               array_aguaon1:				DB	217,219
      94.  00:A613  DC DE               array_aguaoff:				DB	220,222
      95.  00:A615  DD DF               array_aguaoff1:				DB	221,223
      96.  00:A617  E0 E2               array_armaduraon:			DB	224,226
      97.  00:A619  E1 E3               array_armaduraon1:			DB	225,227
      98.  00:A61B  E4 E6               array_armaduraoff:			DB	228,230
      99.  00:A61D  E5 E7               array_armaduraoff1:			DB	229,231
     100.  00:A61F  E8 EA               array_plantaon:				DB	232,234
     101.  00:A621  E9 EB               array_plantaon1:			DB	233,235
     102.  00:A623  EC EE               array_plantaoff:			DB	236,238
     103.  00:A625  ED EF               array_plantaoff1:			DB	237,239
     104.  00:A627  F0 F2               array_extraon:				DB	240,242
     105.  00:A629  F1 F3               array_extraon1:				DB	241,243
     106.  00:A62B  F4 F6               array_extraoff:				DB	244,246
     107.  00:A62D  F5 F7               array_extraoff1:			DB	245,247
     108.  00:A62F  F8 FA               array_ballestaon:			DB	248,250
     109.  00:A631  F9 FB               array_ballestaon1:			DB	249,251
     110.  00:A633  FC FE               array_ballestaoff:			DB	252,254
     111.  00:A635  FD FF               array_ballestaoff1:			DB	253,255
     112.  00:A637                      
     113.  00:A637                      lista_ayudas:
     114.  00:A637  00 (8)              ayuda_oracion:		DS		ESTRUCTURA_AYUDA		
     115.  00:A63F  00 (8)              ayuda_cruz:			DS		ESTRUCTURA_AYUDA
     116.  00:A647  00 (8)              ayuda_aguabendita:	DS		ESTRUCTURA_AYUDA
     117.  00:A64F  00 (8)              ayuda_armadura:		DS		ESTRUCTURA_AYUDA
     118.  00:A657  00 (8)              ayuda_planta:		DS		ESTRUCTURA_AYUDA
     119.  00:A65F  00 (8)              ayuda_vidaextra		DS		ESTRUCTURA_AYUDA
     120.  00:A667  00 (8)              ayuda_ballesta:		DS		ESTRUCTURA_AYUDA
     121.  00:A66F                      
     122.  00:A66F                      
     123.  00:A66F                      ;array de 4 bytes x 32 sprites posibles en pantalla que sobreescribirá la tabla de sprites actualizando VRAM
     124.  00:A66F                      array_sprites:
     125.  00:A66F  00 (8)              array_sprites_pm:				DS	2 * 4
     126.  00:A677  00 (120)            array_sprites_enem:				DS	30 * 4
     127.  00:A6EF  00 (140)            lista_enemigos:					DS	10 * ESTRUCTURA_ENEMIGO
     128.  00:A77B                      ; puntero al array a pintar en VRAM
     129.  00:A77B  00 00               puntero_array_atrib_array_VRAM: DW	0	;ARRAYSPTRIES + 8
     130.  00:A77D                      
     131.  00:A77D                      
     132.  00:A77D                      
     133.  00:A77D                      
     134.  00:A77D                      
     148   00:A77D                      	
     149   00:A77D                      ;;=====================================================
     150   00:A77D                      ;;DEFINICIÓN DE PANTALLAS
     151   00:A77D                      ;;=====================================================		
     152   00:A77D                      	include "pantallas.asm"
       1.  00:A77D                      ;;=====================================================
       2.  00:A77D                      ;;DEFINICIÓN DE PANTALLAS
       3.  00:A77D                      ;;=====================================================		
       4.  00:A77D                      
       5.  00:A77D                      ; bancos 1 y 2 y de pantalla 1 
       6.  00:A77D                      ; se usa un banco común (en este caso el banco 1)
       7.  00:A77D                      ; el mapa afecta al banco 1 y 2
       8.  00:A77D  (01B5)              tiles_patrones_nivel0:	incbin "pantallas/nivel0.bank1.til.bin.chr.plet5"
       9.  00:A932  (0047)              tiles_color_nivel0:		incbin "pantallas/nivel0.bank1.til.bin.clr.plet5"
      10.  00:A979  (0035)              tiles_mapa_nivel0:		incbin "pantallas/nivel0.bank01.map.bin.plet5"
      11.  00:A9AE                      
      12.  00:A9AE  (01B5)              tiles_patrones_nivel1:	incbin "pantallas/nivel1.bank1.til.bin.chr.plet5"
      13.  00:AB63  (0047)              tiles_color_nivel1:		incbin "pantallas/nivel1.bank1.til.bin.clr.plet5"
      14.  00:ABAA  (0035)              tiles_mapa_nivel1:		incbin "pantallas/nivel1.bank01.map.bin.plet5"
      15.  00:ABDF                      
      16.  00:ABDF  (01B5)              tiles_patrones_nivel2:	incbin "pantallas/nivel2.bank1.til.bin.chr.plet5"
      17.  00:AD94  (0047)              tiles_color_nivel2:		incbin "pantallas/nivel2.bank1.til.bin.clr.plet5"
      18.  00:ADDB  (0035)              tiles_mapa_nivel2:		incbin "pantallas/nivel2.bank01.map.bin.plet5"
      19.  00:AE10                      
      20.  00:AE10  (01B5)              tiles_patrones_nivel3:	incbin "pantallas/nivel3.bank1.til.bin.chr.plet5"
      21.  00:AFC5  (0047)              tiles_color_nivel3:		incbin "pantallas/nivel3.bank1.til.bin.clr.plet5"
      22.  00:B00C  (0035)              tiles_mapa_nivel3:		incbin "pantallas/nivel3.bank01.map.bin.plet5"
      23.  00:B041                      
      24.  00:B041  (01B5)              tiles_patrones_nivel4:	incbin "pantallas/nivel4.bank1.til.bin.chr.plet5"
      25.  00:B1F6  (0047)              tiles_color_nivel4:		incbin "pantallas/nivel4.bank1.til.bin.clr.plet5"
      26.  00:B23D  (0035)              tiles_mapa_nivel4:		incbin "pantallas/nivel4.bank01.map.bin.plet5"
      27.  00:B272                      
      28.  00:B272  (01B5)              tiles_patrones_nivel5:	incbin "pantallas/nivel5.bank1.til.bin.chr.plet5"
      29.  00:B427  (0047)              tiles_color_nivel5:		incbin "pantallas/nivel5.bank1.til.bin.clr.plet5"
      30.  00:B46E  (0035)              tiles_mapa_nivel5:		incbin "pantallas/nivel5.bank01.map.bin.plet5"
      31.  00:B4A3                      
      32.  00:B4A3  (01B5)              tiles_patrones_nivel6:	incbin "pantallas/nivel6.bank1.til.bin.chr.plet5"
      33.  00:B658  (0047)              tiles_color_nivel6:		incbin "pantallas/nivel6.bank1.til.bin.clr.plet5"
      34.  00:B69F  (0035)              tiles_mapa_nivel6:		incbin "pantallas/nivel6.bank01.map.bin.plet5"
      35.  00:B6D4                      
      36.  00:B6D4                      ; 3º banco que es la parte de puntos, vidas, mapas, etc... es común
      37.  00:B6D4  (014C)              tiles_patrones_marcador:	incbin "pantallas/marcador.til.bin.chr.plet5"
      38.  00:B820  (0035)              tiles_color_marcador:		incbin "pantallas/marcador.til.bin.clr.plet5"
      39.  00:B855  (0062)              tiles_mapa_marcador:		incbin "pantallas/marcador.map.bin.plet5"
      40.  00:B8B7                      
      41.  00:B8B7                      ;NOTA: FALTARÍAN PANTALLAS ESPECIALES (POR DEFINIR)
     153   00:B8B7                      
     154   00:B8B7                      
     155   00:B8B7                      	
     156   00:B8B7                      END:

    LABELS
-------------------------------------------------
00:000000D8 X GTTRIG
00:000000D5 X GTSTCK
00:0000F3DB   CLIKSW
00:0000013E X RDVDP
00:00000047   WRTVDP
00:0000005C   LDIRVM
00:00000059 X LDIRMV
00:0000005F   CHGMOD
00:00000041 X DISSCR
00:00000044 X ENASCR
00:00000062   CHGCLR
00:0000F3E9   FORCLR
00:0000F3EA   BAKCLR
00:0000F3EB   BDRCLR
00:000000C3   CLS
00:0000F3DF X RG0SAV
00:0000F3E0   RG1SAV
00:0000F3E1 X RG2SAV
00:0000F3E2 X RG3SAV
00:0000F3E3 X RG4SAV
00:0000F3E4 X RG5SAV
00:0000F3E5 X RG6SAV
00:0000F3E6 X RG7SAV
00:0000F3E7 X STATFL
00:00000099   REGEST
00:00000098   REGESCVDP
00:000000A0   PSG_A
00:000000A1   PSG_W
00:000000A2   PSG_R
00:00000000   CHRTBL
00:00001800   TILMAP
00:00001900 X TILMAPBANK1
00:00001B00   SPRART
00:00002000   CLRTBL
00:00003800   SPRTBL
00:00000001 X SI
00:00000000 X NO
00:00000004   LIMCADENCIA
00:00000000 X COLTRASP
00:00000001   COLNEGRO
00:00000002 X COLVERDE
00:00000003 X COLVERCLA
00:00000004 X COLAZULOSC
00:00000005 X COLAZULLA
00:00000006   COLROJOOSC
00:00000007 X COLCYAN
00:00000008   COLROJO
00:00000009 X COLROJOCLA
00:0000000A X COLAMAROSC
00:0000000B X COLAMARCLA
00:0000000C X COLVERDOSC
00:0000000D X COLMAGENTA
00:0000000E X COLGRIS
00:0000000F   COLBLANCO
00:000002F8   POSMAPLIN1
00:000002D8   POSMAPLIN2
00:000002B8   POSMAPLIN3
00:00000298   POSMAPLIN4
00:00000278   POSMAPLIN5
00:00000258   POSMAPLIN6
00:00000238   POSMAPLIN7
00:0000000D   POSCARAMAP
00:00000248   POSVIDAS
00:00000011   POSRELIMAP
00:000002C8   POSRELIQ
00:00000288   POSENERG
00:000002B4   POSNIVEL
00:00000238   POSMAPA
00:000001EE   POSPUERABAJ
00:0000008E   POSPUERARRI
00:000000FC   POSPUERDERE
00:000000E1   POSPUERIZQU
00:00000000   ORACIONON
00:00000004   ORACIONOFF
00:00000008   CRUZON
00:0000000C   CRUZOFF
00:00000010   AGUAON
00:00000014   AGUAOFF
00:00000018   ARMADON
00:0000001C   ARMADOFF
00:00000020   PLANTAON
00:00000024   PLANTAOFF
00:00000028   VIDAEXTON
00:0000002C   VIDAEXTOFF
00:00000030   BALLESON
00:00000034   BALLESOFF
00:00000000   INACTIVO
00:00000001   ACTIVO
00:00000013   TILEPROTAM
00:00000009   TILEGRISM
00:00000010   TILEMAPROJO
00:0000000F   TILEMAPAMAR
00:0000000E   TILEMAPVERD
00:00000008   NMAXVIDREL
00:00000007   NHABNIVEL
00:000000F8 X MAXENERGIA
00:000000D9   TILEENERG8
00:000000BA   TILEENERG7
00:0000009B   TILEENERG6
00:0000007C   TILEENERG5
00:0000005D   TILEENERG4
00:0000003E   TILEENERG3
00:0000001F   TILEENERG2
00:00000000   TILENEGRO
00:00000000 X LIMPANTIZQ
00:000000FF   LIMPANTDER
00:00000000 X LIMPANTARR
00:00000080   LIMPANTABA
00:00000006 X BASEMAPY
00:00000003 X BASEMAPX
00:0000FD9A X H.KEYI
00:0000FD9F   H.TIMI
00:0000F000   PT3_SETUP
00:0000F001   PT3_MODADDR
00:0000F003   PT3_CrPsPtr
00:0000F005   PT3_SAMPTRS
00:0000F007   PT3_OrnPtrs
00:0000F009   PT3_PDSP
00:0000F00B   PT3_CSP
00:0000F00D   PT3_PSP
00:0000F00F   PT3_PrNote
00:0000F010   PT3_PrSlide
00:0000F012   PT3_AdInPtA
00:0000F014   PT3_AdInPtB
00:0000F016   PT3_AdInPtC
00:0000F018   PT3_LPosPtr
00:0000F01A   PT3_PatsPtr
00:0000F01C   PT3_Delay
00:0000F01D   PT3_AddToEn
00:0000F01E   PT3_Env_Del
00:0000F01F   PT3_ESldAdd
00:0000F021   PT3_NTL3
00:0000F023   VARS
00:0000F023   ChanA
00:0000F040   ChanB
00:0000F05D   ChanC
00:0000F07A   DelyCnt
00:0000F07B   CurESld
00:0000F07D   CurEDel
00:0000F07E   Ns_Base_AddToNs
00:0000F07E   Ns_Base
00:0000F07F   AddToNs
00:0000F080   NT_
00:0000F140   AYREGS
00:0000F140   VT_
00:0000F14E   EnvBase
00:0000F150   VAR0END
00:0000F150   T1_
00:0000F150   T_NEW_1
00:0000F150   T_OLD_1
00:0000F168   T_OLD_2
00:0000F180   T_NEW_3
00:0000F180   T_OLD_3
00:0000F182   T_OLD_0
00:0000F182   T_NEW_0
00:0000F19A   T_NEW_2
00:0000F240   ayFX_MODE
00:0000F241   ayFX_BANK
00:0000F243   ayFX_PRIORITY
00:0000F244   ayFX_POINTER
00:0000F246   ayFX_TONE
00:0000F248   ayFX_NOISE
00:0000F249   ayFX_VOLUME
00:0000F24A   ayFX_CHANNEL
00:00008000   START
00:0000802C   loop_principal
00:00008039 X fin_programa_principal
00:00008039   inicializa_variables_pruebas
00:0000805B X fin_inicializa_variables_pruebas
00:0000805C   inicializa_niveles
00:0000806A   inicializa_niveles.bucle_borra_hab
00:0000806E X fin_iniciliza_niveles
00:0000806F   actualiza_marcador_vidas
00:00008074   loop_marcador_caras_negro
00:00008079 X fin_loop_marcador_caras_negro
00:00008082   loop_marcador_caras
00:00008087 X fin_loop_marcador_caras
00:00008087 X fin_actualiza_marcador_vidas
00:00008088   actualiza_buffer_reliquias
00:0000808E   loop_buffer_reliquias_negro
00:0000809B   loop_buffer_reliquias
00:000080A0 X fin_actualiza_buffer_reliquias
00:000080A1   localiza_info_habitacion
00:000080A4 X localiza_info_habitacion.situo_columna
00:000080AD X localiza_info_habitacion.situo_fila
00:000080B6   localiza_info_habitacion.loop_suma_fila
00:000080BE   localiza_info_habitacion.situo_nivel
00:000080CD   localiza_info_habitacion.loop_suma_nivel
00:000080D2   localiza_info_habitacion.actualiza_valiable_habitacion
00:000080DB X fin_localiza_info_habitacion
00:000080DC   suma_A_BC
00:000080E1 X fin_suma_A_BC
00:000080E2   color_pantalla
00:000080F3 X fin_color_pantalla
00:000080F3   sub_preparapantalla
00:000080F3 X elimina_clic
00:000080F7 X fin_elimina_clic
00:000080F7 X limpia_pantalla
00:000080FB X fin_limpia_pantalla
00:00008101 X screen2
00:00008106 X sprites_16_16
00:00008114 X fin_sub_preparapantalla
00:00008114   pinta_pantalla_completa
00:0000811A X fin_pinta_pantalla_completa
00:0000811B   pinta_parte_superior_pantalla
00:0000814C   pinta_parte_superior_pantalla.carga_nivel_0
00:00008167   pinta_parte_superior_pantalla.carga_nivel_1
00:00008182   pinta_parte_superior_pantalla.carga_nivel_2
00:0000819D   pinta_parte_superior_pantalla.carga_nivel_3
00:000081B8   pinta_parte_superior_pantalla.carga_nivel_4
00:000081D3   pinta_parte_superior_pantalla.carga_nivel_5
00:000081EE   pinta_parte_superior_pantalla.carga_nivel_6
00:00008206   pinta_parte_superior_pantalla.fin_carga_niveles
00:00008233 X fin_pinta_parte_superior_pantalla
00:00008233   tiles_patrones
00:00008235   tiles_colores
00:00008237   tiles_mapa
00:00008239   pinta_parte_inferior_pantalla
00:00008254 X fin_pinta_parte_inferior_pantalla
00:00008254   pinta_vidas
00:00008263 X fin_pinta_vidas
00:00008263   pinta_reliquias
00:00008272 X fin_pinta_reliquias
00:00008272   pinta_nivel
00:0000827E X fin_pinta_nivel
00:0000827E   pinta_tile_suelto
00:0000828B X fin_pinta_tile_suelto
00:0000828C   mira_pinta_energia
00:00008292 X pinta_ener
00:00008292 X pinta_ener_tile_8
00:0000829E   pinta_ener_tile_8_negro
00:0000829F   pinta_ener_tile_7
00:000082A9   pinta_ener_tile_7_negro
00:000082AA   pinta_ener_tile_6
00:000082B4   pinta_ener_tile_6_negro
00:000082B5   pinta_ener_tile_5
00:000082BF   pinta_ener_tile_5_negro
00:000082C0   pinta_ener_tile_4
00:000082CA   pinta_ener_tile_4_negro
00:000082CB   pinta_ener_tile_3
00:000082D5   pinta_ener_tile_3_negro
00:000082D6   pinta_ener_tile_2
00:000082E0   pinta_ener_tile_2_negro
00:000082E1   fin_mira_pinta_energia
00:000082E3   pinta_energia
00:000082F2 X fin_pinta_energia
00:000082F2   borra_mapa
00:00008348 X fin_borra_mapa
00:00008349   pinta_puertas
00:00008366 X fin_pinta_puertas
00:00008367   pinta_puerta_aba
00:00008382 X fin_pinta_puerta_aba
00:00008382   pinta_puerta_arr
00:0000839D X fin_pinta_puerta_arr
00:0000839D   pinta_puerta_der
00:000083B8 X fin_pinta_puerta_der
00:000083B8   pinta_puerta_izq
00:000083D3 X fin_pinta_puerta_izq
00:000083D3   posiciona_en_mapa
00:000083D6 X posiciona_en_mapa.sumar_fila
00:00008400 X posiciona_en_mapa.fila_0
00:00008407   posiciona_en_mapa.fila_1
00:0000840E   posiciona_en_mapa.fila_2
00:00008415   posiciona_en_mapa.fila_3
00:0000841C   posiciona_en_mapa.fila_4
00:00008423   posiciona_en_mapa.fila_5
00:0000842A X posiciona_en_mapa.fila_6
00:0000842A   posiciona_en_mapa.sumar_columna
00:00008440   pinta_pos_mapa_vacio
00:00008442   fin_pinta_pos_mapa
00:00008445 X fin_posiciona_en_mapa
00:00008445   efecto_imagen_tira_reliquia
00:00008448   efecto_imagen_tira_reliquia.parpadea_fondo
00:0000845F X fin_efecto_imagen_tira_reliquia
00:0000845F   pinta_array
00:0000847A   pinta_array.pa_pinta_fila
00:0000847B   pinta_array.pa_pinta_columnas
00:0000849E X fin_pinta_array
00:0000849F   wordaux1
00:000084A1   wordaux2
00:000084A3   byteaux1
00:000084A4   byteaux2
00:000084A5   carga_patrones_sprites_nivel
00:000084AF X fin_carga_patrones_sprites_nivel
00:000084B0   carga_patrones_nivel_comunes
00:000084BC X fin_carga_patrones_nivel_comunes
00:000084BC   carga_patrones_sprites_nivel1
00:000084BC X fin_carga_patrones_sprites
00:000084BD   render_sprites
00:000084C9 X fin_actualiza_array_sprites_vram
00:000084C9   vuelca_resultado_puntomira_array
00:000084EE X vuelca_resultado_puntomira_array.codigo_color_1
00:000084F7   vuelca_resultado_puntomira_array.codigo_color_2
00:00008500 X fin_vuelca_resultado_puntomira_array
00:00008500   check_player
00:0000851F X f
00:00008520   mueve_arriba
00:0000852B   mueve_arriba.no_decrementa_y
00:0000852C X fin_mueve_arriba
00:0000852D   mueve_derecha
00:0000853A   mueve_derecha.no_incrementa_x
00:0000853B X fin_mueve_derecha
00:0000853C   mueve_abajo
00:00008549   mueve_abajo.no_incrementa_y
00:0000854A X fin_mueve_abajo
00:0000854B   mueve_izquierda
00:00008556   mueve_izquierda.no_decrementa_x
00:00008557 X fin_mueve_izquierda
00:00008558   mira_disparo
00:00008558 X mira_disparo.mira_boton_pulsado1
00:00008565 X mira_disparo.no_efectua_disparo
00:00008570   mira_disparo.efectua_disparo
00:00008582   mira_disparo.fin_mira_disparo1
00:00008583   mira_disparo.mira_boton_pulsado2
00:0000859F X fin_mira_disparo
00:0000859F   update_controllers_status
00:000085D6   read_joy_0
00:000085EA   check_8th_keyboard_row
00:000085F8   check_4th_keyboard_row
00:00008606 X inicializa_replayer_efectos_interrupciones
00:0000861F X fin_inicializa_replayer_efectos_interrupciones
00:00008620   subrutina_isr
00:00008629 X fin_subrutina_isr
00:00008629 X subrutinas_sonido
00:00000000   CHNPRM_PsInOr
00:00000001   CHNPRM_PsInSm
00:00000002   CHNPRM_CrAmSl
00:00000003   CHNPRM_CrNsSl
00:00000004   CHNPRM_CrEnSl
00:00000005   CHNPRM_TSlCnt
00:00000006   CHNPRM_CrTnSl
00:00000008   CHNPRM_TnAcc
00:0000000A   CHNPRM_COnOff
00:0000000B   CHNPRM_OnOffD
00:0000000C   CHNPRM_OffOnD
00:0000000D   CHNPRM_OrnPtr
00:0000000F   CHNPRM_SamPtr
00:00000011   CHNPRM_NNtSkp
00:00000012   CHNPRM_Note
00:00000013   CHNPRM_SlToNt
00:00000014   CHNPRM_Env_En
00:00000015   CHNPRM_Flags
00:00000016   CHNPRM_TnSlDl
00:00000017   CHNPRM_TSlStp
00:00000019   CHNPRM_TnDelt
00:0000001B   CHNPRM_NtSkCn
00:0000001C   CHNPRM_Volume
00:0000001D X CHNPRM_Size
00:00000000   AR_TonA
00:00000002   AR_TonB
00:00000004   AR_TonC
00:00000006   AR_Noise
00:00000007   AR_Mixer
00:00000008   AR_AmplA
00:00000009   AR_AmplB
00:0000000A   AR_AmplC
00:0000000B   AR_Env
00:0000000D   AR_EnvTp
00:00008629   CHECKLP
00:0000863A X PT3_MUTE
00:00008646   PT3_INIT
00:00008685   PT3_INIT.TP_0
00:00008691   PT3_INIT.TP_1
00:00008698   PT3_INIT.TP_2
00:00008706   PT3_INIT.L1
00:00008713   PT3_INIT.L2
00:00008717 X PT3_INIT.L3
00:0000873E   PT3_INIT.CORR_1
00:0000874C   PT3_INIT.CORR_2
00:00008753   PT3_INIT.TC_EXIT
00:0000875E   PT3_INIT.INITV1
00:00008766   PT3_INIT.INITV2
00:0000877A   PT3_INIT.INITV3
00:0000877E   PD_OrSm
00:00008788   PD_SAM
00:00008789   PD_SAM_
00:0000879F   PD_VOL
00:000087A8   PD_EOff
00:000087B0   PD_SorE
00:000087BA   PD_ENV
00:000087BF   PD_ORN
00:000087C4   PD_ESAM
00:000087D1   PTDECOD
00:000087E0   PD_LOOP
00:000087E3   PD_LP2
00:00008810   PD_NOIS
00:00008815   PD_REL
00:0000881B   PD_NOTE
00:00008823   PD_RES
00:00008835   PD_FIN
00:0000883C   C_PORTM
00:00008887   C_PORTM.NOSIG
00:00008891   SET_STP
00:0000889D   C_GLISS
00:000088B0   C_SMPOS
00:000088B6   C_ORPOS
00:000088BC   C_VIBRT
00:000088D4   C_ENGLS
00:000088E6   C_DELAY
00:000088EC   SETENV
00:00008907   C_NOP
00:00008908   SETORN
00:00008921   SPCCOMS
00:00008941   CHREGS
00:00008964   CHREGS.CH_ORPS
00:0000896F   CHREGS.CH_NTP
00:00008975   CHREGS.CH_NOK
00:00008990   CHREGS.CH_SMPS
00:000089A6   CHREGS.CH_NOAC
00:000089ED   CHREGS.CH_STPP
00:00008A02   CHREGS.CH_AMP
00:00008A14   CHREGS.CH_AMIN
00:00008A19   CHREGS.CH_SVAM
00:00008A1C   CHREGS.CH_NOAM
00:00008A25   CHREGS.CH_APOS
00:00008A2B   CHREGS.CH_VOL
00:00008A36 X CHREGS.CH_ENV
00:00008A3D   CHREGS.CH_NOEN
00:00008A57   CHREGS.NO_ENAC
00:00008A5E   CHREGS.NO_ENSL
00:00008A6C   CHREGS.CH_MIX
00:00008A70   CHREGS.CH_EXIT
00:00008A8F   CHREGS.CH_ONDL
00:00008A93   PT3_PLAY
00:00008AC7   PT3_PLAY.PLNLP
00:00008AEE   PT3_PLAY.PL1A
00:00008AF9   PT3_PLAY.PL1B
00:00008B0E   PT3_PLAY.PL1C
00:00008B23   PT3_PLAY.PL1D
00:00008B29   PT3_PLAY.PL2
00:00008B8B   PT3_ROUT
00:00008B8C   ROUT_A0
00:00008B98   ROUT_A0.LOUT
00:00008BAC   NT_DATA
00:00008BBC   T_
00:00008BBC   TCOLD_0
00:00008BC8   TCNEW_1
00:00008BC8   TCOLD_1
00:00008BCA   TCOLD_2
00:00008BDC   TCNEW_3
00:00008BDD   TCOLD_3
00:00008BE6   TCNEW_0
00:00008BF1   TCNEW_2
00:00008BFC   EMPTYSAMORN
00:00008C00   T_PACK
00:00000000 X AYFXRELATIVE
00:00008C35   ayFX_SETUP
00:00008C41   ayFX_END
00:00008C47   ayFX_INIT
00:00008C58   ayFX_INIT.CHECK_PRI
00:00008C79   ayFX_INIT.INIT_END
00:00008C7D   ayFX_PLAY
00:00008C91   ayFX_PLAY.TAKECB
00:00008CA2   ayFX_PLAY.CHECK_NN
00:00008CAF   ayFX_PLAY.SETPOINTER
00:00008CC3   ayFX_PLAY.SETMASKS
00:00008CD1 X ayFX_PLAY.CHK1
00:00008CD3 X ayFX_PLAY.PLAY_C
00:00008CE0   ayFX_PLAY.CHK2
00:00008CE5 X ayFX_PLAY.PLAY_B
00:00008CF2   ayFX_PLAY.CHK3
00:00008CF5 X ayFX_PLAY.PLAY_A
00:00008D02   ayFX_PLAY.SETMIXER
00:00008D12   song
00:0000967A   sfx_bank
00:000096C5   resetea_ayudas
00:0000975C X fin_resetea_ayudas
00:0000975D   inicializa_ayudas
00:00009760 X inicializa_ayudas.examina_ayudas
00:00009760 X inicializa_ayudas.examina_ballesta
00:00009770   inicializa_ayudas.examina_vidaextra
00:0000977E X inicializa_ayudas.examina_planta
00:0000978A   inicializa_ayudas.examina_armadura
00:00009798   inicializa_ayudas.examina_agua
00:000097A6   inicializa_ayudas.examina_cruz
00:000097B4   inicializa_ayudas.examina_oracion
00:000097C0   inicializa_ayudas.fin_examina_ayudas
00:000097C0 X fin_inicializa_ayudas
00:000097C1   calcula_posicion_ayuda
00:000097D0 X fin_calcula_posicion_ayuda
00:000097D1 X pinta_obj_ayuda
00:000097F3 X fin_pinta_obj_ayuda
00:000097F4 X objeto_pintar
00:000097F5   accion_oracion
00:000097F5 X fin_accion_oracion
00:000097F6   accion_cruz
00:000097F6 X fin_accion_cruz
00:000097F7   accion_agua
00:000097F7 X fin_accion_agua
00:000097F8 X accion_armadura
00:000097F8 X fin_accion_armadura
00:000097F9   accion_planta
00:000097F9 X fin_accion_planta
00:000097FA   accion_vidaextra
00:000097FA X fin_accion_vidaextra
00:000097FB   accion_ballesta
00:000097FB X fin_accion_ballesta
00:000097FC   depack_VRAM
00:00009829   literal
00:0000982E   loop
00:00009837 X getlen
00:0000983D   lus
00:0000985A   lenok
00:00009867   mode7
00:0000986D   mode6
00:00009873   mode5
00:00009879   mode4
00:0000987F   mode3
00:00009885   mode2
00:00009895   offsok
00:000098A0   offsok.loop
00:000098C2   getbit
00:000098C6   getbitexx
00:000098CC   Depack_out
00:000098CE   modes
00:00000000 X ESTRUCTURA_PUNTOMIRA.posx
00:00000001 X ESTRUCTURA_PUNTOMIRA.posy
00:00000002 X ESTRUCTURA_PUNTOMIRA.escena
00:00000003 X ESTRUCTURA_PUNTOMIRA.velocidad
00:00000004 X ESTRUCTURA_PUNTOMIRA.boton2_pressed
00:00000005 X ESTRUCTURA_PUNTOMIRA.cadencia
00:00000006 X ESTRUCTURA_PUNTOMIRA.pm_aux1
00:00000007 X ESTRUCTURA_PUNTOMIRA.pm_aux2
00:00000008 X ESTRUCTURA_PUNTOMIRA.pm_aux3
00:00000009 X ESTRUCTURA_PUNTOMIRA.pm_aux4
00:0000000A X ESTRUCTURA_PUNTOMIRA.pm_aux5
00:0000000B X ESTRUCTURA_PUNTOMIRA.pm_aux6
00:0000000C X ESTRUCTURA_PUNTOMIRA.pm_aux7
00:0000000D X ESTRUCTURA_PUNTOMIRA.pm_aux8
00:0000000E X ESTRUCTURA_PUNTOMIRA.pm_aux9
00:0000000F X ESTRUCTURA_PUNTOMIRA.pm_aux10
00:00000010 X ESTRUCTURA_PUNTOMIRA
00:00000000 X ESTRUCTURA_ENEMIGO.tipo
00:00000001 X ESTRUCTURA_ENEMIGO.posx
00:00000002 X ESTRUCTURA_ENEMIGO.posy
00:00000003 X ESTRUCTURA_ENEMIGO.color
00:00000004 X ESTRUCTURA_ENEMIGO.escena
00:00000005 X ESTRUCTURA_ENEMIGO.contador_siguiente_escena
00:00000006 X ESTRUCTURA_ENEMIGO.reset_contador
00:00000007 X ESTRUCTURA_ENEMIGO.dano
00:00000008 X ESTRUCTURA_ENEMIGO.energia
00:00000009 X ESTRUCTURA_ENEMIGO.ver_hor
00:0000000A X ESTRUCTURA_ENEMIGO.manejador_dibujo
00:0000000C X ESTRUCTURA_ENEMIGO.en_aux3
00:0000000D X ESTRUCTURA_ENEMIGO.en_aux4
00:0000000E   ESTRUCTURA_ENEMIGO
00:00000000 X ESTRUCTURA_AYUDA.activo
00:00000001 X ESTRUCTURA_AYUDA.tipo
00:00000002 X ESTRUCTURA_AYUDA.tipousado
00:00000003 X ESTRUCTURA_AYUDA.postile
00:00000004 X ESTRUCTURA_AYUDA.posx
00:00000005 X ESTRUCTURA_AYUDA.posy
00:00000006 X ESTRUCTURA_AYUDA.puntero_accion
00:00000008   ESTRUCTURA_AYUDA
00:000098DC X sprites_pantantalla
00:000098DC   sprites_comunes
00:000098DC X sprite_punto_mira_1
00:000098FC X sprite_punto_mira_2
00:0000991C X sprite_punto_mira_1_mejorado
00:0000993C X sprite_punto_mira_2_mejorado
00:0000995C X sprite_explosion_1
00:0000997C X sprite_explosion_2
00:0000999C   fin_sprites_comunes
00:0000999C X sprite_arana1_1
00:000099BC X sprite_arana1_2
00:000099DC X sprite_murcielago1_1
00:000099FC X sprite_murcielago1_2
00:00009A1C X sprite_serpiente1_1
00:00009A3C X sprite_serpiente1_2
00:00009A5C X sprite_serpiente2_1
00:00009A7C X sprite_serpiente2_2
00:00009A9C X sprite_zombi1_1_1
00:00009ABC X sprite_zombi1_2_1
00:00009ADC X sprite_zombi1_3_1
00:00009AFC X sprite_zombi1_4_1
00:00009B1C X sprite_zombi1_1_2
00:00009B3C X sprite_zombi1_2_2
00:00009B5C X sprite_zombi1_3_2
00:00009B7C X sprite_zombi1_4_2
00:00009B9C X sprite_zombi2_1_1
00:00009BBC X sprite_zombi2_2_1
00:00009BDC X sprite_zombi2_3_1
00:00009BFC X sprite_zombi2_4_1
00:00009C1C X sprite_zombi2_1_2
00:00009C3C X sprite_zombi2_2_2
00:00009C5C X sprite_zombi2_3_2
00:00009C7C X sprite_zombi2_4_2
00:00009C9C X sprite_caballero1_1_1
00:00009CBC X sprite_caballero1_2_1
00:00009CDC X sprite_caballero1_3_1
00:00009CFC X sprite_caballero1_4_1
00:00009D1C X sprite_caballero1_1_2
00:00009D3C X sprite_caballero1_2_2
00:00009D5C X sprite_caballero1_3_2
00:00009D7C X sprite_caballero1_4_2
00:00009D9C X sprite_caballero2_1_1
00:00009DBC X sprite_caballero2_2_1
00:00009DDC X sprite_caballero2_3_1
00:00009DFC X sprite_caballero2_4_1
00:00009E1C X sprite_caballero2_1_2
00:00009E3C X sprite_caballero2_2_2
00:00009E5C X sprite_caballero2_3_2
00:00009E7C X sprite_caballero2_4_2
00:00009E9C X sprite_llama1_1
00:00009EBC X sprite_llama2_1
00:00009EDC X sprite_llama1_2
00:00009EFC X sprite_llama2_2
00:00009F1C X sprite_fantasma1_1
00:00009F3C X sprite_fantasma2_1
00:00009F5C X sprite_fantasma1_2
00:00009F7C X sprite_fantasma2_2
00:00009F9C X sprite_magia1_1
00:00009FBC X sprite_magia2_1
00:00009FDC X sprite_magia1_2
00:00009FFC X sprite_magia2_2
00:0000A01C X sprite_beholder1_1
00:0000A03C X sprite_beholder2_1
00:0000A05C X sprite_beholder3_1
00:0000A07C X sprite_beholder4_1
00:0000A09C X sprite_beholder1_2
00:0000A0BC X sprite_beholder2_2
00:0000A0DC X sprite_beholder3_2
00:0000A0FC X sprite_beholder4_2
00:0000A11C X sprite_vampiro1_1
00:0000A13C X sprite_vampiro2_1
00:0000A15C X sprite_vampiro1_2
00:0000A17C X sprite_vampiro2_2
00:0000A19C X sprite_manoizq1
00:0000A1BC X sprite_manoizq2
00:0000A1DC X sprite_manoizq3
00:0000A1FC X sprite_manoder1
00:0000A21C X sprite_manoder2
00:0000A23C X sprite_manoder3
00:0000A25C   habitacion_actual
00:0000A25D   habitacion_extras
00:0000A25E   habitaciones_juego
00:0000A25E X habitaciones_nivel0
00:0000A2CE X habitaciones_nivel1
00:0000A33E X habitaciones_nivel2
00:0000A3AE X habitaciones_nivel3
00:0000A41E X habitaciones_nivel4
00:0000A48E X habitaciones_nivel5
00:0000A4FE X habitaciones_nivel6
00:0000A56E   color_base
00:0000A571   color_bomba1
00:0000A574   color_bomba2
00:0000A577 X prota
00:0000A577   prota.posx
00:0000A578   prota.posy
00:0000A579   prota.escena
00:0000A57A X prota.velocidad
00:0000A57B X prota.boton2_pressed
00:0000A57C   prota.cadencia
00:0000A57D X prota.pm_aux1
00:0000A57E X prota.pm_aux2
00:0000A57F X prota.pm_aux3
00:0000A580 X prota.pm_aux4
00:0000A581 X prota.pm_aux5
00:0000A582 X prota.pm_aux6
00:0000A583 X prota.pm_aux7
00:0000A584 X prota.pm_aux8
00:0000A585 X prota.pm_aux9
00:0000A586 X prota.pm_aux10
00:0000A587   prota_nivel
00:0000A588   prota_vidas
00:0000A589   prota_reliquias
00:0000A58A   prota_pos_mapx
00:0000A58B   prota_pos_mapy
00:0000A58C   prota_energia
00:0000A58D   array_aux_vidas
00:0000A595   array_aux_reliquias
00:0000A59D   array_aux_energia
00:0000A5A4   ultimo_pos_array_aux_energia
00:0000A5A5   array_aux_mapa_limpiar
00:0000A5AC   elemento_pintar_mapa
00:0000A5AD   array_puerta_arriba
00:0000A5AD X array_puerta_arriba1
00:0000A5B1 X array_puerta_arriba2
00:0000A5B5 X array_puerta_arriba3
00:0000A5B9 X array_puerta_arriba4
00:0000A5BD X array_puerta_arriba5
00:0000A5C1   array_puerta_derecha
00:0000A5C1 X array_puerta_derecha1
00:0000A5C4 X array_puerta_derecha2
00:0000A5C7 X array_puerta_derecha3
00:0000A5CA X array_puerta_derecha4
00:0000A5CD X array_puerta_derecha5
00:0000A5D0 X array_puerta_derecha6
00:0000A5D3 X array_puerta_derecha7
00:0000A5D6   array_puerta_abajo
00:0000A5DA   array_puerta_izquierda
00:0000A5DA X array_puerta_izquierda1
00:0000A5DD X array_puerta_izquierda2
00:0000A5E0 X array_puerta_izquierda3
00:0000A5E3 X array_puerta_izquierda4
00:0000A5E6 X array_puerta_izquierda5
00:0000A5E9 X array_puerta_izquierda6
00:0000A5EC X array_puerta_izquierda7
00:0000A5EF   pos_ayudas
00:0000A5FF   array_ayudas
00:0000A5FF X array_oracionon
00:0000A601 X array_oracionon1
00:0000A603 X array_oracionoff
00:0000A605 X array_oracionoff1
00:0000A607 X array_cruzon
00:0000A609 X array_cruzon1
00:0000A60B X array_cruzoff
00:0000A60D X array_cruzoff1
00:0000A60F X array_aguaon
00:0000A611 X array_aguaon1
00:0000A613 X array_aguaoff
00:0000A615 X array_aguaoff1
00:0000A617 X array_armaduraon
00:0000A619 X array_armaduraon1
00:0000A61B X array_armaduraoff
00:0000A61D X array_armaduraoff1
00:0000A61F X array_plantaon
00:0000A621 X array_plantaon1
00:0000A623 X array_plantaoff
00:0000A625 X array_plantaoff1
00:0000A627 X array_extraon
00:0000A629 X array_extraon1
00:0000A62B X array_extraoff
00:0000A62D X array_extraoff1
00:0000A62F X array_ballestaon
00:0000A631 X array_ballestaon1
00:0000A633 X array_ballestaoff
00:0000A635 X array_ballestaoff1
00:0000A637   lista_ayudas
00:0000A637   ayuda_oracion
00:0000A63F   ayuda_cruz
00:0000A647   ayuda_aguabendita
00:0000A64F   ayuda_armadura
00:0000A657   ayuda_planta
00:0000A65F   ayuda_vidaextra
00:0000A667   ayuda_ballesta
00:0000A66F   array_sprites
00:0000A66F   array_sprites_pm
00:0000A677 X array_sprites_enem
00:0000A6EF X lista_enemigos
00:0000A77B X puntero_array_atrib_array_VRAM
00:0000A77D   tiles_patrones_nivel0
00:0000A932   tiles_color_nivel0
00:0000A979   tiles_mapa_nivel0
00:0000A9AE   tiles_patrones_nivel1
00:0000AB63   tiles_color_nivel1
00:0000ABAA   tiles_mapa_nivel1
00:0000ABDF   tiles_patrones_nivel2
00:0000AD94   tiles_color_nivel2
00:0000ADDB   tiles_mapa_nivel2
00:0000AE10   tiles_patrones_nivel3
00:0000AFC5   tiles_color_nivel3
00:0000B00C   tiles_mapa_nivel3
00:0000B041   tiles_patrones_nivel4
00:0000B1F6   tiles_color_nivel4
00:0000B23D   tiles_mapa_nivel4
00:0000B272   tiles_patrones_nivel5
00:0000B427   tiles_color_nivel5
00:0000B46E   tiles_mapa_nivel5
00:0000B4A3   tiles_patrones_nivel6
00:0000B658   tiles_color_nivel6
00:0000B69F   tiles_mapa_nivel6
00:0000B6D4   tiles_patrones_marcador
00:0000B820   tiles_color_marcador
00:0000B855   tiles_mapa_marcador
00:0000B8B7   END


 Output: t4.out
-------------------------------------------------

 Page: 00
  Org: 00008000  Size: *  Used: 00000000

    No output

 Output: t4.bin
-------------------------------------------------

 Page: 00
  Org: 00008000  Size: *  Used: 000038BE

   Address   Length Align   Label
   00008000   14526         START
