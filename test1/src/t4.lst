Sjasm Z80 Assembler v0.42c - www.xl2s.tk             [2021.08.27 - 18:14:22]

t4.asm
Errors: 1

       1   00:0000                      	OUTPUT	"t4.bin"
       2   00:8000                      	
       3   00:8000                      ;;=====================================================
       4   00:8000                      ;;DEFINICIÓN DE CONSTANTES
       5   00:8000                      ;;=====================================================	
       6   00:8000                      	include "constantes.asm"
       1.  00:8000                      ;;=====================================================
       2.  00:8000                      ;; FICHERO constantes.asm
       3.  00:8000                      ;;=====================================================
       4.  00:8000                      
       5.  00:8000                      ;;ETIQUETAS/CONSTANTES BIOS TECLADO
       6.  00:8000  (00:00D8)           GTTRIG		equ		#00D8	;Returns current trigger status
       7.  00:8000  (00:00D5)           GTSTCK		equ		#00D5	;Returns the joystick/cursors status
       8.  00:8000  (00:F3DB)           CLIKSW		equ		#F3DB	;deshabilita el sonido de clic cuando se pulsa una tecla
       9.  00:8000                      
      10.  00:8000                      ;;ETIQUETAS/CONSTANTES BIOS VDP
      11.  00:8000  (00:013E)           RDVDP		equ		#013E	;lee registro status VDP
      12.  00:8000  (00:0047)           WRTVDP		equ		#0047	;escribe registros del VDP
      13.  00:8000  (00:005C)           LDIRVM		equ		#005C	;RAM/ROM -> VRAM
      14.  00:8000  (00:0059)           LDIRMV		equ		#0059	;VRAM -> RAM
      15.  00:8000  (00:005F)           CHGMOD		equ		#005F	;cambia modo pantalla (screen mode)
      16.  00:8000  (00:0041)           DISSCR  	equ		#0041	;desactiva pantanlla
      17.  00:8000  (00:0044)           ENASCR  	equ		#0044	;activa pantalla
      18.  00:8000  (00:0062)           CHGCLR  	equ		#0062	;cambia color de pantalla (toca A y direcciones)
      19.  00:8000  (00:F3E9)           FORCLR		equ		#F3E9	;zona memoria color foreground
      20.  00:8000  (00:F3EA)           BAKCLR  	equ		#F3EA	;zona memoria color background
      21.  00:8000  (00:F3EB)           BDRCLR 		equ		#F3EB	;zona memoria bordercolor
      22.  00:8000  (00:00C3)           CLS			equ		#00C3	;limpia pantalla (necesita A=0)
      23.  00:8000                      
      24.  00:8000                      ;;ETIQUETAS/CONSTANTES REGISTROS VDP
      25.  00:8000  (00:F3DF)           RG0SAV		equ		#F3DF	;Mirror of VDP register 0 (Basic: VDP(0))
      26.  00:8000  (00:F3E0)           RG1SAV		equ		#F3E0	;Mirror of VDP register 1 (Basic: VDP(1))
      27.  00:8000  (00:F3E1)           RG2SAV		equ		#F3E1	;Mirror of VDP register 2 (Basic: VDP(2))
      28.  00:8000  (00:F3E2)           RG3SAV		equ		#F3E2	;Mirror of VDP register 3 (Basic: VDP(3))
      29.  00:8000  (00:F3E3)           RG4SAV		equ		#F3E3	;Mirror of VDP register 4 (Basic: VDP(4))
      30.  00:8000  (00:F3E4)           RG5SAV		equ		#F3E4	;Mirror of VDP register 5 (Basic: VDP(5))
      31.  00:8000  (00:F3E5)           RG6SAV		equ		#F3E5	;Mirror of VDP register 6 (Basic: VDP(6))
      32.  00:8000  (00:F3E6)           RG7SAV		equ		#F3E6	;Mirror of VDP register 7 (Basic: VDP(7))
      33.  00:8000  (00:F3E7)           STATFL		equ		#F3E7	;Mirror of VDP(8) status register (S#0)
      34.  00:8000                      
      35.  00:8000  (00:0099)           REGEST		equ		#0099	;registro de estado para escribir directamente en VRAM
      36.  00:8000  (00:0098)           REGESCVDP	equ		#0098	;registro donde escribir valor para VRAM
      37.  00:8000                      
      38.  00:8000                      ;;ETIQUETAS/CONSTANTES REGISTROS PSG (PARA JOYSTICK)
      39.  00:8000  (00:00A0)           PSG_A  equ  0a0h  ;reg address
      40.  00:8000  (00:00A1)           PSG_W  equ  0a1h  ;reg data WR
      41.  00:8000  (00:00A2)           PSG_R  equ  0a2h  ;reg data
      42.  00:8000                      
      43.  00:8000                      
      44.  00:8000                      ;;ETIQUETAS DE ZONAS DE MEMORIA DE LA VPD (MSX1)
      45.  00:8000  (00:0000)           CHRTBL		equ		#0000
      46.  00:8000  (00:1800)           TILMAP		equ		#1800
      47.  00:8000  (00:1B00)           SPRART		equ		#1B00
      48.  00:8000  (00:2000)           CLRTBL		equ		#2000
      49.  00:8000  (00:3800)           SPRTBL		equ		#3800
      50.  00:8000                      
      51.  00:8000                      
      52.  00:8000                      ;;ETIQUETAS ESTANDAR PARA DAR MÁS CLARIDAD AL CODIGO
      53.  00:8000  (00:0001)           SI			equ		1
      54.  00:8000  (00:0000)           NO			equ		0
      55.  00:8000  (00:0004)           LIMCADENCIA equ		4	;nº de veces que se ejecutará el disparo antes de ejecutar un disparo real (porque cuando se pulsa la tecl dispara 3 ó 4 veces de rápido que va)
      56.  00:8000                      ;hay que estudiar si 3 es un nº mejor
      57.  00:8000                      
      58.  00:8000                      
      59.  00:8000                      
      60.  00:8000                      ;;PALETA DE COLORES DEL MSX
      61.  00:8000  (00:0000)           COLTRASP	equ		0
      62.  00:8000  (00:0001)           COLNEGRO	equ		1
      63.  00:8000  (00:0002)           COLVERDE	equ		2
      64.  00:8000  (00:0003)           COLVERCLA	equ		3
      65.  00:8000  (00:0004)           COLAZULOSC	equ		4
      66.  00:8000  (00:0005)           COLAZULLA	equ		5
      67.  00:8000  (00:0006)           COLROJOOSC	equ		6
      68.  00:8000  (00:0007)           COLCYAN		equ		7
      69.  00:8000  (00:0008)           COLROJO		equ		8
      70.  00:8000  (00:0009)           COLROJOCLA	equ		9
      71.  00:8000  (00:000A)           COLAMAROSC	equ		10
      72.  00:8000  (00:000B)           COLAMARCLA	equ		11
      73.  00:8000  (00:000C)           COLVERDOSC	equ		12
      74.  00:8000  (00:000D)           COLMAGENTA	equ		13
      75.  00:8000  (00:000E)           COLGRIS		equ		14
      76.  00:8000  (00:000F)           COLBLANCO	equ		15
      77.  00:8000                      
      78.  00:8000                      
      79.  00:8000                      
      80.  00:8000                      ;;ETIQUETAS ESPECIFICAS PARA DAR MÁS CLARIDAD AL CODIGO (relacionadas con posiciones en mapa vdp)
      81.  00:8000  (00:02F8)           POSMAPLIN1  equ		#02F8
      82.  00:8000  (00:02D8)           POSMAPLIN2  equ		#02D8
      83.  00:8000  (00:02B8)           POSMAPLIN3  equ		#02B8
      84.  00:8000  (00:0298)           POSMAPLIN4  equ		#0298
      85.  00:8000  (00:0278)           POSMAPLIN5  equ		#0278
      86.  00:8000  (00:0258)           POSMAPLIN6  equ		#0258
      87.  00:8000  (00:0238)           POSMAPLIN7  equ		#0238
      88.  00:8000                      
      89.  00:8000  (00:000D)           POSCARAMAP	equ		#000D
      90.  00:8000  (00:0248)           POSVIDAS	equ		#0248
      91.  00:8000  (00:0011)           POSRELIMAP	equ		#0011
      92.  00:8000  (00:02C8)           POSRELIQ	equ		#02C8
      93.  00:8000  (00:0288)           POSENERG	equ		#0288
      94.  00:8000  (00:02B4)           POSNIVEL	equ		#02B4
      95.  00:8000  (00:0238)           POSMAPA		equ 	#0238
      96.  00:8000                      
      97.  00:8000  (00:01EE)           POSPUERABAJ equ		#01EE
      98.  00:8000  (00:008E)           POSPUERARRI equ		#008E
      99.  00:8000  (00:00FC)           POSPUERDERE equ		#00FC
     100.  00:8000  (00:00E1)           POSPUERIZQU equ		#00E1
     101.  00:8000                      
     102.  00:8000                      
     103.  00:8000                      ;;ETIQUETAS ESPECIFICAS PARA DAR MÁS CLARIDAD AL CODIGO (relacionadas con posiciones en en el banco de memoria)
     104.  00:8000  (00:0013)           TILEPROTAM  equ		19		;tile del prota para pintar en mapa
     105.  00:8000  (00:0009)           TILEGRISM	equ		9		;tile gris que representa vacio (por donde el prota va pasando)
     106.  00:8000  (00:0010)           TILEMAPROJO equ		16
     107.  00:8000  (00:000F)           TILEMAPAMAR equ		15
     108.  00:8000  (00:000E)           TILEMAPVERD equ		14
     109.  00:8000                      
     110.  00:8000                      
     111.  00:8000                      ;;ETIQUETAS ESPECIFICAS PARA DAR MÁS CLARIDAD AL CODIGO (generales)
     112.  00:8000  (00:0008)           NMAXVIDREL	equ		8		;el número máximo de vidas y de reliquias es de 8
     113.  00:8000  (00:0007)           NHABNIVEL	equ		7
     114.  00:8000  (00:00F8)           MAXENERGIA  equ		248
     115.  00:8000  (00:00D9)           TILEENERG8  equ		217
     116.  00:8000  (00:00BA)           TILEENERG7  equ		186
     117.  00:8000  (00:009B)           TILEENERG6  equ		155
     118.  00:8000  (00:007C)           TILEENERG5  equ		124
     119.  00:8000  (00:005D)           TILEENERG4  equ		93
     120.  00:8000  (00:003E)           TILEENERG3  equ		62
     121.  00:8000  (00:001F)           TILEENERG2  equ		31
     122.  00:8000  (00:0000)           TILENEGRO	equ		0
     123.  00:8000                      
     124.  00:8000                      ;limites
     125.  00:8000  (00:0000)           LIMPANTIZQ  equ		0
     126.  00:8000  (00:00FF)           LIMPANTDER  equ		255
     127.  00:8000  (00:0000)           LIMPANTARR  equ		0
     128.  00:8000  (00:0080)           LIMPANTABA  equ		128
     129.  00:8000                      
     130.  00:8000                      
     131.  00:8000                      ;matriz de 7x7 empieza en 0, y fila y x col, cuento desde esquina sup izq
     132.  00:8000  (00:0006)           BASEMAPY	equ		6
     133.  00:8000  (00:0003)           BASEMAPX	equ		3
     134.  00:8000                      
     135.  00:8000                      
     136.  00:8000                      
     137.  00:8000                      ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
     138.  00:8000                      ;; CONSTANTES PARA INTERRUPCIONES
     139.  00:8000                      ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
     140.  00:8000  (00:FD9A)           H.KEYI		equ     	#FD9A
     141.  00:8000  (00:FD9F)           H.TIMI	 	equ     	#FD9F
     142.  00:8000                      
     143.  00:8000                      
     144.  00:8000                      ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
     145.  00:8000                      ;; CONSTANTES PARA SONIDO 
     146.  00:8000                      ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
     147.  00:8000                      
     148.  00:8000  (F000)              	map		#f000
     149.  00:8000                      
     150.  00:8000                      ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;PT3 REPLAYER
     151.  00:8000  (00:F000)           PT3_SETUP:		#1	;set bit0 to 1, if you want to play without looping
     152.  00:8000                      					;bit7 is set each time, when loop point is passed
     153.  00:8000  (00:F001)           PT3_MODADDR:	#2
     154.  00:8000  (00:F003)           PT3_CrPsPtr:	#2
     155.  00:8000  (00:F005)           PT3_SAMPTRS:	#2
     156.  00:8000  (00:F007)           PT3_OrnPtrs:	#2
     157.  00:8000  (00:F009)           PT3_PDSP:		#2
     158.  00:8000  (00:F00B)           PT3_CSP:		#2
     159.  00:8000  (00:F00D)           PT3_PSP:		#2
     160.  00:8000  (00:F00F)           PT3_PrNote:		#1
     161.  00:8000  (00:F010)           PT3_PrSlide:	#2
     162.  00:8000  (00:F012)           PT3_AdInPtA:	#2
     163.  00:8000  (00:F014)           PT3_AdInPtB:	#2
     164.  00:8000  (00:F016)           PT3_AdInPtC:	#2
     165.  00:8000  (00:F018)           PT3_LPosPtr:	#2
     166.  00:8000  (00:F01A)           PT3_PatsPtr:	#2
     167.  00:8000  (00:F01C)           PT3_Delay:		#1
     168.  00:8000  (00:F01D)           PT3_AddToEn:	#1
     169.  00:8000  (00:F01E)           PT3_Env_Del:	#1
     170.  00:8000  (00:F01F)           PT3_ESldAdd:	#2
     171.  00:8000  (00:F021)           PT3_NTL3:		#2	; AND A / NOP (note table creator)
     172.  00:8000                      
     173.  00:8000  (00:F023)           VARS:			#0
     174.  00:8000                      
     175.  00:8000  (00:F023)           ChanA:			#29			;CHNPRM_Size
     176.  00:8000  (00:F040)           ChanB:			#29			;CHNPRM_Size
     177.  00:8000  (00:F05D)           ChanC:			#29			;CHNPRM_Size
     178.  00:8000                      
     179.  00:8000                      ;GlobalVars
     180.  00:8000  (00:F07A)           DelyCnt:		#1
     181.  00:8000  (00:F07B)           CurESld:		#2
     182.  00:8000  (00:F07D)           CurEDel:		#1
     183.  00:8000  (00:F07E)           Ns_Base_AddToNs:	#0
     184.  00:8000  (00:F07E)           Ns_Base:		#1
     185.  00:8000  (00:F07F)           AddToNs:		#1
     186.  00:8000                      
     187.  00:8000  (00:F080)           NT_:			#192	; Puntero a/tabla de frecuencias
     188.  00:8000                      
     189.  00:8000  (00:F140)           AYREGS:			#0
     190.  00:8000  (00:F140)           VT_:			#14
     191.  00:8000  (00:F14E)           EnvBase:		#2
     192.  00:8000  (00:F150)           VAR0END:		#0
     193.  00:8000                      
     194.  00:8000  (00:F150)           T1_:			#0		
     195.  00:8000  (00:F150)           T_NEW_1:		#0
     196.  00:8000  (00:F150)           T_OLD_1:		#24
     197.  00:8000  (00:F168)           T_OLD_2:		#24
     198.  00:8000  (00:F180)           T_NEW_3:		#0
     199.  00:8000  (00:F180)           T_OLD_3:		#2
     200.  00:8000  (00:F182)           T_OLD_0:		#0
     201.  00:8000  (00:F182)           T_NEW_0:		#24
     202.  00:8000  (00:F19A)           T_NEW_2:		#166
     203.  00:8000                      ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;PT3 REPLAYER END
     204.  00:8000                      
     205.  00:8000                      ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ayFX REPLAYER 
     206.  00:8000  (00:F240)           ayFX_MODE:		#1			; ayFX mode
     207.  00:8000  (00:F241)           ayFX_BANK:		#2			; Current ayFX Bank
     208.  00:8000  (00:F243)           ayFX_PRIORITY:	#1			; Current ayFX stream priotity
     209.  00:8000  (00:F244)           ayFX_POINTER:	#2			; Pointer to the current ayFX stream
     210.  00:8000  (00:F246)           ayFX_TONE:		#2			; Current tone of the ayFX stream
     211.  00:8000  (00:F248)           ayFX_NOISE:		#1			; Current noise of the ayFX stream
     212.  00:8000  (00:F249)           ayFX_VOLUME:	#1			; Current volume of the ayFX stream
     213.  00:8000  (00:F24A)           ayFX_CHANNEL:	#1			; PSG channel to play the ayFX stream
     214.  00:8000                      
     215.  00:8000                      	;IF (AYFXRELATIVE == 1 ) 
     216.  00:8000                      ;ayFX_VT:	ds	2			; ayFX relative volume table pointer
     217.  00:8000                      	;ENDIF
     218.  00:8000                      ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ayFX REPLAYER END
     219.  00:8000                      
     220.  00:8000                      
     221.  00:8000                      
       7   00:8000                      
       8   00:8000                      ;;=====================================================
       9   00:8000                      ;;DEFINICIÓN DE CABECERA DE ARCHIVO BIN
      10   00:8000                      ;;=====================================================		
      11   00:8000                      	include "cabecerabin.asm"
       1.  00:8000                      ;;=====================================================
       2.  00:8000                      ;; FICHERO cabecera.asm
       3.  00:8000                      ;;=====================================================
       4.  00:8000                      
       5.  00:8000                      ;;CABECERA FICHERO BIN
       6.  00:8000  FE                  	DB	#FE
       7.  00:8001  00 80               	DW	START
       8.  00:8003  D2 A7               	DW	END
       9.  00:8005  00 80               	DW	START
      10.  00:8007                      
      11.  00:8007                      ;;INICIO CÓDIGO PROGRAMA	
      12.  00:8007                      	ORG	#8000
      13.  00:8000                      	
      12   00:8000                      	
      13   00:8000                      START:	
      14   00:8000                      	;inicializa pantalla y entonrno
      15   00:8000  CD E4 80            	CALL	sub_preparapantalla			;screen 2,2 sin click al pulsar tecla y color 16,1,1
      16   00:8003                      	
      17   00:8003                      	;inicializa variables para parametrizar funciones y que lo que se muestre sea variable (nº vidas, mapa, puertas, pantalla, etc...)
      18   00:8003  CD 33 80            	CALL	inicializa_variables_pruebas
      19   00:8006                      	
      20   00:8006                      	;inicializa los niveles por partida
      21   00:8006  CD 56 80            	CALL	inicializa_niveles			;no es necesario parametrizarlo según el nivel del usuario ya que se cargan todos
      22   00:8009                      	
      23   00:8009                      	;pinta la pantalla (la primera o algunas especiales se pintan completamente)
      24   00:8009  CD 05 81            	CALL	pinta_pantalla_completa 
      25   00:800C                      	
      26   00:800C                      	;carga sprites en memoria (SE HA RETRASADO HASTA PARAMETRIZAR LA CARGA DE PANTALLAS)
      27   00:800C  CD 89 83            	CALL 	carga_patrones_sprites_nivel
      28   00:800F                      	
      29   00:800F                      	;funciones que modificarian el marcador si se produce un evento cuando toque y cuando se pinta la pantalla ya se mira
      30   00:800F                      	;una variable para ver si el array hay que actualizarlo en pantalla o no
      31   00:800F  CD 5E 81            	CALL	pinta_vidas
      32   00:8012  CD 6D 81            	CALL 	pinta_reliquias
      33   00:8015  CD 7C 81            	CALL	pinta_nivel
      34   00:8018  CD FD 81            	CALL	borra_mapa
      35   00:801B  CD 8B 82            	CALL	pinta_puertas
      36   00:801E                      
      37   00:801E  3E 13               	LD		 A, TILEPROTAM
      38   00:8020  32 18 A4            	LD		(elemento_pintar_mapa), A
      39   00:8023  CD FD 82            	CALL	posiciona_en_mapa		;se le pasa elemento_pintar_mapa (tile del prota) está el prota y prota.poxx y posy
      40   00:8026                      	
      41   00:8026                      	;incializacion de replayer con interrupciones
      42   00:8026                      ;	CALL	inicializa_replayer_efectos_interrupciones
      43   00:8026                      	
      44   00:8026                      loop_principal:
      45   00:8026  76                  	HALT							;espera VBLANK y sincroniza
      46   00:8027                      	
      47   00:8027  CD A0 83            	CALL	render_sprites			;actualiza array de sprites y los pinta en pantalla
      48   00:802A                      	
      49   00:802A  CD EE 81            	CALL	pinta_energia			;pinta la energia en pantalla
      50   00:802D                      
      51   00:802D  CD E3 83            	CALL	check_player			;MIRA EL CONTROL Y APLICA LA LOGICA DE MOVIMIENTO DEL PROTAGONISTA
      52   00:8030                      	
      53   00:8030  C3 26 80            	JP		loop_principal
      54   00:8033                      fin_programa_principal:
      55   00:8033                      	;RET
      56   00:8033                      
      57   00:8033                      
      58   00:8033                      
      59   00:8033                      
      60   00:8033                      
      61   00:8033                      ;;*******************************************************************
      62   00:8033                      ; sólo para hacer pruebas y pintar la parte de las vidas y demás
      63   00:8033                      inicializa_variables_pruebas:
      64   00:8033  3E 04               	LD		 A, 4
      65   00:8035  32 F4 A3            	LD		(prota_vidas),A
      66   00:8038                      
      67   00:8038  3E 04               	LD		 A, 4
      68   00:803A  32 F5 A3            	LD		(prota_reliquias), A
      69   00:803D                      
      70   00:803D  3E 64               	LD		 A, 100
      71   00:803F  32 F8 A3            	LD		(prota_energia), A
      72   00:8042                      
      73   00:8042                      	;ubico al prota dentro del nivel para obtener luego las habitaciones y enemigos que aparecerán
      74   00:8042                      	;será igual la posición inicial en todos los niveles
      75   00:8042                      	
      76   00:8042  3E 04               	LD		 A, 4				;los niveles (matrices) son 7 del 0 al 6
      77   00:8044  32 F3 A3            	LD		(prota_nivel), A	;nivel empieza en 0 para usar las posiciones ascii
      78   00:8047                      
      79   00:8047  3E 06               	LD		 A, 6				;los subniveles (filas) son 7 del 0 al 6
      80   00:8049  32 F7 A3            	LD		(prota_pos_mapy), A	;pos Y dentro del nivel (se empieza en 0)
      81   00:804C                      
      82   00:804C  3E 02               	LD		 A, 2				;columnas 7: del 0 al 6
      83   00:804E  32 F6 A3            	LD		(prota_pos_mapx), A	;pos X dentro del nivel (se empieza en 0)
      84   00:8051                      	
      85   00:8051  AF                  	XOR		 A
      86   00:8052  32 E8 A3            	LD		(prota.cadencia), A
      87   00:8055                      fin_inicializa_variables_pruebas:
      88   00:8055  C9                  	RET
      89   00:8056                      ;;************************************************************************
      90   00:8056                      
      91   00:8056                      
      92   00:8056                      
      93   00:8056                      
      94   00:8056                      
      95   00:8056                      
      96   00:8056                      
      97   00:8056                      
      98   00:8056                      
      99   00:8056                      ;;=====================================================
     100   00:8056                      ;;DEFINICIÓN DE SUBRUTINAS
     101   00:8056                      ;;=====================================================
     102   00:8056                      	include "subrutinas.asm"
       1.  00:8056                      ;;=====================================================
       2.  00:8056                      ;;DEFINICIÓN DE SUBRUTINAS
       3.  00:8056                      ;;=====================================================	
       4.  00:8056                      
       5.  00:8056                      
       6.  00:8056                      ;;=====================================================
       7.  00:8056                      ;;INICIALIZA_NIVELES
       8.  00:8056                      ;;=====================================================	
       9.  00:8056                      ; función: 	copia la plantilla de niveles (habitaciones_plantilla) en los niveles de trabajo para el juego (habitaciones_juego)
      10.  00:8056                      ; entrada: 	habitaciones_plantilla
      11.  00:8056                      ; salida: 	habitaciones_juego
      12.  00:8056                      ; toca: 	A
      13.  00:8056                      inicializa_niveles:
      14.  00:8056  D9                  	EXX
      15.  00:8057                      	
      16.  00:8057  AF                  	XOR		 A
      17.  00:8058  06 31               	LD		 B, 49				;7 filas por 7 niveles menos el primero que lo hago diera del buble porque se suma 14 y no 16
      18.  00:805A  21 CA A0            	LD		HL, habitaciones_juego;tambíen puntero al primer nivel
      19.  00:805D  11 0E 00            	LD		DE,14
      20.  00:8060  19                  	ADD		HL,DE
      21.  00:8061  77                  	LD		(HL),A
      22.  00:8062  11 10 00            	LD		DE,16				;desde las col 15 de una fila a la siguiente
      23.  00:8065                      .bucle_borra_hab:
      24.  00:8065  19                  	ADD		HL,DE
      25.  00:8066  77                  	LD		(HL),A
      26.  00:8067  10 FC               	DJNZ	.bucle_borra_hab
      27.  00:8069                      	
      28.  00:8069  D9                  	EXX
      29.  00:806A                      fin_iniciliza_niveles:
      30.  00:806A  C9                  	RET
      31.  00:806B                      
      32.  00:806B                      
      33.  00:806B                      ;;=====================================================
      34.  00:806B                      ;;ACTUALIZA_MARCADOR_VIDAS
      35.  00:806B                      ;;=====================================================	
      36.  00:806B                      ; función:  actualiza el buffer de vidas
      37.  00:806B                      ; entrada: 	prota_vidas
      38.  00:806B                      ; salida: 	array_aux_vidas
      39.  00:806B                      ; toca:		A,B,HL
      40.  00:806B                      actualiza_marcador_vidas:
      41.  00:806B                      	;para no andar restando pongo todos los huecos a negro y luego en otro bucle las caras
      42.  00:806B                      	;1-pinto todo en blanco
      43.  00:806B  21 F9 A3            	LD		HL,array_aux_vidas
      44.  00:806E  06 08               	LD		 B,NMAXVIDREL
      45.  00:8070                      loop_marcador_caras_negro:	;asignar espacios en negro
      46.  00:8070  36 00               	LD		(HL),0			;0 posición mapa tiles para nada (es transparente pero el fondo es negro)
      47.  00:8072  23                  	INC		HL
      48.  00:8073  10 FB               	DJNZ	loop_marcador_caras_negro
      49.  00:8075                      fin_loop_marcador_caras_negro:
      50.  00:8075                      	;2-pinto las caras según el n de vidas
      51.  00:8075  3A F4 A3            	LD		 A, (prota_vidas)
      52.  00:8078  B7                  	OR		 A
      53.  00:8079  C8                  	RET 	 Z
      54.  00:807A  47                  	LD		 B, A
      55.  00:807B  21 F9 A3            	LD		HL, array_aux_vidas
      56.  00:807E                      loop_marcador_caras: ;asignar caras
      57.  00:807E  36 0D               	LD		(HL), POSCARAMAP	;13 posición mapa tiles para cara
      58.  00:8080  23                  	INC		HL
      59.  00:8081  10 FB               	DJNZ	loop_marcador_caras
      60.  00:8083                      fin_loop_marcador_caras:
      61.  00:8083                      
      62.  00:8083                      fin_actualiza_marcador_vidas:
      63.  00:8083  C9                  	RET
      64.  00:8084                      
      65.  00:8084                      
      66.  00:8084                      ;;=====================================================
      67.  00:8084                      ;;ACTUALIZA_BUFFER_RELIQUIAS
      68.  00:8084                      ;;=====================================================	
      69.  00:8084                      ; función: 	actualiza buffer de reliquias
      70.  00:8084                      ; entrada: 	prota_reliquias
      71.  00:8084                      ; salida: 	array_aux_reliquias
      72.  00:8084                      ; toca:		A,B,HL
      73.  00:8084                      actualiza_buffer_reliquias:	
      74.  00:8084                      	;para no andar restando pongo todos los huecos a negro y luego en otro bucle las reliquias
      75.  00:8084                      	;1-pinto todo en blanco
      76.  00:8084  21 01 A4            	LD		HL, array_aux_reliquias
      77.  00:8087  06 08               	LD		 B, NMAXVIDREL
      78.  00:8089  AF                  	XOR		 A
      79.  00:808A                      loop_buffer_reliquias_negro:	;asignar espacios en negro
      80.  00:808A  77                  	LD		(HL), A			;0 posición mapa tiles para nada (es transparente pero el fondo es negro)
      81.  00:808B  23                  	INC		HL
      82.  00:808C  10 FC               	DJNZ	loop_buffer_reliquias_negro
      83.  00:808E                      
      84.  00:808E                      	;2-pinto las cruces según el n de reliquias
      85.  00:808E  21 01 A4            	LD		HL, array_aux_reliquias
      86.  00:8091  3A F5 A3            	LD		 A, (prota_reliquias)
      87.  00:8094  B7                  	OR		 A
      88.  00:8095  C8                  	RET		 Z
      89.  00:8096  47                  	LD		 B, A
      90.  00:8097                      loop_buffer_reliquias: ;asignar reliquias
      91.  00:8097  36 11               	LD		(HL), POSRELIMAP	;17 posición mapa tiles para reliquia
      92.  00:8099  23                  	INC		HL
      93.  00:809A  10 FB               	DJNZ	loop_buffer_reliquias
      94.  00:809C                      fin_actualiza_buffer_reliquias:
      95.  00:809C  C9                  	RET
      96.  00:809D                      
      97.  00:809D                      
      98.  00:809D                      
      99.  00:809D                      ;;=====================================================
     100.  00:809D                      ;;LOCALIZA_INFO_HABITACION
     101.  00:809D                      ;;=====================================================	
     102.  00:809D                      ; función: 	busca las puertas que hay que pintar egún la posición del usuario y las pone en habitacion_actual
     103.  00:809D                      ; entrada: 	prota.pos_mapy, prota.pos_mapx, prota_nivel habitaciones_juego
     104.  00:809D                      ; salida: 	habitacion_actual
     105.  00:809D                      ; toca:		todo
     106.  00:809D                      ;ejemplo: nivel 4, posy 5 y posx 3
     107.  00:809D                      ;3 + 5 x 8 + 4 x 49
     108.  00:809D                      localiza_info_habitacion:
     109.  00:809D                      ;primera posición: me coloco en la columna correcta
     110.  00:809D  21 CA A0            	LD		HL, habitaciones_juego
     111.  00:80A0                      .situo_columna:	
     112.  00:80A0  3A F6 A3            	LD		 A, (prota_pos_mapx)
     113.  00:80A3  CB 27               	SLA		 A				;multiplico por dos ya que cada habitación va de dos en dos bytes
     114.  00:80A5  06 00               	LD		 B, 0
     115.  00:80A7  4F                  	LD		 C, A
     116.  00:80A8                      
     117.  00:80A8  09                  	ADD 	HL, BC			;sumo a la posición 0 la columnax2 en la que situarme
     118.  00:80A9                      	
     119.  00:80A9                      .situo_fila:
     120.  00:80A9  3A F7 A3            	LD		A, (prota_pos_mapy)
     121.  00:80AC  B7                  	OR	 	A
     122.  00:80AD  CA BA 80            	JP		Z, .situo_nivel	;si la fila es 0 no es necesario seguir operando en fila
     123.  00:80B0                      	
     124.  00:80B0  47                  	LD		B, A
     125.  00:80B1  AF                  	XOR		A
     126.  00:80B2                      .loop_suma_fila:
     127.  00:80B2  C6 10               	ADD		16				;cada fila tiene 16 bytes
     128.  00:80B4  10 FC               	DJNZ	.loop_suma_fila
     129.  00:80B6                      	
     130.  00:80B6  06 00               	LD		 B, 0
     131.  00:80B8  4F                  	LD		 C, A
     132.  00:80B9                      
     133.  00:80B9  09                  	ADD 	HL, BC			;sumo a la columna 16 x filas para situarme en la fila correcta
     134.  00:80BA                      
     135.  00:80BA                      .situo_nivel:
     136.  00:80BA  3A F3 A3            	LD		 A, (prota_nivel)
     137.  00:80BD  B7                  	OR	 	 A
     138.  00:80BE  CA CE 80            	JP		 Z, .actualiza_valiable_habitacion	;si el nivel es 0 al pasar por las anterirores ya estoy situado actualizo la variable y termino
     139.  00:80C1                      	
     140.  00:80C1  E5                  	PUSH	HL				;guardo el resultado intermedio
     141.  00:80C2                      	
     142.  00:80C2  47                  	LD		 B, A			;preparo la varible del bucle
     143.  00:80C3  11 70 00            	LD		DE, 112			;112 = 16x42 son los bytes de cada matriz-nivel
     144.  00:80C6  21 00 00            	LD		HL, 0
     145.  00:80C9                      .loop_suma_nivel:
     146.  00:80C9  19                  	ADD		HL,DE
     147.  00:80CA  10 FD               	DJNZ	.loop_suma_nivel
     148.  00:80CC                      	
     149.  00:80CC  D1                  	POP		DE				;devuelvo el resultado intermedio en DE que ya no lo necesito
     150.  00:80CD                      	
     151.  00:80CD  19                  	ADD		HL,DE			;sumo el resultdo del nivel al resultado intermedio anterior
     152.  00:80CE                      
     153.  00:80CE                      .actualiza_valiable_habitacion
     154.  00:80CE  7E                  	LD		 A, (HL)
     155.  00:80CF  32 C8 A0            	LD		(habitacion_actual), A
     156.  00:80D2                      fin_localiza_info_habitacion:
     157.  00:80D2  C9                  	RET
     158.  00:80D3                      
     159.  00:80D3                      
     160.  00:80D3                      
     161.  00:80D3                      
     103   00:80D3                      	
     104   00:80D3                      	include "subr_pintapantalla.asm"
       1.  00:80D3                      ;;=====================================================
       2.  00:80D3                      ;;DEFINICIÓN DE SUBRUTINAS
       3.  00:80D3                      ;;=====================================================	
       4.  00:80D3                      ;relacionadas con pintado en pantalla (y no sprites)
       5.  00:80D3                      
       6.  00:80D3                      
       7.  00:80D3                      ;;=====================================================
       8.  00:80D3                      ;;COLOR_PANTALLA
       9.  00:80D3                      ;;=====================================================	
      10.  00:80D3                      ; función: 	el equivalente en basic a color 15,1,1
      11.  00:80D3                      ; entrada: 	HL	que apunta a un array de bytes con 3 bytes FORCLR, BAKCLR y BDRCLR
      12.  00:80D3                      ; salida: 	-
      13.  00:80D3                      ; toca: 	todo
      14.  00:80D3                      color_pantalla:
      15.  00:80D3  7E                  	LD		 A, (HL)			;FORCLR 
      16.  00:80D4  32 E9 F3            	LD 		(FORCLR),A
      17.  00:80D7  23                  	INC		HL
      18.  00:80D8                      	
      19.  00:80D8  7E                  	LD		 A, (HL)			;BAKCLR
      20.  00:80D9  32 EA F3            	LD 		(BAKCLR),A
      21.  00:80DC  23                  	INC		HL
      22.  00:80DD                      	
      23.  00:80DD  7E                  	LD		 A, (HL)
      24.  00:80DE  32 EB F3            	LD 		(BDRCLR),A			;BDRCLR
      25.  00:80E1  C3 62 00            	JP		CHGCLR 
      26.  00:80E4                      fin_color_pantalla:
      27.  00:80E4                      	;RET
      28.  00:80E4                      
      29.  00:80E4                      
      30.  00:80E4                      ;;=====================================================
      31.  00:80E4                      ;;PREPARAPANTALLA
      32.  00:80E4                      ;;=====================================================	
      33.  00:80E4                      ; función: elimina clic cuando se pulsa tecla, cls, screen 2,2
      34.  00:80E4                      ; entrada: -
      35.  00:80E4                      ; salida: -
      36.  00:80E4                      ; toca: si no son todos los regristros, casi todos
      37.  00:80E4                      sub_preparapantalla:
      38.  00:80E4                      	;toca A y Z
      39.  00:80E4                      elimina_clic;
      40.  00:80E4  AF                  	XOR		 A
      41.  00:80E5  32 DB F3            	LD		(CLIKSW),A
      42.  00:80E8                      fin_elimina_clic:
      43.  00:80E8                      
      44.  00:80E8                      	;toca A
      45.  00:80E8                      limpia_pantalla:
      46.  00:80E8  AF                  	XOR		 A
      47.  00:80E9  CD C3 00            	CALL 	CLS
      48.  00:80EC                      fin_limpia_pantalla:
      49.  00:80EC                      
      50.  00:80EC                      	;toca A y direcciones #F3E9/#F3EA/#F3EB, poner en HL array con 3 valores
      51.  00:80EC  21 DA A3            	LD		HL, color_base
      52.  00:80EF  CD D3 80            	CALL	color_pantalla
      53.  00:80F2                      	
      54.  00:80F2                      	;cambiamos a SCREEN 2,2 del BASIC
      55.  00:80F2                      	;toca A
      56.  00:80F2                      screen2:
      57.  00:80F2  3E 02               	LD		 A, 2
      58.  00:80F4  CD 5F 00            	CALL	CHGMOD			;selecciona screen 2
      59.  00:80F7                      sprites_16_16:
      60.  00:80F7  3A E0 F3            	LD		 A, (RG1SAV)
      61.  00:80FA  F6 02               	OR		00000010b		;fuerza sprites de 16x16
      62.  00:80FC  32 E0 F3            	LD		(RG1SAV), A		;no lo guardamos en la copia de variables del sistema
      63.  00:80FF  47                  	LD		 B, A
      64.  00:8100  0E 01               	LD		 C, 1
      65.  00:8102  C3 47 00            	JP		WRTVDP			;opción alternativa de escribir las tres lineas siguientes
      66.  00:8105                      	;~ CALL	WRTVDP			;lo escribe en el registro 1 del VDP
      67.  00:8105                      	;~ RET
      68.  00:8105                      fin_sub_preparapantalla:
      69.  00:8105                      	
      70.  00:8105                      
      71.  00:8105                      ;;=====================================================
      72.  00:8105                      ;;PINTA_PANTALLA_COMPLETA
      73.  00:8105                      ;;=====================================================	
      74.  00:8105                      ; función: pinta el escenario, las 3 partes
      75.  00:8105                      ; entrada: -
      76.  00:8105                      ; salida: -
      77.  00:8105                      ; toca: si no son todos los regristros, casi todos
      78.  00:8105                      pinta_pantalla_completa:
      79.  00:8105  CD 0C 81            	CALL 	pinta_parte_superior_pantalla
      80.  00:8108                      	
      81.  00:8108  CD 43 81            	CALL 	pinta_parte_inferior_pantalla	
      82.  00:810B                      fin_pinta_pantalla_completa:
      83.  00:810B  C9                  	RET
      84.  00:810C                      
      85.  00:810C                      
      86.  00:810C                      ;;=====================================================
      87.  00:810C                      ;;PINTA_PARTE_SUPERIOR_PANTALLA
      88.  00:810C                      ;;=====================================================	
      89.  00:810C                      ; función: pinta el escenario, las 2 partes superiores y actualiza puertas
      90.  00:810C                      ; entrada: -
      91.  00:810C                      ; salida: -
      92.  00:810C                      ; toca: si no son todos los regristros, casi todos
      93.  00:810C                      pinta_parte_superior_pantalla:
      94.  00:810C                      
      95.  00:810C                      ;************** preguntar cómo parametrizar esto **********************************************
      96.  00:810C                      
      97.  00:810C                      	;cangando banco 1
      98.  00:810C                      	;cargamos los patrones
      99.  00:810C  21 69 A5            	LD		HL, tiles_patrones_pantalla11
     100.  00:810F  11 00 00            	LD		DE, CHRTBL
     101.  00:8112  CD A8 95            	CALL	depack_VRAM
     102.  00:8115                      	;cargamos mapa de pantalla
     103.  00:8115  21 A4 A5            	LD		HL, tiles_mapa_pantalla11
     104.  00:8118  11 00 18            	LD		DE, TILMAP
     105.  00:811B  CD A8 95            	CALL	depack_VRAM
     106.  00:811E                      	;cargamos los colores de los patrones
     107.  00:811E  21 8C A5            	LD		HL, tiles_color_pantalla11
     108.  00:8121  11 00 20            	LD		DE, CLRTBL
     109.  00:8124  CD A8 95            	CALL	depack_VRAM
     110.  00:8127                      	
     111.  00:8127                      	;cangando banco 2
     112.  00:8127                      	;cargamos los patrones
     113.  00:8127  21 69 A5            	LD		HL, tiles_patrones_pantalla12
     114.  00:812A  11 00 08            	LD		DE, CHRTBL + #0800
     115.  00:812D  CD A8 95            	CALL	depack_VRAM	
     116.  00:8130                      	;cargamos mapa de pantalla
     117.  00:8130  21 BE A5            	LD		HL, tiles_mapa_pantalla12
     118.  00:8133  11 00 19            	LD		DE, TILMAP + #0100
     119.  00:8136  CD A8 95            	CALL	depack_VRAM
     120.  00:8139                      	;cargamos los colores de los patrones
     121.  00:8139  21 8C A5            	LD		HL, tiles_color_pantalla12
     122.  00:813C  11 00 28            	LD		DE, CLRTBL + #0800
     123.  00:813F                      	;JP		depack_VRAM
     124.  00:813F  CD A8 95            	CALL	depack_VRAM
     125.  00:8142                      fin_pinta_parte_superior_pantalla:
     126.  00:8142  C9                  	RET
     127.  00:8143                      
     128.  00:8143                      
     129.  00:8143                      ;;=====================================================
     130.  00:8143                      ;;PINTA_PARTE_INFERIOR_PANTALLA
     131.  00:8143                      ;;=====================================================	
     132.  00:8143                      ; función: pinta la parte inferior del escenario que es común
     133.  00:8143                      ; entrada: -
     134.  00:8143                      ; salida: -
     135.  00:8143                      ; toca: si no son todos los regristros, casi todos
     136.  00:8143                      pinta_parte_inferior_pantalla:
     137.  00:8143                      	;cangando banco 3
     138.  00:8143                      	;cargamos los patrones
     139.  00:8143  21 E8 A5            	LD		HL,tiles_patrones_pantalla3
     140.  00:8146  11 00 10            	LD		DE,CHRTBL + #1000
     141.  00:8149  CD A8 95            	CALL	depack_VRAM	
     142.  00:814C                      	;cargamos mapa de pantalla
     143.  00:814C  21 63 A7            	LD		HL,tiles_mapa_pantalla3
     144.  00:814F  11 00 1A            	LD		DE,TILMAP + #0200
     145.  00:8152  CD A8 95            	CALL	depack_VRAM
     146.  00:8155                      	;cargamos los colores de los patrones
     147.  00:8155  21 2E A7            	LD		HL,tiles_color_pantalla3
     148.  00:8158  11 00 30            	LD		DE,CLRTBL + #1000
     149.  00:815B  C3 A8 95            	JP		depack_VRAM
     150.  00:815E                      	;~ CALL	depack_VRAM
     151.  00:815E                      fin_pinta_parte_inferior_pantalla:
     152.  00:815E                      	;~ RET
     153.  00:815E                      
     154.  00:815E                      
     155.  00:815E                      
     156.  00:815E                      ;;=====================================================
     157.  00:815E                      ;;PINTA_VIDAS
     158.  00:815E                      ;;=====================================================	
     159.  00:815E                      ; función: 	actualiza el mapa de tiles para que en el próximo refresco se pinten y actualiza_vidas
     160.  00:815E                      ; entrada: 	array_aux_vidas
     161.  00:815E                      ; salida: 	actualiza_vidas_sn
     162.  00:815E                      ; toca:		todo
     163.  00:815E                      pinta_vidas:
     164.  00:815E  CD 6B 80            	CALL	actualiza_marcador_vidas
     165.  00:8161                      	
     166.  00:8161  21 F9 A3            	LD		HL, array_aux_vidas
     167.  00:8164  11 48 1A            	LD		DE, TILMAP + POSVIDAS 	;inicio posición en el mapa de tiles de las vidas
     168.  00:8167  01 08 00            	LD		BC, NMAXVIDREL			;hay 8 posiciones para vidas/reliquias o espacios en negro si no tiene 8 vidas/reliquias
     169.  00:816A  C3 5C 00            	JP		LDIRVM
     170.  00:816D                      fin_pinta_vidas:
     171.  00:816D                      	;RET
     172.  00:816D                      	
     173.  00:816D                      	
     174.  00:816D                      
     175.  00:816D                      ;;=====================================================
     176.  00:816D                      ;;PINTA_RELIQUIAS
     177.  00:816D                      ;;=====================================================	
     178.  00:816D                      ; función: 	actualiza el mapa de tiles para que en el próximo refresco se pinten y actualiza_reliquias
     179.  00:816D                      ; entrada: 	array_aux_reliquias
     180.  00:816D                      ; salida: 	-
     181.  00:816D                      ; toca:		todo
     182.  00:816D                      pinta_reliquias:
     183.  00:816D  CD 84 80            	CALL	actualiza_buffer_reliquias
     184.  00:8170                      	
     185.  00:8170  21 01 A4            	LD		HL, array_aux_reliquias
     186.  00:8173  11 C8 1A            	LD		DE, TILMAP + POSRELIQ 	;inicio posición en el mapa de tiles de las vidas
     187.  00:8176  01 08 00            	LD		BC, NMAXVIDREL			;hay 8 posiciones para vidas/reliquias o espacios en negro si no tiene 8 vidas/reliquias
     188.  00:8179  C3 5C 00            	JP		LDIRVM
     189.  00:817C                      fin_pinta_reliquias:
     190.  00:817C                      	;RET
     191.  00:817C                      	
     192.  00:817C                      
     193.  00:817C                      
     194.  00:817C                      	
     195.  00:817C                      ;;=====================================================
     196.  00:817C                      ;;PINTA_NIVEL
     197.  00:817C                      ;;=====================================================	
     198.  00:817C                      ; función: 	actualiza el nivel en la parte de puntuación
     199.  00:817C                      ; entrada: 	prota_nivel
     200.  00:817C                      ; salida: 	-
     201.  00:817C                      ; toca:		HL,DE,BC
     202.  00:817C                      pinta_nivel:	
     203.  00:817C                      	;forma más avanzada sin llamada a la bios
     204.  00:817C  01 B4 1A            	LD		BC,TILMAP + POSNIVEL ;posición en el mapa de tiles del tile de nivel
     205.  00:817F  3A F3 A3            	LD		 A, (prota_nivel)	;seleccionando la pos del banco de tiles a poner en el mapa
     206.  00:8182  C6 30               	ADD		'0'	
     207.  00:8184  57                  	LD		 D, A
     208.  00:8185                      	
     209.  00:8185  CD 89 81            	CALL	pinta_tile_suelto	;nota ... un call+ret se debe poder sustiruir por un jp
     210.  00:8188                      fin_pinta_nivel:
     211.  00:8188  C9                  	RET
     212.  00:8189                      
     213.  00:8189                      
     214.  00:8189                      
     215.  00:8189                      ;;=====================================================
     216.  00:8189                      ;;PINTA_TILE_SUELTO
     217.  00:8189                      ;;=====================================================	
     218.  00:8189                      ; función: 	pinta al tile que digamos en D, en la posición BC
     219.  00:8189                      ; entrada: 	BC (posición a pintar en el mapa),D (qué se va a pintar el esa posición)
     220.  00:8189                      ; salida: 	-
     221.  00:8189                      ; toca:		-
     222.  00:8189                      pinta_tile_suelto:
     223.  00:8189  DB 99               	IN		 A,(REGEST)		;leer registro de estado (recomendado)
     224.  00:818B  79                  	LD		 A,C			;primero byte bajo	
     225.  00:818C  D3 99               	OUT		(REGEST),A
     226.  00:818E  78                  	LD		 A,B			;después byte alto  ********************** preguntar a Fernando cómo que byte bajo es B
     227.  00:818F  F6 40               	OR		1000000b		;+64
     228.  00:8191  D3 99               	OUT		(REGEST),A
     229.  00:8193                      	
     230.  00:8193  7A                  	LD		A,D
     231.  00:8194  D3 98               	OUT		(REGESCVDP),A	;escribe A en VRAM en la posición indicada por los dos OUT anteriores
     232.  00:8196                      fin_pinta_tile_suelto:
     233.  00:8196  C9                  	RET
     234.  00:8197                      
     235.  00:8197                      
     236.  00:8197                      
     237.  00:8197                      
     238.  00:8197                      
     239.  00:8197                      ;;=====================================================
     240.  00:8197                      ;;MIRA_PINTA ENERGIA
     241.  00:8197                      ;;=====================================================	
     242.  00:8197                      ; función: 	actualiza el nivel de energia en la parte de puntuación
     243.  00:8197                      ; nota:		el cuadrado más bajo de ejergía siempre estará pintado... se obviará
     244.  00:8197                      ; entrada: 	prota.energia, array_aux_energia
     245.  00:8197                      ; salida: 	-
     246.  00:8197                      ; toca:		ninguno porque usa EXX
     247.  00:8197                      
     248.  00:8197                      ; nota importante... lo mismo interesa hacer esto con un array para comparar y un bucle
     249.  00:8197                      
     250.  00:8197                      
     251.  00:8197                      mira_pinta_energia:
     252.  00:8197  D9                  	EXX							;por si acaso guardo el contenido de HL (si veo que no es necesario guardarlo lo quito) uso esto en vez de push por el nº ciclos
     253.  00:8198                      	
     254.  00:8198  3A F8 A3            	LD		 A,(prota_energia) 	;para las comparaciones A variable (actual) y B fijo (limites)
     255.  00:819B                      
     256.  00:819B  0E 00               	LD		 C,TILENEGRO		;para agilizar asignaciones en vez de un valor cte uso otro registro
     257.  00:819D                      pinta_ener:
     258.  00:819D                      pinta_ener_tile_8:
     259.  00:819D  21 10 A4            	LD		HL,ultimo_pos_array_aux_energia	;coloco puntero en array e iré decrementando
     260.  00:81A0  06 D9               	LD		 B,TILEENERG8
     261.  00:81A2  B8                  	CP		 B
     262.  00:81A3  38 04               	JR		C,pinta_ener_tile_8_negro
     263.  00:81A5  36 0E               	LD		(HL),TILEMAPVERD
     264.  00:81A7  18 01               	JR		pinta_ener_tile_7
     265.  00:81A9                      pinta_ener_tile_8_negro:
     266.  00:81A9  71                  	LD		(HL),C
     267.  00:81AA                      
     268.  00:81AA                      pinta_ener_tile_7:
     269.  00:81AA  2B                  	DEC		HL
     270.  00:81AB  06 BA               	LD		 B,TILEENERG7
     271.  00:81AD  B8                  	CP		 B
     272.  00:81AE  38 04               	JR		C,pinta_ener_tile_7_negro
     273.  00:81B0  36 0E               	LD		(HL),TILEMAPVERD
     274.  00:81B2  18 01               	JR		pinta_ener_tile_6
     275.  00:81B4                      pinta_ener_tile_7_negro:
     276.  00:81B4  71                  	LD		(HL),C
     277.  00:81B5                      
     278.  00:81B5                      pinta_ener_tile_6:
     279.  00:81B5  2B                  	DEC		HL
     280.  00:81B6  06 9B               	LD		 B,TILEENERG6
     281.  00:81B8  B8                  	CP		 B
     282.  00:81B9  38 04               	JR		C,pinta_ener_tile_6_negro
     283.  00:81BB  36 0E               	LD		(HL),14
     284.  00:81BD  18 01               	JR		pinta_ener_tile_5
     285.  00:81BF                      pinta_ener_tile_6_negro:
     286.  00:81BF  71                  	LD		(HL),C
     287.  00:81C0                      
     288.  00:81C0                      pinta_ener_tile_5:
     289.  00:81C0  2B                  	DEC		HL
     290.  00:81C1  06 7C               	LD		 B,TILEENERG5
     291.  00:81C3  B8                  	CP		 B
     292.  00:81C4  38 04               	JR		C,pinta_ener_tile_5_negro
     293.  00:81C6  36 0E               	LD		(HL),TILEMAPVERD
     294.  00:81C8  18 01               	JR		pinta_ener_tile_4
     295.  00:81CA                      pinta_ener_tile_5_negro:
     296.  00:81CA  71                  	LD		(HL),C
     297.  00:81CB                      
     298.  00:81CB                      pinta_ener_tile_4:
     299.  00:81CB  2B                  	DEC		HL
     300.  00:81CC  06 5D               	LD		 B,TILEENERG4
     301.  00:81CE  B8                  	CP		 B
     302.  00:81CF  38 04               	JR		C,pinta_ener_tile_4_negro
     303.  00:81D1  36 0F               	LD		(HL),TILEMAPAMAR
     304.  00:81D3  18 01               	JR		pinta_ener_tile_3
     305.  00:81D5                      pinta_ener_tile_4_negro:
     306.  00:81D5  71                  	LD		(HL),C
     307.  00:81D6                      	
     308.  00:81D6                      pinta_ener_tile_3:
     309.  00:81D6  2B                  	DEC		HL
     310.  00:81D7  06 3E               	LD		 B,TILEENERG3
     311.  00:81D9  B8                  	CP		 B
     312.  00:81DA  38 04               	JR		C,pinta_ener_tile_3_negro
     313.  00:81DC  36 0F               	LD		(HL),TILEMAPAMAR
     314.  00:81DE  18 01               	JR		pinta_ener_tile_2
     315.  00:81E0                      pinta_ener_tile_3_negro:
     316.  00:81E0  71                  	LD		(HL),C
     317.  00:81E1                      
     318.  00:81E1                      pinta_ener_tile_2:
     319.  00:81E1  2B                  	DEC		HL
     320.  00:81E2  06 1F               	LD		 B,TILEENERG2
     321.  00:81E4  B8                  	CP		 B
     322.  00:81E5  38 04               	JR		C,pinta_ener_tile_2_negro
     323.  00:81E7  36 10               	LD		(HL),TILEMAPROJO
     324.  00:81E9  18 01               	JR		fin_mira_pinta_energia		;siempre estará pintado el cuadro mínimo
     325.  00:81EB                      pinta_ener_tile_2_negro:
     326.  00:81EB  71                  	LD		(HL),C
     327.  00:81EC                      
     328.  00:81EC                      fin_mira_pinta_energia:
     329.  00:81EC  D9                  	EXX
     330.  00:81ED  C9                  	RET
     331.  00:81EE                      
     332.  00:81EE                      
     333.  00:81EE                      ;;=====================================================
     334.  00:81EE                      ;;PINTA_ENERGIA
     335.  00:81EE                      ;;=====================================================	
     336.  00:81EE                      ; función: 	actualiza el mapa de tiles para que en el próximo refresco se pinte la barra de energia actual
     337.  00:81EE                      ; entrada: 	array_aux_energia
     338.  00:81EE                      ; toca:		todo
     339.  00:81EE                      pinta_energia:
     340.  00:81EE  CD 97 81            	CALL	mira_pinta_energia
     341.  00:81F1                      	
     342.  00:81F1  21 09 A4            	LD		HL, array_aux_energia
     343.  00:81F4  11 88 1A            	LD		DE, TILMAP + POSENERG 	;inicio posición en el mapa de tiles de las vidas
     344.  00:81F7  01 08 00            	LD		BC, NMAXVIDREL			;hay 8 posiciones para vidas/reliquias o espacios en negro si no tiene 8 vidas/reliquias
     345.  00:81FA  C3 5C 00            	JP		LDIRVM
     346.  00:81FD                      fin_pinta_energia:
     347.  00:81FD                      	;RET
     348.  00:81FD                      
     349.  00:81FD                      
     350.  00:81FD                      
     351.  00:81FD                      ;;=====================================================
     352.  00:81FD                      ;;BORRA_MAPA
     353.  00:81FD                      ;;=====================================================	
     354.  00:81FD                      ; función: 	pone todas las habitaciones del mapa a negro (los tiles del mapa los rellena con un array a 0 - caracter en negro)
     355.  00:81FD                      ; entrada: 	array_aux_mapa_limpiar
     356.  00:81FD                      ; salida: 	-
     357.  00:81FD                      ; toca:		AF
     358.  00:81FD                      borra_mapa:
     359.  00:81FD  D9                  	EXX
     360.  00:81FE                      	
     361.  00:81FE  21 11 A4            	LD		HL,array_aux_mapa_limpiar
     362.  00:8201  11 F8 1A            	LD		DE,TILMAP + POSMAPLIN1 	;inicio posición en el mapa de tiles de la primera fila del mapa
     363.  00:8204  01 07 00            	LD		BC,NHABNIVEL			;cada nivel son 7 filas con 7 habitaciones "posibles"
     364.  00:8207  CD 5C 00            	CALL	LDIRVM
     365.  00:820A                      	
     366.  00:820A  21 11 A4            	LD		HL,array_aux_mapa_limpiar
     367.  00:820D  11 D8 1A            	LD		DE,TILMAP + POSMAPLIN2
     368.  00:8210  01 07 00            	LD		BC,NHABNIVEL
     369.  00:8213  CD 5C 00            	CALL	LDIRVM
     370.  00:8216                      
     371.  00:8216  21 11 A4            	LD		HL,array_aux_mapa_limpiar
     372.  00:8219  11 B8 1A            	LD		DE,TILMAP + POSMAPLIN3
     373.  00:821C  01 07 00            	LD		BC,NHABNIVEL
     374.  00:821F  CD 5C 00            	CALL	LDIRVM
     375.  00:8222                      
     376.  00:8222  21 11 A4            	LD		HL,array_aux_mapa_limpiar	
     377.  00:8225  11 98 1A            	LD		DE,TILMAP + POSMAPLIN4
     378.  00:8228  01 07 00            	LD		BC,NHABNIVEL
     379.  00:822B  CD 5C 00            	CALL	LDIRVM
     380.  00:822E                      
     381.  00:822E  21 11 A4            	LD		HL,array_aux_mapa_limpiar	
     382.  00:8231  11 78 1A            	LD		DE,TILMAP + POSMAPLIN5
     383.  00:8234  01 07 00            	LD		BC,NHABNIVEL
     384.  00:8237  CD 5C 00            	CALL	LDIRVM
     385.  00:823A                      
     386.  00:823A  21 11 A4            	LD		HL,array_aux_mapa_limpiar	
     387.  00:823D  11 58 1A            	LD		DE,TILMAP + POSMAPLIN6
     388.  00:8240  01 07 00            	LD		BC,NHABNIVEL
     389.  00:8243  CD 5C 00            	CALL	LDIRVM
     390.  00:8246                      
     391.  00:8246  21 11 A4            	LD		HL,array_aux_mapa_limpiar	
     392.  00:8249  11 38 1A            	LD		DE,TILMAP + POSMAPLIN7
     393.  00:824C  01 07 00            	LD		BC,NHABNIVEL
     394.  00:824F  CD 5C 00            	CALL	LDIRVM
     395.  00:8252                      	
     396.  00:8252  D9                  	EXX
     397.  00:8253                      fin_borra_mapa:
     398.  00:8253  C9                  	RET
     399.  00:8254                      
     400.  00:8254                      
     401.  00:8254                      
     402.  00:8254                      
     403.  00:8254                      
     404.  00:8254                      
     405.  00:8254                      
     406.  00:8254                      
     407.  00:8254                      
     408.  00:8254                      ;=====================================================
     409.  00:8254                      ;;PINTA_ARRAY
     410.  00:8254                      ;;=====================================================	
     411.  00:8254                      ;;;funcion:  se le pasa un array con posiciones de tiles y coordenadas x e y y los pinta en screen 2
     412.  00:8254                      ;;entrada:	wordaux1 (pos inicio sc2 donde pintar) y wordaux2 (puntero al array a pintar), BC (posición en tilemap) , D filas y E columnas
     413.  00:8254                      ;;salida:	-
     414.  00:8254                      ;;importante: necesita de una variable wordaux1 tipo WD (wordaux1: 	DW	0)
     415.  00:8254                      ;; ejemplo llamada:
     416.  00:8254                      	;~ LD		HL,array_tiles					;guardo puntero al array a pintar (como psar por referencia)
     417.  00:8254                      	;~ LD		(wordaux2),HL					;en la variable wordaux2
     418.  00:8254                      	;~ LD		HL,SC2MAP + 256 + 32			;calcula posición en tilemap
     419.  00:8254                      	;~ LD		(wordaux1),HL					;guarda valor pos tilemap en wordaux1
     420.  00:8254                      	;~ LD		B,H								;coloca posición tilemap BC
     421.  00:8254                      	;~ LD		C,L
     422.  00:8254                      	;~ LD		D,2								;nº de filas
     423.  00:8254                      	;~ LD		E,3								;nº de columnas
     424.  00:8254                      	;~ CALL	pinta_array
     425.  00:8254                      
     426.  00:8254                      pinta_array:
     427.  00:8254  F5                  	PUSH	AF
     428.  00:8255                      	
     429.  00:8255                      	;contamos con que la posición "global" en el tilemap está ya en BC
     430.  00:8255                      	;y el puntero al array a pintar en wordaux2 y la posición en tilemap sc2 en wordaux1
     431.  00:8255                      	;inicializa
     432.  00:8255  DB 99               	IN		 A,(REGEST)		;leer registro de estado (recomendado)
     433.  00:8257                      	
     434.  00:8257                      	;coloca puntero para pintar tile según BC
     435.  00:8257  79                  	LD		 A,C			;primero byte bajo	
     436.  00:8258  D3 99               	OUT		(REGEST),A
     437.  00:825A  78                  	LD		 A,B			;después byte alto  ********************** preguntar a Fernando cómo que byte bajo es B
     438.  00:825B  F6 40               	OR		1000000b		;+64
     439.  00:825D  D3 99               	OUT		(REGEST),A
     440.  00:825F                      
     441.  00:825F                      	
     442.  00:825F  2A 89 82            	LD		HL,(wordaux2)	;HL es lo que se pintará y le he pasado el puntero del array tilemap a pintar
     443.  00:8262                      .pa_pinta_fila:
     444.  00:8262  43                  	LD		 B,E
     445.  00:8263                      .pa_pinta_columnas: 		;finta la fila (pintando las columnas)
     446.  00:8263  7E                  	LD		 A,(HL)
     447.  00:8264  D3 98               	OUT		(REGESCVDP),A	;escribe A en VRAM en la posición indicada por los dos OUT anteriores
     448.  00:8266  23                  	INC		HL
     449.  00:8267  10 FA               	DJNZ	.pa_pinta_columnas
     450.  00:8269                      	
     451.  00:8269                      	;no es una solución elegante lo de repetir código pero queda claro
     452.  00:8269                      	;por si hay otra fila
     453.  00:8269  E5                  	PUSH	HL
     454.  00:826A  2A 87 82            	LD		HL,(wordaux1)
     455.  00:826D  01 20 00            	LD		BC,32
     456.  00:8270  09                  	ADD		HL,BC
     457.  00:8271  22 87 82            	LD		(wordaux1),HL
     458.  00:8274  44                  	LD		B,H
     459.  00:8275  4D                  	LD		C,L
     460.  00:8276  E1                  	POP		HL
     461.  00:8277                      	
     462.  00:8277  79                  	LD		 A,C			;primero byte bajo	
     463.  00:8278  D3 99               	OUT		(REGEST),A
     464.  00:827A  78                  	LD		 A,B			;después byte alto 
     465.  00:827B  F6 40               	OR		1000000b		;+64
     466.  00:827D  D3 99               	OUT		(REGEST),A
     467.  00:827F                      	
     468.  00:827F                      	;si hay otra fila repite
     469.  00:827F  15                  	DEC		 D
     470.  00:8280  7A                  	LD		 A,D		;¿hay otra fila?
     471.  00:8281  B7                  	OR		 A
     472.  00:8282  C2 62 82            	JP		NZ,.pa_pinta_fila
     473.  00:8285                      	
     474.  00:8285  F1                  	POP		AF
     475.  00:8286                      	
     476.  00:8286                      fin_pinta_array:
     477.  00:8286  C9                  	RET
     478.  00:8287                      ;;variables asocidas a la función (no sé si dejarlo aquí y encapsularlo todo o hacerla reutilizable)
     479.  00:8287                      ;; por de pronto la dejo aquí
     480.  00:8287  00 00               wordaux1:		DW	0	;almacena la posición en el tilemap 0 al 675
     481.  00:8289  00 00               wordaux2:		DW	0	;almacena puntero a array de tiles (posiciones en realidad) a pintar (posiciones repetidas en los 3 bancos)
     482.  00:828B                      
     483.  00:828B                      
     484.  00:828B                      
     485.  00:828B                      
     486.  00:828B                      
     487.  00:828B                      ;;=====================================================
     488.  00:828B                      ;;PINTA_PUERTAS
     489.  00:828B                      ;;=====================================================	
     490.  00:828B                      ; función: 	examina A y mira si tiene que pintar puertas de los lados, arriba o abrajo o las escaleras (o no)
     491.  00:828B                      ; entrada: 	habitacion_actual 1 escalera 1 puerta arriba 1 pu der 1 pu aba 1 pu izq (si es 0 pinta pared)
     492.  00:828B                      ; salida: 	-
     493.  00:828B                      ; toca:		todo
     494.  00:828B                      pinta_puertas:
     495.  00:828B  CD 0C 81            	CALL	pinta_parte_superior_pantalla	;pinta pasillo y paredes
     496.  00:828E                      
     497.  00:828E  CD 9D 80            	CALL	localiza_info_habitacion	;busca qué puertas debe pintar y lo mete en habitación_actual
     498.  00:8291                      	
     499.  00:8291  3A C8 A0            	LD		 A, (habitacion_actual)		;se mete en A porque la función pide A y para no buscar el valor 4 veces
     500.  00:8294                      
     501.  00:8294                      ;	BIT		 4, A
     502.  00:8294                      ;	CALL	nz, pinta_escalera
     503.  00:8294                      
     504.  00:8294  CB 5F               	BIT		 3, A
     505.  00:8296  C4 BE 82            	CALL	nz, pinta_puerta_arr
     506.  00:8299                      
     507.  00:8299  CB 57               	BIT		 2, A
     508.  00:829B  C4 D3 82            	CALL	nz, pinta_puerta_der
     509.  00:829E                      
     510.  00:829E  CB 4F               	BIT		 1, A
     511.  00:82A0  C4 A9 82            	CALL	nz, pinta_puerta_aba
     512.  00:82A3                      	
     513.  00:82A3  CB 47               	BIT		 0, A
     514.  00:82A5  C4 E8 82            	CALL	nz, pinta_puerta_izq
     515.  00:82A8                      
     516.  00:82A8                      	;; sustituir el último call por jp *************************************************
     517.  00:82A8                      fin_pinta_puertas:
     518.  00:82A8  C9                  	RET
     519.  00:82A9                      
     520.  00:82A9                      
     521.  00:82A9                      
     522.  00:82A9                      
     523.  00:82A9                      ;;=====================================================
     524.  00:82A9                      ;;PINTA_PUERTA_ABA
     525.  00:82A9                      ;;=====================================================	
     526.  00:82A9                      ; función: 	pinta la puerta de abajo
     527.  00:82A9                      ; entrada: 	array_puerta_abajo, wordaux2, wordaux1
     528.  00:82A9                      ; salida: 	-
     529.  00:82A9                      ; toca:		HL,BC, DE
     530.  00:82A9                      pinta_puerta_aba:
     531.  00:82A9  21 42 A4            	LD		HL,array_puerta_abajo			;guardo puntero al array a pintar (como psar por referencia)
     532.  00:82AC  22 89 82            	LD		(wordaux2),HL					;en la variable wordaux2
     533.  00:82AF  21 EE 19            	LD		HL,TILMAP + POSPUERABAJ			;calcula posición en tilemap
     534.  00:82B2  22 87 82            	LD		(wordaux1),HL					;guarda valor pos tilemap en wordaux1
     535.  00:82B5  44                  	LD		B,H								;coloca posición tilemap BC
     536.  00:82B6  4D                  	LD		C,L
     537.  00:82B7  16 01               	LD		D,1								;nº de filas
     538.  00:82B9  1E 04               	LD		E,4								;nº de columnas
     539.  00:82BB  C3 54 82            	JP		pinta_array
     540.  00:82BE                      	;~ CALL	pinta_array
     541.  00:82BE                      fin_pinta_puerta_aba:
     542.  00:82BE                      	;~ RET
     543.  00:82BE                      
     544.  00:82BE                      ;;=====================================================
     545.  00:82BE                      ;;PINTA_PUERTA_ARR
     546.  00:82BE                      ;;=====================================================	
     547.  00:82BE                      ; función: 	pinta la puerta de arriba
     548.  00:82BE                      ; entrada: 	array_puerta_arriba, wordaux2, wordaux1
     549.  00:82BE                      ; salida: 	-
     550.  00:82BE                      ; toca:		HL,BC, DE
     551.  00:82BE                      pinta_puerta_arr:
     552.  00:82BE  21 19 A4            	LD		HL,array_puerta_arriba			;guardo puntero al array a pintar (como psar por referencia)
     553.  00:82C1  22 89 82            	LD		(wordaux2),HL					;en la variable wordaux2
     554.  00:82C4  21 8E 18            	LD		HL,TILMAP + POSPUERARRI			;calcula posición en tilemap
     555.  00:82C7  22 87 82            	LD		(wordaux1),HL					;guarda valor pos tilemap en wordaux1
     556.  00:82CA  44                  	LD		B,H								;coloca posición tilemap BC
     557.  00:82CB  4D                  	LD		C,L
     558.  00:82CC  16 05               	LD		D,5								;nº de filas
     559.  00:82CE  1E 04               	LD		E,4								;nº de columnas
     560.  00:82D0  C3 54 82            	JP		pinta_array
     561.  00:82D3                      	;~ CALL	pinta_array
     562.  00:82D3                      fin_pinta_puerta_arr:
     563.  00:82D3                      	;~ RET
     564.  00:82D3                      
     565.  00:82D3                      ;;=====================================================
     566.  00:82D3                      ;;PINTA_PUERTA_DER
     567.  00:82D3                      ;;=====================================================	
     568.  00:82D3                      ; función: 	pinta la puerta de la derecha
     569.  00:82D3                      ; entrada: 	array_puerta_derecha, wordaux2, wordaux1
     570.  00:82D3                      ; salida: 	-
     571.  00:82D3                      ; toca:		HL,BC, DE
     572.  00:82D3                      pinta_puerta_der:
     573.  00:82D3  21 2D A4            	LD		HL,array_puerta_derecha			;guardo puntero al array a pintar (como psar por referencia)
     574.  00:82D6  22 89 82            	LD		(wordaux2),HL					;en la variable wordaux2
     575.  00:82D9  21 FC 18            	LD		HL,TILMAP + POSPUERDERE			;calcula posición en tilemap
     576.  00:82DC  22 87 82            	LD		(wordaux1),HL					;guarda valor pos tilemap en wordaux1
     577.  00:82DF  44                  	LD		B,H								;coloca posición tilemap BC
     578.  00:82E0  4D                  	LD		C,L
     579.  00:82E1  16 07               	LD		D,7								;nº de filas
     580.  00:82E3  1E 03               	LD		E,3								;nº de columnas
     581.  00:82E5  C3 54 82            	JP		pinta_array
     582.  00:82E8                      	;~ CALL	pinta_array
     583.  00:82E8                      fin_pinta_puerta_der:
     584.  00:82E8                      	;~ RET
     585.  00:82E8                      	
     586.  00:82E8                      ;;=====================================================
     587.  00:82E8                      ;;PINTA_PUERTA_IZQ
     588.  00:82E8                      ;;=====================================================	
     589.  00:82E8                      ; función: 	pinta la puerta de la izquierda
     590.  00:82E8                      ; entrada: 	array_puerta_izquierda, wordaux2, wordaux1
     591.  00:82E8                      ; salida: 	-
     592.  00:82E8                      ; toca:		HL,BC, DE
     593.  00:82E8                      pinta_puerta_izq:
     594.  00:82E8  21 46 A4            	LD		HL,array_puerta_izquierda		;guardo puntero al array a pintar (como psar por referencia)
     595.  00:82EB  22 89 82            	LD		(wordaux2),HL					;en la variable wordaux2
     596.  00:82EE  21 E1 18            	LD		HL,TILMAP + POSPUERIZQU			;calcula posición en tilemap
     597.  00:82F1  22 87 82            	LD		(wordaux1),HL					;guarda valor pos tilemap en wordaux1
     598.  00:82F4  44                  	LD		B,H								;coloca posición tilemap BC
     599.  00:82F5  4D                  	LD		C,L
     600.  00:82F6  16 07               	LD		D,7								;nº de filas
     601.  00:82F8  1E 03               	LD		E,3								;nº de columnas
     602.  00:82FA  C3 54 82            	JP		pinta_array
     603.  00:82FD                      	;~ CALL	pinta_array
     604.  00:82FD                      fin_pinta_puerta_izq:
     605.  00:82FD                      	;~ RET
     606.  00:82FD                      
     607.  00:82FD                      
     608.  00:82FD                      
     609.  00:82FD                      
     610.  00:82FD                      
     611.  00:82FD                      ;;=====================================================
     612.  00:82FD                      ;;POSICIONA_EN_MAPA
     613.  00:82FD                      ;;=====================================================	
     614.  00:82FD                      ; función: 	en el mapa de marcadores de la derecha/abajo marca un cuadro en gris o con un muñeco
     615.  00:82FD                      ;			según el valor de prota.posición pinta entrá un muñeco y por donde vaya pasando el prota
     616.  00:82FD                      ;			quedará en gris
     617.  00:82FD                      ; entrada: 	elemento_pintar_mapa, prota_pos_mapy, prota_pos_mapx
     618.  00:82FD                      ; salida: 	-
     619.  00:82FD                      ; toca:		todos
     620.  00:82FD                      posiciona_en_mapa:
     621.  00:82FD                      	;#0238 es la posición en mapa de tiles de la esquina superior izquierda del mapa (569 en decimal)
     622.  00:82FD  21 38 1A            	LD		HL, TILMAP + POSMAPA;pos inicial
     623.  00:8300                      	
     624.  00:8300                      	;ahora se le calcula la fila a pintar ya que va de abajo a arriba y no como en el mapa + columna
     625.  00:8300                      .sumar_fila:
     626.  00:8300  3A F7 A3            	LD		 A,(prota_pos_mapy)
     627.  00:8303  FE 01               	CP		 1
     628.  00:8305  28 2A               	JR		 Z, .fila_1
     629.  00:8307  3A F7 A3            	LD		 A,(prota_pos_mapy)
     630.  00:830A  FE 02               	CP		 2
     631.  00:830C  28 2A               	JR		 Z, .fila_2
     632.  00:830E  3A F7 A3            	LD		 A,(prota_pos_mapy)
     633.  00:8311  FE 03               	CP		 3
     634.  00:8313  28 2A               	JR		 Z, .fila_3
     635.  00:8315  3A F7 A3            	LD		 A,(prota_pos_mapy)
     636.  00:8318  FE 04               	CP		 4
     637.  00:831A  28 2A               	JR		 Z, .fila_4
     638.  00:831C  3A F7 A3            	LD		 A,(prota_pos_mapy)
     639.  00:831F  FE 05               	CP		 5
     640.  00:8321  28 2A               	JR		 Z, .fila_5
     641.  00:8323  3A F7 A3            	LD		 A,(prota_pos_mapy)
     642.  00:8326  FE 06               	CP		 6
     643.  00:8328  28 2A               	JR		 Z, .sumar_columna
     644.  00:832A                      	;no consulto la 0 porque si no es ninguna de las anteriores es 0 y por tanto sería un jr fila_0
     645.  00:832A                      	
     646.  00:832A                      .fila_0:
     647.  00:832A  11 C0 00            	LD		DE, 192
     648.  00:832D  19                  	ADD		HL, DE			;nota: se que repito el ADD pero la otra opción es inicializar DE y ya tarda mucho la funicón (es por velicidad)
     649.  00:832E  C3 54 83            	JP		.sumar_columna
     650.  00:8331                      .fila_1:
     651.  00:8331  11 A0 00            	LD		DE, 160
     652.  00:8334  19                  	ADD		HL, DE
     653.  00:8335  C3 54 83            	JP		.sumar_columna
     654.  00:8338                      .fila_2:
     655.  00:8338  11 80 00            	LD		DE, 128
     656.  00:833B  19                  	ADD		HL, DE
     657.  00:833C  C3 54 83            	JP		.sumar_columna
     658.  00:833F                      .fila_3:
     659.  00:833F  11 60 00            	LD		DE, 96
     660.  00:8342  19                  	ADD		HL, DE
     661.  00:8343  C3 54 83            	JP		.sumar_columna
     662.  00:8346                      .fila_4:
     663.  00:8346  11 40 00            	LD		DE, 64
     664.  00:8349  19                  	ADD		HL, DE
     665.  00:834A  C3 54 83            	JP		.sumar_columna
     666.  00:834D                      .fila_5:
     667.  00:834D  11 20 00            	LD		DE, 32
     668.  00:8350  19                  	ADD		HL, DE
     669.  00:8351  C3 54 83            	JP		.sumar_columna
     670.  00:8354                      .fila_6:
     671.  00:8354                      	;pongo fila_6 por poner ya que si es la fila 6 equiv. a primera fila del mapa y por tanto no suma fila
     672.  00:8354                      	
     673.  00:8354                      	
     674.  00:8354                      .sumar_columna:
     675.  00:8354  3A F6 A3            	LD 		 A, (prota_pos_mapx) ;POS X
     676.  00:8357  16 00               	LD		 D, 0
     677.  00:8359  5F                  	LD		 E, A
     678.  00:835A  19                  	ADD		HL, DE
     679.  00:835B                      	
     680.  00:835B                      	;resultado en BC para usar en la función pinta_tile_suelto
     681.  00:835B  44                  	LD		 B, H
     682.  00:835C  4D                  	LD		 C, L
     683.  00:835D                      	
     684.  00:835D                      	;terminado de fijar la coordenada recuperamos a para ver el tipo
     685.  00:835D  3A 18 A4            	LD		 A, (elemento_pintar_mapa)
     686.  00:8360  FE 09               	CP		 TILEGRISM
     687.  00:8362  CA 6A 83            	JP		 Z, pinta_pos_mapa_vacio
     688.  00:8365  16 13               	LD		 D, TILEPROTAM
     689.  00:8367  C3 6C 83            	JP		fin_pinta_pos_mapa
     690.  00:836A                      pinta_pos_mapa_vacio:
     691.  00:836A  16 09               	LD		 D, TILEGRISM	
     692.  00:836C                      
     693.  00:836C                      fin_pinta_pos_mapa:
     694.  00:836C  C3 89 81            	JP		pinta_tile_suelto
     695.  00:836F                      fin_posiciona_en_mapa:
     696.  00:836F                      	;~ -CALL/RET
     697.  00:836F                      
     698.  00:836F                      
     699.  00:836F                      
     700.  00:836F                      ;;=====================================================
     701.  00:836F                      ;;EFECTO_IMAGEN_TIRA_RELIQUIA
     702.  00:836F                      ;;=====================================================	
     703.  00:836F                      ; función: 	hace que el fondo de la pantalla parpadee N veces
     704.  00:836F                      ; entrada: 	actualiza_reliquias_sn
     705.  00:836F                      ; salida: 	-
     706.  00:836F                      ; toca: 	todo
     707.  00:836F                      efecto_imagen_tira_reliquia:
     708.  00:836F  3E 14               	LD		 A, 20;RETARDOREL
     709.  00:8371  47                  	LD		 B, A
     710.  00:8372                      
     711.  00:8372                      .parpadea_fondo:
     712.  00:8372  C5                  	PUSH	BC
     713.  00:8373  21 DD A3            	LD		HL, color_bomba1
     714.  00:8376  CD D3 80            	CALL	color_pantalla
     715.  00:8379                      	
     716.  00:8379                      	;~ PUSH	BC
     717.  00:8379                      	;~ LD		 A, 255
     718.  00:8379                      	;~ LD		 B, A
     719.  00:8379                      ;~ .bucle_de_espera:
     720.  00:8379                      	;~ NOP
     721.  00:8379                      	;~ DJNZ	 .bucle_de_espera
     722.  00:8379                      	;~ POP		BC
     723.  00:8379  76                  	HALT
     724.  00:837A                      
     725.  00:837A                      	
     726.  00:837A  21 E0 A3            	LD		HL, color_bomba2
     727.  00:837D  CD D3 80            	CALL	color_pantalla
     728.  00:8380  C1                  	POP		BC
     729.  00:8381  10 EF               	DJNZ	.parpadea_fondo
     730.  00:8383                      	
     731.  00:8383  21 DA A3            	LD		HL, color_base
     732.  00:8386  C3 D3 80            	JP		color_pantalla
     733.  00:8389                      fin_efecto_imagen_tira_reliquia:
     734.  00:8389                      	;CALL/RET
     735.  00:8389                      
     105   00:8389                      	
     106   00:8389                      	include "subr_sprites.asm"
       1.  00:8389                      
       2.  00:8389                      ;;=====================================================
       3.  00:8389                      ;;SUBRUTINAS ENCARGADAS DE MANEJAR LOS SPRITES
       4.  00:8389                      ;;=====================================================	
       5.  00:8389                      
       6.  00:8389                      
       7.  00:8389                      ;; PREGUNTAR SI A FERNANDO SI ES MEJOR USAR LISTAS O ALGO PARA AHORRAR CÓDIGO
       8.  00:8389                      
       9.  00:8389                      
      10.  00:8389                      
      11.  00:8389                      
      12.  00:8389                      ;;=====================================================
      13.  00:8389                      ;;CARGA_PATRONES_SPRITES_NIVEL
      14.  00:8389                      ;;=====================================================	
      15.  00:8389                      ; función: 	examina el nivel y carga los patrones específicos necesarios
      16.  00:8389                      ; entrada: 	-
      17.  00:8389                      ; salida: 	-
      18.  00:8389                      ; toca: 	-
      19.  00:8389                      carga_patrones_sprites_nivel:
      20.  00:8389                      	
      21.  00:8389  CD 93 83            	CALL 	carga_patrones_nivel_comunes
      22.  00:838C                      	
      23.  00:838C                      	;carga atrones no comunes
subr_sprites.asm(24) : Value out of range
      24.  00:838C  3E F3               	LD		 A, prota_nivel
      25.  00:838E  B7                  	OR		 A
      26.  00:838F  CA 9F 83            	JP		 Z, carga_patrones_sprites_nivel1
      27.  00:8392                      	
      28.  00:8392                      	
      29.  00:8392                      fin_carga_patrones_sprites_nivel:
      30.  00:8392  C9                  	RET		;dejo este ret de momento pero cuando la subrutina esté terminada sobrará
      31.  00:8393                      
      32.  00:8393                      	;RET comparo numeros con jp para incluir el RET con lo que el último ret me sobra
      33.  00:8393                      
      34.  00:8393                      ;;=====================================================
      35.  00:8393                      ;;CARGA_PATRONES_SPRITES_NIVEL_COMUNES
      36.  00:8393                      ;;=====================================================	
      37.  00:8393                      ; función: 	carga los patrones comunes en todos los niveles
      38.  00:8393                      ; entrada: 	-
      39.  00:8393                      ; salida: 	-
      40.  00:8393                      ; toca: 	-
      41.  00:8393                      carga_patrones_nivel_comunes:	
      42.  00:8393  21 88 96            	LD		HL, sprites_comunes
      43.  00:8396  11 00 38            	LD		DE, SPRTBL
      44.  00:8399  01 40 01            	LD		BC, fin_sprites_comunes-sprites_comunes
      45.  00:839C  C3 5C 00            	JP		LDIRVM
      46.  00:839F                      fin_carga_patrones_nivel_comunes:
      47.  00:839F                      
      48.  00:839F                      
      49.  00:839F                      ;;=====================================================
      50.  00:839F                      ;;CARGA_PATRONES_SPRITES_NIVEL1
      51.  00:839F                      ;;=====================================================	
      52.  00:839F                      ; función: 	copia los patrones de los sprites que e van a usar en el nivel 1 en vram
      53.  00:839F                      ; entrada: 	-
      54.  00:839F                      ; salida: 	-
      55.  00:839F                      ; toca: 	-
      56.  00:839F                      carga_patrones_sprites_nivel1:
      57.  00:839F                      
      58.  00:839F                      
      59.  00:839F                      	;~ ;sprite sprite_reliquia
      60.  00:839F                      	;~ LD		HL,sprite_reliquia
      61.  00:839F                      	;~ LD		DE,#3880
      62.  00:839F                      	;~ LD		BC,32				;32 bytes (sprites de 2 x 2)
      63.  00:839F                      	;~ CALL	LDIRVM
      64.  00:839F                      
      65.  00:839F                      fin_carga_patrones_sprites:
      66.  00:839F  C9                  	RET
      67.  00:83A0                      
      68.  00:83A0                      
      69.  00:83A0                      ;;=====================================================
      70.  00:83A0                      ;;ACTUALIZA_ARRAY_SPRITES_VRAM
      71.  00:83A0                      ;;=====================================================	
      72.  00:83A0                      ; función: 	copia el array con los valores de los sprites (pos, color, plano) en VRAM
      73.  00:83A0                      ; entrada: 	-
      74.  00:83A0                      ; salida: 	-
      75.  00:83A0                      ; toca: 	todos los registros. Como me interesa la velocidad, si necesito copiar de algo lo hago fuera
      76.  00:83A0                      render_sprites:
      77.  00:83A0                      	;volcando el array con toda la info de los sprites a la zona de atributos de sprites
      78.  00:83A0  21 5B A4            	LD		HL,array_sprites
      79.  00:83A3  11 00 1B            	LD		DE,SPRART
      80.  00:83A6  01 80 00            	LD		BC,4 * 32				;32 sprites x 4 bytes controlando el sprite (Y, X, plano, color)
      81.  00:83A9  C3 5C 00            	JP		LDIRVM
      82.  00:83AC                      fin_actualiza_array_sprites_vram:
      83.  00:83AC                      
      84.  00:83AC                      
      85.  00:83AC                      ;;=====================================================
      86.  00:83AC                      ;;VUELCA_RESULTADO_PUNTOMIRA_ARRAY
      87.  00:83AC                      ;;=====================================================	
      88.  00:83AC                      ; función: 	coloca los valores del punto de mira en la variable array_sprites para ser volcados en VRAM
      89.  00:83AC                      ; entrada: 	array_sprites_pm, prota.XXXXX
      90.  00:83AC                      ; salida: 	-
      91.  00:83AC                      ; toca: 	-
      92.  00:83AC                      vuelca_resultado_puntomira_array:
      93.  00:83AC  DD 21 5B A4         	LD		IX, array_sprites_pm
      94.  00:83B0                      	;posición y de los dos sprites que conforman el punto de mira
      95.  00:83B0  3A E4 A3            	LD		 A, (prota.posy)
      96.  00:83B3  DD 77 00            	LD		(IX  ), A
      97.  00:83B6  DD 77 04            	LD		(IX+4), A
      98.  00:83B9                      	;posición x de los dos sprites que conforman el punto de mira
      99.  00:83B9  3A E3 A3            	LD		 A, (prota.posx)
     100.  00:83BC  DD 77 01            	LD		(IX+1), A
     101.  00:83BF  DD 77 05            	LD		(IX+5), A
     102.  00:83C2                      	;plano
     103.  00:83C2  DD 36 02 00         	LD		(IX+2), 0
     104.  00:83C6  DD 36 06 04         	LD		(IX+6), 4	;al ser sprites de 16x16 hay que ir de 4 en 4
     105.  00:83CA                      	;color
     106.  00:83CA  3A E5 A3            	LD		 A, (prota.escena)
     107.  00:83CD  B7                  	OR		 A
     108.  00:83CE  C2 DA 83            	JP		NZ,.codigo_color_2
     109.  00:83D1                      .codigo_color_1:
     110.  00:83D1  DD 36 03 0F         	LD		(IX+3), COLBLANCO
     111.  00:83D5  DD 36 07 08         	LD		(IX+7), COLROJO
     112.  00:83D9  C9                  	RET
     113.  00:83DA                      .codigo_color_2:
     114.  00:83DA  DD 36 03 08         	LD		(IX+3), COLROJO
     115.  00:83DE  DD 36 07 0F         	LD		(IX+7), COLBLANCO
     116.  00:83E2  C9                  	RET
     117.  00:83E3                      fin_vuelca_resultado_puntomira_array:
     118.  00:83E3                      
     119.  00:83E3                      
     120.  00:83E3                      ;;=====================================================
     121.  00:83E3                      ;;CHECK_PLAYER
     122.  00:83E3                      ;;=====================================================	
     123.  00:83E3                      ; función: 	MIRA EL CONTROL Y APLICA LA LOGICA DE MOVIMIENTO DEL PROTAGONISTA
     124.  00:83E3                      ; entrada: 	-
     125.  00:83E3                      ; salida: 	-
     126.  00:83E3                      ; toca: 	A
     127.  00:83E3                      check_player:
     128.  00:83E3  CD 82 84            	CALL	update_controllers_status
     129.  00:83E6  B7                  	OR		 A
     130.  00:83E7  C8                  	RET		 Z						;si no se ha pulsado nada no se necesita mirar nada
     131.  00:83E8                      
     132.  00:83E8  CB 1F               	RR		 A
     133.  00:83EA  DC 03 84            	CALL	 C, mueve_arriba
     134.  00:83ED  CB 1F               	RR		 A
     135.  00:83EF  DC 1F 84            	CALL	 C, mueve_abajo
     136.  00:83F2  CB 1F               	RR		 A
     137.  00:83F4  DC 2E 84            	CALL	 C, mueve_izquierda
     138.  00:83F7  CB 1F               	RR		 A
     139.  00:83F9  DC 10 84            	CALL	 C, mueve_derecha
     140.  00:83FC                      	
     141.  00:83FC                      	;zona para mirar disparo Recibe A que tendrá 0000 0 0 X-letra M X-espacio 
     142.  00:83FC  CD 3B 84            	CALL	mira_disparo
     143.  00:83FF                      	
     144.  00:83FF  C3 AC 83            	JP		vuelca_resultado_puntomira_array
     145.  00:8402                      f;in_check_player:
     146.  00:8402  C9                  	RET
     147.  00:8403                      
     107   00:8403                      	
     108   00:8403                      	include "subr_teclado_joy.asm"
       1.  00:8403                      ;;=====================================================
       2.  00:8403                      ;;SUBRUTINAS QUE CAPTURN EL JOYSTICK Y TECLADO Y MUEVEN PUNTO DE MIRA
       3.  00:8403                      ;;=====================================================
       4.  00:8403                      
       5.  00:8403                      ;;=====================================================
       6.  00:8403                      ;;MUEVE_ARRIBA
       7.  00:8403                      ;;=====================================================	
       8.  00:8403                      ; función: 	decrementa y si se no sale de los límites el valor del punto de mira a la derecha
       9.  00:8403                      ; entrada: 	-
      10.  00:8403                      ; salida: 	-
      11.  00:8403                      ; toca: 	-
      12.  00:8403                      mueve_arriba:
      13.  00:8403  F5                  	PUSH		AF
      14.  00:8404                      	
      15.  00:8404  3A E4 A3            	LD		 	 A, (prota.posy)
      16.  00:8407  3D                  	DEC			 A
      17.  00:8408  CA 0E 84            	JP			 Z,.no_decrementa_y
      18.  00:840B  32 E4 A3            	LD			(prota.posy), A
      19.  00:840E                      	
      20.  00:840E                      .no_decrementa_y:
      21.  00:840E  F1                  	POP			AF
      22.  00:840F                      fin_mueve_arriba:
      23.  00:840F  C9                  	RET
      24.  00:8410                      
      25.  00:8410                      
      26.  00:8410                      ;;=====================================================
      27.  00:8410                      ;;MUEVE_DERECHA
      28.  00:8410                      ;;=====================================================	
      29.  00:8410                      ; función: 	incrementa si se no sale de los límites el valor del punto de mira a la derecha
      30.  00:8410                      ; entrada: 	-
      31.  00:8410                      ; salida: 	-
      32.  00:8410                      ; toca: 	-
      33.  00:8410                      mueve_derecha:
      34.  00:8410  F5                  	PUSH		AF
      35.  00:8411                      	
      36.  00:8411  3A E3 A3            	LD		 	 A, (prota.posx)
      37.  00:8414  3C                  	INC			 A
      38.  00:8415  FE EF               	CP			 A, LIMPANTDER - 16
      39.  00:8417  CA 1D 84            	JP			 Z, .no_incrementa_x
      40.  00:841A  32 E3 A3            	LD			(prota.posx), A
      41.  00:841D                      	
      42.  00:841D                      .no_incrementa_x:
      43.  00:841D  F1                  	POP			AF
      44.  00:841E                      fin_mueve_derecha:
      45.  00:841E  C9                  	RET
      46.  00:841F                      
      47.  00:841F                      
      48.  00:841F                      ;;=====================================================
      49.  00:841F                      ;;MUEVE_ABAJO
      50.  00:841F                      ;;=====================================================	
      51.  00:841F                      ; función: 	incrementa y si se no sale de los límites el valor del punto de mira abajo
      52.  00:841F                      ; entrada: 	-
      53.  00:841F                      ; salida: 	-
      54.  00:841F                      ; toca: 	-
      55.  00:841F                      mueve_abajo:
      56.  00:841F  F5                  	PUSH		AF
      57.  00:8420                      	
      58.  00:8420  3A E4 A3            	LD		 	 A, (prota.posy)
      59.  00:8423  3C                  	INC			 A
      60.  00:8424  FE 70               	CP			 A, LIMPANTABA - 16
      61.  00:8426  CA 2C 84            	JP			 Z,.no_incrementa_y
      62.  00:8429  32 E4 A3            	LD			(prota.posy), A
      63.  00:842C                      	
      64.  00:842C                      .no_incrementa_y:
      65.  00:842C  F1                  	POP			AF
      66.  00:842D                      fin_mueve_abajo:
      67.  00:842D  C9                  	RET
      68.  00:842E                      	
      69.  00:842E                      	
      70.  00:842E                      ;;=====================================================
      71.  00:842E                      ;;MUEVE_IZQUIERDA
      72.  00:842E                      ;;=====================================================	
      73.  00:842E                      ; función: 	decrementa x si se no sale de los límites el valor del punto de mira a la izquierda
      74.  00:842E                      ; entrada: 	-
      75.  00:842E                      ; salida: 	-
      76.  00:842E                      ; toca: 	-
      77.  00:842E                      mueve_izquierda:
      78.  00:842E  F5                  	PUSH		AF
      79.  00:842F                      	
      80.  00:842F  3A E3 A3            	LD		 	 A, (prota.posx)
      81.  00:8432  3D                  	DEC			 A
      82.  00:8433                      ;	CP			 A, LIMPANTIZQ
      83.  00:8433  CA 39 84            	JP			 Z,.no_decrementa_x
      84.  00:8436  32 E3 A3            	LD			(prota.posx), A
      85.  00:8439                      	
      86.  00:8439                      .no_decrementa_x:
      87.  00:8439  F1                  	POP			AF
      88.  00:843A                      fin_mueve_izquierda:
      89.  00:843A  C9                  	RET
      90.  00:843B                      
      91.  00:843B                      
      92.  00:843B                      
      93.  00:843B                      ;;=====================================================
      94.  00:843B                      ;;MIRA_DISPARO
      95.  00:843B                      ;;=====================================================	
      96.  00:843B                      ; función: 	Mira si se ha pulsado alguno de los dos disparos
      97.  00:843B                      ; entrada: 	A que tendrá 0000 0 0 X-letra M X-espacio 
      98.  00:843B                      ; salida: 	-
      99.  00:843B                      ; toca: 	A, B
     100.  00:843B                      mira_disparo:
     101.  00:843B                      .mira_boton_pulsado1:
     102.  00:843B  CB 1F               	RR		 A						;preparo en el carry si se ha pulsado botón 1
     103.  00:843D  D2 66 84            	JP		 NC, .mira_boton_pulsado2					
     104.  00:8440  F5                  	PUSH	AF						;copia A para usarlo después
     105.  00:8441                      	;se ha pulsado barra o boton 1
     106.  00:8441  3A E8 A3            	LD		 A, (prota.cadencia)
     107.  00:8444  B7                  	OR		 A
     108.  00:8445  CA 53 84            	JP		 Z, .efectua_disparo	;toca efectuar disparo realmente porque se ha pulsado lo suficiente el disparo
     109.  00:8448                      .no_efectua_disparo: ;IF
     110.  00:8448  3D                  		DEC		 A
     111.  00:8449  32 E8 A3            		LD		(prota.cadencia), A	;resto cadencia hasta próximo disparo "real" (no automático por haber pulsado una tecla e ir demasiado rápido)
     112.  00:844C  AF                  		XOR		 A 
     113.  00:844D  32 E5 A3            		LD		(prota.escena), A
     114.  00:8450  C3 65 84            		JP		.fin_mira_disparo1
     115.  00:8453                      .efectua_disparo:	;ELSE
     116.  00:8453                      		;cambio colores del sprite
     117.  00:8453  3A E5 A3            		LD		 A, (prota.escena)
     118.  00:8456  2F                  		CPL		 
     119.  00:8457  32 E5 A3            		LD		(prota.escena), A
     120.  00:845A                      		;reseteo cadencia para el próximo disparo
     121.  00:845A  3E 04               		LD		 A, LIMCADENCIA						;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
     122.  00:845C  32 E8 A3            		LD		 (prota.cadencia), A				;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
     123.  00:845F                      		;ejecuto sonido								;; ajustar cadencia y que cuando el disparo sea efectivo se reseteen los colores
     124.  00:845F  AF                  		XOR		 A
     125.  00:8460  0E 01               		LD		 C, 1
     126.  00:8462  CD 2A 8B            		CALL	ayFX_INIT	
     127.  00:8465                      .fin_mira_disparo1
     128.  00:8465                      
     129.  00:8465  F1                  	POP		AF
     130.  00:8466                      .mira_boton_pulsado2:
     131.  00:8466  CB 1F               	RR		 A
     132.  00:8468  D0                  	RET		 NC
     133.  00:8469                      	;se ha pulsado shift o boton 2
     134.  00:8469                      	
     135.  00:8469  3A F5 A3            	LD		 A, (prota_reliquias)	;miro si le quedan reliquias
     136.  00:846C  B7                  	OR		 A
     137.  00:846D  C8                  	RET		 Z						;si no le quedan salgo ya
     138.  00:846E                      	
     139.  00:846E                      	;actuaciones si se usa la reliquia botón 2 o M y quedn reliquias.. (antes ya se puso el valor en A)
     140.  00:846E  3A F5 A3            	LD		A, (prota_reliquias)
     141.  00:8471  3D                  	DEC		 A
     142.  00:8472  32 F5 A3            	LD		(prota_reliquias), A
     143.  00:8475                      	
     144.  00:8475  3E 01               	LD		 A, 1
     145.  00:8477  0E 01               	LD		 C, 1
     146.  00:8479  CD 2A 8B            	CALL	ayFX_INIT
     147.  00:847C                      	
     148.  00:847C  CD 6F 83            	CALL 	efecto_imagen_tira_reliquia
     149.  00:847F                      	
     150.  00:847F  C3 6D 81            	JP		pinta_reliquias
     151.  00:8482                      fin_mira_disparo:
     152.  00:8482                      ;	RET		
     153.  00:8482                      
     154.  00:8482                      
     155.  00:8482                      ;;============================================================
     156.  00:8482                      ;;Código de D. Fernando García (BitVision) (al que siempre le estaré agradecido)
     157.  00:8482                      ;check_8th_keyboard_row
     158.  00:8482                      ;read_joy_0
     159.  00:8482                      ;check_8th_keyboard_row
     160.  00:8482                      ;check_4th_keyboard_row
     161.  00:8482                      ;;============================================================
     162.  00:8482                      ;;  usa constantes:
     163.  00:8482                      ;PSG_A  equ  0a0h  ;reg address
     164.  00:8482                      ;PSG_W  equ  0a1h  ;reg data WR
     165.  00:8482                      ;PSG_R  equ  0a2h  ;reg data
     166.  00:8482                      
     167.  00:8482                      ;;=====================================================
     168.  00:8482                      ;;update_controllers_status
     169.  00:8482                      ;;=====================================================	
     170.  00:8482                      ;depends on the next rountine
     171.  00:8482                      ;  returns
     172.  00:8482                      ;  a - 0P2TRLDU
     173.  00:8482                      
     174.  00:8482                      update_controllers_status:
     175.  00:8482  CD CD 84                 call  check_8th_keyboard_row
     176.  00:8485                      [4]  rrc    a
     176.  00:8485  CB 0F CB 0F CB 0F CB 0F 
     177.  00:848D  47                       ld    b,a    		;save for later  xxxTRDUL
     178.  00:848E                      
     179.  00:848E  E6 01                    and    #01    		;save L
     180.  00:8490  CB 27                    sla    a
     181.  00:8492  CB 27                    sla    a    		;now 00000L00
     182.  00:8494  4F                       ld    c,a    		;save for later
     183.  00:8495                      
     184.  00:8495  78                       ld    a,b    		;again we've got xxxTRDUL. I am interested on leaving 000000DU on a
     185.  00:8496  CB 3F                    srl    a
     186.  00:8498  E6 03                    and    00000011b
     187.  00:849A                      						;we've got 000000DU on a
     188.  00:849A  B1                       or    c    		;now we've got 00000LDU
     189.  00:849B  4F                       ld    c,a    		;save for later
     190.  00:849C                      
     191.  00:849C  78                       ld    a,b
     192.  00:849D  E6 18                    and    00011000b 	;we've got 000TR000
     193.  00:849F  B1                       or    c
     194.  00:84A0                           ;finally    000TRLDU
     195.  00:84A0                      
     196.  00:84A0                           ;and    00000100   ;preserve just
     197.  00:84A0  47                       ld    b,a    		;save for later
     198.  00:84A1  CD DB 84                 call  check_4th_keyboard_row      ;check M & P
     199.  00:84A4  F5                       push  af
     200.  00:84A5  E6 04                    and    00000100b	;filter just M
     201.  00:84A7  87                       add    a
     202.  00:84A8  87                       add    a
     203.  00:84A9  87                       add    a           ;shift 3th to 6th bit
     204.  00:84AA  B0                       or    b           	;merge with previous
     205.  00:84AB  47                       ld    b,a
     206.  00:84AC                      
     207.  00:84AC  CD B9 84                 call  read_joy_0
     208.  00:84AF  E6 3F                    and    00111111b  	;we want just 002TRLDU  from joystick    (2 is second trigger)
     209.  00:84B1  B0                       or    b      		;added 000TRLDU from keyboard
     210.  00:84B2  47                       ld    b,a      	;save for later
     211.  00:84B3  F1                       pop    af      	; let's check on P
     212.  00:84B4                      
     213.  00:84B4  E6 20                    and    00100000b
     214.  00:84B6  87                       add    a      		;P status on 6th bit  ... so 0P2TRLDU
     215.  00:84B7  B0                       or    b
     216.  00:84B8                      
     217.  00:84B8  C9                       ret
     218.  00:84B9                      
     219.  00:84B9                      
     220.  00:84B9                      ;ret
     221.  00:84B9                      ;  a -            xx2TRLDU
     222.  00:84B9                      read_joy_0:
     223.  00:84B9  F3                         di
     224.  00:84BA  3E 0F                      ld    a,15
     225.  00:84BC  D3 A0                      out    [PSG_A],a
     226.  00:84BE  DB A2                      in    a,[PSG_R]
     227.  00:84C0  E6 BF                      and    10111111b        ;joy0
     228.  00:84C2                      
     229.  00:84C2  D3 A1                      out    [PSG_W],a        ;set joy0
     230.  00:84C4                      
     231.  00:84C4  3E 0E                      ld    a,14
     232.  00:84C6  D3 A0                      out    [PSG_A],a
     233.  00:84C8  DB A2                      in    a,[PSG_R]
     234.  00:84CA                      
     235.  00:84CA  FB                         ei
     236.  00:84CB  2F                         cpl
     237.  00:84CC                      
     238.  00:84CC  C9                         ret
     239.  00:84CD                      
     240.  00:84CD                      
     241.  00:84CD                      ;ret
     242.  00:84CD                      ;  a -      RDULxxxT
     243.  00:84CD                      check_8th_keyboard_row:
     244.  00:84CD  F3                       di
     245.  00:84CE  DB AA                    in    a,(#aa)
     246.  00:84D0  E6 F0                    and    #f0
     247.  00:84D2  F6 08                    or    8
     248.  00:84D4  D3 AA                    out    (#aa),a
     249.  00:84D6  DB A9                    in    a,(#a9)
     250.  00:84D8  FB                       ei
     251.  00:84D9  2F                       cpl
     252.  00:84DA                      
     253.  00:84DA  C9                       ret
     254.  00:84DB                      
     255.  00:84DB                      
     256.  00:84DB                      ;ret
     257.  00:84DB                      ;  a -      xxxxxMxx
     258.  00:84DB                      check_4th_keyboard_row:
     259.  00:84DB  F3                       di
     260.  00:84DC  DB AA                    in    a,(#aa)
     261.  00:84DE  E6 F0                    and    #f0
     262.  00:84E0  F6 04                    or    4
     263.  00:84E2  D3 AA                    out    (#aa),a
     264.  00:84E4  DB A9                    in    a,(#a9)
     265.  00:84E6  FB                       ei
     266.  00:84E7  2F                       cpl
     267.  00:84E8                      
     268.  00:84E8  C9                       ret
     269.  00:84E9                      
     270.  00:84E9                      ;--------------------------------------------
     271.  00:84E9                      
     272.  00:84E9                      
     273.  00:84E9                      
     274.  00:84E9                      
     275.  00:84E9                      
     276.  00:84E9                      
     277.  00:84E9                      
     278.  00:84E9                      
     109   00:84E9                      	
     110   00:84E9                      	include "subr_sonido.asm"
       1.  00:84E9                      
       2.  00:84E9                      ;;=====================================================
       3.  00:84E9                      ;;SUBRUTINAS PARA SONIDOS
       4.  00:84E9                      ;;=====================================================	
       5.  00:84E9                      
       6.  00:84E9                      ;;=====================================================
       7.  00:84E9                      ;;INICIALIZA_REPLAYER_EFECTOS_INTERRUPCIONES
       8.  00:84E9                      ;;=====================================================	
       9.  00:84E9                      ; función: 	inicializa: replayer de música, player de efectos e interrupciones
      10.  00:84E9                      ; entrada: 	-
      11.  00:84E9                      ; salida: 	-
      12.  00:84E9                      ; toca: 	HL, A
      13.  00:84E9                      inicializa_replayer_efectos_interrupciones:
      14.  00:84E9  F3                  	DI
      15.  00:84EA                      
      16.  00:84EA                      	;inicializacion de replayer musical
      17.  00:84EA  21 92 8B            	LD		HL, song-99			; hl <- initial address of module - 99
      18.  00:84ED  CD 29 85            	CALL	PT3_INIT			; Inits PT3 player
      19.  00:84F0                      		
      20.  00:84F0                      	;inicializacion del reproductor de efectos sonoros
      21.  00:84F0  21 5D 95            	LD		HL, sfx_bank
      22.  00:84F3  CD 18 8B            	CALL	ayFX_SETUP
      23.  00:84F6                      	
      24.  00:84F6                      	;Engancha nuestra rutina de servicio al gancha que deja preparado la BIOS cuando se termina de pintar la pantalla (50 o 60 veces por segundo)
      25.  00:84F6  3E C3               	LD		A, #C3
      26.  00:84F8  32 9F FD            	LD		[H.TIMI], A
      27.  00:84FB  21 03 85            	LD		HL, subrutina_isr
      28.  00:84FE  22 A0 FD            	LD		[H.TIMI+1], HL
      29.  00:8501                      	
      30.  00:8501  FB                  	EI		;optimizacion:
      31.  00:8502                      			;piensa que las dos ultimas lineas podrian haber sido: 
      32.  00:8502                      			;ei						;primero ei
      33.  00:8502                      			;ld		[H.TIMI+1],hl	;luego este ld
      34.  00:8502                      									;PENSAR (y consultar ) PORQUE!!!!
      35.  00:8502                      fin_inicializa_replayer_efectos_interrupciones:
      36.  00:8502  C9                  	RET
      37.  00:8503                      
      38.  00:8503                      
      39.  00:8503                      
      40.  00:8503                      ;;=====================================================
      41.  00:8503                      ;;NUESTRA_ISR
      42.  00:8503                      ;;=====================================================	
      43.  00:8503                      ; función: 	envía datos al PSG + toca un trozo de música + toca trozo de 
      44.  00:8503                      ; entrada: 	-
      45.  00:8503                      ; salida: 	-
      46.  00:8503                      ; toca: 	HL, A
      47.  00:8503                      subrutina_isr:
      48.  00:8503  CD 6E 8A            	CALL	PT3_ROUT			;envia los datos a los registros del PSG
      49.  00:8506  CD 76 89            	CALL	PT3_PLAY			;calcula el siguiente 'trocito' de musica que sera enviado al proxima vez
      50.  00:8509  C3 60 8B            	JP		ayFX_PLAY			;calcula el siguiente 'trocito' de efecto especial de sonido que sera enviado la proxima vez
      51.  00:850C                      fin_subrutina_isr:
      52.  00:850C                      	;RET
      53.  00:850C                      
      54.  00:850C                      
      55.  00:850C                      
      56.  00:850C                      ;;=====================================================
      57.  00:850C                      ;;DEFINICIÓN DE SUBRUTINAS DE FERNANDO PARA COMPRESIÓN Y SONIDO
      58.  00:850C                      ;;=====================================================
      59.  00:850C                      subrutinas_sonido:
      60.  00:850C                      	include	"PT3-ROM_sjasm.asm"
       1:  00:850C                      		; --- PT3 REPLAYER WORKING ON ROM ---
       2:  00:850C                      		; --- Can be assembled with asMSX ---
       3:  00:850C                      		; --- ROM version: MSX-KUN        ---
       4:  00:850C                      		; --- asMSX version 2: SapphiRe   ---
       5:  00:850C                      
       6:  00:850C                      ; Based on MSX full version of PT3 by Dioniso
       7:  00:850C                      ;
       8:  00:850C                      ; This version of the replayer can be used with any note table
       9:  00:850C                      ; This version also allows the use of PT3 commands
      10:  00:850C                      ; First 99 bytes of each PT3 module should be stripped off
      11:  00:850C                      ;
      12:  00:850C                      ; PLAY and PSG WRITE routines seperated to allow independent calls
      13:  00:850C                      ;
      14:  00:850C                      ; ROM LENGTH: 1549 bytes
      15:  00:850C                      ; RAM LENGTH:  576 bytes
      16:  00:850C                      
      17:  00:850C                      
      18:  00:850C                      
      19:  00:850C                      ;SJASM version by BTV 2016
      20:  00:850C                      
      21:  00:850C                      
      22:  00:850C                      		; --- CONSTANT VALUES DEFINITION ---
      23:  00:850C                      
      24:  00:850C                      ;ChannelsVars
      25:  00:850C                      ;struc	CHNPRM
      26:  00:850C                      ;reset group
      27:  00:850C  (00:0000)           CHNPRM_PsInOr	equ 0	;RESB 1
      28:  00:850C  (00:0001)           CHNPRM_PsInSm	equ 1	;RESB 1
      29:  00:850C  (00:0002)           CHNPRM_CrAmSl	equ 2	;RESB 1
      30:  00:850C  (00:0003)           CHNPRM_CrNsSl	equ 3	;RESB 1
      31:  00:850C  (00:0004)           CHNPRM_CrEnSl	equ 4	;RESB 1
      32:  00:850C  (00:0005)           CHNPRM_TSlCnt	equ 5	;RESB 1
      33:  00:850C  (00:0006)           CHNPRM_CrTnSl	equ 6	;RESW 1
      34:  00:850C  (00:0008)           CHNPRM_TnAcc	equ 8	;RESW 1
      35:  00:850C  (00:000A)           CHNPRM_COnOff	equ 10	;RESB 1
      36:  00:850C                      ;reset group
      37:  00:850C                      
      38:  00:850C  (00:000B)           CHNPRM_OnOffD	equ 11	;RESB 1
      39:  00:850C                      
      40:  00:850C                      ;IX for PTDECOD here [+12]
      41:  00:850C  (00:000C)           CHNPRM_OffOnD	equ 12	;RESB 1
      42:  00:850C  (00:000D)           CHNPRM_OrnPtr	equ 13	;RESW 1
      43:  00:850C  (00:000F)           CHNPRM_SamPtr	equ 15	;RESW 1
      44:  00:850C  (00:0011)           CHNPRM_NNtSkp	equ 17	;RESB 1
      45:  00:850C  (00:0012)           CHNPRM_Note	equ 18	;RESB 1
      46:  00:850C  (00:0013)           CHNPRM_SlToNt	equ 19	;RESB 1
      47:  00:850C  (00:0014)           CHNPRM_Env_En	equ 20	;RESB 1
      48:  00:850C  (00:0015)           CHNPRM_Flags	equ 21	;RESB 1
      49:  00:850C                       ;Enabled - 0,SimpleGliss - 2
      50:  00:850C  (00:0016)           CHNPRM_TnSlDl	equ 22	;RESB 1
      51:  00:850C  (00:0017)           CHNPRM_TSlStp	equ 23	;RESW 1
      52:  00:850C  (00:0019)           CHNPRM_TnDelt	equ 25	;RESW 1
      53:  00:850C  (00:001B)           CHNPRM_NtSkCn	equ 27	;RESB 1
      54:  00:850C  (00:001C)           CHNPRM_Volume	equ 28	;RESB 1
      55:  00:850C  (00:001D)           CHNPRM_Size	equ 29	;RESB 1
      56:  00:850C                      ;endstruc
      57:  00:850C                      
      58:  00:850C                      ;struc	AR
      59:  00:850C  (00:0000)           AR_TonA		equ 0	;RESW 1
      60:  00:850C  (00:0002)           AR_TonB		equ 2	;RESW 1
      61:  00:850C  (00:0004)           AR_TonC		equ 4	;RESW 1
      62:  00:850C  (00:0006)           AR_Noise	equ 6	;RESB 1
      63:  00:850C  (00:0007)           AR_Mixer	equ 7	;RESB 1
      64:  00:850C  (00:0008)           AR_AmplA	equ 8	;RESB 1
      65:  00:850C  (00:0009)           AR_AmplB	equ 9	;RESB 1
      66:  00:850C  (00:000A)           AR_AmplC	equ 10	;RESB 1
      67:  00:850C  (00:000B)           AR_Env		equ 11	;RESW 1
      68:  00:850C  (00:000D)           AR_EnvTp	equ 13	;RESB 1
      69:  00:850C                      ;endstruc
      70:  00:850C                      
      71:  00:850C                      		; --- CODE STARTS HERE ---
      72:  00:850C                      
      73:  00:850C  21 00 F0            CHECKLP:	LD	HL,PT3_SETUP
      74:  00:850F  CB FE               		SET	7,[HL]
      75:  00:8511  CB 46               		BIT	0,[HL]
      76:  00:8513  C8                  		RET	Z
      77:  00:8514  E1                  		POP	HL
      78:  00:8515  21 7A F0            		LD	HL,DelyCnt
      79:  00:8518  34                  		INC	[HL]
      80:  00:8519  21 3E F0            		LD	HL,ChanA+CHNPRM_NtSkCn
      81:  00:851C  34                  		INC	[HL]
      82:  00:851D  AF                  PT3_MUTE:	XOR	A
      83:  00:851E  67                  		LD	H,A
      84:  00:851F  6F                  		LD	L,A
      85:  00:8520  32 48 F1            		LD	[AYREGS+AR_AmplA],A
      86:  00:8523  22 49 F1            		LD	[AYREGS+AR_AmplB],HL
      87:  00:8526  C3 6F 8A            		JP	ROUT_A0
      88:  00:8529                      
      89:  00:8529                      PT3_INIT:	;HL - AddressOfModule - 100
      90:  00:8529  22 01 F0            		LD [PT3_MODADDR],HL
      91:  00:852C  E5                  		PUSH HL
      92:  00:852D  11 64 00            		LD DE,100
      93:  00:8530  19                  		ADD HL,DE
      94:  00:8531  7E                  		LD A,[HL]
      95:  00:8532  32 1C F0            		LD [PT3_Delay],A
      96:  00:8535  E5                  		PUSH HL
      97:  00:8536  DD E1               		POP IX
      98:  00:8538  19                  		ADD HL,DE
      99:  00:8539  22 03 F0            		LD [PT3_CrPsPtr],HL
     100:  00:853C  DD 5E 02            		LD E,[IX+102-100]
     101:  00:853F  19                  		ADD HL,DE
     102:  00:8540  23                  		INC HL
     103:  00:8541  22 18 F0            		LD [PT3_LPosPtr],HL
     104:  00:8544  D1                  		POP DE
     105:  00:8545  DD 6E 03            		LD L,[IX+103-100]
     106:  00:8548  DD 66 04            		LD H,[IX+104-100]
     107:  00:854B  19                  		ADD HL,DE
     108:  00:854C  22 1A F0            		LD [PT3_PatsPtr],HL
     109:  00:854F  21 A9 00            		LD HL,169
     110:  00:8552  19                  		ADD HL,DE
     111:  00:8553  22 07 F0            		LD [PT3_OrnPtrs],HL
     112:  00:8556  21 69 00            		LD HL,105
     113:  00:8559  19                  		ADD HL,DE
     114:  00:855A  22 05 F0            		LD [PT3_SAMPTRS],HL
     115:  00:855D  21 00 F0            		LD HL,PT3_SETUP
     116:  00:8560  CB BE               		RES 7,[HL]
     117:  00:8562                      
     118:  00:8562                      		; --- note table data depacker ---
     119:  00:8562                      		; Depacks first 12 tones of each tone table
     120:  00:8562                      
     121:  00:8562  11 E3 8A            		LD DE,T_PACK
     122:  00:8565  01 B1 F1            		LD BC,T1_+(2*49)-1
     123:  00:8568  1A                  .TP_0:		LD A,[DE]
     124:  00:8569  13                  		INC DE
     125:  00:856A  FE 1E               		CP 15*2
     126:  00:856C  30 06               		JR NC,.TP_1
     127:  00:856E  67                  		LD H,A
     128:  00:856F  1A                  		LD A,[DE]
     129:  00:8570  6F                  		LD L,A
     130:  00:8571  13                  		INC DE
     131:  00:8572  18 07               		JR .TP_2
     132:  00:8574  D5                  .TP_1:		PUSH DE
     133:  00:8575  16 00               		LD D,0
     134:  00:8577  5F                  		LD E,A
     135:  00:8578  19                  		ADD HL,DE
     136:  00:8579  19                  		ADD HL,DE
     137:  00:857A  D1                  		POP DE
     138:  00:857B  7C                  .TP_2:		LD A,H
     139:  00:857C  02                  		LD [BC],A
     140:  00:857D  0B                  		DEC BC
     141:  00:857E  7D                  		LD A,L
     142:  00:857F  02                  		LD [BC],A
     143:  00:8580  0B                  		DEC BC
     144:  00:8581  D6 F0               		SUB $F0
     145:  00:8583  20 E3               		JR NZ,.TP_0
     146:  00:8585                      
     147:  00:8585                      		; --- INITIALIZE PT3 VARIABLES ---
     148:  00:8585  21 23 F0            		LD HL,VARS
     149:  00:8588  77                  		LD [HL],A
     150:  00:8589  11 24 F0            		LD DE,VARS+1
     151:  00:858C  01 2C 01            		LD BC,VAR0END-VARS-1
     152:  00:858F  ED B0               		LDIR
     153:  00:8591                      
     154:  00:8591  3C                  		INC A
     155:  00:8592  32 7A F0            		LD [DelyCnt],A
     156:  00:8595  21 01 F0            		LD HL,$F001 ;H - CHNPRM_Volume, L - CHNPRM_NtSkCn
     157:  00:8598  22 3E F0            		LD [ChanA+CHNPRM_NtSkCn],HL
     158:  00:859B  22 5B F0            		LD [ChanB+CHNPRM_NtSkCn],HL
     159:  00:859E  22 78 F0            		LD [ChanC+CHNPRM_NtSkCn],HL
     160:  00:85A1                      
     161:  00:85A1  21 DF 8A            		LD HL,EMPTYSAMORN
     162:  00:85A4  22 12 F0            		LD [PT3_AdInPtA],HL ;ptr to zero
     163:  00:85A7  22 30 F0            		LD [ChanA+CHNPRM_OrnPtr],HL ;ornament 0 is "0,1,0"
     164:  00:85AA  22 4D F0            		LD [ChanB+CHNPRM_OrnPtr],HL ;in all versions from
     165:  00:85AD  22 6A F0            		LD [ChanC+CHNPRM_OrnPtr],HL ;3.xx to 3.6x and VTII
     166:  00:85B0                      
     167:  00:85B0  22 32 F0            		LD [ChanA+CHNPRM_SamPtr],HL ;S1 There is no default
     168:  00:85B3  22 4F F0            		LD [ChanB+CHNPRM_SamPtr],HL ;S2 sample in PT3, so, you
     169:  00:85B6  22 6C F0            		LD [ChanC+CHNPRM_SamPtr],HL ;S3 can comment S1,2,3; see
     170:  00:85B9                      					    ;also EMPTYSAMORN comment
     171:  00:85B9                      
     172:  00:85B9                      		; --- NOTE TABLE CREATOR (c) Ivan Roshin, adapted by SapphiRe ---
     173:  00:85B9  DD 7E FF            		LD A,[IX+99-100] ;TONE TABLE NUMBER
     174:  00:85BC  17                  		RLA
     175:  00:85BD  E6 07               		AND 7
     176:  00:85BF  21 8F 8A            		LD HL,NT_DATA
     177:  00:85C2  D5                  		PUSH DE
     178:  00:85C3  50                  		LD D,B		; ld d,0 (bc is 0000 after LDIR)
     179:  00:85C4  87                  		ADD A,A
     180:  00:85C5  5F                  		LD E,A
     181:  00:85C6  19                  		ADD HL,DE	; hl -> init of correct note table data
     182:  00:85C7  5E                  		LD E,[HL]
     183:  00:85C8  23                  		INC HL
     184:  00:85C9  CB 3B               		SRL E
     185:  00:85CB  9F                  		SBC A,A
     186:  00:85CC  E6 A7               		AND $A7			;$00 (NOP) or $A7 (AND A)
     187:  00:85CE  32 21 F0            		LD [PT3_NTL3],A		; CORRECT INSTRUCTION, DEPENDS OF SELECTED TABLE
     188:  00:85D1  3E C9               		LD A,$C9		; RET CODE
     189:  00:85D3  32 22 F0            		LD [PT3_NTL3+1],A	; RET PLACED
     190:  00:85D6  EB                  		EX DE,HL
     191:  00:85D7  C1                  		POP BC ;BC=T1_
     192:  00:85D8  09                  		ADD HL,BC
     193:  00:85D9                      
     194:  00:85D9  1A                  		LD A,[DE]                           
     195:  00:85DA                      
     196:  00:85DA  01 9F 8A            		LD BC,T_
     197:  00:85DD  81                  		ADD A,C
     198:  00:85DE  4F                  		LD C,A
     199:  00:85DF  88                  		ADC A,B
     200:  00:85E0                      
     201:  00:85E0  91                  		SUB C
     202:  00:85E1  47                  		LD B,A
     203:  00:85E2  C5                  		PUSH BC
     204:  00:85E3  11 80 F0            		LD DE,NT_
     205:  00:85E6  D5                  		PUSH DE
     206:  00:85E7                      
     207:  00:85E7  06 0C               		LD B,12
     208:  00:85E9  C5                  .L1:		PUSH BC
     209:  00:85EA  4E                  		LD C,[HL]
     210:  00:85EB  23                  		INC HL
     211:  00:85EC  E5                  		PUSH HL
     212:  00:85ED  46                  		LD B,[HL]
     213:  00:85EE                      
     214:  00:85EE  D5                  		PUSH DE
     215:  00:85EF  EB                  		EX DE,HL
     216:  00:85F0  11 17 00            		LD DE,23
     217:  00:85F3  DD 26 08            		db $DD,$26,$08	;LD XH,8
     218:  00:85F6                      
     219:  00:85F6  CB 38               .L2:		SRL B
     220:  00:85F8  CB 19               		RR C
     221:  00:85FA  CD 21 F0            .L3:		CALL PT3_NTL3	;AND A or NOP
     222:  00:85FD  79                  		LD A,C
     223:  00:85FE  8A                  		ADC A,D	;=ADC 0
     224:  00:85FF  77                  		LD [HL],A
     225:  00:8600  23                  		INC HL
     226:  00:8601  78                  		LD A,B
     227:  00:8602  8A                  		ADC A,D
     228:  00:8603  77                  		LD [HL],A
     229:  00:8604  19                  		ADD HL,DE
     230:  00:8605  DD 25               		db $DD,$25	;DEC XH
     231:  00:8607  20 ED               		JR NZ,.L2
     232:  00:8609                      
     233:  00:8609  D1                  		POP DE
     234:  00:860A  13                  		INC DE
     235:  00:860B  13                  		INC DE
     236:  00:860C  E1                  		POP HL
     237:  00:860D  23                  		INC HL
     238:  00:860E  C1                  		POP BC
     239:  00:860F  10 D8               		DJNZ .L1
     240:  00:8611                      
     241:  00:8611  E1                  		POP HL
     242:  00:8612  D1                  		POP DE
     243:  00:8613                      
     244:  00:8613  7B                  		LD A,E
     245:  00:8614  D5                  		PUSH DE
     246:  00:8615  11 AB 8A            		LD DE,TCOLD_1
     247:  00:8618  BB                  		CP E
     248:  00:8619  D1                  		POP DE
     249:  00:861A  20 05               		JR NZ,.CORR_1
     250:  00:861C  3E FD               		LD A,$FD
     251:  00:861E  32 AE F0            		LD [NT_+$2E],A
     252:  00:8621                      
     253:  00:8621  1A                  .CORR_1:	LD A,[DE]
     254:  00:8622  A7                  		AND A
     255:  00:8623  28 11               		JR Z,.TC_EXIT
     256:  00:8625  1F                  		RRA
     257:  00:8626  F5                  		PUSH AF
     258:  00:8627  87                  		ADD A,A
     259:  00:8628  4F                  		LD C,A
     260:  00:8629  09                  		ADD HL,BC
     261:  00:862A  F1                  		POP AF
     262:  00:862B  30 02               		JR NC,.CORR_2
     263:  00:862D  35                  		DEC [HL]
     264:  00:862E  35                  		DEC [HL]
     265:  00:862F  34                  .CORR_2:	INC [HL]
     266:  00:8630  A7                  		AND A
     267:  00:8631  ED 42               		SBC HL,BC
     268:  00:8633  13                  		INC DE
     269:  00:8634  18 EB               		JR .CORR_1
     270:  00:8636                      
     271:  00:8636                      .TC_EXIT:	;POP AF
     272:  00:8636                      
     273:  00:8636                      		; --- CREATE PT3 VOLUME TABLE (c) Ivan Roshin, adapted by SapphiRe ---
     274:  00:8636  21 11 00            		ld	hl,$11
     275:  00:8639  54                  		ld	d,h
     276:  00:863A  5C                  		ld	e,h
     277:  00:863B  DD 21 50 F1         		ld	IX,VT_+16
     278:  00:863F  06 0F               		ld	b,15
     279:  00:8641  E5                  .INITV1:	push	hl
     280:  00:8642  19                  		add	hl,de
     281:  00:8643  EB                  		ex	de,hl
     282:  00:8644  ED 62               		sbc	hl,hl
     283:  00:8646  48                  		ld	c,b
     284:  00:8647  06 10               		ld	b,16
     285:  00:8649  7D                  .INITV2:	ld	a,l
     286:  00:864A  17                  		rla
     287:  00:864B  7C                  		ld	a,h
     288:  00:864C  CE 00               		adc	a,0
     289:  00:864E  DD 77 00            		ld	[ix],a
     290:  00:8651  DD 23               		inc	ix
     291:  00:8653  19                  		add	hl,de
     292:  00:8654  10 F3               		djnz	.INITV2
     293:  00:8656  E1                  		pop	hl
     294:  00:8657  7B                  		ld	a,e
     295:  00:8658  FE 77               		cp	$77
     296:  00:865A  20 01               		jr	nz,.INITV3
     297:  00:865C  1C                  		inc	e
     298:  00:865D  41                  .INITV3:	ld	b,c
     299:  00:865E  10 E1               		djnz	.INITV1
     300:  00:8660                      
     301:  00:8660  C9                  		RET
     302:  00:8661                      
     303:  00:8661                      		;pattern decoder
     304:  00:8661  DD 36 08 00         PD_OrSm:	LD [IX+(CHNPRM_Env_En-12)],0
     305:  00:8665  CD EB 87            		CALL SETORN
     306:  00:8668  0A                  		LD A,[BC]
     307:  00:8669  03                  		INC BC
     308:  00:866A  0F                  		RRCA
     309:  00:866B                      
     310:  00:866B  87                  PD_SAM:		ADD A,A
     311:  00:866C  5F                  PD_SAM_:	LD E,A
     312:  00:866D  16 00               		LD D,0
     313:  00:866F  2A 05 F0            		LD HL,[PT3_SAMPTRS]
     314:  00:8672  19                  		ADD HL,DE
     315:  00:8673  5E                  		LD E,[HL]
     316:  00:8674  23                  		INC HL
     317:  00:8675  56                  		LD D,[HL]
     318:  00:8676  2A 01 F0            		LD HL,[PT3_MODADDR]
     319:  00:8679  19                  		ADD HL,DE
     320:  00:867A  DD 75 03            		LD [IX+(CHNPRM_SamPtr-12)],L
     321:  00:867D  DD 74 04            		LD [IX+(CHNPRM_SamPtr+1-12)],H
     322:  00:8680  18 41               		JR PD_LOOP
     323:  00:8682                      
     324:  00:8682  07                  PD_VOL:		RLCA
     325:  00:8683  07                  		RLCA
     326:  00:8684  07                  		RLCA
     327:  00:8685  07                  		RLCA
     328:  00:8686  DD 77 10            		LD [IX+(CHNPRM_Volume-12)],A
     329:  00:8689  18 3B               		JR PD_LP2
     330:  00:868B                      	
     331:  00:868B  DD 77 08            PD_EOff:	LD [IX+(CHNPRM_Env_En-12)],A
     332:  00:868E  DD 77 F4            		LD [IX+(CHNPRM_PsInOr-12)],A
     333:  00:8691  18 33               		JR PD_LP2
     334:  00:8693                      
     335:  00:8693  3D                  PD_SorE:	DEC A
     336:  00:8694  20 07               		JR NZ,PD_ENV
     337:  00:8696  0A                  		LD A,[BC]
     338:  00:8697  03                  		INC BC
     339:  00:8698  DD 77 05            		LD [IX+(CHNPRM_NNtSkp-12)],A
     340:  00:869B  18 29               		JR PD_LP2
     341:  00:869D                      
     342:  00:869D  CD CF 87            PD_ENV:		CALL SETENV
     343:  00:86A0  18 24               		JR PD_LP2
     344:  00:86A2                      
     345:  00:86A2  CD EB 87            PD_ORN:		CALL SETORN
     346:  00:86A5  18 1C               		JR PD_LOOP
     347:  00:86A7                             
     348:  00:86A7  DD 77 08            PD_ESAM:	LD [IX+(CHNPRM_Env_En-12)],A
     349:  00:86AA  DD 77 F4            		LD [IX+(CHNPRM_PsInOr-12)],A
     350:  00:86AD  C4 CF 87            		CALL NZ,SETENV
     351:  00:86B0  0A                  		LD A,[BC]
     352:  00:86B1  03                  		INC BC
     353:  00:86B2  18 B8               		JR PD_SAM_
     354:  00:86B4                      
     355:  00:86B4  DD 7E 06            PTDECOD:	LD A,[IX+(CHNPRM_Note-12)]
     356:  00:86B7  32 0F F0            		LD [PT3_PrNote],A
     357:  00:86BA  DD 6E FA            		LD L,[IX+(CHNPRM_CrTnSl-12)]
     358:  00:86BD  DD 66 FB            		LD H,[IX+(CHNPRM_CrTnSl+1-12)]
     359:  00:86C0  22 10 F0            		LD [PT3_PrSlide],HL
     360:  00:86C3                      
     361:  00:86C3  11 10 20            PD_LOOP:	LD DE,$2010
     362:  00:86C6  0A                  PD_LP2:		LD A,[BC]
     363:  00:86C7  03                  		INC BC
     364:  00:86C8  83                  		ADD A,E
     365:  00:86C9  38 96               		JR C,PD_OrSm
     366:  00:86CB  82                  		ADD A,D
     367:  00:86CC  28 4A               		JR Z,PD_FIN
     368:  00:86CE  38 9B               		JR C,PD_SAM
     369:  00:86D0  83                  		ADD A,E
     370:  00:86D1  28 25               		JR Z,PD_REL
     371:  00:86D3  38 AD               		JR C,PD_VOL
     372:  00:86D5  83                  		ADD A,E
     373:  00:86D6  28 B3               		JR Z,PD_EOff
     374:  00:86D8  38 B9               		JR C,PD_SorE
     375:  00:86DA  C6 60               		ADD A,96
     376:  00:86DC  38 20               		JR C,PD_NOTE
     377:  00:86DE  83                  		ADD A,E
     378:  00:86DF  38 C1               		JR C,PD_ORN
     379:  00:86E1  82                  		ADD A,D
     380:  00:86E2  38 0F               		JR C,PD_NOIS
     381:  00:86E4  83                  		ADD A,E
     382:  00:86E5  38 C0               		JR C,PD_ESAM
     383:  00:86E7  87                  		ADD A,A
     384:  00:86E8  5F                  		LD E,A
     385:  00:86E9  21 24 67            		LD HL,(SPCCOMS+$DF20) % 65536	; Adapted from original Speccy version (saves 6 bytes)
     386:  00:86EC  19                  		ADD HL,DE
     387:  00:86ED  5E                  		LD E,[HL]
     388:  00:86EE  23                  		INC HL
     389:  00:86EF  56                  		LD D,[HL]
     390:  00:86F0  D5                  		PUSH DE
     391:  00:86F1  18 D0               		JR PD_LOOP
     392:  00:86F3                      
     393:  00:86F3  32 7E F0            PD_NOIS:	LD [Ns_Base],A
     394:  00:86F6  18 CE               		JR PD_LP2
     395:  00:86F8                      
     396:  00:86F8  DD CB 09 86         PD_REL:		RES 0,[IX+(CHNPRM_Flags-12)]
     397:  00:86FC  18 08               		JR PD_RES
     398:  00:86FE                      	
     399:  00:86FE  DD 77 06            PD_NOTE:	LD [IX+(CHNPRM_Note-12)],A
     400:  00:8701  DD CB 09 C6         		SET 0,[IX+(CHNPRM_Flags-12)]
     401:  00:8705  AF                  		XOR A
     402:  00:8706                      
     403:  00:8706  ED 73 09 F0         PD_RES:		LD [PT3_PDSP],SP
     404:  00:870A  DD F9               		LD SP,IX
     405:  00:870C  67                  		LD H,A
     406:  00:870D  6F                  		LD L,A
     407:  00:870E  E5                  		PUSH HL
     408:  00:870F  E5                  		PUSH HL
     409:  00:8710  E5                  		PUSH HL
     410:  00:8711  E5                  		PUSH HL
     411:  00:8712  E5                  		PUSH HL
     412:  00:8713  E5                  		PUSH HL
     413:  00:8714  ED 7B 09 F0         		LD SP,[PT3_PDSP]
     414:  00:8718                      
     415:  00:8718  DD 7E 05            PD_FIN:		LD A,[IX+(CHNPRM_NNtSkp-12)]
     416:  00:871B  DD 77 0F            		LD [IX+(CHNPRM_NtSkCn-12)],A
     417:  00:871E  C9                  		RET
     418:  00:871F                      
     419:  00:871F  DD CB 09 96         C_PORTM:	RES 2,[IX+(CHNPRM_Flags-12)]
     420:  00:8723  0A                  		LD A,[BC]
     421:  00:8724  03                  		INC BC
     422:  00:8725                      		;SKIP PRECALCULATED TONE DELTA [BECAUSE
     423:  00:8725                      		;CANNOT BE RIGHT AFTER PT3 COMPILATION]
     424:  00:8725  03                  		INC BC
     425:  00:8726  03                  		INC BC
     426:  00:8727  DD 77 0A            		LD [IX+(CHNPRM_TnSlDl-12)],A
     427:  00:872A  DD 77 F9            		LD [IX+(CHNPRM_TSlCnt-12)],A
     428:  00:872D  11 80 F0            		LD DE,NT_
     429:  00:8730  DD 7E 06            		LD A,[IX+(CHNPRM_Note-12)]
     430:  00:8733  DD 77 07            		LD [IX+(CHNPRM_SlToNt-12)],A
     431:  00:8736  87                  		ADD A,A
     432:  00:8737  6F                  		LD L,A
     433:  00:8738  26 00               		LD H,0
     434:  00:873A  19                  		ADD HL,DE
     435:  00:873B  7E                  		LD A,[HL]
     436:  00:873C  23                  		INC HL
     437:  00:873D  66                  		LD H,[HL]
     438:  00:873E  6F                  		LD L,A
     439:  00:873F  E5                  		PUSH HL
     440:  00:8740  3A 0F F0            		LD A,[PT3_PrNote]
     441:  00:8743  DD 77 06            		LD [IX+(CHNPRM_Note-12)],A
     442:  00:8746  87                  		ADD A,A
     443:  00:8747  6F                  		LD L,A
     444:  00:8748  26 00               		LD H,0
     445:  00:874A  19                  		ADD HL,DE
     446:  00:874B  5E                  		LD E,[HL]
     447:  00:874C  23                  		INC HL
     448:  00:874D  56                  		LD D,[HL]
     449:  00:874E  E1                  		POP HL
     450:  00:874F  ED 52               		SBC HL,DE
     451:  00:8751  DD 75 0D            		LD [IX+(CHNPRM_TnDelt-12)],L
     452:  00:8754  DD 74 0E            		LD [IX+(CHNPRM_TnDelt+1-12)],H
     453:  00:8757  ED 5B 10 F0         		LD DE,[PT3_PrSlide]
     454:  00:875B  DD 73 FA            		LD [IX+(CHNPRM_CrTnSl-12)],E
     455:  00:875E  DD 72 FB            		LD [IX+(CHNPRM_CrTnSl+1-12)],D
     456:  00:8761  0A                  		LD A,[BC] ;SIGNED TONE STEP
     457:  00:8762  03                  		INC BC
     458:  00:8763  08                  		EX AF,AF'
     459:  00:8764  0A                  		LD A,[BC]
     460:  00:8765  03                  		INC BC
     461:  00:8766  A7                  		AND A
     462:  00:8767  28 01               		JR Z,.NOSIG
     463:  00:8769  EB                  		EX DE,HL
     464:  00:876A  ED 52               .NOSIG:	SBC HL,DE
     465:  00:876C  F2 74 87            		JP P,SET_STP
     466:  00:876F  2F                  		CPL
     467:  00:8770  08                  		EX AF,AF'
     468:  00:8771  ED 44               		NEG
     469:  00:8773  08                  		EX AF,AF'
     470:  00:8774  DD 77 0C            SET_STP:	LD [IX+(CHNPRM_TSlStp+1-12)],A
     471:  00:8777  08                  		EX AF,AF'
     472:  00:8778  DD 77 0B            		LD [IX+(CHNPRM_TSlStp-12)],A
     473:  00:877B  DD 36 FE 00         		LD [IX+(CHNPRM_COnOff-12)],0
     474:  00:877F  C9                  		RET
     475:  00:8780                      
     476:  00:8780  DD CB 09 D6         C_GLISS:	SET 2,[IX+(CHNPRM_Flags-12)]
     477:  00:8784  0A                  		LD A,[BC]
     478:  00:8785  03                  		INC BC
     479:  00:8786  DD 77 0A            		LD [IX+(CHNPRM_TnSlDl-12)],A
     480:  00:8789  DD 77 F9            		LD [IX+(CHNPRM_TSlCnt-12)],A
     481:  00:878C  0A                  		LD A,[BC]
     482:  00:878D  03                  		INC BC
     483:  00:878E  08                  		EX AF,AF'
     484:  00:878F  0A                  		LD A,[BC]
     485:  00:8790  03                  		INC BC
     486:  00:8791  18 E1               		JR SET_STP
     487:  00:8793                      
     488:  00:8793  0A                  C_SMPOS:	LD A,[BC]
     489:  00:8794  03                  		INC BC
     490:  00:8795  DD 77 F5            		LD [IX+(CHNPRM_PsInSm-12)],A
     491:  00:8798  C9                  		RET
     492:  00:8799                      
     493:  00:8799  0A                  C_ORPOS:	LD A,[BC]
     494:  00:879A  03                  		INC BC
     495:  00:879B  DD 77 F4            		LD [IX+(CHNPRM_PsInOr-12)],A
     496:  00:879E  C9                  		RET
     497:  00:879F                      
     498:  00:879F  0A                  C_VIBRT:	LD A,[BC]
     499:  00:87A0  03                  		INC BC
     500:  00:87A1  DD 77 FF            		LD [IX+(CHNPRM_OnOffD-12)],A
     501:  00:87A4  DD 77 FE            		LD [IX+(CHNPRM_COnOff-12)],A
     502:  00:87A7  0A                  		LD A,[BC]
     503:  00:87A8  03                  		INC BC
     504:  00:87A9  DD 77 00            		LD [IX+(CHNPRM_OffOnD-12)],A
     505:  00:87AC  AF                  		XOR A
     506:  00:87AD  DD 77 F9            		LD [IX+(CHNPRM_TSlCnt-12)],A
     507:  00:87B0  DD 77 FA            		LD [IX+(CHNPRM_CrTnSl-12)],A
     508:  00:87B3  DD 77 FB            		LD [IX+(CHNPRM_CrTnSl+1-12)],A
     509:  00:87B6  C9                  		RET
     510:  00:87B7                      
     511:  00:87B7  0A                  C_ENGLS:	LD A,[BC]
     512:  00:87B8  03                  		INC BC
     513:  00:87B9  32 1E F0            		LD [PT3_Env_Del],A
     514:  00:87BC  32 7D F0            		LD [CurEDel],A
     515:  00:87BF  0A                  		LD A,[BC]
     516:  00:87C0  03                  		INC BC
     517:  00:87C1  6F                  		LD L,A
     518:  00:87C2  0A                  		LD A,[BC]
     519:  00:87C3  03                  		INC BC
     520:  00:87C4  67                  		LD H,A
     521:  00:87C5  22 1F F0            		LD [PT3_ESldAdd],HL
     522:  00:87C8  C9                  		RET
     523:  00:87C9                      
     524:  00:87C9  0A                  C_DELAY:	LD A,[BC]
     525:  00:87CA  03                  		INC BC
     526:  00:87CB  32 1C F0            		LD [PT3_Delay],A
     527:  00:87CE  C9                  		RET
     528:  00:87CF                      	
     529:  00:87CF  DD 73 08            SETENV:		LD [IX+(CHNPRM_Env_En-12)],E
     530:  00:87D2  32 4D F1            		LD [AYREGS+AR_EnvTp],A
     531:  00:87D5  0A                  		LD A,[BC]
     532:  00:87D6  03                  		INC BC
     533:  00:87D7  67                  		LD H,A
     534:  00:87D8  0A                  		LD A,[BC]
     535:  00:87D9  03                  		INC BC
     536:  00:87DA  6F                  		LD L,A
     537:  00:87DB  22 4E F1            		LD [EnvBase],HL
     538:  00:87DE  AF                  		XOR A
     539:  00:87DF  DD 77 F4            		LD [IX+(CHNPRM_PsInOr-12)],A
     540:  00:87E2  32 7D F0            		LD [CurEDel],A
     541:  00:87E5  67                  		LD H,A
     542:  00:87E6  6F                  		LD L,A
     543:  00:87E7  22 7B F0            		LD [CurESld],HL
     544:  00:87EA  C9                  C_NOP:		RET
     545:  00:87EB                      
     546:  00:87EB  87                  SETORN:		ADD A,A
     547:  00:87EC  5F                  		LD E,A
     548:  00:87ED  16 00               		LD D,0
     549:  00:87EF  DD 72 F4            		LD [IX+(CHNPRM_PsInOr-12)],D
     550:  00:87F2  2A 07 F0            		LD HL,[PT3_OrnPtrs]
     551:  00:87F5  19                  		ADD HL,DE
     552:  00:87F6  5E                  		LD E,[HL]
     553:  00:87F7  23                  		INC HL
     554:  00:87F8  56                  		LD D,[HL]
     555:  00:87F9  2A 01 F0            		LD HL,[PT3_MODADDR]
     556:  00:87FC  19                  		ADD HL,DE
     557:  00:87FD  DD 75 01            		LD [IX+(CHNPRM_OrnPtr-12)],L
     558:  00:8800  DD 74 02            		LD [IX+(CHNPRM_OrnPtr+1-12)],H
     559:  00:8803  C9                  		RET
     560:  00:8804                      
     561:  00:8804                      		;ALL 16 ADDRESSES TO PROTECT FROM BROKEN PT3 MODULES
     562:  00:8804  EA 87               SPCCOMS:	dw C_NOP
     563:  00:8806  80 87               		dw C_GLISS
     564:  00:8808  1F 87               		dw C_PORTM
     565:  00:880A  93 87               		dw C_SMPOS
     566:  00:880C  99 87               		dw C_ORPOS
     567:  00:880E  9F 87               		dw C_VIBRT
     568:  00:8810  EA 87               		dw C_NOP
     569:  00:8812  EA 87               		dw C_NOP
     570:  00:8814  B7 87               		dw C_ENGLS
     571:  00:8816  C9 87               		dw C_DELAY
     572:  00:8818  EA 87               		dw C_NOP
     573:  00:881A  EA 87               		dw C_NOP
     574:  00:881C  EA 87               		dw C_NOP
     575:  00:881E  EA 87               		dw C_NOP
     576:  00:8820  EA 87               		dw C_NOP
     577:  00:8822  EA 87               		dw C_NOP
     578:  00:8824                      
     579:  00:8824  AF                  CHREGS:		XOR A
     580:  00:8825  32 4A F1            		LD [AYREGS+AR_AmplC],A
     581:  00:8828  DD CB 15 46         		BIT 0,[IX+CHNPRM_Flags]
     582:  00:882C  E5                  		PUSH HL
     583:  00:882D  CA 53 89            		JP Z,.CH_EXIT
     584:  00:8830  ED 73 0B F0         		LD [PT3_CSP],SP
     585:  00:8834  DD 6E 0D            		LD L,[IX+CHNPRM_OrnPtr]
     586:  00:8837  DD 66 0E            		LD H,[IX+CHNPRM_OrnPtr+1]
     587:  00:883A  F9                  		LD SP,HL
     588:  00:883B  D1                  		POP DE
     589:  00:883C  67                  		LD H,A
     590:  00:883D  DD 7E 00            		LD A,[IX+CHNPRM_PsInOr]
     591:  00:8840  6F                  		LD L,A
     592:  00:8841  39                  		ADD HL,SP
     593:  00:8842  3C                  		INC A
     594:  00:8843  BA                  		CP D
     595:  00:8844  38 01               		JR C,.CH_ORPS
     596:  00:8846  7B                  		LD A,E
     597:  00:8847  DD 77 00            .CH_ORPS:	LD [IX+CHNPRM_PsInOr],A
     598:  00:884A  DD 7E 12            		LD A,[IX+CHNPRM_Note]
     599:  00:884D  86                  		ADD A,[HL]
     600:  00:884E  F2 52 88            		JP P,.CH_NTP
     601:  00:8851  AF                  		XOR A
     602:  00:8852  FE 60               .CH_NTP:	CP 96
     603:  00:8854  38 02               		JR C,.CH_NOK
     604:  00:8856  3E 5F               		LD A,95
     605:  00:8858  87                  .CH_NOK:	ADD A,A
     606:  00:8859  08                  		EX AF,AF'
     607:  00:885A  DD 6E 0F            		LD L,[IX+CHNPRM_SamPtr]
     608:  00:885D  DD 66 10            		LD H,[IX+CHNPRM_SamPtr+1]
     609:  00:8860  F9                  		LD SP,HL
     610:  00:8861  D1                  		POP DE
     611:  00:8862  26 00               		LD H,0
     612:  00:8864  DD 7E 01            		LD A,[IX+CHNPRM_PsInSm]
     613:  00:8867  47                  		LD B,A
     614:  00:8868  87                  		ADD A,A
     615:  00:8869  87                  		ADD A,A
     616:  00:886A  6F                  		LD L,A
     617:  00:886B  39                  		ADD HL,SP
     618:  00:886C  F9                  		LD SP,HL
     619:  00:886D  78                  		LD A,B
     620:  00:886E  3C                  		INC A
     621:  00:886F  BA                  		CP D
     622:  00:8870  38 01               		JR C,.CH_SMPS
     623:  00:8872  7B                  		LD A,E
     624:  00:8873  DD 77 01            .CH_SMPS:	LD [IX+CHNPRM_PsInSm],A
     625:  00:8876  C1                  		POP BC
     626:  00:8877  E1                  		POP HL
     627:  00:8878  DD 5E 08            		LD E,[IX+CHNPRM_TnAcc]
     628:  00:887B  DD 56 09            		LD D,[IX+CHNPRM_TnAcc+1]
     629:  00:887E  19                  		ADD HL,DE
     630:  00:887F  CB 70               		BIT 6,B
     631:  00:8881  28 06               		JR Z,.CH_NOAC
     632:  00:8883  DD 75 08            		LD [IX+CHNPRM_TnAcc],L
     633:  00:8886  DD 74 09            		LD [IX+CHNPRM_TnAcc+1],H
     634:  00:8889  EB                  .CH_NOAC:	EX DE,HL
     635:  00:888A  08                  		EX AF,AF'
     636:  00:888B  6F                  		LD L,A
     637:  00:888C  26 00               		LD H,0
     638:  00:888E  31 80 F0            		LD SP,NT_
     639:  00:8891  39                  		ADD HL,SP
     640:  00:8892  F9                  		LD SP,HL
     641:  00:8893  E1                  		POP HL
     642:  00:8894  19                  		ADD HL,DE
     643:  00:8895  DD 5E 06            		LD E,[IX+CHNPRM_CrTnSl]
     644:  00:8898  DD 56 07            		LD D,[IX+CHNPRM_CrTnSl+1]
     645:  00:889B  19                  		ADD HL,DE
     646:  00:889C  ED 7B 0B F0         		LD SP,[PT3_CSP]
     647:  00:88A0  E3                  		EX [SP],HL
     648:  00:88A1  AF                  		XOR A
     649:  00:88A2  DD B6 05            		OR [IX+CHNPRM_TSlCnt]
     650:  00:88A5  28 3E               		JR Z,.CH_AMP
     651:  00:88A7  DD 35 05            		DEC [IX+CHNPRM_TSlCnt]
     652:  00:88AA  20 39               		JR NZ,.CH_AMP
     653:  00:88AC  DD 7E 16            		LD A,[IX+CHNPRM_TnSlDl]
     654:  00:88AF  DD 77 05            		LD [IX+CHNPRM_TSlCnt],A
     655:  00:88B2  DD 6E 17            		LD L,[IX+CHNPRM_TSlStp]
     656:  00:88B5  DD 66 18            		LD H,[IX+CHNPRM_TSlStp+1]
     657:  00:88B8  7C                  		LD A,H
     658:  00:88B9  19                  		ADD HL,DE
     659:  00:88BA  DD 75 06            		LD [IX+CHNPRM_CrTnSl],L
     660:  00:88BD  DD 74 07            		LD [IX+CHNPRM_CrTnSl+1],H
     661:  00:88C0  DD CB 15 56         		BIT 2,[IX+CHNPRM_Flags]
     662:  00:88C4  20 1F               		JR NZ,.CH_AMP
     663:  00:88C6  DD 5E 19            		LD E,[IX+CHNPRM_TnDelt]
     664:  00:88C9  DD 56 1A            		LD D,[IX+CHNPRM_TnDelt+1]
     665:  00:88CC  A7                  		AND A
     666:  00:88CD  28 01               		JR Z,.CH_STPP
     667:  00:88CF  EB                  		EX DE,HL
     668:  00:88D0  ED 52               .CH_STPP:	SBC HL,DE
     669:  00:88D2  FA E5 88            		JP M,.CH_AMP
     670:  00:88D5  DD 7E 13            		LD A,[IX+CHNPRM_SlToNt]
     671:  00:88D8  DD 77 12            		LD [IX+CHNPRM_Note],A
     672:  00:88DB  AF                  		XOR A
     673:  00:88DC  DD 77 05            		LD [IX+CHNPRM_TSlCnt],A
     674:  00:88DF  DD 77 06            		LD [IX+CHNPRM_CrTnSl],A
     675:  00:88E2  DD 77 07            		LD [IX+CHNPRM_CrTnSl+1],A
     676:  00:88E5  DD 7E 02            .CH_AMP:	LD A,[IX+CHNPRM_CrAmSl]
     677:  00:88E8  CB 79               		BIT 7,C
     678:  00:88EA  28 13               		JR Z,.CH_NOAM
     679:  00:88EC  CB 71               		BIT 6,C
     680:  00:88EE  28 07               		JR Z,.CH_AMIN
     681:  00:88F0  FE 0F               		CP 15
     682:  00:88F2  28 0B               		JR Z,.CH_NOAM
     683:  00:88F4  3C                  		INC A
     684:  00:88F5  18 05               		JR .CH_SVAM
     685:  00:88F7  FE F1               .CH_AMIN:	CP -15
     686:  00:88F9  28 04               		JR Z,.CH_NOAM
     687:  00:88FB  3D                  		DEC A
     688:  00:88FC  DD 77 02            .CH_SVAM:	LD [IX+CHNPRM_CrAmSl],A
     689:  00:88FF  6F                  .CH_NOAM:	LD L,A
     690:  00:8900  78                  		LD A,B
     691:  00:8901  E6 0F               		AND 15
     692:  00:8903  85                  		ADD A,L
     693:  00:8904  F2 08 89            		JP P,.CH_APOS
     694:  00:8907  AF                  		XOR A
     695:  00:8908  FE 10               .CH_APOS:	CP 16
     696:  00:890A  38 02               		JR C,.CH_VOL
     697:  00:890C  3E 0F               		LD A,15
     698:  00:890E  DD B6 1C            .CH_VOL:	OR [IX+CHNPRM_Volume]
     699:  00:8911  6F                  		LD L,A
     700:  00:8912  26 00               		LD H,0
     701:  00:8914  11 40 F1            		LD DE,VT_
     702:  00:8917  19                  		ADD HL,DE
     703:  00:8918  7E                  		LD A,[HL]
     704:  00:8919  CB 41               .CH_ENV:	BIT 0,C
     705:  00:891B  20 03               		JR NZ,.CH_NOEN
     706:  00:891D  DD B6 14            		OR [IX+CHNPRM_Env_En]
     707:  00:8920  32 4A F1            .CH_NOEN:	LD [AYREGS+AR_AmplC],A
     708:  00:8923  CB 78               		BIT 7,B
     709:  00:8925  79                  		LD A,C
     710:  00:8926  28 19               		JR Z,.NO_ENSL
     711:  00:8928  17                  		RLA
     712:  00:8929  17                  		RLA
     713:  00:892A  CB 2F               		SRA A
     714:  00:892C  CB 2F               		SRA A
     715:  00:892E  CB 2F               		SRA A
     716:  00:8930  DD 86 04            		ADD A,[IX+CHNPRM_CrEnSl] ;SEE COMMENT BELOW
     717:  00:8933  CB 68               		BIT 5,B
     718:  00:8935  28 03               		JR Z,.NO_ENAC
     719:  00:8937  DD 77 04            		LD [IX+CHNPRM_CrEnSl],A
     720:  00:893A  21 1D F0            .NO_ENAC:	LD HL,PT3_AddToEn
     721:  00:893D  86                  		ADD A,[HL] ;BUG IN PT3 - NEED WORD HERE.
     722:  00:893E                      			   ;FIX IT IN NEXT VERSION?
     723:  00:893E  77                  		LD [HL],A
     724:  00:893F  18 0E               		JR .CH_MIX
     725:  00:8941  1F                  .NO_ENSL:	RRA
     726:  00:8942  DD 86 03            		ADD A,[IX+CHNPRM_CrNsSl]
     727:  00:8945  32 7F F0            		LD [AddToNs],A
     728:  00:8948  CB 68               		BIT 5,B
     729:  00:894A  28 03               		JR Z,.CH_MIX
     730:  00:894C  DD 77 03            		LD [IX+CHNPRM_CrNsSl],A
     731:  00:894F  78                  .CH_MIX:	LD A,B
     732:  00:8950  1F                  		RRA
     733:  00:8951  E6 48               		AND $48
     734:  00:8953  21 47 F1            .CH_EXIT:	LD HL,AYREGS+AR_Mixer
     735:  00:8956  B6                  		OR [HL]
     736:  00:8957  0F                  		RRCA
     737:  00:8958  77                  		LD [HL],A
     738:  00:8959  E1                  		POP HL
     739:  00:895A  AF                  		XOR A
     740:  00:895B  DD B6 0A            		OR [IX+CHNPRM_COnOff]
     741:  00:895E  C8                  		RET Z
     742:  00:895F  DD 35 0A            		DEC [IX+CHNPRM_COnOff]
     743:  00:8962  C0                  		RET NZ
     744:  00:8963  DD AE 15            		XOR [IX+CHNPRM_Flags]
     745:  00:8966  DD 77 15            		LD [IX+CHNPRM_Flags],A
     746:  00:8969  1F                  		RRA
     747:  00:896A  DD 7E 0B            		LD A,[IX+CHNPRM_OnOffD]
     748:  00:896D  38 03               		JR C,.CH_ONDL
     749:  00:896F  DD 7E 0C            		LD A,[IX+CHNPRM_OffOnD]
     750:  00:8972  DD 77 0A            .CH_ONDL:	LD [IX+CHNPRM_COnOff],A
     751:  00:8975  C9                  		RET
     752:  00:8976                      
     753:  00:8976  AF                  PT3_PLAY:	XOR A
     754:  00:8977  32 1D F0            		LD [PT3_AddToEn],A
     755:  00:897A  32 47 F1            		LD [AYREGS+AR_Mixer],A
     756:  00:897D  3D                  		DEC A
     757:  00:897E  32 4D F1            		LD [AYREGS+AR_EnvTp],A
     758:  00:8981  21 7A F0            		LD HL,DelyCnt
     759:  00:8984  35                  		DEC [HL]
     760:  00:8985  C2 0C 8A            		JP NZ,.PL2
     761:  00:8988  21 3E F0            		LD HL,ChanA+CHNPRM_NtSkCn
     762:  00:898B  35                  		DEC [HL]
     763:  00:898C  20 4E               		JR NZ,.PL1B
     764:  00:898E  ED 4B 12 F0         		LD BC,[PT3_AdInPtA]
     765:  00:8992  0A                  		LD A,[BC]
     766:  00:8993  A7                  		AND A
     767:  00:8994  20 3B               		JR NZ,.PL1A
     768:  00:8996  57                  		LD D,A
     769:  00:8997  32 7E F0            		LD [Ns_Base],A
     770:  00:899A  2A 03 F0            		LD HL,[PT3_CrPsPtr]
     771:  00:899D  23                  		INC HL
     772:  00:899E  7E                  		LD A,[HL]
     773:  00:899F  3C                  		INC A
     774:  00:89A0  20 08               		JR NZ,.PLNLP
     775:  00:89A2  CD 0C 85            		CALL CHECKLP
     776:  00:89A5  2A 18 F0            		LD HL,[PT3_LPosPtr]
     777:  00:89A8  7E                  		LD A,[HL]
     778:  00:89A9  3C                  		INC A
     779:  00:89AA  22 03 F0            .PLNLP:	LD [PT3_CrPsPtr],HL
     780:  00:89AD  3D                  		DEC A
     781:  00:89AE  87                  		ADD A,A
     782:  00:89AF  5F                  		LD E,A
     783:  00:89B0  CB 12               		RL D
     784:  00:89B2  2A 1A F0            		LD HL,[PT3_PatsPtr]
     785:  00:89B5  19                  		ADD HL,DE
     786:  00:89B6  ED 5B 01 F0         		LD DE,[PT3_MODADDR]
     787:  00:89BA  ED 73 0D F0         		LD [PT3_PSP],SP
     788:  00:89BE  F9                  		LD SP,HL
     789:  00:89BF  E1                  		POP HL
     790:  00:89C0  19                  		ADD HL,DE
     791:  00:89C1  44                  		LD B,H
     792:  00:89C2  4D                  		LD C,L
     793:  00:89C3  E1                  		POP HL
     794:  00:89C4  19                  		ADD HL,DE
     795:  00:89C5  22 14 F0            		LD [PT3_AdInPtB],HL
     796:  00:89C8  E1                  		POP HL
     797:  00:89C9  19                  		ADD HL,DE
     798:  00:89CA  22 16 F0            		LD [PT3_AdInPtC],HL
     799:  00:89CD  ED 7B 0D F0         		LD SP,[PT3_PSP]
     800:  00:89D1                      
     801:  00:89D1  DD 21 2F F0         .PL1A:		LD IX,ChanA+12
     802:  00:89D5  CD B4 86            		CALL PTDECOD
     803:  00:89D8  ED 43 12 F0         		LD [PT3_AdInPtA],BC
     804:  00:89DC                      
     805:  00:89DC  21 5B F0            .PL1B:		LD HL,ChanB+CHNPRM_NtSkCn
     806:  00:89DF  35                  		DEC [HL]
     807:  00:89E0  20 0F               		JR NZ,.PL1C
     808:  00:89E2  DD 21 4C F0         		LD IX,ChanB+12
     809:  00:89E6  ED 4B 14 F0         		LD BC,[PT3_AdInPtB]
     810:  00:89EA  CD B4 86            		CALL PTDECOD
     811:  00:89ED  ED 43 14 F0         		LD [PT3_AdInPtB],BC
     812:  00:89F1                      
     813:  00:89F1  21 78 F0            .PL1C:		LD HL,ChanC+CHNPRM_NtSkCn
     814:  00:89F4  35                  		DEC [HL]
     815:  00:89F5  20 0F               		JR NZ,.PL1D
     816:  00:89F7  DD 21 69 F0         		LD IX,ChanC+12
     817:  00:89FB  ED 4B 16 F0         		LD BC,[PT3_AdInPtC]
     818:  00:89FF  CD B4 86            		CALL PTDECOD
     819:  00:8A02  ED 43 16 F0         		LD [PT3_AdInPtC],BC
     820:  00:8A06                      
     821:  00:8A06  3A 1C F0            .PL1D:		LD A,[PT3_Delay]
     822:  00:8A09  32 7A F0            		LD [DelyCnt],A
     823:  00:8A0C                      
     824:  00:8A0C  DD 21 23 F0         .PL2:		LD IX,ChanA
     825:  00:8A10  2A 40 F1            		LD HL,[AYREGS+AR_TonA]
     826:  00:8A13  CD 24 88            		CALL CHREGS
     827:  00:8A16  22 40 F1            		LD [AYREGS+AR_TonA],HL
     828:  00:8A19  3A 4A F1            		LD A,[AYREGS+AR_AmplC]
     829:  00:8A1C  32 48 F1            		LD [AYREGS+AR_AmplA],A
     830:  00:8A1F  DD 21 40 F0         		LD IX,ChanB
     831:  00:8A23  2A 42 F1            		LD HL,[AYREGS+AR_TonB]
     832:  00:8A26  CD 24 88            		CALL CHREGS
     833:  00:8A29  22 42 F1            		LD [AYREGS+AR_TonB],HL
     834:  00:8A2C  3A 4A F1            		LD A,[AYREGS+AR_AmplC]
     835:  00:8A2F  32 49 F1            		LD [AYREGS+AR_AmplB],A
     836:  00:8A32  DD 21 5D F0         		LD IX,ChanC
     837:  00:8A36  2A 44 F1            		LD HL,[AYREGS+AR_TonC]
     838:  00:8A39  CD 24 88            		CALL CHREGS
     839:  00:8A3C  22 44 F1            		LD [AYREGS+AR_TonC],HL
     840:  00:8A3F                      
     841:  00:8A3F  2A 7E F0            		LD HL,[Ns_Base_AddToNs]
     842:  00:8A42  7C                  		LD A,H
     843:  00:8A43  85                  		ADD A,L
     844:  00:8A44  32 46 F1            		LD [AYREGS+AR_Noise],A
     845:  00:8A47                      
     846:  00:8A47  3A 1D F0            		LD A,[PT3_AddToEn]
     847:  00:8A4A  5F                  		LD E,A
     848:  00:8A4B  87                  		ADD A,A
     849:  00:8A4C  9F                  		SBC A,A
     850:  00:8A4D  57                  		LD D,A
     851:  00:8A4E  2A 4E F1            		LD HL,[EnvBase]
     852:  00:8A51  19                  		ADD HL,DE
     853:  00:8A52  ED 5B 7B F0         		LD DE,[CurESld]
     854:  00:8A56  19                  		ADD HL,DE
     855:  00:8A57  22 4B F1            		LD [AYREGS+AR_Env],HL
     856:  00:8A5A                      
     857:  00:8A5A  AF                  		XOR A
     858:  00:8A5B  21 7D F0            		LD HL,CurEDel
     859:  00:8A5E  B6                  		OR [HL]
     860:  00:8A5F  C8                  		RET Z
     861:  00:8A60  35                  		DEC [HL]
     862:  00:8A61  C0                  		RET NZ
     863:  00:8A62  3A 1E F0            		LD A,[PT3_Env_Del]
     864:  00:8A65  77                  		LD [HL],A
     865:  00:8A66  2A 1F F0            		LD HL,[PT3_ESldAdd]
     866:  00:8A69  19                  		ADD HL,DE
     867:  00:8A6A  22 7B F0            		LD [CurESld],HL
     868:  00:8A6D  C9                  		RET
     869:  00:8A6E                      
     870:  00:8A6E  AF                  PT3_ROUT:	XOR A
     871:  00:8A6F                      	
     872:  00:8A6F                      ROUT_A0:	; --- FIXES BITS 6 AND 7 OF MIXER ---
     873:  00:8A6F  21 47 F1            		LD	HL,AYREGS+AR_Mixer
     874:  00:8A72  CB FE               		set	7,[hl]
     875:  00:8A74  CB B6               		res	6,[hl]
     876:  00:8A76                      
     877:  00:8A76  0E A0               		LD C,$A0
     878:  00:8A78  21 40 F1            		LD HL,AYREGS
     879:  00:8A7B  ED 79               .LOUT:		OUT [C],A
     880:  00:8A7D  0C                  		INC C
     881:  00:8A7E  ED A3               		OUTI 
     882:  00:8A80  0D                  		DEC C
     883:  00:8A81  3C                  		INC A
     884:  00:8A82  FE 0D               		CP 13
     885:  00:8A84  20 F5               		JR NZ,.LOUT
     886:  00:8A86  ED 79               		OUT [C],A
     887:  00:8A88  7E                  		LD A,[HL]
     888:  00:8A89  A7                  		AND A
     889:  00:8A8A  F8                  		RET M
     890:  00:8A8B  0C                  		INC C
     891:  00:8A8C  ED 79               		OUT [C],A
     892:  00:8A8E  C9                  		RET
     893:  00:8A8F                      
     894:  00:8A8F  64                  NT_DATA:	db (T_NEW_0-T1_)*2
     895:  00:8A90  2A                  		db TCNEW_0-T_
     896:  00:8A91  65                  		db (T_OLD_0-T1_)*2+1
     897:  00:8A92  00                  		db TCOLD_0-T_
     898:  00:8A93  01                  		db (T_NEW_1-T1_)*2+1
     899:  00:8A94  0C                  		db TCNEW_1-T_
     900:  00:8A95  01                  		db (T_OLD_1-T1_)*2+1
     901:  00:8A96  0C                  		db TCOLD_1-T_
     902:  00:8A97  94                  		db (T_NEW_2-T1_)*2
     903:  00:8A98  35                  		db TCNEW_2-T_
     904:  00:8A99  30                  		db (T_OLD_2-T1_)*2
     905:  00:8A9A  0E                  		db TCOLD_2-T_
     906:  00:8A9B  60                  		db (T_NEW_3-T1_)*2
     907:  00:8A9C  20                  		db TCNEW_3-T_
     908:  00:8A9D  60                  		db (T_OLD_3-T1_)*2
     909:  00:8A9E  21                  		db TCOLD_3-T_
     910:  00:8A9F                      
     911:  00:8A9F                      T_:
     912:  00:8A9F                      
     913:  00:8A9F                      TCOLD_0:	db $00+1,$04+1,$08+1,$0A+1,$0C+1,$0E+1,$12+1,$14+1
     913:  00:8A9F  01 05 09 0B 0D 0F 13 15 
     914:  00:8AA7  19 25 3D 00         		db $18+1,$24+1,$3C+1,0
     915:  00:8AAB                      TCNEW_1:	
     916:  00:8AAB  5D 00               TCOLD_1:	db $5C+1,0
     917:  00:8AAD                      TCOLD_2:	db $30+1,$36+1,$4C+1,$52+1,$5E+1,$70+1,$82,$8C,$9C
     917:  00:8AAD  31 37 4D 53 5F 71 82 8C 9C 
     918:  00:8AB6                      		db $9E,$A0,$A6,$A8,$AA,$AC,$AE,$AE,0
     918:  00:8AB6  9E A0 A6 A8 AA AC AE AE 00 
     919:  00:8ABF  57                  TCNEW_3:	db $56+1
     920:  00:8AC0                      TCOLD_3:	db $1E+1,$22+1,$24+1,$28+1,$2C+1,$2E+1,$32+1,$BE+1,0
     920:  00:8AC0  1F 23 25 29 2D 2F 33 BF 00 
     921:  00:8AC9                      TCNEW_0:	db $1C+1,$20+1,$22+1,$26+1,$2A+1,$2C+1,$30+1,$54+1
     921:  00:8AC9  1D 21 23 27 2B 2D 31 55 
     922:  00:8AD1  BD BF 00            		db $BC+1,$BE+1,0
     923:  00:8AD4                      TCNEW_2:	db $1A+1,$20+1,$24+1,$28+1,$2A+1,$3A+1,$4C+1,$5E+1
     923:  00:8AD4  1B 21 25 29 2B 3B 4D 5F 
     924:  00:8ADC  BB BD BF            		db $BA+1,$BC+1,$BE+1
     925:  00:8ADF                      
     926:  00:8ADF  00 01 00 90         EMPTYSAMORN: 	db 0,1,0,$90 ;delete $90 if you don't need default sample
     927:  00:8AE3                      
     928:  00:8AE3                      T_PACK:		; First 12 values of tone tables (packed)
     929:  00:8AE3  0D                  		db ($06EC*2)/256
     930:  00:8AE4  D8                  		db #d8
     931:  00:8AE5  69                  		db $0755-$06EC
     932:  00:8AE6  70                  		db $07C5-$0755
     933:  00:8AE7  76                  		db $083B-$07C5
     934:  00:8AE8  7D                  		db $08B8-$083B
     935:  00:8AE9  85                  		db $093D-$08B8
     936:  00:8AEA  8D                  		db $09CA-$093D
     937:  00:8AEB  95                  		db $0A5F-$09CA
     938:  00:8AEC  9D                  		db $0AFC-$0A5F
     939:  00:8AED  A8                  		db $0BA4-$0AFC
     940:  00:8AEE  B1                  		db $0C55-$0BA4
     941:  00:8AEF  BB                  		db $0D10-$0C55
     942:  00:8AF0  0C                  		db ($066D*2)/256
     943:  00:8AF1  DA                  		db #da
     944:  00:8AF2  62                  		db $06CF-$066D
     945:  00:8AF3  68                  		db $0737-$06CF
     946:  00:8AF4  6D                  		db $07A4-$0737
     947:  00:8AF5  75                  		db $0819-$07A4
     948:  00:8AF6  7B                  		db $0894-$0819
     949:  00:8AF7  83                  		db $0917-$0894
     950:  00:8AF8  8A                  		db $09A1-$0917
     951:  00:8AF9  92                  		db $0A33-$09A1
     952:  00:8AFA  9C                  		db $0ACF-$0A33
     953:  00:8AFB  A4                  		db $0B73-$0ACF
     954:  00:8AFC  AF                  		db $0C22-$0B73
     955:  00:8AFD  B8                  		db $0CDA-$0C22
     956:  00:8AFE  0E                  		db ($0704*2)/256
     957:  00:8AFF  08                  		db #08
     958:  00:8B00  6A                  		db $076E-$0704
     959:  00:8B01  72                  		db $07E0-$076E
     960:  00:8B02  78                  		db $0858-$07E0
     961:  00:8B03  7E                  		db $08D6-$0858
     962:  00:8B04  86                  		db $095C-$08D6
     963:  00:8B05  90                  		db $09EC-$095C
     964:  00:8B06  96                  		db $0A82-$09EC
     965:  00:8B07  A0                  		db $0B22-$0A82
     966:  00:8B08  AA                  		db $0BCC-$0B22
     967:  00:8B09  B4                  		db $0C80-$0BCC
     968:  00:8B0A  BE                  		db $0D3E-$0C80
     969:  00:8B0B  0F                  		db ($07E0*2)/256
     970:  00:8B0C  C0                  		db #c0
     971:  00:8B0D  78                  		db $0858-$07E0
     972:  00:8B0E  88                  		db $08E0-$0858
     973:  00:8B0F  80                  		db $0960-$08E0
     974:  00:8B10  90                  		db $09F0-$0960
     975:  00:8B11  98                  		db $0A88-$09F0
     976:  00:8B12  A0                  		db $0B28-$0A88
     977:  00:8B13  B0                  		db $0BD8-$0B28
     978:  00:8B14  A8                  		db $0C80-$0BD8
     979:  00:8B15  E0                  		db $0D60-$0C80
     980:  00:8B16  B0                  		db $0E10-$0D60
     981:  00:8B17  E8                  		db $0EF8-$0E10
      61.  00:8B18                      	include "ayFX-ROM_sjasm.asm"
       1:  00:8B18                      		; --- ayFX REPLAYER v1.31 ---
       2:  00:8B18                      
       3:  00:8B18                      		; --- v1.31	Fixed bug on previous version, only PSG channel C worked
       4:  00:8B18                      		; --- v1.3	Fixed volume and Relative volume versions on the same file, conditional compilation
       5:  00:8B18                      		; ---		Support for dynamic or fixed channel allocation
       6:  00:8B18                      		; --- v1.2f/r	ayFX bank support
       7:  00:8B18                      		; --- v1.11f/r	If a frame volume is zero then no AYREGS update
       8:  00:8B18                      		; --- v1.1f/r	Fixed volume for all ayFX streams
       9:  00:8B18                      		; --- v1.1	Explicit priority (as suggested by AR)
      10:  00:8B18                      		; --- v1.0f	Bug fixed (error when using noise)
      11:  00:8B18                      		; --- v1.0	Initial release
      12:  00:8B18                      
      13:  00:8B18                      		; --- DEFINE AYFXRELATIVE AS 0 FOR FIXED VOLUME VERSION ---
      14:  00:8B18                      		; --- DEFINE AYFXRELATIVE AS 1 FOR RELATIVE VOLUME VERSION ---
      15:  00:8B18  (00:0000)           AYFXRELATIVE equ 0
      16:  00:8B18                      
      17:  00:8B18                      ayFX_SETUP:	; ---          ayFX replayer setup          ---
      18:  00:8B18                      		; --- INPUT: HL -> pointer to the ayFX bank ---
      19:  00:8B18  22 41 F2            		ld	[ayFX_BANK],hl			; Current ayFX bank
      20:  00:8B1B  3E 01               		ld	a,1				; a:=0
      21:  00:8B1D  32 40 F2            		ld	[ayFX_MODE],a			; Initial mode: fixed channel
      22:  00:8B20  3C                  		inc	a				; Starting channel (=1)
      23:  00:8B21  32 4A F2            		ld	[ayFX_CHANNEL],a		; Updated
      24:  00:8B24                      ayFX_END:	; --- End of an ayFX stream ---
      25:  00:8B24  3E FF               		ld	a,255				; Lowest ayFX priority
      26:  00:8B26  32 43 F2            		ld	[ayFX_PRIORITY],a		; Priority saved (not playing ayFX stream)
      27:  00:8B29  C9                  		ret					; Return
      28:  00:8B2A                      
      29:  00:8B2A                      ayFX_INIT:	; ---     INIT A NEW ayFX STREAM     ---
      30:  00:8B2A                      		; --- INPUT: A -> sound to be played ---
      31:  00:8B2A                      		; ---        C -> sound priority     ---
      32:  00:8B2A  C5                  		push	bc				; Store bc in stack
      33:  00:8B2B  D5                  		push	de				; Store de in stack
      34:  00:8B2C  E5                  		push	hl				; Store hl in stack
      35:  00:8B2D                      		; --- Check if the index is in the bank ---
      36:  00:8B2D  47                  		ld	b,a				; b:=a (new ayFX stream index)
      37:  00:8B2E  2A 41 F2            		ld	hl,[ayFX_BANK]			; Current ayFX BANK
      38:  00:8B31  7E                  		ld	a,[hl]				; Number of samples in the bank
      39:  00:8B32  B7                  		or	a				; If zero (means 256 samples)...
      40:  00:8B33  28 06               		jr	z,.CHECK_PRI			; ...goto .CHECK_PRI
      41:  00:8B35                      		; The bank has less than 256 samples
      42:  00:8B35  78                  		ld	a,b				; a:=b (new ayFX stream index)
      43:  00:8B36  BE                  		cp	[hl]				; If new index is not in the bank...
      44:  00:8B37  3E 02               		ld	a,2				; a:=2 (error 2: Sample not in the bank)
      45:  00:8B39  30 21               		jr	nc,.INIT_END			; ...we can't init it
      46:  00:8B3B                      .CHECK_PRI:	; --- Check if the new priority is lower than the current one ---
      47:  00:8B3B                      		; ---   Remember: 0 = highest priority, 15 = lowest priority  ---
      48:  00:8B3B  78                  		ld	a,b				; a:=b (new ayFX stream index)
      49:  00:8B3C  3A 43 F2            		ld	a,[ayFX_PRIORITY]		; a:=Current ayFX stream priority
      50:  00:8B3F  B9                  		cp	c				; If new ayFX stream priority is lower than current one...
      51:  00:8B40  3E 01               		ld	a,1				; a:=1 (error 1: A sample with higher priority is being played)
      52:  00:8B42  38 18               		jr	c,.INIT_END			; ...we don't start the new ayFX stream
      53:  00:8B44                      		; --- Set new priority ---
      54:  00:8B44  79                  		ld	a,c				; a:=New priority
      55:  00:8B45  E6 0F               		and	$0F				; We mask the priority
      56:  00:8B47  32 43 F2            		ld	[ayFX_PRIORITY],a		; new ayFX stream priority saved in RAM
      57:  00:8B4A                      
      58:  00:8B4A                      		IF ( AYFXRELATIVE == 1 )
      59:  00:8B4A                    ~ 			; --- Volume adjust using PT3 volume table ---
      60:  00:8B4A                    ~ 			ld	c,a				; c:=New priority (fixed)
      61:  00:8B4A                    ~ 			ld	a,15				; a:=15
      62:  00:8B4A                    ~ 			sub	c				; a:=15-New priority = relative volume
      63:  00:8B4A                    ~ 			jr	z,.INIT_NOSOUND		; If priority is 15 -> no sound output (volume is zero)
      64:  00:8B4A                    ~ 			add	a,a				; a:=a*2
      65:  00:8B4A                    ~ 			add	a,a				; a:=a*4
      66:  00:8B4A                    ~ 			add	a,a				; a:=a*8
      67:  00:8B4A                    ~ 			add	a,a				; a:=a*16
      68:  00:8B4A                    ~ 			ld	e,a				; e:=a
      69:  00:8B4A                    ~ 			ld	d,0				; de:=a
      70:  00:8B4A                    ~ 			ld	hl,VT_				; hl:=PT3 volume table
      71:  00:8B4A                    ~ 			add	hl,de				; hl is a pointer to the relative volume table
      72:  00:8B4A                    ~ 			ld	[ayFX_VT],hl			; Save pointer
      73:  00:8B4A                    ~ 		ENDIF
      74:  00:8B4A                      
      75:  00:8B4A                      		; --- Calculate the pointer to the new ayFX stream ---
      76:  00:8B4A  ED 5B 41 F2         		ld	de,[ayFX_BANK]			; de:=Current ayFX bank
      77:  00:8B4E  13                  		inc	de				; de points to the increments table of the bank
      78:  00:8B4F  68                  		ld	l,b				; l:=b (new ayFX stream index)
      79:  00:8B50  26 00               		ld	h,0				; hl:=b (new ayFX stream index)
      80:  00:8B52  29                  		add	hl,hl				; hl:=hl*2
      81:  00:8B53  19                  		add	hl,de				; hl:=hl+de (hl points to the correct increment)
      82:  00:8B54  5E                  		ld	e,[hl]				; e:=lower byte of the increment
      83:  00:8B55  23                  		inc	hl				; hl points to the higher byte of the correct increment
      84:  00:8B56  56                  		ld	d,[hl]				; de:=increment
      85:  00:8B57  19                  		add	hl,de				; hl:=hl+de (hl points to the new ayFX stream)
      86:  00:8B58  22 44 F2            		ld	[ayFX_POINTER],hl		; Pointer saved in RAM
      87:  00:8B5B  AF                  		xor	a				; a:=0 (no errors)
      88:  00:8B5C  E1                  .INIT_END:	pop	hl				; Retrieve hl from stack
      89:  00:8B5D  D1                  		pop	de				; Retrieve de from stack
      90:  00:8B5E  C1                  		pop	bc				; Retrieve bc from stack
      91:  00:8B5F  C9                  		ret					; Return
      92:  00:8B60                      
      93:  00:8B60                      		IF ( AYFXRELATIVE == 1 )
      94:  00:8B60                    ~ .INIT_NOSOUND:	; --- Init a sample with relative volume zero -> no sound output ---
      95:  00:8B60                    ~ 			ld	a,255				; Lowest ayFX priority
      96:  00:8B60                    ~ 			ld	[ayFX_PRIORITY],a		; Priority saved (not playing ayFX stream)
      97:  00:8B60                    ~ 			jr	.INIT_END			; Jumps to .INIT_END
      98:  00:8B60                    ~ 		ENDIF
      99:  00:8B60                      
     100:  00:8B60                      ayFX_PLAY:	; --- PLAY A FRAME OF AN ayFX STREAM ---
     101:  00:8B60  3A 43 F2            		ld	a,[ayFX_PRIORITY]		; a:=Current ayFX stream priority
     102:  00:8B63  B7                  		or	a				; If priority has bit 7 on...
     103:  00:8B64  F8                  		ret	m				; ...return
     104:  00:8B65                      		; --- Calculate next ayFX channel (if needed) ---
     105:  00:8B65  3A 40 F2            		ld	a,[ayFX_MODE]			; ayFX mode
     106:  00:8B68  E6 01               		and	1				; If bit0=0 (fixed channel)...
     107:  00:8B6A  28 08               		jr	z,.TAKECB			; ...skip channel changing
     108:  00:8B6C  21 4A F2            		ld	hl,ayFX_CHANNEL			; Old ayFX playing channel
     109:  00:8B6F  35                  		dec	[hl]				; New ayFX playing channel
     110:  00:8B70  20 02               		jr	nz,.TAKECB			; If not zero jump to .TAKECB
     111:  00:8B72  36 03               		ld	[hl],3				; If zero -> set channel 3
     112:  00:8B74                      .TAKECB:	; --- Extract control byte from stream ---
     113:  00:8B74  2A 44 F2            		ld	hl,[ayFX_POINTER]		; Pointer to the current ayFX stream
     114:  00:8B77  4E                  		ld	c,[hl]				; c:=Control byte
     115:  00:8B78  23                  		inc	hl				; Increment pointer
     116:  00:8B79                      		; --- Check if there's new tone on stream ---
     117:  00:8B79  CB 69               		bit	5,c				; If bit 5 c is off...
     118:  00:8B7B  28 08               		jr	z,.CHECK_NN			; ...jump to .CHECK_NN (no new tone)
     119:  00:8B7D                      		; --- Extract new tone from stream ---
     120:  00:8B7D  5E                  		ld	e,[hl]				; e:=lower byte of new tone
     121:  00:8B7E  23                  		inc	hl				; Increment pointer
     122:  00:8B7F  56                  		ld	d,[hl]				; d:=higher byte of new tone
     123:  00:8B80  23                  		inc	hl				; Increment pointer
     124:  00:8B81  ED 53 46 F2         		ld	[ayFX_TONE],de			; ayFX tone updated
     125:  00:8B85                      .CHECK_NN:	; --- Check if there's new noise on stream ---
     126:  00:8B85  CB 71               		bit	6,c				; if bit 6 c is off...
     127:  00:8B87  28 09               		jr	z,.SETPOINTER			; ...jump to .SETPOINTER (no new noise)
     128:  00:8B89                      		; --- Extract new noise from stream ---
     129:  00:8B89  7E                  		ld	a,[hl]				; a:=New noise
     130:  00:8B8A  23                  		inc	hl				; Increment pointer
     131:  00:8B8B  FE 20               		cp	$20				; If it's an illegal value of noise (used to mark end of stream)...
     132:  00:8B8D  28 95               		jr.	z,ayFX_END			; ...jump to ayFX_END
     133:  00:8B8F  32 48 F2            		ld	[ayFX_NOISE],a			; ayFX noise updated
     134:  00:8B92                      .SETPOINTER:	; --- Update ayFX pointer ---
     135:  00:8B92  22 44 F2            		ld	[ayFX_POINTER],hl		; Update ayFX stream pointer
     136:  00:8B95                      		; --- Extract volume ---
     137:  00:8B95  79                  		ld	a,c				; a:=Control byte
     138:  00:8B96  E6 0F               		and	$0F				; lower nibble
     139:  00:8B98                      
     140:  00:8B98                      		IF ( AYFXRELATIVE == 1 )
     141:  00:8B98                    ~ 			; --- Fix the volume using PT3 Volume Table ---
     142:  00:8B98                    ~ 			ld	hl,[ayFX_VT]			; hl:=Pointer to relative volume table
     143:  00:8B98                    ~ 			ld	e,a				; e:=a (ayFX volume)
     144:  00:8B98                    ~ 			ld	d,0				; d:=0
     145:  00:8B98                    ~ 			add	hl,de				; hl:=hl+de (hl points to the relative volume of this frame
     146:  00:8B98                    ~ 			ld	a,[hl]				; a:=ayFX relative volume
     147:  00:8B98                    ~ 			or	a				; If relative volume is zero...
     148:  00:8B98                    ~ 		ENDIF
     149:  00:8B98                      
     150:  00:8B98  32 49 F2            		ld	[ayFX_VOLUME],a			; ayFX volume updated
     151:  00:8B9B  C8                  		ret	z				; ...return (don't copy ayFX values in to AYREGS)
     152:  00:8B9C                      		; -------------------------------------
     153:  00:8B9C                      		; --- COPY ayFX VALUES IN TO AYREGS ---
     154:  00:8B9C                      		; -------------------------------------
     155:  00:8B9C                      		; --- Set noise channel ---
     156:  00:8B9C  CB 79               		bit	7,c				; If noise is off...
     157:  00:8B9E  20 06               		jr	nz,.SETMASKS			; ...jump to .SETMASKS
     158:  00:8BA0  3A 48 F2            		ld	a,[ayFX_NOISE]			; ayFX noise value
     159:  00:8BA3  32 46 F1            		ld	[AYREGS+6],a			; copied in to AYREGS (noise channel)
     160:  00:8BA6                      .SETMASKS:	; --- Set mixer masks ---
     161:  00:8BA6  79                  		ld	a,c				; a:=Control byte
     162:  00:8BA7  E6 90               		and	$90				; Only bits 7 and 4 (noise and tone mask for psg reg 7)
     163:  00:8BA9  FE 90               		cp	$90				; If no noise and no tone...
     164:  00:8BAB  C8                  		ret	z				; ...return (don't copy ayFX values in to AYREGS)
     165:  00:8BAC                      		; --- Copy ayFX values in to ARYREGS ---
     166:  00:8BAC  0F                  		rrca					; Rotate a to the right (1 TIME)
     167:  00:8BAD  0F                  		rrca					; Rotate a to the right (2 TIMES) (OR mask)
     168:  00:8BAE  16 DB               		ld	d,$DB				; d:=Mask for psg mixer (AND mask)
     169:  00:8BB0                      		; --- Dump to correct channel ---
     170:  00:8BB0  21 4A F2            		ld	hl,ayFX_CHANNEL			; Next ayFX playing channel
     171:  00:8BB3  46                  		ld	b,[hl]				; Channel counter
     172:  00:8BB4                      .CHK1:		; --- Check if playing channel was 1 ---
     173:  00:8BB4  10 0D               		djnz	.CHK2				; Decrement and jump if channel was not 1
     174:  00:8BB6                      .PLAY_C:	; --- Play ayFX stream on channel C ---
     175:  00:8BB6  CD E5 8B            		call	.SETMIXER			; Set PSG mixer value (returning a=ayFX volume and hl=ayFX tone)
     176:  00:8BB9  32 4A F1            		ld	[AYREGS+10],a			; Volume copied in to AYREGS (channel C volume)
     177:  00:8BBC  CB 51               		bit	2,c				; If tone is off...
     178:  00:8BBE  C0                  		ret	nz				; ...return
     179:  00:8BBF  22 44 F1            		ld	[AYREGS+4],hl			; copied in to AYREGS (channel C tone)
     180:  00:8BC2  C9                  		ret					; Return
     181:  00:8BC3                      .CHK2:		; --- Check if playing channel was 2 ---
     182:  00:8BC3  CB 0A               		rrc	d				; Rotate right AND mask
     183:  00:8BC5  0F                  		rrca					; Rotate right OR mask
     184:  00:8BC6  10 0D               		djnz	.CHK3				; Decrement and jump if channel was not 2
     185:  00:8BC8                      .PLAY_B:	; --- Play ayFX stream on channel B ---
     186:  00:8BC8  CD E5 8B            		call	.SETMIXER			; Set PSG mixer value (returning a=ayFX volume and hl=ayFX tone)
     187:  00:8BCB  32 49 F1            		ld	[AYREGS+9],a			; Volume copied in to AYREGS (channel B volume)
     188:  00:8BCE  CB 49               		bit	1,c				; If tone is off...
     189:  00:8BD0  C0                  		ret	nz				; ...return
     190:  00:8BD1  22 42 F1            		ld	[AYREGS+2],hl			; copied in to AYREGS (channel B tone)
     191:  00:8BD4  C9                  		ret					; Return
     192:  00:8BD5                      .CHK3:		; --- Check if playing channel was 3 ---
     193:  00:8BD5  CB 0A               		rrc	d				; Rotate right AND mask
     194:  00:8BD7  0F                  		rrca					; Rotate right OR mask
     195:  00:8BD8                      .PLAY_A:	; --- Play ayFX stream on channel A ---
     196:  00:8BD8  CD E5 8B            		call	.SETMIXER			; Set PSG mixer value (returning a=ayFX volume and hl=ayFX tone)
     197:  00:8BDB  32 48 F1            		ld	[AYREGS+8],a			; Volume copied in to AYREGS (channel A volume)
     198:  00:8BDE  CB 41               		bit	0,c				; If tone is off...
     199:  00:8BE0  C0                  		ret	nz				; ...return
     200:  00:8BE1  22 40 F1            		ld	[AYREGS+0],hl			; copied in to AYREGS (channel A tone)
     201:  00:8BE4  C9                  		ret					; Return
     202:  00:8BE5                      .SETMIXER:	; --- Set PSG mixer value ---
     203:  00:8BE5  4F                  		ld	c,a				; c:=OR mask
     204:  00:8BE6  3A 47 F1            		ld	a,[AYREGS+7]			; a:=PSG mixer value
     205:  00:8BE9  A2                  		and	d				; AND mask
     206:  00:8BEA  B1                  		or	c				; OR mask
     207:  00:8BEB  32 47 F1            		ld	[AYREGS+7],a			; PSG mixer value updated
     208:  00:8BEE  3A 49 F2            		ld	a,[ayFX_VOLUME]			; a:=ayFX volume value
     209:  00:8BF1  2A 46 F2            		ld	hl,[ayFX_TONE]			; ayFX tone value
     210:  00:8BF4  C9                  		ret					; Return
     211:  00:8BF5                      
     212:  00:8BF5                      		IF ( AYFXRELATIVE == 1 )
     213:  00:8BF5                    ~ 			; --- UNCOMMENT THIS IF YOU DON'T USE THIS REPLAYER WITH PT3 REPLAYER ---
     214:  00:8BF5                    ~ 		;VT_:	.INCBIN	"VT.BIN"
     215:  00:8BF5                    ~ 			; --- UNCOMMENT THIS IF YOU DON'T USE THIS REPLAYER WITH PT3 REPLAYER ---
     216:  00:8BF5                    ~ 		ENDIF
      62.  00:8BF5                      	
      63.  00:8BF5                      	
      64.  00:8BF5                      
      65.  00:8BF5                      ;;=====================================================
      66.  00:8BF5                      ;;DEFINICIÓN DE CANTIONES Y EFECTOS DE SONIDO
      67.  00:8BF5                      ;;=====================================================		
      68.  00:8BF5                      song:
      69.  00:8BF5  (0968)              	incbin "bloodytears_castlevania.99"
      70.  00:955D                      	
      71.  00:955D                      sfx_bank:
      72.  00:955D  (004B)              	incbin "demo.afb"
      73.  00:95A8                      
     111   00:95A8                      	
     112   00:95A8                      
     113   00:95A8                      ;;=====================================================
     114   00:95A8                      ;;DEFINICIÓN DE SUBRUTINAS DE FERNANDO PARA COMPRESIÓN Y SONIDO
     115   00:95A8                      ;;=====================================================
     116   00:95A8                      ;Este include lleva la rutina de descompresión de ROM/RAM a VRAM de pletter
     117   00:95A8                      ;Está adaptada de la original a sjasm
     118   00:95A8                      ;	HL = RAM/ROM source	; DE = VRAM destination
     119   00:95A8                      depack_VRAM:
     120   00:95A8                      	include "PL_VRAM_Depack_SJASM.asm"
       1.  00:95A8                      ;-----------------------------------------------------------
       2.  00:95A8                      ; Pletter v0.5b VRAM Depacker v1.1 - 16Kb version
       3.  00:95A8                      ; HL = RAM/ROM source ; DE = VRAM destination
       4.  00:95A8                      ;-----------------------------------------------------------
       5.  00:95A8  F3                  	di
       6.  00:95A9                      
       7.  00:95A9                      ; VRAM address setup
       8.  00:95A9  7B                  	ld	a,e
       9.  00:95AA  D3 99               	out	[099h],a
      10.  00:95AC  7A                  	ld	a,d
      11.  00:95AD  F6 40               	or	040h
      12.  00:95AF  D3 99               	out	[099h],a
      13.  00:95B1                      
      14.  00:95B1                      ; Initialization
      15.  00:95B1  7E                  	ld	a,[hl]
      16.  00:95B2  23                  	inc	hl
      17.  00:95B3  D9                  	exx
      18.  00:95B4  11 00 00            	ld	de,0
      19.  00:95B7  87                  	add	a,a
      20.  00:95B8  3C                  	inc	a
      21.  00:95B9  CB 13               	rl	e
      22.  00:95BB  87                  	add	a,a
      23.  00:95BC  CB 13               	rl	e
      24.  00:95BE  87                  	add	a,a
      25.  00:95BF  CB 13               	rl	e
      26.  00:95C1  CB 13               	rl	e
      27.  00:95C3  21 7A 96            	ld	hl,modes
      28.  00:95C6  19                  	add	hl,de
      29.  00:95C7  5E                  	ld	e,[hl]
      30.  00:95C8  DD 6B               	ld	ixl,e
      31.  00:95CA  23                  	inc	hl
      32.  00:95CB  5E                  	ld	e,[hl]
      33.  00:95CC  DD 63               	ld	ixh,e
      34.  00:95CE  1E 01               	ld	e,1
      35.  00:95D0  D9                  	exx
      36.  00:95D1  FD 21 DA 95         	ld	iy,loop
      37.  00:95D5                      
      38.  00:95D5                      ; Main depack loop
      39.  00:95D5  0E 98               literal:ld	c,098h
      40.  00:95D7  ED A3               	outi
      41.  00:95D9  13                  	inc	de
      42.  00:95DA  87                  loop:	add	a,a
      43.  00:95DB  CC 6E 96              	call	z,getbit
      44.  00:95DE  30 F5               	jr	nc,literal
      45.  00:95E0                      
      46.  00:95E0                      ; Compressed data
      47.  00:95E0  D9                  	exx
      48.  00:95E1  62                  	ld	h,d
      49.  00:95E2  6B                  	ld	l,e
      50.  00:95E3  87                  getlen: add	a,a
      51.  00:95E4  CC 72 96            	call	z,getbitexx
      52.  00:95E7  30 1D               	jr	nc,lenok
      53.  00:95E9  87                  lus:	add	a,a
      54.  00:95EA  CC 72 96            	call	z,getbitexx
      55.  00:95ED  ED 6A               	adc	hl,hl
      56.  00:95EF  D8                  	ret	c
      57.  00:95F0  87                  	add	a,a
      58.  00:95F1  CC 72 96            	call	z,getbitexx
      59.  00:95F4  30 10               	jr	nc,lenok
      60.  00:95F6  87                  	add	a,a
      61.  00:95F7  CC 72 96            	call	z,getbitexx
      62.  00:95FA  ED 6A               	adc	hl,hl
      63.  00:95FC  DA 78 96            	jp	c,Depack_out
      64.  00:95FF  87                  	add	a,a
      65.  00:9600  CC 72 96            	call	z,getbitexx
      66.  00:9603  DA E9 95            	jp	c,lus
      67.  00:9606  23                  lenok:  inc	hl
      68.  00:9607  D9                  	exx
      69.  00:9608  4E                  	ld	c,[hl]
      70.  00:9609  23                  	inc	hl
      71.  00:960A  06 00               	ld	b,0
      72.  00:960C  CB 79               	bit	7,c
      73.  00:960E  CA 41 96            	jp	z,offsok
      74.  00:9611  DD E9               	jp	ix
      75.  00:9613                      
      76.  00:9613  87                  mode7:  add	a,a
      77.  00:9614  CC 6E 96              	call	z,getbit
      78.  00:9617  CB 10               	rl	b
      79.  00:9619  87                  mode6:	add	a,a
      80.  00:961A  CC 6E 96              	call	z,getbit
      81.  00:961D  CB 10               	rl	b
      82.  00:961F  87                  mode5:  add	a,a
      83.  00:9620  CC 6E 96              	call	z,getbit
      84.  00:9623  CB 10               	rl	b
      85.  00:9625  87                  mode4:  add	a,a
      86.  00:9626  CC 6E 96              	call	z,getbit
      87.  00:9629  CB 10               	rl	b
      88.  00:962B  87                  mode3:  add	a,a
      89.  00:962C  CC 6E 96              	call	z,getbit
      90.  00:962F  CB 10               	rl	b
      91.  00:9631  87                  mode2:	add	a,a
      92.  00:9632  CC 6E 96              	call	z,getbit
      93.  00:9635  CB 10               	rl	b
      94.  00:9637  87                  	add	a,a
      95.  00:9638  CC 6E 96              	call	z,getbit
      96.  00:963B  30 04               	jr	nc,offsok
      97.  00:963D  B7                  	or	a
      98.  00:963E  04                  	inc	b
      99.  00:963F  CB B9               	res	7,c
     100.  00:9641  03                  offsok: inc	bc
     101.  00:9642  E5                  	push	hl
     102.  00:9643  D9                  	exx
     103.  00:9644  E5                  	push	hl
     104.  00:9645  D9                  	exx
     105.  00:9646  6B                  	ld	l,e
     106.  00:9647  62                  	ld	h,d
     107.  00:9648  ED 42               	sbc	hl,bc
     108.  00:964A  C1                  	pop	bc
     109.  00:964B  F5                  	push	af
     110.  00:964C  7D                  .loop:	ld	a,l
     111.  00:964D  D3 99               	out	[099h],a
     112.  00:964F  7C                  	ld	a,h
     113.  00:9650  00                  	nop                     ; VDP timing
     114.  00:9651  D3 99               	out	[099h],a
     115.  00:9653  00                  	nop                     ; VDP timing
     116.  00:9654  DB 98               	in	a,[098h]
     117.  00:9656  08                  	ex	af,af'
     118.  00:9657  7B                  	ld	a,e
     119.  00:9658  00                  	nop			; VDP timing
     120.  00:9659  D3 99               	out	[099h],a
     121.  00:965B  7A                  	ld	a,d
     122.  00:965C  F6 40               	or	040h
     123.  00:965E  D3 99               	out	[099h],a
     124.  00:9660  08                  	ex	af,af'
     125.  00:9661  00                  	nop			; VDP timing
     126.  00:9662  D3 98               	out	[098h],a
     127.  00:9664  13                  	inc	de
     128.  00:9665  ED A1               	cpi
     129.  00:9667  EA 4C 96            	jp	pe,.loop
     130.  00:966A  F1                  	pop	af
     131.  00:966B  E1                  	pop	hl
     132.  00:966C  FD E9               	jp	iy
     133.  00:966E                      
     134.  00:966E  7E                  getbit: ld	a,[hl]
     135.  00:966F  23                  	inc	hl
     136.  00:9670  17                  	rla
     137.  00:9671  C9                  	ret
     138.  00:9672                      
     139.  00:9672                      getbitexx:
     140.  00:9672  D9                  	exx
     141.  00:9673  7E                  	ld	a,[hl]
     142.  00:9674  23                  	inc	hl
     143.  00:9675  D9                  	exx
     144.  00:9676  17                  	rla
     145.  00:9677  C9                  	ret
     146.  00:9678                      
     147.  00:9678                      ; Depacker exit
     148.  00:9678                      Depack_out:
     149.  00:9678  FB                  	ei
     150.  00:9679  C9                  	ret
     151.  00:967A                      
     152.  00:967A                      modes:
     153.  00:967A  41 96               	dw	offsok
     154.  00:967C  31 96               	dw	mode2
     155.  00:967E  2B 96               	dw	mode3
     156.  00:9680  25 96               	dw	mode4
     157.  00:9682  1F 96               	dw	mode5
     158.  00:9684  19 96               	dw	mode6
     159.  00:9686  13 96               	dw	mode7
     121   00:9688                      
     122   00:9688                      
     123   00:9688                      	
     124   00:9688                      ;;=====================================================
     125   00:9688                      ;;DEFINICIÓN DE ESTRUCTURAS
     126   00:9688                      ;;=====================================================		
     127   00:9688                      	include "estructuras.asm"
       1.  00:9688                      ;;=====================================================
       2.  00:9688                      ;;DEFINICIÓN DE ESTRUCTURAS
       3.  00:9688                      ;;=====================================================
       4.  00:9688                      
       5.  00:9688                      ;crear estructura
       6.  00:9688                      
       7.  00:9688                      	STRUCT ESTRUCTURA_PUNTOMIRA
       8.  00:9688                    < posx			DB		100
       9.  00:9688                    < posy			DB		100
      10.  00:9688                    < escena			DB		0	;valores porsibles 0 (blanco+rojo en punto de mira) y NEG 0 (al revés)
      11.  00:9688                    < velocidad		DB		0
      12.  00:9688                    < boton2_pressed  DB		0
      13.  00:9688                    < cadencia		DB		5	;nº de veces que se ejecutará el disparo antes de ejecutar un disparo real (porque cuando se pulsa la tecl dispara 3 ó 4 veces de rápido que va)
      14.  00:9688                    < ; al final he decidido (ya que el punto de mira es el prota) que lo relacionado con el prota vaya en esta estructura
      15.  00:9688                    < pm_aux1			DB		0	;para llegar a los 16 campos
      16.  00:9688                    < pm_aux2			DB		0	;para llegar a los 16 campos
      17.  00:9688                    < pm_aux3			DB		0	;para llegar a los 16 campos
      18.  00:9688                    < pm_aux4			DB		0	;para llegar a los 16 campos
      19.  00:9688                    < pm_aux5			DB		0	;para llegar a los 16 campos
      20.  00:9688                    < pm_aux6			DB		0	;para llegar a los 16 campos
      21.  00:9688                    < pm_aux7			DB		0	;para llegar a los 16 campos
      22.  00:9688                    < pm_aux8			DB		0	;para llegar a los 16 campos
      23.  00:9688                    < pm_aux9			DB		0	;para llegar a los 16 campos
      24.  00:9688                    < pm_aux10		DB		0	;para llegar a los 16 campos
      25.  00:9688                    < 	ENDSTRUCT;ESTRUCTURA_PUNTOMIRA
      26.  00:9688                      
      27.  00:9688                      	
      28.  00:9688                      	STRUCT ESTRUCTURA_ENEMIGO
      29.  00:9688                    < tipo				DB		0	;(0 serpiente por ejemplo) #FF muerto o no existe
      30.  00:9688                    < posx				DB		5
      31.  00:9688                    < posy				DB		50
      32.  00:9688                    < color				DB		5
      33.  00:9688                    < escena				DB		0
      34.  00:9688                    < contador_siguiente_escena	DB	0
      35.  00:9688                    < reset_contador		DB		0
      36.  00:9688                    < dano				DB		0	;daño
      37.  00:9688                    < energia				DB		0	;energía del enemigo... si llega a 0 => existe <- 0
      38.  00:9688                    < ;indica el nº de sprite a mostrar y si está compuesto por uno o dos sprites y si están en horizontal o vertical
      39.  00:9688                    < ver_hor				DB		0
      40.  00:9688                    < manejador_dibujo 	DW		0
      41.  00:9688                    < en_aux3				DB		0
      42.  00:9688                    < en_aux4				DB		0
      43.  00:9688                    < 	ENDSTRUCT;ESTRUCTURA_ENEMIGO
      44.  00:9688                      	
      45.  00:9688                      	STRUCT ESTRUCTURA_EXTRA		;vidas extra, plantas de curación de energía, reliquias	
      46.  00:9688                    < tipo				DB		0	;#FF muerto/usado o no existe
      47.  00:9688                    < posx				DB		50
      48.  00:9688                    < posy				DB		50
      49.  00:9688                    < color				DB		5
      50.  00:9688                    < contador			DB		0	;por si doy dos reliquias en vez de una, por ejemplo
      51.  00:9688                    < en_aux1				DB		0	;para llegar a los 16 campos
      52.  00:9688                    < en_aux2				DB		0
      53.  00:9688                    < en_aux3				DB		0
      54.  00:9688                    < en_aux4				DB		0
      55.  00:9688                    < en_aux5				DB		0
      56.  00:9688                    < en_aux6				DB		0
      57.  00:9688                    < en_aux7				DB		0
      58.  00:9688                    < en_aux8				DB		0
      59.  00:9688                    < en_aux9				DB		0
      60.  00:9688                    < en_aux10			DB		0
      61.  00:9688                    < en_aux11			DB		0
      62.  00:9688                    < 	ENDSTRUCT;ESTRUCTURA_EXTRA
      63.  00:9688                      
      64.  00:9688                      
      65.  00:9688                      
      66.  00:9688                      
      67.  00:9688                      
      68.  00:9688                      
      69.  00:9688                      
     128   00:9688                      	
     129   00:9688                      ;;=====================================================
     130   00:9688                      ;;DEFINICIÓN DE VARIABLES
     131   00:9688                      ;;=====================================================		
     132   00:9688                      	include "sprites.asm"
       1.  00:9688                      ;;=====================================================
       2.  00:9688                      ;;DEFINICIÓN DE SPRITES
       3.  00:9688                      ;;=====================================================	
       4.  00:9688                      sprites_pantantalla:
       5.  00:9688                      
       6.  00:9688                      ;; PARTE 1: SPRITES COMUNES
       7.  00:9688                      
       8.  00:9688                      sprites_comunes:
       9.  00:9688                      sprite_punto_mira_1:	;color 8
      10.  00:9688                      	db #FF,#FF,#C0,#C0,#C0,#C0,#C0,#C0
      10.  00:9688  FF FF C0 C0 C0 C0 C0 C0 
      11.  00:9690                      	db #C0,#C0,#C0,#C0,#C0,#C0,#FF,#FF
      11.  00:9690  C0 C0 C0 C0 C0 C0 FF FF 
      12.  00:9698                      	db #FF,#FF,#03,#03,#03,#03,#03,#03
      12.  00:9698  FF FF 03 03 03 03 03 03 
      13.  00:96A0                      	db #03,#03,#03,#03,#03,#03,#FF,#FF
      13.  00:96A0  03 03 03 03 03 03 FF FF 
      14.  00:96A8                      	
      15.  00:96A8                      sprite_punto_mira_2: 	;color 15
      16.  00:96A8                      	db #00,#00,#00,#00,#0F,#0F,#0C,#0C
      16.  00:96A8  00 00 00 00 0F 0F 0C 0C 
      17.  00:96B0                      	db #0C,#0C,#0F,#0F,#00,#00,#00,#00
      17.  00:96B0  0C 0C 0F 0F 00 00 00 00 
      18.  00:96B8                      	db #00,#00,#00,#00,#F0,#F0,#30,#30
      18.  00:96B8  00 00 00 00 F0 F0 30 30 
      19.  00:96C0                      	db #30,#30,#F0,#F0,#00,#00,#00,#00
      19.  00:96C0  30 30 F0 F0 00 00 00 00 
      20.  00:96C8                      	
      21.  00:96C8                      sprite_punto_mira_1_mejorado:
      22.  00:96C8                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      22.  00:96C8  FF FF FF FF FF FF FF FF 
      23.  00:96D0                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      23.  00:96D0  FF FF FF FF FF FF FF FF 
      24.  00:96D8                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      24.  00:96D8  FF FF FF FF FF FF FF FF 
      25.  00:96E0                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      25.  00:96E0  FF FF FF FF FF FF FF FF 
      26.  00:96E8                      
      27.  00:96E8                      sprite_punto_mira_2_mejorado:
      28.  00:96E8                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      28.  00:96E8  FF FF FF FF FF FF FF FF 
      29.  00:96F0                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      29.  00:96F0  FF FF FF FF FF FF FF FF 
      30.  00:96F8                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      30.  00:96F8  FF FF FF FF FF FF FF FF 
      31.  00:9700                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      31.  00:9700  FF FF FF FF FF FF FF FF 
      32.  00:9708                      
      33.  00:9708                      sprite_reliquia:
      34.  00:9708                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      34.  00:9708  FF FF FF FF FF FF FF FF 
      35.  00:9710                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      35.  00:9710  FF FF FF FF FF FF FF FF 
      36.  00:9718                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      36.  00:9718  FF FF FF FF FF FF FF FF 
      37.  00:9720                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      37.  00:9720  FF FF FF FF FF FF FF FF 
      38.  00:9728                      	
      39.  00:9728                      sprite_vida_extra:
      40.  00:9728                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      40.  00:9728  FF FF FF FF FF FF FF FF 
      41.  00:9730                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      41.  00:9730  FF FF FF FF FF FF FF FF 
      42.  00:9738                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      42.  00:9738  FF FF FF FF FF FF FF FF 
      43.  00:9740                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      43.  00:9740  FF FF FF FF FF FF FF FF 
      44.  00:9748                      
      45.  00:9748                      sprite_planta:
      46.  00:9748                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      46.  00:9748  FF FF FF FF FF FF FF FF 
      47.  00:9750                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      47.  00:9750  FF FF FF FF FF FF FF FF 
      48.  00:9758                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      48.  00:9758  FF FF FF FF FF FF FF FF 
      49.  00:9760                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      49.  00:9760  FF FF FF FF FF FF FF FF 
      50.  00:9768                      	
      51.  00:9768                      sprite_ballesta_mejorada:
      52.  00:9768                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      52.  00:9768  FF FF FF FF FF FF FF FF 
      53.  00:9770                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      53.  00:9770  FF FF FF FF FF FF FF FF 
      54.  00:9778                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      54.  00:9778  FF FF FF FF FF FF FF FF 
      55.  00:9780                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF	
      55.  00:9780  FF FF FF FF FF FF FF FF 
      56.  00:9788                      	
      57.  00:9788                      sprite_explosion_1:
      58.  00:9788                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      58.  00:9788  FF FF FF FF FF FF FF FF 
      59.  00:9790                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      59.  00:9790  FF FF FF FF FF FF FF FF 
      60.  00:9798                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      60.  00:9798  FF FF FF FF FF FF FF FF 
      61.  00:97A0                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF	
      61.  00:97A0  FF FF FF FF FF FF FF FF 
      62.  00:97A8                      
      63.  00:97A8                      sprite_explosion_2:
      64.  00:97A8                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      64.  00:97A8  FF FF FF FF FF FF FF FF 
      65.  00:97B0                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      65.  00:97B0  FF FF FF FF FF FF FF FF 
      66.  00:97B8                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      66.  00:97B8  FF FF FF FF FF FF FF FF 
      67.  00:97C0                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF	
      67.  00:97C0  FF FF FF FF FF FF FF FF 
      68.  00:97C8                      fin_sprites_comunes:
      69.  00:97C8                      
      70.  00:97C8                      ;; PARTE 2: SPRITES NO COMUNES
      71.  00:97C8                      
      72.  00:97C8                      sprite_ciempies1_1:
      73.  00:97C8                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      73.  00:97C8  FF FF FF FF FF FF FF FF 
      74.  00:97D0                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      74.  00:97D0  FF FF FF FF FF FF FF FF 
      75.  00:97D8                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      75.  00:97D8  FF FF FF FF FF FF FF FF 
      76.  00:97E0                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      76.  00:97E0  FF FF FF FF FF FF FF FF 
      77.  00:97E8                      	
      78.  00:97E8                      sprite_ciempies1_2:
      79.  00:97E8                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      79.  00:97E8  FF FF FF FF FF FF FF FF 
      80.  00:97F0                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      80.  00:97F0  FF FF FF FF FF FF FF FF 
      81.  00:97F8                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      81.  00:97F8  FF FF FF FF FF FF FF FF 
      82.  00:9800                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      82.  00:9800  FF FF FF FF FF FF FF FF 
      83.  00:9808                      	
      84.  00:9808                      sprite_arana1_1:
      85.  00:9808                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      85.  00:9808  FF FF FF FF FF FF FF FF 
      86.  00:9810                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      86.  00:9810  FF FF FF FF FF FF FF FF 
      87.  00:9818                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      87.  00:9818  FF FF FF FF FF FF FF FF 
      88.  00:9820                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      88.  00:9820  FF FF FF FF FF FF FF FF 
      89.  00:9828                      	
      90.  00:9828                      sprite_arana1_2:
      91.  00:9828                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      91.  00:9828  FF FF FF FF FF FF FF FF 
      92.  00:9830                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      92.  00:9830  FF FF FF FF FF FF FF FF 
      93.  00:9838                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      93.  00:9838  FF FF FF FF FF FF FF FF 
      94.  00:9840                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      94.  00:9840  FF FF FF FF FF FF FF FF 
      95.  00:9848                      	
      96.  00:9848                      sprite_murcielago1_1:
      97.  00:9848                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      97.  00:9848  FF FF FF FF FF FF FF FF 
      98.  00:9850                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      98.  00:9850  FF FF FF FF FF FF FF FF 
      99.  00:9858                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      99.  00:9858  FF FF FF FF FF FF FF FF 
     100.  00:9860                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     100.  00:9860  FF FF FF FF FF FF FF FF 
     101.  00:9868                      	
     102.  00:9868                      sprite_murcielago1_2:
     103.  00:9868                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     103.  00:9868  FF FF FF FF FF FF FF FF 
     104.  00:9870                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     104.  00:9870  FF FF FF FF FF FF FF FF 
     105.  00:9878                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     105.  00:9878  FF FF FF FF FF FF FF FF 
     106.  00:9880                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF	
     106.  00:9880  FF FF FF FF FF FF FF FF 
     107.  00:9888                      
     108.  00:9888                      ;; SERPIENTE
     109.  00:9888                      
     110.  00:9888                      sprite_serpiente1_1:
     111.  00:9888                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     111.  00:9888  FF FF FF FF FF FF FF FF 
     112.  00:9890                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     112.  00:9890  FF FF FF FF FF FF FF FF 
     113.  00:9898                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     113.  00:9898  FF FF FF FF FF FF FF FF 
     114.  00:98A0                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     114.  00:98A0  FF FF FF FF FF FF FF FF 
     115.  00:98A8                      	
     116.  00:98A8                      sprite_serpiente1_2:
     117.  00:98A8                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     117.  00:98A8  FF FF FF FF FF FF FF FF 
     118.  00:98B0                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     118.  00:98B0  FF FF FF FF FF FF FF FF 
     119.  00:98B8                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     119.  00:98B8  FF FF FF FF FF FF FF FF 
     120.  00:98C0                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     120.  00:98C0  FF FF FF FF FF FF FF FF 
     121.  00:98C8                      	
     122.  00:98C8                      sprite_serpiente2_1:
     123.  00:98C8                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     123.  00:98C8  FF FF FF FF FF FF FF FF 
     124.  00:98D0                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     124.  00:98D0  FF FF FF FF FF FF FF FF 
     125.  00:98D8                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     125.  00:98D8  FF FF FF FF FF FF FF FF 
     126.  00:98E0                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     126.  00:98E0  FF FF FF FF FF FF FF FF 
     127.  00:98E8                      	
     128.  00:98E8                      sprite_serpiente2_2:
     129.  00:98E8                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     129.  00:98E8  FF FF FF FF FF FF FF FF 
     130.  00:98F0                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     130.  00:98F0  FF FF FF FF FF FF FF FF 
     131.  00:98F8                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     131.  00:98F8  FF FF FF FF FF FF FF FF 
     132.  00:9900                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     132.  00:9900  FF FF FF FF FF FF FF FF 
     133.  00:9908                      
     134.  00:9908                      ;; ZOMBI
     135.  00:9908                      
     136.  00:9908                      sprite_zombi1_1_1:
     137.  00:9908                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     137.  00:9908  FF FF FF FF FF FF FF FF 
     138.  00:9910                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     138.  00:9910  FF FF FF FF FF FF FF FF 
     139.  00:9918                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     139.  00:9918  FF FF FF FF FF FF FF FF 
     140.  00:9920                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     140.  00:9920  FF FF FF FF FF FF FF FF 
     141.  00:9928                      
     142.  00:9928                      sprite_zombi1_2_1:
     143.  00:9928                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     143.  00:9928  FF FF FF FF FF FF FF FF 
     144.  00:9930                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     144.  00:9930  FF FF FF FF FF FF FF FF 
     145.  00:9938                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     145.  00:9938  FF FF FF FF FF FF FF FF 
     146.  00:9940                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     146.  00:9940  FF FF FF FF FF FF FF FF 
     147.  00:9948                      	
     148.  00:9948                      sprite_zombi1_3_1:
     149.  00:9948                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     149.  00:9948  FF FF FF FF FF FF FF FF 
     150.  00:9950                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     150.  00:9950  FF FF FF FF FF FF FF FF 
     151.  00:9958                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     151.  00:9958  FF FF FF FF FF FF FF FF 
     152.  00:9960                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     152.  00:9960  FF FF FF FF FF FF FF FF 
     153.  00:9968                      	
     154.  00:9968                      sprite_zombi1_4_1:
     155.  00:9968                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     155.  00:9968  FF FF FF FF FF FF FF FF 
     156.  00:9970                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     156.  00:9970  FF FF FF FF FF FF FF FF 
     157.  00:9978                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     157.  00:9978  FF FF FF FF FF FF FF FF 
     158.  00:9980                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     158.  00:9980  FF FF FF FF FF FF FF FF 
     159.  00:9988                      	
     160.  00:9988                      sprite_zombi1_1_2:
     161.  00:9988                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     161.  00:9988  FF FF FF FF FF FF FF FF 
     162.  00:9990                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     162.  00:9990  FF FF FF FF FF FF FF FF 
     163.  00:9998                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     163.  00:9998  FF FF FF FF FF FF FF FF 
     164.  00:99A0                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     164.  00:99A0  FF FF FF FF FF FF FF FF 
     165.  00:99A8                      
     166.  00:99A8                      sprite_zombi1_2_2:
     167.  00:99A8                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     167.  00:99A8  FF FF FF FF FF FF FF FF 
     168.  00:99B0                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     168.  00:99B0  FF FF FF FF FF FF FF FF 
     169.  00:99B8                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     169.  00:99B8  FF FF FF FF FF FF FF FF 
     170.  00:99C0                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     170.  00:99C0  FF FF FF FF FF FF FF FF 
     171.  00:99C8                      	
     172.  00:99C8                      sprite_zombi1_3_2:
     173.  00:99C8                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     173.  00:99C8  FF FF FF FF FF FF FF FF 
     174.  00:99D0                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     174.  00:99D0  FF FF FF FF FF FF FF FF 
     175.  00:99D8                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     175.  00:99D8  FF FF FF FF FF FF FF FF 
     176.  00:99E0                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     176.  00:99E0  FF FF FF FF FF FF FF FF 
     177.  00:99E8                      	
     178.  00:99E8                      sprite_zombi1_4_2:
     179.  00:99E8                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     179.  00:99E8  FF FF FF FF FF FF FF FF 
     180.  00:99F0                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     180.  00:99F0  FF FF FF FF FF FF FF FF 
     181.  00:99F8                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     181.  00:99F8  FF FF FF FF FF FF FF FF 
     182.  00:9A00                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     182.  00:9A00  FF FF FF FF FF FF FF FF 
     183.  00:9A08                      	
     184.  00:9A08                      sprite_zombi2_1_1:
     185.  00:9A08                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     185.  00:9A08  FF FF FF FF FF FF FF FF 
     186.  00:9A10                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     186.  00:9A10  FF FF FF FF FF FF FF FF 
     187.  00:9A18                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     187.  00:9A18  FF FF FF FF FF FF FF FF 
     188.  00:9A20                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     188.  00:9A20  FF FF FF FF FF FF FF FF 
     189.  00:9A28                      
     190.  00:9A28                      sprite_zombi2_2_1:
     191.  00:9A28                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     191.  00:9A28  FF FF FF FF FF FF FF FF 
     192.  00:9A30                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     192.  00:9A30  FF FF FF FF FF FF FF FF 
     193.  00:9A38                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     193.  00:9A38  FF FF FF FF FF FF FF FF 
     194.  00:9A40                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     194.  00:9A40  FF FF FF FF FF FF FF FF 
     195.  00:9A48                      	
     196.  00:9A48                      sprite_zombi2_3_1:
     197.  00:9A48                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     197.  00:9A48  FF FF FF FF FF FF FF FF 
     198.  00:9A50                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     198.  00:9A50  FF FF FF FF FF FF FF FF 
     199.  00:9A58                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     199.  00:9A58  FF FF FF FF FF FF FF FF 
     200.  00:9A60                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     200.  00:9A60  FF FF FF FF FF FF FF FF 
     201.  00:9A68                      	
     202.  00:9A68                      sprite_zombi2_4_1:
     203.  00:9A68                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     203.  00:9A68  FF FF FF FF FF FF FF FF 
     204.  00:9A70                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     204.  00:9A70  FF FF FF FF FF FF FF FF 
     205.  00:9A78                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     205.  00:9A78  FF FF FF FF FF FF FF FF 
     206.  00:9A80                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     206.  00:9A80  FF FF FF FF FF FF FF FF 
     207.  00:9A88                      	
     208.  00:9A88                      sprite_zombi2_1_2:
     209.  00:9A88                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     209.  00:9A88  FF FF FF FF FF FF FF FF 
     210.  00:9A90                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     210.  00:9A90  FF FF FF FF FF FF FF FF 
     211.  00:9A98                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     211.  00:9A98  FF FF FF FF FF FF FF FF 
     212.  00:9AA0                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     212.  00:9AA0  FF FF FF FF FF FF FF FF 
     213.  00:9AA8                      
     214.  00:9AA8                      sprite_zombi2_2_2:
     215.  00:9AA8                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     215.  00:9AA8  FF FF FF FF FF FF FF FF 
     216.  00:9AB0                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     216.  00:9AB0  FF FF FF FF FF FF FF FF 
     217.  00:9AB8                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     217.  00:9AB8  FF FF FF FF FF FF FF FF 
     218.  00:9AC0                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     218.  00:9AC0  FF FF FF FF FF FF FF FF 
     219.  00:9AC8                      	
     220.  00:9AC8                      sprite_zombi2_3_2:
     221.  00:9AC8                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     221.  00:9AC8  FF FF FF FF FF FF FF FF 
     222.  00:9AD0                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     222.  00:9AD0  FF FF FF FF FF FF FF FF 
     223.  00:9AD8                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     223.  00:9AD8  FF FF FF FF FF FF FF FF 
     224.  00:9AE0                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     224.  00:9AE0  FF FF FF FF FF FF FF FF 
     225.  00:9AE8                      	
     226.  00:9AE8                      sprite_zombi2_4_2:
     227.  00:9AE8                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     227.  00:9AE8  FF FF FF FF FF FF FF FF 
     228.  00:9AF0                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     228.  00:9AF0  FF FF FF FF FF FF FF FF 
     229.  00:9AF8                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     229.  00:9AF8  FF FF FF FF FF FF FF FF 
     230.  00:9B00                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     230.  00:9B00  FF FF FF FF FF FF FF FF 
     231.  00:9B08                      	
     232.  00:9B08                      ;; CABALLERO
     233.  00:9B08                      
     234.  00:9B08                      sprite_caballero1_1_1:
     235.  00:9B08                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     235.  00:9B08  FF FF FF FF FF FF FF FF 
     236.  00:9B10                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     236.  00:9B10  FF FF FF FF FF FF FF FF 
     237.  00:9B18                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     237.  00:9B18  FF FF FF FF FF FF FF FF 
     238.  00:9B20                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     238.  00:9B20  FF FF FF FF FF FF FF FF 
     239.  00:9B28                      
     240.  00:9B28                      sprite_caballero1_2_1:
     241.  00:9B28                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     241.  00:9B28  FF FF FF FF FF FF FF FF 
     242.  00:9B30                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     242.  00:9B30  FF FF FF FF FF FF FF FF 
     243.  00:9B38                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     243.  00:9B38  FF FF FF FF FF FF FF FF 
     244.  00:9B40                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     244.  00:9B40  FF FF FF FF FF FF FF FF 
     245.  00:9B48                      	
     246.  00:9B48                      sprite_caballero1_3_1:
     247.  00:9B48                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     247.  00:9B48  FF FF FF FF FF FF FF FF 
     248.  00:9B50                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     248.  00:9B50  FF FF FF FF FF FF FF FF 
     249.  00:9B58                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     249.  00:9B58  FF FF FF FF FF FF FF FF 
     250.  00:9B60                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     250.  00:9B60  FF FF FF FF FF FF FF FF 
     251.  00:9B68                      	
     252.  00:9B68                      sprite_caballero1_4_1:
     253.  00:9B68                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     253.  00:9B68  FF FF FF FF FF FF FF FF 
     254.  00:9B70                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     254.  00:9B70  FF FF FF FF FF FF FF FF 
     255.  00:9B78                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     255.  00:9B78  FF FF FF FF FF FF FF FF 
     256.  00:9B80                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     256.  00:9B80  FF FF FF FF FF FF FF FF 
     257.  00:9B88                      	
     258.  00:9B88                      sprite_caballero1_1_2:
     259.  00:9B88                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     259.  00:9B88  FF FF FF FF FF FF FF FF 
     260.  00:9B90                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     260.  00:9B90  FF FF FF FF FF FF FF FF 
     261.  00:9B98                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     261.  00:9B98  FF FF FF FF FF FF FF FF 
     262.  00:9BA0                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     262.  00:9BA0  FF FF FF FF FF FF FF FF 
     263.  00:9BA8                      
     264.  00:9BA8                      sprite_caballero1_2_2:
     265.  00:9BA8                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     265.  00:9BA8  FF FF FF FF FF FF FF FF 
     266.  00:9BB0                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     266.  00:9BB0  FF FF FF FF FF FF FF FF 
     267.  00:9BB8                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     267.  00:9BB8  FF FF FF FF FF FF FF FF 
     268.  00:9BC0                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     268.  00:9BC0  FF FF FF FF FF FF FF FF 
     269.  00:9BC8                      	
     270.  00:9BC8                      sprite_caballero1_3_2:
     271.  00:9BC8                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     271.  00:9BC8  FF FF FF FF FF FF FF FF 
     272.  00:9BD0                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     272.  00:9BD0  FF FF FF FF FF FF FF FF 
     273.  00:9BD8                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     273.  00:9BD8  FF FF FF FF FF FF FF FF 
     274.  00:9BE0                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     274.  00:9BE0  FF FF FF FF FF FF FF FF 
     275.  00:9BE8                      	
     276.  00:9BE8                      sprite_caballero1_4_2:
     277.  00:9BE8                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     277.  00:9BE8  FF FF FF FF FF FF FF FF 
     278.  00:9BF0                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     278.  00:9BF0  FF FF FF FF FF FF FF FF 
     279.  00:9BF8                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     279.  00:9BF8  FF FF FF FF FF FF FF FF 
     280.  00:9C00                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     280.  00:9C00  FF FF FF FF FF FF FF FF 
     281.  00:9C08                      	
     282.  00:9C08                      sprite_caballero2_1_1:
     283.  00:9C08                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     283.  00:9C08  FF FF FF FF FF FF FF FF 
     284.  00:9C10                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     284.  00:9C10  FF FF FF FF FF FF FF FF 
     285.  00:9C18                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     285.  00:9C18  FF FF FF FF FF FF FF FF 
     286.  00:9C20                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     286.  00:9C20  FF FF FF FF FF FF FF FF 
     287.  00:9C28                      
     288.  00:9C28                      sprite_caballero2_2_1:
     289.  00:9C28                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     289.  00:9C28  FF FF FF FF FF FF FF FF 
     290.  00:9C30                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     290.  00:9C30  FF FF FF FF FF FF FF FF 
     291.  00:9C38                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     291.  00:9C38  FF FF FF FF FF FF FF FF 
     292.  00:9C40                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     292.  00:9C40  FF FF FF FF FF FF FF FF 
     293.  00:9C48                      	
     294.  00:9C48                      sprite_caballero2_3_1:
     295.  00:9C48                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     295.  00:9C48  FF FF FF FF FF FF FF FF 
     296.  00:9C50                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     296.  00:9C50  FF FF FF FF FF FF FF FF 
     297.  00:9C58                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     297.  00:9C58  FF FF FF FF FF FF FF FF 
     298.  00:9C60                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     298.  00:9C60  FF FF FF FF FF FF FF FF 
     299.  00:9C68                      	
     300.  00:9C68                      sprite_caballero2_4_1:
     301.  00:9C68                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     301.  00:9C68  FF FF FF FF FF FF FF FF 
     302.  00:9C70                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     302.  00:9C70  FF FF FF FF FF FF FF FF 
     303.  00:9C78                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     303.  00:9C78  FF FF FF FF FF FF FF FF 
     304.  00:9C80                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     304.  00:9C80  FF FF FF FF FF FF FF FF 
     305.  00:9C88                      	
     306.  00:9C88                      sprite_caballero2_1_2:
     307.  00:9C88                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     307.  00:9C88  FF FF FF FF FF FF FF FF 
     308.  00:9C90                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     308.  00:9C90  FF FF FF FF FF FF FF FF 
     309.  00:9C98                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     309.  00:9C98  FF FF FF FF FF FF FF FF 
     310.  00:9CA0                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     310.  00:9CA0  FF FF FF FF FF FF FF FF 
     311.  00:9CA8                      
     312.  00:9CA8                      sprite_caballero2_2_2:
     313.  00:9CA8                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     313.  00:9CA8  FF FF FF FF FF FF FF FF 
     314.  00:9CB0                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     314.  00:9CB0  FF FF FF FF FF FF FF FF 
     315.  00:9CB8                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     315.  00:9CB8  FF FF FF FF FF FF FF FF 
     316.  00:9CC0                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     316.  00:9CC0  FF FF FF FF FF FF FF FF 
     317.  00:9CC8                      	
     318.  00:9CC8                      sprite_caballero2_3_2:
     319.  00:9CC8                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     319.  00:9CC8  FF FF FF FF FF FF FF FF 
     320.  00:9CD0                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     320.  00:9CD0  FF FF FF FF FF FF FF FF 
     321.  00:9CD8                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     321.  00:9CD8  FF FF FF FF FF FF FF FF 
     322.  00:9CE0                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     322.  00:9CE0  FF FF FF FF FF FF FF FF 
     323.  00:9CE8                      	
     324.  00:9CE8                      sprite_caballero2_4_2:
     325.  00:9CE8                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     325.  00:9CE8  FF FF FF FF FF FF FF FF 
     326.  00:9CF0                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     326.  00:9CF0  FF FF FF FF FF FF FF FF 
     327.  00:9CF8                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     327.  00:9CF8  FF FF FF FF FF FF FF FF 
     328.  00:9D00                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     328.  00:9D00  FF FF FF FF FF FF FF FF 
     329.  00:9D08                      	
     330.  00:9D08                      ;; LLAMA
     331.  00:9D08                      
     332.  00:9D08                      sprite_llama1_1:	
     333.  00:9D08                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     333.  00:9D08  FF FF FF FF FF FF FF FF 
     334.  00:9D10                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     334.  00:9D10  FF FF FF FF FF FF FF FF 
     335.  00:9D18                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     335.  00:9D18  FF FF FF FF FF FF FF FF 
     336.  00:9D20                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     336.  00:9D20  FF FF FF FF FF FF FF FF 
     337.  00:9D28                      	
     338.  00:9D28                      sprite_llama2_1:	
     339.  00:9D28                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     339.  00:9D28  FF FF FF FF FF FF FF FF 
     340.  00:9D30                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     340.  00:9D30  FF FF FF FF FF FF FF FF 
     341.  00:9D38                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     341.  00:9D38  FF FF FF FF FF FF FF FF 
     342.  00:9D40                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF	
     342.  00:9D40  FF FF FF FF FF FF FF FF 
     343.  00:9D48                      	
     344.  00:9D48                      sprite_llama1_2:	
     345.  00:9D48                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     345.  00:9D48  FF FF FF FF FF FF FF FF 
     346.  00:9D50                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     346.  00:9D50  FF FF FF FF FF FF FF FF 
     347.  00:9D58                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     347.  00:9D58  FF FF FF FF FF FF FF FF 
     348.  00:9D60                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     348.  00:9D60  FF FF FF FF FF FF FF FF 
     349.  00:9D68                      	
     350.  00:9D68                      sprite_llama2_2:	
     351.  00:9D68                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     351.  00:9D68  FF FF FF FF FF FF FF FF 
     352.  00:9D70                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     352.  00:9D70  FF FF FF FF FF FF FF FF 
     353.  00:9D78                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     353.  00:9D78  FF FF FF FF FF FF FF FF 
     354.  00:9D80                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF			
     354.  00:9D80  FF FF FF FF FF FF FF FF 
     355.  00:9D88                      	
     356.  00:9D88                      ;; FANTASMA
     357.  00:9D88                      
     358.  00:9D88                      sprite_fantasma1_1:
     359.  00:9D88                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     359.  00:9D88  FF FF FF FF FF FF FF FF 
     360.  00:9D90                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     360.  00:9D90  FF FF FF FF FF FF FF FF 
     361.  00:9D98                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     361.  00:9D98  FF FF FF FF FF FF FF FF 
     362.  00:9DA0                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     362.  00:9DA0  FF FF FF FF FF FF FF FF 
     363.  00:9DA8                      
     364.  00:9DA8                      sprite_fantasma2_1:
     365.  00:9DA8                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     365.  00:9DA8  FF FF FF FF FF FF FF FF 
     366.  00:9DB0                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     366.  00:9DB0  FF FF FF FF FF FF FF FF 
     367.  00:9DB8                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     367.  00:9DB8  FF FF FF FF FF FF FF FF 
     368.  00:9DC0                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     368.  00:9DC0  FF FF FF FF FF FF FF FF 
     369.  00:9DC8                      
     370.  00:9DC8                      sprite_fantasma1_2:
     371.  00:9DC8                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     371.  00:9DC8  FF FF FF FF FF FF FF FF 
     372.  00:9DD0                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     372.  00:9DD0  FF FF FF FF FF FF FF FF 
     373.  00:9DD8                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     373.  00:9DD8  FF FF FF FF FF FF FF FF 
     374.  00:9DE0                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     374.  00:9DE0  FF FF FF FF FF FF FF FF 
     375.  00:9DE8                      
     376.  00:9DE8                      sprite_fantasma2_2:
     377.  00:9DE8                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     377.  00:9DE8  FF FF FF FF FF FF FF FF 
     378.  00:9DF0                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     378.  00:9DF0  FF FF FF FF FF FF FF FF 
     379.  00:9DF8                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     379.  00:9DF8  FF FF FF FF FF FF FF FF 
     380.  00:9E00                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF	
     380.  00:9E00  FF FF FF FF FF FF FF FF 
     381.  00:9E08                      	
     382.  00:9E08                      ;; MAGIA
     383.  00:9E08                      
     384.  00:9E08                      sprite_magia1_1:
     385.  00:9E08                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     385.  00:9E08  FF FF FF FF FF FF FF FF 
     386.  00:9E10                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     386.  00:9E10  FF FF FF FF FF FF FF FF 
     387.  00:9E18                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     387.  00:9E18  FF FF FF FF FF FF FF FF 
     388.  00:9E20                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     388.  00:9E20  FF FF FF FF FF FF FF FF 
     389.  00:9E28                      
     390.  00:9E28                      sprite_magia2_1:
     391.  00:9E28                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     391.  00:9E28  FF FF FF FF FF FF FF FF 
     392.  00:9E30                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     392.  00:9E30  FF FF FF FF FF FF FF FF 
     393.  00:9E38                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     393.  00:9E38  FF FF FF FF FF FF FF FF 
     394.  00:9E40                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     394.  00:9E40  FF FF FF FF FF FF FF FF 
     395.  00:9E48                      
     396.  00:9E48                      sprite_magia1_2:
     397.  00:9E48                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     397.  00:9E48  FF FF FF FF FF FF FF FF 
     398.  00:9E50                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     398.  00:9E50  FF FF FF FF FF FF FF FF 
     399.  00:9E58                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     399.  00:9E58  FF FF FF FF FF FF FF FF 
     400.  00:9E60                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     400.  00:9E60  FF FF FF FF FF FF FF FF 
     401.  00:9E68                      
     402.  00:9E68                      sprite_magia2_2:
     403.  00:9E68                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     403.  00:9E68  FF FF FF FF FF FF FF FF 
     404.  00:9E70                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     404.  00:9E70  FF FF FF FF FF FF FF FF 
     405.  00:9E78                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     405.  00:9E78  FF FF FF FF FF FF FF FF 
     406.  00:9E80                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF	
     406.  00:9E80  FF FF FF FF FF FF FF FF 
     407.  00:9E88                      	
     408.  00:9E88                      	
     409.  00:9E88                      ;; BEHOLDER
     410.  00:9E88                      
     411.  00:9E88                      sprite_beholder1_1:
     412.  00:9E88                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     412.  00:9E88  FF FF FF FF FF FF FF FF 
     413.  00:9E90                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     413.  00:9E90  FF FF FF FF FF FF FF FF 
     414.  00:9E98                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     414.  00:9E98  FF FF FF FF FF FF FF FF 
     415.  00:9EA0                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     415.  00:9EA0  FF FF FF FF FF FF FF FF 
     416.  00:9EA8                      
     417.  00:9EA8                      sprite_beholder2_1:
     418.  00:9EA8                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     418.  00:9EA8  FF FF FF FF FF FF FF FF 
     419.  00:9EB0                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     419.  00:9EB0  FF FF FF FF FF FF FF FF 
     420.  00:9EB8                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     420.  00:9EB8  FF FF FF FF FF FF FF FF 
     421.  00:9EC0                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     421.  00:9EC0  FF FF FF FF FF FF FF FF 
     422.  00:9EC8                      
     423.  00:9EC8                      sprite_beholder3_1:
     424.  00:9EC8                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     424.  00:9EC8  FF FF FF FF FF FF FF FF 
     425.  00:9ED0                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     425.  00:9ED0  FF FF FF FF FF FF FF FF 
     426.  00:9ED8                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     426.  00:9ED8  FF FF FF FF FF FF FF FF 
     427.  00:9EE0                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     427.  00:9EE0  FF FF FF FF FF FF FF FF 
     428.  00:9EE8                      
     429.  00:9EE8                      sprite_beholder4_1:
     430.  00:9EE8                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     430.  00:9EE8  FF FF FF FF FF FF FF FF 
     431.  00:9EF0                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     431.  00:9EF0  FF FF FF FF FF FF FF FF 
     432.  00:9EF8                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     432.  00:9EF8  FF FF FF FF FF FF FF FF 
     433.  00:9F00                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF	
     433.  00:9F00  FF FF FF FF FF FF FF FF 
     434.  00:9F08                      	
     435.  00:9F08                      sprite_beholder1_2:
     436.  00:9F08                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     436.  00:9F08  FF FF FF FF FF FF FF FF 
     437.  00:9F10                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     437.  00:9F10  FF FF FF FF FF FF FF FF 
     438.  00:9F18                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     438.  00:9F18  FF FF FF FF FF FF FF FF 
     439.  00:9F20                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     439.  00:9F20  FF FF FF FF FF FF FF FF 
     440.  00:9F28                      
     441.  00:9F28                      sprite_beholder2_2:
     442.  00:9F28                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     442.  00:9F28  FF FF FF FF FF FF FF FF 
     443.  00:9F30                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     443.  00:9F30  FF FF FF FF FF FF FF FF 
     444.  00:9F38                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     444.  00:9F38  FF FF FF FF FF FF FF FF 
     445.  00:9F40                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     445.  00:9F40  FF FF FF FF FF FF FF FF 
     446.  00:9F48                      
     447.  00:9F48                      sprite_beholder3_2:
     448.  00:9F48                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     448.  00:9F48  FF FF FF FF FF FF FF FF 
     449.  00:9F50                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     449.  00:9F50  FF FF FF FF FF FF FF FF 
     450.  00:9F58                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     450.  00:9F58  FF FF FF FF FF FF FF FF 
     451.  00:9F60                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     451.  00:9F60  FF FF FF FF FF FF FF FF 
     452.  00:9F68                      
     453.  00:9F68                      sprite_beholder4_2:
     454.  00:9F68                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     454.  00:9F68  FF FF FF FF FF FF FF FF 
     455.  00:9F70                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     455.  00:9F70  FF FF FF FF FF FF FF FF 
     456.  00:9F78                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     456.  00:9F78  FF FF FF FF FF FF FF FF 
     457.  00:9F80                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF		
     457.  00:9F80  FF FF FF FF FF FF FF FF 
     458.  00:9F88                      	
     459.  00:9F88                      ;; VAMPIRO
     460.  00:9F88                      
     461.  00:9F88                      sprite_vampiro1_1:
     462.  00:9F88                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     462.  00:9F88  FF FF FF FF FF FF FF FF 
     463.  00:9F90                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     463.  00:9F90  FF FF FF FF FF FF FF FF 
     464.  00:9F98                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     464.  00:9F98  FF FF FF FF FF FF FF FF 
     465.  00:9FA0                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     465.  00:9FA0  FF FF FF FF FF FF FF FF 
     466.  00:9FA8                      
     467.  00:9FA8                      sprite_vampiro2_1:
     468.  00:9FA8                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     468.  00:9FA8  FF FF FF FF FF FF FF FF 
     469.  00:9FB0                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     469.  00:9FB0  FF FF FF FF FF FF FF FF 
     470.  00:9FB8                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     470.  00:9FB8  FF FF FF FF FF FF FF FF 
     471.  00:9FC0                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     471.  00:9FC0  FF FF FF FF FF FF FF FF 
     472.  00:9FC8                      
     473.  00:9FC8                      sprite_vampiro1_2:
     474.  00:9FC8                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     474.  00:9FC8  FF FF FF FF FF FF FF FF 
     475.  00:9FD0                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     475.  00:9FD0  FF FF FF FF FF FF FF FF 
     476.  00:9FD8                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     476.  00:9FD8  FF FF FF FF FF FF FF FF 
     477.  00:9FE0                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     477.  00:9FE0  FF FF FF FF FF FF FF FF 
     478.  00:9FE8                      
     479.  00:9FE8                      sprite_vampiro2_2:
     480.  00:9FE8                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     480.  00:9FE8  FF FF FF FF FF FF FF FF 
     481.  00:9FF0                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     481.  00:9FF0  FF FF FF FF FF FF FF FF 
     482.  00:9FF8                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     482.  00:9FF8  FF FF FF FF FF FF FF FF 
     483.  00:A000                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     483.  00:A000  FF FF FF FF FF FF FF FF 
     484.  00:A008                      	
     485.  00:A008                      ;; MANOIZQ
     486.  00:A008                      
     487.  00:A008                      sprite_manoizq1:
     488.  00:A008                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     488.  00:A008  FF FF FF FF FF FF FF FF 
     489.  00:A010                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     489.  00:A010  FF FF FF FF FF FF FF FF 
     490.  00:A018                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     490.  00:A018  FF FF FF FF FF FF FF FF 
     491.  00:A020                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     491.  00:A020  FF FF FF FF FF FF FF FF 
     492.  00:A028                      	
     493.  00:A028                      sprite_manoizq2:
     494.  00:A028                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     494.  00:A028  FF FF FF FF FF FF FF FF 
     495.  00:A030                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     495.  00:A030  FF FF FF FF FF FF FF FF 
     496.  00:A038                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     496.  00:A038  FF FF FF FF FF FF FF FF 
     497.  00:A040                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     497.  00:A040  FF FF FF FF FF FF FF FF 
     498.  00:A048                      	
     499.  00:A048                      sprite_manoizq3:
     500.  00:A048                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     500.  00:A048  FF FF FF FF FF FF FF FF 
     501.  00:A050                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     501.  00:A050  FF FF FF FF FF FF FF FF 
     502.  00:A058                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     502.  00:A058  FF FF FF FF FF FF FF FF 
     503.  00:A060                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF	
     503.  00:A060  FF FF FF FF FF FF FF FF 
     504.  00:A068                      	
     505.  00:A068                      ;; MANODER
     506.  00:A068                      
     507.  00:A068                      sprite_manoder1:
     508.  00:A068                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     508.  00:A068  FF FF FF FF FF FF FF FF 
     509.  00:A070                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     509.  00:A070  FF FF FF FF FF FF FF FF 
     510.  00:A078                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     510.  00:A078  FF FF FF FF FF FF FF FF 
     511.  00:A080                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     511.  00:A080  FF FF FF FF FF FF FF FF 
     512.  00:A088                      	
     513.  00:A088                      sprite_manoder2:
     514.  00:A088                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     514.  00:A088  FF FF FF FF FF FF FF FF 
     515.  00:A090                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     515.  00:A090  FF FF FF FF FF FF FF FF 
     516.  00:A098                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     516.  00:A098  FF FF FF FF FF FF FF FF 
     517.  00:A0A0                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     517.  00:A0A0  FF FF FF FF FF FF FF FF 
     518.  00:A0A8                      	
     519.  00:A0A8                      sprite_manoder3:
     520.  00:A0A8                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     520.  00:A0A8  FF FF FF FF FF FF FF FF 
     521.  00:A0B0                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     521.  00:A0B0  FF FF FF FF FF FF FF FF 
     522.  00:A0B8                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     522.  00:A0B8  FF FF FF FF FF FF FF FF 
     523.  00:A0C0                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF		
     523.  00:A0C0  FF FF FF FF FF FF FF FF 
     524.  00:A0C8                      	
     525.  00:A0C8                      	
     526.  00:A0C8                      	
     527.  00:A0C8                      	
     528.  00:A0C8                      	
     529.  00:A0C8                      	
     530.  00:A0C8                      	
     531.  00:A0C8                      	
     532.  00:A0C8                      	
     533.  00:A0C8                      	
     534.  00:A0C8                      	
     535.  00:A0C8                      	
     536.  00:A0C8                      	
     537.  00:A0C8                      	
     538.  00:A0C8                      	
     539.  00:A0C8                      	
     540.  00:A0C8                      	
     541.  00:A0C8                      	
     542.  00:A0C8                      	
     543.  00:A0C8                      	
     544.  00:A0C8                      	
     545.  00:A0C8                      	
     546.  00:A0C8                      	
     133   00:A0C8                      	
     134   00:A0C8                      	include "habitaciones.asm"
       1.  00:A0C8                      ;;=====================================================
       2.  00:A0C8                      ;;DEFINICIÓN DE HABITACIONES x NIVEL
       3.  00:A0C8                      ;;=====================================================	
       4.  00:A0C8                      
       5.  00:A0C8                      ; sólo voy a usar 7x7 pero como los arrays son lineales y voy a trabajar con matrices
       6.  00:A0C8                      ; me interesa que seande  8x8 aunque sólo trabaje con 7x7
       7.  00:A0C8                      
       8.  00:A0C8                      ; ojo... la primera linea corresponderá a la primera linea del castillo no a la última
       9.  00:A0C8                      
      10.  00:A0C8                      ;; definición de estructura de bits
      11.  00:A0C8                      ;16 bits por habitación
      12.  00:A0C8                      ;~ 0000 - nº puertas 1 arriba 1 derecha 1 abajo 1 izquierda
      13.  00:A0C8                      ;~ 1 - hay reliquia?
      14.  00:A0C8                      ;~ 1 - hay vida extra
      15.  00:A0C8                      ;~ 1 - hay arma extra (durará 6 pantallas - sonido distinto)
      16.  00:A0C8                      ;~ 1 - hay energía? (sobran bits ... se puede usar otro como carga energía +)
      17.  00:A0C8                      ;~ 1 - es pantalla de mostruo fin de fase?
      18.  00:A0C8                      ;~ 1 - es pantalla inicial (equivaldría a la puerta de un castillo)?
      19.  00:A0C8                      ;~ 1 - es pantalla final?
      20.  00:A0C8                      
      21.  00:A0C8                      
      22.  00:A0C8                      ;importante: el byte de la columna 15 indicará con 1 y 0 habitaciones por las que se haya pasado
      23.  00:A0C8                      ;cuando se inicie la partida todos se pondrán a 0
      24.  00:A0C8                      
      25.  00:A0C8                      habitacion_actual:
      26.  00:A0C8  00 00               	db  #00,#00		;habitación donde se encuentre el prota. Se mete en una varible par traer todos los datos de golpe y no buscrlos varias veces
      27.  00:A0CA                      
      28.  00:A0CA                      habitaciones_juego:
      29.  00:A0CA                      habitaciones_nivel0:
      30.  00:A0CA                      	db  00000000b,#00,00000001b,#01,00000010b,#02,00000011b,#03,00001000b,#04,00001001b,#05,00001100b,#06,#FF,#00 ;primera fila
      30.  00:A0CA  00 00 01 01 02 02 03 03 08 04 09 05 0C 06 FF 00 
      31.  00:A0DA                      	db  #17,#10,#11,#11,#12,#12,#13,#13,#14,#14,#15,#15,#16,#16,#FF,#00
      31.  00:A0DA  17 10 11 11 12 12 13 13 14 14 15 15 16 16 FF 00 
      32.  00:A0EA                      	db  #20,#20,#21,#21,#22,#22,#23,#23,#24,#24,#25,#25,#26,#26,#FF,#00
      32.  00:A0EA  20 20 21 21 22 22 23 23 24 24 25 25 26 26 FF 00 
      33.  00:A0FA                      	db  #30,#30,#31,#31,#32,#32,#33,#33,#34,#34,#35,#35,#36,#36,#FF,#00
      33.  00:A0FA  30 30 31 31 32 32 33 33 34 34 35 35 36 36 FF 00 
      34.  00:A10A                      	db  00000000b,#00,00000001b,#01,00001111b,#02,00000011b,#03,00001000b,#04,00001001b,#05,00001100b,#06,#FF,#00
      34.  00:A10A  00 00 01 01 0F 02 03 03 08 04 09 05 0C 06 FF 00 
      35.  00:A11A                      	db  #50,#50,#51,#51,#52,#52,#53,#53,#54,#54,#55,#55,#56,#56,#FF,#00
      35.  00:A11A  50 50 51 51 52 52 53 53 54 54 55 55 56 56 FF 00 
      36.  00:A12A                      	db  00000000b,#00,00000001b,#01,00001111b,#02,00000011b,#03,00001000b,#04,00001001b,#05,00001100b,#06,#FF,#00	;ultima fila
      36.  00:A12A  00 00 01 01 0F 02 03 03 08 04 09 05 0C 06 FF 00 
      37.  00:A13A                      	
      38.  00:A13A                      habitaciones_nivel1:
      39.  00:A13A                      	db  00000000b,#00,00000001b,#01,00000010b,#02,00000011b,#03,00001000b,#04,00001001b,#05,00001100b,#06,#FF,#00 ;primera fila
      39.  00:A13A  00 00 01 01 02 02 03 03 08 04 09 05 0C 06 FF 00 
      40.  00:A14A                      	db  #17,#10,#11,#11,#12,#12,#13,#13,#14,#14,#15,#15,#16,#16,#FF,#00
      40.  00:A14A  17 10 11 11 12 12 13 13 14 14 15 15 16 16 FF 00 
      41.  00:A15A                      	db  #20,#20,#21,#21,#22,#22,#23,#23,#24,#24,#25,#25,#26,#26,#FF,#00
      41.  00:A15A  20 20 21 21 22 22 23 23 24 24 25 25 26 26 FF 00 
      42.  00:A16A                      	db  #30,#30,#31,#31,#32,#32,#33,#33,#34,#34,#35,#35,#36,#36,#FF,#00
      42.  00:A16A  30 30 31 31 32 32 33 33 34 34 35 35 36 36 FF 00 
      43.  00:A17A                      	db  00000000b,#00,00000001b,#01,00001111b,#02,00000011b,#03,00001000b,#04,00001001b,#05,00001100b,#06,#FF,#00
      43.  00:A17A  00 00 01 01 0F 02 03 03 08 04 09 05 0C 06 FF 00 
      44.  00:A18A                      	db  #50,#50,#51,#51,#52,#52,#53,#53,#54,#54,#55,#55,#56,#56,#FF,#00
      44.  00:A18A  50 50 51 51 52 52 53 53 54 54 55 55 56 56 FF 00 
      45.  00:A19A                      	db  00000000b,#00,00000001b,#01,00000010b,#02,00000011b,#03,00001000b,#04,00001001b,#05,00001100b,#06,#FF,#00	;ultima fila
      45.  00:A19A  00 00 01 01 02 02 03 03 08 04 09 05 0C 06 FF 00 
      46.  00:A1AA                      	
      47.  00:A1AA                      habitaciones_nivel2:
      48.  00:A1AA                      	db  00000000b,#00,00000001b,#01,00000010b,#02,00000011b,#03,00001000b,#04,00001001b,#05,00001100b,#06,#FF,#00 ;primera fila
      48.  00:A1AA  00 00 01 01 02 02 03 03 08 04 09 05 0C 06 FF 00 
      49.  00:A1BA                      	db  #17,#10,#11,#11,#12,#12,#13,#13,#14,#14,#15,#15,#16,#16,#FF,#00
      49.  00:A1BA  17 10 11 11 12 12 13 13 14 14 15 15 16 16 FF 00 
      50.  00:A1CA                      	db  #20,#20,#21,#21,#22,#22,#23,#23,#24,#24,#25,#25,#26,#26,#FF,#00
      50.  00:A1CA  20 20 21 21 22 22 23 23 24 24 25 25 26 26 FF 00 
      51.  00:A1DA                      	db  #30,#30,#31,#31,#32,#32,#33,#33,#34,#34,#35,#35,#36,#36,#FF,#00
      51.  00:A1DA  30 30 31 31 32 32 33 33 34 34 35 35 36 36 FF 00 
      52.  00:A1EA                      	db  00000000b,#00,00000001b,#01,00001111b,#02,00000011b,#03,00001000b,#04,00001001b,#05,00001100b,#06,#FF,#00
      52.  00:A1EA  00 00 01 01 0F 02 03 03 08 04 09 05 0C 06 FF 00 
      53.  00:A1FA                      	db  #50,#50,#51,#51,#52,#52,#53,#53,#54,#54,#55,#55,#56,#56,#FF,#00
      53.  00:A1FA  50 50 51 51 52 52 53 53 54 54 55 55 56 56 FF 00 
      54.  00:A20A                      	db  00000000b,#00,00000001b,#01,00000010b,#02,00000011b,#03,00001000b,#04,00001001b,#05,00001100b,#06,#FF,#00	;ultima fila
      54.  00:A20A  00 00 01 01 02 02 03 03 08 04 09 05 0C 06 FF 00 
      55.  00:A21A                      	
      56.  00:A21A                      habitaciones_nivel3:
      57.  00:A21A                      	db  00000000b,#00,00000001b,#01,00000010b,#02,00000011b,#03,00001000b,#04,00001001b,#05,00001100b,#06,#FF,#00 ;primera fila
      57.  00:A21A  00 00 01 01 02 02 03 03 08 04 09 05 0C 06 FF 00 
      58.  00:A22A                      	db  #17,#10,#11,#11,#12,#12,#13,#13,#14,#14,#15,#15,#16,#16,#FF,#00
      58.  00:A22A  17 10 11 11 12 12 13 13 14 14 15 15 16 16 FF 00 
      59.  00:A23A                      	db  #20,#20,#21,#21,#22,#22,#23,#23,#24,#24,#25,#25,#26,#26,#FF,#00
      59.  00:A23A  20 20 21 21 22 22 23 23 24 24 25 25 26 26 FF 00 
      60.  00:A24A                      	db  #30,#30,#31,#31,#32,#32,#33,#33,#34,#34,#35,#35,#36,#36,#FF,#00
      60.  00:A24A  30 30 31 31 32 32 33 33 34 34 35 35 36 36 FF 00 
      61.  00:A25A                      	db  00000000b,#00,00000001b,#01,00001111b,#02,00000011b,#03,00001000b,#04,00001001b,#05,00001100b,#06,#FF,#00
      61.  00:A25A  00 00 01 01 0F 02 03 03 08 04 09 05 0C 06 FF 00 
      62.  00:A26A                      	db  #50,#50,#51,#51,#52,#52,#53,#53,#54,#54,#55,#55,#56,#56,#FF,#00
      62.  00:A26A  50 50 51 51 52 52 53 53 54 54 55 55 56 56 FF 00 
      63.  00:A27A                      	db  00000000b,#00,00000001b,#01,00000010b,#02,00000011b,#03,00001000b,#04,00001001b,#05,00001100b,#06,#FF,#00	;ultima fila
      63.  00:A27A  00 00 01 01 02 02 03 03 08 04 09 05 0C 06 FF 00 
      64.  00:A28A                      	
      65.  00:A28A                      habitaciones_nivel4:
      66.  00:A28A                      	db  00000001b,#00,00000001b,#01,00000010b,#02,00000011b,#03,00001000b,#04,00001001b,#05,00001100b,#06,#FF,#00 ;primera fila
      66.  00:A28A  01 00 01 01 02 02 03 03 08 04 09 05 0C 06 FF 00 
      67.  00:A29A                      	db  #17,#10,#11,#11,#12,#12,#13,#13,#14,#14,#15,#15,#16,#16,#FF,#00
      67.  00:A29A  17 10 11 11 12 12 13 13 14 14 15 15 16 16 FF 00 
      68.  00:A2AA                      	db  #20,#20,#21,#21,#22,#22,#23,#23,#24,#24,#25,#25,#26,#26,#FF,#00
      68.  00:A2AA  20 20 21 21 22 22 23 23 24 24 25 25 26 26 FF 00 
      69.  00:A2BA                      	db  #30,#30,#31,#31,#32,#32,#33,#33,#34,#34,#35,#35,#36,#36,#FF,#00
      69.  00:A2BA  30 30 31 31 32 32 33 33 34 34 35 35 36 36 FF 00 
      70.  00:A2CA                      	db  00000000b,#00,00000001b,#01,00001111b,#02,00000011b,#03,00001000b,#04,00001001b,#05,00001100b,#06,#FF,#00
      70.  00:A2CA  00 00 01 01 0F 02 03 03 08 04 09 05 0C 06 FF 00 
      71.  00:A2DA                      	db  #50,#50,#51,#51,#52,#52,#53,#53,#54,#54,#55,#55,#56,#56,#FF,#00
      71.  00:A2DA  50 50 51 51 52 52 53 53 54 54 55 55 56 56 FF 00 
      72.  00:A2EA                      	db  00000000b,#00,00000001b,#01,00001111b,#02,00000011b,#03,00001000b,#04,00001001b,#05,00001100b,#06,#FF,#00	;ultima fila
      72.  00:A2EA  00 00 01 01 0F 02 03 03 08 04 09 05 0C 06 FF 00 
      73.  00:A2FA                      	
      74.  00:A2FA                      habitaciones_nivel5:
      75.  00:A2FA                      	db  00000000b,#00,00000001b,#01,00000010b,#02,00000011b,#03,00001000b,#04,00001001b,#05,00001100b,#06,#FF,#00 ;primera fila
      75.  00:A2FA  00 00 01 01 02 02 03 03 08 04 09 05 0C 06 FF 00 
      76.  00:A30A                      	db  #17,#10,#11,#11,#12,#12,#13,#13,#14,#14,#15,#15,#16,#16,#FF,#00
      76.  00:A30A  17 10 11 11 12 12 13 13 14 14 15 15 16 16 FF 00 
      77.  00:A31A                      	db  #20,#20,#21,#21,#22,#22,#23,#23,#24,#24,#25,#25,#26,#26,#FF,#00
      77.  00:A31A  20 20 21 21 22 22 23 23 24 24 25 25 26 26 FF 00 
      78.  00:A32A                      	db  #30,#30,#31,#31,#32,#32,#33,#33,#34,#34,#35,#35,#36,#36,#FF,#00
      78.  00:A32A  30 30 31 31 32 32 33 33 34 34 35 35 36 36 FF 00 
      79.  00:A33A                      	db  00000000b,#00,00000001b,#01,00001111b,#02,00000011b,#03,00001000b,#04,00001001b,#05,00001100b,#06,#FF,#00
      79.  00:A33A  00 00 01 01 0F 02 03 03 08 04 09 05 0C 06 FF 00 
      80.  00:A34A                      	db  #50,#50,#51,#51,#52,#52,#53,#53,#54,#54,#55,#55,#56,#56,#FF,#00
      80.  00:A34A  50 50 51 51 52 52 53 53 54 54 55 55 56 56 FF 00 
      81.  00:A35A                      	db  00000000b,#00,00000001b,#01,00001010b,#02,00000011b,#03,00001000b,#04,00001001b,#05,00001100b,#06,#FF,#00	;ultima fila
      81.  00:A35A  00 00 01 01 0A 02 03 03 08 04 09 05 0C 06 FF 00 
      82.  00:A36A                      	
      83.  00:A36A                      habitaciones_nivel6:
      84.  00:A36A                      	db  00000000b,#00,00000001b,#01,00000010b,#02,00000011b,#03,00001000b,#04,00001001b,#05,00001100b,#06,#FF,#00 ;primera fila
      84.  00:A36A  00 00 01 01 02 02 03 03 08 04 09 05 0C 06 FF 00 
      85.  00:A37A                      	db  #17,#10,#11,#11,#12,#12,#13,#13,#14,#14,#15,#15,#16,#16,#FF,#00
      85.  00:A37A  17 10 11 11 12 12 13 13 14 14 15 15 16 16 FF 00 
      86.  00:A38A                      	db  #20,#20,#21,#21,#22,#22,#23,#23,#24,#24,#25,#25,#26,#26,#FF,#00
      86.  00:A38A  20 20 21 21 22 22 23 23 24 24 25 25 26 26 FF 00 
      87.  00:A39A                      	db  #30,#30,#31,#31,#32,#32,#33,#33,#34,#34,#35,#35,#36,#36,#FF,#00
      87.  00:A39A  30 30 31 31 32 32 33 33 34 34 35 35 36 36 FF 00 
      88.  00:A3AA                      	db  00000000b,#00,00000001b,#01,00001111b,#02,00000011b,#03,00001000b,#04,00001001b,#05,00001100b,#06,#FF,#00
      88.  00:A3AA  00 00 01 01 0F 02 03 03 08 04 09 05 0C 06 FF 00 
      89.  00:A3BA                      	db  #50,#50,#51,#51,#52,#52,#53,#53,#54,#54,#55,#55,#56,#56,#FF,#00
      89.  00:A3BA  50 50 51 51 52 52 53 53 54 54 55 55 56 56 FF 00 
      90.  00:A3CA                      	db  00000000b,#00,00000001b,#01,00000010b,#02,00000011b,#03,00001000b,#04,00001001b,#05,00001100b,#06,#FF,#00	;ultima fila
      90.  00:A3CA  00 00 01 01 02 02 03 03 08 04 09 05 0C 06 FF 00 
      91.  00:A3DA                      
      92.  00:A3DA                      
      93.  00:A3DA                      
     135   00:A3DA                      	
     136   00:A3DA                      	include "variables.asm"
       1.  00:A3DA                      ;;=====================================================
       2.  00:A3DA                      ;;DEFINICIÓN DE VARIABLES
       3.  00:A3DA                      ;;=====================================================
       4.  00:A3DA                      
       5.  00:A3DA                      ;Colores base de la pantalla
       6.  00:A3DA                      color_base:
       7.  00:A3DA  01 01 01            			DB		COLNEGRO,COLNEGRO,COLNEGRO	
       8.  00:A3DD                      ;colores de pantalla cuando se tira bomba
       9.  00:A3DD                      color_bomba1:
      10.  00:A3DD  08 08 08            			DB		COLROJO,COLROJO,COLROJO
      11.  00:A3E0                      color_bomba2:
      12.  00:A3E0  06 06 06            			DB		COLROJOOSC,COLROJOOSC,COLROJOOSC
      13.  00:A3E3                      
      14.  00:A3E3                      ;definicion de variable del prota usando la estructura del punto de mira
      15.  00:A3E3                      prota:		ESTRUCTURA_PUNTOMIRA
      15.  00:A3E3  64 64 00 00 00 05 00 00 00 00 00 00 00 00 00 00 
      16.  00:A3F3                      ;variables globales del prota
      17.  00:A3F3                      prota_nivel:			;nivel del castillo donde está 0-6
      18.  00:A3F3  00                  			DB		0
      19.  00:A3F4                      prota_vidas:
      20.  00:A3F4  00                  			DB		0
      21.  00:A3F5                      prota_reliquias:
      22.  00:A3F5  03                  			DB		3
      23.  00:A3F6                      prota_pos_mapx:
      24.  00:A3F6  00                  			DB		0	;pos columna
      25.  00:A3F7                      prota_pos_mapy:
      26.  00:A3F7  00                  			DB		0	;pos fila
      27.  00:A3F8                      prota_energia:
      28.  00:A3F8  FA                  			DB		250
      29.  00:A3F9                      
      30.  00:A3F9                      ;array para pintar de golpe el marcador de vidas
      31.  00:A3F9                      array_aux_vidas: 		
      32.  00:A3F9                      			DB		0,0,0,0,0,0,0,0
      32.  00:A3F9  00 00 00 00 00 00 00 00 
      33.  00:A401                      
      34.  00:A401                      ;array para pintar de golpe el marcador de reliquias
      35.  00:A401                      array_aux_reliquias:	
      36.  00:A401                      			DB		0,0,0,0,0,0,0,0
      36.  00:A401  00 00 00 00 00 00 00 00 
      37.  00:A409                      
      38.  00:A409                      array_aux_energia:					;array para pintar de golpe el marcador de energía
      39.  00:A409                      			DB		16,0,0,0,0,0,0 	;el 16 primero es porque siempre estará pintado el cuadro primero rojo
      39.  00:A409  10 00 00 00 00 00 00 
      40.  00:A410                      ultimo_pos_array_aux_energia:
      41.  00:A410  00                  			DB		0				;el array completo es de 8 pero para posicionar sin niecesidad de cálculos  etiqueto este aparte
      42.  00:A411                      			
      43.  00:A411                      array_aux_mapa_limpiar:	;es por facilitar el reseteo del mapa (pinto 7 lineas en negro con bios) la otra opción es más larga en código y complicada aunque más rápida
      44.  00:A411                      			DB		0,0,0,0,0,0,0
      44.  00:A411  00 00 00 00 00 00 00 
      45.  00:A418                      elemento_pintar_mapa:
      46.  00:A418  00                  			DB		0	;TILEPROTAM = 19, ;TILEGRISM = 9
      47.  00:A419                      			
      48.  00:A419                      ;; nota importante: cada vez que se cambie de nivel se actualizará el contenido
      49.  00:A419                      ;; arrays con mapa de tiles de las puertas
      50.  00:A419                      array_puerta_arriba:
      51.  00:A419  03 01 01 03         array_puerta_arriba1:		DB	3,1,1,3
      52.  00:A41D  01 01 01 01         array_puerta_arriba2:		DB	1,1,1,1
      53.  00:A421  01 01 01 01         array_puerta_arriba3:		DB	1,1,1,1
      54.  00:A425  01 01 01 01         array_puerta_arriba4:		DB	1,1,1,1
      55.  00:A429  01 01 01 01         array_puerta_arriba5:		DB	1,1,1,1
      56.  00:A42D                      
      57.  00:A42D                      array_puerta_derecha:
      58.  00:A42D  01 03 03            array_puerta_derecha1:		DB	1,3,3
      59.  00:A430  01 01 03            array_puerta_derecha2:		DB	1,1,3
      60.  00:A433  01 01 01            array_puerta_derecha3:		DB	1,1,1
      61.  00:A436  01 01 01            array_puerta_derecha4:		DB	1,1,1
      62.  00:A439  01 01 01            array_puerta_derecha5:		DB	1,1,1
      63.  00:A43C  02 01 01            array_puerta_derecha6:		DB	2,1,1
      64.  00:A43F  04 02 01            array_puerta_derecha7:		DB	4,2,1
      65.  00:A442                      	
      66.  00:A442  01 01 01 01         array_puerta_abajo:			DB	1,1,1,1
      67.  00:A446                      
      68.  00:A446                      array_puerta_izquierda:
      69.  00:A446  03 03 01            array_puerta_izquierda1:	DB	3,3,1
      70.  00:A449  03 01 01            array_puerta_izquierda2:	DB	3,1,1
      71.  00:A44C  01 01 01            array_puerta_izquierda3:	DB	1,1,1
      72.  00:A44F  01 01 01            array_puerta_izquierda4:	DB	1,1,1
      73.  00:A452  01 01 01            array_puerta_izquierda5:	DB	1,1,1
      74.  00:A455  01 01 02            array_puerta_izquierda6:	DB	1,1,2
      75.  00:A458  01 02 04            array_puerta_izquierda7:	DB	1,2,4
      76.  00:A45B                      
      77.  00:A45B                      
      78.  00:A45B                      ;array de 4 bytes x 32 sprites posibles en pantalla que sobreescribirá la tabla de sprites actualizando VRAM
      79.  00:A45B                      array_sprites:
      80.  00:A45B  00 (8)              array_sprites_pm:				DS	2 * 4
      81.  00:A463  00 (120)            array_sprites_enem:				DS	30 * 4
      82.  00:A4DB  00 (140)            lista_enemigos:					DS	10 * ESTRUCTURA_ENEMIGO
      83.  00:A567                      ; puntero al array a pintar en VRAM
      84.  00:A567  00 00               puntero_array_atrib_array_VRAM: DW	0	;ARRAYSPTRIES + 8
      85.  00:A569                      
      86.  00:A569                      
     137   00:A569                      	
     138   00:A569                      ;;=====================================================
     139   00:A569                      ;;DEFINICIÓN DE PANTALLAS
     140   00:A569                      ;;=====================================================		
     141   00:A569                      	include "pantallas.asm"
       1.  00:A569                      ;;=====================================================
       2.  00:A569                      ;;DEFINICIÓN DE PANTALLAS
       3.  00:A569                      ;;=====================================================		
       4.  00:A569                      
       5.  00:A569                      ; bancos 1 y 2 y de pantalla 1 (en realidad es una pantalla de pruebas)
       6.  00:A569                      tiles_patrones_pantalla11:	
       7.  00:A569  (0023)              tiles_patrones_pantalla12:	incbin "pan1_23.bank1.bin.chr.pletter"
       8.  00:A58C                      tiles_color_pantalla11:		
       9.  00:A58C  (0018)              tiles_color_pantalla12:		incbin "pan1_23.bank1.bin.clr.pletter"
      10.  00:A5A4  (001A)              tiles_mapa_pantalla11:		incbin "pan1_23.bank0.bin.map.pletter"
      11.  00:A5BE  (002A)              tiles_mapa_pantalla12:		incbin "pan1_23.bank1.bin.map.pletter"
      12.  00:A5E8                      
      13.  00:A5E8                      
      14.  00:A5E8                      
      15.  00:A5E8                      
      16.  00:A5E8                      
      17.  00:A5E8                      
      18.  00:A5E8                      ; 3º banco que es la parte de puntos, vidas, mapas, etc... es común
      19.  00:A5E8  (0146)              tiles_patrones_pantalla3:	incbin "pan_33.bin.chr.pletter"
      20.  00:A72E  (0035)              tiles_color_pantalla3:		incbin "pan_33.bin.clr.pletter"
      21.  00:A763  (006F)              tiles_mapa_pantalla3:		incbin "pan_33.bin.map.pletter"
      22.  00:A7D2                      
      23.  00:A7D2                      ;NOTA: FALTARÍAN PANTALLAS ESPECIALES (POR DEFINIR)
     142   00:A7D2                      
     143   00:A7D2                      
     144   00:A7D2                      	
     145   00:A7D2                      END:

    LABELS
-------------------------------------------------
00:000000D8 X GTTRIG
00:000000D5 X GTSTCK
00:0000F3DB   CLIKSW
00:0000013E X RDVDP
00:00000047   WRTVDP
00:0000005C   LDIRVM
00:00000059 X LDIRMV
00:0000005F   CHGMOD
00:00000041 X DISSCR
00:00000044 X ENASCR
00:00000062   CHGCLR
00:0000F3E9   FORCLR
00:0000F3EA   BAKCLR
00:0000F3EB   BDRCLR
00:000000C3   CLS
00:0000F3DF X RG0SAV
00:0000F3E0   RG1SAV
00:0000F3E1 X RG2SAV
00:0000F3E2 X RG3SAV
00:0000F3E3 X RG4SAV
00:0000F3E4 X RG5SAV
00:0000F3E5 X RG6SAV
00:0000F3E6 X RG7SAV
00:0000F3E7 X STATFL
00:00000099   REGEST
00:00000098   REGESCVDP
00:000000A0   PSG_A
00:000000A1   PSG_W
00:000000A2   PSG_R
00:00000000   CHRTBL
00:00001800   TILMAP
00:00001B00   SPRART
00:00002000   CLRTBL
00:00003800   SPRTBL
00:00000001 X SI
00:00000000 X NO
00:00000004   LIMCADENCIA
00:00000000 X COLTRASP
00:00000001   COLNEGRO
00:00000002 X COLVERDE
00:00000003 X COLVERCLA
00:00000004 X COLAZULOSC
00:00000005 X COLAZULLA
00:00000006   COLROJOOSC
00:00000007 X COLCYAN
00:00000008   COLROJO
00:00000009 X COLROJOCLA
00:0000000A X COLAMAROSC
00:0000000B X COLAMARCLA
00:0000000C X COLVERDOSC
00:0000000D X COLMAGENTA
00:0000000E X COLGRIS
00:0000000F   COLBLANCO
00:000002F8   POSMAPLIN1
00:000002D8   POSMAPLIN2
00:000002B8   POSMAPLIN3
00:00000298   POSMAPLIN4
00:00000278   POSMAPLIN5
00:00000258   POSMAPLIN6
00:00000238   POSMAPLIN7
00:0000000D   POSCARAMAP
00:00000248   POSVIDAS
00:00000011   POSRELIMAP
00:000002C8   POSRELIQ
00:00000288   POSENERG
00:000002B4   POSNIVEL
00:00000238   POSMAPA
00:000001EE   POSPUERABAJ
00:0000008E   POSPUERARRI
00:000000FC   POSPUERDERE
00:000000E1   POSPUERIZQU
00:00000013   TILEPROTAM
00:00000009   TILEGRISM
00:00000010   TILEMAPROJO
00:0000000F   TILEMAPAMAR
00:0000000E   TILEMAPVERD
00:00000008   NMAXVIDREL
00:00000007   NHABNIVEL
00:000000F8 X MAXENERGIA
00:000000D9   TILEENERG8
00:000000BA   TILEENERG7
00:0000009B   TILEENERG6
00:0000007C   TILEENERG5
00:0000005D   TILEENERG4
00:0000003E   TILEENERG3
00:0000001F   TILEENERG2
00:00000000   TILENEGRO
00:00000000 X LIMPANTIZQ
00:000000FF   LIMPANTDER
00:00000000 X LIMPANTARR
00:00000080   LIMPANTABA
00:00000006 X BASEMAPY
00:00000003 X BASEMAPX
00:0000FD9A X H.KEYI
00:0000FD9F   H.TIMI
00:0000F000   PT3_SETUP
00:0000F001   PT3_MODADDR
00:0000F003   PT3_CrPsPtr
00:0000F005   PT3_SAMPTRS
00:0000F007   PT3_OrnPtrs
00:0000F009   PT3_PDSP
00:0000F00B   PT3_CSP
00:0000F00D   PT3_PSP
00:0000F00F   PT3_PrNote
00:0000F010   PT3_PrSlide
00:0000F012   PT3_AdInPtA
00:0000F014   PT3_AdInPtB
00:0000F016   PT3_AdInPtC
00:0000F018   PT3_LPosPtr
00:0000F01A   PT3_PatsPtr
00:0000F01C   PT3_Delay
00:0000F01D   PT3_AddToEn
00:0000F01E   PT3_Env_Del
00:0000F01F   PT3_ESldAdd
00:0000F021   PT3_NTL3
00:0000F023   VARS
00:0000F023   ChanA
00:0000F040   ChanB
00:0000F05D   ChanC
00:0000F07A   DelyCnt
00:0000F07B   CurESld
00:0000F07D   CurEDel
00:0000F07E   Ns_Base_AddToNs
00:0000F07E   Ns_Base
00:0000F07F   AddToNs
00:0000F080   NT_
00:0000F140   AYREGS
00:0000F140   VT_
00:0000F14E   EnvBase
00:0000F150   VAR0END
00:0000F150   T1_
00:0000F150   T_NEW_1
00:0000F150   T_OLD_1
00:0000F168   T_OLD_2
00:0000F180   T_NEW_3
00:0000F180   T_OLD_3
00:0000F182   T_OLD_0
00:0000F182   T_NEW_0
00:0000F19A   T_NEW_2
00:0000F240   ayFX_MODE
00:0000F241   ayFX_BANK
00:0000F243   ayFX_PRIORITY
00:0000F244   ayFX_POINTER
00:0000F246   ayFX_TONE
00:0000F248   ayFX_NOISE
00:0000F249   ayFX_VOLUME
00:0000F24A   ayFX_CHANNEL
00:00008000   START
00:00008026   loop_principal
00:00008033 X fin_programa_principal
00:00008033   inicializa_variables_pruebas
00:00008055 X fin_inicializa_variables_pruebas
00:00008056   inicializa_niveles
00:00008065   inicializa_niveles.bucle_borra_hab
00:0000806A X fin_iniciliza_niveles
00:0000806B   actualiza_marcador_vidas
00:00008070   loop_marcador_caras_negro
00:00008075 X fin_loop_marcador_caras_negro
00:0000807E   loop_marcador_caras
00:00008083 X fin_loop_marcador_caras
00:00008083 X fin_actualiza_marcador_vidas
00:00008084   actualiza_buffer_reliquias
00:0000808A   loop_buffer_reliquias_negro
00:00008097   loop_buffer_reliquias
00:0000809C X fin_actualiza_buffer_reliquias
00:0000809D   localiza_info_habitacion
00:000080A0 X localiza_info_habitacion.situo_columna
00:000080A9 X localiza_info_habitacion.situo_fila
00:000080B2   localiza_info_habitacion.loop_suma_fila
00:000080BA   localiza_info_habitacion.situo_nivel
00:000080C9   localiza_info_habitacion.loop_suma_nivel
00:000080CE   localiza_info_habitacion.actualiza_valiable_habitacion
00:000080D2 X fin_localiza_info_habitacion
00:000080D3   color_pantalla
00:000080E4 X fin_color_pantalla
00:000080E4   sub_preparapantalla
00:000080E4 X elimina_clic
00:000080E8 X fin_elimina_clic
00:000080E8 X limpia_pantalla
00:000080EC X fin_limpia_pantalla
00:000080F2 X screen2
00:000080F7 X sprites_16_16
00:00008105 X fin_sub_preparapantalla
00:00008105   pinta_pantalla_completa
00:0000810B X fin_pinta_pantalla_completa
00:0000810C   pinta_parte_superior_pantalla
00:00008142 X fin_pinta_parte_superior_pantalla
00:00008143   pinta_parte_inferior_pantalla
00:0000815E X fin_pinta_parte_inferior_pantalla
00:0000815E   pinta_vidas
00:0000816D X fin_pinta_vidas
00:0000816D   pinta_reliquias
00:0000817C X fin_pinta_reliquias
00:0000817C   pinta_nivel
00:00008188 X fin_pinta_nivel
00:00008189   pinta_tile_suelto
00:00008196 X fin_pinta_tile_suelto
00:00008197   mira_pinta_energia
00:0000819D X pinta_ener
00:0000819D X pinta_ener_tile_8
00:000081A9   pinta_ener_tile_8_negro
00:000081AA   pinta_ener_tile_7
00:000081B4   pinta_ener_tile_7_negro
00:000081B5   pinta_ener_tile_6
00:000081BF   pinta_ener_tile_6_negro
00:000081C0   pinta_ener_tile_5
00:000081CA   pinta_ener_tile_5_negro
00:000081CB   pinta_ener_tile_4
00:000081D5   pinta_ener_tile_4_negro
00:000081D6   pinta_ener_tile_3
00:000081E0   pinta_ener_tile_3_negro
00:000081E1   pinta_ener_tile_2
00:000081EB   pinta_ener_tile_2_negro
00:000081EC   fin_mira_pinta_energia
00:000081EE   pinta_energia
00:000081FD X fin_pinta_energia
00:000081FD   borra_mapa
00:00008253 X fin_borra_mapa
00:00008254   pinta_array
00:00008262   pinta_array.pa_pinta_fila
00:00008263   pinta_array.pa_pinta_columnas
00:00008286 X fin_pinta_array
00:00008287   wordaux1
00:00008289   wordaux2
00:0000828B   pinta_puertas
00:000082A8 X fin_pinta_puertas
00:000082A9   pinta_puerta_aba
00:000082BE X fin_pinta_puerta_aba
00:000082BE   pinta_puerta_arr
00:000082D3 X fin_pinta_puerta_arr
00:000082D3   pinta_puerta_der
00:000082E8 X fin_pinta_puerta_der
00:000082E8   pinta_puerta_izq
00:000082FD X fin_pinta_puerta_izq
00:000082FD   posiciona_en_mapa
00:00008300 X posiciona_en_mapa.sumar_fila
00:0000832A X posiciona_en_mapa.fila_0
00:00008331   posiciona_en_mapa.fila_1
00:00008338   posiciona_en_mapa.fila_2
00:0000833F   posiciona_en_mapa.fila_3
00:00008346   posiciona_en_mapa.fila_4
00:0000834D   posiciona_en_mapa.fila_5
00:00008354 X posiciona_en_mapa.fila_6
00:00008354   posiciona_en_mapa.sumar_columna
00:0000836A   pinta_pos_mapa_vacio
00:0000836C   fin_pinta_pos_mapa
00:0000836F X fin_posiciona_en_mapa
00:0000836F   efecto_imagen_tira_reliquia
00:00008372   efecto_imagen_tira_reliquia.parpadea_fondo
00:00008389 X fin_efecto_imagen_tira_reliquia
00:00008389   carga_patrones_sprites_nivel
00:00008392 X fin_carga_patrones_sprites_nivel
00:00008393   carga_patrones_nivel_comunes
00:0000839F X fin_carga_patrones_nivel_comunes
00:0000839F   carga_patrones_sprites_nivel1
00:0000839F X fin_carga_patrones_sprites
00:000083A0   render_sprites
00:000083AC X fin_actualiza_array_sprites_vram
00:000083AC   vuelca_resultado_puntomira_array
00:000083D1 X vuelca_resultado_puntomira_array.codigo_color_1
00:000083DA   vuelca_resultado_puntomira_array.codigo_color_2
00:000083E3 X fin_vuelca_resultado_puntomira_array
00:000083E3   check_player
00:00008402 X f
00:00008403   mueve_arriba
00:0000840E   mueve_arriba.no_decrementa_y
00:0000840F X fin_mueve_arriba
00:00008410   mueve_derecha
00:0000841D   mueve_derecha.no_incrementa_x
00:0000841E X fin_mueve_derecha
00:0000841F   mueve_abajo
00:0000842C   mueve_abajo.no_incrementa_y
00:0000842D X fin_mueve_abajo
00:0000842E   mueve_izquierda
00:00008439   mueve_izquierda.no_decrementa_x
00:0000843A X fin_mueve_izquierda
00:0000843B   mira_disparo
00:0000843B X mira_disparo.mira_boton_pulsado1
00:00008448 X mira_disparo.no_efectua_disparo
00:00008453   mira_disparo.efectua_disparo
00:00008465   mira_disparo.fin_mira_disparo1
00:00008466   mira_disparo.mira_boton_pulsado2
00:00008482 X fin_mira_disparo
00:00008482   update_controllers_status
00:000084B9   read_joy_0
00:000084CD   check_8th_keyboard_row
00:000084DB   check_4th_keyboard_row
00:000084E9 X inicializa_replayer_efectos_interrupciones
00:00008502 X fin_inicializa_replayer_efectos_interrupciones
00:00008503   subrutina_isr
00:0000850C X fin_subrutina_isr
00:0000850C X subrutinas_sonido
00:00000000   CHNPRM_PsInOr
00:00000001   CHNPRM_PsInSm
00:00000002   CHNPRM_CrAmSl
00:00000003   CHNPRM_CrNsSl
00:00000004   CHNPRM_CrEnSl
00:00000005   CHNPRM_TSlCnt
00:00000006   CHNPRM_CrTnSl
00:00000008   CHNPRM_TnAcc
00:0000000A   CHNPRM_COnOff
00:0000000B   CHNPRM_OnOffD
00:0000000C   CHNPRM_OffOnD
00:0000000D   CHNPRM_OrnPtr
00:0000000F   CHNPRM_SamPtr
00:00000011   CHNPRM_NNtSkp
00:00000012   CHNPRM_Note
00:00000013   CHNPRM_SlToNt
00:00000014   CHNPRM_Env_En
00:00000015   CHNPRM_Flags
00:00000016   CHNPRM_TnSlDl
00:00000017   CHNPRM_TSlStp
00:00000019   CHNPRM_TnDelt
00:0000001B   CHNPRM_NtSkCn
00:0000001C   CHNPRM_Volume
00:0000001D X CHNPRM_Size
00:00000000   AR_TonA
00:00000002   AR_TonB
00:00000004   AR_TonC
00:00000006   AR_Noise
00:00000007   AR_Mixer
00:00000008   AR_AmplA
00:00000009   AR_AmplB
00:0000000A   AR_AmplC
00:0000000B   AR_Env
00:0000000D   AR_EnvTp
00:0000850C   CHECKLP
00:0000851D X PT3_MUTE
00:00008529   PT3_INIT
00:00008568   PT3_INIT.TP_0
00:00008574   PT3_INIT.TP_1
00:0000857B   PT3_INIT.TP_2
00:000085E9   PT3_INIT.L1
00:000085F6   PT3_INIT.L2
00:000085FA X PT3_INIT.L3
00:00008621   PT3_INIT.CORR_1
00:0000862F   PT3_INIT.CORR_2
00:00008636   PT3_INIT.TC_EXIT
00:00008641   PT3_INIT.INITV1
00:00008649   PT3_INIT.INITV2
00:0000865D   PT3_INIT.INITV3
00:00008661   PD_OrSm
00:0000866B   PD_SAM
00:0000866C   PD_SAM_
00:00008682   PD_VOL
00:0000868B   PD_EOff
00:00008693   PD_SorE
00:0000869D   PD_ENV
00:000086A2   PD_ORN
00:000086A7   PD_ESAM
00:000086B4   PTDECOD
00:000086C3   PD_LOOP
00:000086C6   PD_LP2
00:000086F3   PD_NOIS
00:000086F8   PD_REL
00:000086FE   PD_NOTE
00:00008706   PD_RES
00:00008718   PD_FIN
00:0000871F   C_PORTM
00:0000876A   C_PORTM.NOSIG
00:00008774   SET_STP
00:00008780   C_GLISS
00:00008793   C_SMPOS
00:00008799   C_ORPOS
00:0000879F   C_VIBRT
00:000087B7   C_ENGLS
00:000087C9   C_DELAY
00:000087CF   SETENV
00:000087EA   C_NOP
00:000087EB   SETORN
00:00008804   SPCCOMS
00:00008824   CHREGS
00:00008847   CHREGS.CH_ORPS
00:00008852   CHREGS.CH_NTP
00:00008858   CHREGS.CH_NOK
00:00008873   CHREGS.CH_SMPS
00:00008889   CHREGS.CH_NOAC
00:000088D0   CHREGS.CH_STPP
00:000088E5   CHREGS.CH_AMP
00:000088F7   CHREGS.CH_AMIN
00:000088FC   CHREGS.CH_SVAM
00:000088FF   CHREGS.CH_NOAM
00:00008908   CHREGS.CH_APOS
00:0000890E   CHREGS.CH_VOL
00:00008919 X CHREGS.CH_ENV
00:00008920   CHREGS.CH_NOEN
00:0000893A   CHREGS.NO_ENAC
00:00008941   CHREGS.NO_ENSL
00:0000894F   CHREGS.CH_MIX
00:00008953   CHREGS.CH_EXIT
00:00008972   CHREGS.CH_ONDL
00:00008976   PT3_PLAY
00:000089AA   PT3_PLAY.PLNLP
00:000089D1   PT3_PLAY.PL1A
00:000089DC   PT3_PLAY.PL1B
00:000089F1   PT3_PLAY.PL1C
00:00008A06   PT3_PLAY.PL1D
00:00008A0C   PT3_PLAY.PL2
00:00008A6E   PT3_ROUT
00:00008A6F   ROUT_A0
00:00008A7B   ROUT_A0.LOUT
00:00008A8F   NT_DATA
00:00008A9F   T_
00:00008A9F   TCOLD_0
00:00008AAB   TCNEW_1
00:00008AAB   TCOLD_1
00:00008AAD   TCOLD_2
00:00008ABF   TCNEW_3
00:00008AC0   TCOLD_3
00:00008AC9   TCNEW_0
00:00008AD4   TCNEW_2
00:00008ADF   EMPTYSAMORN
00:00008AE3   T_PACK
00:00000000 X AYFXRELATIVE
00:00008B18   ayFX_SETUP
00:00008B24   ayFX_END
00:00008B2A   ayFX_INIT
00:00008B3B   ayFX_INIT.CHECK_PRI
00:00008B5C   ayFX_INIT.INIT_END
00:00008B60   ayFX_PLAY
00:00008B74   ayFX_PLAY.TAKECB
00:00008B85   ayFX_PLAY.CHECK_NN
00:00008B92   ayFX_PLAY.SETPOINTER
00:00008BA6   ayFX_PLAY.SETMASKS
00:00008BB4 X ayFX_PLAY.CHK1
00:00008BB6 X ayFX_PLAY.PLAY_C
00:00008BC3   ayFX_PLAY.CHK2
00:00008BC8 X ayFX_PLAY.PLAY_B
00:00008BD5   ayFX_PLAY.CHK3
00:00008BD8 X ayFX_PLAY.PLAY_A
00:00008BE5   ayFX_PLAY.SETMIXER
00:00008BF5   song
00:0000955D   sfx_bank
00:000095A8   depack_VRAM
00:000095D5   literal
00:000095DA   loop
00:000095E3 X getlen
00:000095E9   lus
00:00009606   lenok
00:00009613   mode7
00:00009619   mode6
00:0000961F   mode5
00:00009625   mode4
00:0000962B   mode3
00:00009631   mode2
00:00009641   offsok
00:0000964C   offsok.loop
00:0000966E   getbit
00:00009672   getbitexx
00:00009678   Depack_out
00:0000967A   modes
00:00000000 X ESTRUCTURA_PUNTOMIRA.posx
00:00000001 X ESTRUCTURA_PUNTOMIRA.posy
00:00000002 X ESTRUCTURA_PUNTOMIRA.escena
00:00000003 X ESTRUCTURA_PUNTOMIRA.velocidad
00:00000004 X ESTRUCTURA_PUNTOMIRA.boton2_pressed
00:00000005 X ESTRUCTURA_PUNTOMIRA.cadencia
00:00000006 X ESTRUCTURA_PUNTOMIRA.pm_aux1
00:00000007 X ESTRUCTURA_PUNTOMIRA.pm_aux2
00:00000008 X ESTRUCTURA_PUNTOMIRA.pm_aux3
00:00000009 X ESTRUCTURA_PUNTOMIRA.pm_aux4
00:0000000A X ESTRUCTURA_PUNTOMIRA.pm_aux5
00:0000000B X ESTRUCTURA_PUNTOMIRA.pm_aux6
00:0000000C X ESTRUCTURA_PUNTOMIRA.pm_aux7
00:0000000D X ESTRUCTURA_PUNTOMIRA.pm_aux8
00:0000000E X ESTRUCTURA_PUNTOMIRA.pm_aux9
00:0000000F X ESTRUCTURA_PUNTOMIRA.pm_aux10
00:00000010 X ESTRUCTURA_PUNTOMIRA
00:00000000 X ESTRUCTURA_ENEMIGO.tipo
00:00000001 X ESTRUCTURA_ENEMIGO.posx
00:00000002 X ESTRUCTURA_ENEMIGO.posy
00:00000003 X ESTRUCTURA_ENEMIGO.color
00:00000004 X ESTRUCTURA_ENEMIGO.escena
00:00000005 X ESTRUCTURA_ENEMIGO.contador_siguiente_escena
00:00000006 X ESTRUCTURA_ENEMIGO.reset_contador
00:00000007 X ESTRUCTURA_ENEMIGO.dano
00:00000008 X ESTRUCTURA_ENEMIGO.energia
00:00000009 X ESTRUCTURA_ENEMIGO.ver_hor
00:0000000A X ESTRUCTURA_ENEMIGO.manejador_dibujo
00:0000000C X ESTRUCTURA_ENEMIGO.en_aux3
00:0000000D X ESTRUCTURA_ENEMIGO.en_aux4
00:0000000E   ESTRUCTURA_ENEMIGO
00:00000000 X ESTRUCTURA_EXTRA.tipo
00:00000001 X ESTRUCTURA_EXTRA.posx
00:00000002 X ESTRUCTURA_EXTRA.posy
00:00000003 X ESTRUCTURA_EXTRA.color
00:00000004 X ESTRUCTURA_EXTRA.contador
00:00000005 X ESTRUCTURA_EXTRA.en_aux1
00:00000006 X ESTRUCTURA_EXTRA.en_aux2
00:00000007 X ESTRUCTURA_EXTRA.en_aux3
00:00000008 X ESTRUCTURA_EXTRA.en_aux4
00:00000009 X ESTRUCTURA_EXTRA.en_aux5
00:0000000A X ESTRUCTURA_EXTRA.en_aux6
00:0000000B X ESTRUCTURA_EXTRA.en_aux7
00:0000000C X ESTRUCTURA_EXTRA.en_aux8
00:0000000D X ESTRUCTURA_EXTRA.en_aux9
00:0000000E X ESTRUCTURA_EXTRA.en_aux10
00:0000000F X ESTRUCTURA_EXTRA.en_aux11
00:00000010 X ESTRUCTURA_EXTRA
00:00009688 X sprites_pantantalla
00:00009688   sprites_comunes
00:00009688 X sprite_punto_mira_1
00:000096A8 X sprite_punto_mira_2
00:000096C8 X sprite_punto_mira_1_mejorado
00:000096E8 X sprite_punto_mira_2_mejorado
00:00009708 X sprite_reliquia
00:00009728 X sprite_vida_extra
00:00009748 X sprite_planta
00:00009768 X sprite_ballesta_mejorada
00:00009788 X sprite_explosion_1
00:000097A8 X sprite_explosion_2
00:000097C8   fin_sprites_comunes
00:000097C8 X sprite_ciempies1_1
00:000097E8 X sprite_ciempies1_2
00:00009808 X sprite_arana1_1
00:00009828 X sprite_arana1_2
00:00009848 X sprite_murcielago1_1
00:00009868 X sprite_murcielago1_2
00:00009888 X sprite_serpiente1_1
00:000098A8 X sprite_serpiente1_2
00:000098C8 X sprite_serpiente2_1
00:000098E8 X sprite_serpiente2_2
00:00009908 X sprite_zombi1_1_1
00:00009928 X sprite_zombi1_2_1
00:00009948 X sprite_zombi1_3_1
00:00009968 X sprite_zombi1_4_1
00:00009988 X sprite_zombi1_1_2
00:000099A8 X sprite_zombi1_2_2
00:000099C8 X sprite_zombi1_3_2
00:000099E8 X sprite_zombi1_4_2
00:00009A08 X sprite_zombi2_1_1
00:00009A28 X sprite_zombi2_2_1
00:00009A48 X sprite_zombi2_3_1
00:00009A68 X sprite_zombi2_4_1
00:00009A88 X sprite_zombi2_1_2
00:00009AA8 X sprite_zombi2_2_2
00:00009AC8 X sprite_zombi2_3_2
00:00009AE8 X sprite_zombi2_4_2
00:00009B08 X sprite_caballero1_1_1
00:00009B28 X sprite_caballero1_2_1
00:00009B48 X sprite_caballero1_3_1
00:00009B68 X sprite_caballero1_4_1
00:00009B88 X sprite_caballero1_1_2
00:00009BA8 X sprite_caballero1_2_2
00:00009BC8 X sprite_caballero1_3_2
00:00009BE8 X sprite_caballero1_4_2
00:00009C08 X sprite_caballero2_1_1
00:00009C28 X sprite_caballero2_2_1
00:00009C48 X sprite_caballero2_3_1
00:00009C68 X sprite_caballero2_4_1
00:00009C88 X sprite_caballero2_1_2
00:00009CA8 X sprite_caballero2_2_2
00:00009CC8 X sprite_caballero2_3_2
00:00009CE8 X sprite_caballero2_4_2
00:00009D08 X sprite_llama1_1
00:00009D28 X sprite_llama2_1
00:00009D48 X sprite_llama1_2
00:00009D68 X sprite_llama2_2
00:00009D88 X sprite_fantasma1_1
00:00009DA8 X sprite_fantasma2_1
00:00009DC8 X sprite_fantasma1_2
00:00009DE8 X sprite_fantasma2_2
00:00009E08 X sprite_magia1_1
00:00009E28 X sprite_magia2_1
00:00009E48 X sprite_magia1_2
00:00009E68 X sprite_magia2_2
00:00009E88 X sprite_beholder1_1
00:00009EA8 X sprite_beholder2_1
00:00009EC8 X sprite_beholder3_1
00:00009EE8 X sprite_beholder4_1
00:00009F08 X sprite_beholder1_2
00:00009F28 X sprite_beholder2_2
00:00009F48 X sprite_beholder3_2
00:00009F68 X sprite_beholder4_2
00:00009F88 X sprite_vampiro1_1
00:00009FA8 X sprite_vampiro2_1
00:00009FC8 X sprite_vampiro1_2
00:00009FE8 X sprite_vampiro2_2
00:0000A008 X sprite_manoizq1
00:0000A028 X sprite_manoizq2
00:0000A048 X sprite_manoizq3
00:0000A068 X sprite_manoder1
00:0000A088 X sprite_manoder2
00:0000A0A8 X sprite_manoder3
00:0000A0C8   habitacion_actual
00:0000A0CA   habitaciones_juego
00:0000A0CA X habitaciones_nivel0
00:0000A13A X habitaciones_nivel1
00:0000A1AA X habitaciones_nivel2
00:0000A21A X habitaciones_nivel3
00:0000A28A X habitaciones_nivel4
00:0000A2FA X habitaciones_nivel5
00:0000A36A X habitaciones_nivel6
00:0000A3DA   color_base
00:0000A3DD   color_bomba1
00:0000A3E0   color_bomba2
00:0000A3E3 X prota
00:0000A3E3   prota.posx
00:0000A3E4   prota.posy
00:0000A3E5   prota.escena
00:0000A3E6 X prota.velocidad
00:0000A3E7 X prota.boton2_pressed
00:0000A3E8   prota.cadencia
00:0000A3E9 X prota.pm_aux1
00:0000A3EA X prota.pm_aux2
00:0000A3EB X prota.pm_aux3
00:0000A3EC X prota.pm_aux4
00:0000A3ED X prota.pm_aux5
00:0000A3EE X prota.pm_aux6
00:0000A3EF X prota.pm_aux7
00:0000A3F0 X prota.pm_aux8
00:0000A3F1 X prota.pm_aux9
00:0000A3F2 X prota.pm_aux10
00:0000A3F3   prota_nivel
00:0000A3F4   prota_vidas
00:0000A3F5   prota_reliquias
00:0000A3F6   prota_pos_mapx
00:0000A3F7   prota_pos_mapy
00:0000A3F8   prota_energia
00:0000A3F9   array_aux_vidas
00:0000A401   array_aux_reliquias
00:0000A409   array_aux_energia
00:0000A410   ultimo_pos_array_aux_energia
00:0000A411   array_aux_mapa_limpiar
00:0000A418   elemento_pintar_mapa
00:0000A419   array_puerta_arriba
00:0000A419 X array_puerta_arriba1
00:0000A41D X array_puerta_arriba2
00:0000A421 X array_puerta_arriba3
00:0000A425 X array_puerta_arriba4
00:0000A429 X array_puerta_arriba5
00:0000A42D   array_puerta_derecha
00:0000A42D X array_puerta_derecha1
00:0000A430 X array_puerta_derecha2
00:0000A433 X array_puerta_derecha3
00:0000A436 X array_puerta_derecha4
00:0000A439 X array_puerta_derecha5
00:0000A43C X array_puerta_derecha6
00:0000A43F X array_puerta_derecha7
00:0000A442   array_puerta_abajo
00:0000A446   array_puerta_izquierda
00:0000A446 X array_puerta_izquierda1
00:0000A449 X array_puerta_izquierda2
00:0000A44C X array_puerta_izquierda3
00:0000A44F X array_puerta_izquierda4
00:0000A452 X array_puerta_izquierda5
00:0000A455 X array_puerta_izquierda6
00:0000A458 X array_puerta_izquierda7
00:0000A45B   array_sprites
00:0000A45B   array_sprites_pm
00:0000A463 X array_sprites_enem
00:0000A4DB X lista_enemigos
00:0000A567 X puntero_array_atrib_array_VRAM
00:0000A569   tiles_patrones_pantalla11
00:0000A569   tiles_patrones_pantalla12
00:0000A58C   tiles_color_pantalla11
00:0000A58C   tiles_color_pantalla12
00:0000A5A4   tiles_mapa_pantalla11
00:0000A5BE   tiles_mapa_pantalla12
00:0000A5E8   tiles_patrones_pantalla3
00:0000A72E   tiles_color_pantalla3
00:0000A763   tiles_mapa_pantalla3
00:0000A7D2   END


 Output: t4.out
-------------------------------------------------

 Page: 00
  Org: 00008000  Size: *  Used: 00000000

    No output

 Output: t4.bin
-------------------------------------------------

 Page: 00
  Org: 00008000  Size: *  Used: 000027D9

   Address   Length Align   Label
   00008000   10201         START
