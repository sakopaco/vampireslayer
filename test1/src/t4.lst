Sjasm Z80 Assembler v0.42c - www.xl2s.tk             [2021.11.27 - 11:11:37]

t4.asm
Errors: 0

       1   00:0000                      	OUTPUT	"t4.bin"
       2   00:8000                      	
       3   00:8000                      ;;=====================================================
       4   00:8000                      ;;DEFINICIÓN DE CONSTANTES
       5   00:8000                      ;;=====================================================	
       6   00:8000                      	include "constantes.asm"
       1.  00:8000                      ;;=====================================================
       2.  00:8000                      ;; FICHERO constantes.asm
       3.  00:8000                      ;;=====================================================
       4.  00:8000                      
       5.  00:8000                      ;;ETIQUETAS/CONSTANTES BIOS TECLADO
       6.  00:8000  (00:00D8)           GTTRIG		equ		#00D8	;Returns current trigger status
       7.  00:8000  (00:00D5)           GTSTCK		equ		#00D5	;Returns the joystick/cursors status
       8.  00:8000  (00:F3DB)           CLIKSW		equ		#F3DB	;deshabilita el sonido de clic cuando se pulsa una tecla
       9.  00:8000                      
      10.  00:8000                      ;;ETIQUETAS/CONSTANTES BIOS VDP
      11.  00:8000  (00:013E)           RDVDP		equ		#013E	;lee registro status VDP
      12.  00:8000  (00:0047)           WRTVDP		equ		#0047	;escribe registros del VDP
      13.  00:8000  (00:005C)           LDIRVM		equ		#005C	;RAM/ROM -> VRAM
      14.  00:8000  (00:0059)           LDIRMV		equ		#0059	;VRAM -> RAM
      15.  00:8000  (00:005F)           CHGMOD		equ		#005F	;cambia modo pantalla (screen mode)
      16.  00:8000  (00:0041)           DISSCR  	equ		#0041	;desactiva pantanlla
      17.  00:8000  (00:0044)           ENASCR  	equ		#0044	;activa pantalla
      18.  00:8000  (00:0062)           CHGCLR  	equ		#0062	;cambia color de pantalla (toca A y direcciones)
      19.  00:8000  (00:F3E9)           FORCLR		equ		#F3E9	;zona memoria color foreground
      20.  00:8000  (00:F3EA)           BAKCLR  	equ		#F3EA	;zona memoria color background
      21.  00:8000  (00:F3EB)           BDRCLR 		equ		#F3EB	;zona memoria bordercolor
      22.  00:8000  (00:00C3)           CLS			equ		#00C3	;limpia pantalla (necesita A=0)
      23.  00:8000                      
      24.  00:8000                      ;;ETIQUETAS/CONSTANTES REGISTROS VDP
      25.  00:8000  (00:F3DF)           RG0SAV		equ		#F3DF	;Mirror of VDP register 0 (Basic: VDP(0))
      26.  00:8000  (00:F3E0)           RG1SAV		equ		#F3E0	;Mirror of VDP register 1 (Basic: VDP(1))
      27.  00:8000  (00:F3E1)           RG2SAV		equ		#F3E1	;Mirror of VDP register 2 (Basic: VDP(2))
      28.  00:8000  (00:F3E2)           RG3SAV		equ		#F3E2	;Mirror of VDP register 3 (Basic: VDP(3))
      29.  00:8000  (00:F3E3)           RG4SAV		equ		#F3E3	;Mirror of VDP register 4 (Basic: VDP(4))
      30.  00:8000  (00:F3E4)           RG5SAV		equ		#F3E4	;Mirror of VDP register 5 (Basic: VDP(5))
      31.  00:8000  (00:F3E5)           RG6SAV		equ		#F3E5	;Mirror of VDP register 6 (Basic: VDP(6))
      32.  00:8000  (00:F3E6)           RG7SAV		equ		#F3E6	;Mirror of VDP register 7 (Basic: VDP(7))
      33.  00:8000  (00:F3E7)           STATFL		equ		#F3E7	;Mirror of VDP(8) status register (S#0)
      34.  00:8000                      
      35.  00:8000  (00:0099)           REGEST		equ		#0099	;registro de estado para escribir directamente en VRAM
      36.  00:8000  (00:0098)           REGESCVDP	equ		#0098	;registro donde escribir valor para VRAM
      37.  00:8000                      
      38.  00:8000                      ;;ETIQUETAS/CONSTANTES REGISTROS PSG (PARA JOYSTICK)
      39.  00:8000  (00:00A0)           PSG_A  equ  0a0h  ;reg address
      40.  00:8000  (00:00A1)           PSG_W  equ  0a1h  ;reg data WR
      41.  00:8000  (00:00A2)           PSG_R  equ  0a2h  ;reg data
      42.  00:8000                      
      43.  00:8000                      
      44.  00:8000                      ;;ETIQUETAS DE ZONAS DE MEMORIA DE LA VPD (MSX1)
      45.  00:8000  (00:0000)           CHRTBL		equ		#0000
      46.  00:8000  (00:1800)           TILMAP		equ		#1800
      47.  00:8000  (00:1B00)           SPRART		equ		#1B00
      48.  00:8000  (00:2000)           CLRTBL		equ		#2000
      49.  00:8000  (00:3800)           SPRTBL		equ		#3800
      50.  00:8000                      
      51.  00:8000                      
      52.  00:8000                      ;;ETIQUETAS ESTANDAR PARA DAR MÁS CLARIDAD AL CODIGO
      53.  00:8000  (00:0001)           SI			equ		1
      54.  00:8000  (00:0000)           NO			equ		0
      55.  00:8000  (00:0004)           LIMCADENCIA equ		4	;nº de veces que se ejecutará el disparo antes de ejecutar un disparo real (porque cuando se pulsa la tecl dispara 3 ó 4 veces de rápido que va)
      56.  00:8000                      ;hay que estudiar si 3 es un nº mejor
      57.  00:8000                      
      58.  00:8000                      
      59.  00:8000                      ;;PALETA DE COLORES DEL MSX
      60.  00:8000  (00:0000)           COLTRASP	equ		0
      61.  00:8000  (00:0001)           COLNEGRO	equ		1
      62.  00:8000  (00:0002)           COLVERDE	equ		2
      63.  00:8000  (00:0003)           COLVERCLA	equ		3
      64.  00:8000  (00:0004)           COLAZULOSC	equ		4
      65.  00:8000  (00:0005)           COLAZULLA	equ		5
      66.  00:8000  (00:0006)           COLROJOOSC	equ		6
      67.  00:8000  (00:0007)           COLCYAN		equ		7
      68.  00:8000  (00:0008)           COLROJO		equ		8
      69.  00:8000  (00:0009)           COLROJOCLA	equ		9
      70.  00:8000  (00:000A)           COLAMAROSC	equ		10
      71.  00:8000  (00:000B)           COLAMARCLA	equ		11
      72.  00:8000  (00:000C)           COLVERDOSC	equ		12
      73.  00:8000  (00:000D)           COLMAGENTA	equ		13
      74.  00:8000  (00:000E)           COLGRIS		equ		14
      75.  00:8000  (00:000F)           COLBLANCO	equ		15
      76.  00:8000                      
      77.  00:8000                      
      78.  00:8000                      ;;ETIQUETAS ESPECIFICAS PARA DAR MÁS CLARIDAD AL CODIGO (relacionadas con posiciones en mapa vdp)
      79.  00:8000  (00:02F8)           POSMAPLIN1  equ		#02F8
      80.  00:8000  (00:02D8)           POSMAPLIN2  equ		#02D8
      81.  00:8000  (00:02B8)           POSMAPLIN3  equ		#02B8
      82.  00:8000  (00:0298)           POSMAPLIN4  equ		#0298
      83.  00:8000  (00:0278)           POSMAPLIN5  equ		#0278
      84.  00:8000  (00:0258)           POSMAPLIN6  equ		#0258
      85.  00:8000  (00:0238)           POSMAPLIN7  equ		#0238
      86.  00:8000                      
      87.  00:8000  (00:000D)           POSCARAMAP	equ		#000D
      88.  00:8000  (00:0248)           POSVIDAS	equ		#0248
      89.  00:8000  (00:0011)           POSRELIMAP	equ		#0011
      90.  00:8000  (00:02C8)           POSRELIQ	equ		#02C8
      91.  00:8000  (00:0288)           POSENERG	equ		#0288
      92.  00:8000  (00:02B4)           POSNIVEL	equ		#02B4
      93.  00:8000  (00:0238)           POSMAPA		equ 	#0238
      94.  00:8000                      
      95.  00:8000  (00:01EE)           POSPUERABAJ equ		#01EE
      96.  00:8000  (00:008E)           POSPUERARRI equ		#008E
      97.  00:8000  (00:00FC)           POSPUERDERE equ		#00FC
      98.  00:8000  (00:00E1)           POSPUERIZQU equ		#00E1
      99.  00:8000  (00:006C)           POSESCALERA equ		#006C	;32 x 3 + columna
     100.  00:8000                      
     101.  00:8000                      ;;POSICIONES DE LAS AYUDAS EN PANTALLA BANCO 1
     102.  00:8000  (00:0146)           POSORACION	equ		#0146	;256 + 70
     103.  00:8000  (00:00A7)           POSCRUZ		equ		167
     104.  00:8000  (00:00AB)           POSAGUA		equ		171
     105.  00:8000  (00:00AF)           POSARMAD	equ		175
     106.  00:8000  (00:00B3)           POSPLANTA	equ		179
     107.  00:8000  (00:00B7)           POSVIDAEXT	equ		183
     108.  00:8000  (00:00BB)           POSBALLESTA	equ		187
     109.  00:8000                      
     110.  00:8000                      ;;POSICIONES DE LAS AYUDAS EN PANTALLA PIXEL CENTRAL
     111.  00:8000  (00:0070)           POSAYUDASY	equ		112	;quitar cuando ya no se use
     112.  00:8000                      
     113.  00:8000  (00:0038)           POSORACIONX	equ		56
     114.  00:8000  (00:0058)           POSORACIONY	equ		88
     115.  00:8000  (00:0040)           POSCRUZX	equ		64
     116.  00:8000  (00:0060)           POSAGUAX	equ		96
     117.  00:8000  (00:0080)           POSARMADX	equ		128
     118.  00:8000  (00:00A0)           POSPLANTAX	equ		160
     119.  00:8000  (00:00C0)           POSVIDAEXTX	equ		192
     120.  00:8000  (00:00E0)           POSBALLESTAX equ	224
     121.  00:8000                      
     122.  00:8000                      ;; TAMAÑO AYUDAS
     123.  00:8000  (00:0002)           ALTOAYUDA	equ		#02
     124.  00:8000  (00:0002)           ANCHOAYUDA	equ		#02
     125.  00:8000                      
     126.  00:8000                      ;; RADIOS DE DISPARO
     127.  00:8000  (00:0008)           RADIOAYUDAX equ		#08
     128.  00:8000  (00:0008)           RADIOAYUDAY equ		#08
     129.  00:8000                      
     130.  00:8000                      ;;POSICIÓN INICIAL DEL SPRITE DEL PUNTO DE MIRA
     131.  00:8000  (00:0078)           POSXPM		equ		120
     132.  00:8000  (00:006C)           POSYPM		equ		108
     133.  00:8000                      
     134.  00:8000                      ;;ESTADO ESTRUCTURA
     135.  00:8000  (00:0000)           INACTIVA	equ		0
     136.  00:8000  (00:0001)           ACTIVA		equ		1
     137.  00:8000  (00:0001)           HABTERMIN	equ		1
     138.  00:8000                      
     139.  00:8000                      ;;POSICIONES DE LAS ANTORCHAS
     140.  00:8000  (00:0088)           POSANTOR1	equ		136
     141.  00:8000  (00:0097)           POSANTOR2	equ		151
     142.  00:8000  (00:00C4)           MAPLLAMA1	equ		196
     143.  00:8000  (00:00C5)           MAPLLAMA2	equ		197
     144.  00:8000  (00:00FF)           RESETLLAMA	equ		255
     145.  00:8000                      
     146.  00:8000                      ;;POSICIONES DE LOS ESQUELETOS
     147.  00:8000  (00:0088)           POSESQUEL1	equ		136
     148.  00:8000  (00:0095)           POSESQUEL2	equ		149
     149.  00:8000  (00:00A9)           POSCALAVE1	equ		169
     150.  00:8000  (00:00B6)           POSCALAVE2	equ		182
     151.  00:8000  (00:0019)           RESETESQUEL	equ		25
     152.  00:8000  (00:0004)           RESETESCENAESQUEL 	equ	4	;hay 4 caras con las que el esqueleto cambia (se ha metido el 0 para facilitar código)
     153.  00:8000                      
     154.  00:8000                      ;;ETIQUETAS ESPECIFICAS PARA DAR MÁS CLARIDAD AL CODIGO (relacionadas con posiciones en en el banco de memoria)
     155.  00:8000  (00:0013)           TILEPROTAM  equ		19		;tile del prota para pintar en mapa
     156.  00:8000  (00:0009)           TILEGRISM	equ		9		;tile gris que representa vacio (por donde el prota va pasando)
     157.  00:8000  (00:0010)           TILEMAPROJO equ		16
     158.  00:8000  (00:000F)           TILEMAPAMAR equ		15
     159.  00:8000  (00:000E)           TILEMAPVERD equ		14
     160.  00:8000                      
     161.  00:8000                      
     162.  00:8000                      ;;ETIQUETAS ESPECIFICAS PARA DAR MÁS CLARIDAD AL CODIGO (generales)
     163.  00:8000  (00:0008)           NMAXVIDREL	equ		8		;el número máximo de vidas y de reliquias es de 8
     164.  00:8000  (00:0007)           NHABNIVEL	equ		7
     165.  00:8000  (00:00F8)           MAXENERGIA  equ		248
     166.  00:8000  (00:00D9)           TILEENERG8  equ		217
     167.  00:8000  (00:00BA)           TILEENERG7  equ		186
     168.  00:8000  (00:009B)           TILEENERG6  equ		155
     169.  00:8000  (00:007C)           TILEENERG5  equ		124
     170.  00:8000  (00:005D)           TILEENERG4  equ		93
     171.  00:8000  (00:003E)           TILEENERG3  equ		62
     172.  00:8000  (00:001F)           TILEENERG2  equ		31
     173.  00:8000  (00:0000)           TILENEGRO	equ		0
     174.  00:8000                      
     175.  00:8000                      ;limites
     176.  00:8000  (00:0000)           LIMPANTIZQ  equ		0
     177.  00:8000  (00:00FF)           LIMPANTDER  equ		255
     178.  00:8000  (00:0000)           LIMPANTARR  equ		0
     179.  00:8000  (00:0080)           LIMPANTABA  equ		128
     180.  00:8000                      
     181.  00:8000                      
     182.  00:8000                      ;matriz de 7x7 empieza en 0, y fila y x col, cuento desde esquina sup izq
     183.  00:8000  (00:0006)           BASEMAPY	equ		6
     184.  00:8000  (00:0003)           BASEMAPX	equ		3
     185.  00:8000                      
     186.  00:8000                      
     187.  00:8000                      
     188.  00:8000                      ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
     189.  00:8000                      ;; CONSTANTES PARA INTERRUPCIONES
     190.  00:8000                      ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
     191.  00:8000  (00:FD9A)           H.KEYI		equ     	#FD9A
     192.  00:8000  (00:FD9F)           H.TIMI	 	equ     	#FD9F
     193.  00:8000                      
     194.  00:8000                      
     195.  00:8000                      ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
     196.  00:8000                      ;; CONSTANTES PARA SONIDO 
     197.  00:8000                      ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
     198.  00:8000                      
     199.  00:8000  (F000)              	map		#f000
     200.  00:8000                      
     201.  00:8000                      ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;PT3 REPLAYER
     202.  00:8000  (00:F000)           PT3_SETUP:		#1	;set bit0 to 1, if you want to play without looping
     203.  00:8000                      					;bit7 is set each time, when loop point is passed
     204.  00:8000  (00:F001)           PT3_MODADDR:	#2
     205.  00:8000  (00:F003)           PT3_CrPsPtr:	#2
     206.  00:8000  (00:F005)           PT3_SAMPTRS:	#2
     207.  00:8000  (00:F007)           PT3_OrnPtrs:	#2
     208.  00:8000  (00:F009)           PT3_PDSP:		#2
     209.  00:8000  (00:F00B)           PT3_CSP:		#2
     210.  00:8000  (00:F00D)           PT3_PSP:		#2
     211.  00:8000  (00:F00F)           PT3_PrNote:		#1
     212.  00:8000  (00:F010)           PT3_PrSlide:	#2
     213.  00:8000  (00:F012)           PT3_AdInPtA:	#2
     214.  00:8000  (00:F014)           PT3_AdInPtB:	#2
     215.  00:8000  (00:F016)           PT3_AdInPtC:	#2
     216.  00:8000  (00:F018)           PT3_LPosPtr:	#2
     217.  00:8000  (00:F01A)           PT3_PatsPtr:	#2
     218.  00:8000  (00:F01C)           PT3_Delay:		#1
     219.  00:8000  (00:F01D)           PT3_AddToEn:	#1
     220.  00:8000  (00:F01E)           PT3_Env_Del:	#1
     221.  00:8000  (00:F01F)           PT3_ESldAdd:	#2
     222.  00:8000  (00:F021)           PT3_NTL3:		#2	; AND A / NOP (note table creator)
     223.  00:8000                      
     224.  00:8000  (00:F023)           VARS:			#0
     225.  00:8000                      
     226.  00:8000  (00:F023)           ChanA:			#29			;CHNPRM_Size
     227.  00:8000  (00:F040)           ChanB:			#29			;CHNPRM_Size
     228.  00:8000  (00:F05D)           ChanC:			#29			;CHNPRM_Size
     229.  00:8000                      
     230.  00:8000                      ;GlobalVars
     231.  00:8000  (00:F07A)           DelyCnt:		#1
     232.  00:8000  (00:F07B)           CurESld:		#2
     233.  00:8000  (00:F07D)           CurEDel:		#1
     234.  00:8000  (00:F07E)           Ns_Base_AddToNs:	#0
     235.  00:8000  (00:F07E)           Ns_Base:		#1
     236.  00:8000  (00:F07F)           AddToNs:		#1
     237.  00:8000                      
     238.  00:8000  (00:F080)           NT_:			#192	; Puntero a/tabla de frecuencias
     239.  00:8000                      
     240.  00:8000  (00:F140)           AYREGS:			#0
     241.  00:8000  (00:F140)           VT_:			#14
     242.  00:8000  (00:F14E)           EnvBase:		#2
     243.  00:8000  (00:F150)           VAR0END:		#0
     244.  00:8000                      
     245.  00:8000  (00:F150)           T1_:			#0		
     246.  00:8000  (00:F150)           T_NEW_1:		#0
     247.  00:8000  (00:F150)           T_OLD_1:		#24
     248.  00:8000  (00:F168)           T_OLD_2:		#24
     249.  00:8000  (00:F180)           T_NEW_3:		#0
     250.  00:8000  (00:F180)           T_OLD_3:		#2
     251.  00:8000  (00:F182)           T_OLD_0:		#0
     252.  00:8000  (00:F182)           T_NEW_0:		#24
     253.  00:8000  (00:F19A)           T_NEW_2:		#166
     254.  00:8000                      ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;PT3 REPLAYER END
     255.  00:8000                      
     256.  00:8000                      ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ayFX REPLAYER 
     257.  00:8000  (00:F240)           ayFX_MODE:		#1			; ayFX mode
     258.  00:8000  (00:F241)           ayFX_BANK:		#2			; Current ayFX Bank
     259.  00:8000  (00:F243)           ayFX_PRIORITY:	#1			; Current ayFX stream priotity
     260.  00:8000  (00:F244)           ayFX_POINTER:	#2			; Pointer to the current ayFX stream
     261.  00:8000  (00:F246)           ayFX_TONE:		#2			; Current tone of the ayFX stream
     262.  00:8000  (00:F248)           ayFX_NOISE:		#1			; Current noise of the ayFX stream
     263.  00:8000  (00:F249)           ayFX_VOLUME:	#1			; Current volume of the ayFX stream
     264.  00:8000  (00:F24A)           ayFX_CHANNEL:	#1			; PSG channel to play the ayFX stream
     265.  00:8000                      
     266.  00:8000                      	;IF (AYFXRELATIVE == 1 ) 
     267.  00:8000                      ;ayFX_VT:	ds	2			; ayFX relative volume table pointer
     268.  00:8000                      	;ENDIF
     269.  00:8000                      ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ayFX REPLAYER END
     270.  00:8000                      
     271.  00:8000                      
     272.  00:8000                      
     273.  00:8000                      
       7   00:8000                      
       8   00:8000                      ;;=====================================================
       9   00:8000                      ;;DEFINICIÓN DE CABECERA DE ARCHIVO BIN
      10   00:8000                      ;;=====================================================		
      11   00:8000                      	include "cabecerabin.asm"
       1.  00:8000                      ;;=====================================================
       2.  00:8000                      ;; FICHERO cabecera.asm
       3.  00:8000                      ;;=====================================================
       4.  00:8000                      
       5.  00:8000                      ;;CABECERA FICHERO BIN
       6.  00:8000  FE                  	DB	#FE
       7.  00:8001  00 80               	DW	START
       8.  00:8003  92 BD               	DW	END
       9.  00:8005  00 80               	DW	START
      10.  00:8007                      
      11.  00:8007                      ;;INICIO CÓDIGO PROGRAMA	
      12.  00:8007                      	ORG	#8000
      13.  00:8000                      	
      12   00:8000                      	
      13   00:8000                      START:	
      14   00:8000                      	;inicializa pantalla y entonrno
      15   00:8000  CD 82 82            	CALL	sub_preparapantalla			;screen 2,2 sin click al pulsar tecla y color 16,1,1
      16   00:8003                      	
      17   00:8003                      	;inicializa variables para parametrizar funciones y que lo que se muestre sea variable (nº vidas, mapa, puertas, pantalla, etc...)
      18   00:8003  CD 5C 80            	CALL	inicializa_variables_pruebas
      19   00:8006                      	
      20   00:8006                      	;inicializa los niveles por partida
      21   00:8006  CD 82 80            	CALL	inicializa_niveles			;no es necesario parametrizarlo según el nivel del usuario ya que se cargan todos
      22   00:8009                      
      23   00:8009                      	;inicializa los valores de cada puerta excepto si están activas o no (eso ocurre cuando se matan todos los enemigos de la hab. y sólo a las puertas que se muestren)
      24   00:8009  CD 1A 88            	CALL	inicializa_puertas
      25   00:800C                      	
      26   00:800C                      	;inicializa las estructuras de forma particular según ayuda pero sin poner valores de posición
      27   00:800C  CD 81 9C            	CALL	inicializa_ayudas
      28   00:800F                      	
      29   00:800F                      	;inicializa las estructuras de las antorchas y esqueletos
      30   00:800F  CD AA 85            	CALL	inicializa_antorchas
      31   00:8012  CD CC 85            	CALL	inicializa_esqueletos
      32   00:8015                      	
      33   00:8015                      	;pinta la pantalla (la primera o algunas especiales se pintan completamente)
      34   00:8015  CD A3 82            	CALL	pinta_pantalla_completa
      35   00:8018                      	
      36   00:8018                      	;carga sprites en memoria (SE HA RETRASADO HASTA PARAMETRIZAR LA CARGA DE PANTALLAS)
      37   00:8018  CD 0E 8A            	CALL 	carga_patrones_sprites_nivel
      38   00:801B                      	
      39   00:801B                      	;funciones que modificarian el marcador si se produce un evento cuando toque y cuando se pinta la pantalla ya se mira
      40   00:801B                      	;una variable para ver si el array hay que actualizarlo en pantalla o no
      41   00:801B  CD E3 83            	CALL	pinta_vidas
      42   00:801E  CD F2 83            	CALL 	pinta_reliquias
      43   00:8021  CD 01 84            	CALL	pinta_nivel
      44   00:8024  CD 81 84            	CALL	borra_mapa
      45   00:8027  CD B4 88            	CALL	pinta_puertas
      46   00:802A                      
      47   00:802A  3E 13               	LD		 A, TILEPROTAM
      48   00:802C  32 8F AA            	LD		(elemento_pintar_mapa), A
      49   00:802F  CD D8 84            	CALL	posiciona_en_mapa		;se le pasa elemento_pintar_mapa (tile del prota) está el prota y prota.posx y posy
      50   00:8032                      		
      51   00:8032  CD BE 9C            	CALL	pinta_ayudas_habitacion
      52   00:8035                      	
      53   00:8035  CD EE 85            	CALL	pinta_extra_fondo
      54   00:8038                      	
      55   00:8038                      	;esta función no va aquí sino en check colisiones pero se pone aquí para realizar pruebas
      56   00:8038  CD 16 82            	CALL	terminada_habitacion_recorrida ;para cuando se maten todos los enemigos de la habitación
      57   00:803B                      
      58   00:803B                      	;incializacion de replayer con interrupciones
      59   00:803B                      ;	CALL	inicializa_replayer_efectos_interrupciones
      60   00:803B                      
      61   00:803B                      loop_principal:
      62   00:803B  76                  	HALT							;espera VBLANK y sincroniza
      63   00:803C                      	
      64   00:803C  CD 1F 8A            	CALL	render_sprites			;actualiza array de sprites y los pinta en pantalla
      65   00:803F                      	
      66   00:803F  CD 72 84            	CALL	pinta_energia			;pinta la energia en pantalla
      67   00:8042                      	
      68   00:8042  CD 65 86            	CALL	actualiza_elementos_fondo
      69   00:8045                      
      70   00:8045  CD 62 8A            	CALL	check_player			;MIRA EL CONTROL Y APLICA LA LOGICA DE MOVIMIENTO DEL PROTAGONISTA
      71   00:8048                      	
      72   00:8048  C3 3B 80            	JP		loop_principal
      73   00:804B                      fin_programa_principal:
      74   00:804B                      	;no necesita RET
      75   00:804B                      
      76   00:804B                      
      77   00:804B                      ;;=====================================================
      78   00:804B                      ;;CHECK_COLISIONES_OBJETOS
      79   00:804B                      ;;=====================================================	
      80   00:804B                      ; función: 	revisa (con enemigos+ayudas o puertas según si la habitación ha sido recorrida o no) las variables para ver si se disparó sobre ellas
      81   00:804B                      ; entrada: 	is_habitacion_terminada
      82   00:804B                      ; salida: 	-
      83   00:804B                      ; toca:		HL,BC, DE
      84   00:804B                      check_colisiones_objetos:
      85   00:804B                      
      86   00:804B                      ;;;		parece que funciona pero hayq que seguir depurando
      87   00:804B                      
      88   00:804B  F5                  	PUSH	AF
      89   00:804C                      	
      90   00:804C                      	;pantalla limpia?
      91   00:804C  3A 40 A7            	LD		 A, (is_habitacion_terminada)
      92   00:804F  F6 00               	OR		 0
      93   00:8051  CA 5A 80            	JP		 Z, .habitacion_no_terminada
      94   00:8054                      	;SI 
      95   00:8054                      	;recorre puertas y sale
      96   00:8054  CD 5D 89            		CALL	check_colisiones_puertas
      97   00:8057                      		
      98   00:8057  C3 5A 80            		JP		fin_check_colisiones_objetos	
      99   00:805A                      	;NO 
     100   00:805A                      .habitacion_no_terminada:
     101   00:805A                      	;recorre ayudas
     102   00:805A                      	;recorre enemigos
     103   00:805A                      
     104   00:805A                      
     105   00:805A                      fin_check_colisiones_objetos:	
     106   00:805A  F1                  	POP		AF
     107   00:805B  C9                  	RET
     108   00:805C                      
     109   00:805C                      
     110   00:805C                      
     111   00:805C                      
     112   00:805C                      
     113   00:805C                      
     114   00:805C                      
     115   00:805C                      ;;*******************************************************************
     116   00:805C                      ; sólo para hacer pruebas y pintar la parte de las vidas y demás
     117   00:805C                      inicializa_variables_pruebas:
     118   00:805C  3E 04               	LD		 A, 4
     119   00:805E  32 6B AA            	LD		(prota_vidas),A
     120   00:8061                      
     121   00:8061  3E 04               	LD		 A, 4
     122   00:8063  32 6C AA            	LD		(prota_reliquias), A
     123   00:8066                      
     124   00:8066  3E 64               	LD		 A, 100
     125   00:8068  32 6F AA            	LD		(prota_energia), A
     126   00:806B                      
     127   00:806B                      	;ubico al prota dentro del nivel para obtener luego las habitaciones y enemigos que aparecerán
     128   00:806B                      	;será igual la posición inicial en todos los niveles
     129   00:806B                      	
     130   00:806B  3E 00               	LD		 A, 0				;los niveles (matrices) son 7 del 0 al 6
     131   00:806D  32 6A AA            	LD		(prota_nivel), A	;nivel empieza en 0 para usar las posiciones ascii
     132   00:8070                      
     133   00:8070  3E 00               	LD		 A, 0				;los subniveles (filas) son 7 del 0 al 6
     134   00:8072  32 6E AA            	LD		(prota_pos_mapy), A	;pos Y dentro del nivel (se empieza en 0)
     135   00:8075                      
     136   00:8075  3E 03               	LD		 A, 3				;columnas 7: del 0 al 6
     137   00:8077  32 6D AA            	LD		(prota_pos_mapx), A	;pos X dentro del nivel (se empieza en 0)
     138   00:807A                      	
     139   00:807A  AF                  	XOR		 A					;cadencia por defecto.. cuando se coja mejora en arma se puede variar
     140   00:807B  32 5F AA            	LD		(prota.cadencia), A
     141   00:807E                      	
     142   00:807E  32 40 A7            	LD		(is_habitacion_terminada), A
     143   00:8081                      fin_inicializa_variables_pruebas:
     144   00:8081  C9                  	RET
     145   00:8082                      ;;************************************************************************
     146   00:8082                      
     147   00:8082                      
     148   00:8082                      
     149   00:8082                      
     150   00:8082                      
     151   00:8082                      
     152   00:8082                      
     153   00:8082                      
     154   00:8082                      
     155   00:8082                      ;;=====================================================
     156   00:8082                      ;;DEFINICIÓN DE SUBRUTINAS
     157   00:8082                      ;;=====================================================
     158   00:8082                      	include "subrutinas.asm"
       1.  00:8082                      ;;=====================================================
       2.  00:8082                      ;;DEFINICIÓN DE SUBRUTINAS
       3.  00:8082                      ;;=====================================================	
       4.  00:8082                      
       5.  00:8082                      
       6.  00:8082                      ;;=====================================================
       7.  00:8082                      ;;INICIALIZA_NIVELES
       8.  00:8082                      ;;=====================================================	
       9.  00:8082                      ; función: 	pone el bit 4 de todas las habitaciones (byte habitacion_actual 0,2,4....) a 0
      10.  00:8082                      ; entrada: 	habitaciones_plantilla
      11.  00:8082                      ; salida: 	habitaciones_plantilla con los el bit 4 de los bites bytes impares a 0
      12.  00:8082                      ; toca: 	habitaciones_plantilla, B
      13.  00:8082                      
      14.  00:8082                      
      15.  00:8082                      ;ahora mismo se pondrá que se pueda navegar por cualquier habitación y sólo se controlarán las ayudas
      16.  00:8082                      ;cuando ya haya enemigos se modificará para que el bit 4 a 0 todos los enemigos muerto y 1 hay enemigos vivos
      17.  00:8082                      ;ayudas bit 6 1 hay ayudas y 0 no hay ayudas
      18.  00:8082                      
      19.  00:8082                      inicializa_niveles:
      20.  00:8082  F5                  		PUSH		AF
      21.  00:8083  C5                  		PUSH		BC
      22.  00:8084  E5                  		PUSH		HL
      23.  00:8085                      
      24.  00:8085                      		;inicia habitación para decir si por esa habitación no se ha pasado
      25.  00:8085                      		;el 4 bit a 0 indica que por esa habitacion no se ha pasado/no se han atado todos los enemigos
      26.  00:8085                      		;el 6 bit a 1 indica que en esa habitación hay ayudas no utilizadas
      27.  00:8085                      
      28.  00:8085                      ;nivel 0 -----------------------------------------------------------------------
      29.  00:8085  06 38               		LD			 B, 56	;la mitad de bytes del array de un nivel
      30.  00:8087  21 41 A7            		LD 			HL, habitaciones_nivel0	;puntero al byte de la habitación
      31.  00:808A  DD 21 41 A7         		LD			IX, habitaciones_nivel0
      32.  00:808E  DD 23               		INC			IX						;el puntero IX apuntará siempre al byte de las ayudas
      33.  00:8090                      .inicia_nivel_0:
      34.  00:8090  4E                  		LD		 	 C, (HL)
      35.  00:8091                      		;pongo habitación no terminada bit 4 habitación a 0
      36.  00:8091  CB E1               		SET			 4, C	;***********************************************************************   ESTO HAY QUE PONERLO A 0 CUANDO HAYA ENEMIGOS
      37.  00:8093                      		
      38.  00:8093                      		;examino si hay ayudas en siguiente byte
      39.  00:8093  DD 7E 00            		LD			 A, (IX)
      40.  00:8096  E6 7E               		AND			1111110b
      41.  00:8098  28 02               		JR			 Z, .no_tiene_ayuda_nivel0
      42.  00:809A                      .si_tiene_ayuda_nivel0:
      43.  00:809A  CB F1               		SET			 6, C
      44.  00:809C                      .no_tiene_ayuda_nivel0:
      45.  00:809C  CB B1               		RES			 6, C
      46.  00:809E                      .fin_tiene_ayuda_nivel0:
      47.  00:809E                      		
      48.  00:809E  71                  		LD			(HL), C
      49.  00:809F  23 23               [2]		INC			HL		;pongo puntero en la siguiente habitación (2 saltos)
      50.  00:80A1  DD 23 DD 23         [2]		INC			IX		;pongo puntero en la siguiente habitación (2 saltos)
      51.  00:80A5  10 E9               		DJNZ		.inicia_nivel_0
      52.  00:80A7                      
      53.  00:80A7                      ;nivel 1 -----------------------------------------------------------------------
      54.  00:80A7  06 38               		LD			 B, 56	;la mitad de bytes del array de un nivel
      55.  00:80A9  21 B1 A7            		LD 			HL, habitaciones_nivel1	;puntero al byte de la habitación
      56.  00:80AC  DD 21 B1 A7         		LD			IX, habitaciones_nivel1
      57.  00:80B0  DD 23               		INC			IX						;el puntero IX apuntará siempre al byte de las ayudas
      58.  00:80B2                      .inicia_nivel_1:
      59.  00:80B2  4E                  		LD		 	 C, (HL)
      60.  00:80B3                      		;pongo habitación no terminada bit 4 habitación a 0
      61.  00:80B3  CB E1               		SET			 4, C	;***********************************************************************   ESTO HAY QUE PONERLO A 0 CUANDO HAYA ENEMIGOS
      62.  00:80B5                      		
      63.  00:80B5                      		;examino si hay ayudas en siguiente byte
      64.  00:80B5  DD 7E 00            		LD			 A, (IX)
      65.  00:80B8  E6 7E               		AND			1111110b
      66.  00:80BA  28 02               		JR			 Z, .no_tiene_ayuda_nivel1
      67.  00:80BC                      .si_tiene_ayuda_nivel1:
      68.  00:80BC  CB F1               		SET			 6, C
      69.  00:80BE                      .no_tiene_ayuda_nivel1:
      70.  00:80BE  CB B1               		RES			 6, C
      71.  00:80C0                      .fin_tiene_ayuda_nivel1:
      72.  00:80C0                      		
      73.  00:80C0  71                  		LD			(HL), C
      74.  00:80C1  23 23               [2]		INC			HL		;pongo puntero en la siguiente habitación (2 saltos)
      75.  00:80C3  DD 23 DD 23         [2]		INC			IX		;pongo puntero en la siguiente habitación (2 saltos)
      76.  00:80C7  10 E9               		DJNZ		.inicia_nivel_1
      77.  00:80C9                      
      78.  00:80C9                      ;nivel 2 -----------------------------------------------------------------------
      79.  00:80C9  06 38               		LD			 B, 56	;la mitad de bytes del array de un nivel
      80.  00:80CB  21 21 A8            		LD 			HL, habitaciones_nivel2	;puntero al byte de la habitación
      81.  00:80CE  DD 21 21 A8         		LD			IX, habitaciones_nivel2
      82.  00:80D2  DD 23               		INC			IX						;el puntero IX apuntará siempre al byte de las ayudas
      83.  00:80D4                      .inicia_nivel_2:
      84.  00:80D4  4E                  		LD		 	 C, (HL)
      85.  00:80D5                      		;pongo habitación no terminada bit 4 habitación a 0
      86.  00:80D5  CB E1               		SET			 4, C	;***********************************************************************   ESTO HAY QUE PONERLO A 0 CUANDO HAYA ENEMIGOS
      87.  00:80D7                      		
      88.  00:80D7                      		;examino si hay ayudas en siguiente byte
      89.  00:80D7  DD 7E 00            		LD			 A, (IX)
      90.  00:80DA  E6 7E               		AND			1111110b
      91.  00:80DC  28 02               		JR			 Z, .no_tiene_ayuda_nivel2
      92.  00:80DE                      .si_tiene_ayuda_nivel2:
      93.  00:80DE  CB F1               		SET			 6, C
      94.  00:80E0                      .no_tiene_ayuda_nivel2:
      95.  00:80E0  CB B1               		RES			 6, C
      96.  00:80E2                      .fin_tiene_ayuda_nivel2:
      97.  00:80E2                      		
      98.  00:80E2  71                  		LD			(HL), C
      99.  00:80E3  23 23               [2]		INC			HL		;pongo puntero en la siguiente habitación (2 saltos)
     100.  00:80E5  DD 23 DD 23         [2]		INC			IX		;pongo puntero en la siguiente habitación (2 saltos)
     101.  00:80E9  10 E9               		DJNZ		.inicia_nivel_2
     102.  00:80EB                      
     103.  00:80EB                      ;nivel 3 -----------------------------------------------------------------------
     104.  00:80EB  06 38               		LD			 B, 56	;la mitad de bytes del array de un nivel
     105.  00:80ED  21 91 A8            		LD 			HL, habitaciones_nivel3	;puntero al byte de la habitación
     106.  00:80F0  DD 21 91 A8         		LD			IX, habitaciones_nivel3
     107.  00:80F4  DD 23               		INC			IX						;el puntero IX apuntará siempre al byte de las ayudas
     108.  00:80F6                      .inicia_nivel_3:
     109.  00:80F6  4E                  		LD		 	 C, (HL)
     110.  00:80F7                      		;pongo habitación no terminada bit 4 habitación a 0
     111.  00:80F7  CB E1               		SET			 4, C	;***********************************************************************   ESTO HAY QUE PONERLO A 0 CUANDO HAYA ENEMIGOS
     112.  00:80F9                      		
     113.  00:80F9                      		;examino si hay ayudas en siguiente byte
     114.  00:80F9  DD 7E 00            		LD			 A, (IX)
     115.  00:80FC  E6 7E               		AND			1111110b
     116.  00:80FE  28 02               		JR			 Z, .no_tiene_ayuda_nivel3
     117.  00:8100                      .si_tiene_ayuda_nivel3:
     118.  00:8100  CB F1               		SET			 6, C
     119.  00:8102                      .no_tiene_ayuda_nivel3:
     120.  00:8102  CB B1               		RES			 6, C
     121.  00:8104                      .fin_tiene_ayuda_nivel3:
     122.  00:8104                      		
     123.  00:8104  71                  		LD			(HL), C
     124.  00:8105  23 23               [2]		INC			HL		;pongo puntero en la siguiente habitación (2 saltos)
     125.  00:8107  DD 23 DD 23         [2]		INC			IX		;pongo puntero en la siguiente habitación (2 saltos)
     126.  00:810B  10 E9               		DJNZ		.inicia_nivel_3
     127.  00:810D                      
     128.  00:810D                      ;nivel 4 -----------------------------------------------------------------------
     129.  00:810D  06 38               		LD			 B, 56	;la mitad de bytes del array de un nivel
     130.  00:810F  21 01 A9            		LD 			HL, habitaciones_nivel4	;puntero al byte de la habitación
     131.  00:8112  DD 21 01 A9         		LD			IX, habitaciones_nivel4
     132.  00:8116  DD 23               		INC			IX						;el puntero IX apuntará siempre al byte de las ayudas
     133.  00:8118                      .inicia_nivel_4:
     134.  00:8118  4E                  		LD		 	 C, (HL)
     135.  00:8119                      		;pongo habitación no terminada bit 4 habitación a 0
     136.  00:8119  CB E1               		SET			 4, C	;***********************************************************************   ESTO HAY QUE PONERLO A 0 CUANDO HAYA ENEMIGOS
     137.  00:811B                      		
     138.  00:811B                      		;examino si hay ayudas en siguiente byte
     139.  00:811B  DD 7E 00            		LD			 A, (IX)
     140.  00:811E  E6 7E               		AND			1111110b
     141.  00:8120  28 02               		JR			 Z, .no_tiene_ayuda_nivel4
     142.  00:8122                      .si_tiene_ayuda_nivel4:
     143.  00:8122  CB F1               		SET			 6, C
     144.  00:8124                      .no_tiene_ayuda_nivel4:
     145.  00:8124  CB B1               		RES			 6, C
     146.  00:8126                      .fin_tiene_ayuda_nivel4:
     147.  00:8126                      		
     148.  00:8126  71                  		LD			(HL), C
     149.  00:8127  23 23               [2]		INC			HL		;pongo puntero en la siguiente habitación (2 saltos)
     150.  00:8129  DD 23 DD 23         [2]		INC			IX		;pongo puntero en la siguiente habitación (2 saltos)
     151.  00:812D  10 E9               		DJNZ		.inicia_nivel_4
     152.  00:812F                      		
     153.  00:812F                      ;nivel 5 -----------------------------------------------------------------------
     154.  00:812F  06 38               		LD			 B, 56	;la mitad de bytes del array de un nivel
     155.  00:8131  21 71 A9            		LD 			HL, habitaciones_nivel5	;puntero al byte de la habitación
     156.  00:8134  DD 21 71 A9         		LD			IX, habitaciones_nivel5
     157.  00:8138  DD 23               		INC			IX						;el puntero IX apuntará siempre al byte de las ayudas
     158.  00:813A                      .inicia_nivel_5:
     159.  00:813A  4E                  		LD		 	 C, (HL)
     160.  00:813B                      		;pongo habitación no terminada bit 4 habitación a 0
     161.  00:813B  CB E1               		SET			 4, C	;***********************************************************************   ESTO HAY QUE PONERLO A 0 CUANDO HAYA ENEMIGOS
     162.  00:813D                      		
     163.  00:813D                      		;examino si hay ayudas en siguiente byte
     164.  00:813D  DD 7E 00            		LD			 A, (IX)
     165.  00:8140  E6 7E               		AND			1111110b
     166.  00:8142  28 02               		JR			 Z, .no_tiene_ayuda_nivel5
     167.  00:8144                      .si_tiene_ayuda_nivel5:
     168.  00:8144  CB F1               		SET			 6, C
     169.  00:8146                      .no_tiene_ayuda_nivel5:
     170.  00:8146  CB B1               		RES			 6, C
     171.  00:8148                      .fin_tiene_ayuda_nivel5:
     172.  00:8148                      		
     173.  00:8148  71                  		LD			(HL), C
     174.  00:8149  23 23               [2]		INC			HL		;pongo puntero en la siguiente habitación (2 saltos)
     175.  00:814B  DD 23 DD 23         [2]		INC			IX		;pongo puntero en la siguiente habitación (2 saltos)
     176.  00:814F  10 E9               		DJNZ		.inicia_nivel_5
     177.  00:8151                      		
     178.  00:8151                      ;nivel 6 -----------------------------------------------------------------------
     179.  00:8151  06 38               		LD			 B, 56	;la mitad de bytes del array de un nivel
     180.  00:8153  21 B1 A7            		LD 			HL, habitaciones_nivel1	;puntero al byte de la habitación
     181.  00:8156  DD 21 B1 A7         		LD			IX, habitaciones_nivel1
     182.  00:815A  DD 23               		INC			IX						;el puntero IX apuntará siempre al byte de las ayudas
     183.  00:815C                      .inicia_nivel_6:
     184.  00:815C  4E                  		LD		 	 C, (HL)
     185.  00:815D                      		;pongo habitación no terminada bit 4 habitación a 0
     186.  00:815D  CB E1               		SET			 4, C	;***********************************************************************   ESTO HAY QUE PONERLO A 0 CUANDO HAYA ENEMIGOS
     187.  00:815F                      		
     188.  00:815F                      		;examino si hay ayudas en siguiente byte
     189.  00:815F  DD 7E 00            		LD			 A, (IX)
     190.  00:8162  E6 7E               		AND			1111110b
     191.  00:8164  28 02               		JR			 Z, .no_tiene_ayuda_nivel6
     192.  00:8166                      .si_tiene_ayuda_nivel6:
     193.  00:8166  CB F1               		SET			 6, C
     194.  00:8168                      .no_tiene_ayuda_nivel6:
     195.  00:8168  CB B1               		RES			 6, C
     196.  00:816A                      .fin_tiene_ayuda_nivel6:
     197.  00:816A                      		
     198.  00:816A  71                  		LD			(HL), C
     199.  00:816B  23 23               [2]		INC			HL		;pongo puntero en la siguiente habitación (2 saltos)
     200.  00:816D  DD 23 DD 23         [2]		INC			IX		;pongo puntero en la siguiente habitación (2 saltos)
     201.  00:8171  10 E9               		DJNZ		.inicia_nivel_6
     202.  00:8173                      
     203.  00:8173  E1                  		POP			HL
     204.  00:8174  C1                  		POP			BC
     205.  00:8175  F1                  		POP			AF
     206.  00:8176                      fin_iniciliza_niveles:
     207.  00:8176  C9                  		RET
     208.  00:8177                      
     209.  00:8177                      
     210.  00:8177                      ;;=====================================================
     211.  00:8177                      ;;ACTUALIZA_MARCADOR_VIDAS
     212.  00:8177                      ;;=====================================================	
     213.  00:8177                      ; función:  actualiza el buffer de vidas
     214.  00:8177                      ; entrada: 	prota_vidas
     215.  00:8177                      ; salida: 	array_aux_vidas
     216.  00:8177                      ; toca:		A,B,HL
     217.  00:8177                      actualiza_marcador_vidas:
     218.  00:8177                      	;para no andar restando pongo todos los huecos a negro y luego en otro bucle las caras
     219.  00:8177                      	;1-pinto todo en blanco
     220.  00:8177  21 70 AA            	LD		HL,array_aux_vidas
     221.  00:817A  06 08               	LD		 B,NMAXVIDREL
     222.  00:817C                      loop_marcador_caras_negro:	;asignar espacios en negro
     223.  00:817C  36 00               	LD		(HL),0			;0 posición mapa tiles para nada (es transparente pero el fondo es negro)
     224.  00:817E  23                  	INC		HL
     225.  00:817F  10 FB               	DJNZ	loop_marcador_caras_negro
     226.  00:8181                      fin_loop_marcador_caras_negro:
     227.  00:8181                      	;2-pinto las caras según el n de vidas
     228.  00:8181  3A 6B AA            	LD		 A, (prota_vidas)
     229.  00:8184  B7                  	OR		 A
     230.  00:8185  C8                  	RET 	 Z
     231.  00:8186  47                  	LD		 B, A
     232.  00:8187  21 70 AA            	LD		HL, array_aux_vidas
     233.  00:818A                      loop_marcador_caras: ;asignar caras
     234.  00:818A  36 0D               	LD		(HL), POSCARAMAP	;13 posición mapa tiles para cara
     235.  00:818C  23                  	INC		HL
     236.  00:818D  10 FB               	DJNZ	loop_marcador_caras
     237.  00:818F                      fin_loop_marcador_caras:
     238.  00:818F                      fin_actualiza_marcador_vidas:
     239.  00:818F  C9                  	RET
     240.  00:8190                      
     241.  00:8190                      
     242.  00:8190                      ;;=====================================================
     243.  00:8190                      ;;ACTUALIZA_BUFFER_RELIQUIAS
     244.  00:8190                      ;;=====================================================	
     245.  00:8190                      ; función: 	actualiza buffer de reliquias
     246.  00:8190                      ; entrada: 	prota_reliquias
     247.  00:8190                      ; salida: 	array_aux_reliquias
     248.  00:8190                      ; toca:		A,B,HL
     249.  00:8190                      actualiza_buffer_reliquias:	
     250.  00:8190                      	;para no andar restando pongo todos los huecos a negro y luego en otro bucle las reliquias
     251.  00:8190                      	;1-pinto todo en blanco
     252.  00:8190  21 78 AA            	LD		HL, array_aux_reliquias
     253.  00:8193  06 08               	LD		 B, NMAXVIDREL
     254.  00:8195  AF                  	XOR		 A
     255.  00:8196                      loop_buffer_reliquias_negro:	;asignar espacios en negro
     256.  00:8196  77                  	LD		(HL), A			;0 posición mapa tiles para nada (es transparente pero el fondo es negro)
     257.  00:8197  23                  	INC		HL
     258.  00:8198  10 FC               	DJNZ	loop_buffer_reliquias_negro
     259.  00:819A                      
     260.  00:819A                      	;2-pinto las cruces según el n de reliquias
     261.  00:819A  21 78 AA            	LD		HL, array_aux_reliquias
     262.  00:819D  3A 6C AA            	LD		 A, (prota_reliquias)
     263.  00:81A0  B7                  	OR		 A
     264.  00:81A1  C8                  	RET		 Z
     265.  00:81A2  47                  	LD		 B, A
     266.  00:81A3                      loop_buffer_reliquias: ;asignar reliquias
     267.  00:81A3  36 11               	LD		(HL), POSRELIMAP	;17 posición mapa tiles para reliquia
     268.  00:81A5  23                  	INC		HL
     269.  00:81A6  10 FB               	DJNZ	loop_buffer_reliquias
     270.  00:81A8                      fin_actualiza_buffer_reliquias:
     271.  00:81A8  C9                  	RET
     272.  00:81A9                      
     273.  00:81A9                      
     274.  00:81A9                      
     275.  00:81A9                      ;;=====================================================
     276.  00:81A9                      ;;LOCALIZA_INFO_HABITACION
     277.  00:81A9                      ;;=====================================================	
     278.  00:81A9                      ; función: 	busca las puertas que hay que pintar egún la posición del usuario y las pone en habitacion_actual
     279.  00:81A9                      ; entrada: 	prota.pos_mapy, prota.pos_mapx, prota_nivel habitaciones_juego
     280.  00:81A9                      ; salida: 	habitacion_actual
     281.  00:81A9                      ; toca:		todo
     282.  00:81A9                      ;ejemplo: nivel 4, posy 5 y posx 3
     283.  00:81A9                      ;3 + 5 x 8 + 4 x 49
     284.  00:81A9                      localiza_info_habitacion:
     285.  00:81A9                      	;~ PUSH	AF
     286.  00:81A9                      	;~ PUSH	BC
     287.  00:81A9                      	;~ PUSH	DE
     288.  00:81A9                      	;~ PUSH	HL
     289.  00:81A9                      
     290.  00:81A9                      ;primera posición: me coloco en la columna correcta
     291.  00:81A9  21 41 A7            	LD		HL, habitaciones_juego
     292.  00:81AC                      .situo_columna:	
     293.  00:81AC  3A 6D AA            	LD		 A, (prota_pos_mapx)
     294.  00:81AF  CB 27               	SLA		 A				;multiplico por dos ya que cada habitación va de dos en dos bytes
     295.  00:81B1  06 00               	LD		 B, 0
     296.  00:81B3  4F                  	LD		 C, A
     297.  00:81B4  09                  	ADD 	HL, BC			;sumo a la posición 0 la columnax2 en la que situarme
     298.  00:81B5                      	
     299.  00:81B5                      .situo_fila:
     300.  00:81B5  3A 6E AA            	LD		A, (prota_pos_mapy)
     301.  00:81B8  B7                  	OR	 	A
     302.  00:81B9  CA C6 81            	JP		Z, .situo_nivel	;si la fila es 0 no es necesario seguir operando en fila
     303.  00:81BC                      	
     304.  00:81BC  47                  	LD		B, A
     305.  00:81BD  AF                  	XOR		A
     306.  00:81BE                      .loop_suma_fila:
     307.  00:81BE  C6 10               	ADD		16				;cada fila tiene 16 bytes
     308.  00:81C0  10 FC               	DJNZ	.loop_suma_fila
     309.  00:81C2                      	
     310.  00:81C2  06 00               	LD		 B, 0
     311.  00:81C4  4F                  	LD		 C, A
     312.  00:81C5                      
     313.  00:81C5  09                  	ADD 	HL, BC			;sumo a la columna 16 x filas para situarme en la fila correcta
     314.  00:81C6                      
     315.  00:81C6                      .situo_nivel:
     316.  00:81C6  3A 6A AA            	LD		 A, (prota_nivel)
     317.  00:81C9  B7                  	OR	 	 A
     318.  00:81CA  CA DA 81            	JP		 Z, .actualiza_variable_habitacion	;si el nivel es 0 al pasar por las anterirores ya estoy situado actualizo la variable y termino
     319.  00:81CD                      	
     320.  00:81CD  E5                  	PUSH	HL				;guardo el resultado intermedio
     321.  00:81CE                      	
     322.  00:81CE  47                  	LD		 B, A			;preparo la varible del bucle
     323.  00:81CF  11 70 00            	LD		DE, 112			;112 = 16x42 son los bytes de cada matriz-nivel
     324.  00:81D2  21 00 00            	LD		HL, 0
     325.  00:81D5                      .loop_suma_nivel:
     326.  00:81D5  19                  	ADD		HL, DE
     327.  00:81D6  10 FD               	DJNZ	.loop_suma_nivel
     328.  00:81D8                      	
     329.  00:81D8  D1                  	POP		DE				;devuelvo el resultado intermedio en DE que ya no lo necesito
     330.  00:81D9                      	
     331.  00:81D9  19                  	ADD		HL, DE			;sumo el resultado del nivel al resultado intermedio anterior
     332.  00:81DA                      	
     333.  00:81DA                      .actualiza_variable_habitacion
     334.  00:81DA  7E                  	LD		 A, (HL)
     335.  00:81DB  32 3C A7            	LD		(habitacion_actual), A
     336.  00:81DE                      	
     337.  00:81DE                      	;actualizo la variable habitacion_actual y su puntero para poder modificar por si se vuelve a pasar por ahí
     338.  00:81DE  DD 21 3E A7         	LD		IX, habitacion_actual_puntero
     339.  00:81E2  DD 74 00            	LD		(IX), H
     340.  00:81E5  DD 75 01            	LD		(IX + 1), L
     341.  00:81E8                      	
     342.  00:81E8                      	;actualizo la variable is_habitacion_terminada
     343.  00:81E8  3A 3C A7            	LD		 A, (habitacion_actual)
     344.  00:81EB  CB 67               	BIT		 4, A					;está terminada la habitación
     345.  00:81ED  C2 F7 81            	JP		 NZ, .si_terminada
     346.  00:81F0                      .no_terminada:						;pongo un 0 en is_habitacion_terminada
     347.  00:81F0  AF                  	XOR		 A
     348.  00:81F1  32 40 A7            	LD		(is_habitacion_terminada), A
     349.  00:81F4  C3 FC 81            	JP		.fin_esta_terminada
     350.  00:81F7                      .si_terminada:						;pongo un 1 en is_habitacion_terminada
     351.  00:81F7  3E 01               	LD		 A, 1		
     352.  00:81F9  32 40 A7            	LD		(is_habitacion_terminada), A
     353.  00:81FC                      .fin_esta_terminada:
     354.  00:81FC                      	
     355.  00:81FC                      	;actualizo la variable hay_ayudas
     356.  00:81FC  3A 3C A7            	LD		 A, (habitacion_actual)
     357.  00:81FF  CB 77               	BIT		 6, A							;pintar ayuda
     358.  00:8201  C2 0C 82            	JP		 NZ, .no_mostrar_ayuda_activa	;0 no hay o ya se han cogido ayudas // 1 mostrar ayuda activa
     359.  00:8204                      .si_mostrar_ayuda_activa:							
     360.  00:8204  3E 01               	LD		 A, 1
     361.  00:8206  32 2A 9C            	LD		(examina_ayudas_en_pantalla), A	
     362.  00:8209  C3 10 82            	JP		.fin_mostrar_ayuda_activa
     363.  00:820C                      .no_mostrar_ayuda_activa:
     364.  00:820C  AF                  	XOR		 A
     365.  00:820D  32 2A 9C            	LD		(examina_ayudas_en_pantalla), A
     366.  00:8210                      .fin_mostrar_ayuda_activa:					;no restauro B en A porque ya no lo necesito
     367.  00:8210                      	
     368.  00:8210                      	;actualizo la variable habitacion_extras
     369.  00:8210  23                  	INC		HL				;el byte de los extras está antes de donde se especifican las puertas
     370.  00:8211  7E                  	LD		 A, (HL)
     371.  00:8212  32 3D A7            	LD		(habitacion_extras), A
     372.  00:8215                      
     373.  00:8215                      	;~ POP		HL	
     374.  00:8215                      	;~ POP		DE
     375.  00:8215                      	;~ POP		BC
     376.  00:8215                      	;~ POP		AF
     377.  00:8215                      fin_localiza_info_habitacion:
     378.  00:8215  C9                  	RET
     379.  00:8216                      	
     380.  00:8216                      
     381.  00:8216                      ;;=====================================================
     382.  00:8216                      ;;TERMINADA_HABIACION_RECORRIDA
     383.  00:8216                      ;;=====================================================	
     384.  00:8216                      ; función: 	usando la variable prota_pos_mapx pone un 1 a donde apunta habitacion_recorrida (el array... byte 14 de 
     385.  00:8216                      ;			habitaciones recorridas en esa fila) para ver si uestra enemigos o no y permita pasar por puertas
     386.  00:8216                      ; entrada: 	prota_pos_mapx, habitacion_recorrida
     387.  00:8216                      ; salida: 	habitacion_recorrida (byte 14 de la fila de habitaciones) actualizada con OR A (en A la habitacion)
     388.  00:8216                      ; toca:		IX, HL, AF
     389.  00:8216                      terminada_habitacion_recorrida:
     390.  00:8216  21 3E A7            		LD			HL, habitacion_actual_puntero
     391.  00:8219  7E                  		LD			 A, (HL)
     392.  00:821A  CB E7               		SET			 4, A
     393.  00:821C  77                  		LD			(HL), A
     394.  00:821D                      		
     395.  00:821D  3E 01               		LD			 A, HABTERMIN	;da igual qué bit mientras sea distinto de 0 pero se pone 1
     396.  00:821F  32 40 A7            		LD			(is_habitacion_terminada), A
     397.  00:8222                      		
     398.  00:8222                      		;este trozo no sirve de nada pero ya e quedo más tranquilo si lo pongo, por ser exacto y completo
     399.  00:8222                      		;no sirve porque se cambiará de habitación y se perderá/actualizará el dato
     400.  00:8222  3A 3C A7            		LD			 A, (habitacion_actual)
     401.  00:8225  CB E7               		SET			 4, A
     402.  00:8227  32 3C A7            		LD			(habitacion_actual), A
     403.  00:822A                      fin_terminada_habitacion_recorrida:
     404.  00:822A  C9                  		RET
     405.  00:822B                      
     406.  00:822B                      
     407.  00:822B                      
     408.  00:822B                      ;;=====================================================
     409.  00:822B                      ;;ENTRA_HABITACION												*no terminada
     410.  00:822B                      ;;=====================================================	
     411.  00:822B                      ; función: 	actualiza elementos en pantalla cuando hay cambios en habitación
     412.  00:822B                      ;			fondo
     413.  00:822B                      ;			puertas
     414.  00:822B                      ;			ayudas
     415.  00:822B                      ;			imagenes
     416.  00:822B                      ;			mapa inferior
     417.  00:822B                      ;			enemigos
     418.  00:822B                      ; entrada: 	prota_pos_mapy, prota_pos_mapy, prota_nivel
     419.  00:822B                      ; salida: 	
     420.  00:822B                      entra_habitacion:
     421.  00:822B  CD AA 82            		CALL	pinta_parte_superior_pantalla
     422.  00:822E  CD B4 88            		CALL	pinta_puertas
     423.  00:8231  CD EE 85            		CALL	pinta_extra_fondo
     424.  00:8234  CD BE 9C            		CALL	pinta_ayudas_habitacion
     425.  00:8237                      	
     426.  00:8237  C3 3A 82            		JP		pinta_heroe_mapa
     427.  00:823A                      fin_entra_habitacion:
     428.  00:823A                      
     429.  00:823A                      
     430.  00:823A                      ;;=====================================================
     431.  00:823A                      ;;PINTA_HEROE_MAPA
     432.  00:823A                      ;;PINTA_BLANCO_MAPA
     433.  00:823A                      ;;=====================================================	
     434.  00:823A                      ; función: 	pinta el iconito del heroe en el mapa o un espacio en blanco
     435.  00:823A                      ; entrada: 	
     436.  00:823A                      ; salida: 	
     437.  00:823A                      ; toca:		todo
     438.  00:823A                      pinta_heroe_mapa:
     439.  00:823A  3E 13               		LD		 A, TILEPROTAM
     440.  00:823C  32 8F AA            		LD		(elemento_pintar_mapa), A
     441.  00:823F  C3 D8 84            		JP		posiciona_en_mapa		;se le pasa elemento_pintar_mapa (tile del prota) está el prota y prota.posx y posy
     442.  00:8242                      fin_pinta_heroe_mapa:
     443.  00:8242                      pinta_blanco_mapa:
     444.  00:8242  3E 09               		LD		 A, TILEGRISM
     445.  00:8244  32 8F AA            		LD		(elemento_pintar_mapa), A
     446.  00:8247  C3 D8 84            		JP		posiciona_en_mapa		;se le pasa elemento_pintar_mapa (tile del prota) está el prota y prota.posx y posy
     447.  00:824A                      fin_pinta_blanco_mapa:
     448.  00:824A                      	
     449.  00:824A                      	
     450.  00:824A                      
     451.  00:824A                      ;;=====================================================
     452.  00:824A                      ;;CAMBIO_NIVEL
     453.  00:824A                      ;;=====================================================	
     454.  00:824A                      ; función: 	pinta el iconito del heroe en el mapa o un espacio en blanco
     455.  00:824A                      ; entrada: 	
     456.  00:824A                      ; salida: 	
     457.  00:824A                      ; toca:		todo	
     458.  00:824A                      cambio_nivel:
     459.  00:824A                      	
     460.  00:824A                      		;MIRAR CUANDO EL NIVEL SEA -1 (SE SALE DEL CASTILLO Y PUEDE QUE SEA POR TERMINAR JUEGO O SALIR ANTES DE TIEMPO)
     461.  00:824A                      	
     462.  00:824A                      ;		*****************************************************************************************************************************+
     463.  00:824A  CD 01 84            		CALL		pinta_nivel
     464.  00:824D                      	
     465.  00:824D  CD 81 84            		CALL		borra_mapa	
     466.  00:8250                      		
     467.  00:8250                      fin_cabio_nivel:
     468.  00:8250  C9                  		RET
     469.  00:8251                      	
     470.  00:8251                      	
     471.  00:8251                      
     472.  00:8251                      	
     473.  00:8251                      	
     474.  00:8251                      	
     159   00:8251                      	
     160   00:8251                      	include "subr_general.asm"
       1.  00:8251                      ;;=====================================================
       2.  00:8251                      ;;DEFINICIÓN DE SUBRUTINAS GENERALES USABLES PARA CUALQUIER PROYECTO
       3.  00:8251                      ;;=====================================================	
       4.  00:8251                      
       5.  00:8251                      ;;=====================================================
       6.  00:8251                      ;;SUMA_A_BC
       7.  00:8251                      ;;=====================================================	
       8.  00:8251                      ; función: 	suma A a BC por si da más de 255
       9.  00:8251                      ; entrada: 	A, BC
      10.  00:8251                      ; salida: 	A + BC
      11.  00:8251                      ; toca:		A, BC
      12.  00:8251                      suma_A_BC:
      13.  00:8251  81                  	ADD		 C
      14.  00:8252  4F                  	LD		 C, A
      15.  00:8253  88                  	ADC		 B
      16.  00:8254  91                  	SUB		 C
      17.  00:8255  47                  	LD		 B, A
      18.  00:8256                      fin_suma_A_BC:
      19.  00:8256  C9                  	RET
      20.  00:8257                      	
      21.  00:8257                      ;;=====================================================
      22.  00:8257                      ;;SUMA_A_HL
      23.  00:8257                      ;;=====================================================	
      24.  00:8257                      ; función: 	suma A a BC por si da más de 255
      25.  00:8257                      ; entrada: 	A, HL
      26.  00:8257                      ; salida: 	A + HL
      27.  00:8257                      ; toca:		A, HL
      28.  00:8257                      suma_A_HL:
      29.  00:8257  85                  	ADD		 L
      30.  00:8258  6F                  	LD		 L, A
      31.  00:8259  8C                  	ADC		 H
      32.  00:825A  95                  	SUB		 L
      33.  00:825B  67                  	LD		 H, A
      34.  00:825C                      fin_suma_A_HL:
      35.  00:825C  C9                  	RET
      36.  00:825D                      	
      37.  00:825D                      	
      38.  00:825D                      ;;=====================================================
      39.  00:825D                      ;;TEST_OK
      40.  00:825D                      ;;=====================================================	
      41.  00:825D                      ; función: para pruebas.. cambia el color de fondo cuando se le llama
      42.  00:825D                      test_OK:
      43.  00:825D  F5                  	PUSH	AF
      44.  00:825E                      	
      45.  00:825E  3E 0F               	LD		 A, 15
      46.  00:8260                      	
      47.  00:8260  32 E9 F3            	LD 		(FORCLR), A
      48.  00:8263  23                  	INC		HL
      49.  00:8264                      	
      50.  00:8264  32 EA F3            	LD 		(BAKCLR), A
      51.  00:8267  23                  	INC		HL
      52.  00:8268                      	
      53.  00:8268  7E                  	LD		 A, (HL)
      54.  00:8269  32 EB F3            	LD 		(BDRCLR), A
      55.  00:826C                      	
      56.  00:826C  CD 62 00            	CALL	CHGCLR 
      57.  00:826F                      	
      58.  00:826F  F1                  	POP		AF
      59.  00:8270                      fin_test_OK:
      60.  00:8270  C9                  	RET
     161   00:8271                      	
     162   00:8271                      	include "subr_pintapantalla.asm"
       1.  00:8271                      ;;=====================================================
       2.  00:8271                      ;;DEFINICIÓN DE SUBRUTINAS
       3.  00:8271                      ;;=====================================================	
       4.  00:8271                      ;relacionadas con pintado en pantalla (y no sprites)
       5.  00:8271                      
       6.  00:8271                      
       7.  00:8271                      ;;=====================================================
       8.  00:8271                      ;;COLOR_PANTALLA
       9.  00:8271                      ;;=====================================================	
      10.  00:8271                      ; función: 	el equivalente en basic a color 15,1,1
      11.  00:8271                      ; entrada: 	HL	que apunta a un array de bytes con 3 bytes FORCLR, BAKCLR y BDRCLR
      12.  00:8271                      ; salida: 	-
      13.  00:8271                      ; toca: 	todo
      14.  00:8271                      color_pantalla:
      15.  00:8271  7E                  	LD		 A, (HL)			;FORCLR 
      16.  00:8272  32 E9 F3            	LD 		(FORCLR),A
      17.  00:8275  23                  	INC		HL
      18.  00:8276                      	
      19.  00:8276  7E                  	LD		 A, (HL)			;BAKCLR
      20.  00:8277  32 EA F3            	LD 		(BAKCLR),A
      21.  00:827A  23                  	INC		HL
      22.  00:827B                      	
      23.  00:827B  7E                  	LD		 A, (HL)
      24.  00:827C  32 EB F3            	LD 		(BDRCLR),A			;BDRCLR
      25.  00:827F  C3 62 00            	JP		CHGCLR 
      26.  00:8282                      fin_color_pantalla:
      27.  00:8282                      
      28.  00:8282                      
      29.  00:8282                      ;;=====================================================
      30.  00:8282                      ;;PREPARAPANTALLA
      31.  00:8282                      ;;=====================================================	
      32.  00:8282                      ; función: elimina clic cuando se pulsa tecla, cls, screen 2,2
      33.  00:8282                      ; entrada: -
      34.  00:8282                      ; salida: -
      35.  00:8282                      ; toca: si no son todos los regristros, casi todos
      36.  00:8282                      sub_preparapantalla:
      37.  00:8282                      	;toca A y Z
      38.  00:8282                      elimina_clic;
      39.  00:8282  AF                  	XOR		 A
      40.  00:8283  32 DB F3            	LD		(CLIKSW),A
      41.  00:8286                      fin_elimina_clic:
      42.  00:8286                      
      43.  00:8286                      	;toca A
      44.  00:8286                      limpia_pantalla:
      45.  00:8286  AF                  	XOR		 A
      46.  00:8287  CD C3 00            	CALL 	CLS
      47.  00:828A                      fin_limpia_pantalla:
      48.  00:828A                      
      49.  00:828A                      	;toca A y direcciones #F3E9/#F3EA/#F3EB, poner en HL array con 3 valores
      50.  00:828A  21 51 AA            	LD		HL, color_base
      51.  00:828D  CD 71 82            	CALL	color_pantalla
      52.  00:8290                      	
      53.  00:8290                      	;cambiamos a SCREEN 2,2 del BASIC
      54.  00:8290                      	;toca A
      55.  00:8290                      screen2:
      56.  00:8290  3E 02               	LD		 A, 2
      57.  00:8292  CD 5F 00            	CALL	CHGMOD			;selecciona screen 2
      58.  00:8295                      sprites_16_16:
      59.  00:8295  3A E0 F3            	LD		 A, (RG1SAV)
      60.  00:8298  F6 02               	OR		00000010b		;fuerza sprites de 16x16
      61.  00:829A  32 E0 F3            	LD		(RG1SAV), A		;no lo guardamos en la copia de variables del sistema
      62.  00:829D  47                  	LD		 B, A
      63.  00:829E  0E 01               	LD		 C, 1
      64.  00:82A0  C3 47 00            	JP		WRTVDP			;opción alternativa de escribir las tres lineas siguientes
      65.  00:82A3                      fin_sub_preparapantalla:
      66.  00:82A3                      	
      67.  00:82A3                      
      68.  00:82A3                      ;;=====================================================
      69.  00:82A3                      ;;PINTA_PANTALLA_COMPLETA
      70.  00:82A3                      ;;=====================================================	
      71.  00:82A3                      ; función: pinta el escenario, las 3 partes
      72.  00:82A3                      ; entrada: -
      73.  00:82A3                      ; salida: -
      74.  00:82A3                      ; toca: si no son todos los regristros, casi todos
      75.  00:82A3                      pinta_pantalla_completa:
      76.  00:82A3  CD AA 82            	CALL 	pinta_parte_superior_pantalla
      77.  00:82A6                      	
      78.  00:82A6  CD C8 83            	CALL 	pinta_parte_inferior_pantalla	
      79.  00:82A9                      fin_pinta_pantalla_completa:
      80.  00:82A9  C9                  	RET
      81.  00:82AA                      
      82.  00:82AA                      
      83.  00:82AA                      ;;=====================================================
      84.  00:82AA                      ;;PINTA_PARTE_SUPERIOR_PANTALLA
      85.  00:82AA                      ;;=====================================================	
      86.  00:82AA                      ; función: pinta el escenario, los dos bancos superiores
      87.  00:82AA                      ; entrada: -
      88.  00:82AA                      ; salida: -
      89.  00:82AA                      ; toca: si no son todos los regristros, casi todos
      90.  00:82AA                      pinta_parte_superior_pantalla:
      91.  00:82AA  3A 6A AA            	LD		 A, (prota_nivel)
      92.  00:82AD  CA DB 82            	JP		 Z, .carga_nivel_0
      93.  00:82B0  3D                  	DEC		 A
      94.  00:82B1  3A 6A AA            	LD		 A, (prota_nivel)
      95.  00:82B4  CA F6 82            	JP		 Z, .carga_nivel_1
      96.  00:82B7  3D                  	DEC		 A
      97.  00:82B8  3A 6A AA            	LD		 A, (prota_nivel)
      98.  00:82BB  CA 11 83            	JP		 Z, .carga_nivel_2
      99.  00:82BE  3D                  	DEC		 A
     100.  00:82BF  3A 6A AA            	LD		 A, (prota_nivel)
     101.  00:82C2  CA 2C 83            	JP		 Z, .carga_nivel_3
     102.  00:82C5  3D                  	DEC		 A
     103.  00:82C6  3A 6A AA            	LD		 A, (prota_nivel)
     104.  00:82C9  CA 47 83            	JP		 Z, .carga_nivel_4
     105.  00:82CC  3D                  	DEC		 A
     106.  00:82CD  3A 6A AA            	LD		 A, (prota_nivel)
     107.  00:82D0  CA 62 83            	JP		 Z, .carga_nivel_5
     108.  00:82D3  3D                  	DEC		 A
     109.  00:82D4  3A 6A AA            	LD		 A, (prota_nivel)
     110.  00:82D7  CA 7D 83            	JP		 Z, .carga_nivel_6
     111.  00:82DA  3D                  	DEC		 A
     112.  00:82DB                      	
     113.  00:82DB                      .carga_nivel_0:
     114.  00:82DB  21 BF AB            	LD		HL, tiles_patrones_nivel0
     115.  00:82DE  22 C2 83            	LD		(tiles_patrones), HL
     116.  00:82E1  21 E9 AD            	LD		HL, tiles_color_nivel0
     117.  00:82E4  22 C4 83            	LD		(tiles_colores), HL
     118.  00:82E7  21 BF AB            	LD		HL, tiles_patrones_nivel0
     119.  00:82EA  22 C2 83            	LD		(tiles_patrones), HL
     120.  00:82ED  21 54 AE            	LD		HL, tiles_mapa_nivel0
     121.  00:82F0  22 C6 83            	LD		(tiles_mapa), HL
     122.  00:82F3  C3 95 83            	JP		.fin_carga_niveles
     123.  00:82F6                      
     124.  00:82F6                      .carga_nivel_1:
     125.  00:82F6  21 89 AE            	LD		HL, tiles_patrones_nivel1
     126.  00:82F9  22 C2 83            	LD		(tiles_patrones), HL
     127.  00:82FC  21 3E B0            	LD		HL, tiles_color_nivel1
     128.  00:82FF  22 C4 83            	LD		(tiles_colores), HL
     129.  00:8302  21 89 AE            	LD		HL, tiles_patrones_nivel1
     130.  00:8305  22 C2 83            	LD		(tiles_patrones), HL
     131.  00:8308  21 85 B0            	LD		HL, tiles_mapa_nivel1
     132.  00:830B  22 C6 83            	LD		(tiles_mapa), HL
     133.  00:830E  C3 95 83            	JP		.fin_carga_niveles
     134.  00:8311                      	
     135.  00:8311                      .carga_nivel_2:
     136.  00:8311  21 BA B0            	LD		HL, tiles_patrones_nivel2
     137.  00:8314  22 C2 83            	LD		(tiles_patrones), HL
     138.  00:8317  21 6F B2            	LD		HL, tiles_color_nivel2
     139.  00:831A  22 C4 83            	LD		(tiles_colores), HL
     140.  00:831D  21 BA B0            	LD		HL, tiles_patrones_nivel2
     141.  00:8320  22 C2 83            	LD		(tiles_patrones), HL
     142.  00:8323  21 B6 B2            	LD		HL, tiles_mapa_nivel2
     143.  00:8326  22 C6 83            	LD		(tiles_mapa), HL
     144.  00:8329  C3 95 83            	JP		.fin_carga_niveles
     145.  00:832C                      	
     146.  00:832C                      .carga_nivel_3:
     147.  00:832C  21 EB B2            	LD		HL, tiles_patrones_nivel3
     148.  00:832F  22 C2 83            	LD		(tiles_patrones), HL
     149.  00:8332  21 A0 B4            	LD		HL, tiles_color_nivel3
     150.  00:8335  22 C4 83            	LD		(tiles_colores), HL
     151.  00:8338  21 EB B2            	LD		HL, tiles_patrones_nivel3
     152.  00:833B  22 C2 83            	LD		(tiles_patrones), HL
     153.  00:833E  21 E7 B4            	LD		HL, tiles_mapa_nivel3
     154.  00:8341  22 C6 83            	LD		(tiles_mapa), HL
     155.  00:8344  C3 95 83            	JP		.fin_carga_niveles
     156.  00:8347                      	
     157.  00:8347                      .carga_nivel_4:
     158.  00:8347  21 1C B5            	LD		HL, tiles_patrones_nivel4
     159.  00:834A  22 C2 83            	LD		(tiles_patrones), HL
     160.  00:834D  21 D1 B6            	LD		HL, tiles_color_nivel4
     161.  00:8350  22 C4 83            	LD		(tiles_colores), HL
     162.  00:8353  21 1C B5            	LD		HL, tiles_patrones_nivel4
     163.  00:8356  22 C2 83            	LD		(tiles_patrones), HL
     164.  00:8359  21 18 B7            	LD		HL, tiles_mapa_nivel4
     165.  00:835C  22 C6 83            	LD		(tiles_mapa), HL
     166.  00:835F  C3 95 83            	JP		.fin_carga_niveles
     167.  00:8362                      	
     168.  00:8362                      .carga_nivel_5:
     169.  00:8362  21 4D B7            	LD		HL, tiles_patrones_nivel5
     170.  00:8365  22 C2 83            	LD		(tiles_patrones), HL
     171.  00:8368  21 02 B9            	LD		HL, tiles_color_nivel5
     172.  00:836B  22 C4 83            	LD		(tiles_colores), HL
     173.  00:836E  21 4D B7            	LD		HL, tiles_patrones_nivel5
     174.  00:8371  22 C2 83            	LD		(tiles_patrones), HL
     175.  00:8374  21 49 B9            	LD		HL, tiles_mapa_nivel5
     176.  00:8377  22 C6 83            	LD		(tiles_mapa), HL
     177.  00:837A  C3 95 83            	JP		.fin_carga_niveles
     178.  00:837D                      	
     179.  00:837D                      .carga_nivel_6:
     180.  00:837D  21 7E B9            	LD		HL, tiles_patrones_nivel6
     181.  00:8380  22 C2 83            	LD		(tiles_patrones), HL
     182.  00:8383  21 33 BB            	LD		HL, tiles_color_nivel6
     183.  00:8386  22 C4 83            	LD		(tiles_colores), HL
     184.  00:8389  21 7E B9            	LD		HL, tiles_patrones_nivel6
     185.  00:838C  22 C2 83            	LD		(tiles_patrones), HL
     186.  00:838F  21 7A BB            	LD		HL, tiles_mapa_nivel6
     187.  00:8392  22 C6 83            	LD		(tiles_mapa), HL
     188.  00:8395                      ;	JP		.fin_carga niveles			;no necesario
     189.  00:8395                      .fin_carga_niveles:
     190.  00:8395                      
     191.  00:8395                      	;cargando banco 1
     192.  00:8395                      	;cargamos los patrones
     193.  00:8395  2A C2 83            	LD		HL, (tiles_patrones)
     194.  00:8398  11 00 00            	LD		DE, CHRTBL
     195.  00:839B  CD DC 9C            	CALL	depack_VRAM
     196.  00:839E                      	;cargamos los colores de los patrones
     197.  00:839E  2A C4 83            	LD		HL, (tiles_colores)
     198.  00:83A1  11 00 20            	LD		DE, CLRTBL
     199.  00:83A4  CD DC 9C            	CALL	depack_VRAM
     200.  00:83A7                      	
     201.  00:83A7                      	;cargando banco 2
     202.  00:83A7                      	;cargamos los patrones
     203.  00:83A7  2A C2 83            	LD		HL, (tiles_patrones)
     204.  00:83AA  11 00 08            	LD		DE, CHRTBL + #0800
     205.  00:83AD  CD DC 9C            	CALL	depack_VRAM	
     206.  00:83B0                      	;cargamos los colores de los patrones
     207.  00:83B0  2A C4 83            	LD		HL, (tiles_colores)
     208.  00:83B3  11 00 28            	LD		DE, CLRTBL + #0800
     209.  00:83B6  CD DC 9C            	CALL	depack_VRAM
     210.  00:83B9                      	
     211.  00:83B9                      	;cargamos mapa de pantalla banco 1 y 2
     212.  00:83B9  2A C6 83            	LD		HL, (tiles_mapa)
     213.  00:83BC  11 00 18            	LD		DE, TILMAP
     214.  00:83BF  C3 DC 9C            	JP		depack_VRAM
     215.  00:83C2                      fin_pinta_parte_superior_pantalla:
     216.  00:83C2  00 00               tiles_patrones:		DW	0
     217.  00:83C4  00 00               tiles_colores:		DW	0
     218.  00:83C6  00 00               tiles_mapa:			DW	0
     219.  00:83C8                      
     220.  00:83C8                      
     221.  00:83C8                      ;;=====================================================
     222.  00:83C8                      ;;PINTA_PARTE_INFERIOR_PANTALLA
     223.  00:83C8                      ;;=====================================================	
     224.  00:83C8                      ; función: pinta la parte inferior del escenario que es común
     225.  00:83C8                      ; entrada: -
     226.  00:83C8                      ; salida: -
     227.  00:83C8                      ; toca: si no son todos los regristros, casi todos
     228.  00:83C8                      pinta_parte_inferior_pantalla:
     229.  00:83C8                      	;cangando banco 3
     230.  00:83C8                      	;cargamos los patrones
     231.  00:83C8  21 AF BB            	LD		HL,tiles_patrones_marcador
     232.  00:83CB  11 00 10            	LD		DE,CHRTBL + #1000
     233.  00:83CE  CD DC 9C            	CALL	depack_VRAM	
     234.  00:83D1                      	;cargamos mapa de pantalla
     235.  00:83D1  21 30 BD            	LD		HL,tiles_mapa_marcador
     236.  00:83D4  11 00 1A            	LD		DE,TILMAP + #0200
     237.  00:83D7  CD DC 9C            	CALL	depack_VRAM
     238.  00:83DA                      	;cargamos los colores de los patrones
     239.  00:83DA  21 FB BC            	LD		HL,tiles_color_marcador
     240.  00:83DD  11 00 30            	LD		DE,CLRTBL + #1000
     241.  00:83E0  C3 DC 9C            	JP		depack_VRAM
     242.  00:83E3                      fin_pinta_parte_inferior_pantalla:
     243.  00:83E3                      
     244.  00:83E3                      
     245.  00:83E3                      
     246.  00:83E3                      ;;=====================================================
     247.  00:83E3                      ;;PINTA_VIDAS
     248.  00:83E3                      ;;=====================================================	
     249.  00:83E3                      ; función: 	actualiza el mapa de tiles para que en el próximo refresco se pinten y actualiza_vidas
     250.  00:83E3                      ; entrada: 	array_aux_vidas
     251.  00:83E3                      ; salida: 	actualiza_vidas_sn
     252.  00:83E3                      ; toca:		todo
     253.  00:83E3                      pinta_vidas:
     254.  00:83E3  CD 77 81            	CALL	actualiza_marcador_vidas
     255.  00:83E6                      	
     256.  00:83E6  21 70 AA            	LD		HL, array_aux_vidas
     257.  00:83E9  11 48 1A            	LD		DE, TILMAP + POSVIDAS 	;inicio posición en el mapa de tiles de las vidas
     258.  00:83EC  01 08 00            	LD		BC, NMAXVIDREL			;hay 8 posiciones para vidas/reliquias o espacios en negro si no tiene 8 vidas/reliquias
     259.  00:83EF  C3 5C 00            	JP		LDIRVM
     260.  00:83F2                      fin_pinta_vidas:
     261.  00:83F2                      	
     262.  00:83F2                      	
     263.  00:83F2                      
     264.  00:83F2                      ;;=====================================================
     265.  00:83F2                      ;;PINTA_RELIQUIAS
     266.  00:83F2                      ;;=====================================================	
     267.  00:83F2                      ; función: 	actualiza el mapa de tiles para que en el próximo refresco se pinten y actualiza_reliquias
     268.  00:83F2                      ; entrada: 	array_aux_reliquias
     269.  00:83F2                      ; salida: 	-
     270.  00:83F2                      ; toca:		todo
     271.  00:83F2                      pinta_reliquias:
     272.  00:83F2  CD 90 81            	CALL	actualiza_buffer_reliquias
     273.  00:83F5                      	
     274.  00:83F5  21 78 AA            	LD		HL, array_aux_reliquias
     275.  00:83F8  11 C8 1A            	LD		DE, TILMAP + POSRELIQ 	;inicio posición en el mapa de tiles de las vidas
     276.  00:83FB  01 08 00            	LD		BC, NMAXVIDREL			;hay 8 posiciones para vidas/reliquias o espacios en negro si no tiene 8 vidas/reliquias
     277.  00:83FE  C3 5C 00            	JP		LDIRVM
     278.  00:8401                      fin_pinta_reliquias:
     279.  00:8401                      	
     280.  00:8401                      
     281.  00:8401                      
     282.  00:8401                      	
     283.  00:8401                      ;;=====================================================
     284.  00:8401                      ;;PINTA_NIVEL
     285.  00:8401                      ;;=====================================================	
     286.  00:8401                      ; función: 	actualiza el nivel en la parte de puntuación
     287.  00:8401                      ; entrada: 	prota_nivel
     288.  00:8401                      ; salida: 	-
     289.  00:8401                      ; toca:		HL,DE,BC
     290.  00:8401                      pinta_nivel:
     291.  00:8401                      	;forma más avanzada sin llamada a la bios
     292.  00:8401  01 B4 1A            	LD		BC,TILMAP + POSNIVEL ;posición en el mapa de tiles del tile de nivel
     293.  00:8404  3A 6A AA            	LD		 A, (prota_nivel)	 ;seleccionando la pos del banco de tiles a poner en el mapa
     294.  00:8407  C6 30               	ADD		'0'	
     295.  00:8409  57                  	LD		 D, A
     296.  00:840A                      	
     297.  00:840A  C3 0D 84            	JP		pinta_tile_suelto
     298.  00:840D                      fin_pinta_nivel:
     299.  00:840D                      
     300.  00:840D                      
     301.  00:840D                      
     302.  00:840D                      ;;=====================================================
     303.  00:840D                      ;;PINTA_TILE_SUELTO
     304.  00:840D                      ;;=====================================================	
     305.  00:840D                      ; función: 	pinta al tile que digamos en D, en la posición BC
     306.  00:840D                      ; entrada: 	BC (posición a pintar en el mapa),D (qué se va a pintar el esa posición)
     307.  00:840D                      ; salida: 	-
     308.  00:840D                      ; toca:		A
     309.  00:840D                      pinta_tile_suelto:	
     310.  00:840D  DB 99               	IN		 A,(REGEST)		;leer registro de estado (recomendado)
     311.  00:840F  79                  	LD		 A,C			;primero byte bajo	
     312.  00:8410  D3 99               	OUT		(REGEST),A
     313.  00:8412  78                  	LD		 A,B			;después byte alto  ********************** preguntar a Fernando cómo que byte bajo es B
     314.  00:8413  F6 40               	OR		1000000b		;+64
     315.  00:8415  D3 99               	OUT		(REGEST),A
     316.  00:8417                      	
     317.  00:8417  7A                  	LD		A,D
     318.  00:8418  D3 98               	OUT		(REGESCVDP),A	;escribe A en VRAM en la posición indicada por los dos OUT anteriores
     319.  00:841A                      fin_pinta_tile_suelto:
     320.  00:841A  C9                  	RET
     321.  00:841B                      
     322.  00:841B                      
     323.  00:841B                      
     324.  00:841B                      
     325.  00:841B                      
     326.  00:841B                      ;;=====================================================
     327.  00:841B                      ;;MIRA_PINTA ENERGIA
     328.  00:841B                      ;;=====================================================	
     329.  00:841B                      ; función: 	actualiza el nivel de energia en la parte de puntuación
     330.  00:841B                      ; nota:		el cuadrado más bajo de ejergía siempre estará pintado... se obviará
     331.  00:841B                      ; entrada: 	prota.energia, array_aux_energia
     332.  00:841B                      ; salida: 	-
     333.  00:841B                      ; toca:		ninguno porque usa EXX
     334.  00:841B                      
     335.  00:841B                      ; nota importante... lo mismo interesa hacer esto con un array para comparar y un bucle
     336.  00:841B                      
     337.  00:841B                      mira_pinta_energia:
     338.  00:841B  D9                  	EXX							;por si acaso guardo el contenido de HL (si veo que no es necesario guardarlo lo quito) uso esto en vez de push por el nº ciclos
     339.  00:841C                      	
     340.  00:841C  3A 6F AA            	LD		 A,(prota_energia) 	;para las comparaciones A variable (actual) y B fijo (limites)
     341.  00:841F                      
     342.  00:841F  0E 00               	LD		 C,TILENEGRO		;para agilizar asignaciones en vez de un valor cte uso otro registro
     343.  00:8421                      pinta_ener:
     344.  00:8421                      pinta_ener_tile_8:
     345.  00:8421  21 87 AA            	LD		HL,ultimo_pos_array_aux_energia	;coloco puntero en array e iré decrementando
     346.  00:8424  06 D9               	LD		 B,TILEENERG8
     347.  00:8426  B8                  	CP		 B
     348.  00:8427  38 04               	JR		C,pinta_ener_tile_8_negro
     349.  00:8429  36 0E               	LD		(HL),TILEMAPVERD
     350.  00:842B  18 01               	JR		pinta_ener_tile_7
     351.  00:842D                      pinta_ener_tile_8_negro:
     352.  00:842D  71                  	LD		(HL),C
     353.  00:842E                      
     354.  00:842E                      pinta_ener_tile_7:
     355.  00:842E  2B                  	DEC		HL
     356.  00:842F  06 BA               	LD		 B,TILEENERG7
     357.  00:8431  B8                  	CP		 B
     358.  00:8432  38 04               	JR		C,pinta_ener_tile_7_negro
     359.  00:8434  36 0E               	LD		(HL),TILEMAPVERD
     360.  00:8436  18 01               	JR		pinta_ener_tile_6
     361.  00:8438                      pinta_ener_tile_7_negro:
     362.  00:8438  71                  	LD		(HL),C
     363.  00:8439                      
     364.  00:8439                      pinta_ener_tile_6:
     365.  00:8439  2B                  	DEC		HL
     366.  00:843A  06 9B               	LD		 B,TILEENERG6
     367.  00:843C  B8                  	CP		 B
     368.  00:843D  38 04               	JR		C,pinta_ener_tile_6_negro
     369.  00:843F  36 0E               	LD		(HL),14
     370.  00:8441  18 01               	JR		pinta_ener_tile_5
     371.  00:8443                      pinta_ener_tile_6_negro:
     372.  00:8443  71                  	LD		(HL),C
     373.  00:8444                      
     374.  00:8444                      pinta_ener_tile_5:
     375.  00:8444  2B                  	DEC		HL
     376.  00:8445  06 7C               	LD		 B,TILEENERG5
     377.  00:8447  B8                  	CP		 B
     378.  00:8448  38 04               	JR		C,pinta_ener_tile_5_negro
     379.  00:844A  36 0E               	LD		(HL),TILEMAPVERD
     380.  00:844C  18 01               	JR		pinta_ener_tile_4
     381.  00:844E                      pinta_ener_tile_5_negro:
     382.  00:844E  71                  	LD		(HL),C
     383.  00:844F                      
     384.  00:844F                      pinta_ener_tile_4:
     385.  00:844F  2B                  	DEC		HL
     386.  00:8450  06 5D               	LD		 B,TILEENERG4
     387.  00:8452  B8                  	CP		 B
     388.  00:8453  38 04               	JR		C,pinta_ener_tile_4_negro
     389.  00:8455  36 0F               	LD		(HL),TILEMAPAMAR
     390.  00:8457  18 01               	JR		pinta_ener_tile_3
     391.  00:8459                      pinta_ener_tile_4_negro:
     392.  00:8459  71                  	LD		(HL),C
     393.  00:845A                      	
     394.  00:845A                      pinta_ener_tile_3:
     395.  00:845A  2B                  	DEC		HL
     396.  00:845B  06 3E               	LD		 B,TILEENERG3
     397.  00:845D  B8                  	CP		 B
     398.  00:845E  38 04               	JR		C,pinta_ener_tile_3_negro
     399.  00:8460  36 0F               	LD		(HL),TILEMAPAMAR
     400.  00:8462  18 01               	JR		pinta_ener_tile_2
     401.  00:8464                      pinta_ener_tile_3_negro:
     402.  00:8464  71                  	LD		(HL),C
     403.  00:8465                      
     404.  00:8465                      pinta_ener_tile_2:
     405.  00:8465  2B                  	DEC		HL
     406.  00:8466  06 1F               	LD		 B,TILEENERG2
     407.  00:8468  B8                  	CP		 B
     408.  00:8469  38 04               	JR		C,pinta_ener_tile_2_negro
     409.  00:846B  36 10               	LD		(HL),TILEMAPROJO
     410.  00:846D  18 01               	JR		fin_mira_pinta_energia		;siempre estará pintado el cuadro mínimo
     411.  00:846F                      pinta_ener_tile_2_negro:
     412.  00:846F  71                  	LD		(HL),C
     413.  00:8470                      
     414.  00:8470                      fin_mira_pinta_energia:
     415.  00:8470  D9                  	EXX
     416.  00:8471  C9                  	RET
     417.  00:8472                      
     418.  00:8472                      
     419.  00:8472                      ;;=====================================================
     420.  00:8472                      ;;PINTA_ENERGIA
     421.  00:8472                      ;;=====================================================	
     422.  00:8472                      ; función: 	actualiza el mapa de tiles para que en el próximo refresco se pinte la barra de energia actual
     423.  00:8472                      ; entrada: 	array_aux_energia
     424.  00:8472                      ; toca:		todo
     425.  00:8472                      pinta_energia:
     426.  00:8472  CD 1B 84            	CALL	mira_pinta_energia
     427.  00:8475                      	
     428.  00:8475  21 80 AA            	LD		HL, array_aux_energia
     429.  00:8478  11 88 1A            	LD		DE, TILMAP + POSENERG 	;inicio posición en el mapa de tiles de las vidas
     430.  00:847B  01 08 00            	LD		BC, NMAXVIDREL			;hay 8 posiciones para vidas/reliquias o espacios en negro si no tiene 8 vidas/reliquias
     431.  00:847E  C3 5C 00            	JP		LDIRVM
     432.  00:8481                      fin_pinta_energia:
     433.  00:8481                      
     434.  00:8481                      
     435.  00:8481                      
     436.  00:8481                      ;;=====================================================
     437.  00:8481                      ;;BORRA_MAPA
     438.  00:8481                      ;;=====================================================	
     439.  00:8481                      ; función: 	pone todas las habitaciones del mapa a negro (los tiles del mapa los rellena con un array a 0 - caracter en negro)
     440.  00:8481                      ; entrada: 	array_aux_mapa_limpiar
     441.  00:8481                      ; salida: 	-
     442.  00:8481                      ; toca:		AF
     443.  00:8481                      borra_mapa:
     444.  00:8481  D9                  	EXX
     445.  00:8482                      	
     446.  00:8482  21 88 AA            	LD		HL,array_aux_mapa_limpiar
     447.  00:8485  11 F8 1A            	LD		DE,TILMAP + POSMAPLIN1 	;inicio posición en el mapa de tiles de la primera fila del mapa
     448.  00:8488  01 07 00            	LD		BC,NHABNIVEL			;cada nivel son 7 filas con 7 habitaciones "posibles"
     449.  00:848B  CD 5C 00            	CALL	LDIRVM
     450.  00:848E                      	
     451.  00:848E  21 88 AA            	LD		HL,array_aux_mapa_limpiar
     452.  00:8491  11 D8 1A            	LD		DE,TILMAP + POSMAPLIN2
     453.  00:8494  01 07 00            	LD		BC,NHABNIVEL
     454.  00:8497  CD 5C 00            	CALL	LDIRVM
     455.  00:849A                      
     456.  00:849A  21 88 AA            	LD		HL,array_aux_mapa_limpiar
     457.  00:849D  11 B8 1A            	LD		DE,TILMAP + POSMAPLIN3
     458.  00:84A0  01 07 00            	LD		BC,NHABNIVEL
     459.  00:84A3  CD 5C 00            	CALL	LDIRVM
     460.  00:84A6                      
     461.  00:84A6  21 88 AA            	LD		HL,array_aux_mapa_limpiar	
     462.  00:84A9  11 98 1A            	LD		DE,TILMAP + POSMAPLIN4
     463.  00:84AC  01 07 00            	LD		BC,NHABNIVEL
     464.  00:84AF  CD 5C 00            	CALL	LDIRVM
     465.  00:84B2                      
     466.  00:84B2  21 88 AA            	LD		HL,array_aux_mapa_limpiar	
     467.  00:84B5  11 78 1A            	LD		DE,TILMAP + POSMAPLIN5
     468.  00:84B8  01 07 00            	LD		BC,NHABNIVEL
     469.  00:84BB  CD 5C 00            	CALL	LDIRVM
     470.  00:84BE                      
     471.  00:84BE  21 88 AA            	LD		HL,array_aux_mapa_limpiar	
     472.  00:84C1  11 58 1A            	LD		DE,TILMAP + POSMAPLIN6
     473.  00:84C4  01 07 00            	LD		BC,NHABNIVEL
     474.  00:84C7  CD 5C 00            	CALL	LDIRVM
     475.  00:84CA                      
     476.  00:84CA  21 88 AA            	LD		HL,array_aux_mapa_limpiar	
     477.  00:84CD  11 38 1A            	LD		DE,TILMAP + POSMAPLIN7
     478.  00:84D0  01 07 00            	LD		BC,NHABNIVEL
     479.  00:84D3  CD 5C 00            	CALL	LDIRVM
     480.  00:84D6                      	
     481.  00:84D6  D9                  	EXX
     482.  00:84D7                      fin_borra_mapa:
     483.  00:84D7  C9                  	RET
     484.  00:84D8                      
     485.  00:84D8                      
     486.  00:84D8                      
     487.  00:84D8                      
     488.  00:84D8                      
     489.  00:84D8                      
     490.  00:84D8                      
     491.  00:84D8                      ;;=====================================================
     492.  00:84D8                      ;;POSICIONA_EN_MAPA
     493.  00:84D8                      ;;=====================================================	
     494.  00:84D8                      ; función: 	en el mapa de marcadores de la derecha/abajo marca un cuadro en gris o con un muñeco
     495.  00:84D8                      ;			según el valor de prota.posición pinta entrá un muñeco y por donde vaya pasando el prota
     496.  00:84D8                      ;			quedará en gris
     497.  00:84D8                      ; entrada: 	elemento_pintar_mapa  A , prota_pos_mapy, prota_pos_mapx
     498.  00:84D8                      ; salida: 	-
     499.  00:84D8                      ; toca:		todos
     500.  00:84D8                      posiciona_en_mapa:
     501.  00:84D8                      	;#0238 es la posición en mapa de tiles de la esquina superior izquierda del mapa (569 en decimal)
     502.  00:84D8  21 38 1A            	LD		HL, TILMAP + POSMAPA;pos inicial
     503.  00:84DB                      	
     504.  00:84DB                      	;ahora se le calcula la fila a pintar ya que va de abajo a arriba y no como en el mapa + columna
     505.  00:84DB                      .sumar_fila:
     506.  00:84DB  3A 6E AA            	LD		 A, (prota_pos_mapy)
     507.  00:84DE  FE 01               	CP		 1
     508.  00:84E0  28 2A               	JR		 Z, .fila_1
     509.  00:84E2  3A 6E AA            	LD		 A, (prota_pos_mapy)
     510.  00:84E5  FE 02               	CP		 2
     511.  00:84E7  28 2A               	JR		 Z, .fila_2
     512.  00:84E9  3A 6E AA            	LD		 A, (prota_pos_mapy)
     513.  00:84EC  FE 03               	CP		 3
     514.  00:84EE  28 2A               	JR		 Z, .fila_3
     515.  00:84F0  3A 6E AA            	LD		 A, (prota_pos_mapy)
     516.  00:84F3  FE 04               	CP		 4
     517.  00:84F5  28 2A               	JR		 Z, .fila_4
     518.  00:84F7  3A 6E AA            	LD		 A, (prota_pos_mapy)
     519.  00:84FA  FE 05               	CP		 5
     520.  00:84FC  28 2A               	JR		 Z, .fila_5
     521.  00:84FE  3A 6E AA            	LD		 A, (prota_pos_mapy)
     522.  00:8501  FE 06               	CP		 6
     523.  00:8503  28 2A               	JR		 Z, .sumar_columna
     524.  00:8505                      	;no consulto la 0 porque si no es ninguna de las anteriores es 0 y por tanto sería un jr fila_0
     525.  00:8505                      	
     526.  00:8505                      .fila_0:
     527.  00:8505  11 C0 00            	LD		DE, 192
     528.  00:8508  19                  	ADD		HL, DE			;nota: se que repito el ADD pero la otra opción es inicializar DE y ya tarda mucho la funicón (es por velicidad)
     529.  00:8509  C3 2F 85            	JP		.sumar_columna
     530.  00:850C                      .fila_1:
     531.  00:850C  11 A0 00            	LD		DE, 160
     532.  00:850F  19                  	ADD		HL, DE
     533.  00:8510  C3 2F 85            	JP		.sumar_columna
     534.  00:8513                      .fila_2:
     535.  00:8513  11 80 00            	LD		DE, 128
     536.  00:8516  19                  	ADD		HL, DE
     537.  00:8517  C3 2F 85            	JP		.sumar_columna
     538.  00:851A                      .fila_3:
     539.  00:851A  11 60 00            	LD		DE, 96
     540.  00:851D  19                  	ADD		HL, DE
     541.  00:851E  C3 2F 85            	JP		.sumar_columna
     542.  00:8521                      .fila_4:
     543.  00:8521  11 40 00            	LD		DE, 64
     544.  00:8524  19                  	ADD		HL, DE
     545.  00:8525  C3 2F 85            	JP		.sumar_columna
     546.  00:8528                      .fila_5:
     547.  00:8528  11 20 00            	LD		DE, 32
     548.  00:852B  19                  	ADD		HL, DE
     549.  00:852C  C3 2F 85            	JP		.sumar_columna
     550.  00:852F                      .fila_6:
     551.  00:852F                      	;pongo fila_6 por poner ya que si es la fila 6 equiv. a primera fila del mapa y por tanto no suma fila
     552.  00:852F                      	
     553.  00:852F                      	
     554.  00:852F                      .sumar_columna:
     555.  00:852F  3A 6D AA            	LD 		 A, (prota_pos_mapx) ;POS X
     556.  00:8532  16 00               	LD		 D, 0
     557.  00:8534  5F                  	LD		 E, A
     558.  00:8535  19                  	ADD		HL, DE
     559.  00:8536                      	
     560.  00:8536                      	;resultado en BC para usar en la función pinta_tile_suelto
     561.  00:8536  44                  	LD		 B, H
     562.  00:8537  4D                  	LD		 C, L
     563.  00:8538                      	
     564.  00:8538                      	;terminado de fijar la coordenada recuperamos a para ver el tipo
     565.  00:8538  3A 8F AA            	LD		 A, (elemento_pintar_mapa)
     566.  00:853B  FE 09               	CP		 TILEGRISM
     567.  00:853D  CA 45 85            	JP		 Z, pinta_pos_mapa_vacio
     568.  00:8540  16 13               	LD		 D, TILEPROTAM
     569.  00:8542  C3 47 85            	JP		fin_pinta_pos_mapa
     570.  00:8545                      pinta_pos_mapa_vacio:
     571.  00:8545  16 09               	LD		 D, TILEGRISM	
     572.  00:8547                      
     573.  00:8547                      fin_pinta_pos_mapa:
     574.  00:8547  C3 0D 84            	JP		pinta_tile_suelto
     575.  00:854A                      fin_posiciona_en_mapa:
     576.  00:854A                      
     577.  00:854A                      
     578.  00:854A                      
     579.  00:854A                      
     580.  00:854A                      ;;=====================================================
     581.  00:854A                      ;;EFECTO_IMAGEN_TIRA_RELIQUIA
     582.  00:854A                      ;;=====================================================	
     583.  00:854A                      ; función: 	hace que el fondo de la pantalla parpadee N veces
     584.  00:854A                      ; entrada: 	actualiza_reliquias_sn
     585.  00:854A                      ; salida: 	-
     586.  00:854A                      ; toca: 	todo
     587.  00:854A                      efecto_imagen_tira_reliquia:
     588.  00:854A  3E 14               	LD		 A, 20;RETARDOREL
     589.  00:854C  47                  	LD		 B, A
     590.  00:854D                      
     591.  00:854D                      .parpadea_fondo:
     592.  00:854D  C5                  	PUSH	BC
     593.  00:854E  21 54 AA            	LD		HL, color_bomba1
     594.  00:8551  CD 71 82            	CALL	color_pantalla
     595.  00:8554                      	
     596.  00:8554                      	;~ PUSH	BC
     597.  00:8554                      	;~ LD		 A, 255
     598.  00:8554                      	;~ LD		 B, A
     599.  00:8554                      ;~ .bucle_de_espera:
     600.  00:8554                      	;~ NOP
     601.  00:8554                      	;~ DJNZ	 .bucle_de_espera
     602.  00:8554                      	;~ POP		BC
     603.  00:8554  76                  	HALT
     604.  00:8555                      
     605.  00:8555                      	
     606.  00:8555  21 57 AA            	LD		HL, color_bomba2
     607.  00:8558  CD 71 82            	CALL	color_pantalla
     608.  00:855B  C1                  	POP		BC
     609.  00:855C  10 EF               	DJNZ	.parpadea_fondo
     610.  00:855E                      	
     611.  00:855E  21 51 AA            	LD		HL, color_base
     612.  00:8561  C3 71 82            	JP		color_pantalla
     613.  00:8564                      fin_efecto_imagen_tira_reliquia:
     614.  00:8564                      
     615.  00:8564                      
     616.  00:8564                      
     617.  00:8564                      
     618.  00:8564                      ;=====================================================
     619.  00:8564                      ;;PINTA_ARRAY
     620.  00:8564                      ;;=====================================================	
     621.  00:8564                      ;;funcion:  (pinta el mismo tile) se le pasa un array con posiciones de tiles y coordenadas x e y y los pinta en screen 2
     622.  00:8564                      ;;entrada:	wordaux1 (pos inicio sc2 donde pintar) y wordaux2 (puntero al array a pintar), BC (posición en tilemap) , D filas y E columnas
     623.  00:8564                      ;;salida:	-
     624.  00:8564                      ;;importante: necesita de una variable wordaux1 tipo WD (wordaux1: 	DW	0)
     625.  00:8564                      ;; ejemplo llamada:
     626.  00:8564                      	;~ LD		HL,array_tiles					;guardo puntero al array a pintar (como psar por referencia)
     627.  00:8564                      	;~ LD		(wordaux2),HL					;en la variable wordaux2
     628.  00:8564                      	;~ LD		HL,SC2MAP + 256 + 32			;calcula posición en tilemap
     629.  00:8564                      	;~ LD		(wordaux1),HL					;guarda valor pos tilemap en wordaux1
     630.  00:8564                      	;~ LD		B,H								;coloca posición tilemap BC
     631.  00:8564                      	;~ LD		C,L
     632.  00:8564                      	;~ LD		D,2								;nº de filas ahora byteaux1
     633.  00:8564                      	;~ LD		E,3								;nº de columnas ahora byteaux2
     634.  00:8564                      	;~ CALL	pinta_array
     635.  00:8564                      
     636.  00:8564                      pinta_array:
     637.  00:8564  08                  	EX		AF, AF'
     638.  00:8565                      	
     639.  00:8565  3A A8 85            	LD		 A, (byteaux1)
     640.  00:8568  57                  	LD		 D, A
     641.  00:8569  3A A9 85            	LD		 A, (byteaux2)
     642.  00:856C  5F                  	LD		 E, A
     643.  00:856D                      	
     644.  00:856D  2A A4 85            	LD		HL, (wordaux1)
     645.  00:8570  44                  	LD		 B, H							;coloca posición tilemap BC
     646.  00:8571  4D                  	LD		 C, L
     647.  00:8572                      	
     648.  00:8572                      	;contamos con que la posición "global" en el tilemap está ya en BC
     649.  00:8572                      	;y el puntero al array a pintar en wordaux2 y la posición en tilemap sc2 en wordaux1
     650.  00:8572                      	;inicializa
     651.  00:8572  DB 99               	IN		 A,(REGEST)		;leer registro de estado (recomendado)
     652.  00:8574                      	
     653.  00:8574                      	;coloca puntero para pintar tile según BC
     654.  00:8574  79                  	LD		 A,C			;primero byte bajo	
     655.  00:8575  D3 99               	OUT		(REGEST),A
     656.  00:8577  78                  	LD		 A,B			;después byte alto  ********************** preguntar a Fernando cómo que byte bajo es B
     657.  00:8578  F6 40               	OR		1000000b		;+64
     658.  00:857A  D3 99               	OUT		(REGEST),A
     659.  00:857C                      
     660.  00:857C                      	
     661.  00:857C  2A A6 85            	LD		HL,(wordaux2)	;HL es lo que se pintará y le he pasado el puntero del array tilemap a pintar
     662.  00:857F                      .pa_pinta_fila:
     663.  00:857F  43                  	LD		 B,E
     664.  00:8580                      .pa_pinta_columnas: 		;finta la fila (pintando las columnas)
     665.  00:8580  7E                  	LD		 A,(HL)
     666.  00:8581  D3 98               	OUT		(REGESCVDP),A	;escribe A en VRAM en la posición indicada por los dos OUT anteriores
     667.  00:8583  23                  	INC		HL
     668.  00:8584  10 FA               	DJNZ	.pa_pinta_columnas
     669.  00:8586                      	
     670.  00:8586                      	;no es una solución elegante lo de repetir código pero queda claro
     671.  00:8586                      	;por si hay otra fila
     672.  00:8586  E5                  	PUSH	HL
     673.  00:8587  2A A4 85            	LD		HL,(wordaux1)
     674.  00:858A  01 20 00            	LD		BC,32
     675.  00:858D  09                  	ADD		HL,BC
     676.  00:858E  22 A4 85            	LD		(wordaux1),HL
     677.  00:8591  44                  	LD		B,H
     678.  00:8592  4D                  	LD		C,L
     679.  00:8593  E1                  	POP		HL
     680.  00:8594                      	
     681.  00:8594  79                  	LD		 A,C			;primero byte bajo	
     682.  00:8595  D3 99               	OUT		(REGEST),A
     683.  00:8597  78                  	LD		 A,B			;después byte alto 
     684.  00:8598  F6 40               	OR		1000000b		;+64
     685.  00:859A  D3 99               	OUT		(REGEST),A
     686.  00:859C                      	
     687.  00:859C                      	;si hay otra fila repite
     688.  00:859C  15                  	DEC		 D
     689.  00:859D  7A                  	LD		 A,D		;¿hay otra fila?
     690.  00:859E  B7                  	OR		 A
     691.  00:859F  C4 7F 85            	CALL	NZ,.pa_pinta_fila
     692.  00:85A2                      	
     693.  00:85A2  08                  	EX		AF, AF'
     694.  00:85A3                      fin_pinta_array:
     695.  00:85A3  C9                  	RET
     696.  00:85A4                      ;;variables asocidas a la función pinta_array
     697.  00:85A4                      ;; por de pronto la dejo aquí
     698.  00:85A4  00 00               wordaux1:		DW	0	;almacena la posición en el tilemap 0 al 675
     699.  00:85A6  00 00               wordaux2:		DW	0	;almacena puntero a array de tiles (posiciones en realidad) a pintar (posiciones repetidas en los 2 primeros bancos)
     700.  00:85A8  00                  byteaux1:		DB	0	;nº filas Registro D
     701.  00:85A9  00                  byteaux2:		DB	0	;nº columnas Registro E
     702.  00:85AA                      
     703.  00:85AA                      
     704.  00:85AA                      
     705.  00:85AA                      
     706.  00:85AA                      ;;=====================================================
     707.  00:85AA                      ;;INICIALIZA_ANTORCHAS
     708.  00:85AA                      ;;=====================================================	
     709.  00:85AA                      ; función: 	inicializa las variables de estructuras de las antorchas
     710.  00:85AA                      ; entrada: 	antorchas, array_antorcha
     711.  00:85AA                      ; salida: 	
     712.  00:85AA                      ; toca:		HL, IX
     713.  00:85AA                      inicializa_antorchas:
     714.  00:85AA  DD 21 90 AA         	LD		IX, antorchas
     715.  00:85AE  DD 36 00 00         	LD		(IX), INACTIVA
     716.  00:85B2  21 97 AA            	LD		HL, array_antorcha
     717.  00:85B5  DD 74 01            	LD		(IX + 1), H
     718.  00:85B8  DD 75 02            	LD		(IX + 2), L
     719.  00:85BB  DD 36 03 88         	LD		(IX + 3), POSANTOR1
     720.  00:85BF  DD 36 04 97         	LD		(IX + 4), POSANTOR2
     721.  00:85C3  DD 36 05 00         	LD		(IX + 5), 0
     722.  00:85C7  DD 36 06 FF         	LD		(IX + 6), RESETLLAMA
     723.  00:85CB                      fin_inicializa_antorchas:
     724.  00:85CB  C9                  	RET
     725.  00:85CC                      
     726.  00:85CC                      
     727.  00:85CC                      ;;=====================================================
     728.  00:85CC                      ;;INICIALIZA_esqueletos
     729.  00:85CC                      ;;=====================================================	
     730.  00:85CC                      ; función: 	inicializa las variables de estructuras de los esqueletos
     731.  00:85CC                      ; entrada: 	esqueletos, array_esqueletos
     732.  00:85CC                      ; salida: 	
     733.  00:85CC                      ; toca:		HL, IX
     734.  00:85CC                      inicializa_esqueletos:
     735.  00:85CC  DD 21 9A AA         	LD		IX, esqueletos
     736.  00:85D0  DD 36 00 00         	LD		(IX), INACTIVA
     737.  00:85D4  21 A1 AA            	LD		HL, array_esqueleto
     738.  00:85D7  DD 74 01            	LD		(IX + 1), H
     739.  00:85DA  DD 75 02            	LD		(IX + 2), L
     740.  00:85DD  DD 36 03 88         	LD		(IX + 3), POSESQUEL1
     741.  00:85E1  DD 36 04 95         	LD		(IX + 4), POSESQUEL2
     742.  00:85E5  DD 36 05 00         	LD		(IX + 5), 0
     743.  00:85E9  DD 36 06 19         	LD		(IX + 6), RESETESQUEL
     744.  00:85ED                      fin_inicializa_esqueletos:
     745.  00:85ED  C9                  	RET
     746.  00:85EE                      	
     747.  00:85EE                      
     748.  00:85EE                      ;;=====================================================
     749.  00:85EE                      ;;PINTA_ANTORCHAS
     750.  00:85EE                      ;;=====================================================	
     751.  00:85EE                      ; función: 	pinta las antorchas con valores base
     752.  00:85EE                      ; entrada: 	antorchas, array_antorcha
     753.  00:85EE                      ; salida: 	
     754.  00:85EE                      ; toca:		HL
     755.  00:85EE                      pinta_extra_fondo:
     756.  00:85EE  DD 21 90 AA         	LD		IX, antorchas
     757.  00:85F2                      .examina_sihay_antorchas
     758.  00:85F2                      	;hay que pintarlas?
     759.  00:85F2  3A 3D A7            	LD		 A, (habitacion_extras)
     760.  00:85F5  CB 47               	BIT		 0, A
     761.  00:85F7  C2 01 86            	JP		NZ, .hayantorchas			;si el bit 0 de extras es 0 no se pintan antorchas
     762.  00:85FA  DD 36 00 00         	LD		(IX), INACTIVA
     763.  00:85FE  C3 2A 86            	JP		.examina_sihay_esqueletos
     764.  00:8601                      	
     765.  00:8601                      .hayantorchas:
     766.  00:8601  DD 36 00 01         	LD		(IX), ACTIVA
     767.  00:8605                      	;pinta antorcha izquierdda
     768.  00:8605  DD 66 01            	LD		 H, (IX + 1)
     769.  00:8608  DD 6E 02            	LD		 L, (IX + 2)
     770.  00:860B  22 A6 85            	LD		(wordaux2), HL				;guarda pos array en wordaux2
     771.  00:860E                      	
     772.  00:860E  21 88 18            	LD		HL, TILMAP + POSANTOR1		;calcula posición en tilemap
     773.  00:8611  22 A4 85            	LD		(wordaux1), HL				;guarda valor pos tilemap en wordaux1
     774.  00:8614                      
     775.  00:8614  3E 03               	LD		 A, 3						;nº de filas	
     776.  00:8616  32 A8 85            	LD		(byteaux1), A
     777.  00:8619  3E 01               	LD		 A, 1						;nº de columnas
     778.  00:861B  32 A9 85            	LD		(byteaux2), A				
     779.  00:861E                      	
     780.  00:861E  CD 64 85            	CALL	pinta_array
     781.  00:8621                      	
     782.  00:8621                      	;pinta antorcha derecha
     783.  00:8621  21 97 18            	LD		HL, TILMAP + POSANTOR2		;calcula posición en tilemap
     784.  00:8624  22 A4 85            	LD		(wordaux1), HL				;guarda valor pos tilemap en wordaux1
     785.  00:8627                      	
     786.  00:8627  C3 64 85            	JP		pinta_array 				;no ecesita CALL ya que la subrutina termina aquí
     787.  00:862A                      	
     788.  00:862A                      .examina_sihay_esqueletos
     789.  00:862A  DD 21 9A AA         	LD		IX, esqueletos
     790.  00:862E                      	;hay que pintarlos?
     791.  00:862E  3A 3C A7            	LD		 A, (habitacion_actual)
     792.  00:8631  CB 6F               	BIT		 5, A
     793.  00:8633  C2 3B 86            	JP		NZ, .hayesqueletos			;si el bit 0 de extras es 0 no se pintan antorchas
     794.  00:8636  DD 36 00 00         	LD		(IX), INACTIVA
     795.  00:863A  C9                  	RET									;no hay que pintarlo. no hay que continuar
     796.  00:863B                      
     797.  00:863B                      .hayesqueletos
     798.  00:863B  DD 36 00 01         	LD		(IX), ACTIVA
     799.  00:863F                      	;pinta antorcha izquierdda
     800.  00:863F  DD 66 01            	LD		 H, (IX + 1)
     801.  00:8642  DD 6E 02            	LD		 L, (IX + 2)
     802.  00:8645  22 A6 85            	LD		(wordaux2), HL				;guarda pos array en wordaux2
     803.  00:8648                      	
     804.  00:8648  21 88 18            	LD		HL, TILMAP + POSESQUEL1		;calcula posición en tilemap
     805.  00:864B  22 A4 85            	LD		(wordaux1), HL				;guarda valor pos tilemap en wordaux1
     806.  00:864E                      
     807.  00:864E  3E 04               	LD		 A, 4						;nº de filas	
     808.  00:8650  32 A8 85            	LD		(byteaux1), A
     809.  00:8653  3E 03               	LD		 A, 3						;nº de columnas
     810.  00:8655  32 A9 85            	LD		(byteaux2), A				
     811.  00:8658                      	
     812.  00:8658  CD 64 85            	CALL	pinta_array
     813.  00:865B                      	
     814.  00:865B                      	;pinta antorcha derecha
     815.  00:865B  21 95 18            	LD		HL, TILMAP + POSESQUEL2		;calcula posición en tilemap
     816.  00:865E  22 A4 85            	LD		(wordaux1), HL				;guarda valor pos tilemap en wordaux1
     817.  00:8661                      	
     818.  00:8661  C3 64 85            	JP		pinta_array 				;no ecesita CALL ya que la subrutina termina aquí
     819.  00:8664                      fin_pinta_extra_fondo:
     820.  00:8664  C9                  	RET
     821.  00:8665                      
     822.  00:8665                      
     823.  00:8665                      
     824.  00:8665                      ;;=====================================================
     825.  00:8665                      ;;ACTUALIZA_ELEMENTOS_FONDO
     826.  00:8665                      ;;=====================================================	
     827.  00:8665                      ; función: 	de los elementos que pueda haber en el fondo de la pared (pantalla) actualiza si procede
     828.  00:8665                      ;			actualmente: antorchas y a futuro esqueletos
     829.  00:8665                      ; entrada: 	
     830.  00:8665                      ; salida: 	
     831.  00:8665                      ; toca:		A
     832.  00:8665                      actualiza_elementos_fondo:
     833.  00:8665                      .examina_antorchas:
     834.  00:8665  DD 21 90 AA         	LD		IX, antorchas
     835.  00:8669  DD 7E 00            	LD		 A, (IX)
     836.  00:866C  B7                  	OR		 A
     837.  00:866D  CA 73 86            	JP 	 	 Z, .examina_esqueletos
     838.  00:8670                      	
     839.  00:8670  CD 7F 86            	CALL	flip_llamas_antorchas
     840.  00:8673                      .examina_esqueletos:
     841.  00:8673  DD 21 9A AA         	LD		IX, esqueletos
     842.  00:8677  DD 7E 00            	LD		 A, (IX)
     843.  00:867A  B7                  	OR		 A
     844.  00:867B  C8                  	RET	 	 Z
     845.  00:867C                      	
     846.  00:867C  C3 DC 86            	JP		flip_calavera_esqueletos
     847.  00:867F                      fin_actualiza_elementos_fondo:
     848.  00:867F                      
     849.  00:867F                      
     850.  00:867F                      
     851.  00:867F                      
     852.  00:867F                      ;;=====================================================
     853.  00:867F                      ;;FLIP_LLAMAS_ANTORCHAS
     854.  00:867F                      ;;=====================================================	
     855.  00:867F                      ; función: 	modifica las llamas de las antorchas con los tipos que hay
     856.  00:867F                      ; entrada: 	
     857.  00:867F                      ; salida: 	
     858.  00:867F                      ; toca:		
     859.  00:867F                      flip_llamas_antorchas:
     860.  00:867F  DD 21 90 AA         	LD		IX, antorchas
     861.  00:8683                      	;tiene que cambiar de llama?
     862.  00:8683  DD 7E 06            	LD		 A, (IX + 6)
     863.  00:8686  3D                  	DEC		 A
     864.  00:8687  DD 77 06            	LD		 (IX + 6), A
     865.  00:868A                      	;no
     866.  00:868A  C0                  	RET		NZ
     867.  00:868B                      	;si
     868.  00:868B  C5                  	PUSH	BC
     869.  00:868C  D5                  	PUSH	DE
     870.  00:868D                      	
     871.  00:868D  DD 36 06 FF         	LD		(IX + 6), RESETLLAMA	
     872.  00:8691                      	
     873.  00:8691                      	;qué llama toca?
     874.  00:8691  DD 7E 05            	LD		 A, (IX + 5)
     875.  00:8694  B7                  	OR		 A
     876.  00:8695  CA B9 86            	JP		 Z, .llama_par
     877.  00:8698                      .llama_impar
     878.  00:8698                      	;cambio a llama par
     879.  00:8698  AF                   	XOR		 A
     880.  00:8699  DD 77 05            	LD		(IX + 5), A
     881.  00:869C                      	;pinto llamas
     882.  00:869C  01 00 18            	LD		BC, TILMAP
     883.  00:869F  3E 88               	LD		 A, POSANTOR1
     884.  00:86A1  CD 51 82            	CALL	suma_A_BC
     885.  00:86A4  16 C4               	LD		 D, MAPLLAMA1
     886.  00:86A6  CD 0D 84            	CALL	pinta_tile_suelto
     887.  00:86A9                      	
     888.  00:86A9  01 00 18            	LD		BC, TILMAP
     889.  00:86AC  3E 97               	LD		 A, POSANTOR2
     890.  00:86AE  CD 51 82            	CALL	suma_A_BC
     891.  00:86B1  16 C5               	LD		 D, MAPLLAMA2
     892.  00:86B3  CD 0D 84            	CALL	pinta_tile_suelto	
     893.  00:86B6  C3 D8 86            	JP		fin_flip_llamas_antorchas
     894.  00:86B9                      	
     895.  00:86B9                      .llama_par
     896.  00:86B9                      	;cambio a llama par
     897.  00:86B9  3E 01                	LD		 A, 1
     898.  00:86BB  DD 77 05            	LD		(IX + 5), A
     899.  00:86BE                      	;pinto llamas
     900.  00:86BE  01 00 18            	LD		BC, TILMAP
     901.  00:86C1  3E 88               	LD		 A, POSANTOR1
     902.  00:86C3  CD 51 82            	CALL	suma_A_BC
     903.  00:86C6  16 C5               	LD		 D, MAPLLAMA2
     904.  00:86C8  CD 0D 84            	CALL	pinta_tile_suelto
     905.  00:86CB                      	
     906.  00:86CB  01 00 18            	LD		BC, TILMAP
     907.  00:86CE  3E 97               	LD		 A, POSANTOR2
     908.  00:86D0  CD 51 82            	CALL	suma_A_BC
     909.  00:86D3  16 C4               	LD		 D, MAPLLAMA1
     910.  00:86D5  CD 0D 84            	CALL	pinta_tile_suelto
     911.  00:86D8                      
     912.  00:86D8                      fin_flip_llamas_antorchas:
     913.  00:86D8                      	;restauro los balores de los registros tocados antes
     914.  00:86D8  D1                  	POP		DE
     915.  00:86D9  C1                  	POP		BC
     916.  00:86DA  F1                  	POP		AF
     917.  00:86DB                      
     918.  00:86DB  C9                  	RET
     919.  00:86DC                      
     920.  00:86DC                      
     921.  00:86DC                      ;;=====================================================
     922.  00:86DC                      ;;FLIP_CALAVERA_ESQUELETOS
     923.  00:86DC                      ;;=====================================================	
     924.  00:86DC                      ; función: 	modifica las calaveras de los esqueletos
     925.  00:86DC                      ; entrada: 	
     926.  00:86DC                      ; salida: 	
     927.  00:86DC                      ; toca:		TODOS.... muy importante DE
     928.  00:86DC                      flip_calavera_esqueletos:
     929.  00:86DC  DD 21 9A AA         	LD		IX, esqueletos
     930.  00:86E0                      	
     931.  00:86E0                      	;tiene que cambiar de calavera?
     932.  00:86E0  DD 7E 06            	LD		 A, (IX + ESTRUCTURA_ESQUELETO.cont_sig_escena)
     933.  00:86E3  3D                  	DEC		 A
     934.  00:86E4  DD 77 06            	LD		 (IX + ESTRUCTURA_ESQUELETO.cont_sig_escena), A
     935.  00:86E7                      	;no
     936.  00:86E7  C0                  	RET		NZ
     937.  00:86E8                      	;si
     938.  00:86E8  DD 36 06 19         	LD		(IX + ESTRUCTURA_ESQUELETO.cont_sig_escena), RESETESQUEL		;resetea contador de nueve escena
     939.  00:86EC                      	
     940.  00:86EC  CD 0A 87            	CALL	actualiza_escena_calavera
     941.  00:86EF                      
     942.  00:86EF                      	;pinto calaveras
     943.  00:86EF  01 00 18            	LD		BC, TILMAP
     944.  00:86F2  3E A9               	LD		 A, POSCALAVE1
     945.  00:86F4  CD 51 82            	CALL	suma_A_BC
     946.  00:86F7  D5                  	PUSH	DE
     947.  00:86F8  56                  	LD		 D, (HL)
     948.  00:86F9  CD 0D 84            	CALL	pinta_tile_suelto
     949.  00:86FC                      	
     950.  00:86FC  01 00 18            	LD		BC, TILMAP
     951.  00:86FF  3E B6               	LD		 A, POSCALAVE2
     952.  00:8701  CD 51 82            	CALL	suma_A_BC
     953.  00:8704  E1                  	POP		HL
     954.  00:8705  56                  	LD		 D, (HL)
     955.  00:8706  C3 0D 84            	JP		pinta_tile_suelto	
     956.  00:8709                      fin_flip_calavera_esqueletos:
     957.  00:8709  00                  var_aux_calavera	DB	0;
     958.  00:870A                      
     959.  00:870A                      
     960.  00:870A                      ;;=====================================================
     961.  00:870A                      ;;ACTUALIZA_ESCENA_CALAVERA
     962.  00:870A                      ;;=====================================================	
     963.  00:870A                      ; función: 	modifica las siguiente calavera a mostrar
     964.  00:870A                      ; entrada: 	
     965.  00:870A                      ; salida: 	DE (iportante porque se usa fuera) y ESTRUCTURA_ESQUELETO.escena
     966.  00:870A                      ; toca:		TODOS.... muy importante DE
     967.  00:870A                      actualiza_escena_calavera:
     968.  00:870A                      	;consulta_escena
     969.  00:870A  DD 7E 05            	LD		 A, (IX + ESTRUCTURA_ESQUELETO.escena)
     970.  00:870D  32 09 87            	LD		(var_aux_calavera), A
     971.  00:8710  B7                  	OR		 A
     972.  00:8711  C2 16 87            	JP		 NZ, .decrementa_escenas
     973.  00:8714  3E 04               	LD		 A, RESETESCENAESQUEL
     974.  00:8716                      .decrementa_escenas
     975.  00:8716  3D                  	DEC		 A
     976.  00:8717                      .fin_consulta_escena
     977.  00:8717  DD 77 05            	LD		 (IX + ESTRUCTURA_ESQUELETO.escena), A
     978.  00:871A                      	
     979.  00:871A  21 AD AA            	LD		HL, lista_escenas_calavera
     980.  00:871D  3A 09 87            	LD		 A, (var_aux_calavera)
     981.  00:8720  CD 57 82            	CALL	suma_A_HL
     982.  00:8723                      	
     983.  00:8723  54                  	LD		 D, H
     984.  00:8724  5D                  	LD		 E, L
     985.  00:8725                      fin_actualiza_escena_calavera:
     986.  00:8725  C9                  	RET
     987.  00:8726                      
     163   00:8726                      	
     164   00:8726                      	include "subr_puertas.asm"
       1.  00:8726                      ;;=====================================================
       2.  00:8726                      ;;SUBRUTINAS RELACIONADAS CON LAS PUERTAS
       3.  00:8726                      ;;=====================================================
       4.  00:8726                      
       5.  00:8726                      
       6.  00:8726                      ;;=====================================================
       7.  00:8726                      ;;VARIABLES
       8.  00:8726                      ;;=====================================================
       9.  00:8726                      
      10.  00:8726                      ;; arrays con mapa de tiles de las puertas
      11.  00:8726                      array_puerta_arriba:
      12.  00:8726  03 01 01 03         	DB	3,1,1,3
      13.  00:872A  01 01 01 01         	DB	1,1,1,1
      14.  00:872E  01 01 01 01         	DB	1,1,1,1
      15.  00:8732  01 01 01 01         	DB	1,1,1,1
      16.  00:8736  01 01 01 01         	DB	1,1,1,1
      17.  00:873A                      
      18.  00:873A                      array_puerta_derecha:
      19.  00:873A  01 03 03            	DB	1,3,3
      20.  00:873D  01 01 03            	DB	1,1,3
      21.  00:8740  01 01 01            	DB	1,1,1
      22.  00:8743  01 01 01            	DB	1,1,1
      23.  00:8746  01 01 01            	DB	1,1,1
      24.  00:8749  02 01 01            	DB	2,1,1
      25.  00:874C  04 02 01            	DB	4,2,1
      26.  00:874F                      	
      27.  00:874F                      array_puerta_abajo:			
      28.  00:874F  01 01 01 01         	DB	1,1,1,1
      29.  00:8753                      
      30.  00:8753                      array_puerta_izquierda:
      31.  00:8753  03 03 01            	DB	3,3,1
      32.  00:8756  03 01 01            	DB	3,1,1
      33.  00:8759  01 01 01            	DB	1,1,1
      34.  00:875C  01 01 01            	DB	1,1,1
      35.  00:875F  01 01 01            	DB	1,1,1
      36.  00:8762  01 01 02            	DB	1,1,2
      37.  00:8765  01 02 04            	DB	1,2,4
      38.  00:8768                      
      39.  00:8768                      array_escalera:
      40.  00:8768                      	DB	5,5,5,5,5,5,5,5
      40.  00:8768  05 05 05 05 05 05 05 05 
      41.  00:8770                      	DB	5,0,0,0,1,1,1,5
      41.  00:8770  05 00 00 00 01 01 01 05 
      42.  00:8778                      	DB	5,0,0,0,1,1,1,5
      42.  00:8778  05 00 00 00 01 01 01 05 
      43.  00:8780                      	DB	5,0,0,6,6,6,6,5
      43.  00:8780  05 00 00 06 06 06 06 05 
      44.  00:8788                      	DB	5,0,6,6,6,6,6,5
      44.  00:8788  05 00 06 06 06 06 06 05 
      45.  00:8790                      	DB	5,6,6,6,6,6,6,5
      45.  00:8790  05 06 06 06 06 06 06 05 
      46.  00:8798                      
      47.  00:8798                      
      48.  00:8798                      
      49.  00:8798                      lista_puertas:
      50.  00:8798  00 (13)             puerta_arriba:		DS		ESTRUCTURA_PUERTA
      51.  00:87A5  00 (13)             puerta_derecha:		DS		ESTRUCTURA_PUERTA
      52.  00:87B2  00 (13)             puerta_abajo:		DS		ESTRUCTURA_PUERTA
      53.  00:87BF  00 (13)             puerta_izquierda:	DS		ESTRUCTURA_PUERTA
      54.  00:87CC  00 (13)             puerta_escalera:	DS		ESTRUCTURA_PUERTA
      55.  00:87D9                      
      56.  00:87D9                      datos_puertas:
      57.  00:87D9                      datos_puerta_escalera:
      58.  00:87D9  00                  					DB		#00;0		; 0 no activa <>0 activo
      59.  00:87DA  80                  					DB		#80;128		;punto x de la puerta para cuando se dispare encima
      60.  00:87DB  30                  					DB		#30;48		;punto y de la puerta para cuando se dispare encima
      61.  00:87DC  20                  					DB		#20;32		;radio x de la puerta para cuando se dispare encima
      62.  00:87DD  18                  					DB		#18;24		;radio y de la puerta para cuando se dispare encima
      63.  00:87DE  54 88               					DW		accion_puerta_arriba;función para acción de cada tipo de puerta
      64.  00:87E0  68 87               					DW		array_escalera		;puntero al array con los tiles de las puertas
      65.  00:87E2  6C 18               					DW		TILMAP + POSESCALERA
      66.  00:87E4  06                  					DB		6			;alto/filas
      67.  00:87E5  08                  					DB		8			;ancho/columnas
      68.  00:87E6                      
      69.  00:87E6                      datos_puerta_arriba:
      70.  00:87E6  00                  					DB		#00;0		;0 no activa <>0 activo
      71.  00:87E7  80                  					DB		#80;128		;punto x de la puerta para cuando se dispare encima
      72.  00:87E8  34                  					DB		#34;52		;punto y de la puerta para cuando se dispare encima
      73.  00:87E9  10                  					DB		#10;16		;radio x de la puerta para cuando se dispare encima
      74.  00:87EA  14                  					DB		#14;20		;radio y de la puerta para cuando se dispare encima
      75.  00:87EB  54 88               					DW		accion_puerta_arriba	;función para acción de cada tipo de puerta
      76.  00:87ED  26 87               					DW		array_puerta_arriba		;puntero al array con los tiles de las puertas
      77.  00:87EF  8E 18               					DW		TILMAP + POSPUERARRI
      78.  00:87F1  05                  					DB		5			;alto/filas
      79.  00:87F2  04                  					DB		4			;ancho/columnas
      80.  00:87F3                      
      81.  00:87F3                      datos_puerta_derecha:
      82.  00:87F3  00                  					DB		#00;0		;0 no activa <>0 activo
      83.  00:87F4  EC                  					DB		#EC;236		;punto x de la puerta para cuando se dispare encima
      84.  00:87F5  54                  					DB		#54;84		;punto y de la puerta para cuando se dispare encima
      85.  00:87F6  0C                  					DB		#0C;12		;radio x de la puerta para cuando se dispare encima
      86.  00:87F7  14                  					DB		#14;20		;radio y de la puerta para cuando se dispare encima
      87.  00:87F8  77 88               					DW		accion_puerta_derecha	;función para acción de cada tipo de puerta
      88.  00:87FA  3A 87               					DW		array_puerta_derecha	;puntero al array con los tiles de las puertas
      89.  00:87FC  FC 18               					DW		TILMAP + POSPUERDERE
      90.  00:87FE  07                  					DB		7			;alto/filas
      91.  00:87FF  03                  					DB		3			;ancho/columnas
      92.  00:8800                      					
      93.  00:8800                      datos_puerta_abajo:
      94.  00:8800  00                  					DB		#00;0		;0 no activa <>0 activo
      95.  00:8801  80                  					DB		#80;128		;punto x de la puerta para cuando se dispare encima
      96.  00:8802  7C                  					DB		#7C;124		;punto y de la puerta para cuando se dispare encima
      97.  00:8803  05                  					DB		#05;5		;radio x de la puerta para cuando se dispare encima  **********************************
      98.  00:8804  10                  					DB		#10;16		;radio y de la puerta para cuando se dispare encima
      99.  00:8805  84 88               					DW		accion_puerta_abajo		;función para acción de cada tipo de puerta
     100.  00:8807  4F 87               					DW		array_puerta_abajo		;puntero al array con los tiles de las puertas
     101.  00:8809  EE 19               					DW		TILMAP + POSPUERABAJ
     102.  00:880B  01                  					DB		1			;alto/filas
     103.  00:880C  04                  					DB		4			;ancho/columnas
     104.  00:880D                      
     105.  00:880D                      datos_puerta_izquierda:
     106.  00:880D  00                  					DB		#00;0		;0 no activa <>0 activo
     107.  00:880E  18                  					DB		#18;24		;punto x de la puerta para cuando se dispare encima
     108.  00:880F  54                  					DB		#54;84		;punto y de la puerta para cuando se dispare encima
     109.  00:8810  0C                  					DB		#0C;12		;radio x de la puerta para cuando se dispare encima
     110.  00:8811  14                  					DB		#14;20		;radio y de la puerta para cuando se dispare encima
     111.  00:8812  A7 88               					DW		accion_puerta_izquierda	;función para acción de cada tipo de puerta
     112.  00:8814  53 87               					DW		array_puerta_izquierda	;puntero al array con los tiles de las puertas
     113.  00:8816  E1 18               					DW		TILMAP + POSPUERIZQU
     114.  00:8818  07                  					DB		7			;alto/filas
     115.  00:8819  03                  					DB		3			;ancho/columnas
     116.  00:881A                      
     117.  00:881A                      
     118.  00:881A                      
     119.  00:881A                      ;;=====================================================
     120.  00:881A                      ;;SUBRUTINAS
     121.  00:881A                      ;;=====================================================
     122.  00:881A                      
     123.  00:881A                      
     124.  00:881A                      ;;=====================================================
     125.  00:881A                      ;;INICIALIZA_PUERTAS
     126.  00:881A                      ;;=====================================================	
     127.  00:881A                      ; función: 	inicializa las variables de estructuras de ayuda del array lista_puertas
     128.  00:881A                      ; entrada: 	*********************datos_delasdistintasayudas, variable estructura_ayuda_ayudaquesea
     129.  00:881A                      ; salida: 	lista_ayudas
     130.  00:881A                      ; toca:		-
     131.  00:881A                      inicializa_puertas:
     132.  00:881A  E5                  	PUSH	HL
     133.  00:881B  C5                  	PUSH	BC
     134.  00:881C  D5                  	PUSH	DE
     135.  00:881D                      	
     136.  00:881D                      	;inicializa puerta escalera
     137.  00:881D  21 D9 87            	LD		HL, datos_puerta_escalera	;origen
     138.  00:8820  11 CC 87            	LD		DE, puerta_escalera			;destino
     139.  00:8823  CD 4E 88            	CALL	carga_datos_puerta
     140.  00:8826                      
     141.  00:8826                      	;inicializa puerta arriba
     142.  00:8826  21 E6 87            	LD		HL, datos_puerta_arriba		;origen
     143.  00:8829  11 98 87            	LD		DE, puerta_arriba			;destino
     144.  00:882C  CD 4E 88            	CALL	carga_datos_puerta
     145.  00:882F                      	
     146.  00:882F                      	;inicializa puerta derecha
     147.  00:882F  21 F3 87            	LD		HL, datos_puerta_derecha	;origen
     148.  00:8832  11 A5 87            	LD		DE, puerta_derecha			;destino
     149.  00:8835  CD 4E 88            	CALL	carga_datos_puerta
     150.  00:8838                      	
     151.  00:8838                      	;inicializa puerta abajo
     152.  00:8838  21 00 88            	LD		HL, datos_puerta_abajo		;origen
     153.  00:883B  11 B2 87            	LD		DE, puerta_abajo			;destino
     154.  00:883E  CD 4E 88            	CALL	carga_datos_puerta
     155.  00:8841                      	
     156.  00:8841                      	;inicializa puerta izquierda
     157.  00:8841  21 0D 88            	LD		HL, datos_puerta_izquierda	;origen
     158.  00:8844  11 BF 87            	LD		DE, puerta_izquierda		;destino
     159.  00:8847  CD 4E 88            	CALL	carga_datos_puerta
     160.  00:884A                      	
     161.  00:884A  D1                  	POP		DE
     162.  00:884B  C1                  	POP		BC
     163.  00:884C  E1                  	POP		HL
     164.  00:884D                      fin_inicializa_puertas:
     165.  00:884D  C9                  	RET
     166.  00:884E                      
     167.  00:884E                      
     168.  00:884E                      
     169.  00:884E                      ;;=====================================================
     170.  00:884E                      ;;CARGA_DATOS_PUERTA
     171.  00:884E                      ;;=====================================================	
     172.  00:884E                      ; función: 	carga los datos de la puerta de una variable con los datos de la puerta
     173.  00:884E                      ; entrada
     174.  00:884E                      ;  hl: origen de datos
     175.  00:884E                      ;  de: destino de datos
     176.  00:884E                      ; salida: 	-
     177.  00:884E                      ; toca:		HL, DE, BC
     178.  00:884E                      carga_datos_puerta:
     179.  00:884E  01 0D 00            	LD		BC, ESTRUCTURA_PUERTA ;bytes a mover (el nombre de la estructura equivale al tamaño de la estructura en bytes)
     180.  00:8851  ED B0               	LDIR
     181.  00:8853                      fin_carga_datos_puerta:
     182.  00:8853  C9                  	RET
     183.  00:8854                      
     184.  00:8854                      ;;=====================================================
     185.  00:8854                      ;;ACCION_PUERTA_ARRIBA
     186.  00:8854                      ;;=====================================================	
     187.  00:8854                      ; función: 	
     188.  00:8854                      ; entrada: 	
     189.  00:8854                      ; salida: 	
     190.  00:8854                      accion_puerta_arriba:
     191.  00:8854  CD 42 82            	CALL	pinta_blanco_mapa
     192.  00:8857                      	
     193.  00:8857  3A 6E AA            	LD		 A, (prota_pos_mapy)
     194.  00:885A  3C                  	INC		 A
     195.  00:885B                      	
     196.  00:885B  FE 07               	CP		 7
     197.  00:885D  C2 71 88            	JP		NZ, .no_cambia_nivel
     198.  00:8860                      .si_cambia_nivel:	
     199.  00:8860                      	;aquí hay que poner texto de cambio de nivel  ;***************************************************************
     200.  00:8860                      
     201.  00:8860                      	;reseteo fila
     202.  00:8860  AF                  	XOR		 A
     203.  00:8861  32 6E AA            	LD		(prota_pos_mapy), A
     204.  00:8864                      	;incremento nivel
     205.  00:8864  3A 6A AA            	LD		 A, (prota_nivel)
     206.  00:8867  3C                  	INC		 A
     207.  00:8868  32 6A AA            	LD		(prota_nivel), A
     208.  00:886B                      	;reflejo en pantalla cambio de nivel
     209.  00:886B  CD 4A 82            	CALL	cambio_nivel
     210.  00:886E  C3 74 88            	JP		.fin_cambia_nivel
     211.  00:8871                      .no_cambia_nivel:
     212.  00:8871  32 6E AA            	LD		 (prota_pos_mapy), A
     213.  00:8874                      .fin_cambia_nivel:
     214.  00:8874  C3 2B 82            	JP		entra_habitacion
     215.  00:8877                      fin_accion_puerta_arriba:
     216.  00:8877                      
     217.  00:8877                      
     218.  00:8877                      ;;=====================================================
     219.  00:8877                      ;;ACCION_PUERTA_DERECHA
     220.  00:8877                      ;;=====================================================	
     221.  00:8877                      ; función: 	
     222.  00:8877                      ; entrada: 	
     223.  00:8877                      ; salida: 	
     224.  00:8877                      accion_puerta_derecha:
     225.  00:8877  CD 42 82            	CALL	pinta_blanco_mapa
     226.  00:887A                      	
     227.  00:887A  3A 6D AA            	LD		 A, (prota_pos_mapx)
     228.  00:887D  3C                  	INC		 A
     229.  00:887E  32 6D AA            	LD		 (prota_pos_mapx), A
     230.  00:8881                      
     231.  00:8881  C3 2B 82            	JP		entra_habitacion
     232.  00:8884                      fin_accion_puerta_derecha:
     233.  00:8884                      	
     234.  00:8884                      
     235.  00:8884                      ;;=====================================================
     236.  00:8884                      ;;ACCION_PUERTA_ABAJO
     237.  00:8884                      ;;=====================================================	
     238.  00:8884                      ; función: 	
     239.  00:8884                      ; entrada: 	
     240.  00:8884                      ; salida: 	
     241.  00:8884                      accion_puerta_abajo:
     242.  00:8884  CD 42 82            	CALL	pinta_blanco_mapa
     243.  00:8887                      	
     244.  00:8887  3A 6E AA            	LD		 A, (prota_pos_mapy)
     245.  00:888A  3D                  	DEC		 A
     246.  00:888B                      	;~ OR		 A
     247.  00:888B                      	;~ JP		NC, .no_cambia_nivel				;no entiendo por qué no funciona... preguntar fernando
     248.  00:888B  FE FF               	CP		-1
     249.  00:888D  20 12               	JR		NZ, .no_cambia_nivel
     250.  00:888F                      .si_cambia_nivel:	
     251.  00:888F                      	;aquí hay que poner texto de cambio de nivel  ;***************************************************************
     252.  00:888F                      
     253.  00:888F                      	;reseteo fila
     254.  00:888F  3E 06               	LD		 A, 6
     255.  00:8891  32 6E AA            	LD		(prota_pos_mapy), A
     256.  00:8894                      	;decremento nivel
     257.  00:8894  3A 6A AA            	LD		 A, (prota_nivel)
     258.  00:8897  3D                  	DEC		 A
     259.  00:8898  32 6A AA            	LD		(prota_nivel), A
     260.  00:889B                      	;reflejo en pantalla cambio de nivel
     261.  00:889B  CD 4A 82            	CALL	cambio_nivel
     262.  00:889E  C3 A4 88            	JP		.fin_cambia_nivel
     263.  00:88A1                      .no_cambia_nivel:
     264.  00:88A1  32 6E AA            	LD		 (prota_pos_mapy), A
     265.  00:88A4                      .fin_cambia_nivel:
     266.  00:88A4  C3 2B 82            	JP		entra_habitacion
     267.  00:88A7                      fin_accion_puerta_abajo:
     268.  00:88A7                      	
     269.  00:88A7                      	
     270.  00:88A7                      ;;=====================================================
     271.  00:88A7                      ;;ACCION_PUERTA_IZQUIERDA
     272.  00:88A7                      ;;=====================================================	
     273.  00:88A7                      ; función: 	
     274.  00:88A7                      ; entrada: 	
     275.  00:88A7                      ; salida: 	
     276.  00:88A7                      accion_puerta_izquierda:
     277.  00:88A7  CD 42 82            	CALL	pinta_blanco_mapa
     278.  00:88AA                      
     279.  00:88AA  3A 6D AA            	LD		 A, (prota_pos_mapx)
     280.  00:88AD  3D                  	DEC		 A
     281.  00:88AE  32 6D AA            	LD		 (prota_pos_mapx), A
     282.  00:88B1                      
     283.  00:88B1  C3 2B 82            	JP		entra_habitacion
     284.  00:88B4                      fin_accion_puerta_izquierda:
     285.  00:88B4                      	
     286.  00:88B4                      
     287.  00:88B4                      ;;=====================================================
     288.  00:88B4                      ;;PINTA_PUERTAS
     289.  00:88B4                      ;;=====================================================	
     290.  00:88B4                      ; función: 	examina A y mira si tiene que pintar puertas de los lados, arriba o abrajo o las escaleras (o no)
     291.  00:88B4                      ; entrada: 	habitacion_actual 1 escalera 1 puerta arriba 1 pu der 1 pu aba 1 pu izq (si es 0 pinta pared)
     292.  00:88B4                      ; salida: 	-
     293.  00:88B4                      ; toca:		todo
     294.  00:88B4                      pinta_puertas:
     295.  00:88B4  CD A9 81            	CALL	localiza_info_habitacion	;busca qué puertas debe pintar y lo mete en habitación_actual
     296.  00:88B7                      
     297.  00:88B7  CD ED 89            	CALL	desactiva_todas_puertas
     298.  00:88BA                      
     299.  00:88BA                      	;examina puerta arrba
     300.  00:88BA  3A 3C A7            	LD		 A, (habitacion_actual)
     301.  00:88BD  CB 5F               	BIT		 3, A					
     302.  00:88BF  CA CD 88            	JP		 Z, .fin_puerta_arriba		;tiene puerta arriba?
     303.  00:88C2  CD 11 89            		CALL	pinta_puerta_arr		;pinto puerta ;si es de la fila 7 los datos de la pueta de arriba serán los de una escalera
     304.  00:88C5  DD 21 98 87         		LD		IX, puerta_arriba		
     305.  00:88C9  DD 36 00 01         		LD		(IX), 1					;activo puerta
     306.  00:88CD                      .fin_puerta_arriba:
     307.  00:88CD                      
     308.  00:88CD                      	;examina puerta derecha
     309.  00:88CD  3A 3C A7            	LD		 A, (habitacion_actual)
     310.  00:88D0  CB 57               	BIT		 2, A
     311.  00:88D2  CA E0 88            	JP		 Z, .fin_puerta_derecha		;tiene puerta derecha?
     312.  00:88D5  CD 2A 89            		CALL	pinta_puerta_der		;pinto puerta
     313.  00:88D8  DD 21 A5 87         		LD		IX, puerta_derecha
     314.  00:88DC  DD 36 00 01         		LD		(IX), 1					;activo puerta
     315.  00:88E0                      .fin_puerta_derecha:
     316.  00:88E0                      
     317.  00:88E0                      	;examina puerta abajo
     318.  00:88E0  3A 3C A7            	LD		 A, (habitacion_actual)
     319.  00:88E3  CB 4F               	BIT		 1, A
     320.  00:88E5  CA F3 88            	JP		 Z, .fin_puerta_abajo		;tiene puerta derecha?
     321.  00:88E8  CD 07 89            		CALL	pinta_puerta_aba		;pinto puerta
     322.  00:88EB  DD 21 B2 87         		LD		IX, puerta_abajo	
     323.  00:88EF  DD 36 00 01         		LD		(IX), 1					;activo puerta
     324.  00:88F3                      .fin_puerta_abajo:
     325.  00:88F3                      
     326.  00:88F3                      	;examina puerta izquierda
     327.  00:88F3  3A 3C A7            	LD		 A, (habitacion_actual)
     328.  00:88F6  CB 47               	BIT		 0, A
     329.  00:88F8  CA 06 89            	JP		 Z, fin_pinta_puertas		;tiene puerta derecha?
     330.  00:88FB  CD 34 89            		CALL	pinta_puerta_izq		;pinto puerta
     331.  00:88FE  DD 21 BF 87         		LD		IX, puerta_izquierda	
     332.  00:8902  DD 36 00 01         		LD		(IX), 1					;activo puerta
     333.  00:8906                      fin_pinta_puertas:
     334.  00:8906  C9                  	RET
     335.  00:8907                      
     336.  00:8907                      
     337.  00:8907                      ;;=====================================================
     338.  00:8907                      ;;PINTA_PUERTA_ABA
     339.  00:8907                      ;;=====================================================	
     340.  00:8907                      ; función: 	pinta la puerta de abajo
     341.  00:8907                      ; entrada: 	puerta_abajo
     342.  00:8907                      ; salida: 	-
     343.  00:8907                      ; toca:		A, HL,BC, DE
     344.  00:8907                      pinta_puerta_aba:
     345.  00:8907  DD 21 B2 87         	LD		IX, puerta_abajo
     346.  00:890B  CD 3E 89            	CALL	actualiza_variables_pinta_array
     347.  00:890E                      		
     348.  00:890E  C3 64 85            	JP		pinta_array
     349.  00:8911                      fin_pinta_puerta_aba:
     350.  00:8911                      
     351.  00:8911                      
     352.  00:8911                      ;;=====================================================
     353.  00:8911                      ;;PINTA_PUERTA_ARR
     354.  00:8911                      ;;=====================================================	
     355.  00:8911                      ; función: 	pinta la puerta de arriba
     356.  00:8911                      ; entrada: 	puerta_arriba
     357.  00:8911                      ; salida: 	-
     358.  00:8911                      ; toca:		IX
     359.  00:8911                      pinta_puerta_arr:
     360.  00:8911  3A 6E AA            	LD		 A, (prota_pos_mapy)
     361.  00:8914  FE 06               	CP		 6								;en la fila 6 la única puerta arriba será una escalera
     362.  00:8916  C2 20 89            	JP		NZ, .pinta_puerta_normal
     363.  00:8919                      .pinta_puerta_escalera
     364.  00:8919  DD 21 CC 87         		LD		IX, puerta_escalera
     365.  00:891D  C3 24 89            		JP		.fin_si
     366.  00:8920                      .pinta_puerta_normal
     367.  00:8920  DD 21 98 87         		LD		IX, puerta_arriba	
     368.  00:8924                      .fin_si
     369.  00:8924  CD 3E 89            	CALL	actualiza_variables_pinta_array
     370.  00:8927  C3 64 85            	JP		pinta_array
     371.  00:892A                      fin_pinta_puerta_arr:
     372.  00:892A                      
     373.  00:892A                      
     374.  00:892A                      ;;=====================================================
     375.  00:892A                      ;;PINTA_PUERTA_DER
     376.  00:892A                      ;;=====================================================	
     377.  00:892A                      ; función: 	pinta la puerta de la derecha
     378.  00:892A                      ; entrada: 	puerta_derecha
     379.  00:892A                      ; salida: 	-
     380.  00:892A                      ; toca:		HL,BC, DE
     381.  00:892A                      pinta_puerta_der:
     382.  00:892A  DD 21 A5 87         	LD		IX, puerta_derecha
     383.  00:892E  CD 3E 89            	CALL	actualiza_variables_pinta_array
     384.  00:8931                      	
     385.  00:8931  C3 64 85            	JP		pinta_array
     386.  00:8934                      fin_pinta_puerta_der:
     387.  00:8934                      
     388.  00:8934                      	
     389.  00:8934                      ;;=====================================================
     390.  00:8934                      ;;PINTA_PUERTA_IZQ
     391.  00:8934                      ;;=====================================================	
     392.  00:8934                      ; función: 	pinta la puerta de la izquierda
     393.  00:8934                      ; entrada: 	puerta_izquierda
     394.  00:8934                      ; salida: 	-
     395.  00:8934                      ; toca:		HL,BC, DE
     396.  00:8934                      pinta_puerta_izq:
     397.  00:8934  DD 21 BF 87         	LD		IX, puerta_izquierda
     398.  00:8938  CD 3E 89            	CALL	actualiza_variables_pinta_array
     399.  00:893B                      	
     400.  00:893B  C3 64 85            	JP		pinta_array
     401.  00:893E                      fin_pinta_puerta_izq:
     402.  00:893E                      
     403.  00:893E                      
     404.  00:893E                      ;;=====================================================
     405.  00:893E                      ;;FIN_ACTUALIZA_VARIABLES_PINTA_ARRAY
     406.  00:893E                      ;;=====================================================	
     407.  00:893E                      ; función: 	como el código es el mismo en esta subrutia se actualizan los valores de wordaux2, wordaux1, byteaux1, byteaux2
     408.  00:893E                      ; entrada: 	IX apuntando a la estructura de una puerta
     409.  00:893E                      ; salida: 	-
     410.  00:893E                      ; toca:		A,HL,BC, DE
     411.  00:893E                      actualiza_variables_pinta_array:
     412.  00:893E  DD 6E 07            	LD		 L, (IX + ESTRUCTURA_PUERTA.tiles_puerta)	;guardo puntero al array a pintar (como pasar por referencia)
     413.  00:8941  DD 66 08            	LD		 H, (IX + ESTRUCTURA_PUERTA.tiles_puerta + 1)
     414.  00:8944  22 A6 85            	LD		(wordaux2), HL						;en la variable wordaux2
     415.  00:8947                      	
     416.  00:8947  DD 6E 09            	LD		 L, (IX + ESTRUCTURA_PUERTA.pos_en_tilemap)	;guardo puntero al array a pintar (como pasar por referencia)
     417.  00:894A  DD 66 0A            	LD		 H, (IX + ESTRUCTURA_PUERTA.pos_en_tilemap + 1)
     418.  00:894D  22 A4 85            	LD		(wordaux1), HL						;guarda valor pos tilemap en wordaux1
     419.  00:8950                      	
     420.  00:8950  DD 7E 0B            	LD		 A, (IX + ESTRUCTURA_PUERTA.alto)	;nº de filas
     421.  00:8953  32 A8 85            	LD		(byteaux1), A
     422.  00:8956                      	
     423.  00:8956  DD 7E 0C            	LD		 A, (IX + ESTRUCTURA_PUERTA.ancho)	;nº de columnas
     424.  00:8959  32 A9 85            	LD		(byteaux2), A
     425.  00:895C                      fin_actualiza_variables_pinta_array:
     426.  00:895C  C9                  	RET
     427.  00:895D                      
     428.  00:895D                      
     429.  00:895D                      
     430.  00:895D                      ;;=====================================================
     431.  00:895D                      ;;CHECK_COLISIONES_PUERTAS
     432.  00:895D                      ;;=====================================================	
     433.  00:895D                      ; función: 	examina si se ha disparado sobre ua puerta activa, si es así, ejecuta la acción correspondiente
     434.  00:895D                      ; entrada: 	puerta_arriba, puerta_derecha, puerta_abajo, puerta_izquierda
     435.  00:895D                      ; salida: 	-
     436.  00:895D                      ; toca:		todo
     437.  00:895D                      check_colisiones_puertas:
     438.  00:895D                      .examina_puerta_arriba:
     439.  00:895D  DD 21 98 87         	LD		IX, puerta_arriba
     440.  00:8961  DD 7E 00            	LD		 A, (IX)
     441.  00:8964  B7                  	OR		 A							;está activa esta puerta?
     442.  00:8965  CA 73 89            	JP		 Z, .examina_puerta_derecha
     443.  00:8968                      	
     444.  00:8968  CD BC 89            	CALL	check_colision_puerta		;aquí ya es cosa de ver colisiones prota/puerta_izquierda
     445.  00:896B                      	;recibe valor A
     446.  00:896B  F6 00               	OR		 0							;hubo colisión?
     447.  00:896D  CA 73 89            	JP		 Z, .examina_puerta_derecha	;no hubo colisión por lo que examina puerta siguiente
     448.  00:8970                      	;hubo colisión
     449.  00:8970                      	;EJECUTA ACCIÓN Y SALE DE LA RUTINA	
     450.  00:8970  C3 B0 89            	JP		.ejecuta_accion_y_sale
     451.  00:8973                      	
     452.  00:8973                      .examina_puerta_derecha:
     453.  00:8973  DD 21 A5 87         	LD		IX, puerta_derecha
     454.  00:8977  DD 7E 00            	LD		 A, (IX)
     455.  00:897A  B7                  	OR		 A							;está activa esta puerta?
     456.  00:897B  CA 89 89            	JP		 Z, .examina_puerta_abajo
     457.  00:897E  CD BC 89            	CALL	check_colision_puerta		;aquí ya es cosa de ver colisiones prota/puerta_derecha
     458.  00:8981                      	;recibe valor
     459.  00:8981  F6 00               	OR		 0							;hubo colisión?
     460.  00:8983  CA 89 89            	JP		 Z, .examina_puerta_abajo	;no hubo colisión por lo que examina puerta siguiente
     461.  00:8986                      	;hubo colisión
     462.  00:8986                      	;EJECUTA ACCIÓN Y SALE DE LA RUTINA
     463.  00:8986  C3 B0 89            	JP		.ejecuta_accion_y_sale
     464.  00:8989                      	
     465.  00:8989                      .examina_puerta_abajo:
     466.  00:8989  DD 21 B2 87         	LD		IX, puerta_abajo
     467.  00:898D  DD 7E 00            	LD		 A, (IX)
     468.  00:8990  B7                  	OR		 A							;está activa esta puerta?
     469.  00:8991  CA 9F 89            	JP		 Z, .examina_puerta_izquierda
     470.  00:8994  CD BC 89            	CALL	check_colision_puerta		;aquí ya es cosa de ver colisiones prota/puerta_izquierda
     471.  00:8997                      	
     472.  00:8997  F6 00               	OR		 0							;hubo colisión?
     473.  00:8999  CA 9F 89            	JP		 Z, .examina_puerta_izquierda;no hubo colisión por lo que examina puerta siguiente
     474.  00:899C                      	;hubo colisión
     475.  00:899C                      	;EJECUTA ACCIÓN Y SALE DE LA RUTINA
     476.  00:899C  C3 B0 89            	JP		.ejecuta_accion_y_sale
     477.  00:899F                      	
     478.  00:899F                      .examina_puerta_izquierda:
     479.  00:899F  DD 21 BF 87         	LD		IX, puerta_izquierda
     480.  00:89A3  DD 7E 00            	LD		 A, (IX)
     481.  00:89A6  B7                  	OR		 A							;está activa esta puerta?
     482.  00:89A7  CA BB 89            	JP		 Z, fin_check_colisiones_puertas
     483.  00:89AA  CD BC 89            	CALL	check_colision_puerta		;aquí ya es cosa de ver colisiones prota/puerta_izquierda
     484.  00:89AD                      	
     485.  00:89AD  F6 00               	OR		 0							;hubo colisión?
     486.  00:89AF  C8                  	RET		 Z							;es la última puerta a mirar, si no hubo colisión salimos
     487.  00:89B0                      	;hubo colisión
     488.  00:89B0                      	;EJECUTA ACCIÓN Y SALE DE LA RUTINA
     489.  00:89B0                      	;JP		.ejecuta_accion_y_sale ;no necesaria
     490.  00:89B0                      
     491.  00:89B0                      .ejecuta_accion_y_sale
     492.  00:89B0  21 BB 89            	LD		HL, fin_check_colisiones_puertas ;se guarda dónde volver
     493.  00:89B3  E5                  	PUSH	HL
     494.  00:89B4                      	
     495.  00:89B4  DD 6E 05            	LD		 L, (IX + ESTRUCTURA_PUERTA.accion)
     496.  00:89B7  DD 66 06            	LD		 H, (IX + ESTRUCTURA_PUERTA.accion + 1)
     497.  00:89BA  E9                  	JP		(HL)
     498.  00:89BB                      fin_check_colisiones_puertas:
     499.  00:89BB  C9                  	RET
     500.  00:89BC                      
     501.  00:89BC                      
     502.  00:89BC                      ;;=====================================================
     503.  00:89BC                      ;;CHECK_COLISION_PUERTA
     504.  00:89BC                      ;;=====================================================	
     505.  00:89BC                      ; función: 	revisa (con enemigos+ayudas o puertas según si la habitación ha sido recorrida o no) las variables para ver si se disparó sobre ellas
     506.  00:89BC                      ; entrada: 	IX con el puntero a la puerta que se examina
     507.  00:89BC                      ; salida: 	A (0 no hay colisión con puerta / 1 sí la hay)
     508.  00:89BC                      ; toca:		HL,BC, DE
     509.  00:89BC                      check_colision_puerta:
     510.  00:89BC                      .deteccioncolision_paso1:
     511.  00:89BC  FD 21 5A AA         	LD		IY, prota	;IY punto de mira / IX puerta
     512.  00:89C0  FD 7E 00            	LD		 A, (IY + ESTRUCTURA_PUNTOMIRA.posx)
     513.  00:89C3  C6 08               	ADD		 8			;8-es fijo, offset del punto de mira ya que se mueve según la esquina superior izquierda y el centro del punto de mira está en el centro del sprite
     514.  00:89C5                      	
     515.  00:89C5                      	;ya tengo en A la coordenada X del centro del punto de mira					
     516.  00:89C5  DD 96 01            	SUB		(IX + ESTRUCTURA_PUERTA.posx)	;le resto el punto x en la puerta
     517.  00:89C8                      	
     518.  00:89C8  D2 CD 89            	JP		NC, .deteccioncolision_paso2	;si no es negativo comparo con el radio
     519.  00:89CB                      
     520.  00:89CB  ED 44               	NEG										;si es negativo lo niego (valor absoluto)
     521.  00:89CD                      	
     522.  00:89CD                      .deteccioncolision_paso2:
     523.  00:89CD  DD BE 03            	CP		(IX + ESTRUCTURA_PUERTA.radiox)	;comparo con el radio X de la puerta
     524.  00:89D0                      	
     525.  00:89D0  DA D5 89            	JP		 C, .deteccioncolision_paso3	;SI NC la distancia es >= por lo que sale y no es necesario verificar nada más
     526.  00:89D3                      	
     527.  00:89D3  AF                  	XOR		 A								;el resultado es falso y se guarda en A y ya no hay que seguir coprobando
     528.  00:89D4  C9                  	RET
     529.  00:89D5                      	
     530.  00:89D5                      .deteccioncolision_paso3:					;la distancia X es válida, comprobamos la distancia Y
     531.  00:89D5  FD 7E 01            	LD		 A, (IY + ESTRUCTURA_PUNTOMIRA.posy)
     532.  00:89D8  C6 08               	ADD		 8								;le sumo el offset del punto de mira (8 es fijo)
     533.  00:89DA                      
     534.  00:89DA                      	;ya tengo en A la coordenada Y del centro del punto de mira					
     535.  00:89DA  DD 96 02            	SUB		(IX + ESTRUCTURA_PUERTA.posy)	;le resto el punto y en la puerta
     536.  00:89DD                      	
     537.  00:89DD  D2 E2 89            	JP		NC, .deteccioncolision_paso4	;si no es negativo comparo con el radio
     538.  00:89E0                      
     539.  00:89E0  ED 44               	NEG										;si es negativo lo niego (valor absoluto)
     540.  00:89E2                      
     541.  00:89E2                      .deteccioncolision_paso4:
     542.  00:89E2  DD BE 04            	CP		(IX + ESTRUCTURA_PUERTA.radioy)	;comparo con el radio Y de la puerta
     543.  00:89E5                      
     544.  00:89E5  DA EA 89            	JP		 C, .deteccioncolision_paso5	;SI NC la distancia es >= por lo que sale y no es necesario verificar nada más
     545.  00:89E8                      	
     546.  00:89E8  AF                  	XOR		 A								;el resultado es falso y se guarda en A un 0 y al ser la 2º comprobación salimos
     547.  00:89E9  C9                  	RET
     548.  00:89EA                      
     549.  00:89EA                      .deteccioncolision_paso5:
     550.  00:89EA  3E 01               	LD		 A, SI
     551.  00:89EC                      fin_check_colision_puerta:
     552.  00:89EC  C9                  	RET
     553.  00:89ED                      
     554.  00:89ED                      
     555.  00:89ED                      
     556.  00:89ED                      
     557.  00:89ED                      	
     558.  00:89ED                      ;;=====================================================
     559.  00:89ED                      ;;DESACTIVA_TODAS_PUERTAS
     560.  00:89ED                      ;;=====================================================	
     561.  00:89ED                      ; función: 	desactiva todas las puertas (es más rápido todas que mirar cuál estaba activa en la habitación aanterior) y ya se activarán las que se muestren
     562.  00:89ED                      ; entrada: 	puerta_arriba, puerta_derecha, puerta_abajo, puerta_izquierda
     563.  00:89ED                      ; salida: 	las estructuras de la puertas (entrada) con el valor activo a 0 (PUERTAINACT)
     564.  00:89ED                      ; toca:		IX
     565.  00:89ED                      desactiva_todas_puertas:
     566.  00:89ED  DD 21 98 87         	LD		IX, puerta_arriba		;desactivo_puerta arriba
     567.  00:89F1  DD 36 00 00         	LD		(IX), INACTIVA
     568.  00:89F5  DD 21 A5 87         	LD		IX, puerta_derecha		;desactivo_puerta derecha
     569.  00:89F9  DD 36 00 00         	LD		(IX), INACTIVA
     570.  00:89FD  DD 21 B2 87         	LD		IX, puerta_abajo		;desactivo_puerta abajo
     571.  00:8A01  DD 36 00 00         	LD		(IX), INACTIVA
     572.  00:8A05  DD 21 BF 87         	LD		IX, puerta_izquierda	;desactivo_puerta izquierda
     573.  00:8A09  DD 36 00 00         	LD		(IX), INACTIVA
     574.  00:8A0D                      fin_desactiva_todas_puertas:
     575.  00:8A0D  C9                  	RET
     576.  00:8A0E                      
     165   00:8A0E                      	
     166   00:8A0E                      	include "subr_sprites.asm"
       1.  00:8A0E                      
       2.  00:8A0E                      ;;=====================================================
       3.  00:8A0E                      ;;SUBRUTINAS ENCARGADAS DE MANEJAR LOS SPRITES
       4.  00:8A0E                      ;;=====================================================	
       5.  00:8A0E                      
       6.  00:8A0E                      
       7.  00:8A0E                      ;; PREGUNTAR SI A FERNANDO SI ES MEJOR USAR LISTAS O ALGO PARA AHORRAR CÓDIGO
       8.  00:8A0E                      
       9.  00:8A0E                      
      10.  00:8A0E                      
      11.  00:8A0E                      
      12.  00:8A0E                      ;;=====================================================
      13.  00:8A0E                      ;;CARGA_PATRONES_SPRITES_NIVEL
      14.  00:8A0E                      ;;=====================================================	
      15.  00:8A0E                      ; función: 	examina el nivel y carga los patrones específicos necesarios
      16.  00:8A0E                      ; entrada: 	-
      17.  00:8A0E                      ; salida: 	-
      18.  00:8A0E                      ; toca: 	-
      19.  00:8A0E                      carga_patrones_sprites_nivel:
      20.  00:8A0E  CD 12 8A            	CALL 	carga_patrones_nivel_comunes
      21.  00:8A11                      	
      22.  00:8A11  C9                  	RET		;*********************
      23.  00:8A12                      	
      24.  00:8A12                      	
      25.  00:8A12                      	;POR AHORA ES TODO COMÚN ... CUANDO EL JUGADOR SE MUEVA LOS PATRONES SERÁN DEPENDIENDO DEL NIVEL
      26.  00:8A12                      	; O NO Y LO QUE SE HACE ES PERSONALIZAR LA PANTALLA USANDO LOS MISMOS PATRONES PERO PINTANDO DISTINTOS
      27.  00:8A12                      	; EN DISTINTOS SITIOS SEGÚN NIVEL
      28.  00:8A12                      	
      29.  00:8A12                      	;~ ;carga patrones no comunes
      30.  00:8A12                      	;~ LD		 A, (prota_nivel)
      31.  00:8A12                      	;~ OR		 A
      32.  00:8A12                      	;~ JP		 Z, carga_patrones_sprites_nivel donde esté el prota
      33.  00:8A12                      fin_carga_patrones_sprites_nivel:
      34.  00:8A12                      
      35.  00:8A12                      
      36.  00:8A12                      ;;=====================================================
      37.  00:8A12                      ;;CARGA_PATRONES_SPRITES_NIVEL_COMUNES
      38.  00:8A12                      ;;=====================================================	
      39.  00:8A12                      ; función: 	carga los patrones comunes en todos los niveles
      40.  00:8A12                      ; entrada: 	-
      41.  00:8A12                      ; salida: 	-
      42.  00:8A12                      ; toca: 	-
      43.  00:8A12                      carga_patrones_nivel_comunes:	
      44.  00:8A12  21 BC 9D            	LD		HL, sprites_comunes
      45.  00:8A15  11 00 38            	LD		DE, SPRTBL
      46.  00:8A18  01 C0 00            	LD		BC, fin_sprites_comunes-sprites_comunes
      47.  00:8A1B  C3 5C 00            	JP		LDIRVM
      48.  00:8A1E                      fin_carga_patrones_nivel_comunes:
      49.  00:8A1E                      
      50.  00:8A1E                      
      51.  00:8A1E                      ;;=====================================================
      52.  00:8A1E                      ;;CARGA_PATRONES_SPRITES_NIVEL1
      53.  00:8A1E                      ;;=====================================================	
      54.  00:8A1E                      ; función: 	copia los patrones de los sprites que e van a usar en el nivel 1 en vram
      55.  00:8A1E                      ; entrada: 	-
      56.  00:8A1E                      ; salida: 	-
      57.  00:8A1E                      ; toca: 	-
      58.  00:8A1E                      carga_patrones_sprites_nivel1:
      59.  00:8A1E                      
      60.  00:8A1E                      	;~ ;sprite sprite_reliquia
      61.  00:8A1E                      	;~ LD		HL,sprite_reliquia
      62.  00:8A1E                      	;~ LD		DE,#3880
      63.  00:8A1E                      	;~ LD		BC,32				;32 bytes (sprites de 2 x 2)
      64.  00:8A1E                      	;~ CALL	LDIRVM
      65.  00:8A1E                      
      66.  00:8A1E                      fin_carga_patrones_sprites:
      67.  00:8A1E  C9                  	RET
      68.  00:8A1F                      
      69.  00:8A1F                      
      70.  00:8A1F                      ;;=====================================================
      71.  00:8A1F                      ;;ACTUALIZA_ARRAY_SPRITES_VRAM
      72.  00:8A1F                      ;;=====================================================	
      73.  00:8A1F                      ; función: 	copia el array con los valores de los sprites (pos, color, plano) en VRAM
      74.  00:8A1F                      ; entrada: 	-
      75.  00:8A1F                      ; salida: 	-
      76.  00:8A1F                      ; toca: 	todos los registros. Como me interesa la velocidad, si necesito copiar de algo lo hago fuera
      77.  00:8A1F                      render_sprites:
      78.  00:8A1F                      	;volcando el array con toda la info de los sprites a la zona de atributos de sprites
      79.  00:8A1F  21 B1 AA            	LD		HL,array_sprites
      80.  00:8A22  11 00 1B            	LD		DE,SPRART
      81.  00:8A25  01 80 00            	LD		BC,4 * 32				;32 sprites x 4 bytes controlando el sprite (Y, X, plano, color)
      82.  00:8A28  C3 5C 00            	JP		LDIRVM
      83.  00:8A2B                      fin_actualiza_array_sprites_vram:
      84.  00:8A2B                      
      85.  00:8A2B                      
      86.  00:8A2B                      ;;=====================================================
      87.  00:8A2B                      ;;VUELCA_RESULTADO_PUNTOMIRA_ARRAY
      88.  00:8A2B                      ;;=====================================================	
      89.  00:8A2B                      ; función: 	coloca los valores del punto de mira en la variable array_sprites para ser volcados en VRAM
      90.  00:8A2B                      ; entrada: 	array_sprites_pm, prota.XXXXX
      91.  00:8A2B                      ; salida: 	-
      92.  00:8A2B                      ; toca: 	-
      93.  00:8A2B                      vuelca_resultado_puntomira_array:
      94.  00:8A2B  DD 21 B1 AA         	LD		IX, array_sprites_pm
      95.  00:8A2F                      	;posición y de los dos sprites que conforman el punto de mira
      96.  00:8A2F  3A 5B AA            	LD		 A, (prota.posy)
      97.  00:8A32  DD 77 00            	LD		(IX  ), A
      98.  00:8A35  DD 77 04            	LD		(IX+4), A
      99.  00:8A38                      	;posición x de los dos sprites que conforman el punto de mira
     100.  00:8A38  3A 5A AA            	LD		 A, (prota.posx)
     101.  00:8A3B  DD 77 01            	LD		(IX+1), A
     102.  00:8A3E  DD 77 05            	LD		(IX+5), A
     103.  00:8A41                      	;plano
     104.  00:8A41  DD 36 02 00         	LD		(IX+2), 0
     105.  00:8A45  DD 36 06 04         	LD		(IX+6), 4	;al ser sprites de 16x16 hay que ir de 4 en 4
     106.  00:8A49                      	;color
     107.  00:8A49  3A 5C AA            	LD		 A, (prota.escena)
     108.  00:8A4C  B7                  	OR		 A
     109.  00:8A4D  C2 59 8A            	JP		NZ,.codigo_color_2
     110.  00:8A50                      .codigo_color_1:
     111.  00:8A50  DD 36 03 0F         	LD		(IX+3), COLBLANCO
     112.  00:8A54  DD 36 07 08         	LD		(IX+7), COLROJO
     113.  00:8A58  C9                  	RET
     114.  00:8A59                      .codigo_color_2:
     115.  00:8A59  DD 36 03 08         	LD		(IX+3), COLROJO
     116.  00:8A5D  DD 36 07 0F         	LD		(IX+7), COLBLANCO
     117.  00:8A61  C9                  	RET
     118.  00:8A62                      fin_vuelca_resultado_puntomira_array:
     119.  00:8A62                      
     120.  00:8A62                      
     121.  00:8A62                      ;;=====================================================
     122.  00:8A62                      ;;CHECK_PLAYER
     123.  00:8A62                      ;;=====================================================	
     124.  00:8A62                      ; función: 	MIRA EL CONTROL Y APLICA LA LOGICA DE MOVIMIENTO DEL PROTAGONISTA
     125.  00:8A62                      ; entrada: 	-
     126.  00:8A62                      ; salida: 	-
     127.  00:8A62                      ; toca: 	A
     128.  00:8A62                      check_player:
     129.  00:8A62  CD 04 8B            	CALL	update_controllers_status
     130.  00:8A65  B7                  	OR		 A
     131.  00:8A66  C8                  	RET		 Z						;si no se ha pulsado nada no se necesita mirar nada
     132.  00:8A67                      
     133.  00:8A67  CB 1F               	RR		 A
     134.  00:8A69  DC 82 8A            	CALL	 C, mueve_arriba
     135.  00:8A6C  CB 1F               	RR		 A
     136.  00:8A6E  DC 9E 8A            	CALL	 C, mueve_abajo
     137.  00:8A71  CB 1F               	RR		 A
     138.  00:8A73  DC AD 8A            	CALL	 C, mueve_izquierda
     139.  00:8A76  CB 1F               	RR		 A
     140.  00:8A78  DC 8F 8A            	CALL	 C, mueve_derecha
     141.  00:8A7B                      	
     142.  00:8A7B                      	;zona para mirar disparo Recibe A que tendrá 0000 0 0 X-letra M X-espacio 
     143.  00:8A7B  CD BA 8A            	CALL	mira_disparo
     144.  00:8A7E                      
     145.  00:8A7E  C3 2B 8A            	JP		vuelca_resultado_puntomira_array
     146.  00:8A81                      f;in_check_player:
     147.  00:8A81  C9                  	RET
     148.  00:8A82                      
     167   00:8A82                      	
     168   00:8A82                      	include "subr_teclado_joy.asm"
       1.  00:8A82                      ;;=====================================================
       2.  00:8A82                      ;;SUBRUTINAS QUE CAPTURAN EL JOYSTICK Y TECLADO Y MUEVEN PUNTO DE MIRA
       3.  00:8A82                      ;;=====================================================
       4.  00:8A82                      
       5.  00:8A82                      ;;=====================================================
       6.  00:8A82                      ;;MUEVE_ARRIBA
       7.  00:8A82                      ;;=====================================================	
       8.  00:8A82                      ; función: 	decrementa y si se no sale de los límites el valor del punto de mira a la derecha
       9.  00:8A82                      ; entrada: 	-
      10.  00:8A82                      ; salida: 	-
      11.  00:8A82                      ; toca: 	-
      12.  00:8A82                      mueve_arriba:
      13.  00:8A82  F5                  	PUSH		AF
      14.  00:8A83                      	
      15.  00:8A83  3A 5B AA            	LD		 	 A, (prota.posy)
      16.  00:8A86  3D                  	DEC			 A
      17.  00:8A87  CA 8D 8A            	JP			 Z,.no_decrementa_y
      18.  00:8A8A  32 5B AA            	LD			(prota.posy), A
      19.  00:8A8D                      	
      20.  00:8A8D                      .no_decrementa_y:
      21.  00:8A8D  F1                  	POP			AF
      22.  00:8A8E                      fin_mueve_arriba:
      23.  00:8A8E  C9                  	RET
      24.  00:8A8F                      
      25.  00:8A8F                      
      26.  00:8A8F                      ;;=====================================================
      27.  00:8A8F                      ;;MUEVE_DERECHA
      28.  00:8A8F                      ;;=====================================================	
      29.  00:8A8F                      ; función: 	incrementa si se no sale de los límites el valor del punto de mira a la derecha
      30.  00:8A8F                      ; entrada: 	-
      31.  00:8A8F                      ; salida: 	-
      32.  00:8A8F                      ; toca: 	-
      33.  00:8A8F                      mueve_derecha:
      34.  00:8A8F  F5                  	PUSH		AF
      35.  00:8A90                      	
      36.  00:8A90  3A 5A AA            	LD		 	 A, (prota.posx)
      37.  00:8A93  3C                  	INC			 A
      38.  00:8A94  FE EF               	CP			 A, LIMPANTDER - 16
      39.  00:8A96  CA 9C 8A            	JP			 Z, .no_incrementa_x
      40.  00:8A99  32 5A AA            	LD			(prota.posx), A
      41.  00:8A9C                      	
      42.  00:8A9C                      .no_incrementa_x:
      43.  00:8A9C  F1                  	POP			AF
      44.  00:8A9D                      fin_mueve_derecha:
      45.  00:8A9D  C9                  	RET
      46.  00:8A9E                      
      47.  00:8A9E                      
      48.  00:8A9E                      ;;=====================================================
      49.  00:8A9E                      ;;MUEVE_ABAJO
      50.  00:8A9E                      ;;=====================================================	
      51.  00:8A9E                      ; función: 	incrementa y si se no sale de los límites el valor del punto de mira abajo
      52.  00:8A9E                      ; entrada: 	-
      53.  00:8A9E                      ; salida: 	-
      54.  00:8A9E                      ; toca: 	-
      55.  00:8A9E                      mueve_abajo:
      56.  00:8A9E  F5                  	PUSH		AF
      57.  00:8A9F                      	
      58.  00:8A9F  3A 5B AA            	LD		 	 A, (prota.posy)
      59.  00:8AA2  3C                  	INC			 A
      60.  00:8AA3  FE 70               	CP			 A, LIMPANTABA - 16
      61.  00:8AA5  CA AB 8A            	JP			 Z,.no_incrementa_y
      62.  00:8AA8  32 5B AA            	LD			(prota.posy), A
      63.  00:8AAB                      	
      64.  00:8AAB                      .no_incrementa_y:
      65.  00:8AAB  F1                  	POP			AF
      66.  00:8AAC                      fin_mueve_abajo:
      67.  00:8AAC  C9                  	RET
      68.  00:8AAD                      	
      69.  00:8AAD                      	
      70.  00:8AAD                      ;;=====================================================
      71.  00:8AAD                      ;;MUEVE_IZQUIERDA
      72.  00:8AAD                      ;;=====================================================	
      73.  00:8AAD                      ; función: 	decrementa x si se no sale de los límites el valor del punto de mira a la izquierda
      74.  00:8AAD                      ; entrada: 	-
      75.  00:8AAD                      ; salida: 	-
      76.  00:8AAD                      ; toca: 	-
      77.  00:8AAD                      mueve_izquierda:
      78.  00:8AAD  F5                  	PUSH		AF
      79.  00:8AAE                      	
      80.  00:8AAE  3A 5A AA            	LD		 	 A, (prota.posx)
      81.  00:8AB1  3D                  	DEC			 A
      82.  00:8AB2                      ;	CP			 A, LIMPANTIZQ 			;no es necesario ya que es cero (Z)
      83.  00:8AB2  CA B8 8A            	JP			 Z,.no_decrementa_x
      84.  00:8AB5  32 5A AA            	LD			(prota.posx), A
      85.  00:8AB8                      	
      86.  00:8AB8                      .no_decrementa_x:
      87.  00:8AB8  F1                  	POP			AF
      88.  00:8AB9                      fin_mueve_izquierda:
      89.  00:8AB9  C9                  	RET
      90.  00:8ABA                      
      91.  00:8ABA                      
      92.  00:8ABA                      
      93.  00:8ABA                      ;;=====================================================
      94.  00:8ABA                      ;;MIRA_DISPARO
      95.  00:8ABA                      ;;=====================================================	
      96.  00:8ABA                      ; función: 	Mira si se ha pulsado alguno de los dos disparos
      97.  00:8ABA                      ; entrada: 	A que tendrá 0000 0 0 X-letra M X-espacio 
      98.  00:8ABA                      ; salida: 	-
      99.  00:8ABA                      ; toca: 	A, B
     100.  00:8ABA                      mira_disparo:
     101.  00:8ABA                      .mira_boton_pulsado1:
     102.  00:8ABA  CB 1F               	RR		 A						;preparo en el carry si se ha pulsado botón 1
     103.  00:8ABC  D2 E8 8A            	JP		 NC, .mira_boton_pulsado2					
     104.  00:8ABF  F5                  	PUSH	AF						;copia A para usarlo después
     105.  00:8AC0                      	;se ha pulsado barra o boton 1
     106.  00:8AC0  3A 5F AA            	LD		 A, (prota.cadencia)
     107.  00:8AC3  B7                  	OR		 A
     108.  00:8AC4  CA D2 8A            	JP		 Z, .efectua_disparo	;toca efectuar disparo realmente porque se ha pulsado lo suficiente el disparo
     109.  00:8AC7                      .no_efectua_disparo: ;IF
     110.  00:8AC7  3D                  		DEC		 A
     111.  00:8AC8  32 5F AA            		LD		(prota.cadencia), A	;resto cadencia hasta próximo disparo "real" (no automático por haber pulsado una tecla e ir demasiado rápido)
     112.  00:8ACB  AF                  		XOR		 A 
     113.  00:8ACC  32 5C AA            		LD		(prota.escena), A
     114.  00:8ACF  C3 E7 8A            		JP		.fin_mira_disparo1
     115.  00:8AD2                      .efectua_disparo:	;ELSE
     116.  00:8AD2                      		;cambio colores del sprite
     117.  00:8AD2  3A 5C AA            		LD		 A, (prota.escena)
     118.  00:8AD5  2F                  		CPL		 
     119.  00:8AD6  32 5C AA            		LD		(prota.escena), A
     120.  00:8AD9                      		;reseteo cadencia para el próximo disparo
     121.  00:8AD9  3E 04               		LD		 A, LIMCADENCIA				;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
     122.  00:8ADB  32 5F AA            		LD		 (prota.cadencia), A		;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
     123.  00:8ADE                      		
     124.  00:8ADE                      		;ejecuto sonido						;; ajustar cadencia y que cuando el disparo sea efectivo se reseteen los colores
     125.  00:8ADE  AF                  		XOR		 A
     126.  00:8ADF  0E 01               		LD		 C, 1
     127.  00:8AE1  CD AC 91            		CALL	ayFX_INIT
     128.  00:8AE4                      		
     129.  00:8AE4                      		;examino si el disparo le dió a algo activo
     130.  00:8AE4  CD 4B 80            		CALL	check_colisiones_objetos	;revisa las colisiones con puertas, ayudas y enemigos
     131.  00:8AE7                      		
     132.  00:8AE7                      .fin_mira_disparo1
     133.  00:8AE7  F1                  	POP		AF
     134.  00:8AE8                      
     135.  00:8AE8                      .mira_boton_pulsado2:
     136.  00:8AE8  CB 1F               	RR		 A
     137.  00:8AEA  D0                  	RET		 NC
     138.  00:8AEB                      	;se ha pulsado shift o boton 2
     139.  00:8AEB                      	
     140.  00:8AEB  3A 6C AA            	LD		 A, (prota_reliquias)	;miro si le quedan reliquias
     141.  00:8AEE  B7                  	OR		 A
     142.  00:8AEF  C8                  	RET		 Z						;si no le quedan salgo ya
     143.  00:8AF0                      	
     144.  00:8AF0                      	;actuaciones si se usa la reliquia botón 2 o M y quedn reliquias.. (antes ya se puso el valor en A)
     145.  00:8AF0  3A 6C AA            	LD		A, (prota_reliquias)
     146.  00:8AF3  3D                  	DEC		 A
     147.  00:8AF4  32 6C AA            	LD		(prota_reliquias), A
     148.  00:8AF7                      	
     149.  00:8AF7  3E 01               	LD		 A, 1
     150.  00:8AF9  0E 01               	LD		 C, 1
     151.  00:8AFB  CD AC 91            	CALL	ayFX_INIT
     152.  00:8AFE                      	
     153.  00:8AFE  CD 4A 85            	CALL 	efecto_imagen_tira_reliquia
     154.  00:8B01                      	
     155.  00:8B01  C3 F2 83            	JP		pinta_reliquias
     156.  00:8B04                      fin_mira_disparo:
     157.  00:8B04                      ;	RET		
     158.  00:8B04                      
     159.  00:8B04                      
     160.  00:8B04                      ;;============================================================
     161.  00:8B04                      ;;Código de D. Fernando García (BitVision) (al que siempre le estaré agradecido)
     162.  00:8B04                      ;check_8th_keyboard_row
     163.  00:8B04                      ;read_joy_0
     164.  00:8B04                      ;check_8th_keyboard_row
     165.  00:8B04                      ;check_4th_keyboard_row
     166.  00:8B04                      ;;============================================================
     167.  00:8B04                      ;;  usa constantes:
     168.  00:8B04                      ;PSG_A  equ  0a0h  ;reg address
     169.  00:8B04                      ;PSG_W  equ  0a1h  ;reg data WR
     170.  00:8B04                      ;PSG_R  equ  0a2h  ;reg data
     171.  00:8B04                      
     172.  00:8B04                      ;;=====================================================
     173.  00:8B04                      ;;update_controllers_status
     174.  00:8B04                      ;;=====================================================	
     175.  00:8B04                      ;depends on the next rountine
     176.  00:8B04                      ;  returns
     177.  00:8B04                      ;  a - 0P2TRLDU
     178.  00:8B04                      
     179.  00:8B04                      update_controllers_status:
     180.  00:8B04  CD 4F 8B                 call  check_8th_keyboard_row
     181.  00:8B07                      [4]  rrc    a
     181.  00:8B07  CB 0F CB 0F CB 0F CB 0F 
     182.  00:8B0F  47                       ld    b,a    		;save for later  xxxTRDUL
     183.  00:8B10                      
     184.  00:8B10  E6 01                    and    #01    		;save L
     185.  00:8B12  CB 27                    sla    a
     186.  00:8B14  CB 27                    sla    a    		;now 00000L00
     187.  00:8B16  4F                       ld    c,a    		;save for later
     188.  00:8B17                      
     189.  00:8B17  78                       ld    a,b    		;again we've got xxxTRDUL. I am interested on leaving 000000DU on a
     190.  00:8B18  CB 3F                    srl    a
     191.  00:8B1A  E6 03                    and    00000011b
     192.  00:8B1C                      						;we've got 000000DU on a
     193.  00:8B1C  B1                       or    c    		;now we've got 00000LDU
     194.  00:8B1D  4F                       ld    c,a    		;save for later
     195.  00:8B1E                      
     196.  00:8B1E  78                       ld    a,b
     197.  00:8B1F  E6 18                    and    00011000b 	;we've got 000TR000
     198.  00:8B21  B1                       or    c
     199.  00:8B22                           ;finally    000TRLDU
     200.  00:8B22                      
     201.  00:8B22                           ;and    00000100   ;preserve just
     202.  00:8B22  47                       ld    b,a    		;save for later
     203.  00:8B23  CD 5D 8B                 call  check_4th_keyboard_row      ;check M & P
     204.  00:8B26  F5                       push  af
     205.  00:8B27  E6 04                    and    00000100b	;filter just M
     206.  00:8B29  87                       add    a
     207.  00:8B2A  87                       add    a
     208.  00:8B2B  87                       add    a           ;shift 3th to 6th bit
     209.  00:8B2C  B0                       or    b           	;merge with previous
     210.  00:8B2D  47                       ld    b,a
     211.  00:8B2E                      
     212.  00:8B2E  CD 3B 8B                 call  read_joy_0
     213.  00:8B31  E6 3F                    and    00111111b  	;we want just 002TRLDU  from joystick    (2 is second trigger)
     214.  00:8B33  B0                       or    b      		;added 000TRLDU from keyboard
     215.  00:8B34  47                       ld    b,a      	;save for later
     216.  00:8B35  F1                       pop    af      	; let's check on P
     217.  00:8B36                      
     218.  00:8B36  E6 20                    and    00100000b
     219.  00:8B38  87                       add    a      		;P status on 6th bit  ... so 0P2TRLDU
     220.  00:8B39  B0                       or    b
     221.  00:8B3A                      
     222.  00:8B3A  C9                       ret
     223.  00:8B3B                      
     224.  00:8B3B                      
     225.  00:8B3B                      ;ret
     226.  00:8B3B                      ;  a -            xx2TRLDU
     227.  00:8B3B                      read_joy_0:
     228.  00:8B3B  F3                         di
     229.  00:8B3C  3E 0F                      ld    a,15
     230.  00:8B3E  D3 A0                      out    [PSG_A],a
     231.  00:8B40  DB A2                      in    a,[PSG_R]
     232.  00:8B42  E6 BF                      and    10111111b        ;joy0
     233.  00:8B44                      
     234.  00:8B44  D3 A1                      out    [PSG_W],a        ;set joy0
     235.  00:8B46                      
     236.  00:8B46  3E 0E                      ld    a,14
     237.  00:8B48  D3 A0                      out    [PSG_A],a
     238.  00:8B4A  DB A2                      in    a,[PSG_R]
     239.  00:8B4C                      
     240.  00:8B4C  FB                         ei
     241.  00:8B4D  2F                         cpl
     242.  00:8B4E                      
     243.  00:8B4E  C9                         ret
     244.  00:8B4F                      
     245.  00:8B4F                      
     246.  00:8B4F                      ;ret
     247.  00:8B4F                      ;  a -      RDULxxxT
     248.  00:8B4F                      check_8th_keyboard_row:
     249.  00:8B4F  F3                       di
     250.  00:8B50  DB AA                    in    a,(#aa)
     251.  00:8B52  E6 F0                    and    #f0
     252.  00:8B54  F6 08                    or    8
     253.  00:8B56  D3 AA                    out    (#aa),a
     254.  00:8B58  DB A9                    in    a,(#a9)
     255.  00:8B5A  FB                       ei
     256.  00:8B5B  2F                       cpl
     257.  00:8B5C                      
     258.  00:8B5C  C9                       ret
     259.  00:8B5D                      
     260.  00:8B5D                      
     261.  00:8B5D                      ;ret
     262.  00:8B5D                      ;  a -      xxxxxMxx
     263.  00:8B5D                      check_4th_keyboard_row:
     264.  00:8B5D  F3                       di
     265.  00:8B5E  DB AA                    in    a,(#aa)
     266.  00:8B60  E6 F0                    and    #f0
     267.  00:8B62  F6 04                    or    4
     268.  00:8B64  D3 AA                    out    (#aa),a
     269.  00:8B66  DB A9                    in    a,(#a9)
     270.  00:8B68  FB                       ei
     271.  00:8B69  2F                       cpl
     272.  00:8B6A                      
     273.  00:8B6A  C9                       ret
     274.  00:8B6B                      
     275.  00:8B6B                      ;--------------------------------------------
     276.  00:8B6B                      
     277.  00:8B6B                      
     278.  00:8B6B                      
     279.  00:8B6B                      
     280.  00:8B6B                      
     281.  00:8B6B                      
     282.  00:8B6B                      
     283.  00:8B6B                      
     169   00:8B6B                      	
     170   00:8B6B                      	include "subr_sonido.asm"
       1.  00:8B6B                      
       2.  00:8B6B                      ;;=====================================================
       3.  00:8B6B                      ;;SUBRUTINAS PARA SONIDOS
       4.  00:8B6B                      ;;=====================================================	
       5.  00:8B6B                      
       6.  00:8B6B                      ;;=====================================================
       7.  00:8B6B                      ;;INICIALIZA_REPLAYER_EFECTOS_INTERRUPCIONES
       8.  00:8B6B                      ;;=====================================================	
       9.  00:8B6B                      ; función: 	inicializa: replayer de música, player de efectos e interrupciones
      10.  00:8B6B                      ; entrada: 	-
      11.  00:8B6B                      ; salida: 	-
      12.  00:8B6B                      ; toca: 	HL, A
      13.  00:8B6B                      inicializa_replayer_efectos_interrupciones:
      14.  00:8B6B  F3                  	DI
      15.  00:8B6C                      
      16.  00:8B6C                      	;inicializacion de replayer musical
      17.  00:8B6C  21 14 92            	LD		HL, song-99			; hl <- initial address of module - 99
      18.  00:8B6F  CD AB 8B            	CALL	PT3_INIT			; Inits PT3 player
      19.  00:8B72                      		
      20.  00:8B72                      	;inicializacion del reproductor de efectos sonoros
      21.  00:8B72  21 DF 9B            	LD		HL, sfx_bank
      22.  00:8B75  CD 9A 91            	CALL	ayFX_SETUP
      23.  00:8B78                      	
      24.  00:8B78                      	;Engancha nuestra rutina de servicio al gancha que deja preparado la BIOS cuando se termina de pintar la pantalla (50 o 60 veces por segundo)
      25.  00:8B78  3E C3               	LD		A, #C3
      26.  00:8B7A  32 9F FD            	LD		[H.TIMI], A
      27.  00:8B7D  21 85 8B            	LD		HL, subrutina_isr
      28.  00:8B80  22 A0 FD            	LD		[H.TIMI+1], HL
      29.  00:8B83                      	
      30.  00:8B83  FB                  	EI		;optimizacion:
      31.  00:8B84                      			;piensa que las dos ultimas lineas podrian haber sido: 
      32.  00:8B84                      			;ei						;primero ei
      33.  00:8B84                      			;ld		[H.TIMI+1],hl	;luego este ld
      34.  00:8B84                      									;PENSAR (y consultar ) PORQUE!!!!
      35.  00:8B84                      fin_inicializa_replayer_efectos_interrupciones:
      36.  00:8B84  C9                  	RET
      37.  00:8B85                      
      38.  00:8B85                      
      39.  00:8B85                      
      40.  00:8B85                      ;;=====================================================
      41.  00:8B85                      ;;NUESTRA_ISR
      42.  00:8B85                      ;;=====================================================	
      43.  00:8B85                      ; función: 	envía datos al PSG + toca un trozo de música + toca trozo de 
      44.  00:8B85                      ; entrada: 	-
      45.  00:8B85                      ; salida: 	-
      46.  00:8B85                      ; toca: 	HL, A
      47.  00:8B85                      subrutina_isr:
      48.  00:8B85  CD F0 90            	CALL	PT3_ROUT			;envia los datos a los registros del PSG
      49.  00:8B88  CD F8 8F            	CALL	PT3_PLAY			;calcula el siguiente 'trocito' de musica que sera enviado al proxima vez
      50.  00:8B8B  C3 E2 91            	JP		ayFX_PLAY			;calcula el siguiente 'trocito' de efecto especial de sonido que sera enviado la proxima vez
      51.  00:8B8E                      fin_subrutina_isr:
      52.  00:8B8E                      	;RET
      53.  00:8B8E                      
      54.  00:8B8E                      
      55.  00:8B8E                      
      56.  00:8B8E                      ;;=====================================================
      57.  00:8B8E                      ;;DEFINICIÓN DE SUBRUTINAS DE FERNANDO PARA COMPRESIÓN Y SONIDO
      58.  00:8B8E                      ;;=====================================================
      59.  00:8B8E                      subrutinas_sonido:
      60.  00:8B8E                      	include	"PT3-ROM_sjasm.asm"
       1:  00:8B8E                      		; --- PT3 REPLAYER WORKING ON ROM ---
       2:  00:8B8E                      		; --- Can be assembled with asMSX ---
       3:  00:8B8E                      		; --- ROM version: MSX-KUN        ---
       4:  00:8B8E                      		; --- asMSX version 2: SapphiRe   ---
       5:  00:8B8E                      
       6:  00:8B8E                      ; Based on MSX full version of PT3 by Dioniso
       7:  00:8B8E                      ;
       8:  00:8B8E                      ; This version of the replayer can be used with any note table
       9:  00:8B8E                      ; This version also allows the use of PT3 commands
      10:  00:8B8E                      ; First 99 bytes of each PT3 module should be stripped off
      11:  00:8B8E                      ;
      12:  00:8B8E                      ; PLAY and PSG WRITE routines seperated to allow independent calls
      13:  00:8B8E                      ;
      14:  00:8B8E                      ; ROM LENGTH: 1549 bytes
      15:  00:8B8E                      ; RAM LENGTH:  576 bytes
      16:  00:8B8E                      
      17:  00:8B8E                      
      18:  00:8B8E                      
      19:  00:8B8E                      ;SJASM version by BTV 2016
      20:  00:8B8E                      
      21:  00:8B8E                      
      22:  00:8B8E                      		; --- CONSTANT VALUES DEFINITION ---
      23:  00:8B8E                      
      24:  00:8B8E                      ;ChannelsVars
      25:  00:8B8E                      ;struc	CHNPRM
      26:  00:8B8E                      ;reset group
      27:  00:8B8E  (00:0000)           CHNPRM_PsInOr	equ 0	;RESB 1
      28:  00:8B8E  (00:0001)           CHNPRM_PsInSm	equ 1	;RESB 1
      29:  00:8B8E  (00:0002)           CHNPRM_CrAmSl	equ 2	;RESB 1
      30:  00:8B8E  (00:0003)           CHNPRM_CrNsSl	equ 3	;RESB 1
      31:  00:8B8E  (00:0004)           CHNPRM_CrEnSl	equ 4	;RESB 1
      32:  00:8B8E  (00:0005)           CHNPRM_TSlCnt	equ 5	;RESB 1
      33:  00:8B8E  (00:0006)           CHNPRM_CrTnSl	equ 6	;RESW 1
      34:  00:8B8E  (00:0008)           CHNPRM_TnAcc	equ 8	;RESW 1
      35:  00:8B8E  (00:000A)           CHNPRM_COnOff	equ 10	;RESB 1
      36:  00:8B8E                      ;reset group
      37:  00:8B8E                      
      38:  00:8B8E  (00:000B)           CHNPRM_OnOffD	equ 11	;RESB 1
      39:  00:8B8E                      
      40:  00:8B8E                      ;IX for PTDECOD here [+12]
      41:  00:8B8E  (00:000C)           CHNPRM_OffOnD	equ 12	;RESB 1
      42:  00:8B8E  (00:000D)           CHNPRM_OrnPtr	equ 13	;RESW 1
      43:  00:8B8E  (00:000F)           CHNPRM_SamPtr	equ 15	;RESW 1
      44:  00:8B8E  (00:0011)           CHNPRM_NNtSkp	equ 17	;RESB 1
      45:  00:8B8E  (00:0012)           CHNPRM_Note	equ 18	;RESB 1
      46:  00:8B8E  (00:0013)           CHNPRM_SlToNt	equ 19	;RESB 1
      47:  00:8B8E  (00:0014)           CHNPRM_Env_En	equ 20	;RESB 1
      48:  00:8B8E  (00:0015)           CHNPRM_Flags	equ 21	;RESB 1
      49:  00:8B8E                       ;Enabled - 0,SimpleGliss - 2
      50:  00:8B8E  (00:0016)           CHNPRM_TnSlDl	equ 22	;RESB 1
      51:  00:8B8E  (00:0017)           CHNPRM_TSlStp	equ 23	;RESW 1
      52:  00:8B8E  (00:0019)           CHNPRM_TnDelt	equ 25	;RESW 1
      53:  00:8B8E  (00:001B)           CHNPRM_NtSkCn	equ 27	;RESB 1
      54:  00:8B8E  (00:001C)           CHNPRM_Volume	equ 28	;RESB 1
      55:  00:8B8E  (00:001D)           CHNPRM_Size	equ 29	;RESB 1
      56:  00:8B8E                      ;endstruc
      57:  00:8B8E                      
      58:  00:8B8E                      ;struc	AR
      59:  00:8B8E  (00:0000)           AR_TonA		equ 0	;RESW 1
      60:  00:8B8E  (00:0002)           AR_TonB		equ 2	;RESW 1
      61:  00:8B8E  (00:0004)           AR_TonC		equ 4	;RESW 1
      62:  00:8B8E  (00:0006)           AR_Noise	equ 6	;RESB 1
      63:  00:8B8E  (00:0007)           AR_Mixer	equ 7	;RESB 1
      64:  00:8B8E  (00:0008)           AR_AmplA	equ 8	;RESB 1
      65:  00:8B8E  (00:0009)           AR_AmplB	equ 9	;RESB 1
      66:  00:8B8E  (00:000A)           AR_AmplC	equ 10	;RESB 1
      67:  00:8B8E  (00:000B)           AR_Env		equ 11	;RESW 1
      68:  00:8B8E  (00:000D)           AR_EnvTp	equ 13	;RESB 1
      69:  00:8B8E                      ;endstruc
      70:  00:8B8E                      
      71:  00:8B8E                      		; --- CODE STARTS HERE ---
      72:  00:8B8E                      
      73:  00:8B8E  21 00 F0            CHECKLP:	LD	HL,PT3_SETUP
      74:  00:8B91  CB FE               		SET	7,[HL]
      75:  00:8B93  CB 46               		BIT	0,[HL]
      76:  00:8B95  C8                  		RET	Z
      77:  00:8B96  E1                  		POP	HL
      78:  00:8B97  21 7A F0            		LD	HL,DelyCnt
      79:  00:8B9A  34                  		INC	[HL]
      80:  00:8B9B  21 3E F0            		LD	HL,ChanA+CHNPRM_NtSkCn
      81:  00:8B9E  34                  		INC	[HL]
      82:  00:8B9F  AF                  PT3_MUTE:	XOR	A
      83:  00:8BA0  67                  		LD	H,A
      84:  00:8BA1  6F                  		LD	L,A
      85:  00:8BA2  32 48 F1            		LD	[AYREGS+AR_AmplA],A
      86:  00:8BA5  22 49 F1            		LD	[AYREGS+AR_AmplB],HL
      87:  00:8BA8  C3 F1 90            		JP	ROUT_A0
      88:  00:8BAB                      
      89:  00:8BAB                      PT3_INIT:	;HL - AddressOfModule - 100
      90:  00:8BAB  22 01 F0            		LD [PT3_MODADDR],HL
      91:  00:8BAE  E5                  		PUSH HL
      92:  00:8BAF  11 64 00            		LD DE,100
      93:  00:8BB2  19                  		ADD HL,DE
      94:  00:8BB3  7E                  		LD A,[HL]
      95:  00:8BB4  32 1C F0            		LD [PT3_Delay],A
      96:  00:8BB7  E5                  		PUSH HL
      97:  00:8BB8  DD E1               		POP IX
      98:  00:8BBA  19                  		ADD HL,DE
      99:  00:8BBB  22 03 F0            		LD [PT3_CrPsPtr],HL
     100:  00:8BBE  DD 5E 02            		LD E,[IX+102-100]
     101:  00:8BC1  19                  		ADD HL,DE
     102:  00:8BC2  23                  		INC HL
     103:  00:8BC3  22 18 F0            		LD [PT3_LPosPtr],HL
     104:  00:8BC6  D1                  		POP DE
     105:  00:8BC7  DD 6E 03            		LD L,[IX+103-100]
     106:  00:8BCA  DD 66 04            		LD H,[IX+104-100]
     107:  00:8BCD  19                  		ADD HL,DE
     108:  00:8BCE  22 1A F0            		LD [PT3_PatsPtr],HL
     109:  00:8BD1  21 A9 00            		LD HL,169
     110:  00:8BD4  19                  		ADD HL,DE
     111:  00:8BD5  22 07 F0            		LD [PT3_OrnPtrs],HL
     112:  00:8BD8  21 69 00            		LD HL,105
     113:  00:8BDB  19                  		ADD HL,DE
     114:  00:8BDC  22 05 F0            		LD [PT3_SAMPTRS],HL
     115:  00:8BDF  21 00 F0            		LD HL,PT3_SETUP
     116:  00:8BE2  CB BE               		RES 7,[HL]
     117:  00:8BE4                      
     118:  00:8BE4                      		; --- note table data depacker ---
     119:  00:8BE4                      		; Depacks first 12 tones of each tone table
     120:  00:8BE4                      
     121:  00:8BE4  11 65 91            		LD DE,T_PACK
     122:  00:8BE7  01 B1 F1            		LD BC,T1_+(2*49)-1
     123:  00:8BEA  1A                  .TP_0:		LD A,[DE]
     124:  00:8BEB  13                  		INC DE
     125:  00:8BEC  FE 1E               		CP 15*2
     126:  00:8BEE  30 06               		JR NC,.TP_1
     127:  00:8BF0  67                  		LD H,A
     128:  00:8BF1  1A                  		LD A,[DE]
     129:  00:8BF2  6F                  		LD L,A
     130:  00:8BF3  13                  		INC DE
     131:  00:8BF4  18 07               		JR .TP_2
     132:  00:8BF6  D5                  .TP_1:		PUSH DE
     133:  00:8BF7  16 00               		LD D,0
     134:  00:8BF9  5F                  		LD E,A
     135:  00:8BFA  19                  		ADD HL,DE
     136:  00:8BFB  19                  		ADD HL,DE
     137:  00:8BFC  D1                  		POP DE
     138:  00:8BFD  7C                  .TP_2:		LD A,H
     139:  00:8BFE  02                  		LD [BC],A
     140:  00:8BFF  0B                  		DEC BC
     141:  00:8C00  7D                  		LD A,L
     142:  00:8C01  02                  		LD [BC],A
     143:  00:8C02  0B                  		DEC BC
     144:  00:8C03  D6 F0               		SUB $F0
     145:  00:8C05  20 E3               		JR NZ,.TP_0
     146:  00:8C07                      
     147:  00:8C07                      		; --- INITIALIZE PT3 VARIABLES ---
     148:  00:8C07  21 23 F0            		LD HL,VARS
     149:  00:8C0A  77                  		LD [HL],A
     150:  00:8C0B  11 24 F0            		LD DE,VARS+1
     151:  00:8C0E  01 2C 01            		LD BC,VAR0END-VARS-1
     152:  00:8C11  ED B0               		LDIR
     153:  00:8C13                      
     154:  00:8C13  3C                  		INC A
     155:  00:8C14  32 7A F0            		LD [DelyCnt],A
     156:  00:8C17  21 01 F0            		LD HL,$F001 ;H - CHNPRM_Volume, L - CHNPRM_NtSkCn
     157:  00:8C1A  22 3E F0            		LD [ChanA+CHNPRM_NtSkCn],HL
     158:  00:8C1D  22 5B F0            		LD [ChanB+CHNPRM_NtSkCn],HL
     159:  00:8C20  22 78 F0            		LD [ChanC+CHNPRM_NtSkCn],HL
     160:  00:8C23                      
     161:  00:8C23  21 61 91            		LD HL,EMPTYSAMORN
     162:  00:8C26  22 12 F0            		LD [PT3_AdInPtA],HL ;ptr to zero
     163:  00:8C29  22 30 F0            		LD [ChanA+CHNPRM_OrnPtr],HL ;ornament 0 is "0,1,0"
     164:  00:8C2C  22 4D F0            		LD [ChanB+CHNPRM_OrnPtr],HL ;in all versions from
     165:  00:8C2F  22 6A F0            		LD [ChanC+CHNPRM_OrnPtr],HL ;3.xx to 3.6x and VTII
     166:  00:8C32                      
     167:  00:8C32  22 32 F0            		LD [ChanA+CHNPRM_SamPtr],HL ;S1 There is no default
     168:  00:8C35  22 4F F0            		LD [ChanB+CHNPRM_SamPtr],HL ;S2 sample in PT3, so, you
     169:  00:8C38  22 6C F0            		LD [ChanC+CHNPRM_SamPtr],HL ;S3 can comment S1,2,3; see
     170:  00:8C3B                      					    ;also EMPTYSAMORN comment
     171:  00:8C3B                      
     172:  00:8C3B                      		; --- NOTE TABLE CREATOR (c) Ivan Roshin, adapted by SapphiRe ---
     173:  00:8C3B  DD 7E FF            		LD A,[IX+99-100] ;TONE TABLE NUMBER
     174:  00:8C3E  17                  		RLA
     175:  00:8C3F  E6 07               		AND 7
     176:  00:8C41  21 11 91            		LD HL,NT_DATA
     177:  00:8C44  D5                  		PUSH DE
     178:  00:8C45  50                  		LD D,B		; ld d,0 (bc is 0000 after LDIR)
     179:  00:8C46  87                  		ADD A,A
     180:  00:8C47  5F                  		LD E,A
     181:  00:8C48  19                  		ADD HL,DE	; hl -> init of correct note table data
     182:  00:8C49  5E                  		LD E,[HL]
     183:  00:8C4A  23                  		INC HL
     184:  00:8C4B  CB 3B               		SRL E
     185:  00:8C4D  9F                  		SBC A,A
     186:  00:8C4E  E6 A7               		AND $A7			;$00 (NOP) or $A7 (AND A)
     187:  00:8C50  32 21 F0            		LD [PT3_NTL3],A		; CORRECT INSTRUCTION, DEPENDS OF SELECTED TABLE
     188:  00:8C53  3E C9               		LD A,$C9		; RET CODE
     189:  00:8C55  32 22 F0            		LD [PT3_NTL3+1],A	; RET PLACED
     190:  00:8C58  EB                  		EX DE,HL
     191:  00:8C59  C1                  		POP BC ;BC=T1_
     192:  00:8C5A  09                  		ADD HL,BC
     193:  00:8C5B                      
     194:  00:8C5B  1A                  		LD A,[DE]                           
     195:  00:8C5C                      
     196:  00:8C5C  01 21 91            		LD BC,T_
     197:  00:8C5F  81                  		ADD A,C
     198:  00:8C60  4F                  		LD C,A
     199:  00:8C61  88                  		ADC A,B
     200:  00:8C62                      
     201:  00:8C62  91                  		SUB C
     202:  00:8C63  47                  		LD B,A
     203:  00:8C64  C5                  		PUSH BC
     204:  00:8C65  11 80 F0            		LD DE,NT_
     205:  00:8C68  D5                  		PUSH DE
     206:  00:8C69                      
     207:  00:8C69  06 0C               		LD B,12
     208:  00:8C6B  C5                  .L1:		PUSH BC
     209:  00:8C6C  4E                  		LD C,[HL]
     210:  00:8C6D  23                  		INC HL
     211:  00:8C6E  E5                  		PUSH HL
     212:  00:8C6F  46                  		LD B,[HL]
     213:  00:8C70                      
     214:  00:8C70  D5                  		PUSH DE
     215:  00:8C71  EB                  		EX DE,HL
     216:  00:8C72  11 17 00            		LD DE,23
     217:  00:8C75  DD 26 08            		db $DD,$26,$08	;LD XH,8
     218:  00:8C78                      
     219:  00:8C78  CB 38               .L2:		SRL B
     220:  00:8C7A  CB 19               		RR C
     221:  00:8C7C  CD 21 F0            .L3:		CALL PT3_NTL3	;AND A or NOP
     222:  00:8C7F  79                  		LD A,C
     223:  00:8C80  8A                  		ADC A,D	;=ADC 0
     224:  00:8C81  77                  		LD [HL],A
     225:  00:8C82  23                  		INC HL
     226:  00:8C83  78                  		LD A,B
     227:  00:8C84  8A                  		ADC A,D
     228:  00:8C85  77                  		LD [HL],A
     229:  00:8C86  19                  		ADD HL,DE
     230:  00:8C87  DD 25               		db $DD,$25	;DEC XH
     231:  00:8C89  20 ED               		JR NZ,.L2
     232:  00:8C8B                      
     233:  00:8C8B  D1                  		POP DE
     234:  00:8C8C  13                  		INC DE
     235:  00:8C8D  13                  		INC DE
     236:  00:8C8E  E1                  		POP HL
     237:  00:8C8F  23                  		INC HL
     238:  00:8C90  C1                  		POP BC
     239:  00:8C91  10 D8               		DJNZ .L1
     240:  00:8C93                      
     241:  00:8C93  E1                  		POP HL
     242:  00:8C94  D1                  		POP DE
     243:  00:8C95                      
     244:  00:8C95  7B                  		LD A,E
     245:  00:8C96  D5                  		PUSH DE
     246:  00:8C97  11 2D 91            		LD DE,TCOLD_1
     247:  00:8C9A  BB                  		CP E
     248:  00:8C9B  D1                  		POP DE
     249:  00:8C9C  20 05               		JR NZ,.CORR_1
     250:  00:8C9E  3E FD               		LD A,$FD
     251:  00:8CA0  32 AE F0            		LD [NT_+$2E],A
     252:  00:8CA3                      
     253:  00:8CA3  1A                  .CORR_1:	LD A,[DE]
     254:  00:8CA4  A7                  		AND A
     255:  00:8CA5  28 11               		JR Z,.TC_EXIT
     256:  00:8CA7  1F                  		RRA
     257:  00:8CA8  F5                  		PUSH AF
     258:  00:8CA9  87                  		ADD A,A
     259:  00:8CAA  4F                  		LD C,A
     260:  00:8CAB  09                  		ADD HL,BC
     261:  00:8CAC  F1                  		POP AF
     262:  00:8CAD  30 02               		JR NC,.CORR_2
     263:  00:8CAF  35                  		DEC [HL]
     264:  00:8CB0  35                  		DEC [HL]
     265:  00:8CB1  34                  .CORR_2:	INC [HL]
     266:  00:8CB2  A7                  		AND A
     267:  00:8CB3  ED 42               		SBC HL,BC
     268:  00:8CB5  13                  		INC DE
     269:  00:8CB6  18 EB               		JR .CORR_1
     270:  00:8CB8                      
     271:  00:8CB8                      .TC_EXIT:	;POP AF
     272:  00:8CB8                      
     273:  00:8CB8                      		; --- CREATE PT3 VOLUME TABLE (c) Ivan Roshin, adapted by SapphiRe ---
     274:  00:8CB8  21 11 00            		ld	hl,$11
     275:  00:8CBB  54                  		ld	d,h
     276:  00:8CBC  5C                  		ld	e,h
     277:  00:8CBD  DD 21 50 F1         		ld	IX,VT_+16
     278:  00:8CC1  06 0F               		ld	b,15
     279:  00:8CC3  E5                  .INITV1:	push	hl
     280:  00:8CC4  19                  		add	hl,de
     281:  00:8CC5  EB                  		ex	de,hl
     282:  00:8CC6  ED 62               		sbc	hl,hl
     283:  00:8CC8  48                  		ld	c,b
     284:  00:8CC9  06 10               		ld	b,16
     285:  00:8CCB  7D                  .INITV2:	ld	a,l
     286:  00:8CCC  17                  		rla
     287:  00:8CCD  7C                  		ld	a,h
     288:  00:8CCE  CE 00               		adc	a,0
     289:  00:8CD0  DD 77 00            		ld	[ix],a
     290:  00:8CD3  DD 23               		inc	ix
     291:  00:8CD5  19                  		add	hl,de
     292:  00:8CD6  10 F3               		djnz	.INITV2
     293:  00:8CD8  E1                  		pop	hl
     294:  00:8CD9  7B                  		ld	a,e
     295:  00:8CDA  FE 77               		cp	$77
     296:  00:8CDC  20 01               		jr	nz,.INITV3
     297:  00:8CDE  1C                  		inc	e
     298:  00:8CDF  41                  .INITV3:	ld	b,c
     299:  00:8CE0  10 E1               		djnz	.INITV1
     300:  00:8CE2                      
     301:  00:8CE2  C9                  		RET
     302:  00:8CE3                      
     303:  00:8CE3                      		;pattern decoder
     304:  00:8CE3  DD 36 08 00         PD_OrSm:	LD [IX+(CHNPRM_Env_En-12)],0
     305:  00:8CE7  CD 6D 8E            		CALL SETORN
     306:  00:8CEA  0A                  		LD A,[BC]
     307:  00:8CEB  03                  		INC BC
     308:  00:8CEC  0F                  		RRCA
     309:  00:8CED                      
     310:  00:8CED  87                  PD_SAM:		ADD A,A
     311:  00:8CEE  5F                  PD_SAM_:	LD E,A
     312:  00:8CEF  16 00               		LD D,0
     313:  00:8CF1  2A 05 F0            		LD HL,[PT3_SAMPTRS]
     314:  00:8CF4  19                  		ADD HL,DE
     315:  00:8CF5  5E                  		LD E,[HL]
     316:  00:8CF6  23                  		INC HL
     317:  00:8CF7  56                  		LD D,[HL]
     318:  00:8CF8  2A 01 F0            		LD HL,[PT3_MODADDR]
     319:  00:8CFB  19                  		ADD HL,DE
     320:  00:8CFC  DD 75 03            		LD [IX+(CHNPRM_SamPtr-12)],L
     321:  00:8CFF  DD 74 04            		LD [IX+(CHNPRM_SamPtr+1-12)],H
     322:  00:8D02  18 41               		JR PD_LOOP
     323:  00:8D04                      
     324:  00:8D04  07                  PD_VOL:		RLCA
     325:  00:8D05  07                  		RLCA
     326:  00:8D06  07                  		RLCA
     327:  00:8D07  07                  		RLCA
     328:  00:8D08  DD 77 10            		LD [IX+(CHNPRM_Volume-12)],A
     329:  00:8D0B  18 3B               		JR PD_LP2
     330:  00:8D0D                      	
     331:  00:8D0D  DD 77 08            PD_EOff:	LD [IX+(CHNPRM_Env_En-12)],A
     332:  00:8D10  DD 77 F4            		LD [IX+(CHNPRM_PsInOr-12)],A
     333:  00:8D13  18 33               		JR PD_LP2
     334:  00:8D15                      
     335:  00:8D15  3D                  PD_SorE:	DEC A
     336:  00:8D16  20 07               		JR NZ,PD_ENV
     337:  00:8D18  0A                  		LD A,[BC]
     338:  00:8D19  03                  		INC BC
     339:  00:8D1A  DD 77 05            		LD [IX+(CHNPRM_NNtSkp-12)],A
     340:  00:8D1D  18 29               		JR PD_LP2
     341:  00:8D1F                      
     342:  00:8D1F  CD 51 8E            PD_ENV:		CALL SETENV
     343:  00:8D22  18 24               		JR PD_LP2
     344:  00:8D24                      
     345:  00:8D24  CD 6D 8E            PD_ORN:		CALL SETORN
     346:  00:8D27  18 1C               		JR PD_LOOP
     347:  00:8D29                             
     348:  00:8D29  DD 77 08            PD_ESAM:	LD [IX+(CHNPRM_Env_En-12)],A
     349:  00:8D2C  DD 77 F4            		LD [IX+(CHNPRM_PsInOr-12)],A
     350:  00:8D2F  C4 51 8E            		CALL NZ,SETENV
     351:  00:8D32  0A                  		LD A,[BC]
     352:  00:8D33  03                  		INC BC
     353:  00:8D34  18 B8               		JR PD_SAM_
     354:  00:8D36                      
     355:  00:8D36  DD 7E 06            PTDECOD:	LD A,[IX+(CHNPRM_Note-12)]
     356:  00:8D39  32 0F F0            		LD [PT3_PrNote],A
     357:  00:8D3C  DD 6E FA            		LD L,[IX+(CHNPRM_CrTnSl-12)]
     358:  00:8D3F  DD 66 FB            		LD H,[IX+(CHNPRM_CrTnSl+1-12)]
     359:  00:8D42  22 10 F0            		LD [PT3_PrSlide],HL
     360:  00:8D45                      
     361:  00:8D45  11 10 20            PD_LOOP:	LD DE,$2010
     362:  00:8D48  0A                  PD_LP2:		LD A,[BC]
     363:  00:8D49  03                  		INC BC
     364:  00:8D4A  83                  		ADD A,E
     365:  00:8D4B  38 96               		JR C,PD_OrSm
     366:  00:8D4D  82                  		ADD A,D
     367:  00:8D4E  28 4A               		JR Z,PD_FIN
     368:  00:8D50  38 9B               		JR C,PD_SAM
     369:  00:8D52  83                  		ADD A,E
     370:  00:8D53  28 25               		JR Z,PD_REL
     371:  00:8D55  38 AD               		JR C,PD_VOL
     372:  00:8D57  83                  		ADD A,E
     373:  00:8D58  28 B3               		JR Z,PD_EOff
     374:  00:8D5A  38 B9               		JR C,PD_SorE
     375:  00:8D5C  C6 60               		ADD A,96
     376:  00:8D5E  38 20               		JR C,PD_NOTE
     377:  00:8D60  83                  		ADD A,E
     378:  00:8D61  38 C1               		JR C,PD_ORN
     379:  00:8D63  82                  		ADD A,D
     380:  00:8D64  38 0F               		JR C,PD_NOIS
     381:  00:8D66  83                  		ADD A,E
     382:  00:8D67  38 C0               		JR C,PD_ESAM
     383:  00:8D69  87                  		ADD A,A
     384:  00:8D6A  5F                  		LD E,A
     385:  00:8D6B  21 A6 6D            		LD HL,(SPCCOMS+$DF20) % 65536	; Adapted from original Speccy version (saves 6 bytes)
     386:  00:8D6E  19                  		ADD HL,DE
     387:  00:8D6F  5E                  		LD E,[HL]
     388:  00:8D70  23                  		INC HL
     389:  00:8D71  56                  		LD D,[HL]
     390:  00:8D72  D5                  		PUSH DE
     391:  00:8D73  18 D0               		JR PD_LOOP
     392:  00:8D75                      
     393:  00:8D75  32 7E F0            PD_NOIS:	LD [Ns_Base],A
     394:  00:8D78  18 CE               		JR PD_LP2
     395:  00:8D7A                      
     396:  00:8D7A  DD CB 09 86         PD_REL:		RES 0,[IX+(CHNPRM_Flags-12)]
     397:  00:8D7E  18 08               		JR PD_RES
     398:  00:8D80                      	
     399:  00:8D80  DD 77 06            PD_NOTE:	LD [IX+(CHNPRM_Note-12)],A
     400:  00:8D83  DD CB 09 C6         		SET 0,[IX+(CHNPRM_Flags-12)]
     401:  00:8D87  AF                  		XOR A
     402:  00:8D88                      
     403:  00:8D88  ED 73 09 F0         PD_RES:		LD [PT3_PDSP],SP
     404:  00:8D8C  DD F9               		LD SP,IX
     405:  00:8D8E  67                  		LD H,A
     406:  00:8D8F  6F                  		LD L,A
     407:  00:8D90  E5                  		PUSH HL
     408:  00:8D91  E5                  		PUSH HL
     409:  00:8D92  E5                  		PUSH HL
     410:  00:8D93  E5                  		PUSH HL
     411:  00:8D94  E5                  		PUSH HL
     412:  00:8D95  E5                  		PUSH HL
     413:  00:8D96  ED 7B 09 F0         		LD SP,[PT3_PDSP]
     414:  00:8D9A                      
     415:  00:8D9A  DD 7E 05            PD_FIN:		LD A,[IX+(CHNPRM_NNtSkp-12)]
     416:  00:8D9D  DD 77 0F            		LD [IX+(CHNPRM_NtSkCn-12)],A
     417:  00:8DA0  C9                  		RET
     418:  00:8DA1                      
     419:  00:8DA1  DD CB 09 96         C_PORTM:	RES 2,[IX+(CHNPRM_Flags-12)]
     420:  00:8DA5  0A                  		LD A,[BC]
     421:  00:8DA6  03                  		INC BC
     422:  00:8DA7                      		;SKIP PRECALCULATED TONE DELTA [BECAUSE
     423:  00:8DA7                      		;CANNOT BE RIGHT AFTER PT3 COMPILATION]
     424:  00:8DA7  03                  		INC BC
     425:  00:8DA8  03                  		INC BC
     426:  00:8DA9  DD 77 0A            		LD [IX+(CHNPRM_TnSlDl-12)],A
     427:  00:8DAC  DD 77 F9            		LD [IX+(CHNPRM_TSlCnt-12)],A
     428:  00:8DAF  11 80 F0            		LD DE,NT_
     429:  00:8DB2  DD 7E 06            		LD A,[IX+(CHNPRM_Note-12)]
     430:  00:8DB5  DD 77 07            		LD [IX+(CHNPRM_SlToNt-12)],A
     431:  00:8DB8  87                  		ADD A,A
     432:  00:8DB9  6F                  		LD L,A
     433:  00:8DBA  26 00               		LD H,0
     434:  00:8DBC  19                  		ADD HL,DE
     435:  00:8DBD  7E                  		LD A,[HL]
     436:  00:8DBE  23                  		INC HL
     437:  00:8DBF  66                  		LD H,[HL]
     438:  00:8DC0  6F                  		LD L,A
     439:  00:8DC1  E5                  		PUSH HL
     440:  00:8DC2  3A 0F F0            		LD A,[PT3_PrNote]
     441:  00:8DC5  DD 77 06            		LD [IX+(CHNPRM_Note-12)],A
     442:  00:8DC8  87                  		ADD A,A
     443:  00:8DC9  6F                  		LD L,A
     444:  00:8DCA  26 00               		LD H,0
     445:  00:8DCC  19                  		ADD HL,DE
     446:  00:8DCD  5E                  		LD E,[HL]
     447:  00:8DCE  23                  		INC HL
     448:  00:8DCF  56                  		LD D,[HL]
     449:  00:8DD0  E1                  		POP HL
     450:  00:8DD1  ED 52               		SBC HL,DE
     451:  00:8DD3  DD 75 0D            		LD [IX+(CHNPRM_TnDelt-12)],L
     452:  00:8DD6  DD 74 0E            		LD [IX+(CHNPRM_TnDelt+1-12)],H
     453:  00:8DD9  ED 5B 10 F0         		LD DE,[PT3_PrSlide]
     454:  00:8DDD  DD 73 FA            		LD [IX+(CHNPRM_CrTnSl-12)],E
     455:  00:8DE0  DD 72 FB            		LD [IX+(CHNPRM_CrTnSl+1-12)],D
     456:  00:8DE3  0A                  		LD A,[BC] ;SIGNED TONE STEP
     457:  00:8DE4  03                  		INC BC
     458:  00:8DE5  08                  		EX AF,AF'
     459:  00:8DE6  0A                  		LD A,[BC]
     460:  00:8DE7  03                  		INC BC
     461:  00:8DE8  A7                  		AND A
     462:  00:8DE9  28 01               		JR Z,.NOSIG
     463:  00:8DEB  EB                  		EX DE,HL
     464:  00:8DEC  ED 52               .NOSIG:	SBC HL,DE
     465:  00:8DEE  F2 F6 8D            		JP P,SET_STP
     466:  00:8DF1  2F                  		CPL
     467:  00:8DF2  08                  		EX AF,AF'
     468:  00:8DF3  ED 44               		NEG
     469:  00:8DF5  08                  		EX AF,AF'
     470:  00:8DF6  DD 77 0C            SET_STP:	LD [IX+(CHNPRM_TSlStp+1-12)],A
     471:  00:8DF9  08                  		EX AF,AF'
     472:  00:8DFA  DD 77 0B            		LD [IX+(CHNPRM_TSlStp-12)],A
     473:  00:8DFD  DD 36 FE 00         		LD [IX+(CHNPRM_COnOff-12)],0
     474:  00:8E01  C9                  		RET
     475:  00:8E02                      
     476:  00:8E02  DD CB 09 D6         C_GLISS:	SET 2,[IX+(CHNPRM_Flags-12)]
     477:  00:8E06  0A                  		LD A,[BC]
     478:  00:8E07  03                  		INC BC
     479:  00:8E08  DD 77 0A            		LD [IX+(CHNPRM_TnSlDl-12)],A
     480:  00:8E0B  DD 77 F9            		LD [IX+(CHNPRM_TSlCnt-12)],A
     481:  00:8E0E  0A                  		LD A,[BC]
     482:  00:8E0F  03                  		INC BC
     483:  00:8E10  08                  		EX AF,AF'
     484:  00:8E11  0A                  		LD A,[BC]
     485:  00:8E12  03                  		INC BC
     486:  00:8E13  18 E1               		JR SET_STP
     487:  00:8E15                      
     488:  00:8E15  0A                  C_SMPOS:	LD A,[BC]
     489:  00:8E16  03                  		INC BC
     490:  00:8E17  DD 77 F5            		LD [IX+(CHNPRM_PsInSm-12)],A
     491:  00:8E1A  C9                  		RET
     492:  00:8E1B                      
     493:  00:8E1B  0A                  C_ORPOS:	LD A,[BC]
     494:  00:8E1C  03                  		INC BC
     495:  00:8E1D  DD 77 F4            		LD [IX+(CHNPRM_PsInOr-12)],A
     496:  00:8E20  C9                  		RET
     497:  00:8E21                      
     498:  00:8E21  0A                  C_VIBRT:	LD A,[BC]
     499:  00:8E22  03                  		INC BC
     500:  00:8E23  DD 77 FF            		LD [IX+(CHNPRM_OnOffD-12)],A
     501:  00:8E26  DD 77 FE            		LD [IX+(CHNPRM_COnOff-12)],A
     502:  00:8E29  0A                  		LD A,[BC]
     503:  00:8E2A  03                  		INC BC
     504:  00:8E2B  DD 77 00            		LD [IX+(CHNPRM_OffOnD-12)],A
     505:  00:8E2E  AF                  		XOR A
     506:  00:8E2F  DD 77 F9            		LD [IX+(CHNPRM_TSlCnt-12)],A
     507:  00:8E32  DD 77 FA            		LD [IX+(CHNPRM_CrTnSl-12)],A
     508:  00:8E35  DD 77 FB            		LD [IX+(CHNPRM_CrTnSl+1-12)],A
     509:  00:8E38  C9                  		RET
     510:  00:8E39                      
     511:  00:8E39  0A                  C_ENGLS:	LD A,[BC]
     512:  00:8E3A  03                  		INC BC
     513:  00:8E3B  32 1E F0            		LD [PT3_Env_Del],A
     514:  00:8E3E  32 7D F0            		LD [CurEDel],A
     515:  00:8E41  0A                  		LD A,[BC]
     516:  00:8E42  03                  		INC BC
     517:  00:8E43  6F                  		LD L,A
     518:  00:8E44  0A                  		LD A,[BC]
     519:  00:8E45  03                  		INC BC
     520:  00:8E46  67                  		LD H,A
     521:  00:8E47  22 1F F0            		LD [PT3_ESldAdd],HL
     522:  00:8E4A  C9                  		RET
     523:  00:8E4B                      
     524:  00:8E4B  0A                  C_DELAY:	LD A,[BC]
     525:  00:8E4C  03                  		INC BC
     526:  00:8E4D  32 1C F0            		LD [PT3_Delay],A
     527:  00:8E50  C9                  		RET
     528:  00:8E51                      	
     529:  00:8E51  DD 73 08            SETENV:		LD [IX+(CHNPRM_Env_En-12)],E
     530:  00:8E54  32 4D F1            		LD [AYREGS+AR_EnvTp],A
     531:  00:8E57  0A                  		LD A,[BC]
     532:  00:8E58  03                  		INC BC
     533:  00:8E59  67                  		LD H,A
     534:  00:8E5A  0A                  		LD A,[BC]
     535:  00:8E5B  03                  		INC BC
     536:  00:8E5C  6F                  		LD L,A
     537:  00:8E5D  22 4E F1            		LD [EnvBase],HL
     538:  00:8E60  AF                  		XOR A
     539:  00:8E61  DD 77 F4            		LD [IX+(CHNPRM_PsInOr-12)],A
     540:  00:8E64  32 7D F0            		LD [CurEDel],A
     541:  00:8E67  67                  		LD H,A
     542:  00:8E68  6F                  		LD L,A
     543:  00:8E69  22 7B F0            		LD [CurESld],HL
     544:  00:8E6C  C9                  C_NOP:		RET
     545:  00:8E6D                      
     546:  00:8E6D  87                  SETORN:		ADD A,A
     547:  00:8E6E  5F                  		LD E,A
     548:  00:8E6F  16 00               		LD D,0
     549:  00:8E71  DD 72 F4            		LD [IX+(CHNPRM_PsInOr-12)],D
     550:  00:8E74  2A 07 F0            		LD HL,[PT3_OrnPtrs]
     551:  00:8E77  19                  		ADD HL,DE
     552:  00:8E78  5E                  		LD E,[HL]
     553:  00:8E79  23                  		INC HL
     554:  00:8E7A  56                  		LD D,[HL]
     555:  00:8E7B  2A 01 F0            		LD HL,[PT3_MODADDR]
     556:  00:8E7E  19                  		ADD HL,DE
     557:  00:8E7F  DD 75 01            		LD [IX+(CHNPRM_OrnPtr-12)],L
     558:  00:8E82  DD 74 02            		LD [IX+(CHNPRM_OrnPtr+1-12)],H
     559:  00:8E85  C9                  		RET
     560:  00:8E86                      
     561:  00:8E86                      		;ALL 16 ADDRESSES TO PROTECT FROM BROKEN PT3 MODULES
     562:  00:8E86  6C 8E               SPCCOMS:	dw C_NOP
     563:  00:8E88  02 8E               		dw C_GLISS
     564:  00:8E8A  A1 8D               		dw C_PORTM
     565:  00:8E8C  15 8E               		dw C_SMPOS
     566:  00:8E8E  1B 8E               		dw C_ORPOS
     567:  00:8E90  21 8E               		dw C_VIBRT
     568:  00:8E92  6C 8E               		dw C_NOP
     569:  00:8E94  6C 8E               		dw C_NOP
     570:  00:8E96  39 8E               		dw C_ENGLS
     571:  00:8E98  4B 8E               		dw C_DELAY
     572:  00:8E9A  6C 8E               		dw C_NOP
     573:  00:8E9C  6C 8E               		dw C_NOP
     574:  00:8E9E  6C 8E               		dw C_NOP
     575:  00:8EA0  6C 8E               		dw C_NOP
     576:  00:8EA2  6C 8E               		dw C_NOP
     577:  00:8EA4  6C 8E               		dw C_NOP
     578:  00:8EA6                      
     579:  00:8EA6  AF                  CHREGS:		XOR A
     580:  00:8EA7  32 4A F1            		LD [AYREGS+AR_AmplC],A
     581:  00:8EAA  DD CB 15 46         		BIT 0,[IX+CHNPRM_Flags]
     582:  00:8EAE  E5                  		PUSH HL
     583:  00:8EAF  CA D5 8F            		JP Z,.CH_EXIT
     584:  00:8EB2  ED 73 0B F0         		LD [PT3_CSP],SP
     585:  00:8EB6  DD 6E 0D            		LD L,[IX+CHNPRM_OrnPtr]
     586:  00:8EB9  DD 66 0E            		LD H,[IX+CHNPRM_OrnPtr+1]
     587:  00:8EBC  F9                  		LD SP,HL
     588:  00:8EBD  D1                  		POP DE
     589:  00:8EBE  67                  		LD H,A
     590:  00:8EBF  DD 7E 00            		LD A,[IX+CHNPRM_PsInOr]
     591:  00:8EC2  6F                  		LD L,A
     592:  00:8EC3  39                  		ADD HL,SP
     593:  00:8EC4  3C                  		INC A
     594:  00:8EC5  BA                  		CP D
     595:  00:8EC6  38 01               		JR C,.CH_ORPS
     596:  00:8EC8  7B                  		LD A,E
     597:  00:8EC9  DD 77 00            .CH_ORPS:	LD [IX+CHNPRM_PsInOr],A
     598:  00:8ECC  DD 7E 12            		LD A,[IX+CHNPRM_Note]
     599:  00:8ECF  86                  		ADD A,[HL]
     600:  00:8ED0  F2 D4 8E            		JP P,.CH_NTP
     601:  00:8ED3  AF                  		XOR A
     602:  00:8ED4  FE 60               .CH_NTP:	CP 96
     603:  00:8ED6  38 02               		JR C,.CH_NOK
     604:  00:8ED8  3E 5F               		LD A,95
     605:  00:8EDA  87                  .CH_NOK:	ADD A,A
     606:  00:8EDB  08                  		EX AF,AF'
     607:  00:8EDC  DD 6E 0F            		LD L,[IX+CHNPRM_SamPtr]
     608:  00:8EDF  DD 66 10            		LD H,[IX+CHNPRM_SamPtr+1]
     609:  00:8EE2  F9                  		LD SP,HL
     610:  00:8EE3  D1                  		POP DE
     611:  00:8EE4  26 00               		LD H,0
     612:  00:8EE6  DD 7E 01            		LD A,[IX+CHNPRM_PsInSm]
     613:  00:8EE9  47                  		LD B,A
     614:  00:8EEA  87                  		ADD A,A
     615:  00:8EEB  87                  		ADD A,A
     616:  00:8EEC  6F                  		LD L,A
     617:  00:8EED  39                  		ADD HL,SP
     618:  00:8EEE  F9                  		LD SP,HL
     619:  00:8EEF  78                  		LD A,B
     620:  00:8EF0  3C                  		INC A
     621:  00:8EF1  BA                  		CP D
     622:  00:8EF2  38 01               		JR C,.CH_SMPS
     623:  00:8EF4  7B                  		LD A,E
     624:  00:8EF5  DD 77 01            .CH_SMPS:	LD [IX+CHNPRM_PsInSm],A
     625:  00:8EF8  C1                  		POP BC
     626:  00:8EF9  E1                  		POP HL
     627:  00:8EFA  DD 5E 08            		LD E,[IX+CHNPRM_TnAcc]
     628:  00:8EFD  DD 56 09            		LD D,[IX+CHNPRM_TnAcc+1]
     629:  00:8F00  19                  		ADD HL,DE
     630:  00:8F01  CB 70               		BIT 6,B
     631:  00:8F03  28 06               		JR Z,.CH_NOAC
     632:  00:8F05  DD 75 08            		LD [IX+CHNPRM_TnAcc],L
     633:  00:8F08  DD 74 09            		LD [IX+CHNPRM_TnAcc+1],H
     634:  00:8F0B  EB                  .CH_NOAC:	EX DE,HL
     635:  00:8F0C  08                  		EX AF,AF'
     636:  00:8F0D  6F                  		LD L,A
     637:  00:8F0E  26 00               		LD H,0
     638:  00:8F10  31 80 F0            		LD SP,NT_
     639:  00:8F13  39                  		ADD HL,SP
     640:  00:8F14  F9                  		LD SP,HL
     641:  00:8F15  E1                  		POP HL
     642:  00:8F16  19                  		ADD HL,DE
     643:  00:8F17  DD 5E 06            		LD E,[IX+CHNPRM_CrTnSl]
     644:  00:8F1A  DD 56 07            		LD D,[IX+CHNPRM_CrTnSl+1]
     645:  00:8F1D  19                  		ADD HL,DE
     646:  00:8F1E  ED 7B 0B F0         		LD SP,[PT3_CSP]
     647:  00:8F22  E3                  		EX [SP],HL
     648:  00:8F23  AF                  		XOR A
     649:  00:8F24  DD B6 05            		OR [IX+CHNPRM_TSlCnt]
     650:  00:8F27  28 3E               		JR Z,.CH_AMP
     651:  00:8F29  DD 35 05            		DEC [IX+CHNPRM_TSlCnt]
     652:  00:8F2C  20 39               		JR NZ,.CH_AMP
     653:  00:8F2E  DD 7E 16            		LD A,[IX+CHNPRM_TnSlDl]
     654:  00:8F31  DD 77 05            		LD [IX+CHNPRM_TSlCnt],A
     655:  00:8F34  DD 6E 17            		LD L,[IX+CHNPRM_TSlStp]
     656:  00:8F37  DD 66 18            		LD H,[IX+CHNPRM_TSlStp+1]
     657:  00:8F3A  7C                  		LD A,H
     658:  00:8F3B  19                  		ADD HL,DE
     659:  00:8F3C  DD 75 06            		LD [IX+CHNPRM_CrTnSl],L
     660:  00:8F3F  DD 74 07            		LD [IX+CHNPRM_CrTnSl+1],H
     661:  00:8F42  DD CB 15 56         		BIT 2,[IX+CHNPRM_Flags]
     662:  00:8F46  20 1F               		JR NZ,.CH_AMP
     663:  00:8F48  DD 5E 19            		LD E,[IX+CHNPRM_TnDelt]
     664:  00:8F4B  DD 56 1A            		LD D,[IX+CHNPRM_TnDelt+1]
     665:  00:8F4E  A7                  		AND A
     666:  00:8F4F  28 01               		JR Z,.CH_STPP
     667:  00:8F51  EB                  		EX DE,HL
     668:  00:8F52  ED 52               .CH_STPP:	SBC HL,DE
     669:  00:8F54  FA 67 8F            		JP M,.CH_AMP
     670:  00:8F57  DD 7E 13            		LD A,[IX+CHNPRM_SlToNt]
     671:  00:8F5A  DD 77 12            		LD [IX+CHNPRM_Note],A
     672:  00:8F5D  AF                  		XOR A
     673:  00:8F5E  DD 77 05            		LD [IX+CHNPRM_TSlCnt],A
     674:  00:8F61  DD 77 06            		LD [IX+CHNPRM_CrTnSl],A
     675:  00:8F64  DD 77 07            		LD [IX+CHNPRM_CrTnSl+1],A
     676:  00:8F67  DD 7E 02            .CH_AMP:	LD A,[IX+CHNPRM_CrAmSl]
     677:  00:8F6A  CB 79               		BIT 7,C
     678:  00:8F6C  28 13               		JR Z,.CH_NOAM
     679:  00:8F6E  CB 71               		BIT 6,C
     680:  00:8F70  28 07               		JR Z,.CH_AMIN
     681:  00:8F72  FE 0F               		CP 15
     682:  00:8F74  28 0B               		JR Z,.CH_NOAM
     683:  00:8F76  3C                  		INC A
     684:  00:8F77  18 05               		JR .CH_SVAM
     685:  00:8F79  FE F1               .CH_AMIN:	CP -15
     686:  00:8F7B  28 04               		JR Z,.CH_NOAM
     687:  00:8F7D  3D                  		DEC A
     688:  00:8F7E  DD 77 02            .CH_SVAM:	LD [IX+CHNPRM_CrAmSl],A
     689:  00:8F81  6F                  .CH_NOAM:	LD L,A
     690:  00:8F82  78                  		LD A,B
     691:  00:8F83  E6 0F               		AND 15
     692:  00:8F85  85                  		ADD A,L
     693:  00:8F86  F2 8A 8F            		JP P,.CH_APOS
     694:  00:8F89  AF                  		XOR A
     695:  00:8F8A  FE 10               .CH_APOS:	CP 16
     696:  00:8F8C  38 02               		JR C,.CH_VOL
     697:  00:8F8E  3E 0F               		LD A,15
     698:  00:8F90  DD B6 1C            .CH_VOL:	OR [IX+CHNPRM_Volume]
     699:  00:8F93  6F                  		LD L,A
     700:  00:8F94  26 00               		LD H,0
     701:  00:8F96  11 40 F1            		LD DE,VT_
     702:  00:8F99  19                  		ADD HL,DE
     703:  00:8F9A  7E                  		LD A,[HL]
     704:  00:8F9B  CB 41               .CH_ENV:	BIT 0,C
     705:  00:8F9D  20 03               		JR NZ,.CH_NOEN
     706:  00:8F9F  DD B6 14            		OR [IX+CHNPRM_Env_En]
     707:  00:8FA2  32 4A F1            .CH_NOEN:	LD [AYREGS+AR_AmplC],A
     708:  00:8FA5  CB 78               		BIT 7,B
     709:  00:8FA7  79                  		LD A,C
     710:  00:8FA8  28 19               		JR Z,.NO_ENSL
     711:  00:8FAA  17                  		RLA
     712:  00:8FAB  17                  		RLA
     713:  00:8FAC  CB 2F               		SRA A
     714:  00:8FAE  CB 2F               		SRA A
     715:  00:8FB0  CB 2F               		SRA A
     716:  00:8FB2  DD 86 04            		ADD A,[IX+CHNPRM_CrEnSl] ;SEE COMMENT BELOW
     717:  00:8FB5  CB 68               		BIT 5,B
     718:  00:8FB7  28 03               		JR Z,.NO_ENAC
     719:  00:8FB9  DD 77 04            		LD [IX+CHNPRM_CrEnSl],A
     720:  00:8FBC  21 1D F0            .NO_ENAC:	LD HL,PT3_AddToEn
     721:  00:8FBF  86                  		ADD A,[HL] ;BUG IN PT3 - NEED WORD HERE.
     722:  00:8FC0                      			   ;FIX IT IN NEXT VERSION?
     723:  00:8FC0  77                  		LD [HL],A
     724:  00:8FC1  18 0E               		JR .CH_MIX
     725:  00:8FC3  1F                  .NO_ENSL:	RRA
     726:  00:8FC4  DD 86 03            		ADD A,[IX+CHNPRM_CrNsSl]
     727:  00:8FC7  32 7F F0            		LD [AddToNs],A
     728:  00:8FCA  CB 68               		BIT 5,B
     729:  00:8FCC  28 03               		JR Z,.CH_MIX
     730:  00:8FCE  DD 77 03            		LD [IX+CHNPRM_CrNsSl],A
     731:  00:8FD1  78                  .CH_MIX:	LD A,B
     732:  00:8FD2  1F                  		RRA
     733:  00:8FD3  E6 48               		AND $48
     734:  00:8FD5  21 47 F1            .CH_EXIT:	LD HL,AYREGS+AR_Mixer
     735:  00:8FD8  B6                  		OR [HL]
     736:  00:8FD9  0F                  		RRCA
     737:  00:8FDA  77                  		LD [HL],A
     738:  00:8FDB  E1                  		POP HL
     739:  00:8FDC  AF                  		XOR A
     740:  00:8FDD  DD B6 0A            		OR [IX+CHNPRM_COnOff]
     741:  00:8FE0  C8                  		RET Z
     742:  00:8FE1  DD 35 0A            		DEC [IX+CHNPRM_COnOff]
     743:  00:8FE4  C0                  		RET NZ
     744:  00:8FE5  DD AE 15            		XOR [IX+CHNPRM_Flags]
     745:  00:8FE8  DD 77 15            		LD [IX+CHNPRM_Flags],A
     746:  00:8FEB  1F                  		RRA
     747:  00:8FEC  DD 7E 0B            		LD A,[IX+CHNPRM_OnOffD]
     748:  00:8FEF  38 03               		JR C,.CH_ONDL
     749:  00:8FF1  DD 7E 0C            		LD A,[IX+CHNPRM_OffOnD]
     750:  00:8FF4  DD 77 0A            .CH_ONDL:	LD [IX+CHNPRM_COnOff],A
     751:  00:8FF7  C9                  		RET
     752:  00:8FF8                      
     753:  00:8FF8  AF                  PT3_PLAY:	XOR A
     754:  00:8FF9  32 1D F0            		LD [PT3_AddToEn],A
     755:  00:8FFC  32 47 F1            		LD [AYREGS+AR_Mixer],A
     756:  00:8FFF  3D                  		DEC A
     757:  00:9000  32 4D F1            		LD [AYREGS+AR_EnvTp],A
     758:  00:9003  21 7A F0            		LD HL,DelyCnt
     759:  00:9006  35                  		DEC [HL]
     760:  00:9007  C2 8E 90            		JP NZ,.PL2
     761:  00:900A  21 3E F0            		LD HL,ChanA+CHNPRM_NtSkCn
     762:  00:900D  35                  		DEC [HL]
     763:  00:900E  20 4E               		JR NZ,.PL1B
     764:  00:9010  ED 4B 12 F0         		LD BC,[PT3_AdInPtA]
     765:  00:9014  0A                  		LD A,[BC]
     766:  00:9015  A7                  		AND A
     767:  00:9016  20 3B               		JR NZ,.PL1A
     768:  00:9018  57                  		LD D,A
     769:  00:9019  32 7E F0            		LD [Ns_Base],A
     770:  00:901C  2A 03 F0            		LD HL,[PT3_CrPsPtr]
     771:  00:901F  23                  		INC HL
     772:  00:9020  7E                  		LD A,[HL]
     773:  00:9021  3C                  		INC A
     774:  00:9022  20 08               		JR NZ,.PLNLP
     775:  00:9024  CD 8E 8B            		CALL CHECKLP
     776:  00:9027  2A 18 F0            		LD HL,[PT3_LPosPtr]
     777:  00:902A  7E                  		LD A,[HL]
     778:  00:902B  3C                  		INC A
     779:  00:902C  22 03 F0            .PLNLP:	LD [PT3_CrPsPtr],HL
     780:  00:902F  3D                  		DEC A
     781:  00:9030  87                  		ADD A,A
     782:  00:9031  5F                  		LD E,A
     783:  00:9032  CB 12               		RL D
     784:  00:9034  2A 1A F0            		LD HL,[PT3_PatsPtr]
     785:  00:9037  19                  		ADD HL,DE
     786:  00:9038  ED 5B 01 F0         		LD DE,[PT3_MODADDR]
     787:  00:903C  ED 73 0D F0         		LD [PT3_PSP],SP
     788:  00:9040  F9                  		LD SP,HL
     789:  00:9041  E1                  		POP HL
     790:  00:9042  19                  		ADD HL,DE
     791:  00:9043  44                  		LD B,H
     792:  00:9044  4D                  		LD C,L
     793:  00:9045  E1                  		POP HL
     794:  00:9046  19                  		ADD HL,DE
     795:  00:9047  22 14 F0            		LD [PT3_AdInPtB],HL
     796:  00:904A  E1                  		POP HL
     797:  00:904B  19                  		ADD HL,DE
     798:  00:904C  22 16 F0            		LD [PT3_AdInPtC],HL
     799:  00:904F  ED 7B 0D F0         		LD SP,[PT3_PSP]
     800:  00:9053                      
     801:  00:9053  DD 21 2F F0         .PL1A:		LD IX,ChanA+12
     802:  00:9057  CD 36 8D            		CALL PTDECOD
     803:  00:905A  ED 43 12 F0         		LD [PT3_AdInPtA],BC
     804:  00:905E                      
     805:  00:905E  21 5B F0            .PL1B:		LD HL,ChanB+CHNPRM_NtSkCn
     806:  00:9061  35                  		DEC [HL]
     807:  00:9062  20 0F               		JR NZ,.PL1C
     808:  00:9064  DD 21 4C F0         		LD IX,ChanB+12
     809:  00:9068  ED 4B 14 F0         		LD BC,[PT3_AdInPtB]
     810:  00:906C  CD 36 8D            		CALL PTDECOD
     811:  00:906F  ED 43 14 F0         		LD [PT3_AdInPtB],BC
     812:  00:9073                      
     813:  00:9073  21 78 F0            .PL1C:		LD HL,ChanC+CHNPRM_NtSkCn
     814:  00:9076  35                  		DEC [HL]
     815:  00:9077  20 0F               		JR NZ,.PL1D
     816:  00:9079  DD 21 69 F0         		LD IX,ChanC+12
     817:  00:907D  ED 4B 16 F0         		LD BC,[PT3_AdInPtC]
     818:  00:9081  CD 36 8D            		CALL PTDECOD
     819:  00:9084  ED 43 16 F0         		LD [PT3_AdInPtC],BC
     820:  00:9088                      
     821:  00:9088  3A 1C F0            .PL1D:		LD A,[PT3_Delay]
     822:  00:908B  32 7A F0            		LD [DelyCnt],A
     823:  00:908E                      
     824:  00:908E  DD 21 23 F0         .PL2:		LD IX,ChanA
     825:  00:9092  2A 40 F1            		LD HL,[AYREGS+AR_TonA]
     826:  00:9095  CD A6 8E            		CALL CHREGS
     827:  00:9098  22 40 F1            		LD [AYREGS+AR_TonA],HL
     828:  00:909B  3A 4A F1            		LD A,[AYREGS+AR_AmplC]
     829:  00:909E  32 48 F1            		LD [AYREGS+AR_AmplA],A
     830:  00:90A1  DD 21 40 F0         		LD IX,ChanB
     831:  00:90A5  2A 42 F1            		LD HL,[AYREGS+AR_TonB]
     832:  00:90A8  CD A6 8E            		CALL CHREGS
     833:  00:90AB  22 42 F1            		LD [AYREGS+AR_TonB],HL
     834:  00:90AE  3A 4A F1            		LD A,[AYREGS+AR_AmplC]
     835:  00:90B1  32 49 F1            		LD [AYREGS+AR_AmplB],A
     836:  00:90B4  DD 21 5D F0         		LD IX,ChanC
     837:  00:90B8  2A 44 F1            		LD HL,[AYREGS+AR_TonC]
     838:  00:90BB  CD A6 8E            		CALL CHREGS
     839:  00:90BE  22 44 F1            		LD [AYREGS+AR_TonC],HL
     840:  00:90C1                      
     841:  00:90C1  2A 7E F0            		LD HL,[Ns_Base_AddToNs]
     842:  00:90C4  7C                  		LD A,H
     843:  00:90C5  85                  		ADD A,L
     844:  00:90C6  32 46 F1            		LD [AYREGS+AR_Noise],A
     845:  00:90C9                      
     846:  00:90C9  3A 1D F0            		LD A,[PT3_AddToEn]
     847:  00:90CC  5F                  		LD E,A
     848:  00:90CD  87                  		ADD A,A
     849:  00:90CE  9F                  		SBC A,A
     850:  00:90CF  57                  		LD D,A
     851:  00:90D0  2A 4E F1            		LD HL,[EnvBase]
     852:  00:90D3  19                  		ADD HL,DE
     853:  00:90D4  ED 5B 7B F0         		LD DE,[CurESld]
     854:  00:90D8  19                  		ADD HL,DE
     855:  00:90D9  22 4B F1            		LD [AYREGS+AR_Env],HL
     856:  00:90DC                      
     857:  00:90DC  AF                  		XOR A
     858:  00:90DD  21 7D F0            		LD HL,CurEDel
     859:  00:90E0  B6                  		OR [HL]
     860:  00:90E1  C8                  		RET Z
     861:  00:90E2  35                  		DEC [HL]
     862:  00:90E3  C0                  		RET NZ
     863:  00:90E4  3A 1E F0            		LD A,[PT3_Env_Del]
     864:  00:90E7  77                  		LD [HL],A
     865:  00:90E8  2A 1F F0            		LD HL,[PT3_ESldAdd]
     866:  00:90EB  19                  		ADD HL,DE
     867:  00:90EC  22 7B F0            		LD [CurESld],HL
     868:  00:90EF  C9                  		RET
     869:  00:90F0                      
     870:  00:90F0  AF                  PT3_ROUT:	XOR A
     871:  00:90F1                      	
     872:  00:90F1                      ROUT_A0:	; --- FIXES BITS 6 AND 7 OF MIXER ---
     873:  00:90F1  21 47 F1            		LD	HL,AYREGS+AR_Mixer
     874:  00:90F4  CB FE               		set	7,[hl]
     875:  00:90F6  CB B6               		res	6,[hl]
     876:  00:90F8                      
     877:  00:90F8  0E A0               		LD C,$A0
     878:  00:90FA  21 40 F1            		LD HL,AYREGS
     879:  00:90FD  ED 79               .LOUT:		OUT [C],A
     880:  00:90FF  0C                  		INC C
     881:  00:9100  ED A3               		OUTI 
     882:  00:9102  0D                  		DEC C
     883:  00:9103  3C                  		INC A
     884:  00:9104  FE 0D               		CP 13
     885:  00:9106  20 F5               		JR NZ,.LOUT
     886:  00:9108  ED 79               		OUT [C],A
     887:  00:910A  7E                  		LD A,[HL]
     888:  00:910B  A7                  		AND A
     889:  00:910C  F8                  		RET M
     890:  00:910D  0C                  		INC C
     891:  00:910E  ED 79               		OUT [C],A
     892:  00:9110  C9                  		RET
     893:  00:9111                      
     894:  00:9111  64                  NT_DATA:	db (T_NEW_0-T1_)*2
     895:  00:9112  2A                  		db TCNEW_0-T_
     896:  00:9113  65                  		db (T_OLD_0-T1_)*2+1
     897:  00:9114  00                  		db TCOLD_0-T_
     898:  00:9115  01                  		db (T_NEW_1-T1_)*2+1
     899:  00:9116  0C                  		db TCNEW_1-T_
     900:  00:9117  01                  		db (T_OLD_1-T1_)*2+1
     901:  00:9118  0C                  		db TCOLD_1-T_
     902:  00:9119  94                  		db (T_NEW_2-T1_)*2
     903:  00:911A  35                  		db TCNEW_2-T_
     904:  00:911B  30                  		db (T_OLD_2-T1_)*2
     905:  00:911C  0E                  		db TCOLD_2-T_
     906:  00:911D  60                  		db (T_NEW_3-T1_)*2
     907:  00:911E  20                  		db TCNEW_3-T_
     908:  00:911F  60                  		db (T_OLD_3-T1_)*2
     909:  00:9120  21                  		db TCOLD_3-T_
     910:  00:9121                      
     911:  00:9121                      T_:
     912:  00:9121                      
     913:  00:9121                      TCOLD_0:	db $00+1,$04+1,$08+1,$0A+1,$0C+1,$0E+1,$12+1,$14+1
     913:  00:9121  01 05 09 0B 0D 0F 13 15 
     914:  00:9129  19 25 3D 00         		db $18+1,$24+1,$3C+1,0
     915:  00:912D                      TCNEW_1:	
     916:  00:912D  5D 00               TCOLD_1:	db $5C+1,0
     917:  00:912F                      TCOLD_2:	db $30+1,$36+1,$4C+1,$52+1,$5E+1,$70+1,$82,$8C,$9C
     917:  00:912F  31 37 4D 53 5F 71 82 8C 9C 
     918:  00:9138                      		db $9E,$A0,$A6,$A8,$AA,$AC,$AE,$AE,0
     918:  00:9138  9E A0 A6 A8 AA AC AE AE 00 
     919:  00:9141  57                  TCNEW_3:	db $56+1
     920:  00:9142                      TCOLD_3:	db $1E+1,$22+1,$24+1,$28+1,$2C+1,$2E+1,$32+1,$BE+1,0
     920:  00:9142  1F 23 25 29 2D 2F 33 BF 00 
     921:  00:914B                      TCNEW_0:	db $1C+1,$20+1,$22+1,$26+1,$2A+1,$2C+1,$30+1,$54+1
     921:  00:914B  1D 21 23 27 2B 2D 31 55 
     922:  00:9153  BD BF 00            		db $BC+1,$BE+1,0
     923:  00:9156                      TCNEW_2:	db $1A+1,$20+1,$24+1,$28+1,$2A+1,$3A+1,$4C+1,$5E+1
     923:  00:9156  1B 21 25 29 2B 3B 4D 5F 
     924:  00:915E  BB BD BF            		db $BA+1,$BC+1,$BE+1
     925:  00:9161                      
     926:  00:9161  00 01 00 90         EMPTYSAMORN: 	db 0,1,0,$90 ;delete $90 if you don't need default sample
     927:  00:9165                      
     928:  00:9165                      T_PACK:		; First 12 values of tone tables (packed)
     929:  00:9165  0D                  		db ($06EC*2)/256
     930:  00:9166  D8                  		db #d8
     931:  00:9167  69                  		db $0755-$06EC
     932:  00:9168  70                  		db $07C5-$0755
     933:  00:9169  76                  		db $083B-$07C5
     934:  00:916A  7D                  		db $08B8-$083B
     935:  00:916B  85                  		db $093D-$08B8
     936:  00:916C  8D                  		db $09CA-$093D
     937:  00:916D  95                  		db $0A5F-$09CA
     938:  00:916E  9D                  		db $0AFC-$0A5F
     939:  00:916F  A8                  		db $0BA4-$0AFC
     940:  00:9170  B1                  		db $0C55-$0BA4
     941:  00:9171  BB                  		db $0D10-$0C55
     942:  00:9172  0C                  		db ($066D*2)/256
     943:  00:9173  DA                  		db #da
     944:  00:9174  62                  		db $06CF-$066D
     945:  00:9175  68                  		db $0737-$06CF
     946:  00:9176  6D                  		db $07A4-$0737
     947:  00:9177  75                  		db $0819-$07A4
     948:  00:9178  7B                  		db $0894-$0819
     949:  00:9179  83                  		db $0917-$0894
     950:  00:917A  8A                  		db $09A1-$0917
     951:  00:917B  92                  		db $0A33-$09A1
     952:  00:917C  9C                  		db $0ACF-$0A33
     953:  00:917D  A4                  		db $0B73-$0ACF
     954:  00:917E  AF                  		db $0C22-$0B73
     955:  00:917F  B8                  		db $0CDA-$0C22
     956:  00:9180  0E                  		db ($0704*2)/256
     957:  00:9181  08                  		db #08
     958:  00:9182  6A                  		db $076E-$0704
     959:  00:9183  72                  		db $07E0-$076E
     960:  00:9184  78                  		db $0858-$07E0
     961:  00:9185  7E                  		db $08D6-$0858
     962:  00:9186  86                  		db $095C-$08D6
     963:  00:9187  90                  		db $09EC-$095C
     964:  00:9188  96                  		db $0A82-$09EC
     965:  00:9189  A0                  		db $0B22-$0A82
     966:  00:918A  AA                  		db $0BCC-$0B22
     967:  00:918B  B4                  		db $0C80-$0BCC
     968:  00:918C  BE                  		db $0D3E-$0C80
     969:  00:918D  0F                  		db ($07E0*2)/256
     970:  00:918E  C0                  		db #c0
     971:  00:918F  78                  		db $0858-$07E0
     972:  00:9190  88                  		db $08E0-$0858
     973:  00:9191  80                  		db $0960-$08E0
     974:  00:9192  90                  		db $09F0-$0960
     975:  00:9193  98                  		db $0A88-$09F0
     976:  00:9194  A0                  		db $0B28-$0A88
     977:  00:9195  B0                  		db $0BD8-$0B28
     978:  00:9196  A8                  		db $0C80-$0BD8
     979:  00:9197  E0                  		db $0D60-$0C80
     980:  00:9198  B0                  		db $0E10-$0D60
     981:  00:9199  E8                  		db $0EF8-$0E10
      61.  00:919A                      	include "ayFX-ROM_sjasm.asm"
       1:  00:919A                      		; --- ayFX REPLAYER v1.31 ---
       2:  00:919A                      
       3:  00:919A                      		; --- v1.31	Fixed bug on previous version, only PSG channel C worked
       4:  00:919A                      		; --- v1.3	Fixed volume and Relative volume versions on the same file, conditional compilation
       5:  00:919A                      		; ---		Support for dynamic or fixed channel allocation
       6:  00:919A                      		; --- v1.2f/r	ayFX bank support
       7:  00:919A                      		; --- v1.11f/r	If a frame volume is zero then no AYREGS update
       8:  00:919A                      		; --- v1.1f/r	Fixed volume for all ayFX streams
       9:  00:919A                      		; --- v1.1	Explicit priority (as suggested by AR)
      10:  00:919A                      		; --- v1.0f	Bug fixed (error when using noise)
      11:  00:919A                      		; --- v1.0	Initial release
      12:  00:919A                      
      13:  00:919A                      		; --- DEFINE AYFXRELATIVE AS 0 FOR FIXED VOLUME VERSION ---
      14:  00:919A                      		; --- DEFINE AYFXRELATIVE AS 1 FOR RELATIVE VOLUME VERSION ---
      15:  00:919A  (00:0000)           AYFXRELATIVE equ 0
      16:  00:919A                      
      17:  00:919A                      ayFX_SETUP:	; ---          ayFX replayer setup          ---
      18:  00:919A                      		; --- INPUT: HL -> pointer to the ayFX bank ---
      19:  00:919A  22 41 F2            		ld	[ayFX_BANK],hl			; Current ayFX bank
      20:  00:919D  3E 01               		ld	a,1				; a:=0
      21:  00:919F  32 40 F2            		ld	[ayFX_MODE],a			; Initial mode: fixed channel
      22:  00:91A2  3C                  		inc	a				; Starting channel (=1)
      23:  00:91A3  32 4A F2            		ld	[ayFX_CHANNEL],a		; Updated
      24:  00:91A6                      ayFX_END:	; --- End of an ayFX stream ---
      25:  00:91A6  3E FF               		ld	a,255				; Lowest ayFX priority
      26:  00:91A8  32 43 F2            		ld	[ayFX_PRIORITY],a		; Priority saved (not playing ayFX stream)
      27:  00:91AB  C9                  		ret					; Return
      28:  00:91AC                      
      29:  00:91AC                      ayFX_INIT:	; ---     INIT A NEW ayFX STREAM     ---
      30:  00:91AC                      		; --- INPUT: A -> sound to be played ---
      31:  00:91AC                      		; ---        C -> sound priority     ---
      32:  00:91AC  C5                  		push	bc				; Store bc in stack
      33:  00:91AD  D5                  		push	de				; Store de in stack
      34:  00:91AE  E5                  		push	hl				; Store hl in stack
      35:  00:91AF                      		; --- Check if the index is in the bank ---
      36:  00:91AF  47                  		ld	b,a				; b:=a (new ayFX stream index)
      37:  00:91B0  2A 41 F2            		ld	hl,[ayFX_BANK]			; Current ayFX BANK
      38:  00:91B3  7E                  		ld	a,[hl]				; Number of samples in the bank
      39:  00:91B4  B7                  		or	a				; If zero (means 256 samples)...
      40:  00:91B5  28 06               		jr	z,.CHECK_PRI			; ...goto .CHECK_PRI
      41:  00:91B7                      		; The bank has less than 256 samples
      42:  00:91B7  78                  		ld	a,b				; a:=b (new ayFX stream index)
      43:  00:91B8  BE                  		cp	[hl]				; If new index is not in the bank...
      44:  00:91B9  3E 02               		ld	a,2				; a:=2 (error 2: Sample not in the bank)
      45:  00:91BB  30 21               		jr	nc,.INIT_END			; ...we can't init it
      46:  00:91BD                      .CHECK_PRI:	; --- Check if the new priority is lower than the current one ---
      47:  00:91BD                      		; ---   Remember: 0 = highest priority, 15 = lowest priority  ---
      48:  00:91BD  78                  		ld	a,b				; a:=b (new ayFX stream index)
      49:  00:91BE  3A 43 F2            		ld	a,[ayFX_PRIORITY]		; a:=Current ayFX stream priority
      50:  00:91C1  B9                  		cp	c				; If new ayFX stream priority is lower than current one...
      51:  00:91C2  3E 01               		ld	a,1				; a:=1 (error 1: A sample with higher priority is being played)
      52:  00:91C4  38 18               		jr	c,.INIT_END			; ...we don't start the new ayFX stream
      53:  00:91C6                      		; --- Set new priority ---
      54:  00:91C6  79                  		ld	a,c				; a:=New priority
      55:  00:91C7  E6 0F               		and	$0F				; We mask the priority
      56:  00:91C9  32 43 F2            		ld	[ayFX_PRIORITY],a		; new ayFX stream priority saved in RAM
      57:  00:91CC                      
      58:  00:91CC                      		IF ( AYFXRELATIVE == 1 )
      59:  00:91CC                    ~ 			; --- Volume adjust using PT3 volume table ---
      60:  00:91CC                    ~ 			ld	c,a				; c:=New priority (fixed)
      61:  00:91CC                    ~ 			ld	a,15				; a:=15
      62:  00:91CC                    ~ 			sub	c				; a:=15-New priority = relative volume
      63:  00:91CC                    ~ 			jr	z,.INIT_NOSOUND		; If priority is 15 -> no sound output (volume is zero)
      64:  00:91CC                    ~ 			add	a,a				; a:=a*2
      65:  00:91CC                    ~ 			add	a,a				; a:=a*4
      66:  00:91CC                    ~ 			add	a,a				; a:=a*8
      67:  00:91CC                    ~ 			add	a,a				; a:=a*16
      68:  00:91CC                    ~ 			ld	e,a				; e:=a
      69:  00:91CC                    ~ 			ld	d,0				; de:=a
      70:  00:91CC                    ~ 			ld	hl,VT_				; hl:=PT3 volume table
      71:  00:91CC                    ~ 			add	hl,de				; hl is a pointer to the relative volume table
      72:  00:91CC                    ~ 			ld	[ayFX_VT],hl			; Save pointer
      73:  00:91CC                    ~ 		ENDIF
      74:  00:91CC                      
      75:  00:91CC                      		; --- Calculate the pointer to the new ayFX stream ---
      76:  00:91CC  ED 5B 41 F2         		ld	de,[ayFX_BANK]			; de:=Current ayFX bank
      77:  00:91D0  13                  		inc	de				; de points to the increments table of the bank
      78:  00:91D1  68                  		ld	l,b				; l:=b (new ayFX stream index)
      79:  00:91D2  26 00               		ld	h,0				; hl:=b (new ayFX stream index)
      80:  00:91D4  29                  		add	hl,hl				; hl:=hl*2
      81:  00:91D5  19                  		add	hl,de				; hl:=hl+de (hl points to the correct increment)
      82:  00:91D6  5E                  		ld	e,[hl]				; e:=lower byte of the increment
      83:  00:91D7  23                  		inc	hl				; hl points to the higher byte of the correct increment
      84:  00:91D8  56                  		ld	d,[hl]				; de:=increment
      85:  00:91D9  19                  		add	hl,de				; hl:=hl+de (hl points to the new ayFX stream)
      86:  00:91DA  22 44 F2            		ld	[ayFX_POINTER],hl		; Pointer saved in RAM
      87:  00:91DD  AF                  		xor	a				; a:=0 (no errors)
      88:  00:91DE  E1                  .INIT_END:	pop	hl				; Retrieve hl from stack
      89:  00:91DF  D1                  		pop	de				; Retrieve de from stack
      90:  00:91E0  C1                  		pop	bc				; Retrieve bc from stack
      91:  00:91E1  C9                  		ret					; Return
      92:  00:91E2                      
      93:  00:91E2                      		IF ( AYFXRELATIVE == 1 )
      94:  00:91E2                    ~ .INIT_NOSOUND:	; --- Init a sample with relative volume zero -> no sound output ---
      95:  00:91E2                    ~ 			ld	a,255				; Lowest ayFX priority
      96:  00:91E2                    ~ 			ld	[ayFX_PRIORITY],a		; Priority saved (not playing ayFX stream)
      97:  00:91E2                    ~ 			jr	.INIT_END			; Jumps to .INIT_END
      98:  00:91E2                    ~ 		ENDIF
      99:  00:91E2                      
     100:  00:91E2                      ayFX_PLAY:	; --- PLAY A FRAME OF AN ayFX STREAM ---
     101:  00:91E2  3A 43 F2            		ld	a,[ayFX_PRIORITY]		; a:=Current ayFX stream priority
     102:  00:91E5  B7                  		or	a				; If priority has bit 7 on...
     103:  00:91E6  F8                  		ret	m				; ...return
     104:  00:91E7                      		; --- Calculate next ayFX channel (if needed) ---
     105:  00:91E7  3A 40 F2            		ld	a,[ayFX_MODE]			; ayFX mode
     106:  00:91EA  E6 01               		and	1				; If bit0=0 (fixed channel)...
     107:  00:91EC  28 08               		jr	z,.TAKECB			; ...skip channel changing
     108:  00:91EE  21 4A F2            		ld	hl,ayFX_CHANNEL			; Old ayFX playing channel
     109:  00:91F1  35                  		dec	[hl]				; New ayFX playing channel
     110:  00:91F2  20 02               		jr	nz,.TAKECB			; If not zero jump to .TAKECB
     111:  00:91F4  36 03               		ld	[hl],3				; If zero -> set channel 3
     112:  00:91F6                      .TAKECB:	; --- Extract control byte from stream ---
     113:  00:91F6  2A 44 F2            		ld	hl,[ayFX_POINTER]		; Pointer to the current ayFX stream
     114:  00:91F9  4E                  		ld	c,[hl]				; c:=Control byte
     115:  00:91FA  23                  		inc	hl				; Increment pointer
     116:  00:91FB                      		; --- Check if there's new tone on stream ---
     117:  00:91FB  CB 69               		bit	5,c				; If bit 5 c is off...
     118:  00:91FD  28 08               		jr	z,.CHECK_NN			; ...jump to .CHECK_NN (no new tone)
     119:  00:91FF                      		; --- Extract new tone from stream ---
     120:  00:91FF  5E                  		ld	e,[hl]				; e:=lower byte of new tone
     121:  00:9200  23                  		inc	hl				; Increment pointer
     122:  00:9201  56                  		ld	d,[hl]				; d:=higher byte of new tone
     123:  00:9202  23                  		inc	hl				; Increment pointer
     124:  00:9203  ED 53 46 F2         		ld	[ayFX_TONE],de			; ayFX tone updated
     125:  00:9207                      .CHECK_NN:	; --- Check if there's new noise on stream ---
     126:  00:9207  CB 71               		bit	6,c				; if bit 6 c is off...
     127:  00:9209  28 09               		jr	z,.SETPOINTER			; ...jump to .SETPOINTER (no new noise)
     128:  00:920B                      		; --- Extract new noise from stream ---
     129:  00:920B  7E                  		ld	a,[hl]				; a:=New noise
     130:  00:920C  23                  		inc	hl				; Increment pointer
     131:  00:920D  FE 20               		cp	$20				; If it's an illegal value of noise (used to mark end of stream)...
     132:  00:920F  28 95               		jr.	z,ayFX_END			; ...jump to ayFX_END
     133:  00:9211  32 48 F2            		ld	[ayFX_NOISE],a			; ayFX noise updated
     134:  00:9214                      .SETPOINTER:	; --- Update ayFX pointer ---
     135:  00:9214  22 44 F2            		ld	[ayFX_POINTER],hl		; Update ayFX stream pointer
     136:  00:9217                      		; --- Extract volume ---
     137:  00:9217  79                  		ld	a,c				; a:=Control byte
     138:  00:9218  E6 0F               		and	$0F				; lower nibble
     139:  00:921A                      
     140:  00:921A                      		IF ( AYFXRELATIVE == 1 )
     141:  00:921A                    ~ 			; --- Fix the volume using PT3 Volume Table ---
     142:  00:921A                    ~ 			ld	hl,[ayFX_VT]			; hl:=Pointer to relative volume table
     143:  00:921A                    ~ 			ld	e,a				; e:=a (ayFX volume)
     144:  00:921A                    ~ 			ld	d,0				; d:=0
     145:  00:921A                    ~ 			add	hl,de				; hl:=hl+de (hl points to the relative volume of this frame
     146:  00:921A                    ~ 			ld	a,[hl]				; a:=ayFX relative volume
     147:  00:921A                    ~ 			or	a				; If relative volume is zero...
     148:  00:921A                    ~ 		ENDIF
     149:  00:921A                      
     150:  00:921A  32 49 F2            		ld	[ayFX_VOLUME],a			; ayFX volume updated
     151:  00:921D  C8                  		ret	z				; ...return (don't copy ayFX values in to AYREGS)
     152:  00:921E                      		; -------------------------------------
     153:  00:921E                      		; --- COPY ayFX VALUES IN TO AYREGS ---
     154:  00:921E                      		; -------------------------------------
     155:  00:921E                      		; --- Set noise channel ---
     156:  00:921E  CB 79               		bit	7,c				; If noise is off...
     157:  00:9220  20 06               		jr	nz,.SETMASKS			; ...jump to .SETMASKS
     158:  00:9222  3A 48 F2            		ld	a,[ayFX_NOISE]			; ayFX noise value
     159:  00:9225  32 46 F1            		ld	[AYREGS+6],a			; copied in to AYREGS (noise channel)
     160:  00:9228                      .SETMASKS:	; --- Set mixer masks ---
     161:  00:9228  79                  		ld	a,c				; a:=Control byte
     162:  00:9229  E6 90               		and	$90				; Only bits 7 and 4 (noise and tone mask for psg reg 7)
     163:  00:922B  FE 90               		cp	$90				; If no noise and no tone...
     164:  00:922D  C8                  		ret	z				; ...return (don't copy ayFX values in to AYREGS)
     165:  00:922E                      		; --- Copy ayFX values in to ARYREGS ---
     166:  00:922E  0F                  		rrca					; Rotate a to the right (1 TIME)
     167:  00:922F  0F                  		rrca					; Rotate a to the right (2 TIMES) (OR mask)
     168:  00:9230  16 DB               		ld	d,$DB				; d:=Mask for psg mixer (AND mask)
     169:  00:9232                      		; --- Dump to correct channel ---
     170:  00:9232  21 4A F2            		ld	hl,ayFX_CHANNEL			; Next ayFX playing channel
     171:  00:9235  46                  		ld	b,[hl]				; Channel counter
     172:  00:9236                      .CHK1:		; --- Check if playing channel was 1 ---
     173:  00:9236  10 0D               		djnz	.CHK2				; Decrement and jump if channel was not 1
     174:  00:9238                      .PLAY_C:	; --- Play ayFX stream on channel C ---
     175:  00:9238  CD 67 92            		call	.SETMIXER			; Set PSG mixer value (returning a=ayFX volume and hl=ayFX tone)
     176:  00:923B  32 4A F1            		ld	[AYREGS+10],a			; Volume copied in to AYREGS (channel C volume)
     177:  00:923E  CB 51               		bit	2,c				; If tone is off...
     178:  00:9240  C0                  		ret	nz				; ...return
     179:  00:9241  22 44 F1            		ld	[AYREGS+4],hl			; copied in to AYREGS (channel C tone)
     180:  00:9244  C9                  		ret					; Return
     181:  00:9245                      .CHK2:		; --- Check if playing channel was 2 ---
     182:  00:9245  CB 0A               		rrc	d				; Rotate right AND mask
     183:  00:9247  0F                  		rrca					; Rotate right OR mask
     184:  00:9248  10 0D               		djnz	.CHK3				; Decrement and jump if channel was not 2
     185:  00:924A                      .PLAY_B:	; --- Play ayFX stream on channel B ---
     186:  00:924A  CD 67 92            		call	.SETMIXER			; Set PSG mixer value (returning a=ayFX volume and hl=ayFX tone)
     187:  00:924D  32 49 F1            		ld	[AYREGS+9],a			; Volume copied in to AYREGS (channel B volume)
     188:  00:9250  CB 49               		bit	1,c				; If tone is off...
     189:  00:9252  C0                  		ret	nz				; ...return
     190:  00:9253  22 42 F1            		ld	[AYREGS+2],hl			; copied in to AYREGS (channel B tone)
     191:  00:9256  C9                  		ret					; Return
     192:  00:9257                      .CHK3:		; --- Check if playing channel was 3 ---
     193:  00:9257  CB 0A               		rrc	d				; Rotate right AND mask
     194:  00:9259  0F                  		rrca					; Rotate right OR mask
     195:  00:925A                      .PLAY_A:	; --- Play ayFX stream on channel A ---
     196:  00:925A  CD 67 92            		call	.SETMIXER			; Set PSG mixer value (returning a=ayFX volume and hl=ayFX tone)
     197:  00:925D  32 48 F1            		ld	[AYREGS+8],a			; Volume copied in to AYREGS (channel A volume)
     198:  00:9260  CB 41               		bit	0,c				; If tone is off...
     199:  00:9262  C0                  		ret	nz				; ...return
     200:  00:9263  22 40 F1            		ld	[AYREGS+0],hl			; copied in to AYREGS (channel A tone)
     201:  00:9266  C9                  		ret					; Return
     202:  00:9267                      .SETMIXER:	; --- Set PSG mixer value ---
     203:  00:9267  4F                  		ld	c,a				; c:=OR mask
     204:  00:9268  3A 47 F1            		ld	a,[AYREGS+7]			; a:=PSG mixer value
     205:  00:926B  A2                  		and	d				; AND mask
     206:  00:926C  B1                  		or	c				; OR mask
     207:  00:926D  32 47 F1            		ld	[AYREGS+7],a			; PSG mixer value updated
     208:  00:9270  3A 49 F2            		ld	a,[ayFX_VOLUME]			; a:=ayFX volume value
     209:  00:9273  2A 46 F2            		ld	hl,[ayFX_TONE]			; ayFX tone value
     210:  00:9276  C9                  		ret					; Return
     211:  00:9277                      
     212:  00:9277                      		IF ( AYFXRELATIVE == 1 )
     213:  00:9277                    ~ 			; --- UNCOMMENT THIS IF YOU DON'T USE THIS REPLAYER WITH PT3 REPLAYER ---
     214:  00:9277                    ~ 		;VT_:	.INCBIN	"VT.BIN"
     215:  00:9277                    ~ 			; --- UNCOMMENT THIS IF YOU DON'T USE THIS REPLAYER WITH PT3 REPLAYER ---
     216:  00:9277                    ~ 		ENDIF
      62.  00:9277                      	
      63.  00:9277                      	
      64.  00:9277                      
      65.  00:9277                      ;;=====================================================
      66.  00:9277                      ;;DEFINICIÓN DE CANTIONES Y EFECTOS DE SONIDO
      67.  00:9277                      ;;=====================================================		
      68.  00:9277                      song:
      69.  00:9277  (0968)              	incbin "bloodytears_castlevania.99"
      70.  00:9BDF                      	
      71.  00:9BDF                      sfx_bank:
      72.  00:9BDF  (004B)              	incbin "demo.afb"
      73.  00:9C2A                      
     171   00:9C2A                      	
     172   00:9C2A                      	include "subr_ayudas.asm"
       1.  00:9C2A                      ;;=====================================================
       2.  00:9C2A                      ;;SUBRUTINAS MANEJO DE OBJETOS AYUDA
       3.  00:9C2A                      ;;=====================================================	
       4.  00:9C2A                      
       5.  00:9C2A                      ;;=====================================================
       6.  00:9C2A                      ;;VARIABLES
       7.  00:9C2A                      ;;=====================================================
       8.  00:9C2A                      
       9.  00:9C2A  00                  examina_ayudas_en_pantalla:		DB	0		;variable que se actualiza cuando cambiemos de habitación para no mirar el bit de habitación cada vez
      10.  00:9C2B                      
      11.  00:9C2B                      ;array de ayudas
      12.  00:9C2B                      ;posición dentro del bank1 (o 0 que son iguales) de los tiles de la ayuda (cómo en los sprites de 2x2)
      13.  00:9C2B                      array_ayudas:
      14.  00:9C2B  C8 CA               array_oracionon:			DB	200,202
      15.  00:9C2D  C9 CB               array_oracionon1:			DB	201,203
      16.  00:9C2F  CC CE               array_oracionoff:			DB	204,206
      17.  00:9C31  CD CF               array_oracionoff1:			DB	205,207
      18.  00:9C33  D0 D2               array_cruzon:				DB	208,210
      19.  00:9C35  D1 D3               array_cruzon1:				DB	209,211
      20.  00:9C37  D4 D6               array_cruzoff:				DB	212,214
      21.  00:9C39  D5 D7               array_cruzoff1:				DB	213,215
      22.  00:9C3B  D8 DA               array_aguaon:				DB	216,218
      23.  00:9C3D  D9 DB               array_aguaon1:				DB	217,219
      24.  00:9C3F  DC DE               array_aguaoff:				DB	220,222
      25.  00:9C41  DD DF               array_aguaoff1:				DB	221,223
      26.  00:9C43  E0 E2               array_armaduraon:			DB	224,226
      27.  00:9C45  E1 E3               array_armaduraon1:			DB	225,227
      28.  00:9C47  E4 E6               array_armaduraoff:			DB	228,230
      29.  00:9C49  E5 E7               array_armaduraoff1:			DB	229,231
      30.  00:9C4B  E8 EA               array_plantaon:				DB	232,234
      31.  00:9C4D  E9 EB               array_plantaon1:			DB	233,235
      32.  00:9C4F  EC EE               array_plantaoff:			DB	236,238
      33.  00:9C51  ED EF               array_plantaoff1:			DB	237,239
      34.  00:9C53  F0 F2               array_extraon:				DB	240,242
      35.  00:9C55  F1 F3               array_extraon1:				DB	241,243
      36.  00:9C57  F4 F6               array_extraoff:				DB	244,246
      37.  00:9C59  F5 F7               array_extraoff1:			DB	245,247
      38.  00:9C5B  F8 FA               array_ballestaon:			DB	248,250
      39.  00:9C5D  F9 FB               array_ballestaon1:			DB	249,251
      40.  00:9C5F  FC FE               array_ballestaoff:			DB	252,254
      41.  00:9C61  FD FF               array_ballestaoff1:			DB	253,255
      42.  00:9C63                      
      43.  00:9C63                      
      44.  00:9C63                      lista_ayudas:
      45.  00:9C63  00 (15)             ayuda_oracion:		DS		ESTRUCTURA_AYUDA		
      46.  00:9C72                      ;~ ayuda_cruz:			DS		ESTRUCTURA_AYUDA
      47.  00:9C72                      ;~ ayuda_aguabendita:	DS		ESTRUCTURA_AYUDA
      48.  00:9C72                      ;~ ayuda_armadura:		DS		ESTRUCTURA_AYUDA
      49.  00:9C72                      ;~ ayuda_planta:		DS		ESTRUCTURA_AYUDA
      50.  00:9C72                      ;~ ayuda_vidaextra		DS		ESTRUCTURA_AYUDA
      51.  00:9C72                      ;~ ayuda_ballesta:		DS		ESTRUCTURA_AYUDA
      52.  00:9C72                      
      53.  00:9C72                      ;datos ayudas
      54.  00:9C72                      
      55.  00:9C72                      ;hay que repasar todos los posoracionx y posayudasy ***********************************
      56.  00:9C72                      
      57.  00:9C72                      datos_oracion:			
      58.  00:9C72  00                  				DB		INACTIVA		;0 no activa <>0 activo (y muestra tiles ayudaoff)
      59.  00:9C73  38                  				DB		POSORACIONX		;punto x de la ayuda para cuando se dispare encima
      60.  00:9C74  58                  				DB		POSORACIONY		;punto y de la ayuda para cuando se dispare encima
      61.  00:9C75  08                  				DB		RADIOAYUDAX		;radio x de la ayuda para cuando se dispare encima
      62.  00:9C76  08                  				DB		RADIOAYUDAY		;radio y de la ayuda para cuando se dispare encima
      63.  00:9C77  D5 9C               				DW		accion_oracion	;función para acción de cada tipo de ayuda
      64.  00:9C79  2B 9C               				DW		array_oracionon	;puntero al array con los tiles de las ayudas sin usar para wordaux2
      65.  00:9C7B  2F 9C               				DW		array_oracionoff;puntero al array con los tiles de las ayudas sin usar para wordaux2
      66.  00:9C7D  46 19               				DW		TILMAP + POSORACION ;calcula posición en tilemap para wordaux1
      67.  00:9C7F  02                  				DB		ALTOAYUDA		;alto en tiles del dibujo de la puerta (filas)
      68.  00:9C80  02                  				DB		ANCHOAYUDA		;ancho en tiles del dibujo de la puerta (columnas)
      69.  00:9C81                      					
      70.  00:9C81                      ;~ datos_cruz:			
      71.  00:9C81                      				;~ DB		0				;0 no activa <>0 activo (y muestra tiles ayudaoff)
      72.  00:9C81                      				;~ DB		POSCRUZX		;punto x de la ayuda para cuando se dispare encima
      73.  00:9C81                      				;~ DB		POSAYUDASY		;punto y de la ayuda para cuando se dispare encima
      74.  00:9C81                      				;~ DB		8				;radio x de la ayuda para cuando se dispare encima
      75.  00:9C81                      				;~ DB		8				;radio y de la ayuda para cuando se dispare encima
      76.  00:9C81                      				;~ DW		accion_oracion	;función para acción de cada tipo de ayuda
      77.  00:9C81                      				;~ DW		array_oracionon	;puntero al array con los tiles de las ayudas sin usar para wordaux2
      78.  00:9C81                      				;~ DW		array_oracionoff;puntero al array con los tiles de las ayudas sin usar para wordaux2
      79.  00:9C81                      				;~ DW		TILMAP + POSORACION ;calcula posición en tilemap para wordaux1
      80.  00:9C81                      				;~ DB		2				;alto en tiles del dibujo de la puerta (filas)
      81.  00:9C81                      				;~ DB		2				;ancho en tiles del dibujo de la puerta (columnas)
      82.  00:9C81                      
      83.  00:9C81                      				
      84.  00:9C81                      ;~ datos_cruz:
      85.  00:9C81                      				;~ DB    	0				;0 no activo <>0 activo															0
      86.  00:9C81                      				;~ DW		array_cruzon	;pos en memoria ver array_ayudas de cómo se mostrarán (wordaux2)				1,2
      87.  00:9C81                      				;~ DW		array_cruzoff	;pos en memoria ver array_ayudas de cómo se mostrarán (wordaux2)				3,4
      88.  00:9C81                      				;~ DB		POSCRUZ			;pos en pantalla (memoria en el banco 1 se le suma 256 + TILEMAP) (wordaux1)	5
      89.  00:9C81                      				;~ DB		POSCRUZX		;pos del pixel central (esquina superior + 8x)									6
      90.  00:9C81                      				;~ DB		POSAYUDASY		;pos del pixel central (esquina superior + 8y) (para toas igual)				7
      91.  00:9C81                      				;~ DW		accion_cruz		;subrutina que indica la acción si se dispara en el objeto						8,9 
      92.  00:9C81                      				
      93.  00:9C81                      				;~ DB    	0				;0 no activo <>0 activo															0
      94.  00:9C81                      				;~ DW		array_cruzon	;pos en memoria ver array_ayudas de cómo se mostrarán (wordaux2)				1,2
      95.  00:9C81                      				;~ DW		array_cruzoff	;pos en memoria ver array_ayudas de cómo se mostrarán (wordaux2)				3,4
      96.  00:9C81                      				;~ DB		167			;pos en pantalla (memoria en el banco 1 se le suma 256 + TILEMAP) (wordaux1)	5
      97.  00:9C81                      				;~ DB		64		;pos del pixel central (esquina superior + 8x)									6
      98.  00:9C81                      				;~ DB		112		;pos del pixel central (esquina superior + 8y) (para toas igual)				7
      99.  00:9C81                      				;~ DW		accion_cruz		;subrutina que indica la acción si se dispara en el objeto						8,9 
     100.  00:9C81                      				
     101.  00:9C81                      ;~ datos_aguabendita:
     102.  00:9C81                      				;~ DB    	0				;0 no activo <>0 activo															0
     103.  00:9C81                      				;~ DW		array_aguaon	;pos en memoria ver array_ayudas de cómo se mostrarán (wordaux2)				1,2
     104.  00:9C81                      				;~ DW		array_aguaoff	;pos en memoria ver array_ayudas de cómo se mostrarán (wordaux2)				3,4
     105.  00:9C81                      				;~ DB		POSAGUA			;pos en pantalla (memoria en el banco 1 se le suma 256 + TILEMAP) (wordaux1)	5
     106.  00:9C81                      				;~ DB		POSAGUAX		;pos del pixel central (esquina superior + 8x)									6
     107.  00:9C81                      				;~ DB		POSAYUDASY		;pos del pixel central (esquina superior + 8y) (para toas igual)				7
     108.  00:9C81                      				;~ DW		accion_agua		;subrutina que indica la acción si se dispara en el objeto						8,9
     109.  00:9C81                      				;~ DB		0	;relleno																		10-16    
     110.  00:9C81                      				;~ DB		0	;relleno																		10-16    
     111.  00:9C81                      				;~ DB		0	;relleno																		10-16    
     112.  00:9C81                      				;~ DB		0	;relleno																		10-16    
     113.  00:9C81                      				;~ DB		0	;relleno																		10-16    
     114.  00:9C81                      				;~ DB		0	;relleno																		10-16   
     115.  00:9C81                      				;~ DB		0	;relleno																		10-16    
     116.  00:9C81                      ;~ datos_armadura:
     117.  00:9C81                      				;~ DB    	0				;0 no activo <>0 activo															0
     118.  00:9C81                      				;~ DW		array_armaduraon;pos en memoria ver array_ayudas de cómo se mostrarán (wordaux2)				1,2
     119.  00:9C81                      				;~ DW		array_armaduraoff;pos en memoria ver array_ayudas de cómo se mostrarán (wordaux2)				3,4
     120.  00:9C81                      				;~ DB		POSARMAD		;pos en pantalla (memoria en el banco 1 se le suma 256 + TILEMAP) (wordaux1)	5
     121.  00:9C81                      				;~ DB		POSARMADX		;pos del pixel central (esquina superior + 8x)									6
     122.  00:9C81                      				;~ DB		POSAYUDASY		;pos del pixel central (esquina superior + 8y) (para toas igual)				7
     123.  00:9C81                      				;~ DW		accion_armadura	;subrutina que indica la acción si se dispara en el objeto						8,9
     124.  00:9C81                      				;~ DB		0	;relleno																		10-16    
     125.  00:9C81                      				;~ DB		0	;relleno																		10-16    
     126.  00:9C81                      				;~ DB		0	;relleno																		10-16    
     127.  00:9C81                      				;~ DB		0	;relleno																		10-16    
     128.  00:9C81                      				;~ DB		0	;relleno																		10-16    
     129.  00:9C81                      				;~ DB		0	;relleno																		10-16   
     130.  00:9C81                      				;~ DB		0	;relleno																		10-16    
     131.  00:9C81                      ;~ datos_planta:
     132.  00:9C81                      				;~ DB    	0				;0 no activo <>0 activo															0
     133.  00:9C81                      				;~ DW		array_plantaon	;pos en memoria ver array_ayudas de cómo se mostrarán (wordaux2)				1,2
     134.  00:9C81                      				;~ DW		array_plantaoff	;pos en memoria ver array_ayudas de cómo se mostrarán (wordaux2)				3,4
     135.  00:9C81                      				;~ DB		POSPLANTA		;pos en pantalla (memoria en el banco 1 se le suma 256 + TILEMAP) (wordaux1)	5
     136.  00:9C81                      				;~ DB		POSPLANTAX		;pos del pixel central (esquina superior + 8x)									6
     137.  00:9C81                      				;~ DB		POSAYUDASY		;pos del pixel central (esquina superior + 8y) (para toas igual)				7
     138.  00:9C81                      				;~ DW		accion_planta	;subrutina que indica la acción si se dispara en el objeto						8,9
     139.  00:9C81                      				;~ DB		0	;relleno																		10-16    
     140.  00:9C81                      				;~ DB		0	;relleno																		10-16    
     141.  00:9C81                      				;~ DB		0	;relleno																		10-16    
     142.  00:9C81                      				;~ DB		0	;relleno																		10-16    
     143.  00:9C81                      				;~ DB		0	;relleno																		10-16    
     144.  00:9C81                      				;~ DB		0	;relleno																		10-16   
     145.  00:9C81                      				;~ DB		0	;relleno																		10-16     
     146.  00:9C81                      ;~ datos_vidaextra:
     147.  00:9C81                      				;~ DB    	0				;0 no activo <>0 activo															0
     148.  00:9C81                      				;~ DW		array_extraon	;pos en memoria ver array_ayudas de cómo se mostrarán (wordaux2)				1,2
     149.  00:9C81                      				;~ DW		array_extraoff	;pos en memoria ver array_ayudas de cómo se mostrarán (wordaux2)				3,4
     150.  00:9C81                      				;~ DB		POSVIDAEXT		;pos en pantalla (memoria en el banco 1 se le suma 256 + TILEMAP) (wordaux1)	5
     151.  00:9C81                      				;~ DB		POSVIDAEXTX		;pos del pixel central (esquina superior + 8x)									6
     152.  00:9C81                      				;~ DB		POSAYUDASY		;pos del pixel central (esquina superior + 8y) (para toas igual)				7
     153.  00:9C81                      				;~ DW		accion_vidaextra;subrutina que indica la acción si se dispara en el objeto						8,9
     154.  00:9C81                      				;~ DB		0	;relleno																		10-16    
     155.  00:9C81                      				;~ DB		0	;relleno																		10-16    
     156.  00:9C81                      				;~ DB		0	;relleno																		10-16    
     157.  00:9C81                      				;~ DB		0	;relleno																		10-16    
     158.  00:9C81                      				;~ DB		0	;relleno																		10-16    
     159.  00:9C81                      				;~ DB		0	;relleno																		10-16   
     160.  00:9C81                      				;~ DB		0	;relleno																		10-16     
     161.  00:9C81                      ;~ datos_ballesta:
     162.  00:9C81                      				;~ DB    	0				;0 no activo <>0 activo															0
     163.  00:9C81                      				;~ DW		array_ballestaon;pos en memoria ver array_ayudas de cómo se mostrarán (wordaux2)				1,2
     164.  00:9C81                      				;~ DW		array_ballestaoff;pos en memoria ver array_ayudas de cómo se mostrarán (wordaux2)				3,4
     165.  00:9C81                      				;~ DB		POSBALLESTA		;pos en pantalla (memoria en el banco 1 se le suma 256 + TILEMAP) (wordaux1)	5
     166.  00:9C81                      				;~ DB		POSBALLESTAX	;pos del pixel central (esquina superior + 8x)									6
     167.  00:9C81                      				;~ DB		POSAYUDASY		;pos del pixel central (esquina superior + 8y) (para toas igual)				7
     168.  00:9C81                      				;~ DW		accion_oracion	;subrutina que indica la acción si se dispara en el objeto						8,9
     169.  00:9C81                      				;~ DB		0	;relleno																		10-16    
     170.  00:9C81                      				;~ DB		0	;relleno																		10-16    
     171.  00:9C81                      				;~ DB		0	;relleno																		10-16    
     172.  00:9C81                      				;~ DB		0	;relleno																		10-16    
     173.  00:9C81                      				;~ DB		0	;relleno																		10-16    
     174.  00:9C81                      				;~ DB		0	;relleno																		10-16   
     175.  00:9C81                      				;~ DB		0	;relleno																		10-16      
     176.  00:9C81                      
     177.  00:9C81                      
     178.  00:9C81                      
     179.  00:9C81                      
     180.  00:9C81                      
     181.  00:9C81                      
     182.  00:9C81                      
     183.  00:9C81                      ;;=====================================================
     184.  00:9C81                      ;;INICIALIZA_AYUDAS
     185.  00:9C81                      ;;=====================================================	
     186.  00:9C81                      ; función: 	inicializa las variables de estructuras de ayuda del array lista_ayudas
     187.  00:9C81                      ; entrada: 	datos_delasdistintasayudas, variable estructura_ayuda_ayudaquesea
     188.  00:9C81                      ; salida: 	lista_ayudas
     189.  00:9C81                      ; toca:		HL, DE, BC
     190.  00:9C81                      inicializa_ayudas:
     191.  00:9C81                      	;oracion
     192.  00:9C81  21 72 9C            	LD		HL, datos_oracion
     193.  00:9C84  11 63 9C            	LD		DE, ayuda_oracion
     194.  00:9C87  CD 8B 9C            	CALL	carga_datos_ayuda
     195.  00:9C8A                      
     196.  00:9C8A                      
     197.  00:9C8A                      	;~ ;oración
     198.  00:9C8A                      	;~ LD		IX, ayuda_oracion
     199.  00:9C8A                      	;~ LD		(IX + 0), INACTIVA			
     200.  00:9C8A                      	;~ LD		HL, array_oracionon
     201.  00:9C8A                      	;~ LD		(IX + 1), H
     202.  00:9C8A                      	;~ LD		(IX + 2), L
     203.  00:9C8A                      	;~ LD		HL, array_oracionoff
     204.  00:9C8A                      	;~ LD		(IX + 3), H
     205.  00:9C8A                      	;~ LD		(IX + 4), L
     206.  00:9C8A                      	;~ LD		(IX + 5), POSORACION
     207.  00:9C8A                      	;~ LD		(IX + 6), POSORACIONX
     208.  00:9C8A                      	;~ LD		(IX + 7), POSAYUDASY	
     209.  00:9C8A                      	;~ LD		HL, accion_oracion
     210.  00:9C8A                      	;~ LD		(IX + 8), H
     211.  00:9C8A                      	;~ LD		(IX + 9), L
     212.  00:9C8A                      	
     213.  00:9C8A                      	;~ ;cruz
     214.  00:9C8A                      	;~ LD		HL, datos_cruz
     215.  00:9C8A                      	;~ LD		DE, ayuda_cruz
     216.  00:9C8A                      	;~ LD		BC, 16;#ESTRUCTURA_AYUDA ;equivale a 16.. el tamaño de la estructura en bytes
     217.  00:9C8A                      	;~ LDIR
     218.  00:9C8A                      	
     219.  00:9C8A                      	;~ ;agua bendita
     220.  00:9C8A                      	;~ LD		HL, datos_aguabendita
     221.  00:9C8A                      	;~ LD		DE, ayuda_aguabendita
     222.  00:9C8A                      	;~ CALL	carga_datos_ayuda
     223.  00:9C8A                      		
     224.  00:9C8A                      	;~ ;armadura
     225.  00:9C8A                      	;~ LD		HL, datos_armadura
     226.  00:9C8A                      	;~ LD		DE, ayuda_armadura
     227.  00:9C8A                      	;~ CALL	carga_datos_ayuda
     228.  00:9C8A                      		
     229.  00:9C8A                      	;~ ;planta
     230.  00:9C8A                      	;~ LD		HL, datos_planta
     231.  00:9C8A                      	;~ LD		DE, ayuda_planta
     232.  00:9C8A                      	;~ CALL	carga_datos_ayuda
     233.  00:9C8A                      		
     234.  00:9C8A                      	;~ ;vida extra
     235.  00:9C8A                      	;~ LD		HL, datos_vidaextra
     236.  00:9C8A                      	;~ LD		DE, ayuda_vidaextra
     237.  00:9C8A                      	;~ CALL	carga_datos_ayuda
     238.  00:9C8A                      		
     239.  00:9C8A                      	;~ ;ballesta
     240.  00:9C8A                      	;~ LD		HL, datos_ballesta
     241.  00:9C8A                      	;~ LD		DE, ayuda_ballesta
     242.  00:9C8A                      	;~ CALL	carga_datos_ayuda
     243.  00:9C8A                      fin_inicializa_ayudas:
     244.  00:9C8A  C9                  	RET
     245.  00:9C8B                      	
     246.  00:9C8B                      
     247.  00:9C8B                      ;;=====================================================
     248.  00:9C8B                      ;;CARGA_DATOS_AYUDA
     249.  00:9C8B                      ;;=====================================================	
     250.  00:9C8B                      ; función: 	carga los datos de la ayuda de una variable dentro de la variable estructura (más carga y espacio que rellenar a pelo desde IX en adelante pero más simple)
     251.  00:9C8B                      ;entrada
     252.  00:9C8B                      ;  hl: origen de datos
     253.  00:9C8B                      ;  de: destino de datos
     254.  00:9C8B                      ; salida: 	-
     255.  00:9C8B                      ; toca:		HL, DE, BC
     256.  00:9C8B                      carga_datos_ayuda:
     257.  00:9C8B  01 0F 00            	LD		BC, 15;ESTRUCTURA_AYUDA ;equivale a 16.. el tamaño de la estructura en bytes
     258.  00:9C8E  ED B0               	LDIR
     259.  00:9C90                      fin_carga_datos_ayuda:
     260.  00:9C90  C9                  	RET
     261.  00:9C91                      
     262.  00:9C91                      
     263.  00:9C91                      
     264.  00:9C91                      ;;=====================================================
     265.  00:9C91                      ;;PINTA_OBJ_AYUDA
     266.  00:9C91                      ;;=====================================================	
     267.  00:9C91                      ; función: 	pinta un objeto de tipo ayuda que se le pase por referencia IX y el tipo en A
     268.  00:9C91                      ; entrada: 	IX - puntero a objeto a mostrar, A - si está on u off
     269.  00:9C91                      ; salida: 	-
     270.  00:9C91                      ; toca:		AF, HL, BC, DE
     271.  00:9C91                      pinta_obj_ayuda:
     272.  00:9C91                      	;se recibe objeto desde fuera, por ejmplo LD IX, ayuda_oracion
     273.  00:9C91                      
     274.  00:9C91                      	;si A=1 dibujo on (si 0 off)
     275.  00:9C91  B7                  	OR		 A
     276.  00:9C92  C2 A1 9C            	JP		 NZ,.dibujooff
     277.  00:9C95                      .dibujoon:	
     278.  00:9C95  DD 6E 09            		LD		 L, (IX + ESTRUCTURA_AYUDA.tiles_ayudaoff)
     279.  00:9C98  DD 66 0A            		LD		 H, (IX + ESTRUCTURA_AYUDA.tiles_ayudaoff + 1)
     280.  00:9C9B  22 A6 85            		LD		(wordaux2), HL	;pongo el valor en wordaux2
     281.  00:9C9E  C3 AA 9C            		JP		.param_wordaux2
     282.  00:9CA1                      .dibujooff:
     283.  00:9CA1  DD 6E 07            		LD		 L, (IX + ESTRUCTURA_AYUDA.tiles_ayudaon)
     284.  00:9CA4  DD 66 08            		LD		 H, (IX + ESTRUCTURA_AYUDA.tiles_ayudaon + 1)
     285.  00:9CA7  22 A6 85            		LD		(wordaux2), HL	;pongo el valor en wordaux2
     286.  00:9CAA                      ;fin si
     287.  00:9CAA                      .param_wordaux2:	
     288.  00:9CAA  DD 6E 0B            	LD		 L, (IX + ESTRUCTURA_AYUDA.pos_en_tilemap)
     289.  00:9CAD  DD 66 0C            	LD		 H, (IX + ESTRUCTURA_AYUDA.pos_en_tilemap + 1)
     290.  00:9CB0  22 A4 85            	LD		(wordaux1), HL		;pongo el valor en wordaux1
     291.  00:9CB3                      
     292.  00:9CB3                      .filasycols:
     293.  00:9CB3  3E 02               	LD		 A, 2
     294.  00:9CB5                      	;se comenta para ahorrar tiempo (y porque habría que pasarlo previamente a A cuando siempre es 2)
     295.  00:9CB5                      	;~ LD		(byteaux1), (IX + ESTRUCTURA_AYUDA.alto);nº de filas
     296.  00:9CB5                      	;~ LD		(byteaux2), (IX + ESTRUCTURA_AYUDA.alto);nº de columnas
     297.  00:9CB5  32 A8 85            	LD		(byteaux1), A		;nº de filas
     298.  00:9CB8  32 A9 85            	LD		(byteaux2), A		;nº de columnas
     299.  00:9CBB                      	
     300.  00:9CBB  C3 64 85            	JP		pinta_array
     301.  00:9CBE                      fin_pinta_obj_ayuda:
     302.  00:9CBE                      
     303.  00:9CBE                      
     304.  00:9CBE                      ;;=====================================================
     305.  00:9CBE                      ;;PINTA_AYUDAS_HABITACIÓN
     306.  00:9CBE                      ;;=====================================================	
     307.  00:9CBE                      ; función: 	examina el byte con las ayudas y pinta las que estén seleccionadas según variable habitacion_extras
     308.  00:9CBE                      ; entrada: 	habitacion_extras
     309.  00:9CBE                      ; salida: 	-
     310.  00:9CBE                      pinta_ayudas_habitacion:
     311.  00:9CBE  3A 2A 9C            	LD		 A, (examina_ayudas_en_pantalla)
     312.  00:9CC1  B7                  	OR		 A
     313.  00:9CC2  C8                  	RET		 Z								;0 ya no hay ayudas activas (se actualiza cuando se usa la ayuda)
     314.  00:9CC3                      	
     315.  00:9CC3                      .examina_oracion:
     316.  00:9CC3  3A 3D A7            	LD		 A, (habitacion_extras)
     317.  00:9CC6  CB 7F               	BIT		 7, A
     318.  00:9CC8  CA D4 9C            	JP		 Z, fin_pinta_ayudas_habitacion	;despues .examina_cruz
     319.  00:9CCB  DD 21 63 9C         	LD		IX, ayuda_oracion
     320.  00:9CCF  3E 01               	LD		 A, ACTIVA
     321.  00:9CD1  CD 91 9C            	CALL	pinta_obj_ayuda
     322.  00:9CD4                      .fin_examina_oracion:	
     323.  00:9CD4                      	
     324.  00:9CD4                      ;~ .examina_cruz:
     325.  00:9CD4                      	;~ LD		 A, (habitacion_extras)
     326.  00:9CD4                      	;~ BIT		 6,A
     327.  00:9CD4                      	;~ JP		 Z,.examina_aguabendita
     328.  00:9CD4                      	;~ LD		IX, ayuda_cruz
     329.  00:9CD4                      	;~ LD		 A, ACTIVA
     330.  00:9CD4                      	;~ CALL	pinta_obj_ayuda
     331.  00:9CD4                      ;~ .examina_aguabendita:
     332.  00:9CD4                      	;~ LD		 A, (habitacion_extras)
     333.  00:9CD4                      	;~ BIT		 5,A
     334.  00:9CD4                      	;~ JP		 Z,.examina_armadura
     335.  00:9CD4                      	;~ LD		IX, ayuda_aguabendita
     336.  00:9CD4                      	;~ LD		 A, ACTIVA
     337.  00:9CD4                      	;~ CALL	pinta_obj_ayuda
     338.  00:9CD4                      ;~ .examina_armadura:
     339.  00:9CD4                      	;~ LD		 A, (habitacion_extras)
     340.  00:9CD4                      	;~ BIT		 4,A
     341.  00:9CD4                      	;~ JP		 Z,.examina_planta
     342.  00:9CD4                      	;~ LD		IX, ayuda_armadura
     343.  00:9CD4                      	;~ LD		 A, ACTIVA
     344.  00:9CD4                      	;~ CALL	pinta_obj_ayuda
     345.  00:9CD4                      ;~ .examina_planta:
     346.  00:9CD4                      	;~ LD		 A, (habitacion_extras)
     347.  00:9CD4                      	;~ BIT		 3,A
     348.  00:9CD4                      	;~ JP		 Z,.examina_vidaextra
     349.  00:9CD4                      	;~ LD		IX, ayuda_planta
     350.  00:9CD4                      	;~ LD		 A, ACTIVA
     351.  00:9CD4                      	;~ CALL	pinta_obj_ayuda
     352.  00:9CD4                      ;~ .examina_vidaextra:
     353.  00:9CD4                      	;~ LD		 A, (habitacion_extras)
     354.  00:9CD4                      	;~ BIT		 2,A
     355.  00:9CD4                      	;~ JP		 Z,.examina_ballesta
     356.  00:9CD4                      	;~ LD		IX, ayuda_vidaextra
     357.  00:9CD4                      	;~ LD		 A, ACTIVA
     358.  00:9CD4                      	;~ CALL	pinta_obj_ayuda
     359.  00:9CD4                      ;~ .examina_ballesta:
     360.  00:9CD4                      	;~ LD		 A, (habitacion_extras)
     361.  00:9CD4                      	;~ BIT		 1,A
     362.  00:9CD4                      	;~ RET		 Z
     363.  00:9CD4                      	;~ LD		IX, ayuda_ballesta
     364.  00:9CD4                      	;~ LD		 A, ACTIVA
     365.  00:9CD4                      	;~ CALL	pinta_obj_ayuda
     366.  00:9CD4                      fin_pinta_ayudas_habitacion:
     367.  00:9CD4  C9                  	RET
     368.  00:9CD5                      
     369.  00:9CD5                      
     370.  00:9CD5                      
     371.  00:9CD5                      ;;=====================================================
     372.  00:9CD5                      ;;ACCION_ORACION
     373.  00:9CD5                      ;;=====================================================	
     374.  00:9CD5                      ; función: 	
     375.  00:9CD5                      ; entrada: 	
     376.  00:9CD5                      ; salida: 	-
     377.  00:9CD5                      accion_oracion:
     378.  00:9CD5                      fin_accion_oracion:
     379.  00:9CD5  C9                  	RET
     380.  00:9CD6                      	
     381.  00:9CD6                      
     382.  00:9CD6                      ;;=====================================================
     383.  00:9CD6                      ;;ACCION_CRUZ
     384.  00:9CD6                      ;;=====================================================	
     385.  00:9CD6                      ; función: 	
     386.  00:9CD6                      ; entrada: 	
     387.  00:9CD6                      ; salida: 	-
     388.  00:9CD6                      accion_cruz:
     389.  00:9CD6                      fin_accion_cruz:
     390.  00:9CD6  C9                  	RET
     391.  00:9CD7                      
     392.  00:9CD7                      
     393.  00:9CD7                      ;;=====================================================
     394.  00:9CD7                      ;;ACCION_AGUA
     395.  00:9CD7                      ;;=====================================================	
     396.  00:9CD7                      ; función: 	
     397.  00:9CD7                      ; entrada: 	
     398.  00:9CD7                      ; salida: 	-
     399.  00:9CD7                      accion_agua:
     400.  00:9CD7                      fin_accion_agua:
     401.  00:9CD7  C9                  	RET
     402.  00:9CD8                      
     403.  00:9CD8                      
     404.  00:9CD8                      ;;=====================================================
     405.  00:9CD8                      ;;ACCION_ARMADURA
     406.  00:9CD8                      ;;=====================================================	
     407.  00:9CD8                      ; función: 	
     408.  00:9CD8                      ; entrada: 	
     409.  00:9CD8                      ; salida: 	-
     410.  00:9CD8                      accion_armadura:
     411.  00:9CD8                      fin_accion_armadura:
     412.  00:9CD8  C9                  	RET
     413.  00:9CD9                      
     414.  00:9CD9                      
     415.  00:9CD9                      ;;=====================================================
     416.  00:9CD9                      ;;ACCION_PLANTA
     417.  00:9CD9                      ;;=====================================================	
     418.  00:9CD9                      ; función: 	
     419.  00:9CD9                      ; entrada: 	
     420.  00:9CD9                      ; salida: 	-
     421.  00:9CD9                      accion_planta:
     422.  00:9CD9                      fin_accion_planta:
     423.  00:9CD9  C9                  	RET
     424.  00:9CDA                      
     425.  00:9CDA                      
     426.  00:9CDA                      ;;=====================================================
     427.  00:9CDA                      ;;ACCION_VIDAEXTRA
     428.  00:9CDA                      ;;=====================================================	
     429.  00:9CDA                      ; función: 	
     430.  00:9CDA                      ; entrada: 	
     431.  00:9CDA                      ; salida: 	-
     432.  00:9CDA                      accion_vidaextra:
     433.  00:9CDA                      fin_accion_vidaextra:
     434.  00:9CDA  C9                  	RET
     435.  00:9CDB                      
     436.  00:9CDB                      
     437.  00:9CDB                      ;;=====================================================
     438.  00:9CDB                      ;;ACCION_BALLESTA
     439.  00:9CDB                      ;;=====================================================	
     440.  00:9CDB                      ; función: 	
     441.  00:9CDB                      ; entrada: 	
     442.  00:9CDB                      ; salida: 	-
     443.  00:9CDB                      accion_ballesta:
     444.  00:9CDB                      fin_accion_ballesta:
     445.  00:9CDB  C9                  	RET
     446.  00:9CDC                      
     447.  00:9CDC                      
     173   00:9CDC                      	
     174   00:9CDC                      
     175   00:9CDC                      ;;=====================================================
     176   00:9CDC                      ;;DEFINICIÓN DE SUBRUTINAS DE FERNANDO PARA COMPRESIÓN Y SONIDO
     177   00:9CDC                      ;;=====================================================
     178   00:9CDC                      ;Este include lleva la rutina de descompresión de ROM/RAM a VRAM de pletter
     179   00:9CDC                      ;Está adaptada de la original a sjasm
     180   00:9CDC                      ;	HL = RAM/ROM source	; DE = VRAM destination
     181   00:9CDC                      depack_VRAM:
     182   00:9CDC                      	include "PL_VRAM_Depack_SJASM.asm"
       1.  00:9CDC                      ;-----------------------------------------------------------
       2.  00:9CDC                      ; Pletter v0.5b VRAM Depacker v1.1 - 16Kb version
       3.  00:9CDC                      ; HL = RAM/ROM source ; DE = VRAM destination
       4.  00:9CDC                      ;-----------------------------------------------------------
       5.  00:9CDC  F3                  	di
       6.  00:9CDD                      
       7.  00:9CDD                      ; VRAM address setup
       8.  00:9CDD  7B                  	ld	a,e
       9.  00:9CDE  D3 99               	out	[099h],a
      10.  00:9CE0  7A                  	ld	a,d
      11.  00:9CE1  F6 40               	or	040h
      12.  00:9CE3  D3 99               	out	[099h],a
      13.  00:9CE5                      
      14.  00:9CE5                      ; Initialization
      15.  00:9CE5  7E                  	ld	a,[hl]
      16.  00:9CE6  23                  	inc	hl
      17.  00:9CE7  D9                  	exx
      18.  00:9CE8  11 00 00            	ld	de,0
      19.  00:9CEB  87                  	add	a,a
      20.  00:9CEC  3C                  	inc	a
      21.  00:9CED  CB 13               	rl	e
      22.  00:9CEF  87                  	add	a,a
      23.  00:9CF0  CB 13               	rl	e
      24.  00:9CF2  87                  	add	a,a
      25.  00:9CF3  CB 13               	rl	e
      26.  00:9CF5  CB 13               	rl	e
      27.  00:9CF7  21 AE 9D            	ld	hl,modes
      28.  00:9CFA  19                  	add	hl,de
      29.  00:9CFB  5E                  	ld	e,[hl]
      30.  00:9CFC  DD 6B               	ld	ixl,e
      31.  00:9CFE  23                  	inc	hl
      32.  00:9CFF  5E                  	ld	e,[hl]
      33.  00:9D00  DD 63               	ld	ixh,e
      34.  00:9D02  1E 01               	ld	e,1
      35.  00:9D04  D9                  	exx
      36.  00:9D05  FD 21 0E 9D         	ld	iy,loop
      37.  00:9D09                      
      38.  00:9D09                      ; Main depack loop
      39.  00:9D09  0E 98               literal:ld	c,098h
      40.  00:9D0B  ED A3               	outi
      41.  00:9D0D  13                  	inc	de
      42.  00:9D0E  87                  loop:	add	a,a
      43.  00:9D0F  CC A2 9D              	call	z,getbit
      44.  00:9D12  30 F5               	jr	nc,literal
      45.  00:9D14                      
      46.  00:9D14                      ; Compressed data
      47.  00:9D14  D9                  	exx
      48.  00:9D15  62                  	ld	h,d
      49.  00:9D16  6B                  	ld	l,e
      50.  00:9D17  87                  getlen: add	a,a
      51.  00:9D18  CC A6 9D            	call	z,getbitexx
      52.  00:9D1B  30 1D               	jr	nc,lenok
      53.  00:9D1D  87                  lus:	add	a,a
      54.  00:9D1E  CC A6 9D            	call	z,getbitexx
      55.  00:9D21  ED 6A               	adc	hl,hl
      56.  00:9D23  D8                  	ret	c
      57.  00:9D24  87                  	add	a,a
      58.  00:9D25  CC A6 9D            	call	z,getbitexx
      59.  00:9D28  30 10               	jr	nc,lenok
      60.  00:9D2A  87                  	add	a,a
      61.  00:9D2B  CC A6 9D            	call	z,getbitexx
      62.  00:9D2E  ED 6A               	adc	hl,hl
      63.  00:9D30  DA AC 9D            	jp	c,Depack_out
      64.  00:9D33  87                  	add	a,a
      65.  00:9D34  CC A6 9D            	call	z,getbitexx
      66.  00:9D37  DA 1D 9D            	jp	c,lus
      67.  00:9D3A  23                  lenok:  inc	hl
      68.  00:9D3B  D9                  	exx
      69.  00:9D3C  4E                  	ld	c,[hl]
      70.  00:9D3D  23                  	inc	hl
      71.  00:9D3E  06 00               	ld	b,0
      72.  00:9D40  CB 79               	bit	7,c
      73.  00:9D42  CA 75 9D            	jp	z,offsok
      74.  00:9D45  DD E9               	jp	ix
      75.  00:9D47                      
      76.  00:9D47  87                  mode7:  add	a,a
      77.  00:9D48  CC A2 9D              	call	z,getbit
      78.  00:9D4B  CB 10               	rl	b
      79.  00:9D4D  87                  mode6:	add	a,a
      80.  00:9D4E  CC A2 9D              	call	z,getbit
      81.  00:9D51  CB 10               	rl	b
      82.  00:9D53  87                  mode5:  add	a,a
      83.  00:9D54  CC A2 9D              	call	z,getbit
      84.  00:9D57  CB 10               	rl	b
      85.  00:9D59  87                  mode4:  add	a,a
      86.  00:9D5A  CC A2 9D              	call	z,getbit
      87.  00:9D5D  CB 10               	rl	b
      88.  00:9D5F  87                  mode3:  add	a,a
      89.  00:9D60  CC A2 9D              	call	z,getbit
      90.  00:9D63  CB 10               	rl	b
      91.  00:9D65  87                  mode2:	add	a,a
      92.  00:9D66  CC A2 9D              	call	z,getbit
      93.  00:9D69  CB 10               	rl	b
      94.  00:9D6B  87                  	add	a,a
      95.  00:9D6C  CC A2 9D              	call	z,getbit
      96.  00:9D6F  30 04               	jr	nc,offsok
      97.  00:9D71  B7                  	or	a
      98.  00:9D72  04                  	inc	b
      99.  00:9D73  CB B9               	res	7,c
     100.  00:9D75  03                  offsok: inc	bc
     101.  00:9D76  E5                  	push	hl
     102.  00:9D77  D9                  	exx
     103.  00:9D78  E5                  	push	hl
     104.  00:9D79  D9                  	exx
     105.  00:9D7A  6B                  	ld	l,e
     106.  00:9D7B  62                  	ld	h,d
     107.  00:9D7C  ED 42               	sbc	hl,bc
     108.  00:9D7E  C1                  	pop	bc
     109.  00:9D7F  F5                  	push	af
     110.  00:9D80  7D                  .loop:	ld	a,l
     111.  00:9D81  D3 99               	out	[099h],a
     112.  00:9D83  7C                  	ld	a,h
     113.  00:9D84  00                  	nop                     ; VDP timing
     114.  00:9D85  D3 99               	out	[099h],a
     115.  00:9D87  00                  	nop                     ; VDP timing
     116.  00:9D88  DB 98               	in	a,[098h]
     117.  00:9D8A  08                  	ex	af,af'
     118.  00:9D8B  7B                  	ld	a,e
     119.  00:9D8C  00                  	nop			; VDP timing
     120.  00:9D8D  D3 99               	out	[099h],a
     121.  00:9D8F  7A                  	ld	a,d
     122.  00:9D90  F6 40               	or	040h
     123.  00:9D92  D3 99               	out	[099h],a
     124.  00:9D94  08                  	ex	af,af'
     125.  00:9D95  00                  	nop			; VDP timing
     126.  00:9D96  D3 98               	out	[098h],a
     127.  00:9D98  13                  	inc	de
     128.  00:9D99  ED A1               	cpi
     129.  00:9D9B  EA 80 9D            	jp	pe,.loop
     130.  00:9D9E  F1                  	pop	af
     131.  00:9D9F  E1                  	pop	hl
     132.  00:9DA0  FD E9               	jp	iy
     133.  00:9DA2                      
     134.  00:9DA2  7E                  getbit: ld	a,[hl]
     135.  00:9DA3  23                  	inc	hl
     136.  00:9DA4  17                  	rla
     137.  00:9DA5  C9                  	ret
     138.  00:9DA6                      
     139.  00:9DA6                      getbitexx:
     140.  00:9DA6  D9                  	exx
     141.  00:9DA7  7E                  	ld	a,[hl]
     142.  00:9DA8  23                  	inc	hl
     143.  00:9DA9  D9                  	exx
     144.  00:9DAA  17                  	rla
     145.  00:9DAB  C9                  	ret
     146.  00:9DAC                      
     147.  00:9DAC                      ; Depacker exit
     148.  00:9DAC                      Depack_out:
     149.  00:9DAC  FB                  	ei
     150.  00:9DAD  C9                  	ret
     151.  00:9DAE                      
     152.  00:9DAE                      modes:
     153.  00:9DAE  75 9D               	dw	offsok
     154.  00:9DB0  65 9D               	dw	mode2
     155.  00:9DB2  5F 9D               	dw	mode3
     156.  00:9DB4  59 9D               	dw	mode4
     157.  00:9DB6  53 9D               	dw	mode5
     158.  00:9DB8  4D 9D               	dw	mode6
     159.  00:9DBA  47 9D               	dw	mode7
     183   00:9DBC                      
     184   00:9DBC                      
     185   00:9DBC                      	
     186   00:9DBC                      ;;=====================================================
     187   00:9DBC                      ;;DEFINICIÓN DE ESTRUCTURAS
     188   00:9DBC                      ;;=====================================================		
     189   00:9DBC                      	include "estructuras.asm"
       1.  00:9DBC                      ;;=====================================================
       2.  00:9DBC                      ;;DEFINICIÓN DE ESTRUCTURAS
       3.  00:9DBC                      ;;=====================================================
       4.  00:9DBC                      
       5.  00:9DBC                      ;crear estructura
       6.  00:9DBC                      
       7.  00:9DBC                      	STRUCT ESTRUCTURA_PUNTOMIRA
       8.  00:9DBC                    < posx			DB		POSXPM
       9.  00:9DBC                    < posy			DB		POSYPM
      10.  00:9DBC                    < escena			DB		0	;valores porsibles 0 (blanco+rojo en punto de mira) y NEG 0 (al revés)
      11.  00:9DBC                    < velocidad		DB		0
      12.  00:9DBC                    < boton2_pressed  DB		0
      13.  00:9DBC                    < cadencia		DB		5	;nº de veces que se ejecutará el disparo antes de ejecutar un disparo real (porque cuando se pulsa la tecl dispara 3 ó 4 veces de rápido que va)
      14.  00:9DBC                    < ; al final he decidido (ya que el punto de mira es el prota) que lo relacionado con el prota vaya en esta estructura
      15.  00:9DBC                    < pm_aux1			DB		0	;para llegar a los 16 campos
      16.  00:9DBC                    < pm_aux2			DB		0	;para llegar a los 16 campos
      17.  00:9DBC                    < pm_aux3			DB		0	;para llegar a los 16 campos
      18.  00:9DBC                    < pm_aux4			DB		0	;para llegar a los 16 campos
      19.  00:9DBC                    < pm_aux5			DB		0	;para llegar a los 16 campos
      20.  00:9DBC                    < pm_aux6			DB		0	;para llegar a los 16 campos
      21.  00:9DBC                    < pm_aux7			DB		0	;para llegar a los 16 campos
      22.  00:9DBC                    < pm_aux8			DB		0	;para llegar a los 16 campos
      23.  00:9DBC                    < pm_aux9			DB		0	;para llegar a los 16 campos
      24.  00:9DBC                    < pm_aux10		DB		0	;para llegar a los 16 campos
      25.  00:9DBC                    < 	ENDSTRUCT;ESTRUCTURA_PUNTOMIRA
      26.  00:9DBC                      
      27.  00:9DBC                      
      28.  00:9DBC                      
      29.  00:9DBC                      	STRUCT ESTRUCTURA_ANTORCHA
      30.  00:9DBC                    < activo				DB		0	;0 no activa <>0 activo
      31.  00:9DBC                    < postilemem_antor1	DW		0	;pos en memoria ver array_antorcha de cómo se mostrará (wordaux2)	1,2
      32.  00:9DBC                    < pospantalla_antor1	DB		0	;pos en pantalla (memoria en el banco 1 se le suma 256 + TILEMAP) (wordaux1)	3
      33.  00:9DBC                    < pospantalla_antor2	DB		0	;pos en pantalla (memoria en el banco 1 se le suma 256 + TILEMAP) (wordaux1)	4
      34.  00:9DBC                    < escena				DB		0	;(va entre 0 y 1 - 0=>llama1 y llama2 o 1=>llama2 y llama1	7 - tiles 196 y 197)	5
      35.  00:9DBC                    < cont_sig_escena		DB		10	;	6
      36.  00:9DBC                    < 	ENDSTRUCT;ESTRUCTURA_ANTORCHA
      37.  00:9DBC                      
      38.  00:9DBC                      	STRUCT ESTRUCTURA_ESQUELETO
      39.  00:9DBC                    < activo				DB		0	;0 no activa <>0 activo
      40.  00:9DBC                    < postilemem_antor1	DW		0	;pos en memoria ver array_antorcha de cómo se mostrará (wordaux2)	1,2
      41.  00:9DBC                    < pospantalla_esquel1	DB		0	;pos en pantalla (memoria en el banco 1 se le suma 256 + TILEMAP) (wordaux1)	3
      42.  00:9DBC                    < pospantalla_esquel2	DB		0	;pos en pantalla (memoria en el banco 1 se le suma 256 + TILEMAP) (wordaux1)	4
      43.  00:9DBC                    < escena				DB		0	;(va entre 0 y 4 - tiles 164, 165, 164, 166)	5
      44.  00:9DBC                    < cont_sig_escena		DB		0	;	6
      45.  00:9DBC                    < 	ENDSTRUCT;ESTRUCTURA_ESQUELETO
      46.  00:9DBC                      	
      47.  00:9DBC                      
      48.  00:9DBC                      	STRUCT ESTRUCTURA_ENEMIGO
      49.  00:9DBC                    < tipo				DB		0	;(0 serpiente por ejemplo) #FF muerto o no existe
      50.  00:9DBC                    < posx				DB		5
      51.  00:9DBC                    < posy				DB		50
      52.  00:9DBC                    < color				DB		5
      53.  00:9DBC                    < escena				DB		0
      54.  00:9DBC                    < contador_siguiente_escena	DB	0
      55.  00:9DBC                    < reset_contador		DB		0
      56.  00:9DBC                    < dano				DB		0	;daño
      57.  00:9DBC                    < energia				DB		0	;energía del enemigo... si llega a 0 => existe <- 0
      58.  00:9DBC                    < ;indica el nº de sprite a mostrar y si está compuesto por uno o dos sprites y si están en horizontal o vertical
      59.  00:9DBC                    < ver_hor				DB		0
      60.  00:9DBC                    < manejador_dibujo 	DW		0
      61.  00:9DBC                    < en_aux3				DB		0
      62.  00:9DBC                    < en_aux4				DB		0
      63.  00:9DBC                    < 	ENDSTRUCT;ESTRUCTURA_ENEMIGO
      64.  00:9DBC                      	
      65.  00:9DBC                      	;~ STRUCT ESTRUCTURA_AYUDA		;vidas extra, plantas de curación de energía, reliquias				
      66.  00:9DBC                      ;~ activo				DB		0	;0 no activo <>0 activo 											0
      67.  00:9DBC                      ;~ postilemem_nousado	DW		0	;pos en memoria ver array_ayudas de cómo se mostrarán (wordaux2)	1,2
      68.  00:9DBC                      ;~ postilemem_usado	DW		0	;pos en memoria ver array_ayudas de cómo se mostrarán (wordaux2)	3,4
      69.  00:9DBC                      ;~ pospantalla			DB		0	;pos en pantalla (memoria en el banco 1 se le suma 256 + TILEMAP) (wordaux1)	5
      70.  00:9DBC                      ;~ posx				DB		0	;pos del pixel central (esquina superior + 8x)						6
      71.  00:9DBC                      ;~ posy				DB		112	;pos del pixel central (esquina superior + 8y) (para toas igual)	7
      72.  00:9DBC                      ;~ puntero_accion		DW		0	;subrutina que indica la acción si se dispara en el objeto			8,9
      73.  00:9DBC                      	;~ ENDSTRUCT;ESTRUCTURA_AYUDA
      74.  00:9DBC                      
      75.  00:9DBC                      	STRUCT ESTRUCTURA_AYUDA	
      76.  00:9DBC                    < activa				DB		0	;0 no activa <>0 activo (y muestra tiles ayudaoff)
      77.  00:9DBC                    < posx				DB		0	;punto x de la ayuda para cuando se dispare encima
      78.  00:9DBC                    < posy				DB		112	;punto y de la ayuda para cuando se dispare encima
      79.  00:9DBC                    < radiox				DB		0	;radio x de la ayuda para cuando se dispare encima
      80.  00:9DBC                    < radioy				DB		0	;radio y de la ayuda para cuando se dispare encima
      81.  00:9DBC                    < accion				DW		0	;función para acción de cada tipo de ayuda
      82.  00:9DBC                    < tiles_ayudaon		DW		0	;puntero al array con los tiles de las ayudas sin usar para wordaux2
      83.  00:9DBC                    < tiles_ayudaoff		DW		0	;puntero al array con los tiles de las ayudas sin usar para wordaux2
      84.  00:9DBC                    < pos_en_tilemap		DW		0	;calcula posición en tilemap para wordaux1
      85.  00:9DBC                    < alto				DB		2	;alto en tiles del dibujo de la puerta (filas)
      86.  00:9DBC                    < ancho				DB		2	;ancho en tiles del dibujo de la puerta (columnas)
      87.  00:9DBC                    < 	ENDSTRUCT;ESTRUCTURA_PUERTA
      88.  00:9DBC                      
      89.  00:9DBC                      	STRUCT ESTRUCTURA_PUERTA	;también servirá para la escalera
      90.  00:9DBC                    < activa				DB		0	;0 no activa <>0 activo
      91.  00:9DBC                    < posx				DB		0	;punto x de la puerta para cuando se dispare encima
      92.  00:9DBC                    < posy				DB		0	;punto y de la puerta para cuando se dispare encima
      93.  00:9DBC                    < radiox				DB		0	;radio x de la puerta para cuando se dispare encima
      94.  00:9DBC                    < radioy				DB		0	;radio y de la puerta para cuando se dispare encima
      95.  00:9DBC                    < accion				DW		0	;función para acción de cada tipo de puerta
      96.  00:9DBC                    < tiles_puerta		DW		0	;puntero al array con los tiles de las puertas para wordaux2
      97.  00:9DBC                    < pos_en_tilemap		DW		0	;calcula posición en tilemap para wordaux1
      98.  00:9DBC                    < alto				DB		0	;alto en tiles del dibujo de la puerta (filas)
      99.  00:9DBC                    < ancho				DB		0	;ancho en tiles del dibujo de la puerta (columnas)
     100.  00:9DBC                    < 	ENDSTRUCT;ESTRUCTURA_PUERTA
     101.  00:9DBC                      
     102.  00:9DBC                      
     103.  00:9DBC                      
     104.  00:9DBC                      
     105.  00:9DBC                      
     106.  00:9DBC                      
     190   00:9DBC                      	
     191   00:9DBC                      ;;=====================================================
     192   00:9DBC                      ;;DEFINICIÓN DE VARIABLES
     193   00:9DBC                      ;;=====================================================		
     194   00:9DBC                      	include "sprites.asm"
       1.  00:9DBC                      ;;=====================================================
       2.  00:9DBC                      ;;DEFINICIÓN DE SPRITES
       3.  00:9DBC                      ;;=====================================================	
       4.  00:9DBC                      
       5.  00:9DBC                      
       6.  00:9DBC                      ;; NOTA:
       7.  00:9DBC                      ;~ sprite_reliquia_oracion: on/off
       8.  00:9DBC                      ;~ sprite_reliquia_cruz: on/off
       9.  00:9DBC                      ;~ sprite_reliquia_agua: on/off
      10.  00:9DBC                      ;~ sprite_peto: on/off
      11.  00:9DBC                      ;~ sprite_planta: on/off
      12.  00:9DBC                      ;~ sprite_vida_extra: on/off
      13.  00:9DBC                      ;~ sprite_ballesta_mejorada: on/off
      14.  00:9DBC                      
      15.  00:9DBC                      ;~ iban a ser sprites pero por falta de recursos serán tiles
      16.  00:9DBC                      
      17.  00:9DBC                      
      18.  00:9DBC                      sprites_pantantalla:
      19.  00:9DBC                      
      20.  00:9DBC                      ;; PARTE 1: SPRITES COMUNES
      21.  00:9DBC                      
      22.  00:9DBC                      sprites_comunes:
      23.  00:9DBC                      sprite_punto_mira_1:	;color 8
      24.  00:9DBC                      	db #FF,#FF,#C0,#C0,#C0,#C0,#C0,#C0
      24.  00:9DBC  FF FF C0 C0 C0 C0 C0 C0 
      25.  00:9DC4                      	db #C0,#C0,#C0,#C0,#C0,#C0,#FF,#FF
      25.  00:9DC4  C0 C0 C0 C0 C0 C0 FF FF 
      26.  00:9DCC                      	db #FF,#FF,#03,#03,#03,#03,#03,#03
      26.  00:9DCC  FF FF 03 03 03 03 03 03 
      27.  00:9DD4                      	db #03,#03,#03,#03,#03,#03,#FF,#FF
      27.  00:9DD4  03 03 03 03 03 03 FF FF 
      28.  00:9DDC                      	
      29.  00:9DDC                      sprite_punto_mira_2: 	;color 15
      30.  00:9DDC                      	db #00,#00,#00,#00,#0F,#0F,#0C,#0C
      30.  00:9DDC  00 00 00 00 0F 0F 0C 0C 
      31.  00:9DE4                      	db #0C,#0C,#0F,#0F,#00,#00,#00,#00
      31.  00:9DE4  0C 0C 0F 0F 00 00 00 00 
      32.  00:9DEC                      	db #00,#00,#00,#00,#F0,#F0,#30,#30
      32.  00:9DEC  00 00 00 00 F0 F0 30 30 
      33.  00:9DF4                      	db #30,#30,#F0,#F0,#00,#00,#00,#00
      33.  00:9DF4  30 30 F0 F0 00 00 00 00 
      34.  00:9DFC                      	
      35.  00:9DFC                      sprite_punto_mira_1_mejorado:
      36.  00:9DFC                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      36.  00:9DFC  FF FF FF FF FF FF FF FF 
      37.  00:9E04                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      37.  00:9E04  FF FF FF FF FF FF FF FF 
      38.  00:9E0C                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      38.  00:9E0C  FF FF FF FF FF FF FF FF 
      39.  00:9E14                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      39.  00:9E14  FF FF FF FF FF FF FF FF 
      40.  00:9E1C                      
      41.  00:9E1C                      sprite_punto_mira_2_mejorado:
      42.  00:9E1C                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      42.  00:9E1C  FF FF FF FF FF FF FF FF 
      43.  00:9E24                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      43.  00:9E24  FF FF FF FF FF FF FF FF 
      44.  00:9E2C                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      44.  00:9E2C  FF FF FF FF FF FF FF FF 
      45.  00:9E34                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      45.  00:9E34  FF FF FF FF FF FF FF FF 
      46.  00:9E3C                      	
      47.  00:9E3C                      sprite_explosion_1:
      48.  00:9E3C                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      48.  00:9E3C  FF FF FF FF FF FF FF FF 
      49.  00:9E44                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      49.  00:9E44  FF FF FF FF FF FF FF FF 
      50.  00:9E4C                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      50.  00:9E4C  FF FF FF FF FF FF FF FF 
      51.  00:9E54                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF	
      51.  00:9E54  FF FF FF FF FF FF FF FF 
      52.  00:9E5C                      
      53.  00:9E5C                      sprite_explosion_2:
      54.  00:9E5C                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      54.  00:9E5C  FF FF FF FF FF FF FF FF 
      55.  00:9E64                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      55.  00:9E64  FF FF FF FF FF FF FF FF 
      56.  00:9E6C                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      56.  00:9E6C  FF FF FF FF FF FF FF FF 
      57.  00:9E74                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF	
      57.  00:9E74  FF FF FF FF FF FF FF FF 
      58.  00:9E7C                      fin_sprites_comunes:
      59.  00:9E7C                      
      60.  00:9E7C                      ;; PARTE 2: SPRITES NO COMUNES
      61.  00:9E7C                      
      62.  00:9E7C                      ;; ARAÑA
      63.  00:9E7C                      	
      64.  00:9E7C                      sprite_arana1_1:
      65.  00:9E7C                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      65.  00:9E7C  FF FF FF FF FF FF FF FF 
      66.  00:9E84                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      66.  00:9E84  FF FF FF FF FF FF FF FF 
      67.  00:9E8C                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      67.  00:9E8C  FF FF FF FF FF FF FF FF 
      68.  00:9E94                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      68.  00:9E94  FF FF FF FF FF FF FF FF 
      69.  00:9E9C                      	
      70.  00:9E9C                      sprite_arana1_2:
      71.  00:9E9C                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      71.  00:9E9C  FF FF FF FF FF FF FF FF 
      72.  00:9EA4                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      72.  00:9EA4  FF FF FF FF FF FF FF FF 
      73.  00:9EAC                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      73.  00:9EAC  FF FF FF FF FF FF FF FF 
      74.  00:9EB4                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      74.  00:9EB4  FF FF FF FF FF FF FF FF 
      75.  00:9EBC                      
      76.  00:9EBC                      ;; MURCIELAGO
      77.  00:9EBC                      	
      78.  00:9EBC                      sprite_murcielago1_1:
      79.  00:9EBC                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      79.  00:9EBC  FF FF FF FF FF FF FF FF 
      80.  00:9EC4                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      80.  00:9EC4  FF FF FF FF FF FF FF FF 
      81.  00:9ECC                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      81.  00:9ECC  FF FF FF FF FF FF FF FF 
      82.  00:9ED4                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      82.  00:9ED4  FF FF FF FF FF FF FF FF 
      83.  00:9EDC                      	
      84.  00:9EDC                      sprite_murcielago1_2:
      85.  00:9EDC                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      85.  00:9EDC  FF FF FF FF FF FF FF FF 
      86.  00:9EE4                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      86.  00:9EE4  FF FF FF FF FF FF FF FF 
      87.  00:9EEC                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      87.  00:9EEC  FF FF FF FF FF FF FF FF 
      88.  00:9EF4                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF	
      88.  00:9EF4  FF FF FF FF FF FF FF FF 
      89.  00:9EFC                      
      90.  00:9EFC                      ;; SERPIENTE
      91.  00:9EFC                      
      92.  00:9EFC                      sprite_serpiente1_1:
      93.  00:9EFC                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      93.  00:9EFC  FF FF FF FF FF FF FF FF 
      94.  00:9F04                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      94.  00:9F04  FF FF FF FF FF FF FF FF 
      95.  00:9F0C                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      95.  00:9F0C  FF FF FF FF FF FF FF FF 
      96.  00:9F14                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      96.  00:9F14  FF FF FF FF FF FF FF FF 
      97.  00:9F1C                      	
      98.  00:9F1C                      sprite_serpiente1_2:
      99.  00:9F1C                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      99.  00:9F1C  FF FF FF FF FF FF FF FF 
     100.  00:9F24                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     100.  00:9F24  FF FF FF FF FF FF FF FF 
     101.  00:9F2C                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     101.  00:9F2C  FF FF FF FF FF FF FF FF 
     102.  00:9F34                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     102.  00:9F34  FF FF FF FF FF FF FF FF 
     103.  00:9F3C                      	
     104.  00:9F3C                      sprite_serpiente2_1:
     105.  00:9F3C                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     105.  00:9F3C  FF FF FF FF FF FF FF FF 
     106.  00:9F44                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     106.  00:9F44  FF FF FF FF FF FF FF FF 
     107.  00:9F4C                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     107.  00:9F4C  FF FF FF FF FF FF FF FF 
     108.  00:9F54                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     108.  00:9F54  FF FF FF FF FF FF FF FF 
     109.  00:9F5C                      	
     110.  00:9F5C                      sprite_serpiente2_2:
     111.  00:9F5C                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     111.  00:9F5C  FF FF FF FF FF FF FF FF 
     112.  00:9F64                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     112.  00:9F64  FF FF FF FF FF FF FF FF 
     113.  00:9F6C                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     113.  00:9F6C  FF FF FF FF FF FF FF FF 
     114.  00:9F74                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     114.  00:9F74  FF FF FF FF FF FF FF FF 
     115.  00:9F7C                      
     116.  00:9F7C                      ;; ZOMBI
     117.  00:9F7C                      
     118.  00:9F7C                      sprite_zombi1_1_1:
     119.  00:9F7C                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     119.  00:9F7C  FF FF FF FF FF FF FF FF 
     120.  00:9F84                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     120.  00:9F84  FF FF FF FF FF FF FF FF 
     121.  00:9F8C                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     121.  00:9F8C  FF FF FF FF FF FF FF FF 
     122.  00:9F94                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     122.  00:9F94  FF FF FF FF FF FF FF FF 
     123.  00:9F9C                      
     124.  00:9F9C                      sprite_zombi1_2_1:
     125.  00:9F9C                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     125.  00:9F9C  FF FF FF FF FF FF FF FF 
     126.  00:9FA4                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     126.  00:9FA4  FF FF FF FF FF FF FF FF 
     127.  00:9FAC                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     127.  00:9FAC  FF FF FF FF FF FF FF FF 
     128.  00:9FB4                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     128.  00:9FB4  FF FF FF FF FF FF FF FF 
     129.  00:9FBC                      	
     130.  00:9FBC                      sprite_zombi1_3_1:
     131.  00:9FBC                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     131.  00:9FBC  FF FF FF FF FF FF FF FF 
     132.  00:9FC4                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     132.  00:9FC4  FF FF FF FF FF FF FF FF 
     133.  00:9FCC                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     133.  00:9FCC  FF FF FF FF FF FF FF FF 
     134.  00:9FD4                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     134.  00:9FD4  FF FF FF FF FF FF FF FF 
     135.  00:9FDC                      	
     136.  00:9FDC                      sprite_zombi1_4_1:
     137.  00:9FDC                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     137.  00:9FDC  FF FF FF FF FF FF FF FF 
     138.  00:9FE4                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     138.  00:9FE4  FF FF FF FF FF FF FF FF 
     139.  00:9FEC                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     139.  00:9FEC  FF FF FF FF FF FF FF FF 
     140.  00:9FF4                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     140.  00:9FF4  FF FF FF FF FF FF FF FF 
     141.  00:9FFC                      	
     142.  00:9FFC                      sprite_zombi1_1_2:
     143.  00:9FFC                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     143.  00:9FFC  FF FF FF FF FF FF FF FF 
     144.  00:A004                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     144.  00:A004  FF FF FF FF FF FF FF FF 
     145.  00:A00C                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     145.  00:A00C  FF FF FF FF FF FF FF FF 
     146.  00:A014                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     146.  00:A014  FF FF FF FF FF FF FF FF 
     147.  00:A01C                      
     148.  00:A01C                      sprite_zombi1_2_2:
     149.  00:A01C                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     149.  00:A01C  FF FF FF FF FF FF FF FF 
     150.  00:A024                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     150.  00:A024  FF FF FF FF FF FF FF FF 
     151.  00:A02C                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     151.  00:A02C  FF FF FF FF FF FF FF FF 
     152.  00:A034                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     152.  00:A034  FF FF FF FF FF FF FF FF 
     153.  00:A03C                      	
     154.  00:A03C                      sprite_zombi1_3_2:
     155.  00:A03C                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     155.  00:A03C  FF FF FF FF FF FF FF FF 
     156.  00:A044                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     156.  00:A044  FF FF FF FF FF FF FF FF 
     157.  00:A04C                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     157.  00:A04C  FF FF FF FF FF FF FF FF 
     158.  00:A054                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     158.  00:A054  FF FF FF FF FF FF FF FF 
     159.  00:A05C                      	
     160.  00:A05C                      sprite_zombi1_4_2:
     161.  00:A05C                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     161.  00:A05C  FF FF FF FF FF FF FF FF 
     162.  00:A064                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     162.  00:A064  FF FF FF FF FF FF FF FF 
     163.  00:A06C                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     163.  00:A06C  FF FF FF FF FF FF FF FF 
     164.  00:A074                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     164.  00:A074  FF FF FF FF FF FF FF FF 
     165.  00:A07C                      	
     166.  00:A07C                      sprite_zombi2_1_1:
     167.  00:A07C                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     167.  00:A07C  FF FF FF FF FF FF FF FF 
     168.  00:A084                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     168.  00:A084  FF FF FF FF FF FF FF FF 
     169.  00:A08C                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     169.  00:A08C  FF FF FF FF FF FF FF FF 
     170.  00:A094                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     170.  00:A094  FF FF FF FF FF FF FF FF 
     171.  00:A09C                      
     172.  00:A09C                      sprite_zombi2_2_1:
     173.  00:A09C                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     173.  00:A09C  FF FF FF FF FF FF FF FF 
     174.  00:A0A4                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     174.  00:A0A4  FF FF FF FF FF FF FF FF 
     175.  00:A0AC                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     175.  00:A0AC  FF FF FF FF FF FF FF FF 
     176.  00:A0B4                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     176.  00:A0B4  FF FF FF FF FF FF FF FF 
     177.  00:A0BC                      	
     178.  00:A0BC                      sprite_zombi2_3_1:
     179.  00:A0BC                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     179.  00:A0BC  FF FF FF FF FF FF FF FF 
     180.  00:A0C4                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     180.  00:A0C4  FF FF FF FF FF FF FF FF 
     181.  00:A0CC                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     181.  00:A0CC  FF FF FF FF FF FF FF FF 
     182.  00:A0D4                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     182.  00:A0D4  FF FF FF FF FF FF FF FF 
     183.  00:A0DC                      	
     184.  00:A0DC                      sprite_zombi2_4_1:
     185.  00:A0DC                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     185.  00:A0DC  FF FF FF FF FF FF FF FF 
     186.  00:A0E4                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     186.  00:A0E4  FF FF FF FF FF FF FF FF 
     187.  00:A0EC                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     187.  00:A0EC  FF FF FF FF FF FF FF FF 
     188.  00:A0F4                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     188.  00:A0F4  FF FF FF FF FF FF FF FF 
     189.  00:A0FC                      	
     190.  00:A0FC                      sprite_zombi2_1_2:
     191.  00:A0FC                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     191.  00:A0FC  FF FF FF FF FF FF FF FF 
     192.  00:A104                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     192.  00:A104  FF FF FF FF FF FF FF FF 
     193.  00:A10C                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     193.  00:A10C  FF FF FF FF FF FF FF FF 
     194.  00:A114                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     194.  00:A114  FF FF FF FF FF FF FF FF 
     195.  00:A11C                      
     196.  00:A11C                      sprite_zombi2_2_2:
     197.  00:A11C                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     197.  00:A11C  FF FF FF FF FF FF FF FF 
     198.  00:A124                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     198.  00:A124  FF FF FF FF FF FF FF FF 
     199.  00:A12C                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     199.  00:A12C  FF FF FF FF FF FF FF FF 
     200.  00:A134                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     200.  00:A134  FF FF FF FF FF FF FF FF 
     201.  00:A13C                      	
     202.  00:A13C                      sprite_zombi2_3_2:
     203.  00:A13C                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     203.  00:A13C  FF FF FF FF FF FF FF FF 
     204.  00:A144                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     204.  00:A144  FF FF FF FF FF FF FF FF 
     205.  00:A14C                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     205.  00:A14C  FF FF FF FF FF FF FF FF 
     206.  00:A154                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     206.  00:A154  FF FF FF FF FF FF FF FF 
     207.  00:A15C                      	
     208.  00:A15C                      sprite_zombi2_4_2:
     209.  00:A15C                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     209.  00:A15C  FF FF FF FF FF FF FF FF 
     210.  00:A164                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     210.  00:A164  FF FF FF FF FF FF FF FF 
     211.  00:A16C                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     211.  00:A16C  FF FF FF FF FF FF FF FF 
     212.  00:A174                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     212.  00:A174  FF FF FF FF FF FF FF FF 
     213.  00:A17C                      	
     214.  00:A17C                      ;; CABALLERO
     215.  00:A17C                      
     216.  00:A17C                      sprite_caballero1_1_1:
     217.  00:A17C                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     217.  00:A17C  FF FF FF FF FF FF FF FF 
     218.  00:A184                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     218.  00:A184  FF FF FF FF FF FF FF FF 
     219.  00:A18C                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     219.  00:A18C  FF FF FF FF FF FF FF FF 
     220.  00:A194                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     220.  00:A194  FF FF FF FF FF FF FF FF 
     221.  00:A19C                      
     222.  00:A19C                      sprite_caballero1_2_1:
     223.  00:A19C                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     223.  00:A19C  FF FF FF FF FF FF FF FF 
     224.  00:A1A4                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     224.  00:A1A4  FF FF FF FF FF FF FF FF 
     225.  00:A1AC                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     225.  00:A1AC  FF FF FF FF FF FF FF FF 
     226.  00:A1B4                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     226.  00:A1B4  FF FF FF FF FF FF FF FF 
     227.  00:A1BC                      	
     228.  00:A1BC                      sprite_caballero1_3_1:
     229.  00:A1BC                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     229.  00:A1BC  FF FF FF FF FF FF FF FF 
     230.  00:A1C4                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     230.  00:A1C4  FF FF FF FF FF FF FF FF 
     231.  00:A1CC                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     231.  00:A1CC  FF FF FF FF FF FF FF FF 
     232.  00:A1D4                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     232.  00:A1D4  FF FF FF FF FF FF FF FF 
     233.  00:A1DC                      	
     234.  00:A1DC                      sprite_caballero1_4_1:
     235.  00:A1DC                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     235.  00:A1DC  FF FF FF FF FF FF FF FF 
     236.  00:A1E4                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     236.  00:A1E4  FF FF FF FF FF FF FF FF 
     237.  00:A1EC                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     237.  00:A1EC  FF FF FF FF FF FF FF FF 
     238.  00:A1F4                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     238.  00:A1F4  FF FF FF FF FF FF FF FF 
     239.  00:A1FC                      	
     240.  00:A1FC                      sprite_caballero1_1_2:
     241.  00:A1FC                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     241.  00:A1FC  FF FF FF FF FF FF FF FF 
     242.  00:A204                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     242.  00:A204  FF FF FF FF FF FF FF FF 
     243.  00:A20C                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     243.  00:A20C  FF FF FF FF FF FF FF FF 
     244.  00:A214                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     244.  00:A214  FF FF FF FF FF FF FF FF 
     245.  00:A21C                      
     246.  00:A21C                      sprite_caballero1_2_2:
     247.  00:A21C                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     247.  00:A21C  FF FF FF FF FF FF FF FF 
     248.  00:A224                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     248.  00:A224  FF FF FF FF FF FF FF FF 
     249.  00:A22C                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     249.  00:A22C  FF FF FF FF FF FF FF FF 
     250.  00:A234                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     250.  00:A234  FF FF FF FF FF FF FF FF 
     251.  00:A23C                      	
     252.  00:A23C                      sprite_caballero1_3_2:
     253.  00:A23C                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     253.  00:A23C  FF FF FF FF FF FF FF FF 
     254.  00:A244                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     254.  00:A244  FF FF FF FF FF FF FF FF 
     255.  00:A24C                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     255.  00:A24C  FF FF FF FF FF FF FF FF 
     256.  00:A254                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     256.  00:A254  FF FF FF FF FF FF FF FF 
     257.  00:A25C                      	
     258.  00:A25C                      sprite_caballero1_4_2:
     259.  00:A25C                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     259.  00:A25C  FF FF FF FF FF FF FF FF 
     260.  00:A264                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     260.  00:A264  FF FF FF FF FF FF FF FF 
     261.  00:A26C                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     261.  00:A26C  FF FF FF FF FF FF FF FF 
     262.  00:A274                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     262.  00:A274  FF FF FF FF FF FF FF FF 
     263.  00:A27C                      	
     264.  00:A27C                      sprite_caballero2_1_1:
     265.  00:A27C                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     265.  00:A27C  FF FF FF FF FF FF FF FF 
     266.  00:A284                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     266.  00:A284  FF FF FF FF FF FF FF FF 
     267.  00:A28C                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     267.  00:A28C  FF FF FF FF FF FF FF FF 
     268.  00:A294                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     268.  00:A294  FF FF FF FF FF FF FF FF 
     269.  00:A29C                      
     270.  00:A29C                      sprite_caballero2_2_1:
     271.  00:A29C                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     271.  00:A29C  FF FF FF FF FF FF FF FF 
     272.  00:A2A4                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     272.  00:A2A4  FF FF FF FF FF FF FF FF 
     273.  00:A2AC                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     273.  00:A2AC  FF FF FF FF FF FF FF FF 
     274.  00:A2B4                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     274.  00:A2B4  FF FF FF FF FF FF FF FF 
     275.  00:A2BC                      	
     276.  00:A2BC                      sprite_caballero2_3_1:
     277.  00:A2BC                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     277.  00:A2BC  FF FF FF FF FF FF FF FF 
     278.  00:A2C4                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     278.  00:A2C4  FF FF FF FF FF FF FF FF 
     279.  00:A2CC                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     279.  00:A2CC  FF FF FF FF FF FF FF FF 
     280.  00:A2D4                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     280.  00:A2D4  FF FF FF FF FF FF FF FF 
     281.  00:A2DC                      	
     282.  00:A2DC                      sprite_caballero2_4_1:
     283.  00:A2DC                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     283.  00:A2DC  FF FF FF FF FF FF FF FF 
     284.  00:A2E4                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     284.  00:A2E4  FF FF FF FF FF FF FF FF 
     285.  00:A2EC                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     285.  00:A2EC  FF FF FF FF FF FF FF FF 
     286.  00:A2F4                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     286.  00:A2F4  FF FF FF FF FF FF FF FF 
     287.  00:A2FC                      	
     288.  00:A2FC                      sprite_caballero2_1_2:
     289.  00:A2FC                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     289.  00:A2FC  FF FF FF FF FF FF FF FF 
     290.  00:A304                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     290.  00:A304  FF FF FF FF FF FF FF FF 
     291.  00:A30C                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     291.  00:A30C  FF FF FF FF FF FF FF FF 
     292.  00:A314                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     292.  00:A314  FF FF FF FF FF FF FF FF 
     293.  00:A31C                      
     294.  00:A31C                      sprite_caballero2_2_2:
     295.  00:A31C                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     295.  00:A31C  FF FF FF FF FF FF FF FF 
     296.  00:A324                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     296.  00:A324  FF FF FF FF FF FF FF FF 
     297.  00:A32C                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     297.  00:A32C  FF FF FF FF FF FF FF FF 
     298.  00:A334                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     298.  00:A334  FF FF FF FF FF FF FF FF 
     299.  00:A33C                      	
     300.  00:A33C                      sprite_caballero2_3_2:
     301.  00:A33C                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     301.  00:A33C  FF FF FF FF FF FF FF FF 
     302.  00:A344                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     302.  00:A344  FF FF FF FF FF FF FF FF 
     303.  00:A34C                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     303.  00:A34C  FF FF FF FF FF FF FF FF 
     304.  00:A354                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     304.  00:A354  FF FF FF FF FF FF FF FF 
     305.  00:A35C                      	
     306.  00:A35C                      sprite_caballero2_4_2:
     307.  00:A35C                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     307.  00:A35C  FF FF FF FF FF FF FF FF 
     308.  00:A364                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     308.  00:A364  FF FF FF FF FF FF FF FF 
     309.  00:A36C                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     309.  00:A36C  FF FF FF FF FF FF FF FF 
     310.  00:A374                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     310.  00:A374  FF FF FF FF FF FF FF FF 
     311.  00:A37C                      	
     312.  00:A37C                      ;; LLAMA
     313.  00:A37C                      
     314.  00:A37C                      sprite_llama1_1:	
     315.  00:A37C                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     315.  00:A37C  FF FF FF FF FF FF FF FF 
     316.  00:A384                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     316.  00:A384  FF FF FF FF FF FF FF FF 
     317.  00:A38C                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     317.  00:A38C  FF FF FF FF FF FF FF FF 
     318.  00:A394                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     318.  00:A394  FF FF FF FF FF FF FF FF 
     319.  00:A39C                      	
     320.  00:A39C                      sprite_llama2_1:	
     321.  00:A39C                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     321.  00:A39C  FF FF FF FF FF FF FF FF 
     322.  00:A3A4                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     322.  00:A3A4  FF FF FF FF FF FF FF FF 
     323.  00:A3AC                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     323.  00:A3AC  FF FF FF FF FF FF FF FF 
     324.  00:A3B4                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF	
     324.  00:A3B4  FF FF FF FF FF FF FF FF 
     325.  00:A3BC                      	
     326.  00:A3BC                      sprite_llama1_2:	
     327.  00:A3BC                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     327.  00:A3BC  FF FF FF FF FF FF FF FF 
     328.  00:A3C4                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     328.  00:A3C4  FF FF FF FF FF FF FF FF 
     329.  00:A3CC                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     329.  00:A3CC  FF FF FF FF FF FF FF FF 
     330.  00:A3D4                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     330.  00:A3D4  FF FF FF FF FF FF FF FF 
     331.  00:A3DC                      	
     332.  00:A3DC                      sprite_llama2_2:	
     333.  00:A3DC                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     333.  00:A3DC  FF FF FF FF FF FF FF FF 
     334.  00:A3E4                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     334.  00:A3E4  FF FF FF FF FF FF FF FF 
     335.  00:A3EC                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     335.  00:A3EC  FF FF FF FF FF FF FF FF 
     336.  00:A3F4                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF			
     336.  00:A3F4  FF FF FF FF FF FF FF FF 
     337.  00:A3FC                      	
     338.  00:A3FC                      ;; FANTASMA
     339.  00:A3FC                      
     340.  00:A3FC                      sprite_fantasma1_1:
     341.  00:A3FC                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     341.  00:A3FC  FF FF FF FF FF FF FF FF 
     342.  00:A404                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     342.  00:A404  FF FF FF FF FF FF FF FF 
     343.  00:A40C                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     343.  00:A40C  FF FF FF FF FF FF FF FF 
     344.  00:A414                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     344.  00:A414  FF FF FF FF FF FF FF FF 
     345.  00:A41C                      
     346.  00:A41C                      sprite_fantasma2_1:
     347.  00:A41C                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     347.  00:A41C  FF FF FF FF FF FF FF FF 
     348.  00:A424                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     348.  00:A424  FF FF FF FF FF FF FF FF 
     349.  00:A42C                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     349.  00:A42C  FF FF FF FF FF FF FF FF 
     350.  00:A434                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     350.  00:A434  FF FF FF FF FF FF FF FF 
     351.  00:A43C                      
     352.  00:A43C                      sprite_fantasma1_2:
     353.  00:A43C                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     353.  00:A43C  FF FF FF FF FF FF FF FF 
     354.  00:A444                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     354.  00:A444  FF FF FF FF FF FF FF FF 
     355.  00:A44C                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     355.  00:A44C  FF FF FF FF FF FF FF FF 
     356.  00:A454                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     356.  00:A454  FF FF FF FF FF FF FF FF 
     357.  00:A45C                      
     358.  00:A45C                      sprite_fantasma2_2:
     359.  00:A45C                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     359.  00:A45C  FF FF FF FF FF FF FF FF 
     360.  00:A464                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     360.  00:A464  FF FF FF FF FF FF FF FF 
     361.  00:A46C                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     361.  00:A46C  FF FF FF FF FF FF FF FF 
     362.  00:A474                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF	
     362.  00:A474  FF FF FF FF FF FF FF FF 
     363.  00:A47C                      	
     364.  00:A47C                      ;; MAGIA
     365.  00:A47C                      
     366.  00:A47C                      sprite_magia1_1:
     367.  00:A47C                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     367.  00:A47C  FF FF FF FF FF FF FF FF 
     368.  00:A484                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     368.  00:A484  FF FF FF FF FF FF FF FF 
     369.  00:A48C                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     369.  00:A48C  FF FF FF FF FF FF FF FF 
     370.  00:A494                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     370.  00:A494  FF FF FF FF FF FF FF FF 
     371.  00:A49C                      
     372.  00:A49C                      sprite_magia2_1:
     373.  00:A49C                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     373.  00:A49C  FF FF FF FF FF FF FF FF 
     374.  00:A4A4                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     374.  00:A4A4  FF FF FF FF FF FF FF FF 
     375.  00:A4AC                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     375.  00:A4AC  FF FF FF FF FF FF FF FF 
     376.  00:A4B4                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     376.  00:A4B4  FF FF FF FF FF FF FF FF 
     377.  00:A4BC                      
     378.  00:A4BC                      sprite_magia1_2:
     379.  00:A4BC                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     379.  00:A4BC  FF FF FF FF FF FF FF FF 
     380.  00:A4C4                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     380.  00:A4C4  FF FF FF FF FF FF FF FF 
     381.  00:A4CC                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     381.  00:A4CC  FF FF FF FF FF FF FF FF 
     382.  00:A4D4                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     382.  00:A4D4  FF FF FF FF FF FF FF FF 
     383.  00:A4DC                      
     384.  00:A4DC                      sprite_magia2_2:
     385.  00:A4DC                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     385.  00:A4DC  FF FF FF FF FF FF FF FF 
     386.  00:A4E4                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     386.  00:A4E4  FF FF FF FF FF FF FF FF 
     387.  00:A4EC                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     387.  00:A4EC  FF FF FF FF FF FF FF FF 
     388.  00:A4F4                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF	
     388.  00:A4F4  FF FF FF FF FF FF FF FF 
     389.  00:A4FC                      	
     390.  00:A4FC                      	
     391.  00:A4FC                      ;; BEHOLDER
     392.  00:A4FC                      
     393.  00:A4FC                      sprite_beholder1_1:
     394.  00:A4FC                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     394.  00:A4FC  FF FF FF FF FF FF FF FF 
     395.  00:A504                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     395.  00:A504  FF FF FF FF FF FF FF FF 
     396.  00:A50C                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     396.  00:A50C  FF FF FF FF FF FF FF FF 
     397.  00:A514                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     397.  00:A514  FF FF FF FF FF FF FF FF 
     398.  00:A51C                      
     399.  00:A51C                      sprite_beholder2_1:
     400.  00:A51C                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     400.  00:A51C  FF FF FF FF FF FF FF FF 
     401.  00:A524                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     401.  00:A524  FF FF FF FF FF FF FF FF 
     402.  00:A52C                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     402.  00:A52C  FF FF FF FF FF FF FF FF 
     403.  00:A534                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     403.  00:A534  FF FF FF FF FF FF FF FF 
     404.  00:A53C                      
     405.  00:A53C                      sprite_beholder3_1:
     406.  00:A53C                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     406.  00:A53C  FF FF FF FF FF FF FF FF 
     407.  00:A544                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     407.  00:A544  FF FF FF FF FF FF FF FF 
     408.  00:A54C                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     408.  00:A54C  FF FF FF FF FF FF FF FF 
     409.  00:A554                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     409.  00:A554  FF FF FF FF FF FF FF FF 
     410.  00:A55C                      
     411.  00:A55C                      sprite_beholder4_1:
     412.  00:A55C                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     412.  00:A55C  FF FF FF FF FF FF FF FF 
     413.  00:A564                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     413.  00:A564  FF FF FF FF FF FF FF FF 
     414.  00:A56C                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     414.  00:A56C  FF FF FF FF FF FF FF FF 
     415.  00:A574                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF	
     415.  00:A574  FF FF FF FF FF FF FF FF 
     416.  00:A57C                      	
     417.  00:A57C                      sprite_beholder1_2:
     418.  00:A57C                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     418.  00:A57C  FF FF FF FF FF FF FF FF 
     419.  00:A584                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     419.  00:A584  FF FF FF FF FF FF FF FF 
     420.  00:A58C                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     420.  00:A58C  FF FF FF FF FF FF FF FF 
     421.  00:A594                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     421.  00:A594  FF FF FF FF FF FF FF FF 
     422.  00:A59C                      
     423.  00:A59C                      sprite_beholder2_2:
     424.  00:A59C                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     424.  00:A59C  FF FF FF FF FF FF FF FF 
     425.  00:A5A4                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     425.  00:A5A4  FF FF FF FF FF FF FF FF 
     426.  00:A5AC                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     426.  00:A5AC  FF FF FF FF FF FF FF FF 
     427.  00:A5B4                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     427.  00:A5B4  FF FF FF FF FF FF FF FF 
     428.  00:A5BC                      
     429.  00:A5BC                      sprite_beholder3_2:
     430.  00:A5BC                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     430.  00:A5BC  FF FF FF FF FF FF FF FF 
     431.  00:A5C4                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     431.  00:A5C4  FF FF FF FF FF FF FF FF 
     432.  00:A5CC                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     432.  00:A5CC  FF FF FF FF FF FF FF FF 
     433.  00:A5D4                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     433.  00:A5D4  FF FF FF FF FF FF FF FF 
     434.  00:A5DC                      
     435.  00:A5DC                      sprite_beholder4_2:
     436.  00:A5DC                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     436.  00:A5DC  FF FF FF FF FF FF FF FF 
     437.  00:A5E4                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     437.  00:A5E4  FF FF FF FF FF FF FF FF 
     438.  00:A5EC                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     438.  00:A5EC  FF FF FF FF FF FF FF FF 
     439.  00:A5F4                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF		
     439.  00:A5F4  FF FF FF FF FF FF FF FF 
     440.  00:A5FC                      	
     441.  00:A5FC                      ;; VAMPIRO
     442.  00:A5FC                      
     443.  00:A5FC                      sprite_vampiro1_1:
     444.  00:A5FC                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     444.  00:A5FC  FF FF FF FF FF FF FF FF 
     445.  00:A604                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     445.  00:A604  FF FF FF FF FF FF FF FF 
     446.  00:A60C                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     446.  00:A60C  FF FF FF FF FF FF FF FF 
     447.  00:A614                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     447.  00:A614  FF FF FF FF FF FF FF FF 
     448.  00:A61C                      
     449.  00:A61C                      sprite_vampiro2_1:
     450.  00:A61C                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     450.  00:A61C  FF FF FF FF FF FF FF FF 
     451.  00:A624                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     451.  00:A624  FF FF FF FF FF FF FF FF 
     452.  00:A62C                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     452.  00:A62C  FF FF FF FF FF FF FF FF 
     453.  00:A634                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     453.  00:A634  FF FF FF FF FF FF FF FF 
     454.  00:A63C                      
     455.  00:A63C                      sprite_vampiro1_2:
     456.  00:A63C                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     456.  00:A63C  FF FF FF FF FF FF FF FF 
     457.  00:A644                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     457.  00:A644  FF FF FF FF FF FF FF FF 
     458.  00:A64C                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     458.  00:A64C  FF FF FF FF FF FF FF FF 
     459.  00:A654                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     459.  00:A654  FF FF FF FF FF FF FF FF 
     460.  00:A65C                      
     461.  00:A65C                      sprite_vampiro2_2:
     462.  00:A65C                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     462.  00:A65C  FF FF FF FF FF FF FF FF 
     463.  00:A664                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     463.  00:A664  FF FF FF FF FF FF FF FF 
     464.  00:A66C                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     464.  00:A66C  FF FF FF FF FF FF FF FF 
     465.  00:A674                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     465.  00:A674  FF FF FF FF FF FF FF FF 
     466.  00:A67C                      	
     467.  00:A67C                      ;; MANOIZQ
     468.  00:A67C                      
     469.  00:A67C                      sprite_manoizq1:
     470.  00:A67C                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     470.  00:A67C  FF FF FF FF FF FF FF FF 
     471.  00:A684                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     471.  00:A684  FF FF FF FF FF FF FF FF 
     472.  00:A68C                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     472.  00:A68C  FF FF FF FF FF FF FF FF 
     473.  00:A694                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     473.  00:A694  FF FF FF FF FF FF FF FF 
     474.  00:A69C                      	
     475.  00:A69C                      sprite_manoizq2:
     476.  00:A69C                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     476.  00:A69C  FF FF FF FF FF FF FF FF 
     477.  00:A6A4                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     477.  00:A6A4  FF FF FF FF FF FF FF FF 
     478.  00:A6AC                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     478.  00:A6AC  FF FF FF FF FF FF FF FF 
     479.  00:A6B4                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     479.  00:A6B4  FF FF FF FF FF FF FF FF 
     480.  00:A6BC                      	
     481.  00:A6BC                      sprite_manoizq3:
     482.  00:A6BC                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     482.  00:A6BC  FF FF FF FF FF FF FF FF 
     483.  00:A6C4                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     483.  00:A6C4  FF FF FF FF FF FF FF FF 
     484.  00:A6CC                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     484.  00:A6CC  FF FF FF FF FF FF FF FF 
     485.  00:A6D4                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF	
     485.  00:A6D4  FF FF FF FF FF FF FF FF 
     486.  00:A6DC                      	
     487.  00:A6DC                      ;; MANODER
     488.  00:A6DC                      
     489.  00:A6DC                      sprite_manoder1:
     490.  00:A6DC                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     490.  00:A6DC  FF FF FF FF FF FF FF FF 
     491.  00:A6E4                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     491.  00:A6E4  FF FF FF FF FF FF FF FF 
     492.  00:A6EC                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     492.  00:A6EC  FF FF FF FF FF FF FF FF 
     493.  00:A6F4                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     493.  00:A6F4  FF FF FF FF FF FF FF FF 
     494.  00:A6FC                      	
     495.  00:A6FC                      sprite_manoder2:
     496.  00:A6FC                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     496.  00:A6FC  FF FF FF FF FF FF FF FF 
     497.  00:A704                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     497.  00:A704  FF FF FF FF FF FF FF FF 
     498.  00:A70C                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     498.  00:A70C  FF FF FF FF FF FF FF FF 
     499.  00:A714                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     499.  00:A714  FF FF FF FF FF FF FF FF 
     500.  00:A71C                      	
     501.  00:A71C                      sprite_manoder3:
     502.  00:A71C                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     502.  00:A71C  FF FF FF FF FF FF FF FF 
     503.  00:A724                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     503.  00:A724  FF FF FF FF FF FF FF FF 
     504.  00:A72C                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     504.  00:A72C  FF FF FF FF FF FF FF FF 
     505.  00:A734                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF		
     505.  00:A734  FF FF FF FF FF FF FF FF 
     506.  00:A73C                      	
     507.  00:A73C                      	
     508.  00:A73C                      	
     509.  00:A73C                      	
     510.  00:A73C                      	
     511.  00:A73C                      	
     512.  00:A73C                      	
     513.  00:A73C                      	
     514.  00:A73C                      	
     515.  00:A73C                      	
     516.  00:A73C                      	
     517.  00:A73C                      	
     518.  00:A73C                      	
     519.  00:A73C                      	
     520.  00:A73C                      	
     521.  00:A73C                      	
     522.  00:A73C                      	
     523.  00:A73C                      	
     524.  00:A73C                      	
     525.  00:A73C                      	
     526.  00:A73C                      	
     527.  00:A73C                      	
     528.  00:A73C                      	
     195   00:A73C                      	
     196   00:A73C                      	include "habitaciones.asm"
       1.  00:A73C                      ;;=====================================================
       2.  00:A73C                      ;;DEFINICIÓN DE HABITACIONES x NIVEL
       3.  00:A73C                      ;;=====================================================	
       4.  00:A73C                      
       5.  00:A73C                      ; sólo voy a usar 7x7 pero como los arrays son lineales y voy a trabajar con matrices
       6.  00:A73C                      ; me interesa que seande  8x8 aunque sólo trabaje con 7x7
       7.  00:A73C                      
       8.  00:A73C                      ; ojo... la primera linea corresponderá a la primera linea del castillo no a la última
       9.  00:A73C                      
      10.  00:A73C                      ;; definición de estructura de bits
      11.  00:A73C                      ;16 bits por habitación
      12.  00:A73C                      
      13.  00:A73C                      ;NOTA: no es necesario asignar un bit para la puerta de arriba ya que en las habitaciones de la fila 7 sólo habrá una puerta que será una escalera
      14.  00:A73C                      ;1º byte
      15.  00:A73C                      ;~ 7 - sin asignar
      16.  00:A73C                      ;~ 6 - si 1 => ayudas usadas 0 => ayudas no usuadas (se inicializan al empezar la partida)
      17.  00:A73C                      ;~ 5 - esqueletos
      18.  00:A73C                      ;~ 4 - todos los enemigos muertos 0 no y 1 ó <>0 => toca la variable "is_habitacion_terminada" (se inicializan al empezar la partida)
      19.  00:A73C                      ;~ 0,1,2,3 - nº puertas 1 arriba 1 derecha 1 abajo 1 izquierda
      20.  00:A73C                      ;2º byte
      21.  00:A73C                      ;~ 7 - oracion
      22.  00:A73C                      ;~ 6 - cruz
      23.  00:A73C                      ;~ 5 - agua bendita
      24.  00:A73C                      ;~ 4 - armadura
      25.  00:A73C                      ;~ 3 - planta
      26.  00:A73C                      ;~ 2 - vida extra
      27.  00:A73C                      ;~ 1 - ballesta
      28.  00:A73C                      ;~ 0 - antorchas
      29.  00:A73C                      
      30.  00:A73C                      ;importante: el byte de la columna 15 indicará con 1 y 0 habitaciones por las que se haya pasado
      31.  00:A73C                      ;cuando se inicie la partida todos se pondrán a 0
      32.  00:A73C                      ;por ejemplo 01000000b se ha pasado por la hab. 2 de esa fila en el nivel que sea
      33.  00:A73C                      
      34.  00:A73C                      habitacion_actual:
      35.  00:A73C  00                  	db  0		;habitación donde se encuentre el prota. Se mete en una varible par traer todos los datos de golpe y no buscarlos varias veces
      36.  00:A73D                      habitacion_extras:
      37.  00:A73D  00                  	db	0		;donde van las ayudas de una habitación
      38.  00:A73E                      habitacion_actual_puntero;
      39.  00:A73E  00 00               	dw	0		;puntero para actualizar la habitación cuando se maten todos los enemigos
      40.  00:A740                      is_habitacion_terminada:
      41.  00:A740  00                  	db	0		;variable para consultar más rápido si se ha pasado (<>0 si se ha pasado y 0 no se ha pasado)
      42.  00:A741                      
      43.  00:A741                      
      44.  00:A741                      habitaciones_juego:
      45.  00:A741                      habitaciones_nivel0:
      46.  00:A741                      			;0		0'		   1        1'         2         2'         3        3'        4         4'       5         5'        6         6'
      47.  00:A741                      	db 00000000b,00000000b,00000000b,00000000b,00000000b,00000000b,00001010b,10000000b,00000000b,00000000b,00000000b,00000000b,00000000b,00000000b,#00,#00 ;nivel 0 fila 1
      47.  00:A741  00 00 00 00 00 00 0A 80 00 00 00 00 00 00 00 00 
      48.  00:A751                      	db 00000000b,00000000b,00001100b,00000000b,00000101b,00000000b,00001111b,00000000b,00000101b,00000000b,00001001b,00000000b,00000000b,00000000b,#00,#00 
      48.  00:A751  00 00 0C 00 05 00 0F 00 05 00 09 00 00 00 00 00 
      49.  00:A761                      	db 00000000b,00000000b,00001010b,00000000b,00000000b,00000000b,00001010b,00000000b,00000000b,00000000b,00001010b,00000000b,00000000b,00000000b,#00,#00 
      49.  00:A761  00 00 0A 00 00 00 0A 00 00 00 0A 00 00 00 00 00 
      50.  00:A771                      	db 00000000b,00000000b,00001010b,00000000b,00000000b,00000000b,00000010b,00000000b,00000000b,00000000b,00001010b,00000000b,00000000b,00000000b,#00,#00 
      50.  00:A771  00 00 0A 00 00 00 02 00 00 00 0A 00 00 00 00 00 
      51.  00:A781                      	db 00000000b,00000000b,00001110b,00000000b,00000001b,00000000b,00000000b,00000000b,00000100b,00000000b,00001011b,00000000b,00000000b,00000000b,#00,#00 
      51.  00:A781  00 00 0E 00 01 00 00 00 04 00 0B 00 00 00 00 00 
      52.  00:A791                      	db 00000000b,00000000b,00000110b,00000000b,00000101b,00000000b,00001101b,00000000b,00000101b,00000000b,00000011b,00000000b,00000000b,00000000b,#00,#00 
      52.  00:A791  00 00 06 00 05 00 0D 00 05 00 03 00 00 00 00 00 
      53.  00:A7A1                      	db 00000000b,00000000b,00000000b,00000000b,00000000b,00000000b,00001010b,00000000b,00000000b,00000000b,00000000b,00000000b,00000000b,00000000b,#00,#00 ;nivel 0 fila 7
      53.  00:A7A1  00 00 00 00 00 00 0A 00 00 00 00 00 00 00 00 00 
      54.  00:A7B1                      	
      55.  00:A7B1                      habitaciones_nivel1:
      56.  00:A7B1                      	db  00000000b,#C0,00000000b,#C0,00000000b,#00,00011010b,#00,00010000b,#C0,00000000b,#C0,00000000b,#C0,#00,#00 	;primera fila
      56.  00:A7B1  00 C0 00 C0 00 00 1A 00 10 C0 00 C0 00 C0 00 00 
      57.  00:A7C1                      	db  00000000b,#C0,00011100b,#C0,00011101b,#00,00011111b,#00,00011101b,#C0,00011001b,#C0,00000000b,#C0,#00,#00
      57.  00:A7C1  00 C0 1C C0 1D 00 1F 00 1D C0 19 C0 00 C0 00 00 
      58.  00:A7D1                      	db  00000000b,#C0,00011110b,#C0,00011111b,#00,00011111b,#00,00011111b,#C0,00011011b,#C0,00000000b,#C0,#00,#00
      58.  00:A7D1  00 C0 1E C0 1F 00 1F 00 1F C0 1B C0 00 C0 00 00 
      59.  00:A7E1                      	db  00000000b,#C0,00011010b,#C0,00011010b,#00,00010010b,#00,00011010b,#C0,00011010b,#C0,00000000b,#C0,#00,#00
      59.  00:A7E1  00 C0 1A C0 1A 00 12 00 1A C0 1A C0 00 C0 00 00 
      60.  00:A7F1                      	db  00000000b,#C0,00011010b,#C0,00011110b,#C0,00010101b,#C0,00011011b,#C0,00011010b,#C0,00000000b,#C0,#00,#00
      60.  00:A7F1  00 C0 1A C0 1E C0 15 C0 1B C0 1A C0 00 C0 00 00 
      61.  00:A801                      	db  00000000b,#C0,00010110b,#C0,00010111b,#C0,00011101b,#C0,00010111b,#C0,00010011b,#C0,00000000b,#C0,#00,#00
      61.  00:A801  00 C0 16 C0 17 C0 1D C0 17 C0 13 C0 00 C0 00 00 
      62.  00:A811                      	db  00000000b,#C0,00000000b,#C0,00000000b,#C0,00011010b,#C0,00011000b,#C0,00000000b,#C0,00000000b,#C0,#00,#00	;última fila
      62.  00:A811  00 C0 00 C0 00 C0 1A C0 18 C0 00 C0 00 C0 00 00 
      63.  00:A821                      	
      64.  00:A821                      habitaciones_nivel2:
      65.  00:A821                      	db  00000000b,#C0,00000000b,#C0,00000000b,#00,00011010b,#00,00010000b,#C0,00000000b,#C0,00000000b,#C0,#00,#00 	;primera fila
      65.  00:A821  00 C0 00 C0 00 00 1A 00 10 C0 00 C0 00 C0 00 00 
      66.  00:A831                      	db  00000000b,#C0,00011100b,#C0,00011101b,#00,00011111b,#00,00011101b,#C0,00011001b,#C0,00000000b,#C0,#00,#00
      66.  00:A831  00 C0 1C C0 1D 00 1F 00 1D C0 19 C0 00 C0 00 00 
      67.  00:A841                      	db  00000000b,#C0,00011110b,#C0,00011111b,#00,00011111b,#00,00011111b,#C0,00011011b,#C0,00000000b,#C0,#00,#00
      67.  00:A841  00 C0 1E C0 1F 00 1F 00 1F C0 1B C0 00 C0 00 00 
      68.  00:A851                      	db  00000000b,#C0,00011010b,#C0,00011010b,#00,00010010b,#00,00011010b,#C0,00011010b,#C0,00000000b,#C0,#00,#00
      68.  00:A851  00 C0 1A C0 1A 00 12 00 1A C0 1A C0 00 C0 00 00 
      69.  00:A861                      	db  00000000b,#C0,00011010b,#C0,00011110b,#C0,00010101b,#C0,00011011b,#C0,00011010b,#C0,00000000b,#C0,#00,#00
      69.  00:A861  00 C0 1A C0 1E C0 15 C0 1B C0 1A C0 00 C0 00 00 
      70.  00:A871                      	db  00000000b,#C0,00010110b,#C0,00010111b,#C0,00011101b,#C0,00010111b,#C0,00010011b,#C0,00000000b,#C0,#00,#00
      70.  00:A871  00 C0 16 C0 17 C0 1D C0 17 C0 13 C0 00 C0 00 00 
      71.  00:A881                      	db  00000000b,#C0,00000000b,#C0,00000000b,#C0,00011010b,#C0,00011000b,#C0,00000000b,#C0,00000000b,#C0,#00,#00	;última fila
      71.  00:A881  00 C0 00 C0 00 C0 1A C0 18 C0 00 C0 00 C0 00 00 
      72.  00:A891                      	
      73.  00:A891                      habitaciones_nivel3:
      74.  00:A891                      	db  00000000b,#C0,00000000b,#C0,00000000b,#00,00011010b,#00,00010000b,#C0,00000000b,#C0,00000000b,#C0,#00,#00 	;primera fila
      74.  00:A891  00 C0 00 C0 00 00 1A 00 10 C0 00 C0 00 C0 00 00 
      75.  00:A8A1                      	db  00000000b,#C0,00011100b,#C0,00011101b,#00,00011111b,#00,00011101b,#C0,00011001b,#C0,00000000b,#C0,#00,#00
      75.  00:A8A1  00 C0 1C C0 1D 00 1F 00 1D C0 19 C0 00 C0 00 00 
      76.  00:A8B1                      	db  00000000b,#C0,00011110b,#C0,00011111b,#00,00011111b,#00,00011111b,#C0,00011011b,#C0,00000000b,#C0,#00,#00
      76.  00:A8B1  00 C0 1E C0 1F 00 1F 00 1F C0 1B C0 00 C0 00 00 
      77.  00:A8C1                      	db  00000000b,#C0,00011010b,#C0,00011010b,#00,00010010b,#00,00011010b,#C0,00011010b,#C0,00000000b,#C0,#00,#00
      77.  00:A8C1  00 C0 1A C0 1A 00 12 00 1A C0 1A C0 00 C0 00 00 
      78.  00:A8D1                      	db  00000000b,#C0,00011010b,#C0,00011110b,#C0,00010101b,#C0,00011011b,#C0,00011010b,#C0,00000000b,#C0,#00,#00
      78.  00:A8D1  00 C0 1A C0 1E C0 15 C0 1B C0 1A C0 00 C0 00 00 
      79.  00:A8E1                      	db  00000000b,#C0,00010110b,#C0,00010111b,#C0,00011101b,#C0,00010111b,#C0,00010011b,#C0,00000000b,#C0,#00,#00
      79.  00:A8E1  00 C0 16 C0 17 C0 1D C0 17 C0 13 C0 00 C0 00 00 
      80.  00:A8F1                      	db  00000000b,#C0,00000000b,#C0,00000000b,#C0,00011010b,#C0,00011000b,#C0,00000000b,#C0,00000000b,#C0,#00,#00	;última fila
      80.  00:A8F1  00 C0 00 C0 00 C0 1A C0 18 C0 00 C0 00 C0 00 00 
      81.  00:A901                      	
      82.  00:A901                      habitaciones_nivel4:
      83.  00:A901                      	db  00000000b,#C0,00000000b,#C0,00000000b,#00,00011010b,#00,00010000b,#C0,00000000b,#C0,00000000b,#C0,#00,#00 	;primera fila
      83.  00:A901  00 C0 00 C0 00 00 1A 00 10 C0 00 C0 00 C0 00 00 
      84.  00:A911                      	db  00000000b,#C0,00011100b,#C0,00011101b,#00,00011111b,#00,00011101b,#C0,00011001b,#C0,00000000b,#C0,#00,#00
      84.  00:A911  00 C0 1C C0 1D 00 1F 00 1D C0 19 C0 00 C0 00 00 
      85.  00:A921                      	db  00000000b,#C0,00011110b,#C0,00011111b,#00,00011111b,#00,00011111b,#C0,00011011b,#C0,00000000b,#C0,#00,#00
      85.  00:A921  00 C0 1E C0 1F 00 1F 00 1F C0 1B C0 00 C0 00 00 
      86.  00:A931                      	db  00000000b,#C0,00011010b,#C0,00011010b,#00,00010010b,#00,00011010b,#C0,00011010b,#C0,00000000b,#C0,#00,#00
      86.  00:A931  00 C0 1A C0 1A 00 12 00 1A C0 1A C0 00 C0 00 00 
      87.  00:A941                      	db  00000000b,#C0,00011010b,#C0,00011110b,#C0,00010101b,#C0,00011011b,#C0,00011010b,#C0,00000000b,#C0,#00,#00
      87.  00:A941  00 C0 1A C0 1E C0 15 C0 1B C0 1A C0 00 C0 00 00 
      88.  00:A951                      	db  00000000b,#C0,00010110b,#C0,00010111b,#C0,00011101b,#C0,00010111b,#C0,00010011b,#C0,00000000b,#C0,#00,#00
      88.  00:A951  00 C0 16 C0 17 C0 1D C0 17 C0 13 C0 00 C0 00 00 
      89.  00:A961                      	db  00000000b,#C0,00000000b,#C0,00000000b,#C0,00011010b,#C0,00011000b,#C0,00000000b,#C0,00000000b,#C0,#00,#00	;última fila
      89.  00:A961  00 C0 00 C0 00 C0 1A C0 18 C0 00 C0 00 C0 00 00 
      90.  00:A971                      	
      91.  00:A971                      habitaciones_nivel5:
      92.  00:A971                      	db  00000000b,#C0,00000000b,#C0,00000000b,#00,00011010b,#00,00010000b,#C0,00000000b,#C0,00000000b,#C0,#00,#00 	;primera fila
      92.  00:A971  00 C0 00 C0 00 00 1A 00 10 C0 00 C0 00 C0 00 00 
      93.  00:A981                      	db  00000000b,#C0,00011100b,#C0,00011101b,#00,00011111b,#00,00011101b,#C0,00011001b,#C0,00000000b,#C0,#00,#00
      93.  00:A981  00 C0 1C C0 1D 00 1F 00 1D C0 19 C0 00 C0 00 00 
      94.  00:A991                      	db  00000000b,#C0,00011110b,#C0,00011111b,#00,00011111b,#00,00011111b,#C0,00011011b,#C0,00000000b,#C0,#00,#00
      94.  00:A991  00 C0 1E C0 1F 00 1F 00 1F C0 1B C0 00 C0 00 00 
      95.  00:A9A1                      	db  00000000b,#C0,00011010b,#C0,00011010b,#00,00010010b,#00,00011010b,#C0,00011010b,#C0,00000000b,#C0,#00,#00
      95.  00:A9A1  00 C0 1A C0 1A 00 12 00 1A C0 1A C0 00 C0 00 00 
      96.  00:A9B1                      	db  00000000b,#C0,00011010b,#C0,00011110b,#C0,00010101b,#C0,00011011b,#C0,00011010b,#C0,00000000b,#C0,#00,#00
      96.  00:A9B1  00 C0 1A C0 1E C0 15 C0 1B C0 1A C0 00 C0 00 00 
      97.  00:A9C1                      	db  00000000b,#C0,00010110b,#C0,00010111b,#C0,00011101b,#C0,00010111b,#C0,00010011b,#C0,00000000b,#C0,#00,#00
      97.  00:A9C1  00 C0 16 C0 17 C0 1D C0 17 C0 13 C0 00 C0 00 00 
      98.  00:A9D1                      	db  00000000b,#C0,00000000b,#C0,00000000b,#C0,00011010b,#C0,00011000b,#C0,00000000b,#C0,00000000b,#C0,#00,#00	;última fila
      98.  00:A9D1  00 C0 00 C0 00 C0 1A C0 18 C0 00 C0 00 C0 00 00 
      99.  00:A9E1                      	
     100.  00:A9E1                      habitaciones_nivel6:
     101.  00:A9E1                      	db  00000000b,#C0,00000000b,#C0,00000000b,#00,00011010b,#00,00010000b,#C0,00000000b,#C0,00000000b,#C0,#00,#00 	;primera fila
     101.  00:A9E1  00 C0 00 C0 00 00 1A 00 10 C0 00 C0 00 C0 00 00 
     102.  00:A9F1                      	db  00000000b,#C0,00011100b,#C0,00011101b,#00,00011111b,#00,00011101b,#C0,00011001b,#C0,00000000b,#C0,#00,#00
     102.  00:A9F1  00 C0 1C C0 1D 00 1F 00 1D C0 19 C0 00 C0 00 00 
     103.  00:AA01                      	db  00000000b,#C0,00011110b,#C0,00011111b,#00,00011111b,#00,00011111b,#C0,00011011b,#C0,00000000b,#C0,#00,#00
     103.  00:AA01  00 C0 1E C0 1F 00 1F 00 1F C0 1B C0 00 C0 00 00 
     104.  00:AA11                      	db  00000000b,#C0,00011010b,#C0,00011010b,#00,00010010b,#00,00011010b,#C0,00011010b,#C0,00000000b,#C0,#00,#00
     104.  00:AA11  00 C0 1A C0 1A 00 12 00 1A C0 1A C0 00 C0 00 00 
     105.  00:AA21                      	db  00000000b,#C0,00011010b,#C0,00011110b,#C0,00010101b,#C0,00011011b,#C0,00011010b,#C0,00000000b,#C0,#00,#00
     105.  00:AA21  00 C0 1A C0 1E C0 15 C0 1B C0 1A C0 00 C0 00 00 
     106.  00:AA31                      	db  00000000b,#C0,00010110b,#C0,00010111b,#C0,00011101b,#C0,00010111b,#C0,00010011b,#C0,00000000b,#C0,#00,#00
     106.  00:AA31  00 C0 16 C0 17 C0 1D C0 17 C0 13 C0 00 C0 00 00 
     107.  00:AA41                      	db  00000000b,#C0,00000000b,#C0,00000000b,#C0,00011010b,#C0,00011000b,#C0,00000000b,#C0,00000000b,#C0,#00,#00	;última fila
     107.  00:AA41  00 C0 00 C0 00 C0 1A C0 18 C0 00 C0 00 C0 00 00 
     108.  00:AA51                      
     109.  00:AA51                      
     197   00:AA51                      	
     198   00:AA51                      	include "variables.asm"
       1.  00:AA51                      ;;=====================================================
       2.  00:AA51                      ;;DEFINICIÓN DE VARIABLES
       3.  00:AA51                      ;;=====================================================
       4.  00:AA51                      
       5.  00:AA51                      ;Colores base de la pantalla
       6.  00:AA51                      color_base:
       7.  00:AA51  01 01 01            			DB		COLNEGRO,COLNEGRO,COLNEGRO	
       8.  00:AA54                      ;colores de pantalla cuando se tira bomba
       9.  00:AA54                      color_bomba1:
      10.  00:AA54  08 08 08            			DB		COLROJO,COLROJO,COLROJO
      11.  00:AA57                      color_bomba2:
      12.  00:AA57  06 06 06            			DB		COLROJOOSC,COLROJOOSC,COLROJOOSC
      13.  00:AA5A                      
      14.  00:AA5A                      ;definicion de variable del prota usando la estructura del punto de mira
      15.  00:AA5A                      prota:		ESTRUCTURA_PUNTOMIRA
      15.  00:AA5A  78 6C 00 00 00 05 00 00 00 00 00 00 00 00 00 00 
      16.  00:AA6A                      ;variables globales del prota
      17.  00:AA6A                      prota_nivel:			;nivel del castillo donde está 0-6
      18.  00:AA6A  00                  			DB		0
      19.  00:AA6B                      prota_vidas:
      20.  00:AA6B  00                  			DB		0
      21.  00:AA6C                      prota_reliquias:
      22.  00:AA6C  03                  			DB		3
      23.  00:AA6D                      prota_pos_mapx:
      24.  00:AA6D  00                  			DB		0	;pos columna
      25.  00:AA6E                      prota_pos_mapy:
      26.  00:AA6E  00                  			DB		0	;pos fila
      27.  00:AA6F                      prota_energia:
      28.  00:AA6F  FA                  			DB		250
      29.  00:AA70                      
      30.  00:AA70                      ;array para pintar de golpe el marcador de vidas
      31.  00:AA70                      array_aux_vidas: 		
      32.  00:AA70                      			DB		0,0,0,0,0,0,0,0
      32.  00:AA70  00 00 00 00 00 00 00 00 
      33.  00:AA78                      
      34.  00:AA78                      ;array para pintar de golpe el marcador de reliquias
      35.  00:AA78                      array_aux_reliquias:	
      36.  00:AA78                      			DB		0,0,0,0,0,0,0,0
      36.  00:AA78  00 00 00 00 00 00 00 00 
      37.  00:AA80                      
      38.  00:AA80                      array_aux_energia:					;array para pintar de golpe el marcador de energía
      39.  00:AA80                      			DB		16,0,0,0,0,0,0 	;el 16 primero es porque siempre estará pintado el cuadro primero rojo
      39.  00:AA80  10 00 00 00 00 00 00 
      40.  00:AA87                      ultimo_pos_array_aux_energia:
      41.  00:AA87  00                  			DB		0				;el array completo es de 8 pero para posicionar sin niecesidad de cálculos  etiqueto este aparte
      42.  00:AA88                      			
      43.  00:AA88                      array_aux_mapa_limpiar:	;es por facilitar el reseteo del mapa (pinto 7 lineas en negro con bios) la otra opción es más larga en código y complicada aunque más rápida
      44.  00:AA88                      			DB		0,0,0,0,0,0,0
      44.  00:AA88  00 00 00 00 00 00 00 
      45.  00:AA8F                      elemento_pintar_mapa:
      46.  00:AA8F  00                  			DB		0	;TILEPROTAM = 19, ;TILEGRISM = 9
      47.  00:AA90                      			
      48.  00:AA90                      ;; nota importante: cada vez que se cambie de nivel se actualizará el contenido
      49.  00:AA90                      
      50.  00:AA90                      
      51.  00:AA90                      
      52.  00:AA90  00 (7)              antorchas:			DS		ESTRUCTURA_ANTORCHA
      53.  00:AA97  C5 C6 C7            array_antorcha:				DB	197,198,199	;fuego + madera1 + madera2
      54.  00:AA9A                      
      55.  00:AA9A  00 (7)              esqueletos:			DS		ESTRUCTURA_ESQUELETO
      56.  00:AAA1                      array_esqueleto:			DB	194, 0, 195, 160, 164, 161, 0, 163, 0, 193, 162, 192
      56.  00:AAA1  C2 00 C3 A0 A4 A1 00 A3 00 C1 A2 C0 
      57.  00:AAAD  A4 A5 A4 A6         lista_escenas_calavera:		DB	164, 165, 164, 166
      58.  00:AAB1                      
      59.  00:AAB1                      
      60.  00:AAB1                      
      61.  00:AAB1                      
      62.  00:AAB1                      ;array de 4 bytes x 32 sprites posibles en pantalla que sobreescribirá la tabla de sprites actualizando VRAM
      63.  00:AAB1                      array_sprites:
      64.  00:AAB1  00 (8)              array_sprites_pm:				DS	2 * 4
      65.  00:AAB9  00 (120)            array_sprites_enem:				DS	30 * 4
      66.  00:AB31  00 (140)            lista_enemigos:					DS	10 * ESTRUCTURA_ENEMIGO
      67.  00:ABBD                      ; puntero al array a pintar en VRAM
      68.  00:ABBD  00 00               puntero_array_atrib_array_VRAM: DW	0	;ARRAYSPTRIES + 8
      69.  00:ABBF                      
      70.  00:ABBF                      
      71.  00:ABBF                      
      72.  00:ABBF                      
      73.  00:ABBF                      
     199   00:ABBF                      	
     200   00:ABBF                      ;;=====================================================
     201   00:ABBF                      ;;DEFINICIÓN DE PANTALLAS
     202   00:ABBF                      ;;=====================================================		
     203   00:ABBF                      	include "pantallas.asm"
       1.  00:ABBF                      ;;=====================================================
       2.  00:ABBF                      ;;DEFINICIÓN DE PANTALLAS
       3.  00:ABBF                      ;;=====================================================		
       4.  00:ABBF                      
       5.  00:ABBF                      ; bancos 1 y 2 y de pantalla 1 
       6.  00:ABBF                      ; se usa un banco común (en este caso el banco 1)
       7.  00:ABBF                      ; el mapa afecta al banco 1 y 2
       8.  00:ABBF  (022A)              tiles_patrones_nivel0:	incbin "pantallas/nivel0.bank1.til.bin.chr.plet5"
       9.  00:ADE9  (006B)              tiles_color_nivel0:		incbin "pantallas/nivel0.bank1.til.bin.clr.plet5"
      10.  00:AE54  (0035)              tiles_mapa_nivel0:		incbin "pantallas/nivel0.bank01.map.bin.plet5"
      11.  00:AE89                      
      12.  00:AE89  (01B5)              tiles_patrones_nivel1:	incbin "pantallas/nivel1.bank1.til.bin.chr.plet5"
      13.  00:B03E  (0047)              tiles_color_nivel1:		incbin "pantallas/nivel1.bank1.til.bin.clr.plet5"
      14.  00:B085  (0035)              tiles_mapa_nivel1:		incbin "pantallas/nivel1.bank01.map.bin.plet5"
      15.  00:B0BA                      
      16.  00:B0BA  (01B5)              tiles_patrones_nivel2:	incbin "pantallas/nivel2.bank1.til.bin.chr.plet5"
      17.  00:B26F  (0047)              tiles_color_nivel2:		incbin "pantallas/nivel2.bank1.til.bin.clr.plet5"
      18.  00:B2B6  (0035)              tiles_mapa_nivel2:		incbin "pantallas/nivel2.bank01.map.bin.plet5"
      19.  00:B2EB                      
      20.  00:B2EB  (01B5)              tiles_patrones_nivel3:	incbin "pantallas/nivel3.bank1.til.bin.chr.plet5"
      21.  00:B4A0  (0047)              tiles_color_nivel3:		incbin "pantallas/nivel3.bank1.til.bin.clr.plet5"
      22.  00:B4E7  (0035)              tiles_mapa_nivel3:		incbin "pantallas/nivel3.bank01.map.bin.plet5"
      23.  00:B51C                      
      24.  00:B51C  (01B5)              tiles_patrones_nivel4:	incbin "pantallas/nivel4.bank1.til.bin.chr.plet5"
      25.  00:B6D1  (0047)              tiles_color_nivel4:		incbin "pantallas/nivel4.bank1.til.bin.clr.plet5"
      26.  00:B718  (0035)              tiles_mapa_nivel4:		incbin "pantallas/nivel4.bank01.map.bin.plet5"
      27.  00:B74D                      
      28.  00:B74D  (01B5)              tiles_patrones_nivel5:	incbin "pantallas/nivel5.bank1.til.bin.chr.plet5"
      29.  00:B902  (0047)              tiles_color_nivel5:		incbin "pantallas/nivel5.bank1.til.bin.clr.plet5"
      30.  00:B949  (0035)              tiles_mapa_nivel5:		incbin "pantallas/nivel5.bank01.map.bin.plet5"
      31.  00:B97E                      
      32.  00:B97E  (01B5)              tiles_patrones_nivel6:	incbin "pantallas/nivel6.bank1.til.bin.chr.plet5"
      33.  00:BB33  (0047)              tiles_color_nivel6:		incbin "pantallas/nivel6.bank1.til.bin.clr.plet5"
      34.  00:BB7A  (0035)              tiles_mapa_nivel6:		incbin "pantallas/nivel6.bank01.map.bin.plet5"
      35.  00:BBAF                      
      36.  00:BBAF                      ; 3º banco que es la parte de puntos, vidas, mapas, etc... es común
      37.  00:BBAF  (014C)              tiles_patrones_marcador:	incbin "pantallas/marcador.til.bin.chr.plet5"
      38.  00:BCFB  (0035)              tiles_color_marcador:		incbin "pantallas/marcador.til.bin.clr.plet5"
      39.  00:BD30  (0062)              tiles_mapa_marcador:		incbin "pantallas/marcador.map.bin.plet5"
      40.  00:BD92                      
      41.  00:BD92                      ;NOTA: FALTARÍAN PANTALLAS ESPECIALES (POR DEFINIR)
      42.  00:BD92                      ; INICIO
      43.  00:BD92                      ; GAME OVER
      44.  00:BD92                      ; HUIDA
      45.  00:BD92                      ; 2 FINAL BUENO
      46.  00:BD92                      ; 1 FINAL MALO
     204   00:BD92                      
     205   00:BD92                      END:

    LABELS
-------------------------------------------------
00:000000D8 X GTTRIG
00:000000D5 X GTSTCK
00:0000F3DB   CLIKSW
00:0000013E X RDVDP
00:00000047   WRTVDP
00:0000005C   LDIRVM
00:00000059 X LDIRMV
00:0000005F   CHGMOD
00:00000041 X DISSCR
00:00000044 X ENASCR
00:00000062   CHGCLR
00:0000F3E9   FORCLR
00:0000F3EA   BAKCLR
00:0000F3EB   BDRCLR
00:000000C3   CLS
00:0000F3DF X RG0SAV
00:0000F3E0   RG1SAV
00:0000F3E1 X RG2SAV
00:0000F3E2 X RG3SAV
00:0000F3E3 X RG4SAV
00:0000F3E4 X RG5SAV
00:0000F3E5 X RG6SAV
00:0000F3E6 X RG7SAV
00:0000F3E7 X STATFL
00:00000099   REGEST
00:00000098   REGESCVDP
00:000000A0   PSG_A
00:000000A1   PSG_W
00:000000A2   PSG_R
00:00000000   CHRTBL
00:00001800   TILMAP
00:00001B00   SPRART
00:00002000   CLRTBL
00:00003800   SPRTBL
00:00000001   SI
00:00000000 X NO
00:00000004   LIMCADENCIA
00:00000000 X COLTRASP
00:00000001   COLNEGRO
00:00000002 X COLVERDE
00:00000003 X COLVERCLA
00:00000004 X COLAZULOSC
00:00000005 X COLAZULLA
00:00000006   COLROJOOSC
00:00000007 X COLCYAN
00:00000008   COLROJO
00:00000009 X COLROJOCLA
00:0000000A X COLAMAROSC
00:0000000B X COLAMARCLA
00:0000000C X COLVERDOSC
00:0000000D X COLMAGENTA
00:0000000E X COLGRIS
00:0000000F   COLBLANCO
00:000002F8   POSMAPLIN1
00:000002D8   POSMAPLIN2
00:000002B8   POSMAPLIN3
00:00000298   POSMAPLIN4
00:00000278   POSMAPLIN5
00:00000258   POSMAPLIN6
00:00000238   POSMAPLIN7
00:0000000D   POSCARAMAP
00:00000248   POSVIDAS
00:00000011   POSRELIMAP
00:000002C8   POSRELIQ
00:00000288   POSENERG
00:000002B4   POSNIVEL
00:00000238   POSMAPA
00:000001EE   POSPUERABAJ
00:0000008E   POSPUERARRI
00:000000FC   POSPUERDERE
00:000000E1   POSPUERIZQU
00:0000006C   POSESCALERA
00:00000146   POSORACION
00:000000A7 X POSCRUZ
00:000000AB X POSAGUA
00:000000AF X POSARMAD
00:000000B3 X POSPLANTA
00:000000B7 X POSVIDAEXT
00:000000BB X POSBALLESTA
00:00000070 X POSAYUDASY
00:00000038   POSORACIONX
00:00000058   POSORACIONY
00:00000040 X POSCRUZX
00:00000060 X POSAGUAX
00:00000080 X POSARMADX
00:000000A0 X POSPLANTAX
00:000000C0 X POSVIDAEXTX
00:000000E0 X POSBALLESTAX
00:00000002   ALTOAYUDA
00:00000002   ANCHOAYUDA
00:00000008   RADIOAYUDAX
00:00000008   RADIOAYUDAY
00:00000078 X POSXPM
00:0000006C X POSYPM
00:00000000   INACTIVA
00:00000001   ACTIVA
00:00000001   HABTERMIN
00:00000088   POSANTOR1
00:00000097   POSANTOR2
00:000000C4   MAPLLAMA1
00:000000C5   MAPLLAMA2
00:000000FF   RESETLLAMA
00:00000088   POSESQUEL1
00:00000095   POSESQUEL2
00:000000A9   POSCALAVE1
00:000000B6   POSCALAVE2
00:00000019   RESETESQUEL
00:00000004   RESETESCENAESQUEL
00:00000013   TILEPROTAM
00:00000009   TILEGRISM
00:00000010   TILEMAPROJO
00:0000000F   TILEMAPAMAR
00:0000000E   TILEMAPVERD
00:00000008   NMAXVIDREL
00:00000007   NHABNIVEL
00:000000F8 X MAXENERGIA
00:000000D9   TILEENERG8
00:000000BA   TILEENERG7
00:0000009B   TILEENERG6
00:0000007C   TILEENERG5
00:0000005D   TILEENERG4
00:0000003E   TILEENERG3
00:0000001F   TILEENERG2
00:00000000   TILENEGRO
00:00000000 X LIMPANTIZQ
00:000000FF   LIMPANTDER
00:00000000 X LIMPANTARR
00:00000080   LIMPANTABA
00:00000006 X BASEMAPY
00:00000003 X BASEMAPX
00:0000FD9A X H.KEYI
00:0000FD9F   H.TIMI
00:0000F000   PT3_SETUP
00:0000F001   PT3_MODADDR
00:0000F003   PT3_CrPsPtr
00:0000F005   PT3_SAMPTRS
00:0000F007   PT3_OrnPtrs
00:0000F009   PT3_PDSP
00:0000F00B   PT3_CSP
00:0000F00D   PT3_PSP
00:0000F00F   PT3_PrNote
00:0000F010   PT3_PrSlide
00:0000F012   PT3_AdInPtA
00:0000F014   PT3_AdInPtB
00:0000F016   PT3_AdInPtC
00:0000F018   PT3_LPosPtr
00:0000F01A   PT3_PatsPtr
00:0000F01C   PT3_Delay
00:0000F01D   PT3_AddToEn
00:0000F01E   PT3_Env_Del
00:0000F01F   PT3_ESldAdd
00:0000F021   PT3_NTL3
00:0000F023   VARS
00:0000F023   ChanA
00:0000F040   ChanB
00:0000F05D   ChanC
00:0000F07A   DelyCnt
00:0000F07B   CurESld
00:0000F07D   CurEDel
00:0000F07E   Ns_Base_AddToNs
00:0000F07E   Ns_Base
00:0000F07F   AddToNs
00:0000F080   NT_
00:0000F140   AYREGS
00:0000F140   VT_
00:0000F14E   EnvBase
00:0000F150   VAR0END
00:0000F150   T1_
00:0000F150   T_NEW_1
00:0000F150   T_OLD_1
00:0000F168   T_OLD_2
00:0000F180   T_NEW_3
00:0000F180   T_OLD_3
00:0000F182   T_OLD_0
00:0000F182   T_NEW_0
00:0000F19A   T_NEW_2
00:0000F240   ayFX_MODE
00:0000F241   ayFX_BANK
00:0000F243   ayFX_PRIORITY
00:0000F244   ayFX_POINTER
00:0000F246   ayFX_TONE
00:0000F248   ayFX_NOISE
00:0000F249   ayFX_VOLUME
00:0000F24A   ayFX_CHANNEL
00:00008000   START
00:0000803B   loop_principal
00:0000804B X fin_programa_principal
00:0000804B   check_colisiones_objetos
00:0000805A   check_colisiones_objetos.habitacion_no_terminada
00:0000805A   fin_check_colisiones_objetos
00:0000805C   inicializa_variables_pruebas
00:00008081 X fin_inicializa_variables_pruebas
00:00008082   inicializa_niveles
00:00008090   inicializa_niveles.inicia_nivel_0
00:0000809A X inicializa_niveles.si_tiene_ayuda_nivel0
00:0000809C   inicializa_niveles.no_tiene_ayuda_nivel0
00:0000809E X inicializa_niveles.fin_tiene_ayuda_nivel0
00:000080B2   inicializa_niveles.inicia_nivel_1
00:000080BC X inicializa_niveles.si_tiene_ayuda_nivel1
00:000080BE   inicializa_niveles.no_tiene_ayuda_nivel1
00:000080C0 X inicializa_niveles.fin_tiene_ayuda_nivel1
00:000080D4   inicializa_niveles.inicia_nivel_2
00:000080DE X inicializa_niveles.si_tiene_ayuda_nivel2
00:000080E0   inicializa_niveles.no_tiene_ayuda_nivel2
00:000080E2 X inicializa_niveles.fin_tiene_ayuda_nivel2
00:000080F6   inicializa_niveles.inicia_nivel_3
00:00008100 X inicializa_niveles.si_tiene_ayuda_nivel3
00:00008102   inicializa_niveles.no_tiene_ayuda_nivel3
00:00008104 X inicializa_niveles.fin_tiene_ayuda_nivel3
00:00008118   inicializa_niveles.inicia_nivel_4
00:00008122 X inicializa_niveles.si_tiene_ayuda_nivel4
00:00008124   inicializa_niveles.no_tiene_ayuda_nivel4
00:00008126 X inicializa_niveles.fin_tiene_ayuda_nivel4
00:0000813A   inicializa_niveles.inicia_nivel_5
00:00008144 X inicializa_niveles.si_tiene_ayuda_nivel5
00:00008146   inicializa_niveles.no_tiene_ayuda_nivel5
00:00008148 X inicializa_niveles.fin_tiene_ayuda_nivel5
00:0000815C   inicializa_niveles.inicia_nivel_6
00:00008166 X inicializa_niveles.si_tiene_ayuda_nivel6
00:00008168   inicializa_niveles.no_tiene_ayuda_nivel6
00:0000816A X inicializa_niveles.fin_tiene_ayuda_nivel6
00:00008176 X fin_iniciliza_niveles
00:00008177   actualiza_marcador_vidas
00:0000817C   loop_marcador_caras_negro
00:00008181 X fin_loop_marcador_caras_negro
00:0000818A   loop_marcador_caras
00:0000818F X fin_loop_marcador_caras
00:0000818F X fin_actualiza_marcador_vidas
00:00008190   actualiza_buffer_reliquias
00:00008196   loop_buffer_reliquias_negro
00:000081A3   loop_buffer_reliquias
00:000081A8 X fin_actualiza_buffer_reliquias
00:000081A9   localiza_info_habitacion
00:000081AC X localiza_info_habitacion.situo_columna
00:000081B5 X localiza_info_habitacion.situo_fila
00:000081BE   localiza_info_habitacion.loop_suma_fila
00:000081C6   localiza_info_habitacion.situo_nivel
00:000081D5   localiza_info_habitacion.loop_suma_nivel
00:000081DA   localiza_info_habitacion.actualiza_variable_habitacion
00:000081F0 X localiza_info_habitacion.no_terminada
00:000081F7   localiza_info_habitacion.si_terminada
00:000081FC   localiza_info_habitacion.fin_esta_terminada
00:00008204 X localiza_info_habitacion.si_mostrar_ayuda_activa
00:0000820C   localiza_info_habitacion.no_mostrar_ayuda_activa
00:00008210   localiza_info_habitacion.fin_mostrar_ayuda_activa
00:00008215 X fin_localiza_info_habitacion
00:00008216   terminada_habitacion_recorrida
00:0000822A X fin_terminada_habitacion_recorrida
00:0000822B   entra_habitacion
00:0000823A X fin_entra_habitacion
00:0000823A   pinta_heroe_mapa
00:00008242 X fin_pinta_heroe_mapa
00:00008242   pinta_blanco_mapa
00:0000824A X fin_pinta_blanco_mapa
00:0000824A   cambio_nivel
00:00008250 X fin_cabio_nivel
00:00008251   suma_A_BC
00:00008256 X fin_suma_A_BC
00:00008257   suma_A_HL
00:0000825C X fin_suma_A_HL
00:0000825D X test_OK
00:00008270 X fin_test_OK
00:00008271   color_pantalla
00:00008282 X fin_color_pantalla
00:00008282   sub_preparapantalla
00:00008282 X elimina_clic
00:00008286 X fin_elimina_clic
00:00008286 X limpia_pantalla
00:0000828A X fin_limpia_pantalla
00:00008290 X screen2
00:00008295 X sprites_16_16
00:000082A3 X fin_sub_preparapantalla
00:000082A3   pinta_pantalla_completa
00:000082A9 X fin_pinta_pantalla_completa
00:000082AA   pinta_parte_superior_pantalla
00:000082DB   pinta_parte_superior_pantalla.carga_nivel_0
00:000082F6   pinta_parte_superior_pantalla.carga_nivel_1
00:00008311   pinta_parte_superior_pantalla.carga_nivel_2
00:0000832C   pinta_parte_superior_pantalla.carga_nivel_3
00:00008347   pinta_parte_superior_pantalla.carga_nivel_4
00:00008362   pinta_parte_superior_pantalla.carga_nivel_5
00:0000837D   pinta_parte_superior_pantalla.carga_nivel_6
00:00008395   pinta_parte_superior_pantalla.fin_carga_niveles
00:000083C2 X fin_pinta_parte_superior_pantalla
00:000083C2   tiles_patrones
00:000083C4   tiles_colores
00:000083C6   tiles_mapa
00:000083C8   pinta_parte_inferior_pantalla
00:000083E3 X fin_pinta_parte_inferior_pantalla
00:000083E3   pinta_vidas
00:000083F2 X fin_pinta_vidas
00:000083F2   pinta_reliquias
00:00008401 X fin_pinta_reliquias
00:00008401   pinta_nivel
00:0000840D X fin_pinta_nivel
00:0000840D   pinta_tile_suelto
00:0000841A X fin_pinta_tile_suelto
00:0000841B   mira_pinta_energia
00:00008421 X pinta_ener
00:00008421 X pinta_ener_tile_8
00:0000842D   pinta_ener_tile_8_negro
00:0000842E   pinta_ener_tile_7
00:00008438   pinta_ener_tile_7_negro
00:00008439   pinta_ener_tile_6
00:00008443   pinta_ener_tile_6_negro
00:00008444   pinta_ener_tile_5
00:0000844E   pinta_ener_tile_5_negro
00:0000844F   pinta_ener_tile_4
00:00008459   pinta_ener_tile_4_negro
00:0000845A   pinta_ener_tile_3
00:00008464   pinta_ener_tile_3_negro
00:00008465   pinta_ener_tile_2
00:0000846F   pinta_ener_tile_2_negro
00:00008470   fin_mira_pinta_energia
00:00008472   pinta_energia
00:00008481 X fin_pinta_energia
00:00008481   borra_mapa
00:000084D7 X fin_borra_mapa
00:000084D8   posiciona_en_mapa
00:000084DB X posiciona_en_mapa.sumar_fila
00:00008505 X posiciona_en_mapa.fila_0
00:0000850C   posiciona_en_mapa.fila_1
00:00008513   posiciona_en_mapa.fila_2
00:0000851A   posiciona_en_mapa.fila_3
00:00008521   posiciona_en_mapa.fila_4
00:00008528   posiciona_en_mapa.fila_5
00:0000852F X posiciona_en_mapa.fila_6
00:0000852F   posiciona_en_mapa.sumar_columna
00:00008545   pinta_pos_mapa_vacio
00:00008547   fin_pinta_pos_mapa
00:0000854A X fin_posiciona_en_mapa
00:0000854A   efecto_imagen_tira_reliquia
00:0000854D   efecto_imagen_tira_reliquia.parpadea_fondo
00:00008564 X fin_efecto_imagen_tira_reliquia
00:00008564   pinta_array
00:0000857F   pinta_array.pa_pinta_fila
00:00008580   pinta_array.pa_pinta_columnas
00:000085A3 X fin_pinta_array
00:000085A4   wordaux1
00:000085A6   wordaux2
00:000085A8   byteaux1
00:000085A9   byteaux2
00:000085AA   inicializa_antorchas
00:000085CB X fin_inicializa_antorchas
00:000085CC   inicializa_esqueletos
00:000085ED X fin_inicializa_esqueletos
00:000085EE   pinta_extra_fondo
00:000085F2 X pinta_extra_fondo.examina_sihay_antorchas
00:00008601   pinta_extra_fondo.hayantorchas
00:0000862A   pinta_extra_fondo.examina_sihay_esqueletos
00:0000863B   pinta_extra_fondo.hayesqueletos
00:00008664 X fin_pinta_extra_fondo
00:00008665   actualiza_elementos_fondo
00:00008665 X actualiza_elementos_fondo.examina_antorchas
00:00008673   actualiza_elementos_fondo.examina_esqueletos
00:0000867F X fin_actualiza_elementos_fondo
00:0000867F   flip_llamas_antorchas
00:00008698 X flip_llamas_antorchas.llama_impar
00:000086B9   flip_llamas_antorchas.llama_par
00:000086D8   fin_flip_llamas_antorchas
00:000086DC   flip_calavera_esqueletos
00:00008709 X fin_flip_calavera_esqueletos
00:00008709   var_aux_calavera
00:0000870A   actualiza_escena_calavera
00:00008716   actualiza_escena_calavera.decrementa_escenas
00:00008717 X actualiza_escena_calavera.fin_consulta_escena
00:00008725 X fin_actualiza_escena_calavera
00:00008726   array_puerta_arriba
00:0000873A   array_puerta_derecha
00:0000874F   array_puerta_abajo
00:00008753   array_puerta_izquierda
00:00008768   array_escalera
00:00008798 X lista_puertas
00:00008798   puerta_arriba
00:000087A5   puerta_derecha
00:000087B2   puerta_abajo
00:000087BF   puerta_izquierda
00:000087CC   puerta_escalera
00:000087D9 X datos_puertas
00:000087D9   datos_puerta_escalera
00:000087E6   datos_puerta_arriba
00:000087F3   datos_puerta_derecha
00:00008800   datos_puerta_abajo
00:0000880D   datos_puerta_izquierda
00:0000881A   inicializa_puertas
00:0000884D X fin_inicializa_puertas
00:0000884E   carga_datos_puerta
00:00008853 X fin_carga_datos_puerta
00:00008854   accion_puerta_arriba
00:00008860 X accion_puerta_arriba.si_cambia_nivel
00:00008871   accion_puerta_arriba.no_cambia_nivel
00:00008874   accion_puerta_arriba.fin_cambia_nivel
00:00008877 X fin_accion_puerta_arriba
00:00008877   accion_puerta_derecha
00:00008884 X fin_accion_puerta_derecha
00:00008884   accion_puerta_abajo
00:0000888F X accion_puerta_abajo.si_cambia_nivel
00:000088A1   accion_puerta_abajo.no_cambia_nivel
00:000088A4   accion_puerta_abajo.fin_cambia_nivel
00:000088A7 X fin_accion_puerta_abajo
00:000088A7   accion_puerta_izquierda
00:000088B4 X fin_accion_puerta_izquierda
00:000088B4   pinta_puertas
00:000088CD   pinta_puertas.fin_puerta_arriba
00:000088E0   pinta_puertas.fin_puerta_derecha
00:000088F3   pinta_puertas.fin_puerta_abajo
00:00008906   fin_pinta_puertas
00:00008907   pinta_puerta_aba
00:00008911 X fin_pinta_puerta_aba
00:00008911   pinta_puerta_arr
00:00008919 X pinta_puerta_arr.pinta_puerta_escalera
00:00008920   pinta_puerta_arr.pinta_puerta_normal
00:00008924   pinta_puerta_arr.fin_si
00:0000892A X fin_pinta_puerta_arr
00:0000892A   pinta_puerta_der
00:00008934 X fin_pinta_puerta_der
00:00008934   pinta_puerta_izq
00:0000893E X fin_pinta_puerta_izq
00:0000893E   actualiza_variables_pinta_array
00:0000895C X fin_actualiza_variables_pinta_array
00:0000895D   check_colisiones_puertas
00:0000895D X check_colisiones_puertas.examina_puerta_arriba
00:00008973   check_colisiones_puertas.examina_puerta_derecha
00:00008989   check_colisiones_puertas.examina_puerta_abajo
00:0000899F   check_colisiones_puertas.examina_puerta_izquierda
00:000089B0   check_colisiones_puertas.ejecuta_accion_y_sale
00:000089BB   fin_check_colisiones_puertas
00:000089BC   check_colision_puerta
00:000089BC X check_colision_puerta.deteccioncolision_paso1
00:000089CD   check_colision_puerta.deteccioncolision_paso2
00:000089D5   check_colision_puerta.deteccioncolision_paso3
00:000089E2   check_colision_puerta.deteccioncolision_paso4
00:000089EA   check_colision_puerta.deteccioncolision_paso5
00:000089EC X fin_check_colision_puerta
00:000089ED   desactiva_todas_puertas
00:00008A0D X fin_desactiva_todas_puertas
00:00008A0E   carga_patrones_sprites_nivel
00:00008A12 X fin_carga_patrones_sprites_nivel
00:00008A12   carga_patrones_nivel_comunes
00:00008A1E X fin_carga_patrones_nivel_comunes
00:00008A1E X carga_patrones_sprites_nivel1
00:00008A1E X fin_carga_patrones_sprites
00:00008A1F   render_sprites
00:00008A2B X fin_actualiza_array_sprites_vram
00:00008A2B   vuelca_resultado_puntomira_array
00:00008A50 X vuelca_resultado_puntomira_array.codigo_color_1
00:00008A59   vuelca_resultado_puntomira_array.codigo_color_2
00:00008A62 X fin_vuelca_resultado_puntomira_array
00:00008A62   check_player
00:00008A81 X f
00:00008A82   mueve_arriba
00:00008A8D   mueve_arriba.no_decrementa_y
00:00008A8E X fin_mueve_arriba
00:00008A8F   mueve_derecha
00:00008A9C   mueve_derecha.no_incrementa_x
00:00008A9D X fin_mueve_derecha
00:00008A9E   mueve_abajo
00:00008AAB   mueve_abajo.no_incrementa_y
00:00008AAC X fin_mueve_abajo
00:00008AAD   mueve_izquierda
00:00008AB8   mueve_izquierda.no_decrementa_x
00:00008AB9 X fin_mueve_izquierda
00:00008ABA   mira_disparo
00:00008ABA X mira_disparo.mira_boton_pulsado1
00:00008AC7 X mira_disparo.no_efectua_disparo
00:00008AD2   mira_disparo.efectua_disparo
00:00008AE7   mira_disparo.fin_mira_disparo1
00:00008AE8   mira_disparo.mira_boton_pulsado2
00:00008B04 X fin_mira_disparo
00:00008B04   update_controllers_status
00:00008B3B   read_joy_0
00:00008B4F   check_8th_keyboard_row
00:00008B5D   check_4th_keyboard_row
00:00008B6B X inicializa_replayer_efectos_interrupciones
00:00008B84 X fin_inicializa_replayer_efectos_interrupciones
00:00008B85   subrutina_isr
00:00008B8E X fin_subrutina_isr
00:00008B8E X subrutinas_sonido
00:00000000   CHNPRM_PsInOr
00:00000001   CHNPRM_PsInSm
00:00000002   CHNPRM_CrAmSl
00:00000003   CHNPRM_CrNsSl
00:00000004   CHNPRM_CrEnSl
00:00000005   CHNPRM_TSlCnt
00:00000006   CHNPRM_CrTnSl
00:00000008   CHNPRM_TnAcc
00:0000000A   CHNPRM_COnOff
00:0000000B   CHNPRM_OnOffD
00:0000000C   CHNPRM_OffOnD
00:0000000D   CHNPRM_OrnPtr
00:0000000F   CHNPRM_SamPtr
00:00000011   CHNPRM_NNtSkp
00:00000012   CHNPRM_Note
00:00000013   CHNPRM_SlToNt
00:00000014   CHNPRM_Env_En
00:00000015   CHNPRM_Flags
00:00000016   CHNPRM_TnSlDl
00:00000017   CHNPRM_TSlStp
00:00000019   CHNPRM_TnDelt
00:0000001B   CHNPRM_NtSkCn
00:0000001C   CHNPRM_Volume
00:0000001D X CHNPRM_Size
00:00000000   AR_TonA
00:00000002   AR_TonB
00:00000004   AR_TonC
00:00000006   AR_Noise
00:00000007   AR_Mixer
00:00000008   AR_AmplA
00:00000009   AR_AmplB
00:0000000A   AR_AmplC
00:0000000B   AR_Env
00:0000000D   AR_EnvTp
00:00008B8E   CHECKLP
00:00008B9F X PT3_MUTE
00:00008BAB   PT3_INIT
00:00008BEA   PT3_INIT.TP_0
00:00008BF6   PT3_INIT.TP_1
00:00008BFD   PT3_INIT.TP_2
00:00008C6B   PT3_INIT.L1
00:00008C78   PT3_INIT.L2
00:00008C7C X PT3_INIT.L3
00:00008CA3   PT3_INIT.CORR_1
00:00008CB1   PT3_INIT.CORR_2
00:00008CB8   PT3_INIT.TC_EXIT
00:00008CC3   PT3_INIT.INITV1
00:00008CCB   PT3_INIT.INITV2
00:00008CDF   PT3_INIT.INITV3
00:00008CE3   PD_OrSm
00:00008CED   PD_SAM
00:00008CEE   PD_SAM_
00:00008D04   PD_VOL
00:00008D0D   PD_EOff
00:00008D15   PD_SorE
00:00008D1F   PD_ENV
00:00008D24   PD_ORN
00:00008D29   PD_ESAM
00:00008D36   PTDECOD
00:00008D45   PD_LOOP
00:00008D48   PD_LP2
00:00008D75   PD_NOIS
00:00008D7A   PD_REL
00:00008D80   PD_NOTE
00:00008D88   PD_RES
00:00008D9A   PD_FIN
00:00008DA1   C_PORTM
00:00008DEC   C_PORTM.NOSIG
00:00008DF6   SET_STP
00:00008E02   C_GLISS
00:00008E15   C_SMPOS
00:00008E1B   C_ORPOS
00:00008E21   C_VIBRT
00:00008E39   C_ENGLS
00:00008E4B   C_DELAY
00:00008E51   SETENV
00:00008E6C   C_NOP
00:00008E6D   SETORN
00:00008E86   SPCCOMS
00:00008EA6   CHREGS
00:00008EC9   CHREGS.CH_ORPS
00:00008ED4   CHREGS.CH_NTP
00:00008EDA   CHREGS.CH_NOK
00:00008EF5   CHREGS.CH_SMPS
00:00008F0B   CHREGS.CH_NOAC
00:00008F52   CHREGS.CH_STPP
00:00008F67   CHREGS.CH_AMP
00:00008F79   CHREGS.CH_AMIN
00:00008F7E   CHREGS.CH_SVAM
00:00008F81   CHREGS.CH_NOAM
00:00008F8A   CHREGS.CH_APOS
00:00008F90   CHREGS.CH_VOL
00:00008F9B X CHREGS.CH_ENV
00:00008FA2   CHREGS.CH_NOEN
00:00008FBC   CHREGS.NO_ENAC
00:00008FC3   CHREGS.NO_ENSL
00:00008FD1   CHREGS.CH_MIX
00:00008FD5   CHREGS.CH_EXIT
00:00008FF4   CHREGS.CH_ONDL
00:00008FF8   PT3_PLAY
00:0000902C   PT3_PLAY.PLNLP
00:00009053   PT3_PLAY.PL1A
00:0000905E   PT3_PLAY.PL1B
00:00009073   PT3_PLAY.PL1C
00:00009088   PT3_PLAY.PL1D
00:0000908E   PT3_PLAY.PL2
00:000090F0   PT3_ROUT
00:000090F1   ROUT_A0
00:000090FD   ROUT_A0.LOUT
00:00009111   NT_DATA
00:00009121   T_
00:00009121   TCOLD_0
00:0000912D   TCNEW_1
00:0000912D   TCOLD_1
00:0000912F   TCOLD_2
00:00009141   TCNEW_3
00:00009142   TCOLD_3
00:0000914B   TCNEW_0
00:00009156   TCNEW_2
00:00009161   EMPTYSAMORN
00:00009165   T_PACK
00:00000000 X AYFXRELATIVE
00:0000919A   ayFX_SETUP
00:000091A6   ayFX_END
00:000091AC   ayFX_INIT
00:000091BD   ayFX_INIT.CHECK_PRI
00:000091DE   ayFX_INIT.INIT_END
00:000091E2   ayFX_PLAY
00:000091F6   ayFX_PLAY.TAKECB
00:00009207   ayFX_PLAY.CHECK_NN
00:00009214   ayFX_PLAY.SETPOINTER
00:00009228   ayFX_PLAY.SETMASKS
00:00009236 X ayFX_PLAY.CHK1
00:00009238 X ayFX_PLAY.PLAY_C
00:00009245   ayFX_PLAY.CHK2
00:0000924A X ayFX_PLAY.PLAY_B
00:00009257   ayFX_PLAY.CHK3
00:0000925A X ayFX_PLAY.PLAY_A
00:00009267   ayFX_PLAY.SETMIXER
00:00009277   song
00:00009BDF   sfx_bank
00:00009C2A   examina_ayudas_en_pantalla
00:00009C2B X array_ayudas
00:00009C2B   array_oracionon
00:00009C2D X array_oracionon1
00:00009C2F   array_oracionoff
00:00009C31 X array_oracionoff1
00:00009C33 X array_cruzon
00:00009C35 X array_cruzon1
00:00009C37 X array_cruzoff
00:00009C39 X array_cruzoff1
00:00009C3B X array_aguaon
00:00009C3D X array_aguaon1
00:00009C3F X array_aguaoff
00:00009C41 X array_aguaoff1
00:00009C43 X array_armaduraon
00:00009C45 X array_armaduraon1
00:00009C47 X array_armaduraoff
00:00009C49 X array_armaduraoff1
00:00009C4B X array_plantaon
00:00009C4D X array_plantaon1
00:00009C4F X array_plantaoff
00:00009C51 X array_plantaoff1
00:00009C53 X array_extraon
00:00009C55 X array_extraon1
00:00009C57 X array_extraoff
00:00009C59 X array_extraoff1
00:00009C5B X array_ballestaon
00:00009C5D X array_ballestaon1
00:00009C5F X array_ballestaoff
00:00009C61 X array_ballestaoff1
00:00009C63 X lista_ayudas
00:00009C63   ayuda_oracion
00:00009C72   datos_oracion
00:00009C81   inicializa_ayudas
00:00009C8A X fin_inicializa_ayudas
00:00009C8B   carga_datos_ayuda
00:00009C90 X fin_carga_datos_ayuda
00:00009C91   pinta_obj_ayuda
00:00009C95 X pinta_obj_ayuda.dibujoon
00:00009CA1   pinta_obj_ayuda.dibujooff
00:00009CAA   pinta_obj_ayuda.param_wordaux2
00:00009CB3 X pinta_obj_ayuda.filasycols
00:00009CBE X fin_pinta_obj_ayuda
00:00009CBE   pinta_ayudas_habitacion
00:00009CC3 X pinta_ayudas_habitacion.examina_oracion
00:00009CD4 X pinta_ayudas_habitacion.fin_examina_oracion
00:00009CD4   fin_pinta_ayudas_habitacion
00:00009CD5   accion_oracion
00:00009CD5 X fin_accion_oracion
00:00009CD6 X accion_cruz
00:00009CD6 X fin_accion_cruz
00:00009CD7 X accion_agua
00:00009CD7 X fin_accion_agua
00:00009CD8 X accion_armadura
00:00009CD8 X fin_accion_armadura
00:00009CD9 X accion_planta
00:00009CD9 X fin_accion_planta
00:00009CDA X accion_vidaextra
00:00009CDA X fin_accion_vidaextra
00:00009CDB X accion_ballesta
00:00009CDB X fin_accion_ballesta
00:00009CDC   depack_VRAM
00:00009D09   literal
00:00009D0E   loop
00:00009D17 X getlen
00:00009D1D   lus
00:00009D3A   lenok
00:00009D47   mode7
00:00009D4D   mode6
00:00009D53   mode5
00:00009D59   mode4
00:00009D5F   mode3
00:00009D65   mode2
00:00009D75   offsok
00:00009D80   offsok.loop
00:00009DA2   getbit
00:00009DA6   getbitexx
00:00009DAC   Depack_out
00:00009DAE   modes
00:00000000   ESTRUCTURA_PUNTOMIRA.posx
00:00000001   ESTRUCTURA_PUNTOMIRA.posy
00:00000002 X ESTRUCTURA_PUNTOMIRA.escena
00:00000003 X ESTRUCTURA_PUNTOMIRA.velocidad
00:00000004 X ESTRUCTURA_PUNTOMIRA.boton2_pressed
00:00000005 X ESTRUCTURA_PUNTOMIRA.cadencia
00:00000006 X ESTRUCTURA_PUNTOMIRA.pm_aux1
00:00000007 X ESTRUCTURA_PUNTOMIRA.pm_aux2
00:00000008 X ESTRUCTURA_PUNTOMIRA.pm_aux3
00:00000009 X ESTRUCTURA_PUNTOMIRA.pm_aux4
00:0000000A X ESTRUCTURA_PUNTOMIRA.pm_aux5
00:0000000B X ESTRUCTURA_PUNTOMIRA.pm_aux6
00:0000000C X ESTRUCTURA_PUNTOMIRA.pm_aux7
00:0000000D X ESTRUCTURA_PUNTOMIRA.pm_aux8
00:0000000E X ESTRUCTURA_PUNTOMIRA.pm_aux9
00:0000000F X ESTRUCTURA_PUNTOMIRA.pm_aux10
00:00000010 X ESTRUCTURA_PUNTOMIRA
00:00000000 X ESTRUCTURA_ANTORCHA.activo
00:00000001 X ESTRUCTURA_ANTORCHA.postilemem_antor1
00:00000003 X ESTRUCTURA_ANTORCHA.pospantalla_antor1
00:00000004 X ESTRUCTURA_ANTORCHA.pospantalla_antor2
00:00000005 X ESTRUCTURA_ANTORCHA.escena
00:00000006 X ESTRUCTURA_ANTORCHA.cont_sig_escena
00:00000007   ESTRUCTURA_ANTORCHA
00:00000000 X ESTRUCTURA_ESQUELETO.activo
00:00000001 X ESTRUCTURA_ESQUELETO.postilemem_antor1
00:00000003 X ESTRUCTURA_ESQUELETO.pospantalla_esquel1
00:00000004 X ESTRUCTURA_ESQUELETO.pospantalla_esquel2
00:00000005   ESTRUCTURA_ESQUELETO.escena
00:00000006   ESTRUCTURA_ESQUELETO.cont_sig_escena
00:00000007   ESTRUCTURA_ESQUELETO
00:00000000 X ESTRUCTURA_ENEMIGO.tipo
00:00000001 X ESTRUCTURA_ENEMIGO.posx
00:00000002 X ESTRUCTURA_ENEMIGO.posy
00:00000003 X ESTRUCTURA_ENEMIGO.color
00:00000004 X ESTRUCTURA_ENEMIGO.escena
00:00000005 X ESTRUCTURA_ENEMIGO.contador_siguiente_escena
00:00000006 X ESTRUCTURA_ENEMIGO.reset_contador
00:00000007 X ESTRUCTURA_ENEMIGO.dano
00:00000008 X ESTRUCTURA_ENEMIGO.energia
00:00000009 X ESTRUCTURA_ENEMIGO.ver_hor
00:0000000A X ESTRUCTURA_ENEMIGO.manejador_dibujo
00:0000000C X ESTRUCTURA_ENEMIGO.en_aux3
00:0000000D X ESTRUCTURA_ENEMIGO.en_aux4
00:0000000E   ESTRUCTURA_ENEMIGO
00:00000000 X ESTRUCTURA_AYUDA.activa
00:00000001 X ESTRUCTURA_AYUDA.posx
00:00000002 X ESTRUCTURA_AYUDA.posy
00:00000003 X ESTRUCTURA_AYUDA.radiox
00:00000004 X ESTRUCTURA_AYUDA.radioy
00:00000005 X ESTRUCTURA_AYUDA.accion
00:00000007   ESTRUCTURA_AYUDA.tiles_ayudaon
00:00000009   ESTRUCTURA_AYUDA.tiles_ayudaoff
00:0000000B   ESTRUCTURA_AYUDA.pos_en_tilemap
00:0000000D X ESTRUCTURA_AYUDA.alto
00:0000000E X ESTRUCTURA_AYUDA.ancho
00:0000000F   ESTRUCTURA_AYUDA
00:00000000 X ESTRUCTURA_PUERTA.activa
00:00000001   ESTRUCTURA_PUERTA.posx
00:00000002   ESTRUCTURA_PUERTA.posy
00:00000003   ESTRUCTURA_PUERTA.radiox
00:00000004   ESTRUCTURA_PUERTA.radioy
00:00000005   ESTRUCTURA_PUERTA.accion
00:00000007   ESTRUCTURA_PUERTA.tiles_puerta
00:00000009   ESTRUCTURA_PUERTA.pos_en_tilemap
00:0000000B   ESTRUCTURA_PUERTA.alto
00:0000000C   ESTRUCTURA_PUERTA.ancho
00:0000000D   ESTRUCTURA_PUERTA
00:00009DBC X sprites_pantantalla
00:00009DBC   sprites_comunes
00:00009DBC X sprite_punto_mira_1
00:00009DDC X sprite_punto_mira_2
00:00009DFC X sprite_punto_mira_1_mejorado
00:00009E1C X sprite_punto_mira_2_mejorado
00:00009E3C X sprite_explosion_1
00:00009E5C X sprite_explosion_2
00:00009E7C   fin_sprites_comunes
00:00009E7C X sprite_arana1_1
00:00009E9C X sprite_arana1_2
00:00009EBC X sprite_murcielago1_1
00:00009EDC X sprite_murcielago1_2
00:00009EFC X sprite_serpiente1_1
00:00009F1C X sprite_serpiente1_2
00:00009F3C X sprite_serpiente2_1
00:00009F5C X sprite_serpiente2_2
00:00009F7C X sprite_zombi1_1_1
00:00009F9C X sprite_zombi1_2_1
00:00009FBC X sprite_zombi1_3_1
00:00009FDC X sprite_zombi1_4_1
00:00009FFC X sprite_zombi1_1_2
00:0000A01C X sprite_zombi1_2_2
00:0000A03C X sprite_zombi1_3_2
00:0000A05C X sprite_zombi1_4_2
00:0000A07C X sprite_zombi2_1_1
00:0000A09C X sprite_zombi2_2_1
00:0000A0BC X sprite_zombi2_3_1
00:0000A0DC X sprite_zombi2_4_1
00:0000A0FC X sprite_zombi2_1_2
00:0000A11C X sprite_zombi2_2_2
00:0000A13C X sprite_zombi2_3_2
00:0000A15C X sprite_zombi2_4_2
00:0000A17C X sprite_caballero1_1_1
00:0000A19C X sprite_caballero1_2_1
00:0000A1BC X sprite_caballero1_3_1
00:0000A1DC X sprite_caballero1_4_1
00:0000A1FC X sprite_caballero1_1_2
00:0000A21C X sprite_caballero1_2_2
00:0000A23C X sprite_caballero1_3_2
00:0000A25C X sprite_caballero1_4_2
00:0000A27C X sprite_caballero2_1_1
00:0000A29C X sprite_caballero2_2_1
00:0000A2BC X sprite_caballero2_3_1
00:0000A2DC X sprite_caballero2_4_1
00:0000A2FC X sprite_caballero2_1_2
00:0000A31C X sprite_caballero2_2_2
00:0000A33C X sprite_caballero2_3_2
00:0000A35C X sprite_caballero2_4_2
00:0000A37C X sprite_llama1_1
00:0000A39C X sprite_llama2_1
00:0000A3BC X sprite_llama1_2
00:0000A3DC X sprite_llama2_2
00:0000A3FC X sprite_fantasma1_1
00:0000A41C X sprite_fantasma2_1
00:0000A43C X sprite_fantasma1_2
00:0000A45C X sprite_fantasma2_2
00:0000A47C X sprite_magia1_1
00:0000A49C X sprite_magia2_1
00:0000A4BC X sprite_magia1_2
00:0000A4DC X sprite_magia2_2
00:0000A4FC X sprite_beholder1_1
00:0000A51C X sprite_beholder2_1
00:0000A53C X sprite_beholder3_1
00:0000A55C X sprite_beholder4_1
00:0000A57C X sprite_beholder1_2
00:0000A59C X sprite_beholder2_2
00:0000A5BC X sprite_beholder3_2
00:0000A5DC X sprite_beholder4_2
00:0000A5FC X sprite_vampiro1_1
00:0000A61C X sprite_vampiro2_1
00:0000A63C X sprite_vampiro1_2
00:0000A65C X sprite_vampiro2_2
00:0000A67C X sprite_manoizq1
00:0000A69C X sprite_manoizq2
00:0000A6BC X sprite_manoizq3
00:0000A6DC X sprite_manoder1
00:0000A6FC X sprite_manoder2
00:0000A71C X sprite_manoder3
00:0000A73C   habitacion_actual
00:0000A73D   habitacion_extras
00:0000A73E   habitacion_actual_puntero
00:0000A740   is_habitacion_terminada
00:0000A741   habitaciones_juego
00:0000A741   habitaciones_nivel0
00:0000A7B1   habitaciones_nivel1
00:0000A821   habitaciones_nivel2
00:0000A891   habitaciones_nivel3
00:0000A901   habitaciones_nivel4
00:0000A971   habitaciones_nivel5
00:0000A9E1 X habitaciones_nivel6
00:0000AA51   color_base
00:0000AA54   color_bomba1
00:0000AA57   color_bomba2
00:0000AA5A   prota
00:0000AA5A   prota.posx
00:0000AA5B   prota.posy
00:0000AA5C   prota.escena
00:0000AA5D X prota.velocidad
00:0000AA5E X prota.boton2_pressed
00:0000AA5F   prota.cadencia
00:0000AA60 X prota.pm_aux1
00:0000AA61 X prota.pm_aux2
00:0000AA62 X prota.pm_aux3
00:0000AA63 X prota.pm_aux4
00:0000AA64 X prota.pm_aux5
00:0000AA65 X prota.pm_aux6
00:0000AA66 X prota.pm_aux7
00:0000AA67 X prota.pm_aux8
00:0000AA68 X prota.pm_aux9
00:0000AA69 X prota.pm_aux10
00:0000AA6A   prota_nivel
00:0000AA6B   prota_vidas
00:0000AA6C   prota_reliquias
00:0000AA6D   prota_pos_mapx
00:0000AA6E   prota_pos_mapy
00:0000AA6F   prota_energia
00:0000AA70   array_aux_vidas
00:0000AA78   array_aux_reliquias
00:0000AA80   array_aux_energia
00:0000AA87   ultimo_pos_array_aux_energia
00:0000AA88   array_aux_mapa_limpiar
00:0000AA8F   elemento_pintar_mapa
00:0000AA90   antorchas
00:0000AA97   array_antorcha
00:0000AA9A   esqueletos
00:0000AAA1   array_esqueleto
00:0000AAAD   lista_escenas_calavera
00:0000AAB1   array_sprites
00:0000AAB1   array_sprites_pm
00:0000AAB9 X array_sprites_enem
00:0000AB31 X lista_enemigos
00:0000ABBD X puntero_array_atrib_array_VRAM
00:0000ABBF   tiles_patrones_nivel0
00:0000ADE9   tiles_color_nivel0
00:0000AE54   tiles_mapa_nivel0
00:0000AE89   tiles_patrones_nivel1
00:0000B03E   tiles_color_nivel1
00:0000B085   tiles_mapa_nivel1
00:0000B0BA   tiles_patrones_nivel2
00:0000B26F   tiles_color_nivel2
00:0000B2B6   tiles_mapa_nivel2
00:0000B2EB   tiles_patrones_nivel3
00:0000B4A0   tiles_color_nivel3
00:0000B4E7   tiles_mapa_nivel3
00:0000B51C   tiles_patrones_nivel4
00:0000B6D1   tiles_color_nivel4
00:0000B718   tiles_mapa_nivel4
00:0000B74D   tiles_patrones_nivel5
00:0000B902   tiles_color_nivel5
00:0000B949   tiles_mapa_nivel5
00:0000B97E   tiles_patrones_nivel6
00:0000BB33   tiles_color_nivel6
00:0000BB7A   tiles_mapa_nivel6
00:0000BBAF   tiles_patrones_marcador
00:0000BCFB   tiles_color_marcador
00:0000BD30   tiles_mapa_marcador
00:0000BD92   END


 Output: t4.out
-------------------------------------------------

 Page: 00
  Org: 00008000  Size: *  Used: 00000000

    No output

 Output: t4.bin
-------------------------------------------------

 Page: 00
  Org: 00008000  Size: *  Used: 00003D99

   Address   Length Align   Label
   00008000   15769         START
