Sjasm Z80 Assembler v0.42c - www.xl2s.tk             [2021.09.09 - 20:35:38]

t4.asm
Errors: 0

       1   00:0000                      	OUTPUT	"t4.bin"
       2   00:8000                      	
       3   00:8000                      ;;=====================================================
       4   00:8000                      ;;DEFINICIÓN DE CONSTANTES
       5   00:8000                      ;;=====================================================	
       6   00:8000                      	include "constantes.asm"
       1.  00:8000                      ;;=====================================================
       2.  00:8000                      ;; FICHERO constantes.asm
       3.  00:8000                      ;;=====================================================
       4.  00:8000                      
       5.  00:8000                      ;;ETIQUETAS/CONSTANTES BIOS TECLADO
       6.  00:8000  (00:00D8)           GTTRIG		equ		#00D8	;Returns current trigger status
       7.  00:8000  (00:00D5)           GTSTCK		equ		#00D5	;Returns the joystick/cursors status
       8.  00:8000  (00:F3DB)           CLIKSW		equ		#F3DB	;deshabilita el sonido de clic cuando se pulsa una tecla
       9.  00:8000                      
      10.  00:8000                      ;;ETIQUETAS/CONSTANTES BIOS VDP
      11.  00:8000  (00:013E)           RDVDP		equ		#013E	;lee registro status VDP
      12.  00:8000  (00:0047)           WRTVDP		equ		#0047	;escribe registros del VDP
      13.  00:8000  (00:005C)           LDIRVM		equ		#005C	;RAM/ROM -> VRAM
      14.  00:8000  (00:0059)           LDIRMV		equ		#0059	;VRAM -> RAM
      15.  00:8000  (00:005F)           CHGMOD		equ		#005F	;cambia modo pantalla (screen mode)
      16.  00:8000  (00:0041)           DISSCR  	equ		#0041	;desactiva pantanlla
      17.  00:8000  (00:0044)           ENASCR  	equ		#0044	;activa pantalla
      18.  00:8000  (00:0062)           CHGCLR  	equ		#0062	;cambia color de pantalla (toca A y direcciones)
      19.  00:8000  (00:F3E9)           FORCLR		equ		#F3E9	;zona memoria color foreground
      20.  00:8000  (00:F3EA)           BAKCLR  	equ		#F3EA	;zona memoria color background
      21.  00:8000  (00:F3EB)           BDRCLR 		equ		#F3EB	;zona memoria bordercolor
      22.  00:8000  (00:00C3)           CLS			equ		#00C3	;limpia pantalla (necesita A=0)
      23.  00:8000                      
      24.  00:8000                      ;;ETIQUETAS/CONSTANTES REGISTROS VDP
      25.  00:8000  (00:F3DF)           RG0SAV		equ		#F3DF	;Mirror of VDP register 0 (Basic: VDP(0))
      26.  00:8000  (00:F3E0)           RG1SAV		equ		#F3E0	;Mirror of VDP register 1 (Basic: VDP(1))
      27.  00:8000  (00:F3E1)           RG2SAV		equ		#F3E1	;Mirror of VDP register 2 (Basic: VDP(2))
      28.  00:8000  (00:F3E2)           RG3SAV		equ		#F3E2	;Mirror of VDP register 3 (Basic: VDP(3))
      29.  00:8000  (00:F3E3)           RG4SAV		equ		#F3E3	;Mirror of VDP register 4 (Basic: VDP(4))
      30.  00:8000  (00:F3E4)           RG5SAV		equ		#F3E4	;Mirror of VDP register 5 (Basic: VDP(5))
      31.  00:8000  (00:F3E5)           RG6SAV		equ		#F3E5	;Mirror of VDP register 6 (Basic: VDP(6))
      32.  00:8000  (00:F3E6)           RG7SAV		equ		#F3E6	;Mirror of VDP register 7 (Basic: VDP(7))
      33.  00:8000  (00:F3E7)           STATFL		equ		#F3E7	;Mirror of VDP(8) status register (S#0)
      34.  00:8000                      
      35.  00:8000  (00:0099)           REGEST		equ		#0099	;registro de estado para escribir directamente en VRAM
      36.  00:8000  (00:0098)           REGESCVDP	equ		#0098	;registro donde escribir valor para VRAM
      37.  00:8000                      
      38.  00:8000                      ;;ETIQUETAS/CONSTANTES REGISTROS PSG (PARA JOYSTICK)
      39.  00:8000  (00:00A0)           PSG_A  equ  0a0h  ;reg address
      40.  00:8000  (00:00A1)           PSG_W  equ  0a1h  ;reg data WR
      41.  00:8000  (00:00A2)           PSG_R  equ  0a2h  ;reg data
      42.  00:8000                      
      43.  00:8000                      
      44.  00:8000                      ;;ETIQUETAS DE ZONAS DE MEMORIA DE LA VPD (MSX1)
      45.  00:8000  (00:0000)           CHRTBL		equ		#0000
      46.  00:8000  (00:1800)           TILMAP		equ		#1800
      47.  00:8000  (00:1900)           TILMAPBANK1 equ		#1900
      48.  00:8000  (00:1B00)           SPRART		equ		#1B00
      49.  00:8000  (00:2000)           CLRTBL		equ		#2000
      50.  00:8000  (00:3800)           SPRTBL		equ		#3800
      51.  00:8000                      
      52.  00:8000                      
      53.  00:8000                      ;;ETIQUETAS ESTANDAR PARA DAR MÁS CLARIDAD AL CODIGO
      54.  00:8000  (00:0001)           SI			equ		1
      55.  00:8000  (00:0000)           NO			equ		0
      56.  00:8000  (00:0004)           LIMCADENCIA equ		4	;nº de veces que se ejecutará el disparo antes de ejecutar un disparo real (porque cuando se pulsa la tecl dispara 3 ó 4 veces de rápido que va)
      57.  00:8000                      ;hay que estudiar si 3 es un nº mejor
      58.  00:8000                      
      59.  00:8000                      
      60.  00:8000                      
      61.  00:8000                      ;;PALETA DE COLORES DEL MSX
      62.  00:8000  (00:0000)           COLTRASP	equ		0
      63.  00:8000  (00:0001)           COLNEGRO	equ		1
      64.  00:8000  (00:0002)           COLVERDE	equ		2
      65.  00:8000  (00:0003)           COLVERCLA	equ		3
      66.  00:8000  (00:0004)           COLAZULOSC	equ		4
      67.  00:8000  (00:0005)           COLAZULLA	equ		5
      68.  00:8000  (00:0006)           COLROJOOSC	equ		6
      69.  00:8000  (00:0007)           COLCYAN		equ		7
      70.  00:8000  (00:0008)           COLROJO		equ		8
      71.  00:8000  (00:0009)           COLROJOCLA	equ		9
      72.  00:8000  (00:000A)           COLAMAROSC	equ		10
      73.  00:8000  (00:000B)           COLAMARCLA	equ		11
      74.  00:8000  (00:000C)           COLVERDOSC	equ		12
      75.  00:8000  (00:000D)           COLMAGENTA	equ		13
      76.  00:8000  (00:000E)           COLGRIS		equ		14
      77.  00:8000  (00:000F)           COLBLANCO	equ		15
      78.  00:8000                      
      79.  00:8000                      
      80.  00:8000                      
      81.  00:8000                      ;;ETIQUETAS ESPECIFICAS PARA DAR MÁS CLARIDAD AL CODIGO (relacionadas con posiciones en mapa vdp)
      82.  00:8000  (00:02F8)           POSMAPLIN1  equ		#02F8
      83.  00:8000  (00:02D8)           POSMAPLIN2  equ		#02D8
      84.  00:8000  (00:02B8)           POSMAPLIN3  equ		#02B8
      85.  00:8000  (00:0298)           POSMAPLIN4  equ		#0298
      86.  00:8000  (00:0278)           POSMAPLIN5  equ		#0278
      87.  00:8000  (00:0258)           POSMAPLIN6  equ		#0258
      88.  00:8000  (00:0238)           POSMAPLIN7  equ		#0238
      89.  00:8000                      
      90.  00:8000  (00:000D)           POSCARAMAP	equ		#000D
      91.  00:8000  (00:0248)           POSVIDAS	equ		#0248
      92.  00:8000  (00:0011)           POSRELIMAP	equ		#0011
      93.  00:8000  (00:02C8)           POSRELIQ	equ		#02C8
      94.  00:8000  (00:0288)           POSENERG	equ		#0288
      95.  00:8000  (00:02B4)           POSNIVEL	equ		#02B4
      96.  00:8000  (00:0238)           POSMAPA		equ 	#0238
      97.  00:8000                      
      98.  00:8000  (00:01EE)           POSPUERABAJ equ		#01EE
      99.  00:8000  (00:008E)           POSPUERARRI equ		#008E
     100.  00:8000  (00:00FC)           POSPUERDERE equ		#00FC
     101.  00:8000  (00:00E1)           POSPUERIZQU equ		#00E1
     102.  00:8000                      
     103.  00:8000  (00:0000)           ORACIONON	equ		0
     104.  00:8000  (00:0004)           ORACIONOFF  equ		4
     105.  00:8000  (00:0008)           CRUZON		equ		8
     106.  00:8000  (00:000C)           CRUZOFF		equ		12
     107.  00:8000  (00:0010)           AGUAON		equ		16
     108.  00:8000  (00:0014)           AGUAOFF		equ		20
     109.  00:8000  (00:0018)           ARMADON		equ		24
     110.  00:8000  (00:001C)           ARMADOFF	equ		28
     111.  00:8000  (00:0020)           PLANTAON	equ		32
     112.  00:8000  (00:0024)           PLANTAOFF	equ		36
     113.  00:8000  (00:0028)           VIDAEXTON	equ		40
     114.  00:8000  (00:002C)           VIDAEXTOFF	equ		44
     115.  00:8000  (00:0030)           BALLESON	equ		48
     116.  00:8000  (00:0034)           BALLESOFF	equ		52
     117.  00:8000  (00:0000)           INACTIVO	equ		0
     118.  00:8000                      
     119.  00:8000                      ;;ETIQUETAS ESPECIFICAS PARA DAR MÁS CLARIDAD AL CODIGO (relacionadas con posiciones en en el banco de memoria)
     120.  00:8000  (00:0013)           TILEPROTAM  equ		19		;tile del prota para pintar en mapa
     121.  00:8000  (00:0009)           TILEGRISM	equ		9		;tile gris que representa vacio (por donde el prota va pasando)
     122.  00:8000  (00:0010)           TILEMAPROJO equ		16
     123.  00:8000  (00:000F)           TILEMAPAMAR equ		15
     124.  00:8000  (00:000E)           TILEMAPVERD equ		14
     125.  00:8000                      
     126.  00:8000                      
     127.  00:8000                      ;;ETIQUETAS ESPECIFICAS PARA DAR MÁS CLARIDAD AL CODIGO (generales)
     128.  00:8000  (00:0008)           NMAXVIDREL	equ		8		;el número máximo de vidas y de reliquias es de 8
     129.  00:8000  (00:0007)           NHABNIVEL	equ		7
     130.  00:8000  (00:00F8)           MAXENERGIA  equ		248
     131.  00:8000  (00:00D9)           TILEENERG8  equ		217
     132.  00:8000  (00:00BA)           TILEENERG7  equ		186
     133.  00:8000  (00:009B)           TILEENERG6  equ		155
     134.  00:8000  (00:007C)           TILEENERG5  equ		124
     135.  00:8000  (00:005D)           TILEENERG4  equ		93
     136.  00:8000  (00:003E)           TILEENERG3  equ		62
     137.  00:8000  (00:001F)           TILEENERG2  equ		31
     138.  00:8000  (00:0000)           TILENEGRO	equ		0
     139.  00:8000                      
     140.  00:8000                      ;limites
     141.  00:8000  (00:0000)           LIMPANTIZQ  equ		0
     142.  00:8000  (00:00FF)           LIMPANTDER  equ		255
     143.  00:8000  (00:0000)           LIMPANTARR  equ		0
     144.  00:8000  (00:0080)           LIMPANTABA  equ		128
     145.  00:8000                      
     146.  00:8000                      
     147.  00:8000                      ;matriz de 7x7 empieza en 0, y fila y x col, cuento desde esquina sup izq
     148.  00:8000  (00:0006)           BASEMAPY	equ		6
     149.  00:8000  (00:0003)           BASEMAPX	equ		3
     150.  00:8000                      
     151.  00:8000                      
     152.  00:8000                      
     153.  00:8000                      ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
     154.  00:8000                      ;; CONSTANTES PARA INTERRUPCIONES
     155.  00:8000                      ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
     156.  00:8000  (00:FD9A)           H.KEYI		equ     	#FD9A
     157.  00:8000  (00:FD9F)           H.TIMI	 	equ     	#FD9F
     158.  00:8000                      
     159.  00:8000                      
     160.  00:8000                      ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
     161.  00:8000                      ;; CONSTANTES PARA SONIDO 
     162.  00:8000                      ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
     163.  00:8000                      
     164.  00:8000  (F000)              	map		#f000
     165.  00:8000                      
     166.  00:8000                      ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;PT3 REPLAYER
     167.  00:8000  (00:F000)           PT3_SETUP:		#1	;set bit0 to 1, if you want to play without looping
     168.  00:8000                      					;bit7 is set each time, when loop point is passed
     169.  00:8000  (00:F001)           PT3_MODADDR:	#2
     170.  00:8000  (00:F003)           PT3_CrPsPtr:	#2
     171.  00:8000  (00:F005)           PT3_SAMPTRS:	#2
     172.  00:8000  (00:F007)           PT3_OrnPtrs:	#2
     173.  00:8000  (00:F009)           PT3_PDSP:		#2
     174.  00:8000  (00:F00B)           PT3_CSP:		#2
     175.  00:8000  (00:F00D)           PT3_PSP:		#2
     176.  00:8000  (00:F00F)           PT3_PrNote:		#1
     177.  00:8000  (00:F010)           PT3_PrSlide:	#2
     178.  00:8000  (00:F012)           PT3_AdInPtA:	#2
     179.  00:8000  (00:F014)           PT3_AdInPtB:	#2
     180.  00:8000  (00:F016)           PT3_AdInPtC:	#2
     181.  00:8000  (00:F018)           PT3_LPosPtr:	#2
     182.  00:8000  (00:F01A)           PT3_PatsPtr:	#2
     183.  00:8000  (00:F01C)           PT3_Delay:		#1
     184.  00:8000  (00:F01D)           PT3_AddToEn:	#1
     185.  00:8000  (00:F01E)           PT3_Env_Del:	#1
     186.  00:8000  (00:F01F)           PT3_ESldAdd:	#2
     187.  00:8000  (00:F021)           PT3_NTL3:		#2	; AND A / NOP (note table creator)
     188.  00:8000                      
     189.  00:8000  (00:F023)           VARS:			#0
     190.  00:8000                      
     191.  00:8000  (00:F023)           ChanA:			#29			;CHNPRM_Size
     192.  00:8000  (00:F040)           ChanB:			#29			;CHNPRM_Size
     193.  00:8000  (00:F05D)           ChanC:			#29			;CHNPRM_Size
     194.  00:8000                      
     195.  00:8000                      ;GlobalVars
     196.  00:8000  (00:F07A)           DelyCnt:		#1
     197.  00:8000  (00:F07B)           CurESld:		#2
     198.  00:8000  (00:F07D)           CurEDel:		#1
     199.  00:8000  (00:F07E)           Ns_Base_AddToNs:	#0
     200.  00:8000  (00:F07E)           Ns_Base:		#1
     201.  00:8000  (00:F07F)           AddToNs:		#1
     202.  00:8000                      
     203.  00:8000  (00:F080)           NT_:			#192	; Puntero a/tabla de frecuencias
     204.  00:8000                      
     205.  00:8000  (00:F140)           AYREGS:			#0
     206.  00:8000  (00:F140)           VT_:			#14
     207.  00:8000  (00:F14E)           EnvBase:		#2
     208.  00:8000  (00:F150)           VAR0END:		#0
     209.  00:8000                      
     210.  00:8000  (00:F150)           T1_:			#0		
     211.  00:8000  (00:F150)           T_NEW_1:		#0
     212.  00:8000  (00:F150)           T_OLD_1:		#24
     213.  00:8000  (00:F168)           T_OLD_2:		#24
     214.  00:8000  (00:F180)           T_NEW_3:		#0
     215.  00:8000  (00:F180)           T_OLD_3:		#2
     216.  00:8000  (00:F182)           T_OLD_0:		#0
     217.  00:8000  (00:F182)           T_NEW_0:		#24
     218.  00:8000  (00:F19A)           T_NEW_2:		#166
     219.  00:8000                      ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;PT3 REPLAYER END
     220.  00:8000                      
     221.  00:8000                      ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ayFX REPLAYER 
     222.  00:8000  (00:F240)           ayFX_MODE:		#1			; ayFX mode
     223.  00:8000  (00:F241)           ayFX_BANK:		#2			; Current ayFX Bank
     224.  00:8000  (00:F243)           ayFX_PRIORITY:	#1			; Current ayFX stream priotity
     225.  00:8000  (00:F244)           ayFX_POINTER:	#2			; Pointer to the current ayFX stream
     226.  00:8000  (00:F246)           ayFX_TONE:		#2			; Current tone of the ayFX stream
     227.  00:8000  (00:F248)           ayFX_NOISE:		#1			; Current noise of the ayFX stream
     228.  00:8000  (00:F249)           ayFX_VOLUME:	#1			; Current volume of the ayFX stream
     229.  00:8000  (00:F24A)           ayFX_CHANNEL:	#1			; PSG channel to play the ayFX stream
     230.  00:8000                      
     231.  00:8000                      	;IF (AYFXRELATIVE == 1 ) 
     232.  00:8000                      ;ayFX_VT:	ds	2			; ayFX relative volume table pointer
     233.  00:8000                      	;ENDIF
     234.  00:8000                      ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ayFX REPLAYER END
     235.  00:8000                      
     236.  00:8000                      
     237.  00:8000                      
       7   00:8000                      
       8   00:8000                      ;;=====================================================
       9   00:8000                      ;;DEFINICIÓN DE CABECERA DE ARCHIVO BIN
      10   00:8000                      ;;=====================================================		
      11   00:8000                      	include "cabecerabin.asm"
       1.  00:8000                      ;;=====================================================
       2.  00:8000                      ;; FICHERO cabecera.asm
       3.  00:8000                      ;;=====================================================
       4.  00:8000                      
       5.  00:8000                      ;;CABECERA FICHERO BIN
       6.  00:8000  FE                  	DB	#FE
       7.  00:8001  00 80               	DW	START
       8.  00:8003  8E B7               	DW	END
       9.  00:8005  00 80               	DW	START
      10.  00:8007                      
      11.  00:8007                      ;;INICIO CÓDIGO PROGRAMA	
      12.  00:8007                      	ORG	#8000
      13.  00:8000                      	
      12   00:8000                      	
      13   00:8000                      START:	
      14   00:8000                      	;inicializa pantalla y entonrno
      15   00:8000  CD 05 81            	CALL	sub_preparapantalla			;screen 2,2 sin click al pulsar tecla y color 16,1,1
      16   00:8003                      	
      17   00:8003                      	;inicializa variables para parametrizar funciones y que lo que se muestre sea variable (nº vidas, mapa, puertas, pantalla, etc...)
      18   00:8003  CD 39 80            	CALL	inicializa_variables_pruebas
      19   00:8006                      	
      20   00:8006                      	;inicializa los niveles por partida
      21   00:8006  CD 5C 80            	CALL	inicializa_niveles			;no es necesario parametrizarlo según el nivel del usuario ya que se cargan todos
      22   00:8009                      	
      23   00:8009  CD DC 80            	CALL	inicializa_ayudas
      24   00:800C                      	
      25   00:800C                      	;pinta la pantalla (la primera o algunas especiales se pintan completamente)
      26   00:800C  CD 26 81            	CALL	pinta_pantalla_completa 
      27   00:800F                      	
      28   00:800F                      	;carga sprites en memoria (SE HA RETRASADO HASTA PARAMETRIZAR LA CARGA DE PANTALLAS)
      29   00:800F  CD B3 84            	CALL 	carga_patrones_sprites_nivel
      30   00:8012                      	
      31   00:8012                      	;funciones que modificarian el marcador si se produce un evento cuando toque y cuando se pinta la pantalla ya se mira
      32   00:8012                      	;una variable para ver si el array hay que actualizarlo en pantalla o no
      33   00:8012  CD 66 82            	CALL	pinta_vidas
      34   00:8015  CD 75 82            	CALL 	pinta_reliquias
      35   00:8018  CD 84 82            	CALL	pinta_nivel
      36   00:801B  CD 04 83            	CALL	borra_mapa
      37   00:801E  CD 97 83            	CALL	pinta_puertas
      38   00:8021                      
      39   00:8021  3E 13               	LD		 A, TILEPROTAM
      40   00:8023  32 83 A4            	LD		(elemento_pintar_mapa), A
      41   00:8026  CD 01 84            	CALL	posiciona_en_mapa		;se le pasa elemento_pintar_mapa (tile del prota) está el prota y prota.poxx y posy
      42   00:8029                      	
      43   00:8029  CD E5 80            	CALL	actualiza_ayudas
      44   00:802C                      	
      45   00:802C                      
      46   00:802C                      	
      47   00:802C                      	;incializacion de replayer con interrupciones
      48   00:802C                      ;	CALL	inicializa_replayer_efectos_interrupciones
      49   00:802C                      
      50   00:802C                      loop_principal:
      51   00:802C  76                  	HALT							;espera VBLANK y sincroniza
      52   00:802D                      	
      53   00:802D  CD CB 84            	CALL	render_sprites			;actualiza array de sprites y los pinta en pantalla
      54   00:8030                      	
      55   00:8030  CD F5 82            	CALL	pinta_energia			;pinta la energia en pantalla
      56   00:8033                      
      57   00:8033  CD 0E 85            	CALL	check_player			;MIRA EL CONTROL Y APLICA LA LOGICA DE MOVIMIENTO DEL PROTAGONISTA
      58   00:8036                      	
      59   00:8036  C3 2C 80            	JP		loop_principal
      60   00:8039                      fin_programa_principal:
      61   00:8039                      	;RET
      62   00:8039                      
      63   00:8039                      
      64   00:8039                      
      65   00:8039                      
      66   00:8039                      
      67   00:8039                      ;;*******************************************************************
      68   00:8039                      ; sólo para hacer pruebas y pintar la parte de las vidas y demás
      69   00:8039                      inicializa_variables_pruebas:
      70   00:8039  3E 04               	LD		 A, 4
      71   00:803B  32 5F A4            	LD		(prota_vidas),A
      72   00:803E                      
      73   00:803E  3E 04               	LD		 A, 4
      74   00:8040  32 60 A4            	LD		(prota_reliquias), A
      75   00:8043                      
      76   00:8043  3E 64               	LD		 A, 100
      77   00:8045  32 63 A4            	LD		(prota_energia), A
      78   00:8048                      
      79   00:8048                      	;ubico al prota dentro del nivel para obtener luego las habitaciones y enemigos que aparecerán
      80   00:8048                      	;será igual la posición inicial en todos los niveles
      81   00:8048                      	
      82   00:8048  3E 00               	LD		 A, 0				;los niveles (matrices) son 7 del 0 al 6
      83   00:804A  32 5E A4            	LD		(prota_nivel), A	;nivel empieza en 0 para usar las posiciones ascii
      84   00:804D                      
      85   00:804D  3E 00               	LD		 A, 0				;los subniveles (filas) son 7 del 0 al 6
      86   00:804F  32 62 A4            	LD		(prota_pos_mapy), A	;pos Y dentro del nivel (se empieza en 0)
      87   00:8052                      
      88   00:8052  3E 02               	LD		 A, 2				;columnas 7: del 0 al 6
      89   00:8054  32 61 A4            	LD		(prota_pos_mapx), A	;pos X dentro del nivel (se empieza en 0)
      90   00:8057                      	
      91   00:8057  AF                  	XOR		 A
      92   00:8058  32 53 A4            	LD		(prota.cadencia), A
      93   00:805B                      fin_inicializa_variables_pruebas:
      94   00:805B  C9                  	RET
      95   00:805C                      ;;************************************************************************
      96   00:805C                      
      97   00:805C                      
      98   00:805C                      
      99   00:805C                      
     100   00:805C                      
     101   00:805C                      
     102   00:805C                      
     103   00:805C                      
     104   00:805C                      
     105   00:805C                      ;;=====================================================
     106   00:805C                      ;;DEFINICIÓN DE SUBRUTINAS
     107   00:805C                      ;;=====================================================
     108   00:805C                      	include "subrutinas.asm"
       1.  00:805C                      ;;=====================================================
       2.  00:805C                      ;;DEFINICIÓN DE SUBRUTINAS
       3.  00:805C                      ;;=====================================================	
       4.  00:805C                      
       5.  00:805C                      
       6.  00:805C                      ;;=====================================================
       7.  00:805C                      ;;INICIALIZA_NIVELES
       8.  00:805C                      ;;=====================================================	
       9.  00:805C                      ; función: 	copia la plantilla de niveles (habitaciones_plantilla) en los niveles de trabajo para el juego (habitaciones_juego)
      10.  00:805C                      ; entrada: 	habitaciones_plantilla
      11.  00:805C                      ; salida: 	habitaciones_juego
      12.  00:805C                      ; toca: 	A, B, HL, DE
      13.  00:805C                      inicializa_niveles:
      14.  00:805C  AF                  		XOR		 A
      15.  00:805D  06 31               		LD		 B,   49				;7 filas por 7 niveles menos el primero que lo hago fuera del buble
      16.  00:805F  21 35 A1            		LD		HL,   habitaciones_juego;tambíen puntero a la primera fila del primer nivel
      17.  00:8062  11 0E 00            		LD		DE,   14				;14 bytes de habitaciones y 2 extras
      18.  00:8065  19                  		ADD		HL,   DE				;puntero al primero de los bytes extras
      19.  00:8066  77                  		LD		(HL), A					;0000000Xb si X=0 no se ha pasado por allí y si es 1 sí
      20.  00:8067  11 10 00            		LD		DE,   16				;desde las col 15 de una fila a la siguiente
      21.  00:806A                      .bucle_borra_hab:
      22.  00:806A  19                  		ADD		HL,   DE				;situo el puntero 16 bytes siguientes
      23.  00:806B  77                  		LD		(HL), A					;pongo su contenido a 0
      24.  00:806C  10 FC               		DJNZ	.bucle_borra_hab		;repito para poner todos a 0
      25.  00:806E                      fin_iniciliza_niveles:
      26.  00:806E  C9                  		RET
      27.  00:806F                      
      28.  00:806F                      
      29.  00:806F                      ;;=====================================================
      30.  00:806F                      ;;ACTUALIZA_MARCADOR_VIDAS
      31.  00:806F                      ;;=====================================================	
      32.  00:806F                      ; función:  actualiza el buffer de vidas
      33.  00:806F                      ; entrada: 	prota_vidas
      34.  00:806F                      ; salida: 	array_aux_vidas
      35.  00:806F                      ; toca:		A,B,HL
      36.  00:806F                      actualiza_marcador_vidas:
      37.  00:806F                      	;para no andar restando pongo todos los huecos a negro y luego en otro bucle las caras
      38.  00:806F                      	;1-pinto todo en blanco
      39.  00:806F  21 64 A4            	LD		HL,array_aux_vidas
      40.  00:8072  06 08               	LD		 B,NMAXVIDREL
      41.  00:8074                      loop_marcador_caras_negro:	;asignar espacios en negro
      42.  00:8074  36 00               	LD		(HL),0			;0 posición mapa tiles para nada (es transparente pero el fondo es negro)
      43.  00:8076  23                  	INC		HL
      44.  00:8077  10 FB               	DJNZ	loop_marcador_caras_negro
      45.  00:8079                      fin_loop_marcador_caras_negro:
      46.  00:8079                      	;2-pinto las caras según el n de vidas
      47.  00:8079  3A 5F A4            	LD		 A, (prota_vidas)
      48.  00:807C  B7                  	OR		 A
      49.  00:807D  C8                  	RET 	 Z
      50.  00:807E  47                  	LD		 B, A
      51.  00:807F  21 64 A4            	LD		HL, array_aux_vidas
      52.  00:8082                      loop_marcador_caras: ;asignar caras
      53.  00:8082  36 0D               	LD		(HL), POSCARAMAP	;13 posición mapa tiles para cara
      54.  00:8084  23                  	INC		HL
      55.  00:8085  10 FB               	DJNZ	loop_marcador_caras
      56.  00:8087                      fin_loop_marcador_caras:
      57.  00:8087                      
      58.  00:8087                      fin_actualiza_marcador_vidas:
      59.  00:8087  C9                  	RET
      60.  00:8088                      
      61.  00:8088                      
      62.  00:8088                      ;;=====================================================
      63.  00:8088                      ;;ACTUALIZA_BUFFER_RELIQUIAS
      64.  00:8088                      ;;=====================================================	
      65.  00:8088                      ; función: 	actualiza buffer de reliquias
      66.  00:8088                      ; entrada: 	prota_reliquias
      67.  00:8088                      ; salida: 	array_aux_reliquias
      68.  00:8088                      ; toca:		A,B,HL
      69.  00:8088                      actualiza_buffer_reliquias:	
      70.  00:8088                      	;para no andar restando pongo todos los huecos a negro y luego en otro bucle las reliquias
      71.  00:8088                      	;1-pinto todo en blanco
      72.  00:8088  21 6C A4            	LD		HL, array_aux_reliquias
      73.  00:808B  06 08               	LD		 B, NMAXVIDREL
      74.  00:808D  AF                  	XOR		 A
      75.  00:808E                      loop_buffer_reliquias_negro:	;asignar espacios en negro
      76.  00:808E  77                  	LD		(HL), A			;0 posición mapa tiles para nada (es transparente pero el fondo es negro)
      77.  00:808F  23                  	INC		HL
      78.  00:8090  10 FC               	DJNZ	loop_buffer_reliquias_negro
      79.  00:8092                      
      80.  00:8092                      	;2-pinto las cruces según el n de reliquias
      81.  00:8092  21 6C A4            	LD		HL, array_aux_reliquias
      82.  00:8095  3A 60 A4            	LD		 A, (prota_reliquias)
      83.  00:8098  B7                  	OR		 A
      84.  00:8099  C8                  	RET		 Z
      85.  00:809A  47                  	LD		 B, A
      86.  00:809B                      loop_buffer_reliquias: ;asignar reliquias
      87.  00:809B  36 11               	LD		(HL), POSRELIMAP	;17 posición mapa tiles para reliquia
      88.  00:809D  23                  	INC		HL
      89.  00:809E  10 FB               	DJNZ	loop_buffer_reliquias
      90.  00:80A0                      fin_actualiza_buffer_reliquias:
      91.  00:80A0  C9                  	RET
      92.  00:80A1                      
      93.  00:80A1                      
      94.  00:80A1                      
      95.  00:80A1                      ;;=====================================================
      96.  00:80A1                      ;;LOCALIZA_INFO_HABITACION
      97.  00:80A1                      ;;=====================================================	
      98.  00:80A1                      ; función: 	busca las puertas que hay que pintar egún la posición del usuario y las pone en habitacion_actual
      99.  00:80A1                      ; entrada: 	prota.pos_mapy, prota.pos_mapx, prota_nivel habitaciones_juego
     100.  00:80A1                      ; salida: 	habitacion_actual
     101.  00:80A1                      ; toca:		todo
     102.  00:80A1                      ;ejemplo: nivel 4, posy 5 y posx 3
     103.  00:80A1                      ;3 + 5 x 8 + 4 x 49
     104.  00:80A1                      localiza_info_habitacion:
     105.  00:80A1                      ;primera posición: me coloco en la columna correcta
     106.  00:80A1  21 35 A1            	LD		HL, habitaciones_juego
     107.  00:80A4                      .situo_columna:	
     108.  00:80A4  3A 61 A4            	LD		 A, (prota_pos_mapx)
     109.  00:80A7  CB 27               	SLA		 A				;multiplico por dos ya que cada habitación va de dos en dos bytes
     110.  00:80A9  06 00               	LD		 B, 0
     111.  00:80AB  4F                  	LD		 C, A
     112.  00:80AC                      
     113.  00:80AC  09                  	ADD 	HL, BC			;sumo a la posición 0 la columnax2 en la que situarme
     114.  00:80AD                      	
     115.  00:80AD                      .situo_fila:
     116.  00:80AD  3A 62 A4            	LD		A, (prota_pos_mapy)
     117.  00:80B0  B7                  	OR	 	A
     118.  00:80B1  CA BE 80            	JP		Z, .situo_nivel	;si la fila es 0 no es necesario seguir operando en fila
     119.  00:80B4                      	
     120.  00:80B4  47                  	LD		B, A
     121.  00:80B5  AF                  	XOR		A
     122.  00:80B6                      .loop_suma_fila:
     123.  00:80B6  C6 10               	ADD		16				;cada fila tiene 16 bytes
     124.  00:80B8  10 FC               	DJNZ	.loop_suma_fila
     125.  00:80BA                      	
     126.  00:80BA  06 00               	LD		 B, 0
     127.  00:80BC  4F                  	LD		 C, A
     128.  00:80BD                      
     129.  00:80BD  09                  	ADD 	HL, BC			;sumo a la columna 16 x filas para situarme en la fila correcta
     130.  00:80BE                      
     131.  00:80BE                      .situo_nivel:
     132.  00:80BE  3A 5E A4            	LD		 A, (prota_nivel)
     133.  00:80C1  B7                  	OR	 	 A
     134.  00:80C2  CA D2 80            	JP		 Z, .actualiza_valiable_habitacion	;si el nivel es 0 al pasar por las anterirores ya estoy situado actualizo la variable y termino
     135.  00:80C5                      	
     136.  00:80C5  E5                  	PUSH	HL				;guardo el resultado intermedio
     137.  00:80C6                      	
     138.  00:80C6  47                  	LD		 B, A			;preparo la varible del bucle
     139.  00:80C7  11 70 00            	LD		DE, 112			;112 = 16x42 son los bytes de cada matriz-nivel
     140.  00:80CA  21 00 00            	LD		HL, 0
     141.  00:80CD                      .loop_suma_nivel:
     142.  00:80CD  19                  	ADD		HL, DE
     143.  00:80CE  10 FD               	DJNZ	.loop_suma_nivel
     144.  00:80D0                      	
     145.  00:80D0  D1                  	POP		DE				;devuelvo el resultado intermedio en DE que ya no lo necesito
     146.  00:80D1                      	
     147.  00:80D1  19                  	ADD		HL, DE			;sumo el resultado del nivel al resultado intermedio anterior
     148.  00:80D2                      	
     149.  00:80D2                      .actualiza_valiable_habitacion
     150.  00:80D2  7E                  	LD		 A, (HL)
     151.  00:80D3  32 33 A1            	LD		(habitacion_actual), A
     152.  00:80D6  23                  	INC		HL				;el byte de los extras está antes de donde se especifican las puertas
     153.  00:80D7  7E                  	LD		 A, (HL)
     154.  00:80D8  32 34 A1            	LD		(habitacion_extras), A
     155.  00:80DB                      fin_localiza_info_habitacion:
     156.  00:80DB  C9                  	RET
     157.  00:80DC                      
     158.  00:80DC                      
     159.  00:80DC                      
     160.  00:80DC                      ;;=====================================================
     161.  00:80DC                      ;;INICIALIZA AYUDAS
     162.  00:80DC                      ;;=====================================================	
     163.  00:80DC                      ; función: 	
     164.  00:80DC                      ; entrada: 	
     165.  00:80DC                      ; salida: 	-
     166.  00:80DC                      inicializa_ayudas:
     167.  00:80DC  DD 21 0E A5         	LD		IX, lista_ayudas
     168.  00:80E0                      	
     169.  00:80E0  DD 36 00 00         	LD		(IX), 0
     170.  00:80E4                      	
     171.  00:80E4                      fin_inicializa_ayudas:
     172.  00:80E4  C9                  	RET
     173.  00:80E5                      
     174.  00:80E5                      
     175.  00:80E5                      
     176.  00:80E5                      ;;=====================================================
     177.  00:80E5                      ;;ACTUALIZA_AYUDAS
     178.  00:80E5                      ;;=====================================================	
     179.  00:80E5                      ; función: 	
     180.  00:80E5                      ; entrada: 	
     181.  00:80E5                      ; salida: 	-
     182.  00:80E5                      actualiza_ayudas:
     183.  00:80E5                      	;busca objetos a incluir
     184.  00:80E5  3A 34 A1            	LD		 A, (habitacion_extras)
     185.  00:80E8                      	
     186.  00:80E8                      	;recorre
     187.  00:80E8                      	;	pinta
     188.  00:80E8                      	;	actualiza estructura
     189.  00:80E8                      
     190.  00:80E8  3E 14               	LD		 A, AGUAOFF
     191.  00:80EA  CD 8D 84            	CALL	pinta_obj_ayuda
     192.  00:80ED                      
     193.  00:80ED                      fin_actualiza_ayudas:
     194.  00:80ED  C9                  	RET
     195.  00:80EE                      	
     196.  00:80EE                      	
     197.  00:80EE                      	
     198.  00:80EE                      	
     199.  00:80EE                      	
     109   00:80EE                      	
     110   00:80EE                      	include "subr_general.asm"
       1.  00:80EE                      ;;=====================================================
       2.  00:80EE                      ;;DEFINICIÓN DE SUBRUTINAS GENERALES USABLES PARA CUALQUIER PROYECTO
       3.  00:80EE                      ;;=====================================================	
       4.  00:80EE                      
       5.  00:80EE                      ;;=====================================================
       6.  00:80EE                      ;;SUMA_A_BC
       7.  00:80EE                      ;;=====================================================	
       8.  00:80EE                      ; función: 	suma A a BC por si da más de 255
       9.  00:80EE                      ; entrada: 	A, BC
      10.  00:80EE                      ; salida: 	A + BC
      11.  00:80EE                      ; toca:		A, BC
      12.  00:80EE                      suma_A_BC:
      13.  00:80EE  81                  	ADD		 C
      14.  00:80EF  4F                  	LD		 C, A
      15.  00:80F0  88                  	ADC		 B
      16.  00:80F1  91                  	SUB		 C
      17.  00:80F2  47                  	LD		 B, A
      18.  00:80F3                      fin_suma_A_BC:
      19.  00:80F3  C9                  	RET
     111   00:80F4                      	
     112   00:80F4                      	include "subr_pintapantalla.asm"
       1.  00:80F4                      ;;=====================================================
       2.  00:80F4                      ;;DEFINICIÓN DE SUBRUTINAS
       3.  00:80F4                      ;;=====================================================	
       4.  00:80F4                      ;relacionadas con pintado en pantalla (y no sprites)
       5.  00:80F4                      
       6.  00:80F4                      
       7.  00:80F4                      ;;=====================================================
       8.  00:80F4                      ;;COLOR_PANTALLA
       9.  00:80F4                      ;;=====================================================	
      10.  00:80F4                      ; función: 	el equivalente en basic a color 15,1,1
      11.  00:80F4                      ; entrada: 	HL	que apunta a un array de bytes con 3 bytes FORCLR, BAKCLR y BDRCLR
      12.  00:80F4                      ; salida: 	-
      13.  00:80F4                      ; toca: 	todo
      14.  00:80F4                      color_pantalla:
      15.  00:80F4  7E                  	LD		 A, (HL)			;FORCLR 
      16.  00:80F5  32 E9 F3            	LD 		(FORCLR),A
      17.  00:80F8  23                  	INC		HL
      18.  00:80F9                      	
      19.  00:80F9  7E                  	LD		 A, (HL)			;BAKCLR
      20.  00:80FA  32 EA F3            	LD 		(BAKCLR),A
      21.  00:80FD  23                  	INC		HL
      22.  00:80FE                      	
      23.  00:80FE  7E                  	LD		 A, (HL)
      24.  00:80FF  32 EB F3            	LD 		(BDRCLR),A			;BDRCLR
      25.  00:8102  C3 62 00            	JP		CHGCLR 
      26.  00:8105                      fin_color_pantalla:
      27.  00:8105                      
      28.  00:8105                      
      29.  00:8105                      ;;=====================================================
      30.  00:8105                      ;;PREPARAPANTALLA
      31.  00:8105                      ;;=====================================================	
      32.  00:8105                      ; función: elimina clic cuando se pulsa tecla, cls, screen 2,2
      33.  00:8105                      ; entrada: -
      34.  00:8105                      ; salida: -
      35.  00:8105                      ; toca: si no son todos los regristros, casi todos
      36.  00:8105                      sub_preparapantalla:
      37.  00:8105                      	;toca A y Z
      38.  00:8105                      elimina_clic;
      39.  00:8105  AF                  	XOR		 A
      40.  00:8106  32 DB F3            	LD		(CLIKSW),A
      41.  00:8109                      fin_elimina_clic:
      42.  00:8109                      
      43.  00:8109                      	;toca A
      44.  00:8109                      limpia_pantalla:
      45.  00:8109  AF                  	XOR		 A
      46.  00:810A  CD C3 00            	CALL 	CLS
      47.  00:810D                      fin_limpia_pantalla:
      48.  00:810D                      
      49.  00:810D                      	;toca A y direcciones #F3E9/#F3EA/#F3EB, poner en HL array con 3 valores
      50.  00:810D  21 45 A4            	LD		HL, color_base
      51.  00:8110  CD F4 80            	CALL	color_pantalla
      52.  00:8113                      	
      53.  00:8113                      	;cambiamos a SCREEN 2,2 del BASIC
      54.  00:8113                      	;toca A
      55.  00:8113                      screen2:
      56.  00:8113  3E 02               	LD		 A, 2
      57.  00:8115  CD 5F 00            	CALL	CHGMOD			;selecciona screen 2
      58.  00:8118                      sprites_16_16:
      59.  00:8118  3A E0 F3            	LD		 A, (RG1SAV)
      60.  00:811B  F6 02               	OR		00000010b		;fuerza sprites de 16x16
      61.  00:811D  32 E0 F3            	LD		(RG1SAV), A		;no lo guardamos en la copia de variables del sistema
      62.  00:8120  47                  	LD		 B, A
      63.  00:8121  0E 01               	LD		 C, 1
      64.  00:8123  C3 47 00            	JP		WRTVDP			;opción alternativa de escribir las tres lineas siguientes
      65.  00:8126                      fin_sub_preparapantalla:
      66.  00:8126                      	
      67.  00:8126                      
      68.  00:8126                      ;;=====================================================
      69.  00:8126                      ;;PINTA_PANTALLA_COMPLETA
      70.  00:8126                      ;;=====================================================	
      71.  00:8126                      ; función: pinta el escenario, las 3 partes
      72.  00:8126                      ; entrada: -
      73.  00:8126                      ; salida: -
      74.  00:8126                      ; toca: si no son todos los regristros, casi todos
      75.  00:8126                      pinta_pantalla_completa:
      76.  00:8126  CD 2D 81            	CALL 	pinta_parte_superior_pantalla
      77.  00:8129                      	
      78.  00:8129  CD 4B 82            	CALL 	pinta_parte_inferior_pantalla	
      79.  00:812C                      fin_pinta_pantalla_completa:
      80.  00:812C  C9                  	RET
      81.  00:812D                      
      82.  00:812D                      
      83.  00:812D                      ;;=====================================================
      84.  00:812D                      ;;PINTA_PARTE_SUPERIOR_PANTALLA
      85.  00:812D                      ;;=====================================================	
      86.  00:812D                      ; función: pinta el escenario, los dos bancos superiores
      87.  00:812D                      ; entrada: -
      88.  00:812D                      ; salida: -
      89.  00:812D                      ; toca: si no son todos los regristros, casi todos
      90.  00:812D                      pinta_parte_superior_pantalla:
      91.  00:812D  3A 5E A4            	LD		 A, (prota_nivel)
      92.  00:8130  CA 5E 81            	JP		 Z, .carga_nivel_0
      93.  00:8133  3D                  	DEC		 A
      94.  00:8134  3A 5E A4            	LD		 A, (prota_nivel)
      95.  00:8137  CA 79 81            	JP		 Z, .carga_nivel_1
      96.  00:813A  3D                  	DEC		 A
      97.  00:813B  3A 5E A4            	LD		 A, (prota_nivel)
      98.  00:813E  CA 94 81            	JP		 Z, .carga_nivel_2
      99.  00:8141  3D                  	DEC		 A
     100.  00:8142  3A 5E A4            	LD		 A, (prota_nivel)
     101.  00:8145  CA AF 81            	JP		 Z, .carga_nivel_3
     102.  00:8148  3D                  	DEC		 A
     103.  00:8149  3A 5E A4            	LD		 A, (prota_nivel)
     104.  00:814C  CA CA 81            	JP		 Z, .carga_nivel_4
     105.  00:814F  3D                  	DEC		 A
     106.  00:8150  3A 5E A4            	LD		 A, (prota_nivel)
     107.  00:8153  CA E5 81            	JP		 Z, .carga_nivel_5
     108.  00:8156  3D                  	DEC		 A
     109.  00:8157  3A 5E A4            	LD		 A, (prota_nivel)
     110.  00:815A  CA 00 82            	JP		 Z, .carga_nivel_6
     111.  00:815D  3D                  	DEC		 A
     112.  00:815E                      	
     113.  00:815E                      .carga_nivel_0:
     114.  00:815E  21 54 A6            	LD		HL, tiles_patrones_nivel0
     115.  00:8161  22 45 82            	LD		(tiles_patrones), HL
     116.  00:8164  21 09 A8            	LD		HL, tiles_color_nivel0
     117.  00:8167  22 47 82            	LD		(tiles_colores), HL
     118.  00:816A  21 54 A6            	LD		HL, tiles_patrones_nivel0
     119.  00:816D  22 45 82            	LD		(tiles_patrones), HL
     120.  00:8170  21 50 A8            	LD		HL, tiles_mapa_nivel0
     121.  00:8173  22 49 82            	LD		(tiles_mapa), HL
     122.  00:8176  C3 18 82            	JP		.fin_carga_niveles
     123.  00:8179                      
     124.  00:8179                      .carga_nivel_1:
     125.  00:8179  21 85 A8            	LD		HL, tiles_patrones_nivel1
     126.  00:817C  22 45 82            	LD		(tiles_patrones), HL
     127.  00:817F  21 3A AA            	LD		HL, tiles_color_nivel1
     128.  00:8182  22 47 82            	LD		(tiles_colores), HL
     129.  00:8185  21 85 A8            	LD		HL, tiles_patrones_nivel1
     130.  00:8188  22 45 82            	LD		(tiles_patrones), HL
     131.  00:818B  21 81 AA            	LD		HL, tiles_mapa_nivel1
     132.  00:818E  22 49 82            	LD		(tiles_mapa), HL
     133.  00:8191  C3 18 82            	JP		.fin_carga_niveles
     134.  00:8194                      	
     135.  00:8194                      .carga_nivel_2:
     136.  00:8194  21 B6 AA            	LD		HL, tiles_patrones_nivel2
     137.  00:8197  22 45 82            	LD		(tiles_patrones), HL
     138.  00:819A  21 6B AC            	LD		HL, tiles_color_nivel2
     139.  00:819D  22 47 82            	LD		(tiles_colores), HL
     140.  00:81A0  21 B6 AA            	LD		HL, tiles_patrones_nivel2
     141.  00:81A3  22 45 82            	LD		(tiles_patrones), HL
     142.  00:81A6  21 B2 AC            	LD		HL, tiles_mapa_nivel2
     143.  00:81A9  22 49 82            	LD		(tiles_mapa), HL
     144.  00:81AC  C3 18 82            	JP		.fin_carga_niveles
     145.  00:81AF                      	
     146.  00:81AF                      .carga_nivel_3:
     147.  00:81AF  21 E7 AC            	LD		HL, tiles_patrones_nivel3
     148.  00:81B2  22 45 82            	LD		(tiles_patrones), HL
     149.  00:81B5  21 9C AE            	LD		HL, tiles_color_nivel3
     150.  00:81B8  22 47 82            	LD		(tiles_colores), HL
     151.  00:81BB  21 E7 AC            	LD		HL, tiles_patrones_nivel3
     152.  00:81BE  22 45 82            	LD		(tiles_patrones), HL
     153.  00:81C1  21 E3 AE            	LD		HL, tiles_mapa_nivel3
     154.  00:81C4  22 49 82            	LD		(tiles_mapa), HL
     155.  00:81C7  C3 18 82            	JP		.fin_carga_niveles
     156.  00:81CA                      	
     157.  00:81CA                      .carga_nivel_4:
     158.  00:81CA  21 18 AF            	LD		HL, tiles_patrones_nivel4
     159.  00:81CD  22 45 82            	LD		(tiles_patrones), HL
     160.  00:81D0  21 CD B0            	LD		HL, tiles_color_nivel4
     161.  00:81D3  22 47 82            	LD		(tiles_colores), HL
     162.  00:81D6  21 18 AF            	LD		HL, tiles_patrones_nivel4
     163.  00:81D9  22 45 82            	LD		(tiles_patrones), HL
     164.  00:81DC  21 14 B1            	LD		HL, tiles_mapa_nivel4
     165.  00:81DF  22 49 82            	LD		(tiles_mapa), HL
     166.  00:81E2  C3 18 82            	JP		.fin_carga_niveles
     167.  00:81E5                      	
     168.  00:81E5                      .carga_nivel_5:
     169.  00:81E5  21 49 B1            	LD		HL, tiles_patrones_nivel5
     170.  00:81E8  22 45 82            	LD		(tiles_patrones), HL
     171.  00:81EB  21 FE B2            	LD		HL, tiles_color_nivel5
     172.  00:81EE  22 47 82            	LD		(tiles_colores), HL
     173.  00:81F1  21 49 B1            	LD		HL, tiles_patrones_nivel5
     174.  00:81F4  22 45 82            	LD		(tiles_patrones), HL
     175.  00:81F7  21 45 B3            	LD		HL, tiles_mapa_nivel5
     176.  00:81FA  22 49 82            	LD		(tiles_mapa), HL
     177.  00:81FD  C3 18 82            	JP		.fin_carga_niveles
     178.  00:8200                      	
     179.  00:8200                      .carga_nivel_6:
     180.  00:8200  21 7A B3            	LD		HL, tiles_patrones_nivel6
     181.  00:8203  22 45 82            	LD		(tiles_patrones), HL
     182.  00:8206  21 2F B5            	LD		HL, tiles_color_nivel6
     183.  00:8209  22 47 82            	LD		(tiles_colores), HL
     184.  00:820C  21 7A B3            	LD		HL, tiles_patrones_nivel6
     185.  00:820F  22 45 82            	LD		(tiles_patrones), HL
     186.  00:8212  21 76 B5            	LD		HL, tiles_mapa_nivel6
     187.  00:8215  22 49 82            	LD		(tiles_mapa), HL
     188.  00:8218                      ;	JP		.fin_carga niveles			;no necesario
     189.  00:8218                      .fin_carga_niveles:
     190.  00:8218                      
     191.  00:8218                      	;cargando banco 1
     192.  00:8218                      	;cargamos los patrones
     193.  00:8218  2A 45 82            	LD		HL, (tiles_patrones)
     194.  00:821B  11 00 00            	LD		DE, CHRTBL
     195.  00:821E  CD D3 96            	CALL	depack_VRAM
     196.  00:8221                      	;cargamos los colores de los patrones
     197.  00:8221  2A 47 82            	LD		HL, (tiles_colores)
     198.  00:8224  11 00 20            	LD		DE, CLRTBL
     199.  00:8227  CD D3 96            	CALL	depack_VRAM
     200.  00:822A                      	
     201.  00:822A                      	;cargando banco 2
     202.  00:822A                      	;cargamos los patrones
     203.  00:822A  2A 45 82            	LD		HL, (tiles_patrones)
     204.  00:822D  11 00 08            	LD		DE, CHRTBL + #0800
     205.  00:8230  CD D3 96            	CALL	depack_VRAM	
     206.  00:8233                      	;cargamos los colores de los patrones
     207.  00:8233  2A 47 82            	LD		HL, (tiles_colores)
     208.  00:8236  11 00 28            	LD		DE, CLRTBL + #0800
     209.  00:8239  CD D3 96            	CALL	depack_VRAM
     210.  00:823C                      	
     211.  00:823C                      	;cargamos mapa de pantalla banco 1 y 2
     212.  00:823C  2A 49 82            	LD		HL, (tiles_mapa)
     213.  00:823F  11 00 18            	LD		DE, TILMAP
     214.  00:8242  C3 D3 96            	JP		depack_VRAM
     215.  00:8245                      fin_pinta_parte_superior_pantalla:
     216.  00:8245  00 00               tiles_patrones:		DW	0
     217.  00:8247  00 00               tiles_colores:		DW	0
     218.  00:8249  00 00               tiles_mapa:			DW	0
     219.  00:824B                      
     220.  00:824B                      
     221.  00:824B                      ;;=====================================================
     222.  00:824B                      ;;PINTA_PARTE_INFERIOR_PANTALLA
     223.  00:824B                      ;;=====================================================	
     224.  00:824B                      ; función: pinta la parte inferior del escenario que es común
     225.  00:824B                      ; entrada: -
     226.  00:824B                      ; salida: -
     227.  00:824B                      ; toca: si no son todos los regristros, casi todos
     228.  00:824B                      pinta_parte_inferior_pantalla:
     229.  00:824B                      	;cangando banco 3
     230.  00:824B                      	;cargamos los patrones
     231.  00:824B  21 AB B5            	LD		HL,tiles_patrones_marcador
     232.  00:824E  11 00 10            	LD		DE,CHRTBL + #1000
     233.  00:8251  CD D3 96            	CALL	depack_VRAM	
     234.  00:8254                      	;cargamos mapa de pantalla
     235.  00:8254  21 2C B7            	LD		HL,tiles_mapa_marcador
     236.  00:8257  11 00 1A            	LD		DE,TILMAP + #0200
     237.  00:825A  CD D3 96            	CALL	depack_VRAM
     238.  00:825D                      	;cargamos los colores de los patrones
     239.  00:825D  21 F7 B6            	LD		HL,tiles_color_marcador
     240.  00:8260  11 00 30            	LD		DE,CLRTBL + #1000
     241.  00:8263  C3 D3 96            	JP		depack_VRAM
     242.  00:8266                      fin_pinta_parte_inferior_pantalla:
     243.  00:8266                      
     244.  00:8266                      
     245.  00:8266                      
     246.  00:8266                      ;;=====================================================
     247.  00:8266                      ;;PINTA_VIDAS
     248.  00:8266                      ;;=====================================================	
     249.  00:8266                      ; función: 	actualiza el mapa de tiles para que en el próximo refresco se pinten y actualiza_vidas
     250.  00:8266                      ; entrada: 	array_aux_vidas
     251.  00:8266                      ; salida: 	actualiza_vidas_sn
     252.  00:8266                      ; toca:		todo
     253.  00:8266                      pinta_vidas:
     254.  00:8266  CD 6F 80            	CALL	actualiza_marcador_vidas
     255.  00:8269                      	
     256.  00:8269  21 64 A4            	LD		HL, array_aux_vidas
     257.  00:826C  11 48 1A            	LD		DE, TILMAP + POSVIDAS 	;inicio posición en el mapa de tiles de las vidas
     258.  00:826F  01 08 00            	LD		BC, NMAXVIDREL			;hay 8 posiciones para vidas/reliquias o espacios en negro si no tiene 8 vidas/reliquias
     259.  00:8272  C3 5C 00            	JP		LDIRVM
     260.  00:8275                      fin_pinta_vidas:
     261.  00:8275                      	
     262.  00:8275                      	
     263.  00:8275                      
     264.  00:8275                      ;;=====================================================
     265.  00:8275                      ;;PINTA_RELIQUIAS
     266.  00:8275                      ;;=====================================================	
     267.  00:8275                      ; función: 	actualiza el mapa de tiles para que en el próximo refresco se pinten y actualiza_reliquias
     268.  00:8275                      ; entrada: 	array_aux_reliquias
     269.  00:8275                      ; salida: 	-
     270.  00:8275                      ; toca:		todo
     271.  00:8275                      pinta_reliquias:
     272.  00:8275  CD 88 80            	CALL	actualiza_buffer_reliquias
     273.  00:8278                      	
     274.  00:8278  21 6C A4            	LD		HL, array_aux_reliquias
     275.  00:827B  11 C8 1A            	LD		DE, TILMAP + POSRELIQ 	;inicio posición en el mapa de tiles de las vidas
     276.  00:827E  01 08 00            	LD		BC, NMAXVIDREL			;hay 8 posiciones para vidas/reliquias o espacios en negro si no tiene 8 vidas/reliquias
     277.  00:8281  C3 5C 00            	JP		LDIRVM
     278.  00:8284                      fin_pinta_reliquias:
     279.  00:8284                      	
     280.  00:8284                      
     281.  00:8284                      
     282.  00:8284                      	
     283.  00:8284                      ;;=====================================================
     284.  00:8284                      ;;PINTA_NIVEL
     285.  00:8284                      ;;=====================================================	
     286.  00:8284                      ; función: 	actualiza el nivel en la parte de puntuación
     287.  00:8284                      ; entrada: 	prota_nivel
     288.  00:8284                      ; salida: 	-
     289.  00:8284                      ; toca:		HL,DE,BC
     290.  00:8284                      pinta_nivel:	
     291.  00:8284                      	;forma más avanzada sin llamada a la bios
     292.  00:8284  01 B4 1A            	LD		BC,TILMAP + POSNIVEL ;posición en el mapa de tiles del tile de nivel
     293.  00:8287  3A 5E A4            	LD		 A, (prota_nivel)	;seleccionando la pos del banco de tiles a poner en el mapa
     294.  00:828A  C6 30               	ADD		'0'	
     295.  00:828C  57                  	LD		 D, A
     296.  00:828D                      	
     297.  00:828D  C3 90 82            	JP		pinta_tile_suelto
     298.  00:8290                      fin_pinta_nivel:
     299.  00:8290                      
     300.  00:8290                      
     301.  00:8290                      
     302.  00:8290                      ;;=====================================================
     303.  00:8290                      ;;PINTA_TILE_SUELTO
     304.  00:8290                      ;;=====================================================	
     305.  00:8290                      ; función: 	pinta al tile que digamos en D, en la posición BC
     306.  00:8290                      ; entrada: 	BC (posición a pintar en el mapa),D (qué se va a pintar el esa posición)
     307.  00:8290                      ; salida: 	-
     308.  00:8290                      ; toca:		-
     309.  00:8290                      pinta_tile_suelto:
     310.  00:8290  DB 99               	IN		 A,(REGEST)		;leer registro de estado (recomendado)
     311.  00:8292  79                  	LD		 A,C			;primero byte bajo	
     312.  00:8293  D3 99               	OUT		(REGEST),A
     313.  00:8295  78                  	LD		 A,B			;después byte alto  ********************** preguntar a Fernando cómo que byte bajo es B
     314.  00:8296  F6 40               	OR		1000000b		;+64
     315.  00:8298  D3 99               	OUT		(REGEST),A
     316.  00:829A                      	
     317.  00:829A  7A                  	LD		A,D
     318.  00:829B  D3 98               	OUT		(REGESCVDP),A	;escribe A en VRAM en la posición indicada por los dos OUT anteriores
     319.  00:829D                      fin_pinta_tile_suelto:
     320.  00:829D  C9                  	RET
     321.  00:829E                      
     322.  00:829E                      
     323.  00:829E                      
     324.  00:829E                      
     325.  00:829E                      
     326.  00:829E                      ;;=====================================================
     327.  00:829E                      ;;MIRA_PINTA ENERGIA
     328.  00:829E                      ;;=====================================================	
     329.  00:829E                      ; función: 	actualiza el nivel de energia en la parte de puntuación
     330.  00:829E                      ; nota:		el cuadrado más bajo de ejergía siempre estará pintado... se obviará
     331.  00:829E                      ; entrada: 	prota.energia, array_aux_energia
     332.  00:829E                      ; salida: 	-
     333.  00:829E                      ; toca:		ninguno porque usa EXX
     334.  00:829E                      
     335.  00:829E                      ; nota importante... lo mismo interesa hacer esto con un array para comparar y un bucle
     336.  00:829E                      
     337.  00:829E                      mira_pinta_energia:
     338.  00:829E  D9                  	EXX							;por si acaso guardo el contenido de HL (si veo que no es necesario guardarlo lo quito) uso esto en vez de push por el nº ciclos
     339.  00:829F                      	
     340.  00:829F  3A 63 A4            	LD		 A,(prota_energia) 	;para las comparaciones A variable (actual) y B fijo (limites)
     341.  00:82A2                      
     342.  00:82A2  0E 00               	LD		 C,TILENEGRO		;para agilizar asignaciones en vez de un valor cte uso otro registro
     343.  00:82A4                      pinta_ener:
     344.  00:82A4                      pinta_ener_tile_8:
     345.  00:82A4  21 7B A4            	LD		HL,ultimo_pos_array_aux_energia	;coloco puntero en array e iré decrementando
     346.  00:82A7  06 D9               	LD		 B,TILEENERG8
     347.  00:82A9  B8                  	CP		 B
     348.  00:82AA  38 04               	JR		C,pinta_ener_tile_8_negro
     349.  00:82AC  36 0E               	LD		(HL),TILEMAPVERD
     350.  00:82AE  18 01               	JR		pinta_ener_tile_7
     351.  00:82B0                      pinta_ener_tile_8_negro:
     352.  00:82B0  71                  	LD		(HL),C
     353.  00:82B1                      
     354.  00:82B1                      pinta_ener_tile_7:
     355.  00:82B1  2B                  	DEC		HL
     356.  00:82B2  06 BA               	LD		 B,TILEENERG7
     357.  00:82B4  B8                  	CP		 B
     358.  00:82B5  38 04               	JR		C,pinta_ener_tile_7_negro
     359.  00:82B7  36 0E               	LD		(HL),TILEMAPVERD
     360.  00:82B9  18 01               	JR		pinta_ener_tile_6
     361.  00:82BB                      pinta_ener_tile_7_negro:
     362.  00:82BB  71                  	LD		(HL),C
     363.  00:82BC                      
     364.  00:82BC                      pinta_ener_tile_6:
     365.  00:82BC  2B                  	DEC		HL
     366.  00:82BD  06 9B               	LD		 B,TILEENERG6
     367.  00:82BF  B8                  	CP		 B
     368.  00:82C0  38 04               	JR		C,pinta_ener_tile_6_negro
     369.  00:82C2  36 0E               	LD		(HL),14
     370.  00:82C4  18 01               	JR		pinta_ener_tile_5
     371.  00:82C6                      pinta_ener_tile_6_negro:
     372.  00:82C6  71                  	LD		(HL),C
     373.  00:82C7                      
     374.  00:82C7                      pinta_ener_tile_5:
     375.  00:82C7  2B                  	DEC		HL
     376.  00:82C8  06 7C               	LD		 B,TILEENERG5
     377.  00:82CA  B8                  	CP		 B
     378.  00:82CB  38 04               	JR		C,pinta_ener_tile_5_negro
     379.  00:82CD  36 0E               	LD		(HL),TILEMAPVERD
     380.  00:82CF  18 01               	JR		pinta_ener_tile_4
     381.  00:82D1                      pinta_ener_tile_5_negro:
     382.  00:82D1  71                  	LD		(HL),C
     383.  00:82D2                      
     384.  00:82D2                      pinta_ener_tile_4:
     385.  00:82D2  2B                  	DEC		HL
     386.  00:82D3  06 5D               	LD		 B,TILEENERG4
     387.  00:82D5  B8                  	CP		 B
     388.  00:82D6  38 04               	JR		C,pinta_ener_tile_4_negro
     389.  00:82D8  36 0F               	LD		(HL),TILEMAPAMAR
     390.  00:82DA  18 01               	JR		pinta_ener_tile_3
     391.  00:82DC                      pinta_ener_tile_4_negro:
     392.  00:82DC  71                  	LD		(HL),C
     393.  00:82DD                      	
     394.  00:82DD                      pinta_ener_tile_3:
     395.  00:82DD  2B                  	DEC		HL
     396.  00:82DE  06 3E               	LD		 B,TILEENERG3
     397.  00:82E0  B8                  	CP		 B
     398.  00:82E1  38 04               	JR		C,pinta_ener_tile_3_negro
     399.  00:82E3  36 0F               	LD		(HL),TILEMAPAMAR
     400.  00:82E5  18 01               	JR		pinta_ener_tile_2
     401.  00:82E7                      pinta_ener_tile_3_negro:
     402.  00:82E7  71                  	LD		(HL),C
     403.  00:82E8                      
     404.  00:82E8                      pinta_ener_tile_2:
     405.  00:82E8  2B                  	DEC		HL
     406.  00:82E9  06 1F               	LD		 B,TILEENERG2
     407.  00:82EB  B8                  	CP		 B
     408.  00:82EC  38 04               	JR		C,pinta_ener_tile_2_negro
     409.  00:82EE  36 10               	LD		(HL),TILEMAPROJO
     410.  00:82F0  18 01               	JR		fin_mira_pinta_energia		;siempre estará pintado el cuadro mínimo
     411.  00:82F2                      pinta_ener_tile_2_negro:
     412.  00:82F2  71                  	LD		(HL),C
     413.  00:82F3                      
     414.  00:82F3                      fin_mira_pinta_energia:
     415.  00:82F3  D9                  	EXX
     416.  00:82F4  C9                  	RET
     417.  00:82F5                      
     418.  00:82F5                      
     419.  00:82F5                      ;;=====================================================
     420.  00:82F5                      ;;PINTA_ENERGIA
     421.  00:82F5                      ;;=====================================================	
     422.  00:82F5                      ; función: 	actualiza el mapa de tiles para que en el próximo refresco se pinte la barra de energia actual
     423.  00:82F5                      ; entrada: 	array_aux_energia
     424.  00:82F5                      ; toca:		todo
     425.  00:82F5                      pinta_energia:
     426.  00:82F5  CD 9E 82            	CALL	mira_pinta_energia
     427.  00:82F8                      	
     428.  00:82F8  21 74 A4            	LD		HL, array_aux_energia
     429.  00:82FB  11 88 1A            	LD		DE, TILMAP + POSENERG 	;inicio posición en el mapa de tiles de las vidas
     430.  00:82FE  01 08 00            	LD		BC, NMAXVIDREL			;hay 8 posiciones para vidas/reliquias o espacios en negro si no tiene 8 vidas/reliquias
     431.  00:8301  C3 5C 00            	JP		LDIRVM
     432.  00:8304                      fin_pinta_energia:
     433.  00:8304                      
     434.  00:8304                      
     435.  00:8304                      
     436.  00:8304                      ;;=====================================================
     437.  00:8304                      ;;BORRA_MAPA
     438.  00:8304                      ;;=====================================================	
     439.  00:8304                      ; función: 	pone todas las habitaciones del mapa a negro (los tiles del mapa los rellena con un array a 0 - caracter en negro)
     440.  00:8304                      ; entrada: 	array_aux_mapa_limpiar
     441.  00:8304                      ; salida: 	-
     442.  00:8304                      ; toca:		AF
     443.  00:8304                      borra_mapa:
     444.  00:8304  D9                  	EXX
     445.  00:8305                      	
     446.  00:8305  21 7C A4            	LD		HL,array_aux_mapa_limpiar
     447.  00:8308  11 F8 1A            	LD		DE,TILMAP + POSMAPLIN1 	;inicio posición en el mapa de tiles de la primera fila del mapa
     448.  00:830B  01 07 00            	LD		BC,NHABNIVEL			;cada nivel son 7 filas con 7 habitaciones "posibles"
     449.  00:830E  CD 5C 00            	CALL	LDIRVM
     450.  00:8311                      	
     451.  00:8311  21 7C A4            	LD		HL,array_aux_mapa_limpiar
     452.  00:8314  11 D8 1A            	LD		DE,TILMAP + POSMAPLIN2
     453.  00:8317  01 07 00            	LD		BC,NHABNIVEL
     454.  00:831A  CD 5C 00            	CALL	LDIRVM
     455.  00:831D                      
     456.  00:831D  21 7C A4            	LD		HL,array_aux_mapa_limpiar
     457.  00:8320  11 B8 1A            	LD		DE,TILMAP + POSMAPLIN3
     458.  00:8323  01 07 00            	LD		BC,NHABNIVEL
     459.  00:8326  CD 5C 00            	CALL	LDIRVM
     460.  00:8329                      
     461.  00:8329  21 7C A4            	LD		HL,array_aux_mapa_limpiar	
     462.  00:832C  11 98 1A            	LD		DE,TILMAP + POSMAPLIN4
     463.  00:832F  01 07 00            	LD		BC,NHABNIVEL
     464.  00:8332  CD 5C 00            	CALL	LDIRVM
     465.  00:8335                      
     466.  00:8335  21 7C A4            	LD		HL,array_aux_mapa_limpiar	
     467.  00:8338  11 78 1A            	LD		DE,TILMAP + POSMAPLIN5
     468.  00:833B  01 07 00            	LD		BC,NHABNIVEL
     469.  00:833E  CD 5C 00            	CALL	LDIRVM
     470.  00:8341                      
     471.  00:8341  21 7C A4            	LD		HL,array_aux_mapa_limpiar	
     472.  00:8344  11 58 1A            	LD		DE,TILMAP + POSMAPLIN6
     473.  00:8347  01 07 00            	LD		BC,NHABNIVEL
     474.  00:834A  CD 5C 00            	CALL	LDIRVM
     475.  00:834D                      
     476.  00:834D  21 7C A4            	LD		HL,array_aux_mapa_limpiar	
     477.  00:8350  11 38 1A            	LD		DE,TILMAP + POSMAPLIN7
     478.  00:8353  01 07 00            	LD		BC,NHABNIVEL
     479.  00:8356  CD 5C 00            	CALL	LDIRVM
     480.  00:8359                      	
     481.  00:8359  D9                  	EXX
     482.  00:835A                      fin_borra_mapa:
     483.  00:835A  C9                  	RET
     484.  00:835B                      
     485.  00:835B                      
     486.  00:835B                      
     487.  00:835B                      
     488.  00:835B                      
     489.  00:835B                      ;=====================================================
     490.  00:835B                      ;;PINTA_ARRAY
     491.  00:835B                      ;;=====================================================	
     492.  00:835B                      ;;funcion:  (pinta el mismo tile) se le pasa un array con posiciones de tiles y coordenadas x e y y los pinta en screen 2
     493.  00:835B                      ;;entrada:	wordaux1 (pos inicio sc2 donde pintar) y wordaux2 (puntero al array a pintar), BC (posición en tilemap) , D filas y E columnas
     494.  00:835B                      ;;salida:	-
     495.  00:835B                      ;;importante: necesita de una variable wordaux1 tipo WD (wordaux1: 	DW	0)
     496.  00:835B                      ;; ejemplo llamada:
     497.  00:835B                      	;~ LD		HL,array_tiles					;guardo puntero al array a pintar (como psar por referencia)
     498.  00:835B                      	;~ LD		(wordaux2),HL					;en la variable wordaux2
     499.  00:835B                      	;~ LD		HL,SC2MAP + 256 + 32			;calcula posición en tilemap
     500.  00:835B                      	;~ LD		(wordaux1),HL					;guarda valor pos tilemap en wordaux1
     501.  00:835B                      	;~ LD		B,H								;coloca posición tilemap BC
     502.  00:835B                      	;~ LD		C,L
     503.  00:835B                      	;~ LD		D,2								;nº de filas
     504.  00:835B                      	;~ LD		E,3								;nº de columnas
     505.  00:835B                      	;~ CALL	pinta_array
     506.  00:835B                      
     507.  00:835B                      pinta_array:
     508.  00:835B  F5                  	PUSH	AF
     509.  00:835C                      	
     510.  00:835C  2A 93 83            	LD		HL, (wordaux1)
     511.  00:835F  44                  	LD		B, H							;coloca posición tilemap BC
     512.  00:8360  4D                  	LD		C, L
     513.  00:8361                      	
     514.  00:8361                      	;contamos con que la posición "global" en el tilemap está ya en BC
     515.  00:8361                      	;y el puntero al array a pintar en wordaux2 y la posición en tilemap sc2 en wordaux1
     516.  00:8361                      	;inicializa
     517.  00:8361  DB 99               	IN		 A,(REGEST)		;leer registro de estado (recomendado)
     518.  00:8363                      	
     519.  00:8363                      	;coloca puntero para pintar tile según BC
     520.  00:8363  79                  	LD		 A,C			;primero byte bajo	
     521.  00:8364  D3 99               	OUT		(REGEST),A
     522.  00:8366  78                  	LD		 A,B			;después byte alto  ********************** preguntar a Fernando cómo que byte bajo es B
     523.  00:8367  F6 40               	OR		1000000b		;+64
     524.  00:8369  D3 99               	OUT		(REGEST),A
     525.  00:836B                      
     526.  00:836B                      	
     527.  00:836B  2A 95 83            	LD		HL,(wordaux2)	;HL es lo que se pintará y le he pasado el puntero del array tilemap a pintar
     528.  00:836E                      .pa_pinta_fila:
     529.  00:836E  43                  	LD		 B,E
     530.  00:836F                      .pa_pinta_columnas: 		;finta la fila (pintando las columnas)
     531.  00:836F  7E                  	LD		 A,(HL)
     532.  00:8370  D3 98               	OUT		(REGESCVDP),A	;escribe A en VRAM en la posición indicada por los dos OUT anteriores
     533.  00:8372  23                  	INC		HL
     534.  00:8373  10 FA               	DJNZ	.pa_pinta_columnas
     535.  00:8375                      	
     536.  00:8375                      	;no es una solución elegante lo de repetir código pero queda claro
     537.  00:8375                      	;por si hay otra fila
     538.  00:8375  E5                  	PUSH	HL
     539.  00:8376  2A 93 83            	LD		HL,(wordaux1)
     540.  00:8379  01 20 00            	LD		BC,32
     541.  00:837C  09                  	ADD		HL,BC
     542.  00:837D  22 93 83            	LD		(wordaux1),HL
     543.  00:8380  44                  	LD		B,H
     544.  00:8381  4D                  	LD		C,L
     545.  00:8382  E1                  	POP		HL
     546.  00:8383                      	
     547.  00:8383  79                  	LD		 A,C			;primero byte bajo	
     548.  00:8384  D3 99               	OUT		(REGEST),A
     549.  00:8386  78                  	LD		 A,B			;después byte alto 
     550.  00:8387  F6 40               	OR		1000000b		;+64
     551.  00:8389  D3 99               	OUT		(REGEST),A
     552.  00:838B                      	
     553.  00:838B                      	;si hay otra fila repite
     554.  00:838B  15                  	DEC		 D
     555.  00:838C  7A                  	LD		 A,D		;¿hay otra fila?
     556.  00:838D  B7                  	OR		 A
     557.  00:838E  C2 6E 83            	JP		NZ,.pa_pinta_fila
     558.  00:8391                      	
     559.  00:8391  F1                  	POP		AF
     560.  00:8392                      	
     561.  00:8392                      fin_pinta_array:
     562.  00:8392  C9                  	RET
     563.  00:8393                      ;;variables asocidas a la función (no sé si dejarlo aquí y encapsularlo todo o hacerla reutilizable)
     564.  00:8393                      ;; por de pronto la dejo aquí
     565.  00:8393  00 00               wordaux1:		DW	0	;almacena la posición en el tilemap 0 al 675
     566.  00:8395  00 00               wordaux2:		DW	0	;almacena puntero a array de tiles (posiciones en realidad) a pintar (posiciones repetidas en los 3 bancos)
     567.  00:8397                      
     568.  00:8397                      
     569.  00:8397                      
     570.  00:8397                      
     571.  00:8397                      
     572.  00:8397                      ;;=====================================================
     573.  00:8397                      ;;PINTA_PUERTAS
     574.  00:8397                      ;;=====================================================	
     575.  00:8397                      ; función: 	examina A y mira si tiene que pintar puertas de los lados, arriba o abrajo o las escaleras (o no)
     576.  00:8397                      ; entrada: 	habitacion_actual 1 escalera 1 puerta arriba 1 pu der 1 pu aba 1 pu izq (si es 0 pinta pared)
     577.  00:8397                      ; salida: 	-
     578.  00:8397                      ; toca:		todo
     579.  00:8397                      pinta_puertas:
     580.  00:8397  CD 2D 81            	CALL	pinta_parte_superior_pantalla	;pinta pasillo y paredes
     581.  00:839A                      
     582.  00:839A  CD A1 80            	CALL	localiza_info_habitacion	;busca qué puertas debe pintar y lo mete en habitación_actual
     583.  00:839D                      	
     584.  00:839D  3A 33 A1            	LD		 A, (habitacion_actual)		;se mete en A porque la función pide A y para no buscar el valor 4 veces
     585.  00:83A0                      
     586.  00:83A0                      ;	BIT		 4, A
     587.  00:83A0                      ;	CALL	nz, pinta_escalera
     588.  00:83A0                      
     589.  00:83A0  CB 5F               	BIT		 3, A
     590.  00:83A2  C4 C8 83            	CALL	nz, pinta_puerta_arr
     591.  00:83A5                      
     592.  00:83A5  CB 57               	BIT		 2, A
     593.  00:83A7  C4 DB 83            	CALL	nz, pinta_puerta_der
     594.  00:83AA                      
     595.  00:83AA  CB 4F               	BIT		 1, A
     596.  00:83AC  C4 B5 83            	CALL	nz, pinta_puerta_aba
     597.  00:83AF                      	
     598.  00:83AF  CB 47               	BIT		 0, A
     599.  00:83B1  C4 EE 83            	CALL	nz, pinta_puerta_izq
     600.  00:83B4                      fin_pinta_puertas:
     601.  00:83B4  C9                  	RET
     602.  00:83B5                      
     603.  00:83B5                      
     604.  00:83B5                      
     605.  00:83B5                      
     606.  00:83B5                      ;;=====================================================
     607.  00:83B5                      ;;PINTA_PUERTA_ABA
     608.  00:83B5                      ;;=====================================================	
     609.  00:83B5                      ; función: 	pinta la puerta de abajo
     610.  00:83B5                      ; entrada: 	array_puerta_abajo, wordaux2, wordaux1
     611.  00:83B5                      ; salida: 	-
     612.  00:83B5                      ; toca:		HL,BC, DE
     613.  00:83B5                      pinta_puerta_aba:
     614.  00:83B5  21 AD A4            	LD		HL, array_puerta_abajo			;guardo puntero al array a pintar (como pasar por referencia)
     615.  00:83B8  22 95 83            	LD		(wordaux2), HL					;en la variable wordaux2
     616.  00:83BB  21 EE 19            	LD		HL, TILMAP + POSPUERABAJ		;calcula posición en tilemap
     617.  00:83BE  22 93 83            	LD		(wordaux1), HL					;guarda valor pos tilemap en wordaux1
     618.  00:83C1  16 01               	LD		D, 1							;nº de filas
     619.  00:83C3  1E 04               	LD		E, 4							;nº de columnas
     620.  00:83C5  C3 5B 83            	JP		pinta_array
     621.  00:83C8                      fin_pinta_puerta_aba:
     622.  00:83C8                      
     623.  00:83C8                      ;;=====================================================
     624.  00:83C8                      ;;PINTA_PUERTA_ARR
     625.  00:83C8                      ;;=====================================================	
     626.  00:83C8                      ; función: 	pinta la puerta de arriba
     627.  00:83C8                      ; entrada: 	array_puerta_arriba, wordaux2, wordaux1
     628.  00:83C8                      ; salida: 	-
     629.  00:83C8                      ; toca:		HL,BC, DE
     630.  00:83C8                      pinta_puerta_arr:
     631.  00:83C8  21 84 A4            	LD		HL, array_puerta_arriba			;guardo puntero al array a pintar (como pasar por referencia)
     632.  00:83CB  22 95 83            	LD		(wordaux2), HL					;en la variable wordaux2
     633.  00:83CE  21 8E 18            	LD		HL, TILMAP + POSPUERARRI		;calcula posición en tilemap
     634.  00:83D1  22 93 83            	LD		(wordaux1), HL					;guarda valor pos tilemap en wordaux1
     635.  00:83D4  16 05               	LD		D, 5							;nº de filas
     636.  00:83D6  1E 04               	LD		E, 4							;nº de columnas
     637.  00:83D8  C3 5B 83            	JP		pinta_array
     638.  00:83DB                      fin_pinta_puerta_arr:
     639.  00:83DB                      
     640.  00:83DB                      
     641.  00:83DB                      ;;=====================================================
     642.  00:83DB                      ;;PINTA_PUERTA_DER
     643.  00:83DB                      ;;=====================================================	
     644.  00:83DB                      ; función: 	pinta la puerta de la derecha
     645.  00:83DB                      ; entrada: 	array_puerta_derecha, wordaux2, wordaux1
     646.  00:83DB                      ; salida: 	-
     647.  00:83DB                      ; toca:		HL,BC, DE
     648.  00:83DB                      pinta_puerta_der:
     649.  00:83DB  21 98 A4            	LD		HL, array_puerta_derecha		;guardo puntero al array a pintar (como pasar por referencia)
     650.  00:83DE  22 95 83            	LD		(wordaux2), HL					;en la variable wordaux2
     651.  00:83E1  21 FC 18            	LD		HL, TILMAP + POSPUERDERE		;calcula posición en tilemap
     652.  00:83E4  22 93 83            	LD		(wordaux1), HL					;guarda valor pos tilemap en wordaux1
     653.  00:83E7  16 07               	LD		D, 7							;nº de filas
     654.  00:83E9  1E 03               	LD		E, 3							;nº de columnas
     655.  00:83EB  C3 5B 83            	JP		pinta_array
     656.  00:83EE                      fin_pinta_puerta_der:
     657.  00:83EE                      	
     658.  00:83EE                      ;;=====================================================
     659.  00:83EE                      ;;PINTA_PUERTA_IZQ
     660.  00:83EE                      ;;=====================================================	
     661.  00:83EE                      ; función: 	pinta la puerta de la izquierda
     662.  00:83EE                      ; entrada: 	array_puerta_izquierda, wordaux2, wordaux1
     663.  00:83EE                      ; salida: 	-
     664.  00:83EE                      ; toca:		HL,BC, DE
     665.  00:83EE                      pinta_puerta_izq:
     666.  00:83EE  21 B1 A4            	LD		HL, array_puerta_izquierda		;guardo puntero al array a pintar (como pasar por referencia)
     667.  00:83F1  22 95 83            	LD		(wordaux2), HL					;en la variable wordaux2
     668.  00:83F4  21 E1 18            	LD		HL, TILMAP + POSPUERIZQU		;calcula posición en tilemap
     669.  00:83F7  22 93 83            	LD		(wordaux1), HL					;guarda valor pos tilemap en wordaux1
     670.  00:83FA  16 07               	LD		D, 7							;nº de filas
     671.  00:83FC  1E 03               	LD		E, 3							;nº de columnas
     672.  00:83FE  C3 5B 83            	JP		pinta_array
     673.  00:8401                      fin_pinta_puerta_izq:
     674.  00:8401                      
     675.  00:8401                      
     676.  00:8401                      
     677.  00:8401                      
     678.  00:8401                      ;;=====================================================
     679.  00:8401                      ;;POSICIONA_EN_MAPA
     680.  00:8401                      ;;=====================================================	
     681.  00:8401                      ; función: 	en el mapa de marcadores de la derecha/abajo marca un cuadro en gris o con un muñeco
     682.  00:8401                      ;			según el valor de prota.posición pinta entrá un muñeco y por donde vaya pasando el prota
     683.  00:8401                      ;			quedará en gris
     684.  00:8401                      ; entrada: 	elemento_pintar_mapa, prota_pos_mapy, prota_pos_mapx
     685.  00:8401                      ; salida: 	-
     686.  00:8401                      ; toca:		todos
     687.  00:8401                      posiciona_en_mapa:
     688.  00:8401                      	;#0238 es la posición en mapa de tiles de la esquina superior izquierda del mapa (569 en decimal)
     689.  00:8401  21 38 1A            	LD		HL, TILMAP + POSMAPA;pos inicial
     690.  00:8404                      	
     691.  00:8404                      	;ahora se le calcula la fila a pintar ya que va de abajo a arriba y no como en el mapa + columna
     692.  00:8404                      .sumar_fila:
     693.  00:8404  3A 62 A4            	LD		 A, (prota_pos_mapy)
     694.  00:8407  FE 01               	CP		 1
     695.  00:8409  28 2A               	JR		 Z, .fila_1
     696.  00:840B  3A 62 A4            	LD		 A, (prota_pos_mapy)
     697.  00:840E  FE 02               	CP		 2
     698.  00:8410  28 2A               	JR		 Z, .fila_2
     699.  00:8412  3A 62 A4            	LD		 A, (prota_pos_mapy)
     700.  00:8415  FE 03               	CP		 3
     701.  00:8417  28 2A               	JR		 Z, .fila_3
     702.  00:8419  3A 62 A4            	LD		 A, (prota_pos_mapy)
     703.  00:841C  FE 04               	CP		 4
     704.  00:841E  28 2A               	JR		 Z, .fila_4
     705.  00:8420  3A 62 A4            	LD		 A, (prota_pos_mapy)
     706.  00:8423  FE 05               	CP		 5
     707.  00:8425  28 2A               	JR		 Z, .fila_5
     708.  00:8427  3A 62 A4            	LD		 A, (prota_pos_mapy)
     709.  00:842A  FE 06               	CP		 6
     710.  00:842C  28 2A               	JR		 Z, .sumar_columna
     711.  00:842E                      	;no consulto la 0 porque si no es ninguna de las anteriores es 0 y por tanto sería un jr fila_0
     712.  00:842E                      	
     713.  00:842E                      .fila_0:
     714.  00:842E  11 C0 00            	LD		DE, 192
     715.  00:8431  19                  	ADD		HL, DE			;nota: se que repito el ADD pero la otra opción es inicializar DE y ya tarda mucho la funicón (es por velicidad)
     716.  00:8432  C3 58 84            	JP		.sumar_columna
     717.  00:8435                      .fila_1:
     718.  00:8435  11 A0 00            	LD		DE, 160
     719.  00:8438  19                  	ADD		HL, DE
     720.  00:8439  C3 58 84            	JP		.sumar_columna
     721.  00:843C                      .fila_2:
     722.  00:843C  11 80 00            	LD		DE, 128
     723.  00:843F  19                  	ADD		HL, DE
     724.  00:8440  C3 58 84            	JP		.sumar_columna
     725.  00:8443                      .fila_3:
     726.  00:8443  11 60 00            	LD		DE, 96
     727.  00:8446  19                  	ADD		HL, DE
     728.  00:8447  C3 58 84            	JP		.sumar_columna
     729.  00:844A                      .fila_4:
     730.  00:844A  11 40 00            	LD		DE, 64
     731.  00:844D  19                  	ADD		HL, DE
     732.  00:844E  C3 58 84            	JP		.sumar_columna
     733.  00:8451                      .fila_5:
     734.  00:8451  11 20 00            	LD		DE, 32
     735.  00:8454  19                  	ADD		HL, DE
     736.  00:8455  C3 58 84            	JP		.sumar_columna
     737.  00:8458                      .fila_6:
     738.  00:8458                      	;pongo fila_6 por poner ya que si es la fila 6 equiv. a primera fila del mapa y por tanto no suma fila
     739.  00:8458                      	
     740.  00:8458                      	
     741.  00:8458                      .sumar_columna:
     742.  00:8458  3A 61 A4            	LD 		 A, (prota_pos_mapx) ;POS X
     743.  00:845B  16 00               	LD		 D, 0
     744.  00:845D  5F                  	LD		 E, A
     745.  00:845E  19                  	ADD		HL, DE
     746.  00:845F                      	
     747.  00:845F                      	;resultado en BC para usar en la función pinta_tile_suelto
     748.  00:845F  44                  	LD		 B, H
     749.  00:8460  4D                  	LD		 C, L
     750.  00:8461                      	
     751.  00:8461                      	;terminado de fijar la coordenada recuperamos a para ver el tipo
     752.  00:8461  3A 83 A4            	LD		 A, (elemento_pintar_mapa)
     753.  00:8464  FE 09               	CP		 TILEGRISM
     754.  00:8466  CA 6E 84            	JP		 Z, pinta_pos_mapa_vacio
     755.  00:8469  16 13               	LD		 D, TILEPROTAM
     756.  00:846B  C3 70 84            	JP		fin_pinta_pos_mapa
     757.  00:846E                      pinta_pos_mapa_vacio:
     758.  00:846E  16 09               	LD		 D, TILEGRISM	
     759.  00:8470                      
     760.  00:8470                      fin_pinta_pos_mapa:
     761.  00:8470  C3 90 82            	JP		pinta_tile_suelto
     762.  00:8473                      fin_posiciona_en_mapa:
     763.  00:8473                      
     764.  00:8473                      
     765.  00:8473                      
     766.  00:8473                      
     767.  00:8473                      ;;=====================================================
     768.  00:8473                      ;;EFECTO_IMAGEN_TIRA_RELIQUIA
     769.  00:8473                      ;;=====================================================	
     770.  00:8473                      ; función: 	hace que el fondo de la pantalla parpadee N veces
     771.  00:8473                      ; entrada: 	actualiza_reliquias_sn
     772.  00:8473                      ; salida: 	-
     773.  00:8473                      ; toca: 	todo
     774.  00:8473                      efecto_imagen_tira_reliquia:
     775.  00:8473  3E 14               	LD		 A, 20;RETARDOREL
     776.  00:8475  47                  	LD		 B, A
     777.  00:8476                      
     778.  00:8476                      .parpadea_fondo:
     779.  00:8476  C5                  	PUSH	BC
     780.  00:8477  21 48 A4            	LD		HL, color_bomba1
     781.  00:847A  CD F4 80            	CALL	color_pantalla
     782.  00:847D                      	
     783.  00:847D                      	;~ PUSH	BC
     784.  00:847D                      	;~ LD		 A, 255
     785.  00:847D                      	;~ LD		 B, A
     786.  00:847D                      ;~ .bucle_de_espera:
     787.  00:847D                      	;~ NOP
     788.  00:847D                      	;~ DJNZ	 .bucle_de_espera
     789.  00:847D                      	;~ POP		BC
     790.  00:847D  76                  	HALT
     791.  00:847E                      
     792.  00:847E                      	
     793.  00:847E  21 4B A4            	LD		HL, color_bomba2
     794.  00:8481  CD F4 80            	CALL	color_pantalla
     795.  00:8484  C1                  	POP		BC
     796.  00:8485  10 EF               	DJNZ	.parpadea_fondo
     797.  00:8487                      	
     798.  00:8487  21 45 A4            	LD		HL, color_base
     799.  00:848A  C3 F4 80            	JP		color_pantalla
     800.  00:848D                      fin_efecto_imagen_tira_reliquia:
     801.  00:848D                      
     802.  00:848D                      
     803.  00:848D                      
     804.  00:848D                      
     805.  00:848D                      ;;=====================================================
     806.  00:848D                      ;;PINTA_OBJ_AYUDA
     807.  00:848D                      ;;=====================================================	
     808.  00:848D                      ; función: 	
     809.  00:848D                      ; entrada: 	A - objeto a mostrar
     810.  00:848D                      ; salida: 	-
     811.  00:848D                      ; toca:		AF, HL, BC, DE
     812.  00:848D                      pinta_obj_ayuda:
     813.  00:848D                      	;se recibe objeto an A desde fuera, por ejmplo LD		 A, CRUZOFF
     814.  00:848D  01 D6 A4            	LD		BC, array_ayudas
     815.  00:8490  CD EE 80            	CALL 	suma_A_BC
     816.  00:8493                      	
     817.  00:8493                      	;coloca pos array objeto a pintar en 
     818.  00:8493  ED 43 95 83         	LD		(wordaux2), BC
     819.  00:8497                      	
     820.  00:8497  21 00 19            	LD		HL, TILMAP + 256	;calcula posición en tilemap + 256 por colocarse siempre en bank1
     821.  00:849A                      	
     822.  00:849A  ED 5F               	LD		 A, R				;obtengo un valor "random" entre 0 y 255
     823.  00:849C  E6 0F               	AND		00001111b			;me quedo con los 4 bits menos signif. y obtengo entre 0 y 15 (tamaño del array pos_ayudas)
     824.  00:849E  01 C6 A4            	LD		BC, pos_ayudas		;puntero a inicio de array pos_ayudas
     825.  00:84A1  CD EE 80            	CALL 	suma_A_BC			;tengo en BC la pos de memoria de pos_ayudas
     826.  00:84A4                      	
     827.  00:84A4  0A                  	LD		 A, (BC)			;tengo en A la posición dentro del bank1 
     828.  00:84A5  16 00               	LD		 D, 0
     829.  00:84A7  5F                  	LD		 E, A
     830.  00:84A8  19                  	ADD		HL, DE				;le sumo a HL la posción de inicio de tilemap + 256 + dónde colocar el objeto
     831.  00:84A9                      
     832.  00:84A9  22 93 83            	LD		(wordaux1), HL		;pongo el valor en wordaux1
     833.  00:84AC                      
     834.  00:84AC  16 02               	LD		D, 2				;nº de filas
     835.  00:84AE  1E 02               	LD		E, 2				;nº de columnas
     836.  00:84B0  C3 5B 83            	JP		pinta_array
     837.  00:84B3                      fin_pinta_obj_ayuda:
     838.  00:84B3                      
     839.  00:84B3                      
     840.  00:84B3                      
     841.  00:84B3                      
     113   00:84B3                      	
     114   00:84B3                      	include "subr_sprites.asm"
       1.  00:84B3                      
       2.  00:84B3                      ;;=====================================================
       3.  00:84B3                      ;;SUBRUTINAS ENCARGADAS DE MANEJAR LOS SPRITES
       4.  00:84B3                      ;;=====================================================	
       5.  00:84B3                      
       6.  00:84B3                      
       7.  00:84B3                      ;; PREGUNTAR SI A FERNANDO SI ES MEJOR USAR LISTAS O ALGO PARA AHORRAR CÓDIGO
       8.  00:84B3                      
       9.  00:84B3                      
      10.  00:84B3                      
      11.  00:84B3                      
      12.  00:84B3                      ;;=====================================================
      13.  00:84B3                      ;;CARGA_PATRONES_SPRITES_NIVEL
      14.  00:84B3                      ;;=====================================================	
      15.  00:84B3                      ; función: 	examina el nivel y carga los patrones específicos necesarios
      16.  00:84B3                      ; entrada: 	-
      17.  00:84B3                      ; salida: 	-
      18.  00:84B3                      ; toca: 	-
      19.  00:84B3                      carga_patrones_sprites_nivel:
      20.  00:84B3                      	
      21.  00:84B3  CD BE 84            	CALL 	carga_patrones_nivel_comunes
      22.  00:84B6                      	
      23.  00:84B6                      	;carga atrones no comunes
      24.  00:84B6  3A 5E A4            	LD		 A, (prota_nivel)
      25.  00:84B9  B7                  	OR		 A
      26.  00:84BA  CA CA 84            	JP		 Z, carga_patrones_sprites_nivel1
      27.  00:84BD                      	
      28.  00:84BD                      	
      29.  00:84BD                      fin_carga_patrones_sprites_nivel:
      30.  00:84BD  C9                  	RET		;dejo este ret de momento pero cuando la subrutina esté terminada sobrará
      31.  00:84BE                      
      32.  00:84BE                      	;RET comparo numeros con jp para incluir el RET con lo que el último ret me sobra
      33.  00:84BE                      
      34.  00:84BE                      ;;=====================================================
      35.  00:84BE                      ;;CARGA_PATRONES_SPRITES_NIVEL_COMUNES
      36.  00:84BE                      ;;=====================================================	
      37.  00:84BE                      ; función: 	carga los patrones comunes en todos los niveles
      38.  00:84BE                      ; entrada: 	-
      39.  00:84BE                      ; salida: 	-
      40.  00:84BE                      ; toca: 	-
      41.  00:84BE                      carga_patrones_nivel_comunes:	
      42.  00:84BE  21 B3 97            	LD		HL, sprites_comunes
      43.  00:84C1  11 00 38            	LD		DE, SPRTBL
      44.  00:84C4  01 C0 00            	LD		BC, fin_sprites_comunes-sprites_comunes
      45.  00:84C7  C3 5C 00            	JP		LDIRVM
      46.  00:84CA                      fin_carga_patrones_nivel_comunes:
      47.  00:84CA                      
      48.  00:84CA                      
      49.  00:84CA                      ;;=====================================================
      50.  00:84CA                      ;;CARGA_PATRONES_SPRITES_NIVEL1
      51.  00:84CA                      ;;=====================================================	
      52.  00:84CA                      ; función: 	copia los patrones de los sprites que e van a usar en el nivel 1 en vram
      53.  00:84CA                      ; entrada: 	-
      54.  00:84CA                      ; salida: 	-
      55.  00:84CA                      ; toca: 	-
      56.  00:84CA                      carga_patrones_sprites_nivel1:
      57.  00:84CA                      
      58.  00:84CA                      
      59.  00:84CA                      	;~ ;sprite sprite_reliquia
      60.  00:84CA                      	;~ LD		HL,sprite_reliquia
      61.  00:84CA                      	;~ LD		DE,#3880
      62.  00:84CA                      	;~ LD		BC,32				;32 bytes (sprites de 2 x 2)
      63.  00:84CA                      	;~ CALL	LDIRVM
      64.  00:84CA                      
      65.  00:84CA                      fin_carga_patrones_sprites:
      66.  00:84CA  C9                  	RET
      67.  00:84CB                      
      68.  00:84CB                      
      69.  00:84CB                      ;;=====================================================
      70.  00:84CB                      ;;ACTUALIZA_ARRAY_SPRITES_VRAM
      71.  00:84CB                      ;;=====================================================	
      72.  00:84CB                      ; función: 	copia el array con los valores de los sprites (pos, color, plano) en VRAM
      73.  00:84CB                      ; entrada: 	-
      74.  00:84CB                      ; salida: 	-
      75.  00:84CB                      ; toca: 	todos los registros. Como me interesa la velocidad, si necesito copiar de algo lo hago fuera
      76.  00:84CB                      render_sprites:
      77.  00:84CB                      	;volcando el array con toda la info de los sprites a la zona de atributos de sprites
      78.  00:84CB  21 46 A5            	LD		HL,array_sprites
      79.  00:84CE  11 00 1B            	LD		DE,SPRART
      80.  00:84D1  01 80 00            	LD		BC,4 * 32				;32 sprites x 4 bytes controlando el sprite (Y, X, plano, color)
      81.  00:84D4  C3 5C 00            	JP		LDIRVM
      82.  00:84D7                      fin_actualiza_array_sprites_vram:
      83.  00:84D7                      
      84.  00:84D7                      
      85.  00:84D7                      ;;=====================================================
      86.  00:84D7                      ;;VUELCA_RESULTADO_PUNTOMIRA_ARRAY
      87.  00:84D7                      ;;=====================================================	
      88.  00:84D7                      ; función: 	coloca los valores del punto de mira en la variable array_sprites para ser volcados en VRAM
      89.  00:84D7                      ; entrada: 	array_sprites_pm, prota.XXXXX
      90.  00:84D7                      ; salida: 	-
      91.  00:84D7                      ; toca: 	-
      92.  00:84D7                      vuelca_resultado_puntomira_array:
      93.  00:84D7  DD 21 46 A5         	LD		IX, array_sprites_pm
      94.  00:84DB                      	;posición y de los dos sprites que conforman el punto de mira
      95.  00:84DB  3A 4F A4            	LD		 A, (prota.posy)
      96.  00:84DE  DD 77 00            	LD		(IX  ), A
      97.  00:84E1  DD 77 04            	LD		(IX+4), A
      98.  00:84E4                      	;posición x de los dos sprites que conforman el punto de mira
      99.  00:84E4  3A 4E A4            	LD		 A, (prota.posx)
     100.  00:84E7  DD 77 01            	LD		(IX+1), A
     101.  00:84EA  DD 77 05            	LD		(IX+5), A
     102.  00:84ED                      	;plano
     103.  00:84ED  DD 36 02 00         	LD		(IX+2), 0
     104.  00:84F1  DD 36 06 04         	LD		(IX+6), 4	;al ser sprites de 16x16 hay que ir de 4 en 4
     105.  00:84F5                      	;color
     106.  00:84F5  3A 50 A4            	LD		 A, (prota.escena)
     107.  00:84F8  B7                  	OR		 A
     108.  00:84F9  C2 05 85            	JP		NZ,.codigo_color_2
     109.  00:84FC                      .codigo_color_1:
     110.  00:84FC  DD 36 03 0F         	LD		(IX+3), COLBLANCO
     111.  00:8500  DD 36 07 08         	LD		(IX+7), COLROJO
     112.  00:8504  C9                  	RET
     113.  00:8505                      .codigo_color_2:
     114.  00:8505  DD 36 03 08         	LD		(IX+3), COLROJO
     115.  00:8509  DD 36 07 0F         	LD		(IX+7), COLBLANCO
     116.  00:850D  C9                  	RET
     117.  00:850E                      fin_vuelca_resultado_puntomira_array:
     118.  00:850E                      
     119.  00:850E                      
     120.  00:850E                      ;;=====================================================
     121.  00:850E                      ;;CHECK_PLAYER
     122.  00:850E                      ;;=====================================================	
     123.  00:850E                      ; función: 	MIRA EL CONTROL Y APLICA LA LOGICA DE MOVIMIENTO DEL PROTAGONISTA
     124.  00:850E                      ; entrada: 	-
     125.  00:850E                      ; salida: 	-
     126.  00:850E                      ; toca: 	A
     127.  00:850E                      check_player:
     128.  00:850E  CD AD 85            	CALL	update_controllers_status
     129.  00:8511  B7                  	OR		 A
     130.  00:8512  C8                  	RET		 Z						;si no se ha pulsado nada no se necesita mirar nada
     131.  00:8513                      
     132.  00:8513  CB 1F               	RR		 A
     133.  00:8515  DC 2E 85            	CALL	 C, mueve_arriba
     134.  00:8518  CB 1F               	RR		 A
     135.  00:851A  DC 4A 85            	CALL	 C, mueve_abajo
     136.  00:851D  CB 1F               	RR		 A
     137.  00:851F  DC 59 85            	CALL	 C, mueve_izquierda
     138.  00:8522  CB 1F               	RR		 A
     139.  00:8524  DC 3B 85            	CALL	 C, mueve_derecha
     140.  00:8527                      	
     141.  00:8527                      	;zona para mirar disparo Recibe A que tendrá 0000 0 0 X-letra M X-espacio 
     142.  00:8527  CD 66 85            	CALL	mira_disparo
     143.  00:852A                      	
     144.  00:852A  C3 D7 84            	JP		vuelca_resultado_puntomira_array
     145.  00:852D                      f;in_check_player:
     146.  00:852D  C9                  	RET
     147.  00:852E                      
     115   00:852E                      	
     116   00:852E                      	include "subr_teclado_joy.asm"
       1.  00:852E                      ;;=====================================================
       2.  00:852E                      ;;SUBRUTINAS QUE CAPTURN EL JOYSTICK Y TECLADO Y MUEVEN PUNTO DE MIRA
       3.  00:852E                      ;;=====================================================
       4.  00:852E                      
       5.  00:852E                      ;;=====================================================
       6.  00:852E                      ;;MUEVE_ARRIBA
       7.  00:852E                      ;;=====================================================	
       8.  00:852E                      ; función: 	decrementa y si se no sale de los límites el valor del punto de mira a la derecha
       9.  00:852E                      ; entrada: 	-
      10.  00:852E                      ; salida: 	-
      11.  00:852E                      ; toca: 	-
      12.  00:852E                      mueve_arriba:
      13.  00:852E  F5                  	PUSH		AF
      14.  00:852F                      	
      15.  00:852F  3A 4F A4            	LD		 	 A, (prota.posy)
      16.  00:8532  3D                  	DEC			 A
      17.  00:8533  CA 39 85            	JP			 Z,.no_decrementa_y
      18.  00:8536  32 4F A4            	LD			(prota.posy), A
      19.  00:8539                      	
      20.  00:8539                      .no_decrementa_y:
      21.  00:8539  F1                  	POP			AF
      22.  00:853A                      fin_mueve_arriba:
      23.  00:853A  C9                  	RET
      24.  00:853B                      
      25.  00:853B                      
      26.  00:853B                      ;;=====================================================
      27.  00:853B                      ;;MUEVE_DERECHA
      28.  00:853B                      ;;=====================================================	
      29.  00:853B                      ; función: 	incrementa si se no sale de los límites el valor del punto de mira a la derecha
      30.  00:853B                      ; entrada: 	-
      31.  00:853B                      ; salida: 	-
      32.  00:853B                      ; toca: 	-
      33.  00:853B                      mueve_derecha:
      34.  00:853B  F5                  	PUSH		AF
      35.  00:853C                      	
      36.  00:853C  3A 4E A4            	LD		 	 A, (prota.posx)
      37.  00:853F  3C                  	INC			 A
      38.  00:8540  FE EF               	CP			 A, LIMPANTDER - 16
      39.  00:8542  CA 48 85            	JP			 Z, .no_incrementa_x
      40.  00:8545  32 4E A4            	LD			(prota.posx), A
      41.  00:8548                      	
      42.  00:8548                      .no_incrementa_x:
      43.  00:8548  F1                  	POP			AF
      44.  00:8549                      fin_mueve_derecha:
      45.  00:8549  C9                  	RET
      46.  00:854A                      
      47.  00:854A                      
      48.  00:854A                      ;;=====================================================
      49.  00:854A                      ;;MUEVE_ABAJO
      50.  00:854A                      ;;=====================================================	
      51.  00:854A                      ; función: 	incrementa y si se no sale de los límites el valor del punto de mira abajo
      52.  00:854A                      ; entrada: 	-
      53.  00:854A                      ; salida: 	-
      54.  00:854A                      ; toca: 	-
      55.  00:854A                      mueve_abajo:
      56.  00:854A  F5                  	PUSH		AF
      57.  00:854B                      	
      58.  00:854B  3A 4F A4            	LD		 	 A, (prota.posy)
      59.  00:854E  3C                  	INC			 A
      60.  00:854F  FE 70               	CP			 A, LIMPANTABA - 16
      61.  00:8551  CA 57 85            	JP			 Z,.no_incrementa_y
      62.  00:8554  32 4F A4            	LD			(prota.posy), A
      63.  00:8557                      	
      64.  00:8557                      .no_incrementa_y:
      65.  00:8557  F1                  	POP			AF
      66.  00:8558                      fin_mueve_abajo:
      67.  00:8558  C9                  	RET
      68.  00:8559                      	
      69.  00:8559                      	
      70.  00:8559                      ;;=====================================================
      71.  00:8559                      ;;MUEVE_IZQUIERDA
      72.  00:8559                      ;;=====================================================	
      73.  00:8559                      ; función: 	decrementa x si se no sale de los límites el valor del punto de mira a la izquierda
      74.  00:8559                      ; entrada: 	-
      75.  00:8559                      ; salida: 	-
      76.  00:8559                      ; toca: 	-
      77.  00:8559                      mueve_izquierda:
      78.  00:8559  F5                  	PUSH		AF
      79.  00:855A                      	
      80.  00:855A  3A 4E A4            	LD		 	 A, (prota.posx)
      81.  00:855D  3D                  	DEC			 A
      82.  00:855E                      ;	CP			 A, LIMPANTIZQ
      83.  00:855E  CA 64 85            	JP			 Z,.no_decrementa_x
      84.  00:8561  32 4E A4            	LD			(prota.posx), A
      85.  00:8564                      	
      86.  00:8564                      .no_decrementa_x:
      87.  00:8564  F1                  	POP			AF
      88.  00:8565                      fin_mueve_izquierda:
      89.  00:8565  C9                  	RET
      90.  00:8566                      
      91.  00:8566                      
      92.  00:8566                      
      93.  00:8566                      ;;=====================================================
      94.  00:8566                      ;;MIRA_DISPARO
      95.  00:8566                      ;;=====================================================	
      96.  00:8566                      ; función: 	Mira si se ha pulsado alguno de los dos disparos
      97.  00:8566                      ; entrada: 	A que tendrá 0000 0 0 X-letra M X-espacio 
      98.  00:8566                      ; salida: 	-
      99.  00:8566                      ; toca: 	A, B
     100.  00:8566                      mira_disparo:
     101.  00:8566                      .mira_boton_pulsado1:
     102.  00:8566  CB 1F               	RR		 A						;preparo en el carry si se ha pulsado botón 1
     103.  00:8568  D2 91 85            	JP		 NC, .mira_boton_pulsado2					
     104.  00:856B  F5                  	PUSH	AF						;copia A para usarlo después
     105.  00:856C                      	;se ha pulsado barra o boton 1
     106.  00:856C  3A 53 A4            	LD		 A, (prota.cadencia)
     107.  00:856F  B7                  	OR		 A
     108.  00:8570  CA 7E 85            	JP		 Z, .efectua_disparo	;toca efectuar disparo realmente porque se ha pulsado lo suficiente el disparo
     109.  00:8573                      .no_efectua_disparo: ;IF
     110.  00:8573  3D                  		DEC		 A
     111.  00:8574  32 53 A4            		LD		(prota.cadencia), A	;resto cadencia hasta próximo disparo "real" (no automático por haber pulsado una tecla e ir demasiado rápido)
     112.  00:8577  AF                  		XOR		 A 
     113.  00:8578  32 50 A4            		LD		(prota.escena), A
     114.  00:857B  C3 90 85            		JP		.fin_mira_disparo1
     115.  00:857E                      .efectua_disparo:	;ELSE
     116.  00:857E                      		;cambio colores del sprite
     117.  00:857E  3A 50 A4            		LD		 A, (prota.escena)
     118.  00:8581  2F                  		CPL		 
     119.  00:8582  32 50 A4            		LD		(prota.escena), A
     120.  00:8585                      		;reseteo cadencia para el próximo disparo
     121.  00:8585  3E 04               		LD		 A, LIMCADENCIA						;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
     122.  00:8587  32 53 A4            		LD		 (prota.cadencia), A				;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
     123.  00:858A                      		;ejecuto sonido								;; ajustar cadencia y que cuando el disparo sea efectivo se reseteen los colores
     124.  00:858A  AF                  		XOR		 A
     125.  00:858B  0E 01               		LD		 C, 1
     126.  00:858D  CD 55 8C            		CALL	ayFX_INIT	
     127.  00:8590                      .fin_mira_disparo1
     128.  00:8590                      
     129.  00:8590  F1                  	POP		AF
     130.  00:8591                      .mira_boton_pulsado2:
     131.  00:8591  CB 1F               	RR		 A
     132.  00:8593  D0                  	RET		 NC
     133.  00:8594                      	;se ha pulsado shift o boton 2
     134.  00:8594                      	
     135.  00:8594  3A 60 A4            	LD		 A, (prota_reliquias)	;miro si le quedan reliquias
     136.  00:8597  B7                  	OR		 A
     137.  00:8598  C8                  	RET		 Z						;si no le quedan salgo ya
     138.  00:8599                      	
     139.  00:8599                      	;actuaciones si se usa la reliquia botón 2 o M y quedn reliquias.. (antes ya se puso el valor en A)
     140.  00:8599  3A 60 A4            	LD		A, (prota_reliquias)
     141.  00:859C  3D                  	DEC		 A
     142.  00:859D  32 60 A4            	LD		(prota_reliquias), A
     143.  00:85A0                      	
     144.  00:85A0  3E 01               	LD		 A, 1
     145.  00:85A2  0E 01               	LD		 C, 1
     146.  00:85A4  CD 55 8C            	CALL	ayFX_INIT
     147.  00:85A7                      	
     148.  00:85A7  CD 73 84            	CALL 	efecto_imagen_tira_reliquia
     149.  00:85AA                      	
     150.  00:85AA  C3 75 82            	JP		pinta_reliquias
     151.  00:85AD                      fin_mira_disparo:
     152.  00:85AD                      ;	RET		
     153.  00:85AD                      
     154.  00:85AD                      
     155.  00:85AD                      ;;============================================================
     156.  00:85AD                      ;;Código de D. Fernando García (BitVision) (al que siempre le estaré agradecido)
     157.  00:85AD                      ;check_8th_keyboard_row
     158.  00:85AD                      ;read_joy_0
     159.  00:85AD                      ;check_8th_keyboard_row
     160.  00:85AD                      ;check_4th_keyboard_row
     161.  00:85AD                      ;;============================================================
     162.  00:85AD                      ;;  usa constantes:
     163.  00:85AD                      ;PSG_A  equ  0a0h  ;reg address
     164.  00:85AD                      ;PSG_W  equ  0a1h  ;reg data WR
     165.  00:85AD                      ;PSG_R  equ  0a2h  ;reg data
     166.  00:85AD                      
     167.  00:85AD                      ;;=====================================================
     168.  00:85AD                      ;;update_controllers_status
     169.  00:85AD                      ;;=====================================================	
     170.  00:85AD                      ;depends on the next rountine
     171.  00:85AD                      ;  returns
     172.  00:85AD                      ;  a - 0P2TRLDU
     173.  00:85AD                      
     174.  00:85AD                      update_controllers_status:
     175.  00:85AD  CD F8 85                 call  check_8th_keyboard_row
     176.  00:85B0                      [4]  rrc    a
     176.  00:85B0  CB 0F CB 0F CB 0F CB 0F 
     177.  00:85B8  47                       ld    b,a    		;save for later  xxxTRDUL
     178.  00:85B9                      
     179.  00:85B9  E6 01                    and    #01    		;save L
     180.  00:85BB  CB 27                    sla    a
     181.  00:85BD  CB 27                    sla    a    		;now 00000L00
     182.  00:85BF  4F                       ld    c,a    		;save for later
     183.  00:85C0                      
     184.  00:85C0  78                       ld    a,b    		;again we've got xxxTRDUL. I am interested on leaving 000000DU on a
     185.  00:85C1  CB 3F                    srl    a
     186.  00:85C3  E6 03                    and    00000011b
     187.  00:85C5                      						;we've got 000000DU on a
     188.  00:85C5  B1                       or    c    		;now we've got 00000LDU
     189.  00:85C6  4F                       ld    c,a    		;save for later
     190.  00:85C7                      
     191.  00:85C7  78                       ld    a,b
     192.  00:85C8  E6 18                    and    00011000b 	;we've got 000TR000
     193.  00:85CA  B1                       or    c
     194.  00:85CB                           ;finally    000TRLDU
     195.  00:85CB                      
     196.  00:85CB                           ;and    00000100   ;preserve just
     197.  00:85CB  47                       ld    b,a    		;save for later
     198.  00:85CC  CD 06 86                 call  check_4th_keyboard_row      ;check M & P
     199.  00:85CF  F5                       push  af
     200.  00:85D0  E6 04                    and    00000100b	;filter just M
     201.  00:85D2  87                       add    a
     202.  00:85D3  87                       add    a
     203.  00:85D4  87                       add    a           ;shift 3th to 6th bit
     204.  00:85D5  B0                       or    b           	;merge with previous
     205.  00:85D6  47                       ld    b,a
     206.  00:85D7                      
     207.  00:85D7  CD E4 85                 call  read_joy_0
     208.  00:85DA  E6 3F                    and    00111111b  	;we want just 002TRLDU  from joystick    (2 is second trigger)
     209.  00:85DC  B0                       or    b      		;added 000TRLDU from keyboard
     210.  00:85DD  47                       ld    b,a      	;save for later
     211.  00:85DE  F1                       pop    af      	; let's check on P
     212.  00:85DF                      
     213.  00:85DF  E6 20                    and    00100000b
     214.  00:85E1  87                       add    a      		;P status on 6th bit  ... so 0P2TRLDU
     215.  00:85E2  B0                       or    b
     216.  00:85E3                      
     217.  00:85E3  C9                       ret
     218.  00:85E4                      
     219.  00:85E4                      
     220.  00:85E4                      ;ret
     221.  00:85E4                      ;  a -            xx2TRLDU
     222.  00:85E4                      read_joy_0:
     223.  00:85E4  F3                         di
     224.  00:85E5  3E 0F                      ld    a,15
     225.  00:85E7  D3 A0                      out    [PSG_A],a
     226.  00:85E9  DB A2                      in    a,[PSG_R]
     227.  00:85EB  E6 BF                      and    10111111b        ;joy0
     228.  00:85ED                      
     229.  00:85ED  D3 A1                      out    [PSG_W],a        ;set joy0
     230.  00:85EF                      
     231.  00:85EF  3E 0E                      ld    a,14
     232.  00:85F1  D3 A0                      out    [PSG_A],a
     233.  00:85F3  DB A2                      in    a,[PSG_R]
     234.  00:85F5                      
     235.  00:85F5  FB                         ei
     236.  00:85F6  2F                         cpl
     237.  00:85F7                      
     238.  00:85F7  C9                         ret
     239.  00:85F8                      
     240.  00:85F8                      
     241.  00:85F8                      ;ret
     242.  00:85F8                      ;  a -      RDULxxxT
     243.  00:85F8                      check_8th_keyboard_row:
     244.  00:85F8  F3                       di
     245.  00:85F9  DB AA                    in    a,(#aa)
     246.  00:85FB  E6 F0                    and    #f0
     247.  00:85FD  F6 08                    or    8
     248.  00:85FF  D3 AA                    out    (#aa),a
     249.  00:8601  DB A9                    in    a,(#a9)
     250.  00:8603  FB                       ei
     251.  00:8604  2F                       cpl
     252.  00:8605                      
     253.  00:8605  C9                       ret
     254.  00:8606                      
     255.  00:8606                      
     256.  00:8606                      ;ret
     257.  00:8606                      ;  a -      xxxxxMxx
     258.  00:8606                      check_4th_keyboard_row:
     259.  00:8606  F3                       di
     260.  00:8607  DB AA                    in    a,(#aa)
     261.  00:8609  E6 F0                    and    #f0
     262.  00:860B  F6 04                    or    4
     263.  00:860D  D3 AA                    out    (#aa),a
     264.  00:860F  DB A9                    in    a,(#a9)
     265.  00:8611  FB                       ei
     266.  00:8612  2F                       cpl
     267.  00:8613                      
     268.  00:8613  C9                       ret
     269.  00:8614                      
     270.  00:8614                      ;--------------------------------------------
     271.  00:8614                      
     272.  00:8614                      
     273.  00:8614                      
     274.  00:8614                      
     275.  00:8614                      
     276.  00:8614                      
     277.  00:8614                      
     278.  00:8614                      
     117   00:8614                      	
     118   00:8614                      	include "subr_sonido.asm"
       1.  00:8614                      
       2.  00:8614                      ;;=====================================================
       3.  00:8614                      ;;SUBRUTINAS PARA SONIDOS
       4.  00:8614                      ;;=====================================================	
       5.  00:8614                      
       6.  00:8614                      ;;=====================================================
       7.  00:8614                      ;;INICIALIZA_REPLAYER_EFECTOS_INTERRUPCIONES
       8.  00:8614                      ;;=====================================================	
       9.  00:8614                      ; función: 	inicializa: replayer de música, player de efectos e interrupciones
      10.  00:8614                      ; entrada: 	-
      11.  00:8614                      ; salida: 	-
      12.  00:8614                      ; toca: 	HL, A
      13.  00:8614                      inicializa_replayer_efectos_interrupciones:
      14.  00:8614  F3                  	DI
      15.  00:8615                      
      16.  00:8615                      	;inicializacion de replayer musical
      17.  00:8615  21 BD 8C            	LD		HL, song-99			; hl <- initial address of module - 99
      18.  00:8618  CD 54 86            	CALL	PT3_INIT			; Inits PT3 player
      19.  00:861B                      		
      20.  00:861B                      	;inicializacion del reproductor de efectos sonoros
      21.  00:861B  21 88 96            	LD		HL, sfx_bank
      22.  00:861E  CD 43 8C            	CALL	ayFX_SETUP
      23.  00:8621                      	
      24.  00:8621                      	;Engancha nuestra rutina de servicio al gancha que deja preparado la BIOS cuando se termina de pintar la pantalla (50 o 60 veces por segundo)
      25.  00:8621  3E C3               	LD		A, #C3
      26.  00:8623  32 9F FD            	LD		[H.TIMI], A
      27.  00:8626  21 2E 86            	LD		HL, subrutina_isr
      28.  00:8629  22 A0 FD            	LD		[H.TIMI+1], HL
      29.  00:862C                      	
      30.  00:862C  FB                  	EI		;optimizacion:
      31.  00:862D                      			;piensa que las dos ultimas lineas podrian haber sido: 
      32.  00:862D                      			;ei						;primero ei
      33.  00:862D                      			;ld		[H.TIMI+1],hl	;luego este ld
      34.  00:862D                      									;PENSAR (y consultar ) PORQUE!!!!
      35.  00:862D                      fin_inicializa_replayer_efectos_interrupciones:
      36.  00:862D  C9                  	RET
      37.  00:862E                      
      38.  00:862E                      
      39.  00:862E                      
      40.  00:862E                      ;;=====================================================
      41.  00:862E                      ;;NUESTRA_ISR
      42.  00:862E                      ;;=====================================================	
      43.  00:862E                      ; función: 	envía datos al PSG + toca un trozo de música + toca trozo de 
      44.  00:862E                      ; entrada: 	-
      45.  00:862E                      ; salida: 	-
      46.  00:862E                      ; toca: 	HL, A
      47.  00:862E                      subrutina_isr:
      48.  00:862E  CD 99 8B            	CALL	PT3_ROUT			;envia los datos a los registros del PSG
      49.  00:8631  CD A1 8A            	CALL	PT3_PLAY			;calcula el siguiente 'trocito' de musica que sera enviado al proxima vez
      50.  00:8634  C3 8B 8C            	JP		ayFX_PLAY			;calcula el siguiente 'trocito' de efecto especial de sonido que sera enviado la proxima vez
      51.  00:8637                      fin_subrutina_isr:
      52.  00:8637                      	;RET
      53.  00:8637                      
      54.  00:8637                      
      55.  00:8637                      
      56.  00:8637                      ;;=====================================================
      57.  00:8637                      ;;DEFINICIÓN DE SUBRUTINAS DE FERNANDO PARA COMPRESIÓN Y SONIDO
      58.  00:8637                      ;;=====================================================
      59.  00:8637                      subrutinas_sonido:
      60.  00:8637                      	include	"PT3-ROM_sjasm.asm"
       1:  00:8637                      		; --- PT3 REPLAYER WORKING ON ROM ---
       2:  00:8637                      		; --- Can be assembled with asMSX ---
       3:  00:8637                      		; --- ROM version: MSX-KUN        ---
       4:  00:8637                      		; --- asMSX version 2: SapphiRe   ---
       5:  00:8637                      
       6:  00:8637                      ; Based on MSX full version of PT3 by Dioniso
       7:  00:8637                      ;
       8:  00:8637                      ; This version of the replayer can be used with any note table
       9:  00:8637                      ; This version also allows the use of PT3 commands
      10:  00:8637                      ; First 99 bytes of each PT3 module should be stripped off
      11:  00:8637                      ;
      12:  00:8637                      ; PLAY and PSG WRITE routines seperated to allow independent calls
      13:  00:8637                      ;
      14:  00:8637                      ; ROM LENGTH: 1549 bytes
      15:  00:8637                      ; RAM LENGTH:  576 bytes
      16:  00:8637                      
      17:  00:8637                      
      18:  00:8637                      
      19:  00:8637                      ;SJASM version by BTV 2016
      20:  00:8637                      
      21:  00:8637                      
      22:  00:8637                      		; --- CONSTANT VALUES DEFINITION ---
      23:  00:8637                      
      24:  00:8637                      ;ChannelsVars
      25:  00:8637                      ;struc	CHNPRM
      26:  00:8637                      ;reset group
      27:  00:8637  (00:0000)           CHNPRM_PsInOr	equ 0	;RESB 1
      28:  00:8637  (00:0001)           CHNPRM_PsInSm	equ 1	;RESB 1
      29:  00:8637  (00:0002)           CHNPRM_CrAmSl	equ 2	;RESB 1
      30:  00:8637  (00:0003)           CHNPRM_CrNsSl	equ 3	;RESB 1
      31:  00:8637  (00:0004)           CHNPRM_CrEnSl	equ 4	;RESB 1
      32:  00:8637  (00:0005)           CHNPRM_TSlCnt	equ 5	;RESB 1
      33:  00:8637  (00:0006)           CHNPRM_CrTnSl	equ 6	;RESW 1
      34:  00:8637  (00:0008)           CHNPRM_TnAcc	equ 8	;RESW 1
      35:  00:8637  (00:000A)           CHNPRM_COnOff	equ 10	;RESB 1
      36:  00:8637                      ;reset group
      37:  00:8637                      
      38:  00:8637  (00:000B)           CHNPRM_OnOffD	equ 11	;RESB 1
      39:  00:8637                      
      40:  00:8637                      ;IX for PTDECOD here [+12]
      41:  00:8637  (00:000C)           CHNPRM_OffOnD	equ 12	;RESB 1
      42:  00:8637  (00:000D)           CHNPRM_OrnPtr	equ 13	;RESW 1
      43:  00:8637  (00:000F)           CHNPRM_SamPtr	equ 15	;RESW 1
      44:  00:8637  (00:0011)           CHNPRM_NNtSkp	equ 17	;RESB 1
      45:  00:8637  (00:0012)           CHNPRM_Note	equ 18	;RESB 1
      46:  00:8637  (00:0013)           CHNPRM_SlToNt	equ 19	;RESB 1
      47:  00:8637  (00:0014)           CHNPRM_Env_En	equ 20	;RESB 1
      48:  00:8637  (00:0015)           CHNPRM_Flags	equ 21	;RESB 1
      49:  00:8637                       ;Enabled - 0,SimpleGliss - 2
      50:  00:8637  (00:0016)           CHNPRM_TnSlDl	equ 22	;RESB 1
      51:  00:8637  (00:0017)           CHNPRM_TSlStp	equ 23	;RESW 1
      52:  00:8637  (00:0019)           CHNPRM_TnDelt	equ 25	;RESW 1
      53:  00:8637  (00:001B)           CHNPRM_NtSkCn	equ 27	;RESB 1
      54:  00:8637  (00:001C)           CHNPRM_Volume	equ 28	;RESB 1
      55:  00:8637  (00:001D)           CHNPRM_Size	equ 29	;RESB 1
      56:  00:8637                      ;endstruc
      57:  00:8637                      
      58:  00:8637                      ;struc	AR
      59:  00:8637  (00:0000)           AR_TonA		equ 0	;RESW 1
      60:  00:8637  (00:0002)           AR_TonB		equ 2	;RESW 1
      61:  00:8637  (00:0004)           AR_TonC		equ 4	;RESW 1
      62:  00:8637  (00:0006)           AR_Noise	equ 6	;RESB 1
      63:  00:8637  (00:0007)           AR_Mixer	equ 7	;RESB 1
      64:  00:8637  (00:0008)           AR_AmplA	equ 8	;RESB 1
      65:  00:8637  (00:0009)           AR_AmplB	equ 9	;RESB 1
      66:  00:8637  (00:000A)           AR_AmplC	equ 10	;RESB 1
      67:  00:8637  (00:000B)           AR_Env		equ 11	;RESW 1
      68:  00:8637  (00:000D)           AR_EnvTp	equ 13	;RESB 1
      69:  00:8637                      ;endstruc
      70:  00:8637                      
      71:  00:8637                      		; --- CODE STARTS HERE ---
      72:  00:8637                      
      73:  00:8637  21 00 F0            CHECKLP:	LD	HL,PT3_SETUP
      74:  00:863A  CB FE               		SET	7,[HL]
      75:  00:863C  CB 46               		BIT	0,[HL]
      76:  00:863E  C8                  		RET	Z
      77:  00:863F  E1                  		POP	HL
      78:  00:8640  21 7A F0            		LD	HL,DelyCnt
      79:  00:8643  34                  		INC	[HL]
      80:  00:8644  21 3E F0            		LD	HL,ChanA+CHNPRM_NtSkCn
      81:  00:8647  34                  		INC	[HL]
      82:  00:8648  AF                  PT3_MUTE:	XOR	A
      83:  00:8649  67                  		LD	H,A
      84:  00:864A  6F                  		LD	L,A
      85:  00:864B  32 48 F1            		LD	[AYREGS+AR_AmplA],A
      86:  00:864E  22 49 F1            		LD	[AYREGS+AR_AmplB],HL
      87:  00:8651  C3 9A 8B            		JP	ROUT_A0
      88:  00:8654                      
      89:  00:8654                      PT3_INIT:	;HL - AddressOfModule - 100
      90:  00:8654  22 01 F0            		LD [PT3_MODADDR],HL
      91:  00:8657  E5                  		PUSH HL
      92:  00:8658  11 64 00            		LD DE,100
      93:  00:865B  19                  		ADD HL,DE
      94:  00:865C  7E                  		LD A,[HL]
      95:  00:865D  32 1C F0            		LD [PT3_Delay],A
      96:  00:8660  E5                  		PUSH HL
      97:  00:8661  DD E1               		POP IX
      98:  00:8663  19                  		ADD HL,DE
      99:  00:8664  22 03 F0            		LD [PT3_CrPsPtr],HL
     100:  00:8667  DD 5E 02            		LD E,[IX+102-100]
     101:  00:866A  19                  		ADD HL,DE
     102:  00:866B  23                  		INC HL
     103:  00:866C  22 18 F0            		LD [PT3_LPosPtr],HL
     104:  00:866F  D1                  		POP DE
     105:  00:8670  DD 6E 03            		LD L,[IX+103-100]
     106:  00:8673  DD 66 04            		LD H,[IX+104-100]
     107:  00:8676  19                  		ADD HL,DE
     108:  00:8677  22 1A F0            		LD [PT3_PatsPtr],HL
     109:  00:867A  21 A9 00            		LD HL,169
     110:  00:867D  19                  		ADD HL,DE
     111:  00:867E  22 07 F0            		LD [PT3_OrnPtrs],HL
     112:  00:8681  21 69 00            		LD HL,105
     113:  00:8684  19                  		ADD HL,DE
     114:  00:8685  22 05 F0            		LD [PT3_SAMPTRS],HL
     115:  00:8688  21 00 F0            		LD HL,PT3_SETUP
     116:  00:868B  CB BE               		RES 7,[HL]
     117:  00:868D                      
     118:  00:868D                      		; --- note table data depacker ---
     119:  00:868D                      		; Depacks first 12 tones of each tone table
     120:  00:868D                      
     121:  00:868D  11 0E 8C            		LD DE,T_PACK
     122:  00:8690  01 B1 F1            		LD BC,T1_+(2*49)-1
     123:  00:8693  1A                  .TP_0:		LD A,[DE]
     124:  00:8694  13                  		INC DE
     125:  00:8695  FE 1E               		CP 15*2
     126:  00:8697  30 06               		JR NC,.TP_1
     127:  00:8699  67                  		LD H,A
     128:  00:869A  1A                  		LD A,[DE]
     129:  00:869B  6F                  		LD L,A
     130:  00:869C  13                  		INC DE
     131:  00:869D  18 07               		JR .TP_2
     132:  00:869F  D5                  .TP_1:		PUSH DE
     133:  00:86A0  16 00               		LD D,0
     134:  00:86A2  5F                  		LD E,A
     135:  00:86A3  19                  		ADD HL,DE
     136:  00:86A4  19                  		ADD HL,DE
     137:  00:86A5  D1                  		POP DE
     138:  00:86A6  7C                  .TP_2:		LD A,H
     139:  00:86A7  02                  		LD [BC],A
     140:  00:86A8  0B                  		DEC BC
     141:  00:86A9  7D                  		LD A,L
     142:  00:86AA  02                  		LD [BC],A
     143:  00:86AB  0B                  		DEC BC
     144:  00:86AC  D6 F0               		SUB $F0
     145:  00:86AE  20 E3               		JR NZ,.TP_0
     146:  00:86B0                      
     147:  00:86B0                      		; --- INITIALIZE PT3 VARIABLES ---
     148:  00:86B0  21 23 F0            		LD HL,VARS
     149:  00:86B3  77                  		LD [HL],A
     150:  00:86B4  11 24 F0            		LD DE,VARS+1
     151:  00:86B7  01 2C 01            		LD BC,VAR0END-VARS-1
     152:  00:86BA  ED B0               		LDIR
     153:  00:86BC                      
     154:  00:86BC  3C                  		INC A
     155:  00:86BD  32 7A F0            		LD [DelyCnt],A
     156:  00:86C0  21 01 F0            		LD HL,$F001 ;H - CHNPRM_Volume, L - CHNPRM_NtSkCn
     157:  00:86C3  22 3E F0            		LD [ChanA+CHNPRM_NtSkCn],HL
     158:  00:86C6  22 5B F0            		LD [ChanB+CHNPRM_NtSkCn],HL
     159:  00:86C9  22 78 F0            		LD [ChanC+CHNPRM_NtSkCn],HL
     160:  00:86CC                      
     161:  00:86CC  21 0A 8C            		LD HL,EMPTYSAMORN
     162:  00:86CF  22 12 F0            		LD [PT3_AdInPtA],HL ;ptr to zero
     163:  00:86D2  22 30 F0            		LD [ChanA+CHNPRM_OrnPtr],HL ;ornament 0 is "0,1,0"
     164:  00:86D5  22 4D F0            		LD [ChanB+CHNPRM_OrnPtr],HL ;in all versions from
     165:  00:86D8  22 6A F0            		LD [ChanC+CHNPRM_OrnPtr],HL ;3.xx to 3.6x and VTII
     166:  00:86DB                      
     167:  00:86DB  22 32 F0            		LD [ChanA+CHNPRM_SamPtr],HL ;S1 There is no default
     168:  00:86DE  22 4F F0            		LD [ChanB+CHNPRM_SamPtr],HL ;S2 sample in PT3, so, you
     169:  00:86E1  22 6C F0            		LD [ChanC+CHNPRM_SamPtr],HL ;S3 can comment S1,2,3; see
     170:  00:86E4                      					    ;also EMPTYSAMORN comment
     171:  00:86E4                      
     172:  00:86E4                      		; --- NOTE TABLE CREATOR (c) Ivan Roshin, adapted by SapphiRe ---
     173:  00:86E4  DD 7E FF            		LD A,[IX+99-100] ;TONE TABLE NUMBER
     174:  00:86E7  17                  		RLA
     175:  00:86E8  E6 07               		AND 7
     176:  00:86EA  21 BA 8B            		LD HL,NT_DATA
     177:  00:86ED  D5                  		PUSH DE
     178:  00:86EE  50                  		LD D,B		; ld d,0 (bc is 0000 after LDIR)
     179:  00:86EF  87                  		ADD A,A
     180:  00:86F0  5F                  		LD E,A
     181:  00:86F1  19                  		ADD HL,DE	; hl -> init of correct note table data
     182:  00:86F2  5E                  		LD E,[HL]
     183:  00:86F3  23                  		INC HL
     184:  00:86F4  CB 3B               		SRL E
     185:  00:86F6  9F                  		SBC A,A
     186:  00:86F7  E6 A7               		AND $A7			;$00 (NOP) or $A7 (AND A)
     187:  00:86F9  32 21 F0            		LD [PT3_NTL3],A		; CORRECT INSTRUCTION, DEPENDS OF SELECTED TABLE
     188:  00:86FC  3E C9               		LD A,$C9		; RET CODE
     189:  00:86FE  32 22 F0            		LD [PT3_NTL3+1],A	; RET PLACED
     190:  00:8701  EB                  		EX DE,HL
     191:  00:8702  C1                  		POP BC ;BC=T1_
     192:  00:8703  09                  		ADD HL,BC
     193:  00:8704                      
     194:  00:8704  1A                  		LD A,[DE]                           
     195:  00:8705                      
     196:  00:8705  01 CA 8B            		LD BC,T_
     197:  00:8708  81                  		ADD A,C
     198:  00:8709  4F                  		LD C,A
     199:  00:870A  88                  		ADC A,B
     200:  00:870B                      
     201:  00:870B  91                  		SUB C
     202:  00:870C  47                  		LD B,A
     203:  00:870D  C5                  		PUSH BC
     204:  00:870E  11 80 F0            		LD DE,NT_
     205:  00:8711  D5                  		PUSH DE
     206:  00:8712                      
     207:  00:8712  06 0C               		LD B,12
     208:  00:8714  C5                  .L1:		PUSH BC
     209:  00:8715  4E                  		LD C,[HL]
     210:  00:8716  23                  		INC HL
     211:  00:8717  E5                  		PUSH HL
     212:  00:8718  46                  		LD B,[HL]
     213:  00:8719                      
     214:  00:8719  D5                  		PUSH DE
     215:  00:871A  EB                  		EX DE,HL
     216:  00:871B  11 17 00            		LD DE,23
     217:  00:871E  DD 26 08            		db $DD,$26,$08	;LD XH,8
     218:  00:8721                      
     219:  00:8721  CB 38               .L2:		SRL B
     220:  00:8723  CB 19               		RR C
     221:  00:8725  CD 21 F0            .L3:		CALL PT3_NTL3	;AND A or NOP
     222:  00:8728  79                  		LD A,C
     223:  00:8729  8A                  		ADC A,D	;=ADC 0
     224:  00:872A  77                  		LD [HL],A
     225:  00:872B  23                  		INC HL
     226:  00:872C  78                  		LD A,B
     227:  00:872D  8A                  		ADC A,D
     228:  00:872E  77                  		LD [HL],A
     229:  00:872F  19                  		ADD HL,DE
     230:  00:8730  DD 25               		db $DD,$25	;DEC XH
     231:  00:8732  20 ED               		JR NZ,.L2
     232:  00:8734                      
     233:  00:8734  D1                  		POP DE
     234:  00:8735  13                  		INC DE
     235:  00:8736  13                  		INC DE
     236:  00:8737  E1                  		POP HL
     237:  00:8738  23                  		INC HL
     238:  00:8739  C1                  		POP BC
     239:  00:873A  10 D8               		DJNZ .L1
     240:  00:873C                      
     241:  00:873C  E1                  		POP HL
     242:  00:873D  D1                  		POP DE
     243:  00:873E                      
     244:  00:873E  7B                  		LD A,E
     245:  00:873F  D5                  		PUSH DE
     246:  00:8740  11 D6 8B            		LD DE,TCOLD_1
     247:  00:8743  BB                  		CP E
     248:  00:8744  D1                  		POP DE
     249:  00:8745  20 05               		JR NZ,.CORR_1
     250:  00:8747  3E FD               		LD A,$FD
     251:  00:8749  32 AE F0            		LD [NT_+$2E],A
     252:  00:874C                      
     253:  00:874C  1A                  .CORR_1:	LD A,[DE]
     254:  00:874D  A7                  		AND A
     255:  00:874E  28 11               		JR Z,.TC_EXIT
     256:  00:8750  1F                  		RRA
     257:  00:8751  F5                  		PUSH AF
     258:  00:8752  87                  		ADD A,A
     259:  00:8753  4F                  		LD C,A
     260:  00:8754  09                  		ADD HL,BC
     261:  00:8755  F1                  		POP AF
     262:  00:8756  30 02               		JR NC,.CORR_2
     263:  00:8758  35                  		DEC [HL]
     264:  00:8759  35                  		DEC [HL]
     265:  00:875A  34                  .CORR_2:	INC [HL]
     266:  00:875B  A7                  		AND A
     267:  00:875C  ED 42               		SBC HL,BC
     268:  00:875E  13                  		INC DE
     269:  00:875F  18 EB               		JR .CORR_1
     270:  00:8761                      
     271:  00:8761                      .TC_EXIT:	;POP AF
     272:  00:8761                      
     273:  00:8761                      		; --- CREATE PT3 VOLUME TABLE (c) Ivan Roshin, adapted by SapphiRe ---
     274:  00:8761  21 11 00            		ld	hl,$11
     275:  00:8764  54                  		ld	d,h
     276:  00:8765  5C                  		ld	e,h
     277:  00:8766  DD 21 50 F1         		ld	IX,VT_+16
     278:  00:876A  06 0F               		ld	b,15
     279:  00:876C  E5                  .INITV1:	push	hl
     280:  00:876D  19                  		add	hl,de
     281:  00:876E  EB                  		ex	de,hl
     282:  00:876F  ED 62               		sbc	hl,hl
     283:  00:8771  48                  		ld	c,b
     284:  00:8772  06 10               		ld	b,16
     285:  00:8774  7D                  .INITV2:	ld	a,l
     286:  00:8775  17                  		rla
     287:  00:8776  7C                  		ld	a,h
     288:  00:8777  CE 00               		adc	a,0
     289:  00:8779  DD 77 00            		ld	[ix],a
     290:  00:877C  DD 23               		inc	ix
     291:  00:877E  19                  		add	hl,de
     292:  00:877F  10 F3               		djnz	.INITV2
     293:  00:8781  E1                  		pop	hl
     294:  00:8782  7B                  		ld	a,e
     295:  00:8783  FE 77               		cp	$77
     296:  00:8785  20 01               		jr	nz,.INITV3
     297:  00:8787  1C                  		inc	e
     298:  00:8788  41                  .INITV3:	ld	b,c
     299:  00:8789  10 E1               		djnz	.INITV1
     300:  00:878B                      
     301:  00:878B  C9                  		RET
     302:  00:878C                      
     303:  00:878C                      		;pattern decoder
     304:  00:878C  DD 36 08 00         PD_OrSm:	LD [IX+(CHNPRM_Env_En-12)],0
     305:  00:8790  CD 16 89            		CALL SETORN
     306:  00:8793  0A                  		LD A,[BC]
     307:  00:8794  03                  		INC BC
     308:  00:8795  0F                  		RRCA
     309:  00:8796                      
     310:  00:8796  87                  PD_SAM:		ADD A,A
     311:  00:8797  5F                  PD_SAM_:	LD E,A
     312:  00:8798  16 00               		LD D,0
     313:  00:879A  2A 05 F0            		LD HL,[PT3_SAMPTRS]
     314:  00:879D  19                  		ADD HL,DE
     315:  00:879E  5E                  		LD E,[HL]
     316:  00:879F  23                  		INC HL
     317:  00:87A0  56                  		LD D,[HL]
     318:  00:87A1  2A 01 F0            		LD HL,[PT3_MODADDR]
     319:  00:87A4  19                  		ADD HL,DE
     320:  00:87A5  DD 75 03            		LD [IX+(CHNPRM_SamPtr-12)],L
     321:  00:87A8  DD 74 04            		LD [IX+(CHNPRM_SamPtr+1-12)],H
     322:  00:87AB  18 41               		JR PD_LOOP
     323:  00:87AD                      
     324:  00:87AD  07                  PD_VOL:		RLCA
     325:  00:87AE  07                  		RLCA
     326:  00:87AF  07                  		RLCA
     327:  00:87B0  07                  		RLCA
     328:  00:87B1  DD 77 10            		LD [IX+(CHNPRM_Volume-12)],A
     329:  00:87B4  18 3B               		JR PD_LP2
     330:  00:87B6                      	
     331:  00:87B6  DD 77 08            PD_EOff:	LD [IX+(CHNPRM_Env_En-12)],A
     332:  00:87B9  DD 77 F4            		LD [IX+(CHNPRM_PsInOr-12)],A
     333:  00:87BC  18 33               		JR PD_LP2
     334:  00:87BE                      
     335:  00:87BE  3D                  PD_SorE:	DEC A
     336:  00:87BF  20 07               		JR NZ,PD_ENV
     337:  00:87C1  0A                  		LD A,[BC]
     338:  00:87C2  03                  		INC BC
     339:  00:87C3  DD 77 05            		LD [IX+(CHNPRM_NNtSkp-12)],A
     340:  00:87C6  18 29               		JR PD_LP2
     341:  00:87C8                      
     342:  00:87C8  CD FA 88            PD_ENV:		CALL SETENV
     343:  00:87CB  18 24               		JR PD_LP2
     344:  00:87CD                      
     345:  00:87CD  CD 16 89            PD_ORN:		CALL SETORN
     346:  00:87D0  18 1C               		JR PD_LOOP
     347:  00:87D2                             
     348:  00:87D2  DD 77 08            PD_ESAM:	LD [IX+(CHNPRM_Env_En-12)],A
     349:  00:87D5  DD 77 F4            		LD [IX+(CHNPRM_PsInOr-12)],A
     350:  00:87D8  C4 FA 88            		CALL NZ,SETENV
     351:  00:87DB  0A                  		LD A,[BC]
     352:  00:87DC  03                  		INC BC
     353:  00:87DD  18 B8               		JR PD_SAM_
     354:  00:87DF                      
     355:  00:87DF  DD 7E 06            PTDECOD:	LD A,[IX+(CHNPRM_Note-12)]
     356:  00:87E2  32 0F F0            		LD [PT3_PrNote],A
     357:  00:87E5  DD 6E FA            		LD L,[IX+(CHNPRM_CrTnSl-12)]
     358:  00:87E8  DD 66 FB            		LD H,[IX+(CHNPRM_CrTnSl+1-12)]
     359:  00:87EB  22 10 F0            		LD [PT3_PrSlide],HL
     360:  00:87EE                      
     361:  00:87EE  11 10 20            PD_LOOP:	LD DE,$2010
     362:  00:87F1  0A                  PD_LP2:		LD A,[BC]
     363:  00:87F2  03                  		INC BC
     364:  00:87F3  83                  		ADD A,E
     365:  00:87F4  38 96               		JR C,PD_OrSm
     366:  00:87F6  82                  		ADD A,D
     367:  00:87F7  28 4A               		JR Z,PD_FIN
     368:  00:87F9  38 9B               		JR C,PD_SAM
     369:  00:87FB  83                  		ADD A,E
     370:  00:87FC  28 25               		JR Z,PD_REL
     371:  00:87FE  38 AD               		JR C,PD_VOL
     372:  00:8800  83                  		ADD A,E
     373:  00:8801  28 B3               		JR Z,PD_EOff
     374:  00:8803  38 B9               		JR C,PD_SorE
     375:  00:8805  C6 60               		ADD A,96
     376:  00:8807  38 20               		JR C,PD_NOTE
     377:  00:8809  83                  		ADD A,E
     378:  00:880A  38 C1               		JR C,PD_ORN
     379:  00:880C  82                  		ADD A,D
     380:  00:880D  38 0F               		JR C,PD_NOIS
     381:  00:880F  83                  		ADD A,E
     382:  00:8810  38 C0               		JR C,PD_ESAM
     383:  00:8812  87                  		ADD A,A
     384:  00:8813  5F                  		LD E,A
     385:  00:8814  21 4F 68            		LD HL,(SPCCOMS+$DF20) % 65536	; Adapted from original Speccy version (saves 6 bytes)
     386:  00:8817  19                  		ADD HL,DE
     387:  00:8818  5E                  		LD E,[HL]
     388:  00:8819  23                  		INC HL
     389:  00:881A  56                  		LD D,[HL]
     390:  00:881B  D5                  		PUSH DE
     391:  00:881C  18 D0               		JR PD_LOOP
     392:  00:881E                      
     393:  00:881E  32 7E F0            PD_NOIS:	LD [Ns_Base],A
     394:  00:8821  18 CE               		JR PD_LP2
     395:  00:8823                      
     396:  00:8823  DD CB 09 86         PD_REL:		RES 0,[IX+(CHNPRM_Flags-12)]
     397:  00:8827  18 08               		JR PD_RES
     398:  00:8829                      	
     399:  00:8829  DD 77 06            PD_NOTE:	LD [IX+(CHNPRM_Note-12)],A
     400:  00:882C  DD CB 09 C6         		SET 0,[IX+(CHNPRM_Flags-12)]
     401:  00:8830  AF                  		XOR A
     402:  00:8831                      
     403:  00:8831  ED 73 09 F0         PD_RES:		LD [PT3_PDSP],SP
     404:  00:8835  DD F9               		LD SP,IX
     405:  00:8837  67                  		LD H,A
     406:  00:8838  6F                  		LD L,A
     407:  00:8839  E5                  		PUSH HL
     408:  00:883A  E5                  		PUSH HL
     409:  00:883B  E5                  		PUSH HL
     410:  00:883C  E5                  		PUSH HL
     411:  00:883D  E5                  		PUSH HL
     412:  00:883E  E5                  		PUSH HL
     413:  00:883F  ED 7B 09 F0         		LD SP,[PT3_PDSP]
     414:  00:8843                      
     415:  00:8843  DD 7E 05            PD_FIN:		LD A,[IX+(CHNPRM_NNtSkp-12)]
     416:  00:8846  DD 77 0F            		LD [IX+(CHNPRM_NtSkCn-12)],A
     417:  00:8849  C9                  		RET
     418:  00:884A                      
     419:  00:884A  DD CB 09 96         C_PORTM:	RES 2,[IX+(CHNPRM_Flags-12)]
     420:  00:884E  0A                  		LD A,[BC]
     421:  00:884F  03                  		INC BC
     422:  00:8850                      		;SKIP PRECALCULATED TONE DELTA [BECAUSE
     423:  00:8850                      		;CANNOT BE RIGHT AFTER PT3 COMPILATION]
     424:  00:8850  03                  		INC BC
     425:  00:8851  03                  		INC BC
     426:  00:8852  DD 77 0A            		LD [IX+(CHNPRM_TnSlDl-12)],A
     427:  00:8855  DD 77 F9            		LD [IX+(CHNPRM_TSlCnt-12)],A
     428:  00:8858  11 80 F0            		LD DE,NT_
     429:  00:885B  DD 7E 06            		LD A,[IX+(CHNPRM_Note-12)]
     430:  00:885E  DD 77 07            		LD [IX+(CHNPRM_SlToNt-12)],A
     431:  00:8861  87                  		ADD A,A
     432:  00:8862  6F                  		LD L,A
     433:  00:8863  26 00               		LD H,0
     434:  00:8865  19                  		ADD HL,DE
     435:  00:8866  7E                  		LD A,[HL]
     436:  00:8867  23                  		INC HL
     437:  00:8868  66                  		LD H,[HL]
     438:  00:8869  6F                  		LD L,A
     439:  00:886A  E5                  		PUSH HL
     440:  00:886B  3A 0F F0            		LD A,[PT3_PrNote]
     441:  00:886E  DD 77 06            		LD [IX+(CHNPRM_Note-12)],A
     442:  00:8871  87                  		ADD A,A
     443:  00:8872  6F                  		LD L,A
     444:  00:8873  26 00               		LD H,0
     445:  00:8875  19                  		ADD HL,DE
     446:  00:8876  5E                  		LD E,[HL]
     447:  00:8877  23                  		INC HL
     448:  00:8878  56                  		LD D,[HL]
     449:  00:8879  E1                  		POP HL
     450:  00:887A  ED 52               		SBC HL,DE
     451:  00:887C  DD 75 0D            		LD [IX+(CHNPRM_TnDelt-12)],L
     452:  00:887F  DD 74 0E            		LD [IX+(CHNPRM_TnDelt+1-12)],H
     453:  00:8882  ED 5B 10 F0         		LD DE,[PT3_PrSlide]
     454:  00:8886  DD 73 FA            		LD [IX+(CHNPRM_CrTnSl-12)],E
     455:  00:8889  DD 72 FB            		LD [IX+(CHNPRM_CrTnSl+1-12)],D
     456:  00:888C  0A                  		LD A,[BC] ;SIGNED TONE STEP
     457:  00:888D  03                  		INC BC
     458:  00:888E  08                  		EX AF,AF'
     459:  00:888F  0A                  		LD A,[BC]
     460:  00:8890  03                  		INC BC
     461:  00:8891  A7                  		AND A
     462:  00:8892  28 01               		JR Z,.NOSIG
     463:  00:8894  EB                  		EX DE,HL
     464:  00:8895  ED 52               .NOSIG:	SBC HL,DE
     465:  00:8897  F2 9F 88            		JP P,SET_STP
     466:  00:889A  2F                  		CPL
     467:  00:889B  08                  		EX AF,AF'
     468:  00:889C  ED 44               		NEG
     469:  00:889E  08                  		EX AF,AF'
     470:  00:889F  DD 77 0C            SET_STP:	LD [IX+(CHNPRM_TSlStp+1-12)],A
     471:  00:88A2  08                  		EX AF,AF'
     472:  00:88A3  DD 77 0B            		LD [IX+(CHNPRM_TSlStp-12)],A
     473:  00:88A6  DD 36 FE 00         		LD [IX+(CHNPRM_COnOff-12)],0
     474:  00:88AA  C9                  		RET
     475:  00:88AB                      
     476:  00:88AB  DD CB 09 D6         C_GLISS:	SET 2,[IX+(CHNPRM_Flags-12)]
     477:  00:88AF  0A                  		LD A,[BC]
     478:  00:88B0  03                  		INC BC
     479:  00:88B1  DD 77 0A            		LD [IX+(CHNPRM_TnSlDl-12)],A
     480:  00:88B4  DD 77 F9            		LD [IX+(CHNPRM_TSlCnt-12)],A
     481:  00:88B7  0A                  		LD A,[BC]
     482:  00:88B8  03                  		INC BC
     483:  00:88B9  08                  		EX AF,AF'
     484:  00:88BA  0A                  		LD A,[BC]
     485:  00:88BB  03                  		INC BC
     486:  00:88BC  18 E1               		JR SET_STP
     487:  00:88BE                      
     488:  00:88BE  0A                  C_SMPOS:	LD A,[BC]
     489:  00:88BF  03                  		INC BC
     490:  00:88C0  DD 77 F5            		LD [IX+(CHNPRM_PsInSm-12)],A
     491:  00:88C3  C9                  		RET
     492:  00:88C4                      
     493:  00:88C4  0A                  C_ORPOS:	LD A,[BC]
     494:  00:88C5  03                  		INC BC
     495:  00:88C6  DD 77 F4            		LD [IX+(CHNPRM_PsInOr-12)],A
     496:  00:88C9  C9                  		RET
     497:  00:88CA                      
     498:  00:88CA  0A                  C_VIBRT:	LD A,[BC]
     499:  00:88CB  03                  		INC BC
     500:  00:88CC  DD 77 FF            		LD [IX+(CHNPRM_OnOffD-12)],A
     501:  00:88CF  DD 77 FE            		LD [IX+(CHNPRM_COnOff-12)],A
     502:  00:88D2  0A                  		LD A,[BC]
     503:  00:88D3  03                  		INC BC
     504:  00:88D4  DD 77 00            		LD [IX+(CHNPRM_OffOnD-12)],A
     505:  00:88D7  AF                  		XOR A
     506:  00:88D8  DD 77 F9            		LD [IX+(CHNPRM_TSlCnt-12)],A
     507:  00:88DB  DD 77 FA            		LD [IX+(CHNPRM_CrTnSl-12)],A
     508:  00:88DE  DD 77 FB            		LD [IX+(CHNPRM_CrTnSl+1-12)],A
     509:  00:88E1  C9                  		RET
     510:  00:88E2                      
     511:  00:88E2  0A                  C_ENGLS:	LD A,[BC]
     512:  00:88E3  03                  		INC BC
     513:  00:88E4  32 1E F0            		LD [PT3_Env_Del],A
     514:  00:88E7  32 7D F0            		LD [CurEDel],A
     515:  00:88EA  0A                  		LD A,[BC]
     516:  00:88EB  03                  		INC BC
     517:  00:88EC  6F                  		LD L,A
     518:  00:88ED  0A                  		LD A,[BC]
     519:  00:88EE  03                  		INC BC
     520:  00:88EF  67                  		LD H,A
     521:  00:88F0  22 1F F0            		LD [PT3_ESldAdd],HL
     522:  00:88F3  C9                  		RET
     523:  00:88F4                      
     524:  00:88F4  0A                  C_DELAY:	LD A,[BC]
     525:  00:88F5  03                  		INC BC
     526:  00:88F6  32 1C F0            		LD [PT3_Delay],A
     527:  00:88F9  C9                  		RET
     528:  00:88FA                      	
     529:  00:88FA  DD 73 08            SETENV:		LD [IX+(CHNPRM_Env_En-12)],E
     530:  00:88FD  32 4D F1            		LD [AYREGS+AR_EnvTp],A
     531:  00:8900  0A                  		LD A,[BC]
     532:  00:8901  03                  		INC BC
     533:  00:8902  67                  		LD H,A
     534:  00:8903  0A                  		LD A,[BC]
     535:  00:8904  03                  		INC BC
     536:  00:8905  6F                  		LD L,A
     537:  00:8906  22 4E F1            		LD [EnvBase],HL
     538:  00:8909  AF                  		XOR A
     539:  00:890A  DD 77 F4            		LD [IX+(CHNPRM_PsInOr-12)],A
     540:  00:890D  32 7D F0            		LD [CurEDel],A
     541:  00:8910  67                  		LD H,A
     542:  00:8911  6F                  		LD L,A
     543:  00:8912  22 7B F0            		LD [CurESld],HL
     544:  00:8915  C9                  C_NOP:		RET
     545:  00:8916                      
     546:  00:8916  87                  SETORN:		ADD A,A
     547:  00:8917  5F                  		LD E,A
     548:  00:8918  16 00               		LD D,0
     549:  00:891A  DD 72 F4            		LD [IX+(CHNPRM_PsInOr-12)],D
     550:  00:891D  2A 07 F0            		LD HL,[PT3_OrnPtrs]
     551:  00:8920  19                  		ADD HL,DE
     552:  00:8921  5E                  		LD E,[HL]
     553:  00:8922  23                  		INC HL
     554:  00:8923  56                  		LD D,[HL]
     555:  00:8924  2A 01 F0            		LD HL,[PT3_MODADDR]
     556:  00:8927  19                  		ADD HL,DE
     557:  00:8928  DD 75 01            		LD [IX+(CHNPRM_OrnPtr-12)],L
     558:  00:892B  DD 74 02            		LD [IX+(CHNPRM_OrnPtr+1-12)],H
     559:  00:892E  C9                  		RET
     560:  00:892F                      
     561:  00:892F                      		;ALL 16 ADDRESSES TO PROTECT FROM BROKEN PT3 MODULES
     562:  00:892F  15 89               SPCCOMS:	dw C_NOP
     563:  00:8931  AB 88               		dw C_GLISS
     564:  00:8933  4A 88               		dw C_PORTM
     565:  00:8935  BE 88               		dw C_SMPOS
     566:  00:8937  C4 88               		dw C_ORPOS
     567:  00:8939  CA 88               		dw C_VIBRT
     568:  00:893B  15 89               		dw C_NOP
     569:  00:893D  15 89               		dw C_NOP
     570:  00:893F  E2 88               		dw C_ENGLS
     571:  00:8941  F4 88               		dw C_DELAY
     572:  00:8943  15 89               		dw C_NOP
     573:  00:8945  15 89               		dw C_NOP
     574:  00:8947  15 89               		dw C_NOP
     575:  00:8949  15 89               		dw C_NOP
     576:  00:894B  15 89               		dw C_NOP
     577:  00:894D  15 89               		dw C_NOP
     578:  00:894F                      
     579:  00:894F  AF                  CHREGS:		XOR A
     580:  00:8950  32 4A F1            		LD [AYREGS+AR_AmplC],A
     581:  00:8953  DD CB 15 46         		BIT 0,[IX+CHNPRM_Flags]
     582:  00:8957  E5                  		PUSH HL
     583:  00:8958  CA 7E 8A            		JP Z,.CH_EXIT
     584:  00:895B  ED 73 0B F0         		LD [PT3_CSP],SP
     585:  00:895F  DD 6E 0D            		LD L,[IX+CHNPRM_OrnPtr]
     586:  00:8962  DD 66 0E            		LD H,[IX+CHNPRM_OrnPtr+1]
     587:  00:8965  F9                  		LD SP,HL
     588:  00:8966  D1                  		POP DE
     589:  00:8967  67                  		LD H,A
     590:  00:8968  DD 7E 00            		LD A,[IX+CHNPRM_PsInOr]
     591:  00:896B  6F                  		LD L,A
     592:  00:896C  39                  		ADD HL,SP
     593:  00:896D  3C                  		INC A
     594:  00:896E  BA                  		CP D
     595:  00:896F  38 01               		JR C,.CH_ORPS
     596:  00:8971  7B                  		LD A,E
     597:  00:8972  DD 77 00            .CH_ORPS:	LD [IX+CHNPRM_PsInOr],A
     598:  00:8975  DD 7E 12            		LD A,[IX+CHNPRM_Note]
     599:  00:8978  86                  		ADD A,[HL]
     600:  00:8979  F2 7D 89            		JP P,.CH_NTP
     601:  00:897C  AF                  		XOR A
     602:  00:897D  FE 60               .CH_NTP:	CP 96
     603:  00:897F  38 02               		JR C,.CH_NOK
     604:  00:8981  3E 5F               		LD A,95
     605:  00:8983  87                  .CH_NOK:	ADD A,A
     606:  00:8984  08                  		EX AF,AF'
     607:  00:8985  DD 6E 0F            		LD L,[IX+CHNPRM_SamPtr]
     608:  00:8988  DD 66 10            		LD H,[IX+CHNPRM_SamPtr+1]
     609:  00:898B  F9                  		LD SP,HL
     610:  00:898C  D1                  		POP DE
     611:  00:898D  26 00               		LD H,0
     612:  00:898F  DD 7E 01            		LD A,[IX+CHNPRM_PsInSm]
     613:  00:8992  47                  		LD B,A
     614:  00:8993  87                  		ADD A,A
     615:  00:8994  87                  		ADD A,A
     616:  00:8995  6F                  		LD L,A
     617:  00:8996  39                  		ADD HL,SP
     618:  00:8997  F9                  		LD SP,HL
     619:  00:8998  78                  		LD A,B
     620:  00:8999  3C                  		INC A
     621:  00:899A  BA                  		CP D
     622:  00:899B  38 01               		JR C,.CH_SMPS
     623:  00:899D  7B                  		LD A,E
     624:  00:899E  DD 77 01            .CH_SMPS:	LD [IX+CHNPRM_PsInSm],A
     625:  00:89A1  C1                  		POP BC
     626:  00:89A2  E1                  		POP HL
     627:  00:89A3  DD 5E 08            		LD E,[IX+CHNPRM_TnAcc]
     628:  00:89A6  DD 56 09            		LD D,[IX+CHNPRM_TnAcc+1]
     629:  00:89A9  19                  		ADD HL,DE
     630:  00:89AA  CB 70               		BIT 6,B
     631:  00:89AC  28 06               		JR Z,.CH_NOAC
     632:  00:89AE  DD 75 08            		LD [IX+CHNPRM_TnAcc],L
     633:  00:89B1  DD 74 09            		LD [IX+CHNPRM_TnAcc+1],H
     634:  00:89B4  EB                  .CH_NOAC:	EX DE,HL
     635:  00:89B5  08                  		EX AF,AF'
     636:  00:89B6  6F                  		LD L,A
     637:  00:89B7  26 00               		LD H,0
     638:  00:89B9  31 80 F0            		LD SP,NT_
     639:  00:89BC  39                  		ADD HL,SP
     640:  00:89BD  F9                  		LD SP,HL
     641:  00:89BE  E1                  		POP HL
     642:  00:89BF  19                  		ADD HL,DE
     643:  00:89C0  DD 5E 06            		LD E,[IX+CHNPRM_CrTnSl]
     644:  00:89C3  DD 56 07            		LD D,[IX+CHNPRM_CrTnSl+1]
     645:  00:89C6  19                  		ADD HL,DE
     646:  00:89C7  ED 7B 0B F0         		LD SP,[PT3_CSP]
     647:  00:89CB  E3                  		EX [SP],HL
     648:  00:89CC  AF                  		XOR A
     649:  00:89CD  DD B6 05            		OR [IX+CHNPRM_TSlCnt]
     650:  00:89D0  28 3E               		JR Z,.CH_AMP
     651:  00:89D2  DD 35 05            		DEC [IX+CHNPRM_TSlCnt]
     652:  00:89D5  20 39               		JR NZ,.CH_AMP
     653:  00:89D7  DD 7E 16            		LD A,[IX+CHNPRM_TnSlDl]
     654:  00:89DA  DD 77 05            		LD [IX+CHNPRM_TSlCnt],A
     655:  00:89DD  DD 6E 17            		LD L,[IX+CHNPRM_TSlStp]
     656:  00:89E0  DD 66 18            		LD H,[IX+CHNPRM_TSlStp+1]
     657:  00:89E3  7C                  		LD A,H
     658:  00:89E4  19                  		ADD HL,DE
     659:  00:89E5  DD 75 06            		LD [IX+CHNPRM_CrTnSl],L
     660:  00:89E8  DD 74 07            		LD [IX+CHNPRM_CrTnSl+1],H
     661:  00:89EB  DD CB 15 56         		BIT 2,[IX+CHNPRM_Flags]
     662:  00:89EF  20 1F               		JR NZ,.CH_AMP
     663:  00:89F1  DD 5E 19            		LD E,[IX+CHNPRM_TnDelt]
     664:  00:89F4  DD 56 1A            		LD D,[IX+CHNPRM_TnDelt+1]
     665:  00:89F7  A7                  		AND A
     666:  00:89F8  28 01               		JR Z,.CH_STPP
     667:  00:89FA  EB                  		EX DE,HL
     668:  00:89FB  ED 52               .CH_STPP:	SBC HL,DE
     669:  00:89FD  FA 10 8A            		JP M,.CH_AMP
     670:  00:8A00  DD 7E 13            		LD A,[IX+CHNPRM_SlToNt]
     671:  00:8A03  DD 77 12            		LD [IX+CHNPRM_Note],A
     672:  00:8A06  AF                  		XOR A
     673:  00:8A07  DD 77 05            		LD [IX+CHNPRM_TSlCnt],A
     674:  00:8A0A  DD 77 06            		LD [IX+CHNPRM_CrTnSl],A
     675:  00:8A0D  DD 77 07            		LD [IX+CHNPRM_CrTnSl+1],A
     676:  00:8A10  DD 7E 02            .CH_AMP:	LD A,[IX+CHNPRM_CrAmSl]
     677:  00:8A13  CB 79               		BIT 7,C
     678:  00:8A15  28 13               		JR Z,.CH_NOAM
     679:  00:8A17  CB 71               		BIT 6,C
     680:  00:8A19  28 07               		JR Z,.CH_AMIN
     681:  00:8A1B  FE 0F               		CP 15
     682:  00:8A1D  28 0B               		JR Z,.CH_NOAM
     683:  00:8A1F  3C                  		INC A
     684:  00:8A20  18 05               		JR .CH_SVAM
     685:  00:8A22  FE F1               .CH_AMIN:	CP -15
     686:  00:8A24  28 04               		JR Z,.CH_NOAM
     687:  00:8A26  3D                  		DEC A
     688:  00:8A27  DD 77 02            .CH_SVAM:	LD [IX+CHNPRM_CrAmSl],A
     689:  00:8A2A  6F                  .CH_NOAM:	LD L,A
     690:  00:8A2B  78                  		LD A,B
     691:  00:8A2C  E6 0F               		AND 15
     692:  00:8A2E  85                  		ADD A,L
     693:  00:8A2F  F2 33 8A            		JP P,.CH_APOS
     694:  00:8A32  AF                  		XOR A
     695:  00:8A33  FE 10               .CH_APOS:	CP 16
     696:  00:8A35  38 02               		JR C,.CH_VOL
     697:  00:8A37  3E 0F               		LD A,15
     698:  00:8A39  DD B6 1C            .CH_VOL:	OR [IX+CHNPRM_Volume]
     699:  00:8A3C  6F                  		LD L,A
     700:  00:8A3D  26 00               		LD H,0
     701:  00:8A3F  11 40 F1            		LD DE,VT_
     702:  00:8A42  19                  		ADD HL,DE
     703:  00:8A43  7E                  		LD A,[HL]
     704:  00:8A44  CB 41               .CH_ENV:	BIT 0,C
     705:  00:8A46  20 03               		JR NZ,.CH_NOEN
     706:  00:8A48  DD B6 14            		OR [IX+CHNPRM_Env_En]
     707:  00:8A4B  32 4A F1            .CH_NOEN:	LD [AYREGS+AR_AmplC],A
     708:  00:8A4E  CB 78               		BIT 7,B
     709:  00:8A50  79                  		LD A,C
     710:  00:8A51  28 19               		JR Z,.NO_ENSL
     711:  00:8A53  17                  		RLA
     712:  00:8A54  17                  		RLA
     713:  00:8A55  CB 2F               		SRA A
     714:  00:8A57  CB 2F               		SRA A
     715:  00:8A59  CB 2F               		SRA A
     716:  00:8A5B  DD 86 04            		ADD A,[IX+CHNPRM_CrEnSl] ;SEE COMMENT BELOW
     717:  00:8A5E  CB 68               		BIT 5,B
     718:  00:8A60  28 03               		JR Z,.NO_ENAC
     719:  00:8A62  DD 77 04            		LD [IX+CHNPRM_CrEnSl],A
     720:  00:8A65  21 1D F0            .NO_ENAC:	LD HL,PT3_AddToEn
     721:  00:8A68  86                  		ADD A,[HL] ;BUG IN PT3 - NEED WORD HERE.
     722:  00:8A69                      			   ;FIX IT IN NEXT VERSION?
     723:  00:8A69  77                  		LD [HL],A
     724:  00:8A6A  18 0E               		JR .CH_MIX
     725:  00:8A6C  1F                  .NO_ENSL:	RRA
     726:  00:8A6D  DD 86 03            		ADD A,[IX+CHNPRM_CrNsSl]
     727:  00:8A70  32 7F F0            		LD [AddToNs],A
     728:  00:8A73  CB 68               		BIT 5,B
     729:  00:8A75  28 03               		JR Z,.CH_MIX
     730:  00:8A77  DD 77 03            		LD [IX+CHNPRM_CrNsSl],A
     731:  00:8A7A  78                  .CH_MIX:	LD A,B
     732:  00:8A7B  1F                  		RRA
     733:  00:8A7C  E6 48               		AND $48
     734:  00:8A7E  21 47 F1            .CH_EXIT:	LD HL,AYREGS+AR_Mixer
     735:  00:8A81  B6                  		OR [HL]
     736:  00:8A82  0F                  		RRCA
     737:  00:8A83  77                  		LD [HL],A
     738:  00:8A84  E1                  		POP HL
     739:  00:8A85  AF                  		XOR A
     740:  00:8A86  DD B6 0A            		OR [IX+CHNPRM_COnOff]
     741:  00:8A89  C8                  		RET Z
     742:  00:8A8A  DD 35 0A            		DEC [IX+CHNPRM_COnOff]
     743:  00:8A8D  C0                  		RET NZ
     744:  00:8A8E  DD AE 15            		XOR [IX+CHNPRM_Flags]
     745:  00:8A91  DD 77 15            		LD [IX+CHNPRM_Flags],A
     746:  00:8A94  1F                  		RRA
     747:  00:8A95  DD 7E 0B            		LD A,[IX+CHNPRM_OnOffD]
     748:  00:8A98  38 03               		JR C,.CH_ONDL
     749:  00:8A9A  DD 7E 0C            		LD A,[IX+CHNPRM_OffOnD]
     750:  00:8A9D  DD 77 0A            .CH_ONDL:	LD [IX+CHNPRM_COnOff],A
     751:  00:8AA0  C9                  		RET
     752:  00:8AA1                      
     753:  00:8AA1  AF                  PT3_PLAY:	XOR A
     754:  00:8AA2  32 1D F0            		LD [PT3_AddToEn],A
     755:  00:8AA5  32 47 F1            		LD [AYREGS+AR_Mixer],A
     756:  00:8AA8  3D                  		DEC A
     757:  00:8AA9  32 4D F1            		LD [AYREGS+AR_EnvTp],A
     758:  00:8AAC  21 7A F0            		LD HL,DelyCnt
     759:  00:8AAF  35                  		DEC [HL]
     760:  00:8AB0  C2 37 8B            		JP NZ,.PL2
     761:  00:8AB3  21 3E F0            		LD HL,ChanA+CHNPRM_NtSkCn
     762:  00:8AB6  35                  		DEC [HL]
     763:  00:8AB7  20 4E               		JR NZ,.PL1B
     764:  00:8AB9  ED 4B 12 F0         		LD BC,[PT3_AdInPtA]
     765:  00:8ABD  0A                  		LD A,[BC]
     766:  00:8ABE  A7                  		AND A
     767:  00:8ABF  20 3B               		JR NZ,.PL1A
     768:  00:8AC1  57                  		LD D,A
     769:  00:8AC2  32 7E F0            		LD [Ns_Base],A
     770:  00:8AC5  2A 03 F0            		LD HL,[PT3_CrPsPtr]
     771:  00:8AC8  23                  		INC HL
     772:  00:8AC9  7E                  		LD A,[HL]
     773:  00:8ACA  3C                  		INC A
     774:  00:8ACB  20 08               		JR NZ,.PLNLP
     775:  00:8ACD  CD 37 86            		CALL CHECKLP
     776:  00:8AD0  2A 18 F0            		LD HL,[PT3_LPosPtr]
     777:  00:8AD3  7E                  		LD A,[HL]
     778:  00:8AD4  3C                  		INC A
     779:  00:8AD5  22 03 F0            .PLNLP:	LD [PT3_CrPsPtr],HL
     780:  00:8AD8  3D                  		DEC A
     781:  00:8AD9  87                  		ADD A,A
     782:  00:8ADA  5F                  		LD E,A
     783:  00:8ADB  CB 12               		RL D
     784:  00:8ADD  2A 1A F0            		LD HL,[PT3_PatsPtr]
     785:  00:8AE0  19                  		ADD HL,DE
     786:  00:8AE1  ED 5B 01 F0         		LD DE,[PT3_MODADDR]
     787:  00:8AE5  ED 73 0D F0         		LD [PT3_PSP],SP
     788:  00:8AE9  F9                  		LD SP,HL
     789:  00:8AEA  E1                  		POP HL
     790:  00:8AEB  19                  		ADD HL,DE
     791:  00:8AEC  44                  		LD B,H
     792:  00:8AED  4D                  		LD C,L
     793:  00:8AEE  E1                  		POP HL
     794:  00:8AEF  19                  		ADD HL,DE
     795:  00:8AF0  22 14 F0            		LD [PT3_AdInPtB],HL
     796:  00:8AF3  E1                  		POP HL
     797:  00:8AF4  19                  		ADD HL,DE
     798:  00:8AF5  22 16 F0            		LD [PT3_AdInPtC],HL
     799:  00:8AF8  ED 7B 0D F0         		LD SP,[PT3_PSP]
     800:  00:8AFC                      
     801:  00:8AFC  DD 21 2F F0         .PL1A:		LD IX,ChanA+12
     802:  00:8B00  CD DF 87            		CALL PTDECOD
     803:  00:8B03  ED 43 12 F0         		LD [PT3_AdInPtA],BC
     804:  00:8B07                      
     805:  00:8B07  21 5B F0            .PL1B:		LD HL,ChanB+CHNPRM_NtSkCn
     806:  00:8B0A  35                  		DEC [HL]
     807:  00:8B0B  20 0F               		JR NZ,.PL1C
     808:  00:8B0D  DD 21 4C F0         		LD IX,ChanB+12
     809:  00:8B11  ED 4B 14 F0         		LD BC,[PT3_AdInPtB]
     810:  00:8B15  CD DF 87            		CALL PTDECOD
     811:  00:8B18  ED 43 14 F0         		LD [PT3_AdInPtB],BC
     812:  00:8B1C                      
     813:  00:8B1C  21 78 F0            .PL1C:		LD HL,ChanC+CHNPRM_NtSkCn
     814:  00:8B1F  35                  		DEC [HL]
     815:  00:8B20  20 0F               		JR NZ,.PL1D
     816:  00:8B22  DD 21 69 F0         		LD IX,ChanC+12
     817:  00:8B26  ED 4B 16 F0         		LD BC,[PT3_AdInPtC]
     818:  00:8B2A  CD DF 87            		CALL PTDECOD
     819:  00:8B2D  ED 43 16 F0         		LD [PT3_AdInPtC],BC
     820:  00:8B31                      
     821:  00:8B31  3A 1C F0            .PL1D:		LD A,[PT3_Delay]
     822:  00:8B34  32 7A F0            		LD [DelyCnt],A
     823:  00:8B37                      
     824:  00:8B37  DD 21 23 F0         .PL2:		LD IX,ChanA
     825:  00:8B3B  2A 40 F1            		LD HL,[AYREGS+AR_TonA]
     826:  00:8B3E  CD 4F 89            		CALL CHREGS
     827:  00:8B41  22 40 F1            		LD [AYREGS+AR_TonA],HL
     828:  00:8B44  3A 4A F1            		LD A,[AYREGS+AR_AmplC]
     829:  00:8B47  32 48 F1            		LD [AYREGS+AR_AmplA],A
     830:  00:8B4A  DD 21 40 F0         		LD IX,ChanB
     831:  00:8B4E  2A 42 F1            		LD HL,[AYREGS+AR_TonB]
     832:  00:8B51  CD 4F 89            		CALL CHREGS
     833:  00:8B54  22 42 F1            		LD [AYREGS+AR_TonB],HL
     834:  00:8B57  3A 4A F1            		LD A,[AYREGS+AR_AmplC]
     835:  00:8B5A  32 49 F1            		LD [AYREGS+AR_AmplB],A
     836:  00:8B5D  DD 21 5D F0         		LD IX,ChanC
     837:  00:8B61  2A 44 F1            		LD HL,[AYREGS+AR_TonC]
     838:  00:8B64  CD 4F 89            		CALL CHREGS
     839:  00:8B67  22 44 F1            		LD [AYREGS+AR_TonC],HL
     840:  00:8B6A                      
     841:  00:8B6A  2A 7E F0            		LD HL,[Ns_Base_AddToNs]
     842:  00:8B6D  7C                  		LD A,H
     843:  00:8B6E  85                  		ADD A,L
     844:  00:8B6F  32 46 F1            		LD [AYREGS+AR_Noise],A
     845:  00:8B72                      
     846:  00:8B72  3A 1D F0            		LD A,[PT3_AddToEn]
     847:  00:8B75  5F                  		LD E,A
     848:  00:8B76  87                  		ADD A,A
     849:  00:8B77  9F                  		SBC A,A
     850:  00:8B78  57                  		LD D,A
     851:  00:8B79  2A 4E F1            		LD HL,[EnvBase]
     852:  00:8B7C  19                  		ADD HL,DE
     853:  00:8B7D  ED 5B 7B F0         		LD DE,[CurESld]
     854:  00:8B81  19                  		ADD HL,DE
     855:  00:8B82  22 4B F1            		LD [AYREGS+AR_Env],HL
     856:  00:8B85                      
     857:  00:8B85  AF                  		XOR A
     858:  00:8B86  21 7D F0            		LD HL,CurEDel
     859:  00:8B89  B6                  		OR [HL]
     860:  00:8B8A  C8                  		RET Z
     861:  00:8B8B  35                  		DEC [HL]
     862:  00:8B8C  C0                  		RET NZ
     863:  00:8B8D  3A 1E F0            		LD A,[PT3_Env_Del]
     864:  00:8B90  77                  		LD [HL],A
     865:  00:8B91  2A 1F F0            		LD HL,[PT3_ESldAdd]
     866:  00:8B94  19                  		ADD HL,DE
     867:  00:8B95  22 7B F0            		LD [CurESld],HL
     868:  00:8B98  C9                  		RET
     869:  00:8B99                      
     870:  00:8B99  AF                  PT3_ROUT:	XOR A
     871:  00:8B9A                      	
     872:  00:8B9A                      ROUT_A0:	; --- FIXES BITS 6 AND 7 OF MIXER ---
     873:  00:8B9A  21 47 F1            		LD	HL,AYREGS+AR_Mixer
     874:  00:8B9D  CB FE               		set	7,[hl]
     875:  00:8B9F  CB B6               		res	6,[hl]
     876:  00:8BA1                      
     877:  00:8BA1  0E A0               		LD C,$A0
     878:  00:8BA3  21 40 F1            		LD HL,AYREGS
     879:  00:8BA6  ED 79               .LOUT:		OUT [C],A
     880:  00:8BA8  0C                  		INC C
     881:  00:8BA9  ED A3               		OUTI 
     882:  00:8BAB  0D                  		DEC C
     883:  00:8BAC  3C                  		INC A
     884:  00:8BAD  FE 0D               		CP 13
     885:  00:8BAF  20 F5               		JR NZ,.LOUT
     886:  00:8BB1  ED 79               		OUT [C],A
     887:  00:8BB3  7E                  		LD A,[HL]
     888:  00:8BB4  A7                  		AND A
     889:  00:8BB5  F8                  		RET M
     890:  00:8BB6  0C                  		INC C
     891:  00:8BB7  ED 79               		OUT [C],A
     892:  00:8BB9  C9                  		RET
     893:  00:8BBA                      
     894:  00:8BBA  64                  NT_DATA:	db (T_NEW_0-T1_)*2
     895:  00:8BBB  2A                  		db TCNEW_0-T_
     896:  00:8BBC  65                  		db (T_OLD_0-T1_)*2+1
     897:  00:8BBD  00                  		db TCOLD_0-T_
     898:  00:8BBE  01                  		db (T_NEW_1-T1_)*2+1
     899:  00:8BBF  0C                  		db TCNEW_1-T_
     900:  00:8BC0  01                  		db (T_OLD_1-T1_)*2+1
     901:  00:8BC1  0C                  		db TCOLD_1-T_
     902:  00:8BC2  94                  		db (T_NEW_2-T1_)*2
     903:  00:8BC3  35                  		db TCNEW_2-T_
     904:  00:8BC4  30                  		db (T_OLD_2-T1_)*2
     905:  00:8BC5  0E                  		db TCOLD_2-T_
     906:  00:8BC6  60                  		db (T_NEW_3-T1_)*2
     907:  00:8BC7  20                  		db TCNEW_3-T_
     908:  00:8BC8  60                  		db (T_OLD_3-T1_)*2
     909:  00:8BC9  21                  		db TCOLD_3-T_
     910:  00:8BCA                      
     911:  00:8BCA                      T_:
     912:  00:8BCA                      
     913:  00:8BCA                      TCOLD_0:	db $00+1,$04+1,$08+1,$0A+1,$0C+1,$0E+1,$12+1,$14+1
     913:  00:8BCA  01 05 09 0B 0D 0F 13 15 
     914:  00:8BD2  19 25 3D 00         		db $18+1,$24+1,$3C+1,0
     915:  00:8BD6                      TCNEW_1:	
     916:  00:8BD6  5D 00               TCOLD_1:	db $5C+1,0
     917:  00:8BD8                      TCOLD_2:	db $30+1,$36+1,$4C+1,$52+1,$5E+1,$70+1,$82,$8C,$9C
     917:  00:8BD8  31 37 4D 53 5F 71 82 8C 9C 
     918:  00:8BE1                      		db $9E,$A0,$A6,$A8,$AA,$AC,$AE,$AE,0
     918:  00:8BE1  9E A0 A6 A8 AA AC AE AE 00 
     919:  00:8BEA  57                  TCNEW_3:	db $56+1
     920:  00:8BEB                      TCOLD_3:	db $1E+1,$22+1,$24+1,$28+1,$2C+1,$2E+1,$32+1,$BE+1,0
     920:  00:8BEB  1F 23 25 29 2D 2F 33 BF 00 
     921:  00:8BF4                      TCNEW_0:	db $1C+1,$20+1,$22+1,$26+1,$2A+1,$2C+1,$30+1,$54+1
     921:  00:8BF4  1D 21 23 27 2B 2D 31 55 
     922:  00:8BFC  BD BF 00            		db $BC+1,$BE+1,0
     923:  00:8BFF                      TCNEW_2:	db $1A+1,$20+1,$24+1,$28+1,$2A+1,$3A+1,$4C+1,$5E+1
     923:  00:8BFF  1B 21 25 29 2B 3B 4D 5F 
     924:  00:8C07  BB BD BF            		db $BA+1,$BC+1,$BE+1
     925:  00:8C0A                      
     926:  00:8C0A  00 01 00 90         EMPTYSAMORN: 	db 0,1,0,$90 ;delete $90 if you don't need default sample
     927:  00:8C0E                      
     928:  00:8C0E                      T_PACK:		; First 12 values of tone tables (packed)
     929:  00:8C0E  0D                  		db ($06EC*2)/256
     930:  00:8C0F  D8                  		db #d8
     931:  00:8C10  69                  		db $0755-$06EC
     932:  00:8C11  70                  		db $07C5-$0755
     933:  00:8C12  76                  		db $083B-$07C5
     934:  00:8C13  7D                  		db $08B8-$083B
     935:  00:8C14  85                  		db $093D-$08B8
     936:  00:8C15  8D                  		db $09CA-$093D
     937:  00:8C16  95                  		db $0A5F-$09CA
     938:  00:8C17  9D                  		db $0AFC-$0A5F
     939:  00:8C18  A8                  		db $0BA4-$0AFC
     940:  00:8C19  B1                  		db $0C55-$0BA4
     941:  00:8C1A  BB                  		db $0D10-$0C55
     942:  00:8C1B  0C                  		db ($066D*2)/256
     943:  00:8C1C  DA                  		db #da
     944:  00:8C1D  62                  		db $06CF-$066D
     945:  00:8C1E  68                  		db $0737-$06CF
     946:  00:8C1F  6D                  		db $07A4-$0737
     947:  00:8C20  75                  		db $0819-$07A4
     948:  00:8C21  7B                  		db $0894-$0819
     949:  00:8C22  83                  		db $0917-$0894
     950:  00:8C23  8A                  		db $09A1-$0917
     951:  00:8C24  92                  		db $0A33-$09A1
     952:  00:8C25  9C                  		db $0ACF-$0A33
     953:  00:8C26  A4                  		db $0B73-$0ACF
     954:  00:8C27  AF                  		db $0C22-$0B73
     955:  00:8C28  B8                  		db $0CDA-$0C22
     956:  00:8C29  0E                  		db ($0704*2)/256
     957:  00:8C2A  08                  		db #08
     958:  00:8C2B  6A                  		db $076E-$0704
     959:  00:8C2C  72                  		db $07E0-$076E
     960:  00:8C2D  78                  		db $0858-$07E0
     961:  00:8C2E  7E                  		db $08D6-$0858
     962:  00:8C2F  86                  		db $095C-$08D6
     963:  00:8C30  90                  		db $09EC-$095C
     964:  00:8C31  96                  		db $0A82-$09EC
     965:  00:8C32  A0                  		db $0B22-$0A82
     966:  00:8C33  AA                  		db $0BCC-$0B22
     967:  00:8C34  B4                  		db $0C80-$0BCC
     968:  00:8C35  BE                  		db $0D3E-$0C80
     969:  00:8C36  0F                  		db ($07E0*2)/256
     970:  00:8C37  C0                  		db #c0
     971:  00:8C38  78                  		db $0858-$07E0
     972:  00:8C39  88                  		db $08E0-$0858
     973:  00:8C3A  80                  		db $0960-$08E0
     974:  00:8C3B  90                  		db $09F0-$0960
     975:  00:8C3C  98                  		db $0A88-$09F0
     976:  00:8C3D  A0                  		db $0B28-$0A88
     977:  00:8C3E  B0                  		db $0BD8-$0B28
     978:  00:8C3F  A8                  		db $0C80-$0BD8
     979:  00:8C40  E0                  		db $0D60-$0C80
     980:  00:8C41  B0                  		db $0E10-$0D60
     981:  00:8C42  E8                  		db $0EF8-$0E10
      61.  00:8C43                      	include "ayFX-ROM_sjasm.asm"
       1:  00:8C43                      		; --- ayFX REPLAYER v1.31 ---
       2:  00:8C43                      
       3:  00:8C43                      		; --- v1.31	Fixed bug on previous version, only PSG channel C worked
       4:  00:8C43                      		; --- v1.3	Fixed volume and Relative volume versions on the same file, conditional compilation
       5:  00:8C43                      		; ---		Support for dynamic or fixed channel allocation
       6:  00:8C43                      		; --- v1.2f/r	ayFX bank support
       7:  00:8C43                      		; --- v1.11f/r	If a frame volume is zero then no AYREGS update
       8:  00:8C43                      		; --- v1.1f/r	Fixed volume for all ayFX streams
       9:  00:8C43                      		; --- v1.1	Explicit priority (as suggested by AR)
      10:  00:8C43                      		; --- v1.0f	Bug fixed (error when using noise)
      11:  00:8C43                      		; --- v1.0	Initial release
      12:  00:8C43                      
      13:  00:8C43                      		; --- DEFINE AYFXRELATIVE AS 0 FOR FIXED VOLUME VERSION ---
      14:  00:8C43                      		; --- DEFINE AYFXRELATIVE AS 1 FOR RELATIVE VOLUME VERSION ---
      15:  00:8C43  (00:0000)           AYFXRELATIVE equ 0
      16:  00:8C43                      
      17:  00:8C43                      ayFX_SETUP:	; ---          ayFX replayer setup          ---
      18:  00:8C43                      		; --- INPUT: HL -> pointer to the ayFX bank ---
      19:  00:8C43  22 41 F2            		ld	[ayFX_BANK],hl			; Current ayFX bank
      20:  00:8C46  3E 01               		ld	a,1				; a:=0
      21:  00:8C48  32 40 F2            		ld	[ayFX_MODE],a			; Initial mode: fixed channel
      22:  00:8C4B  3C                  		inc	a				; Starting channel (=1)
      23:  00:8C4C  32 4A F2            		ld	[ayFX_CHANNEL],a		; Updated
      24:  00:8C4F                      ayFX_END:	; --- End of an ayFX stream ---
      25:  00:8C4F  3E FF               		ld	a,255				; Lowest ayFX priority
      26:  00:8C51  32 43 F2            		ld	[ayFX_PRIORITY],a		; Priority saved (not playing ayFX stream)
      27:  00:8C54  C9                  		ret					; Return
      28:  00:8C55                      
      29:  00:8C55                      ayFX_INIT:	; ---     INIT A NEW ayFX STREAM     ---
      30:  00:8C55                      		; --- INPUT: A -> sound to be played ---
      31:  00:8C55                      		; ---        C -> sound priority     ---
      32:  00:8C55  C5                  		push	bc				; Store bc in stack
      33:  00:8C56  D5                  		push	de				; Store de in stack
      34:  00:8C57  E5                  		push	hl				; Store hl in stack
      35:  00:8C58                      		; --- Check if the index is in the bank ---
      36:  00:8C58  47                  		ld	b,a				; b:=a (new ayFX stream index)
      37:  00:8C59  2A 41 F2            		ld	hl,[ayFX_BANK]			; Current ayFX BANK
      38:  00:8C5C  7E                  		ld	a,[hl]				; Number of samples in the bank
      39:  00:8C5D  B7                  		or	a				; If zero (means 256 samples)...
      40:  00:8C5E  28 06               		jr	z,.CHECK_PRI			; ...goto .CHECK_PRI
      41:  00:8C60                      		; The bank has less than 256 samples
      42:  00:8C60  78                  		ld	a,b				; a:=b (new ayFX stream index)
      43:  00:8C61  BE                  		cp	[hl]				; If new index is not in the bank...
      44:  00:8C62  3E 02               		ld	a,2				; a:=2 (error 2: Sample not in the bank)
      45:  00:8C64  30 21               		jr	nc,.INIT_END			; ...we can't init it
      46:  00:8C66                      .CHECK_PRI:	; --- Check if the new priority is lower than the current one ---
      47:  00:8C66                      		; ---   Remember: 0 = highest priority, 15 = lowest priority  ---
      48:  00:8C66  78                  		ld	a,b				; a:=b (new ayFX stream index)
      49:  00:8C67  3A 43 F2            		ld	a,[ayFX_PRIORITY]		; a:=Current ayFX stream priority
      50:  00:8C6A  B9                  		cp	c				; If new ayFX stream priority is lower than current one...
      51:  00:8C6B  3E 01               		ld	a,1				; a:=1 (error 1: A sample with higher priority is being played)
      52:  00:8C6D  38 18               		jr	c,.INIT_END			; ...we don't start the new ayFX stream
      53:  00:8C6F                      		; --- Set new priority ---
      54:  00:8C6F  79                  		ld	a,c				; a:=New priority
      55:  00:8C70  E6 0F               		and	$0F				; We mask the priority
      56:  00:8C72  32 43 F2            		ld	[ayFX_PRIORITY],a		; new ayFX stream priority saved in RAM
      57:  00:8C75                      
      58:  00:8C75                      		IF ( AYFXRELATIVE == 1 )
      59:  00:8C75                    ~ 			; --- Volume adjust using PT3 volume table ---
      60:  00:8C75                    ~ 			ld	c,a				; c:=New priority (fixed)
      61:  00:8C75                    ~ 			ld	a,15				; a:=15
      62:  00:8C75                    ~ 			sub	c				; a:=15-New priority = relative volume
      63:  00:8C75                    ~ 			jr	z,.INIT_NOSOUND		; If priority is 15 -> no sound output (volume is zero)
      64:  00:8C75                    ~ 			add	a,a				; a:=a*2
      65:  00:8C75                    ~ 			add	a,a				; a:=a*4
      66:  00:8C75                    ~ 			add	a,a				; a:=a*8
      67:  00:8C75                    ~ 			add	a,a				; a:=a*16
      68:  00:8C75                    ~ 			ld	e,a				; e:=a
      69:  00:8C75                    ~ 			ld	d,0				; de:=a
      70:  00:8C75                    ~ 			ld	hl,VT_				; hl:=PT3 volume table
      71:  00:8C75                    ~ 			add	hl,de				; hl is a pointer to the relative volume table
      72:  00:8C75                    ~ 			ld	[ayFX_VT],hl			; Save pointer
      73:  00:8C75                    ~ 		ENDIF
      74:  00:8C75                      
      75:  00:8C75                      		; --- Calculate the pointer to the new ayFX stream ---
      76:  00:8C75  ED 5B 41 F2         		ld	de,[ayFX_BANK]			; de:=Current ayFX bank
      77:  00:8C79  13                  		inc	de				; de points to the increments table of the bank
      78:  00:8C7A  68                  		ld	l,b				; l:=b (new ayFX stream index)
      79:  00:8C7B  26 00               		ld	h,0				; hl:=b (new ayFX stream index)
      80:  00:8C7D  29                  		add	hl,hl				; hl:=hl*2
      81:  00:8C7E  19                  		add	hl,de				; hl:=hl+de (hl points to the correct increment)
      82:  00:8C7F  5E                  		ld	e,[hl]				; e:=lower byte of the increment
      83:  00:8C80  23                  		inc	hl				; hl points to the higher byte of the correct increment
      84:  00:8C81  56                  		ld	d,[hl]				; de:=increment
      85:  00:8C82  19                  		add	hl,de				; hl:=hl+de (hl points to the new ayFX stream)
      86:  00:8C83  22 44 F2            		ld	[ayFX_POINTER],hl		; Pointer saved in RAM
      87:  00:8C86  AF                  		xor	a				; a:=0 (no errors)
      88:  00:8C87  E1                  .INIT_END:	pop	hl				; Retrieve hl from stack
      89:  00:8C88  D1                  		pop	de				; Retrieve de from stack
      90:  00:8C89  C1                  		pop	bc				; Retrieve bc from stack
      91:  00:8C8A  C9                  		ret					; Return
      92:  00:8C8B                      
      93:  00:8C8B                      		IF ( AYFXRELATIVE == 1 )
      94:  00:8C8B                    ~ .INIT_NOSOUND:	; --- Init a sample with relative volume zero -> no sound output ---
      95:  00:8C8B                    ~ 			ld	a,255				; Lowest ayFX priority
      96:  00:8C8B                    ~ 			ld	[ayFX_PRIORITY],a		; Priority saved (not playing ayFX stream)
      97:  00:8C8B                    ~ 			jr	.INIT_END			; Jumps to .INIT_END
      98:  00:8C8B                    ~ 		ENDIF
      99:  00:8C8B                      
     100:  00:8C8B                      ayFX_PLAY:	; --- PLAY A FRAME OF AN ayFX STREAM ---
     101:  00:8C8B  3A 43 F2            		ld	a,[ayFX_PRIORITY]		; a:=Current ayFX stream priority
     102:  00:8C8E  B7                  		or	a				; If priority has bit 7 on...
     103:  00:8C8F  F8                  		ret	m				; ...return
     104:  00:8C90                      		; --- Calculate next ayFX channel (if needed) ---
     105:  00:8C90  3A 40 F2            		ld	a,[ayFX_MODE]			; ayFX mode
     106:  00:8C93  E6 01               		and	1				; If bit0=0 (fixed channel)...
     107:  00:8C95  28 08               		jr	z,.TAKECB			; ...skip channel changing
     108:  00:8C97  21 4A F2            		ld	hl,ayFX_CHANNEL			; Old ayFX playing channel
     109:  00:8C9A  35                  		dec	[hl]				; New ayFX playing channel
     110:  00:8C9B  20 02               		jr	nz,.TAKECB			; If not zero jump to .TAKECB
     111:  00:8C9D  36 03               		ld	[hl],3				; If zero -> set channel 3
     112:  00:8C9F                      .TAKECB:	; --- Extract control byte from stream ---
     113:  00:8C9F  2A 44 F2            		ld	hl,[ayFX_POINTER]		; Pointer to the current ayFX stream
     114:  00:8CA2  4E                  		ld	c,[hl]				; c:=Control byte
     115:  00:8CA3  23                  		inc	hl				; Increment pointer
     116:  00:8CA4                      		; --- Check if there's new tone on stream ---
     117:  00:8CA4  CB 69               		bit	5,c				; If bit 5 c is off...
     118:  00:8CA6  28 08               		jr	z,.CHECK_NN			; ...jump to .CHECK_NN (no new tone)
     119:  00:8CA8                      		; --- Extract new tone from stream ---
     120:  00:8CA8  5E                  		ld	e,[hl]				; e:=lower byte of new tone
     121:  00:8CA9  23                  		inc	hl				; Increment pointer
     122:  00:8CAA  56                  		ld	d,[hl]				; d:=higher byte of new tone
     123:  00:8CAB  23                  		inc	hl				; Increment pointer
     124:  00:8CAC  ED 53 46 F2         		ld	[ayFX_TONE],de			; ayFX tone updated
     125:  00:8CB0                      .CHECK_NN:	; --- Check if there's new noise on stream ---
     126:  00:8CB0  CB 71               		bit	6,c				; if bit 6 c is off...
     127:  00:8CB2  28 09               		jr	z,.SETPOINTER			; ...jump to .SETPOINTER (no new noise)
     128:  00:8CB4                      		; --- Extract new noise from stream ---
     129:  00:8CB4  7E                  		ld	a,[hl]				; a:=New noise
     130:  00:8CB5  23                  		inc	hl				; Increment pointer
     131:  00:8CB6  FE 20               		cp	$20				; If it's an illegal value of noise (used to mark end of stream)...
     132:  00:8CB8  28 95               		jr.	z,ayFX_END			; ...jump to ayFX_END
     133:  00:8CBA  32 48 F2            		ld	[ayFX_NOISE],a			; ayFX noise updated
     134:  00:8CBD                      .SETPOINTER:	; --- Update ayFX pointer ---
     135:  00:8CBD  22 44 F2            		ld	[ayFX_POINTER],hl		; Update ayFX stream pointer
     136:  00:8CC0                      		; --- Extract volume ---
     137:  00:8CC0  79                  		ld	a,c				; a:=Control byte
     138:  00:8CC1  E6 0F               		and	$0F				; lower nibble
     139:  00:8CC3                      
     140:  00:8CC3                      		IF ( AYFXRELATIVE == 1 )
     141:  00:8CC3                    ~ 			; --- Fix the volume using PT3 Volume Table ---
     142:  00:8CC3                    ~ 			ld	hl,[ayFX_VT]			; hl:=Pointer to relative volume table
     143:  00:8CC3                    ~ 			ld	e,a				; e:=a (ayFX volume)
     144:  00:8CC3                    ~ 			ld	d,0				; d:=0
     145:  00:8CC3                    ~ 			add	hl,de				; hl:=hl+de (hl points to the relative volume of this frame
     146:  00:8CC3                    ~ 			ld	a,[hl]				; a:=ayFX relative volume
     147:  00:8CC3                    ~ 			or	a				; If relative volume is zero...
     148:  00:8CC3                    ~ 		ENDIF
     149:  00:8CC3                      
     150:  00:8CC3  32 49 F2            		ld	[ayFX_VOLUME],a			; ayFX volume updated
     151:  00:8CC6  C8                  		ret	z				; ...return (don't copy ayFX values in to AYREGS)
     152:  00:8CC7                      		; -------------------------------------
     153:  00:8CC7                      		; --- COPY ayFX VALUES IN TO AYREGS ---
     154:  00:8CC7                      		; -------------------------------------
     155:  00:8CC7                      		; --- Set noise channel ---
     156:  00:8CC7  CB 79               		bit	7,c				; If noise is off...
     157:  00:8CC9  20 06               		jr	nz,.SETMASKS			; ...jump to .SETMASKS
     158:  00:8CCB  3A 48 F2            		ld	a,[ayFX_NOISE]			; ayFX noise value
     159:  00:8CCE  32 46 F1            		ld	[AYREGS+6],a			; copied in to AYREGS (noise channel)
     160:  00:8CD1                      .SETMASKS:	; --- Set mixer masks ---
     161:  00:8CD1  79                  		ld	a,c				; a:=Control byte
     162:  00:8CD2  E6 90               		and	$90				; Only bits 7 and 4 (noise and tone mask for psg reg 7)
     163:  00:8CD4  FE 90               		cp	$90				; If no noise and no tone...
     164:  00:8CD6  C8                  		ret	z				; ...return (don't copy ayFX values in to AYREGS)
     165:  00:8CD7                      		; --- Copy ayFX values in to ARYREGS ---
     166:  00:8CD7  0F                  		rrca					; Rotate a to the right (1 TIME)
     167:  00:8CD8  0F                  		rrca					; Rotate a to the right (2 TIMES) (OR mask)
     168:  00:8CD9  16 DB               		ld	d,$DB				; d:=Mask for psg mixer (AND mask)
     169:  00:8CDB                      		; --- Dump to correct channel ---
     170:  00:8CDB  21 4A F2            		ld	hl,ayFX_CHANNEL			; Next ayFX playing channel
     171:  00:8CDE  46                  		ld	b,[hl]				; Channel counter
     172:  00:8CDF                      .CHK1:		; --- Check if playing channel was 1 ---
     173:  00:8CDF  10 0D               		djnz	.CHK2				; Decrement and jump if channel was not 1
     174:  00:8CE1                      .PLAY_C:	; --- Play ayFX stream on channel C ---
     175:  00:8CE1  CD 10 8D            		call	.SETMIXER			; Set PSG mixer value (returning a=ayFX volume and hl=ayFX tone)
     176:  00:8CE4  32 4A F1            		ld	[AYREGS+10],a			; Volume copied in to AYREGS (channel C volume)
     177:  00:8CE7  CB 51               		bit	2,c				; If tone is off...
     178:  00:8CE9  C0                  		ret	nz				; ...return
     179:  00:8CEA  22 44 F1            		ld	[AYREGS+4],hl			; copied in to AYREGS (channel C tone)
     180:  00:8CED  C9                  		ret					; Return
     181:  00:8CEE                      .CHK2:		; --- Check if playing channel was 2 ---
     182:  00:8CEE  CB 0A               		rrc	d				; Rotate right AND mask
     183:  00:8CF0  0F                  		rrca					; Rotate right OR mask
     184:  00:8CF1  10 0D               		djnz	.CHK3				; Decrement and jump if channel was not 2
     185:  00:8CF3                      .PLAY_B:	; --- Play ayFX stream on channel B ---
     186:  00:8CF3  CD 10 8D            		call	.SETMIXER			; Set PSG mixer value (returning a=ayFX volume and hl=ayFX tone)
     187:  00:8CF6  32 49 F1            		ld	[AYREGS+9],a			; Volume copied in to AYREGS (channel B volume)
     188:  00:8CF9  CB 49               		bit	1,c				; If tone is off...
     189:  00:8CFB  C0                  		ret	nz				; ...return
     190:  00:8CFC  22 42 F1            		ld	[AYREGS+2],hl			; copied in to AYREGS (channel B tone)
     191:  00:8CFF  C9                  		ret					; Return
     192:  00:8D00                      .CHK3:		; --- Check if playing channel was 3 ---
     193:  00:8D00  CB 0A               		rrc	d				; Rotate right AND mask
     194:  00:8D02  0F                  		rrca					; Rotate right OR mask
     195:  00:8D03                      .PLAY_A:	; --- Play ayFX stream on channel A ---
     196:  00:8D03  CD 10 8D            		call	.SETMIXER			; Set PSG mixer value (returning a=ayFX volume and hl=ayFX tone)
     197:  00:8D06  32 48 F1            		ld	[AYREGS+8],a			; Volume copied in to AYREGS (channel A volume)
     198:  00:8D09  CB 41               		bit	0,c				; If tone is off...
     199:  00:8D0B  C0                  		ret	nz				; ...return
     200:  00:8D0C  22 40 F1            		ld	[AYREGS+0],hl			; copied in to AYREGS (channel A tone)
     201:  00:8D0F  C9                  		ret					; Return
     202:  00:8D10                      .SETMIXER:	; --- Set PSG mixer value ---
     203:  00:8D10  4F                  		ld	c,a				; c:=OR mask
     204:  00:8D11  3A 47 F1            		ld	a,[AYREGS+7]			; a:=PSG mixer value
     205:  00:8D14  A2                  		and	d				; AND mask
     206:  00:8D15  B1                  		or	c				; OR mask
     207:  00:8D16  32 47 F1            		ld	[AYREGS+7],a			; PSG mixer value updated
     208:  00:8D19  3A 49 F2            		ld	a,[ayFX_VOLUME]			; a:=ayFX volume value
     209:  00:8D1C  2A 46 F2            		ld	hl,[ayFX_TONE]			; ayFX tone value
     210:  00:8D1F  C9                  		ret					; Return
     211:  00:8D20                      
     212:  00:8D20                      		IF ( AYFXRELATIVE == 1 )
     213:  00:8D20                    ~ 			; --- UNCOMMENT THIS IF YOU DON'T USE THIS REPLAYER WITH PT3 REPLAYER ---
     214:  00:8D20                    ~ 		;VT_:	.INCBIN	"VT.BIN"
     215:  00:8D20                    ~ 			; --- UNCOMMENT THIS IF YOU DON'T USE THIS REPLAYER WITH PT3 REPLAYER ---
     216:  00:8D20                    ~ 		ENDIF
      62.  00:8D20                      	
      63.  00:8D20                      	
      64.  00:8D20                      
      65.  00:8D20                      ;;=====================================================
      66.  00:8D20                      ;;DEFINICIÓN DE CANTIONES Y EFECTOS DE SONIDO
      67.  00:8D20                      ;;=====================================================		
      68.  00:8D20                      song:
      69.  00:8D20  (0968)              	incbin "bloodytears_castlevania.99"
      70.  00:9688                      	
      71.  00:9688                      sfx_bank:
      72.  00:9688  (004B)              	incbin "demo.afb"
      73.  00:96D3                      
     119   00:96D3                      	
     120   00:96D3                      
     121   00:96D3                      ;;=====================================================
     122   00:96D3                      ;;DEFINICIÓN DE SUBRUTINAS DE FERNANDO PARA COMPRESIÓN Y SONIDO
     123   00:96D3                      ;;=====================================================
     124   00:96D3                      ;Este include lleva la rutina de descompresión de ROM/RAM a VRAM de pletter
     125   00:96D3                      ;Está adaptada de la original a sjasm
     126   00:96D3                      ;	HL = RAM/ROM source	; DE = VRAM destination
     127   00:96D3                      depack_VRAM:
     128   00:96D3                      	include "PL_VRAM_Depack_SJASM.asm"
       1.  00:96D3                      ;-----------------------------------------------------------
       2.  00:96D3                      ; Pletter v0.5b VRAM Depacker v1.1 - 16Kb version
       3.  00:96D3                      ; HL = RAM/ROM source ; DE = VRAM destination
       4.  00:96D3                      ;-----------------------------------------------------------
       5.  00:96D3  F3                  	di
       6.  00:96D4                      
       7.  00:96D4                      ; VRAM address setup
       8.  00:96D4  7B                  	ld	a,e
       9.  00:96D5  D3 99               	out	[099h],a
      10.  00:96D7  7A                  	ld	a,d
      11.  00:96D8  F6 40               	or	040h
      12.  00:96DA  D3 99               	out	[099h],a
      13.  00:96DC                      
      14.  00:96DC                      ; Initialization
      15.  00:96DC  7E                  	ld	a,[hl]
      16.  00:96DD  23                  	inc	hl
      17.  00:96DE  D9                  	exx
      18.  00:96DF  11 00 00            	ld	de,0
      19.  00:96E2  87                  	add	a,a
      20.  00:96E3  3C                  	inc	a
      21.  00:96E4  CB 13               	rl	e
      22.  00:96E6  87                  	add	a,a
      23.  00:96E7  CB 13               	rl	e
      24.  00:96E9  87                  	add	a,a
      25.  00:96EA  CB 13               	rl	e
      26.  00:96EC  CB 13               	rl	e
      27.  00:96EE  21 A5 97            	ld	hl,modes
      28.  00:96F1  19                  	add	hl,de
      29.  00:96F2  5E                  	ld	e,[hl]
      30.  00:96F3  DD 6B               	ld	ixl,e
      31.  00:96F5  23                  	inc	hl
      32.  00:96F6  5E                  	ld	e,[hl]
      33.  00:96F7  DD 63               	ld	ixh,e
      34.  00:96F9  1E 01               	ld	e,1
      35.  00:96FB  D9                  	exx
      36.  00:96FC  FD 21 05 97         	ld	iy,loop
      37.  00:9700                      
      38.  00:9700                      ; Main depack loop
      39.  00:9700  0E 98               literal:ld	c,098h
      40.  00:9702  ED A3               	outi
      41.  00:9704  13                  	inc	de
      42.  00:9705  87                  loop:	add	a,a
      43.  00:9706  CC 99 97              	call	z,getbit
      44.  00:9709  30 F5               	jr	nc,literal
      45.  00:970B                      
      46.  00:970B                      ; Compressed data
      47.  00:970B  D9                  	exx
      48.  00:970C  62                  	ld	h,d
      49.  00:970D  6B                  	ld	l,e
      50.  00:970E  87                  getlen: add	a,a
      51.  00:970F  CC 9D 97            	call	z,getbitexx
      52.  00:9712  30 1D               	jr	nc,lenok
      53.  00:9714  87                  lus:	add	a,a
      54.  00:9715  CC 9D 97            	call	z,getbitexx
      55.  00:9718  ED 6A               	adc	hl,hl
      56.  00:971A  D8                  	ret	c
      57.  00:971B  87                  	add	a,a
      58.  00:971C  CC 9D 97            	call	z,getbitexx
      59.  00:971F  30 10               	jr	nc,lenok
      60.  00:9721  87                  	add	a,a
      61.  00:9722  CC 9D 97            	call	z,getbitexx
      62.  00:9725  ED 6A               	adc	hl,hl
      63.  00:9727  DA A3 97            	jp	c,Depack_out
      64.  00:972A  87                  	add	a,a
      65.  00:972B  CC 9D 97            	call	z,getbitexx
      66.  00:972E  DA 14 97            	jp	c,lus
      67.  00:9731  23                  lenok:  inc	hl
      68.  00:9732  D9                  	exx
      69.  00:9733  4E                  	ld	c,[hl]
      70.  00:9734  23                  	inc	hl
      71.  00:9735  06 00               	ld	b,0
      72.  00:9737  CB 79               	bit	7,c
      73.  00:9739  CA 6C 97            	jp	z,offsok
      74.  00:973C  DD E9               	jp	ix
      75.  00:973E                      
      76.  00:973E  87                  mode7:  add	a,a
      77.  00:973F  CC 99 97              	call	z,getbit
      78.  00:9742  CB 10               	rl	b
      79.  00:9744  87                  mode6:	add	a,a
      80.  00:9745  CC 99 97              	call	z,getbit
      81.  00:9748  CB 10               	rl	b
      82.  00:974A  87                  mode5:  add	a,a
      83.  00:974B  CC 99 97              	call	z,getbit
      84.  00:974E  CB 10               	rl	b
      85.  00:9750  87                  mode4:  add	a,a
      86.  00:9751  CC 99 97              	call	z,getbit
      87.  00:9754  CB 10               	rl	b
      88.  00:9756  87                  mode3:  add	a,a
      89.  00:9757  CC 99 97              	call	z,getbit
      90.  00:975A  CB 10               	rl	b
      91.  00:975C  87                  mode2:	add	a,a
      92.  00:975D  CC 99 97              	call	z,getbit
      93.  00:9760  CB 10               	rl	b
      94.  00:9762  87                  	add	a,a
      95.  00:9763  CC 99 97              	call	z,getbit
      96.  00:9766  30 04               	jr	nc,offsok
      97.  00:9768  B7                  	or	a
      98.  00:9769  04                  	inc	b
      99.  00:976A  CB B9               	res	7,c
     100.  00:976C  03                  offsok: inc	bc
     101.  00:976D  E5                  	push	hl
     102.  00:976E  D9                  	exx
     103.  00:976F  E5                  	push	hl
     104.  00:9770  D9                  	exx
     105.  00:9771  6B                  	ld	l,e
     106.  00:9772  62                  	ld	h,d
     107.  00:9773  ED 42               	sbc	hl,bc
     108.  00:9775  C1                  	pop	bc
     109.  00:9776  F5                  	push	af
     110.  00:9777  7D                  .loop:	ld	a,l
     111.  00:9778  D3 99               	out	[099h],a
     112.  00:977A  7C                  	ld	a,h
     113.  00:977B  00                  	nop                     ; VDP timing
     114.  00:977C  D3 99               	out	[099h],a
     115.  00:977E  00                  	nop                     ; VDP timing
     116.  00:977F  DB 98               	in	a,[098h]
     117.  00:9781  08                  	ex	af,af'
     118.  00:9782  7B                  	ld	a,e
     119.  00:9783  00                  	nop			; VDP timing
     120.  00:9784  D3 99               	out	[099h],a
     121.  00:9786  7A                  	ld	a,d
     122.  00:9787  F6 40               	or	040h
     123.  00:9789  D3 99               	out	[099h],a
     124.  00:978B  08                  	ex	af,af'
     125.  00:978C  00                  	nop			; VDP timing
     126.  00:978D  D3 98               	out	[098h],a
     127.  00:978F  13                  	inc	de
     128.  00:9790  ED A1               	cpi
     129.  00:9792  EA 77 97            	jp	pe,.loop
     130.  00:9795  F1                  	pop	af
     131.  00:9796  E1                  	pop	hl
     132.  00:9797  FD E9               	jp	iy
     133.  00:9799                      
     134.  00:9799  7E                  getbit: ld	a,[hl]
     135.  00:979A  23                  	inc	hl
     136.  00:979B  17                  	rla
     137.  00:979C  C9                  	ret
     138.  00:979D                      
     139.  00:979D                      getbitexx:
     140.  00:979D  D9                  	exx
     141.  00:979E  7E                  	ld	a,[hl]
     142.  00:979F  23                  	inc	hl
     143.  00:97A0  D9                  	exx
     144.  00:97A1  17                  	rla
     145.  00:97A2  C9                  	ret
     146.  00:97A3                      
     147.  00:97A3                      ; Depacker exit
     148.  00:97A3                      Depack_out:
     149.  00:97A3  FB                  	ei
     150.  00:97A4  C9                  	ret
     151.  00:97A5                      
     152.  00:97A5                      modes:
     153.  00:97A5  6C 97               	dw	offsok
     154.  00:97A7  5C 97               	dw	mode2
     155.  00:97A9  56 97               	dw	mode3
     156.  00:97AB  50 97               	dw	mode4
     157.  00:97AD  4A 97               	dw	mode5
     158.  00:97AF  44 97               	dw	mode6
     159.  00:97B1  3E 97               	dw	mode7
     129   00:97B3                      
     130   00:97B3                      
     131   00:97B3                      	
     132   00:97B3                      ;;=====================================================
     133   00:97B3                      ;;DEFINICIÓN DE ESTRUCTURAS
     134   00:97B3                      ;;=====================================================		
     135   00:97B3                      	include "estructuras.asm"
       1.  00:97B3                      ;;=====================================================
       2.  00:97B3                      ;;DEFINICIÓN DE ESTRUCTURAS
       3.  00:97B3                      ;;=====================================================
       4.  00:97B3                      
       5.  00:97B3                      ;crear estructura
       6.  00:97B3                      
       7.  00:97B3                      	STRUCT ESTRUCTURA_PUNTOMIRA
       8.  00:97B3                    < posx			DB		100
       9.  00:97B3                    < posy			DB		100
      10.  00:97B3                    < escena			DB		0	;valores porsibles 0 (blanco+rojo en punto de mira) y NEG 0 (al revés)
      11.  00:97B3                    < velocidad		DB		0
      12.  00:97B3                    < boton2_pressed  DB		0
      13.  00:97B3                    < cadencia		DB		5	;nº de veces que se ejecutará el disparo antes de ejecutar un disparo real (porque cuando se pulsa la tecl dispara 3 ó 4 veces de rápido que va)
      14.  00:97B3                    < ; al final he decidido (ya que el punto de mira es el prota) que lo relacionado con el prota vaya en esta estructura
      15.  00:97B3                    < pm_aux1			DB		0	;para llegar a los 16 campos
      16.  00:97B3                    < pm_aux2			DB		0	;para llegar a los 16 campos
      17.  00:97B3                    < pm_aux3			DB		0	;para llegar a los 16 campos
      18.  00:97B3                    < pm_aux4			DB		0	;para llegar a los 16 campos
      19.  00:97B3                    < pm_aux5			DB		0	;para llegar a los 16 campos
      20.  00:97B3                    < pm_aux6			DB		0	;para llegar a los 16 campos
      21.  00:97B3                    < pm_aux7			DB		0	;para llegar a los 16 campos
      22.  00:97B3                    < pm_aux8			DB		0	;para llegar a los 16 campos
      23.  00:97B3                    < pm_aux9			DB		0	;para llegar a los 16 campos
      24.  00:97B3                    < pm_aux10		DB		0	;para llegar a los 16 campos
      25.  00:97B3                    < 	ENDSTRUCT;ESTRUCTURA_PUNTOMIRA
      26.  00:97B3                      
      27.  00:97B3                      	
      28.  00:97B3                      	STRUCT ESTRUCTURA_ENEMIGO
      29.  00:97B3                    < tipo				DB		0	;(0 serpiente por ejemplo) #FF muerto o no existe
      30.  00:97B3                    < posx				DB		5
      31.  00:97B3                    < posy				DB		50
      32.  00:97B3                    < color				DB		5
      33.  00:97B3                    < escena				DB		0
      34.  00:97B3                    < contador_siguiente_escena	DB	0
      35.  00:97B3                    < reset_contador		DB		0
      36.  00:97B3                    < dano				DB		0	;daño
      37.  00:97B3                    < energia				DB		0	;energía del enemigo... si llega a 0 => existe <- 0
      38.  00:97B3                    < ;indica el nº de sprite a mostrar y si está compuesto por uno o dos sprites y si están en horizontal o vertical
      39.  00:97B3                    < ver_hor				DB		0
      40.  00:97B3                    < manejador_dibujo 	DW		0
      41.  00:97B3                    < en_aux3				DB		0
      42.  00:97B3                    < en_aux4				DB		0
      43.  00:97B3                    < 	ENDSTRUCT;ESTRUCTURA_ENEMIGO
      44.  00:97B3                      	
      45.  00:97B3                      	STRUCT ESTRUCTURA_AYUDA		;vidas extra, plantas de curación de energía, reliquias	
      46.  00:97B3                    < activo				DB		0	;0 no activo <>0 activo 
      47.  00:97B3                    < tipo				DB		0	;ver constantes 
      48.  00:97B3                    < tipousado			DB		0	;es tipo + 4
      49.  00:97B3                    < postile				DB		0	;como tiene algo de aleatoriedad se guarda para dibujar los tiles de usado
      50.  00:97B3                    < posx				DB		0
      51.  00:97B3                    < posy				DB		0
      52.  00:97B3                    < sub_accion			DW		0	;subrutina que indica la acción si se dispara en el objeto
      53.  00:97B3                    < 	ENDSTRUCT;ESTRUCTURA_AYUDA
      54.  00:97B3                      
      55.  00:97B3                      
      56.  00:97B3                      
      57.  00:97B3                      
      58.  00:97B3                      
      59.  00:97B3                      
      60.  00:97B3                      
     136   00:97B3                      	
     137   00:97B3                      ;;=====================================================
     138   00:97B3                      ;;DEFINICIÓN DE VARIABLES
     139   00:97B3                      ;;=====================================================		
     140   00:97B3                      	include "sprites.asm"
       1.  00:97B3                      ;;=====================================================
       2.  00:97B3                      ;;DEFINICIÓN DE SPRITES
       3.  00:97B3                      ;;=====================================================	
       4.  00:97B3                      
       5.  00:97B3                      
       6.  00:97B3                      ;; NOTA:
       7.  00:97B3                      ;~ sprite_reliquia_oracion: on/off
       8.  00:97B3                      ;~ sprite_reliquia_cruz: on/off
       9.  00:97B3                      ;~ sprite_reliquia_agua: on/off
      10.  00:97B3                      ;~ sprite_peto: on/off
      11.  00:97B3                      ;~ sprite_planta: on/off
      12.  00:97B3                      ;~ sprite_vida_extra: on/off
      13.  00:97B3                      ;~ sprite_ballesta_mejorada: on/off
      14.  00:97B3                      
      15.  00:97B3                      ;~ iban a ser sprites pero por falta de recursos serán tiles
      16.  00:97B3                      
      17.  00:97B3                      
      18.  00:97B3                      sprites_pantantalla:
      19.  00:97B3                      
      20.  00:97B3                      ;; PARTE 1: SPRITES COMUNES
      21.  00:97B3                      
      22.  00:97B3                      sprites_comunes:
      23.  00:97B3                      sprite_punto_mira_1:	;color 8
      24.  00:97B3                      	db #FF,#FF,#C0,#C0,#C0,#C0,#C0,#C0
      24.  00:97B3  FF FF C0 C0 C0 C0 C0 C0 
      25.  00:97BB                      	db #C0,#C0,#C0,#C0,#C0,#C0,#FF,#FF
      25.  00:97BB  C0 C0 C0 C0 C0 C0 FF FF 
      26.  00:97C3                      	db #FF,#FF,#03,#03,#03,#03,#03,#03
      26.  00:97C3  FF FF 03 03 03 03 03 03 
      27.  00:97CB                      	db #03,#03,#03,#03,#03,#03,#FF,#FF
      27.  00:97CB  03 03 03 03 03 03 FF FF 
      28.  00:97D3                      	
      29.  00:97D3                      sprite_punto_mira_2: 	;color 15
      30.  00:97D3                      	db #00,#00,#00,#00,#0F,#0F,#0C,#0C
      30.  00:97D3  00 00 00 00 0F 0F 0C 0C 
      31.  00:97DB                      	db #0C,#0C,#0F,#0F,#00,#00,#00,#00
      31.  00:97DB  0C 0C 0F 0F 00 00 00 00 
      32.  00:97E3                      	db #00,#00,#00,#00,#F0,#F0,#30,#30
      32.  00:97E3  00 00 00 00 F0 F0 30 30 
      33.  00:97EB                      	db #30,#30,#F0,#F0,#00,#00,#00,#00
      33.  00:97EB  30 30 F0 F0 00 00 00 00 
      34.  00:97F3                      	
      35.  00:97F3                      sprite_punto_mira_1_mejorado:
      36.  00:97F3                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      36.  00:97F3  FF FF FF FF FF FF FF FF 
      37.  00:97FB                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      37.  00:97FB  FF FF FF FF FF FF FF FF 
      38.  00:9803                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      38.  00:9803  FF FF FF FF FF FF FF FF 
      39.  00:980B                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      39.  00:980B  FF FF FF FF FF FF FF FF 
      40.  00:9813                      
      41.  00:9813                      sprite_punto_mira_2_mejorado:
      42.  00:9813                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      42.  00:9813  FF FF FF FF FF FF FF FF 
      43.  00:981B                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      43.  00:981B  FF FF FF FF FF FF FF FF 
      44.  00:9823                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      44.  00:9823  FF FF FF FF FF FF FF FF 
      45.  00:982B                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      45.  00:982B  FF FF FF FF FF FF FF FF 
      46.  00:9833                      	
      47.  00:9833                      sprite_explosion_1:
      48.  00:9833                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      48.  00:9833  FF FF FF FF FF FF FF FF 
      49.  00:983B                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      49.  00:983B  FF FF FF FF FF FF FF FF 
      50.  00:9843                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      50.  00:9843  FF FF FF FF FF FF FF FF 
      51.  00:984B                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF	
      51.  00:984B  FF FF FF FF FF FF FF FF 
      52.  00:9853                      
      53.  00:9853                      sprite_explosion_2:
      54.  00:9853                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      54.  00:9853  FF FF FF FF FF FF FF FF 
      55.  00:985B                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      55.  00:985B  FF FF FF FF FF FF FF FF 
      56.  00:9863                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      56.  00:9863  FF FF FF FF FF FF FF FF 
      57.  00:986B                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF	
      57.  00:986B  FF FF FF FF FF FF FF FF 
      58.  00:9873                      fin_sprites_comunes:
      59.  00:9873                      
      60.  00:9873                      ;; PARTE 2: SPRITES NO COMUNES
      61.  00:9873                      
      62.  00:9873                      ;; ARAÑA
      63.  00:9873                      	
      64.  00:9873                      sprite_arana1_1:
      65.  00:9873                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      65.  00:9873  FF FF FF FF FF FF FF FF 
      66.  00:987B                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      66.  00:987B  FF FF FF FF FF FF FF FF 
      67.  00:9883                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      67.  00:9883  FF FF FF FF FF FF FF FF 
      68.  00:988B                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      68.  00:988B  FF FF FF FF FF FF FF FF 
      69.  00:9893                      	
      70.  00:9893                      sprite_arana1_2:
      71.  00:9893                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      71.  00:9893  FF FF FF FF FF FF FF FF 
      72.  00:989B                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      72.  00:989B  FF FF FF FF FF FF FF FF 
      73.  00:98A3                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      73.  00:98A3  FF FF FF FF FF FF FF FF 
      74.  00:98AB                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      74.  00:98AB  FF FF FF FF FF FF FF FF 
      75.  00:98B3                      
      76.  00:98B3                      ;; MURCIELAGO
      77.  00:98B3                      	
      78.  00:98B3                      sprite_murcielago1_1:
      79.  00:98B3                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      79.  00:98B3  FF FF FF FF FF FF FF FF 
      80.  00:98BB                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      80.  00:98BB  FF FF FF FF FF FF FF FF 
      81.  00:98C3                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      81.  00:98C3  FF FF FF FF FF FF FF FF 
      82.  00:98CB                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      82.  00:98CB  FF FF FF FF FF FF FF FF 
      83.  00:98D3                      	
      84.  00:98D3                      sprite_murcielago1_2:
      85.  00:98D3                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      85.  00:98D3  FF FF FF FF FF FF FF FF 
      86.  00:98DB                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      86.  00:98DB  FF FF FF FF FF FF FF FF 
      87.  00:98E3                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      87.  00:98E3  FF FF FF FF FF FF FF FF 
      88.  00:98EB                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF	
      88.  00:98EB  FF FF FF FF FF FF FF FF 
      89.  00:98F3                      
      90.  00:98F3                      ;; SERPIENTE
      91.  00:98F3                      
      92.  00:98F3                      sprite_serpiente1_1:
      93.  00:98F3                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      93.  00:98F3  FF FF FF FF FF FF FF FF 
      94.  00:98FB                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      94.  00:98FB  FF FF FF FF FF FF FF FF 
      95.  00:9903                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      95.  00:9903  FF FF FF FF FF FF FF FF 
      96.  00:990B                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      96.  00:990B  FF FF FF FF FF FF FF FF 
      97.  00:9913                      	
      98.  00:9913                      sprite_serpiente1_2:
      99.  00:9913                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      99.  00:9913  FF FF FF FF FF FF FF FF 
     100.  00:991B                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     100.  00:991B  FF FF FF FF FF FF FF FF 
     101.  00:9923                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     101.  00:9923  FF FF FF FF FF FF FF FF 
     102.  00:992B                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     102.  00:992B  FF FF FF FF FF FF FF FF 
     103.  00:9933                      	
     104.  00:9933                      sprite_serpiente2_1:
     105.  00:9933                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     105.  00:9933  FF FF FF FF FF FF FF FF 
     106.  00:993B                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     106.  00:993B  FF FF FF FF FF FF FF FF 
     107.  00:9943                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     107.  00:9943  FF FF FF FF FF FF FF FF 
     108.  00:994B                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     108.  00:994B  FF FF FF FF FF FF FF FF 
     109.  00:9953                      	
     110.  00:9953                      sprite_serpiente2_2:
     111.  00:9953                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     111.  00:9953  FF FF FF FF FF FF FF FF 
     112.  00:995B                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     112.  00:995B  FF FF FF FF FF FF FF FF 
     113.  00:9963                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     113.  00:9963  FF FF FF FF FF FF FF FF 
     114.  00:996B                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     114.  00:996B  FF FF FF FF FF FF FF FF 
     115.  00:9973                      
     116.  00:9973                      ;; ZOMBI
     117.  00:9973                      
     118.  00:9973                      sprite_zombi1_1_1:
     119.  00:9973                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     119.  00:9973  FF FF FF FF FF FF FF FF 
     120.  00:997B                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     120.  00:997B  FF FF FF FF FF FF FF FF 
     121.  00:9983                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     121.  00:9983  FF FF FF FF FF FF FF FF 
     122.  00:998B                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     122.  00:998B  FF FF FF FF FF FF FF FF 
     123.  00:9993                      
     124.  00:9993                      sprite_zombi1_2_1:
     125.  00:9993                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     125.  00:9993  FF FF FF FF FF FF FF FF 
     126.  00:999B                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     126.  00:999B  FF FF FF FF FF FF FF FF 
     127.  00:99A3                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     127.  00:99A3  FF FF FF FF FF FF FF FF 
     128.  00:99AB                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     128.  00:99AB  FF FF FF FF FF FF FF FF 
     129.  00:99B3                      	
     130.  00:99B3                      sprite_zombi1_3_1:
     131.  00:99B3                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     131.  00:99B3  FF FF FF FF FF FF FF FF 
     132.  00:99BB                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     132.  00:99BB  FF FF FF FF FF FF FF FF 
     133.  00:99C3                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     133.  00:99C3  FF FF FF FF FF FF FF FF 
     134.  00:99CB                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     134.  00:99CB  FF FF FF FF FF FF FF FF 
     135.  00:99D3                      	
     136.  00:99D3                      sprite_zombi1_4_1:
     137.  00:99D3                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     137.  00:99D3  FF FF FF FF FF FF FF FF 
     138.  00:99DB                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     138.  00:99DB  FF FF FF FF FF FF FF FF 
     139.  00:99E3                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     139.  00:99E3  FF FF FF FF FF FF FF FF 
     140.  00:99EB                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     140.  00:99EB  FF FF FF FF FF FF FF FF 
     141.  00:99F3                      	
     142.  00:99F3                      sprite_zombi1_1_2:
     143.  00:99F3                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     143.  00:99F3  FF FF FF FF FF FF FF FF 
     144.  00:99FB                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     144.  00:99FB  FF FF FF FF FF FF FF FF 
     145.  00:9A03                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     145.  00:9A03  FF FF FF FF FF FF FF FF 
     146.  00:9A0B                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     146.  00:9A0B  FF FF FF FF FF FF FF FF 
     147.  00:9A13                      
     148.  00:9A13                      sprite_zombi1_2_2:
     149.  00:9A13                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     149.  00:9A13  FF FF FF FF FF FF FF FF 
     150.  00:9A1B                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     150.  00:9A1B  FF FF FF FF FF FF FF FF 
     151.  00:9A23                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     151.  00:9A23  FF FF FF FF FF FF FF FF 
     152.  00:9A2B                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     152.  00:9A2B  FF FF FF FF FF FF FF FF 
     153.  00:9A33                      	
     154.  00:9A33                      sprite_zombi1_3_2:
     155.  00:9A33                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     155.  00:9A33  FF FF FF FF FF FF FF FF 
     156.  00:9A3B                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     156.  00:9A3B  FF FF FF FF FF FF FF FF 
     157.  00:9A43                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     157.  00:9A43  FF FF FF FF FF FF FF FF 
     158.  00:9A4B                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     158.  00:9A4B  FF FF FF FF FF FF FF FF 
     159.  00:9A53                      	
     160.  00:9A53                      sprite_zombi1_4_2:
     161.  00:9A53                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     161.  00:9A53  FF FF FF FF FF FF FF FF 
     162.  00:9A5B                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     162.  00:9A5B  FF FF FF FF FF FF FF FF 
     163.  00:9A63                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     163.  00:9A63  FF FF FF FF FF FF FF FF 
     164.  00:9A6B                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     164.  00:9A6B  FF FF FF FF FF FF FF FF 
     165.  00:9A73                      	
     166.  00:9A73                      sprite_zombi2_1_1:
     167.  00:9A73                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     167.  00:9A73  FF FF FF FF FF FF FF FF 
     168.  00:9A7B                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     168.  00:9A7B  FF FF FF FF FF FF FF FF 
     169.  00:9A83                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     169.  00:9A83  FF FF FF FF FF FF FF FF 
     170.  00:9A8B                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     170.  00:9A8B  FF FF FF FF FF FF FF FF 
     171.  00:9A93                      
     172.  00:9A93                      sprite_zombi2_2_1:
     173.  00:9A93                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     173.  00:9A93  FF FF FF FF FF FF FF FF 
     174.  00:9A9B                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     174.  00:9A9B  FF FF FF FF FF FF FF FF 
     175.  00:9AA3                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     175.  00:9AA3  FF FF FF FF FF FF FF FF 
     176.  00:9AAB                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     176.  00:9AAB  FF FF FF FF FF FF FF FF 
     177.  00:9AB3                      	
     178.  00:9AB3                      sprite_zombi2_3_1:
     179.  00:9AB3                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     179.  00:9AB3  FF FF FF FF FF FF FF FF 
     180.  00:9ABB                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     180.  00:9ABB  FF FF FF FF FF FF FF FF 
     181.  00:9AC3                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     181.  00:9AC3  FF FF FF FF FF FF FF FF 
     182.  00:9ACB                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     182.  00:9ACB  FF FF FF FF FF FF FF FF 
     183.  00:9AD3                      	
     184.  00:9AD3                      sprite_zombi2_4_1:
     185.  00:9AD3                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     185.  00:9AD3  FF FF FF FF FF FF FF FF 
     186.  00:9ADB                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     186.  00:9ADB  FF FF FF FF FF FF FF FF 
     187.  00:9AE3                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     187.  00:9AE3  FF FF FF FF FF FF FF FF 
     188.  00:9AEB                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     188.  00:9AEB  FF FF FF FF FF FF FF FF 
     189.  00:9AF3                      	
     190.  00:9AF3                      sprite_zombi2_1_2:
     191.  00:9AF3                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     191.  00:9AF3  FF FF FF FF FF FF FF FF 
     192.  00:9AFB                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     192.  00:9AFB  FF FF FF FF FF FF FF FF 
     193.  00:9B03                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     193.  00:9B03  FF FF FF FF FF FF FF FF 
     194.  00:9B0B                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     194.  00:9B0B  FF FF FF FF FF FF FF FF 
     195.  00:9B13                      
     196.  00:9B13                      sprite_zombi2_2_2:
     197.  00:9B13                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     197.  00:9B13  FF FF FF FF FF FF FF FF 
     198.  00:9B1B                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     198.  00:9B1B  FF FF FF FF FF FF FF FF 
     199.  00:9B23                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     199.  00:9B23  FF FF FF FF FF FF FF FF 
     200.  00:9B2B                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     200.  00:9B2B  FF FF FF FF FF FF FF FF 
     201.  00:9B33                      	
     202.  00:9B33                      sprite_zombi2_3_2:
     203.  00:9B33                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     203.  00:9B33  FF FF FF FF FF FF FF FF 
     204.  00:9B3B                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     204.  00:9B3B  FF FF FF FF FF FF FF FF 
     205.  00:9B43                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     205.  00:9B43  FF FF FF FF FF FF FF FF 
     206.  00:9B4B                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     206.  00:9B4B  FF FF FF FF FF FF FF FF 
     207.  00:9B53                      	
     208.  00:9B53                      sprite_zombi2_4_2:
     209.  00:9B53                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     209.  00:9B53  FF FF FF FF FF FF FF FF 
     210.  00:9B5B                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     210.  00:9B5B  FF FF FF FF FF FF FF FF 
     211.  00:9B63                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     211.  00:9B63  FF FF FF FF FF FF FF FF 
     212.  00:9B6B                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     212.  00:9B6B  FF FF FF FF FF FF FF FF 
     213.  00:9B73                      	
     214.  00:9B73                      ;; CABALLERO
     215.  00:9B73                      
     216.  00:9B73                      sprite_caballero1_1_1:
     217.  00:9B73                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     217.  00:9B73  FF FF FF FF FF FF FF FF 
     218.  00:9B7B                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     218.  00:9B7B  FF FF FF FF FF FF FF FF 
     219.  00:9B83                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     219.  00:9B83  FF FF FF FF FF FF FF FF 
     220.  00:9B8B                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     220.  00:9B8B  FF FF FF FF FF FF FF FF 
     221.  00:9B93                      
     222.  00:9B93                      sprite_caballero1_2_1:
     223.  00:9B93                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     223.  00:9B93  FF FF FF FF FF FF FF FF 
     224.  00:9B9B                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     224.  00:9B9B  FF FF FF FF FF FF FF FF 
     225.  00:9BA3                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     225.  00:9BA3  FF FF FF FF FF FF FF FF 
     226.  00:9BAB                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     226.  00:9BAB  FF FF FF FF FF FF FF FF 
     227.  00:9BB3                      	
     228.  00:9BB3                      sprite_caballero1_3_1:
     229.  00:9BB3                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     229.  00:9BB3  FF FF FF FF FF FF FF FF 
     230.  00:9BBB                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     230.  00:9BBB  FF FF FF FF FF FF FF FF 
     231.  00:9BC3                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     231.  00:9BC3  FF FF FF FF FF FF FF FF 
     232.  00:9BCB                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     232.  00:9BCB  FF FF FF FF FF FF FF FF 
     233.  00:9BD3                      	
     234.  00:9BD3                      sprite_caballero1_4_1:
     235.  00:9BD3                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     235.  00:9BD3  FF FF FF FF FF FF FF FF 
     236.  00:9BDB                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     236.  00:9BDB  FF FF FF FF FF FF FF FF 
     237.  00:9BE3                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     237.  00:9BE3  FF FF FF FF FF FF FF FF 
     238.  00:9BEB                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     238.  00:9BEB  FF FF FF FF FF FF FF FF 
     239.  00:9BF3                      	
     240.  00:9BF3                      sprite_caballero1_1_2:
     241.  00:9BF3                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     241.  00:9BF3  FF FF FF FF FF FF FF FF 
     242.  00:9BFB                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     242.  00:9BFB  FF FF FF FF FF FF FF FF 
     243.  00:9C03                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     243.  00:9C03  FF FF FF FF FF FF FF FF 
     244.  00:9C0B                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     244.  00:9C0B  FF FF FF FF FF FF FF FF 
     245.  00:9C13                      
     246.  00:9C13                      sprite_caballero1_2_2:
     247.  00:9C13                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     247.  00:9C13  FF FF FF FF FF FF FF FF 
     248.  00:9C1B                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     248.  00:9C1B  FF FF FF FF FF FF FF FF 
     249.  00:9C23                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     249.  00:9C23  FF FF FF FF FF FF FF FF 
     250.  00:9C2B                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     250.  00:9C2B  FF FF FF FF FF FF FF FF 
     251.  00:9C33                      	
     252.  00:9C33                      sprite_caballero1_3_2:
     253.  00:9C33                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     253.  00:9C33  FF FF FF FF FF FF FF FF 
     254.  00:9C3B                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     254.  00:9C3B  FF FF FF FF FF FF FF FF 
     255.  00:9C43                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     255.  00:9C43  FF FF FF FF FF FF FF FF 
     256.  00:9C4B                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     256.  00:9C4B  FF FF FF FF FF FF FF FF 
     257.  00:9C53                      	
     258.  00:9C53                      sprite_caballero1_4_2:
     259.  00:9C53                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     259.  00:9C53  FF FF FF FF FF FF FF FF 
     260.  00:9C5B                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     260.  00:9C5B  FF FF FF FF FF FF FF FF 
     261.  00:9C63                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     261.  00:9C63  FF FF FF FF FF FF FF FF 
     262.  00:9C6B                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     262.  00:9C6B  FF FF FF FF FF FF FF FF 
     263.  00:9C73                      	
     264.  00:9C73                      sprite_caballero2_1_1:
     265.  00:9C73                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     265.  00:9C73  FF FF FF FF FF FF FF FF 
     266.  00:9C7B                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     266.  00:9C7B  FF FF FF FF FF FF FF FF 
     267.  00:9C83                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     267.  00:9C83  FF FF FF FF FF FF FF FF 
     268.  00:9C8B                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     268.  00:9C8B  FF FF FF FF FF FF FF FF 
     269.  00:9C93                      
     270.  00:9C93                      sprite_caballero2_2_1:
     271.  00:9C93                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     271.  00:9C93  FF FF FF FF FF FF FF FF 
     272.  00:9C9B                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     272.  00:9C9B  FF FF FF FF FF FF FF FF 
     273.  00:9CA3                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     273.  00:9CA3  FF FF FF FF FF FF FF FF 
     274.  00:9CAB                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     274.  00:9CAB  FF FF FF FF FF FF FF FF 
     275.  00:9CB3                      	
     276.  00:9CB3                      sprite_caballero2_3_1:
     277.  00:9CB3                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     277.  00:9CB3  FF FF FF FF FF FF FF FF 
     278.  00:9CBB                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     278.  00:9CBB  FF FF FF FF FF FF FF FF 
     279.  00:9CC3                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     279.  00:9CC3  FF FF FF FF FF FF FF FF 
     280.  00:9CCB                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     280.  00:9CCB  FF FF FF FF FF FF FF FF 
     281.  00:9CD3                      	
     282.  00:9CD3                      sprite_caballero2_4_1:
     283.  00:9CD3                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     283.  00:9CD3  FF FF FF FF FF FF FF FF 
     284.  00:9CDB                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     284.  00:9CDB  FF FF FF FF FF FF FF FF 
     285.  00:9CE3                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     285.  00:9CE3  FF FF FF FF FF FF FF FF 
     286.  00:9CEB                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     286.  00:9CEB  FF FF FF FF FF FF FF FF 
     287.  00:9CF3                      	
     288.  00:9CF3                      sprite_caballero2_1_2:
     289.  00:9CF3                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     289.  00:9CF3  FF FF FF FF FF FF FF FF 
     290.  00:9CFB                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     290.  00:9CFB  FF FF FF FF FF FF FF FF 
     291.  00:9D03                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     291.  00:9D03  FF FF FF FF FF FF FF FF 
     292.  00:9D0B                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     292.  00:9D0B  FF FF FF FF FF FF FF FF 
     293.  00:9D13                      
     294.  00:9D13                      sprite_caballero2_2_2:
     295.  00:9D13                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     295.  00:9D13  FF FF FF FF FF FF FF FF 
     296.  00:9D1B                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     296.  00:9D1B  FF FF FF FF FF FF FF FF 
     297.  00:9D23                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     297.  00:9D23  FF FF FF FF FF FF FF FF 
     298.  00:9D2B                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     298.  00:9D2B  FF FF FF FF FF FF FF FF 
     299.  00:9D33                      	
     300.  00:9D33                      sprite_caballero2_3_2:
     301.  00:9D33                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     301.  00:9D33  FF FF FF FF FF FF FF FF 
     302.  00:9D3B                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     302.  00:9D3B  FF FF FF FF FF FF FF FF 
     303.  00:9D43                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     303.  00:9D43  FF FF FF FF FF FF FF FF 
     304.  00:9D4B                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     304.  00:9D4B  FF FF FF FF FF FF FF FF 
     305.  00:9D53                      	
     306.  00:9D53                      sprite_caballero2_4_2:
     307.  00:9D53                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     307.  00:9D53  FF FF FF FF FF FF FF FF 
     308.  00:9D5B                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     308.  00:9D5B  FF FF FF FF FF FF FF FF 
     309.  00:9D63                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     309.  00:9D63  FF FF FF FF FF FF FF FF 
     310.  00:9D6B                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     310.  00:9D6B  FF FF FF FF FF FF FF FF 
     311.  00:9D73                      	
     312.  00:9D73                      ;; LLAMA
     313.  00:9D73                      
     314.  00:9D73                      sprite_llama1_1:	
     315.  00:9D73                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     315.  00:9D73  FF FF FF FF FF FF FF FF 
     316.  00:9D7B                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     316.  00:9D7B  FF FF FF FF FF FF FF FF 
     317.  00:9D83                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     317.  00:9D83  FF FF FF FF FF FF FF FF 
     318.  00:9D8B                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     318.  00:9D8B  FF FF FF FF FF FF FF FF 
     319.  00:9D93                      	
     320.  00:9D93                      sprite_llama2_1:	
     321.  00:9D93                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     321.  00:9D93  FF FF FF FF FF FF FF FF 
     322.  00:9D9B                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     322.  00:9D9B  FF FF FF FF FF FF FF FF 
     323.  00:9DA3                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     323.  00:9DA3  FF FF FF FF FF FF FF FF 
     324.  00:9DAB                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF	
     324.  00:9DAB  FF FF FF FF FF FF FF FF 
     325.  00:9DB3                      	
     326.  00:9DB3                      sprite_llama1_2:	
     327.  00:9DB3                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     327.  00:9DB3  FF FF FF FF FF FF FF FF 
     328.  00:9DBB                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     328.  00:9DBB  FF FF FF FF FF FF FF FF 
     329.  00:9DC3                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     329.  00:9DC3  FF FF FF FF FF FF FF FF 
     330.  00:9DCB                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     330.  00:9DCB  FF FF FF FF FF FF FF FF 
     331.  00:9DD3                      	
     332.  00:9DD3                      sprite_llama2_2:	
     333.  00:9DD3                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     333.  00:9DD3  FF FF FF FF FF FF FF FF 
     334.  00:9DDB                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     334.  00:9DDB  FF FF FF FF FF FF FF FF 
     335.  00:9DE3                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     335.  00:9DE3  FF FF FF FF FF FF FF FF 
     336.  00:9DEB                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF			
     336.  00:9DEB  FF FF FF FF FF FF FF FF 
     337.  00:9DF3                      	
     338.  00:9DF3                      ;; FANTASMA
     339.  00:9DF3                      
     340.  00:9DF3                      sprite_fantasma1_1:
     341.  00:9DF3                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     341.  00:9DF3  FF FF FF FF FF FF FF FF 
     342.  00:9DFB                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     342.  00:9DFB  FF FF FF FF FF FF FF FF 
     343.  00:9E03                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     343.  00:9E03  FF FF FF FF FF FF FF FF 
     344.  00:9E0B                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     344.  00:9E0B  FF FF FF FF FF FF FF FF 
     345.  00:9E13                      
     346.  00:9E13                      sprite_fantasma2_1:
     347.  00:9E13                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     347.  00:9E13  FF FF FF FF FF FF FF FF 
     348.  00:9E1B                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     348.  00:9E1B  FF FF FF FF FF FF FF FF 
     349.  00:9E23                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     349.  00:9E23  FF FF FF FF FF FF FF FF 
     350.  00:9E2B                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     350.  00:9E2B  FF FF FF FF FF FF FF FF 
     351.  00:9E33                      
     352.  00:9E33                      sprite_fantasma1_2:
     353.  00:9E33                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     353.  00:9E33  FF FF FF FF FF FF FF FF 
     354.  00:9E3B                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     354.  00:9E3B  FF FF FF FF FF FF FF FF 
     355.  00:9E43                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     355.  00:9E43  FF FF FF FF FF FF FF FF 
     356.  00:9E4B                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     356.  00:9E4B  FF FF FF FF FF FF FF FF 
     357.  00:9E53                      
     358.  00:9E53                      sprite_fantasma2_2:
     359.  00:9E53                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     359.  00:9E53  FF FF FF FF FF FF FF FF 
     360.  00:9E5B                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     360.  00:9E5B  FF FF FF FF FF FF FF FF 
     361.  00:9E63                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     361.  00:9E63  FF FF FF FF FF FF FF FF 
     362.  00:9E6B                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF	
     362.  00:9E6B  FF FF FF FF FF FF FF FF 
     363.  00:9E73                      	
     364.  00:9E73                      ;; MAGIA
     365.  00:9E73                      
     366.  00:9E73                      sprite_magia1_1:
     367.  00:9E73                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     367.  00:9E73  FF FF FF FF FF FF FF FF 
     368.  00:9E7B                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     368.  00:9E7B  FF FF FF FF FF FF FF FF 
     369.  00:9E83                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     369.  00:9E83  FF FF FF FF FF FF FF FF 
     370.  00:9E8B                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     370.  00:9E8B  FF FF FF FF FF FF FF FF 
     371.  00:9E93                      
     372.  00:9E93                      sprite_magia2_1:
     373.  00:9E93                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     373.  00:9E93  FF FF FF FF FF FF FF FF 
     374.  00:9E9B                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     374.  00:9E9B  FF FF FF FF FF FF FF FF 
     375.  00:9EA3                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     375.  00:9EA3  FF FF FF FF FF FF FF FF 
     376.  00:9EAB                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     376.  00:9EAB  FF FF FF FF FF FF FF FF 
     377.  00:9EB3                      
     378.  00:9EB3                      sprite_magia1_2:
     379.  00:9EB3                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     379.  00:9EB3  FF FF FF FF FF FF FF FF 
     380.  00:9EBB                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     380.  00:9EBB  FF FF FF FF FF FF FF FF 
     381.  00:9EC3                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     381.  00:9EC3  FF FF FF FF FF FF FF FF 
     382.  00:9ECB                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     382.  00:9ECB  FF FF FF FF FF FF FF FF 
     383.  00:9ED3                      
     384.  00:9ED3                      sprite_magia2_2:
     385.  00:9ED3                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     385.  00:9ED3  FF FF FF FF FF FF FF FF 
     386.  00:9EDB                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     386.  00:9EDB  FF FF FF FF FF FF FF FF 
     387.  00:9EE3                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     387.  00:9EE3  FF FF FF FF FF FF FF FF 
     388.  00:9EEB                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF	
     388.  00:9EEB  FF FF FF FF FF FF FF FF 
     389.  00:9EF3                      	
     390.  00:9EF3                      	
     391.  00:9EF3                      ;; BEHOLDER
     392.  00:9EF3                      
     393.  00:9EF3                      sprite_beholder1_1:
     394.  00:9EF3                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     394.  00:9EF3  FF FF FF FF FF FF FF FF 
     395.  00:9EFB                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     395.  00:9EFB  FF FF FF FF FF FF FF FF 
     396.  00:9F03                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     396.  00:9F03  FF FF FF FF FF FF FF FF 
     397.  00:9F0B                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     397.  00:9F0B  FF FF FF FF FF FF FF FF 
     398.  00:9F13                      
     399.  00:9F13                      sprite_beholder2_1:
     400.  00:9F13                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     400.  00:9F13  FF FF FF FF FF FF FF FF 
     401.  00:9F1B                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     401.  00:9F1B  FF FF FF FF FF FF FF FF 
     402.  00:9F23                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     402.  00:9F23  FF FF FF FF FF FF FF FF 
     403.  00:9F2B                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     403.  00:9F2B  FF FF FF FF FF FF FF FF 
     404.  00:9F33                      
     405.  00:9F33                      sprite_beholder3_1:
     406.  00:9F33                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     406.  00:9F33  FF FF FF FF FF FF FF FF 
     407.  00:9F3B                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     407.  00:9F3B  FF FF FF FF FF FF FF FF 
     408.  00:9F43                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     408.  00:9F43  FF FF FF FF FF FF FF FF 
     409.  00:9F4B                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     409.  00:9F4B  FF FF FF FF FF FF FF FF 
     410.  00:9F53                      
     411.  00:9F53                      sprite_beholder4_1:
     412.  00:9F53                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     412.  00:9F53  FF FF FF FF FF FF FF FF 
     413.  00:9F5B                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     413.  00:9F5B  FF FF FF FF FF FF FF FF 
     414.  00:9F63                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     414.  00:9F63  FF FF FF FF FF FF FF FF 
     415.  00:9F6B                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF	
     415.  00:9F6B  FF FF FF FF FF FF FF FF 
     416.  00:9F73                      	
     417.  00:9F73                      sprite_beholder1_2:
     418.  00:9F73                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     418.  00:9F73  FF FF FF FF FF FF FF FF 
     419.  00:9F7B                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     419.  00:9F7B  FF FF FF FF FF FF FF FF 
     420.  00:9F83                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     420.  00:9F83  FF FF FF FF FF FF FF FF 
     421.  00:9F8B                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     421.  00:9F8B  FF FF FF FF FF FF FF FF 
     422.  00:9F93                      
     423.  00:9F93                      sprite_beholder2_2:
     424.  00:9F93                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     424.  00:9F93  FF FF FF FF FF FF FF FF 
     425.  00:9F9B                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     425.  00:9F9B  FF FF FF FF FF FF FF FF 
     426.  00:9FA3                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     426.  00:9FA3  FF FF FF FF FF FF FF FF 
     427.  00:9FAB                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     427.  00:9FAB  FF FF FF FF FF FF FF FF 
     428.  00:9FB3                      
     429.  00:9FB3                      sprite_beholder3_2:
     430.  00:9FB3                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     430.  00:9FB3  FF FF FF FF FF FF FF FF 
     431.  00:9FBB                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     431.  00:9FBB  FF FF FF FF FF FF FF FF 
     432.  00:9FC3                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     432.  00:9FC3  FF FF FF FF FF FF FF FF 
     433.  00:9FCB                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     433.  00:9FCB  FF FF FF FF FF FF FF FF 
     434.  00:9FD3                      
     435.  00:9FD3                      sprite_beholder4_2:
     436.  00:9FD3                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     436.  00:9FD3  FF FF FF FF FF FF FF FF 
     437.  00:9FDB                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     437.  00:9FDB  FF FF FF FF FF FF FF FF 
     438.  00:9FE3                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     438.  00:9FE3  FF FF FF FF FF FF FF FF 
     439.  00:9FEB                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF		
     439.  00:9FEB  FF FF FF FF FF FF FF FF 
     440.  00:9FF3                      	
     441.  00:9FF3                      ;; VAMPIRO
     442.  00:9FF3                      
     443.  00:9FF3                      sprite_vampiro1_1:
     444.  00:9FF3                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     444.  00:9FF3  FF FF FF FF FF FF FF FF 
     445.  00:9FFB                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     445.  00:9FFB  FF FF FF FF FF FF FF FF 
     446.  00:A003                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     446.  00:A003  FF FF FF FF FF FF FF FF 
     447.  00:A00B                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     447.  00:A00B  FF FF FF FF FF FF FF FF 
     448.  00:A013                      
     449.  00:A013                      sprite_vampiro2_1:
     450.  00:A013                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     450.  00:A013  FF FF FF FF FF FF FF FF 
     451.  00:A01B                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     451.  00:A01B  FF FF FF FF FF FF FF FF 
     452.  00:A023                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     452.  00:A023  FF FF FF FF FF FF FF FF 
     453.  00:A02B                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     453.  00:A02B  FF FF FF FF FF FF FF FF 
     454.  00:A033                      
     455.  00:A033                      sprite_vampiro1_2:
     456.  00:A033                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     456.  00:A033  FF FF FF FF FF FF FF FF 
     457.  00:A03B                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     457.  00:A03B  FF FF FF FF FF FF FF FF 
     458.  00:A043                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     458.  00:A043  FF FF FF FF FF FF FF FF 
     459.  00:A04B                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     459.  00:A04B  FF FF FF FF FF FF FF FF 
     460.  00:A053                      
     461.  00:A053                      sprite_vampiro2_2:
     462.  00:A053                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     462.  00:A053  FF FF FF FF FF FF FF FF 
     463.  00:A05B                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     463.  00:A05B  FF FF FF FF FF FF FF FF 
     464.  00:A063                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     464.  00:A063  FF FF FF FF FF FF FF FF 
     465.  00:A06B                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     465.  00:A06B  FF FF FF FF FF FF FF FF 
     466.  00:A073                      	
     467.  00:A073                      ;; MANOIZQ
     468.  00:A073                      
     469.  00:A073                      sprite_manoizq1:
     470.  00:A073                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     470.  00:A073  FF FF FF FF FF FF FF FF 
     471.  00:A07B                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     471.  00:A07B  FF FF FF FF FF FF FF FF 
     472.  00:A083                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     472.  00:A083  FF FF FF FF FF FF FF FF 
     473.  00:A08B                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     473.  00:A08B  FF FF FF FF FF FF FF FF 
     474.  00:A093                      	
     475.  00:A093                      sprite_manoizq2:
     476.  00:A093                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     476.  00:A093  FF FF FF FF FF FF FF FF 
     477.  00:A09B                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     477.  00:A09B  FF FF FF FF FF FF FF FF 
     478.  00:A0A3                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     478.  00:A0A3  FF FF FF FF FF FF FF FF 
     479.  00:A0AB                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     479.  00:A0AB  FF FF FF FF FF FF FF FF 
     480.  00:A0B3                      	
     481.  00:A0B3                      sprite_manoizq3:
     482.  00:A0B3                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     482.  00:A0B3  FF FF FF FF FF FF FF FF 
     483.  00:A0BB                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     483.  00:A0BB  FF FF FF FF FF FF FF FF 
     484.  00:A0C3                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     484.  00:A0C3  FF FF FF FF FF FF FF FF 
     485.  00:A0CB                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF	
     485.  00:A0CB  FF FF FF FF FF FF FF FF 
     486.  00:A0D3                      	
     487.  00:A0D3                      ;; MANODER
     488.  00:A0D3                      
     489.  00:A0D3                      sprite_manoder1:
     490.  00:A0D3                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     490.  00:A0D3  FF FF FF FF FF FF FF FF 
     491.  00:A0DB                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     491.  00:A0DB  FF FF FF FF FF FF FF FF 
     492.  00:A0E3                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     492.  00:A0E3  FF FF FF FF FF FF FF FF 
     493.  00:A0EB                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     493.  00:A0EB  FF FF FF FF FF FF FF FF 
     494.  00:A0F3                      	
     495.  00:A0F3                      sprite_manoder2:
     496.  00:A0F3                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     496.  00:A0F3  FF FF FF FF FF FF FF FF 
     497.  00:A0FB                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     497.  00:A0FB  FF FF FF FF FF FF FF FF 
     498.  00:A103                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     498.  00:A103  FF FF FF FF FF FF FF FF 
     499.  00:A10B                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     499.  00:A10B  FF FF FF FF FF FF FF FF 
     500.  00:A113                      	
     501.  00:A113                      sprite_manoder3:
     502.  00:A113                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     502.  00:A113  FF FF FF FF FF FF FF FF 
     503.  00:A11B                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     503.  00:A11B  FF FF FF FF FF FF FF FF 
     504.  00:A123                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     504.  00:A123  FF FF FF FF FF FF FF FF 
     505.  00:A12B                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF		
     505.  00:A12B  FF FF FF FF FF FF FF FF 
     506.  00:A133                      	
     507.  00:A133                      	
     508.  00:A133                      	
     509.  00:A133                      	
     510.  00:A133                      	
     511.  00:A133                      	
     512.  00:A133                      	
     513.  00:A133                      	
     514.  00:A133                      	
     515.  00:A133                      	
     516.  00:A133                      	
     517.  00:A133                      	
     518.  00:A133                      	
     519.  00:A133                      	
     520.  00:A133                      	
     521.  00:A133                      	
     522.  00:A133                      	
     523.  00:A133                      	
     524.  00:A133                      	
     525.  00:A133                      	
     526.  00:A133                      	
     527.  00:A133                      	
     528.  00:A133                      	
     141   00:A133                      	
     142   00:A133                      	include "habitaciones.asm"
       1.  00:A133                      ;;=====================================================
       2.  00:A133                      ;;DEFINICIÓN DE HABITACIONES x NIVEL
       3.  00:A133                      ;;=====================================================	
       4.  00:A133                      
       5.  00:A133                      ; sólo voy a usar 7x7 pero como los arrays son lineales y voy a trabajar con matrices
       6.  00:A133                      ; me interesa que seande  8x8 aunque sólo trabaje con 7x7
       7.  00:A133                      
       8.  00:A133                      ; ojo... la primera linea corresponderá a la primera linea del castillo no a la última
       9.  00:A133                      
      10.  00:A133                      ;; definición de estructura de bits
      11.  00:A133                      ;16 bits por habitación
      12.  00:A133                      
      13.  00:A133                      ;~ 7 - sin asignar
      14.  00:A133                      ;~ 6 - sin asignar
      15.  00:A133                      ;~ 5 - sin asignar
      16.  00:A133                      ;~ 4 - sin asignar
      17.  00:A133                      ;~ 0,1,2,3 - nº puertas 1 arriba 1 derecha 1 abajo 1 izquierda
      18.  00:A133                      
      19.  00:A133                      ;~ 15 - ballesta
      20.  00:A133                      ;~ 14 - vida extra
      21.  00:A133                      ;~ 13 - planta
      22.  00:A133                      ;~ 12 - armadura
      23.  00:A133                      ;~ 11 - agua
      24.  00:A133                      ;~ 10 - cruz
      25.  00:A133                      ;~ 9  - oración
      26.  00:A133                      ;~ 8  - sin asignar
      27.  00:A133                      
      28.  00:A133                      ;importante: el byte de la columna 15 indicará con 1 y 0 habitaciones por las que se haya pasado
      29.  00:A133                      ;cuando se inicie la partida todos se pondrán a 0
      30.  00:A133                      ;por ejemplo 01000000b se ha pasado por la hab. 2 de esa fila en el nivel que sea
      31.  00:A133                      
      32.  00:A133                      habitacion_actual:
      33.  00:A133  00                  	db  #00		;habitación donde se encuentre el prota. Se mete en una varible par traer todos los datos de golpe y no buscarlos varias veces
      34.  00:A134                      habitacion_extras:
      35.  00:A134  00                  	db	#00		;donde van las ayudas de una habitación
      36.  00:A135                      
      37.  00:A135                      
      38.  00:A135                      habitaciones_juego:
      39.  00:A135                      habitaciones_nivel0:
      40.  00:A135                      	db  00000000b,#00,00000001b,#01,00001111b,10000000b,00000011b,#03,00001000b,#04,00001001b,#05,00001100b,#06,#FF,#00 ;primera fila
      40.  00:A135  00 00 01 01 0F 80 03 03 08 04 09 05 0C 06 FF 00 
      41.  00:A145                      	db  #17,#10,#11,#11,#12,#12,#13,#13,#14,#14,#15,#15,#16,#16,#FF,#00
      41.  00:A145  17 10 11 11 12 12 13 13 14 14 15 15 16 16 FF 00 
      42.  00:A155                      	db  #20,#20,#21,#21,#22,#22,#23,#23,#24,#24,#25,#25,#26,#26,#FF,#00
      42.  00:A155  20 20 21 21 22 22 23 23 24 24 25 25 26 26 FF 00 
      43.  00:A165                      	db  #30,#30,#31,#31,#32,#32,#33,#33,#34,#34,#35,#35,#36,#36,#FF,#00
      43.  00:A165  30 30 31 31 32 32 33 33 34 34 35 35 36 36 FF 00 
      44.  00:A175                      	db  00000000b,#00,00000001b,#01,00001111b,#02,00000011b,#03,00001000b,#04,00001001b,#05,00001100b,#06,#FF,#00
      44.  00:A175  00 00 01 01 0F 02 03 03 08 04 09 05 0C 06 FF 00 
      45.  00:A185                      	db  #50,#50,#51,#51,#52,#52,#53,#53,#54,#54,#55,#55,#56,#56,#FF,#00
      45.  00:A185  50 50 51 51 52 52 53 53 54 54 55 55 56 56 FF 00 
      46.  00:A195                      	db  00000000b,#00,00000001b,#01,00001111b,#02,00000011b,#03,00001000b,#04,00001001b,#05,00001100b,#06,#FF,#00	;ultima fila
      46.  00:A195  00 00 01 01 0F 02 03 03 08 04 09 05 0C 06 FF 00 
      47.  00:A1A5                      	
      48.  00:A1A5                      habitaciones_nivel1:
      49.  00:A1A5                      	db  00000000b,#00,00000001b,#01,00000010b,#02,00000011b,#03,00001000b,#04,00001001b,#05,00001100b,#06,#FF,#00 ;primera fila
      49.  00:A1A5  00 00 01 01 02 02 03 03 08 04 09 05 0C 06 FF 00 
      50.  00:A1B5                      	db  #17,#10,#11,#11,#12,#12,#13,#13,#14,#14,#15,#15,#16,#16,#FF,#00
      50.  00:A1B5  17 10 11 11 12 12 13 13 14 14 15 15 16 16 FF 00 
      51.  00:A1C5                      	db  #20,#20,#21,#21,#22,#22,#23,#23,#24,#24,#25,#25,#26,#26,#FF,#00
      51.  00:A1C5  20 20 21 21 22 22 23 23 24 24 25 25 26 26 FF 00 
      52.  00:A1D5                      	db  #30,#30,#31,#31,#32,#32,#33,#33,#34,#34,#35,#35,#36,#36,#FF,#00
      52.  00:A1D5  30 30 31 31 32 32 33 33 34 34 35 35 36 36 FF 00 
      53.  00:A1E5                      	db  00000000b,#00,00000001b,#01,00001111b,#02,00000011b,#03,00001000b,#04,00001001b,#05,00001100b,#06,#FF,#00
      53.  00:A1E5  00 00 01 01 0F 02 03 03 08 04 09 05 0C 06 FF 00 
      54.  00:A1F5                      	db  #50,#50,#51,#51,#52,#52,#53,#53,#54,#54,#55,#55,#56,#56,#FF,#00
      54.  00:A1F5  50 50 51 51 52 52 53 53 54 54 55 55 56 56 FF 00 
      55.  00:A205                      	db  00000000b,#00,00000001b,#01,00000010b,#02,00000011b,#03,00001000b,#04,00001001b,#05,00001100b,#06,#FF,#00	;ultima fila
      55.  00:A205  00 00 01 01 02 02 03 03 08 04 09 05 0C 06 FF 00 
      56.  00:A215                      	
      57.  00:A215                      habitaciones_nivel2:
      58.  00:A215                      	db  00000000b,#00,00000001b,#01,00000010b,#02,00000011b,#03,00001000b,#04,00001001b,#05,00001100b,#06,#FF,#00 ;primera fila
      58.  00:A215  00 00 01 01 02 02 03 03 08 04 09 05 0C 06 FF 00 
      59.  00:A225                      	db  #17,#10,#11,#11,#12,#12,#13,#13,#14,#14,#15,#15,#16,#16,#FF,#00
      59.  00:A225  17 10 11 11 12 12 13 13 14 14 15 15 16 16 FF 00 
      60.  00:A235                      	db  #20,#20,#21,#21,#22,#22,#23,#23,#24,#24,#25,#25,#26,#26,#FF,#00
      60.  00:A235  20 20 21 21 22 22 23 23 24 24 25 25 26 26 FF 00 
      61.  00:A245                      	db  #30,#30,#31,#31,#32,#32,#33,#33,#34,#34,#35,#35,#36,#36,#FF,#00
      61.  00:A245  30 30 31 31 32 32 33 33 34 34 35 35 36 36 FF 00 
      62.  00:A255                      	db  00000000b,#00,00000001b,#01,00001111b,#02,00000011b,#03,00001000b,#04,00001001b,#05,00001100b,#06,#FF,#00
      62.  00:A255  00 00 01 01 0F 02 03 03 08 04 09 05 0C 06 FF 00 
      63.  00:A265                      	db  #50,#50,#51,#51,#52,#52,#53,#53,#54,#54,#55,#55,#56,#56,#FF,#00
      63.  00:A265  50 50 51 51 52 52 53 53 54 54 55 55 56 56 FF 00 
      64.  00:A275                      	db  00000000b,#00,00000001b,#01,00000010b,#02,00000011b,#03,00001000b,#04,00001001b,#05,00001100b,#06,#FF,#00	;ultima fila
      64.  00:A275  00 00 01 01 02 02 03 03 08 04 09 05 0C 06 FF 00 
      65.  00:A285                      	
      66.  00:A285                      habitaciones_nivel3:
      67.  00:A285                      	db  00000000b,#00,00000001b,#01,00000010b,#02,00000011b,#03,00001000b,#04,00001001b,#05,00001100b,#06,#FF,#00 ;primera fila
      67.  00:A285  00 00 01 01 02 02 03 03 08 04 09 05 0C 06 FF 00 
      68.  00:A295                      	db  #17,#10,#11,#11,#12,#12,#13,#13,#14,#14,#15,#15,#16,#16,#FF,#00
      68.  00:A295  17 10 11 11 12 12 13 13 14 14 15 15 16 16 FF 00 
      69.  00:A2A5                      	db  #20,#20,#21,#21,#22,#22,#23,#23,#24,#24,#25,#25,#26,#26,#FF,#00
      69.  00:A2A5  20 20 21 21 22 22 23 23 24 24 25 25 26 26 FF 00 
      70.  00:A2B5                      	db  #30,#30,#31,#31,#32,#32,#33,#33,#34,#34,#35,#35,#36,#36,#FF,#00
      70.  00:A2B5  30 30 31 31 32 32 33 33 34 34 35 35 36 36 FF 00 
      71.  00:A2C5                      	db  00000000b,#00,00000001b,#01,00001111b,#02,00000011b,#03,00001000b,#04,00001001b,#05,00001100b,#06,#FF,#00
      71.  00:A2C5  00 00 01 01 0F 02 03 03 08 04 09 05 0C 06 FF 00 
      72.  00:A2D5                      	db  #50,#50,#51,#51,#52,#52,#53,#53,#54,#54,#55,#55,#56,#56,#FF,#00
      72.  00:A2D5  50 50 51 51 52 52 53 53 54 54 55 55 56 56 FF 00 
      73.  00:A2E5                      	db  00000000b,#00,00000001b,#01,00000010b,#02,00000011b,#03,00001000b,#04,00001001b,#05,00001100b,#06,#FF,#00	;ultima fila
      73.  00:A2E5  00 00 01 01 02 02 03 03 08 04 09 05 0C 06 FF 00 
      74.  00:A2F5                      	
      75.  00:A2F5                      habitaciones_nivel4:
      76.  00:A2F5                      	db  00000001b,#00,00000001b,#01,00000010b,#02,00000011b,#03,00001000b,#04,00001001b,#05,00001100b,#06,#FF,#00 ;primera fila
      76.  00:A2F5  01 00 01 01 02 02 03 03 08 04 09 05 0C 06 FF 00 
      77.  00:A305                      	db  #17,#10,#11,#11,#12,#12,#13,#13,#14,#14,#15,#15,#16,#16,#FF,#00
      77.  00:A305  17 10 11 11 12 12 13 13 14 14 15 15 16 16 FF 00 
      78.  00:A315                      	db  #20,#20,#21,#21,#22,#22,#23,#23,#24,#24,#25,#25,#26,#26,#FF,#00
      78.  00:A315  20 20 21 21 22 22 23 23 24 24 25 25 26 26 FF 00 
      79.  00:A325                      	db  #30,#30,#31,#31,#32,#32,#33,#33,#34,#34,#35,#35,#36,#36,#FF,#00
      79.  00:A325  30 30 31 31 32 32 33 33 34 34 35 35 36 36 FF 00 
      80.  00:A335                      	db  00000000b,#00,00000001b,#01,00001111b,#02,00000011b,#03,00001000b,#04,00001001b,#05,00001100b,#06,#FF,#00
      80.  00:A335  00 00 01 01 0F 02 03 03 08 04 09 05 0C 06 FF 00 
      81.  00:A345                      	db  #50,#50,#51,#51,#52,#52,#53,#53,#54,#54,#55,#55,#56,#56,#FF,#00
      81.  00:A345  50 50 51 51 52 52 53 53 54 54 55 55 56 56 FF 00 
      82.  00:A355                      	db  00000000b,#00,00000001b,#01,00001111b,00001111b,00000011b,#03,00001000b,#04,00001001b,#05,00001100b,#06,#FF,#00	;ultima fila
      82.  00:A355  00 00 01 01 0F 0F 03 03 08 04 09 05 0C 06 FF 00 
      83.  00:A365                      	
      84.  00:A365                      habitaciones_nivel5:
      85.  00:A365                      	db  00000000b,#00,00000001b,#01,00000010b,#02,00000011b,#03,00001000b,#04,00001001b,#05,00001100b,#06,#FF,#00 ;primera fila
      85.  00:A365  00 00 01 01 02 02 03 03 08 04 09 05 0C 06 FF 00 
      86.  00:A375                      	db  #17,#10,#11,#11,#12,#12,#13,#13,#14,#14,#15,#15,#16,#16,#FF,#00
      86.  00:A375  17 10 11 11 12 12 13 13 14 14 15 15 16 16 FF 00 
      87.  00:A385                      	db  #20,#20,#21,#21,#22,#22,#23,#23,#24,#24,#25,#25,#26,#26,#FF,#00
      87.  00:A385  20 20 21 21 22 22 23 23 24 24 25 25 26 26 FF 00 
      88.  00:A395                      	db  #30,#30,#31,#31,#32,#32,#33,#33,#34,#34,#35,#35,#36,#36,#FF,#00
      88.  00:A395  30 30 31 31 32 32 33 33 34 34 35 35 36 36 FF 00 
      89.  00:A3A5                      	db  00000000b,#00,00000001b,#01,00001111b,#02,00000011b,#03,00001000b,#04,00001001b,#05,00001100b,#06,#FF,#00
      89.  00:A3A5  00 00 01 01 0F 02 03 03 08 04 09 05 0C 06 FF 00 
      90.  00:A3B5                      	db  #50,#50,#51,#51,#52,#52,#53,#53,#54,#54,#55,#55,#56,#56,#FF,#00
      90.  00:A3B5  50 50 51 51 52 52 53 53 54 54 55 55 56 56 FF 00 
      91.  00:A3C5                      	db  00000000b,#00,00000001b,#01,00001010b,00001010b,00000011b,#03,00001000b,#04,00001001b,#05,00001100b,#06,#FF,#00	;ultima fila
      91.  00:A3C5  00 00 01 01 0A 0A 03 03 08 04 09 05 0C 06 FF 00 
      92.  00:A3D5                      	
      93.  00:A3D5                      habitaciones_nivel6:
      94.  00:A3D5                      	db  00000000b,#00,00000001b,#01,00000010b,#02,00000011b,#03,00001000b,#04,00001001b,#05,00001100b,#06,#FF,#00 ;primera fila
      94.  00:A3D5  00 00 01 01 02 02 03 03 08 04 09 05 0C 06 FF 00 
      95.  00:A3E5                      	db  #17,#10,#11,#11,#12,#12,#13,#13,#14,#14,#15,#15,#16,#16,#FF,#00
      95.  00:A3E5  17 10 11 11 12 12 13 13 14 14 15 15 16 16 FF 00 
      96.  00:A3F5                      	db  #20,#20,#21,#21,#22,#22,#23,#23,#24,#24,#25,#25,#26,#26,#FF,#00
      96.  00:A3F5  20 20 21 21 22 22 23 23 24 24 25 25 26 26 FF 00 
      97.  00:A405                      	db  #30,#30,#31,#31,#32,#32,#33,#33,#34,#34,#35,#35,#36,#36,#FF,#00
      97.  00:A405  30 30 31 31 32 32 33 33 34 34 35 35 36 36 FF 00 
      98.  00:A415                      	db  00000000b,#00,00000001b,#01,00001111b,#02,00000011b,#03,00001000b,#04,00001001b,#05,00001100b,#06,#FF,#00
      98.  00:A415  00 00 01 01 0F 02 03 03 08 04 09 05 0C 06 FF 00 
      99.  00:A425                      	db  #50,#50,#51,#51,#52,#52,#53,#53,#54,#54,#55,#55,#56,#56,#FF,#00
      99.  00:A425  50 50 51 51 52 52 53 53 54 54 55 55 56 56 FF 00 
     100.  00:A435                      	db  00000000b,#00,00000001b,10000000b,00001111b,#02,00000011b,#03,00001000b,#04,00001001b,#05,00001100b,#06,#FF,#00	;ultima fila
     100.  00:A435  00 00 01 80 0F 02 03 03 08 04 09 05 0C 06 FF 00 
     101.  00:A445                      
     102.  00:A445                      
     103.  00:A445                      
     143   00:A445                      	
     144   00:A445                      	include "variables.asm"
       1.  00:A445                      ;;=====================================================
       2.  00:A445                      ;;DEFINICIÓN DE VARIABLES
       3.  00:A445                      ;;=====================================================
       4.  00:A445                      
       5.  00:A445                      ;Colores base de la pantalla
       6.  00:A445                      color_base:
       7.  00:A445  01 01 01            			DB		COLNEGRO,COLNEGRO,COLNEGRO	
       8.  00:A448                      ;colores de pantalla cuando se tira bomba
       9.  00:A448                      color_bomba1:
      10.  00:A448  08 08 08            			DB		COLROJO,COLROJO,COLROJO
      11.  00:A44B                      color_bomba2:
      12.  00:A44B  06 06 06            			DB		COLROJOOSC,COLROJOOSC,COLROJOOSC
      13.  00:A44E                      
      14.  00:A44E                      ;definicion de variable del prota usando la estructura del punto de mira
      15.  00:A44E                      prota:		ESTRUCTURA_PUNTOMIRA
      15.  00:A44E  64 64 00 00 00 05 00 00 00 00 00 00 00 00 00 00 
      16.  00:A45E                      ;variables globales del prota
      17.  00:A45E                      prota_nivel:			;nivel del castillo donde está 0-6
      18.  00:A45E  00                  			DB		0
      19.  00:A45F                      prota_vidas:
      20.  00:A45F  00                  			DB		0
      21.  00:A460                      prota_reliquias:
      22.  00:A460  03                  			DB		3
      23.  00:A461                      prota_pos_mapx:
      24.  00:A461  00                  			DB		0	;pos columna
      25.  00:A462                      prota_pos_mapy:
      26.  00:A462  00                  			DB		0	;pos fila
      27.  00:A463                      prota_energia:
      28.  00:A463  FA                  			DB		250
      29.  00:A464                      
      30.  00:A464                      ;array para pintar de golpe el marcador de vidas
      31.  00:A464                      array_aux_vidas: 		
      32.  00:A464                      			DB		0,0,0,0,0,0,0,0
      32.  00:A464  00 00 00 00 00 00 00 00 
      33.  00:A46C                      
      34.  00:A46C                      ;array para pintar de golpe el marcador de reliquias
      35.  00:A46C                      array_aux_reliquias:	
      36.  00:A46C                      			DB		0,0,0,0,0,0,0,0
      36.  00:A46C  00 00 00 00 00 00 00 00 
      37.  00:A474                      
      38.  00:A474                      array_aux_energia:					;array para pintar de golpe el marcador de energía
      39.  00:A474                      			DB		16,0,0,0,0,0,0 	;el 16 primero es porque siempre estará pintado el cuadro primero rojo
      39.  00:A474  10 00 00 00 00 00 00 
      40.  00:A47B                      ultimo_pos_array_aux_energia:
      41.  00:A47B  00                  			DB		0				;el array completo es de 8 pero para posicionar sin niecesidad de cálculos  etiqueto este aparte
      42.  00:A47C                      			
      43.  00:A47C                      array_aux_mapa_limpiar:	;es por facilitar el reseteo del mapa (pinto 7 lineas en negro con bios) la otra opción es más larga en código y complicada aunque más rápida
      44.  00:A47C                      			DB		0,0,0,0,0,0,0
      44.  00:A47C  00 00 00 00 00 00 00 
      45.  00:A483                      elemento_pintar_mapa:
      46.  00:A483  00                  			DB		0	;TILEPROTAM = 19, ;TILEGRISM = 9
      47.  00:A484                      			
      48.  00:A484                      ;; nota importante: cada vez que se cambie de nivel se actualizará el contenido
      49.  00:A484                      ;; arrays con mapa de tiles de las puertas
      50.  00:A484                      array_puerta_arriba:
      51.  00:A484  03 01 01 03         array_puerta_arriba1:		DB	3,1,1,3
      52.  00:A488  01 01 01 01         array_puerta_arriba2:		DB	1,1,1,1
      53.  00:A48C  01 01 01 01         array_puerta_arriba3:		DB	1,1,1,1
      54.  00:A490  01 01 01 01         array_puerta_arriba4:		DB	1,1,1,1
      55.  00:A494  01 01 01 01         array_puerta_arriba5:		DB	1,1,1,1
      56.  00:A498                      
      57.  00:A498                      array_puerta_derecha:
      58.  00:A498  01 03 03            array_puerta_derecha1:		DB	1,3,3
      59.  00:A49B  01 01 03            array_puerta_derecha2:		DB	1,1,3
      60.  00:A49E  01 01 01            array_puerta_derecha3:		DB	1,1,1
      61.  00:A4A1  01 01 01            array_puerta_derecha4:		DB	1,1,1
      62.  00:A4A4  01 01 01            array_puerta_derecha5:		DB	1,1,1
      63.  00:A4A7  02 01 01            array_puerta_derecha6:		DB	2,1,1
      64.  00:A4AA  04 02 01            array_puerta_derecha7:		DB	4,2,1
      65.  00:A4AD                      	
      66.  00:A4AD  01 01 01 01         array_puerta_abajo:			DB	1,1,1,1
      67.  00:A4B1                      
      68.  00:A4B1                      array_puerta_izquierda:
      69.  00:A4B1  03 03 01            array_puerta_izquierda1:	DB	3,3,1
      70.  00:A4B4  03 01 01            array_puerta_izquierda2:	DB	3,1,1
      71.  00:A4B7  01 01 01            array_puerta_izquierda3:	DB	1,1,1
      72.  00:A4BA  01 01 01            array_puerta_izquierda4:	DB	1,1,1
      73.  00:A4BD  01 01 01            array_puerta_izquierda5:	DB	1,1,1
      74.  00:A4C0  01 01 02            array_puerta_izquierda6:	DB	1,1,2
      75.  00:A4C3  01 02 04            array_puerta_izquierda7:	DB	1,2,4
      76.  00:A4C6                      
      77.  00:A4C6                      ;array con posiciones pseudoaleatorias de ayudas y extras (qué valor se escogerá con R 0-127 + and 00001111)
      78.  00:A4C6                      ;+256 porque aparecerán todas en el banco1
      79.  00:A4C6                      pos_ayudas:					DB	0,4,18,23,45,69,73,82,90,152,171,180,190,192,198,208
      79.  00:A4C6  00 04 12 17 2D 45 49 52 5A 98 AB B4 BE C0 C6 D0 
      80.  00:A4D6                      
      81.  00:A4D6                      ;array de ayudas
      82.  00:A4D6                      array_ayudas:
      83.  00:A4D6  C8 CA               array_oracionon:			DB	200,202
      84.  00:A4D8  CA CB               array_oracionon1:			DB	202,203
      85.  00:A4DA  CC CE               array_oracionoff:			DB	204,206
      86.  00:A4DC  CD CF               array_oracionoff1:			DB	205,207
      87.  00:A4DE  D0 D2               array_cruzon:				DB	208,210
      88.  00:A4E0  D1 D3               array_cruzon1:				DB	209,211
      89.  00:A4E2  D4 D6               array_cruzoff:				DB	212,214
      90.  00:A4E4  D5 D7               array_cruzoff1:				DB	213,215
      91.  00:A4E6  D8 DA               array_aguaon:				DB	216,218
      92.  00:A4E8  D9 DB               array_aguaon1:				DB	217,219
      93.  00:A4EA  DC DE               array_aguaoff:				DB	220,222
      94.  00:A4EC  DD DF               array_aguaoff1:				DB	221,223
      95.  00:A4EE  E0 E2               array_armaduraon:			DB	224,226
      96.  00:A4F0  E1 E3               array_armaduraon1:			DB	225,227
      97.  00:A4F2  E4 E6               array_armaduraoff:			DB	228,230
      98.  00:A4F4  E5 E7               array_armaduraoff1:			DB	229,231
      99.  00:A4F6  E8 EA               array_plantaon:				DB	232,234
     100.  00:A4F8  E9 EB               array_plantaon1:			DB	233,235
     101.  00:A4FA  EC EE               array_plantaoff:			DB	236,238
     102.  00:A4FC  ED EF               array_plantaoff1:			DB	237,239
     103.  00:A4FE  F0 F2               array_extraon:				DB	240,242
     104.  00:A500  F1 F3               array_extraon1:				DB	241,243
     105.  00:A502  F4 F6               array_extraoff:				DB	244,246
     106.  00:A504  F5 F7               array_extraoff1:			DB	245,247
     107.  00:A506  F8 FA               array_ballestaon:			DB	248,250
     108.  00:A508  F9 FB               array_ballestaon1:			DB	249,251
     109.  00:A50A  FC FE               array_ballestaoff:			DB	252,254
     110.  00:A50C  FD FF               array_ballestaoff1:			DB	253,255
     111.  00:A50E                      
     112.  00:A50E  00 (56)             lista_ayudas:				DS	7 * ESTRUCTURA_AYUDA ; 7 ayudas posibles
     113.  00:A546                      
     114.  00:A546                      
     115.  00:A546                      ;array de 4 bytes x 32 sprites posibles en pantalla que sobreescribirá la tabla de sprites actualizando VRAM
     116.  00:A546                      array_sprites:
     117.  00:A546  00 (8)              array_sprites_pm:				DS	2 * 4
     118.  00:A54E  00 (120)            array_sprites_enem:				DS	30 * 4
     119.  00:A5C6  00 (140)            lista_enemigos:					DS	10 * ESTRUCTURA_ENEMIGO
     120.  00:A652                      ; puntero al array a pintar en VRAM
     121.  00:A652  00 00               puntero_array_atrib_array_VRAM: DW	0	;ARRAYSPTRIES + 8
     122.  00:A654                      
     123.  00:A654                      
     145   00:A654                      	
     146   00:A654                      ;;=====================================================
     147   00:A654                      ;;DEFINICIÓN DE PANTALLAS
     148   00:A654                      ;;=====================================================		
     149   00:A654                      	include "pantallas.asm"
       1.  00:A654                      ;;=====================================================
       2.  00:A654                      ;;DEFINICIÓN DE PANTALLAS
       3.  00:A654                      ;;=====================================================		
       4.  00:A654                      
       5.  00:A654                      ; bancos 1 y 2 y de pantalla 1 
       6.  00:A654                      ; se usa un banco común (en este caso el banco 1)
       7.  00:A654                      ; el mapa afecta al banco 1 y 2
       8.  00:A654  (01B5)              tiles_patrones_nivel0:	incbin "pantallas/nivel0.bank1.til.bin.chr.plet5"
       9.  00:A809  (0047)              tiles_color_nivel0:		incbin "pantallas/nivel0.bank1.til.bin.clr.plet5"
      10.  00:A850  (0035)              tiles_mapa_nivel0:		incbin "pantallas/nivel0.bank01.map.bin.plet5"
      11.  00:A885                      
      12.  00:A885  (01B5)              tiles_patrones_nivel1:	incbin "pantallas/nivel1.bank1.til.bin.chr.plet5"
      13.  00:AA3A  (0047)              tiles_color_nivel1:		incbin "pantallas/nivel1.bank1.til.bin.clr.plet5"
      14.  00:AA81  (0035)              tiles_mapa_nivel1:		incbin "pantallas/nivel1.bank01.map.bin.plet5"
      15.  00:AAB6                      
      16.  00:AAB6  (01B5)              tiles_patrones_nivel2:	incbin "pantallas/nivel2.bank1.til.bin.chr.plet5"
      17.  00:AC6B  (0047)              tiles_color_nivel2:		incbin "pantallas/nivel2.bank1.til.bin.clr.plet5"
      18.  00:ACB2  (0035)              tiles_mapa_nivel2:		incbin "pantallas/nivel2.bank01.map.bin.plet5"
      19.  00:ACE7                      
      20.  00:ACE7  (01B5)              tiles_patrones_nivel3:	incbin "pantallas/nivel3.bank1.til.bin.chr.plet5"
      21.  00:AE9C  (0047)              tiles_color_nivel3:		incbin "pantallas/nivel3.bank1.til.bin.clr.plet5"
      22.  00:AEE3  (0035)              tiles_mapa_nivel3:		incbin "pantallas/nivel3.bank01.map.bin.plet5"
      23.  00:AF18                      
      24.  00:AF18  (01B5)              tiles_patrones_nivel4:	incbin "pantallas/nivel4.bank1.til.bin.chr.plet5"
      25.  00:B0CD  (0047)              tiles_color_nivel4:		incbin "pantallas/nivel4.bank1.til.bin.clr.plet5"
      26.  00:B114  (0035)              tiles_mapa_nivel4:		incbin "pantallas/nivel4.bank01.map.bin.plet5"
      27.  00:B149                      
      28.  00:B149  (01B5)              tiles_patrones_nivel5:	incbin "pantallas/nivel5.bank1.til.bin.chr.plet5"
      29.  00:B2FE  (0047)              tiles_color_nivel5:		incbin "pantallas/nivel5.bank1.til.bin.clr.plet5"
      30.  00:B345  (0035)              tiles_mapa_nivel5:		incbin "pantallas/nivel5.bank01.map.bin.plet5"
      31.  00:B37A                      
      32.  00:B37A  (01B5)              tiles_patrones_nivel6:	incbin "pantallas/nivel6.bank1.til.bin.chr.plet5"
      33.  00:B52F  (0047)              tiles_color_nivel6:		incbin "pantallas/nivel6.bank1.til.bin.clr.plet5"
      34.  00:B576  (0035)              tiles_mapa_nivel6:		incbin "pantallas/nivel6.bank01.map.bin.plet5"
      35.  00:B5AB                      
      36.  00:B5AB                      ; 3º banco que es la parte de puntos, vidas, mapas, etc... es común
      37.  00:B5AB  (014C)              tiles_patrones_marcador:	incbin "pantallas/marcador.til.bin.chr.plet5"
      38.  00:B6F7  (0035)              tiles_color_marcador:		incbin "pantallas/marcador.til.bin.clr.plet5"
      39.  00:B72C  (0062)              tiles_mapa_marcador:		incbin "pantallas/marcador.map.bin.plet5"
      40.  00:B78E                      
      41.  00:B78E                      ;NOTA: FALTARÍAN PANTALLAS ESPECIALES (POR DEFINIR)
     150   00:B78E                      
     151   00:B78E                      
     152   00:B78E                      	
     153   00:B78E                      END:

    LABELS
-------------------------------------------------
00:000000D8 X GTTRIG
00:000000D5 X GTSTCK
00:0000F3DB   CLIKSW
00:0000013E X RDVDP
00:00000047   WRTVDP
00:0000005C   LDIRVM
00:00000059 X LDIRMV
00:0000005F   CHGMOD
00:00000041 X DISSCR
00:00000044 X ENASCR
00:00000062   CHGCLR
00:0000F3E9   FORCLR
00:0000F3EA   BAKCLR
00:0000F3EB   BDRCLR
00:000000C3   CLS
00:0000F3DF X RG0SAV
00:0000F3E0   RG1SAV
00:0000F3E1 X RG2SAV
00:0000F3E2 X RG3SAV
00:0000F3E3 X RG4SAV
00:0000F3E4 X RG5SAV
00:0000F3E5 X RG6SAV
00:0000F3E6 X RG7SAV
00:0000F3E7 X STATFL
00:00000099   REGEST
00:00000098   REGESCVDP
00:000000A0   PSG_A
00:000000A1   PSG_W
00:000000A2   PSG_R
00:00000000   CHRTBL
00:00001800   TILMAP
00:00001900 X TILMAPBANK1
00:00001B00   SPRART
00:00002000   CLRTBL
00:00003800   SPRTBL
00:00000001 X SI
00:00000000 X NO
00:00000004   LIMCADENCIA
00:00000000 X COLTRASP
00:00000001   COLNEGRO
00:00000002 X COLVERDE
00:00000003 X COLVERCLA
00:00000004 X COLAZULOSC
00:00000005 X COLAZULLA
00:00000006   COLROJOOSC
00:00000007 X COLCYAN
00:00000008   COLROJO
00:00000009 X COLROJOCLA
00:0000000A X COLAMAROSC
00:0000000B X COLAMARCLA
00:0000000C X COLVERDOSC
00:0000000D X COLMAGENTA
00:0000000E X COLGRIS
00:0000000F   COLBLANCO
00:000002F8   POSMAPLIN1
00:000002D8   POSMAPLIN2
00:000002B8   POSMAPLIN3
00:00000298   POSMAPLIN4
00:00000278   POSMAPLIN5
00:00000258   POSMAPLIN6
00:00000238   POSMAPLIN7
00:0000000D   POSCARAMAP
00:00000248   POSVIDAS
00:00000011   POSRELIMAP
00:000002C8   POSRELIQ
00:00000288   POSENERG
00:000002B4   POSNIVEL
00:00000238   POSMAPA
00:000001EE   POSPUERABAJ
00:0000008E   POSPUERARRI
00:000000FC   POSPUERDERE
00:000000E1   POSPUERIZQU
00:00000000 X ORACIONON
00:00000004 X ORACIONOFF
00:00000008 X CRUZON
00:0000000C X CRUZOFF
00:00000010 X AGUAON
00:00000014   AGUAOFF
00:00000018 X ARMADON
00:0000001C X ARMADOFF
00:00000020 X PLANTAON
00:00000024 X PLANTAOFF
00:00000028 X VIDAEXTON
00:0000002C X VIDAEXTOFF
00:00000030 X BALLESON
00:00000034 X BALLESOFF
00:00000000 X INACTIVO
00:00000013   TILEPROTAM
00:00000009   TILEGRISM
00:00000010   TILEMAPROJO
00:0000000F   TILEMAPAMAR
00:0000000E   TILEMAPVERD
00:00000008   NMAXVIDREL
00:00000007   NHABNIVEL
00:000000F8 X MAXENERGIA
00:000000D9   TILEENERG8
00:000000BA   TILEENERG7
00:0000009B   TILEENERG6
00:0000007C   TILEENERG5
00:0000005D   TILEENERG4
00:0000003E   TILEENERG3
00:0000001F   TILEENERG2
00:00000000   TILENEGRO
00:00000000 X LIMPANTIZQ
00:000000FF   LIMPANTDER
00:00000000 X LIMPANTARR
00:00000080   LIMPANTABA
00:00000006 X BASEMAPY
00:00000003 X BASEMAPX
00:0000FD9A X H.KEYI
00:0000FD9F   H.TIMI
00:0000F000   PT3_SETUP
00:0000F001   PT3_MODADDR
00:0000F003   PT3_CrPsPtr
00:0000F005   PT3_SAMPTRS
00:0000F007   PT3_OrnPtrs
00:0000F009   PT3_PDSP
00:0000F00B   PT3_CSP
00:0000F00D   PT3_PSP
00:0000F00F   PT3_PrNote
00:0000F010   PT3_PrSlide
00:0000F012   PT3_AdInPtA
00:0000F014   PT3_AdInPtB
00:0000F016   PT3_AdInPtC
00:0000F018   PT3_LPosPtr
00:0000F01A   PT3_PatsPtr
00:0000F01C   PT3_Delay
00:0000F01D   PT3_AddToEn
00:0000F01E   PT3_Env_Del
00:0000F01F   PT3_ESldAdd
00:0000F021   PT3_NTL3
00:0000F023   VARS
00:0000F023   ChanA
00:0000F040   ChanB
00:0000F05D   ChanC
00:0000F07A   DelyCnt
00:0000F07B   CurESld
00:0000F07D   CurEDel
00:0000F07E   Ns_Base_AddToNs
00:0000F07E   Ns_Base
00:0000F07F   AddToNs
00:0000F080   NT_
00:0000F140   AYREGS
00:0000F140   VT_
00:0000F14E   EnvBase
00:0000F150   VAR0END
00:0000F150   T1_
00:0000F150   T_NEW_1
00:0000F150   T_OLD_1
00:0000F168   T_OLD_2
00:0000F180   T_NEW_3
00:0000F180   T_OLD_3
00:0000F182   T_OLD_0
00:0000F182   T_NEW_0
00:0000F19A   T_NEW_2
00:0000F240   ayFX_MODE
00:0000F241   ayFX_BANK
00:0000F243   ayFX_PRIORITY
00:0000F244   ayFX_POINTER
00:0000F246   ayFX_TONE
00:0000F248   ayFX_NOISE
00:0000F249   ayFX_VOLUME
00:0000F24A   ayFX_CHANNEL
00:00008000   START
00:0000802C   loop_principal
00:00008039 X fin_programa_principal
00:00008039   inicializa_variables_pruebas
00:0000805B X fin_inicializa_variables_pruebas
00:0000805C   inicializa_niveles
00:0000806A   inicializa_niveles.bucle_borra_hab
00:0000806E X fin_iniciliza_niveles
00:0000806F   actualiza_marcador_vidas
00:00008074   loop_marcador_caras_negro
00:00008079 X fin_loop_marcador_caras_negro
00:00008082   loop_marcador_caras
00:00008087 X fin_loop_marcador_caras
00:00008087 X fin_actualiza_marcador_vidas
00:00008088   actualiza_buffer_reliquias
00:0000808E   loop_buffer_reliquias_negro
00:0000809B   loop_buffer_reliquias
00:000080A0 X fin_actualiza_buffer_reliquias
00:000080A1   localiza_info_habitacion
00:000080A4 X localiza_info_habitacion.situo_columna
00:000080AD X localiza_info_habitacion.situo_fila
00:000080B6   localiza_info_habitacion.loop_suma_fila
00:000080BE   localiza_info_habitacion.situo_nivel
00:000080CD   localiza_info_habitacion.loop_suma_nivel
00:000080D2   localiza_info_habitacion.actualiza_valiable_habitacion
00:000080DB X fin_localiza_info_habitacion
00:000080DC   inicializa_ayudas
00:000080E4 X fin_inicializa_ayudas
00:000080E5   actualiza_ayudas
00:000080ED X fin_actualiza_ayudas
00:000080EE   suma_A_BC
00:000080F3 X fin_suma_A_BC
00:000080F4   color_pantalla
00:00008105 X fin_color_pantalla
00:00008105   sub_preparapantalla
00:00008105 X elimina_clic
00:00008109 X fin_elimina_clic
00:00008109 X limpia_pantalla
00:0000810D X fin_limpia_pantalla
00:00008113 X screen2
00:00008118 X sprites_16_16
00:00008126 X fin_sub_preparapantalla
00:00008126   pinta_pantalla_completa
00:0000812C X fin_pinta_pantalla_completa
00:0000812D   pinta_parte_superior_pantalla
00:0000815E   pinta_parte_superior_pantalla.carga_nivel_0
00:00008179   pinta_parte_superior_pantalla.carga_nivel_1
00:00008194   pinta_parte_superior_pantalla.carga_nivel_2
00:000081AF   pinta_parte_superior_pantalla.carga_nivel_3
00:000081CA   pinta_parte_superior_pantalla.carga_nivel_4
00:000081E5   pinta_parte_superior_pantalla.carga_nivel_5
00:00008200   pinta_parte_superior_pantalla.carga_nivel_6
00:00008218   pinta_parte_superior_pantalla.fin_carga_niveles
00:00008245 X fin_pinta_parte_superior_pantalla
00:00008245   tiles_patrones
00:00008247   tiles_colores
00:00008249   tiles_mapa
00:0000824B   pinta_parte_inferior_pantalla
00:00008266 X fin_pinta_parte_inferior_pantalla
00:00008266   pinta_vidas
00:00008275 X fin_pinta_vidas
00:00008275   pinta_reliquias
00:00008284 X fin_pinta_reliquias
00:00008284   pinta_nivel
00:00008290 X fin_pinta_nivel
00:00008290   pinta_tile_suelto
00:0000829D X fin_pinta_tile_suelto
00:0000829E   mira_pinta_energia
00:000082A4 X pinta_ener
00:000082A4 X pinta_ener_tile_8
00:000082B0   pinta_ener_tile_8_negro
00:000082B1   pinta_ener_tile_7
00:000082BB   pinta_ener_tile_7_negro
00:000082BC   pinta_ener_tile_6
00:000082C6   pinta_ener_tile_6_negro
00:000082C7   pinta_ener_tile_5
00:000082D1   pinta_ener_tile_5_negro
00:000082D2   pinta_ener_tile_4
00:000082DC   pinta_ener_tile_4_negro
00:000082DD   pinta_ener_tile_3
00:000082E7   pinta_ener_tile_3_negro
00:000082E8   pinta_ener_tile_2
00:000082F2   pinta_ener_tile_2_negro
00:000082F3   fin_mira_pinta_energia
00:000082F5   pinta_energia
00:00008304 X fin_pinta_energia
00:00008304   borra_mapa
00:0000835A X fin_borra_mapa
00:0000835B   pinta_array
00:0000836E   pinta_array.pa_pinta_fila
00:0000836F   pinta_array.pa_pinta_columnas
00:00008392 X fin_pinta_array
00:00008393   wordaux1
00:00008395   wordaux2
00:00008397   pinta_puertas
00:000083B4 X fin_pinta_puertas
00:000083B5   pinta_puerta_aba
00:000083C8 X fin_pinta_puerta_aba
00:000083C8   pinta_puerta_arr
00:000083DB X fin_pinta_puerta_arr
00:000083DB   pinta_puerta_der
00:000083EE X fin_pinta_puerta_der
00:000083EE   pinta_puerta_izq
00:00008401 X fin_pinta_puerta_izq
00:00008401   posiciona_en_mapa
00:00008404 X posiciona_en_mapa.sumar_fila
00:0000842E X posiciona_en_mapa.fila_0
00:00008435   posiciona_en_mapa.fila_1
00:0000843C   posiciona_en_mapa.fila_2
00:00008443   posiciona_en_mapa.fila_3
00:0000844A   posiciona_en_mapa.fila_4
00:00008451   posiciona_en_mapa.fila_5
00:00008458 X posiciona_en_mapa.fila_6
00:00008458   posiciona_en_mapa.sumar_columna
00:0000846E   pinta_pos_mapa_vacio
00:00008470   fin_pinta_pos_mapa
00:00008473 X fin_posiciona_en_mapa
00:00008473   efecto_imagen_tira_reliquia
00:00008476   efecto_imagen_tira_reliquia.parpadea_fondo
00:0000848D X fin_efecto_imagen_tira_reliquia
00:0000848D   pinta_obj_ayuda
00:000084B3 X fin_pinta_obj_ayuda
00:000084B3   carga_patrones_sprites_nivel
00:000084BD X fin_carga_patrones_sprites_nivel
00:000084BE   carga_patrones_nivel_comunes
00:000084CA X fin_carga_patrones_nivel_comunes
00:000084CA   carga_patrones_sprites_nivel1
00:000084CA X fin_carga_patrones_sprites
00:000084CB   render_sprites
00:000084D7 X fin_actualiza_array_sprites_vram
00:000084D7   vuelca_resultado_puntomira_array
00:000084FC X vuelca_resultado_puntomira_array.codigo_color_1
00:00008505   vuelca_resultado_puntomira_array.codigo_color_2
00:0000850E X fin_vuelca_resultado_puntomira_array
00:0000850E   check_player
00:0000852D X f
00:0000852E   mueve_arriba
00:00008539   mueve_arriba.no_decrementa_y
00:0000853A X fin_mueve_arriba
00:0000853B   mueve_derecha
00:00008548   mueve_derecha.no_incrementa_x
00:00008549 X fin_mueve_derecha
00:0000854A   mueve_abajo
00:00008557   mueve_abajo.no_incrementa_y
00:00008558 X fin_mueve_abajo
00:00008559   mueve_izquierda
00:00008564   mueve_izquierda.no_decrementa_x
00:00008565 X fin_mueve_izquierda
00:00008566   mira_disparo
00:00008566 X mira_disparo.mira_boton_pulsado1
00:00008573 X mira_disparo.no_efectua_disparo
00:0000857E   mira_disparo.efectua_disparo
00:00008590   mira_disparo.fin_mira_disparo1
00:00008591   mira_disparo.mira_boton_pulsado2
00:000085AD X fin_mira_disparo
00:000085AD   update_controllers_status
00:000085E4   read_joy_0
00:000085F8   check_8th_keyboard_row
00:00008606   check_4th_keyboard_row
00:00008614 X inicializa_replayer_efectos_interrupciones
00:0000862D X fin_inicializa_replayer_efectos_interrupciones
00:0000862E   subrutina_isr
00:00008637 X fin_subrutina_isr
00:00008637 X subrutinas_sonido
00:00000000   CHNPRM_PsInOr
00:00000001   CHNPRM_PsInSm
00:00000002   CHNPRM_CrAmSl
00:00000003   CHNPRM_CrNsSl
00:00000004   CHNPRM_CrEnSl
00:00000005   CHNPRM_TSlCnt
00:00000006   CHNPRM_CrTnSl
00:00000008   CHNPRM_TnAcc
00:0000000A   CHNPRM_COnOff
00:0000000B   CHNPRM_OnOffD
00:0000000C   CHNPRM_OffOnD
00:0000000D   CHNPRM_OrnPtr
00:0000000F   CHNPRM_SamPtr
00:00000011   CHNPRM_NNtSkp
00:00000012   CHNPRM_Note
00:00000013   CHNPRM_SlToNt
00:00000014   CHNPRM_Env_En
00:00000015   CHNPRM_Flags
00:00000016   CHNPRM_TnSlDl
00:00000017   CHNPRM_TSlStp
00:00000019   CHNPRM_TnDelt
00:0000001B   CHNPRM_NtSkCn
00:0000001C   CHNPRM_Volume
00:0000001D X CHNPRM_Size
00:00000000   AR_TonA
00:00000002   AR_TonB
00:00000004   AR_TonC
00:00000006   AR_Noise
00:00000007   AR_Mixer
00:00000008   AR_AmplA
00:00000009   AR_AmplB
00:0000000A   AR_AmplC
00:0000000B   AR_Env
00:0000000D   AR_EnvTp
00:00008637   CHECKLP
00:00008648 X PT3_MUTE
00:00008654   PT3_INIT
00:00008693   PT3_INIT.TP_0
00:0000869F   PT3_INIT.TP_1
00:000086A6   PT3_INIT.TP_2
00:00008714   PT3_INIT.L1
00:00008721   PT3_INIT.L2
00:00008725 X PT3_INIT.L3
00:0000874C   PT3_INIT.CORR_1
00:0000875A   PT3_INIT.CORR_2
00:00008761   PT3_INIT.TC_EXIT
00:0000876C   PT3_INIT.INITV1
00:00008774   PT3_INIT.INITV2
00:00008788   PT3_INIT.INITV3
00:0000878C   PD_OrSm
00:00008796   PD_SAM
00:00008797   PD_SAM_
00:000087AD   PD_VOL
00:000087B6   PD_EOff
00:000087BE   PD_SorE
00:000087C8   PD_ENV
00:000087CD   PD_ORN
00:000087D2   PD_ESAM
00:000087DF   PTDECOD
00:000087EE   PD_LOOP
00:000087F1   PD_LP2
00:0000881E   PD_NOIS
00:00008823   PD_REL
00:00008829   PD_NOTE
00:00008831   PD_RES
00:00008843   PD_FIN
00:0000884A   C_PORTM
00:00008895   C_PORTM.NOSIG
00:0000889F   SET_STP
00:000088AB   C_GLISS
00:000088BE   C_SMPOS
00:000088C4   C_ORPOS
00:000088CA   C_VIBRT
00:000088E2   C_ENGLS
00:000088F4   C_DELAY
00:000088FA   SETENV
00:00008915   C_NOP
00:00008916   SETORN
00:0000892F   SPCCOMS
00:0000894F   CHREGS
00:00008972   CHREGS.CH_ORPS
00:0000897D   CHREGS.CH_NTP
00:00008983   CHREGS.CH_NOK
00:0000899E   CHREGS.CH_SMPS
00:000089B4   CHREGS.CH_NOAC
00:000089FB   CHREGS.CH_STPP
00:00008A10   CHREGS.CH_AMP
00:00008A22   CHREGS.CH_AMIN
00:00008A27   CHREGS.CH_SVAM
00:00008A2A   CHREGS.CH_NOAM
00:00008A33   CHREGS.CH_APOS
00:00008A39   CHREGS.CH_VOL
00:00008A44 X CHREGS.CH_ENV
00:00008A4B   CHREGS.CH_NOEN
00:00008A65   CHREGS.NO_ENAC
00:00008A6C   CHREGS.NO_ENSL
00:00008A7A   CHREGS.CH_MIX
00:00008A7E   CHREGS.CH_EXIT
00:00008A9D   CHREGS.CH_ONDL
00:00008AA1   PT3_PLAY
00:00008AD5   PT3_PLAY.PLNLP
00:00008AFC   PT3_PLAY.PL1A
00:00008B07   PT3_PLAY.PL1B
00:00008B1C   PT3_PLAY.PL1C
00:00008B31   PT3_PLAY.PL1D
00:00008B37   PT3_PLAY.PL2
00:00008B99   PT3_ROUT
00:00008B9A   ROUT_A0
00:00008BA6   ROUT_A0.LOUT
00:00008BBA   NT_DATA
00:00008BCA   T_
00:00008BCA   TCOLD_0
00:00008BD6   TCNEW_1
00:00008BD6   TCOLD_1
00:00008BD8   TCOLD_2
00:00008BEA   TCNEW_3
00:00008BEB   TCOLD_3
00:00008BF4   TCNEW_0
00:00008BFF   TCNEW_2
00:00008C0A   EMPTYSAMORN
00:00008C0E   T_PACK
00:00000000 X AYFXRELATIVE
00:00008C43   ayFX_SETUP
00:00008C4F   ayFX_END
00:00008C55   ayFX_INIT
00:00008C66   ayFX_INIT.CHECK_PRI
00:00008C87   ayFX_INIT.INIT_END
00:00008C8B   ayFX_PLAY
00:00008C9F   ayFX_PLAY.TAKECB
00:00008CB0   ayFX_PLAY.CHECK_NN
00:00008CBD   ayFX_PLAY.SETPOINTER
00:00008CD1   ayFX_PLAY.SETMASKS
00:00008CDF X ayFX_PLAY.CHK1
00:00008CE1 X ayFX_PLAY.PLAY_C
00:00008CEE   ayFX_PLAY.CHK2
00:00008CF3 X ayFX_PLAY.PLAY_B
00:00008D00   ayFX_PLAY.CHK3
00:00008D03 X ayFX_PLAY.PLAY_A
00:00008D10   ayFX_PLAY.SETMIXER
00:00008D20   song
00:00009688   sfx_bank
00:000096D3   depack_VRAM
00:00009700   literal
00:00009705   loop
00:0000970E X getlen
00:00009714   lus
00:00009731   lenok
00:0000973E   mode7
00:00009744   mode6
00:0000974A   mode5
00:00009750   mode4
00:00009756   mode3
00:0000975C   mode2
00:0000976C   offsok
00:00009777   offsok.loop
00:00009799   getbit
00:0000979D   getbitexx
00:000097A3   Depack_out
00:000097A5   modes
00:00000000 X ESTRUCTURA_PUNTOMIRA.posx
00:00000001 X ESTRUCTURA_PUNTOMIRA.posy
00:00000002 X ESTRUCTURA_PUNTOMIRA.escena
00:00000003 X ESTRUCTURA_PUNTOMIRA.velocidad
00:00000004 X ESTRUCTURA_PUNTOMIRA.boton2_pressed
00:00000005 X ESTRUCTURA_PUNTOMIRA.cadencia
00:00000006 X ESTRUCTURA_PUNTOMIRA.pm_aux1
00:00000007 X ESTRUCTURA_PUNTOMIRA.pm_aux2
00:00000008 X ESTRUCTURA_PUNTOMIRA.pm_aux3
00:00000009 X ESTRUCTURA_PUNTOMIRA.pm_aux4
00:0000000A X ESTRUCTURA_PUNTOMIRA.pm_aux5
00:0000000B X ESTRUCTURA_PUNTOMIRA.pm_aux6
00:0000000C X ESTRUCTURA_PUNTOMIRA.pm_aux7
00:0000000D X ESTRUCTURA_PUNTOMIRA.pm_aux8
00:0000000E X ESTRUCTURA_PUNTOMIRA.pm_aux9
00:0000000F X ESTRUCTURA_PUNTOMIRA.pm_aux10
00:00000010 X ESTRUCTURA_PUNTOMIRA
00:00000000 X ESTRUCTURA_ENEMIGO.tipo
00:00000001 X ESTRUCTURA_ENEMIGO.posx
00:00000002 X ESTRUCTURA_ENEMIGO.posy
00:00000003 X ESTRUCTURA_ENEMIGO.color
00:00000004 X ESTRUCTURA_ENEMIGO.escena
00:00000005 X ESTRUCTURA_ENEMIGO.contador_siguiente_escena
00:00000006 X ESTRUCTURA_ENEMIGO.reset_contador
00:00000007 X ESTRUCTURA_ENEMIGO.dano
00:00000008 X ESTRUCTURA_ENEMIGO.energia
00:00000009 X ESTRUCTURA_ENEMIGO.ver_hor
00:0000000A X ESTRUCTURA_ENEMIGO.manejador_dibujo
00:0000000C X ESTRUCTURA_ENEMIGO.en_aux3
00:0000000D X ESTRUCTURA_ENEMIGO.en_aux4
00:0000000E   ESTRUCTURA_ENEMIGO
00:00000000 X ESTRUCTURA_AYUDA.activo
00:00000001 X ESTRUCTURA_AYUDA.tipo
00:00000002 X ESTRUCTURA_AYUDA.tipousado
00:00000003 X ESTRUCTURA_AYUDA.postile
00:00000004 X ESTRUCTURA_AYUDA.posx
00:00000005 X ESTRUCTURA_AYUDA.posy
00:00000006 X ESTRUCTURA_AYUDA.sub_accion
00:00000008   ESTRUCTURA_AYUDA
00:000097B3 X sprites_pantantalla
00:000097B3   sprites_comunes
00:000097B3 X sprite_punto_mira_1
00:000097D3 X sprite_punto_mira_2
00:000097F3 X sprite_punto_mira_1_mejorado
00:00009813 X sprite_punto_mira_2_mejorado
00:00009833 X sprite_explosion_1
00:00009853 X sprite_explosion_2
00:00009873   fin_sprites_comunes
00:00009873 X sprite_arana1_1
00:00009893 X sprite_arana1_2
00:000098B3 X sprite_murcielago1_1
00:000098D3 X sprite_murcielago1_2
00:000098F3 X sprite_serpiente1_1
00:00009913 X sprite_serpiente1_2
00:00009933 X sprite_serpiente2_1
00:00009953 X sprite_serpiente2_2
00:00009973 X sprite_zombi1_1_1
00:00009993 X sprite_zombi1_2_1
00:000099B3 X sprite_zombi1_3_1
00:000099D3 X sprite_zombi1_4_1
00:000099F3 X sprite_zombi1_1_2
00:00009A13 X sprite_zombi1_2_2
00:00009A33 X sprite_zombi1_3_2
00:00009A53 X sprite_zombi1_4_2
00:00009A73 X sprite_zombi2_1_1
00:00009A93 X sprite_zombi2_2_1
00:00009AB3 X sprite_zombi2_3_1
00:00009AD3 X sprite_zombi2_4_1
00:00009AF3 X sprite_zombi2_1_2
00:00009B13 X sprite_zombi2_2_2
00:00009B33 X sprite_zombi2_3_2
00:00009B53 X sprite_zombi2_4_2
00:00009B73 X sprite_caballero1_1_1
00:00009B93 X sprite_caballero1_2_1
00:00009BB3 X sprite_caballero1_3_1
00:00009BD3 X sprite_caballero1_4_1
00:00009BF3 X sprite_caballero1_1_2
00:00009C13 X sprite_caballero1_2_2
00:00009C33 X sprite_caballero1_3_2
00:00009C53 X sprite_caballero1_4_2
00:00009C73 X sprite_caballero2_1_1
00:00009C93 X sprite_caballero2_2_1
00:00009CB3 X sprite_caballero2_3_1
00:00009CD3 X sprite_caballero2_4_1
00:00009CF3 X sprite_caballero2_1_2
00:00009D13 X sprite_caballero2_2_2
00:00009D33 X sprite_caballero2_3_2
00:00009D53 X sprite_caballero2_4_2
00:00009D73 X sprite_llama1_1
00:00009D93 X sprite_llama2_1
00:00009DB3 X sprite_llama1_2
00:00009DD3 X sprite_llama2_2
00:00009DF3 X sprite_fantasma1_1
00:00009E13 X sprite_fantasma2_1
00:00009E33 X sprite_fantasma1_2
00:00009E53 X sprite_fantasma2_2
00:00009E73 X sprite_magia1_1
00:00009E93 X sprite_magia2_1
00:00009EB3 X sprite_magia1_2
00:00009ED3 X sprite_magia2_2
00:00009EF3 X sprite_beholder1_1
00:00009F13 X sprite_beholder2_1
00:00009F33 X sprite_beholder3_1
00:00009F53 X sprite_beholder4_1
00:00009F73 X sprite_beholder1_2
00:00009F93 X sprite_beholder2_2
00:00009FB3 X sprite_beholder3_2
00:00009FD3 X sprite_beholder4_2
00:00009FF3 X sprite_vampiro1_1
00:0000A013 X sprite_vampiro2_1
00:0000A033 X sprite_vampiro1_2
00:0000A053 X sprite_vampiro2_2
00:0000A073 X sprite_manoizq1
00:0000A093 X sprite_manoizq2
00:0000A0B3 X sprite_manoizq3
00:0000A0D3 X sprite_manoder1
00:0000A0F3 X sprite_manoder2
00:0000A113 X sprite_manoder3
00:0000A133   habitacion_actual
00:0000A134   habitacion_extras
00:0000A135   habitaciones_juego
00:0000A135 X habitaciones_nivel0
00:0000A1A5 X habitaciones_nivel1
00:0000A215 X habitaciones_nivel2
00:0000A285 X habitaciones_nivel3
00:0000A2F5 X habitaciones_nivel4
00:0000A365 X habitaciones_nivel5
00:0000A3D5 X habitaciones_nivel6
00:0000A445   color_base
00:0000A448   color_bomba1
00:0000A44B   color_bomba2
00:0000A44E X prota
00:0000A44E   prota.posx
00:0000A44F   prota.posy
00:0000A450   prota.escena
00:0000A451 X prota.velocidad
00:0000A452 X prota.boton2_pressed
00:0000A453   prota.cadencia
00:0000A454 X prota.pm_aux1
00:0000A455 X prota.pm_aux2
00:0000A456 X prota.pm_aux3
00:0000A457 X prota.pm_aux4
00:0000A458 X prota.pm_aux5
00:0000A459 X prota.pm_aux6
00:0000A45A X prota.pm_aux7
00:0000A45B X prota.pm_aux8
00:0000A45C X prota.pm_aux9
00:0000A45D X prota.pm_aux10
00:0000A45E   prota_nivel
00:0000A45F   prota_vidas
00:0000A460   prota_reliquias
00:0000A461   prota_pos_mapx
00:0000A462   prota_pos_mapy
00:0000A463   prota_energia
00:0000A464   array_aux_vidas
00:0000A46C   array_aux_reliquias
00:0000A474   array_aux_energia
00:0000A47B   ultimo_pos_array_aux_energia
00:0000A47C   array_aux_mapa_limpiar
00:0000A483   elemento_pintar_mapa
00:0000A484   array_puerta_arriba
00:0000A484 X array_puerta_arriba1
00:0000A488 X array_puerta_arriba2
00:0000A48C X array_puerta_arriba3
00:0000A490 X array_puerta_arriba4
00:0000A494 X array_puerta_arriba5
00:0000A498   array_puerta_derecha
00:0000A498 X array_puerta_derecha1
00:0000A49B X array_puerta_derecha2
00:0000A49E X array_puerta_derecha3
00:0000A4A1 X array_puerta_derecha4
00:0000A4A4 X array_puerta_derecha5
00:0000A4A7 X array_puerta_derecha6
00:0000A4AA X array_puerta_derecha7
00:0000A4AD   array_puerta_abajo
00:0000A4B1   array_puerta_izquierda
00:0000A4B1 X array_puerta_izquierda1
00:0000A4B4 X array_puerta_izquierda2
00:0000A4B7 X array_puerta_izquierda3
00:0000A4BA X array_puerta_izquierda4
00:0000A4BD X array_puerta_izquierda5
00:0000A4C0 X array_puerta_izquierda6
00:0000A4C3 X array_puerta_izquierda7
00:0000A4C6   pos_ayudas
00:0000A4D6   array_ayudas
00:0000A4D6 X array_oracionon
00:0000A4D8 X array_oracionon1
00:0000A4DA X array_oracionoff
00:0000A4DC X array_oracionoff1
00:0000A4DE X array_cruzon
00:0000A4E0 X array_cruzon1
00:0000A4E2 X array_cruzoff
00:0000A4E4 X array_cruzoff1
00:0000A4E6 X array_aguaon
00:0000A4E8 X array_aguaon1
00:0000A4EA X array_aguaoff
00:0000A4EC X array_aguaoff1
00:0000A4EE X array_armaduraon
00:0000A4F0 X array_armaduraon1
00:0000A4F2 X array_armaduraoff
00:0000A4F4 X array_armaduraoff1
00:0000A4F6 X array_plantaon
00:0000A4F8 X array_plantaon1
00:0000A4FA X array_plantaoff
00:0000A4FC X array_plantaoff1
00:0000A4FE X array_extraon
00:0000A500 X array_extraon1
00:0000A502 X array_extraoff
00:0000A504 X array_extraoff1
00:0000A506 X array_ballestaon
00:0000A508 X array_ballestaon1
00:0000A50A X array_ballestaoff
00:0000A50C X array_ballestaoff1
00:0000A50E   lista_ayudas
00:0000A546   array_sprites
00:0000A546   array_sprites_pm
00:0000A54E X array_sprites_enem
00:0000A5C6 X lista_enemigos
00:0000A652 X puntero_array_atrib_array_VRAM
00:0000A654   tiles_patrones_nivel0
00:0000A809   tiles_color_nivel0
00:0000A850   tiles_mapa_nivel0
00:0000A885   tiles_patrones_nivel1
00:0000AA3A   tiles_color_nivel1
00:0000AA81   tiles_mapa_nivel1
00:0000AAB6   tiles_patrones_nivel2
00:0000AC6B   tiles_color_nivel2
00:0000ACB2   tiles_mapa_nivel2
00:0000ACE7   tiles_patrones_nivel3
00:0000AE9C   tiles_color_nivel3
00:0000AEE3   tiles_mapa_nivel3
00:0000AF18   tiles_patrones_nivel4
00:0000B0CD   tiles_color_nivel4
00:0000B114   tiles_mapa_nivel4
00:0000B149   tiles_patrones_nivel5
00:0000B2FE   tiles_color_nivel5
00:0000B345   tiles_mapa_nivel5
00:0000B37A   tiles_patrones_nivel6
00:0000B52F   tiles_color_nivel6
00:0000B576   tiles_mapa_nivel6
00:0000B5AB   tiles_patrones_marcador
00:0000B6F7   tiles_color_marcador
00:0000B72C   tiles_mapa_marcador
00:0000B78E   END


 Output: t4.out
-------------------------------------------------

 Page: 00
  Org: 00008000  Size: *  Used: 00000000

    No output

 Output: t4.bin
-------------------------------------------------

 Page: 00
  Org: 00008000  Size: *  Used: 00003795

   Address   Length Align   Label
   00008000   14229         START
