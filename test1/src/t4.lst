Sjasm Z80 Assembler v0.42c - www.xl2s.tk             [2021.09.11 - 12:11:09]

t4.asm
Errors: 0

       1   00:0000                      	OUTPUT	"t4.bin"
       2   00:8000                      	
       3   00:8000                      ;;=====================================================
       4   00:8000                      ;;DEFINICIÓN DE CONSTANTES
       5   00:8000                      ;;=====================================================	
       6   00:8000                      	include "constantes.asm"
       1.  00:8000                      ;;=====================================================
       2.  00:8000                      ;; FICHERO constantes.asm
       3.  00:8000                      ;;=====================================================
       4.  00:8000                      
       5.  00:8000                      ;;ETIQUETAS/CONSTANTES BIOS TECLADO
       6.  00:8000  (00:00D8)           GTTRIG		equ		#00D8	;Returns current trigger status
       7.  00:8000  (00:00D5)           GTSTCK		equ		#00D5	;Returns the joystick/cursors status
       8.  00:8000  (00:F3DB)           CLIKSW		equ		#F3DB	;deshabilita el sonido de clic cuando se pulsa una tecla
       9.  00:8000                      
      10.  00:8000                      ;;ETIQUETAS/CONSTANTES BIOS VDP
      11.  00:8000  (00:013E)           RDVDP		equ		#013E	;lee registro status VDP
      12.  00:8000  (00:0047)           WRTVDP		equ		#0047	;escribe registros del VDP
      13.  00:8000  (00:005C)           LDIRVM		equ		#005C	;RAM/ROM -> VRAM
      14.  00:8000  (00:0059)           LDIRMV		equ		#0059	;VRAM -> RAM
      15.  00:8000  (00:005F)           CHGMOD		equ		#005F	;cambia modo pantalla (screen mode)
      16.  00:8000  (00:0041)           DISSCR  	equ		#0041	;desactiva pantanlla
      17.  00:8000  (00:0044)           ENASCR  	equ		#0044	;activa pantalla
      18.  00:8000  (00:0062)           CHGCLR  	equ		#0062	;cambia color de pantalla (toca A y direcciones)
      19.  00:8000  (00:F3E9)           FORCLR		equ		#F3E9	;zona memoria color foreground
      20.  00:8000  (00:F3EA)           BAKCLR  	equ		#F3EA	;zona memoria color background
      21.  00:8000  (00:F3EB)           BDRCLR 		equ		#F3EB	;zona memoria bordercolor
      22.  00:8000  (00:00C3)           CLS			equ		#00C3	;limpia pantalla (necesita A=0)
      23.  00:8000                      
      24.  00:8000                      ;;ETIQUETAS/CONSTANTES REGISTROS VDP
      25.  00:8000  (00:F3DF)           RG0SAV		equ		#F3DF	;Mirror of VDP register 0 (Basic: VDP(0))
      26.  00:8000  (00:F3E0)           RG1SAV		equ		#F3E0	;Mirror of VDP register 1 (Basic: VDP(1))
      27.  00:8000  (00:F3E1)           RG2SAV		equ		#F3E1	;Mirror of VDP register 2 (Basic: VDP(2))
      28.  00:8000  (00:F3E2)           RG3SAV		equ		#F3E2	;Mirror of VDP register 3 (Basic: VDP(3))
      29.  00:8000  (00:F3E3)           RG4SAV		equ		#F3E3	;Mirror of VDP register 4 (Basic: VDP(4))
      30.  00:8000  (00:F3E4)           RG5SAV		equ		#F3E4	;Mirror of VDP register 5 (Basic: VDP(5))
      31.  00:8000  (00:F3E5)           RG6SAV		equ		#F3E5	;Mirror of VDP register 6 (Basic: VDP(6))
      32.  00:8000  (00:F3E6)           RG7SAV		equ		#F3E6	;Mirror of VDP register 7 (Basic: VDP(7))
      33.  00:8000  (00:F3E7)           STATFL		equ		#F3E7	;Mirror of VDP(8) status register (S#0)
      34.  00:8000                      
      35.  00:8000  (00:0099)           REGEST		equ		#0099	;registro de estado para escribir directamente en VRAM
      36.  00:8000  (00:0098)           REGESCVDP	equ		#0098	;registro donde escribir valor para VRAM
      37.  00:8000                      
      38.  00:8000                      ;;ETIQUETAS/CONSTANTES REGISTROS PSG (PARA JOYSTICK)
      39.  00:8000  (00:00A0)           PSG_A  equ  0a0h  ;reg address
      40.  00:8000  (00:00A1)           PSG_W  equ  0a1h  ;reg data WR
      41.  00:8000  (00:00A2)           PSG_R  equ  0a2h  ;reg data
      42.  00:8000                      
      43.  00:8000                      
      44.  00:8000                      ;;ETIQUETAS DE ZONAS DE MEMORIA DE LA VPD (MSX1)
      45.  00:8000  (00:0000)           CHRTBL		equ		#0000
      46.  00:8000  (00:1800)           TILMAP		equ		#1800
      47.  00:8000  (00:1900)           TILMAPBANK1 equ		#1900
      48.  00:8000  (00:1B00)           SPRART		equ		#1B00
      49.  00:8000  (00:2000)           CLRTBL		equ		#2000
      50.  00:8000  (00:3800)           SPRTBL		equ		#3800
      51.  00:8000                      
      52.  00:8000                      
      53.  00:8000                      ;;ETIQUETAS ESTANDAR PARA DAR MÁS CLARIDAD AL CODIGO
      54.  00:8000  (00:0001)           SI			equ		1
      55.  00:8000  (00:0000)           NO			equ		0
      56.  00:8000  (00:0004)           LIMCADENCIA equ		4	;nº de veces que se ejecutará el disparo antes de ejecutar un disparo real (porque cuando se pulsa la tecl dispara 3 ó 4 veces de rápido que va)
      57.  00:8000                      ;hay que estudiar si 3 es un nº mejor
      58.  00:8000                      
      59.  00:8000                      
      60.  00:8000                      
      61.  00:8000                      ;;PALETA DE COLORES DEL MSX
      62.  00:8000  (00:0000)           COLTRASP	equ		0
      63.  00:8000  (00:0001)           COLNEGRO	equ		1
      64.  00:8000  (00:0002)           COLVERDE	equ		2
      65.  00:8000  (00:0003)           COLVERCLA	equ		3
      66.  00:8000  (00:0004)           COLAZULOSC	equ		4
      67.  00:8000  (00:0005)           COLAZULLA	equ		5
      68.  00:8000  (00:0006)           COLROJOOSC	equ		6
      69.  00:8000  (00:0007)           COLCYAN		equ		7
      70.  00:8000  (00:0008)           COLROJO		equ		8
      71.  00:8000  (00:0009)           COLROJOCLA	equ		9
      72.  00:8000  (00:000A)           COLAMAROSC	equ		10
      73.  00:8000  (00:000B)           COLAMARCLA	equ		11
      74.  00:8000  (00:000C)           COLVERDOSC	equ		12
      75.  00:8000  (00:000D)           COLMAGENTA	equ		13
      76.  00:8000  (00:000E)           COLGRIS		equ		14
      77.  00:8000  (00:000F)           COLBLANCO	equ		15
      78.  00:8000                      
      79.  00:8000                      
      80.  00:8000                      
      81.  00:8000                      ;;ETIQUETAS ESPECIFICAS PARA DAR MÁS CLARIDAD AL CODIGO (relacionadas con posiciones en mapa vdp)
      82.  00:8000  (00:02F8)           POSMAPLIN1  equ		#02F8
      83.  00:8000  (00:02D8)           POSMAPLIN2  equ		#02D8
      84.  00:8000  (00:02B8)           POSMAPLIN3  equ		#02B8
      85.  00:8000  (00:0298)           POSMAPLIN4  equ		#0298
      86.  00:8000  (00:0278)           POSMAPLIN5  equ		#0278
      87.  00:8000  (00:0258)           POSMAPLIN6  equ		#0258
      88.  00:8000  (00:0238)           POSMAPLIN7  equ		#0238
      89.  00:8000                      
      90.  00:8000  (00:000D)           POSCARAMAP	equ		#000D
      91.  00:8000  (00:0248)           POSVIDAS	equ		#0248
      92.  00:8000  (00:0011)           POSRELIMAP	equ		#0011
      93.  00:8000  (00:02C8)           POSRELIQ	equ		#02C8
      94.  00:8000  (00:0288)           POSENERG	equ		#0288
      95.  00:8000  (00:02B4)           POSNIVEL	equ		#02B4
      96.  00:8000  (00:0238)           POSMAPA		equ 	#0238
      97.  00:8000                      
      98.  00:8000  (00:01EE)           POSPUERABAJ equ		#01EE
      99.  00:8000  (00:008E)           POSPUERARRI equ		#008E
     100.  00:8000  (00:00FC)           POSPUERDERE equ		#00FC
     101.  00:8000  (00:00E1)           POSPUERIZQU equ		#00E1
     102.  00:8000                      
     103.  00:8000  (00:0000)           ORACIONON	equ		0
     104.  00:8000  (00:0004)           ORACIONOFF  equ		4
     105.  00:8000  (00:0008)           CRUZON		equ		8
     106.  00:8000  (00:000C)           CRUZOFF		equ		12
     107.  00:8000  (00:0010)           AGUAON		equ		16
     108.  00:8000  (00:0014)           AGUAOFF		equ		20
     109.  00:8000  (00:0018)           ARMADON		equ		24
     110.  00:8000  (00:001C)           ARMADOFF	equ		28
     111.  00:8000  (00:0020)           PLANTAON	equ		32
     112.  00:8000  (00:0024)           PLANTAOFF	equ		36
     113.  00:8000  (00:0028)           VIDAEXTON	equ		40
     114.  00:8000  (00:002C)           VIDAEXTOFF	equ		44
     115.  00:8000  (00:0030)           BALLESON	equ		48
     116.  00:8000  (00:0034)           BALLESOFF	equ		52
     117.  00:8000  (00:0000)           INACTIVO	equ		0
     118.  00:8000                      
     119.  00:8000                      ;;ETIQUETAS ESPECIFICAS PARA DAR MÁS CLARIDAD AL CODIGO (relacionadas con posiciones en en el banco de memoria)
     120.  00:8000  (00:0013)           TILEPROTAM  equ		19		;tile del prota para pintar en mapa
     121.  00:8000  (00:0009)           TILEGRISM	equ		9		;tile gris que representa vacio (por donde el prota va pasando)
     122.  00:8000  (00:0010)           TILEMAPROJO equ		16
     123.  00:8000  (00:000F)           TILEMAPAMAR equ		15
     124.  00:8000  (00:000E)           TILEMAPVERD equ		14
     125.  00:8000                      
     126.  00:8000                      
     127.  00:8000                      ;;ETIQUETAS ESPECIFICAS PARA DAR MÁS CLARIDAD AL CODIGO (generales)
     128.  00:8000  (00:0008)           NMAXVIDREL	equ		8		;el número máximo de vidas y de reliquias es de 8
     129.  00:8000  (00:0007)           NHABNIVEL	equ		7
     130.  00:8000  (00:00F8)           MAXENERGIA  equ		248
     131.  00:8000  (00:00D9)           TILEENERG8  equ		217
     132.  00:8000  (00:00BA)           TILEENERG7  equ		186
     133.  00:8000  (00:009B)           TILEENERG6  equ		155
     134.  00:8000  (00:007C)           TILEENERG5  equ		124
     135.  00:8000  (00:005D)           TILEENERG4  equ		93
     136.  00:8000  (00:003E)           TILEENERG3  equ		62
     137.  00:8000  (00:001F)           TILEENERG2  equ		31
     138.  00:8000  (00:0000)           TILENEGRO	equ		0
     139.  00:8000                      
     140.  00:8000                      ;limites
     141.  00:8000  (00:0000)           LIMPANTIZQ  equ		0
     142.  00:8000  (00:00FF)           LIMPANTDER  equ		255
     143.  00:8000  (00:0000)           LIMPANTARR  equ		0
     144.  00:8000  (00:0080)           LIMPANTABA  equ		128
     145.  00:8000                      
     146.  00:8000                      
     147.  00:8000                      ;matriz de 7x7 empieza en 0, y fila y x col, cuento desde esquina sup izq
     148.  00:8000  (00:0006)           BASEMAPY	equ		6
     149.  00:8000  (00:0003)           BASEMAPX	equ		3
     150.  00:8000                      
     151.  00:8000                      
     152.  00:8000                      
     153.  00:8000                      ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
     154.  00:8000                      ;; CONSTANTES PARA INTERRUPCIONES
     155.  00:8000                      ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
     156.  00:8000  (00:FD9A)           H.KEYI		equ     	#FD9A
     157.  00:8000  (00:FD9F)           H.TIMI	 	equ     	#FD9F
     158.  00:8000                      
     159.  00:8000                      
     160.  00:8000                      ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
     161.  00:8000                      ;; CONSTANTES PARA SONIDO 
     162.  00:8000                      ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
     163.  00:8000                      
     164.  00:8000  (F000)              	map		#f000
     165.  00:8000                      
     166.  00:8000                      ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;PT3 REPLAYER
     167.  00:8000  (00:F000)           PT3_SETUP:		#1	;set bit0 to 1, if you want to play without looping
     168.  00:8000                      					;bit7 is set each time, when loop point is passed
     169.  00:8000  (00:F001)           PT3_MODADDR:	#2
     170.  00:8000  (00:F003)           PT3_CrPsPtr:	#2
     171.  00:8000  (00:F005)           PT3_SAMPTRS:	#2
     172.  00:8000  (00:F007)           PT3_OrnPtrs:	#2
     173.  00:8000  (00:F009)           PT3_PDSP:		#2
     174.  00:8000  (00:F00B)           PT3_CSP:		#2
     175.  00:8000  (00:F00D)           PT3_PSP:		#2
     176.  00:8000  (00:F00F)           PT3_PrNote:		#1
     177.  00:8000  (00:F010)           PT3_PrSlide:	#2
     178.  00:8000  (00:F012)           PT3_AdInPtA:	#2
     179.  00:8000  (00:F014)           PT3_AdInPtB:	#2
     180.  00:8000  (00:F016)           PT3_AdInPtC:	#2
     181.  00:8000  (00:F018)           PT3_LPosPtr:	#2
     182.  00:8000  (00:F01A)           PT3_PatsPtr:	#2
     183.  00:8000  (00:F01C)           PT3_Delay:		#1
     184.  00:8000  (00:F01D)           PT3_AddToEn:	#1
     185.  00:8000  (00:F01E)           PT3_Env_Del:	#1
     186.  00:8000  (00:F01F)           PT3_ESldAdd:	#2
     187.  00:8000  (00:F021)           PT3_NTL3:		#2	; AND A / NOP (note table creator)
     188.  00:8000                      
     189.  00:8000  (00:F023)           VARS:			#0
     190.  00:8000                      
     191.  00:8000  (00:F023)           ChanA:			#29			;CHNPRM_Size
     192.  00:8000  (00:F040)           ChanB:			#29			;CHNPRM_Size
     193.  00:8000  (00:F05D)           ChanC:			#29			;CHNPRM_Size
     194.  00:8000                      
     195.  00:8000                      ;GlobalVars
     196.  00:8000  (00:F07A)           DelyCnt:		#1
     197.  00:8000  (00:F07B)           CurESld:		#2
     198.  00:8000  (00:F07D)           CurEDel:		#1
     199.  00:8000  (00:F07E)           Ns_Base_AddToNs:	#0
     200.  00:8000  (00:F07E)           Ns_Base:		#1
     201.  00:8000  (00:F07F)           AddToNs:		#1
     202.  00:8000                      
     203.  00:8000  (00:F080)           NT_:			#192	; Puntero a/tabla de frecuencias
     204.  00:8000                      
     205.  00:8000  (00:F140)           AYREGS:			#0
     206.  00:8000  (00:F140)           VT_:			#14
     207.  00:8000  (00:F14E)           EnvBase:		#2
     208.  00:8000  (00:F150)           VAR0END:		#0
     209.  00:8000                      
     210.  00:8000  (00:F150)           T1_:			#0		
     211.  00:8000  (00:F150)           T_NEW_1:		#0
     212.  00:8000  (00:F150)           T_OLD_1:		#24
     213.  00:8000  (00:F168)           T_OLD_2:		#24
     214.  00:8000  (00:F180)           T_NEW_3:		#0
     215.  00:8000  (00:F180)           T_OLD_3:		#2
     216.  00:8000  (00:F182)           T_OLD_0:		#0
     217.  00:8000  (00:F182)           T_NEW_0:		#24
     218.  00:8000  (00:F19A)           T_NEW_2:		#166
     219.  00:8000                      ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;PT3 REPLAYER END
     220.  00:8000                      
     221.  00:8000                      ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ayFX REPLAYER 
     222.  00:8000  (00:F240)           ayFX_MODE:		#1			; ayFX mode
     223.  00:8000  (00:F241)           ayFX_BANK:		#2			; Current ayFX Bank
     224.  00:8000  (00:F243)           ayFX_PRIORITY:	#1			; Current ayFX stream priotity
     225.  00:8000  (00:F244)           ayFX_POINTER:	#2			; Pointer to the current ayFX stream
     226.  00:8000  (00:F246)           ayFX_TONE:		#2			; Current tone of the ayFX stream
     227.  00:8000  (00:F248)           ayFX_NOISE:		#1			; Current noise of the ayFX stream
     228.  00:8000  (00:F249)           ayFX_VOLUME:	#1			; Current volume of the ayFX stream
     229.  00:8000  (00:F24A)           ayFX_CHANNEL:	#1			; PSG channel to play the ayFX stream
     230.  00:8000                      
     231.  00:8000                      	;IF (AYFXRELATIVE == 1 ) 
     232.  00:8000                      ;ayFX_VT:	ds	2			; ayFX relative volume table pointer
     233.  00:8000                      	;ENDIF
     234.  00:8000                      ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ayFX REPLAYER END
     235.  00:8000                      
     236.  00:8000                      
     237.  00:8000                      
       7   00:8000                      
       8   00:8000                      ;;=====================================================
       9   00:8000                      ;;DEFINICIÓN DE CABECERA DE ARCHIVO BIN
      10   00:8000                      ;;=====================================================		
      11   00:8000                      	include "cabecerabin.asm"
       1.  00:8000                      ;;=====================================================
       2.  00:8000                      ;; FICHERO cabecera.asm
       3.  00:8000                      ;;=====================================================
       4.  00:8000                      
       5.  00:8000                      ;;CABECERA FICHERO BIN
       6.  00:8000  FE                  	DB	#FE
       7.  00:8001  00 80               	DW	START
       8.  00:8003  6D B8               	DW	END
       9.  00:8005  00 80               	DW	START
      10.  00:8007                      
      11.  00:8007                      ;;INICIO CÓDIGO PROGRAMA	
      12.  00:8007                      	ORG	#8000
      13.  00:8000                      	
      12   00:8000                      	
      13   00:8000                      START:	
      14   00:8000                      	;inicializa pantalla y entonrno
      15   00:8000  CD 91 81            	CALL	sub_preparapantalla			;screen 2,2 sin click al pulsar tecla y color 16,1,1
      16   00:8003                      	
      17   00:8003                      	;inicializa variables para parametrizar funciones y que lo que se muestre sea variable (nº vidas, mapa, puertas, pantalla, etc...)
      18   00:8003  CD 39 80            	CALL	inicializa_variables_pruebas
      19   00:8006                      	
      20   00:8006                      	;inicializa los niveles por partida
      21   00:8006  CD 5C 80            	CALL	inicializa_niveles			;no es necesario parametrizarlo según el nivel del usuario ya que se cargan todos
      22   00:8009                      	
      23   00:8009  CD DC 80            	CALL	inicializa_ayudas
      24   00:800C                      	
      25   00:800C                      	;pinta la pantalla (la primera o algunas especiales se pintan completamente)
      26   00:800C  CD B2 81            	CALL	pinta_pantalla_completa 
      27   00:800F                      	
      28   00:800F                      	;carga sprites en memoria (SE HA RETRASADO HASTA PARAMETRIZAR LA CARGA DE PANTALLAS)
      29   00:800F  CD 85 85            	CALL 	carga_patrones_sprites_nivel
      30   00:8012                      	
      31   00:8012                      	;funciones que modificarian el marcador si se produce un evento cuando toque y cuando se pinta la pantalla ya se mira
      32   00:8012                      	;una variable para ver si el array hay que actualizarlo en pantalla o no
      33   00:8012  CD F2 82            	CALL	pinta_vidas
      34   00:8015  CD 01 83            	CALL 	pinta_reliquias
      35   00:8018  CD 10 83            	CALL	pinta_nivel
      36   00:801B  CD 90 83            	CALL	borra_mapa
      37   00:801E  CD E7 83            	CALL	pinta_puertas
      38   00:8021                      
      39   00:8021  3E 13               	LD		 A, TILEPROTAM
      40   00:8023  32 5C A5            	LD		(elemento_pintar_mapa), A
      41   00:8026  CD 51 84            	CALL	posiciona_en_mapa		;se le pasa elemento_pintar_mapa (tile del prota) está el prota y prota.poxx y posy
      42   00:8029                      	
      43   00:8029  CD 74 81            	CALL	actualiza_ayudas
      44   00:802C                      	
      45   00:802C                      
      46   00:802C                      	
      47   00:802C                      	;incializacion de replayer con interrupciones
      48   00:802C                      ;	CALL	inicializa_replayer_efectos_interrupciones
      49   00:802C                      
      50   00:802C                      loop_principal:
      51   00:802C  76                  	HALT							;espera VBLANK y sincroniza
      52   00:802D                      	
      53   00:802D  CD 9D 85            	CALL	render_sprites			;actualiza array de sprites y los pinta en pantalla
      54   00:8030                      	
      55   00:8030  CD 81 83            	CALL	pinta_energia			;pinta la energia en pantalla
      56   00:8033                      
      57   00:8033  CD E0 85            	CALL	check_player			;MIRA EL CONTROL Y APLICA LA LOGICA DE MOVIMIENTO DEL PROTAGONISTA
      58   00:8036                      	
      59   00:8036  C3 2C 80            	JP		loop_principal
      60   00:8039                      fin_programa_principal:
      61   00:8039                      	;RET
      62   00:8039                      
      63   00:8039                      
      64   00:8039                      
      65   00:8039                      
      66   00:8039                      
      67   00:8039                      ;;*******************************************************************
      68   00:8039                      ; sólo para hacer pruebas y pintar la parte de las vidas y demás
      69   00:8039                      inicializa_variables_pruebas:
      70   00:8039  3E 04               	LD		 A, 4
      71   00:803B  32 38 A5            	LD		(prota_vidas),A
      72   00:803E                      
      73   00:803E  3E 04               	LD		 A, 4
      74   00:8040  32 39 A5            	LD		(prota_reliquias), A
      75   00:8043                      
      76   00:8043  3E 64               	LD		 A, 100
      77   00:8045  32 3C A5            	LD		(prota_energia), A
      78   00:8048                      
      79   00:8048                      	;ubico al prota dentro del nivel para obtener luego las habitaciones y enemigos que aparecerán
      80   00:8048                      	;será igual la posición inicial en todos los niveles
      81   00:8048                      	
      82   00:8048  3E 00               	LD		 A, 0				;los niveles (matrices) son 7 del 0 al 6
      83   00:804A  32 37 A5            	LD		(prota_nivel), A	;nivel empieza en 0 para usar las posiciones ascii
      84   00:804D                      
      85   00:804D  3E 00               	LD		 A, 0				;los subniveles (filas) son 7 del 0 al 6
      86   00:804F  32 3B A5            	LD		(prota_pos_mapy), A	;pos Y dentro del nivel (se empieza en 0)
      87   00:8052                      
      88   00:8052  3E 02               	LD		 A, 2				;columnas 7: del 0 al 6
      89   00:8054  32 3A A5            	LD		(prota_pos_mapx), A	;pos X dentro del nivel (se empieza en 0)
      90   00:8057                      	
      91   00:8057  AF                  	XOR		 A
      92   00:8058  32 2C A5            	LD		(prota.cadencia), A
      93   00:805B                      fin_inicializa_variables_pruebas:
      94   00:805B  C9                  	RET
      95   00:805C                      ;;************************************************************************
      96   00:805C                      
      97   00:805C                      
      98   00:805C                      
      99   00:805C                      
     100   00:805C                      
     101   00:805C                      
     102   00:805C                      
     103   00:805C                      
     104   00:805C                      
     105   00:805C                      ;;=====================================================
     106   00:805C                      ;;DEFINICIÓN DE SUBRUTINAS
     107   00:805C                      ;;=====================================================
     108   00:805C                      	include "subrutinas.asm"
       1.  00:805C                      ;;=====================================================
       2.  00:805C                      ;;DEFINICIÓN DE SUBRUTINAS
       3.  00:805C                      ;;=====================================================	
       4.  00:805C                      
       5.  00:805C                      
       6.  00:805C                      ;;=====================================================
       7.  00:805C                      ;;INICIALIZA_NIVELES
       8.  00:805C                      ;;=====================================================	
       9.  00:805C                      ; función: 	copia la plantilla de niveles (habitaciones_plantilla) en los niveles de trabajo para el juego (habitaciones_juego)
      10.  00:805C                      ; entrada: 	habitaciones_plantilla
      11.  00:805C                      ; salida: 	habitaciones_juego
      12.  00:805C                      ; toca: 	A, B, HL, DE
      13.  00:805C                      inicializa_niveles:
      14.  00:805C  AF                  		XOR		 A
      15.  00:805D  06 31               		LD		 B,   49				;7 filas por 7 niveles menos el primero que lo hago fuera del buble
      16.  00:805F  21 0E A2            		LD		HL,   habitaciones_juego;tambíen puntero a la primera fila del primer nivel
      17.  00:8062  11 0E 00            		LD		DE,   14				;14 bytes de habitaciones y 2 extras
      18.  00:8065  19                  		ADD		HL,   DE				;puntero al primero de los bytes extras
      19.  00:8066  77                  		LD		(HL), A					;0000000Xb si X=0 no se ha pasado por allí y si es 1 sí
      20.  00:8067  11 10 00            		LD		DE,   16				;desde las col 15 de una fila a la siguiente
      21.  00:806A                      .bucle_borra_hab:
      22.  00:806A  19                  		ADD		HL,   DE				;situo el puntero 16 bytes siguientes
      23.  00:806B  77                  		LD		(HL), A					;pongo su contenido a 0
      24.  00:806C  10 FC               		DJNZ	.bucle_borra_hab		;repito para poner todos a 0
      25.  00:806E                      fin_iniciliza_niveles:
      26.  00:806E  C9                  		RET
      27.  00:806F                      
      28.  00:806F                      
      29.  00:806F                      ;;=====================================================
      30.  00:806F                      ;;ACTUALIZA_MARCADOR_VIDAS
      31.  00:806F                      ;;=====================================================	
      32.  00:806F                      ; función:  actualiza el buffer de vidas
      33.  00:806F                      ; entrada: 	prota_vidas
      34.  00:806F                      ; salida: 	array_aux_vidas
      35.  00:806F                      ; toca:		A,B,HL
      36.  00:806F                      actualiza_marcador_vidas:
      37.  00:806F                      	;para no andar restando pongo todos los huecos a negro y luego en otro bucle las caras
      38.  00:806F                      	;1-pinto todo en blanco
      39.  00:806F  21 3D A5            	LD		HL,array_aux_vidas
      40.  00:8072  06 08               	LD		 B,NMAXVIDREL
      41.  00:8074                      loop_marcador_caras_negro:	;asignar espacios en negro
      42.  00:8074  36 00               	LD		(HL),0			;0 posición mapa tiles para nada (es transparente pero el fondo es negro)
      43.  00:8076  23                  	INC		HL
      44.  00:8077  10 FB               	DJNZ	loop_marcador_caras_negro
      45.  00:8079                      fin_loop_marcador_caras_negro:
      46.  00:8079                      	;2-pinto las caras según el n de vidas
      47.  00:8079  3A 38 A5            	LD		 A, (prota_vidas)
      48.  00:807C  B7                  	OR		 A
      49.  00:807D  C8                  	RET 	 Z
      50.  00:807E  47                  	LD		 B, A
      51.  00:807F  21 3D A5            	LD		HL, array_aux_vidas
      52.  00:8082                      loop_marcador_caras: ;asignar caras
      53.  00:8082  36 0D               	LD		(HL), POSCARAMAP	;13 posición mapa tiles para cara
      54.  00:8084  23                  	INC		HL
      55.  00:8085  10 FB               	DJNZ	loop_marcador_caras
      56.  00:8087                      fin_loop_marcador_caras:
      57.  00:8087                      fin_actualiza_marcador_vidas:
      58.  00:8087  C9                  	RET
      59.  00:8088                      
      60.  00:8088                      
      61.  00:8088                      ;;=====================================================
      62.  00:8088                      ;;ACTUALIZA_BUFFER_RELIQUIAS
      63.  00:8088                      ;;=====================================================	
      64.  00:8088                      ; función: 	actualiza buffer de reliquias
      65.  00:8088                      ; entrada: 	prota_reliquias
      66.  00:8088                      ; salida: 	array_aux_reliquias
      67.  00:8088                      ; toca:		A,B,HL
      68.  00:8088                      actualiza_buffer_reliquias:	
      69.  00:8088                      	;para no andar restando pongo todos los huecos a negro y luego en otro bucle las reliquias
      70.  00:8088                      	;1-pinto todo en blanco
      71.  00:8088  21 45 A5            	LD		HL, array_aux_reliquias
      72.  00:808B  06 08               	LD		 B, NMAXVIDREL
      73.  00:808D  AF                  	XOR		 A
      74.  00:808E                      loop_buffer_reliquias_negro:	;asignar espacios en negro
      75.  00:808E  77                  	LD		(HL), A			;0 posición mapa tiles para nada (es transparente pero el fondo es negro)
      76.  00:808F  23                  	INC		HL
      77.  00:8090  10 FC               	DJNZ	loop_buffer_reliquias_negro
      78.  00:8092                      
      79.  00:8092                      	;2-pinto las cruces según el n de reliquias
      80.  00:8092  21 45 A5            	LD		HL, array_aux_reliquias
      81.  00:8095  3A 39 A5            	LD		 A, (prota_reliquias)
      82.  00:8098  B7                  	OR		 A
      83.  00:8099  C8                  	RET		 Z
      84.  00:809A  47                  	LD		 B, A
      85.  00:809B                      loop_buffer_reliquias: ;asignar reliquias
      86.  00:809B  36 11               	LD		(HL), POSRELIMAP	;17 posición mapa tiles para reliquia
      87.  00:809D  23                  	INC		HL
      88.  00:809E  10 FB               	DJNZ	loop_buffer_reliquias
      89.  00:80A0                      fin_actualiza_buffer_reliquias:
      90.  00:80A0  C9                  	RET
      91.  00:80A1                      
      92.  00:80A1                      
      93.  00:80A1                      
      94.  00:80A1                      ;;=====================================================
      95.  00:80A1                      ;;LOCALIZA_INFO_HABITACION
      96.  00:80A1                      ;;=====================================================	
      97.  00:80A1                      ; función: 	busca las puertas que hay que pintar egún la posición del usuario y las pone en habitacion_actual
      98.  00:80A1                      ; entrada: 	prota.pos_mapy, prota.pos_mapx, prota_nivel habitaciones_juego
      99.  00:80A1                      ; salida: 	habitacion_actual
     100.  00:80A1                      ; toca:		todo
     101.  00:80A1                      ;ejemplo: nivel 4, posy 5 y posx 3
     102.  00:80A1                      ;3 + 5 x 8 + 4 x 49
     103.  00:80A1                      localiza_info_habitacion:
     104.  00:80A1                      ;primera posición: me coloco en la columna correcta
     105.  00:80A1  21 0E A2            	LD		HL, habitaciones_juego
     106.  00:80A4                      .situo_columna:	
     107.  00:80A4  3A 3A A5            	LD		 A, (prota_pos_mapx)
     108.  00:80A7  CB 27               	SLA		 A				;multiplico por dos ya que cada habitación va de dos en dos bytes
     109.  00:80A9  06 00               	LD		 B, 0
     110.  00:80AB  4F                  	LD		 C, A
     111.  00:80AC                      
     112.  00:80AC  09                  	ADD 	HL, BC			;sumo a la posición 0 la columnax2 en la que situarme
     113.  00:80AD                      	
     114.  00:80AD                      .situo_fila:
     115.  00:80AD  3A 3B A5            	LD		A, (prota_pos_mapy)
     116.  00:80B0  B7                  	OR	 	A
     117.  00:80B1  CA BE 80            	JP		Z, .situo_nivel	;si la fila es 0 no es necesario seguir operando en fila
     118.  00:80B4                      	
     119.  00:80B4  47                  	LD		B, A
     120.  00:80B5  AF                  	XOR		A
     121.  00:80B6                      .loop_suma_fila:
     122.  00:80B6  C6 10               	ADD		16				;cada fila tiene 16 bytes
     123.  00:80B8  10 FC               	DJNZ	.loop_suma_fila
     124.  00:80BA                      	
     125.  00:80BA  06 00               	LD		 B, 0
     126.  00:80BC  4F                  	LD		 C, A
     127.  00:80BD                      
     128.  00:80BD  09                  	ADD 	HL, BC			;sumo a la columna 16 x filas para situarme en la fila correcta
     129.  00:80BE                      
     130.  00:80BE                      .situo_nivel:
     131.  00:80BE  3A 37 A5            	LD		 A, (prota_nivel)
     132.  00:80C1  B7                  	OR	 	 A
     133.  00:80C2  CA D2 80            	JP		 Z, .actualiza_valiable_habitacion	;si el nivel es 0 al pasar por las anterirores ya estoy situado actualizo la variable y termino
     134.  00:80C5                      	
     135.  00:80C5  E5                  	PUSH	HL				;guardo el resultado intermedio
     136.  00:80C6                      	
     137.  00:80C6  47                  	LD		 B, A			;preparo la varible del bucle
     138.  00:80C7  11 70 00            	LD		DE, 112			;112 = 16x42 son los bytes de cada matriz-nivel
     139.  00:80CA  21 00 00            	LD		HL, 0
     140.  00:80CD                      .loop_suma_nivel:
     141.  00:80CD  19                  	ADD		HL, DE
     142.  00:80CE  10 FD               	DJNZ	.loop_suma_nivel
     143.  00:80D0                      	
     144.  00:80D0  D1                  	POP		DE				;devuelvo el resultado intermedio en DE que ya no lo necesito
     145.  00:80D1                      	
     146.  00:80D1  19                  	ADD		HL, DE			;sumo el resultado del nivel al resultado intermedio anterior
     147.  00:80D2                      	
     148.  00:80D2                      .actualiza_valiable_habitacion
     149.  00:80D2  7E                  	LD		 A, (HL)
     150.  00:80D3  32 0C A2            	LD		(habitacion_actual), A
     151.  00:80D6  23                  	INC		HL				;el byte de los extras está antes de donde se especifican las puertas
     152.  00:80D7  7E                  	LD		 A, (HL)
     153.  00:80D8  32 0D A2            	LD		(habitacion_extras), A
     154.  00:80DB                      fin_localiza_info_habitacion:
     155.  00:80DB  C9                  	RET
     156.  00:80DC                      
     157.  00:80DC                      
     158.  00:80DC                      
     159.  00:80DC                      ;;=====================================================
     160.  00:80DC                      ;;INICIALIZA AYUDAS
     161.  00:80DC                      ;;=====================================================	
     162.  00:80DC                      ; función: 	inicializa las variables de estructuras de ayuda del array lista_ayudas
     163.  00:80DC                      ; entrada: 	lista_ayudas
     164.  00:80DC                      ; salida: 	lista_ayudas
     165.  00:80DC                      inicializa_ayudas:
     166.  00:80DC  DD 21 E7 A5         	LD		IX, lista_ayudas
     167.  00:80E0                      	
     168.  00:80E0  DD 36 00 00         	LD		(IX + 0), INACTIVO
     169.  00:80E4  DD 36 01 00         	LD		(IX + 1), ORACIONON
     170.  00:80E8  DD 36 02 04         	LD		(IX + 2), ORACIONOFF
     171.  00:80EC  21 A5 97            	LD		HL, accion_oracion
     172.  00:80EF  DD 74 06            	LD		(IX + 6), H
     173.  00:80F2  DD 75 07            	LD		(IX + 7), L
     174.  00:80F5                      	
     175.  00:80F5  DD 36 08 00         	LD		(IX + 8), INACTIVO
     176.  00:80F9  DD 36 09 08         	LD		(IX + 9), CRUZON
     177.  00:80FD  DD 36 0A 0C         	LD		(IX + 10), CRUZOFF
     178.  00:8101  21 A6 97            	LD		HL, accion_cruz
     179.  00:8104  DD 74 0E            	LD		(IX + 14), H
     180.  00:8107  DD 75 0F            	LD		(IX + 15), L
     181.  00:810A                      	
     182.  00:810A  DD 36 00 00         	LD		(IX + 0), INACTIVO
     183.  00:810E  DD 36 01 10         	LD		(IX + 1), AGUAON
     184.  00:8112  DD 36 02 14         	LD		(IX + 2), AGUAOFF
     185.  00:8116  21 A7 97            	LD		HL, accion_agua
     186.  00:8119  DD 74 06            	LD		(IX + 6), H
     187.  00:811C  DD 75 07            	LD		(IX + 7), L
     188.  00:811F                      	
     189.  00:811F  DD 36 10 00         	LD		(IX + 16), INACTIVO
     190.  00:8123  DD 36 11 18         	LD		(IX + 17), ARMADON
     191.  00:8127  DD 36 12 1C         	LD		(IX + 18), ARMADOFF
     192.  00:812B  21 A7 97            	LD		HL, accion_agua
     193.  00:812E  DD 74 16            	LD		(IX + 22), H
     194.  00:8131  DD 75 17            	LD		(IX + 23), L
     195.  00:8134                      	
     196.  00:8134  DD 36 18 00         	LD		(IX + 24), INACTIVO
     197.  00:8138  DD 36 19 20         	LD		(IX + 25), PLANTAON
     198.  00:813C  DD 36 1A 24         	LD		(IX + 26), PLANTAOFF
     199.  00:8140  21 A9 97            	LD		HL, accion_planta
     200.  00:8143  DD 74 1E            	LD		(IX + 30), H
     201.  00:8146  DD 75 1F            	LD		(IX + 31), L
     202.  00:8149                      
     203.  00:8149  DD 36 20 00         	LD		(IX + 32), INACTIVO
     204.  00:814D  DD 36 21 28         	LD		(IX + 33), VIDAEXTON
     205.  00:8151  DD 36 22 2C         	LD		(IX + 34), VIDAEXTOFF
     206.  00:8155  21 AA 97            	LD		HL, accion_vidaextra
     207.  00:8158  DD 74 26            	LD		(IX + 38), H
     208.  00:815B  DD 75 27            	LD		(IX + 39), L
     209.  00:815E                      	
     210.  00:815E  DD 36 28 00         	LD		(IX + 40), INACTIVO
     211.  00:8162  DD 36 29 30         	LD		(IX + 41), BALLESON
     212.  00:8166  DD 36 2A 34         	LD		(IX + 42), BALLESOFF
     213.  00:816A  21 AB 97            	LD		HL, accion_ballesta
     214.  00:816D  DD 74 2E            	LD		(IX + 46), H
     215.  00:8170  DD 75 2F            	LD		(IX + 47), L	
     216.  00:8173                      fin_inicializa_ayudas:
     217.  00:8173  C9                  	RET
     218.  00:8174                      
     219.  00:8174                      
     220.  00:8174                      
     221.  00:8174                      ;;=====================================================
     222.  00:8174                      ;;ACTUALIZA_AYUDAS
     223.  00:8174                      ;;=====================================================	
     224.  00:8174                      ; función: 	
     225.  00:8174                      ; entrada: 	
     226.  00:8174                      ; salida: 	-
     227.  00:8174                      actualiza_ayudas:
     228.  00:8174                      	;~ ;busca objetos a incluir
     229.  00:8174                      	;~ LD		 A, (habitacion_extras)
     230.  00:8174                      	
     231.  00:8174                      	;~ ;recorre
     232.  00:8174                      	;~ ;	pinta
     233.  00:8174                      	;~ ;	actualiza estructura
     234.  00:8174                      
     235.  00:8174  3E 14               	LD		 A, AGUAOFF
     236.  00:8176  CD DD 84            	CALL	pinta_obj_ayuda
     237.  00:8179                      
     238.  00:8179                      fin_actualiza_ayudas:
     239.  00:8179  C9                  	RET
     240.  00:817A                      	
     241.  00:817A                      	
     242.  00:817A                      	
     243.  00:817A                      	
     244.  00:817A                      	
     109   00:817A                      	
     110   00:817A                      	include "subr_general.asm"
       1.  00:817A                      ;;=====================================================
       2.  00:817A                      ;;DEFINICIÓN DE SUBRUTINAS GENERALES USABLES PARA CUALQUIER PROYECTO
       3.  00:817A                      ;;=====================================================	
       4.  00:817A                      
       5.  00:817A                      ;;=====================================================
       6.  00:817A                      ;;SUMA_A_BC
       7.  00:817A                      ;;=====================================================	
       8.  00:817A                      ; función: 	suma A a BC por si da más de 255
       9.  00:817A                      ; entrada: 	A, BC
      10.  00:817A                      ; salida: 	A + BC
      11.  00:817A                      ; toca:		A, BC
      12.  00:817A                      suma_A_BC:
      13.  00:817A  81                  	ADD		 C
      14.  00:817B  4F                  	LD		 C, A
      15.  00:817C  88                  	ADC		 B
      16.  00:817D  91                  	SUB		 C
      17.  00:817E  47                  	LD		 B, A
      18.  00:817F                      fin_suma_A_BC:
      19.  00:817F  C9                  	RET
     111   00:8180                      	
     112   00:8180                      	include "subr_pintapantalla.asm"
       1.  00:8180                      ;;=====================================================
       2.  00:8180                      ;;DEFINICIÓN DE SUBRUTINAS
       3.  00:8180                      ;;=====================================================	
       4.  00:8180                      ;relacionadas con pintado en pantalla (y no sprites)
       5.  00:8180                      
       6.  00:8180                      
       7.  00:8180                      ;;=====================================================
       8.  00:8180                      ;;COLOR_PANTALLA
       9.  00:8180                      ;;=====================================================	
      10.  00:8180                      ; función: 	el equivalente en basic a color 15,1,1
      11.  00:8180                      ; entrada: 	HL	que apunta a un array de bytes con 3 bytes FORCLR, BAKCLR y BDRCLR
      12.  00:8180                      ; salida: 	-
      13.  00:8180                      ; toca: 	todo
      14.  00:8180                      color_pantalla:
      15.  00:8180  7E                  	LD		 A, (HL)			;FORCLR 
      16.  00:8181  32 E9 F3            	LD 		(FORCLR),A
      17.  00:8184  23                  	INC		HL
      18.  00:8185                      	
      19.  00:8185  7E                  	LD		 A, (HL)			;BAKCLR
      20.  00:8186  32 EA F3            	LD 		(BAKCLR),A
      21.  00:8189  23                  	INC		HL
      22.  00:818A                      	
      23.  00:818A  7E                  	LD		 A, (HL)
      24.  00:818B  32 EB F3            	LD 		(BDRCLR),A			;BDRCLR
      25.  00:818E  C3 62 00            	JP		CHGCLR 
      26.  00:8191                      fin_color_pantalla:
      27.  00:8191                      
      28.  00:8191                      
      29.  00:8191                      ;;=====================================================
      30.  00:8191                      ;;PREPARAPANTALLA
      31.  00:8191                      ;;=====================================================	
      32.  00:8191                      ; función: elimina clic cuando se pulsa tecla, cls, screen 2,2
      33.  00:8191                      ; entrada: -
      34.  00:8191                      ; salida: -
      35.  00:8191                      ; toca: si no son todos los regristros, casi todos
      36.  00:8191                      sub_preparapantalla:
      37.  00:8191                      	;toca A y Z
      38.  00:8191                      elimina_clic;
      39.  00:8191  AF                  	XOR		 A
      40.  00:8192  32 DB F3            	LD		(CLIKSW),A
      41.  00:8195                      fin_elimina_clic:
      42.  00:8195                      
      43.  00:8195                      	;toca A
      44.  00:8195                      limpia_pantalla:
      45.  00:8195  AF                  	XOR		 A
      46.  00:8196  CD C3 00            	CALL 	CLS
      47.  00:8199                      fin_limpia_pantalla:
      48.  00:8199                      
      49.  00:8199                      	;toca A y direcciones #F3E9/#F3EA/#F3EB, poner en HL array con 3 valores
      50.  00:8199  21 1E A5            	LD		HL, color_base
      51.  00:819C  CD 80 81            	CALL	color_pantalla
      52.  00:819F                      	
      53.  00:819F                      	;cambiamos a SCREEN 2,2 del BASIC
      54.  00:819F                      	;toca A
      55.  00:819F                      screen2:
      56.  00:819F  3E 02               	LD		 A, 2
      57.  00:81A1  CD 5F 00            	CALL	CHGMOD			;selecciona screen 2
      58.  00:81A4                      sprites_16_16:
      59.  00:81A4  3A E0 F3            	LD		 A, (RG1SAV)
      60.  00:81A7  F6 02               	OR		00000010b		;fuerza sprites de 16x16
      61.  00:81A9  32 E0 F3            	LD		(RG1SAV), A		;no lo guardamos en la copia de variables del sistema
      62.  00:81AC  47                  	LD		 B, A
      63.  00:81AD  0E 01               	LD		 C, 1
      64.  00:81AF  C3 47 00            	JP		WRTVDP			;opción alternativa de escribir las tres lineas siguientes
      65.  00:81B2                      fin_sub_preparapantalla:
      66.  00:81B2                      	
      67.  00:81B2                      
      68.  00:81B2                      ;;=====================================================
      69.  00:81B2                      ;;PINTA_PANTALLA_COMPLETA
      70.  00:81B2                      ;;=====================================================	
      71.  00:81B2                      ; función: pinta el escenario, las 3 partes
      72.  00:81B2                      ; entrada: -
      73.  00:81B2                      ; salida: -
      74.  00:81B2                      ; toca: si no son todos los regristros, casi todos
      75.  00:81B2                      pinta_pantalla_completa:
      76.  00:81B2  CD B9 81            	CALL 	pinta_parte_superior_pantalla
      77.  00:81B5                      	
      78.  00:81B5  CD D7 82            	CALL 	pinta_parte_inferior_pantalla	
      79.  00:81B8                      fin_pinta_pantalla_completa:
      80.  00:81B8  C9                  	RET
      81.  00:81B9                      
      82.  00:81B9                      
      83.  00:81B9                      ;;=====================================================
      84.  00:81B9                      ;;PINTA_PARTE_SUPERIOR_PANTALLA
      85.  00:81B9                      ;;=====================================================	
      86.  00:81B9                      ; función: pinta el escenario, los dos bancos superiores
      87.  00:81B9                      ; entrada: -
      88.  00:81B9                      ; salida: -
      89.  00:81B9                      ; toca: si no son todos los regristros, casi todos
      90.  00:81B9                      pinta_parte_superior_pantalla:
      91.  00:81B9  3A 37 A5            	LD		 A, (prota_nivel)
      92.  00:81BC  CA EA 81            	JP		 Z, .carga_nivel_0
      93.  00:81BF  3D                  	DEC		 A
      94.  00:81C0  3A 37 A5            	LD		 A, (prota_nivel)
      95.  00:81C3  CA 05 82            	JP		 Z, .carga_nivel_1
      96.  00:81C6  3D                  	DEC		 A
      97.  00:81C7  3A 37 A5            	LD		 A, (prota_nivel)
      98.  00:81CA  CA 20 82            	JP		 Z, .carga_nivel_2
      99.  00:81CD  3D                  	DEC		 A
     100.  00:81CE  3A 37 A5            	LD		 A, (prota_nivel)
     101.  00:81D1  CA 3B 82            	JP		 Z, .carga_nivel_3
     102.  00:81D4  3D                  	DEC		 A
     103.  00:81D5  3A 37 A5            	LD		 A, (prota_nivel)
     104.  00:81D8  CA 56 82            	JP		 Z, .carga_nivel_4
     105.  00:81DB  3D                  	DEC		 A
     106.  00:81DC  3A 37 A5            	LD		 A, (prota_nivel)
     107.  00:81DF  CA 71 82            	JP		 Z, .carga_nivel_5
     108.  00:81E2  3D                  	DEC		 A
     109.  00:81E3  3A 37 A5            	LD		 A, (prota_nivel)
     110.  00:81E6  CA 8C 82            	JP		 Z, .carga_nivel_6
     111.  00:81E9  3D                  	DEC		 A
     112.  00:81EA                      	
     113.  00:81EA                      .carga_nivel_0:
     114.  00:81EA  21 33 A7            	LD		HL, tiles_patrones_nivel0
     115.  00:81ED  22 D1 82            	LD		(tiles_patrones), HL
     116.  00:81F0  21 E8 A8            	LD		HL, tiles_color_nivel0
     117.  00:81F3  22 D3 82            	LD		(tiles_colores), HL
     118.  00:81F6  21 33 A7            	LD		HL, tiles_patrones_nivel0
     119.  00:81F9  22 D1 82            	LD		(tiles_patrones), HL
     120.  00:81FC  21 2F A9            	LD		HL, tiles_mapa_nivel0
     121.  00:81FF  22 D5 82            	LD		(tiles_mapa), HL
     122.  00:8202  C3 A4 82            	JP		.fin_carga_niveles
     123.  00:8205                      
     124.  00:8205                      .carga_nivel_1:
     125.  00:8205  21 64 A9            	LD		HL, tiles_patrones_nivel1
     126.  00:8208  22 D1 82            	LD		(tiles_patrones), HL
     127.  00:820B  21 19 AB            	LD		HL, tiles_color_nivel1
     128.  00:820E  22 D3 82            	LD		(tiles_colores), HL
     129.  00:8211  21 64 A9            	LD		HL, tiles_patrones_nivel1
     130.  00:8214  22 D1 82            	LD		(tiles_patrones), HL
     131.  00:8217  21 60 AB            	LD		HL, tiles_mapa_nivel1
     132.  00:821A  22 D5 82            	LD		(tiles_mapa), HL
     133.  00:821D  C3 A4 82            	JP		.fin_carga_niveles
     134.  00:8220                      	
     135.  00:8220                      .carga_nivel_2:
     136.  00:8220  21 95 AB            	LD		HL, tiles_patrones_nivel2
     137.  00:8223  22 D1 82            	LD		(tiles_patrones), HL
     138.  00:8226  21 4A AD            	LD		HL, tiles_color_nivel2
     139.  00:8229  22 D3 82            	LD		(tiles_colores), HL
     140.  00:822C  21 95 AB            	LD		HL, tiles_patrones_nivel2
     141.  00:822F  22 D1 82            	LD		(tiles_patrones), HL
     142.  00:8232  21 91 AD            	LD		HL, tiles_mapa_nivel2
     143.  00:8235  22 D5 82            	LD		(tiles_mapa), HL
     144.  00:8238  C3 A4 82            	JP		.fin_carga_niveles
     145.  00:823B                      	
     146.  00:823B                      .carga_nivel_3:
     147.  00:823B  21 C6 AD            	LD		HL, tiles_patrones_nivel3
     148.  00:823E  22 D1 82            	LD		(tiles_patrones), HL
     149.  00:8241  21 7B AF            	LD		HL, tiles_color_nivel3
     150.  00:8244  22 D3 82            	LD		(tiles_colores), HL
     151.  00:8247  21 C6 AD            	LD		HL, tiles_patrones_nivel3
     152.  00:824A  22 D1 82            	LD		(tiles_patrones), HL
     153.  00:824D  21 C2 AF            	LD		HL, tiles_mapa_nivel3
     154.  00:8250  22 D5 82            	LD		(tiles_mapa), HL
     155.  00:8253  C3 A4 82            	JP		.fin_carga_niveles
     156.  00:8256                      	
     157.  00:8256                      .carga_nivel_4:
     158.  00:8256  21 F7 AF            	LD		HL, tiles_patrones_nivel4
     159.  00:8259  22 D1 82            	LD		(tiles_patrones), HL
     160.  00:825C  21 AC B1            	LD		HL, tiles_color_nivel4
     161.  00:825F  22 D3 82            	LD		(tiles_colores), HL
     162.  00:8262  21 F7 AF            	LD		HL, tiles_patrones_nivel4
     163.  00:8265  22 D1 82            	LD		(tiles_patrones), HL
     164.  00:8268  21 F3 B1            	LD		HL, tiles_mapa_nivel4
     165.  00:826B  22 D5 82            	LD		(tiles_mapa), HL
     166.  00:826E  C3 A4 82            	JP		.fin_carga_niveles
     167.  00:8271                      	
     168.  00:8271                      .carga_nivel_5:
     169.  00:8271  21 28 B2            	LD		HL, tiles_patrones_nivel5
     170.  00:8274  22 D1 82            	LD		(tiles_patrones), HL
     171.  00:8277  21 DD B3            	LD		HL, tiles_color_nivel5
     172.  00:827A  22 D3 82            	LD		(tiles_colores), HL
     173.  00:827D  21 28 B2            	LD		HL, tiles_patrones_nivel5
     174.  00:8280  22 D1 82            	LD		(tiles_patrones), HL
     175.  00:8283  21 24 B4            	LD		HL, tiles_mapa_nivel5
     176.  00:8286  22 D5 82            	LD		(tiles_mapa), HL
     177.  00:8289  C3 A4 82            	JP		.fin_carga_niveles
     178.  00:828C                      	
     179.  00:828C                      .carga_nivel_6:
     180.  00:828C  21 59 B4            	LD		HL, tiles_patrones_nivel6
     181.  00:828F  22 D1 82            	LD		(tiles_patrones), HL
     182.  00:8292  21 0E B6            	LD		HL, tiles_color_nivel6
     183.  00:8295  22 D3 82            	LD		(tiles_colores), HL
     184.  00:8298  21 59 B4            	LD		HL, tiles_patrones_nivel6
     185.  00:829B  22 D1 82            	LD		(tiles_patrones), HL
     186.  00:829E  21 55 B6            	LD		HL, tiles_mapa_nivel6
     187.  00:82A1  22 D5 82            	LD		(tiles_mapa), HL
     188.  00:82A4                      ;	JP		.fin_carga niveles			;no necesario
     189.  00:82A4                      .fin_carga_niveles:
     190.  00:82A4                      
     191.  00:82A4                      	;cargando banco 1
     192.  00:82A4                      	;cargamos los patrones
     193.  00:82A4  2A D1 82            	LD		HL, (tiles_patrones)
     194.  00:82A7  11 00 00            	LD		DE, CHRTBL
     195.  00:82AA  CD AC 97            	CALL	depack_VRAM
     196.  00:82AD                      	;cargamos los colores de los patrones
     197.  00:82AD  2A D3 82            	LD		HL, (tiles_colores)
     198.  00:82B0  11 00 20            	LD		DE, CLRTBL
     199.  00:82B3  CD AC 97            	CALL	depack_VRAM
     200.  00:82B6                      	
     201.  00:82B6                      	;cargando banco 2
     202.  00:82B6                      	;cargamos los patrones
     203.  00:82B6  2A D1 82            	LD		HL, (tiles_patrones)
     204.  00:82B9  11 00 08            	LD		DE, CHRTBL + #0800
     205.  00:82BC  CD AC 97            	CALL	depack_VRAM	
     206.  00:82BF                      	;cargamos los colores de los patrones
     207.  00:82BF  2A D3 82            	LD		HL, (tiles_colores)
     208.  00:82C2  11 00 28            	LD		DE, CLRTBL + #0800
     209.  00:82C5  CD AC 97            	CALL	depack_VRAM
     210.  00:82C8                      	
     211.  00:82C8                      	;cargamos mapa de pantalla banco 1 y 2
     212.  00:82C8  2A D5 82            	LD		HL, (tiles_mapa)
     213.  00:82CB  11 00 18            	LD		DE, TILMAP
     214.  00:82CE  C3 AC 97            	JP		depack_VRAM
     215.  00:82D1                      fin_pinta_parte_superior_pantalla:
     216.  00:82D1  00 00               tiles_patrones:		DW	0
     217.  00:82D3  00 00               tiles_colores:		DW	0
     218.  00:82D5  00 00               tiles_mapa:			DW	0
     219.  00:82D7                      
     220.  00:82D7                      
     221.  00:82D7                      ;;=====================================================
     222.  00:82D7                      ;;PINTA_PARTE_INFERIOR_PANTALLA
     223.  00:82D7                      ;;=====================================================	
     224.  00:82D7                      ; función: pinta la parte inferior del escenario que es común
     225.  00:82D7                      ; entrada: -
     226.  00:82D7                      ; salida: -
     227.  00:82D7                      ; toca: si no son todos los regristros, casi todos
     228.  00:82D7                      pinta_parte_inferior_pantalla:
     229.  00:82D7                      	;cangando banco 3
     230.  00:82D7                      	;cargamos los patrones
     231.  00:82D7  21 8A B6            	LD		HL,tiles_patrones_marcador
     232.  00:82DA  11 00 10            	LD		DE,CHRTBL + #1000
     233.  00:82DD  CD AC 97            	CALL	depack_VRAM	
     234.  00:82E0                      	;cargamos mapa de pantalla
     235.  00:82E0  21 0B B8            	LD		HL,tiles_mapa_marcador
     236.  00:82E3  11 00 1A            	LD		DE,TILMAP + #0200
     237.  00:82E6  CD AC 97            	CALL	depack_VRAM
     238.  00:82E9                      	;cargamos los colores de los patrones
     239.  00:82E9  21 D6 B7            	LD		HL,tiles_color_marcador
     240.  00:82EC  11 00 30            	LD		DE,CLRTBL + #1000
     241.  00:82EF  C3 AC 97            	JP		depack_VRAM
     242.  00:82F2                      fin_pinta_parte_inferior_pantalla:
     243.  00:82F2                      
     244.  00:82F2                      
     245.  00:82F2                      
     246.  00:82F2                      ;;=====================================================
     247.  00:82F2                      ;;PINTA_VIDAS
     248.  00:82F2                      ;;=====================================================	
     249.  00:82F2                      ; función: 	actualiza el mapa de tiles para que en el próximo refresco se pinten y actualiza_vidas
     250.  00:82F2                      ; entrada: 	array_aux_vidas
     251.  00:82F2                      ; salida: 	actualiza_vidas_sn
     252.  00:82F2                      ; toca:		todo
     253.  00:82F2                      pinta_vidas:
     254.  00:82F2  CD 6F 80            	CALL	actualiza_marcador_vidas
     255.  00:82F5                      	
     256.  00:82F5  21 3D A5            	LD		HL, array_aux_vidas
     257.  00:82F8  11 48 1A            	LD		DE, TILMAP + POSVIDAS 	;inicio posición en el mapa de tiles de las vidas
     258.  00:82FB  01 08 00            	LD		BC, NMAXVIDREL			;hay 8 posiciones para vidas/reliquias o espacios en negro si no tiene 8 vidas/reliquias
     259.  00:82FE  C3 5C 00            	JP		LDIRVM
     260.  00:8301                      fin_pinta_vidas:
     261.  00:8301                      	
     262.  00:8301                      	
     263.  00:8301                      
     264.  00:8301                      ;;=====================================================
     265.  00:8301                      ;;PINTA_RELIQUIAS
     266.  00:8301                      ;;=====================================================	
     267.  00:8301                      ; función: 	actualiza el mapa de tiles para que en el próximo refresco se pinten y actualiza_reliquias
     268.  00:8301                      ; entrada: 	array_aux_reliquias
     269.  00:8301                      ; salida: 	-
     270.  00:8301                      ; toca:		todo
     271.  00:8301                      pinta_reliquias:
     272.  00:8301  CD 88 80            	CALL	actualiza_buffer_reliquias
     273.  00:8304                      	
     274.  00:8304  21 45 A5            	LD		HL, array_aux_reliquias
     275.  00:8307  11 C8 1A            	LD		DE, TILMAP + POSRELIQ 	;inicio posición en el mapa de tiles de las vidas
     276.  00:830A  01 08 00            	LD		BC, NMAXVIDREL			;hay 8 posiciones para vidas/reliquias o espacios en negro si no tiene 8 vidas/reliquias
     277.  00:830D  C3 5C 00            	JP		LDIRVM
     278.  00:8310                      fin_pinta_reliquias:
     279.  00:8310                      	
     280.  00:8310                      
     281.  00:8310                      
     282.  00:8310                      	
     283.  00:8310                      ;;=====================================================
     284.  00:8310                      ;;PINTA_NIVEL
     285.  00:8310                      ;;=====================================================	
     286.  00:8310                      ; función: 	actualiza el nivel en la parte de puntuación
     287.  00:8310                      ; entrada: 	prota_nivel
     288.  00:8310                      ; salida: 	-
     289.  00:8310                      ; toca:		HL,DE,BC
     290.  00:8310                      pinta_nivel:	
     291.  00:8310                      	;forma más avanzada sin llamada a la bios
     292.  00:8310  01 B4 1A            	LD		BC,TILMAP + POSNIVEL ;posición en el mapa de tiles del tile de nivel
     293.  00:8313  3A 37 A5            	LD		 A, (prota_nivel)	;seleccionando la pos del banco de tiles a poner en el mapa
     294.  00:8316  C6 30               	ADD		'0'	
     295.  00:8318  57                  	LD		 D, A
     296.  00:8319                      	
     297.  00:8319  C3 1C 83            	JP		pinta_tile_suelto
     298.  00:831C                      fin_pinta_nivel:
     299.  00:831C                      
     300.  00:831C                      
     301.  00:831C                      
     302.  00:831C                      ;;=====================================================
     303.  00:831C                      ;;PINTA_TILE_SUELTO
     304.  00:831C                      ;;=====================================================	
     305.  00:831C                      ; función: 	pinta al tile que digamos en D, en la posición BC
     306.  00:831C                      ; entrada: 	BC (posición a pintar en el mapa),D (qué se va a pintar el esa posición)
     307.  00:831C                      ; salida: 	-
     308.  00:831C                      ; toca:		-
     309.  00:831C                      pinta_tile_suelto:
     310.  00:831C  DB 99               	IN		 A,(REGEST)		;leer registro de estado (recomendado)
     311.  00:831E  79                  	LD		 A,C			;primero byte bajo	
     312.  00:831F  D3 99               	OUT		(REGEST),A
     313.  00:8321  78                  	LD		 A,B			;después byte alto  ********************** preguntar a Fernando cómo que byte bajo es B
     314.  00:8322  F6 40               	OR		1000000b		;+64
     315.  00:8324  D3 99               	OUT		(REGEST),A
     316.  00:8326                      	
     317.  00:8326  7A                  	LD		A,D
     318.  00:8327  D3 98               	OUT		(REGESCVDP),A	;escribe A en VRAM en la posición indicada por los dos OUT anteriores
     319.  00:8329                      fin_pinta_tile_suelto:
     320.  00:8329  C9                  	RET
     321.  00:832A                      
     322.  00:832A                      
     323.  00:832A                      
     324.  00:832A                      
     325.  00:832A                      
     326.  00:832A                      ;;=====================================================
     327.  00:832A                      ;;MIRA_PINTA ENERGIA
     328.  00:832A                      ;;=====================================================	
     329.  00:832A                      ; función: 	actualiza el nivel de energia en la parte de puntuación
     330.  00:832A                      ; nota:		el cuadrado más bajo de ejergía siempre estará pintado... se obviará
     331.  00:832A                      ; entrada: 	prota.energia, array_aux_energia
     332.  00:832A                      ; salida: 	-
     333.  00:832A                      ; toca:		ninguno porque usa EXX
     334.  00:832A                      
     335.  00:832A                      ; nota importante... lo mismo interesa hacer esto con un array para comparar y un bucle
     336.  00:832A                      
     337.  00:832A                      mira_pinta_energia:
     338.  00:832A  D9                  	EXX							;por si acaso guardo el contenido de HL (si veo que no es necesario guardarlo lo quito) uso esto en vez de push por el nº ciclos
     339.  00:832B                      	
     340.  00:832B  3A 3C A5            	LD		 A,(prota_energia) 	;para las comparaciones A variable (actual) y B fijo (limites)
     341.  00:832E                      
     342.  00:832E  0E 00               	LD		 C,TILENEGRO		;para agilizar asignaciones en vez de un valor cte uso otro registro
     343.  00:8330                      pinta_ener:
     344.  00:8330                      pinta_ener_tile_8:
     345.  00:8330  21 54 A5            	LD		HL,ultimo_pos_array_aux_energia	;coloco puntero en array e iré decrementando
     346.  00:8333  06 D9               	LD		 B,TILEENERG8
     347.  00:8335  B8                  	CP		 B
     348.  00:8336  38 04               	JR		C,pinta_ener_tile_8_negro
     349.  00:8338  36 0E               	LD		(HL),TILEMAPVERD
     350.  00:833A  18 01               	JR		pinta_ener_tile_7
     351.  00:833C                      pinta_ener_tile_8_negro:
     352.  00:833C  71                  	LD		(HL),C
     353.  00:833D                      
     354.  00:833D                      pinta_ener_tile_7:
     355.  00:833D  2B                  	DEC		HL
     356.  00:833E  06 BA               	LD		 B,TILEENERG7
     357.  00:8340  B8                  	CP		 B
     358.  00:8341  38 04               	JR		C,pinta_ener_tile_7_negro
     359.  00:8343  36 0E               	LD		(HL),TILEMAPVERD
     360.  00:8345  18 01               	JR		pinta_ener_tile_6
     361.  00:8347                      pinta_ener_tile_7_negro:
     362.  00:8347  71                  	LD		(HL),C
     363.  00:8348                      
     364.  00:8348                      pinta_ener_tile_6:
     365.  00:8348  2B                  	DEC		HL
     366.  00:8349  06 9B               	LD		 B,TILEENERG6
     367.  00:834B  B8                  	CP		 B
     368.  00:834C  38 04               	JR		C,pinta_ener_tile_6_negro
     369.  00:834E  36 0E               	LD		(HL),14
     370.  00:8350  18 01               	JR		pinta_ener_tile_5
     371.  00:8352                      pinta_ener_tile_6_negro:
     372.  00:8352  71                  	LD		(HL),C
     373.  00:8353                      
     374.  00:8353                      pinta_ener_tile_5:
     375.  00:8353  2B                  	DEC		HL
     376.  00:8354  06 7C               	LD		 B,TILEENERG5
     377.  00:8356  B8                  	CP		 B
     378.  00:8357  38 04               	JR		C,pinta_ener_tile_5_negro
     379.  00:8359  36 0E               	LD		(HL),TILEMAPVERD
     380.  00:835B  18 01               	JR		pinta_ener_tile_4
     381.  00:835D                      pinta_ener_tile_5_negro:
     382.  00:835D  71                  	LD		(HL),C
     383.  00:835E                      
     384.  00:835E                      pinta_ener_tile_4:
     385.  00:835E  2B                  	DEC		HL
     386.  00:835F  06 5D               	LD		 B,TILEENERG4
     387.  00:8361  B8                  	CP		 B
     388.  00:8362  38 04               	JR		C,pinta_ener_tile_4_negro
     389.  00:8364  36 0F               	LD		(HL),TILEMAPAMAR
     390.  00:8366  18 01               	JR		pinta_ener_tile_3
     391.  00:8368                      pinta_ener_tile_4_negro:
     392.  00:8368  71                  	LD		(HL),C
     393.  00:8369                      	
     394.  00:8369                      pinta_ener_tile_3:
     395.  00:8369  2B                  	DEC		HL
     396.  00:836A  06 3E               	LD		 B,TILEENERG3
     397.  00:836C  B8                  	CP		 B
     398.  00:836D  38 04               	JR		C,pinta_ener_tile_3_negro
     399.  00:836F  36 0F               	LD		(HL),TILEMAPAMAR
     400.  00:8371  18 01               	JR		pinta_ener_tile_2
     401.  00:8373                      pinta_ener_tile_3_negro:
     402.  00:8373  71                  	LD		(HL),C
     403.  00:8374                      
     404.  00:8374                      pinta_ener_tile_2:
     405.  00:8374  2B                  	DEC		HL
     406.  00:8375  06 1F               	LD		 B,TILEENERG2
     407.  00:8377  B8                  	CP		 B
     408.  00:8378  38 04               	JR		C,pinta_ener_tile_2_negro
     409.  00:837A  36 10               	LD		(HL),TILEMAPROJO
     410.  00:837C  18 01               	JR		fin_mira_pinta_energia		;siempre estará pintado el cuadro mínimo
     411.  00:837E                      pinta_ener_tile_2_negro:
     412.  00:837E  71                  	LD		(HL),C
     413.  00:837F                      
     414.  00:837F                      fin_mira_pinta_energia:
     415.  00:837F  D9                  	EXX
     416.  00:8380  C9                  	RET
     417.  00:8381                      
     418.  00:8381                      
     419.  00:8381                      ;;=====================================================
     420.  00:8381                      ;;PINTA_ENERGIA
     421.  00:8381                      ;;=====================================================	
     422.  00:8381                      ; función: 	actualiza el mapa de tiles para que en el próximo refresco se pinte la barra de energia actual
     423.  00:8381                      ; entrada: 	array_aux_energia
     424.  00:8381                      ; toca:		todo
     425.  00:8381                      pinta_energia:
     426.  00:8381  CD 2A 83            	CALL	mira_pinta_energia
     427.  00:8384                      	
     428.  00:8384  21 4D A5            	LD		HL, array_aux_energia
     429.  00:8387  11 88 1A            	LD		DE, TILMAP + POSENERG 	;inicio posición en el mapa de tiles de las vidas
     430.  00:838A  01 08 00            	LD		BC, NMAXVIDREL			;hay 8 posiciones para vidas/reliquias o espacios en negro si no tiene 8 vidas/reliquias
     431.  00:838D  C3 5C 00            	JP		LDIRVM
     432.  00:8390                      fin_pinta_energia:
     433.  00:8390                      
     434.  00:8390                      
     435.  00:8390                      
     436.  00:8390                      ;;=====================================================
     437.  00:8390                      ;;BORRA_MAPA
     438.  00:8390                      ;;=====================================================	
     439.  00:8390                      ; función: 	pone todas las habitaciones del mapa a negro (los tiles del mapa los rellena con un array a 0 - caracter en negro)
     440.  00:8390                      ; entrada: 	array_aux_mapa_limpiar
     441.  00:8390                      ; salida: 	-
     442.  00:8390                      ; toca:		AF
     443.  00:8390                      borra_mapa:
     444.  00:8390  D9                  	EXX
     445.  00:8391                      	
     446.  00:8391  21 55 A5            	LD		HL,array_aux_mapa_limpiar
     447.  00:8394  11 F8 1A            	LD		DE,TILMAP + POSMAPLIN1 	;inicio posición en el mapa de tiles de la primera fila del mapa
     448.  00:8397  01 07 00            	LD		BC,NHABNIVEL			;cada nivel son 7 filas con 7 habitaciones "posibles"
     449.  00:839A  CD 5C 00            	CALL	LDIRVM
     450.  00:839D                      	
     451.  00:839D  21 55 A5            	LD		HL,array_aux_mapa_limpiar
     452.  00:83A0  11 D8 1A            	LD		DE,TILMAP + POSMAPLIN2
     453.  00:83A3  01 07 00            	LD		BC,NHABNIVEL
     454.  00:83A6  CD 5C 00            	CALL	LDIRVM
     455.  00:83A9                      
     456.  00:83A9  21 55 A5            	LD		HL,array_aux_mapa_limpiar
     457.  00:83AC  11 B8 1A            	LD		DE,TILMAP + POSMAPLIN3
     458.  00:83AF  01 07 00            	LD		BC,NHABNIVEL
     459.  00:83B2  CD 5C 00            	CALL	LDIRVM
     460.  00:83B5                      
     461.  00:83B5  21 55 A5            	LD		HL,array_aux_mapa_limpiar	
     462.  00:83B8  11 98 1A            	LD		DE,TILMAP + POSMAPLIN4
     463.  00:83BB  01 07 00            	LD		BC,NHABNIVEL
     464.  00:83BE  CD 5C 00            	CALL	LDIRVM
     465.  00:83C1                      
     466.  00:83C1  21 55 A5            	LD		HL,array_aux_mapa_limpiar	
     467.  00:83C4  11 78 1A            	LD		DE,TILMAP + POSMAPLIN5
     468.  00:83C7  01 07 00            	LD		BC,NHABNIVEL
     469.  00:83CA  CD 5C 00            	CALL	LDIRVM
     470.  00:83CD                      
     471.  00:83CD  21 55 A5            	LD		HL,array_aux_mapa_limpiar	
     472.  00:83D0  11 58 1A            	LD		DE,TILMAP + POSMAPLIN6
     473.  00:83D3  01 07 00            	LD		BC,NHABNIVEL
     474.  00:83D6  CD 5C 00            	CALL	LDIRVM
     475.  00:83D9                      
     476.  00:83D9  21 55 A5            	LD		HL,array_aux_mapa_limpiar	
     477.  00:83DC  11 38 1A            	LD		DE,TILMAP + POSMAPLIN7
     478.  00:83DF  01 07 00            	LD		BC,NHABNIVEL
     479.  00:83E2  CD 5C 00            	CALL	LDIRVM
     480.  00:83E5                      	
     481.  00:83E5  D9                  	EXX
     482.  00:83E6                      fin_borra_mapa:
     483.  00:83E6  C9                  	RET
     484.  00:83E7                      
     485.  00:83E7                      
     486.  00:83E7                      
     487.  00:83E7                      
     488.  00:83E7                      
     489.  00:83E7                      ;;=====================================================
     490.  00:83E7                      ;;PINTA_PUERTAS
     491.  00:83E7                      ;;=====================================================	
     492.  00:83E7                      ; función: 	examina A y mira si tiene que pintar puertas de los lados, arriba o abrajo o las escaleras (o no)
     493.  00:83E7                      ; entrada: 	habitacion_actual 1 escalera 1 puerta arriba 1 pu der 1 pu aba 1 pu izq (si es 0 pinta pared)
     494.  00:83E7                      ; salida: 	-
     495.  00:83E7                      ; toca:		todo
     496.  00:83E7                      pinta_puertas:
     497.  00:83E7  CD B9 81            	CALL	pinta_parte_superior_pantalla	;pinta pasillo y paredes
     498.  00:83EA                      
     499.  00:83EA  CD A1 80            	CALL	localiza_info_habitacion	;busca qué puertas debe pintar y lo mete en habitación_actual
     500.  00:83ED                      	
     501.  00:83ED  3A 0C A2            	LD		 A, (habitacion_actual)		;se mete en A porque la función pide A y para no buscar el valor 4 veces
     502.  00:83F0                      
     503.  00:83F0                      ;	BIT		 4, A
     504.  00:83F0                      ;	CALL	nz, pinta_escalera
     505.  00:83F0                      
     506.  00:83F0  CB 5F               	BIT		 3, A
     507.  00:83F2  C4 18 84            	CALL	nz, pinta_puerta_arr
     508.  00:83F5                      
     509.  00:83F5  CB 57               	BIT		 2, A
     510.  00:83F7  C4 2B 84            	CALL	nz, pinta_puerta_der
     511.  00:83FA                      
     512.  00:83FA  CB 4F               	BIT		 1, A
     513.  00:83FC  C4 05 84            	CALL	nz, pinta_puerta_aba
     514.  00:83FF                      	
     515.  00:83FF  CB 47               	BIT		 0, A
     516.  00:8401  C4 3E 84            	CALL	nz, pinta_puerta_izq
     517.  00:8404                      fin_pinta_puertas:
     518.  00:8404  C9                  	RET
     519.  00:8405                      
     520.  00:8405                      
     521.  00:8405                      
     522.  00:8405                      
     523.  00:8405                      ;;=====================================================
     524.  00:8405                      ;;PINTA_PUERTA_ABA
     525.  00:8405                      ;;=====================================================	
     526.  00:8405                      ; función: 	pinta la puerta de abajo
     527.  00:8405                      ; entrada: 	array_puerta_abajo, wordaux2, wordaux1
     528.  00:8405                      ; salida: 	-
     529.  00:8405                      ; toca:		HL,BC, DE
     530.  00:8405                      pinta_puerta_aba:
     531.  00:8405  21 86 A5            	LD		HL, array_puerta_abajo			;guardo puntero al array a pintar (como pasar por referencia)
     532.  00:8408  22 2F A7            	LD		(wordaux2), HL					;en la variable wordaux2
     533.  00:840B  21 EE 19            	LD		HL, TILMAP + POSPUERABAJ		;calcula posición en tilemap
     534.  00:840E  22 2D A7            	LD		(wordaux1), HL					;guarda valor pos tilemap en wordaux1
     535.  00:8411  16 01               	LD		D, 1							;nº de filas
     536.  00:8413  1E 04               	LD		E, 4							;nº de columnas
     537.  00:8415  C3 0D 85            	JP		pinta_array
     538.  00:8418                      fin_pinta_puerta_aba:
     539.  00:8418                      
     540.  00:8418                      ;;=====================================================
     541.  00:8418                      ;;PINTA_PUERTA_ARR
     542.  00:8418                      ;;=====================================================	
     543.  00:8418                      ; función: 	pinta la puerta de arriba
     544.  00:8418                      ; entrada: 	array_puerta_arriba, wordaux2, wordaux1
     545.  00:8418                      ; salida: 	-
     546.  00:8418                      ; toca:		HL,BC, DE
     547.  00:8418                      ;~ pinta_puerta_arr:
     548.  00:8418                      	;~ LD		HL, array_puerta_arriba			;guardo puntero al array a pintar (como pasar por referencia)
     549.  00:8418                      	;~ LD		(wordaux2), HL					;en la variable wordaux2
     550.  00:8418                      	;~ LD		HL, TILMAP + POSPUERARRI		;calcula posición en tilemap
     551.  00:8418                      	;~ LD		(wordaux1), HL					;guarda valor pos tilemap en wordaux1
     552.  00:8418                      	;~ LD		 A, 4							;nº de filas
     553.  00:8418                      	;~ LD		(byteaux1), A
     554.  00:8418                      	;~ LD		 A, 4							;nº de columnas
     555.  00:8418                      	;~ LD		(byteaux2), A
     556.  00:8418                      	;~ JP		pinta_array2
     557.  00:8418                      ;~ fin_pinta_puerta_arr:
     558.  00:8418                      pinta_puerta_arr:
     559.  00:8418  21 5D A5            	LD		HL, array_puerta_arriba			;guardo puntero al array a pintar (como pasar por referencia)
     560.  00:841B  22 2F A7            	LD		(wordaux2), HL					;en la variable wordaux2
     561.  00:841E  21 8E 18            	LD		HL, TILMAP + POSPUERARRI		;calcula posición en tilemap
     562.  00:8421  22 2D A7            	LD		(wordaux1), HL					;guarda valor pos tilemap en wordaux1
     563.  00:8424  16 05               	LD		 D, 5							;nº de filas
     564.  00:8426  1E 04               	LD		 E, 4							;nº de columnas
     565.  00:8428  C3 0D 85            	JP		pinta_array
     566.  00:842B                      fin_pinta_puerta_arr:
     567.  00:842B                      
     568.  00:842B                      
     569.  00:842B                      ;;=====================================================
     570.  00:842B                      ;;PINTA_PUERTA_DER
     571.  00:842B                      ;;=====================================================	
     572.  00:842B                      ; función: 	pinta la puerta de la derecha
     573.  00:842B                      ; entrada: 	array_puerta_derecha, wordaux2, wordaux1
     574.  00:842B                      ; salida: 	-
     575.  00:842B                      ; toca:		HL,BC, DE
     576.  00:842B                      pinta_puerta_der:
     577.  00:842B  21 71 A5            	LD		HL, array_puerta_derecha		;guardo puntero al array a pintar (como pasar por referencia)
     578.  00:842E  22 2F A7            	LD		(wordaux2), HL					;en la variable wordaux2
     579.  00:8431  21 FC 18            	LD		HL, TILMAP + POSPUERDERE		;calcula posición en tilemap
     580.  00:8434  22 2D A7            	LD		(wordaux1), HL					;guarda valor pos tilemap en wordaux1
     581.  00:8437  16 07               	LD		D, 7							;nº de filas
     582.  00:8439  1E 03               	LD		E, 3							;nº de columnas
     583.  00:843B  C3 0D 85            	JP		pinta_array
     584.  00:843E                      fin_pinta_puerta_der:
     585.  00:843E                      	
     586.  00:843E                      ;;=====================================================
     587.  00:843E                      ;;PINTA_PUERTA_IZQ
     588.  00:843E                      ;;=====================================================	
     589.  00:843E                      ; función: 	pinta la puerta de la izquierda
     590.  00:843E                      ; entrada: 	array_puerta_izquierda, wordaux2, wordaux1
     591.  00:843E                      ; salida: 	-
     592.  00:843E                      ; toca:		HL,BC, DE
     593.  00:843E                      pinta_puerta_izq:
     594.  00:843E  21 8A A5            	LD		HL, array_puerta_izquierda		;guardo puntero al array a pintar (como pasar por referencia)
     595.  00:8441  22 2F A7            	LD		(wordaux2), HL					;en la variable wordaux2
     596.  00:8444  21 E1 18            	LD		HL, TILMAP + POSPUERIZQU		;calcula posición en tilemap
     597.  00:8447  22 2D A7            	LD		(wordaux1), HL					;guarda valor pos tilemap en wordaux1
     598.  00:844A  16 07               	LD		D, 7							;nº de filas
     599.  00:844C  1E 03               	LD		E, 3							;nº de columnas
     600.  00:844E  C3 0D 85            	JP		pinta_array
     601.  00:8451                      fin_pinta_puerta_izq:
     602.  00:8451                      
     603.  00:8451                      
     604.  00:8451                      
     605.  00:8451                      
     606.  00:8451                      ;;=====================================================
     607.  00:8451                      ;;POSICIONA_EN_MAPA
     608.  00:8451                      ;;=====================================================	
     609.  00:8451                      ; función: 	en el mapa de marcadores de la derecha/abajo marca un cuadro en gris o con un muñeco
     610.  00:8451                      ;			según el valor de prota.posición pinta entrá un muñeco y por donde vaya pasando el prota
     611.  00:8451                      ;			quedará en gris
     612.  00:8451                      ; entrada: 	elemento_pintar_mapa, prota_pos_mapy, prota_pos_mapx
     613.  00:8451                      ; salida: 	-
     614.  00:8451                      ; toca:		todos
     615.  00:8451                      posiciona_en_mapa:
     616.  00:8451                      	;#0238 es la posición en mapa de tiles de la esquina superior izquierda del mapa (569 en decimal)
     617.  00:8451  21 38 1A            	LD		HL, TILMAP + POSMAPA;pos inicial
     618.  00:8454                      	
     619.  00:8454                      	;ahora se le calcula la fila a pintar ya que va de abajo a arriba y no como en el mapa + columna
     620.  00:8454                      .sumar_fila:
     621.  00:8454  3A 3B A5            	LD		 A, (prota_pos_mapy)
     622.  00:8457  FE 01               	CP		 1
     623.  00:8459  28 2A               	JR		 Z, .fila_1
     624.  00:845B  3A 3B A5            	LD		 A, (prota_pos_mapy)
     625.  00:845E  FE 02               	CP		 2
     626.  00:8460  28 2A               	JR		 Z, .fila_2
     627.  00:8462  3A 3B A5            	LD		 A, (prota_pos_mapy)
     628.  00:8465  FE 03               	CP		 3
     629.  00:8467  28 2A               	JR		 Z, .fila_3
     630.  00:8469  3A 3B A5            	LD		 A, (prota_pos_mapy)
     631.  00:846C  FE 04               	CP		 4
     632.  00:846E  28 2A               	JR		 Z, .fila_4
     633.  00:8470  3A 3B A5            	LD		 A, (prota_pos_mapy)
     634.  00:8473  FE 05               	CP		 5
     635.  00:8475  28 2A               	JR		 Z, .fila_5
     636.  00:8477  3A 3B A5            	LD		 A, (prota_pos_mapy)
     637.  00:847A  FE 06               	CP		 6
     638.  00:847C  28 2A               	JR		 Z, .sumar_columna
     639.  00:847E                      	;no consulto la 0 porque si no es ninguna de las anteriores es 0 y por tanto sería un jr fila_0
     640.  00:847E                      	
     641.  00:847E                      .fila_0:
     642.  00:847E  11 C0 00            	LD		DE, 192
     643.  00:8481  19                  	ADD		HL, DE			;nota: se que repito el ADD pero la otra opción es inicializar DE y ya tarda mucho la funicón (es por velicidad)
     644.  00:8482  C3 A8 84            	JP		.sumar_columna
     645.  00:8485                      .fila_1:
     646.  00:8485  11 A0 00            	LD		DE, 160
     647.  00:8488  19                  	ADD		HL, DE
     648.  00:8489  C3 A8 84            	JP		.sumar_columna
     649.  00:848C                      .fila_2:
     650.  00:848C  11 80 00            	LD		DE, 128
     651.  00:848F  19                  	ADD		HL, DE
     652.  00:8490  C3 A8 84            	JP		.sumar_columna
     653.  00:8493                      .fila_3:
     654.  00:8493  11 60 00            	LD		DE, 96
     655.  00:8496  19                  	ADD		HL, DE
     656.  00:8497  C3 A8 84            	JP		.sumar_columna
     657.  00:849A                      .fila_4:
     658.  00:849A  11 40 00            	LD		DE, 64
     659.  00:849D  19                  	ADD		HL, DE
     660.  00:849E  C3 A8 84            	JP		.sumar_columna
     661.  00:84A1                      .fila_5:
     662.  00:84A1  11 20 00            	LD		DE, 32
     663.  00:84A4  19                  	ADD		HL, DE
     664.  00:84A5  C3 A8 84            	JP		.sumar_columna
     665.  00:84A8                      .fila_6:
     666.  00:84A8                      	;pongo fila_6 por poner ya que si es la fila 6 equiv. a primera fila del mapa y por tanto no suma fila
     667.  00:84A8                      	
     668.  00:84A8                      	
     669.  00:84A8                      .sumar_columna:
     670.  00:84A8  3A 3A A5            	LD 		 A, (prota_pos_mapx) ;POS X
     671.  00:84AB  16 00               	LD		 D, 0
     672.  00:84AD  5F                  	LD		 E, A
     673.  00:84AE  19                  	ADD		HL, DE
     674.  00:84AF                      	
     675.  00:84AF                      	;resultado en BC para usar en la función pinta_tile_suelto
     676.  00:84AF  44                  	LD		 B, H
     677.  00:84B0  4D                  	LD		 C, L
     678.  00:84B1                      	
     679.  00:84B1                      	;terminado de fijar la coordenada recuperamos a para ver el tipo
     680.  00:84B1  3A 5C A5            	LD		 A, (elemento_pintar_mapa)
     681.  00:84B4  FE 09               	CP		 TILEGRISM
     682.  00:84B6  CA BE 84            	JP		 Z, pinta_pos_mapa_vacio
     683.  00:84B9  16 13               	LD		 D, TILEPROTAM
     684.  00:84BB  C3 C0 84            	JP		fin_pinta_pos_mapa
     685.  00:84BE                      pinta_pos_mapa_vacio:
     686.  00:84BE  16 09               	LD		 D, TILEGRISM	
     687.  00:84C0                      
     688.  00:84C0                      fin_pinta_pos_mapa:
     689.  00:84C0  C3 1C 83            	JP		pinta_tile_suelto
     690.  00:84C3                      fin_posiciona_en_mapa:
     691.  00:84C3                      
     692.  00:84C3                      
     693.  00:84C3                      
     694.  00:84C3                      
     695.  00:84C3                      ;;=====================================================
     696.  00:84C3                      ;;EFECTO_IMAGEN_TIRA_RELIQUIA
     697.  00:84C3                      ;;=====================================================	
     698.  00:84C3                      ; función: 	hace que el fondo de la pantalla parpadee N veces
     699.  00:84C3                      ; entrada: 	actualiza_reliquias_sn
     700.  00:84C3                      ; salida: 	-
     701.  00:84C3                      ; toca: 	todo
     702.  00:84C3                      efecto_imagen_tira_reliquia:
     703.  00:84C3  3E 14               	LD		 A, 20;RETARDOREL
     704.  00:84C5  47                  	LD		 B, A
     705.  00:84C6                      
     706.  00:84C6                      .parpadea_fondo:
     707.  00:84C6  C5                  	PUSH	BC
     708.  00:84C7  21 21 A5            	LD		HL, color_bomba1
     709.  00:84CA  CD 80 81            	CALL	color_pantalla
     710.  00:84CD                      	
     711.  00:84CD                      	;~ PUSH	BC
     712.  00:84CD                      	;~ LD		 A, 255
     713.  00:84CD                      	;~ LD		 B, A
     714.  00:84CD                      ;~ .bucle_de_espera:
     715.  00:84CD                      	;~ NOP
     716.  00:84CD                      	;~ DJNZ	 .bucle_de_espera
     717.  00:84CD                      	;~ POP		BC
     718.  00:84CD  76                  	HALT
     719.  00:84CE                      
     720.  00:84CE                      	
     721.  00:84CE  21 24 A5            	LD		HL, color_bomba2
     722.  00:84D1  CD 80 81            	CALL	color_pantalla
     723.  00:84D4  C1                  	POP		BC
     724.  00:84D5  10 EF               	DJNZ	.parpadea_fondo
     725.  00:84D7                      	
     726.  00:84D7  21 1E A5            	LD		HL, color_base
     727.  00:84DA  C3 80 81            	JP		color_pantalla
     728.  00:84DD                      fin_efecto_imagen_tira_reliquia:
     729.  00:84DD                      
     730.  00:84DD                      
     731.  00:84DD                      
     732.  00:84DD                      
     733.  00:84DD                      ;;=====================================================
     734.  00:84DD                      ;;PINTA_OBJ_AYUDA
     735.  00:84DD                      ;;=====================================================	
     736.  00:84DD                      ; función: 	
     737.  00:84DD                      ; entrada: 	A - objeto a mostrar
     738.  00:84DD                      ; salida: 	-
     739.  00:84DD                      ; toca:		AF, HL, BC, DE
     740.  00:84DD                      pinta_obj_ayuda:
     741.  00:84DD                      	;se recibe objeto an A desde fuera, por ejmplo LD		 A, CRUZOFF
     742.  00:84DD  01 AF A5            	LD		BC, array_ayudas
     743.  00:84E0  CD 7A 81            	CALL 	suma_A_BC
     744.  00:84E3                      	
     745.  00:84E3                      	;coloca pos array objeto a pintar en 
     746.  00:84E3  ED 43 2F A7         	LD		(wordaux2), BC
     747.  00:84E7                      	
     748.  00:84E7  21 00 19            	LD		HL, TILMAP + 256	;calcula posición en tilemap + 256 por colocarse siempre en bank1
     749.  00:84EA                      	
     750.  00:84EA  ED 5F               	LD		 A, R				;obtengo un valor "random" entre 0 y 255
     751.  00:84EC  E6 0F               	AND		00001111b			;me quedo con los 4 bits menos signif. y obtengo entre 0 y 15 (tamaño del array pos_ayudas)
     752.  00:84EE  01 9F A5            	LD		BC, pos_ayudas		;puntero a inicio de array pos_ayudas
     753.  00:84F1  CD 7A 81            	CALL 	suma_A_BC			;tengo en BC la pos de memoria de pos_ayudas
     754.  00:84F4                      	
     755.  00:84F4  0A                  	LD		 A, (BC)			;tengo en A la posición dentro del bank1 
     756.  00:84F5  16 00               	LD		 D, 0
     757.  00:84F7  5F                  	LD		 E, A
     758.  00:84F8  19                  	ADD		HL, DE				;le sumo a HL la posción de inicio de tilemap + 256 + dónde colocar el objeto
     759.  00:84F9                      
     760.  00:84F9  22 2D A7            	LD		(wordaux1), HL		;pongo el valor en wordaux1
     761.  00:84FC                      
     762.  00:84FC  16 02               	LD		D, 2				;nº de filas
     763.  00:84FE  3E 02               	LD		 A, 2
     764.  00:8500  32 31 A7            	LD		(byteaux1), A
     765.  00:8503  1E 02               	LD		E, 2				;nº de columnas
     766.  00:8505  3E 02               	LD		 A, 2
     767.  00:8507  32 32 A7            	LD		(byteaux2), A
     768.  00:850A  C3 45 85            	JP		pinta_array2
     769.  00:850D                      fin_pinta_obj_ayuda:
     770.  00:850D                      
     771.  00:850D                      
     772.  00:850D                      
     773.  00:850D                      
     774.  00:850D                      
     775.  00:850D                      
     776.  00:850D                      
     777.  00:850D                      ;=====================================================
     778.  00:850D                      ;;PINTA_ARRAY
     779.  00:850D                      ;;=====================================================	
     780.  00:850D                      ;;funcion:  (pinta el mismo tile) se le pasa un array con posiciones de tiles y coordenadas x e y y los pinta en screen 2
     781.  00:850D                      ;;entrada:	wordaux1 (pos inicio sc2 donde pintar) y wordaux2 (puntero al array a pintar), BC (posición en tilemap) , D filas y E columnas
     782.  00:850D                      ;;salida:	-
     783.  00:850D                      ;;importante: necesita de una variable wordaux1 tipo WD (wordaux1: 	DW	0)
     784.  00:850D                      ;; ejemplo llamada:
     785.  00:850D                      	;~ LD		HL,array_tiles					;guardo puntero al array a pintar (como psar por referencia)
     786.  00:850D                      	;~ LD		(wordaux2),HL					;en la variable wordaux2
     787.  00:850D                      	;~ LD		HL,SC2MAP + 256 + 32			;calcula posición en tilemap
     788.  00:850D                      	;~ LD		(wordaux1),HL					;guarda valor pos tilemap en wordaux1
     789.  00:850D                      	;~ LD		B,H								;coloca posición tilemap BC
     790.  00:850D                      	;~ LD		C,L
     791.  00:850D                      	;~ LD		D,2								;nº de filas
     792.  00:850D                      	;~ LD		E,3								;nº de columnas
     793.  00:850D                      	;~ CALL	pinta_array
     794.  00:850D                      
     795.  00:850D                      pinta_array:
     796.  00:850D  F5                  	PUSH	AF
     797.  00:850E                      	
     798.  00:850E  2A 2D A7            	LD		HL, (wordaux1)
     799.  00:8511  44                  	LD		B, H							;coloca posición tilemap BC
     800.  00:8512  4D                  	LD		C, L
     801.  00:8513                      	
     802.  00:8513                      	;contamos con que la posición "global" en el tilemap está ya en BC
     803.  00:8513                      	;y el puntero al array a pintar en wordaux2 y la posición en tilemap sc2 en wordaux1
     804.  00:8513                      	;inicializa
     805.  00:8513  DB 99               	IN		 A,(REGEST)		;leer registro de estado (recomendado)
     806.  00:8515                      	
     807.  00:8515                      	;coloca puntero para pintar tile según BC
     808.  00:8515  79                  	LD		 A,C			;primero byte bajo	
     809.  00:8516  D3 99               	OUT		(REGEST),A
     810.  00:8518  78                  	LD		 A,B			;después byte alto  ********************** preguntar a Fernando cómo que byte bajo es B
     811.  00:8519  F6 40               	OR		1000000b		;+64
     812.  00:851B  D3 99               	OUT		(REGEST),A
     813.  00:851D                      
     814.  00:851D                      	
     815.  00:851D  2A 2F A7            	LD		HL,(wordaux2)	;HL es lo que se pintará y le he pasado el puntero del array tilemap a pintar
     816.  00:8520                      .pa_pinta_fila:
     817.  00:8520  43                  	LD		 B,E
     818.  00:8521                      .pa_pinta_columnas: 		;finta la fila (pintando las columnas)
     819.  00:8521  7E                  	LD		 A,(HL)
     820.  00:8522  D3 98               	OUT		(REGESCVDP),A	;escribe A en VRAM en la posición indicada por los dos OUT anteriores
     821.  00:8524  23                  	INC		HL
     822.  00:8525  10 FA               	DJNZ	.pa_pinta_columnas
     823.  00:8527                      	
     824.  00:8527                      	;no es una solución elegante lo de repetir código pero queda claro
     825.  00:8527                      	;por si hay otra fila
     826.  00:8527  E5                  	PUSH	HL
     827.  00:8528  2A 2D A7            	LD		HL,(wordaux1)
     828.  00:852B  01 20 00            	LD		BC,32
     829.  00:852E  09                  	ADD		HL,BC
     830.  00:852F  22 2D A7            	LD		(wordaux1),HL
     831.  00:8532  44                  	LD		B,H
     832.  00:8533  4D                  	LD		C,L
     833.  00:8534  E1                  	POP		HL
     834.  00:8535                      	
     835.  00:8535  79                  	LD		 A,C			;primero byte bajo	
     836.  00:8536  D3 99               	OUT		(REGEST),A
     837.  00:8538  78                  	LD		 A,B			;después byte alto 
     838.  00:8539  F6 40               	OR		1000000b		;+64
     839.  00:853B  D3 99               	OUT		(REGEST),A
     840.  00:853D                      	
     841.  00:853D                      	;si hay otra fila repite
     842.  00:853D  15                  	DEC		 D
     843.  00:853E  7A                  	LD		 A,D		;¿hay otra fila?
     844.  00:853F  B7                  	OR		 A
     845.  00:8540  C2 20 85            	JP		NZ,.pa_pinta_fila
     846.  00:8543                      	
     847.  00:8543  F1                  	POP		AF
     848.  00:8544                      fin_pinta_array:
     849.  00:8544  C9                  	RET
     850.  00:8545                      
     851.  00:8545                      
     852.  00:8545                      
     853.  00:8545                      ;=====================================================
     854.  00:8545                      ;;PINTA_ARRAY
     855.  00:8545                      ;;=====================================================	
     856.  00:8545                      ;;funcion:  (pinta el mismo tile) se le pasa un array con posiciones de tiles y coordenadas x e y y los pinta en screen 2
     857.  00:8545                      ;;entrada:	wordaux1 (pos inicio sc2 donde pintar) y wordaux2 (puntero al array a pintar), BC (posición en tilemap) , D filas y E columnas
     858.  00:8545                      ;;salida:	-
     859.  00:8545                      ;;importante: necesita de una variable wordaux1 tipo WD (wordaux1: 	DW	0)
     860.  00:8545                      ;; ejemplo llamada:
     861.  00:8545                      	;~ LD		HL,array_tiles					;guardo puntero al array a pintar (como psar por referencia)
     862.  00:8545                      	;~ LD		(wordaux2),HL					;en la variable wordaux2
     863.  00:8545                      	;~ LD		HL,SC2MAP + 256 + 32			;calcula posición en tilemap
     864.  00:8545                      	;~ LD		(wordaux1),HL					;guarda valor pos tilemap en wordaux1
     865.  00:8545                      	;~ LD		B,H								;coloca posición tilemap BC
     866.  00:8545                      	;~ LD		C,L
     867.  00:8545                      	;~ LD		D,2								;nº de filas
     868.  00:8545                      	;~ LD		E,3								;nº de columnas
     869.  00:8545                      	;~ CALL	pinta_array
     870.  00:8545                      
     871.  00:8545                      pinta_array2:
     872.  00:8545  F5                  	PUSH	AF
     873.  00:8546                      	
     874.  00:8546  3A 31 A7            	LD		 A, (byteaux1)
     875.  00:8549  57                  	LD		 D, A
     876.  00:854A  3A 32 A7            	LD		 A, (byteaux2)
     877.  00:854D  5F                  	LD		 E, A
     878.  00:854E                      
     879.  00:854E                      	
     880.  00:854E  2A 2D A7            	LD		HL, (wordaux1)
     881.  00:8551  44                  	LD		 B, H							;coloca posición tilemap BC
     882.  00:8552  4D                  	LD		 C, L
     883.  00:8553                      	
     884.  00:8553                      	;contamos con que la posición "global" en el tilemap está ya en BC
     885.  00:8553                      	;y el puntero al array a pintar en wordaux2 y la posición en tilemap sc2 en wordaux1
     886.  00:8553                      	;inicializa
     887.  00:8553  DB 99               	IN		 A,(REGEST)		;leer registro de estado (recomendado)
     888.  00:8555                      	
     889.  00:8555                      	;coloca puntero para pintar tile según BC
     890.  00:8555  79                  	LD		 A,C			;primero byte bajo	
     891.  00:8556  D3 99               	OUT		(REGEST),A
     892.  00:8558  78                  	LD		 A,B			;después byte alto  ********************** preguntar a Fernando cómo que byte bajo es B
     893.  00:8559  F6 40               	OR		1000000b		;+64
     894.  00:855B  D3 99               	OUT		(REGEST),A
     895.  00:855D                      
     896.  00:855D                      	
     897.  00:855D  2A 2F A7            	LD		HL,(wordaux2)	;HL es lo que se pintará y le he pasado el puntero del array tilemap a pintar
     898.  00:8560                      .pa_pinta_fila:
     899.  00:8560  43                  	LD		 B,E
     900.  00:8561                      .pa_pinta_columnas: 		;finta la fila (pintando las columnas)
     901.  00:8561  7E                  	LD		 A,(HL)
     902.  00:8562  D3 98               	OUT		(REGESCVDP),A	;escribe A en VRAM en la posición indicada por los dos OUT anteriores
     903.  00:8564  23                  	INC		HL
     904.  00:8565  10 FA               	DJNZ	.pa_pinta_columnas
     905.  00:8567                      	
     906.  00:8567                      	;no es una solución elegante lo de repetir código pero queda claro
     907.  00:8567                      	;por si hay otra fila
     908.  00:8567  E5                  	PUSH	HL
     909.  00:8568  2A 2D A7            	LD		HL,(wordaux1)
     910.  00:856B  01 20 00            	LD		BC,32
     911.  00:856E  09                  	ADD		HL,BC
     912.  00:856F  22 2D A7            	LD		(wordaux1),HL
     913.  00:8572  44                  	LD		B,H
     914.  00:8573  4D                  	LD		C,L
     915.  00:8574  E1                  	POP		HL
     916.  00:8575                      	
     917.  00:8575  79                  	LD		 A,C			;primero byte bajo	
     918.  00:8576  D3 99               	OUT		(REGEST),A
     919.  00:8578  78                  	LD		 A,B			;después byte alto 
     920.  00:8579  F6 40               	OR		1000000b		;+64
     921.  00:857B  D3 99               	OUT		(REGEST),A
     922.  00:857D                      	
     923.  00:857D                      	;si hay otra fila repite
     924.  00:857D  15                  	DEC		 D
     925.  00:857E  7A                  	LD		 A,D		;¿hay otra fila?
     926.  00:857F  B7                  	OR		 A
     927.  00:8580  C2 60 85            	JP		NZ,.pa_pinta_fila
     928.  00:8583                      	
     929.  00:8583  F1                  	POP		AF
     930.  00:8584                      	
     931.  00:8584                      fin_pinta_array2:
     932.  00:8584  C9                  	RET
     113   00:8585                      	
     114   00:8585                      	include "subr_sprites.asm"
       1.  00:8585                      
       2.  00:8585                      ;;=====================================================
       3.  00:8585                      ;;SUBRUTINAS ENCARGADAS DE MANEJAR LOS SPRITES
       4.  00:8585                      ;;=====================================================	
       5.  00:8585                      
       6.  00:8585                      
       7.  00:8585                      ;; PREGUNTAR SI A FERNANDO SI ES MEJOR USAR LISTAS O ALGO PARA AHORRAR CÓDIGO
       8.  00:8585                      
       9.  00:8585                      
      10.  00:8585                      
      11.  00:8585                      
      12.  00:8585                      ;;=====================================================
      13.  00:8585                      ;;CARGA_PATRONES_SPRITES_NIVEL
      14.  00:8585                      ;;=====================================================	
      15.  00:8585                      ; función: 	examina el nivel y carga los patrones específicos necesarios
      16.  00:8585                      ; entrada: 	-
      17.  00:8585                      ; salida: 	-
      18.  00:8585                      ; toca: 	-
      19.  00:8585                      carga_patrones_sprites_nivel:
      20.  00:8585                      	
      21.  00:8585  CD 90 85            	CALL 	carga_patrones_nivel_comunes
      22.  00:8588                      	
      23.  00:8588                      	;carga atrones no comunes
      24.  00:8588  3A 37 A5            	LD		 A, (prota_nivel)
      25.  00:858B  B7                  	OR		 A
      26.  00:858C  CA 9C 85            	JP		 Z, carga_patrones_sprites_nivel1
      27.  00:858F                      	
      28.  00:858F                      	
      29.  00:858F                      fin_carga_patrones_sprites_nivel:
      30.  00:858F  C9                  	RET		;dejo este ret de momento pero cuando la subrutina esté terminada sobrará
      31.  00:8590                      
      32.  00:8590                      	;RET comparo numeros con jp para incluir el RET con lo que el último ret me sobra
      33.  00:8590                      
      34.  00:8590                      ;;=====================================================
      35.  00:8590                      ;;CARGA_PATRONES_SPRITES_NIVEL_COMUNES
      36.  00:8590                      ;;=====================================================	
      37.  00:8590                      ; función: 	carga los patrones comunes en todos los niveles
      38.  00:8590                      ; entrada: 	-
      39.  00:8590                      ; salida: 	-
      40.  00:8590                      ; toca: 	-
      41.  00:8590                      carga_patrones_nivel_comunes:	
      42.  00:8590  21 8C 98            	LD		HL, sprites_comunes
      43.  00:8593  11 00 38            	LD		DE, SPRTBL
      44.  00:8596  01 C0 00            	LD		BC, fin_sprites_comunes-sprites_comunes
      45.  00:8599  C3 5C 00            	JP		LDIRVM
      46.  00:859C                      fin_carga_patrones_nivel_comunes:
      47.  00:859C                      
      48.  00:859C                      
      49.  00:859C                      ;;=====================================================
      50.  00:859C                      ;;CARGA_PATRONES_SPRITES_NIVEL1
      51.  00:859C                      ;;=====================================================	
      52.  00:859C                      ; función: 	copia los patrones de los sprites que e van a usar en el nivel 1 en vram
      53.  00:859C                      ; entrada: 	-
      54.  00:859C                      ; salida: 	-
      55.  00:859C                      ; toca: 	-
      56.  00:859C                      carga_patrones_sprites_nivel1:
      57.  00:859C                      
      58.  00:859C                      
      59.  00:859C                      	;~ ;sprite sprite_reliquia
      60.  00:859C                      	;~ LD		HL,sprite_reliquia
      61.  00:859C                      	;~ LD		DE,#3880
      62.  00:859C                      	;~ LD		BC,32				;32 bytes (sprites de 2 x 2)
      63.  00:859C                      	;~ CALL	LDIRVM
      64.  00:859C                      
      65.  00:859C                      fin_carga_patrones_sprites:
      66.  00:859C  C9                  	RET
      67.  00:859D                      
      68.  00:859D                      
      69.  00:859D                      ;;=====================================================
      70.  00:859D                      ;;ACTUALIZA_ARRAY_SPRITES_VRAM
      71.  00:859D                      ;;=====================================================	
      72.  00:859D                      ; función: 	copia el array con los valores de los sprites (pos, color, plano) en VRAM
      73.  00:859D                      ; entrada: 	-
      74.  00:859D                      ; salida: 	-
      75.  00:859D                      ; toca: 	todos los registros. Como me interesa la velocidad, si necesito copiar de algo lo hago fuera
      76.  00:859D                      render_sprites:
      77.  00:859D                      	;volcando el array con toda la info de los sprites a la zona de atributos de sprites
      78.  00:859D  21 1F A6            	LD		HL,array_sprites
      79.  00:85A0  11 00 1B            	LD		DE,SPRART
      80.  00:85A3  01 80 00            	LD		BC,4 * 32				;32 sprites x 4 bytes controlando el sprite (Y, X, plano, color)
      81.  00:85A6  C3 5C 00            	JP		LDIRVM
      82.  00:85A9                      fin_actualiza_array_sprites_vram:
      83.  00:85A9                      
      84.  00:85A9                      
      85.  00:85A9                      ;;=====================================================
      86.  00:85A9                      ;;VUELCA_RESULTADO_PUNTOMIRA_ARRAY
      87.  00:85A9                      ;;=====================================================	
      88.  00:85A9                      ; función: 	coloca los valores del punto de mira en la variable array_sprites para ser volcados en VRAM
      89.  00:85A9                      ; entrada: 	array_sprites_pm, prota.XXXXX
      90.  00:85A9                      ; salida: 	-
      91.  00:85A9                      ; toca: 	-
      92.  00:85A9                      vuelca_resultado_puntomira_array:
      93.  00:85A9  DD 21 1F A6         	LD		IX, array_sprites_pm
      94.  00:85AD                      	;posición y de los dos sprites que conforman el punto de mira
      95.  00:85AD  3A 28 A5            	LD		 A, (prota.posy)
      96.  00:85B0  DD 77 00            	LD		(IX  ), A
      97.  00:85B3  DD 77 04            	LD		(IX+4), A
      98.  00:85B6                      	;posición x de los dos sprites que conforman el punto de mira
      99.  00:85B6  3A 27 A5            	LD		 A, (prota.posx)
     100.  00:85B9  DD 77 01            	LD		(IX+1), A
     101.  00:85BC  DD 77 05            	LD		(IX+5), A
     102.  00:85BF                      	;plano
     103.  00:85BF  DD 36 02 00         	LD		(IX+2), 0
     104.  00:85C3  DD 36 06 04         	LD		(IX+6), 4	;al ser sprites de 16x16 hay que ir de 4 en 4
     105.  00:85C7                      	;color
     106.  00:85C7  3A 29 A5            	LD		 A, (prota.escena)
     107.  00:85CA  B7                  	OR		 A
     108.  00:85CB  C2 D7 85            	JP		NZ,.codigo_color_2
     109.  00:85CE                      .codigo_color_1:
     110.  00:85CE  DD 36 03 0F         	LD		(IX+3), COLBLANCO
     111.  00:85D2  DD 36 07 08         	LD		(IX+7), COLROJO
     112.  00:85D6  C9                  	RET
     113.  00:85D7                      .codigo_color_2:
     114.  00:85D7  DD 36 03 08         	LD		(IX+3), COLROJO
     115.  00:85DB  DD 36 07 0F         	LD		(IX+7), COLBLANCO
     116.  00:85DF  C9                  	RET
     117.  00:85E0                      fin_vuelca_resultado_puntomira_array:
     118.  00:85E0                      
     119.  00:85E0                      
     120.  00:85E0                      ;;=====================================================
     121.  00:85E0                      ;;CHECK_PLAYER
     122.  00:85E0                      ;;=====================================================	
     123.  00:85E0                      ; función: 	MIRA EL CONTROL Y APLICA LA LOGICA DE MOVIMIENTO DEL PROTAGONISTA
     124.  00:85E0                      ; entrada: 	-
     125.  00:85E0                      ; salida: 	-
     126.  00:85E0                      ; toca: 	A
     127.  00:85E0                      check_player:
     128.  00:85E0  CD 7F 86            	CALL	update_controllers_status
     129.  00:85E3  B7                  	OR		 A
     130.  00:85E4  C8                  	RET		 Z						;si no se ha pulsado nada no se necesita mirar nada
     131.  00:85E5                      
     132.  00:85E5  CB 1F               	RR		 A
     133.  00:85E7  DC 00 86            	CALL	 C, mueve_arriba
     134.  00:85EA  CB 1F               	RR		 A
     135.  00:85EC  DC 1C 86            	CALL	 C, mueve_abajo
     136.  00:85EF  CB 1F               	RR		 A
     137.  00:85F1  DC 2B 86            	CALL	 C, mueve_izquierda
     138.  00:85F4  CB 1F               	RR		 A
     139.  00:85F6  DC 0D 86            	CALL	 C, mueve_derecha
     140.  00:85F9                      	
     141.  00:85F9                      	;zona para mirar disparo Recibe A que tendrá 0000 0 0 X-letra M X-espacio 
     142.  00:85F9  CD 38 86            	CALL	mira_disparo
     143.  00:85FC                      	
     144.  00:85FC  C3 A9 85            	JP		vuelca_resultado_puntomira_array
     145.  00:85FF                      f;in_check_player:
     146.  00:85FF  C9                  	RET
     147.  00:8600                      
     115   00:8600                      	
     116   00:8600                      	include "subr_teclado_joy.asm"
       1.  00:8600                      ;;=====================================================
       2.  00:8600                      ;;SUBRUTINAS QUE CAPTURN EL JOYSTICK Y TECLADO Y MUEVEN PUNTO DE MIRA
       3.  00:8600                      ;;=====================================================
       4.  00:8600                      
       5.  00:8600                      ;;=====================================================
       6.  00:8600                      ;;MUEVE_ARRIBA
       7.  00:8600                      ;;=====================================================	
       8.  00:8600                      ; función: 	decrementa y si se no sale de los límites el valor del punto de mira a la derecha
       9.  00:8600                      ; entrada: 	-
      10.  00:8600                      ; salida: 	-
      11.  00:8600                      ; toca: 	-
      12.  00:8600                      mueve_arriba:
      13.  00:8600  F5                  	PUSH		AF
      14.  00:8601                      	
      15.  00:8601  3A 28 A5            	LD		 	 A, (prota.posy)
      16.  00:8604  3D                  	DEC			 A
      17.  00:8605  CA 0B 86            	JP			 Z,.no_decrementa_y
      18.  00:8608  32 28 A5            	LD			(prota.posy), A
      19.  00:860B                      	
      20.  00:860B                      .no_decrementa_y:
      21.  00:860B  F1                  	POP			AF
      22.  00:860C                      fin_mueve_arriba:
      23.  00:860C  C9                  	RET
      24.  00:860D                      
      25.  00:860D                      
      26.  00:860D                      ;;=====================================================
      27.  00:860D                      ;;MUEVE_DERECHA
      28.  00:860D                      ;;=====================================================	
      29.  00:860D                      ; función: 	incrementa si se no sale de los límites el valor del punto de mira a la derecha
      30.  00:860D                      ; entrada: 	-
      31.  00:860D                      ; salida: 	-
      32.  00:860D                      ; toca: 	-
      33.  00:860D                      mueve_derecha:
      34.  00:860D  F5                  	PUSH		AF
      35.  00:860E                      	
      36.  00:860E  3A 27 A5            	LD		 	 A, (prota.posx)
      37.  00:8611  3C                  	INC			 A
      38.  00:8612  FE EF               	CP			 A, LIMPANTDER - 16
      39.  00:8614  CA 1A 86            	JP			 Z, .no_incrementa_x
      40.  00:8617  32 27 A5            	LD			(prota.posx), A
      41.  00:861A                      	
      42.  00:861A                      .no_incrementa_x:
      43.  00:861A  F1                  	POP			AF
      44.  00:861B                      fin_mueve_derecha:
      45.  00:861B  C9                  	RET
      46.  00:861C                      
      47.  00:861C                      
      48.  00:861C                      ;;=====================================================
      49.  00:861C                      ;;MUEVE_ABAJO
      50.  00:861C                      ;;=====================================================	
      51.  00:861C                      ; función: 	incrementa y si se no sale de los límites el valor del punto de mira abajo
      52.  00:861C                      ; entrada: 	-
      53.  00:861C                      ; salida: 	-
      54.  00:861C                      ; toca: 	-
      55.  00:861C                      mueve_abajo:
      56.  00:861C  F5                  	PUSH		AF
      57.  00:861D                      	
      58.  00:861D  3A 28 A5            	LD		 	 A, (prota.posy)
      59.  00:8620  3C                  	INC			 A
      60.  00:8621  FE 70               	CP			 A, LIMPANTABA - 16
      61.  00:8623  CA 29 86            	JP			 Z,.no_incrementa_y
      62.  00:8626  32 28 A5            	LD			(prota.posy), A
      63.  00:8629                      	
      64.  00:8629                      .no_incrementa_y:
      65.  00:8629  F1                  	POP			AF
      66.  00:862A                      fin_mueve_abajo:
      67.  00:862A  C9                  	RET
      68.  00:862B                      	
      69.  00:862B                      	
      70.  00:862B                      ;;=====================================================
      71.  00:862B                      ;;MUEVE_IZQUIERDA
      72.  00:862B                      ;;=====================================================	
      73.  00:862B                      ; función: 	decrementa x si se no sale de los límites el valor del punto de mira a la izquierda
      74.  00:862B                      ; entrada: 	-
      75.  00:862B                      ; salida: 	-
      76.  00:862B                      ; toca: 	-
      77.  00:862B                      mueve_izquierda:
      78.  00:862B  F5                  	PUSH		AF
      79.  00:862C                      	
      80.  00:862C  3A 27 A5            	LD		 	 A, (prota.posx)
      81.  00:862F  3D                  	DEC			 A
      82.  00:8630                      ;	CP			 A, LIMPANTIZQ
      83.  00:8630  CA 36 86            	JP			 Z,.no_decrementa_x
      84.  00:8633  32 27 A5            	LD			(prota.posx), A
      85.  00:8636                      	
      86.  00:8636                      .no_decrementa_x:
      87.  00:8636  F1                  	POP			AF
      88.  00:8637                      fin_mueve_izquierda:
      89.  00:8637  C9                  	RET
      90.  00:8638                      
      91.  00:8638                      
      92.  00:8638                      
      93.  00:8638                      ;;=====================================================
      94.  00:8638                      ;;MIRA_DISPARO
      95.  00:8638                      ;;=====================================================	
      96.  00:8638                      ; función: 	Mira si se ha pulsado alguno de los dos disparos
      97.  00:8638                      ; entrada: 	A que tendrá 0000 0 0 X-letra M X-espacio 
      98.  00:8638                      ; salida: 	-
      99.  00:8638                      ; toca: 	A, B
     100.  00:8638                      mira_disparo:
     101.  00:8638                      .mira_boton_pulsado1:
     102.  00:8638  CB 1F               	RR		 A						;preparo en el carry si se ha pulsado botón 1
     103.  00:863A  D2 63 86            	JP		 NC, .mira_boton_pulsado2					
     104.  00:863D  F5                  	PUSH	AF						;copia A para usarlo después
     105.  00:863E                      	;se ha pulsado barra o boton 1
     106.  00:863E  3A 2C A5            	LD		 A, (prota.cadencia)
     107.  00:8641  B7                  	OR		 A
     108.  00:8642  CA 50 86            	JP		 Z, .efectua_disparo	;toca efectuar disparo realmente porque se ha pulsado lo suficiente el disparo
     109.  00:8645                      .no_efectua_disparo: ;IF
     110.  00:8645  3D                  		DEC		 A
     111.  00:8646  32 2C A5            		LD		(prota.cadencia), A	;resto cadencia hasta próximo disparo "real" (no automático por haber pulsado una tecla e ir demasiado rápido)
     112.  00:8649  AF                  		XOR		 A 
     113.  00:864A  32 29 A5            		LD		(prota.escena), A
     114.  00:864D  C3 62 86            		JP		.fin_mira_disparo1
     115.  00:8650                      .efectua_disparo:	;ELSE
     116.  00:8650                      		;cambio colores del sprite
     117.  00:8650  3A 29 A5            		LD		 A, (prota.escena)
     118.  00:8653  2F                  		CPL		 
     119.  00:8654  32 29 A5            		LD		(prota.escena), A
     120.  00:8657                      		;reseteo cadencia para el próximo disparo
     121.  00:8657  3E 04               		LD		 A, LIMCADENCIA						;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
     122.  00:8659  32 2C A5            		LD		 (prota.cadencia), A				;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
     123.  00:865C                      		;ejecuto sonido								;; ajustar cadencia y que cuando el disparo sea efectivo se reseteen los colores
     124.  00:865C  AF                  		XOR		 A
     125.  00:865D  0E 01               		LD		 C, 1
     126.  00:865F  CD 27 8D            		CALL	ayFX_INIT	
     127.  00:8662                      .fin_mira_disparo1
     128.  00:8662                      
     129.  00:8662  F1                  	POP		AF
     130.  00:8663                      .mira_boton_pulsado2:
     131.  00:8663  CB 1F               	RR		 A
     132.  00:8665  D0                  	RET		 NC
     133.  00:8666                      	;se ha pulsado shift o boton 2
     134.  00:8666                      	
     135.  00:8666  3A 39 A5            	LD		 A, (prota_reliquias)	;miro si le quedan reliquias
     136.  00:8669  B7                  	OR		 A
     137.  00:866A  C8                  	RET		 Z						;si no le quedan salgo ya
     138.  00:866B                      	
     139.  00:866B                      	;actuaciones si se usa la reliquia botón 2 o M y quedn reliquias.. (antes ya se puso el valor en A)
     140.  00:866B  3A 39 A5            	LD		A, (prota_reliquias)
     141.  00:866E  3D                  	DEC		 A
     142.  00:866F  32 39 A5            	LD		(prota_reliquias), A
     143.  00:8672                      	
     144.  00:8672  3E 01               	LD		 A, 1
     145.  00:8674  0E 01               	LD		 C, 1
     146.  00:8676  CD 27 8D            	CALL	ayFX_INIT
     147.  00:8679                      	
     148.  00:8679  CD C3 84            	CALL 	efecto_imagen_tira_reliquia
     149.  00:867C                      	
     150.  00:867C  C3 01 83            	JP		pinta_reliquias
     151.  00:867F                      fin_mira_disparo:
     152.  00:867F                      ;	RET		
     153.  00:867F                      
     154.  00:867F                      
     155.  00:867F                      ;;============================================================
     156.  00:867F                      ;;Código de D. Fernando García (BitVision) (al que siempre le estaré agradecido)
     157.  00:867F                      ;check_8th_keyboard_row
     158.  00:867F                      ;read_joy_0
     159.  00:867F                      ;check_8th_keyboard_row
     160.  00:867F                      ;check_4th_keyboard_row
     161.  00:867F                      ;;============================================================
     162.  00:867F                      ;;  usa constantes:
     163.  00:867F                      ;PSG_A  equ  0a0h  ;reg address
     164.  00:867F                      ;PSG_W  equ  0a1h  ;reg data WR
     165.  00:867F                      ;PSG_R  equ  0a2h  ;reg data
     166.  00:867F                      
     167.  00:867F                      ;;=====================================================
     168.  00:867F                      ;;update_controllers_status
     169.  00:867F                      ;;=====================================================	
     170.  00:867F                      ;depends on the next rountine
     171.  00:867F                      ;  returns
     172.  00:867F                      ;  a - 0P2TRLDU
     173.  00:867F                      
     174.  00:867F                      update_controllers_status:
     175.  00:867F  CD CA 86                 call  check_8th_keyboard_row
     176.  00:8682                      [4]  rrc    a
     176.  00:8682  CB 0F CB 0F CB 0F CB 0F 
     177.  00:868A  47                       ld    b,a    		;save for later  xxxTRDUL
     178.  00:868B                      
     179.  00:868B  E6 01                    and    #01    		;save L
     180.  00:868D  CB 27                    sla    a
     181.  00:868F  CB 27                    sla    a    		;now 00000L00
     182.  00:8691  4F                       ld    c,a    		;save for later
     183.  00:8692                      
     184.  00:8692  78                       ld    a,b    		;again we've got xxxTRDUL. I am interested on leaving 000000DU on a
     185.  00:8693  CB 3F                    srl    a
     186.  00:8695  E6 03                    and    00000011b
     187.  00:8697                      						;we've got 000000DU on a
     188.  00:8697  B1                       or    c    		;now we've got 00000LDU
     189.  00:8698  4F                       ld    c,a    		;save for later
     190.  00:8699                      
     191.  00:8699  78                       ld    a,b
     192.  00:869A  E6 18                    and    00011000b 	;we've got 000TR000
     193.  00:869C  B1                       or    c
     194.  00:869D                           ;finally    000TRLDU
     195.  00:869D                      
     196.  00:869D                           ;and    00000100   ;preserve just
     197.  00:869D  47                       ld    b,a    		;save for later
     198.  00:869E  CD D8 86                 call  check_4th_keyboard_row      ;check M & P
     199.  00:86A1  F5                       push  af
     200.  00:86A2  E6 04                    and    00000100b	;filter just M
     201.  00:86A4  87                       add    a
     202.  00:86A5  87                       add    a
     203.  00:86A6  87                       add    a           ;shift 3th to 6th bit
     204.  00:86A7  B0                       or    b           	;merge with previous
     205.  00:86A8  47                       ld    b,a
     206.  00:86A9                      
     207.  00:86A9  CD B6 86                 call  read_joy_0
     208.  00:86AC  E6 3F                    and    00111111b  	;we want just 002TRLDU  from joystick    (2 is second trigger)
     209.  00:86AE  B0                       or    b      		;added 000TRLDU from keyboard
     210.  00:86AF  47                       ld    b,a      	;save for later
     211.  00:86B0  F1                       pop    af      	; let's check on P
     212.  00:86B1                      
     213.  00:86B1  E6 20                    and    00100000b
     214.  00:86B3  87                       add    a      		;P status on 6th bit  ... so 0P2TRLDU
     215.  00:86B4  B0                       or    b
     216.  00:86B5                      
     217.  00:86B5  C9                       ret
     218.  00:86B6                      
     219.  00:86B6                      
     220.  00:86B6                      ;ret
     221.  00:86B6                      ;  a -            xx2TRLDU
     222.  00:86B6                      read_joy_0:
     223.  00:86B6  F3                         di
     224.  00:86B7  3E 0F                      ld    a,15
     225.  00:86B9  D3 A0                      out    [PSG_A],a
     226.  00:86BB  DB A2                      in    a,[PSG_R]
     227.  00:86BD  E6 BF                      and    10111111b        ;joy0
     228.  00:86BF                      
     229.  00:86BF  D3 A1                      out    [PSG_W],a        ;set joy0
     230.  00:86C1                      
     231.  00:86C1  3E 0E                      ld    a,14
     232.  00:86C3  D3 A0                      out    [PSG_A],a
     233.  00:86C5  DB A2                      in    a,[PSG_R]
     234.  00:86C7                      
     235.  00:86C7  FB                         ei
     236.  00:86C8  2F                         cpl
     237.  00:86C9                      
     238.  00:86C9  C9                         ret
     239.  00:86CA                      
     240.  00:86CA                      
     241.  00:86CA                      ;ret
     242.  00:86CA                      ;  a -      RDULxxxT
     243.  00:86CA                      check_8th_keyboard_row:
     244.  00:86CA  F3                       di
     245.  00:86CB  DB AA                    in    a,(#aa)
     246.  00:86CD  E6 F0                    and    #f0
     247.  00:86CF  F6 08                    or    8
     248.  00:86D1  D3 AA                    out    (#aa),a
     249.  00:86D3  DB A9                    in    a,(#a9)
     250.  00:86D5  FB                       ei
     251.  00:86D6  2F                       cpl
     252.  00:86D7                      
     253.  00:86D7  C9                       ret
     254.  00:86D8                      
     255.  00:86D8                      
     256.  00:86D8                      ;ret
     257.  00:86D8                      ;  a -      xxxxxMxx
     258.  00:86D8                      check_4th_keyboard_row:
     259.  00:86D8  F3                       di
     260.  00:86D9  DB AA                    in    a,(#aa)
     261.  00:86DB  E6 F0                    and    #f0
     262.  00:86DD  F6 04                    or    4
     263.  00:86DF  D3 AA                    out    (#aa),a
     264.  00:86E1  DB A9                    in    a,(#a9)
     265.  00:86E3  FB                       ei
     266.  00:86E4  2F                       cpl
     267.  00:86E5                      
     268.  00:86E5  C9                       ret
     269.  00:86E6                      
     270.  00:86E6                      ;--------------------------------------------
     271.  00:86E6                      
     272.  00:86E6                      
     273.  00:86E6                      
     274.  00:86E6                      
     275.  00:86E6                      
     276.  00:86E6                      
     277.  00:86E6                      
     278.  00:86E6                      
     117   00:86E6                      	
     118   00:86E6                      	include "subr_sonido.asm"
       1.  00:86E6                      
       2.  00:86E6                      ;;=====================================================
       3.  00:86E6                      ;;SUBRUTINAS PARA SONIDOS
       4.  00:86E6                      ;;=====================================================	
       5.  00:86E6                      
       6.  00:86E6                      ;;=====================================================
       7.  00:86E6                      ;;INICIALIZA_REPLAYER_EFECTOS_INTERRUPCIONES
       8.  00:86E6                      ;;=====================================================	
       9.  00:86E6                      ; función: 	inicializa: replayer de música, player de efectos e interrupciones
      10.  00:86E6                      ; entrada: 	-
      11.  00:86E6                      ; salida: 	-
      12.  00:86E6                      ; toca: 	HL, A
      13.  00:86E6                      inicializa_replayer_efectos_interrupciones:
      14.  00:86E6  F3                  	DI
      15.  00:86E7                      
      16.  00:86E7                      	;inicializacion de replayer musical
      17.  00:86E7  21 8F 8D            	LD		HL, song-99			; hl <- initial address of module - 99
      18.  00:86EA  CD 26 87            	CALL	PT3_INIT			; Inits PT3 player
      19.  00:86ED                      		
      20.  00:86ED                      	;inicializacion del reproductor de efectos sonoros
      21.  00:86ED  21 5A 97            	LD		HL, sfx_bank
      22.  00:86F0  CD 15 8D            	CALL	ayFX_SETUP
      23.  00:86F3                      	
      24.  00:86F3                      	;Engancha nuestra rutina de servicio al gancha que deja preparado la BIOS cuando se termina de pintar la pantalla (50 o 60 veces por segundo)
      25.  00:86F3  3E C3               	LD		A, #C3
      26.  00:86F5  32 9F FD            	LD		[H.TIMI], A
      27.  00:86F8  21 00 87            	LD		HL, subrutina_isr
      28.  00:86FB  22 A0 FD            	LD		[H.TIMI+1], HL
      29.  00:86FE                      	
      30.  00:86FE  FB                  	EI		;optimizacion:
      31.  00:86FF                      			;piensa que las dos ultimas lineas podrian haber sido: 
      32.  00:86FF                      			;ei						;primero ei
      33.  00:86FF                      			;ld		[H.TIMI+1],hl	;luego este ld
      34.  00:86FF                      									;PENSAR (y consultar ) PORQUE!!!!
      35.  00:86FF                      fin_inicializa_replayer_efectos_interrupciones:
      36.  00:86FF  C9                  	RET
      37.  00:8700                      
      38.  00:8700                      
      39.  00:8700                      
      40.  00:8700                      ;;=====================================================
      41.  00:8700                      ;;NUESTRA_ISR
      42.  00:8700                      ;;=====================================================	
      43.  00:8700                      ; función: 	envía datos al PSG + toca un trozo de música + toca trozo de 
      44.  00:8700                      ; entrada: 	-
      45.  00:8700                      ; salida: 	-
      46.  00:8700                      ; toca: 	HL, A
      47.  00:8700                      subrutina_isr:
      48.  00:8700  CD 6B 8C            	CALL	PT3_ROUT			;envia los datos a los registros del PSG
      49.  00:8703  CD 73 8B            	CALL	PT3_PLAY			;calcula el siguiente 'trocito' de musica que sera enviado al proxima vez
      50.  00:8706  C3 5D 8D            	JP		ayFX_PLAY			;calcula el siguiente 'trocito' de efecto especial de sonido que sera enviado la proxima vez
      51.  00:8709                      fin_subrutina_isr:
      52.  00:8709                      	;RET
      53.  00:8709                      
      54.  00:8709                      
      55.  00:8709                      
      56.  00:8709                      ;;=====================================================
      57.  00:8709                      ;;DEFINICIÓN DE SUBRUTINAS DE FERNANDO PARA COMPRESIÓN Y SONIDO
      58.  00:8709                      ;;=====================================================
      59.  00:8709                      subrutinas_sonido:
      60.  00:8709                      	include	"PT3-ROM_sjasm.asm"
       1:  00:8709                      		; --- PT3 REPLAYER WORKING ON ROM ---
       2:  00:8709                      		; --- Can be assembled with asMSX ---
       3:  00:8709                      		; --- ROM version: MSX-KUN        ---
       4:  00:8709                      		; --- asMSX version 2: SapphiRe   ---
       5:  00:8709                      
       6:  00:8709                      ; Based on MSX full version of PT3 by Dioniso
       7:  00:8709                      ;
       8:  00:8709                      ; This version of the replayer can be used with any note table
       9:  00:8709                      ; This version also allows the use of PT3 commands
      10:  00:8709                      ; First 99 bytes of each PT3 module should be stripped off
      11:  00:8709                      ;
      12:  00:8709                      ; PLAY and PSG WRITE routines seperated to allow independent calls
      13:  00:8709                      ;
      14:  00:8709                      ; ROM LENGTH: 1549 bytes
      15:  00:8709                      ; RAM LENGTH:  576 bytes
      16:  00:8709                      
      17:  00:8709                      
      18:  00:8709                      
      19:  00:8709                      ;SJASM version by BTV 2016
      20:  00:8709                      
      21:  00:8709                      
      22:  00:8709                      		; --- CONSTANT VALUES DEFINITION ---
      23:  00:8709                      
      24:  00:8709                      ;ChannelsVars
      25:  00:8709                      ;struc	CHNPRM
      26:  00:8709                      ;reset group
      27:  00:8709  (00:0000)           CHNPRM_PsInOr	equ 0	;RESB 1
      28:  00:8709  (00:0001)           CHNPRM_PsInSm	equ 1	;RESB 1
      29:  00:8709  (00:0002)           CHNPRM_CrAmSl	equ 2	;RESB 1
      30:  00:8709  (00:0003)           CHNPRM_CrNsSl	equ 3	;RESB 1
      31:  00:8709  (00:0004)           CHNPRM_CrEnSl	equ 4	;RESB 1
      32:  00:8709  (00:0005)           CHNPRM_TSlCnt	equ 5	;RESB 1
      33:  00:8709  (00:0006)           CHNPRM_CrTnSl	equ 6	;RESW 1
      34:  00:8709  (00:0008)           CHNPRM_TnAcc	equ 8	;RESW 1
      35:  00:8709  (00:000A)           CHNPRM_COnOff	equ 10	;RESB 1
      36:  00:8709                      ;reset group
      37:  00:8709                      
      38:  00:8709  (00:000B)           CHNPRM_OnOffD	equ 11	;RESB 1
      39:  00:8709                      
      40:  00:8709                      ;IX for PTDECOD here [+12]
      41:  00:8709  (00:000C)           CHNPRM_OffOnD	equ 12	;RESB 1
      42:  00:8709  (00:000D)           CHNPRM_OrnPtr	equ 13	;RESW 1
      43:  00:8709  (00:000F)           CHNPRM_SamPtr	equ 15	;RESW 1
      44:  00:8709  (00:0011)           CHNPRM_NNtSkp	equ 17	;RESB 1
      45:  00:8709  (00:0012)           CHNPRM_Note	equ 18	;RESB 1
      46:  00:8709  (00:0013)           CHNPRM_SlToNt	equ 19	;RESB 1
      47:  00:8709  (00:0014)           CHNPRM_Env_En	equ 20	;RESB 1
      48:  00:8709  (00:0015)           CHNPRM_Flags	equ 21	;RESB 1
      49:  00:8709                       ;Enabled - 0,SimpleGliss - 2
      50:  00:8709  (00:0016)           CHNPRM_TnSlDl	equ 22	;RESB 1
      51:  00:8709  (00:0017)           CHNPRM_TSlStp	equ 23	;RESW 1
      52:  00:8709  (00:0019)           CHNPRM_TnDelt	equ 25	;RESW 1
      53:  00:8709  (00:001B)           CHNPRM_NtSkCn	equ 27	;RESB 1
      54:  00:8709  (00:001C)           CHNPRM_Volume	equ 28	;RESB 1
      55:  00:8709  (00:001D)           CHNPRM_Size	equ 29	;RESB 1
      56:  00:8709                      ;endstruc
      57:  00:8709                      
      58:  00:8709                      ;struc	AR
      59:  00:8709  (00:0000)           AR_TonA		equ 0	;RESW 1
      60:  00:8709  (00:0002)           AR_TonB		equ 2	;RESW 1
      61:  00:8709  (00:0004)           AR_TonC		equ 4	;RESW 1
      62:  00:8709  (00:0006)           AR_Noise	equ 6	;RESB 1
      63:  00:8709  (00:0007)           AR_Mixer	equ 7	;RESB 1
      64:  00:8709  (00:0008)           AR_AmplA	equ 8	;RESB 1
      65:  00:8709  (00:0009)           AR_AmplB	equ 9	;RESB 1
      66:  00:8709  (00:000A)           AR_AmplC	equ 10	;RESB 1
      67:  00:8709  (00:000B)           AR_Env		equ 11	;RESW 1
      68:  00:8709  (00:000D)           AR_EnvTp	equ 13	;RESB 1
      69:  00:8709                      ;endstruc
      70:  00:8709                      
      71:  00:8709                      		; --- CODE STARTS HERE ---
      72:  00:8709                      
      73:  00:8709  21 00 F0            CHECKLP:	LD	HL,PT3_SETUP
      74:  00:870C  CB FE               		SET	7,[HL]
      75:  00:870E  CB 46               		BIT	0,[HL]
      76:  00:8710  C8                  		RET	Z
      77:  00:8711  E1                  		POP	HL
      78:  00:8712  21 7A F0            		LD	HL,DelyCnt
      79:  00:8715  34                  		INC	[HL]
      80:  00:8716  21 3E F0            		LD	HL,ChanA+CHNPRM_NtSkCn
      81:  00:8719  34                  		INC	[HL]
      82:  00:871A  AF                  PT3_MUTE:	XOR	A
      83:  00:871B  67                  		LD	H,A
      84:  00:871C  6F                  		LD	L,A
      85:  00:871D  32 48 F1            		LD	[AYREGS+AR_AmplA],A
      86:  00:8720  22 49 F1            		LD	[AYREGS+AR_AmplB],HL
      87:  00:8723  C3 6C 8C            		JP	ROUT_A0
      88:  00:8726                      
      89:  00:8726                      PT3_INIT:	;HL - AddressOfModule - 100
      90:  00:8726  22 01 F0            		LD [PT3_MODADDR],HL
      91:  00:8729  E5                  		PUSH HL
      92:  00:872A  11 64 00            		LD DE,100
      93:  00:872D  19                  		ADD HL,DE
      94:  00:872E  7E                  		LD A,[HL]
      95:  00:872F  32 1C F0            		LD [PT3_Delay],A
      96:  00:8732  E5                  		PUSH HL
      97:  00:8733  DD E1               		POP IX
      98:  00:8735  19                  		ADD HL,DE
      99:  00:8736  22 03 F0            		LD [PT3_CrPsPtr],HL
     100:  00:8739  DD 5E 02            		LD E,[IX+102-100]
     101:  00:873C  19                  		ADD HL,DE
     102:  00:873D  23                  		INC HL
     103:  00:873E  22 18 F0            		LD [PT3_LPosPtr],HL
     104:  00:8741  D1                  		POP DE
     105:  00:8742  DD 6E 03            		LD L,[IX+103-100]
     106:  00:8745  DD 66 04            		LD H,[IX+104-100]
     107:  00:8748  19                  		ADD HL,DE
     108:  00:8749  22 1A F0            		LD [PT3_PatsPtr],HL
     109:  00:874C  21 A9 00            		LD HL,169
     110:  00:874F  19                  		ADD HL,DE
     111:  00:8750  22 07 F0            		LD [PT3_OrnPtrs],HL
     112:  00:8753  21 69 00            		LD HL,105
     113:  00:8756  19                  		ADD HL,DE
     114:  00:8757  22 05 F0            		LD [PT3_SAMPTRS],HL
     115:  00:875A  21 00 F0            		LD HL,PT3_SETUP
     116:  00:875D  CB BE               		RES 7,[HL]
     117:  00:875F                      
     118:  00:875F                      		; --- note table data depacker ---
     119:  00:875F                      		; Depacks first 12 tones of each tone table
     120:  00:875F                      
     121:  00:875F  11 E0 8C            		LD DE,T_PACK
     122:  00:8762  01 B1 F1            		LD BC,T1_+(2*49)-1
     123:  00:8765  1A                  .TP_0:		LD A,[DE]
     124:  00:8766  13                  		INC DE
     125:  00:8767  FE 1E               		CP 15*2
     126:  00:8769  30 06               		JR NC,.TP_1
     127:  00:876B  67                  		LD H,A
     128:  00:876C  1A                  		LD A,[DE]
     129:  00:876D  6F                  		LD L,A
     130:  00:876E  13                  		INC DE
     131:  00:876F  18 07               		JR .TP_2
     132:  00:8771  D5                  .TP_1:		PUSH DE
     133:  00:8772  16 00               		LD D,0
     134:  00:8774  5F                  		LD E,A
     135:  00:8775  19                  		ADD HL,DE
     136:  00:8776  19                  		ADD HL,DE
     137:  00:8777  D1                  		POP DE
     138:  00:8778  7C                  .TP_2:		LD A,H
     139:  00:8779  02                  		LD [BC],A
     140:  00:877A  0B                  		DEC BC
     141:  00:877B  7D                  		LD A,L
     142:  00:877C  02                  		LD [BC],A
     143:  00:877D  0B                  		DEC BC
     144:  00:877E  D6 F0               		SUB $F0
     145:  00:8780  20 E3               		JR NZ,.TP_0
     146:  00:8782                      
     147:  00:8782                      		; --- INITIALIZE PT3 VARIABLES ---
     148:  00:8782  21 23 F0            		LD HL,VARS
     149:  00:8785  77                  		LD [HL],A
     150:  00:8786  11 24 F0            		LD DE,VARS+1
     151:  00:8789  01 2C 01            		LD BC,VAR0END-VARS-1
     152:  00:878C  ED B0               		LDIR
     153:  00:878E                      
     154:  00:878E  3C                  		INC A
     155:  00:878F  32 7A F0            		LD [DelyCnt],A
     156:  00:8792  21 01 F0            		LD HL,$F001 ;H - CHNPRM_Volume, L - CHNPRM_NtSkCn
     157:  00:8795  22 3E F0            		LD [ChanA+CHNPRM_NtSkCn],HL
     158:  00:8798  22 5B F0            		LD [ChanB+CHNPRM_NtSkCn],HL
     159:  00:879B  22 78 F0            		LD [ChanC+CHNPRM_NtSkCn],HL
     160:  00:879E                      
     161:  00:879E  21 DC 8C            		LD HL,EMPTYSAMORN
     162:  00:87A1  22 12 F0            		LD [PT3_AdInPtA],HL ;ptr to zero
     163:  00:87A4  22 30 F0            		LD [ChanA+CHNPRM_OrnPtr],HL ;ornament 0 is "0,1,0"
     164:  00:87A7  22 4D F0            		LD [ChanB+CHNPRM_OrnPtr],HL ;in all versions from
     165:  00:87AA  22 6A F0            		LD [ChanC+CHNPRM_OrnPtr],HL ;3.xx to 3.6x and VTII
     166:  00:87AD                      
     167:  00:87AD  22 32 F0            		LD [ChanA+CHNPRM_SamPtr],HL ;S1 There is no default
     168:  00:87B0  22 4F F0            		LD [ChanB+CHNPRM_SamPtr],HL ;S2 sample in PT3, so, you
     169:  00:87B3  22 6C F0            		LD [ChanC+CHNPRM_SamPtr],HL ;S3 can comment S1,2,3; see
     170:  00:87B6                      					    ;also EMPTYSAMORN comment
     171:  00:87B6                      
     172:  00:87B6                      		; --- NOTE TABLE CREATOR (c) Ivan Roshin, adapted by SapphiRe ---
     173:  00:87B6  DD 7E FF            		LD A,[IX+99-100] ;TONE TABLE NUMBER
     174:  00:87B9  17                  		RLA
     175:  00:87BA  E6 07               		AND 7
     176:  00:87BC  21 8C 8C            		LD HL,NT_DATA
     177:  00:87BF  D5                  		PUSH DE
     178:  00:87C0  50                  		LD D,B		; ld d,0 (bc is 0000 after LDIR)
     179:  00:87C1  87                  		ADD A,A
     180:  00:87C2  5F                  		LD E,A
     181:  00:87C3  19                  		ADD HL,DE	; hl -> init of correct note table data
     182:  00:87C4  5E                  		LD E,[HL]
     183:  00:87C5  23                  		INC HL
     184:  00:87C6  CB 3B               		SRL E
     185:  00:87C8  9F                  		SBC A,A
     186:  00:87C9  E6 A7               		AND $A7			;$00 (NOP) or $A7 (AND A)
     187:  00:87CB  32 21 F0            		LD [PT3_NTL3],A		; CORRECT INSTRUCTION, DEPENDS OF SELECTED TABLE
     188:  00:87CE  3E C9               		LD A,$C9		; RET CODE
     189:  00:87D0  32 22 F0            		LD [PT3_NTL3+1],A	; RET PLACED
     190:  00:87D3  EB                  		EX DE,HL
     191:  00:87D4  C1                  		POP BC ;BC=T1_
     192:  00:87D5  09                  		ADD HL,BC
     193:  00:87D6                      
     194:  00:87D6  1A                  		LD A,[DE]                           
     195:  00:87D7                      
     196:  00:87D7  01 9C 8C            		LD BC,T_
     197:  00:87DA  81                  		ADD A,C
     198:  00:87DB  4F                  		LD C,A
     199:  00:87DC  88                  		ADC A,B
     200:  00:87DD                      
     201:  00:87DD  91                  		SUB C
     202:  00:87DE  47                  		LD B,A
     203:  00:87DF  C5                  		PUSH BC
     204:  00:87E0  11 80 F0            		LD DE,NT_
     205:  00:87E3  D5                  		PUSH DE
     206:  00:87E4                      
     207:  00:87E4  06 0C               		LD B,12
     208:  00:87E6  C5                  .L1:		PUSH BC
     209:  00:87E7  4E                  		LD C,[HL]
     210:  00:87E8  23                  		INC HL
     211:  00:87E9  E5                  		PUSH HL
     212:  00:87EA  46                  		LD B,[HL]
     213:  00:87EB                      
     214:  00:87EB  D5                  		PUSH DE
     215:  00:87EC  EB                  		EX DE,HL
     216:  00:87ED  11 17 00            		LD DE,23
     217:  00:87F0  DD 26 08            		db $DD,$26,$08	;LD XH,8
     218:  00:87F3                      
     219:  00:87F3  CB 38               .L2:		SRL B
     220:  00:87F5  CB 19               		RR C
     221:  00:87F7  CD 21 F0            .L3:		CALL PT3_NTL3	;AND A or NOP
     222:  00:87FA  79                  		LD A,C
     223:  00:87FB  8A                  		ADC A,D	;=ADC 0
     224:  00:87FC  77                  		LD [HL],A
     225:  00:87FD  23                  		INC HL
     226:  00:87FE  78                  		LD A,B
     227:  00:87FF  8A                  		ADC A,D
     228:  00:8800  77                  		LD [HL],A
     229:  00:8801  19                  		ADD HL,DE
     230:  00:8802  DD 25               		db $DD,$25	;DEC XH
     231:  00:8804  20 ED               		JR NZ,.L2
     232:  00:8806                      
     233:  00:8806  D1                  		POP DE
     234:  00:8807  13                  		INC DE
     235:  00:8808  13                  		INC DE
     236:  00:8809  E1                  		POP HL
     237:  00:880A  23                  		INC HL
     238:  00:880B  C1                  		POP BC
     239:  00:880C  10 D8               		DJNZ .L1
     240:  00:880E                      
     241:  00:880E  E1                  		POP HL
     242:  00:880F  D1                  		POP DE
     243:  00:8810                      
     244:  00:8810  7B                  		LD A,E
     245:  00:8811  D5                  		PUSH DE
     246:  00:8812  11 A8 8C            		LD DE,TCOLD_1
     247:  00:8815  BB                  		CP E
     248:  00:8816  D1                  		POP DE
     249:  00:8817  20 05               		JR NZ,.CORR_1
     250:  00:8819  3E FD               		LD A,$FD
     251:  00:881B  32 AE F0            		LD [NT_+$2E],A
     252:  00:881E                      
     253:  00:881E  1A                  .CORR_1:	LD A,[DE]
     254:  00:881F  A7                  		AND A
     255:  00:8820  28 11               		JR Z,.TC_EXIT
     256:  00:8822  1F                  		RRA
     257:  00:8823  F5                  		PUSH AF
     258:  00:8824  87                  		ADD A,A
     259:  00:8825  4F                  		LD C,A
     260:  00:8826  09                  		ADD HL,BC
     261:  00:8827  F1                  		POP AF
     262:  00:8828  30 02               		JR NC,.CORR_2
     263:  00:882A  35                  		DEC [HL]
     264:  00:882B  35                  		DEC [HL]
     265:  00:882C  34                  .CORR_2:	INC [HL]
     266:  00:882D  A7                  		AND A
     267:  00:882E  ED 42               		SBC HL,BC
     268:  00:8830  13                  		INC DE
     269:  00:8831  18 EB               		JR .CORR_1
     270:  00:8833                      
     271:  00:8833                      .TC_EXIT:	;POP AF
     272:  00:8833                      
     273:  00:8833                      		; --- CREATE PT3 VOLUME TABLE (c) Ivan Roshin, adapted by SapphiRe ---
     274:  00:8833  21 11 00            		ld	hl,$11
     275:  00:8836  54                  		ld	d,h
     276:  00:8837  5C                  		ld	e,h
     277:  00:8838  DD 21 50 F1         		ld	IX,VT_+16
     278:  00:883C  06 0F               		ld	b,15
     279:  00:883E  E5                  .INITV1:	push	hl
     280:  00:883F  19                  		add	hl,de
     281:  00:8840  EB                  		ex	de,hl
     282:  00:8841  ED 62               		sbc	hl,hl
     283:  00:8843  48                  		ld	c,b
     284:  00:8844  06 10               		ld	b,16
     285:  00:8846  7D                  .INITV2:	ld	a,l
     286:  00:8847  17                  		rla
     287:  00:8848  7C                  		ld	a,h
     288:  00:8849  CE 00               		adc	a,0
     289:  00:884B  DD 77 00            		ld	[ix],a
     290:  00:884E  DD 23               		inc	ix
     291:  00:8850  19                  		add	hl,de
     292:  00:8851  10 F3               		djnz	.INITV2
     293:  00:8853  E1                  		pop	hl
     294:  00:8854  7B                  		ld	a,e
     295:  00:8855  FE 77               		cp	$77
     296:  00:8857  20 01               		jr	nz,.INITV3
     297:  00:8859  1C                  		inc	e
     298:  00:885A  41                  .INITV3:	ld	b,c
     299:  00:885B  10 E1               		djnz	.INITV1
     300:  00:885D                      
     301:  00:885D  C9                  		RET
     302:  00:885E                      
     303:  00:885E                      		;pattern decoder
     304:  00:885E  DD 36 08 00         PD_OrSm:	LD [IX+(CHNPRM_Env_En-12)],0
     305:  00:8862  CD E8 89            		CALL SETORN
     306:  00:8865  0A                  		LD A,[BC]
     307:  00:8866  03                  		INC BC
     308:  00:8867  0F                  		RRCA
     309:  00:8868                      
     310:  00:8868  87                  PD_SAM:		ADD A,A
     311:  00:8869  5F                  PD_SAM_:	LD E,A
     312:  00:886A  16 00               		LD D,0
     313:  00:886C  2A 05 F0            		LD HL,[PT3_SAMPTRS]
     314:  00:886F  19                  		ADD HL,DE
     315:  00:8870  5E                  		LD E,[HL]
     316:  00:8871  23                  		INC HL
     317:  00:8872  56                  		LD D,[HL]
     318:  00:8873  2A 01 F0            		LD HL,[PT3_MODADDR]
     319:  00:8876  19                  		ADD HL,DE
     320:  00:8877  DD 75 03            		LD [IX+(CHNPRM_SamPtr-12)],L
     321:  00:887A  DD 74 04            		LD [IX+(CHNPRM_SamPtr+1-12)],H
     322:  00:887D  18 41               		JR PD_LOOP
     323:  00:887F                      
     324:  00:887F  07                  PD_VOL:		RLCA
     325:  00:8880  07                  		RLCA
     326:  00:8881  07                  		RLCA
     327:  00:8882  07                  		RLCA
     328:  00:8883  DD 77 10            		LD [IX+(CHNPRM_Volume-12)],A
     329:  00:8886  18 3B               		JR PD_LP2
     330:  00:8888                      	
     331:  00:8888  DD 77 08            PD_EOff:	LD [IX+(CHNPRM_Env_En-12)],A
     332:  00:888B  DD 77 F4            		LD [IX+(CHNPRM_PsInOr-12)],A
     333:  00:888E  18 33               		JR PD_LP2
     334:  00:8890                      
     335:  00:8890  3D                  PD_SorE:	DEC A
     336:  00:8891  20 07               		JR NZ,PD_ENV
     337:  00:8893  0A                  		LD A,[BC]
     338:  00:8894  03                  		INC BC
     339:  00:8895  DD 77 05            		LD [IX+(CHNPRM_NNtSkp-12)],A
     340:  00:8898  18 29               		JR PD_LP2
     341:  00:889A                      
     342:  00:889A  CD CC 89            PD_ENV:		CALL SETENV
     343:  00:889D  18 24               		JR PD_LP2
     344:  00:889F                      
     345:  00:889F  CD E8 89            PD_ORN:		CALL SETORN
     346:  00:88A2  18 1C               		JR PD_LOOP
     347:  00:88A4                             
     348:  00:88A4  DD 77 08            PD_ESAM:	LD [IX+(CHNPRM_Env_En-12)],A
     349:  00:88A7  DD 77 F4            		LD [IX+(CHNPRM_PsInOr-12)],A
     350:  00:88AA  C4 CC 89            		CALL NZ,SETENV
     351:  00:88AD  0A                  		LD A,[BC]
     352:  00:88AE  03                  		INC BC
     353:  00:88AF  18 B8               		JR PD_SAM_
     354:  00:88B1                      
     355:  00:88B1  DD 7E 06            PTDECOD:	LD A,[IX+(CHNPRM_Note-12)]
     356:  00:88B4  32 0F F0            		LD [PT3_PrNote],A
     357:  00:88B7  DD 6E FA            		LD L,[IX+(CHNPRM_CrTnSl-12)]
     358:  00:88BA  DD 66 FB            		LD H,[IX+(CHNPRM_CrTnSl+1-12)]
     359:  00:88BD  22 10 F0            		LD [PT3_PrSlide],HL
     360:  00:88C0                      
     361:  00:88C0  11 10 20            PD_LOOP:	LD DE,$2010
     362:  00:88C3  0A                  PD_LP2:		LD A,[BC]
     363:  00:88C4  03                  		INC BC
     364:  00:88C5  83                  		ADD A,E
     365:  00:88C6  38 96               		JR C,PD_OrSm
     366:  00:88C8  82                  		ADD A,D
     367:  00:88C9  28 4A               		JR Z,PD_FIN
     368:  00:88CB  38 9B               		JR C,PD_SAM
     369:  00:88CD  83                  		ADD A,E
     370:  00:88CE  28 25               		JR Z,PD_REL
     371:  00:88D0  38 AD               		JR C,PD_VOL
     372:  00:88D2  83                  		ADD A,E
     373:  00:88D3  28 B3               		JR Z,PD_EOff
     374:  00:88D5  38 B9               		JR C,PD_SorE
     375:  00:88D7  C6 60               		ADD A,96
     376:  00:88D9  38 20               		JR C,PD_NOTE
     377:  00:88DB  83                  		ADD A,E
     378:  00:88DC  38 C1               		JR C,PD_ORN
     379:  00:88DE  82                  		ADD A,D
     380:  00:88DF  38 0F               		JR C,PD_NOIS
     381:  00:88E1  83                  		ADD A,E
     382:  00:88E2  38 C0               		JR C,PD_ESAM
     383:  00:88E4  87                  		ADD A,A
     384:  00:88E5  5F                  		LD E,A
     385:  00:88E6  21 21 69            		LD HL,(SPCCOMS+$DF20) % 65536	; Adapted from original Speccy version (saves 6 bytes)
     386:  00:88E9  19                  		ADD HL,DE
     387:  00:88EA  5E                  		LD E,[HL]
     388:  00:88EB  23                  		INC HL
     389:  00:88EC  56                  		LD D,[HL]
     390:  00:88ED  D5                  		PUSH DE
     391:  00:88EE  18 D0               		JR PD_LOOP
     392:  00:88F0                      
     393:  00:88F0  32 7E F0            PD_NOIS:	LD [Ns_Base],A
     394:  00:88F3  18 CE               		JR PD_LP2
     395:  00:88F5                      
     396:  00:88F5  DD CB 09 86         PD_REL:		RES 0,[IX+(CHNPRM_Flags-12)]
     397:  00:88F9  18 08               		JR PD_RES
     398:  00:88FB                      	
     399:  00:88FB  DD 77 06            PD_NOTE:	LD [IX+(CHNPRM_Note-12)],A
     400:  00:88FE  DD CB 09 C6         		SET 0,[IX+(CHNPRM_Flags-12)]
     401:  00:8902  AF                  		XOR A
     402:  00:8903                      
     403:  00:8903  ED 73 09 F0         PD_RES:		LD [PT3_PDSP],SP
     404:  00:8907  DD F9               		LD SP,IX
     405:  00:8909  67                  		LD H,A
     406:  00:890A  6F                  		LD L,A
     407:  00:890B  E5                  		PUSH HL
     408:  00:890C  E5                  		PUSH HL
     409:  00:890D  E5                  		PUSH HL
     410:  00:890E  E5                  		PUSH HL
     411:  00:890F  E5                  		PUSH HL
     412:  00:8910  E5                  		PUSH HL
     413:  00:8911  ED 7B 09 F0         		LD SP,[PT3_PDSP]
     414:  00:8915                      
     415:  00:8915  DD 7E 05            PD_FIN:		LD A,[IX+(CHNPRM_NNtSkp-12)]
     416:  00:8918  DD 77 0F            		LD [IX+(CHNPRM_NtSkCn-12)],A
     417:  00:891B  C9                  		RET
     418:  00:891C                      
     419:  00:891C  DD CB 09 96         C_PORTM:	RES 2,[IX+(CHNPRM_Flags-12)]
     420:  00:8920  0A                  		LD A,[BC]
     421:  00:8921  03                  		INC BC
     422:  00:8922                      		;SKIP PRECALCULATED TONE DELTA [BECAUSE
     423:  00:8922                      		;CANNOT BE RIGHT AFTER PT3 COMPILATION]
     424:  00:8922  03                  		INC BC
     425:  00:8923  03                  		INC BC
     426:  00:8924  DD 77 0A            		LD [IX+(CHNPRM_TnSlDl-12)],A
     427:  00:8927  DD 77 F9            		LD [IX+(CHNPRM_TSlCnt-12)],A
     428:  00:892A  11 80 F0            		LD DE,NT_
     429:  00:892D  DD 7E 06            		LD A,[IX+(CHNPRM_Note-12)]
     430:  00:8930  DD 77 07            		LD [IX+(CHNPRM_SlToNt-12)],A
     431:  00:8933  87                  		ADD A,A
     432:  00:8934  6F                  		LD L,A
     433:  00:8935  26 00               		LD H,0
     434:  00:8937  19                  		ADD HL,DE
     435:  00:8938  7E                  		LD A,[HL]
     436:  00:8939  23                  		INC HL
     437:  00:893A  66                  		LD H,[HL]
     438:  00:893B  6F                  		LD L,A
     439:  00:893C  E5                  		PUSH HL
     440:  00:893D  3A 0F F0            		LD A,[PT3_PrNote]
     441:  00:8940  DD 77 06            		LD [IX+(CHNPRM_Note-12)],A
     442:  00:8943  87                  		ADD A,A
     443:  00:8944  6F                  		LD L,A
     444:  00:8945  26 00               		LD H,0
     445:  00:8947  19                  		ADD HL,DE
     446:  00:8948  5E                  		LD E,[HL]
     447:  00:8949  23                  		INC HL
     448:  00:894A  56                  		LD D,[HL]
     449:  00:894B  E1                  		POP HL
     450:  00:894C  ED 52               		SBC HL,DE
     451:  00:894E  DD 75 0D            		LD [IX+(CHNPRM_TnDelt-12)],L
     452:  00:8951  DD 74 0E            		LD [IX+(CHNPRM_TnDelt+1-12)],H
     453:  00:8954  ED 5B 10 F0         		LD DE,[PT3_PrSlide]
     454:  00:8958  DD 73 FA            		LD [IX+(CHNPRM_CrTnSl-12)],E
     455:  00:895B  DD 72 FB            		LD [IX+(CHNPRM_CrTnSl+1-12)],D
     456:  00:895E  0A                  		LD A,[BC] ;SIGNED TONE STEP
     457:  00:895F  03                  		INC BC
     458:  00:8960  08                  		EX AF,AF'
     459:  00:8961  0A                  		LD A,[BC]
     460:  00:8962  03                  		INC BC
     461:  00:8963  A7                  		AND A
     462:  00:8964  28 01               		JR Z,.NOSIG
     463:  00:8966  EB                  		EX DE,HL
     464:  00:8967  ED 52               .NOSIG:	SBC HL,DE
     465:  00:8969  F2 71 89            		JP P,SET_STP
     466:  00:896C  2F                  		CPL
     467:  00:896D  08                  		EX AF,AF'
     468:  00:896E  ED 44               		NEG
     469:  00:8970  08                  		EX AF,AF'
     470:  00:8971  DD 77 0C            SET_STP:	LD [IX+(CHNPRM_TSlStp+1-12)],A
     471:  00:8974  08                  		EX AF,AF'
     472:  00:8975  DD 77 0B            		LD [IX+(CHNPRM_TSlStp-12)],A
     473:  00:8978  DD 36 FE 00         		LD [IX+(CHNPRM_COnOff-12)],0
     474:  00:897C  C9                  		RET
     475:  00:897D                      
     476:  00:897D  DD CB 09 D6         C_GLISS:	SET 2,[IX+(CHNPRM_Flags-12)]
     477:  00:8981  0A                  		LD A,[BC]
     478:  00:8982  03                  		INC BC
     479:  00:8983  DD 77 0A            		LD [IX+(CHNPRM_TnSlDl-12)],A
     480:  00:8986  DD 77 F9            		LD [IX+(CHNPRM_TSlCnt-12)],A
     481:  00:8989  0A                  		LD A,[BC]
     482:  00:898A  03                  		INC BC
     483:  00:898B  08                  		EX AF,AF'
     484:  00:898C  0A                  		LD A,[BC]
     485:  00:898D  03                  		INC BC
     486:  00:898E  18 E1               		JR SET_STP
     487:  00:8990                      
     488:  00:8990  0A                  C_SMPOS:	LD A,[BC]
     489:  00:8991  03                  		INC BC
     490:  00:8992  DD 77 F5            		LD [IX+(CHNPRM_PsInSm-12)],A
     491:  00:8995  C9                  		RET
     492:  00:8996                      
     493:  00:8996  0A                  C_ORPOS:	LD A,[BC]
     494:  00:8997  03                  		INC BC
     495:  00:8998  DD 77 F4            		LD [IX+(CHNPRM_PsInOr-12)],A
     496:  00:899B  C9                  		RET
     497:  00:899C                      
     498:  00:899C  0A                  C_VIBRT:	LD A,[BC]
     499:  00:899D  03                  		INC BC
     500:  00:899E  DD 77 FF            		LD [IX+(CHNPRM_OnOffD-12)],A
     501:  00:89A1  DD 77 FE            		LD [IX+(CHNPRM_COnOff-12)],A
     502:  00:89A4  0A                  		LD A,[BC]
     503:  00:89A5  03                  		INC BC
     504:  00:89A6  DD 77 00            		LD [IX+(CHNPRM_OffOnD-12)],A
     505:  00:89A9  AF                  		XOR A
     506:  00:89AA  DD 77 F9            		LD [IX+(CHNPRM_TSlCnt-12)],A
     507:  00:89AD  DD 77 FA            		LD [IX+(CHNPRM_CrTnSl-12)],A
     508:  00:89B0  DD 77 FB            		LD [IX+(CHNPRM_CrTnSl+1-12)],A
     509:  00:89B3  C9                  		RET
     510:  00:89B4                      
     511:  00:89B4  0A                  C_ENGLS:	LD A,[BC]
     512:  00:89B5  03                  		INC BC
     513:  00:89B6  32 1E F0            		LD [PT3_Env_Del],A
     514:  00:89B9  32 7D F0            		LD [CurEDel],A
     515:  00:89BC  0A                  		LD A,[BC]
     516:  00:89BD  03                  		INC BC
     517:  00:89BE  6F                  		LD L,A
     518:  00:89BF  0A                  		LD A,[BC]
     519:  00:89C0  03                  		INC BC
     520:  00:89C1  67                  		LD H,A
     521:  00:89C2  22 1F F0            		LD [PT3_ESldAdd],HL
     522:  00:89C5  C9                  		RET
     523:  00:89C6                      
     524:  00:89C6  0A                  C_DELAY:	LD A,[BC]
     525:  00:89C7  03                  		INC BC
     526:  00:89C8  32 1C F0            		LD [PT3_Delay],A
     527:  00:89CB  C9                  		RET
     528:  00:89CC                      	
     529:  00:89CC  DD 73 08            SETENV:		LD [IX+(CHNPRM_Env_En-12)],E
     530:  00:89CF  32 4D F1            		LD [AYREGS+AR_EnvTp],A
     531:  00:89D2  0A                  		LD A,[BC]
     532:  00:89D3  03                  		INC BC
     533:  00:89D4  67                  		LD H,A
     534:  00:89D5  0A                  		LD A,[BC]
     535:  00:89D6  03                  		INC BC
     536:  00:89D7  6F                  		LD L,A
     537:  00:89D8  22 4E F1            		LD [EnvBase],HL
     538:  00:89DB  AF                  		XOR A
     539:  00:89DC  DD 77 F4            		LD [IX+(CHNPRM_PsInOr-12)],A
     540:  00:89DF  32 7D F0            		LD [CurEDel],A
     541:  00:89E2  67                  		LD H,A
     542:  00:89E3  6F                  		LD L,A
     543:  00:89E4  22 7B F0            		LD [CurESld],HL
     544:  00:89E7  C9                  C_NOP:		RET
     545:  00:89E8                      
     546:  00:89E8  87                  SETORN:		ADD A,A
     547:  00:89E9  5F                  		LD E,A
     548:  00:89EA  16 00               		LD D,0
     549:  00:89EC  DD 72 F4            		LD [IX+(CHNPRM_PsInOr-12)],D
     550:  00:89EF  2A 07 F0            		LD HL,[PT3_OrnPtrs]
     551:  00:89F2  19                  		ADD HL,DE
     552:  00:89F3  5E                  		LD E,[HL]
     553:  00:89F4  23                  		INC HL
     554:  00:89F5  56                  		LD D,[HL]
     555:  00:89F6  2A 01 F0            		LD HL,[PT3_MODADDR]
     556:  00:89F9  19                  		ADD HL,DE
     557:  00:89FA  DD 75 01            		LD [IX+(CHNPRM_OrnPtr-12)],L
     558:  00:89FD  DD 74 02            		LD [IX+(CHNPRM_OrnPtr+1-12)],H
     559:  00:8A00  C9                  		RET
     560:  00:8A01                      
     561:  00:8A01                      		;ALL 16 ADDRESSES TO PROTECT FROM BROKEN PT3 MODULES
     562:  00:8A01  E7 89               SPCCOMS:	dw C_NOP
     563:  00:8A03  7D 89               		dw C_GLISS
     564:  00:8A05  1C 89               		dw C_PORTM
     565:  00:8A07  90 89               		dw C_SMPOS
     566:  00:8A09  96 89               		dw C_ORPOS
     567:  00:8A0B  9C 89               		dw C_VIBRT
     568:  00:8A0D  E7 89               		dw C_NOP
     569:  00:8A0F  E7 89               		dw C_NOP
     570:  00:8A11  B4 89               		dw C_ENGLS
     571:  00:8A13  C6 89               		dw C_DELAY
     572:  00:8A15  E7 89               		dw C_NOP
     573:  00:8A17  E7 89               		dw C_NOP
     574:  00:8A19  E7 89               		dw C_NOP
     575:  00:8A1B  E7 89               		dw C_NOP
     576:  00:8A1D  E7 89               		dw C_NOP
     577:  00:8A1F  E7 89               		dw C_NOP
     578:  00:8A21                      
     579:  00:8A21  AF                  CHREGS:		XOR A
     580:  00:8A22  32 4A F1            		LD [AYREGS+AR_AmplC],A
     581:  00:8A25  DD CB 15 46         		BIT 0,[IX+CHNPRM_Flags]
     582:  00:8A29  E5                  		PUSH HL
     583:  00:8A2A  CA 50 8B            		JP Z,.CH_EXIT
     584:  00:8A2D  ED 73 0B F0         		LD [PT3_CSP],SP
     585:  00:8A31  DD 6E 0D            		LD L,[IX+CHNPRM_OrnPtr]
     586:  00:8A34  DD 66 0E            		LD H,[IX+CHNPRM_OrnPtr+1]
     587:  00:8A37  F9                  		LD SP,HL
     588:  00:8A38  D1                  		POP DE
     589:  00:8A39  67                  		LD H,A
     590:  00:8A3A  DD 7E 00            		LD A,[IX+CHNPRM_PsInOr]
     591:  00:8A3D  6F                  		LD L,A
     592:  00:8A3E  39                  		ADD HL,SP
     593:  00:8A3F  3C                  		INC A
     594:  00:8A40  BA                  		CP D
     595:  00:8A41  38 01               		JR C,.CH_ORPS
     596:  00:8A43  7B                  		LD A,E
     597:  00:8A44  DD 77 00            .CH_ORPS:	LD [IX+CHNPRM_PsInOr],A
     598:  00:8A47  DD 7E 12            		LD A,[IX+CHNPRM_Note]
     599:  00:8A4A  86                  		ADD A,[HL]
     600:  00:8A4B  F2 4F 8A            		JP P,.CH_NTP
     601:  00:8A4E  AF                  		XOR A
     602:  00:8A4F  FE 60               .CH_NTP:	CP 96
     603:  00:8A51  38 02               		JR C,.CH_NOK
     604:  00:8A53  3E 5F               		LD A,95
     605:  00:8A55  87                  .CH_NOK:	ADD A,A
     606:  00:8A56  08                  		EX AF,AF'
     607:  00:8A57  DD 6E 0F            		LD L,[IX+CHNPRM_SamPtr]
     608:  00:8A5A  DD 66 10            		LD H,[IX+CHNPRM_SamPtr+1]
     609:  00:8A5D  F9                  		LD SP,HL
     610:  00:8A5E  D1                  		POP DE
     611:  00:8A5F  26 00               		LD H,0
     612:  00:8A61  DD 7E 01            		LD A,[IX+CHNPRM_PsInSm]
     613:  00:8A64  47                  		LD B,A
     614:  00:8A65  87                  		ADD A,A
     615:  00:8A66  87                  		ADD A,A
     616:  00:8A67  6F                  		LD L,A
     617:  00:8A68  39                  		ADD HL,SP
     618:  00:8A69  F9                  		LD SP,HL
     619:  00:8A6A  78                  		LD A,B
     620:  00:8A6B  3C                  		INC A
     621:  00:8A6C  BA                  		CP D
     622:  00:8A6D  38 01               		JR C,.CH_SMPS
     623:  00:8A6F  7B                  		LD A,E
     624:  00:8A70  DD 77 01            .CH_SMPS:	LD [IX+CHNPRM_PsInSm],A
     625:  00:8A73  C1                  		POP BC
     626:  00:8A74  E1                  		POP HL
     627:  00:8A75  DD 5E 08            		LD E,[IX+CHNPRM_TnAcc]
     628:  00:8A78  DD 56 09            		LD D,[IX+CHNPRM_TnAcc+1]
     629:  00:8A7B  19                  		ADD HL,DE
     630:  00:8A7C  CB 70               		BIT 6,B
     631:  00:8A7E  28 06               		JR Z,.CH_NOAC
     632:  00:8A80  DD 75 08            		LD [IX+CHNPRM_TnAcc],L
     633:  00:8A83  DD 74 09            		LD [IX+CHNPRM_TnAcc+1],H
     634:  00:8A86  EB                  .CH_NOAC:	EX DE,HL
     635:  00:8A87  08                  		EX AF,AF'
     636:  00:8A88  6F                  		LD L,A
     637:  00:8A89  26 00               		LD H,0
     638:  00:8A8B  31 80 F0            		LD SP,NT_
     639:  00:8A8E  39                  		ADD HL,SP
     640:  00:8A8F  F9                  		LD SP,HL
     641:  00:8A90  E1                  		POP HL
     642:  00:8A91  19                  		ADD HL,DE
     643:  00:8A92  DD 5E 06            		LD E,[IX+CHNPRM_CrTnSl]
     644:  00:8A95  DD 56 07            		LD D,[IX+CHNPRM_CrTnSl+1]
     645:  00:8A98  19                  		ADD HL,DE
     646:  00:8A99  ED 7B 0B F0         		LD SP,[PT3_CSP]
     647:  00:8A9D  E3                  		EX [SP],HL
     648:  00:8A9E  AF                  		XOR A
     649:  00:8A9F  DD B6 05            		OR [IX+CHNPRM_TSlCnt]
     650:  00:8AA2  28 3E               		JR Z,.CH_AMP
     651:  00:8AA4  DD 35 05            		DEC [IX+CHNPRM_TSlCnt]
     652:  00:8AA7  20 39               		JR NZ,.CH_AMP
     653:  00:8AA9  DD 7E 16            		LD A,[IX+CHNPRM_TnSlDl]
     654:  00:8AAC  DD 77 05            		LD [IX+CHNPRM_TSlCnt],A
     655:  00:8AAF  DD 6E 17            		LD L,[IX+CHNPRM_TSlStp]
     656:  00:8AB2  DD 66 18            		LD H,[IX+CHNPRM_TSlStp+1]
     657:  00:8AB5  7C                  		LD A,H
     658:  00:8AB6  19                  		ADD HL,DE
     659:  00:8AB7  DD 75 06            		LD [IX+CHNPRM_CrTnSl],L
     660:  00:8ABA  DD 74 07            		LD [IX+CHNPRM_CrTnSl+1],H
     661:  00:8ABD  DD CB 15 56         		BIT 2,[IX+CHNPRM_Flags]
     662:  00:8AC1  20 1F               		JR NZ,.CH_AMP
     663:  00:8AC3  DD 5E 19            		LD E,[IX+CHNPRM_TnDelt]
     664:  00:8AC6  DD 56 1A            		LD D,[IX+CHNPRM_TnDelt+1]
     665:  00:8AC9  A7                  		AND A
     666:  00:8ACA  28 01               		JR Z,.CH_STPP
     667:  00:8ACC  EB                  		EX DE,HL
     668:  00:8ACD  ED 52               .CH_STPP:	SBC HL,DE
     669:  00:8ACF  FA E2 8A            		JP M,.CH_AMP
     670:  00:8AD2  DD 7E 13            		LD A,[IX+CHNPRM_SlToNt]
     671:  00:8AD5  DD 77 12            		LD [IX+CHNPRM_Note],A
     672:  00:8AD8  AF                  		XOR A
     673:  00:8AD9  DD 77 05            		LD [IX+CHNPRM_TSlCnt],A
     674:  00:8ADC  DD 77 06            		LD [IX+CHNPRM_CrTnSl],A
     675:  00:8ADF  DD 77 07            		LD [IX+CHNPRM_CrTnSl+1],A
     676:  00:8AE2  DD 7E 02            .CH_AMP:	LD A,[IX+CHNPRM_CrAmSl]
     677:  00:8AE5  CB 79               		BIT 7,C
     678:  00:8AE7  28 13               		JR Z,.CH_NOAM
     679:  00:8AE9  CB 71               		BIT 6,C
     680:  00:8AEB  28 07               		JR Z,.CH_AMIN
     681:  00:8AED  FE 0F               		CP 15
     682:  00:8AEF  28 0B               		JR Z,.CH_NOAM
     683:  00:8AF1  3C                  		INC A
     684:  00:8AF2  18 05               		JR .CH_SVAM
     685:  00:8AF4  FE F1               .CH_AMIN:	CP -15
     686:  00:8AF6  28 04               		JR Z,.CH_NOAM
     687:  00:8AF8  3D                  		DEC A
     688:  00:8AF9  DD 77 02            .CH_SVAM:	LD [IX+CHNPRM_CrAmSl],A
     689:  00:8AFC  6F                  .CH_NOAM:	LD L,A
     690:  00:8AFD  78                  		LD A,B
     691:  00:8AFE  E6 0F               		AND 15
     692:  00:8B00  85                  		ADD A,L
     693:  00:8B01  F2 05 8B            		JP P,.CH_APOS
     694:  00:8B04  AF                  		XOR A
     695:  00:8B05  FE 10               .CH_APOS:	CP 16
     696:  00:8B07  38 02               		JR C,.CH_VOL
     697:  00:8B09  3E 0F               		LD A,15
     698:  00:8B0B  DD B6 1C            .CH_VOL:	OR [IX+CHNPRM_Volume]
     699:  00:8B0E  6F                  		LD L,A
     700:  00:8B0F  26 00               		LD H,0
     701:  00:8B11  11 40 F1            		LD DE,VT_
     702:  00:8B14  19                  		ADD HL,DE
     703:  00:8B15  7E                  		LD A,[HL]
     704:  00:8B16  CB 41               .CH_ENV:	BIT 0,C
     705:  00:8B18  20 03               		JR NZ,.CH_NOEN
     706:  00:8B1A  DD B6 14            		OR [IX+CHNPRM_Env_En]
     707:  00:8B1D  32 4A F1            .CH_NOEN:	LD [AYREGS+AR_AmplC],A
     708:  00:8B20  CB 78               		BIT 7,B
     709:  00:8B22  79                  		LD A,C
     710:  00:8B23  28 19               		JR Z,.NO_ENSL
     711:  00:8B25  17                  		RLA
     712:  00:8B26  17                  		RLA
     713:  00:8B27  CB 2F               		SRA A
     714:  00:8B29  CB 2F               		SRA A
     715:  00:8B2B  CB 2F               		SRA A
     716:  00:8B2D  DD 86 04            		ADD A,[IX+CHNPRM_CrEnSl] ;SEE COMMENT BELOW
     717:  00:8B30  CB 68               		BIT 5,B
     718:  00:8B32  28 03               		JR Z,.NO_ENAC
     719:  00:8B34  DD 77 04            		LD [IX+CHNPRM_CrEnSl],A
     720:  00:8B37  21 1D F0            .NO_ENAC:	LD HL,PT3_AddToEn
     721:  00:8B3A  86                  		ADD A,[HL] ;BUG IN PT3 - NEED WORD HERE.
     722:  00:8B3B                      			   ;FIX IT IN NEXT VERSION?
     723:  00:8B3B  77                  		LD [HL],A
     724:  00:8B3C  18 0E               		JR .CH_MIX
     725:  00:8B3E  1F                  .NO_ENSL:	RRA
     726:  00:8B3F  DD 86 03            		ADD A,[IX+CHNPRM_CrNsSl]
     727:  00:8B42  32 7F F0            		LD [AddToNs],A
     728:  00:8B45  CB 68               		BIT 5,B
     729:  00:8B47  28 03               		JR Z,.CH_MIX
     730:  00:8B49  DD 77 03            		LD [IX+CHNPRM_CrNsSl],A
     731:  00:8B4C  78                  .CH_MIX:	LD A,B
     732:  00:8B4D  1F                  		RRA
     733:  00:8B4E  E6 48               		AND $48
     734:  00:8B50  21 47 F1            .CH_EXIT:	LD HL,AYREGS+AR_Mixer
     735:  00:8B53  B6                  		OR [HL]
     736:  00:8B54  0F                  		RRCA
     737:  00:8B55  77                  		LD [HL],A
     738:  00:8B56  E1                  		POP HL
     739:  00:8B57  AF                  		XOR A
     740:  00:8B58  DD B6 0A            		OR [IX+CHNPRM_COnOff]
     741:  00:8B5B  C8                  		RET Z
     742:  00:8B5C  DD 35 0A            		DEC [IX+CHNPRM_COnOff]
     743:  00:8B5F  C0                  		RET NZ
     744:  00:8B60  DD AE 15            		XOR [IX+CHNPRM_Flags]
     745:  00:8B63  DD 77 15            		LD [IX+CHNPRM_Flags],A
     746:  00:8B66  1F                  		RRA
     747:  00:8B67  DD 7E 0B            		LD A,[IX+CHNPRM_OnOffD]
     748:  00:8B6A  38 03               		JR C,.CH_ONDL
     749:  00:8B6C  DD 7E 0C            		LD A,[IX+CHNPRM_OffOnD]
     750:  00:8B6F  DD 77 0A            .CH_ONDL:	LD [IX+CHNPRM_COnOff],A
     751:  00:8B72  C9                  		RET
     752:  00:8B73                      
     753:  00:8B73  AF                  PT3_PLAY:	XOR A
     754:  00:8B74  32 1D F0            		LD [PT3_AddToEn],A
     755:  00:8B77  32 47 F1            		LD [AYREGS+AR_Mixer],A
     756:  00:8B7A  3D                  		DEC A
     757:  00:8B7B  32 4D F1            		LD [AYREGS+AR_EnvTp],A
     758:  00:8B7E  21 7A F0            		LD HL,DelyCnt
     759:  00:8B81  35                  		DEC [HL]
     760:  00:8B82  C2 09 8C            		JP NZ,.PL2
     761:  00:8B85  21 3E F0            		LD HL,ChanA+CHNPRM_NtSkCn
     762:  00:8B88  35                  		DEC [HL]
     763:  00:8B89  20 4E               		JR NZ,.PL1B
     764:  00:8B8B  ED 4B 12 F0         		LD BC,[PT3_AdInPtA]
     765:  00:8B8F  0A                  		LD A,[BC]
     766:  00:8B90  A7                  		AND A
     767:  00:8B91  20 3B               		JR NZ,.PL1A
     768:  00:8B93  57                  		LD D,A
     769:  00:8B94  32 7E F0            		LD [Ns_Base],A
     770:  00:8B97  2A 03 F0            		LD HL,[PT3_CrPsPtr]
     771:  00:8B9A  23                  		INC HL
     772:  00:8B9B  7E                  		LD A,[HL]
     773:  00:8B9C  3C                  		INC A
     774:  00:8B9D  20 08               		JR NZ,.PLNLP
     775:  00:8B9F  CD 09 87            		CALL CHECKLP
     776:  00:8BA2  2A 18 F0            		LD HL,[PT3_LPosPtr]
     777:  00:8BA5  7E                  		LD A,[HL]
     778:  00:8BA6  3C                  		INC A
     779:  00:8BA7  22 03 F0            .PLNLP:	LD [PT3_CrPsPtr],HL
     780:  00:8BAA  3D                  		DEC A
     781:  00:8BAB  87                  		ADD A,A
     782:  00:8BAC  5F                  		LD E,A
     783:  00:8BAD  CB 12               		RL D
     784:  00:8BAF  2A 1A F0            		LD HL,[PT3_PatsPtr]
     785:  00:8BB2  19                  		ADD HL,DE
     786:  00:8BB3  ED 5B 01 F0         		LD DE,[PT3_MODADDR]
     787:  00:8BB7  ED 73 0D F0         		LD [PT3_PSP],SP
     788:  00:8BBB  F9                  		LD SP,HL
     789:  00:8BBC  E1                  		POP HL
     790:  00:8BBD  19                  		ADD HL,DE
     791:  00:8BBE  44                  		LD B,H
     792:  00:8BBF  4D                  		LD C,L
     793:  00:8BC0  E1                  		POP HL
     794:  00:8BC1  19                  		ADD HL,DE
     795:  00:8BC2  22 14 F0            		LD [PT3_AdInPtB],HL
     796:  00:8BC5  E1                  		POP HL
     797:  00:8BC6  19                  		ADD HL,DE
     798:  00:8BC7  22 16 F0            		LD [PT3_AdInPtC],HL
     799:  00:8BCA  ED 7B 0D F0         		LD SP,[PT3_PSP]
     800:  00:8BCE                      
     801:  00:8BCE  DD 21 2F F0         .PL1A:		LD IX,ChanA+12
     802:  00:8BD2  CD B1 88            		CALL PTDECOD
     803:  00:8BD5  ED 43 12 F0         		LD [PT3_AdInPtA],BC
     804:  00:8BD9                      
     805:  00:8BD9  21 5B F0            .PL1B:		LD HL,ChanB+CHNPRM_NtSkCn
     806:  00:8BDC  35                  		DEC [HL]
     807:  00:8BDD  20 0F               		JR NZ,.PL1C
     808:  00:8BDF  DD 21 4C F0         		LD IX,ChanB+12
     809:  00:8BE3  ED 4B 14 F0         		LD BC,[PT3_AdInPtB]
     810:  00:8BE7  CD B1 88            		CALL PTDECOD
     811:  00:8BEA  ED 43 14 F0         		LD [PT3_AdInPtB],BC
     812:  00:8BEE                      
     813:  00:8BEE  21 78 F0            .PL1C:		LD HL,ChanC+CHNPRM_NtSkCn
     814:  00:8BF1  35                  		DEC [HL]
     815:  00:8BF2  20 0F               		JR NZ,.PL1D
     816:  00:8BF4  DD 21 69 F0         		LD IX,ChanC+12
     817:  00:8BF8  ED 4B 16 F0         		LD BC,[PT3_AdInPtC]
     818:  00:8BFC  CD B1 88            		CALL PTDECOD
     819:  00:8BFF  ED 43 16 F0         		LD [PT3_AdInPtC],BC
     820:  00:8C03                      
     821:  00:8C03  3A 1C F0            .PL1D:		LD A,[PT3_Delay]
     822:  00:8C06  32 7A F0            		LD [DelyCnt],A
     823:  00:8C09                      
     824:  00:8C09  DD 21 23 F0         .PL2:		LD IX,ChanA
     825:  00:8C0D  2A 40 F1            		LD HL,[AYREGS+AR_TonA]
     826:  00:8C10  CD 21 8A            		CALL CHREGS
     827:  00:8C13  22 40 F1            		LD [AYREGS+AR_TonA],HL
     828:  00:8C16  3A 4A F1            		LD A,[AYREGS+AR_AmplC]
     829:  00:8C19  32 48 F1            		LD [AYREGS+AR_AmplA],A
     830:  00:8C1C  DD 21 40 F0         		LD IX,ChanB
     831:  00:8C20  2A 42 F1            		LD HL,[AYREGS+AR_TonB]
     832:  00:8C23  CD 21 8A            		CALL CHREGS
     833:  00:8C26  22 42 F1            		LD [AYREGS+AR_TonB],HL
     834:  00:8C29  3A 4A F1            		LD A,[AYREGS+AR_AmplC]
     835:  00:8C2C  32 49 F1            		LD [AYREGS+AR_AmplB],A
     836:  00:8C2F  DD 21 5D F0         		LD IX,ChanC
     837:  00:8C33  2A 44 F1            		LD HL,[AYREGS+AR_TonC]
     838:  00:8C36  CD 21 8A            		CALL CHREGS
     839:  00:8C39  22 44 F1            		LD [AYREGS+AR_TonC],HL
     840:  00:8C3C                      
     841:  00:8C3C  2A 7E F0            		LD HL,[Ns_Base_AddToNs]
     842:  00:8C3F  7C                  		LD A,H
     843:  00:8C40  85                  		ADD A,L
     844:  00:8C41  32 46 F1            		LD [AYREGS+AR_Noise],A
     845:  00:8C44                      
     846:  00:8C44  3A 1D F0            		LD A,[PT3_AddToEn]
     847:  00:8C47  5F                  		LD E,A
     848:  00:8C48  87                  		ADD A,A
     849:  00:8C49  9F                  		SBC A,A
     850:  00:8C4A  57                  		LD D,A
     851:  00:8C4B  2A 4E F1            		LD HL,[EnvBase]
     852:  00:8C4E  19                  		ADD HL,DE
     853:  00:8C4F  ED 5B 7B F0         		LD DE,[CurESld]
     854:  00:8C53  19                  		ADD HL,DE
     855:  00:8C54  22 4B F1            		LD [AYREGS+AR_Env],HL
     856:  00:8C57                      
     857:  00:8C57  AF                  		XOR A
     858:  00:8C58  21 7D F0            		LD HL,CurEDel
     859:  00:8C5B  B6                  		OR [HL]
     860:  00:8C5C  C8                  		RET Z
     861:  00:8C5D  35                  		DEC [HL]
     862:  00:8C5E  C0                  		RET NZ
     863:  00:8C5F  3A 1E F0            		LD A,[PT3_Env_Del]
     864:  00:8C62  77                  		LD [HL],A
     865:  00:8C63  2A 1F F0            		LD HL,[PT3_ESldAdd]
     866:  00:8C66  19                  		ADD HL,DE
     867:  00:8C67  22 7B F0            		LD [CurESld],HL
     868:  00:8C6A  C9                  		RET
     869:  00:8C6B                      
     870:  00:8C6B  AF                  PT3_ROUT:	XOR A
     871:  00:8C6C                      	
     872:  00:8C6C                      ROUT_A0:	; --- FIXES BITS 6 AND 7 OF MIXER ---
     873:  00:8C6C  21 47 F1            		LD	HL,AYREGS+AR_Mixer
     874:  00:8C6F  CB FE               		set	7,[hl]
     875:  00:8C71  CB B6               		res	6,[hl]
     876:  00:8C73                      
     877:  00:8C73  0E A0               		LD C,$A0
     878:  00:8C75  21 40 F1            		LD HL,AYREGS
     879:  00:8C78  ED 79               .LOUT:		OUT [C],A
     880:  00:8C7A  0C                  		INC C
     881:  00:8C7B  ED A3               		OUTI 
     882:  00:8C7D  0D                  		DEC C
     883:  00:8C7E  3C                  		INC A
     884:  00:8C7F  FE 0D               		CP 13
     885:  00:8C81  20 F5               		JR NZ,.LOUT
     886:  00:8C83  ED 79               		OUT [C],A
     887:  00:8C85  7E                  		LD A,[HL]
     888:  00:8C86  A7                  		AND A
     889:  00:8C87  F8                  		RET M
     890:  00:8C88  0C                  		INC C
     891:  00:8C89  ED 79               		OUT [C],A
     892:  00:8C8B  C9                  		RET
     893:  00:8C8C                      
     894:  00:8C8C  64                  NT_DATA:	db (T_NEW_0-T1_)*2
     895:  00:8C8D  2A                  		db TCNEW_0-T_
     896:  00:8C8E  65                  		db (T_OLD_0-T1_)*2+1
     897:  00:8C8F  00                  		db TCOLD_0-T_
     898:  00:8C90  01                  		db (T_NEW_1-T1_)*2+1
     899:  00:8C91  0C                  		db TCNEW_1-T_
     900:  00:8C92  01                  		db (T_OLD_1-T1_)*2+1
     901:  00:8C93  0C                  		db TCOLD_1-T_
     902:  00:8C94  94                  		db (T_NEW_2-T1_)*2
     903:  00:8C95  35                  		db TCNEW_2-T_
     904:  00:8C96  30                  		db (T_OLD_2-T1_)*2
     905:  00:8C97  0E                  		db TCOLD_2-T_
     906:  00:8C98  60                  		db (T_NEW_3-T1_)*2
     907:  00:8C99  20                  		db TCNEW_3-T_
     908:  00:8C9A  60                  		db (T_OLD_3-T1_)*2
     909:  00:8C9B  21                  		db TCOLD_3-T_
     910:  00:8C9C                      
     911:  00:8C9C                      T_:
     912:  00:8C9C                      
     913:  00:8C9C                      TCOLD_0:	db $00+1,$04+1,$08+1,$0A+1,$0C+1,$0E+1,$12+1,$14+1
     913:  00:8C9C  01 05 09 0B 0D 0F 13 15 
     914:  00:8CA4  19 25 3D 00         		db $18+1,$24+1,$3C+1,0
     915:  00:8CA8                      TCNEW_1:	
     916:  00:8CA8  5D 00               TCOLD_1:	db $5C+1,0
     917:  00:8CAA                      TCOLD_2:	db $30+1,$36+1,$4C+1,$52+1,$5E+1,$70+1,$82,$8C,$9C
     917:  00:8CAA  31 37 4D 53 5F 71 82 8C 9C 
     918:  00:8CB3                      		db $9E,$A0,$A6,$A8,$AA,$AC,$AE,$AE,0
     918:  00:8CB3  9E A0 A6 A8 AA AC AE AE 00 
     919:  00:8CBC  57                  TCNEW_3:	db $56+1
     920:  00:8CBD                      TCOLD_3:	db $1E+1,$22+1,$24+1,$28+1,$2C+1,$2E+1,$32+1,$BE+1,0
     920:  00:8CBD  1F 23 25 29 2D 2F 33 BF 00 
     921:  00:8CC6                      TCNEW_0:	db $1C+1,$20+1,$22+1,$26+1,$2A+1,$2C+1,$30+1,$54+1
     921:  00:8CC6  1D 21 23 27 2B 2D 31 55 
     922:  00:8CCE  BD BF 00            		db $BC+1,$BE+1,0
     923:  00:8CD1                      TCNEW_2:	db $1A+1,$20+1,$24+1,$28+1,$2A+1,$3A+1,$4C+1,$5E+1
     923:  00:8CD1  1B 21 25 29 2B 3B 4D 5F 
     924:  00:8CD9  BB BD BF            		db $BA+1,$BC+1,$BE+1
     925:  00:8CDC                      
     926:  00:8CDC  00 01 00 90         EMPTYSAMORN: 	db 0,1,0,$90 ;delete $90 if you don't need default sample
     927:  00:8CE0                      
     928:  00:8CE0                      T_PACK:		; First 12 values of tone tables (packed)
     929:  00:8CE0  0D                  		db ($06EC*2)/256
     930:  00:8CE1  D8                  		db #d8
     931:  00:8CE2  69                  		db $0755-$06EC
     932:  00:8CE3  70                  		db $07C5-$0755
     933:  00:8CE4  76                  		db $083B-$07C5
     934:  00:8CE5  7D                  		db $08B8-$083B
     935:  00:8CE6  85                  		db $093D-$08B8
     936:  00:8CE7  8D                  		db $09CA-$093D
     937:  00:8CE8  95                  		db $0A5F-$09CA
     938:  00:8CE9  9D                  		db $0AFC-$0A5F
     939:  00:8CEA  A8                  		db $0BA4-$0AFC
     940:  00:8CEB  B1                  		db $0C55-$0BA4
     941:  00:8CEC  BB                  		db $0D10-$0C55
     942:  00:8CED  0C                  		db ($066D*2)/256
     943:  00:8CEE  DA                  		db #da
     944:  00:8CEF  62                  		db $06CF-$066D
     945:  00:8CF0  68                  		db $0737-$06CF
     946:  00:8CF1  6D                  		db $07A4-$0737
     947:  00:8CF2  75                  		db $0819-$07A4
     948:  00:8CF3  7B                  		db $0894-$0819
     949:  00:8CF4  83                  		db $0917-$0894
     950:  00:8CF5  8A                  		db $09A1-$0917
     951:  00:8CF6  92                  		db $0A33-$09A1
     952:  00:8CF7  9C                  		db $0ACF-$0A33
     953:  00:8CF8  A4                  		db $0B73-$0ACF
     954:  00:8CF9  AF                  		db $0C22-$0B73
     955:  00:8CFA  B8                  		db $0CDA-$0C22
     956:  00:8CFB  0E                  		db ($0704*2)/256
     957:  00:8CFC  08                  		db #08
     958:  00:8CFD  6A                  		db $076E-$0704
     959:  00:8CFE  72                  		db $07E0-$076E
     960:  00:8CFF  78                  		db $0858-$07E0
     961:  00:8D00  7E                  		db $08D6-$0858
     962:  00:8D01  86                  		db $095C-$08D6
     963:  00:8D02  90                  		db $09EC-$095C
     964:  00:8D03  96                  		db $0A82-$09EC
     965:  00:8D04  A0                  		db $0B22-$0A82
     966:  00:8D05  AA                  		db $0BCC-$0B22
     967:  00:8D06  B4                  		db $0C80-$0BCC
     968:  00:8D07  BE                  		db $0D3E-$0C80
     969:  00:8D08  0F                  		db ($07E0*2)/256
     970:  00:8D09  C0                  		db #c0
     971:  00:8D0A  78                  		db $0858-$07E0
     972:  00:8D0B  88                  		db $08E0-$0858
     973:  00:8D0C  80                  		db $0960-$08E0
     974:  00:8D0D  90                  		db $09F0-$0960
     975:  00:8D0E  98                  		db $0A88-$09F0
     976:  00:8D0F  A0                  		db $0B28-$0A88
     977:  00:8D10  B0                  		db $0BD8-$0B28
     978:  00:8D11  A8                  		db $0C80-$0BD8
     979:  00:8D12  E0                  		db $0D60-$0C80
     980:  00:8D13  B0                  		db $0E10-$0D60
     981:  00:8D14  E8                  		db $0EF8-$0E10
      61.  00:8D15                      	include "ayFX-ROM_sjasm.asm"
       1:  00:8D15                      		; --- ayFX REPLAYER v1.31 ---
       2:  00:8D15                      
       3:  00:8D15                      		; --- v1.31	Fixed bug on previous version, only PSG channel C worked
       4:  00:8D15                      		; --- v1.3	Fixed volume and Relative volume versions on the same file, conditional compilation
       5:  00:8D15                      		; ---		Support for dynamic or fixed channel allocation
       6:  00:8D15                      		; --- v1.2f/r	ayFX bank support
       7:  00:8D15                      		; --- v1.11f/r	If a frame volume is zero then no AYREGS update
       8:  00:8D15                      		; --- v1.1f/r	Fixed volume for all ayFX streams
       9:  00:8D15                      		; --- v1.1	Explicit priority (as suggested by AR)
      10:  00:8D15                      		; --- v1.0f	Bug fixed (error when using noise)
      11:  00:8D15                      		; --- v1.0	Initial release
      12:  00:8D15                      
      13:  00:8D15                      		; --- DEFINE AYFXRELATIVE AS 0 FOR FIXED VOLUME VERSION ---
      14:  00:8D15                      		; --- DEFINE AYFXRELATIVE AS 1 FOR RELATIVE VOLUME VERSION ---
      15:  00:8D15  (00:0000)           AYFXRELATIVE equ 0
      16:  00:8D15                      
      17:  00:8D15                      ayFX_SETUP:	; ---          ayFX replayer setup          ---
      18:  00:8D15                      		; --- INPUT: HL -> pointer to the ayFX bank ---
      19:  00:8D15  22 41 F2            		ld	[ayFX_BANK],hl			; Current ayFX bank
      20:  00:8D18  3E 01               		ld	a,1				; a:=0
      21:  00:8D1A  32 40 F2            		ld	[ayFX_MODE],a			; Initial mode: fixed channel
      22:  00:8D1D  3C                  		inc	a				; Starting channel (=1)
      23:  00:8D1E  32 4A F2            		ld	[ayFX_CHANNEL],a		; Updated
      24:  00:8D21                      ayFX_END:	; --- End of an ayFX stream ---
      25:  00:8D21  3E FF               		ld	a,255				; Lowest ayFX priority
      26:  00:8D23  32 43 F2            		ld	[ayFX_PRIORITY],a		; Priority saved (not playing ayFX stream)
      27:  00:8D26  C9                  		ret					; Return
      28:  00:8D27                      
      29:  00:8D27                      ayFX_INIT:	; ---     INIT A NEW ayFX STREAM     ---
      30:  00:8D27                      		; --- INPUT: A -> sound to be played ---
      31:  00:8D27                      		; ---        C -> sound priority     ---
      32:  00:8D27  C5                  		push	bc				; Store bc in stack
      33:  00:8D28  D5                  		push	de				; Store de in stack
      34:  00:8D29  E5                  		push	hl				; Store hl in stack
      35:  00:8D2A                      		; --- Check if the index is in the bank ---
      36:  00:8D2A  47                  		ld	b,a				; b:=a (new ayFX stream index)
      37:  00:8D2B  2A 41 F2            		ld	hl,[ayFX_BANK]			; Current ayFX BANK
      38:  00:8D2E  7E                  		ld	a,[hl]				; Number of samples in the bank
      39:  00:8D2F  B7                  		or	a				; If zero (means 256 samples)...
      40:  00:8D30  28 06               		jr	z,.CHECK_PRI			; ...goto .CHECK_PRI
      41:  00:8D32                      		; The bank has less than 256 samples
      42:  00:8D32  78                  		ld	a,b				; a:=b (new ayFX stream index)
      43:  00:8D33  BE                  		cp	[hl]				; If new index is not in the bank...
      44:  00:8D34  3E 02               		ld	a,2				; a:=2 (error 2: Sample not in the bank)
      45:  00:8D36  30 21               		jr	nc,.INIT_END			; ...we can't init it
      46:  00:8D38                      .CHECK_PRI:	; --- Check if the new priority is lower than the current one ---
      47:  00:8D38                      		; ---   Remember: 0 = highest priority, 15 = lowest priority  ---
      48:  00:8D38  78                  		ld	a,b				; a:=b (new ayFX stream index)
      49:  00:8D39  3A 43 F2            		ld	a,[ayFX_PRIORITY]		; a:=Current ayFX stream priority
      50:  00:8D3C  B9                  		cp	c				; If new ayFX stream priority is lower than current one...
      51:  00:8D3D  3E 01               		ld	a,1				; a:=1 (error 1: A sample with higher priority is being played)
      52:  00:8D3F  38 18               		jr	c,.INIT_END			; ...we don't start the new ayFX stream
      53:  00:8D41                      		; --- Set new priority ---
      54:  00:8D41  79                  		ld	a,c				; a:=New priority
      55:  00:8D42  E6 0F               		and	$0F				; We mask the priority
      56:  00:8D44  32 43 F2            		ld	[ayFX_PRIORITY],a		; new ayFX stream priority saved in RAM
      57:  00:8D47                      
      58:  00:8D47                      		IF ( AYFXRELATIVE == 1 )
      59:  00:8D47                    ~ 			; --- Volume adjust using PT3 volume table ---
      60:  00:8D47                    ~ 			ld	c,a				; c:=New priority (fixed)
      61:  00:8D47                    ~ 			ld	a,15				; a:=15
      62:  00:8D47                    ~ 			sub	c				; a:=15-New priority = relative volume
      63:  00:8D47                    ~ 			jr	z,.INIT_NOSOUND		; If priority is 15 -> no sound output (volume is zero)
      64:  00:8D47                    ~ 			add	a,a				; a:=a*2
      65:  00:8D47                    ~ 			add	a,a				; a:=a*4
      66:  00:8D47                    ~ 			add	a,a				; a:=a*8
      67:  00:8D47                    ~ 			add	a,a				; a:=a*16
      68:  00:8D47                    ~ 			ld	e,a				; e:=a
      69:  00:8D47                    ~ 			ld	d,0				; de:=a
      70:  00:8D47                    ~ 			ld	hl,VT_				; hl:=PT3 volume table
      71:  00:8D47                    ~ 			add	hl,de				; hl is a pointer to the relative volume table
      72:  00:8D47                    ~ 			ld	[ayFX_VT],hl			; Save pointer
      73:  00:8D47                    ~ 		ENDIF
      74:  00:8D47                      
      75:  00:8D47                      		; --- Calculate the pointer to the new ayFX stream ---
      76:  00:8D47  ED 5B 41 F2         		ld	de,[ayFX_BANK]			; de:=Current ayFX bank
      77:  00:8D4B  13                  		inc	de				; de points to the increments table of the bank
      78:  00:8D4C  68                  		ld	l,b				; l:=b (new ayFX stream index)
      79:  00:8D4D  26 00               		ld	h,0				; hl:=b (new ayFX stream index)
      80:  00:8D4F  29                  		add	hl,hl				; hl:=hl*2
      81:  00:8D50  19                  		add	hl,de				; hl:=hl+de (hl points to the correct increment)
      82:  00:8D51  5E                  		ld	e,[hl]				; e:=lower byte of the increment
      83:  00:8D52  23                  		inc	hl				; hl points to the higher byte of the correct increment
      84:  00:8D53  56                  		ld	d,[hl]				; de:=increment
      85:  00:8D54  19                  		add	hl,de				; hl:=hl+de (hl points to the new ayFX stream)
      86:  00:8D55  22 44 F2            		ld	[ayFX_POINTER],hl		; Pointer saved in RAM
      87:  00:8D58  AF                  		xor	a				; a:=0 (no errors)
      88:  00:8D59  E1                  .INIT_END:	pop	hl				; Retrieve hl from stack
      89:  00:8D5A  D1                  		pop	de				; Retrieve de from stack
      90:  00:8D5B  C1                  		pop	bc				; Retrieve bc from stack
      91:  00:8D5C  C9                  		ret					; Return
      92:  00:8D5D                      
      93:  00:8D5D                      		IF ( AYFXRELATIVE == 1 )
      94:  00:8D5D                    ~ .INIT_NOSOUND:	; --- Init a sample with relative volume zero -> no sound output ---
      95:  00:8D5D                    ~ 			ld	a,255				; Lowest ayFX priority
      96:  00:8D5D                    ~ 			ld	[ayFX_PRIORITY],a		; Priority saved (not playing ayFX stream)
      97:  00:8D5D                    ~ 			jr	.INIT_END			; Jumps to .INIT_END
      98:  00:8D5D                    ~ 		ENDIF
      99:  00:8D5D                      
     100:  00:8D5D                      ayFX_PLAY:	; --- PLAY A FRAME OF AN ayFX STREAM ---
     101:  00:8D5D  3A 43 F2            		ld	a,[ayFX_PRIORITY]		; a:=Current ayFX stream priority
     102:  00:8D60  B7                  		or	a				; If priority has bit 7 on...
     103:  00:8D61  F8                  		ret	m				; ...return
     104:  00:8D62                      		; --- Calculate next ayFX channel (if needed) ---
     105:  00:8D62  3A 40 F2            		ld	a,[ayFX_MODE]			; ayFX mode
     106:  00:8D65  E6 01               		and	1				; If bit0=0 (fixed channel)...
     107:  00:8D67  28 08               		jr	z,.TAKECB			; ...skip channel changing
     108:  00:8D69  21 4A F2            		ld	hl,ayFX_CHANNEL			; Old ayFX playing channel
     109:  00:8D6C  35                  		dec	[hl]				; New ayFX playing channel
     110:  00:8D6D  20 02               		jr	nz,.TAKECB			; If not zero jump to .TAKECB
     111:  00:8D6F  36 03               		ld	[hl],3				; If zero -> set channel 3
     112:  00:8D71                      .TAKECB:	; --- Extract control byte from stream ---
     113:  00:8D71  2A 44 F2            		ld	hl,[ayFX_POINTER]		; Pointer to the current ayFX stream
     114:  00:8D74  4E                  		ld	c,[hl]				; c:=Control byte
     115:  00:8D75  23                  		inc	hl				; Increment pointer
     116:  00:8D76                      		; --- Check if there's new tone on stream ---
     117:  00:8D76  CB 69               		bit	5,c				; If bit 5 c is off...
     118:  00:8D78  28 08               		jr	z,.CHECK_NN			; ...jump to .CHECK_NN (no new tone)
     119:  00:8D7A                      		; --- Extract new tone from stream ---
     120:  00:8D7A  5E                  		ld	e,[hl]				; e:=lower byte of new tone
     121:  00:8D7B  23                  		inc	hl				; Increment pointer
     122:  00:8D7C  56                  		ld	d,[hl]				; d:=higher byte of new tone
     123:  00:8D7D  23                  		inc	hl				; Increment pointer
     124:  00:8D7E  ED 53 46 F2         		ld	[ayFX_TONE],de			; ayFX tone updated
     125:  00:8D82                      .CHECK_NN:	; --- Check if there's new noise on stream ---
     126:  00:8D82  CB 71               		bit	6,c				; if bit 6 c is off...
     127:  00:8D84  28 09               		jr	z,.SETPOINTER			; ...jump to .SETPOINTER (no new noise)
     128:  00:8D86                      		; --- Extract new noise from stream ---
     129:  00:8D86  7E                  		ld	a,[hl]				; a:=New noise
     130:  00:8D87  23                  		inc	hl				; Increment pointer
     131:  00:8D88  FE 20               		cp	$20				; If it's an illegal value of noise (used to mark end of stream)...
     132:  00:8D8A  28 95               		jr.	z,ayFX_END			; ...jump to ayFX_END
     133:  00:8D8C  32 48 F2            		ld	[ayFX_NOISE],a			; ayFX noise updated
     134:  00:8D8F                      .SETPOINTER:	; --- Update ayFX pointer ---
     135:  00:8D8F  22 44 F2            		ld	[ayFX_POINTER],hl		; Update ayFX stream pointer
     136:  00:8D92                      		; --- Extract volume ---
     137:  00:8D92  79                  		ld	a,c				; a:=Control byte
     138:  00:8D93  E6 0F               		and	$0F				; lower nibble
     139:  00:8D95                      
     140:  00:8D95                      		IF ( AYFXRELATIVE == 1 )
     141:  00:8D95                    ~ 			; --- Fix the volume using PT3 Volume Table ---
     142:  00:8D95                    ~ 			ld	hl,[ayFX_VT]			; hl:=Pointer to relative volume table
     143:  00:8D95                    ~ 			ld	e,a				; e:=a (ayFX volume)
     144:  00:8D95                    ~ 			ld	d,0				; d:=0
     145:  00:8D95                    ~ 			add	hl,de				; hl:=hl+de (hl points to the relative volume of this frame
     146:  00:8D95                    ~ 			ld	a,[hl]				; a:=ayFX relative volume
     147:  00:8D95                    ~ 			or	a				; If relative volume is zero...
     148:  00:8D95                    ~ 		ENDIF
     149:  00:8D95                      
     150:  00:8D95  32 49 F2            		ld	[ayFX_VOLUME],a			; ayFX volume updated
     151:  00:8D98  C8                  		ret	z				; ...return (don't copy ayFX values in to AYREGS)
     152:  00:8D99                      		; -------------------------------------
     153:  00:8D99                      		; --- COPY ayFX VALUES IN TO AYREGS ---
     154:  00:8D99                      		; -------------------------------------
     155:  00:8D99                      		; --- Set noise channel ---
     156:  00:8D99  CB 79               		bit	7,c				; If noise is off...
     157:  00:8D9B  20 06               		jr	nz,.SETMASKS			; ...jump to .SETMASKS
     158:  00:8D9D  3A 48 F2            		ld	a,[ayFX_NOISE]			; ayFX noise value
     159:  00:8DA0  32 46 F1            		ld	[AYREGS+6],a			; copied in to AYREGS (noise channel)
     160:  00:8DA3                      .SETMASKS:	; --- Set mixer masks ---
     161:  00:8DA3  79                  		ld	a,c				; a:=Control byte
     162:  00:8DA4  E6 90               		and	$90				; Only bits 7 and 4 (noise and tone mask for psg reg 7)
     163:  00:8DA6  FE 90               		cp	$90				; If no noise and no tone...
     164:  00:8DA8  C8                  		ret	z				; ...return (don't copy ayFX values in to AYREGS)
     165:  00:8DA9                      		; --- Copy ayFX values in to ARYREGS ---
     166:  00:8DA9  0F                  		rrca					; Rotate a to the right (1 TIME)
     167:  00:8DAA  0F                  		rrca					; Rotate a to the right (2 TIMES) (OR mask)
     168:  00:8DAB  16 DB               		ld	d,$DB				; d:=Mask for psg mixer (AND mask)
     169:  00:8DAD                      		; --- Dump to correct channel ---
     170:  00:8DAD  21 4A F2            		ld	hl,ayFX_CHANNEL			; Next ayFX playing channel
     171:  00:8DB0  46                  		ld	b,[hl]				; Channel counter
     172:  00:8DB1                      .CHK1:		; --- Check if playing channel was 1 ---
     173:  00:8DB1  10 0D               		djnz	.CHK2				; Decrement and jump if channel was not 1
     174:  00:8DB3                      .PLAY_C:	; --- Play ayFX stream on channel C ---
     175:  00:8DB3  CD E2 8D            		call	.SETMIXER			; Set PSG mixer value (returning a=ayFX volume and hl=ayFX tone)
     176:  00:8DB6  32 4A F1            		ld	[AYREGS+10],a			; Volume copied in to AYREGS (channel C volume)
     177:  00:8DB9  CB 51               		bit	2,c				; If tone is off...
     178:  00:8DBB  C0                  		ret	nz				; ...return
     179:  00:8DBC  22 44 F1            		ld	[AYREGS+4],hl			; copied in to AYREGS (channel C tone)
     180:  00:8DBF  C9                  		ret					; Return
     181:  00:8DC0                      .CHK2:		; --- Check if playing channel was 2 ---
     182:  00:8DC0  CB 0A               		rrc	d				; Rotate right AND mask
     183:  00:8DC2  0F                  		rrca					; Rotate right OR mask
     184:  00:8DC3  10 0D               		djnz	.CHK3				; Decrement and jump if channel was not 2
     185:  00:8DC5                      .PLAY_B:	; --- Play ayFX stream on channel B ---
     186:  00:8DC5  CD E2 8D            		call	.SETMIXER			; Set PSG mixer value (returning a=ayFX volume and hl=ayFX tone)
     187:  00:8DC8  32 49 F1            		ld	[AYREGS+9],a			; Volume copied in to AYREGS (channel B volume)
     188:  00:8DCB  CB 49               		bit	1,c				; If tone is off...
     189:  00:8DCD  C0                  		ret	nz				; ...return
     190:  00:8DCE  22 42 F1            		ld	[AYREGS+2],hl			; copied in to AYREGS (channel B tone)
     191:  00:8DD1  C9                  		ret					; Return
     192:  00:8DD2                      .CHK3:		; --- Check if playing channel was 3 ---
     193:  00:8DD2  CB 0A               		rrc	d				; Rotate right AND mask
     194:  00:8DD4  0F                  		rrca					; Rotate right OR mask
     195:  00:8DD5                      .PLAY_A:	; --- Play ayFX stream on channel A ---
     196:  00:8DD5  CD E2 8D            		call	.SETMIXER			; Set PSG mixer value (returning a=ayFX volume and hl=ayFX tone)
     197:  00:8DD8  32 48 F1            		ld	[AYREGS+8],a			; Volume copied in to AYREGS (channel A volume)
     198:  00:8DDB  CB 41               		bit	0,c				; If tone is off...
     199:  00:8DDD  C0                  		ret	nz				; ...return
     200:  00:8DDE  22 40 F1            		ld	[AYREGS+0],hl			; copied in to AYREGS (channel A tone)
     201:  00:8DE1  C9                  		ret					; Return
     202:  00:8DE2                      .SETMIXER:	; --- Set PSG mixer value ---
     203:  00:8DE2  4F                  		ld	c,a				; c:=OR mask
     204:  00:8DE3  3A 47 F1            		ld	a,[AYREGS+7]			; a:=PSG mixer value
     205:  00:8DE6  A2                  		and	d				; AND mask
     206:  00:8DE7  B1                  		or	c				; OR mask
     207:  00:8DE8  32 47 F1            		ld	[AYREGS+7],a			; PSG mixer value updated
     208:  00:8DEB  3A 49 F2            		ld	a,[ayFX_VOLUME]			; a:=ayFX volume value
     209:  00:8DEE  2A 46 F2            		ld	hl,[ayFX_TONE]			; ayFX tone value
     210:  00:8DF1  C9                  		ret					; Return
     211:  00:8DF2                      
     212:  00:8DF2                      		IF ( AYFXRELATIVE == 1 )
     213:  00:8DF2                    ~ 			; --- UNCOMMENT THIS IF YOU DON'T USE THIS REPLAYER WITH PT3 REPLAYER ---
     214:  00:8DF2                    ~ 		;VT_:	.INCBIN	"VT.BIN"
     215:  00:8DF2                    ~ 			; --- UNCOMMENT THIS IF YOU DON'T USE THIS REPLAYER WITH PT3 REPLAYER ---
     216:  00:8DF2                    ~ 		ENDIF
      62.  00:8DF2                      	
      63.  00:8DF2                      	
      64.  00:8DF2                      
      65.  00:8DF2                      ;;=====================================================
      66.  00:8DF2                      ;;DEFINICIÓN DE CANTIONES Y EFECTOS DE SONIDO
      67.  00:8DF2                      ;;=====================================================		
      68.  00:8DF2                      song:
      69.  00:8DF2  (0968)              	incbin "bloodytears_castlevania.99"
      70.  00:975A                      	
      71.  00:975A                      sfx_bank:
      72.  00:975A  (004B)              	incbin "demo.afb"
      73.  00:97A5                      
     119   00:97A5                      	
     120   00:97A5                      	include "subr_accionesayudas.asm"
       1.  00:97A5                      ;;=====================================================
       2.  00:97A5                      ;;SUBRUTINAS MANEJO DE OBJETOS AYUDA
       3.  00:97A5                      ;;=====================================================	
       4.  00:97A5                      
       5.  00:97A5                      ;;=====================================================
       6.  00:97A5                      ;;ACCION_ORACION
       7.  00:97A5                      ;;=====================================================	
       8.  00:97A5                      ; función: 	
       9.  00:97A5                      ; entrada: 	
      10.  00:97A5                      ; salida: 	-
      11.  00:97A5                      accion_oracion:
      12.  00:97A5                      fin_accion_oracion:
      13.  00:97A5  C9                  	RET
      14.  00:97A6                      	
      15.  00:97A6                      
      16.  00:97A6                      ;;=====================================================
      17.  00:97A6                      ;;ACCION_CRUZ
      18.  00:97A6                      ;;=====================================================	
      19.  00:97A6                      ; función: 	
      20.  00:97A6                      ; entrada: 	
      21.  00:97A6                      ; salida: 	-
      22.  00:97A6                      accion_cruz:
      23.  00:97A6                      fin_accion_cruz:
      24.  00:97A6  C9                  	RET
      25.  00:97A7                      
      26.  00:97A7                      
      27.  00:97A7                      ;;=====================================================
      28.  00:97A7                      ;;ACCION_AGUA
      29.  00:97A7                      ;;=====================================================	
      30.  00:97A7                      ; función: 	
      31.  00:97A7                      ; entrada: 	
      32.  00:97A7                      ; salida: 	-
      33.  00:97A7                      accion_agua:
      34.  00:97A7                      fin_accion_agua:
      35.  00:97A7  C9                  	RET
      36.  00:97A8                      
      37.  00:97A8                      
      38.  00:97A8                      ;;=====================================================
      39.  00:97A8                      ;;ACCION_ARMADURA
      40.  00:97A8                      ;;=====================================================	
      41.  00:97A8                      ; función: 	
      42.  00:97A8                      ; entrada: 	
      43.  00:97A8                      ; salida: 	-
      44.  00:97A8                      accion_armadura:
      45.  00:97A8                      fin_accion_armadura:
      46.  00:97A8  C9                  	RET
      47.  00:97A9                      
      48.  00:97A9                      
      49.  00:97A9                      ;;=====================================================
      50.  00:97A9                      ;;ACCION_PLANTA
      51.  00:97A9                      ;;=====================================================	
      52.  00:97A9                      ; función: 	
      53.  00:97A9                      ; entrada: 	
      54.  00:97A9                      ; salida: 	-
      55.  00:97A9                      accion_planta:
      56.  00:97A9                      fin_accion_planta:
      57.  00:97A9  C9                  	RET
      58.  00:97AA                      
      59.  00:97AA                      
      60.  00:97AA                      ;;=====================================================
      61.  00:97AA                      ;;ACCION_VIDAEXTRA
      62.  00:97AA                      ;;=====================================================	
      63.  00:97AA                      ; función: 	
      64.  00:97AA                      ; entrada: 	
      65.  00:97AA                      ; salida: 	-
      66.  00:97AA                      accion_vidaextra:
      67.  00:97AA                      fin_accion_vidaextra:
      68.  00:97AA  C9                  	RET
      69.  00:97AB                      
      70.  00:97AB                      
      71.  00:97AB                      
      72.  00:97AB                      
      73.  00:97AB                      ;;=====================================================
      74.  00:97AB                      ;;ACCION_VIDAEXTRA
      75.  00:97AB                      ;;=====================================================	
      76.  00:97AB                      ; función: 	
      77.  00:97AB                      ; entrada: 	
      78.  00:97AB                      ; salida: 	-
      79.  00:97AB                      accion_ballesta:
      80.  00:97AB                      fin_accion_ballesta:
      81.  00:97AB  C9                  	RET
      82.  00:97AC                      
     121   00:97AC                      	
     122   00:97AC                      
     123   00:97AC                      ;;=====================================================
     124   00:97AC                      ;;DEFINICIÓN DE SUBRUTINAS DE FERNANDO PARA COMPRESIÓN Y SONIDO
     125   00:97AC                      ;;=====================================================
     126   00:97AC                      ;Este include lleva la rutina de descompresión de ROM/RAM a VRAM de pletter
     127   00:97AC                      ;Está adaptada de la original a sjasm
     128   00:97AC                      ;	HL = RAM/ROM source	; DE = VRAM destination
     129   00:97AC                      depack_VRAM:
     130   00:97AC                      	include "PL_VRAM_Depack_SJASM.asm"
       1.  00:97AC                      ;-----------------------------------------------------------
       2.  00:97AC                      ; Pletter v0.5b VRAM Depacker v1.1 - 16Kb version
       3.  00:97AC                      ; HL = RAM/ROM source ; DE = VRAM destination
       4.  00:97AC                      ;-----------------------------------------------------------
       5.  00:97AC  F3                  	di
       6.  00:97AD                      
       7.  00:97AD                      ; VRAM address setup
       8.  00:97AD  7B                  	ld	a,e
       9.  00:97AE  D3 99               	out	[099h],a
      10.  00:97B0  7A                  	ld	a,d
      11.  00:97B1  F6 40               	or	040h
      12.  00:97B3  D3 99               	out	[099h],a
      13.  00:97B5                      
      14.  00:97B5                      ; Initialization
      15.  00:97B5  7E                  	ld	a,[hl]
      16.  00:97B6  23                  	inc	hl
      17.  00:97B7  D9                  	exx
      18.  00:97B8  11 00 00            	ld	de,0
      19.  00:97BB  87                  	add	a,a
      20.  00:97BC  3C                  	inc	a
      21.  00:97BD  CB 13               	rl	e
      22.  00:97BF  87                  	add	a,a
      23.  00:97C0  CB 13               	rl	e
      24.  00:97C2  87                  	add	a,a
      25.  00:97C3  CB 13               	rl	e
      26.  00:97C5  CB 13               	rl	e
      27.  00:97C7  21 7E 98            	ld	hl,modes
      28.  00:97CA  19                  	add	hl,de
      29.  00:97CB  5E                  	ld	e,[hl]
      30.  00:97CC  DD 6B               	ld	ixl,e
      31.  00:97CE  23                  	inc	hl
      32.  00:97CF  5E                  	ld	e,[hl]
      33.  00:97D0  DD 63               	ld	ixh,e
      34.  00:97D2  1E 01               	ld	e,1
      35.  00:97D4  D9                  	exx
      36.  00:97D5  FD 21 DE 97         	ld	iy,loop
      37.  00:97D9                      
      38.  00:97D9                      ; Main depack loop
      39.  00:97D9  0E 98               literal:ld	c,098h
      40.  00:97DB  ED A3               	outi
      41.  00:97DD  13                  	inc	de
      42.  00:97DE  87                  loop:	add	a,a
      43.  00:97DF  CC 72 98              	call	z,getbit
      44.  00:97E2  30 F5               	jr	nc,literal
      45.  00:97E4                      
      46.  00:97E4                      ; Compressed data
      47.  00:97E4  D9                  	exx
      48.  00:97E5  62                  	ld	h,d
      49.  00:97E6  6B                  	ld	l,e
      50.  00:97E7  87                  getlen: add	a,a
      51.  00:97E8  CC 76 98            	call	z,getbitexx
      52.  00:97EB  30 1D               	jr	nc,lenok
      53.  00:97ED  87                  lus:	add	a,a
      54.  00:97EE  CC 76 98            	call	z,getbitexx
      55.  00:97F1  ED 6A               	adc	hl,hl
      56.  00:97F3  D8                  	ret	c
      57.  00:97F4  87                  	add	a,a
      58.  00:97F5  CC 76 98            	call	z,getbitexx
      59.  00:97F8  30 10               	jr	nc,lenok
      60.  00:97FA  87                  	add	a,a
      61.  00:97FB  CC 76 98            	call	z,getbitexx
      62.  00:97FE  ED 6A               	adc	hl,hl
      63.  00:9800  DA 7C 98            	jp	c,Depack_out
      64.  00:9803  87                  	add	a,a
      65.  00:9804  CC 76 98            	call	z,getbitexx
      66.  00:9807  DA ED 97            	jp	c,lus
      67.  00:980A  23                  lenok:  inc	hl
      68.  00:980B  D9                  	exx
      69.  00:980C  4E                  	ld	c,[hl]
      70.  00:980D  23                  	inc	hl
      71.  00:980E  06 00               	ld	b,0
      72.  00:9810  CB 79               	bit	7,c
      73.  00:9812  CA 45 98            	jp	z,offsok
      74.  00:9815  DD E9               	jp	ix
      75.  00:9817                      
      76.  00:9817  87                  mode7:  add	a,a
      77.  00:9818  CC 72 98              	call	z,getbit
      78.  00:981B  CB 10               	rl	b
      79.  00:981D  87                  mode6:	add	a,a
      80.  00:981E  CC 72 98              	call	z,getbit
      81.  00:9821  CB 10               	rl	b
      82.  00:9823  87                  mode5:  add	a,a
      83.  00:9824  CC 72 98              	call	z,getbit
      84.  00:9827  CB 10               	rl	b
      85.  00:9829  87                  mode4:  add	a,a
      86.  00:982A  CC 72 98              	call	z,getbit
      87.  00:982D  CB 10               	rl	b
      88.  00:982F  87                  mode3:  add	a,a
      89.  00:9830  CC 72 98              	call	z,getbit
      90.  00:9833  CB 10               	rl	b
      91.  00:9835  87                  mode2:	add	a,a
      92.  00:9836  CC 72 98              	call	z,getbit
      93.  00:9839  CB 10               	rl	b
      94.  00:983B  87                  	add	a,a
      95.  00:983C  CC 72 98              	call	z,getbit
      96.  00:983F  30 04               	jr	nc,offsok
      97.  00:9841  B7                  	or	a
      98.  00:9842  04                  	inc	b
      99.  00:9843  CB B9               	res	7,c
     100.  00:9845  03                  offsok: inc	bc
     101.  00:9846  E5                  	push	hl
     102.  00:9847  D9                  	exx
     103.  00:9848  E5                  	push	hl
     104.  00:9849  D9                  	exx
     105.  00:984A  6B                  	ld	l,e
     106.  00:984B  62                  	ld	h,d
     107.  00:984C  ED 42               	sbc	hl,bc
     108.  00:984E  C1                  	pop	bc
     109.  00:984F  F5                  	push	af
     110.  00:9850  7D                  .loop:	ld	a,l
     111.  00:9851  D3 99               	out	[099h],a
     112.  00:9853  7C                  	ld	a,h
     113.  00:9854  00                  	nop                     ; VDP timing
     114.  00:9855  D3 99               	out	[099h],a
     115.  00:9857  00                  	nop                     ; VDP timing
     116.  00:9858  DB 98               	in	a,[098h]
     117.  00:985A  08                  	ex	af,af'
     118.  00:985B  7B                  	ld	a,e
     119.  00:985C  00                  	nop			; VDP timing
     120.  00:985D  D3 99               	out	[099h],a
     121.  00:985F  7A                  	ld	a,d
     122.  00:9860  F6 40               	or	040h
     123.  00:9862  D3 99               	out	[099h],a
     124.  00:9864  08                  	ex	af,af'
     125.  00:9865  00                  	nop			; VDP timing
     126.  00:9866  D3 98               	out	[098h],a
     127.  00:9868  13                  	inc	de
     128.  00:9869  ED A1               	cpi
     129.  00:986B  EA 50 98            	jp	pe,.loop
     130.  00:986E  F1                  	pop	af
     131.  00:986F  E1                  	pop	hl
     132.  00:9870  FD E9               	jp	iy
     133.  00:9872                      
     134.  00:9872  7E                  getbit: ld	a,[hl]
     135.  00:9873  23                  	inc	hl
     136.  00:9874  17                  	rla
     137.  00:9875  C9                  	ret
     138.  00:9876                      
     139.  00:9876                      getbitexx:
     140.  00:9876  D9                  	exx
     141.  00:9877  7E                  	ld	a,[hl]
     142.  00:9878  23                  	inc	hl
     143.  00:9879  D9                  	exx
     144.  00:987A  17                  	rla
     145.  00:987B  C9                  	ret
     146.  00:987C                      
     147.  00:987C                      ; Depacker exit
     148.  00:987C                      Depack_out:
     149.  00:987C  FB                  	ei
     150.  00:987D  C9                  	ret
     151.  00:987E                      
     152.  00:987E                      modes:
     153.  00:987E  45 98               	dw	offsok
     154.  00:9880  35 98               	dw	mode2
     155.  00:9882  2F 98               	dw	mode3
     156.  00:9884  29 98               	dw	mode4
     157.  00:9886  23 98               	dw	mode5
     158.  00:9888  1D 98               	dw	mode6
     159.  00:988A  17 98               	dw	mode7
     131   00:988C                      
     132   00:988C                      
     133   00:988C                      	
     134   00:988C                      ;;=====================================================
     135   00:988C                      ;;DEFINICIÓN DE ESTRUCTURAS
     136   00:988C                      ;;=====================================================		
     137   00:988C                      	include "estructuras.asm"
       1.  00:988C                      ;;=====================================================
       2.  00:988C                      ;;DEFINICIÓN DE ESTRUCTURAS
       3.  00:988C                      ;;=====================================================
       4.  00:988C                      
       5.  00:988C                      ;crear estructura
       6.  00:988C                      
       7.  00:988C                      	STRUCT ESTRUCTURA_PUNTOMIRA
       8.  00:988C                    < posx			DB		100
       9.  00:988C                    < posy			DB		100
      10.  00:988C                    < escena			DB		0	;valores porsibles 0 (blanco+rojo en punto de mira) y NEG 0 (al revés)
      11.  00:988C                    < velocidad		DB		0
      12.  00:988C                    < boton2_pressed  DB		0
      13.  00:988C                    < cadencia		DB		5	;nº de veces que se ejecutará el disparo antes de ejecutar un disparo real (porque cuando se pulsa la tecl dispara 3 ó 4 veces de rápido que va)
      14.  00:988C                    < ; al final he decidido (ya que el punto de mira es el prota) que lo relacionado con el prota vaya en esta estructura
      15.  00:988C                    < pm_aux1			DB		0	;para llegar a los 16 campos
      16.  00:988C                    < pm_aux2			DB		0	;para llegar a los 16 campos
      17.  00:988C                    < pm_aux3			DB		0	;para llegar a los 16 campos
      18.  00:988C                    < pm_aux4			DB		0	;para llegar a los 16 campos
      19.  00:988C                    < pm_aux5			DB		0	;para llegar a los 16 campos
      20.  00:988C                    < pm_aux6			DB		0	;para llegar a los 16 campos
      21.  00:988C                    < pm_aux7			DB		0	;para llegar a los 16 campos
      22.  00:988C                    < pm_aux8			DB		0	;para llegar a los 16 campos
      23.  00:988C                    < pm_aux9			DB		0	;para llegar a los 16 campos
      24.  00:988C                    < pm_aux10		DB		0	;para llegar a los 16 campos
      25.  00:988C                    < 	ENDSTRUCT;ESTRUCTURA_PUNTOMIRA
      26.  00:988C                      
      27.  00:988C                      	
      28.  00:988C                      	STRUCT ESTRUCTURA_ENEMIGO
      29.  00:988C                    < tipo				DB		0	;(0 serpiente por ejemplo) #FF muerto o no existe
      30.  00:988C                    < posx				DB		5
      31.  00:988C                    < posy				DB		50
      32.  00:988C                    < color				DB		5
      33.  00:988C                    < escena				DB		0
      34.  00:988C                    < contador_siguiente_escena	DB	0
      35.  00:988C                    < reset_contador		DB		0
      36.  00:988C                    < dano				DB		0	;daño
      37.  00:988C                    < energia				DB		0	;energía del enemigo... si llega a 0 => existe <- 0
      38.  00:988C                    < ;indica el nº de sprite a mostrar y si está compuesto por uno o dos sprites y si están en horizontal o vertical
      39.  00:988C                    < ver_hor				DB		0
      40.  00:988C                    < manejador_dibujo 	DW		0
      41.  00:988C                    < en_aux3				DB		0
      42.  00:988C                    < en_aux4				DB		0
      43.  00:988C                    < 	ENDSTRUCT;ESTRUCTURA_ENEMIGO
      44.  00:988C                      	
      45.  00:988C                      	STRUCT ESTRUCTURA_AYUDA		;vidas extra, plantas de curación de energía, reliquias	
      46.  00:988C                    < activo				DB		0	;0 no activo <>0 activo 
      47.  00:988C                    < tipo				DB		0	;ver constantes 
      48.  00:988C                    < tipousado			DB		0	;es tipo + 4
      49.  00:988C                    < postile				DB		0	;como tiene algo de aleatoriedad se guarda para dibujar los tiles de usado
      50.  00:988C                    < posx				DB		0
      51.  00:988C                    < posy				DB		0
      52.  00:988C                    < puntero_accion		DW		0	;subrutina que indica la acción si se dispara en el objeto
      53.  00:988C                    < 	ENDSTRUCT;ESTRUCTURA_AYUDA
      54.  00:988C                      
      55.  00:988C                      
      56.  00:988C                      
      57.  00:988C                      
      58.  00:988C                      
      59.  00:988C                      
      60.  00:988C                      
     138   00:988C                      	
     139   00:988C                      ;;=====================================================
     140   00:988C                      ;;DEFINICIÓN DE VARIABLES
     141   00:988C                      ;;=====================================================		
     142   00:988C                      	include "sprites.asm"
       1.  00:988C                      ;;=====================================================
       2.  00:988C                      ;;DEFINICIÓN DE SPRITES
       3.  00:988C                      ;;=====================================================	
       4.  00:988C                      
       5.  00:988C                      
       6.  00:988C                      ;; NOTA:
       7.  00:988C                      ;~ sprite_reliquia_oracion: on/off
       8.  00:988C                      ;~ sprite_reliquia_cruz: on/off
       9.  00:988C                      ;~ sprite_reliquia_agua: on/off
      10.  00:988C                      ;~ sprite_peto: on/off
      11.  00:988C                      ;~ sprite_planta: on/off
      12.  00:988C                      ;~ sprite_vida_extra: on/off
      13.  00:988C                      ;~ sprite_ballesta_mejorada: on/off
      14.  00:988C                      
      15.  00:988C                      ;~ iban a ser sprites pero por falta de recursos serán tiles
      16.  00:988C                      
      17.  00:988C                      
      18.  00:988C                      sprites_pantantalla:
      19.  00:988C                      
      20.  00:988C                      ;; PARTE 1: SPRITES COMUNES
      21.  00:988C                      
      22.  00:988C                      sprites_comunes:
      23.  00:988C                      sprite_punto_mira_1:	;color 8
      24.  00:988C                      	db #FF,#FF,#C0,#C0,#C0,#C0,#C0,#C0
      24.  00:988C  FF FF C0 C0 C0 C0 C0 C0 
      25.  00:9894                      	db #C0,#C0,#C0,#C0,#C0,#C0,#FF,#FF
      25.  00:9894  C0 C0 C0 C0 C0 C0 FF FF 
      26.  00:989C                      	db #FF,#FF,#03,#03,#03,#03,#03,#03
      26.  00:989C  FF FF 03 03 03 03 03 03 
      27.  00:98A4                      	db #03,#03,#03,#03,#03,#03,#FF,#FF
      27.  00:98A4  03 03 03 03 03 03 FF FF 
      28.  00:98AC                      	
      29.  00:98AC                      sprite_punto_mira_2: 	;color 15
      30.  00:98AC                      	db #00,#00,#00,#00,#0F,#0F,#0C,#0C
      30.  00:98AC  00 00 00 00 0F 0F 0C 0C 
      31.  00:98B4                      	db #0C,#0C,#0F,#0F,#00,#00,#00,#00
      31.  00:98B4  0C 0C 0F 0F 00 00 00 00 
      32.  00:98BC                      	db #00,#00,#00,#00,#F0,#F0,#30,#30
      32.  00:98BC  00 00 00 00 F0 F0 30 30 
      33.  00:98C4                      	db #30,#30,#F0,#F0,#00,#00,#00,#00
      33.  00:98C4  30 30 F0 F0 00 00 00 00 
      34.  00:98CC                      	
      35.  00:98CC                      sprite_punto_mira_1_mejorado:
      36.  00:98CC                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      36.  00:98CC  FF FF FF FF FF FF FF FF 
      37.  00:98D4                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      37.  00:98D4  FF FF FF FF FF FF FF FF 
      38.  00:98DC                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      38.  00:98DC  FF FF FF FF FF FF FF FF 
      39.  00:98E4                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      39.  00:98E4  FF FF FF FF FF FF FF FF 
      40.  00:98EC                      
      41.  00:98EC                      sprite_punto_mira_2_mejorado:
      42.  00:98EC                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      42.  00:98EC  FF FF FF FF FF FF FF FF 
      43.  00:98F4                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      43.  00:98F4  FF FF FF FF FF FF FF FF 
      44.  00:98FC                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      44.  00:98FC  FF FF FF FF FF FF FF FF 
      45.  00:9904                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      45.  00:9904  FF FF FF FF FF FF FF FF 
      46.  00:990C                      	
      47.  00:990C                      sprite_explosion_1:
      48.  00:990C                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      48.  00:990C  FF FF FF FF FF FF FF FF 
      49.  00:9914                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      49.  00:9914  FF FF FF FF FF FF FF FF 
      50.  00:991C                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      50.  00:991C  FF FF FF FF FF FF FF FF 
      51.  00:9924                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF	
      51.  00:9924  FF FF FF FF FF FF FF FF 
      52.  00:992C                      
      53.  00:992C                      sprite_explosion_2:
      54.  00:992C                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      54.  00:992C  FF FF FF FF FF FF FF FF 
      55.  00:9934                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      55.  00:9934  FF FF FF FF FF FF FF FF 
      56.  00:993C                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      56.  00:993C  FF FF FF FF FF FF FF FF 
      57.  00:9944                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF	
      57.  00:9944  FF FF FF FF FF FF FF FF 
      58.  00:994C                      fin_sprites_comunes:
      59.  00:994C                      
      60.  00:994C                      ;; PARTE 2: SPRITES NO COMUNES
      61.  00:994C                      
      62.  00:994C                      ;; ARAÑA
      63.  00:994C                      	
      64.  00:994C                      sprite_arana1_1:
      65.  00:994C                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      65.  00:994C  FF FF FF FF FF FF FF FF 
      66.  00:9954                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      66.  00:9954  FF FF FF FF FF FF FF FF 
      67.  00:995C                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      67.  00:995C  FF FF FF FF FF FF FF FF 
      68.  00:9964                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      68.  00:9964  FF FF FF FF FF FF FF FF 
      69.  00:996C                      	
      70.  00:996C                      sprite_arana1_2:
      71.  00:996C                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      71.  00:996C  FF FF FF FF FF FF FF FF 
      72.  00:9974                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      72.  00:9974  FF FF FF FF FF FF FF FF 
      73.  00:997C                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      73.  00:997C  FF FF FF FF FF FF FF FF 
      74.  00:9984                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      74.  00:9984  FF FF FF FF FF FF FF FF 
      75.  00:998C                      
      76.  00:998C                      ;; MURCIELAGO
      77.  00:998C                      	
      78.  00:998C                      sprite_murcielago1_1:
      79.  00:998C                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      79.  00:998C  FF FF FF FF FF FF FF FF 
      80.  00:9994                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      80.  00:9994  FF FF FF FF FF FF FF FF 
      81.  00:999C                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      81.  00:999C  FF FF FF FF FF FF FF FF 
      82.  00:99A4                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      82.  00:99A4  FF FF FF FF FF FF FF FF 
      83.  00:99AC                      	
      84.  00:99AC                      sprite_murcielago1_2:
      85.  00:99AC                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      85.  00:99AC  FF FF FF FF FF FF FF FF 
      86.  00:99B4                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      86.  00:99B4  FF FF FF FF FF FF FF FF 
      87.  00:99BC                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      87.  00:99BC  FF FF FF FF FF FF FF FF 
      88.  00:99C4                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF	
      88.  00:99C4  FF FF FF FF FF FF FF FF 
      89.  00:99CC                      
      90.  00:99CC                      ;; SERPIENTE
      91.  00:99CC                      
      92.  00:99CC                      sprite_serpiente1_1:
      93.  00:99CC                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      93.  00:99CC  FF FF FF FF FF FF FF FF 
      94.  00:99D4                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      94.  00:99D4  FF FF FF FF FF FF FF FF 
      95.  00:99DC                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      95.  00:99DC  FF FF FF FF FF FF FF FF 
      96.  00:99E4                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      96.  00:99E4  FF FF FF FF FF FF FF FF 
      97.  00:99EC                      	
      98.  00:99EC                      sprite_serpiente1_2:
      99.  00:99EC                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      99.  00:99EC  FF FF FF FF FF FF FF FF 
     100.  00:99F4                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     100.  00:99F4  FF FF FF FF FF FF FF FF 
     101.  00:99FC                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     101.  00:99FC  FF FF FF FF FF FF FF FF 
     102.  00:9A04                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     102.  00:9A04  FF FF FF FF FF FF FF FF 
     103.  00:9A0C                      	
     104.  00:9A0C                      sprite_serpiente2_1:
     105.  00:9A0C                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     105.  00:9A0C  FF FF FF FF FF FF FF FF 
     106.  00:9A14                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     106.  00:9A14  FF FF FF FF FF FF FF FF 
     107.  00:9A1C                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     107.  00:9A1C  FF FF FF FF FF FF FF FF 
     108.  00:9A24                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     108.  00:9A24  FF FF FF FF FF FF FF FF 
     109.  00:9A2C                      	
     110.  00:9A2C                      sprite_serpiente2_2:
     111.  00:9A2C                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     111.  00:9A2C  FF FF FF FF FF FF FF FF 
     112.  00:9A34                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     112.  00:9A34  FF FF FF FF FF FF FF FF 
     113.  00:9A3C                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     113.  00:9A3C  FF FF FF FF FF FF FF FF 
     114.  00:9A44                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     114.  00:9A44  FF FF FF FF FF FF FF FF 
     115.  00:9A4C                      
     116.  00:9A4C                      ;; ZOMBI
     117.  00:9A4C                      
     118.  00:9A4C                      sprite_zombi1_1_1:
     119.  00:9A4C                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     119.  00:9A4C  FF FF FF FF FF FF FF FF 
     120.  00:9A54                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     120.  00:9A54  FF FF FF FF FF FF FF FF 
     121.  00:9A5C                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     121.  00:9A5C  FF FF FF FF FF FF FF FF 
     122.  00:9A64                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     122.  00:9A64  FF FF FF FF FF FF FF FF 
     123.  00:9A6C                      
     124.  00:9A6C                      sprite_zombi1_2_1:
     125.  00:9A6C                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     125.  00:9A6C  FF FF FF FF FF FF FF FF 
     126.  00:9A74                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     126.  00:9A74  FF FF FF FF FF FF FF FF 
     127.  00:9A7C                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     127.  00:9A7C  FF FF FF FF FF FF FF FF 
     128.  00:9A84                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     128.  00:9A84  FF FF FF FF FF FF FF FF 
     129.  00:9A8C                      	
     130.  00:9A8C                      sprite_zombi1_3_1:
     131.  00:9A8C                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     131.  00:9A8C  FF FF FF FF FF FF FF FF 
     132.  00:9A94                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     132.  00:9A94  FF FF FF FF FF FF FF FF 
     133.  00:9A9C                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     133.  00:9A9C  FF FF FF FF FF FF FF FF 
     134.  00:9AA4                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     134.  00:9AA4  FF FF FF FF FF FF FF FF 
     135.  00:9AAC                      	
     136.  00:9AAC                      sprite_zombi1_4_1:
     137.  00:9AAC                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     137.  00:9AAC  FF FF FF FF FF FF FF FF 
     138.  00:9AB4                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     138.  00:9AB4  FF FF FF FF FF FF FF FF 
     139.  00:9ABC                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     139.  00:9ABC  FF FF FF FF FF FF FF FF 
     140.  00:9AC4                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     140.  00:9AC4  FF FF FF FF FF FF FF FF 
     141.  00:9ACC                      	
     142.  00:9ACC                      sprite_zombi1_1_2:
     143.  00:9ACC                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     143.  00:9ACC  FF FF FF FF FF FF FF FF 
     144.  00:9AD4                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     144.  00:9AD4  FF FF FF FF FF FF FF FF 
     145.  00:9ADC                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     145.  00:9ADC  FF FF FF FF FF FF FF FF 
     146.  00:9AE4                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     146.  00:9AE4  FF FF FF FF FF FF FF FF 
     147.  00:9AEC                      
     148.  00:9AEC                      sprite_zombi1_2_2:
     149.  00:9AEC                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     149.  00:9AEC  FF FF FF FF FF FF FF FF 
     150.  00:9AF4                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     150.  00:9AF4  FF FF FF FF FF FF FF FF 
     151.  00:9AFC                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     151.  00:9AFC  FF FF FF FF FF FF FF FF 
     152.  00:9B04                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     152.  00:9B04  FF FF FF FF FF FF FF FF 
     153.  00:9B0C                      	
     154.  00:9B0C                      sprite_zombi1_3_2:
     155.  00:9B0C                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     155.  00:9B0C  FF FF FF FF FF FF FF FF 
     156.  00:9B14                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     156.  00:9B14  FF FF FF FF FF FF FF FF 
     157.  00:9B1C                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     157.  00:9B1C  FF FF FF FF FF FF FF FF 
     158.  00:9B24                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     158.  00:9B24  FF FF FF FF FF FF FF FF 
     159.  00:9B2C                      	
     160.  00:9B2C                      sprite_zombi1_4_2:
     161.  00:9B2C                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     161.  00:9B2C  FF FF FF FF FF FF FF FF 
     162.  00:9B34                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     162.  00:9B34  FF FF FF FF FF FF FF FF 
     163.  00:9B3C                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     163.  00:9B3C  FF FF FF FF FF FF FF FF 
     164.  00:9B44                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     164.  00:9B44  FF FF FF FF FF FF FF FF 
     165.  00:9B4C                      	
     166.  00:9B4C                      sprite_zombi2_1_1:
     167.  00:9B4C                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     167.  00:9B4C  FF FF FF FF FF FF FF FF 
     168.  00:9B54                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     168.  00:9B54  FF FF FF FF FF FF FF FF 
     169.  00:9B5C                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     169.  00:9B5C  FF FF FF FF FF FF FF FF 
     170.  00:9B64                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     170.  00:9B64  FF FF FF FF FF FF FF FF 
     171.  00:9B6C                      
     172.  00:9B6C                      sprite_zombi2_2_1:
     173.  00:9B6C                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     173.  00:9B6C  FF FF FF FF FF FF FF FF 
     174.  00:9B74                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     174.  00:9B74  FF FF FF FF FF FF FF FF 
     175.  00:9B7C                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     175.  00:9B7C  FF FF FF FF FF FF FF FF 
     176.  00:9B84                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     176.  00:9B84  FF FF FF FF FF FF FF FF 
     177.  00:9B8C                      	
     178.  00:9B8C                      sprite_zombi2_3_1:
     179.  00:9B8C                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     179.  00:9B8C  FF FF FF FF FF FF FF FF 
     180.  00:9B94                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     180.  00:9B94  FF FF FF FF FF FF FF FF 
     181.  00:9B9C                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     181.  00:9B9C  FF FF FF FF FF FF FF FF 
     182.  00:9BA4                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     182.  00:9BA4  FF FF FF FF FF FF FF FF 
     183.  00:9BAC                      	
     184.  00:9BAC                      sprite_zombi2_4_1:
     185.  00:9BAC                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     185.  00:9BAC  FF FF FF FF FF FF FF FF 
     186.  00:9BB4                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     186.  00:9BB4  FF FF FF FF FF FF FF FF 
     187.  00:9BBC                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     187.  00:9BBC  FF FF FF FF FF FF FF FF 
     188.  00:9BC4                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     188.  00:9BC4  FF FF FF FF FF FF FF FF 
     189.  00:9BCC                      	
     190.  00:9BCC                      sprite_zombi2_1_2:
     191.  00:9BCC                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     191.  00:9BCC  FF FF FF FF FF FF FF FF 
     192.  00:9BD4                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     192.  00:9BD4  FF FF FF FF FF FF FF FF 
     193.  00:9BDC                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     193.  00:9BDC  FF FF FF FF FF FF FF FF 
     194.  00:9BE4                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     194.  00:9BE4  FF FF FF FF FF FF FF FF 
     195.  00:9BEC                      
     196.  00:9BEC                      sprite_zombi2_2_2:
     197.  00:9BEC                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     197.  00:9BEC  FF FF FF FF FF FF FF FF 
     198.  00:9BF4                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     198.  00:9BF4  FF FF FF FF FF FF FF FF 
     199.  00:9BFC                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     199.  00:9BFC  FF FF FF FF FF FF FF FF 
     200.  00:9C04                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     200.  00:9C04  FF FF FF FF FF FF FF FF 
     201.  00:9C0C                      	
     202.  00:9C0C                      sprite_zombi2_3_2:
     203.  00:9C0C                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     203.  00:9C0C  FF FF FF FF FF FF FF FF 
     204.  00:9C14                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     204.  00:9C14  FF FF FF FF FF FF FF FF 
     205.  00:9C1C                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     205.  00:9C1C  FF FF FF FF FF FF FF FF 
     206.  00:9C24                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     206.  00:9C24  FF FF FF FF FF FF FF FF 
     207.  00:9C2C                      	
     208.  00:9C2C                      sprite_zombi2_4_2:
     209.  00:9C2C                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     209.  00:9C2C  FF FF FF FF FF FF FF FF 
     210.  00:9C34                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     210.  00:9C34  FF FF FF FF FF FF FF FF 
     211.  00:9C3C                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     211.  00:9C3C  FF FF FF FF FF FF FF FF 
     212.  00:9C44                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     212.  00:9C44  FF FF FF FF FF FF FF FF 
     213.  00:9C4C                      	
     214.  00:9C4C                      ;; CABALLERO
     215.  00:9C4C                      
     216.  00:9C4C                      sprite_caballero1_1_1:
     217.  00:9C4C                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     217.  00:9C4C  FF FF FF FF FF FF FF FF 
     218.  00:9C54                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     218.  00:9C54  FF FF FF FF FF FF FF FF 
     219.  00:9C5C                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     219.  00:9C5C  FF FF FF FF FF FF FF FF 
     220.  00:9C64                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     220.  00:9C64  FF FF FF FF FF FF FF FF 
     221.  00:9C6C                      
     222.  00:9C6C                      sprite_caballero1_2_1:
     223.  00:9C6C                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     223.  00:9C6C  FF FF FF FF FF FF FF FF 
     224.  00:9C74                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     224.  00:9C74  FF FF FF FF FF FF FF FF 
     225.  00:9C7C                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     225.  00:9C7C  FF FF FF FF FF FF FF FF 
     226.  00:9C84                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     226.  00:9C84  FF FF FF FF FF FF FF FF 
     227.  00:9C8C                      	
     228.  00:9C8C                      sprite_caballero1_3_1:
     229.  00:9C8C                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     229.  00:9C8C  FF FF FF FF FF FF FF FF 
     230.  00:9C94                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     230.  00:9C94  FF FF FF FF FF FF FF FF 
     231.  00:9C9C                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     231.  00:9C9C  FF FF FF FF FF FF FF FF 
     232.  00:9CA4                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     232.  00:9CA4  FF FF FF FF FF FF FF FF 
     233.  00:9CAC                      	
     234.  00:9CAC                      sprite_caballero1_4_1:
     235.  00:9CAC                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     235.  00:9CAC  FF FF FF FF FF FF FF FF 
     236.  00:9CB4                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     236.  00:9CB4  FF FF FF FF FF FF FF FF 
     237.  00:9CBC                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     237.  00:9CBC  FF FF FF FF FF FF FF FF 
     238.  00:9CC4                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     238.  00:9CC4  FF FF FF FF FF FF FF FF 
     239.  00:9CCC                      	
     240.  00:9CCC                      sprite_caballero1_1_2:
     241.  00:9CCC                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     241.  00:9CCC  FF FF FF FF FF FF FF FF 
     242.  00:9CD4                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     242.  00:9CD4  FF FF FF FF FF FF FF FF 
     243.  00:9CDC                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     243.  00:9CDC  FF FF FF FF FF FF FF FF 
     244.  00:9CE4                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     244.  00:9CE4  FF FF FF FF FF FF FF FF 
     245.  00:9CEC                      
     246.  00:9CEC                      sprite_caballero1_2_2:
     247.  00:9CEC                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     247.  00:9CEC  FF FF FF FF FF FF FF FF 
     248.  00:9CF4                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     248.  00:9CF4  FF FF FF FF FF FF FF FF 
     249.  00:9CFC                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     249.  00:9CFC  FF FF FF FF FF FF FF FF 
     250.  00:9D04                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     250.  00:9D04  FF FF FF FF FF FF FF FF 
     251.  00:9D0C                      	
     252.  00:9D0C                      sprite_caballero1_3_2:
     253.  00:9D0C                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     253.  00:9D0C  FF FF FF FF FF FF FF FF 
     254.  00:9D14                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     254.  00:9D14  FF FF FF FF FF FF FF FF 
     255.  00:9D1C                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     255.  00:9D1C  FF FF FF FF FF FF FF FF 
     256.  00:9D24                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     256.  00:9D24  FF FF FF FF FF FF FF FF 
     257.  00:9D2C                      	
     258.  00:9D2C                      sprite_caballero1_4_2:
     259.  00:9D2C                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     259.  00:9D2C  FF FF FF FF FF FF FF FF 
     260.  00:9D34                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     260.  00:9D34  FF FF FF FF FF FF FF FF 
     261.  00:9D3C                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     261.  00:9D3C  FF FF FF FF FF FF FF FF 
     262.  00:9D44                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     262.  00:9D44  FF FF FF FF FF FF FF FF 
     263.  00:9D4C                      	
     264.  00:9D4C                      sprite_caballero2_1_1:
     265.  00:9D4C                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     265.  00:9D4C  FF FF FF FF FF FF FF FF 
     266.  00:9D54                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     266.  00:9D54  FF FF FF FF FF FF FF FF 
     267.  00:9D5C                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     267.  00:9D5C  FF FF FF FF FF FF FF FF 
     268.  00:9D64                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     268.  00:9D64  FF FF FF FF FF FF FF FF 
     269.  00:9D6C                      
     270.  00:9D6C                      sprite_caballero2_2_1:
     271.  00:9D6C                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     271.  00:9D6C  FF FF FF FF FF FF FF FF 
     272.  00:9D74                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     272.  00:9D74  FF FF FF FF FF FF FF FF 
     273.  00:9D7C                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     273.  00:9D7C  FF FF FF FF FF FF FF FF 
     274.  00:9D84                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     274.  00:9D84  FF FF FF FF FF FF FF FF 
     275.  00:9D8C                      	
     276.  00:9D8C                      sprite_caballero2_3_1:
     277.  00:9D8C                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     277.  00:9D8C  FF FF FF FF FF FF FF FF 
     278.  00:9D94                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     278.  00:9D94  FF FF FF FF FF FF FF FF 
     279.  00:9D9C                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     279.  00:9D9C  FF FF FF FF FF FF FF FF 
     280.  00:9DA4                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     280.  00:9DA4  FF FF FF FF FF FF FF FF 
     281.  00:9DAC                      	
     282.  00:9DAC                      sprite_caballero2_4_1:
     283.  00:9DAC                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     283.  00:9DAC  FF FF FF FF FF FF FF FF 
     284.  00:9DB4                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     284.  00:9DB4  FF FF FF FF FF FF FF FF 
     285.  00:9DBC                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     285.  00:9DBC  FF FF FF FF FF FF FF FF 
     286.  00:9DC4                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     286.  00:9DC4  FF FF FF FF FF FF FF FF 
     287.  00:9DCC                      	
     288.  00:9DCC                      sprite_caballero2_1_2:
     289.  00:9DCC                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     289.  00:9DCC  FF FF FF FF FF FF FF FF 
     290.  00:9DD4                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     290.  00:9DD4  FF FF FF FF FF FF FF FF 
     291.  00:9DDC                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     291.  00:9DDC  FF FF FF FF FF FF FF FF 
     292.  00:9DE4                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     292.  00:9DE4  FF FF FF FF FF FF FF FF 
     293.  00:9DEC                      
     294.  00:9DEC                      sprite_caballero2_2_2:
     295.  00:9DEC                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     295.  00:9DEC  FF FF FF FF FF FF FF FF 
     296.  00:9DF4                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     296.  00:9DF4  FF FF FF FF FF FF FF FF 
     297.  00:9DFC                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     297.  00:9DFC  FF FF FF FF FF FF FF FF 
     298.  00:9E04                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     298.  00:9E04  FF FF FF FF FF FF FF FF 
     299.  00:9E0C                      	
     300.  00:9E0C                      sprite_caballero2_3_2:
     301.  00:9E0C                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     301.  00:9E0C  FF FF FF FF FF FF FF FF 
     302.  00:9E14                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     302.  00:9E14  FF FF FF FF FF FF FF FF 
     303.  00:9E1C                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     303.  00:9E1C  FF FF FF FF FF FF FF FF 
     304.  00:9E24                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     304.  00:9E24  FF FF FF FF FF FF FF FF 
     305.  00:9E2C                      	
     306.  00:9E2C                      sprite_caballero2_4_2:
     307.  00:9E2C                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     307.  00:9E2C  FF FF FF FF FF FF FF FF 
     308.  00:9E34                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     308.  00:9E34  FF FF FF FF FF FF FF FF 
     309.  00:9E3C                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     309.  00:9E3C  FF FF FF FF FF FF FF FF 
     310.  00:9E44                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     310.  00:9E44  FF FF FF FF FF FF FF FF 
     311.  00:9E4C                      	
     312.  00:9E4C                      ;; LLAMA
     313.  00:9E4C                      
     314.  00:9E4C                      sprite_llama1_1:	
     315.  00:9E4C                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     315.  00:9E4C  FF FF FF FF FF FF FF FF 
     316.  00:9E54                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     316.  00:9E54  FF FF FF FF FF FF FF FF 
     317.  00:9E5C                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     317.  00:9E5C  FF FF FF FF FF FF FF FF 
     318.  00:9E64                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     318.  00:9E64  FF FF FF FF FF FF FF FF 
     319.  00:9E6C                      	
     320.  00:9E6C                      sprite_llama2_1:	
     321.  00:9E6C                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     321.  00:9E6C  FF FF FF FF FF FF FF FF 
     322.  00:9E74                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     322.  00:9E74  FF FF FF FF FF FF FF FF 
     323.  00:9E7C                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     323.  00:9E7C  FF FF FF FF FF FF FF FF 
     324.  00:9E84                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF	
     324.  00:9E84  FF FF FF FF FF FF FF FF 
     325.  00:9E8C                      	
     326.  00:9E8C                      sprite_llama1_2:	
     327.  00:9E8C                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     327.  00:9E8C  FF FF FF FF FF FF FF FF 
     328.  00:9E94                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     328.  00:9E94  FF FF FF FF FF FF FF FF 
     329.  00:9E9C                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     329.  00:9E9C  FF FF FF FF FF FF FF FF 
     330.  00:9EA4                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     330.  00:9EA4  FF FF FF FF FF FF FF FF 
     331.  00:9EAC                      	
     332.  00:9EAC                      sprite_llama2_2:	
     333.  00:9EAC                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     333.  00:9EAC  FF FF FF FF FF FF FF FF 
     334.  00:9EB4                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     334.  00:9EB4  FF FF FF FF FF FF FF FF 
     335.  00:9EBC                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     335.  00:9EBC  FF FF FF FF FF FF FF FF 
     336.  00:9EC4                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF			
     336.  00:9EC4  FF FF FF FF FF FF FF FF 
     337.  00:9ECC                      	
     338.  00:9ECC                      ;; FANTASMA
     339.  00:9ECC                      
     340.  00:9ECC                      sprite_fantasma1_1:
     341.  00:9ECC                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     341.  00:9ECC  FF FF FF FF FF FF FF FF 
     342.  00:9ED4                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     342.  00:9ED4  FF FF FF FF FF FF FF FF 
     343.  00:9EDC                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     343.  00:9EDC  FF FF FF FF FF FF FF FF 
     344.  00:9EE4                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     344.  00:9EE4  FF FF FF FF FF FF FF FF 
     345.  00:9EEC                      
     346.  00:9EEC                      sprite_fantasma2_1:
     347.  00:9EEC                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     347.  00:9EEC  FF FF FF FF FF FF FF FF 
     348.  00:9EF4                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     348.  00:9EF4  FF FF FF FF FF FF FF FF 
     349.  00:9EFC                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     349.  00:9EFC  FF FF FF FF FF FF FF FF 
     350.  00:9F04                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     350.  00:9F04  FF FF FF FF FF FF FF FF 
     351.  00:9F0C                      
     352.  00:9F0C                      sprite_fantasma1_2:
     353.  00:9F0C                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     353.  00:9F0C  FF FF FF FF FF FF FF FF 
     354.  00:9F14                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     354.  00:9F14  FF FF FF FF FF FF FF FF 
     355.  00:9F1C                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     355.  00:9F1C  FF FF FF FF FF FF FF FF 
     356.  00:9F24                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     356.  00:9F24  FF FF FF FF FF FF FF FF 
     357.  00:9F2C                      
     358.  00:9F2C                      sprite_fantasma2_2:
     359.  00:9F2C                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     359.  00:9F2C  FF FF FF FF FF FF FF FF 
     360.  00:9F34                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     360.  00:9F34  FF FF FF FF FF FF FF FF 
     361.  00:9F3C                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     361.  00:9F3C  FF FF FF FF FF FF FF FF 
     362.  00:9F44                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF	
     362.  00:9F44  FF FF FF FF FF FF FF FF 
     363.  00:9F4C                      	
     364.  00:9F4C                      ;; MAGIA
     365.  00:9F4C                      
     366.  00:9F4C                      sprite_magia1_1:
     367.  00:9F4C                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     367.  00:9F4C  FF FF FF FF FF FF FF FF 
     368.  00:9F54                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     368.  00:9F54  FF FF FF FF FF FF FF FF 
     369.  00:9F5C                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     369.  00:9F5C  FF FF FF FF FF FF FF FF 
     370.  00:9F64                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     370.  00:9F64  FF FF FF FF FF FF FF FF 
     371.  00:9F6C                      
     372.  00:9F6C                      sprite_magia2_1:
     373.  00:9F6C                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     373.  00:9F6C  FF FF FF FF FF FF FF FF 
     374.  00:9F74                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     374.  00:9F74  FF FF FF FF FF FF FF FF 
     375.  00:9F7C                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     375.  00:9F7C  FF FF FF FF FF FF FF FF 
     376.  00:9F84                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     376.  00:9F84  FF FF FF FF FF FF FF FF 
     377.  00:9F8C                      
     378.  00:9F8C                      sprite_magia1_2:
     379.  00:9F8C                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     379.  00:9F8C  FF FF FF FF FF FF FF FF 
     380.  00:9F94                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     380.  00:9F94  FF FF FF FF FF FF FF FF 
     381.  00:9F9C                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     381.  00:9F9C  FF FF FF FF FF FF FF FF 
     382.  00:9FA4                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     382.  00:9FA4  FF FF FF FF FF FF FF FF 
     383.  00:9FAC                      
     384.  00:9FAC                      sprite_magia2_2:
     385.  00:9FAC                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     385.  00:9FAC  FF FF FF FF FF FF FF FF 
     386.  00:9FB4                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     386.  00:9FB4  FF FF FF FF FF FF FF FF 
     387.  00:9FBC                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     387.  00:9FBC  FF FF FF FF FF FF FF FF 
     388.  00:9FC4                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF	
     388.  00:9FC4  FF FF FF FF FF FF FF FF 
     389.  00:9FCC                      	
     390.  00:9FCC                      	
     391.  00:9FCC                      ;; BEHOLDER
     392.  00:9FCC                      
     393.  00:9FCC                      sprite_beholder1_1:
     394.  00:9FCC                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     394.  00:9FCC  FF FF FF FF FF FF FF FF 
     395.  00:9FD4                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     395.  00:9FD4  FF FF FF FF FF FF FF FF 
     396.  00:9FDC                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     396.  00:9FDC  FF FF FF FF FF FF FF FF 
     397.  00:9FE4                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     397.  00:9FE4  FF FF FF FF FF FF FF FF 
     398.  00:9FEC                      
     399.  00:9FEC                      sprite_beholder2_1:
     400.  00:9FEC                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     400.  00:9FEC  FF FF FF FF FF FF FF FF 
     401.  00:9FF4                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     401.  00:9FF4  FF FF FF FF FF FF FF FF 
     402.  00:9FFC                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     402.  00:9FFC  FF FF FF FF FF FF FF FF 
     403.  00:A004                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     403.  00:A004  FF FF FF FF FF FF FF FF 
     404.  00:A00C                      
     405.  00:A00C                      sprite_beholder3_1:
     406.  00:A00C                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     406.  00:A00C  FF FF FF FF FF FF FF FF 
     407.  00:A014                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     407.  00:A014  FF FF FF FF FF FF FF FF 
     408.  00:A01C                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     408.  00:A01C  FF FF FF FF FF FF FF FF 
     409.  00:A024                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     409.  00:A024  FF FF FF FF FF FF FF FF 
     410.  00:A02C                      
     411.  00:A02C                      sprite_beholder4_1:
     412.  00:A02C                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     412.  00:A02C  FF FF FF FF FF FF FF FF 
     413.  00:A034                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     413.  00:A034  FF FF FF FF FF FF FF FF 
     414.  00:A03C                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     414.  00:A03C  FF FF FF FF FF FF FF FF 
     415.  00:A044                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF	
     415.  00:A044  FF FF FF FF FF FF FF FF 
     416.  00:A04C                      	
     417.  00:A04C                      sprite_beholder1_2:
     418.  00:A04C                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     418.  00:A04C  FF FF FF FF FF FF FF FF 
     419.  00:A054                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     419.  00:A054  FF FF FF FF FF FF FF FF 
     420.  00:A05C                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     420.  00:A05C  FF FF FF FF FF FF FF FF 
     421.  00:A064                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     421.  00:A064  FF FF FF FF FF FF FF FF 
     422.  00:A06C                      
     423.  00:A06C                      sprite_beholder2_2:
     424.  00:A06C                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     424.  00:A06C  FF FF FF FF FF FF FF FF 
     425.  00:A074                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     425.  00:A074  FF FF FF FF FF FF FF FF 
     426.  00:A07C                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     426.  00:A07C  FF FF FF FF FF FF FF FF 
     427.  00:A084                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     427.  00:A084  FF FF FF FF FF FF FF FF 
     428.  00:A08C                      
     429.  00:A08C                      sprite_beholder3_2:
     430.  00:A08C                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     430.  00:A08C  FF FF FF FF FF FF FF FF 
     431.  00:A094                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     431.  00:A094  FF FF FF FF FF FF FF FF 
     432.  00:A09C                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     432.  00:A09C  FF FF FF FF FF FF FF FF 
     433.  00:A0A4                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     433.  00:A0A4  FF FF FF FF FF FF FF FF 
     434.  00:A0AC                      
     435.  00:A0AC                      sprite_beholder4_2:
     436.  00:A0AC                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     436.  00:A0AC  FF FF FF FF FF FF FF FF 
     437.  00:A0B4                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     437.  00:A0B4  FF FF FF FF FF FF FF FF 
     438.  00:A0BC                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     438.  00:A0BC  FF FF FF FF FF FF FF FF 
     439.  00:A0C4                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF		
     439.  00:A0C4  FF FF FF FF FF FF FF FF 
     440.  00:A0CC                      	
     441.  00:A0CC                      ;; VAMPIRO
     442.  00:A0CC                      
     443.  00:A0CC                      sprite_vampiro1_1:
     444.  00:A0CC                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     444.  00:A0CC  FF FF FF FF FF FF FF FF 
     445.  00:A0D4                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     445.  00:A0D4  FF FF FF FF FF FF FF FF 
     446.  00:A0DC                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     446.  00:A0DC  FF FF FF FF FF FF FF FF 
     447.  00:A0E4                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     447.  00:A0E4  FF FF FF FF FF FF FF FF 
     448.  00:A0EC                      
     449.  00:A0EC                      sprite_vampiro2_1:
     450.  00:A0EC                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     450.  00:A0EC  FF FF FF FF FF FF FF FF 
     451.  00:A0F4                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     451.  00:A0F4  FF FF FF FF FF FF FF FF 
     452.  00:A0FC                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     452.  00:A0FC  FF FF FF FF FF FF FF FF 
     453.  00:A104                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     453.  00:A104  FF FF FF FF FF FF FF FF 
     454.  00:A10C                      
     455.  00:A10C                      sprite_vampiro1_2:
     456.  00:A10C                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     456.  00:A10C  FF FF FF FF FF FF FF FF 
     457.  00:A114                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     457.  00:A114  FF FF FF FF FF FF FF FF 
     458.  00:A11C                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     458.  00:A11C  FF FF FF FF FF FF FF FF 
     459.  00:A124                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     459.  00:A124  FF FF FF FF FF FF FF FF 
     460.  00:A12C                      
     461.  00:A12C                      sprite_vampiro2_2:
     462.  00:A12C                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     462.  00:A12C  FF FF FF FF FF FF FF FF 
     463.  00:A134                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     463.  00:A134  FF FF FF FF FF FF FF FF 
     464.  00:A13C                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     464.  00:A13C  FF FF FF FF FF FF FF FF 
     465.  00:A144                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     465.  00:A144  FF FF FF FF FF FF FF FF 
     466.  00:A14C                      	
     467.  00:A14C                      ;; MANOIZQ
     468.  00:A14C                      
     469.  00:A14C                      sprite_manoizq1:
     470.  00:A14C                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     470.  00:A14C  FF FF FF FF FF FF FF FF 
     471.  00:A154                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     471.  00:A154  FF FF FF FF FF FF FF FF 
     472.  00:A15C                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     472.  00:A15C  FF FF FF FF FF FF FF FF 
     473.  00:A164                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     473.  00:A164  FF FF FF FF FF FF FF FF 
     474.  00:A16C                      	
     475.  00:A16C                      sprite_manoizq2:
     476.  00:A16C                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     476.  00:A16C  FF FF FF FF FF FF FF FF 
     477.  00:A174                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     477.  00:A174  FF FF FF FF FF FF FF FF 
     478.  00:A17C                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     478.  00:A17C  FF FF FF FF FF FF FF FF 
     479.  00:A184                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     479.  00:A184  FF FF FF FF FF FF FF FF 
     480.  00:A18C                      	
     481.  00:A18C                      sprite_manoizq3:
     482.  00:A18C                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     482.  00:A18C  FF FF FF FF FF FF FF FF 
     483.  00:A194                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     483.  00:A194  FF FF FF FF FF FF FF FF 
     484.  00:A19C                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     484.  00:A19C  FF FF FF FF FF FF FF FF 
     485.  00:A1A4                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF	
     485.  00:A1A4  FF FF FF FF FF FF FF FF 
     486.  00:A1AC                      	
     487.  00:A1AC                      ;; MANODER
     488.  00:A1AC                      
     489.  00:A1AC                      sprite_manoder1:
     490.  00:A1AC                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     490.  00:A1AC  FF FF FF FF FF FF FF FF 
     491.  00:A1B4                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     491.  00:A1B4  FF FF FF FF FF FF FF FF 
     492.  00:A1BC                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     492.  00:A1BC  FF FF FF FF FF FF FF FF 
     493.  00:A1C4                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     493.  00:A1C4  FF FF FF FF FF FF FF FF 
     494.  00:A1CC                      	
     495.  00:A1CC                      sprite_manoder2:
     496.  00:A1CC                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     496.  00:A1CC  FF FF FF FF FF FF FF FF 
     497.  00:A1D4                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     497.  00:A1D4  FF FF FF FF FF FF FF FF 
     498.  00:A1DC                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     498.  00:A1DC  FF FF FF FF FF FF FF FF 
     499.  00:A1E4                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     499.  00:A1E4  FF FF FF FF FF FF FF FF 
     500.  00:A1EC                      	
     501.  00:A1EC                      sprite_manoder3:
     502.  00:A1EC                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     502.  00:A1EC  FF FF FF FF FF FF FF FF 
     503.  00:A1F4                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     503.  00:A1F4  FF FF FF FF FF FF FF FF 
     504.  00:A1FC                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     504.  00:A1FC  FF FF FF FF FF FF FF FF 
     505.  00:A204                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF		
     505.  00:A204  FF FF FF FF FF FF FF FF 
     506.  00:A20C                      	
     507.  00:A20C                      	
     508.  00:A20C                      	
     509.  00:A20C                      	
     510.  00:A20C                      	
     511.  00:A20C                      	
     512.  00:A20C                      	
     513.  00:A20C                      	
     514.  00:A20C                      	
     515.  00:A20C                      	
     516.  00:A20C                      	
     517.  00:A20C                      	
     518.  00:A20C                      	
     519.  00:A20C                      	
     520.  00:A20C                      	
     521.  00:A20C                      	
     522.  00:A20C                      	
     523.  00:A20C                      	
     524.  00:A20C                      	
     525.  00:A20C                      	
     526.  00:A20C                      	
     527.  00:A20C                      	
     528.  00:A20C                      	
     143   00:A20C                      	
     144   00:A20C                      	include "habitaciones.asm"
       1.  00:A20C                      ;;=====================================================
       2.  00:A20C                      ;;DEFINICIÓN DE HABITACIONES x NIVEL
       3.  00:A20C                      ;;=====================================================	
       4.  00:A20C                      
       5.  00:A20C                      ; sólo voy a usar 7x7 pero como los arrays son lineales y voy a trabajar con matrices
       6.  00:A20C                      ; me interesa que seande  8x8 aunque sólo trabaje con 7x7
       7.  00:A20C                      
       8.  00:A20C                      ; ojo... la primera linea corresponderá a la primera linea del castillo no a la última
       9.  00:A20C                      
      10.  00:A20C                      ;; definición de estructura de bits
      11.  00:A20C                      ;16 bits por habitación
      12.  00:A20C                      
      13.  00:A20C                      ;~ 7 - sin asignar
      14.  00:A20C                      ;~ 6 - sin asignar
      15.  00:A20C                      ;~ 5 - sin asignar
      16.  00:A20C                      ;~ 4 - sin asignar
      17.  00:A20C                      ;~ 0,1,2,3 - nº puertas 1 arriba 1 derecha 1 abajo 1 izquierda
      18.  00:A20C                      
      19.  00:A20C                      ;~ 15 - ballesta
      20.  00:A20C                      ;~ 14 - vida extra
      21.  00:A20C                      ;~ 13 - planta
      22.  00:A20C                      ;~ 12 - armadura
      23.  00:A20C                      ;~ 11 - agua
      24.  00:A20C                      ;~ 10 - cruz
      25.  00:A20C                      ;~ 9  - oración
      26.  00:A20C                      ;~ 8  - sin asignar
      27.  00:A20C                      
      28.  00:A20C                      ;importante: el byte de la columna 15 indicará con 1 y 0 habitaciones por las que se haya pasado
      29.  00:A20C                      ;cuando se inicie la partida todos se pondrán a 0
      30.  00:A20C                      ;por ejemplo 01000000b se ha pasado por la hab. 2 de esa fila en el nivel que sea
      31.  00:A20C                      
      32.  00:A20C                      habitacion_actual:
      33.  00:A20C  00                  	db  #00		;habitación donde se encuentre el prota. Se mete en una varible par traer todos los datos de golpe y no buscarlos varias veces
      34.  00:A20D                      habitacion_extras:
      35.  00:A20D  00                  	db	#00		;donde van las ayudas de una habitación
      36.  00:A20E                      
      37.  00:A20E                      
      38.  00:A20E                      habitaciones_juego:
      39.  00:A20E                      habitaciones_nivel0:
      40.  00:A20E                      	db  00000000b,#00,00000001b,#01,00001111b,10000000b,00000011b,#03,00001000b,#04,00001001b,#05,00001100b,#06,#FF,#00 ;primera fila
      40.  00:A20E  00 00 01 01 0F 80 03 03 08 04 09 05 0C 06 FF 00 
      41.  00:A21E                      	db  #17,#10,#11,#11,#12,#12,#13,#13,#14,#14,#15,#15,#16,#16,#FF,#00
      41.  00:A21E  17 10 11 11 12 12 13 13 14 14 15 15 16 16 FF 00 
      42.  00:A22E                      	db  #20,#20,#21,#21,#22,#22,#23,#23,#24,#24,#25,#25,#26,#26,#FF,#00
      42.  00:A22E  20 20 21 21 22 22 23 23 24 24 25 25 26 26 FF 00 
      43.  00:A23E                      	db  #30,#30,#31,#31,#32,#32,#33,#33,#34,#34,#35,#35,#36,#36,#FF,#00
      43.  00:A23E  30 30 31 31 32 32 33 33 34 34 35 35 36 36 FF 00 
      44.  00:A24E                      	db  00000000b,#00,00000001b,#01,00001111b,#02,00000011b,#03,00001000b,#04,00001001b,#05,00001100b,#06,#FF,#00
      44.  00:A24E  00 00 01 01 0F 02 03 03 08 04 09 05 0C 06 FF 00 
      45.  00:A25E                      	db  #50,#50,#51,#51,#52,#52,#53,#53,#54,#54,#55,#55,#56,#56,#FF,#00
      45.  00:A25E  50 50 51 51 52 52 53 53 54 54 55 55 56 56 FF 00 
      46.  00:A26E                      	db  00000000b,#00,00000001b,#01,00001111b,#02,00000011b,#03,00001000b,#04,00001001b,#05,00001100b,#06,#FF,#00	;ultima fila
      46.  00:A26E  00 00 01 01 0F 02 03 03 08 04 09 05 0C 06 FF 00 
      47.  00:A27E                      	
      48.  00:A27E                      habitaciones_nivel1:
      49.  00:A27E                      	db  00000000b,#00,00000001b,#01,00000010b,#02,00000011b,#03,00001000b,#04,00001001b,#05,00001100b,#06,#FF,#00 ;primera fila
      49.  00:A27E  00 00 01 01 02 02 03 03 08 04 09 05 0C 06 FF 00 
      50.  00:A28E                      	db  #17,#10,#11,#11,#12,#12,#13,#13,#14,#14,#15,#15,#16,#16,#FF,#00
      50.  00:A28E  17 10 11 11 12 12 13 13 14 14 15 15 16 16 FF 00 
      51.  00:A29E                      	db  #20,#20,#21,#21,#22,#22,#23,#23,#24,#24,#25,#25,#26,#26,#FF,#00
      51.  00:A29E  20 20 21 21 22 22 23 23 24 24 25 25 26 26 FF 00 
      52.  00:A2AE                      	db  #30,#30,#31,#31,#32,#32,#33,#33,#34,#34,#35,#35,#36,#36,#FF,#00
      52.  00:A2AE  30 30 31 31 32 32 33 33 34 34 35 35 36 36 FF 00 
      53.  00:A2BE                      	db  00000000b,#00,00000001b,#01,00001111b,#02,00000011b,#03,00001000b,#04,00001001b,#05,00001100b,#06,#FF,#00
      53.  00:A2BE  00 00 01 01 0F 02 03 03 08 04 09 05 0C 06 FF 00 
      54.  00:A2CE                      	db  #50,#50,#51,#51,#52,#52,#53,#53,#54,#54,#55,#55,#56,#56,#FF,#00
      54.  00:A2CE  50 50 51 51 52 52 53 53 54 54 55 55 56 56 FF 00 
      55.  00:A2DE                      	db  00000000b,#00,00000001b,#01,00000010b,#02,00000011b,#03,00001000b,#04,00001001b,#05,00001100b,#06,#FF,#00	;ultima fila
      55.  00:A2DE  00 00 01 01 02 02 03 03 08 04 09 05 0C 06 FF 00 
      56.  00:A2EE                      	
      57.  00:A2EE                      habitaciones_nivel2:
      58.  00:A2EE                      	db  00000000b,#00,00000001b,#01,00000010b,#02,00000011b,#03,00001000b,#04,00001001b,#05,00001100b,#06,#FF,#00 ;primera fila
      58.  00:A2EE  00 00 01 01 02 02 03 03 08 04 09 05 0C 06 FF 00 
      59.  00:A2FE                      	db  #17,#10,#11,#11,#12,#12,#13,#13,#14,#14,#15,#15,#16,#16,#FF,#00
      59.  00:A2FE  17 10 11 11 12 12 13 13 14 14 15 15 16 16 FF 00 
      60.  00:A30E                      	db  #20,#20,#21,#21,#22,#22,#23,#23,#24,#24,#25,#25,#26,#26,#FF,#00
      60.  00:A30E  20 20 21 21 22 22 23 23 24 24 25 25 26 26 FF 00 
      61.  00:A31E                      	db  #30,#30,#31,#31,#32,#32,#33,#33,#34,#34,#35,#35,#36,#36,#FF,#00
      61.  00:A31E  30 30 31 31 32 32 33 33 34 34 35 35 36 36 FF 00 
      62.  00:A32E                      	db  00000000b,#00,00000001b,#01,00001111b,#02,00000011b,#03,00001000b,#04,00001001b,#05,00001100b,#06,#FF,#00
      62.  00:A32E  00 00 01 01 0F 02 03 03 08 04 09 05 0C 06 FF 00 
      63.  00:A33E                      	db  #50,#50,#51,#51,#52,#52,#53,#53,#54,#54,#55,#55,#56,#56,#FF,#00
      63.  00:A33E  50 50 51 51 52 52 53 53 54 54 55 55 56 56 FF 00 
      64.  00:A34E                      	db  00000000b,#00,00000001b,#01,00000010b,#02,00000011b,#03,00001000b,#04,00001001b,#05,00001100b,#06,#FF,#00	;ultima fila
      64.  00:A34E  00 00 01 01 02 02 03 03 08 04 09 05 0C 06 FF 00 
      65.  00:A35E                      	
      66.  00:A35E                      habitaciones_nivel3:
      67.  00:A35E                      	db  00000000b,#00,00000001b,#01,00000010b,#02,00000011b,#03,00001000b,#04,00001001b,#05,00001100b,#06,#FF,#00 ;primera fila
      67.  00:A35E  00 00 01 01 02 02 03 03 08 04 09 05 0C 06 FF 00 
      68.  00:A36E                      	db  #17,#10,#11,#11,#12,#12,#13,#13,#14,#14,#15,#15,#16,#16,#FF,#00
      68.  00:A36E  17 10 11 11 12 12 13 13 14 14 15 15 16 16 FF 00 
      69.  00:A37E                      	db  #20,#20,#21,#21,#22,#22,#23,#23,#24,#24,#25,#25,#26,#26,#FF,#00
      69.  00:A37E  20 20 21 21 22 22 23 23 24 24 25 25 26 26 FF 00 
      70.  00:A38E                      	db  #30,#30,#31,#31,#32,#32,#33,#33,#34,#34,#35,#35,#36,#36,#FF,#00
      70.  00:A38E  30 30 31 31 32 32 33 33 34 34 35 35 36 36 FF 00 
      71.  00:A39E                      	db  00000000b,#00,00000001b,#01,00001111b,#02,00000011b,#03,00001000b,#04,00001001b,#05,00001100b,#06,#FF,#00
      71.  00:A39E  00 00 01 01 0F 02 03 03 08 04 09 05 0C 06 FF 00 
      72.  00:A3AE                      	db  #50,#50,#51,#51,#52,#52,#53,#53,#54,#54,#55,#55,#56,#56,#FF,#00
      72.  00:A3AE  50 50 51 51 52 52 53 53 54 54 55 55 56 56 FF 00 
      73.  00:A3BE                      	db  00000000b,#00,00000001b,#01,00000010b,#02,00000011b,#03,00001000b,#04,00001001b,#05,00001100b,#06,#FF,#00	;ultima fila
      73.  00:A3BE  00 00 01 01 02 02 03 03 08 04 09 05 0C 06 FF 00 
      74.  00:A3CE                      	
      75.  00:A3CE                      habitaciones_nivel4:
      76.  00:A3CE                      	db  00000001b,#00,00000001b,#01,00000010b,#02,00000011b,#03,00001000b,#04,00001001b,#05,00001100b,#06,#FF,#00 ;primera fila
      76.  00:A3CE  01 00 01 01 02 02 03 03 08 04 09 05 0C 06 FF 00 
      77.  00:A3DE                      	db  #17,#10,#11,#11,#12,#12,#13,#13,#14,#14,#15,#15,#16,#16,#FF,#00
      77.  00:A3DE  17 10 11 11 12 12 13 13 14 14 15 15 16 16 FF 00 
      78.  00:A3EE                      	db  #20,#20,#21,#21,#22,#22,#23,#23,#24,#24,#25,#25,#26,#26,#FF,#00
      78.  00:A3EE  20 20 21 21 22 22 23 23 24 24 25 25 26 26 FF 00 
      79.  00:A3FE                      	db  #30,#30,#31,#31,#32,#32,#33,#33,#34,#34,#35,#35,#36,#36,#FF,#00
      79.  00:A3FE  30 30 31 31 32 32 33 33 34 34 35 35 36 36 FF 00 
      80.  00:A40E                      	db  00000000b,#00,00000001b,#01,00001111b,#02,00000011b,#03,00001000b,#04,00001001b,#05,00001100b,#06,#FF,#00
      80.  00:A40E  00 00 01 01 0F 02 03 03 08 04 09 05 0C 06 FF 00 
      81.  00:A41E                      	db  #50,#50,#51,#51,#52,#52,#53,#53,#54,#54,#55,#55,#56,#56,#FF,#00
      81.  00:A41E  50 50 51 51 52 52 53 53 54 54 55 55 56 56 FF 00 
      82.  00:A42E                      	db  00000000b,#00,00000001b,#01,00001111b,00001111b,00000011b,#03,00001000b,#04,00001001b,#05,00001100b,#06,#FF,#00	;ultima fila
      82.  00:A42E  00 00 01 01 0F 0F 03 03 08 04 09 05 0C 06 FF 00 
      83.  00:A43E                      	
      84.  00:A43E                      habitaciones_nivel5:
      85.  00:A43E                      	db  00000000b,#00,00000001b,#01,00000010b,#02,00000011b,#03,00001000b,#04,00001001b,#05,00001100b,#06,#FF,#00 ;primera fila
      85.  00:A43E  00 00 01 01 02 02 03 03 08 04 09 05 0C 06 FF 00 
      86.  00:A44E                      	db  #17,#10,#11,#11,#12,#12,#13,#13,#14,#14,#15,#15,#16,#16,#FF,#00
      86.  00:A44E  17 10 11 11 12 12 13 13 14 14 15 15 16 16 FF 00 
      87.  00:A45E                      	db  #20,#20,#21,#21,#22,#22,#23,#23,#24,#24,#25,#25,#26,#26,#FF,#00
      87.  00:A45E  20 20 21 21 22 22 23 23 24 24 25 25 26 26 FF 00 
      88.  00:A46E                      	db  #30,#30,#31,#31,#32,#32,#33,#33,#34,#34,#35,#35,#36,#36,#FF,#00
      88.  00:A46E  30 30 31 31 32 32 33 33 34 34 35 35 36 36 FF 00 
      89.  00:A47E                      	db  00000000b,#00,00000001b,#01,00001111b,#02,00000011b,#03,00001000b,#04,00001001b,#05,00001100b,#06,#FF,#00
      89.  00:A47E  00 00 01 01 0F 02 03 03 08 04 09 05 0C 06 FF 00 
      90.  00:A48E                      	db  #50,#50,#51,#51,#52,#52,#53,#53,#54,#54,#55,#55,#56,#56,#FF,#00
      90.  00:A48E  50 50 51 51 52 52 53 53 54 54 55 55 56 56 FF 00 
      91.  00:A49E                      	db  00000000b,#00,00000001b,#01,00001010b,00001010b,00000011b,#03,00001000b,#04,00001001b,#05,00001100b,#06,#FF,#00	;ultima fila
      91.  00:A49E  00 00 01 01 0A 0A 03 03 08 04 09 05 0C 06 FF 00 
      92.  00:A4AE                      	
      93.  00:A4AE                      habitaciones_nivel6:
      94.  00:A4AE                      	db  00000000b,#00,00000001b,#01,00000010b,#02,00000011b,#03,00001000b,#04,00001001b,#05,00001100b,#06,#FF,#00 ;primera fila
      94.  00:A4AE  00 00 01 01 02 02 03 03 08 04 09 05 0C 06 FF 00 
      95.  00:A4BE                      	db  #17,#10,#11,#11,#12,#12,#13,#13,#14,#14,#15,#15,#16,#16,#FF,#00
      95.  00:A4BE  17 10 11 11 12 12 13 13 14 14 15 15 16 16 FF 00 
      96.  00:A4CE                      	db  #20,#20,#21,#21,#22,#22,#23,#23,#24,#24,#25,#25,#26,#26,#FF,#00
      96.  00:A4CE  20 20 21 21 22 22 23 23 24 24 25 25 26 26 FF 00 
      97.  00:A4DE                      	db  #30,#30,#31,#31,#32,#32,#33,#33,#34,#34,#35,#35,#36,#36,#FF,#00
      97.  00:A4DE  30 30 31 31 32 32 33 33 34 34 35 35 36 36 FF 00 
      98.  00:A4EE                      	db  00000000b,#00,00000001b,#01,00001111b,#02,00000011b,#03,00001000b,#04,00001001b,#05,00001100b,#06,#FF,#00
      98.  00:A4EE  00 00 01 01 0F 02 03 03 08 04 09 05 0C 06 FF 00 
      99.  00:A4FE                      	db  #50,#50,#51,#51,#52,#52,#53,#53,#54,#54,#55,#55,#56,#56,#FF,#00
      99.  00:A4FE  50 50 51 51 52 52 53 53 54 54 55 55 56 56 FF 00 
     100.  00:A50E                      	db  00000000b,#00,00000001b,10000000b,00001111b,#02,00000011b,#03,00001000b,#04,00001001b,#05,00001100b,#06,#FF,#00	;ultima fila
     100.  00:A50E  00 00 01 80 0F 02 03 03 08 04 09 05 0C 06 FF 00 
     101.  00:A51E                      
     102.  00:A51E                      
     103.  00:A51E                      
     145   00:A51E                      	
     146   00:A51E                      	include "variables.asm"
       1.  00:A51E                      ;;=====================================================
       2.  00:A51E                      ;;DEFINICIÓN DE VARIABLES
       3.  00:A51E                      ;;=====================================================
       4.  00:A51E                      
       5.  00:A51E                      ;Colores base de la pantalla
       6.  00:A51E                      color_base:
       7.  00:A51E  01 01 01            			DB		COLNEGRO,COLNEGRO,COLNEGRO	
       8.  00:A521                      ;colores de pantalla cuando se tira bomba
       9.  00:A521                      color_bomba1:
      10.  00:A521  08 08 08            			DB		COLROJO,COLROJO,COLROJO
      11.  00:A524                      color_bomba2:
      12.  00:A524  06 06 06            			DB		COLROJOOSC,COLROJOOSC,COLROJOOSC
      13.  00:A527                      
      14.  00:A527                      ;definicion de variable del prota usando la estructura del punto de mira
      15.  00:A527                      prota:		ESTRUCTURA_PUNTOMIRA
      15.  00:A527  64 64 00 00 00 05 00 00 00 00 00 00 00 00 00 00 
      16.  00:A537                      ;variables globales del prota
      17.  00:A537                      prota_nivel:			;nivel del castillo donde está 0-6
      18.  00:A537  00                  			DB		0
      19.  00:A538                      prota_vidas:
      20.  00:A538  00                  			DB		0
      21.  00:A539                      prota_reliquias:
      22.  00:A539  03                  			DB		3
      23.  00:A53A                      prota_pos_mapx:
      24.  00:A53A  00                  			DB		0	;pos columna
      25.  00:A53B                      prota_pos_mapy:
      26.  00:A53B  00                  			DB		0	;pos fila
      27.  00:A53C                      prota_energia:
      28.  00:A53C  FA                  			DB		250
      29.  00:A53D                      
      30.  00:A53D                      ;array para pintar de golpe el marcador de vidas
      31.  00:A53D                      array_aux_vidas: 		
      32.  00:A53D                      			DB		0,0,0,0,0,0,0,0
      32.  00:A53D  00 00 00 00 00 00 00 00 
      33.  00:A545                      
      34.  00:A545                      ;array para pintar de golpe el marcador de reliquias
      35.  00:A545                      array_aux_reliquias:	
      36.  00:A545                      			DB		0,0,0,0,0,0,0,0
      36.  00:A545  00 00 00 00 00 00 00 00 
      37.  00:A54D                      
      38.  00:A54D                      array_aux_energia:					;array para pintar de golpe el marcador de energía
      39.  00:A54D                      			DB		16,0,0,0,0,0,0 	;el 16 primero es porque siempre estará pintado el cuadro primero rojo
      39.  00:A54D  10 00 00 00 00 00 00 
      40.  00:A554                      ultimo_pos_array_aux_energia:
      41.  00:A554  00                  			DB		0				;el array completo es de 8 pero para posicionar sin niecesidad de cálculos  etiqueto este aparte
      42.  00:A555                      			
      43.  00:A555                      array_aux_mapa_limpiar:	;es por facilitar el reseteo del mapa (pinto 7 lineas en negro con bios) la otra opción es más larga en código y complicada aunque más rápida
      44.  00:A555                      			DB		0,0,0,0,0,0,0
      44.  00:A555  00 00 00 00 00 00 00 
      45.  00:A55C                      elemento_pintar_mapa:
      46.  00:A55C  00                  			DB		0	;TILEPROTAM = 19, ;TILEGRISM = 9
      47.  00:A55D                      			
      48.  00:A55D                      ;; nota importante: cada vez que se cambie de nivel se actualizará el contenido
      49.  00:A55D                      ;; arrays con mapa de tiles de las puertas
      50.  00:A55D                      array_puerta_arriba:
      51.  00:A55D  03 01 01 03         array_puerta_arriba1:		DB	3,1,1,3
      52.  00:A561  01 01 01 01         array_puerta_arriba2:		DB	1,1,1,1
      53.  00:A565  01 01 01 01         array_puerta_arriba3:		DB	1,1,1,1
      54.  00:A569  01 01 01 01         array_puerta_arriba4:		DB	1,1,1,1
      55.  00:A56D  01 01 01 01         array_puerta_arriba5:		DB	1,1,1,1
      56.  00:A571                      
      57.  00:A571                      array_puerta_derecha:
      58.  00:A571  01 03 03            array_puerta_derecha1:		DB	1,3,3
      59.  00:A574  01 01 03            array_puerta_derecha2:		DB	1,1,3
      60.  00:A577  01 01 01            array_puerta_derecha3:		DB	1,1,1
      61.  00:A57A  01 01 01            array_puerta_derecha4:		DB	1,1,1
      62.  00:A57D  01 01 01            array_puerta_derecha5:		DB	1,1,1
      63.  00:A580  02 01 01            array_puerta_derecha6:		DB	2,1,1
      64.  00:A583  04 02 01            array_puerta_derecha7:		DB	4,2,1
      65.  00:A586                      	
      66.  00:A586  01 01 01 01         array_puerta_abajo:			DB	1,1,1,1
      67.  00:A58A                      
      68.  00:A58A                      array_puerta_izquierda:
      69.  00:A58A  03 03 01            array_puerta_izquierda1:	DB	3,3,1
      70.  00:A58D  03 01 01            array_puerta_izquierda2:	DB	3,1,1
      71.  00:A590  01 01 01            array_puerta_izquierda3:	DB	1,1,1
      72.  00:A593  01 01 01            array_puerta_izquierda4:	DB	1,1,1
      73.  00:A596  01 01 01            array_puerta_izquierda5:	DB	1,1,1
      74.  00:A599  01 01 02            array_puerta_izquierda6:	DB	1,1,2
      75.  00:A59C  01 02 04            array_puerta_izquierda7:	DB	1,2,4
      76.  00:A59F                      
      77.  00:A59F                      ;array con posiciones pseudoaleatorias de ayudas y extras (qué valor se escogerá con R 0-127 + and 00001111)
      78.  00:A59F                      ;+256 porque aparecerán todas en el banco1
      79.  00:A59F                      pos_ayudas:					DB	0,4,18,23,45,69,73,82,90,152,171,180,190,192,198,208
      79.  00:A59F  00 04 12 17 2D 45 49 52 5A 98 AB B4 BE C0 C6 D0 
      80.  00:A5AF                      
      81.  00:A5AF                      ;array de ayudas
      82.  00:A5AF                      array_ayudas:
      83.  00:A5AF  C8 CA               array_oracionon:			DB	200,202
      84.  00:A5B1  CA CB               array_oracionon1:			DB	202,203
      85.  00:A5B3  CC CE               array_oracionoff:			DB	204,206
      86.  00:A5B5  CD CF               array_oracionoff1:			DB	205,207
      87.  00:A5B7  D0 D2               array_cruzon:				DB	208,210
      88.  00:A5B9  D1 D3               array_cruzon1:				DB	209,211
      89.  00:A5BB  D4 D6               array_cruzoff:				DB	212,214
      90.  00:A5BD  D5 D7               array_cruzoff1:				DB	213,215
      91.  00:A5BF  D8 DA               array_aguaon:				DB	216,218
      92.  00:A5C1  D9 DB               array_aguaon1:				DB	217,219
      93.  00:A5C3  DC DE               array_aguaoff:				DB	220,222
      94.  00:A5C5  DD DF               array_aguaoff1:				DB	221,223
      95.  00:A5C7  E0 E2               array_armaduraon:			DB	224,226
      96.  00:A5C9  E1 E3               array_armaduraon1:			DB	225,227
      97.  00:A5CB  E4 E6               array_armaduraoff:			DB	228,230
      98.  00:A5CD  E5 E7               array_armaduraoff1:			DB	229,231
      99.  00:A5CF  E8 EA               array_plantaon:				DB	232,234
     100.  00:A5D1  E9 EB               array_plantaon1:			DB	233,235
     101.  00:A5D3  EC EE               array_plantaoff:			DB	236,238
     102.  00:A5D5  ED EF               array_plantaoff1:			DB	237,239
     103.  00:A5D7  F0 F2               array_extraon:				DB	240,242
     104.  00:A5D9  F1 F3               array_extraon1:				DB	241,243
     105.  00:A5DB  F4 F6               array_extraoff:				DB	244,246
     106.  00:A5DD  F5 F7               array_extraoff1:			DB	245,247
     107.  00:A5DF  F8 FA               array_ballestaon:			DB	248,250
     108.  00:A5E1  F9 FB               array_ballestaon1:			DB	249,251
     109.  00:A5E3  FC FE               array_ballestaoff:			DB	252,254
     110.  00:A5E5  FD FF               array_ballestaoff1:			DB	253,255
     111.  00:A5E7                      
     112.  00:A5E7  00 (56)             lista_ayudas:				DS	7 * ESTRUCTURA_AYUDA ; 7 ayudas posibles
     113.  00:A61F                      
     114.  00:A61F                      
     115.  00:A61F                      ;array de 4 bytes x 32 sprites posibles en pantalla que sobreescribirá la tabla de sprites actualizando VRAM
     116.  00:A61F                      array_sprites:
     117.  00:A61F  00 (8)              array_sprites_pm:				DS	2 * 4
     118.  00:A627  00 (120)            array_sprites_enem:				DS	30 * 4
     119.  00:A69F  00 (140)            lista_enemigos:					DS	10 * ESTRUCTURA_ENEMIGO
     120.  00:A72B                      ; puntero al array a pintar en VRAM
     121.  00:A72B  00 00               puntero_array_atrib_array_VRAM: DW	0	;ARRAYSPTRIES + 8
     122.  00:A72D                      
     123.  00:A72D                      
     124.  00:A72D                      
     125.  00:A72D                      
     126.  00:A72D                      ;;variables asocidas a la función pinta_array2
     127.  00:A72D                      ;; por de pronto la dejo aquí
     128.  00:A72D  00 00               wordaux1:		DW	0	;almacena la posición en el tilemap 0 al 675
     129.  00:A72F  00 00               wordaux2:		DW	0	;almacena puntero a array de tiles (posiciones en realidad) a pintar (posiciones repetidas en los 3 bancos)
     130.  00:A731  00                  byteaux1:		DB	0	;nº filas Registro D
     131.  00:A732  00                  byteaux2:		DB	0	;nº columnas Registro E
     147   00:A733                      	
     148   00:A733                      ;;=====================================================
     149   00:A733                      ;;DEFINICIÓN DE PANTALLAS
     150   00:A733                      ;;=====================================================		
     151   00:A733                      	include "pantallas.asm"
       1.  00:A733                      ;;=====================================================
       2.  00:A733                      ;;DEFINICIÓN DE PANTALLAS
       3.  00:A733                      ;;=====================================================		
       4.  00:A733                      
       5.  00:A733                      ; bancos 1 y 2 y de pantalla 1 
       6.  00:A733                      ; se usa un banco común (en este caso el banco 1)
       7.  00:A733                      ; el mapa afecta al banco 1 y 2
       8.  00:A733  (01B5)              tiles_patrones_nivel0:	incbin "pantallas/nivel0.bank1.til.bin.chr.plet5"
       9.  00:A8E8  (0047)              tiles_color_nivel0:		incbin "pantallas/nivel0.bank1.til.bin.clr.plet5"
      10.  00:A92F  (0035)              tiles_mapa_nivel0:		incbin "pantallas/nivel0.bank01.map.bin.plet5"
      11.  00:A964                      
      12.  00:A964  (01B5)              tiles_patrones_nivel1:	incbin "pantallas/nivel1.bank1.til.bin.chr.plet5"
      13.  00:AB19  (0047)              tiles_color_nivel1:		incbin "pantallas/nivel1.bank1.til.bin.clr.plet5"
      14.  00:AB60  (0035)              tiles_mapa_nivel1:		incbin "pantallas/nivel1.bank01.map.bin.plet5"
      15.  00:AB95                      
      16.  00:AB95  (01B5)              tiles_patrones_nivel2:	incbin "pantallas/nivel2.bank1.til.bin.chr.plet5"
      17.  00:AD4A  (0047)              tiles_color_nivel2:		incbin "pantallas/nivel2.bank1.til.bin.clr.plet5"
      18.  00:AD91  (0035)              tiles_mapa_nivel2:		incbin "pantallas/nivel2.bank01.map.bin.plet5"
      19.  00:ADC6                      
      20.  00:ADC6  (01B5)              tiles_patrones_nivel3:	incbin "pantallas/nivel3.bank1.til.bin.chr.plet5"
      21.  00:AF7B  (0047)              tiles_color_nivel3:		incbin "pantallas/nivel3.bank1.til.bin.clr.plet5"
      22.  00:AFC2  (0035)              tiles_mapa_nivel3:		incbin "pantallas/nivel3.bank01.map.bin.plet5"
      23.  00:AFF7                      
      24.  00:AFF7  (01B5)              tiles_patrones_nivel4:	incbin "pantallas/nivel4.bank1.til.bin.chr.plet5"
      25.  00:B1AC  (0047)              tiles_color_nivel4:		incbin "pantallas/nivel4.bank1.til.bin.clr.plet5"
      26.  00:B1F3  (0035)              tiles_mapa_nivel4:		incbin "pantallas/nivel4.bank01.map.bin.plet5"
      27.  00:B228                      
      28.  00:B228  (01B5)              tiles_patrones_nivel5:	incbin "pantallas/nivel5.bank1.til.bin.chr.plet5"
      29.  00:B3DD  (0047)              tiles_color_nivel5:		incbin "pantallas/nivel5.bank1.til.bin.clr.plet5"
      30.  00:B424  (0035)              tiles_mapa_nivel5:		incbin "pantallas/nivel5.bank01.map.bin.plet5"
      31.  00:B459                      
      32.  00:B459  (01B5)              tiles_patrones_nivel6:	incbin "pantallas/nivel6.bank1.til.bin.chr.plet5"
      33.  00:B60E  (0047)              tiles_color_nivel6:		incbin "pantallas/nivel6.bank1.til.bin.clr.plet5"
      34.  00:B655  (0035)              tiles_mapa_nivel6:		incbin "pantallas/nivel6.bank01.map.bin.plet5"
      35.  00:B68A                      
      36.  00:B68A                      ; 3º banco que es la parte de puntos, vidas, mapas, etc... es común
      37.  00:B68A  (014C)              tiles_patrones_marcador:	incbin "pantallas/marcador.til.bin.chr.plet5"
      38.  00:B7D6  (0035)              tiles_color_marcador:		incbin "pantallas/marcador.til.bin.clr.plet5"
      39.  00:B80B  (0062)              tiles_mapa_marcador:		incbin "pantallas/marcador.map.bin.plet5"
      40.  00:B86D                      
      41.  00:B86D                      ;NOTA: FALTARÍAN PANTALLAS ESPECIALES (POR DEFINIR)
     152   00:B86D                      
     153   00:B86D                      
     154   00:B86D                      	
     155   00:B86D                      END:

    LABELS
-------------------------------------------------
00:000000D8 X GTTRIG
00:000000D5 X GTSTCK
00:0000F3DB   CLIKSW
00:0000013E X RDVDP
00:00000047   WRTVDP
00:0000005C   LDIRVM
00:00000059 X LDIRMV
00:0000005F   CHGMOD
00:00000041 X DISSCR
00:00000044 X ENASCR
00:00000062   CHGCLR
00:0000F3E9   FORCLR
00:0000F3EA   BAKCLR
00:0000F3EB   BDRCLR
00:000000C3   CLS
00:0000F3DF X RG0SAV
00:0000F3E0   RG1SAV
00:0000F3E1 X RG2SAV
00:0000F3E2 X RG3SAV
00:0000F3E3 X RG4SAV
00:0000F3E4 X RG5SAV
00:0000F3E5 X RG6SAV
00:0000F3E6 X RG7SAV
00:0000F3E7 X STATFL
00:00000099   REGEST
00:00000098   REGESCVDP
00:000000A0   PSG_A
00:000000A1   PSG_W
00:000000A2   PSG_R
00:00000000   CHRTBL
00:00001800   TILMAP
00:00001900 X TILMAPBANK1
00:00001B00   SPRART
00:00002000   CLRTBL
00:00003800   SPRTBL
00:00000001 X SI
00:00000000 X NO
00:00000004   LIMCADENCIA
00:00000000 X COLTRASP
00:00000001   COLNEGRO
00:00000002 X COLVERDE
00:00000003 X COLVERCLA
00:00000004 X COLAZULOSC
00:00000005 X COLAZULLA
00:00000006   COLROJOOSC
00:00000007 X COLCYAN
00:00000008   COLROJO
00:00000009 X COLROJOCLA
00:0000000A X COLAMAROSC
00:0000000B X COLAMARCLA
00:0000000C X COLVERDOSC
00:0000000D X COLMAGENTA
00:0000000E X COLGRIS
00:0000000F   COLBLANCO
00:000002F8   POSMAPLIN1
00:000002D8   POSMAPLIN2
00:000002B8   POSMAPLIN3
00:00000298   POSMAPLIN4
00:00000278   POSMAPLIN5
00:00000258   POSMAPLIN6
00:00000238   POSMAPLIN7
00:0000000D   POSCARAMAP
00:00000248   POSVIDAS
00:00000011   POSRELIMAP
00:000002C8   POSRELIQ
00:00000288   POSENERG
00:000002B4   POSNIVEL
00:00000238   POSMAPA
00:000001EE   POSPUERABAJ
00:0000008E   POSPUERARRI
00:000000FC   POSPUERDERE
00:000000E1   POSPUERIZQU
00:00000000   ORACIONON
00:00000004   ORACIONOFF
00:00000008   CRUZON
00:0000000C   CRUZOFF
00:00000010   AGUAON
00:00000014   AGUAOFF
00:00000018   ARMADON
00:0000001C   ARMADOFF
00:00000020   PLANTAON
00:00000024   PLANTAOFF
00:00000028   VIDAEXTON
00:0000002C   VIDAEXTOFF
00:00000030   BALLESON
00:00000034   BALLESOFF
00:00000000   INACTIVO
00:00000013   TILEPROTAM
00:00000009   TILEGRISM
00:00000010   TILEMAPROJO
00:0000000F   TILEMAPAMAR
00:0000000E   TILEMAPVERD
00:00000008   NMAXVIDREL
00:00000007   NHABNIVEL
00:000000F8 X MAXENERGIA
00:000000D9   TILEENERG8
00:000000BA   TILEENERG7
00:0000009B   TILEENERG6
00:0000007C   TILEENERG5
00:0000005D   TILEENERG4
00:0000003E   TILEENERG3
00:0000001F   TILEENERG2
00:00000000   TILENEGRO
00:00000000 X LIMPANTIZQ
00:000000FF   LIMPANTDER
00:00000000 X LIMPANTARR
00:00000080   LIMPANTABA
00:00000006 X BASEMAPY
00:00000003 X BASEMAPX
00:0000FD9A X H.KEYI
00:0000FD9F   H.TIMI
00:0000F000   PT3_SETUP
00:0000F001   PT3_MODADDR
00:0000F003   PT3_CrPsPtr
00:0000F005   PT3_SAMPTRS
00:0000F007   PT3_OrnPtrs
00:0000F009   PT3_PDSP
00:0000F00B   PT3_CSP
00:0000F00D   PT3_PSP
00:0000F00F   PT3_PrNote
00:0000F010   PT3_PrSlide
00:0000F012   PT3_AdInPtA
00:0000F014   PT3_AdInPtB
00:0000F016   PT3_AdInPtC
00:0000F018   PT3_LPosPtr
00:0000F01A   PT3_PatsPtr
00:0000F01C   PT3_Delay
00:0000F01D   PT3_AddToEn
00:0000F01E   PT3_Env_Del
00:0000F01F   PT3_ESldAdd
00:0000F021   PT3_NTL3
00:0000F023   VARS
00:0000F023   ChanA
00:0000F040   ChanB
00:0000F05D   ChanC
00:0000F07A   DelyCnt
00:0000F07B   CurESld
00:0000F07D   CurEDel
00:0000F07E   Ns_Base_AddToNs
00:0000F07E   Ns_Base
00:0000F07F   AddToNs
00:0000F080   NT_
00:0000F140   AYREGS
00:0000F140   VT_
00:0000F14E   EnvBase
00:0000F150   VAR0END
00:0000F150   T1_
00:0000F150   T_NEW_1
00:0000F150   T_OLD_1
00:0000F168   T_OLD_2
00:0000F180   T_NEW_3
00:0000F180   T_OLD_3
00:0000F182   T_OLD_0
00:0000F182   T_NEW_0
00:0000F19A   T_NEW_2
00:0000F240   ayFX_MODE
00:0000F241   ayFX_BANK
00:0000F243   ayFX_PRIORITY
00:0000F244   ayFX_POINTER
00:0000F246   ayFX_TONE
00:0000F248   ayFX_NOISE
00:0000F249   ayFX_VOLUME
00:0000F24A   ayFX_CHANNEL
00:00008000   START
00:0000802C   loop_principal
00:00008039 X fin_programa_principal
00:00008039   inicializa_variables_pruebas
00:0000805B X fin_inicializa_variables_pruebas
00:0000805C   inicializa_niveles
00:0000806A   inicializa_niveles.bucle_borra_hab
00:0000806E X fin_iniciliza_niveles
00:0000806F   actualiza_marcador_vidas
00:00008074   loop_marcador_caras_negro
00:00008079 X fin_loop_marcador_caras_negro
00:00008082   loop_marcador_caras
00:00008087 X fin_loop_marcador_caras
00:00008087 X fin_actualiza_marcador_vidas
00:00008088   actualiza_buffer_reliquias
00:0000808E   loop_buffer_reliquias_negro
00:0000809B   loop_buffer_reliquias
00:000080A0 X fin_actualiza_buffer_reliquias
00:000080A1   localiza_info_habitacion
00:000080A4 X localiza_info_habitacion.situo_columna
00:000080AD X localiza_info_habitacion.situo_fila
00:000080B6   localiza_info_habitacion.loop_suma_fila
00:000080BE   localiza_info_habitacion.situo_nivel
00:000080CD   localiza_info_habitacion.loop_suma_nivel
00:000080D2   localiza_info_habitacion.actualiza_valiable_habitacion
00:000080DB X fin_localiza_info_habitacion
00:000080DC   inicializa_ayudas
00:00008173 X fin_inicializa_ayudas
00:00008174   actualiza_ayudas
00:00008179 X fin_actualiza_ayudas
00:0000817A   suma_A_BC
00:0000817F X fin_suma_A_BC
00:00008180   color_pantalla
00:00008191 X fin_color_pantalla
00:00008191   sub_preparapantalla
00:00008191 X elimina_clic
00:00008195 X fin_elimina_clic
00:00008195 X limpia_pantalla
00:00008199 X fin_limpia_pantalla
00:0000819F X screen2
00:000081A4 X sprites_16_16
00:000081B2 X fin_sub_preparapantalla
00:000081B2   pinta_pantalla_completa
00:000081B8 X fin_pinta_pantalla_completa
00:000081B9   pinta_parte_superior_pantalla
00:000081EA   pinta_parte_superior_pantalla.carga_nivel_0
00:00008205   pinta_parte_superior_pantalla.carga_nivel_1
00:00008220   pinta_parte_superior_pantalla.carga_nivel_2
00:0000823B   pinta_parte_superior_pantalla.carga_nivel_3
00:00008256   pinta_parte_superior_pantalla.carga_nivel_4
00:00008271   pinta_parte_superior_pantalla.carga_nivel_5
00:0000828C   pinta_parte_superior_pantalla.carga_nivel_6
00:000082A4   pinta_parte_superior_pantalla.fin_carga_niveles
00:000082D1 X fin_pinta_parte_superior_pantalla
00:000082D1   tiles_patrones
00:000082D3   tiles_colores
00:000082D5   tiles_mapa
00:000082D7   pinta_parte_inferior_pantalla
00:000082F2 X fin_pinta_parte_inferior_pantalla
00:000082F2   pinta_vidas
00:00008301 X fin_pinta_vidas
00:00008301   pinta_reliquias
00:00008310 X fin_pinta_reliquias
00:00008310   pinta_nivel
00:0000831C X fin_pinta_nivel
00:0000831C   pinta_tile_suelto
00:00008329 X fin_pinta_tile_suelto
00:0000832A   mira_pinta_energia
00:00008330 X pinta_ener
00:00008330 X pinta_ener_tile_8
00:0000833C   pinta_ener_tile_8_negro
00:0000833D   pinta_ener_tile_7
00:00008347   pinta_ener_tile_7_negro
00:00008348   pinta_ener_tile_6
00:00008352   pinta_ener_tile_6_negro
00:00008353   pinta_ener_tile_5
00:0000835D   pinta_ener_tile_5_negro
00:0000835E   pinta_ener_tile_4
00:00008368   pinta_ener_tile_4_negro
00:00008369   pinta_ener_tile_3
00:00008373   pinta_ener_tile_3_negro
00:00008374   pinta_ener_tile_2
00:0000837E   pinta_ener_tile_2_negro
00:0000837F   fin_mira_pinta_energia
00:00008381   pinta_energia
00:00008390 X fin_pinta_energia
00:00008390   borra_mapa
00:000083E6 X fin_borra_mapa
00:000083E7   pinta_puertas
00:00008404 X fin_pinta_puertas
00:00008405   pinta_puerta_aba
00:00008418 X fin_pinta_puerta_aba
00:00008418   pinta_puerta_arr
00:0000842B X fin_pinta_puerta_arr
00:0000842B   pinta_puerta_der
00:0000843E X fin_pinta_puerta_der
00:0000843E   pinta_puerta_izq
00:00008451 X fin_pinta_puerta_izq
00:00008451   posiciona_en_mapa
00:00008454 X posiciona_en_mapa.sumar_fila
00:0000847E X posiciona_en_mapa.fila_0
00:00008485   posiciona_en_mapa.fila_1
00:0000848C   posiciona_en_mapa.fila_2
00:00008493   posiciona_en_mapa.fila_3
00:0000849A   posiciona_en_mapa.fila_4
00:000084A1   posiciona_en_mapa.fila_5
00:000084A8 X posiciona_en_mapa.fila_6
00:000084A8   posiciona_en_mapa.sumar_columna
00:000084BE   pinta_pos_mapa_vacio
00:000084C0   fin_pinta_pos_mapa
00:000084C3 X fin_posiciona_en_mapa
00:000084C3   efecto_imagen_tira_reliquia
00:000084C6   efecto_imagen_tira_reliquia.parpadea_fondo
00:000084DD X fin_efecto_imagen_tira_reliquia
00:000084DD   pinta_obj_ayuda
00:0000850D X fin_pinta_obj_ayuda
00:0000850D   pinta_array
00:00008520   pinta_array.pa_pinta_fila
00:00008521   pinta_array.pa_pinta_columnas
00:00008544 X fin_pinta_array
00:00008545   pinta_array2
00:00008560   pinta_array2.pa_pinta_fila
00:00008561   pinta_array2.pa_pinta_columnas
00:00008584 X fin_pinta_array2
00:00008585   carga_patrones_sprites_nivel
00:0000858F X fin_carga_patrones_sprites_nivel
00:00008590   carga_patrones_nivel_comunes
00:0000859C X fin_carga_patrones_nivel_comunes
00:0000859C   carga_patrones_sprites_nivel1
00:0000859C X fin_carga_patrones_sprites
00:0000859D   render_sprites
00:000085A9 X fin_actualiza_array_sprites_vram
00:000085A9   vuelca_resultado_puntomira_array
00:000085CE X vuelca_resultado_puntomira_array.codigo_color_1
00:000085D7   vuelca_resultado_puntomira_array.codigo_color_2
00:000085E0 X fin_vuelca_resultado_puntomira_array
00:000085E0   check_player
00:000085FF X f
00:00008600   mueve_arriba
00:0000860B   mueve_arriba.no_decrementa_y
00:0000860C X fin_mueve_arriba
00:0000860D   mueve_derecha
00:0000861A   mueve_derecha.no_incrementa_x
00:0000861B X fin_mueve_derecha
00:0000861C   mueve_abajo
00:00008629   mueve_abajo.no_incrementa_y
00:0000862A X fin_mueve_abajo
00:0000862B   mueve_izquierda
00:00008636   mueve_izquierda.no_decrementa_x
00:00008637 X fin_mueve_izquierda
00:00008638   mira_disparo
00:00008638 X mira_disparo.mira_boton_pulsado1
00:00008645 X mira_disparo.no_efectua_disparo
00:00008650   mira_disparo.efectua_disparo
00:00008662   mira_disparo.fin_mira_disparo1
00:00008663   mira_disparo.mira_boton_pulsado2
00:0000867F X fin_mira_disparo
00:0000867F   update_controllers_status
00:000086B6   read_joy_0
00:000086CA   check_8th_keyboard_row
00:000086D8   check_4th_keyboard_row
00:000086E6 X inicializa_replayer_efectos_interrupciones
00:000086FF X fin_inicializa_replayer_efectos_interrupciones
00:00008700   subrutina_isr
00:00008709 X fin_subrutina_isr
00:00008709 X subrutinas_sonido
00:00000000   CHNPRM_PsInOr
00:00000001   CHNPRM_PsInSm
00:00000002   CHNPRM_CrAmSl
00:00000003   CHNPRM_CrNsSl
00:00000004   CHNPRM_CrEnSl
00:00000005   CHNPRM_TSlCnt
00:00000006   CHNPRM_CrTnSl
00:00000008   CHNPRM_TnAcc
00:0000000A   CHNPRM_COnOff
00:0000000B   CHNPRM_OnOffD
00:0000000C   CHNPRM_OffOnD
00:0000000D   CHNPRM_OrnPtr
00:0000000F   CHNPRM_SamPtr
00:00000011   CHNPRM_NNtSkp
00:00000012   CHNPRM_Note
00:00000013   CHNPRM_SlToNt
00:00000014   CHNPRM_Env_En
00:00000015   CHNPRM_Flags
00:00000016   CHNPRM_TnSlDl
00:00000017   CHNPRM_TSlStp
00:00000019   CHNPRM_TnDelt
00:0000001B   CHNPRM_NtSkCn
00:0000001C   CHNPRM_Volume
00:0000001D X CHNPRM_Size
00:00000000   AR_TonA
00:00000002   AR_TonB
00:00000004   AR_TonC
00:00000006   AR_Noise
00:00000007   AR_Mixer
00:00000008   AR_AmplA
00:00000009   AR_AmplB
00:0000000A   AR_AmplC
00:0000000B   AR_Env
00:0000000D   AR_EnvTp
00:00008709   CHECKLP
00:0000871A X PT3_MUTE
00:00008726   PT3_INIT
00:00008765   PT3_INIT.TP_0
00:00008771   PT3_INIT.TP_1
00:00008778   PT3_INIT.TP_2
00:000087E6   PT3_INIT.L1
00:000087F3   PT3_INIT.L2
00:000087F7 X PT3_INIT.L3
00:0000881E   PT3_INIT.CORR_1
00:0000882C   PT3_INIT.CORR_2
00:00008833   PT3_INIT.TC_EXIT
00:0000883E   PT3_INIT.INITV1
00:00008846   PT3_INIT.INITV2
00:0000885A   PT3_INIT.INITV3
00:0000885E   PD_OrSm
00:00008868   PD_SAM
00:00008869   PD_SAM_
00:0000887F   PD_VOL
00:00008888   PD_EOff
00:00008890   PD_SorE
00:0000889A   PD_ENV
00:0000889F   PD_ORN
00:000088A4   PD_ESAM
00:000088B1   PTDECOD
00:000088C0   PD_LOOP
00:000088C3   PD_LP2
00:000088F0   PD_NOIS
00:000088F5   PD_REL
00:000088FB   PD_NOTE
00:00008903   PD_RES
00:00008915   PD_FIN
00:0000891C   C_PORTM
00:00008967   C_PORTM.NOSIG
00:00008971   SET_STP
00:0000897D   C_GLISS
00:00008990   C_SMPOS
00:00008996   C_ORPOS
00:0000899C   C_VIBRT
00:000089B4   C_ENGLS
00:000089C6   C_DELAY
00:000089CC   SETENV
00:000089E7   C_NOP
00:000089E8   SETORN
00:00008A01   SPCCOMS
00:00008A21   CHREGS
00:00008A44   CHREGS.CH_ORPS
00:00008A4F   CHREGS.CH_NTP
00:00008A55   CHREGS.CH_NOK
00:00008A70   CHREGS.CH_SMPS
00:00008A86   CHREGS.CH_NOAC
00:00008ACD   CHREGS.CH_STPP
00:00008AE2   CHREGS.CH_AMP
00:00008AF4   CHREGS.CH_AMIN
00:00008AF9   CHREGS.CH_SVAM
00:00008AFC   CHREGS.CH_NOAM
00:00008B05   CHREGS.CH_APOS
00:00008B0B   CHREGS.CH_VOL
00:00008B16 X CHREGS.CH_ENV
00:00008B1D   CHREGS.CH_NOEN
00:00008B37   CHREGS.NO_ENAC
00:00008B3E   CHREGS.NO_ENSL
00:00008B4C   CHREGS.CH_MIX
00:00008B50   CHREGS.CH_EXIT
00:00008B6F   CHREGS.CH_ONDL
00:00008B73   PT3_PLAY
00:00008BA7   PT3_PLAY.PLNLP
00:00008BCE   PT3_PLAY.PL1A
00:00008BD9   PT3_PLAY.PL1B
00:00008BEE   PT3_PLAY.PL1C
00:00008C03   PT3_PLAY.PL1D
00:00008C09   PT3_PLAY.PL2
00:00008C6B   PT3_ROUT
00:00008C6C   ROUT_A0
00:00008C78   ROUT_A0.LOUT
00:00008C8C   NT_DATA
00:00008C9C   T_
00:00008C9C   TCOLD_0
00:00008CA8   TCNEW_1
00:00008CA8   TCOLD_1
00:00008CAA   TCOLD_2
00:00008CBC   TCNEW_3
00:00008CBD   TCOLD_3
00:00008CC6   TCNEW_0
00:00008CD1   TCNEW_2
00:00008CDC   EMPTYSAMORN
00:00008CE0   T_PACK
00:00000000 X AYFXRELATIVE
00:00008D15   ayFX_SETUP
00:00008D21   ayFX_END
00:00008D27   ayFX_INIT
00:00008D38   ayFX_INIT.CHECK_PRI
00:00008D59   ayFX_INIT.INIT_END
00:00008D5D   ayFX_PLAY
00:00008D71   ayFX_PLAY.TAKECB
00:00008D82   ayFX_PLAY.CHECK_NN
00:00008D8F   ayFX_PLAY.SETPOINTER
00:00008DA3   ayFX_PLAY.SETMASKS
00:00008DB1 X ayFX_PLAY.CHK1
00:00008DB3 X ayFX_PLAY.PLAY_C
00:00008DC0   ayFX_PLAY.CHK2
00:00008DC5 X ayFX_PLAY.PLAY_B
00:00008DD2   ayFX_PLAY.CHK3
00:00008DD5 X ayFX_PLAY.PLAY_A
00:00008DE2   ayFX_PLAY.SETMIXER
00:00008DF2   song
00:0000975A   sfx_bank
00:000097A5   accion_oracion
00:000097A5 X fin_accion_oracion
00:000097A6   accion_cruz
00:000097A6 X fin_accion_cruz
00:000097A7   accion_agua
00:000097A7 X fin_accion_agua
00:000097A8 X accion_armadura
00:000097A8 X fin_accion_armadura
00:000097A9   accion_planta
00:000097A9 X fin_accion_planta
00:000097AA   accion_vidaextra
00:000097AA X fin_accion_vidaextra
00:000097AB   accion_ballesta
00:000097AB X fin_accion_ballesta
00:000097AC   depack_VRAM
00:000097D9   literal
00:000097DE   loop
00:000097E7 X getlen
00:000097ED   lus
00:0000980A   lenok
00:00009817   mode7
00:0000981D   mode6
00:00009823   mode5
00:00009829   mode4
00:0000982F   mode3
00:00009835   mode2
00:00009845   offsok
00:00009850   offsok.loop
00:00009872   getbit
00:00009876   getbitexx
00:0000987C   Depack_out
00:0000987E   modes
00:00000000 X ESTRUCTURA_PUNTOMIRA.posx
00:00000001 X ESTRUCTURA_PUNTOMIRA.posy
00:00000002 X ESTRUCTURA_PUNTOMIRA.escena
00:00000003 X ESTRUCTURA_PUNTOMIRA.velocidad
00:00000004 X ESTRUCTURA_PUNTOMIRA.boton2_pressed
00:00000005 X ESTRUCTURA_PUNTOMIRA.cadencia
00:00000006 X ESTRUCTURA_PUNTOMIRA.pm_aux1
00:00000007 X ESTRUCTURA_PUNTOMIRA.pm_aux2
00:00000008 X ESTRUCTURA_PUNTOMIRA.pm_aux3
00:00000009 X ESTRUCTURA_PUNTOMIRA.pm_aux4
00:0000000A X ESTRUCTURA_PUNTOMIRA.pm_aux5
00:0000000B X ESTRUCTURA_PUNTOMIRA.pm_aux6
00:0000000C X ESTRUCTURA_PUNTOMIRA.pm_aux7
00:0000000D X ESTRUCTURA_PUNTOMIRA.pm_aux8
00:0000000E X ESTRUCTURA_PUNTOMIRA.pm_aux9
00:0000000F X ESTRUCTURA_PUNTOMIRA.pm_aux10
00:00000010 X ESTRUCTURA_PUNTOMIRA
00:00000000 X ESTRUCTURA_ENEMIGO.tipo
00:00000001 X ESTRUCTURA_ENEMIGO.posx
00:00000002 X ESTRUCTURA_ENEMIGO.posy
00:00000003 X ESTRUCTURA_ENEMIGO.color
00:00000004 X ESTRUCTURA_ENEMIGO.escena
00:00000005 X ESTRUCTURA_ENEMIGO.contador_siguiente_escena
00:00000006 X ESTRUCTURA_ENEMIGO.reset_contador
00:00000007 X ESTRUCTURA_ENEMIGO.dano
00:00000008 X ESTRUCTURA_ENEMIGO.energia
00:00000009 X ESTRUCTURA_ENEMIGO.ver_hor
00:0000000A X ESTRUCTURA_ENEMIGO.manejador_dibujo
00:0000000C X ESTRUCTURA_ENEMIGO.en_aux3
00:0000000D X ESTRUCTURA_ENEMIGO.en_aux4
00:0000000E   ESTRUCTURA_ENEMIGO
00:00000000 X ESTRUCTURA_AYUDA.activo
00:00000001 X ESTRUCTURA_AYUDA.tipo
00:00000002 X ESTRUCTURA_AYUDA.tipousado
00:00000003 X ESTRUCTURA_AYUDA.postile
00:00000004 X ESTRUCTURA_AYUDA.posx
00:00000005 X ESTRUCTURA_AYUDA.posy
00:00000006 X ESTRUCTURA_AYUDA.puntero_accion
00:00000008   ESTRUCTURA_AYUDA
00:0000988C X sprites_pantantalla
00:0000988C   sprites_comunes
00:0000988C X sprite_punto_mira_1
00:000098AC X sprite_punto_mira_2
00:000098CC X sprite_punto_mira_1_mejorado
00:000098EC X sprite_punto_mira_2_mejorado
00:0000990C X sprite_explosion_1
00:0000992C X sprite_explosion_2
00:0000994C   fin_sprites_comunes
00:0000994C X sprite_arana1_1
00:0000996C X sprite_arana1_2
00:0000998C X sprite_murcielago1_1
00:000099AC X sprite_murcielago1_2
00:000099CC X sprite_serpiente1_1
00:000099EC X sprite_serpiente1_2
00:00009A0C X sprite_serpiente2_1
00:00009A2C X sprite_serpiente2_2
00:00009A4C X sprite_zombi1_1_1
00:00009A6C X sprite_zombi1_2_1
00:00009A8C X sprite_zombi1_3_1
00:00009AAC X sprite_zombi1_4_1
00:00009ACC X sprite_zombi1_1_2
00:00009AEC X sprite_zombi1_2_2
00:00009B0C X sprite_zombi1_3_2
00:00009B2C X sprite_zombi1_4_2
00:00009B4C X sprite_zombi2_1_1
00:00009B6C X sprite_zombi2_2_1
00:00009B8C X sprite_zombi2_3_1
00:00009BAC X sprite_zombi2_4_1
00:00009BCC X sprite_zombi2_1_2
00:00009BEC X sprite_zombi2_2_2
00:00009C0C X sprite_zombi2_3_2
00:00009C2C X sprite_zombi2_4_2
00:00009C4C X sprite_caballero1_1_1
00:00009C6C X sprite_caballero1_2_1
00:00009C8C X sprite_caballero1_3_1
00:00009CAC X sprite_caballero1_4_1
00:00009CCC X sprite_caballero1_1_2
00:00009CEC X sprite_caballero1_2_2
00:00009D0C X sprite_caballero1_3_2
00:00009D2C X sprite_caballero1_4_2
00:00009D4C X sprite_caballero2_1_1
00:00009D6C X sprite_caballero2_2_1
00:00009D8C X sprite_caballero2_3_1
00:00009DAC X sprite_caballero2_4_1
00:00009DCC X sprite_caballero2_1_2
00:00009DEC X sprite_caballero2_2_2
00:00009E0C X sprite_caballero2_3_2
00:00009E2C X sprite_caballero2_4_2
00:00009E4C X sprite_llama1_1
00:00009E6C X sprite_llama2_1
00:00009E8C X sprite_llama1_2
00:00009EAC X sprite_llama2_2
00:00009ECC X sprite_fantasma1_1
00:00009EEC X sprite_fantasma2_1
00:00009F0C X sprite_fantasma1_2
00:00009F2C X sprite_fantasma2_2
00:00009F4C X sprite_magia1_1
00:00009F6C X sprite_magia2_1
00:00009F8C X sprite_magia1_2
00:00009FAC X sprite_magia2_2
00:00009FCC X sprite_beholder1_1
00:00009FEC X sprite_beholder2_1
00:0000A00C X sprite_beholder3_1
00:0000A02C X sprite_beholder4_1
00:0000A04C X sprite_beholder1_2
00:0000A06C X sprite_beholder2_2
00:0000A08C X sprite_beholder3_2
00:0000A0AC X sprite_beholder4_2
00:0000A0CC X sprite_vampiro1_1
00:0000A0EC X sprite_vampiro2_1
00:0000A10C X sprite_vampiro1_2
00:0000A12C X sprite_vampiro2_2
00:0000A14C X sprite_manoizq1
00:0000A16C X sprite_manoizq2
00:0000A18C X sprite_manoizq3
00:0000A1AC X sprite_manoder1
00:0000A1CC X sprite_manoder2
00:0000A1EC X sprite_manoder3
00:0000A20C   habitacion_actual
00:0000A20D   habitacion_extras
00:0000A20E   habitaciones_juego
00:0000A20E X habitaciones_nivel0
00:0000A27E X habitaciones_nivel1
00:0000A2EE X habitaciones_nivel2
00:0000A35E X habitaciones_nivel3
00:0000A3CE X habitaciones_nivel4
00:0000A43E X habitaciones_nivel5
00:0000A4AE X habitaciones_nivel6
00:0000A51E   color_base
00:0000A521   color_bomba1
00:0000A524   color_bomba2
00:0000A527 X prota
00:0000A527   prota.posx
00:0000A528   prota.posy
00:0000A529   prota.escena
00:0000A52A X prota.velocidad
00:0000A52B X prota.boton2_pressed
00:0000A52C   prota.cadencia
00:0000A52D X prota.pm_aux1
00:0000A52E X prota.pm_aux2
00:0000A52F X prota.pm_aux3
00:0000A530 X prota.pm_aux4
00:0000A531 X prota.pm_aux5
00:0000A532 X prota.pm_aux6
00:0000A533 X prota.pm_aux7
00:0000A534 X prota.pm_aux8
00:0000A535 X prota.pm_aux9
00:0000A536 X prota.pm_aux10
00:0000A537   prota_nivel
00:0000A538   prota_vidas
00:0000A539   prota_reliquias
00:0000A53A   prota_pos_mapx
00:0000A53B   prota_pos_mapy
00:0000A53C   prota_energia
00:0000A53D   array_aux_vidas
00:0000A545   array_aux_reliquias
00:0000A54D   array_aux_energia
00:0000A554   ultimo_pos_array_aux_energia
00:0000A555   array_aux_mapa_limpiar
00:0000A55C   elemento_pintar_mapa
00:0000A55D   array_puerta_arriba
00:0000A55D X array_puerta_arriba1
00:0000A561 X array_puerta_arriba2
00:0000A565 X array_puerta_arriba3
00:0000A569 X array_puerta_arriba4
00:0000A56D X array_puerta_arriba5
00:0000A571   array_puerta_derecha
00:0000A571 X array_puerta_derecha1
00:0000A574 X array_puerta_derecha2
00:0000A577 X array_puerta_derecha3
00:0000A57A X array_puerta_derecha4
00:0000A57D X array_puerta_derecha5
00:0000A580 X array_puerta_derecha6
00:0000A583 X array_puerta_derecha7
00:0000A586   array_puerta_abajo
00:0000A58A   array_puerta_izquierda
00:0000A58A X array_puerta_izquierda1
00:0000A58D X array_puerta_izquierda2
00:0000A590 X array_puerta_izquierda3
00:0000A593 X array_puerta_izquierda4
00:0000A596 X array_puerta_izquierda5
00:0000A599 X array_puerta_izquierda6
00:0000A59C X array_puerta_izquierda7
00:0000A59F   pos_ayudas
00:0000A5AF   array_ayudas
00:0000A5AF X array_oracionon
00:0000A5B1 X array_oracionon1
00:0000A5B3 X array_oracionoff
00:0000A5B5 X array_oracionoff1
00:0000A5B7 X array_cruzon
00:0000A5B9 X array_cruzon1
00:0000A5BB X array_cruzoff
00:0000A5BD X array_cruzoff1
00:0000A5BF X array_aguaon
00:0000A5C1 X array_aguaon1
00:0000A5C3 X array_aguaoff
00:0000A5C5 X array_aguaoff1
00:0000A5C7 X array_armaduraon
00:0000A5C9 X array_armaduraon1
00:0000A5CB X array_armaduraoff
00:0000A5CD X array_armaduraoff1
00:0000A5CF X array_plantaon
00:0000A5D1 X array_plantaon1
00:0000A5D3 X array_plantaoff
00:0000A5D5 X array_plantaoff1
00:0000A5D7 X array_extraon
00:0000A5D9 X array_extraon1
00:0000A5DB X array_extraoff
00:0000A5DD X array_extraoff1
00:0000A5DF X array_ballestaon
00:0000A5E1 X array_ballestaon1
00:0000A5E3 X array_ballestaoff
00:0000A5E5 X array_ballestaoff1
00:0000A5E7   lista_ayudas
00:0000A61F   array_sprites
00:0000A61F   array_sprites_pm
00:0000A627 X array_sprites_enem
00:0000A69F X lista_enemigos
00:0000A72B X puntero_array_atrib_array_VRAM
00:0000A72D   wordaux1
00:0000A72F   wordaux2
00:0000A731   byteaux1
00:0000A732   byteaux2
00:0000A733   tiles_patrones_nivel0
00:0000A8E8   tiles_color_nivel0
00:0000A92F   tiles_mapa_nivel0
00:0000A964   tiles_patrones_nivel1
00:0000AB19   tiles_color_nivel1
00:0000AB60   tiles_mapa_nivel1
00:0000AB95   tiles_patrones_nivel2
00:0000AD4A   tiles_color_nivel2
00:0000AD91   tiles_mapa_nivel2
00:0000ADC6   tiles_patrones_nivel3
00:0000AF7B   tiles_color_nivel3
00:0000AFC2   tiles_mapa_nivel3
00:0000AFF7   tiles_patrones_nivel4
00:0000B1AC   tiles_color_nivel4
00:0000B1F3   tiles_mapa_nivel4
00:0000B228   tiles_patrones_nivel5
00:0000B3DD   tiles_color_nivel5
00:0000B424   tiles_mapa_nivel5
00:0000B459   tiles_patrones_nivel6
00:0000B60E   tiles_color_nivel6
00:0000B655   tiles_mapa_nivel6
00:0000B68A   tiles_patrones_marcador
00:0000B7D6   tiles_color_marcador
00:0000B80B   tiles_mapa_marcador
00:0000B86D   END


 Output: t4.out
-------------------------------------------------

 Page: 00
  Org: 00008000  Size: *  Used: 00000000

    No output

 Output: t4.bin
-------------------------------------------------

 Page: 00
  Org: 00008000  Size: *  Used: 00003874

   Address   Length Align   Label
   00008000   14452         START
