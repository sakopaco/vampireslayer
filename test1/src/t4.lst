Sjasm Z80 Assembler v0.42c - www.xl2s.tk             [2021.12.01 - 20:47:47]

t4.asm
Errors: 0

       1   00:0000                      	OUTPUT	"t4.bin"
       2   00:8000                      	
       3   00:8000                      ;;=====================================================
       4   00:8000                      ;;DEFINICIÓN DE CONSTANTES
       5   00:8000                      ;;=====================================================	
       6   00:8000                      	include "constantes.asm"
       1.  00:8000                      ;;=====================================================
       2.  00:8000                      ;; FICHERO constantes.asm
       3.  00:8000                      ;;=====================================================
       4.  00:8000                      
       5.  00:8000                      ;;ETIQUETAS/CONSTANTES BIOS TECLADO
       6.  00:8000  (00:00D8)           GTTRIG		equ		#00D8	;Returns current trigger status
       7.  00:8000  (00:00D5)           GTSTCK		equ		#00D5	;Returns the joystick/cursors status
       8.  00:8000  (00:F3DB)           CLIKSW		equ		#F3DB	;deshabilita el sonido de clic cuando se pulsa una tecla
       9.  00:8000                      
      10.  00:8000                      ;;ETIQUETAS/CONSTANTES BIOS VDP
      11.  00:8000  (00:013E)           RDVDP		equ		#013E	;lee registro status VDP
      12.  00:8000  (00:0047)           WRTVDP		equ		#0047	;escribe registros del VDP
      13.  00:8000  (00:005C)           LDIRVM		equ		#005C	;RAM/ROM -> VRAM
      14.  00:8000  (00:0059)           LDIRMV		equ		#0059	;VRAM -> RAM
      15.  00:8000  (00:005F)           CHGMOD		equ		#005F	;cambia modo pantalla (screen mode)
      16.  00:8000  (00:0041)           DISSCR  	equ		#0041	;desactiva pantanlla
      17.  00:8000  (00:0044)           ENASCR  	equ		#0044	;activa pantalla
      18.  00:8000  (00:0062)           CHGCLR  	equ		#0062	;cambia color de pantalla (toca A y direcciones)
      19.  00:8000  (00:F3E9)           FORCLR		equ		#F3E9	;zona memoria color foreground
      20.  00:8000  (00:F3EA)           BAKCLR  	equ		#F3EA	;zona memoria color background
      21.  00:8000  (00:F3EB)           BDRCLR 		equ		#F3EB	;zona memoria bordercolor
      22.  00:8000  (00:00C3)           CLS			equ		#00C3	;limpia pantalla (necesita A=0)
      23.  00:8000                      
      24.  00:8000                      ;;ETIQUETAS/CONSTANTES REGISTROS VDP
      25.  00:8000  (00:F3DF)           RG0SAV		equ		#F3DF	;Mirror of VDP register 0 (Basic: VDP(0))
      26.  00:8000  (00:F3E0)           RG1SAV		equ		#F3E0	;Mirror of VDP register 1 (Basic: VDP(1))
      27.  00:8000  (00:F3E1)           RG2SAV		equ		#F3E1	;Mirror of VDP register 2 (Basic: VDP(2))
      28.  00:8000  (00:F3E2)           RG3SAV		equ		#F3E2	;Mirror of VDP register 3 (Basic: VDP(3))
      29.  00:8000  (00:F3E3)           RG4SAV		equ		#F3E3	;Mirror of VDP register 4 (Basic: VDP(4))
      30.  00:8000  (00:F3E4)           RG5SAV		equ		#F3E4	;Mirror of VDP register 5 (Basic: VDP(5))
      31.  00:8000  (00:F3E5)           RG6SAV		equ		#F3E5	;Mirror of VDP register 6 (Basic: VDP(6))
      32.  00:8000  (00:F3E6)           RG7SAV		equ		#F3E6	;Mirror of VDP register 7 (Basic: VDP(7))
      33.  00:8000  (00:F3E7)           STATFL		equ		#F3E7	;Mirror of VDP(8) status register (S#0)
      34.  00:8000                      
      35.  00:8000  (00:0099)           REGEST		equ		#0099	;registro de estado para escribir directamente en VRAM
      36.  00:8000  (00:0098)           REGESCVDP	equ		#0098	;registro donde escribir valor para VRAM
      37.  00:8000                      
      38.  00:8000                      ;;ETIQUETAS/CONSTANTES REGISTROS PSG (PARA JOYSTICK)
      39.  00:8000  (00:00A0)           PSG_A  equ  0a0h  ;reg address
      40.  00:8000  (00:00A1)           PSG_W  equ  0a1h  ;reg data WR
      41.  00:8000  (00:00A2)           PSG_R  equ  0a2h  ;reg data
      42.  00:8000                      
      43.  00:8000                      
      44.  00:8000                      ;;ETIQUETAS DE ZONAS DE MEMORIA DE LA VPD (MSX1)
      45.  00:8000  (00:0000)           CHRTBL		equ		#0000
      46.  00:8000  (00:1800)           TILMAP		equ		#1800
      47.  00:8000  (00:1B00)           SPRART		equ		#1B00
      48.  00:8000  (00:2000)           CLRTBL		equ		#2000
      49.  00:8000  (00:3800)           SPRTBL		equ		#3800
      50.  00:8000                      
      51.  00:8000                      
      52.  00:8000                      ;;ETIQUETAS ESTANDAR PARA DAR MÁS CLARIDAD AL CODIGO
      53.  00:8000  (00:0001)           SI			equ		1
      54.  00:8000  (00:0000)           NO			equ		0
      55.  00:8000  (00:0004)           LIMCADENCIA equ		4	;nº de veces que se ejecutará el disparo antes de ejecutar un disparo real (porque cuando se pulsa la tecl dispara 3 ó 4 veces de rápido que va)
      56.  00:8000                      ;hay que estudiar si 3 es un nº mejor
      57.  00:8000                      
      58.  00:8000                      
      59.  00:8000                      ;;PALETA DE COLORES DEL MSX
      60.  00:8000  (00:0000)           COLTRASP	equ		0
      61.  00:8000  (00:0001)           COLNEGRO	equ		1
      62.  00:8000  (00:0002)           COLVERDE	equ		2
      63.  00:8000  (00:0003)           COLVERCLA	equ		3
      64.  00:8000  (00:0004)           COLAZULOSC	equ		4
      65.  00:8000  (00:0005)           COLAZULLA	equ		5
      66.  00:8000  (00:0006)           COLROJOOSC	equ		6
      67.  00:8000  (00:0007)           COLCYAN		equ		7
      68.  00:8000  (00:0008)           COLROJO		equ		8
      69.  00:8000  (00:0009)           COLROJOCLA	equ		9
      70.  00:8000  (00:000A)           COLAMAROSC	equ		10
      71.  00:8000  (00:000B)           COLAMARCLA	equ		11
      72.  00:8000  (00:000C)           COLVERDOSC	equ		12
      73.  00:8000  (00:000D)           COLMAGENTA	equ		13
      74.  00:8000  (00:000E)           COLGRIS		equ		14
      75.  00:8000  (00:000F)           COLBLANCO	equ		15
      76.  00:8000                      
      77.  00:8000                      
      78.  00:8000                      ;;ETIQUETAS ESPECIFICAS PARA DAR MÁS CLARIDAD AL CODIGO (relacionadas con posiciones en mapa vdp)
      79.  00:8000  (00:02F8)           POSMAPLIN1  equ		#02F8
      80.  00:8000  (00:02D8)           POSMAPLIN2  equ		#02D8
      81.  00:8000  (00:02B8)           POSMAPLIN3  equ		#02B8
      82.  00:8000  (00:0298)           POSMAPLIN4  equ		#0298
      83.  00:8000  (00:0278)           POSMAPLIN5  equ		#0278
      84.  00:8000  (00:0258)           POSMAPLIN6  equ		#0258
      85.  00:8000  (00:0238)           POSMAPLIN7  equ		#0238
      86.  00:8000                      
      87.  00:8000  (00:000D)           POSCARAMAP	equ		#000D
      88.  00:8000  (00:0248)           POSVIDAS	equ		#0248
      89.  00:8000  (00:0011)           POSRELIMAP	equ		#0011
      90.  00:8000  (00:02C8)           POSRELIQ	equ		#02C8
      91.  00:8000  (00:0288)           POSENERG	equ		#0288
      92.  00:8000  (00:02B4)           POSNIVEL	equ		#02B4
      93.  00:8000  (00:0238)           POSMAPA		equ 	#0238
      94.  00:8000                      
      95.  00:8000  (00:01EE)           POSPUERABAJ equ		#01EE
      96.  00:8000  (00:008E)           POSPUERARRI equ		#008E
      97.  00:8000  (00:00FC)           POSPUERDERE equ		#00FC
      98.  00:8000  (00:00E1)           POSPUERIZQU equ		#00E1
      99.  00:8000  (00:006C)           POSESCALERA equ		#006C	;32 x 3 + columna
     100.  00:8000                      
     101.  00:8000                      ;;POSICIONES DE LAS AYUDAS EN PANTALLA BANCO 1
     102.  00:8000  (00:0146)           POSORACION	equ		#0146	;256 + 70
     103.  00:8000  (00:00A7)           POSCRUZ		equ		167
     104.  00:8000  (00:00AB)           POSAGUA		equ		171
     105.  00:8000  (00:00AF)           POSARMAD	equ		175
     106.  00:8000  (00:00B3)           POSPLANTA	equ		179
     107.  00:8000  (00:00B7)           POSVIDAEXT	equ		183
     108.  00:8000  (00:00BB)           POSBALLESTA	equ		187
     109.  00:8000                      
     110.  00:8000                      ;;POSICIONES DE LAS AYUDAS EN PANTALLA PIXEL CENTRAL
     111.  00:8000  (00:0070)           POSAYUDASY	equ		112	;quitar cuando ya no se use
     112.  00:8000                      
     113.  00:8000  (00:0038)           POSORACIONX	equ		56
     114.  00:8000  (00:0058)           POSORACIONY	equ		88
     115.  00:8000  (00:0040)           POSCRUZX	equ		64
     116.  00:8000  (00:0060)           POSAGUAX	equ		96
     117.  00:8000  (00:0080)           POSARMADX	equ		128
     118.  00:8000  (00:00A0)           POSPLANTAX	equ		160
     119.  00:8000  (00:00C0)           POSVIDAEXTX	equ		192
     120.  00:8000  (00:00E0)           POSBALLESTAX equ	224
     121.  00:8000                      
     122.  00:8000                      ;; TAMAÑO AYUDAS
     123.  00:8000  (00:0002)           ALTOAYUDA	equ		#02
     124.  00:8000  (00:0002)           ANCHOAYUDA	equ		#02
     125.  00:8000                      
     126.  00:8000                      ;; RADIOS DE DISPARO
     127.  00:8000  (00:0008)           RADIOAYUDAX equ		#08
     128.  00:8000  (00:0008)           RADIOAYUDAY equ		#08
     129.  00:8000                      
     130.  00:8000                      ;;POSICIÓN INICIAL DEL SPRITE DEL PUNTO DE MIRA
     131.  00:8000  (00:0078)           POSXPM		equ		120
     132.  00:8000  (00:006C)           POSYPM		equ		108
     133.  00:8000                      
     134.  00:8000                      ;;ESTADO ESTRUCTURA
     135.  00:8000  (00:0000)           INACTIVA	equ		0
     136.  00:8000  (00:0001)           ACTIVA		equ		1
     137.  00:8000  (00:0001)           HABTERMIN	equ		1
     138.  00:8000                      
     139.  00:8000                      ;;POSICIONES DE LAS ANTORCHAS
     140.  00:8000  (00:0088)           POSANTOR1	equ		136
     141.  00:8000  (00:0097)           POSANTOR2	equ		151
     142.  00:8000  (00:00C4)           MAPLLAMA1	equ		196
     143.  00:8000  (00:00C5)           MAPLLAMA2	equ		197
     144.  00:8000  (00:00FF)           RESETLLAMA	equ		255
     145.  00:8000                      
     146.  00:8000                      ;;POSICIONES DE LOS ESQUELETOS
     147.  00:8000  (00:0088)           POSESQUEL1	equ		136
     148.  00:8000  (00:0095)           POSESQUEL2	equ		149
     149.  00:8000  (00:00A9)           POSCALAVE1	equ		169
     150.  00:8000  (00:00B6)           POSCALAVE2	equ		182
     151.  00:8000  (00:0019)           RESETESQUEL	equ		25
     152.  00:8000  (00:0004)           RESETESCENAESQUEL 	equ	4	;hay 4 caras con las que el esqueleto cambia (se ha metido el 0 para facilitar código)
     153.  00:8000                      
     154.  00:8000                      ;;ETIQUETAS ESPECIFICAS PARA DAR MÁS CLARIDAD AL CODIGO (relacionadas con posiciones en en el banco de memoria)
     155.  00:8000  (00:0013)           TILEPROTAM  equ		19		;tile del prota para pintar en mapa
     156.  00:8000  (00:0009)           TILEGRISM	equ		9		;tile gris que representa vacio (por donde el prota va pasando)
     157.  00:8000  (00:0010)           TILEMAPROJO equ		16
     158.  00:8000  (00:000F)           TILEMAPAMAR equ		15
     159.  00:8000  (00:000E)           TILEMAPVERD equ		14
     160.  00:8000                      
     161.  00:8000                      
     162.  00:8000                      ;;ETIQUETAS ESPECIFICAS PARA DAR MÁS CLARIDAD AL CODIGO (generales)
     163.  00:8000  (00:0008)           NMAXVIDREL	equ		8		;el número máximo de vidas y de reliquias es de 8
     164.  00:8000  (00:0007)           NHABNIVEL	equ		7
     165.  00:8000  (00:00F8)           MAXENERGIA  equ		248
     166.  00:8000  (00:00D9)           TILEENERG8  equ		217
     167.  00:8000  (00:00BA)           TILEENERG7  equ		186
     168.  00:8000  (00:009B)           TILEENERG6  equ		155
     169.  00:8000  (00:007C)           TILEENERG5  equ		124
     170.  00:8000  (00:005D)           TILEENERG4  equ		93
     171.  00:8000  (00:003E)           TILEENERG3  equ		62
     172.  00:8000  (00:001F)           TILEENERG2  equ		31
     173.  00:8000  (00:0000)           TILENEGRO	equ		0
     174.  00:8000                      
     175.  00:8000                      ;limites
     176.  00:8000  (00:0000)           LIMPANTIZQ  equ		0
     177.  00:8000  (00:00FF)           LIMPANTDER  equ		255
     178.  00:8000  (00:0000)           LIMPANTARR  equ		0
     179.  00:8000  (00:0080)           LIMPANTABA  equ		128
     180.  00:8000                      
     181.  00:8000                      
     182.  00:8000                      ;matriz de 7x7 empieza en 0, y fila y x col, cuento desde esquina sup izq
     183.  00:8000  (00:0006)           BASEMAPY	equ		6
     184.  00:8000  (00:0003)           BASEMAPX	equ		3
     185.  00:8000                      
     186.  00:8000                      
     187.  00:8000                      
     188.  00:8000                      ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
     189.  00:8000                      ;; CONSTANTES PARA INTERRUPCIONES
     190.  00:8000                      ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
     191.  00:8000  (00:FD9A)           H.KEYI		equ     	#FD9A
     192.  00:8000  (00:FD9F)           H.TIMI	 	equ     	#FD9F
     193.  00:8000                      
     194.  00:8000                      
     195.  00:8000                      ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
     196.  00:8000                      ;; CONSTANTES PARA SONIDO 
     197.  00:8000                      ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
     198.  00:8000                      
     199.  00:8000  (F000)              	map		#f000
     200.  00:8000                      
     201.  00:8000                      ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;PT3 REPLAYER
     202.  00:8000  (00:F000)           PT3_SETUP:		#1	;set bit0 to 1, if you want to play without looping
     203.  00:8000                      					;bit7 is set each time, when loop point is passed
     204.  00:8000  (00:F001)           PT3_MODADDR:	#2
     205.  00:8000  (00:F003)           PT3_CrPsPtr:	#2
     206.  00:8000  (00:F005)           PT3_SAMPTRS:	#2
     207.  00:8000  (00:F007)           PT3_OrnPtrs:	#2
     208.  00:8000  (00:F009)           PT3_PDSP:		#2
     209.  00:8000  (00:F00B)           PT3_CSP:		#2
     210.  00:8000  (00:F00D)           PT3_PSP:		#2
     211.  00:8000  (00:F00F)           PT3_PrNote:		#1
     212.  00:8000  (00:F010)           PT3_PrSlide:	#2
     213.  00:8000  (00:F012)           PT3_AdInPtA:	#2
     214.  00:8000  (00:F014)           PT3_AdInPtB:	#2
     215.  00:8000  (00:F016)           PT3_AdInPtC:	#2
     216.  00:8000  (00:F018)           PT3_LPosPtr:	#2
     217.  00:8000  (00:F01A)           PT3_PatsPtr:	#2
     218.  00:8000  (00:F01C)           PT3_Delay:		#1
     219.  00:8000  (00:F01D)           PT3_AddToEn:	#1
     220.  00:8000  (00:F01E)           PT3_Env_Del:	#1
     221.  00:8000  (00:F01F)           PT3_ESldAdd:	#2
     222.  00:8000  (00:F021)           PT3_NTL3:		#2	; AND A / NOP (note table creator)
     223.  00:8000                      
     224.  00:8000  (00:F023)           VARS:			#0
     225.  00:8000                      
     226.  00:8000  (00:F023)           ChanA:			#29			;CHNPRM_Size
     227.  00:8000  (00:F040)           ChanB:			#29			;CHNPRM_Size
     228.  00:8000  (00:F05D)           ChanC:			#29			;CHNPRM_Size
     229.  00:8000                      
     230.  00:8000                      ;GlobalVars
     231.  00:8000  (00:F07A)           DelyCnt:		#1
     232.  00:8000  (00:F07B)           CurESld:		#2
     233.  00:8000  (00:F07D)           CurEDel:		#1
     234.  00:8000  (00:F07E)           Ns_Base_AddToNs:	#0
     235.  00:8000  (00:F07E)           Ns_Base:		#1
     236.  00:8000  (00:F07F)           AddToNs:		#1
     237.  00:8000                      
     238.  00:8000  (00:F080)           NT_:			#192	; Puntero a/tabla de frecuencias
     239.  00:8000                      
     240.  00:8000  (00:F140)           AYREGS:			#0
     241.  00:8000  (00:F140)           VT_:			#14
     242.  00:8000  (00:F14E)           EnvBase:		#2
     243.  00:8000  (00:F150)           VAR0END:		#0
     244.  00:8000                      
     245.  00:8000  (00:F150)           T1_:			#0		
     246.  00:8000  (00:F150)           T_NEW_1:		#0
     247.  00:8000  (00:F150)           T_OLD_1:		#24
     248.  00:8000  (00:F168)           T_OLD_2:		#24
     249.  00:8000  (00:F180)           T_NEW_3:		#0
     250.  00:8000  (00:F180)           T_OLD_3:		#2
     251.  00:8000  (00:F182)           T_OLD_0:		#0
     252.  00:8000  (00:F182)           T_NEW_0:		#24
     253.  00:8000  (00:F19A)           T_NEW_2:		#166
     254.  00:8000                      ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;PT3 REPLAYER END
     255.  00:8000                      
     256.  00:8000                      ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ayFX REPLAYER 
     257.  00:8000  (00:F240)           ayFX_MODE:		#1			; ayFX mode
     258.  00:8000  (00:F241)           ayFX_BANK:		#2			; Current ayFX Bank
     259.  00:8000  (00:F243)           ayFX_PRIORITY:	#1			; Current ayFX stream priotity
     260.  00:8000  (00:F244)           ayFX_POINTER:	#2			; Pointer to the current ayFX stream
     261.  00:8000  (00:F246)           ayFX_TONE:		#2			; Current tone of the ayFX stream
     262.  00:8000  (00:F248)           ayFX_NOISE:		#1			; Current noise of the ayFX stream
     263.  00:8000  (00:F249)           ayFX_VOLUME:	#1			; Current volume of the ayFX stream
     264.  00:8000  (00:F24A)           ayFX_CHANNEL:	#1			; PSG channel to play the ayFX stream
     265.  00:8000                      
     266.  00:8000                      	;IF (AYFXRELATIVE == 1 ) 
     267.  00:8000                      ;ayFX_VT:	ds	2			; ayFX relative volume table pointer
     268.  00:8000                      	;ENDIF
     269.  00:8000                      ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ayFX REPLAYER END
     270.  00:8000                      
     271.  00:8000                      
     272.  00:8000                      
     273.  00:8000                      
       7   00:8000                      
       8   00:8000                      ;;=====================================================
       9   00:8000                      ;;DEFINICIÓN DE CABECERA DE ARCHIVO BIN
      10   00:8000                      ;;=====================================================		
      11   00:8000                      	include "cabecerabin.asm"
       1.  00:8000                      ;;=====================================================
       2.  00:8000                      ;; FICHERO cabecera.asm
       3.  00:8000                      ;;=====================================================
       4.  00:8000                      
       5.  00:8000                      ;;CABECERA FICHERO BIN
       6.  00:8000  FE                  	DB	#FE
       7.  00:8001  00 80               	DW	START
       8.  00:8003  0B BE               	DW	END
       9.  00:8005  00 80               	DW	START
      10.  00:8007                      
      11.  00:8007                      ;;INICIO CÓDIGO PROGRAMA	
      12.  00:8007                      	ORG	#8000
      13.  00:8000                      	
      12   00:8000                      	
      13   00:8000                      START:	
      14   00:8000                      	;inicializa pantalla y entonrno
      15   00:8000  CD F2 82            	CALL	sub_preparapantalla			;screen 2,2 sin click al pulsar tecla y color 16,1,1
      16   00:8003                      	
      17   00:8003                      	;inicializa variables para parametrizar funciones y que lo que se muestre sea variable (nº vidas, mapa, puertas, pantalla, etc...)
      18   00:8003  CD B2 80            	CALL	inicializa_variables_pruebas
      19   00:8006                      	
      20   00:8006                      	;inicializa los niveles por partida
      21   00:8006  CD D8 80            	CALL	inicializa_niveles			;no es necesario parametrizarlo según el nivel del usuario ya que se cargan todos
      22   00:8009                      
      23   00:8009                      	;inicializa los valores de cada puerta excepto si están activas o no (eso ocurre cuando se matan todos los enemigos de la hab. y sólo a las puertas que se muestren)
      24   00:8009  CD 8A 88            	CALL	inicializa_puertas
      25   00:800C                      	
      26   00:800C                      	;inicializa las estructuras de forma particular según ayuda pero sin poner valores de posición
      27   00:800C  CD F3 9C            	CALL	inicializa_ayudas
      28   00:800F                      	
      29   00:800F                      	;inicializa las estructuras de las antorchas y esqueletos
      30   00:800F  CD 1A 86            	CALL	inicializa_antorchas
      31   00:8012  CD 3C 86            	CALL	inicializa_esqueletos
      32   00:8015                      	
      33   00:8015                      	;pinta la pantalla (la primera o algunas especiales se pintan completamente)
      34   00:8015  CD 13 83            	CALL	pinta_pantalla_completa
      35   00:8018                      	
      36   00:8018                      	;carga sprites en memoria (SE HA RETRASADO HASTA PARAMETRIZAR LA CARGA DE PANTALLAS)
      37   00:8018  CD 7E 8A            	CALL 	carga_patrones_sprites_nivel
      38   00:801B                      	
      39   00:801B                      	;funciones que modificarian el marcador si se produce un evento cuando toque y cuando se pinta la pantalla ya se mira
      40   00:801B                      	;una variable para ver si el array hay que actualizarlo en pantalla o no
      41   00:801B  CD 53 84            	CALL	pinta_vidas
      42   00:801E  CD 62 84            	CALL 	pinta_reliquias
      43   00:8021  CD 71 84            	CALL	pinta_nivel
      44   00:8024  CD F1 84            	CALL	borra_mapa
      45   00:8027  CD 24 89            	CALL	pinta_puertas
      46   00:802A                      
      47   00:802A  3E 13               	LD		 A, TILEPROTAM
      48   00:802C  32 08 AB            	LD		(elemento_pintar_mapa), A
      49   00:802F  CD 48 85            	CALL	posiciona_en_mapa		;se le pasa elemento_pintar_mapa (tile del prota) está el prota y prota.posx y posy
      50   00:8032                      		
      51   00:8032  CD 30 9D            	CALL	pinta_ayudas_habitacion
      52   00:8035                      	
      53   00:8035  CD 5E 86            	CALL	pinta_extra_fondo
      54   00:8038                      	
      55   00:8038                      	;esta función no va aquí sino en check colisiones pero se pone aquí para realizar pruebas
      56   00:8038  CD 86 82            	CALL	terminada_habitacion_recorrida ;para cuando se maten todos los enemigos de la habitación
      57   00:803B                      
      58   00:803B                      	;incializacion de replayer con interrupciones
      59   00:803B                      ;	CALL	inicializa_replayer_efectos_interrupciones
      60   00:803B                      
      61   00:803B                      loop_principal:
      62   00:803B  76                  	HALT							;espera VBLANK y sincroniza
      63   00:803C                      	
      64   00:803C  CD 8F 8A            	CALL	render_sprites			;actualiza array de sprites y los pinta en pantalla
      65   00:803F                      	
      66   00:803F  CD E2 84            	CALL	pinta_energia			;pinta la energia en pantalla
      67   00:8042                      	
      68   00:8042  CD D5 86            	CALL	actualiza_elementos_fondo
      69   00:8045                      
      70   00:8045  CD D2 8A            	CALL	check_player			;MIRA EL CONTROL Y APLICA LA LOGICA DE MOVIMIENTO DEL PROTAGONISTA
      71   00:8048                      	
      72   00:8048  C3 3B 80            	JP		loop_principal
      73   00:804B                      fin_programa_principal:
      74   00:804B                      	;no necesita RET
      75   00:804B                      
      76   00:804B                      
      77   00:804B                      ;;=====================================================
      78   00:804B                      ;;CHECK_COLISIONES_OBJETOS
      79   00:804B                      ;;=====================================================	
      80   00:804B                      ; función: 	revisa (con enemigos+ayudas o puertas según si la habitación ha sido recorrida o no) las variables para ver si se disparó sobre ellas
      81   00:804B                      ; entrada: 	is_habitacion_terminada
      82   00:804B                      ; salida: 	-
      83   00:804B                      ; toca:		HL,BC, DE
      84   00:804B                      check_colisiones_objetos:
      85   00:804B  F5                  	PUSH	AF
      86   00:804C                      	
      87   00:804C                      	;pantalla limpia?
      88   00:804C  3A B9 A7            	LD		 A, (is_habitacion_terminada)
      89   00:804F  F6 00               	OR		 0
      90   00:8051  CA 57 80            	JP		 Z, .habitacion_no_terminada
      91   00:8054                      	;SI 
      92   00:8054                      	;recorre puertas y sale
      93   00:8054  CD CD 89            		CALL	check_colisiones_puertas
      94   00:8057                      	;NO 
      95   00:8057                      .habitacion_no_terminada:
      96   00:8057                      	
      97   00:8057                      	;recorre ayudas
      98   00:8057  3A 9A 9C            	LD		 A, (examina_ayudas_en_pantalla)
      99   00:805A  F6 00               	OR		 0
     100   00:805C  CA 62 80            	JP		 Z, .habitacion_sin_ayudas
     101   00:805F                      	;SI
     102   00:805F                      	;mira si hay colisiones con la ayuda que haya puntero_ayuda_actual
     103   00:805F                      ;		CALL	check_colision_ayudas
     104   00:805F  CD CD 82            	CALL		test_OK
     105   00:8062                      	;NO
     106   00:8062                      .habitacion_sin_ayudas:
     107   00:8062                      	
     108   00:8062                      	;recorre enemigos
     109   00:8062                      
     110   00:8062                      fin_check_colisiones_objetos:	
     111   00:8062  F1                  	POP		AF
     112   00:8063  C9                  	RET
     113   00:8064                      
     114   00:8064                      
     115   00:8064                      ;;=====================================================
     116   00:8064                      ;;CHECK_COLISION_AYUDAS
     117   00:8064                      ;;=====================================================	
     118   00:8064                      ; función: 	revisa si ha habido disparo sobre la ayuda de pantalla
     119   00:8064                      ; entrada: 	puntero_ayuda_actual
     120   00:8064                      ; salida: 	-
     121   00:8064                      ; toca:		todo
     122   00:8064                      check_colision_ayudas:
     123   00:8064  DD 2A 9B 9C         	LD		IX, (puntero_ayuda_actual)
     124   00:8068  DD 7E 00            	LD		 A, (IX)
     125   00:806B  B7                  	OR		 A							;está activa la ayuda de pantalla?
     126   00:806C  CA 80 80            	JP		 Z, fin_check_colision_ayudas
     127   00:806F                      	;SI
     128   00:806F  CD 81 80            		CALL	check_colision_ayuda	;aquí ya es cosa de ver colisiones prota/puerta_izquierda
     129   00:8072                      		;recibe valor A
     130   00:8072  F6 00               		OR		 0						;hubo colisión?
     131   00:8074  C8                  		RET		 Z						;no hubo colisión por lo que sale
     132   00:8075                      		;hubo colisión
     133   00:8075                      		;EJECUTA ACCIÓN Y SALE DE LA RUTINA	
     134   00:8075  21 80 80            		LD		HL, fin_check_colision_ayudas ;se guarda dónde volver
     135   00:8078  E5                  		PUSH	HL
     136   00:8079  DD 6E 05            		LD		 L, (IX + ESTRUCTURA_AYUDA.accion)
     137   00:807C  DD 66 06            		LD		 H, (IX + ESTRUCTURA_AYUDA.accion + 1)
     138   00:807F  E9                  		JP		(HL)
     139   00:8080                      	;FINSI
     140   00:8080                      fin_check_colision_ayudas:
     141   00:8080  C9                  	RET
     142   00:8081                      	
     143   00:8081                      	
     144   00:8081                      
     145   00:8081                      
     146   00:8081                      ;;=====================================================
     147   00:8081                      ;;CHECK_COLISION_AYUDA
     148   00:8081                      ;;=====================================================	
     149   00:8081                      ; función: 	revisa la distancia con ayuda para ver si se disparó a la ayuda activa
     150   00:8081                      ; entrada: 	IX con el puntero a la puerta que se examina
     151   00:8081                      ; salida: 	A (0 no hay colisión con puerta / 1 sí la hay)
     152   00:8081                      ; toca:		HL,BC, DE
     153   00:8081                      check_colision_ayuda:
     154   00:8081                      .deteccioncolision_paso1:
     155   00:8081  FD 21 D3 AA         	LD		IY, prota	;IY punto de mira / IX puerta
     156   00:8085  FD 7E 01            	LD		 A, (IY + ESTRUCTURA_AYUDA.posx)
     157   00:8088  C6 08               	ADD		 8			;8-es fijo, offset del punto de mira ya que se mueve según la esquina superior izquierda y el centro del punto de mira está en el centro del sprite
     158   00:808A                      	
     159   00:808A                      	;ya tengo en A la coordenada X del centro del punto de mira					
     160   00:808A  DD 96 01            	SUB		(IX + ESTRUCTURA_AYUDA.posx)	;le resto el punto x en la puerta
     161   00:808D                      	
     162   00:808D  D2 92 80            	JP		NC, .deteccioncolision_paso2	;si no es negativo comparo con el radio
     163   00:8090                      
     164   00:8090  ED 44               	NEG										;si es negativo lo niego (valor absoluto)
     165   00:8092                      	
     166   00:8092                      .deteccioncolision_paso2:
     167   00:8092  DD BE 03            	CP		(IX + ESTRUCTURA_AYUDA.radiox)	;comparo con el radio X de la puerta
     168   00:8095                      	
     169   00:8095  DA 9A 80            	JP		 C, .deteccioncolision_paso3	;SI NC la distancia es >= por lo que sale y no es necesario verificar nada más
     170   00:8098                      	
     171   00:8098  AF                  	XOR		 A								;el resultado es falso y se guarda en A y ya no hay que seguir coprobando
     172   00:8099  C9                  	RET
     173   00:809A                      	
     174   00:809A                      .deteccioncolision_paso3:					;la distancia X es válida, comprobamos la distancia Y
     175   00:809A  FD 7E 02            	LD		 A, (IY + ESTRUCTURA_AYUDA.posy)
     176   00:809D  C6 08               	ADD		 8								;le sumo el offset del punto de mira (8 es fijo)
     177   00:809F                      
     178   00:809F                      	;ya tengo en A la coordenada Y del centro del punto de mira					
     179   00:809F  DD 96 02            	SUB		(IX + ESTRUCTURA_AYUDA.posy)	;le resto el punto y en la puerta
     180   00:80A2                      	
     181   00:80A2  D2 A7 80            	JP		NC, .deteccioncolision_paso4	;si no es negativo comparo con el radio
     182   00:80A5                      
     183   00:80A5  ED 44               	NEG										;si es negativo lo niego (valor absoluto)
     184   00:80A7                      
     185   00:80A7                      .deteccioncolision_paso4:
     186   00:80A7  DD BE 04            	CP		(IX + ESTRUCTURA_AYUDA.radioy)	;comparo con el radio Y de la puerta
     187   00:80AA                      
     188   00:80AA  DA AF 80            	JP		 C, .deteccioncolision_paso5	;SI NC la distancia es >= por lo que sale y no es necesario verificar nada más
     189   00:80AD                      	
     190   00:80AD  AF                  	XOR		 A								;el resultado es falso y se guarda en A un 0 y al ser la 2º comprobación salimos
     191   00:80AE  C9                  	RET
     192   00:80AF                      
     193   00:80AF                      .deteccioncolision_paso5:
     194   00:80AF  3E 01               	LD		 A, SI
     195   00:80B1                      fin_check_colision_ayuda:
     196   00:80B1  C9                  	RET
     197   00:80B2                      
     198   00:80B2                      
     199   00:80B2                      
     200   00:80B2                      
     201   00:80B2                      ;;*******************************************************************
     202   00:80B2                      ; sólo para hacer pruebas y pintar la parte de las vidas y demás
     203   00:80B2                      inicializa_variables_pruebas:
     204   00:80B2  3E 04               	LD		 A, 4
     205   00:80B4  32 E4 AA            	LD		(prota_vidas),A
     206   00:80B7                      
     207   00:80B7  3E 04               	LD		 A, 4
     208   00:80B9  32 E5 AA            	LD		(prota_reliquias), A
     209   00:80BC                      
     210   00:80BC  3E 64               	LD		 A, 100
     211   00:80BE  32 E8 AA            	LD		(prota_energia), A
     212   00:80C1                      
     213   00:80C1                      	;ubico al prota dentro del nivel para obtener luego las habitaciones y enemigos que aparecerán
     214   00:80C1                      	;será igual la posición inicial en todos los niveles
     215   00:80C1                      	
     216   00:80C1  3E 00               	LD		 A, 0				;los niveles (matrices) son 7 del 0 al 6
     217   00:80C3  32 E3 AA            	LD		(prota_nivel), A	;nivel empieza en 0 para usar las posiciones ascii
     218   00:80C6                      
     219   00:80C6  3E 00               	LD		 A, 0				;los subniveles (filas) son 7 del 0 al 6
     220   00:80C8  32 E7 AA            	LD		(prota_pos_mapy), A	;pos Y dentro del nivel (se empieza en 0)
     221   00:80CB                      
     222   00:80CB  3E 03               	LD		 A, 3				;columnas 7: del 0 al 6
     223   00:80CD  32 E6 AA            	LD		(prota_pos_mapx), A	;pos X dentro del nivel (se empieza en 0)
     224   00:80D0                      	
     225   00:80D0  AF                  	XOR		 A					;cadencia por defecto.. cuando se coja mejora en arma se puede variar
     226   00:80D1  32 D8 AA            	LD		(prota.cadencia), A
     227   00:80D4                      	
     228   00:80D4  32 B9 A7            	LD		(is_habitacion_terminada), A
     229   00:80D7                      fin_inicializa_variables_pruebas:
     230   00:80D7  C9                  	RET
     231   00:80D8                      ;;************************************************************************
     232   00:80D8                      
     233   00:80D8                      
     234   00:80D8                      
     235   00:80D8                      
     236   00:80D8                      
     237   00:80D8                      
     238   00:80D8                      
     239   00:80D8                      
     240   00:80D8                      
     241   00:80D8                      ;;=====================================================
     242   00:80D8                      ;;DEFINICIÓN DE SUBRUTINAS
     243   00:80D8                      ;;=====================================================
     244   00:80D8                      	include "subrutinas.asm"
       1.  00:80D8                      ;;=====================================================
       2.  00:80D8                      ;;DEFINICIÓN DE SUBRUTINAS
       3.  00:80D8                      ;;=====================================================	
       4.  00:80D8                      
       5.  00:80D8                      
       6.  00:80D8                      ;;=====================================================
       7.  00:80D8                      ;;INICIALIZA_NIVELES
       8.  00:80D8                      ;;=====================================================	
       9.  00:80D8                      ; función: 	pone el bit 4 de todas las habitaciones (byte habitacion_actual 0,2,4....) a 0
      10.  00:80D8                      ;			pone el bit 6 a 1 si hay ayudas y 0 si no hay ayudas
      11.  00:80D8                      ; entrada: 	habitaciones_plantilla
      12.  00:80D8                      ; salida: 	habitaciones_plantilla con los el bit 4 de los bites bytes impares a 0
      13.  00:80D8                      ; toca: 	habitaciones_plantilla, B
      14.  00:80D8                      
      15.  00:80D8                      
      16.  00:80D8                      ;ahora mismo se pondrá que se pueda navegar por cualquier habitación y sólo se controlarán las ayudas
      17.  00:80D8                      ;cuando ya haya enemigos se modificará para que el bit 4 a 0 todos los enemigos muerto y 1 hay enemigos vivos
      18.  00:80D8                      ;ayudas bit 6 1 hay ayudas y 0 no hay ayudas
      19.  00:80D8                      
      20.  00:80D8                      inicializa_niveles:
      21.  00:80D8  F5                  		PUSH		AF
      22.  00:80D9  C5                  		PUSH		BC
      23.  00:80DA  E5                  		PUSH		HL
      24.  00:80DB                      
      25.  00:80DB                      		;inicia habitación para decir si por esa habitación no se ha pasado
      26.  00:80DB                      		;el 4 bit a 0 indica que por esa habitacion no se ha pasado/no se han atado todos los enemigos
      27.  00:80DB                      		;el 6 bit a 1 indica que en esa habitación hay ayudas no utilizadas
      28.  00:80DB                      
      29.  00:80DB                      ;nivel 0 -----------------------------------------------------------------------
      30.  00:80DB  06 38               		LD			 B, 56	;la mitad de bytes del array de un nivel
      31.  00:80DD  21 BA A7            		LD 			HL, habitaciones_nivel0	;puntero al byte de la habitación
      32.  00:80E0  DD 21 BA A7         		LD			IX, habitaciones_nivel0
      33.  00:80E4  DD 23               		INC			IX						;el puntero IX apuntará siempre al byte de las ayudas
      34.  00:80E6                      .inicia_nivel_0:
      35.  00:80E6  4E                  		LD		 	 C, (HL)
      36.  00:80E7                      		;pongo habitación no terminada bit 4 habitación a 0
      37.  00:80E7  CB E1               		SET			 4, C	;***********************************************************************   ESTO HAY QUE PONERLO A 0 CUANDO HAYA ENEMIGOS
      38.  00:80E9                      		
      39.  00:80E9                      		;examino si hay ayudas en siguiente byte
      40.  00:80E9  DD 7E 00            		LD			 A, (IX)
      41.  00:80EC  E6 FE               		AND			11111110b
      42.  00:80EE  28 02               		JR			 Z, .no_tiene_ayuda_nivel0
      43.  00:80F0                      .si_tiene_ayuda_nivel0:
      44.  00:80F0  CB F1               		SET			 6, C
      45.  00:80F2                      .no_tiene_ayuda_nivel0:
      46.  00:80F2  CB B1               		RES			 6, C
      47.  00:80F4                      .fin_tiene_ayuda_nivel0:
      48.  00:80F4                      		
      49.  00:80F4  71                  		LD			(HL), C
      50.  00:80F5  23 23               [2]		INC			HL		;pongo puntero en la siguiente habitación (2 saltos)
      51.  00:80F7  DD 23 DD 23         [2]		INC			IX		;pongo puntero en la siguiente habitación (2 saltos)
      52.  00:80FB  10 E9               		DJNZ		.inicia_nivel_0
      53.  00:80FD                      
      54.  00:80FD                      ;nivel 1 -----------------------------------------------------------------------
      55.  00:80FD  06 38               		LD			 B, 56	;la mitad de bytes del array de un nivel
      56.  00:80FF  21 2A A8            		LD 			HL, habitaciones_nivel1	;puntero al byte de la habitación
      57.  00:8102  DD 21 2A A8         		LD			IX, habitaciones_nivel1
      58.  00:8106  DD 23               		INC			IX						;el puntero IX apuntará siempre al byte de las ayudas
      59.  00:8108                      .inicia_nivel_1:
      60.  00:8108  4E                  		LD		 	 C, (HL)
      61.  00:8109                      		;pongo habitación no terminada bit 4 habitación a 0
      62.  00:8109  CB E1               		SET			 4, C	;***********************************************************************   ESTO HAY QUE PONERLO A 0 CUANDO HAYA ENEMIGOS
      63.  00:810B                      		
      64.  00:810B                      		;examino si hay ayudas en siguiente byte
      65.  00:810B  DD 7E 00            		LD			 A, (IX)
      66.  00:810E  E6 7E               		AND			1111110b
      67.  00:8110  CA 18 81            		JP			 Z, .no_tiene_ayuda_nivel1
      68.  00:8113                      .si_tiene_ayuda_nivel1:
      69.  00:8113  CB F1               		SET			 6, C
      70.  00:8115  C3 1A 81            		JP			.fin_tiene_ayuda_nivel1
      71.  00:8118                      .no_tiene_ayuda_nivel1:
      72.  00:8118  CB B1               		RES			 6, C
      73.  00:811A                      .fin_tiene_ayuda_nivel1:
      74.  00:811A                      		
      75.  00:811A  71                  		LD			(HL), C
      76.  00:811B  23 23               [2]		INC			HL		;pongo puntero en la siguiente habitación (2 saltos)
      77.  00:811D  DD 23 DD 23         [2]		INC			IX		;pongo puntero en la siguiente habitación (2 saltos)
      78.  00:8121  10 E5               		DJNZ		.inicia_nivel_1
      79.  00:8123                      
      80.  00:8123                      ;nivel 2 -----------------------------------------------------------------------
      81.  00:8123  06 38               		LD			 B, 56	;la mitad de bytes del array de un nivel
      82.  00:8125  21 9A A8            		LD 			HL, habitaciones_nivel2	;puntero al byte de la habitación
      83.  00:8128  DD 21 9A A8         		LD			IX, habitaciones_nivel2
      84.  00:812C  DD 23               		INC			IX						;el puntero IX apuntará siempre al byte de las ayudas
      85.  00:812E                      .inicia_nivel_2:
      86.  00:812E  4E                  		LD		 	 C, (HL)
      87.  00:812F                      		;pongo habitación no terminada bit 4 habitación a 0
      88.  00:812F  CB E1               		SET			 4, C	;***********************************************************************   ESTO HAY QUE PONERLO A 0 CUANDO HAYA ENEMIGOS
      89.  00:8131                      		
      90.  00:8131                      		;examino si hay ayudas en siguiente byte
      91.  00:8131  DD 7E 00            		LD			 A, (IX)
      92.  00:8134  E6 7E               		AND			1111110b
      93.  00:8136  CA 3E 81            		JP			 Z, .no_tiene_ayuda_nivel2
      94.  00:8139                      .si_tiene_ayuda_nivel2:
      95.  00:8139  CB F1               		SET			 6, C
      96.  00:813B  C3 40 81            		JP			.fin_tiene_ayuda_nivel2
      97.  00:813E                      .no_tiene_ayuda_nivel2:
      98.  00:813E  CB B1               		RES			 6, C
      99.  00:8140                      .fin_tiene_ayuda_nivel2:
     100.  00:8140                      		
     101.  00:8140  71                  		LD			(HL), C
     102.  00:8141  23 23               [2]		INC			HL		;pongo puntero en la siguiente habitación (2 saltos)
     103.  00:8143  DD 23 DD 23         [2]		INC			IX		;pongo puntero en la siguiente habitación (2 saltos)
     104.  00:8147  10 E5               		DJNZ		.inicia_nivel_2
     105.  00:8149                      
     106.  00:8149                      ;nivel 3 -----------------------------------------------------------------------
     107.  00:8149  06 38               		LD			 B, 56	;la mitad de bytes del array de un nivel
     108.  00:814B  21 0A A9            		LD 			HL, habitaciones_nivel3	;puntero al byte de la habitación
     109.  00:814E  DD 21 0A A9         		LD			IX, habitaciones_nivel3
     110.  00:8152  DD 23               		INC			IX						;el puntero IX apuntará siempre al byte de las ayudas
     111.  00:8154                      .inicia_nivel_3:
     112.  00:8154  4E                  		LD		 	 C, (HL)
     113.  00:8155                      		;pongo habitación no terminada bit 4 habitación a 0
     114.  00:8155  CB E1               		SET			 4, C	;***********************************************************************   ESTO HAY QUE PONERLO A 0 CUANDO HAYA ENEMIGOS
     115.  00:8157                      		
     116.  00:8157                      		;examino si hay ayudas en siguiente byte
     117.  00:8157  DD 7E 00            		LD			 A, (IX)
     118.  00:815A  E6 7E               		AND			1111110b
     119.  00:815C  CA 64 81            		JP			 Z, .no_tiene_ayuda_nivel3
     120.  00:815F                      .si_tiene_ayuda_nivel3:
     121.  00:815F  CB F1               		SET			 6, C
     122.  00:8161  C3 66 81            		JP			.fin_tiene_ayuda_nivel3
     123.  00:8164                      .no_tiene_ayuda_nivel3:
     124.  00:8164  CB B1               		RES			 6, C
     125.  00:8166                      .fin_tiene_ayuda_nivel3:
     126.  00:8166                      		
     127.  00:8166  71                  		LD			(HL), C
     128.  00:8167  23 23               [2]		INC			HL		;pongo puntero en la siguiente habitación (2 saltos)
     129.  00:8169  DD 23 DD 23         [2]		INC			IX		;pongo puntero en la siguiente habitación (2 saltos)
     130.  00:816D  10 E5               		DJNZ		.inicia_nivel_3
     131.  00:816F                      
     132.  00:816F                      ;nivel 4 -----------------------------------------------------------------------
     133.  00:816F  06 38               		LD			 B, 56	;la mitad de bytes del array de un nivel
     134.  00:8171  21 7A A9            		LD 			HL, habitaciones_nivel4	;puntero al byte de la habitación
     135.  00:8174  DD 21 7A A9         		LD			IX, habitaciones_nivel4
     136.  00:8178  DD 23               		INC			IX						;el puntero IX apuntará siempre al byte de las ayudas
     137.  00:817A                      .inicia_nivel_4:
     138.  00:817A  4E                  		LD		 	 C, (HL)
     139.  00:817B                      		;pongo habitación no terminada bit 4 habitación a 0
     140.  00:817B  CB E1               		SET			 4, C	;***********************************************************************   ESTO HAY QUE PONERLO A 0 CUANDO HAYA ENEMIGOS
     141.  00:817D                      		
     142.  00:817D                      		;examino si hay ayudas en siguiente byte
     143.  00:817D  DD 7E 00            		LD			 A, (IX)
     144.  00:8180  E6 7E               		AND			1111110b
     145.  00:8182  CA 8A 81            		JP			 Z, .no_tiene_ayuda_nivel4
     146.  00:8185                      .si_tiene_ayuda_nivel4:
     147.  00:8185  CB F1               		SET			 6, C
     148.  00:8187  C3 8C 81            		JP			.fin_tiene_ayuda_nivel4
     149.  00:818A                      .no_tiene_ayuda_nivel4:
     150.  00:818A  CB B1               		RES			 6, C
     151.  00:818C                      .fin_tiene_ayuda_nivel4:
     152.  00:818C                      		
     153.  00:818C  71                  		LD			(HL), C
     154.  00:818D  23 23               [2]		INC			HL		;pongo puntero en la siguiente habitación (2 saltos)
     155.  00:818F  DD 23 DD 23         [2]		INC			IX		;pongo puntero en la siguiente habitación (2 saltos)
     156.  00:8193  10 E5               		DJNZ		.inicia_nivel_4
     157.  00:8195                      		
     158.  00:8195                      ;nivel 5 -----------------------------------------------------------------------
     159.  00:8195  06 38               		LD			 B, 56	;la mitad de bytes del array de un nivel
     160.  00:8197  21 EA A9            		LD 			HL, habitaciones_nivel5	;puntero al byte de la habitación
     161.  00:819A  DD 21 EA A9         		LD			IX, habitaciones_nivel5
     162.  00:819E  DD 23               		INC			IX						;el puntero IX apuntará siempre al byte de las ayudas
     163.  00:81A0                      .inicia_nivel_5:
     164.  00:81A0  4E                  		LD		 	 C, (HL)
     165.  00:81A1                      		;pongo habitación no terminada bit 4 habitación a 0
     166.  00:81A1  CB E1               		SET			 4, C	;***********************************************************************   ESTO HAY QUE PONERLO A 0 CUANDO HAYA ENEMIGOS
     167.  00:81A3                      		
     168.  00:81A3                      		;examino si hay ayudas en siguiente byte
     169.  00:81A3  DD 7E 00            		LD			 A, (IX)
     170.  00:81A6  E6 7E               		AND			1111110b
     171.  00:81A8  CA B0 81            		JP			 Z, .no_tiene_ayuda_nivel5
     172.  00:81AB                      .si_tiene_ayuda_nivel5:
     173.  00:81AB  CB F1               		SET			 6, C
     174.  00:81AD  C3 B2 81            		JP			.fin_tiene_ayuda_nivel5
     175.  00:81B0                      .no_tiene_ayuda_nivel5:
     176.  00:81B0  CB B1               		RES			 6, C
     177.  00:81B2                      .fin_tiene_ayuda_nivel5:
     178.  00:81B2                      		
     179.  00:81B2  71                  		LD			(HL), C
     180.  00:81B3  23 23               [2]		INC			HL		;pongo puntero en la siguiente habitación (2 saltos)
     181.  00:81B5  DD 23 DD 23         [2]		INC			IX		;pongo puntero en la siguiente habitación (2 saltos)
     182.  00:81B9  10 E5               		DJNZ		.inicia_nivel_5
     183.  00:81BB                      		
     184.  00:81BB                      ;nivel 6 -----------------------------------------------------------------------
     185.  00:81BB  06 38               		LD			 B, 56	;la mitad de bytes del array de un nivel
     186.  00:81BD  21 2A A8            		LD 			HL, habitaciones_nivel1	;puntero al byte de la habitación
     187.  00:81C0  DD 21 2A A8         		LD			IX, habitaciones_nivel1
     188.  00:81C4  DD 23               		INC			IX						;el puntero IX apuntará siempre al byte de las ayudas
     189.  00:81C6                      .inicia_nivel_6:
     190.  00:81C6  4E                  		LD		 	 C, (HL)
     191.  00:81C7                      		;pongo habitación no terminada bit 4 habitación a 0
     192.  00:81C7  CB E1               		SET			 4, C	;***********************************************************************   ESTO HAY QUE PONERLO A 0 CUANDO HAYA ENEMIGOS
     193.  00:81C9                      		
     194.  00:81C9                      		;examino si hay ayudas en siguiente byte
     195.  00:81C9  DD 7E 00            		LD			 A, (IX)
     196.  00:81CC  E6 7E               		AND			1111110b
     197.  00:81CE  CA D6 81            		JP			 Z, .no_tiene_ayuda_nivel6
     198.  00:81D1                      .si_tiene_ayuda_nivel6:
     199.  00:81D1  CB F1               		SET			 6, C
     200.  00:81D3  C3 D8 81            		JP			.fin_tiene_ayuda_nivel6
     201.  00:81D6                      .no_tiene_ayuda_nivel6:
     202.  00:81D6  CB B1               		RES			 6, C
     203.  00:81D8                      .fin_tiene_ayuda_nivel6:
     204.  00:81D8                      		
     205.  00:81D8  71                  		LD			(HL), C
     206.  00:81D9  23 23               [2]		INC			HL		;pongo puntero en la siguiente habitación (2 saltos)
     207.  00:81DB  DD 23 DD 23         [2]		INC			IX		;pongo puntero en la siguiente habitación (2 saltos)
     208.  00:81DF  10 E5               		DJNZ		.inicia_nivel_6
     209.  00:81E1                      
     210.  00:81E1  E1                  		POP			HL
     211.  00:81E2  C1                  		POP			BC
     212.  00:81E3  F1                  		POP			AF
     213.  00:81E4                      fin_iniciliza_niveles:
     214.  00:81E4  C9                  		RET
     215.  00:81E5                      
     216.  00:81E5                      
     217.  00:81E5                      ;;=====================================================
     218.  00:81E5                      ;;ACTUALIZA_MARCADOR_VIDAS
     219.  00:81E5                      ;;=====================================================	
     220.  00:81E5                      ; función:  actualiza el buffer de vidas
     221.  00:81E5                      ; entrada: 	prota_vidas
     222.  00:81E5                      ; salida: 	array_aux_vidas
     223.  00:81E5                      ; toca:		A,B,HL
     224.  00:81E5                      actualiza_marcador_vidas:
     225.  00:81E5                      	;para no andar restando pongo todos los huecos a negro y luego en otro bucle las caras
     226.  00:81E5                      	;1-pinto todo en blanco
     227.  00:81E5  21 E9 AA            	LD		HL,array_aux_vidas
     228.  00:81E8  06 08               	LD		 B,NMAXVIDREL
     229.  00:81EA                      loop_marcador_caras_negro:	;asignar espacios en negro
     230.  00:81EA  36 00               	LD		(HL),0			;0 posición mapa tiles para nada (es transparente pero el fondo es negro)
     231.  00:81EC  23                  	INC		HL
     232.  00:81ED  10 FB               	DJNZ	loop_marcador_caras_negro
     233.  00:81EF                      fin_loop_marcador_caras_negro:
     234.  00:81EF                      	;2-pinto las caras según el n de vidas
     235.  00:81EF  3A E4 AA            	LD		 A, (prota_vidas)
     236.  00:81F2  B7                  	OR		 A
     237.  00:81F3  C8                  	RET 	 Z
     238.  00:81F4  47                  	LD		 B, A
     239.  00:81F5  21 E9 AA            	LD		HL, array_aux_vidas
     240.  00:81F8                      loop_marcador_caras: ;asignar caras
     241.  00:81F8  36 0D               	LD		(HL), POSCARAMAP	;13 posición mapa tiles para cara
     242.  00:81FA  23                  	INC		HL
     243.  00:81FB  10 FB               	DJNZ	loop_marcador_caras
     244.  00:81FD                      fin_loop_marcador_caras:
     245.  00:81FD                      fin_actualiza_marcador_vidas:
     246.  00:81FD  C9                  	RET
     247.  00:81FE                      
     248.  00:81FE                      
     249.  00:81FE                      ;;=====================================================
     250.  00:81FE                      ;;ACTUALIZA_BUFFER_RELIQUIAS
     251.  00:81FE                      ;;=====================================================	
     252.  00:81FE                      ; función: 	actualiza buffer de reliquias
     253.  00:81FE                      ; entrada: 	prota_reliquias
     254.  00:81FE                      ; salida: 	array_aux_reliquias
     255.  00:81FE                      ; toca:		A,B,HL
     256.  00:81FE                      actualiza_buffer_reliquias:	
     257.  00:81FE                      	;para no andar restando pongo todos los huecos a negro y luego en otro bucle las reliquias
     258.  00:81FE                      	;1-pinto todo en blanco
     259.  00:81FE  21 F1 AA            	LD		HL, array_aux_reliquias
     260.  00:8201  06 08               	LD		 B, NMAXVIDREL
     261.  00:8203  AF                  	XOR		 A
     262.  00:8204                      loop_buffer_reliquias_negro:	;asignar espacios en negro
     263.  00:8204  77                  	LD		(HL), A			;0 posición mapa tiles para nada (es transparente pero el fondo es negro)
     264.  00:8205  23                  	INC		HL
     265.  00:8206  10 FC               	DJNZ	loop_buffer_reliquias_negro
     266.  00:8208                      
     267.  00:8208                      	;2-pinto las cruces según el n de reliquias
     268.  00:8208  21 F1 AA            	LD		HL, array_aux_reliquias
     269.  00:820B  3A E5 AA            	LD		 A, (prota_reliquias)
     270.  00:820E  B7                  	OR		 A
     271.  00:820F  C8                  	RET		 Z
     272.  00:8210  47                  	LD		 B, A
     273.  00:8211                      loop_buffer_reliquias: ;asignar reliquias
     274.  00:8211  36 11               	LD		(HL), POSRELIMAP	;17 posición mapa tiles para reliquia
     275.  00:8213  23                  	INC		HL
     276.  00:8214  10 FB               	DJNZ	loop_buffer_reliquias
     277.  00:8216                      fin_actualiza_buffer_reliquias:
     278.  00:8216  C9                  	RET
     279.  00:8217                      
     280.  00:8217                      
     281.  00:8217                      
     282.  00:8217                      ;;=====================================================
     283.  00:8217                      ;;LOCALIZA_INFO_HABITACION
     284.  00:8217                      ;;=====================================================	
     285.  00:8217                      ; función: 	busca las puertas que hay que pintar egún la posición del usuario y las pone en habitacion_actual
     286.  00:8217                      ; entrada: 	prota.pos_mapy, prota.pos_mapx, prota_nivel habitaciones_juego
     287.  00:8217                      ; salida: 	habitacion_actual
     288.  00:8217                      ; toca:		todo
     289.  00:8217                      ;ejemplo: nivel 4, posy 5 y posx 3
     290.  00:8217                      ;3 + 5 x 8 + 4 x 49
     291.  00:8217                      localiza_info_habitacion:
     292.  00:8217                      	;~ PUSH	AF
     293.  00:8217                      	;~ PUSH	BC
     294.  00:8217                      	;~ PUSH	DE
     295.  00:8217  E5                  	PUSH	HL
     296.  00:8218                      
     297.  00:8218                      ;primera posición: me coloco en la columna correcta
     298.  00:8218  21 BA A7            	LD		HL, habitaciones_juego
     299.  00:821B                      .situo_columna:	
     300.  00:821B  3A E6 AA            	LD		 A, (prota_pos_mapx)
     301.  00:821E  CB 27               	SLA		 A				;multiplico por dos ya que cada habitación va de dos en dos bytes
     302.  00:8220  06 00               	LD		 B, 0
     303.  00:8222  4F                  	LD		 C, A
     304.  00:8223  09                  	ADD 	HL, BC			;sumo a la posición 0 la columnax2 en la que situarme
     305.  00:8224                      	
     306.  00:8224                      .situo_fila:
     307.  00:8224  3A E7 AA            	LD		A, (prota_pos_mapy)
     308.  00:8227  B7                  	OR	 	A
     309.  00:8228  CA 35 82            	JP		Z, .situo_nivel	;si la fila es 0 no es necesario seguir operando en fila
     310.  00:822B                      	
     311.  00:822B  47                  	LD		B, A
     312.  00:822C  AF                  	XOR		A
     313.  00:822D                      .loop_suma_fila:
     314.  00:822D  C6 10               	ADD		16				;cada fila tiene 16 bytes
     315.  00:822F  10 FC               	DJNZ	.loop_suma_fila
     316.  00:8231                      	
     317.  00:8231  06 00               	LD		 B, 0
     318.  00:8233  4F                  	LD		 C, A
     319.  00:8234                      
     320.  00:8234  09                  	ADD 	HL, BC			;sumo a la columna 16 x filas para situarme en la fila correcta
     321.  00:8235                      
     322.  00:8235                      .situo_nivel:
     323.  00:8235  3A E3 AA            	LD		 A, (prota_nivel)
     324.  00:8238  B7                  	OR	 	 A
     325.  00:8239  CA 49 82            	JP		 Z, .actualiza_variable_habitacion	;si el nivel es 0 al pasar por las anterirores ya estoy situado actualizo la variable y termino
     326.  00:823C                      	
     327.  00:823C  E5                  	PUSH	HL				;guardo el resultado intermedio
     328.  00:823D                      	
     329.  00:823D  47                  	LD		 B, A			;preparo la varible del bucle
     330.  00:823E  11 70 00            	LD		DE, 112			;112 = 16x42 son los bytes de cada matriz-nivel
     331.  00:8241  21 00 00            	LD		HL, 0
     332.  00:8244                      .loop_suma_nivel:
     333.  00:8244  19                  	ADD		HL, DE
     334.  00:8245  10 FD               	DJNZ	.loop_suma_nivel
     335.  00:8247                      	
     336.  00:8247  D1                  	POP		DE				;devuelvo el resultado intermedio en DE que ya no lo necesito
     337.  00:8248                      	
     338.  00:8248  19                  	ADD		HL, DE			;sumo el resultado del nivel al resultado intermedio anterior
     339.  00:8249                      	
     340.  00:8249                      .actualiza_variable_habitacion
     341.  00:8249  7E                  	LD		 A, (HL)
     342.  00:824A  32 B5 A7            	LD		(habitacion_actual), A
     343.  00:824D                      	
     344.  00:824D                      	;actualizo la variable habitacion_actual y su puntero para poder modificar por si se vuelve a pasar por ahí
     345.  00:824D  DD 21 B7 A7         	LD		IX, habitacion_actual_puntero
     346.  00:8251  DD 74 00            	LD		(IX), H
     347.  00:8254  DD 75 01            	LD		(IX + 1), L
     348.  00:8257                      	
     349.  00:8257                      	;actualizo la variable is_habitacion_terminada
     350.  00:8257  3A B5 A7            	LD		 A, (habitacion_actual)
     351.  00:825A  CB 67               	BIT		 4, A					;está terminada la habitación
     352.  00:825C  C2 66 82            	JP		 NZ, .si_terminada
     353.  00:825F                      .no_terminada:						;pongo un 0 en is_habitacion_terminada
     354.  00:825F  AF                  	XOR		 A
     355.  00:8260  32 B9 A7            	LD		(is_habitacion_terminada), A
     356.  00:8263  C3 6B 82            	JP		.fin_esta_terminada
     357.  00:8266                      .si_terminada:						;pongo un 1 en is_habitacion_terminada
     358.  00:8266  3E 01               	LD		 A, 1		
     359.  00:8268  32 B9 A7            	LD		(is_habitacion_terminada), A
     360.  00:826B                      .fin_esta_terminada:
     361.  00:826B                      	
     362.  00:826B                      	;actualizo la variable hay_ayudas
     363.  00:826B  3A B5 A7            	LD		 A, (habitacion_actual)
     364.  00:826E  CB 77               	BIT		 6, A							;pintar ayuda
     365.  00:8270  CA 7B 82            	JP		 Z, .no_mostrar_ayuda_activa	;0 no hay o ya se han cogido ayudas // 1 mostrar ayuda activa
     366.  00:8273                      .si_mostrar_ayuda_activa:							
     367.  00:8273  3E 01               	LD		 A, 1
     368.  00:8275  32 9A 9C            	LD		(examina_ayudas_en_pantalla), A	
     369.  00:8278  C3 7F 82            	JP		.fin_mostrar_ayuda_activa
     370.  00:827B                      .no_mostrar_ayuda_activa:
     371.  00:827B  AF                  	XOR		 A
     372.  00:827C  32 9A 9C            	LD		(examina_ayudas_en_pantalla), A
     373.  00:827F                      .fin_mostrar_ayuda_activa:					;no restauro B en A porque ya no lo necesito
     374.  00:827F                      	
     375.  00:827F                      	;actualizo la variable habitacion_extras
     376.  00:827F  23                  	INC		HL				;el byte de los extras está antes de donde se especifican las puertas
     377.  00:8280  7E                  	LD		 A, (HL)
     378.  00:8281  32 B6 A7            	LD		(habitacion_extras), A
     379.  00:8284                      
     380.  00:8284  E1                  	POP		HL	
     381.  00:8285                      	;~ POP		DE
     382.  00:8285                      	;~ POP		BC
     383.  00:8285                      	;~ POP		AF
     384.  00:8285                      fin_localiza_info_habitacion:
     385.  00:8285  C9                  	RET
     386.  00:8286                      	
     387.  00:8286                      
     388.  00:8286                      ;;=====================================================
     389.  00:8286                      ;;TERMINADA_HABIACION_RECORRIDA
     390.  00:8286                      ;;=====================================================	
     391.  00:8286                      ; función: 	usando la variable prota_pos_mapx pone un 1 a donde apunta habitacion_recorrida (el array... byte 14 de 
     392.  00:8286                      ;			habitaciones recorridas en esa fila) para ver si uestra enemigos o no y permita pasar por puertas
     393.  00:8286                      ; entrada: 	prota_pos_mapx, habitacion_recorrida
     394.  00:8286                      ; salida: 	habitacion_recorrida (byte 14 de la fila de habitaciones) actualizada con OR A (en A la habitacion)
     395.  00:8286                      ; toca:		IX, HL, AF
     396.  00:8286                      terminada_habitacion_recorrida:
     397.  00:8286  21 B7 A7            		LD			HL, habitacion_actual_puntero
     398.  00:8289  7E                  		LD			 A, (HL)
     399.  00:828A  CB E7               		SET			 4, A
     400.  00:828C  77                  		LD			(HL), A
     401.  00:828D                      		
     402.  00:828D  3E 01               		LD			 A, HABTERMIN	;da igual qué bit mientras sea distinto de 0 pero se pone 1
     403.  00:828F  32 B9 A7            		LD			(is_habitacion_terminada), A
     404.  00:8292                      		
     405.  00:8292                      		;este trozo no sirve de nada pero ya e quedo más tranquilo si lo pongo, por ser exacto y completo
     406.  00:8292                      		;no sirve porque se cambiará de habitación y se perderá/actualizará el dato
     407.  00:8292  3A B5 A7            		LD			 A, (habitacion_actual)
     408.  00:8295  CB E7               		SET			 4, A
     409.  00:8297  32 B5 A7            		LD			(habitacion_actual), A
     410.  00:829A                      fin_terminada_habitacion_recorrida:
     411.  00:829A  C9                  		RET
     412.  00:829B                      
     413.  00:829B                      
     414.  00:829B                      
     415.  00:829B                      ;;=====================================================
     416.  00:829B                      ;;ENTRA_HABITACION												*no terminada
     417.  00:829B                      ;;=====================================================	
     418.  00:829B                      ; función: 	actualiza elementos en pantalla cuando hay cambios en habitación
     419.  00:829B                      ;			fondo
     420.  00:829B                      ;			puertas
     421.  00:829B                      ;			ayudas
     422.  00:829B                      ;			imagenes
     423.  00:829B                      ;			mapa inferior
     424.  00:829B                      ;			enemigos
     425.  00:829B                      ; entrada: 	prota_pos_mapy, prota_pos_mapy, prota_nivel
     426.  00:829B                      ; salida: 	
     427.  00:829B                      entra_habitacion:
     428.  00:829B  CD 1A 83            		CALL	pinta_parte_superior_pantalla
     429.  00:829E  CD 24 89            		CALL	pinta_puertas
     430.  00:82A1  CD 5E 86            		CALL	pinta_extra_fondo
     431.  00:82A4  CD 30 9D            		CALL	pinta_ayudas_habitacion
     432.  00:82A7                      	
     433.  00:82A7  C3 AA 82            		JP		pinta_heroe_mapa
     434.  00:82AA                      fin_entra_habitacion:
     435.  00:82AA                      
     436.  00:82AA                      
     437.  00:82AA                      ;;=====================================================
     438.  00:82AA                      ;;PINTA_HEROE_MAPA
     439.  00:82AA                      ;;PINTA_BLANCO_MAPA
     440.  00:82AA                      ;;=====================================================	
     441.  00:82AA                      ; función: 	pinta el iconito del heroe en el mapa o un espacio en blanco
     442.  00:82AA                      ; entrada: 	
     443.  00:82AA                      ; salida: 	
     444.  00:82AA                      ; toca:		todo
     445.  00:82AA                      pinta_heroe_mapa:
     446.  00:82AA  3E 13               		LD		 A, TILEPROTAM
     447.  00:82AC  32 08 AB            		LD		(elemento_pintar_mapa), A
     448.  00:82AF  C3 48 85            		JP		posiciona_en_mapa		;se le pasa elemento_pintar_mapa (tile del prota) está el prota y prota.posx y posy
     449.  00:82B2                      fin_pinta_heroe_mapa:
     450.  00:82B2                      pinta_blanco_mapa:
     451.  00:82B2  3E 09               		LD		 A, TILEGRISM
     452.  00:82B4  32 08 AB            		LD		(elemento_pintar_mapa), A
     453.  00:82B7  C3 48 85            		JP		posiciona_en_mapa		;se le pasa elemento_pintar_mapa (tile del prota) está el prota y prota.posx y posy
     454.  00:82BA                      fin_pinta_blanco_mapa:
     455.  00:82BA                      	
     456.  00:82BA                      	
     457.  00:82BA                      
     458.  00:82BA                      ;;=====================================================
     459.  00:82BA                      ;;CAMBIO_NIVEL
     460.  00:82BA                      ;;=====================================================	
     461.  00:82BA                      ; función: 	pinta el iconito del heroe en el mapa o un espacio en blanco
     462.  00:82BA                      ; entrada: 	
     463.  00:82BA                      ; salida: 	
     464.  00:82BA                      ; toca:		todo	
     465.  00:82BA                      cambio_nivel:
     466.  00:82BA                      	
     467.  00:82BA                      		;MIRAR CUANDO EL NIVEL SEA -1 (SE SALE DEL CASTILLO Y PUEDE QUE SEA POR TERMINAR JUEGO O SALIR ANTES DE TIEMPO)
     468.  00:82BA                      	
     469.  00:82BA                      ;		*****************************************************************************************************************************+
     470.  00:82BA  CD 71 84            		CALL		pinta_nivel
     471.  00:82BD                      	
     472.  00:82BD  CD F1 84            		CALL		borra_mapa	
     473.  00:82C0                      		
     474.  00:82C0                      fin_cabio_nivel:
     475.  00:82C0  C9                  		RET
     476.  00:82C1                      	
     477.  00:82C1                      	
     478.  00:82C1                      
     479.  00:82C1                      	
     480.  00:82C1                      	
     481.  00:82C1                      	
     245   00:82C1                      	
     246   00:82C1                      	include "subr_general.asm"
       1.  00:82C1                      ;;=====================================================
       2.  00:82C1                      ;;DEFINICIÓN DE SUBRUTINAS GENERALES USABLES PARA CUALQUIER PROYECTO
       3.  00:82C1                      ;;=====================================================	
       4.  00:82C1                      
       5.  00:82C1                      ;;=====================================================
       6.  00:82C1                      ;;SUMA_A_BC
       7.  00:82C1                      ;;=====================================================	
       8.  00:82C1                      ; función: 	suma A a BC por si da más de 255
       9.  00:82C1                      ; entrada: 	A, BC
      10.  00:82C1                      ; salida: 	A + BC
      11.  00:82C1                      ; toca:		A, BC
      12.  00:82C1                      suma_A_BC:
      13.  00:82C1  81                  	ADD		 C
      14.  00:82C2  4F                  	LD		 C, A
      15.  00:82C3  88                  	ADC		 B
      16.  00:82C4  91                  	SUB		 C
      17.  00:82C5  47                  	LD		 B, A
      18.  00:82C6                      fin_suma_A_BC:
      19.  00:82C6  C9                  	RET
      20.  00:82C7                      	
      21.  00:82C7                      ;;=====================================================
      22.  00:82C7                      ;;SUMA_A_HL
      23.  00:82C7                      ;;=====================================================	
      24.  00:82C7                      ; función: 	suma A a BC por si da más de 255
      25.  00:82C7                      ; entrada: 	A, HL
      26.  00:82C7                      ; salida: 	A + HL
      27.  00:82C7                      ; toca:		A, HL
      28.  00:82C7                      suma_A_HL:
      29.  00:82C7  85                  	ADD		 L
      30.  00:82C8  6F                  	LD		 L, A
      31.  00:82C9  8C                  	ADC		 H
      32.  00:82CA  95                  	SUB		 L
      33.  00:82CB  67                  	LD		 H, A
      34.  00:82CC                      fin_suma_A_HL:
      35.  00:82CC  C9                  	RET
      36.  00:82CD                      	
      37.  00:82CD                      	
      38.  00:82CD                      ;;=====================================================
      39.  00:82CD                      ;;TEST_OK
      40.  00:82CD                      ;;=====================================================	
      41.  00:82CD                      ; función: para pruebas.. cambia el color de fondo cuando se le llama
      42.  00:82CD                      test_OK:
      43.  00:82CD  F5                  	PUSH	AF
      44.  00:82CE                      	
      45.  00:82CE  3E 0F               	LD		 A, 15
      46.  00:82D0                      	
      47.  00:82D0  32 E9 F3            	LD 		(FORCLR), A
      48.  00:82D3  23                  	INC		HL
      49.  00:82D4                      	
      50.  00:82D4  32 EA F3            	LD 		(BAKCLR), A
      51.  00:82D7  23                  	INC		HL
      52.  00:82D8                      	
      53.  00:82D8  7E                  	LD		 A, (HL)
      54.  00:82D9  32 EB F3            	LD 		(BDRCLR), A
      55.  00:82DC                      	
      56.  00:82DC  CD 62 00            	CALL	CHGCLR 
      57.  00:82DF                      	
      58.  00:82DF  F1                  	POP		AF
      59.  00:82E0                      fin_test_OK:
      60.  00:82E0  C9                  	RET
     247   00:82E1                      	
     248   00:82E1                      	include "subr_pintapantalla.asm"
       1.  00:82E1                      ;;=====================================================
       2.  00:82E1                      ;;DEFINICIÓN DE SUBRUTINAS
       3.  00:82E1                      ;;=====================================================	
       4.  00:82E1                      ;relacionadas con pintado en pantalla (y no sprites)
       5.  00:82E1                      
       6.  00:82E1                      
       7.  00:82E1                      ;;=====================================================
       8.  00:82E1                      ;;COLOR_PANTALLA
       9.  00:82E1                      ;;=====================================================	
      10.  00:82E1                      ; función: 	el equivalente en basic a color 15,1,1
      11.  00:82E1                      ; entrada: 	HL	que apunta a un array de bytes con 3 bytes FORCLR, BAKCLR y BDRCLR
      12.  00:82E1                      ; salida: 	-
      13.  00:82E1                      ; toca: 	todo
      14.  00:82E1                      color_pantalla:
      15.  00:82E1  7E                  	LD		 A, (HL)			;FORCLR 
      16.  00:82E2  32 E9 F3            	LD 		(FORCLR),A
      17.  00:82E5  23                  	INC		HL
      18.  00:82E6                      	
      19.  00:82E6  7E                  	LD		 A, (HL)			;BAKCLR
      20.  00:82E7  32 EA F3            	LD 		(BAKCLR),A
      21.  00:82EA  23                  	INC		HL
      22.  00:82EB                      	
      23.  00:82EB  7E                  	LD		 A, (HL)
      24.  00:82EC  32 EB F3            	LD 		(BDRCLR),A			;BDRCLR
      25.  00:82EF  C3 62 00            	JP		CHGCLR 
      26.  00:82F2                      fin_color_pantalla:
      27.  00:82F2                      
      28.  00:82F2                      
      29.  00:82F2                      ;;=====================================================
      30.  00:82F2                      ;;PREPARAPANTALLA
      31.  00:82F2                      ;;=====================================================	
      32.  00:82F2                      ; función: elimina clic cuando se pulsa tecla, cls, screen 2,2
      33.  00:82F2                      ; entrada: -
      34.  00:82F2                      ; salida: -
      35.  00:82F2                      ; toca: si no son todos los regristros, casi todos
      36.  00:82F2                      sub_preparapantalla:
      37.  00:82F2                      	;toca A y Z
      38.  00:82F2                      elimina_clic;
      39.  00:82F2  AF                  	XOR		 A
      40.  00:82F3  32 DB F3            	LD		(CLIKSW),A
      41.  00:82F6                      fin_elimina_clic:
      42.  00:82F6                      
      43.  00:82F6                      	;toca A
      44.  00:82F6                      limpia_pantalla:
      45.  00:82F6  AF                  	XOR		 A
      46.  00:82F7  CD C3 00            	CALL 	CLS
      47.  00:82FA                      fin_limpia_pantalla:
      48.  00:82FA                      
      49.  00:82FA                      	;toca A y direcciones #F3E9/#F3EA/#F3EB, poner en HL array con 3 valores
      50.  00:82FA  21 CA AA            	LD		HL, color_base
      51.  00:82FD  CD E1 82            	CALL	color_pantalla
      52.  00:8300                      	
      53.  00:8300                      	;cambiamos a SCREEN 2,2 del BASIC
      54.  00:8300                      	;toca A
      55.  00:8300                      screen2:
      56.  00:8300  3E 02               	LD		 A, 2
      57.  00:8302  CD 5F 00            	CALL	CHGMOD			;selecciona screen 2
      58.  00:8305                      sprites_16_16:
      59.  00:8305  3A E0 F3            	LD		 A, (RG1SAV)
      60.  00:8308  F6 02               	OR		00000010b		;fuerza sprites de 16x16
      61.  00:830A  32 E0 F3            	LD		(RG1SAV), A		;no lo guardamos en la copia de variables del sistema
      62.  00:830D  47                  	LD		 B, A
      63.  00:830E  0E 01               	LD		 C, 1
      64.  00:8310  C3 47 00            	JP		WRTVDP			;opción alternativa de escribir las tres lineas siguientes
      65.  00:8313                      fin_sub_preparapantalla:
      66.  00:8313                      	
      67.  00:8313                      
      68.  00:8313                      ;;=====================================================
      69.  00:8313                      ;;PINTA_PANTALLA_COMPLETA
      70.  00:8313                      ;;=====================================================	
      71.  00:8313                      ; función: pinta el escenario, las 3 partes
      72.  00:8313                      ; entrada: -
      73.  00:8313                      ; salida: -
      74.  00:8313                      ; toca: si no son todos los regristros, casi todos
      75.  00:8313                      pinta_pantalla_completa:
      76.  00:8313  CD 1A 83            	CALL 	pinta_parte_superior_pantalla
      77.  00:8316                      	
      78.  00:8316  CD 38 84            	CALL 	pinta_parte_inferior_pantalla	
      79.  00:8319                      fin_pinta_pantalla_completa:
      80.  00:8319  C9                  	RET
      81.  00:831A                      
      82.  00:831A                      
      83.  00:831A                      ;;=====================================================
      84.  00:831A                      ;;PINTA_PARTE_SUPERIOR_PANTALLA
      85.  00:831A                      ;;=====================================================	
      86.  00:831A                      ; función: pinta el escenario, los dos bancos superiores
      87.  00:831A                      ; entrada: -
      88.  00:831A                      ; salida: -
      89.  00:831A                      ; toca: si no son todos los regristros, casi todos
      90.  00:831A                      pinta_parte_superior_pantalla:
      91.  00:831A  3A E3 AA            	LD		 A, (prota_nivel)
      92.  00:831D  CA 4B 83            	JP		 Z, .carga_nivel_0
      93.  00:8320  3D                  	DEC		 A
      94.  00:8321  3A E3 AA            	LD		 A, (prota_nivel)
      95.  00:8324  CA 66 83            	JP		 Z, .carga_nivel_1
      96.  00:8327  3D                  	DEC		 A
      97.  00:8328  3A E3 AA            	LD		 A, (prota_nivel)
      98.  00:832B  CA 81 83            	JP		 Z, .carga_nivel_2
      99.  00:832E  3D                  	DEC		 A
     100.  00:832F  3A E3 AA            	LD		 A, (prota_nivel)
     101.  00:8332  CA 9C 83            	JP		 Z, .carga_nivel_3
     102.  00:8335  3D                  	DEC		 A
     103.  00:8336  3A E3 AA            	LD		 A, (prota_nivel)
     104.  00:8339  CA B7 83            	JP		 Z, .carga_nivel_4
     105.  00:833C  3D                  	DEC		 A
     106.  00:833D  3A E3 AA            	LD		 A, (prota_nivel)
     107.  00:8340  CA D2 83            	JP		 Z, .carga_nivel_5
     108.  00:8343  3D                  	DEC		 A
     109.  00:8344  3A E3 AA            	LD		 A, (prota_nivel)
     110.  00:8347  CA ED 83            	JP		 Z, .carga_nivel_6
     111.  00:834A  3D                  	DEC		 A
     112.  00:834B                      	
     113.  00:834B                      .carga_nivel_0:
     114.  00:834B  21 38 AC            	LD		HL, tiles_patrones_nivel0
     115.  00:834E  22 32 84            	LD		(tiles_patrones), HL
     116.  00:8351  21 62 AE            	LD		HL, tiles_color_nivel0
     117.  00:8354  22 34 84            	LD		(tiles_colores), HL
     118.  00:8357  21 38 AC            	LD		HL, tiles_patrones_nivel0
     119.  00:835A  22 32 84            	LD		(tiles_patrones), HL
     120.  00:835D  21 CD AE            	LD		HL, tiles_mapa_nivel0
     121.  00:8360  22 36 84            	LD		(tiles_mapa), HL
     122.  00:8363  C3 05 84            	JP		.fin_carga_niveles
     123.  00:8366                      
     124.  00:8366                      .carga_nivel_1:
     125.  00:8366  21 02 AF            	LD		HL, tiles_patrones_nivel1
     126.  00:8369  22 32 84            	LD		(tiles_patrones), HL
     127.  00:836C  21 B7 B0            	LD		HL, tiles_color_nivel1
     128.  00:836F  22 34 84            	LD		(tiles_colores), HL
     129.  00:8372  21 02 AF            	LD		HL, tiles_patrones_nivel1
     130.  00:8375  22 32 84            	LD		(tiles_patrones), HL
     131.  00:8378  21 FE B0            	LD		HL, tiles_mapa_nivel1
     132.  00:837B  22 36 84            	LD		(tiles_mapa), HL
     133.  00:837E  C3 05 84            	JP		.fin_carga_niveles
     134.  00:8381                      	
     135.  00:8381                      .carga_nivel_2:
     136.  00:8381  21 33 B1            	LD		HL, tiles_patrones_nivel2
     137.  00:8384  22 32 84            	LD		(tiles_patrones), HL
     138.  00:8387  21 E8 B2            	LD		HL, tiles_color_nivel2
     139.  00:838A  22 34 84            	LD		(tiles_colores), HL
     140.  00:838D  21 33 B1            	LD		HL, tiles_patrones_nivel2
     141.  00:8390  22 32 84            	LD		(tiles_patrones), HL
     142.  00:8393  21 2F B3            	LD		HL, tiles_mapa_nivel2
     143.  00:8396  22 36 84            	LD		(tiles_mapa), HL
     144.  00:8399  C3 05 84            	JP		.fin_carga_niveles
     145.  00:839C                      	
     146.  00:839C                      .carga_nivel_3:
     147.  00:839C  21 64 B3            	LD		HL, tiles_patrones_nivel3
     148.  00:839F  22 32 84            	LD		(tiles_patrones), HL
     149.  00:83A2  21 19 B5            	LD		HL, tiles_color_nivel3
     150.  00:83A5  22 34 84            	LD		(tiles_colores), HL
     151.  00:83A8  21 64 B3            	LD		HL, tiles_patrones_nivel3
     152.  00:83AB  22 32 84            	LD		(tiles_patrones), HL
     153.  00:83AE  21 60 B5            	LD		HL, tiles_mapa_nivel3
     154.  00:83B1  22 36 84            	LD		(tiles_mapa), HL
     155.  00:83B4  C3 05 84            	JP		.fin_carga_niveles
     156.  00:83B7                      	
     157.  00:83B7                      .carga_nivel_4:
     158.  00:83B7  21 95 B5            	LD		HL, tiles_patrones_nivel4
     159.  00:83BA  22 32 84            	LD		(tiles_patrones), HL
     160.  00:83BD  21 4A B7            	LD		HL, tiles_color_nivel4
     161.  00:83C0  22 34 84            	LD		(tiles_colores), HL
     162.  00:83C3  21 95 B5            	LD		HL, tiles_patrones_nivel4
     163.  00:83C6  22 32 84            	LD		(tiles_patrones), HL
     164.  00:83C9  21 91 B7            	LD		HL, tiles_mapa_nivel4
     165.  00:83CC  22 36 84            	LD		(tiles_mapa), HL
     166.  00:83CF  C3 05 84            	JP		.fin_carga_niveles
     167.  00:83D2                      	
     168.  00:83D2                      .carga_nivel_5:
     169.  00:83D2  21 C6 B7            	LD		HL, tiles_patrones_nivel5
     170.  00:83D5  22 32 84            	LD		(tiles_patrones), HL
     171.  00:83D8  21 7B B9            	LD		HL, tiles_color_nivel5
     172.  00:83DB  22 34 84            	LD		(tiles_colores), HL
     173.  00:83DE  21 C6 B7            	LD		HL, tiles_patrones_nivel5
     174.  00:83E1  22 32 84            	LD		(tiles_patrones), HL
     175.  00:83E4  21 C2 B9            	LD		HL, tiles_mapa_nivel5
     176.  00:83E7  22 36 84            	LD		(tiles_mapa), HL
     177.  00:83EA  C3 05 84            	JP		.fin_carga_niveles
     178.  00:83ED                      	
     179.  00:83ED                      .carga_nivel_6:
     180.  00:83ED  21 F7 B9            	LD		HL, tiles_patrones_nivel6
     181.  00:83F0  22 32 84            	LD		(tiles_patrones), HL
     182.  00:83F3  21 AC BB            	LD		HL, tiles_color_nivel6
     183.  00:83F6  22 34 84            	LD		(tiles_colores), HL
     184.  00:83F9  21 F7 B9            	LD		HL, tiles_patrones_nivel6
     185.  00:83FC  22 32 84            	LD		(tiles_patrones), HL
     186.  00:83FF  21 F3 BB            	LD		HL, tiles_mapa_nivel6
     187.  00:8402  22 36 84            	LD		(tiles_mapa), HL
     188.  00:8405                      ;	JP		.fin_carga niveles			;no necesario
     189.  00:8405                      .fin_carga_niveles:
     190.  00:8405                      
     191.  00:8405                      	;cargando banco 1
     192.  00:8405                      	;cargamos los patrones
     193.  00:8405  2A 32 84            	LD		HL, (tiles_patrones)
     194.  00:8408  11 00 00            	LD		DE, CHRTBL
     195.  00:840B  CD 55 9D            	CALL	depack_VRAM
     196.  00:840E                      	;cargamos los colores de los patrones
     197.  00:840E  2A 34 84            	LD		HL, (tiles_colores)
     198.  00:8411  11 00 20            	LD		DE, CLRTBL
     199.  00:8414  CD 55 9D            	CALL	depack_VRAM
     200.  00:8417                      	
     201.  00:8417                      	;cargando banco 2
     202.  00:8417                      	;cargamos los patrones
     203.  00:8417  2A 32 84            	LD		HL, (tiles_patrones)
     204.  00:841A  11 00 08            	LD		DE, CHRTBL + #0800
     205.  00:841D  CD 55 9D            	CALL	depack_VRAM	
     206.  00:8420                      	;cargamos los colores de los patrones
     207.  00:8420  2A 34 84            	LD		HL, (tiles_colores)
     208.  00:8423  11 00 28            	LD		DE, CLRTBL + #0800
     209.  00:8426  CD 55 9D            	CALL	depack_VRAM
     210.  00:8429                      	
     211.  00:8429                      	;cargamos mapa de pantalla banco 1 y 2
     212.  00:8429  2A 36 84            	LD		HL, (tiles_mapa)
     213.  00:842C  11 00 18            	LD		DE, TILMAP
     214.  00:842F  C3 55 9D            	JP		depack_VRAM
     215.  00:8432                      fin_pinta_parte_superior_pantalla:
     216.  00:8432  00 00               tiles_patrones:		DW	0
     217.  00:8434  00 00               tiles_colores:		DW	0
     218.  00:8436  00 00               tiles_mapa:			DW	0
     219.  00:8438                      
     220.  00:8438                      
     221.  00:8438                      ;;=====================================================
     222.  00:8438                      ;;PINTA_PARTE_INFERIOR_PANTALLA
     223.  00:8438                      ;;=====================================================	
     224.  00:8438                      ; función: pinta la parte inferior del escenario que es común
     225.  00:8438                      ; entrada: -
     226.  00:8438                      ; salida: -
     227.  00:8438                      ; toca: si no son todos los regristros, casi todos
     228.  00:8438                      pinta_parte_inferior_pantalla:
     229.  00:8438                      	;cangando banco 3
     230.  00:8438                      	;cargamos los patrones
     231.  00:8438  21 28 BC            	LD		HL,tiles_patrones_marcador
     232.  00:843B  11 00 10            	LD		DE,CHRTBL + #1000
     233.  00:843E  CD 55 9D            	CALL	depack_VRAM	
     234.  00:8441                      	;cargamos mapa de pantalla
     235.  00:8441  21 A9 BD            	LD		HL,tiles_mapa_marcador
     236.  00:8444  11 00 1A            	LD		DE,TILMAP + #0200
     237.  00:8447  CD 55 9D            	CALL	depack_VRAM
     238.  00:844A                      	;cargamos los colores de los patrones
     239.  00:844A  21 74 BD            	LD		HL,tiles_color_marcador
     240.  00:844D  11 00 30            	LD		DE,CLRTBL + #1000
     241.  00:8450  C3 55 9D            	JP		depack_VRAM
     242.  00:8453                      fin_pinta_parte_inferior_pantalla:
     243.  00:8453                      
     244.  00:8453                      
     245.  00:8453                      
     246.  00:8453                      ;;=====================================================
     247.  00:8453                      ;;PINTA_VIDAS
     248.  00:8453                      ;;=====================================================	
     249.  00:8453                      ; función: 	actualiza el mapa de tiles para que en el próximo refresco se pinten y actualiza_vidas
     250.  00:8453                      ; entrada: 	array_aux_vidas
     251.  00:8453                      ; salida: 	actualiza_vidas_sn
     252.  00:8453                      ; toca:		todo
     253.  00:8453                      pinta_vidas:
     254.  00:8453  CD E5 81            	CALL	actualiza_marcador_vidas
     255.  00:8456                      	
     256.  00:8456  21 E9 AA            	LD		HL, array_aux_vidas
     257.  00:8459  11 48 1A            	LD		DE, TILMAP + POSVIDAS 	;inicio posición en el mapa de tiles de las vidas
     258.  00:845C  01 08 00            	LD		BC, NMAXVIDREL			;hay 8 posiciones para vidas/reliquias o espacios en negro si no tiene 8 vidas/reliquias
     259.  00:845F  C3 5C 00            	JP		LDIRVM
     260.  00:8462                      fin_pinta_vidas:
     261.  00:8462                      	
     262.  00:8462                      	
     263.  00:8462                      
     264.  00:8462                      ;;=====================================================
     265.  00:8462                      ;;PINTA_RELIQUIAS
     266.  00:8462                      ;;=====================================================	
     267.  00:8462                      ; función: 	actualiza el mapa de tiles para que en el próximo refresco se pinten y actualiza_reliquias
     268.  00:8462                      ; entrada: 	array_aux_reliquias
     269.  00:8462                      ; salida: 	-
     270.  00:8462                      ; toca:		todo
     271.  00:8462                      pinta_reliquias:
     272.  00:8462  CD FE 81            	CALL	actualiza_buffer_reliquias
     273.  00:8465                      	
     274.  00:8465  21 F1 AA            	LD		HL, array_aux_reliquias
     275.  00:8468  11 C8 1A            	LD		DE, TILMAP + POSRELIQ 	;inicio posición en el mapa de tiles de las vidas
     276.  00:846B  01 08 00            	LD		BC, NMAXVIDREL			;hay 8 posiciones para vidas/reliquias o espacios en negro si no tiene 8 vidas/reliquias
     277.  00:846E  C3 5C 00            	JP		LDIRVM
     278.  00:8471                      fin_pinta_reliquias:
     279.  00:8471                      	
     280.  00:8471                      
     281.  00:8471                      
     282.  00:8471                      	
     283.  00:8471                      ;;=====================================================
     284.  00:8471                      ;;PINTA_NIVEL
     285.  00:8471                      ;;=====================================================	
     286.  00:8471                      ; función: 	actualiza el nivel en la parte de puntuación
     287.  00:8471                      ; entrada: 	prota_nivel
     288.  00:8471                      ; salida: 	-
     289.  00:8471                      ; toca:		HL,DE,BC
     290.  00:8471                      pinta_nivel:
     291.  00:8471                      	;forma más avanzada sin llamada a la bios
     292.  00:8471  01 B4 1A            	LD		BC,TILMAP + POSNIVEL ;posición en el mapa de tiles del tile de nivel
     293.  00:8474  3A E3 AA            	LD		 A, (prota_nivel)	 ;seleccionando la pos del banco de tiles a poner en el mapa
     294.  00:8477  C6 30               	ADD		'0'	
     295.  00:8479  57                  	LD		 D, A
     296.  00:847A                      	
     297.  00:847A  C3 7D 84            	JP		pinta_tile_suelto
     298.  00:847D                      fin_pinta_nivel:
     299.  00:847D                      
     300.  00:847D                      
     301.  00:847D                      
     302.  00:847D                      ;;=====================================================
     303.  00:847D                      ;;PINTA_TILE_SUELTO
     304.  00:847D                      ;;=====================================================	
     305.  00:847D                      ; función: 	pinta al tile que digamos en D, en la posición BC
     306.  00:847D                      ; entrada: 	BC (posición a pintar en el mapa),D (qué se va a pintar el esa posición)
     307.  00:847D                      ; salida: 	-
     308.  00:847D                      ; toca:		A
     309.  00:847D                      pinta_tile_suelto:	
     310.  00:847D  DB 99               	IN		 A,(REGEST)		;leer registro de estado (recomendado)
     311.  00:847F  79                  	LD		 A,C			;primero byte bajo	
     312.  00:8480  D3 99               	OUT		(REGEST),A
     313.  00:8482  78                  	LD		 A,B			;después byte alto  ********************** preguntar a Fernando cómo que byte bajo es B
     314.  00:8483  F6 40               	OR		1000000b		;+64
     315.  00:8485  D3 99               	OUT		(REGEST),A
     316.  00:8487                      	
     317.  00:8487  7A                  	LD		A,D
     318.  00:8488  D3 98               	OUT		(REGESCVDP),A	;escribe A en VRAM en la posición indicada por los dos OUT anteriores
     319.  00:848A                      fin_pinta_tile_suelto:
     320.  00:848A  C9                  	RET
     321.  00:848B                      
     322.  00:848B                      
     323.  00:848B                      
     324.  00:848B                      
     325.  00:848B                      
     326.  00:848B                      ;;=====================================================
     327.  00:848B                      ;;MIRA_PINTA ENERGIA
     328.  00:848B                      ;;=====================================================	
     329.  00:848B                      ; función: 	actualiza el nivel de energia en la parte de puntuación
     330.  00:848B                      ; nota:		el cuadrado más bajo de ejergía siempre estará pintado... se obviará
     331.  00:848B                      ; entrada: 	prota.energia, array_aux_energia
     332.  00:848B                      ; salida: 	-
     333.  00:848B                      ; toca:		ninguno porque usa EXX
     334.  00:848B                      
     335.  00:848B                      ; nota importante... lo mismo interesa hacer esto con un array para comparar y un bucle
     336.  00:848B                      
     337.  00:848B                      mira_pinta_energia:
     338.  00:848B  D9                  	EXX							;por si acaso guardo el contenido de HL (si veo que no es necesario guardarlo lo quito) uso esto en vez de push por el nº ciclos
     339.  00:848C                      	
     340.  00:848C  3A E8 AA            	LD		 A,(prota_energia) 	;para las comparaciones A variable (actual) y B fijo (limites)
     341.  00:848F                      
     342.  00:848F  0E 00               	LD		 C,TILENEGRO		;para agilizar asignaciones en vez de un valor cte uso otro registro
     343.  00:8491                      pinta_ener:
     344.  00:8491                      pinta_ener_tile_8:
     345.  00:8491  21 00 AB            	LD		HL,ultimo_pos_array_aux_energia	;coloco puntero en array e iré decrementando
     346.  00:8494  06 D9               	LD		 B,TILEENERG8
     347.  00:8496  B8                  	CP		 B
     348.  00:8497  38 04               	JR		C,pinta_ener_tile_8_negro
     349.  00:8499  36 0E               	LD		(HL),TILEMAPVERD
     350.  00:849B  18 01               	JR		pinta_ener_tile_7
     351.  00:849D                      pinta_ener_tile_8_negro:
     352.  00:849D  71                  	LD		(HL),C
     353.  00:849E                      
     354.  00:849E                      pinta_ener_tile_7:
     355.  00:849E  2B                  	DEC		HL
     356.  00:849F  06 BA               	LD		 B,TILEENERG7
     357.  00:84A1  B8                  	CP		 B
     358.  00:84A2  38 04               	JR		C,pinta_ener_tile_7_negro
     359.  00:84A4  36 0E               	LD		(HL),TILEMAPVERD
     360.  00:84A6  18 01               	JR		pinta_ener_tile_6
     361.  00:84A8                      pinta_ener_tile_7_negro:
     362.  00:84A8  71                  	LD		(HL),C
     363.  00:84A9                      
     364.  00:84A9                      pinta_ener_tile_6:
     365.  00:84A9  2B                  	DEC		HL
     366.  00:84AA  06 9B               	LD		 B,TILEENERG6
     367.  00:84AC  B8                  	CP		 B
     368.  00:84AD  38 04               	JR		C,pinta_ener_tile_6_negro
     369.  00:84AF  36 0E               	LD		(HL),14
     370.  00:84B1  18 01               	JR		pinta_ener_tile_5
     371.  00:84B3                      pinta_ener_tile_6_negro:
     372.  00:84B3  71                  	LD		(HL),C
     373.  00:84B4                      
     374.  00:84B4                      pinta_ener_tile_5:
     375.  00:84B4  2B                  	DEC		HL
     376.  00:84B5  06 7C               	LD		 B,TILEENERG5
     377.  00:84B7  B8                  	CP		 B
     378.  00:84B8  38 04               	JR		C,pinta_ener_tile_5_negro
     379.  00:84BA  36 0E               	LD		(HL),TILEMAPVERD
     380.  00:84BC  18 01               	JR		pinta_ener_tile_4
     381.  00:84BE                      pinta_ener_tile_5_negro:
     382.  00:84BE  71                  	LD		(HL),C
     383.  00:84BF                      
     384.  00:84BF                      pinta_ener_tile_4:
     385.  00:84BF  2B                  	DEC		HL
     386.  00:84C0  06 5D               	LD		 B,TILEENERG4
     387.  00:84C2  B8                  	CP		 B
     388.  00:84C3  38 04               	JR		C,pinta_ener_tile_4_negro
     389.  00:84C5  36 0F               	LD		(HL),TILEMAPAMAR
     390.  00:84C7  18 01               	JR		pinta_ener_tile_3
     391.  00:84C9                      pinta_ener_tile_4_negro:
     392.  00:84C9  71                  	LD		(HL),C
     393.  00:84CA                      	
     394.  00:84CA                      pinta_ener_tile_3:
     395.  00:84CA  2B                  	DEC		HL
     396.  00:84CB  06 3E               	LD		 B,TILEENERG3
     397.  00:84CD  B8                  	CP		 B
     398.  00:84CE  38 04               	JR		C,pinta_ener_tile_3_negro
     399.  00:84D0  36 0F               	LD		(HL),TILEMAPAMAR
     400.  00:84D2  18 01               	JR		pinta_ener_tile_2
     401.  00:84D4                      pinta_ener_tile_3_negro:
     402.  00:84D4  71                  	LD		(HL),C
     403.  00:84D5                      
     404.  00:84D5                      pinta_ener_tile_2:
     405.  00:84D5  2B                  	DEC		HL
     406.  00:84D6  06 1F               	LD		 B,TILEENERG2
     407.  00:84D8  B8                  	CP		 B
     408.  00:84D9  38 04               	JR		C,pinta_ener_tile_2_negro
     409.  00:84DB  36 10               	LD		(HL),TILEMAPROJO
     410.  00:84DD  18 01               	JR		fin_mira_pinta_energia		;siempre estará pintado el cuadro mínimo
     411.  00:84DF                      pinta_ener_tile_2_negro:
     412.  00:84DF  71                  	LD		(HL),C
     413.  00:84E0                      
     414.  00:84E0                      fin_mira_pinta_energia:
     415.  00:84E0  D9                  	EXX
     416.  00:84E1  C9                  	RET
     417.  00:84E2                      
     418.  00:84E2                      
     419.  00:84E2                      ;;=====================================================
     420.  00:84E2                      ;;PINTA_ENERGIA
     421.  00:84E2                      ;;=====================================================	
     422.  00:84E2                      ; función: 	actualiza el mapa de tiles para que en el próximo refresco se pinte la barra de energia actual
     423.  00:84E2                      ; entrada: 	array_aux_energia
     424.  00:84E2                      ; toca:		todo
     425.  00:84E2                      pinta_energia:
     426.  00:84E2  CD 8B 84            	CALL	mira_pinta_energia
     427.  00:84E5                      	
     428.  00:84E5  21 F9 AA            	LD		HL, array_aux_energia
     429.  00:84E8  11 88 1A            	LD		DE, TILMAP + POSENERG 	;inicio posición en el mapa de tiles de las vidas
     430.  00:84EB  01 08 00            	LD		BC, NMAXVIDREL			;hay 8 posiciones para vidas/reliquias o espacios en negro si no tiene 8 vidas/reliquias
     431.  00:84EE  C3 5C 00            	JP		LDIRVM
     432.  00:84F1                      fin_pinta_energia:
     433.  00:84F1                      
     434.  00:84F1                      
     435.  00:84F1                      
     436.  00:84F1                      ;;=====================================================
     437.  00:84F1                      ;;BORRA_MAPA
     438.  00:84F1                      ;;=====================================================	
     439.  00:84F1                      ; función: 	pone todas las habitaciones del mapa a negro (los tiles del mapa los rellena con un array a 0 - caracter en negro)
     440.  00:84F1                      ; entrada: 	array_aux_mapa_limpiar
     441.  00:84F1                      ; salida: 	-
     442.  00:84F1                      ; toca:		AF
     443.  00:84F1                      borra_mapa:
     444.  00:84F1  D9                  	EXX
     445.  00:84F2                      	
     446.  00:84F2  21 01 AB            	LD		HL,array_aux_mapa_limpiar
     447.  00:84F5  11 F8 1A            	LD		DE,TILMAP + POSMAPLIN1 	;inicio posición en el mapa de tiles de la primera fila del mapa
     448.  00:84F8  01 07 00            	LD		BC,NHABNIVEL			;cada nivel son 7 filas con 7 habitaciones "posibles"
     449.  00:84FB  CD 5C 00            	CALL	LDIRVM
     450.  00:84FE                      	
     451.  00:84FE  21 01 AB            	LD		HL,array_aux_mapa_limpiar
     452.  00:8501  11 D8 1A            	LD		DE,TILMAP + POSMAPLIN2
     453.  00:8504  01 07 00            	LD		BC,NHABNIVEL
     454.  00:8507  CD 5C 00            	CALL	LDIRVM
     455.  00:850A                      
     456.  00:850A  21 01 AB            	LD		HL,array_aux_mapa_limpiar
     457.  00:850D  11 B8 1A            	LD		DE,TILMAP + POSMAPLIN3
     458.  00:8510  01 07 00            	LD		BC,NHABNIVEL
     459.  00:8513  CD 5C 00            	CALL	LDIRVM
     460.  00:8516                      
     461.  00:8516  21 01 AB            	LD		HL,array_aux_mapa_limpiar	
     462.  00:8519  11 98 1A            	LD		DE,TILMAP + POSMAPLIN4
     463.  00:851C  01 07 00            	LD		BC,NHABNIVEL
     464.  00:851F  CD 5C 00            	CALL	LDIRVM
     465.  00:8522                      
     466.  00:8522  21 01 AB            	LD		HL,array_aux_mapa_limpiar	
     467.  00:8525  11 78 1A            	LD		DE,TILMAP + POSMAPLIN5
     468.  00:8528  01 07 00            	LD		BC,NHABNIVEL
     469.  00:852B  CD 5C 00            	CALL	LDIRVM
     470.  00:852E                      
     471.  00:852E  21 01 AB            	LD		HL,array_aux_mapa_limpiar	
     472.  00:8531  11 58 1A            	LD		DE,TILMAP + POSMAPLIN6
     473.  00:8534  01 07 00            	LD		BC,NHABNIVEL
     474.  00:8537  CD 5C 00            	CALL	LDIRVM
     475.  00:853A                      
     476.  00:853A  21 01 AB            	LD		HL,array_aux_mapa_limpiar	
     477.  00:853D  11 38 1A            	LD		DE,TILMAP + POSMAPLIN7
     478.  00:8540  01 07 00            	LD		BC,NHABNIVEL
     479.  00:8543  CD 5C 00            	CALL	LDIRVM
     480.  00:8546                      	
     481.  00:8546  D9                  	EXX
     482.  00:8547                      fin_borra_mapa:
     483.  00:8547  C9                  	RET
     484.  00:8548                      
     485.  00:8548                      
     486.  00:8548                      
     487.  00:8548                      
     488.  00:8548                      
     489.  00:8548                      
     490.  00:8548                      
     491.  00:8548                      ;;=====================================================
     492.  00:8548                      ;;POSICIONA_EN_MAPA
     493.  00:8548                      ;;=====================================================	
     494.  00:8548                      ; función: 	en el mapa de marcadores de la derecha/abajo marca un cuadro en gris o con un muñeco
     495.  00:8548                      ;			según el valor de prota.posición pinta entrá un muñeco y por donde vaya pasando el prota
     496.  00:8548                      ;			quedará en gris
     497.  00:8548                      ; entrada: 	elemento_pintar_mapa  A , prota_pos_mapy, prota_pos_mapx
     498.  00:8548                      ; salida: 	-
     499.  00:8548                      ; toca:		todos
     500.  00:8548                      posiciona_en_mapa:
     501.  00:8548                      	;#0238 es la posición en mapa de tiles de la esquina superior izquierda del mapa (569 en decimal)
     502.  00:8548  21 38 1A            	LD		HL, TILMAP + POSMAPA;pos inicial
     503.  00:854B                      	
     504.  00:854B                      	;ahora se le calcula la fila a pintar ya que va de abajo a arriba y no como en el mapa + columna
     505.  00:854B                      .sumar_fila:
     506.  00:854B  3A E7 AA            	LD		 A, (prota_pos_mapy)
     507.  00:854E  FE 01               	CP		 1
     508.  00:8550  28 2A               	JR		 Z, .fila_1
     509.  00:8552  3A E7 AA            	LD		 A, (prota_pos_mapy)
     510.  00:8555  FE 02               	CP		 2
     511.  00:8557  28 2A               	JR		 Z, .fila_2
     512.  00:8559  3A E7 AA            	LD		 A, (prota_pos_mapy)
     513.  00:855C  FE 03               	CP		 3
     514.  00:855E  28 2A               	JR		 Z, .fila_3
     515.  00:8560  3A E7 AA            	LD		 A, (prota_pos_mapy)
     516.  00:8563  FE 04               	CP		 4
     517.  00:8565  28 2A               	JR		 Z, .fila_4
     518.  00:8567  3A E7 AA            	LD		 A, (prota_pos_mapy)
     519.  00:856A  FE 05               	CP		 5
     520.  00:856C  28 2A               	JR		 Z, .fila_5
     521.  00:856E  3A E7 AA            	LD		 A, (prota_pos_mapy)
     522.  00:8571  FE 06               	CP		 6
     523.  00:8573  28 2A               	JR		 Z, .sumar_columna
     524.  00:8575                      	;no consulto la 0 porque si no es ninguna de las anteriores es 0 y por tanto sería un jr fila_0
     525.  00:8575                      	
     526.  00:8575                      .fila_0:
     527.  00:8575  11 C0 00            	LD		DE, 192
     528.  00:8578  19                  	ADD		HL, DE			;nota: se que repito el ADD pero la otra opción es inicializar DE y ya tarda mucho la funicón (es por velicidad)
     529.  00:8579  C3 9F 85            	JP		.sumar_columna
     530.  00:857C                      .fila_1:
     531.  00:857C  11 A0 00            	LD		DE, 160
     532.  00:857F  19                  	ADD		HL, DE
     533.  00:8580  C3 9F 85            	JP		.sumar_columna
     534.  00:8583                      .fila_2:
     535.  00:8583  11 80 00            	LD		DE, 128
     536.  00:8586  19                  	ADD		HL, DE
     537.  00:8587  C3 9F 85            	JP		.sumar_columna
     538.  00:858A                      .fila_3:
     539.  00:858A  11 60 00            	LD		DE, 96
     540.  00:858D  19                  	ADD		HL, DE
     541.  00:858E  C3 9F 85            	JP		.sumar_columna
     542.  00:8591                      .fila_4:
     543.  00:8591  11 40 00            	LD		DE, 64
     544.  00:8594  19                  	ADD		HL, DE
     545.  00:8595  C3 9F 85            	JP		.sumar_columna
     546.  00:8598                      .fila_5:
     547.  00:8598  11 20 00            	LD		DE, 32
     548.  00:859B  19                  	ADD		HL, DE
     549.  00:859C  C3 9F 85            	JP		.sumar_columna
     550.  00:859F                      .fila_6:
     551.  00:859F                      	;pongo fila_6 por poner ya que si es la fila 6 equiv. a primera fila del mapa y por tanto no suma fila
     552.  00:859F                      	
     553.  00:859F                      	
     554.  00:859F                      .sumar_columna:
     555.  00:859F  3A E6 AA            	LD 		 A, (prota_pos_mapx) ;POS X
     556.  00:85A2  16 00               	LD		 D, 0
     557.  00:85A4  5F                  	LD		 E, A
     558.  00:85A5  19                  	ADD		HL, DE
     559.  00:85A6                      	
     560.  00:85A6                      	;resultado en BC para usar en la función pinta_tile_suelto
     561.  00:85A6  44                  	LD		 B, H
     562.  00:85A7  4D                  	LD		 C, L
     563.  00:85A8                      	
     564.  00:85A8                      	;terminado de fijar la coordenada recuperamos a para ver el tipo
     565.  00:85A8  3A 08 AB            	LD		 A, (elemento_pintar_mapa)
     566.  00:85AB  FE 09               	CP		 TILEGRISM
     567.  00:85AD  CA B5 85            	JP		 Z, pinta_pos_mapa_vacio
     568.  00:85B0  16 13               	LD		 D, TILEPROTAM
     569.  00:85B2  C3 B7 85            	JP		fin_pinta_pos_mapa
     570.  00:85B5                      pinta_pos_mapa_vacio:
     571.  00:85B5  16 09               	LD		 D, TILEGRISM	
     572.  00:85B7                      
     573.  00:85B7                      fin_pinta_pos_mapa:
     574.  00:85B7  C3 7D 84            	JP		pinta_tile_suelto
     575.  00:85BA                      fin_posiciona_en_mapa:
     576.  00:85BA                      
     577.  00:85BA                      
     578.  00:85BA                      
     579.  00:85BA                      
     580.  00:85BA                      ;;=====================================================
     581.  00:85BA                      ;;EFECTO_IMAGEN_TIRA_RELIQUIA
     582.  00:85BA                      ;;=====================================================	
     583.  00:85BA                      ; función: 	hace que el fondo de la pantalla parpadee N veces
     584.  00:85BA                      ; entrada: 	actualiza_reliquias_sn
     585.  00:85BA                      ; salida: 	-
     586.  00:85BA                      ; toca: 	todo
     587.  00:85BA                      efecto_imagen_tira_reliquia:
     588.  00:85BA  3E 14               	LD		 A, 20;RETARDOREL
     589.  00:85BC  47                  	LD		 B, A
     590.  00:85BD                      
     591.  00:85BD                      .parpadea_fondo:
     592.  00:85BD  C5                  	PUSH	BC
     593.  00:85BE  21 CD AA            	LD		HL, color_bomba1
     594.  00:85C1  CD E1 82            	CALL	color_pantalla
     595.  00:85C4                      	
     596.  00:85C4                      	;~ PUSH	BC
     597.  00:85C4                      	;~ LD		 A, 255
     598.  00:85C4                      	;~ LD		 B, A
     599.  00:85C4                      ;~ .bucle_de_espera:
     600.  00:85C4                      	;~ NOP
     601.  00:85C4                      	;~ DJNZ	 .bucle_de_espera
     602.  00:85C4                      	;~ POP		BC
     603.  00:85C4  76                  	HALT
     604.  00:85C5                      
     605.  00:85C5                      	
     606.  00:85C5  21 D0 AA            	LD		HL, color_bomba2
     607.  00:85C8  CD E1 82            	CALL	color_pantalla
     608.  00:85CB  C1                  	POP		BC
     609.  00:85CC  10 EF               	DJNZ	.parpadea_fondo
     610.  00:85CE                      	
     611.  00:85CE  21 CA AA            	LD		HL, color_base
     612.  00:85D1  C3 E1 82            	JP		color_pantalla
     613.  00:85D4                      fin_efecto_imagen_tira_reliquia:
     614.  00:85D4                      
     615.  00:85D4                      
     616.  00:85D4                      
     617.  00:85D4                      
     618.  00:85D4                      ;=====================================================
     619.  00:85D4                      ;;PINTA_ARRAY
     620.  00:85D4                      ;;=====================================================	
     621.  00:85D4                      ;;funcion:  (pinta el mismo tile) se le pasa un array con posiciones de tiles y coordenadas x e y y los pinta en screen 2
     622.  00:85D4                      ;;entrada:	wordaux1 (pos inicio sc2 donde pintar) y wordaux2 (puntero al array a pintar), BC (posición en tilemap) , D filas y E columnas
     623.  00:85D4                      ;;salida:	-
     624.  00:85D4                      ;;importante: necesita de una variable wordaux1 tipo WD (wordaux1: 	DW	0)
     625.  00:85D4                      ;; ejemplo llamada:
     626.  00:85D4                      	;~ LD		HL,array_tiles					;guardo puntero al array a pintar (como psar por referencia)
     627.  00:85D4                      	;~ LD		(wordaux2),HL					;en la variable wordaux2
     628.  00:85D4                      	;~ LD		HL,SC2MAP + 256 + 32			;calcula posición en tilemap
     629.  00:85D4                      	;~ LD		(wordaux1),HL					;guarda valor pos tilemap en wordaux1
     630.  00:85D4                      	;~ LD		B,H								;coloca posición tilemap BC
     631.  00:85D4                      	;~ LD		C,L
     632.  00:85D4                      	;~ LD		D,2								;nº de filas ahora byteaux1
     633.  00:85D4                      	;~ LD		E,3								;nº de columnas ahora byteaux2
     634.  00:85D4                      	;~ CALL	pinta_array
     635.  00:85D4                      
     636.  00:85D4                      pinta_array:
     637.  00:85D4  08                  	EX		AF, AF'
     638.  00:85D5                      	
     639.  00:85D5  3A 18 86            	LD		 A, (byteaux1)
     640.  00:85D8  57                  	LD		 D, A
     641.  00:85D9  3A 19 86            	LD		 A, (byteaux2)
     642.  00:85DC  5F                  	LD		 E, A
     643.  00:85DD                      	
     644.  00:85DD  2A 14 86            	LD		HL, (wordaux1)
     645.  00:85E0  44                  	LD		 B, H							;coloca posición tilemap BC
     646.  00:85E1  4D                  	LD		 C, L
     647.  00:85E2                      	
     648.  00:85E2                      	;contamos con que la posición "global" en el tilemap está ya en BC
     649.  00:85E2                      	;y el puntero al array a pintar en wordaux2 y la posición en tilemap sc2 en wordaux1
     650.  00:85E2                      	;inicializa
     651.  00:85E2  DB 99               	IN		 A,(REGEST)		;leer registro de estado (recomendado)
     652.  00:85E4                      	
     653.  00:85E4                      	;coloca puntero para pintar tile según BC
     654.  00:85E4  79                  	LD		 A,C			;primero byte bajo	
     655.  00:85E5  D3 99               	OUT		(REGEST),A
     656.  00:85E7  78                  	LD		 A,B			;después byte alto  ********************** preguntar a Fernando cómo que byte bajo es B
     657.  00:85E8  F6 40               	OR		1000000b		;+64
     658.  00:85EA  D3 99               	OUT		(REGEST),A
     659.  00:85EC                      
     660.  00:85EC                      	
     661.  00:85EC  2A 16 86            	LD		HL,(wordaux2)	;HL es lo que se pintará y le he pasado el puntero del array tilemap a pintar
     662.  00:85EF                      .pa_pinta_fila:
     663.  00:85EF  43                  	LD		 B,E
     664.  00:85F0                      .pa_pinta_columnas: 		;finta la fila (pintando las columnas)
     665.  00:85F0  7E                  	LD		 A,(HL)
     666.  00:85F1  D3 98               	OUT		(REGESCVDP),A	;escribe A en VRAM en la posición indicada por los dos OUT anteriores
     667.  00:85F3  23                  	INC		HL
     668.  00:85F4  10 FA               	DJNZ	.pa_pinta_columnas
     669.  00:85F6                      	
     670.  00:85F6                      	;no es una solución elegante lo de repetir código pero queda claro
     671.  00:85F6                      	;por si hay otra fila
     672.  00:85F6  E5                  	PUSH	HL
     673.  00:85F7  2A 14 86            	LD		HL,(wordaux1)
     674.  00:85FA  01 20 00            	LD		BC,32
     675.  00:85FD  09                  	ADD		HL,BC
     676.  00:85FE  22 14 86            	LD		(wordaux1),HL
     677.  00:8601  44                  	LD		B,H
     678.  00:8602  4D                  	LD		C,L
     679.  00:8603  E1                  	POP		HL
     680.  00:8604                      	
     681.  00:8604  79                  	LD		 A,C			;primero byte bajo	
     682.  00:8605  D3 99               	OUT		(REGEST),A
     683.  00:8607  78                  	LD		 A,B			;después byte alto 
     684.  00:8608  F6 40               	OR		1000000b		;+64
     685.  00:860A  D3 99               	OUT		(REGEST),A
     686.  00:860C                      	
     687.  00:860C                      	;si hay otra fila repite
     688.  00:860C  15                  	DEC		 D
     689.  00:860D  7A                  	LD		 A,D		;¿hay otra fila?
     690.  00:860E  B7                  	OR		 A
     691.  00:860F  C4 EF 85            	CALL	NZ,.pa_pinta_fila
     692.  00:8612                      	
     693.  00:8612  08                  	EX		AF, AF'
     694.  00:8613                      fin_pinta_array:
     695.  00:8613  C9                  	RET
     696.  00:8614                      ;;variables asocidas a la función pinta_array
     697.  00:8614                      ;; por de pronto la dejo aquí
     698.  00:8614  00 00               wordaux1:		DW	0	;almacena la posición en el tilemap 0 al 675
     699.  00:8616  00 00               wordaux2:		DW	0	;almacena puntero a array de tiles (posiciones en realidad) a pintar (posiciones repetidas en los 2 primeros bancos)
     700.  00:8618  00                  byteaux1:		DB	0	;nº filas Registro D
     701.  00:8619  00                  byteaux2:		DB	0	;nº columnas Registro E
     702.  00:861A                      
     703.  00:861A                      
     704.  00:861A                      
     705.  00:861A                      
     706.  00:861A                      ;;=====================================================
     707.  00:861A                      ;;INICIALIZA_ANTORCHAS
     708.  00:861A                      ;;=====================================================	
     709.  00:861A                      ; función: 	inicializa las variables de estructuras de las antorchas
     710.  00:861A                      ; entrada: 	antorchas, array_antorcha
     711.  00:861A                      ; salida: 	
     712.  00:861A                      ; toca:		HL, IX
     713.  00:861A                      inicializa_antorchas:
     714.  00:861A  DD 21 09 AB         	LD		IX, antorchas
     715.  00:861E  DD 36 00 00         	LD		(IX), INACTIVA
     716.  00:8622  21 10 AB            	LD		HL, array_antorcha
     717.  00:8625  DD 74 01            	LD		(IX + 1), H
     718.  00:8628  DD 75 02            	LD		(IX + 2), L
     719.  00:862B  DD 36 03 88         	LD		(IX + 3), POSANTOR1
     720.  00:862F  DD 36 04 97         	LD		(IX + 4), POSANTOR2
     721.  00:8633  DD 36 05 00         	LD		(IX + 5), 0
     722.  00:8637  DD 36 06 FF         	LD		(IX + 6), RESETLLAMA
     723.  00:863B                      fin_inicializa_antorchas:
     724.  00:863B  C9                  	RET
     725.  00:863C                      
     726.  00:863C                      
     727.  00:863C                      ;;=====================================================
     728.  00:863C                      ;;INICIALIZA_esqueletos
     729.  00:863C                      ;;=====================================================	
     730.  00:863C                      ; función: 	inicializa las variables de estructuras de los esqueletos
     731.  00:863C                      ; entrada: 	esqueletos, array_esqueletos
     732.  00:863C                      ; salida: 	
     733.  00:863C                      ; toca:		HL, IX
     734.  00:863C                      inicializa_esqueletos:
     735.  00:863C  DD 21 13 AB         	LD		IX, esqueletos
     736.  00:8640  DD 36 00 00         	LD		(IX), INACTIVA
     737.  00:8644  21 1A AB            	LD		HL, array_esqueleto
     738.  00:8647  DD 74 01            	LD		(IX + 1), H
     739.  00:864A  DD 75 02            	LD		(IX + 2), L
     740.  00:864D  DD 36 03 88         	LD		(IX + 3), POSESQUEL1
     741.  00:8651  DD 36 04 95         	LD		(IX + 4), POSESQUEL2
     742.  00:8655  DD 36 05 00         	LD		(IX + 5), 0
     743.  00:8659  DD 36 06 19         	LD		(IX + 6), RESETESQUEL
     744.  00:865D                      fin_inicializa_esqueletos:
     745.  00:865D  C9                  	RET
     746.  00:865E                      	
     747.  00:865E                      
     748.  00:865E                      ;;=====================================================
     749.  00:865E                      ;;PINTA_ANTORCHAS
     750.  00:865E                      ;;=====================================================	
     751.  00:865E                      ; función: 	pinta las antorchas con valores base
     752.  00:865E                      ; entrada: 	antorchas, array_antorcha
     753.  00:865E                      ; salida: 	
     754.  00:865E                      ; toca:		HL
     755.  00:865E                      pinta_extra_fondo:
     756.  00:865E  DD 21 09 AB         	LD		IX, antorchas
     757.  00:8662                      .examina_sihay_antorchas
     758.  00:8662                      	;hay que pintarlas?
     759.  00:8662  3A B6 A7            	LD		 A, (habitacion_extras)
     760.  00:8665  CB 47               	BIT		 0, A
     761.  00:8667  C2 71 86            	JP		NZ, .hayantorchas			;si el bit 0 de extras es 0 no se pintan antorchas
     762.  00:866A  DD 36 00 00         	LD		(IX), INACTIVA
     763.  00:866E  C3 9A 86            	JP		.examina_sihay_esqueletos
     764.  00:8671                      	
     765.  00:8671                      .hayantorchas:
     766.  00:8671  DD 36 00 01         	LD		(IX), ACTIVA
     767.  00:8675                      	;pinta antorcha izquierdda
     768.  00:8675  DD 66 01            	LD		 H, (IX + 1)
     769.  00:8678  DD 6E 02            	LD		 L, (IX + 2)
     770.  00:867B  22 16 86            	LD		(wordaux2), HL				;guarda pos array en wordaux2
     771.  00:867E                      	
     772.  00:867E  21 88 18            	LD		HL, TILMAP + POSANTOR1		;calcula posición en tilemap
     773.  00:8681  22 14 86            	LD		(wordaux1), HL				;guarda valor pos tilemap en wordaux1
     774.  00:8684                      
     775.  00:8684  3E 03               	LD		 A, 3						;nº de filas	
     776.  00:8686  32 18 86            	LD		(byteaux1), A
     777.  00:8689  3E 01               	LD		 A, 1						;nº de columnas
     778.  00:868B  32 19 86            	LD		(byteaux2), A				
     779.  00:868E                      	
     780.  00:868E  CD D4 85            	CALL	pinta_array
     781.  00:8691                      	
     782.  00:8691                      	;pinta antorcha derecha
     783.  00:8691  21 97 18            	LD		HL, TILMAP + POSANTOR2		;calcula posición en tilemap
     784.  00:8694  22 14 86            	LD		(wordaux1), HL				;guarda valor pos tilemap en wordaux1
     785.  00:8697                      	
     786.  00:8697  C3 D4 85            	JP		pinta_array 				;no ecesita CALL ya que la subrutina termina aquí
     787.  00:869A                      	
     788.  00:869A                      .examina_sihay_esqueletos
     789.  00:869A  DD 21 13 AB         	LD		IX, esqueletos
     790.  00:869E                      	;hay que pintarlos?
     791.  00:869E  3A B5 A7            	LD		 A, (habitacion_actual)
     792.  00:86A1  CB 6F               	BIT		 5, A
     793.  00:86A3  C2 AB 86            	JP		NZ, .hayesqueletos			;si el bit 0 de extras es 0 no se pintan antorchas
     794.  00:86A6  DD 36 00 00         	LD		(IX), INACTIVA
     795.  00:86AA  C9                  	RET									;no hay que pintarlo. no hay que continuar
     796.  00:86AB                      
     797.  00:86AB                      .hayesqueletos
     798.  00:86AB  DD 36 00 01         	LD		(IX), ACTIVA
     799.  00:86AF                      	;pinta antorcha izquierdda
     800.  00:86AF  DD 66 01            	LD		 H, (IX + 1)
     801.  00:86B2  DD 6E 02            	LD		 L, (IX + 2)
     802.  00:86B5  22 16 86            	LD		(wordaux2), HL				;guarda pos array en wordaux2
     803.  00:86B8                      	
     804.  00:86B8  21 88 18            	LD		HL, TILMAP + POSESQUEL1		;calcula posición en tilemap
     805.  00:86BB  22 14 86            	LD		(wordaux1), HL				;guarda valor pos tilemap en wordaux1
     806.  00:86BE                      
     807.  00:86BE  3E 04               	LD		 A, 4						;nº de filas	
     808.  00:86C0  32 18 86            	LD		(byteaux1), A
     809.  00:86C3  3E 03               	LD		 A, 3						;nº de columnas
     810.  00:86C5  32 19 86            	LD		(byteaux2), A				
     811.  00:86C8                      	
     812.  00:86C8  CD D4 85            	CALL	pinta_array
     813.  00:86CB                      	
     814.  00:86CB                      	;pinta antorcha derecha
     815.  00:86CB  21 95 18            	LD		HL, TILMAP + POSESQUEL2		;calcula posición en tilemap
     816.  00:86CE  22 14 86            	LD		(wordaux1), HL				;guarda valor pos tilemap en wordaux1
     817.  00:86D1                      	
     818.  00:86D1  C3 D4 85            	JP		pinta_array 				;no ecesita CALL ya que la subrutina termina aquí
     819.  00:86D4                      fin_pinta_extra_fondo:
     820.  00:86D4  C9                  	RET
     821.  00:86D5                      
     822.  00:86D5                      
     823.  00:86D5                      
     824.  00:86D5                      ;;=====================================================
     825.  00:86D5                      ;;ACTUALIZA_ELEMENTOS_FONDO
     826.  00:86D5                      ;;=====================================================	
     827.  00:86D5                      ; función: 	de los elementos que pueda haber en el fondo de la pared (pantalla) actualiza si procede
     828.  00:86D5                      ;			actualmente: antorchas y a futuro esqueletos
     829.  00:86D5                      ; entrada: 	
     830.  00:86D5                      ; salida: 	
     831.  00:86D5                      ; toca:		A
     832.  00:86D5                      actualiza_elementos_fondo:
     833.  00:86D5                      .examina_antorchas:
     834.  00:86D5  DD 21 09 AB         	LD		IX, antorchas
     835.  00:86D9  DD 7E 00            	LD		 A, (IX)
     836.  00:86DC  B7                  	OR		 A
     837.  00:86DD  CA E3 86            	JP 	 	 Z, .examina_esqueletos
     838.  00:86E0                      	
     839.  00:86E0  CD EF 86            	CALL	flip_llamas_antorchas
     840.  00:86E3                      .examina_esqueletos:
     841.  00:86E3  DD 21 13 AB         	LD		IX, esqueletos
     842.  00:86E7  DD 7E 00            	LD		 A, (IX)
     843.  00:86EA  B7                  	OR		 A
     844.  00:86EB  C8                  	RET	 	 Z
     845.  00:86EC                      	
     846.  00:86EC  C3 4C 87            	JP		flip_calavera_esqueletos
     847.  00:86EF                      fin_actualiza_elementos_fondo:
     848.  00:86EF                      
     849.  00:86EF                      
     850.  00:86EF                      
     851.  00:86EF                      
     852.  00:86EF                      ;;=====================================================
     853.  00:86EF                      ;;FLIP_LLAMAS_ANTORCHAS
     854.  00:86EF                      ;;=====================================================	
     855.  00:86EF                      ; función: 	modifica las llamas de las antorchas con los tipos que hay
     856.  00:86EF                      ; entrada: 	
     857.  00:86EF                      ; salida: 	
     858.  00:86EF                      ; toca:		
     859.  00:86EF                      flip_llamas_antorchas:
     860.  00:86EF  DD 21 09 AB         	LD		IX, antorchas
     861.  00:86F3                      	;tiene que cambiar de llama?
     862.  00:86F3  DD 7E 06            	LD		 A, (IX + 6)
     863.  00:86F6  3D                  	DEC		 A
     864.  00:86F7  DD 77 06            	LD		 (IX + 6), A
     865.  00:86FA                      	;no
     866.  00:86FA  C0                  	RET		NZ
     867.  00:86FB                      	;si
     868.  00:86FB  C5                  	PUSH	BC
     869.  00:86FC  D5                  	PUSH	DE
     870.  00:86FD                      	
     871.  00:86FD  DD 36 06 FF         	LD		(IX + 6), RESETLLAMA	
     872.  00:8701                      	
     873.  00:8701                      	;qué llama toca?
     874.  00:8701  DD 7E 05            	LD		 A, (IX + 5)
     875.  00:8704  B7                  	OR		 A
     876.  00:8705  CA 29 87            	JP		 Z, .llama_par
     877.  00:8708                      .llama_impar
     878.  00:8708                      	;cambio a llama par
     879.  00:8708  AF                   	XOR		 A
     880.  00:8709  DD 77 05            	LD		(IX + 5), A
     881.  00:870C                      	;pinto llamas
     882.  00:870C  01 00 18            	LD		BC, TILMAP
     883.  00:870F  3E 88               	LD		 A, POSANTOR1
     884.  00:8711  CD C1 82            	CALL	suma_A_BC
     885.  00:8714  16 C4               	LD		 D, MAPLLAMA1
     886.  00:8716  CD 7D 84            	CALL	pinta_tile_suelto
     887.  00:8719                      	
     888.  00:8719  01 00 18            	LD		BC, TILMAP
     889.  00:871C  3E 97               	LD		 A, POSANTOR2
     890.  00:871E  CD C1 82            	CALL	suma_A_BC
     891.  00:8721  16 C5               	LD		 D, MAPLLAMA2
     892.  00:8723  CD 7D 84            	CALL	pinta_tile_suelto	
     893.  00:8726  C3 48 87            	JP		fin_flip_llamas_antorchas
     894.  00:8729                      	
     895.  00:8729                      .llama_par
     896.  00:8729                      	;cambio a llama par
     897.  00:8729  3E 01                	LD		 A, 1
     898.  00:872B  DD 77 05            	LD		(IX + 5), A
     899.  00:872E                      	;pinto llamas
     900.  00:872E  01 00 18            	LD		BC, TILMAP
     901.  00:8731  3E 88               	LD		 A, POSANTOR1
     902.  00:8733  CD C1 82            	CALL	suma_A_BC
     903.  00:8736  16 C5               	LD		 D, MAPLLAMA2
     904.  00:8738  CD 7D 84            	CALL	pinta_tile_suelto
     905.  00:873B                      	
     906.  00:873B  01 00 18            	LD		BC, TILMAP
     907.  00:873E  3E 97               	LD		 A, POSANTOR2
     908.  00:8740  CD C1 82            	CALL	suma_A_BC
     909.  00:8743  16 C4               	LD		 D, MAPLLAMA1
     910.  00:8745  CD 7D 84            	CALL	pinta_tile_suelto
     911.  00:8748                      
     912.  00:8748                      fin_flip_llamas_antorchas:
     913.  00:8748                      	;restauro los balores de los registros tocados antes
     914.  00:8748  D1                  	POP		DE
     915.  00:8749  C1                  	POP		BC
     916.  00:874A  F1                  	POP		AF
     917.  00:874B                      
     918.  00:874B  C9                  	RET
     919.  00:874C                      
     920.  00:874C                      
     921.  00:874C                      ;;=====================================================
     922.  00:874C                      ;;FLIP_CALAVERA_ESQUELETOS
     923.  00:874C                      ;;=====================================================	
     924.  00:874C                      ; función: 	modifica las calaveras de los esqueletos
     925.  00:874C                      ; entrada: 	
     926.  00:874C                      ; salida: 	
     927.  00:874C                      ; toca:		TODOS.... muy importante DE
     928.  00:874C                      flip_calavera_esqueletos:
     929.  00:874C  DD 21 13 AB         	LD		IX, esqueletos
     930.  00:8750                      	
     931.  00:8750                      	;tiene que cambiar de calavera?
     932.  00:8750  DD 7E 06            	LD		 A, (IX + ESTRUCTURA_ESQUELETO.cont_sig_escena)
     933.  00:8753  3D                  	DEC		 A
     934.  00:8754  DD 77 06            	LD		 (IX + ESTRUCTURA_ESQUELETO.cont_sig_escena), A
     935.  00:8757                      	;no
     936.  00:8757  C0                  	RET		NZ
     937.  00:8758                      	;si
     938.  00:8758  DD 36 06 19         	LD		(IX + ESTRUCTURA_ESQUELETO.cont_sig_escena), RESETESQUEL		;resetea contador de nueve escena
     939.  00:875C                      	
     940.  00:875C  CD 7A 87            	CALL	actualiza_escena_calavera
     941.  00:875F                      
     942.  00:875F                      	;pinto calaveras
     943.  00:875F  01 00 18            	LD		BC, TILMAP
     944.  00:8762  3E A9               	LD		 A, POSCALAVE1
     945.  00:8764  CD C1 82            	CALL	suma_A_BC
     946.  00:8767  D5                  	PUSH	DE
     947.  00:8768  56                  	LD		 D, (HL)
     948.  00:8769  CD 7D 84            	CALL	pinta_tile_suelto
     949.  00:876C                      	
     950.  00:876C  01 00 18            	LD		BC, TILMAP
     951.  00:876F  3E B6               	LD		 A, POSCALAVE2
     952.  00:8771  CD C1 82            	CALL	suma_A_BC
     953.  00:8774  E1                  	POP		HL
     954.  00:8775  56                  	LD		 D, (HL)
     955.  00:8776  C3 7D 84            	JP		pinta_tile_suelto	
     956.  00:8779                      fin_flip_calavera_esqueletos:
     957.  00:8779  00                  var_aux_calavera	DB	0;
     958.  00:877A                      
     959.  00:877A                      
     960.  00:877A                      ;;=====================================================
     961.  00:877A                      ;;ACTUALIZA_ESCENA_CALAVERA
     962.  00:877A                      ;;=====================================================	
     963.  00:877A                      ; función: 	modifica las siguiente calavera a mostrar
     964.  00:877A                      ; entrada: 	
     965.  00:877A                      ; salida: 	DE (iportante porque se usa fuera) y ESTRUCTURA_ESQUELETO.escena
     966.  00:877A                      ; toca:		TODOS.... muy importante DE
     967.  00:877A                      actualiza_escena_calavera:
     968.  00:877A                      	;consulta_escena
     969.  00:877A  DD 7E 05            	LD		 A, (IX + ESTRUCTURA_ESQUELETO.escena)
     970.  00:877D  32 79 87            	LD		(var_aux_calavera), A
     971.  00:8780  B7                  	OR		 A
     972.  00:8781  C2 86 87            	JP		 NZ, .decrementa_escenas
     973.  00:8784  3E 04               	LD		 A, RESETESCENAESQUEL
     974.  00:8786                      .decrementa_escenas
     975.  00:8786  3D                  	DEC		 A
     976.  00:8787                      .fin_consulta_escena
     977.  00:8787  DD 77 05            	LD		 (IX + ESTRUCTURA_ESQUELETO.escena), A
     978.  00:878A                      	
     979.  00:878A  21 26 AB            	LD		HL, lista_escenas_calavera
     980.  00:878D  3A 79 87            	LD		 A, (var_aux_calavera)
     981.  00:8790  CD C7 82            	CALL	suma_A_HL
     982.  00:8793                      	
     983.  00:8793  54                  	LD		 D, H
     984.  00:8794  5D                  	LD		 E, L
     985.  00:8795                      fin_actualiza_escena_calavera:
     986.  00:8795  C9                  	RET
     987.  00:8796                      
     249   00:8796                      	
     250   00:8796                      	include "subr_puertas.asm"
       1.  00:8796                      ;;=====================================================
       2.  00:8796                      ;;SUBRUTINAS RELACIONADAS CON LAS PUERTAS
       3.  00:8796                      ;;=====================================================
       4.  00:8796                      
       5.  00:8796                      
       6.  00:8796                      ;;=====================================================
       7.  00:8796                      ;;VARIABLES
       8.  00:8796                      ;;=====================================================
       9.  00:8796                      
      10.  00:8796                      ;; arrays con mapa de tiles de las puertas
      11.  00:8796                      array_puerta_arriba:
      12.  00:8796  03 01 01 03         	DB	3,1,1,3
      13.  00:879A  01 01 01 01         	DB	1,1,1,1
      14.  00:879E  01 01 01 01         	DB	1,1,1,1
      15.  00:87A2  01 01 01 01         	DB	1,1,1,1
      16.  00:87A6  01 01 01 01         	DB	1,1,1,1
      17.  00:87AA                      
      18.  00:87AA                      array_puerta_derecha:
      19.  00:87AA  01 03 03            	DB	1,3,3
      20.  00:87AD  01 01 03            	DB	1,1,3
      21.  00:87B0  01 01 01            	DB	1,1,1
      22.  00:87B3  01 01 01            	DB	1,1,1
      23.  00:87B6  01 01 01            	DB	1,1,1
      24.  00:87B9  02 01 01            	DB	2,1,1
      25.  00:87BC  04 02 01            	DB	4,2,1
      26.  00:87BF                      	
      27.  00:87BF                      array_puerta_abajo:			
      28.  00:87BF  01 01 01 01         	DB	1,1,1,1
      29.  00:87C3                      
      30.  00:87C3                      array_puerta_izquierda:
      31.  00:87C3  03 03 01            	DB	3,3,1
      32.  00:87C6  03 01 01            	DB	3,1,1
      33.  00:87C9  01 01 01            	DB	1,1,1
      34.  00:87CC  01 01 01            	DB	1,1,1
      35.  00:87CF  01 01 01            	DB	1,1,1
      36.  00:87D2  01 01 02            	DB	1,1,2
      37.  00:87D5  01 02 04            	DB	1,2,4
      38.  00:87D8                      
      39.  00:87D8                      array_escalera:
      40.  00:87D8                      	DB	5,5,5,5,5,5,5,5
      40.  00:87D8  05 05 05 05 05 05 05 05 
      41.  00:87E0                      	DB	5,0,0,0,1,1,1,5
      41.  00:87E0  05 00 00 00 01 01 01 05 
      42.  00:87E8                      	DB	5,0,0,0,1,1,1,5
      42.  00:87E8  05 00 00 00 01 01 01 05 
      43.  00:87F0                      	DB	5,0,0,6,6,6,6,5
      43.  00:87F0  05 00 00 06 06 06 06 05 
      44.  00:87F8                      	DB	5,0,6,6,6,6,6,5
      44.  00:87F8  05 00 06 06 06 06 06 05 
      45.  00:8800                      	DB	5,6,6,6,6,6,6,5
      45.  00:8800  05 06 06 06 06 06 06 05 
      46.  00:8808                      
      47.  00:8808                      
      48.  00:8808                      
      49.  00:8808                      lista_puertas:
      50.  00:8808  00 (13)             puerta_arriba:		DS		ESTRUCTURA_PUERTA
      51.  00:8815  00 (13)             puerta_derecha:		DS		ESTRUCTURA_PUERTA
      52.  00:8822  00 (13)             puerta_abajo:		DS		ESTRUCTURA_PUERTA
      53.  00:882F  00 (13)             puerta_izquierda:	DS		ESTRUCTURA_PUERTA
      54.  00:883C  00 (13)             puerta_escalera:	DS		ESTRUCTURA_PUERTA
      55.  00:8849                      
      56.  00:8849                      datos_puertas:
      57.  00:8849                      datos_puerta_escalera:
      58.  00:8849  00                  					DB		#00;0		; 0 no activa <>0 activo
      59.  00:884A  80                  					DB		#80;128		;punto x de la puerta para cuando se dispare encima
      60.  00:884B  30                  					DB		#30;48		;punto y de la puerta para cuando se dispare encima
      61.  00:884C  20                  					DB		#20;32		;radio x de la puerta para cuando se dispare encima
      62.  00:884D  18                  					DB		#18;24		;radio y de la puerta para cuando se dispare encima
      63.  00:884E  C4 88               					DW		accion_puerta_arriba;función para acción de cada tipo de puerta
      64.  00:8850  D8 87               					DW		array_escalera		;puntero al array con los tiles de las puertas
      65.  00:8852  6C 18               					DW		TILMAP + POSESCALERA
      66.  00:8854  06                  					DB		6			;alto/filas
      67.  00:8855  08                  					DB		8			;ancho/columnas
      68.  00:8856                      
      69.  00:8856                      datos_puerta_arriba:
      70.  00:8856  00                  					DB		#00;0		;0 no activa <>0 activo
      71.  00:8857  80                  					DB		#80;128		;punto x de la puerta para cuando se dispare encima
      72.  00:8858  34                  					DB		#34;52		;punto y de la puerta para cuando se dispare encima
      73.  00:8859  10                  					DB		#10;16		;radio x de la puerta para cuando se dispare encima
      74.  00:885A  14                  					DB		#14;20		;radio y de la puerta para cuando se dispare encima
      75.  00:885B  C4 88               					DW		accion_puerta_arriba	;función para acción de cada tipo de puerta
      76.  00:885D  96 87               					DW		array_puerta_arriba		;puntero al array con los tiles de las puertas
      77.  00:885F  8E 18               					DW		TILMAP + POSPUERARRI
      78.  00:8861  05                  					DB		5			;alto/filas
      79.  00:8862  04                  					DB		4			;ancho/columnas
      80.  00:8863                      
      81.  00:8863                      datos_puerta_derecha:
      82.  00:8863  00                  					DB		#00;0		;0 no activa <>0 activo
      83.  00:8864  EC                  					DB		#EC;236		;punto x de la puerta para cuando se dispare encima
      84.  00:8865  54                  					DB		#54;84		;punto y de la puerta para cuando se dispare encima
      85.  00:8866  0C                  					DB		#0C;12		;radio x de la puerta para cuando se dispare encima
      86.  00:8867  14                  					DB		#14;20		;radio y de la puerta para cuando se dispare encima
      87.  00:8868  E7 88               					DW		accion_puerta_derecha	;función para acción de cada tipo de puerta
      88.  00:886A  AA 87               					DW		array_puerta_derecha	;puntero al array con los tiles de las puertas
      89.  00:886C  FC 18               					DW		TILMAP + POSPUERDERE
      90.  00:886E  07                  					DB		7			;alto/filas
      91.  00:886F  03                  					DB		3			;ancho/columnas
      92.  00:8870                      					
      93.  00:8870                      datos_puerta_abajo:
      94.  00:8870  00                  					DB		#00;0		;0 no activa <>0 activo
      95.  00:8871  80                  					DB		#80;128		;punto x de la puerta para cuando se dispare encima
      96.  00:8872  7C                  					DB		#7C;124		;punto y de la puerta para cuando se dispare encima
      97.  00:8873  05                  					DB		#05;5		;radio x de la puerta para cuando se dispare encima  **********************************
      98.  00:8874  10                  					DB		#10;16		;radio y de la puerta para cuando se dispare encima
      99.  00:8875  F4 88               					DW		accion_puerta_abajo		;función para acción de cada tipo de puerta
     100.  00:8877  BF 87               					DW		array_puerta_abajo		;puntero al array con los tiles de las puertas
     101.  00:8879  EE 19               					DW		TILMAP + POSPUERABAJ
     102.  00:887B  01                  					DB		1			;alto/filas
     103.  00:887C  04                  					DB		4			;ancho/columnas
     104.  00:887D                      
     105.  00:887D                      datos_puerta_izquierda:
     106.  00:887D  00                  					DB		#00;0		;0 no activa <>0 activo
     107.  00:887E  18                  					DB		#18;24		;punto x de la puerta para cuando se dispare encima
     108.  00:887F  54                  					DB		#54;84		;punto y de la puerta para cuando se dispare encima
     109.  00:8880  0C                  					DB		#0C;12		;radio x de la puerta para cuando se dispare encima
     110.  00:8881  14                  					DB		#14;20		;radio y de la puerta para cuando se dispare encima
     111.  00:8882  17 89               					DW		accion_puerta_izquierda	;función para acción de cada tipo de puerta
     112.  00:8884  C3 87               					DW		array_puerta_izquierda	;puntero al array con los tiles de las puertas
     113.  00:8886  E1 18               					DW		TILMAP + POSPUERIZQU
     114.  00:8888  07                  					DB		7			;alto/filas
     115.  00:8889  03                  					DB		3			;ancho/columnas
     116.  00:888A                      
     117.  00:888A                      
     118.  00:888A                      
     119.  00:888A                      ;;=====================================================
     120.  00:888A                      ;;SUBRUTINAS
     121.  00:888A                      ;;=====================================================
     122.  00:888A                      
     123.  00:888A                      
     124.  00:888A                      ;;=====================================================
     125.  00:888A                      ;;INICIALIZA_PUERTAS
     126.  00:888A                      ;;=====================================================	
     127.  00:888A                      ; función: 	inicializa las variables de estructuras de ayuda del array lista_puertas
     128.  00:888A                      ; entrada: 	*********************datos_delasdistintasayudas, variable estructura_ayuda_ayudaquesea
     129.  00:888A                      ; salida: 	lista_ayudas
     130.  00:888A                      ; toca:		-
     131.  00:888A                      inicializa_puertas:
     132.  00:888A  E5                  	PUSH	HL
     133.  00:888B  C5                  	PUSH	BC
     134.  00:888C  D5                  	PUSH	DE
     135.  00:888D                      	
     136.  00:888D                      	;inicializa puerta escalera
     137.  00:888D  21 49 88            	LD		HL, datos_puerta_escalera	;origen
     138.  00:8890  11 3C 88            	LD		DE, puerta_escalera			;destino
     139.  00:8893  CD BE 88            	CALL	carga_datos_puerta
     140.  00:8896                      
     141.  00:8896                      	;inicializa puerta arriba
     142.  00:8896  21 56 88            	LD		HL, datos_puerta_arriba		;origen
     143.  00:8899  11 08 88            	LD		DE, puerta_arriba			;destino
     144.  00:889C  CD BE 88            	CALL	carga_datos_puerta
     145.  00:889F                      	
     146.  00:889F                      	;inicializa puerta derecha
     147.  00:889F  21 63 88            	LD		HL, datos_puerta_derecha	;origen
     148.  00:88A2  11 15 88            	LD		DE, puerta_derecha			;destino
     149.  00:88A5  CD BE 88            	CALL	carga_datos_puerta
     150.  00:88A8                      	
     151.  00:88A8                      	;inicializa puerta abajo
     152.  00:88A8  21 70 88            	LD		HL, datos_puerta_abajo		;origen
     153.  00:88AB  11 22 88            	LD		DE, puerta_abajo			;destino
     154.  00:88AE  CD BE 88            	CALL	carga_datos_puerta
     155.  00:88B1                      	
     156.  00:88B1                      	;inicializa puerta izquierda
     157.  00:88B1  21 7D 88            	LD		HL, datos_puerta_izquierda	;origen
     158.  00:88B4  11 2F 88            	LD		DE, puerta_izquierda		;destino
     159.  00:88B7  CD BE 88            	CALL	carga_datos_puerta
     160.  00:88BA                      	
     161.  00:88BA  D1                  	POP		DE
     162.  00:88BB  C1                  	POP		BC
     163.  00:88BC  E1                  	POP		HL
     164.  00:88BD                      fin_inicializa_puertas:
     165.  00:88BD  C9                  	RET
     166.  00:88BE                      
     167.  00:88BE                      
     168.  00:88BE                      
     169.  00:88BE                      ;;=====================================================
     170.  00:88BE                      ;;CARGA_DATOS_PUERTA
     171.  00:88BE                      ;;=====================================================	
     172.  00:88BE                      ; función: 	carga los datos de la puerta de una variable con los datos de la puerta
     173.  00:88BE                      ; entrada
     174.  00:88BE                      ;  hl: origen de datos
     175.  00:88BE                      ;  de: destino de datos
     176.  00:88BE                      ; salida: 	-
     177.  00:88BE                      ; toca:		HL, DE, BC
     178.  00:88BE                      carga_datos_puerta:
     179.  00:88BE  01 0D 00            	LD		BC, ESTRUCTURA_PUERTA ;bytes a mover (el nombre de la estructura equivale al tamaño de la estructura en bytes)
     180.  00:88C1  ED B0               	LDIR
     181.  00:88C3                      fin_carga_datos_puerta:
     182.  00:88C3  C9                  	RET
     183.  00:88C4                      
     184.  00:88C4                      ;;=====================================================
     185.  00:88C4                      ;;ACCION_PUERTA_ARRIBA
     186.  00:88C4                      ;;=====================================================	
     187.  00:88C4                      ; función: 	
     188.  00:88C4                      ; entrada: 	
     189.  00:88C4                      ; salida: 	
     190.  00:88C4                      accion_puerta_arriba:
     191.  00:88C4  CD B2 82            	CALL	pinta_blanco_mapa
     192.  00:88C7                      	
     193.  00:88C7  3A E7 AA            	LD		 A, (prota_pos_mapy)
     194.  00:88CA  3C                  	INC		 A
     195.  00:88CB                      	
     196.  00:88CB  FE 07               	CP		 7
     197.  00:88CD  C2 E1 88            	JP		NZ, .no_cambia_nivel
     198.  00:88D0                      .si_cambia_nivel:	
     199.  00:88D0                      	;aquí hay que poner texto de cambio de nivel  ;***************************************************************
     200.  00:88D0                      
     201.  00:88D0                      	;reseteo fila
     202.  00:88D0  AF                  	XOR		 A
     203.  00:88D1  32 E7 AA            	LD		(prota_pos_mapy), A
     204.  00:88D4                      	;incremento nivel
     205.  00:88D4  3A E3 AA            	LD		 A, (prota_nivel)
     206.  00:88D7  3C                  	INC		 A
     207.  00:88D8  32 E3 AA            	LD		(prota_nivel), A
     208.  00:88DB                      	;reflejo en pantalla cambio de nivel
     209.  00:88DB  CD BA 82            	CALL	cambio_nivel
     210.  00:88DE  C3 E4 88            	JP		.fin_cambia_nivel
     211.  00:88E1                      .no_cambia_nivel:
     212.  00:88E1  32 E7 AA            	LD		 (prota_pos_mapy), A
     213.  00:88E4                      .fin_cambia_nivel:
     214.  00:88E4  C3 9B 82            	JP		entra_habitacion
     215.  00:88E7                      fin_accion_puerta_arriba:
     216.  00:88E7                      
     217.  00:88E7                      
     218.  00:88E7                      ;;=====================================================
     219.  00:88E7                      ;;ACCION_PUERTA_DERECHA
     220.  00:88E7                      ;;=====================================================	
     221.  00:88E7                      ; función: 	
     222.  00:88E7                      ; entrada: 	
     223.  00:88E7                      ; salida: 	
     224.  00:88E7                      accion_puerta_derecha:
     225.  00:88E7  CD B2 82            	CALL	pinta_blanco_mapa
     226.  00:88EA                      	
     227.  00:88EA  3A E6 AA            	LD		 A, (prota_pos_mapx)
     228.  00:88ED  3C                  	INC		 A
     229.  00:88EE  32 E6 AA            	LD		 (prota_pos_mapx), A
     230.  00:88F1                      
     231.  00:88F1  C3 9B 82            	JP		entra_habitacion
     232.  00:88F4                      fin_accion_puerta_derecha:
     233.  00:88F4                      	
     234.  00:88F4                      
     235.  00:88F4                      ;;=====================================================
     236.  00:88F4                      ;;ACCION_PUERTA_ABAJO
     237.  00:88F4                      ;;=====================================================	
     238.  00:88F4                      ; función: 	
     239.  00:88F4                      ; entrada: 	
     240.  00:88F4                      ; salida: 	
     241.  00:88F4                      accion_puerta_abajo:
     242.  00:88F4  CD B2 82            	CALL	pinta_blanco_mapa
     243.  00:88F7                      	
     244.  00:88F7  3A E7 AA            	LD		 A, (prota_pos_mapy)
     245.  00:88FA  3D                  	DEC		 A
     246.  00:88FB                      	;~ OR		 A
     247.  00:88FB                      	;~ JP		NC, .no_cambia_nivel				;no entiendo por qué no funciona... preguntar fernando
     248.  00:88FB  FE FF               	CP		-1
     249.  00:88FD  20 12               	JR		NZ, .no_cambia_nivel
     250.  00:88FF                      .si_cambia_nivel:	
     251.  00:88FF                      	;aquí hay que poner texto de cambio de nivel  ;***************************************************************
     252.  00:88FF                      
     253.  00:88FF                      	;reseteo fila
     254.  00:88FF  3E 06               	LD		 A, 6
     255.  00:8901  32 E7 AA            	LD		(prota_pos_mapy), A
     256.  00:8904                      	;decremento nivel
     257.  00:8904  3A E3 AA            	LD		 A, (prota_nivel)
     258.  00:8907  3D                  	DEC		 A
     259.  00:8908  32 E3 AA            	LD		(prota_nivel), A
     260.  00:890B                      	;reflejo en pantalla cambio de nivel
     261.  00:890B  CD BA 82            	CALL	cambio_nivel
     262.  00:890E  C3 14 89            	JP		.fin_cambia_nivel
     263.  00:8911                      .no_cambia_nivel:
     264.  00:8911  32 E7 AA            	LD		 (prota_pos_mapy), A
     265.  00:8914                      .fin_cambia_nivel:
     266.  00:8914  C3 9B 82            	JP		entra_habitacion
     267.  00:8917                      fin_accion_puerta_abajo:
     268.  00:8917                      	
     269.  00:8917                      	
     270.  00:8917                      ;;=====================================================
     271.  00:8917                      ;;ACCION_PUERTA_IZQUIERDA
     272.  00:8917                      ;;=====================================================	
     273.  00:8917                      ; función: 	
     274.  00:8917                      ; entrada: 	
     275.  00:8917                      ; salida: 	
     276.  00:8917                      accion_puerta_izquierda:
     277.  00:8917  CD B2 82            	CALL	pinta_blanco_mapa
     278.  00:891A                      
     279.  00:891A  3A E6 AA            	LD		 A, (prota_pos_mapx)
     280.  00:891D  3D                  	DEC		 A
     281.  00:891E  32 E6 AA            	LD		 (prota_pos_mapx), A
     282.  00:8921                      
     283.  00:8921  C3 9B 82            	JP		entra_habitacion
     284.  00:8924                      fin_accion_puerta_izquierda:
     285.  00:8924                      	
     286.  00:8924                      
     287.  00:8924                      ;;=====================================================
     288.  00:8924                      ;;PINTA_PUERTAS
     289.  00:8924                      ;;=====================================================	
     290.  00:8924                      ; función: 	examina A y mira si tiene que pintar puertas de los lados, arriba o abrajo o las escaleras (o no)
     291.  00:8924                      ; entrada: 	habitacion_actual 1 escalera 1 puerta arriba 1 pu der 1 pu aba 1 pu izq (si es 0 pinta pared)
     292.  00:8924                      ; salida: 	-
     293.  00:8924                      ; toca:		todo
     294.  00:8924                      pinta_puertas:
     295.  00:8924  CD 17 82            	CALL	localiza_info_habitacion	;busca qué puertas debe pintar y lo mete en habitación_actual
     296.  00:8927                      
     297.  00:8927  CD 5D 8A            	CALL	desactiva_todas_puertas
     298.  00:892A                      
     299.  00:892A                      	;examina puerta arrba
     300.  00:892A  3A B5 A7            	LD		 A, (habitacion_actual)
     301.  00:892D  CB 5F               	BIT		 3, A					
     302.  00:892F  CA 3D 89            	JP		 Z, .fin_puerta_arriba		;tiene puerta arriba?
     303.  00:8932  CD 81 89            		CALL	pinta_puerta_arr		;pinto puerta ;si es de la fila 7 los datos de la pueta de arriba serán los de una escalera
     304.  00:8935  DD 21 08 88         		LD		IX, puerta_arriba		
     305.  00:8939  DD 36 00 01         		LD		(IX), 1					;activo puerta
     306.  00:893D                      .fin_puerta_arriba:
     307.  00:893D                      
     308.  00:893D                      	;examina puerta derecha
     309.  00:893D  3A B5 A7            	LD		 A, (habitacion_actual)
     310.  00:8940  CB 57               	BIT		 2, A
     311.  00:8942  CA 50 89            	JP		 Z, .fin_puerta_derecha		;tiene puerta derecha?
     312.  00:8945  CD 9A 89            		CALL	pinta_puerta_der		;pinto puerta
     313.  00:8948  DD 21 15 88         		LD		IX, puerta_derecha
     314.  00:894C  DD 36 00 01         		LD		(IX), 1					;activo puerta
     315.  00:8950                      .fin_puerta_derecha:
     316.  00:8950                      
     317.  00:8950                      	;examina puerta abajo
     318.  00:8950  3A B5 A7            	LD		 A, (habitacion_actual)
     319.  00:8953  CB 4F               	BIT		 1, A
     320.  00:8955  CA 63 89            	JP		 Z, .fin_puerta_abajo		;tiene puerta derecha?
     321.  00:8958  CD 77 89            		CALL	pinta_puerta_aba		;pinto puerta
     322.  00:895B  DD 21 22 88         		LD		IX, puerta_abajo	
     323.  00:895F  DD 36 00 01         		LD		(IX), 1					;activo puerta
     324.  00:8963                      .fin_puerta_abajo:
     325.  00:8963                      
     326.  00:8963                      	;examina puerta izquierda
     327.  00:8963  3A B5 A7            	LD		 A, (habitacion_actual)
     328.  00:8966  CB 47               	BIT		 0, A
     329.  00:8968  CA 76 89            	JP		 Z, fin_pinta_puertas		;tiene puerta derecha?
     330.  00:896B  CD A4 89            		CALL	pinta_puerta_izq		;pinto puerta
     331.  00:896E  DD 21 2F 88         		LD		IX, puerta_izquierda	
     332.  00:8972  DD 36 00 01         		LD		(IX), 1					;activo puerta
     333.  00:8976                      fin_pinta_puertas:
     334.  00:8976  C9                  	RET
     335.  00:8977                      
     336.  00:8977                      
     337.  00:8977                      ;;=====================================================
     338.  00:8977                      ;;PINTA_PUERTA_ABA
     339.  00:8977                      ;;=====================================================	
     340.  00:8977                      ; función: 	pinta la puerta de abajo
     341.  00:8977                      ; entrada: 	puerta_abajo
     342.  00:8977                      ; salida: 	-
     343.  00:8977                      ; toca:		A, HL,BC, DE
     344.  00:8977                      pinta_puerta_aba:
     345.  00:8977  DD 21 22 88         	LD		IX, puerta_abajo
     346.  00:897B  CD AE 89            	CALL	actualiza_variables_pinta_array
     347.  00:897E                      		
     348.  00:897E  C3 D4 85            	JP		pinta_array
     349.  00:8981                      fin_pinta_puerta_aba:
     350.  00:8981                      
     351.  00:8981                      
     352.  00:8981                      ;;=====================================================
     353.  00:8981                      ;;PINTA_PUERTA_ARR
     354.  00:8981                      ;;=====================================================	
     355.  00:8981                      ; función: 	pinta la puerta de arriba
     356.  00:8981                      ; entrada: 	puerta_arriba
     357.  00:8981                      ; salida: 	-
     358.  00:8981                      ; toca:		IX
     359.  00:8981                      pinta_puerta_arr:
     360.  00:8981  3A E7 AA            	LD		 A, (prota_pos_mapy)
     361.  00:8984  FE 06               	CP		 6								;en la fila 6 la única puerta arriba será una escalera
     362.  00:8986  C2 90 89            	JP		NZ, .pinta_puerta_normal
     363.  00:8989                      .pinta_puerta_escalera
     364.  00:8989  DD 21 3C 88         		LD		IX, puerta_escalera
     365.  00:898D  C3 94 89            		JP		.fin_si
     366.  00:8990                      .pinta_puerta_normal
     367.  00:8990  DD 21 08 88         		LD		IX, puerta_arriba	
     368.  00:8994                      .fin_si
     369.  00:8994  CD AE 89            	CALL	actualiza_variables_pinta_array
     370.  00:8997  C3 D4 85            	JP		pinta_array
     371.  00:899A                      fin_pinta_puerta_arr:
     372.  00:899A                      
     373.  00:899A                      
     374.  00:899A                      ;;=====================================================
     375.  00:899A                      ;;PINTA_PUERTA_DER
     376.  00:899A                      ;;=====================================================	
     377.  00:899A                      ; función: 	pinta la puerta de la derecha
     378.  00:899A                      ; entrada: 	puerta_derecha
     379.  00:899A                      ; salida: 	-
     380.  00:899A                      ; toca:		HL,BC, DE
     381.  00:899A                      pinta_puerta_der:
     382.  00:899A  DD 21 15 88         	LD		IX, puerta_derecha
     383.  00:899E  CD AE 89            	CALL	actualiza_variables_pinta_array
     384.  00:89A1                      	
     385.  00:89A1  C3 D4 85            	JP		pinta_array
     386.  00:89A4                      fin_pinta_puerta_der:
     387.  00:89A4                      
     388.  00:89A4                      	
     389.  00:89A4                      ;;=====================================================
     390.  00:89A4                      ;;PINTA_PUERTA_IZQ
     391.  00:89A4                      ;;=====================================================	
     392.  00:89A4                      ; función: 	pinta la puerta de la izquierda
     393.  00:89A4                      ; entrada: 	puerta_izquierda
     394.  00:89A4                      ; salida: 	-
     395.  00:89A4                      ; toca:		HL,BC, DE
     396.  00:89A4                      pinta_puerta_izq:
     397.  00:89A4  DD 21 2F 88         	LD		IX, puerta_izquierda
     398.  00:89A8  CD AE 89            	CALL	actualiza_variables_pinta_array
     399.  00:89AB                      	
     400.  00:89AB  C3 D4 85            	JP		pinta_array
     401.  00:89AE                      fin_pinta_puerta_izq:
     402.  00:89AE                      
     403.  00:89AE                      
     404.  00:89AE                      ;;=====================================================
     405.  00:89AE                      ;;FIN_ACTUALIZA_VARIABLES_PINTA_ARRAY
     406.  00:89AE                      ;;=====================================================	
     407.  00:89AE                      ; función: 	como el código es el mismo en esta subrutia se actualizan los valores de wordaux2, wordaux1, byteaux1, byteaux2
     408.  00:89AE                      ; entrada: 	IX apuntando a la estructura de una puerta
     409.  00:89AE                      ; salida: 	-
     410.  00:89AE                      ; toca:		A,HL,BC, DE
     411.  00:89AE                      actualiza_variables_pinta_array:
     412.  00:89AE  DD 6E 07            	LD		 L, (IX + ESTRUCTURA_PUERTA.tiles_puerta)	;guardo puntero al array a pintar (como pasar por referencia)
     413.  00:89B1  DD 66 08            	LD		 H, (IX + ESTRUCTURA_PUERTA.tiles_puerta + 1)
     414.  00:89B4  22 16 86            	LD		(wordaux2), HL						;en la variable wordaux2
     415.  00:89B7                      	
     416.  00:89B7  DD 6E 09            	LD		 L, (IX + ESTRUCTURA_PUERTA.pos_en_tilemap)	;guardo puntero al array a pintar (como pasar por referencia)
     417.  00:89BA  DD 66 0A            	LD		 H, (IX + ESTRUCTURA_PUERTA.pos_en_tilemap + 1)
     418.  00:89BD  22 14 86            	LD		(wordaux1), HL						;guarda valor pos tilemap en wordaux1
     419.  00:89C0                      	
     420.  00:89C0  DD 7E 0B            	LD		 A, (IX + ESTRUCTURA_PUERTA.alto)	;nº de filas
     421.  00:89C3  32 18 86            	LD		(byteaux1), A
     422.  00:89C6                      	
     423.  00:89C6  DD 7E 0C            	LD		 A, (IX + ESTRUCTURA_PUERTA.ancho)	;nº de columnas
     424.  00:89C9  32 19 86            	LD		(byteaux2), A
     425.  00:89CC                      fin_actualiza_variables_pinta_array:
     426.  00:89CC  C9                  	RET
     427.  00:89CD                      
     428.  00:89CD                      
     429.  00:89CD                      
     430.  00:89CD                      ;;=====================================================
     431.  00:89CD                      ;;CHECK_COLISIONES_PUERTAS
     432.  00:89CD                      ;;=====================================================	
     433.  00:89CD                      ; función: 	examina si se ha disparado sobre ua puerta activa, si es así, ejecuta la acción correspondiente
     434.  00:89CD                      ; entrada: 	puerta_arriba, puerta_derecha, puerta_abajo, puerta_izquierda
     435.  00:89CD                      ; salida: 	-
     436.  00:89CD                      ; toca:		todo
     437.  00:89CD                      check_colisiones_puertas:
     438.  00:89CD                      .examina_puerta_arriba:
     439.  00:89CD  DD 21 08 88         	LD		IX, puerta_arriba
     440.  00:89D1  DD 7E 00            	LD		 A, (IX)
     441.  00:89D4  B7                  	OR		 A							;está activa esta puerta?
     442.  00:89D5  CA E3 89            	JP		 Z, .examina_puerta_derecha
     443.  00:89D8                      	
     444.  00:89D8  CD 2C 8A            	CALL	check_colision_puerta		;aquí ya es cosa de ver colisiones prota/puerta_izquierda
     445.  00:89DB                      	;recibe valor A
     446.  00:89DB  F6 00               	OR		 0							;hubo colisión?
     447.  00:89DD  CA E3 89            	JP		 Z, .examina_puerta_derecha	;no hubo colisión por lo que examina puerta siguiente
     448.  00:89E0                      	;hubo colisión
     449.  00:89E0                      	;EJECUTA ACCIÓN Y SALE DE LA RUTINA	
     450.  00:89E0  C3 20 8A            	JP		.ejecuta_accion_y_sale
     451.  00:89E3                      	
     452.  00:89E3                      .examina_puerta_derecha:
     453.  00:89E3  DD 21 15 88         	LD		IX, puerta_derecha
     454.  00:89E7  DD 7E 00            	LD		 A, (IX)
     455.  00:89EA  B7                  	OR		 A							;está activa esta puerta?
     456.  00:89EB  CA F9 89            	JP		 Z, .examina_puerta_abajo
     457.  00:89EE  CD 2C 8A            	CALL	check_colision_puerta		;aquí ya es cosa de ver colisiones prota/puerta_derecha
     458.  00:89F1                      	;recibe valor
     459.  00:89F1  F6 00               	OR		 0							;hubo colisión?
     460.  00:89F3  CA F9 89            	JP		 Z, .examina_puerta_abajo	;no hubo colisión por lo que examina puerta siguiente
     461.  00:89F6                      	;hubo colisión
     462.  00:89F6                      	;EJECUTA ACCIÓN Y SALE DE LA RUTINA
     463.  00:89F6  C3 20 8A            	JP		.ejecuta_accion_y_sale
     464.  00:89F9                      	
     465.  00:89F9                      .examina_puerta_abajo:
     466.  00:89F9  DD 21 22 88         	LD		IX, puerta_abajo
     467.  00:89FD  DD 7E 00            	LD		 A, (IX)
     468.  00:8A00  B7                  	OR		 A							;está activa esta puerta?
     469.  00:8A01  CA 0F 8A            	JP		 Z, .examina_puerta_izquierda
     470.  00:8A04  CD 2C 8A            	CALL	check_colision_puerta		;aquí ya es cosa de ver colisiones prota/puerta_izquierda
     471.  00:8A07                      	
     472.  00:8A07  F6 00               	OR		 0							;hubo colisión?
     473.  00:8A09  CA 0F 8A            	JP		 Z, .examina_puerta_izquierda;no hubo colisión por lo que examina puerta siguiente
     474.  00:8A0C                      	;hubo colisión
     475.  00:8A0C                      	;EJECUTA ACCIÓN Y SALE DE LA RUTINA
     476.  00:8A0C  C3 20 8A            	JP		.ejecuta_accion_y_sale
     477.  00:8A0F                      	
     478.  00:8A0F                      .examina_puerta_izquierda:
     479.  00:8A0F  DD 21 2F 88         	LD		IX, puerta_izquierda
     480.  00:8A13  DD 7E 00            	LD		 A, (IX)
     481.  00:8A16  B7                  	OR		 A							;está activa esta puerta?
     482.  00:8A17  CA 2B 8A            	JP		 Z, fin_check_colisiones_puertas
     483.  00:8A1A  CD 2C 8A            	CALL	check_colision_puerta		;aquí ya es cosa de ver colisiones prota/puerta_izquierda
     484.  00:8A1D                      	
     485.  00:8A1D  F6 00               	OR		 0							;hubo colisión?
     486.  00:8A1F  C8                  	RET		 Z							;es la última puerta a mirar, si no hubo colisión salimos
     487.  00:8A20                      	;hubo colisión
     488.  00:8A20                      	;EJECUTA ACCIÓN Y SALE DE LA RUTINA
     489.  00:8A20                      	;JP		.ejecuta_accion_y_sale ;no necesaria
     490.  00:8A20                      
     491.  00:8A20                      .ejecuta_accion_y_sale
     492.  00:8A20  21 2B 8A            	LD		HL, fin_check_colisiones_puertas ;se guarda dónde volver
     493.  00:8A23  E5                  	PUSH	HL
     494.  00:8A24                      	
     495.  00:8A24  DD 6E 05            	LD		 L, (IX + ESTRUCTURA_PUERTA.accion)
     496.  00:8A27  DD 66 06            	LD		 H, (IX + ESTRUCTURA_PUERTA.accion + 1)
     497.  00:8A2A  E9                  	JP		(HL)
     498.  00:8A2B                      fin_check_colisiones_puertas:
     499.  00:8A2B  C9                  	RET
     500.  00:8A2C                      
     501.  00:8A2C                      
     502.  00:8A2C                      ;;=====================================================
     503.  00:8A2C                      ;;CHECK_COLISION_PUERTA
     504.  00:8A2C                      ;;=====================================================	
     505.  00:8A2C                      ; función: 	revisa (con enemigos+ayudas o puertas según si la habitación ha sido recorrida o no) las variables para ver si se disparó sobre ellas
     506.  00:8A2C                      ; entrada: 	IX con el puntero a la puerta que se examina
     507.  00:8A2C                      ; salida: 	A (0 no hay colisión con puerta / 1 sí la hay)
     508.  00:8A2C                      ; toca:		HL,BC, DE
     509.  00:8A2C                      check_colision_puerta:
     510.  00:8A2C                      .deteccioncolision_paso1:
     511.  00:8A2C  FD 21 D3 AA         	LD		IY, prota	;IY punto de mira / IX puerta
     512.  00:8A30  FD 7E 00            	LD		 A, (IY + ESTRUCTURA_PUNTOMIRA.posx)
     513.  00:8A33  C6 08               	ADD		 8			;8-es fijo, offset del punto de mira ya que se mueve según la esquina superior izquierda y el centro del punto de mira está en el centro del sprite
     514.  00:8A35                      	
     515.  00:8A35                      	;ya tengo en A la coordenada X del centro del punto de mira					
     516.  00:8A35  DD 96 01            	SUB		(IX + ESTRUCTURA_PUERTA.posx)	;le resto el punto x en la puerta
     517.  00:8A38                      	
     518.  00:8A38  D2 3D 8A            	JP		NC, .deteccioncolision_paso2	;si no es negativo comparo con el radio
     519.  00:8A3B                      
     520.  00:8A3B  ED 44               	NEG										;si es negativo lo niego (valor absoluto)
     521.  00:8A3D                      	
     522.  00:8A3D                      .deteccioncolision_paso2:
     523.  00:8A3D  DD BE 03            	CP		(IX + ESTRUCTURA_PUERTA.radiox)	;comparo con el radio X de la puerta
     524.  00:8A40                      	
     525.  00:8A40  DA 45 8A            	JP		 C, .deteccioncolision_paso3	;SI NC la distancia es >= por lo que sale y no es necesario verificar nada más
     526.  00:8A43                      	
     527.  00:8A43  AF                  	XOR		 A								;el resultado es falso y se guarda en A y ya no hay que seguir coprobando
     528.  00:8A44  C9                  	RET
     529.  00:8A45                      	
     530.  00:8A45                      .deteccioncolision_paso3:					;la distancia X es válida, comprobamos la distancia Y
     531.  00:8A45  FD 7E 01            	LD		 A, (IY + ESTRUCTURA_PUNTOMIRA.posy)
     532.  00:8A48  C6 08               	ADD		 8								;le sumo el offset del punto de mira (8 es fijo)
     533.  00:8A4A                      
     534.  00:8A4A                      	;ya tengo en A la coordenada Y del centro del punto de mira					
     535.  00:8A4A  DD 96 02            	SUB		(IX + ESTRUCTURA_PUERTA.posy)	;le resto el punto y en la puerta
     536.  00:8A4D                      	
     537.  00:8A4D  D2 52 8A            	JP		NC, .deteccioncolision_paso4	;si no es negativo comparo con el radio
     538.  00:8A50                      
     539.  00:8A50  ED 44               	NEG										;si es negativo lo niego (valor absoluto)
     540.  00:8A52                      
     541.  00:8A52                      .deteccioncolision_paso4:
     542.  00:8A52  DD BE 04            	CP		(IX + ESTRUCTURA_PUERTA.radioy)	;comparo con el radio Y de la puerta
     543.  00:8A55                      
     544.  00:8A55  DA 5A 8A            	JP		 C, .deteccioncolision_paso5	;SI NC la distancia es >= por lo que sale y no es necesario verificar nada más
     545.  00:8A58                      	
     546.  00:8A58  AF                  	XOR		 A								;el resultado es falso y se guarda en A un 0 y al ser la 2º comprobación salimos
     547.  00:8A59  C9                  	RET
     548.  00:8A5A                      
     549.  00:8A5A                      .deteccioncolision_paso5:
     550.  00:8A5A  3E 01               	LD		 A, SI
     551.  00:8A5C                      fin_check_colision_puerta:
     552.  00:8A5C  C9                  	RET
     553.  00:8A5D                      
     554.  00:8A5D                      
     555.  00:8A5D                      
     556.  00:8A5D                      
     557.  00:8A5D                      	
     558.  00:8A5D                      ;;=====================================================
     559.  00:8A5D                      ;;DESACTIVA_TODAS_PUERTAS
     560.  00:8A5D                      ;;=====================================================	
     561.  00:8A5D                      ; función: 	desactiva todas las puertas (es más rápido todas que mirar cuál estaba activa en la habitación aanterior) y ya se activarán las que se muestren
     562.  00:8A5D                      ; entrada: 	puerta_arriba, puerta_derecha, puerta_abajo, puerta_izquierda
     563.  00:8A5D                      ; salida: 	las estructuras de la puertas (entrada) con el valor activo a 0 (PUERTAINACT)
     564.  00:8A5D                      ; toca:		IX
     565.  00:8A5D                      desactiva_todas_puertas:
     566.  00:8A5D  DD 21 08 88         	LD		IX, puerta_arriba		;desactivo_puerta arriba
     567.  00:8A61  DD 36 00 00         	LD		(IX), INACTIVA
     568.  00:8A65  DD 21 15 88         	LD		IX, puerta_derecha		;desactivo_puerta derecha
     569.  00:8A69  DD 36 00 00         	LD		(IX), INACTIVA
     570.  00:8A6D  DD 21 22 88         	LD		IX, puerta_abajo		;desactivo_puerta abajo
     571.  00:8A71  DD 36 00 00         	LD		(IX), INACTIVA
     572.  00:8A75  DD 21 2F 88         	LD		IX, puerta_izquierda	;desactivo_puerta izquierda
     573.  00:8A79  DD 36 00 00         	LD		(IX), INACTIVA
     574.  00:8A7D                      fin_desactiva_todas_puertas:
     575.  00:8A7D  C9                  	RET
     576.  00:8A7E                      
     251   00:8A7E                      	
     252   00:8A7E                      	include "subr_sprites.asm"
       1.  00:8A7E                      
       2.  00:8A7E                      ;;=====================================================
       3.  00:8A7E                      ;;SUBRUTINAS ENCARGADAS DE MANEJAR LOS SPRITES
       4.  00:8A7E                      ;;=====================================================	
       5.  00:8A7E                      
       6.  00:8A7E                      
       7.  00:8A7E                      ;; PREGUNTAR SI A FERNANDO SI ES MEJOR USAR LISTAS O ALGO PARA AHORRAR CÓDIGO
       8.  00:8A7E                      
       9.  00:8A7E                      
      10.  00:8A7E                      
      11.  00:8A7E                      
      12.  00:8A7E                      ;;=====================================================
      13.  00:8A7E                      ;;CARGA_PATRONES_SPRITES_NIVEL
      14.  00:8A7E                      ;;=====================================================	
      15.  00:8A7E                      ; función: 	examina el nivel y carga los patrones específicos necesarios
      16.  00:8A7E                      ; entrada: 	-
      17.  00:8A7E                      ; salida: 	-
      18.  00:8A7E                      ; toca: 	-
      19.  00:8A7E                      carga_patrones_sprites_nivel:
      20.  00:8A7E  CD 82 8A            	CALL 	carga_patrones_nivel_comunes
      21.  00:8A81                      	
      22.  00:8A81  C9                  	RET		;*********************
      23.  00:8A82                      	
      24.  00:8A82                      	
      25.  00:8A82                      	;POR AHORA ES TODO COMÚN ... CUANDO EL JUGADOR SE MUEVA LOS PATRONES SERÁN DEPENDIENDO DEL NIVEL
      26.  00:8A82                      	; O NO Y LO QUE SE HACE ES PERSONALIZAR LA PANTALLA USANDO LOS MISMOS PATRONES PERO PINTANDO DISTINTOS
      27.  00:8A82                      	; EN DISTINTOS SITIOS SEGÚN NIVEL
      28.  00:8A82                      	
      29.  00:8A82                      	;~ ;carga patrones no comunes
      30.  00:8A82                      	;~ LD		 A, (prota_nivel)
      31.  00:8A82                      	;~ OR		 A
      32.  00:8A82                      	;~ JP		 Z, carga_patrones_sprites_nivel donde esté el prota
      33.  00:8A82                      fin_carga_patrones_sprites_nivel:
      34.  00:8A82                      
      35.  00:8A82                      
      36.  00:8A82                      ;;=====================================================
      37.  00:8A82                      ;;CARGA_PATRONES_SPRITES_NIVEL_COMUNES
      38.  00:8A82                      ;;=====================================================	
      39.  00:8A82                      ; función: 	carga los patrones comunes en todos los niveles
      40.  00:8A82                      ; entrada: 	-
      41.  00:8A82                      ; salida: 	-
      42.  00:8A82                      ; toca: 	-
      43.  00:8A82                      carga_patrones_nivel_comunes:	
      44.  00:8A82  21 35 9E            	LD		HL, sprites_comunes
      45.  00:8A85  11 00 38            	LD		DE, SPRTBL
      46.  00:8A88  01 C0 00            	LD		BC, fin_sprites_comunes-sprites_comunes
      47.  00:8A8B  C3 5C 00            	JP		LDIRVM
      48.  00:8A8E                      fin_carga_patrones_nivel_comunes:
      49.  00:8A8E                      
      50.  00:8A8E                      
      51.  00:8A8E                      ;;=====================================================
      52.  00:8A8E                      ;;CARGA_PATRONES_SPRITES_NIVEL1
      53.  00:8A8E                      ;;=====================================================	
      54.  00:8A8E                      ; función: 	copia los patrones de los sprites que e van a usar en el nivel 1 en vram
      55.  00:8A8E                      ; entrada: 	-
      56.  00:8A8E                      ; salida: 	-
      57.  00:8A8E                      ; toca: 	-
      58.  00:8A8E                      carga_patrones_sprites_nivel1:
      59.  00:8A8E                      
      60.  00:8A8E                      	;~ ;sprite sprite_reliquia
      61.  00:8A8E                      	;~ LD		HL,sprite_reliquia
      62.  00:8A8E                      	;~ LD		DE,#3880
      63.  00:8A8E                      	;~ LD		BC,32				;32 bytes (sprites de 2 x 2)
      64.  00:8A8E                      	;~ CALL	LDIRVM
      65.  00:8A8E                      
      66.  00:8A8E                      fin_carga_patrones_sprites:
      67.  00:8A8E  C9                  	RET
      68.  00:8A8F                      
      69.  00:8A8F                      
      70.  00:8A8F                      ;;=====================================================
      71.  00:8A8F                      ;;ACTUALIZA_ARRAY_SPRITES_VRAM
      72.  00:8A8F                      ;;=====================================================	
      73.  00:8A8F                      ; función: 	copia el array con los valores de los sprites (pos, color, plano) en VRAM
      74.  00:8A8F                      ; entrada: 	-
      75.  00:8A8F                      ; salida: 	-
      76.  00:8A8F                      ; toca: 	todos los registros. Como me interesa la velocidad, si necesito copiar de algo lo hago fuera
      77.  00:8A8F                      render_sprites:
      78.  00:8A8F                      	;volcando el array con toda la info de los sprites a la zona de atributos de sprites
      79.  00:8A8F  21 2A AB            	LD		HL,array_sprites
      80.  00:8A92  11 00 1B            	LD		DE,SPRART
      81.  00:8A95  01 80 00            	LD		BC,4 * 32				;32 sprites x 4 bytes controlando el sprite (Y, X, plano, color)
      82.  00:8A98  C3 5C 00            	JP		LDIRVM
      83.  00:8A9B                      fin_actualiza_array_sprites_vram:
      84.  00:8A9B                      
      85.  00:8A9B                      
      86.  00:8A9B                      ;;=====================================================
      87.  00:8A9B                      ;;VUELCA_RESULTADO_PUNTOMIRA_ARRAY
      88.  00:8A9B                      ;;=====================================================	
      89.  00:8A9B                      ; función: 	coloca los valores del punto de mira en la variable array_sprites para ser volcados en VRAM
      90.  00:8A9B                      ; entrada: 	array_sprites_pm, prota.XXXXX
      91.  00:8A9B                      ; salida: 	-
      92.  00:8A9B                      ; toca: 	-
      93.  00:8A9B                      vuelca_resultado_puntomira_array:
      94.  00:8A9B  DD 21 2A AB         	LD		IX, array_sprites_pm
      95.  00:8A9F                      	;posición y de los dos sprites que conforman el punto de mira
      96.  00:8A9F  3A D4 AA            	LD		 A, (prota.posy)
      97.  00:8AA2  DD 77 00            	LD		(IX  ), A
      98.  00:8AA5  DD 77 04            	LD		(IX+4), A
      99.  00:8AA8                      	;posición x de los dos sprites que conforman el punto de mira
     100.  00:8AA8  3A D3 AA            	LD		 A, (prota.posx)
     101.  00:8AAB  DD 77 01            	LD		(IX+1), A
     102.  00:8AAE  DD 77 05            	LD		(IX+5), A
     103.  00:8AB1                      	;plano
     104.  00:8AB1  DD 36 02 00         	LD		(IX+2), 0
     105.  00:8AB5  DD 36 06 04         	LD		(IX+6), 4	;al ser sprites de 16x16 hay que ir de 4 en 4
     106.  00:8AB9                      	;color
     107.  00:8AB9  3A D5 AA            	LD		 A, (prota.escena)
     108.  00:8ABC  B7                  	OR		 A
     109.  00:8ABD  C2 C9 8A            	JP		NZ,.codigo_color_2
     110.  00:8AC0                      .codigo_color_1:
     111.  00:8AC0  DD 36 03 0F         	LD		(IX+3), COLBLANCO
     112.  00:8AC4  DD 36 07 08         	LD		(IX+7), COLROJO
     113.  00:8AC8  C9                  	RET
     114.  00:8AC9                      .codigo_color_2:
     115.  00:8AC9  DD 36 03 08         	LD		(IX+3), COLROJO
     116.  00:8ACD  DD 36 07 0F         	LD		(IX+7), COLBLANCO
     117.  00:8AD1  C9                  	RET
     118.  00:8AD2                      fin_vuelca_resultado_puntomira_array:
     119.  00:8AD2                      
     120.  00:8AD2                      
     121.  00:8AD2                      ;;=====================================================
     122.  00:8AD2                      ;;CHECK_PLAYER
     123.  00:8AD2                      ;;=====================================================	
     124.  00:8AD2                      ; función: 	MIRA EL CONTROL Y APLICA LA LOGICA DE MOVIMIENTO DEL PROTAGONISTA
     125.  00:8AD2                      ; entrada: 	-
     126.  00:8AD2                      ; salida: 	-
     127.  00:8AD2                      ; toca: 	A
     128.  00:8AD2                      check_player:
     129.  00:8AD2  CD 74 8B            	CALL	update_controllers_status
     130.  00:8AD5  B7                  	OR		 A
     131.  00:8AD6  C8                  	RET		 Z						;si no se ha pulsado nada no se necesita mirar nada
     132.  00:8AD7                      
     133.  00:8AD7  CB 1F               	RR		 A
     134.  00:8AD9  DC F2 8A            	CALL	 C, mueve_arriba
     135.  00:8ADC  CB 1F               	RR		 A
     136.  00:8ADE  DC 0E 8B            	CALL	 C, mueve_abajo
     137.  00:8AE1  CB 1F               	RR		 A
     138.  00:8AE3  DC 1D 8B            	CALL	 C, mueve_izquierda
     139.  00:8AE6  CB 1F               	RR		 A
     140.  00:8AE8  DC FF 8A            	CALL	 C, mueve_derecha
     141.  00:8AEB                      	
     142.  00:8AEB                      	;zona para mirar disparo Recibe A que tendrá 0000 0 0 X-letra M X-espacio 
     143.  00:8AEB  CD 2A 8B            	CALL	mira_disparo
     144.  00:8AEE                      
     145.  00:8AEE  C3 9B 8A            	JP		vuelca_resultado_puntomira_array
     146.  00:8AF1                      f;in_check_player:
     147.  00:8AF1  C9                  	RET
     148.  00:8AF2                      
     253   00:8AF2                      	
     254   00:8AF2                      	include "subr_teclado_joy.asm"
       1.  00:8AF2                      ;;=====================================================
       2.  00:8AF2                      ;;SUBRUTINAS QUE CAPTURAN EL JOYSTICK Y TECLADO Y MUEVEN PUNTO DE MIRA
       3.  00:8AF2                      ;;=====================================================
       4.  00:8AF2                      
       5.  00:8AF2                      ;;=====================================================
       6.  00:8AF2                      ;;MUEVE_ARRIBA
       7.  00:8AF2                      ;;=====================================================	
       8.  00:8AF2                      ; función: 	decrementa y si se no sale de los límites el valor del punto de mira a la derecha
       9.  00:8AF2                      ; entrada: 	-
      10.  00:8AF2                      ; salida: 	-
      11.  00:8AF2                      ; toca: 	-
      12.  00:8AF2                      mueve_arriba:
      13.  00:8AF2  F5                  	PUSH		AF
      14.  00:8AF3                      	
      15.  00:8AF3  3A D4 AA            	LD		 	 A, (prota.posy)
      16.  00:8AF6  3D                  	DEC			 A
      17.  00:8AF7  CA FD 8A            	JP			 Z,.no_decrementa_y
      18.  00:8AFA  32 D4 AA            	LD			(prota.posy), A
      19.  00:8AFD                      	
      20.  00:8AFD                      .no_decrementa_y:
      21.  00:8AFD  F1                  	POP			AF
      22.  00:8AFE                      fin_mueve_arriba:
      23.  00:8AFE  C9                  	RET
      24.  00:8AFF                      
      25.  00:8AFF                      
      26.  00:8AFF                      ;;=====================================================
      27.  00:8AFF                      ;;MUEVE_DERECHA
      28.  00:8AFF                      ;;=====================================================	
      29.  00:8AFF                      ; función: 	incrementa si se no sale de los límites el valor del punto de mira a la derecha
      30.  00:8AFF                      ; entrada: 	-
      31.  00:8AFF                      ; salida: 	-
      32.  00:8AFF                      ; toca: 	-
      33.  00:8AFF                      mueve_derecha:
      34.  00:8AFF  F5                  	PUSH		AF
      35.  00:8B00                      	
      36.  00:8B00  3A D3 AA            	LD		 	 A, (prota.posx)
      37.  00:8B03  3C                  	INC			 A
      38.  00:8B04  FE EF               	CP			 A, LIMPANTDER - 16
      39.  00:8B06  CA 0C 8B            	JP			 Z, .no_incrementa_x
      40.  00:8B09  32 D3 AA            	LD			(prota.posx), A
      41.  00:8B0C                      	
      42.  00:8B0C                      .no_incrementa_x:
      43.  00:8B0C  F1                  	POP			AF
      44.  00:8B0D                      fin_mueve_derecha:
      45.  00:8B0D  C9                  	RET
      46.  00:8B0E                      
      47.  00:8B0E                      
      48.  00:8B0E                      ;;=====================================================
      49.  00:8B0E                      ;;MUEVE_ABAJO
      50.  00:8B0E                      ;;=====================================================	
      51.  00:8B0E                      ; función: 	incrementa y si se no sale de los límites el valor del punto de mira abajo
      52.  00:8B0E                      ; entrada: 	-
      53.  00:8B0E                      ; salida: 	-
      54.  00:8B0E                      ; toca: 	-
      55.  00:8B0E                      mueve_abajo:
      56.  00:8B0E  F5                  	PUSH		AF
      57.  00:8B0F                      	
      58.  00:8B0F  3A D4 AA            	LD		 	 A, (prota.posy)
      59.  00:8B12  3C                  	INC			 A
      60.  00:8B13  FE 70               	CP			 A, LIMPANTABA - 16
      61.  00:8B15  CA 1B 8B            	JP			 Z,.no_incrementa_y
      62.  00:8B18  32 D4 AA            	LD			(prota.posy), A
      63.  00:8B1B                      	
      64.  00:8B1B                      .no_incrementa_y:
      65.  00:8B1B  F1                  	POP			AF
      66.  00:8B1C                      fin_mueve_abajo:
      67.  00:8B1C  C9                  	RET
      68.  00:8B1D                      	
      69.  00:8B1D                      	
      70.  00:8B1D                      ;;=====================================================
      71.  00:8B1D                      ;;MUEVE_IZQUIERDA
      72.  00:8B1D                      ;;=====================================================	
      73.  00:8B1D                      ; función: 	decrementa x si se no sale de los límites el valor del punto de mira a la izquierda
      74.  00:8B1D                      ; entrada: 	-
      75.  00:8B1D                      ; salida: 	-
      76.  00:8B1D                      ; toca: 	-
      77.  00:8B1D                      mueve_izquierda:
      78.  00:8B1D  F5                  	PUSH		AF
      79.  00:8B1E                      	
      80.  00:8B1E  3A D3 AA            	LD		 	 A, (prota.posx)
      81.  00:8B21  3D                  	DEC			 A
      82.  00:8B22                      ;	CP			 A, LIMPANTIZQ 			;no es necesario ya que es cero (Z)
      83.  00:8B22  CA 28 8B            	JP			 Z,.no_decrementa_x
      84.  00:8B25  32 D3 AA            	LD			(prota.posx), A
      85.  00:8B28                      	
      86.  00:8B28                      .no_decrementa_x:
      87.  00:8B28  F1                  	POP			AF
      88.  00:8B29                      fin_mueve_izquierda:
      89.  00:8B29  C9                  	RET
      90.  00:8B2A                      
      91.  00:8B2A                      
      92.  00:8B2A                      
      93.  00:8B2A                      ;;=====================================================
      94.  00:8B2A                      ;;MIRA_DISPARO
      95.  00:8B2A                      ;;=====================================================	
      96.  00:8B2A                      ; función: 	Mira si se ha pulsado alguno de los dos disparos
      97.  00:8B2A                      ; entrada: 	A que tendrá 0000 0 0 X-letra M X-espacio 
      98.  00:8B2A                      ; salida: 	-
      99.  00:8B2A                      ; toca: 	A, B
     100.  00:8B2A                      mira_disparo:
     101.  00:8B2A                      .mira_boton_pulsado1:
     102.  00:8B2A  CB 1F               	RR		 A						;preparo en el carry si se ha pulsado botón 1
     103.  00:8B2C  D2 58 8B            	JP		 NC, .mira_boton_pulsado2					
     104.  00:8B2F  F5                  	PUSH	AF						;copia A para usarlo después
     105.  00:8B30                      	;se ha pulsado barra o boton 1
     106.  00:8B30  3A D8 AA            	LD		 A, (prota.cadencia)
     107.  00:8B33  B7                  	OR		 A
     108.  00:8B34  CA 42 8B            	JP		 Z, .efectua_disparo	;toca efectuar disparo realmente porque se ha pulsado lo suficiente el disparo
     109.  00:8B37                      .no_efectua_disparo: ;IF
     110.  00:8B37  3D                  		DEC		 A
     111.  00:8B38  32 D8 AA            		LD		(prota.cadencia), A	;resto cadencia hasta próximo disparo "real" (no automático por haber pulsado una tecla e ir demasiado rápido)
     112.  00:8B3B  AF                  		XOR		 A 
     113.  00:8B3C  32 D5 AA            		LD		(prota.escena), A
     114.  00:8B3F  C3 57 8B            		JP		.fin_mira_disparo1
     115.  00:8B42                      .efectua_disparo:	;ELSE
     116.  00:8B42                      		;cambio colores del sprite
     117.  00:8B42  3A D5 AA            		LD		 A, (prota.escena)
     118.  00:8B45  2F                  		CPL		 
     119.  00:8B46  32 D5 AA            		LD		(prota.escena), A
     120.  00:8B49                      		;reseteo cadencia para el próximo disparo
     121.  00:8B49  3E 04               		LD		 A, LIMCADENCIA				;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
     122.  00:8B4B  32 D8 AA            		LD		 (prota.cadencia), A		;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
     123.  00:8B4E                      		
     124.  00:8B4E                      		;ejecuto sonido						;; ajustar cadencia y que cuando el disparo sea efectivo se reseteen los colores
     125.  00:8B4E  AF                  		XOR		 A
     126.  00:8B4F  0E 01               		LD		 C, 1
     127.  00:8B51  CD 1C 92            		CALL	ayFX_INIT
     128.  00:8B54                      		
     129.  00:8B54                      		;examino si el disparo le dió a algo activo
     130.  00:8B54  CD 4B 80            		CALL	check_colisiones_objetos	;revisa las colisiones con puertas, ayudas y enemigos
     131.  00:8B57                      		
     132.  00:8B57                      .fin_mira_disparo1
     133.  00:8B57  F1                  	POP		AF
     134.  00:8B58                      
     135.  00:8B58                      .mira_boton_pulsado2:
     136.  00:8B58  CB 1F               	RR		 A
     137.  00:8B5A  D0                  	RET		 NC
     138.  00:8B5B                      	;se ha pulsado shift o boton 2
     139.  00:8B5B                      	
     140.  00:8B5B  3A E5 AA            	LD		 A, (prota_reliquias)	;miro si le quedan reliquias
     141.  00:8B5E  B7                  	OR		 A
     142.  00:8B5F  C8                  	RET		 Z						;si no le quedan salgo ya
     143.  00:8B60                      	
     144.  00:8B60                      	;actuaciones si se usa la reliquia botón 2 o M y quedn reliquias.. (antes ya se puso el valor en A)
     145.  00:8B60  3A E5 AA            	LD		A, (prota_reliquias)
     146.  00:8B63  3D                  	DEC		 A
     147.  00:8B64  32 E5 AA            	LD		(prota_reliquias), A
     148.  00:8B67                      	
     149.  00:8B67  3E 01               	LD		 A, 1
     150.  00:8B69  0E 01               	LD		 C, 1
     151.  00:8B6B  CD 1C 92            	CALL	ayFX_INIT
     152.  00:8B6E                      	
     153.  00:8B6E  CD BA 85            	CALL 	efecto_imagen_tira_reliquia
     154.  00:8B71                      	
     155.  00:8B71  C3 62 84            	JP		pinta_reliquias
     156.  00:8B74                      fin_mira_disparo:
     157.  00:8B74                      ;	RET		
     158.  00:8B74                      
     159.  00:8B74                      
     160.  00:8B74                      ;;============================================================
     161.  00:8B74                      ;;Código de D. Fernando García (BitVision) (al que siempre le estaré agradecido)
     162.  00:8B74                      ;check_8th_keyboard_row
     163.  00:8B74                      ;read_joy_0
     164.  00:8B74                      ;check_8th_keyboard_row
     165.  00:8B74                      ;check_4th_keyboard_row
     166.  00:8B74                      ;;============================================================
     167.  00:8B74                      ;;  usa constantes:
     168.  00:8B74                      ;PSG_A  equ  0a0h  ;reg address
     169.  00:8B74                      ;PSG_W  equ  0a1h  ;reg data WR
     170.  00:8B74                      ;PSG_R  equ  0a2h  ;reg data
     171.  00:8B74                      
     172.  00:8B74                      ;;=====================================================
     173.  00:8B74                      ;;update_controllers_status
     174.  00:8B74                      ;;=====================================================	
     175.  00:8B74                      ;depends on the next rountine
     176.  00:8B74                      ;  returns
     177.  00:8B74                      ;  a - 0P2TRLDU
     178.  00:8B74                      
     179.  00:8B74                      update_controllers_status:
     180.  00:8B74  CD BF 8B                 call  check_8th_keyboard_row
     181.  00:8B77                      [4]  rrc    a
     181.  00:8B77  CB 0F CB 0F CB 0F CB 0F 
     182.  00:8B7F  47                       ld    b,a    		;save for later  xxxTRDUL
     183.  00:8B80                      
     184.  00:8B80  E6 01                    and    #01    		;save L
     185.  00:8B82  CB 27                    sla    a
     186.  00:8B84  CB 27                    sla    a    		;now 00000L00
     187.  00:8B86  4F                       ld    c,a    		;save for later
     188.  00:8B87                      
     189.  00:8B87  78                       ld    a,b    		;again we've got xxxTRDUL. I am interested on leaving 000000DU on a
     190.  00:8B88  CB 3F                    srl    a
     191.  00:8B8A  E6 03                    and    00000011b
     192.  00:8B8C                      						;we've got 000000DU on a
     193.  00:8B8C  B1                       or    c    		;now we've got 00000LDU
     194.  00:8B8D  4F                       ld    c,a    		;save for later
     195.  00:8B8E                      
     196.  00:8B8E  78                       ld    a,b
     197.  00:8B8F  E6 18                    and    00011000b 	;we've got 000TR000
     198.  00:8B91  B1                       or    c
     199.  00:8B92                           ;finally    000TRLDU
     200.  00:8B92                      
     201.  00:8B92                           ;and    00000100   ;preserve just
     202.  00:8B92  47                       ld    b,a    		;save for later
     203.  00:8B93  CD CD 8B                 call  check_4th_keyboard_row      ;check M & P
     204.  00:8B96  F5                       push  af
     205.  00:8B97  E6 04                    and    00000100b	;filter just M
     206.  00:8B99  87                       add    a
     207.  00:8B9A  87                       add    a
     208.  00:8B9B  87                       add    a           ;shift 3th to 6th bit
     209.  00:8B9C  B0                       or    b           	;merge with previous
     210.  00:8B9D  47                       ld    b,a
     211.  00:8B9E                      
     212.  00:8B9E  CD AB 8B                 call  read_joy_0
     213.  00:8BA1  E6 3F                    and    00111111b  	;we want just 002TRLDU  from joystick    (2 is second trigger)
     214.  00:8BA3  B0                       or    b      		;added 000TRLDU from keyboard
     215.  00:8BA4  47                       ld    b,a      	;save for later
     216.  00:8BA5  F1                       pop    af      	; let's check on P
     217.  00:8BA6                      
     218.  00:8BA6  E6 20                    and    00100000b
     219.  00:8BA8  87                       add    a      		;P status on 6th bit  ... so 0P2TRLDU
     220.  00:8BA9  B0                       or    b
     221.  00:8BAA                      
     222.  00:8BAA  C9                       ret
     223.  00:8BAB                      
     224.  00:8BAB                      
     225.  00:8BAB                      ;ret
     226.  00:8BAB                      ;  a -            xx2TRLDU
     227.  00:8BAB                      read_joy_0:
     228.  00:8BAB  F3                         di
     229.  00:8BAC  3E 0F                      ld    a,15
     230.  00:8BAE  D3 A0                      out    [PSG_A],a
     231.  00:8BB0  DB A2                      in    a,[PSG_R]
     232.  00:8BB2  E6 BF                      and    10111111b        ;joy0
     233.  00:8BB4                      
     234.  00:8BB4  D3 A1                      out    [PSG_W],a        ;set joy0
     235.  00:8BB6                      
     236.  00:8BB6  3E 0E                      ld    a,14
     237.  00:8BB8  D3 A0                      out    [PSG_A],a
     238.  00:8BBA  DB A2                      in    a,[PSG_R]
     239.  00:8BBC                      
     240.  00:8BBC  FB                         ei
     241.  00:8BBD  2F                         cpl
     242.  00:8BBE                      
     243.  00:8BBE  C9                         ret
     244.  00:8BBF                      
     245.  00:8BBF                      
     246.  00:8BBF                      ;ret
     247.  00:8BBF                      ;  a -      RDULxxxT
     248.  00:8BBF                      check_8th_keyboard_row:
     249.  00:8BBF  F3                       di
     250.  00:8BC0  DB AA                    in    a,(#aa)
     251.  00:8BC2  E6 F0                    and    #f0
     252.  00:8BC4  F6 08                    or    8
     253.  00:8BC6  D3 AA                    out    (#aa),a
     254.  00:8BC8  DB A9                    in    a,(#a9)
     255.  00:8BCA  FB                       ei
     256.  00:8BCB  2F                       cpl
     257.  00:8BCC                      
     258.  00:8BCC  C9                       ret
     259.  00:8BCD                      
     260.  00:8BCD                      
     261.  00:8BCD                      ;ret
     262.  00:8BCD                      ;  a -      xxxxxMxx
     263.  00:8BCD                      check_4th_keyboard_row:
     264.  00:8BCD  F3                       di
     265.  00:8BCE  DB AA                    in    a,(#aa)
     266.  00:8BD0  E6 F0                    and    #f0
     267.  00:8BD2  F6 04                    or    4
     268.  00:8BD4  D3 AA                    out    (#aa),a
     269.  00:8BD6  DB A9                    in    a,(#a9)
     270.  00:8BD8  FB                       ei
     271.  00:8BD9  2F                       cpl
     272.  00:8BDA                      
     273.  00:8BDA  C9                       ret
     274.  00:8BDB                      
     275.  00:8BDB                      ;--------------------------------------------
     276.  00:8BDB                      
     277.  00:8BDB                      
     278.  00:8BDB                      
     279.  00:8BDB                      
     280.  00:8BDB                      
     281.  00:8BDB                      
     282.  00:8BDB                      
     283.  00:8BDB                      
     255   00:8BDB                      	
     256   00:8BDB                      	include "subr_sonido.asm"
       1.  00:8BDB                      
       2.  00:8BDB                      ;;=====================================================
       3.  00:8BDB                      ;;SUBRUTINAS PARA SONIDOS
       4.  00:8BDB                      ;;=====================================================	
       5.  00:8BDB                      
       6.  00:8BDB                      ;;=====================================================
       7.  00:8BDB                      ;;INICIALIZA_REPLAYER_EFECTOS_INTERRUPCIONES
       8.  00:8BDB                      ;;=====================================================	
       9.  00:8BDB                      ; función: 	inicializa: replayer de música, player de efectos e interrupciones
      10.  00:8BDB                      ; entrada: 	-
      11.  00:8BDB                      ; salida: 	-
      12.  00:8BDB                      ; toca: 	HL, A
      13.  00:8BDB                      inicializa_replayer_efectos_interrupciones:
      14.  00:8BDB  F3                  	DI
      15.  00:8BDC                      
      16.  00:8BDC                      	;inicializacion de replayer musical
      17.  00:8BDC  21 84 92            	LD		HL, song-99			; hl <- initial address of module - 99
      18.  00:8BDF  CD 1B 8C            	CALL	PT3_INIT			; Inits PT3 player
      19.  00:8BE2                      		
      20.  00:8BE2                      	;inicializacion del reproductor de efectos sonoros
      21.  00:8BE2  21 4F 9C            	LD		HL, sfx_bank
      22.  00:8BE5  CD 0A 92            	CALL	ayFX_SETUP
      23.  00:8BE8                      	
      24.  00:8BE8                      	;Engancha nuestra rutina de servicio al gancha que deja preparado la BIOS cuando se termina de pintar la pantalla (50 o 60 veces por segundo)
      25.  00:8BE8  3E C3               	LD		A, #C3
      26.  00:8BEA  32 9F FD            	LD		[H.TIMI], A
      27.  00:8BED  21 F5 8B            	LD		HL, subrutina_isr
      28.  00:8BF0  22 A0 FD            	LD		[H.TIMI+1], HL
      29.  00:8BF3                      	
      30.  00:8BF3  FB                  	EI		;optimizacion:
      31.  00:8BF4                      			;piensa que las dos ultimas lineas podrian haber sido: 
      32.  00:8BF4                      			;ei						;primero ei
      33.  00:8BF4                      			;ld		[H.TIMI+1],hl	;luego este ld
      34.  00:8BF4                      									;PENSAR (y consultar ) PORQUE!!!!
      35.  00:8BF4                      fin_inicializa_replayer_efectos_interrupciones:
      36.  00:8BF4  C9                  	RET
      37.  00:8BF5                      
      38.  00:8BF5                      
      39.  00:8BF5                      
      40.  00:8BF5                      ;;=====================================================
      41.  00:8BF5                      ;;NUESTRA_ISR
      42.  00:8BF5                      ;;=====================================================	
      43.  00:8BF5                      ; función: 	envía datos al PSG + toca un trozo de música + toca trozo de 
      44.  00:8BF5                      ; entrada: 	-
      45.  00:8BF5                      ; salida: 	-
      46.  00:8BF5                      ; toca: 	HL, A
      47.  00:8BF5                      subrutina_isr:
      48.  00:8BF5  CD 60 91            	CALL	PT3_ROUT			;envia los datos a los registros del PSG
      49.  00:8BF8  CD 68 90            	CALL	PT3_PLAY			;calcula el siguiente 'trocito' de musica que sera enviado al proxima vez
      50.  00:8BFB  C3 52 92            	JP		ayFX_PLAY			;calcula el siguiente 'trocito' de efecto especial de sonido que sera enviado la proxima vez
      51.  00:8BFE                      fin_subrutina_isr:
      52.  00:8BFE                      	;RET
      53.  00:8BFE                      
      54.  00:8BFE                      
      55.  00:8BFE                      
      56.  00:8BFE                      ;;=====================================================
      57.  00:8BFE                      ;;DEFINICIÓN DE SUBRUTINAS DE FERNANDO PARA COMPRESIÓN Y SONIDO
      58.  00:8BFE                      ;;=====================================================
      59.  00:8BFE                      subrutinas_sonido:
      60.  00:8BFE                      	include	"PT3-ROM_sjasm.asm"
       1:  00:8BFE                      		; --- PT3 REPLAYER WORKING ON ROM ---
       2:  00:8BFE                      		; --- Can be assembled with asMSX ---
       3:  00:8BFE                      		; --- ROM version: MSX-KUN        ---
       4:  00:8BFE                      		; --- asMSX version 2: SapphiRe   ---
       5:  00:8BFE                      
       6:  00:8BFE                      ; Based on MSX full version of PT3 by Dioniso
       7:  00:8BFE                      ;
       8:  00:8BFE                      ; This version of the replayer can be used with any note table
       9:  00:8BFE                      ; This version also allows the use of PT3 commands
      10:  00:8BFE                      ; First 99 bytes of each PT3 module should be stripped off
      11:  00:8BFE                      ;
      12:  00:8BFE                      ; PLAY and PSG WRITE routines seperated to allow independent calls
      13:  00:8BFE                      ;
      14:  00:8BFE                      ; ROM LENGTH: 1549 bytes
      15:  00:8BFE                      ; RAM LENGTH:  576 bytes
      16:  00:8BFE                      
      17:  00:8BFE                      
      18:  00:8BFE                      
      19:  00:8BFE                      ;SJASM version by BTV 2016
      20:  00:8BFE                      
      21:  00:8BFE                      
      22:  00:8BFE                      		; --- CONSTANT VALUES DEFINITION ---
      23:  00:8BFE                      
      24:  00:8BFE                      ;ChannelsVars
      25:  00:8BFE                      ;struc	CHNPRM
      26:  00:8BFE                      ;reset group
      27:  00:8BFE  (00:0000)           CHNPRM_PsInOr	equ 0	;RESB 1
      28:  00:8BFE  (00:0001)           CHNPRM_PsInSm	equ 1	;RESB 1
      29:  00:8BFE  (00:0002)           CHNPRM_CrAmSl	equ 2	;RESB 1
      30:  00:8BFE  (00:0003)           CHNPRM_CrNsSl	equ 3	;RESB 1
      31:  00:8BFE  (00:0004)           CHNPRM_CrEnSl	equ 4	;RESB 1
      32:  00:8BFE  (00:0005)           CHNPRM_TSlCnt	equ 5	;RESB 1
      33:  00:8BFE  (00:0006)           CHNPRM_CrTnSl	equ 6	;RESW 1
      34:  00:8BFE  (00:0008)           CHNPRM_TnAcc	equ 8	;RESW 1
      35:  00:8BFE  (00:000A)           CHNPRM_COnOff	equ 10	;RESB 1
      36:  00:8BFE                      ;reset group
      37:  00:8BFE                      
      38:  00:8BFE  (00:000B)           CHNPRM_OnOffD	equ 11	;RESB 1
      39:  00:8BFE                      
      40:  00:8BFE                      ;IX for PTDECOD here [+12]
      41:  00:8BFE  (00:000C)           CHNPRM_OffOnD	equ 12	;RESB 1
      42:  00:8BFE  (00:000D)           CHNPRM_OrnPtr	equ 13	;RESW 1
      43:  00:8BFE  (00:000F)           CHNPRM_SamPtr	equ 15	;RESW 1
      44:  00:8BFE  (00:0011)           CHNPRM_NNtSkp	equ 17	;RESB 1
      45:  00:8BFE  (00:0012)           CHNPRM_Note	equ 18	;RESB 1
      46:  00:8BFE  (00:0013)           CHNPRM_SlToNt	equ 19	;RESB 1
      47:  00:8BFE  (00:0014)           CHNPRM_Env_En	equ 20	;RESB 1
      48:  00:8BFE  (00:0015)           CHNPRM_Flags	equ 21	;RESB 1
      49:  00:8BFE                       ;Enabled - 0,SimpleGliss - 2
      50:  00:8BFE  (00:0016)           CHNPRM_TnSlDl	equ 22	;RESB 1
      51:  00:8BFE  (00:0017)           CHNPRM_TSlStp	equ 23	;RESW 1
      52:  00:8BFE  (00:0019)           CHNPRM_TnDelt	equ 25	;RESW 1
      53:  00:8BFE  (00:001B)           CHNPRM_NtSkCn	equ 27	;RESB 1
      54:  00:8BFE  (00:001C)           CHNPRM_Volume	equ 28	;RESB 1
      55:  00:8BFE  (00:001D)           CHNPRM_Size	equ 29	;RESB 1
      56:  00:8BFE                      ;endstruc
      57:  00:8BFE                      
      58:  00:8BFE                      ;struc	AR
      59:  00:8BFE  (00:0000)           AR_TonA		equ 0	;RESW 1
      60:  00:8BFE  (00:0002)           AR_TonB		equ 2	;RESW 1
      61:  00:8BFE  (00:0004)           AR_TonC		equ 4	;RESW 1
      62:  00:8BFE  (00:0006)           AR_Noise	equ 6	;RESB 1
      63:  00:8BFE  (00:0007)           AR_Mixer	equ 7	;RESB 1
      64:  00:8BFE  (00:0008)           AR_AmplA	equ 8	;RESB 1
      65:  00:8BFE  (00:0009)           AR_AmplB	equ 9	;RESB 1
      66:  00:8BFE  (00:000A)           AR_AmplC	equ 10	;RESB 1
      67:  00:8BFE  (00:000B)           AR_Env		equ 11	;RESW 1
      68:  00:8BFE  (00:000D)           AR_EnvTp	equ 13	;RESB 1
      69:  00:8BFE                      ;endstruc
      70:  00:8BFE                      
      71:  00:8BFE                      		; --- CODE STARTS HERE ---
      72:  00:8BFE                      
      73:  00:8BFE  21 00 F0            CHECKLP:	LD	HL,PT3_SETUP
      74:  00:8C01  CB FE               		SET	7,[HL]
      75:  00:8C03  CB 46               		BIT	0,[HL]
      76:  00:8C05  C8                  		RET	Z
      77:  00:8C06  E1                  		POP	HL
      78:  00:8C07  21 7A F0            		LD	HL,DelyCnt
      79:  00:8C0A  34                  		INC	[HL]
      80:  00:8C0B  21 3E F0            		LD	HL,ChanA+CHNPRM_NtSkCn
      81:  00:8C0E  34                  		INC	[HL]
      82:  00:8C0F  AF                  PT3_MUTE:	XOR	A
      83:  00:8C10  67                  		LD	H,A
      84:  00:8C11  6F                  		LD	L,A
      85:  00:8C12  32 48 F1            		LD	[AYREGS+AR_AmplA],A
      86:  00:8C15  22 49 F1            		LD	[AYREGS+AR_AmplB],HL
      87:  00:8C18  C3 61 91            		JP	ROUT_A0
      88:  00:8C1B                      
      89:  00:8C1B                      PT3_INIT:	;HL - AddressOfModule - 100
      90:  00:8C1B  22 01 F0            		LD [PT3_MODADDR],HL
      91:  00:8C1E  E5                  		PUSH HL
      92:  00:8C1F  11 64 00            		LD DE,100
      93:  00:8C22  19                  		ADD HL,DE
      94:  00:8C23  7E                  		LD A,[HL]
      95:  00:8C24  32 1C F0            		LD [PT3_Delay],A
      96:  00:8C27  E5                  		PUSH HL
      97:  00:8C28  DD E1               		POP IX
      98:  00:8C2A  19                  		ADD HL,DE
      99:  00:8C2B  22 03 F0            		LD [PT3_CrPsPtr],HL
     100:  00:8C2E  DD 5E 02            		LD E,[IX+102-100]
     101:  00:8C31  19                  		ADD HL,DE
     102:  00:8C32  23                  		INC HL
     103:  00:8C33  22 18 F0            		LD [PT3_LPosPtr],HL
     104:  00:8C36  D1                  		POP DE
     105:  00:8C37  DD 6E 03            		LD L,[IX+103-100]
     106:  00:8C3A  DD 66 04            		LD H,[IX+104-100]
     107:  00:8C3D  19                  		ADD HL,DE
     108:  00:8C3E  22 1A F0            		LD [PT3_PatsPtr],HL
     109:  00:8C41  21 A9 00            		LD HL,169
     110:  00:8C44  19                  		ADD HL,DE
     111:  00:8C45  22 07 F0            		LD [PT3_OrnPtrs],HL
     112:  00:8C48  21 69 00            		LD HL,105
     113:  00:8C4B  19                  		ADD HL,DE
     114:  00:8C4C  22 05 F0            		LD [PT3_SAMPTRS],HL
     115:  00:8C4F  21 00 F0            		LD HL,PT3_SETUP
     116:  00:8C52  CB BE               		RES 7,[HL]
     117:  00:8C54                      
     118:  00:8C54                      		; --- note table data depacker ---
     119:  00:8C54                      		; Depacks first 12 tones of each tone table
     120:  00:8C54                      
     121:  00:8C54  11 D5 91            		LD DE,T_PACK
     122:  00:8C57  01 B1 F1            		LD BC,T1_+(2*49)-1
     123:  00:8C5A  1A                  .TP_0:		LD A,[DE]
     124:  00:8C5B  13                  		INC DE
     125:  00:8C5C  FE 1E               		CP 15*2
     126:  00:8C5E  30 06               		JR NC,.TP_1
     127:  00:8C60  67                  		LD H,A
     128:  00:8C61  1A                  		LD A,[DE]
     129:  00:8C62  6F                  		LD L,A
     130:  00:8C63  13                  		INC DE
     131:  00:8C64  18 07               		JR .TP_2
     132:  00:8C66  D5                  .TP_1:		PUSH DE
     133:  00:8C67  16 00               		LD D,0
     134:  00:8C69  5F                  		LD E,A
     135:  00:8C6A  19                  		ADD HL,DE
     136:  00:8C6B  19                  		ADD HL,DE
     137:  00:8C6C  D1                  		POP DE
     138:  00:8C6D  7C                  .TP_2:		LD A,H
     139:  00:8C6E  02                  		LD [BC],A
     140:  00:8C6F  0B                  		DEC BC
     141:  00:8C70  7D                  		LD A,L
     142:  00:8C71  02                  		LD [BC],A
     143:  00:8C72  0B                  		DEC BC
     144:  00:8C73  D6 F0               		SUB $F0
     145:  00:8C75  20 E3               		JR NZ,.TP_0
     146:  00:8C77                      
     147:  00:8C77                      		; --- INITIALIZE PT3 VARIABLES ---
     148:  00:8C77  21 23 F0            		LD HL,VARS
     149:  00:8C7A  77                  		LD [HL],A
     150:  00:8C7B  11 24 F0            		LD DE,VARS+1
     151:  00:8C7E  01 2C 01            		LD BC,VAR0END-VARS-1
     152:  00:8C81  ED B0               		LDIR
     153:  00:8C83                      
     154:  00:8C83  3C                  		INC A
     155:  00:8C84  32 7A F0            		LD [DelyCnt],A
     156:  00:8C87  21 01 F0            		LD HL,$F001 ;H - CHNPRM_Volume, L - CHNPRM_NtSkCn
     157:  00:8C8A  22 3E F0            		LD [ChanA+CHNPRM_NtSkCn],HL
     158:  00:8C8D  22 5B F0            		LD [ChanB+CHNPRM_NtSkCn],HL
     159:  00:8C90  22 78 F0            		LD [ChanC+CHNPRM_NtSkCn],HL
     160:  00:8C93                      
     161:  00:8C93  21 D1 91            		LD HL,EMPTYSAMORN
     162:  00:8C96  22 12 F0            		LD [PT3_AdInPtA],HL ;ptr to zero
     163:  00:8C99  22 30 F0            		LD [ChanA+CHNPRM_OrnPtr],HL ;ornament 0 is "0,1,0"
     164:  00:8C9C  22 4D F0            		LD [ChanB+CHNPRM_OrnPtr],HL ;in all versions from
     165:  00:8C9F  22 6A F0            		LD [ChanC+CHNPRM_OrnPtr],HL ;3.xx to 3.6x and VTII
     166:  00:8CA2                      
     167:  00:8CA2  22 32 F0            		LD [ChanA+CHNPRM_SamPtr],HL ;S1 There is no default
     168:  00:8CA5  22 4F F0            		LD [ChanB+CHNPRM_SamPtr],HL ;S2 sample in PT3, so, you
     169:  00:8CA8  22 6C F0            		LD [ChanC+CHNPRM_SamPtr],HL ;S3 can comment S1,2,3; see
     170:  00:8CAB                      					    ;also EMPTYSAMORN comment
     171:  00:8CAB                      
     172:  00:8CAB                      		; --- NOTE TABLE CREATOR (c) Ivan Roshin, adapted by SapphiRe ---
     173:  00:8CAB  DD 7E FF            		LD A,[IX+99-100] ;TONE TABLE NUMBER
     174:  00:8CAE  17                  		RLA
     175:  00:8CAF  E6 07               		AND 7
     176:  00:8CB1  21 81 91            		LD HL,NT_DATA
     177:  00:8CB4  D5                  		PUSH DE
     178:  00:8CB5  50                  		LD D,B		; ld d,0 (bc is 0000 after LDIR)
     179:  00:8CB6  87                  		ADD A,A
     180:  00:8CB7  5F                  		LD E,A
     181:  00:8CB8  19                  		ADD HL,DE	; hl -> init of correct note table data
     182:  00:8CB9  5E                  		LD E,[HL]
     183:  00:8CBA  23                  		INC HL
     184:  00:8CBB  CB 3B               		SRL E
     185:  00:8CBD  9F                  		SBC A,A
     186:  00:8CBE  E6 A7               		AND $A7			;$00 (NOP) or $A7 (AND A)
     187:  00:8CC0  32 21 F0            		LD [PT3_NTL3],A		; CORRECT INSTRUCTION, DEPENDS OF SELECTED TABLE
     188:  00:8CC3  3E C9               		LD A,$C9		; RET CODE
     189:  00:8CC5  32 22 F0            		LD [PT3_NTL3+1],A	; RET PLACED
     190:  00:8CC8  EB                  		EX DE,HL
     191:  00:8CC9  C1                  		POP BC ;BC=T1_
     192:  00:8CCA  09                  		ADD HL,BC
     193:  00:8CCB                      
     194:  00:8CCB  1A                  		LD A,[DE]                           
     195:  00:8CCC                      
     196:  00:8CCC  01 91 91            		LD BC,T_
     197:  00:8CCF  81                  		ADD A,C
     198:  00:8CD0  4F                  		LD C,A
     199:  00:8CD1  88                  		ADC A,B
     200:  00:8CD2                      
     201:  00:8CD2  91                  		SUB C
     202:  00:8CD3  47                  		LD B,A
     203:  00:8CD4  C5                  		PUSH BC
     204:  00:8CD5  11 80 F0            		LD DE,NT_
     205:  00:8CD8  D5                  		PUSH DE
     206:  00:8CD9                      
     207:  00:8CD9  06 0C               		LD B,12
     208:  00:8CDB  C5                  .L1:		PUSH BC
     209:  00:8CDC  4E                  		LD C,[HL]
     210:  00:8CDD  23                  		INC HL
     211:  00:8CDE  E5                  		PUSH HL
     212:  00:8CDF  46                  		LD B,[HL]
     213:  00:8CE0                      
     214:  00:8CE0  D5                  		PUSH DE
     215:  00:8CE1  EB                  		EX DE,HL
     216:  00:8CE2  11 17 00            		LD DE,23
     217:  00:8CE5  DD 26 08            		db $DD,$26,$08	;LD XH,8
     218:  00:8CE8                      
     219:  00:8CE8  CB 38               .L2:		SRL B
     220:  00:8CEA  CB 19               		RR C
     221:  00:8CEC  CD 21 F0            .L3:		CALL PT3_NTL3	;AND A or NOP
     222:  00:8CEF  79                  		LD A,C
     223:  00:8CF0  8A                  		ADC A,D	;=ADC 0
     224:  00:8CF1  77                  		LD [HL],A
     225:  00:8CF2  23                  		INC HL
     226:  00:8CF3  78                  		LD A,B
     227:  00:8CF4  8A                  		ADC A,D
     228:  00:8CF5  77                  		LD [HL],A
     229:  00:8CF6  19                  		ADD HL,DE
     230:  00:8CF7  DD 25               		db $DD,$25	;DEC XH
     231:  00:8CF9  20 ED               		JR NZ,.L2
     232:  00:8CFB                      
     233:  00:8CFB  D1                  		POP DE
     234:  00:8CFC  13                  		INC DE
     235:  00:8CFD  13                  		INC DE
     236:  00:8CFE  E1                  		POP HL
     237:  00:8CFF  23                  		INC HL
     238:  00:8D00  C1                  		POP BC
     239:  00:8D01  10 D8               		DJNZ .L1
     240:  00:8D03                      
     241:  00:8D03  E1                  		POP HL
     242:  00:8D04  D1                  		POP DE
     243:  00:8D05                      
     244:  00:8D05  7B                  		LD A,E
     245:  00:8D06  D5                  		PUSH DE
     246:  00:8D07  11 9D 91            		LD DE,TCOLD_1
     247:  00:8D0A  BB                  		CP E
     248:  00:8D0B  D1                  		POP DE
     249:  00:8D0C  20 05               		JR NZ,.CORR_1
     250:  00:8D0E  3E FD               		LD A,$FD
     251:  00:8D10  32 AE F0            		LD [NT_+$2E],A
     252:  00:8D13                      
     253:  00:8D13  1A                  .CORR_1:	LD A,[DE]
     254:  00:8D14  A7                  		AND A
     255:  00:8D15  28 11               		JR Z,.TC_EXIT
     256:  00:8D17  1F                  		RRA
     257:  00:8D18  F5                  		PUSH AF
     258:  00:8D19  87                  		ADD A,A
     259:  00:8D1A  4F                  		LD C,A
     260:  00:8D1B  09                  		ADD HL,BC
     261:  00:8D1C  F1                  		POP AF
     262:  00:8D1D  30 02               		JR NC,.CORR_2
     263:  00:8D1F  35                  		DEC [HL]
     264:  00:8D20  35                  		DEC [HL]
     265:  00:8D21  34                  .CORR_2:	INC [HL]
     266:  00:8D22  A7                  		AND A
     267:  00:8D23  ED 42               		SBC HL,BC
     268:  00:8D25  13                  		INC DE
     269:  00:8D26  18 EB               		JR .CORR_1
     270:  00:8D28                      
     271:  00:8D28                      .TC_EXIT:	;POP AF
     272:  00:8D28                      
     273:  00:8D28                      		; --- CREATE PT3 VOLUME TABLE (c) Ivan Roshin, adapted by SapphiRe ---
     274:  00:8D28  21 11 00            		ld	hl,$11
     275:  00:8D2B  54                  		ld	d,h
     276:  00:8D2C  5C                  		ld	e,h
     277:  00:8D2D  DD 21 50 F1         		ld	IX,VT_+16
     278:  00:8D31  06 0F               		ld	b,15
     279:  00:8D33  E5                  .INITV1:	push	hl
     280:  00:8D34  19                  		add	hl,de
     281:  00:8D35  EB                  		ex	de,hl
     282:  00:8D36  ED 62               		sbc	hl,hl
     283:  00:8D38  48                  		ld	c,b
     284:  00:8D39  06 10               		ld	b,16
     285:  00:8D3B  7D                  .INITV2:	ld	a,l
     286:  00:8D3C  17                  		rla
     287:  00:8D3D  7C                  		ld	a,h
     288:  00:8D3E  CE 00               		adc	a,0
     289:  00:8D40  DD 77 00            		ld	[ix],a
     290:  00:8D43  DD 23               		inc	ix
     291:  00:8D45  19                  		add	hl,de
     292:  00:8D46  10 F3               		djnz	.INITV2
     293:  00:8D48  E1                  		pop	hl
     294:  00:8D49  7B                  		ld	a,e
     295:  00:8D4A  FE 77               		cp	$77
     296:  00:8D4C  20 01               		jr	nz,.INITV3
     297:  00:8D4E  1C                  		inc	e
     298:  00:8D4F  41                  .INITV3:	ld	b,c
     299:  00:8D50  10 E1               		djnz	.INITV1
     300:  00:8D52                      
     301:  00:8D52  C9                  		RET
     302:  00:8D53                      
     303:  00:8D53                      		;pattern decoder
     304:  00:8D53  DD 36 08 00         PD_OrSm:	LD [IX+(CHNPRM_Env_En-12)],0
     305:  00:8D57  CD DD 8E            		CALL SETORN
     306:  00:8D5A  0A                  		LD A,[BC]
     307:  00:8D5B  03                  		INC BC
     308:  00:8D5C  0F                  		RRCA
     309:  00:8D5D                      
     310:  00:8D5D  87                  PD_SAM:		ADD A,A
     311:  00:8D5E  5F                  PD_SAM_:	LD E,A
     312:  00:8D5F  16 00               		LD D,0
     313:  00:8D61  2A 05 F0            		LD HL,[PT3_SAMPTRS]
     314:  00:8D64  19                  		ADD HL,DE
     315:  00:8D65  5E                  		LD E,[HL]
     316:  00:8D66  23                  		INC HL
     317:  00:8D67  56                  		LD D,[HL]
     318:  00:8D68  2A 01 F0            		LD HL,[PT3_MODADDR]
     319:  00:8D6B  19                  		ADD HL,DE
     320:  00:8D6C  DD 75 03            		LD [IX+(CHNPRM_SamPtr-12)],L
     321:  00:8D6F  DD 74 04            		LD [IX+(CHNPRM_SamPtr+1-12)],H
     322:  00:8D72  18 41               		JR PD_LOOP
     323:  00:8D74                      
     324:  00:8D74  07                  PD_VOL:		RLCA
     325:  00:8D75  07                  		RLCA
     326:  00:8D76  07                  		RLCA
     327:  00:8D77  07                  		RLCA
     328:  00:8D78  DD 77 10            		LD [IX+(CHNPRM_Volume-12)],A
     329:  00:8D7B  18 3B               		JR PD_LP2
     330:  00:8D7D                      	
     331:  00:8D7D  DD 77 08            PD_EOff:	LD [IX+(CHNPRM_Env_En-12)],A
     332:  00:8D80  DD 77 F4            		LD [IX+(CHNPRM_PsInOr-12)],A
     333:  00:8D83  18 33               		JR PD_LP2
     334:  00:8D85                      
     335:  00:8D85  3D                  PD_SorE:	DEC A
     336:  00:8D86  20 07               		JR NZ,PD_ENV
     337:  00:8D88  0A                  		LD A,[BC]
     338:  00:8D89  03                  		INC BC
     339:  00:8D8A  DD 77 05            		LD [IX+(CHNPRM_NNtSkp-12)],A
     340:  00:8D8D  18 29               		JR PD_LP2
     341:  00:8D8F                      
     342:  00:8D8F  CD C1 8E            PD_ENV:		CALL SETENV
     343:  00:8D92  18 24               		JR PD_LP2
     344:  00:8D94                      
     345:  00:8D94  CD DD 8E            PD_ORN:		CALL SETORN
     346:  00:8D97  18 1C               		JR PD_LOOP
     347:  00:8D99                             
     348:  00:8D99  DD 77 08            PD_ESAM:	LD [IX+(CHNPRM_Env_En-12)],A
     349:  00:8D9C  DD 77 F4            		LD [IX+(CHNPRM_PsInOr-12)],A
     350:  00:8D9F  C4 C1 8E            		CALL NZ,SETENV
     351:  00:8DA2  0A                  		LD A,[BC]
     352:  00:8DA3  03                  		INC BC
     353:  00:8DA4  18 B8               		JR PD_SAM_
     354:  00:8DA6                      
     355:  00:8DA6  DD 7E 06            PTDECOD:	LD A,[IX+(CHNPRM_Note-12)]
     356:  00:8DA9  32 0F F0            		LD [PT3_PrNote],A
     357:  00:8DAC  DD 6E FA            		LD L,[IX+(CHNPRM_CrTnSl-12)]
     358:  00:8DAF  DD 66 FB            		LD H,[IX+(CHNPRM_CrTnSl+1-12)]
     359:  00:8DB2  22 10 F0            		LD [PT3_PrSlide],HL
     360:  00:8DB5                      
     361:  00:8DB5  11 10 20            PD_LOOP:	LD DE,$2010
     362:  00:8DB8  0A                  PD_LP2:		LD A,[BC]
     363:  00:8DB9  03                  		INC BC
     364:  00:8DBA  83                  		ADD A,E
     365:  00:8DBB  38 96               		JR C,PD_OrSm
     366:  00:8DBD  82                  		ADD A,D
     367:  00:8DBE  28 4A               		JR Z,PD_FIN
     368:  00:8DC0  38 9B               		JR C,PD_SAM
     369:  00:8DC2  83                  		ADD A,E
     370:  00:8DC3  28 25               		JR Z,PD_REL
     371:  00:8DC5  38 AD               		JR C,PD_VOL
     372:  00:8DC7  83                  		ADD A,E
     373:  00:8DC8  28 B3               		JR Z,PD_EOff
     374:  00:8DCA  38 B9               		JR C,PD_SorE
     375:  00:8DCC  C6 60               		ADD A,96
     376:  00:8DCE  38 20               		JR C,PD_NOTE
     377:  00:8DD0  83                  		ADD A,E
     378:  00:8DD1  38 C1               		JR C,PD_ORN
     379:  00:8DD3  82                  		ADD A,D
     380:  00:8DD4  38 0F               		JR C,PD_NOIS
     381:  00:8DD6  83                  		ADD A,E
     382:  00:8DD7  38 C0               		JR C,PD_ESAM
     383:  00:8DD9  87                  		ADD A,A
     384:  00:8DDA  5F                  		LD E,A
     385:  00:8DDB  21 16 6E            		LD HL,(SPCCOMS+$DF20) % 65536	; Adapted from original Speccy version (saves 6 bytes)
     386:  00:8DDE  19                  		ADD HL,DE
     387:  00:8DDF  5E                  		LD E,[HL]
     388:  00:8DE0  23                  		INC HL
     389:  00:8DE1  56                  		LD D,[HL]
     390:  00:8DE2  D5                  		PUSH DE
     391:  00:8DE3  18 D0               		JR PD_LOOP
     392:  00:8DE5                      
     393:  00:8DE5  32 7E F0            PD_NOIS:	LD [Ns_Base],A
     394:  00:8DE8  18 CE               		JR PD_LP2
     395:  00:8DEA                      
     396:  00:8DEA  DD CB 09 86         PD_REL:		RES 0,[IX+(CHNPRM_Flags-12)]
     397:  00:8DEE  18 08               		JR PD_RES
     398:  00:8DF0                      	
     399:  00:8DF0  DD 77 06            PD_NOTE:	LD [IX+(CHNPRM_Note-12)],A
     400:  00:8DF3  DD CB 09 C6         		SET 0,[IX+(CHNPRM_Flags-12)]
     401:  00:8DF7  AF                  		XOR A
     402:  00:8DF8                      
     403:  00:8DF8  ED 73 09 F0         PD_RES:		LD [PT3_PDSP],SP
     404:  00:8DFC  DD F9               		LD SP,IX
     405:  00:8DFE  67                  		LD H,A
     406:  00:8DFF  6F                  		LD L,A
     407:  00:8E00  E5                  		PUSH HL
     408:  00:8E01  E5                  		PUSH HL
     409:  00:8E02  E5                  		PUSH HL
     410:  00:8E03  E5                  		PUSH HL
     411:  00:8E04  E5                  		PUSH HL
     412:  00:8E05  E5                  		PUSH HL
     413:  00:8E06  ED 7B 09 F0         		LD SP,[PT3_PDSP]
     414:  00:8E0A                      
     415:  00:8E0A  DD 7E 05            PD_FIN:		LD A,[IX+(CHNPRM_NNtSkp-12)]
     416:  00:8E0D  DD 77 0F            		LD [IX+(CHNPRM_NtSkCn-12)],A
     417:  00:8E10  C9                  		RET
     418:  00:8E11                      
     419:  00:8E11  DD CB 09 96         C_PORTM:	RES 2,[IX+(CHNPRM_Flags-12)]
     420:  00:8E15  0A                  		LD A,[BC]
     421:  00:8E16  03                  		INC BC
     422:  00:8E17                      		;SKIP PRECALCULATED TONE DELTA [BECAUSE
     423:  00:8E17                      		;CANNOT BE RIGHT AFTER PT3 COMPILATION]
     424:  00:8E17  03                  		INC BC
     425:  00:8E18  03                  		INC BC
     426:  00:8E19  DD 77 0A            		LD [IX+(CHNPRM_TnSlDl-12)],A
     427:  00:8E1C  DD 77 F9            		LD [IX+(CHNPRM_TSlCnt-12)],A
     428:  00:8E1F  11 80 F0            		LD DE,NT_
     429:  00:8E22  DD 7E 06            		LD A,[IX+(CHNPRM_Note-12)]
     430:  00:8E25  DD 77 07            		LD [IX+(CHNPRM_SlToNt-12)],A
     431:  00:8E28  87                  		ADD A,A
     432:  00:8E29  6F                  		LD L,A
     433:  00:8E2A  26 00               		LD H,0
     434:  00:8E2C  19                  		ADD HL,DE
     435:  00:8E2D  7E                  		LD A,[HL]
     436:  00:8E2E  23                  		INC HL
     437:  00:8E2F  66                  		LD H,[HL]
     438:  00:8E30  6F                  		LD L,A
     439:  00:8E31  E5                  		PUSH HL
     440:  00:8E32  3A 0F F0            		LD A,[PT3_PrNote]
     441:  00:8E35  DD 77 06            		LD [IX+(CHNPRM_Note-12)],A
     442:  00:8E38  87                  		ADD A,A
     443:  00:8E39  6F                  		LD L,A
     444:  00:8E3A  26 00               		LD H,0
     445:  00:8E3C  19                  		ADD HL,DE
     446:  00:8E3D  5E                  		LD E,[HL]
     447:  00:8E3E  23                  		INC HL
     448:  00:8E3F  56                  		LD D,[HL]
     449:  00:8E40  E1                  		POP HL
     450:  00:8E41  ED 52               		SBC HL,DE
     451:  00:8E43  DD 75 0D            		LD [IX+(CHNPRM_TnDelt-12)],L
     452:  00:8E46  DD 74 0E            		LD [IX+(CHNPRM_TnDelt+1-12)],H
     453:  00:8E49  ED 5B 10 F0         		LD DE,[PT3_PrSlide]
     454:  00:8E4D  DD 73 FA            		LD [IX+(CHNPRM_CrTnSl-12)],E
     455:  00:8E50  DD 72 FB            		LD [IX+(CHNPRM_CrTnSl+1-12)],D
     456:  00:8E53  0A                  		LD A,[BC] ;SIGNED TONE STEP
     457:  00:8E54  03                  		INC BC
     458:  00:8E55  08                  		EX AF,AF'
     459:  00:8E56  0A                  		LD A,[BC]
     460:  00:8E57  03                  		INC BC
     461:  00:8E58  A7                  		AND A
     462:  00:8E59  28 01               		JR Z,.NOSIG
     463:  00:8E5B  EB                  		EX DE,HL
     464:  00:8E5C  ED 52               .NOSIG:	SBC HL,DE
     465:  00:8E5E  F2 66 8E            		JP P,SET_STP
     466:  00:8E61  2F                  		CPL
     467:  00:8E62  08                  		EX AF,AF'
     468:  00:8E63  ED 44               		NEG
     469:  00:8E65  08                  		EX AF,AF'
     470:  00:8E66  DD 77 0C            SET_STP:	LD [IX+(CHNPRM_TSlStp+1-12)],A
     471:  00:8E69  08                  		EX AF,AF'
     472:  00:8E6A  DD 77 0B            		LD [IX+(CHNPRM_TSlStp-12)],A
     473:  00:8E6D  DD 36 FE 00         		LD [IX+(CHNPRM_COnOff-12)],0
     474:  00:8E71  C9                  		RET
     475:  00:8E72                      
     476:  00:8E72  DD CB 09 D6         C_GLISS:	SET 2,[IX+(CHNPRM_Flags-12)]
     477:  00:8E76  0A                  		LD A,[BC]
     478:  00:8E77  03                  		INC BC
     479:  00:8E78  DD 77 0A            		LD [IX+(CHNPRM_TnSlDl-12)],A
     480:  00:8E7B  DD 77 F9            		LD [IX+(CHNPRM_TSlCnt-12)],A
     481:  00:8E7E  0A                  		LD A,[BC]
     482:  00:8E7F  03                  		INC BC
     483:  00:8E80  08                  		EX AF,AF'
     484:  00:8E81  0A                  		LD A,[BC]
     485:  00:8E82  03                  		INC BC
     486:  00:8E83  18 E1               		JR SET_STP
     487:  00:8E85                      
     488:  00:8E85  0A                  C_SMPOS:	LD A,[BC]
     489:  00:8E86  03                  		INC BC
     490:  00:8E87  DD 77 F5            		LD [IX+(CHNPRM_PsInSm-12)],A
     491:  00:8E8A  C9                  		RET
     492:  00:8E8B                      
     493:  00:8E8B  0A                  C_ORPOS:	LD A,[BC]
     494:  00:8E8C  03                  		INC BC
     495:  00:8E8D  DD 77 F4            		LD [IX+(CHNPRM_PsInOr-12)],A
     496:  00:8E90  C9                  		RET
     497:  00:8E91                      
     498:  00:8E91  0A                  C_VIBRT:	LD A,[BC]
     499:  00:8E92  03                  		INC BC
     500:  00:8E93  DD 77 FF            		LD [IX+(CHNPRM_OnOffD-12)],A
     501:  00:8E96  DD 77 FE            		LD [IX+(CHNPRM_COnOff-12)],A
     502:  00:8E99  0A                  		LD A,[BC]
     503:  00:8E9A  03                  		INC BC
     504:  00:8E9B  DD 77 00            		LD [IX+(CHNPRM_OffOnD-12)],A
     505:  00:8E9E  AF                  		XOR A
     506:  00:8E9F  DD 77 F9            		LD [IX+(CHNPRM_TSlCnt-12)],A
     507:  00:8EA2  DD 77 FA            		LD [IX+(CHNPRM_CrTnSl-12)],A
     508:  00:8EA5  DD 77 FB            		LD [IX+(CHNPRM_CrTnSl+1-12)],A
     509:  00:8EA8  C9                  		RET
     510:  00:8EA9                      
     511:  00:8EA9  0A                  C_ENGLS:	LD A,[BC]
     512:  00:8EAA  03                  		INC BC
     513:  00:8EAB  32 1E F0            		LD [PT3_Env_Del],A
     514:  00:8EAE  32 7D F0            		LD [CurEDel],A
     515:  00:8EB1  0A                  		LD A,[BC]
     516:  00:8EB2  03                  		INC BC
     517:  00:8EB3  6F                  		LD L,A
     518:  00:8EB4  0A                  		LD A,[BC]
     519:  00:8EB5  03                  		INC BC
     520:  00:8EB6  67                  		LD H,A
     521:  00:8EB7  22 1F F0            		LD [PT3_ESldAdd],HL
     522:  00:8EBA  C9                  		RET
     523:  00:8EBB                      
     524:  00:8EBB  0A                  C_DELAY:	LD A,[BC]
     525:  00:8EBC  03                  		INC BC
     526:  00:8EBD  32 1C F0            		LD [PT3_Delay],A
     527:  00:8EC0  C9                  		RET
     528:  00:8EC1                      	
     529:  00:8EC1  DD 73 08            SETENV:		LD [IX+(CHNPRM_Env_En-12)],E
     530:  00:8EC4  32 4D F1            		LD [AYREGS+AR_EnvTp],A
     531:  00:8EC7  0A                  		LD A,[BC]
     532:  00:8EC8  03                  		INC BC
     533:  00:8EC9  67                  		LD H,A
     534:  00:8ECA  0A                  		LD A,[BC]
     535:  00:8ECB  03                  		INC BC
     536:  00:8ECC  6F                  		LD L,A
     537:  00:8ECD  22 4E F1            		LD [EnvBase],HL
     538:  00:8ED0  AF                  		XOR A
     539:  00:8ED1  DD 77 F4            		LD [IX+(CHNPRM_PsInOr-12)],A
     540:  00:8ED4  32 7D F0            		LD [CurEDel],A
     541:  00:8ED7  67                  		LD H,A
     542:  00:8ED8  6F                  		LD L,A
     543:  00:8ED9  22 7B F0            		LD [CurESld],HL
     544:  00:8EDC  C9                  C_NOP:		RET
     545:  00:8EDD                      
     546:  00:8EDD  87                  SETORN:		ADD A,A
     547:  00:8EDE  5F                  		LD E,A
     548:  00:8EDF  16 00               		LD D,0
     549:  00:8EE1  DD 72 F4            		LD [IX+(CHNPRM_PsInOr-12)],D
     550:  00:8EE4  2A 07 F0            		LD HL,[PT3_OrnPtrs]
     551:  00:8EE7  19                  		ADD HL,DE
     552:  00:8EE8  5E                  		LD E,[HL]
     553:  00:8EE9  23                  		INC HL
     554:  00:8EEA  56                  		LD D,[HL]
     555:  00:8EEB  2A 01 F0            		LD HL,[PT3_MODADDR]
     556:  00:8EEE  19                  		ADD HL,DE
     557:  00:8EEF  DD 75 01            		LD [IX+(CHNPRM_OrnPtr-12)],L
     558:  00:8EF2  DD 74 02            		LD [IX+(CHNPRM_OrnPtr+1-12)],H
     559:  00:8EF5  C9                  		RET
     560:  00:8EF6                      
     561:  00:8EF6                      		;ALL 16 ADDRESSES TO PROTECT FROM BROKEN PT3 MODULES
     562:  00:8EF6  DC 8E               SPCCOMS:	dw C_NOP
     563:  00:8EF8  72 8E               		dw C_GLISS
     564:  00:8EFA  11 8E               		dw C_PORTM
     565:  00:8EFC  85 8E               		dw C_SMPOS
     566:  00:8EFE  8B 8E               		dw C_ORPOS
     567:  00:8F00  91 8E               		dw C_VIBRT
     568:  00:8F02  DC 8E               		dw C_NOP
     569:  00:8F04  DC 8E               		dw C_NOP
     570:  00:8F06  A9 8E               		dw C_ENGLS
     571:  00:8F08  BB 8E               		dw C_DELAY
     572:  00:8F0A  DC 8E               		dw C_NOP
     573:  00:8F0C  DC 8E               		dw C_NOP
     574:  00:8F0E  DC 8E               		dw C_NOP
     575:  00:8F10  DC 8E               		dw C_NOP
     576:  00:8F12  DC 8E               		dw C_NOP
     577:  00:8F14  DC 8E               		dw C_NOP
     578:  00:8F16                      
     579:  00:8F16  AF                  CHREGS:		XOR A
     580:  00:8F17  32 4A F1            		LD [AYREGS+AR_AmplC],A
     581:  00:8F1A  DD CB 15 46         		BIT 0,[IX+CHNPRM_Flags]
     582:  00:8F1E  E5                  		PUSH HL
     583:  00:8F1F  CA 45 90            		JP Z,.CH_EXIT
     584:  00:8F22  ED 73 0B F0         		LD [PT3_CSP],SP
     585:  00:8F26  DD 6E 0D            		LD L,[IX+CHNPRM_OrnPtr]
     586:  00:8F29  DD 66 0E            		LD H,[IX+CHNPRM_OrnPtr+1]
     587:  00:8F2C  F9                  		LD SP,HL
     588:  00:8F2D  D1                  		POP DE
     589:  00:8F2E  67                  		LD H,A
     590:  00:8F2F  DD 7E 00            		LD A,[IX+CHNPRM_PsInOr]
     591:  00:8F32  6F                  		LD L,A
     592:  00:8F33  39                  		ADD HL,SP
     593:  00:8F34  3C                  		INC A
     594:  00:8F35  BA                  		CP D
     595:  00:8F36  38 01               		JR C,.CH_ORPS
     596:  00:8F38  7B                  		LD A,E
     597:  00:8F39  DD 77 00            .CH_ORPS:	LD [IX+CHNPRM_PsInOr],A
     598:  00:8F3C  DD 7E 12            		LD A,[IX+CHNPRM_Note]
     599:  00:8F3F  86                  		ADD A,[HL]
     600:  00:8F40  F2 44 8F            		JP P,.CH_NTP
     601:  00:8F43  AF                  		XOR A
     602:  00:8F44  FE 60               .CH_NTP:	CP 96
     603:  00:8F46  38 02               		JR C,.CH_NOK
     604:  00:8F48  3E 5F               		LD A,95
     605:  00:8F4A  87                  .CH_NOK:	ADD A,A
     606:  00:8F4B  08                  		EX AF,AF'
     607:  00:8F4C  DD 6E 0F            		LD L,[IX+CHNPRM_SamPtr]
     608:  00:8F4F  DD 66 10            		LD H,[IX+CHNPRM_SamPtr+1]
     609:  00:8F52  F9                  		LD SP,HL
     610:  00:8F53  D1                  		POP DE
     611:  00:8F54  26 00               		LD H,0
     612:  00:8F56  DD 7E 01            		LD A,[IX+CHNPRM_PsInSm]
     613:  00:8F59  47                  		LD B,A
     614:  00:8F5A  87                  		ADD A,A
     615:  00:8F5B  87                  		ADD A,A
     616:  00:8F5C  6F                  		LD L,A
     617:  00:8F5D  39                  		ADD HL,SP
     618:  00:8F5E  F9                  		LD SP,HL
     619:  00:8F5F  78                  		LD A,B
     620:  00:8F60  3C                  		INC A
     621:  00:8F61  BA                  		CP D
     622:  00:8F62  38 01               		JR C,.CH_SMPS
     623:  00:8F64  7B                  		LD A,E
     624:  00:8F65  DD 77 01            .CH_SMPS:	LD [IX+CHNPRM_PsInSm],A
     625:  00:8F68  C1                  		POP BC
     626:  00:8F69  E1                  		POP HL
     627:  00:8F6A  DD 5E 08            		LD E,[IX+CHNPRM_TnAcc]
     628:  00:8F6D  DD 56 09            		LD D,[IX+CHNPRM_TnAcc+1]
     629:  00:8F70  19                  		ADD HL,DE
     630:  00:8F71  CB 70               		BIT 6,B
     631:  00:8F73  28 06               		JR Z,.CH_NOAC
     632:  00:8F75  DD 75 08            		LD [IX+CHNPRM_TnAcc],L
     633:  00:8F78  DD 74 09            		LD [IX+CHNPRM_TnAcc+1],H
     634:  00:8F7B  EB                  .CH_NOAC:	EX DE,HL
     635:  00:8F7C  08                  		EX AF,AF'
     636:  00:8F7D  6F                  		LD L,A
     637:  00:8F7E  26 00               		LD H,0
     638:  00:8F80  31 80 F0            		LD SP,NT_
     639:  00:8F83  39                  		ADD HL,SP
     640:  00:8F84  F9                  		LD SP,HL
     641:  00:8F85  E1                  		POP HL
     642:  00:8F86  19                  		ADD HL,DE
     643:  00:8F87  DD 5E 06            		LD E,[IX+CHNPRM_CrTnSl]
     644:  00:8F8A  DD 56 07            		LD D,[IX+CHNPRM_CrTnSl+1]
     645:  00:8F8D  19                  		ADD HL,DE
     646:  00:8F8E  ED 7B 0B F0         		LD SP,[PT3_CSP]
     647:  00:8F92  E3                  		EX [SP],HL
     648:  00:8F93  AF                  		XOR A
     649:  00:8F94  DD B6 05            		OR [IX+CHNPRM_TSlCnt]
     650:  00:8F97  28 3E               		JR Z,.CH_AMP
     651:  00:8F99  DD 35 05            		DEC [IX+CHNPRM_TSlCnt]
     652:  00:8F9C  20 39               		JR NZ,.CH_AMP
     653:  00:8F9E  DD 7E 16            		LD A,[IX+CHNPRM_TnSlDl]
     654:  00:8FA1  DD 77 05            		LD [IX+CHNPRM_TSlCnt],A
     655:  00:8FA4  DD 6E 17            		LD L,[IX+CHNPRM_TSlStp]
     656:  00:8FA7  DD 66 18            		LD H,[IX+CHNPRM_TSlStp+1]
     657:  00:8FAA  7C                  		LD A,H
     658:  00:8FAB  19                  		ADD HL,DE
     659:  00:8FAC  DD 75 06            		LD [IX+CHNPRM_CrTnSl],L
     660:  00:8FAF  DD 74 07            		LD [IX+CHNPRM_CrTnSl+1],H
     661:  00:8FB2  DD CB 15 56         		BIT 2,[IX+CHNPRM_Flags]
     662:  00:8FB6  20 1F               		JR NZ,.CH_AMP
     663:  00:8FB8  DD 5E 19            		LD E,[IX+CHNPRM_TnDelt]
     664:  00:8FBB  DD 56 1A            		LD D,[IX+CHNPRM_TnDelt+1]
     665:  00:8FBE  A7                  		AND A
     666:  00:8FBF  28 01               		JR Z,.CH_STPP
     667:  00:8FC1  EB                  		EX DE,HL
     668:  00:8FC2  ED 52               .CH_STPP:	SBC HL,DE
     669:  00:8FC4  FA D7 8F            		JP M,.CH_AMP
     670:  00:8FC7  DD 7E 13            		LD A,[IX+CHNPRM_SlToNt]
     671:  00:8FCA  DD 77 12            		LD [IX+CHNPRM_Note],A
     672:  00:8FCD  AF                  		XOR A
     673:  00:8FCE  DD 77 05            		LD [IX+CHNPRM_TSlCnt],A
     674:  00:8FD1  DD 77 06            		LD [IX+CHNPRM_CrTnSl],A
     675:  00:8FD4  DD 77 07            		LD [IX+CHNPRM_CrTnSl+1],A
     676:  00:8FD7  DD 7E 02            .CH_AMP:	LD A,[IX+CHNPRM_CrAmSl]
     677:  00:8FDA  CB 79               		BIT 7,C
     678:  00:8FDC  28 13               		JR Z,.CH_NOAM
     679:  00:8FDE  CB 71               		BIT 6,C
     680:  00:8FE0  28 07               		JR Z,.CH_AMIN
     681:  00:8FE2  FE 0F               		CP 15
     682:  00:8FE4  28 0B               		JR Z,.CH_NOAM
     683:  00:8FE6  3C                  		INC A
     684:  00:8FE7  18 05               		JR .CH_SVAM
     685:  00:8FE9  FE F1               .CH_AMIN:	CP -15
     686:  00:8FEB  28 04               		JR Z,.CH_NOAM
     687:  00:8FED  3D                  		DEC A
     688:  00:8FEE  DD 77 02            .CH_SVAM:	LD [IX+CHNPRM_CrAmSl],A
     689:  00:8FF1  6F                  .CH_NOAM:	LD L,A
     690:  00:8FF2  78                  		LD A,B
     691:  00:8FF3  E6 0F               		AND 15
     692:  00:8FF5  85                  		ADD A,L
     693:  00:8FF6  F2 FA 8F            		JP P,.CH_APOS
     694:  00:8FF9  AF                  		XOR A
     695:  00:8FFA  FE 10               .CH_APOS:	CP 16
     696:  00:8FFC  38 02               		JR C,.CH_VOL
     697:  00:8FFE  3E 0F               		LD A,15
     698:  00:9000  DD B6 1C            .CH_VOL:	OR [IX+CHNPRM_Volume]
     699:  00:9003  6F                  		LD L,A
     700:  00:9004  26 00               		LD H,0
     701:  00:9006  11 40 F1            		LD DE,VT_
     702:  00:9009  19                  		ADD HL,DE
     703:  00:900A  7E                  		LD A,[HL]
     704:  00:900B  CB 41               .CH_ENV:	BIT 0,C
     705:  00:900D  20 03               		JR NZ,.CH_NOEN
     706:  00:900F  DD B6 14            		OR [IX+CHNPRM_Env_En]
     707:  00:9012  32 4A F1            .CH_NOEN:	LD [AYREGS+AR_AmplC],A
     708:  00:9015  CB 78               		BIT 7,B
     709:  00:9017  79                  		LD A,C
     710:  00:9018  28 19               		JR Z,.NO_ENSL
     711:  00:901A  17                  		RLA
     712:  00:901B  17                  		RLA
     713:  00:901C  CB 2F               		SRA A
     714:  00:901E  CB 2F               		SRA A
     715:  00:9020  CB 2F               		SRA A
     716:  00:9022  DD 86 04            		ADD A,[IX+CHNPRM_CrEnSl] ;SEE COMMENT BELOW
     717:  00:9025  CB 68               		BIT 5,B
     718:  00:9027  28 03               		JR Z,.NO_ENAC
     719:  00:9029  DD 77 04            		LD [IX+CHNPRM_CrEnSl],A
     720:  00:902C  21 1D F0            .NO_ENAC:	LD HL,PT3_AddToEn
     721:  00:902F  86                  		ADD A,[HL] ;BUG IN PT3 - NEED WORD HERE.
     722:  00:9030                      			   ;FIX IT IN NEXT VERSION?
     723:  00:9030  77                  		LD [HL],A
     724:  00:9031  18 0E               		JR .CH_MIX
     725:  00:9033  1F                  .NO_ENSL:	RRA
     726:  00:9034  DD 86 03            		ADD A,[IX+CHNPRM_CrNsSl]
     727:  00:9037  32 7F F0            		LD [AddToNs],A
     728:  00:903A  CB 68               		BIT 5,B
     729:  00:903C  28 03               		JR Z,.CH_MIX
     730:  00:903E  DD 77 03            		LD [IX+CHNPRM_CrNsSl],A
     731:  00:9041  78                  .CH_MIX:	LD A,B
     732:  00:9042  1F                  		RRA
     733:  00:9043  E6 48               		AND $48
     734:  00:9045  21 47 F1            .CH_EXIT:	LD HL,AYREGS+AR_Mixer
     735:  00:9048  B6                  		OR [HL]
     736:  00:9049  0F                  		RRCA
     737:  00:904A  77                  		LD [HL],A
     738:  00:904B  E1                  		POP HL
     739:  00:904C  AF                  		XOR A
     740:  00:904D  DD B6 0A            		OR [IX+CHNPRM_COnOff]
     741:  00:9050  C8                  		RET Z
     742:  00:9051  DD 35 0A            		DEC [IX+CHNPRM_COnOff]
     743:  00:9054  C0                  		RET NZ
     744:  00:9055  DD AE 15            		XOR [IX+CHNPRM_Flags]
     745:  00:9058  DD 77 15            		LD [IX+CHNPRM_Flags],A
     746:  00:905B  1F                  		RRA
     747:  00:905C  DD 7E 0B            		LD A,[IX+CHNPRM_OnOffD]
     748:  00:905F  38 03               		JR C,.CH_ONDL
     749:  00:9061  DD 7E 0C            		LD A,[IX+CHNPRM_OffOnD]
     750:  00:9064  DD 77 0A            .CH_ONDL:	LD [IX+CHNPRM_COnOff],A
     751:  00:9067  C9                  		RET
     752:  00:9068                      
     753:  00:9068  AF                  PT3_PLAY:	XOR A
     754:  00:9069  32 1D F0            		LD [PT3_AddToEn],A
     755:  00:906C  32 47 F1            		LD [AYREGS+AR_Mixer],A
     756:  00:906F  3D                  		DEC A
     757:  00:9070  32 4D F1            		LD [AYREGS+AR_EnvTp],A
     758:  00:9073  21 7A F0            		LD HL,DelyCnt
     759:  00:9076  35                  		DEC [HL]
     760:  00:9077  C2 FE 90            		JP NZ,.PL2
     761:  00:907A  21 3E F0            		LD HL,ChanA+CHNPRM_NtSkCn
     762:  00:907D  35                  		DEC [HL]
     763:  00:907E  20 4E               		JR NZ,.PL1B
     764:  00:9080  ED 4B 12 F0         		LD BC,[PT3_AdInPtA]
     765:  00:9084  0A                  		LD A,[BC]
     766:  00:9085  A7                  		AND A
     767:  00:9086  20 3B               		JR NZ,.PL1A
     768:  00:9088  57                  		LD D,A
     769:  00:9089  32 7E F0            		LD [Ns_Base],A
     770:  00:908C  2A 03 F0            		LD HL,[PT3_CrPsPtr]
     771:  00:908F  23                  		INC HL
     772:  00:9090  7E                  		LD A,[HL]
     773:  00:9091  3C                  		INC A
     774:  00:9092  20 08               		JR NZ,.PLNLP
     775:  00:9094  CD FE 8B            		CALL CHECKLP
     776:  00:9097  2A 18 F0            		LD HL,[PT3_LPosPtr]
     777:  00:909A  7E                  		LD A,[HL]
     778:  00:909B  3C                  		INC A
     779:  00:909C  22 03 F0            .PLNLP:	LD [PT3_CrPsPtr],HL
     780:  00:909F  3D                  		DEC A
     781:  00:90A0  87                  		ADD A,A
     782:  00:90A1  5F                  		LD E,A
     783:  00:90A2  CB 12               		RL D
     784:  00:90A4  2A 1A F0            		LD HL,[PT3_PatsPtr]
     785:  00:90A7  19                  		ADD HL,DE
     786:  00:90A8  ED 5B 01 F0         		LD DE,[PT3_MODADDR]
     787:  00:90AC  ED 73 0D F0         		LD [PT3_PSP],SP
     788:  00:90B0  F9                  		LD SP,HL
     789:  00:90B1  E1                  		POP HL
     790:  00:90B2  19                  		ADD HL,DE
     791:  00:90B3  44                  		LD B,H
     792:  00:90B4  4D                  		LD C,L
     793:  00:90B5  E1                  		POP HL
     794:  00:90B6  19                  		ADD HL,DE
     795:  00:90B7  22 14 F0            		LD [PT3_AdInPtB],HL
     796:  00:90BA  E1                  		POP HL
     797:  00:90BB  19                  		ADD HL,DE
     798:  00:90BC  22 16 F0            		LD [PT3_AdInPtC],HL
     799:  00:90BF  ED 7B 0D F0         		LD SP,[PT3_PSP]
     800:  00:90C3                      
     801:  00:90C3  DD 21 2F F0         .PL1A:		LD IX,ChanA+12
     802:  00:90C7  CD A6 8D            		CALL PTDECOD
     803:  00:90CA  ED 43 12 F0         		LD [PT3_AdInPtA],BC
     804:  00:90CE                      
     805:  00:90CE  21 5B F0            .PL1B:		LD HL,ChanB+CHNPRM_NtSkCn
     806:  00:90D1  35                  		DEC [HL]
     807:  00:90D2  20 0F               		JR NZ,.PL1C
     808:  00:90D4  DD 21 4C F0         		LD IX,ChanB+12
     809:  00:90D8  ED 4B 14 F0         		LD BC,[PT3_AdInPtB]
     810:  00:90DC  CD A6 8D            		CALL PTDECOD
     811:  00:90DF  ED 43 14 F0         		LD [PT3_AdInPtB],BC
     812:  00:90E3                      
     813:  00:90E3  21 78 F0            .PL1C:		LD HL,ChanC+CHNPRM_NtSkCn
     814:  00:90E6  35                  		DEC [HL]
     815:  00:90E7  20 0F               		JR NZ,.PL1D
     816:  00:90E9  DD 21 69 F0         		LD IX,ChanC+12
     817:  00:90ED  ED 4B 16 F0         		LD BC,[PT3_AdInPtC]
     818:  00:90F1  CD A6 8D            		CALL PTDECOD
     819:  00:90F4  ED 43 16 F0         		LD [PT3_AdInPtC],BC
     820:  00:90F8                      
     821:  00:90F8  3A 1C F0            .PL1D:		LD A,[PT3_Delay]
     822:  00:90FB  32 7A F0            		LD [DelyCnt],A
     823:  00:90FE                      
     824:  00:90FE  DD 21 23 F0         .PL2:		LD IX,ChanA
     825:  00:9102  2A 40 F1            		LD HL,[AYREGS+AR_TonA]
     826:  00:9105  CD 16 8F            		CALL CHREGS
     827:  00:9108  22 40 F1            		LD [AYREGS+AR_TonA],HL
     828:  00:910B  3A 4A F1            		LD A,[AYREGS+AR_AmplC]
     829:  00:910E  32 48 F1            		LD [AYREGS+AR_AmplA],A
     830:  00:9111  DD 21 40 F0         		LD IX,ChanB
     831:  00:9115  2A 42 F1            		LD HL,[AYREGS+AR_TonB]
     832:  00:9118  CD 16 8F            		CALL CHREGS
     833:  00:911B  22 42 F1            		LD [AYREGS+AR_TonB],HL
     834:  00:911E  3A 4A F1            		LD A,[AYREGS+AR_AmplC]
     835:  00:9121  32 49 F1            		LD [AYREGS+AR_AmplB],A
     836:  00:9124  DD 21 5D F0         		LD IX,ChanC
     837:  00:9128  2A 44 F1            		LD HL,[AYREGS+AR_TonC]
     838:  00:912B  CD 16 8F            		CALL CHREGS
     839:  00:912E  22 44 F1            		LD [AYREGS+AR_TonC],HL
     840:  00:9131                      
     841:  00:9131  2A 7E F0            		LD HL,[Ns_Base_AddToNs]
     842:  00:9134  7C                  		LD A,H
     843:  00:9135  85                  		ADD A,L
     844:  00:9136  32 46 F1            		LD [AYREGS+AR_Noise],A
     845:  00:9139                      
     846:  00:9139  3A 1D F0            		LD A,[PT3_AddToEn]
     847:  00:913C  5F                  		LD E,A
     848:  00:913D  87                  		ADD A,A
     849:  00:913E  9F                  		SBC A,A
     850:  00:913F  57                  		LD D,A
     851:  00:9140  2A 4E F1            		LD HL,[EnvBase]
     852:  00:9143  19                  		ADD HL,DE
     853:  00:9144  ED 5B 7B F0         		LD DE,[CurESld]
     854:  00:9148  19                  		ADD HL,DE
     855:  00:9149  22 4B F1            		LD [AYREGS+AR_Env],HL
     856:  00:914C                      
     857:  00:914C  AF                  		XOR A
     858:  00:914D  21 7D F0            		LD HL,CurEDel
     859:  00:9150  B6                  		OR [HL]
     860:  00:9151  C8                  		RET Z
     861:  00:9152  35                  		DEC [HL]
     862:  00:9153  C0                  		RET NZ
     863:  00:9154  3A 1E F0            		LD A,[PT3_Env_Del]
     864:  00:9157  77                  		LD [HL],A
     865:  00:9158  2A 1F F0            		LD HL,[PT3_ESldAdd]
     866:  00:915B  19                  		ADD HL,DE
     867:  00:915C  22 7B F0            		LD [CurESld],HL
     868:  00:915F  C9                  		RET
     869:  00:9160                      
     870:  00:9160  AF                  PT3_ROUT:	XOR A
     871:  00:9161                      	
     872:  00:9161                      ROUT_A0:	; --- FIXES BITS 6 AND 7 OF MIXER ---
     873:  00:9161  21 47 F1            		LD	HL,AYREGS+AR_Mixer
     874:  00:9164  CB FE               		set	7,[hl]
     875:  00:9166  CB B6               		res	6,[hl]
     876:  00:9168                      
     877:  00:9168  0E A0               		LD C,$A0
     878:  00:916A  21 40 F1            		LD HL,AYREGS
     879:  00:916D  ED 79               .LOUT:		OUT [C],A
     880:  00:916F  0C                  		INC C
     881:  00:9170  ED A3               		OUTI 
     882:  00:9172  0D                  		DEC C
     883:  00:9173  3C                  		INC A
     884:  00:9174  FE 0D               		CP 13
     885:  00:9176  20 F5               		JR NZ,.LOUT
     886:  00:9178  ED 79               		OUT [C],A
     887:  00:917A  7E                  		LD A,[HL]
     888:  00:917B  A7                  		AND A
     889:  00:917C  F8                  		RET M
     890:  00:917D  0C                  		INC C
     891:  00:917E  ED 79               		OUT [C],A
     892:  00:9180  C9                  		RET
     893:  00:9181                      
     894:  00:9181  64                  NT_DATA:	db (T_NEW_0-T1_)*2
     895:  00:9182  2A                  		db TCNEW_0-T_
     896:  00:9183  65                  		db (T_OLD_0-T1_)*2+1
     897:  00:9184  00                  		db TCOLD_0-T_
     898:  00:9185  01                  		db (T_NEW_1-T1_)*2+1
     899:  00:9186  0C                  		db TCNEW_1-T_
     900:  00:9187  01                  		db (T_OLD_1-T1_)*2+1
     901:  00:9188  0C                  		db TCOLD_1-T_
     902:  00:9189  94                  		db (T_NEW_2-T1_)*2
     903:  00:918A  35                  		db TCNEW_2-T_
     904:  00:918B  30                  		db (T_OLD_2-T1_)*2
     905:  00:918C  0E                  		db TCOLD_2-T_
     906:  00:918D  60                  		db (T_NEW_3-T1_)*2
     907:  00:918E  20                  		db TCNEW_3-T_
     908:  00:918F  60                  		db (T_OLD_3-T1_)*2
     909:  00:9190  21                  		db TCOLD_3-T_
     910:  00:9191                      
     911:  00:9191                      T_:
     912:  00:9191                      
     913:  00:9191                      TCOLD_0:	db $00+1,$04+1,$08+1,$0A+1,$0C+1,$0E+1,$12+1,$14+1
     913:  00:9191  01 05 09 0B 0D 0F 13 15 
     914:  00:9199  19 25 3D 00         		db $18+1,$24+1,$3C+1,0
     915:  00:919D                      TCNEW_1:	
     916:  00:919D  5D 00               TCOLD_1:	db $5C+1,0
     917:  00:919F                      TCOLD_2:	db $30+1,$36+1,$4C+1,$52+1,$5E+1,$70+1,$82,$8C,$9C
     917:  00:919F  31 37 4D 53 5F 71 82 8C 9C 
     918:  00:91A8                      		db $9E,$A0,$A6,$A8,$AA,$AC,$AE,$AE,0
     918:  00:91A8  9E A0 A6 A8 AA AC AE AE 00 
     919:  00:91B1  57                  TCNEW_3:	db $56+1
     920:  00:91B2                      TCOLD_3:	db $1E+1,$22+1,$24+1,$28+1,$2C+1,$2E+1,$32+1,$BE+1,0
     920:  00:91B2  1F 23 25 29 2D 2F 33 BF 00 
     921:  00:91BB                      TCNEW_0:	db $1C+1,$20+1,$22+1,$26+1,$2A+1,$2C+1,$30+1,$54+1
     921:  00:91BB  1D 21 23 27 2B 2D 31 55 
     922:  00:91C3  BD BF 00            		db $BC+1,$BE+1,0
     923:  00:91C6                      TCNEW_2:	db $1A+1,$20+1,$24+1,$28+1,$2A+1,$3A+1,$4C+1,$5E+1
     923:  00:91C6  1B 21 25 29 2B 3B 4D 5F 
     924:  00:91CE  BB BD BF            		db $BA+1,$BC+1,$BE+1
     925:  00:91D1                      
     926:  00:91D1  00 01 00 90         EMPTYSAMORN: 	db 0,1,0,$90 ;delete $90 if you don't need default sample
     927:  00:91D5                      
     928:  00:91D5                      T_PACK:		; First 12 values of tone tables (packed)
     929:  00:91D5  0D                  		db ($06EC*2)/256
     930:  00:91D6  D8                  		db #d8
     931:  00:91D7  69                  		db $0755-$06EC
     932:  00:91D8  70                  		db $07C5-$0755
     933:  00:91D9  76                  		db $083B-$07C5
     934:  00:91DA  7D                  		db $08B8-$083B
     935:  00:91DB  85                  		db $093D-$08B8
     936:  00:91DC  8D                  		db $09CA-$093D
     937:  00:91DD  95                  		db $0A5F-$09CA
     938:  00:91DE  9D                  		db $0AFC-$0A5F
     939:  00:91DF  A8                  		db $0BA4-$0AFC
     940:  00:91E0  B1                  		db $0C55-$0BA4
     941:  00:91E1  BB                  		db $0D10-$0C55
     942:  00:91E2  0C                  		db ($066D*2)/256
     943:  00:91E3  DA                  		db #da
     944:  00:91E4  62                  		db $06CF-$066D
     945:  00:91E5  68                  		db $0737-$06CF
     946:  00:91E6  6D                  		db $07A4-$0737
     947:  00:91E7  75                  		db $0819-$07A4
     948:  00:91E8  7B                  		db $0894-$0819
     949:  00:91E9  83                  		db $0917-$0894
     950:  00:91EA  8A                  		db $09A1-$0917
     951:  00:91EB  92                  		db $0A33-$09A1
     952:  00:91EC  9C                  		db $0ACF-$0A33
     953:  00:91ED  A4                  		db $0B73-$0ACF
     954:  00:91EE  AF                  		db $0C22-$0B73
     955:  00:91EF  B8                  		db $0CDA-$0C22
     956:  00:91F0  0E                  		db ($0704*2)/256
     957:  00:91F1  08                  		db #08
     958:  00:91F2  6A                  		db $076E-$0704
     959:  00:91F3  72                  		db $07E0-$076E
     960:  00:91F4  78                  		db $0858-$07E0
     961:  00:91F5  7E                  		db $08D6-$0858
     962:  00:91F6  86                  		db $095C-$08D6
     963:  00:91F7  90                  		db $09EC-$095C
     964:  00:91F8  96                  		db $0A82-$09EC
     965:  00:91F9  A0                  		db $0B22-$0A82
     966:  00:91FA  AA                  		db $0BCC-$0B22
     967:  00:91FB  B4                  		db $0C80-$0BCC
     968:  00:91FC  BE                  		db $0D3E-$0C80
     969:  00:91FD  0F                  		db ($07E0*2)/256
     970:  00:91FE  C0                  		db #c0
     971:  00:91FF  78                  		db $0858-$07E0
     972:  00:9200  88                  		db $08E0-$0858
     973:  00:9201  80                  		db $0960-$08E0
     974:  00:9202  90                  		db $09F0-$0960
     975:  00:9203  98                  		db $0A88-$09F0
     976:  00:9204  A0                  		db $0B28-$0A88
     977:  00:9205  B0                  		db $0BD8-$0B28
     978:  00:9206  A8                  		db $0C80-$0BD8
     979:  00:9207  E0                  		db $0D60-$0C80
     980:  00:9208  B0                  		db $0E10-$0D60
     981:  00:9209  E8                  		db $0EF8-$0E10
      61.  00:920A                      	include "ayFX-ROM_sjasm.asm"
       1:  00:920A                      		; --- ayFX REPLAYER v1.31 ---
       2:  00:920A                      
       3:  00:920A                      		; --- v1.31	Fixed bug on previous version, only PSG channel C worked
       4:  00:920A                      		; --- v1.3	Fixed volume and Relative volume versions on the same file, conditional compilation
       5:  00:920A                      		; ---		Support for dynamic or fixed channel allocation
       6:  00:920A                      		; --- v1.2f/r	ayFX bank support
       7:  00:920A                      		; --- v1.11f/r	If a frame volume is zero then no AYREGS update
       8:  00:920A                      		; --- v1.1f/r	Fixed volume for all ayFX streams
       9:  00:920A                      		; --- v1.1	Explicit priority (as suggested by AR)
      10:  00:920A                      		; --- v1.0f	Bug fixed (error when using noise)
      11:  00:920A                      		; --- v1.0	Initial release
      12:  00:920A                      
      13:  00:920A                      		; --- DEFINE AYFXRELATIVE AS 0 FOR FIXED VOLUME VERSION ---
      14:  00:920A                      		; --- DEFINE AYFXRELATIVE AS 1 FOR RELATIVE VOLUME VERSION ---
      15:  00:920A  (00:0000)           AYFXRELATIVE equ 0
      16:  00:920A                      
      17:  00:920A                      ayFX_SETUP:	; ---          ayFX replayer setup          ---
      18:  00:920A                      		; --- INPUT: HL -> pointer to the ayFX bank ---
      19:  00:920A  22 41 F2            		ld	[ayFX_BANK],hl			; Current ayFX bank
      20:  00:920D  3E 01               		ld	a,1				; a:=0
      21:  00:920F  32 40 F2            		ld	[ayFX_MODE],a			; Initial mode: fixed channel
      22:  00:9212  3C                  		inc	a				; Starting channel (=1)
      23:  00:9213  32 4A F2            		ld	[ayFX_CHANNEL],a		; Updated
      24:  00:9216                      ayFX_END:	; --- End of an ayFX stream ---
      25:  00:9216  3E FF               		ld	a,255				; Lowest ayFX priority
      26:  00:9218  32 43 F2            		ld	[ayFX_PRIORITY],a		; Priority saved (not playing ayFX stream)
      27:  00:921B  C9                  		ret					; Return
      28:  00:921C                      
      29:  00:921C                      ayFX_INIT:	; ---     INIT A NEW ayFX STREAM     ---
      30:  00:921C                      		; --- INPUT: A -> sound to be played ---
      31:  00:921C                      		; ---        C -> sound priority     ---
      32:  00:921C  C5                  		push	bc				; Store bc in stack
      33:  00:921D  D5                  		push	de				; Store de in stack
      34:  00:921E  E5                  		push	hl				; Store hl in stack
      35:  00:921F                      		; --- Check if the index is in the bank ---
      36:  00:921F  47                  		ld	b,a				; b:=a (new ayFX stream index)
      37:  00:9220  2A 41 F2            		ld	hl,[ayFX_BANK]			; Current ayFX BANK
      38:  00:9223  7E                  		ld	a,[hl]				; Number of samples in the bank
      39:  00:9224  B7                  		or	a				; If zero (means 256 samples)...
      40:  00:9225  28 06               		jr	z,.CHECK_PRI			; ...goto .CHECK_PRI
      41:  00:9227                      		; The bank has less than 256 samples
      42:  00:9227  78                  		ld	a,b				; a:=b (new ayFX stream index)
      43:  00:9228  BE                  		cp	[hl]				; If new index is not in the bank...
      44:  00:9229  3E 02               		ld	a,2				; a:=2 (error 2: Sample not in the bank)
      45:  00:922B  30 21               		jr	nc,.INIT_END			; ...we can't init it
      46:  00:922D                      .CHECK_PRI:	; --- Check if the new priority is lower than the current one ---
      47:  00:922D                      		; ---   Remember: 0 = highest priority, 15 = lowest priority  ---
      48:  00:922D  78                  		ld	a,b				; a:=b (new ayFX stream index)
      49:  00:922E  3A 43 F2            		ld	a,[ayFX_PRIORITY]		; a:=Current ayFX stream priority
      50:  00:9231  B9                  		cp	c				; If new ayFX stream priority is lower than current one...
      51:  00:9232  3E 01               		ld	a,1				; a:=1 (error 1: A sample with higher priority is being played)
      52:  00:9234  38 18               		jr	c,.INIT_END			; ...we don't start the new ayFX stream
      53:  00:9236                      		; --- Set new priority ---
      54:  00:9236  79                  		ld	a,c				; a:=New priority
      55:  00:9237  E6 0F               		and	$0F				; We mask the priority
      56:  00:9239  32 43 F2            		ld	[ayFX_PRIORITY],a		; new ayFX stream priority saved in RAM
      57:  00:923C                      
      58:  00:923C                      		IF ( AYFXRELATIVE == 1 )
      59:  00:923C                    ~ 			; --- Volume adjust using PT3 volume table ---
      60:  00:923C                    ~ 			ld	c,a				; c:=New priority (fixed)
      61:  00:923C                    ~ 			ld	a,15				; a:=15
      62:  00:923C                    ~ 			sub	c				; a:=15-New priority = relative volume
      63:  00:923C                    ~ 			jr	z,.INIT_NOSOUND		; If priority is 15 -> no sound output (volume is zero)
      64:  00:923C                    ~ 			add	a,a				; a:=a*2
      65:  00:923C                    ~ 			add	a,a				; a:=a*4
      66:  00:923C                    ~ 			add	a,a				; a:=a*8
      67:  00:923C                    ~ 			add	a,a				; a:=a*16
      68:  00:923C                    ~ 			ld	e,a				; e:=a
      69:  00:923C                    ~ 			ld	d,0				; de:=a
      70:  00:923C                    ~ 			ld	hl,VT_				; hl:=PT3 volume table
      71:  00:923C                    ~ 			add	hl,de				; hl is a pointer to the relative volume table
      72:  00:923C                    ~ 			ld	[ayFX_VT],hl			; Save pointer
      73:  00:923C                    ~ 		ENDIF
      74:  00:923C                      
      75:  00:923C                      		; --- Calculate the pointer to the new ayFX stream ---
      76:  00:923C  ED 5B 41 F2         		ld	de,[ayFX_BANK]			; de:=Current ayFX bank
      77:  00:9240  13                  		inc	de				; de points to the increments table of the bank
      78:  00:9241  68                  		ld	l,b				; l:=b (new ayFX stream index)
      79:  00:9242  26 00               		ld	h,0				; hl:=b (new ayFX stream index)
      80:  00:9244  29                  		add	hl,hl				; hl:=hl*2
      81:  00:9245  19                  		add	hl,de				; hl:=hl+de (hl points to the correct increment)
      82:  00:9246  5E                  		ld	e,[hl]				; e:=lower byte of the increment
      83:  00:9247  23                  		inc	hl				; hl points to the higher byte of the correct increment
      84:  00:9248  56                  		ld	d,[hl]				; de:=increment
      85:  00:9249  19                  		add	hl,de				; hl:=hl+de (hl points to the new ayFX stream)
      86:  00:924A  22 44 F2            		ld	[ayFX_POINTER],hl		; Pointer saved in RAM
      87:  00:924D  AF                  		xor	a				; a:=0 (no errors)
      88:  00:924E  E1                  .INIT_END:	pop	hl				; Retrieve hl from stack
      89:  00:924F  D1                  		pop	de				; Retrieve de from stack
      90:  00:9250  C1                  		pop	bc				; Retrieve bc from stack
      91:  00:9251  C9                  		ret					; Return
      92:  00:9252                      
      93:  00:9252                      		IF ( AYFXRELATIVE == 1 )
      94:  00:9252                    ~ .INIT_NOSOUND:	; --- Init a sample with relative volume zero -> no sound output ---
      95:  00:9252                    ~ 			ld	a,255				; Lowest ayFX priority
      96:  00:9252                    ~ 			ld	[ayFX_PRIORITY],a		; Priority saved (not playing ayFX stream)
      97:  00:9252                    ~ 			jr	.INIT_END			; Jumps to .INIT_END
      98:  00:9252                    ~ 		ENDIF
      99:  00:9252                      
     100:  00:9252                      ayFX_PLAY:	; --- PLAY A FRAME OF AN ayFX STREAM ---
     101:  00:9252  3A 43 F2            		ld	a,[ayFX_PRIORITY]		; a:=Current ayFX stream priority
     102:  00:9255  B7                  		or	a				; If priority has bit 7 on...
     103:  00:9256  F8                  		ret	m				; ...return
     104:  00:9257                      		; --- Calculate next ayFX channel (if needed) ---
     105:  00:9257  3A 40 F2            		ld	a,[ayFX_MODE]			; ayFX mode
     106:  00:925A  E6 01               		and	1				; If bit0=0 (fixed channel)...
     107:  00:925C  28 08               		jr	z,.TAKECB			; ...skip channel changing
     108:  00:925E  21 4A F2            		ld	hl,ayFX_CHANNEL			; Old ayFX playing channel
     109:  00:9261  35                  		dec	[hl]				; New ayFX playing channel
     110:  00:9262  20 02               		jr	nz,.TAKECB			; If not zero jump to .TAKECB
     111:  00:9264  36 03               		ld	[hl],3				; If zero -> set channel 3
     112:  00:9266                      .TAKECB:	; --- Extract control byte from stream ---
     113:  00:9266  2A 44 F2            		ld	hl,[ayFX_POINTER]		; Pointer to the current ayFX stream
     114:  00:9269  4E                  		ld	c,[hl]				; c:=Control byte
     115:  00:926A  23                  		inc	hl				; Increment pointer
     116:  00:926B                      		; --- Check if there's new tone on stream ---
     117:  00:926B  CB 69               		bit	5,c				; If bit 5 c is off...
     118:  00:926D  28 08               		jr	z,.CHECK_NN			; ...jump to .CHECK_NN (no new tone)
     119:  00:926F                      		; --- Extract new tone from stream ---
     120:  00:926F  5E                  		ld	e,[hl]				; e:=lower byte of new tone
     121:  00:9270  23                  		inc	hl				; Increment pointer
     122:  00:9271  56                  		ld	d,[hl]				; d:=higher byte of new tone
     123:  00:9272  23                  		inc	hl				; Increment pointer
     124:  00:9273  ED 53 46 F2         		ld	[ayFX_TONE],de			; ayFX tone updated
     125:  00:9277                      .CHECK_NN:	; --- Check if there's new noise on stream ---
     126:  00:9277  CB 71               		bit	6,c				; if bit 6 c is off...
     127:  00:9279  28 09               		jr	z,.SETPOINTER			; ...jump to .SETPOINTER (no new noise)
     128:  00:927B                      		; --- Extract new noise from stream ---
     129:  00:927B  7E                  		ld	a,[hl]				; a:=New noise
     130:  00:927C  23                  		inc	hl				; Increment pointer
     131:  00:927D  FE 20               		cp	$20				; If it's an illegal value of noise (used to mark end of stream)...
     132:  00:927F  28 95               		jr.	z,ayFX_END			; ...jump to ayFX_END
     133:  00:9281  32 48 F2            		ld	[ayFX_NOISE],a			; ayFX noise updated
     134:  00:9284                      .SETPOINTER:	; --- Update ayFX pointer ---
     135:  00:9284  22 44 F2            		ld	[ayFX_POINTER],hl		; Update ayFX stream pointer
     136:  00:9287                      		; --- Extract volume ---
     137:  00:9287  79                  		ld	a,c				; a:=Control byte
     138:  00:9288  E6 0F               		and	$0F				; lower nibble
     139:  00:928A                      
     140:  00:928A                      		IF ( AYFXRELATIVE == 1 )
     141:  00:928A                    ~ 			; --- Fix the volume using PT3 Volume Table ---
     142:  00:928A                    ~ 			ld	hl,[ayFX_VT]			; hl:=Pointer to relative volume table
     143:  00:928A                    ~ 			ld	e,a				; e:=a (ayFX volume)
     144:  00:928A                    ~ 			ld	d,0				; d:=0
     145:  00:928A                    ~ 			add	hl,de				; hl:=hl+de (hl points to the relative volume of this frame
     146:  00:928A                    ~ 			ld	a,[hl]				; a:=ayFX relative volume
     147:  00:928A                    ~ 			or	a				; If relative volume is zero...
     148:  00:928A                    ~ 		ENDIF
     149:  00:928A                      
     150:  00:928A  32 49 F2            		ld	[ayFX_VOLUME],a			; ayFX volume updated
     151:  00:928D  C8                  		ret	z				; ...return (don't copy ayFX values in to AYREGS)
     152:  00:928E                      		; -------------------------------------
     153:  00:928E                      		; --- COPY ayFX VALUES IN TO AYREGS ---
     154:  00:928E                      		; -------------------------------------
     155:  00:928E                      		; --- Set noise channel ---
     156:  00:928E  CB 79               		bit	7,c				; If noise is off...
     157:  00:9290  20 06               		jr	nz,.SETMASKS			; ...jump to .SETMASKS
     158:  00:9292  3A 48 F2            		ld	a,[ayFX_NOISE]			; ayFX noise value
     159:  00:9295  32 46 F1            		ld	[AYREGS+6],a			; copied in to AYREGS (noise channel)
     160:  00:9298                      .SETMASKS:	; --- Set mixer masks ---
     161:  00:9298  79                  		ld	a,c				; a:=Control byte
     162:  00:9299  E6 90               		and	$90				; Only bits 7 and 4 (noise and tone mask for psg reg 7)
     163:  00:929B  FE 90               		cp	$90				; If no noise and no tone...
     164:  00:929D  C8                  		ret	z				; ...return (don't copy ayFX values in to AYREGS)
     165:  00:929E                      		; --- Copy ayFX values in to ARYREGS ---
     166:  00:929E  0F                  		rrca					; Rotate a to the right (1 TIME)
     167:  00:929F  0F                  		rrca					; Rotate a to the right (2 TIMES) (OR mask)
     168:  00:92A0  16 DB               		ld	d,$DB				; d:=Mask for psg mixer (AND mask)
     169:  00:92A2                      		; --- Dump to correct channel ---
     170:  00:92A2  21 4A F2            		ld	hl,ayFX_CHANNEL			; Next ayFX playing channel
     171:  00:92A5  46                  		ld	b,[hl]				; Channel counter
     172:  00:92A6                      .CHK1:		; --- Check if playing channel was 1 ---
     173:  00:92A6  10 0D               		djnz	.CHK2				; Decrement and jump if channel was not 1
     174:  00:92A8                      .PLAY_C:	; --- Play ayFX stream on channel C ---
     175:  00:92A8  CD D7 92            		call	.SETMIXER			; Set PSG mixer value (returning a=ayFX volume and hl=ayFX tone)
     176:  00:92AB  32 4A F1            		ld	[AYREGS+10],a			; Volume copied in to AYREGS (channel C volume)
     177:  00:92AE  CB 51               		bit	2,c				; If tone is off...
     178:  00:92B0  C0                  		ret	nz				; ...return
     179:  00:92B1  22 44 F1            		ld	[AYREGS+4],hl			; copied in to AYREGS (channel C tone)
     180:  00:92B4  C9                  		ret					; Return
     181:  00:92B5                      .CHK2:		; --- Check if playing channel was 2 ---
     182:  00:92B5  CB 0A               		rrc	d				; Rotate right AND mask
     183:  00:92B7  0F                  		rrca					; Rotate right OR mask
     184:  00:92B8  10 0D               		djnz	.CHK3				; Decrement and jump if channel was not 2
     185:  00:92BA                      .PLAY_B:	; --- Play ayFX stream on channel B ---
     186:  00:92BA  CD D7 92            		call	.SETMIXER			; Set PSG mixer value (returning a=ayFX volume and hl=ayFX tone)
     187:  00:92BD  32 49 F1            		ld	[AYREGS+9],a			; Volume copied in to AYREGS (channel B volume)
     188:  00:92C0  CB 49               		bit	1,c				; If tone is off...
     189:  00:92C2  C0                  		ret	nz				; ...return
     190:  00:92C3  22 42 F1            		ld	[AYREGS+2],hl			; copied in to AYREGS (channel B tone)
     191:  00:92C6  C9                  		ret					; Return
     192:  00:92C7                      .CHK3:		; --- Check if playing channel was 3 ---
     193:  00:92C7  CB 0A               		rrc	d				; Rotate right AND mask
     194:  00:92C9  0F                  		rrca					; Rotate right OR mask
     195:  00:92CA                      .PLAY_A:	; --- Play ayFX stream on channel A ---
     196:  00:92CA  CD D7 92            		call	.SETMIXER			; Set PSG mixer value (returning a=ayFX volume and hl=ayFX tone)
     197:  00:92CD  32 48 F1            		ld	[AYREGS+8],a			; Volume copied in to AYREGS (channel A volume)
     198:  00:92D0  CB 41               		bit	0,c				; If tone is off...
     199:  00:92D2  C0                  		ret	nz				; ...return
     200:  00:92D3  22 40 F1            		ld	[AYREGS+0],hl			; copied in to AYREGS (channel A tone)
     201:  00:92D6  C9                  		ret					; Return
     202:  00:92D7                      .SETMIXER:	; --- Set PSG mixer value ---
     203:  00:92D7  4F                  		ld	c,a				; c:=OR mask
     204:  00:92D8  3A 47 F1            		ld	a,[AYREGS+7]			; a:=PSG mixer value
     205:  00:92DB  A2                  		and	d				; AND mask
     206:  00:92DC  B1                  		or	c				; OR mask
     207:  00:92DD  32 47 F1            		ld	[AYREGS+7],a			; PSG mixer value updated
     208:  00:92E0  3A 49 F2            		ld	a,[ayFX_VOLUME]			; a:=ayFX volume value
     209:  00:92E3  2A 46 F2            		ld	hl,[ayFX_TONE]			; ayFX tone value
     210:  00:92E6  C9                  		ret					; Return
     211:  00:92E7                      
     212:  00:92E7                      		IF ( AYFXRELATIVE == 1 )
     213:  00:92E7                    ~ 			; --- UNCOMMENT THIS IF YOU DON'T USE THIS REPLAYER WITH PT3 REPLAYER ---
     214:  00:92E7                    ~ 		;VT_:	.INCBIN	"VT.BIN"
     215:  00:92E7                    ~ 			; --- UNCOMMENT THIS IF YOU DON'T USE THIS REPLAYER WITH PT3 REPLAYER ---
     216:  00:92E7                    ~ 		ENDIF
      62.  00:92E7                      	
      63.  00:92E7                      	
      64.  00:92E7                      
      65.  00:92E7                      ;;=====================================================
      66.  00:92E7                      ;;DEFINICIÓN DE CANTIONES Y EFECTOS DE SONIDO
      67.  00:92E7                      ;;=====================================================		
      68.  00:92E7                      song:
      69.  00:92E7  (0968)              	incbin "bloodytears_castlevania.99"
      70.  00:9C4F                      	
      71.  00:9C4F                      sfx_bank:
      72.  00:9C4F  (004B)              	incbin "demo.afb"
      73.  00:9C9A                      
     257   00:9C9A                      	
     258   00:9C9A                      	include "subr_ayudas.asm"
       1.  00:9C9A                      ;;=====================================================
       2.  00:9C9A                      ;;SUBRUTINAS MANEJO DE OBJETOS AYUDA
       3.  00:9C9A                      ;;=====================================================	
       4.  00:9C9A                      
       5.  00:9C9A                      ;;=====================================================
       6.  00:9C9A                      ;;VARIABLES
       7.  00:9C9A                      ;;=====================================================
       8.  00:9C9A                      
       9.  00:9C9A  00                  examina_ayudas_en_pantalla:		DB	0		;variable que se actualiza cuando cambiemos de habitación para no mirar el bit de habitación cada vez
      10.  00:9C9B  00 00               puntero_ayuda_actual:			DW	0		;puntero a ayda que se muestra en pantalla (sólo se muestra una a la vez)
      11.  00:9C9D                      
      12.  00:9C9D                      
      13.  00:9C9D                      ;array de ayudas
      14.  00:9C9D                      ;posición dentro del bank1 (o 0 que son iguales) de los tiles de la ayuda (cómo en los sprites de 2x2)
      15.  00:9C9D                      array_ayudas:
      16.  00:9C9D  C8 CA               array_oracionon:			DB	200,202
      17.  00:9C9F  C9 CB               array_oracionon1:			DB	201,203
      18.  00:9CA1  CC CE               array_oracionoff:			DB	204,206
      19.  00:9CA3  CD CF               array_oracionoff1:			DB	205,207
      20.  00:9CA5  D0 D2               array_cruzon:				DB	208,210
      21.  00:9CA7  D1 D3               array_cruzon1:				DB	209,211
      22.  00:9CA9  D4 D6               array_cruzoff:				DB	212,214
      23.  00:9CAB  D5 D7               array_cruzoff1:				DB	213,215
      24.  00:9CAD  D8 DA               array_aguaon:				DB	216,218
      25.  00:9CAF  D9 DB               array_aguaon1:				DB	217,219
      26.  00:9CB1  DC DE               array_aguaoff:				DB	220,222
      27.  00:9CB3  DD DF               array_aguaoff1:				DB	221,223
      28.  00:9CB5  E0 E2               array_armaduraon:			DB	224,226
      29.  00:9CB7  E1 E3               array_armaduraon1:			DB	225,227
      30.  00:9CB9  E4 E6               array_armaduraoff:			DB	228,230
      31.  00:9CBB  E5 E7               array_armaduraoff1:			DB	229,231
      32.  00:9CBD  E8 EA               array_plantaon:				DB	232,234
      33.  00:9CBF  E9 EB               array_plantaon1:			DB	233,235
      34.  00:9CC1  EC EE               array_plantaoff:			DB	236,238
      35.  00:9CC3  ED EF               array_plantaoff1:			DB	237,239
      36.  00:9CC5  F0 F2               array_extraon:				DB	240,242
      37.  00:9CC7  F1 F3               array_extraon1:				DB	241,243
      38.  00:9CC9  F4 F6               array_extraoff:				DB	244,246
      39.  00:9CCB  F5 F7               array_extraoff1:			DB	245,247
      40.  00:9CCD  F8 FA               array_ballestaon:			DB	248,250
      41.  00:9CCF  F9 FB               array_ballestaon1:			DB	249,251
      42.  00:9CD1  FC FE               array_ballestaoff:			DB	252,254
      43.  00:9CD3  FD FF               array_ballestaoff1:			DB	253,255
      44.  00:9CD5                      
      45.  00:9CD5                      
      46.  00:9CD5                      lista_ayudas:
      47.  00:9CD5  00 (15)             ayuda_oracion:		DS		ESTRUCTURA_AYUDA		
      48.  00:9CE4                      ;~ ayuda_cruz:			DS		ESTRUCTURA_AYUDA
      49.  00:9CE4                      ;~ ayuda_aguabendita:	DS		ESTRUCTURA_AYUDA
      50.  00:9CE4                      ;~ ayuda_armadura:		DS		ESTRUCTURA_AYUDA
      51.  00:9CE4                      ;~ ayuda_planta:		DS		ESTRUCTURA_AYUDA
      52.  00:9CE4                      ;~ ayuda_vidaextra		DS		ESTRUCTURA_AYUDA
      53.  00:9CE4                      ;~ ayuda_ballesta:		DS		ESTRUCTURA_AYUDA
      54.  00:9CE4                      
      55.  00:9CE4                      ;datos ayudas
      56.  00:9CE4                      
      57.  00:9CE4                      ;hay que repasar todos los posoracionx y posayudasy ***********************************
      58.  00:9CE4                      
      59.  00:9CE4                      datos_oracion:			
      60.  00:9CE4  00                  				DB		INACTIVA		;0 no activa <>0 activo (y muestra tiles ayudaoff)
      61.  00:9CE5  38                  				DB		POSORACIONX		;punto x de la ayuda para cuando se dispare encima
      62.  00:9CE6  58                  				DB		POSORACIONY		;punto y de la ayuda para cuando se dispare encima
      63.  00:9CE7  08                  				DB		RADIOAYUDAX		;radio x de la ayuda para cuando se dispare encima
      64.  00:9CE8  08                  				DB		RADIOAYUDAY		;radio y de la ayuda para cuando se dispare encima
      65.  00:9CE9  4B 9D               				DW		accion_oracion	;función para acción de cada tipo de ayuda
      66.  00:9CEB  9D 9C               				DW		array_oracionon	;puntero al array con los tiles de las ayudas sin usar para wordaux2
      67.  00:9CED  A1 9C               				DW		array_oracionoff;puntero al array con los tiles de las ayudas sin usar para wordaux2
      68.  00:9CEF  46 19               				DW		TILMAP + POSORACION ;calcula posición en tilemap para wordaux1
      69.  00:9CF1  02                  				DB		ALTOAYUDA		;alto en tiles del dibujo de la puerta (filas)
      70.  00:9CF2  02                  				DB		ANCHOAYUDA		;ancho en tiles del dibujo de la puerta (columnas)
      71.  00:9CF3                      					
      72.  00:9CF3                      ;~ datos_cruz:			
      73.  00:9CF3                      				;~ DB		0				;0 no activa <>0 activo (y muestra tiles ayudaoff)
      74.  00:9CF3                      				;~ DB		POSCRUZX		;punto x de la ayuda para cuando se dispare encima
      75.  00:9CF3                      				;~ DB		POSAYUDASY		;punto y de la ayuda para cuando se dispare encima
      76.  00:9CF3                      				;~ DB		8				;radio x de la ayuda para cuando se dispare encima
      77.  00:9CF3                      				;~ DB		8				;radio y de la ayuda para cuando se dispare encima
      78.  00:9CF3                      				;~ DW		accion_oracion	;función para acción de cada tipo de ayuda
      79.  00:9CF3                      				;~ DW		array_oracionon	;puntero al array con los tiles de las ayudas sin usar para wordaux2
      80.  00:9CF3                      				;~ DW		array_oracionoff;puntero al array con los tiles de las ayudas sin usar para wordaux2
      81.  00:9CF3                      				;~ DW		TILMAP + POSORACION ;calcula posición en tilemap para wordaux1
      82.  00:9CF3                      				;~ DB		2				;alto en tiles del dibujo de la puerta (filas)
      83.  00:9CF3                      				;~ DB		2				;ancho en tiles del dibujo de la puerta (columnas)
      84.  00:9CF3                      
      85.  00:9CF3                      				
      86.  00:9CF3                      ;~ datos_cruz:
      87.  00:9CF3                      				;~ DB    	0				;0 no activo <>0 activo															0
      88.  00:9CF3                      				;~ DW		array_cruzon	;pos en memoria ver array_ayudas de cómo se mostrarán (wordaux2)				1,2
      89.  00:9CF3                      				;~ DW		array_cruzoff	;pos en memoria ver array_ayudas de cómo se mostrarán (wordaux2)				3,4
      90.  00:9CF3                      				;~ DB		POSCRUZ			;pos en pantalla (memoria en el banco 1 se le suma 256 + TILEMAP) (wordaux1)	5
      91.  00:9CF3                      				;~ DB		POSCRUZX		;pos del pixel central (esquina superior + 8x)									6
      92.  00:9CF3                      				;~ DB		POSAYUDASY		;pos del pixel central (esquina superior + 8y) (para toas igual)				7
      93.  00:9CF3                      				;~ DW		accion_cruz		;subrutina que indica la acción si se dispara en el objeto						8,9 
      94.  00:9CF3                      				
      95.  00:9CF3                      				;~ DB    	0				;0 no activo <>0 activo															0
      96.  00:9CF3                      				;~ DW		array_cruzon	;pos en memoria ver array_ayudas de cómo se mostrarán (wordaux2)				1,2
      97.  00:9CF3                      				;~ DW		array_cruzoff	;pos en memoria ver array_ayudas de cómo se mostrarán (wordaux2)				3,4
      98.  00:9CF3                      				;~ DB		167			;pos en pantalla (memoria en el banco 1 se le suma 256 + TILEMAP) (wordaux1)	5
      99.  00:9CF3                      				;~ DB		64		;pos del pixel central (esquina superior + 8x)									6
     100.  00:9CF3                      				;~ DB		112		;pos del pixel central (esquina superior + 8y) (para toas igual)				7
     101.  00:9CF3                      				;~ DW		accion_cruz		;subrutina que indica la acción si se dispara en el objeto						8,9 
     102.  00:9CF3                      				
     103.  00:9CF3                      ;~ datos_aguabendita:
     104.  00:9CF3                      				;~ DB    	0				;0 no activo <>0 activo															0
     105.  00:9CF3                      				;~ DW		array_aguaon	;pos en memoria ver array_ayudas de cómo se mostrarán (wordaux2)				1,2
     106.  00:9CF3                      				;~ DW		array_aguaoff	;pos en memoria ver array_ayudas de cómo se mostrarán (wordaux2)				3,4
     107.  00:9CF3                      				;~ DB		POSAGUA			;pos en pantalla (memoria en el banco 1 se le suma 256 + TILEMAP) (wordaux1)	5
     108.  00:9CF3                      				;~ DB		POSAGUAX		;pos del pixel central (esquina superior + 8x)									6
     109.  00:9CF3                      				;~ DB		POSAYUDASY		;pos del pixel central (esquina superior + 8y) (para toas igual)				7
     110.  00:9CF3                      				;~ DW		accion_agua		;subrutina que indica la acción si se dispara en el objeto						8,9
     111.  00:9CF3                      				;~ DB		0	;relleno																		10-16    
     112.  00:9CF3                      				;~ DB		0	;relleno																		10-16    
     113.  00:9CF3                      				;~ DB		0	;relleno																		10-16    
     114.  00:9CF3                      				;~ DB		0	;relleno																		10-16    
     115.  00:9CF3                      				;~ DB		0	;relleno																		10-16    
     116.  00:9CF3                      				;~ DB		0	;relleno																		10-16   
     117.  00:9CF3                      				;~ DB		0	;relleno																		10-16    
     118.  00:9CF3                      ;~ datos_armadura:
     119.  00:9CF3                      				;~ DB    	0				;0 no activo <>0 activo															0
     120.  00:9CF3                      				;~ DW		array_armaduraon;pos en memoria ver array_ayudas de cómo se mostrarán (wordaux2)				1,2
     121.  00:9CF3                      				;~ DW		array_armaduraoff;pos en memoria ver array_ayudas de cómo se mostrarán (wordaux2)				3,4
     122.  00:9CF3                      				;~ DB		POSARMAD		;pos en pantalla (memoria en el banco 1 se le suma 256 + TILEMAP) (wordaux1)	5
     123.  00:9CF3                      				;~ DB		POSARMADX		;pos del pixel central (esquina superior + 8x)									6
     124.  00:9CF3                      				;~ DB		POSAYUDASY		;pos del pixel central (esquina superior + 8y) (para toas igual)				7
     125.  00:9CF3                      				;~ DW		accion_armadura	;subrutina que indica la acción si se dispara en el objeto						8,9
     126.  00:9CF3                      				;~ DB		0	;relleno																		10-16    
     127.  00:9CF3                      				;~ DB		0	;relleno																		10-16    
     128.  00:9CF3                      				;~ DB		0	;relleno																		10-16    
     129.  00:9CF3                      				;~ DB		0	;relleno																		10-16    
     130.  00:9CF3                      				;~ DB		0	;relleno																		10-16    
     131.  00:9CF3                      				;~ DB		0	;relleno																		10-16   
     132.  00:9CF3                      				;~ DB		0	;relleno																		10-16    
     133.  00:9CF3                      ;~ datos_planta:
     134.  00:9CF3                      				;~ DB    	0				;0 no activo <>0 activo															0
     135.  00:9CF3                      				;~ DW		array_plantaon	;pos en memoria ver array_ayudas de cómo se mostrarán (wordaux2)				1,2
     136.  00:9CF3                      				;~ DW		array_plantaoff	;pos en memoria ver array_ayudas de cómo se mostrarán (wordaux2)				3,4
     137.  00:9CF3                      				;~ DB		POSPLANTA		;pos en pantalla (memoria en el banco 1 se le suma 256 + TILEMAP) (wordaux1)	5
     138.  00:9CF3                      				;~ DB		POSPLANTAX		;pos del pixel central (esquina superior + 8x)									6
     139.  00:9CF3                      				;~ DB		POSAYUDASY		;pos del pixel central (esquina superior + 8y) (para toas igual)				7
     140.  00:9CF3                      				;~ DW		accion_planta	;subrutina que indica la acción si se dispara en el objeto						8,9
     141.  00:9CF3                      				;~ DB		0	;relleno																		10-16    
     142.  00:9CF3                      				;~ DB		0	;relleno																		10-16    
     143.  00:9CF3                      				;~ DB		0	;relleno																		10-16    
     144.  00:9CF3                      				;~ DB		0	;relleno																		10-16    
     145.  00:9CF3                      				;~ DB		0	;relleno																		10-16    
     146.  00:9CF3                      				;~ DB		0	;relleno																		10-16   
     147.  00:9CF3                      				;~ DB		0	;relleno																		10-16     
     148.  00:9CF3                      ;~ datos_vidaextra:
     149.  00:9CF3                      				;~ DB    	0				;0 no activo <>0 activo															0
     150.  00:9CF3                      				;~ DW		array_extraon	;pos en memoria ver array_ayudas de cómo se mostrarán (wordaux2)				1,2
     151.  00:9CF3                      				;~ DW		array_extraoff	;pos en memoria ver array_ayudas de cómo se mostrarán (wordaux2)				3,4
     152.  00:9CF3                      				;~ DB		POSVIDAEXT		;pos en pantalla (memoria en el banco 1 se le suma 256 + TILEMAP) (wordaux1)	5
     153.  00:9CF3                      				;~ DB		POSVIDAEXTX		;pos del pixel central (esquina superior + 8x)									6
     154.  00:9CF3                      				;~ DB		POSAYUDASY		;pos del pixel central (esquina superior + 8y) (para toas igual)				7
     155.  00:9CF3                      				;~ DW		accion_vidaextra;subrutina que indica la acción si se dispara en el objeto						8,9
     156.  00:9CF3                      				;~ DB		0	;relleno																		10-16    
     157.  00:9CF3                      				;~ DB		0	;relleno																		10-16    
     158.  00:9CF3                      				;~ DB		0	;relleno																		10-16    
     159.  00:9CF3                      				;~ DB		0	;relleno																		10-16    
     160.  00:9CF3                      				;~ DB		0	;relleno																		10-16    
     161.  00:9CF3                      				;~ DB		0	;relleno																		10-16   
     162.  00:9CF3                      				;~ DB		0	;relleno																		10-16     
     163.  00:9CF3                      ;~ datos_ballesta:
     164.  00:9CF3                      				;~ DB    	0				;0 no activo <>0 activo															0
     165.  00:9CF3                      				;~ DW		array_ballestaon;pos en memoria ver array_ayudas de cómo se mostrarán (wordaux2)				1,2
     166.  00:9CF3                      				;~ DW		array_ballestaoff;pos en memoria ver array_ayudas de cómo se mostrarán (wordaux2)				3,4
     167.  00:9CF3                      				;~ DB		POSBALLESTA		;pos en pantalla (memoria en el banco 1 se le suma 256 + TILEMAP) (wordaux1)	5
     168.  00:9CF3                      				;~ DB		POSBALLESTAX	;pos del pixel central (esquina superior + 8x)									6
     169.  00:9CF3                      				;~ DB		POSAYUDASY		;pos del pixel central (esquina superior + 8y) (para toas igual)				7
     170.  00:9CF3                      				;~ DW		accion_oracion	;subrutina que indica la acción si se dispara en el objeto						8,9
     171.  00:9CF3                      				;~ DB		0	;relleno																		10-16    
     172.  00:9CF3                      				;~ DB		0	;relleno																		10-16    
     173.  00:9CF3                      				;~ DB		0	;relleno																		10-16    
     174.  00:9CF3                      				;~ DB		0	;relleno																		10-16    
     175.  00:9CF3                      				;~ DB		0	;relleno																		10-16    
     176.  00:9CF3                      				;~ DB		0	;relleno																		10-16   
     177.  00:9CF3                      				;~ DB		0	;relleno																		10-16      
     178.  00:9CF3                      
     179.  00:9CF3                      
     180.  00:9CF3                      
     181.  00:9CF3                      
     182.  00:9CF3                      ;;=====================================================
     183.  00:9CF3                      ;;INICIALIZA_AYUDAS
     184.  00:9CF3                      ;;=====================================================	
     185.  00:9CF3                      ; función: 	inicializa las variables de estructuras de ayuda del array lista_ayudas
     186.  00:9CF3                      ; entrada: 	datos_delasdistintasayudas, variable estructura_ayuda_ayudaquesea
     187.  00:9CF3                      ; salida: 	lista_ayudas
     188.  00:9CF3                      ; toca:		HL, DE, BC
     189.  00:9CF3                      inicializa_ayudas:
     190.  00:9CF3                      	;oracion
     191.  00:9CF3  21 E4 9C            	LD		HL, datos_oracion
     192.  00:9CF6  11 D5 9C            	LD		DE, ayuda_oracion
     193.  00:9CF9  CD FD 9C            	CALL	carga_datos_ayuda
     194.  00:9CFC                      
     195.  00:9CFC                      
     196.  00:9CFC                      	;~ ;oración
     197.  00:9CFC                      	;~ LD		IX, ayuda_oracion
     198.  00:9CFC                      	;~ LD		(IX + 0), INACTIVA			
     199.  00:9CFC                      	;~ LD		HL, array_oracionon
     200.  00:9CFC                      	;~ LD		(IX + 1), H
     201.  00:9CFC                      	;~ LD		(IX + 2), L
     202.  00:9CFC                      	;~ LD		HL, array_oracionoff
     203.  00:9CFC                      	;~ LD		(IX + 3), H
     204.  00:9CFC                      	;~ LD		(IX + 4), L
     205.  00:9CFC                      	;~ LD		(IX + 5), POSORACION
     206.  00:9CFC                      	;~ LD		(IX + 6), POSORACIONX
     207.  00:9CFC                      	;~ LD		(IX + 7), POSAYUDASY	
     208.  00:9CFC                      	;~ LD		HL, accion_oracion
     209.  00:9CFC                      	;~ LD		(IX + 8), H
     210.  00:9CFC                      	;~ LD		(IX + 9), L
     211.  00:9CFC                      	
     212.  00:9CFC                      	;~ ;cruz
     213.  00:9CFC                      	;~ LD		HL, datos_cruz
     214.  00:9CFC                      	;~ LD		DE, ayuda_cruz
     215.  00:9CFC                      	;~ LD		BC, 16;#ESTRUCTURA_AYUDA ;equivale a 16.. el tamaño de la estructura en bytes
     216.  00:9CFC                      	;~ LDIR
     217.  00:9CFC                      	
     218.  00:9CFC                      	;~ ;agua bendita
     219.  00:9CFC                      	;~ LD		HL, datos_aguabendita
     220.  00:9CFC                      	;~ LD		DE, ayuda_aguabendita
     221.  00:9CFC                      	;~ CALL	carga_datos_ayuda
     222.  00:9CFC                      		
     223.  00:9CFC                      	;~ ;armadura
     224.  00:9CFC                      	;~ LD		HL, datos_armadura
     225.  00:9CFC                      	;~ LD		DE, ayuda_armadura
     226.  00:9CFC                      	;~ CALL	carga_datos_ayuda
     227.  00:9CFC                      		
     228.  00:9CFC                      	;~ ;planta
     229.  00:9CFC                      	;~ LD		HL, datos_planta
     230.  00:9CFC                      	;~ LD		DE, ayuda_planta
     231.  00:9CFC                      	;~ CALL	carga_datos_ayuda
     232.  00:9CFC                      		
     233.  00:9CFC                      	;~ ;vida extra
     234.  00:9CFC                      	;~ LD		HL, datos_vidaextra
     235.  00:9CFC                      	;~ LD		DE, ayuda_vidaextra
     236.  00:9CFC                      	;~ CALL	carga_datos_ayuda
     237.  00:9CFC                      		
     238.  00:9CFC                      	;~ ;ballesta
     239.  00:9CFC                      	;~ LD		HL, datos_ballesta
     240.  00:9CFC                      	;~ LD		DE, ayuda_ballesta
     241.  00:9CFC                      	;~ CALL	carga_datos_ayuda
     242.  00:9CFC                      fin_inicializa_ayudas:
     243.  00:9CFC  C9                  	RET
     244.  00:9CFD                      	
     245.  00:9CFD                      
     246.  00:9CFD                      ;;=====================================================
     247.  00:9CFD                      ;;CARGA_DATOS_AYUDA
     248.  00:9CFD                      ;;=====================================================	
     249.  00:9CFD                      ; función: 	carga los datos de la ayuda de una variable dentro de la variable estructura (más carga y espacio que rellenar a pelo desde IX en adelante pero más simple)
     250.  00:9CFD                      ;entrada
     251.  00:9CFD                      ;  hl: origen de datos
     252.  00:9CFD                      ;  de: destino de datos
     253.  00:9CFD                      ; salida: 	-
     254.  00:9CFD                      ; toca:		HL, DE, BC
     255.  00:9CFD                      carga_datos_ayuda:
     256.  00:9CFD  01 0F 00            	LD		BC, 15;ESTRUCTURA_AYUDA ;equivale a 16.. el tamaño de la estructura en bytes
     257.  00:9D00  ED B0               	LDIR
     258.  00:9D02                      fin_carga_datos_ayuda:
     259.  00:9D02  C9                  	RET
     260.  00:9D03                      
     261.  00:9D03                      
     262.  00:9D03                      
     263.  00:9D03                      ;;=====================================================
     264.  00:9D03                      ;;PINTA_OBJ_AYUDA
     265.  00:9D03                      ;;=====================================================	
     266.  00:9D03                      ; función: 	pinta un objeto de tipo ayuda que se le pase por referencia IX y el tipo en A
     267.  00:9D03                      ; entrada: 	IX - puntero a objeto a mostrar, A - si está on u off
     268.  00:9D03                      ; salida: 	-
     269.  00:9D03                      ; toca:		AF, HL, BC, DE
     270.  00:9D03                      pinta_obj_ayuda:
     271.  00:9D03                      	;se recibe objeto desde fuera, por ejmplo LD IX, ayuda_oracion
     272.  00:9D03                      
     273.  00:9D03                      	;si A=1 dibujo on (si 0 off)
     274.  00:9D03  B7                  	OR		 A
     275.  00:9D04  C2 13 9D            	JP		 NZ,.dibujooff
     276.  00:9D07                      .dibujoon:	
     277.  00:9D07  DD 6E 09            		LD		 L, (IX + ESTRUCTURA_AYUDA.tiles_ayudaoff)
     278.  00:9D0A  DD 66 0A            		LD		 H, (IX + ESTRUCTURA_AYUDA.tiles_ayudaoff + 1)
     279.  00:9D0D  22 16 86            		LD		(wordaux2), HL	;pongo el valor en wordaux2
     280.  00:9D10  C3 1C 9D            		JP		.param_wordaux2
     281.  00:9D13                      .dibujooff:
     282.  00:9D13  DD 6E 07            		LD		 L, (IX + ESTRUCTURA_AYUDA.tiles_ayudaon)
     283.  00:9D16  DD 66 08            		LD		 H, (IX + ESTRUCTURA_AYUDA.tiles_ayudaon + 1)
     284.  00:9D19  22 16 86            		LD		(wordaux2), HL	;pongo el valor en wordaux2
     285.  00:9D1C                      ;fin si
     286.  00:9D1C                      .param_wordaux2:	
     287.  00:9D1C  DD 6E 0B            	LD		 L, (IX + ESTRUCTURA_AYUDA.pos_en_tilemap)
     288.  00:9D1F  DD 66 0C            	LD		 H, (IX + ESTRUCTURA_AYUDA.pos_en_tilemap + 1)
     289.  00:9D22  22 14 86            	LD		(wordaux1), HL		;pongo el valor en wordaux1
     290.  00:9D25                      
     291.  00:9D25                      .filasycols:
     292.  00:9D25  3E 02               	LD		 A, 2
     293.  00:9D27                      	;se comenta para ahorrar tiempo (y porque habría que pasarlo previamente a A cuando siempre es 2)
     294.  00:9D27                      	;~ LD		(byteaux1), (IX + ESTRUCTURA_AYUDA.alto);nº de filas
     295.  00:9D27                      	;~ LD		(byteaux2), (IX + ESTRUCTURA_AYUDA.alto);nº de columnas
     296.  00:9D27  32 18 86            	LD		(byteaux1), A		;nº de filas
     297.  00:9D2A  32 19 86            	LD		(byteaux2), A		;nº de columnas
     298.  00:9D2D                      	
     299.  00:9D2D  C3 D4 85            	JP		pinta_array
     300.  00:9D30                      fin_pinta_obj_ayuda:
     301.  00:9D30                      
     302.  00:9D30                      
     303.  00:9D30                      ;;=====================================================
     304.  00:9D30                      ;;PINTA_AYUDAS_HABITACIÓN
     305.  00:9D30                      ;;=====================================================	
     306.  00:9D30                      ; función: 	examina el byte con las ayudas y pinta las que estén seleccionadas según variable habitacion_extras
     307.  00:9D30                      ; entrada: 	habitacion_extras
     308.  00:9D30                      ; salida: 	-
     309.  00:9D30                      pinta_ayudas_habitacion:
     310.  00:9D30  3A 9A 9C            	LD		 A, (examina_ayudas_en_pantalla)
     311.  00:9D33  B7                  	OR		 A
     312.  00:9D34  C8                  	RET		 Z								;0 ya no hay ayudas activas (se actualiza cuando se usa la ayuda)
     313.  00:9D35                      	
     314.  00:9D35                      .examina_oracion:
     315.  00:9D35  3A B6 A7            	LD		 A, (habitacion_extras)
     316.  00:9D38  CB 7F               	BIT		 7, A
     317.  00:9D3A  C2 4A 9D            	JP		 NZ, fin_pinta_ayudas_habitacion	;despues .examina_cruz
     318.  00:9D3D                      	
     319.  00:9D3D  DD 21 D5 9C         	LD		IX, ayuda_oracion
     320.  00:9D41                      	;puntero_ayuda_actual
     321.  00:9D41  DD 22 9B 9C         	LD		(puntero_ayuda_actual), IX
     322.  00:9D45  3E 01               	LD		 A, ACTIVA
     323.  00:9D47  CD 03 9D            	CALL	pinta_obj_ayuda
     324.  00:9D4A                      .fin_examina_oracion:	
     325.  00:9D4A                      	
     326.  00:9D4A                      ;~ .examina_cruz:
     327.  00:9D4A                      	;~ LD		 A, (habitacion_extras)
     328.  00:9D4A                      	;~ BIT		 6,A
     329.  00:9D4A                      	;~ JP		 Z,.examina_aguabendita
     330.  00:9D4A                      	;~ LD		IX, ayuda_cruz
     331.  00:9D4A                      	;~ LD		 A, ACTIVA
     332.  00:9D4A                      	;~ CALL	pinta_obj_ayuda
     333.  00:9D4A                      ;~ .examina_aguabendita:
     334.  00:9D4A                      	;~ LD		 A, (habitacion_extras)
     335.  00:9D4A                      	;~ BIT		 5,A
     336.  00:9D4A                      	;~ JP		 Z,.examina_armadura
     337.  00:9D4A                      	;~ LD		IX, ayuda_aguabendita
     338.  00:9D4A                      	;~ LD		 A, ACTIVA
     339.  00:9D4A                      	;~ CALL	pinta_obj_ayuda
     340.  00:9D4A                      ;~ .examina_armadura:
     341.  00:9D4A                      	;~ LD		 A, (habitacion_extras)
     342.  00:9D4A                      	;~ BIT		 4,A
     343.  00:9D4A                      	;~ JP		 Z,.examina_planta
     344.  00:9D4A                      	;~ LD		IX, ayuda_armadura
     345.  00:9D4A                      	;~ LD		 A, ACTIVA
     346.  00:9D4A                      	;~ CALL	pinta_obj_ayuda
     347.  00:9D4A                      ;~ .examina_planta:
     348.  00:9D4A                      	;~ LD		 A, (habitacion_extras)
     349.  00:9D4A                      	;~ BIT		 3,A
     350.  00:9D4A                      	;~ JP		 Z,.examina_vidaextra
     351.  00:9D4A                      	;~ LD		IX, ayuda_planta
     352.  00:9D4A                      	;~ LD		 A, ACTIVA
     353.  00:9D4A                      	;~ CALL	pinta_obj_ayuda
     354.  00:9D4A                      ;~ .examina_vidaextra:
     355.  00:9D4A                      	;~ LD		 A, (habitacion_extras)
     356.  00:9D4A                      	;~ BIT		 2,A
     357.  00:9D4A                      	;~ JP		 Z,.examina_ballesta
     358.  00:9D4A                      	;~ LD		IX, ayuda_vidaextra
     359.  00:9D4A                      	;~ LD		 A, ACTIVA
     360.  00:9D4A                      	;~ CALL	pinta_obj_ayuda
     361.  00:9D4A                      ;~ .examina_ballesta:
     362.  00:9D4A                      	;~ LD		 A, (habitacion_extras)
     363.  00:9D4A                      	;~ BIT		 1,A
     364.  00:9D4A                      	;~ RET		 Z
     365.  00:9D4A                      	;~ LD		IX, ayuda_ballesta
     366.  00:9D4A                      	;~ LD		 A, ACTIVA
     367.  00:9D4A                      	;~ CALL	pinta_obj_ayuda
     368.  00:9D4A                      fin_pinta_ayudas_habitacion:
     369.  00:9D4A  C9                  	RET
     370.  00:9D4B                      
     371.  00:9D4B                      
     372.  00:9D4B                      
     373.  00:9D4B                      ;;=====================================================
     374.  00:9D4B                      ;;ACCION_ORACION
     375.  00:9D4B                      ;;=====================================================	
     376.  00:9D4B                      ; función: 	
     377.  00:9D4B                      ; entrada: 	
     378.  00:9D4B                      ; salida: 	-
     379.  00:9D4B                      accion_oracion:
     380.  00:9D4B  CD CD 82            	CALL		test_OK
     381.  00:9D4E                      fin_accion_oracion:
     382.  00:9D4E  C9                  	RET
     383.  00:9D4F                      	
     384.  00:9D4F                      
     385.  00:9D4F                      ;;=====================================================
     386.  00:9D4F                      ;;ACCION_CRUZ
     387.  00:9D4F                      ;;=====================================================	
     388.  00:9D4F                      ; función: 	
     389.  00:9D4F                      ; entrada: 	
     390.  00:9D4F                      ; salida: 	-
     391.  00:9D4F                      accion_cruz:
     392.  00:9D4F                      fin_accion_cruz:
     393.  00:9D4F  C9                  	RET
     394.  00:9D50                      
     395.  00:9D50                      
     396.  00:9D50                      ;;=====================================================
     397.  00:9D50                      ;;ACCION_AGUA
     398.  00:9D50                      ;;=====================================================	
     399.  00:9D50                      ; función: 	
     400.  00:9D50                      ; entrada: 	
     401.  00:9D50                      ; salida: 	-
     402.  00:9D50                      accion_agua:
     403.  00:9D50                      fin_accion_agua:
     404.  00:9D50  C9                  	RET
     405.  00:9D51                      
     406.  00:9D51                      
     407.  00:9D51                      ;;=====================================================
     408.  00:9D51                      ;;ACCION_ARMADURA
     409.  00:9D51                      ;;=====================================================	
     410.  00:9D51                      ; función: 	
     411.  00:9D51                      ; entrada: 	
     412.  00:9D51                      ; salida: 	-
     413.  00:9D51                      accion_armadura:
     414.  00:9D51                      fin_accion_armadura:
     415.  00:9D51  C9                  	RET
     416.  00:9D52                      
     417.  00:9D52                      
     418.  00:9D52                      ;;=====================================================
     419.  00:9D52                      ;;ACCION_PLANTA
     420.  00:9D52                      ;;=====================================================	
     421.  00:9D52                      ; función: 	
     422.  00:9D52                      ; entrada: 	
     423.  00:9D52                      ; salida: 	-
     424.  00:9D52                      accion_planta:
     425.  00:9D52                      fin_accion_planta:
     426.  00:9D52  C9                  	RET
     427.  00:9D53                      
     428.  00:9D53                      
     429.  00:9D53                      ;;=====================================================
     430.  00:9D53                      ;;ACCION_VIDAEXTRA
     431.  00:9D53                      ;;=====================================================	
     432.  00:9D53                      ; función: 	
     433.  00:9D53                      ; entrada: 	
     434.  00:9D53                      ; salida: 	-
     435.  00:9D53                      accion_vidaextra:
     436.  00:9D53                      fin_accion_vidaextra:
     437.  00:9D53  C9                  	RET
     438.  00:9D54                      
     439.  00:9D54                      
     440.  00:9D54                      ;;=====================================================
     441.  00:9D54                      ;;ACCION_BALLESTA
     442.  00:9D54                      ;;=====================================================	
     443.  00:9D54                      ; función: 	
     444.  00:9D54                      ; entrada: 	
     445.  00:9D54                      ; salida: 	-
     446.  00:9D54                      accion_ballesta:
     447.  00:9D54                      fin_accion_ballesta:
     448.  00:9D54  C9                  	RET
     449.  00:9D55                      
     450.  00:9D55                      
     259   00:9D55                      	
     260   00:9D55                      
     261   00:9D55                      ;;=====================================================
     262   00:9D55                      ;;DEFINICIÓN DE SUBRUTINAS DE FERNANDO PARA COMPRESIÓN Y SONIDO
     263   00:9D55                      ;;=====================================================
     264   00:9D55                      ;Este include lleva la rutina de descompresión de ROM/RAM a VRAM de pletter
     265   00:9D55                      ;Está adaptada de la original a sjasm
     266   00:9D55                      ;	HL = RAM/ROM source	; DE = VRAM destination
     267   00:9D55                      depack_VRAM:
     268   00:9D55                      	include "PL_VRAM_Depack_SJASM.asm"
       1.  00:9D55                      ;-----------------------------------------------------------
       2.  00:9D55                      ; Pletter v0.5b VRAM Depacker v1.1 - 16Kb version
       3.  00:9D55                      ; HL = RAM/ROM source ; DE = VRAM destination
       4.  00:9D55                      ;-----------------------------------------------------------
       5.  00:9D55  F3                  	di
       6.  00:9D56                      
       7.  00:9D56                      ; VRAM address setup
       8.  00:9D56  7B                  	ld	a,e
       9.  00:9D57  D3 99               	out	[099h],a
      10.  00:9D59  7A                  	ld	a,d
      11.  00:9D5A  F6 40               	or	040h
      12.  00:9D5C  D3 99               	out	[099h],a
      13.  00:9D5E                      
      14.  00:9D5E                      ; Initialization
      15.  00:9D5E  7E                  	ld	a,[hl]
      16.  00:9D5F  23                  	inc	hl
      17.  00:9D60  D9                  	exx
      18.  00:9D61  11 00 00            	ld	de,0
      19.  00:9D64  87                  	add	a,a
      20.  00:9D65  3C                  	inc	a
      21.  00:9D66  CB 13               	rl	e
      22.  00:9D68  87                  	add	a,a
      23.  00:9D69  CB 13               	rl	e
      24.  00:9D6B  87                  	add	a,a
      25.  00:9D6C  CB 13               	rl	e
      26.  00:9D6E  CB 13               	rl	e
      27.  00:9D70  21 27 9E            	ld	hl,modes
      28.  00:9D73  19                  	add	hl,de
      29.  00:9D74  5E                  	ld	e,[hl]
      30.  00:9D75  DD 6B               	ld	ixl,e
      31.  00:9D77  23                  	inc	hl
      32.  00:9D78  5E                  	ld	e,[hl]
      33.  00:9D79  DD 63               	ld	ixh,e
      34.  00:9D7B  1E 01               	ld	e,1
      35.  00:9D7D  D9                  	exx
      36.  00:9D7E  FD 21 87 9D         	ld	iy,loop
      37.  00:9D82                      
      38.  00:9D82                      ; Main depack loop
      39.  00:9D82  0E 98               literal:ld	c,098h
      40.  00:9D84  ED A3               	outi
      41.  00:9D86  13                  	inc	de
      42.  00:9D87  87                  loop:	add	a,a
      43.  00:9D88  CC 1B 9E              	call	z,getbit
      44.  00:9D8B  30 F5               	jr	nc,literal
      45.  00:9D8D                      
      46.  00:9D8D                      ; Compressed data
      47.  00:9D8D  D9                  	exx
      48.  00:9D8E  62                  	ld	h,d
      49.  00:9D8F  6B                  	ld	l,e
      50.  00:9D90  87                  getlen: add	a,a
      51.  00:9D91  CC 1F 9E            	call	z,getbitexx
      52.  00:9D94  30 1D               	jr	nc,lenok
      53.  00:9D96  87                  lus:	add	a,a
      54.  00:9D97  CC 1F 9E            	call	z,getbitexx
      55.  00:9D9A  ED 6A               	adc	hl,hl
      56.  00:9D9C  D8                  	ret	c
      57.  00:9D9D  87                  	add	a,a
      58.  00:9D9E  CC 1F 9E            	call	z,getbitexx
      59.  00:9DA1  30 10               	jr	nc,lenok
      60.  00:9DA3  87                  	add	a,a
      61.  00:9DA4  CC 1F 9E            	call	z,getbitexx
      62.  00:9DA7  ED 6A               	adc	hl,hl
      63.  00:9DA9  DA 25 9E            	jp	c,Depack_out
      64.  00:9DAC  87                  	add	a,a
      65.  00:9DAD  CC 1F 9E            	call	z,getbitexx
      66.  00:9DB0  DA 96 9D            	jp	c,lus
      67.  00:9DB3  23                  lenok:  inc	hl
      68.  00:9DB4  D9                  	exx
      69.  00:9DB5  4E                  	ld	c,[hl]
      70.  00:9DB6  23                  	inc	hl
      71.  00:9DB7  06 00               	ld	b,0
      72.  00:9DB9  CB 79               	bit	7,c
      73.  00:9DBB  CA EE 9D            	jp	z,offsok
      74.  00:9DBE  DD E9               	jp	ix
      75.  00:9DC0                      
      76.  00:9DC0  87                  mode7:  add	a,a
      77.  00:9DC1  CC 1B 9E              	call	z,getbit
      78.  00:9DC4  CB 10               	rl	b
      79.  00:9DC6  87                  mode6:	add	a,a
      80.  00:9DC7  CC 1B 9E              	call	z,getbit
      81.  00:9DCA  CB 10               	rl	b
      82.  00:9DCC  87                  mode5:  add	a,a
      83.  00:9DCD  CC 1B 9E              	call	z,getbit
      84.  00:9DD0  CB 10               	rl	b
      85.  00:9DD2  87                  mode4:  add	a,a
      86.  00:9DD3  CC 1B 9E              	call	z,getbit
      87.  00:9DD6  CB 10               	rl	b
      88.  00:9DD8  87                  mode3:  add	a,a
      89.  00:9DD9  CC 1B 9E              	call	z,getbit
      90.  00:9DDC  CB 10               	rl	b
      91.  00:9DDE  87                  mode2:	add	a,a
      92.  00:9DDF  CC 1B 9E              	call	z,getbit
      93.  00:9DE2  CB 10               	rl	b
      94.  00:9DE4  87                  	add	a,a
      95.  00:9DE5  CC 1B 9E              	call	z,getbit
      96.  00:9DE8  30 04               	jr	nc,offsok
      97.  00:9DEA  B7                  	or	a
      98.  00:9DEB  04                  	inc	b
      99.  00:9DEC  CB B9               	res	7,c
     100.  00:9DEE  03                  offsok: inc	bc
     101.  00:9DEF  E5                  	push	hl
     102.  00:9DF0  D9                  	exx
     103.  00:9DF1  E5                  	push	hl
     104.  00:9DF2  D9                  	exx
     105.  00:9DF3  6B                  	ld	l,e
     106.  00:9DF4  62                  	ld	h,d
     107.  00:9DF5  ED 42               	sbc	hl,bc
     108.  00:9DF7  C1                  	pop	bc
     109.  00:9DF8  F5                  	push	af
     110.  00:9DF9  7D                  .loop:	ld	a,l
     111.  00:9DFA  D3 99               	out	[099h],a
     112.  00:9DFC  7C                  	ld	a,h
     113.  00:9DFD  00                  	nop                     ; VDP timing
     114.  00:9DFE  D3 99               	out	[099h],a
     115.  00:9E00  00                  	nop                     ; VDP timing
     116.  00:9E01  DB 98               	in	a,[098h]
     117.  00:9E03  08                  	ex	af,af'
     118.  00:9E04  7B                  	ld	a,e
     119.  00:9E05  00                  	nop			; VDP timing
     120.  00:9E06  D3 99               	out	[099h],a
     121.  00:9E08  7A                  	ld	a,d
     122.  00:9E09  F6 40               	or	040h
     123.  00:9E0B  D3 99               	out	[099h],a
     124.  00:9E0D  08                  	ex	af,af'
     125.  00:9E0E  00                  	nop			; VDP timing
     126.  00:9E0F  D3 98               	out	[098h],a
     127.  00:9E11  13                  	inc	de
     128.  00:9E12  ED A1               	cpi
     129.  00:9E14  EA F9 9D            	jp	pe,.loop
     130.  00:9E17  F1                  	pop	af
     131.  00:9E18  E1                  	pop	hl
     132.  00:9E19  FD E9               	jp	iy
     133.  00:9E1B                      
     134.  00:9E1B  7E                  getbit: ld	a,[hl]
     135.  00:9E1C  23                  	inc	hl
     136.  00:9E1D  17                  	rla
     137.  00:9E1E  C9                  	ret
     138.  00:9E1F                      
     139.  00:9E1F                      getbitexx:
     140.  00:9E1F  D9                  	exx
     141.  00:9E20  7E                  	ld	a,[hl]
     142.  00:9E21  23                  	inc	hl
     143.  00:9E22  D9                  	exx
     144.  00:9E23  17                  	rla
     145.  00:9E24  C9                  	ret
     146.  00:9E25                      
     147.  00:9E25                      ; Depacker exit
     148.  00:9E25                      Depack_out:
     149.  00:9E25  FB                  	ei
     150.  00:9E26  C9                  	ret
     151.  00:9E27                      
     152.  00:9E27                      modes:
     153.  00:9E27  EE 9D               	dw	offsok
     154.  00:9E29  DE 9D               	dw	mode2
     155.  00:9E2B  D8 9D               	dw	mode3
     156.  00:9E2D  D2 9D               	dw	mode4
     157.  00:9E2F  CC 9D               	dw	mode5
     158.  00:9E31  C6 9D               	dw	mode6
     159.  00:9E33  C0 9D               	dw	mode7
     269   00:9E35                      
     270   00:9E35                      
     271   00:9E35                      	
     272   00:9E35                      ;;=====================================================
     273   00:9E35                      ;;DEFINICIÓN DE ESTRUCTURAS
     274   00:9E35                      ;;=====================================================		
     275   00:9E35                      	include "estructuras.asm"
       1.  00:9E35                      ;;=====================================================
       2.  00:9E35                      ;;DEFINICIÓN DE ESTRUCTURAS
       3.  00:9E35                      ;;=====================================================
       4.  00:9E35                      
       5.  00:9E35                      ;crear estructura
       6.  00:9E35                      
       7.  00:9E35                      	STRUCT ESTRUCTURA_PUNTOMIRA
       8.  00:9E35                    < posx			DB		POSXPM
       9.  00:9E35                    < posy			DB		POSYPM
      10.  00:9E35                    < escena			DB		0	;valores porsibles 0 (blanco+rojo en punto de mira) y NEG 0 (al revés)
      11.  00:9E35                    < velocidad		DB		0
      12.  00:9E35                    < boton2_pressed  DB		0
      13.  00:9E35                    < cadencia		DB		5	;nº de veces que se ejecutará el disparo antes de ejecutar un disparo real (porque cuando se pulsa la tecl dispara 3 ó 4 veces de rápido que va)
      14.  00:9E35                    < ; al final he decidido (ya que el punto de mira es el prota) que lo relacionado con el prota vaya en esta estructura
      15.  00:9E35                    < pm_aux1			DB		0	;para llegar a los 16 campos
      16.  00:9E35                    < pm_aux2			DB		0	;para llegar a los 16 campos
      17.  00:9E35                    < pm_aux3			DB		0	;para llegar a los 16 campos
      18.  00:9E35                    < pm_aux4			DB		0	;para llegar a los 16 campos
      19.  00:9E35                    < pm_aux5			DB		0	;para llegar a los 16 campos
      20.  00:9E35                    < pm_aux6			DB		0	;para llegar a los 16 campos
      21.  00:9E35                    < pm_aux7			DB		0	;para llegar a los 16 campos
      22.  00:9E35                    < pm_aux8			DB		0	;para llegar a los 16 campos
      23.  00:9E35                    < pm_aux9			DB		0	;para llegar a los 16 campos
      24.  00:9E35                    < pm_aux10		DB		0	;para llegar a los 16 campos
      25.  00:9E35                    < 	ENDSTRUCT;ESTRUCTURA_PUNTOMIRA
      26.  00:9E35                      
      27.  00:9E35                      
      28.  00:9E35                      
      29.  00:9E35                      	STRUCT ESTRUCTURA_ANTORCHA
      30.  00:9E35                    < activo				DB		0	;0 no activa <>0 activo
      31.  00:9E35                    < postilemem_antor1	DW		0	;pos en memoria ver array_antorcha de cómo se mostrará (wordaux2)	1,2
      32.  00:9E35                    < pospantalla_antor1	DB		0	;pos en pantalla (memoria en el banco 1 se le suma 256 + TILEMAP) (wordaux1)	3
      33.  00:9E35                    < pospantalla_antor2	DB		0	;pos en pantalla (memoria en el banco 1 se le suma 256 + TILEMAP) (wordaux1)	4
      34.  00:9E35                    < escena				DB		0	;(va entre 0 y 1 - 0=>llama1 y llama2 o 1=>llama2 y llama1	7 - tiles 196 y 197)	5
      35.  00:9E35                    < cont_sig_escena		DB		10	;	6
      36.  00:9E35                    < 	ENDSTRUCT;ESTRUCTURA_ANTORCHA
      37.  00:9E35                      
      38.  00:9E35                      	STRUCT ESTRUCTURA_ESQUELETO
      39.  00:9E35                    < activo				DB		0	;0 no activa <>0 activo
      40.  00:9E35                    < postilemem_antor1	DW		0	;pos en memoria ver array_antorcha de cómo se mostrará (wordaux2)	1,2
      41.  00:9E35                    < pospantalla_esquel1	DB		0	;pos en pantalla (memoria en el banco 1 se le suma 256 + TILEMAP) (wordaux1)	3
      42.  00:9E35                    < pospantalla_esquel2	DB		0	;pos en pantalla (memoria en el banco 1 se le suma 256 + TILEMAP) (wordaux1)	4
      43.  00:9E35                    < escena				DB		0	;(va entre 0 y 4 - tiles 164, 165, 164, 166)	5
      44.  00:9E35                    < cont_sig_escena		DB		0	;	6
      45.  00:9E35                    < 	ENDSTRUCT;ESTRUCTURA_ESQUELETO
      46.  00:9E35                      	
      47.  00:9E35                      
      48.  00:9E35                      	STRUCT ESTRUCTURA_ENEMIGO
      49.  00:9E35                    < tipo				DB		0	;(0 serpiente por ejemplo) #FF muerto o no existe
      50.  00:9E35                    < posx				DB		5
      51.  00:9E35                    < posy				DB		50
      52.  00:9E35                    < color				DB		5
      53.  00:9E35                    < escena				DB		0
      54.  00:9E35                    < contador_siguiente_escena	DB	0
      55.  00:9E35                    < reset_contador		DB		0
      56.  00:9E35                    < dano				DB		0	;daño
      57.  00:9E35                    < energia				DB		0	;energía del enemigo... si llega a 0 => existe <- 0
      58.  00:9E35                    < ;indica el nº de sprite a mostrar y si está compuesto por uno o dos sprites y si están en horizontal o vertical
      59.  00:9E35                    < ver_hor				DB		0
      60.  00:9E35                    < manejador_dibujo 	DW		0
      61.  00:9E35                    < en_aux3				DB		0
      62.  00:9E35                    < en_aux4				DB		0
      63.  00:9E35                    < 	ENDSTRUCT;ESTRUCTURA_ENEMIGO
      64.  00:9E35                      
      65.  00:9E35                      	STRUCT ESTRUCTURA_AYUDA	
      66.  00:9E35                    < activa				DB		0	;0 no activa <>0 activo (y muestra tiles ayudaoff)
      67.  00:9E35                    < posx				DB		0	;punto x de la ayuda para cuando se dispare encima
      68.  00:9E35                    < posy				DB		112	;punto y de la ayuda para cuando se dispare encima
      69.  00:9E35                    < radiox				DB		0	;radio x de la ayuda para cuando se dispare encima
      70.  00:9E35                    < radioy				DB		0	;radio y de la ayuda para cuando se dispare encima
      71.  00:9E35                    < accion				DW		0	;función para acción de cada tipo de ayuda
      72.  00:9E35                    < tiles_ayudaon		DW		0	;puntero al array con los tiles de las ayudas sin usar para wordaux2
      73.  00:9E35                    < tiles_ayudaoff		DW		0	;puntero al array con los tiles de las ayudas sin usar para wordaux2
      74.  00:9E35                    < pos_en_tilemap		DW		0	;calcula posición en tilemap para wordaux1
      75.  00:9E35                    < alto				DB		2	;alto en tiles del dibujo de la puerta (filas)
      76.  00:9E35                    < ancho				DB		2	;ancho en tiles del dibujo de la puerta (columnas)
      77.  00:9E35                    < 	ENDSTRUCT;ESTRUCTURA_PUERTA
      78.  00:9E35                      
      79.  00:9E35                      	STRUCT ESTRUCTURA_PUERTA	;también servirá para la escalera
      80.  00:9E35                    < activa				DB		0	;0 no activa <>0 activo
      81.  00:9E35                    < posx				DB		0	;punto x de la puerta para cuando se dispare encima
      82.  00:9E35                    < posy				DB		0	;punto y de la puerta para cuando se dispare encima
      83.  00:9E35                    < radiox				DB		0	;radio x de la puerta para cuando se dispare encima
      84.  00:9E35                    < radioy				DB		0	;radio y de la puerta para cuando se dispare encima
      85.  00:9E35                    < accion				DW		0	;función para acción de cada tipo de puerta
      86.  00:9E35                    < tiles_puerta		DW		0	;puntero al array con los tiles de las puertas para wordaux2
      87.  00:9E35                    < pos_en_tilemap		DW		0	;calcula posición en tilemap para wordaux1
      88.  00:9E35                    < alto				DB		0	;alto en tiles del dibujo de la puerta (filas)
      89.  00:9E35                    < ancho				DB		0	;ancho en tiles del dibujo de la puerta (columnas)
      90.  00:9E35                    < 	ENDSTRUCT;ESTRUCTURA_PUERTA
      91.  00:9E35                      
      92.  00:9E35                      
      93.  00:9E35                      
      94.  00:9E35                      
      95.  00:9E35                      
      96.  00:9E35                      
     276   00:9E35                      	
     277   00:9E35                      ;;=====================================================
     278   00:9E35                      ;;DEFINICIÓN DE VARIABLES
     279   00:9E35                      ;;=====================================================		
     280   00:9E35                      	include "sprites.asm"
       1.  00:9E35                      ;;=====================================================
       2.  00:9E35                      ;;DEFINICIÓN DE SPRITES
       3.  00:9E35                      ;;=====================================================	
       4.  00:9E35                      
       5.  00:9E35                      
       6.  00:9E35                      ;; NOTA:
       7.  00:9E35                      ;~ sprite_reliquia_oracion: on/off
       8.  00:9E35                      ;~ sprite_reliquia_cruz: on/off
       9.  00:9E35                      ;~ sprite_reliquia_agua: on/off
      10.  00:9E35                      ;~ sprite_peto: on/off
      11.  00:9E35                      ;~ sprite_planta: on/off
      12.  00:9E35                      ;~ sprite_vida_extra: on/off
      13.  00:9E35                      ;~ sprite_ballesta_mejorada: on/off
      14.  00:9E35                      
      15.  00:9E35                      ;~ iban a ser sprites pero por falta de recursos serán tiles
      16.  00:9E35                      
      17.  00:9E35                      
      18.  00:9E35                      sprites_pantantalla:
      19.  00:9E35                      
      20.  00:9E35                      ;; PARTE 1: SPRITES COMUNES
      21.  00:9E35                      
      22.  00:9E35                      sprites_comunes:
      23.  00:9E35                      sprite_punto_mira_1:	;color 8
      24.  00:9E35                      	db #FF,#FF,#C0,#C0,#C0,#C0,#C0,#C0
      24.  00:9E35  FF FF C0 C0 C0 C0 C0 C0 
      25.  00:9E3D                      	db #C0,#C0,#C0,#C0,#C0,#C0,#FF,#FF
      25.  00:9E3D  C0 C0 C0 C0 C0 C0 FF FF 
      26.  00:9E45                      	db #FF,#FF,#03,#03,#03,#03,#03,#03
      26.  00:9E45  FF FF 03 03 03 03 03 03 
      27.  00:9E4D                      	db #03,#03,#03,#03,#03,#03,#FF,#FF
      27.  00:9E4D  03 03 03 03 03 03 FF FF 
      28.  00:9E55                      	
      29.  00:9E55                      sprite_punto_mira_2: 	;color 15
      30.  00:9E55                      	db #00,#00,#00,#00,#0F,#0F,#0C,#0C
      30.  00:9E55  00 00 00 00 0F 0F 0C 0C 
      31.  00:9E5D                      	db #0C,#0C,#0F,#0F,#00,#00,#00,#00
      31.  00:9E5D  0C 0C 0F 0F 00 00 00 00 
      32.  00:9E65                      	db #00,#00,#00,#00,#F0,#F0,#30,#30
      32.  00:9E65  00 00 00 00 F0 F0 30 30 
      33.  00:9E6D                      	db #30,#30,#F0,#F0,#00,#00,#00,#00
      33.  00:9E6D  30 30 F0 F0 00 00 00 00 
      34.  00:9E75                      	
      35.  00:9E75                      sprite_punto_mira_1_mejorado:
      36.  00:9E75                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      36.  00:9E75  FF FF FF FF FF FF FF FF 
      37.  00:9E7D                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      37.  00:9E7D  FF FF FF FF FF FF FF FF 
      38.  00:9E85                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      38.  00:9E85  FF FF FF FF FF FF FF FF 
      39.  00:9E8D                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      39.  00:9E8D  FF FF FF FF FF FF FF FF 
      40.  00:9E95                      
      41.  00:9E95                      sprite_punto_mira_2_mejorado:
      42.  00:9E95                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      42.  00:9E95  FF FF FF FF FF FF FF FF 
      43.  00:9E9D                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      43.  00:9E9D  FF FF FF FF FF FF FF FF 
      44.  00:9EA5                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      44.  00:9EA5  FF FF FF FF FF FF FF FF 
      45.  00:9EAD                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      45.  00:9EAD  FF FF FF FF FF FF FF FF 
      46.  00:9EB5                      	
      47.  00:9EB5                      sprite_explosion_1:
      48.  00:9EB5                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      48.  00:9EB5  FF FF FF FF FF FF FF FF 
      49.  00:9EBD                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      49.  00:9EBD  FF FF FF FF FF FF FF FF 
      50.  00:9EC5                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      50.  00:9EC5  FF FF FF FF FF FF FF FF 
      51.  00:9ECD                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF	
      51.  00:9ECD  FF FF FF FF FF FF FF FF 
      52.  00:9ED5                      
      53.  00:9ED5                      sprite_explosion_2:
      54.  00:9ED5                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      54.  00:9ED5  FF FF FF FF FF FF FF FF 
      55.  00:9EDD                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      55.  00:9EDD  FF FF FF FF FF FF FF FF 
      56.  00:9EE5                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      56.  00:9EE5  FF FF FF FF FF FF FF FF 
      57.  00:9EED                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF	
      57.  00:9EED  FF FF FF FF FF FF FF FF 
      58.  00:9EF5                      fin_sprites_comunes:
      59.  00:9EF5                      
      60.  00:9EF5                      ;; PARTE 2: SPRITES NO COMUNES
      61.  00:9EF5                      
      62.  00:9EF5                      ;; ARAÑA
      63.  00:9EF5                      	
      64.  00:9EF5                      sprite_arana1_1:
      65.  00:9EF5                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      65.  00:9EF5  FF FF FF FF FF FF FF FF 
      66.  00:9EFD                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      66.  00:9EFD  FF FF FF FF FF FF FF FF 
      67.  00:9F05                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      67.  00:9F05  FF FF FF FF FF FF FF FF 
      68.  00:9F0D                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      68.  00:9F0D  FF FF FF FF FF FF FF FF 
      69.  00:9F15                      	
      70.  00:9F15                      sprite_arana1_2:
      71.  00:9F15                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      71.  00:9F15  FF FF FF FF FF FF FF FF 
      72.  00:9F1D                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      72.  00:9F1D  FF FF FF FF FF FF FF FF 
      73.  00:9F25                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      73.  00:9F25  FF FF FF FF FF FF FF FF 
      74.  00:9F2D                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      74.  00:9F2D  FF FF FF FF FF FF FF FF 
      75.  00:9F35                      
      76.  00:9F35                      ;; MURCIELAGO
      77.  00:9F35                      	
      78.  00:9F35                      sprite_murcielago1_1:
      79.  00:9F35                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      79.  00:9F35  FF FF FF FF FF FF FF FF 
      80.  00:9F3D                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      80.  00:9F3D  FF FF FF FF FF FF FF FF 
      81.  00:9F45                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      81.  00:9F45  FF FF FF FF FF FF FF FF 
      82.  00:9F4D                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      82.  00:9F4D  FF FF FF FF FF FF FF FF 
      83.  00:9F55                      	
      84.  00:9F55                      sprite_murcielago1_2:
      85.  00:9F55                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      85.  00:9F55  FF FF FF FF FF FF FF FF 
      86.  00:9F5D                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      86.  00:9F5D  FF FF FF FF FF FF FF FF 
      87.  00:9F65                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      87.  00:9F65  FF FF FF FF FF FF FF FF 
      88.  00:9F6D                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF	
      88.  00:9F6D  FF FF FF FF FF FF FF FF 
      89.  00:9F75                      
      90.  00:9F75                      ;; SERPIENTE
      91.  00:9F75                      
      92.  00:9F75                      sprite_serpiente1_1:
      93.  00:9F75                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      93.  00:9F75  FF FF FF FF FF FF FF FF 
      94.  00:9F7D                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      94.  00:9F7D  FF FF FF FF FF FF FF FF 
      95.  00:9F85                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      95.  00:9F85  FF FF FF FF FF FF FF FF 
      96.  00:9F8D                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      96.  00:9F8D  FF FF FF FF FF FF FF FF 
      97.  00:9F95                      	
      98.  00:9F95                      sprite_serpiente1_2:
      99.  00:9F95                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      99.  00:9F95  FF FF FF FF FF FF FF FF 
     100.  00:9F9D                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     100.  00:9F9D  FF FF FF FF FF FF FF FF 
     101.  00:9FA5                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     101.  00:9FA5  FF FF FF FF FF FF FF FF 
     102.  00:9FAD                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     102.  00:9FAD  FF FF FF FF FF FF FF FF 
     103.  00:9FB5                      	
     104.  00:9FB5                      sprite_serpiente2_1:
     105.  00:9FB5                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     105.  00:9FB5  FF FF FF FF FF FF FF FF 
     106.  00:9FBD                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     106.  00:9FBD  FF FF FF FF FF FF FF FF 
     107.  00:9FC5                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     107.  00:9FC5  FF FF FF FF FF FF FF FF 
     108.  00:9FCD                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     108.  00:9FCD  FF FF FF FF FF FF FF FF 
     109.  00:9FD5                      	
     110.  00:9FD5                      sprite_serpiente2_2:
     111.  00:9FD5                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     111.  00:9FD5  FF FF FF FF FF FF FF FF 
     112.  00:9FDD                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     112.  00:9FDD  FF FF FF FF FF FF FF FF 
     113.  00:9FE5                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     113.  00:9FE5  FF FF FF FF FF FF FF FF 
     114.  00:9FED                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     114.  00:9FED  FF FF FF FF FF FF FF FF 
     115.  00:9FF5                      
     116.  00:9FF5                      ;; ZOMBI
     117.  00:9FF5                      
     118.  00:9FF5                      sprite_zombi1_1_1:
     119.  00:9FF5                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     119.  00:9FF5  FF FF FF FF FF FF FF FF 
     120.  00:9FFD                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     120.  00:9FFD  FF FF FF FF FF FF FF FF 
     121.  00:A005                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     121.  00:A005  FF FF FF FF FF FF FF FF 
     122.  00:A00D                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     122.  00:A00D  FF FF FF FF FF FF FF FF 
     123.  00:A015                      
     124.  00:A015                      sprite_zombi1_2_1:
     125.  00:A015                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     125.  00:A015  FF FF FF FF FF FF FF FF 
     126.  00:A01D                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     126.  00:A01D  FF FF FF FF FF FF FF FF 
     127.  00:A025                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     127.  00:A025  FF FF FF FF FF FF FF FF 
     128.  00:A02D                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     128.  00:A02D  FF FF FF FF FF FF FF FF 
     129.  00:A035                      	
     130.  00:A035                      sprite_zombi1_3_1:
     131.  00:A035                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     131.  00:A035  FF FF FF FF FF FF FF FF 
     132.  00:A03D                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     132.  00:A03D  FF FF FF FF FF FF FF FF 
     133.  00:A045                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     133.  00:A045  FF FF FF FF FF FF FF FF 
     134.  00:A04D                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     134.  00:A04D  FF FF FF FF FF FF FF FF 
     135.  00:A055                      	
     136.  00:A055                      sprite_zombi1_4_1:
     137.  00:A055                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     137.  00:A055  FF FF FF FF FF FF FF FF 
     138.  00:A05D                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     138.  00:A05D  FF FF FF FF FF FF FF FF 
     139.  00:A065                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     139.  00:A065  FF FF FF FF FF FF FF FF 
     140.  00:A06D                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     140.  00:A06D  FF FF FF FF FF FF FF FF 
     141.  00:A075                      	
     142.  00:A075                      sprite_zombi1_1_2:
     143.  00:A075                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     143.  00:A075  FF FF FF FF FF FF FF FF 
     144.  00:A07D                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     144.  00:A07D  FF FF FF FF FF FF FF FF 
     145.  00:A085                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     145.  00:A085  FF FF FF FF FF FF FF FF 
     146.  00:A08D                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     146.  00:A08D  FF FF FF FF FF FF FF FF 
     147.  00:A095                      
     148.  00:A095                      sprite_zombi1_2_2:
     149.  00:A095                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     149.  00:A095  FF FF FF FF FF FF FF FF 
     150.  00:A09D                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     150.  00:A09D  FF FF FF FF FF FF FF FF 
     151.  00:A0A5                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     151.  00:A0A5  FF FF FF FF FF FF FF FF 
     152.  00:A0AD                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     152.  00:A0AD  FF FF FF FF FF FF FF FF 
     153.  00:A0B5                      	
     154.  00:A0B5                      sprite_zombi1_3_2:
     155.  00:A0B5                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     155.  00:A0B5  FF FF FF FF FF FF FF FF 
     156.  00:A0BD                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     156.  00:A0BD  FF FF FF FF FF FF FF FF 
     157.  00:A0C5                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     157.  00:A0C5  FF FF FF FF FF FF FF FF 
     158.  00:A0CD                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     158.  00:A0CD  FF FF FF FF FF FF FF FF 
     159.  00:A0D5                      	
     160.  00:A0D5                      sprite_zombi1_4_2:
     161.  00:A0D5                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     161.  00:A0D5  FF FF FF FF FF FF FF FF 
     162.  00:A0DD                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     162.  00:A0DD  FF FF FF FF FF FF FF FF 
     163.  00:A0E5                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     163.  00:A0E5  FF FF FF FF FF FF FF FF 
     164.  00:A0ED                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     164.  00:A0ED  FF FF FF FF FF FF FF FF 
     165.  00:A0F5                      	
     166.  00:A0F5                      sprite_zombi2_1_1:
     167.  00:A0F5                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     167.  00:A0F5  FF FF FF FF FF FF FF FF 
     168.  00:A0FD                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     168.  00:A0FD  FF FF FF FF FF FF FF FF 
     169.  00:A105                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     169.  00:A105  FF FF FF FF FF FF FF FF 
     170.  00:A10D                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     170.  00:A10D  FF FF FF FF FF FF FF FF 
     171.  00:A115                      
     172.  00:A115                      sprite_zombi2_2_1:
     173.  00:A115                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     173.  00:A115  FF FF FF FF FF FF FF FF 
     174.  00:A11D                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     174.  00:A11D  FF FF FF FF FF FF FF FF 
     175.  00:A125                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     175.  00:A125  FF FF FF FF FF FF FF FF 
     176.  00:A12D                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     176.  00:A12D  FF FF FF FF FF FF FF FF 
     177.  00:A135                      	
     178.  00:A135                      sprite_zombi2_3_1:
     179.  00:A135                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     179.  00:A135  FF FF FF FF FF FF FF FF 
     180.  00:A13D                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     180.  00:A13D  FF FF FF FF FF FF FF FF 
     181.  00:A145                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     181.  00:A145  FF FF FF FF FF FF FF FF 
     182.  00:A14D                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     182.  00:A14D  FF FF FF FF FF FF FF FF 
     183.  00:A155                      	
     184.  00:A155                      sprite_zombi2_4_1:
     185.  00:A155                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     185.  00:A155  FF FF FF FF FF FF FF FF 
     186.  00:A15D                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     186.  00:A15D  FF FF FF FF FF FF FF FF 
     187.  00:A165                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     187.  00:A165  FF FF FF FF FF FF FF FF 
     188.  00:A16D                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     188.  00:A16D  FF FF FF FF FF FF FF FF 
     189.  00:A175                      	
     190.  00:A175                      sprite_zombi2_1_2:
     191.  00:A175                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     191.  00:A175  FF FF FF FF FF FF FF FF 
     192.  00:A17D                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     192.  00:A17D  FF FF FF FF FF FF FF FF 
     193.  00:A185                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     193.  00:A185  FF FF FF FF FF FF FF FF 
     194.  00:A18D                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     194.  00:A18D  FF FF FF FF FF FF FF FF 
     195.  00:A195                      
     196.  00:A195                      sprite_zombi2_2_2:
     197.  00:A195                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     197.  00:A195  FF FF FF FF FF FF FF FF 
     198.  00:A19D                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     198.  00:A19D  FF FF FF FF FF FF FF FF 
     199.  00:A1A5                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     199.  00:A1A5  FF FF FF FF FF FF FF FF 
     200.  00:A1AD                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     200.  00:A1AD  FF FF FF FF FF FF FF FF 
     201.  00:A1B5                      	
     202.  00:A1B5                      sprite_zombi2_3_2:
     203.  00:A1B5                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     203.  00:A1B5  FF FF FF FF FF FF FF FF 
     204.  00:A1BD                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     204.  00:A1BD  FF FF FF FF FF FF FF FF 
     205.  00:A1C5                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     205.  00:A1C5  FF FF FF FF FF FF FF FF 
     206.  00:A1CD                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     206.  00:A1CD  FF FF FF FF FF FF FF FF 
     207.  00:A1D5                      	
     208.  00:A1D5                      sprite_zombi2_4_2:
     209.  00:A1D5                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     209.  00:A1D5  FF FF FF FF FF FF FF FF 
     210.  00:A1DD                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     210.  00:A1DD  FF FF FF FF FF FF FF FF 
     211.  00:A1E5                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     211.  00:A1E5  FF FF FF FF FF FF FF FF 
     212.  00:A1ED                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     212.  00:A1ED  FF FF FF FF FF FF FF FF 
     213.  00:A1F5                      	
     214.  00:A1F5                      ;; CABALLERO
     215.  00:A1F5                      
     216.  00:A1F5                      sprite_caballero1_1_1:
     217.  00:A1F5                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     217.  00:A1F5  FF FF FF FF FF FF FF FF 
     218.  00:A1FD                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     218.  00:A1FD  FF FF FF FF FF FF FF FF 
     219.  00:A205                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     219.  00:A205  FF FF FF FF FF FF FF FF 
     220.  00:A20D                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     220.  00:A20D  FF FF FF FF FF FF FF FF 
     221.  00:A215                      
     222.  00:A215                      sprite_caballero1_2_1:
     223.  00:A215                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     223.  00:A215  FF FF FF FF FF FF FF FF 
     224.  00:A21D                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     224.  00:A21D  FF FF FF FF FF FF FF FF 
     225.  00:A225                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     225.  00:A225  FF FF FF FF FF FF FF FF 
     226.  00:A22D                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     226.  00:A22D  FF FF FF FF FF FF FF FF 
     227.  00:A235                      	
     228.  00:A235                      sprite_caballero1_3_1:
     229.  00:A235                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     229.  00:A235  FF FF FF FF FF FF FF FF 
     230.  00:A23D                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     230.  00:A23D  FF FF FF FF FF FF FF FF 
     231.  00:A245                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     231.  00:A245  FF FF FF FF FF FF FF FF 
     232.  00:A24D                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     232.  00:A24D  FF FF FF FF FF FF FF FF 
     233.  00:A255                      	
     234.  00:A255                      sprite_caballero1_4_1:
     235.  00:A255                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     235.  00:A255  FF FF FF FF FF FF FF FF 
     236.  00:A25D                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     236.  00:A25D  FF FF FF FF FF FF FF FF 
     237.  00:A265                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     237.  00:A265  FF FF FF FF FF FF FF FF 
     238.  00:A26D                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     238.  00:A26D  FF FF FF FF FF FF FF FF 
     239.  00:A275                      	
     240.  00:A275                      sprite_caballero1_1_2:
     241.  00:A275                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     241.  00:A275  FF FF FF FF FF FF FF FF 
     242.  00:A27D                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     242.  00:A27D  FF FF FF FF FF FF FF FF 
     243.  00:A285                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     243.  00:A285  FF FF FF FF FF FF FF FF 
     244.  00:A28D                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     244.  00:A28D  FF FF FF FF FF FF FF FF 
     245.  00:A295                      
     246.  00:A295                      sprite_caballero1_2_2:
     247.  00:A295                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     247.  00:A295  FF FF FF FF FF FF FF FF 
     248.  00:A29D                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     248.  00:A29D  FF FF FF FF FF FF FF FF 
     249.  00:A2A5                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     249.  00:A2A5  FF FF FF FF FF FF FF FF 
     250.  00:A2AD                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     250.  00:A2AD  FF FF FF FF FF FF FF FF 
     251.  00:A2B5                      	
     252.  00:A2B5                      sprite_caballero1_3_2:
     253.  00:A2B5                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     253.  00:A2B5  FF FF FF FF FF FF FF FF 
     254.  00:A2BD                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     254.  00:A2BD  FF FF FF FF FF FF FF FF 
     255.  00:A2C5                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     255.  00:A2C5  FF FF FF FF FF FF FF FF 
     256.  00:A2CD                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     256.  00:A2CD  FF FF FF FF FF FF FF FF 
     257.  00:A2D5                      	
     258.  00:A2D5                      sprite_caballero1_4_2:
     259.  00:A2D5                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     259.  00:A2D5  FF FF FF FF FF FF FF FF 
     260.  00:A2DD                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     260.  00:A2DD  FF FF FF FF FF FF FF FF 
     261.  00:A2E5                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     261.  00:A2E5  FF FF FF FF FF FF FF FF 
     262.  00:A2ED                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     262.  00:A2ED  FF FF FF FF FF FF FF FF 
     263.  00:A2F5                      	
     264.  00:A2F5                      sprite_caballero2_1_1:
     265.  00:A2F5                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     265.  00:A2F5  FF FF FF FF FF FF FF FF 
     266.  00:A2FD                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     266.  00:A2FD  FF FF FF FF FF FF FF FF 
     267.  00:A305                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     267.  00:A305  FF FF FF FF FF FF FF FF 
     268.  00:A30D                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     268.  00:A30D  FF FF FF FF FF FF FF FF 
     269.  00:A315                      
     270.  00:A315                      sprite_caballero2_2_1:
     271.  00:A315                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     271.  00:A315  FF FF FF FF FF FF FF FF 
     272.  00:A31D                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     272.  00:A31D  FF FF FF FF FF FF FF FF 
     273.  00:A325                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     273.  00:A325  FF FF FF FF FF FF FF FF 
     274.  00:A32D                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     274.  00:A32D  FF FF FF FF FF FF FF FF 
     275.  00:A335                      	
     276.  00:A335                      sprite_caballero2_3_1:
     277.  00:A335                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     277.  00:A335  FF FF FF FF FF FF FF FF 
     278.  00:A33D                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     278.  00:A33D  FF FF FF FF FF FF FF FF 
     279.  00:A345                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     279.  00:A345  FF FF FF FF FF FF FF FF 
     280.  00:A34D                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     280.  00:A34D  FF FF FF FF FF FF FF FF 
     281.  00:A355                      	
     282.  00:A355                      sprite_caballero2_4_1:
     283.  00:A355                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     283.  00:A355  FF FF FF FF FF FF FF FF 
     284.  00:A35D                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     284.  00:A35D  FF FF FF FF FF FF FF FF 
     285.  00:A365                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     285.  00:A365  FF FF FF FF FF FF FF FF 
     286.  00:A36D                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     286.  00:A36D  FF FF FF FF FF FF FF FF 
     287.  00:A375                      	
     288.  00:A375                      sprite_caballero2_1_2:
     289.  00:A375                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     289.  00:A375  FF FF FF FF FF FF FF FF 
     290.  00:A37D                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     290.  00:A37D  FF FF FF FF FF FF FF FF 
     291.  00:A385                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     291.  00:A385  FF FF FF FF FF FF FF FF 
     292.  00:A38D                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     292.  00:A38D  FF FF FF FF FF FF FF FF 
     293.  00:A395                      
     294.  00:A395                      sprite_caballero2_2_2:
     295.  00:A395                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     295.  00:A395  FF FF FF FF FF FF FF FF 
     296.  00:A39D                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     296.  00:A39D  FF FF FF FF FF FF FF FF 
     297.  00:A3A5                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     297.  00:A3A5  FF FF FF FF FF FF FF FF 
     298.  00:A3AD                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     298.  00:A3AD  FF FF FF FF FF FF FF FF 
     299.  00:A3B5                      	
     300.  00:A3B5                      sprite_caballero2_3_2:
     301.  00:A3B5                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     301.  00:A3B5  FF FF FF FF FF FF FF FF 
     302.  00:A3BD                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     302.  00:A3BD  FF FF FF FF FF FF FF FF 
     303.  00:A3C5                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     303.  00:A3C5  FF FF FF FF FF FF FF FF 
     304.  00:A3CD                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     304.  00:A3CD  FF FF FF FF FF FF FF FF 
     305.  00:A3D5                      	
     306.  00:A3D5                      sprite_caballero2_4_2:
     307.  00:A3D5                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     307.  00:A3D5  FF FF FF FF FF FF FF FF 
     308.  00:A3DD                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     308.  00:A3DD  FF FF FF FF FF FF FF FF 
     309.  00:A3E5                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     309.  00:A3E5  FF FF FF FF FF FF FF FF 
     310.  00:A3ED                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     310.  00:A3ED  FF FF FF FF FF FF FF FF 
     311.  00:A3F5                      	
     312.  00:A3F5                      ;; LLAMA
     313.  00:A3F5                      
     314.  00:A3F5                      sprite_llama1_1:	
     315.  00:A3F5                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     315.  00:A3F5  FF FF FF FF FF FF FF FF 
     316.  00:A3FD                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     316.  00:A3FD  FF FF FF FF FF FF FF FF 
     317.  00:A405                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     317.  00:A405  FF FF FF FF FF FF FF FF 
     318.  00:A40D                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     318.  00:A40D  FF FF FF FF FF FF FF FF 
     319.  00:A415                      	
     320.  00:A415                      sprite_llama2_1:	
     321.  00:A415                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     321.  00:A415  FF FF FF FF FF FF FF FF 
     322.  00:A41D                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     322.  00:A41D  FF FF FF FF FF FF FF FF 
     323.  00:A425                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     323.  00:A425  FF FF FF FF FF FF FF FF 
     324.  00:A42D                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF	
     324.  00:A42D  FF FF FF FF FF FF FF FF 
     325.  00:A435                      	
     326.  00:A435                      sprite_llama1_2:	
     327.  00:A435                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     327.  00:A435  FF FF FF FF FF FF FF FF 
     328.  00:A43D                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     328.  00:A43D  FF FF FF FF FF FF FF FF 
     329.  00:A445                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     329.  00:A445  FF FF FF FF FF FF FF FF 
     330.  00:A44D                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     330.  00:A44D  FF FF FF FF FF FF FF FF 
     331.  00:A455                      	
     332.  00:A455                      sprite_llama2_2:	
     333.  00:A455                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     333.  00:A455  FF FF FF FF FF FF FF FF 
     334.  00:A45D                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     334.  00:A45D  FF FF FF FF FF FF FF FF 
     335.  00:A465                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     335.  00:A465  FF FF FF FF FF FF FF FF 
     336.  00:A46D                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF			
     336.  00:A46D  FF FF FF FF FF FF FF FF 
     337.  00:A475                      	
     338.  00:A475                      ;; FANTASMA
     339.  00:A475                      
     340.  00:A475                      sprite_fantasma1_1:
     341.  00:A475                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     341.  00:A475  FF FF FF FF FF FF FF FF 
     342.  00:A47D                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     342.  00:A47D  FF FF FF FF FF FF FF FF 
     343.  00:A485                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     343.  00:A485  FF FF FF FF FF FF FF FF 
     344.  00:A48D                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     344.  00:A48D  FF FF FF FF FF FF FF FF 
     345.  00:A495                      
     346.  00:A495                      sprite_fantasma2_1:
     347.  00:A495                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     347.  00:A495  FF FF FF FF FF FF FF FF 
     348.  00:A49D                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     348.  00:A49D  FF FF FF FF FF FF FF FF 
     349.  00:A4A5                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     349.  00:A4A5  FF FF FF FF FF FF FF FF 
     350.  00:A4AD                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     350.  00:A4AD  FF FF FF FF FF FF FF FF 
     351.  00:A4B5                      
     352.  00:A4B5                      sprite_fantasma1_2:
     353.  00:A4B5                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     353.  00:A4B5  FF FF FF FF FF FF FF FF 
     354.  00:A4BD                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     354.  00:A4BD  FF FF FF FF FF FF FF FF 
     355.  00:A4C5                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     355.  00:A4C5  FF FF FF FF FF FF FF FF 
     356.  00:A4CD                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     356.  00:A4CD  FF FF FF FF FF FF FF FF 
     357.  00:A4D5                      
     358.  00:A4D5                      sprite_fantasma2_2:
     359.  00:A4D5                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     359.  00:A4D5  FF FF FF FF FF FF FF FF 
     360.  00:A4DD                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     360.  00:A4DD  FF FF FF FF FF FF FF FF 
     361.  00:A4E5                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     361.  00:A4E5  FF FF FF FF FF FF FF FF 
     362.  00:A4ED                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF	
     362.  00:A4ED  FF FF FF FF FF FF FF FF 
     363.  00:A4F5                      	
     364.  00:A4F5                      ;; MAGIA
     365.  00:A4F5                      
     366.  00:A4F5                      sprite_magia1_1:
     367.  00:A4F5                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     367.  00:A4F5  FF FF FF FF FF FF FF FF 
     368.  00:A4FD                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     368.  00:A4FD  FF FF FF FF FF FF FF FF 
     369.  00:A505                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     369.  00:A505  FF FF FF FF FF FF FF FF 
     370.  00:A50D                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     370.  00:A50D  FF FF FF FF FF FF FF FF 
     371.  00:A515                      
     372.  00:A515                      sprite_magia2_1:
     373.  00:A515                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     373.  00:A515  FF FF FF FF FF FF FF FF 
     374.  00:A51D                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     374.  00:A51D  FF FF FF FF FF FF FF FF 
     375.  00:A525                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     375.  00:A525  FF FF FF FF FF FF FF FF 
     376.  00:A52D                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     376.  00:A52D  FF FF FF FF FF FF FF FF 
     377.  00:A535                      
     378.  00:A535                      sprite_magia1_2:
     379.  00:A535                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     379.  00:A535  FF FF FF FF FF FF FF FF 
     380.  00:A53D                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     380.  00:A53D  FF FF FF FF FF FF FF FF 
     381.  00:A545                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     381.  00:A545  FF FF FF FF FF FF FF FF 
     382.  00:A54D                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     382.  00:A54D  FF FF FF FF FF FF FF FF 
     383.  00:A555                      
     384.  00:A555                      sprite_magia2_2:
     385.  00:A555                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     385.  00:A555  FF FF FF FF FF FF FF FF 
     386.  00:A55D                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     386.  00:A55D  FF FF FF FF FF FF FF FF 
     387.  00:A565                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     387.  00:A565  FF FF FF FF FF FF FF FF 
     388.  00:A56D                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF	
     388.  00:A56D  FF FF FF FF FF FF FF FF 
     389.  00:A575                      	
     390.  00:A575                      	
     391.  00:A575                      ;; BEHOLDER
     392.  00:A575                      
     393.  00:A575                      sprite_beholder1_1:
     394.  00:A575                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     394.  00:A575  FF FF FF FF FF FF FF FF 
     395.  00:A57D                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     395.  00:A57D  FF FF FF FF FF FF FF FF 
     396.  00:A585                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     396.  00:A585  FF FF FF FF FF FF FF FF 
     397.  00:A58D                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     397.  00:A58D  FF FF FF FF FF FF FF FF 
     398.  00:A595                      
     399.  00:A595                      sprite_beholder2_1:
     400.  00:A595                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     400.  00:A595  FF FF FF FF FF FF FF FF 
     401.  00:A59D                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     401.  00:A59D  FF FF FF FF FF FF FF FF 
     402.  00:A5A5                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     402.  00:A5A5  FF FF FF FF FF FF FF FF 
     403.  00:A5AD                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     403.  00:A5AD  FF FF FF FF FF FF FF FF 
     404.  00:A5B5                      
     405.  00:A5B5                      sprite_beholder3_1:
     406.  00:A5B5                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     406.  00:A5B5  FF FF FF FF FF FF FF FF 
     407.  00:A5BD                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     407.  00:A5BD  FF FF FF FF FF FF FF FF 
     408.  00:A5C5                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     408.  00:A5C5  FF FF FF FF FF FF FF FF 
     409.  00:A5CD                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     409.  00:A5CD  FF FF FF FF FF FF FF FF 
     410.  00:A5D5                      
     411.  00:A5D5                      sprite_beholder4_1:
     412.  00:A5D5                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     412.  00:A5D5  FF FF FF FF FF FF FF FF 
     413.  00:A5DD                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     413.  00:A5DD  FF FF FF FF FF FF FF FF 
     414.  00:A5E5                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     414.  00:A5E5  FF FF FF FF FF FF FF FF 
     415.  00:A5ED                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF	
     415.  00:A5ED  FF FF FF FF FF FF FF FF 
     416.  00:A5F5                      	
     417.  00:A5F5                      sprite_beholder1_2:
     418.  00:A5F5                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     418.  00:A5F5  FF FF FF FF FF FF FF FF 
     419.  00:A5FD                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     419.  00:A5FD  FF FF FF FF FF FF FF FF 
     420.  00:A605                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     420.  00:A605  FF FF FF FF FF FF FF FF 
     421.  00:A60D                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     421.  00:A60D  FF FF FF FF FF FF FF FF 
     422.  00:A615                      
     423.  00:A615                      sprite_beholder2_2:
     424.  00:A615                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     424.  00:A615  FF FF FF FF FF FF FF FF 
     425.  00:A61D                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     425.  00:A61D  FF FF FF FF FF FF FF FF 
     426.  00:A625                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     426.  00:A625  FF FF FF FF FF FF FF FF 
     427.  00:A62D                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     427.  00:A62D  FF FF FF FF FF FF FF FF 
     428.  00:A635                      
     429.  00:A635                      sprite_beholder3_2:
     430.  00:A635                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     430.  00:A635  FF FF FF FF FF FF FF FF 
     431.  00:A63D                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     431.  00:A63D  FF FF FF FF FF FF FF FF 
     432.  00:A645                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     432.  00:A645  FF FF FF FF FF FF FF FF 
     433.  00:A64D                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     433.  00:A64D  FF FF FF FF FF FF FF FF 
     434.  00:A655                      
     435.  00:A655                      sprite_beholder4_2:
     436.  00:A655                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     436.  00:A655  FF FF FF FF FF FF FF FF 
     437.  00:A65D                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     437.  00:A65D  FF FF FF FF FF FF FF FF 
     438.  00:A665                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     438.  00:A665  FF FF FF FF FF FF FF FF 
     439.  00:A66D                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF		
     439.  00:A66D  FF FF FF FF FF FF FF FF 
     440.  00:A675                      	
     441.  00:A675                      ;; VAMPIRO
     442.  00:A675                      
     443.  00:A675                      sprite_vampiro1_1:
     444.  00:A675                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     444.  00:A675  FF FF FF FF FF FF FF FF 
     445.  00:A67D                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     445.  00:A67D  FF FF FF FF FF FF FF FF 
     446.  00:A685                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     446.  00:A685  FF FF FF FF FF FF FF FF 
     447.  00:A68D                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     447.  00:A68D  FF FF FF FF FF FF FF FF 
     448.  00:A695                      
     449.  00:A695                      sprite_vampiro2_1:
     450.  00:A695                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     450.  00:A695  FF FF FF FF FF FF FF FF 
     451.  00:A69D                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     451.  00:A69D  FF FF FF FF FF FF FF FF 
     452.  00:A6A5                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     452.  00:A6A5  FF FF FF FF FF FF FF FF 
     453.  00:A6AD                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     453.  00:A6AD  FF FF FF FF FF FF FF FF 
     454.  00:A6B5                      
     455.  00:A6B5                      sprite_vampiro1_2:
     456.  00:A6B5                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     456.  00:A6B5  FF FF FF FF FF FF FF FF 
     457.  00:A6BD                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     457.  00:A6BD  FF FF FF FF FF FF FF FF 
     458.  00:A6C5                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     458.  00:A6C5  FF FF FF FF FF FF FF FF 
     459.  00:A6CD                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     459.  00:A6CD  FF FF FF FF FF FF FF FF 
     460.  00:A6D5                      
     461.  00:A6D5                      sprite_vampiro2_2:
     462.  00:A6D5                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     462.  00:A6D5  FF FF FF FF FF FF FF FF 
     463.  00:A6DD                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     463.  00:A6DD  FF FF FF FF FF FF FF FF 
     464.  00:A6E5                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     464.  00:A6E5  FF FF FF FF FF FF FF FF 
     465.  00:A6ED                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     465.  00:A6ED  FF FF FF FF FF FF FF FF 
     466.  00:A6F5                      	
     467.  00:A6F5                      ;; MANOIZQ
     468.  00:A6F5                      
     469.  00:A6F5                      sprite_manoizq1:
     470.  00:A6F5                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     470.  00:A6F5  FF FF FF FF FF FF FF FF 
     471.  00:A6FD                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     471.  00:A6FD  FF FF FF FF FF FF FF FF 
     472.  00:A705                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     472.  00:A705  FF FF FF FF FF FF FF FF 
     473.  00:A70D                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     473.  00:A70D  FF FF FF FF FF FF FF FF 
     474.  00:A715                      	
     475.  00:A715                      sprite_manoizq2:
     476.  00:A715                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     476.  00:A715  FF FF FF FF FF FF FF FF 
     477.  00:A71D                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     477.  00:A71D  FF FF FF FF FF FF FF FF 
     478.  00:A725                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     478.  00:A725  FF FF FF FF FF FF FF FF 
     479.  00:A72D                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     479.  00:A72D  FF FF FF FF FF FF FF FF 
     480.  00:A735                      	
     481.  00:A735                      sprite_manoizq3:
     482.  00:A735                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     482.  00:A735  FF FF FF FF FF FF FF FF 
     483.  00:A73D                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     483.  00:A73D  FF FF FF FF FF FF FF FF 
     484.  00:A745                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     484.  00:A745  FF FF FF FF FF FF FF FF 
     485.  00:A74D                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF	
     485.  00:A74D  FF FF FF FF FF FF FF FF 
     486.  00:A755                      	
     487.  00:A755                      ;; MANODER
     488.  00:A755                      
     489.  00:A755                      sprite_manoder1:
     490.  00:A755                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     490.  00:A755  FF FF FF FF FF FF FF FF 
     491.  00:A75D                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     491.  00:A75D  FF FF FF FF FF FF FF FF 
     492.  00:A765                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     492.  00:A765  FF FF FF FF FF FF FF FF 
     493.  00:A76D                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     493.  00:A76D  FF FF FF FF FF FF FF FF 
     494.  00:A775                      	
     495.  00:A775                      sprite_manoder2:
     496.  00:A775                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     496.  00:A775  FF FF FF FF FF FF FF FF 
     497.  00:A77D                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     497.  00:A77D  FF FF FF FF FF FF FF FF 
     498.  00:A785                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     498.  00:A785  FF FF FF FF FF FF FF FF 
     499.  00:A78D                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     499.  00:A78D  FF FF FF FF FF FF FF FF 
     500.  00:A795                      	
     501.  00:A795                      sprite_manoder3:
     502.  00:A795                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     502.  00:A795  FF FF FF FF FF FF FF FF 
     503.  00:A79D                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     503.  00:A79D  FF FF FF FF FF FF FF FF 
     504.  00:A7A5                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     504.  00:A7A5  FF FF FF FF FF FF FF FF 
     505.  00:A7AD                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF		
     505.  00:A7AD  FF FF FF FF FF FF FF FF 
     506.  00:A7B5                      	
     507.  00:A7B5                      	
     508.  00:A7B5                      	
     509.  00:A7B5                      	
     510.  00:A7B5                      	
     511.  00:A7B5                      	
     512.  00:A7B5                      	
     513.  00:A7B5                      	
     514.  00:A7B5                      	
     515.  00:A7B5                      	
     516.  00:A7B5                      	
     517.  00:A7B5                      	
     518.  00:A7B5                      	
     519.  00:A7B5                      	
     520.  00:A7B5                      	
     521.  00:A7B5                      	
     522.  00:A7B5                      	
     523.  00:A7B5                      	
     524.  00:A7B5                      	
     525.  00:A7B5                      	
     526.  00:A7B5                      	
     527.  00:A7B5                      	
     528.  00:A7B5                      	
     281   00:A7B5                      	
     282   00:A7B5                      	include "habitaciones.asm"
       1.  00:A7B5                      ;;=====================================================
       2.  00:A7B5                      ;;DEFINICIÓN DE HABITACIONES x NIVEL
       3.  00:A7B5                      ;;=====================================================	
       4.  00:A7B5                      
       5.  00:A7B5                      ; sólo voy a usar 7x7 pero como los arrays son lineales y voy a trabajar con matrices
       6.  00:A7B5                      ; me interesa que seande  8x8 aunque sólo trabaje con 7x7
       7.  00:A7B5                      
       8.  00:A7B5                      ; ojo... la primera linea corresponderá a la primera linea del castillo no a la última
       9.  00:A7B5                      
      10.  00:A7B5                      ;; definición de estructura de bits
      11.  00:A7B5                      ;16 bits por habitación
      12.  00:A7B5                      
      13.  00:A7B5                      ;NOTA: no es necesario asignar un bit para la puerta de arriba ya que en las habitaciones de la fila 7 sólo habrá una puerta que será una escalera
      14.  00:A7B5                      ;1º byte
      15.  00:A7B5                      ;~ 7 - sin asignar
      16.  00:A7B5                      ;~ 6 - si 1 => ayudas usadas 0 => ayudas no usuadas (se inicializan al empezar la partida)
      17.  00:A7B5                      ;~ 5 - esqueletos
      18.  00:A7B5                      ;~ 4 - todos los enemigos muertos 0 no y 1 ó <>0 => toca la variable "is_habitacion_terminada" (se inicializan al empezar la partida)
      19.  00:A7B5                      ;~ 0,1,2,3 - nº puertas 1 arriba 1 derecha 1 abajo 1 izquierda
      20.  00:A7B5                      ;2º byte
      21.  00:A7B5                      ;~ 7 - oracion
      22.  00:A7B5                      ;~ 6 - cruz
      23.  00:A7B5                      ;~ 5 - agua bendita
      24.  00:A7B5                      ;~ 4 - armadura
      25.  00:A7B5                      ;~ 3 - planta
      26.  00:A7B5                      ;~ 2 - vida extra
      27.  00:A7B5                      ;~ 1 - ballesta
      28.  00:A7B5                      ;~ 0 - antorchas
      29.  00:A7B5                      
      30.  00:A7B5                      ;importante: el byte de la columna 15 indicará con 1 y 0 habitaciones por las que se haya pasado
      31.  00:A7B5                      ;cuando se inicie la partida todos se pondrán a 0
      32.  00:A7B5                      ;por ejemplo 01000000b se ha pasado por la hab. 2 de esa fila en el nivel que sea
      33.  00:A7B5                      
      34.  00:A7B5                      habitacion_actual:
      35.  00:A7B5  00                  	db  0		;habitación donde se encuentre el prota. Se mete en una varible par traer todos los datos de golpe y no buscarlos varias veces
      36.  00:A7B6                      habitacion_extras:
      37.  00:A7B6  00                  	db	0		;donde van las ayudas de una habitación
      38.  00:A7B7                      habitacion_actual_puntero;
      39.  00:A7B7  00 00               	dw	0		;puntero para actualizar la habitación cuando se maten todos los enemigos
      40.  00:A7B9                      is_habitacion_terminada:
      41.  00:A7B9  00                  	db	0		;variable para consultar más rápido si se ha pasado (<>0 si se ha pasado y 0 no se ha pasado)
      42.  00:A7BA                      
      43.  00:A7BA                      
      44.  00:A7BA                      habitaciones_juego:
      45.  00:A7BA                      habitaciones_nivel0:
      46.  00:A7BA                      			;0		0'		   1        1'         2         2'         3        3'        4         4'       5         5'        6         6'
      47.  00:A7BA                      	db 00000000b,00000000b,00000000b,00000000b,00000000b,00000000b,00001010b,10000000b,00000000b,00000000b,00000000b,00000000b,00000000b,00000000b,#00,#00 ;nivel 0 fila 1
      47.  00:A7BA  00 00 00 00 00 00 0A 80 00 00 00 00 00 00 00 00 
      48.  00:A7CA                      	db 00000000b,00000000b,00001100b,00000000b,00000101b,00000000b,00001111b,00000000b,00000101b,00000000b,00001001b,00000000b,00000000b,00000000b,#00,#00 
      48.  00:A7CA  00 00 0C 00 05 00 0F 00 05 00 09 00 00 00 00 00 
      49.  00:A7DA                      	db 00000000b,00000000b,00001010b,00000000b,00000000b,00000000b,00001010b,00000000b,00000000b,00000000b,00001010b,00000000b,00000000b,00000000b,#00,#00 
      49.  00:A7DA  00 00 0A 00 00 00 0A 00 00 00 0A 00 00 00 00 00 
      50.  00:A7EA                      	db 00000000b,00000000b,00001010b,00000000b,00000000b,00000000b,00000010b,00000000b,00000000b,00000000b,00001010b,00000000b,00000000b,00000000b,#00,#00 
      50.  00:A7EA  00 00 0A 00 00 00 02 00 00 00 0A 00 00 00 00 00 
      51.  00:A7FA                      	db 00000000b,00000000b,00001110b,00000000b,00000001b,00000000b,00000000b,00000000b,00000100b,00000000b,00001011b,00000000b,00000000b,00000000b,#00,#00 
      51.  00:A7FA  00 00 0E 00 01 00 00 00 04 00 0B 00 00 00 00 00 
      52.  00:A80A                      	db 00000000b,00000000b,00000110b,00000000b,00000101b,00000000b,00001101b,00000000b,00000101b,00000000b,00000011b,00000000b,00000000b,00000000b,#00,#00 
      52.  00:A80A  00 00 06 00 05 00 0D 00 05 00 03 00 00 00 00 00 
      53.  00:A81A                      	db 00000000b,00000000b,00000000b,00000000b,00000000b,00000000b,00001010b,10000000b,00000000b,00000000b,00000000b,00000000b,00000000b,00000000b,#00,#00 ;nivel 0 fila 7
      53.  00:A81A  00 00 00 00 00 00 0A 80 00 00 00 00 00 00 00 00 
      54.  00:A82A                      	
      55.  00:A82A                      habitaciones_nivel1:
      56.  00:A82A                      	db  00000000b,#C0,00000000b,#C0,00000000b,#00,00011010b,#00,00010000b,#C0,00000000b,#C0,00000000b,#C0,#00,#00 	;primera fila
      56.  00:A82A  00 C0 00 C0 00 00 1A 00 10 C0 00 C0 00 C0 00 00 
      57.  00:A83A                      	db  00000000b,#C0,00011100b,#C0,00011101b,#00,00011111b,#00,00011101b,#C0,00011001b,#C0,00000000b,#C0,#00,#00
      57.  00:A83A  00 C0 1C C0 1D 00 1F 00 1D C0 19 C0 00 C0 00 00 
      58.  00:A84A                      	db  00000000b,#C0,00011110b,#C0,00011111b,#00,00011111b,#00,00011111b,#C0,00011011b,#C0,00000000b,#C0,#00,#00
      58.  00:A84A  00 C0 1E C0 1F 00 1F 00 1F C0 1B C0 00 C0 00 00 
      59.  00:A85A                      	db  00000000b,#C0,00011010b,#C0,00011010b,#00,00010010b,#00,00011010b,#C0,00011010b,#C0,00000000b,#C0,#00,#00
      59.  00:A85A  00 C0 1A C0 1A 00 12 00 1A C0 1A C0 00 C0 00 00 
      60.  00:A86A                      	db  00000000b,#C0,00011010b,#C0,00011110b,#C0,00010101b,#C0,00011011b,#C0,00011010b,#C0,00000000b,#C0,#00,#00
      60.  00:A86A  00 C0 1A C0 1E C0 15 C0 1B C0 1A C0 00 C0 00 00 
      61.  00:A87A                      	db  00000000b,#C0,00010110b,#C0,00010111b,#C0,00011101b,#C0,00010111b,#C0,00010011b,#C0,00000000b,#C0,#00,#00
      61.  00:A87A  00 C0 16 C0 17 C0 1D C0 17 C0 13 C0 00 C0 00 00 
      62.  00:A88A                      	db  00000000b,#C0,00000000b,#C0,00000000b,#C0,00011010b,#C0,00011000b,#C0,00000000b,#C0,00000000b,#C0,#00,#00	;última fila
      62.  00:A88A  00 C0 00 C0 00 C0 1A C0 18 C0 00 C0 00 C0 00 00 
      63.  00:A89A                      	
      64.  00:A89A                      habitaciones_nivel2:
      65.  00:A89A                      	db  00000000b,#C0,00000000b,#C0,00000000b,#00,00011010b,#00,00010000b,#C0,00000000b,#C0,00000000b,#C0,#00,#00 	;primera fila
      65.  00:A89A  00 C0 00 C0 00 00 1A 00 10 C0 00 C0 00 C0 00 00 
      66.  00:A8AA                      	db  00000000b,#C0,00011100b,#C0,00011101b,#00,00011111b,#00,00011101b,#C0,00011001b,#C0,00000000b,#C0,#00,#00
      66.  00:A8AA  00 C0 1C C0 1D 00 1F 00 1D C0 19 C0 00 C0 00 00 
      67.  00:A8BA                      	db  00000000b,#C0,00011110b,#C0,00011111b,#00,00011111b,#00,00011111b,#C0,00011011b,#C0,00000000b,#C0,#00,#00
      67.  00:A8BA  00 C0 1E C0 1F 00 1F 00 1F C0 1B C0 00 C0 00 00 
      68.  00:A8CA                      	db  00000000b,#C0,00011010b,#C0,00011010b,#00,00010010b,#00,00011010b,#C0,00011010b,#C0,00000000b,#C0,#00,#00
      68.  00:A8CA  00 C0 1A C0 1A 00 12 00 1A C0 1A C0 00 C0 00 00 
      69.  00:A8DA                      	db  00000000b,#C0,00011010b,#C0,00011110b,#C0,00010101b,#C0,00011011b,#C0,00011010b,#C0,00000000b,#C0,#00,#00
      69.  00:A8DA  00 C0 1A C0 1E C0 15 C0 1B C0 1A C0 00 C0 00 00 
      70.  00:A8EA                      	db  00000000b,#C0,00010110b,#C0,00010111b,#C0,00011101b,#C0,00010111b,#C0,00010011b,#C0,00000000b,#C0,#00,#00
      70.  00:A8EA  00 C0 16 C0 17 C0 1D C0 17 C0 13 C0 00 C0 00 00 
      71.  00:A8FA                      	db  00000000b,#C0,00000000b,#C0,00000000b,#C0,00011010b,#C0,00011000b,#C0,00000000b,#C0,00000000b,#C0,#00,#00	;última fila
      71.  00:A8FA  00 C0 00 C0 00 C0 1A C0 18 C0 00 C0 00 C0 00 00 
      72.  00:A90A                      	
      73.  00:A90A                      habitaciones_nivel3:
      74.  00:A90A                      	db  00000000b,#C0,00000000b,#C0,00000000b,#00,00011010b,#00,00010000b,#C0,00000000b,#C0,00000000b,#C0,#00,#00 	;primera fila
      74.  00:A90A  00 C0 00 C0 00 00 1A 00 10 C0 00 C0 00 C0 00 00 
      75.  00:A91A                      	db  00000000b,#C0,00011100b,#C0,00011101b,#00,00011111b,#00,00011101b,#C0,00011001b,#C0,00000000b,#C0,#00,#00
      75.  00:A91A  00 C0 1C C0 1D 00 1F 00 1D C0 19 C0 00 C0 00 00 
      76.  00:A92A                      	db  00000000b,#C0,00011110b,#C0,00011111b,#00,00011111b,#00,00011111b,#C0,00011011b,#C0,00000000b,#C0,#00,#00
      76.  00:A92A  00 C0 1E C0 1F 00 1F 00 1F C0 1B C0 00 C0 00 00 
      77.  00:A93A                      	db  00000000b,#C0,00011010b,#C0,00011010b,#00,00010010b,#00,00011010b,#C0,00011010b,#C0,00000000b,#C0,#00,#00
      77.  00:A93A  00 C0 1A C0 1A 00 12 00 1A C0 1A C0 00 C0 00 00 
      78.  00:A94A                      	db  00000000b,#C0,00011010b,#C0,00011110b,#C0,00010101b,#C0,00011011b,#C0,00011010b,#C0,00000000b,#C0,#00,#00
      78.  00:A94A  00 C0 1A C0 1E C0 15 C0 1B C0 1A C0 00 C0 00 00 
      79.  00:A95A                      	db  00000000b,#C0,00010110b,#C0,00010111b,#C0,00011101b,#C0,00010111b,#C0,00010011b,#C0,00000000b,#C0,#00,#00
      79.  00:A95A  00 C0 16 C0 17 C0 1D C0 17 C0 13 C0 00 C0 00 00 
      80.  00:A96A                      	db  00000000b,#C0,00000000b,#C0,00000000b,#C0,00011010b,#C0,00011000b,#C0,00000000b,#C0,00000000b,#C0,#00,#00	;última fila
      80.  00:A96A  00 C0 00 C0 00 C0 1A C0 18 C0 00 C0 00 C0 00 00 
      81.  00:A97A                      	
      82.  00:A97A                      habitaciones_nivel4:
      83.  00:A97A                      	db  00000000b,#C0,00000000b,#C0,00000000b,#00,00011010b,#00,00010000b,#C0,00000000b,#C0,00000000b,#C0,#00,#00 	;primera fila
      83.  00:A97A  00 C0 00 C0 00 00 1A 00 10 C0 00 C0 00 C0 00 00 
      84.  00:A98A                      	db  00000000b,#C0,00011100b,#C0,00011101b,#00,00011111b,#00,00011101b,#C0,00011001b,#C0,00000000b,#C0,#00,#00
      84.  00:A98A  00 C0 1C C0 1D 00 1F 00 1D C0 19 C0 00 C0 00 00 
      85.  00:A99A                      	db  00000000b,#C0,00011110b,#C0,00011111b,#00,00011111b,#00,00011111b,#C0,00011011b,#C0,00000000b,#C0,#00,#00
      85.  00:A99A  00 C0 1E C0 1F 00 1F 00 1F C0 1B C0 00 C0 00 00 
      86.  00:A9AA                      	db  00000000b,#C0,00011010b,#C0,00011010b,#00,00010010b,#00,00011010b,#C0,00011010b,#C0,00000000b,#C0,#00,#00
      86.  00:A9AA  00 C0 1A C0 1A 00 12 00 1A C0 1A C0 00 C0 00 00 
      87.  00:A9BA                      	db  00000000b,#C0,00011010b,#C0,00011110b,#C0,00010101b,#C0,00011011b,#C0,00011010b,#C0,00000000b,#C0,#00,#00
      87.  00:A9BA  00 C0 1A C0 1E C0 15 C0 1B C0 1A C0 00 C0 00 00 
      88.  00:A9CA                      	db  00000000b,#C0,00010110b,#C0,00010111b,#C0,00011101b,#C0,00010111b,#C0,00010011b,#C0,00000000b,#C0,#00,#00
      88.  00:A9CA  00 C0 16 C0 17 C0 1D C0 17 C0 13 C0 00 C0 00 00 
      89.  00:A9DA                      	db  00000000b,#C0,00000000b,#C0,00000000b,#C0,00011010b,#C0,00011000b,#C0,00000000b,#C0,00000000b,#C0,#00,#00	;última fila
      89.  00:A9DA  00 C0 00 C0 00 C0 1A C0 18 C0 00 C0 00 C0 00 00 
      90.  00:A9EA                      	
      91.  00:A9EA                      habitaciones_nivel5:
      92.  00:A9EA                      	db  00000000b,#C0,00000000b,#C0,00000000b,#00,00011010b,#00,00010000b,#C0,00000000b,#C0,00000000b,#C0,#00,#00 	;primera fila
      92.  00:A9EA  00 C0 00 C0 00 00 1A 00 10 C0 00 C0 00 C0 00 00 
      93.  00:A9FA                      	db  00000000b,#C0,00011100b,#C0,00011101b,#00,00011111b,#00,00011101b,#C0,00011001b,#C0,00000000b,#C0,#00,#00
      93.  00:A9FA  00 C0 1C C0 1D 00 1F 00 1D C0 19 C0 00 C0 00 00 
      94.  00:AA0A                      	db  00000000b,#C0,00011110b,#C0,00011111b,#00,00011111b,#00,00011111b,#C0,00011011b,#C0,00000000b,#C0,#00,#00
      94.  00:AA0A  00 C0 1E C0 1F 00 1F 00 1F C0 1B C0 00 C0 00 00 
      95.  00:AA1A                      	db  00000000b,#C0,00011010b,#C0,00011010b,#00,00010010b,#00,00011010b,#C0,00011010b,#C0,00000000b,#C0,#00,#00
      95.  00:AA1A  00 C0 1A C0 1A 00 12 00 1A C0 1A C0 00 C0 00 00 
      96.  00:AA2A                      	db  00000000b,#C0,00011010b,#C0,00011110b,#C0,00010101b,#C0,00011011b,#C0,00011010b,#C0,00000000b,#C0,#00,#00
      96.  00:AA2A  00 C0 1A C0 1E C0 15 C0 1B C0 1A C0 00 C0 00 00 
      97.  00:AA3A                      	db  00000000b,#C0,00010110b,#C0,00010111b,#C0,00011101b,#C0,00010111b,#C0,00010011b,#C0,00000000b,#C0,#00,#00
      97.  00:AA3A  00 C0 16 C0 17 C0 1D C0 17 C0 13 C0 00 C0 00 00 
      98.  00:AA4A                      	db  00000000b,#C0,00000000b,#C0,00000000b,#C0,00011010b,#C0,00011000b,#C0,00000000b,#C0,00000000b,#C0,#00,#00	;última fila
      98.  00:AA4A  00 C0 00 C0 00 C0 1A C0 18 C0 00 C0 00 C0 00 00 
      99.  00:AA5A                      	
     100.  00:AA5A                      habitaciones_nivel6:
     101.  00:AA5A                      	db  00000000b,#C0,00000000b,#C0,00000000b,#00,00011010b,#00,00010000b,#C0,00000000b,#C0,00000000b,#C0,#00,#00 	;primera fila
     101.  00:AA5A  00 C0 00 C0 00 00 1A 00 10 C0 00 C0 00 C0 00 00 
     102.  00:AA6A                      	db  00000000b,#C0,00011100b,#C0,00011101b,#00,00011111b,#00,00011101b,#C0,00011001b,#C0,00000000b,#C0,#00,#00
     102.  00:AA6A  00 C0 1C C0 1D 00 1F 00 1D C0 19 C0 00 C0 00 00 
     103.  00:AA7A                      	db  00000000b,#C0,00011110b,#C0,00011111b,#00,00011111b,#00,00011111b,#C0,00011011b,#C0,00000000b,#C0,#00,#00
     103.  00:AA7A  00 C0 1E C0 1F 00 1F 00 1F C0 1B C0 00 C0 00 00 
     104.  00:AA8A                      	db  00000000b,#C0,00011010b,#C0,00011010b,#00,00010010b,#00,00011010b,#C0,00011010b,#C0,00000000b,#C0,#00,#00
     104.  00:AA8A  00 C0 1A C0 1A 00 12 00 1A C0 1A C0 00 C0 00 00 
     105.  00:AA9A                      	db  00000000b,#C0,00011010b,#C0,00011110b,#C0,00010101b,#C0,00011011b,#C0,00011010b,#C0,00000000b,#C0,#00,#00
     105.  00:AA9A  00 C0 1A C0 1E C0 15 C0 1B C0 1A C0 00 C0 00 00 
     106.  00:AAAA                      	db  00000000b,#C0,00010110b,#C0,00010111b,#C0,00011101b,#C0,00010111b,#C0,00010011b,#C0,00000000b,#C0,#00,#00
     106.  00:AAAA  00 C0 16 C0 17 C0 1D C0 17 C0 13 C0 00 C0 00 00 
     107.  00:AABA                      	db  00000000b,#C0,00000000b,#C0,00000000b,#C0,00011010b,#C0,00011000b,#C0,00000000b,#C0,00000000b,#C0,#00,#00	;última fila
     107.  00:AABA  00 C0 00 C0 00 C0 1A C0 18 C0 00 C0 00 C0 00 00 
     108.  00:AACA                      
     109.  00:AACA                      
     283   00:AACA                      	
     284   00:AACA                      	include "variables.asm"
       1.  00:AACA                      ;;=====================================================
       2.  00:AACA                      ;;DEFINICIÓN DE VARIABLES
       3.  00:AACA                      ;;=====================================================
       4.  00:AACA                      
       5.  00:AACA                      ;Colores base de la pantalla
       6.  00:AACA                      color_base:
       7.  00:AACA  01 01 01            			DB		COLNEGRO,COLNEGRO,COLNEGRO	
       8.  00:AACD                      ;colores de pantalla cuando se tira bomba
       9.  00:AACD                      color_bomba1:
      10.  00:AACD  08 08 08            			DB		COLROJO,COLROJO,COLROJO
      11.  00:AAD0                      color_bomba2:
      12.  00:AAD0  06 06 06            			DB		COLROJOOSC,COLROJOOSC,COLROJOOSC
      13.  00:AAD3                      
      14.  00:AAD3                      ;definicion de variable del prota usando la estructura del punto de mira
      15.  00:AAD3                      prota:		ESTRUCTURA_PUNTOMIRA
      15.  00:AAD3  78 6C 00 00 00 05 00 00 00 00 00 00 00 00 00 00 
      16.  00:AAE3                      ;variables globales del prota
      17.  00:AAE3                      prota_nivel:			;nivel del castillo donde está 0-6
      18.  00:AAE3  00                  			DB		0
      19.  00:AAE4                      prota_vidas:
      20.  00:AAE4  00                  			DB		0
      21.  00:AAE5                      prota_reliquias:
      22.  00:AAE5  03                  			DB		3
      23.  00:AAE6                      prota_pos_mapx:
      24.  00:AAE6  00                  			DB		0	;pos columna
      25.  00:AAE7                      prota_pos_mapy:
      26.  00:AAE7  00                  			DB		0	;pos fila
      27.  00:AAE8                      prota_energia:
      28.  00:AAE8  FA                  			DB		250
      29.  00:AAE9                      
      30.  00:AAE9                      ;array para pintar de golpe el marcador de vidas
      31.  00:AAE9                      array_aux_vidas: 		
      32.  00:AAE9                      			DB		0,0,0,0,0,0,0,0
      32.  00:AAE9  00 00 00 00 00 00 00 00 
      33.  00:AAF1                      
      34.  00:AAF1                      ;array para pintar de golpe el marcador de reliquias
      35.  00:AAF1                      array_aux_reliquias:	
      36.  00:AAF1                      			DB		0,0,0,0,0,0,0,0
      36.  00:AAF1  00 00 00 00 00 00 00 00 
      37.  00:AAF9                      
      38.  00:AAF9                      array_aux_energia:					;array para pintar de golpe el marcador de energía
      39.  00:AAF9                      			DB		16,0,0,0,0,0,0 	;el 16 primero es porque siempre estará pintado el cuadro primero rojo
      39.  00:AAF9  10 00 00 00 00 00 00 
      40.  00:AB00                      ultimo_pos_array_aux_energia:
      41.  00:AB00  00                  			DB		0				;el array completo es de 8 pero para posicionar sin niecesidad de cálculos  etiqueto este aparte
      42.  00:AB01                      			
      43.  00:AB01                      array_aux_mapa_limpiar:	;es por facilitar el reseteo del mapa (pinto 7 lineas en negro con bios) la otra opción es más larga en código y complicada aunque más rápida
      44.  00:AB01                      			DB		0,0,0,0,0,0,0
      44.  00:AB01  00 00 00 00 00 00 00 
      45.  00:AB08                      elemento_pintar_mapa:
      46.  00:AB08  00                  			DB		0	;TILEPROTAM = 19, ;TILEGRISM = 9
      47.  00:AB09                      			
      48.  00:AB09                      ;; nota importante: cada vez que se cambie de nivel se actualizará el contenido
      49.  00:AB09                      
      50.  00:AB09                      
      51.  00:AB09                      
      52.  00:AB09  00 (7)              antorchas:			DS		ESTRUCTURA_ANTORCHA
      53.  00:AB10  C5 C6 C7            array_antorcha:				DB	197,198,199	;fuego + madera1 + madera2
      54.  00:AB13                      
      55.  00:AB13  00 (7)              esqueletos:			DS		ESTRUCTURA_ESQUELETO
      56.  00:AB1A                      array_esqueleto:			DB	194, 0, 195, 160, 164, 161, 0, 163, 0, 193, 162, 192
      56.  00:AB1A  C2 00 C3 A0 A4 A1 00 A3 00 C1 A2 C0 
      57.  00:AB26  A4 A5 A4 A6         lista_escenas_calavera:		DB	164, 165, 164, 166
      58.  00:AB2A                      
      59.  00:AB2A                      
      60.  00:AB2A                      
      61.  00:AB2A                      
      62.  00:AB2A                      ;array de 4 bytes x 32 sprites posibles en pantalla que sobreescribirá la tabla de sprites actualizando VRAM
      63.  00:AB2A                      array_sprites:
      64.  00:AB2A  00 (8)              array_sprites_pm:				DS	2 * 4
      65.  00:AB32  00 (120)            array_sprites_enem:				DS	30 * 4
      66.  00:ABAA  00 (140)            lista_enemigos:					DS	10 * ESTRUCTURA_ENEMIGO
      67.  00:AC36                      ; puntero al array a pintar en VRAM
      68.  00:AC36  00 00               puntero_array_atrib_array_VRAM: DW	0	;ARRAYSPTRIES + 8
      69.  00:AC38                      
      70.  00:AC38                      
      71.  00:AC38                      
      72.  00:AC38                      
      73.  00:AC38                      
     285   00:AC38                      	
     286   00:AC38                      ;;=====================================================
     287   00:AC38                      ;;DEFINICIÓN DE PANTALLAS
     288   00:AC38                      ;;=====================================================		
     289   00:AC38                      	include "pantallas.asm"
       1.  00:AC38                      ;;=====================================================
       2.  00:AC38                      ;;DEFINICIÓN DE PANTALLAS
       3.  00:AC38                      ;;=====================================================		
       4.  00:AC38                      
       5.  00:AC38                      ; bancos 1 y 2 y de pantalla 1 
       6.  00:AC38                      ; se usa un banco común (en este caso el banco 1)
       7.  00:AC38                      ; el mapa afecta al banco 1 y 2
       8.  00:AC38  (022A)              tiles_patrones_nivel0:	incbin "pantallas/nivel0.bank1.til.bin.chr.plet5"
       9.  00:AE62  (006B)              tiles_color_nivel0:		incbin "pantallas/nivel0.bank1.til.bin.clr.plet5"
      10.  00:AECD  (0035)              tiles_mapa_nivel0:		incbin "pantallas/nivel0.bank01.map.bin.plet5"
      11.  00:AF02                      
      12.  00:AF02  (01B5)              tiles_patrones_nivel1:	incbin "pantallas/nivel1.bank1.til.bin.chr.plet5"
      13.  00:B0B7  (0047)              tiles_color_nivel1:		incbin "pantallas/nivel1.bank1.til.bin.clr.plet5"
      14.  00:B0FE  (0035)              tiles_mapa_nivel1:		incbin "pantallas/nivel1.bank01.map.bin.plet5"
      15.  00:B133                      
      16.  00:B133  (01B5)              tiles_patrones_nivel2:	incbin "pantallas/nivel2.bank1.til.bin.chr.plet5"
      17.  00:B2E8  (0047)              tiles_color_nivel2:		incbin "pantallas/nivel2.bank1.til.bin.clr.plet5"
      18.  00:B32F  (0035)              tiles_mapa_nivel2:		incbin "pantallas/nivel2.bank01.map.bin.plet5"
      19.  00:B364                      
      20.  00:B364  (01B5)              tiles_patrones_nivel3:	incbin "pantallas/nivel3.bank1.til.bin.chr.plet5"
      21.  00:B519  (0047)              tiles_color_nivel3:		incbin "pantallas/nivel3.bank1.til.bin.clr.plet5"
      22.  00:B560  (0035)              tiles_mapa_nivel3:		incbin "pantallas/nivel3.bank01.map.bin.plet5"
      23.  00:B595                      
      24.  00:B595  (01B5)              tiles_patrones_nivel4:	incbin "pantallas/nivel4.bank1.til.bin.chr.plet5"
      25.  00:B74A  (0047)              tiles_color_nivel4:		incbin "pantallas/nivel4.bank1.til.bin.clr.plet5"
      26.  00:B791  (0035)              tiles_mapa_nivel4:		incbin "pantallas/nivel4.bank01.map.bin.plet5"
      27.  00:B7C6                      
      28.  00:B7C6  (01B5)              tiles_patrones_nivel5:	incbin "pantallas/nivel5.bank1.til.bin.chr.plet5"
      29.  00:B97B  (0047)              tiles_color_nivel5:		incbin "pantallas/nivel5.bank1.til.bin.clr.plet5"
      30.  00:B9C2  (0035)              tiles_mapa_nivel5:		incbin "pantallas/nivel5.bank01.map.bin.plet5"
      31.  00:B9F7                      
      32.  00:B9F7  (01B5)              tiles_patrones_nivel6:	incbin "pantallas/nivel6.bank1.til.bin.chr.plet5"
      33.  00:BBAC  (0047)              tiles_color_nivel6:		incbin "pantallas/nivel6.bank1.til.bin.clr.plet5"
      34.  00:BBF3  (0035)              tiles_mapa_nivel6:		incbin "pantallas/nivel6.bank01.map.bin.plet5"
      35.  00:BC28                      
      36.  00:BC28                      ; 3º banco que es la parte de puntos, vidas, mapas, etc... es común
      37.  00:BC28  (014C)              tiles_patrones_marcador:	incbin "pantallas/marcador.til.bin.chr.plet5"
      38.  00:BD74  (0035)              tiles_color_marcador:		incbin "pantallas/marcador.til.bin.clr.plet5"
      39.  00:BDA9  (0062)              tiles_mapa_marcador:		incbin "pantallas/marcador.map.bin.plet5"
      40.  00:BE0B                      
      41.  00:BE0B                      ;NOTA: FALTARÍAN PANTALLAS ESPECIALES (POR DEFINIR)
      42.  00:BE0B                      ; INICIO
      43.  00:BE0B                      ; GAME OVER
      44.  00:BE0B                      ; HUIDA
      45.  00:BE0B                      ; 2 FINAL BUENO
      46.  00:BE0B                      ; 1 FINAL MALO
     290   00:BE0B                      
     291   00:BE0B                      END:

    LABELS
-------------------------------------------------
00:000000D8 X GTTRIG
00:000000D5 X GTSTCK
00:0000F3DB   CLIKSW
00:0000013E X RDVDP
00:00000047   WRTVDP
00:0000005C   LDIRVM
00:00000059 X LDIRMV
00:0000005F   CHGMOD
00:00000041 X DISSCR
00:00000044 X ENASCR
00:00000062   CHGCLR
00:0000F3E9   FORCLR
00:0000F3EA   BAKCLR
00:0000F3EB   BDRCLR
00:000000C3   CLS
00:0000F3DF X RG0SAV
00:0000F3E0   RG1SAV
00:0000F3E1 X RG2SAV
00:0000F3E2 X RG3SAV
00:0000F3E3 X RG4SAV
00:0000F3E4 X RG5SAV
00:0000F3E5 X RG6SAV
00:0000F3E6 X RG7SAV
00:0000F3E7 X STATFL
00:00000099   REGEST
00:00000098   REGESCVDP
00:000000A0   PSG_A
00:000000A1   PSG_W
00:000000A2   PSG_R
00:00000000   CHRTBL
00:00001800   TILMAP
00:00001B00   SPRART
00:00002000   CLRTBL
00:00003800   SPRTBL
00:00000001   SI
00:00000000 X NO
00:00000004   LIMCADENCIA
00:00000000 X COLTRASP
00:00000001   COLNEGRO
00:00000002 X COLVERDE
00:00000003 X COLVERCLA
00:00000004 X COLAZULOSC
00:00000005 X COLAZULLA
00:00000006   COLROJOOSC
00:00000007 X COLCYAN
00:00000008   COLROJO
00:00000009 X COLROJOCLA
00:0000000A X COLAMAROSC
00:0000000B X COLAMARCLA
00:0000000C X COLVERDOSC
00:0000000D X COLMAGENTA
00:0000000E X COLGRIS
00:0000000F   COLBLANCO
00:000002F8   POSMAPLIN1
00:000002D8   POSMAPLIN2
00:000002B8   POSMAPLIN3
00:00000298   POSMAPLIN4
00:00000278   POSMAPLIN5
00:00000258   POSMAPLIN6
00:00000238   POSMAPLIN7
00:0000000D   POSCARAMAP
00:00000248   POSVIDAS
00:00000011   POSRELIMAP
00:000002C8   POSRELIQ
00:00000288   POSENERG
00:000002B4   POSNIVEL
00:00000238   POSMAPA
00:000001EE   POSPUERABAJ
00:0000008E   POSPUERARRI
00:000000FC   POSPUERDERE
00:000000E1   POSPUERIZQU
00:0000006C   POSESCALERA
00:00000146   POSORACION
00:000000A7 X POSCRUZ
00:000000AB X POSAGUA
00:000000AF X POSARMAD
00:000000B3 X POSPLANTA
00:000000B7 X POSVIDAEXT
00:000000BB X POSBALLESTA
00:00000070 X POSAYUDASY
00:00000038   POSORACIONX
00:00000058   POSORACIONY
00:00000040 X POSCRUZX
00:00000060 X POSAGUAX
00:00000080 X POSARMADX
00:000000A0 X POSPLANTAX
00:000000C0 X POSVIDAEXTX
00:000000E0 X POSBALLESTAX
00:00000002   ALTOAYUDA
00:00000002   ANCHOAYUDA
00:00000008   RADIOAYUDAX
00:00000008   RADIOAYUDAY
00:00000078 X POSXPM
00:0000006C X POSYPM
00:00000000   INACTIVA
00:00000001   ACTIVA
00:00000001   HABTERMIN
00:00000088   POSANTOR1
00:00000097   POSANTOR2
00:000000C4   MAPLLAMA1
00:000000C5   MAPLLAMA2
00:000000FF   RESETLLAMA
00:00000088   POSESQUEL1
00:00000095   POSESQUEL2
00:000000A9   POSCALAVE1
00:000000B6   POSCALAVE2
00:00000019   RESETESQUEL
00:00000004   RESETESCENAESQUEL
00:00000013   TILEPROTAM
00:00000009   TILEGRISM
00:00000010   TILEMAPROJO
00:0000000F   TILEMAPAMAR
00:0000000E   TILEMAPVERD
00:00000008   NMAXVIDREL
00:00000007   NHABNIVEL
00:000000F8 X MAXENERGIA
00:000000D9   TILEENERG8
00:000000BA   TILEENERG7
00:0000009B   TILEENERG6
00:0000007C   TILEENERG5
00:0000005D   TILEENERG4
00:0000003E   TILEENERG3
00:0000001F   TILEENERG2
00:00000000   TILENEGRO
00:00000000 X LIMPANTIZQ
00:000000FF   LIMPANTDER
00:00000000 X LIMPANTARR
00:00000080   LIMPANTABA
00:00000006 X BASEMAPY
00:00000003 X BASEMAPX
00:0000FD9A X H.KEYI
00:0000FD9F   H.TIMI
00:0000F000   PT3_SETUP
00:0000F001   PT3_MODADDR
00:0000F003   PT3_CrPsPtr
00:0000F005   PT3_SAMPTRS
00:0000F007   PT3_OrnPtrs
00:0000F009   PT3_PDSP
00:0000F00B   PT3_CSP
00:0000F00D   PT3_PSP
00:0000F00F   PT3_PrNote
00:0000F010   PT3_PrSlide
00:0000F012   PT3_AdInPtA
00:0000F014   PT3_AdInPtB
00:0000F016   PT3_AdInPtC
00:0000F018   PT3_LPosPtr
00:0000F01A   PT3_PatsPtr
00:0000F01C   PT3_Delay
00:0000F01D   PT3_AddToEn
00:0000F01E   PT3_Env_Del
00:0000F01F   PT3_ESldAdd
00:0000F021   PT3_NTL3
00:0000F023   VARS
00:0000F023   ChanA
00:0000F040   ChanB
00:0000F05D   ChanC
00:0000F07A   DelyCnt
00:0000F07B   CurESld
00:0000F07D   CurEDel
00:0000F07E   Ns_Base_AddToNs
00:0000F07E   Ns_Base
00:0000F07F   AddToNs
00:0000F080   NT_
00:0000F140   AYREGS
00:0000F140   VT_
00:0000F14E   EnvBase
00:0000F150   VAR0END
00:0000F150   T1_
00:0000F150   T_NEW_1
00:0000F150   T_OLD_1
00:0000F168   T_OLD_2
00:0000F180   T_NEW_3
00:0000F180   T_OLD_3
00:0000F182   T_OLD_0
00:0000F182   T_NEW_0
00:0000F19A   T_NEW_2
00:0000F240   ayFX_MODE
00:0000F241   ayFX_BANK
00:0000F243   ayFX_PRIORITY
00:0000F244   ayFX_POINTER
00:0000F246   ayFX_TONE
00:0000F248   ayFX_NOISE
00:0000F249   ayFX_VOLUME
00:0000F24A   ayFX_CHANNEL
00:00008000   START
00:0000803B   loop_principal
00:0000804B X fin_programa_principal
00:0000804B   check_colisiones_objetos
00:00008057   check_colisiones_objetos.habitacion_no_terminada
00:00008062   check_colisiones_objetos.habitacion_sin_ayudas
00:00008062 X fin_check_colisiones_objetos
00:00008064 X check_colision_ayudas
00:00008080   fin_check_colision_ayudas
00:00008081   check_colision_ayuda
00:00008081 X check_colision_ayuda.deteccioncolision_paso1
00:00008092   check_colision_ayuda.deteccioncolision_paso2
00:0000809A   check_colision_ayuda.deteccioncolision_paso3
00:000080A7   check_colision_ayuda.deteccioncolision_paso4
00:000080AF   check_colision_ayuda.deteccioncolision_paso5
00:000080B1 X fin_check_colision_ayuda
00:000080B2   inicializa_variables_pruebas
00:000080D7 X fin_inicializa_variables_pruebas
00:000080D8   inicializa_niveles
00:000080E6   inicializa_niveles.inicia_nivel_0
00:000080F0 X inicializa_niveles.si_tiene_ayuda_nivel0
00:000080F2   inicializa_niveles.no_tiene_ayuda_nivel0
00:000080F4 X inicializa_niveles.fin_tiene_ayuda_nivel0
00:00008108   inicializa_niveles.inicia_nivel_1
00:00008113 X inicializa_niveles.si_tiene_ayuda_nivel1
00:00008118   inicializa_niveles.no_tiene_ayuda_nivel1
00:0000811A   inicializa_niveles.fin_tiene_ayuda_nivel1
00:0000812E   inicializa_niveles.inicia_nivel_2
00:00008139 X inicializa_niveles.si_tiene_ayuda_nivel2
00:0000813E   inicializa_niveles.no_tiene_ayuda_nivel2
00:00008140   inicializa_niveles.fin_tiene_ayuda_nivel2
00:00008154   inicializa_niveles.inicia_nivel_3
00:0000815F X inicializa_niveles.si_tiene_ayuda_nivel3
00:00008164   inicializa_niveles.no_tiene_ayuda_nivel3
00:00008166   inicializa_niveles.fin_tiene_ayuda_nivel3
00:0000817A   inicializa_niveles.inicia_nivel_4
00:00008185 X inicializa_niveles.si_tiene_ayuda_nivel4
00:0000818A   inicializa_niveles.no_tiene_ayuda_nivel4
00:0000818C   inicializa_niveles.fin_tiene_ayuda_nivel4
00:000081A0   inicializa_niveles.inicia_nivel_5
00:000081AB X inicializa_niveles.si_tiene_ayuda_nivel5
00:000081B0   inicializa_niveles.no_tiene_ayuda_nivel5
00:000081B2   inicializa_niveles.fin_tiene_ayuda_nivel5
00:000081C6   inicializa_niveles.inicia_nivel_6
00:000081D1 X inicializa_niveles.si_tiene_ayuda_nivel6
00:000081D6   inicializa_niveles.no_tiene_ayuda_nivel6
00:000081D8   inicializa_niveles.fin_tiene_ayuda_nivel6
00:000081E4 X fin_iniciliza_niveles
00:000081E5   actualiza_marcador_vidas
00:000081EA   loop_marcador_caras_negro
00:000081EF X fin_loop_marcador_caras_negro
00:000081F8   loop_marcador_caras
00:000081FD X fin_loop_marcador_caras
00:000081FD X fin_actualiza_marcador_vidas
00:000081FE   actualiza_buffer_reliquias
00:00008204   loop_buffer_reliquias_negro
00:00008211   loop_buffer_reliquias
00:00008216 X fin_actualiza_buffer_reliquias
00:00008217   localiza_info_habitacion
00:0000821B X localiza_info_habitacion.situo_columna
00:00008224 X localiza_info_habitacion.situo_fila
00:0000822D   localiza_info_habitacion.loop_suma_fila
00:00008235   localiza_info_habitacion.situo_nivel
00:00008244   localiza_info_habitacion.loop_suma_nivel
00:00008249   localiza_info_habitacion.actualiza_variable_habitacion
00:0000825F X localiza_info_habitacion.no_terminada
00:00008266   localiza_info_habitacion.si_terminada
00:0000826B   localiza_info_habitacion.fin_esta_terminada
00:00008273 X localiza_info_habitacion.si_mostrar_ayuda_activa
00:0000827B   localiza_info_habitacion.no_mostrar_ayuda_activa
00:0000827F   localiza_info_habitacion.fin_mostrar_ayuda_activa
00:00008285 X fin_localiza_info_habitacion
00:00008286   terminada_habitacion_recorrida
00:0000829A X fin_terminada_habitacion_recorrida
00:0000829B   entra_habitacion
00:000082AA X fin_entra_habitacion
00:000082AA   pinta_heroe_mapa
00:000082B2 X fin_pinta_heroe_mapa
00:000082B2   pinta_blanco_mapa
00:000082BA X fin_pinta_blanco_mapa
00:000082BA   cambio_nivel
00:000082C0 X fin_cabio_nivel
00:000082C1   suma_A_BC
00:000082C6 X fin_suma_A_BC
00:000082C7   suma_A_HL
00:000082CC X fin_suma_A_HL
00:000082CD   test_OK
00:000082E0 X fin_test_OK
00:000082E1   color_pantalla
00:000082F2 X fin_color_pantalla
00:000082F2   sub_preparapantalla
00:000082F2 X elimina_clic
00:000082F6 X fin_elimina_clic
00:000082F6 X limpia_pantalla
00:000082FA X fin_limpia_pantalla
00:00008300 X screen2
00:00008305 X sprites_16_16
00:00008313 X fin_sub_preparapantalla
00:00008313   pinta_pantalla_completa
00:00008319 X fin_pinta_pantalla_completa
00:0000831A   pinta_parte_superior_pantalla
00:0000834B   pinta_parte_superior_pantalla.carga_nivel_0
00:00008366   pinta_parte_superior_pantalla.carga_nivel_1
00:00008381   pinta_parte_superior_pantalla.carga_nivel_2
00:0000839C   pinta_parte_superior_pantalla.carga_nivel_3
00:000083B7   pinta_parte_superior_pantalla.carga_nivel_4
00:000083D2   pinta_parte_superior_pantalla.carga_nivel_5
00:000083ED   pinta_parte_superior_pantalla.carga_nivel_6
00:00008405   pinta_parte_superior_pantalla.fin_carga_niveles
00:00008432 X fin_pinta_parte_superior_pantalla
00:00008432   tiles_patrones
00:00008434   tiles_colores
00:00008436   tiles_mapa
00:00008438   pinta_parte_inferior_pantalla
00:00008453 X fin_pinta_parte_inferior_pantalla
00:00008453   pinta_vidas
00:00008462 X fin_pinta_vidas
00:00008462   pinta_reliquias
00:00008471 X fin_pinta_reliquias
00:00008471   pinta_nivel
00:0000847D X fin_pinta_nivel
00:0000847D   pinta_tile_suelto
00:0000848A X fin_pinta_tile_suelto
00:0000848B   mira_pinta_energia
00:00008491 X pinta_ener
00:00008491 X pinta_ener_tile_8
00:0000849D   pinta_ener_tile_8_negro
00:0000849E   pinta_ener_tile_7
00:000084A8   pinta_ener_tile_7_negro
00:000084A9   pinta_ener_tile_6
00:000084B3   pinta_ener_tile_6_negro
00:000084B4   pinta_ener_tile_5
00:000084BE   pinta_ener_tile_5_negro
00:000084BF   pinta_ener_tile_4
00:000084C9   pinta_ener_tile_4_negro
00:000084CA   pinta_ener_tile_3
00:000084D4   pinta_ener_tile_3_negro
00:000084D5   pinta_ener_tile_2
00:000084DF   pinta_ener_tile_2_negro
00:000084E0   fin_mira_pinta_energia
00:000084E2   pinta_energia
00:000084F1 X fin_pinta_energia
00:000084F1   borra_mapa
00:00008547 X fin_borra_mapa
00:00008548   posiciona_en_mapa
00:0000854B X posiciona_en_mapa.sumar_fila
00:00008575 X posiciona_en_mapa.fila_0
00:0000857C   posiciona_en_mapa.fila_1
00:00008583   posiciona_en_mapa.fila_2
00:0000858A   posiciona_en_mapa.fila_3
00:00008591   posiciona_en_mapa.fila_4
00:00008598   posiciona_en_mapa.fila_5
00:0000859F X posiciona_en_mapa.fila_6
00:0000859F   posiciona_en_mapa.sumar_columna
00:000085B5   pinta_pos_mapa_vacio
00:000085B7   fin_pinta_pos_mapa
00:000085BA X fin_posiciona_en_mapa
00:000085BA   efecto_imagen_tira_reliquia
00:000085BD   efecto_imagen_tira_reliquia.parpadea_fondo
00:000085D4 X fin_efecto_imagen_tira_reliquia
00:000085D4   pinta_array
00:000085EF   pinta_array.pa_pinta_fila
00:000085F0   pinta_array.pa_pinta_columnas
00:00008613 X fin_pinta_array
00:00008614   wordaux1
00:00008616   wordaux2
00:00008618   byteaux1
00:00008619   byteaux2
00:0000861A   inicializa_antorchas
00:0000863B X fin_inicializa_antorchas
00:0000863C   inicializa_esqueletos
00:0000865D X fin_inicializa_esqueletos
00:0000865E   pinta_extra_fondo
00:00008662 X pinta_extra_fondo.examina_sihay_antorchas
00:00008671   pinta_extra_fondo.hayantorchas
00:0000869A   pinta_extra_fondo.examina_sihay_esqueletos
00:000086AB   pinta_extra_fondo.hayesqueletos
00:000086D4 X fin_pinta_extra_fondo
00:000086D5   actualiza_elementos_fondo
00:000086D5 X actualiza_elementos_fondo.examina_antorchas
00:000086E3   actualiza_elementos_fondo.examina_esqueletos
00:000086EF X fin_actualiza_elementos_fondo
00:000086EF   flip_llamas_antorchas
00:00008708 X flip_llamas_antorchas.llama_impar
00:00008729   flip_llamas_antorchas.llama_par
00:00008748   fin_flip_llamas_antorchas
00:0000874C   flip_calavera_esqueletos
00:00008779 X fin_flip_calavera_esqueletos
00:00008779   var_aux_calavera
00:0000877A   actualiza_escena_calavera
00:00008786   actualiza_escena_calavera.decrementa_escenas
00:00008787 X actualiza_escena_calavera.fin_consulta_escena
00:00008795 X fin_actualiza_escena_calavera
00:00008796   array_puerta_arriba
00:000087AA   array_puerta_derecha
00:000087BF   array_puerta_abajo
00:000087C3   array_puerta_izquierda
00:000087D8   array_escalera
00:00008808 X lista_puertas
00:00008808   puerta_arriba
00:00008815   puerta_derecha
00:00008822   puerta_abajo
00:0000882F   puerta_izquierda
00:0000883C   puerta_escalera
00:00008849 X datos_puertas
00:00008849   datos_puerta_escalera
00:00008856   datos_puerta_arriba
00:00008863   datos_puerta_derecha
00:00008870   datos_puerta_abajo
00:0000887D   datos_puerta_izquierda
00:0000888A   inicializa_puertas
00:000088BD X fin_inicializa_puertas
00:000088BE   carga_datos_puerta
00:000088C3 X fin_carga_datos_puerta
00:000088C4   accion_puerta_arriba
00:000088D0 X accion_puerta_arriba.si_cambia_nivel
00:000088E1   accion_puerta_arriba.no_cambia_nivel
00:000088E4   accion_puerta_arriba.fin_cambia_nivel
00:000088E7 X fin_accion_puerta_arriba
00:000088E7   accion_puerta_derecha
00:000088F4 X fin_accion_puerta_derecha
00:000088F4   accion_puerta_abajo
00:000088FF X accion_puerta_abajo.si_cambia_nivel
00:00008911   accion_puerta_abajo.no_cambia_nivel
00:00008914   accion_puerta_abajo.fin_cambia_nivel
00:00008917 X fin_accion_puerta_abajo
00:00008917   accion_puerta_izquierda
00:00008924 X fin_accion_puerta_izquierda
00:00008924   pinta_puertas
00:0000893D   pinta_puertas.fin_puerta_arriba
00:00008950   pinta_puertas.fin_puerta_derecha
00:00008963   pinta_puertas.fin_puerta_abajo
00:00008976   fin_pinta_puertas
00:00008977   pinta_puerta_aba
00:00008981 X fin_pinta_puerta_aba
00:00008981   pinta_puerta_arr
00:00008989 X pinta_puerta_arr.pinta_puerta_escalera
00:00008990   pinta_puerta_arr.pinta_puerta_normal
00:00008994   pinta_puerta_arr.fin_si
00:0000899A X fin_pinta_puerta_arr
00:0000899A   pinta_puerta_der
00:000089A4 X fin_pinta_puerta_der
00:000089A4   pinta_puerta_izq
00:000089AE X fin_pinta_puerta_izq
00:000089AE   actualiza_variables_pinta_array
00:000089CC X fin_actualiza_variables_pinta_array
00:000089CD   check_colisiones_puertas
00:000089CD X check_colisiones_puertas.examina_puerta_arriba
00:000089E3   check_colisiones_puertas.examina_puerta_derecha
00:000089F9   check_colisiones_puertas.examina_puerta_abajo
00:00008A0F   check_colisiones_puertas.examina_puerta_izquierda
00:00008A20   check_colisiones_puertas.ejecuta_accion_y_sale
00:00008A2B   fin_check_colisiones_puertas
00:00008A2C   check_colision_puerta
00:00008A2C X check_colision_puerta.deteccioncolision_paso1
00:00008A3D   check_colision_puerta.deteccioncolision_paso2
00:00008A45   check_colision_puerta.deteccioncolision_paso3
00:00008A52   check_colision_puerta.deteccioncolision_paso4
00:00008A5A   check_colision_puerta.deteccioncolision_paso5
00:00008A5C X fin_check_colision_puerta
00:00008A5D   desactiva_todas_puertas
00:00008A7D X fin_desactiva_todas_puertas
00:00008A7E   carga_patrones_sprites_nivel
00:00008A82 X fin_carga_patrones_sprites_nivel
00:00008A82   carga_patrones_nivel_comunes
00:00008A8E X fin_carga_patrones_nivel_comunes
00:00008A8E X carga_patrones_sprites_nivel1
00:00008A8E X fin_carga_patrones_sprites
00:00008A8F   render_sprites
00:00008A9B X fin_actualiza_array_sprites_vram
00:00008A9B   vuelca_resultado_puntomira_array
00:00008AC0 X vuelca_resultado_puntomira_array.codigo_color_1
00:00008AC9   vuelca_resultado_puntomira_array.codigo_color_2
00:00008AD2 X fin_vuelca_resultado_puntomira_array
00:00008AD2   check_player
00:00008AF1 X f
00:00008AF2   mueve_arriba
00:00008AFD   mueve_arriba.no_decrementa_y
00:00008AFE X fin_mueve_arriba
00:00008AFF   mueve_derecha
00:00008B0C   mueve_derecha.no_incrementa_x
00:00008B0D X fin_mueve_derecha
00:00008B0E   mueve_abajo
00:00008B1B   mueve_abajo.no_incrementa_y
00:00008B1C X fin_mueve_abajo
00:00008B1D   mueve_izquierda
00:00008B28   mueve_izquierda.no_decrementa_x
00:00008B29 X fin_mueve_izquierda
00:00008B2A   mira_disparo
00:00008B2A X mira_disparo.mira_boton_pulsado1
00:00008B37 X mira_disparo.no_efectua_disparo
00:00008B42   mira_disparo.efectua_disparo
00:00008B57   mira_disparo.fin_mira_disparo1
00:00008B58   mira_disparo.mira_boton_pulsado2
00:00008B74 X fin_mira_disparo
00:00008B74   update_controllers_status
00:00008BAB   read_joy_0
00:00008BBF   check_8th_keyboard_row
00:00008BCD   check_4th_keyboard_row
00:00008BDB X inicializa_replayer_efectos_interrupciones
00:00008BF4 X fin_inicializa_replayer_efectos_interrupciones
00:00008BF5   subrutina_isr
00:00008BFE X fin_subrutina_isr
00:00008BFE X subrutinas_sonido
00:00000000   CHNPRM_PsInOr
00:00000001   CHNPRM_PsInSm
00:00000002   CHNPRM_CrAmSl
00:00000003   CHNPRM_CrNsSl
00:00000004   CHNPRM_CrEnSl
00:00000005   CHNPRM_TSlCnt
00:00000006   CHNPRM_CrTnSl
00:00000008   CHNPRM_TnAcc
00:0000000A   CHNPRM_COnOff
00:0000000B   CHNPRM_OnOffD
00:0000000C   CHNPRM_OffOnD
00:0000000D   CHNPRM_OrnPtr
00:0000000F   CHNPRM_SamPtr
00:00000011   CHNPRM_NNtSkp
00:00000012   CHNPRM_Note
00:00000013   CHNPRM_SlToNt
00:00000014   CHNPRM_Env_En
00:00000015   CHNPRM_Flags
00:00000016   CHNPRM_TnSlDl
00:00000017   CHNPRM_TSlStp
00:00000019   CHNPRM_TnDelt
00:0000001B   CHNPRM_NtSkCn
00:0000001C   CHNPRM_Volume
00:0000001D X CHNPRM_Size
00:00000000   AR_TonA
00:00000002   AR_TonB
00:00000004   AR_TonC
00:00000006   AR_Noise
00:00000007   AR_Mixer
00:00000008   AR_AmplA
00:00000009   AR_AmplB
00:0000000A   AR_AmplC
00:0000000B   AR_Env
00:0000000D   AR_EnvTp
00:00008BFE   CHECKLP
00:00008C0F X PT3_MUTE
00:00008C1B   PT3_INIT
00:00008C5A   PT3_INIT.TP_0
00:00008C66   PT3_INIT.TP_1
00:00008C6D   PT3_INIT.TP_2
00:00008CDB   PT3_INIT.L1
00:00008CE8   PT3_INIT.L2
00:00008CEC X PT3_INIT.L3
00:00008D13   PT3_INIT.CORR_1
00:00008D21   PT3_INIT.CORR_2
00:00008D28   PT3_INIT.TC_EXIT
00:00008D33   PT3_INIT.INITV1
00:00008D3B   PT3_INIT.INITV2
00:00008D4F   PT3_INIT.INITV3
00:00008D53   PD_OrSm
00:00008D5D   PD_SAM
00:00008D5E   PD_SAM_
00:00008D74   PD_VOL
00:00008D7D   PD_EOff
00:00008D85   PD_SorE
00:00008D8F   PD_ENV
00:00008D94   PD_ORN
00:00008D99   PD_ESAM
00:00008DA6   PTDECOD
00:00008DB5   PD_LOOP
00:00008DB8   PD_LP2
00:00008DE5   PD_NOIS
00:00008DEA   PD_REL
00:00008DF0   PD_NOTE
00:00008DF8   PD_RES
00:00008E0A   PD_FIN
00:00008E11   C_PORTM
00:00008E5C   C_PORTM.NOSIG
00:00008E66   SET_STP
00:00008E72   C_GLISS
00:00008E85   C_SMPOS
00:00008E8B   C_ORPOS
00:00008E91   C_VIBRT
00:00008EA9   C_ENGLS
00:00008EBB   C_DELAY
00:00008EC1   SETENV
00:00008EDC   C_NOP
00:00008EDD   SETORN
00:00008EF6   SPCCOMS
00:00008F16   CHREGS
00:00008F39   CHREGS.CH_ORPS
00:00008F44   CHREGS.CH_NTP
00:00008F4A   CHREGS.CH_NOK
00:00008F65   CHREGS.CH_SMPS
00:00008F7B   CHREGS.CH_NOAC
00:00008FC2   CHREGS.CH_STPP
00:00008FD7   CHREGS.CH_AMP
00:00008FE9   CHREGS.CH_AMIN
00:00008FEE   CHREGS.CH_SVAM
00:00008FF1   CHREGS.CH_NOAM
00:00008FFA   CHREGS.CH_APOS
00:00009000   CHREGS.CH_VOL
00:0000900B X CHREGS.CH_ENV
00:00009012   CHREGS.CH_NOEN
00:0000902C   CHREGS.NO_ENAC
00:00009033   CHREGS.NO_ENSL
00:00009041   CHREGS.CH_MIX
00:00009045   CHREGS.CH_EXIT
00:00009064   CHREGS.CH_ONDL
00:00009068   PT3_PLAY
00:0000909C   PT3_PLAY.PLNLP
00:000090C3   PT3_PLAY.PL1A
00:000090CE   PT3_PLAY.PL1B
00:000090E3   PT3_PLAY.PL1C
00:000090F8   PT3_PLAY.PL1D
00:000090FE   PT3_PLAY.PL2
00:00009160   PT3_ROUT
00:00009161   ROUT_A0
00:0000916D   ROUT_A0.LOUT
00:00009181   NT_DATA
00:00009191   T_
00:00009191   TCOLD_0
00:0000919D   TCNEW_1
00:0000919D   TCOLD_1
00:0000919F   TCOLD_2
00:000091B1   TCNEW_3
00:000091B2   TCOLD_3
00:000091BB   TCNEW_0
00:000091C6   TCNEW_2
00:000091D1   EMPTYSAMORN
00:000091D5   T_PACK
00:00000000 X AYFXRELATIVE
00:0000920A   ayFX_SETUP
00:00009216   ayFX_END
00:0000921C   ayFX_INIT
00:0000922D   ayFX_INIT.CHECK_PRI
00:0000924E   ayFX_INIT.INIT_END
00:00009252   ayFX_PLAY
00:00009266   ayFX_PLAY.TAKECB
00:00009277   ayFX_PLAY.CHECK_NN
00:00009284   ayFX_PLAY.SETPOINTER
00:00009298   ayFX_PLAY.SETMASKS
00:000092A6 X ayFX_PLAY.CHK1
00:000092A8 X ayFX_PLAY.PLAY_C
00:000092B5   ayFX_PLAY.CHK2
00:000092BA X ayFX_PLAY.PLAY_B
00:000092C7   ayFX_PLAY.CHK3
00:000092CA X ayFX_PLAY.PLAY_A
00:000092D7   ayFX_PLAY.SETMIXER
00:000092E7   song
00:00009C4F   sfx_bank
00:00009C9A   examina_ayudas_en_pantalla
00:00009C9B   puntero_ayuda_actual
00:00009C9D X array_ayudas
00:00009C9D   array_oracionon
00:00009C9F X array_oracionon1
00:00009CA1   array_oracionoff
00:00009CA3 X array_oracionoff1
00:00009CA5 X array_cruzon
00:00009CA7 X array_cruzon1
00:00009CA9 X array_cruzoff
00:00009CAB X array_cruzoff1
00:00009CAD X array_aguaon
00:00009CAF X array_aguaon1
00:00009CB1 X array_aguaoff
00:00009CB3 X array_aguaoff1
00:00009CB5 X array_armaduraon
00:00009CB7 X array_armaduraon1
00:00009CB9 X array_armaduraoff
00:00009CBB X array_armaduraoff1
00:00009CBD X array_plantaon
00:00009CBF X array_plantaon1
00:00009CC1 X array_plantaoff
00:00009CC3 X array_plantaoff1
00:00009CC5 X array_extraon
00:00009CC7 X array_extraon1
00:00009CC9 X array_extraoff
00:00009CCB X array_extraoff1
00:00009CCD X array_ballestaon
00:00009CCF X array_ballestaon1
00:00009CD1 X array_ballestaoff
00:00009CD3 X array_ballestaoff1
00:00009CD5 X lista_ayudas
00:00009CD5   ayuda_oracion
00:00009CE4   datos_oracion
00:00009CF3   inicializa_ayudas
00:00009CFC X fin_inicializa_ayudas
00:00009CFD   carga_datos_ayuda
00:00009D02 X fin_carga_datos_ayuda
00:00009D03   pinta_obj_ayuda
00:00009D07 X pinta_obj_ayuda.dibujoon
00:00009D13   pinta_obj_ayuda.dibujooff
00:00009D1C   pinta_obj_ayuda.param_wordaux2
00:00009D25 X pinta_obj_ayuda.filasycols
00:00009D30 X fin_pinta_obj_ayuda
00:00009D30   pinta_ayudas_habitacion
00:00009D35 X pinta_ayudas_habitacion.examina_oracion
00:00009D4A X pinta_ayudas_habitacion.fin_examina_oracion
00:00009D4A   fin_pinta_ayudas_habitacion
00:00009D4B   accion_oracion
00:00009D4E X fin_accion_oracion
00:00009D4F X accion_cruz
00:00009D4F X fin_accion_cruz
00:00009D50 X accion_agua
00:00009D50 X fin_accion_agua
00:00009D51 X accion_armadura
00:00009D51 X fin_accion_armadura
00:00009D52 X accion_planta
00:00009D52 X fin_accion_planta
00:00009D53 X accion_vidaextra
00:00009D53 X fin_accion_vidaextra
00:00009D54 X accion_ballesta
00:00009D54 X fin_accion_ballesta
00:00009D55   depack_VRAM
00:00009D82   literal
00:00009D87   loop
00:00009D90 X getlen
00:00009D96   lus
00:00009DB3   lenok
00:00009DC0   mode7
00:00009DC6   mode6
00:00009DCC   mode5
00:00009DD2   mode4
00:00009DD8   mode3
00:00009DDE   mode2
00:00009DEE   offsok
00:00009DF9   offsok.loop
00:00009E1B   getbit
00:00009E1F   getbitexx
00:00009E25   Depack_out
00:00009E27   modes
00:00000000   ESTRUCTURA_PUNTOMIRA.posx
00:00000001   ESTRUCTURA_PUNTOMIRA.posy
00:00000002 X ESTRUCTURA_PUNTOMIRA.escena
00:00000003 X ESTRUCTURA_PUNTOMIRA.velocidad
00:00000004 X ESTRUCTURA_PUNTOMIRA.boton2_pressed
00:00000005 X ESTRUCTURA_PUNTOMIRA.cadencia
00:00000006 X ESTRUCTURA_PUNTOMIRA.pm_aux1
00:00000007 X ESTRUCTURA_PUNTOMIRA.pm_aux2
00:00000008 X ESTRUCTURA_PUNTOMIRA.pm_aux3
00:00000009 X ESTRUCTURA_PUNTOMIRA.pm_aux4
00:0000000A X ESTRUCTURA_PUNTOMIRA.pm_aux5
00:0000000B X ESTRUCTURA_PUNTOMIRA.pm_aux6
00:0000000C X ESTRUCTURA_PUNTOMIRA.pm_aux7
00:0000000D X ESTRUCTURA_PUNTOMIRA.pm_aux8
00:0000000E X ESTRUCTURA_PUNTOMIRA.pm_aux9
00:0000000F X ESTRUCTURA_PUNTOMIRA.pm_aux10
00:00000010 X ESTRUCTURA_PUNTOMIRA
00:00000000 X ESTRUCTURA_ANTORCHA.activo
00:00000001 X ESTRUCTURA_ANTORCHA.postilemem_antor1
00:00000003 X ESTRUCTURA_ANTORCHA.pospantalla_antor1
00:00000004 X ESTRUCTURA_ANTORCHA.pospantalla_antor2
00:00000005 X ESTRUCTURA_ANTORCHA.escena
00:00000006 X ESTRUCTURA_ANTORCHA.cont_sig_escena
00:00000007   ESTRUCTURA_ANTORCHA
00:00000000 X ESTRUCTURA_ESQUELETO.activo
00:00000001 X ESTRUCTURA_ESQUELETO.postilemem_antor1
00:00000003 X ESTRUCTURA_ESQUELETO.pospantalla_esquel1
00:00000004 X ESTRUCTURA_ESQUELETO.pospantalla_esquel2
00:00000005   ESTRUCTURA_ESQUELETO.escena
00:00000006   ESTRUCTURA_ESQUELETO.cont_sig_escena
00:00000007   ESTRUCTURA_ESQUELETO
00:00000000 X ESTRUCTURA_ENEMIGO.tipo
00:00000001 X ESTRUCTURA_ENEMIGO.posx
00:00000002 X ESTRUCTURA_ENEMIGO.posy
00:00000003 X ESTRUCTURA_ENEMIGO.color
00:00000004 X ESTRUCTURA_ENEMIGO.escena
00:00000005 X ESTRUCTURA_ENEMIGO.contador_siguiente_escena
00:00000006 X ESTRUCTURA_ENEMIGO.reset_contador
00:00000007 X ESTRUCTURA_ENEMIGO.dano
00:00000008 X ESTRUCTURA_ENEMIGO.energia
00:00000009 X ESTRUCTURA_ENEMIGO.ver_hor
00:0000000A X ESTRUCTURA_ENEMIGO.manejador_dibujo
00:0000000C X ESTRUCTURA_ENEMIGO.en_aux3
00:0000000D X ESTRUCTURA_ENEMIGO.en_aux4
00:0000000E   ESTRUCTURA_ENEMIGO
00:00000000 X ESTRUCTURA_AYUDA.activa
00:00000001   ESTRUCTURA_AYUDA.posx
00:00000002   ESTRUCTURA_AYUDA.posy
00:00000003   ESTRUCTURA_AYUDA.radiox
00:00000004   ESTRUCTURA_AYUDA.radioy
00:00000005   ESTRUCTURA_AYUDA.accion
00:00000007   ESTRUCTURA_AYUDA.tiles_ayudaon
00:00000009   ESTRUCTURA_AYUDA.tiles_ayudaoff
00:0000000B   ESTRUCTURA_AYUDA.pos_en_tilemap
00:0000000D X ESTRUCTURA_AYUDA.alto
00:0000000E X ESTRUCTURA_AYUDA.ancho
00:0000000F   ESTRUCTURA_AYUDA
00:00000000 X ESTRUCTURA_PUERTA.activa
00:00000001   ESTRUCTURA_PUERTA.posx
00:00000002   ESTRUCTURA_PUERTA.posy
00:00000003   ESTRUCTURA_PUERTA.radiox
00:00000004   ESTRUCTURA_PUERTA.radioy
00:00000005   ESTRUCTURA_PUERTA.accion
00:00000007   ESTRUCTURA_PUERTA.tiles_puerta
00:00000009   ESTRUCTURA_PUERTA.pos_en_tilemap
00:0000000B   ESTRUCTURA_PUERTA.alto
00:0000000C   ESTRUCTURA_PUERTA.ancho
00:0000000D   ESTRUCTURA_PUERTA
00:00009E35 X sprites_pantantalla
00:00009E35   sprites_comunes
00:00009E35 X sprite_punto_mira_1
00:00009E55 X sprite_punto_mira_2
00:00009E75 X sprite_punto_mira_1_mejorado
00:00009E95 X sprite_punto_mira_2_mejorado
00:00009EB5 X sprite_explosion_1
00:00009ED5 X sprite_explosion_2
00:00009EF5   fin_sprites_comunes
00:00009EF5 X sprite_arana1_1
00:00009F15 X sprite_arana1_2
00:00009F35 X sprite_murcielago1_1
00:00009F55 X sprite_murcielago1_2
00:00009F75 X sprite_serpiente1_1
00:00009F95 X sprite_serpiente1_2
00:00009FB5 X sprite_serpiente2_1
00:00009FD5 X sprite_serpiente2_2
00:00009FF5 X sprite_zombi1_1_1
00:0000A015 X sprite_zombi1_2_1
00:0000A035 X sprite_zombi1_3_1
00:0000A055 X sprite_zombi1_4_1
00:0000A075 X sprite_zombi1_1_2
00:0000A095 X sprite_zombi1_2_2
00:0000A0B5 X sprite_zombi1_3_2
00:0000A0D5 X sprite_zombi1_4_2
00:0000A0F5 X sprite_zombi2_1_1
00:0000A115 X sprite_zombi2_2_1
00:0000A135 X sprite_zombi2_3_1
00:0000A155 X sprite_zombi2_4_1
00:0000A175 X sprite_zombi2_1_2
00:0000A195 X sprite_zombi2_2_2
00:0000A1B5 X sprite_zombi2_3_2
00:0000A1D5 X sprite_zombi2_4_2
00:0000A1F5 X sprite_caballero1_1_1
00:0000A215 X sprite_caballero1_2_1
00:0000A235 X sprite_caballero1_3_1
00:0000A255 X sprite_caballero1_4_1
00:0000A275 X sprite_caballero1_1_2
00:0000A295 X sprite_caballero1_2_2
00:0000A2B5 X sprite_caballero1_3_2
00:0000A2D5 X sprite_caballero1_4_2
00:0000A2F5 X sprite_caballero2_1_1
00:0000A315 X sprite_caballero2_2_1
00:0000A335 X sprite_caballero2_3_1
00:0000A355 X sprite_caballero2_4_1
00:0000A375 X sprite_caballero2_1_2
00:0000A395 X sprite_caballero2_2_2
00:0000A3B5 X sprite_caballero2_3_2
00:0000A3D5 X sprite_caballero2_4_2
00:0000A3F5 X sprite_llama1_1
00:0000A415 X sprite_llama2_1
00:0000A435 X sprite_llama1_2
00:0000A455 X sprite_llama2_2
00:0000A475 X sprite_fantasma1_1
00:0000A495 X sprite_fantasma2_1
00:0000A4B5 X sprite_fantasma1_2
00:0000A4D5 X sprite_fantasma2_2
00:0000A4F5 X sprite_magia1_1
00:0000A515 X sprite_magia2_1
00:0000A535 X sprite_magia1_2
00:0000A555 X sprite_magia2_2
00:0000A575 X sprite_beholder1_1
00:0000A595 X sprite_beholder2_1
00:0000A5B5 X sprite_beholder3_1
00:0000A5D5 X sprite_beholder4_1
00:0000A5F5 X sprite_beholder1_2
00:0000A615 X sprite_beholder2_2
00:0000A635 X sprite_beholder3_2
00:0000A655 X sprite_beholder4_2
00:0000A675 X sprite_vampiro1_1
00:0000A695 X sprite_vampiro2_1
00:0000A6B5 X sprite_vampiro1_2
00:0000A6D5 X sprite_vampiro2_2
00:0000A6F5 X sprite_manoizq1
00:0000A715 X sprite_manoizq2
00:0000A735 X sprite_manoizq3
00:0000A755 X sprite_manoder1
00:0000A775 X sprite_manoder2
00:0000A795 X sprite_manoder3
00:0000A7B5   habitacion_actual
00:0000A7B6   habitacion_extras
00:0000A7B7   habitacion_actual_puntero
00:0000A7B9   is_habitacion_terminada
00:0000A7BA   habitaciones_juego
00:0000A7BA   habitaciones_nivel0
00:0000A82A   habitaciones_nivel1
00:0000A89A   habitaciones_nivel2
00:0000A90A   habitaciones_nivel3
00:0000A97A   habitaciones_nivel4
00:0000A9EA   habitaciones_nivel5
00:0000AA5A X habitaciones_nivel6
00:0000AACA   color_base
00:0000AACD   color_bomba1
00:0000AAD0   color_bomba2
00:0000AAD3   prota
00:0000AAD3   prota.posx
00:0000AAD4   prota.posy
00:0000AAD5   prota.escena
00:0000AAD6 X prota.velocidad
00:0000AAD7 X prota.boton2_pressed
00:0000AAD8   prota.cadencia
00:0000AAD9 X prota.pm_aux1
00:0000AADA X prota.pm_aux2
00:0000AADB X prota.pm_aux3
00:0000AADC X prota.pm_aux4
00:0000AADD X prota.pm_aux5
00:0000AADE X prota.pm_aux6
00:0000AADF X prota.pm_aux7
00:0000AAE0 X prota.pm_aux8
00:0000AAE1 X prota.pm_aux9
00:0000AAE2 X prota.pm_aux10
00:0000AAE3   prota_nivel
00:0000AAE4   prota_vidas
00:0000AAE5   prota_reliquias
00:0000AAE6   prota_pos_mapx
00:0000AAE7   prota_pos_mapy
00:0000AAE8   prota_energia
00:0000AAE9   array_aux_vidas
00:0000AAF1   array_aux_reliquias
00:0000AAF9   array_aux_energia
00:0000AB00   ultimo_pos_array_aux_energia
00:0000AB01   array_aux_mapa_limpiar
00:0000AB08   elemento_pintar_mapa
00:0000AB09   antorchas
00:0000AB10   array_antorcha
00:0000AB13   esqueletos
00:0000AB1A   array_esqueleto
00:0000AB26   lista_escenas_calavera
00:0000AB2A   array_sprites
00:0000AB2A   array_sprites_pm
00:0000AB32 X array_sprites_enem
00:0000ABAA X lista_enemigos
00:0000AC36 X puntero_array_atrib_array_VRAM
00:0000AC38   tiles_patrones_nivel0
00:0000AE62   tiles_color_nivel0
00:0000AECD   tiles_mapa_nivel0
00:0000AF02   tiles_patrones_nivel1
00:0000B0B7   tiles_color_nivel1
00:0000B0FE   tiles_mapa_nivel1
00:0000B133   tiles_patrones_nivel2
00:0000B2E8   tiles_color_nivel2
00:0000B32F   tiles_mapa_nivel2
00:0000B364   tiles_patrones_nivel3
00:0000B519   tiles_color_nivel3
00:0000B560   tiles_mapa_nivel3
00:0000B595   tiles_patrones_nivel4
00:0000B74A   tiles_color_nivel4
00:0000B791   tiles_mapa_nivel4
00:0000B7C6   tiles_patrones_nivel5
00:0000B97B   tiles_color_nivel5
00:0000B9C2   tiles_mapa_nivel5
00:0000B9F7   tiles_patrones_nivel6
00:0000BBAC   tiles_color_nivel6
00:0000BBF3   tiles_mapa_nivel6
00:0000BC28   tiles_patrones_marcador
00:0000BD74   tiles_color_marcador
00:0000BDA9   tiles_mapa_marcador
00:0000BE0B   END


 Output: t4.out
-------------------------------------------------

 Page: 00
  Org: 00008000  Size: *  Used: 00000000

    No output

 Output: t4.bin
-------------------------------------------------

 Page: 00
  Org: 00008000  Size: *  Used: 00003E12

   Address   Length Align   Label
   00008000   15890         START
