Sjasm Z80 Assembler v0.42c - www.xl2s.tk             [2021.10.09 - 14:02:16]

t4.asm
Errors: 0

       1   00:0000                      	OUTPUT	"t4.bin"
       2   00:8000                      	
       3   00:8000                      ;;=====================================================
       4   00:8000                      ;;DEFINICIÓN DE CONSTANTES
       5   00:8000                      ;;=====================================================	
       6   00:8000                      	include "constantes.asm"
       1.  00:8000                      ;;=====================================================
       2.  00:8000                      ;; FICHERO constantes.asm
       3.  00:8000                      ;;=====================================================
       4.  00:8000                      
       5.  00:8000                      ;;ETIQUETAS/CONSTANTES BIOS TECLADO
       6.  00:8000  (00:00D8)           GTTRIG		equ		#00D8	;Returns current trigger status
       7.  00:8000  (00:00D5)           GTSTCK		equ		#00D5	;Returns the joystick/cursors status
       8.  00:8000  (00:F3DB)           CLIKSW		equ		#F3DB	;deshabilita el sonido de clic cuando se pulsa una tecla
       9.  00:8000                      
      10.  00:8000                      ;;ETIQUETAS/CONSTANTES BIOS VDP
      11.  00:8000  (00:013E)           RDVDP		equ		#013E	;lee registro status VDP
      12.  00:8000  (00:0047)           WRTVDP		equ		#0047	;escribe registros del VDP
      13.  00:8000  (00:005C)           LDIRVM		equ		#005C	;RAM/ROM -> VRAM
      14.  00:8000  (00:0059)           LDIRMV		equ		#0059	;VRAM -> RAM
      15.  00:8000  (00:005F)           CHGMOD		equ		#005F	;cambia modo pantalla (screen mode)
      16.  00:8000  (00:0041)           DISSCR  	equ		#0041	;desactiva pantanlla
      17.  00:8000  (00:0044)           ENASCR  	equ		#0044	;activa pantalla
      18.  00:8000  (00:0062)           CHGCLR  	equ		#0062	;cambia color de pantalla (toca A y direcciones)
      19.  00:8000  (00:F3E9)           FORCLR		equ		#F3E9	;zona memoria color foreground
      20.  00:8000  (00:F3EA)           BAKCLR  	equ		#F3EA	;zona memoria color background
      21.  00:8000  (00:F3EB)           BDRCLR 		equ		#F3EB	;zona memoria bordercolor
      22.  00:8000  (00:00C3)           CLS			equ		#00C3	;limpia pantalla (necesita A=0)
      23.  00:8000                      
      24.  00:8000                      ;;ETIQUETAS/CONSTANTES REGISTROS VDP
      25.  00:8000  (00:F3DF)           RG0SAV		equ		#F3DF	;Mirror of VDP register 0 (Basic: VDP(0))
      26.  00:8000  (00:F3E0)           RG1SAV		equ		#F3E0	;Mirror of VDP register 1 (Basic: VDP(1))
      27.  00:8000  (00:F3E1)           RG2SAV		equ		#F3E1	;Mirror of VDP register 2 (Basic: VDP(2))
      28.  00:8000  (00:F3E2)           RG3SAV		equ		#F3E2	;Mirror of VDP register 3 (Basic: VDP(3))
      29.  00:8000  (00:F3E3)           RG4SAV		equ		#F3E3	;Mirror of VDP register 4 (Basic: VDP(4))
      30.  00:8000  (00:F3E4)           RG5SAV		equ		#F3E4	;Mirror of VDP register 5 (Basic: VDP(5))
      31.  00:8000  (00:F3E5)           RG6SAV		equ		#F3E5	;Mirror of VDP register 6 (Basic: VDP(6))
      32.  00:8000  (00:F3E6)           RG7SAV		equ		#F3E6	;Mirror of VDP register 7 (Basic: VDP(7))
      33.  00:8000  (00:F3E7)           STATFL		equ		#F3E7	;Mirror of VDP(8) status register (S#0)
      34.  00:8000                      
      35.  00:8000  (00:0099)           REGEST		equ		#0099	;registro de estado para escribir directamente en VRAM
      36.  00:8000  (00:0098)           REGESCVDP	equ		#0098	;registro donde escribir valor para VRAM
      37.  00:8000                      
      38.  00:8000                      ;;ETIQUETAS/CONSTANTES REGISTROS PSG (PARA JOYSTICK)
      39.  00:8000  (00:00A0)           PSG_A  equ  0a0h  ;reg address
      40.  00:8000  (00:00A1)           PSG_W  equ  0a1h  ;reg data WR
      41.  00:8000  (00:00A2)           PSG_R  equ  0a2h  ;reg data
      42.  00:8000                      
      43.  00:8000                      
      44.  00:8000                      ;;ETIQUETAS DE ZONAS DE MEMORIA DE LA VPD (MSX1)
      45.  00:8000  (00:0000)           CHRTBL		equ		#0000
      46.  00:8000  (00:1800)           TILMAP		equ		#1800
      47.  00:8000  (00:1900)           TILMAPBANK1 equ		#1900
      48.  00:8000  (00:1B00)           SPRART		equ		#1B00
      49.  00:8000  (00:2000)           CLRTBL		equ		#2000
      50.  00:8000  (00:3800)           SPRTBL		equ		#3800
      51.  00:8000                      
      52.  00:8000                      
      53.  00:8000                      ;;ETIQUETAS ESTANDAR PARA DAR MÁS CLARIDAD AL CODIGO
      54.  00:8000  (00:0001)           SI			equ		1
      55.  00:8000  (00:0000)           NO			equ		0
      56.  00:8000  (00:0004)           LIMCADENCIA equ		4	;nº de veces que se ejecutará el disparo antes de ejecutar un disparo real (porque cuando se pulsa la tecl dispara 3 ó 4 veces de rápido que va)
      57.  00:8000                      ;hay que estudiar si 3 es un nº mejor
      58.  00:8000                      
      59.  00:8000                      
      60.  00:8000                      
      61.  00:8000                      ;;PALETA DE COLORES DEL MSX
      62.  00:8000  (00:0000)           COLTRASP	equ		0
      63.  00:8000  (00:0001)           COLNEGRO	equ		1
      64.  00:8000  (00:0002)           COLVERDE	equ		2
      65.  00:8000  (00:0003)           COLVERCLA	equ		3
      66.  00:8000  (00:0004)           COLAZULOSC	equ		4
      67.  00:8000  (00:0005)           COLAZULLA	equ		5
      68.  00:8000  (00:0006)           COLROJOOSC	equ		6
      69.  00:8000  (00:0007)           COLCYAN		equ		7
      70.  00:8000  (00:0008)           COLROJO		equ		8
      71.  00:8000  (00:0009)           COLROJOCLA	equ		9
      72.  00:8000  (00:000A)           COLAMAROSC	equ		10
      73.  00:8000  (00:000B)           COLAMARCLA	equ		11
      74.  00:8000  (00:000C)           COLVERDOSC	equ		12
      75.  00:8000  (00:000D)           COLMAGENTA	equ		13
      76.  00:8000  (00:000E)           COLGRIS		equ		14
      77.  00:8000  (00:000F)           COLBLANCO	equ		15
      78.  00:8000                      
      79.  00:8000                      
      80.  00:8000                      
      81.  00:8000                      ;;ETIQUETAS ESPECIFICAS PARA DAR MÁS CLARIDAD AL CODIGO (relacionadas con posiciones en mapa vdp)
      82.  00:8000  (00:02F8)           POSMAPLIN1  equ		#02F8
      83.  00:8000  (00:02D8)           POSMAPLIN2  equ		#02D8
      84.  00:8000  (00:02B8)           POSMAPLIN3  equ		#02B8
      85.  00:8000  (00:0298)           POSMAPLIN4  equ		#0298
      86.  00:8000  (00:0278)           POSMAPLIN5  equ		#0278
      87.  00:8000  (00:0258)           POSMAPLIN6  equ		#0258
      88.  00:8000  (00:0238)           POSMAPLIN7  equ		#0238
      89.  00:8000                      
      90.  00:8000  (00:000D)           POSCARAMAP	equ		#000D
      91.  00:8000  (00:0248)           POSVIDAS	equ		#0248
      92.  00:8000  (00:0011)           POSRELIMAP	equ		#0011
      93.  00:8000  (00:02C8)           POSRELIQ	equ		#02C8
      94.  00:8000  (00:0288)           POSENERG	equ		#0288
      95.  00:8000  (00:02B4)           POSNIVEL	equ		#02B4
      96.  00:8000  (00:0238)           POSMAPA		equ 	#0238
      97.  00:8000                      
      98.  00:8000  (00:01EE)           POSPUERABAJ equ		#01EE
      99.  00:8000  (00:008E)           POSPUERARRI equ		#008E
     100.  00:8000  (00:00FC)           POSPUERDERE equ		#00FC
     101.  00:8000  (00:00E1)           POSPUERIZQU equ		#00E1
     102.  00:8000                      
     103.  00:8000                      ;;POSICIONES DE LAS AYUDAS EN PANTALLA BANCO 1
     104.  00:8000  (00:00A3)           POSORACION	equ		163
     105.  00:8000  (00:00A7)           POSCRUZ		equ		167
     106.  00:8000  (00:00AB)           POSAGUA		equ		171
     107.  00:8000  (00:00AF)           POSARMAD	equ		175
     108.  00:8000  (00:00B3)           POSPLANTA	equ		179
     109.  00:8000  (00:00B6)           POSVIDAEXT	equ		182
     110.  00:8000  (00:00BB)           POSBALLES	equ		187
     111.  00:8000                      
     112.  00:8000                      ;;POSICIONES DE LAS AYUDAS EN PANTALLA PIXEL CENTRAL X
     113.  00:8000  (00:0020)           POSORACIONX	equ		32
     114.  00:8000  (00:0040)           POSCRUZX	equ		64
     115.  00:8000  (00:0060)           POSAGUAX	equ		96
     116.  00:8000  (00:0080)           POSARMADX	equ		128
     117.  00:8000  (00:00A0)           POSPLANTAX	equ		160
     118.  00:8000  (00:00C0)           POSVIDAEXTX	equ		192
     119.  00:8000  (00:00E0)           POSBALLESX	equ		224
     120.  00:8000                      
     121.  00:8000                      ;;POSICIONES DE LAS AYUDAS EN PANTALLA PIXEL CENTRAL Y
     122.  00:8000  (00:0070)           POSAYUDASY	equ		112	;se pone por poner porque las estructuras de ayudas ya se inicializan con este valor
     123.  00:8000                      
     124.  00:8000                      ;;ESTADO ESTRUCTURA
     125.  00:8000  (00:0000)           INACTIVA	equ		0
     126.  00:8000  (00:0001)           ACTIVA		equ		1
     127.  00:8000                      
     128.  00:8000                      ;;POSICIONES DE LAS ANTORCHAS
     129.  00:8000  (00:0088)           POSANTOR1	equ		136
     130.  00:8000  (00:0097)           POSANTOR2	equ		151
     131.  00:8000  (00:00C4)           MAPLLAMA1	equ		196
     132.  00:8000  (00:00C5)           MAPLLAMA2	equ		197
     133.  00:8000  (00:000A)           RESETLLAMA	equ		10
     134.  00:8000                      
     135.  00:8000                      ;;POSICIONES DE LOS ESQUELETOS
     136.  00:8000  (00:0088)           POSESQUEL1	equ		136
     137.  00:8000  (00:0095)           POSESQUEL2	equ		149
     138.  00:8000  (00:00A4)           MAPESQUEL1	equ		164
     139.  00:8000  (00:00A5)           MAPESQUEL2	equ		165
     140.  00:8000  (00:00A4)           MAPESQUEL3	equ		164
     141.  00:8000  (00:00A6)           MAPESQUEL4	equ		166
     142.  00:8000  (00:000A)           RESETESQUEL	equ		10
     143.  00:8000                      
     144.  00:8000                      ;;ETIQUETAS ESPECIFICAS PARA DAR MÁS CLARIDAD AL CODIGO (relacionadas con posiciones en en el banco de memoria)
     145.  00:8000  (00:0013)           TILEPROTAM  equ		19		;tile del prota para pintar en mapa
     146.  00:8000  (00:0009)           TILEGRISM	equ		9		;tile gris que representa vacio (por donde el prota va pasando)
     147.  00:8000  (00:0010)           TILEMAPROJO equ		16
     148.  00:8000  (00:000F)           TILEMAPAMAR equ		15
     149.  00:8000  (00:000E)           TILEMAPVERD equ		14
     150.  00:8000                      
     151.  00:8000                      
     152.  00:8000                      ;;ETIQUETAS ESPECIFICAS PARA DAR MÁS CLARIDAD AL CODIGO (generales)
     153.  00:8000  (00:0008)           NMAXVIDREL	equ		8		;el número máximo de vidas y de reliquias es de 8
     154.  00:8000  (00:0007)           NHABNIVEL	equ		7
     155.  00:8000  (00:00F8)           MAXENERGIA  equ		248
     156.  00:8000  (00:00D9)           TILEENERG8  equ		217
     157.  00:8000  (00:00BA)           TILEENERG7  equ		186
     158.  00:8000  (00:009B)           TILEENERG6  equ		155
     159.  00:8000  (00:007C)           TILEENERG5  equ		124
     160.  00:8000  (00:005D)           TILEENERG4  equ		93
     161.  00:8000  (00:003E)           TILEENERG3  equ		62
     162.  00:8000  (00:001F)           TILEENERG2  equ		31
     163.  00:8000  (00:0000)           TILENEGRO	equ		0
     164.  00:8000                      
     165.  00:8000                      ;limites
     166.  00:8000  (00:0000)           LIMPANTIZQ  equ		0
     167.  00:8000  (00:00FF)           LIMPANTDER  equ		255
     168.  00:8000  (00:0000)           LIMPANTARR  equ		0
     169.  00:8000  (00:0080)           LIMPANTABA  equ		128
     170.  00:8000                      
     171.  00:8000                      
     172.  00:8000                      ;matriz de 7x7 empieza en 0, y fila y x col, cuento desde esquina sup izq
     173.  00:8000  (00:0006)           BASEMAPY	equ		6
     174.  00:8000  (00:0003)           BASEMAPX	equ		3
     175.  00:8000                      
     176.  00:8000                      
     177.  00:8000                      
     178.  00:8000                      ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
     179.  00:8000                      ;; CONSTANTES PARA INTERRUPCIONES
     180.  00:8000                      ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
     181.  00:8000  (00:FD9A)           H.KEYI		equ     	#FD9A
     182.  00:8000  (00:FD9F)           H.TIMI	 	equ     	#FD9F
     183.  00:8000                      
     184.  00:8000                      
     185.  00:8000                      ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
     186.  00:8000                      ;; CONSTANTES PARA SONIDO 
     187.  00:8000                      ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
     188.  00:8000                      
     189.  00:8000  (F000)              	map		#f000
     190.  00:8000                      
     191.  00:8000                      ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;PT3 REPLAYER
     192.  00:8000  (00:F000)           PT3_SETUP:		#1	;set bit0 to 1, if you want to play without looping
     193.  00:8000                      					;bit7 is set each time, when loop point is passed
     194.  00:8000  (00:F001)           PT3_MODADDR:	#2
     195.  00:8000  (00:F003)           PT3_CrPsPtr:	#2
     196.  00:8000  (00:F005)           PT3_SAMPTRS:	#2
     197.  00:8000  (00:F007)           PT3_OrnPtrs:	#2
     198.  00:8000  (00:F009)           PT3_PDSP:		#2
     199.  00:8000  (00:F00B)           PT3_CSP:		#2
     200.  00:8000  (00:F00D)           PT3_PSP:		#2
     201.  00:8000  (00:F00F)           PT3_PrNote:		#1
     202.  00:8000  (00:F010)           PT3_PrSlide:	#2
     203.  00:8000  (00:F012)           PT3_AdInPtA:	#2
     204.  00:8000  (00:F014)           PT3_AdInPtB:	#2
     205.  00:8000  (00:F016)           PT3_AdInPtC:	#2
     206.  00:8000  (00:F018)           PT3_LPosPtr:	#2
     207.  00:8000  (00:F01A)           PT3_PatsPtr:	#2
     208.  00:8000  (00:F01C)           PT3_Delay:		#1
     209.  00:8000  (00:F01D)           PT3_AddToEn:	#1
     210.  00:8000  (00:F01E)           PT3_Env_Del:	#1
     211.  00:8000  (00:F01F)           PT3_ESldAdd:	#2
     212.  00:8000  (00:F021)           PT3_NTL3:		#2	; AND A / NOP (note table creator)
     213.  00:8000                      
     214.  00:8000  (00:F023)           VARS:			#0
     215.  00:8000                      
     216.  00:8000  (00:F023)           ChanA:			#29			;CHNPRM_Size
     217.  00:8000  (00:F040)           ChanB:			#29			;CHNPRM_Size
     218.  00:8000  (00:F05D)           ChanC:			#29			;CHNPRM_Size
     219.  00:8000                      
     220.  00:8000                      ;GlobalVars
     221.  00:8000  (00:F07A)           DelyCnt:		#1
     222.  00:8000  (00:F07B)           CurESld:		#2
     223.  00:8000  (00:F07D)           CurEDel:		#1
     224.  00:8000  (00:F07E)           Ns_Base_AddToNs:	#0
     225.  00:8000  (00:F07E)           Ns_Base:		#1
     226.  00:8000  (00:F07F)           AddToNs:		#1
     227.  00:8000                      
     228.  00:8000  (00:F080)           NT_:			#192	; Puntero a/tabla de frecuencias
     229.  00:8000                      
     230.  00:8000  (00:F140)           AYREGS:			#0
     231.  00:8000  (00:F140)           VT_:			#14
     232.  00:8000  (00:F14E)           EnvBase:		#2
     233.  00:8000  (00:F150)           VAR0END:		#0
     234.  00:8000                      
     235.  00:8000  (00:F150)           T1_:			#0		
     236.  00:8000  (00:F150)           T_NEW_1:		#0
     237.  00:8000  (00:F150)           T_OLD_1:		#24
     238.  00:8000  (00:F168)           T_OLD_2:		#24
     239.  00:8000  (00:F180)           T_NEW_3:		#0
     240.  00:8000  (00:F180)           T_OLD_3:		#2
     241.  00:8000  (00:F182)           T_OLD_0:		#0
     242.  00:8000  (00:F182)           T_NEW_0:		#24
     243.  00:8000  (00:F19A)           T_NEW_2:		#166
     244.  00:8000                      ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;PT3 REPLAYER END
     245.  00:8000                      
     246.  00:8000                      ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ayFX REPLAYER 
     247.  00:8000  (00:F240)           ayFX_MODE:		#1			; ayFX mode
     248.  00:8000  (00:F241)           ayFX_BANK:		#2			; Current ayFX Bank
     249.  00:8000  (00:F243)           ayFX_PRIORITY:	#1			; Current ayFX stream priotity
     250.  00:8000  (00:F244)           ayFX_POINTER:	#2			; Pointer to the current ayFX stream
     251.  00:8000  (00:F246)           ayFX_TONE:		#2			; Current tone of the ayFX stream
     252.  00:8000  (00:F248)           ayFX_NOISE:		#1			; Current noise of the ayFX stream
     253.  00:8000  (00:F249)           ayFX_VOLUME:	#1			; Current volume of the ayFX stream
     254.  00:8000  (00:F24A)           ayFX_CHANNEL:	#1			; PSG channel to play the ayFX stream
     255.  00:8000                      
     256.  00:8000                      	;IF (AYFXRELATIVE == 1 ) 
     257.  00:8000                      ;ayFX_VT:	ds	2			; ayFX relative volume table pointer
     258.  00:8000                      	;ENDIF
     259.  00:8000                      ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ayFX REPLAYER END
     260.  00:8000                      
     261.  00:8000                      
     262.  00:8000                      
       7   00:8000                      
       8   00:8000                      ;;=====================================================
       9   00:8000                      ;;DEFINICIÓN DE CABECERA DE ARCHIVO BIN
      10   00:8000                      ;;=====================================================		
      11   00:8000                      	include "cabecerabin.asm"
       1.  00:8000                      ;;=====================================================
       2.  00:8000                      ;; FICHERO cabecera.asm
       3.  00:8000                      ;;=====================================================
       4.  00:8000                      
       5.  00:8000                      ;;CABECERA FICHERO BIN
       6.  00:8000  FE                  	DB	#FE
       7.  00:8001  00 80               	DW	START
       8.  00:8003  55 BB               	DW	END
       9.  00:8005  00 80               	DW	START
      10.  00:8007                      
      11.  00:8007                      ;;INICIO CÓDIGO PROGRAMA	
      12.  00:8007                      	ORG	#8000
      13.  00:8000                      	
      12   00:8000                      	
      13   00:8000                      START:	
      14   00:8000                      	;inicializa pantalla y entonrno
      15   00:8000  CD 02 81            	CALL	sub_preparapantalla			;screen 2,2 sin click al pulsar tecla y color 16,1,1
      16   00:8003                      	
      17   00:8003                      	;inicializa variables para parametrizar funciones y que lo que se muestre sea variable (nº vidas, mapa, puertas, pantalla, etc...)
      18   00:8003  CD 42 80            	CALL	inicializa_variables_pruebas
      19   00:8006                      	
      20   00:8006                      	;inicializa los niveles por partida
      21   00:8006  CD 65 80            	CALL	inicializa_niveles			;no es necesario parametrizarlo según el nivel del usuario ya que se cargan todos
      22   00:8009                      	
      23   00:8009                      	;inicializa las estructuras de forma particular según ayuDa pero sin poner valores de posición
      24   00:8009  CD B9 97            	CALL	inicializa_ayudas
      25   00:800C                      	
      26   00:800C                      	;inicializa las estructuras de las antorchas
      27   00:800C  CD B4 84            	CALL	inicializa_antorchas
      28   00:800F                      	
      29   00:800F                      	;pinta la pantalla (la primera o algunas especiales se pintan completamente)
      30   00:800F  CD 23 81            	CALL	pinta_pantalla_completa 
      31   00:8012                      	
      32   00:8012                      	;carga sprites en memoria (SE HA RETRASADO HASTA PARAMETRIZAR LA CARGA DE PANTALLAS)
      33   00:8012  CD 99 85            	CALL 	carga_patrones_sprites_nivel
      34   00:8015                      	
      35   00:8015                      	;funciones que modificarian el marcador si se produce un evento cuando toque y cuando se pinta la pantalla ya se mira
      36   00:8015                      	;una variable para ver si el array hay que actualizarlo en pantalla o no
      37   00:8015  CD 63 82            	CALL	pinta_vidas
      38   00:8018  CD 72 82            	CALL 	pinta_reliquias
      39   00:801B  CD 81 82            	CALL	pinta_nivel
      40   00:801E  CD 01 83            	CALL	borra_mapa
      41   00:8021  CD 58 83            	CALL	pinta_puertas
      42   00:8024                      
      43   00:8024  3E 13               	LD		 A, TILEPROTAM
      44   00:8026  32 44 A7            	LD		(elemento_pintar_mapa), A
      45   00:8029  CD E2 83            	CALL	posiciona_en_mapa		;se le pasa elemento_pintar_mapa (tile del prota) está el prota y prota.posx y posy
      46   00:802C                      		
      47   00:802C  CD 17 99            	CALL	pinta_ayudas_habitacion
      48   00:802F                      	
      49   00:802F  CD F8 84            	CALL	pinta_antorchas
      50   00:8032                      
      51   00:8032                      	;incializacion de replayer con interrupciones
      52   00:8032                      ;	CALL	inicializa_replayer_efectos_interrupciones
      53   00:8032                      
      54   00:8032                      loop_principal:
      55   00:8032  76                  	HALT							;espera VBLANK y sincroniza
      56   00:8033                      	
      57   00:8033  CD B1 85            	CALL	render_sprites			;actualiza array de sprites y los pinta en pantalla
      58   00:8036                      	
      59   00:8036  CD F2 82            	CALL	pinta_energia			;pinta la energia en pantalla
      60   00:8039                      	
      61   00:8039  CD 32 85            	CALL	actualiza_elementos_fondo
      62   00:803C                      
      63   00:803C  CD F4 85            	CALL	check_player			;MIRA EL CONTROL Y APLICA LA LOGICA DE MOVIMIENTO DEL PROTAGONISTA
      64   00:803F                      	
      65   00:803F  C3 32 80            	JP		loop_principal
      66   00:8042                      fin_programa_principal:
      67   00:8042                      	;RET
      68   00:8042                      
      69   00:8042                      
      70   00:8042                      
      71   00:8042                      
      72   00:8042                      
      73   00:8042                      ;;*******************************************************************
      74   00:8042                      ; sólo para hacer pruebas y pintar la parte de las vidas y demás
      75   00:8042                      inicializa_variables_pruebas:
      76   00:8042  3E 04               	LD		 A, 4
      77   00:8044  32 20 A7            	LD		(prota_vidas),A
      78   00:8047                      
      79   00:8047  3E 04               	LD		 A, 4
      80   00:8049  32 21 A7            	LD		(prota_reliquias), A
      81   00:804C                      
      82   00:804C  3E 64               	LD		 A, 100
      83   00:804E  32 24 A7            	LD		(prota_energia), A
      84   00:8051                      
      85   00:8051                      	;ubico al prota dentro del nivel para obtener luego las habitaciones y enemigos que aparecerán
      86   00:8051                      	;será igual la posición inicial en todos los niveles
      87   00:8051                      	
      88   00:8051  3E 00               	LD		 A, 0				;los niveles (matrices) son 7 del 0 al 6
      89   00:8053  32 1F A7            	LD		(prota_nivel), A	;nivel empieza en 0 para usar las posiciones ascii
      90   00:8056                      
      91   00:8056  3E 00               	LD		 A, 0				;los subniveles (filas) son 7 del 0 al 6
      92   00:8058  32 23 A7            	LD		(prota_pos_mapy), A	;pos Y dentro del nivel (se empieza en 0)
      93   00:805B                      
      94   00:805B  3E 02               	LD		 A, 2				;columnas 7: del 0 al 6
      95   00:805D  32 22 A7            	LD		(prota_pos_mapx), A	;pos X dentro del nivel (se empieza en 0)
      96   00:8060                      	
      97   00:8060  AF                  	XOR		 A
      98   00:8061  32 14 A7            	LD		(prota.cadencia), A
      99   00:8064                      fin_inicializa_variables_pruebas:
     100   00:8064  C9                  	RET
     101   00:8065                      ;;************************************************************************
     102   00:8065                      
     103   00:8065                      
     104   00:8065                      
     105   00:8065                      
     106   00:8065                      
     107   00:8065                      
     108   00:8065                      
     109   00:8065                      
     110   00:8065                      
     111   00:8065                      ;;=====================================================
     112   00:8065                      ;;DEFINICIÓN DE SUBRUTINAS
     113   00:8065                      ;;=====================================================
     114   00:8065                      	include "subrutinas.asm"
       1.  00:8065                      ;;=====================================================
       2.  00:8065                      ;;DEFINICIÓN DE SUBRUTINAS
       3.  00:8065                      ;;=====================================================	
       4.  00:8065                      
       5.  00:8065                      
       6.  00:8065                      ;;=====================================================
       7.  00:8065                      ;;INICIALIZA_NIVELES
       8.  00:8065                      ;;=====================================================	
       9.  00:8065                      ; función: 	copia la plantilla de niveles (habitaciones_plantilla) en los niveles de trabajo para el juego (habitaciones_juego)
      10.  00:8065                      ; entrada: 	habitaciones_plantilla
      11.  00:8065                      ; salida: 	habitaciones_juego
      12.  00:8065                      ; toca: 	A, B, HL, DE
      13.  00:8065                      inicializa_niveles:
      14.  00:8065  AF                  		XOR		 A
      15.  00:8066  06 31               		LD		 B,   49				;7 filas por 7 niveles menos el primero que lo hago fuera del buble
      16.  00:8068  21 F6 A3            		LD		HL,   habitaciones_juego;tambíen puntero a la primera fila del primer nivel
      17.  00:806B  11 0E 00            		LD		DE,   14				;14 bytes de habitaciones y 2 extras
      18.  00:806E  19                  		ADD		HL,   DE				;puntero al primero de los bytes extras
      19.  00:806F  77                  		LD		(HL), A					;0000000Xb si X=0 no se ha pasado por allí y si es 1 sí
      20.  00:8070  11 10 00            		LD		DE,   16				;desde las col 15 de una fila a la siguiente
      21.  00:8073                      .bucle_borra_hab:
      22.  00:8073  19                  		ADD		HL,   DE				;situo el puntero 16 bytes siguientes
      23.  00:8074  77                  		LD		(HL), A					;pongo su contenido a 0
      24.  00:8075  10 FC               		DJNZ	.bucle_borra_hab		;repito para poner todos a 0
      25.  00:8077                      fin_iniciliza_niveles:
      26.  00:8077  C9                  		RET
      27.  00:8078                      
      28.  00:8078                      
      29.  00:8078                      ;;=====================================================
      30.  00:8078                      ;;ACTUALIZA_MARCADOR_VIDAS
      31.  00:8078                      ;;=====================================================	
      32.  00:8078                      ; función:  actualiza el buffer de vidas
      33.  00:8078                      ; entrada: 	prota_vidas
      34.  00:8078                      ; salida: 	array_aux_vidas
      35.  00:8078                      ; toca:		A,B,HL
      36.  00:8078                      actualiza_marcador_vidas:
      37.  00:8078                      	;para no andar restando pongo todos los huecos a negro y luego en otro bucle las caras
      38.  00:8078                      	;1-pinto todo en blanco
      39.  00:8078  21 25 A7            	LD		HL,array_aux_vidas
      40.  00:807B  06 08               	LD		 B,NMAXVIDREL
      41.  00:807D                      loop_marcador_caras_negro:	;asignar espacios en negro
      42.  00:807D  36 00               	LD		(HL),0			;0 posición mapa tiles para nada (es transparente pero el fondo es negro)
      43.  00:807F  23                  	INC		HL
      44.  00:8080  10 FB               	DJNZ	loop_marcador_caras_negro
      45.  00:8082                      fin_loop_marcador_caras_negro:
      46.  00:8082                      	;2-pinto las caras según el n de vidas
      47.  00:8082  3A 20 A7            	LD		 A, (prota_vidas)
      48.  00:8085  B7                  	OR		 A
      49.  00:8086  C8                  	RET 	 Z
      50.  00:8087  47                  	LD		 B, A
      51.  00:8088  21 25 A7            	LD		HL, array_aux_vidas
      52.  00:808B                      loop_marcador_caras: ;asignar caras
      53.  00:808B  36 0D               	LD		(HL), POSCARAMAP	;13 posición mapa tiles para cara
      54.  00:808D  23                  	INC		HL
      55.  00:808E  10 FB               	DJNZ	loop_marcador_caras
      56.  00:8090                      fin_loop_marcador_caras:
      57.  00:8090                      fin_actualiza_marcador_vidas:
      58.  00:8090  C9                  	RET
      59.  00:8091                      
      60.  00:8091                      
      61.  00:8091                      ;;=====================================================
      62.  00:8091                      ;;ACTUALIZA_BUFFER_RELIQUIAS
      63.  00:8091                      ;;=====================================================	
      64.  00:8091                      ; función: 	actualiza buffer de reliquias
      65.  00:8091                      ; entrada: 	prota_reliquias
      66.  00:8091                      ; salida: 	array_aux_reliquias
      67.  00:8091                      ; toca:		A,B,HL
      68.  00:8091                      actualiza_buffer_reliquias:	
      69.  00:8091                      	;para no andar restando pongo todos los huecos a negro y luego en otro bucle las reliquias
      70.  00:8091                      	;1-pinto todo en blanco
      71.  00:8091  21 2D A7            	LD		HL, array_aux_reliquias
      72.  00:8094  06 08               	LD		 B, NMAXVIDREL
      73.  00:8096  AF                  	XOR		 A
      74.  00:8097                      loop_buffer_reliquias_negro:	;asignar espacios en negro
      75.  00:8097  77                  	LD		(HL), A			;0 posición mapa tiles para nada (es transparente pero el fondo es negro)
      76.  00:8098  23                  	INC		HL
      77.  00:8099  10 FC               	DJNZ	loop_buffer_reliquias_negro
      78.  00:809B                      
      79.  00:809B                      	;2-pinto las cruces según el n de reliquias
      80.  00:809B  21 2D A7            	LD		HL, array_aux_reliquias
      81.  00:809E  3A 21 A7            	LD		 A, (prota_reliquias)
      82.  00:80A1  B7                  	OR		 A
      83.  00:80A2  C8                  	RET		 Z
      84.  00:80A3  47                  	LD		 B, A
      85.  00:80A4                      loop_buffer_reliquias: ;asignar reliquias
      86.  00:80A4  36 11               	LD		(HL), POSRELIMAP	;17 posición mapa tiles para reliquia
      87.  00:80A6  23                  	INC		HL
      88.  00:80A7  10 FB               	DJNZ	loop_buffer_reliquias
      89.  00:80A9                      fin_actualiza_buffer_reliquias:
      90.  00:80A9  C9                  	RET
      91.  00:80AA                      
      92.  00:80AA                      
      93.  00:80AA                      
      94.  00:80AA                      ;;=====================================================
      95.  00:80AA                      ;;LOCALIZA_INFO_HABITACION
      96.  00:80AA                      ;;=====================================================	
      97.  00:80AA                      ; función: 	busca las puertas que hay que pintar egún la posición del usuario y las pone en habitacion_actual
      98.  00:80AA                      ; entrada: 	prota.pos_mapy, prota.pos_mapx, prota_nivel habitaciones_juego
      99.  00:80AA                      ; salida: 	habitacion_actual
     100.  00:80AA                      ; toca:		todo
     101.  00:80AA                      ;ejemplo: nivel 4, posy 5 y posx 3
     102.  00:80AA                      ;3 + 5 x 8 + 4 x 49
     103.  00:80AA                      localiza_info_habitacion:
     104.  00:80AA                      ;primera posición: me coloco en la columna correcta
     105.  00:80AA  21 F6 A3            	LD		HL, habitaciones_juego
     106.  00:80AD                      .situo_columna:	
     107.  00:80AD  3A 22 A7            	LD		 A, (prota_pos_mapx)
     108.  00:80B0  CB 27               	SLA		 A				;multiplico por dos ya que cada habitación va de dos en dos bytes
     109.  00:80B2  06 00               	LD		 B, 0
     110.  00:80B4  4F                  	LD		 C, A
     111.  00:80B5                      
     112.  00:80B5  09                  	ADD 	HL, BC			;sumo a la posición 0 la columnax2 en la que situarme
     113.  00:80B6                      	
     114.  00:80B6                      .situo_fila:
     115.  00:80B6  3A 23 A7            	LD		A, (prota_pos_mapy)
     116.  00:80B9  B7                  	OR	 	A
     117.  00:80BA  CA C7 80            	JP		Z, .situo_nivel	;si la fila es 0 no es necesario seguir operando en fila
     118.  00:80BD                      	
     119.  00:80BD  47                  	LD		B, A
     120.  00:80BE  AF                  	XOR		A
     121.  00:80BF                      .loop_suma_fila:
     122.  00:80BF  C6 10               	ADD		16				;cada fila tiene 16 bytes
     123.  00:80C1  10 FC               	DJNZ	.loop_suma_fila
     124.  00:80C3                      	
     125.  00:80C3  06 00               	LD		 B, 0
     126.  00:80C5  4F                  	LD		 C, A
     127.  00:80C6                      
     128.  00:80C6  09                  	ADD 	HL, BC			;sumo a la columna 16 x filas para situarme en la fila correcta
     129.  00:80C7                      
     130.  00:80C7                      .situo_nivel:
     131.  00:80C7  3A 1F A7            	LD		 A, (prota_nivel)
     132.  00:80CA  B7                  	OR	 	 A
     133.  00:80CB  CA DB 80            	JP		 Z, .actualiza_valiable_habitacion	;si el nivel es 0 al pasar por las anterirores ya estoy situado actualizo la variable y termino
     134.  00:80CE                      	
     135.  00:80CE  E5                  	PUSH	HL				;guardo el resultado intermedio
     136.  00:80CF                      	
     137.  00:80CF  47                  	LD		 B, A			;preparo la varible del bucle
     138.  00:80D0  11 70 00            	LD		DE, 112			;112 = 16x42 son los bytes de cada matriz-nivel
     139.  00:80D3  21 00 00            	LD		HL, 0
     140.  00:80D6                      .loop_suma_nivel:
     141.  00:80D6  19                  	ADD		HL, DE
     142.  00:80D7  10 FD               	DJNZ	.loop_suma_nivel
     143.  00:80D9                      	
     144.  00:80D9  D1                  	POP		DE				;devuelvo el resultado intermedio en DE que ya no lo necesito
     145.  00:80DA                      	
     146.  00:80DA  19                  	ADD		HL, DE			;sumo el resultado del nivel al resultado intermedio anterior
     147.  00:80DB                      	
     148.  00:80DB                      .actualiza_valiable_habitacion
     149.  00:80DB  7E                  	LD		 A, (HL)
     150.  00:80DC  32 F4 A3            	LD		(habitacion_actual), A
     151.  00:80DF  23                  	INC		HL				;el byte de los extras está antes de donde se especifican las puertas
     152.  00:80E0  7E                  	LD		 A, (HL)
     153.  00:80E1  32 F5 A3            	LD		(habitacion_extras), A
     154.  00:80E4                      fin_localiza_info_habitacion:
     155.  00:80E4  C9                  	RET
     156.  00:80E5                      
     157.  00:80E5                      
     158.  00:80E5                      	
     159.  00:80E5                      	
     160.  00:80E5                      	
     161.  00:80E5                      	
     162.  00:80E5                      	
     115   00:80E5                      	
     116   00:80E5                      	include "subr_general.asm"
       1.  00:80E5                      ;;=====================================================
       2.  00:80E5                      ;;DEFINICIÓN DE SUBRUTINAS GENERALES USABLES PARA CUALQUIER PROYECTO
       3.  00:80E5                      ;;=====================================================	
       4.  00:80E5                      
       5.  00:80E5                      ;;=====================================================
       6.  00:80E5                      ;;SUMA_A_BC
       7.  00:80E5                      ;;=====================================================	
       8.  00:80E5                      ; función: 	suma A a BC por si da más de 255
       9.  00:80E5                      ; entrada: 	A, BC
      10.  00:80E5                      ; salida: 	A + BC
      11.  00:80E5                      ; toca:		A, BC
      12.  00:80E5                      suma_A_BC:
      13.  00:80E5  81                  	ADD		 C
      14.  00:80E6  4F                  	LD		 C, A
      15.  00:80E7  88                  	ADC		 B
      16.  00:80E8  91                  	SUB		 C
      17.  00:80E9  47                  	LD		 B, A
      18.  00:80EA                      fin_suma_A_BC:
      19.  00:80EA  C9                  	RET
      20.  00:80EB                      	
      21.  00:80EB                      ;;=====================================================
      22.  00:80EB                      ;;SUMA_A_HL
      23.  00:80EB                      ;;=====================================================	
      24.  00:80EB                      ; función: 	suma A a BC por si da más de 255
      25.  00:80EB                      ; entrada: 	A, HL
      26.  00:80EB                      ; salida: 	A + HL
      27.  00:80EB                      ; toca:		A, HL
      28.  00:80EB                      suma_A_HL:
      29.  00:80EB  85                  	ADD		 L
      30.  00:80EC  6F                  	LD		 L, A
      31.  00:80ED  8C                  	ADC		 H
      32.  00:80EE  95                  	SUB		 L
      33.  00:80EF  67                  	LD		 H, A
      34.  00:80F0                      fin_suma_A_HL:
      35.  00:80F0  C9                  	RET
     117   00:80F1                      	
     118   00:80F1                      	include "subr_pintapantalla.asm"
       1.  00:80F1                      ;;=====================================================
       2.  00:80F1                      ;;DEFINICIÓN DE SUBRUTINAS
       3.  00:80F1                      ;;=====================================================	
       4.  00:80F1                      ;relacionadas con pintado en pantalla (y no sprites)
       5.  00:80F1                      
       6.  00:80F1                      
       7.  00:80F1                      ;;=====================================================
       8.  00:80F1                      ;;COLOR_PANTALLA
       9.  00:80F1                      ;;=====================================================	
      10.  00:80F1                      ; función: 	el equivalente en basic a color 15,1,1
      11.  00:80F1                      ; entrada: 	HL	que apunta a un array de bytes con 3 bytes FORCLR, BAKCLR y BDRCLR
      12.  00:80F1                      ; salida: 	-
      13.  00:80F1                      ; toca: 	todo
      14.  00:80F1                      color_pantalla:
      15.  00:80F1  7E                  	LD		 A, (HL)			;FORCLR 
      16.  00:80F2  32 E9 F3            	LD 		(FORCLR),A
      17.  00:80F5  23                  	INC		HL
      18.  00:80F6                      	
      19.  00:80F6  7E                  	LD		 A, (HL)			;BAKCLR
      20.  00:80F7  32 EA F3            	LD 		(BAKCLR),A
      21.  00:80FA  23                  	INC		HL
      22.  00:80FB                      	
      23.  00:80FB  7E                  	LD		 A, (HL)
      24.  00:80FC  32 EB F3            	LD 		(BDRCLR),A			;BDRCLR
      25.  00:80FF  C3 62 00            	JP		CHGCLR 
      26.  00:8102                      fin_color_pantalla:
      27.  00:8102                      
      28.  00:8102                      
      29.  00:8102                      ;;=====================================================
      30.  00:8102                      ;;PREPARAPANTALLA
      31.  00:8102                      ;;=====================================================	
      32.  00:8102                      ; función: elimina clic cuando se pulsa tecla, cls, screen 2,2
      33.  00:8102                      ; entrada: -
      34.  00:8102                      ; salida: -
      35.  00:8102                      ; toca: si no son todos los regristros, casi todos
      36.  00:8102                      sub_preparapantalla:
      37.  00:8102                      	;toca A y Z
      38.  00:8102                      elimina_clic;
      39.  00:8102  AF                  	XOR		 A
      40.  00:8103  32 DB F3            	LD		(CLIKSW),A
      41.  00:8106                      fin_elimina_clic:
      42.  00:8106                      
      43.  00:8106                      	;toca A
      44.  00:8106                      limpia_pantalla:
      45.  00:8106  AF                  	XOR		 A
      46.  00:8107  CD C3 00            	CALL 	CLS
      47.  00:810A                      fin_limpia_pantalla:
      48.  00:810A                      
      49.  00:810A                      	;toca A y direcciones #F3E9/#F3EA/#F3EB, poner en HL array con 3 valores
      50.  00:810A  21 06 A7            	LD		HL, color_base
      51.  00:810D  CD F1 80            	CALL	color_pantalla
      52.  00:8110                      	
      53.  00:8110                      	;cambiamos a SCREEN 2,2 del BASIC
      54.  00:8110                      	;toca A
      55.  00:8110                      screen2:
      56.  00:8110  3E 02               	LD		 A, 2
      57.  00:8112  CD 5F 00            	CALL	CHGMOD			;selecciona screen 2
      58.  00:8115                      sprites_16_16:
      59.  00:8115  3A E0 F3            	LD		 A, (RG1SAV)
      60.  00:8118  F6 02               	OR		00000010b		;fuerza sprites de 16x16
      61.  00:811A  32 E0 F3            	LD		(RG1SAV), A		;no lo guardamos en la copia de variables del sistema
      62.  00:811D  47                  	LD		 B, A
      63.  00:811E  0E 01               	LD		 C, 1
      64.  00:8120  C3 47 00            	JP		WRTVDP			;opción alternativa de escribir las tres lineas siguientes
      65.  00:8123                      fin_sub_preparapantalla:
      66.  00:8123                      	
      67.  00:8123                      
      68.  00:8123                      ;;=====================================================
      69.  00:8123                      ;;PINTA_PANTALLA_COMPLETA
      70.  00:8123                      ;;=====================================================	
      71.  00:8123                      ; función: pinta el escenario, las 3 partes
      72.  00:8123                      ; entrada: -
      73.  00:8123                      ; salida: -
      74.  00:8123                      ; toca: si no son todos los regristros, casi todos
      75.  00:8123                      pinta_pantalla_completa:
      76.  00:8123  CD 2A 81            	CALL 	pinta_parte_superior_pantalla
      77.  00:8126                      	
      78.  00:8126  CD 48 82            	CALL 	pinta_parte_inferior_pantalla	
      79.  00:8129                      fin_pinta_pantalla_completa:
      80.  00:8129  C9                  	RET
      81.  00:812A                      
      82.  00:812A                      
      83.  00:812A                      ;;=====================================================
      84.  00:812A                      ;;PINTA_PARTE_SUPERIOR_PANTALLA
      85.  00:812A                      ;;=====================================================	
      86.  00:812A                      ; función: pinta el escenario, los dos bancos superiores
      87.  00:812A                      ; entrada: -
      88.  00:812A                      ; salida: -
      89.  00:812A                      ; toca: si no son todos los regristros, casi todos
      90.  00:812A                      pinta_parte_superior_pantalla:
      91.  00:812A  3A 1F A7            	LD		 A, (prota_nivel)
      92.  00:812D  CA 5B 81            	JP		 Z, .carga_nivel_0
      93.  00:8130  3D                  	DEC		 A
      94.  00:8131  3A 1F A7            	LD		 A, (prota_nivel)
      95.  00:8134  CA 76 81            	JP		 Z, .carga_nivel_1
      96.  00:8137  3D                  	DEC		 A
      97.  00:8138  3A 1F A7            	LD		 A, (prota_nivel)
      98.  00:813B  CA 91 81            	JP		 Z, .carga_nivel_2
      99.  00:813E  3D                  	DEC		 A
     100.  00:813F  3A 1F A7            	LD		 A, (prota_nivel)
     101.  00:8142  CA AC 81            	JP		 Z, .carga_nivel_3
     102.  00:8145  3D                  	DEC		 A
     103.  00:8146  3A 1F A7            	LD		 A, (prota_nivel)
     104.  00:8149  CA C7 81            	JP		 Z, .carga_nivel_4
     105.  00:814C  3D                  	DEC		 A
     106.  00:814D  3A 1F A7            	LD		 A, (prota_nivel)
     107.  00:8150  CA E2 81            	JP		 Z, .carga_nivel_5
     108.  00:8153  3D                  	DEC		 A
     109.  00:8154  3A 1F A7            	LD		 A, (prota_nivel)
     110.  00:8157  CA FD 81            	JP		 Z, .carga_nivel_6
     111.  00:815A  3D                  	DEC		 A
     112.  00:815B                      	
     113.  00:815B                      .carga_nivel_0:
     114.  00:815B  21 91 A9            	LD		HL, tiles_patrones_nivel0
     115.  00:815E  22 42 82            	LD		(tiles_patrones), HL
     116.  00:8161  21 AE AB            	LD		HL, tiles_color_nivel0
     117.  00:8164  22 44 82            	LD		(tiles_colores), HL
     118.  00:8167  21 91 A9            	LD		HL, tiles_patrones_nivel0
     119.  00:816A  22 42 82            	LD		(tiles_patrones), HL
     120.  00:816D  21 17 AC            	LD		HL, tiles_mapa_nivel0
     121.  00:8170  22 46 82            	LD		(tiles_mapa), HL
     122.  00:8173  C3 15 82            	JP		.fin_carga_niveles
     123.  00:8176                      
     124.  00:8176                      .carga_nivel_1:
     125.  00:8176  21 4C AC            	LD		HL, tiles_patrones_nivel1
     126.  00:8179  22 42 82            	LD		(tiles_patrones), HL
     127.  00:817C  21 01 AE            	LD		HL, tiles_color_nivel1
     128.  00:817F  22 44 82            	LD		(tiles_colores), HL
     129.  00:8182  21 4C AC            	LD		HL, tiles_patrones_nivel1
     130.  00:8185  22 42 82            	LD		(tiles_patrones), HL
     131.  00:8188  21 48 AE            	LD		HL, tiles_mapa_nivel1
     132.  00:818B  22 46 82            	LD		(tiles_mapa), HL
     133.  00:818E  C3 15 82            	JP		.fin_carga_niveles
     134.  00:8191                      	
     135.  00:8191                      .carga_nivel_2:
     136.  00:8191  21 7D AE            	LD		HL, tiles_patrones_nivel2
     137.  00:8194  22 42 82            	LD		(tiles_patrones), HL
     138.  00:8197  21 32 B0            	LD		HL, tiles_color_nivel2
     139.  00:819A  22 44 82            	LD		(tiles_colores), HL
     140.  00:819D  21 7D AE            	LD		HL, tiles_patrones_nivel2
     141.  00:81A0  22 42 82            	LD		(tiles_patrones), HL
     142.  00:81A3  21 79 B0            	LD		HL, tiles_mapa_nivel2
     143.  00:81A6  22 46 82            	LD		(tiles_mapa), HL
     144.  00:81A9  C3 15 82            	JP		.fin_carga_niveles
     145.  00:81AC                      	
     146.  00:81AC                      .carga_nivel_3:
     147.  00:81AC  21 AE B0            	LD		HL, tiles_patrones_nivel3
     148.  00:81AF  22 42 82            	LD		(tiles_patrones), HL
     149.  00:81B2  21 63 B2            	LD		HL, tiles_color_nivel3
     150.  00:81B5  22 44 82            	LD		(tiles_colores), HL
     151.  00:81B8  21 AE B0            	LD		HL, tiles_patrones_nivel3
     152.  00:81BB  22 42 82            	LD		(tiles_patrones), HL
     153.  00:81BE  21 AA B2            	LD		HL, tiles_mapa_nivel3
     154.  00:81C1  22 46 82            	LD		(tiles_mapa), HL
     155.  00:81C4  C3 15 82            	JP		.fin_carga_niveles
     156.  00:81C7                      	
     157.  00:81C7                      .carga_nivel_4:
     158.  00:81C7  21 DF B2            	LD		HL, tiles_patrones_nivel4
     159.  00:81CA  22 42 82            	LD		(tiles_patrones), HL
     160.  00:81CD  21 94 B4            	LD		HL, tiles_color_nivel4
     161.  00:81D0  22 44 82            	LD		(tiles_colores), HL
     162.  00:81D3  21 DF B2            	LD		HL, tiles_patrones_nivel4
     163.  00:81D6  22 42 82            	LD		(tiles_patrones), HL
     164.  00:81D9  21 DB B4            	LD		HL, tiles_mapa_nivel4
     165.  00:81DC  22 46 82            	LD		(tiles_mapa), HL
     166.  00:81DF  C3 15 82            	JP		.fin_carga_niveles
     167.  00:81E2                      	
     168.  00:81E2                      .carga_nivel_5:
     169.  00:81E2  21 10 B5            	LD		HL, tiles_patrones_nivel5
     170.  00:81E5  22 42 82            	LD		(tiles_patrones), HL
     171.  00:81E8  21 C5 B6            	LD		HL, tiles_color_nivel5
     172.  00:81EB  22 44 82            	LD		(tiles_colores), HL
     173.  00:81EE  21 10 B5            	LD		HL, tiles_patrones_nivel5
     174.  00:81F1  22 42 82            	LD		(tiles_patrones), HL
     175.  00:81F4  21 0C B7            	LD		HL, tiles_mapa_nivel5
     176.  00:81F7  22 46 82            	LD		(tiles_mapa), HL
     177.  00:81FA  C3 15 82            	JP		.fin_carga_niveles
     178.  00:81FD                      	
     179.  00:81FD                      .carga_nivel_6:
     180.  00:81FD  21 41 B7            	LD		HL, tiles_patrones_nivel6
     181.  00:8200  22 42 82            	LD		(tiles_patrones), HL
     182.  00:8203  21 F6 B8            	LD		HL, tiles_color_nivel6
     183.  00:8206  22 44 82            	LD		(tiles_colores), HL
     184.  00:8209  21 41 B7            	LD		HL, tiles_patrones_nivel6
     185.  00:820C  22 42 82            	LD		(tiles_patrones), HL
     186.  00:820F  21 3D B9            	LD		HL, tiles_mapa_nivel6
     187.  00:8212  22 46 82            	LD		(tiles_mapa), HL
     188.  00:8215                      ;	JP		.fin_carga niveles			;no necesario
     189.  00:8215                      .fin_carga_niveles:
     190.  00:8215                      
     191.  00:8215                      	;cargando banco 1
     192.  00:8215                      	;cargamos los patrones
     193.  00:8215  2A 42 82            	LD		HL, (tiles_patrones)
     194.  00:8218  11 00 00            	LD		DE, CHRTBL
     195.  00:821B  CD 94 99            	CALL	depack_VRAM
     196.  00:821E                      	;cargamos los colores de los patrones
     197.  00:821E  2A 44 82            	LD		HL, (tiles_colores)
     198.  00:8221  11 00 20            	LD		DE, CLRTBL
     199.  00:8224  CD 94 99            	CALL	depack_VRAM
     200.  00:8227                      	
     201.  00:8227                      	;cargando banco 2
     202.  00:8227                      	;cargamos los patrones
     203.  00:8227  2A 42 82            	LD		HL, (tiles_patrones)
     204.  00:822A  11 00 08            	LD		DE, CHRTBL + #0800
     205.  00:822D  CD 94 99            	CALL	depack_VRAM	
     206.  00:8230                      	;cargamos los colores de los patrones
     207.  00:8230  2A 44 82            	LD		HL, (tiles_colores)
     208.  00:8233  11 00 28            	LD		DE, CLRTBL + #0800
     209.  00:8236  CD 94 99            	CALL	depack_VRAM
     210.  00:8239                      	
     211.  00:8239                      	;cargamos mapa de pantalla banco 1 y 2
     212.  00:8239  2A 46 82            	LD		HL, (tiles_mapa)
     213.  00:823C  11 00 18            	LD		DE, TILMAP
     214.  00:823F  C3 94 99            	JP		depack_VRAM
     215.  00:8242                      fin_pinta_parte_superior_pantalla:
     216.  00:8242  00 00               tiles_patrones:		DW	0
     217.  00:8244  00 00               tiles_colores:		DW	0
     218.  00:8246  00 00               tiles_mapa:			DW	0
     219.  00:8248                      
     220.  00:8248                      
     221.  00:8248                      ;;=====================================================
     222.  00:8248                      ;;PINTA_PARTE_INFERIOR_PANTALLA
     223.  00:8248                      ;;=====================================================	
     224.  00:8248                      ; función: pinta la parte inferior del escenario que es común
     225.  00:8248                      ; entrada: -
     226.  00:8248                      ; salida: -
     227.  00:8248                      ; toca: si no son todos los regristros, casi todos
     228.  00:8248                      pinta_parte_inferior_pantalla:
     229.  00:8248                      	;cangando banco 3
     230.  00:8248                      	;cargamos los patrones
     231.  00:8248  21 72 B9            	LD		HL,tiles_patrones_marcador
     232.  00:824B  11 00 10            	LD		DE,CHRTBL + #1000
     233.  00:824E  CD 94 99            	CALL	depack_VRAM	
     234.  00:8251                      	;cargamos mapa de pantalla
     235.  00:8251  21 F3 BA            	LD		HL,tiles_mapa_marcador
     236.  00:8254  11 00 1A            	LD		DE,TILMAP + #0200
     237.  00:8257  CD 94 99            	CALL	depack_VRAM
     238.  00:825A                      	;cargamos los colores de los patrones
     239.  00:825A  21 BE BA            	LD		HL,tiles_color_marcador
     240.  00:825D  11 00 30            	LD		DE,CLRTBL + #1000
     241.  00:8260  C3 94 99            	JP		depack_VRAM
     242.  00:8263                      fin_pinta_parte_inferior_pantalla:
     243.  00:8263                      
     244.  00:8263                      
     245.  00:8263                      
     246.  00:8263                      ;;=====================================================
     247.  00:8263                      ;;PINTA_VIDAS
     248.  00:8263                      ;;=====================================================	
     249.  00:8263                      ; función: 	actualiza el mapa de tiles para que en el próximo refresco se pinten y actualiza_vidas
     250.  00:8263                      ; entrada: 	array_aux_vidas
     251.  00:8263                      ; salida: 	actualiza_vidas_sn
     252.  00:8263                      ; toca:		todo
     253.  00:8263                      pinta_vidas:
     254.  00:8263  CD 78 80            	CALL	actualiza_marcador_vidas
     255.  00:8266                      	
     256.  00:8266  21 25 A7            	LD		HL, array_aux_vidas
     257.  00:8269  11 48 1A            	LD		DE, TILMAP + POSVIDAS 	;inicio posición en el mapa de tiles de las vidas
     258.  00:826C  01 08 00            	LD		BC, NMAXVIDREL			;hay 8 posiciones para vidas/reliquias o espacios en negro si no tiene 8 vidas/reliquias
     259.  00:826F  C3 5C 00            	JP		LDIRVM
     260.  00:8272                      fin_pinta_vidas:
     261.  00:8272                      	
     262.  00:8272                      	
     263.  00:8272                      
     264.  00:8272                      ;;=====================================================
     265.  00:8272                      ;;PINTA_RELIQUIAS
     266.  00:8272                      ;;=====================================================	
     267.  00:8272                      ; función: 	actualiza el mapa de tiles para que en el próximo refresco se pinten y actualiza_reliquias
     268.  00:8272                      ; entrada: 	array_aux_reliquias
     269.  00:8272                      ; salida: 	-
     270.  00:8272                      ; toca:		todo
     271.  00:8272                      pinta_reliquias:
     272.  00:8272  CD 91 80            	CALL	actualiza_buffer_reliquias
     273.  00:8275                      	
     274.  00:8275  21 2D A7            	LD		HL, array_aux_reliquias
     275.  00:8278  11 C8 1A            	LD		DE, TILMAP + POSRELIQ 	;inicio posición en el mapa de tiles de las vidas
     276.  00:827B  01 08 00            	LD		BC, NMAXVIDREL			;hay 8 posiciones para vidas/reliquias o espacios en negro si no tiene 8 vidas/reliquias
     277.  00:827E  C3 5C 00            	JP		LDIRVM
     278.  00:8281                      fin_pinta_reliquias:
     279.  00:8281                      	
     280.  00:8281                      
     281.  00:8281                      
     282.  00:8281                      	
     283.  00:8281                      ;;=====================================================
     284.  00:8281                      ;;PINTA_NIVEL
     285.  00:8281                      ;;=====================================================	
     286.  00:8281                      ; función: 	actualiza el nivel en la parte de puntuación
     287.  00:8281                      ; entrada: 	prota_nivel
     288.  00:8281                      ; salida: 	-
     289.  00:8281                      ; toca:		HL,DE,BC
     290.  00:8281                      pinta_nivel:	
     291.  00:8281                      	;forma más avanzada sin llamada a la bios
     292.  00:8281  01 B4 1A            	LD		BC,TILMAP + POSNIVEL ;posición en el mapa de tiles del tile de nivel
     293.  00:8284  3A 1F A7            	LD		 A, (prota_nivel)	;seleccionando la pos del banco de tiles a poner en el mapa
     294.  00:8287  C6 30               	ADD		'0'	
     295.  00:8289  57                  	LD		 D, A
     296.  00:828A                      	
     297.  00:828A  C3 8D 82            	JP		pinta_tile_suelto
     298.  00:828D                      fin_pinta_nivel:
     299.  00:828D                      
     300.  00:828D                      
     301.  00:828D                      
     302.  00:828D                      ;;=====================================================
     303.  00:828D                      ;;PINTA_TILE_SUELTO
     304.  00:828D                      ;;=====================================================	
     305.  00:828D                      ; función: 	pinta al tile que digamos en D, en la posición BC
     306.  00:828D                      ; entrada: 	BC (posición a pintar en el mapa),D (qué se va a pintar el esa posición)
     307.  00:828D                      ; salida: 	-
     308.  00:828D                      ; toca:		-
     309.  00:828D                      pinta_tile_suelto:
     310.  00:828D  DB 99               	IN		 A,(REGEST)		;leer registro de estado (recomendado)
     311.  00:828F  79                  	LD		 A,C			;primero byte bajo	
     312.  00:8290  D3 99               	OUT		(REGEST),A
     313.  00:8292  78                  	LD		 A,B			;después byte alto  ********************** preguntar a Fernando cómo que byte bajo es B
     314.  00:8293  F6 40               	OR		1000000b		;+64
     315.  00:8295  D3 99               	OUT		(REGEST),A
     316.  00:8297                      	
     317.  00:8297  7A                  	LD		A,D
     318.  00:8298  D3 98               	OUT		(REGESCVDP),A	;escribe A en VRAM en la posición indicada por los dos OUT anteriores
     319.  00:829A                      fin_pinta_tile_suelto:
     320.  00:829A  C9                  	RET
     321.  00:829B                      
     322.  00:829B                      
     323.  00:829B                      
     324.  00:829B                      
     325.  00:829B                      
     326.  00:829B                      ;;=====================================================
     327.  00:829B                      ;;MIRA_PINTA ENERGIA
     328.  00:829B                      ;;=====================================================	
     329.  00:829B                      ; función: 	actualiza el nivel de energia en la parte de puntuación
     330.  00:829B                      ; nota:		el cuadrado más bajo de ejergía siempre estará pintado... se obviará
     331.  00:829B                      ; entrada: 	prota.energia, array_aux_energia
     332.  00:829B                      ; salida: 	-
     333.  00:829B                      ; toca:		ninguno porque usa EXX
     334.  00:829B                      
     335.  00:829B                      ; nota importante... lo mismo interesa hacer esto con un array para comparar y un bucle
     336.  00:829B                      
     337.  00:829B                      mira_pinta_energia:
     338.  00:829B  D9                  	EXX							;por si acaso guardo el contenido de HL (si veo que no es necesario guardarlo lo quito) uso esto en vez de push por el nº ciclos
     339.  00:829C                      	
     340.  00:829C  3A 24 A7            	LD		 A,(prota_energia) 	;para las comparaciones A variable (actual) y B fijo (limites)
     341.  00:829F                      
     342.  00:829F  0E 00               	LD		 C,TILENEGRO		;para agilizar asignaciones en vez de un valor cte uso otro registro
     343.  00:82A1                      pinta_ener:
     344.  00:82A1                      pinta_ener_tile_8:
     345.  00:82A1  21 3C A7            	LD		HL,ultimo_pos_array_aux_energia	;coloco puntero en array e iré decrementando
     346.  00:82A4  06 D9               	LD		 B,TILEENERG8
     347.  00:82A6  B8                  	CP		 B
     348.  00:82A7  38 04               	JR		C,pinta_ener_tile_8_negro
     349.  00:82A9  36 0E               	LD		(HL),TILEMAPVERD
     350.  00:82AB  18 01               	JR		pinta_ener_tile_7
     351.  00:82AD                      pinta_ener_tile_8_negro:
     352.  00:82AD  71                  	LD		(HL),C
     353.  00:82AE                      
     354.  00:82AE                      pinta_ener_tile_7:
     355.  00:82AE  2B                  	DEC		HL
     356.  00:82AF  06 BA               	LD		 B,TILEENERG7
     357.  00:82B1  B8                  	CP		 B
     358.  00:82B2  38 04               	JR		C,pinta_ener_tile_7_negro
     359.  00:82B4  36 0E               	LD		(HL),TILEMAPVERD
     360.  00:82B6  18 01               	JR		pinta_ener_tile_6
     361.  00:82B8                      pinta_ener_tile_7_negro:
     362.  00:82B8  71                  	LD		(HL),C
     363.  00:82B9                      
     364.  00:82B9                      pinta_ener_tile_6:
     365.  00:82B9  2B                  	DEC		HL
     366.  00:82BA  06 9B               	LD		 B,TILEENERG6
     367.  00:82BC  B8                  	CP		 B
     368.  00:82BD  38 04               	JR		C,pinta_ener_tile_6_negro
     369.  00:82BF  36 0E               	LD		(HL),14
     370.  00:82C1  18 01               	JR		pinta_ener_tile_5
     371.  00:82C3                      pinta_ener_tile_6_negro:
     372.  00:82C3  71                  	LD		(HL),C
     373.  00:82C4                      
     374.  00:82C4                      pinta_ener_tile_5:
     375.  00:82C4  2B                  	DEC		HL
     376.  00:82C5  06 7C               	LD		 B,TILEENERG5
     377.  00:82C7  B8                  	CP		 B
     378.  00:82C8  38 04               	JR		C,pinta_ener_tile_5_negro
     379.  00:82CA  36 0E               	LD		(HL),TILEMAPVERD
     380.  00:82CC  18 01               	JR		pinta_ener_tile_4
     381.  00:82CE                      pinta_ener_tile_5_negro:
     382.  00:82CE  71                  	LD		(HL),C
     383.  00:82CF                      
     384.  00:82CF                      pinta_ener_tile_4:
     385.  00:82CF  2B                  	DEC		HL
     386.  00:82D0  06 5D               	LD		 B,TILEENERG4
     387.  00:82D2  B8                  	CP		 B
     388.  00:82D3  38 04               	JR		C,pinta_ener_tile_4_negro
     389.  00:82D5  36 0F               	LD		(HL),TILEMAPAMAR
     390.  00:82D7  18 01               	JR		pinta_ener_tile_3
     391.  00:82D9                      pinta_ener_tile_4_negro:
     392.  00:82D9  71                  	LD		(HL),C
     393.  00:82DA                      	
     394.  00:82DA                      pinta_ener_tile_3:
     395.  00:82DA  2B                  	DEC		HL
     396.  00:82DB  06 3E               	LD		 B,TILEENERG3
     397.  00:82DD  B8                  	CP		 B
     398.  00:82DE  38 04               	JR		C,pinta_ener_tile_3_negro
     399.  00:82E0  36 0F               	LD		(HL),TILEMAPAMAR
     400.  00:82E2  18 01               	JR		pinta_ener_tile_2
     401.  00:82E4                      pinta_ener_tile_3_negro:
     402.  00:82E4  71                  	LD		(HL),C
     403.  00:82E5                      
     404.  00:82E5                      pinta_ener_tile_2:
     405.  00:82E5  2B                  	DEC		HL
     406.  00:82E6  06 1F               	LD		 B,TILEENERG2
     407.  00:82E8  B8                  	CP		 B
     408.  00:82E9  38 04               	JR		C,pinta_ener_tile_2_negro
     409.  00:82EB  36 10               	LD		(HL),TILEMAPROJO
     410.  00:82ED  18 01               	JR		fin_mira_pinta_energia		;siempre estará pintado el cuadro mínimo
     411.  00:82EF                      pinta_ener_tile_2_negro:
     412.  00:82EF  71                  	LD		(HL),C
     413.  00:82F0                      
     414.  00:82F0                      fin_mira_pinta_energia:
     415.  00:82F0  D9                  	EXX
     416.  00:82F1  C9                  	RET
     417.  00:82F2                      
     418.  00:82F2                      
     419.  00:82F2                      ;;=====================================================
     420.  00:82F2                      ;;PINTA_ENERGIA
     421.  00:82F2                      ;;=====================================================	
     422.  00:82F2                      ; función: 	actualiza el mapa de tiles para que en el próximo refresco se pinte la barra de energia actual
     423.  00:82F2                      ; entrada: 	array_aux_energia
     424.  00:82F2                      ; toca:		todo
     425.  00:82F2                      pinta_energia:
     426.  00:82F2  CD 9B 82            	CALL	mira_pinta_energia
     427.  00:82F5                      	
     428.  00:82F5  21 35 A7            	LD		HL, array_aux_energia
     429.  00:82F8  11 88 1A            	LD		DE, TILMAP + POSENERG 	;inicio posición en el mapa de tiles de las vidas
     430.  00:82FB  01 08 00            	LD		BC, NMAXVIDREL			;hay 8 posiciones para vidas/reliquias o espacios en negro si no tiene 8 vidas/reliquias
     431.  00:82FE  C3 5C 00            	JP		LDIRVM
     432.  00:8301                      fin_pinta_energia:
     433.  00:8301                      
     434.  00:8301                      
     435.  00:8301                      
     436.  00:8301                      ;;=====================================================
     437.  00:8301                      ;;BORRA_MAPA
     438.  00:8301                      ;;=====================================================	
     439.  00:8301                      ; función: 	pone todas las habitaciones del mapa a negro (los tiles del mapa los rellena con un array a 0 - caracter en negro)
     440.  00:8301                      ; entrada: 	array_aux_mapa_limpiar
     441.  00:8301                      ; salida: 	-
     442.  00:8301                      ; toca:		AF
     443.  00:8301                      borra_mapa:
     444.  00:8301  D9                  	EXX
     445.  00:8302                      	
     446.  00:8302  21 3D A7            	LD		HL,array_aux_mapa_limpiar
     447.  00:8305  11 F8 1A            	LD		DE,TILMAP + POSMAPLIN1 	;inicio posición en el mapa de tiles de la primera fila del mapa
     448.  00:8308  01 07 00            	LD		BC,NHABNIVEL			;cada nivel son 7 filas con 7 habitaciones "posibles"
     449.  00:830B  CD 5C 00            	CALL	LDIRVM
     450.  00:830E                      	
     451.  00:830E  21 3D A7            	LD		HL,array_aux_mapa_limpiar
     452.  00:8311  11 D8 1A            	LD		DE,TILMAP + POSMAPLIN2
     453.  00:8314  01 07 00            	LD		BC,NHABNIVEL
     454.  00:8317  CD 5C 00            	CALL	LDIRVM
     455.  00:831A                      
     456.  00:831A  21 3D A7            	LD		HL,array_aux_mapa_limpiar
     457.  00:831D  11 B8 1A            	LD		DE,TILMAP + POSMAPLIN3
     458.  00:8320  01 07 00            	LD		BC,NHABNIVEL
     459.  00:8323  CD 5C 00            	CALL	LDIRVM
     460.  00:8326                      
     461.  00:8326  21 3D A7            	LD		HL,array_aux_mapa_limpiar	
     462.  00:8329  11 98 1A            	LD		DE,TILMAP + POSMAPLIN4
     463.  00:832C  01 07 00            	LD		BC,NHABNIVEL
     464.  00:832F  CD 5C 00            	CALL	LDIRVM
     465.  00:8332                      
     466.  00:8332  21 3D A7            	LD		HL,array_aux_mapa_limpiar	
     467.  00:8335  11 78 1A            	LD		DE,TILMAP + POSMAPLIN5
     468.  00:8338  01 07 00            	LD		BC,NHABNIVEL
     469.  00:833B  CD 5C 00            	CALL	LDIRVM
     470.  00:833E                      
     471.  00:833E  21 3D A7            	LD		HL,array_aux_mapa_limpiar	
     472.  00:8341  11 58 1A            	LD		DE,TILMAP + POSMAPLIN6
     473.  00:8344  01 07 00            	LD		BC,NHABNIVEL
     474.  00:8347  CD 5C 00            	CALL	LDIRVM
     475.  00:834A                      
     476.  00:834A  21 3D A7            	LD		HL,array_aux_mapa_limpiar	
     477.  00:834D  11 38 1A            	LD		DE,TILMAP + POSMAPLIN7
     478.  00:8350  01 07 00            	LD		BC,NHABNIVEL
     479.  00:8353  CD 5C 00            	CALL	LDIRVM
     480.  00:8356                      	
     481.  00:8356  D9                  	EXX
     482.  00:8357                      fin_borra_mapa:
     483.  00:8357  C9                  	RET
     484.  00:8358                      
     485.  00:8358                      
     486.  00:8358                      
     487.  00:8358                      
     488.  00:8358                      
     489.  00:8358                      ;;=====================================================
     490.  00:8358                      ;;PINTA_PUERTAS
     491.  00:8358                      ;;=====================================================	
     492.  00:8358                      ; función: 	examina A y mira si tiene que pintar puertas de los lados, arriba o abrajo o las escaleras (o no)
     493.  00:8358                      ; entrada: 	habitacion_actual 1 escalera 1 puerta arriba 1 pu der 1 pu aba 1 pu izq (si es 0 pinta pared)
     494.  00:8358                      ; salida: 	-
     495.  00:8358                      ; toca:		todo
     496.  00:8358                      pinta_puertas:
     497.  00:8358  CD 2A 81            	CALL	pinta_parte_superior_pantalla	;pinta pasillo y paredes
     498.  00:835B                      
     499.  00:835B  CD AA 80            	CALL	localiza_info_habitacion	;busca qué puertas debe pintar y lo mete en habitación_actual
     500.  00:835E                      	
     501.  00:835E  3A F4 A3            	LD		 A, (habitacion_actual)		;se mete en A porque la función pide A y para no buscar el valor 4 veces
     502.  00:8361                      
     503.  00:8361                      ;	BIT		 4, A
     504.  00:8361                      ;	CALL	nz, pinta_escalera
     505.  00:8361                      
     506.  00:8361  CB 5F               	BIT		 3, A
     507.  00:8363  C4 91 83            	CALL	nz, pinta_puerta_arr
     508.  00:8366                      
     509.  00:8366  CB 57               	BIT		 2, A
     510.  00:8368  C4 AC 83            	CALL	nz, pinta_puerta_der
     511.  00:836B                      
     512.  00:836B  CB 4F               	BIT		 1, A
     513.  00:836D  C4 76 83            	CALL	nz, pinta_puerta_aba
     514.  00:8370                      	
     515.  00:8370  CB 47               	BIT		 0, A
     516.  00:8372  C4 C7 83            	CALL	nz, pinta_puerta_izq
     517.  00:8375                      fin_pinta_puertas:
     518.  00:8375  C9                  	RET
     519.  00:8376                      
     520.  00:8376                      
     521.  00:8376                      
     522.  00:8376                      
     523.  00:8376                      ;;=====================================================
     524.  00:8376                      ;;PINTA_PUERTA_ABA
     525.  00:8376                      ;;=====================================================	
     526.  00:8376                      ; función: 	pinta la puerta de abajo
     527.  00:8376                      ; entrada: 	array_puerta_abajo, wordaux2, wordaux1
     528.  00:8376                      ; salida: 	-
     529.  00:8376                      ; toca:		HL,BC, DE
     530.  00:8376                      pinta_puerta_aba:
     531.  00:8376  F5                  	PUSH	AF
     532.  00:8377                      	
     533.  00:8377  21 6E A7            	LD		HL, array_puerta_abajo			;guardo puntero al array a pintar (como pasar por referencia)
     534.  00:837A  22 B0 84            	LD		(wordaux2), HL					;en la variable wordaux2
     535.  00:837D  21 EE 19            	LD		HL, TILMAP + POSPUERABAJ		;calcula posición en tilemap
     536.  00:8380  22 AE 84            	LD		(wordaux1), HL					;guarda valor pos tilemap en wordaux1
     537.  00:8383                      
     538.  00:8383  3E 01               	LD		 A, 1							;nº de filas
     539.  00:8385  32 B2 84            	LD		(byteaux1), A
     540.  00:8388  3E 04               	LD		 A, 4							;nº de columnas
     541.  00:838A  32 B3 84            	LD		(byteaux2), A
     542.  00:838D                      	
     543.  00:838D  F1                  	POP		AF
     544.  00:838E                      	
     545.  00:838E  C3 6E 84            	JP		pinta_array
     546.  00:8391                      fin_pinta_puerta_aba:
     547.  00:8391                      
     548.  00:8391                      ;;=====================================================
     549.  00:8391                      ;;PINTA_PUERTA_ARR
     550.  00:8391                      ;;=====================================================	
     551.  00:8391                      ; función: 	pinta la puerta de arriba
     552.  00:8391                      ; entrada: 	array_puerta_arriba, wordaux2, wordaux1
     553.  00:8391                      ; salida: 	-
     554.  00:8391                      ; toca:		HL,BC, DE
     555.  00:8391                      pinta_puerta_arr:
     556.  00:8391  F5                  	PUSH	AF
     557.  00:8392                      	
     558.  00:8392  21 45 A7            	LD		HL, array_puerta_arriba			;guardo puntero al array a pintar (como pasar por referencia)
     559.  00:8395  22 B0 84            	LD		(wordaux2), HL					;en la variable wordaux2
     560.  00:8398  21 8E 18            	LD		HL, TILMAP + POSPUERARRI		;calcula posición en tilemap
     561.  00:839B  22 AE 84            	LD		(wordaux1), HL					;guarda valor pos tilemap en wordaux1
     562.  00:839E  3E 05               	LD		 A, 5							;nº de filas
     563.  00:83A0  32 B2 84            	LD		(byteaux1), A
     564.  00:83A3  3E 04               	LD		 A, 4							;nº de columnas
     565.  00:83A5  32 B3 84            	LD		(byteaux2), A
     566.  00:83A8                      	
     567.  00:83A8  F1                  	POP		AF
     568.  00:83A9                      	
     569.  00:83A9  C3 6E 84            	JP		pinta_array
     570.  00:83AC                      fin_pinta_puerta_arr:
     571.  00:83AC                      
     572.  00:83AC                      
     573.  00:83AC                      ;;=====================================================
     574.  00:83AC                      ;;PINTA_PUERTA_DER
     575.  00:83AC                      ;;=====================================================	
     576.  00:83AC                      ; función: 	pinta la puerta de la derecha
     577.  00:83AC                      ; entrada: 	array_puerta_derecha, wordaux2, wordaux1
     578.  00:83AC                      ; salida: 	-
     579.  00:83AC                      ; toca:		HL,BC, DE
     580.  00:83AC                      pinta_puerta_der:
     581.  00:83AC  F5                  	PUSH	AF
     582.  00:83AD  21 59 A7            	LD		HL, array_puerta_derecha		;guardo puntero al array a pintar (como pasar por referencia)
     583.  00:83B0  22 B0 84            	LD		(wordaux2), HL					;en la variable wordaux2
     584.  00:83B3  21 FC 18            	LD		HL, TILMAP + POSPUERDERE		;calcula posición en tilemap
     585.  00:83B6  22 AE 84            	LD		(wordaux1), HL					;guarda valor pos tilemap en wordaux1
     586.  00:83B9                      
     587.  00:83B9  3E 07               	LD		 A, 7							;nº de filas
     588.  00:83BB  32 B2 84            	LD		(byteaux1), A
     589.  00:83BE  3E 03               	LD		 A, 3							;nº de columnas
     590.  00:83C0  32 B3 84            	LD		(byteaux2), A
     591.  00:83C3                      	
     592.  00:83C3  F1                  	POP		AF
     593.  00:83C4                      	
     594.  00:83C4  C3 6E 84            	JP		pinta_array
     595.  00:83C7                      fin_pinta_puerta_der:
     596.  00:83C7                      	
     597.  00:83C7                      ;;=====================================================
     598.  00:83C7                      ;;PINTA_PUERTA_IZQ
     599.  00:83C7                      ;;=====================================================	
     600.  00:83C7                      ; función: 	pinta la puerta de la izquierda
     601.  00:83C7                      ; entrada: 	array_puerta_izquierda, wordaux2, wordaux1
     602.  00:83C7                      ; salida: 	-
     603.  00:83C7                      ; toca:		HL,BC, DE
     604.  00:83C7                      pinta_puerta_izq:
     605.  00:83C7  F5                  	PUSH	AF
     606.  00:83C8                      	
     607.  00:83C8  21 72 A7            	LD		HL, array_puerta_izquierda		;guardo puntero al array a pintar (como pasar por referencia)
     608.  00:83CB  22 B0 84            	LD		(wordaux2), HL					;en la variable wordaux2
     609.  00:83CE  21 E1 18            	LD		HL, TILMAP + POSPUERIZQU		;calcula posición en tilemap
     610.  00:83D1  22 AE 84            	LD		(wordaux1), HL					;guarda valor pos tilemap en wordaux1
     611.  00:83D4                      
     612.  00:83D4  3E 07               	LD		 A, 7							;nº de filas
     613.  00:83D6  32 B2 84            	LD		(byteaux1), A
     614.  00:83D9  3E 03               	LD		 A, 3							;nº de columnas
     615.  00:83DB  32 B3 84            	LD		(byteaux2), A
     616.  00:83DE                      	
     617.  00:83DE  F1                  	POP		AF
     618.  00:83DF                      	
     619.  00:83DF  C3 6E 84            	JP		pinta_array
     620.  00:83E2                      fin_pinta_puerta_izq:
     621.  00:83E2                      
     622.  00:83E2                      
     623.  00:83E2                      ;;=====================================================
     624.  00:83E2                      ;;POSICIONA_EN_MAPA
     625.  00:83E2                      ;;=====================================================	
     626.  00:83E2                      ; función: 	en el mapa de marcadores de la derecha/abajo marca un cuadro en gris o con un muñeco
     627.  00:83E2                      ;			según el valor de prota.posición pinta entrá un muñeco y por donde vaya pasando el prota
     628.  00:83E2                      ;			quedará en gris
     629.  00:83E2                      ; entrada: 	elemento_pintar_mapa, prota_pos_mapy, prota_pos_mapx
     630.  00:83E2                      ; salida: 	-
     631.  00:83E2                      ; toca:		todos
     632.  00:83E2                      posiciona_en_mapa:
     633.  00:83E2                      	;#0238 es la posición en mapa de tiles de la esquina superior izquierda del mapa (569 en decimal)
     634.  00:83E2  21 38 1A            	LD		HL, TILMAP + POSMAPA;pos inicial
     635.  00:83E5                      	
     636.  00:83E5                      	;ahora se le calcula la fila a pintar ya que va de abajo a arriba y no como en el mapa + columna
     637.  00:83E5                      .sumar_fila:
     638.  00:83E5  3A 23 A7            	LD		 A, (prota_pos_mapy)
     639.  00:83E8  FE 01               	CP		 1
     640.  00:83EA  28 2A               	JR		 Z, .fila_1
     641.  00:83EC  3A 23 A7            	LD		 A, (prota_pos_mapy)
     642.  00:83EF  FE 02               	CP		 2
     643.  00:83F1  28 2A               	JR		 Z, .fila_2
     644.  00:83F3  3A 23 A7            	LD		 A, (prota_pos_mapy)
     645.  00:83F6  FE 03               	CP		 3
     646.  00:83F8  28 2A               	JR		 Z, .fila_3
     647.  00:83FA  3A 23 A7            	LD		 A, (prota_pos_mapy)
     648.  00:83FD  FE 04               	CP		 4
     649.  00:83FF  28 2A               	JR		 Z, .fila_4
     650.  00:8401  3A 23 A7            	LD		 A, (prota_pos_mapy)
     651.  00:8404  FE 05               	CP		 5
     652.  00:8406  28 2A               	JR		 Z, .fila_5
     653.  00:8408  3A 23 A7            	LD		 A, (prota_pos_mapy)
     654.  00:840B  FE 06               	CP		 6
     655.  00:840D  28 2A               	JR		 Z, .sumar_columna
     656.  00:840F                      	;no consulto la 0 porque si no es ninguna de las anteriores es 0 y por tanto sería un jr fila_0
     657.  00:840F                      	
     658.  00:840F                      .fila_0:
     659.  00:840F  11 C0 00            	LD		DE, 192
     660.  00:8412  19                  	ADD		HL, DE			;nota: se que repito el ADD pero la otra opción es inicializar DE y ya tarda mucho la funicón (es por velicidad)
     661.  00:8413  C3 39 84            	JP		.sumar_columna
     662.  00:8416                      .fila_1:
     663.  00:8416  11 A0 00            	LD		DE, 160
     664.  00:8419  19                  	ADD		HL, DE
     665.  00:841A  C3 39 84            	JP		.sumar_columna
     666.  00:841D                      .fila_2:
     667.  00:841D  11 80 00            	LD		DE, 128
     668.  00:8420  19                  	ADD		HL, DE
     669.  00:8421  C3 39 84            	JP		.sumar_columna
     670.  00:8424                      .fila_3:
     671.  00:8424  11 60 00            	LD		DE, 96
     672.  00:8427  19                  	ADD		HL, DE
     673.  00:8428  C3 39 84            	JP		.sumar_columna
     674.  00:842B                      .fila_4:
     675.  00:842B  11 40 00            	LD		DE, 64
     676.  00:842E  19                  	ADD		HL, DE
     677.  00:842F  C3 39 84            	JP		.sumar_columna
     678.  00:8432                      .fila_5:
     679.  00:8432  11 20 00            	LD		DE, 32
     680.  00:8435  19                  	ADD		HL, DE
     681.  00:8436  C3 39 84            	JP		.sumar_columna
     682.  00:8439                      .fila_6:
     683.  00:8439                      	;pongo fila_6 por poner ya que si es la fila 6 equiv. a primera fila del mapa y por tanto no suma fila
     684.  00:8439                      	
     685.  00:8439                      	
     686.  00:8439                      .sumar_columna:
     687.  00:8439  3A 22 A7            	LD 		 A, (prota_pos_mapx) ;POS X
     688.  00:843C  16 00               	LD		 D, 0
     689.  00:843E  5F                  	LD		 E, A
     690.  00:843F  19                  	ADD		HL, DE
     691.  00:8440                      	
     692.  00:8440                      	;resultado en BC para usar en la función pinta_tile_suelto
     693.  00:8440  44                  	LD		 B, H
     694.  00:8441  4D                  	LD		 C, L
     695.  00:8442                      	
     696.  00:8442                      	;terminado de fijar la coordenada recuperamos a para ver el tipo
     697.  00:8442  3A 44 A7            	LD		 A, (elemento_pintar_mapa)
     698.  00:8445  FE 09               	CP		 TILEGRISM
     699.  00:8447  CA 4F 84            	JP		 Z, pinta_pos_mapa_vacio
     700.  00:844A  16 13               	LD		 D, TILEPROTAM
     701.  00:844C  C3 51 84            	JP		fin_pinta_pos_mapa
     702.  00:844F                      pinta_pos_mapa_vacio:
     703.  00:844F  16 09               	LD		 D, TILEGRISM	
     704.  00:8451                      
     705.  00:8451                      fin_pinta_pos_mapa:
     706.  00:8451  C3 8D 82            	JP		pinta_tile_suelto
     707.  00:8454                      fin_posiciona_en_mapa:
     708.  00:8454                      
     709.  00:8454                      
     710.  00:8454                      
     711.  00:8454                      
     712.  00:8454                      ;;=====================================================
     713.  00:8454                      ;;EFECTO_IMAGEN_TIRA_RELIQUIA
     714.  00:8454                      ;;=====================================================	
     715.  00:8454                      ; función: 	hace que el fondo de la pantalla parpadee N veces
     716.  00:8454                      ; entrada: 	actualiza_reliquias_sn
     717.  00:8454                      ; salida: 	-
     718.  00:8454                      ; toca: 	todo
     719.  00:8454                      efecto_imagen_tira_reliquia:
     720.  00:8454  3E 14               	LD		 A, 20;RETARDOREL
     721.  00:8456  47                  	LD		 B, A
     722.  00:8457                      
     723.  00:8457                      .parpadea_fondo:
     724.  00:8457  C5                  	PUSH	BC
     725.  00:8458  21 09 A7            	LD		HL, color_bomba1
     726.  00:845B  CD F1 80            	CALL	color_pantalla
     727.  00:845E                      	
     728.  00:845E                      	;~ PUSH	BC
     729.  00:845E                      	;~ LD		 A, 255
     730.  00:845E                      	;~ LD		 B, A
     731.  00:845E                      ;~ .bucle_de_espera:
     732.  00:845E                      	;~ NOP
     733.  00:845E                      	;~ DJNZ	 .bucle_de_espera
     734.  00:845E                      	;~ POP		BC
     735.  00:845E  76                  	HALT
     736.  00:845F                      
     737.  00:845F                      	
     738.  00:845F  21 0C A7            	LD		HL, color_bomba2
     739.  00:8462  CD F1 80            	CALL	color_pantalla
     740.  00:8465  C1                  	POP		BC
     741.  00:8466  10 EF               	DJNZ	.parpadea_fondo
     742.  00:8468                      	
     743.  00:8468  21 06 A7            	LD		HL, color_base
     744.  00:846B  C3 F1 80            	JP		color_pantalla
     745.  00:846E                      fin_efecto_imagen_tira_reliquia:
     746.  00:846E                      
     747.  00:846E                      
     748.  00:846E                      
     749.  00:846E                      
     750.  00:846E                      ;=====================================================
     751.  00:846E                      ;;PINTA_ARRAY
     752.  00:846E                      ;;=====================================================	
     753.  00:846E                      ;;funcion:  (pinta el mismo tile) se le pasa un array con posiciones de tiles y coordenadas x e y y los pinta en screen 2
     754.  00:846E                      ;;entrada:	wordaux1 (pos inicio sc2 donde pintar) y wordaux2 (puntero al array a pintar), BC (posición en tilemap) , D filas y E columnas
     755.  00:846E                      ;;salida:	-
     756.  00:846E                      ;;importante: necesita de una variable wordaux1 tipo WD (wordaux1: 	DW	0)
     757.  00:846E                      ;; ejemplo llamada:
     758.  00:846E                      	;~ LD		HL,array_tiles					;guardo puntero al array a pintar (como psar por referencia)
     759.  00:846E                      	;~ LD		(wordaux2),HL					;en la variable wordaux2
     760.  00:846E                      	;~ LD		HL,SC2MAP + 256 + 32			;calcula posición en tilemap
     761.  00:846E                      	;~ LD		(wordaux1),HL					;guarda valor pos tilemap en wordaux1
     762.  00:846E                      	;~ LD		B,H								;coloca posición tilemap BC
     763.  00:846E                      	;~ LD		C,L
     764.  00:846E                      	;~ LD		D,2								;nº de filas ahora byteaux1
     765.  00:846E                      	;~ LD		E,3								;nº de columnas ahora byteaux2
     766.  00:846E                      	;~ CALL	pinta_array
     767.  00:846E                      
     768.  00:846E                      pinta_array:
     769.  00:846E  08                  	EX		AF, AF'
     770.  00:846F                      	
     771.  00:846F  3A B2 84            	LD		 A, (byteaux1)
     772.  00:8472  57                  	LD		 D, A
     773.  00:8473  3A B3 84            	LD		 A, (byteaux2)
     774.  00:8476  5F                  	LD		 E, A
     775.  00:8477                      
     776.  00:8477                      	
     777.  00:8477  2A AE 84            	LD		HL, (wordaux1)
     778.  00:847A  44                  	LD		 B, H							;coloca posición tilemap BC
     779.  00:847B  4D                  	LD		 C, L
     780.  00:847C                      	
     781.  00:847C                      	;contamos con que la posición "global" en el tilemap está ya en BC
     782.  00:847C                      	;y el puntero al array a pintar en wordaux2 y la posición en tilemap sc2 en wordaux1
     783.  00:847C                      	;inicializa
     784.  00:847C  DB 99               	IN		 A,(REGEST)		;leer registro de estado (recomendado)
     785.  00:847E                      	
     786.  00:847E                      	;coloca puntero para pintar tile según BC
     787.  00:847E  79                  	LD		 A,C			;primero byte bajo	
     788.  00:847F  D3 99               	OUT		(REGEST),A
     789.  00:8481  78                  	LD		 A,B			;después byte alto  ********************** preguntar a Fernando cómo que byte bajo es B
     790.  00:8482  F6 40               	OR		1000000b		;+64
     791.  00:8484  D3 99               	OUT		(REGEST),A
     792.  00:8486                      
     793.  00:8486                      	
     794.  00:8486  2A B0 84            	LD		HL,(wordaux2)	;HL es lo que se pintará y le he pasado el puntero del array tilemap a pintar
     795.  00:8489                      .pa_pinta_fila:
     796.  00:8489  43                  	LD		 B,E
     797.  00:848A                      .pa_pinta_columnas: 		;finta la fila (pintando las columnas)
     798.  00:848A  7E                  	LD		 A,(HL)
     799.  00:848B  D3 98               	OUT		(REGESCVDP),A	;escribe A en VRAM en la posición indicada por los dos OUT anteriores
     800.  00:848D  23                  	INC		HL
     801.  00:848E  10 FA               	DJNZ	.pa_pinta_columnas
     802.  00:8490                      	
     803.  00:8490                      	;no es una solución elegante lo de repetir código pero queda claro
     804.  00:8490                      	;por si hay otra fila
     805.  00:8490  E5                  	PUSH	HL
     806.  00:8491  2A AE 84            	LD		HL,(wordaux1)
     807.  00:8494  01 20 00            	LD		BC,32
     808.  00:8497  09                  	ADD		HL,BC
     809.  00:8498  22 AE 84            	LD		(wordaux1),HL
     810.  00:849B  44                  	LD		B,H
     811.  00:849C  4D                  	LD		C,L
     812.  00:849D  E1                  	POP		HL
     813.  00:849E                      	
     814.  00:849E  79                  	LD		 A,C			;primero byte bajo	
     815.  00:849F  D3 99               	OUT		(REGEST),A
     816.  00:84A1  78                  	LD		 A,B			;después byte alto 
     817.  00:84A2  F6 40               	OR		1000000b		;+64
     818.  00:84A4  D3 99               	OUT		(REGEST),A
     819.  00:84A6                      	
     820.  00:84A6                      	;si hay otra fila repite
     821.  00:84A6  15                  	DEC		 D
     822.  00:84A7  7A                  	LD		 A,D		;¿hay otra fila?
     823.  00:84A8  B7                  	OR		 A
     824.  00:84A9  C4 89 84            	CALL	NZ,.pa_pinta_fila
     825.  00:84AC                      	
     826.  00:84AC  08                  	EX		AF, AF'
     827.  00:84AD                      fin_pinta_array:
     828.  00:84AD  C9                  	RET
     829.  00:84AE                      ;;variables asocidas a la función pinta_array
     830.  00:84AE                      ;; por de pronto la dejo aquí
     831.  00:84AE  00 00               wordaux1:		DW	0	;almacena la posición en el tilemap 0 al 675
     832.  00:84B0  00 00               wordaux2:		DW	0	;almacena puntero a array de tiles (posiciones en realidad) a pintar (posiciones repetidas en los 2 primeros bancos)
     833.  00:84B2  00                  byteaux1:		DB	0	;nº filas Registro D
     834.  00:84B3  00                  byteaux2:		DB	0	;nº columnas Registro E
     835.  00:84B4                      
     836.  00:84B4                      
     837.  00:84B4                      
     838.  00:84B4                      
     839.  00:84B4                      ;;=====================================================
     840.  00:84B4                      ;;INICIALIZA_ANTORCHAS
     841.  00:84B4                      ;;=====================================================	
     842.  00:84B4                      ; función: 	inicializa las variables de estructuras de las antorchas
     843.  00:84B4                      ; entrada: 	antorchas, array_antorcha
     844.  00:84B4                      ; salida: 	
     845.  00:84B4                      ; toca:		HL, IX
     846.  00:84B4                      inicializa_antorchas:
     847.  00:84B4  DD 21 EF A7         	LD		IX, antorchas
     848.  00:84B8  DD 36 00 00         	LD		(IX), INACTIVA
     849.  00:84BC  21 F6 A7            	LD		HL, array_antorcha
     850.  00:84BF  DD 74 01            	LD		(IX + 1), H
     851.  00:84C2  DD 75 02            	LD		(IX + 2), L
     852.  00:84C5  DD 36 03 88         	LD		(IX + 3), POSANTOR1
     853.  00:84C9  DD 36 04 97         	LD		(IX + 4), POSANTOR2
     854.  00:84CD  DD 36 05 00         	LD		(IX + 5), 0
     855.  00:84D1  DD 36 06 0A         	LD		(IX + 6), RESETLLAMA
     856.  00:84D5                      fin_inicializa_antorchas:
     857.  00:84D5  C9                  	RET
     858.  00:84D6                      
     859.  00:84D6                      
     860.  00:84D6                      ;;=====================================================
     861.  00:84D6                      ;;INICIALIZA_esqueletos
     862.  00:84D6                      ;;=====================================================	
     863.  00:84D6                      ; función: 	inicializa las variables de estructuras de los esqueletos
     864.  00:84D6                      ; entrada: 	esqueletos, array_esqueletos
     865.  00:84D6                      ; salida: 	
     866.  00:84D6                      ; toca:		HL, IX
     867.  00:84D6                      inicializa_esqueletos:
     868.  00:84D6  DD 21 F9 A7         	LD		IX, esqueletos
     869.  00:84DA  DD 36 00 00         	LD		(IX), INACTIVA
     870.  00:84DE  21 00 A8            	LD		HL, array_esqueleto
     871.  00:84E1  DD 74 01            	LD		(IX + 1), H
     872.  00:84E4  DD 75 02            	LD		(IX + 2), L
     873.  00:84E7  DD 36 03 88         	LD		(IX + 3), POSESQUEL1
     874.  00:84EB  DD 36 04 95         	LD		(IX + 4), POSESQUEL2
     875.  00:84EF  DD 36 05 00         	LD		(IX + 5), 0
     876.  00:84F3  DD 36 06 0A         	LD		(IX + 6), RESETESQUEL
     877.  00:84F7                      fin_inicializa_esqueletos:
     878.  00:84F7  C9                  	RET
     879.  00:84F8                      	
     880.  00:84F8                      	
     881.  00:84F8                      ;;=====================================================
     882.  00:84F8                      ;;PINTA_ANTORCHAS
     883.  00:84F8                      ;;=====================================================	
     884.  00:84F8                      ; función: 	pinta las antorchas con valores base
     885.  00:84F8                      ; entrada: 	antorchas, array_antorcha
     886.  00:84F8                      ; salida: 	
     887.  00:84F8                      ; toca:		HL
     888.  00:84F8                      pinta_antorchas:
     889.  00:84F8  DD 21 EF A7         	LD		IX, antorchas
     890.  00:84FC                      	
     891.  00:84FC                      	;hay que pintarlas?
     892.  00:84FC  3A F5 A3            	LD		 A, (habitacion_extras)
     893.  00:84FF  CB 47               	BIT		 0, A
     894.  00:8501  C2 09 85            	JP		NZ, .hayantorchas			;si el bit 0 de extras es 0 no se pintan antorchas
     895.  00:8504  DD 36 00 00         	LD		(IX), INACTIVA
     896.  00:8508  C9                  	RET
     897.  00:8509                      	
     898.  00:8509                      .hayantorchas:
     899.  00:8509  DD 36 00 01         	LD		(IX), ACTIVA
     900.  00:850D                      	;pinta antorcha izquierdda
     901.  00:850D  DD 66 01            	LD		 H, (IX + 1)
     902.  00:8510  DD 6E 02            	LD		 L, (IX + 2)
     903.  00:8513  22 B0 84            	LD		(wordaux2), HL				;guarda pos array en wordaux2
     904.  00:8516                      	
     905.  00:8516  21 88 18            	LD		HL, TILMAP + POSANTOR1		;calcula posición en tilemap
     906.  00:8519  22 AE 84            	LD		(wordaux1), HL				;guarda valor pos tilemap en wordaux1
     907.  00:851C                      
     908.  00:851C  3E 03               	LD		 A, 3						;nº de filas	
     909.  00:851E  32 B2 84            	LD		(byteaux1), A
     910.  00:8521  3E 01               	LD		 A, 1						;nº de columnas
     911.  00:8523  32 B3 84            	LD		(byteaux2), A				
     912.  00:8526                      	
     913.  00:8526  CD 6E 84            	CALL	pinta_array
     914.  00:8529                      	
     915.  00:8529                      	;pinta antorcha derecha
     916.  00:8529  21 97 18            	LD		HL, TILMAP + POSANTOR2		;calcula posición en tilemap
     917.  00:852C  22 AE 84            	LD		(wordaux1), HL				;guarda valor pos tilemap en wordaux1
     918.  00:852F                      	
     919.  00:852F  C3 6E 84            	JP		pinta_array
     920.  00:8532                      fin_pinta_antorchas:
     921.  00:8532                      
     922.  00:8532                      
     923.  00:8532                      
     924.  00:8532                      ;;=====================================================
     925.  00:8532                      ;;ACTUALIZA_ELEMENTOS_FONDO
     926.  00:8532                      ;;=====================================================	
     927.  00:8532                      ; función: 	de los elementos que pueda haber en el fondo de la pared (pantalla) actualiza si procede
     928.  00:8532                      ;			actualmente: antorchas y a futuro esqueletos
     929.  00:8532                      ; entrada: 	
     930.  00:8532                      ; salida: 	
     931.  00:8532                      ; toca:		
     932.  00:8532                      actualiza_elementos_fondo:
     933.  00:8532                      .examina_antorchas:
     934.  00:8532  DD 21 EF A7         	LD		IX, antorchas
     935.  00:8536  DD 7E 00            	LD		 A, (IX)
     936.  00:8539  B7                  	OR		 A
     937.  00:853A  C3 40 85            	JP 	 	.examina_esqueletos
     938.  00:853D                      	
     939.  00:853D  CD 41 85            	CALL	flip_llamas_antorchas
     940.  00:8540                      .examina_esqueletos:
     941.  00:8540                      fin_actualiza_elementos_fondo:
     942.  00:8540  C9                  	RET
     943.  00:8541                      
     944.  00:8541                      
     945.  00:8541                      
     946.  00:8541                      ;;=====================================================
     947.  00:8541                      ;;FLIP_LLAMAS_ANTORCHAS
     948.  00:8541                      ;;=====================================================	
     949.  00:8541                      ; función: 	modifica las llamas de las antorchas
     950.  00:8541                      ; entrada: 	
     951.  00:8541                      ; salida: 	
     952.  00:8541                      ; toca:		
     953.  00:8541                      flip_llamas_antorchas:
     954.  00:8541  DD 21 EF A7         	LD		IX, antorchas
     955.  00:8545                      	;tiene que cambiar de llama?
     956.  00:8545  DD 7E 06            	LD		 A, (IX + 6)
     957.  00:8548  3D                  	DEC		 A
     958.  00:8549  DD 77 06            	LD		 (IX + 6), A
     959.  00:854C                      	;no
     960.  00:854C  C0                  	RET		NZ
     961.  00:854D                      	;si
     962.  00:854D  DD 36 06 0A         	LD		(IX + 6), RESETLLAMA	
     963.  00:8551                      	
     964.  00:8551                      	;qué llama toca?
     965.  00:8551  DD 7E 05            	LD		 A, (IX + 5)
     966.  00:8554  B7                  	OR		 A
     967.  00:8555  CA 79 85            	JP		 Z, .llama_par
     968.  00:8558                      .llama_impar
     969.  00:8558                      	;cambio a llama par
     970.  00:8558  AF                   	XOR		 A
     971.  00:8559  DD 77 05            	LD		(IX + 5), A
     972.  00:855C                      	;pinto llamas
     973.  00:855C  01 00 18            	LD		BC, TILMAP
     974.  00:855F  3E 88               	LD		 A, POSANTOR1
     975.  00:8561  CD E5 80            	CALL	suma_A_BC
     976.  00:8564  16 C4               	LD		 D, MAPLLAMA1
     977.  00:8566  CD 8D 82            	CALL	pinta_tile_suelto
     978.  00:8569                      	
     979.  00:8569  01 00 18            	LD		BC, TILMAP
     980.  00:856C  3E 97               	LD		 A, POSANTOR2
     981.  00:856E  CD E5 80            	CALL	suma_A_BC
     982.  00:8571  16 C5               	LD		 D, MAPLLAMA2
     983.  00:8573  CD 8D 82            	CALL	pinta_tile_suelto	
     984.  00:8576  C3 98 85            	JP		fin_flip_llamas_antorchas
     985.  00:8579                      .llama_par
     986.  00:8579                      	;cambio a llama par
     987.  00:8579  3E 01                	LD		 A, 1
     988.  00:857B  DD 77 05            	LD		(IX + 5), A
     989.  00:857E                      	;pinto llamas
     990.  00:857E  01 00 18            	LD		BC, TILMAP
     991.  00:8581  3E 88               	LD		 A, POSANTOR1
     992.  00:8583  CD E5 80            	CALL	suma_A_BC
     993.  00:8586  16 C5               	LD		 D, MAPLLAMA2
     994.  00:8588  CD 8D 82            	CALL	pinta_tile_suelto
     995.  00:858B                      	
     996.  00:858B  01 00 18            	LD		BC, TILMAP
     997.  00:858E  3E 97               	LD		 A, POSANTOR2
     998.  00:8590  CD E5 80            	CALL	suma_A_BC
     999.  00:8593  16 C4               	LD		 D, MAPLLAMA1
    1000.  00:8595  C3 8D 82            	JP		pinta_tile_suelto
    1001.  00:8598                      fin_flip_llamas_antorchas:
    1002.  00:8598  C9                  	RET
    1003.  00:8599                      
    1004.  00:8599                      
    1005.  00:8599                      
    1006.  00:8599                      
     119   00:8599                      	
     120   00:8599                      	include "subr_sprites.asm"
       1.  00:8599                      
       2.  00:8599                      ;;=====================================================
       3.  00:8599                      ;;SUBRUTINAS ENCARGADAS DE MANEJAR LOS SPRITES
       4.  00:8599                      ;;=====================================================	
       5.  00:8599                      
       6.  00:8599                      
       7.  00:8599                      ;; PREGUNTAR SI A FERNANDO SI ES MEJOR USAR LISTAS O ALGO PARA AHORRAR CÓDIGO
       8.  00:8599                      
       9.  00:8599                      
      10.  00:8599                      
      11.  00:8599                      
      12.  00:8599                      ;;=====================================================
      13.  00:8599                      ;;CARGA_PATRONES_SPRITES_NIVEL
      14.  00:8599                      ;;=====================================================	
      15.  00:8599                      ; función: 	examina el nivel y carga los patrones específicos necesarios
      16.  00:8599                      ; entrada: 	-
      17.  00:8599                      ; salida: 	-
      18.  00:8599                      ; toca: 	-
      19.  00:8599                      carga_patrones_sprites_nivel:
      20.  00:8599                      	
      21.  00:8599  CD A4 85            	CALL 	carga_patrones_nivel_comunes
      22.  00:859C                      	
      23.  00:859C                      	;carga atrones no comunes
      24.  00:859C  3A 1F A7            	LD		 A, (prota_nivel)
      25.  00:859F  B7                  	OR		 A
      26.  00:85A0  CA B0 85            	JP		 Z, carga_patrones_sprites_nivel1
      27.  00:85A3                      	
      28.  00:85A3                      	
      29.  00:85A3                      fin_carga_patrones_sprites_nivel:
      30.  00:85A3  C9                  	RET		;dejo este ret de momento pero cuando la subrutina esté terminada sobrará
      31.  00:85A4                      
      32.  00:85A4                      	;RET comparo numeros con jp para incluir el RET con lo que el último ret me sobra
      33.  00:85A4                      
      34.  00:85A4                      ;;=====================================================
      35.  00:85A4                      ;;CARGA_PATRONES_SPRITES_NIVEL_COMUNES
      36.  00:85A4                      ;;=====================================================	
      37.  00:85A4                      ; función: 	carga los patrones comunes en todos los niveles
      38.  00:85A4                      ; entrada: 	-
      39.  00:85A4                      ; salida: 	-
      40.  00:85A4                      ; toca: 	-
      41.  00:85A4                      carga_patrones_nivel_comunes:	
      42.  00:85A4  21 74 9A            	LD		HL, sprites_comunes
      43.  00:85A7  11 00 38            	LD		DE, SPRTBL
      44.  00:85AA  01 C0 00            	LD		BC, fin_sprites_comunes-sprites_comunes
      45.  00:85AD  C3 5C 00            	JP		LDIRVM
      46.  00:85B0                      fin_carga_patrones_nivel_comunes:
      47.  00:85B0                      
      48.  00:85B0                      
      49.  00:85B0                      ;;=====================================================
      50.  00:85B0                      ;;CARGA_PATRONES_SPRITES_NIVEL1
      51.  00:85B0                      ;;=====================================================	
      52.  00:85B0                      ; función: 	copia los patrones de los sprites que e van a usar en el nivel 1 en vram
      53.  00:85B0                      ; entrada: 	-
      54.  00:85B0                      ; salida: 	-
      55.  00:85B0                      ; toca: 	-
      56.  00:85B0                      carga_patrones_sprites_nivel1:
      57.  00:85B0                      
      58.  00:85B0                      
      59.  00:85B0                      	;~ ;sprite sprite_reliquia
      60.  00:85B0                      	;~ LD		HL,sprite_reliquia
      61.  00:85B0                      	;~ LD		DE,#3880
      62.  00:85B0                      	;~ LD		BC,32				;32 bytes (sprites de 2 x 2)
      63.  00:85B0                      	;~ CALL	LDIRVM
      64.  00:85B0                      
      65.  00:85B0                      fin_carga_patrones_sprites:
      66.  00:85B0  C9                  	RET
      67.  00:85B1                      
      68.  00:85B1                      
      69.  00:85B1                      ;;=====================================================
      70.  00:85B1                      ;;ACTUALIZA_ARRAY_SPRITES_VRAM
      71.  00:85B1                      ;;=====================================================	
      72.  00:85B1                      ; función: 	copia el array con los valores de los sprites (pos, color, plano) en VRAM
      73.  00:85B1                      ; entrada: 	-
      74.  00:85B1                      ; salida: 	-
      75.  00:85B1                      ; toca: 	todos los registros. Como me interesa la velocidad, si necesito copiar de algo lo hago fuera
      76.  00:85B1                      render_sprites:
      77.  00:85B1                      	;volcando el array con toda la info de los sprites a la zona de atributos de sprites
      78.  00:85B1  21 83 A8            	LD		HL,array_sprites
      79.  00:85B4  11 00 1B            	LD		DE,SPRART
      80.  00:85B7  01 80 00            	LD		BC,4 * 32				;32 sprites x 4 bytes controlando el sprite (Y, X, plano, color)
      81.  00:85BA  C3 5C 00            	JP		LDIRVM
      82.  00:85BD                      fin_actualiza_array_sprites_vram:
      83.  00:85BD                      
      84.  00:85BD                      
      85.  00:85BD                      ;;=====================================================
      86.  00:85BD                      ;;VUELCA_RESULTADO_PUNTOMIRA_ARRAY
      87.  00:85BD                      ;;=====================================================	
      88.  00:85BD                      ; función: 	coloca los valores del punto de mira en la variable array_sprites para ser volcados en VRAM
      89.  00:85BD                      ; entrada: 	array_sprites_pm, prota.XXXXX
      90.  00:85BD                      ; salida: 	-
      91.  00:85BD                      ; toca: 	-
      92.  00:85BD                      vuelca_resultado_puntomira_array:
      93.  00:85BD  DD 21 83 A8         	LD		IX, array_sprites_pm
      94.  00:85C1                      	;posición y de los dos sprites que conforman el punto de mira
      95.  00:85C1  3A 10 A7            	LD		 A, (prota.posy)
      96.  00:85C4  DD 77 00            	LD		(IX  ), A
      97.  00:85C7  DD 77 04            	LD		(IX+4), A
      98.  00:85CA                      	;posición x de los dos sprites que conforman el punto de mira
      99.  00:85CA  3A 0F A7            	LD		 A, (prota.posx)
     100.  00:85CD  DD 77 01            	LD		(IX+1), A
     101.  00:85D0  DD 77 05            	LD		(IX+5), A
     102.  00:85D3                      	;plano
     103.  00:85D3  DD 36 02 00         	LD		(IX+2), 0
     104.  00:85D7  DD 36 06 04         	LD		(IX+6), 4	;al ser sprites de 16x16 hay que ir de 4 en 4
     105.  00:85DB                      	;color
     106.  00:85DB  3A 11 A7            	LD		 A, (prota.escena)
     107.  00:85DE  B7                  	OR		 A
     108.  00:85DF  C2 EB 85            	JP		NZ,.codigo_color_2
     109.  00:85E2                      .codigo_color_1:
     110.  00:85E2  DD 36 03 0F         	LD		(IX+3), COLBLANCO
     111.  00:85E6  DD 36 07 08         	LD		(IX+7), COLROJO
     112.  00:85EA  C9                  	RET
     113.  00:85EB                      .codigo_color_2:
     114.  00:85EB  DD 36 03 08         	LD		(IX+3), COLROJO
     115.  00:85EF  DD 36 07 0F         	LD		(IX+7), COLBLANCO
     116.  00:85F3  C9                  	RET
     117.  00:85F4                      fin_vuelca_resultado_puntomira_array:
     118.  00:85F4                      
     119.  00:85F4                      
     120.  00:85F4                      ;;=====================================================
     121.  00:85F4                      ;;CHECK_PLAYER
     122.  00:85F4                      ;;=====================================================	
     123.  00:85F4                      ; función: 	MIRA EL CONTROL Y APLICA LA LOGICA DE MOVIMIENTO DEL PROTAGONISTA
     124.  00:85F4                      ; entrada: 	-
     125.  00:85F4                      ; salida: 	-
     126.  00:85F4                      ; toca: 	A
     127.  00:85F4                      check_player:
     128.  00:85F4  CD 93 86            	CALL	update_controllers_status
     129.  00:85F7  B7                  	OR		 A
     130.  00:85F8  C8                  	RET		 Z						;si no se ha pulsado nada no se necesita mirar nada
     131.  00:85F9                      
     132.  00:85F9  CB 1F               	RR		 A
     133.  00:85FB  DC 14 86            	CALL	 C, mueve_arriba
     134.  00:85FE  CB 1F               	RR		 A
     135.  00:8600  DC 30 86            	CALL	 C, mueve_abajo
     136.  00:8603  CB 1F               	RR		 A
     137.  00:8605  DC 3F 86            	CALL	 C, mueve_izquierda
     138.  00:8608  CB 1F               	RR		 A
     139.  00:860A  DC 21 86            	CALL	 C, mueve_derecha
     140.  00:860D                      	
     141.  00:860D                      	;zona para mirar disparo Recibe A que tendrá 0000 0 0 X-letra M X-espacio 
     142.  00:860D  CD 4C 86            	CALL	mira_disparo
     143.  00:8610                      	
     144.  00:8610  C3 BD 85            	JP		vuelca_resultado_puntomira_array
     145.  00:8613                      f;in_check_player:
     146.  00:8613  C9                  	RET
     147.  00:8614                      
     121   00:8614                      	
     122   00:8614                      	include "subr_teclado_joy.asm"
       1.  00:8614                      ;;=====================================================
       2.  00:8614                      ;;SUBRUTINAS QUE CAPTURN EL JOYSTICK Y TECLADO Y MUEVEN PUNTO DE MIRA
       3.  00:8614                      ;;=====================================================
       4.  00:8614                      
       5.  00:8614                      ;;=====================================================
       6.  00:8614                      ;;MUEVE_ARRIBA
       7.  00:8614                      ;;=====================================================	
       8.  00:8614                      ; función: 	decrementa y si se no sale de los límites el valor del punto de mira a la derecha
       9.  00:8614                      ; entrada: 	-
      10.  00:8614                      ; salida: 	-
      11.  00:8614                      ; toca: 	-
      12.  00:8614                      mueve_arriba:
      13.  00:8614  F5                  	PUSH		AF
      14.  00:8615                      	
      15.  00:8615  3A 10 A7            	LD		 	 A, (prota.posy)
      16.  00:8618  3D                  	DEC			 A
      17.  00:8619  CA 1F 86            	JP			 Z,.no_decrementa_y
      18.  00:861C  32 10 A7            	LD			(prota.posy), A
      19.  00:861F                      	
      20.  00:861F                      .no_decrementa_y:
      21.  00:861F  F1                  	POP			AF
      22.  00:8620                      fin_mueve_arriba:
      23.  00:8620  C9                  	RET
      24.  00:8621                      
      25.  00:8621                      
      26.  00:8621                      ;;=====================================================
      27.  00:8621                      ;;MUEVE_DERECHA
      28.  00:8621                      ;;=====================================================	
      29.  00:8621                      ; función: 	incrementa si se no sale de los límites el valor del punto de mira a la derecha
      30.  00:8621                      ; entrada: 	-
      31.  00:8621                      ; salida: 	-
      32.  00:8621                      ; toca: 	-
      33.  00:8621                      mueve_derecha:
      34.  00:8621  F5                  	PUSH		AF
      35.  00:8622                      	
      36.  00:8622  3A 0F A7            	LD		 	 A, (prota.posx)
      37.  00:8625  3C                  	INC			 A
      38.  00:8626  FE EF               	CP			 A, LIMPANTDER - 16
      39.  00:8628  CA 2E 86            	JP			 Z, .no_incrementa_x
      40.  00:862B  32 0F A7            	LD			(prota.posx), A
      41.  00:862E                      	
      42.  00:862E                      .no_incrementa_x:
      43.  00:862E  F1                  	POP			AF
      44.  00:862F                      fin_mueve_derecha:
      45.  00:862F  C9                  	RET
      46.  00:8630                      
      47.  00:8630                      
      48.  00:8630                      ;;=====================================================
      49.  00:8630                      ;;MUEVE_ABAJO
      50.  00:8630                      ;;=====================================================	
      51.  00:8630                      ; función: 	incrementa y si se no sale de los límites el valor del punto de mira abajo
      52.  00:8630                      ; entrada: 	-
      53.  00:8630                      ; salida: 	-
      54.  00:8630                      ; toca: 	-
      55.  00:8630                      mueve_abajo:
      56.  00:8630  F5                  	PUSH		AF
      57.  00:8631                      	
      58.  00:8631  3A 10 A7            	LD		 	 A, (prota.posy)
      59.  00:8634  3C                  	INC			 A
      60.  00:8635  FE 70               	CP			 A, LIMPANTABA - 16
      61.  00:8637  CA 3D 86            	JP			 Z,.no_incrementa_y
      62.  00:863A  32 10 A7            	LD			(prota.posy), A
      63.  00:863D                      	
      64.  00:863D                      .no_incrementa_y:
      65.  00:863D  F1                  	POP			AF
      66.  00:863E                      fin_mueve_abajo:
      67.  00:863E  C9                  	RET
      68.  00:863F                      	
      69.  00:863F                      	
      70.  00:863F                      ;;=====================================================
      71.  00:863F                      ;;MUEVE_IZQUIERDA
      72.  00:863F                      ;;=====================================================	
      73.  00:863F                      ; función: 	decrementa x si se no sale de los límites el valor del punto de mira a la izquierda
      74.  00:863F                      ; entrada: 	-
      75.  00:863F                      ; salida: 	-
      76.  00:863F                      ; toca: 	-
      77.  00:863F                      mueve_izquierda:
      78.  00:863F  F5                  	PUSH		AF
      79.  00:8640                      	
      80.  00:8640  3A 0F A7            	LD		 	 A, (prota.posx)
      81.  00:8643  3D                  	DEC			 A
      82.  00:8644                      ;	CP			 A, LIMPANTIZQ
      83.  00:8644  CA 4A 86            	JP			 Z,.no_decrementa_x
      84.  00:8647  32 0F A7            	LD			(prota.posx), A
      85.  00:864A                      	
      86.  00:864A                      .no_decrementa_x:
      87.  00:864A  F1                  	POP			AF
      88.  00:864B                      fin_mueve_izquierda:
      89.  00:864B  C9                  	RET
      90.  00:864C                      
      91.  00:864C                      
      92.  00:864C                      
      93.  00:864C                      ;;=====================================================
      94.  00:864C                      ;;MIRA_DISPARO
      95.  00:864C                      ;;=====================================================	
      96.  00:864C                      ; función: 	Mira si se ha pulsado alguno de los dos disparos
      97.  00:864C                      ; entrada: 	A que tendrá 0000 0 0 X-letra M X-espacio 
      98.  00:864C                      ; salida: 	-
      99.  00:864C                      ; toca: 	A, B
     100.  00:864C                      mira_disparo:
     101.  00:864C                      .mira_boton_pulsado1:
     102.  00:864C  CB 1F               	RR		 A						;preparo en el carry si se ha pulsado botón 1
     103.  00:864E  D2 77 86            	JP		 NC, .mira_boton_pulsado2					
     104.  00:8651  F5                  	PUSH	AF						;copia A para usarlo después
     105.  00:8652                      	;se ha pulsado barra o boton 1
     106.  00:8652  3A 14 A7            	LD		 A, (prota.cadencia)
     107.  00:8655  B7                  	OR		 A
     108.  00:8656  CA 64 86            	JP		 Z, .efectua_disparo	;toca efectuar disparo realmente porque se ha pulsado lo suficiente el disparo
     109.  00:8659                      .no_efectua_disparo: ;IF
     110.  00:8659  3D                  		DEC		 A
     111.  00:865A  32 14 A7            		LD		(prota.cadencia), A	;resto cadencia hasta próximo disparo "real" (no automático por haber pulsado una tecla e ir demasiado rápido)
     112.  00:865D  AF                  		XOR		 A 
     113.  00:865E  32 11 A7            		LD		(prota.escena), A
     114.  00:8661  C3 76 86            		JP		.fin_mira_disparo1
     115.  00:8664                      .efectua_disparo:	;ELSE
     116.  00:8664                      		;cambio colores del sprite
     117.  00:8664  3A 11 A7            		LD		 A, (prota.escena)
     118.  00:8667  2F                  		CPL		 
     119.  00:8668  32 11 A7            		LD		(prota.escena), A
     120.  00:866B                      		;reseteo cadencia para el próximo disparo
     121.  00:866B  3E 04               		LD		 A, LIMCADENCIA						;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
     122.  00:866D  32 14 A7            		LD		 (prota.cadencia), A				;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
     123.  00:8670                      		;ejecuto sonido								;; ajustar cadencia y que cuando el disparo sea efectivo se reseteen los colores
     124.  00:8670  AF                  		XOR		 A
     125.  00:8671  0E 01               		LD		 C, 1
     126.  00:8673  CD 3B 8D            		CALL	ayFX_INIT	
     127.  00:8676                      .fin_mira_disparo1
     128.  00:8676                      
     129.  00:8676  F1                  	POP		AF
     130.  00:8677                      .mira_boton_pulsado2:
     131.  00:8677  CB 1F               	RR		 A
     132.  00:8679  D0                  	RET		 NC
     133.  00:867A                      	;se ha pulsado shift o boton 2
     134.  00:867A                      	
     135.  00:867A  3A 21 A7            	LD		 A, (prota_reliquias)	;miro si le quedan reliquias
     136.  00:867D  B7                  	OR		 A
     137.  00:867E  C8                  	RET		 Z						;si no le quedan salgo ya
     138.  00:867F                      	
     139.  00:867F                      	;actuaciones si se usa la reliquia botón 2 o M y quedn reliquias.. (antes ya se puso el valor en A)
     140.  00:867F  3A 21 A7            	LD		A, (prota_reliquias)
     141.  00:8682  3D                  	DEC		 A
     142.  00:8683  32 21 A7            	LD		(prota_reliquias), A
     143.  00:8686                      	
     144.  00:8686  3E 01               	LD		 A, 1
     145.  00:8688  0E 01               	LD		 C, 1
     146.  00:868A  CD 3B 8D            	CALL	ayFX_INIT
     147.  00:868D                      	
     148.  00:868D  CD 54 84            	CALL 	efecto_imagen_tira_reliquia
     149.  00:8690                      	
     150.  00:8690  C3 72 82            	JP		pinta_reliquias
     151.  00:8693                      fin_mira_disparo:
     152.  00:8693                      ;	RET		
     153.  00:8693                      
     154.  00:8693                      
     155.  00:8693                      ;;============================================================
     156.  00:8693                      ;;Código de D. Fernando García (BitVision) (al que siempre le estaré agradecido)
     157.  00:8693                      ;check_8th_keyboard_row
     158.  00:8693                      ;read_joy_0
     159.  00:8693                      ;check_8th_keyboard_row
     160.  00:8693                      ;check_4th_keyboard_row
     161.  00:8693                      ;;============================================================
     162.  00:8693                      ;;  usa constantes:
     163.  00:8693                      ;PSG_A  equ  0a0h  ;reg address
     164.  00:8693                      ;PSG_W  equ  0a1h  ;reg data WR
     165.  00:8693                      ;PSG_R  equ  0a2h  ;reg data
     166.  00:8693                      
     167.  00:8693                      ;;=====================================================
     168.  00:8693                      ;;update_controllers_status
     169.  00:8693                      ;;=====================================================	
     170.  00:8693                      ;depends on the next rountine
     171.  00:8693                      ;  returns
     172.  00:8693                      ;  a - 0P2TRLDU
     173.  00:8693                      
     174.  00:8693                      update_controllers_status:
     175.  00:8693  CD DE 86                 call  check_8th_keyboard_row
     176.  00:8696                      [4]  rrc    a
     176.  00:8696  CB 0F CB 0F CB 0F CB 0F 
     177.  00:869E  47                       ld    b,a    		;save for later  xxxTRDUL
     178.  00:869F                      
     179.  00:869F  E6 01                    and    #01    		;save L
     180.  00:86A1  CB 27                    sla    a
     181.  00:86A3  CB 27                    sla    a    		;now 00000L00
     182.  00:86A5  4F                       ld    c,a    		;save for later
     183.  00:86A6                      
     184.  00:86A6  78                       ld    a,b    		;again we've got xxxTRDUL. I am interested on leaving 000000DU on a
     185.  00:86A7  CB 3F                    srl    a
     186.  00:86A9  E6 03                    and    00000011b
     187.  00:86AB                      						;we've got 000000DU on a
     188.  00:86AB  B1                       or    c    		;now we've got 00000LDU
     189.  00:86AC  4F                       ld    c,a    		;save for later
     190.  00:86AD                      
     191.  00:86AD  78                       ld    a,b
     192.  00:86AE  E6 18                    and    00011000b 	;we've got 000TR000
     193.  00:86B0  B1                       or    c
     194.  00:86B1                           ;finally    000TRLDU
     195.  00:86B1                      
     196.  00:86B1                           ;and    00000100   ;preserve just
     197.  00:86B1  47                       ld    b,a    		;save for later
     198.  00:86B2  CD EC 86                 call  check_4th_keyboard_row      ;check M & P
     199.  00:86B5  F5                       push  af
     200.  00:86B6  E6 04                    and    00000100b	;filter just M
     201.  00:86B8  87                       add    a
     202.  00:86B9  87                       add    a
     203.  00:86BA  87                       add    a           ;shift 3th to 6th bit
     204.  00:86BB  B0                       or    b           	;merge with previous
     205.  00:86BC  47                       ld    b,a
     206.  00:86BD                      
     207.  00:86BD  CD CA 86                 call  read_joy_0
     208.  00:86C0  E6 3F                    and    00111111b  	;we want just 002TRLDU  from joystick    (2 is second trigger)
     209.  00:86C2  B0                       or    b      		;added 000TRLDU from keyboard
     210.  00:86C3  47                       ld    b,a      	;save for later
     211.  00:86C4  F1                       pop    af      	; let's check on P
     212.  00:86C5                      
     213.  00:86C5  E6 20                    and    00100000b
     214.  00:86C7  87                       add    a      		;P status on 6th bit  ... so 0P2TRLDU
     215.  00:86C8  B0                       or    b
     216.  00:86C9                      
     217.  00:86C9  C9                       ret
     218.  00:86CA                      
     219.  00:86CA                      
     220.  00:86CA                      ;ret
     221.  00:86CA                      ;  a -            xx2TRLDU
     222.  00:86CA                      read_joy_0:
     223.  00:86CA  F3                         di
     224.  00:86CB  3E 0F                      ld    a,15
     225.  00:86CD  D3 A0                      out    [PSG_A],a
     226.  00:86CF  DB A2                      in    a,[PSG_R]
     227.  00:86D1  E6 BF                      and    10111111b        ;joy0
     228.  00:86D3                      
     229.  00:86D3  D3 A1                      out    [PSG_W],a        ;set joy0
     230.  00:86D5                      
     231.  00:86D5  3E 0E                      ld    a,14
     232.  00:86D7  D3 A0                      out    [PSG_A],a
     233.  00:86D9  DB A2                      in    a,[PSG_R]
     234.  00:86DB                      
     235.  00:86DB  FB                         ei
     236.  00:86DC  2F                         cpl
     237.  00:86DD                      
     238.  00:86DD  C9                         ret
     239.  00:86DE                      
     240.  00:86DE                      
     241.  00:86DE                      ;ret
     242.  00:86DE                      ;  a -      RDULxxxT
     243.  00:86DE                      check_8th_keyboard_row:
     244.  00:86DE  F3                       di
     245.  00:86DF  DB AA                    in    a,(#aa)
     246.  00:86E1  E6 F0                    and    #f0
     247.  00:86E3  F6 08                    or    8
     248.  00:86E5  D3 AA                    out    (#aa),a
     249.  00:86E7  DB A9                    in    a,(#a9)
     250.  00:86E9  FB                       ei
     251.  00:86EA  2F                       cpl
     252.  00:86EB                      
     253.  00:86EB  C9                       ret
     254.  00:86EC                      
     255.  00:86EC                      
     256.  00:86EC                      ;ret
     257.  00:86EC                      ;  a -      xxxxxMxx
     258.  00:86EC                      check_4th_keyboard_row:
     259.  00:86EC  F3                       di
     260.  00:86ED  DB AA                    in    a,(#aa)
     261.  00:86EF  E6 F0                    and    #f0
     262.  00:86F1  F6 04                    or    4
     263.  00:86F3  D3 AA                    out    (#aa),a
     264.  00:86F5  DB A9                    in    a,(#a9)
     265.  00:86F7  FB                       ei
     266.  00:86F8  2F                       cpl
     267.  00:86F9                      
     268.  00:86F9  C9                       ret
     269.  00:86FA                      
     270.  00:86FA                      ;--------------------------------------------
     271.  00:86FA                      
     272.  00:86FA                      
     273.  00:86FA                      
     274.  00:86FA                      
     275.  00:86FA                      
     276.  00:86FA                      
     277.  00:86FA                      
     278.  00:86FA                      
     123   00:86FA                      	
     124   00:86FA                      	include "subr_sonido.asm"
       1.  00:86FA                      
       2.  00:86FA                      ;;=====================================================
       3.  00:86FA                      ;;SUBRUTINAS PARA SONIDOS
       4.  00:86FA                      ;;=====================================================	
       5.  00:86FA                      
       6.  00:86FA                      ;;=====================================================
       7.  00:86FA                      ;;INICIALIZA_REPLAYER_EFECTOS_INTERRUPCIONES
       8.  00:86FA                      ;;=====================================================	
       9.  00:86FA                      ; función: 	inicializa: replayer de música, player de efectos e interrupciones
      10.  00:86FA                      ; entrada: 	-
      11.  00:86FA                      ; salida: 	-
      12.  00:86FA                      ; toca: 	HL, A
      13.  00:86FA                      inicializa_replayer_efectos_interrupciones:
      14.  00:86FA  F3                  	DI
      15.  00:86FB                      
      16.  00:86FB                      	;inicializacion de replayer musical
      17.  00:86FB  21 A3 8D            	LD		HL, song-99			; hl <- initial address of module - 99
      18.  00:86FE  CD 3A 87            	CALL	PT3_INIT			; Inits PT3 player
      19.  00:8701                      		
      20.  00:8701                      	;inicializacion del reproductor de efectos sonoros
      21.  00:8701  21 6E 97            	LD		HL, sfx_bank
      22.  00:8704  CD 29 8D            	CALL	ayFX_SETUP
      23.  00:8707                      	
      24.  00:8707                      	;Engancha nuestra rutina de servicio al gancha que deja preparado la BIOS cuando se termina de pintar la pantalla (50 o 60 veces por segundo)
      25.  00:8707  3E C3               	LD		A, #C3
      26.  00:8709  32 9F FD            	LD		[H.TIMI], A
      27.  00:870C  21 14 87            	LD		HL, subrutina_isr
      28.  00:870F  22 A0 FD            	LD		[H.TIMI+1], HL
      29.  00:8712                      	
      30.  00:8712  FB                  	EI		;optimizacion:
      31.  00:8713                      			;piensa que las dos ultimas lineas podrian haber sido: 
      32.  00:8713                      			;ei						;primero ei
      33.  00:8713                      			;ld		[H.TIMI+1],hl	;luego este ld
      34.  00:8713                      									;PENSAR (y consultar ) PORQUE!!!!
      35.  00:8713                      fin_inicializa_replayer_efectos_interrupciones:
      36.  00:8713  C9                  	RET
      37.  00:8714                      
      38.  00:8714                      
      39.  00:8714                      
      40.  00:8714                      ;;=====================================================
      41.  00:8714                      ;;NUESTRA_ISR
      42.  00:8714                      ;;=====================================================	
      43.  00:8714                      ; función: 	envía datos al PSG + toca un trozo de música + toca trozo de 
      44.  00:8714                      ; entrada: 	-
      45.  00:8714                      ; salida: 	-
      46.  00:8714                      ; toca: 	HL, A
      47.  00:8714                      subrutina_isr:
      48.  00:8714  CD 7F 8C            	CALL	PT3_ROUT			;envia los datos a los registros del PSG
      49.  00:8717  CD 87 8B            	CALL	PT3_PLAY			;calcula el siguiente 'trocito' de musica que sera enviado al proxima vez
      50.  00:871A  C3 71 8D            	JP		ayFX_PLAY			;calcula el siguiente 'trocito' de efecto especial de sonido que sera enviado la proxima vez
      51.  00:871D                      fin_subrutina_isr:
      52.  00:871D                      	;RET
      53.  00:871D                      
      54.  00:871D                      
      55.  00:871D                      
      56.  00:871D                      ;;=====================================================
      57.  00:871D                      ;;DEFINICIÓN DE SUBRUTINAS DE FERNANDO PARA COMPRESIÓN Y SONIDO
      58.  00:871D                      ;;=====================================================
      59.  00:871D                      subrutinas_sonido:
      60.  00:871D                      	include	"PT3-ROM_sjasm.asm"
       1:  00:871D                      		; --- PT3 REPLAYER WORKING ON ROM ---
       2:  00:871D                      		; --- Can be assembled with asMSX ---
       3:  00:871D                      		; --- ROM version: MSX-KUN        ---
       4:  00:871D                      		; --- asMSX version 2: SapphiRe   ---
       5:  00:871D                      
       6:  00:871D                      ; Based on MSX full version of PT3 by Dioniso
       7:  00:871D                      ;
       8:  00:871D                      ; This version of the replayer can be used with any note table
       9:  00:871D                      ; This version also allows the use of PT3 commands
      10:  00:871D                      ; First 99 bytes of each PT3 module should be stripped off
      11:  00:871D                      ;
      12:  00:871D                      ; PLAY and PSG WRITE routines seperated to allow independent calls
      13:  00:871D                      ;
      14:  00:871D                      ; ROM LENGTH: 1549 bytes
      15:  00:871D                      ; RAM LENGTH:  576 bytes
      16:  00:871D                      
      17:  00:871D                      
      18:  00:871D                      
      19:  00:871D                      ;SJASM version by BTV 2016
      20:  00:871D                      
      21:  00:871D                      
      22:  00:871D                      		; --- CONSTANT VALUES DEFINITION ---
      23:  00:871D                      
      24:  00:871D                      ;ChannelsVars
      25:  00:871D                      ;struc	CHNPRM
      26:  00:871D                      ;reset group
      27:  00:871D  (00:0000)           CHNPRM_PsInOr	equ 0	;RESB 1
      28:  00:871D  (00:0001)           CHNPRM_PsInSm	equ 1	;RESB 1
      29:  00:871D  (00:0002)           CHNPRM_CrAmSl	equ 2	;RESB 1
      30:  00:871D  (00:0003)           CHNPRM_CrNsSl	equ 3	;RESB 1
      31:  00:871D  (00:0004)           CHNPRM_CrEnSl	equ 4	;RESB 1
      32:  00:871D  (00:0005)           CHNPRM_TSlCnt	equ 5	;RESB 1
      33:  00:871D  (00:0006)           CHNPRM_CrTnSl	equ 6	;RESW 1
      34:  00:871D  (00:0008)           CHNPRM_TnAcc	equ 8	;RESW 1
      35:  00:871D  (00:000A)           CHNPRM_COnOff	equ 10	;RESB 1
      36:  00:871D                      ;reset group
      37:  00:871D                      
      38:  00:871D  (00:000B)           CHNPRM_OnOffD	equ 11	;RESB 1
      39:  00:871D                      
      40:  00:871D                      ;IX for PTDECOD here [+12]
      41:  00:871D  (00:000C)           CHNPRM_OffOnD	equ 12	;RESB 1
      42:  00:871D  (00:000D)           CHNPRM_OrnPtr	equ 13	;RESW 1
      43:  00:871D  (00:000F)           CHNPRM_SamPtr	equ 15	;RESW 1
      44:  00:871D  (00:0011)           CHNPRM_NNtSkp	equ 17	;RESB 1
      45:  00:871D  (00:0012)           CHNPRM_Note	equ 18	;RESB 1
      46:  00:871D  (00:0013)           CHNPRM_SlToNt	equ 19	;RESB 1
      47:  00:871D  (00:0014)           CHNPRM_Env_En	equ 20	;RESB 1
      48:  00:871D  (00:0015)           CHNPRM_Flags	equ 21	;RESB 1
      49:  00:871D                       ;Enabled - 0,SimpleGliss - 2
      50:  00:871D  (00:0016)           CHNPRM_TnSlDl	equ 22	;RESB 1
      51:  00:871D  (00:0017)           CHNPRM_TSlStp	equ 23	;RESW 1
      52:  00:871D  (00:0019)           CHNPRM_TnDelt	equ 25	;RESW 1
      53:  00:871D  (00:001B)           CHNPRM_NtSkCn	equ 27	;RESB 1
      54:  00:871D  (00:001C)           CHNPRM_Volume	equ 28	;RESB 1
      55:  00:871D  (00:001D)           CHNPRM_Size	equ 29	;RESB 1
      56:  00:871D                      ;endstruc
      57:  00:871D                      
      58:  00:871D                      ;struc	AR
      59:  00:871D  (00:0000)           AR_TonA		equ 0	;RESW 1
      60:  00:871D  (00:0002)           AR_TonB		equ 2	;RESW 1
      61:  00:871D  (00:0004)           AR_TonC		equ 4	;RESW 1
      62:  00:871D  (00:0006)           AR_Noise	equ 6	;RESB 1
      63:  00:871D  (00:0007)           AR_Mixer	equ 7	;RESB 1
      64:  00:871D  (00:0008)           AR_AmplA	equ 8	;RESB 1
      65:  00:871D  (00:0009)           AR_AmplB	equ 9	;RESB 1
      66:  00:871D  (00:000A)           AR_AmplC	equ 10	;RESB 1
      67:  00:871D  (00:000B)           AR_Env		equ 11	;RESW 1
      68:  00:871D  (00:000D)           AR_EnvTp	equ 13	;RESB 1
      69:  00:871D                      ;endstruc
      70:  00:871D                      
      71:  00:871D                      		; --- CODE STARTS HERE ---
      72:  00:871D                      
      73:  00:871D  21 00 F0            CHECKLP:	LD	HL,PT3_SETUP
      74:  00:8720  CB FE               		SET	7,[HL]
      75:  00:8722  CB 46               		BIT	0,[HL]
      76:  00:8724  C8                  		RET	Z
      77:  00:8725  E1                  		POP	HL
      78:  00:8726  21 7A F0            		LD	HL,DelyCnt
      79:  00:8729  34                  		INC	[HL]
      80:  00:872A  21 3E F0            		LD	HL,ChanA+CHNPRM_NtSkCn
      81:  00:872D  34                  		INC	[HL]
      82:  00:872E  AF                  PT3_MUTE:	XOR	A
      83:  00:872F  67                  		LD	H,A
      84:  00:8730  6F                  		LD	L,A
      85:  00:8731  32 48 F1            		LD	[AYREGS+AR_AmplA],A
      86:  00:8734  22 49 F1            		LD	[AYREGS+AR_AmplB],HL
      87:  00:8737  C3 80 8C            		JP	ROUT_A0
      88:  00:873A                      
      89:  00:873A                      PT3_INIT:	;HL - AddressOfModule - 100
      90:  00:873A  22 01 F0            		LD [PT3_MODADDR],HL
      91:  00:873D  E5                  		PUSH HL
      92:  00:873E  11 64 00            		LD DE,100
      93:  00:8741  19                  		ADD HL,DE
      94:  00:8742  7E                  		LD A,[HL]
      95:  00:8743  32 1C F0            		LD [PT3_Delay],A
      96:  00:8746  E5                  		PUSH HL
      97:  00:8747  DD E1               		POP IX
      98:  00:8749  19                  		ADD HL,DE
      99:  00:874A  22 03 F0            		LD [PT3_CrPsPtr],HL
     100:  00:874D  DD 5E 02            		LD E,[IX+102-100]
     101:  00:8750  19                  		ADD HL,DE
     102:  00:8751  23                  		INC HL
     103:  00:8752  22 18 F0            		LD [PT3_LPosPtr],HL
     104:  00:8755  D1                  		POP DE
     105:  00:8756  DD 6E 03            		LD L,[IX+103-100]
     106:  00:8759  DD 66 04            		LD H,[IX+104-100]
     107:  00:875C  19                  		ADD HL,DE
     108:  00:875D  22 1A F0            		LD [PT3_PatsPtr],HL
     109:  00:8760  21 A9 00            		LD HL,169
     110:  00:8763  19                  		ADD HL,DE
     111:  00:8764  22 07 F0            		LD [PT3_OrnPtrs],HL
     112:  00:8767  21 69 00            		LD HL,105
     113:  00:876A  19                  		ADD HL,DE
     114:  00:876B  22 05 F0            		LD [PT3_SAMPTRS],HL
     115:  00:876E  21 00 F0            		LD HL,PT3_SETUP
     116:  00:8771  CB BE               		RES 7,[HL]
     117:  00:8773                      
     118:  00:8773                      		; --- note table data depacker ---
     119:  00:8773                      		; Depacks first 12 tones of each tone table
     120:  00:8773                      
     121:  00:8773  11 F4 8C            		LD DE,T_PACK
     122:  00:8776  01 B1 F1            		LD BC,T1_+(2*49)-1
     123:  00:8779  1A                  .TP_0:		LD A,[DE]
     124:  00:877A  13                  		INC DE
     125:  00:877B  FE 1E               		CP 15*2
     126:  00:877D  30 06               		JR NC,.TP_1
     127:  00:877F  67                  		LD H,A
     128:  00:8780  1A                  		LD A,[DE]
     129:  00:8781  6F                  		LD L,A
     130:  00:8782  13                  		INC DE
     131:  00:8783  18 07               		JR .TP_2
     132:  00:8785  D5                  .TP_1:		PUSH DE
     133:  00:8786  16 00               		LD D,0
     134:  00:8788  5F                  		LD E,A
     135:  00:8789  19                  		ADD HL,DE
     136:  00:878A  19                  		ADD HL,DE
     137:  00:878B  D1                  		POP DE
     138:  00:878C  7C                  .TP_2:		LD A,H
     139:  00:878D  02                  		LD [BC],A
     140:  00:878E  0B                  		DEC BC
     141:  00:878F  7D                  		LD A,L
     142:  00:8790  02                  		LD [BC],A
     143:  00:8791  0B                  		DEC BC
     144:  00:8792  D6 F0               		SUB $F0
     145:  00:8794  20 E3               		JR NZ,.TP_0
     146:  00:8796                      
     147:  00:8796                      		; --- INITIALIZE PT3 VARIABLES ---
     148:  00:8796  21 23 F0            		LD HL,VARS
     149:  00:8799  77                  		LD [HL],A
     150:  00:879A  11 24 F0            		LD DE,VARS+1
     151:  00:879D  01 2C 01            		LD BC,VAR0END-VARS-1
     152:  00:87A0  ED B0               		LDIR
     153:  00:87A2                      
     154:  00:87A2  3C                  		INC A
     155:  00:87A3  32 7A F0            		LD [DelyCnt],A
     156:  00:87A6  21 01 F0            		LD HL,$F001 ;H - CHNPRM_Volume, L - CHNPRM_NtSkCn
     157:  00:87A9  22 3E F0            		LD [ChanA+CHNPRM_NtSkCn],HL
     158:  00:87AC  22 5B F0            		LD [ChanB+CHNPRM_NtSkCn],HL
     159:  00:87AF  22 78 F0            		LD [ChanC+CHNPRM_NtSkCn],HL
     160:  00:87B2                      
     161:  00:87B2  21 F0 8C            		LD HL,EMPTYSAMORN
     162:  00:87B5  22 12 F0            		LD [PT3_AdInPtA],HL ;ptr to zero
     163:  00:87B8  22 30 F0            		LD [ChanA+CHNPRM_OrnPtr],HL ;ornament 0 is "0,1,0"
     164:  00:87BB  22 4D F0            		LD [ChanB+CHNPRM_OrnPtr],HL ;in all versions from
     165:  00:87BE  22 6A F0            		LD [ChanC+CHNPRM_OrnPtr],HL ;3.xx to 3.6x and VTII
     166:  00:87C1                      
     167:  00:87C1  22 32 F0            		LD [ChanA+CHNPRM_SamPtr],HL ;S1 There is no default
     168:  00:87C4  22 4F F0            		LD [ChanB+CHNPRM_SamPtr],HL ;S2 sample in PT3, so, you
     169:  00:87C7  22 6C F0            		LD [ChanC+CHNPRM_SamPtr],HL ;S3 can comment S1,2,3; see
     170:  00:87CA                      					    ;also EMPTYSAMORN comment
     171:  00:87CA                      
     172:  00:87CA                      		; --- NOTE TABLE CREATOR (c) Ivan Roshin, adapted by SapphiRe ---
     173:  00:87CA  DD 7E FF            		LD A,[IX+99-100] ;TONE TABLE NUMBER
     174:  00:87CD  17                  		RLA
     175:  00:87CE  E6 07               		AND 7
     176:  00:87D0  21 A0 8C            		LD HL,NT_DATA
     177:  00:87D3  D5                  		PUSH DE
     178:  00:87D4  50                  		LD D,B		; ld d,0 (bc is 0000 after LDIR)
     179:  00:87D5  87                  		ADD A,A
     180:  00:87D6  5F                  		LD E,A
     181:  00:87D7  19                  		ADD HL,DE	; hl -> init of correct note table data
     182:  00:87D8  5E                  		LD E,[HL]
     183:  00:87D9  23                  		INC HL
     184:  00:87DA  CB 3B               		SRL E
     185:  00:87DC  9F                  		SBC A,A
     186:  00:87DD  E6 A7               		AND $A7			;$00 (NOP) or $A7 (AND A)
     187:  00:87DF  32 21 F0            		LD [PT3_NTL3],A		; CORRECT INSTRUCTION, DEPENDS OF SELECTED TABLE
     188:  00:87E2  3E C9               		LD A,$C9		; RET CODE
     189:  00:87E4  32 22 F0            		LD [PT3_NTL3+1],A	; RET PLACED
     190:  00:87E7  EB                  		EX DE,HL
     191:  00:87E8  C1                  		POP BC ;BC=T1_
     192:  00:87E9  09                  		ADD HL,BC
     193:  00:87EA                      
     194:  00:87EA  1A                  		LD A,[DE]                           
     195:  00:87EB                      
     196:  00:87EB  01 B0 8C            		LD BC,T_
     197:  00:87EE  81                  		ADD A,C
     198:  00:87EF  4F                  		LD C,A
     199:  00:87F0  88                  		ADC A,B
     200:  00:87F1                      
     201:  00:87F1  91                  		SUB C
     202:  00:87F2  47                  		LD B,A
     203:  00:87F3  C5                  		PUSH BC
     204:  00:87F4  11 80 F0            		LD DE,NT_
     205:  00:87F7  D5                  		PUSH DE
     206:  00:87F8                      
     207:  00:87F8  06 0C               		LD B,12
     208:  00:87FA  C5                  .L1:		PUSH BC
     209:  00:87FB  4E                  		LD C,[HL]
     210:  00:87FC  23                  		INC HL
     211:  00:87FD  E5                  		PUSH HL
     212:  00:87FE  46                  		LD B,[HL]
     213:  00:87FF                      
     214:  00:87FF  D5                  		PUSH DE
     215:  00:8800  EB                  		EX DE,HL
     216:  00:8801  11 17 00            		LD DE,23
     217:  00:8804  DD 26 08            		db $DD,$26,$08	;LD XH,8
     218:  00:8807                      
     219:  00:8807  CB 38               .L2:		SRL B
     220:  00:8809  CB 19               		RR C
     221:  00:880B  CD 21 F0            .L3:		CALL PT3_NTL3	;AND A or NOP
     222:  00:880E  79                  		LD A,C
     223:  00:880F  8A                  		ADC A,D	;=ADC 0
     224:  00:8810  77                  		LD [HL],A
     225:  00:8811  23                  		INC HL
     226:  00:8812  78                  		LD A,B
     227:  00:8813  8A                  		ADC A,D
     228:  00:8814  77                  		LD [HL],A
     229:  00:8815  19                  		ADD HL,DE
     230:  00:8816  DD 25               		db $DD,$25	;DEC XH
     231:  00:8818  20 ED               		JR NZ,.L2
     232:  00:881A                      
     233:  00:881A  D1                  		POP DE
     234:  00:881B  13                  		INC DE
     235:  00:881C  13                  		INC DE
     236:  00:881D  E1                  		POP HL
     237:  00:881E  23                  		INC HL
     238:  00:881F  C1                  		POP BC
     239:  00:8820  10 D8               		DJNZ .L1
     240:  00:8822                      
     241:  00:8822  E1                  		POP HL
     242:  00:8823  D1                  		POP DE
     243:  00:8824                      
     244:  00:8824  7B                  		LD A,E
     245:  00:8825  D5                  		PUSH DE
     246:  00:8826  11 BC 8C            		LD DE,TCOLD_1
     247:  00:8829  BB                  		CP E
     248:  00:882A  D1                  		POP DE
     249:  00:882B  20 05               		JR NZ,.CORR_1
     250:  00:882D  3E FD               		LD A,$FD
     251:  00:882F  32 AE F0            		LD [NT_+$2E],A
     252:  00:8832                      
     253:  00:8832  1A                  .CORR_1:	LD A,[DE]
     254:  00:8833  A7                  		AND A
     255:  00:8834  28 11               		JR Z,.TC_EXIT
     256:  00:8836  1F                  		RRA
     257:  00:8837  F5                  		PUSH AF
     258:  00:8838  87                  		ADD A,A
     259:  00:8839  4F                  		LD C,A
     260:  00:883A  09                  		ADD HL,BC
     261:  00:883B  F1                  		POP AF
     262:  00:883C  30 02               		JR NC,.CORR_2
     263:  00:883E  35                  		DEC [HL]
     264:  00:883F  35                  		DEC [HL]
     265:  00:8840  34                  .CORR_2:	INC [HL]
     266:  00:8841  A7                  		AND A
     267:  00:8842  ED 42               		SBC HL,BC
     268:  00:8844  13                  		INC DE
     269:  00:8845  18 EB               		JR .CORR_1
     270:  00:8847                      
     271:  00:8847                      .TC_EXIT:	;POP AF
     272:  00:8847                      
     273:  00:8847                      		; --- CREATE PT3 VOLUME TABLE (c) Ivan Roshin, adapted by SapphiRe ---
     274:  00:8847  21 11 00            		ld	hl,$11
     275:  00:884A  54                  		ld	d,h
     276:  00:884B  5C                  		ld	e,h
     277:  00:884C  DD 21 50 F1         		ld	IX,VT_+16
     278:  00:8850  06 0F               		ld	b,15
     279:  00:8852  E5                  .INITV1:	push	hl
     280:  00:8853  19                  		add	hl,de
     281:  00:8854  EB                  		ex	de,hl
     282:  00:8855  ED 62               		sbc	hl,hl
     283:  00:8857  48                  		ld	c,b
     284:  00:8858  06 10               		ld	b,16
     285:  00:885A  7D                  .INITV2:	ld	a,l
     286:  00:885B  17                  		rla
     287:  00:885C  7C                  		ld	a,h
     288:  00:885D  CE 00               		adc	a,0
     289:  00:885F  DD 77 00            		ld	[ix],a
     290:  00:8862  DD 23               		inc	ix
     291:  00:8864  19                  		add	hl,de
     292:  00:8865  10 F3               		djnz	.INITV2
     293:  00:8867  E1                  		pop	hl
     294:  00:8868  7B                  		ld	a,e
     295:  00:8869  FE 77               		cp	$77
     296:  00:886B  20 01               		jr	nz,.INITV3
     297:  00:886D  1C                  		inc	e
     298:  00:886E  41                  .INITV3:	ld	b,c
     299:  00:886F  10 E1               		djnz	.INITV1
     300:  00:8871                      
     301:  00:8871  C9                  		RET
     302:  00:8872                      
     303:  00:8872                      		;pattern decoder
     304:  00:8872  DD 36 08 00         PD_OrSm:	LD [IX+(CHNPRM_Env_En-12)],0
     305:  00:8876  CD FC 89            		CALL SETORN
     306:  00:8879  0A                  		LD A,[BC]
     307:  00:887A  03                  		INC BC
     308:  00:887B  0F                  		RRCA
     309:  00:887C                      
     310:  00:887C  87                  PD_SAM:		ADD A,A
     311:  00:887D  5F                  PD_SAM_:	LD E,A
     312:  00:887E  16 00               		LD D,0
     313:  00:8880  2A 05 F0            		LD HL,[PT3_SAMPTRS]
     314:  00:8883  19                  		ADD HL,DE
     315:  00:8884  5E                  		LD E,[HL]
     316:  00:8885  23                  		INC HL
     317:  00:8886  56                  		LD D,[HL]
     318:  00:8887  2A 01 F0            		LD HL,[PT3_MODADDR]
     319:  00:888A  19                  		ADD HL,DE
     320:  00:888B  DD 75 03            		LD [IX+(CHNPRM_SamPtr-12)],L
     321:  00:888E  DD 74 04            		LD [IX+(CHNPRM_SamPtr+1-12)],H
     322:  00:8891  18 41               		JR PD_LOOP
     323:  00:8893                      
     324:  00:8893  07                  PD_VOL:		RLCA
     325:  00:8894  07                  		RLCA
     326:  00:8895  07                  		RLCA
     327:  00:8896  07                  		RLCA
     328:  00:8897  DD 77 10            		LD [IX+(CHNPRM_Volume-12)],A
     329:  00:889A  18 3B               		JR PD_LP2
     330:  00:889C                      	
     331:  00:889C  DD 77 08            PD_EOff:	LD [IX+(CHNPRM_Env_En-12)],A
     332:  00:889F  DD 77 F4            		LD [IX+(CHNPRM_PsInOr-12)],A
     333:  00:88A2  18 33               		JR PD_LP2
     334:  00:88A4                      
     335:  00:88A4  3D                  PD_SorE:	DEC A
     336:  00:88A5  20 07               		JR NZ,PD_ENV
     337:  00:88A7  0A                  		LD A,[BC]
     338:  00:88A8  03                  		INC BC
     339:  00:88A9  DD 77 05            		LD [IX+(CHNPRM_NNtSkp-12)],A
     340:  00:88AC  18 29               		JR PD_LP2
     341:  00:88AE                      
     342:  00:88AE  CD E0 89            PD_ENV:		CALL SETENV
     343:  00:88B1  18 24               		JR PD_LP2
     344:  00:88B3                      
     345:  00:88B3  CD FC 89            PD_ORN:		CALL SETORN
     346:  00:88B6  18 1C               		JR PD_LOOP
     347:  00:88B8                             
     348:  00:88B8  DD 77 08            PD_ESAM:	LD [IX+(CHNPRM_Env_En-12)],A
     349:  00:88BB  DD 77 F4            		LD [IX+(CHNPRM_PsInOr-12)],A
     350:  00:88BE  C4 E0 89            		CALL NZ,SETENV
     351:  00:88C1  0A                  		LD A,[BC]
     352:  00:88C2  03                  		INC BC
     353:  00:88C3  18 B8               		JR PD_SAM_
     354:  00:88C5                      
     355:  00:88C5  DD 7E 06            PTDECOD:	LD A,[IX+(CHNPRM_Note-12)]
     356:  00:88C8  32 0F F0            		LD [PT3_PrNote],A
     357:  00:88CB  DD 6E FA            		LD L,[IX+(CHNPRM_CrTnSl-12)]
     358:  00:88CE  DD 66 FB            		LD H,[IX+(CHNPRM_CrTnSl+1-12)]
     359:  00:88D1  22 10 F0            		LD [PT3_PrSlide],HL
     360:  00:88D4                      
     361:  00:88D4  11 10 20            PD_LOOP:	LD DE,$2010
     362:  00:88D7  0A                  PD_LP2:		LD A,[BC]
     363:  00:88D8  03                  		INC BC
     364:  00:88D9  83                  		ADD A,E
     365:  00:88DA  38 96               		JR C,PD_OrSm
     366:  00:88DC  82                  		ADD A,D
     367:  00:88DD  28 4A               		JR Z,PD_FIN
     368:  00:88DF  38 9B               		JR C,PD_SAM
     369:  00:88E1  83                  		ADD A,E
     370:  00:88E2  28 25               		JR Z,PD_REL
     371:  00:88E4  38 AD               		JR C,PD_VOL
     372:  00:88E6  83                  		ADD A,E
     373:  00:88E7  28 B3               		JR Z,PD_EOff
     374:  00:88E9  38 B9               		JR C,PD_SorE
     375:  00:88EB  C6 60               		ADD A,96
     376:  00:88ED  38 20               		JR C,PD_NOTE
     377:  00:88EF  83                  		ADD A,E
     378:  00:88F0  38 C1               		JR C,PD_ORN
     379:  00:88F2  82                  		ADD A,D
     380:  00:88F3  38 0F               		JR C,PD_NOIS
     381:  00:88F5  83                  		ADD A,E
     382:  00:88F6  38 C0               		JR C,PD_ESAM
     383:  00:88F8  87                  		ADD A,A
     384:  00:88F9  5F                  		LD E,A
     385:  00:88FA  21 35 69            		LD HL,(SPCCOMS+$DF20) % 65536	; Adapted from original Speccy version (saves 6 bytes)
     386:  00:88FD  19                  		ADD HL,DE
     387:  00:88FE  5E                  		LD E,[HL]
     388:  00:88FF  23                  		INC HL
     389:  00:8900  56                  		LD D,[HL]
     390:  00:8901  D5                  		PUSH DE
     391:  00:8902  18 D0               		JR PD_LOOP
     392:  00:8904                      
     393:  00:8904  32 7E F0            PD_NOIS:	LD [Ns_Base],A
     394:  00:8907  18 CE               		JR PD_LP2
     395:  00:8909                      
     396:  00:8909  DD CB 09 86         PD_REL:		RES 0,[IX+(CHNPRM_Flags-12)]
     397:  00:890D  18 08               		JR PD_RES
     398:  00:890F                      	
     399:  00:890F  DD 77 06            PD_NOTE:	LD [IX+(CHNPRM_Note-12)],A
     400:  00:8912  DD CB 09 C6         		SET 0,[IX+(CHNPRM_Flags-12)]
     401:  00:8916  AF                  		XOR A
     402:  00:8917                      
     403:  00:8917  ED 73 09 F0         PD_RES:		LD [PT3_PDSP],SP
     404:  00:891B  DD F9               		LD SP,IX
     405:  00:891D  67                  		LD H,A
     406:  00:891E  6F                  		LD L,A
     407:  00:891F  E5                  		PUSH HL
     408:  00:8920  E5                  		PUSH HL
     409:  00:8921  E5                  		PUSH HL
     410:  00:8922  E5                  		PUSH HL
     411:  00:8923  E5                  		PUSH HL
     412:  00:8924  E5                  		PUSH HL
     413:  00:8925  ED 7B 09 F0         		LD SP,[PT3_PDSP]
     414:  00:8929                      
     415:  00:8929  DD 7E 05            PD_FIN:		LD A,[IX+(CHNPRM_NNtSkp-12)]
     416:  00:892C  DD 77 0F            		LD [IX+(CHNPRM_NtSkCn-12)],A
     417:  00:892F  C9                  		RET
     418:  00:8930                      
     419:  00:8930  DD CB 09 96         C_PORTM:	RES 2,[IX+(CHNPRM_Flags-12)]
     420:  00:8934  0A                  		LD A,[BC]
     421:  00:8935  03                  		INC BC
     422:  00:8936                      		;SKIP PRECALCULATED TONE DELTA [BECAUSE
     423:  00:8936                      		;CANNOT BE RIGHT AFTER PT3 COMPILATION]
     424:  00:8936  03                  		INC BC
     425:  00:8937  03                  		INC BC
     426:  00:8938  DD 77 0A            		LD [IX+(CHNPRM_TnSlDl-12)],A
     427:  00:893B  DD 77 F9            		LD [IX+(CHNPRM_TSlCnt-12)],A
     428:  00:893E  11 80 F0            		LD DE,NT_
     429:  00:8941  DD 7E 06            		LD A,[IX+(CHNPRM_Note-12)]
     430:  00:8944  DD 77 07            		LD [IX+(CHNPRM_SlToNt-12)],A
     431:  00:8947  87                  		ADD A,A
     432:  00:8948  6F                  		LD L,A
     433:  00:8949  26 00               		LD H,0
     434:  00:894B  19                  		ADD HL,DE
     435:  00:894C  7E                  		LD A,[HL]
     436:  00:894D  23                  		INC HL
     437:  00:894E  66                  		LD H,[HL]
     438:  00:894F  6F                  		LD L,A
     439:  00:8950  E5                  		PUSH HL
     440:  00:8951  3A 0F F0            		LD A,[PT3_PrNote]
     441:  00:8954  DD 77 06            		LD [IX+(CHNPRM_Note-12)],A
     442:  00:8957  87                  		ADD A,A
     443:  00:8958  6F                  		LD L,A
     444:  00:8959  26 00               		LD H,0
     445:  00:895B  19                  		ADD HL,DE
     446:  00:895C  5E                  		LD E,[HL]
     447:  00:895D  23                  		INC HL
     448:  00:895E  56                  		LD D,[HL]
     449:  00:895F  E1                  		POP HL
     450:  00:8960  ED 52               		SBC HL,DE
     451:  00:8962  DD 75 0D            		LD [IX+(CHNPRM_TnDelt-12)],L
     452:  00:8965  DD 74 0E            		LD [IX+(CHNPRM_TnDelt+1-12)],H
     453:  00:8968  ED 5B 10 F0         		LD DE,[PT3_PrSlide]
     454:  00:896C  DD 73 FA            		LD [IX+(CHNPRM_CrTnSl-12)],E
     455:  00:896F  DD 72 FB            		LD [IX+(CHNPRM_CrTnSl+1-12)],D
     456:  00:8972  0A                  		LD A,[BC] ;SIGNED TONE STEP
     457:  00:8973  03                  		INC BC
     458:  00:8974  08                  		EX AF,AF'
     459:  00:8975  0A                  		LD A,[BC]
     460:  00:8976  03                  		INC BC
     461:  00:8977  A7                  		AND A
     462:  00:8978  28 01               		JR Z,.NOSIG
     463:  00:897A  EB                  		EX DE,HL
     464:  00:897B  ED 52               .NOSIG:	SBC HL,DE
     465:  00:897D  F2 85 89            		JP P,SET_STP
     466:  00:8980  2F                  		CPL
     467:  00:8981  08                  		EX AF,AF'
     468:  00:8982  ED 44               		NEG
     469:  00:8984  08                  		EX AF,AF'
     470:  00:8985  DD 77 0C            SET_STP:	LD [IX+(CHNPRM_TSlStp+1-12)],A
     471:  00:8988  08                  		EX AF,AF'
     472:  00:8989  DD 77 0B            		LD [IX+(CHNPRM_TSlStp-12)],A
     473:  00:898C  DD 36 FE 00         		LD [IX+(CHNPRM_COnOff-12)],0
     474:  00:8990  C9                  		RET
     475:  00:8991                      
     476:  00:8991  DD CB 09 D6         C_GLISS:	SET 2,[IX+(CHNPRM_Flags-12)]
     477:  00:8995  0A                  		LD A,[BC]
     478:  00:8996  03                  		INC BC
     479:  00:8997  DD 77 0A            		LD [IX+(CHNPRM_TnSlDl-12)],A
     480:  00:899A  DD 77 F9            		LD [IX+(CHNPRM_TSlCnt-12)],A
     481:  00:899D  0A                  		LD A,[BC]
     482:  00:899E  03                  		INC BC
     483:  00:899F  08                  		EX AF,AF'
     484:  00:89A0  0A                  		LD A,[BC]
     485:  00:89A1  03                  		INC BC
     486:  00:89A2  18 E1               		JR SET_STP
     487:  00:89A4                      
     488:  00:89A4  0A                  C_SMPOS:	LD A,[BC]
     489:  00:89A5  03                  		INC BC
     490:  00:89A6  DD 77 F5            		LD [IX+(CHNPRM_PsInSm-12)],A
     491:  00:89A9  C9                  		RET
     492:  00:89AA                      
     493:  00:89AA  0A                  C_ORPOS:	LD A,[BC]
     494:  00:89AB  03                  		INC BC
     495:  00:89AC  DD 77 F4            		LD [IX+(CHNPRM_PsInOr-12)],A
     496:  00:89AF  C9                  		RET
     497:  00:89B0                      
     498:  00:89B0  0A                  C_VIBRT:	LD A,[BC]
     499:  00:89B1  03                  		INC BC
     500:  00:89B2  DD 77 FF            		LD [IX+(CHNPRM_OnOffD-12)],A
     501:  00:89B5  DD 77 FE            		LD [IX+(CHNPRM_COnOff-12)],A
     502:  00:89B8  0A                  		LD A,[BC]
     503:  00:89B9  03                  		INC BC
     504:  00:89BA  DD 77 00            		LD [IX+(CHNPRM_OffOnD-12)],A
     505:  00:89BD  AF                  		XOR A
     506:  00:89BE  DD 77 F9            		LD [IX+(CHNPRM_TSlCnt-12)],A
     507:  00:89C1  DD 77 FA            		LD [IX+(CHNPRM_CrTnSl-12)],A
     508:  00:89C4  DD 77 FB            		LD [IX+(CHNPRM_CrTnSl+1-12)],A
     509:  00:89C7  C9                  		RET
     510:  00:89C8                      
     511:  00:89C8  0A                  C_ENGLS:	LD A,[BC]
     512:  00:89C9  03                  		INC BC
     513:  00:89CA  32 1E F0            		LD [PT3_Env_Del],A
     514:  00:89CD  32 7D F0            		LD [CurEDel],A
     515:  00:89D0  0A                  		LD A,[BC]
     516:  00:89D1  03                  		INC BC
     517:  00:89D2  6F                  		LD L,A
     518:  00:89D3  0A                  		LD A,[BC]
     519:  00:89D4  03                  		INC BC
     520:  00:89D5  67                  		LD H,A
     521:  00:89D6  22 1F F0            		LD [PT3_ESldAdd],HL
     522:  00:89D9  C9                  		RET
     523:  00:89DA                      
     524:  00:89DA  0A                  C_DELAY:	LD A,[BC]
     525:  00:89DB  03                  		INC BC
     526:  00:89DC  32 1C F0            		LD [PT3_Delay],A
     527:  00:89DF  C9                  		RET
     528:  00:89E0                      	
     529:  00:89E0  DD 73 08            SETENV:		LD [IX+(CHNPRM_Env_En-12)],E
     530:  00:89E3  32 4D F1            		LD [AYREGS+AR_EnvTp],A
     531:  00:89E6  0A                  		LD A,[BC]
     532:  00:89E7  03                  		INC BC
     533:  00:89E8  67                  		LD H,A
     534:  00:89E9  0A                  		LD A,[BC]
     535:  00:89EA  03                  		INC BC
     536:  00:89EB  6F                  		LD L,A
     537:  00:89EC  22 4E F1            		LD [EnvBase],HL
     538:  00:89EF  AF                  		XOR A
     539:  00:89F0  DD 77 F4            		LD [IX+(CHNPRM_PsInOr-12)],A
     540:  00:89F3  32 7D F0            		LD [CurEDel],A
     541:  00:89F6  67                  		LD H,A
     542:  00:89F7  6F                  		LD L,A
     543:  00:89F8  22 7B F0            		LD [CurESld],HL
     544:  00:89FB  C9                  C_NOP:		RET
     545:  00:89FC                      
     546:  00:89FC  87                  SETORN:		ADD A,A
     547:  00:89FD  5F                  		LD E,A
     548:  00:89FE  16 00               		LD D,0
     549:  00:8A00  DD 72 F4            		LD [IX+(CHNPRM_PsInOr-12)],D
     550:  00:8A03  2A 07 F0            		LD HL,[PT3_OrnPtrs]
     551:  00:8A06  19                  		ADD HL,DE
     552:  00:8A07  5E                  		LD E,[HL]
     553:  00:8A08  23                  		INC HL
     554:  00:8A09  56                  		LD D,[HL]
     555:  00:8A0A  2A 01 F0            		LD HL,[PT3_MODADDR]
     556:  00:8A0D  19                  		ADD HL,DE
     557:  00:8A0E  DD 75 01            		LD [IX+(CHNPRM_OrnPtr-12)],L
     558:  00:8A11  DD 74 02            		LD [IX+(CHNPRM_OrnPtr+1-12)],H
     559:  00:8A14  C9                  		RET
     560:  00:8A15                      
     561:  00:8A15                      		;ALL 16 ADDRESSES TO PROTECT FROM BROKEN PT3 MODULES
     562:  00:8A15  FB 89               SPCCOMS:	dw C_NOP
     563:  00:8A17  91 89               		dw C_GLISS
     564:  00:8A19  30 89               		dw C_PORTM
     565:  00:8A1B  A4 89               		dw C_SMPOS
     566:  00:8A1D  AA 89               		dw C_ORPOS
     567:  00:8A1F  B0 89               		dw C_VIBRT
     568:  00:8A21  FB 89               		dw C_NOP
     569:  00:8A23  FB 89               		dw C_NOP
     570:  00:8A25  C8 89               		dw C_ENGLS
     571:  00:8A27  DA 89               		dw C_DELAY
     572:  00:8A29  FB 89               		dw C_NOP
     573:  00:8A2B  FB 89               		dw C_NOP
     574:  00:8A2D  FB 89               		dw C_NOP
     575:  00:8A2F  FB 89               		dw C_NOP
     576:  00:8A31  FB 89               		dw C_NOP
     577:  00:8A33  FB 89               		dw C_NOP
     578:  00:8A35                      
     579:  00:8A35  AF                  CHREGS:		XOR A
     580:  00:8A36  32 4A F1            		LD [AYREGS+AR_AmplC],A
     581:  00:8A39  DD CB 15 46         		BIT 0,[IX+CHNPRM_Flags]
     582:  00:8A3D  E5                  		PUSH HL
     583:  00:8A3E  CA 64 8B            		JP Z,.CH_EXIT
     584:  00:8A41  ED 73 0B F0         		LD [PT3_CSP],SP
     585:  00:8A45  DD 6E 0D            		LD L,[IX+CHNPRM_OrnPtr]
     586:  00:8A48  DD 66 0E            		LD H,[IX+CHNPRM_OrnPtr+1]
     587:  00:8A4B  F9                  		LD SP,HL
     588:  00:8A4C  D1                  		POP DE
     589:  00:8A4D  67                  		LD H,A
     590:  00:8A4E  DD 7E 00            		LD A,[IX+CHNPRM_PsInOr]
     591:  00:8A51  6F                  		LD L,A
     592:  00:8A52  39                  		ADD HL,SP
     593:  00:8A53  3C                  		INC A
     594:  00:8A54  BA                  		CP D
     595:  00:8A55  38 01               		JR C,.CH_ORPS
     596:  00:8A57  7B                  		LD A,E
     597:  00:8A58  DD 77 00            .CH_ORPS:	LD [IX+CHNPRM_PsInOr],A
     598:  00:8A5B  DD 7E 12            		LD A,[IX+CHNPRM_Note]
     599:  00:8A5E  86                  		ADD A,[HL]
     600:  00:8A5F  F2 63 8A            		JP P,.CH_NTP
     601:  00:8A62  AF                  		XOR A
     602:  00:8A63  FE 60               .CH_NTP:	CP 96
     603:  00:8A65  38 02               		JR C,.CH_NOK
     604:  00:8A67  3E 5F               		LD A,95
     605:  00:8A69  87                  .CH_NOK:	ADD A,A
     606:  00:8A6A  08                  		EX AF,AF'
     607:  00:8A6B  DD 6E 0F            		LD L,[IX+CHNPRM_SamPtr]
     608:  00:8A6E  DD 66 10            		LD H,[IX+CHNPRM_SamPtr+1]
     609:  00:8A71  F9                  		LD SP,HL
     610:  00:8A72  D1                  		POP DE
     611:  00:8A73  26 00               		LD H,0
     612:  00:8A75  DD 7E 01            		LD A,[IX+CHNPRM_PsInSm]
     613:  00:8A78  47                  		LD B,A
     614:  00:8A79  87                  		ADD A,A
     615:  00:8A7A  87                  		ADD A,A
     616:  00:8A7B  6F                  		LD L,A
     617:  00:8A7C  39                  		ADD HL,SP
     618:  00:8A7D  F9                  		LD SP,HL
     619:  00:8A7E  78                  		LD A,B
     620:  00:8A7F  3C                  		INC A
     621:  00:8A80  BA                  		CP D
     622:  00:8A81  38 01               		JR C,.CH_SMPS
     623:  00:8A83  7B                  		LD A,E
     624:  00:8A84  DD 77 01            .CH_SMPS:	LD [IX+CHNPRM_PsInSm],A
     625:  00:8A87  C1                  		POP BC
     626:  00:8A88  E1                  		POP HL
     627:  00:8A89  DD 5E 08            		LD E,[IX+CHNPRM_TnAcc]
     628:  00:8A8C  DD 56 09            		LD D,[IX+CHNPRM_TnAcc+1]
     629:  00:8A8F  19                  		ADD HL,DE
     630:  00:8A90  CB 70               		BIT 6,B
     631:  00:8A92  28 06               		JR Z,.CH_NOAC
     632:  00:8A94  DD 75 08            		LD [IX+CHNPRM_TnAcc],L
     633:  00:8A97  DD 74 09            		LD [IX+CHNPRM_TnAcc+1],H
     634:  00:8A9A  EB                  .CH_NOAC:	EX DE,HL
     635:  00:8A9B  08                  		EX AF,AF'
     636:  00:8A9C  6F                  		LD L,A
     637:  00:8A9D  26 00               		LD H,0
     638:  00:8A9F  31 80 F0            		LD SP,NT_
     639:  00:8AA2  39                  		ADD HL,SP
     640:  00:8AA3  F9                  		LD SP,HL
     641:  00:8AA4  E1                  		POP HL
     642:  00:8AA5  19                  		ADD HL,DE
     643:  00:8AA6  DD 5E 06            		LD E,[IX+CHNPRM_CrTnSl]
     644:  00:8AA9  DD 56 07            		LD D,[IX+CHNPRM_CrTnSl+1]
     645:  00:8AAC  19                  		ADD HL,DE
     646:  00:8AAD  ED 7B 0B F0         		LD SP,[PT3_CSP]
     647:  00:8AB1  E3                  		EX [SP],HL
     648:  00:8AB2  AF                  		XOR A
     649:  00:8AB3  DD B6 05            		OR [IX+CHNPRM_TSlCnt]
     650:  00:8AB6  28 3E               		JR Z,.CH_AMP
     651:  00:8AB8  DD 35 05            		DEC [IX+CHNPRM_TSlCnt]
     652:  00:8ABB  20 39               		JR NZ,.CH_AMP
     653:  00:8ABD  DD 7E 16            		LD A,[IX+CHNPRM_TnSlDl]
     654:  00:8AC0  DD 77 05            		LD [IX+CHNPRM_TSlCnt],A
     655:  00:8AC3  DD 6E 17            		LD L,[IX+CHNPRM_TSlStp]
     656:  00:8AC6  DD 66 18            		LD H,[IX+CHNPRM_TSlStp+1]
     657:  00:8AC9  7C                  		LD A,H
     658:  00:8ACA  19                  		ADD HL,DE
     659:  00:8ACB  DD 75 06            		LD [IX+CHNPRM_CrTnSl],L
     660:  00:8ACE  DD 74 07            		LD [IX+CHNPRM_CrTnSl+1],H
     661:  00:8AD1  DD CB 15 56         		BIT 2,[IX+CHNPRM_Flags]
     662:  00:8AD5  20 1F               		JR NZ,.CH_AMP
     663:  00:8AD7  DD 5E 19            		LD E,[IX+CHNPRM_TnDelt]
     664:  00:8ADA  DD 56 1A            		LD D,[IX+CHNPRM_TnDelt+1]
     665:  00:8ADD  A7                  		AND A
     666:  00:8ADE  28 01               		JR Z,.CH_STPP
     667:  00:8AE0  EB                  		EX DE,HL
     668:  00:8AE1  ED 52               .CH_STPP:	SBC HL,DE
     669:  00:8AE3  FA F6 8A            		JP M,.CH_AMP
     670:  00:8AE6  DD 7E 13            		LD A,[IX+CHNPRM_SlToNt]
     671:  00:8AE9  DD 77 12            		LD [IX+CHNPRM_Note],A
     672:  00:8AEC  AF                  		XOR A
     673:  00:8AED  DD 77 05            		LD [IX+CHNPRM_TSlCnt],A
     674:  00:8AF0  DD 77 06            		LD [IX+CHNPRM_CrTnSl],A
     675:  00:8AF3  DD 77 07            		LD [IX+CHNPRM_CrTnSl+1],A
     676:  00:8AF6  DD 7E 02            .CH_AMP:	LD A,[IX+CHNPRM_CrAmSl]
     677:  00:8AF9  CB 79               		BIT 7,C
     678:  00:8AFB  28 13               		JR Z,.CH_NOAM
     679:  00:8AFD  CB 71               		BIT 6,C
     680:  00:8AFF  28 07               		JR Z,.CH_AMIN
     681:  00:8B01  FE 0F               		CP 15
     682:  00:8B03  28 0B               		JR Z,.CH_NOAM
     683:  00:8B05  3C                  		INC A
     684:  00:8B06  18 05               		JR .CH_SVAM
     685:  00:8B08  FE F1               .CH_AMIN:	CP -15
     686:  00:8B0A  28 04               		JR Z,.CH_NOAM
     687:  00:8B0C  3D                  		DEC A
     688:  00:8B0D  DD 77 02            .CH_SVAM:	LD [IX+CHNPRM_CrAmSl],A
     689:  00:8B10  6F                  .CH_NOAM:	LD L,A
     690:  00:8B11  78                  		LD A,B
     691:  00:8B12  E6 0F               		AND 15
     692:  00:8B14  85                  		ADD A,L
     693:  00:8B15  F2 19 8B            		JP P,.CH_APOS
     694:  00:8B18  AF                  		XOR A
     695:  00:8B19  FE 10               .CH_APOS:	CP 16
     696:  00:8B1B  38 02               		JR C,.CH_VOL
     697:  00:8B1D  3E 0F               		LD A,15
     698:  00:8B1F  DD B6 1C            .CH_VOL:	OR [IX+CHNPRM_Volume]
     699:  00:8B22  6F                  		LD L,A
     700:  00:8B23  26 00               		LD H,0
     701:  00:8B25  11 40 F1            		LD DE,VT_
     702:  00:8B28  19                  		ADD HL,DE
     703:  00:8B29  7E                  		LD A,[HL]
     704:  00:8B2A  CB 41               .CH_ENV:	BIT 0,C
     705:  00:8B2C  20 03               		JR NZ,.CH_NOEN
     706:  00:8B2E  DD B6 14            		OR [IX+CHNPRM_Env_En]
     707:  00:8B31  32 4A F1            .CH_NOEN:	LD [AYREGS+AR_AmplC],A
     708:  00:8B34  CB 78               		BIT 7,B
     709:  00:8B36  79                  		LD A,C
     710:  00:8B37  28 19               		JR Z,.NO_ENSL
     711:  00:8B39  17                  		RLA
     712:  00:8B3A  17                  		RLA
     713:  00:8B3B  CB 2F               		SRA A
     714:  00:8B3D  CB 2F               		SRA A
     715:  00:8B3F  CB 2F               		SRA A
     716:  00:8B41  DD 86 04            		ADD A,[IX+CHNPRM_CrEnSl] ;SEE COMMENT BELOW
     717:  00:8B44  CB 68               		BIT 5,B
     718:  00:8B46  28 03               		JR Z,.NO_ENAC
     719:  00:8B48  DD 77 04            		LD [IX+CHNPRM_CrEnSl],A
     720:  00:8B4B  21 1D F0            .NO_ENAC:	LD HL,PT3_AddToEn
     721:  00:8B4E  86                  		ADD A,[HL] ;BUG IN PT3 - NEED WORD HERE.
     722:  00:8B4F                      			   ;FIX IT IN NEXT VERSION?
     723:  00:8B4F  77                  		LD [HL],A
     724:  00:8B50  18 0E               		JR .CH_MIX
     725:  00:8B52  1F                  .NO_ENSL:	RRA
     726:  00:8B53  DD 86 03            		ADD A,[IX+CHNPRM_CrNsSl]
     727:  00:8B56  32 7F F0            		LD [AddToNs],A
     728:  00:8B59  CB 68               		BIT 5,B
     729:  00:8B5B  28 03               		JR Z,.CH_MIX
     730:  00:8B5D  DD 77 03            		LD [IX+CHNPRM_CrNsSl],A
     731:  00:8B60  78                  .CH_MIX:	LD A,B
     732:  00:8B61  1F                  		RRA
     733:  00:8B62  E6 48               		AND $48
     734:  00:8B64  21 47 F1            .CH_EXIT:	LD HL,AYREGS+AR_Mixer
     735:  00:8B67  B6                  		OR [HL]
     736:  00:8B68  0F                  		RRCA
     737:  00:8B69  77                  		LD [HL],A
     738:  00:8B6A  E1                  		POP HL
     739:  00:8B6B  AF                  		XOR A
     740:  00:8B6C  DD B6 0A            		OR [IX+CHNPRM_COnOff]
     741:  00:8B6F  C8                  		RET Z
     742:  00:8B70  DD 35 0A            		DEC [IX+CHNPRM_COnOff]
     743:  00:8B73  C0                  		RET NZ
     744:  00:8B74  DD AE 15            		XOR [IX+CHNPRM_Flags]
     745:  00:8B77  DD 77 15            		LD [IX+CHNPRM_Flags],A
     746:  00:8B7A  1F                  		RRA
     747:  00:8B7B  DD 7E 0B            		LD A,[IX+CHNPRM_OnOffD]
     748:  00:8B7E  38 03               		JR C,.CH_ONDL
     749:  00:8B80  DD 7E 0C            		LD A,[IX+CHNPRM_OffOnD]
     750:  00:8B83  DD 77 0A            .CH_ONDL:	LD [IX+CHNPRM_COnOff],A
     751:  00:8B86  C9                  		RET
     752:  00:8B87                      
     753:  00:8B87  AF                  PT3_PLAY:	XOR A
     754:  00:8B88  32 1D F0            		LD [PT3_AddToEn],A
     755:  00:8B8B  32 47 F1            		LD [AYREGS+AR_Mixer],A
     756:  00:8B8E  3D                  		DEC A
     757:  00:8B8F  32 4D F1            		LD [AYREGS+AR_EnvTp],A
     758:  00:8B92  21 7A F0            		LD HL,DelyCnt
     759:  00:8B95  35                  		DEC [HL]
     760:  00:8B96  C2 1D 8C            		JP NZ,.PL2
     761:  00:8B99  21 3E F0            		LD HL,ChanA+CHNPRM_NtSkCn
     762:  00:8B9C  35                  		DEC [HL]
     763:  00:8B9D  20 4E               		JR NZ,.PL1B
     764:  00:8B9F  ED 4B 12 F0         		LD BC,[PT3_AdInPtA]
     765:  00:8BA3  0A                  		LD A,[BC]
     766:  00:8BA4  A7                  		AND A
     767:  00:8BA5  20 3B               		JR NZ,.PL1A
     768:  00:8BA7  57                  		LD D,A
     769:  00:8BA8  32 7E F0            		LD [Ns_Base],A
     770:  00:8BAB  2A 03 F0            		LD HL,[PT3_CrPsPtr]
     771:  00:8BAE  23                  		INC HL
     772:  00:8BAF  7E                  		LD A,[HL]
     773:  00:8BB0  3C                  		INC A
     774:  00:8BB1  20 08               		JR NZ,.PLNLP
     775:  00:8BB3  CD 1D 87            		CALL CHECKLP
     776:  00:8BB6  2A 18 F0            		LD HL,[PT3_LPosPtr]
     777:  00:8BB9  7E                  		LD A,[HL]
     778:  00:8BBA  3C                  		INC A
     779:  00:8BBB  22 03 F0            .PLNLP:	LD [PT3_CrPsPtr],HL
     780:  00:8BBE  3D                  		DEC A
     781:  00:8BBF  87                  		ADD A,A
     782:  00:8BC0  5F                  		LD E,A
     783:  00:8BC1  CB 12               		RL D
     784:  00:8BC3  2A 1A F0            		LD HL,[PT3_PatsPtr]
     785:  00:8BC6  19                  		ADD HL,DE
     786:  00:8BC7  ED 5B 01 F0         		LD DE,[PT3_MODADDR]
     787:  00:8BCB  ED 73 0D F0         		LD [PT3_PSP],SP
     788:  00:8BCF  F9                  		LD SP,HL
     789:  00:8BD0  E1                  		POP HL
     790:  00:8BD1  19                  		ADD HL,DE
     791:  00:8BD2  44                  		LD B,H
     792:  00:8BD3  4D                  		LD C,L
     793:  00:8BD4  E1                  		POP HL
     794:  00:8BD5  19                  		ADD HL,DE
     795:  00:8BD6  22 14 F0            		LD [PT3_AdInPtB],HL
     796:  00:8BD9  E1                  		POP HL
     797:  00:8BDA  19                  		ADD HL,DE
     798:  00:8BDB  22 16 F0            		LD [PT3_AdInPtC],HL
     799:  00:8BDE  ED 7B 0D F0         		LD SP,[PT3_PSP]
     800:  00:8BE2                      
     801:  00:8BE2  DD 21 2F F0         .PL1A:		LD IX,ChanA+12
     802:  00:8BE6  CD C5 88            		CALL PTDECOD
     803:  00:8BE9  ED 43 12 F0         		LD [PT3_AdInPtA],BC
     804:  00:8BED                      
     805:  00:8BED  21 5B F0            .PL1B:		LD HL,ChanB+CHNPRM_NtSkCn
     806:  00:8BF0  35                  		DEC [HL]
     807:  00:8BF1  20 0F               		JR NZ,.PL1C
     808:  00:8BF3  DD 21 4C F0         		LD IX,ChanB+12
     809:  00:8BF7  ED 4B 14 F0         		LD BC,[PT3_AdInPtB]
     810:  00:8BFB  CD C5 88            		CALL PTDECOD
     811:  00:8BFE  ED 43 14 F0         		LD [PT3_AdInPtB],BC
     812:  00:8C02                      
     813:  00:8C02  21 78 F0            .PL1C:		LD HL,ChanC+CHNPRM_NtSkCn
     814:  00:8C05  35                  		DEC [HL]
     815:  00:8C06  20 0F               		JR NZ,.PL1D
     816:  00:8C08  DD 21 69 F0         		LD IX,ChanC+12
     817:  00:8C0C  ED 4B 16 F0         		LD BC,[PT3_AdInPtC]
     818:  00:8C10  CD C5 88            		CALL PTDECOD
     819:  00:8C13  ED 43 16 F0         		LD [PT3_AdInPtC],BC
     820:  00:8C17                      
     821:  00:8C17  3A 1C F0            .PL1D:		LD A,[PT3_Delay]
     822:  00:8C1A  32 7A F0            		LD [DelyCnt],A
     823:  00:8C1D                      
     824:  00:8C1D  DD 21 23 F0         .PL2:		LD IX,ChanA
     825:  00:8C21  2A 40 F1            		LD HL,[AYREGS+AR_TonA]
     826:  00:8C24  CD 35 8A            		CALL CHREGS
     827:  00:8C27  22 40 F1            		LD [AYREGS+AR_TonA],HL
     828:  00:8C2A  3A 4A F1            		LD A,[AYREGS+AR_AmplC]
     829:  00:8C2D  32 48 F1            		LD [AYREGS+AR_AmplA],A
     830:  00:8C30  DD 21 40 F0         		LD IX,ChanB
     831:  00:8C34  2A 42 F1            		LD HL,[AYREGS+AR_TonB]
     832:  00:8C37  CD 35 8A            		CALL CHREGS
     833:  00:8C3A  22 42 F1            		LD [AYREGS+AR_TonB],HL
     834:  00:8C3D  3A 4A F1            		LD A,[AYREGS+AR_AmplC]
     835:  00:8C40  32 49 F1            		LD [AYREGS+AR_AmplB],A
     836:  00:8C43  DD 21 5D F0         		LD IX,ChanC
     837:  00:8C47  2A 44 F1            		LD HL,[AYREGS+AR_TonC]
     838:  00:8C4A  CD 35 8A            		CALL CHREGS
     839:  00:8C4D  22 44 F1            		LD [AYREGS+AR_TonC],HL
     840:  00:8C50                      
     841:  00:8C50  2A 7E F0            		LD HL,[Ns_Base_AddToNs]
     842:  00:8C53  7C                  		LD A,H
     843:  00:8C54  85                  		ADD A,L
     844:  00:8C55  32 46 F1            		LD [AYREGS+AR_Noise],A
     845:  00:8C58                      
     846:  00:8C58  3A 1D F0            		LD A,[PT3_AddToEn]
     847:  00:8C5B  5F                  		LD E,A
     848:  00:8C5C  87                  		ADD A,A
     849:  00:8C5D  9F                  		SBC A,A
     850:  00:8C5E  57                  		LD D,A
     851:  00:8C5F  2A 4E F1            		LD HL,[EnvBase]
     852:  00:8C62  19                  		ADD HL,DE
     853:  00:8C63  ED 5B 7B F0         		LD DE,[CurESld]
     854:  00:8C67  19                  		ADD HL,DE
     855:  00:8C68  22 4B F1            		LD [AYREGS+AR_Env],HL
     856:  00:8C6B                      
     857:  00:8C6B  AF                  		XOR A
     858:  00:8C6C  21 7D F0            		LD HL,CurEDel
     859:  00:8C6F  B6                  		OR [HL]
     860:  00:8C70  C8                  		RET Z
     861:  00:8C71  35                  		DEC [HL]
     862:  00:8C72  C0                  		RET NZ
     863:  00:8C73  3A 1E F0            		LD A,[PT3_Env_Del]
     864:  00:8C76  77                  		LD [HL],A
     865:  00:8C77  2A 1F F0            		LD HL,[PT3_ESldAdd]
     866:  00:8C7A  19                  		ADD HL,DE
     867:  00:8C7B  22 7B F0            		LD [CurESld],HL
     868:  00:8C7E  C9                  		RET
     869:  00:8C7F                      
     870:  00:8C7F  AF                  PT3_ROUT:	XOR A
     871:  00:8C80                      	
     872:  00:8C80                      ROUT_A0:	; --- FIXES BITS 6 AND 7 OF MIXER ---
     873:  00:8C80  21 47 F1            		LD	HL,AYREGS+AR_Mixer
     874:  00:8C83  CB FE               		set	7,[hl]
     875:  00:8C85  CB B6               		res	6,[hl]
     876:  00:8C87                      
     877:  00:8C87  0E A0               		LD C,$A0
     878:  00:8C89  21 40 F1            		LD HL,AYREGS
     879:  00:8C8C  ED 79               .LOUT:		OUT [C],A
     880:  00:8C8E  0C                  		INC C
     881:  00:8C8F  ED A3               		OUTI 
     882:  00:8C91  0D                  		DEC C
     883:  00:8C92  3C                  		INC A
     884:  00:8C93  FE 0D               		CP 13
     885:  00:8C95  20 F5               		JR NZ,.LOUT
     886:  00:8C97  ED 79               		OUT [C],A
     887:  00:8C99  7E                  		LD A,[HL]
     888:  00:8C9A  A7                  		AND A
     889:  00:8C9B  F8                  		RET M
     890:  00:8C9C  0C                  		INC C
     891:  00:8C9D  ED 79               		OUT [C],A
     892:  00:8C9F  C9                  		RET
     893:  00:8CA0                      
     894:  00:8CA0  64                  NT_DATA:	db (T_NEW_0-T1_)*2
     895:  00:8CA1  2A                  		db TCNEW_0-T_
     896:  00:8CA2  65                  		db (T_OLD_0-T1_)*2+1
     897:  00:8CA3  00                  		db TCOLD_0-T_
     898:  00:8CA4  01                  		db (T_NEW_1-T1_)*2+1
     899:  00:8CA5  0C                  		db TCNEW_1-T_
     900:  00:8CA6  01                  		db (T_OLD_1-T1_)*2+1
     901:  00:8CA7  0C                  		db TCOLD_1-T_
     902:  00:8CA8  94                  		db (T_NEW_2-T1_)*2
     903:  00:8CA9  35                  		db TCNEW_2-T_
     904:  00:8CAA  30                  		db (T_OLD_2-T1_)*2
     905:  00:8CAB  0E                  		db TCOLD_2-T_
     906:  00:8CAC  60                  		db (T_NEW_3-T1_)*2
     907:  00:8CAD  20                  		db TCNEW_3-T_
     908:  00:8CAE  60                  		db (T_OLD_3-T1_)*2
     909:  00:8CAF  21                  		db TCOLD_3-T_
     910:  00:8CB0                      
     911:  00:8CB0                      T_:
     912:  00:8CB0                      
     913:  00:8CB0                      TCOLD_0:	db $00+1,$04+1,$08+1,$0A+1,$0C+1,$0E+1,$12+1,$14+1
     913:  00:8CB0  01 05 09 0B 0D 0F 13 15 
     914:  00:8CB8  19 25 3D 00         		db $18+1,$24+1,$3C+1,0
     915:  00:8CBC                      TCNEW_1:	
     916:  00:8CBC  5D 00               TCOLD_1:	db $5C+1,0
     917:  00:8CBE                      TCOLD_2:	db $30+1,$36+1,$4C+1,$52+1,$5E+1,$70+1,$82,$8C,$9C
     917:  00:8CBE  31 37 4D 53 5F 71 82 8C 9C 
     918:  00:8CC7                      		db $9E,$A0,$A6,$A8,$AA,$AC,$AE,$AE,0
     918:  00:8CC7  9E A0 A6 A8 AA AC AE AE 00 
     919:  00:8CD0  57                  TCNEW_3:	db $56+1
     920:  00:8CD1                      TCOLD_3:	db $1E+1,$22+1,$24+1,$28+1,$2C+1,$2E+1,$32+1,$BE+1,0
     920:  00:8CD1  1F 23 25 29 2D 2F 33 BF 00 
     921:  00:8CDA                      TCNEW_0:	db $1C+1,$20+1,$22+1,$26+1,$2A+1,$2C+1,$30+1,$54+1
     921:  00:8CDA  1D 21 23 27 2B 2D 31 55 
     922:  00:8CE2  BD BF 00            		db $BC+1,$BE+1,0
     923:  00:8CE5                      TCNEW_2:	db $1A+1,$20+1,$24+1,$28+1,$2A+1,$3A+1,$4C+1,$5E+1
     923:  00:8CE5  1B 21 25 29 2B 3B 4D 5F 
     924:  00:8CED  BB BD BF            		db $BA+1,$BC+1,$BE+1
     925:  00:8CF0                      
     926:  00:8CF0  00 01 00 90         EMPTYSAMORN: 	db 0,1,0,$90 ;delete $90 if you don't need default sample
     927:  00:8CF4                      
     928:  00:8CF4                      T_PACK:		; First 12 values of tone tables (packed)
     929:  00:8CF4  0D                  		db ($06EC*2)/256
     930:  00:8CF5  D8                  		db #d8
     931:  00:8CF6  69                  		db $0755-$06EC
     932:  00:8CF7  70                  		db $07C5-$0755
     933:  00:8CF8  76                  		db $083B-$07C5
     934:  00:8CF9  7D                  		db $08B8-$083B
     935:  00:8CFA  85                  		db $093D-$08B8
     936:  00:8CFB  8D                  		db $09CA-$093D
     937:  00:8CFC  95                  		db $0A5F-$09CA
     938:  00:8CFD  9D                  		db $0AFC-$0A5F
     939:  00:8CFE  A8                  		db $0BA4-$0AFC
     940:  00:8CFF  B1                  		db $0C55-$0BA4
     941:  00:8D00  BB                  		db $0D10-$0C55
     942:  00:8D01  0C                  		db ($066D*2)/256
     943:  00:8D02  DA                  		db #da
     944:  00:8D03  62                  		db $06CF-$066D
     945:  00:8D04  68                  		db $0737-$06CF
     946:  00:8D05  6D                  		db $07A4-$0737
     947:  00:8D06  75                  		db $0819-$07A4
     948:  00:8D07  7B                  		db $0894-$0819
     949:  00:8D08  83                  		db $0917-$0894
     950:  00:8D09  8A                  		db $09A1-$0917
     951:  00:8D0A  92                  		db $0A33-$09A1
     952:  00:8D0B  9C                  		db $0ACF-$0A33
     953:  00:8D0C  A4                  		db $0B73-$0ACF
     954:  00:8D0D  AF                  		db $0C22-$0B73
     955:  00:8D0E  B8                  		db $0CDA-$0C22
     956:  00:8D0F  0E                  		db ($0704*2)/256
     957:  00:8D10  08                  		db #08
     958:  00:8D11  6A                  		db $076E-$0704
     959:  00:8D12  72                  		db $07E0-$076E
     960:  00:8D13  78                  		db $0858-$07E0
     961:  00:8D14  7E                  		db $08D6-$0858
     962:  00:8D15  86                  		db $095C-$08D6
     963:  00:8D16  90                  		db $09EC-$095C
     964:  00:8D17  96                  		db $0A82-$09EC
     965:  00:8D18  A0                  		db $0B22-$0A82
     966:  00:8D19  AA                  		db $0BCC-$0B22
     967:  00:8D1A  B4                  		db $0C80-$0BCC
     968:  00:8D1B  BE                  		db $0D3E-$0C80
     969:  00:8D1C  0F                  		db ($07E0*2)/256
     970:  00:8D1D  C0                  		db #c0
     971:  00:8D1E  78                  		db $0858-$07E0
     972:  00:8D1F  88                  		db $08E0-$0858
     973:  00:8D20  80                  		db $0960-$08E0
     974:  00:8D21  90                  		db $09F0-$0960
     975:  00:8D22  98                  		db $0A88-$09F0
     976:  00:8D23  A0                  		db $0B28-$0A88
     977:  00:8D24  B0                  		db $0BD8-$0B28
     978:  00:8D25  A8                  		db $0C80-$0BD8
     979:  00:8D26  E0                  		db $0D60-$0C80
     980:  00:8D27  B0                  		db $0E10-$0D60
     981:  00:8D28  E8                  		db $0EF8-$0E10
      61.  00:8D29                      	include "ayFX-ROM_sjasm.asm"
       1:  00:8D29                      		; --- ayFX REPLAYER v1.31 ---
       2:  00:8D29                      
       3:  00:8D29                      		; --- v1.31	Fixed bug on previous version, only PSG channel C worked
       4:  00:8D29                      		; --- v1.3	Fixed volume and Relative volume versions on the same file, conditional compilation
       5:  00:8D29                      		; ---		Support for dynamic or fixed channel allocation
       6:  00:8D29                      		; --- v1.2f/r	ayFX bank support
       7:  00:8D29                      		; --- v1.11f/r	If a frame volume is zero then no AYREGS update
       8:  00:8D29                      		; --- v1.1f/r	Fixed volume for all ayFX streams
       9:  00:8D29                      		; --- v1.1	Explicit priority (as suggested by AR)
      10:  00:8D29                      		; --- v1.0f	Bug fixed (error when using noise)
      11:  00:8D29                      		; --- v1.0	Initial release
      12:  00:8D29                      
      13:  00:8D29                      		; --- DEFINE AYFXRELATIVE AS 0 FOR FIXED VOLUME VERSION ---
      14:  00:8D29                      		; --- DEFINE AYFXRELATIVE AS 1 FOR RELATIVE VOLUME VERSION ---
      15:  00:8D29  (00:0000)           AYFXRELATIVE equ 0
      16:  00:8D29                      
      17:  00:8D29                      ayFX_SETUP:	; ---          ayFX replayer setup          ---
      18:  00:8D29                      		; --- INPUT: HL -> pointer to the ayFX bank ---
      19:  00:8D29  22 41 F2            		ld	[ayFX_BANK],hl			; Current ayFX bank
      20:  00:8D2C  3E 01               		ld	a,1				; a:=0
      21:  00:8D2E  32 40 F2            		ld	[ayFX_MODE],a			; Initial mode: fixed channel
      22:  00:8D31  3C                  		inc	a				; Starting channel (=1)
      23:  00:8D32  32 4A F2            		ld	[ayFX_CHANNEL],a		; Updated
      24:  00:8D35                      ayFX_END:	; --- End of an ayFX stream ---
      25:  00:8D35  3E FF               		ld	a,255				; Lowest ayFX priority
      26:  00:8D37  32 43 F2            		ld	[ayFX_PRIORITY],a		; Priority saved (not playing ayFX stream)
      27:  00:8D3A  C9                  		ret					; Return
      28:  00:8D3B                      
      29:  00:8D3B                      ayFX_INIT:	; ---     INIT A NEW ayFX STREAM     ---
      30:  00:8D3B                      		; --- INPUT: A -> sound to be played ---
      31:  00:8D3B                      		; ---        C -> sound priority     ---
      32:  00:8D3B  C5                  		push	bc				; Store bc in stack
      33:  00:8D3C  D5                  		push	de				; Store de in stack
      34:  00:8D3D  E5                  		push	hl				; Store hl in stack
      35:  00:8D3E                      		; --- Check if the index is in the bank ---
      36:  00:8D3E  47                  		ld	b,a				; b:=a (new ayFX stream index)
      37:  00:8D3F  2A 41 F2            		ld	hl,[ayFX_BANK]			; Current ayFX BANK
      38:  00:8D42  7E                  		ld	a,[hl]				; Number of samples in the bank
      39:  00:8D43  B7                  		or	a				; If zero (means 256 samples)...
      40:  00:8D44  28 06               		jr	z,.CHECK_PRI			; ...goto .CHECK_PRI
      41:  00:8D46                      		; The bank has less than 256 samples
      42:  00:8D46  78                  		ld	a,b				; a:=b (new ayFX stream index)
      43:  00:8D47  BE                  		cp	[hl]				; If new index is not in the bank...
      44:  00:8D48  3E 02               		ld	a,2				; a:=2 (error 2: Sample not in the bank)
      45:  00:8D4A  30 21               		jr	nc,.INIT_END			; ...we can't init it
      46:  00:8D4C                      .CHECK_PRI:	; --- Check if the new priority is lower than the current one ---
      47:  00:8D4C                      		; ---   Remember: 0 = highest priority, 15 = lowest priority  ---
      48:  00:8D4C  78                  		ld	a,b				; a:=b (new ayFX stream index)
      49:  00:8D4D  3A 43 F2            		ld	a,[ayFX_PRIORITY]		; a:=Current ayFX stream priority
      50:  00:8D50  B9                  		cp	c				; If new ayFX stream priority is lower than current one...
      51:  00:8D51  3E 01               		ld	a,1				; a:=1 (error 1: A sample with higher priority is being played)
      52:  00:8D53  38 18               		jr	c,.INIT_END			; ...we don't start the new ayFX stream
      53:  00:8D55                      		; --- Set new priority ---
      54:  00:8D55  79                  		ld	a,c				; a:=New priority
      55:  00:8D56  E6 0F               		and	$0F				; We mask the priority
      56:  00:8D58  32 43 F2            		ld	[ayFX_PRIORITY],a		; new ayFX stream priority saved in RAM
      57:  00:8D5B                      
      58:  00:8D5B                      		IF ( AYFXRELATIVE == 1 )
      59:  00:8D5B                    ~ 			; --- Volume adjust using PT3 volume table ---
      60:  00:8D5B                    ~ 			ld	c,a				; c:=New priority (fixed)
      61:  00:8D5B                    ~ 			ld	a,15				; a:=15
      62:  00:8D5B                    ~ 			sub	c				; a:=15-New priority = relative volume
      63:  00:8D5B                    ~ 			jr	z,.INIT_NOSOUND		; If priority is 15 -> no sound output (volume is zero)
      64:  00:8D5B                    ~ 			add	a,a				; a:=a*2
      65:  00:8D5B                    ~ 			add	a,a				; a:=a*4
      66:  00:8D5B                    ~ 			add	a,a				; a:=a*8
      67:  00:8D5B                    ~ 			add	a,a				; a:=a*16
      68:  00:8D5B                    ~ 			ld	e,a				; e:=a
      69:  00:8D5B                    ~ 			ld	d,0				; de:=a
      70:  00:8D5B                    ~ 			ld	hl,VT_				; hl:=PT3 volume table
      71:  00:8D5B                    ~ 			add	hl,de				; hl is a pointer to the relative volume table
      72:  00:8D5B                    ~ 			ld	[ayFX_VT],hl			; Save pointer
      73:  00:8D5B                    ~ 		ENDIF
      74:  00:8D5B                      
      75:  00:8D5B                      		; --- Calculate the pointer to the new ayFX stream ---
      76:  00:8D5B  ED 5B 41 F2         		ld	de,[ayFX_BANK]			; de:=Current ayFX bank
      77:  00:8D5F  13                  		inc	de				; de points to the increments table of the bank
      78:  00:8D60  68                  		ld	l,b				; l:=b (new ayFX stream index)
      79:  00:8D61  26 00               		ld	h,0				; hl:=b (new ayFX stream index)
      80:  00:8D63  29                  		add	hl,hl				; hl:=hl*2
      81:  00:8D64  19                  		add	hl,de				; hl:=hl+de (hl points to the correct increment)
      82:  00:8D65  5E                  		ld	e,[hl]				; e:=lower byte of the increment
      83:  00:8D66  23                  		inc	hl				; hl points to the higher byte of the correct increment
      84:  00:8D67  56                  		ld	d,[hl]				; de:=increment
      85:  00:8D68  19                  		add	hl,de				; hl:=hl+de (hl points to the new ayFX stream)
      86:  00:8D69  22 44 F2            		ld	[ayFX_POINTER],hl		; Pointer saved in RAM
      87:  00:8D6C  AF                  		xor	a				; a:=0 (no errors)
      88:  00:8D6D  E1                  .INIT_END:	pop	hl				; Retrieve hl from stack
      89:  00:8D6E  D1                  		pop	de				; Retrieve de from stack
      90:  00:8D6F  C1                  		pop	bc				; Retrieve bc from stack
      91:  00:8D70  C9                  		ret					; Return
      92:  00:8D71                      
      93:  00:8D71                      		IF ( AYFXRELATIVE == 1 )
      94:  00:8D71                    ~ .INIT_NOSOUND:	; --- Init a sample with relative volume zero -> no sound output ---
      95:  00:8D71                    ~ 			ld	a,255				; Lowest ayFX priority
      96:  00:8D71                    ~ 			ld	[ayFX_PRIORITY],a		; Priority saved (not playing ayFX stream)
      97:  00:8D71                    ~ 			jr	.INIT_END			; Jumps to .INIT_END
      98:  00:8D71                    ~ 		ENDIF
      99:  00:8D71                      
     100:  00:8D71                      ayFX_PLAY:	; --- PLAY A FRAME OF AN ayFX STREAM ---
     101:  00:8D71  3A 43 F2            		ld	a,[ayFX_PRIORITY]		; a:=Current ayFX stream priority
     102:  00:8D74  B7                  		or	a				; If priority has bit 7 on...
     103:  00:8D75  F8                  		ret	m				; ...return
     104:  00:8D76                      		; --- Calculate next ayFX channel (if needed) ---
     105:  00:8D76  3A 40 F2            		ld	a,[ayFX_MODE]			; ayFX mode
     106:  00:8D79  E6 01               		and	1				; If bit0=0 (fixed channel)...
     107:  00:8D7B  28 08               		jr	z,.TAKECB			; ...skip channel changing
     108:  00:8D7D  21 4A F2            		ld	hl,ayFX_CHANNEL			; Old ayFX playing channel
     109:  00:8D80  35                  		dec	[hl]				; New ayFX playing channel
     110:  00:8D81  20 02               		jr	nz,.TAKECB			; If not zero jump to .TAKECB
     111:  00:8D83  36 03               		ld	[hl],3				; If zero -> set channel 3
     112:  00:8D85                      .TAKECB:	; --- Extract control byte from stream ---
     113:  00:8D85  2A 44 F2            		ld	hl,[ayFX_POINTER]		; Pointer to the current ayFX stream
     114:  00:8D88  4E                  		ld	c,[hl]				; c:=Control byte
     115:  00:8D89  23                  		inc	hl				; Increment pointer
     116:  00:8D8A                      		; --- Check if there's new tone on stream ---
     117:  00:8D8A  CB 69               		bit	5,c				; If bit 5 c is off...
     118:  00:8D8C  28 08               		jr	z,.CHECK_NN			; ...jump to .CHECK_NN (no new tone)
     119:  00:8D8E                      		; --- Extract new tone from stream ---
     120:  00:8D8E  5E                  		ld	e,[hl]				; e:=lower byte of new tone
     121:  00:8D8F  23                  		inc	hl				; Increment pointer
     122:  00:8D90  56                  		ld	d,[hl]				; d:=higher byte of new tone
     123:  00:8D91  23                  		inc	hl				; Increment pointer
     124:  00:8D92  ED 53 46 F2         		ld	[ayFX_TONE],de			; ayFX tone updated
     125:  00:8D96                      .CHECK_NN:	; --- Check if there's new noise on stream ---
     126:  00:8D96  CB 71               		bit	6,c				; if bit 6 c is off...
     127:  00:8D98  28 09               		jr	z,.SETPOINTER			; ...jump to .SETPOINTER (no new noise)
     128:  00:8D9A                      		; --- Extract new noise from stream ---
     129:  00:8D9A  7E                  		ld	a,[hl]				; a:=New noise
     130:  00:8D9B  23                  		inc	hl				; Increment pointer
     131:  00:8D9C  FE 20               		cp	$20				; If it's an illegal value of noise (used to mark end of stream)...
     132:  00:8D9E  28 95               		jr.	z,ayFX_END			; ...jump to ayFX_END
     133:  00:8DA0  32 48 F2            		ld	[ayFX_NOISE],a			; ayFX noise updated
     134:  00:8DA3                      .SETPOINTER:	; --- Update ayFX pointer ---
     135:  00:8DA3  22 44 F2            		ld	[ayFX_POINTER],hl		; Update ayFX stream pointer
     136:  00:8DA6                      		; --- Extract volume ---
     137:  00:8DA6  79                  		ld	a,c				; a:=Control byte
     138:  00:8DA7  E6 0F               		and	$0F				; lower nibble
     139:  00:8DA9                      
     140:  00:8DA9                      		IF ( AYFXRELATIVE == 1 )
     141:  00:8DA9                    ~ 			; --- Fix the volume using PT3 Volume Table ---
     142:  00:8DA9                    ~ 			ld	hl,[ayFX_VT]			; hl:=Pointer to relative volume table
     143:  00:8DA9                    ~ 			ld	e,a				; e:=a (ayFX volume)
     144:  00:8DA9                    ~ 			ld	d,0				; d:=0
     145:  00:8DA9                    ~ 			add	hl,de				; hl:=hl+de (hl points to the relative volume of this frame
     146:  00:8DA9                    ~ 			ld	a,[hl]				; a:=ayFX relative volume
     147:  00:8DA9                    ~ 			or	a				; If relative volume is zero...
     148:  00:8DA9                    ~ 		ENDIF
     149:  00:8DA9                      
     150:  00:8DA9  32 49 F2            		ld	[ayFX_VOLUME],a			; ayFX volume updated
     151:  00:8DAC  C8                  		ret	z				; ...return (don't copy ayFX values in to AYREGS)
     152:  00:8DAD                      		; -------------------------------------
     153:  00:8DAD                      		; --- COPY ayFX VALUES IN TO AYREGS ---
     154:  00:8DAD                      		; -------------------------------------
     155:  00:8DAD                      		; --- Set noise channel ---
     156:  00:8DAD  CB 79               		bit	7,c				; If noise is off...
     157:  00:8DAF  20 06               		jr	nz,.SETMASKS			; ...jump to .SETMASKS
     158:  00:8DB1  3A 48 F2            		ld	a,[ayFX_NOISE]			; ayFX noise value
     159:  00:8DB4  32 46 F1            		ld	[AYREGS+6],a			; copied in to AYREGS (noise channel)
     160:  00:8DB7                      .SETMASKS:	; --- Set mixer masks ---
     161:  00:8DB7  79                  		ld	a,c				; a:=Control byte
     162:  00:8DB8  E6 90               		and	$90				; Only bits 7 and 4 (noise and tone mask for psg reg 7)
     163:  00:8DBA  FE 90               		cp	$90				; If no noise and no tone...
     164:  00:8DBC  C8                  		ret	z				; ...return (don't copy ayFX values in to AYREGS)
     165:  00:8DBD                      		; --- Copy ayFX values in to ARYREGS ---
     166:  00:8DBD  0F                  		rrca					; Rotate a to the right (1 TIME)
     167:  00:8DBE  0F                  		rrca					; Rotate a to the right (2 TIMES) (OR mask)
     168:  00:8DBF  16 DB               		ld	d,$DB				; d:=Mask for psg mixer (AND mask)
     169:  00:8DC1                      		; --- Dump to correct channel ---
     170:  00:8DC1  21 4A F2            		ld	hl,ayFX_CHANNEL			; Next ayFX playing channel
     171:  00:8DC4  46                  		ld	b,[hl]				; Channel counter
     172:  00:8DC5                      .CHK1:		; --- Check if playing channel was 1 ---
     173:  00:8DC5  10 0D               		djnz	.CHK2				; Decrement and jump if channel was not 1
     174:  00:8DC7                      .PLAY_C:	; --- Play ayFX stream on channel C ---
     175:  00:8DC7  CD F6 8D            		call	.SETMIXER			; Set PSG mixer value (returning a=ayFX volume and hl=ayFX tone)
     176:  00:8DCA  32 4A F1            		ld	[AYREGS+10],a			; Volume copied in to AYREGS (channel C volume)
     177:  00:8DCD  CB 51               		bit	2,c				; If tone is off...
     178:  00:8DCF  C0                  		ret	nz				; ...return
     179:  00:8DD0  22 44 F1            		ld	[AYREGS+4],hl			; copied in to AYREGS (channel C tone)
     180:  00:8DD3  C9                  		ret					; Return
     181:  00:8DD4                      .CHK2:		; --- Check if playing channel was 2 ---
     182:  00:8DD4  CB 0A               		rrc	d				; Rotate right AND mask
     183:  00:8DD6  0F                  		rrca					; Rotate right OR mask
     184:  00:8DD7  10 0D               		djnz	.CHK3				; Decrement and jump if channel was not 2
     185:  00:8DD9                      .PLAY_B:	; --- Play ayFX stream on channel B ---
     186:  00:8DD9  CD F6 8D            		call	.SETMIXER			; Set PSG mixer value (returning a=ayFX volume and hl=ayFX tone)
     187:  00:8DDC  32 49 F1            		ld	[AYREGS+9],a			; Volume copied in to AYREGS (channel B volume)
     188:  00:8DDF  CB 49               		bit	1,c				; If tone is off...
     189:  00:8DE1  C0                  		ret	nz				; ...return
     190:  00:8DE2  22 42 F1            		ld	[AYREGS+2],hl			; copied in to AYREGS (channel B tone)
     191:  00:8DE5  C9                  		ret					; Return
     192:  00:8DE6                      .CHK3:		; --- Check if playing channel was 3 ---
     193:  00:8DE6  CB 0A               		rrc	d				; Rotate right AND mask
     194:  00:8DE8  0F                  		rrca					; Rotate right OR mask
     195:  00:8DE9                      .PLAY_A:	; --- Play ayFX stream on channel A ---
     196:  00:8DE9  CD F6 8D            		call	.SETMIXER			; Set PSG mixer value (returning a=ayFX volume and hl=ayFX tone)
     197:  00:8DEC  32 48 F1            		ld	[AYREGS+8],a			; Volume copied in to AYREGS (channel A volume)
     198:  00:8DEF  CB 41               		bit	0,c				; If tone is off...
     199:  00:8DF1  C0                  		ret	nz				; ...return
     200:  00:8DF2  22 40 F1            		ld	[AYREGS+0],hl			; copied in to AYREGS (channel A tone)
     201:  00:8DF5  C9                  		ret					; Return
     202:  00:8DF6                      .SETMIXER:	; --- Set PSG mixer value ---
     203:  00:8DF6  4F                  		ld	c,a				; c:=OR mask
     204:  00:8DF7  3A 47 F1            		ld	a,[AYREGS+7]			; a:=PSG mixer value
     205:  00:8DFA  A2                  		and	d				; AND mask
     206:  00:8DFB  B1                  		or	c				; OR mask
     207:  00:8DFC  32 47 F1            		ld	[AYREGS+7],a			; PSG mixer value updated
     208:  00:8DFF  3A 49 F2            		ld	a,[ayFX_VOLUME]			; a:=ayFX volume value
     209:  00:8E02  2A 46 F2            		ld	hl,[ayFX_TONE]			; ayFX tone value
     210:  00:8E05  C9                  		ret					; Return
     211:  00:8E06                      
     212:  00:8E06                      		IF ( AYFXRELATIVE == 1 )
     213:  00:8E06                    ~ 			; --- UNCOMMENT THIS IF YOU DON'T USE THIS REPLAYER WITH PT3 REPLAYER ---
     214:  00:8E06                    ~ 		;VT_:	.INCBIN	"VT.BIN"
     215:  00:8E06                    ~ 			; --- UNCOMMENT THIS IF YOU DON'T USE THIS REPLAYER WITH PT3 REPLAYER ---
     216:  00:8E06                    ~ 		ENDIF
      62.  00:8E06                      	
      63.  00:8E06                      	
      64.  00:8E06                      
      65.  00:8E06                      ;;=====================================================
      66.  00:8E06                      ;;DEFINICIÓN DE CANTIONES Y EFECTOS DE SONIDO
      67.  00:8E06                      ;;=====================================================		
      68.  00:8E06                      song:
      69.  00:8E06  (0968)              	incbin "bloodytears_castlevania.99"
      70.  00:976E                      	
      71.  00:976E                      sfx_bank:
      72.  00:976E  (004B)              	incbin "demo.afb"
      73.  00:97B9                      
     125   00:97B9                      	
     126   00:97B9                      	include "subr_ayudas.asm"
       1.  00:97B9                      ;;=====================================================
       2.  00:97B9                      ;;SUBRUTINAS MANEJO DE OBJETOS AYUDA
       3.  00:97B9                      ;;=====================================================	
       4.  00:97B9                      
       5.  00:97B9                      ;;=====================================================
       6.  00:97B9                      ;;INICIALIZA_AYUDAS
       7.  00:97B9                      ;;=====================================================	
       8.  00:97B9                      ; función: 	inicializa las variables de estructuras de ayuda del array lista_ayudas
       9.  00:97B9                      ; entrada: 	lista_ayudas
      10.  00:97B9                      ; salida: 	lista_ayudas
      11.  00:97B9                      inicializa_ayudas:
      12.  00:97B9                      	;oración
      13.  00:97B9  DD 21 0C A8         	LD		IX, ayuda_oracion
      14.  00:97BD  DD 36 00 00         	LD		(IX), INACTIVA			
      15.  00:97C1  21 B7 A7            	LD		HL, array_oracionon
      16.  00:97C4  DD 74 01            	LD		(IX + 1), H
      17.  00:97C7  DD 75 02            	LD		(IX + 2), L
      18.  00:97CA  21 BB A7            	LD		HL, array_oracionoff
      19.  00:97CD  DD 74 03            	LD		(IX + 3), H
      20.  00:97D0  DD 75 04            	LD		(IX + 4), L
      21.  00:97D3  DD 36 05 A3         	LD		(IX + 5), POSORACION
      22.  00:97D7  DD 36 06 20         	LD		(IX + 6), POSORACIONX
      23.  00:97DB                      ;	LD		(IX + 7), POSAYUDASY	;como es constante y no se cambia se puede inicializar la estructura con el valor y ahorramos tiempo
      24.  00:97DB  21 8D 99            	LD		HL, accion_oracion
      25.  00:97DE  DD 74 08            	LD		(IX + 8), H
      26.  00:97E1  DD 75 09            	LD		(IX + 9), L
      27.  00:97E4                      	
      28.  00:97E4                      	;cruz
      29.  00:97E4  DD 21 1D A8         	LD		IX, ayuda_cruz
      30.  00:97E8  DD 36 00 00         	LD		(IX), INACTIVA			
      31.  00:97EC  21 BF A7            	LD		HL, array_cruzon
      32.  00:97EF  DD 74 01            	LD		(IX + 1), H
      33.  00:97F2  DD 75 02            	LD		(IX + 2), L
      34.  00:97F5  21 C3 A7            	LD		HL, array_cruzoff
      35.  00:97F8  DD 74 03            	LD		(IX + 3), H
      36.  00:97FB  DD 75 04            	LD		(IX + 4), L
      37.  00:97FE  DD 36 05 A7         	LD		(IX + 5), POSCRUZ
      38.  00:9802  DD 36 06 40         	LD		(IX + 6), POSCRUZX
      39.  00:9806                      ;	LD		(IX + 7), POSAYUDASY	;como es constante y no se cambia se puede inicializar la estructura con el valor y ahorramos tiempo
      40.  00:9806  21 8E 99            	LD		HL, accion_cruz
      41.  00:9809  DD 74 08            	LD		(IX + 8), H
      42.  00:980C  DD 75 09            	LD		(IX + 9), L
      43.  00:980F                      	
      44.  00:980F                      	;agua bendita
      45.  00:980F  DD 21 2E A8         	LD		IX, ayuda_aguabendita
      46.  00:9813  DD 36 00 00         	LD		(IX), INACTIVA			
      47.  00:9817  21 C7 A7            	LD		HL, array_aguaon
      48.  00:981A  DD 74 01            	LD		(IX + 1), H
      49.  00:981D  DD 75 02            	LD		(IX + 2), L
      50.  00:9820  21 CB A7            	LD		HL, array_aguaoff
      51.  00:9823  DD 74 03            	LD		(IX + 3), H
      52.  00:9826  DD 75 04            	LD		(IX + 4), L
      53.  00:9829  DD 36 05 AB         	LD		(IX + 5), POSAGUA
      54.  00:982D  DD 36 06 60         	LD		(IX + 6), POSAGUAX
      55.  00:9831                      ;	LD		(IX + 7), POSAYUDASY	;como es constante y no se cambia se puede inicializar la estructura con el valor y ahorramos tiempo
      56.  00:9831  21 8F 99            	LD		HL, accion_agua
      57.  00:9834  DD 74 08            	LD		(IX + 8), H
      58.  00:9837  DD 75 09            	LD		(IX + 9), L
      59.  00:983A                      	
      60.  00:983A                      	;armadura
      61.  00:983A  DD 21 3F A8         	LD		IX, ayuda_armadura
      62.  00:983E  DD 36 00 00         	LD		(IX), INACTIVA			
      63.  00:9842  21 CF A7            	LD		HL, array_armaduraon
      64.  00:9845  DD 74 01            	LD		(IX + 1), H
      65.  00:9848  DD 75 02            	LD		(IX + 2), L
      66.  00:984B  21 D3 A7            	LD		HL, array_armaduraoff
      67.  00:984E  DD 74 03            	LD		(IX + 3), H
      68.  00:9851  DD 75 04            	LD		(IX + 4), L
      69.  00:9854  DD 36 05 AF         	LD		(IX + 5), POSARMAD
      70.  00:9858  DD 36 06 80         	LD		(IX + 6), POSARMADX
      71.  00:985C                      ;	LD		(IX + 7), POSAYUDASY	;como es constante y no se cambia se puede inicializar la estructura con el valor y ahorramos tiempo
      72.  00:985C  21 90 99            	LD		HL, accion_armadura
      73.  00:985F  DD 74 08            	LD		(IX + 8), H
      74.  00:9862  DD 75 09            	LD		(IX + 9), L
      75.  00:9865                      	
      76.  00:9865                      	;planta
      77.  00:9865  DD 21 50 A8         	LD		IX, ayuda_planta
      78.  00:9869  DD 36 00 00         	LD		(IX), INACTIVA			
      79.  00:986D  21 D7 A7            	LD		HL, array_plantaon
      80.  00:9870  DD 74 01            	LD		(IX + 1), H
      81.  00:9873  DD 75 02            	LD		(IX + 2), L
      82.  00:9876  21 DB A7            	LD		HL, array_plantaoff
      83.  00:9879  DD 74 03            	LD		(IX + 3), H
      84.  00:987C  DD 75 04            	LD		(IX + 4), L
      85.  00:987F  DD 36 05 B3         	LD		(IX + 5), POSPLANTA
      86.  00:9883  DD 36 06 A0         	LD		(IX + 6), POSPLANTAX
      87.  00:9887                      ;	LD		(IX + 7), POSAYUDASY	;como es constante y no se cambia se puede inicializar la estructura con el valor y ahorramos tiempo
      88.  00:9887  21 91 99            	LD		HL, accion_planta
      89.  00:988A  DD 74 08            	LD		(IX + 8), H
      90.  00:988D  DD 75 09            	LD		(IX + 9), L
      91.  00:9890                      	
      92.  00:9890                      	;vida extra
      93.  00:9890  DD 21 61 A8         	LD		IX, ayuda_vidaextra
      94.  00:9894  DD 36 00 00         	LD		(IX), INACTIVA			
      95.  00:9898  21 DF A7            	LD		HL, array_extraon
      96.  00:989B  DD 74 01            	LD		(IX + 1), H
      97.  00:989E  DD 75 02            	LD		(IX + 2), L
      98.  00:98A1  21 E3 A7            	LD		HL, array_extraoff
      99.  00:98A4  DD 74 03            	LD		(IX + 3), H
     100.  00:98A7  DD 75 04            	LD		(IX + 4), L
     101.  00:98AA  DD 36 05 B6         	LD		(IX + 5), POSVIDAEXT
     102.  00:98AE  DD 36 06 C0         	LD		(IX + 6), POSVIDAEXTX
     103.  00:98B2                      ;	LD		(IX + 7), POSAYUDASY	;como es constante y no se cambia se puede inicializar la estructura con el valor y ahorramos tiempo
     104.  00:98B2  21 92 99            	LD		HL, accion_vidaextra
     105.  00:98B5  DD 74 08            	LD		(IX + 8), H
     106.  00:98B8  DD 75 09            	LD		(IX + 9), L
     107.  00:98BB                      	
     108.  00:98BB                      	;ballesta
     109.  00:98BB  DD 21 72 A8         	LD		IX, ayuda_ballesta
     110.  00:98BF  DD 36 00 00         	LD		(IX), INACTIVA			
     111.  00:98C3  21 E7 A7            	LD		HL, array_ballestaon
     112.  00:98C6  DD 74 01            	LD		(IX + 1), H
     113.  00:98C9  DD 75 02            	LD		(IX + 2), L
     114.  00:98CC  21 EB A7            	LD		HL, array_ballestaoff
     115.  00:98CF  DD 74 03            	LD		(IX + 3), H
     116.  00:98D2  DD 75 04            	LD		(IX + 4), L
     117.  00:98D5  DD 36 05 BB         	LD		(IX + 5), POSBALLES
     118.  00:98D9  DD 36 06 BB         	LD		(IX + 6), POSBALLES
     119.  00:98DD                      ;	LD		(IX + 7), POSAYUDASY	;como es constante y no se cambia se puede inicializar la estructura con el valor y ahorramos tiempo
     120.  00:98DD  21 93 99            	LD		HL, accion_ballesta
     121.  00:98E0  DD 74 08            	LD		(IX + 8), H
     122.  00:98E3  DD 75 09            	LD		(IX + 9), L
     123.  00:98E6                      fin_resetea_ayudas:
     124.  00:98E6  C9                  	RET
     125.  00:98E7                      
     126.  00:98E7                      
     127.  00:98E7                      ;;=====================================================
     128.  00:98E7                      ;;PINTA_OBJ_AYUDA
     129.  00:98E7                      ;;=====================================================	
     130.  00:98E7                      ; función: 	pinta un objeto de tipo ayuda que se le pase por referencia IX y el tipo en A
     131.  00:98E7                      ; entrada: 	IX - puntero a objeto a mostrar, A - si está on u off
     132.  00:98E7                      ; salida: 	-
     133.  00:98E7                      ; toca:		AF, HL, BC, DE
     134.  00:98E7                      pinta_obj_ayuda:
     135.  00:98E7                      	;se recibe objeto desde fuera, por ejmplo LD IX, ayuda_oracion
     136.  00:98E7                      
     137.  00:98E7  B7                  	OR		 A
     138.  00:98E8  CA F7 98            	JP		 Z,.dibujooff
     139.  00:98EB                      .dibujoon:	
     140.  00:98EB  DD 66 01            	LD		 H, (IX + 1)
     141.  00:98EE  DD 6E 02            	LD		 L, (IX + 2)
     142.  00:98F1  22 B0 84            	LD		(wordaux2), HL
     143.  00:98F4  C3 00 99            	JP		.param_wordaux2
     144.  00:98F7                      .dibujooff:
     145.  00:98F7  DD 66 03            	LD		 H, (IX + 3)
     146.  00:98FA  DD 6E 04            	LD		 L, (IX + 4)
     147.  00:98FD  22 B0 84            	LD		(wordaux2), HL
     148.  00:9900                      
     149.  00:9900                      .param_wordaux2:	
     150.  00:9900  21 00 19            	LD		HL, TILMAP + 256	;calcula posición en tilemap + 256 por colocarse siempre en bank1
     151.  00:9903  DD 7E 05            	LD		 A, (IX + 5)
     152.  00:9906  CD EB 80            	CALL	suma_A_HL
     153.  00:9909  22 AE 84            	LD		(wordaux1), HL		;pongo el valor en wordaux1
     154.  00:990C                      
     155.  00:990C                      .filasycols:
     156.  00:990C  3E 02               	LD		 A, 2				;equivale a LD	A,2 porque A ya valía 1
     157.  00:990E  32 B2 84            	LD		(byteaux1), A	;nº de filas
     158.  00:9911  32 B3 84            	LD		(byteaux2), A	;nº de columnas
     159.  00:9914                      	
     160.  00:9914  C3 6E 84            	JP		pinta_array
     161.  00:9917                      fin_pinta_obj_ayuda:
     162.  00:9917                      
     163.  00:9917                      
     164.  00:9917                      ;;=====================================================
     165.  00:9917                      ;;PINTA_AYUDAS_HABITACIÓN
     166.  00:9917                      ;;=====================================================	
     167.  00:9917                      ; función: 	examina el byte con las ayudas y pinta las que estén seleccionadas según variable habitacion_extras
     168.  00:9917                      ; entrada: 	habitacion_extras
     169.  00:9917                      ; salida: 	-
     170.  00:9917                      pinta_ayudas_habitacion:
     171.  00:9917                      .examina_oracion:
     172.  00:9917  3A F5 A3            	LD		 A, (habitacion_extras)
     173.  00:991A  CB 7F               	BIT		 7,A
     174.  00:991C  CA 28 99            	JP		 Z,.examina_cruz
     175.  00:991F  DD 21 0C A8         	LD		IX, ayuda_oracion
     176.  00:9923  3E 01               	LD		 A, ACTIVA
     177.  00:9925  CD E7 98            	CALL	pinta_obj_ayuda
     178.  00:9928                      .examina_cruz:
     179.  00:9928  3A F5 A3            	LD		 A, (habitacion_extras)
     180.  00:992B  CB 77               	BIT		 6,A
     181.  00:992D  CA 39 99            	JP		 Z,.examina_aguabendita
     182.  00:9930  DD 21 1D A8         	LD		IX, ayuda_cruz
     183.  00:9934  3E 01               	LD		 A, ACTIVA
     184.  00:9936  CD E7 98            	CALL	pinta_obj_ayuda
     185.  00:9939                      .examina_aguabendita:
     186.  00:9939  3A F5 A3            	LD		 A, (habitacion_extras)
     187.  00:993C  CB 6F               	BIT		 5,A
     188.  00:993E  CA 4A 99            	JP		 Z,.examina_armadura
     189.  00:9941  DD 21 2E A8         	LD		IX, ayuda_aguabendita
     190.  00:9945  3E 01               	LD		 A, ACTIVA
     191.  00:9947  CD E7 98            	CALL	pinta_obj_ayuda
     192.  00:994A                      .examina_armadura:
     193.  00:994A  3A F5 A3            	LD		 A, (habitacion_extras)
     194.  00:994D  CB 67               	BIT		 4,A
     195.  00:994F  CA 5B 99            	JP		 Z,.examina_planta
     196.  00:9952  DD 21 3F A8         	LD		IX, ayuda_armadura
     197.  00:9956  3E 01               	LD		 A, ACTIVA
     198.  00:9958  CD E7 98            	CALL	pinta_obj_ayuda
     199.  00:995B                      .examina_planta:
     200.  00:995B  3A F5 A3            	LD		 A, (habitacion_extras)
     201.  00:995E  CB 5F               	BIT		 3,A
     202.  00:9960  CA 6C 99            	JP		 Z,.examina_vidaextra
     203.  00:9963  DD 21 50 A8         	LD		IX, ayuda_planta
     204.  00:9967  3E 01               	LD		 A, ACTIVA
     205.  00:9969  CD E7 98            	CALL	pinta_obj_ayuda
     206.  00:996C                      .examina_vidaextra:
     207.  00:996C  3A F5 A3            	LD		 A, (habitacion_extras)
     208.  00:996F  CB 57               	BIT		 2,A
     209.  00:9971  CA 7D 99            	JP		 Z,.examina_ballesta
     210.  00:9974  DD 21 61 A8         	LD		IX, ayuda_vidaextra
     211.  00:9978  3E 01               	LD		 A, ACTIVA
     212.  00:997A  CD E7 98            	CALL	pinta_obj_ayuda
     213.  00:997D                      .examina_ballesta:
     214.  00:997D  3A F5 A3            	LD		 A, (habitacion_extras)
     215.  00:9980  CB 4F               	BIT		 1,A
     216.  00:9982  C8                  	RET		 Z
     217.  00:9983  DD 21 72 A8         	LD		IX, ayuda_ballesta
     218.  00:9987  3E 01               	LD		 A, ACTIVA
     219.  00:9989  CD E7 98            	CALL	pinta_obj_ayuda
     220.  00:998C                      fin_pinta_ayudas_habitacion:
     221.  00:998C  C9                  	RET
     222.  00:998D                      
     223.  00:998D                      
     224.  00:998D                      
     225.  00:998D                      ;;=====================================================
     226.  00:998D                      ;;ACCION_ORACION
     227.  00:998D                      ;;=====================================================	
     228.  00:998D                      ; función: 	
     229.  00:998D                      ; entrada: 	
     230.  00:998D                      ; salida: 	-
     231.  00:998D                      accion_oracion:
     232.  00:998D                      fin_accion_oracion:
     233.  00:998D  C9                  	RET
     234.  00:998E                      	
     235.  00:998E                      
     236.  00:998E                      ;;=====================================================
     237.  00:998E                      ;;ACCION_CRUZ
     238.  00:998E                      ;;=====================================================	
     239.  00:998E                      ; función: 	
     240.  00:998E                      ; entrada: 	
     241.  00:998E                      ; salida: 	-
     242.  00:998E                      accion_cruz:
     243.  00:998E                      fin_accion_cruz:
     244.  00:998E  C9                  	RET
     245.  00:998F                      
     246.  00:998F                      
     247.  00:998F                      ;;=====================================================
     248.  00:998F                      ;;ACCION_AGUA
     249.  00:998F                      ;;=====================================================	
     250.  00:998F                      ; función: 	
     251.  00:998F                      ; entrada: 	
     252.  00:998F                      ; salida: 	-
     253.  00:998F                      accion_agua:
     254.  00:998F                      fin_accion_agua:
     255.  00:998F  C9                  	RET
     256.  00:9990                      
     257.  00:9990                      
     258.  00:9990                      ;;=====================================================
     259.  00:9990                      ;;ACCION_ARMADURA
     260.  00:9990                      ;;=====================================================	
     261.  00:9990                      ; función: 	
     262.  00:9990                      ; entrada: 	
     263.  00:9990                      ; salida: 	-
     264.  00:9990                      accion_armadura:
     265.  00:9990                      fin_accion_armadura:
     266.  00:9990  C9                  	RET
     267.  00:9991                      
     268.  00:9991                      
     269.  00:9991                      ;;=====================================================
     270.  00:9991                      ;;ACCION_PLANTA
     271.  00:9991                      ;;=====================================================	
     272.  00:9991                      ; función: 	
     273.  00:9991                      ; entrada: 	
     274.  00:9991                      ; salida: 	-
     275.  00:9991                      accion_planta:
     276.  00:9991                      fin_accion_planta:
     277.  00:9991  C9                  	RET
     278.  00:9992                      
     279.  00:9992                      
     280.  00:9992                      ;;=====================================================
     281.  00:9992                      ;;ACCION_VIDAEXTRA
     282.  00:9992                      ;;=====================================================	
     283.  00:9992                      ; función: 	
     284.  00:9992                      ; entrada: 	
     285.  00:9992                      ; salida: 	-
     286.  00:9992                      accion_vidaextra:
     287.  00:9992                      fin_accion_vidaextra:
     288.  00:9992  C9                  	RET
     289.  00:9993                      
     290.  00:9993                      
     291.  00:9993                      ;;=====================================================
     292.  00:9993                      ;;ACCION_BALLESTA
     293.  00:9993                      ;;=====================================================	
     294.  00:9993                      ; función: 	
     295.  00:9993                      ; entrada: 	
     296.  00:9993                      ; salida: 	-
     297.  00:9993                      accion_ballesta:
     298.  00:9993                      fin_accion_ballesta:
     299.  00:9993  C9                  	RET
     300.  00:9994                      
     301.  00:9994                      
     127   00:9994                      	
     128   00:9994                      
     129   00:9994                      ;;=====================================================
     130   00:9994                      ;;DEFINICIÓN DE SUBRUTINAS DE FERNANDO PARA COMPRESIÓN Y SONIDO
     131   00:9994                      ;;=====================================================
     132   00:9994                      ;Este include lleva la rutina de descompresión de ROM/RAM a VRAM de pletter
     133   00:9994                      ;Está adaptada de la original a sjasm
     134   00:9994                      ;	HL = RAM/ROM source	; DE = VRAM destination
     135   00:9994                      depack_VRAM:
     136   00:9994                      	include "PL_VRAM_Depack_SJASM.asm"
       1.  00:9994                      ;-----------------------------------------------------------
       2.  00:9994                      ; Pletter v0.5b VRAM Depacker v1.1 - 16Kb version
       3.  00:9994                      ; HL = RAM/ROM source ; DE = VRAM destination
       4.  00:9994                      ;-----------------------------------------------------------
       5.  00:9994  F3                  	di
       6.  00:9995                      
       7.  00:9995                      ; VRAM address setup
       8.  00:9995  7B                  	ld	a,e
       9.  00:9996  D3 99               	out	[099h],a
      10.  00:9998  7A                  	ld	a,d
      11.  00:9999  F6 40               	or	040h
      12.  00:999B  D3 99               	out	[099h],a
      13.  00:999D                      
      14.  00:999D                      ; Initialization
      15.  00:999D  7E                  	ld	a,[hl]
      16.  00:999E  23                  	inc	hl
      17.  00:999F  D9                  	exx
      18.  00:99A0  11 00 00            	ld	de,0
      19.  00:99A3  87                  	add	a,a
      20.  00:99A4  3C                  	inc	a
      21.  00:99A5  CB 13               	rl	e
      22.  00:99A7  87                  	add	a,a
      23.  00:99A8  CB 13               	rl	e
      24.  00:99AA  87                  	add	a,a
      25.  00:99AB  CB 13               	rl	e
      26.  00:99AD  CB 13               	rl	e
      27.  00:99AF  21 66 9A            	ld	hl,modes
      28.  00:99B2  19                  	add	hl,de
      29.  00:99B3  5E                  	ld	e,[hl]
      30.  00:99B4  DD 6B               	ld	ixl,e
      31.  00:99B6  23                  	inc	hl
      32.  00:99B7  5E                  	ld	e,[hl]
      33.  00:99B8  DD 63               	ld	ixh,e
      34.  00:99BA  1E 01               	ld	e,1
      35.  00:99BC  D9                  	exx
      36.  00:99BD  FD 21 C6 99         	ld	iy,loop
      37.  00:99C1                      
      38.  00:99C1                      ; Main depack loop
      39.  00:99C1  0E 98               literal:ld	c,098h
      40.  00:99C3  ED A3               	outi
      41.  00:99C5  13                  	inc	de
      42.  00:99C6  87                  loop:	add	a,a
      43.  00:99C7  CC 5A 9A              	call	z,getbit
      44.  00:99CA  30 F5               	jr	nc,literal
      45.  00:99CC                      
      46.  00:99CC                      ; Compressed data
      47.  00:99CC  D9                  	exx
      48.  00:99CD  62                  	ld	h,d
      49.  00:99CE  6B                  	ld	l,e
      50.  00:99CF  87                  getlen: add	a,a
      51.  00:99D0  CC 5E 9A            	call	z,getbitexx
      52.  00:99D3  30 1D               	jr	nc,lenok
      53.  00:99D5  87                  lus:	add	a,a
      54.  00:99D6  CC 5E 9A            	call	z,getbitexx
      55.  00:99D9  ED 6A               	adc	hl,hl
      56.  00:99DB  D8                  	ret	c
      57.  00:99DC  87                  	add	a,a
      58.  00:99DD  CC 5E 9A            	call	z,getbitexx
      59.  00:99E0  30 10               	jr	nc,lenok
      60.  00:99E2  87                  	add	a,a
      61.  00:99E3  CC 5E 9A            	call	z,getbitexx
      62.  00:99E6  ED 6A               	adc	hl,hl
      63.  00:99E8  DA 64 9A            	jp	c,Depack_out
      64.  00:99EB  87                  	add	a,a
      65.  00:99EC  CC 5E 9A            	call	z,getbitexx
      66.  00:99EF  DA D5 99            	jp	c,lus
      67.  00:99F2  23                  lenok:  inc	hl
      68.  00:99F3  D9                  	exx
      69.  00:99F4  4E                  	ld	c,[hl]
      70.  00:99F5  23                  	inc	hl
      71.  00:99F6  06 00               	ld	b,0
      72.  00:99F8  CB 79               	bit	7,c
      73.  00:99FA  CA 2D 9A            	jp	z,offsok
      74.  00:99FD  DD E9               	jp	ix
      75.  00:99FF                      
      76.  00:99FF  87                  mode7:  add	a,a
      77.  00:9A00  CC 5A 9A              	call	z,getbit
      78.  00:9A03  CB 10               	rl	b
      79.  00:9A05  87                  mode6:	add	a,a
      80.  00:9A06  CC 5A 9A              	call	z,getbit
      81.  00:9A09  CB 10               	rl	b
      82.  00:9A0B  87                  mode5:  add	a,a
      83.  00:9A0C  CC 5A 9A              	call	z,getbit
      84.  00:9A0F  CB 10               	rl	b
      85.  00:9A11  87                  mode4:  add	a,a
      86.  00:9A12  CC 5A 9A              	call	z,getbit
      87.  00:9A15  CB 10               	rl	b
      88.  00:9A17  87                  mode3:  add	a,a
      89.  00:9A18  CC 5A 9A              	call	z,getbit
      90.  00:9A1B  CB 10               	rl	b
      91.  00:9A1D  87                  mode2:	add	a,a
      92.  00:9A1E  CC 5A 9A              	call	z,getbit
      93.  00:9A21  CB 10               	rl	b
      94.  00:9A23  87                  	add	a,a
      95.  00:9A24  CC 5A 9A              	call	z,getbit
      96.  00:9A27  30 04               	jr	nc,offsok
      97.  00:9A29  B7                  	or	a
      98.  00:9A2A  04                  	inc	b
      99.  00:9A2B  CB B9               	res	7,c
     100.  00:9A2D  03                  offsok: inc	bc
     101.  00:9A2E  E5                  	push	hl
     102.  00:9A2F  D9                  	exx
     103.  00:9A30  E5                  	push	hl
     104.  00:9A31  D9                  	exx
     105.  00:9A32  6B                  	ld	l,e
     106.  00:9A33  62                  	ld	h,d
     107.  00:9A34  ED 42               	sbc	hl,bc
     108.  00:9A36  C1                  	pop	bc
     109.  00:9A37  F5                  	push	af
     110.  00:9A38  7D                  .loop:	ld	a,l
     111.  00:9A39  D3 99               	out	[099h],a
     112.  00:9A3B  7C                  	ld	a,h
     113.  00:9A3C  00                  	nop                     ; VDP timing
     114.  00:9A3D  D3 99               	out	[099h],a
     115.  00:9A3F  00                  	nop                     ; VDP timing
     116.  00:9A40  DB 98               	in	a,[098h]
     117.  00:9A42  08                  	ex	af,af'
     118.  00:9A43  7B                  	ld	a,e
     119.  00:9A44  00                  	nop			; VDP timing
     120.  00:9A45  D3 99               	out	[099h],a
     121.  00:9A47  7A                  	ld	a,d
     122.  00:9A48  F6 40               	or	040h
     123.  00:9A4A  D3 99               	out	[099h],a
     124.  00:9A4C  08                  	ex	af,af'
     125.  00:9A4D  00                  	nop			; VDP timing
     126.  00:9A4E  D3 98               	out	[098h],a
     127.  00:9A50  13                  	inc	de
     128.  00:9A51  ED A1               	cpi
     129.  00:9A53  EA 38 9A            	jp	pe,.loop
     130.  00:9A56  F1                  	pop	af
     131.  00:9A57  E1                  	pop	hl
     132.  00:9A58  FD E9               	jp	iy
     133.  00:9A5A                      
     134.  00:9A5A  7E                  getbit: ld	a,[hl]
     135.  00:9A5B  23                  	inc	hl
     136.  00:9A5C  17                  	rla
     137.  00:9A5D  C9                  	ret
     138.  00:9A5E                      
     139.  00:9A5E                      getbitexx:
     140.  00:9A5E  D9                  	exx
     141.  00:9A5F  7E                  	ld	a,[hl]
     142.  00:9A60  23                  	inc	hl
     143.  00:9A61  D9                  	exx
     144.  00:9A62  17                  	rla
     145.  00:9A63  C9                  	ret
     146.  00:9A64                      
     147.  00:9A64                      ; Depacker exit
     148.  00:9A64                      Depack_out:
     149.  00:9A64  FB                  	ei
     150.  00:9A65  C9                  	ret
     151.  00:9A66                      
     152.  00:9A66                      modes:
     153.  00:9A66  2D 9A               	dw	offsok
     154.  00:9A68  1D 9A               	dw	mode2
     155.  00:9A6A  17 9A               	dw	mode3
     156.  00:9A6C  11 9A               	dw	mode4
     157.  00:9A6E  0B 9A               	dw	mode5
     158.  00:9A70  05 9A               	dw	mode6
     159.  00:9A72  FF 99               	dw	mode7
     137   00:9A74                      
     138   00:9A74                      
     139   00:9A74                      	
     140   00:9A74                      ;;=====================================================
     141   00:9A74                      ;;DEFINICIÓN DE ESTRUCTURAS
     142   00:9A74                      ;;=====================================================		
     143   00:9A74                      	include "estructuras.asm"
       1.  00:9A74                      ;;=====================================================
       2.  00:9A74                      ;;DEFINICIÓN DE ESTRUCTURAS
       3.  00:9A74                      ;;=====================================================
       4.  00:9A74                      
       5.  00:9A74                      ;crear estructura
       6.  00:9A74                      
       7.  00:9A74                      	STRUCT ESTRUCTURA_PUNTOMIRA
       8.  00:9A74                    < posx			DB		100
       9.  00:9A74                    < posy			DB		100
      10.  00:9A74                    < escena			DB		0	;valores porsibles 0 (blanco+rojo en punto de mira) y NEG 0 (al revés)
      11.  00:9A74                    < velocidad		DB		0
      12.  00:9A74                    < boton2_pressed  DB		0
      13.  00:9A74                    < cadencia		DB		5	;nº de veces que se ejecutará el disparo antes de ejecutar un disparo real (porque cuando se pulsa la tecl dispara 3 ó 4 veces de rápido que va)
      14.  00:9A74                    < ; al final he decidido (ya que el punto de mira es el prota) que lo relacionado con el prota vaya en esta estructura
      15.  00:9A74                    < pm_aux1			DB		0	;para llegar a los 16 campos
      16.  00:9A74                    < pm_aux2			DB		0	;para llegar a los 16 campos
      17.  00:9A74                    < pm_aux3			DB		0	;para llegar a los 16 campos
      18.  00:9A74                    < pm_aux4			DB		0	;para llegar a los 16 campos
      19.  00:9A74                    < pm_aux5			DB		0	;para llegar a los 16 campos
      20.  00:9A74                    < pm_aux6			DB		0	;para llegar a los 16 campos
      21.  00:9A74                    < pm_aux7			DB		0	;para llegar a los 16 campos
      22.  00:9A74                    < pm_aux8			DB		0	;para llegar a los 16 campos
      23.  00:9A74                    < pm_aux9			DB		0	;para llegar a los 16 campos
      24.  00:9A74                    < pm_aux10		DB		0	;para llegar a los 16 campos
      25.  00:9A74                    < 	ENDSTRUCT;ESTRUCTURA_PUNTOMIRA
      26.  00:9A74                      
      27.  00:9A74                      	
      28.  00:9A74                      	STRUCT ESTRUCTURA_ENEMIGO
      29.  00:9A74                    < tipo				DB		0	;(0 serpiente por ejemplo) #FF muerto o no existe
      30.  00:9A74                    < posx				DB		5
      31.  00:9A74                    < posy				DB		50
      32.  00:9A74                    < color				DB		5
      33.  00:9A74                    < escena				DB		0
      34.  00:9A74                    < contador_siguiente_escena	DB	0
      35.  00:9A74                    < reset_contador		DB		0
      36.  00:9A74                    < dano				DB		0	;daño
      37.  00:9A74                    < energia				DB		0	;energía del enemigo... si llega a 0 => existe <- 0
      38.  00:9A74                    < ;indica el nº de sprite a mostrar y si está compuesto por uno o dos sprites y si están en horizontal o vertical
      39.  00:9A74                    < ver_hor				DB		0
      40.  00:9A74                    < manejador_dibujo 	DW		0
      41.  00:9A74                    < en_aux3				DB		0
      42.  00:9A74                    < en_aux4				DB		0
      43.  00:9A74                    < 	ENDSTRUCT;ESTRUCTURA_ENEMIGO
      44.  00:9A74                      	
      45.  00:9A74                      	STRUCT ESTRUCTURA_AYUDA		;vidas extra, plantas de curación de energía, reliquias				
      46.  00:9A74                    < activo				DB		0	;0 no activo <>0 activo 											0
      47.  00:9A74                    < postilemem_nousado	DW		0	;pos en memoria ver array_ayudas de cómo se mostrarán (wordaux2)	1,2
      48.  00:9A74                    < postilemem_usado	DW		0	;pos en memoria ver array_ayudas de cómo se mostrarán (wordaux2)	3,4
      49.  00:9A74                    < pospantalla			DB		0	;pos en pantalla (memoria en el banco 1 se le suma 256 + TILEMAP) (wordaux1)	5
      50.  00:9A74                    < posx				DB		0	;pos del pixel central (esquina superior + 8x)						6
      51.  00:9A74                    < posy				DB		112	;pos del pixel central (esquina superior + 8y) (para toas igual)	7
      52.  00:9A74                    < puntero_accion		DW		0	;subrutina que indica la acción si se dispara en el objeto			8,9
      53.  00:9A74                    < ayu_aux1			DB		0	;relleno
      54.  00:9A74                    < ayu_aux2			DB		0	;relleno
      55.  00:9A74                    < ayu_aux3			DB		0	;relleno
      56.  00:9A74                    < ayu_aux4			DB		0	;relleno
      57.  00:9A74                    < ayu_aux5			DB		0	;relleno
      58.  00:9A74                    < ayu_aux6			DB		0	;relleno
      59.  00:9A74                    < ayu_aux7			DB		0	;relleno
      60.  00:9A74                    < 	ENDSTRUCT;ESTRUCTURA_AYUDA
      61.  00:9A74                      
      62.  00:9A74                      
      63.  00:9A74                      	STRUCT ESTRUCTURA_ANTORCHA
      64.  00:9A74                    < activo				DB		0	;0 no activa <>0 activo
      65.  00:9A74                    < postilemem_antor1	DW		0	;pos en memoria ver array_antorcha de cómo se mostrará (wordaux2)	1,2
      66.  00:9A74                    < pospantalla_antor1	DB		0	;pos en pantalla (memoria en el banco 1 se le suma 256 + TILEMAP) (wordaux1)	3
      67.  00:9A74                    < pospantalla_antor2	DB		0	;pos en pantalla (memoria en el banco 1 se le suma 256 + TILEMAP) (wordaux1)	4
      68.  00:9A74                    < escena				DB		0	;(va entre 0 y 1 - 0=>llama1 y llama2 o 1=>llama2 y llama1	7 - tiles 196 y 197)	5
      69.  00:9A74                    < cont_sig_escena		DB		10	;	6
      70.  00:9A74                    < 	ENDSTRUCT;ESTRUCTURA_ANTORCHA
      71.  00:9A74                      
      72.  00:9A74                      	STRUCT ESTRUCTURA_ESQUELETO
      73.  00:9A74                    < activo				DB		0	;0 no activa <>0 activo
      74.  00:9A74                    < postilemem_antor1	DW		0	;pos en memoria ver array_antorcha de cómo se mostrará (wordaux2)	1,2
      75.  00:9A74                    < pospantalla_esquel1	DB		0	;pos en pantalla (memoria en el banco 1 se le suma 256 + TILEMAP) (wordaux1)	3
      76.  00:9A74                    < pospantalla_esquel2	DB		0	;pos en pantalla (memoria en el banco 1 se le suma 256 + TILEMAP) (wordaux1)	4
      77.  00:9A74                    < escena				DB		0	;(va entre 0 y 4 - tiles 164, 165, 164, 166)	5
      78.  00:9A74                    < cont_sig_escena		DB		10	;	6
      79.  00:9A74                    < 	ENDSTRUCT;ESTRUCTURA_ESQUELETO
      80.  00:9A74                      
      81.  00:9A74                      
      82.  00:9A74                      
      83.  00:9A74                      
      84.  00:9A74                      
      85.  00:9A74                      
     144   00:9A74                      	
     145   00:9A74                      ;;=====================================================
     146   00:9A74                      ;;DEFINICIÓN DE VARIABLES
     147   00:9A74                      ;;=====================================================		
     148   00:9A74                      	include "sprites.asm"
       1.  00:9A74                      ;;=====================================================
       2.  00:9A74                      ;;DEFINICIÓN DE SPRITES
       3.  00:9A74                      ;;=====================================================	
       4.  00:9A74                      
       5.  00:9A74                      
       6.  00:9A74                      ;; NOTA:
       7.  00:9A74                      ;~ sprite_reliquia_oracion: on/off
       8.  00:9A74                      ;~ sprite_reliquia_cruz: on/off
       9.  00:9A74                      ;~ sprite_reliquia_agua: on/off
      10.  00:9A74                      ;~ sprite_peto: on/off
      11.  00:9A74                      ;~ sprite_planta: on/off
      12.  00:9A74                      ;~ sprite_vida_extra: on/off
      13.  00:9A74                      ;~ sprite_ballesta_mejorada: on/off
      14.  00:9A74                      
      15.  00:9A74                      ;~ iban a ser sprites pero por falta de recursos serán tiles
      16.  00:9A74                      
      17.  00:9A74                      
      18.  00:9A74                      sprites_pantantalla:
      19.  00:9A74                      
      20.  00:9A74                      ;; PARTE 1: SPRITES COMUNES
      21.  00:9A74                      
      22.  00:9A74                      sprites_comunes:
      23.  00:9A74                      sprite_punto_mira_1:	;color 8
      24.  00:9A74                      	db #FF,#FF,#C0,#C0,#C0,#C0,#C0,#C0
      24.  00:9A74  FF FF C0 C0 C0 C0 C0 C0 
      25.  00:9A7C                      	db #C0,#C0,#C0,#C0,#C0,#C0,#FF,#FF
      25.  00:9A7C  C0 C0 C0 C0 C0 C0 FF FF 
      26.  00:9A84                      	db #FF,#FF,#03,#03,#03,#03,#03,#03
      26.  00:9A84  FF FF 03 03 03 03 03 03 
      27.  00:9A8C                      	db #03,#03,#03,#03,#03,#03,#FF,#FF
      27.  00:9A8C  03 03 03 03 03 03 FF FF 
      28.  00:9A94                      	
      29.  00:9A94                      sprite_punto_mira_2: 	;color 15
      30.  00:9A94                      	db #00,#00,#00,#00,#0F,#0F,#0C,#0C
      30.  00:9A94  00 00 00 00 0F 0F 0C 0C 
      31.  00:9A9C                      	db #0C,#0C,#0F,#0F,#00,#00,#00,#00
      31.  00:9A9C  0C 0C 0F 0F 00 00 00 00 
      32.  00:9AA4                      	db #00,#00,#00,#00,#F0,#F0,#30,#30
      32.  00:9AA4  00 00 00 00 F0 F0 30 30 
      33.  00:9AAC                      	db #30,#30,#F0,#F0,#00,#00,#00,#00
      33.  00:9AAC  30 30 F0 F0 00 00 00 00 
      34.  00:9AB4                      	
      35.  00:9AB4                      sprite_punto_mira_1_mejorado:
      36.  00:9AB4                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      36.  00:9AB4  FF FF FF FF FF FF FF FF 
      37.  00:9ABC                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      37.  00:9ABC  FF FF FF FF FF FF FF FF 
      38.  00:9AC4                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      38.  00:9AC4  FF FF FF FF FF FF FF FF 
      39.  00:9ACC                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      39.  00:9ACC  FF FF FF FF FF FF FF FF 
      40.  00:9AD4                      
      41.  00:9AD4                      sprite_punto_mira_2_mejorado:
      42.  00:9AD4                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      42.  00:9AD4  FF FF FF FF FF FF FF FF 
      43.  00:9ADC                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      43.  00:9ADC  FF FF FF FF FF FF FF FF 
      44.  00:9AE4                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      44.  00:9AE4  FF FF FF FF FF FF FF FF 
      45.  00:9AEC                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      45.  00:9AEC  FF FF FF FF FF FF FF FF 
      46.  00:9AF4                      	
      47.  00:9AF4                      sprite_explosion_1:
      48.  00:9AF4                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      48.  00:9AF4  FF FF FF FF FF FF FF FF 
      49.  00:9AFC                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      49.  00:9AFC  FF FF FF FF FF FF FF FF 
      50.  00:9B04                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      50.  00:9B04  FF FF FF FF FF FF FF FF 
      51.  00:9B0C                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF	
      51.  00:9B0C  FF FF FF FF FF FF FF FF 
      52.  00:9B14                      
      53.  00:9B14                      sprite_explosion_2:
      54.  00:9B14                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      54.  00:9B14  FF FF FF FF FF FF FF FF 
      55.  00:9B1C                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      55.  00:9B1C  FF FF FF FF FF FF FF FF 
      56.  00:9B24                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      56.  00:9B24  FF FF FF FF FF FF FF FF 
      57.  00:9B2C                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF	
      57.  00:9B2C  FF FF FF FF FF FF FF FF 
      58.  00:9B34                      fin_sprites_comunes:
      59.  00:9B34                      
      60.  00:9B34                      ;; PARTE 2: SPRITES NO COMUNES
      61.  00:9B34                      
      62.  00:9B34                      ;; ARAÑA
      63.  00:9B34                      	
      64.  00:9B34                      sprite_arana1_1:
      65.  00:9B34                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      65.  00:9B34  FF FF FF FF FF FF FF FF 
      66.  00:9B3C                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      66.  00:9B3C  FF FF FF FF FF FF FF FF 
      67.  00:9B44                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      67.  00:9B44  FF FF FF FF FF FF FF FF 
      68.  00:9B4C                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      68.  00:9B4C  FF FF FF FF FF FF FF FF 
      69.  00:9B54                      	
      70.  00:9B54                      sprite_arana1_2:
      71.  00:9B54                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      71.  00:9B54  FF FF FF FF FF FF FF FF 
      72.  00:9B5C                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      72.  00:9B5C  FF FF FF FF FF FF FF FF 
      73.  00:9B64                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      73.  00:9B64  FF FF FF FF FF FF FF FF 
      74.  00:9B6C                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      74.  00:9B6C  FF FF FF FF FF FF FF FF 
      75.  00:9B74                      
      76.  00:9B74                      ;; MURCIELAGO
      77.  00:9B74                      	
      78.  00:9B74                      sprite_murcielago1_1:
      79.  00:9B74                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      79.  00:9B74  FF FF FF FF FF FF FF FF 
      80.  00:9B7C                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      80.  00:9B7C  FF FF FF FF FF FF FF FF 
      81.  00:9B84                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      81.  00:9B84  FF FF FF FF FF FF FF FF 
      82.  00:9B8C                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      82.  00:9B8C  FF FF FF FF FF FF FF FF 
      83.  00:9B94                      	
      84.  00:9B94                      sprite_murcielago1_2:
      85.  00:9B94                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      85.  00:9B94  FF FF FF FF FF FF FF FF 
      86.  00:9B9C                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      86.  00:9B9C  FF FF FF FF FF FF FF FF 
      87.  00:9BA4                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      87.  00:9BA4  FF FF FF FF FF FF FF FF 
      88.  00:9BAC                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF	
      88.  00:9BAC  FF FF FF FF FF FF FF FF 
      89.  00:9BB4                      
      90.  00:9BB4                      ;; SERPIENTE
      91.  00:9BB4                      
      92.  00:9BB4                      sprite_serpiente1_1:
      93.  00:9BB4                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      93.  00:9BB4  FF FF FF FF FF FF FF FF 
      94.  00:9BBC                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      94.  00:9BBC  FF FF FF FF FF FF FF FF 
      95.  00:9BC4                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      95.  00:9BC4  FF FF FF FF FF FF FF FF 
      96.  00:9BCC                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      96.  00:9BCC  FF FF FF FF FF FF FF FF 
      97.  00:9BD4                      	
      98.  00:9BD4                      sprite_serpiente1_2:
      99.  00:9BD4                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      99.  00:9BD4  FF FF FF FF FF FF FF FF 
     100.  00:9BDC                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     100.  00:9BDC  FF FF FF FF FF FF FF FF 
     101.  00:9BE4                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     101.  00:9BE4  FF FF FF FF FF FF FF FF 
     102.  00:9BEC                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     102.  00:9BEC  FF FF FF FF FF FF FF FF 
     103.  00:9BF4                      	
     104.  00:9BF4                      sprite_serpiente2_1:
     105.  00:9BF4                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     105.  00:9BF4  FF FF FF FF FF FF FF FF 
     106.  00:9BFC                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     106.  00:9BFC  FF FF FF FF FF FF FF FF 
     107.  00:9C04                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     107.  00:9C04  FF FF FF FF FF FF FF FF 
     108.  00:9C0C                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     108.  00:9C0C  FF FF FF FF FF FF FF FF 
     109.  00:9C14                      	
     110.  00:9C14                      sprite_serpiente2_2:
     111.  00:9C14                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     111.  00:9C14  FF FF FF FF FF FF FF FF 
     112.  00:9C1C                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     112.  00:9C1C  FF FF FF FF FF FF FF FF 
     113.  00:9C24                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     113.  00:9C24  FF FF FF FF FF FF FF FF 
     114.  00:9C2C                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     114.  00:9C2C  FF FF FF FF FF FF FF FF 
     115.  00:9C34                      
     116.  00:9C34                      ;; ZOMBI
     117.  00:9C34                      
     118.  00:9C34                      sprite_zombi1_1_1:
     119.  00:9C34                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     119.  00:9C34  FF FF FF FF FF FF FF FF 
     120.  00:9C3C                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     120.  00:9C3C  FF FF FF FF FF FF FF FF 
     121.  00:9C44                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     121.  00:9C44  FF FF FF FF FF FF FF FF 
     122.  00:9C4C                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     122.  00:9C4C  FF FF FF FF FF FF FF FF 
     123.  00:9C54                      
     124.  00:9C54                      sprite_zombi1_2_1:
     125.  00:9C54                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     125.  00:9C54  FF FF FF FF FF FF FF FF 
     126.  00:9C5C                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     126.  00:9C5C  FF FF FF FF FF FF FF FF 
     127.  00:9C64                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     127.  00:9C64  FF FF FF FF FF FF FF FF 
     128.  00:9C6C                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     128.  00:9C6C  FF FF FF FF FF FF FF FF 
     129.  00:9C74                      	
     130.  00:9C74                      sprite_zombi1_3_1:
     131.  00:9C74                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     131.  00:9C74  FF FF FF FF FF FF FF FF 
     132.  00:9C7C                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     132.  00:9C7C  FF FF FF FF FF FF FF FF 
     133.  00:9C84                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     133.  00:9C84  FF FF FF FF FF FF FF FF 
     134.  00:9C8C                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     134.  00:9C8C  FF FF FF FF FF FF FF FF 
     135.  00:9C94                      	
     136.  00:9C94                      sprite_zombi1_4_1:
     137.  00:9C94                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     137.  00:9C94  FF FF FF FF FF FF FF FF 
     138.  00:9C9C                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     138.  00:9C9C  FF FF FF FF FF FF FF FF 
     139.  00:9CA4                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     139.  00:9CA4  FF FF FF FF FF FF FF FF 
     140.  00:9CAC                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     140.  00:9CAC  FF FF FF FF FF FF FF FF 
     141.  00:9CB4                      	
     142.  00:9CB4                      sprite_zombi1_1_2:
     143.  00:9CB4                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     143.  00:9CB4  FF FF FF FF FF FF FF FF 
     144.  00:9CBC                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     144.  00:9CBC  FF FF FF FF FF FF FF FF 
     145.  00:9CC4                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     145.  00:9CC4  FF FF FF FF FF FF FF FF 
     146.  00:9CCC                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     146.  00:9CCC  FF FF FF FF FF FF FF FF 
     147.  00:9CD4                      
     148.  00:9CD4                      sprite_zombi1_2_2:
     149.  00:9CD4                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     149.  00:9CD4  FF FF FF FF FF FF FF FF 
     150.  00:9CDC                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     150.  00:9CDC  FF FF FF FF FF FF FF FF 
     151.  00:9CE4                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     151.  00:9CE4  FF FF FF FF FF FF FF FF 
     152.  00:9CEC                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     152.  00:9CEC  FF FF FF FF FF FF FF FF 
     153.  00:9CF4                      	
     154.  00:9CF4                      sprite_zombi1_3_2:
     155.  00:9CF4                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     155.  00:9CF4  FF FF FF FF FF FF FF FF 
     156.  00:9CFC                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     156.  00:9CFC  FF FF FF FF FF FF FF FF 
     157.  00:9D04                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     157.  00:9D04  FF FF FF FF FF FF FF FF 
     158.  00:9D0C                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     158.  00:9D0C  FF FF FF FF FF FF FF FF 
     159.  00:9D14                      	
     160.  00:9D14                      sprite_zombi1_4_2:
     161.  00:9D14                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     161.  00:9D14  FF FF FF FF FF FF FF FF 
     162.  00:9D1C                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     162.  00:9D1C  FF FF FF FF FF FF FF FF 
     163.  00:9D24                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     163.  00:9D24  FF FF FF FF FF FF FF FF 
     164.  00:9D2C                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     164.  00:9D2C  FF FF FF FF FF FF FF FF 
     165.  00:9D34                      	
     166.  00:9D34                      sprite_zombi2_1_1:
     167.  00:9D34                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     167.  00:9D34  FF FF FF FF FF FF FF FF 
     168.  00:9D3C                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     168.  00:9D3C  FF FF FF FF FF FF FF FF 
     169.  00:9D44                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     169.  00:9D44  FF FF FF FF FF FF FF FF 
     170.  00:9D4C                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     170.  00:9D4C  FF FF FF FF FF FF FF FF 
     171.  00:9D54                      
     172.  00:9D54                      sprite_zombi2_2_1:
     173.  00:9D54                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     173.  00:9D54  FF FF FF FF FF FF FF FF 
     174.  00:9D5C                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     174.  00:9D5C  FF FF FF FF FF FF FF FF 
     175.  00:9D64                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     175.  00:9D64  FF FF FF FF FF FF FF FF 
     176.  00:9D6C                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     176.  00:9D6C  FF FF FF FF FF FF FF FF 
     177.  00:9D74                      	
     178.  00:9D74                      sprite_zombi2_3_1:
     179.  00:9D74                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     179.  00:9D74  FF FF FF FF FF FF FF FF 
     180.  00:9D7C                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     180.  00:9D7C  FF FF FF FF FF FF FF FF 
     181.  00:9D84                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     181.  00:9D84  FF FF FF FF FF FF FF FF 
     182.  00:9D8C                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     182.  00:9D8C  FF FF FF FF FF FF FF FF 
     183.  00:9D94                      	
     184.  00:9D94                      sprite_zombi2_4_1:
     185.  00:9D94                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     185.  00:9D94  FF FF FF FF FF FF FF FF 
     186.  00:9D9C                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     186.  00:9D9C  FF FF FF FF FF FF FF FF 
     187.  00:9DA4                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     187.  00:9DA4  FF FF FF FF FF FF FF FF 
     188.  00:9DAC                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     188.  00:9DAC  FF FF FF FF FF FF FF FF 
     189.  00:9DB4                      	
     190.  00:9DB4                      sprite_zombi2_1_2:
     191.  00:9DB4                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     191.  00:9DB4  FF FF FF FF FF FF FF FF 
     192.  00:9DBC                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     192.  00:9DBC  FF FF FF FF FF FF FF FF 
     193.  00:9DC4                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     193.  00:9DC4  FF FF FF FF FF FF FF FF 
     194.  00:9DCC                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     194.  00:9DCC  FF FF FF FF FF FF FF FF 
     195.  00:9DD4                      
     196.  00:9DD4                      sprite_zombi2_2_2:
     197.  00:9DD4                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     197.  00:9DD4  FF FF FF FF FF FF FF FF 
     198.  00:9DDC                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     198.  00:9DDC  FF FF FF FF FF FF FF FF 
     199.  00:9DE4                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     199.  00:9DE4  FF FF FF FF FF FF FF FF 
     200.  00:9DEC                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     200.  00:9DEC  FF FF FF FF FF FF FF FF 
     201.  00:9DF4                      	
     202.  00:9DF4                      sprite_zombi2_3_2:
     203.  00:9DF4                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     203.  00:9DF4  FF FF FF FF FF FF FF FF 
     204.  00:9DFC                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     204.  00:9DFC  FF FF FF FF FF FF FF FF 
     205.  00:9E04                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     205.  00:9E04  FF FF FF FF FF FF FF FF 
     206.  00:9E0C                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     206.  00:9E0C  FF FF FF FF FF FF FF FF 
     207.  00:9E14                      	
     208.  00:9E14                      sprite_zombi2_4_2:
     209.  00:9E14                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     209.  00:9E14  FF FF FF FF FF FF FF FF 
     210.  00:9E1C                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     210.  00:9E1C  FF FF FF FF FF FF FF FF 
     211.  00:9E24                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     211.  00:9E24  FF FF FF FF FF FF FF FF 
     212.  00:9E2C                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     212.  00:9E2C  FF FF FF FF FF FF FF FF 
     213.  00:9E34                      	
     214.  00:9E34                      ;; CABALLERO
     215.  00:9E34                      
     216.  00:9E34                      sprite_caballero1_1_1:
     217.  00:9E34                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     217.  00:9E34  FF FF FF FF FF FF FF FF 
     218.  00:9E3C                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     218.  00:9E3C  FF FF FF FF FF FF FF FF 
     219.  00:9E44                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     219.  00:9E44  FF FF FF FF FF FF FF FF 
     220.  00:9E4C                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     220.  00:9E4C  FF FF FF FF FF FF FF FF 
     221.  00:9E54                      
     222.  00:9E54                      sprite_caballero1_2_1:
     223.  00:9E54                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     223.  00:9E54  FF FF FF FF FF FF FF FF 
     224.  00:9E5C                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     224.  00:9E5C  FF FF FF FF FF FF FF FF 
     225.  00:9E64                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     225.  00:9E64  FF FF FF FF FF FF FF FF 
     226.  00:9E6C                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     226.  00:9E6C  FF FF FF FF FF FF FF FF 
     227.  00:9E74                      	
     228.  00:9E74                      sprite_caballero1_3_1:
     229.  00:9E74                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     229.  00:9E74  FF FF FF FF FF FF FF FF 
     230.  00:9E7C                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     230.  00:9E7C  FF FF FF FF FF FF FF FF 
     231.  00:9E84                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     231.  00:9E84  FF FF FF FF FF FF FF FF 
     232.  00:9E8C                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     232.  00:9E8C  FF FF FF FF FF FF FF FF 
     233.  00:9E94                      	
     234.  00:9E94                      sprite_caballero1_4_1:
     235.  00:9E94                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     235.  00:9E94  FF FF FF FF FF FF FF FF 
     236.  00:9E9C                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     236.  00:9E9C  FF FF FF FF FF FF FF FF 
     237.  00:9EA4                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     237.  00:9EA4  FF FF FF FF FF FF FF FF 
     238.  00:9EAC                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     238.  00:9EAC  FF FF FF FF FF FF FF FF 
     239.  00:9EB4                      	
     240.  00:9EB4                      sprite_caballero1_1_2:
     241.  00:9EB4                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     241.  00:9EB4  FF FF FF FF FF FF FF FF 
     242.  00:9EBC                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     242.  00:9EBC  FF FF FF FF FF FF FF FF 
     243.  00:9EC4                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     243.  00:9EC4  FF FF FF FF FF FF FF FF 
     244.  00:9ECC                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     244.  00:9ECC  FF FF FF FF FF FF FF FF 
     245.  00:9ED4                      
     246.  00:9ED4                      sprite_caballero1_2_2:
     247.  00:9ED4                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     247.  00:9ED4  FF FF FF FF FF FF FF FF 
     248.  00:9EDC                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     248.  00:9EDC  FF FF FF FF FF FF FF FF 
     249.  00:9EE4                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     249.  00:9EE4  FF FF FF FF FF FF FF FF 
     250.  00:9EEC                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     250.  00:9EEC  FF FF FF FF FF FF FF FF 
     251.  00:9EF4                      	
     252.  00:9EF4                      sprite_caballero1_3_2:
     253.  00:9EF4                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     253.  00:9EF4  FF FF FF FF FF FF FF FF 
     254.  00:9EFC                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     254.  00:9EFC  FF FF FF FF FF FF FF FF 
     255.  00:9F04                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     255.  00:9F04  FF FF FF FF FF FF FF FF 
     256.  00:9F0C                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     256.  00:9F0C  FF FF FF FF FF FF FF FF 
     257.  00:9F14                      	
     258.  00:9F14                      sprite_caballero1_4_2:
     259.  00:9F14                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     259.  00:9F14  FF FF FF FF FF FF FF FF 
     260.  00:9F1C                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     260.  00:9F1C  FF FF FF FF FF FF FF FF 
     261.  00:9F24                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     261.  00:9F24  FF FF FF FF FF FF FF FF 
     262.  00:9F2C                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     262.  00:9F2C  FF FF FF FF FF FF FF FF 
     263.  00:9F34                      	
     264.  00:9F34                      sprite_caballero2_1_1:
     265.  00:9F34                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     265.  00:9F34  FF FF FF FF FF FF FF FF 
     266.  00:9F3C                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     266.  00:9F3C  FF FF FF FF FF FF FF FF 
     267.  00:9F44                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     267.  00:9F44  FF FF FF FF FF FF FF FF 
     268.  00:9F4C                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     268.  00:9F4C  FF FF FF FF FF FF FF FF 
     269.  00:9F54                      
     270.  00:9F54                      sprite_caballero2_2_1:
     271.  00:9F54                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     271.  00:9F54  FF FF FF FF FF FF FF FF 
     272.  00:9F5C                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     272.  00:9F5C  FF FF FF FF FF FF FF FF 
     273.  00:9F64                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     273.  00:9F64  FF FF FF FF FF FF FF FF 
     274.  00:9F6C                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     274.  00:9F6C  FF FF FF FF FF FF FF FF 
     275.  00:9F74                      	
     276.  00:9F74                      sprite_caballero2_3_1:
     277.  00:9F74                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     277.  00:9F74  FF FF FF FF FF FF FF FF 
     278.  00:9F7C                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     278.  00:9F7C  FF FF FF FF FF FF FF FF 
     279.  00:9F84                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     279.  00:9F84  FF FF FF FF FF FF FF FF 
     280.  00:9F8C                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     280.  00:9F8C  FF FF FF FF FF FF FF FF 
     281.  00:9F94                      	
     282.  00:9F94                      sprite_caballero2_4_1:
     283.  00:9F94                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     283.  00:9F94  FF FF FF FF FF FF FF FF 
     284.  00:9F9C                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     284.  00:9F9C  FF FF FF FF FF FF FF FF 
     285.  00:9FA4                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     285.  00:9FA4  FF FF FF FF FF FF FF FF 
     286.  00:9FAC                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     286.  00:9FAC  FF FF FF FF FF FF FF FF 
     287.  00:9FB4                      	
     288.  00:9FB4                      sprite_caballero2_1_2:
     289.  00:9FB4                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     289.  00:9FB4  FF FF FF FF FF FF FF FF 
     290.  00:9FBC                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     290.  00:9FBC  FF FF FF FF FF FF FF FF 
     291.  00:9FC4                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     291.  00:9FC4  FF FF FF FF FF FF FF FF 
     292.  00:9FCC                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     292.  00:9FCC  FF FF FF FF FF FF FF FF 
     293.  00:9FD4                      
     294.  00:9FD4                      sprite_caballero2_2_2:
     295.  00:9FD4                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     295.  00:9FD4  FF FF FF FF FF FF FF FF 
     296.  00:9FDC                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     296.  00:9FDC  FF FF FF FF FF FF FF FF 
     297.  00:9FE4                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     297.  00:9FE4  FF FF FF FF FF FF FF FF 
     298.  00:9FEC                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     298.  00:9FEC  FF FF FF FF FF FF FF FF 
     299.  00:9FF4                      	
     300.  00:9FF4                      sprite_caballero2_3_2:
     301.  00:9FF4                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     301.  00:9FF4  FF FF FF FF FF FF FF FF 
     302.  00:9FFC                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     302.  00:9FFC  FF FF FF FF FF FF FF FF 
     303.  00:A004                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     303.  00:A004  FF FF FF FF FF FF FF FF 
     304.  00:A00C                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     304.  00:A00C  FF FF FF FF FF FF FF FF 
     305.  00:A014                      	
     306.  00:A014                      sprite_caballero2_4_2:
     307.  00:A014                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     307.  00:A014  FF FF FF FF FF FF FF FF 
     308.  00:A01C                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     308.  00:A01C  FF FF FF FF FF FF FF FF 
     309.  00:A024                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     309.  00:A024  FF FF FF FF FF FF FF FF 
     310.  00:A02C                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     310.  00:A02C  FF FF FF FF FF FF FF FF 
     311.  00:A034                      	
     312.  00:A034                      ;; LLAMA
     313.  00:A034                      
     314.  00:A034                      sprite_llama1_1:	
     315.  00:A034                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     315.  00:A034  FF FF FF FF FF FF FF FF 
     316.  00:A03C                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     316.  00:A03C  FF FF FF FF FF FF FF FF 
     317.  00:A044                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     317.  00:A044  FF FF FF FF FF FF FF FF 
     318.  00:A04C                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     318.  00:A04C  FF FF FF FF FF FF FF FF 
     319.  00:A054                      	
     320.  00:A054                      sprite_llama2_1:	
     321.  00:A054                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     321.  00:A054  FF FF FF FF FF FF FF FF 
     322.  00:A05C                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     322.  00:A05C  FF FF FF FF FF FF FF FF 
     323.  00:A064                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     323.  00:A064  FF FF FF FF FF FF FF FF 
     324.  00:A06C                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF	
     324.  00:A06C  FF FF FF FF FF FF FF FF 
     325.  00:A074                      	
     326.  00:A074                      sprite_llama1_2:	
     327.  00:A074                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     327.  00:A074  FF FF FF FF FF FF FF FF 
     328.  00:A07C                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     328.  00:A07C  FF FF FF FF FF FF FF FF 
     329.  00:A084                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     329.  00:A084  FF FF FF FF FF FF FF FF 
     330.  00:A08C                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     330.  00:A08C  FF FF FF FF FF FF FF FF 
     331.  00:A094                      	
     332.  00:A094                      sprite_llama2_2:	
     333.  00:A094                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     333.  00:A094  FF FF FF FF FF FF FF FF 
     334.  00:A09C                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     334.  00:A09C  FF FF FF FF FF FF FF FF 
     335.  00:A0A4                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     335.  00:A0A4  FF FF FF FF FF FF FF FF 
     336.  00:A0AC                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF			
     336.  00:A0AC  FF FF FF FF FF FF FF FF 
     337.  00:A0B4                      	
     338.  00:A0B4                      ;; FANTASMA
     339.  00:A0B4                      
     340.  00:A0B4                      sprite_fantasma1_1:
     341.  00:A0B4                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     341.  00:A0B4  FF FF FF FF FF FF FF FF 
     342.  00:A0BC                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     342.  00:A0BC  FF FF FF FF FF FF FF FF 
     343.  00:A0C4                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     343.  00:A0C4  FF FF FF FF FF FF FF FF 
     344.  00:A0CC                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     344.  00:A0CC  FF FF FF FF FF FF FF FF 
     345.  00:A0D4                      
     346.  00:A0D4                      sprite_fantasma2_1:
     347.  00:A0D4                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     347.  00:A0D4  FF FF FF FF FF FF FF FF 
     348.  00:A0DC                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     348.  00:A0DC  FF FF FF FF FF FF FF FF 
     349.  00:A0E4                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     349.  00:A0E4  FF FF FF FF FF FF FF FF 
     350.  00:A0EC                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     350.  00:A0EC  FF FF FF FF FF FF FF FF 
     351.  00:A0F4                      
     352.  00:A0F4                      sprite_fantasma1_2:
     353.  00:A0F4                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     353.  00:A0F4  FF FF FF FF FF FF FF FF 
     354.  00:A0FC                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     354.  00:A0FC  FF FF FF FF FF FF FF FF 
     355.  00:A104                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     355.  00:A104  FF FF FF FF FF FF FF FF 
     356.  00:A10C                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     356.  00:A10C  FF FF FF FF FF FF FF FF 
     357.  00:A114                      
     358.  00:A114                      sprite_fantasma2_2:
     359.  00:A114                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     359.  00:A114  FF FF FF FF FF FF FF FF 
     360.  00:A11C                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     360.  00:A11C  FF FF FF FF FF FF FF FF 
     361.  00:A124                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     361.  00:A124  FF FF FF FF FF FF FF FF 
     362.  00:A12C                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF	
     362.  00:A12C  FF FF FF FF FF FF FF FF 
     363.  00:A134                      	
     364.  00:A134                      ;; MAGIA
     365.  00:A134                      
     366.  00:A134                      sprite_magia1_1:
     367.  00:A134                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     367.  00:A134  FF FF FF FF FF FF FF FF 
     368.  00:A13C                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     368.  00:A13C  FF FF FF FF FF FF FF FF 
     369.  00:A144                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     369.  00:A144  FF FF FF FF FF FF FF FF 
     370.  00:A14C                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     370.  00:A14C  FF FF FF FF FF FF FF FF 
     371.  00:A154                      
     372.  00:A154                      sprite_magia2_1:
     373.  00:A154                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     373.  00:A154  FF FF FF FF FF FF FF FF 
     374.  00:A15C                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     374.  00:A15C  FF FF FF FF FF FF FF FF 
     375.  00:A164                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     375.  00:A164  FF FF FF FF FF FF FF FF 
     376.  00:A16C                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     376.  00:A16C  FF FF FF FF FF FF FF FF 
     377.  00:A174                      
     378.  00:A174                      sprite_magia1_2:
     379.  00:A174                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     379.  00:A174  FF FF FF FF FF FF FF FF 
     380.  00:A17C                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     380.  00:A17C  FF FF FF FF FF FF FF FF 
     381.  00:A184                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     381.  00:A184  FF FF FF FF FF FF FF FF 
     382.  00:A18C                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     382.  00:A18C  FF FF FF FF FF FF FF FF 
     383.  00:A194                      
     384.  00:A194                      sprite_magia2_2:
     385.  00:A194                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     385.  00:A194  FF FF FF FF FF FF FF FF 
     386.  00:A19C                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     386.  00:A19C  FF FF FF FF FF FF FF FF 
     387.  00:A1A4                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     387.  00:A1A4  FF FF FF FF FF FF FF FF 
     388.  00:A1AC                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF	
     388.  00:A1AC  FF FF FF FF FF FF FF FF 
     389.  00:A1B4                      	
     390.  00:A1B4                      	
     391.  00:A1B4                      ;; BEHOLDER
     392.  00:A1B4                      
     393.  00:A1B4                      sprite_beholder1_1:
     394.  00:A1B4                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     394.  00:A1B4  FF FF FF FF FF FF FF FF 
     395.  00:A1BC                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     395.  00:A1BC  FF FF FF FF FF FF FF FF 
     396.  00:A1C4                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     396.  00:A1C4  FF FF FF FF FF FF FF FF 
     397.  00:A1CC                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     397.  00:A1CC  FF FF FF FF FF FF FF FF 
     398.  00:A1D4                      
     399.  00:A1D4                      sprite_beholder2_1:
     400.  00:A1D4                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     400.  00:A1D4  FF FF FF FF FF FF FF FF 
     401.  00:A1DC                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     401.  00:A1DC  FF FF FF FF FF FF FF FF 
     402.  00:A1E4                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     402.  00:A1E4  FF FF FF FF FF FF FF FF 
     403.  00:A1EC                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     403.  00:A1EC  FF FF FF FF FF FF FF FF 
     404.  00:A1F4                      
     405.  00:A1F4                      sprite_beholder3_1:
     406.  00:A1F4                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     406.  00:A1F4  FF FF FF FF FF FF FF FF 
     407.  00:A1FC                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     407.  00:A1FC  FF FF FF FF FF FF FF FF 
     408.  00:A204                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     408.  00:A204  FF FF FF FF FF FF FF FF 
     409.  00:A20C                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     409.  00:A20C  FF FF FF FF FF FF FF FF 
     410.  00:A214                      
     411.  00:A214                      sprite_beholder4_1:
     412.  00:A214                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     412.  00:A214  FF FF FF FF FF FF FF FF 
     413.  00:A21C                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     413.  00:A21C  FF FF FF FF FF FF FF FF 
     414.  00:A224                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     414.  00:A224  FF FF FF FF FF FF FF FF 
     415.  00:A22C                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF	
     415.  00:A22C  FF FF FF FF FF FF FF FF 
     416.  00:A234                      	
     417.  00:A234                      sprite_beholder1_2:
     418.  00:A234                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     418.  00:A234  FF FF FF FF FF FF FF FF 
     419.  00:A23C                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     419.  00:A23C  FF FF FF FF FF FF FF FF 
     420.  00:A244                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     420.  00:A244  FF FF FF FF FF FF FF FF 
     421.  00:A24C                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     421.  00:A24C  FF FF FF FF FF FF FF FF 
     422.  00:A254                      
     423.  00:A254                      sprite_beholder2_2:
     424.  00:A254                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     424.  00:A254  FF FF FF FF FF FF FF FF 
     425.  00:A25C                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     425.  00:A25C  FF FF FF FF FF FF FF FF 
     426.  00:A264                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     426.  00:A264  FF FF FF FF FF FF FF FF 
     427.  00:A26C                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     427.  00:A26C  FF FF FF FF FF FF FF FF 
     428.  00:A274                      
     429.  00:A274                      sprite_beholder3_2:
     430.  00:A274                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     430.  00:A274  FF FF FF FF FF FF FF FF 
     431.  00:A27C                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     431.  00:A27C  FF FF FF FF FF FF FF FF 
     432.  00:A284                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     432.  00:A284  FF FF FF FF FF FF FF FF 
     433.  00:A28C                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     433.  00:A28C  FF FF FF FF FF FF FF FF 
     434.  00:A294                      
     435.  00:A294                      sprite_beholder4_2:
     436.  00:A294                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     436.  00:A294  FF FF FF FF FF FF FF FF 
     437.  00:A29C                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     437.  00:A29C  FF FF FF FF FF FF FF FF 
     438.  00:A2A4                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     438.  00:A2A4  FF FF FF FF FF FF FF FF 
     439.  00:A2AC                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF		
     439.  00:A2AC  FF FF FF FF FF FF FF FF 
     440.  00:A2B4                      	
     441.  00:A2B4                      ;; VAMPIRO
     442.  00:A2B4                      
     443.  00:A2B4                      sprite_vampiro1_1:
     444.  00:A2B4                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     444.  00:A2B4  FF FF FF FF FF FF FF FF 
     445.  00:A2BC                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     445.  00:A2BC  FF FF FF FF FF FF FF FF 
     446.  00:A2C4                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     446.  00:A2C4  FF FF FF FF FF FF FF FF 
     447.  00:A2CC                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     447.  00:A2CC  FF FF FF FF FF FF FF FF 
     448.  00:A2D4                      
     449.  00:A2D4                      sprite_vampiro2_1:
     450.  00:A2D4                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     450.  00:A2D4  FF FF FF FF FF FF FF FF 
     451.  00:A2DC                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     451.  00:A2DC  FF FF FF FF FF FF FF FF 
     452.  00:A2E4                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     452.  00:A2E4  FF FF FF FF FF FF FF FF 
     453.  00:A2EC                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     453.  00:A2EC  FF FF FF FF FF FF FF FF 
     454.  00:A2F4                      
     455.  00:A2F4                      sprite_vampiro1_2:
     456.  00:A2F4                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     456.  00:A2F4  FF FF FF FF FF FF FF FF 
     457.  00:A2FC                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     457.  00:A2FC  FF FF FF FF FF FF FF FF 
     458.  00:A304                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     458.  00:A304  FF FF FF FF FF FF FF FF 
     459.  00:A30C                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     459.  00:A30C  FF FF FF FF FF FF FF FF 
     460.  00:A314                      
     461.  00:A314                      sprite_vampiro2_2:
     462.  00:A314                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     462.  00:A314  FF FF FF FF FF FF FF FF 
     463.  00:A31C                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     463.  00:A31C  FF FF FF FF FF FF FF FF 
     464.  00:A324                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     464.  00:A324  FF FF FF FF FF FF FF FF 
     465.  00:A32C                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     465.  00:A32C  FF FF FF FF FF FF FF FF 
     466.  00:A334                      	
     467.  00:A334                      ;; MANOIZQ
     468.  00:A334                      
     469.  00:A334                      sprite_manoizq1:
     470.  00:A334                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     470.  00:A334  FF FF FF FF FF FF FF FF 
     471.  00:A33C                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     471.  00:A33C  FF FF FF FF FF FF FF FF 
     472.  00:A344                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     472.  00:A344  FF FF FF FF FF FF FF FF 
     473.  00:A34C                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     473.  00:A34C  FF FF FF FF FF FF FF FF 
     474.  00:A354                      	
     475.  00:A354                      sprite_manoizq2:
     476.  00:A354                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     476.  00:A354  FF FF FF FF FF FF FF FF 
     477.  00:A35C                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     477.  00:A35C  FF FF FF FF FF FF FF FF 
     478.  00:A364                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     478.  00:A364  FF FF FF FF FF FF FF FF 
     479.  00:A36C                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     479.  00:A36C  FF FF FF FF FF FF FF FF 
     480.  00:A374                      	
     481.  00:A374                      sprite_manoizq3:
     482.  00:A374                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     482.  00:A374  FF FF FF FF FF FF FF FF 
     483.  00:A37C                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     483.  00:A37C  FF FF FF FF FF FF FF FF 
     484.  00:A384                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     484.  00:A384  FF FF FF FF FF FF FF FF 
     485.  00:A38C                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF	
     485.  00:A38C  FF FF FF FF FF FF FF FF 
     486.  00:A394                      	
     487.  00:A394                      ;; MANODER
     488.  00:A394                      
     489.  00:A394                      sprite_manoder1:
     490.  00:A394                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     490.  00:A394  FF FF FF FF FF FF FF FF 
     491.  00:A39C                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     491.  00:A39C  FF FF FF FF FF FF FF FF 
     492.  00:A3A4                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     492.  00:A3A4  FF FF FF FF FF FF FF FF 
     493.  00:A3AC                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     493.  00:A3AC  FF FF FF FF FF FF FF FF 
     494.  00:A3B4                      	
     495.  00:A3B4                      sprite_manoder2:
     496.  00:A3B4                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     496.  00:A3B4  FF FF FF FF FF FF FF FF 
     497.  00:A3BC                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     497.  00:A3BC  FF FF FF FF FF FF FF FF 
     498.  00:A3C4                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     498.  00:A3C4  FF FF FF FF FF FF FF FF 
     499.  00:A3CC                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     499.  00:A3CC  FF FF FF FF FF FF FF FF 
     500.  00:A3D4                      	
     501.  00:A3D4                      sprite_manoder3:
     502.  00:A3D4                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     502.  00:A3D4  FF FF FF FF FF FF FF FF 
     503.  00:A3DC                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     503.  00:A3DC  FF FF FF FF FF FF FF FF 
     504.  00:A3E4                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     504.  00:A3E4  FF FF FF FF FF FF FF FF 
     505.  00:A3EC                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF		
     505.  00:A3EC  FF FF FF FF FF FF FF FF 
     506.  00:A3F4                      	
     507.  00:A3F4                      	
     508.  00:A3F4                      	
     509.  00:A3F4                      	
     510.  00:A3F4                      	
     511.  00:A3F4                      	
     512.  00:A3F4                      	
     513.  00:A3F4                      	
     514.  00:A3F4                      	
     515.  00:A3F4                      	
     516.  00:A3F4                      	
     517.  00:A3F4                      	
     518.  00:A3F4                      	
     519.  00:A3F4                      	
     520.  00:A3F4                      	
     521.  00:A3F4                      	
     522.  00:A3F4                      	
     523.  00:A3F4                      	
     524.  00:A3F4                      	
     525.  00:A3F4                      	
     526.  00:A3F4                      	
     527.  00:A3F4                      	
     528.  00:A3F4                      	
     149   00:A3F4                      	
     150   00:A3F4                      	include "habitaciones.asm"
       1.  00:A3F4                      ;;=====================================================
       2.  00:A3F4                      ;;DEFINICIÓN DE HABITACIONES x NIVEL
       3.  00:A3F4                      ;;=====================================================	
       4.  00:A3F4                      
       5.  00:A3F4                      ; sólo voy a usar 7x7 pero como los arrays son lineales y voy a trabajar con matrices
       6.  00:A3F4                      ; me interesa que seande  8x8 aunque sólo trabaje con 7x7
       7.  00:A3F4                      
       8.  00:A3F4                      ; ojo... la primera linea corresponderá a la primera linea del castillo no a la última
       9.  00:A3F4                      
      10.  00:A3F4                      ;; definición de estructura de bits
      11.  00:A3F4                      ;16 bits por habitación
      12.  00:A3F4                      
      13.  00:A3F4                      ;~ 7 - sin asignar
      14.  00:A3F4                      ;~ 6 - sin asignar
      15.  00:A3F4                      ;~ 5 - esqueletos
      16.  00:A3F4                      ;~ 4 - todos los enemigos muertos
      17.  00:A3F4                      ;~ 0,1,2,3 - nº puertas 1 arriba 1 derecha 1 abajo 1 izquierda
      18.  00:A3F4                      
      19.  00:A3F4                      ;~ 7 - oracion
      20.  00:A3F4                      ;~ 6 - cruz
      21.  00:A3F4                      ;~ 5 - agua bendita
      22.  00:A3F4                      ;~ 4 - armadura
      23.  00:A3F4                      ;~ 3 - planta
      24.  00:A3F4                      ;~ 2 - vida extra
      25.  00:A3F4                      ;~ 1 - ballesta
      26.  00:A3F4                      ;~ 0 - antorchas
      27.  00:A3F4                      
      28.  00:A3F4                      ;importante: el byte de la columna 15 indicará con 1 y 0 habitaciones por las que se haya pasado
      29.  00:A3F4                      ;cuando se inicie la partida todos se pondrán a 0
      30.  00:A3F4                      ;por ejemplo 01000000b se ha pasado por la hab. 2 de esa fila en el nivel que sea
      31.  00:A3F4                      
      32.  00:A3F4                      habitacion_actual:
      33.  00:A3F4  00                  	db  #00		;habitación donde se encuentre el prota. Se mete en una varible par traer todos los datos de golpe y no buscarlos varias veces
      34.  00:A3F5                      habitacion_extras:
      35.  00:A3F5  00                  	db	#00		;donde van las ayudas de una habitación
      36.  00:A3F6                      
      37.  00:A3F6                      
      38.  00:A3F6                      habitaciones_juego:
      39.  00:A3F6                      habitaciones_nivel0:
      40.  00:A3F6                      	db  00000000b,#00,00000001b,#01,00001111b,11111111b,00000011b,#03,00001000b,#04,00001001b,#05,00001100b,#06,#FF,#00 ;primera fila
      40.  00:A3F6  00 00 01 01 0F FF 03 03 08 04 09 05 0C 06 FF 00 
      41.  00:A406                      	db  #17,#10,#11,#11,#12,#12,#13,#13,#14,#14,#15,#15,#16,#16,#FF,#00
      41.  00:A406  17 10 11 11 12 12 13 13 14 14 15 15 16 16 FF 00 
      42.  00:A416                      	db  #20,#20,#21,#21,#22,#22,#23,#23,#24,#24,#25,#25,#26,#26,#FF,#00
      42.  00:A416  20 20 21 21 22 22 23 23 24 24 25 25 26 26 FF 00 
      43.  00:A426                      	db  #30,#30,#31,#31,#32,#32,#33,#33,#34,#34,#35,#35,#36,#36,#FF,#00
      43.  00:A426  30 30 31 31 32 32 33 33 34 34 35 35 36 36 FF 00 
      44.  00:A436                      	db  00000000b,#00,00000001b,#01,00001111b,#02,00000011b,#03,00001000b,#04,00001001b,#05,00001100b,#06,#FF,#00
      44.  00:A436  00 00 01 01 0F 02 03 03 08 04 09 05 0C 06 FF 00 
      45.  00:A446                      	db  #50,#50,#51,#51,#52,#52,#53,#53,#54,#54,#55,#55,#56,#56,#FF,#00
      45.  00:A446  50 50 51 51 52 52 53 53 54 54 55 55 56 56 FF 00 
      46.  00:A456                      	db  00000000b,#00,00000001b,#01,00001111b,#02,00000011b,#03,00001000b,#04,00001001b,#05,00001100b,#06,#FF,#00	;ultima fila
      46.  00:A456  00 00 01 01 0F 02 03 03 08 04 09 05 0C 06 FF 00 
      47.  00:A466                      	
      48.  00:A466                      habitaciones_nivel1:
      49.  00:A466                      	db  00000000b,#00,00000001b,#01,00000010b,#02,00000011b,#03,00001000b,#04,00001001b,#05,00001100b,#06,#FF,#00 ;primera fila
      49.  00:A466  00 00 01 01 02 02 03 03 08 04 09 05 0C 06 FF 00 
      50.  00:A476                      	db  #17,#10,#11,#11,#12,#12,#13,#13,#14,#14,#15,#15,#16,#16,#FF,#00
      50.  00:A476  17 10 11 11 12 12 13 13 14 14 15 15 16 16 FF 00 
      51.  00:A486                      	db  #20,#20,#21,#21,#22,#22,#23,#23,#24,#24,#25,#25,#26,#26,#FF,#00
      51.  00:A486  20 20 21 21 22 22 23 23 24 24 25 25 26 26 FF 00 
      52.  00:A496                      	db  #30,#30,#31,#31,#32,#32,#33,#33,#34,#34,#35,#35,#36,#36,#FF,#00
      52.  00:A496  30 30 31 31 32 32 33 33 34 34 35 35 36 36 FF 00 
      53.  00:A4A6                      	db  00000000b,#00,00000001b,#01,00001111b,#02,00000011b,#03,00001000b,#04,00001001b,#05,00001100b,#06,#FF,#00
      53.  00:A4A6  00 00 01 01 0F 02 03 03 08 04 09 05 0C 06 FF 00 
      54.  00:A4B6                      	db  #50,#50,#51,#51,#52,#52,#53,#53,#54,#54,#55,#55,#56,#56,#FF,#00
      54.  00:A4B6  50 50 51 51 52 52 53 53 54 54 55 55 56 56 FF 00 
      55.  00:A4C6                      	db  00000000b,#00,00000001b,#01,00000010b,#02,00000011b,#03,00001000b,#04,00001001b,#05,00001100b,#06,#FF,#00	;ultima fila
      55.  00:A4C6  00 00 01 01 02 02 03 03 08 04 09 05 0C 06 FF 00 
      56.  00:A4D6                      	
      57.  00:A4D6                      habitaciones_nivel2:
      58.  00:A4D6                      	db  00000000b,#00,00000001b,#01,00000010b,#02,00000011b,#03,00001000b,#04,00001001b,#05,00001100b,#06,#FF,#00 ;primera fila
      58.  00:A4D6  00 00 01 01 02 02 03 03 08 04 09 05 0C 06 FF 00 
      59.  00:A4E6                      	db  #17,#10,#11,#11,#12,#12,#13,#13,#14,#14,#15,#15,#16,#16,#FF,#00
      59.  00:A4E6  17 10 11 11 12 12 13 13 14 14 15 15 16 16 FF 00 
      60.  00:A4F6                      	db  #20,#20,#21,#21,#22,#22,#23,#23,#24,#24,#25,#25,#26,#26,#FF,#00
      60.  00:A4F6  20 20 21 21 22 22 23 23 24 24 25 25 26 26 FF 00 
      61.  00:A506                      	db  #30,#30,#31,#31,#32,#32,#33,#33,#34,#34,#35,#35,#36,#36,#FF,#00
      61.  00:A506  30 30 31 31 32 32 33 33 34 34 35 35 36 36 FF 00 
      62.  00:A516                      	db  00000000b,#00,00000001b,#01,00001111b,#02,00000011b,#03,00001000b,#04,00001001b,#05,00001100b,#06,#FF,#00
      62.  00:A516  00 00 01 01 0F 02 03 03 08 04 09 05 0C 06 FF 00 
      63.  00:A526                      	db  #50,#50,#51,#51,#52,#52,#53,#53,#54,#54,#55,#55,#56,#56,#FF,#00
      63.  00:A526  50 50 51 51 52 52 53 53 54 54 55 55 56 56 FF 00 
      64.  00:A536                      	db  00000000b,#00,00000001b,#01,00000010b,#02,00000011b,#03,00001000b,#04,00001001b,#05,00001100b,#06,#FF,#00	;ultima fila
      64.  00:A536  00 00 01 01 02 02 03 03 08 04 09 05 0C 06 FF 00 
      65.  00:A546                      	
      66.  00:A546                      habitaciones_nivel3:
      67.  00:A546                      	db  00000000b,#00,00000001b,#01,00000010b,#02,00000011b,#03,00001000b,#04,00001001b,#05,00001100b,#06,#FF,#00 ;primera fila
      67.  00:A546  00 00 01 01 02 02 03 03 08 04 09 05 0C 06 FF 00 
      68.  00:A556                      	db  #17,#10,#11,#11,#12,#12,#13,#13,#14,#14,#15,#15,#16,#16,#FF,#00
      68.  00:A556  17 10 11 11 12 12 13 13 14 14 15 15 16 16 FF 00 
      69.  00:A566                      	db  #20,#20,#21,#21,#22,#22,#23,#23,#24,#24,#25,#25,#26,#26,#FF,#00
      69.  00:A566  20 20 21 21 22 22 23 23 24 24 25 25 26 26 FF 00 
      70.  00:A576                      	db  #30,#30,#31,#31,#32,#32,#33,#33,#34,#34,#35,#35,#36,#36,#FF,#00
      70.  00:A576  30 30 31 31 32 32 33 33 34 34 35 35 36 36 FF 00 
      71.  00:A586                      	db  00000000b,#00,00000001b,#01,00001111b,#02,00000011b,#03,00001000b,#04,00001001b,#05,00001100b,#06,#FF,#00
      71.  00:A586  00 00 01 01 0F 02 03 03 08 04 09 05 0C 06 FF 00 
      72.  00:A596                      	db  #50,#50,#51,#51,#52,#52,#53,#53,#54,#54,#55,#55,#56,#56,#FF,#00
      72.  00:A596  50 50 51 51 52 52 53 53 54 54 55 55 56 56 FF 00 
      73.  00:A5A6                      	db  00000000b,#00,00000001b,#01,00000010b,#02,00000011b,#03,00001000b,#04,00001001b,#05,00001100b,#06,#FF,#00	;ultima fila
      73.  00:A5A6  00 00 01 01 02 02 03 03 08 04 09 05 0C 06 FF 00 
      74.  00:A5B6                      	
      75.  00:A5B6                      habitaciones_nivel4:
      76.  00:A5B6                      	db  00000001b,#00,00000001b,#01,00000010b,#02,00000011b,#03,00001000b,#04,00001001b,#05,00001100b,#06,#FF,#00 ;primera fila
      76.  00:A5B6  01 00 01 01 02 02 03 03 08 04 09 05 0C 06 FF 00 
      77.  00:A5C6                      	db  #17,#10,#11,#11,#12,#12,#13,#13,#14,#14,#15,#15,#16,#16,#FF,#00
      77.  00:A5C6  17 10 11 11 12 12 13 13 14 14 15 15 16 16 FF 00 
      78.  00:A5D6                      	db  #20,#20,#21,#21,#22,#22,#23,#23,#24,#24,#25,#25,#26,#26,#FF,#00
      78.  00:A5D6  20 20 21 21 22 22 23 23 24 24 25 25 26 26 FF 00 
      79.  00:A5E6                      	db  #30,#30,#31,#31,#32,#32,#33,#33,#34,#34,#35,#35,#36,#36,#FF,#00
      79.  00:A5E6  30 30 31 31 32 32 33 33 34 34 35 35 36 36 FF 00 
      80.  00:A5F6                      	db  00000000b,#00,00000001b,#01,00001111b,#02,00000011b,#03,00001000b,#04,00001001b,#05,00001100b,#06,#FF,#00
      80.  00:A5F6  00 00 01 01 0F 02 03 03 08 04 09 05 0C 06 FF 00 
      81.  00:A606                      	db  #50,#50,#51,#51,#52,#52,#53,#53,#54,#54,#55,#55,#56,#56,#FF,#00
      81.  00:A606  50 50 51 51 52 52 53 53 54 54 55 55 56 56 FF 00 
      82.  00:A616                      	db  00000000b,#00,00000001b,#01,00001111b,00001111b,00000011b,#03,00001000b,#04,00001001b,#05,00001100b,#06,#FF,#00	;ultima fila
      82.  00:A616  00 00 01 01 0F 0F 03 03 08 04 09 05 0C 06 FF 00 
      83.  00:A626                      	
      84.  00:A626                      habitaciones_nivel5:
      85.  00:A626                      	db  00000000b,#00,00000001b,#01,00000010b,#02,00000011b,#03,00001000b,#04,00001001b,#05,00001100b,#06,#FF,#00 ;primera fila
      85.  00:A626  00 00 01 01 02 02 03 03 08 04 09 05 0C 06 FF 00 
      86.  00:A636                      	db  #17,#10,#11,#11,#12,#12,#13,#13,#14,#14,#15,#15,#16,#16,#FF,#00
      86.  00:A636  17 10 11 11 12 12 13 13 14 14 15 15 16 16 FF 00 
      87.  00:A646                      	db  #20,#20,#21,#21,#22,#22,#23,#23,#24,#24,#25,#25,#26,#26,#FF,#00
      87.  00:A646  20 20 21 21 22 22 23 23 24 24 25 25 26 26 FF 00 
      88.  00:A656                      	db  #30,#30,#31,#31,#32,#32,#33,#33,#34,#34,#35,#35,#36,#36,#FF,#00
      88.  00:A656  30 30 31 31 32 32 33 33 34 34 35 35 36 36 FF 00 
      89.  00:A666                      	db  00000000b,#00,00000001b,#01,00001111b,#02,00000011b,#03,00001000b,#04,00001001b,#05,00001100b,#06,#FF,#00
      89.  00:A666  00 00 01 01 0F 02 03 03 08 04 09 05 0C 06 FF 00 
      90.  00:A676                      	db  #50,#50,#51,#51,#52,#52,#53,#53,#54,#54,#55,#55,#56,#56,#FF,#00
      90.  00:A676  50 50 51 51 52 52 53 53 54 54 55 55 56 56 FF 00 
      91.  00:A686                      	db  00000000b,#00,00000001b,#01,00001010b,00001010b,00000011b,#03,00001000b,#04,00001001b,#05,00001100b,#06,#FF,#00	;ultima fila
      91.  00:A686  00 00 01 01 0A 0A 03 03 08 04 09 05 0C 06 FF 00 
      92.  00:A696                      	
      93.  00:A696                      habitaciones_nivel6:
      94.  00:A696                      	db  00000000b,#00,00000001b,#01,00000010b,#02,00000011b,#03,00001000b,#04,00001001b,#05,00001100b,#06,#FF,#00 ;primera fila
      94.  00:A696  00 00 01 01 02 02 03 03 08 04 09 05 0C 06 FF 00 
      95.  00:A6A6                      	db  #17,#10,#11,#11,#12,#12,#13,#13,#14,#14,#15,#15,#16,#16,#FF,#00
      95.  00:A6A6  17 10 11 11 12 12 13 13 14 14 15 15 16 16 FF 00 
      96.  00:A6B6                      	db  #20,#20,#21,#21,#22,#22,#23,#23,#24,#24,#25,#25,#26,#26,#FF,#00
      96.  00:A6B6  20 20 21 21 22 22 23 23 24 24 25 25 26 26 FF 00 
      97.  00:A6C6                      	db  #30,#30,#31,#31,#32,#32,#33,#33,#34,#34,#35,#35,#36,#36,#FF,#00
      97.  00:A6C6  30 30 31 31 32 32 33 33 34 34 35 35 36 36 FF 00 
      98.  00:A6D6                      	db  00000000b,#00,00000001b,#01,00001111b,#02,00000011b,#03,00001000b,#04,00001001b,#05,00001100b,#06,#FF,#00
      98.  00:A6D6  00 00 01 01 0F 02 03 03 08 04 09 05 0C 06 FF 00 
      99.  00:A6E6                      	db  #50,#50,#51,#51,#52,#52,#53,#53,#54,#54,#55,#55,#56,#56,#FF,#00
      99.  00:A6E6  50 50 51 51 52 52 53 53 54 54 55 55 56 56 FF 00 
     100.  00:A6F6                      	db  00000000b,#00,00000001b,10000000b,00001111b,#02,00000011b,#03,00001000b,#04,00001001b,#05,00001100b,#06,#FF,#00	;ultima fila
     100.  00:A6F6  00 00 01 80 0F 02 03 03 08 04 09 05 0C 06 FF 00 
     101.  00:A706                      
     102.  00:A706                      
     103.  00:A706                      
     151   00:A706                      	
     152   00:A706                      	include "variables.asm"
       1.  00:A706                      ;;=====================================================
       2.  00:A706                      ;;DEFINICIÓN DE VARIABLES
       3.  00:A706                      ;;=====================================================
       4.  00:A706                      
       5.  00:A706                      ;Colores base de la pantalla
       6.  00:A706                      color_base:
       7.  00:A706  01 01 01            			DB		COLNEGRO,COLNEGRO,COLNEGRO	
       8.  00:A709                      ;colores de pantalla cuando se tira bomba
       9.  00:A709                      color_bomba1:
      10.  00:A709  08 08 08            			DB		COLROJO,COLROJO,COLROJO
      11.  00:A70C                      color_bomba2:
      12.  00:A70C  06 06 06            			DB		COLROJOOSC,COLROJOOSC,COLROJOOSC
      13.  00:A70F                      
      14.  00:A70F                      ;definicion de variable del prota usando la estructura del punto de mira
      15.  00:A70F                      prota:		ESTRUCTURA_PUNTOMIRA
      15.  00:A70F  64 64 00 00 00 05 00 00 00 00 00 00 00 00 00 00 
      16.  00:A71F                      ;variables globales del prota
      17.  00:A71F                      prota_nivel:			;nivel del castillo donde está 0-6
      18.  00:A71F  00                  			DB		0
      19.  00:A720                      prota_vidas:
      20.  00:A720  00                  			DB		0
      21.  00:A721                      prota_reliquias:
      22.  00:A721  03                  			DB		3
      23.  00:A722                      prota_pos_mapx:
      24.  00:A722  00                  			DB		0	;pos columna
      25.  00:A723                      prota_pos_mapy:
      26.  00:A723  00                  			DB		0	;pos fila
      27.  00:A724                      prota_energia:
      28.  00:A724  FA                  			DB		250
      29.  00:A725                      
      30.  00:A725                      ;array para pintar de golpe el marcador de vidas
      31.  00:A725                      array_aux_vidas: 		
      32.  00:A725                      			DB		0,0,0,0,0,0,0,0
      32.  00:A725  00 00 00 00 00 00 00 00 
      33.  00:A72D                      
      34.  00:A72D                      ;array para pintar de golpe el marcador de reliquias
      35.  00:A72D                      array_aux_reliquias:	
      36.  00:A72D                      			DB		0,0,0,0,0,0,0,0
      36.  00:A72D  00 00 00 00 00 00 00 00 
      37.  00:A735                      
      38.  00:A735                      array_aux_energia:					;array para pintar de golpe el marcador de energía
      39.  00:A735                      			DB		16,0,0,0,0,0,0 	;el 16 primero es porque siempre estará pintado el cuadro primero rojo
      39.  00:A735  10 00 00 00 00 00 00 
      40.  00:A73C                      ultimo_pos_array_aux_energia:
      41.  00:A73C  00                  			DB		0				;el array completo es de 8 pero para posicionar sin niecesidad de cálculos  etiqueto este aparte
      42.  00:A73D                      			
      43.  00:A73D                      array_aux_mapa_limpiar:	;es por facilitar el reseteo del mapa (pinto 7 lineas en negro con bios) la otra opción es más larga en código y complicada aunque más rápida
      44.  00:A73D                      			DB		0,0,0,0,0,0,0
      44.  00:A73D  00 00 00 00 00 00 00 
      45.  00:A744                      elemento_pintar_mapa:
      46.  00:A744  00                  			DB		0	;TILEPROTAM = 19, ;TILEGRISM = 9
      47.  00:A745                      			
      48.  00:A745                      ;; nota importante: cada vez que se cambie de nivel se actualizará el contenido
      49.  00:A745                      ;; arrays con mapa de tiles de las puertas
      50.  00:A745                      array_puerta_arriba:
      51.  00:A745  03 01 01 03         array_puerta_arriba1:		DB	3,1,1,3
      52.  00:A749  01 01 01 01         array_puerta_arriba2:		DB	1,1,1,1
      53.  00:A74D  01 01 01 01         array_puerta_arriba3:		DB	1,1,1,1
      54.  00:A751  01 01 01 01         array_puerta_arriba4:		DB	1,1,1,1
      55.  00:A755  01 01 01 01         array_puerta_arriba5:		DB	1,1,1,1
      56.  00:A759                      
      57.  00:A759                      array_puerta_derecha:
      58.  00:A759  01 03 03            array_puerta_derecha1:		DB	1,3,3
      59.  00:A75C  01 01 03            array_puerta_derecha2:		DB	1,1,3
      60.  00:A75F  01 01 01            array_puerta_derecha3:		DB	1,1,1
      61.  00:A762  01 01 01            array_puerta_derecha4:		DB	1,1,1
      62.  00:A765  01 01 01            array_puerta_derecha5:		DB	1,1,1
      63.  00:A768  02 01 01            array_puerta_derecha6:		DB	2,1,1
      64.  00:A76B  04 02 01            array_puerta_derecha7:		DB	4,2,1
      65.  00:A76E                      	
      66.  00:A76E  01 01 01 01         array_puerta_abajo:			DB	1,1,1,1
      67.  00:A772                      
      68.  00:A772                      array_puerta_izquierda:
      69.  00:A772  03 03 01            array_puerta_izquierda1:	DB	3,3,1
      70.  00:A775  03 01 01            array_puerta_izquierda2:	DB	3,1,1
      71.  00:A778  01 01 01            array_puerta_izquierda3:	DB	1,1,1
      72.  00:A77B  01 01 01            array_puerta_izquierda4:	DB	1,1,1
      73.  00:A77E  01 01 01            array_puerta_izquierda5:	DB	1,1,1
      74.  00:A781  01 01 02            array_puerta_izquierda6:	DB	1,1,2
      75.  00:A784  01 02 04            array_puerta_izquierda7:	DB	1,2,4
      76.  00:A787                      
      77.  00:A787                      ;array con posiciones pseudoaleatorias de ayudas y extras (qué valor se escogerá con R 0-127 + and 00001111)
      78.  00:A787                      ;+256 porque aparecerán todas en el banco1
      79.  00:A787                      pos_ayudas:					DB	0,4,18,23,45,69,73,82,90,152,171,180,190,192,198,208
      79.  00:A787  00 04 12 17 2D 45 49 52 5A 98 AB B4 BE C0 C6 D0 
      80.  00:A797                      pos_ayudas_y:				DB	64,64,64,64,72,80,80,80,80,96,104,104,104,112,112,112
      80.  00:A797  40 40 40 40 48 50 50 50 50 60 68 68 68 70 70 70 
      81.  00:A7A7                      pos_ayudas_x:				DB	0,32,144,184,104,40,72,144,208,192,88,160,240,0,48,128
      81.  00:A7A7  00 20 90 B8 68 28 48 90 D0 C0 58 A0 F0 00 30 80 
      82.  00:A7B7                      
      83.  00:A7B7                      
      84.  00:A7B7                      ;array de ayudas
      85.  00:A7B7                      ;posición dentro del bank1 (o 0 que son iguales) de los tiles de la ayuda (cómo en los sprites de 2x2)
      86.  00:A7B7                      array_ayudas:
      87.  00:A7B7  C8 CA               array_oracionon:			DB	200,202
      88.  00:A7B9  C9 CB               array_oracionon1:			DB	201,203
      89.  00:A7BB  CC CE               array_oracionoff:			DB	204,206
      90.  00:A7BD  CD CF               array_oracionoff1:			DB	205,207
      91.  00:A7BF  D0 D2               array_cruzon:				DB	208,210
      92.  00:A7C1  D1 D3               array_cruzon1:				DB	209,211
      93.  00:A7C3  D4 D6               array_cruzoff:				DB	212,214
      94.  00:A7C5  D5 D7               array_cruzoff1:				DB	213,215
      95.  00:A7C7  D8 DA               array_aguaon:				DB	216,218
      96.  00:A7C9  D9 DB               array_aguaon1:				DB	217,219
      97.  00:A7CB  DC DE               array_aguaoff:				DB	220,222
      98.  00:A7CD  DD DF               array_aguaoff1:				DB	221,223
      99.  00:A7CF  E0 E2               array_armaduraon:			DB	224,226
     100.  00:A7D1  E1 E3               array_armaduraon1:			DB	225,227
     101.  00:A7D3  E4 E6               array_armaduraoff:			DB	228,230
     102.  00:A7D5  E5 E7               array_armaduraoff1:			DB	229,231
     103.  00:A7D7  E8 EA               array_plantaon:				DB	232,234
     104.  00:A7D9  E9 EB               array_plantaon1:			DB	233,235
     105.  00:A7DB  EC EE               array_plantaoff:			DB	236,238
     106.  00:A7DD  ED EF               array_plantaoff1:			DB	237,239
     107.  00:A7DF  F0 F2               array_extraon:				DB	240,242
     108.  00:A7E1  F1 F3               array_extraon1:				DB	241,243
     109.  00:A7E3  F4 F6               array_extraoff:				DB	244,246
     110.  00:A7E5  F5 F7               array_extraoff1:			DB	245,247
     111.  00:A7E7  F8 FA               array_ballestaon:			DB	248,250
     112.  00:A7E9  F9 FB               array_ballestaon1:			DB	249,251
     113.  00:A7EB  FC FE               array_ballestaoff:			DB	252,254
     114.  00:A7ED  FD FF               array_ballestaoff1:			DB	253,255
     115.  00:A7EF                      
     116.  00:A7EF  00 (7)              antorchas:			DS		ESTRUCTURA_ANTORCHA
     117.  00:A7F6  C5 C6 C7            array_antorcha:				DB	197,198,199	;fuego + madera1 + madera2
     118.  00:A7F9                      
     119.  00:A7F9  00 (7)              esqueletos:			DS		ESTRUCTURA_ESQUELETO
     120.  00:A800                      array_esqueleto:			DB	194, 0, 195, 160, 164, 161, 0, 163, 0, 193, 162, 192
     120.  00:A800  C2 00 C3 A0 A4 A1 00 A3 00 C1 A2 C0 
     121.  00:A80C                      
     122.  00:A80C                      lista_ayudas:
     123.  00:A80C  00 (17)             ayuda_oracion:		DS		ESTRUCTURA_AYUDA		
     124.  00:A81D  00 (17)             ayuda_cruz:			DS		ESTRUCTURA_AYUDA
     125.  00:A82E  00 (17)             ayuda_aguabendita:	DS		ESTRUCTURA_AYUDA
     126.  00:A83F  00 (17)             ayuda_armadura:		DS		ESTRUCTURA_AYUDA
     127.  00:A850  00 (17)             ayuda_planta:		DS		ESTRUCTURA_AYUDA
     128.  00:A861  00 (17)             ayuda_vidaextra		DS		ESTRUCTURA_AYUDA
     129.  00:A872  00 (17)             ayuda_ballesta:		DS		ESTRUCTURA_AYUDA
     130.  00:A883                      
     131.  00:A883                      
     132.  00:A883                      ;array de 4 bytes x 32 sprites posibles en pantalla que sobreescribirá la tabla de sprites actualizando VRAM
     133.  00:A883                      array_sprites:
     134.  00:A883  00 (8)              array_sprites_pm:				DS	2 * 4
     135.  00:A88B  00 (120)            array_sprites_enem:				DS	30 * 4
     136.  00:A903  00 (140)            lista_enemigos:					DS	10 * ESTRUCTURA_ENEMIGO
     137.  00:A98F                      ; puntero al array a pintar en VRAM
     138.  00:A98F  00 00               puntero_array_atrib_array_VRAM: DW	0	;ARRAYSPTRIES + 8
     139.  00:A991                      
     140.  00:A991                      
     141.  00:A991                      
     142.  00:A991                      
     143.  00:A991                      
     153   00:A991                      	
     154   00:A991                      ;;=====================================================
     155   00:A991                      ;;DEFINICIÓN DE PANTALLAS
     156   00:A991                      ;;=====================================================		
     157   00:A991                      	include "pantallas.asm"
       1.  00:A991                      ;;=====================================================
       2.  00:A991                      ;;DEFINICIÓN DE PANTALLAS
       3.  00:A991                      ;;=====================================================		
       4.  00:A991                      
       5.  00:A991                      ; bancos 1 y 2 y de pantalla 1 
       6.  00:A991                      ; se usa un banco común (en este caso el banco 1)
       7.  00:A991                      ; el mapa afecta al banco 1 y 2
       8.  00:A991  (021D)              tiles_patrones_nivel0:	incbin "pantallas/nivel0.bank1.til.bin.chr.plet5"
       9.  00:ABAE  (0069)              tiles_color_nivel0:		incbin "pantallas/nivel0.bank1.til.bin.clr.plet5"
      10.  00:AC17  (0035)              tiles_mapa_nivel0:		incbin "pantallas/nivel0.bank01.map.bin.plet5"
      11.  00:AC4C                      
      12.  00:AC4C  (01B5)              tiles_patrones_nivel1:	incbin "pantallas/nivel1.bank1.til.bin.chr.plet5"
      13.  00:AE01  (0047)              tiles_color_nivel1:		incbin "pantallas/nivel1.bank1.til.bin.clr.plet5"
      14.  00:AE48  (0035)              tiles_mapa_nivel1:		incbin "pantallas/nivel1.bank01.map.bin.plet5"
      15.  00:AE7D                      
      16.  00:AE7D  (01B5)              tiles_patrones_nivel2:	incbin "pantallas/nivel2.bank1.til.bin.chr.plet5"
      17.  00:B032  (0047)              tiles_color_nivel2:		incbin "pantallas/nivel2.bank1.til.bin.clr.plet5"
      18.  00:B079  (0035)              tiles_mapa_nivel2:		incbin "pantallas/nivel2.bank01.map.bin.plet5"
      19.  00:B0AE                      
      20.  00:B0AE  (01B5)              tiles_patrones_nivel3:	incbin "pantallas/nivel3.bank1.til.bin.chr.plet5"
      21.  00:B263  (0047)              tiles_color_nivel3:		incbin "pantallas/nivel3.bank1.til.bin.clr.plet5"
      22.  00:B2AA  (0035)              tiles_mapa_nivel3:		incbin "pantallas/nivel3.bank01.map.bin.plet5"
      23.  00:B2DF                      
      24.  00:B2DF  (01B5)              tiles_patrones_nivel4:	incbin "pantallas/nivel4.bank1.til.bin.chr.plet5"
      25.  00:B494  (0047)              tiles_color_nivel4:		incbin "pantallas/nivel4.bank1.til.bin.clr.plet5"
      26.  00:B4DB  (0035)              tiles_mapa_nivel4:		incbin "pantallas/nivel4.bank01.map.bin.plet5"
      27.  00:B510                      
      28.  00:B510  (01B5)              tiles_patrones_nivel5:	incbin "pantallas/nivel5.bank1.til.bin.chr.plet5"
      29.  00:B6C5  (0047)              tiles_color_nivel5:		incbin "pantallas/nivel5.bank1.til.bin.clr.plet5"
      30.  00:B70C  (0035)              tiles_mapa_nivel5:		incbin "pantallas/nivel5.bank01.map.bin.plet5"
      31.  00:B741                      
      32.  00:B741  (01B5)              tiles_patrones_nivel6:	incbin "pantallas/nivel6.bank1.til.bin.chr.plet5"
      33.  00:B8F6  (0047)              tiles_color_nivel6:		incbin "pantallas/nivel6.bank1.til.bin.clr.plet5"
      34.  00:B93D  (0035)              tiles_mapa_nivel6:		incbin "pantallas/nivel6.bank01.map.bin.plet5"
      35.  00:B972                      
      36.  00:B972                      ; 3º banco que es la parte de puntos, vidas, mapas, etc... es común
      37.  00:B972  (014C)              tiles_patrones_marcador:	incbin "pantallas/marcador.til.bin.chr.plet5"
      38.  00:BABE  (0035)              tiles_color_marcador:		incbin "pantallas/marcador.til.bin.clr.plet5"
      39.  00:BAF3  (0062)              tiles_mapa_marcador:		incbin "pantallas/marcador.map.bin.plet5"
      40.  00:BB55                      
      41.  00:BB55                      ;NOTA: FALTARÍAN PANTALLAS ESPECIALES (POR DEFINIR)
     158   00:BB55                      
     159   00:BB55                      
     160   00:BB55                      	
     161   00:BB55                      END:

    LABELS
-------------------------------------------------
00:000000D8 X GTTRIG
00:000000D5 X GTSTCK
00:0000F3DB   CLIKSW
00:0000013E X RDVDP
00:00000047   WRTVDP
00:0000005C   LDIRVM
00:00000059 X LDIRMV
00:0000005F   CHGMOD
00:00000041 X DISSCR
00:00000044 X ENASCR
00:00000062   CHGCLR
00:0000F3E9   FORCLR
00:0000F3EA   BAKCLR
00:0000F3EB   BDRCLR
00:000000C3   CLS
00:0000F3DF X RG0SAV
00:0000F3E0   RG1SAV
00:0000F3E1 X RG2SAV
00:0000F3E2 X RG3SAV
00:0000F3E3 X RG4SAV
00:0000F3E4 X RG5SAV
00:0000F3E5 X RG6SAV
00:0000F3E6 X RG7SAV
00:0000F3E7 X STATFL
00:00000099   REGEST
00:00000098   REGESCVDP
00:000000A0   PSG_A
00:000000A1   PSG_W
00:000000A2   PSG_R
00:00000000   CHRTBL
00:00001800   TILMAP
00:00001900 X TILMAPBANK1
00:00001B00   SPRART
00:00002000   CLRTBL
00:00003800   SPRTBL
00:00000001 X SI
00:00000000 X NO
00:00000004   LIMCADENCIA
00:00000000 X COLTRASP
00:00000001   COLNEGRO
00:00000002 X COLVERDE
00:00000003 X COLVERCLA
00:00000004 X COLAZULOSC
00:00000005 X COLAZULLA
00:00000006   COLROJOOSC
00:00000007 X COLCYAN
00:00000008   COLROJO
00:00000009 X COLROJOCLA
00:0000000A X COLAMAROSC
00:0000000B X COLAMARCLA
00:0000000C X COLVERDOSC
00:0000000D X COLMAGENTA
00:0000000E X COLGRIS
00:0000000F   COLBLANCO
00:000002F8   POSMAPLIN1
00:000002D8   POSMAPLIN2
00:000002B8   POSMAPLIN3
00:00000298   POSMAPLIN4
00:00000278   POSMAPLIN5
00:00000258   POSMAPLIN6
00:00000238   POSMAPLIN7
00:0000000D   POSCARAMAP
00:00000248   POSVIDAS
00:00000011   POSRELIMAP
00:000002C8   POSRELIQ
00:00000288   POSENERG
00:000002B4   POSNIVEL
00:00000238   POSMAPA
00:000001EE   POSPUERABAJ
00:0000008E   POSPUERARRI
00:000000FC   POSPUERDERE
00:000000E1   POSPUERIZQU
00:000000A3   POSORACION
00:000000A7   POSCRUZ
00:000000AB   POSAGUA
00:000000AF   POSARMAD
00:000000B3   POSPLANTA
00:000000B6   POSVIDAEXT
00:000000BB   POSBALLES
00:00000020   POSORACIONX
00:00000040   POSCRUZX
00:00000060   POSAGUAX
00:00000080   POSARMADX
00:000000A0   POSPLANTAX
00:000000C0   POSVIDAEXTX
00:000000E0 X POSBALLESX
00:00000070 X POSAYUDASY
00:00000000   INACTIVA
00:00000001   ACTIVA
00:00000088   POSANTOR1
00:00000097   POSANTOR2
00:000000C4   MAPLLAMA1
00:000000C5   MAPLLAMA2
00:0000000A   RESETLLAMA
00:00000088   POSESQUEL1
00:00000095   POSESQUEL2
00:000000A4 X MAPESQUEL1
00:000000A5 X MAPESQUEL2
00:000000A4 X MAPESQUEL3
00:000000A6 X MAPESQUEL4
00:0000000A   RESETESQUEL
00:00000013   TILEPROTAM
00:00000009   TILEGRISM
00:00000010   TILEMAPROJO
00:0000000F   TILEMAPAMAR
00:0000000E   TILEMAPVERD
00:00000008   NMAXVIDREL
00:00000007   NHABNIVEL
00:000000F8 X MAXENERGIA
00:000000D9   TILEENERG8
00:000000BA   TILEENERG7
00:0000009B   TILEENERG6
00:0000007C   TILEENERG5
00:0000005D   TILEENERG4
00:0000003E   TILEENERG3
00:0000001F   TILEENERG2
00:00000000   TILENEGRO
00:00000000 X LIMPANTIZQ
00:000000FF   LIMPANTDER
00:00000000 X LIMPANTARR
00:00000080   LIMPANTABA
00:00000006 X BASEMAPY
00:00000003 X BASEMAPX
00:0000FD9A X H.KEYI
00:0000FD9F   H.TIMI
00:0000F000   PT3_SETUP
00:0000F001   PT3_MODADDR
00:0000F003   PT3_CrPsPtr
00:0000F005   PT3_SAMPTRS
00:0000F007   PT3_OrnPtrs
00:0000F009   PT3_PDSP
00:0000F00B   PT3_CSP
00:0000F00D   PT3_PSP
00:0000F00F   PT3_PrNote
00:0000F010   PT3_PrSlide
00:0000F012   PT3_AdInPtA
00:0000F014   PT3_AdInPtB
00:0000F016   PT3_AdInPtC
00:0000F018   PT3_LPosPtr
00:0000F01A   PT3_PatsPtr
00:0000F01C   PT3_Delay
00:0000F01D   PT3_AddToEn
00:0000F01E   PT3_Env_Del
00:0000F01F   PT3_ESldAdd
00:0000F021   PT3_NTL3
00:0000F023   VARS
00:0000F023   ChanA
00:0000F040   ChanB
00:0000F05D   ChanC
00:0000F07A   DelyCnt
00:0000F07B   CurESld
00:0000F07D   CurEDel
00:0000F07E   Ns_Base_AddToNs
00:0000F07E   Ns_Base
00:0000F07F   AddToNs
00:0000F080   NT_
00:0000F140   AYREGS
00:0000F140   VT_
00:0000F14E   EnvBase
00:0000F150   VAR0END
00:0000F150   T1_
00:0000F150   T_NEW_1
00:0000F150   T_OLD_1
00:0000F168   T_OLD_2
00:0000F180   T_NEW_3
00:0000F180   T_OLD_3
00:0000F182   T_OLD_0
00:0000F182   T_NEW_0
00:0000F19A   T_NEW_2
00:0000F240   ayFX_MODE
00:0000F241   ayFX_BANK
00:0000F243   ayFX_PRIORITY
00:0000F244   ayFX_POINTER
00:0000F246   ayFX_TONE
00:0000F248   ayFX_NOISE
00:0000F249   ayFX_VOLUME
00:0000F24A   ayFX_CHANNEL
00:00008000   START
00:00008032   loop_principal
00:00008042 X fin_programa_principal
00:00008042   inicializa_variables_pruebas
00:00008064 X fin_inicializa_variables_pruebas
00:00008065   inicializa_niveles
00:00008073   inicializa_niveles.bucle_borra_hab
00:00008077 X fin_iniciliza_niveles
00:00008078   actualiza_marcador_vidas
00:0000807D   loop_marcador_caras_negro
00:00008082 X fin_loop_marcador_caras_negro
00:0000808B   loop_marcador_caras
00:00008090 X fin_loop_marcador_caras
00:00008090 X fin_actualiza_marcador_vidas
00:00008091   actualiza_buffer_reliquias
00:00008097   loop_buffer_reliquias_negro
00:000080A4   loop_buffer_reliquias
00:000080A9 X fin_actualiza_buffer_reliquias
00:000080AA   localiza_info_habitacion
00:000080AD X localiza_info_habitacion.situo_columna
00:000080B6 X localiza_info_habitacion.situo_fila
00:000080BF   localiza_info_habitacion.loop_suma_fila
00:000080C7   localiza_info_habitacion.situo_nivel
00:000080D6   localiza_info_habitacion.loop_suma_nivel
00:000080DB   localiza_info_habitacion.actualiza_valiable_habitacion
00:000080E4 X fin_localiza_info_habitacion
00:000080E5   suma_A_BC
00:000080EA X fin_suma_A_BC
00:000080EB   suma_A_HL
00:000080F0 X fin_suma_A_HL
00:000080F1   color_pantalla
00:00008102 X fin_color_pantalla
00:00008102   sub_preparapantalla
00:00008102 X elimina_clic
00:00008106 X fin_elimina_clic
00:00008106 X limpia_pantalla
00:0000810A X fin_limpia_pantalla
00:00008110 X screen2
00:00008115 X sprites_16_16
00:00008123 X fin_sub_preparapantalla
00:00008123   pinta_pantalla_completa
00:00008129 X fin_pinta_pantalla_completa
00:0000812A   pinta_parte_superior_pantalla
00:0000815B   pinta_parte_superior_pantalla.carga_nivel_0
00:00008176   pinta_parte_superior_pantalla.carga_nivel_1
00:00008191   pinta_parte_superior_pantalla.carga_nivel_2
00:000081AC   pinta_parte_superior_pantalla.carga_nivel_3
00:000081C7   pinta_parte_superior_pantalla.carga_nivel_4
00:000081E2   pinta_parte_superior_pantalla.carga_nivel_5
00:000081FD   pinta_parte_superior_pantalla.carga_nivel_6
00:00008215   pinta_parte_superior_pantalla.fin_carga_niveles
00:00008242 X fin_pinta_parte_superior_pantalla
00:00008242   tiles_patrones
00:00008244   tiles_colores
00:00008246   tiles_mapa
00:00008248   pinta_parte_inferior_pantalla
00:00008263 X fin_pinta_parte_inferior_pantalla
00:00008263   pinta_vidas
00:00008272 X fin_pinta_vidas
00:00008272   pinta_reliquias
00:00008281 X fin_pinta_reliquias
00:00008281   pinta_nivel
00:0000828D X fin_pinta_nivel
00:0000828D   pinta_tile_suelto
00:0000829A X fin_pinta_tile_suelto
00:0000829B   mira_pinta_energia
00:000082A1 X pinta_ener
00:000082A1 X pinta_ener_tile_8
00:000082AD   pinta_ener_tile_8_negro
00:000082AE   pinta_ener_tile_7
00:000082B8   pinta_ener_tile_7_negro
00:000082B9   pinta_ener_tile_6
00:000082C3   pinta_ener_tile_6_negro
00:000082C4   pinta_ener_tile_5
00:000082CE   pinta_ener_tile_5_negro
00:000082CF   pinta_ener_tile_4
00:000082D9   pinta_ener_tile_4_negro
00:000082DA   pinta_ener_tile_3
00:000082E4   pinta_ener_tile_3_negro
00:000082E5   pinta_ener_tile_2
00:000082EF   pinta_ener_tile_2_negro
00:000082F0   fin_mira_pinta_energia
00:000082F2   pinta_energia
00:00008301 X fin_pinta_energia
00:00008301   borra_mapa
00:00008357 X fin_borra_mapa
00:00008358   pinta_puertas
00:00008375 X fin_pinta_puertas
00:00008376   pinta_puerta_aba
00:00008391 X fin_pinta_puerta_aba
00:00008391   pinta_puerta_arr
00:000083AC X fin_pinta_puerta_arr
00:000083AC   pinta_puerta_der
00:000083C7 X fin_pinta_puerta_der
00:000083C7   pinta_puerta_izq
00:000083E2 X fin_pinta_puerta_izq
00:000083E2   posiciona_en_mapa
00:000083E5 X posiciona_en_mapa.sumar_fila
00:0000840F X posiciona_en_mapa.fila_0
00:00008416   posiciona_en_mapa.fila_1
00:0000841D   posiciona_en_mapa.fila_2
00:00008424   posiciona_en_mapa.fila_3
00:0000842B   posiciona_en_mapa.fila_4
00:00008432   posiciona_en_mapa.fila_5
00:00008439 X posiciona_en_mapa.fila_6
00:00008439   posiciona_en_mapa.sumar_columna
00:0000844F   pinta_pos_mapa_vacio
00:00008451   fin_pinta_pos_mapa
00:00008454 X fin_posiciona_en_mapa
00:00008454   efecto_imagen_tira_reliquia
00:00008457   efecto_imagen_tira_reliquia.parpadea_fondo
00:0000846E X fin_efecto_imagen_tira_reliquia
00:0000846E   pinta_array
00:00008489   pinta_array.pa_pinta_fila
00:0000848A   pinta_array.pa_pinta_columnas
00:000084AD X fin_pinta_array
00:000084AE   wordaux1
00:000084B0   wordaux2
00:000084B2   byteaux1
00:000084B3   byteaux2
00:000084B4   inicializa_antorchas
00:000084D5 X fin_inicializa_antorchas
00:000084D6 X inicializa_esqueletos
00:000084F7 X fin_inicializa_esqueletos
00:000084F8   pinta_antorchas
00:00008509   pinta_antorchas.hayantorchas
00:00008532 X fin_pinta_antorchas
00:00008532   actualiza_elementos_fondo
00:00008532 X actualiza_elementos_fondo.examina_antorchas
00:00008540   actualiza_elementos_fondo.examina_esqueletos
00:00008540 X fin_actualiza_elementos_fondo
00:00008541   flip_llamas_antorchas
00:00008558 X flip_llamas_antorchas.llama_impar
00:00008579   flip_llamas_antorchas.llama_par
00:00008598   fin_flip_llamas_antorchas
00:00008599   carga_patrones_sprites_nivel
00:000085A3 X fin_carga_patrones_sprites_nivel
00:000085A4   carga_patrones_nivel_comunes
00:000085B0 X fin_carga_patrones_nivel_comunes
00:000085B0   carga_patrones_sprites_nivel1
00:000085B0 X fin_carga_patrones_sprites
00:000085B1   render_sprites
00:000085BD X fin_actualiza_array_sprites_vram
00:000085BD   vuelca_resultado_puntomira_array
00:000085E2 X vuelca_resultado_puntomira_array.codigo_color_1
00:000085EB   vuelca_resultado_puntomira_array.codigo_color_2
00:000085F4 X fin_vuelca_resultado_puntomira_array
00:000085F4   check_player
00:00008613 X f
00:00008614   mueve_arriba
00:0000861F   mueve_arriba.no_decrementa_y
00:00008620 X fin_mueve_arriba
00:00008621   mueve_derecha
00:0000862E   mueve_derecha.no_incrementa_x
00:0000862F X fin_mueve_derecha
00:00008630   mueve_abajo
00:0000863D   mueve_abajo.no_incrementa_y
00:0000863E X fin_mueve_abajo
00:0000863F   mueve_izquierda
00:0000864A   mueve_izquierda.no_decrementa_x
00:0000864B X fin_mueve_izquierda
00:0000864C   mira_disparo
00:0000864C X mira_disparo.mira_boton_pulsado1
00:00008659 X mira_disparo.no_efectua_disparo
00:00008664   mira_disparo.efectua_disparo
00:00008676   mira_disparo.fin_mira_disparo1
00:00008677   mira_disparo.mira_boton_pulsado2
00:00008693 X fin_mira_disparo
00:00008693   update_controllers_status
00:000086CA   read_joy_0
00:000086DE   check_8th_keyboard_row
00:000086EC   check_4th_keyboard_row
00:000086FA X inicializa_replayer_efectos_interrupciones
00:00008713 X fin_inicializa_replayer_efectos_interrupciones
00:00008714   subrutina_isr
00:0000871D X fin_subrutina_isr
00:0000871D X subrutinas_sonido
00:00000000   CHNPRM_PsInOr
00:00000001   CHNPRM_PsInSm
00:00000002   CHNPRM_CrAmSl
00:00000003   CHNPRM_CrNsSl
00:00000004   CHNPRM_CrEnSl
00:00000005   CHNPRM_TSlCnt
00:00000006   CHNPRM_CrTnSl
00:00000008   CHNPRM_TnAcc
00:0000000A   CHNPRM_COnOff
00:0000000B   CHNPRM_OnOffD
00:0000000C   CHNPRM_OffOnD
00:0000000D   CHNPRM_OrnPtr
00:0000000F   CHNPRM_SamPtr
00:00000011   CHNPRM_NNtSkp
00:00000012   CHNPRM_Note
00:00000013   CHNPRM_SlToNt
00:00000014   CHNPRM_Env_En
00:00000015   CHNPRM_Flags
00:00000016   CHNPRM_TnSlDl
00:00000017   CHNPRM_TSlStp
00:00000019   CHNPRM_TnDelt
00:0000001B   CHNPRM_NtSkCn
00:0000001C   CHNPRM_Volume
00:0000001D X CHNPRM_Size
00:00000000   AR_TonA
00:00000002   AR_TonB
00:00000004   AR_TonC
00:00000006   AR_Noise
00:00000007   AR_Mixer
00:00000008   AR_AmplA
00:00000009   AR_AmplB
00:0000000A   AR_AmplC
00:0000000B   AR_Env
00:0000000D   AR_EnvTp
00:0000871D   CHECKLP
00:0000872E X PT3_MUTE
00:0000873A   PT3_INIT
00:00008779   PT3_INIT.TP_0
00:00008785   PT3_INIT.TP_1
00:0000878C   PT3_INIT.TP_2
00:000087FA   PT3_INIT.L1
00:00008807   PT3_INIT.L2
00:0000880B X PT3_INIT.L3
00:00008832   PT3_INIT.CORR_1
00:00008840   PT3_INIT.CORR_2
00:00008847   PT3_INIT.TC_EXIT
00:00008852   PT3_INIT.INITV1
00:0000885A   PT3_INIT.INITV2
00:0000886E   PT3_INIT.INITV3
00:00008872   PD_OrSm
00:0000887C   PD_SAM
00:0000887D   PD_SAM_
00:00008893   PD_VOL
00:0000889C   PD_EOff
00:000088A4   PD_SorE
00:000088AE   PD_ENV
00:000088B3   PD_ORN
00:000088B8   PD_ESAM
00:000088C5   PTDECOD
00:000088D4   PD_LOOP
00:000088D7   PD_LP2
00:00008904   PD_NOIS
00:00008909   PD_REL
00:0000890F   PD_NOTE
00:00008917   PD_RES
00:00008929   PD_FIN
00:00008930   C_PORTM
00:0000897B   C_PORTM.NOSIG
00:00008985   SET_STP
00:00008991   C_GLISS
00:000089A4   C_SMPOS
00:000089AA   C_ORPOS
00:000089B0   C_VIBRT
00:000089C8   C_ENGLS
00:000089DA   C_DELAY
00:000089E0   SETENV
00:000089FB   C_NOP
00:000089FC   SETORN
00:00008A15   SPCCOMS
00:00008A35   CHREGS
00:00008A58   CHREGS.CH_ORPS
00:00008A63   CHREGS.CH_NTP
00:00008A69   CHREGS.CH_NOK
00:00008A84   CHREGS.CH_SMPS
00:00008A9A   CHREGS.CH_NOAC
00:00008AE1   CHREGS.CH_STPP
00:00008AF6   CHREGS.CH_AMP
00:00008B08   CHREGS.CH_AMIN
00:00008B0D   CHREGS.CH_SVAM
00:00008B10   CHREGS.CH_NOAM
00:00008B19   CHREGS.CH_APOS
00:00008B1F   CHREGS.CH_VOL
00:00008B2A X CHREGS.CH_ENV
00:00008B31   CHREGS.CH_NOEN
00:00008B4B   CHREGS.NO_ENAC
00:00008B52   CHREGS.NO_ENSL
00:00008B60   CHREGS.CH_MIX
00:00008B64   CHREGS.CH_EXIT
00:00008B83   CHREGS.CH_ONDL
00:00008B87   PT3_PLAY
00:00008BBB   PT3_PLAY.PLNLP
00:00008BE2   PT3_PLAY.PL1A
00:00008BED   PT3_PLAY.PL1B
00:00008C02   PT3_PLAY.PL1C
00:00008C17   PT3_PLAY.PL1D
00:00008C1D   PT3_PLAY.PL2
00:00008C7F   PT3_ROUT
00:00008C80   ROUT_A0
00:00008C8C   ROUT_A0.LOUT
00:00008CA0   NT_DATA
00:00008CB0   T_
00:00008CB0   TCOLD_0
00:00008CBC   TCNEW_1
00:00008CBC   TCOLD_1
00:00008CBE   TCOLD_2
00:00008CD0   TCNEW_3
00:00008CD1   TCOLD_3
00:00008CDA   TCNEW_0
00:00008CE5   TCNEW_2
00:00008CF0   EMPTYSAMORN
00:00008CF4   T_PACK
00:00000000 X AYFXRELATIVE
00:00008D29   ayFX_SETUP
00:00008D35   ayFX_END
00:00008D3B   ayFX_INIT
00:00008D4C   ayFX_INIT.CHECK_PRI
00:00008D6D   ayFX_INIT.INIT_END
00:00008D71   ayFX_PLAY
00:00008D85   ayFX_PLAY.TAKECB
00:00008D96   ayFX_PLAY.CHECK_NN
00:00008DA3   ayFX_PLAY.SETPOINTER
00:00008DB7   ayFX_PLAY.SETMASKS
00:00008DC5 X ayFX_PLAY.CHK1
00:00008DC7 X ayFX_PLAY.PLAY_C
00:00008DD4   ayFX_PLAY.CHK2
00:00008DD9 X ayFX_PLAY.PLAY_B
00:00008DE6   ayFX_PLAY.CHK3
00:00008DE9 X ayFX_PLAY.PLAY_A
00:00008DF6   ayFX_PLAY.SETMIXER
00:00008E06   song
00:0000976E   sfx_bank
00:000097B9   inicializa_ayudas
00:000098E6 X fin_resetea_ayudas
00:000098E7   pinta_obj_ayuda
00:000098EB X pinta_obj_ayuda.dibujoon
00:000098F7   pinta_obj_ayuda.dibujooff
00:00009900   pinta_obj_ayuda.param_wordaux2
00:0000990C X pinta_obj_ayuda.filasycols
00:00009917 X fin_pinta_obj_ayuda
00:00009917   pinta_ayudas_habitacion
00:00009917 X pinta_ayudas_habitacion.examina_oracion
00:00009928   pinta_ayudas_habitacion.examina_cruz
00:00009939   pinta_ayudas_habitacion.examina_aguabendita
00:0000994A   pinta_ayudas_habitacion.examina_armadura
00:0000995B   pinta_ayudas_habitacion.examina_planta
00:0000996C   pinta_ayudas_habitacion.examina_vidaextra
00:0000997D   pinta_ayudas_habitacion.examina_ballesta
00:0000998C X fin_pinta_ayudas_habitacion
00:0000998D   accion_oracion
00:0000998D X fin_accion_oracion
00:0000998E   accion_cruz
00:0000998E X fin_accion_cruz
00:0000998F   accion_agua
00:0000998F X fin_accion_agua
00:00009990   accion_armadura
00:00009990 X fin_accion_armadura
00:00009991   accion_planta
00:00009991 X fin_accion_planta
00:00009992   accion_vidaextra
00:00009992 X fin_accion_vidaextra
00:00009993   accion_ballesta
00:00009993 X fin_accion_ballesta
00:00009994   depack_VRAM
00:000099C1   literal
00:000099C6   loop
00:000099CF X getlen
00:000099D5   lus
00:000099F2   lenok
00:000099FF   mode7
00:00009A05   mode6
00:00009A0B   mode5
00:00009A11   mode4
00:00009A17   mode3
00:00009A1D   mode2
00:00009A2D   offsok
00:00009A38   offsok.loop
00:00009A5A   getbit
00:00009A5E   getbitexx
00:00009A64   Depack_out
00:00009A66   modes
00:00000000 X ESTRUCTURA_PUNTOMIRA.posx
00:00000001 X ESTRUCTURA_PUNTOMIRA.posy
00:00000002 X ESTRUCTURA_PUNTOMIRA.escena
00:00000003 X ESTRUCTURA_PUNTOMIRA.velocidad
00:00000004 X ESTRUCTURA_PUNTOMIRA.boton2_pressed
00:00000005 X ESTRUCTURA_PUNTOMIRA.cadencia
00:00000006 X ESTRUCTURA_PUNTOMIRA.pm_aux1
00:00000007 X ESTRUCTURA_PUNTOMIRA.pm_aux2
00:00000008 X ESTRUCTURA_PUNTOMIRA.pm_aux3
00:00000009 X ESTRUCTURA_PUNTOMIRA.pm_aux4
00:0000000A X ESTRUCTURA_PUNTOMIRA.pm_aux5
00:0000000B X ESTRUCTURA_PUNTOMIRA.pm_aux6
00:0000000C X ESTRUCTURA_PUNTOMIRA.pm_aux7
00:0000000D X ESTRUCTURA_PUNTOMIRA.pm_aux8
00:0000000E X ESTRUCTURA_PUNTOMIRA.pm_aux9
00:0000000F X ESTRUCTURA_PUNTOMIRA.pm_aux10
00:00000010 X ESTRUCTURA_PUNTOMIRA
00:00000000 X ESTRUCTURA_ENEMIGO.tipo
00:00000001 X ESTRUCTURA_ENEMIGO.posx
00:00000002 X ESTRUCTURA_ENEMIGO.posy
00:00000003 X ESTRUCTURA_ENEMIGO.color
00:00000004 X ESTRUCTURA_ENEMIGO.escena
00:00000005 X ESTRUCTURA_ENEMIGO.contador_siguiente_escena
00:00000006 X ESTRUCTURA_ENEMIGO.reset_contador
00:00000007 X ESTRUCTURA_ENEMIGO.dano
00:00000008 X ESTRUCTURA_ENEMIGO.energia
00:00000009 X ESTRUCTURA_ENEMIGO.ver_hor
00:0000000A X ESTRUCTURA_ENEMIGO.manejador_dibujo
00:0000000C X ESTRUCTURA_ENEMIGO.en_aux3
00:0000000D X ESTRUCTURA_ENEMIGO.en_aux4
00:0000000E   ESTRUCTURA_ENEMIGO
00:00000000 X ESTRUCTURA_AYUDA.activo
00:00000001 X ESTRUCTURA_AYUDA.postilemem_nousado
00:00000003 X ESTRUCTURA_AYUDA.postilemem_usado
00:00000005 X ESTRUCTURA_AYUDA.pospantalla
00:00000006 X ESTRUCTURA_AYUDA.posx
00:00000007 X ESTRUCTURA_AYUDA.posy
00:00000008 X ESTRUCTURA_AYUDA.puntero_accion
00:0000000A X ESTRUCTURA_AYUDA.ayu_aux1
00:0000000B X ESTRUCTURA_AYUDA.ayu_aux2
00:0000000C X ESTRUCTURA_AYUDA.ayu_aux3
00:0000000D X ESTRUCTURA_AYUDA.ayu_aux4
00:0000000E X ESTRUCTURA_AYUDA.ayu_aux5
00:0000000F X ESTRUCTURA_AYUDA.ayu_aux6
00:00000010 X ESTRUCTURA_AYUDA.ayu_aux7
00:00000011   ESTRUCTURA_AYUDA
00:00000000 X ESTRUCTURA_ANTORCHA.activo
00:00000001 X ESTRUCTURA_ANTORCHA.postilemem_antor1
00:00000003 X ESTRUCTURA_ANTORCHA.pospantalla_antor1
00:00000004 X ESTRUCTURA_ANTORCHA.pospantalla_antor2
00:00000005 X ESTRUCTURA_ANTORCHA.escena
00:00000006 X ESTRUCTURA_ANTORCHA.cont_sig_escena
00:00000007   ESTRUCTURA_ANTORCHA
00:00000000 X ESTRUCTURA_ESQUELETO.activo
00:00000001 X ESTRUCTURA_ESQUELETO.postilemem_antor1
00:00000003 X ESTRUCTURA_ESQUELETO.pospantalla_esquel1
00:00000004 X ESTRUCTURA_ESQUELETO.pospantalla_esquel2
00:00000005 X ESTRUCTURA_ESQUELETO.escena
00:00000006 X ESTRUCTURA_ESQUELETO.cont_sig_escena
00:00000007   ESTRUCTURA_ESQUELETO
00:00009A74 X sprites_pantantalla
00:00009A74   sprites_comunes
00:00009A74 X sprite_punto_mira_1
00:00009A94 X sprite_punto_mira_2
00:00009AB4 X sprite_punto_mira_1_mejorado
00:00009AD4 X sprite_punto_mira_2_mejorado
00:00009AF4 X sprite_explosion_1
00:00009B14 X sprite_explosion_2
00:00009B34   fin_sprites_comunes
00:00009B34 X sprite_arana1_1
00:00009B54 X sprite_arana1_2
00:00009B74 X sprite_murcielago1_1
00:00009B94 X sprite_murcielago1_2
00:00009BB4 X sprite_serpiente1_1
00:00009BD4 X sprite_serpiente1_2
00:00009BF4 X sprite_serpiente2_1
00:00009C14 X sprite_serpiente2_2
00:00009C34 X sprite_zombi1_1_1
00:00009C54 X sprite_zombi1_2_1
00:00009C74 X sprite_zombi1_3_1
00:00009C94 X sprite_zombi1_4_1
00:00009CB4 X sprite_zombi1_1_2
00:00009CD4 X sprite_zombi1_2_2
00:00009CF4 X sprite_zombi1_3_2
00:00009D14 X sprite_zombi1_4_2
00:00009D34 X sprite_zombi2_1_1
00:00009D54 X sprite_zombi2_2_1
00:00009D74 X sprite_zombi2_3_1
00:00009D94 X sprite_zombi2_4_1
00:00009DB4 X sprite_zombi2_1_2
00:00009DD4 X sprite_zombi2_2_2
00:00009DF4 X sprite_zombi2_3_2
00:00009E14 X sprite_zombi2_4_2
00:00009E34 X sprite_caballero1_1_1
00:00009E54 X sprite_caballero1_2_1
00:00009E74 X sprite_caballero1_3_1
00:00009E94 X sprite_caballero1_4_1
00:00009EB4 X sprite_caballero1_1_2
00:00009ED4 X sprite_caballero1_2_2
00:00009EF4 X sprite_caballero1_3_2
00:00009F14 X sprite_caballero1_4_2
00:00009F34 X sprite_caballero2_1_1
00:00009F54 X sprite_caballero2_2_1
00:00009F74 X sprite_caballero2_3_1
00:00009F94 X sprite_caballero2_4_1
00:00009FB4 X sprite_caballero2_1_2
00:00009FD4 X sprite_caballero2_2_2
00:00009FF4 X sprite_caballero2_3_2
00:0000A014 X sprite_caballero2_4_2
00:0000A034 X sprite_llama1_1
00:0000A054 X sprite_llama2_1
00:0000A074 X sprite_llama1_2
00:0000A094 X sprite_llama2_2
00:0000A0B4 X sprite_fantasma1_1
00:0000A0D4 X sprite_fantasma2_1
00:0000A0F4 X sprite_fantasma1_2
00:0000A114 X sprite_fantasma2_2
00:0000A134 X sprite_magia1_1
00:0000A154 X sprite_magia2_1
00:0000A174 X sprite_magia1_2
00:0000A194 X sprite_magia2_2
00:0000A1B4 X sprite_beholder1_1
00:0000A1D4 X sprite_beholder2_1
00:0000A1F4 X sprite_beholder3_1
00:0000A214 X sprite_beholder4_1
00:0000A234 X sprite_beholder1_2
00:0000A254 X sprite_beholder2_2
00:0000A274 X sprite_beholder3_2
00:0000A294 X sprite_beholder4_2
00:0000A2B4 X sprite_vampiro1_1
00:0000A2D4 X sprite_vampiro2_1
00:0000A2F4 X sprite_vampiro1_2
00:0000A314 X sprite_vampiro2_2
00:0000A334 X sprite_manoizq1
00:0000A354 X sprite_manoizq2
00:0000A374 X sprite_manoizq3
00:0000A394 X sprite_manoder1
00:0000A3B4 X sprite_manoder2
00:0000A3D4 X sprite_manoder3
00:0000A3F4   habitacion_actual
00:0000A3F5   habitacion_extras
00:0000A3F6   habitaciones_juego
00:0000A3F6 X habitaciones_nivel0
00:0000A466 X habitaciones_nivel1
00:0000A4D6 X habitaciones_nivel2
00:0000A546 X habitaciones_nivel3
00:0000A5B6 X habitaciones_nivel4
00:0000A626 X habitaciones_nivel5
00:0000A696 X habitaciones_nivel6
00:0000A706   color_base
00:0000A709   color_bomba1
00:0000A70C   color_bomba2
00:0000A70F X prota
00:0000A70F   prota.posx
00:0000A710   prota.posy
00:0000A711   prota.escena
00:0000A712 X prota.velocidad
00:0000A713 X prota.boton2_pressed
00:0000A714   prota.cadencia
00:0000A715 X prota.pm_aux1
00:0000A716 X prota.pm_aux2
00:0000A717 X prota.pm_aux3
00:0000A718 X prota.pm_aux4
00:0000A719 X prota.pm_aux5
00:0000A71A X prota.pm_aux6
00:0000A71B X prota.pm_aux7
00:0000A71C X prota.pm_aux8
00:0000A71D X prota.pm_aux9
00:0000A71E X prota.pm_aux10
00:0000A71F   prota_nivel
00:0000A720   prota_vidas
00:0000A721   prota_reliquias
00:0000A722   prota_pos_mapx
00:0000A723   prota_pos_mapy
00:0000A724   prota_energia
00:0000A725   array_aux_vidas
00:0000A72D   array_aux_reliquias
00:0000A735   array_aux_energia
00:0000A73C   ultimo_pos_array_aux_energia
00:0000A73D   array_aux_mapa_limpiar
00:0000A744   elemento_pintar_mapa
00:0000A745   array_puerta_arriba
00:0000A745 X array_puerta_arriba1
00:0000A749 X array_puerta_arriba2
00:0000A74D X array_puerta_arriba3
00:0000A751 X array_puerta_arriba4
00:0000A755 X array_puerta_arriba5
00:0000A759   array_puerta_derecha
00:0000A759 X array_puerta_derecha1
00:0000A75C X array_puerta_derecha2
00:0000A75F X array_puerta_derecha3
00:0000A762 X array_puerta_derecha4
00:0000A765 X array_puerta_derecha5
00:0000A768 X array_puerta_derecha6
00:0000A76B X array_puerta_derecha7
00:0000A76E   array_puerta_abajo
00:0000A772   array_puerta_izquierda
00:0000A772 X array_puerta_izquierda1
00:0000A775 X array_puerta_izquierda2
00:0000A778 X array_puerta_izquierda3
00:0000A77B X array_puerta_izquierda4
00:0000A77E X array_puerta_izquierda5
00:0000A781 X array_puerta_izquierda6
00:0000A784 X array_puerta_izquierda7
00:0000A787 X pos_ayudas
00:0000A797 X pos_ayudas_y
00:0000A7A7 X pos_ayudas_x
00:0000A7B7 X array_ayudas
00:0000A7B7   array_oracionon
00:0000A7B9 X array_oracionon1
00:0000A7BB   array_oracionoff
00:0000A7BD X array_oracionoff1
00:0000A7BF   array_cruzon
00:0000A7C1 X array_cruzon1
00:0000A7C3   array_cruzoff
00:0000A7C5 X array_cruzoff1
00:0000A7C7   array_aguaon
00:0000A7C9 X array_aguaon1
00:0000A7CB   array_aguaoff
00:0000A7CD X array_aguaoff1
00:0000A7CF   array_armaduraon
00:0000A7D1 X array_armaduraon1
00:0000A7D3   array_armaduraoff
00:0000A7D5 X array_armaduraoff1
00:0000A7D7   array_plantaon
00:0000A7D9 X array_plantaon1
00:0000A7DB   array_plantaoff
00:0000A7DD X array_plantaoff1
00:0000A7DF   array_extraon
00:0000A7E1 X array_extraon1
00:0000A7E3   array_extraoff
00:0000A7E5 X array_extraoff1
00:0000A7E7   array_ballestaon
00:0000A7E9 X array_ballestaon1
00:0000A7EB   array_ballestaoff
00:0000A7ED X array_ballestaoff1
00:0000A7EF   antorchas
00:0000A7F6   array_antorcha
00:0000A7F9   esqueletos
00:0000A800   array_esqueleto
00:0000A80C X lista_ayudas
00:0000A80C   ayuda_oracion
00:0000A81D   ayuda_cruz
00:0000A82E   ayuda_aguabendita
00:0000A83F   ayuda_armadura
00:0000A850   ayuda_planta
00:0000A861   ayuda_vidaextra
00:0000A872   ayuda_ballesta
00:0000A883   array_sprites
00:0000A883   array_sprites_pm
00:0000A88B X array_sprites_enem
00:0000A903 X lista_enemigos
00:0000A98F X puntero_array_atrib_array_VRAM
00:0000A991   tiles_patrones_nivel0
00:0000ABAE   tiles_color_nivel0
00:0000AC17   tiles_mapa_nivel0
00:0000AC4C   tiles_patrones_nivel1
00:0000AE01   tiles_color_nivel1
00:0000AE48   tiles_mapa_nivel1
00:0000AE7D   tiles_patrones_nivel2
00:0000B032   tiles_color_nivel2
00:0000B079   tiles_mapa_nivel2
00:0000B0AE   tiles_patrones_nivel3
00:0000B263   tiles_color_nivel3
00:0000B2AA   tiles_mapa_nivel3
00:0000B2DF   tiles_patrones_nivel4
00:0000B494   tiles_color_nivel4
00:0000B4DB   tiles_mapa_nivel4
00:0000B510   tiles_patrones_nivel5
00:0000B6C5   tiles_color_nivel5
00:0000B70C   tiles_mapa_nivel5
00:0000B741   tiles_patrones_nivel6
00:0000B8F6   tiles_color_nivel6
00:0000B93D   tiles_mapa_nivel6
00:0000B972   tiles_patrones_marcador
00:0000BABE   tiles_color_marcador
00:0000BAF3   tiles_mapa_marcador
00:0000BB55   END


 Output: t4.out
-------------------------------------------------

 Page: 00
  Org: 00008000  Size: *  Used: 00000000

    No output

 Output: t4.bin
-------------------------------------------------

 Page: 00
  Org: 00008000  Size: *  Used: 00003B5C

   Address   Length Align   Label
   00008000   15196         START
