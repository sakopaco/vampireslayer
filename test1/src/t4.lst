Sjasm Z80 Assembler v0.42c - www.xl2s.tk             [2021.08.08 - 20:15:03]

t4.asm
Errors: 0

       1   00:0000                      	OUTPUT	"t4.bin"
       2   00:8000                      	
       3   00:8000                      ;;=====================================================
       4   00:8000                      ;;DEFINICIÓN DE CONSTANTES
       5   00:8000                      ;;=====================================================	
       6   00:8000                      	include "constantes.asm"
       1.  00:8000                      ;;=====================================================
       2.  00:8000                      ;; FICHERO constantes.asm
       3.  00:8000                      ;;=====================================================
       4.  00:8000                      
       5.  00:8000                      ;;ETIQUETAS/CONSTANTES BIOS TECLADO
       6.  00:8000  (00:00D8)           GTTRIG		equ		#00D8	;Returns current trigger status
       7.  00:8000  (00:00D5)           GTSTCK		equ		#00D5	;Returns the joystick/cursors status
       8.  00:8000  (00:F3DB)           CLIKSW		equ		#F3DB	;deshabilita el sonido de clic cuando se pulsa una tecla
       9.  00:8000                      
      10.  00:8000                      ;;ETIQUETAS/CONSTANTES BIOS VDP
      11.  00:8000  (00:013E)           RDVDP		equ		#013E	;lee registro status VDP
      12.  00:8000  (00:0047)           WRTVDP		equ		#0047	;escribe registros del VDP
      13.  00:8000  (00:005C)           LDIRVM		equ		#005C	;RAM/ROM -> VRAM
      14.  00:8000  (00:0059)           LDIRMV		equ		#0059	;VRAM -> RAM
      15.  00:8000  (00:005F)           CHGMOD		equ		#005F	;cambia modo pantalla (screen mode)
      16.  00:8000  (00:0041)           DISSCR  	equ		#0041	;desactiva pantanlla
      17.  00:8000  (00:0044)           ENASCR  	equ		#0044	;activa pantalla
      18.  00:8000  (00:0062)           CHGCLR  	equ		#0062	;cambia color de pantalla (toca A y direcciones)
      19.  00:8000  (00:F3E9)           FORCLR		equ		#F3E9	;zona memoria color foreground
      20.  00:8000  (00:F3EA)           BAKCLR  	equ		#F3EA	;zona memoria color background
      21.  00:8000  (00:F3EB)           BDRCLR 		equ		#F3EB	;zona memoria bordercolor
      22.  00:8000  (00:00C3)           CLS			equ		#00C3	;limpia pantalla (necesita A=0)
      23.  00:8000                      
      24.  00:8000                      ;;ETIQUETAS/CONSTANTES REGISTROS VDP
      25.  00:8000  (00:F3DF)           RG0SAV		equ		#F3DF	;Mirror of VDP register 0 (Basic: VDP(0))
      26.  00:8000  (00:F3E0)           RG1SAV		equ		#F3E0	;Mirror of VDP register 1 (Basic: VDP(1))
      27.  00:8000  (00:F3E1)           RG2SAV		equ		#F3E1	;Mirror of VDP register 2 (Basic: VDP(2))
      28.  00:8000  (00:F3E2)           RG3SAV		equ		#F3E2	;Mirror of VDP register 3 (Basic: VDP(3))
      29.  00:8000  (00:F3E3)           RG4SAV		equ		#F3E3	;Mirror of VDP register 4 (Basic: VDP(4))
      30.  00:8000  (00:F3E4)           RG5SAV		equ		#F3E4	;Mirror of VDP register 5 (Basic: VDP(5))
      31.  00:8000  (00:F3E5)           RG6SAV		equ		#F3E5	;Mirror of VDP register 6 (Basic: VDP(6))
      32.  00:8000  (00:F3E6)           RG7SAV		equ		#F3E6	;Mirror of VDP register 7 (Basic: VDP(7))
      33.  00:8000  (00:F3E7)           STATFL		equ		#F3E7	;Mirror of VDP(8) status register (S#0)
      34.  00:8000                      
      35.  00:8000  (00:0099)           REGEST		equ		#0099	;registro de estado para escribir directamente en VRAM
      36.  00:8000  (00:0098)           REGESCVDP	equ		#0098	;registro donde escribir valor para VRAM
      37.  00:8000                      
      38.  00:8000                      ;;ETIQUETAS/CONSTANTES REGISTROS PSG (PARA JOYSTICK)
      39.  00:8000  (00:00A0)           PSG_A  equ  0a0h  ;reg address
      40.  00:8000  (00:00A1)           PSG_W  equ  0a1h  ;reg data WR
      41.  00:8000  (00:00A2)           PSG_R  equ  0a2h  ;reg data
      42.  00:8000                      
      43.  00:8000                      
      44.  00:8000                      ;;ETIQUETAS DE ZONAS DE MEMORIA DE LA VPD (MSX1)
      45.  00:8000  (00:0000)           CHRTBL		equ		#0000
      46.  00:8000  (00:1800)           TILMAP		equ		#1800
      47.  00:8000  (00:1B00)           SPRART		equ		#1B00
      48.  00:8000  (00:2000)           CLRTBL		equ		#2000
      49.  00:8000  (00:3800)           SPRTBL		equ		#3800
      50.  00:8000                      
      51.  00:8000                      
      52.  00:8000                      ;;ETIQUETAS ESTANDAR PARA DAR MÁS CLARIDAD AL CODIGO
      53.  00:8000  (00:0001)           SI			equ		1
      54.  00:8000  (00:0000)           NO			equ		0
      55.  00:8000                      
      56.  00:8000                      ;;PALETA DE COLORES DEL MSX
      57.  00:8000  (00:0000)           COLTRASP	equ		0
      58.  00:8000  (00:0001)           COLNEGRO	equ		1
      59.  00:8000  (00:0002)           COLVERDE	equ		2
      60.  00:8000  (00:0003)           COLVERCLA	equ		3
      61.  00:8000  (00:0004)           COLAZULOSC	equ		4
      62.  00:8000  (00:0005)           COLAZULLA	equ		5
      63.  00:8000  (00:0006)           COLROJOOSC	equ		6
      64.  00:8000  (00:0007)           COLCYAN		equ		7
      65.  00:8000  (00:0008)           COLROJO		equ		8
      66.  00:8000  (00:0009)           COLROJOCLA	equ		9
      67.  00:8000  (00:000A)           COLAMAROSC	equ		10
      68.  00:8000  (00:000B)           COLAMARCLA	equ		11
      69.  00:8000  (00:000C)           COLVERDOSC	equ		12
      70.  00:8000  (00:000D)           COLMAGENTA	equ		13
      71.  00:8000  (00:000E)           COLGRIS		equ		14
      72.  00:8000  (00:000F)           COLBLANCO	equ		15
      73.  00:8000                      
      74.  00:8000                      
      75.  00:8000                      
      76.  00:8000                      ;;ETIQUETAS ESPECIFICAS PARA DAR MÁS CLARIDAD AL CODIGO (relacionadas con posiciones en mapa vdp)
      77.  00:8000  (00:02F8)           POSMAPLIN1  equ		#02F8
      78.  00:8000  (00:02D8)           POSMAPLIN2  equ		#02D8
      79.  00:8000  (00:02B8)           POSMAPLIN3  equ		#02B8
      80.  00:8000  (00:0298)           POSMAPLIN4  equ		#0298
      81.  00:8000  (00:0278)           POSMAPLIN5  equ		#0278
      82.  00:8000  (00:0258)           POSMAPLIN6  equ		#0258
      83.  00:8000  (00:0238)           POSMAPLIN7  equ		#0238
      84.  00:8000                      
      85.  00:8000  (00:000D)           POSCARAMAP	equ		#000D
      86.  00:8000  (00:0248)           POSVIDAS	equ		#0248
      87.  00:8000  (00:0011)           POSRELIMAP	equ		#0011
      88.  00:8000  (00:02C8)           POSRELIQ	equ		#02C8
      89.  00:8000  (00:0288)           POSENERG	equ		#0288
      90.  00:8000  (00:02B4)           POSNIVEL	equ		#02B4
      91.  00:8000  (00:0238)           POSMAPA		equ 	#0238
      92.  00:8000                      
      93.  00:8000  (00:01EE)           POSPUERABAJ equ		#01EE
      94.  00:8000  (00:008E)           POSPUERARRI equ		#008E
      95.  00:8000  (00:00FC)           POSPUERDERE equ		#00FC
      96.  00:8000  (00:00E1)           POSPUERIZQU equ		#00E1
      97.  00:8000                      
      98.  00:8000                      
      99.  00:8000                      ;;ETIQUETAS ESPECIFICAS PARA DAR MÁS CLARIDAD AL CODIGO (relacionadas con posiciones en en el banco de memoria)
     100.  00:8000  (00:0013)           TILEMAPPROT equ		19
     101.  00:8000  (00:0009)           TILEMAPVACI	equ		9
     102.  00:8000  (00:0010)           TILEMAPROJO equ		16
     103.  00:8000  (00:000F)           TILEMAPAMAR equ		15
     104.  00:8000  (00:000E)           TILEMAPVERD equ		14
     105.  00:8000                      
     106.  00:8000                      
     107.  00:8000                      ;;ETIQUETAS ESPECIFICAS PARA DAR MÁS CLARIDAD AL CODIGO (generales)
     108.  00:8000  (00:0008)           NMAXVIDREL	equ		8		;el número máximo de vidas y de reliquias es de 8
     109.  00:8000  (00:0007)           NHABNIVEL	equ		7
     110.  00:8000  (00:00F8)           MAXENERGIA  equ		248
     111.  00:8000  (00:00D9)           TILEENERG8  equ		217
     112.  00:8000  (00:00BA)           TILEENERG7  equ		186
     113.  00:8000  (00:009B)           TILEENERG6  equ		155
     114.  00:8000  (00:007C)           TILEENERG5  equ		124
     115.  00:8000  (00:005D)           TILEENERG4  equ		93
     116.  00:8000  (00:003E)           TILEENERG3  equ		62
     117.  00:8000  (00:001F)           TILEENERG2  equ		31
     118.  00:8000  (00:0000)           TILENEGRO	equ		0
     119.  00:8000                      
     120.  00:8000                      ;limites
     121.  00:8000  (00:0000)           LIMPANTIZQ  equ		0
     122.  00:8000  (00:00FF)           LIMPANTDER  equ		255
     123.  00:8000  (00:0000)           LIMPANTARR  equ		0
     124.  00:8000  (00:0080)           LIMPANTABA  equ		128
     125.  00:8000                      
     126.  00:8000                      
     127.  00:8000                      ;matriz de 7x7 empieza en 0, y fila y x col, cuento desde esquina sup izq
     128.  00:8000  (00:0006)           BASEMAPY	equ		6
     129.  00:8000  (00:0003)           BASEMAPX	equ		3
     130.  00:8000                      
     131.  00:8000                      ;para que haga un bucle cuando se use una reliquia
     132.  00:8000  (00:000A)           RETARDOREL  equ		10;75 borrar??????????????????????????????
       7   00:8000                      
       8   00:8000                      ;;=====================================================
       9   00:8000                      ;;DEFINICIÓN DE CABECERA DE ARCHIVO BIN
      10   00:8000                      ;;=====================================================		
      11   00:8000                      	include "cabecerabin.asm"
       1.  00:8000                      ;;=====================================================
       2.  00:8000                      ;; FICHERO cabecera.asm
       3.  00:8000                      ;;=====================================================
       4.  00:8000                      
       5.  00:8000                      ;;CABECERA FICHERO BIN
       6.  00:8000  FE                  	DB	#FE
       7.  00:8001  00 80               	DW	START
       8.  00:8003  9F 8F               	DW	END
       9.  00:8005  00 80               	DW	START
      10.  00:8007                      
      11.  00:8007                      ;;INICIO CÓDIGO PROGRAMA	
      12.  00:8007                      	ORG	#8000
      13.  00:8000                      	
      12   00:8000                      	
      13   00:8000                      START:
      14   00:8000                      	
      15   00:8000                      	;inicializa pantalla y entonrno
      16   00:8000  CD 15 81            	CALL	sub_preparapantalla			;screen 2,2 sin click al pulsar tecla y color 16,1,1
      17   00:8003                      	
      18   00:8003                      	;inicializa variables para parametrizar funciones y que lo que se muestre sea variable (nº vidas, mapa, puertas, pantalla, etc...)
      19   00:8003  CD 53 80            	CALL	inicializa_variables_pruebas
      20   00:8006                      	
      21   00:8006                      	;inicializa los niveles por partida
      22   00:8006  CD 77 80            	CALL	inicializa_niveles			;no es necesario parametrizarlo según el nivel del usuario ya que se cargan todos
      23   00:8009                      	
      24   00:8009                      	;pinta la pantalla (la primera o algunas especiales se pintan completamente)
      25   00:8009  CD 36 81            	CALL	pinta_pantalla_completa 
      26   00:800C                      	
      27   00:800C                      	;carga sprites en memoria (SE HA RETRASADO HASTA PARAMETRIZAR LA CARGA DE PANTALLAS)
      28   00:800C  CD 9F 83            	CALL 	carga_patrones_sprites_nivel1
      29   00:800F                      	
      30   00:800F                      	;funciones que modificarian el marcador si se produce un evento cuando toque y cuando se pinta la pantalla ya se mira
      31   00:800F                      	;una variable para ver si el array hay que actualizarlo en pantalla o no
      32   00:800F  CD 8F 81            	CALL	pinta_vidas
      33   00:8012  CD 9E 81            	CALL 	pinta_reliquias
      34   00:8015  CD AD 81            	CALL	pinta_nivel
      35   00:8018  CD 2E 82            	CALL	borra_mapa
      36   00:801B                      
      37   00:801B  CD BE 80            	CALL	localiza_info_habitacion	;devuelve variable habitacion_actual 	
      38   00:801E                      
      39   00:801E  3E 01               	LD		 A,1
      40   00:8020  CD 2F 83            	CALL	posiciona_en_mapa		;se le pasa A 1 (tile del prota) está el prota y prota.poxx y posy
      41   00:8023                      	
      42   00:8023                      loop_principal:
      43   00:8023  76                  	HALT							;espera VBLANK y sincroniza
      44   00:8024                      	
      45   00:8024  CD 70 84            	CALL	render_sprites			;actualiza array de sprites y los pinta en pantalla
      46   00:8027                      	
      47   00:8027  CD 1F 82            	CALL	pinta_energia			;pinta la energia en pantalla
      48   00:802A                      
      49   00:802A                      mira_pinta_puertas:
      50   00:802A  3A E5 8B            	LD		 A,(actualiza_puertas_sn)
      51   00:802D  B7                  	OR		 A
      52   00:802E  28 03               	JR		 Z,fin_mira_pinta_puertas
      53   00:8030                      	
      54   00:8030  CD BC 82            	CALL	pinta_puertas
      55   00:8033                      fin_mira_pinta_puertas:
      56   00:8033                      
      57   00:8033  CD B3 84            	CALL	check_player			;MIRA EL CONTROL Y APLICA LA LOGICA DE MOVIMIENTO DEL PROTAGONISTA
      58   00:8036                      	
      59   00:8036  C3 23 80            	JP		loop_principal
      60   00:8039                      fin_programa_principal:
      61   00:8039                      	;RET
      62   00:8039                      
      63   00:8039                      
      64   00:8039                      
      65   00:8039                      ;;=====================================================
      66   00:8039                      ;;EFECTO_IMAGEN_TIRA_RELIQUIA
      67   00:8039                      ;;=====================================================	
      68   00:8039                      ; función: 	hace que el fondo de la pantalla parpadee N veces
      69   00:8039                      ; entrada: 	actualiza_reliquias_sn
      70   00:8039                      ; salida: 	-
      71   00:8039                      ; toca: 	todo
      72   00:8039                      efecto_imagen_tira_reliquia:
      73   00:8039  3E 14               	LD		 A, 20;RETARDOREL
      74   00:803B  47                  	LD		 B, A
      75   00:803C                      
      76   00:803C                      .parpadea_fondo:
      77   00:803C  C5                  	PUSH	BC
      78   00:803D  21 B0 8B            	LD		HL, color_bomba1
      79   00:8040  CD 04 81            	CALL	color_pantalla
      80   00:8043                      	
      81   00:8043                      	;~ PUSH	BC
      82   00:8043                      	;~ LD		 A, 255
      83   00:8043                      	;~ LD		 B, A
      84   00:8043                      ;~ .bucle_de_espera:
      85   00:8043                      	;~ NOP
      86   00:8043                      	;~ DJNZ	 .bucle_de_espera
      87   00:8043                      	;~ POP		BC
      88   00:8043  76                  	HALT
      89   00:8044                      
      90   00:8044                      	
      91   00:8044  21 B3 8B            	LD		HL, color_bomba2
      92   00:8047  CD 04 81            	CALL	color_pantalla
      93   00:804A  C1                  	POP		BC
      94   00:804B  10 EF               	DJNZ	.parpadea_fondo
      95   00:804D                      	
      96   00:804D  21 AD 8B            	LD		HL, color_base
      97   00:8050  C3 04 81            	JP		color_pantalla
      98   00:8053                      fin_efecto_imagen_tira_reliquia:
      99   00:8053                      	;CALL/RET
     100   00:8053                      
     101   00:8053                      
     102   00:8053                      
     103   00:8053                      
     104   00:8053                      
     105   00:8053                      
     106   00:8053                      ;;*******************************************************************
     107   00:8053                      ; sólo para hacer pruebas y pintar la parte de las vidas y demás
     108   00:8053                      inicializa_variables_pruebas:
     109   00:8053  3E 04               	LD		 A, 4
     110   00:8055  32 76 86            	LD		(prota_vidas),A
     111   00:8058                      
     112   00:8058  3E 04               	LD		 A, 4
     113   00:805A  32 77 86            	LD		(prota_reliquias), A
     114   00:805D                      
     115   00:805D  3E 64               	LD		 A, 100
     116   00:805F  32 7A 86            	LD		(prota_energia), A
     117   00:8062                      
     118   00:8062  3E 01               	LD		 A, 1
     119   00:8064  32 75 86            	LD		(prota_nivel), A		;nivel empieza en 0 para usar las posiciones ascii
     120   00:8067                      	
     121   00:8067                      	;ubico al prota dentro del nivel para obtener luego las habitaciones y enemigos que aparecerán
     122   00:8067                      	;será igual la posición inicial en todos los niveles
     123   00:8067                      
     124   00:8067  3E 00               	LD		 A, 0				;los niveles son 7 del 0 al 6
     125   00:8069  32 79 86            	LD		(prota_pos_mapy), A	;pos y dentro del nivel (se empieza en 0)
     126   00:806C                      
     127   00:806C  3E 03               	LD		 A, 3				;columnas 7 del 0 al 6
     128   00:806E  32 78 86            	LD		(prota_pos_mapx), A	;pos y dentro del nivel (se empieza en 0)
     129   00:8071                      	
     130   00:8071                      	;************************************************
     131   00:8071                      	;importante : revisar pintado de mapa
     132   00:8071                      
     133   00:8071  3E 01               	LD			 A, 1 
     134   00:8073  32 E5 8B            	LD			(actualiza_puertas_sn), A;(1 actualiza y 0 no actualiza puertas)
     135   00:8076                      fin_inicializa_variables_pruebas:
     136   00:8076  C9                  	RET
     137   00:8077                      ;;************************************************************************
     138   00:8077                      
     139   00:8077                      
     140   00:8077                      
     141   00:8077                      
     142   00:8077                      
     143   00:8077                      
     144   00:8077                      
     145   00:8077                      
     146   00:8077                      
     147   00:8077                      ;;=====================================================
     148   00:8077                      ;;DEFINICIÓN DE SUBRUTINAS
     149   00:8077                      ;;=====================================================
     150   00:8077                      	include "subrutinas.asm"
       1.  00:8077                      ;;=====================================================
       2.  00:8077                      ;;DEFINICIÓN DE SUBRUTINAS
       3.  00:8077                      ;;=====================================================	
       4.  00:8077                      
       5.  00:8077                      
       6.  00:8077                      ;;=====================================================
       7.  00:8077                      ;;INICIALIZA_NIVELES
       8.  00:8077                      ;;=====================================================	
       9.  00:8077                      ; función: 	copia la plantilla de niveles (habitaciones_plantilla) en los niveles de trabajo para el juego (habitaciones_juego)
      10.  00:8077                      ; entrada: 	habitaciones_plantilla
      11.  00:8077                      ; salida: 	habitaciones_juego
      12.  00:8077                      ; toca: 	A
      13.  00:8077                      inicializa_niveles:
      14.  00:8077  D9                  	EXX
      15.  00:8078                      	
      16.  00:8078  AF                  	XOR		 A
      17.  00:8079  06 31               	LD		 B, 49				;7 filas por 7 niveles menos el primero que lo hago diera del buble porque se suma 14 y no 16
      18.  00:807B  21 9D 88            	LD		HL, habitaciones_juego;tambíen puntero al primer nivel
      19.  00:807E  11 0E 00            	LD		DE,14
      20.  00:8081  19                  	ADD		HL,DE
      21.  00:8082  77                  	LD		(HL),A
      22.  00:8083  11 10 00            	LD		DE,16				;desde las col 15 de una fila a la siguiente
      23.  00:8086                      .bucle_borra_hab:
      24.  00:8086  19                  	ADD		HL,DE
      25.  00:8087  77                  	LD		(HL),A
      26.  00:8088  10 FC               	DJNZ	.bucle_borra_hab
      27.  00:808A                      	
      28.  00:808A  D9                  	EXX
      29.  00:808B                      fin_iniciliza_niveles:
      30.  00:808B  C9                  	RET
      31.  00:808C                      
      32.  00:808C                      
      33.  00:808C                      ;;=====================================================
      34.  00:808C                      ;;ACTUALIZA_MARCADOR_VIDAS
      35.  00:808C                      ;;=====================================================	
      36.  00:808C                      ; función:  actualiza el buffer de vidas
      37.  00:808C                      ; entrada: 	prota_vidas
      38.  00:808C                      ; salida: 	array_aux_vidas
      39.  00:808C                      ; toca:		A,B,HL
      40.  00:808C                      actualiza_marcador_vidas:
      41.  00:808C                      	;para no andar restando pongo todos los huecos a negro y luego en otro bucle las caras
      42.  00:808C                      	;1-pinto todo en blanco
      43.  00:808C  21 C6 8B            	LD		HL,array_aux_vidas
      44.  00:808F  06 08               	LD		 B,NMAXVIDREL
      45.  00:8091                      loop_marcador_caras_negro:	;asignar espacios en negro
      46.  00:8091  36 00               	LD		(HL),0			;0 posición mapa tiles para nada (es transparente pero el fondo es negro)
      47.  00:8093  23                  	INC		HL
      48.  00:8094  10 FB               	DJNZ	loop_marcador_caras_negro
      49.  00:8096                      fin_loop_marcador_caras_negro:
      50.  00:8096                      	;2-pinto las caras según el n de vidas
      51.  00:8096  3A 76 86            	LD		 A, (prota_vidas)
      52.  00:8099  B7                  	OR		 A
      53.  00:809A  C8                  	RET 	 Z
      54.  00:809B  47                  	LD		 B, A
      55.  00:809C  21 C6 8B            	LD		HL, array_aux_vidas
      56.  00:809F                      loop_marcador_caras: ;asignar caras
      57.  00:809F  36 0D               	LD		(HL), POSCARAMAP	;13 posición mapa tiles para cara
      58.  00:80A1  23                  	INC		HL
      59.  00:80A2  10 FB               	DJNZ	loop_marcador_caras
      60.  00:80A4                      fin_loop_marcador_caras:
      61.  00:80A4                      
      62.  00:80A4                      fin_actualiza_marcador_vidas:
      63.  00:80A4  C9                  	RET
      64.  00:80A5                      
      65.  00:80A5                      
      66.  00:80A5                      ;;=====================================================
      67.  00:80A5                      ;;ACTUALIZA_BUFFER_RELIQUIAS
      68.  00:80A5                      ;;=====================================================	
      69.  00:80A5                      ; función: 	actualiza buffer de reliquias
      70.  00:80A5                      ; entrada: 	prota_reliquias
      71.  00:80A5                      ; salida: 	array_aux_reliquias
      72.  00:80A5                      ; toca:		A,B,HL
      73.  00:80A5                      actualiza_buffer_reliquias:	
      74.  00:80A5                      	;para no andar restando pongo todos los huecos a negro y luego en otro bucle las reliquias
      75.  00:80A5                      	;1-pinto todo en blanco
      76.  00:80A5  21 CE 8B            	LD		HL, array_aux_reliquias
      77.  00:80A8  06 08               	LD		 B, NMAXVIDREL
      78.  00:80AA  AF                  	XOR		 A
      79.  00:80AB                      loop_buffer_reliquias_negro:	;asignar espacios en negro
      80.  00:80AB  77                  	LD		(HL), A			;0 posición mapa tiles para nada (es transparente pero el fondo es negro)
      81.  00:80AC  23                  	INC		HL
      82.  00:80AD  10 FC               	DJNZ	loop_buffer_reliquias_negro
      83.  00:80AF                      
      84.  00:80AF                      	;2-pinto las cruces según el n de reliquias
      85.  00:80AF  21 CE 8B            	LD		HL, array_aux_reliquias
      86.  00:80B2  3A 77 86            	LD		 A, (prota_reliquias)
      87.  00:80B5  B7                  	OR		 A
      88.  00:80B6  C8                  	RET		 Z
      89.  00:80B7  47                  	LD		 B, A
      90.  00:80B8                      loop_buffer_reliquias: ;asignar reliquias
      91.  00:80B8  36 11               	LD		(HL), POSRELIMAP	;17 posición mapa tiles para reliquia
      92.  00:80BA  23                  	INC		HL
      93.  00:80BB  10 FB               	DJNZ	loop_buffer_reliquias
      94.  00:80BD                      fin_actualiza_buffer_reliquias:
      95.  00:80BD  C9                  	RET
      96.  00:80BE                      
      97.  00:80BE                      
      98.  00:80BE                      
      99.  00:80BE                      ;;=====================================================
     100.  00:80BE                      ;;LOCALIZA_INFO_HABITACION
     101.  00:80BE                      ;;=====================================================	
     102.  00:80BE                      ; función: 	busca las puertas que hay que pintar egún la posición del usuario y las pone en A
     103.  00:80BE                      ; entrada: 	prota.pos_mapy, prota.pos_mapx, prota_nivel habitaciones_juego
     104.  00:80BE                      ; salida: 	habitacion_actual
     105.  00:80BE                      ; toca:		A
     106.  00:80BE                      ;ejemplo: nivel 4, posx 5 y posy 3
     107.  00:80BE                      ;  (4 x 7) x 16 (se necesitan dos bytes y el prod de 16 es slr 4 veces)
     108.  00:80BE                      ; +(3 x 16) 	de la fila (se necesita 1 y byte el prod de 16 es slr 4 veces)
     109.  00:80BE                      ; +5        	de la columna 
     110.  00:80BE                      localiza_info_habitacion:
     111.  00:80BE  D9                  		EXX
     112.  00:80BF                      
     113.  00:80BF                      ;primer sumando	(en el ejemplo + (4x7)x16)
     114.  00:80BF  21 9D 88            		LD		HL, habitaciones_juego
     115.  00:80C2  3A 75 86            		LD		 A, (prota_nivel)	
     116.  00:80C5  B7                  		OR		 A
     117.  00:80C6  28 16               		JR		 Z, .no_suma_niveles_previos	;el primero nivel (0) no sumaría ni uno por lo que salto al segundo sumando
     118.  00:80C8                      	;sumo 7 veces el nº de nivel si no es cero
     119.  00:80C8  57                  		LD		 D, A
     120.  00:80C9  06 06               		LD		 B, 6
     121.  00:80CB                      .primer_producto
     122.  00:80CB  82                  		ADD		 A, D
     123.  00:80CC  10 FD               		DJNZ	 .primer_producto
     124.  00:80CE  47                  		LD		 B, A				;guardo el resultado en B
     125.  00:80CF                      
     126.  00:80CF                      ;el resultado previo está en B. Ahoro hay que multiplicar A x 16, lo guardo en DE y lo sumo en HL
     127.  00:80CF                      		;inicializo valores a 0
     128.  00:80CF  AF                  		XOR		 A
     129.  00:80D0  57                  		LD		 D, A
     130.  00:80D1  5F                  		LD		 E, A
     131.  00:80D2  67                  		LD		 H, A
     132.  00:80D3  6F                  		LD		 L, A
     133.  00:80D4                      
     134.  00:80D4  58                  		LD		 E, B				;pongo el (4x7) en HL (estaba en B)
     135.  00:80D5                      		
     136.  00:80D5  06 10               		LD		 B, 16
     137.  00:80D7                      .segundo_producto
     138.  00:80D7  19                  		ADD		HL, DE				;segundo producto x 16
     139.  00:80D8  10 FD               		DJNZ	.segundo_producto	
     140.  00:80DA                      		
     141.  00:80DA                      .fin_seg_prod:
     142.  00:80DA                      	;coloco puntero DE al inicio de las habitaciones y le sumo para poner el puntero en el nivel que me interesa
     143.  00:80DA  11 9D 88            		LD		DE, habitaciones_juego
     144.  00:80DD  19                  		ADD		HL, DE				;suma el nº de bytes de los niveles previos (4 x 7 x 16)
     145.  00:80DE                      .no_suma_niveles_previos:
     146.  00:80DE                      
     147.  00:80DE                      ;ya tengo el puntero HL al inicio del nivel que me interesa
     148.  00:80DE                      
     149.  00:80DE                      ;segundo sumando (en el ejemplo + 3x16)
     150.  00:80DE  3A 79 86            	LD		 A,(prota_pos_mapy)
     151.  00:80E1                      [4]	SLA		 A				;equivalente a 3 x 16			
     151.  00:80E1  CB 27 CB 27 CB 27 CB 27 
     152.  00:80E9                      
     153.  00:80E9  5F                  	LD		 E, A
     154.  00:80EA  AF                  	XOR		 A
     155.  00:80EB  57                  	LD		 D, A
     156.  00:80EC  19                  	ADD		HL, DE			;equivale a 4x7x16 (HL) + 3x16 (DE)
     157.  00:80ED                      
     158.  00:80ED                      ;tercer sumando (en el ejemplo + 5)
     159.  00:80ED  3A 78 86            	LD		 A, (prota_pos_mapx)
     160.  00:80F0  47                  	LD		 B, A
     161.  00:80F1                      .situa_columna:
     162.  00:80F1  23 23               [2]	INC		HL
     163.  00:80F3  10 FC               	DJNZ	.situa_columna
     164.  00:80F5                      
     165.  00:80F5                      ;ya tengo el puntero HL al inicio de la fila que me interesa
     166.  00:80F5                      
     167.  00:80F5                      ;colocamos resultado en habitación actual
     168.  00:80F5  DD 21 9B 88         	LD		IX, habitacion_actual
     169.  00:80F9  7E                  	LD		 A, (HL)
     170.  00:80FA  DD 77 00            	LD		(IX), A
     171.  00:80FD  23                  	INC		HL
     172.  00:80FE  7E                  	LD		 A, (HL)
     173.  00:80FF  DD 77 01            	LD		(IX+1), A
     174.  00:8102                      	
     175.  00:8102  D9                  	EXX
     176.  00:8103                      fin_localiza_info_habitacion:
     177.  00:8103  C9                  	RET
     178.  00:8104                      
     179.  00:8104                      
     180.  00:8104                      
     181.  00:8104                      
     151   00:8104                      	
     152   00:8104                      	include "subr_pintapantalla.asm"
       1.  00:8104                      ;;=====================================================
       2.  00:8104                      ;;DEFINICIÓN DE SUBRUTINAS
       3.  00:8104                      ;;=====================================================	
       4.  00:8104                      ;relacionadas con pintado en pantalla (y no sprites)
       5.  00:8104                      
       6.  00:8104                      
       7.  00:8104                      ;;=====================================================
       8.  00:8104                      ;;COLOR_PANTALLA
       9.  00:8104                      ;;=====================================================	
      10.  00:8104                      ; función: 	el equivalente en basic a color 15,1,1
      11.  00:8104                      ; entrada: 	HL	que apunta a un array de bytes con 3 bytes FORCLR, BAKCLR y BDRCLR
      12.  00:8104                      ; salida: 	-
      13.  00:8104                      ; toca: 	todo
      14.  00:8104                      color_pantalla:
      15.  00:8104  7E                  	LD		 A, (HL)			;FORCLR 
      16.  00:8105  32 E9 F3            	LD 		(FORCLR),A
      17.  00:8108  23                  	INC		HL
      18.  00:8109                      	
      19.  00:8109  7E                  	LD		 A, (HL)			;BAKCLR
      20.  00:810A  32 EA F3            	LD 		(BAKCLR),A
      21.  00:810D  23                  	INC		HL
      22.  00:810E                      	
      23.  00:810E  7E                  	LD		 A, (HL)
      24.  00:810F  32 EB F3            	LD 		(BDRCLR),A			;BDRCLR
      25.  00:8112  C3 62 00            	JP		CHGCLR 
      26.  00:8115                      fin_color_pantalla:
      27.  00:8115                      	;RET
      28.  00:8115                      
      29.  00:8115                      
      30.  00:8115                      ;;=====================================================
      31.  00:8115                      ;;PREPARAPANTALLA
      32.  00:8115                      ;;=====================================================	
      33.  00:8115                      ; función: elimina clic cuando se pulsa tecla, cls, screen 2,2
      34.  00:8115                      ; entrada: -
      35.  00:8115                      ; salida: -
      36.  00:8115                      ; toca: si no son todos los regristros, casi todos
      37.  00:8115                      sub_preparapantalla:
      38.  00:8115                      	;toca A y Z
      39.  00:8115                      elimina_clic;
      40.  00:8115  AF                  	XOR		 A
      41.  00:8116  32 DB F3            	LD		(CLIKSW),A
      42.  00:8119                      fin_elimina_clic:
      43.  00:8119                      
      44.  00:8119                      	;toca A
      45.  00:8119                      limpia_pantalla:
      46.  00:8119  AF                  	XOR		 A
      47.  00:811A  CD C3 00            	CALL 	CLS
      48.  00:811D                      fin_limpia_pantalla:
      49.  00:811D                      
      50.  00:811D                      	;toca A y direcciones #F3E9/#F3EA/#F3EB, poner en HL array con 3 valores
      51.  00:811D  21 AD 8B            	LD		HL, color_base
      52.  00:8120  CD 04 81            	CALL	color_pantalla
      53.  00:8123                      	
      54.  00:8123                      	;cambiamos a SCREEN 2,2 del BASIC
      55.  00:8123                      	;toca A
      56.  00:8123                      screen2:
      57.  00:8123  3E 02               	LD		 A, 2
      58.  00:8125  CD 5F 00            	CALL	CHGMOD			;selecciona screen 2
      59.  00:8128                      sprites_16_16:
      60.  00:8128  3A E0 F3            	LD		 A, (RG1SAV)
      61.  00:812B  F6 02               	OR		00000010b		;fuerza sprites de 16x16
      62.  00:812D  32 E0 F3            	LD		(RG1SAV), A		;no lo guardamos en la copia de variables del sistema
      63.  00:8130  47                  	LD		 B, A
      64.  00:8131  0E 01               	LD		 C, 1
      65.  00:8133  C3 47 00            	JP		WRTVDP			;opción alternativa de escribir las tres lineas siguientes
      66.  00:8136                      	;~ CALL	WRTVDP			;lo escribe en el registro 1 del VDP
      67.  00:8136                      	;~ RET
      68.  00:8136                      fin_sub_preparapantalla:
      69.  00:8136                      	
      70.  00:8136                      
      71.  00:8136                      ;;=====================================================
      72.  00:8136                      ;;PINTA_PANTALLA_COMPLETA
      73.  00:8136                      ;;=====================================================	
      74.  00:8136                      ; función: pinta el escenario, las 3 partes
      75.  00:8136                      ; entrada: -
      76.  00:8136                      ; salida: -
      77.  00:8136                      ; toca: si no son todos los regristros, casi todos
      78.  00:8136                      pinta_pantalla_completa:
      79.  00:8136  CD 3D 81            	CALL 	pinta_parte_superior_pantalla
      80.  00:8139                      	
      81.  00:8139  CD 74 81            	CALL 	pinta_parte_inferior_pantalla	
      82.  00:813C                      fin_pinta_pantalla_completa:
      83.  00:813C  C9                  	RET
      84.  00:813D                      
      85.  00:813D                      
      86.  00:813D                      ;;=====================================================
      87.  00:813D                      ;;PINTA_PARTE_SUPERIOR_PANTALLA
      88.  00:813D                      ;;=====================================================	
      89.  00:813D                      ; función: pinta el escenario, las 2 partes superiores y actualiza puertas
      90.  00:813D                      ; entrada: -
      91.  00:813D                      ; salida: -
      92.  00:813D                      ; toca: si no son todos los regristros, casi todos
      93.  00:813D                      pinta_parte_superior_pantalla:
      94.  00:813D                      
      95.  00:813D                      ;************** preguntar cómo parametrizar esto **********************************************
      96.  00:813D                      
      97.  00:813D                      	;cangando banco 1
      98.  00:813D                      	;cargamos los patrones
      99.  00:813D  21 36 8D            	LD		HL, tiles_patrones_pantalla11
     100.  00:8140  11 00 00            	LD		DE, CHRTBL
     101.  00:8143  CD 95 85            	CALL	depack_VRAM
     102.  00:8146                      	;cargamos mapa de pantalla
     103.  00:8146  21 71 8D            	LD		HL, tiles_mapa_pantalla11
     104.  00:8149  11 00 18            	LD		DE, TILMAP
     105.  00:814C  CD 95 85            	CALL	depack_VRAM
     106.  00:814F                      	;cargamos los colores de los patrones
     107.  00:814F  21 59 8D            	LD		HL, tiles_color_pantalla11
     108.  00:8152  11 00 20            	LD		DE, CLRTBL
     109.  00:8155  CD 95 85            	CALL	depack_VRAM
     110.  00:8158                      	
     111.  00:8158                      	;cangando banco 2
     112.  00:8158                      	;cargamos los patrones
     113.  00:8158  21 36 8D            	LD		HL, tiles_patrones_pantalla12
     114.  00:815B  11 00 08            	LD		DE, CHRTBL + #0800
     115.  00:815E  CD 95 85            	CALL	depack_VRAM	
     116.  00:8161                      	;cargamos mapa de pantalla
     117.  00:8161  21 8B 8D            	LD		HL, tiles_mapa_pantalla12
     118.  00:8164  11 00 19            	LD		DE, TILMAP + #0100
     119.  00:8167  CD 95 85            	CALL	depack_VRAM
     120.  00:816A                      	;cargamos los colores de los patrones
     121.  00:816A  21 59 8D            	LD		HL, tiles_color_pantalla12
     122.  00:816D  11 00 28            	LD		DE, CLRTBL + #0800
     123.  00:8170                      	;JP		depack_VRAM
     124.  00:8170  CD 95 85            	CALL	depack_VRAM
     125.  00:8173                      fin_pinta_parte_superior_pantalla:
     126.  00:8173  C9                  	RET
     127.  00:8174                      
     128.  00:8174                      
     129.  00:8174                      ;;=====================================================
     130.  00:8174                      ;;PINTA_PARTE_INFERIOR_PANTALLA
     131.  00:8174                      ;;=====================================================	
     132.  00:8174                      ; función: pinta la parte inferior del escenario que es común
     133.  00:8174                      ; entrada: -
     134.  00:8174                      ; salida: -
     135.  00:8174                      ; toca: si no son todos los regristros, casi todos
     136.  00:8174                      pinta_parte_inferior_pantalla:
     137.  00:8174                      	;cangando banco 3
     138.  00:8174                      	;cargamos los patrones
     139.  00:8174  21 B5 8D            	LD		HL,tiles_patrones_pantalla3
     140.  00:8177  11 00 10            	LD		DE,CHRTBL + #1000
     141.  00:817A  CD 95 85            	CALL	depack_VRAM	
     142.  00:817D                      	;cargamos mapa de pantalla
     143.  00:817D  21 30 8F            	LD		HL,tiles_mapa_pantalla3
     144.  00:8180  11 00 1A            	LD		DE,TILMAP + #0200
     145.  00:8183  CD 95 85            	CALL	depack_VRAM
     146.  00:8186                      	;cargamos los colores de los patrones
     147.  00:8186  21 FB 8E            	LD		HL,tiles_color_pantalla3
     148.  00:8189  11 00 30            	LD		DE,CLRTBL + #1000
     149.  00:818C  C3 95 85            	JP		depack_VRAM
     150.  00:818F                      	;~ CALL	depack_VRAM
     151.  00:818F                      fin_pinta_parte_inferior_pantalla:
     152.  00:818F                      	;~ RET
     153.  00:818F                      
     154.  00:818F                      
     155.  00:818F                      
     156.  00:818F                      ;;=====================================================
     157.  00:818F                      ;;PINTA_VIDAS
     158.  00:818F                      ;;=====================================================	
     159.  00:818F                      ; función: 	actualiza el mapa de tiles para que en el próximo refresco se pinten y actualiza_vidas
     160.  00:818F                      ; entrada: 	array_aux_vidas
     161.  00:818F                      ; salida: 	actualiza_vidas_sn
     162.  00:818F                      ; toca:		todo
     163.  00:818F                      pinta_vidas:
     164.  00:818F  CD 8C 80            	CALL	actualiza_marcador_vidas
     165.  00:8192                      	
     166.  00:8192  21 C6 8B            	LD		HL, array_aux_vidas
     167.  00:8195  11 48 1A            	LD		DE, TILMAP + POSVIDAS 	;inicio posición en el mapa de tiles de las vidas
     168.  00:8198  01 08 00            	LD		BC, NMAXVIDREL			;hay 8 posiciones para vidas/reliquias o espacios en negro si no tiene 8 vidas/reliquias
     169.  00:819B  C3 5C 00            	JP		LDIRVM
     170.  00:819E                      fin_pinta_vidas:
     171.  00:819E                      	;RET
     172.  00:819E                      	
     173.  00:819E                      	
     174.  00:819E                      
     175.  00:819E                      ;;=====================================================
     176.  00:819E                      ;;PINTA_RELIQUIAS
     177.  00:819E                      ;;=====================================================	
     178.  00:819E                      ; función: 	actualiza el mapa de tiles para que en el próximo refresco se pinten y actualiza_reliquias
     179.  00:819E                      ; entrada: 	array_aux_reliquias
     180.  00:819E                      ; salida: 	-
     181.  00:819E                      ; toca:		todo
     182.  00:819E                      pinta_reliquias:
     183.  00:819E  CD A5 80            	CALL	actualiza_buffer_reliquias
     184.  00:81A1                      	
     185.  00:81A1  21 CE 8B            	LD		HL, array_aux_reliquias
     186.  00:81A4  11 C8 1A            	LD		DE, TILMAP + POSRELIQ 	;inicio posición en el mapa de tiles de las vidas
     187.  00:81A7  01 08 00            	LD		BC, NMAXVIDREL			;hay 8 posiciones para vidas/reliquias o espacios en negro si no tiene 8 vidas/reliquias
     188.  00:81AA  C3 5C 00            	JP		LDIRVM
     189.  00:81AD                      fin_pinta_reliquias:
     190.  00:81AD                      	;RET
     191.  00:81AD                      	
     192.  00:81AD                      
     193.  00:81AD                      
     194.  00:81AD                      	
     195.  00:81AD                      ;;=====================================================
     196.  00:81AD                      ;;PINTA_NIVEL
     197.  00:81AD                      ;;=====================================================	
     198.  00:81AD                      ; función: 	actualiza el nivel en la parte de puntuación
     199.  00:81AD                      ; entrada: 	prota_nivel
     200.  00:81AD                      ; salida: 	-
     201.  00:81AD                      ; toca:		HL,DE,BC
     202.  00:81AD                      pinta_nivel:	
     203.  00:81AD                      	;forma más avanzada sin llamada a la bios
     204.  00:81AD  01 B4 1A            	LD		BC,TILMAP + POSNIVEL ;posición en el mapa de tiles del tile de nivel
     205.  00:81B0  3A 75 86            	LD		 A, (prota_nivel)	;seleccionando la pos del banco de tiles a poner en el mapa
     206.  00:81B3  C6 30               	ADD		'0'	
     207.  00:81B5  57                  	LD		 D, A
     208.  00:81B6                      	
     209.  00:81B6  CD BA 81            	CALL	pinta_tile_suelto	;nota ... un call+ret se debe poder sustiruir por un jp
     210.  00:81B9                      fin_pinta_nivel:
     211.  00:81B9  C9                  	RET
     212.  00:81BA                      
     213.  00:81BA                      
     214.  00:81BA                      
     215.  00:81BA                      ;;=====================================================
     216.  00:81BA                      ;;PINTA_TILE_SUELTO
     217.  00:81BA                      ;;=====================================================	
     218.  00:81BA                      ; función: 	pinta al tile que digamos en D, en la posición BC
     219.  00:81BA                      ; entrada: 	BC (posición a pintar en el mapa),D (qué se va a pintar el esa posición)
     220.  00:81BA                      ; salida: 	-
     221.  00:81BA                      ; toca:		-
     222.  00:81BA                      pinta_tile_suelto:
     223.  00:81BA  DB 99               	IN		 A,(REGEST)		;leer registro de estado (recomendado)
     224.  00:81BC  79                  	LD		 A,C			;primero byte bajo	
     225.  00:81BD  D3 99               	OUT		(REGEST),A
     226.  00:81BF  78                  	LD		 A,B			;después byte alto  ********************** preguntar a Fernando cómo que byte bajo es B
     227.  00:81C0  F6 40               	OR		1000000b		;+64
     228.  00:81C2  D3 99               	OUT		(REGEST),A
     229.  00:81C4                      	
     230.  00:81C4  7A                  	LD		A,D
     231.  00:81C5  D3 98               	OUT		(REGESCVDP),A	;escribe A en VRAM en la posición indicada por los dos OUT anteriores
     232.  00:81C7                      fin_pinta_tile_suelto:
     233.  00:81C7  C9                  	RET
     234.  00:81C8                      
     235.  00:81C8                      
     236.  00:81C8                      
     237.  00:81C8                      
     238.  00:81C8                      
     239.  00:81C8                      ;;=====================================================
     240.  00:81C8                      ;;MIRA_PINTA ENERGIA
     241.  00:81C8                      ;;=====================================================	
     242.  00:81C8                      ; función: 	actualiza el nivel de energia en la parte de puntuación
     243.  00:81C8                      ; nota:		el cuadrado más bajo de ejergía siempre estará pintado... se obviará
     244.  00:81C8                      ; entrada: 	prota.energia, array_aux_energia
     245.  00:81C8                      ; salida: 	-
     246.  00:81C8                      ; toca:		ninguno porque usa EXX
     247.  00:81C8                      
     248.  00:81C8                      ; nota importante... lo mismo interesa hacer esto con un array para comparar y un bucle
     249.  00:81C8                      
     250.  00:81C8                      
     251.  00:81C8                      mira_pinta_energia:
     252.  00:81C8  D9                  	EXX							;por si acaso guardo el contenido de HL (si veo que no es necesario guardarlo lo quito) uso esto en vez de push por el nº ciclos
     253.  00:81C9                      	
     254.  00:81C9  3A 7A 86            	LD		 A,(prota_energia) 	;para las comparaciones A variable (actual) y B fijo (limites)
     255.  00:81CC                      
     256.  00:81CC  0E 00               	LD		 C,TILENEGRO		;para agilizar asignaciones en vez de un valor cte uso otro registro
     257.  00:81CE                      pinta_ener:
     258.  00:81CE                      pinta_ener_tile_8:
     259.  00:81CE  21 DD 8B            	LD		HL,ultimo_pos_array_aux_energia	;coloco puntero en array e iré decrementando
     260.  00:81D1  06 D9               	LD		 B,TILEENERG8
     261.  00:81D3  B8                  	CP		 B
     262.  00:81D4  38 04               	JR		C,pinta_ener_tile_8_negro
     263.  00:81D6  36 0E               	LD		(HL),TILEMAPVERD
     264.  00:81D8  18 01               	JR		pinta_ener_tile_7
     265.  00:81DA                      pinta_ener_tile_8_negro:
     266.  00:81DA  71                  	LD		(HL),C
     267.  00:81DB                      
     268.  00:81DB                      pinta_ener_tile_7:
     269.  00:81DB  2B                  	DEC		HL
     270.  00:81DC  06 BA               	LD		 B,TILEENERG7
     271.  00:81DE  B8                  	CP		 B
     272.  00:81DF  38 04               	JR		C,pinta_ener_tile_7_negro
     273.  00:81E1  36 0E               	LD		(HL),TILEMAPVERD
     274.  00:81E3  18 01               	JR		pinta_ener_tile_6
     275.  00:81E5                      pinta_ener_tile_7_negro:
     276.  00:81E5  71                  	LD		(HL),C
     277.  00:81E6                      
     278.  00:81E6                      pinta_ener_tile_6:
     279.  00:81E6  2B                  	DEC		HL
     280.  00:81E7  06 9B               	LD		 B,TILEENERG6
     281.  00:81E9  B8                  	CP		 B
     282.  00:81EA  38 04               	JR		C,pinta_ener_tile_6_negro
     283.  00:81EC  36 0E               	LD		(HL),14
     284.  00:81EE  18 01               	JR		pinta_ener_tile_5
     285.  00:81F0                      pinta_ener_tile_6_negro:
     286.  00:81F0  71                  	LD		(HL),C
     287.  00:81F1                      
     288.  00:81F1                      pinta_ener_tile_5:
     289.  00:81F1  2B                  	DEC		HL
     290.  00:81F2  06 7C               	LD		 B,TILEENERG5
     291.  00:81F4  B8                  	CP		 B
     292.  00:81F5  38 04               	JR		C,pinta_ener_tile_5_negro
     293.  00:81F7  36 0E               	LD		(HL),TILEMAPVERD
     294.  00:81F9  18 01               	JR		pinta_ener_tile_4
     295.  00:81FB                      pinta_ener_tile_5_negro:
     296.  00:81FB  71                  	LD		(HL),C
     297.  00:81FC                      
     298.  00:81FC                      pinta_ener_tile_4:
     299.  00:81FC  2B                  	DEC		HL
     300.  00:81FD  06 5D               	LD		 B,TILEENERG4
     301.  00:81FF  B8                  	CP		 B
     302.  00:8200  38 04               	JR		C,pinta_ener_tile_4_negro
     303.  00:8202  36 0F               	LD		(HL),TILEMAPAMAR
     304.  00:8204  18 01               	JR		pinta_ener_tile_3
     305.  00:8206                      pinta_ener_tile_4_negro:
     306.  00:8206  71                  	LD		(HL),C
     307.  00:8207                      	
     308.  00:8207                      pinta_ener_tile_3:
     309.  00:8207  2B                  	DEC		HL
     310.  00:8208  06 3E               	LD		 B,TILEENERG3
     311.  00:820A  B8                  	CP		 B
     312.  00:820B  38 04               	JR		C,pinta_ener_tile_3_negro
     313.  00:820D  36 0F               	LD		(HL),TILEMAPAMAR
     314.  00:820F  18 01               	JR		pinta_ener_tile_2
     315.  00:8211                      pinta_ener_tile_3_negro:
     316.  00:8211  71                  	LD		(HL),C
     317.  00:8212                      
     318.  00:8212                      pinta_ener_tile_2:
     319.  00:8212  2B                  	DEC		HL
     320.  00:8213  06 1F               	LD		 B,TILEENERG2
     321.  00:8215  B8                  	CP		 B
     322.  00:8216  38 04               	JR		C,pinta_ener_tile_2_negro
     323.  00:8218  36 10               	LD		(HL),TILEMAPROJO
     324.  00:821A  18 01               	JR		fin_mira_pinta_energia		;siempre estará pintado el cuadro mínimo
     325.  00:821C                      pinta_ener_tile_2_negro:
     326.  00:821C  71                  	LD		(HL),C
     327.  00:821D                      
     328.  00:821D                      fin_mira_pinta_energia:
     329.  00:821D  D9                  	EXX
     330.  00:821E  C9                  	RET
     331.  00:821F                      
     332.  00:821F                      
     333.  00:821F                      ;;=====================================================
     334.  00:821F                      ;;PINTA_ENERGIA
     335.  00:821F                      ;;=====================================================	
     336.  00:821F                      ; función: 	actualiza el mapa de tiles para que en el próximo refresco se pinte la barra de energia actual
     337.  00:821F                      ; entrada: 	array_aux_energia
     338.  00:821F                      ; toca:		todo
     339.  00:821F                      pinta_energia:
     340.  00:821F  CD C8 81            	CALL	mira_pinta_energia
     341.  00:8222                      	
     342.  00:8222  21 D6 8B            	LD		HL, array_aux_energia
     343.  00:8225  11 88 1A            	LD		DE, TILMAP + POSENERG 	;inicio posición en el mapa de tiles de las vidas
     344.  00:8228  01 08 00            	LD		BC, NMAXVIDREL			;hay 8 posiciones para vidas/reliquias o espacios en negro si no tiene 8 vidas/reliquias
     345.  00:822B  C3 5C 00            	JP		LDIRVM
     346.  00:822E                      fin_pinta_energia:
     347.  00:822E                      	;RET
     348.  00:822E                      
     349.  00:822E                      
     350.  00:822E                      
     351.  00:822E                      ;;=====================================================
     352.  00:822E                      ;;BORRA_MAPA
     353.  00:822E                      ;;=====================================================	
     354.  00:822E                      ; función: 	pone todas las habitaciones del mapa a negro (los tiles del mapa los rellena con un array a 0 - caracter en negro)
     355.  00:822E                      ; entrada: 	array_aux_mapa_limpiar
     356.  00:822E                      ; salida: 	-
     357.  00:822E                      ; toca:		AF
     358.  00:822E                      borra_mapa:
     359.  00:822E  D9                  	EXX
     360.  00:822F                      	
     361.  00:822F  21 DE 8B            	LD		HL,array_aux_mapa_limpiar
     362.  00:8232  11 F8 1A            	LD		DE,TILMAP + POSMAPLIN1 	;inicio posición en el mapa de tiles de la primera fila del mapa
     363.  00:8235  01 07 00            	LD		BC,NHABNIVEL			;cada nivel son 7 filas con 7 habitaciones "posibles"
     364.  00:8238  CD 5C 00            	CALL	LDIRVM
     365.  00:823B                      	
     366.  00:823B  21 DE 8B            	LD		HL,array_aux_mapa_limpiar
     367.  00:823E  11 D8 1A            	LD		DE,TILMAP + POSMAPLIN2
     368.  00:8241  01 07 00            	LD		BC,NHABNIVEL
     369.  00:8244  CD 5C 00            	CALL	LDIRVM
     370.  00:8247                      
     371.  00:8247  21 DE 8B            	LD		HL,array_aux_mapa_limpiar
     372.  00:824A  11 B8 1A            	LD		DE,TILMAP + POSMAPLIN3
     373.  00:824D  01 07 00            	LD		BC,NHABNIVEL
     374.  00:8250  CD 5C 00            	CALL	LDIRVM
     375.  00:8253                      
     376.  00:8253  21 DE 8B            	LD		HL,array_aux_mapa_limpiar	
     377.  00:8256  11 98 1A            	LD		DE,TILMAP + POSMAPLIN4
     378.  00:8259  01 07 00            	LD		BC,NHABNIVEL
     379.  00:825C  CD 5C 00            	CALL	LDIRVM
     380.  00:825F                      
     381.  00:825F  21 DE 8B            	LD		HL,array_aux_mapa_limpiar	
     382.  00:8262  11 78 1A            	LD		DE,TILMAP + POSMAPLIN5
     383.  00:8265  01 07 00            	LD		BC,NHABNIVEL
     384.  00:8268  CD 5C 00            	CALL	LDIRVM
     385.  00:826B                      
     386.  00:826B  21 DE 8B            	LD		HL,array_aux_mapa_limpiar	
     387.  00:826E  11 58 1A            	LD		DE,TILMAP + POSMAPLIN6
     388.  00:8271  01 07 00            	LD		BC,NHABNIVEL
     389.  00:8274  CD 5C 00            	CALL	LDIRVM
     390.  00:8277                      
     391.  00:8277  21 DE 8B            	LD		HL,array_aux_mapa_limpiar	
     392.  00:827A  11 38 1A            	LD		DE,TILMAP + POSMAPLIN7
     393.  00:827D  01 07 00            	LD		BC,NHABNIVEL
     394.  00:8280  CD 5C 00            	CALL	LDIRVM
     395.  00:8283                      	
     396.  00:8283  D9                  	EXX
     397.  00:8284                      fin_borra_mapa:
     398.  00:8284  C9                  	RET
     399.  00:8285                      
     400.  00:8285                      
     401.  00:8285                      
     402.  00:8285                      
     403.  00:8285                      
     404.  00:8285                      
     405.  00:8285                      
     406.  00:8285                      
     407.  00:8285                      
     408.  00:8285                      ;=====================================================
     409.  00:8285                      ;;PINTA_ARRAY
     410.  00:8285                      ;;=====================================================	
     411.  00:8285                      ;;;funcion:  se le pasa un array con posiciones de tiles y coordenadas x e y y los pinta en screen 2
     412.  00:8285                      ;;entrada:	wordaux1 (pos inicio sc2 donde pintar) y wordaux2 (puntero al array a pintar), BC (posición en tilemap) , D filas y E columnas
     413.  00:8285                      ;;salida:	-
     414.  00:8285                      ;;importante: necesita de una variable wordaux1 tipo WD (wordaux1: 	DW	0)
     415.  00:8285                      ;; ejemplo llamada:
     416.  00:8285                      	;~ LD		HL,array_tiles					;guardo puntero al array a pintar (como psar por referencia)
     417.  00:8285                      	;~ LD		(wordaux2),HL					;en la variable wordaux2
     418.  00:8285                      	;~ LD		HL,SC2MAP + 256 + 32			;calcula posición en tilemap
     419.  00:8285                      	;~ LD		(wordaux1),HL					;guarda valor pos tilemap en wordaux1
     420.  00:8285                      	;~ LD		B,H								;coloca posición tilemap BC
     421.  00:8285                      	;~ LD		C,L
     422.  00:8285                      	;~ LD		D,2								;nº de filas
     423.  00:8285                      	;~ LD		E,3								;nº de columnas
     424.  00:8285                      	;~ CALL	pinta_array
     425.  00:8285                      
     426.  00:8285                      pinta_array:
     427.  00:8285  F5                  	PUSH	AF
     428.  00:8286                      	
     429.  00:8286                      	;contamos con que la posición "global" en el tilemap está ya en BC
     430.  00:8286                      	;y el puntero al array a pintar en wordaux2 y la posición en tilemap sc2 en wordaux1
     431.  00:8286                      	;inicializa
     432.  00:8286  DB 99               	IN		 A,(REGEST)		;leer registro de estado (recomendado)
     433.  00:8288                      	
     434.  00:8288                      	;coloca puntero para pintar tile según BC
     435.  00:8288  79                  	LD		 A,C			;primero byte bajo	
     436.  00:8289  D3 99               	OUT		(REGEST),A
     437.  00:828B  78                  	LD		 A,B			;después byte alto  ********************** preguntar a Fernando cómo que byte bajo es B
     438.  00:828C  F6 40               	OR		1000000b		;+64
     439.  00:828E  D3 99               	OUT		(REGEST),A
     440.  00:8290                      
     441.  00:8290                      	
     442.  00:8290  2A BA 82            	LD		HL,(wordaux2)	;HL es lo que se pintará y le he pasado el puntero del array tilemap a pintar
     443.  00:8293                      .pa_pinta_fila:
     444.  00:8293  43                  	LD		 B,E
     445.  00:8294                      .pa_pinta_columnas: 		;finta la fila (pintando las columnas)
     446.  00:8294  7E                  	LD		 A,(HL)
     447.  00:8295  D3 98               	OUT		(REGESCVDP),A	;escribe A en VRAM en la posición indicada por los dos OUT anteriores
     448.  00:8297  23                  	INC		HL
     449.  00:8298  10 FA               	DJNZ	.pa_pinta_columnas
     450.  00:829A                      	
     451.  00:829A                      	;no es una solución elegante lo de repetir código pero queda claro
     452.  00:829A                      	;por si hay otra fila
     453.  00:829A  E5                  	PUSH	HL
     454.  00:829B  2A B8 82            	LD		HL,(wordaux1)
     455.  00:829E  01 20 00            	LD		BC,32
     456.  00:82A1  09                  	ADD		HL,BC
     457.  00:82A2  22 B8 82            	LD		(wordaux1),HL
     458.  00:82A5  44                  	LD		B,H
     459.  00:82A6  4D                  	LD		C,L
     460.  00:82A7  E1                  	POP		HL
     461.  00:82A8                      	
     462.  00:82A8  79                  	LD		 A,C			;primero byte bajo	
     463.  00:82A9  D3 99               	OUT		(REGEST),A
     464.  00:82AB  78                  	LD		 A,B			;después byte alto 
     465.  00:82AC  F6 40               	OR		1000000b		;+64
     466.  00:82AE  D3 99               	OUT		(REGEST),A
     467.  00:82B0                      	
     468.  00:82B0                      	;si hay otra fila repite
     469.  00:82B0  15                  	DEC		 D
     470.  00:82B1  7A                  	LD		 A,D		;¿hay otra fila?
     471.  00:82B2  B7                  	OR		 A
     472.  00:82B3  C2 93 82            	JP		NZ,.pa_pinta_fila
     473.  00:82B6                      	
     474.  00:82B6  F1                  	POP		AF
     475.  00:82B7                      	
     476.  00:82B7                      fin_pinta_array:
     477.  00:82B7  C9                  	RET
     478.  00:82B8                      ;;variables asocidas a la función (no sé si dejarlo aquí y encapsularlo todo o hacerla reutilizable)
     479.  00:82B8                      ;; por de pronto la dejo aquí
     480.  00:82B8  00 00               wordaux1:		DW	0	;almacena la posición en el tilemap 0 al 675
     481.  00:82BA  00 00               wordaux2:		DW	0	;almacena puntero a array de tiles (posiciones en realidad) a pintar (posiciones repetidas en los 3 bancos)
     482.  00:82BC                      
     483.  00:82BC                      
     484.  00:82BC                      
     485.  00:82BC                      
     486.  00:82BC                      
     487.  00:82BC                      ;;=====================================================
     488.  00:82BC                      ;;PINTA_PUERTAS
     489.  00:82BC                      ;;=====================================================	
     490.  00:82BC                      ; función: 	examina A y mira si tiene que pintar puertas de los lados, arriba o abrajo o las escaleras (o no)
     491.  00:82BC                      ; entrada: 	habitacion_actual 1 escalera 1 puerta arriba 1 pu der 1 pu aba 1 pu izq (si es 0 pinta pared)
     492.  00:82BC                      ; salida: 	-
     493.  00:82BC                      ; toca:		todo
     494.  00:82BC                      pinta_puertas:
     495.  00:82BC  CD 3D 81            	CALL	pinta_parte_superior_pantalla
     496.  00:82BF                      	
     497.  00:82BF  3A 9B 88            	LD		 A, (habitacion_actual)		;se mete en A porque la función pide A y para no buscar el valor 4 veces
     498.  00:82C2                      
     499.  00:82C2                      ;	BIT		 4, A
     500.  00:82C2                      ;	CALL	nz, pinta_escalera
     501.  00:82C2                      
     502.  00:82C2  CB 5F               	BIT		 3, A
     503.  00:82C4  C4 F0 82            	CALL	nz, pinta_puerta_arr
     504.  00:82C7                      
     505.  00:82C7  CB 57               	BIT		 2, A
     506.  00:82C9  C4 05 83            	CALL	nz, pinta_puerta_der
     507.  00:82CC                      
     508.  00:82CC  CB 4F               	BIT		 1, A
     509.  00:82CE  C4 DB 82            	CALL	nz, pinta_puerta_aba
     510.  00:82D1                      	
     511.  00:82D1  CB 47               	BIT		 0, A
     512.  00:82D3  C4 1A 83            	CALL	nz, pinta_puerta_izq
     513.  00:82D6                      	
     514.  00:82D6  AF                  	XOR		 A
     515.  00:82D7  32 E5 8B            	LD		(actualiza_puertas_sn), A ;(1 actualiza y 0 no actualiza puertas) se pone a 0 para que no actualice todo el tiempo (ya se ha actualizado)... me hubiera gustado poner cte NO pero es más rápido así
     516.  00:82DA                      fin_pinta_puertas:
     517.  00:82DA  C9                  	RET
     518.  00:82DB                      
     519.  00:82DB                      
     520.  00:82DB                      
     521.  00:82DB                      
     522.  00:82DB                      ;;=====================================================
     523.  00:82DB                      ;;PINTA_PUERTA_ABA
     524.  00:82DB                      ;;=====================================================	
     525.  00:82DB                      ; función: 	pinta la puerta de abajo
     526.  00:82DB                      ; entrada: 	array_puerta_abajo, wordaux2, wordaux1
     527.  00:82DB                      ; salida: 	-
     528.  00:82DB                      ; toca:		HL,BC, DE
     529.  00:82DB                      pinta_puerta_aba:
     530.  00:82DB  21 0F 8C            	LD		HL,array_puerta_abajo			;guardo puntero al array a pintar (como psar por referencia)
     531.  00:82DE  22 BA 82            	LD		(wordaux2),HL					;en la variable wordaux2
     532.  00:82E1  21 EE 19            	LD		HL,TILMAP + POSPUERABAJ			;calcula posición en tilemap
     533.  00:82E4  22 B8 82            	LD		(wordaux1),HL					;guarda valor pos tilemap en wordaux1
     534.  00:82E7  44                  	LD		B,H								;coloca posición tilemap BC
     535.  00:82E8  4D                  	LD		C,L
     536.  00:82E9  16 01               	LD		D,1								;nº de filas
     537.  00:82EB  1E 04               	LD		E,4								;nº de columnas
     538.  00:82ED  C3 85 82            	JP		pinta_array
     539.  00:82F0                      	;~ CALL	pinta_array
     540.  00:82F0                      fin_pinta_puerta_aba:
     541.  00:82F0                      	;~ RET
     542.  00:82F0                      
     543.  00:82F0                      ;;=====================================================
     544.  00:82F0                      ;;PINTA_PUERTA_ARR
     545.  00:82F0                      ;;=====================================================	
     546.  00:82F0                      ; función: 	pinta la puerta de arriba
     547.  00:82F0                      ; entrada: 	array_puerta_arriba, wordaux2, wordaux1
     548.  00:82F0                      ; salida: 	-
     549.  00:82F0                      ; toca:		HL,BC, DE
     550.  00:82F0                      pinta_puerta_arr:
     551.  00:82F0  21 E6 8B            	LD		HL,array_puerta_arriba			;guardo puntero al array a pintar (como psar por referencia)
     552.  00:82F3  22 BA 82            	LD		(wordaux2),HL					;en la variable wordaux2
     553.  00:82F6  21 8E 18            	LD		HL,TILMAP + POSPUERARRI			;calcula posición en tilemap
     554.  00:82F9  22 B8 82            	LD		(wordaux1),HL					;guarda valor pos tilemap en wordaux1
     555.  00:82FC  44                  	LD		B,H								;coloca posición tilemap BC
     556.  00:82FD  4D                  	LD		C,L
     557.  00:82FE  16 05               	LD		D,5								;nº de filas
     558.  00:8300  1E 04               	LD		E,4								;nº de columnas
     559.  00:8302  C3 85 82            	JP		pinta_array
     560.  00:8305                      	;~ CALL	pinta_array
     561.  00:8305                      fin_pinta_puerta_arr:
     562.  00:8305                      	;~ RET
     563.  00:8305                      
     564.  00:8305                      ;;=====================================================
     565.  00:8305                      ;;PINTA_PUERTA_DER
     566.  00:8305                      ;;=====================================================	
     567.  00:8305                      ; función: 	pinta la puerta de la derecha
     568.  00:8305                      ; entrada: 	array_puerta_derecha, wordaux2, wordaux1
     569.  00:8305                      ; salida: 	-
     570.  00:8305                      ; toca:		HL,BC, DE
     571.  00:8305                      pinta_puerta_der:
     572.  00:8305  21 FA 8B            	LD		HL,array_puerta_derecha			;guardo puntero al array a pintar (como psar por referencia)
     573.  00:8308  22 BA 82            	LD		(wordaux2),HL					;en la variable wordaux2
     574.  00:830B  21 FC 18            	LD		HL,TILMAP + POSPUERDERE			;calcula posición en tilemap
     575.  00:830E  22 B8 82            	LD		(wordaux1),HL					;guarda valor pos tilemap en wordaux1
     576.  00:8311  44                  	LD		B,H								;coloca posición tilemap BC
     577.  00:8312  4D                  	LD		C,L
     578.  00:8313  16 07               	LD		D,7								;nº de filas
     579.  00:8315  1E 03               	LD		E,3								;nº de columnas
     580.  00:8317  C3 85 82            	JP		pinta_array
     581.  00:831A                      	;~ CALL	pinta_array
     582.  00:831A                      fin_pinta_puerta_der:
     583.  00:831A                      	;~ RET
     584.  00:831A                      	
     585.  00:831A                      ;;=====================================================
     586.  00:831A                      ;;PINTA_PUERTA_IZQ
     587.  00:831A                      ;;=====================================================	
     588.  00:831A                      ; función: 	pinta la puerta de la izquierda
     589.  00:831A                      ; entrada: 	array_puerta_izquierda, wordaux2, wordaux1
     590.  00:831A                      ; salida: 	-
     591.  00:831A                      ; toca:		HL,BC, DE
     592.  00:831A                      pinta_puerta_izq:
     593.  00:831A  21 13 8C            	LD		HL,array_puerta_izquierda		;guardo puntero al array a pintar (como psar por referencia)
     594.  00:831D  22 BA 82            	LD		(wordaux2),HL					;en la variable wordaux2
     595.  00:8320  21 E1 18            	LD		HL,TILMAP + POSPUERIZQU			;calcula posición en tilemap
     596.  00:8323  22 B8 82            	LD		(wordaux1),HL					;guarda valor pos tilemap en wordaux1
     597.  00:8326  44                  	LD		B,H								;coloca posición tilemap BC
     598.  00:8327  4D                  	LD		C,L
     599.  00:8328  16 07               	LD		D,7								;nº de filas
     600.  00:832A  1E 03               	LD		E,3								;nº de columnas
     601.  00:832C  C3 85 82            	JP		pinta_array
     602.  00:832F                      	;~ CALL	pinta_array
     603.  00:832F                      fin_pinta_puerta_izq:
     604.  00:832F                      	;~ RET
     605.  00:832F                      
     606.  00:832F                      
     607.  00:832F                      
     608.  00:832F                      
     609.  00:832F                      
     610.  00:832F                      ;;=====================================================
     611.  00:832F                      ;;POSICIONA_EN_MAPA
     612.  00:832F                      ;;=====================================================	
     613.  00:832F                      ; función: 	en el mapa de marcadores de la derecha/abajo marca un cuadro en gris o con un muñeco
     614.  00:832F                      ;			según el valor de prota.posición pinta entrá un muñeco y por donde vaya pasando el prota
     615.  00:832F                      ;			quedará en gris
     616.  00:832F                      ; entrada: 	A=0 gris 1 - tile 0, A=1 muñeco - tile 19, prota.pos_mapy,prota.pos_mapx)
     617.  00:832F                      ; salida: 	-
     618.  00:832F                      ; toca:		todos
     619.  00:832F                      posiciona_en_mapa:
     620.  00:832F  F5                  	PUSH	AF		;almacenamos el tipo a pintar para cuando terminemos de calcular la coordenada
     621.  00:8330                      	
     622.  00:8330                      	;#0238 es la posición en mapa de tiles de la esquina superior izquierda del mapa (569 en decimal)
     623.  00:8330  21 38 1A            	LD		HL, TILMAP + POSMAPA;pos inicial
     624.  00:8333                      	
     625.  00:8333                      	;ahora se le calcula la fila a pintar ya que va de abajo a arriba y no como en el mapa + columna
     626.  00:8333                      .sumar_fila:
     627.  00:8333  3A 79 86            	LD		 A,(prota_pos_mapy)
     628.  00:8336  FE 01               	CP		 1
     629.  00:8338  28 2A               	JR		 Z, .fila_1
     630.  00:833A  3A 79 86            	LD		 A,(prota_pos_mapy)
     631.  00:833D  FE 02               	CP		 2
     632.  00:833F  28 2A               	JR		 Z, .fila_2
     633.  00:8341  3A 79 86            	LD		 A,(prota_pos_mapy)
     634.  00:8344  FE 03               	CP		 3
     635.  00:8346  28 2A               	JR		 Z, .fila_3
     636.  00:8348  3A 79 86            	LD		 A,(prota_pos_mapy)
     637.  00:834B  FE 04               	CP		 4
     638.  00:834D  28 2A               	JR		 Z, .fila_4
     639.  00:834F  3A 79 86            	LD		 A,(prota_pos_mapy)
     640.  00:8352  FE 05               	CP		 5
     641.  00:8354  28 2A               	JR		 Z, .fila_5
     642.  00:8356  3A 79 86            	LD		 A,(prota_pos_mapy)
     643.  00:8359  FE 06               	CP		 6
     644.  00:835B  28 2A               	JR		 Z, .sumar_columna
     645.  00:835D                      	;no consulto la 0 porque si no es ninguna de las anteriores es 0 y por tanto sería un jr fila_0
     646.  00:835D                      	
     647.  00:835D                      .fila_0:
     648.  00:835D  11 C0 00            	LD		DE, 192
     649.  00:8360  19                  	ADD		HL, DE			;nota: se que repito el ADD pero la otra opción es inicializar DE y ya tarda mucho la funicón (es por velicidad)
     650.  00:8361  C3 87 83            	JP		.sumar_columna
     651.  00:8364                      .fila_1:
     652.  00:8364  11 A0 00            	LD		DE, 160
     653.  00:8367  19                  	ADD		HL, DE
     654.  00:8368  C3 87 83            	JP		.sumar_columna
     655.  00:836B                      .fila_2:
     656.  00:836B  11 80 00            	LD		DE, 128
     657.  00:836E  19                  	ADD		HL, DE
     658.  00:836F  C3 87 83            	JP		.sumar_columna
     659.  00:8372                      .fila_3:
     660.  00:8372  11 60 00            	LD		DE, 96
     661.  00:8375  19                  	ADD		HL, DE
     662.  00:8376  C3 87 83            	JP		.sumar_columna
     663.  00:8379                      .fila_4:
     664.  00:8379  11 40 00            	LD		DE, 64
     665.  00:837C  19                  	ADD		HL, DE
     666.  00:837D  C3 87 83            	JP		.sumar_columna
     667.  00:8380                      .fila_5:
     668.  00:8380  11 20 00            	LD		DE, 32
     669.  00:8383  19                  	ADD		HL, DE
     670.  00:8384  C3 87 83            	JP		.sumar_columna
     671.  00:8387                      .fila_6:
     672.  00:8387                      	;pongo fila_6 por poner ya que si es la fila 6 equiv. a primera fila del mapa y por tanto no suma fila
     673.  00:8387                      	
     674.  00:8387                      	
     675.  00:8387                      .sumar_columna:
     676.  00:8387  3A 78 86            	LD 		 A, (prota_pos_mapx) ;POS X
     677.  00:838A  16 00               	LD		 D, 0
     678.  00:838C  5F                  	LD		 E, A
     679.  00:838D  19                  	ADD		HL, DE
     680.  00:838E                      	
     681.  00:838E                      	;resultado en BC para usar en la función pinta_tile_suelto
     682.  00:838E  44                  	LD		 B, H
     683.  00:838F  4D                  	LD		 C, L
     684.  00:8390                      	
     685.  00:8390                      	;terminado de fijar la coordenada recuperamos a para ver el tipo
     686.  00:8390  F1                  	POP		 AF
     687.  00:8391  B7                  	OR		 A
     688.  00:8392  CA 9A 83            	JP		 Z, pinta_pos_mapa_vacio
     689.  00:8395  16 13               	LD		 D, TILEMAPPROT
     690.  00:8397  C3 9C 83            	JP		fin_pinta_pos_mapa
     691.  00:839A                      pinta_pos_mapa_vacio:
     692.  00:839A  16 09               	LD		 D, TILEMAPVACI				;********************* se puede hacer mejor o está bien usar push y pop ¿?¿?¿?
     693.  00:839C                      
     694.  00:839C                      fin_pinta_pos_mapa:
     695.  00:839C  C3 BA 81            	JP		pinta_tile_suelto
     696.  00:839F                      	;~ CALL	pinta_tile_suelto
     697.  00:839F                      fin_posiciona_en_mapa:
     698.  00:839F                      	;~ RET
     699.  00:839F                      
     700.  00:839F                      
     153   00:839F                      	
     154   00:839F                      	include "subr_sprites.asm"
       1.  00:839F                      
       2.  00:839F                      ;;=====================================================
       3.  00:839F                      ;;SUBRUTINAS ENCARGADAS DE MANEJAR LOS SPRITES
       4.  00:839F                      ;;=====================================================	
       5.  00:839F                      
       6.  00:839F                      
       7.  00:839F                      ;; PREGUNTAR SI A FERNANDO SI ES MEJOR USAR LISTAS O ALGO PARA AHORRAR CÓDIGO
       8.  00:839F                      
       9.  00:839F                      
      10.  00:839F                      ;;=====================================================
      11.  00:839F                      ;;CARGA_PATRONES_SPRITES_NIVEL1
      12.  00:839F                      ;;=====================================================	
      13.  00:839F                      ; función: 	copia los patrones de los sprites que e van a usar en el nivel 1 en vram
      14.  00:839F                      ; entrada: 	-
      15.  00:839F                      ; salida: 	-
      16.  00:839F                      ; toca: 	-
      17.  00:839F                      carga_patrones_sprites_nivel1:
      18.  00:839F  F5                  	PUSH	AF					;guardo copia de AF
      19.  00:83A0  D9                  	EXX							;guardo copia de BC,DE y HL
      20.  00:83A1                      	
      21.  00:83A1                      	;sprite punto de mira		(este no será necesario cargarlo en ningún otro nivel del juego, sólo el primero)
      22.  00:83A1  21 7B 86            	LD		HL,sprite_punto_mira_1
      23.  00:83A4  11 00 38            	LD		DE,#3800
      24.  00:83A7  01 20 00            	LD		BC,32				;32 bytes (sprites de 2 x 2)
      25.  00:83AA  CD 5C 00            	CALL	LDIRVM
      26.  00:83AD  21 9B 86            	LD		HL,sprite_punto_mira_2
      27.  00:83B0  11 20 38            	LD		DE,#3820
      28.  00:83B3  01 20 00            	LD		BC,32				;32 bytes (sprites de 2 x 2)
      29.  00:83B6  CD 5C 00            	CALL	LDIRVM
      30.  00:83B9                      	
      31.  00:83B9                      	;sprite sprite_punto_mira_1_mejorado
      32.  00:83B9  21 BB 86            	LD		HL,sprite_punto_mira_1_mejorado
      33.  00:83BC  11 40 38            	LD		DE,#3840
      34.  00:83BF  01 20 00            	LD		BC,32				;32 bytes (sprites de 2 x 2)
      35.  00:83C2  CD 5C 00            	CALL	LDIRVM
      36.  00:83C5  21 DB 86            	LD		HL,sprite_punto_mira_2_mejorado
      37.  00:83C8  11 60 38            	LD		DE,#3860
      38.  00:83CB  01 20 00            	LD		BC,32				;32 bytes (sprites de 2 x 2)
      39.  00:83CE  CD 5C 00            	CALL	LDIRVM
      40.  00:83D1                      
      41.  00:83D1                      	;sprite sprite_reliquia
      42.  00:83D1  21 FB 86            	LD		HL,sprite_reliquia
      43.  00:83D4  11 80 38            	LD		DE,#3880
      44.  00:83D7  01 20 00            	LD		BC,32				;32 bytes (sprites de 2 x 2)
      45.  00:83DA  CD 5C 00            	CALL	LDIRVM
      46.  00:83DD                      
      47.  00:83DD                      	;sprite sprite_vida_extra
      48.  00:83DD  21 FB 86            	LD		HL,sprite_reliquia
      49.  00:83E0  11 A0 38            	LD		DE,#38A0
      50.  00:83E3  01 20 00            	LD		BC,32				;32 bytes (sprites de 2 x 2)
      51.  00:83E6  CD 5C 00            	CALL	LDIRVM
      52.  00:83E9                      
      53.  00:83E9                      	;sprite sprite_planta
      54.  00:83E9  21 3B 87            	LD		HL,sprite_planta
      55.  00:83EC  11 C0 38            	LD		DE,#38C0
      56.  00:83EF  01 20 00            	LD		BC,32				;32 bytes (sprites de 2 x 2)
      57.  00:83F2  CD 5C 00            	CALL	LDIRVM
      58.  00:83F5                      	
      59.  00:83F5                      	;sprite sprite_ballesta_mejorada
      60.  00:83F5  21 5B 87            	LD		HL,sprite_ballesta_mejorada
      61.  00:83F8  11 E0 38            	LD		DE,#38E0
      62.  00:83FB  01 20 00            	LD		BC,32				;32 bytes (sprites de 2 x 2)
      63.  00:83FE  CD 5C 00            	CALL	LDIRVM
      64.  00:8401                      
      65.  00:8401                      	;sprite sprite_ciempies
      66.  00:8401  21 7B 87            	LD		HL,sprite_ciempies1
      67.  00:8404  11 00 39            	LD		DE,#3900
      68.  00:8407  01 20 00            	LD		BC,32				;32 bytes (sprites de 2 x 2)
      69.  00:840A  CD 5C 00            	CALL	LDIRVM
      70.  00:840D  21 9B 87            	LD		HL,sprite_ciempies2
      71.  00:8410  11 20 39            	LD		DE,#3920
      72.  00:8413  01 20 00            	LD		BC,32				;32 bytes (sprites de 2 x 2)
      73.  00:8416  CD 5C 00            	CALL	LDIRVM		
      74.  00:8419                      
      75.  00:8419                      	;sprite sprite_arana
      76.  00:8419  21 BB 87            	LD		HL,sprite_arana1
      77.  00:841C  11 40 39            	LD		DE,#3940
      78.  00:841F  01 20 00            	LD		BC,32				;32 bytes (sprites de 2 x 2)
      79.  00:8422  CD 5C 00            	CALL	LDIRVM
      80.  00:8425  21 DB 87            	LD		HL,sprite_arana2
      81.  00:8428  11 60 39            	LD		DE,#3960
      82.  00:842B  01 20 00            	LD		BC,32				;32 bytes (sprites de 2 x 2)
      83.  00:842E  CD 5C 00            	CALL	LDIRVM	
      84.  00:8431                      
      85.  00:8431                      	;sprite sprite_serpiente
      86.  00:8431  21 FB 87            	LD		HL,sprite_serpiente1
      87.  00:8434  11 80 39            	LD		DE,#3980
      88.  00:8437  01 20 00            	LD		BC,32				;32 bytes (sprites de 2 x 2)
      89.  00:843A  CD 5C 00            	CALL	LDIRVM
      90.  00:843D  21 1B 88            	LD		HL,sprite_serpiente2
      91.  00:8440  11 A0 39            	LD		DE,#39A0
      92.  00:8443  01 20 00            	LD		BC,32				;32 bytes (sprites de 2 x 2)
      93.  00:8446  CD 5C 00            	CALL	LDIRVM	
      94.  00:8449                      
      95.  00:8449                      	;sprite sprite_murcielago
      96.  00:8449  21 3B 88            	LD		HL,sprite_murcielago1
      97.  00:844C  11 C0 39            	LD		DE,#39C0
      98.  00:844F  01 20 00            	LD		BC,32				;32 bytes (sprites de 2 x 2)
      99.  00:8452  CD 5C 00            	CALL	LDIRVM
     100.  00:8455  21 5B 88            	LD		HL,sprite_murcielago2
     101.  00:8458  11 E0 39            	LD		DE,#39E0
     102.  00:845B  01 20 00            	LD		BC,32				;32 bytes (sprites de 2 x 2)
     103.  00:845E  CD 5C 00            	CALL	LDIRVM
     104.  00:8461                      	
     105.  00:8461                      	;sprite sprite_explosion
     106.  00:8461  21 7B 88            	LD		HL,sprite_explosion
     107.  00:8464  11 20 3A            	LD		DE,#3A20
     108.  00:8467  01 20 00            	LD		BC,32				;32 bytes (sprites de 2 x 2)
     109.  00:846A  CD 5C 00            	CALL	LDIRVM
     110.  00:846D                      	
     111.  00:846D  D9                  	EXX							;recupero copia de BC,DE y HL
     112.  00:846E  F1                  	POP		AF					;recupero copia de AF
     113.  00:846F                      fin_carga_patrones_sprites:
     114.  00:846F  C9                  	RET
     115.  00:8470                      
     116.  00:8470                      
     117.  00:8470                      ;;=====================================================
     118.  00:8470                      ;;ACTUALIZA_ARRAY_SPRITES_VRAM
     119.  00:8470                      ;;=====================================================	
     120.  00:8470                      ; función: 	copia el array con los valores de los sprites (pos, color, plano) en VRAM
     121.  00:8470                      ; entrada: 	-
     122.  00:8470                      ; salida: 	-
     123.  00:8470                      ; toca: 	todos los registros. Como me interesa la velocidad, si necesito copiar de algo lo hago fuera
     124.  00:8470                      render_sprites:
     125.  00:8470                      	;volcando el array con toda la info de los sprites a la zona de atributos de sprites
     126.  00:8470  21 28 8C            	LD		HL,array_sprites
     127.  00:8473  11 00 1B            	LD		DE,SPRART
     128.  00:8476  01 80 00            	LD		BC,4 * 32				;32 sprites x 4 bytes controlando el sprite (Y, X, plano, color)
     129.  00:8479  C3 5C 00            	JP		LDIRVM
     130.  00:847C                      	;~ CALL	LDIRVM
     131.  00:847C                      fin_actualiza_array_sprites_vram:
     132.  00:847C                      	;~ RET
     133.  00:847C                      
     134.  00:847C                      
     135.  00:847C                      ;;=====================================================
     136.  00:847C                      ;;VUELCA_RESULTADO_PUNTOMIRA_ARRAY
     137.  00:847C                      ;;=====================================================	
     138.  00:847C                      ; función: 	coloca los valores del punto de mira en la variable array_sprites para ser volcados en VRAM
     139.  00:847C                      ; entrada: 	array_sprites_pm, prota.XXXXX
     140.  00:847C                      ; salida: 	-
     141.  00:847C                      ; toca: 	-
     142.  00:847C                      vuelca_resultado_puntomira_array:
     143.  00:847C  DD 21 28 8C         	LD		IX, array_sprites_pm
     144.  00:8480                      	;posición y de los dos sprites que conforman el punto de mira
     145.  00:8480  3A B7 8B            	LD		 A, (prota.posy)
     146.  00:8483  DD 77 00            	LD		(IX  ), A
     147.  00:8486  DD 77 04            	LD		(IX+4), A
     148.  00:8489                      	;posición x de los dos sprites que conforman el punto de mira
     149.  00:8489  3A B6 8B            	LD		 A, (prota.posx)
     150.  00:848C  DD 77 01            	LD		(IX+1), A
     151.  00:848F  DD 77 05            	LD		(IX+5), A
     152.  00:8492                      	;plano
     153.  00:8492  DD 36 02 00         	LD		(IX+2), 0
     154.  00:8496  DD 36 06 04         	LD		(IX+6), 4	;al ser sprites de 16x16 hay que ir de 4 en 4
     155.  00:849A                      	;color
     156.  00:849A  3A B8 8B            	LD		 A, (prota.escena)
     157.  00:849D  B7                  	OR		 A
     158.  00:849E  C2 AA 84            	JP		NZ,.codigo_color_2
     159.  00:84A1                      .codigo_color_1:
     160.  00:84A1  DD 36 03 0F         	LD		(IX+3), COLBLANCO
     161.  00:84A5  DD 36 07 08         	LD		(IX+7), COLROJO
     162.  00:84A9  C9                  	RET
     163.  00:84AA                      .codigo_color_2:
     164.  00:84AA  DD 36 03 08         	LD		(IX+3), COLROJO
     165.  00:84AE  DD 36 07 0F         	LD		(IX+7), COLBLANCO
     166.  00:84B2  C9                  	RET
     167.  00:84B3                      fin_vuelca_resultado_puntomira_array:
     168.  00:84B3                      
     169.  00:84B3                      
     170.  00:84B3                      ;;=====================================================
     171.  00:84B3                      ;;CHECK_PLAYER
     172.  00:84B3                      ;;=====================================================	
     173.  00:84B3                      ; función: 	MIRA EL CONTROL Y APLICA LA LOGICA DE MOVIMIENTO DEL PROTAGONISTA
     174.  00:84B3                      ; entrada: 	-
     175.  00:84B3                      ; salida: 	-
     176.  00:84B3                      ; toca: 	A
     177.  00:84B3                      check_player:
     178.  00:84B3  CD 2E 85            	CALL	update_controllers_status
     179.  00:84B6  B7                  	OR		 A
     180.  00:84B7  C8                  	RET		 Z						;si no se ha pulsado nada no se necesita mirar nada
     181.  00:84B8                      
     182.  00:84B8  CB 1F               	RR		 A
     183.  00:84BA  DC D3 84            	CALL	 C, mueve_arriba
     184.  00:84BD  CB 1F               	RR		 A
     185.  00:84BF  DC EF 84            	CALL	 C, mueve_abajo
     186.  00:84C2  CB 1F               	RR		 A
     187.  00:84C4  DC FE 84            	CALL	 C, mueve_izquierda
     188.  00:84C7  CB 1F               	RR		 A
     189.  00:84C9  DC E0 84            	CALL	 C, mueve_derecha
     190.  00:84CC                      	
     191.  00:84CC                      	;zona para mirar disparo Recibe A que tendrá 0000 0 0 X-letra M X-espacio 
     192.  00:84CC  CD 0B 85            	CALL	mira_disparo
     193.  00:84CF                      	
     194.  00:84CF  C3 7C 84            	JP		vuelca_resultado_puntomira_array
     195.  00:84D2                      f;in_check_player:
     196.  00:84D2  C9                  	RET
     197.  00:84D3                      
     155   00:84D3                      	
     156   00:84D3                      	include "subr_teclado_joy.asm"
       1.  00:84D3                      ;;=====================================================
       2.  00:84D3                      ;;SUBRUTINAS QUE CAPTURN EL JOYSTICK Y TECLADO Y MUEVEN PUNTO DE MIRA
       3.  00:84D3                      ;;=====================================================
       4.  00:84D3                      
       5.  00:84D3                      ;;=====================================================
       6.  00:84D3                      ;;MUEVE_ARRIBA
       7.  00:84D3                      ;;=====================================================	
       8.  00:84D3                      ; función: 	decrementa y si se no sale de los límites el valor del punto de mira a la derecha
       9.  00:84D3                      ; entrada: 	-
      10.  00:84D3                      ; salida: 	-
      11.  00:84D3                      ; toca: 	-
      12.  00:84D3                      mueve_arriba:
      13.  00:84D3  F5                  	PUSH		AF
      14.  00:84D4                      	
      15.  00:84D4  3A B7 8B            	LD		 	 A, (prota.posy)
      16.  00:84D7  3D                  	DEC			 A
      17.  00:84D8  CA DE 84            	JP			 Z,.no_decrementa_y
      18.  00:84DB  32 B7 8B            	LD			(prota.posy), A
      19.  00:84DE                      	
      20.  00:84DE                      .no_decrementa_y:
      21.  00:84DE  F1                  	POP			AF
      22.  00:84DF                      fin_mueve_arriba:
      23.  00:84DF  C9                  	RET
      24.  00:84E0                      
      25.  00:84E0                      
      26.  00:84E0                      ;;=====================================================
      27.  00:84E0                      ;;MUEVE_DERECHA
      28.  00:84E0                      ;;=====================================================	
      29.  00:84E0                      ; función: 	incrementa si se no sale de los límites el valor del punto de mira a la derecha
      30.  00:84E0                      ; entrada: 	-
      31.  00:84E0                      ; salida: 	-
      32.  00:84E0                      ; toca: 	-
      33.  00:84E0                      mueve_derecha:
      34.  00:84E0  F5                  	PUSH		AF
      35.  00:84E1                      	
      36.  00:84E1  3A B6 8B            	LD		 	 A, (prota.posx)
      37.  00:84E4  3C                  	INC			 A
      38.  00:84E5  FE EF               	CP			 A, LIMPANTDER - 16
      39.  00:84E7  CA ED 84            	JP			 Z, .no_incrementa_x
      40.  00:84EA  32 B6 8B            	LD			(prota.posx), A
      41.  00:84ED                      	
      42.  00:84ED                      .no_incrementa_x:
      43.  00:84ED  F1                  	POP			AF
      44.  00:84EE                      fin_mueve_derecha:
      45.  00:84EE  C9                  	RET
      46.  00:84EF                      
      47.  00:84EF                      
      48.  00:84EF                      ;;=====================================================
      49.  00:84EF                      ;;MUEVE_ABAJO
      50.  00:84EF                      ;;=====================================================	
      51.  00:84EF                      ; función: 	incrementa y si se no sale de los límites el valor del punto de mira abajo
      52.  00:84EF                      ; entrada: 	-
      53.  00:84EF                      ; salida: 	-
      54.  00:84EF                      ; toca: 	-
      55.  00:84EF                      mueve_abajo:
      56.  00:84EF  F5                  	PUSH		AF
      57.  00:84F0                      	
      58.  00:84F0  3A B7 8B            	LD		 	 A, (prota.posy)
      59.  00:84F3  3C                  	INC			 A
      60.  00:84F4  FE 70               	CP			 A, LIMPANTABA - 16
      61.  00:84F6  CA FC 84            	JP			 Z,.no_incrementa_y
      62.  00:84F9  32 B7 8B            	LD			(prota.posy), A
      63.  00:84FC                      	
      64.  00:84FC                      .no_incrementa_y:
      65.  00:84FC  F1                  	POP			AF
      66.  00:84FD                      fin_mueve_abajo:
      67.  00:84FD  C9                  	RET
      68.  00:84FE                      	
      69.  00:84FE                      	
      70.  00:84FE                      ;;=====================================================
      71.  00:84FE                      ;;MUEVE_IZQUIERDA
      72.  00:84FE                      ;;=====================================================	
      73.  00:84FE                      ; función: 	decrementa x si se no sale de los límites el valor del punto de mira a la izquierda
      74.  00:84FE                      ; entrada: 	-
      75.  00:84FE                      ; salida: 	-
      76.  00:84FE                      ; toca: 	-
      77.  00:84FE                      mueve_izquierda:
      78.  00:84FE  F5                  	PUSH		AF
      79.  00:84FF                      	
      80.  00:84FF  3A B6 8B            	LD		 	 A, (prota.posx)
      81.  00:8502  3D                  	DEC			 A
      82.  00:8503                      ;	CP			 A, LIMPANTIZQ
      83.  00:8503  CA 09 85            	JP			 Z,.no_decrementa_x
      84.  00:8506  32 B6 8B            	LD			(prota.posx), A
      85.  00:8509                      	
      86.  00:8509                      .no_decrementa_x:
      87.  00:8509  F1                  	POP			AF
      88.  00:850A                      fin_mueve_izquierda:
      89.  00:850A  C9                  	RET
      90.  00:850B                      
      91.  00:850B                      
      92.  00:850B                      
      93.  00:850B                      ;;=====================================================
      94.  00:850B                      ;;MIRA_DISPARO
      95.  00:850B                      ;;=====================================================	
      96.  00:850B                      ; función: 	Mira si se ha pulsado alguno de los dos disparos
      97.  00:850B                      ; entrada: 	A que tendrá 0000 0 0 X-letra M X-espacio 
      98.  00:850B                      ; salida: 	-
      99.  00:850B                      ; toca: 	A, B
     100.  00:850B                      mira_disparo:
     101.  00:850B                      .mira_boton_pulsado1:
     102.  00:850B  CB 1F               	RR		 A						;preparo en el carry si se ha pulsado botón 1
     103.  00:850D  D2 19 85            	JP		 NC, .mira_boton_pulsado2					
     104.  00:8510  47                  	LD		 B, A					;copia A para usarlo después
     105.  00:8511                      	;se ha pulsado barra o boton 1
     106.  00:8511  3A B8 8B            	LD		 A, (prota.escena)
     107.  00:8514  2F                  	CPL		 
     108.  00:8515  32 B8 8B            	LD		(prota.escena), A
     109.  00:8518                      
     110.  00:8518  78                  	LD		 A, B
     111.  00:8519                      .mira_boton_pulsado2:
     112.  00:8519  CB 1F               	RR		 A
     113.  00:851B  D0                  	RET		 NC
     114.  00:851C                      	;se ha pulsado shift o boton 2
     115.  00:851C                      	
     116.  00:851C  3A 77 86            	LD		 A, (prota_reliquias)	;miro si le quedan reliquias
     117.  00:851F  B7                  	OR		 A
     118.  00:8520  C8                  	RET		 Z						;si no le quedan salgo ya
     119.  00:8521                      	
     120.  00:8521                      	;actuaciones si se usa la reliquia botón 2 o M y quedn reliquias.. (antes ya se puso el valor en A)
     121.  00:8521  3A 77 86            	LD		A, (prota_reliquias)
     122.  00:8524  3D                  	DEC		 A
     123.  00:8525  32 77 86            	LD		(prota_reliquias), A
     124.  00:8528                      	
     125.  00:8528  CD 39 80            	CALL 	efecto_imagen_tira_reliquia
     126.  00:852B                      	
     127.  00:852B  C3 9E 81            	JP		pinta_reliquias
     128.  00:852E                      fin_mira_disparo:
     129.  00:852E                      ;	RET		
     130.  00:852E                      
     131.  00:852E                      
     132.  00:852E                      ;;============================================================
     133.  00:852E                      ;;Código de D. Fernando García (BitVision) (al que siempre le estaré agradecido)
     134.  00:852E                      ;check_8th_keyboard_row
     135.  00:852E                      ;read_joy_0
     136.  00:852E                      ;check_8th_keyboard_row
     137.  00:852E                      ;check_4th_keyboard_row
     138.  00:852E                      ;;============================================================
     139.  00:852E                      ;;  usa constantes:
     140.  00:852E                      ;PSG_A  equ  0a0h  ;reg address
     141.  00:852E                      ;PSG_W  equ  0a1h  ;reg data WR
     142.  00:852E                      ;PSG_R  equ  0a2h  ;reg data
     143.  00:852E                      
     144.  00:852E                      ;;=====================================================
     145.  00:852E                      ;;update_controllers_status
     146.  00:852E                      ;;=====================================================	
     147.  00:852E                      ;depends on the next rountine
     148.  00:852E                      ;  returns
     149.  00:852E                      ;  a - 0P2TRLDU
     150.  00:852E                      
     151.  00:852E                      update_controllers_status:
     152.  00:852E  CD 79 85                 call  check_8th_keyboard_row
     153.  00:8531                      [4]  rrc    a
     153.  00:8531  CB 0F CB 0F CB 0F CB 0F 
     154.  00:8539  47                       ld    b,a    		;save for later  xxxTRDUL
     155.  00:853A                      
     156.  00:853A  E6 01                    and    #01    		;save L
     157.  00:853C  CB 27                    sla    a
     158.  00:853E  CB 27                    sla    a    		;now 00000L00
     159.  00:8540  4F                       ld    c,a    		;save for later
     160.  00:8541                      
     161.  00:8541  78                       ld    a,b    		;again we've got xxxTRDUL. I am interested on leaving 000000DU on a
     162.  00:8542  CB 3F                    srl    a
     163.  00:8544  E6 03                    and    00000011b
     164.  00:8546                      						;we've got 000000DU on a
     165.  00:8546  B1                       or    c    		;now we've got 00000LDU
     166.  00:8547  4F                       ld    c,a    		;save for later
     167.  00:8548                      
     168.  00:8548  78                       ld    a,b
     169.  00:8549  E6 18                    and    00011000b 	;we've got 000TR000
     170.  00:854B  B1                       or    c
     171.  00:854C                           ;finally    000TRLDU
     172.  00:854C                      
     173.  00:854C                           ;and    00000100   ;preserve just
     174.  00:854C  47                       ld    b,a    		;save for later
     175.  00:854D  CD 87 85                 call  check_4th_keyboard_row      ;check M & P
     176.  00:8550  F5                       push  af
     177.  00:8551  E6 04                    and    00000100b	;filter just M
     178.  00:8553  87                       add    a
     179.  00:8554  87                       add    a
     180.  00:8555  87                       add    a           ;shift 3th to 6th bit
     181.  00:8556  B0                       or    b           	;merge with previous
     182.  00:8557  47                       ld    b,a
     183.  00:8558                      
     184.  00:8558  CD 65 85                 call  read_joy_0
     185.  00:855B  E6 3F                    and    00111111b  	;we want just 002TRLDU  from joystick    (2 is second trigger)
     186.  00:855D  B0                       or    b      		;added 000TRLDU from keyboard
     187.  00:855E  47                       ld    b,a      	;save for later
     188.  00:855F  F1                       pop    af      	; let's check on P
     189.  00:8560                      
     190.  00:8560  E6 20                    and    00100000b
     191.  00:8562  87                       add    a      		;P status on 6th bit  ... so 0P2TRLDU
     192.  00:8563  B0                       or    b
     193.  00:8564                      
     194.  00:8564  C9                       ret
     195.  00:8565                      
     196.  00:8565                      
     197.  00:8565                      ;ret
     198.  00:8565                      ;  a -            xx2TRLDU
     199.  00:8565                      read_joy_0:
     200.  00:8565  F3                         di
     201.  00:8566  3E 0F                      ld    a,15
     202.  00:8568  D3 A0                      out    [PSG_A],a
     203.  00:856A  DB A2                      in    a,[PSG_R]
     204.  00:856C  E6 BF                      and    10111111b        ;joy0
     205.  00:856E                      
     206.  00:856E  D3 A1                      out    [PSG_W],a        ;set joy0
     207.  00:8570                      
     208.  00:8570  3E 0E                      ld    a,14
     209.  00:8572  D3 A0                      out    [PSG_A],a
     210.  00:8574  DB A2                      in    a,[PSG_R]
     211.  00:8576                      
     212.  00:8576  FB                         ei
     213.  00:8577  2F                         cpl
     214.  00:8578                      
     215.  00:8578  C9                         ret
     216.  00:8579                      
     217.  00:8579                      
     218.  00:8579                      ;ret
     219.  00:8579                      ;  a -      RDULxxxT
     220.  00:8579                      check_8th_keyboard_row:
     221.  00:8579  F3                       di
     222.  00:857A  DB AA                    in    a,(#aa)
     223.  00:857C  E6 F0                    and    #f0
     224.  00:857E  F6 08                    or    8
     225.  00:8580  D3 AA                    out    (#aa),a
     226.  00:8582  DB A9                    in    a,(#a9)
     227.  00:8584  FB                       ei
     228.  00:8585  2F                       cpl
     229.  00:8586                      
     230.  00:8586  C9                       ret
     231.  00:8587                      
     232.  00:8587                      
     233.  00:8587                      ;ret
     234.  00:8587                      ;  a -      xxxxxMxx
     235.  00:8587                      check_4th_keyboard_row:
     236.  00:8587  F3                       di
     237.  00:8588  DB AA                    in    a,(#aa)
     238.  00:858A  E6 F0                    and    #f0
     239.  00:858C  F6 04                    or    4
     240.  00:858E  D3 AA                    out    (#aa),a
     241.  00:8590  DB A9                    in    a,(#a9)
     242.  00:8592  FB                       ei
     243.  00:8593  2F                       cpl
     244.  00:8594                      
     245.  00:8594  C9                       ret
     246.  00:8595                      
     247.  00:8595                      ;--------------------------------------------
     248.  00:8595                      
     249.  00:8595                      
     250.  00:8595                      
     251.  00:8595                      
     252.  00:8595                      
     253.  00:8595                      
     254.  00:8595                      
     255.  00:8595                      
     157   00:8595                      	
     158   00:8595                      
     159   00:8595                      ;Este include lleva la rutina de descompresión de ROM/RAM a VRAM de pletter
     160   00:8595                      ;Está adaptada de la original a sjasm
     161   00:8595                      ;	HL = RAM/ROM source	; DE = VRAM destination
     162   00:8595                      depack_VRAM:
     163   00:8595                      	include "PL_VRAM_Depack_SJASM.asm"
       1.  00:8595                      ;-----------------------------------------------------------
       2.  00:8595                      ; Pletter v0.5b VRAM Depacker v1.1 - 16Kb version
       3.  00:8595                      ; HL = RAM/ROM source ; DE = VRAM destination
       4.  00:8595                      ;-----------------------------------------------------------
       5.  00:8595  F3                  	di
       6.  00:8596                      
       7.  00:8596                      ; VRAM address setup
       8.  00:8596  7B                  	ld	a,e
       9.  00:8597  D3 99               	out	[099h],a
      10.  00:8599  7A                  	ld	a,d
      11.  00:859A  F6 40               	or	040h
      12.  00:859C  D3 99               	out	[099h],a
      13.  00:859E                      
      14.  00:859E                      ; Initialization
      15.  00:859E  7E                  	ld	a,[hl]
      16.  00:859F  23                  	inc	hl
      17.  00:85A0  D9                  	exx
      18.  00:85A1  11 00 00            	ld	de,0
      19.  00:85A4  87                  	add	a,a
      20.  00:85A5  3C                  	inc	a
      21.  00:85A6  CB 13               	rl	e
      22.  00:85A8  87                  	add	a,a
      23.  00:85A9  CB 13               	rl	e
      24.  00:85AB  87                  	add	a,a
      25.  00:85AC  CB 13               	rl	e
      26.  00:85AE  CB 13               	rl	e
      27.  00:85B0  21 67 86            	ld	hl,modes
      28.  00:85B3  19                  	add	hl,de
      29.  00:85B4  5E                  	ld	e,[hl]
      30.  00:85B5  DD 6B               	ld	ixl,e
      31.  00:85B7  23                  	inc	hl
      32.  00:85B8  5E                  	ld	e,[hl]
      33.  00:85B9  DD 63               	ld	ixh,e
      34.  00:85BB  1E 01               	ld	e,1
      35.  00:85BD  D9                  	exx
      36.  00:85BE  FD 21 C7 85         	ld	iy,loop
      37.  00:85C2                      
      38.  00:85C2                      ; Main depack loop
      39.  00:85C2  0E 98               literal:ld	c,098h
      40.  00:85C4  ED A3               	outi
      41.  00:85C6  13                  	inc	de
      42.  00:85C7  87                  loop:	add	a,a
      43.  00:85C8  CC 5B 86              	call	z,getbit
      44.  00:85CB  30 F5               	jr	nc,literal
      45.  00:85CD                      
      46.  00:85CD                      ; Compressed data
      47.  00:85CD  D9                  	exx
      48.  00:85CE  62                  	ld	h,d
      49.  00:85CF  6B                  	ld	l,e
      50.  00:85D0  87                  getlen: add	a,a
      51.  00:85D1  CC 5F 86            	call	z,getbitexx
      52.  00:85D4  30 1D               	jr	nc,lenok
      53.  00:85D6  87                  lus:	add	a,a
      54.  00:85D7  CC 5F 86            	call	z,getbitexx
      55.  00:85DA  ED 6A               	adc	hl,hl
      56.  00:85DC  D8                  	ret	c
      57.  00:85DD  87                  	add	a,a
      58.  00:85DE  CC 5F 86            	call	z,getbitexx
      59.  00:85E1  30 10               	jr	nc,lenok
      60.  00:85E3  87                  	add	a,a
      61.  00:85E4  CC 5F 86            	call	z,getbitexx
      62.  00:85E7  ED 6A               	adc	hl,hl
      63.  00:85E9  DA 65 86            	jp	c,Depack_out
      64.  00:85EC  87                  	add	a,a
      65.  00:85ED  CC 5F 86            	call	z,getbitexx
      66.  00:85F0  DA D6 85            	jp	c,lus
      67.  00:85F3  23                  lenok:  inc	hl
      68.  00:85F4  D9                  	exx
      69.  00:85F5  4E                  	ld	c,[hl]
      70.  00:85F6  23                  	inc	hl
      71.  00:85F7  06 00               	ld	b,0
      72.  00:85F9  CB 79               	bit	7,c
      73.  00:85FB  CA 2E 86            	jp	z,offsok
      74.  00:85FE  DD E9               	jp	ix
      75.  00:8600                      
      76.  00:8600  87                  mode7:  add	a,a
      77.  00:8601  CC 5B 86              	call	z,getbit
      78.  00:8604  CB 10               	rl	b
      79.  00:8606  87                  mode6:	add	a,a
      80.  00:8607  CC 5B 86              	call	z,getbit
      81.  00:860A  CB 10               	rl	b
      82.  00:860C  87                  mode5:  add	a,a
      83.  00:860D  CC 5B 86              	call	z,getbit
      84.  00:8610  CB 10               	rl	b
      85.  00:8612  87                  mode4:  add	a,a
      86.  00:8613  CC 5B 86              	call	z,getbit
      87.  00:8616  CB 10               	rl	b
      88.  00:8618  87                  mode3:  add	a,a
      89.  00:8619  CC 5B 86              	call	z,getbit
      90.  00:861C  CB 10               	rl	b
      91.  00:861E  87                  mode2:	add	a,a
      92.  00:861F  CC 5B 86              	call	z,getbit
      93.  00:8622  CB 10               	rl	b
      94.  00:8624  87                  	add	a,a
      95.  00:8625  CC 5B 86              	call	z,getbit
      96.  00:8628  30 04               	jr	nc,offsok
      97.  00:862A  B7                  	or	a
      98.  00:862B  04                  	inc	b
      99.  00:862C  CB B9               	res	7,c
     100.  00:862E  03                  offsok: inc	bc
     101.  00:862F  E5                  	push	hl
     102.  00:8630  D9                  	exx
     103.  00:8631  E5                  	push	hl
     104.  00:8632  D9                  	exx
     105.  00:8633  6B                  	ld	l,e
     106.  00:8634  62                  	ld	h,d
     107.  00:8635  ED 42               	sbc	hl,bc
     108.  00:8637  C1                  	pop	bc
     109.  00:8638  F5                  	push	af
     110.  00:8639  7D                  .loop:	ld	a,l
     111.  00:863A  D3 99               	out	[099h],a
     112.  00:863C  7C                  	ld	a,h
     113.  00:863D  00                  	nop                     ; VDP timing
     114.  00:863E  D3 99               	out	[099h],a
     115.  00:8640  00                  	nop                     ; VDP timing
     116.  00:8641  DB 98               	in	a,[098h]
     117.  00:8643  08                  	ex	af,af'
     118.  00:8644  7B                  	ld	a,e
     119.  00:8645  00                  	nop			; VDP timing
     120.  00:8646  D3 99               	out	[099h],a
     121.  00:8648  7A                  	ld	a,d
     122.  00:8649  F6 40               	or	040h
     123.  00:864B  D3 99               	out	[099h],a
     124.  00:864D  08                  	ex	af,af'
     125.  00:864E  00                  	nop			; VDP timing
     126.  00:864F  D3 98               	out	[098h],a
     127.  00:8651  13                  	inc	de
     128.  00:8652  ED A1               	cpi
     129.  00:8654  EA 39 86            	jp	pe,.loop
     130.  00:8657  F1                  	pop	af
     131.  00:8658  E1                  	pop	hl
     132.  00:8659  FD E9               	jp	iy
     133.  00:865B                      
     134.  00:865B  7E                  getbit: ld	a,[hl]
     135.  00:865C  23                  	inc	hl
     136.  00:865D  17                  	rla
     137.  00:865E  C9                  	ret
     138.  00:865F                      
     139.  00:865F                      getbitexx:
     140.  00:865F  D9                  	exx
     141.  00:8660  7E                  	ld	a,[hl]
     142.  00:8661  23                  	inc	hl
     143.  00:8662  D9                  	exx
     144.  00:8663  17                  	rla
     145.  00:8664  C9                  	ret
     146.  00:8665                      
     147.  00:8665                      ; Depacker exit
     148.  00:8665                      Depack_out:
     149.  00:8665  FB                  	ei
     150.  00:8666  C9                  	ret
     151.  00:8667                      
     152.  00:8667                      modes:
     153.  00:8667  2E 86               	dw	offsok
     154.  00:8669  1E 86               	dw	mode2
     155.  00:866B  18 86               	dw	mode3
     156.  00:866D  12 86               	dw	mode4
     157.  00:866F  0C 86               	dw	mode5
     158.  00:8671  06 86               	dw	mode6
     159.  00:8673  00 86               	dw	mode7
     164   00:8675                      
     165   00:8675                      
     166   00:8675                      	
     167   00:8675                      ;;=====================================================
     168   00:8675                      ;;DEFINICIÓN DE ESTRUCTURAS
     169   00:8675                      ;;=====================================================		
     170   00:8675                      	include "estructuras.asm"
       1.  00:8675                      ;;=====================================================
       2.  00:8675                      ;;DEFINICIÓN DE ESTRUCTURAS
       3.  00:8675                      ;;=====================================================
       4.  00:8675                      
       5.  00:8675                      ;crear estructura
       6.  00:8675                      ;variables globales del prota
       7.  00:8675                      prota_nivel:			;nivel del castillo donde está 0-6
       8.  00:8675  00                  			DB		0
       9.  00:8676                      prota_vidas:
      10.  00:8676  00                  			DB		0
      11.  00:8677                      prota_reliquias:
      12.  00:8677  03                  			DB		3
      13.  00:8678                      prota_pos_mapx:
      14.  00:8678  00                  			DB		0	;pos columna
      15.  00:8679                      prota_pos_mapy:
      16.  00:8679  00                  			DB		0	;pos fila
      17.  00:867A                      prota_energia:
      18.  00:867A  FA                  			DB		250
      19.  00:867B                      
      20.  00:867B                      	STRUCT ESTRUCTURA_PUNTOMIRA
      21.  00:867B                    < posx			DB		100
      22.  00:867B                    < posy			DB		100
      23.  00:867B                    < escena			DB		0	;valores porsibles 0 (blanco+rojo en punto de mira) y NEG 0 (al revés)
      24.  00:867B                    < velocidad		DB		0
      25.  00:867B                    < boton2_pressed  DB		0
      26.  00:867B                    < ; al final he decidido (ya que el punto de mira es el prota) que lo relacionado con el prota vaya en esta estructura
      27.  00:867B                    < pm_aux1			DB		0	;para llegar a los 16 campos
      28.  00:867B                    < pm_aux2			DB		0	;para llegar a los 16 campos
      29.  00:867B                    < pm_aux3			DB		0	;para llegar a los 16 campos
      30.  00:867B                    < pm_aux4			DB		0	;para llegar a los 16 campos
      31.  00:867B                    < pm_aux5			DB		0	;para llegar a los 16 campos
      32.  00:867B                    < pm_aux6			DB		0	;para llegar a los 16 campos
      33.  00:867B                    < pm_aux7			DB		0	;para llegar a los 16 campos
      34.  00:867B                    < pm_aux8			DB		0	;para llegar a los 16 campos
      35.  00:867B                    < pm_aux9			DB		0	;para llegar a los 16 campos
      36.  00:867B                    < pm_aux10		DB		0	;para llegar a los 16 campos
      37.  00:867B                    < pm_aux11		DB		0	;para llegar a los 16 campos
      38.  00:867B                    < 	ENDSTRUCT;ESTRUCTURA_PUNTOMIRA
      39.  00:867B                      
      40.  00:867B                      	
      41.  00:867B                      	STRUCT ESTRUCTURA_ENEMIGO
      42.  00:867B                    < tipo				DB		0	;(0 serpiente por ejemplo) #FF muerto o no existe
      43.  00:867B                    < posx				DB		5
      44.  00:867B                    < posy				DB		50
      45.  00:867B                    < color				DB		5
      46.  00:867B                    < escena				DB		0
      47.  00:867B                    < contador_siguiente_escena	DB	0
      48.  00:867B                    < reset_contador		DB		0
      49.  00:867B                    < dano				DB		0	;daño
      50.  00:867B                    < energia				DB		0	;energía del enemigo... si llega a 0 => existe <- 0
      51.  00:867B                    < ;indica el nº de sprite a mostrar y si está compuesto por uno o dos sprites y si están en horizontal o vertical
      52.  00:867B                    < ver_hor				DB		0
      53.  00:867B                    < manejador_dibujo 	DW		0
      54.  00:867B                    < en_aux3				DB		0
      55.  00:867B                    < en_aux4				DB		0
      56.  00:867B                    < 	ENDSTRUCT;ESTRUCTURA_ENEMIGO
      57.  00:867B                      	
      58.  00:867B                      	STRUCT ESTRUCTURA_EXTRA		;vidas extra, plantas de curación de energía, reliquias	
      59.  00:867B                    < tipo				DB		0	;#FF muerto/usado o no existe
      60.  00:867B                    < posx				DB		50
      61.  00:867B                    < posy				DB		50
      62.  00:867B                    < color				DB		5
      63.  00:867B                    < contador			DB		0	;por si doy dos reliquias en vez de una, por ejemplo
      64.  00:867B                    < en_aux1				DB		0	;para llegar a los 16 campos
      65.  00:867B                    < en_aux2				DB		0
      66.  00:867B                    < en_aux3				DB		0
      67.  00:867B                    < en_aux4				DB		0
      68.  00:867B                    < en_aux5				DB		0
      69.  00:867B                    < en_aux6				DB		0
      70.  00:867B                    < en_aux7				DB		0
      71.  00:867B                    < en_aux8				DB		0
      72.  00:867B                    < en_aux9				DB		0
      73.  00:867B                    < en_aux10			DB		0
      74.  00:867B                    < en_aux11			DB		0
      75.  00:867B                    < 	ENDSTRUCT;ESTRUCTURA_EXTRA
      76.  00:867B                      
      77.  00:867B                      
      78.  00:867B                      
      79.  00:867B                      
      80.  00:867B                      
      81.  00:867B                      
      82.  00:867B                      
     171   00:867B                      	
     172   00:867B                      ;;=====================================================
     173   00:867B                      ;;DEFINICIÓN DE VARIABLES
     174   00:867B                      ;;=====================================================		
     175   00:867B                      	include "sprites.asm"
       1.  00:867B                      ;;=====================================================
       2.  00:867B                      ;;DEFINICIÓN DE SPRITES
       3.  00:867B                      ;;=====================================================	
       4.  00:867B                      sprites_pantantalla:
       5.  00:867B                      
       6.  00:867B                      sprite_punto_mira_1:	;color 8
       7.  00:867B                      	db #FF,#FF,#C0,#C0,#C0,#C0,#C0,#C0
       7.  00:867B  FF FF C0 C0 C0 C0 C0 C0 
       8.  00:8683                      	db #C0,#C0,#C0,#C0,#C0,#C0,#FF,#FF
       8.  00:8683  C0 C0 C0 C0 C0 C0 FF FF 
       9.  00:868B                      	db #FF,#FF,#03,#03,#03,#03,#03,#03
       9.  00:868B  FF FF 03 03 03 03 03 03 
      10.  00:8693                      	db #03,#03,#03,#03,#03,#03,#FF,#FF
      10.  00:8693  03 03 03 03 03 03 FF FF 
      11.  00:869B                      	
      12.  00:869B                      sprite_punto_mira_2: 	;color 15
      13.  00:869B                      	db #00,#00,#00,#00,#0F,#0F,#0C,#0C
      13.  00:869B  00 00 00 00 0F 0F 0C 0C 
      14.  00:86A3                      	db #0C,#0C,#0F,#0F,#00,#00,#00,#00
      14.  00:86A3  0C 0C 0F 0F 00 00 00 00 
      15.  00:86AB                      	db #00,#00,#00,#00,#F0,#F0,#30,#30
      15.  00:86AB  00 00 00 00 F0 F0 30 30 
      16.  00:86B3                      	db #30,#30,#F0,#F0,#00,#00,#00,#00
      16.  00:86B3  30 30 F0 F0 00 00 00 00 
      17.  00:86BB                      	
      18.  00:86BB                      sprite_punto_mira_1_mejorado:
      19.  00:86BB                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      19.  00:86BB  FF FF FF FF FF FF FF FF 
      20.  00:86C3                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      20.  00:86C3  FF FF FF FF FF FF FF FF 
      21.  00:86CB                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      21.  00:86CB  FF FF FF FF FF FF FF FF 
      22.  00:86D3                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      22.  00:86D3  FF FF FF FF FF FF FF FF 
      23.  00:86DB                      
      24.  00:86DB                      sprite_punto_mira_2_mejorado:
      25.  00:86DB                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      25.  00:86DB  FF FF FF FF FF FF FF FF 
      26.  00:86E3                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      26.  00:86E3  FF FF FF FF FF FF FF FF 
      27.  00:86EB                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      27.  00:86EB  FF FF FF FF FF FF FF FF 
      28.  00:86F3                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      28.  00:86F3  FF FF FF FF FF FF FF FF 
      29.  00:86FB                      	
      30.  00:86FB                      sprite_reliquia:
      31.  00:86FB                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      31.  00:86FB  FF FF FF FF FF FF FF FF 
      32.  00:8703                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      32.  00:8703  FF FF FF FF FF FF FF FF 
      33.  00:870B                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      33.  00:870B  FF FF FF FF FF FF FF FF 
      34.  00:8713                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      34.  00:8713  FF FF FF FF FF FF FF FF 
      35.  00:871B                      	
      36.  00:871B                      sprite_vida_extra:
      37.  00:871B                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      37.  00:871B  FF FF FF FF FF FF FF FF 
      38.  00:8723                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      38.  00:8723  FF FF FF FF FF FF FF FF 
      39.  00:872B                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      39.  00:872B  FF FF FF FF FF FF FF FF 
      40.  00:8733                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      40.  00:8733  FF FF FF FF FF FF FF FF 
      41.  00:873B                      	
      42.  00:873B                      sprite_planta:
      43.  00:873B                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      43.  00:873B  FF FF FF FF FF FF FF FF 
      44.  00:8743                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      44.  00:8743  FF FF FF FF FF FF FF FF 
      45.  00:874B                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      45.  00:874B  FF FF FF FF FF FF FF FF 
      46.  00:8753                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      46.  00:8753  FF FF FF FF FF FF FF FF 
      47.  00:875B                      	
      48.  00:875B                      sprite_ballesta_mejorada:
      49.  00:875B                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      49.  00:875B  FF FF FF FF FF FF FF FF 
      50.  00:8763                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      50.  00:8763  FF FF FF FF FF FF FF FF 
      51.  00:876B                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      51.  00:876B  FF FF FF FF FF FF FF FF 
      52.  00:8773                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF	
      52.  00:8773  FF FF FF FF FF FF FF FF 
      53.  00:877B                      	
      54.  00:877B                      sprite_ciempies1:
      55.  00:877B                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      55.  00:877B  FF FF FF FF FF FF FF FF 
      56.  00:8783                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      56.  00:8783  FF FF FF FF FF FF FF FF 
      57.  00:878B                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      57.  00:878B  FF FF FF FF FF FF FF FF 
      58.  00:8793                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      58.  00:8793  FF FF FF FF FF FF FF FF 
      59.  00:879B                      	
      60.  00:879B                      sprite_ciempies2:
      61.  00:879B                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      61.  00:879B  FF FF FF FF FF FF FF FF 
      62.  00:87A3                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      62.  00:87A3  FF FF FF FF FF FF FF FF 
      63.  00:87AB                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      63.  00:87AB  FF FF FF FF FF FF FF FF 
      64.  00:87B3                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      64.  00:87B3  FF FF FF FF FF FF FF FF 
      65.  00:87BB                      	
      66.  00:87BB                      sprite_arana1:
      67.  00:87BB                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      67.  00:87BB  FF FF FF FF FF FF FF FF 
      68.  00:87C3                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      68.  00:87C3  FF FF FF FF FF FF FF FF 
      69.  00:87CB                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      69.  00:87CB  FF FF FF FF FF FF FF FF 
      70.  00:87D3                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      70.  00:87D3  FF FF FF FF FF FF FF FF 
      71.  00:87DB                      	
      72.  00:87DB                      sprite_arana2:
      73.  00:87DB                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      73.  00:87DB  FF FF FF FF FF FF FF FF 
      74.  00:87E3                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      74.  00:87E3  FF FF FF FF FF FF FF FF 
      75.  00:87EB                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      75.  00:87EB  FF FF FF FF FF FF FF FF 
      76.  00:87F3                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      76.  00:87F3  FF FF FF FF FF FF FF FF 
      77.  00:87FB                      	
      78.  00:87FB                      sprite_serpiente1:
      79.  00:87FB                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      79.  00:87FB  FF FF FF FF FF FF FF FF 
      80.  00:8803                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      80.  00:8803  FF FF FF FF FF FF FF FF 
      81.  00:880B                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      81.  00:880B  FF FF FF FF FF FF FF FF 
      82.  00:8813                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      82.  00:8813  FF FF FF FF FF FF FF FF 
      83.  00:881B                      	
      84.  00:881B                      sprite_serpiente2:
      85.  00:881B                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      85.  00:881B  FF FF FF FF FF FF FF FF 
      86.  00:8823                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      86.  00:8823  FF FF FF FF FF FF FF FF 
      87.  00:882B                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      87.  00:882B  FF FF FF FF FF FF FF FF 
      88.  00:8833                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      88.  00:8833  FF FF FF FF FF FF FF FF 
      89.  00:883B                      	
      90.  00:883B                      sprite_murcielago1:
      91.  00:883B                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      91.  00:883B  FF FF FF FF FF FF FF FF 
      92.  00:8843                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      92.  00:8843  FF FF FF FF FF FF FF FF 
      93.  00:884B                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      93.  00:884B  FF FF FF FF FF FF FF FF 
      94.  00:8853                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      94.  00:8853  FF FF FF FF FF FF FF FF 
      95.  00:885B                      	
      96.  00:885B                      sprite_murcielago2:
      97.  00:885B                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      97.  00:885B  FF FF FF FF FF FF FF FF 
      98.  00:8863                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      98.  00:8863  FF FF FF FF FF FF FF FF 
      99.  00:886B                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
      99.  00:886B  FF FF FF FF FF FF FF FF 
     100.  00:8873                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF	
     100.  00:8873  FF FF FF FF FF FF FF FF 
     101.  00:887B                      
     102.  00:887B                      sprite_explosion:
     103.  00:887B                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     103.  00:887B  FF FF FF FF FF FF FF FF 
     104.  00:8883                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     104.  00:8883  FF FF FF FF FF FF FF FF 
     105.  00:888B                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     105.  00:888B  FF FF FF FF FF FF FF FF 
     106.  00:8893                      	db  #FF,#FF,#FF,#FF,#FF,#FF,#FF,#FF
     106.  00:8893  FF FF FF FF FF FF FF FF 
     107.  00:889B                      	
     108.  00:889B                      	
     109.  00:889B                      	
     176   00:889B                      	
     177   00:889B                      	include "habitaciones.asm"
       1.  00:889B                      ;;=====================================================
       2.  00:889B                      ;;DEFINICIÓN DE HABITACIONES x NIVEL
       3.  00:889B                      ;;=====================================================	
       4.  00:889B                      
       5.  00:889B                      ; sólo voy a usar 7x7 pero como los arrays son lineales y voy a trabajar con matrices
       6.  00:889B                      ; me interesa que seande  8x8 aunque sólo trabaje con 7x7
       7.  00:889B                      
       8.  00:889B                      ; ojo... la primera linea corresponderá a la primera linea del castillo no a la última
       9.  00:889B                      
      10.  00:889B                      ;; definición de estructura de bits
      11.  00:889B                      ;Tipo DB pero serán 2 bytes por habitación byte primero (habitaciones etc) + byte 2º. Los bytes 15 y 16 se usan para información extra
      12.  00:889B                      ;los 7 primeros bits del byte 15 indican si se ha pasado/limpiado una habitación o no
      13.  00:889B                      ;~ 0 - lleno o vacío (si ya se ha pasado)
      14.  00:889B                      ;~ 0000 - nº puertas 1 arriba 1 derecha 1 abajo 1 izquierda
      15.  00:889B                      ;~ 1 - hay reliquia?
      16.  00:889B                      ;~ 1 - hay vida extra
      17.  00:889B                      ;~ 1 - hay arma extra (durará 6 pantallas - sonido distinto)
      18.  00:889B                      ;~ 1 - hay energía? (sobran bits ... se puede usar otro como carga energía +)
      19.  00:889B                      ;~ 1 - es pantalla de mostruo fin de fase?
      20.  00:889B                      ;~ 1 - es pantalla inicial (equivaldría a la puerta de un castillo)?
      21.  00:889B                      ;~ 1 - es pantalla final?
      22.  00:889B                      
      23.  00:889B                      
      24.  00:889B                      ;importante: el byte de la columna 15 indicará con 1 y 0 habitaciones por las que se haya pasado
      25.  00:889B                      ;cuando se inicie la partida todos se pondrán a 0
      26.  00:889B                      
      27.  00:889B                      habitacion_actual:
      28.  00:889B  00 00               	db  #00,#00		;habitación donde se encuentre el prota. Se mete en una varible par traer todos los datos de golpe y no buscrlos varias veces
      29.  00:889D                      
      30.  00:889D                      habitaciones_juego:
      31.  00:889D                      habitaciones_nivel0:
      32.  00:889D                      ;---------------------------------* habitación inicial
      33.  00:889D                      	db  #00,#00,#01,#01,#02,#02,#03,#03,#04,#04,#05,#05,#06,#06,#FF,#00 ;primera fila
      33.  00:889D  00 00 01 01 02 02 03 03 04 04 05 05 06 06 FF 00 
      34.  00:88AD                      	db  #17,#10,#11,#11,#12,#12,#13,#13,#14,#14,#15,#15,#16,#16,#FF,#00
      34.  00:88AD  17 10 11 11 12 12 13 13 14 14 15 15 16 16 FF 00 
      35.  00:88BD                      	db  #20,#20,#21,#21,#22,#22,#23,#23,#24,#24,#25,#25,#26,#26,#FF,#00
      35.  00:88BD  20 20 21 21 22 22 23 23 24 24 25 25 26 26 FF 00 
      36.  00:88CD                      	db  #30,#30,#31,#31,#32,#32,#33,#33,#34,#34,#35,#35,#36,#36,#FF,#00
      36.  00:88CD  30 30 31 31 32 32 33 33 34 34 35 35 36 36 FF 00 
      37.  00:88DD                      	db  #40,#40,#41,#41,#42,#42,#43,#43,#44,#44,#45,#45,#46,#46,#FF,#00
      37.  00:88DD  40 40 41 41 42 42 43 43 44 44 45 45 46 46 FF 00 
      38.  00:88ED                      	db  #50,#50,#51,#51,#52,#52,#53,#53,#54,#54,#55,#55,#56,#56,#FF,#00
      38.  00:88ED  50 50 51 51 52 52 53 53 54 54 55 55 56 56 FF 00 
      39.  00:88FD                      	db  #60,#60,#61,#61,#62,#62,00001111b,#63,#64,#64,#65,#65,#66,#66,#FF,#00	;ultima fila
      39.  00:88FD  60 60 61 61 62 62 0F 63 64 64 65 65 66 66 FF 00 
      40.  00:890D                      	
      41.  00:890D                      habitaciones_nivel1:
      42.  00:890D                      	db  #00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00 ;primera fila
      42.  00:890D  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
      43.  00:891D                      	db  #00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00
      43.  00:891D  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
      44.  00:892D                      	db  #00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00
      44.  00:892D  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
      45.  00:893D                      	db  #00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00
      45.  00:893D  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
      46.  00:894D                      	db  #00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00
      46.  00:894D  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
      47.  00:895D                      	db  #00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00
      47.  00:895D  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
      48.  00:896D                      	db  #00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00	;ultima fila
      48.  00:896D  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
      49.  00:897D                      	
      50.  00:897D                      habitaciones_nivel2:
      51.  00:897D                      	db  #00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00 ;primera fila
      51.  00:897D  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
      52.  00:898D                      	db  #00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00
      52.  00:898D  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
      53.  00:899D                      	db  #00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00
      53.  00:899D  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
      54.  00:89AD                      	db  #00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00
      54.  00:89AD  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
      55.  00:89BD                      	db  #00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00
      55.  00:89BD  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
      56.  00:89CD                      	db  #00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00
      56.  00:89CD  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
      57.  00:89DD                      	db  #00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00	;ultima fila
      57.  00:89DD  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
      58.  00:89ED                      	
      59.  00:89ED                      habitaciones_nivel3:
      60.  00:89ED                      	db  #00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00 ;primera fila
      60.  00:89ED  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
      61.  00:89FD                      	db  #00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00
      61.  00:89FD  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
      62.  00:8A0D                      	db  #00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00
      62.  00:8A0D  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
      63.  00:8A1D                      	db  #00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00
      63.  00:8A1D  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
      64.  00:8A2D                      	db  #00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00
      64.  00:8A2D  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
      65.  00:8A3D                      	db  #00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00
      65.  00:8A3D  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
      66.  00:8A4D                      	db  #00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00	;ultima fila
      66.  00:8A4D  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
      67.  00:8A5D                      	
      68.  00:8A5D                      habitaciones_nivel4:
      69.  00:8A5D                      	db  #00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00 ;primera fila
      69.  00:8A5D  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
      70.  00:8A6D                      	db  #00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00
      70.  00:8A6D  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
      71.  00:8A7D                      	db  #00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00
      71.  00:8A7D  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
      72.  00:8A8D                      	db  #00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00
      72.  00:8A8D  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
      73.  00:8A9D                      	db  #00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00
      73.  00:8A9D  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
      74.  00:8AAD                      	db  #00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00
      74.  00:8AAD  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
      75.  00:8ABD                      	db  #00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00	;ultima fila
      75.  00:8ABD  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
      76.  00:8ACD                      	
      77.  00:8ACD                      habitaciones_nivel5:
      78.  00:8ACD                      	db  #00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00 ;primera fila
      78.  00:8ACD  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
      79.  00:8ADD                      	db  #00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00
      79.  00:8ADD  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
      80.  00:8AED                      	db  #00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00
      80.  00:8AED  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
      81.  00:8AFD                      	db  #00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00
      81.  00:8AFD  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
      82.  00:8B0D                      	db  #00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00
      82.  00:8B0D  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
      83.  00:8B1D                      	db  #00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00
      83.  00:8B1D  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
      84.  00:8B2D                      	db  #00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00	;ultima fila
      84.  00:8B2D  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
      85.  00:8B3D                      	
      86.  00:8B3D                      habitaciones_nivel6:
      87.  00:8B3D                      	db  #6F,#6F,#01,#01,#02,#02,#03,#03,#04,#04,#05,#05,#06,#06,#FF,#00 ;primera fila
      87.  00:8B3D  6F 6F 01 01 02 02 03 03 04 04 05 05 06 06 FF 00 
      88.  00:8B4D                      	db  #17,#10,#11,#11,#12,#12,#13,#13,#14,#14,#15,#15,#16,#16,#FF,#00
      88.  00:8B4D  17 10 11 11 12 12 13 13 14 14 15 15 16 16 FF 00 
      89.  00:8B5D                      	db  #20,#20,#21,#21,#22,#22,#23,#23,#24,#24,#25,#25,#26,#26,#FF,#00
      89.  00:8B5D  20 20 21 21 22 22 23 23 24 24 25 25 26 26 FF 00 
      90.  00:8B6D                      	db  #30,#30,#31,#31,#32,#32,#33,#33,#34,#34,#35,#35,#36,#36,#FF,#00
      90.  00:8B6D  30 30 31 31 32 32 33 33 34 34 35 35 36 36 FF 00 
      91.  00:8B7D                      	db  #40,#40,#41,#41,#42,#42,#43,#43,#44,#44,#45,#45,#46,#46,#FF,#00
      91.  00:8B7D  40 40 41 41 42 42 43 43 44 44 45 45 46 46 FF 00 
      92.  00:8B8D                      	db  #50,#50,#51,#51,#52,#52,#53,#53,#54,#54,#55,#55,#56,#56,#FF,#00
      92.  00:8B8D  50 50 51 51 52 52 53 53 54 54 55 55 56 56 FF 00 
      93.  00:8B9D                      	db  #60,#60,#61,#61,#62,#62,#63,#63,#64,#64,#65,#65,#66,#66,#FF,#00	;ultima fila
      93.  00:8B9D  60 60 61 61 62 62 63 63 64 64 65 65 66 66 FF 00 
      94.  00:8BAD                      
      95.  00:8BAD                      
     178   00:8BAD                      	
     179   00:8BAD                      	include "variables.asm"
       1.  00:8BAD                      ;;=====================================================
       2.  00:8BAD                      ;;DEFINICIÓN DE VARIABLES
       3.  00:8BAD                      ;;=====================================================
       4.  00:8BAD                      
       5.  00:8BAD                      ;Colores base de la pantalla
       6.  00:8BAD                      color_base:
       7.  00:8BAD  01 01 01            			DB		COLNEGRO,COLNEGRO,COLNEGRO	
       8.  00:8BB0                      ;colores de pantalla cuando se tira bomba
       9.  00:8BB0                      color_bomba1:
      10.  00:8BB0  08 08 08            			DB		COLROJO,COLROJO,COLROJO
      11.  00:8BB3                      color_bomba2:
      12.  00:8BB3  06 06 06            			DB		COLROJOOSC,COLROJOOSC,COLROJOOSC
      13.  00:8BB6                      
      14.  00:8BB6                      ;definicion de variable del prota usando la estructura del punto de mira
      15.  00:8BB6                      prota:		ESTRUCTURA_PUNTOMIRA
      15.  00:8BB6  64 64 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
      16.  00:8BC6                      
      17.  00:8BC6                      ;array para pintar de golpe el marcador de vidas
      18.  00:8BC6                      array_aux_vidas: 		
      19.  00:8BC6                      			DB		0,0,0,0,0,0,0,0
      19.  00:8BC6  00 00 00 00 00 00 00 00 
      20.  00:8BCE                      
      21.  00:8BCE                      ;array para pintar de golpe el marcador de reliquias
      22.  00:8BCE                      array_aux_reliquias:	
      23.  00:8BCE                      			DB		0,0,0,0,0,0,0,0
      23.  00:8BCE  00 00 00 00 00 00 00 00 
      24.  00:8BD6                      
      25.  00:8BD6                      array_aux_energia:		;array para pintar de golpe el marcador de energía
      26.  00:8BD6                      			DB		16,0,0,0,0,0,0 ;el 16 primero es porque siempre estará pintado el cuadro primero rojo
      26.  00:8BD6  10 00 00 00 00 00 00 
      27.  00:8BDD                      ultimo_pos_array_aux_energia:
      28.  00:8BDD  00                  			DB		0			;el array completo es de 8 pero para posicionar sin niecesidad de cálculos  etiqueto este aparte
      29.  00:8BDE                      			
      30.  00:8BDE                      array_aux_mapa_limpiar:	;es por facilitar el reseteo del mapa (pinto 7 lineas en negro con bios) la otra opción es más larga en código y complicada aunque más rápida
      31.  00:8BDE                      			DB		0,0,0,0,0,0,0
      31.  00:8BDE  00 00 00 00 00 00 00 
      32.  00:8BE5                      
      33.  00:8BE5                      actualiza_puertas_sn:	;0 no 1 sí (se pone a 1 cuando se cambia de habitación y al terminar se vuelve a poner a 0)
      34.  00:8BE5  00                  			DB		0 	;valor que indica si hay que actualizar las puertas de una pantalla (se crea porque sólo hay que actualizar si se cambia a de hab)
      35.  00:8BE6                      			
      36.  00:8BE6                      ;; nota importante: cada vez que se cambie de nivel se actualizará el contenido
      37.  00:8BE6                      ;; arrays con mapa de tiles de las puertas
      38.  00:8BE6                      array_puerta_arriba:
      39.  00:8BE6  03 01 01 03         array_puerta_arriba1:		DB	3,1,1,3
      40.  00:8BEA  01 01 01 01         array_puerta_arriba2:		DB	1,1,1,1
      41.  00:8BEE  01 01 01 01         array_puerta_arriba3:		DB	1,1,1,1
      42.  00:8BF2  01 01 01 01         array_puerta_arriba4:		DB	1,1,1,1
      43.  00:8BF6  01 01 01 01         array_puerta_arriba5:		DB	1,1,1,1
      44.  00:8BFA                      
      45.  00:8BFA                      array_puerta_derecha:
      46.  00:8BFA  01 03 03            array_puerta_derecha1:		DB	1,3,3
      47.  00:8BFD  01 01 03            array_puerta_derecha2:		DB	1,1,3
      48.  00:8C00  01 01 01            array_puerta_derecha3:		DB	1,1,1
      49.  00:8C03  01 01 01            array_puerta_derecha4:		DB	1,1,1
      50.  00:8C06  01 01 01            array_puerta_derecha5:		DB	1,1,1
      51.  00:8C09  02 01 01            array_puerta_derecha6:		DB	2,1,1
      52.  00:8C0C  04 02 01            array_puerta_derecha7:		DB	4,2,1
      53.  00:8C0F                      	
      54.  00:8C0F  01 01 01 01         array_puerta_abajo:			DB	1,1,1,1
      55.  00:8C13                      
      56.  00:8C13                      array_puerta_izquierda:
      57.  00:8C13  03 03 01            array_puerta_izquierda1:	DB	3,3,1
      58.  00:8C16  03 01 01            array_puerta_izquierda2:	DB	3,1,1
      59.  00:8C19  01 01 01            array_puerta_izquierda3:	DB	1,1,1
      60.  00:8C1C  01 01 01            array_puerta_izquierda4:	DB	1,1,1
      61.  00:8C1F  01 01 01            array_puerta_izquierda5:	DB	1,1,1
      62.  00:8C22  01 01 02            array_puerta_izquierda6:	DB	1,1,2
      63.  00:8C25  01 02 04            array_puerta_izquierda7:	DB	1,2,4
      64.  00:8C28                      
      65.  00:8C28                      
      66.  00:8C28                      ;array de 4 bytes x 32 sprites posibles en pantalla que sobreescribirá la tabla de sprites actualizando VRAM
      67.  00:8C28                      array_sprites:
      68.  00:8C28  00 (8)              array_sprites_pm:				DS	2 * 4
      69.  00:8C30  00 (120)            array_sprites_enem:				DS	30 * 4
      70.  00:8CA8  00 (140)            lista_enemigos:					DS	10 * ESTRUCTURA_ENEMIGO
      71.  00:8D34                      ; puntero al array a pintar en VRAM
      72.  00:8D34  00 00               puntero_array_atrib_array_VRAM: DW	0	;ARRAYSPTRIES + 8
      73.  00:8D36                      
      74.  00:8D36                      
     180   00:8D36                      
     181   00:8D36                      
     182   00:8D36                      	
     183   00:8D36                      ;;=====================================================
     184   00:8D36                      ;;DEFINICIÓN DE PANTALLAS
     185   00:8D36                      ;;=====================================================		
     186   00:8D36                      	include "pantallas.asm"
       1.  00:8D36                      ;;=====================================================
       2.  00:8D36                      ;;DEFINICIÓN DE PANTALLAS
       3.  00:8D36                      ;;=====================================================		
       4.  00:8D36                      
       5.  00:8D36                      ; bancos 1 y 2 y de pantalla 1 (en realidad es una pantalla de pruebas)
       6.  00:8D36                      tiles_patrones_pantalla11:	
       7.  00:8D36  (0023)              tiles_patrones_pantalla12:	incbin "pan1_23.bank1.bin.chr.pletter"
       8.  00:8D59                      tiles_color_pantalla11:		
       9.  00:8D59  (0018)              tiles_color_pantalla12:		incbin "pan1_23.bank1.bin.clr.pletter"
      10.  00:8D71  (001A)              tiles_mapa_pantalla11:		incbin "pan1_23.bank0.bin.map.pletter"
      11.  00:8D8B  (002A)              tiles_mapa_pantalla12:		incbin "pan1_23.bank1.bin.map.pletter"
      12.  00:8DB5                      
      13.  00:8DB5                      
      14.  00:8DB5                      
      15.  00:8DB5                      
      16.  00:8DB5                      
      17.  00:8DB5                      
      18.  00:8DB5                      ; 3º banco que es la parte de puntos, vidas, mapas, etc... es común
      19.  00:8DB5  (0146)              tiles_patrones_pantalla3:	incbin "pan_33.bin.chr.pletter"
      20.  00:8EFB  (0035)              tiles_color_pantalla3:		incbin "pan_33.bin.clr.pletter"
      21.  00:8F30  (006F)              tiles_mapa_pantalla3:		incbin "pan_33.bin.map.pletter"
      22.  00:8F9F                      
      23.  00:8F9F                      ;NOTA: FALTARÍAN PANTALLAS ESPECIALES (POR DEFINIR)
     187   00:8F9F                      	
     188   00:8F9F                      END:

    LABELS
-------------------------------------------------
00:000000D8 X GTTRIG
00:000000D5 X GTSTCK
00:0000F3DB   CLIKSW
00:0000013E X RDVDP
00:00000047   WRTVDP
00:0000005C   LDIRVM
00:00000059 X LDIRMV
00:0000005F   CHGMOD
00:00000041 X DISSCR
00:00000044 X ENASCR
00:00000062   CHGCLR
00:0000F3E9   FORCLR
00:0000F3EA   BAKCLR
00:0000F3EB   BDRCLR
00:000000C3   CLS
00:0000F3DF X RG0SAV
00:0000F3E0   RG1SAV
00:0000F3E1 X RG2SAV
00:0000F3E2 X RG3SAV
00:0000F3E3 X RG4SAV
00:0000F3E4 X RG5SAV
00:0000F3E5 X RG6SAV
00:0000F3E6 X RG7SAV
00:0000F3E7 X STATFL
00:00000099   REGEST
00:00000098   REGESCVDP
00:000000A0   PSG_A
00:000000A1   PSG_W
00:000000A2   PSG_R
00:00000000   CHRTBL
00:00001800   TILMAP
00:00001B00   SPRART
00:00002000   CLRTBL
00:00003800 X SPRTBL
00:00000001 X SI
00:00000000 X NO
00:00000000 X COLTRASP
00:00000001   COLNEGRO
00:00000002 X COLVERDE
00:00000003 X COLVERCLA
00:00000004 X COLAZULOSC
00:00000005 X COLAZULLA
00:00000006   COLROJOOSC
00:00000007 X COLCYAN
00:00000008   COLROJO
00:00000009 X COLROJOCLA
00:0000000A X COLAMAROSC
00:0000000B X COLAMARCLA
00:0000000C X COLVERDOSC
00:0000000D X COLMAGENTA
00:0000000E X COLGRIS
00:0000000F   COLBLANCO
00:000002F8   POSMAPLIN1
00:000002D8   POSMAPLIN2
00:000002B8   POSMAPLIN3
00:00000298   POSMAPLIN4
00:00000278   POSMAPLIN5
00:00000258   POSMAPLIN6
00:00000238   POSMAPLIN7
00:0000000D   POSCARAMAP
00:00000248   POSVIDAS
00:00000011   POSRELIMAP
00:000002C8   POSRELIQ
00:00000288   POSENERG
00:000002B4   POSNIVEL
00:00000238   POSMAPA
00:000001EE   POSPUERABAJ
00:0000008E   POSPUERARRI
00:000000FC   POSPUERDERE
00:000000E1   POSPUERIZQU
00:00000013   TILEMAPPROT
00:00000009   TILEMAPVACI
00:00000010   TILEMAPROJO
00:0000000F   TILEMAPAMAR
00:0000000E   TILEMAPVERD
00:00000008   NMAXVIDREL
00:00000007   NHABNIVEL
00:000000F8 X MAXENERGIA
00:000000D9   TILEENERG8
00:000000BA   TILEENERG7
00:0000009B   TILEENERG6
00:0000007C   TILEENERG5
00:0000005D   TILEENERG4
00:0000003E   TILEENERG3
00:0000001F   TILEENERG2
00:00000000   TILENEGRO
00:00000000 X LIMPANTIZQ
00:000000FF   LIMPANTDER
00:00000000 X LIMPANTARR
00:00000080   LIMPANTABA
00:00000006 X BASEMAPY
00:00000003 X BASEMAPX
00:0000000A X RETARDOREL
00:00008000   START
00:00008023   loop_principal
00:0000802A X mira_pinta_puertas
00:00008033   fin_mira_pinta_puertas
00:00008039 X fin_programa_principal
00:00008039   efecto_imagen_tira_reliquia
00:0000803C   efecto_imagen_tira_reliquia.parpadea_fondo
00:00008053 X fin_efecto_imagen_tira_reliquia
00:00008053   inicializa_variables_pruebas
00:00008076 X fin_inicializa_variables_pruebas
00:00008077   inicializa_niveles
00:00008086   inicializa_niveles.bucle_borra_hab
00:0000808B X fin_iniciliza_niveles
00:0000808C   actualiza_marcador_vidas
00:00008091   loop_marcador_caras_negro
00:00008096 X fin_loop_marcador_caras_negro
00:0000809F   loop_marcador_caras
00:000080A4 X fin_loop_marcador_caras
00:000080A4 X fin_actualiza_marcador_vidas
00:000080A5   actualiza_buffer_reliquias
00:000080AB   loop_buffer_reliquias_negro
00:000080B8   loop_buffer_reliquias
00:000080BD X fin_actualiza_buffer_reliquias
00:000080BE   localiza_info_habitacion
00:000080CB   localiza_info_habitacion.primer_producto
00:000080D7   localiza_info_habitacion.segundo_producto
00:000080DA X localiza_info_habitacion.fin_seg_prod
00:000080DE   localiza_info_habitacion.no_suma_niveles_previos
00:000080F1   localiza_info_habitacion.situa_columna
00:00008103 X fin_localiza_info_habitacion
00:00008104   color_pantalla
00:00008115 X fin_color_pantalla
00:00008115   sub_preparapantalla
00:00008115 X elimina_clic
00:00008119 X fin_elimina_clic
00:00008119 X limpia_pantalla
00:0000811D X fin_limpia_pantalla
00:00008123 X screen2
00:00008128 X sprites_16_16
00:00008136 X fin_sub_preparapantalla
00:00008136   pinta_pantalla_completa
00:0000813C X fin_pinta_pantalla_completa
00:0000813D   pinta_parte_superior_pantalla
00:00008173 X fin_pinta_parte_superior_pantalla
00:00008174   pinta_parte_inferior_pantalla
00:0000818F X fin_pinta_parte_inferior_pantalla
00:0000818F   pinta_vidas
00:0000819E X fin_pinta_vidas
00:0000819E   pinta_reliquias
00:000081AD X fin_pinta_reliquias
00:000081AD   pinta_nivel
00:000081B9 X fin_pinta_nivel
00:000081BA   pinta_tile_suelto
00:000081C7 X fin_pinta_tile_suelto
00:000081C8   mira_pinta_energia
00:000081CE X pinta_ener
00:000081CE X pinta_ener_tile_8
00:000081DA   pinta_ener_tile_8_negro
00:000081DB   pinta_ener_tile_7
00:000081E5   pinta_ener_tile_7_negro
00:000081E6   pinta_ener_tile_6
00:000081F0   pinta_ener_tile_6_negro
00:000081F1   pinta_ener_tile_5
00:000081FB   pinta_ener_tile_5_negro
00:000081FC   pinta_ener_tile_4
00:00008206   pinta_ener_tile_4_negro
00:00008207   pinta_ener_tile_3
00:00008211   pinta_ener_tile_3_negro
00:00008212   pinta_ener_tile_2
00:0000821C   pinta_ener_tile_2_negro
00:0000821D   fin_mira_pinta_energia
00:0000821F   pinta_energia
00:0000822E X fin_pinta_energia
00:0000822E   borra_mapa
00:00008284 X fin_borra_mapa
00:00008285   pinta_array
00:00008293   pinta_array.pa_pinta_fila
00:00008294   pinta_array.pa_pinta_columnas
00:000082B7 X fin_pinta_array
00:000082B8   wordaux1
00:000082BA   wordaux2
00:000082BC   pinta_puertas
00:000082DA X fin_pinta_puertas
00:000082DB   pinta_puerta_aba
00:000082F0 X fin_pinta_puerta_aba
00:000082F0   pinta_puerta_arr
00:00008305 X fin_pinta_puerta_arr
00:00008305   pinta_puerta_der
00:0000831A X fin_pinta_puerta_der
00:0000831A   pinta_puerta_izq
00:0000832F X fin_pinta_puerta_izq
00:0000832F   posiciona_en_mapa
00:00008333 X posiciona_en_mapa.sumar_fila
00:0000835D X posiciona_en_mapa.fila_0
00:00008364   posiciona_en_mapa.fila_1
00:0000836B   posiciona_en_mapa.fila_2
00:00008372   posiciona_en_mapa.fila_3
00:00008379   posiciona_en_mapa.fila_4
00:00008380   posiciona_en_mapa.fila_5
00:00008387 X posiciona_en_mapa.fila_6
00:00008387   posiciona_en_mapa.sumar_columna
00:0000839A   pinta_pos_mapa_vacio
00:0000839C   fin_pinta_pos_mapa
00:0000839F X fin_posiciona_en_mapa
00:0000839F   carga_patrones_sprites_nivel1
00:0000846F X fin_carga_patrones_sprites
00:00008470   render_sprites
00:0000847C X fin_actualiza_array_sprites_vram
00:0000847C   vuelca_resultado_puntomira_array
00:000084A1 X vuelca_resultado_puntomira_array.codigo_color_1
00:000084AA   vuelca_resultado_puntomira_array.codigo_color_2
00:000084B3 X fin_vuelca_resultado_puntomira_array
00:000084B3   check_player
00:000084D2 X f
00:000084D3   mueve_arriba
00:000084DE   mueve_arriba.no_decrementa_y
00:000084DF X fin_mueve_arriba
00:000084E0   mueve_derecha
00:000084ED   mueve_derecha.no_incrementa_x
00:000084EE X fin_mueve_derecha
00:000084EF   mueve_abajo
00:000084FC   mueve_abajo.no_incrementa_y
00:000084FD X fin_mueve_abajo
00:000084FE   mueve_izquierda
00:00008509   mueve_izquierda.no_decrementa_x
00:0000850A X fin_mueve_izquierda
00:0000850B   mira_disparo
00:0000850B X mira_disparo.mira_boton_pulsado1
00:00008519   mira_disparo.mira_boton_pulsado2
00:0000852E X fin_mira_disparo
00:0000852E   update_controllers_status
00:00008565   read_joy_0
00:00008579   check_8th_keyboard_row
00:00008587   check_4th_keyboard_row
00:00008595   depack_VRAM
00:000085C2   literal
00:000085C7   loop
00:000085D0 X getlen
00:000085D6   lus
00:000085F3   lenok
00:00008600   mode7
00:00008606   mode6
00:0000860C   mode5
00:00008612   mode4
00:00008618   mode3
00:0000861E   mode2
00:0000862E   offsok
00:00008639   offsok.loop
00:0000865B   getbit
00:0000865F   getbitexx
00:00008665   Depack_out
00:00008667   modes
00:00008675   prota_nivel
00:00008676   prota_vidas
00:00008677   prota_reliquias
00:00008678   prota_pos_mapx
00:00008679   prota_pos_mapy
00:0000867A   prota_energia
00:00000000 X ESTRUCTURA_PUNTOMIRA.posx
00:00000001 X ESTRUCTURA_PUNTOMIRA.posy
00:00000002 X ESTRUCTURA_PUNTOMIRA.escena
00:00000003 X ESTRUCTURA_PUNTOMIRA.velocidad
00:00000004 X ESTRUCTURA_PUNTOMIRA.boton2_pressed
00:00000005 X ESTRUCTURA_PUNTOMIRA.pm_aux1
00:00000006 X ESTRUCTURA_PUNTOMIRA.pm_aux2
00:00000007 X ESTRUCTURA_PUNTOMIRA.pm_aux3
00:00000008 X ESTRUCTURA_PUNTOMIRA.pm_aux4
00:00000009 X ESTRUCTURA_PUNTOMIRA.pm_aux5
00:0000000A X ESTRUCTURA_PUNTOMIRA.pm_aux6
00:0000000B X ESTRUCTURA_PUNTOMIRA.pm_aux7
00:0000000C X ESTRUCTURA_PUNTOMIRA.pm_aux8
00:0000000D X ESTRUCTURA_PUNTOMIRA.pm_aux9
00:0000000E X ESTRUCTURA_PUNTOMIRA.pm_aux10
00:0000000F X ESTRUCTURA_PUNTOMIRA.pm_aux11
00:00000010 X ESTRUCTURA_PUNTOMIRA
00:00000000 X ESTRUCTURA_ENEMIGO.tipo
00:00000001 X ESTRUCTURA_ENEMIGO.posx
00:00000002 X ESTRUCTURA_ENEMIGO.posy
00:00000003 X ESTRUCTURA_ENEMIGO.color
00:00000004 X ESTRUCTURA_ENEMIGO.escena
00:00000005 X ESTRUCTURA_ENEMIGO.contador_siguiente_escena
00:00000006 X ESTRUCTURA_ENEMIGO.reset_contador
00:00000007 X ESTRUCTURA_ENEMIGO.dano
00:00000008 X ESTRUCTURA_ENEMIGO.energia
00:00000009 X ESTRUCTURA_ENEMIGO.ver_hor
00:0000000A X ESTRUCTURA_ENEMIGO.manejador_dibujo
00:0000000C X ESTRUCTURA_ENEMIGO.en_aux3
00:0000000D X ESTRUCTURA_ENEMIGO.en_aux4
00:0000000E   ESTRUCTURA_ENEMIGO
00:00000000 X ESTRUCTURA_EXTRA.tipo
00:00000001 X ESTRUCTURA_EXTRA.posx
00:00000002 X ESTRUCTURA_EXTRA.posy
00:00000003 X ESTRUCTURA_EXTRA.color
00:00000004 X ESTRUCTURA_EXTRA.contador
00:00000005 X ESTRUCTURA_EXTRA.en_aux1
00:00000006 X ESTRUCTURA_EXTRA.en_aux2
00:00000007 X ESTRUCTURA_EXTRA.en_aux3
00:00000008 X ESTRUCTURA_EXTRA.en_aux4
00:00000009 X ESTRUCTURA_EXTRA.en_aux5
00:0000000A X ESTRUCTURA_EXTRA.en_aux6
00:0000000B X ESTRUCTURA_EXTRA.en_aux7
00:0000000C X ESTRUCTURA_EXTRA.en_aux8
00:0000000D X ESTRUCTURA_EXTRA.en_aux9
00:0000000E X ESTRUCTURA_EXTRA.en_aux10
00:0000000F X ESTRUCTURA_EXTRA.en_aux11
00:00000010 X ESTRUCTURA_EXTRA
00:0000867B X sprites_pantantalla
00:0000867B   sprite_punto_mira_1
00:0000869B   sprite_punto_mira_2
00:000086BB   sprite_punto_mira_1_mejorado
00:000086DB   sprite_punto_mira_2_mejorado
00:000086FB   sprite_reliquia
00:0000871B X sprite_vida_extra
00:0000873B   sprite_planta
00:0000875B   sprite_ballesta_mejorada
00:0000877B   sprite_ciempies1
00:0000879B   sprite_ciempies2
00:000087BB   sprite_arana1
00:000087DB   sprite_arana2
00:000087FB   sprite_serpiente1
00:0000881B   sprite_serpiente2
00:0000883B   sprite_murcielago1
00:0000885B   sprite_murcielago2
00:0000887B   sprite_explosion
00:0000889B   habitacion_actual
00:0000889D   habitaciones_juego
00:0000889D X habitaciones_nivel0
00:0000890D X habitaciones_nivel1
00:0000897D X habitaciones_nivel2
00:000089ED X habitaciones_nivel3
00:00008A5D X habitaciones_nivel4
00:00008ACD X habitaciones_nivel5
00:00008B3D X habitaciones_nivel6
00:00008BAD   color_base
00:00008BB0   color_bomba1
00:00008BB3   color_bomba2
00:00008BB6 X prota
00:00008BB6   prota.posx
00:00008BB7   prota.posy
00:00008BB8   prota.escena
00:00008BB9 X prota.velocidad
00:00008BBA X prota.boton2_pressed
00:00008BBB X prota.pm_aux1
00:00008BBC X prota.pm_aux2
00:00008BBD X prota.pm_aux3
00:00008BBE X prota.pm_aux4
00:00008BBF X prota.pm_aux5
00:00008BC0 X prota.pm_aux6
00:00008BC1 X prota.pm_aux7
00:00008BC2 X prota.pm_aux8
00:00008BC3 X prota.pm_aux9
00:00008BC4 X prota.pm_aux10
00:00008BC5 X prota.pm_aux11
00:00008BC6   array_aux_vidas
00:00008BCE   array_aux_reliquias
00:00008BD6   array_aux_energia
00:00008BDD   ultimo_pos_array_aux_energia
00:00008BDE   array_aux_mapa_limpiar
00:00008BE5   actualiza_puertas_sn
00:00008BE6   array_puerta_arriba
00:00008BE6 X array_puerta_arriba1
00:00008BEA X array_puerta_arriba2
00:00008BEE X array_puerta_arriba3
00:00008BF2 X array_puerta_arriba4
00:00008BF6 X array_puerta_arriba5
00:00008BFA   array_puerta_derecha
00:00008BFA X array_puerta_derecha1
00:00008BFD X array_puerta_derecha2
00:00008C00 X array_puerta_derecha3
00:00008C03 X array_puerta_derecha4
00:00008C06 X array_puerta_derecha5
00:00008C09 X array_puerta_derecha6
00:00008C0C X array_puerta_derecha7
00:00008C0F   array_puerta_abajo
00:00008C13   array_puerta_izquierda
00:00008C13 X array_puerta_izquierda1
00:00008C16 X array_puerta_izquierda2
00:00008C19 X array_puerta_izquierda3
00:00008C1C X array_puerta_izquierda4
00:00008C1F X array_puerta_izquierda5
00:00008C22 X array_puerta_izquierda6
00:00008C25 X array_puerta_izquierda7
00:00008C28   array_sprites
00:00008C28   array_sprites_pm
00:00008C30 X array_sprites_enem
00:00008CA8 X lista_enemigos
00:00008D34 X puntero_array_atrib_array_VRAM
00:00008D36   tiles_patrones_pantalla11
00:00008D36   tiles_patrones_pantalla12
00:00008D59   tiles_color_pantalla11
00:00008D59   tiles_color_pantalla12
00:00008D71   tiles_mapa_pantalla11
00:00008D8B   tiles_mapa_pantalla12
00:00008DB5   tiles_patrones_pantalla3
00:00008EFB   tiles_color_pantalla3
00:00008F30   tiles_mapa_pantalla3
00:00008F9F   END


 Output: t4.out
-------------------------------------------------

 Page: 00
  Org: 00008000  Size: *  Used: 00000000

    No output

 Output: t4.bin
-------------------------------------------------

 Page: 00
  Org: 00008000  Size: *  Used: 00000FA6

   Address   Length Align   Label
   00008000    4006         START
